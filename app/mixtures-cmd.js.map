{"version":3,"file":"mixtures-cmd.js","mappings":"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ACA,8SACA,iCACA,0SACA,uSACA,GACA,uDACA,oSACA,4PACA,0aACA,0GACA,0DACA,0yBACA,2DACA,wdACA,waACA,wHACA,yCACA,8BACA,idACA,qCACA,6NACA,qFACA,0QACA,gZACA,wCACA,6KACA,qGACA,8BACA,uJACA,8FACA,sOACA,sHACA,+LACA,gVACA,+fACA,2RACA,sHACA,+HACA,8IACA,yTACA,mJACA,mTACA,iIACA,2jBACA,gGACA,yGACA,wHACA,6HACA,8FACA,uGACA,qHACA,0HACA,2SACA,sSACA,mYACA,6YACA,2ZACA,skBACA,gaACA,gHACA,6hBACA,+RACA,ySACA,uTACA,4TACA,6GACA,qRACA,sdACA,qdACA,8dACA,4eACA,wpBACA,ifACA,8oBACA,mtBACA,odACA,iUACA,0UACA,wVACA,6VACA,0DACA,mEACA,iFACA,sFACA,+cACA,sYACA,qRACA,8RACA,4SACA,udACA,iTACA,sFACA,6YACA,wMACA,iNACA,+NACA,oOACA,8GACA,2SACA,kEACA,uCACA,gGACA,8HACA,8BACA,wGACA,uGACA,sGACA,2YACA,4GACA,kWACA,yHACA,0FACA,yaACA,4CACA,iEACA,oEACA,qEACA,mEACA,mYACA,kEACA,iFACA,uDACA,4FACA,uEACA,0FACA,uWACA,qDACA,uRACA,yFACA,sDACA,wEACA,ydACA,wGACA,8RACA,8TACA,0HACA,gIACA,0TACA,ohBACA,gNACA,kEACA,uSACA,sRACA,meACA,0EACA,mXACA,+eACA,iYACA,4KACA,gcACA,8BACA,oLACA,8DACA,kKACA,iEACA,okBACA,wPACA,kDACA,6RACA,uWACA,wQACA,kDACA,yMACA,2UACA,+FACA,uRACA,+gBACA,sFACA,kQACA,6RACA,6OACA,mjBACA,6cACA,iEACA,2EACA,4FACA,iCACA,0CACA,8BACA,0EACA,8hBACA,iRACA,qcACA,gIACA,6FACA,6FAEJn7E,KAAKo7E,UAAY,CACb,GAAI,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,IAAK,IAAK,IAA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IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IA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","sources":["webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/get-electron-binding.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/module-names.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/type-utils.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/callbacks-registry.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/index.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/remote.js","webpack://Mixtures/./node_modules/@electron/remote/renderer/index.js","webpack://Mixtures/./node_modules/electron/index.js","webpack://Mixtures/./node_modules/stream-chain/index.js","webpack://Mixtures/./node_modules/stream-json/Assembler.js","webpack://Mixtures/./node_modules/stream-json/Parser.js","webpack://Mixtures/./node_modules/stream-json/streamers/StreamArray.js","webpack://Mixtures/./node_modules/stream-json/streamers/StreamBase.js","webpack://Mixtures/./node_modules/stream-json/utils/Utf8Stream.js","webpack://Mixtures/./node_modules/stream-json/utils/withParser.js","webpack://Mixtures/external node-commonjs \"child_process\"","webpack://Mixtures/external node-commonjs \"events\"","webpack://Mixtures/external node-commonjs \"fs\"","webpack://Mixtures/external node-commonjs \"path\"","webpack://Mixtures/external node-commonjs \"process\"","webpack://Mixtures/external node-commonjs \"stream\"","webpack://Mixtures/external node-commonjs \"string_decoder\"","webpack://Mixtures/webpack/bootstrap","webpack://Mixtures/webpack/runtime/define property getters","webpack://Mixtures/webpack/runtime/hasOwnProperty shorthand","webpack://Mixtures/webpack/runtime/make namespace object","webpack://Mixtures/./node_modules/webmolkit/util/Vec.js","webpack://Mixtures/./node_modules/webmolkit/mol/Chemistry.js","webpack://Mixtures/./node_modules/webmolkit/util/Matrix.js","webpack://Mixtures/./node_modules/webmolkit/util/Triangulation2D.js","webpack://Mixtures/./node_modules/webmolkit/util/Geom.js","webpack://Mixtures/./node_modules/webmolkit/util/XML.js","webpack://Mixtures/./node_modules/webmolkit/util/dom.js","webpack://Mixtures/./node_modules/webmolkit/util/util.js","webpack://Mixtures/./node_modules/webmolkit/mol/Graph.js","webpack://Mixtures/./node_modules/webmolkit/calc/ResonanceRemover.js","webpack://Mixtures/./node_modules/webmolkit/mol/BondArtifact.js","webpack://Mixtures/./node_modules/webmolkit/ds/DataSheet.js","webpack://Mixtures/./node_modules/webmolkit/mol/ForeignMolecule.js","webpack://Mixtures/./node_modules/webmolkit/mol/PolymerBlock.js","webpack://Mixtures/./node_modules/webmolkit/mol/QueryUtil.js","webpack://Mixtures/./node_modules/webmolkit/mol/StereoGroup.js","webpack://Mixtures/./node_modules/webmolkit/io/MDLReader.js","webpack://Mixtures/./node_modules/webmolkit/io/MDLWriter.js","webpack://Mixtures/./node_modules/webmolkit/io/MoleculeStream.js","webpack://Mixtures/./node_modules/webmolkit/mol/Molecule.js","webpack://Mixtures/./node_modules/webmolkit/mol/CoordUtil.js","webpack://Mixtures/./node_modules/webmolkit/mol/SketchUtil.js","webpack://Mixtures/./node_modules/webmolkit/mol/MolUtil.js","webpack://Mixtures/./src/mixture/InChIDelegate.ts","webpack://Mixtures/./src/nodejs/InChI.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/Rendering.js","webpack://Mixtures/./node_modules/webmolkit/gfx/ArrangeMolecule.js","webpack://Mixtures/./node_modules/webmolkit/mol/PseudoEmbedding.js","webpack://Mixtures/./node_modules/webmolkit/util/FitRotatedEllipse.js","webpack://Mixtures/./node_modules/webmolkit/gfx/FontData.js","webpack://Mixtures/./node_modules/webmolkit/data/OntologyTree.js","webpack://Mixtures/./node_modules/webmolkit/res/data/ontology/units.onto","webpack://Mixtures/./src/mixture/SquarePacking.ts","webpack://Mixtures/./src/mixture/ArrangeMixture.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/MetaVector.js","webpack://Mixtures/./src/mixture/Units.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/DrawMolecule.js","webpack://Mixtures/./src/mixture/DrawMixture.ts","webpack://Mixtures/./node_modules/webmolkit/mol/DotPath.js","webpack://Mixtures/./node_modules/webmolkit/mol/Stereochemistry.js","webpack://Mixtures/./node_modules/webmolkit/mol/MetaMolecule.js","webpack://Mixtures/./node_modules/webmolkit/calc/CircularFingerprints.js","webpack://Mixtures/./node_modules/webmolkit/io/DataSheetStream.js","webpack://Mixtures/./node_modules/webmolkit/data/AbbrevContainer.js","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/rings.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/termgrp.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/funcgrp.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/protgrp.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/nonplrings.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/largerings.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/crownethers.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/ligmonodent.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/ligbident.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/ligtrident.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/ligmultident.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/cagecmplx.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/aminoacids.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/biomolecules.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/saccharides.ds","webpack://Mixtures/./node_modules/webmolkit/sketcher/MetalLigate.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/TemplateFusion.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/MoleculeActivity.js","webpack://Mixtures/./src/mixture/NormMixture.ts","webpack://Mixtures/./src/mixture/Mixture.ts","webpack://Mixtures/./src/mixture/Mixfile.ts","webpack://Mixtures/./src/mixture/ExportMInChI.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/ArrangeMeasurement.js","webpack://Mixtures/./src/mixture/MixtureCollection.ts","webpack://Mixtures/./src/cmdline/RenderHTML.ts","webpack://Mixtures/./node_modules/webmolkit/aspect/Aspect.js","webpack://Mixtures/./node_modules/webmolkit/aspect/AspectList.js","webpack://Mixtures/./node_modules/webmolkit/aspect/AssayProvenance.js","webpack://Mixtures/./node_modules/webmolkit/aspect/MeasurementData.js","webpack://Mixtures/./node_modules/webmolkit/aspect/Mixture.js","webpack://Mixtures/./src/cmdline/TableExtract.ts","webpack://Mixtures/./src/mixture/ExportSDFile.ts","webpack://Mixtures/./src/mixture/ImportSDFile.ts","webpack://Mixtures/./src/cmdline/TransformMixtures.ts","webpack://Mixtures/./src/cmdline/Console.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getElectronBinding = void 0;\nconst getElectronBinding = (name) => {\n    if (process._linkedBinding) {\n        return process._linkedBinding('electron_common_' + name);\n    }\n    else if (process.electronBinding) {\n        return process.electronBinding(name);\n    }\n    else {\n        return null;\n    }\n};\nexports.getElectronBinding = getElectronBinding;\n","\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.browserModuleNames = exports.commonModuleNames = void 0;\nconst get_electron_binding_1 = require(\"./get-electron-binding\");\nexports.commonModuleNames = [\n    'clipboard',\n    'nativeImage',\n    'shell',\n];\nexports.browserModuleNames = [\n    'app',\n    'autoUpdater',\n    'BaseWindow',\n    'BrowserView',\n    'BrowserWindow',\n    'contentTracing',\n    'crashReporter',\n    'dialog',\n    'globalShortcut',\n    'ipcMain',\n    'inAppPurchase',\n    'Menu',\n    'MenuItem',\n    'nativeTheme',\n    'net',\n    'netLog',\n    'MessageChannelMain',\n    'Notification',\n    'powerMonitor',\n    'powerSaveBlocker',\n    'protocol',\n    'pushNotifications',\n    'safeStorage',\n    'screen',\n    'session',\n    'ShareMenu',\n    'systemPreferences',\n    'TopLevelWindow',\n    'TouchBar',\n    'Tray',\n    'utilityProcess',\n    'View',\n    'webContents',\n    'WebContentsView',\n    'webFrameMain',\n].concat(exports.commonModuleNames);\nconst features = get_electron_binding_1.getElectronBinding('features');\nif (((_a = features === null || features === void 0 ? void 0 : features.isDesktopCapturerEnabled) === null || _a === void 0 ? void 0 : _a.call(features)) !== false) {\n    exports.browserModuleNames.push('desktopCapturer');\n}\nif (((_b = features === null || features === void 0 ? void 0 : features.isViewApiEnabled) === null || _b === void 0 ? void 0 : _b.call(features)) !== false) {\n    exports.browserModuleNames.push('ImageView');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserialize = exports.serialize = exports.isSerializableObject = exports.isPromise = void 0;\nconst electron_1 = require(\"electron\");\nfunction isPromise(val) {\n    return (val &&\n        val.then &&\n        val.then instanceof Function &&\n        val.constructor &&\n        val.constructor.reject &&\n        val.constructor.reject instanceof Function &&\n        val.constructor.resolve &&\n        val.constructor.resolve instanceof Function);\n}\nexports.isPromise = isPromise;\nconst serializableTypes = [\n    Boolean,\n    Number,\n    String,\n    Date,\n    Error,\n    RegExp,\n    ArrayBuffer\n];\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm#Supported_types\nfunction isSerializableObject(value) {\n    return value === null || ArrayBuffer.isView(value) || serializableTypes.some(type => value instanceof type);\n}\nexports.isSerializableObject = isSerializableObject;\nconst objectMap = function (source, mapper) {\n    const sourceEntries = Object.entries(source);\n    const targetEntries = sourceEntries.map(([key, val]) => [key, mapper(val)]);\n    return Object.fromEntries(targetEntries);\n};\nfunction serializeNativeImage(image) {\n    const representations = [];\n    const scaleFactors = image.getScaleFactors();\n    // Use Buffer when there's only one representation for better perf.\n    // This avoids compressing to/from PNG where it's not necessary to\n    // ensure uniqueness of dataURLs (since there's only one).\n    if (scaleFactors.length === 1) {\n        const scaleFactor = scaleFactors[0];\n        const size = image.getSize(scaleFactor);\n        const buffer = image.toBitmap({ scaleFactor });\n        representations.push({ scaleFactor, size, buffer });\n    }\n    else {\n        // Construct from dataURLs to ensure that they are not lost in creation.\n        for (const scaleFactor of scaleFactors) {\n            const size = image.getSize(scaleFactor);\n            const dataURL = image.toDataURL({ scaleFactor });\n            representations.push({ scaleFactor, size, dataURL });\n        }\n    }\n    return { __ELECTRON_SERIALIZED_NativeImage__: true, representations };\n}\nfunction deserializeNativeImage(value) {\n    const image = electron_1.nativeImage.createEmpty();\n    // Use Buffer when there's only one representation for better perf.\n    // This avoids compressing to/from PNG where it's not necessary to\n    // ensure uniqueness of dataURLs (since there's only one).\n    if (value.representations.length === 1) {\n        const { buffer, size, scaleFactor } = value.representations[0];\n        const { width, height } = size;\n        image.addRepresentation({ buffer, scaleFactor, width, height });\n    }\n    else {\n        // Construct from dataURLs to ensure that they are not lost in creation.\n        for (const rep of value.representations) {\n            const { dataURL, size, scaleFactor } = rep;\n            const { width, height } = size;\n            image.addRepresentation({ dataURL, scaleFactor, width, height });\n        }\n    }\n    return image;\n}\nfunction serialize(value) {\n    if (value && value.constructor && value.constructor.name === 'NativeImage') {\n        return serializeNativeImage(value);\n    }\n    if (Array.isArray(value)) {\n        return value.map(serialize);\n    }\n    else if (isSerializableObject(value)) {\n        return value;\n    }\n    else if (value instanceof Object) {\n        return objectMap(value, serialize);\n    }\n    else {\n        return value;\n    }\n}\nexports.serialize = serialize;\nfunction deserialize(value) {\n    if (value && value.__ELECTRON_SERIALIZED_NativeImage__) {\n        return deserializeNativeImage(value);\n    }\n    else if (Array.isArray(value)) {\n        return value.map(deserialize);\n    }\n    else if (isSerializableObject(value)) {\n        return value;\n    }\n    else if (value instanceof Object) {\n        return objectMap(value, deserialize);\n    }\n    else {\n        return value;\n    }\n}\nexports.deserialize = deserialize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallbacksRegistry = void 0;\nclass CallbacksRegistry {\n    constructor() {\n        this.nextId = 0;\n        this.callbacks = {};\n        this.callbackIds = new WeakMap();\n        this.locationInfo = new WeakMap();\n    }\n    add(callback) {\n        // The callback is already added.\n        let id = this.callbackIds.get(callback);\n        if (id != null)\n            return id;\n        id = this.nextId += 1;\n        this.callbacks[id] = callback;\n        this.callbackIds.set(callback, id);\n        // Capture the location of the function and put it in the ID string,\n        // so that release errors can be tracked down easily.\n        const regexp = /at (.*)/gi;\n        const stackString = (new Error()).stack;\n        if (!stackString)\n            return id;\n        let filenameAndLine;\n        let match;\n        while ((match = regexp.exec(stackString)) !== null) {\n            const location = match[1];\n            if (location.includes('(native)'))\n                continue;\n            if (location.includes('(<anonymous>)'))\n                continue;\n            if (location.includes('callbacks-registry.js'))\n                continue;\n            if (location.includes('remote.js'))\n                continue;\n            if (location.includes('@electron/remote/dist'))\n                continue;\n            const ref = /([^/^)]*)\\)?$/gi.exec(location);\n            if (ref)\n                filenameAndLine = ref[1];\n            break;\n        }\n        this.locationInfo.set(callback, filenameAndLine);\n        return id;\n    }\n    get(id) {\n        return this.callbacks[id] || function () { };\n    }\n    getLocation(callback) {\n        return this.locationInfo.get(callback);\n    }\n    apply(id, ...args) {\n        return this.get(id).apply(global, ...args);\n    }\n    remove(id) {\n        const callback = this.callbacks[id];\n        if (callback) {\n            this.callbackIds.delete(callback);\n            delete this.callbacks[id];\n        }\n    }\n}\nexports.CallbacksRegistry = CallbacksRegistry;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nif (process.type === 'browser')\n    throw new Error(`\"@electron/remote\" cannot be required in the browser process. Instead require(\"@electron/remote/main\").`);\n__exportStar(require(\"./remote\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createFunctionWithReturnValue = exports.getGlobal = exports.getCurrentWebContents = exports.getCurrentWindow = exports.getBuiltin = void 0;\nconst callbacks_registry_1 = require(\"./callbacks-registry\");\nconst type_utils_1 = require(\"../common/type-utils\");\nconst electron_1 = require(\"electron\");\nconst module_names_1 = require(\"../common/module-names\");\nconst get_electron_binding_1 = require(\"../common/get-electron-binding\");\nconst { Promise } = global;\nconst callbacksRegistry = new callbacks_registry_1.CallbacksRegistry();\nconst remoteObjectCache = new Map();\nconst finalizationRegistry = new FinalizationRegistry((id) => {\n    const ref = remoteObjectCache.get(id);\n    if (ref !== undefined && ref.deref() === undefined) {\n        remoteObjectCache.delete(id);\n        electron_1.ipcRenderer.send(\"REMOTE_BROWSER_DEREFERENCE\" /* BROWSER_DEREFERENCE */, contextId, id, 0);\n    }\n});\nconst electronIds = new WeakMap();\nconst isReturnValue = new WeakSet();\nfunction getCachedRemoteObject(id) {\n    const ref = remoteObjectCache.get(id);\n    if (ref !== undefined) {\n        const deref = ref.deref();\n        if (deref !== undefined)\n            return deref;\n    }\n}\nfunction setCachedRemoteObject(id, value) {\n    const wr = new WeakRef(value);\n    remoteObjectCache.set(id, wr);\n    finalizationRegistry.register(value, id);\n    return value;\n}\nfunction getContextId() {\n    const v8Util = get_electron_binding_1.getElectronBinding('v8_util');\n    if (v8Util) {\n        return v8Util.getHiddenValue(global, 'contextId');\n    }\n    else {\n        throw new Error('Electron >=v13.0.0-beta.6 required to support sandboxed renderers');\n    }\n}\n// An unique ID that can represent current context.\nconst contextId = process.contextId || getContextId();\n// Notify the main process when current context is going to be released.\n// Note that when the renderer process is destroyed, the message may not be\n// sent, we also listen to the \"render-view-deleted\" event in the main process\n// to guard that situation.\nprocess.on('exit', () => {\n    const command = \"REMOTE_BROWSER_CONTEXT_RELEASE\" /* BROWSER_CONTEXT_RELEASE */;\n    electron_1.ipcRenderer.send(command, contextId);\n});\nconst IS_REMOTE_PROXY = Symbol('is-remote-proxy');\n// Convert the arguments object into an array of meta data.\nfunction wrapArgs(args, visited = new Set()) {\n    const valueToMeta = (value) => {\n        // Check for circular reference.\n        if (visited.has(value)) {\n            return {\n                type: 'value',\n                value: null\n            };\n        }\n        if (value && value.constructor && value.constructor.name === 'NativeImage') {\n            return { type: 'nativeimage', value: type_utils_1.serialize(value) };\n        }\n        else if (Array.isArray(value)) {\n            visited.add(value);\n            const meta = {\n                type: 'array',\n                value: wrapArgs(value, visited)\n            };\n            visited.delete(value);\n            return meta;\n        }\n        else if (value instanceof Buffer) {\n            return {\n                type: 'buffer',\n                value\n            };\n        }\n        else if (type_utils_1.isSerializableObject(value)) {\n            return {\n                type: 'value',\n                value\n            };\n        }\n        else if (typeof value === 'object') {\n            if (type_utils_1.isPromise(value)) {\n                return {\n                    type: 'promise',\n                    then: valueToMeta(function (onFulfilled, onRejected) {\n                        value.then(onFulfilled, onRejected);\n                    })\n                };\n            }\n            else if (electronIds.has(value)) {\n                return {\n                    type: 'remote-object',\n                    id: electronIds.get(value)\n                };\n            }\n            const meta = {\n                type: 'object',\n                name: value.constructor ? value.constructor.name : '',\n                members: []\n            };\n            visited.add(value);\n            for (const prop in value) { // eslint-disable-line guard-for-in\n                meta.members.push({\n                    name: prop,\n                    value: valueToMeta(value[prop])\n                });\n            }\n            visited.delete(value);\n            return meta;\n        }\n        else if (typeof value === 'function' && isReturnValue.has(value)) {\n            return {\n                type: 'function-with-return-value',\n                value: valueToMeta(value())\n            };\n        }\n        else if (typeof value === 'function') {\n            return {\n                type: 'function',\n                id: callbacksRegistry.add(value),\n                location: callbacksRegistry.getLocation(value),\n                length: value.length\n            };\n        }\n        else {\n            return {\n                type: 'value',\n                value\n            };\n        }\n    };\n    return args.map(valueToMeta);\n}\n// Populate object's members from descriptors.\n// The |ref| will be kept referenced by |members|.\n// This matches |getObjectMemebers| in rpc-server.\nfunction setObjectMembers(ref, object, metaId, members) {\n    if (!Array.isArray(members))\n        return;\n    for (const member of members) {\n        if (Object.prototype.hasOwnProperty.call(object, member.name))\n            continue;\n        const descriptor = { enumerable: member.enumerable };\n        if (member.type === 'method') {\n            const remoteMemberFunction = function (...args) {\n                let command;\n                if (this && this.constructor === remoteMemberFunction) {\n                    command = \"REMOTE_BROWSER_MEMBER_CONSTRUCTOR\" /* BROWSER_MEMBER_CONSTRUCTOR */;\n                }\n                else {\n                    command = \"REMOTE_BROWSER_MEMBER_CALL\" /* BROWSER_MEMBER_CALL */;\n                }\n                const ret = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name, wrapArgs(args));\n                return metaToValue(ret);\n            };\n            let descriptorFunction = proxyFunctionProperties(remoteMemberFunction, metaId, member.name);\n            descriptor.get = () => {\n                descriptorFunction.ref = ref; // The member should reference its object.\n                return descriptorFunction;\n            };\n            // Enable monkey-patch the method\n            descriptor.set = (value) => {\n                descriptorFunction = value;\n                return value;\n            };\n            descriptor.configurable = true;\n        }\n        else if (member.type === 'get') {\n            descriptor.get = () => {\n                const command = \"REMOTE_BROWSER_MEMBER_GET\" /* BROWSER_MEMBER_GET */;\n                const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name);\n                return metaToValue(meta);\n            };\n            if (member.writable) {\n                descriptor.set = (value) => {\n                    const args = wrapArgs([value]);\n                    const command = \"REMOTE_BROWSER_MEMBER_SET\" /* BROWSER_MEMBER_SET */;\n                    const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name, args);\n                    if (meta != null)\n                        metaToValue(meta);\n                    return value;\n                };\n            }\n        }\n        Object.defineProperty(object, member.name, descriptor);\n    }\n}\n// Populate object's prototype from descriptor.\n// This matches |getObjectPrototype| in rpc-server.\nfunction setObjectPrototype(ref, object, metaId, descriptor) {\n    if (descriptor === null)\n        return;\n    const proto = {};\n    setObjectMembers(ref, proto, metaId, descriptor.members);\n    setObjectPrototype(ref, proto, metaId, descriptor.proto);\n    Object.setPrototypeOf(object, proto);\n}\n// Wrap function in Proxy for accessing remote properties\nfunction proxyFunctionProperties(remoteMemberFunction, metaId, name) {\n    let loaded = false;\n    // Lazily load function properties\n    const loadRemoteProperties = () => {\n        if (loaded)\n            return;\n        loaded = true;\n        const command = \"REMOTE_BROWSER_MEMBER_GET\" /* BROWSER_MEMBER_GET */;\n        const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, name);\n        setObjectMembers(remoteMemberFunction, remoteMemberFunction, meta.id, meta.members);\n    };\n    return new Proxy(remoteMemberFunction, {\n        set: (target, property, value) => {\n            if (property !== 'ref')\n                loadRemoteProperties();\n            target[property] = value;\n            return true;\n        },\n        get: (target, property) => {\n            if (property === IS_REMOTE_PROXY)\n                return true;\n            if (!Object.prototype.hasOwnProperty.call(target, property))\n                loadRemoteProperties();\n            const value = target[property];\n            if (property === 'toString' && typeof value === 'function') {\n                return value.bind(target);\n            }\n            return value;\n        },\n        ownKeys: (target) => {\n            loadRemoteProperties();\n            return Object.getOwnPropertyNames(target);\n        },\n        getOwnPropertyDescriptor: (target, property) => {\n            const descriptor = Object.getOwnPropertyDescriptor(target, property);\n            if (descriptor)\n                return descriptor;\n            loadRemoteProperties();\n            return Object.getOwnPropertyDescriptor(target, property);\n        }\n    });\n}\n// Convert meta data from browser into real value.\nfunction metaToValue(meta) {\n    if (!meta)\n        return {};\n    if (meta.type === 'value') {\n        return meta.value;\n    }\n    else if (meta.type === 'array') {\n        return meta.members.map((member) => metaToValue(member));\n    }\n    else if (meta.type === 'nativeimage') {\n        return type_utils_1.deserialize(meta.value);\n    }\n    else if (meta.type === 'buffer') {\n        return Buffer.from(meta.value.buffer, meta.value.byteOffset, meta.value.byteLength);\n    }\n    else if (meta.type === 'promise') {\n        return Promise.resolve({ then: metaToValue(meta.then) });\n    }\n    else if (meta.type === 'error') {\n        return metaToError(meta);\n    }\n    else if (meta.type === 'exception') {\n        if (meta.value.type === 'error') {\n            throw metaToError(meta.value);\n        }\n        else {\n            throw new Error(`Unexpected value type in exception: ${meta.value.type}`);\n        }\n    }\n    else {\n        let ret;\n        if ('id' in meta) {\n            const cached = getCachedRemoteObject(meta.id);\n            if (cached !== undefined) {\n                return cached;\n            }\n        }\n        // A shadow class to represent the remote function object.\n        if (meta.type === 'function') {\n            const remoteFunction = function (...args) {\n                let command;\n                if (this && this.constructor === remoteFunction) {\n                    command = \"REMOTE_BROWSER_CONSTRUCTOR\" /* BROWSER_CONSTRUCTOR */;\n                }\n                else {\n                    command = \"REMOTE_BROWSER_FUNCTION_CALL\" /* BROWSER_FUNCTION_CALL */;\n                }\n                const obj = electron_1.ipcRenderer.sendSync(command, contextId, meta.id, wrapArgs(args));\n                return metaToValue(obj);\n            };\n            ret = remoteFunction;\n        }\n        else {\n            ret = {};\n        }\n        setObjectMembers(ret, ret, meta.id, meta.members);\n        setObjectPrototype(ret, ret, meta.id, meta.proto);\n        if (ret.constructor && ret.constructor[IS_REMOTE_PROXY]) {\n            Object.defineProperty(ret.constructor, 'name', { value: meta.name });\n        }\n        // Track delegate obj's lifetime & tell browser to clean up when object is GCed.\n        electronIds.set(ret, meta.id);\n        setCachedRemoteObject(meta.id, ret);\n        return ret;\n    }\n}\nfunction metaToError(meta) {\n    const obj = meta.value;\n    for (const { name, value } of meta.members) {\n        obj[name] = metaToValue(value);\n    }\n    return obj;\n}\nfunction hasSenderId(input) {\n    return typeof input.senderId === \"number\";\n}\nfunction handleMessage(channel, handler) {\n    electron_1.ipcRenderer.on(channel, (event, passedContextId, id, ...args) => {\n        if (hasSenderId(event)) {\n            if (event.senderId !== 0 && event.senderId !== undefined) {\n                console.error(`Message ${channel} sent by unexpected WebContents (${event.senderId})`);\n                return;\n            }\n        }\n        if (passedContextId === contextId) {\n            handler(id, ...args);\n        }\n        else {\n            // Message sent to an un-exist context, notify the error to main process.\n            electron_1.ipcRenderer.send(\"REMOTE_BROWSER_WRONG_CONTEXT_ERROR\" /* BROWSER_WRONG_CONTEXT_ERROR */, contextId, passedContextId, id);\n        }\n    });\n}\nconst enableStacks = process.argv.includes('--enable-api-filtering-logging');\nfunction getCurrentStack() {\n    const target = { stack: undefined };\n    if (enableStacks) {\n        Error.captureStackTrace(target, getCurrentStack);\n    }\n    return target.stack;\n}\n// Browser calls a callback in renderer.\nhandleMessage(\"REMOTE_RENDERER_CALLBACK\" /* RENDERER_CALLBACK */, (id, args) => {\n    callbacksRegistry.apply(id, metaToValue(args));\n});\n// A callback in browser is released.\nhandleMessage(\"REMOTE_RENDERER_RELEASE_CALLBACK\" /* RENDERER_RELEASE_CALLBACK */, (id) => {\n    callbacksRegistry.remove(id);\n});\nexports.require = (module) => {\n    const command = \"REMOTE_BROWSER_REQUIRE\" /* BROWSER_REQUIRE */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, module, getCurrentStack());\n    return metaToValue(meta);\n};\n// Alias to remote.require('electron').xxx.\nfunction getBuiltin(module) {\n    const command = \"REMOTE_BROWSER_GET_BUILTIN\" /* BROWSER_GET_BUILTIN */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, module, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getBuiltin = getBuiltin;\nfunction getCurrentWindow() {\n    const command = \"REMOTE_BROWSER_GET_CURRENT_WINDOW\" /* BROWSER_GET_CURRENT_WINDOW */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getCurrentWindow = getCurrentWindow;\n// Get current WebContents object.\nfunction getCurrentWebContents() {\n    const command = \"REMOTE_BROWSER_GET_CURRENT_WEB_CONTENTS\" /* BROWSER_GET_CURRENT_WEB_CONTENTS */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getCurrentWebContents = getCurrentWebContents;\n// Get a global object in browser.\nfunction getGlobal(name) {\n    const command = \"REMOTE_BROWSER_GET_GLOBAL\" /* BROWSER_GET_GLOBAL */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, name, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getGlobal = getGlobal;\n// Get the process object in browser.\nObject.defineProperty(exports, 'process', {\n    enumerable: true,\n    get: () => exports.getGlobal('process')\n});\n// Create a function that will return the specified value when called in browser.\nfunction createFunctionWithReturnValue(returnValue) {\n    const func = () => returnValue;\n    isReturnValue.add(func);\n    return func;\n}\nexports.createFunctionWithReturnValue = createFunctionWithReturnValue;\nconst addBuiltinProperty = (name) => {\n    Object.defineProperty(exports, name, {\n        enumerable: true,\n        get: () => exports.getBuiltin(name)\n    });\n};\nmodule_names_1.browserModuleNames\n    .forEach(addBuiltinProperty);\n","module.exports = require('../dist/src/renderer')\n","const fs = require('fs');\nconst path = require('path');\n\nconst pathFile = path.join(__dirname, 'path.txt');\n\nfunction getElectronPath () {\n  let executablePath;\n  if (fs.existsSync(pathFile)) {\n    executablePath = fs.readFileSync(pathFile, 'utf-8');\n  }\n  if (process.env.ELECTRON_OVERRIDE_DIST_PATH) {\n    return path.join(process.env.ELECTRON_OVERRIDE_DIST_PATH, executablePath || 'electron');\n  }\n  if (executablePath) {\n    return path.join(__dirname, 'dist', executablePath);\n  } else {\n    throw new Error('Electron failed to install correctly, please delete node_modules/electron and try installing again');\n  }\n}\n\nmodule.exports = getElectronPath();\n","'use strict';\n\nconst {Readable, Writable, Duplex, Transform} = require('stream');\n\nconst none = Symbol.for('object-stream.none');\nconst finalSymbol = Symbol.for('object-stream.final');\nconst manySymbol = Symbol.for('object-stream.many');\n\nconst final = value => ({[finalSymbol]: value});\nconst many = values => ({[manySymbol]: values});\n\nconst isFinal = o => o && typeof o == 'object' && finalSymbol in o;\nconst isMany = o => o && typeof o == 'object' && manySymbol in o;\n\nconst getFinalValue = o => o[finalSymbol];\nconst getManyValues = o => o[manySymbol];\n\nconst runAsyncGenerator = async (gen, stream) => {\n  for (;;) {\n    let data = gen.next();\n    if (data && typeof data.then == 'function') {\n      data = await data;\n    }\n    if (data.done) break;\n    let value = data.value;\n    if (value && typeof value.then == 'function') {\n      value = await value;\n    }\n    Chain.sanitize(value, stream);\n  }\n};\n\nconst wrapFunction = fn =>\n  new Transform({\n    writableObjectMode: true,\n    readableObjectMode: true,\n    transform(chunk, encoding, callback) {\n      try {\n        const result = fn.call(this, chunk, encoding);\n        if (result && typeof result.then == 'function') {\n          // thenable\n          result.then(\n            result => (Chain.sanitize(result, this), callback(null)),\n            error => callback(error)\n          );\n          return;\n        }\n        if (result && typeof result.next == 'function') {\n          // generator\n          runAsyncGenerator(result, this).then(\n            () => callback(null),\n            error => callback(error)\n          );\n          return;\n        }\n        Chain.sanitize(result, this);\n        callback(null);\n      } catch (error) {\n        callback(error);\n      }\n    }\n  });\n\nconst wrapArray = fns =>\n  new Transform({\n    writableObjectMode: true,\n    readableObjectMode: true,\n    transform(chunk, encoding, callback) {\n      try {\n        let value = chunk;\n        for (let i = 0; i < fns.length; ++i) {\n          const result = fns[i].call(this, value, encoding);\n          if (result === Chain.none) {\n            callback(null);\n            return;\n          }\n          if (Chain.isFinal(result)) {\n            value = Chain.getFinalValue(result);\n            break;\n          }\n          value = result;\n        }\n        Chain.sanitize(value, this);\n        callback(null);\n      } catch (error) {\n        callback(error);\n      }\n    }\n  });\n\n// is*NodeStream functions taken from https://github.com/nodejs/node/blob/master/lib/internal/streams/utils.js\nconst isReadableNodeStream = obj =>\n  obj &&\n  typeof obj.pipe === 'function' &&\n  typeof obj.on === 'function' &&\n  (!obj._writableState || (typeof obj._readableState === 'object' ? obj._readableState.readable : null) !== false) && // Duplex\n  (!obj._writableState || obj._readableState); // Writable has .pipe.\n\nconst isWritableNodeStream = obj =>\n  obj &&\n  typeof obj.write === 'function' &&\n  typeof obj.on === 'function' &&\n  (!obj._readableState || (typeof obj._writableState === 'object' ? obj._writableState.writable : null) !== false); // Duplex\n\nconst isDuplexNodeStream = obj =>\n  obj && typeof obj.pipe === 'function' && obj._readableState && typeof obj.on === 'function' && typeof obj.write === 'function';\n\nclass Chain extends Duplex {\n  constructor(fns, options) {\n    super(options || {writableObjectMode: true, readableObjectMode: true});\n\n    if (!(fns instanceof Array) || !fns.length) {\n      throw Error(\"Chain's argument should be a non-empty array.\");\n    }\n\n    this.streams = fns\n      .filter(fn => fn)\n      .map((fn, index, fns) => {\n        if (typeof fn === 'function' || fn instanceof Array) return Chain.convertToTransform(fn);\n        if (isDuplexNodeStream(fn) || (!index && isReadableNodeStream(fn)) || (index === fns.length - 1 && isWritableNodeStream(fn))) {\n          return fn;\n        }\n        throw Error('Arguments should be functions, arrays or streams.');\n      })\n      .filter(s => s);\n    this.input = this.streams[0];\n    this.output = this.streams.reduce((output, stream) => (output && output.pipe(stream)) || stream);\n\n    if (!isWritableNodeStream(this.input)) {\n      this._write = (_1, _2, callback) => callback(null);\n      this._final = callback => callback(null); // unavailable in Node 6\n      this.input.on('end', () => this.end());\n    }\n\n    if (isReadableNodeStream(this.output)) {\n      this.output.on('data', chunk => !this.push(chunk) && this.output.pause());\n      this.output.on('end', () => this.push(null));\n    } else {\n      this._read = () => {}; // nop\n      this.resume();\n      this.output.on('finish', () => this.push(null));\n    }\n\n    // connect events\n    if (!options || !options.skipEvents) {\n      this.streams.forEach(stream => stream.on('error', error => this.emit('error', error)));\n    }\n  }\n  _write(chunk, encoding, callback) {\n    let error = null;\n    try {\n      this.input.write(chunk, encoding, e => callback(e || error));\n    } catch (e) {\n      error = e;\n    }\n  }\n  _final(callback) {\n    let error = null;\n    try {\n      this.input.end(null, null, e => callback(e || error));\n    } catch (e) {\n      error = e;\n    }\n  }\n  _read() {\n    this.output.resume();\n  }\n  static make(fns, options) {\n    return new Chain(fns, options);\n  }\n  static sanitize(result, stream) {\n    if (Chain.isFinal(result)) {\n      result = Chain.getFinalValue(result);\n    } else if (Chain.isMany(result)) {\n      result = Chain.getManyValues(result);\n    }\n    if (result !== undefined && result !== null && result !== Chain.none) {\n      if (result instanceof Array) {\n        result.forEach(value => value !== undefined && value !== null && stream.push(value));\n      } else {\n        stream.push(result);\n      }\n    }\n  }\n  static convertToTransform(fn) {\n    if (typeof fn === 'function') return wrapFunction(fn);\n    if (fn instanceof Array) return fn.length ? wrapArray(fn) : null;\n    return null;\n  }\n}\n\nChain.none = none;\nChain.final = final;\nChain.isFinal = isFinal;\nChain.getFinalValue = getFinalValue;\nChain.many = many;\nChain.isMany = isMany;\nChain.getManyValues = getManyValues;\n\nChain.chain = Chain.make;\nChain.make.Constructor = Chain;\n\nmodule.exports = Chain;\n","'use strict';\n\nconst EventEmitter = require('events');\n\nconst startObject = Ctr =>\n  function () {\n    if (this.done) {\n      this.done = false;\n    } else {\n      this.stack.push(this.current, this.key);\n    }\n    this.current = new Ctr();\n    this.key = null;\n  };\n\nclass Assembler extends EventEmitter {\n  static connectTo(stream, options) {\n    return new Assembler(options).connectTo(stream);\n  }\n\n  constructor(options) {\n    super();\n    this.stack = [];\n    this.current = this.key = null;\n    this.done = true;\n    if (options) {\n      this.reviver = typeof options.reviver == 'function' && options.reviver;\n      if (this.reviver) {\n        this.stringValue = this._saveValue = this._saveValueWithReviver;\n      }\n      if (options.numberAsString) {\n        this.numberValue = this.stringValue;\n      }\n    }\n  }\n\n  connectTo(stream) {\n    stream.on('data', chunk => {\n      if (this[chunk.name]) {\n        this[chunk.name](chunk.value);\n        if (this.done) this.emit('done', this);\n      }\n    });\n    return this;\n  }\n\n  get depth() {\n    return (this.stack.length >> 1) + (this.done ? 0 : 1);\n  }\n\n  get path() {\n    const path = [];\n    for (let i = 0; i < this.stack.length; i += 2) {\n      const key = this.stack[i + 1];\n      path.push(key === null ? this.stack[i].length : key);\n    }\n    return path;\n  }\n\n  dropToLevel(level) {\n    if (level < this.depth) {\n      if (level) {\n        const index = (level - 1) << 1;\n        this.current = this.stack[index];\n        this.key = this.stack[index + 1];\n        this.stack.splice(index);\n      } else {\n        this.stack = [];\n        this.current = this.key = null;\n        this.done = true;\n      }\n    }\n    return this;\n  }\n\n  consume(chunk) {\n    this[chunk.name] && this[chunk.name](chunk.value);\n    return this;\n  }\n\n  keyValue(value) {\n    this.key = value;\n  }\n\n  //stringValue() - aliased below to _saveValue()\n\n  numberValue(value) {\n    this._saveValue(parseFloat(value));\n  }\n  nullValue() {\n    this._saveValue(null);\n  }\n  trueValue() {\n    this._saveValue(true);\n  }\n  falseValue() {\n    this._saveValue(false);\n  }\n\n  //startObject() - assigned below\n\n  endObject() {\n    if (this.stack.length) {\n      const value = this.current;\n      this.key = this.stack.pop();\n      this.current = this.stack.pop();\n      this._saveValue(value);\n    } else {\n      this.done = true;\n    }\n  }\n\n  //startArray() - assigned below\n  //endArray() - aliased below to endObject()\n\n  _saveValue(value) {\n    if (this.done) {\n      this.current = value;\n    } else {\n      if (this.current instanceof Array) {\n        this.current.push(value);\n      } else {\n        this.current[this.key] = value;\n        this.key = null;\n      }\n    }\n  }\n  _saveValueWithReviver(value) {\n    if (this.done) {\n      this.current = this.reviver('', value);\n    } else {\n      if (this.current instanceof Array) {\n        value = this.reviver('' + this.current.length, value);\n        this.current.push(value);\n        if (value === undefined) {\n          delete this.current[this.current.length - 1];\n        }\n      } else {\n        value = this.reviver(this.key, value);\n        if (value !== undefined) {\n          this.current[this.key] = value;\n        }\n        this.key = null;\n      }\n    }\n  }\n}\n\nAssembler.prototype.stringValue = Assembler.prototype._saveValue;\nAssembler.prototype.startObject = startObject(Object);\nAssembler.prototype.startArray = startObject(Array);\nAssembler.prototype.endArray = Assembler.prototype.endObject;\n\nmodule.exports = Assembler;\n","'use strict';\n\nconst Utf8Stream = require('./utils/Utf8Stream');\n\nconst patterns = {\n  value1: /^(?:[\\\"\\{\\[\\]\\-\\d]|true\\b|false\\b|null\\b|\\s{1,256})/,\n  string: /^(?:[^\\x00-\\x1f\\\"\\\\]{1,256}|\\\\[bfnrt\\\"\\\\\\/]|\\\\u[\\da-fA-F]{4}|\\\")/,\n  key1: /^(?:[\\\"\\}]|\\s{1,256})/,\n  colon: /^(?:\\:|\\s{1,256})/,\n  comma: /^(?:[\\,\\]\\}]|\\s{1,256})/,\n  ws: /^\\s{1,256}/,\n  numberStart: /^\\d/,\n  numberDigit: /^\\d{0,256}/,\n  numberFraction: /^[\\.eE]/,\n  numberExponent: /^[eE]/,\n  numberExpSign: /^[-+]/\n};\nconst MAX_PATTERN_SIZE = 16;\n\nlet noSticky = true;\ntry {\n  new RegExp('.', 'y');\n  noSticky = false;\n} catch (e) {\n  // suppress\n}\n\n!noSticky &&\n  Object.keys(patterns).forEach(key => {\n    let src = patterns[key].source.slice(1); // lop off ^\n    if (src.slice(0, 3) === '(?:' && src.slice(-1) === ')') {\n      src = src.slice(3, -1);\n    }\n    patterns[key] = new RegExp(src, 'y');\n  });\n\npatterns.numberFracStart = patterns.numberExpStart = patterns.numberStart;\npatterns.numberFracDigit = patterns.numberExpDigit = patterns.numberDigit;\n\nconst values = {true: true, false: false, null: null},\n  expected = {object: 'objectStop', array: 'arrayStop', '': 'done'};\n\n// long hexadecimal codes: \\uXXXX\nconst fromHex = s => String.fromCharCode(parseInt(s.slice(2), 16));\n\n// short codes: \\b \\f \\n \\r \\t \\\" \\\\ \\/\nconst codes = {b: '\\b', f: '\\f', n: '\\n', r: '\\r', t: '\\t', '\"': '\"', '\\\\': '\\\\', '/': '/'};\n\nclass Parser extends Utf8Stream {\n  static make(options) {\n    return new Parser(options);\n  }\n\n  constructor(options) {\n    super(Object.assign({}, options, {readableObjectMode: true}));\n\n    this._packKeys = this._packStrings = this._packNumbers = this._streamKeys = this._streamStrings = this._streamNumbers = true;\n    if (options) {\n      'packValues' in options && (this._packKeys = this._packStrings = this._packNumbers = options.packValues);\n      'packKeys' in options && (this._packKeys = options.packKeys);\n      'packStrings' in options && (this._packStrings = options.packStrings);\n      'packNumbers' in options && (this._packNumbers = options.packNumbers);\n      'streamValues' in options && (this._streamKeys = this._streamStrings = this._streamNumbers = options.streamValues);\n      'streamKeys' in options && (this._streamKeys = options.streamKeys);\n      'streamStrings' in options && (this._streamStrings = options.streamStrings);\n      'streamNumbers' in options && (this._streamNumbers = options.streamNumbers);\n      this._jsonStreaming = options.jsonStreaming;\n    }\n    !this._packKeys && (this._streamKeys = true);\n    !this._packStrings && (this._streamStrings = true);\n    !this._packNumbers && (this._streamNumbers = true);\n\n    this._done = false;\n    this._expect = this._jsonStreaming ? 'done' : 'value';\n    this._stack = [];\n    this._parent = '';\n    this._open_number = false;\n    this._accumulator = '';\n  }\n\n  _flush(callback) {\n    this._done = true;\n    super._flush(error => {\n      if (error) return callback(error);\n      if (this._open_number) {\n        if (this._streamNumbers) {\n          this.push({name: 'endNumber'});\n        }\n        this._open_number = false;\n        if (this._packNumbers) {\n          this.push({name: 'numberValue', value: this._accumulator});\n          this._accumulator = '';\n        }\n      }\n      callback(null);\n    });\n  }\n\n  _processBuffer(callback) {\n    let match,\n      value,\n      index = 0;\n    main: for (;;) {\n      switch (this._expect) {\n        case 'value1':\n        case 'value':\n          patterns.value1.lastIndex = index;\n          match = patterns.value1.exec(this._buffer);\n          if (!match) {\n            if (this._done || index + MAX_PATTERN_SIZE < this._buffer.length) {\n              if (index < this._buffer.length) return callback(new Error('Parser cannot parse input: expected a value'));\n              return callback(new Error('Parser has expected a value'));\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          switch (value) {\n            case '\"':\n              this._streamStrings && this.push({name: 'startString'});\n              this._expect = 'string';\n              break;\n            case '{':\n              this.push({name: 'startObject'});\n              this._stack.push(this._parent);\n              this._parent = 'object';\n              this._expect = 'key1';\n              break;\n            case '[':\n              this.push({name: 'startArray'});\n              this._stack.push(this._parent);\n              this._parent = 'array';\n              this._expect = 'value1';\n              break;\n            case ']':\n              if (this._expect !== 'value1') return callback(new Error(\"Parser cannot parse input: unexpected token ']'\"));\n              if (this._open_number) {\n                this._streamNumbers && this.push({name: 'endNumber'});\n                this._open_number = false;\n                if (this._packNumbers) {\n                  this.push({name: 'numberValue', value: this._accumulator});\n                  this._accumulator = '';\n                }\n              }\n              this.push({name: 'endArray'});\n              this._parent = this._stack.pop();\n              this._expect = expected[this._parent];\n              break;\n            case '-':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: '-'});\n              }\n              this._packNumbers && (this._accumulator = '-');\n              this._expect = 'numberStart';\n              break;\n            case '0':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: '0'});\n              }\n              this._packNumbers && (this._accumulator = '0');\n              this._expect = 'numberFraction';\n              break;\n            case '1':\n            case '2':\n            case '3':\n            case '4':\n            case '5':\n            case '6':\n            case '7':\n            case '8':\n            case '9':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: value});\n              }\n              this._packNumbers && (this._accumulator = value);\n              this._expect = 'numberDigit';\n              break;\n            case 'true':\n            case 'false':\n            case 'null':\n              if (this._buffer.length - index === value.length && !this._done) break main; // wait for more input\n              this.push({name: value + 'Value', value: values[value]});\n              this._expect = expected[this._parent];\n              break;\n            // default: // ws\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'keyVal':\n        case 'string':\n          patterns.string.lastIndex = index;\n          match = patterns.string.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length && (this._done || this._buffer.length - index >= 6))\n              return callback(new Error('Parser cannot parse input: escaped characters'));\n            if (this._done) return callback(new Error('Parser has expected a string value'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value === '\"') {\n            if (this._expect === 'keyVal') {\n              this._streamKeys && this.push({name: 'endKey'});\n              if (this._packKeys) {\n                this.push({name: 'keyValue', value: this._accumulator});\n                this._accumulator = '';\n              }\n              this._expect = 'colon';\n            } else {\n              this._streamStrings && this.push({name: 'endString'});\n              if (this._packStrings) {\n                this.push({name: 'stringValue', value: this._accumulator});\n                this._accumulator = '';\n              }\n              this._expect = expected[this._parent];\n            }\n          } else if (value.length > 1 && value.charAt(0) === '\\\\') {\n            const t = value.length == 2 ? codes[value.charAt(1)] : fromHex(value);\n            if (this._expect === 'keyVal' ? this._streamKeys : this._streamStrings) {\n              this.push({name: 'stringChunk', value: t});\n            }\n            if (this._expect === 'keyVal' ? this._packKeys : this._packStrings) {\n              this._accumulator += t;\n            }\n          } else {\n            if (this._expect === 'keyVal' ? this._streamKeys : this._streamStrings) {\n              this.push({name: 'stringChunk', value: value});\n            }\n            if (this._expect === 'keyVal' ? this._packKeys : this._packStrings) {\n              this._accumulator += value;\n            }\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'key1':\n        case 'key':\n          patterns.key1.lastIndex = index;\n          match = patterns.key1.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected an object key'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value === '\"') {\n            this._streamKeys && this.push({name: 'startKey'});\n            this._expect = 'keyVal';\n          } else if (value === '}') {\n            if (this._expect !== 'key1') return callback(new Error(\"Parser cannot parse input: unexpected token '}'\"));\n            this.push({name: 'endObject'});\n            this._parent = this._stack.pop();\n            this._expect = expected[this._parent];\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'colon':\n          patterns.colon.lastIndex = index;\n          match = patterns.colon.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error(\"Parser cannot parse input: expected ':'\"));\n            break main; // wait for more input\n          }\n          value = match[0];\n          value === ':' && (this._expect = 'value');\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'arrayStop':\n        case 'objectStop':\n          patterns.comma.lastIndex = index;\n          match = patterns.comma.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error(\"Parser cannot parse input: expected ','\"));\n            break main; // wait for more input\n          }\n          if (this._open_number) {\n            this._streamNumbers && this.push({name: 'endNumber'});\n            this._open_number = false;\n            if (this._packNumbers) {\n              this.push({name: 'numberValue', value: this._accumulator});\n              this._accumulator = '';\n            }\n          }\n          value = match[0];\n          if (value === ',') {\n            this._expect = this._expect === 'arrayStop' ? 'value' : 'key';\n          } else if (value === '}' || value === ']') {\n            if (value === '}' ? this._expect === 'arrayStop' : this._expect !== 'arrayStop') {\n              return callback(new Error(\"Parser cannot parse input: expected '\" + (this._expect === 'arrayStop' ? ']' : '}') + \"'\"));\n            }\n            this.push({name: value === '}' ? 'endObject' : 'endArray'});\n            this._parent = this._stack.pop();\n            this._expect = expected[this._parent];\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        // number chunks\n        case 'numberStart': // [0-9]\n          patterns.numberStart.lastIndex = index;\n          match = patterns.numberStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a starting digit'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = value === '0' ? 'numberFraction' : 'numberDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberDigit': // [0-9]*\n          patterns.numberDigit.lastIndex = index;\n          match = patterns.numberDigit.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a digit'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length) {\n              this._expect = 'numberFraction';\n              break;\n            }\n            if (this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'numberFraction': // [\\.eE]?\n          patterns.numberFraction.lastIndex = index;\n          match = patterns.numberFraction.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = value === '.' ? 'numberFracStart' : 'numberExpSign';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberFracStart': // [0-9]\n          patterns.numberFracStart.lastIndex = index;\n          match = patterns.numberFracStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a fractional part of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberFracDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberFracDigit': // [0-9]*\n          patterns.numberFracDigit.lastIndex = index;\n          match = patterns.numberFracDigit.exec(this._buffer);\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length) {\n              this._expect = 'numberExponent';\n              break;\n            }\n            if (this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'numberExponent': // [eE]?\n          patterns.numberExponent.lastIndex = index;\n          match = patterns.numberExponent.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            if (this._done) {\n              this._expect = 'done';\n              break;\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpSign';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpSign': // [-+]?\n          patterns.numberExpSign.lastIndex = index;\n          match = patterns.numberExpSign.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              this._expect = 'numberExpStart';\n              break;\n            }\n            if (this._done) return callback(new Error('Parser has expected an exponent value of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpStart';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpStart': // [0-9]\n          patterns.numberExpStart.lastIndex = index;\n          match = patterns.numberExpStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected an exponent part of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpDigit': // [0-9]*\n          patterns.numberExpDigit.lastIndex = index;\n          match = patterns.numberExpDigit.exec(this._buffer);\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length || this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'done':\n          patterns.ws.lastIndex = index;\n          match = patterns.ws.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              if (this._jsonStreaming) {\n                this._expect = 'value';\n                break;\n              }\n              return callback(new Error('Parser cannot parse input: unexpected characters'));\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (this._open_number) {\n            this._streamNumbers && this.push({name: 'endNumber'});\n            this._open_number = false;\n            if (this._packNumbers) {\n              this.push({name: 'numberValue', value: this._accumulator});\n              this._accumulator = '';\n            }\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n      }\n    }\n    !noSticky && (this._buffer = this._buffer.slice(index));\n    callback(null);\n  }\n}\nParser.parser = Parser.make;\nParser.make.Constructor = Parser;\n\nmodule.exports = Parser;\n","'use strict';\n\nconst StreamBase = require('./StreamBase');\nconst withParser = require('../utils/withParser');\n\nclass StreamArray extends StreamBase {\n  static make(options) {\n    return new StreamArray(options);\n  }\n\n  static withParser(options) {\n    return withParser(StreamArray.make, options);\n  }\n\n  constructor(options) {\n    super(options);\n    this._level = 1;\n    this._counter = 0;\n  }\n\n  _wait(chunk, _, callback) {\n    // first chunk should open an array\n    if (chunk.name !== 'startArray') {\n      return callback(new Error('Top-level object should be an array.'));\n    }\n    this._transform = this._filter;\n    return this._transform(chunk, _, callback);\n  }\n\n  _push(discard) {\n    if (this._assembler.current.length) {\n      if (discard) {\n        ++this._counter;\n        this._assembler.current.pop();\n      } else {\n        this.push({key: this._counter++, value: this._assembler.current.pop()});\n      }\n    }\n  }\n}\nStreamArray.streamArray = StreamArray.make;\nStreamArray.make.Constructor = StreamArray;\n\nmodule.exports = StreamArray;\n","'use strict';\n\nconst {Transform} = require('stream');\nconst Assembler = require('../Assembler');\n\nclass Counter {\n  constructor(initialDepth) {\n    this.depth = initialDepth;\n  }\n  startObject() {\n    ++this.depth;\n  }\n  endObject() {\n    --this.depth;\n  }\n  startArray() {\n    ++this.depth;\n  }\n  endArray() {\n    --this.depth;\n  }\n}\n\nclass StreamBase extends Transform {\n  constructor(options) {\n    super(Object.assign({}, options, {writableObjectMode: true, readableObjectMode: true}));\n    if (options) {\n      this.objectFilter = options.objectFilter;\n      this.includeUndecided = options.includeUndecided;\n    }\n    if (typeof this.objectFilter != 'function') {\n      this._filter = this._transform;\n    }\n    this._transform = this._wait || this._filter;\n    this._assembler = new Assembler(options);\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._push();\n      }\n    }\n    callback(null);\n  }\n\n  _filter(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      const result = this.objectFilter(this._assembler);\n      if (result) {\n        if (this._assembler.depth === this._level) {\n          this._push();\n          this._transform = this._filter;\n        }\n        this._transform = this._accept;\n        return callback(null);\n      }\n      if (result === false) {\n        this._saved_assembler = this._assembler;\n        this._assembler = new Counter(this._saved_assembler.depth);\n        this._saved_assembler.dropToLevel(this._level);\n        if (this._assembler.depth === this._level) {\n          this._assembler = this._saved_assembler;\n          this._transform = this._filter;\n        }\n        this._transform = this._reject;\n        return callback(null);\n      }\n      if (this._assembler.depth === this._level) {\n        this._push(!this.includeUndecided);\n      }\n    }\n    callback(null);\n  }\n\n  _accept(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._push();\n        this._transform = this._filter;\n      }\n    }\n    callback(null);\n  }\n\n  _reject(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._assembler = this._saved_assembler;\n        this._transform = this._filter;\n      }\n    }\n    callback(null);\n  }\n}\n\nmodule.exports = StreamBase;\n","'use strict';\n\nconst {Transform} = require('stream');\nconst {StringDecoder} = require('string_decoder');\n\nclass Utf8Stream extends Transform {\n  constructor(options) {\n    super(Object.assign({}, options, {writableObjectMode: false}));\n    this._buffer = '';\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (typeof chunk == 'string') {\n      this._transform = this._transformString;\n    } else {\n      this._stringDecoder = new StringDecoder();\n      this._transform = this._transformBuffer;\n    }\n    this._transform(chunk, encoding, callback);\n  }\n\n  _transformBuffer(chunk, _, callback) {\n    this._buffer += this._stringDecoder.write(chunk);\n    this._processBuffer(callback);\n  }\n\n  _transformString(chunk, _, callback) {\n    this._buffer += chunk.toString();\n    this._processBuffer(callback);\n  }\n\n  _processBuffer(callback) {\n    if (this._buffer) {\n      this.push(this._buffer, 'utf8');\n      this._buffer = '';\n    }\n    callback(null);\n  }\n\n  _flushInput() {\n    // meant to be called from _flush()\n    if (this._stringDecoder) {\n      this._buffer += this._stringDecoder.end();\n    }\n  }\n\n  _flush(callback) {\n    this._flushInput();\n    this._processBuffer(callback);\n  }\n}\n\nmodule.exports = Utf8Stream;\n","'use strict';\n\nconst {chain} = require('stream-chain');\n\nconst Parser = require('../Parser');\n\nconst withParser = (fn, options) =>\n  chain([new Parser(options), fn(options)], Object.assign({}, options, {writableObjectMode: false, readableObjectMode: true}));\n\nmodule.exports = withParser;\n","module.exports = require(\"child_process\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"process\");","module.exports = require(\"stream\");","module.exports = require(\"string_decoder\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Vec {\n    static isBlank(arr) { return arr == null || arr.length == 0; }\n    static notBlank(arr) { return arr != null && arr.length > 0; }\n    static safeArray(arr) { return arr == null ? [] : arr; }\n    static len(arr) { return arr == null ? 0 : arr.length; }\n    static arrayLength(arr) { return arr == null ? 0 : arr.length; }\n    static anyTrue(arr) {\n        if (arr == null)\n            return false;\n        for (let v of arr)\n            if (v)\n                return true;\n        return false;\n    }\n    static allTrue(arr) {\n        if (arr == null)\n            return true;\n        for (let v of arr)\n            if (!v)\n                return false;\n        return true;\n    }\n    static anyFalse(arr) {\n        if (arr == null)\n            return false;\n        for (let v of arr)\n            if (!v)\n                return true;\n        return false;\n    }\n    static allFalse(arr) {\n        if (arr == null)\n            return true;\n        for (let v of arr)\n            if (v)\n                return false;\n        return true;\n    }\n    static iterAnyTrue(arr, callback) {\n        for (let v of arr)\n            if (callback(v))\n                return true;\n        return false;\n    }\n    static iterAllTrue(arr, callback) {\n        for (let v of arr)\n            if (!callback(v))\n                return false;\n        return true;\n    }\n    static iterAnyFalse(arr, callback) {\n        for (let v of arr)\n            if (!callback(v))\n                return true;\n        return false;\n    }\n    static iterAllFalse(arr, callback) {\n        for (let v of arr)\n            if (callback(v))\n                return false;\n        return true;\n    }\n    static swap(arr, idx1, idx2) {\n        let v = arr[idx1];\n        arr[idx1] = arr[idx2];\n        arr[idx2] = v;\n    }\n    static duplicate(arr) {\n        return arr == null ? [] : arr.slice(0);\n    }\n    static append(arr, item) {\n        if (arr == null || arr.length == 0)\n            return [item];\n        arr = arr.slice(0);\n        arr.push(item);\n        return arr;\n    }\n    static prepend(arr, item) {\n        if (arr == null || arr.length == 0)\n            return [item];\n        arr = arr.slice(0);\n        arr.unshift(item);\n        return arr;\n    }\n    static concat(arr1, arr2) {\n        if (arr1 == null && arr2 == null)\n            return [];\n        if (arr1 == null)\n            return arr2.slice(0);\n        if (arr2 == null)\n            return arr1.slice(0);\n        return arr1.concat(arr2);\n    }\n    static remove(arr, idx) {\n        arr = arr.slice(0);\n        arr.splice(idx, 1);\n        return arr;\n    }\n    static flatten(mtx) {\n        let ret = [];\n        for (let vec of mtx)\n            ret.push(...vec);\n        return ret;\n    }\n    static transpose(mtx) {\n        let sz1 = mtx.length, sz2 = mtx[0].length;\n        let ret = Vec.anyArray(null, sz2);\n        for (let j = 0; j < sz2; j++) {\n            ret[j] = Vec.anyArray(null, sz1);\n            for (let i = 0; i < sz1; i++)\n                ret[j][i] = mtx[i][j];\n        }\n        return ret;\n    }\n    static equals(arr1, arr2) {\n        if (arr1 == null && arr2 == null)\n            return true;\n        if (arr1 == null || arr2 == null)\n            return false;\n        if (arr1.length != arr2.length)\n            return false;\n        for (let n = 0; n < arr1.length; n++)\n            if (arr1[n] != arr2[n])\n                return false;\n        return true;\n    }\n    static equivalent(arr1, arr2) {\n        const len1 = arr1 == null ? 0 : arr1.length, len2 = arr2 == null ? 0 : arr2.length;\n        if (len1 != len2)\n            return false;\n        for (let n = 0; n < len1; n++)\n            if (arr1[n] != arr2[n])\n                return false;\n        return true;\n    }\n    static compareTo(arr1, arr2) {\n        const sz = Math.max(arr1.length, arr2.length);\n        for (let n = 0; n < sz; n++) {\n            if (arr1[n] < arr2[n])\n                return -1;\n            if (arr1[n] > arr2[n])\n                return 1;\n        }\n        return 0;\n    }\n    static booleanArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static numberArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static stringArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static anyArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static genericArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static genericBlankArrays(sz) {\n        let arr = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            arr[n] = [];\n        return arr;\n    }\n    static funcArray(sz, func) {\n        let arr = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            arr[n] = func(n);\n        return arr;\n    }\n    static first(arr) { return arr == null || arr.length == 0 ? null : arr[0]; }\n    static last(arr) { return arr == null || arr.length == 0 ? null : arr[arr.length - 1]; }\n    static min(arr) {\n        if (arr == null || arr.length == 0)\n            return Number.MAX_VALUE;\n        let v = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            v = Math.min(v, arr[n]);\n        return v;\n    }\n    static max(arr) {\n        if (arr == null || arr.length == 0)\n            return Number.MIN_VALUE;\n        let v = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            v = Math.max(v, arr[n]);\n        return v;\n    }\n    static idxMin(arr) {\n        if (arr == null || arr.length == 0)\n            return -1;\n        let idx = 0;\n        for (let n = 1; n < arr.length; n++)\n            if (arr[n] < arr[idx])\n                idx = n;\n        return idx;\n    }\n    static idxMax(arr) {\n        if (arr == null || arr.length == 0)\n            return -1;\n        let idx = 0;\n        for (let n = 1; n < arr.length; n++)\n            if (arr[n] > arr[idx])\n                idx = n;\n        return idx;\n    }\n    static range(arr) {\n        if (arr == null || arr.length == 0)\n            return 0;\n        let lo = arr[0], hi = arr[0];\n        for (let n = 1; n < arr.length; n++) {\n            if (arr[n] < lo)\n                lo = arr[n];\n            if (arr[n] > hi)\n                hi = arr[n];\n        }\n        return hi - lo;\n    }\n    static reverse(arr) {\n        let ret = [];\n        for (let n = arr.length - 1; n >= 0; n--)\n            ret.push(arr[n]);\n        return ret;\n    }\n    static identity0(sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n;\n        return ret;\n    }\n    static identity1(sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n + 1;\n        return ret;\n    }\n    static identityN(start, sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n + start;\n        return ret;\n    }\n    static notMask(mask) {\n        let ret = new Array(mask.length);\n        for (let n = mask.length - 1; n >= 0; n--)\n            ret[n] = !mask[n];\n        return ret;\n    }\n    static idxGet(arr, idx) {\n        let ret = [];\n        for (let n = 0; n < idx.length; n++)\n            ret.push(arr[idx[n]]);\n        return ret;\n    }\n    static maskCount(mask) {\n        if (!mask)\n            return 0;\n        let c = 0;\n        for (let n = mask.length - 1; n >= 0; n--)\n            if (mask[n])\n                c++;\n        return c;\n    }\n    static maskIdx(mask) {\n        let idx = [];\n        for (let n = 0; n < mask.length; n++)\n            if (mask[n])\n                idx.push(n);\n        return idx;\n    }\n    static idxMask(idx, sz) {\n        let mask = Vec.booleanArray(false, sz);\n        for (let n of idx)\n            mask[n] = true;\n        return mask;\n    }\n    static maskMap(mask) {\n        let ret = [];\n        for (let n = 0, pos = 0; n < mask.length; n++)\n            ret.push(mask[n] ? pos++ : -1);\n        return ret;\n    }\n    static maskGet(arr, mask) {\n        let ret = [];\n        for (let n = 0, p = 0; n < arr.length; n++)\n            if (mask[n])\n                ret.push(arr[n]);\n        return ret;\n    }\n    static maskEqual(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] == arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] == val);\n        }\n        return ret;\n    }\n    static sum(arr) {\n        if (arr == null || arr.length == 0)\n            return 0;\n        let t = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            t += arr[n];\n        return t;\n    }\n    static add(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] + arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] + val);\n        }\n        return ret;\n    }\n    static sub(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] - arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] - val);\n        }\n        return ret;\n    }\n    static mul(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] * arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] * val);\n        }\n        return ret;\n    }\n    static neg(arr) {\n        let ret = arr.slice(0);\n        for (let n = ret.length - 1; n >= 0; n--)\n            ret[n] *= -1;\n        return ret;\n    }\n    static setTo(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] = val; }\n    static addTo(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] += val; }\n    static mulBy(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] *= val; }\n    static addToArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] += val[n]; }\n    static subFromArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] -= val[n]; }\n    static mulByArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] *= val[n]; }\n    static divByArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] /= val[n]; }\n    static idxSort(arr) {\n        let idx = new Array(arr.length);\n        for (let n = 0; n < arr.length; n++)\n            idx[n] = n;\n        idx.sort((a, b) => arr[a] < arr[b] ? -1 : arr[a] > arr[b] ? 1 : 0);\n        return idx;\n    }\n    static sort(arr) {\n        arr.sort((v1, v2) => v1 - v2);\n    }\n    static sorted(arr) {\n        arr = arr.slice(0);\n        this.sort(arr);\n        return arr;\n    }\n    static sortedUnique(arr) {\n        if (arr == null || arr.length == 0)\n            return [];\n        let unique = Vec.uniqueUnstable(arr);\n        if (typeof arr[0] == 'number')\n            this.sort(unique);\n        else\n            unique.sort();\n        return unique;\n    }\n    static uniqueUnstable(arr) {\n        return Array.from(new Set(arr));\n    }\n    static uniqueStable(arr) {\n        let set = new Set(arr), ret = [];\n        for (let v of arr)\n            if (set.has(v)) {\n                ret.push(v);\n                set.delete(v);\n            }\n        return ret;\n    }\n    static maskUnique(arr) {\n        let set = new Set(arr), ret = this.booleanArray(false, arr.length);\n        for (let n = 0; n < arr.length; n++)\n            if (set.has(arr[n])) {\n                ret[n] = true;\n                set.delete(arr[n]);\n            }\n        return ret;\n    }\n    static idxUnique(arr) {\n        let set = new Set(arr), ret = [];\n        for (let n = 0; n < arr.length; n++)\n            if (set.has(arr[n])) {\n                ret.push(n);\n                set.delete(arr[n]);\n            }\n        return ret;\n    }\n    static exclude(arr, excl) {\n        const sz = Vec.len(arr);\n        if (sz == 0)\n            return [];\n        let mask = new Array(sz);\n        let count = 0;\n        for (let n = 0; n < arr.length; n++) {\n            mask[n] = excl.indexOf(arr[n]) < 0;\n            if (mask[n])\n                count++;\n        }\n        if (count == sz)\n            return arr;\n        return Vec.maskGet(arr, mask);\n    }\n}\nclass Permutation {\n    static parityPerms(idx) {\n        let v = Vec.booleanArray(false, idx.length);\n        let p = 0;\n        for (let i = idx.length - 1; i >= 0; i--) {\n            if (v[i])\n                p++;\n            else {\n                let j = i;\n                do {\n                    j = idx[j];\n                    v[j] = true;\n                } while (j != i);\n            }\n        }\n        return p;\n    }\n    static parityIdentity(idx) {\n        return this.parityPerms(idx) & 1;\n    }\n    static parityOrder(src) {\n        if (src.length <= 1)\n            return 0;\n        else if (src.length == 2)\n            return src[0] < src[1] ? 0 : 1;\n        else if (src.length == 3) {\n            let p = 1;\n            if (src[0] < src[1])\n                p++;\n            if (src[0] < src[2])\n                p++;\n            if (src[1] < src[2])\n                p++;\n            return p & 1;\n        }\n        else if (src.length == 4) {\n            let p = 0;\n            if (src[0] < src[1])\n                p++;\n            if (src[0] < src[2])\n                p++;\n            if (src[0] < src[3])\n                p++;\n            if (src[1] < src[2])\n                p++;\n            if (src[1] < src[3])\n                p++;\n            if (src[2] < src[3])\n                p++;\n            return p & 1;\n        }\n        let idx = [], sorted = src.slice(0);\n        sorted.sort();\n        for (let n = 0; n < src.length; n++)\n            idx.push(sorted.indexOf(src[n]));\n        return this.parityIdentity(idx);\n    }\n    static smallPermutation(sz) {\n        if (sz == 1)\n            return this.PERM1;\n        else if (sz == 2)\n            return this.PERM2;\n        else if (sz == 3)\n            return this.PERM3;\n        else if (sz == 4)\n            return this.PERM4;\n        else\n            return null;\n    }\n    static allPermutations(sz) {\n        if (sz <= this.SMALL_PERMS)\n            return this.smallPermutation(sz);\n        while (this.PERM_CACHE.length < this.MAX_CACHE - this.SMALL_PERMS)\n            this.PERM_CACHE.push(null);\n        if (sz < this.MAX_CACHE && this.PERM_CACHE[sz - this.SMALL_PERMS] != null)\n            return this.PERM_CACHE[sz - this.SMALL_PERMS];\n        let nperms = 1;\n        for (let n = 2; n <= sz; n++)\n            nperms *= n;\n        let perms = [];\n        let idx = Vec.identity0(sz);\n        perms.push(idx.slice(0));\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n < nperms; n++) {\n            nonunique: while (idx[0] < sz) {\n                idx[sz - 1]++;\n                for (let i = sz - 1; i > 0; i--) {\n                    if (idx[i] < sz)\n                        break;\n                    idx[i] = 0;\n                    idx[i - 1]++;\n                }\n                Vec.setTo(mask, false);\n                for (let i of idx) {\n                    if (mask[i])\n                        continue nonunique;\n                    mask[i] = true;\n                }\n                perms[n] = idx.slice(0);\n                break;\n            }\n        }\n        if (sz < this.MAX_CACHE)\n            this.PERM_CACHE[sz - this.SMALL_PERMS] = perms;\n        return perms;\n    }\n}\nPermutation.PERM1 = [[0]];\nPermutation.PERM2 = [[0, 1], [1, 0]];\nPermutation.PERM3 = [[0, 1, 2], [0, 2, 1], [1, 0, 2], [1, 2, 0], [2, 0, 1], [2, 1, 0]];\nPermutation.PERM4 = [\n    [0, 1, 2, 3], [0, 1, 3, 2], [0, 2, 1, 3], [0, 2, 3, 1], [0, 3, 1, 2], [0, 3, 2, 1],\n    [1, 0, 2, 3], [1, 0, 3, 2], [1, 2, 0, 3], [1, 2, 3, 0], [1, 3, 0, 2], [1, 3, 2, 0],\n    [2, 0, 1, 3], [2, 0, 3, 1], [2, 1, 0, 3], [2, 1, 3, 0], [2, 3, 0, 1], [2, 3, 1, 0],\n    [3, 0, 1, 2], [3, 0, 2, 1], [3, 1, 0, 2], [3, 1, 2, 0], [3, 2, 0, 1], [3, 2, 1, 0]\n];\nPermutation.SMALL_PERMS = 4;\nPermutation.MAX_CACHE = 8;\nPermutation.PERM_CACHE = [];\nexport { Permutation };\n//# sourceMappingURL=Vec.js.map","class Chemistry {\n}\nChemistry.ELEMENTS = [\n    null,\n    'H', 'He',\n    'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Ne',\n    'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'Ar',\n    'K', 'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr',\n    'Rb', 'Sr', 'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn', 'Sb', 'Te', 'I', 'Xe',\n    'Cs', 'Ba',\n    'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb',\n    'Lu', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg', 'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn',\n    'Fr', 'Ra',\n    'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No',\n    'Lr', 'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds', 'Rg', 'Cn'\n];\nChemistry.ELEMENT_GROUPS = [\n    0,\n    1, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_ROWS = [\n    0,\n    1, 1,\n    2, 2, 2, 2, 2, 2, 2, 2,\n    3, 3, 3, 3, 3, 3, 3, 3,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n    6, 6,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    7, 7,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7\n];\nChemistry.ELEMENT_BLOCKS = [\n    0,\n    1, 2,\n    1, 1, 2, 2, 2, 2, 2, 2,\n    1, 1, 2, 2, 2, 2, 2, 2,\n    1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3\n];\nChemistry.ELEMENT_VALENCE = [\n    0,\n    1, 2,\n    1, 2, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 2,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_BONDING = [\n    0,\n    1, 0,\n    1, 2, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 2,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_SHELL = [\n    0,\n    2, 2,\n    8, 8, 8, 8, 8, 8, 8, 8,\n    8, 8, 8, 8, 8, 8, 8, 8,\n    8, 8, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 8, 8, 8, 8, 8, 8,\n    8, 8, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 8, 8, 8, 8, 8, 8,\n    8, 8,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    8, 8,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18\n];\nChemistry.NATURAL_ATOMIC_WEIGHTS = [\n    0, 1.00794, 4.002602, 6.941, 9.012182, 10.811, 12.0107, 14.0067, 15.9994, 18.9984032, 20.1797,\n    22.989770, 24.3050, 26.981538, 28.0855, 30.973761, 32.065, 35.453, 39.948, 39.0983, 40.078,\n    44.955910, 47.867, 50.9415, 51.9961, 54.938049, 55.845, 58.933200, 58.6934, 63.546, 65.409,\n    69.723, 72.64, 74.92160, 78.96, 79.904, 83.798, 85.4678, 87.62, 88.90585, 91.224, 92.90638,\n    95.94, 98, 101.07, 102.90550, 106.42, 107.8682, 112.411, 114.818, 118.710, 121.760, 127.60,\n    126.90447, 131.293, 132.90545, 137.327, 138.9055, 140.116, 140.90765, 144.24, 145, 150.36,\n    151.964, 157.25, 158.92534, 162.500, 164.93032, 167.259, 168.93421, 173.04, 174.967, 178.49,\n    180.9479, 183.84, 186.207, 190.23, 192.217, 195.078, 196.96655, 200.59, 204.3833, 207.2, 208.98038,\n    209, 210, 222, 223, 226, 227, 230.0331266, 231.03588, 233.039628, 237, 244, 243, 247, 247, 251, 252, 257,\n    258, 259, 262, 261, 262, 266, 264, 277, 268, 271, 272, 285\n];\nChemistry.ELEMENT_H = 1;\nChemistry.ELEMENT_He = 2;\nChemistry.ELEMENT_Li = 3;\nChemistry.ELEMENT_Be = 4;\nChemistry.ELEMENT_B = 5;\nChemistry.ELEMENT_C = 6;\nChemistry.ELEMENT_N = 7;\nChemistry.ELEMENT_O = 8;\nChemistry.ELEMENT_F = 9;\nChemistry.ELEMENT_Ne = 10;\nChemistry.ELEMENT_Na = 11;\nChemistry.ELEMENT_Mg = 12;\nChemistry.ELEMENT_Al = 13;\nChemistry.ELEMENT_Si = 14;\nChemistry.ELEMENT_P = 15;\nChemistry.ELEMENT_S = 16;\nChemistry.ELEMENT_Cl = 17;\nChemistry.ELEMENT_Ar = 18;\nChemistry.ELEMENT_K = 19;\nChemistry.ELEMENT_Ca = 20;\nChemistry.ELEMENT_Sc = 21;\nChemistry.ELEMENT_Ti = 22;\nChemistry.ELEMENT_V = 23;\nChemistry.ELEMENT_Cr = 24;\nChemistry.ELEMENT_Mn = 25;\nChemistry.ELEMENT_Fe = 26;\nChemistry.ELEMENT_Co = 27;\nChemistry.ELEMENT_Ni = 28;\nChemistry.ELEMENT_Cu = 29;\nChemistry.ELEMENT_Zn = 30;\nChemistry.ELEMENT_Ga = 31;\nChemistry.ELEMENT_Ge = 32;\nChemistry.ELEMENT_As = 33;\nChemistry.ELEMENT_Se = 34;\nChemistry.ELEMENT_Br = 35;\nChemistry.ELEMENT_Kr = 36;\nChemistry.ELEMENT_Rb = 37;\nChemistry.ELEMENT_Sr = 38;\nChemistry.ELEMENT_Y = 39;\nChemistry.ELEMENT_Zr = 40;\nChemistry.ELEMENT_Nb = 41;\nChemistry.ELEMENT_Mo = 42;\nChemistry.ELEMENT_Tc = 43;\nChemistry.ELEMENT_Ru = 44;\nChemistry.ELEMENT_Rh = 45;\nChemistry.ELEMENT_Pd = 46;\nChemistry.ELEMENT_Ag = 47;\nChemistry.ELEMENT_Cd = 48;\nChemistry.ELEMENT_In = 49;\nChemistry.ELEMENT_Sn = 50;\nChemistry.ELEMENT_Sb = 51;\nChemistry.ELEMENT_Te = 52;\nChemistry.ELEMENT_I = 53;\nChemistry.ELEMENT_Xe = 54;\nChemistry.ELEMENT_Cs = 55;\nChemistry.ELEMENT_Ba = 56;\nChemistry.ELEMENT_La = 57;\nChemistry.ELEMENT_Ce = 58;\nChemistry.ELEMENT_Pr = 59;\nChemistry.ELEMENT_Nd = 60;\nChemistry.ELEMENT_Pm = 61;\nChemistry.ELEMENT_Sm = 62;\nChemistry.ELEMENT_Eu = 63;\nChemistry.ELEMENT_Gd = 64;\nChemistry.ELEMENT_Tb = 65;\nChemistry.ELEMENT_Dy = 66;\nChemistry.ELEMENT_Ho = 67;\nChemistry.ELEMENT_Er = 68;\nChemistry.ELEMENT_Tm = 69;\nChemistry.ELEMENT_Yb = 70;\nChemistry.ELEMENT_Lu = 71;\nChemistry.ELEMENT_Hf = 72;\nChemistry.ELEMENT_Ta = 73;\nChemistry.ELEMENT_W = 74;\nChemistry.ELEMENT_Re = 75;\nChemistry.ELEMENT_Os = 76;\nChemistry.ELEMENT_Ir = 77;\nChemistry.ELEMENT_Pt = 78;\nChemistry.ELEMENT_Au = 79;\nChemistry.ELEMENT_Hg = 80;\nChemistry.ELEMENT_Tl = 81;\nChemistry.ELEMENT_Pb = 82;\nChemistry.ELEMENT_Bi = 83;\nChemistry.ELEMENT_Po = 84;\nChemistry.ELEMENT_At = 85;\nChemistry.ELEMENT_Rn = 86;\nChemistry.ELEMENT_Fr = 87;\nChemistry.ELEMENT_Ra = 88;\nChemistry.ELEMENT_Ac = 89;\nChemistry.ELEMENT_Th = 90;\nChemistry.ELEMENT_Pa = 91;\nChemistry.ELEMENT_U = 92;\nChemistry.ELEMENT_Np = 93;\nChemistry.ELEMENT_Pu = 94;\nChemistry.ELEMENT_Am = 95;\nChemistry.ELEMENT_Cm = 96;\nChemistry.ELEMENT_Bk = 97;\nChemistry.ELEMENT_Cf = 98;\nChemistry.ELEMENT_Es = 99;\nChemistry.ELEMENT_Fm = 100;\nChemistry.ELEMENT_Md = 101;\nChemistry.ELEMENT_No = 102;\nChemistry.ELEMENT_Lr = 103;\nChemistry.ELEMENT_Rf = 104;\nChemistry.ELEMENT_Db = 105;\nChemistry.ELEMENT_Sg = 106;\nChemistry.ELEMENT_Bh = 107;\nChemistry.ELEMENT_Hs = 108;\nChemistry.ELEMENT_Mt = 109;\nChemistry.ELEMENT_Ds = 110;\nChemistry.ELEMENT_Rg = 111;\nChemistry.ELEMENT_Cn = 112;\nexport { Chemistry };\n//# sourceMappingURL=Chemistry.js.map","import { Vec } from './Vec';\nexport class Matrix {\n    constructor(m, n, s = 0) {\n        this.m = m;\n        this.n = n;\n        if (m == 0)\n            return;\n        this.A = new Array(m);\n        for (let i = 0; i < m; i++)\n            this.A[i] = Vec.numberArray(s, n);\n    }\n    static fromArray(A) {\n        let mtx = new Matrix(0, 0);\n        mtx.A = A;\n        mtx.m = A.length;\n        mtx.n = A[0].length;\n        return mtx;\n    }\n    clone() {\n        const { A, m, n } = this;\n        let mtx = new Matrix(m, n);\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                mtx.A[i][j] = A[i][j];\n        return mtx;\n    }\n    get numRows() { return this.m; }\n    get numCols() { return this.n; }\n    get(i, j) { return this.A[i][j]; }\n    set(i, j, v) { this.A[i][j] = v; }\n    transpose() {\n        const { A, m, n } = this;\n        let X = new Matrix(n, m);\n        const C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[j][i] = A[i][j];\n        return X;\n    }\n    norm1() {\n        const { A, m, n } = this;\n        let f = 0;\n        for (let j = 0; j < n; j++) {\n            let s = 0;\n            for (let i = 0; i < m; i++)\n                s += Math.abs(A[i][j]);\n            f = Math.max(f, s);\n        }\n        return f;\n    }\n    normInf() {\n        const { A, m, n } = this;\n        let f = 0;\n        for (let i = 0; i < m; i++) {\n            let s = 0;\n            for (let j = 0; j < n; j++)\n                s += Math.abs(A[i][j]);\n            f = Math.max(f, s);\n        }\n        return f;\n    }\n    uminus() {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = -A[i][j];\n        return X;\n    }\n    plus(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] + B.A[i][j];\n        return X;\n    }\n    plusEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] + B.A[i][j];\n        return this;\n    }\n    minus(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] - B.A[i][j];\n        return X;\n    }\n    minusEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] - B.A[i][j];\n        return this;\n    }\n    arrayTimes(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] * B.A[i][j];\n        return X;\n    }\n    arrayTimesEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] * B.A[i][j];\n        return this;\n    }\n    arrayRightDivide(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] / B.A[i][j];\n        return X;\n    }\n    arrayRightDivideEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] / B.A[i][j];\n        return this;\n    }\n    arrayLeftDivide(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = B.A[i][j] / A[i][j];\n        return X;\n    }\n    arrayLeftDivideEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = B.A[i][j] / A[i][j];\n        return this;\n    }\n    scalarTimes(s) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = s * A[i][j];\n        return X;\n    }\n    scalarTimesEquals(s) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = s * A[i][j];\n        return this;\n    }\n    times(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, B.n);\n        let C = X.A, Bcolj = new Array(n);\n        for (let j = 0; j < B.n; j++) {\n            for (let k = 0; k < n; k++)\n                Bcolj[k] = B.A[k][j];\n            for (let i = 0; i < m; i++) {\n                let Arowi = A[i];\n                let s = 0;\n                for (let k = 0; k < n; k++)\n                    s += Arowi[k] * Bcolj[k];\n                C[i][j] = s;\n            }\n        }\n        return X;\n    }\n    rank() {\n        return new SingularValueDecomposition(this).rank();\n    }\n    cond() {\n        return new SingularValueDecomposition(this).cond();\n    }\n    trace() {\n        const { A, m, n } = this;\n        let t = 0;\n        for (let i = 0; i < Math.min(m, n); i++) {\n            t += A[i][i];\n        }\n        return t;\n    }\n    static identity(m, n) {\n        let mtx = new Matrix(m, n);\n        let A = mtx.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = (i == j ? 1.0 : 0.0);\n        return mtx;\n    }\n    toString() {\n        let lines = ['['];\n        for (let row of this.A)\n            lines.push(JSON.stringify(row));\n        lines.push(']');\n        return lines.join('\\n');\n    }\n}\nexport class SingularValueDecomposition {\n    constructor(mtx) {\n        let A = mtx.A;\n        let m = this.m = mtx.m;\n        let n = this.n = mtx.n;\n        let nu = Math.min(m, n);\n        let s = this.s = new Array(Math.min(m + 1, n));\n        let U = this.U = new Array(m);\n        let V = this.V = new Array(n);\n        for (let i = 0; i < m; i++)\n            U[i] = Vec.numberArray(0, nu);\n        for (let j = 0; j < n; j++)\n            V[j] = Vec.numberArray(0, n);\n        let e = new Array(n);\n        let work = new Array(m);\n        let wantu = true, wantv = true;\n        let nct = Math.min(m - 1, n);\n        let nrt = Math.max(0, Math.min(n - 2, m));\n        for (let k = 0; k < Math.max(nct, nrt); k++) {\n            if (k < nct) {\n                s[k] = 0;\n                for (let i = k; i < m; i++)\n                    s[k] = SingularValueDecomposition.hypot(s[k], A[i][k]);\n                if (s[k] != 0.0) {\n                    if (A[k][k] < 0.0)\n                        s[k] = -s[k];\n                    for (let i = k; i < m; i++)\n                        A[i][k] /= s[k];\n                    A[k][k] += 1.0;\n                }\n                s[k] = -s[k];\n            }\n            for (let j = k + 1; j < n; j++) {\n                if ((k < nct) && (s[k] != 0.0)) {\n                    let t = 0;\n                    for (let i = k; i < m; i++)\n                        t += A[i][k] * A[i][j];\n                    t = -t / A[k][k];\n                    for (let i = k; i < m; i++)\n                        A[i][j] += t * A[i][k];\n                }\n                e[j] = A[k][j];\n            }\n            if (wantu && (k < nct)) {\n                for (let i = k; i < m; i++)\n                    U[i][k] = A[i][k];\n            }\n            if (k < nrt) {\n                e[k] = 0;\n                for (let i = k + 1; i < n; i++)\n                    e[k] = SingularValueDecomposition.hypot(e[k], e[i]);\n                if (e[k] != 0.0) {\n                    if (e[k + 1] < 0.0)\n                        e[k] = -e[k];\n                    for (let i = k + 1; i < n; i++)\n                        e[i] /= e[k];\n                    e[k + 1] += 1.0;\n                }\n                e[k] = -e[k];\n                if ((k + 1 < m) && (e[k] != 0.0)) {\n                    for (let i = k + 1; i < m; i++)\n                        work[i] = 0.0;\n                    for (let j = k + 1; j < n; j++)\n                        for (let i = k + 1; i < m; i++)\n                            work[i] += e[j] * A[i][j];\n                    for (let j = k + 1; j < n; j++) {\n                        let t = -e[j] / e[k + 1];\n                        for (let i = k + 1; i < m; i++)\n                            A[i][j] += t * work[i];\n                    }\n                }\n                if (wantv) {\n                    for (let i = k + 1; i < n; i++)\n                        V[i][k] = e[i];\n                }\n            }\n        }\n        let p = Math.min(n, m + 1);\n        if (nct < n)\n            s[nct] = A[nct][nct];\n        if (m < p)\n            s[p - 1] = 0.0;\n        if (nrt + 1 < p)\n            e[nrt] = A[nrt][p - 1];\n        e[p - 1] = 0.0;\n        if (wantu) {\n            for (let j = nct; j < nu; j++) {\n                for (let i = 0; i < m; i++)\n                    U[i][j] = 0.0;\n                U[j][j] = 1.0;\n            }\n            for (let k = nct - 1; k >= 0; k--) {\n                if (s[k] != 0.0) {\n                    for (let j = k + 1; j < nu; j++) {\n                        let t = 0;\n                        for (let i = k; i < m; i++)\n                            t += U[i][k] * U[i][j];\n                        t = -t / U[k][k];\n                        for (let i = k; i < m; i++)\n                            U[i][j] += t * U[i][k];\n                    }\n                    for (let i = k; i < m; i++)\n                        U[i][k] = -U[i][k];\n                    U[k][k] = 1.0 + U[k][k];\n                    for (let i = 0; i < k - 1; i++)\n                        U[i][k] = 0.0;\n                }\n                else {\n                    for (let i = 0; i < m; i++)\n                        U[i][k] = 0.0;\n                    U[k][k] = 1.0;\n                }\n            }\n        }\n        if (wantv) {\n            for (let k = n - 1; k >= 0; k--) {\n                if ((k < nrt) && (e[k] != 0.0)) {\n                    for (let j = k + 1; j < nu; j++) {\n                        let t = 0;\n                        for (let i = k + 1; i < n; i++)\n                            t += V[i][k] * V[i][j];\n                        t = -t / V[k + 1][k];\n                        for (let i = k + 1; i < n; i++)\n                            V[i][j] += t * V[i][k];\n                    }\n                }\n                for (let i = 0; i < n; i++)\n                    V[i][k] = 0.0;\n                V[k][k] = 1.0;\n            }\n        }\n        let pp = p - 1;\n        let iter = 0;\n        let eps = Math.pow(2.0, -52.0);\n        let tiny = Math.pow(2.0, -966.0);\n        while (p > 0) {\n            let k, kase;\n            for (k = p - 2; k >= -1; k--) {\n                if (k == -1)\n                    break;\n                if (Math.abs(e[k]) <= tiny + eps * (Math.abs(s[k]) + Math.abs(s[k + 1]))) {\n                    e[k] = 0.0;\n                    break;\n                }\n            }\n            if (k == p - 2) {\n                kase = 4;\n            }\n            else {\n                let ks;\n                for (ks = p - 1; ks >= k; ks--) {\n                    if (ks == k)\n                        break;\n                    let t = (ks != p ? Math.abs(e[ks]) : 0.) + (ks != k + 1 ? Math.abs(e[ks - 1]) : 0.);\n                    if (Math.abs(s[ks]) <= tiny + eps * t) {\n                        s[ks] = 0.0;\n                        break;\n                    }\n                }\n                if (ks == k)\n                    kase = 3;\n                else if (ks == p - 1)\n                    kase = 1;\n                else {\n                    kase = 2;\n                    k = ks;\n                }\n            }\n            k++;\n            if (kase == 1) {\n                let f = e[p - 2];\n                e[p - 2] = 0.0;\n                for (let j = p - 2; j >= k; j--) {\n                    let t = SingularValueDecomposition.hypot(s[j], f);\n                    let cs = s[j] / t;\n                    let sn = f / t;\n                    s[j] = t;\n                    if (j != k) {\n                        f = -sn * e[j - 1];\n                        e[j - 1] = cs * e[j - 1];\n                    }\n                    if (wantv) {\n                        for (let i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][p - 1];\n                            V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                            V[i][j] = t;\n                        }\n                    }\n                }\n            }\n            else if (kase == 2) {\n                let f = e[k - 1];\n                e[k - 1] = 0.0;\n                for (let j = k; j < p; j++) {\n                    let t = SingularValueDecomposition.hypot(s[j], f);\n                    let cs = s[j] / t;\n                    let sn = f / t;\n                    s[j] = t;\n                    f = -sn * e[j];\n                    e[j] = cs * e[j];\n                    if (wantu) {\n                        for (let i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][k - 1];\n                            U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n            }\n            else if (kase == 3) {\n                let scale = Math.max(Math.max(Math.max(Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2])), Math.abs(e[p - 2])), Math.abs(s[k])), Math.abs(e[k]));\n                let sp = s[p - 1] / scale;\n                let spm1 = s[p - 2] / scale;\n                let epm1 = e[p - 2] / scale;\n                let sk = s[k] / scale;\n                let ek = e[k] / scale;\n                let b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2.0;\n                let c = (sp * epm1) * (sp * epm1);\n                let shift = 0.0;\n                if ((b != 0.0) || (c != 0.0)) {\n                    shift = Math.sqrt(b * b + c);\n                    if (b < 0.0)\n                        shift = -shift;\n                    shift = c / (b + shift);\n                }\n                let f = (sk + sp) * (sk - sp) + shift;\n                let g = sk * ek;\n                for (let j = k; j < p - 1; j++) {\n                    let t = SingularValueDecomposition.hypot(f, g);\n                    let cs = f / t;\n                    let sn = g / t;\n                    if (j != k)\n                        e[j - 1] = t;\n                    f = cs * s[j] + sn * e[j];\n                    e[j] = cs * e[j] - sn * s[j];\n                    g = sn * s[j + 1];\n                    s[j + 1] = cs * s[j + 1];\n                    if (wantv) {\n                        for (let i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][j + 1];\n                            V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                            V[i][j] = t;\n                        }\n                    }\n                    t = SingularValueDecomposition.hypot(f, g);\n                    cs = f / t;\n                    sn = g / t;\n                    s[j] = t;\n                    f = cs * e[j] + sn * s[j + 1];\n                    s[j + 1] = -sn * e[j] + cs * s[j + 1];\n                    g = sn * e[j + 1];\n                    e[j + 1] = cs * e[j + 1];\n                    if (wantu && (j < m - 1)) {\n                        for (let i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][j + 1];\n                            U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n                e[p - 2] = f;\n                iter = iter + 1;\n            }\n            else if (kase == 4) {\n                if (s[k] <= 0.0) {\n                    s[k] = (s[k] < 0.0 ? -s[k] : 0.0);\n                    if (wantv) {\n                        for (let i = 0; i <= pp; i++)\n                            V[i][k] = -V[i][k];\n                    }\n                }\n                while (k < pp) {\n                    if (s[k] >= s[k + 1])\n                        break;\n                    let t = s[k];\n                    s[k] = s[k + 1];\n                    s[k + 1] = t;\n                    if (wantv && (k < n - 1)) {\n                        for (let i = 0; i < n; i++) {\n                            t = V[i][k + 1];\n                            V[i][k + 1] = V[i][k];\n                            V[i][k] = t;\n                        }\n                    }\n                    if (wantu && (k < m - 1)) {\n                        for (let i = 0; i < m; i++) {\n                            t = U[i][k + 1];\n                            U[i][k + 1] = U[i][k];\n                            U[i][k] = t;\n                        }\n                    }\n                    k++;\n                }\n                iter = 0;\n                p--;\n            }\n        }\n    }\n    getU() {\n        return Matrix.fromArray(this.U);\n    }\n    getV() {\n        return Matrix.fromArray(this.V);\n    }\n    getSingularValues() {\n        return this.s;\n    }\n    getS() {\n        const { n } = this;\n        let X = new Matrix(n, n, 0);\n        let S = X.A;\n        for (let i = 0; i < n; i++)\n            S[i][i] = this.s[i];\n        return X;\n    }\n    norm2() {\n        return this.s[0];\n    }\n    cond() {\n        const { m, n, s } = this;\n        return s[0] / s[Math.min(m, n) - 1];\n    }\n    rank() {\n        const { m, n, s } = this;\n        let eps = Math.pow(2.0, -52.0);\n        let tol = Math.max(m, n) * s[0] * eps;\n        let r = 0;\n        for (let i = 0; i < s.length; i++)\n            if (s[i] > tol)\n                r++;\n        return r;\n    }\n    static hypot(a, b) {\n        let r;\n        if (Math.abs(a) > Math.abs(b)) {\n            r = b / a;\n            r = Math.abs(a) * Math.sqrt(1 + r * r);\n        }\n        else if (b != 0) {\n            r = a / b;\n            r = Math.abs(b) * Math.sqrt(1 + r * r);\n        }\n        else {\n            r = 0.0;\n        }\n        return r;\n    }\n}\n//# sourceMappingURL=Matrix.js.map","import { norm2_xy, norm_xy, sqr } from './util';\nimport { Vec } from './Vec';\nconst EPSILON = Math.pow(2, -52);\nexport class Triangulation2D {\n    constructor(px, py) {\n        this.px = px;\n        this.py = py;\n        this.numTriangles = 0;\n        this.edgeStack = Vec.numberArray(0, 512);\n        this.hull = null;\n        this.px = px;\n        this.py = py;\n        this.sz = px.length;\n        let maxTriangles = Math.max(2 * this.sz - 5, 0);\n        this.triangles = new Array(maxTriangles * 3);\n        this.halfedges = new Array(maxTriangles * 3);\n        this.hashSize = Math.ceil(Math.sqrt(this.sz));\n        this.hullPrev = new Array(this.sz);\n        this.hullNext = new Array(this.sz);\n        this.hullTri = new Array(this.sz);\n        this.hullHash = Vec.numberArray(-1, this.hashSize);\n        this.ids = new Array(this.sz);\n        this.dists = new Array(this.sz);\n        this.update();\n    }\n    trimConcave(threshold) {\n        const threshSq = sqr(threshold);\n        const { sz, px, py } = this;\n        let tri = this.triangles.slice(0);\n        let edge = [];\n        for (let n = 0, i = 0; i < tri.length; n++, i += 3) {\n            edge.push(sz * Math.min(tri[i + 0], tri[i + 1]) + Math.max(tri[i + 0], tri[i + 1]));\n            edge.push(sz * Math.min(tri[i + 0], tri[i + 2]) + Math.max(tri[i + 0], tri[i + 2]));\n            edge.push(sz * Math.min(tri[i + 1], tri[i + 2]) + Math.max(tri[i + 1], tri[i + 2]));\n        }\n        let uniqueEdges = Vec.uniqueUnstable(edge);\n        for (let n = 0; n < edge.length; n++)\n            edge[n] = uniqueEdges.indexOf(edge[n]);\n        let edgeCount = new Array(edge.length);\n        while (true) {\n            const ntri = tri.length / 3;\n            edgeCount.fill(0);\n            for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n                edgeCount[edge[i + 0]]++;\n                edgeCount[edge[i + 1]]++;\n                edgeCount[edge[i + 2]]++;\n            }\n            let mask = Vec.booleanArray(true, ntri);\n            for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n                const c1 = edgeCount[edge[i + 0]];\n                const c2 = edgeCount[edge[i + 1]];\n                const c3 = edgeCount[edge[i + 2]];\n                const i1 = tri[i], i2 = tri[i + 1], i3 = tri[i + 2];\n                if (c1 == 1 && c2 != 1 && c3 != 1)\n                    mask[n] = norm2_xy(px[i1] - px[i2], py[i1] - py[i2]) < threshSq;\n                else if (c1 != 1 && c2 == 1 && c3 != 1)\n                    mask[n] = norm2_xy(px[i1] - px[i3], py[i1] - py[i3]) < threshSq;\n                else if (c1 != 1 && c2 != 1 && c3 == 1)\n                    mask[n] = norm2_xy(px[i2] - px[i3], py[i2] - py[i3]) < threshSq;\n            }\n            if (Vec.allTrue(mask))\n                break;\n            let repTri = new Array(Vec.maskCount(mask) * 3);\n            let repEdge = new Array(Vec.maskCount(mask) * 3);\n            for (let n = 0, i = 0, j = 0, k = 0; n < ntri; n++, i += 3)\n                if (mask[n]) {\n                    repTri[j++] = tri[i];\n                    repTri[j++] = tri[i + 1];\n                    repTri[j++] = tri[i + 2];\n                    repEdge[k++] = edge[i];\n                    repEdge[k++] = edge[i + 1];\n                    repEdge[k++] = edge[i + 2];\n                }\n            tri = repTri;\n            edge = repEdge;\n        }\n        return tri;\n    }\n    traceOutline(tri) {\n        const npt = tri.length, ntri = npt / 3;\n        const { sz, px, py } = this;\n        let edgeCount = new Map();\n        for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n            const e1 = sz * Math.min(tri[i + 0], tri[i + 1]) + Math.max(tri[i + 0], tri[i + 1]);\n            const e2 = sz * Math.min(tri[i + 0], tri[i + 2]) + Math.max(tri[i + 0], tri[i + 2]);\n            const e3 = sz * Math.min(tri[i + 1], tri[i + 2]) + Math.max(tri[i + 1], tri[i + 2]);\n            edgeCount.set(e1, (edgeCount.get(e1) || 0) + 1);\n            edgeCount.set(e2, (edgeCount.get(e2) || 0) + 1);\n            edgeCount.set(e3, (edgeCount.get(e3) || 0) + 1);\n        }\n        let edgePairs = [];\n        for (let entry of edgeCount.entries())\n            if (entry[1] == 1) {\n                const e = entry[0];\n                const i1 = Math.floor(e / sz), i2 = e % sz;\n                edgePairs.push(i1);\n                edgePairs.push(i2);\n            }\n        const idx = Vec.uniqueUnstable(edgePairs);\n        const isz = idx.length;\n        const idxMap = new Map();\n        for (let n = 0; n < isz; n++)\n            idxMap.set(idx[n], n);\n        let g1 = Vec.numberArray(-1, isz), g2 = Vec.numberArray(-1, isz);\n        for (let n = 0; n < edgePairs.length; n += 2) {\n            const i1 = idxMap.get(edgePairs[n]), i2 = idxMap.get(edgePairs[n + 1]);\n            if (g1[i1] < 0)\n                g1[i1] = i2;\n            else\n                g2[i1] = i2;\n            if (g1[i2] < 0)\n                g1[i2] = i1;\n            else\n                g2[i2] = i1;\n        }\n        let mask = Vec.booleanArray(false, isz);\n        let sequence = new Array(isz);\n        sequence[0] = 0;\n        mask[0] = true;\n        for (let n = 1; n < isz; n++) {\n            const i = sequence[n - 1];\n            if (!mask[g1[i]])\n                sequence[n] = g1[i];\n            else\n                sequence[n] = g2[i];\n            mask[sequence[n]] = true;\n        }\n        return Vec.idxGet(idx, sequence);\n    }\n    update() {\n        const sz = this.sz;\n        let { px, py, ids, dists, triangles, halfedges } = this;\n        const minX = Vec.min(px), minY = Vec.min(py);\n        const maxX = Vec.max(px), maxY = Vec.max(py);\n        for (let n = 0; n < sz; n++)\n            ids[n] = n;\n        this.centreX = 0.5 * (minX + maxX);\n        this.centreY = 0.5 * (minY + maxY);\n        let i0 = 0, i1 = 0, i2 = 0;\n        let minDist = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            const d = norm_xy(this.centreX - px[n], this.centreY - py[n]);\n            if (d < minDist) {\n                i0 = n;\n                minDist = d;\n            }\n        }\n        const i0x = px[i0], i0y = py[i0];\n        minDist = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            if (n == i0)\n                continue;\n            const d = norm_xy(i0x - px[n], i0y - py[n]);\n            if (d < minDist && d > 0) {\n                i1 = n;\n                minDist = d;\n            }\n        }\n        let i1x = px[i1], i1y = py[i1];\n        let minRadius = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            if (n == i0 || n == i1)\n                continue;\n            let r = this.circumRadius(i0x, i0y, i1x, i1y, px[n], py[n]);\n            if (r < minRadius) {\n                i2 = n;\n                minRadius = r;\n            }\n        }\n        let i2x = px[i2], i2y = py[i2];\n        if (!Number.isFinite(minRadius)) {\n            for (let n = 0; n < sz; n++) {\n                dists[n] = px[n] - px[0];\n                if (dists[n] == 0)\n                    dists[n] = py[n] - py[0];\n            }\n            this.quicksort(0, sz - 1);\n            let hull = new Array(sz);\n            let j = 0;\n            let d0 = Number.NEGATIVE_INFINITY;\n            for (let n = 0; n < sz; n++) {\n                let id = ids[n];\n                if (dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = dists[id];\n                }\n            }\n            this.hull = hull.slice(0, j);\n            triangles = [];\n            halfedges = [];\n            return;\n        }\n        if (this.orient(i0x, i0y, i1x, i1y, i2x, i2y)) {\n            let i = i1;\n            let x = i1x, y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n        this.pickCircumCentre(i0x, i0y, i1x, i1y, i2x, i2y);\n        for (let n = 0; n < sz; n++)\n            dists[n] = norm_xy(px[n] - this.centreX, py[n] - this.centreY);\n        this.quicksort(0, sz - 1);\n        this.hullStart = i0;\n        let hullSize = 3;\n        const { hullNext, hullPrev, hullTri, hullHash, hashSize } = this;\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n        hullHash.fill(-1);\n        hullHash[this.hashKey(i0x, i0y)] = i0;\n        hullHash[this.hashKey(i1x, i1y)] = i1;\n        hullHash[this.hashKey(i2x, i2y)] = i2;\n        this.numTriangles = 0;\n        this.addTriangle(i0, i1, i2, -1, -1, -1);\n        let xp = 0, yp = 0;\n        for (let k = 0; k < ids.length; k++) {\n            let i = ids[k];\n            let x = px[i], y = py[i];\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON)\n                continue;\n            xp = x;\n            yp = y;\n            if (i == i0 || i == i1 || i == i2)\n                continue;\n            let start = 0;\n            for (let j = 0, key = this.hashKey(x, y); j < hashSize; j++) {\n                start = hullHash[(key + j) % hashSize];\n                if (start >= 0 && start != hullNext[start])\n                    break;\n            }\n            start = hullPrev[start];\n            let e = start, q = hullNext[e];\n            while (!this.orient(x, y, px[e], py[e], px[q], py[q])) {\n                e = q;\n                if (e == start) {\n                    e = -1;\n                    break;\n                }\n                q = hullNext[e];\n            }\n            if (e < 0)\n                continue;\n            let t = this.addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n            hullTri[i] = this.legalise(t + 2);\n            hullTri[e] = t;\n            hullSize++;\n            let n = hullNext[e];\n            q = hullNext[n];\n            while (this.orient(x, y, px[n], py[n], px[q], py[q])) {\n                t = this.addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this.legalise(t + 2);\n                hullNext[n] = n;\n                hullSize--;\n                n = q;\n                q = hullNext[n];\n            }\n            if (e == start) {\n                q = hullPrev[e];\n                while (this.orient(x, y, px[q], py[q], px[e], py[e])) {\n                    t = this.addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this.legalise(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e;\n                    hullSize--;\n                    e = q;\n                    q = hullPrev[e];\n                }\n            }\n            this.hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n            hullHash[this.hashKey(x, y)] = i;\n            hullHash[this.hashKey(px[e], py[e])] = e;\n        }\n        this.hull = new Array(hullSize);\n        for (let n = 0, e = this.hullStart; n < hullSize; n++) {\n            this.hull[n] = e;\n            e = hullNext[e];\n        }\n        this.triangles = triangles.slice(0, this.numTriangles);\n        this.halfedges = halfedges.slice(0, this.numTriangles);\n    }\n    hashKey(x, y) {\n        return Math.floor(this.pseudoAngle(x - this.centreX, y - this.centreY) * this.hashSize) % this.hashSize;\n    }\n    legalise(a) {\n        let i = 0;\n        let ar = 0;\n        while (true) {\n            let b = this.halfedges[a];\n            let a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n            if (b < 0) {\n                if (i == 0)\n                    break;\n                a = this.edgeStack[--i];\n                continue;\n            }\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n            const { px, py, triangles, halfedges } = this;\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n            let illegal = this.inCircle(px[p0], py[p0], px[pr], py[pr], px[pl], py[pl], px[p1], py[p1]);\n            if (illegal) {\n                this.triangles[a] = p1;\n                this.triangles[b] = p0;\n                const hbl = halfedges[bl];\n                if (hbl < 0) {\n                    let e = this.hullStart;\n                    do {\n                        if (this.hullTri[e] == bl) {\n                            this.hullTri[e] = a;\n                            break;\n                        }\n                        e = this.hullPrev[e];\n                    } while (e != this.hullStart);\n                }\n                this.link(a, hbl);\n                this.link(b, halfedges[ar]);\n                this.link(ar, bl);\n                const br = b0 + (b + 1) % 3;\n                if (i < this.edgeStack.length)\n                    this.edgeStack[i++] = br;\n            }\n            else {\n                if (i == 0)\n                    break;\n                a = this.edgeStack[--i];\n            }\n        }\n        return ar;\n    }\n    link(a, b) {\n        this.halfedges[a] = b;\n        if (b >= 0)\n            this.halfedges[b] = a;\n    }\n    addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.numTriangles;\n        this.triangles[t] = i0;\n        this.triangles[t + 1] = i1;\n        this.triangles[t + 2] = i2;\n        this.link(t, a);\n        this.link(t + 1, b);\n        this.link(t + 2, c);\n        this.numTriangles += 3;\n        return t;\n    }\n    pseudoAngle(dx, dy) {\n        const p = dx / (Math.abs(dx) + Math.abs(dy));\n        return (dy > 0 ? 3 - p : 1 + p) / 4;\n    }\n    orientIfSure(px, py, rx, ry, qx, qy) {\n        const l = (ry - py) * (qx - px);\n        const r = (rx - px) * (qy - py);\n        return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n    }\n    orient(rx, ry, qx, qy, px, py) {\n        let o = this.orientIfSure(px, py, rx, ry, qx, qy);\n        if (o != 0)\n            return o < 0;\n        o = this.orientIfSure(rx, ry, qx, qy, px, py);\n        if (o != 0)\n            return o < 0;\n        o = this.orientIfSure(qx, qy, px, py, rx, ry);\n        return o < 0;\n    }\n    inCircle(ax, ay, bx, by, cx, cy, px, py) {\n        const dx = ax - px;\n        const dy = ay - py;\n        const ex = bx - px;\n        const ey = by - py;\n        const fx = cx - px;\n        const fy = cy - py;\n        const ap = dx * dx + dy * dy;\n        const bp = ex * ex + ey * ey;\n        const cp = fx * fx + fy * fy;\n        return dx * (ey * cp - bp * fy) -\n            dy * (ex * cp - bp * fx) +\n            ap * (ex * fy - ey * fx) < 0;\n    }\n    circumRadius(ax, ay, bx, by, cx, cy) {\n        const dx = bx - ax;\n        const dy = by - ay;\n        const ex = cx - ax;\n        const ey = cy - ay;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        const d = 0.5 / (dx * ey - dy * ex);\n        const x = (ey * bl - dy * cl) * d;\n        const y = (dx * cl - ex * bl) * d;\n        return x * x + y * y;\n    }\n    pickCircumCentre(ax, ay, bx, by, cx, cy) {\n        const dx = bx - ax;\n        const dy = by - ay;\n        const ex = cx - ax;\n        const ey = cy - ay;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        const d = 0.5 / (dx * ey - dy * ex);\n        this.centreX = ax + (ey * bl - dy * cl) * d;\n        this.centreY = ay + (dx * cl - ex * bl) * d;\n    }\n    quicksort(left, right) {\n        const { ids, dists } = this;\n        if (right - left <= 20) {\n            for (let i = left + 1; i <= right; i++) {\n                const temp = ids[i];\n                const tempDist = dists[temp];\n                let j = i - 1;\n                while (j >= left && dists[ids[j]] > tempDist)\n                    ids[j + 1] = ids[j--];\n                ids[j + 1] = temp;\n            }\n        }\n        else {\n            let median = (left + right) >> 1;\n            let i = left + 1;\n            let j = right;\n            Vec.swap(ids, median, i);\n            if (dists[ids[left]] > dists[ids[right]])\n                Vec.swap(ids, left, right);\n            if (dists[ids[i]] > dists[ids[right]])\n                Vec.swap(ids, i, right);\n            if (dists[ids[left]] > dists[ids[i]])\n                Vec.swap(ids, left, i);\n            let temp = ids[i];\n            const tempDist = dists[temp];\n            while (true) {\n                do\n                    i++;\n                while (dists[ids[i]] < tempDist);\n                do\n                    j--;\n                while (dists[ids[j]] > tempDist);\n                if (j < i)\n                    break;\n                Vec.swap(ids, i, j);\n            }\n            ids[left + 1] = ids[j];\n            ids[j] = temp;\n            if (right - i + 1 >= j - left) {\n                this.quicksort(i, right);\n                this.quicksort(left, j - 1);\n            }\n            else {\n                this.quicksort(left, j - 1);\n                this.quicksort(i, right);\n            }\n        }\n    }\n}\n//# sourceMappingURL=Triangulation2D.js.map","import { Matrix, SingularValueDecomposition } from './Matrix';\nimport { Triangulation2D } from './Triangulation2D';\nimport { angleDiff, angleDiffPos, angleNorm, maxArray, minArray, norm2_xy, norm_xy, realEqual, sqr, TWOPI } from './util';\nimport { Vec } from './Vec';\nexport class GeomUtil {\n    static pointInPolygon(x, y, px, py) {\n        if (x < minArray(px) || x > maxArray(px) || y < minArray(py) || y > maxArray(py))\n            return false;\n        let sz = px.length;\n        for (let n = 0; n < sz; n++)\n            if (px[n] == x && py[n] == y)\n                return true;\n        let phase = false;\n        for (let n = 0; n < sz; n++) {\n            let x1 = px[n], y1 = py[n], x2 = px[n + 1 < sz ? n + 1 : 0], y2 = py[n + 1 < sz ? n + 1 : 0];\n            if (y > Math.min(y1, y2) && y <= Math.max(y1, y2) && x <= Math.max(x1, x2) && y1 != y2) {\n                let intr = (y - y1) * (x2 - x1) / (y2 - y1) + x1;\n                if (x1 == x2 || x <= intr)\n                    phase = !phase;\n            }\n        }\n        return phase;\n    }\n    static areLinesParallel(x1, y1, x2, y2, x3, y3, x4, y4) {\n        let dxa = x2 - x1, dya = y2 - y1, dxb = x4 - x3, dyb = y4 - y3;\n        let xmajorA = Math.abs(dxa) > Math.abs(dya), xmajorB = Math.abs(dxb) > Math.abs(dyb);\n        if (xmajorA != xmajorB)\n            return false;\n        const EPS = 1E-6;\n        if (xmajorA)\n            return Math.abs(dya / dxa - dyb / dxb) < EPS;\n        else\n            return Math.abs(dxa / dya - dxb / dyb) < EPS;\n    }\n    static lineIntersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        let u = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n        return [x1 + u * (x2 - x1), y1 + u * (y2 - y1)];\n    }\n    static isPointOnLineSeg(px, py, x1, y1, x2, y2) {\n        if (px < Math.min(x1, x2) || px > Math.max(x1, x2) || py < Math.min(y1, y2) || py > Math.max(y1, y2))\n            return false;\n        if ((px == x1 && py == y1) || (px == x2 && py == y2))\n            return true;\n        let dx = x2 - x1, dy = y2 - y1;\n        if (Math.abs(dx) > Math.abs(dy))\n            return realEqual(py, (dy / dx) * (px - x1) + y1);\n        else\n            return realEqual(px, (dx / dy) * (py - y1) + x1);\n    }\n    static pointLineDistance(px, py, x1, y1, x2, y2) {\n        let dx = x2 - x1, dy = y2 - y1;\n        return Math.abs(dy * px - dx * py + x2 * y1 - y2 * x1) / norm_xy(dx, dy);\n    }\n    static pointLineSegDistance(px, py, x1, y1, x2, y2) {\n        let dx = x2 - x1, dy = y2 - y1;\n        let t = ((px - x1) * dx + (py - y1) * dy) / norm2_xy(dx, dy);\n        t = Math.max(0, Math.min(1, t));\n        let tx = x1 + t * dx, ty = y1 + t * dy;\n        return norm_xy(px - tx, py - ty);\n    }\n    static doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (Math.max(x1, x2) < Math.min(x3, x4) || Math.max(y1, y2) < Math.min(y3, y4))\n            return false;\n        if (Math.min(x1, x2) > Math.max(x3, x4) || Math.min(y1, y2) > Math.max(y3, y4))\n            return false;\n        if ((x1 == x3 && y1 == y3) || (x1 == x4 && y1 == y4) || (x2 == x3 && y2 == y3) || (x2 == x4 && y2 == y4))\n            return true;\n        if ((x1 == x2 || x3 == x4) && (x1 == x3 || x1 == x4 || x2 == x3 || x2 == x4))\n            return true;\n        if ((y1 == y2 || y3 == y4) && (y1 == y3 || y1 == y4 || y2 == y3 || y2 == y4))\n            return true;\n        let x4_x3 = x4 - x3, y4_y3 = y4 - y3, x2_x1 = x2 - x1, y2_y1 = y2 - y1, x1_x3 = x1 - x3, y1_y3 = y1 - y3;\n        let nx = x4_x3 * y1_y3 - y4_y3 * x1_x3;\n        let ny = x2_x1 * y1_y3 - y2_y1 * x1_x3;\n        let dn = y4_y3 * x2_x1 - x4_x3 * y2_y1;\n        if (dn == 0)\n            return false;\n        if (dn < 0) {\n            dn = -dn;\n            nx = -nx;\n            ny = -ny;\n        }\n        return nx >= 0 && nx <= dn && ny >= 0 && ny <= dn;\n    }\n    static rectsIntersect(x1, y1, w1, h1, x2, y2, w2, h2) {\n        if (x1 <= x2 && x1 + w1 >= x2 + w2 && y1 <= y2 && y1 + h1 >= y2 + h2)\n            return true;\n        if (x2 <= x1 && x2 + w2 >= x1 + w1 && y2 <= y1 && y2 + h2 >= y1 + h1)\n            return true;\n        if (x1 + w1 < x2 || x2 + w2 < x1 || y1 + h1 < y2 || y2 + h2 < y1)\n            return false;\n        return true;\n    }\n    static sortAngles(theta) {\n        if (theta == null || theta.length < 2)\n            return theta;\n        theta = theta.slice(0);\n        for (let n = 0; n < theta.length; n++)\n            theta[n] = angleNorm(theta[n]);\n        if (theta.length == 2) {\n            if (angleDiffPos(theta[1], theta[0]) > Math.PI)\n                return [theta[1], theta[0]];\n            return theta;\n        }\n        Vec.sort(theta);\n        while (true) {\n            let a = theta[theta.length - 1], b = theta[0], c = theta[1];\n            if (angleDiff(b, a) <= angleDiff(c, b))\n                break;\n            for (let n = theta.length - 1; n > 0; n--)\n                theta[n] = theta[n - 1];\n            theta[0] = a;\n        }\n        return theta;\n    }\n    static idxSortAngles(theta) {\n        const sz = Vec.len(theta);\n        if (theta == null || sz < 2)\n            return Vec.identity0(sz);\n        if (sz == 2) {\n            if (angleDiffPos(theta[1], theta[0]) > Math.PI)\n                return [1, 0];\n            else\n                return [0, 1];\n        }\n        theta = Vec.duplicate(theta);\n        for (let n = 0; n < sz; n++)\n            theta[n] = angleNorm(theta[n]);\n        let idx = Vec.idxSort(theta);\n        while (true) {\n            let a = theta[idx[sz - 1]], b = theta[idx[0]], c = theta[idx[1]];\n            if (angleDiff(b, a) <= angleDiff(c, b))\n                break;\n            let last = idx.pop();\n            idx.unshift(last);\n        }\n        return idx;\n    }\n    static uniqueAngles(theta, threshold) {\n        let ang = GeomUtil.sortAngles(theta), ret = [];\n        ret.push(ang[0]);\n        for (let n = 1; n < ang.length; n++) {\n            if (Math.abs(angleDiff(ang[n], ang[n - 1])) > threshold)\n                ret.push(ang[n]);\n        }\n        return ret;\n    }\n    static thetaObtuse(th1, th2) {\n        let dth = th2 - th1;\n        while (dth < -Math.PI)\n            dth += 2 * Math.PI;\n        while (dth > Math.PI)\n            dth -= 2 * Math.PI;\n        return dth > 0 ? th1 - 0.5 * (2 * Math.PI - dth) : th1 + 0.5 * (2 * Math.PI + dth);\n    }\n    static emergentAngle(theta) {\n        let len = theta.length;\n        if (len == 1)\n            return theta[0];\n        if (len == 2)\n            return 0.5 * (theta[0] + theta[1]);\n        Vec.sort(theta);\n        let bottom = 0;\n        let behind = angleDiffPos(theta[0], theta[len - 1]);\n        for (let n = 1; n < len; n++) {\n            let delta = angleDiffPos(theta[n], theta[n - 1]);\n            if (delta > behind) {\n                bottom = n;\n                behind = delta;\n            }\n        }\n        let sum = 0;\n        for (let n = 0; n < len; n++) {\n            let delta = theta[n] - theta[bottom];\n            if (delta < 0)\n                delta += TWOPI;\n            sum += delta;\n        }\n        return sum / len + theta[bottom];\n    }\n    static dotProduct(v1, v2) {\n        return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\n    }\n    static crossProduct(v1, v2) {\n        const x = v1[1] * v2[2] - v1[2] * v2[1];\n        const y = v1[2] * v2[0] - v1[0] * v2[2];\n        const z = v1[0] * v2[1] - v1[1] * v2[0];\n        return [x, y, z];\n    }\n    static affineTranslate(dx, dy) {\n        return [[1, 0, dx], [0, 1, dy], [0, 0, 1]];\n    }\n    static affineMirror(xaxis, yaxis) {\n        return [[xaxis ? -1 : 1, 0, 0], [0, yaxis ? -1 : 1, 0], [0, 0, 1]];\n    }\n    static affineScale(sx, sy) {\n        return [[sx, 0, 0], [0, sy, 0], [0, 0, 1]];\n    }\n    static affineRotate(theta) {\n        let cos = Math.cos(theta), sin = Math.sin(theta);\n        return [[cos, -sin, 0], [sin, cos, 0], [0, 0, 1]];\n    }\n    static affineCompose(A, B) {\n        let tfm = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n        let Acol = [0, 0, 0];\n        for (let j = 0; j < 3; j++) {\n            for (let k = 0; k < 3; k++)\n                Acol[k] = A[k][j];\n            for (let i = 0; i < 3; i++) {\n                let Brow = B[i];\n                let s = 0;\n                for (let k = 0; k < 3; k++)\n                    s += Acol[k] * Brow[k];\n                tfm[i][j] = s;\n            }\n        }\n        return tfm;\n    }\n    static applyAffine(x, y, tfm) {\n        return [x * tfm[0][0] + y * tfm[0][1] + tfm[0][2], x * tfm[1][0] + y * tfm[1][1] + tfm[1][2]];\n    }\n    static applyAffineArray(x, y, tfm) {\n        for (let n = 0; n < x.length; n++)\n            [x[n], y[n]] = this.applyAffine(x[n], y[n], tfm);\n    }\n    static isAffineMirror(tfm) {\n        let a = tfm[0][0], b = tfm[0][1], c = tfm[0][2];\n        let d = tfm[1][0], e = tfm[1][1], f = tfm[1][2];\n        let g = tfm[2][0], h = tfm[2][1], i = tfm[2][2];\n        return a * e * i + b * f * g + c * d * h - c * e * g - b * d * i - a * f * h < 0;\n    }\n    static magnitude2(v) {\n        return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n    }\n    static magnitude(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n    }\n    static dist2(v1, v2) {\n        let dx = v1[0] - v2[0], dy = v1[1] - v2[1], dz = v1[2] - v2[2];\n        return dx * dx + dy * dy + dz * dz;\n    }\n    static dist(v1, v2) {\n        let dx = v1[0] - v2[0], dy = v1[1] - v2[1], dz = v1[2] - v2[2];\n        return Math.sqrt(dx * dx + dy * dy + dz * dz);\n    }\n    static normalise(v) {\n        const dsq = v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n        if (dsq == 0)\n            return;\n        const inv = 1.0 / Math.sqrt(dsq);\n        v[0] *= inv;\n        v[1] *= inv;\n        v[2] *= inv;\n    }\n    static normalised(v) {\n        let ret = v.slice(0);\n        this.normalise(ret);\n        return ret;\n    }\n    static acuteAngle(v1, v2) {\n        let mag1 = this.magnitude(v1), mag2 = this.magnitude(v2);\n        if (mag1 == 0 || mag2 == 0)\n            return 0;\n        let dot = this.dotProduct(v1, v2);\n        let cosTheta = dot / (mag1 * mag2);\n        cosTheta = Math.max(-1, Math.min(1, cosTheta));\n        return Math.acos(cosTheta);\n    }\n    static arcControlPoints(rad, x1, y1, x2, y2) {\n        let t1x = -y1, t1y = x1;\n        let t2x = y2, t2y = -x2;\n        let dx = 0.5 * (x1 + x2);\n        let dy = 0.5 * (y1 + y2);\n        let tx = 3 / 8 * (t1x + t2x);\n        let ty = 3 / 8 * (t1y + t2y);\n        let a = tx * tx + ty * ty;\n        let b = dx * tx + dy * ty;\n        let c = dx * dx + dy * dy - rad * rad;\n        let D = b * b - a * c;\n        let k = (Math.sqrt(D) - b) / a;\n        return [x1 + k * t1x, y1 + k * t1y, x2 + k * t2x, y2 + k * t2y];\n    }\n    static createBezierEllipse(cx, cy, rw, rh, theta) {\n        let nseg = 24, npt = 2 * nseg + 1;\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        let incrAlpha = TWOPI / nseg;\n        let px = new Array(npt), py = new Array(npt);\n        for (let n = 0; n < nseg; n++) {\n            let alpha = n * incrAlpha;\n            let cosAlpha = Math.cos(alpha), sinAlpha = Math.sin(alpha);\n            px[n * 2] = rw * cosAlpha * cosTheta - rh * sinAlpha * sinTheta + cx;\n            py[n * 2] = rw * cosAlpha * sinTheta + rh * sinAlpha * cosTheta + cy;\n        }\n        px[npt - 1] = px[0];\n        py[npt - 1] = py[0];\n        let smooth = 0.3;\n        for (let n = 0; n < nseg; n++) {\n            let n1 = (n - 1 + nseg) % nseg;\n            let n2 = n;\n            let n3 = (n + 1) % nseg;\n            let n4 = (n + 2) % nseg;\n            let x1 = px[n1 * 2], x2 = px[n2 * 2], x3 = px[n3 * 2], x4 = px[n4 * 2];\n            let y1 = py[n1 * 2], y2 = py[n2 * 2], y3 = py[n3 * 2], y4 = py[n4 * 2];\n            px[n * 2 + 1] = 0.5 * (x2 + x3 + smooth * (x2 - x1 + x3 - x4));\n            py[n * 2 + 1] = 0.5 * (y2 + y3 + smooth * (y2 - y1 + y3 - y4));\n        }\n        let ctrl = new Array(npt);\n        for (let n = 0; n < npt; n++)\n            ctrl[n] = (n & 1) == 1;\n        return { px, py, ctrl };\n    }\n    static fitCircle(x, y) {\n        let dsq = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < x.length; n++)\n            dsq = Math.min(dsq, norm2_xy(x[n], y[n]));\n        return Math.sqrt(dsq);\n    }\n    static fitEllipse(px, py, minX, minY, maxX, maxY) {\n        let bestW = 0.5 * this.fitCircle(px, py), bestH = bestW, bestScore = bestW * bestH;\n        let x = Vec.concat(px, [minX, maxX, 0, 0]);\n        let y = Vec.concat(py, [0, 0, minY, maxY]);\n        const sz = x.length;\n        let shrinkToFit = (whs) => {\n            let dmin = Number.POSITIVE_INFINITY;\n            let invW2 = 1.0 / (whs[0] * whs[0]), invH2 = 1.0 / (whs[1] * whs[1]);\n            for (let n = 0; n < sz; n++)\n                dmin = Math.min(dmin, Math.sqrt(x[n] * x[n] * invW2 + y[n] * y[n] * invH2));\n            if (dmin < 1) {\n                whs[0] *= dmin;\n                whs[1] *= dmin;\n            }\n            whs[2] = whs[0] * whs[1];\n        };\n        let mul = 1;\n        let whsX = [0, 0, 0], whsY = [0, 0, 0];\n        while (mul > 0.001) {\n            whsX[0] = bestW * (1 + mul);\n            whsX[1] = bestH;\n            shrinkToFit(whsX);\n            whsY[0] = bestW;\n            whsY[1] = bestH * (1 + mul);\n            shrinkToFit(whsY);\n            let anything = false;\n            if (whsX[2] > bestScore) {\n                bestW = whsX[0];\n                bestH = whsX[1];\n                bestScore = whsX[2];\n                anything = true;\n            }\n            if (whsY[2] > bestScore) {\n                bestW = whsY[0];\n                bestH = whsY[1];\n                bestScore = whsY[2];\n                anything = true;\n            }\n            if (!anything)\n                mul *= 0.6;\n        }\n        return [bestW, bestH];\n    }\n    static superimpose(ax, ay, bx, by) {\n        let sz = ax.length;\n        if (sz == 1) {\n            let dx = bx[0] - ax[0], dy = by[0] - ay[0];\n            return [[1, 0, dx], [0, 1, dy], [0, 0, 1]];\n        }\n        if (sz == 2) {\n            let thetaA = Math.atan2(ay[1] - ay[0], ax[1] - ax[0]), thetaB = Math.atan2(by[1] - by[0], bx[1] - bx[0]);\n            let delta = angleDiff(thetaB, thetaA), cos = Math.cos(delta), sin = Math.sin(delta);\n            let rot00 = cos, rot01 = -sin;\n            let rot10 = sin, rot11 = cos;\n            let acx = 0.5 * (ax[0] + ax[1]), acy = 0.5 * (ay[0] + ay[1]);\n            let bcx = 0.5 * (bx[0] + bx[1]), bcy = 0.5 * (by[0] + by[1]);\n            let rax = rot00 * acx + rot01 * acy;\n            let ray = rot10 * acx + rot11 * acy;\n            return [[rot00, rot01, bcx - rax], [rot10, rot11, bcy - ray], [0, 0, 1]];\n        }\n        let invsz = 1.0 / sz;\n        let acx = Vec.sum(ax) * invsz, acy = Vec.sum(ay) * invsz;\n        let bcx = Vec.sum(bx) * invsz, bcy = Vec.sum(by) * invsz;\n        let mtxA = new Matrix(3, sz), mtxB = new Matrix(3, sz);\n        for (let n = 0; n < sz; n++) {\n            mtxA.set(0, n, ax[n] - acx);\n            mtxA.set(1, n, ay[n] - acy);\n            mtxA.set(2, n, 0);\n            mtxB.set(0, n, bx[n] - bcx);\n            mtxB.set(1, n, by[n] - bcy);\n            mtxB.set(2, n, 0);\n        }\n        let cov = mtxA.times(mtxB.transpose());\n        let svd = new SingularValueDecomposition(cov);\n        let rotate = svd.getV().times(svd.getU().transpose());\n        let rot00 = rotate.get(0, 0), rot01 = rotate.get(0, 1);\n        let rot10 = rotate.get(1, 0), rot11 = rotate.get(1, 1);\n        let rax = rot00 * acx + rot01 * acy;\n        let ray = rot10 * acx + rot11 * acy;\n        return [[rot00, rot01, bcx - rax], [rot10, rot11, bcy - ray], [0, 0, 1]];\n    }\n    static convexHull(x, y, flatness) {\n        let algo = new QuickHull(x, y, sqr(flatness * 0.1));\n        return [algo.hullX, algo.hullY];\n    }\n    static outlinePolygon(x, y, diameter) {\n        let del = new Triangulation2D(x, y);\n        let concave = del.trimConcave(diameter);\n        let idx = del.traceOutline(concave);\n        return [Vec.idxGet(x, idx), Vec.idxGet(y, idx)];\n    }\n}\nexport class QuickHull {\n    constructor(x, y, threshSq) {\n        this.x = x;\n        this.y = y;\n        this.threshSq = threshSq;\n        this.hsz = 0;\n        this.hullX = [];\n        this.hullY = [];\n        const sz = x.length;\n        let l = 0, r = 0;\n        for (let n = 0; n < sz; n++) {\n            if (x[r] > x[n] || (x[r] == x[n] && y[r] > y[n]))\n                r = n;\n            if (x[l] < x[n] || (x[l] == x[n] && y[l] < y[n]))\n                l = n;\n        }\n        let al1 = [], al2 = [];\n        for (let n = 0; n < sz; n++) {\n            if (n != l && n != r) {\n                if (this.right(r, l, n) > 0)\n                    al1.push(n);\n                else\n                    al2.push(n);\n            }\n        }\n        this.hullX.push(x[r]);\n        this.hullY.push(y[r]);\n        this.quickHull(r, l, al1);\n        this.hullX.push(x[l]);\n        this.hullY.push(y[l]);\n        this.quickHull(l, r, al2);\n        for (let n = 0; n < this.hullX.length - 1;) {\n            if (norm2_xy(this.hullX[n] - this.hullY[n + 1], this.hullY[n] - this.hullY[n + 1]) < threshSq) {\n                this.hullX.splice(n + 1, 1);\n                this.hullY.splice(n + 1, 1);\n            }\n            else\n                n++;\n        }\n    }\n    quickHull(a, b, al) {\n        if (al.length == 0)\n            return;\n        let c = this.furthestPoint(a, b, al);\n        let al1 = [], al2 = [];\n        for (let n = 0; n < al.length; n++) {\n            let p = al[n];\n            if (p == a || p == b)\n                continue;\n            if (this.right(a, c, p) > 0)\n                al1.push(p);\n            else if (this.right(c, b, p) > 0)\n                al2.push(p);\n        }\n        this.quickHull(a, c, al1);\n        this.hullX.push(this.x[c]);\n        this.hullY.push(this.y[c]);\n        this.quickHull(c, b, al2);\n    }\n    right(a, b, p) {\n        const x = this.x, y = this.y;\n        return (x[a] - x[b]) * (y[p] - y[b]) - (x[p] - x[b]) * (y[a] - y[b]);\n    }\n    distance(a, b, p) {\n        const x = this.x, y = this.y;\n        let u = ((x[p] - x[a]) * (x[b] - x[a]) + (y[p] - y[a]) * (y[b] - y[a])) / ((x[b] - x[a]) * (x[b] - x[a]) + (y[b] - y[a]) * (y[b] - y[a]));\n        let ux = x[a] + u * (x[b] - x[a]);\n        let uy = y[a] + u * (y[b] - y[a]);\n        return ((ux - x[p]) * (ux - x[p]) + (uy - y[p]) * (uy - y[p]));\n    }\n    furthestPoint(a, b, al) {\n        let maxDist = -1;\n        let maxPos = -1;\n        for (let n = 0; n < al.length; n++) {\n            let p = al[n];\n            if (p == a || p == b)\n                continue;\n            let dist = this.distance(a, b, p);\n            if (dist > maxDist) {\n                maxDist = dist;\n                maxPos = p;\n            }\n        }\n        return maxPos;\n    }\n}\nexport class RollingBall {\n    constructor(x, y, diameter) {\n        this.x = x;\n        this.y = y;\n        this.sequence = [];\n        const sz = x.length;\n        const threshSq = diameter * diameter;\n        let first = Vec.idxMax(x), latest = first;\n        let direction = 0.0;\n        let visited = Vec.booleanArray(false, sz);\n        this.sequence.push(first);\n        let roll = () => {\n            let bestIdx = -1;\n            let bestDelta = 0, bestTheta = 0;\n            for (let n = 0; n < sz; n++)\n                if (n != latest && !visited[n]) {\n                    let dx = x[n] - x[latest], dy = y[n] - y[latest];\n                    let dsq = norm2_xy(dx, dy);\n                    if (dsq == 0 || dsq > threshSq)\n                        continue;\n                    let theta = Math.atan2(dy, dx), delta = angleDiffPos(theta, direction);\n                    if (bestIdx < 0 || delta < bestDelta) {\n                        bestIdx = n;\n                        bestDelta = delta;\n                        bestTheta = theta;\n                    }\n                }\n            if (bestIdx < 0)\n                return -1;\n            direction = angleNorm(bestTheta - 0.5 * Math.PI);\n            visited[bestIdx] = true;\n            return bestIdx;\n        };\n        while (true) {\n            let next = roll();\n            if (next < 0) {\n                this.sequence = null;\n                return;\n            }\n            if (next == first)\n                break;\n            this.sequence.push(next);\n            latest = next;\n        }\n    }\n    sequencePos() {\n        if (!this.sequence)\n            return null;\n        let posList = [];\n        for (let n of this.sequence)\n            posList.push(new Pos(this.x[n], this.y[n]));\n        return posList;\n    }\n    sequenceXY() {\n        if (!this.sequence)\n            return [null, null];\n        let px = [], py = [];\n        for (let n of this.sequence) {\n            px.push(this.x[n]);\n            py.push(this.y[n]);\n        }\n        return [px, py];\n    }\n}\nexport class Pos {\n    static zero() { return new Pos(); }\n    static fromArray(src) { return new Pos(src[0], src[1]); }\n    constructor(x, y) {\n        this.x = x == null ? 0 : x;\n        this.y = y == null ? 0 : y;\n    }\n    clone() { return new Pos(this.x, this.y); }\n    equals(other) { return this.x == other.x && this.y == other.y; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x *= mag;\n        this.y *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    }\n    withScaleBy(mag) {\n        return new Pos(this.x * mag, this.y * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Pos(this.x + dx, this.y + dy);\n    }\n    toString() { return '[' + this.x + ',' + this.y + ']'; }\n}\nexport class Size {\n    static zero() { return new Size(); }\n    static fromArray(src) { return new Size(src[0], src[1]); }\n    constructor(w, h) {\n        this.w = w == null ? 0 : w;\n        this.h = h == null ? 0 : h;\n    }\n    clone() { return new Size(this.w, this.h); }\n    equals(other) { return this.w == other.w && this.h == other.h; }\n    isZero() { return this.w == 0 && this.h == 0; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.w *= mag;\n        this.h *= mag;\n    }\n    fitInto(maxW, maxH) {\n        let scale = 1;\n        if (this.w > maxW)\n            scale = maxW / this.w;\n        if (this.h > maxH)\n            scale = Math.min(scale, maxH / this.h);\n        if (scale < 1)\n            this.scaleBy(scale);\n    }\n    withScaleBy(mag) {\n        return new Size(this.w * mag, this.h * mag);\n    }\n    toString() { return '[' + this.w + ',' + this.h + ']'; }\n}\nexport class Box {\n    static zero() { return new Box(); }\n    static fromBounds(x1, y1, x2, y2) { return new Box(x1, y1, x2 - x1, y2 - y1); }\n    static fromSize(sz) { return new Box(0, 0, sz.w, sz.h); }\n    static fromOval(oval) { return new Box(oval.cx - oval.rw, oval.cy - oval.rh, 2 * oval.rw, 2 * oval.rh); }\n    static fromArray(src) { return new Box(src[0], src[1], src[2], src[3]); }\n    constructor(x, y, w, h) {\n        this.x = x == null ? 0 : x;\n        this.y = y == null ? 0 : y;\n        this.w = w == null ? 0 : w;\n        this.h = h == null ? 0 : h;\n    }\n    clone() { return new Box(this.x, this.y, this.w, this.h); }\n    equals(other) { return this.x == other.x && this.y == other.y && this.w == other.w && this.h == other.h; }\n    getPos() { return new Pos(this.x, this.y); }\n    setPos(pos) {\n        this.x = pos.x;\n        this.y = pos.y;\n    }\n    getSize() { return new Size(this.w, this.h); }\n    setSize(sz) {\n        this.w = sz.w;\n        this.h = sz.h;\n    }\n    minX() { return this.x; }\n    minY() { return this.y; }\n    midX() { return this.x + 0.5 * this.w; }\n    midY() { return this.y + 0.5 * this.h; }\n    maxX() { return this.x + this.w; }\n    maxY() { return this.y + this.h; }\n    area() { return this.w * this.h; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x *= mag;\n        this.y *= mag;\n        this.w *= mag;\n        this.h *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    }\n    grow(bx, by) {\n        this.x -= bx;\n        this.y -= by;\n        this.w += 2 * bx;\n        this.h += 2 * by;\n    }\n    withScaleBy(mag) {\n        return new Box(this.x * mag, this.y * mag, this.w * mag, this.h * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Box(this.x + dx, this.y + dy, this.w, this.h);\n    }\n    withGrow(bx, by) {\n        return new Box(this.x - bx, this.y - by, this.w + 2 * bx, this.h + 2 * by);\n    }\n    intersects(other) {\n        return GeomUtil.rectsIntersect(this.x, this.y, this.w, this.h, other.x, other.y, other.w, other.h);\n    }\n    intersection(other) {\n        let x1 = this.x, x2 = x1 + this.w, y1 = this.y, y2 = y1 + this.h;\n        let x3 = other.x, x4 = x3 + other.w, y3 = other.y, y4 = y3 + other.h;\n        let x5 = Math.max(x1, x3), y5 = Math.max(y1, y3), x6 = Math.min(x2, x4), y6 = Math.min(y2, y4);\n        return new Box(x5, y5, x6 - x5, y6 - y5);\n    }\n    contains(x, y) {\n        return x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h;\n    }\n    union(other) {\n        let x1 = Math.min(this.x, other.x), x2 = Math.max(this.x + this.w, other.x + other.w);\n        let y1 = Math.min(this.y, other.y), y2 = Math.max(this.y + this.h, other.y + other.h);\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    isZero() { return this.w == 0 && this.h == 0; }\n    isEmpty() { return this.w == 0 && this.h == 0; }\n    notEmpty() { return this.w > 0 || this.h > 0; }\n    toString() { return '[' + this.x + ',' + this.y + ';' + this.w + ',' + this.h + ']'; }\n}\nexport class Oval {\n    static zero() { return new Oval(); }\n    static fromBox(box) { return new Oval(box.x + 0.5 * box.w, box.y + 0.5 * box.h, 0.5 * box.w, 0.5 * box.h); }\n    static fromArray(src) { return new Oval(src[0], src[1], src[2], src[3]); }\n    constructor(cx, cy, rw, rh) {\n        this.cx = cx == null ? 0 : cx;\n        this.cy = cy == null ? 0 : cy;\n        this.rw = rw == null ? 0 : rw;\n        this.rh = rh == null ? 0 : rh;\n    }\n    clone() { return new Oval(this.cx, this.cy, this.rw, this.rh); }\n    setCentre(pos) {\n        this.cx = pos.x;\n        this.cy = pos.y;\n    }\n    setRadius(sz) {\n        this.rw = sz.w;\n        this.rh = sz.h;\n    }\n    minX() { return this.cx - this.rw; }\n    minY() { return this.cy - this.rh; }\n    maxX() { return this.cx + this.rw; }\n    maxY() { return this.cy + this.rh; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.cx *= mag;\n        this.cy *= mag;\n        this.rw *= mag;\n        this.rh *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.cx += dx;\n        this.cy += dy;\n    }\n    withScaleBy(mag) {\n        return new Oval(this.cx * mag, this.cy * mag, this.rw * mag, this.rh * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Oval(this.cx + dx, this.cy + dy, this.rw, this.rh);\n    }\n    contains(x, y) {\n        let dx = x - this.cx, dy = y - this.cy;\n        let a = dx / this.rw, b = dy / this.rh;\n        return a * a + b * b <= 1;\n    }\n    toString() { return '[' + this.cx + ',' + this.cy + ';' + this.rw + ',' + this.rh + ']'; }\n}\nexport class Line {\n    static zero() { return new Line(); }\n    static fromPos(pos1, pos2) { return new Line(pos1.x, pos1.y, pos2.x, pos2.y); }\n    constructor(x1, y1, x2, y2) {\n        this.x1 = x1 == null ? 0 : x1;\n        this.y1 = y1 == null ? 0 : y1;\n        this.x2 = x2 == null ? 0 : x2;\n        this.y2 = y2 == null ? 0 : y2;\n    }\n    clone() { return new Line(this.x1, this.y1, this.x2, this.y2); }\n    setPos1(pos) {\n        this.x1 = pos.x;\n        this.y1 = pos.y;\n    }\n    setPos2(pos) {\n        this.x2 = pos.x;\n        this.y2 = pos.y;\n    }\n    minX() { return Math.min(this.x1, this.x2); }\n    minY() { return Math.min(this.y1, this.y2); }\n    maxX() { return Math.max(this.x1, this.x2); }\n    maxY() { return Math.max(this.y1, this.y2); }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x1 *= mag;\n        this.y1 *= mag;\n        this.x2 *= mag;\n        this.y2 *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x1 += dx;\n        this.y1 += dy;\n        this.x2 += dx;\n        this.y2 += dy;\n    }\n    toString() { return '[' + this.x1 + ',' + this.y1 + ';' + this.x2 + ',' + this.y2 + ']'; }\n}\n//# sourceMappingURL=Geom.js.map","const ELEMENT_NODE = 1;\nconst ATTRIBUTE_NODE = 2;\nconst TEXT_NODE = 3;\nconst CDATA_SECTION_NODE = 4;\nconst ENTITY_REFERENCE_NODE = 5;\nconst ENTITY_NODE = 6;\nconst PROCESSING_INSTRUCTION_NODE = 7;\nconst COMMENT_NODE = 8;\nconst DOCUMENT_NODE = 9;\nconst DOCUMENT_TYPE_NODE = 10;\nconst DOCUMENT_FRAGMENT_NODE = 11;\nconst NOTATION_NODE = 12;\nclass XML {\n    static parseXML(strXML) {\n        let xmlDoc;\n        if (this.customParser)\n            xmlDoc = new this.customParser().parseFromString(strXML, 'application/xml');\n        else\n            xmlDoc = new DOMParser().parseFromString(strXML, 'application/xml');\n        if (xmlDoc == null)\n            return null;\n        return xmlDoc;\n    }\n    static toString(doc) {\n        if (this.customSerial)\n            return new this.customSerial().serializeToString(doc.documentElement);\n        else\n            return new XMLSerializer().serializeToString(doc.documentElement);\n    }\n    static toPrettyString(doc) {\n        let xslt = [\n            '<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">',\n            '  <xsl:strip-space elements=\"*\"/>',\n            '  <xsl:template match=\"para[content-style][not(text())]\">',\n            '    <xsl:value-of select=\"normalize-space(.)\"/>',\n            '  </xsl:template>',\n            '  <xsl:template match=\"node()|@*\">',\n            '    <xsl:copy><xsl:apply-templates select=\"node()|@*\"/></xsl:copy>',\n            '  </xsl:template>',\n            '  <xsl:output indent=\"yes\"/>',\n            '</xsl:stylesheet>',\n        ].join('\\n');\n        let xsltDoc = this.parseXML(xslt);\n        let xsltProc = new XSLTProcessor();\n        xsltProc.importStylesheet(xsltDoc);\n        let resultDoc = xsltProc.transformToDocument(doc);\n        return new XMLSerializer().serializeToString(resultDoc);\n    }\n    static nodeText(el) {\n        let text = '';\n        for (let child of Array.from(el.childNodes)) {\n            if (child.nodeType == TEXT_NODE || child.nodeType == CDATA_SECTION_NODE)\n                text += child.nodeValue;\n        }\n        return text;\n    }\n    static childText(parent, tagName) {\n        if (parent == null)\n            return null;\n        let el = this.findElement(parent, tagName);\n        if (el == null)\n            return null;\n        return this.nodeText(el);\n    }\n    static appendElement(parent, name) {\n        let el = parent.ownerDocument.createElement(name);\n        parent.appendChild(el);\n        return el;\n    }\n    static appendElementAfter(presib, name) {\n        let el = presib.ownerDocument.createElement(name);\n        let postsib = presib.nextSibling;\n        if (postsib == null)\n            presib.parentNode.appendChild(el);\n        else\n            presib.parentNode.insertBefore(el, postsib);\n        return el;\n    }\n    static appendText(parent, text, isCDATA = false) {\n        if (text == null || text.length == 0)\n            return;\n        if (!isCDATA)\n            parent.appendChild(parent.ownerDocument.createTextNode(text));\n        else\n            parent.appendChild(parent.ownerDocument.createCDATASection(text));\n    }\n    static createTextChild(parent, name, text, isCDATA = false) {\n        let el = parent.ownerDocument.createElement(name);\n        parent.appendChild(el);\n        if (!isCDATA)\n            el.textContent = text;\n        else\n            el.appendChild(parent.ownerDocument.createCDATASection(text));\n    }\n    static setText(parent, text, isCDATA = false) {\n        while (parent.firstChild != null)\n            parent.removeChild(parent.firstChild);\n        this.appendText(parent, text, isCDATA);\n    }\n    static findElement(parent, tagName) {\n        if (parent == null)\n            return null;\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE && node.nodeName == tagName)\n                return node;\n            node = node.nextSibling;\n        }\n        return null;\n    }\n    static findChildElements(parent, tagName) {\n        if (parent == null)\n            return [];\n        let list = [];\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE && node.nodeName === tagName)\n                list.push(node);\n            node = node.nextSibling;\n        }\n        return list;\n    }\n    static childElements(parent) {\n        if (parent == null)\n            return [];\n        let list = [];\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE)\n                list.push(node);\n            node = node.nextSibling;\n        }\n        return list;\n    }\n}\nXML.customParser = null;\nXML.customSerial = null;\nexport { XML };\n//# sourceMappingURL=XML.js.map","import { Box, Pos, Size } from './Geom';\nimport { XML } from './XML';\nexport function dom(obj) {\n    if (typeof obj == 'string')\n        return DOM.parse(obj);\n    if (obj instanceof DOM)\n        return obj;\n    return new DOM(obj);\n}\nexport function domLegacy(obj) {\n    if (obj == null)\n        return null;\n    if (obj.jquery)\n        return dom(obj[0]);\n    return dom(obj);\n}\nexport class DOM {\n    constructor(el) {\n        this.el = el;\n    }\n    get elHTML() { return this.el; }\n    get elInput() { return this.el; }\n    get elCanvas() { return this.el; }\n    static parse(xhtml) {\n        let xml = XML.parseXML(xhtml);\n        if (xml == null)\n            throw 'Invalid XHTML string: ' + xhtml;\n        let html = xml.documentElement.outerHTML;\n        let template = document.createElement('template');\n        template.innerHTML = html;\n        return new DOM(template.content.firstChild);\n    }\n    static find(selector) {\n        let el = document.querySelector(selector);\n        return el ? new DOM(el) : null;\n    }\n    static findAll(selector) {\n        let nodeList = document.querySelectorAll(selector);\n        let domList = [];\n        for (let n = 0; n < nodeList.length; n++)\n            domList.push(new DOM(nodeList.item(n)));\n        return domList;\n    }\n    parent() {\n        let parent = this.el.parentElement;\n        return parent ? new DOM(parent) : null;\n    }\n    ancestor(selector) {\n        let el = this.el.closest(selector);\n        return el ? new DOM(el) : null;\n    }\n    children(tag) {\n        let domList = [];\n        for (let child = this.el.firstElementChild; child; child = child.nextElementSibling) {\n            if (tag && child.tagName.toLocaleLowerCase() != tag.toLocaleLowerCase())\n                continue;\n            domList.push(new DOM(child));\n        }\n        return domList;\n    }\n    find(selector) {\n        let el = this.el.querySelector(selector);\n        return el ? new DOM(el) : null;\n    }\n    findAll(selector) {\n        let nodeList = this.el.querySelectorAll(selector);\n        let domList = [];\n        for (let n = 0; n < nodeList.length; n++)\n            domList.push(new DOM(nodeList.item(n)));\n        return domList;\n    }\n    exists() {\n        return document.documentElement.contains(this.el);\n    }\n    isVisible() {\n        return this.elHTML.offsetWidth > 0 || this.elHTML.offsetHeight > 0 || this.elHTML.getClientRects().length > 0;\n    }\n    append(child) {\n        this.el.append(child.el);\n    }\n    appendTo(parent) {\n        if (parent instanceof DOM)\n            parent.el.append(this.el);\n        else\n            parent.appendChild(this.el);\n        return this;\n    }\n    prepend(child) {\n        this.el.prepend(child.el);\n    }\n    prependTo(parent) {\n        if (parent instanceof DOM)\n            parent.el.prepend(this.el);\n        else\n            parent.append(this.el);\n        return this;\n    }\n    insertBefore(ref) {\n        ref.el.parentElement.insertBefore(this.el, ref.el);\n        return this;\n    }\n    insertAfter(ref) {\n        let before = ref.el.nextElementSibling;\n        if (before)\n            ref.el.parentElement.insertBefore(this.el, before);\n        else\n            ref.el.parentElement.append(this.el);\n        return this;\n    }\n    remove() {\n        this.el.remove();\n    }\n    empty() {\n        this.el.innerHTML = '';\n    }\n    getHTML() {\n        return this.el.innerHTML;\n    }\n    setHTML(html) {\n        this.el.innerHTML = html;\n    }\n    appendHTML(xhtml) {\n        let xml = XML.parseXML('<z>' + xhtml + '</z>');\n        if (xml == null)\n            throw 'Invalid XHTML string: ' + xhtml;\n        let html = xml.documentElement.innerHTML;\n        this.el.insertAdjacentHTML('beforeend', html);\n    }\n    getText() {\n        return this.el.textContent;\n    }\n    setText(text) {\n        this.el.textContent = text;\n    }\n    appendText(text) {\n        let content = document.createTextNode(text);\n        this.el.appendChild(content);\n    }\n    getValue() {\n        return this.el.value;\n    }\n    setValue(str) {\n        this.el.value = str || '';\n    }\n    getCSS(key) {\n        return this.elHTML.style.getPropertyValue(key);\n    }\n    setCSS(key, value) {\n        this.elHTML.style.setProperty(key, value === null || value === void 0 ? void 0 : value.toString());\n    }\n    css(dict) {\n        for (let key in dict)\n            this.setCSS(key, dict[key].toString());\n        return this;\n    }\n    getAttr(key) {\n        if (!this.el.hasAttribute(key))\n            return null;\n        return this.el.getAttribute(key);\n    }\n    setAttr(key, value) {\n        this.el.setAttribute(key, value);\n    }\n    attr(dict) {\n        for (let key in dict)\n            this.setAttr(key, dict[key].toString());\n        return this;\n    }\n    addClass(clsnames) {\n        for (let cls of clsnames.split(' '))\n            if (cls)\n                this.elHTML.classList.add(cls);\n    }\n    removeClass(clsnames) {\n        for (let cls of clsnames.split(' '))\n            if (cls)\n                this.elHTML.classList.remove(cls);\n    }\n    hasClass(clsname) {\n        return this.elHTML.classList.contains(clsname);\n    }\n    setClass(clsname, flag) {\n        if (flag)\n            this.addClass(clsname);\n        else\n            this.removeClass(clsname);\n    }\n    class(clsname) {\n        this.addClass(clsname);\n        return this;\n    }\n    toggleClass(dict) {\n        for (let key in dict) {\n            if (dict[key])\n                this.elHTML.classList.add(key);\n            else\n                this.elHTML.classList.remove(key);\n        }\n    }\n    width() {\n        return this.elHTML.offsetWidth;\n    }\n    height() {\n        return this.elHTML.offsetHeight;\n    }\n    offset() {\n        let rect = this.el.getBoundingClientRect();\n        let win = this.el.ownerDocument.defaultView;\n        return new Pos(rect.left + win.pageXOffset, rect.top + win.pageYOffset);\n    }\n    size() {\n        return new Size(this.width(), this.height());\n    }\n    area() {\n        let pos = this.offset();\n        return new Box(pos.x, pos.y, this.width(), this.height());\n    }\n    setBoundaryPixels(x, y, w, h) {\n        this.css({ 'left': `${x}px`, 'top': `${y}px`, 'width': `${w}px`, 'height': `${h}px` });\n    }\n    setSizePixels(w, h) {\n        this.css({ 'width': `${w}px`, 'height': `${h}px` });\n    }\n    hasFocus() {\n        return this.el === document.activeElement;\n    }\n    grabFocus(delay = false) {\n        if (delay)\n            setTimeout(() => this.grabFocus(), 10);\n        else\n            this.elHTML.focus();\n    }\n    removeEvent(id, callback) {\n        this.el.removeEventListener(id, callback);\n    }\n    onKeyDown(callback) {\n        this.el.addEventListener('keydown', callback);\n    }\n    onKeyUp(callback) {\n        this.el.addEventListener('keyup', callback);\n    }\n    onKeyPress(callback) {\n        this.el.addEventListener('keypress', callback);\n    }\n    onScroll(callback) {\n        this.el.addEventListener('scroll', callback);\n    }\n    onWheel(callback) {\n        this.el.addEventListener('wheel', callback);\n    }\n    onClick(callback) {\n        this.el.addEventListener('click', callback);\n    }\n    onContextMenu(callback) {\n        this.el.addEventListener('contextmenu', callback);\n    }\n    onDblClick(callback) {\n        this.el.addEventListener('dblclick', callback);\n    }\n    onMouseDown(callback) {\n        this.el.addEventListener('mousedown', callback);\n    }\n    onMouseUp(callback) {\n        this.el.addEventListener('mouseup', callback);\n    }\n    onMouseEnter(callback) {\n        this.el.addEventListener('mouseenter', callback);\n    }\n    onMouseLeave(callback) {\n        this.el.addEventListener('mouseleave', callback);\n    }\n    onMouseMove(callback) {\n        this.el.addEventListener('mousemove', callback);\n    }\n    onMouseOver(callback) {\n        this.el.addEventListener('mouseover', callback);\n    }\n    onChange(callback) {\n        this.el.addEventListener('change', callback);\n    }\n    onInput(callback) {\n        this.el.addEventListener('input', callback);\n    }\n    onTouchStart(callback) {\n        this.el.addEventListener('touchstart', callback);\n    }\n    onTouchMove(callback) {\n        this.el.addEventListener('touchmove', callback);\n    }\n    onTouchCancel(callback) {\n        this.el.addEventListener('touchcancel', callback);\n    }\n    onTouchEnd(callback) {\n        this.el.addEventListener('touchend', callback);\n    }\n}\n//# sourceMappingURL=dom.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { dom, domLegacy } from './dom';\nimport { Size } from './Geom';\nimport { Vec } from './Vec';\nexport function safeInt(str, def = 0) {\n    if (str == null || str.length == 0)\n        return def;\n    let val = str.startsWith('0x') ? parseInt(str.substring(2), 16) :\n        str.startsWith('#') ? parseInt(str.substring(1), 16) : parseInt(str);\n    return isNaN(val) ? def : val;\n}\nexport function safeFloat(str, def = 0) {\n    if (str == null || str.length == 0)\n        return def;\n    let val = parseFloat(str);\n    return isNaN(val) ? def : val;\n}\nexport function newElement(parent, tag, attr) {\n    let domNew = dom(`<${tag}/>`);\n    if (attr)\n        domNew.attr(attr);\n    domLegacy(parent).append(domNew);\n    return domNew.el;\n}\nexport function addText(parent, text) {\n    let el = dom(parent).el;\n    el.appendChild(document.createTextNode(text));\n}\nexport function plural(count) {\n    return count == 1 ? '' : 's';\n}\nexport function formatDouble(value, sigfig) {\n    if (value == null)\n        return '';\n    let str = value.toPrecision(sigfig);\n    if (str.indexOf('.') > 0) {\n        while (str.endsWith('0'))\n            str = str.substring(0, str.length - 1);\n        if (str.endsWith('.'))\n            str = str.substring(0, str.length - 1);\n    }\n    return str;\n}\nexport function htmlToRGB(col) {\n    if (col == null || col.charAt(0) != '#' || col.length != 7)\n        return null;\n    return parseInt(col.substring(1), 16);\n}\nexport function colourCode(col) {\n    let hex = (col & 0xFFFFFF).toString(16);\n    while (hex.length < 6)\n        hex = '0' + hex;\n    return '#' + hex;\n}\nexport function colourAlpha(col) {\n    let transp = (col >>> 24) & 0xFF;\n    return transp == 0 ? 1 : transp == 0xFF ? 0 : 1 - (transp * (1.0 / 255));\n}\nconst ONE_OVER_255 = 1.0 / 255;\nexport function colourCanvas(col) {\n    if (col == 0xFFFFFF)\n        return 'white';\n    if (col == 0x000000)\n        return 'black';\n    if (col == -1)\n        return null;\n    if (col >= 0 && col <= 0xFFFFFF)\n        return colourCode(col);\n    const t = ((col >> 24) & 0xFF) * ONE_OVER_255;\n    const r = ((col >> 16) & 0xFF);\n    const g = ((col >> 8) & 0xFF);\n    const b = (col & 0xFF);\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + (1 - t) + ')';\n}\nexport function blendRGB(fract, rgb1, rgb2, rgb3) {\n    fract = Math.max(0, Math.min(1, fract));\n    let r1 = ((rgb1 >> 16) & 0xFF) * ONE_OVER_255, g1 = ((rgb1 >> 8) & 0xFF) * ONE_OVER_255, b1 = (rgb1 & 0xFF) * ONE_OVER_255;\n    let r2 = ((rgb2 >> 16) & 0xFF) * ONE_OVER_255, g2 = ((rgb2 >> 8) & 0xFF) * ONE_OVER_255, b2 = (rgb2 & 0xFF) * ONE_OVER_255;\n    let R, G, B;\n    if (rgb3 == null) {\n        let f1 = 1 - fract, f2 = fract;\n        R = Math.round(0xFF * (f1 * r1 + f2 * r2));\n        G = Math.round(0xFF * (f1 * g1 + f2 * g2));\n        B = Math.round(0xFF * (f1 * b1 + f2 * b2));\n    }\n    else {\n        let r3 = ((rgb3 >> 16) & 0xFF) * ONE_OVER_255, g3 = ((rgb3 >> 8) & 0xFF) * ONE_OVER_255, b3 = (rgb3 & 0xFF) * ONE_OVER_255;\n        if (fract < 0.5) {\n            let f2 = fract * 2, f1 = 1 - f2;\n            R = Math.round(0xFF * (f1 * r1 + f2 * r2));\n            G = Math.round(0xFF * (f1 * g1 + f2 * g2));\n            B = Math.round(0xFF * (f1 * b1 + f2 * b2));\n        }\n        else {\n            let f2 = (fract - 0.5) * 2, f1 = 1 - f2;\n            R = Math.round(0xFF * (f1 * r2 + f2 * r3));\n            G = Math.round(0xFF * (f1 * g2 + f2 * g3));\n            B = Math.round(0xFF * (f1 * b2 + f2 * b3));\n        }\n    }\n    return (R << 16) | (G << 8) | B;\n}\nexport function formatDate(date) {\n    const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    let day = date.getDate(), mon = date.getMonth(), year = date.getFullYear();\n    return day + '-' + MONTHS[mon] + '-' + year;\n}\nexport function nodeText(node) {\n    let ret = '';\n    if (!node)\n        return '';\n    node = node.firstChild;\n    while (node) {\n        if (node.nodeType == 3 || node.nodeType == 4)\n            ret += node.nodeValue;\n        node = node.nextSibling;\n    }\n    return ret;\n}\nexport function isDef(v) {\n    return !(v === null || typeof v === 'undefined');\n}\nexport function notDef(v) {\n    return v === null || typeof v === 'undefined';\n}\nexport function eventCoords(event, container) {\n    let pos = domLegacy(container).offset();\n    let relX = event.pageX - pos.x;\n    let relY = event.pageY - pos.y;\n    return [relX, relY];\n}\nexport function setBoundaryPixels(dom, x, y, w, h) {\n    dom.css({ 'left': x + 'px', 'top': y + 'px', 'width': w + 'px', 'height': h + 'px' });\n}\nexport function getBoundaryPixelsDOM(dom) {\n    let offset = dom.offset();\n    return [offset.x, offset.y, dom.width(), dom.height()];\n}\nexport function getOffsetPixelsDOM(dom) {\n    return [dom.elHTML.offsetLeft, dom.elHTML.offsetTop, dom.elHTML.offsetWidth, dom.elHTML.offsetHeight];\n}\nexport function norm_xy(dx, dy) {\n    return Math.hypot(dx, dy);\n}\nexport function norm_xyz(dx, dy, dz) {\n    return Math.hypot(dx, dy, dz);\n}\nexport function norm2_xy(dx, dy) {\n    return dx * dx + dy * dy;\n}\nexport function norm2_xyz(dx, dy, dz) {\n    return dx * dx + dy * dy + dz * dz;\n}\nexport function signum(v) {\n    return v < 0 ? -1 : v > 0 ? 1 : 0;\n}\nexport function sqr(v) {\n    return v * v;\n}\nexport function invZ(v) { return v == 0 ? 0 : 1.0 / v; }\nexport function fltEqual(v1, v2) { return v1 == v2 || Math.abs(v1 - v2) <= 1E-7 * Math.max(v1, v2); }\nexport function realEqual(v1, v2) { return v1 == v2 || Math.abs(v1 - v2) <= 1E-14 * Math.max(v1, v2); }\nexport function randomInt(size) {\n    if (size <= 1)\n        return 0;\n    return Math.floor(Math.random() * size);\n}\nexport const TWOPI = 2 * Math.PI;\nexport const INV_TWOPI = 1.0 / TWOPI;\nexport const DEGRAD = Math.PI / 180;\nexport const RADDEG = 180 / Math.PI;\nexport function angleNorm(th) {\n    if (th == -Math.PI)\n        return Math.PI;\n    if (th < -Math.PI) {\n        let mod = Math.ceil((-th - Math.PI) * INV_TWOPI);\n        return th + mod * TWOPI;\n    }\n    if (th > Math.PI) {\n        let mod = Math.ceil((th - Math.PI) * INV_TWOPI);\n        return th - mod * TWOPI;\n    }\n    return th;\n}\nexport function angleDiff(th1, th2) {\n    let theta = angleNorm(th1) - angleNorm(th2);\n    return theta - (theta > Math.PI ? TWOPI : 0) + (theta <= -Math.PI ? TWOPI : 0);\n}\nexport function angleDiffPos(th1, th2) {\n    let theta = angleNorm(th1) - angleNorm(th2);\n    return theta + (theta < 0 ? TWOPI : 0);\n}\nexport function sortAngles(theta) {\n    if (theta == null || theta.length < 2)\n        return theta;\n    theta = theta.slice(0);\n    for (let n = 0; n < theta.length; n++)\n        theta[n] = angleNorm(theta[n]);\n    Vec.sort(theta);\n    while (true) {\n        let a = theta[theta.length - 1], b = theta[0], c = theta[1];\n        if (angleDiff(b, a) <= angleDiff(c, b))\n            break;\n        for (let n = theta.length - 1; n > 0; n--)\n            theta[n] = theta[n - 1];\n        theta[0] = a;\n    }\n    return theta;\n}\nexport function uniqueAngles(theta, threshold) {\n    theta = sortAngles(theta);\n    for (let n = 1; n < theta.length; n++) {\n        if (Math.abs(angleDiff(theta[n], theta[n - 1])) <= threshold) {\n            theta.splice(n, 1);\n            n--;\n        }\n    }\n    return theta;\n}\nexport function minArray(a) {\n    if (a == null || a.length == 0)\n        return 0;\n    let v = a[0];\n    for (let n = 1; n < a.length; n++)\n        v = Math.min(v, a[n]);\n    return v;\n}\nexport function maxArray(a) {\n    if (a == null || a.length == 0)\n        return 0;\n    let v = a[0];\n    for (let n = 1; n < a.length; n++)\n        v = Math.max(v, a[n]);\n    return v;\n}\nexport function findNode(parent, name) {\n    if (parent == null)\n        return null;\n    let node = parent.firstChild;\n    while (node) {\n        if (node.nodeName == name)\n            return node;\n        node = node.nextSibling;\n    }\n    return null;\n}\nexport function findNodes(parent, name) {\n    if (parent == null)\n        return null;\n    let node = parent.firstChild;\n    let list = [];\n    while (node) {\n        if (node.nodeName == name)\n            list.push(node);\n        node = node.nextSibling;\n    }\n    return list;\n}\nexport function pathRoundedRect(x1, y1, x2, y2, rad) {\n    let path = new Path2D();\n    path.moveTo(x2 - rad, y1);\n    path.quadraticCurveTo(x2, y1, x2, y1 + rad);\n    path.lineTo(x2, y2 - rad);\n    path.quadraticCurveTo(x2, y2, x2 - rad, y2);\n    path.lineTo(x1 + rad, y2);\n    path.quadraticCurveTo(x1, y2, x1, y2 - rad);\n    path.lineTo(x1, y1 + rad);\n    path.quadraticCurveTo(x1, y1, x1 + rad, y1);\n    path.closePath();\n    return path;\n}\nexport function coordsRoundedRect(x1, y1, x2, y2, rad) {\n    let px = [x2 - rad, x2, x2, x2, x2, x2 - rad, x1 + rad, x1, x1, x1, x1, x1 + rad];\n    let py = [y1, y1, y1 + rad, y2 - rad, y2, y2, y2, y2, y2 - rad, y1 + rad, y1, y1];\n    let ctrl = [false, true, false, false, true, false, false, true, false, false, true, false];\n    return [px, py, ctrl];\n}\nexport function drawLine(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\nexport const ASCENT_FUDGE = 1.4;\nexport function fontSansSerif(ascent) { return `${ascent * ASCENT_FUDGE}px sans-serif`; }\nexport function pixelDensity() {\n    if ('devicePixelRatio' in window && window.devicePixelRatio > 1)\n        return window.devicePixelRatio;\n    return 1;\n}\nexport function clone(data) {\n    if (data == null)\n        return null;\n    if (Array.isArray(data))\n        return data.slice(0);\n    if (typeof data != 'object')\n        return data;\n    let result = {};\n    for (let key in data)\n        result[key] = data[key];\n    return result;\n}\nexport function deepClone(data) {\n    if (data == null)\n        return null;\n    if (typeof data == 'function')\n        return null;\n    if (typeof data != 'object')\n        return data;\n    let result = Array.isArray(data) ? [] : {};\n    for (let key in data) {\n        let val = data[key];\n        result[key] = typeof val === 'object' ? deepClone(val) : val;\n    }\n    return result;\n}\nexport function escapeHTML(text) {\n    if (!text)\n        return '';\n    const map = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#039;' };\n    return text.replace(/[&<>\"']/g, (m) => map[m]);\n}\nexport function orBlank(str) { return str == null ? '' : str; }\nexport function dictValues(dict) {\n    let list = [];\n    for (let key in dict)\n        list.push(dict[key]);\n    return list;\n}\nexport function zip(u, v) {\n    return u.map((a, i) => [a, v[i]]);\n}\nexport function toUTF8(str) {\n    let data = [], stripe = '';\n    const sz = str.length;\n    for (let n = 0; n < sz; n++) {\n        let charcode = str.charCodeAt(n);\n        if (charcode < 0x80)\n            stripe += str.charAt(n);\n        else if (charcode < 0x800) {\n            stripe += String.fromCharCode(0xc0 | (charcode >> 6));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n            stripe += String.fromCharCode(0xe0 | (charcode >> 12));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3F));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        else {\n            n++;\n            charcode = 0x10000 + (((charcode & 0x3FF) << 10) | (str.charCodeAt(n) & 0x3FF));\n            stripe += String.fromCharCode(0xf0 | (charcode >> 18));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 12) & 0x3F));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3F));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        if (stripe.length > 100) {\n            data.push(stripe);\n            stripe = '';\n        }\n    }\n    data.push(stripe);\n    return data.join('');\n}\nexport function fromUTF8(str) {\n    let data = [], stripe = '';\n    const sz = str.length;\n    for (let n = 0; n < sz; n++) {\n        let value = str.charCodeAt(n);\n        if (value < 0x80)\n            stripe += str.charAt(n);\n        else if (value > 0xBF && value < 0xE0) {\n            stripe += String.fromCharCode((value & 0x1F) << 6 | str.charCodeAt(n + 1) & 0x3F);\n            n++;\n        }\n        else if (value > 0xDF && value < 0xF0) {\n            str += String.fromCharCode((value & 0x0F) << 12 | (str.charCodeAt(n + 1) & 0x3F) << 6 | str.charCodeAt(n + 2) & 0x3F);\n            n += 2;\n        }\n        else {\n            let charCode = ((value & 0x07) << 18 | (str.charCodeAt(n + 1) & 0x3F) << 12 | (str.charCodeAt(n + 2) & 0x3F) << 6 | str.charCodeAt(n + 3) & 0x3F) - 0x010000;\n            stripe += String.fromCharCode(charCode >> 10 | 0xD800, charCode & 0x03FF | 0xDC00);\n            n += 3;\n        }\n        if (stripe.length > 100) {\n            data.push(stripe);\n            stripe = '';\n        }\n    }\n    data.push(stripe);\n    return data.join('');\n}\nexport function jsonPrettyPrint(json) {\n    let lines = JSON.stringify(json, null, 1).split(/\\n/);\n    for (let n = 0; n < lines.length; n++) {\n        lines[n] = lines[n].trim();\n        if (lines[n].length > 1 && (lines[n].endsWith('{') || lines[n].endsWith('['))) {\n            let ch = lines[n].charAt(lines[n].length - 1);\n            lines[n] = lines[n].substring(0, lines[n].length - 1);\n            lines.splice(n + 1, 0, ch);\n            n--;\n        }\n    }\n    let indent = 0;\n    for (let n = 0; n < lines.length; n++) {\n        let orig = lines[n];\n        if (orig == ']' || orig == '}' || orig == '],' || orig == '},')\n            indent--;\n        lines[n] = '\\t'.repeat(indent) + orig;\n        if (orig == '[' || orig == '{')\n            indent++;\n    }\n    return lines.join('\\n');\n}\nexport var KeyCode;\n(function (KeyCode) {\n    KeyCode[\"Backspace\"] = \"Backspace\";\n    KeyCode[\"Tab\"] = \"Tab\";\n    KeyCode[\"Enter\"] = \"Enter\";\n    KeyCode[\"Escape\"] = \"Escape\";\n    KeyCode[\"Space\"] = \" \";\n    KeyCode[\"PageUp\"] = \"PageUp\";\n    KeyCode[\"PageDown\"] = \"PageDown\";\n    KeyCode[\"End\"] = \"End\";\n    KeyCode[\"Home\"] = \"Home\";\n    KeyCode[\"Left\"] = \"ArrowLeft\";\n    KeyCode[\"Right\"] = \"ArrowRight\";\n    KeyCode[\"Up\"] = \"ArrowUp\";\n    KeyCode[\"Down\"] = \"ArrowDown\";\n    KeyCode[\"Delete\"] = \"Delete\";\n    KeyCode[\"Insert\"] = \"Insert\";\n})(KeyCode || (KeyCode = {}));\nexport function readTextURL(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            let request = new XMLHttpRequest();\n            request.open('GET', url.toString(), true);\n            request.responseType = 'text';\n            request.onload = () => resolve(request.response.toString());\n            request.onerror = () => resolve(null);\n            request.send();\n        });\n    });\n}\nexport function postJSONURL(url, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            let request = new XMLHttpRequest();\n            request.open('POST', url.toString(), true);\n            request.responseType = 'text';\n            request.onload = () => {\n                let txt = request.response.toString();\n                try {\n                    resolve(JSON.parse(txt));\n                }\n                catch (ex) {\n                    let snippet = txt.substring(0, Math.min(200, txt.length)) + (txt.length > 200 ? '...etc...' : '');\n                    reject('JSON parsing error on result:' + ex + ' for text: ' + snippet);\n                }\n            };\n            request.onerror = () => reject('Failed to request URL: ' + url);\n            request.send(JSON.stringify(params));\n        });\n    });\n}\nexport function yieldDOM() {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => setTimeout(() => resolve()));\n    });\n}\nexport function pause(seconds) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => setTimeout(() => resolve(), seconds * 1000));\n    });\n}\nlet staticScrollerSize = null;\nexport function empiricalScrollerSize() {\n    if (staticScrollerSize)\n        return staticScrollerSize;\n    let outer = dom('<div/>').css({ 'visibility': 'hidden', 'width': '100px', 'height': '100px', 'overflow': 'scroll' }).appendTo(dom(document.body));\n    let inner = dom('<div/>').css({ 'width': '100%', 'height': '100%' }).appendTo(outer);\n    staticScrollerSize = new Size(100 - inner.elHTML.offsetWidth, 100 - inner.elHTML.offsetHeight);\n    outer.remove();\n    return staticScrollerSize;\n}\nexport function stringSimilarityPermutations(str1, str2) {\n    if (!str1 || !str2)\n        return 0;\n    const ch1 = Array.from(str1), len1 = ch1.length;\n    const ch2 = Array.from(str2), len2 = ch2.length;\n    let levenshteinDistance = (sz1, sz2) => {\n        let dist = [];\n        for (let i = 0; i <= sz1; i++) {\n            dist.push(Vec.numberArray(0, sz2 + 1));\n            dist[i][0] = i;\n        }\n        for (let j = 1; j <= sz2; j++)\n            dist[0][j] = j;\n        for (let j = 1; j <= sz2; j++)\n            for (let i = 1; i <= sz1; i++) {\n                let cost = ch1[i - 1] == ch2[j - 1] ? 0 : 1;\n                dist[i][j] = Math.min(Math.min(dist[i - 1][j] + 1, dist[i][j - 1] + 1), dist[i - 1][j - 1] + cost);\n            }\n        return dist[sz1][sz2];\n    };\n    let cost = ch1[len1 - 1] == ch2[len2 - 1] ? 0 : 1;\n    let lev1 = levenshteinDistance(len1 - 1, len2) + 1;\n    let lev2 = levenshteinDistance(len1, len2 - 1) + 1;\n    let lev3 = levenshteinDistance(len1 - 1, len2 - 1) + cost;\n    return Math.min(Math.min(lev1, lev2), lev3);\n}\n//# sourceMappingURL=util.js.map","import { Vec } from '../util/Vec';\nexport class Graph {\n    constructor(sz, edge1, edge2) {\n        this.nbrs = [];\n        this.indices = null;\n        this.labels = null;\n        this.props = null;\n        if (sz != null)\n            for (let n = 0; n < sz; n++)\n                this.nbrs.push([]);\n        if (edge1 != null && edge2 != null) {\n            for (let n = 0; n < edge1.length; n++) {\n                this.nbrs[edge1[n]].push(edge2[n]);\n                this.nbrs[edge2[n]].push(edge1[n]);\n            }\n        }\n    }\n    clone() {\n        let g = new Graph();\n        for (let nbr of this.nbrs)\n            g.nbrs.push(nbr.slice(0));\n        g.indices = this.indices == null ? null : this.indices.slice(0);\n        g.labels = this.labels == null ? null : this.labels.slice(0);\n        g.props = this.props == null ? null : this.props.slice(0);\n        return g;\n    }\n    static fromMolecule(mol) {\n        let g = new Graph();\n        g.indices = [];\n        for (let n = 0; n < mol.numAtoms; n++) {\n            g.nbrs.push([]);\n            g.indices.push(n + 1);\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            g.nbrs[bfr].push(bto);\n            g.nbrs[bto].push(bfr);\n        }\n        return g;\n    }\n    static fromMoleculeMask(mol, mask) {\n        let count = Vec.maskCount(mask);\n        let map = Vec.maskMap(mask);\n        let g = new Graph(count);\n        g.indices = Vec.maskIdx(mask);\n        Vec.addTo(g.indices, 1);\n        for (let n = 0; n < count; n++) {\n            let adj = mol.atomAdjList(g.indices[n]);\n            let sz = 0;\n            for (let i = 0; i < adj.length; i++)\n                if (mask[adj[i] - 1])\n                    sz++;\n            g.nbrs[n] = [];\n            for (let i = 0; i < adj.length; i++)\n                if (mask[adj[i] - 1])\n                    g.nbrs[n].push(adj[i] - 1);\n        }\n        return g;\n    }\n    static fromNeighbours(nbrs) {\n        let g = new Graph();\n        g.nbrs = nbrs;\n        return g;\n    }\n    toString() {\n        let buff = '#nodes=' + this.nbrs.length;\n        for (let n = 0; n < this.nbrs.length; n++) {\n            buff += ' ' + n + ':{' + this.nbrs[n] + '}';\n            if (n < Vec.len(this.indices))\n                buff += '[i=' + this.indices[n] + ']';\n            if (n < Vec.len(this.labels))\n                buff += '[l=' + this.labels[n] + ']';\n        }\n        return buff;\n    }\n    get numNodes() { return this.nbrs.length; }\n    numEdges(node) { return this.nbrs[node].length; }\n    getEdge(node, edge) { return this.nbrs[node][edge]; }\n    getEdges(node) { return this.nbrs[node]; }\n    getIndex(node) { return this.indices == null ? 0 : this.indices[node]; }\n    setIndex(node, idx) {\n        if (this.indices == null)\n            this.indices = Vec.numberArray(0, this.nbrs.length);\n        this.indices[node] = idx;\n    }\n    getLabel(node) { return this.labels == null ? null : this.labels[node]; }\n    setLabel(node, lbl) {\n        if (this.labels == null)\n            this.labels = Vec.stringArray('', this.nbrs.length);\n        this.labels[node] = lbl;\n    }\n    getProperty(node) { return this.props == null ? null : this.props[node]; }\n    setProperty(node, prp) {\n        if (this.props == null)\n            this.props = new Array(this.nbrs.length);\n        this.props[node] = prp;\n    }\n    addNode() {\n        this.nbrs.push([]);\n        if (this.indices != null)\n            this.indices.push(0);\n        if (this.labels != null)\n            this.labels.push('');\n        if (this.props != null)\n            this.props.push(null);\n        return this.nbrs.length - 1;\n    }\n    hasEdge(node1, node2) {\n        if (this.nbrs[node1].length <= this.nbrs[node2].length)\n            return this.nbrs[node1].indexOf(node2) >= 0;\n        else\n            return this.nbrs[node2].indexOf(node1) >= 0;\n    }\n    addEdge(node1, node2) {\n        this.nbrs[node1].push(node2);\n        this.nbrs[node2].push(node1);\n    }\n    removeEdge(node1, node2) {\n        let i1 = this.nbrs[node1].indexOf(node2), i2 = this.nbrs[node2].indexOf(node1);\n        if (i1 >= 0)\n            this.nbrs[node1].splice(i1, 1);\n        if (i2 >= 0)\n            this.nbrs[node2].splice(i2, 1);\n    }\n    isolateNode(node) {\n        for (let o of this.nbrs[node]) {\n            let i = this.nbrs[o].indexOf(node);\n            if (i >= 0)\n                this.nbrs[o].splice(i, 1);\n        }\n        this.nbrs[node] = [];\n    }\n    keepNodesMask(mask) {\n        const oldsz = this.nbrs.length, newsz = Vec.maskCount(mask);\n        if (newsz == oldsz)\n            return;\n        if (newsz == 0) {\n            this.nbrs = [];\n            this.indices = null;\n            this.labels = null;\n            this.props = null;\n            return;\n        }\n        let newmap = Vec.maskMap(mask);\n        let newnbrs = [];\n        for (let n = 0; n < newsz; n++)\n            newnbrs.push([]);\n        for (let n = 0, pos = 0; n < oldsz; n++)\n            if (mask[n]) {\n                for (let i of this.nbrs[n])\n                    if (mask[i])\n                        newnbrs[pos].push(newmap[i]);\n                pos++;\n            }\n        this.nbrs = newnbrs;\n        if (this.indices != null)\n            this.indices = Vec.maskGet(this.indices, mask);\n        if (this.labels != null)\n            this.labels = Vec.maskGet(this.labels, mask);\n        if (this.props != null)\n            this.props = Vec.maskGet(this.props, mask);\n    }\n    keepNodesIndex(idx) { this.keepNodesMask(Vec.idxMask(idx, this.numNodes)); }\n    removeNodesMask(mask) { this.keepNodesMask(Vec.notMask(mask)); }\n    removeNodesIndex(idx) { this.removeNodesMask(Vec.idxMask(idx, this.numNodes)); }\n    subgraphIndex(idx) {\n        const nsz = idx.length;\n        let g = new Graph(nsz);\n        if (this.indices != null || this.labels != null || this.props != null)\n            for (let n = 0; n < nsz; n++) {\n                if (this.indices != null)\n                    g.setIndex(n, this.indices[idx[n]]);\n                if (this.labels != null)\n                    g.setLabel(n, this.labels[idx[n]]);\n                if (this.props != null)\n                    g.setProperty(n, this.props[idx[n]]);\n            }\n        for (let i = 0; i < nsz; i++) {\n            for (let n of this.nbrs[idx[i]]) {\n                let j = idx.indexOf(n);\n                if (j > i)\n                    g.addEdge(i, j);\n            }\n        }\n        return g;\n    }\n    subgraphMask(mask) {\n        let g = this.clone();\n        g.keepNodesMask(mask);\n        return g;\n    }\n    calculateComponents() {\n        const sz = this.nbrs.length;\n        if (sz == 0)\n            return [];\n        let cc = Vec.numberArray(0, sz);\n        cc[0] = 1;\n        let first = 1, high = 1;\n        while (true) {\n            while (first < sz && cc[first] > 0) {\n                first++;\n            }\n            if (first >= sz)\n                break;\n            let anything = false;\n            for (let i = first; i < sz; i++)\n                if (cc[i] == 0) {\n                    for (let j = 0; j < this.nbrs[i].length; j++) {\n                        if (cc[this.nbrs[i][j]] != 0) {\n                            cc[i] = cc[this.nbrs[i][j]];\n                            anything = true;\n                        }\n                    }\n                }\n            if (!anything)\n                cc[first] = ++high;\n        }\n        return cc;\n    }\n    calculateComponentGroups() {\n        if (this.nbrs.length == 0)\n            return [];\n        let cc = this.calculateComponents();\n        let sz = Vec.max(cc);\n        let grp = [];\n        for (let n = 0; n < sz; n++)\n            grp.push([]);\n        for (let n = 0; n < cc.length; n++)\n            grp[cc[n] - 1].push(n);\n        return grp;\n    }\n    calculateRingBlocks() {\n        let sz = this.numNodes, nbrs = this.nbrs;\n        if (sz == 0)\n            return [[], 0];\n        let rblk = new Array(this.numNodes);\n        let visited = Vec.booleanArray(false, sz);\n        Vec.setTo(rblk, 0);\n        let path = new Array(sz + 1);\n        let plen = 0, numVisited = 0;\n        while (true) {\n            let last, current;\n            if (plen == 0) {\n                last = -1;\n                for (current = 0; visited[current]; current++) { }\n            }\n            else {\n                last = path[plen - 1];\n                current = -1;\n                for (let n = 0; n < nbrs[last].length; n++)\n                    if (!visited[nbrs[last][n]]) {\n                        current = nbrs[last][n];\n                        break;\n                    }\n            }\n            if (current >= 0 && plen >= 2) {\n                let back = path[plen - 1];\n                for (let n = 0; n < nbrs[current].length; n++) {\n                    let join = nbrs[current][n];\n                    if (join != back && visited[join]) {\n                        path[plen] = current;\n                        for (let i = plen; i == plen || path[i + 1] != join; i--) {\n                            let id = rblk[path[i]];\n                            if (id == 0)\n                                rblk[path[i]] = last;\n                            else if (id != last) {\n                                for (let j = 0; j < sz; j++)\n                                    if (rblk[j] == id)\n                                        rblk[j] = last;\n                            }\n                        }\n                    }\n                }\n            }\n            if (current >= 0) {\n                visited[current] = true;\n                path[plen++] = current;\n                numVisited++;\n            }\n            else {\n                plen--;\n            }\n            if (numVisited == sz)\n                break;\n        }\n        let nextID = 0;\n        for (let i = 0; i < sz; i++)\n            if (rblk[i] > 0) {\n                nextID--;\n                for (let j = sz - 1; j >= i; j--)\n                    if (rblk[j] == rblk[i])\n                        rblk[j] = nextID;\n            }\n        for (let i = 0; i < sz; i++)\n            rblk[i] = -rblk[i];\n        return [rblk, -nextID];\n    }\n    calculateRingBlockGroups() {\n        let [rblk, sz] = this.calculateRingBlocks();\n        if (sz == 0)\n            return [];\n        let cap = Vec.numberArray(0, sz);\n        for (let n = 0; n < rblk.length; n++)\n            if (rblk[n] > 0)\n                cap[rblk[n] - 1]++;\n        let grp = new Array(sz);\n        for (let n = 0; n < sz; n++) {\n            grp[n] = new Array(cap[n]);\n            cap[n] = 0;\n        }\n        for (let n = 0; n < rblk.length; n++) {\n            let i = rblk[n] - 1;\n            if (i < 0)\n                continue;\n            grp[i][cap[i]++] = n;\n        }\n        return grp;\n    }\n    findRingsOfSize(size) {\n        let [rblk, num] = this.calculateRingBlocks();\n        if (num == 0)\n            return [];\n        let rings = [];\n        let mask = new Array(this.numNodes);\n        for (let r = 1; r <= num; r++) {\n            for (let n = 0; n < this.numNodes; n++)\n                mask[n] = rblk[n] == r;\n            let newRings = this.findRingsOfSizeMask(size, mask);\n            for (let n = 0; n < newRings.length; n++)\n                rings.push(newRings[n]);\n        }\n        return rings;\n    }\n    findRingsOfSizeMask(size, mask) {\n        let rings = [];\n        for (let n = 0; n < this.numNodes; n++)\n            if (mask[n]) {\n                let path = new Array(size);\n                path[0] = n;\n                this.recursiveRingFind(path, 1, size, mask, rings);\n            }\n        return rings;\n    }\n    calculateBFS(idx) {\n        let ret = Vec.numberArray(-1, this.numNodes);\n        ret[idx] = 0;\n        let curnum = 0, lsz = 1, watermark = 0;\n        let list = Vec.numberArray(0, this.numNodes);\n        list[0] = idx;\n        while (true) {\n            let newsz = lsz;\n            for (let n = watermark; n < lsz; n++) {\n                for (let i = 0; i < this.nbrs[list[n]].length; i++) {\n                    let j = this.nbrs[list[n]][i];\n                    if (ret[j] < 0) {\n                        ret[j] = curnum + 1;\n                        list[newsz++] = j;\n                    }\n                }\n            }\n            if (newsz == lsz)\n                break;\n            watermark = lsz;\n            lsz = newsz;\n            curnum++;\n        }\n        return ret;\n    }\n    calculateGravity() {\n        const sz = this.numNodes;\n        const { nbrs } = this;\n        let wght = Vec.numberArray(1, sz), wmod = Vec.numberArray(0, sz);\n        for (let n = 0; n < sz; n++) {\n            Vec.setTo(wmod, wght);\n            for (let i = 0; i < sz; i++)\n                for (let j = nbrs[i].length - 1; j >= 0; j--)\n                    wmod[i] += wght[nbrs[i][j]];\n            Vec.setTo(wght, wmod);\n        }\n        return wght;\n    }\n    recursiveRingFind(path, psize, capacity, mask, rings) {\n        if (psize < capacity) {\n            let last = path[psize - 1];\n            for (let n = 0; n < this.nbrs[last].length; n++) {\n                let adj = this.nbrs[last][n];\n                if (!mask[adj])\n                    continue;\n                let fnd = false;\n                for (let i = 0; i < psize; i++)\n                    if (path[i] == adj) {\n                        fnd = true;\n                        break;\n                    }\n                if (!fnd) {\n                    let newPath = Vec.duplicate(path);\n                    newPath[psize] = adj;\n                    this.recursiveRingFind(newPath, psize + 1, capacity, mask, rings);\n                }\n            }\n            return;\n        }\n        let last = path[psize - 1];\n        let fnd = false;\n        for (let n = 0; n < this.nbrs[last].length; n++)\n            if (this.nbrs[last][n] == path[0]) {\n                fnd = true;\n                break;\n            }\n        if (!fnd)\n            return;\n        for (let n = 0; n < path.length; n++) {\n            let count = 0, p = path[n];\n            for (let i = 0; i < this.nbrs[p].length; i++)\n                if (path.indexOf(this.nbrs[p][i]) >= 0)\n                    count++;\n            if (count != 2)\n                return;\n        }\n        let first = 0;\n        for (let n = 1; n < psize; n++)\n            if (path[n] < path[first])\n                first = n;\n        let fm = (first - 1 + psize) % psize, fp = (first + 1) % psize;\n        let flip = path[fm] < path[fp];\n        if (first != 0 || flip) {\n            let newPath = new Array(psize);\n            for (let n = 0; n < psize; n++)\n                newPath[n] = path[(first + (flip ? psize - n : n)) % psize];\n            path = newPath;\n        }\n        for (let n = 0; n < rings.length; n++) {\n            let look = rings[n];\n            let same = true;\n            for (let i = 0; i < psize; i++)\n                if (look[i] != path[i]) {\n                    same = false;\n                    break;\n                }\n            if (same)\n                return;\n        }\n        rings.push(path);\n    }\n}\n//# sourceMappingURL=Graph.js.map","import { Chemistry } from '../mol/Chemistry';\nimport { Graph } from '../mol/Graph';\nimport { Molecule } from '../mol/Molecule';\nimport { Vec } from '../util/Vec';\nexport class ResonanceRemover {\n    constructor(mol, resBonds, atomHyd = []) {\n        this.mol = mol;\n        this.resBonds = resBonds;\n        this.atomHyd = atomHyd;\n        this.maxIter = 1000;\n        this.bondOrders = [];\n        this.tolerant = false;\n        this.mol = mol;\n        this.resBonds = resBonds;\n        this.atomHyd = atomHyd;\n        for (let n = 1; n <= mol.numBonds; n++)\n            this.bondOrders.push(mol.bondOrder(n));\n    }\n    perform() {\n        const { mol } = this;\n        if (this.atomHyd == null) {\n            this.atomHyd = [];\n            for (let n = 1; n <= mol.numAtoms; n++)\n                this.atomHyd.push(mol.atomHExplicit(n));\n        }\n        this.correctInputMask();\n        let g = new Graph(mol.numAtoms);\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.resBonds[n - 1])\n                g.addEdge(mol.bondFrom(n) - 1, mol.bondTo(n) - 1);\n        let cc = g.calculateComponentGroups();\n        for (let n = 0; n < cc.length; n++)\n            if (cc[n].length >= 2)\n                this.processComponent(cc[n]);\n    }\n    correctInputMask() {\n        const { mol, atomHyd } = this;\n        const na = mol.numAtoms, nb = mol.numBonds;\n        let exclude = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++) {\n            let atno = mol.atomicNumber(n);\n            let val = atno == Chemistry.ELEMENT_C ? 4 :\n                atno == Chemistry.ELEMENT_N || atno == Chemistry.ELEMENT_P || atno == Chemistry.ELEMENT_B ? 3 :\n                    atno == Chemistry.ELEMENT_O || atno == Chemistry.ELEMENT_S ? 2 : -1;\n            if (val < 0) {\n                exclude[n - 1] = true;\n                continue;\n            }\n            val += mol.atomCharge(n);\n            if (atomHyd[n - 1] > 0)\n                val -= atomHyd[n - 1];\n            if (mol.atomAdjCount(n) >= val)\n                exclude[n - 1] = true;\n        }\n        for (let n = 1; n <= nb; n++)\n            if (!this.resBonds[n - 1] && mol.bondOrder(n) != 1) {\n                exclude[mol.bondFrom(n) - 1] = true;\n                exclude[mol.bondTo(n) - 1] = true;\n            }\n        this.resBonds = this.resBonds.slice(0);\n        for (let n = 0; n < nb; n++)\n            if (this.resBonds[n] && (exclude[mol.bondFrom(n + 1) - 1] || exclude[mol.bondTo(n + 1) - 1])) {\n                this.bondOrders[n] = 1;\n                this.resBonds[n] = false;\n            }\n    }\n    processComponent(nodes) {\n        const { mol, resBonds, bondOrders, atomHyd } = this;\n        let sz = nodes.length;\n        if (sz == 2) {\n            let b = mol.findBond(nodes[0] + 1, nodes[1] + 1);\n            bondOrders[b - 1] = 2;\n            return;\n        }\n        let optionalH = Vec.booleanArray(false, sz);\n        for (let n = 0; n < sz; n++) {\n            let i = nodes[n], a = i + 1;\n            optionalH[n] = atomHyd[i] == Molecule.HEXPLICIT_UNKNOWN && mol.atomElement(a) == 'N' && mol.atomAdjCount(a) - mol.atomCharge(a) <= 2;\n        }\n        let g = new Graph(sz);\n        let gravity = g.calculateGravity();\n        let mask = Vec.idxMask(nodes, mol.numAtoms);\n        let bsz = 0;\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (resBonds[n - 1] && mask[mol.bondFrom(n) - 1] && mask[mol.bondTo(n) - 1])\n                bsz++;\n        let bfr = Vec.numberArray(0, bsz), bto = Vec.numberArray(0, bsz), bgrav = Vec.numberArray(0, bsz), bidx = Vec.numberArray(0, bsz);\n        bsz = 0;\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (resBonds[n - 1] && mask[mol.bondFrom(n) - 1] && mask[mol.bondTo(n) - 1]) {\n                let f = nodes.indexOf(mol.bondFrom(n) - 1), t = nodes.indexOf(mol.bondTo(n) - 1);\n                bfr[bsz] = f;\n                bto[bsz] = t;\n                bgrav[bsz] = gravity[f] + gravity[t];\n                bidx[bsz] = n;\n                g.addEdge(f, t);\n                bsz++;\n            }\n        let seq = Vec.numberArray(0, bsz);\n        seq[0] = Vec.idxMax(bgrav);\n        let visited = Vec.booleanArray(false, bsz);\n        visited[seq[0]] = true;\n        for (let i = 1; i < bsz; i++) {\n            let b = -1;\n            for (let j = i - 1; j >= 0; j--) {\n                for (let n = 0; n < bsz; n++) {\n                    if (!visited[n])\n                        if (bfr[n] == bfr[seq[j]] || bfr[n] == bto[seq[j]] || bto[n] == bfr[seq[j]] || bto[n] == bto[seq[j]]) {\n                            if (b < 0 || bgrav[n] > bgrav[b])\n                                b = n;\n                        }\n                }\n                if (b >= 0)\n                    break;\n            }\n            if (b < 0)\n                throw 'Graph walk failed';\n            seq[i] = b;\n            visited[b] = true;\n        }\n        let paths = [];\n        paths.push([true]);\n        paths.push([false]);\n        let result = null;\n        let resultCount = 0;\n        let definiteMatch = Math.ceil(0.5 * bsz);\n        let iter = 0;\n        while (paths.length > 0) {\n            let p = paths[0];\n            let p1 = Vec.append(p, false), p2 = Vec.append(p, true);\n            if (!this.validPath(p1, seq, bfr, bto, g, optionalH))\n                p1 = null;\n            if (!this.validPath(p2, seq, bfr, bto, g, optionalH))\n                p2 = null;\n            if (Vec.len(p1) == bsz) {\n                let c = Vec.maskCount(p1);\n                if (c > resultCount) {\n                    result = p1;\n                    resultCount = c;\n                }\n                p1 = null;\n            }\n            if (Vec.len(p2) == bsz) {\n                let c = Vec.maskCount(p2);\n                if (c > resultCount) {\n                    result = p2;\n                    resultCount = c;\n                }\n                p2 = null;\n            }\n            if (resultCount >= definiteMatch)\n                break;\n            if (p1 == null && p2 == null)\n                paths.shift();\n            else if (p1 != null && p2 != null) {\n                paths[0] = p1;\n                paths.splice(1, 0, p2);\n            }\n            else if (p1 != null)\n                paths[0] = p1;\n            else\n                paths[0] = p2;\n            iter++;\n            if (iter > this.maxIter) {\n                if (result != null)\n                    break;\n                if (this.tolerant)\n                    return;\n                throw 'Resonance localisation exceeded maximum iteration count';\n            }\n        }\n        if (result == null) {\n            if (this.tolerant)\n                return;\n            throw 'Unable to find a solution to the resonance block.';\n        }\n        for (let n = 0; n < bsz; n++)\n            bondOrders[bidx[seq[n]] - 1] = result[n] ? 2 : 1;\n    }\n    validPath(path, seq, bfr, bto, g, optionalH) {\n        let sz = g.numNodes;\n        let count1 = Vec.numberArray(0, sz), count2 = Vec.numberArray(0, sz);\n        for (let n = 0; n < path.length; n++) {\n            let a1 = bfr[seq[n]], a2 = bto[seq[n]];\n            if (path[n]) {\n                count2[a1]++;\n                count2[a2]++;\n            }\n            else {\n                count1[a1]++;\n                count1[a2]++;\n            }\n        }\n        for (let n = 0; n < sz; n++) {\n            if (count2[n] > 1)\n                return false;\n            if (!optionalH[n] && g.numEdges(n) > 1 && count1[n] == g.numEdges(n))\n                return false;\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=ResonanceRemover.js.map","import { safeInt } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Graph } from './Graph';\nexport const BONDARTIFACT_EXTRA_RESPATH = 'xRESPATH:';\nexport const BONDARTIFACT_EXTRA_RESRING = 'xRESRING:';\nexport const BONDARTIFACT_EXTRA_ARENE = 'xARENE:';\nexport class BondArtifact {\n    constructor(mol) {\n        this.mol = mol;\n        this.resPaths = new Map();\n        this.resRings = new Map();\n        this.arenes = new Map();\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            for (let str of this.mol.atomExtra(n)) {\n                if (str.startsWith(BONDARTIFACT_EXTRA_RESPATH))\n                    this.appendResPath(n, str.substring(BONDARTIFACT_EXTRA_RESPATH.length).split(':'));\n                else if (str.startsWith(BONDARTIFACT_EXTRA_RESRING))\n                    this.appendResRing(n, str.substring(BONDARTIFACT_EXTRA_RESRING.length).split(':'));\n                else if (str.startsWith(BONDARTIFACT_EXTRA_ARENE))\n                    this.appendArene(n, str.substring(BONDARTIFACT_EXTRA_ARENE.length).split(':'));\n            }\n        }\n        for (let [blk, res] of this.resPaths.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (!this.pathify(res.atoms, false))\n                this.resPaths.delete(blk);\n        }\n        for (let [blk, res] of this.resRings.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (!this.pathify(res.atoms, true))\n                this.resRings.delete(blk);\n        }\n        for (let [blk, res] of this.arenes.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (res.atoms.length > 1)\n                res.centre = res.atoms.shift();\n            if (!this.pathify(res.atoms, false))\n                this.arenes.delete(blk);\n        }\n    }\n    getPathBlocks() { return Array.from(this.resPaths.keys()); }\n    getRingBlocks() { return Array.from(this.resRings.keys()); }\n    getAreneBlocks() { return Array.from(this.arenes.keys()); }\n    getResPaths() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.resPaths.keys())))\n            list.push(this.resPaths.get(key));\n        return list;\n    }\n    getResRings() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.resRings.keys())))\n            list.push(this.resRings.get(key));\n        return list;\n    }\n    getArenes() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.arenes.keys())))\n            list.push(this.arenes.get(key));\n        return list;\n    }\n    rewriteMolecule() {\n        const mol = this.mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n), modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (extra[i].startsWith(BONDARTIFACT_EXTRA_RESPATH) || extra[i].startsWith(BONDARTIFACT_EXTRA_RESRING) || extra[i].startsWith(BONDARTIFACT_EXTRA_ARENE)) {\n                    extra.splice(i);\n                    modified = true;\n                }\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n        for (let [blk, path] of this.resPaths.entries()) {\n            for (let n = 0; n < path.atoms.length; n++) {\n                let extra = mol.atomExtra(path.atoms[n]);\n                extra.push(BONDARTIFACT_EXTRA_RESPATH + blk + ':' + (n + 1));\n                mol.setAtomExtra(path.atoms[n], extra);\n            }\n        }\n        for (let [blk, ring] of this.resRings.entries()) {\n            for (let n = 0; n < ring.atoms.length; n++) {\n                let extra = mol.atomExtra(ring.atoms[n]);\n                extra.push(BONDARTIFACT_EXTRA_RESRING + blk + ':' + (n + 1));\n                mol.setAtomExtra(ring.atoms[n], extra);\n            }\n        }\n        for (let [blk, arene] of this.arenes.entries()) {\n            for (let n = -1; n < arene.atoms.length; n++) {\n                let atom = n < 0 ? arene.centre : arene.atoms[n];\n                let extra = mol.atomExtra(atom);\n                extra.push(BONDARTIFACT_EXTRA_ARENE + blk + ':' + (n + 2));\n                mol.setAtomExtra(atom, extra);\n            }\n        }\n    }\n    harmoniseNumbering(other) {\n        let blocks = other.getPathBlocks();\n        let stashPaths = this.getResPaths();\n        this.resPaths.clear();\n        for (let path of stashPaths) {\n            let blk = this.nextIdentifier(blocks);\n            this.resPaths.set(blk, path);\n            blocks.push(blk);\n        }\n        blocks = other.getRingBlocks();\n        let stashRings = this.getResRings();\n        this.resRings.clear();\n        for (let ring of stashRings) {\n            let blk = this.nextIdentifier(blocks);\n            this.resRings.set(blk, ring);\n            blocks.push(blk);\n        }\n        blocks = other.getAreneBlocks();\n        let stashArenes = this.getArenes();\n        this.arenes.clear();\n        for (let arene of stashArenes) {\n            let blk = this.nextIdentifier(blocks);\n            this.arenes.set(blk, arene);\n            blocks.push(blk);\n        }\n    }\n    createPath(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let path = this.atomsAsPath(atoms);\n        if (path) {\n            let id = this.nextIdentifier(Array.from(this.resPaths.keys()));\n            this.resPaths.set(id, path);\n            return true;\n        }\n        return false;\n    }\n    createRing(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let ring = this.atomsAsRing(atoms);\n        if (ring) {\n            let id = this.nextIdentifier(Array.from(this.resRings.keys()));\n            this.resRings.set(id, ring);\n            return true;\n        }\n        return false;\n    }\n    createArene(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let arene = this.atomsAsArene(atoms);\n        if (arene) {\n            let id = this.nextIdentifier(Array.from(this.arenes.keys()));\n            this.arenes.set(id, arene);\n            return true;\n        }\n        return false;\n    }\n    removeArtifact(atoms) {\n        let type = 0, pick = 0, overlap = 0;\n        for (let [blk, path] of this.resPaths.entries()) {\n            let count = 0;\n            for (let a of path.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 1;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        for (let [blk, ring] of this.resRings.entries()) {\n            let count = 0;\n            for (let a of ring.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 2;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        for (let [blk, arene] of this.arenes.entries()) {\n            let count = atoms.indexOf(arene.centre) >= 0 ? 1 : 0;\n            for (let a of arene.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 3;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        if (type == 0)\n            return false;\n        else if (type == 1)\n            this.resPaths.delete(pick);\n        else if (type == 2)\n            this.resRings.delete(pick);\n        else if (type == 3)\n            this.arenes.delete(pick);\n        return true;\n    }\n    static removeAll(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (!extra[i].startsWith(BONDARTIFACT_EXTRA_RESPATH) && !extra[i].startsWith(BONDARTIFACT_EXTRA_RESRING) &&\n                    !extra[i].startsWith(BONDARTIFACT_EXTRA_ARENE))\n                    continue;\n                extra = Vec.remove(extra, i);\n                modified = true;\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n    }\n    appendResPath(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.resPaths.get(blk);\n        if (res == null)\n            this.resPaths.set(blk, res = { atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    appendResRing(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.resRings.get(blk);\n        if (res == null)\n            this.resRings.set(blk, res = { atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    appendArene(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.arenes.get(blk);\n        if (res == null)\n            this.arenes.set(blk, res = { centre: 0, atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    pack(arr) {\n        let ret = [];\n        for (let v of arr)\n            if (v != 0)\n                ret.push(v);\n        return ret;\n    }\n    pathify(atoms, requireRing) {\n        let sz = atoms.length;\n        if (sz < 2)\n            return false;\n        let g = Graph.fromMolecule(this.mol);\n        for (let n = 0; n < this.mol.numAtoms; n++)\n            g.setIndex(n, n + 1);\n        g = g.subgraphIndex(Vec.add(atoms, -1));\n        let pos = 0;\n        for (let n = 1; n < sz; n++)\n            if (g.numEdges(n) < g.numEdges(pos))\n                pos = n;\n        Vec.setTo(atoms, -1);\n        for (let n = 0; n < sz; n++) {\n            atoms[n] = pos;\n            if (n == sz - 1) {\n                if (requireRing)\n                    if (g.getEdges(pos).indexOf(atoms[0]) < 0)\n                        return false;\n            }\n            else {\n                let next = sz;\n                for (let i of g.getEdges(pos))\n                    if (atoms.indexOf(i) < 0 && i < next)\n                        next = i;\n                if (next == sz)\n                    return false;\n                pos = next;\n            }\n        }\n        for (let n = 0; n < sz; n++)\n            atoms[n] = g.getIndex(atoms[n]);\n        return true;\n    }\n    alreadyExists(atoms) {\n        atoms = Vec.sorted(atoms);\n        for (let path of this.resPaths.values()) {\n            if (Vec.equals(atoms, Vec.sorted(path.atoms)))\n                return true;\n        }\n        for (let ring of this.resRings.values()) {\n            if (Vec.equals(atoms, Vec.sorted(ring.atoms)))\n                return true;\n        }\n        for (let arene of this.arenes.values()) {\n            let areneAtoms = Vec.append(arene.atoms, arene.centre);\n            if (Vec.equals(atoms, Vec.sorted(areneAtoms)))\n                return true;\n        }\n        return false;\n    }\n    atomsAsPath(atoms) {\n        if (atoms.length < 2)\n            return null;\n        let path = { atoms: atoms };\n        if (!this.pathify(path.atoms, false))\n            return null;\n        return path;\n    }\n    atomsAsRing(atoms) {\n        if (atoms.length < 3)\n            return null;\n        let ring = { atoms: atoms };\n        if (!this.pathify(ring.atoms, true))\n            return null;\n        return ring;\n    }\n    atomsAsArene(atoms) {\n        const sz = atoms.length;\n        if (sz < 3)\n            return null;\n        let g = Graph.fromMolecule(this.mol).subgraphIndex(Vec.add(atoms, -1));\n        let best = 0;\n        if (sz == 3) {\n            let bsum = [0, 0, 0];\n            for (let n = 0; n < sz; n++) {\n                if (g.numEdges(n) != 2)\n                    return null;\n                for (let e of g.getEdges(n))\n                    bsum[n] += this.mol.bondOrder(this.mol.findBond(atoms[n], atoms[e]));\n                best = Vec.idxMin(bsum);\n            }\n        }\n        else {\n            for (let n = 1; n < sz; n++)\n                if (g.numEdges(n) > g.numEdges(best))\n                    best = n;\n        }\n        let arene = { centre: atoms[best], atoms: Vec.remove(atoms, best) };\n        if (!this.pathify(arene.atoms, false))\n            return null;\n        return arene;\n    }\n    nextIdentifier(inkeys) {\n        if (inkeys.length == 0)\n            return 1;\n        let keys = Vec.sorted(inkeys);\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=BondArtifact.js.map","import { deepClone, safeFloat, safeInt } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Molecule } from '../mol/Molecule';\nexport var DataSheetColumn;\n(function (DataSheetColumn) {\n    DataSheetColumn[\"Molecule\"] = \"molecule\";\n    DataSheetColumn[\"String\"] = \"string\";\n    DataSheetColumn[\"Real\"] = \"real\";\n    DataSheetColumn[\"Integer\"] = \"integer\";\n    DataSheetColumn[\"Boolean\"] = \"boolean\";\n    DataSheetColumn[\"Extend\"] = \"extend\";\n})(DataSheetColumn || (DataSheetColumn = {}));\nexport class DataSheet {\n    constructor(data) {\n        if (!data)\n            data = {};\n        if (!data.title)\n            data.title = '';\n        if (!data.description)\n            data.description = '';\n        if (data.numCols == null)\n            data.numCols = Vec.len(data.colData);\n        if (data.numRows == null)\n            data.numRows = Vec.len(data.rowData);\n        if (data.numExtens == null)\n            data.numExtens = Vec.len(data.extData);\n        if (data.colData == null)\n            data.colData = [];\n        if (data.rowData == null)\n            data.rowData = [];\n        if (data.extData == null)\n            data.extData = [];\n        this.data = data;\n    }\n    clone(withRows = true) {\n        let { numCols, numRows, colData, rowData } = this.data;\n        let data = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: numCols,\n            numRows: withRows ? numRows : 0,\n            numExtens: this.data.numExtens,\n            colData: deepClone(colData),\n            rowData: withRows ? new Array(numRows) : [],\n            extData: deepClone(this.data.extData),\n        };\n        if (withRows)\n            for (let r = 0; r < numRows; r++) {\n                let inRow = rowData[r], outRow = new Array(numCols);\n                for (let c = 0; c < numCols; c++) {\n                    if (inRow[c] != null && colData[c].type == \"molecule\" && inRow[c] instanceof Molecule)\n                        outRow[c] = inRow[c].clone();\n                    else\n                        outRow[c] = inRow[c];\n                }\n                data.rowData[r] = outRow;\n            }\n        return new DataSheet(data);\n    }\n    cloneMask(colMask, rowMask = null, inclExtn = true) {\n        let { numCols, numRows, colData, rowData } = this.data;\n        let data = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: Vec.maskCount(colMask),\n            numRows: rowMask ? Vec.maskCount(rowMask) : 0,\n            numExtens: inclExtn ? this.data.numExtens : 0,\n            colData: deepClone(Vec.maskGet(colData, colMask)),\n            rowData: [],\n            extData: inclExtn ? deepClone(this.data.extData) : [],\n        };\n        if (rowMask)\n            for (let r = 0; r < numRows; r++)\n                if (rowMask[r]) {\n                    let inRow = rowData[r], outRow = Vec.maskGet(inRow, colMask);\n                    data.rowData.push(outRow);\n                }\n        const { colData: outCols, rowData: outRows } = data;\n        for (let c = outCols.length - 1; c >= 0; c--)\n            if (outCols[c].type == \"molecule\") {\n                for (let r = outRows.length - 1; r >= 0; r--)\n                    if (outRows[r][c] != null && outRows[r][c] instanceof Molecule)\n                        outRows[r][c] = outRows[r][c].clone();\n            }\n        return new DataSheet(data);\n    }\n    getData() {\n        return this.data;\n    }\n    get numCols() {\n        return this.data.numCols;\n    }\n    get numRows() {\n        return this.data.numRows;\n    }\n    get title() { return this.data.title; }\n    set title(title) { this.data.title = title; }\n    get description() { return this.data.description; }\n    set description(description) { this.data.description = description; }\n    get numExtensions() {\n        return this.data.numExtens;\n    }\n    getExtName(idx) {\n        return this.data.extData[idx].name;\n    }\n    getExtType(idx) {\n        return this.data.extData[idx].type;\n    }\n    getExtData(idx) {\n        return this.data.extData[idx].data;\n    }\n    setExtName(idx, val) {\n        this.data.extData[idx].name = val;\n    }\n    setExtType(idx, val) {\n        this.data.extData[idx].type = val;\n    }\n    setExtData(idx, val) {\n        this.data.extData[idx].data = val;\n    }\n    appendExtension(name, type, data) {\n        this.data.numExtens++;\n        this.data.extData.push({ name, type, data });\n        return this.data.numExtens - 1;\n    }\n    insertExtension(idx, name, type, data) {\n        this.data.numExtens++;\n        this.data.extData.splice(idx, 0, { name, type, data });\n    }\n    deleteExtension(idx) {\n        this.data.extData.splice(idx, 1);\n        this.data.numExtens--;\n    }\n    colName(col) {\n        return this.data.colData[col].name;\n    }\n    colType(col) {\n        return this.data.colData[col].type;\n    }\n    colDescr(col) {\n        return this.data.colData[col].descr;\n    }\n    isNull(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col] == null;\n    }\n    notNull(row, col) {\n        return !this.isNull(row, col);\n    }\n    isBlank(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col))\n            return true;\n        let ct = this.colType(col);\n        if (ct == \"molecule\")\n            return this.getMolecule(row, col).numAtoms == 0;\n        if (ct == \"string\")\n            return this.getString(row, col).length == 0;\n        if (ct == \"extend\")\n            return this.getExtend(row, col).length == 0;\n        return false;\n    }\n    notBlank(row, col) {\n        return !this.isBlank(row, col);\n    }\n    getObject(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        return this.data.rowData[row][col];\n    }\n    getMolecule(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        let datum = this.data.rowData[row][col];\n        if (datum == null)\n            return null;\n        if (typeof datum === 'string') {\n            datum = Molecule.fromString(datum);\n            this.data.rowData[row][col] = datum;\n        }\n        return datum;\n    }\n    getMoleculeClone(row, col) {\n        let mol = this.getMolecule(row, col);\n        return mol == null ? null : mol.clone();\n    }\n    getMoleculeBlank(row, col) {\n        let mol = this.getMolecule(row, col);\n        return mol ? mol : new Molecule();\n    }\n    getString(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        let str = this.data.rowData[row][col];\n        return str == null ? '' : str;\n    }\n    getInteger(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getReal(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getBoolean(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getExtend(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    setToNull(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = null;\n    }\n    setObject(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setMolecule(row, col, mol) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = mol ? mol.clone() : null;\n    }\n    setString(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setInteger(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setReal(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setBoolean(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setExtend(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    isEqualMolecule(row, col, mol) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (mol == null))\n            return false;\n        if (mol == null)\n            return true;\n        return this.getMolecule(row, col).compareTo(mol) == 0;\n    }\n    isEqualString(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null || val == ''))\n            return false;\n        if (val == null || val == '')\n            return true;\n        return this.getString(row, col) == val;\n    }\n    isEqualInteger(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getInteger(row, col) == val;\n    }\n    isEqualReal(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getReal(row, col) == val;\n    }\n    isEqualBoolean(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getBoolean(row, col) == val;\n    }\n    appendColumn(name, type, descr) {\n        this.data.numCols++;\n        this.data.colData.push({ name, type, descr });\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].push(null);\n        return this.data.numCols - 1;\n    }\n    insertColumn(col, name, type, descr) {\n        this.data.numCols++;\n        this.data.colData.splice(col, 0, { name, type, descr });\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].splice(col, 0, null);\n    }\n    deleteColumn(col) {\n        this.data.numCols--;\n        this.data.colData.splice(col, 1);\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].splice(col, 1);\n    }\n    changeColumnName(col, name, descr) {\n        this.data.colData[col].name = name;\n        this.data.colData[col].descr = descr;\n    }\n    changeColumnType(col, newType) {\n        let oldType = this.colType(col);\n        if (oldType == newType)\n            return;\n        let incompatible = oldType == \"molecule\" || newType == \"molecule\" ||\n            oldType == \"extend\" || newType == \"extend\";\n        for (let n = this.data.rowData.length - 1; n >= 0; n--) {\n            let row = this.data.rowData[n];\n            if (row[col] == null)\n                continue;\n            if (incompatible) {\n                row[col] = null;\n                continue;\n            }\n            let val = '';\n            if (oldType == \"string\")\n                val = row[col];\n            else if (oldType == \"integer\")\n                val = row[col].toString();\n            else if (oldType == \"real\")\n                val = row[col].toString();\n            else if (oldType == \"boolean\")\n                val = row[col] ? 'true' : 'false';\n            row[col] = null;\n            if (newType == \"string\")\n                row[col] = val;\n            else if (newType == \"integer\") {\n                let num = parseInt(val);\n                row[col] = isFinite(num) ? num : null;\n            }\n            else if (newType == \"real\") {\n                let num = parseFloat(val);\n                row[col] = isFinite(num) ? num : null;\n            }\n            else if (newType == \"boolean\")\n                row[col] = val.toLowerCase() == 'true' ? true : false;\n        }\n        this.data.colData[col].type = newType;\n    }\n    ensureColumn(name, type, descr) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].name == name) {\n                if (this.data.colData[n].type != type)\n                    this.changeColumnType(n, type);\n                this.data.colData[n].descr = descr;\n                return n;\n            }\n        return this.appendColumn(name, type, descr);\n    }\n    reorderColumns(order) {\n        let identity = true;\n        for (let n = 0; n < order.length - 1; n++)\n            if (order[n] != order[n + 1] - 1) {\n                identity = false;\n                break;\n            }\n        if (identity)\n            return;\n        this.data.colData = Vec.idxGet(this.data.colData, order);\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n] = Vec.idxGet(this.data.rowData[n], order);\n    }\n    appendRow() {\n        this.data.numRows++;\n        let row = new Array();\n        for (let n = 0; n < this.data.numCols; n++)\n            row.push(null);\n        this.data.rowData.push(row);\n        return this.data.numRows - 1;\n    }\n    appendRowFrom(srcDS, row) {\n        this.data.numRows++;\n        this.data.rowData.push(srcDS.data.rowData[row].slice(0));\n        return this.data.numRows - 1;\n    }\n    insertRow(row) {\n        this.data.numRows++;\n        let data = new Array();\n        for (let n = 0; n < this.data.numCols; n++)\n            data.push(null);\n        this.data.rowData.splice(row, 0, data);\n    }\n    deleteRow(row) {\n        this.data.numRows--;\n        this.data.rowData.splice(row, 1);\n    }\n    deleteAllRows() {\n        this.data.numRows = 0;\n        this.data.rowData = new Array();\n    }\n    moveRowUp(row) {\n        let data = this.data.rowData[row];\n        this.data.rowData[row] = this.data.rowData[row - 1];\n        this.data.rowData[row - 1] = data;\n    }\n    moveRowDown(row) {\n        let data = this.data.rowData[row];\n        this.data.rowData[row] = this.data.rowData[row + 1];\n        this.data.rowData[row + 1] = data;\n    }\n    swapRows(row1, row2) {\n        Vec.swap(this.data.rowData, row1, row2);\n    }\n    exciseSingleRow(row) {\n        let newData = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: this.data.numCols,\n            numRows: 1,\n            numExtens: this.data.numExtens,\n            colData: this.data.colData.slice(0),\n            rowData: [this.data.rowData[row].slice(0)],\n            extData: this.data.extData.slice(0)\n        };\n        return new DataSheet(newData);\n    }\n    colIsPrimitive(col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        let ct = this.data.colData[col].type;\n        return ct == 'string' || ct == 'real' || ct == 'integer' || ct == 'boolean';\n    }\n    findColByName(name, type) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].name == name) {\n                if (type == null || this.data.colData[n].type == type)\n                    return n;\n            }\n        return -1;\n    }\n    firstColOfType(type) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].type == type)\n                return n;\n        return -1;\n    }\n    copyCell(toRow, toCol, fromDS, fromRow, fromCol) {\n        this.setToNull(toRow, toCol);\n        if (fromDS.isNull(fromRow, fromCol))\n            return;\n        let obj = fromDS.getObject(fromRow, fromCol);\n        this.setObject(toRow, toCol, DataSheet.convertType(obj, fromDS.colType(fromCol), this.colType(toCol)));\n    }\n    static convertType(obj, fromType, toType) {\n        const ft = fromType, tt = toType;\n        if (obj == null || ft == tt || (typeof obj == 'string' && obj == ''))\n            return obj;\n        if (tt == \"string\") {\n            if (ft == \"integer\")\n                return obj.toString();\n            else if (ft == \"real\")\n                return obj.toString();\n            else if (ft == \"boolean\")\n                return obj ? 'true' : 'false';\n        }\n        else if (tt == \"real\") {\n            if (ft == \"string\")\n                return safeFloat(obj, null);\n            else if (ft == \"integer\")\n                return obj;\n            else if (ft == \"boolean\")\n                return obj ? 1 : 0;\n        }\n        else if (tt == \"integer\") {\n            if (ft == \"string\")\n                return safeInt(obj, null);\n            else if (ft == \"real\")\n                return Math.round(obj);\n            else if (ft == \"boolean\")\n                return obj ? 1 : 0;\n        }\n        else if (tt == \"boolean\") {\n            if (ft == \"string\")\n                return obj.toLowerCase() == 'true';\n            else if (ft == \"integer\")\n                return obj > 0;\n            else if (ft == \"real\")\n                return obj >= 0.5;\n        }\n        return null;\n    }\n    toString(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : obj.toString();\n    }\n    toInt(row, col) {\n        if (!this.colIsPrimitive(col))\n            return null;\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : parseInt(obj);\n    }\n    toReal(row, col) {\n        if (!this.colIsPrimitive(col))\n            return null;\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : parseFloat(obj);\n    }\n}\n//# sourceMappingURL=DataSheet.js.map","import { Vec } from '../util/Vec';\nexport var ForeignMoleculeTransient;\n(function (ForeignMoleculeTransient) {\n    ForeignMoleculeTransient[\"AtomAromatic\"] = \"yAROMATIC\";\n    ForeignMoleculeTransient[\"BondAromatic\"] = \"yAROMATIC\";\n    ForeignMoleculeTransient[\"BondZeroDative\"] = \"yZERO_DATIVE\";\n    ForeignMoleculeTransient[\"BondZeroHydrogen\"] = \"yZERO_HYDROGEN\";\n    ForeignMoleculeTransient[\"AtomChiralMDLOdd\"] = \"yCHIRAL_MDL_ODD\";\n    ForeignMoleculeTransient[\"AtomChiralMDLEven\"] = \"yCHIRAL_MDL_EVEN\";\n    ForeignMoleculeTransient[\"AtomChiralMDLRacemic\"] = \"yCHIRAL_MDL_RACEMIC\";\n    ForeignMoleculeTransient[\"AtomExplicitValence\"] = \"yMDL_EXPLICIT_VALENCE\";\n    ForeignMoleculeTransient[\"AtomSgroupMultiAttach\"] = \"yMDL_SGROUP_MULTIATTACH\";\n    ForeignMoleculeTransient[\"AtomSgroupMultiRepeat\"] = \"yMDL_SGROUP_MULTIREPEAT\";\n    ForeignMoleculeTransient[\"AtomSgroupData\"] = \"yMDL_SGROUP_DATA\";\n    ForeignMoleculeTransient[\"AtomSCSRClass\"] = \"yMDL_SCSR_CLASS\";\n    ForeignMoleculeTransient[\"AtomSCSRSeqID\"] = \"yMDL_SCSR_SEQID\";\n    ForeignMoleculeTransient[\"AtomSCSRAttchOrd\"] = \"yMDL_SCSR_ATTCHORD\";\n})(ForeignMoleculeTransient || (ForeignMoleculeTransient = {}));\nexport class ForeignMolecule {\n    static noteAromaticAtoms(mol) {\n        const sz = mol.numAtoms;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.atomTransient(n).indexOf(ForeignMoleculeTransient.AtomAromatic) >= 0;\n        return mask;\n    }\n    static noteAromaticBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).indexOf(ForeignMoleculeTransient.BondAromatic) >= 0;\n        return mask;\n    }\n    static noteZeroDativeBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).includes(ForeignMoleculeTransient.BondZeroDative);\n        return mask;\n    }\n    static noteZeroHydrogenBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).includes(ForeignMoleculeTransient.BondZeroHydrogen);\n        return mask;\n    }\n    static markExplicitValence(mol, atom, valence) {\n        let trans = mol.atomTransient(atom).filter((tr) => !tr.startsWith(ForeignMoleculeTransient.AtomExplicitValence + ':'));\n        trans.push(`${ForeignMoleculeTransient.AtomExplicitValence}:${valence}`);\n        mol.setAtomTransient(atom, trans);\n    }\n    static noteExplicitValence(mol, atom) {\n        let trans = mol.atomTransient(atom);\n        for (let tr of trans)\n            if (tr.startsWith(ForeignMoleculeTransient.AtomExplicitValence + ':'))\n                return parseInt(tr.substring(ForeignMoleculeTransient.AtomExplicitValence.length + 1));\n        return null;\n    }\n    static markSgroupMultiAttach(mol, name, atoms, keyval = {}) {\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiAttach.length + 1);\n                    let comma = payload.indexOf(',');\n                    let bits = payload.split(',');\n                    let idx = parseInt(bits[0]);\n                    if (!(idx > 0))\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let tag = `${ForeignMoleculeTransient.AtomSgroupMultiAttach}:${idxHigh + 1},${name}`;\n        for (let [key, val] of Object.entries(keyval))\n            tag += ',' + key + '=' + val;\n        for (let a of atoms)\n            mol.setAtomTransient(a, Vec.append(mol.atomTransient(a), tag));\n    }\n    static hasAnySgroupMultiAttach(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupMultiAttach(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiAttach.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 2)\n                        continue;\n                    let idx = parseInt(bits[0]), name = bits[1];\n                    if (!(idx > 0) || !name)\n                        continue;\n                    let keyval = {};\n                    for (let i = 2; i < bits.length; i++) {\n                        let eq = bits[i].indexOf('=');\n                        if (eq < 0)\n                            continue;\n                        keyval[bits[i].substring(0, eq)] = bits[i].substring(eq + 1);\n                    }\n                    let sgm = map[idx];\n                    if (sgm)\n                        sgm.atoms.push(n);\n                    else\n                        map[idx] = { name, atoms: [n], keyval };\n                }\n        return Object.values(map);\n    }\n    static markSgroupMultiRepeat(mol, mult, atoms) {\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiRepeat.length + 1);\n                    let comma = payload.indexOf(',');\n                    if (comma <= 0)\n                        continue;\n                    let idx = parseInt(payload.substring(0, comma));\n                    if (idx <= 0)\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let unit = atoms.length / mult;\n        let tag = `${ForeignMoleculeTransient.AtomSgroupMultiRepeat}:${idxHigh + 1},${mult},${unit},`;\n        for (let n = 0; n < atoms.length; n++)\n            mol.setAtomTransient(atoms[n], Vec.append(mol.atomTransient(atoms[n]), tag + (n + 1)));\n    }\n    static hasAnySgroupMultiRepeat(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupMultiRepeat(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiRepeat.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 4)\n                        continue;\n                    let idx = parseInt(bits[0]), mult = parseInt(bits[1]), unit = parseInt(bits[2]), pos = parseInt(bits[3]);\n                    if (!(idx > 0) || mult < 2 || unit < 1 || pos < 1 || pos > mult * unit)\n                        continue;\n                    let mr = map[idx];\n                    if (mr == null)\n                        map[idx] = mr = { mult, unit, atoms: Vec.numberArray(0, mult * unit) };\n                    else if (mr.mult != mult || mr.unit != unit)\n                        continue;\n                    mr.atoms[pos - 1] = n;\n                }\n        return Object.values(map);\n    }\n    static markSgroupData(mol, name, value, unit, query, atoms) {\n        var _a;\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupData.length + 1);\n                    let comma = payload.indexOf(',');\n                    if (comma <= 0)\n                        continue;\n                    let idx = parseInt(payload.substring(0, comma));\n                    if (idx <= 0)\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let bits = [(idxHigh + 1).toString(), name, value, unit, query];\n        for (let n = 1; n < bits.length; n++)\n            bits[n] = ((_a = bits[n]) !== null && _a !== void 0 ? _a : '').replace(/\\,/g, '@@');\n        let tag = ForeignMoleculeTransient.AtomSgroupData + ':' + bits.join(',');\n        for (let n = 0; n < atoms.length; n++)\n            mol.setAtomTransient(atoms[n], Vec.append(mol.atomTransient(atoms[n]), tag));\n    }\n    static hasAnySgroupData(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupData(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupData.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 5)\n                        continue;\n                    let idx = parseInt(bits[0]);\n                    for (let i = 1; i < 5; i++)\n                        bits[i] = bits[i].replace(/\\@\\@/g, ',');\n                    if (!(idx > 0))\n                        continue;\n                    let sd = map[idx];\n                    if (sd)\n                        sd.atoms.push(n);\n                    else\n                        map[idx] = { name: bits[1], value: bits[2], unit: bits[3], query: bits[4], atoms: [n] };\n                }\n        return Object.values(map);\n    }\n}\n//# sourceMappingURL=ForeignMolecule.js.map","import { Vec } from '../util/Vec';\nexport const POLYMERBLOCK_EXTRA_POLYMER = 'xPOLYMER:';\nexport const POLYMERBLOCK_SPECIAL_UNCAPPED = '*';\nexport var PolymerBlockConnectivity;\n(function (PolymerBlockConnectivity) {\n    PolymerBlockConnectivity[\"HeadToTail\"] = \"ht\";\n    PolymerBlockConnectivity[\"HeadToHead\"] = \"hh\";\n    PolymerBlockConnectivity[\"Random\"] = \"rnd\";\n})(PolymerBlockConnectivity || (PolymerBlockConnectivity = {}));\nexport class PolymerBlockUnit {\n    constructor(atoms) {\n        this.atoms = atoms;\n        this.connect = null;\n        this.bondConn = null;\n        this.atomName = new Map();\n        this.bondIncl = new Map();\n        this.bondExcl = new Map();\n    }\n    clone() {\n        let dup = new PolymerBlockUnit(this.atoms.slice(0));\n        dup.connect = this.connect;\n        if (this.bondConn)\n            dup.bondConn = this.bondConn.slice(0);\n        for (let [k, v] of this.atomName.entries())\n            dup.atomName.set(k, v.slice(0));\n        for (let [k, v] of this.bondIncl.entries())\n            dup.bondIncl.set(k, v.slice(0));\n        for (let [k, v] of this.bondExcl.entries())\n            dup.bondExcl.set(k, v.slice(0));\n        return dup;\n    }\n}\nexport class PolymerBlock {\n    constructor(mol) {\n        this.mol = mol;\n        this.units = new Map();\n        let blockAtoms = new Map();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            for (let str of extra)\n                if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = str.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    let id = parseInt(bits[0]);\n                    if (id > 0) {\n                        let atoms = blockAtoms.get(id);\n                        if (atoms)\n                            atoms.push(n);\n                        else\n                            atoms = [n];\n                        blockAtoms.set(id, atoms);\n                    }\n                }\n        }\n        for (let key of Vec.sorted(Array.from(blockAtoms.keys())))\n            this.appendBlock(key, blockAtoms.get(key));\n    }\n    getIDList() { return Vec.sorted(Array.from(this.units.keys())); }\n    getUnit(id) { return this.units.get(id); }\n    getUnits() { return Array.from(this.units.values()); }\n    rewriteMolecule() {\n        this.purgeExtraFields();\n        for (let key of Vec.sorted(Array.from(this.units.keys())))\n            this.writeUnit(key, this.units.get(key));\n    }\n    harmoniseNumbering(other) {\n        let allKeys = other.getIDList();\n        for (let key of this.getIDList())\n            if (allKeys.includes(key)) {\n                let unit = this.units.get(key);\n                this.units.delete(key);\n                key = this.nextIdentifier(allKeys);\n                this.units.set(key, unit);\n                allKeys.push(key);\n            }\n    }\n    removeUnit(id) {\n        let unit = this.units.get(id);\n        if (unit == null)\n            return;\n        this.units.delete(id);\n        let pfx = POLYMERBLOCK_EXTRA_POLYMER + id + ':';\n        for (let a of unit.atoms) {\n            let extra = this.mol.atomExtra(a);\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(pfx))\n                    extra = Vec.remove(extra, i);\n            this.mol.setAtomExtra(a, extra);\n        }\n        for (let b = 1; b <= this.mol.numBonds; b++) {\n            let extra = this.mol.bondExtra(b);\n            if (Vec.isBlank(extra))\n                continue;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(pfx))\n                    extra = Vec.remove(extra, i);\n            this.mol.setBondExtra(b, extra);\n        }\n    }\n    removeAll() {\n        this.units.clear();\n        this.purgeExtraFields();\n    }\n    createUnit(unit) {\n        let id = this.nextIdentifier();\n        this.units.set(id, unit.clone());\n        this.writeUnit(id, unit);\n        return id;\n    }\n    static hasPolymerExtensions(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra)\n                    if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n                        return true;\n        }\n        return false;\n    }\n    static getPolymerExtensions(mol, atom) {\n        let extra = mol.atomExtra(atom), polext = null;\n        if (extra == null)\n            return null;\n        for (let str of extra)\n            if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n                polext = Vec.append(polext, str);\n        return polext;\n    }\n    static removePolymerExtensions(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        if (extra == null)\n            return;\n        let modified = false;\n        for (let i = extra.length - 1; i >= 0; i--)\n            if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                extra = Vec.remove(extra, i);\n                modified = true;\n            }\n        if (modified)\n            mol.setAtomExtra(atom, extra);\n    }\n    appendBlock(id, atoms) {\n        const { mol } = this;\n        let nattach = 0;\n        let unit = new PolymerBlockUnit(atoms);\n        for (let atom of atoms)\n            for (let extra of mol.atomExtra(atom))\n                if (extra.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = extra.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    if (bits.length < 2 || parseInt(bits[0]) != id)\n                        continue;\n                    nattach = parseInt(bits[1]);\n                    for (let n = 2; n < bits.length; n++) {\n                        if (bits[n] == PolymerBlockConnectivity.HeadToTail)\n                            unit.connect = PolymerBlockConnectivity.HeadToTail;\n                        else if (bits[n] == PolymerBlockConnectivity.HeadToHead)\n                            unit.connect = PolymerBlockConnectivity.HeadToHead;\n                        else if (bits[n] == PolymerBlockConnectivity.Random)\n                            unit.connect = PolymerBlockConnectivity.Random;\n                        else if (bits[n].startsWith('n')) {\n                            let hasOuter = false;\n                            for (let adj of mol.atomAdjList(atom))\n                                if (!atoms.includes(adj)) {\n                                    hasOuter = true;\n                                    break;\n                                }\n                            if (hasOuter) {\n                                let subBits = bits[n].substring(1).split(',');\n                                unit.atomName.set(atom, subBits.map((str) => parseInt(str)));\n                            }\n                        }\n                    }\n                }\n        if (nattach < 0)\n            return;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let in1 = atoms.indexOf(mol.bondFrom(n)) >= 0, in2 = atoms.indexOf(mol.bondTo(n)) >= 0;\n            if ((in1 && !in2) || (!in1 && in2))\n                nattach--;\n        }\n        if (nattach != 0)\n            return;\n        let bonds = null, order = null;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            for (let extra of mol.bondExtra(n))\n                if (extra.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = extra.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    if (bits.length < 2 || parseInt(bits[0]) != id)\n                        continue;\n                    for (let i = 1; i < bits.length; i++) {\n                        if (bits[i].startsWith('i')) {\n                            let subBits = bits[i].substring(1).split(',');\n                            unit.bondIncl.set(n, subBits.map((str) => parseInt(str)));\n                        }\n                        else if (bits[i].startsWith('e')) {\n                            let subBits = bits[i].substring(1).split(',');\n                            unit.bondExcl.set(n, subBits.map((str) => parseInt(str)));\n                        }\n                        else {\n                            let o = parseInt(bits[i]);\n                            if (o > 0) {\n                                bonds = Vec.append(bonds, n);\n                                order = Vec.append(order, o);\n                            }\n                        }\n                    }\n                }\n        }\n        if (bonds != null) {\n            if (bonds.length % 2 == 1)\n                return;\n            unit.bondConn = Vec.idxGet(bonds, Vec.idxSort(order));\n        }\n        this.units.set(id, unit);\n    }\n    formatBlockAtom(id, unit, atom) {\n        let nbonds = 0;\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let in1 = unit.atoms.indexOf(this.mol.bondFrom(n)) >= 0, in2 = unit.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n            if ((in1 && !in2) || (!in1 && in2))\n                nbonds++;\n        }\n        let str = POLYMERBLOCK_EXTRA_POLYMER + id + ':' + nbonds;\n        if (unit.connect != null)\n            str += ':' + unit.connect;\n        let names = unit.atomName.get(atom);\n        if (Vec.notBlank(names))\n            str += ':n' + names.join(',');\n        return str;\n    }\n    formatBlockBond(id, unit, bond) {\n        let in1 = unit.atoms.includes(this.mol.bondFrom(bond)), in2 = unit.atoms.includes(this.mol.bondTo(bond));\n        let isBoundary = (in1 && !in2) || (in2 && !in1);\n        if (!isBoundary)\n            return null;\n        let idxConn = unit.bondConn ? unit.bondConn.indexOf(bond) : -1;\n        let incl = unit.bondIncl.get(bond), excl = unit.bondExcl.get(bond);\n        if (idxConn < 0 && Vec.isBlank(incl) && Vec.isBlank(excl))\n            return null;\n        let str = POLYMERBLOCK_EXTRA_POLYMER + id;\n        if (idxConn >= 0)\n            str += ':' + (idxConn + 1);\n        if (Vec.notBlank(incl))\n            str += ':i' + incl.join(',');\n        if (Vec.notBlank(excl))\n            str += ':e' + excl.join(',');\n        return str;\n    }\n    purgeExtraFields() {\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let extra = this.mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    extra = Vec.remove(extra, i);\n                    modified = true;\n                }\n            if (modified)\n                this.mol.setAtomExtra(n, extra);\n        }\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let extra = this.mol.bondExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    extra = Vec.remove(extra, i);\n                    modified = true;\n                }\n            if (modified)\n                this.mol.setBondExtra(n, extra);\n        }\n    }\n    writeUnit(id, unit) {\n        const { mol } = this;\n        for (let a of unit.atoms) {\n            let codeAtom = this.formatBlockAtom(id, unit, a);\n            mol.setAtomExtra(a, Vec.append(mol.atomExtra(a), codeAtom));\n        }\n        for (let b = 1; b <= mol.numBonds; b++) {\n            let codeBond = this.formatBlockBond(id, unit, b);\n            if (codeBond)\n                mol.setBondExtra(b, Vec.append(mol.bondExtra(b), codeBond));\n        }\n    }\n    nextIdentifier(keys) {\n        if (!keys)\n            keys = this.getIDList();\n        if (keys.length == 0)\n            return 1;\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=PolymerBlock.js.map","import { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nexport var QueryTypeAtom;\n(function (QueryTypeAtom) {\n    QueryTypeAtom[\"Charges\"] = \"qC:\";\n    QueryTypeAtom[\"Aromatic\"] = \"qA:\";\n    QueryTypeAtom[\"Unsaturated\"] = \"qU:\";\n    QueryTypeAtom[\"Elements\"] = \"qE:\";\n    QueryTypeAtom[\"ElementsNot\"] = \"qE!\";\n    QueryTypeAtom[\"RingSizes\"] = \"qR:\";\n    QueryTypeAtom[\"RingSizesNot\"] = \"qR!\";\n    QueryTypeAtom[\"RingBlock\"] = \"qB:\";\n    QueryTypeAtom[\"NumRings\"] = \"qN:\";\n    QueryTypeAtom[\"RingBonds\"] = \"qG:\";\n    QueryTypeAtom[\"Adjacency\"] = \"qJ:\";\n    QueryTypeAtom[\"BondSums\"] = \"qO:\";\n    QueryTypeAtom[\"Valences\"] = \"qV:\";\n    QueryTypeAtom[\"Hydrogens\"] = \"qH:\";\n    QueryTypeAtom[\"Isotopes\"] = \"qI:\";\n    QueryTypeAtom[\"SubFrags\"] = \"qX:\";\n    QueryTypeAtom[\"SubFragsNot\"] = \"qX!\";\n})(QueryTypeAtom || (QueryTypeAtom = {}));\nexport var QueryTypeBond;\n(function (QueryTypeBond) {\n    QueryTypeBond[\"RingSizes\"] = \"qR:\";\n    QueryTypeBond[\"RingSizesNot\"] = \"qR!\";\n    QueryTypeBond[\"RingBlock\"] = \"qB:\";\n    QueryTypeBond[\"NumRings\"] = \"qN:\";\n    QueryTypeBond[\"Orders\"] = \"qO:\";\n})(QueryTypeBond || (QueryTypeBond = {}));\nexport class QueryUtil {\n    static hasAnyQueryAtom(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith('q'))\n                return true;\n        return false;\n    }\n    static hasAnyQueryBond(mol, bond) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith('q'))\n                return true;\n        return false;\n    }\n    static hasQueryAtom(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return true;\n        return false;\n    }\n    static hasQueryBond(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return true;\n        return false;\n    }\n    static deleteQueryAtom(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        let modified = false;\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type)) {\n                extra.splice(n, 1);\n                modified = true;\n            }\n        if (modified)\n            mol.setAtomExtra(atom, extra);\n    }\n    static deleteQueryBond(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        let modified = false;\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type)) {\n                extra.splice(n, 1);\n                modified = true;\n            }\n        if (modified)\n            mol.setBondExtra(bond, extra);\n    }\n    static deleteQueryAtomAll(mol, atom) {\n        mol.setAtomExtra(atom, mol.atomExtra(atom).filter((xtra) => !xtra.startsWith('q')));\n    }\n    static deleteQueryBondAll(mol, bond) {\n        mol.setBondExtra(bond, mol.bondExtra(bond).filter((xtra) => !xtra.startsWith('q')));\n    }\n    static queryAtomString(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return extra[n].substring(type.length);\n        return null;\n    }\n    static queryAtomStringList(mol, atom, type) {\n        let extra = mol.atomExtra(atom), list = null;\n        if (extra != null)\n            for (let str of extra)\n                if (str.startsWith(type))\n                    list = Vec.append(list, str.substring(type.length));\n        return list;\n    }\n    static queryBondString(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return extra[n].substring(type.length);\n        return null;\n    }\n    static setQueryAtom(mol, atom, type, str) {\n        if (!str) {\n            this.deleteQueryAtom(mol, atom, type);\n            return;\n        }\n        let value = type + str;\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--) {\n            if (extra[n].startsWith(type)) {\n                if (value != null) {\n                    extra[n] = value;\n                    value = null;\n                }\n                else\n                    extra.splice(n, 1);\n            }\n        }\n        if (value != null)\n            extra.push(value);\n        mol.setAtomExtra(atom, extra);\n    }\n    static setQueryAtomList(mol, atom, type, list) {\n        if (Vec.isBlank(list)) {\n            this.deleteQueryAtom(mol, atom, type);\n            return;\n        }\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                extra.splice(n, 1);\n        for (let str of list)\n            extra.push(type + str);\n        mol.setAtomExtra(atom, extra);\n    }\n    static setQueryBond(mol, bond, type, str) {\n        if (!str) {\n            this.deleteQueryBond(mol, bond, type);\n            return;\n        }\n        let value = type + str;\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--) {\n            if (extra[n].startsWith(type)) {\n                if (value != null) {\n                    extra[n] = value;\n                    value = null;\n                }\n                else\n                    extra.splice(n, 1);\n            }\n        }\n        if (value != null)\n            extra.push(value);\n        mol.setBondExtra(bond, extra);\n    }\n    static queryAtomCharges(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Charges)); }\n    static queryAtomAromatic(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.Aromatic)); }\n    static queryAtomUnsaturated(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.Unsaturated)); }\n    static queryAtomElements(mol, atom) { return this.parseStrings(this.queryAtomString(mol, atom, QueryTypeAtom.Elements)); }\n    static queryAtomElementsNot(mol, atom) { return this.parseStrings(this.queryAtomString(mol, atom, QueryTypeAtom.ElementsNot)); }\n    static queryAtomRingSizes(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingSizes)); }\n    static queryAtomRingSizesNot(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingSizesNot)); }\n    static queryAtomRingBlock(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.RingBlock)); }\n    static queryAtomNumRings(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.NumRings)); }\n    static queryAtomRingBonds(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingBonds)); }\n    static queryAtomAdjacency(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Adjacency)); }\n    static queryAtomBondSums(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.BondSums)); }\n    static queryAtomValences(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Valences)); }\n    static queryAtomHydrogens(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Hydrogens)); }\n    static queryAtomIsotope(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Isotopes)); }\n    static queryAtomSubFrags(mol, atom) { return this.parseMolecules(this.queryAtomStringList(mol, atom, QueryTypeAtom.SubFrags)); }\n    static queryAtomSubFragsNot(mol, atom) { return this.parseMolecules(this.queryAtomStringList(mol, atom, QueryTypeAtom.SubFragsNot)); }\n    static queryBondRingSizes(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.RingSizes)); }\n    static queryBondRingSizesNot(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.RingSizesNot)); }\n    static queryBondRingBlock(mol, bond) { return this.parseBoolean(this.queryBondString(mol, bond, QueryTypeBond.RingBlock)); }\n    static queryBondNumRings(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.NumRings)); }\n    static queryBondOrders(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.Orders)); }\n    static setQueryAtomCharges(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Charges, this.formatIntegers(value)); }\n    static setQueryAtomAromatic(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Aromatic, this.formatBoolean(value)); }\n    static setQueryAtomUnsaturated(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Unsaturated, this.formatBoolean(value)); }\n    static setQueryAtomElements(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Elements, this.formatStrings(value)); }\n    static setQueryAtomElementsNot(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.ElementsNot, this.formatStrings(value)); }\n    static setQueryAtomRingSizes(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingSizes, this.formatIntegers(value)); }\n    static setQueryAtomRingSizesNot(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingSizesNot, this.formatIntegers(value)); }\n    static setQueryAtomRingBlock(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingBlock, this.formatBoolean(value)); }\n    static setQueryAtomNumRings(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.NumRings, this.formatIntegers(value)); }\n    static setQueryAtomRingBonds(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingBonds, this.formatIntegers(value)); }\n    static setQueryAtomAdjacency(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Adjacency, this.formatIntegers(value)); }\n    static setQueryAtomBondSums(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.BondSums, this.formatIntegers(value)); }\n    static setQueryAtomValences(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Valences, this.formatIntegers(value)); }\n    static setQueryAtomHydrogens(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Hydrogens, this.formatIntegers(value)); }\n    static setQueryAtomIsotope(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Isotopes, this.formatIntegers(value)); }\n    static setQueryAtomSubFrags(mol, atom, value) { this.setQueryAtomList(mol, atom, QueryTypeAtom.SubFrags, this.formatMolecules(value)); }\n    static setQueryAtomSubFragsNot(mol, atom, value) { this.setQueryAtomList(mol, atom, QueryTypeAtom.SubFragsNot, this.formatMolecules(value)); }\n    static setQueryBondRingSizes(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingSizes, this.formatIntegers(value)); }\n    static setQueryBondRingSizesNot(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingSizesNot, this.formatIntegers(value)); }\n    static setQueryBondRingBlock(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingBlock, this.formatBoolean(value)); }\n    static setQueryBondNumRings(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.NumRings, this.formatIntegers(value)); }\n    static setQueryBondOrders(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.Orders, this.formatIntegers(value)); }\n    static parseIntegers(str) {\n        if (!str)\n            return null;\n        let strlist = str.split(',');\n        let intlist = new Array(strlist.length);\n        for (let n = 0; n < strlist.length; n++)\n            intlist[n] = parseInt(strlist[n]);\n        return intlist;\n    }\n    static parseStrings(str) {\n        if (!str)\n            return null;\n        return str.split(',');\n    }\n    static parseBoolean(str) {\n        return !str ? null : str == 'yes';\n    }\n    static parseMolecules(list) {\n        if (!list)\n            return null;\n        let mols = [];\n        for (let molstr of list) {\n            let mol = Molecule.fromString(molstr);\n            if (MolUtil.notBlank(mol))\n                mols.push(mol);\n        }\n        return mols;\n    }\n    static formatIntegers(list) {\n        if (Vec.isBlank(list))\n            return null;\n        let str = '';\n        for (let n = 0; n < list.length; n++) {\n            if (n > 0)\n                str += ',';\n            str += list[n];\n        }\n        return str;\n    }\n    static formatStrings(list) {\n        if (Vec.isBlank(list))\n            return null;\n        let str = '';\n        for (let n = 0; n < list.length; n++) {\n            if (n > 0)\n                str += ',';\n            str += list[n];\n        }\n        return str;\n    }\n    static formatBoolean(value) {\n        return value ? 'yes' : 'no';\n    }\n    static formatMolecules(mols) {\n        if (Vec.isBlank(mols))\n            return null;\n        let list = [];\n        for (let mol of mols)\n            if (MolUtil.notBlank(mol))\n                list.push(mol.toString());\n        return list;\n    }\n}\n//# sourceMappingURL=QueryUtil.js.map","import { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nexport const STEREOGROUP_EXTRA_RACEMIC = 'xCHIRAC:';\nexport const STEREOGROUP_EXTRA_RELATIVE = 'xCHIREL:';\nexport class StereoGroup {\n    static hasStereoGroups(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra)\n                    if (str.startsWith(STEREOGROUP_EXTRA_RACEMIC) || str.startsWith(STEREOGROUP_EXTRA_RELATIVE))\n                        return true;\n        }\n        return false;\n    }\n    constructor(mol) {\n        this.mol = mol;\n        this.chiRac = new Map();\n        this.chiRel = new Map();\n        this.mol = mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra) {\n                    if (str.startsWith(STEREOGROUP_EXTRA_RACEMIC)) {\n                        let grp = parseInt(str.substring(STEREOGROUP_EXTRA_RACEMIC.length));\n                        if (grp > 0)\n                            this.chiRac.set(grp, Vec.append(this.chiRac.get(grp), n));\n                    }\n                    else if (str.startsWith(STEREOGROUP_EXTRA_RELATIVE)) {\n                        let grp = parseInt(str.substring(STEREOGROUP_EXTRA_RELATIVE.length));\n                        if (grp > 0)\n                            this.chiRel.set(grp, Vec.append(this.chiRel.get(grp), n));\n                    }\n                }\n        }\n        for (let [grp, atoms] of this.chiRac.entries()) {\n            for (let n = atoms.length - 1; n >= 0; n--)\n                if (!this.atomHasWedge(atoms[n]))\n                    atoms.splice(n, 1);\n            if (atoms.length > 0)\n                this.chiRac.set(grp, atoms);\n            else\n                this.chiRac.delete(grp);\n        }\n        for (let [grp, atoms] of this.chiRel.entries()) {\n            for (let n = atoms.length - 1; n >= 0; n--)\n                if (!this.atomHasWedge(atoms[n]))\n                    atoms.splice(n, 1);\n            if (atoms.length > 0)\n                this.chiRel.set(grp, atoms);\n            else\n                this.chiRel.delete(grp);\n        }\n    }\n    getRacemicGroups() { return Array.from(this.chiRac.keys()); }\n    getRelativeGroups() { return Array.from(this.chiRel.keys()); }\n    getRacemicAtoms() { return Array.from(this.chiRac.values()); }\n    getRelativeAtoms() { return Array.from(this.chiRel.values()); }\n    getRacemicGroupAtoms(grp) { return this.chiRac.get(grp); }\n    getRelativeGroupAtoms(grp) { return this.chiRel.get(grp); }\n    rewriteMolecule() {\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let extra = this.mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (extra[i].startsWith(STEREOGROUP_EXTRA_RACEMIC) || extra[i].startsWith(STEREOGROUP_EXTRA_RELATIVE)) {\n                    extra.splice(i, 1);\n                    modified = true;\n                }\n            }\n            if (modified)\n                this.mol.setAtomExtra(n, extra);\n        }\n        for (let [grp, atoms] of this.chiRac.entries()) {\n            for (let a of atoms)\n                this.mol.setAtomExtra(a, [...this.mol.atomExtra(a), STEREOGROUP_EXTRA_RACEMIC + grp]);\n        }\n        for (let [grp, atoms] of this.chiRel.entries()) {\n            for (let a of atoms)\n                this.mol.setAtomExtra(a, [...this.mol.atomExtra(a), STEREOGROUP_EXTRA_RELATIVE + grp]);\n        }\n    }\n    harmoniseNumbering(other) {\n        let groups = other.getRacemicGroups();\n        let stash = this.getRacemicAtoms();\n        this.chiRac.clear();\n        for (let atoms of stash) {\n            let grp = this.nextIdentifier(groups);\n            this.chiRac.set(grp, atoms);\n            groups.push(grp);\n        }\n        groups = other.getRelativeGroups();\n        stash = this.getRelativeAtoms();\n        this.chiRel.clear();\n        for (let atoms of stash) {\n            let grp = this.nextIdentifier(groups);\n            this.chiRel.set(grp, atoms);\n            groups.push(grp);\n        }\n    }\n    createRacemic(atoms) {\n        let grp = this.nextIdentifier(this.getRacemicGroups());\n        this.chiRac.set(grp, atoms);\n        return grp;\n    }\n    createRelative(atoms) {\n        let grp = this.nextIdentifier(this.getRelativeGroups());\n        this.chiRel.set(grp, atoms);\n        return grp;\n    }\n    removeRacemic(grp) {\n        this.chiRac.delete(grp);\n    }\n    removeRelative(grp) {\n        this.chiRel.delete(grp);\n    }\n    static removeAll(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (!extra[i].startsWith(STEREOGROUP_EXTRA_RACEMIC) && !extra[i].startsWith(STEREOGROUP_EXTRA_RELATIVE))\n                    continue;\n                extra.splice(i, 1);\n                modified = true;\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n    }\n    atomHasWedge(atom) {\n        if (this.mol.is3D())\n            return true;\n        let hasWedge = false;\n        for (let b of this.mol.atomAdjBonds(atom)) {\n            let bt = this.mol.bondType(b);\n            if (bt == Molecule.BONDTYPE_UNKNOWN)\n                return false;\n            if (this.mol.bondFrom(b) != atom)\n                continue;\n            if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                hasWedge = true;\n        }\n        return hasWedge;\n    }\n    nextIdentifier(inkeys) {\n        if (inkeys.length == 0)\n            return 1;\n        let keys = Vec.sorted(inkeys);\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=StereoGroup.js.map","import { ResonanceRemover } from '../calc/ResonanceRemover';\nimport { Vec } from '../util/Vec';\nimport { BondArtifact } from '../mol/BondArtifact';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { DataSheet } from '../ds/DataSheet';\nimport { ForeignMolecule, ForeignMoleculeTransient } from '../mol/ForeignMolecule';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity, PolymerBlockUnit } from '../mol/PolymerBlock';\nimport { QueryUtil } from '../mol/QueryUtil';\nimport { StereoGroup } from '../mol/StereoGroup';\nexport const MDLMOL_VALENCE = {\n    'H': [1],\n    'B': [3],\n    'C': [4],\n    'Si': [4],\n    'N': [3],\n    'P': [3, 5],\n    'As': [3, 5],\n    'O': [2],\n    'S': [2, 4, 6],\n    'Se': [2, 4, 6],\n    'Te': [2, 4, 6],\n    'F': [1],\n    'Cl': [1, 3, 5, 7],\n    'Br': [1],\n    'I': [1, 3, 5, 7],\n    'At': [1, 3, 5, 7],\n};\nexport class MDLMOLReader {\n    constructor(strData) {\n        this.parseHeader = true;\n        this.parseExtended = true;\n        this.allowV3000 = true;\n        this.considerRescale = true;\n        this.keepAromatic = false;\n        this.keepParity = false;\n        this.keepQuery = true;\n        this.mol = null;\n        this.molName = '';\n        this.overallStereoAbsolute = true;\n        this.resBonds = null;\n        this.groupAttachAny = new Map();\n        this.groupAttachAll = new Map();\n        this.groupStereoAbsolute = [];\n        this.groupStereoRacemic = [];\n        this.groupStereoRelative = [];\n        this.groupLinkNodes = [];\n        this.groupMixtures = [];\n        this.scsrTemplates = null;\n        this.pos = 0;\n        this.lines = strData.split(/\\r?\\n/);\n    }\n    parse() {\n        if (this.parseHeader) {\n            this.molName = this.lines[0];\n            this.pos = 3;\n        }\n        this.parseCTAB();\n        return this.mol;\n    }\n    nextLine() {\n        if (this.pos >= this.lines.length)\n            throw 'MDL Molfile parser: premature end, at line ' + (this.pos + 1);\n        return this.lines[this.pos++];\n    }\n    parseCTAB() {\n        this.mol = new Molecule();\n        this.mol.keepTransient = true;\n        let line = this.nextLine();\n        let version = line.length >= 39 ? line.substring(34, 39) : '';\n        if (this.allowV3000 && version == 'V3000') {\n            this.parseV3000();\n            this.mol.keepTransient = false;\n            return;\n        }\n        if (version != 'V2000')\n            throw 'Invalid MDL MOL: no Vx000 tag.';\n        let numAtoms = parseInt(line.substring(0, 3).trim());\n        let numBonds = parseInt(line.substring(3, 6).trim());\n        if (line.length >= 15)\n            this.overallStereoAbsolute = parseInt(line.substring(12, 15).trim()) == 1;\n        for (let n = 0; n < numAtoms; n++) {\n            line = this.nextLine();\n            if (line.length < 34)\n                throw 'Invalid MDL MOL: atom line' + (n + 1);\n            let x = parseFloat(line.substring(0, 10).trim());\n            let y = parseFloat(line.substring(10, 20).trim());\n            let z = parseFloat(line.substring(20, 30).trim());\n            let el = line.substring(31, 34).trim();\n            let chg = line.length < 39 ? 0 : parseInt(line.substring(36, 39).trim()), rad = 0;\n            let stereo = line.length < 42 ? 0 : parseInt(line.substring(39, 42).trim());\n            let hyd = line.length < 45 ? 0 : parseInt(line.substring(42, 45).trim());\n            let val = line.length < 51 ? 0 : parseInt(line.substring(48, 51).trim());\n            let mapnum = line.length < 63 ? 0 : parseInt(line.substring(60, 63).trim());\n            if (chg >= 1 && chg <= 3)\n                chg = 4 - chg;\n            else if (chg == 4) {\n                chg = 0;\n                rad = 2;\n            }\n            else if (chg >= 5 && chg <= 7)\n                chg = 4 - chg;\n            else\n                chg = 0;\n            let a = this.mol.addAtom(el, x, y, chg, rad);\n            if (z != 0) {\n                this.mol.setAtomZ(a, z);\n                this.mol.setIs3D(true);\n            }\n            this.mol.setAtomMapNum(a, mapnum);\n            if (hyd > 0)\n                QueryUtil.setQueryAtomHydrogens(this.mol, a, [hyd - 1]);\n            if (stereo > 0 && this.keepParity) {\n                let trans = this.mol.atomTransient(a);\n                if (stereo == 1)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLOdd));\n                else if (stereo == 2)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLEven));\n                else if (stereo == 3)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLRacemic));\n            }\n            if (val != 0)\n                ForeignMolecule.markExplicitValence(this.mol, n + 1, val > 14 ? 0 : val);\n        }\n        for (let n = 0; n < numBonds; n++) {\n            line = this.nextLine();\n            if (line.length >= 9 && line.length < 12)\n                line = line.substring(0, 9) + '  0';\n            if (line.length < 12)\n                throw 'Invalid MDL MOL: bond line' + (n + 1);\n            let bfr = parseInt(line.substring(0, 3).trim()), bto = parseInt(line.substring(3, 6).trim());\n            let type = parseInt(line.substring(6, 9).trim()), stereo = parseInt(line.substring(9, 12).trim());\n            if (bfr == bto || bfr < 1 || bfr > numAtoms || bto < 1 || bto > numAtoms)\n                throw 'Invalid MDL MOL: bond line' + (n + 1);\n            let order = type >= 1 && type <= 3 ? type : type == 8 || type == 9 || type == 10 ? 0 : 1;\n            let style = Molecule.BONDTYPE_NORMAL;\n            if (stereo == 1)\n                style = Molecule.BONDTYPE_INCLINED;\n            else if (stereo == 6)\n                style = Molecule.BONDTYPE_DECLINED;\n            else if (stereo == 3 || stereo == 4)\n                style = Molecule.BONDTYPE_UNKNOWN;\n            let b = this.mol.addBond(bfr, bto, order, style);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroDative);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroHydrogen);\n            if (this.keepQuery) {\n                if (type == 4)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1]);\n                else if (type == 5)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [1, 2]);\n                else if (type == 6)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 1]);\n                else if (type == 7)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 2]);\n                else if (type == 8)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 0, 1, 2, 3]);\n            }\n            else {\n                if (type == 4) {\n                    if (this.keepAromatic)\n                        this.mol.setBondTransient(b, Vec.append(this.mol.bondTransient(b), ForeignMoleculeTransient.BondAromatic));\n                    else {\n                        if (this.resBonds == null)\n                            this.resBonds = Vec.booleanArray(false, numBonds);\n                        this.resBonds[n] = true;\n                    }\n                }\n            }\n        }\n        const MBLK_CHG = 1, MBLK_RAD = 2, MBLK_ISO = 3, MBLK_RGP = 4, MBLK_HYD = 5, MBLK_ZCH = 6, MBLK_ZBO = 7, MBLK_ZPA = 8, MBLK_ZRI = 9, MBLK_ZAR = 10, MBLK_RBC = 11, MBLK_SUB = 12, MBLK_UNS = 13;\n        let resPaths = new Map(), resRings = new Map(), arenes = new Map();\n        let superatoms = new Map(), mixtures = new Map();\n        while (true) {\n            line = this.nextLine();\n            if (line.startsWith('M  END'))\n                break;\n            let type = 0;\n            if (line.startsWith('M  CHG'))\n                type = MBLK_CHG;\n            else if (line.startsWith('M  RAD'))\n                type = MBLK_RAD;\n            else if (line.startsWith('M  ISO'))\n                type = MBLK_ISO;\n            else if (line.startsWith('M  RGP'))\n                type = MBLK_RGP;\n            else if (this.parseExtended && line.startsWith('M  HYD'))\n                type = MBLK_HYD;\n            else if (this.parseExtended && line.startsWith('M  ZCH'))\n                type = MBLK_ZCH;\n            else if (this.parseExtended && line.startsWith('M  ZBO'))\n                type = MBLK_ZBO;\n            else if (this.parseExtended && line.startsWith('M  ZPA'))\n                type = MBLK_ZPA;\n            else if (this.parseExtended && line.startsWith('M  ZRI'))\n                type = MBLK_ZRI;\n            else if (this.parseExtended && line.startsWith('M  ZAR'))\n                type = MBLK_ZAR;\n            else if (this.parseExtended && line.startsWith('M  RBC'))\n                type = MBLK_RBC;\n            else if (this.parseExtended && line.startsWith('M  SUB'))\n                type = MBLK_SUB;\n            else if (this.parseExtended && line.startsWith('M  UNS'))\n                type = MBLK_UNS;\n            else if (line.startsWith('A  ') && line.length >= 6) {\n                let anum = parseInt(line.substring(3, 6).trim());\n                if (anum >= 1 && anum <= this.mol.numAtoms) {\n                    line = this.nextLine();\n                    if (line == null)\n                        break;\n                    this.mol.setAtomElement(anum, line);\n                    continue;\n                }\n            }\n            else if (line.startsWith('M  STY')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let idx = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let stype = line.substring(14 + 8 * n, 17 + 8 * n);\n                    if (stype == 'SUP')\n                        superatoms.set(idx, { atoms: [], name: null });\n                    else if (stype == 'MIX' || stype == 'FOR')\n                        mixtures.set(idx, { index: idx, parent: 0, atoms: [], type: stype });\n                    else if (stype == 'SRU' || stype == 'COP' || stype == 'MUL' || stype == 'DAT')\n                        superatoms.set(idx, { atoms: [], name: null, bracketType: stype });\n                }\n            }\n            else if (line.startsWith('M  SPL')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let child = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let parent = parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim());\n                    let mix = mixtures.get(child);\n                    if (mix != null)\n                        mix.parent = parent;\n                }\n            }\n            else if (line.startsWith('M  SAL')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let atoms = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        atoms[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    sup.atoms = Vec.concat(sup.atoms, atoms);\n                }\n                let mix = mixtures.get(idx);\n                if (mix != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let atoms = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        atoms[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    mix.atoms = Vec.concat(mix.atoms, atoms);\n                }\n            }\n            else if (line.startsWith('M  SBL')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let bonds = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        bonds[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    sup.bonds = Vec.concat(sup.bonds, bonds);\n                }\n            }\n            else if (line.startsWith('M  SMT')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null)\n                    sup.name = line.substring(11).trim();\n            }\n            else if (line.startsWith('M  SDT')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup) {\n                    sup.name = line.substring(11, 41).trim();\n                    sup.unit = line.substring(43, 63).trim();\n                    sup.query = line.substring(63).trim();\n                }\n            }\n            else if (line.startsWith('M  SED')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup)\n                    sup.value = line.substring(11).trim();\n            }\n            else if (line.startsWith('M  SCN')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let idx = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let stype = line.substring(14 + 8 * n, 17 + 8 * n);\n                    let sup = superatoms.get(idx);\n                    if (sup != null)\n                        sup.connectType = stype.trim();\n                }\n            }\n            else if (line.startsWith('M  CRS')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    sup.bondConn = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        sup.bondConn[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                }\n            }\n            else if (line.startsWith('M  LIN')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let node = {\n                        atom: parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim()),\n                        nbrs: [],\n                        minRep: 1,\n                        maxRep: parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim()),\n                    };\n                    let nbr1 = parseInt(line.substring(17 + 8 * n, 21 + 8 * n).trim());\n                    let nbr2 = parseInt(line.substring(21 + 8 * n, 25 + 8 * n).trim());\n                    if (nbr1 > 0)\n                        node.nbrs.push(nbr1);\n                    if (nbr2 > 0)\n                        node.nbrs.push(nbr2);\n                    this.groupLinkNodes.push(node);\n                }\n            }\n            else if (line.startsWith('M  ALS')) {\n                let atom = parseInt(line.substring(7, 10).trim());\n                let len = parseInt(line.substring(10, 13).trim());\n                let logic = line.charAt(14);\n                let elements = [];\n                for (let n = 0; n < len; n++)\n                    elements.push(line.substring(16 + n * 4, 20 + n * 4).trim());\n                this.mol.setAtomElement(atom, '*');\n                if (logic == 'F')\n                    QueryUtil.setQueryAtomElements(this.mol, atom, elements);\n                else if (logic == 'T')\n                    QueryUtil.setQueryAtomElementsNot(this.mol, atom, elements);\n            }\n            if (type == MBLK_ZPA || type == MBLK_ZRI || type == MBLK_ZAR) {\n                let len = parseInt(line.substring(6, 9).trim()), blk = parseInt(line.substring(9, 13).trim());\n                let map = type == MBLK_ZPA ? resPaths : type == MBLK_ZRI ? resRings : arenes;\n                for (let n = 0; n < len; n++) {\n                    let val = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    if (val < 1 || val > numAtoms)\n                        throw 'Invalid MDL MOL: M-block';\n                    let atoms = map.get(blk);\n                    if (!atoms)\n                        map.set(blk, atoms = []);\n                    atoms.push(val);\n                }\n            }\n            else if (type > 0) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let pos = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let val = parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim());\n                    if (pos < 1)\n                        throw 'Invalid MDL MOL: M-block';\n                    if (type == MBLK_CHG)\n                        this.mol.setAtomCharge(pos, val);\n                    else if (type == MBLK_RAD) {\n                        if (val == 1 || val == 3)\n                            this.mol.setAtomUnpaired(pos, 2);\n                        else if (val == 2)\n                            this.mol.setAtomUnpaired(pos, 1);\n                    }\n                    else if (type == MBLK_ISO)\n                        this.mol.setAtomIsotope(pos, val);\n                    else if (type == MBLK_RGP)\n                        this.mol.setAtomElement(pos, 'R' + val);\n                    else if (type == MBLK_HYD)\n                        this.mol.setAtomHExplicit(pos, val);\n                    else if (type == MBLK_ZCH)\n                        this.mol.setAtomCharge(pos, val);\n                    else if (type == MBLK_ZBO)\n                        this.mol.setBondOrder(pos, val);\n                    else if (type == MBLK_RBC && val != 0) {\n                        if (val == -2)\n                            val = this.countRingBonds(pos);\n                        else if (val == -1)\n                            val = 0;\n                        QueryUtil.setQueryAtomRingBonds(this.mol, pos, [val]);\n                    }\n                    else if (type == MBLK_SUB && val != 0) {\n                        if (val == -2)\n                            val = this.countSubstitutions(pos);\n                        else if (val == -1)\n                            val = 0;\n                        QueryUtil.setQueryAtomAdjacency(this.mol, pos, [val]);\n                    }\n                    else if (type == MBLK_UNS) {\n                        if (val == 1)\n                            QueryUtil.setQueryAtomUnsaturated(this.mol, pos, true);\n                    }\n                }\n            }\n        }\n        this.postFix();\n        if (this.parseExtended) {\n            let artifacts = new BondArtifact(this.mol);\n            for (let atoms of resPaths.values())\n                artifacts.createPath(atoms);\n            for (let atoms of resRings.values())\n                artifacts.createRing(atoms);\n            for (let atoms of arenes.values())\n                artifacts.createArene(atoms);\n            artifacts.rewriteMolecule();\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            if (value.bracketType) {\n                superatoms.delete(key);\n                this.applyPolymerBlock(value);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            superatoms.delete(key);\n            this.applySuperAtom(value, Array.from(superatoms.values()));\n        }\n        for (let key of Vec.sorted(Array.from(mixtures.keys())))\n            this.groupMixtures.push(mixtures.get(key));\n        this.mol.keepTransient = false;\n    }\n    postFix() {\n        const mol = this.mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            if (MolUtil.hasAbbrev(mol, n) || mol.atomTransient(n).some((str) => str.startsWith(ForeignMoleculeTransient.AtomSCSRClass)))\n                continue;\n            let el = mol.atomElement(n);\n            if (el == 'D') {\n                mol.setAtomElement(n, 'H');\n                mol.setAtomIsotope(n, 2);\n            }\n            else if (el == 'T') {\n                mol.setAtomElement(n, 'H');\n                mol.setAtomIsotope(n, 3);\n            }\n            if (mol.is3D && mol.atomZ(n) === undefined)\n                mol.setAtomZ(n, 0);\n            let valence = ForeignMolecule.noteExplicitValence(this.mol, n);\n            let options = MDLMOL_VALENCE[el];\n            if (valence != null) {\n                let hcount = valence < 0 || valence > 14 ? 0 : valence;\n                for (let b of mol.atomAdjBonds(n))\n                    hcount -= mol.bondOrder(b);\n                if (hcount != mol.atomHydrogens(n))\n                    mol.setAtomHExplicit(n, Math.max(0, hcount));\n            }\n            else if (options) {\n                let chg = mol.atomCharge(n);\n                let chgmod = (el == 'C' || el == 'H') ? Math.abs(chg) : el == 'B' ? -Math.abs(chg) : -chg;\n                let usedValence = chgmod;\n                let unp = mol.atomUnpaired(n);\n                if (unp > 0 && (el == 'C' || el == 'O' || el == 'S' || el == 'N' || el == 'P'))\n                    usedValence += unp;\n                for (let b of mol.atomAdjBonds(n))\n                    usedValence += mol.bondOrder(b);\n                for (let v of options)\n                    if (usedValence <= v) {\n                        let hcount = v - usedValence;\n                        if (hcount != mol.atomHydrogens(n))\n                            mol.setAtomHExplicit(n, Math.max(0, hcount));\n                        break;\n                    }\n            }\n        }\n        if (this.considerRescale && Vec.isBlank(this.scsrTemplates))\n            CoordUtil.normaliseBondDistances(mol);\n        if (this.resBonds != null) {\n            let derez = new ResonanceRemover(mol, this.resBonds, null);\n            try {\n                derez.perform();\n                for (let n = 0; n < mol.numBonds; n++)\n                    mol.setBondOrder(n + 1, derez.bondOrders[n]);\n            }\n            catch (ex) {\n            }\n        }\n    }\n    parseV3000() {\n        var _a;\n        let Section;\n        (function (Section) {\n            Section[Section[\"Atom\"] = 0] = \"Atom\";\n            Section[Section[\"Bond\"] = 1] = \"Bond\";\n            Section[Section[\"Coll\"] = 2] = \"Coll\";\n            Section[Section[\"SGroup\"] = 3] = \"SGroup\";\n            Section[Section[\"Template\"] = 4] = \"Template\";\n        })(Section || (Section = {}));\n        let inCTAB = false, inTemplate = false;\n        let section = null;\n        let lineCounts = null;\n        let lineAtom = [], lineBond = [], lineColl = [], lineSgroup = [];\n        let asdrawnRBC = [], asdrawnSUB = [];\n        let templateBlocks = [];\n        const ERRPFX = 'Invalid MDL MOL V3000: ';\n        while (true) {\n            let fullLine = this.nextLine();\n            if (fullLine == 'M  END')\n                break;\n            if (!fullLine.startsWith('M  V30 '))\n                continue;\n            let line = fullLine.substring(7);\n            if (line.startsWith('BEGIN TEMPLATE'))\n                inTemplate = true;\n            else if (line.startsWith('END TEMPLATE'))\n                inTemplate = false;\n            else if (line.startsWith('TEMPLATE ') && inTemplate)\n                templateBlocks.push([fullLine]);\n            else if (inTemplate && templateBlocks != null)\n                Vec.last(templateBlocks).push(fullLine);\n            else if (line.startsWith('COUNTS '))\n                lineCounts = line.substring(7);\n            else if (line.startsWith('BEGIN CTAB'))\n                inCTAB = true;\n            else if (line.startsWith('BEGIN ATOM'))\n                section = Section.Atom;\n            else if (line.startsWith('BEGIN BOND'))\n                section = Section.Bond;\n            else if (line.startsWith('BEGIN COLLECTION'))\n                section = Section.Coll;\n            else if (line.startsWith('BEGIN SGROUP'))\n                section = Section.SGroup;\n            else if (line.startsWith('END '))\n                section = null;\n            else if (inCTAB && section == Section.Atom)\n                lineAtom.push(line);\n            else if (inCTAB && section == Section.Bond)\n                lineBond.push(line);\n            else if (inCTAB && section == Section.Coll)\n                lineColl.push(line);\n            else if (inCTAB && section == Section.SGroup)\n                lineSgroup.push(line);\n            else if (inCTAB && section == null) {\n                if (line.startsWith('LINKNODE ')) {\n                    let bits = this.splitWithQuotes(line.substring(9));\n                    let node = {\n                        atom: 0,\n                        nbrs: [],\n                        minRep: parseInt(bits[0]),\n                        maxRep: parseInt(bits[1])\n                    };\n                    let nb = parseInt(bits[2]);\n                    let atoms = [];\n                    for (let n = 0; n < nb * 2; n++)\n                        atoms.push(parseInt(bits[3 + n]));\n                    Vec.sort(atoms);\n                    for (let n = 0; n < atoms.length; n++) {\n                        if (n < atoms.length - 1 && atoms[n] == atoms[n + 1])\n                            node.atom = atoms[n++];\n                        else\n                            node.nbrs.push(atoms[n]);\n                    }\n                    this.groupLinkNodes.push(node);\n                }\n            }\n        }\n        let counts = lineCounts.trim().split(/\\s+/);\n        if (counts.length < 2)\n            throw ERRPFX + 'counts line malformatted';\n        let numAtoms = parseInt(counts[0]), numBonds = parseInt(counts[1]);\n        if (numAtoms < 0 || numAtoms > lineAtom.length)\n            throw ERRPFX + 'unreasonable atom count: ' + numAtoms;\n        if (numBonds < 0 || numBonds > lineBond.length)\n            throw ERRPFX + 'unreasonable bond count: ' + numBonds;\n        let atomBits = [], bondBits = [];\n        for (let n = 0; n < lineAtom.length; n++) {\n            let line = lineAtom[n];\n            while (n < lineAtom.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineAtom[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits.length < 6)\n                throw ERRPFX + 'atom line has too few components: ' + line;\n            let idx = parseInt(bits[0], 0);\n            if (idx < 1 || idx > numAtoms)\n                throw ERRPFX + 'invalid atom index: ' + bits[0];\n            if (atomBits[idx - 1] != null)\n                throw ERRPFX + 'duplicate atom index: ' + idx;\n            atomBits[idx - 1] = bits;\n        }\n        for (let n = 0; n < lineBond.length; n++) {\n            let line = lineBond[n];\n            while (n < lineBond.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineBond[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits.length < 4)\n                throw ERRPFX + 'bond line has too few components: ' + line;\n            let idx = parseInt(bits[0], 0);\n            if (idx < 1 || idx > numBonds)\n                throw ERRPFX + 'invalid bond index: ' + bits[0];\n            if (bondBits[idx - 1] != null)\n                throw ERRPFX + 'duplicate bond index: ' + idx;\n            bondBits[idx - 1] = bits;\n        }\n        for (let a = 1; a <= numAtoms; a++) {\n            let bits = atomBits[a - 1];\n            if (bits == null)\n                throw ERRPFX + 'atom definition missing for #' + a;\n            let type = bits[1];\n            if (type.length > 2 && type.startsWith('\"') && type.endsWith('\"'))\n                type = type.substring(1, type.length - 1);\n            let x = parseFloat(bits[2]), y = parseFloat(bits[3]), z = parseFloat(bits[4]);\n            let map = parseInt(bits[5]);\n            this.mol.addAtom(type, x, y);\n            if (z != 0) {\n                this.mol.setAtomZ(a, z);\n                this.mol.setIs3D(true);\n            }\n            this.mol.setAtomMapNum(a, map);\n            this.parseQueryAtomList(this.mol, a);\n            for (let i = 6; i < bits.length; i++) {\n                let eq = bits[i].indexOf('=');\n                if (eq < 0)\n                    continue;\n                let key = bits[i].substring(0, eq), val = bits[i].substring(eq + 1);\n                if (key == 'CHG')\n                    this.mol.setAtomCharge(a, parseInt(val));\n                else if (key == 'RAD') {\n                    let spin = parseInt(val);\n                    if (spin == 1 || spin == 3)\n                        this.mol.setAtomUnpaired(a, 2);\n                    else if (spin == 2)\n                        this.mol.setAtomUnpaired(a, 1);\n                }\n                else if (key == 'MASS')\n                    this.mol.setAtomIsotope(a, parseInt(val));\n                else if (key == 'CFG') {\n                    let stereo = parseInt(val);\n                    if (stereo > 0 && this.keepParity) {\n                    }\n                }\n                else if (key == 'VAL')\n                    ForeignMolecule.markExplicitValence(this.mol, a, parseInt(val));\n                else if (key == 'CLASS') {\n                    this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRClass + ':' + val);\n                }\n                else if (key == 'SEQID') {\n                    this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRSeqID + ':' + val);\n                }\n                else if (key == 'ATTCHORD') {\n                    let attch = this.unpackStrings(val);\n                    if (attch != null)\n                        this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRAttchOrd + ':' + attch.join(','));\n                }\n                else if (key == 'HCOUNT') {\n                    let hyd = parseInt(val);\n                    if (hyd != 0)\n                        QueryUtil.setQueryAtomHydrogens(this.mol, a, [Math.max(hyd, 0)]);\n                }\n                else if (key == 'RBCNT') {\n                    let rbc = parseInt(val);\n                    if (rbc == -2)\n                        asdrawnRBC.push(a);\n                    else if (rbc != 0)\n                        QueryUtil.setQueryAtomRingBonds(this.mol, a, [Math.max(rbc, 0)]);\n                }\n                else if (key == 'SUBST') {\n                    let sub = parseInt(val);\n                    if (sub == -2)\n                        asdrawnSUB.push(a);\n                    else if (sub != 0)\n                        QueryUtil.setQueryAtomAdjacency(this.mol, a, [Math.max(sub, 0)]);\n                }\n                else if (key == 'UNSAT') {\n                    let uns = parseInt(val);\n                    if (uns == 1)\n                        QueryUtil.setQueryAtomUnsaturated(this.mol, a, true);\n                }\n            }\n        }\n        for (let b = 1; b <= numBonds; b++) {\n            let bits = bondBits[b - 1];\n            if (bits == null)\n                throw ERRPFX + 'bond definition missing for #' + b;\n            let type = parseInt(bits[1]), bfr = parseInt(bits[2]), bto = parseInt(bits[3]);\n            let order = type >= 1 && type <= 3 ? type : type == 9 || type == 10 ? 0 : 1;\n            this.mol.addBond(bfr, bto, order);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroDative);\n            if (type == 10)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroHydrogen);\n            if (this.keepQuery) {\n                if (type == 4)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1]);\n                else if (type == 5)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [1, 2]);\n                else if (type == 6)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 1]);\n                else if (type == 7)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 2]);\n                else if (type == 8)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 0, 1, 2, 3]);\n            }\n            else {\n                if (type == 4) {\n                    if (this.keepAromatic)\n                        this.mol.setBondTransient(b, Vec.append(this.mol.bondTransient(b), ForeignMoleculeTransient.BondAromatic));\n                    else {\n                        if (this.resBonds == null)\n                            this.resBonds = Vec.booleanArray(false, numBonds);\n                        this.resBonds[b - 1] = true;\n                    }\n                }\n            }\n            let endpts = null;\n            let attach = null;\n            for (let i = 4; i < bits.length; i++) {\n                let eq = bits[i].indexOf('=');\n                if (eq < 0)\n                    continue;\n                let key = bits[i].substring(0, eq), val = bits[i].substring(eq + 1);\n                if (key == 'CFG') {\n                    let dir = parseInt(val);\n                    this.mol.setBondType(b, dir == 1 ? Molecule.BONDTYPE_INCLINED :\n                        dir == 2 ? Molecule.BONDTYPE_UNKNOWN :\n                            dir == 3 ? Molecule.BONDTYPE_DECLINED : Molecule.BONDTYPE_NORMAL);\n                }\n                else if (key == 'DISP') {\n                    if (val == 'COORD')\n                        this.mol.setBondOrder(b, 0);\n                }\n                else if (key == 'ENDPTS')\n                    endpts = this.unpackList(val);\n                else if (key == 'ATTACH')\n                    attach = val;\n            }\n            if (attach != null && endpts != null) {\n                if (attach == 'ALL')\n                    this.groupAttachAll.set(b, endpts);\n                else if (attach == 'ANY')\n                    this.groupAttachAny.set(b, endpts);\n            }\n        }\n        for (let atom of asdrawnRBC)\n            QueryUtil.setQueryAtomRingBonds(this.mol, atom, [this.countRingBonds(atom)]);\n        for (let atom of asdrawnSUB)\n            QueryUtil.setQueryAtomAdjacency(this.mol, atom, [this.countSubstitutions(atom)]);\n        this.postFix();\n        for (let n = 0; n < lineColl.length; n++) {\n            let line = lineColl[n];\n            while (n < lineColl.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineColl[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits[0].startsWith('MDLV30/STEABS')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoAbsolute = this.unpackList(bits[1].substring(5));\n            }\n            else if (bits[0].startsWith('MDLV30/STERAC')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoRacemic.push(this.unpackList(bits[1].substring(6)));\n            }\n            else if (bits[0].startsWith('MDLV30/STEREL')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoRelative.push(this.unpackList(bits[1].substring(6)));\n            }\n        }\n        let stereoGroup = new StereoGroup(this.mol);\n        for (let atoms of this.groupStereoRacemic)\n            stereoGroup.createRacemic(atoms);\n        for (let atoms of this.groupStereoRelative)\n            stereoGroup.createRelative(atoms);\n        stereoGroup.rewriteMolecule();\n        let superatoms = new Map();\n        for (let n = 0; n < lineSgroup.length; n++) {\n            let line = lineSgroup[n];\n            while (n < lineSgroup.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineSgroup[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            let idx = parseInt(bits[0]);\n            if (bits.length > 3 && idx > 0 && bits[1] == 'SUP') {\n                let sup = { atoms: [], name: null };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        sup.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('LABEL='))\n                        sup.name = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('XBONDS='))\n                        sup.bonds = this.unpackList(bits[i].substring(7));\n                    else if (bits[i].startsWith('CLASS='))\n                        sup.templateClass = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('NATREPLACE='))\n                        sup.natReplace = this.withoutQuotes(bits[i].substring(11));\n                    else if (bits[i].startsWith('SAP=')) {\n                        const pts = this.unpackStrings(bits[i].substring(4));\n                        sup.attachPoints = [...((_a = sup.attachPoints) !== null && _a !== void 0 ? _a : []), ...pts];\n                    }\n                }\n                superatoms.set(idx, sup);\n            }\n            else if (bits.length > 3 && idx > 0 && (bits[1] == 'MIX' || bits[1] == 'FOR') && parseInt(bits[2]) == idx) {\n                let mix = { index: idx, parent: 0, atoms: null, type: bits[1] };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        mix.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('PARENT='))\n                        mix.parent = parseInt(bits[i].substring(7));\n                }\n                this.groupMixtures.push(mix);\n            }\n            else if (bits.length > 3 && idx > 0 && (bits[1] == 'SRU' || bits[1] == 'COP' || bits[1] == 'MUL' || bits[1] == 'DAT')) {\n                let sup = { atoms: [], name: null, bracketType: bits[1] };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        sup.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('BONDS='))\n                        sup.bonds = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('LABEL='))\n                        sup.name = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('CONNECT='))\n                        sup.connectType = bits[i].substring(8);\n                    else if (bits[i].startsWith('XBCORR='))\n                        sup.bondConn = this.unpackList(bits[i].substring(7));\n                    else if (bits[i].startsWith('MULT='))\n                        sup.name = this.withoutQuotes(bits[i].substring(5));\n                    else if (bits[i].startsWith('FIELDNAME='))\n                        sup.name = this.withoutQuotes(bits[i].substring(10));\n                    else if (bits[i].startsWith('FIELDDATA='))\n                        sup.value = this.withoutQuotes(bits[i].substring(10));\n                }\n                superatoms.set(idx, sup);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            if (value.bracketType) {\n                superatoms.delete(key);\n                this.applyPolymerBlock(value);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            superatoms.delete(key);\n            this.applySuperAtom(value, Array.from(superatoms.values()));\n        }\n        if (templateBlocks.length > 0) {\n            this.scsrTemplates = templateBlocks.map((lines) => this.parseV3000Template(lines));\n        }\n    }\n    parseQueryAtomList(mol, atom) {\n        let label = mol.atomElement(atom);\n        let not = false;\n        if (label.startsWith('NOT ')) {\n            label = label.substring(4);\n            not = true;\n        }\n        if (label.length < 2 || !label.startsWith('[') || !label.endsWith(']'))\n            return;\n        label = label.substring(1, label.length - 1);\n        let elements = label.split(',');\n        mol.setAtomElement(atom, '*');\n        if (!not)\n            QueryUtil.setQueryAtomElements(mol, atom, elements);\n        else\n            QueryUtil.setQueryAtomElementsNot(mol, atom, elements);\n    }\n    applySuperAtom(sup, residual) {\n        if (sup.name == null || Vec.isBlank(sup.atoms))\n            return;\n        let mask = Vec.booleanArray(true, this.mol.numAtoms);\n        for (let a of sup.atoms)\n            mask[a - 1] = false;\n        let name = sup.name;\n        let i;\n        while ((i = name.indexOf('\\\\S')) >= 0)\n            name = name.substring(0, i) + '{^' + name.substring(i + 2);\n        while ((i = name.indexOf('\\\\s')) >= 0)\n            name = name.substring(0, i) + '{' + name.substring(i + 2);\n        while ((i = name.indexOf('\\\\n')) >= 0)\n            name = name.substring(0, i) + '}' + name.substring(i + 2);\n        let [mod, abvAtom] = !sup.templateClass ? MolUtil.convertToAbbrevIndex(this.mol, mask, name) : [null, null];\n        if (mod == null) {\n            let keyval = {};\n            if (sup.bonds)\n                keyval['bonds'] = sup.bonds.join(' ');\n            if (sup.templateClass)\n                keyval['templateClass'] = sup.templateClass;\n            if (sup.natReplace)\n                keyval['natReplace'] = sup.natReplace;\n            if (sup.attachPoints)\n                keyval['attachPoints'] = sup.attachPoints.join(' ');\n            ForeignMolecule.markSgroupMultiAttach(this.mol, name, sup.atoms, keyval);\n            return;\n        }\n        this.mol = mod;\n        let map = Vec.maskMap(mask);\n        for (let res of residual) {\n            let subsumed = false;\n            for (let n = res.atoms.length - 1; n >= 0; n--) {\n                let atom = map[res.atoms[n] - 1] + 1;\n                if (atom == 0) {\n                    res.atoms = Vec.remove(res.atoms, n);\n                    subsumed = true;\n                }\n                else\n                    res.atoms[n] = atom;\n            }\n            if (subsumed)\n                res.atoms = Vec.sorted(Vec.append(res.atoms, abvAtom));\n        }\n    }\n    applyPolymerBlock(sup) {\n        if (sup.bracketType == 'MUL') {\n            let mult = parseInt(sup.name);\n            ForeignMolecule.markSgroupMultiRepeat(this.mol, mult, sup.atoms);\n            return;\n        }\n        if (sup.bracketType == 'DAT') {\n            if (sup.atoms != null)\n                ForeignMolecule.markSgroupData(this.mol, sup.name, sup.value, sup.unit, sup.query, sup.atoms);\n            return;\n        }\n        let poly = new PolymerBlock(this.mol);\n        let connect = null;\n        if (sup.connectType == null) { }\n        else if (sup.connectType == 'HT')\n            connect = PolymerBlockConnectivity.HeadToTail;\n        else if (sup.connectType == 'HH')\n            connect = PolymerBlockConnectivity.HeadToHead;\n        else if (sup.connectType == 'EU')\n            connect = PolymerBlockConnectivity.Random;\n        else\n            return;\n        let bondConn = null;\n        if (Vec.len(sup.bondConn) == 3) {\n            let b1 = sup.bondConn[0], b2 = sup.bondConn[2], b3 = sup.bondConn[1], b4 = 0;\n            for (let n = 1; n <= this.mol.numBonds; n++)\n                if (n != b1 && n != b2 && n != b3) {\n                    let in1 = sup.atoms.indexOf(this.mol.bondFrom(n)) >= 0, in2 = sup.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n                    if ((in1 && !in2) || (!in1 && in2)) {\n                        if (b4 > 0) {\n                            b4 = 0;\n                            break;\n                        }\n                        b4 = n;\n                    }\n                }\n            bondConn = [b1, b2, b3, b4];\n        }\n        else if (Vec.len(sup.bondConn) == 4) {\n            bondConn = sup.bondConn;\n        }\n        let unit = new PolymerBlockUnit(sup.atoms);\n        unit.connect = connect;\n        unit.bondConn = bondConn;\n        poly.createUnit(unit);\n    }\n    parseV3000Template(lines) {\n        let header = lines[0];\n        let bits = this.splitWithQuotes(header.substring('M  V30 TEMPLATE '.length));\n        let name = bits[1], natReplace = null;\n        for (let n = 2; n < bits.length; n++) {\n            if (bits[n].startsWith('NATREPLACE='))\n                natReplace = bits[n].substring(11);\n        }\n        lines[0] = '  0  0  0  0  0  0  0  0  0  0  0 V3000';\n        lines.push('M  END');\n        let mdl = new MDLMOLReader(lines.join('\\n'));\n        mdl.parseHeader = false;\n        mdl.parse();\n        return { name, natReplace, mol: mdl.mol };\n    }\n    withoutQuotes(str) {\n        if (str.length >= 2 && str.startsWith('\"') && str.endsWith('\"'))\n            return str.substring(1, str.length - 1);\n        return str;\n    }\n    splitWithQuotes(line) {\n        let segments = [];\n        let seg = '';\n        let depth = 0, quote = false;\n        for (let n = 0; n < line.length; n++) {\n            let ch = line.charAt(n);\n            if (ch == ' ' && depth == 0 && !quote) {\n                if (seg.length > 0)\n                    segments.push(seg);\n                seg = '';\n            }\n            else {\n                seg += ch;\n                if (ch == '\"')\n                    quote = !quote;\n                else if (ch == '(' || ch == '[')\n                    depth++;\n                else if (ch == ')' || ch == ']')\n                    depth--;\n            }\n        }\n        if (seg.length > 0)\n            segments.push(seg);\n        return segments;\n    }\n    unpackList(str) {\n        if (!str.startsWith('(') || !str.endsWith(')'))\n            return null;\n        str = str.substring(1, str.length - 1);\n        let values = [];\n        for (let bit of str.split(' '))\n            values.push(parseInt(bit));\n        if (values[0] != values.length - 1)\n            return null;\n        return Vec.remove(values, 0);\n    }\n    unpackStrings(str) {\n        if (!str.startsWith('(') || !str.endsWith(')'))\n            return null;\n        str = str.substring(1, str.length - 1);\n        let values = str.split(' ');\n        if (parseInt(values[0]) != values.length - 1)\n            return null;\n        return Vec.remove(values, 0);\n    }\n    countRingBonds(atom) {\n        let count = 0;\n        for (let b of this.mol.atomAdjBonds(atom))\n            if (this.mol.bondInRing(b))\n                count++;\n        return count;\n    }\n    countSubstitutions(atom) {\n        let count = 0;\n        for (let adj of this.mol.atomAdjList(atom))\n            if (this.mol.atomElement(adj) != 'H')\n                count++;\n        return count;\n    }\n}\nexport class MDLSDFReader {\n    constructor(strData) {\n        this.ds = new DataSheet();\n        this.upcastColumns = true;\n        this.pos = 0;\n        this.lines = strData.split(/\\r?\\n/);\n    }\n    parse() {\n        this.parseStream();\n        if (this.upcastColumns)\n            this.upcastStringColumns();\n        return this.ds;\n    }\n    parseStream() {\n        let ds = this.ds;\n        ds.appendColumn('Molecule', \"molecule\", 'Molecular structure');\n        let colName = -1;\n        let entry = [];\n        while (this.pos < this.lines.length) {\n            let line = this.lines[this.pos++];\n            if (!line.startsWith('$$$$')) {\n                entry.push(line);\n                continue;\n            }\n            let rn = ds.appendRow();\n            let molstr = '';\n            let pos = 0;\n            while (pos < entry.length) {\n                line = entry[pos];\n                if (line.startsWith('> '))\n                    break;\n                molstr += line + '\\n';\n                pos++;\n                if (line.startsWith('M\tEND'))\n                    break;\n            }\n            let mol = null, name = null;\n            try {\n                if (molstr.length > 0) {\n                    let mdl = new MDLMOLReader(molstr);\n                    mdl.parse();\n                    mol = mdl.mol;\n                    name = mdl.molName;\n                }\n            }\n            catch (ex) {\n            }\n            if (mol != null)\n                ds.setMolecule(rn, 0, mol);\n            if (name) {\n                if (colName < 0)\n                    colName = ds.appendColumn('Name', \"string\", 'Molecule name');\n                ds.setString(rn, colName, name);\n            }\n            if (rn == 0 && mol != null) {\n                let str1 = entry[0], str3 = entry[2];\n                if (str1.length >= 7 && str1.startsWith('$name=')) {\n                    ds.changeColumnName(0, str1.substring(6), ds.colDescr(0));\n                }\n                if (str3.length >= 8 && str3.startsWith('$title=')) {\n                    ds.title = str3.substring(7);\n                }\n            }\n            for (; pos + 1 < entry.length; pos += 3) {\n                let key = entry[pos], val = entry[pos + 1];\n                if (!key.startsWith('>'))\n                    continue;\n                let z = key.indexOf('<');\n                if (z < 0)\n                    continue;\n                key = key.substring(z + 1);\n                z = key.indexOf('>');\n                if (z < 0)\n                    continue;\n                key = key.substring(0, z);\n                if (key.length == 0)\n                    continue;\n                while (pos + 2 < entry.length && entry[pos + 2].length > 0) {\n                    val += '\\n' + entry[pos + 2];\n                    pos++;\n                }\n                let cn = ds.findColByName(key);\n                if (cn < 0)\n                    cn = ds.appendColumn(key, \"string\", '');\n                if (val.length == 0)\n                    ds.setToNull(rn, cn);\n                else\n                    ds.setString(rn, cn, val);\n            }\n            entry = [];\n        }\n        if (ds.numRows == 0)\n            this.ds = null;\n    }\n    upcastStringColumns() {\n        let ds = this.ds;\n        for (let i = 0; i < ds.numCols; i++)\n            if (ds.colType(i) == \"string\") {\n                let allnull = true, allreal = true, allint = true, allbool = true;\n                for (let j = 0; j < ds.numRows; j++) {\n                    if (!allreal && !allint && !allbool)\n                        break;\n                    if (ds.isNull(j, i))\n                        continue;\n                    allnull = false;\n                    let val = ds.getString(j, i);\n                    if (allbool) {\n                        let lc = val.toLowerCase();\n                        if (lc != 'true' && lc != 'false')\n                            allbool = false;\n                    }\n                    if (allint) {\n                        let int = parseInt(val);\n                        if (!isFinite(int) || int != parseFloat(val))\n                            allint = false;\n                    }\n                    if (allreal) {\n                        if (!isFinite(parseFloat(val)))\n                            allreal = false;\n                    }\n                }\n                if (allnull) { }\n                else if (allint)\n                    ds.changeColumnType(i, \"integer\");\n                else if (allreal)\n                    ds.changeColumnType(i, \"real\");\n                else if (allbool)\n                    ds.changeColumnType(i, \"boolean\");\n            }\n    }\n}\n//# sourceMappingURL=MDLReader.js.map","import { Vec } from '../util/Vec';\nimport { BondArtifact } from '../mol/BondArtifact';\nimport { ForeignMolecule, ForeignMoleculeTransient } from '../mol/ForeignMolecule';\nimport { MDLMOL_VALENCE } from './MDLReader';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity } from '../mol/PolymerBlock';\nimport { QueryUtil } from '../mol/QueryUtil';\nimport { StereoGroup } from '../mol/StereoGroup';\nconst VPFX = 'M  V30 ';\nexport class MDLMOLWriter {\n    constructor(mol) {\n        this.mol = mol;\n        this.includeHeader = true;\n        this.includeCounts = true;\n        this.includeEnd = true;\n        this.overallStereoAbsolute = true;\n        this.enhancedFields = false;\n        this.chargeSeparate = false;\n        this.abbrevSgroups = true;\n        this.polymerBlocks = true;\n        this.molName = '';\n        this.scsrTemplates = null;\n        this.sgroups = [];\n        this.lines = [];\n    }\n    write() {\n        if (this.includeHeader) {\n            this.lines.push(this.molName);\n            this.lines.push('Generated by WebMolKit');\n            this.lines.push('');\n        }\n        this.writeCTAB();\n        return this.lines.join('\\n');\n    }\n    writeV3000() {\n        if (this.includeHeader) {\n            this.lines.push(this.molName);\n            this.lines.push('Generated by WebMolKit');\n            this.lines.push('');\n        }\n        this.writeCTAB3000();\n        return this.lines.join('\\n');\n    }\n    writeEither() {\n        let triggered = StereoGroup.hasStereoGroups(this.mol) || this.mol.numAtoms >= 1000 || this.mol.numBonds >= 1000 || Vec.notBlank(this.scsrTemplates);\n        if (!triggered)\n            for (let n = 1; n <= this.mol.numBonds; n++)\n                if (this.mol.bondOrder(n) == 0 && QueryUtil.queryBondOrders(this.mol, n) == null) {\n                    triggered = true;\n                    break;\n                }\n        if (triggered)\n            return this.writeV3000();\n        else\n            return this.write();\n    }\n    getResult() {\n        return this.lines.join('\\n');\n    }\n    writeCTAB() {\n        var _a;\n        let mol = this.mol = this.mol.clone();\n        mol.keepTransient = true;\n        if (MolUtil.hasAnyAbbrev(mol) || ForeignMolecule.hasAnySgroupMultiAttach(mol) || ForeignMolecule.hasAnySgroupMultiRepeat(mol) || ForeignMolecule.hasAnySgroupData(mol)) {\n            if (this.abbrevSgroups)\n                this.partialAbbrevExpansion();\n            else\n                MolUtil.expandAbbrevs(mol, true);\n            this.prepareSgroups();\n        }\n        let atomList1 = [], atomList2 = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let elements = null;\n            let logic = 'F';\n            elements = QueryUtil.queryAtomElements(mol, n);\n            if (elements == null) {\n                elements = QueryUtil.queryAtomElementsNot(mol, n);\n                logic = 'T';\n            }\n            if (elements == null)\n                continue;\n            mol.setAtomElement(n, 'L');\n            let line = this.intrpad(n, 3) + ' ' + logic + '  ' + this.intrpad(elements.length, 3);\n            for (let el of elements)\n                line += this.intrpad(Molecule.elementAtomicNumber(el), 4);\n            atomList1.push(line);\n            line = 'M  ALS ' + this.intrpad(n, 3) + this.intrpad(elements.length, 3) + ' ' + logic + ' ';\n            for (let el of elements)\n                line += this.pad(el, 4);\n            atomList2.push(line);\n        }\n        this.lines.push(this.intrpad(mol.numAtoms, 3) + this.intrpad(mol.numBonds, 3) + this.intrpad(atomList1.length, 3) +\n            '  0' + (this.overallStereoAbsolute ? '  1' : '  0') + '  0  0  0  0  0999 V2000');\n        let chgidx = [], chgval = [];\n        let radidx = [], radval = [];\n        let isoidx = [], isoval = [];\n        let rgpidx = [], rgpval = [];\n        let hydidx = [], hydval = [];\n        let zchidx = [], zchval = [];\n        let zboidx = [], zboval = [];\n        let rbcidx = [], rbcval = [];\n        let subidx = [], subval = [];\n        let unsidx = [], unsval = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n), y = mol.atomY(n);\n            let z = mol.is3D() ? mol.atomZ(n) : 0;\n            let line = this.rpad(x.toFixed(4), 10) + this.rpad(y.toFixed(4), 10) + this.rpad(z.toFixed(4), 10);\n            let el = mol.atomElement(n);\n            let str = el;\n            if (str.length > 3)\n                str = str.substring(0, 3);\n            if (str.length > 1 && str.charAt(0) == 'R' && str.charAt(1) >= '0' && str.charAt(1) <= '9') {\n                rgpidx.push(n);\n                rgpval.push(parseInt(str.substring(1)));\n                str = 'R#';\n            }\n            while (str.length < 4)\n                str += ' ';\n            line += ' ' + str + '0';\n            let chg = mol.atomCharge(n), rad = mol.atomUnpaired(n), mapnum = mol.atomMapNum(n);\n            if (chg >= -3 && chg <= -1)\n                chg = 4 - chg;\n            else if (chg == 0 && rad == 2)\n                chg = 4;\n            else if (chg >= 1 && chg <= 3)\n                chg = 4 - chg;\n            else\n                chg = 0;\n            let qhyd = QueryUtil.queryAtomHydrogens(mol, n);\n            let hyd = 0;\n            if (Vec.len(qhyd) == 1)\n                hyd = qhyd[0] + 1;\n            let val = this.mdlValence(mol, n, 15);\n            line += this.intrpad(chg, 3) + '  0' + this.intrpad(hyd, 3) + '  0' + this.intrpad(val, 3) + '  0  0  0' + this.intrpad(mapnum, 3) + '  0  0';\n            this.lines.push(line);\n            if (mol.atomCharge(n) != 0) {\n                chgidx.push(n);\n                chgval.push(mol.atomCharge(n));\n            }\n            if (this.enhancedFields) {\n                if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN) {\n                    hydidx.push(n);\n                    hydval.push(mol.atomHExplicit(n));\n                }\n            }\n            if (rad == 1) {\n                radidx.push(n);\n                radval.push(2);\n            }\n            if (rad == 2) {\n                radidx.push(n);\n                radval.push(1);\n            }\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) {\n                isoidx.push(n);\n                isoval.push(mol.atomIsotope(n));\n            }\n            let qrbc = QueryUtil.queryAtomRingBonds(mol, n), qsub = QueryUtil.queryAtomAdjacency(mol, n);\n            let quns = QueryUtil.queryAtomUnsaturated(mol, n);\n            if (Vec.len(qrbc) == 1) {\n                rbcidx.push(n);\n                rbcval.push(qrbc[0] == 0 ? -1 : qrbc[0]);\n            }\n            if (Vec.len(qsub) == 1) {\n                subidx.push(n);\n                subval.push(qsub[0] == 0 ? -1 : qsub[0]);\n            }\n            if (quns == true) {\n                unsidx.push(n);\n                unsval.push(1);\n            }\n        }\n        let maskArom = ForeignMolecule.noteAromaticBonds(mol);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let order = mol.bondOrder(n), type = order;\n            let qbond = Vec.sorted((_a = QueryUtil.queryBondOrders(mol, n)) !== null && _a !== void 0 ? _a : []);\n            if (maskArom[n - 1] || Vec.equals(qbond, [-1]))\n                type = 4;\n            else if (Vec.equals(qbond, [1, 2]))\n                type = 5;\n            else if (Vec.equals(qbond, [-1, 1]))\n                type = 6;\n            else if (Vec.equals(qbond, [-1, 2]))\n                type = 7;\n            else if (Vec.equals(qbond, [-1, 0, 1, 2, 3]))\n                type = 8;\n            else if (type > 3)\n                type = 3;\n            let stereo = mol.bondType(n);\n            if (stereo == Molecule.BONDTYPE_NORMAL) { }\n            else if (stereo == Molecule.BONDTYPE_INCLINED) {\n                stereo = 1;\n            }\n            else if (stereo == Molecule.BONDTYPE_DECLINED) {\n                stereo = 6;\n            }\n            else if (stereo == Molecule.BONDTYPE_UNKNOWN) {\n                if (type == 1)\n                    stereo = 4;\n                else\n                    stereo = 3;\n            }\n            else\n                stereo = 0;\n            let line = this.intrpad(mol.bondFrom(n), 3) + this.intrpad(mol.bondTo(n), 3) +\n                this.intrpad(type, 3) + this.intrpad(stereo, 3) + '  0  0  0';\n            this.lines.push(line);\n            if (this.enhancedFields) {\n                if ((order < 1 || order > 3) || type != order && Vec.isBlank(qbond)) {\n                    zboidx.push(n);\n                    zboval.push(order);\n                }\n            }\n        }\n        this.lines.push(...atomList1);\n        this.lines.push(...atomList2);\n        this.writeMBlockPair('CHG', chgidx, chgval);\n        this.writeMBlockPair('RAD', radidx, radval);\n        this.writeMBlockPair('ISO', isoidx, isoval);\n        this.writeMBlockPair('RGP', rgpidx, rgpval);\n        this.writeMBlockPair('HYD', hydidx, hydval);\n        this.writeMBlockPair('ZCH', zchidx, zchval);\n        this.writeMBlockPair('ZBO', zboidx, zboval);\n        this.writeMBlockPair('RBC', rbcidx, rbcval);\n        this.writeMBlockPair('SUB', subidx, subval);\n        this.writeMBlockPair('UNS', unsidx, unsval);\n        if (this.enhancedFields) {\n            let artifacts = new BondArtifact(this.mol);\n            let idx = 0;\n            for (let path of artifacts.getResPaths())\n                this.writeMBlockFlat('ZPA', ++idx, path.atoms);\n            for (let ring of artifacts.getResRings())\n                this.writeMBlockFlat('ZRI', ++idx, ring.atoms);\n            for (let arene of artifacts.getArenes())\n                this.writeMBlockFlat('ZAR', ++idx, Vec.prepend(arene.atoms, arene.centre));\n        }\n        let inSgroup = Vec.booleanArray(false, mol.numAtoms);\n        for (let s = 0; s < this.sgroups.length; s++) {\n            let sg = this.sgroups[s];\n            for (let n of sg.atoms)\n                inSgroup[n - 1] = true;\n            let sidx = this.intrpad(s + 1, 4);\n            this.lines.push('M  STY  1' + sidx + ' ' + sg.type);\n            for (let n = 0; n < sg.atoms.length; n += 15) {\n                let sz = Math.min(sg.atoms.length - n, 15);\n                let line = 'M  SAL' + sidx + this.intrpad(sz, 3);\n                for (let i = 0; i < sz; i++)\n                    line += this.intrpad(sg.atoms[n + i], 4);\n                this.lines.push(line);\n            }\n            if (sg.type != 'DAT')\n                this.lines.push('M  SMT' + sidx + ' ' + sg.name);\n            if (sg.type == 'MUL') {\n                let mult = parseInt(sg.name), unit = sg.atoms.length / mult;\n                for (let n = 0; n < unit; n += 15) {\n                    let sz = Math.min(unit - n, 15);\n                    let line = 'M  SPA' + sidx + this.intrpad(sz, 3);\n                    for (let i = 0; i < sz; i++)\n                        line += this.intrpad(sg.atoms[n + i], 4);\n                    this.lines.push(line);\n                }\n                if (sg.parent > 0)\n                    this.lines.push('M  SPL    1' + sidx + this.intrpad(sg.parent, 4));\n            }\n            if (sg.type == 'DAT') {\n                this.lines.push('M  SDT' + sidx + ' ' + this.pad(sg.name, 32) + this.pad(sg.unit, 20) + sg.query);\n                this.lines.push('M  SED' + sidx + ' ' + sg.value);\n            }\n        }\n        if (this.polymerBlocks)\n            this.encodePolymerBlocks(this.sgroups.length);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomElement(n).length > 2) {\n                this.lines.push('A  ' + this.intrpad(n, 3));\n                this.lines.push(mol.atomElement(n));\n            }\n        if (this.includeEnd)\n            this.lines.push('M  END');\n    }\n    writeMBlockPair(token, idx, val) {\n        const sz = idx.length;\n        for (let i = 0; i < sz; i += 8) {\n            let count = Math.min(8, sz - i);\n            let line = 'M  ' + token + this.intrpad(count, 3);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(idx[i + j], 4) + this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    writeMBlockFlat(token, idx, val) {\n        const sz = val.length;\n        for (let i = 0; i < sz; i += 15) {\n            let count = Math.min(15, sz - i);\n            let line = 'M  ' + token + this.intrpad(count, 3) + this.intrpad(idx, 4);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    writeMBlockFlatIdxFirst(token, idx, val) {\n        const sz = val.length;\n        for (let i = 0; i < sz; i += 15) {\n            let count = Math.min(15, sz - i);\n            let line = 'M  ' + token + this.intrpad(idx, 4) + this.intrpad(count, 3);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    intrpad(num, sz) {\n        return this.rpad(num.toString(), sz);\n    }\n    rpad(str, sz) {\n        while (str.length < sz)\n            str = ' ' + str;\n        return str;\n    }\n    pad(str, sz) {\n        while (str.length < sz)\n            str += ' ';\n        return str;\n    }\n    mdlValence(mol, atom, zeroVal) {\n        let marked = ForeignMolecule.noteExplicitValence(mol, atom);\n        if (marked != null)\n            return marked > 0 ? marked : zeroVal;\n        let hyd = mol.atomHydrogens(atom), el = mol.atomElement(atom);\n        let options = MDLMOL_VALENCE[el];\n        if (options == null && hyd == 0)\n            return 0;\n        let chg = mol.atomCharge(atom);\n        let chgmod = (el == 'C' || el == 'H') ? Math.abs(chg) : el == 'B' ? -Math.abs(chg) : -chg;\n        let bondSum = 0;\n        for (let b of mol.atomAdjBonds(atom))\n            bondSum += mol.bondOrder(b);\n        let nativeVal = chgmod + hyd + bondSum;\n        if (options)\n            for (let optVal of options)\n                if (optVal >= chgmod + bondSum) {\n                    if (optVal == nativeVal)\n                        return 0;\n                    break;\n                }\n        let val = nativeVal - chgmod;\n        return val <= 0 || val > 14 ? zeroVal : val;\n    }\n    partialAbbrevExpansion() {\n        const { mol } = this;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                let frag = MolUtil.getAbbrev(mol, n);\n                if (frag == null || mol.atomAdjCount(n) != 1) {\n                    MolUtil.clearAbbrev(mol, n);\n                    continue;\n                }\n                if (MolUtil.hasAnyAbbrev(frag)) {\n                    MolUtil.expandAbbrevs(frag, true);\n                    MolUtil.setAbbrev(mol, n, frag);\n                }\n                let order = mol.bondOrder(mol.atomAdjBonds(n)[0]);\n                if (frag.atomAdjCount(1) == 1 && order == frag.bondOrder(frag.atomAdjBonds(1)[0]))\n                    continue;\n                MolUtil.expandOneAbbrev(mol, n, true);\n                n--;\n            }\n    }\n    prepareSgroups() {\n        const { mol } = this;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomMapNum(n) < 0)\n                mol.setAtomMapNum(n, 0);\n        let next = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                this.sgroups.push({ type: 'SUP', name: mol.atomElement(n), atoms: null });\n                let mask = MolUtil.expandOneAbbrev(mol, n, true);\n                if (mask == null)\n                    continue;\n                next--;\n                for (let i = 0; i < mask.length; i++)\n                    if (mask[i])\n                        mol.setAtomMapNum(i + 1, next);\n                n--;\n            }\n        for (let idx = -1, p = 0; idx >= next; idx--, p++) {\n            let atoms = [];\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomMapNum(n) == idx) {\n                    atoms.push(n);\n                    mol.setAtomMapNum(n, 0);\n                }\n            this.sgroups[p].atoms = atoms;\n        }\n        for (let ma of ForeignMolecule.noteAllSgroupMultiAttach(mol)) {\n            let sg = { type: 'SUP', name: ma.name, atoms: ma.atoms };\n            let str = ma.keyval['bonds'];\n            if (str)\n                sg.bonds = str.split(' ').map((v) => parseInt(v));\n            sg.templateClass = ma.keyval['templateClass'];\n            sg.natReplace = ma.keyval['natReplace'];\n            str = ma.keyval['attachPoints'];\n            if (str)\n                sg.attachPoints = str.split(' ');\n            this.sgroups.push(sg);\n        }\n        for (let mr of ForeignMolecule.noteAllSgroupMultiRepeat(mol))\n            this.sgroups.push({ type: 'MUL', name: mr.mult.toString(), atoms: mr.atoms });\n        for (let dat of ForeignMolecule.noteAllSgroupData(mol))\n            this.sgroups.push({ type: 'DAT', name: dat.name, value: dat.value, unit: dat.unit, query: dat.query, atoms: dat.atoms });\n        for (let n = 0; n < this.sgroups.length; n++) {\n            let sg = this.sgroups[n];\n            if (sg.type != 'MUL')\n                continue;\n            let bestIdx = -1, bestSize = Number.MAX_SAFE_INTEGER;\n            skip: for (let i = 0; i < this.sgroups.length; i++)\n                if (i != n) {\n                    let look = this.sgroups[i];\n                    if (look.type != 'MUL' || look.atoms.length >= bestSize)\n                        continue;\n                    for (let a of sg.atoms)\n                        if (!look.atoms.includes(a))\n                            continue skip;\n                    bestIdx = i;\n                    bestSize = look.atoms.length;\n                }\n            if (bestIdx >= 0)\n                sg.parent = bestIdx + 1;\n        }\n    }\n    encodePolymerBlocks(idx) {\n        let polymers = new PolymerBlock(this.mol);\n        for (let id of polymers.getIDList()) {\n            let unit = polymers.getUnit(id);\n            let sidx = this.intrpad(++idx, 4);\n            this.lines.push('M  STY  1' + sidx + ' SRU');\n            if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                this.lines.push('M  SCN  1' + sidx + ' HT ');\n            else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                this.lines.push('M  SCN  1' + sidx + ' HH ');\n            else if (unit.connect == PolymerBlockConnectivity.Random)\n                this.lines.push('M  SCN  1' + sidx + ' EU ');\n            this.writeMBlockFlatIdxFirst('SAL', idx, unit.atoms);\n            let bonds = null;\n            for (let n = 1; n <= this.mol.numBonds; n++) {\n                let fl1 = unit.atoms.indexOf(this.mol.bondFrom(n)) >= 0, fl2 = unit.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n                if ((fl1 && !fl2) || (!fl1 && fl2))\n                    bonds = Vec.append(bonds, n);\n            }\n            if (bonds != null)\n                this.writeMBlockFlatIdxFirst('SBL', idx, bonds);\n            if (Vec.len(unit.bondConn) == 4) {\n                let bcrs = [unit.bondConn[0], unit.bondConn[2], unit.bondConn[1]];\n                this.writeMBlockFlatIdxFirst('CRS', idx, bcrs);\n            }\n            this.lines.push('M  SMT' + sidx + ' n');\n        }\n    }\n    writeCTAB3000() {\n        var _a;\n        let mol = this.mol;\n        if (MolUtil.hasAnyAbbrev(mol) || ForeignMolecule.hasAnySgroupMultiAttach(mol) || ForeignMolecule.hasAnySgroupMultiRepeat(mol) || ForeignMolecule.hasAnySgroupData(mol)) {\n            mol = this.mol = mol.clone();\n            mol.keepTransient = true;\n            if (this.abbrevSgroups)\n                this.partialAbbrevExpansion();\n            else\n                MolUtil.expandAbbrevs(mol, true);\n            this.prepareSgroups();\n        }\n        let sgroupText = this.populateV3000Sgroups();\n        if (this.includeCounts)\n            this.lines.push('  0  0  0     0  0            999 V3000');\n        this.lines.push(VPFX + 'BEGIN CTAB');\n        this.lines.push(VPFX + `COUNTS ${mol.numAtoms} ${mol.numBonds} ${sgroupText.length} 0 ${this.overallStereoAbsolute ? 1 : 0}`);\n        this.lines.push(VPFX + 'BEGIN ATOM');\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let label = mol.atomElement(n);\n            let qel = QueryUtil.queryAtomElements(mol, n);\n            if (qel != null)\n                label = '[' + qel.join(',') + ']';\n            else {\n                qel = QueryUtil.queryAtomElementsNot(mol, n);\n                if (qel != null)\n                    label = 'NOT [' + qel.join(',') + ']';\n            }\n            if (label.includes(' '))\n                label = `\"${label}\"`;\n            let x = mol.atomX(n), y = mol.atomY(n);\n            let z = mol.is3D() ? mol.atomZ(n) : 0;\n            let mapnum = mol.atomMapNum(n), chg = mol.atomCharge(n), unp = mol.atomUnpaired(n);\n            let isotope = mol.atomIsotope(n), val = this.mdlValence(mol, n, -1);\n            let line = `${VPFX}${n} ${label} ${x.toFixed(4)} ${y.toFixed(4)} ${z.toFixed(4)} ${mapnum}`;\n            if (chg != 0)\n                line += ' CHG=' + chg;\n            if (unp == 1)\n                line += ' RAD=2';\n            else if (unp == 2)\n                line += ' RAD=1';\n            if (isotope != 0)\n                line += ' MASS=' + isotope;\n            if (val != 0)\n                line += ' VAL=' + val;\n            let qhyd = QueryUtil.queryAtomHydrogens(mol, n), qrbc = QueryUtil.queryAtomRingBonds(mol, n), qsub = QueryUtil.queryAtomAdjacency(mol, n);\n            let quns = QueryUtil.queryAtomUnsaturated(mol, n);\n            if (Vec.len(qhyd) == 1)\n                line += ' HCOUNT=' + (qhyd[0] == 0 ? -1 : qhyd[0]);\n            if (Vec.len(qrbc) == 1)\n                line += ' RBCNT=' + (qrbc[0] == 0 ? -1 : qrbc[0]);\n            if (Vec.len(qsub) == 1)\n                line += ' SUBST=' + (qsub[0] == 0 ? -1 : qsub[0]);\n            if (quns == true)\n                line += ' UNSAT=1';\n            for (let trans of mol.atomTransient(n)) {\n                if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRClass))\n                    line += ' CLASS=' + trans.substring(ForeignMoleculeTransient.AtomSCSRClass.length + 1);\n                else if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRSeqID))\n                    line += ' SEQID=' + trans.substring(ForeignMoleculeTransient.AtomSCSRSeqID.length + 1);\n                else if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRAttchOrd)) {\n                    let bits = trans.substring(ForeignMoleculeTransient.AtomSCSRAttchOrd.length + 1).split(',');\n                    line += ' ATTCHORD=' + this.packV3000Strings(bits);\n                }\n            }\n            this.lines.push(line);\n        }\n        this.lines.push(VPFX + 'END ATOM');\n        if (mol.numBonds > 0) {\n            this.lines.push(VPFX + 'BEGIN BOND');\n            let maskArom = ForeignMolecule.noteAromaticBonds(mol);\n            let maskHBond = ForeignMolecule.noteZeroHydrogenBonds(mol);\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n                let order = mol.bondOrder(n), type = order;\n                let qbond = Vec.sorted((_a = QueryUtil.queryBondOrders(mol, n)) !== null && _a !== void 0 ? _a : []);\n                if (maskArom[n - 1] || Vec.equals(qbond, [-1]))\n                    type = 4;\n                else if (Vec.equals(qbond, [1, 2]))\n                    type = 5;\n                else if (Vec.equals(qbond, [-1, 1]))\n                    type = 6;\n                else if (Vec.equals(qbond, [-1, 2]))\n                    type = 7;\n                else if (Vec.equals(qbond, [-1, 0, 1, 2, 3]))\n                    type = 8;\n                else if (type == 0) {\n                    if (!maskHBond[n - 1])\n                        type = 9;\n                    else\n                        type = 10;\n                }\n                else if (type > 3)\n                    type = 3;\n                let stereo = mol.bondType(n);\n                let line = `${VPFX}${n} ${type} ${bfr} ${bto}`;\n                if (stereo == Molecule.BONDTYPE_INCLINED)\n                    line += ' CFG=1';\n                else if (stereo == Molecule.BONDTYPE_DECLINED)\n                    line += ' CFG=3';\n                else if (stereo == Molecule.BONDTYPE_UNKNOWN)\n                    line += ' CFG=2';\n                if (order == 0 && !maskHBond[n - 1])\n                    line += ' DISP=COORD';\n                this.lines.push(line);\n            }\n            this.lines.push(VPFX + 'END BOND');\n        }\n        if (sgroupText.length > 0) {\n            this.lines.push(VPFX + 'BEGIN SGROUP');\n            this.lines.push(...sgroupText);\n            this.lines.push(VPFX + 'END SGROUP');\n        }\n        let collections = [];\n        let stereoGroup = new StereoGroup(mol);\n        let racidx = 0, relidx = 0;\n        for (let atoms of stereoGroup.getRacemicAtoms())\n            collections.push(VPFX + 'MDLV30/STERAC' + (++racidx) + ' ATOMS=' + this.packV3000List(atoms));\n        for (let atoms of stereoGroup.getRelativeAtoms())\n            collections.push(VPFX + 'MDLV30/STEREL' + (++relidx) + ' ATOMS=' + this.packV3000List(atoms));\n        if (collections.length > 0) {\n            this.lines.push(VPFX + 'BEGIN COLLECTION');\n            this.lines.push(...collections);\n            this.lines.push(VPFX + 'END COLLECTION');\n        }\n        this.lines.push(VPFX + 'END CTAB');\n        if (Vec.notBlank(this.scsrTemplates))\n            this.populateSCSRTemplates();\n        if (this.includeEnd)\n            this.lines.push('M  END');\n    }\n    populateV3000Sgroups() {\n        let mol = this.mol;\n        let lines = [];\n        for (let s = 0; s < this.sgroups.length; s++) {\n            let sg = this.sgroups[s];\n            let sid = lines.length + 1;\n            let txt = `${VPFX}${sid} ${sg.type} 0`;\n            if (sg.type == 'SUP') {\n                txt += ' LABEL=' + (sg.name.includes(' ') ? `\"${sg.name}\"` : sg.name);\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                if (sg.bonds)\n                    txt += ' XBONDS=' + this.packV3000List(sg.bonds);\n                if (sg.templateClass)\n                    txt += ' CLASS=' + sg.templateClass;\n                if (sg.natReplace)\n                    txt += ' NATREPLACE=' + sg.natReplace;\n                if (sg.attachPoints) {\n                    for (let n = 0; n + 2 < sg.attachPoints.length; n += 3) {\n                        let v1 = sg.attachPoints[n], v2 = sg.attachPoints[n + 1], v3 = sg.attachPoints[n + 2];\n                        txt += ` SAP=(3 ${v1} ${v2} ${v3})`;\n                    }\n                }\n            }\n            else if (sg.type == 'MUL') {\n                let mult = parseInt(sg.name), unit = sg.atoms.length / mult;\n                txt += ' MULT=' + sg.name;\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                txt += ' PATOMS=' + this.packV3000List(sg.atoms.slice(0, unit));\n                if (sg.parent > 0)\n                    txt += ' PARENT=' + sg.parent;\n            }\n            else if (sg.type == 'DAT') {\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                txt += ' FIELDNAME=' + (sg.name.includes(' ') ? `\"${sg.name}\"` : sg.name);\n                txt += ' FIELDDATA=' + (sg.value.includes(' ') ? `\"${sg.value}\"` : sg.value);\n            }\n            lines.push(txt);\n        }\n        if (this.polymerBlocks) {\n            let polymers = new PolymerBlock(mol);\n            for (let id of polymers.getIDList()) {\n                let sid = lines.length + 1;\n                let unit = polymers.getUnit(id);\n                let txt = `${VPFX}${sid} SRU 0`;\n                txt += ' ATOMS=' + this.packV3000List(unit.atoms);\n                if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                    txt += ' CONNECT=HT';\n                else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                    txt += ' CONNECT=HH';\n                else if (unit.connect == PolymerBlockConnectivity.Random)\n                    txt += ' CONNECT=EU';\n                let bonds = [];\n                for (let n = 1; n <= mol.numBonds; n++) {\n                    let fl1 = unit.atoms.includes(mol.bondFrom(n)), fl2 = unit.atoms.includes(mol.bondTo(n));\n                    if ((fl1 && !fl2) || (!fl1 && fl2))\n                        bonds.push(n);\n                }\n                if (bonds.length > 0)\n                    txt += ' BONDS=' + this.packV3000List(bonds);\n                if (unit.bondConn != null)\n                    txt += ' XBCORR=' + this.packV3000List(unit.bondConn);\n                lines.push(txt);\n            }\n        }\n        return lines;\n    }\n    populateSCSRTemplates() {\n        this.lines.push(VPFX + 'BEGIN TEMPLATE');\n        for (let n = 0; n < this.scsrTemplates.length; n++) {\n            var defn = this.scsrTemplates[n];\n            let line = VPFX + 'TEMPLATE ' + (n + 1) + ' ' + defn.name;\n            if (defn.natReplace)\n                line += ' NATREPLACE=' + defn.natReplace;\n            this.lines.push(line);\n            var tmdl = new MDLMOLWriter(defn.mol);\n            tmdl.includeHeader = false;\n            tmdl.includeCounts = false;\n            tmdl.includeEnd = false;\n            let molfile = tmdl.writeV3000();\n            for (line of molfile.trimEnd().split('\\n'))\n                this.lines.push(line);\n        }\n        this.lines.push(VPFX + 'END TEMPLATE');\n    }\n    packV3000List(values) {\n        let str = '(' + values.length;\n        for (let v of values)\n            str += ' ' + v;\n        return str + ')';\n    }\n    packV3000Strings(values) {\n        let str = '(' + values.length;\n        for (let v of values)\n            str += ' ' + v;\n        return str + ')';\n    }\n}\nexport class MDLSDFWriter {\n    constructor(ds) {\n        this.ds = ds;\n        this.enhancedFields = true;\n        this.chargeSeparate = false;\n        this.abbrevSgroups = true;\n        this.lines = [];\n    }\n    write() {\n        let ds = this.ds, lines = this.lines;\n        let colMol = this.ds.firstColOfType(\"molecule\");\n        for (let i = 0; i < ds.numRows; i++) {\n            let mol = colMol < 0 ? null : ds.getMolecule(i, colMol);\n            if (mol != null) {\n                let wtr = new MDLMOLWriter(mol);\n                wtr.enhancedFields = this.enhancedFields;\n                wtr.chargeSeparate = this.chargeSeparate;\n                wtr.abbrevSgroups = this.abbrevSgroups;\n                let molstr = wtr.write();\n                lines.push(molstr);\n            }\n            for (let j = 0; j < ds.numCols; j++)\n                if (j != colMol && ds.notNull(i, j)) {\n                    let ct = ds.colType(j);\n                    let val = '';\n                    if (ct == \"string\")\n                        val = ds.getString(i, j);\n                    else if (ct == \"integer\")\n                        val = ds.getInteger(i, j).toString();\n                    else if (ct == \"real\")\n                        val = ds.getReal(i, j).toString();\n                    else if (ct == \"boolean\")\n                        val = ds.getBoolean(i, j) ? 'true' : 'false';\n                    if (val != '') {\n                        lines.push('> <' + ds.colName(j) + '>');\n                        lines.push(val);\n                        lines.push('');\n                    }\n                }\n            lines.push('$$$$');\n        }\n        return lines.join('\\n');\n    }\n    getResult() {\n        return this.lines.join('\\n');\n    }\n}\n//# sourceMappingURL=MDLWriter.js.map","import { MDLMOLReader } from './MDLReader';\nimport { MDLMOLWriter } from './MDLWriter';\nimport { Molecule } from '../mol/Molecule';\nconst ESCAPED_CHARS = '\\n\\t\\\\,=';\nfunction escape(str) {\n    let buff = null;\n    for (let n = 0; n < str.length; n++) {\n        let ch = str.charAt(n);\n        let escape = ESCAPED_CHARS.includes(ch), ctrl = ch.charCodeAt(0) < 32;\n        if (buff == null && (escape || ctrl)) {\n            buff = str.substring(0, n);\n        }\n        if (escape) {\n            if (ch == '\\n')\n                buff += '\\\\n';\n            else if (ch == '\\t')\n                buff += '\\\\t';\n            else\n                buff += '\\\\' + ch;\n        }\n        else if (ctrl) { }\n        else if (buff != null)\n            buff += ch;\n    }\n    return buff !== null && buff !== void 0 ? buff : str;\n}\nfunction writeKeyVals(keyvals) {\n    let str = '';\n    let multiline = [];\n    for (let kv of keyvals) {\n        if (!kv.includes('\\n'))\n            str += ',' + escape(kv);\n        else\n            multiline.push(kv);\n    }\n    str += '\\n';\n    for (let kv of multiline) {\n        let lines = kv.trimEnd().split('\\n');\n        for (let n = 0; n < lines.length; n++) {\n            str += `${n == 0 ? '.' : ':'}${lines[n]}\\n`;\n        }\n    }\n    return str;\n}\nfunction readNextChunk(line, pos, term, mandatory) {\n    let end = pos, sz = line.length;\n    if (pos >= sz) {\n        if (mandatory)\n            throw new Error('Molecule missing line fragment');\n        return null;\n    }\n    let escaped = false;\n    while (end < sz) {\n        let ch = line.charAt(end);\n        if (ch == '\\\\') {\n            if (end == sz - 1)\n                throw new Error('Escape character \\\\ at end of line');\n            escaped = true;\n            end += 2;\n        }\n        else if (ch == term)\n            break;\n        else\n            end++;\n    }\n    if (!escaped)\n        return { str: line.substring(pos, end), pos: end };\n    var str = '';\n    for (let n = pos; n < end; n++) {\n        let ch = line.charAt(n);\n        if (ch == '\\\\') {\n            ch = line.charAt(++n);\n            if (ch == 'n')\n                str += '\\n';\n            else if (ch == 't')\n                str += '\\t';\n            else\n                str += ch;\n        }\n        else\n            str += ch;\n    }\n    return { str, pos: end };\n}\nclass MoleculeStream {\n    static readUnknown(strData) {\n        if (strData.startsWith('\"')) {\n            try {\n                let jsonStr = JSON.parse(strData);\n                let mol = MoleculeStream.readNative(jsonStr);\n                if (mol)\n                    return mol;\n            }\n            catch (ex) { }\n        }\n        let mol = MoleculeStream.readNative(strData);\n        if (mol)\n            return mol;\n        try {\n            mol = MoleculeStream.readMDLMOL(strData);\n        }\n        catch (e) { }\n        return mol;\n    }\n    static readNative(strData) {\n        if (strData.startsWith('SketchEl!'))\n            return this.readNativeLegacy(strData);\n        let mol = new Molecule();\n        mol.keepTransient = true;\n        let lines = strData.split(/\\r?\\n/);\n        let match = lines[0].match(/^Elements\\!\\((\\d+),(\\d+)\\)$/);\n        if (!match)\n            return null;\n        let numAtoms = parseInt(match[1]), numBonds = parseInt(match[2]);\n        if (!(numAtoms >= 0))\n            throw new Error(`Invalid atom count: ${match[1]}`);\n        if (!(numBonds >= 0))\n            throw new Error(`Invalid bond count: ${match[2]}`);\n        const MSG_PREMATURE = 'Molecule atom content ends prematurely';\n        const MSG_UNEXPECTED = 'Molecule unexpected end tag';\n        const parseIntHard = (str) => {\n            let v = parseInt(str);\n            if (Number.isNaN(v))\n                throw new Error(`Malformed integer: ${str}`);\n            return v;\n        };\n        const parseFloatHard = (str) => {\n            let v = parseFloat(str);\n            if (Number.isNaN(v))\n                throw new Error(`Malformed float: ${str}`);\n            return v;\n        };\n        const applyAtomProperty = (atom, str) => {\n            if (!str)\n                return;\n            let pfx = str.charAt(0);\n            if (pfx == 'z')\n                mol.setAtomZ(atom, parseFloatHard(str.substring(1)));\n            else if (pfx == 'c')\n                mol.setAtomCharge(atom, parseIntHard(str.substring(1)));\n            else if (pfx == 'u')\n                mol.setAtomUnpaired(atom, parseIntHard(str.substring(1)));\n            else if (pfx == 'h')\n                mol.setAtomHExplicit(atom, parseIntHard(str.substring(1)));\n            else if (pfx == 'i')\n                mol.setAtomIsotope(atom, parseIntHard(str.substring(1)));\n            else if (pfx == 'm')\n                mol.setAtomMapNum(atom, parseIntHard(str.substring(1)));\n            else if (pfx == 'y')\n                mol.appendAtomTransient(atom, str);\n            else\n                mol.appendAtomExtra(atom, str);\n        };\n        const applyBondProperty = (bond, str) => {\n            if (!str)\n                return;\n            let pfx = str.charAt(0);\n            if (pfx == 'i')\n                mol.setBondType(bond, Molecule.BONDTYPE_INCLINED);\n            else if (pfx == 'd')\n                mol.setBondType(bond, Molecule.BONDTYPE_DECLINED);\n            else if (pfx == 'u')\n                mol.setBondType(bond, Molecule.BONDTYPE_UNKNOWN);\n            else if (pfx == 'y')\n                mol.appendBondTransient(bond, str);\n            else\n                mol.appendBondExtra(bond, str);\n        };\n        let lnum = 1;\n        for (let n = 1; n <= numAtoms; n++) {\n            if (!lines[lnum])\n                throw new Error(MSG_PREMATURE);\n            let chunkEl = readNextChunk(lines[lnum], 0, '=', true);\n            let chunkX = readNextChunk(lines[lnum], chunkEl.pos + 1, ',', true);\n            let chunkY = readNextChunk(lines[lnum], chunkX.pos + 1, ',', true);\n            let x = parseFloatHard(chunkX.str), y = parseFloatHard(chunkY.str);\n            mol.addAtom(chunkEl.str, x, y);\n            let pos = chunkY.pos + 1;\n            while (true) {\n                var chunk = readNextChunk(lines[lnum], pos, ',', false);\n                if (chunk == null)\n                    break;\n                applyAtomProperty(n, chunk.str);\n                pos = chunk.pos + 1;\n            }\n            lnum++;\n            while (true) {\n                if (!lines[lnum])\n                    throw new Error(MSG_PREMATURE);\n                if (lines[lnum] == '!End') {\n                    if (n == numAtoms && numBonds == 0)\n                        break;\n                    throw new Error(MSG_UNEXPECTED);\n                }\n                if (!lines[lnum].startsWith('.'))\n                    break;\n                var buff = lines[lnum].substring(1);\n                while (true) {\n                    lnum++;\n                    if (!lines[lnum])\n                        throw new Error(MSG_PREMATURE);\n                    if (!lines[lnum].startsWith(':'))\n                        break;\n                    buff += '\\n' + lines[lnum].substring(1);\n                }\n                applyAtomProperty(n, buff);\n            }\n        }\n        for (let n = 1; n <= numBonds; n++) {\n            if (!lines[lnum])\n                throw new Error(MSG_PREMATURE);\n            var chunkFrom = readNextChunk(lines[lnum], 0, '-', true);\n            var chunkTo = readNextChunk(lines[lnum], chunkFrom.pos + 1, '=', true);\n            var chunkOrder = readNextChunk(lines[lnum], chunkTo.pos + 1, ',', true);\n            let bfr = parseIntHard(chunkFrom.str), bto = parseIntHard(chunkTo.str), order = parseIntHard(chunkOrder.str);\n            if (bfr < 1 || bfr > numAtoms || bto < 1 || bto > numAtoms || order < 0 || order > 4)\n                throw new Error('Invalid bond specification');\n            mol.addBond(bfr, bto, order);\n            let pos = chunkOrder.pos + 1;\n            while (true) {\n                var chunk = readNextChunk(lines[lnum], pos, ',', false);\n                if (chunk == null)\n                    break;\n                applyBondProperty(n, chunk.str);\n                pos = chunk.pos + 1;\n            }\n            lnum++;\n            while (true) {\n                if (!lines[lnum])\n                    throw new Error(MSG_PREMATURE);\n                if (lines[lnum] == '!End') {\n                    if (n == numBonds)\n                        break;\n                    throw new Error(MSG_UNEXPECTED);\n                }\n                if (!lines[lnum].startsWith('.'))\n                    break;\n                let buff = lines[lnum].substring(1);\n                while (true) {\n                    lnum++;\n                    if (!lines[lnum])\n                        throw new Error(MSG_PREMATURE);\n                    if (!lines[lnum].startsWith(':'))\n                        break;\n                    buff += '\\n' + lines[lnum].substring(1);\n                }\n                applyBondProperty(n, buff);\n            }\n        }\n        if (lines[lnum] != '!End')\n            throw new Error('Molecule end tag missing');\n        mol.keepTransient = false;\n        return mol;\n    }\n    static readNativeLegacy(strData) {\n        let mol = new Molecule();\n        mol.keepTransient = true;\n        let lines = strData.split(/\\r?\\n/);\n        if (lines.length < 2)\n            return null;\n        if (!lines[0].startsWith('SketchEl!') && lines.length >= 4 && lines[3].indexOf('V2000') >= 0) {\n            let i = strData.indexOf('SketchEl!');\n            if (i < 0)\n                return null;\n            lines = strData.substring(i).split(/r?\\n/);\n        }\n        let hdr = lines[0].match(/^SketchEl\\!\\((\\d+)\\,(\\d+)\\)/);\n        if (!hdr)\n            return null;\n        let numAtoms = parseInt(hdr[1]), numBonds = parseInt(hdr[2]);\n        if (lines.length < 2 + numAtoms + numBonds)\n            return null;\n        if (!lines[1 + numAtoms + numBonds].match(/^!End/))\n            return null;\n        for (let n = 0; n < numAtoms; n++) {\n            let bits = lines[1 + n].split(/[=,;]/);\n            let num = mol.addAtom(MoleculeStream.skUnescape(bits[0]), parseFloat(bits[1]), parseFloat(bits[2]), parseInt(bits[3]), parseInt(bits[4]));\n            let extra = [], trans = [];\n            for (let i = 5; i < bits.length; i++) {\n                let ch = bits[i].charAt(0);\n                if (bits[i].charAt(0) == 'i') { }\n                else if (bits[i].charAt(0) == 'e')\n                    mol.setAtomHExplicit(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'm')\n                    mol.setAtomIsotope(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'n')\n                    mol.setAtomMapNum(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'x')\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'y')\n                    trans.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'z') {\n                    mol.setAtomZ(num, parseFloat(bits[i].substring(1)));\n                    mol.setIs3D(true);\n                }\n                else\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n            }\n            mol.setAtomExtra(num, extra);\n            mol.setAtomTransient(num, trans);\n        }\n        for (let n = 0; n < numBonds; n++) {\n            let bits = lines[1 + numAtoms + n].split(/[=,]/);\n            let frto = bits[0].split('-');\n            let bfr = parseInt(frto[0].trim()), bto = parseInt(frto[1].trim());\n            if (bfr == bto)\n                continue;\n            let num = mol.addBond(bfr, bto, parseInt(bits[1]), parseInt(bits[2]));\n            let extra = new Array(), trans = new Array();\n            for (let i = 3; i < bits.length; i++) {\n                let ch = bits[i].charAt(0);\n                if (bits[i].charAt(0) == 'x')\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'y')\n                    trans.push(MoleculeStream.skUnescape(bits[i]));\n                else\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n            }\n            mol.setBondExtra(num, extra);\n            mol.setBondTransient(num, trans);\n        }\n        mol.keepTransient = false;\n        return mol;\n    }\n    static writeNative(mol) {\n        if (!this.formatV2Elements)\n            return this.writeNativeLegacy(mol);\n        let bits = [`Elements!(${mol.numAtoms},${mol.numBonds})\\n`];\n        const roundedNumber = (v) => {\n            return (Math.round(v * 1E4) * 1E-4).toFixed(4);\n        };\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let el = mol.atomElement(n), x = roundedNumber(mol.atomX(n)), y = roundedNumber(mol.atomY(n));\n            bits.push(`${escape(el)}=${x},${y}`);\n            let keyvals = [];\n            if (mol.is3D())\n                keyvals.push(`z${roundedNumber(mol.atomZ(n))}`);\n            let chg = mol.atomCharge(n), unp = mol.atomUnpaired(n), hyd = mol.atomHExplicit(n), iso = mol.atomIsotope(n), map = mol.atomMapNum(n);\n            if (chg != 0)\n                keyvals.push(`c${chg}`);\n            if (unp != 0)\n                keyvals.push(`u${unp}`);\n            if (hyd != Molecule.HEXPLICIT_UNKNOWN)\n                keyvals.push(`h${hyd}`);\n            if (iso != Molecule.ISOTOPE_NATURAL)\n                keyvals.push(`i${iso}`);\n            if (map > 0)\n                keyvals.push(`m${map}`);\n            keyvals.push(...mol.atomExtra(n));\n            keyvals.push(...mol.atomTransient(n));\n            bits.push(writeKeyVals(keyvals));\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n), order = mol.bondOrder(n);\n            bits.push(`${bfr}-${bto}=${order}`);\n            let keyvals = [];\n            let typ = mol.bondType(n);\n            if (typ == Molecule.BONDTYPE_INCLINED)\n                keyvals.push('i');\n            else if (typ == Molecule.BONDTYPE_DECLINED)\n                keyvals.push('d');\n            else if (typ == Molecule.BONDTYPE_UNKNOWN)\n                keyvals.push('u');\n            keyvals.push(...mol.bondExtra(n));\n            keyvals.push(...mol.bondTransient(n));\n            bits.push(writeKeyVals(keyvals));\n        }\n        bits.push('!End\\n');\n        return bits.join('');\n    }\n    static writeNativeLegacy(mol) {\n        let ret = 'SketchEl!(' + mol.numAtoms + ',' + mol.numBonds + ')\\n';\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let el = mol.atomElement(n), x = mol.atomX(n), y = mol.atomY(n), charge = mol.atomCharge(n), unpaired = mol.atomUnpaired(n);\n            let hy = mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN ? ('e' + mol.atomHExplicit(n)) : ('i' + mol.atomHydrogens(n));\n            ret += MoleculeStream.skEscape(el) + '=' + x.toFixed(4) + ',' + y.toFixed(4) + ';' + charge + ',' + unpaired + ',' + hy;\n            if (mol.is3D())\n                ret += ',z' + mol.atomZ(n);\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL)\n                ret += ',m' + mol.atomIsotope(n);\n            if (mol.atomMapNum(n) > 0)\n                ret += ',n' + mol.atomMapNum(n);\n            ret += MoleculeStream.skEncodeExtra(mol.atomExtra(n));\n            ret += MoleculeStream.skEncodeExtra(mol.atomTransient(n));\n            ret += '\\n';\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            ret += mol.bondFrom(n) + '-' + mol.bondTo(n) + '=' + mol.bondOrder(n) + ',' + mol.bondType(n);\n            ret += MoleculeStream.skEncodeExtra(mol.bondExtra(n));\n            ret += MoleculeStream.skEncodeExtra(mol.bondTransient(n));\n            ret += '\\n';\n        }\n        ret += '!End\\n';\n        return ret;\n    }\n    static readMDLMOL(strData) {\n        let src = new MDLMOLReader(strData);\n        src.parseHeader = true;\n        src.parse();\n        return src.mol;\n    }\n    static writeMDLMOL(mol) {\n        return new MDLMOLWriter(mol).write();\n    }\n    static skUnescape(str) {\n        let ret = '', match;\n        while (match = str.match(/^(.*?)\\\\([0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])(.*)/)) {\n            ret += match[1] + String.fromCharCode(parseInt('0x' + match[2]));\n            str = match[3];\n        }\n        return ret + str;\n    }\n    static skEscape(str) {\n        let ret = '';\n        for (let n = 0; n < str.length; n++) {\n            let ch = str.charAt(n), code = str.charCodeAt(n);\n            if (code <= 32 || code > 127 || ch == '\\\\' || ch == ',' || ch == ';' || ch == '=') {\n                let hex = (code & 0xFFFF).toString(16).toUpperCase();\n                ret += '\\\\';\n                for (let i = 4 - hex.length; i > 0; i--)\n                    ret += '0';\n                ret += hex;\n            }\n            else\n                ret += ch;\n        }\n        return ret;\n    }\n    static skEncodeExtra(extra) {\n        let ret = '';\n        for (let n = 0; n < extra.length; n++)\n            ret += ',' + MoleculeStream.skEscape(extra[n]);\n        return ret;\n    }\n}\nMoleculeStream.formatV2Elements = false;\nexport { MoleculeStream };\n//# sourceMappingURL=MoleculeStream.js.map","import { Box } from '../util/Geom';\nimport { deepClone } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { MoleculeStream } from '../io/MoleculeStream';\nexport class Atom {\n}\nexport class Bond {\n}\nclass Molecule {\n    constructor() {\n        this.atoms = [];\n        this.bonds = [];\n        this.hasZCoord = false;\n        this.keepTransient = false;\n        this.hasTransient = false;\n        this.graph = null;\n        this.graphBond = null;\n        this.ringID = null;\n        this.compID = null;\n        this.ring3 = null;\n        this.ring4 = null;\n        this.ring5 = null;\n        this.ring6 = null;\n        this.ring7 = null;\n    }\n    clone() {\n        let dup = new Molecule();\n        dup.atoms = deepClone(this.atoms);\n        dup.bonds = deepClone(this.bonds);\n        dup.hasZCoord = this.hasZCoord;\n        dup.keepTransient = this.keepTransient;\n        dup.hasTransient = this.hasTransient;\n        dup.graph = this.graph;\n        dup.graphBond = this.graphBond;\n        dup.ringID = this.ringID;\n        dup.compID = this.compID;\n        dup.ring3 = this.ring3;\n        dup.ring4 = this.ring4;\n        dup.ring5 = this.ring5;\n        dup.ring6 = this.ring6;\n        dup.ring7 = this.ring7;\n        return dup;\n    }\n    static fromString(strData) { return MoleculeStream.readNative(strData); }\n    toString() { return MoleculeStream.writeNative(this); }\n    append(frag) {\n        let base = this.atoms.length;\n        for (let n = 1; n <= frag.numAtoms; n++) {\n            let num = this.addAtom(frag.atomElement(n), frag.atomX(n), frag.atomY(n), frag.atomCharge(n), frag.atomUnpaired(n));\n            this.setAtomIsotope(num, frag.atomIsotope(n));\n            this.setAtomHExplicit(num, frag.atomHExplicit(n));\n            this.setAtomMapNum(num, frag.atomMapNum(n));\n            this.setAtomExtra(num, frag.atomExtra(n));\n            this.setAtomTransient(num, frag.atomTransient(n));\n        }\n        for (let n = 1; n <= frag.numBonds; n++) {\n            let num = this.addBond(frag.bondFrom(n) + base, frag.bondTo(n) + base, frag.bondOrder(n), frag.bondType(n));\n            this.setBondExtra(num, frag.bondExtra(n));\n            this.setBondTransient(num, frag.bondTransient(n));\n        }\n        this.trashTransient();\n    }\n    get numAtoms() { return this.atoms.length; }\n    getAtom(idx) {\n        if (idx < 1 || idx > this.atoms.length)\n            throw new Error(`Molecule.getAtom: index ${idx} out of range (#atoms=${this.atoms.length})`);\n        return this.atoms[idx - 1];\n    }\n    atomElement(idx) { return this.getAtom(idx).element; }\n    atomX(idx) { return this.getAtom(idx).x; }\n    atomY(idx) { return this.getAtom(idx).y; }\n    atomCharge(idx) { return this.getAtom(idx).charge; }\n    atomUnpaired(idx) { return this.getAtom(idx).unpaired; }\n    atomIsotope(idx) { return this.getAtom(idx).isotope; }\n    atomHExplicit(idx) { return this.getAtom(idx).hExplicit; }\n    atomMapNum(idx) { return this.getAtom(idx).mapNum; }\n    atomExtra(idx) { return this.getAtom(idx).extra.slice(0); }\n    atomTransient(idx) { return this.getAtom(idx).transient.slice(0); }\n    get numBonds() { return this.bonds.length; }\n    getBond(idx) {\n        if (idx < 1 || idx > this.bonds.length)\n            throw new Error(`Molecule.getBond: index ${idx} out of range (#bonds=${this.bonds.length})`);\n        return this.bonds[idx - 1];\n    }\n    bondFrom(idx) { return this.getBond(idx).from; }\n    bondTo(idx) { return this.getBond(idx).to; }\n    bondOrder(idx) { return this.getBond(idx).order; }\n    bondType(idx) { return this.getBond(idx).type; }\n    bondExtra(idx) { return this.getBond(idx).extra.slice(0); }\n    bondTransient(idx) { return this.getBond(idx).transient.slice(0); }\n    bondFromTo(idx) { let b = this.getBond(idx); return [b.from, b.to]; }\n    addAtom(element, x, y, charge = 0, unpaired = 0) {\n        let a = new Atom();\n        a.element = element;\n        a.x = x;\n        a.y = y;\n        a.charge = charge;\n        a.unpaired = unpaired;\n        a.isotope = Molecule.ISOTOPE_NATURAL;\n        a.hExplicit = Molecule.HEXPLICIT_UNKNOWN;\n        a.mapNum = 0;\n        a.extra = [];\n        a.transient = [];\n        this.atoms.push(a);\n        this.trashTransient();\n        this.trashGraph();\n        return this.atoms.length;\n    }\n    setAtomElement(idx, element) {\n        this.getAtom(idx).element = element;\n        this.trashTransient();\n    }\n    setAtomPos(idx, x, y, z) {\n        let a = this.getAtom(idx);\n        a.x = x;\n        a.y = y;\n        a.z = z == null ? 0 : z;\n        this.trashTransient();\n    }\n    setAtomX(idx, x) {\n        this.getAtom(idx).x = x;\n        this.trashTransient();\n    }\n    setAtomY(idx, y) {\n        this.getAtom(idx).y = y;\n        this.trashTransient();\n    }\n    setAtomCharge(idx, charge) {\n        this.getAtom(idx).charge = charge;\n        this.trashTransient();\n    }\n    setAtomUnpaired(idx, unpaired) {\n        this.getAtom(idx).unpaired = unpaired;\n        this.trashTransient();\n    }\n    setAtomIsotope(idx, isotope) {\n        this.getAtom(idx).isotope = isotope;\n        this.trashTransient();\n    }\n    setAtomHExplicit(idx, hExplicit) {\n        this.getAtom(idx).hExplicit = hExplicit;\n        this.trashTransient();\n    }\n    setAtomMapNum(idx, mapNum) {\n        this.getAtom(idx).mapNum = mapNum;\n        this.trashTransient();\n    }\n    setAtomExtra(idx, extra) {\n        this.getAtom(idx).extra = extra.slice(0);\n    }\n    setAtomTransient(idx, transi) {\n        this.getAtom(idx).transient = transi.slice(0);\n        if (transi.length > 0)\n            this.hasTransient = true;\n    }\n    swapAtoms(a1, a2) {\n        let a = this.atoms[a1 - 1];\n        this.atoms[a1 - 1] = this.atoms[a2 - 1];\n        this.atoms[a2 - 1] = a;\n        for (let n = 0; n < this.bonds.length; n++) {\n            let b = this.bonds[n];\n            if (b.from == a2)\n                b.from = a1;\n            else if (b.from == a1)\n                b.from = a2;\n            if (b.to == a2)\n                b.to = a1;\n            else if (b.to == a1)\n                b.to = a2;\n        }\n        this.trashGraph();\n    }\n    addBond(from, to, order, type = Molecule.BONDTYPE_NORMAL) {\n        let b = new Bond();\n        b.from = from;\n        b.to = to;\n        b.order = order;\n        b.type = type;\n        b.extra = [];\n        b.transient = [];\n        this.bonds.push(b);\n        this.trashTransient();\n        this.trashGraph();\n        return this.bonds.length;\n    }\n    setBondFrom(idx, bfr) {\n        this.getBond(idx).from = bfr;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondTo(idx, to) {\n        this.getBond(idx).to = to;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondFromTo(idx, bfr, bto) {\n        this.getBond(idx).from = bfr;\n        this.getBond(idx).to = bto;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondOrder(idx, order) {\n        this.getBond(idx).order = order;\n        this.trashTransient();\n    }\n    setBondType(idx, type) {\n        this.getBond(idx).type = type;\n        this.trashTransient();\n    }\n    setBondExtra(idx, extra) {\n        this.getBond(idx).extra = extra.slice(0);\n    }\n    setBondTransient(idx, transi) {\n        this.getBond(idx).transient = transi.slice(0);\n        if (transi.length > 0)\n            this.hasTransient = true;\n    }\n    deleteAtomAndBonds(idx) {\n        for (let n = this.numBonds; n >= 1; n--) {\n            if (this.bondFrom(n) == idx || this.bondTo(n) == idx)\n                this.deleteBond(n);\n            else {\n                if (this.bondFrom(n) > idx)\n                    this.setBondFrom(n, this.bondFrom(n) - 1);\n                if (this.bondTo(n) > idx)\n                    this.setBondTo(n, this.bondTo(n) - 1);\n            }\n        }\n        this.atoms.splice(idx - 1, 1);\n        this.trashTransient();\n        this.trashGraph();\n    }\n    deleteBond(idx) {\n        this.bonds.splice(idx - 1, 1);\n        this.trashTransient();\n        this.trashGraph();\n    }\n    atomHydrogens(idx) {\n        let hy = this.atomHExplicit(idx);\n        if (hy != Molecule.HEXPLICIT_UNKNOWN)\n            return hy;\n        for (let n = 0; n < Molecule.HYVALENCE_EL.length; n++)\n            if (Molecule.HYVALENCE_EL[n] == this.atomElement(idx)) {\n                hy = Molecule.HYVALENCE_VAL[n];\n                break;\n            }\n        if (hy == Molecule.HEXPLICIT_UNKNOWN)\n            return 0;\n        let ch = this.atomCharge(idx);\n        if (this.atomElement(idx) == 'C')\n            ch = -Math.abs(ch);\n        hy += ch - this.atomUnpaired(idx);\n        let adjBonds = this.atomAdjBonds(idx);\n        for (let n = 0; n < adjBonds.length; n++)\n            hy -= this.bondOrder(adjBonds[n]);\n        return hy < 0 ? 0 : hy;\n    }\n    findBond(a1, a2) {\n        for (let n = 1; n <= this.numBonds; n++) {\n            let b1 = this.bondFrom(n), b2 = this.bondTo(n);\n            if ((a1 == b1 && a2 == b2) || (a1 == b2 && a2 == b1))\n                return n;\n        }\n        return 0;\n    }\n    bondOther(idx, ref) {\n        let b1 = this.bondFrom(idx), b2 = this.bondTo(idx);\n        if (b1 == ref)\n            return b2;\n        if (b2 == ref)\n            return b1;\n        return 0;\n    }\n    atomExplicit(idx) {\n        let a = this.atoms[idx - 1];\n        if (a.isotope != Molecule.ISOTOPE_NATURAL)\n            return true;\n        if (a.element != 'C' || a.charge != 0 || a.unpaired != 0)\n            return true;\n        if (this.atomAdjCount(idx) == 0)\n            return true;\n        return false;\n    }\n    atomRingBlock(idx) {\n        if (this.graph == null)\n            this.buildGraph();\n        if (this.ringID == null)\n            this.buildRingID();\n        return this.ringID[idx - 1];\n    }\n    bondInRing(idx) {\n        let r1 = this.atomRingBlock(this.bondFrom(idx)), r2 = this.atomRingBlock(this.bondTo(idx));\n        return r1 > 0 && r1 == r2;\n    }\n    atomConnComp(idx) {\n        if (this.graph == null)\n            this.buildGraph();\n        if (this.compID == null)\n            this.buildConnComp();\n        return this.compID[idx - 1];\n    }\n    atomAdjCount(idx) {\n        this.buildGraph();\n        return this.graph[idx - 1].length;\n    }\n    atomAdjList(idx) {\n        this.buildGraph();\n        let adj = this.graph[idx - 1].slice(0);\n        for (let n = adj.length - 1; n >= 0; n--)\n            adj[n]++;\n        return adj;\n    }\n    atomAdjBonds(idx) {\n        this.buildGraph();\n        return this.graphBond[idx - 1].slice(0);\n    }\n    findRingsOfSize(size) {\n        let rings = null;\n        if (size == 3 && this.ring3 != null)\n            rings = this.ring3;\n        if (size == 4 && this.ring4 != null)\n            rings = this.ring4;\n        if (size == 5 && this.ring5 != null)\n            rings = this.ring5;\n        if (size == 6 && this.ring6 != null)\n            rings = this.ring6;\n        if (size == 7 && this.ring7 != null)\n            rings = this.ring7;\n        if (rings == null) {\n            if (this.graph == null)\n                this.buildGraph();\n            if (this.ringID == null)\n                this.buildRingID();\n            rings = [];\n            for (let n = 1; n <= this.atoms.length; n++) {\n                if (this.ringID[n - 1] > 0) {\n                    let path = Vec.numberArray(0, size);\n                    path[0] = n;\n                    this.recursiveRingFind(path, 1, size, this.ringID[n - 1], rings);\n                }\n            }\n            if (size == 3)\n                this.ring3 = rings;\n            if (size == 4)\n                this.ring4 = rings;\n            if (size == 5)\n                this.ring5 = rings;\n            if (size == 6)\n                this.ring6 = rings;\n            if (size == 7)\n                this.ring7 = rings;\n        }\n        let ret = [];\n        for (let n = 0; n < rings.length; n++)\n            ret.push(rings[n].slice(0));\n        return ret;\n    }\n    boundary() {\n        if (this.atoms.length == 0)\n            return Box.zero();\n        let x1 = this.atoms[0].x, x2 = x1;\n        let y1 = this.atoms[0].y, y2 = y1;\n        for (let n = 1; n < this.atoms.length; n++) {\n            x1 = Math.min(x1, this.atoms[n].x);\n            y1 = Math.min(y1, this.atoms[n].y);\n            x2 = Math.max(x2, this.atoms[n].x);\n            y2 = Math.max(y2, this.atoms[n].y);\n        }\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    atomicNumber(idx) {\n        return Molecule.elementAtomicNumber(this.atomElement(idx));\n    }\n    static elementAtomicNumber(element) {\n        return Math.max(0, Chemistry.ELEMENTS.indexOf(element));\n    }\n    is3D() { return this.hasZCoord; }\n    setIs3D(v) { this.hasZCoord = v; }\n    atomZ(idx) { return this.getAtom(idx).z; }\n    setAtomZ(idx, z) { this.getAtom(idx).z = z; }\n    compareTo(other) {\n        if (other == null || other.numAtoms == 0)\n            return this.numAtoms == 0 ? 0 : 1;\n        if (this.numAtoms < other.numAtoms)\n            return -1;\n        if (this.numAtoms > other.numAtoms)\n            return 1;\n        if (this.numBonds < other.numBonds)\n            return -1;\n        if (this.numBonds > other.numBonds)\n            return 1;\n        for (let n = 1; n <= this.numAtoms; n++) {\n            if (this.atomElement(n) < other.atomElement(n))\n                return -1;\n            if (this.atomElement(n) > other.atomElement(n))\n                return 1;\n            if (this.atomX(n) < other.atomX(n))\n                return -1;\n            if (this.atomX(n) > other.atomX(n))\n                return 1;\n            if (this.atomY(n) < other.atomY(n))\n                return -1;\n            if (this.atomY(n) > other.atomY(n))\n                return 1;\n            if (this.atomCharge(n) < other.atomCharge(n))\n                return -1;\n            if (this.atomCharge(n) > other.atomCharge(n))\n                return 1;\n            if (this.atomUnpaired(n) < other.atomUnpaired(n))\n                return -1;\n            if (this.atomUnpaired(n) > other.atomUnpaired(n))\n                return 1;\n            if (this.atomHExplicit(n) < other.atomHExplicit(n))\n                return -1;\n            if (this.atomHExplicit(n) > other.atomHExplicit(n))\n                return 1;\n            if (this.atomIsotope(n) < other.atomIsotope(n))\n                return -1;\n            if (this.atomIsotope(n) > other.atomIsotope(n))\n                return 1;\n            if (this.atomMapNum(n) < other.atomMapNum(n))\n                return -1;\n            if (this.atomMapNum(n) > other.atomMapNum(n))\n                return 1;\n            let tx1 = this.atomExtra(n).map((v) => v.trimEnd()), tx2 = other.atomExtra(n).map((v) => v.trimEnd());\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n            tx1 = this.atomTransient(n).map((v) => v.trimEnd());\n            tx2 = other.atomTransient(n).map((v) => v.trimEnd());\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n        }\n        for (let n = 1; n <= this.numBonds; n++) {\n            if (this.bondFrom(n) < other.bondFrom(n))\n                return -1;\n            if (this.bondFrom(n) > other.bondFrom(n))\n                return 1;\n            if (this.bondTo(n) < other.bondTo(n))\n                return -1;\n            if (this.bondTo(n) > other.bondTo(n))\n                return 1;\n            if (this.bondOrder(n) < other.bondOrder(n))\n                return -1;\n            if (this.bondOrder(n) > other.bondOrder(n))\n                return 1;\n            if (this.bondType(n) < other.bondType(n))\n                return -1;\n            if (this.bondType(n) > other.bondType(n))\n                return 1;\n            let tx1 = this.bondExtra(n), tx2 = other.bondExtra(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n            tx1 = this.bondTransient(n);\n            tx2 = other.bondTransient(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n        }\n        return 0;\n    }\n    trashTransient() {\n        if (this.keepTransient || !this.hasTransient)\n            return;\n        for (let a of this.atoms)\n            a.transient = [];\n        for (let b of this.bonds)\n            b.transient = [];\n        this.hasTransient = false;\n    }\n    appendAtomExtra(atom, extra) {\n        this.getAtom(atom).extra.push(extra);\n    }\n    appendAtomTransient(atom, trans) {\n        this.getAtom(atom).transient.push(trans);\n    }\n    appendBondExtra(bond, extra) {\n        this.getBond(bond).extra.push(extra);\n    }\n    appendBondTransient(bond, trans) {\n        this.getBond(bond).transient.push(trans);\n    }\n    getAtomCloned(idx) { return deepClone(this.getAtom(idx)); }\n    getBondCloned(idx) { return deepClone(this.getBond(idx)); }\n    setAtom(idx, atom) {\n        if (!atom)\n            return;\n        let curr = this.getAtom(idx);\n        if (atom.element != curr.element)\n            this.setAtomElement(idx, atom.element);\n        if (atom.x != curr.x)\n            this.setAtomX(idx, atom.x);\n        if (atom.y != curr.y)\n            this.setAtomY(idx, atom.y);\n        if (atom.z != curr.z)\n            this.setAtomZ(idx, atom.z);\n        if (atom.charge != curr.charge)\n            this.setAtomCharge(idx, atom.charge);\n        if (atom.unpaired != curr.unpaired)\n            this.setAtomUnpaired(idx, atom.unpaired);\n        if (atom.isotope != curr.isotope)\n            this.setAtomIsotope(idx, atom.isotope);\n        if (atom.hExplicit != curr.hExplicit)\n            this.setAtomHExplicit(idx, atom.hExplicit);\n        if (atom.mapNum != curr.mapNum)\n            this.setAtomMapNum(idx, atom.mapNum);\n        if (!Vec.equals(atom.extra, curr.extra))\n            this.setAtomExtra(idx, atom.extra);\n        if (!Vec.equals(atom.transient, curr.transient))\n            this.setAtomTransient(idx, atom.transient);\n    }\n    setBond(idx, bond) {\n        if (bond == null)\n            return;\n        let curr = this.getBond(idx);\n        if (bond.from != curr.from)\n            this.setBondFrom(idx, bond.from);\n        if (bond.to != curr.to)\n            this.setBondTo(idx, bond.to);\n        if (bond.order != curr.order)\n            this.setBondOrder(idx, bond.order);\n        if (bond.type != curr.type)\n            this.setBondType(idx, bond.type);\n        if (!Vec.equals(bond.extra, curr.extra))\n            this.setBondExtra(idx, bond.extra);\n        if (!Vec.equals(bond.transient, curr.transient))\n            this.setBondTransient(idx, bond.transient);\n    }\n    modifyAtoms(lambda) {\n        for (let n = 1; n <= this.numAtoms; n++) {\n            var mod = lambda(n, this.getAtomCloned(n));\n            if (mod != null)\n                this.setAtom(n, mod);\n        }\n    }\n    modifyAtomsIndices(atomIndices, lambda) {\n        for (let n of atomIndices) {\n            var mod = lambda(n, this.getAtomCloned(n));\n            if (mod != null)\n                this.setAtom(n, mod);\n        }\n    }\n    modifyBonds(lambda) {\n        for (let n = 1; n <= this.numBonds; n++) {\n            var mod = lambda(n, this.getBondCloned(n));\n            if (mod != null)\n                this.setBond(n, mod);\n        }\n    }\n    modifyBondsIndices(bondIndices, lambda) {\n        for (let n of bondIndices) {\n            var mod = lambda(n, this.getBondCloned(n));\n            if (mod != null)\n                this.setBond(n, mod);\n        }\n    }\n    findAtomMatch(lambda) {\n        for (let n = 1; n <= this.numAtoms; n++)\n            if (lambda(this.getAtom(n)))\n                return n;\n        return 0;\n    }\n    findBondMatch(lambda) {\n        for (let n = 1; n <= this.numBonds; n++)\n            if (lambda(this.getBond(n)))\n                return n;\n        return 0;\n    }\n    findAllAtoms(lambda) {\n        let indices = [];\n        for (let n = 1; n <= this.numAtoms; n++)\n            if (lambda(this.getAtom(n)))\n                indices.push(n);\n        return indices;\n    }\n    findAllBonds(lambda) {\n        let indices = [];\n        for (let n = 1; n <= this.numBonds; n++)\n            if (lambda(this.getBond(n)))\n                indices.push(n);\n        return indices;\n    }\n    mapAtoms(lambda) {\n        let ret = new Array(this.numAtoms);\n        for (let n = 1; n <= this.numAtoms; n++)\n            ret[n - 1] = lambda(this.getAtom(n));\n        return ret;\n    }\n    mapBonds(lambda) {\n        let ret = new Array(this.numBonds);\n        for (let n = 1; n <= this.numBonds; n++)\n            ret[n - 1] = lambda(this.getBond(n));\n        return ret;\n    }\n    mapAtomsIndices(atomIndices, lambda) {\n        let ret = new Array(atomIndices.length);\n        let pos = 0;\n        for (let n of atomIndices)\n            ret[pos++] = lambda(this.getAtom(n));\n        return ret;\n    }\n    mapBondsIndices(bondIndices, lambda) {\n        let ret = new Array(bondIndices.length);\n        let pos = 0;\n        for (let n of bondIndices)\n            ret[pos++] = lambda(this.getBond(n));\n        return ret;\n    }\n    trashGraph() {\n        this.graph = null;\n        this.graphBond = null;\n        this.ringID = null;\n        this.compID = null;\n        this.ring3 = null;\n        this.ring4 = null;\n        this.ring5 = null;\n        this.ring6 = null;\n        this.ring7 = null;\n    }\n    buildGraph() {\n        if (this.graph != null && this.graphBond != null)\n            return;\n        let graph = [], graphBond = [];\n        let na = this.numAtoms, nb = this.numBonds;\n        for (let n = 0; n < na; n++) {\n            graph.push([]);\n            graphBond.push([]);\n        }\n        for (let n = 1; n <= nb; n++) {\n            let b = this.getBond(n);\n            graph[b.from - 1].push(b.to - 1);\n            graph[b.to - 1].push(b.from - 1);\n            graphBond[b.from - 1].push(n);\n            graphBond[b.to - 1].push(n);\n        }\n        this.graph = graph;\n        this.graphBond = graphBond;\n    }\n    buildConnComp() {\n        const numAtoms = this.atoms.length;\n        this.compID = Vec.numberArray(0, numAtoms);\n        for (let n = 0; n < numAtoms; n++)\n            this.compID[n] = 0;\n        let comp = 1;\n        this.compID[0] = comp;\n        while (true) {\n            let anything = false;\n            for (let n = 0; n < numAtoms; n++)\n                if (this.compID[n] == comp) {\n                    for (let i = 0; i < this.graph[n].length; i++) {\n                        if (this.compID[this.graph[n][i]] == 0) {\n                            this.compID[this.graph[n][i]] = comp;\n                            anything = true;\n                        }\n                    }\n                }\n            if (!anything) {\n                for (let n = 0; n < numAtoms; n++) {\n                    if (this.compID[n] == 0) {\n                        this.compID[n] = ++comp;\n                        anything = true;\n                        break;\n                    }\n                }\n                if (!anything)\n                    break;\n            }\n        }\n    }\n    buildRingID() {\n        const numAtoms = this.atoms.length;\n        this.ringID = Vec.numberArray(0, numAtoms);\n        if (numAtoms == 0)\n            return;\n        let visited = Vec.booleanArray(false, numAtoms);\n        for (let n = 0; n < numAtoms; n++) {\n            this.ringID[n] = 0;\n            visited[n] = false;\n        }\n        let path = Vec.numberArray(0, numAtoms + 1), plen = 0, numVisited = 0;\n        while (true) {\n            let last, current;\n            if (plen == 0) {\n                last = -1;\n                for (current = 0; visited[current]; current++) { }\n            }\n            else {\n                last = path[plen - 1];\n                current = -1;\n                for (let n = 0; n < this.graph[last].length; n++) {\n                    if (!visited[this.graph[last][n]]) {\n                        current = this.graph[last][n];\n                        break;\n                    }\n                }\n            }\n            if (current >= 0 && plen >= 2) {\n                let back = path[plen - 1];\n                for (let n = 0; n < this.graph[current].length; n++) {\n                    let join = this.graph[current][n];\n                    if (join != back && visited[join]) {\n                        path[plen] = current;\n                        for (let i = plen; i == plen || path[i + 1] != join; i--) {\n                            let id = this.ringID[path[i]];\n                            if (id == 0)\n                                this.ringID[path[i]] = last;\n                            else if (id != last) {\n                                for (let j = 0; j < numAtoms; j++)\n                                    if (this.ringID[j] == id)\n                                        this.ringID[j] = last;\n                            }\n                        }\n                    }\n                }\n            }\n            if (current >= 0) {\n                visited[current] = true;\n                path[plen++] = current;\n                numVisited++;\n            }\n            else {\n                plen--;\n            }\n            if (numVisited == numAtoms)\n                break;\n        }\n        let nextID = 0;\n        for (let i = 0; i < numAtoms; i++) {\n            if (this.ringID[i] > 0) {\n                nextID--;\n                for (let j = numAtoms - 1; j >= i; j--)\n                    if (this.ringID[j] == this.ringID[i])\n                        this.ringID[j] = nextID;\n            }\n        }\n        for (let i = 0; i < numAtoms; i++)\n            this.ringID[i] = -this.ringID[i];\n    }\n    recursiveRingFind(path, psize, capacity, rblk, rings) {\n        const { graph } = this;\n        if (psize < capacity) {\n            let last = path[psize - 1];\n            for (let n = 0; n < graph[last - 1].length; n++) {\n                let adj = graph[last - 1][n] + 1;\n                if (this.ringID[adj - 1] != rblk)\n                    continue;\n                let fnd = false;\n                for (let i = 0; i < psize; i++) {\n                    if (path[i] == adj) {\n                        fnd = true;\n                        break;\n                    }\n                }\n                if (!fnd) {\n                    let newPath = path.slice(0);\n                    newPath[psize] = adj;\n                    this.recursiveRingFind(newPath, psize + 1, capacity, rblk, rings);\n                }\n            }\n            return;\n        }\n        let last = path[psize - 1];\n        let fnd = false;\n        for (let n = 0; n < graph[last - 1].length; n++) {\n            if (graph[last - 1][n] + 1 == path[0]) {\n                fnd = true;\n                break;\n            }\n        }\n        if (!fnd)\n            return;\n        for (let n = 0; n < path.length; n++) {\n            let count = 0, p = path[n] - 1;\n            for (let i = 0; i < graph[p].length; i++)\n                if (path.indexOf(graph[p][i] + 1) >= 0)\n                    count++;\n            if (count != 2)\n                return;\n        }\n        let first = 0;\n        for (let n = 1; n < psize; n++)\n            if (path[n] < path[first])\n                first = n;\n        let fm = (first - 1 + psize) % psize, fp = (first + 1) % psize;\n        let flip = path[fm] < path[fp];\n        if (first != 0 || flip) {\n            let newPath = Vec.numberArray(0, psize);\n            for (let n = 0; n < psize; n++)\n                newPath[n] = path[(first + (flip ? psize - n : n)) % psize];\n            path = newPath;\n        }\n        for (let n = 0; n < rings.length; n++) {\n            let look = rings[n];\n            let same = true;\n            for (let i = 0; i < psize; i++) {\n                if (look[i] != path[i]) {\n                    same = false;\n                    break;\n                }\n            }\n            if (same)\n                return;\n        }\n        rings.push(path);\n    }\n}\nMolecule.IDEALBOND = 1.5;\nMolecule.HEXPLICIT_UNKNOWN = -1;\nMolecule.ISOTOPE_NATURAL = 0;\nMolecule.BONDTYPE_NORMAL = 0;\nMolecule.BONDTYPE_INCLINED = 1;\nMolecule.BONDTYPE_DECLINED = 2;\nMolecule.BONDTYPE_UNKNOWN = 3;\nMolecule.HYVALENCE_EL = ['C', 'N', 'O', 'S', 'P'];\nMolecule.HYVALENCE_VAL = [4, 3, 2, 2, 3];\nMolecule.PREFIX_EXTRA = 'x';\nMolecule.PREFIX_TRANSIENT = 'y';\nexport { Molecule };\n//# sourceMappingURL=Molecule.js.map","import { angleDiff, angleNorm, DEGRAD, norm2_xy, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Graph } from './Graph';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nclass CoordUtil {\n    static atomAtPoint(mol, x, y, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.OVERLAP_THRESHOLD;\n        const tolsq = tolerance * tolerance;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y) < tolsq)\n                return n;\n        return 0;\n    }\n    static sketchEquivalent(mol1, mol2, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.DEFAULT_EQUIV_TOLERANCE;\n        const na = mol1.numAtoms, nb = mol1.numBonds;\n        if (na != mol2.numAtoms || nb != mol2.numBonds)\n            return false;\n        const tolsq = tolerance * tolerance;\n        let box1 = mol1.boundary(), box2 = mol2.boundary();\n        if (Math.abs(box1.minX() - box2.minX()) > tolerance)\n            return false;\n        if (Math.abs(box1.minY() - box2.minY()) > tolerance)\n            return false;\n        if (Math.abs(box1.maxX() - box2.maxX()) > tolerance)\n            return false;\n        if (Math.abs(box1.maxY() - box2.maxY()) > tolerance)\n            return false;\n        let mx1 = MolUtil.arrayAtomX(mol1), my1 = MolUtil.arrayAtomY(mol1);\n        let mx2 = MolUtil.arrayAtomX(mol2), my2 = MolUtil.arrayAtomY(mol2);\n        let map = Vec.numberArray(0, na);\n        let mask = Vec.booleanArray(false, na);\n        for (let i = 0; i < na; i++) {\n            let j = -1;\n            if (norm2_xy(mx1[i] - mx2[i], my1[i] - my2[i]) < tolsq)\n                j = i;\n            if (j < 0) {\n                let bestdsq = Number.MAX_VALUE;\n                for (let n = 0; n < na; n++)\n                    if (!mask[n]) {\n                        let dsq = norm2_xy(mx1[i] - mx2[n], my1[i] - my2[n]);\n                        if (dsq < bestdsq) {\n                            bestdsq = dsq;\n                            j = n;\n                        }\n                    }\n                if (j < 0 || bestdsq > tolsq)\n                    return false;\n            }\n            map[i] = j + 1;\n            mask[j] = true;\n            if (mol1.atomElement(i + 1) != mol2.atomElement(j + 1))\n                return false;\n            if (mol1.atomCharge(i + 1) != mol2.atomCharge(j + 1))\n                return false;\n            if (mol1.atomUnpaired(i + 1) != mol2.atomUnpaired(j + 1))\n                return false;\n            if (mol1.atomHExplicit(i + 1) != mol2.atomHExplicit(j + 1) &&\n                mol1.atomHExplicit(i + 1) != Molecule.HEXPLICIT_UNKNOWN &&\n                mol2.atomHExplicit(j + 1) != Molecule.HEXPLICIT_UNKNOWN)\n                return false;\n        }\n        for (let i = 1; i <= nb; i++) {\n            let i1 = mol1.bondFrom(i), i2 = mol1.bondTo(i), j1 = map[i1 - 1], j2 = map[i2 - 1];\n            let j = mol2.findBond(j1, j2);\n            if (j == 0)\n                return false;\n            if (mol1.bondOrder(i) != mol2.bondOrder(j) || mol1.bondType(i) != mol2.bondType(j))\n                return false;\n            if (mol2.bondFrom(j) == j1 && mol2.bondTo(j) == j2) { }\n            else if (mol2.bondType(j) != Molecule.BONDTYPE_INCLINED &&\n                mol2.bondType(j) != Molecule.BONDTYPE_DECLINED &&\n                mol2.bondFrom(j) == j2 && mol2.bondTo(j) == j1) { }\n            else\n                return false;\n        }\n        return true;\n    }\n    static sketchMappable(mol1, mol2, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.DEFAULT_EQUIV_TOLERANCE;\n        let box1 = mol1.boundary(), box2 = mol2.boundary();\n        let dx = box1.minX() - box2.minX(), dy = box1.minY() - box2.minY();\n        if (Math.abs(dx) > tolerance * 0.1 || Math.abs(dy) > tolerance * 0.1) {\n            mol2 = mol2.clone();\n            for (let n = 1; n <= mol2.numAtoms; n++)\n                mol2.setAtomPos(n, mol2.atomX(n) + dx, mol2.atomY(n) + dy);\n        }\n        return CoordUtil.sketchEquivalent(mol1, mol2, tolerance);\n    }\n    static atomBondAngles(mol, atom, adj) {\n        if (adj == null)\n            adj = mol.atomAdjList(atom);\n        let bndang = [];\n        let cx = mol.atomX(atom), cy = mol.atomY(atom);\n        for (let a of adj)\n            bndang.push(Math.atan2(mol.atomY(a) - cy, mol.atomX(a) - cx));\n        return bndang;\n    }\n    static overlapsAtom(mol, x, y, tol) {\n        const tolsq = tol * tol;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y) < tolsq)\n                return true;\n        return false;\n    }\n    static overlappingAtomMask(mol, thresh) {\n        if (thresh == null)\n            thresh = CoordUtil.OVERLAP_THRESHOLD;\n        const sz = mol.numAtoms;\n        let box = mol.boundary();\n        let p1, p2;\n        if (box.w > box.h) {\n            p1 = MolUtil.arrayAtomX(mol);\n            p2 = MolUtil.arrayAtomY(mol);\n        }\n        else {\n            p1 = MolUtil.arrayAtomY(mol);\n            p2 = MolUtil.arrayAtomX(mol);\n        }\n        let omask = Vec.booleanArray(false, sz);\n        let idx = Vec.idxSort(p1);\n        const threshSQ = thresh * thresh;\n        for (let i = 1; i < sz - 1; i++) {\n            for (let j = i - 1; j >= 0; j--) {\n                let d1 = p1[idx[i]] - p1[idx[j]];\n                if (d1 > thresh)\n                    break;\n                if (norm2_xy(d1, p2[idx[i]] - p2[idx[j]]) < threshSQ) {\n                    omask[idx[i]] = true;\n                    omask[idx[j]] = true;\n                }\n            }\n            for (let j = i + 1; j < sz; j++) {\n                let d1 = p1[idx[j]] - p1[idx[i]];\n                if (d1 > thresh)\n                    break;\n                if (norm2_xy(d1, p2[idx[j]] - p2[idx[i]]) < threshSQ) {\n                    omask[idx[i]] = true;\n                    omask[idx[j]] = true;\n                }\n            }\n        }\n        return omask;\n    }\n    static overlappingAtomList(mol, thresh) {\n        if (thresh == null)\n            thresh = CoordUtil.OVERLAP_THRESHOLD;\n        return Vec.add(Vec.maskIdx(CoordUtil.overlappingAtomMask(mol, thresh)), 1);\n    }\n    static congestionPoint(mol, x, y, approach) {\n        if (approach == null)\n            approach = 1E-5;\n        let score = 0;\n        let na = mol.numAtoms;\n        for (let n = 1; n <= na; n++)\n            score += 1.0 / (approach + norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y));\n        return score;\n    }\n    static congestionMolecule(mol, approach) {\n        if (approach == null)\n            approach = 1E-5;\n        let score = 0;\n        const na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        for (let i = 0; i < na - 1; i++)\n            for (let j = i + 1; j < na; j++)\n                score += 1.0 / (approach + norm2_xy(mx[i] - mx[j], my[i] - my[j]));\n        return score;\n    }\n    static translateMolecule(mol, ox, oy) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            mol.setAtomPos(n, mol.atomX(n) + ox, mol.atomY(n) + oy);\n    }\n    static rotateMolecule(mol, theta, cx, cy) {\n        if (cx == null || cy == null) {\n            let box = mol.boundary();\n            cx = box.midX();\n            cy = box.midY();\n        }\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n            mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n        }\n    }\n    static rotateBond(mol, centre, atom, theta) {\n        theta = angleNorm(theta);\n        if (Math.abs(theta) < 0.1 * DEGRAD)\n            return;\n        let g = Graph.fromMolecule(mol);\n        g.isolateNode(centre - 1);\n        let cc = g.calculateComponents();\n        let cx = mol.atomX(centre), cy = mol.atomY(centre);\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (cc[n - 1] == cc[atom - 1]) {\n                let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n                mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n            }\n    }\n    static rotateAtoms(mol, mask, cx, cy, theta) {\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n                mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n            }\n    }\n    static angleNeighbours(mol, atom) {\n        let adj = mol.atomAdjList(atom);\n        if (adj.length <= 1)\n            return null;\n        let th = [];\n        for (let n = 0; n < adj.length; n++)\n            th.push(Math.atan2(mol.atomY(adj[n]) - mol.atomY(atom), mol.atomX(adj[n]) - mol.atomX(atom)));\n        if (adj.length == 2) {\n            if (angleDiff(th[1], th[0]) > 0)\n                return adj;\n            return [adj[1], adj[0]];\n        }\n        let idx = Vec.idxSort(th);\n        return Vec.idxGet(adj, idx);\n    }\n    static mergeAtoms(mol, oldN, newN) {\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondFrom(n) == oldN)\n                mol.setBondFrom(n, newN);\n            if (mol.bondTo(n) == oldN)\n                mol.setBondTo(n, newN);\n        }\n        mol.deleteAtomAndBonds(oldN);\n    }\n    static normaliseBondDistances(mol) {\n        const nb = mol.numBonds;\n        if (nb == 0)\n            return;\n        let dsq = [];\n        for (let n = 1; n <= nb; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            dsq.push(norm2_xy(mol.atomX(bto) - mol.atomX(bfr), mol.atomY(bto) - mol.atomY(bfr)));\n        }\n        Vec.sort(dsq);\n        let median = (nb & 1) == 1 ? Math.sqrt(dsq[nb >> 1]) : 0.5 * (Math.sqrt(dsq[nb >> 1]) + Math.sqrt(dsq[(nb >> 1) - 1]));\n        if (median < 0.1 || (median > Molecule.IDEALBOND * 0.9 && median < Molecule.IDEALBOND * 1.1))\n            return;\n        let box = mol.boundary();\n        let cx = box.midX(), cy = box.midY();\n        let scale = Molecule.IDEALBOND / median;\n        for (let n = mol.numAtoms; n >= 1; n--) {\n            let x = (mol.atomX(n) - cx) * scale + cx;\n            let y = (mol.atomY(n) - cy) * scale + cy;\n            mol.setAtomPos(n, x, y);\n        }\n    }\n    static centreMolecule(mol) {\n        if (MolUtil.isBlank(mol))\n            return;\n        let x = MolUtil.arrayAtomX(mol), y = MolUtil.arrayAtomY(mol);\n        let sz = x.length;\n        let invsz = 1.0 / sz;\n        let meanX = Vec.sum(x) * invsz, meanY = Vec.sum(y) * invsz;\n        let closest = Number.POSITIVE_INFINITY;\n        let deltaX = 0, deltaY = 0;\n        for (let n = 0; n < sz; n++) {\n            let dsq = norm2_xy(x[n] - meanX, y[n] - meanY);\n            if (dsq < closest) {\n                deltaX = -x[n];\n                deltaY = -y[n];\n                closest = dsq;\n            }\n        }\n        for (let n = 0; n < sz; n++)\n            mol.setAtomPos(n + 1, x[n] + deltaX, y[n] + deltaY);\n    }\n    static mirrorImage(mol) {\n        mol = mol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            mol.setAtomX(n, -mol.atomX(n));\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                mol.setBondType(n, Molecule.BONDTYPE_INCLINED);\n            else if (mol.bondType(n) == Molecule.BONDTYPE_INCLINED)\n                mol.setBondType(n, Molecule.BONDTYPE_DECLINED);\n        }\n        return mol;\n    }\n    static alignOrientFlip(mol1, idx1, mol2, idx2) {\n        if (idx1.length < 2 || idx1.length != idx2.length)\n            throw 'Invalid mapping indices.';\n        let x0 = mol1.atomX(idx1[0]), y0 = mol1.atomY(idx1[0]);\n        CoordUtil.translateMolecule(mol2, x0 - mol2.atomX(idx2[0]), y0 - mol2.atomY(idx2[0]));\n        const sz = idx1.length - 1;\n        let th1 = [], th2 = [];\n        let deltaA = 0, deltaB = 0;\n        for (let n = 0; n < sz; n++) {\n            th1.push(Math.atan2(mol1.atomY(idx1[n + 1]) - y0, mol1.atomX(idx1[n + 1]) - x0));\n            th2.push(Math.atan2(mol2.atomY(idx2[n + 1]) - y0, mol2.atomX(idx2[n + 1]) - x0));\n            let dthA = angleDiff(th1[n], th2[n]), dthB = angleDiff(th1[n], -th2[n]);\n            if (dthA < -175 * DEGRAD && deltaA > 0)\n                dthA += TWOPI;\n            else if (dthA > 175 * DEGRAD && deltaA < 0)\n                dthA -= TWOPI;\n            if (dthB < -175 * DEGRAD && deltaB > 0)\n                dthB += TWOPI;\n            else if (dthB > 175 * DEGRAD && deltaB < 0)\n                dthB -= TWOPI;\n            deltaA += dthA;\n            deltaB += dthB;\n        }\n        if (sz > 1) {\n            let inv = 1.0 / sz;\n            deltaA *= inv;\n            deltaB *= inv;\n        }\n        let scoreA = 0, scoreB = 0;\n        for (let n = 0; n < sz; n++) {\n            scoreA += Math.abs(angleDiff(th1[n], th2[n] + deltaA));\n            scoreB += Math.abs(angleDiff(th1[n], -th2[n] + deltaB));\n        }\n        if (scoreB < scoreA) {\n            for (let n = 1; n <= mol2.numAtoms; n++)\n                mol2.setAtomY(n, 2 * y0 - mol2.atomY(n));\n            for (let n = 1; n <= mol2.numBonds; n++) {\n                if (mol2.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                    mol2.setBondType(n, Molecule.BONDTYPE_INCLINED);\n                else if (mol2.bondType(n) == Molecule.BONDTYPE_INCLINED)\n                    mol2.setBondType(n, Molecule.BONDTYPE_DECLINED);\n            }\n            CoordUtil.rotateMolecule(mol2, x0, y0, deltaB);\n        }\n        else\n            CoordUtil.rotateMolecule(mol2, x0, y0, deltaA);\n    }\n    static atomIsWeirdLinear(mol, idx) {\n        let bonds = mol.atomAdjBonds(idx);\n        if (bonds.length != 2)\n            return false;\n        for (let n = 0; n < bonds.length; n++)\n            if (mol.bondOrder(bonds[n]) == 3)\n                return false;\n        let adj = mol.atomAdjList(idx);\n        let th1 = Math.atan2(mol.atomY(adj[0]) - mol.atomY(idx), mol.atomX(adj[0]) - mol.atomX(idx));\n        let th2 = Math.atan2(mol.atomY(adj[1]) - mol.atomY(idx), mol.atomX(adj[1]) - mol.atomX(idx));\n        return Math.abs(angleDiff(th1, th2)) >= 175 * DEGRAD;\n    }\n}\nCoordUtil.OVERLAP_THRESHOLD = 0.2;\nCoordUtil.OVERLAP_THRESHOLD_SQ = CoordUtil.OVERLAP_THRESHOLD * CoordUtil.OVERLAP_THRESHOLD;\nCoordUtil.DEFAULT_EQUIV_TOLERANCE = 0.2;\nexport { CoordUtil };\n//# sourceMappingURL=CoordUtil.js.map","import { GeomUtil } from '../util/Geom';\nimport { angleDiff, angleDiffPos, angleNorm, DEGRAD, norm2_xy, norm_xy, sortAngles, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { CoordUtil } from './CoordUtil';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nexport var Geometry;\n(function (Geometry) {\n    Geometry[Geometry[\"Linear\"] = 0] = \"Linear\";\n    Geometry[Geometry[\"Bent\"] = 1] = \"Bent\";\n    Geometry[Geometry[\"Trigonal\"] = 2] = \"Trigonal\";\n    Geometry[Geometry[\"Tetra1\"] = 3] = \"Tetra1\";\n    Geometry[Geometry[\"Tetra2\"] = 4] = \"Tetra2\";\n    Geometry[Geometry[\"SqPlan\"] = 5] = \"SqPlan\";\n    Geometry[Geometry[\"BasePyram\"] = 6] = \"BasePyram\";\n    Geometry[Geometry[\"TrigBip\"] = 7] = \"TrigBip\";\n    Geometry[Geometry[\"Octa1\"] = 8] = \"Octa1\";\n    Geometry[Geometry[\"Octa2\"] = 9] = \"Octa2\";\n})(Geometry || (Geometry = {}));\nclass SketchUtil {\n    static placeNewAtom(mol, el) {\n        let box = mol.boundary();\n        let x = box.maxX() + Molecule.IDEALBOND, y = box.maxY();\n        return mol.addAtom(el, x, y);\n    }\n    static placeNewFragment(mol, frag) {\n        if (frag.numAtoms == 0)\n            return;\n        let dirX = [1, 0, -1, 1, -1, 1, 0, -1], dirY = [1, 1, 1, 0, 0, -1, -1, -1];\n        let dx = Vec.numberArray(0, 8), dy = Vec.numberArray(0, 8), score = Vec.numberArray(0, 8);\n        let mbox = mol.boundary(), fbox = frag.boundary();\n        for (let n = 0; n < 8; n++) {\n            let vx = dirX[n], vy = dirY[n];\n            if (n == 0 || n == 3 || n == 5)\n                dx[n] = mbox.minX() - fbox.maxX();\n            else if (n == 2 || n == 4 || n == 7)\n                dx[n] = mbox.maxX() - fbox.minX();\n            else\n                dx[n] = 0.5 * (mbox.minX() + mbox.maxX() - fbox.minX() - fbox.maxX());\n            if (n == 5 || n == 6 || n == 7)\n                dy[n] = mbox.minY() - fbox.maxY();\n            else if (n == 0 || n == 1 || n == 2)\n                dy[n] = mbox.maxY() - fbox.minY();\n            else\n                dy[n] = 0.5 * (mbox.minY() + mbox.maxY() - fbox.minY() - fbox.maxY());\n            dx[n] -= vx;\n            dy[n] -= vy;\n            score[n] = SketchUtil.fragPosScore(mol, frag, dx[n], dy[n]);\n            vx *= 0.25;\n            vy *= 0.25;\n            for (let iter = 100; iter > 0; iter--) {\n                let iscore = SketchUtil.fragPosScore(mol, frag, dx[n] + vx, dy[n] + vy);\n                if (iscore <= score[n])\n                    break;\n                score[n] = iscore;\n                dx[n] += vx;\n                dy[n] += vy;\n            }\n            for (let iter = 100; iter > 0; iter--)\n                for (let d = 0; d < 8; d++) {\n                    vx = dirX[d] * 0.1;\n                    vy = dirY[d] * 0.1;\n                    let iscore = SketchUtil.fragPosScore(mol, frag, dx[n] + vx, dy[n] + vy);\n                    if (iscore <= score[n])\n                        break;\n                    score[n] = iscore;\n                    dx[n] += vx;\n                    dy[n] += vy;\n                }\n        }\n        let best = 0;\n        for (let n = 1; n < 8; n++)\n            if (score[n] > score[best])\n                best = n;\n        frag = frag.clone();\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomPos(n, frag.atomX(n) + dx[best], frag.atomY(n) + dy[best]);\n        mol.append(frag);\n    }\n    static fragPosScore(mol, frag, dx, dy) {\n        let score = 0;\n        for (let i = 1; i <= mol.numAtoms; i++)\n            for (let j = 1; j <= frag.numAtoms; j++) {\n                let ox = frag.atomX(j) + dx - mol.atomX(i), oy = frag.atomY(j) + dy - mol.atomY(i);\n                let dist2 = ox * ox + oy * oy;\n                if (dist2 < 1)\n                    return 0;\n                score += 1 / dist2;\n            }\n        let mbox = mol.boundary(), fbox = frag.boundary();\n        let minX = Math.min(fbox.minX() + dx, mbox.minX()), maxX = Math.max(fbox.maxX() + dx, mbox.maxX());\n        let minY = Math.min(fbox.minY() + dy, mbox.minY()), maxY = Math.max(fbox.maxY() + dy, mbox.maxY());\n        let rangeX = Math.max(1, maxX - minX), rangeY = Math.max(1, maxY - minY);\n        let ratio = Math.max(rangeX / rangeY, rangeY / rangeX);\n        return score / ratio;\n    }\n    static mergeOverlappingAtoms(mol) {\n        return SketchUtil.mergeFragmentsDiv(mol, 0);\n    }\n    static mergeFragmentsDiv(mol, div) {\n        const na = mol.numAtoms;\n        let omask = CoordUtil.overlappingAtomMask(mol);\n        let chopmask = Vec.booleanArray(false, na);\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        let remap = [];\n        for (let n = 0; n < na; n++)\n            remap.push(n + 1);\n        let div1 = div, div2 = div + 1;\n        if (div == 0)\n            div1 = na;\n        for (let i = 1; i <= div1; i++)\n            if (omask[i - 1] && !chopmask[i - 1]) {\n                if (div == 0)\n                    div2 = i + 1;\n                for (let j = div2; j <= na; j++)\n                    if (omask[j - 1] && !chopmask[j - 1]) {\n                        if (norm2_xy(mx[i - 1] - mx[j - 1], my[i - 1] - my[j - 1]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                            continue;\n                        let oldN = j, newN = i;\n                        let exotic = [0, 0];\n                        for (let k = 0; k < 2; k++) {\n                            let a = k == 0 ? i : j;\n                            exotic[k] = (mol.atomElement(a) == 'C' ? 0 : 1)\n                                + (mol.atomElement(a) == 'X' ? -100 : 0)\n                                + (mol.atomCharge(a) != 0 ? 1 : 0)\n                                + (mol.atomUnpaired(a) != 0 ? 1 : 0)\n                                + (mol.atomIsotope(a) != Molecule.ISOTOPE_NATURAL ? 1 : 0)\n                                + (mol.atomHExplicit(a) != Molecule.HEXPLICIT_UNKNOWN ? 1 : 0)\n                                + (MolUtil.hasAbbrev(mol, a) ? 1000 : 0);\n                        }\n                        if (exotic[1] > exotic[0]) {\n                            oldN = i;\n                            newN = j;\n                        }\n                        for (let n = 1; n <= mol.numBonds; n++) {\n                            if (mol.bondFrom(n) == oldN)\n                                mol.setBondFrom(n, newN);\n                            if (mol.bondTo(n) == oldN)\n                                mol.setBondTo(n, newN);\n                        }\n                        chopmask[oldN - 1] = true;\n                        remap[oldN - 1] = newN;\n                    }\n            }\n        for (let n = na; n >= 1; n--)\n            if (chopmask[n - 1]) {\n                if (n <= div)\n                    div--;\n                mol.deleteAtomAndBonds(n);\n                for (let i = 0; i < na; i++)\n                    if (remap[i] > n)\n                        remap[i]--;\n            }\n        for (let n = mol.numAtoms; n > div; n--)\n            if (mol.atomElement(n) == 'X') {\n                mol.deleteAtomAndBonds(n);\n                for (let i = 0; i < na; i++)\n                    if (remap[i] > n)\n                        remap[i]--;\n            }\n        MolUtil.removeDuplicateBonds(mol);\n        return remap;\n    }\n    static mergeFragmentsMask(mol, mask) {\n        let chopmask = Vec.booleanArray(false, mol.numAtoms);\n        let na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        for (let i = 1; i <= na; i++)\n            if (mask[i - 1])\n                for (let j = 1; j <= na; j++)\n                    if (!mask[j - 1] && !chopmask[j - 1])\n                        if (norm2_xy(mx[i - 1] - mx[j - 1], my[i - 1] - my[j - 1]) < CoordUtil.OVERLAP_THRESHOLD_SQ) {\n                            let oldN = j, newN = i;\n                            if (mol.atomElement(i) == 'C' && mol.atomElement(j) != 'C' && mol.atomElement(j) != 'X')\n                                [oldN, newN] = [i, j];\n                            if (mol.atomHExplicit(newN) == Molecule.HEXPLICIT_UNKNOWN)\n                                mol.setAtomHExplicit(newN, mol.atomHExplicit(oldN));\n                            mol.setAtomUnpaired(newN, mol.atomUnpaired(newN) + mol.atomUnpaired(oldN));\n                            mol.setAtomCharge(newN, mol.atomCharge(newN) + mol.atomCharge(oldN));\n                            mol.setAtomExtra(newN, Vec.concat(mol.atomExtra(oldN), mol.atomExtra(newN)));\n                            for (let n = 1; n <= mol.numBonds; n++) {\n                                if (mol.bondFrom(n) == oldN)\n                                    mol.setBondFrom(n, newN);\n                                if (mol.bondTo(n) == oldN)\n                                    mol.setBondTo(n, newN);\n                            }\n                            chopmask[oldN - 1] = true;\n                        }\n        for (let n = chopmask.length; n >= 1; n--)\n            if (chopmask[n - 1])\n                mol.deleteAtomAndBonds(n);\n        MolUtil.removeDuplicateBonds(mol);\n    }\n    static matchAngleGeometry(geom, theta) {\n        if (theta.length <= 1)\n            return true;\n        let match = SketchUtil.GEOM_ANGLES[geom], mtheta = Vec.numberArray(0, theta.length);\n        let hit = Vec.booleanArray(false, match.length);\n        for (let n = 0; n < theta.length; n++)\n            for (let s = 1; s >= -1; s -= 2) {\n                for (let i = 0; i < theta.length; i++)\n                    mtheta[i] = (theta[i] - theta[0]) * s;\n                Vec.setTo(hit, false);\n                let gotall = true;\n                for (let i = 0; i < mtheta.length; i++) {\n                    let got = false;\n                    for (let j = 0; j < match.length; j++)\n                        if (!hit[j] && Math.abs(angleDiff(mtheta[i], match[j])) < 3 * DEGRAD) {\n                            hit[j] = true;\n                            got = true;\n                            break;\n                        }\n                    if (!got) {\n                        gotall = false;\n                        break;\n                    }\n                }\n                if (gotall)\n                    return true;\n            }\n        return false;\n    }\n    static primeDirections(mol, atom) {\n        let angles = SketchUtil.calculateNewBondAngles(mol, atom, 1);\n        let exits = SketchUtil.exitVectors(mol, atom);\n        return GeomUtil.uniqueAngles(angles.concat(exits), 2 * DEGRAD);\n    }\n    static exitVectors(mol, atom) {\n        let adj = mol.atomAdjList(atom), sz = adj.length;\n        if (sz == 0)\n            return [0, 90 * DEGRAD, 180 * DEGRAD, -90 * DEGRAD];\n        if (sz == 1)\n            return [];\n        let ret = [];\n        let ang = GeomUtil.sortAngles(CoordUtil.atomBondAngles(mol, atom, adj));\n        for (let n = 0; n < sz; n++) {\n            let nn = n < sz - 1 ? n + 1 : 0;\n            ret.push(angleNorm(ang[n] + 0.5 * angleDiffPos(ang[nn], ang[n])));\n        }\n        return ret;\n    }\n    static calculateNewBondAngles(mol, atom, order) {\n        let adj = mol.atomAdjList(atom);\n        const sz = adj.length;\n        if (sz == 0) {\n            let atno = mol.atomicNumber(atom), atblk = Chemistry.ELEMENT_BLOCKS[atno];\n            if (atblk <= 2)\n                return [0, 90 * DEGRAD, 180 * DEGRAD, -90 * DEGRAD];\n            else\n                return [90 * DEGRAD, -90 * DEGRAD, 30 * DEGRAD, 150 * DEGRAD, 210 * DEGRAD, -30 * DEGRAD, 180 * DEGRAD, 0 * DEGRAD];\n        }\n        let geom = SketchUtil.guessAtomGeometry(mol, atom, order);\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        for (let n = 0; n < geom.length; n++) {\n            let ret = SketchUtil.mapAngleSubstituent(geom[n], ang);\n            if (ret != null)\n                return ret;\n        }\n        return [];\n    }\n    static guessAtomGeometry(mol, atom, order) {\n        let adj = mol.atomAdjList(atom);\n        let sz = adj.length, atno = mol.atomicNumber(atom);\n        let atblk = Chemistry.ELEMENT_BLOCKS[atno], elrow = Chemistry.ELEMENT_ROWS[atno];\n        let el = mol.atomElement(atom);\n        let adjBO = [], adjAN = [], pri = [];\n        let allSingle = true;\n        for (let n = 0; n < sz; n++) {\n            adjBO.push(mol.bondOrder(mol.findBond(atom, adj[n])));\n            adjAN.push(mol.atomicNumber(adj[n]));\n            pri.push(adjBO[n] * 200 + adjAN[n]);\n            if (adjBO[n] != 1)\n                allSingle = true;\n        }\n        for (let p = 0; p < sz - 1;) {\n            if (pri[p] > pri[p + 1]) {\n                Vec.swap(adj, p, p + 1);\n                Vec.swap(adjBO, p, p + 1);\n                Vec.swap(adjAN, p, p + 1);\n                Vec.swap(pri, p, p + 1);\n                if (p > 0)\n                    p--;\n            }\n            else\n                p++;\n        }\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        if (sz == 1) {\n            if (el == 'C' || el == 'N') {\n                if (adjBO[0] == 2 && order == 2)\n                    return [Geometry.Linear];\n                if ((adjBO[0] == 3 && order == 1) || (adjBO[0] == 1 && order == 3))\n                    return [Geometry.Linear];\n            }\n            if (atblk > 2)\n                return [Geometry.Octa1, Geometry.Octa2];\n            if (order != 0 && (el == 'C' || el == 'N' || el == 'O'))\n                return [Geometry.Trigonal];\n            return [Geometry.Trigonal, Geometry.Linear];\n        }\n        if (sz == 2 && Math.abs(angleDiff(ang[0], ang[1])) >= 175 * DEGRAD) {\n            if (atblk <= 2)\n                return [Geometry.SqPlan];\n            else\n                return [Geometry.Octa1, Geometry.Octa2];\n        }\n        let geom = [];\n        if (atblk == 0)\n            geom = [Geometry.Trigonal, Geometry.SqPlan];\n        else if (atblk == 1)\n            geom = [Geometry.Trigonal, Geometry.SqPlan, Geometry.Octa1, Geometry.Octa2];\n        else if (atblk == 2) {\n            geom.push(Geometry.Trigonal);\n            if (el == 'C' && allSingle) {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n            }\n            else if (el == 'C' && !allSingle) {\n            }\n            else if (elrow <= 3) {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n            }\n            else {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n                geom.push(Geometry.Octa1);\n                geom.push(Geometry.Octa2);\n            }\n        }\n        else {\n            geom.push(Geometry.Octa1);\n            geom.push(Geometry.Octa2);\n        }\n        for (let n = geom.length - 1; n >= 0; n--) {\n            if (!SketchUtil.matchAngleGeometry(geom[n], ang))\n                geom.splice(n, 1);\n        }\n        return geom;\n    }\n    static mapAngleSubstituent(geom, ang) {\n        let gtheta = SketchUtil.GEOM_ANGLES[geom];\n        const asz = ang.length, gsz = gtheta.length;\n        if (asz >= gsz)\n            return null;\n        if (asz == 0)\n            return gtheta.slice(0);\n        let vac = [];\n        for (let n = 0; n < asz; n++)\n            for (let k = 0; k < gsz; k++)\n                for (let s = 1; s >= -1; s -= 2) {\n                    let gang = [];\n                    for (let i = 0; i < gsz; i++)\n                        gang.push(angleNorm(ang[n] + s * (gtheta[i] - gtheta[k])));\n                    let mask = Vec.booleanArray(false, gsz);\n                    let mcount = 0;\n                    for (let i = 0; i < gsz; i++)\n                        if (!mask[i])\n                            for (let j = 0; j < asz; j++)\n                                if (Math.abs(angleDiff(gang[i], ang[j])) < 3 * DEGRAD) {\n                                    mask[i] = true;\n                                    mcount++;\n                                    break;\n                                }\n                    if (mcount != asz)\n                        continue;\n                    for (let i = 0; i < gsz; i++)\n                        if (!mask[i])\n                            vac.push(gang[i]);\n                }\n        if (vac.length == 0)\n            return null;\n        vac = GeomUtil.sortAngles(vac);\n        for (let n = 0; n < vac.length - 1; n++) {\n            let th1 = vac[n], th2 = vac[n + 1], dth = angleDiff(th2, th1);\n            if (Math.abs(dth) < 5 * DEGRAD) {\n                vac[n] = th1 + 0.5 * dth;\n                vac.splice(n + 1, 1);\n                n--;\n            }\n        }\n        return vac;\n    }\n    static refitAtomGeometry(mol, atom, geom) {\n        let gtheta = SketchUtil.GEOM_ANGLES[geom];\n        let gsz = gtheta.length;\n        let adj = mol.atomAdjList(atom);\n        let asz = adj.length;\n        if (asz <= 1 || asz > gsz)\n            return null;\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        let inRing = Vec.booleanArray(false, asz);\n        let allInRing = true;\n        for (let n = 0; n < asz; n++) {\n            inRing[n] = mol.bondInRing(mol.findBond(atom, adj[n]));\n            if (!inRing[n])\n                allInRing = false;\n        }\n        if (allInRing)\n            return null;\n        let bestAng = null;\n        let bestScore = 0;\n        let ww = MolUtil.calculateWalkWeight(mol, atom);\n        for (let i = 0; i < gsz; i++)\n            for (let j = 0; j < asz; j++)\n                for (let s = 1; s >= -1; s -= 2) {\n                    let newAng = Vec.numberArray(0, asz);\n                    let mask = Vec.booleanArray(false, gsz);\n                    for (let n1 = 0; n1 < asz; n1++) {\n                        let best = -1;\n                        let bdiff = 0;\n                        for (let n2 = 0; n2 < gsz; n2++)\n                            if (!mask[n2]) {\n                                let th = angleNorm(gtheta[n2] * s - gtheta[i] + ang[j]);\n                                let diff = Math.abs(angleDiff(th, ang[n1]));\n                                if (best < 0 || diff < bdiff) {\n                                    best = n2;\n                                    bdiff = diff;\n                                    newAng[n1] = th;\n                                }\n                            }\n                        mask[best] = true;\n                    }\n                    let ringClash = false;\n                    for (let n = 0; n < asz; n++)\n                        if (inRing[n] && Math.abs(angleDiff(newAng[n], ang[n])) > 2 * DEGRAD) {\n                            ringClash = true;\n                            break;\n                        }\n                    if (ringClash)\n                        continue;\n                    let score = 0;\n                    for (let n = 0; n < asz; n++)\n                        score += ww[adj[n] - 1] * Math.abs(angleDiff(newAng[n], ang[n]));\n                    if (bestAng == null || score < bestScore) {\n                        bestAng = newAng;\n                        bestScore = score;\n                    }\n                }\n        if (bestAng == null)\n            return null;\n        let same = true;\n        for (let n = 0; n < asz; n++)\n            if (Math.abs(angleDiff(bestAng[n], ang[n])) > 2 * DEGRAD) {\n                same = false;\n                break;\n            }\n        if (same)\n            return null;\n        mol = mol.clone();\n        for (let n = 0; n < asz; n++)\n            if (!inRing[n])\n                CoordUtil.rotateBond(mol, atom, adj[n], bestAng[n] - ang[n]);\n        return mol;\n    }\n    static switchAtomGeometry(mol, src, dst, geoms) {\n        let bestAtom = 0;\n        let bestAng = 0, bestX = 0, bestY = 0;\n        let adj = mol.atomAdjList(src);\n        let ang = CoordUtil.atomBondAngles(mol, src, adj), theta = Vec.numberArray(0, ang.length - 1);\n        let cx = mol.atomX(src), cy = mol.atomY(src);\n        for (let i = 0; i < dst.length; i++) {\n            let a = adj.indexOf(dst[i]);\n            let curth = ang[a];\n            for (let n = 0, p = 0; n < adj.length; n++)\n                if (n != a)\n                    theta[p++] = ang[n];\n            let r = norm_xy(mol.atomX(dst[i]) - cx, mol.atomY(dst[i]) - cy);\n            for (let j = 0; j < geoms.length; j++) {\n                if (adj.length >= SketchUtil.GEOM_ANGLES[geoms[j]].length)\n                    continue;\n                let newAng = SketchUtil.mapAngleSubstituent(geoms[j], theta);\n                if (newAng != null)\n                    for (let n = 0; n < newAng.length; n++) {\n                        let dth = angleDiff(newAng[n], curth);\n                        if (Math.abs(dth) < 3 * DEGRAD)\n                            continue;\n                        if (dth < 0)\n                            dth += TWOPI;\n                        if (bestAtom == 0 || dth < bestAng - 2 * DEGRAD || (dth < bestAng + 2 * DEGRAD && dst[i] < bestAtom)) {\n                            let x = cx + r * Math.cos(newAng[n]);\n                            let y = cy + r * Math.sin(newAng[n]);\n                            if (CoordUtil.atomAtPoint(mol, x, y) != 0)\n                                continue;\n                            bestAtom = dst[i];\n                            bestAng = dth;\n                            bestX = x;\n                            bestY = y;\n                        }\n                    }\n                break;\n            }\n        }\n        if (bestAtom == 0)\n            return null;\n        mol = mol.clone();\n        mol.setAtomPos(bestAtom, bestX, bestY);\n        return mol;\n    }\n    static pickAtomsToConnect(mol, aidx) {\n        if (aidx.length < 2)\n            return null;\n        if (aidx.length == 2) {\n            if (mol.findBond(aidx[0], aidx[1]) > 0)\n                return null;\n            return aidx;\n        }\n        const AUTO_DSQ = sqr(Molecule.IDEALBOND + 0.1);\n        let bestDSQ = Number.MAX_VALUE;\n        let bestA1 = 0, bestA2 = 0;\n        let conn = [];\n        for (let i = 0; i < aidx.length - 1; i++)\n            for (let j = i + 1; j < aidx.length; j++) {\n                if (mol.findBond(aidx[i], aidx[j]) > 0)\n                    continue;\n                let dsq = norm2_xy(mol.atomX(aidx[i]) - mol.atomX(aidx[j]), mol.atomY(aidx[i]) - mol.atomY(aidx[j]));\n                if (dsq < AUTO_DSQ) {\n                    conn.push(aidx[i]);\n                    conn.push(aidx[j]);\n                }\n                else if (dsq < bestDSQ) {\n                    bestDSQ = dsq;\n                    bestA1 = aidx[i];\n                    bestA2 = aidx[j];\n                }\n            }\n        if (conn.length == 0 && bestA1 != 0) {\n            conn.push(bestA1);\n            conn.push(bestA2);\n        }\n        return conn.length == 0 ? null : conn;\n    }\n    static pickNewAtomDirection(mol, atom, theta) {\n        if (theta.length == 1)\n            return theta[0];\n        let bestTheta = theta[0], bestScore = Number.MAX_VALUE;\n        for (let n = 0; n < theta.length; n++) {\n            let px = mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(theta[n]);\n            let py = mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(theta[n]);\n            let score = CoordUtil.congestionPoint(mol, px, py);\n            if (score > bestScore)\n                continue;\n            if (CoordUtil.overlapsAtom(mol, px, py, 0.2))\n                score += 1E5;\n            if (score < bestScore) {\n                bestTheta = theta[n];\n                bestScore = score;\n            }\n        }\n        return bestTheta;\n    }\n    static joinOverlappingAtoms(mol, mask) {\n        mol = mol.clone();\n        mask = mask.slice(0);\n        const na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        let groups = [];\n        let groupX = [], groupY = [];\n        for (let i = 0; i < na - 1; i++)\n            if (mask[i]) {\n                let g = [i + 1];\n                let x = mx[i], y = my[i];\n                for (let j = i + 1; j < na; j++)\n                    if (mask[j]) {\n                        if (norm2_xy(mx[j] - mx[i], my[j] - my[i]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                            continue;\n                        g.push(j + 1);\n                        x += mx[j];\n                        y += my[j];\n                        let adjb = mol.atomAdjBonds(j + 1);\n                        for (let n = 0; n < adjb.length; n++) {\n                            if (mol.bondFrom(adjb[n]) == j + 1)\n                                mol.setBondFrom(adjb[n], i + 1);\n                            else if (mol.bondTo(adjb[n]) == j + 1)\n                                mol.setBondTo(adjb[n], i + 1);\n                        }\n                    }\n                if (g.length == 1)\n                    continue;\n                groups.push(g);\n                groupX.push(x / g.length);\n                groupY.push(y / g.length);\n            }\n        if (groups.length == 0)\n            return null;\n        let keepmask = Vec.booleanArray(true, na);\n        for (let n = 0; n < groups.length; n++) {\n            let g = groups[n];\n            mol.setAtomPos(g[0], groupX[n], groupY[n]);\n            for (let i = 1; i < g.length; i++)\n                keepmask[g[i] - 1] = false;\n        }\n        mol = MolUtil.subgraphMask(mol, keepmask);\n        MolUtil.removeDuplicateBonds(mol);\n        return mol;\n    }\n    static moveToEdge(mol, mask, dx, dy) {\n        let gotS = false, gotN = false;\n        let sx1 = 0, sy1 = 0, sx2 = 0, sy2 = 0;\n        let nx1 = 0, ny1 = 0, nx2 = 0, ny2 = 0;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n), y = mol.atomY(n);\n            if (mask[n - 1]) {\n                if (!gotS || x < sx1)\n                    sx1 = x;\n                if (!gotS || y < sy1)\n                    sy1 = y;\n                if (!gotS || x > sx2)\n                    sx2 = x;\n                if (!gotS || y > sy2)\n                    sy2 = y;\n                gotS = true;\n            }\n            else {\n                if (!gotN || x < nx1)\n                    nx1 = x;\n                if (!gotN || y < ny1)\n                    ny1 = y;\n                if (!gotN || x > nx2)\n                    nx2 = x;\n                if (!gotN || y > ny2)\n                    ny2 = y;\n                gotN = true;\n            }\n        }\n        const SEPARATE = 1.0, SEPTEST = 0.9;\n        if ((dx < 0 && dy == 0 && sx2 <= nx1 - SEPTEST) ||\n            (dx > 0 && dy == 0 && sx1 >= nx2 + SEPTEST) ||\n            (dx == 0 && dy < 0 && sy2 <= ny1 - SEPTEST) ||\n            (dx == 0 && dy > 0 && sy1 >= ny2 + SEPTEST)) {\n            return null;\n        }\n        mol = mol.clone();\n        let ox = 0, oy = 0;\n        if (dx < 0)\n            ox = nx1 - sx2 - SEPARATE;\n        if (dx > 0)\n            ox = nx2 - sx1 + SEPARATE;\n        if (dy < 0)\n            oy = ny1 - sy2 - SEPARATE;\n        if (dy > 0)\n            oy = ny2 - sy1 + SEPARATE;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1])\n                mol.setAtomPos(n, mol.atomX(n) + ox, mol.atomY(n) + oy);\n        return mol;\n    }\n    static placeAdditionalHydrogens(mol, atom, numH) {\n        let base = mol.numAtoms;\n        const x0 = mol.atomX(atom), y0 = mol.atomY(atom);\n        let adj = mol.atomAdjList(atom);\n        if (adj.length == 2 && numH == 2) {\n            const th1 = Math.atan2(mol.atomY(adj[0]) - y0, mol.atomX(adj[0]) - x0);\n            const th2 = Math.atan2(mol.atomY(adj[1]) - y0, mol.atomX(adj[1]) - x0);\n            if (Math.abs(angleDiff(th1, th2)) < 170 * DEGRAD) {\n                let theta = 0.5 * (th1 + th2) + Math.PI;\n                let th3 = theta - 30 * DEGRAD, th4 = theta + 30 * DEGRAD;\n                mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th3), y0 + Molecule.IDEALBOND * Math.sin(th3));\n                mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th4), y0 + Molecule.IDEALBOND * Math.sin(th4));\n                mol.addBond(atom, base + 1, 1);\n                mol.addBond(atom, base + 2, 1);\n                return;\n            }\n        }\n        if (adj.length == 1 && numH == 3) {\n            let th1 = Math.atan2(mol.atomY(adj[0]) - y0, mol.atomX(adj[0]) - x0);\n            let th2 = th1 + 90 * DEGRAD, th3 = th1 + 180 * DEGRAD, th4 = th1 + 270 * DEGRAD;\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th2), y0 + Molecule.IDEALBOND * Math.sin(th2));\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th3), y0 + Molecule.IDEALBOND * Math.sin(th3));\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th4), y0 + Molecule.IDEALBOND * Math.sin(th4));\n            mol.addBond(atom, base + 1, 1);\n            mol.addBond(atom, base + 2, 1);\n            mol.addBond(atom, base + 3, 1);\n            return;\n        }\n        let theta = SketchUtil.pickNewAtomDirection(mol, atom, SketchUtil.primeDirections(mol, atom));\n        mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(theta), y0 + Molecule.IDEALBOND * Math.sin(theta));\n        mol.addBond(atom, base + 1, 1);\n        if (numH > 1)\n            SketchUtil.placeAdditionalHydrogens(mol, atom, numH - 1);\n    }\n    static allViableDirections(mol, atom, order) {\n        if (mol.atomAdjCount(atom) == 0) {\n            let angles = [];\n            for (let n = 0; n < 12; n++)\n                angles.push(30 * DEGRAD);\n            return angles;\n        }\n        let adj = mol.atomAdjList(atom);\n        let angles = SketchUtil.exitVectors(mol, atom);\n        let geom = SketchUtil.guessAtomGeometry(mol, atom, order);\n        if (adj.length == 1 && geom.indexOf(Geometry.Linear) < 0)\n            geom.push(Geometry.Linear);\n        let bndang = CoordUtil.atomBondAngles(mol, atom, adj);\n        for (let g of geom) {\n            let map = SketchUtil.mapAngleSubstituent(g, bndang);\n            if (map != null)\n                for (let th of map)\n                    angles.push(th);\n        }\n        return GeomUtil.uniqueAngles(angles, 2 * DEGRAD);\n    }\n    static proposeNewRing(mol, rsz, x, y, dx, dy, snap) {\n        let theta = dy == 0 && dx == 0 ? 0.5 * Math.PI : Math.atan2(dy, dx);\n        if (snap) {\n            const chunk = 30 * DEGRAD;\n            theta = Math.round(theta / chunk) * chunk;\n        }\n        return SketchUtil.positionSimpleRing(mol, rsz, x, y, theta);\n    }\n    static proposeAtomRing(mol, rsz, atom, dx, dy) {\n        let thsnap = [];\n        let cx = mol.atomX(atom), cy = mol.atomY(atom);\n        if (mol.atomAdjCount(atom) == 0) {\n            for (let n = 0; n < 12; n++)\n                thsnap.push(TWOPI * n / 12);\n        }\n        else if (mol.atomAdjCount(atom) == 1) {\n            let nbr = mol.atomAdjList(atom)[0];\n            thsnap.push(angleNorm(Math.atan2(mol.atomY(nbr) - cy, mol.atomX(nbr) - cx) + Math.PI));\n        }\n        else {\n            let angs = [];\n            for (let nbr of mol.atomAdjList(atom))\n                angs.push(Math.atan2(mol.atomY(nbr) - cy, mol.atomX(nbr) - cx));\n            angs = sortAngles(angs);\n            for (let n = 0; n < angs.length; n++) {\n                let th1 = angs[n], th2 = angs[n < angs.length - 1 ? n + 1 : 0];\n                thsnap.push(th1 + 0.5 * angleDiffPos(th2, th1));\n            }\n        }\n        let theta = Math.atan2(dy, dx);\n        let bestTheta = 0, bestDelta = Number.MAX_VALUE;\n        for (let th of thsnap) {\n            let delta = Math.abs(angleDiff(th, theta));\n            if (delta < bestDelta) {\n                bestTheta = th;\n                bestDelta = delta;\n            }\n        }\n        return SketchUtil.positionSimpleRing(mol, rsz, mol.atomX(atom), mol.atomY(atom), bestTheta);\n    }\n    static proposeBondRing(mol, rsz, bond, dx, dy) {\n        let bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        let bx = mol.atomX(bto) - mol.atomX(bfr), by = mol.atomY(bto) - mol.atomY(bfr);\n        let sign = dx * by - dy * bx;\n        let delta = sign > 0 ? -90 * DEGRAD : 90 * DEGRAD;\n        let theta = Math.atan2(by, bx) + delta;\n        let dth = TWOPI / rsz;\n        let rad = Molecule.IDEALBOND / (2.0 * Math.sin(0.5 * dth)), brad = rad * Math.cos(0.5 * dth);\n        let cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto)) + brad * Math.cos(theta);\n        let cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto)) + brad * Math.sin(theta);\n        let rx = [], ry = [];\n        for (let n = 0; n < rsz; n++) {\n            let th = theta - Math.PI + (n - 0.5) * dth;\n            rx.push(cx + Math.cos(th) * rad);\n            ry.push(cy + Math.sin(th) * rad);\n        }\n        let [i1, i2] = sign < 0 ? [bfr, bto] : [bto, bfr];\n        rx[0] = mol.atomX(i1);\n        ry[0] = mol.atomY(i1);\n        rx[1] = mol.atomX(i2);\n        ry[1] = mol.atomY(i2);\n        return [rx, ry];\n    }\n    static positionSimpleRing(mol, rsz, x, y, theta) {\n        let dth = TWOPI / rsz;\n        let rad = Molecule.IDEALBOND / (2 * Math.sin(0.5 * dth));\n        let cx = x + rad * Math.cos(theta), cy = y + rad * Math.sin(theta);\n        let rx = [], ry = [];\n        for (let n = 0; n < rsz; n++) {\n            let th = theta - Math.PI + n * dth;\n            rx.push(cx + Math.cos(th) * rad);\n            ry.push(cy + Math.sin(th) * rad);\n        }\n        return [rx, ry];\n    }\n    static guidelineSprouts(mol, atom) {\n        let sprouts = [];\n        let angs = [], ords = [];\n        for (let n = 0; n < 3; n++) {\n            angs.push(SketchUtil.allViableDirections(mol, atom, n + 1));\n            ords.push([n + 1]);\n            for (let i = 0; i < n; i++)\n                if (angs[i] != null && Vec.equals(angs[n], angs[i])) {\n                    angs[n] = null;\n                    ords[i].push(n + 1);\n                }\n        }\n        const cx = mol.atomX(atom), cy = mol.atomY(atom);\n        for (let n = 0; n < 3; n++)\n            if (angs[n] != null) {\n                let sprout = {\n                    atom: atom,\n                    orders: ords[n],\n                    x: [],\n                    y: [],\n                };\n                for (let i = 0; i < angs[n].length; i++) {\n                    sprout.x[i] = cx + Math.cos(angs[n][i]) * Molecule.IDEALBOND;\n                    sprout.y[i] = cy + Math.sin(angs[n][i]) * Molecule.IDEALBOND;\n                }\n                sprouts.push(sprout);\n            }\n        return sprouts;\n    }\n}\nSketchUtil.GEOM_ANGLES = [\n    [0, 180 * DEGRAD],\n    [0, 120 * DEGRAD],\n    [0, 120 * DEGRAD, 240 * DEGRAD],\n    [0, 90 * DEGRAD, 150 * DEGRAD, 240 * DEGRAD],\n    [0, 120 * DEGRAD, 180 * DEGRAD, 240 * DEGRAD],\n    [0, 90 * DEGRAD, 180 * DEGRAD, 270 * DEGRAD],\n    [0, 90 * DEGRAD, 150 * DEGRAD, 210 * DEGRAD, 270 * DEGRAD],\n    [0, 60 * DEGRAD, 90 * DEGRAD, 180 * DEGRAD, 210 * DEGRAD],\n    [0, 60 * DEGRAD, 120 * DEGRAD, 180 * DEGRAD, 240 * DEGRAD, 300 * DEGRAD],\n    [0, 45 * DEGRAD, 90 * DEGRAD, 180 * DEGRAD, 225 * DEGRAD, 270 * DEGRAD]\n];\nexport { SketchUtil };\n//# sourceMappingURL=SketchUtil.js.map","import { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { CoordUtil } from './CoordUtil';\nimport { Graph } from './Graph';\nimport { Molecule } from './Molecule';\nimport { PolymerBlock } from '../mol/PolymerBlock';\nimport { SketchUtil } from './SketchUtil';\nclass MolUtil {\n    static isBlank(mol) {\n        if (mol == null)\n            return true;\n        return mol.numAtoms == 0;\n    }\n    static notBlank(mol) {\n        if (mol == null)\n            return false;\n        return mol.numAtoms > 0;\n    }\n    static orBlank(mol) { return mol == null ? new Molecule() : mol; }\n    static hasAnyAbbrev(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n))\n                return true;\n        return false;\n    }\n    static hasAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra == null ? 0 : extra.length); n++)\n            if (extra[n].startsWith('a'))\n                return true;\n        return false;\n    }\n    static getAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                return Molecule.fromString(extra[n].substring(1));\n            }\n        return null;\n    }\n    static setAbbrev(mol, atom, frag) {\n        let attidx = 0;\n        for (let n = 1; n <= frag.numAtoms; n++)\n            if (frag.atomElement(n) == MolUtil.ABBREV_ATTACHMENT) {\n                attidx = n;\n                break;\n            }\n        if (attidx == 0)\n            throw 'No attachment points indicated.';\n        if (attidx >= 2) {\n            frag = frag.clone();\n            frag.swapAtoms(attidx, 1);\n        }\n        let adj = mol.atomAdjList(atom);\n        if (adj.length > 1)\n            throw 'Setting abbreviation for non-terminal atom.';\n        if (frag.atomAdjCount(1) == 1 && mol.atomAdjCount(atom) > 0) {\n            let b1 = mol.findBond(atom, mol.atomAdjList(atom)[0]);\n            let b2 = frag.findBond(1, frag.atomAdjList(1)[0]);\n            mol.setBondOrder(b1, frag.bondOrder(b2));\n        }\n        let extra = mol.atomExtra(atom);\n        let idx = -1;\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                idx = n;\n                break;\n            }\n        if (idx < 0)\n            idx = extra.push(null) - 1;\n        extra[idx] = 'a' + frag.toString();\n        mol.setAtomExtra(atom, extra);\n    }\n    static validateAbbrevs(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                if (mol.atomAdjCount(n) > 1)\n                    MolUtil.clearAbbrev(mol, n);\n                if (mol.atomCharge(n) != 0)\n                    mol.setAtomCharge(n, 0);\n                if (mol.atomUnpaired(n) != 0)\n                    mol.setAtomUnpaired(n, 0);\n                if (mol.atomIsotope(n) != 0)\n                    mol.setAtomIsotope(n, Molecule.ISOTOPE_NATURAL);\n                if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN)\n                    mol.setAtomHExplicit(n, Molecule.HEXPLICIT_UNKNOWN);\n            }\n    }\n    static convertToAbbrev(mol, srcmask, abbrevName) {\n        let molidx = this.convertToAbbrevIndex(mol, srcmask, abbrevName);\n        return molidx ? molidx[0] : null;\n    }\n    static convertToAbbrevIndex(mol, srcmask, abbrevName) {\n        let junction = 0;\n        let polymerExtra = null;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let b1 = mol.bondFrom(n), b2 = mol.bondTo(n), atom = 0;\n            if (srcmask[b1 - 1] && !srcmask[b2 - 1]) {\n                atom = b1;\n                polymerExtra = PolymerBlock.getPolymerExtensions(mol, b2);\n            }\n            else if (!srcmask[b1 - 1] && srcmask[b2 - 1]) {\n                atom = b2;\n                polymerExtra = PolymerBlock.getPolymerExtensions(mol, b1);\n            }\n            if (atom == 0)\n                continue;\n            if (junction > 0 && atom != junction)\n                return [null, null];\n            junction = atom;\n        }\n        if (junction == 0)\n            return [null, null];\n        let na = mol.numAtoms, molidx = 0, fragidx = 0;\n        let maskmol = Vec.booleanArray(false, na), maskfrag = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++) {\n            maskmol[n] = srcmask[n];\n            maskfrag[n] = !srcmask[n] || n + 1 == junction;\n            if (maskmol[n] && n + 1 <= junction)\n                molidx++;\n            if (maskfrag[n] && n + 1 <= junction)\n                fragidx++;\n        }\n        let bondType = Molecule.BONDTYPE_NORMAL, nadj = 0;\n        for (let a of mol.atomAdjList(junction))\n            if (!srcmask[a - 1]) {\n                if (nadj != 0) {\n                    bondType = Molecule.BONDTYPE_NORMAL;\n                    break;\n                }\n                let b = mol.findBond(junction, a);\n                if (mol.bondFrom(b) == junction)\n                    bondType = mol.bondType(b);\n                nadj++;\n            }\n        let frag = MolUtil.subgraphMask(mol, maskfrag);\n        frag.setAtomElement(fragidx, MolUtil.ABBREV_ATTACHMENT);\n        frag.setAtomCharge(fragidx, 0);\n        frag.setAtomUnpaired(fragidx, 0);\n        frag.setAtomHExplicit(fragidx, Molecule.HEXPLICIT_UNKNOWN);\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomMapNum(n, 0);\n        frag.setAtomExtra(fragidx, []);\n        frag.setAtomTransient(fragidx, []);\n        let adj = frag.atomAdjList(fragidx);\n        let x = 0, y = 0, inv = 1.0 / adj.length;\n        let bondOrder = 1;\n        for (let n = 0; n < adj.length; n++) {\n            x += frag.atomX(adj[n]);\n            y += frag.atomY(adj[n]);\n            let b = frag.findBond(fragidx, adj[n]);\n            if (n == 0)\n                bondOrder = frag.bondOrder(b);\n            else if (bondOrder != frag.bondOrder(b))\n                bondOrder = 1;\n        }\n        x *= inv;\n        y *= inv;\n        if (fragidx > 1)\n            frag.swapAtoms(fragidx, 1);\n        let newmol = MolUtil.subgraphMask(mol, maskmol);\n        let newatom = newmol.addAtom(abbrevName, x, y);\n        newmol.addBond(molidx, newatom, bondOrder, bondType);\n        MolUtil.setAbbrev(newmol, newatom, frag);\n        if (polymerExtra != null)\n            newmol.setAtomExtra(newatom, Vec.concat(newmol.atomExtra(newatom), polymerExtra));\n        return [newmol, newatom];\n    }\n    static expandAbbrevs(mol, alignCoords) {\n        while (true) {\n            let anything = false;\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (MolUtil.hasAbbrev(mol, n)) {\n                    if (MolUtil.expandOneAbbrev(mol, n, alignCoords))\n                        anything = true;\n                    n--;\n                }\n            if (!anything)\n                break;\n        }\n    }\n    static expandedAbbrevs(mol) {\n        if (!this.hasAnyAbbrev(mol))\n            return mol;\n        mol = mol.clone();\n        this.expandAbbrevs(mol, true);\n        return mol;\n    }\n    static expandOneAbbrev(mol, atom, alignCoords) {\n        let frag = MolUtil.getAbbrev(mol, atom);\n        if (frag == null)\n            return null;\n        if (mol.atomAdjCount(atom) != 1 || frag.numAtoms == 0) {\n            MolUtil.clearAbbrev(mol, atom);\n            return null;\n        }\n        let m = mol.atomMapNum(atom);\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomMapNum(n, 0);\n        if (m > 0)\n            for (let n of frag.atomAdjList(1))\n                frag.setAtomMapNum(n, m);\n        return MolUtil.expandOneAbbrevFrag(mol, atom, frag, alignCoords);\n    }\n    static expandOneAbbrevFrag(mol, atom, frag, alignCoords) {\n        let polymerExtra = PolymerBlock.getPolymerExtensions(mol, atom);\n        let nbr = mol.atomAdjCount(atom) == 1 ? mol.atomAdjList(atom)[0] : 0;\n        let connBond = mol.findBond(atom, nbr), connType = Molecule.BONDTYPE_NORMAL;\n        if (connBond > 0) {\n            connType = mol.bondType(connBond);\n            if (mol.bondFrom(connBond) != nbr && (connType == Molecule.BONDTYPE_INCLINED || connType == Molecule.BONDTYPE_DECLINED))\n                connType = Molecule.BONDTYPE_NORMAL;\n        }\n        if (alignCoords) {\n            let vx1 = mol.atomX(atom) - mol.atomX(nbr), vy1 = mol.atomY(atom) - mol.atomY(nbr);\n            let adj = frag.atomAdjList(1);\n            let vx2 = 0, vy2 = 0, inv = 1.0 / adj.length;\n            for (let n = 0; n < adj.length; n++) {\n                vx2 += frag.atomX(adj[n]) - frag.atomX(1);\n                vy2 += frag.atomY(adj[n]) - frag.atomY(1);\n            }\n            vx2 *= inv;\n            vy2 *= inv;\n            let th1 = Math.atan2(vy1, vx1), th2 = Math.atan2(vy2, vx2);\n            CoordUtil.rotateMolecule(frag, th1 - th2);\n            CoordUtil.translateMolecule(frag, mol.atomX(nbr) - frag.atomX(1), mol.atomY(nbr) - frag.atomY(1));\n        }\n        if (polymerExtra != null) {\n            for (let n = 1; n <= frag.numAtoms; n++) {\n                let extra = frag.atomExtra(n);\n                for (let i = extra.length - 1; i >= 0; i--)\n                    if (polymerExtra.indexOf(extra[i]) >= 0)\n                        extra.splice(i, 1);\n                frag.setAtomExtra(n, Vec.concat(extra, polymerExtra));\n            }\n        }\n        let join = mol.numAtoms + 1;\n        mol.append(frag);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondFrom(n) == join) {\n                mol.setBondFrom(n, nbr);\n                mol.setBondType(n, connType);\n            }\n            else if (mol.bondTo(n) == join) {\n                mol.setBondFromTo(n, nbr, mol.bondFrom(n));\n                mol.setBondType(n, connType);\n            }\n        }\n        let mask = Vec.booleanArray(false, mol.numAtoms);\n        for (let n = mask.length - frag.numAtoms; n < mask.length; n++)\n            mask[n] = true;\n        mol.deleteAtomAndBonds(join);\n        mol.deleteAtomAndBonds(atom);\n        mask.splice(join - 1, 1);\n        mask.splice(atom - 1, 1);\n        return mask;\n    }\n    static clearAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                extra.splice(n, 1);\n                mol.setAtomExtra(atom, extra);\n                mol.setAtomElement(atom, 'C');\n                return;\n            }\n    }\n    static setAtomElement(mol, atom, el) {\n        if (mol.atomElement(atom) == el)\n            return;\n        this.clearAbbrev(mol, atom);\n        mol.setAtomElement(atom, el);\n    }\n    static addBond(mol, bfr, bto, order, type) {\n        if (type == null)\n            type = Molecule.BONDTYPE_NORMAL;\n        if (mol.atomAdjCount(bfr) >= 1)\n            this.clearAbbrev(mol, bfr);\n        if (mol.atomAdjCount(bto) >= 1)\n            this.clearAbbrev(mol, bto);\n        let b = mol.findBond(bfr, bto);\n        if (b > 0)\n            mol.deleteBond(b);\n        return mol.addBond(bfr, bto, order, type);\n    }\n    static subgraphMask(mol, mask) {\n        let invidx = [];\n        let sum = 0;\n        for (let n = 0; n < mol.numAtoms; n++) {\n            if (mask[n])\n                invidx.push(++sum);\n            else\n                invidx.push(0);\n        }\n        if (sum == 0)\n            return new Molecule();\n        if (sum == mol.numAtoms)\n            return mol.clone();\n        let frag = new Molecule();\n        frag.keepTransient = true;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let num = frag.addAtom(mol.atomElement(n), mol.atomX(n), mol.atomY(n), mol.atomCharge(n), mol.atomUnpaired(n));\n                frag.setAtomIsotope(num, mol.atomIsotope(n));\n                frag.setAtomHExplicit(num, mol.atomHExplicit(n));\n                frag.setAtomMapNum(num, mol.atomMapNum(n));\n                frag.setAtomExtra(num, mol.atomExtra(n));\n                frag.setAtomTransient(num, mol.atomTransient(n));\n            }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = invidx[mol.bondFrom(n) - 1], bto = invidx[mol.bondTo(n) - 1];\n            if (bfr > 0 && bto > 0) {\n                let num = frag.addBond(bfr, bto, mol.bondOrder(n), mol.bondType(n));\n                frag.setBondExtra(num, mol.bondExtra(n));\n                frag.setBondTransient(num, mol.bondTransient(n));\n            }\n        }\n        frag.keepTransient = mol.keepTransient;\n        return frag;\n    }\n    static subgraphIndex(mol, idx) {\n        let invidx = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 0; n < invidx.length; n++)\n            invidx[n] = 0;\n        for (let n = 0; n < idx.length; n++)\n            invidx[idx[n] - 1] = n + 1;\n        let frag = new Molecule();\n        frag.keepTransient = true;\n        for (let n = 0; n < idx.length; n++) {\n            let num = frag.addAtom(mol.atomElement(idx[n]), mol.atomX(idx[n]), mol.atomY(idx[n]), mol.atomCharge(idx[n]), mol.atomUnpaired(idx[n]));\n            frag.setAtomIsotope(num, mol.atomIsotope(idx[n]));\n            frag.setAtomHExplicit(num, mol.atomHExplicit(idx[n]));\n            frag.setAtomMapNum(num, mol.atomMapNum(idx[n]));\n            frag.setAtomExtra(num, mol.atomExtra(idx[n]));\n            frag.setAtomTransient(num, mol.atomTransient(idx[n]));\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = invidx[mol.bondFrom(n) - 1], bto = invidx[mol.bondTo(n) - 1];\n            if (bfr > 0 && bto > 0) {\n                let num = frag.addBond(bfr, bto, mol.bondOrder(n), mol.bondType(n));\n                frag.setBondExtra(num, mol.bondExtra(n));\n                frag.setBondTransient(num, mol.bondTransient(n));\n            }\n        }\n        frag.keepTransient = mol.keepTransient;\n        return frag;\n    }\n    static subgraphWithAttachments(mol, mask) {\n        let xmask = mask.slice(0);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (mask[bfr] && !mask[bto])\n                xmask[bto] = true;\n            else if (mask[bto] && !mask[bfr])\n                xmask[bfr] = true;\n        }\n        let xmol = mol.clone();\n        for (let n = 1; n <= xmol.numAtoms; n++)\n            if (xmask[n - 1] && !mask[n - 1]) {\n                xmol.setAtomElement(n, 'X');\n                xmol.setAtomCharge(n, 0);\n                xmol.setAtomUnpaired(n, 0);\n                xmol.setAtomHExplicit(n, Molecule.HEXPLICIT_UNKNOWN);\n                xmol.setAtomExtra(n, []);\n            }\n        return MolUtil.subgraphMask(xmol, xmask);\n    }\n    static append(mol, frag) {\n        let boxm = mol.boundary(), boxf = frag.boundary();\n        let dx = boxm.maxX() + Molecule.IDEALBOND - boxf.minX();\n        let dy = 0.5 * (boxm.minY() + boxm.maxY() - boxf.minY() - boxf.maxY());\n        let top = mol.numAtoms;\n        mol.append(frag);\n        for (let n = top + 1; n <= mol.numAtoms; n++)\n            mol.setAtomPos(n, mol.atomX(n) + dx, mol.atomY(n) + dy);\n    }\n    static deleteAtoms(mol, idx) {\n        let mask = Vec.booleanArray(true, mol.numAtoms);\n        for (let n = 0; n < idx.length; n++)\n            mask[idx[n] - 1] = false;\n        return MolUtil.subgraphMask(mol, mask);\n    }\n    static componentList(mol) {\n        let sz = mol.numAtoms;\n        if (sz == 0)\n            return null;\n        let g = Graph.fromMolecule(mol);\n        let groups = g.calculateComponentGroups();\n        for (let grp of groups)\n            Vec.addTo(grp, 1);\n        return groups;\n    }\n    static getAtomSides(mol, atom) {\n        let g = Graph.fromMolecule(mol);\n        let cc = g.calculateComponents();\n        let mask = [];\n        for (let n = 0; n < cc.length; n++)\n            mask.push(cc[n] == cc[atom - 1]);\n        mask[atom - 1] = false;\n        let oldmap = Vec.maskIdx(mask);\n        g.keepNodesMask(mask);\n        cc = g.calculateComponents();\n        let ccmax = Vec.max(cc);\n        let grps = [];\n        for (let n = 0; n < ccmax; n++)\n            grps.push([atom]);\n        for (let n = 0; n < cc.length; n++)\n            grps[cc[n] - 1].push(oldmap[n] + 1);\n        return grps;\n    }\n    static getBondSides(mol, bond) {\n        let bf = mol.bondFrom(bond), bt = mol.bondTo(bond);\n        let inRing = mol.bondInRing(bond);\n        let g = Graph.fromMolecule(mol);\n        let cc = g.calculateComponents();\n        let mask = [];\n        for (let n = 0; n < cc.length; n++)\n            mask.push(cc[n] == cc[bf - 1]);\n        if (!inRing)\n            g.removeEdge(bf - 1, bt - 1);\n        else {\n            mask[bf - 1] = false;\n            mask[bt - 1] = false;\n        }\n        let oldmap = Vec.maskIdx(mask);\n        g.keepNodesMask(mask);\n        cc = g.calculateComponents();\n        let ccmax = Vec.max(cc);\n        let grps = [];\n        for (let n = 0; n < ccmax; n++) {\n            grps[n] = [];\n            if (inRing) {\n                grps[n].push(bf);\n                grps[n].push(bt);\n            }\n        }\n        for (let n = 0; n < cc.length; n++)\n            grps[cc[n] - 1].push(oldmap[n] + 1);\n        return grps;\n    }\n    static arrayAtomX(mol) {\n        let x = Vec.numberArray(0, mol.numAtoms);\n        for (let n = x.length - 1; n >= 0; n--)\n            x[n] = mol.atomX(n + 1);\n        return x;\n    }\n    static arrayAtomY(mol) {\n        let y = Vec.numberArray(0, mol.numAtoms);\n        for (let n = y.length - 1; n >= 0; n--)\n            y[n] = mol.atomY(n + 1);\n        return y;\n    }\n    static arrayAtomMapNum(mol) {\n        let mapnum = Vec.numberArray(0, mol.numAtoms);\n        for (let n = mapnum.length - 1; n >= 0; n--)\n            mapnum[n] = mol.atomMapNum(n + 1);\n        return mapnum;\n    }\n    static molecularFormula(mol, punctuation) {\n        let puncEnter = '', puncExit = '', puncEnterSuper = '', puncExitSuper = '';\n        if (punctuation == true)\n            [puncEnter, puncExit] = ['{', '}', '{^', '}'];\n        else if (punctuation instanceof Array) {\n            puncEnter = punctuation[0];\n            puncExit = punctuation[1];\n            puncEnterSuper = punctuation[2];\n            puncExitSuper = punctuation[3];\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                mol = mol.clone();\n                MolUtil.expandAbbrevs(mol, false);\n                break;\n            }\n        let countC = 0, countH = 0;\n        let elements = Vec.stringArray('', mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            countH += mol.atomHydrogens(n);\n            let el = mol.atomElement(n);\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL)\n                el = puncEnterSuper + mol.atomIsotope(n) + puncExitSuper + el;\n            if (el == 'C')\n                countC++;\n            else if (el == 'H')\n                countH++;\n            else\n                elements[n - 1] = el;\n        }\n        elements.sort();\n        let formula = '';\n        if (countC > 0)\n            formula += 'C';\n        if (countC > 1) {\n            if (punctuation)\n                formula += puncEnter;\n            formula += countC;\n            if (punctuation)\n                formula += puncExit;\n        }\n        if (countH > 0)\n            formula += 'H';\n        if (countH > 1) {\n            if (punctuation)\n                formula += puncEnter;\n            formula += countH;\n            if (punctuation)\n                formula += puncExit;\n        }\n        for (let n = 0; n < elements.length; n++)\n            if (elements[n].length > 0) {\n                let count = 1;\n                for (; n + 1 < elements.length && elements[n] == elements[n + 1]; n++)\n                    count++;\n                formula += elements[n];\n                if (count > 1) {\n                    if (punctuation)\n                        formula += puncEnter;\n                    formula += count;\n                    if (punctuation)\n                        formula += puncExit;\n                }\n            }\n        return formula.toString();\n    }\n    static molecularWeight(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                mol = mol.clone();\n                MolUtil.expandAbbrevs(mol, false);\n                break;\n            }\n        let mw = 0;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            mw += mol.atomHydrogens(n) * Chemistry.NATURAL_ATOMIC_WEIGHTS[1];\n            let iso = mol.atomIsotope(n);\n            if (iso != Molecule.ISOTOPE_NATURAL) {\n                mw += iso;\n                continue;\n            }\n            let an = Molecule.elementAtomicNumber(mol.atomElement(n));\n            if (an > 0 && an < Chemistry.NATURAL_ATOMIC_WEIGHTS.length)\n                mw += Chemistry.NATURAL_ATOMIC_WEIGHTS[an];\n        }\n        return mw;\n    }\n    static removeDuplicateBonds(mol) {\n        let bpri = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let p = Math.min(mol.bondFrom(n), mol.bondTo(n)) * mol.numAtoms + Math.max(mol.bondFrom(n), mol.bondTo(n));\n            bpri.push(p);\n        }\n        let bidx = Vec.idxSort(bpri);\n        let keepmask = Vec.booleanArray(false, bidx.length);\n        let p = 0;\n        while (p < bidx.length) {\n            let sz = 1;\n            while (p + sz < bidx.length && bpri[bidx[p]] == bpri[bidx[p + sz]])\n                sz++;\n            let best = p;\n            for (let n = p + 1; n < p + sz; n++) {\n                let b1 = bidx[best] + 1, b2 = bidx[n] + 1;\n                let a1 = mol.bondFrom(b1), a2 = mol.bondTo(b1);\n                let el1 = mol.atomElement(a1), el2 = mol.atomElement(a2);\n                let limit1 = 0, limit2 = 0;\n                if (el1 == 'C' || el1 == 'N')\n                    limit1 = 4;\n                else if (el1 == 'O')\n                    limit1 = 3;\n                if (el2 == 'C' || el2 == 'N')\n                    limit2 = 4;\n                else if (el2 == 'O')\n                    limit2 = 3;\n                if (limit1 > 0 || limit2 > 0) {\n                    let boB1A1 = 0, boB1A2 = 0, boB2A1 = 0, boB2A2 = 0;\n                    for (let i = 1; i <= mol.numBonds; i++) {\n                        if (i != b2 && (mol.bondFrom(i) == a1 || mol.bondTo(i) == a1))\n                            boB1A1 += mol.bondOrder(i);\n                        if (i != b2 && (mol.bondFrom(i) == a2 || mol.bondTo(i) == a2))\n                            boB1A2 += mol.bondOrder(i);\n                        if (i != b1 && (mol.bondFrom(i) == a1 || mol.bondTo(i) == a1))\n                            boB2A1 += mol.bondOrder(i);\n                        if (i != b1 && (mol.bondFrom(i) == a2 || mol.bondTo(i) == a2))\n                            boB2A2 += mol.bondOrder(i);\n                    }\n                    let bad1 = 0, bad2 = 0;\n                    if (limit1 > 0 && boB1A1 > limit1)\n                        bad1++;\n                    if (limit2 > 0 && boB1A2 > limit2)\n                        bad1++;\n                    if (limit1 > 0 && boB2A1 > limit1)\n                        bad2++;\n                    if (limit2 > 0 && boB2A2 > limit2)\n                        bad2++;\n                    if (bad1 < bad2)\n                        continue;\n                    if (bad1 > bad2) {\n                        best = n;\n                        continue;\n                    }\n                }\n                let exotic1 = 2 * mol.bondOrder(b1), exotic2 = 2 * mol.bondOrder(b2);\n                exotic1 += (exotic1 == 0 ? 4 : 0) + (mol.bondType(b1) != Molecule.BONDTYPE_NORMAL ? 1 : 0);\n                exotic2 += (exotic2 == 0 ? 4 : 0) + (mol.bondType(b2) != Molecule.BONDTYPE_NORMAL ? 1 : 0);\n                if (exotic2 > exotic1)\n                    best = n;\n            }\n            keepmask[bidx[best]] = true;\n            p += sz;\n        }\n        for (let n = mol.numBonds; n >= 1; n--)\n            if (!keepmask[n - 1] || mol.bondFrom(n) == mol.bondTo(n))\n                mol.deleteBond(n);\n    }\n    static calculateWalkWeight(mol, atom) {\n        let ccsz = 0, cc = Graph.fromMolecule(mol).calculateComponents();\n        for (let n = 0; n < cc.length; n++)\n            if (cc[n] == cc[atom - 1])\n                ccsz++;\n        let w = Vec.numberArray(1, mol.numAtoms), wn = Vec.numberArray(0, mol.numAtoms);\n        w[atom - 1] = 0;\n        for (; ccsz > 0; ccsz--) {\n            for (let n = 0; n < mol.numAtoms; n++)\n                wn[n] = w[n];\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let a1 = mol.bondFrom(n) - 1, a2 = mol.bondTo(n) - 1;\n                w[a1] += wn[a2] * 0.1;\n                w[a2] += wn[a1] * 0.1;\n            }\n            w[atom - 1] = 0;\n        }\n        return w;\n    }\n    static totalHydrogens(mol, atom) {\n        let hc = mol.atomHydrogens(atom);\n        let adj = mol.atomAdjList(atom);\n        for (let n = 0; n < adj.length; n++)\n            if (mol.atomElement(adj[n]) == 'H')\n                hc++;\n        return hc;\n    }\n    static stripHydrogens(mol, force = false) {\n        for (let n = mol.numAtoms; n >= 1; n--)\n            if ((force && mol.atomElement(n) == 'H') || this.boringHydrogen(mol, n))\n                mol.deleteAtomAndBonds(n);\n    }\n    static boringHydrogen(mol, atom) {\n        if (mol.atomElement(atom) != 'H')\n            return false;\n        if (mol.atomCharge(atom) != 0 || mol.atomUnpaired(atom) != 0)\n            return false;\n        if (mol.atomIsotope(atom) != Molecule.ISOTOPE_NATURAL)\n            return false;\n        if (Vec.notBlank(mol.atomExtra(atom)) || Vec.notBlank(mol.atomTransient(atom)))\n            return false;\n        if (mol.atomAdjCount(atom) != 1)\n            return false;\n        let other = mol.atomAdjList(atom)[0];\n        if (mol.atomElement(other) == 'H')\n            return false;\n        let bond = mol.atomAdjBonds(atom)[0];\n        if (mol.bondOrder(bond) != 1 || mol.bondType(bond) != Molecule.BONDTYPE_NORMAL)\n            return false;\n        if (mol.atomHExplicit(other) != Molecule.HEXPLICIT_UNKNOWN)\n            return false;\n        if (Molecule.HYVALENCE_EL.indexOf(mol.atomElement(other)) < 0)\n            return false;\n        return true;\n    }\n    static createHydrogens(mol, position) {\n        if (position == null)\n            position = false;\n        let na = mol.numAtoms;\n        for (let n = 1; n <= na; n++) {\n            let hc = mol.atomHydrogens(n);\n            if (hc == 0)\n                continue;\n            if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN)\n                mol.setAtomHExplicit(n, 0);\n            if (!position) {\n                for (; hc > 0; hc--) {\n                    let a = mol.addAtom('H', mol.atomX(n), mol.atomY(n));\n                    mol.addBond(n, a, 1);\n                }\n            }\n            else\n                SketchUtil.placeAdditionalHydrogens(mol, n, hc);\n        }\n        return mol.numAtoms - na;\n    }\n    static atomVec3(mol, atom) {\n        if (mol.is3D())\n            return [mol.atomX(atom), mol.atomY(atom), mol.atomZ(atom)];\n        else\n            return [mol.atomX(atom), mol.atomY(atom), 0];\n    }\n    static atomOxidationState(mol, atom) {\n        if (mol.atomAdjCount(atom) == 0)\n            return null;\n        if (this.hasAbbrev(mol, atom))\n            return null;\n        let atno = mol.atomicNumber(atom);\n        if (atno == 0)\n            return null;\n        let nonMetal = atno == Chemistry.ELEMENT_H || Chemistry.ELEMENT_BLOCKS[atno] == 2;\n        let oxstate = mol.atomHydrogens(atom) + (nonMetal ? -mol.atomCharge(atom) : mol.atomCharge(atom));\n        for (let b of mol.atomAdjBonds(atom)) {\n            let bo = mol.bondOrder(b), other = mol.bondOther(b, atom);\n            let chalco = ['O', 'S', 'Se', 'Te'].includes(mol.atomElement(other));\n            if (nonMetal || chalco)\n                oxstate += bo;\n            else\n                oxstate += bo % 2;\n        }\n        if (atno == Chemistry.ELEMENT_H && oxstate == 1)\n            return null;\n        if (atno == Chemistry.ELEMENT_B && oxstate == 3)\n            return null;\n        if (atno == Chemistry.ELEMENT_C && oxstate == 4)\n            return null;\n        if (atno == Chemistry.ELEMENT_N && oxstate == 3)\n            return null;\n        if (atno == Chemistry.ELEMENT_O && oxstate == 2)\n            return null;\n        if (atno == Chemistry.ELEMENT_S && (oxstate == 2 || oxstate == 4 || oxstate == 6))\n            return null;\n        if (atno == Chemistry.ELEMENT_P && (oxstate == 3 || oxstate == 5))\n            return null;\n        if ((atno == Chemistry.ELEMENT_F || atno == Chemistry.ELEMENT_Cl ||\n            atno == Chemistry.ELEMENT_Br || atno == Chemistry.ELEMENT_I) && oxstate == 1)\n            return null;\n        return oxstate;\n    }\n    static oxidationStateText(oxstate) {\n        if (oxstate == 0)\n            return '0';\n        let str = oxstate < 0 ? '-' : '';\n        let absox = Math.abs(oxstate);\n        if (absox == 1)\n            str += 'I';\n        else if (absox == 2)\n            str += 'II';\n        else if (absox == 3)\n            str += 'III';\n        else if (absox == 4)\n            str += 'IV';\n        else if (absox == 5)\n            str += 'V';\n        else if (absox == 6)\n            str += 'VI';\n        else if (absox == 7)\n            str += 'VII';\n        else if (absox == 8)\n            str += 'VIII';\n        else if (absox == 9)\n            str += 'IX';\n        else if (absox == 10)\n            str += 'X';\n        else if (absox == 11)\n            str += 'XI';\n        else if (absox == 12)\n            str += 'XII';\n        else\n            str = (oxstate > 0 ? '+' : '') + oxstate;\n        return str;\n    }\n}\nMolUtil.TEMPLATE_ATTACHMENT = 'X';\nMolUtil.ABBREV_ATTACHMENT = '*';\nexport { MolUtil };\n//# sourceMappingURL=MolUtil.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/mol/Molecule';\n\nexport interface InChIResult\n{\n\tinchi:string;\n\tinchiKey:string;\n}\n\nexport abstract class InChIDelegate\n{\n\tpublic async generate(mol:Molecule):Promise<InChIResult>\n\t{\n\t\tthrow new Error('InChI not implemented.');\n\t}\n}","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {MolUtil} from 'webmolkit/mol/MolUtil';\nimport {MDLMOLWriter} from 'webmolkit/io/MDLWriter';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport {getGlobal} from '@electron/remote';\nimport {InChIDelegate, InChIResult} from '../mixture/InChIDelegate';\n\n/*\n\tInteroperability with InChI technology: the generator program is a native binary, the location of which\n\tneeds to be discovered. Each generation operation involves a trip to the external execution subsystem.\n*/\n\nlet execLocation:string = null;\nlet inchi:InChI = null;\n\nexport class InChI extends InChIDelegate\n{\n\t// optional override: when using the Emscripten-ported version of InChI, set this function to call the\n\t// natively encoded implementation\n\tpublic static nativeMolfileToInChI:(mdlmol:string, options:string) => Promise<string> = null;\n\n\tprivate available = false;\n\tprivate inchiPath = execLocation;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tif (!this.inchiPath)\n\t\t{\n\t\t\tthis.inchiPath = getGlobal('INCHI_EXEC');\n\t\t}\n\n\t\tif (this.inchiPath)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfs.accessSync(this.inchiPath, fs.constants.X_OK);\n\t\t\t\tthis.available = true;\n\t\t\t}\n\t\t\tcatch (ex) {} // not available\n\t\t}\n\t}\n\n\t// specify where the executable file is (overrides the global option)\n\tpublic static hasExecutable():boolean\n\t{\n\t\treturn !!execLocation;\n\t}\n\tpublic static setExecutable(exec:string):void\n\t{\n\t\texecLocation = exec;\n\t}\n\n\t// returns true if we have reason to believe the InChI executable can be run on demand\n\tpublic static isAvailable():boolean\n\t{\n\t\tif (this.nativeMolfileToInChI != null) return true;\n\t\tif (!inchi) inchi = new InChI();\n\t\treturn inchi.available;\n\t}\n\n\t// converts a molecule to an InChI string, if possible; should check the availability first, for graceful\n\t// rejection; failure results in an exception; note that it is executed synchronously: if the executable takes\n\t// a long time to run, this will be a problem for the UI; the return value is [InChI, InChIKey]\n\tpublic async generate(mol:Molecule):Promise<InChIResult>\n\t{\n\t\tmol = mol.clone();\n\t\tMolUtil.expandAbbrevs(mol, true);\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (mol.bondOrder(n) < 1 || mol.bondOrder(n) > 3) mol.setBondOrder(n, 1);\n\n\t\tlet writer = new MDLMOLWriter(mol);\n\t\twriter.enhancedFields = false;\n\t\tlet mdlmol = writer.write();\n\n\t\tif (InChI.nativeMolfileToInChI != null)\n\t\t{\n\t\t\tlet inchi = await InChI.nativeMolfileToInChI(mdlmol, '-AuxNone -NoLabels');\n\t\t\treturn {inchi: inchi, inchiKey: null}; // NOTE: this version doesn't provide a key; address this in the future\n\t\t}\n\n\t\tif (!inchi) inchi = new InChI();\n\t\tif (!inchi.available) throw 'InChI executable is not available.';\n\n\t\tconst proc = require('child_process');\n\n\t\tlet cmd = inchi.inchiPath.replace(/ /g, '\\\\\\ '); // very crude escaping of spaces\n\t\tlet result = proc.spawnSync(cmd, ['-STDIO', '-AuxNone', '-NoLabels', '-Key'], {input: mdlmol});\n\t\tlet raw = result.stdout.toString(), bits = raw.split('\\n');\n\n\t\tif (bits.length < 2 || !bits[0].startsWith('InChI='))\n\t\t{\n\t\t\tconsole.log('InChI command returned result:\\n' + raw);\n\t\t\tconsole.log('Molecule:\\n' + mol);\n\t\t\tconsole.log('MDL Molfile:\\n' + mdlmol);\n\t\t\tthrow 'Invalid returned by InChI generator: ' + raw;\n\t\t}\n\t\treturn {inchi: bits[0], inchiKey: bits[1]};\n\t}\n}\n\n","import { clone } from '../util/util';\nexport class RenderPolicy {\n    constructor(data) {\n        if (!data) {\n            data =\n                {\n                    name: 'default',\n                    pointScale: 20,\n                    resolutionDPI: 100,\n                    fontSize: 0.65,\n                    lineSize: 0.075,\n                    bondSep: 0.2,\n                    defaultPadding: 0.2,\n                    foreground: 0x000000,\n                    background: 0xFFFFFF,\n                    atomCols: new Array(112)\n                };\n            for (let n = 0; n <= 111; n++)\n                data.atomCols[n] = 0x000000;\n            this.data = data;\n        }\n        else {\n            this.data = clone(data);\n        }\n    }\n    clone() { return new RenderPolicy(this.data); }\n    static defaultBlackOnWhite(pixPerAng) {\n        let policy = new RenderPolicy();\n        if (pixPerAng)\n            policy.data.pointScale = pixPerAng;\n        return policy;\n    }\n    static defaultWhiteOnBlack(pixPerAng) {\n        let policy = new RenderPolicy();\n        if (pixPerAng)\n            policy.data.pointScale = pixPerAng;\n        policy.data.foreground = 0xFFFFFF;\n        policy.data.background = 0x000000;\n        for (let n = 0; n <= 111; n++)\n            policy.data.atomCols[n] = 0xFFFFFF;\n        return policy;\n    }\n    static defaultColourOnWhite(pixPerAng) {\n        let policy = RenderPolicy.defaultBlackOnWhite(pixPerAng);\n        policy.data.atomCols[0] = 0x404040;\n        policy.data.atomCols[1] = 0x808080;\n        policy.data.atomCols[6] = 0x000000;\n        policy.data.atomCols[7] = 0x0000FF;\n        policy.data.atomCols[8] = 0xFF0000;\n        policy.data.atomCols[9] = 0xFF8080;\n        policy.data.atomCols[15] = 0xFF8000;\n        policy.data.atomCols[16] = 0x808000;\n        policy.data.atomCols[17] = 0x00C000;\n        policy.data.atomCols[35] = 0xC04000;\n        return policy;\n    }\n    static defaultColourOnBlack(pixPerAng) {\n        let policy = RenderPolicy.defaultWhiteOnBlack(pixPerAng);\n        policy.data.atomCols[0] = 0xA0A0A0;\n        policy.data.atomCols[1] = 0x808080;\n        policy.data.atomCols[6] = 0xFFFFFF;\n        policy.data.atomCols[7] = 0x4040FF;\n        policy.data.atomCols[8] = 0xFF4040;\n        policy.data.atomCols[9] = 0xFF8080;\n        policy.data.atomCols[15] = 0xFF8000;\n        policy.data.atomCols[16] = 0xFFFF00;\n        policy.data.atomCols[17] = 0x40FF40;\n        policy.data.atomCols[35] = 0xFF8040;\n        return policy;\n    }\n    static defaultPrintedPublication() {\n        let policy = RenderPolicy.defaultBlackOnWhite(9.6);\n        policy.data.resolutionDPI = 600;\n        policy.data.fontSize = 0.80;\n        policy.data.bondSep = 0.27;\n        policy.data.lineSize = 0.0625;\n        return policy;\n    }\n}\nexport class RenderEffects {\n    constructor() {\n        this.colAtom = {};\n        this.colBond = {};\n        this.dottedRectOutline = {};\n        this.dottedBondCross = {};\n        this.hideAtoms = new Set();\n        this.hideBonds = new Set();\n        this.atomFrameDotSz = [];\n        this.atomFrameCol = [];\n        this.atomCircleSz = [];\n        this.atomCircleCol = [];\n        this.atomDecoText = [];\n        this.atomDecoCol = [];\n        this.atomDecoSize = [];\n        this.bondDecoText = [];\n        this.bondDecoCol = [];\n        this.bondDecoSize = [];\n        this.overlapAtoms = [];\n    }\n}\nexport var RenderMnemonicType;\n(function (RenderMnemonicType) {\n    RenderMnemonicType[\"Atom\"] = \"A\";\n    RenderMnemonicType[\"Bond\"] = \"B\";\n    RenderMnemonicType[\"Artifact\"] = \"R\";\n    RenderMnemonicType[\"Effect\"] = \"E\";\n})(RenderMnemonicType || (RenderMnemonicType = {}));\nexport class RenderMnemonics {\n    constructor(encoded) {\n        this.items = [];\n        let lines = (encoded || '').split('&');\n        for (let line of lines) {\n            let bits = line.split('|');\n            if (bits.length != 3)\n                continue;\n            let item = {\n                type: bits[0],\n                details: bits[1],\n                coords: bits[2].split(',').map((str) => parseFloat(str)),\n            };\n            this.items.push(item);\n        }\n    }\n    append(type, details, coords) {\n        for (let n = details.length - 1; n >= 0; n--)\n            if (details[n] == '|' || details[n] == '&')\n                details = details.substring(0, n) + details.substring(n + 1);\n        this.items.push({ type, details, coords });\n    }\n    serialise() {\n        var _a;\n        let lines = [];\n        for (let item of this.items) {\n            let coords = ((_a = item.coords) !== null && _a !== void 0 ? _a : []).map((coord) => coord.toFixed(1)).join(',');\n            lines.push(`${item.type}|${item.details}|${coords}`);\n        }\n        return lines.join('&');\n    }\n    packWithCoords() { return this.serialise(); }\n    packWithoutCoords() {\n        return this.items.map((item) => `${item.type}|${item.details}`).join('&');\n    }\n}\n//# sourceMappingURL=Rendering.js.map","import { PseudoEmbedding } from '../mol/PseudoEmbedding';\nimport { BondArtifact } from '../mol/BondArtifact';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { Molecule } from '../mol/Molecule';\nimport { PolymerBlock, PolymerBlockConnectivity } from '../mol/PolymerBlock';\nimport { QueryUtil } from '../mol/QueryUtil';\nimport { FitRotatedEllipse } from '../util/FitRotatedEllipse';\nimport { Box, GeomUtil, Line, Oval, QuickHull } from '../util/Geom';\nimport { angleDiff, clone, DEGRAD, invZ, norm2_xy, norm_xy, RADDEG, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { FontData } from './FontData';\nimport { RenderEffects } from './Rendering';\nexport var BLineType;\n(function (BLineType) {\n    BLineType[BLineType[\"Normal\"] = 1] = \"Normal\";\n    BLineType[BLineType[\"Inclined\"] = 2] = \"Inclined\";\n    BLineType[BLineType[\"Declined\"] = 3] = \"Declined\";\n    BLineType[BLineType[\"Unknown\"] = 4] = \"Unknown\";\n    BLineType[BLineType[\"Dotted\"] = 5] = \"Dotted\";\n    BLineType[BLineType[\"DotDir\"] = 6] = \"DotDir\";\n    BLineType[BLineType[\"IncDouble\"] = 7] = \"IncDouble\";\n    BLineType[BLineType[\"IncTriple\"] = 8] = \"IncTriple\";\n    BLineType[BLineType[\"IncQuadruple\"] = 9] = \"IncQuadruple\";\n})(BLineType || (BLineType = {}));\nconst MINBOND_LINE = 0.25;\nconst MINBOND_EXOTIC = 0.5;\nclass ArrangeMolecule {\n    static guestimateSize(mol, policy, maxW, maxH) {\n        let box = mol.boundary();\n        let minX = box.minX(), minY = box.minY(), maxX = box.maxX(), maxY = box.maxY();\n        let fontSize = policy.data.fontSize * this.FONT_CORRECT;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomExplicit(n)) {\n                let numsym = 0;\n                for (let ch of mol.atomElement(n))\n                    if (!'|{}^'.includes(ch))\n                        numsym++;\n                let plusH = mol.atomHydrogens(n) > 0 ? 1 : 0;\n                const aw = 0.5 * 0.7 * fontSize * (numsym + plusH);\n                const ah = 0.75 * fontSize * (1 + 0.2 * plusH);\n                const ax = mol.atomX(n), ay = mol.atomY(n);\n                minX = Math.min(minX, ax - aw);\n                maxX = Math.max(maxX, ax + aw);\n                minY = Math.min(minY, ay - ah);\n                maxY = Math.max(maxY, ay + ah);\n            }\n        let w = Math.max(1, (maxX - minX)) * policy.data.pointScale;\n        let h = Math.max(1, (maxY - minY)) * policy.data.pointScale;\n        if (maxW > 0 && w > maxW) {\n            h *= maxW / w;\n            w = maxW;\n        }\n        if (maxH > 0 && h > maxH) {\n            w *= maxH / h;\n            h = maxH;\n        }\n        return [w, h];\n    }\n    constructor(mol, measure, policy, effects = new RenderEffects()) {\n        this.mol = mol;\n        this.measure = measure;\n        this.policy = policy;\n        this.effects = effects;\n        this.points = [];\n        this.lines = [];\n        this.rings = [];\n        this.paths = [];\n        this.space = [];\n        this.unsplitLines = null;\n        this.wantArtifacts = true;\n        this.wantCrossings = true;\n        this.artifacts = null;\n        this.bondOrder = [];\n        this.atomCharge = [];\n        this.atomUnpaired = [];\n        this.artifactCharge = new Map();\n        this.artifactUnpaired = new Map();\n        this.artifactFract = new Map();\n    }\n    getMolecule() { return this.mol; }\n    getMeasure() { return this.measure; }\n    getPolicy() { return this.policy; }\n    getEffects() { return this.effects; }\n    getScale() { return this.scale; }\n    setWantArtifacts(want) { this.wantArtifacts = want; }\n    getArtifacts() { return this.artifacts; }\n    setArtifacts(artifacts) { this.artifacts = artifacts; }\n    setWantCrossings(want) { this.wantCrossings = want; }\n    arrange() {\n        const { mol, measure, policy, effects } = this;\n        this.scale = measure.scale();\n        this.bondSepPix = policy.data.bondSep * measure.scale();\n        this.lineSizePix = policy.data.lineSize * measure.scale();\n        this.fontSizePix = policy.data.fontSize * measure.scale() * ArrangeMolecule.FONT_CORRECT;\n        this.ymul = measure.yIsUp() ? -1 : 1;\n        let artmask = null;\n        if (this.wantArtifacts && this.artifacts == null) {\n            this.artifacts = new BondArtifact(mol);\n            artmask = Vec.booleanArray(false, mol.numAtoms);\n            for (let path of this.artifacts.getResPaths())\n                for (let a of path.atoms)\n                    artmask[a - 1] = true;\n            for (let ring of this.artifacts.getResRings())\n                for (let a of ring.atoms)\n                    artmask[a - 1] = true;\n            for (let arene of this.artifacts.getArenes()) {\n                artmask[arene.centre - 1] = true;\n                for (let a of arene.atoms)\n                    artmask[a - 1] = true;\n            }\n        }\n        this.setupBondOrders();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            if (mol.atomElement(n).length > 2 && mol.atomHydrogens(n) == 0) {\n                this.points.push(null);\n                this.space.push(null);\n                continue;\n            }\n            let a = {\n                anum: n,\n                text: mol.atomExplicit(n) || CoordUtil.atomIsWeirdLinear(mol, n) ? mol.atomElement(n) : null,\n                fsz: this.fontSizePix,\n                col: this.policy.data.atomCols[mol.atomicNumber(n)],\n                oval: new Oval(this.measure.angToX(mol.atomX(n)), this.measure.angToY(mol.atomY(n)), 0, 0)\n            };\n            let overCol = this.effects.colAtom[n];\n            if (overCol)\n                a.col = overCol;\n            if (artmask && artmask[n - 1] && mol.atomElement(n) == 'C')\n                a.text = null;\n            if (a.text != null) {\n                let wad = this.measure.measureText(a.text, a.fsz);\n                const PADDING = 1.1;\n                a.oval.rw = 0.5 * wad[0] * PADDING;\n                a.oval.rh = 0.5 * wad[1] * PADDING;\n            }\n            this.points.push(a);\n            this.space.push(this.computeSpacePoint(a));\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (this.points[n - 1] == null)\n                this.processLabel(n);\n        let bdbl = Vec.booleanArray(false, mol.numBonds);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let bt = mol.bondType(n), bo = this.bondOrder[n - 1];\n            if (bo < 0)\n                continue;\n            let col = this.effects.colBond[n];\n            if (!col)\n                col = this.policy.data.foreground;\n            bdbl[n - 1] = bo == 2 && (bt == Molecule.BONDTYPE_NORMAL || bt == Molecule.BONDTYPE_UNKNOWN);\n            let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n            let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n            if (Math.abs(x2 - x1) <= 1 && Math.abs(y2 - y1) <= 1) {\n                bdbl[n - 1] = false;\n                continue;\n            }\n            if (bdbl[n - 1])\n                continue;\n            let minDist = (bo == 1 && bt == Molecule.BONDTYPE_NORMAL ? MINBOND_LINE : MINBOND_EXOTIC) * measure.scale();\n            let xy1 = this.shrinkBond(x1, y1, x2, y2, this.backOffAtom(bfr, x1, y1, x2, y2, minDist));\n            let xy2 = this.shrinkBond(x2, y2, x1, y1, this.backOffAtom(bto, x2, y2, x1, y1, minDist));\n            this.ensureMinimumBondLength(xy1, xy2, x1, y1, x2, y2, minDist);\n            let sz = this.lineSizePix, head = 0;\n            let qbonds = QueryUtil.queryBondOrders(mol, n);\n            if (Vec.notBlank(qbonds)) {\n                Vec.sort(qbonds);\n                if (qbonds[0] == -1) {\n                    qbonds.splice(0, 1);\n                    qbonds.push(-1);\n                }\n                let qtxt = Vec.equals(qbonds, [0, 1, 2, 3, -1]) ? '?' : qbonds.map((o) => o == -1 ? 'A' : o.toString()).join('');\n                let oxy = this.orthogonalDelta(xy1[0], xy1[1], xy2[0], xy2[1], 1.3 * this.bondSepPix);\n                let v = -0.5;\n                for (let i = 0; i < 2; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    let b = {\n                        bnum: n,\n                        bfr,\n                        bto,\n                        type: BLineType.Dotted,\n                        line: new Line(lx1, ly1, lx2, ly2),\n                        size: 0.5 * sz,\n                        head,\n                        col: (col & 0xFFFFFF) | 0x80000000,\n                    };\n                    this.lines.push(b);\n                    this.space.push(this.computeSpaceLine(b));\n                }\n                let rotation = Math.atan2(xy2[1] - xy1[1], xy2[0] - xy1[0]) * RADDEG;\n                if (rotation < -90 || rotation > 90)\n                    rotation += 180;\n                let a = {\n                    anum: 0,\n                    text: qtxt,\n                    fsz: 0.35 * this.fontSizePix,\n                    col,\n                    oval: new Oval(0.5 * (xy1[0] + xy2[0]), 0.5 * (xy1[1] + xy2[1]), 0, 0),\n                    rotation\n                };\n                this.points.push(a);\n                this.space.push(this.computeSpacePoint(a));\n                continue;\n            }\n            let ltype = BLineType.Normal;\n            if (bo == 1 && bt == Molecule.BONDTYPE_INCLINED) {\n                ltype = BLineType.Inclined;\n                head = 0.15 * measure.scale();\n            }\n            else if (bo == 1 && bt == Molecule.BONDTYPE_DECLINED) {\n                ltype = BLineType.Declined;\n                head = 0.15 * measure.scale();\n            }\n            else if (bt == Molecule.BONDTYPE_UNKNOWN) {\n                ltype = BLineType.Unknown;\n                head = 0.2 * measure.scale();\n            }\n            else if (bo == 0) {\n                if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                    ltype = BLineType.DotDir;\n                else\n                    ltype = BLineType.Dotted;\n            }\n            else if ((bo == 2 || bo == 3 || bo == 4) && (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)) {\n                ltype = bo == 2 ? BLineType.IncDouble : bo == 3 ? BLineType.IncTriple : BLineType.IncQuadruple;\n                head = (bo == 2 ? 0.20 : 0.25) * measure.scale();\n            }\n            if (bo == 0) {\n                let dx = xy2[0] - xy1[0], dy = xy2[1] - xy1[1];\n                let d = norm_xy(dx, dy), invD = 1 / d;\n                let ox = 0.5 * dx * invD * this.bondSepPix, oy = 0.5 * dy * invD * this.bondSepPix;\n                if (mol.atomAdjCount(bfr) > 1) {\n                    xy1[0] += ox;\n                    xy1[1] += oy;\n                }\n                if (mol.atomAdjCount(bto) > 1) {\n                    xy2[0] -= ox;\n                    xy2[1] -= oy;\n                }\n            }\n            if (bo != 1 && bt == Molecule.BONDTYPE_DECLINED)\n                [xy1, xy2] = [xy2, xy1];\n            if (bo > 1 && (bt == Molecule.BONDTYPE_NORMAL || bt == Molecule.BONDTYPE_UNKNOWN)) {\n                let oxy = this.orthogonalDelta(xy1[0], xy1[1], xy2[0], xy2[1], this.bondSepPix);\n                let ext1 = 1, ext2 = 1;\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    ext1 = Math.min(ext1, this.backOffAtom(bfr, lx1, ly1, lx2, ly2, minDist));\n                }\n                xy1 = this.shrinkBond(xy1[0], xy1[1], xy2[0], xy2[1], ext1);\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    ext2 = Math.min(ext2, this.backOffAtom(bto, lx2, ly2, lx1, ly1, minDist));\n                }\n                xy2 = this.shrinkBond(xy2[0], xy2[1], xy1[0], xy1[1], ext2);\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    let b = {\n                        bnum: n,\n                        bfr,\n                        bto,\n                        type: ltype,\n                        line: new Line(lx1, ly1, lx2, ly2),\n                        size: sz,\n                        head,\n                        col\n                    };\n                    this.lines.push(b);\n                    this.space.push(this.computeSpaceLine(b));\n                }\n            }\n            else {\n                let b = {\n                    bnum: n,\n                    bfr,\n                    bto,\n                    type: ltype,\n                    line: new Line(xy1[0], xy1[1], xy2[0], xy2[1]),\n                    size: sz,\n                    head,\n                    col\n                };\n                this.lines.push(b);\n                this.space.push(this.computeSpaceLine(b));\n            }\n        }\n        let rings = this.orderedRingList();\n        for (let i = 0; i < rings.length; i++) {\n            for (let j = 0; j < rings[i].length; j++) {\n                let k = mol.findBond(rings[i][j], rings[i][j < rings[i].length - 1 ? j + 1 : 0]);\n                if (bdbl[k - 1]) {\n                    this.processDoubleBond(k, rings[i]);\n                    bdbl[k - 1] = false;\n                }\n            }\n        }\n        for (let i = 1; i <= mol.numBonds; i++)\n            if (bdbl[i - 1])\n                this.processDoubleBond(i, this.priorityDoubleSubstit(i));\n        let hcount = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            hcount[n - 1] = this.points[n - 1].text == null ? 0 : mol.atomHydrogens(n);\n        for (let n = 0; n < mol.numAtoms; n++)\n            if (hcount[n] > 0 && this.placeHydrogen(n, hcount[n], true))\n                hcount[n] = 0;\n        for (let n = 0; n < mol.numAtoms; n++)\n            if (hcount[n] > 0)\n                this.placeHydrogen(n, hcount[n], false);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) {\n                let isostr = mol.atomIsotope(n).toString();\n                let col = policy.data.atomCols[mol.atomicNumber(n)];\n                this.placeAdjunct(n, isostr, this.fontSizePix * 0.6, col, 150 * DEGRAD);\n            }\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let str = '';\n            let chg = this.atomCharge[n - 1];\n            if (chg == -1)\n                str = '-';\n            else if (chg == 1)\n                str = '+';\n            else if (chg < -1)\n                str = Math.abs(chg) + '-';\n            else if (chg > 1)\n                str = chg + '+';\n            for (let i = this.atomUnpaired[n - 1]; i > 0; i--)\n                str += '.';\n            if (str.length == 0)\n                continue;\n            let col = policy.data.atomCols[mol.atomicNumber(n)];\n            this.placeAdjunct(n, str, str.length == 1 ? 0.8 * this.fontSizePix : 0.6 * this.fontSizePix, col, 30 * DEGRAD);\n        }\n        for (let n = 0; n < effects.atomDecoText.length; n++) {\n            let txt = effects.atomDecoText[n];\n            if (!txt)\n                continue;\n            this.annotateAtom(n + 1, txt, effects.atomDecoCol[n], effects.atomDecoSize[n] * this.scale * ArrangeMolecule.FONT_CORRECT);\n        }\n        for (let n = 0; n < effects.bondDecoText.length; n++) {\n            let txt = effects.bondDecoText[n];\n            if (!txt)\n                continue;\n            this.annotateBond(n + 1, txt, effects.bondDecoCol[n], effects.bondDecoSize[n] * this.scale * ArrangeMolecule.FONT_CORRECT);\n        }\n        for (let n = 0; n < Math.min(effects.atomCircleSz.length, mol.numAtoms); n++)\n            if (effects.atomCircleSz[n] > 0) {\n                let dw = effects.atomCircleSz[n] * this.scale;\n                let a = this.points[n];\n                let box = new Box(a.oval.cx - dw, a.oval.cy - dw, 2 * dw, 2 * dw);\n                let spc = {\n                    anum: 0,\n                    bnum: 0,\n                    box,\n                    px: [box.minX(), box.maxX(), box.maxX(), box.minX()],\n                    py: [box.minY(), box.minY(), box.maxY(), box.maxY()]\n                };\n                this.space.push(spc);\n            }\n        if (this.artifacts != null) {\n            for (let path of this.artifacts.getResPaths()) {\n                this.createCurvedPath(path.atoms, this.artifactFract.get(path), 0);\n                this.delocalisedAnnotation(path.atoms, this.artifactCharge.get(path), this.artifactUnpaired.get(path));\n            }\n            for (let ring of this.artifacts.getResRings()) {\n                this.createCircularRing(ring.atoms);\n                this.delocalisedAnnotation(ring.atoms, this.artifactCharge.get(ring), this.artifactUnpaired.get(ring));\n            }\n            for (let arene of this.artifacts.getArenes()) {\n                let isRing = arene.atoms.length > 2;\n                if (isRing)\n                    for (let n = 0; n < arene.atoms.length; n++) {\n                        let nn = n < arene.atoms.length - 1 ? n + 1 : 0;\n                        if (mol.findBond(arene.atoms[n], arene.atoms[nn]) == 0) {\n                            isRing = false;\n                            break;\n                        }\n                    }\n                let alkeneLike = arene.atoms.length == 2;\n                this.createBondCentroid(arene.centre, arene.atoms);\n                if (!alkeneLike) {\n                    if (isRing)\n                        this.createCircularRing(arene.atoms);\n                    else\n                        this.createCurvedPath(arene.atoms, false, arene.centre);\n                }\n                this.delocalisedAnnotation(arene.atoms, this.artifactCharge.get(arene), this.artifactUnpaired.get(arene));\n            }\n        }\n        if (this.wantCrossings) {\n            let emb = new PseudoEmbedding(mol);\n            emb.calculateCrossings();\n            for (let cross of emb.crossings) {\n                if (cross.higher == 1)\n                    this.resolveLineCrossings(cross.bond1, cross.bond2);\n                else if (cross.higher == 2)\n                    this.resolveLineCrossings(cross.bond2, cross.bond1);\n            }\n        }\n        let polymers = new PolymerBlock(mol);\n        for (let id of polymers.getIDList())\n            this.processPolymerUnit(polymers.getUnit(id), polymers.getUnits());\n    }\n    numPoints() { return this.points.length; }\n    getPoint(idx) { return this.points[idx]; }\n    getPoints() { return this.points; }\n    numLines() { return this.lines.length; }\n    getLine(idx) { return this.lines[idx]; }\n    getLines() { return this.lines; }\n    getUnsplitLines() { return this.unsplitLines; }\n    numRings() { return this.rings.length; }\n    getRing(idx) { return this.rings[idx]; }\n    getRings() { return this.rings; }\n    numPaths() { return this.paths.length; }\n    getPath(idx) { return this.paths[idx]; }\n    getPaths() { return this.paths; }\n    numSpace() { return this.space.length; }\n    getSpace(idx) { return this.space[idx]; }\n    getSpaces() { return this.space; }\n    offsetEverything(dx, dy) {\n        var _a;\n        for (let a of this.points)\n            a.oval.offsetBy(dx, dy);\n        for (let b of [...this.lines, ...((_a = this.unsplitLines) !== null && _a !== void 0 ? _a : [])])\n            b.line.offsetBy(dx, dy);\n        for (let r of this.rings) {\n            r.cx += dx;\n            r.cy += dy;\n        }\n        for (let p of this.paths) {\n            Vec.addTo(p.px, dx);\n            Vec.addTo(p.py, dy);\n        }\n        for (let spc of this.space) {\n            spc.box.offsetBy(dx, dy);\n            Vec.addTo(spc.px, dx);\n            Vec.addTo(spc.py, dy);\n        }\n    }\n    offsetOrigin() {\n        let bounds = this.determineBoundary();\n        if (bounds[0] != 0 || bounds[1] != 0)\n            this.offsetEverything(-bounds[0], -bounds[1]);\n    }\n    scaleEverything(scaleBy) {\n        var _a;\n        if (scaleBy == 1)\n            return;\n        this.scale *= scaleBy;\n        for (let a of this.points) {\n            a.oval.scaleBy(scaleBy);\n            a.fsz *= scaleBy;\n        }\n        for (let b of [...this.lines, ...((_a = this.unsplitLines) !== null && _a !== void 0 ? _a : [])]) {\n            b.line.scaleBy(scaleBy);\n            b.size *= scaleBy;\n            b.head *= scaleBy;\n        }\n        for (let r of this.rings) {\n            r.cx *= scaleBy;\n            r.cy *= scaleBy;\n            r.rw *= scaleBy;\n            r.rh *= scaleBy;\n            r.size *= scaleBy;\n        }\n        for (let p of this.paths) {\n            Vec.mulBy(p.px, scaleBy);\n            Vec.mulBy(p.py, scaleBy);\n            p.size *= scaleBy;\n        }\n        for (let spc of this.space) {\n            spc.box.scaleBy(scaleBy);\n            Vec.mulBy(spc.px, scaleBy);\n            Vec.mulBy(spc.py, scaleBy);\n        }\n    }\n    determineBoundary(padding) {\n        if (padding == null)\n            padding = 0;\n        if (this.space.length == 0)\n            return [0, 0, 2 * padding, 2 * padding];\n        let bounds = Vec.numberArray(0, 4);\n        let spc = this.space[0];\n        bounds[0] = spc.box.x;\n        bounds[1] = spc.box.y;\n        bounds[2] = spc.box.x + spc.box.w;\n        bounds[3] = spc.box.y + spc.box.h;\n        for (let n = this.space.length - 1; n > 0; n--) {\n            spc = this.space[n];\n            bounds[0] = Math.min(bounds[0], spc.box.x);\n            bounds[1] = Math.min(bounds[1], spc.box.y);\n            bounds[2] = Math.max(bounds[2], spc.box.x + spc.box.w);\n            bounds[3] = Math.max(bounds[3], spc.box.y + spc.box.h);\n        }\n        return bounds;\n    }\n    determineBoundaryBox() {\n        let [x1, y1, x2, y2] = this.determineBoundary();\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    squeezeInto(x, y, w, h, padding) {\n        if (padding != null && padding > 0) {\n            x += padding;\n            y += padding;\n            w -= 2 * padding;\n            h -= 2 * padding;\n        }\n        let bounds = this.determineBoundary(0);\n        let bw = bounds[2] - bounds[0], bh = bounds[3] - bounds[1];\n        if (bw > w || bh > h) {\n            let downScale = 1;\n            if (bw > w)\n                downScale = w / bw;\n            if (bh > h)\n                downScale = Math.min(downScale, h / bh);\n            this.scaleEverything(downScale);\n            Vec.mulBy(bounds, downScale);\n        }\n        this.offsetEverything(x - bounds[0] + 0.5 * (w - bounds[2] + bounds[0]), y - bounds[1] + 0.5 * (h - bounds[3] + bounds[1]));\n    }\n    limitBounds(w, h) {\n        let bounds = this.determineBoundary(0);\n        if (bounds[0] == bounds[2] && bounds[1] == bounds[3])\n            return;\n        let scale = Math.min(1, Math.min(w / (bounds[2] - bounds[0]), h / (bounds[3] - bounds[1])));\n        this.offsetEverything(-bounds[0], -bounds[1]);\n        this.scaleEverything(scale);\n    }\n    monochromate(col) {\n        for (let a of this.points)\n            a.col = col;\n        for (let b of this.lines)\n            b.col = col;\n    }\n    spatialCongestion(x, y, thresh) {\n        if (thresh == null)\n            thresh = 0.001;\n        let congest = 0;\n        for (let n = 0; n < this.points.length; n++) {\n            let a = this.points[n];\n            if (a == null)\n                continue;\n            let dx = a.oval.cx - x, dy = a.oval.cy - y;\n            congest += 1 / (dx * dx + dy * dy + thresh);\n        }\n        return congest;\n    }\n    clone() {\n        let dup = new ArrangeMolecule(this.mol, this.measure, this.policy, this.effects);\n        dup.scale = this.scale;\n        dup.bondSepPix = this.bondSepPix;\n        dup.lineSizePix = this.lineSizePix;\n        dup.fontSizePix = this.fontSizePix;\n        dup.ymul = this.ymul;\n        for (let a of this.points)\n            dup.points.push(clone(a));\n        for (let b of this.lines)\n            dup.lines.push(clone(b));\n        for (let s of this.space)\n            dup.space.push(clone(s));\n        return dup;\n    }\n    setupBondOrders() {\n        const mol = this.mol;\n        for (let n = 0; n < mol.numBonds; n++)\n            this.bondOrder[n] = mol.bondOrder(n + 1);\n        for (let n = 0; n < mol.numAtoms; n++) {\n            this.atomCharge[n] = mol.atomCharge(n + 1);\n            this.atomUnpaired[n] = mol.atomUnpaired(n + 1);\n        }\n        let delocalise = (obj, atoms) => {\n            let charge = 0, unpaired = 0;\n            for (let a of atoms) {\n                charge += this.atomCharge[a - 1];\n                unpaired += this.atomUnpaired[a - 1];\n                this.atomCharge[a - 1] = this.atomUnpaired[a - 1] = 0;\n            }\n            this.artifactCharge.set(obj, charge);\n            this.artifactUnpaired.set(obj, unpaired);\n            for (let a1 of atoms)\n                for (let a2 of mol.atomAdjList(a1))\n                    if (!atoms.includes(a2)) {\n                        let b = mol.findBond(a1, a2);\n                        if (this.bondOrder[b - 1] >= 0)\n                            this.bondOrder[b - 1] = 1;\n                    }\n        };\n        if (this.artifacts == null)\n            return;\n        for (let path of this.artifacts.getResPaths()) {\n            let charge = 0, unpaired = 0, orders = 0;\n            for (let n = 0; n < path.atoms.length; n++) {\n                charge += mol.atomCharge(path.atoms[n]);\n                unpaired += mol.atomUnpaired(path.atoms[n]);\n                let b = mol.findBond(path.atoms[n], path.atoms[n < path.atoms.length - 1 ? n + 1 : 0]);\n                if (b > 0)\n                    orders += mol.bondOrder(b);\n            }\n            let fractional = (2 * orders - charge + unpaired) / path.atoms.length < 1;\n            this.artifactFract.set(path, fractional);\n            for (let n = 0; n < path.atoms.length - 1; n++) {\n                let b = mol.findBond(path.atoms[n], path.atoms[n + 1]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = fractional ? -1 : 1;\n            }\n            delocalise(path, path.atoms);\n        }\n        for (let ring of this.artifacts.getResRings()) {\n            for (let n = 0; n < ring.atoms.length; n++) {\n                let b = mol.findBond(ring.atoms[n], ring.atoms[n < ring.atoms.length - 1 ? n + 1 : 0]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = 1;\n            }\n            delocalise(ring, ring.atoms);\n        }\n        for (let arene of this.artifacts.getArenes()) {\n            let alkeneLike = arene.atoms.length == 2;\n            for (let n = 0; n < arene.atoms.length; n++) {\n                if (!alkeneLike) {\n                    let b = mol.findBond(arene.atoms[n], arene.atoms[n < arene.atoms.length - 1 ? n + 1 : 0]);\n                    if (b > 0)\n                        this.bondOrder[b - 1] = 1;\n                }\n                let b = mol.findBond(arene.centre, arene.atoms[n]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = -1;\n            }\n            delocalise(arene, arene.atoms);\n        }\n    }\n    placeAdjunct(atom, str, fsz, col, angdir) {\n        let wad = this.measure.measureText(str, fsz);\n        let a = this.points[atom - 1];\n        let cx = a.oval.cx, cy = a.oval.cy, rw = 0.55 * wad[0], rh = 0.55 * wad[1];\n        if (str == '..') {\n            let zeroBonds = this.mol.atomAdjBonds(atom).filter((b) => this.mol.bondOrder(b) == 0);\n            if (zeroBonds.length == 1) {\n                let zpt = this.getPoint(this.mol.bondOther(zeroBonds[0], atom) - 1);\n                let dx = zpt.oval.cx - cx, dy = zpt.oval.cy - cy, inv = 1 / norm_xy(dx, dy);\n                let r = fsz * 0.15;\n                let ox = dy * inv * 2.5 * r, oy = -dx * inv * 2.5 * r;\n                let ext = 1.2 * (rw + rh) * inv;\n                [dx, dy] = [dx * ext, dy * ext];\n                this.points.push({ anum: 0, text: '.', fsz, col, oval: new Oval(cx + dx + ox, cy + dy + oy, r, r) });\n                this.points.push({ anum: 0, text: '.', fsz, col, oval: new Oval(cx + dx - ox, cy + dy - oy, r, r) });\n                return;\n            }\n        }\n        let bestScore = 0, bestDX = 0, bestDY = 0;\n        let px = Vec.numberArray(0, 4), py = Vec.numberArray(0, 4);\n        let angThresh = 10;\n        let shorted = false;\n        for (let ext = 0.5 * (a.oval.rw + a.oval.rh); !shorted && ext < 1.5 * this.measure.scale(); ext += 0.1 * this.measure.scale()) {\n            const DELTA = 5 * DEGRAD;\n            for (let d = 0; !shorted && d < Math.PI - 0.0001; d += DELTA)\n                for (let s = -1; s <= 1; s += 2) {\n                    let dang = d * s + (s > 0 ? DELTA : 0), ang = angdir + dang;\n                    let dx = ext * Math.cos(ang), dy = ext * Math.sin(ang) * -this.ymul;\n                    let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                    px[0] = x1;\n                    py[0] = y1;\n                    px[1] = x2;\n                    py[1] = y1;\n                    px[2] = x2;\n                    py[2] = y2;\n                    px[3] = x1;\n                    py[3] = y2;\n                    let viol = this.countPolyViolations(px, py, null, false);\n                    let score = 10 * viol + Math.abs(dang) + 10 * ext;\n                    let shortCircuit = viol == 0 && Math.abs(dang) < (angThresh + 1) * DEGRAD;\n                    if (bestScore == 0 || shortCircuit || score < bestScore) {\n                        bestScore = score;\n                        bestDX = dx;\n                        bestDY = dy;\n                    }\n                    if (shortCircuit) {\n                        shorted = true;\n                        break;\n                    }\n                }\n            angThresh += 5;\n        }\n        a =\n            {\n                anum: 0,\n                text: str,\n                fsz,\n                col,\n                oval: new Oval(cx + bestDX, cy + bestDY, rw, rh)\n            };\n        this.points.push(a);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(a.oval.cx - rw, a.oval.cy - rh, 2 * rw, 2 * rh),\n            px: [a.oval.cx - rw, a.oval.cx + rw, a.oval.cx + rw, a.oval.cx - rw],\n            py: [a.oval.cy - rh, a.oval.cy - rh, a.oval.cy + rh, a.oval.cy + rh]\n        };\n        this.space.push(spc);\n    }\n    processLabel(anum) {\n        let ax = this.mol.atomX(anum), ay = this.mol.atomY(anum);\n        let left = 0, right = 0;\n        let adj = this.mol.atomAdjList(anum);\n        for (let n = 0; n < adj.length; n++) {\n            let theta = Math.atan2(this.mol.atomY(adj[n]) - ay, this.mol.atomX(adj[n]) - ax) * RADDEG;\n            if (theta >= -15 && theta <= 15)\n                right += 3;\n            else if (theta >= -85 && theta <= 85)\n                right++;\n            else if (theta > 85 && theta < 95) { }\n            else if (theta < -85 && theta > -95) { }\n            else if (theta > 165 || theta < -165)\n                left += 3;\n            else\n                left++;\n        }\n        let label = this.mol.atomElement(anum);\n        let ibar = label.indexOf('|'), ibrace = label.indexOf('{');\n        let side = 0;\n        if (left == 0 && right == 0 && ibar < 0 && ibrace < 0) { }\n        else if (left < right)\n            side = -1;\n        else if (right < left)\n            side = 1;\n        else {\n            let score1 = CoordUtil.congestionPoint(this.mol, ax - 1, ay);\n            let score2 = CoordUtil.congestionPoint(this.mol, ax + 1, ay);\n            if (score1 < 0.5 * score2)\n                side = -1;\n            else\n                side = 1;\n        }\n        let chunks = null;\n        let position = null;\n        let primary = null;\n        let refchunk = 0;\n        if (ibar < 0 && ibrace < 0) {\n            if (side == 0)\n                chunks = [label];\n            else if (side < 0) {\n                chunks = [label.substring(0, label.length - 1), label.substring(label.length - 1)];\n                refchunk = 1;\n            }\n            else\n                chunks = [label.substring(0, 1), label.substring(1)];\n        }\n        else {\n            let bits = [];\n            let bpos = [];\n            let bpri = [];\n            let blocks = label.split('|');\n            if (side < 0)\n                blocks = Vec.reverse(blocks);\n            let buff = '';\n            for (let i = 0; i < blocks.length; i++) {\n                let isPrimary = (side >= 0 && i == 0) || (side < 0 && i == blocks.length - 1);\n                if (side < 0 && refchunk == 0 && i == blocks.length - 1)\n                    refchunk = bits.length;\n                let pos = 0;\n                buff = '';\n                for (let j = 0; j < blocks[i].length; j++) {\n                    let ch = blocks[i].charAt(j);\n                    if (ch == '{' || ch == '}') {\n                        if (buff.length > 0) {\n                            bits.push(buff.toString());\n                            bpos.push(pos);\n                            bpri.push(isPrimary);\n                        }\n                        buff = '';\n                        pos = ch == '{' ? -1 : 0;\n                    }\n                    else if (ch == '^' && pos == -1 && buff.length == 0)\n                        pos = 1;\n                    else\n                        buff += ch;\n                }\n                if (buff.length > 0) {\n                    bits.push(buff.toString());\n                    bpos.push(pos);\n                    bpri.push(isPrimary);\n                }\n            }\n            chunks = bits;\n            position = bpos;\n            primary = bpri;\n            while (refchunk < chunks.length - 1 && position[refchunk] != 0)\n                refchunk++;\n        }\n        let PADDING = 1.1;\n        let SSFRACT = 0.6;\n        let chunkw = Vec.numberArray(0, chunks.length);\n        let tw = 0;\n        for (let n = 0; n < chunks.length; n++) {\n            chunkw[n] = this.measure.measureText(chunks[n], this.fontSizePix)[0];\n            if (position != null && position[n] != 0)\n                chunkw[n] *= SSFRACT;\n            tw += chunkw[n];\n        }\n        let x = this.measure.angToX(ax), y = this.measure.angToY(ay);\n        for (let n = 0; n < refchunk; n++)\n            x -= chunkw[n];\n        x -= 0.5 * chunkw[refchunk];\n        for (let n = 0; n < chunks.length; n++) {\n            let a = {\n                anum: (n == refchunk || (primary != null && primary[n])) ? anum : 0,\n                text: chunks[n],\n                fsz: this.fontSizePix,\n                col: this.policy.data.atomCols[this.mol.atomicNumber(anum)],\n                oval: new Oval(x + 0.5 * chunkw[n], y, 0.5 * chunkw[n] * PADDING, 0.5 * this.fontSizePix * PADDING)\n            };\n            if (position != null && position[n] != 0) {\n                a.fsz *= SSFRACT;\n                if (position[n] < 0)\n                    a.oval.cy += a.fsz * 0.7 * (this.measure.yIsUp() ? -1 : 1);\n                else\n                    a.oval.cy -= a.fsz * 0.3 * (this.measure.yIsUp() ? -1 : 1);\n            }\n            if (n == refchunk) {\n                this.points[anum - 1] = a;\n                this.space[anum - 1] = this.computeSpacePoint(a);\n            }\n            else {\n                this.points.push(a);\n                this.space.push(this.computeSpacePoint(a));\n            }\n            x += chunkw[n];\n        }\n    }\n    backOffAtom(atom, x, y, fx, fy, minDist) {\n        if (x == fx && y == fy)\n            return 1;\n        let dx = x - fx, dy = y - fy, dist = norm_xy(dx, dy), inv = 1.0 / dist;\n        const bump = 0.1 * this.measure.scale();\n        let xbump = x + 2 * bump * dx * inv, ybump = y + 2 * bump * dy * inv;\n        let ext = dist;\n        let active = false;\n        for (let spc of this.space)\n            if (spc.anum == atom) {\n                const sz = spc.px.length;\n                if (sz == 0)\n                    continue;\n                for (let n = 0; n < sz; n++) {\n                    let nn = n < sz - 1 ? n + 1 : 0;\n                    let x1 = spc.px[n], y1 = spc.py[n], x2 = spc.px[nn], y2 = spc.py[nn];\n                    if (!GeomUtil.doLineSegsIntersect(xbump, ybump, fx, fy, x1, y1, x2, y2))\n                        continue;\n                    let xy = GeomUtil.lineIntersect(x, y, fx, fy, x1, y1, x2, y2);\n                    active = true;\n                    ext = Math.min(ext, norm_xy(xy[0] - fx, xy[1] - fy));\n                }\n            }\n        if (active) {\n            ext = Math.max(minDist, ext - bump);\n            return ext / dist;\n        }\n        else\n            return 1;\n    }\n    backOffAtomDelta(atom, x, y, fx, fy, minDist) {\n        let ext = this.backOffAtom(atom, x, y, fx, fy, minDist);\n        if (ext >= 1)\n            return null;\n        ext = 1 - ext;\n        let dx = (fx - x) * ext, dy = (fy - y) * ext;\n        return [norm2_xy(dx, dy), dx, dy];\n    }\n    shrinkBond(x, y, fx, fy, ext) {\n        if (ext == 1)\n            return [x, y];\n        let dx = x - fx, dy = y - fy;\n        return [fx + ext * dx, fy + ext * dy];\n    }\n    ensureMinimumBondLength(xy1, xy2, x1, y1, x2, y2, minDist) {\n        let dx = xy2[0] - xy1[0], dy = xy2[1] - xy1[1];\n        let dsq = norm2_xy(dx, dy);\n        minDist = Math.min(minDist, norm_xy(x2 - x1, y2 - y1));\n        if (dsq >= sqr(minDist - 0.0001))\n            return;\n        let d12 = Math.sqrt(dsq), d1 = norm_xy(xy1[0] - x1, xy1[1] - y1), d2 = norm_xy(x2 - xy2[0], y2 - xy2[1]);\n        let mag = 1 - minDist / d12, invD12 = 1.0 / (d1 + d2), mag1 = d1 * mag * invD12, mag2 = d2 * mag * invD12;\n        xy1[0] -= dx * mag1;\n        xy1[1] -= dy * mag1;\n        xy2[0] += dx * mag2;\n        xy2[1] += dy * mag2;\n    }\n    orderedRingList() {\n        let rings = [];\n        let SIZE_ORDER = [6, 5, 7, 4, 3];\n        for (let i = 0; i < SIZE_ORDER.length; i++) {\n            let nring = this.mol.findRingsOfSize(SIZE_ORDER[i]);\n            for (let j = 0; j < nring.length; j++)\n                rings.push(nring[j]);\n        }\n        let ringsz = rings.length;\n        let ringbusy = Vec.numberArray(0, this.mol.numAtoms);\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[n];\n            for (let i = 0; i < r.length; i++)\n                ringbusy[r[i] - 1]++;\n        }\n        let ringscore = Vec.numberArray(0, ringsz);\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[n];\n            for (let i = 0; i < r.length; i++)\n                ringscore[n] += ringbusy[r[i] - 1];\n        }\n        let ringorder = Vec.idxSort(ringscore);\n        let resbcount = Vec.numberArray(0, ringsz), maxbcount = 0;\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[ringorder[n]];\n            for (let i = 0; i < r.length; i++) {\n                let j = this.mol.findBond(r[i], r[i + 1 < r.length ? i + 1 : 0]);\n                if (this.mol.bondOrder(j) == 2)\n                    resbcount[n]++;\n            }\n            maxbcount = Math.max(maxbcount, resbcount[n]);\n        }\n        let pos = 0, ret = [];\n        for (let sz = maxbcount; sz >= 0; sz--) {\n            for (let n = 0; n < ringsz; n++)\n                if (resbcount[n] == sz)\n                    ret.push(rings[ringorder[n]]);\n        }\n        return ret;\n    }\n    orthogonalDelta(x1, y1, x2, y2, d) {\n        let ox = y1 - y2, oy = x2 - x1, dsq = norm2_xy(ox, oy);\n        let sc = dsq > 0 ? d / Math.sqrt(dsq) : 1;\n        return [ox * sc, oy * sc];\n    }\n    processDoubleBond(idx, priority) {\n        let bfr = this.mol.bondFrom(idx), bto = this.mol.bondTo(idx);\n        let nfr = this.mol.atomAdjList(bfr), nto = this.mol.atomAdjList(bto);\n        let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n        let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n        let oxy = this.orthogonalDelta(x1, y1, x2, y2, this.bondSepPix);\n        const minDist = MINBOND_EXOTIC * this.measure.scale();\n        let dx = x2 - x1, dy = y2 - y1, btheta = Math.atan2(dy, dx);\n        let countFLeft = 0, countFRight = 0, countTLeft = 0, countTRight = 0;\n        let idxFLeft = 0, idxFRight = 0, idxTLeft = 0, idxTRight = 0;\n        let noshift = false;\n        for (let n = 0; n < nfr.length; n++)\n            if (nfr[n] != bto) {\n                let bo = this.mol.bondOrder(this.mol.findBond(bfr, nfr[n]));\n                if (bo == 0)\n                    continue;\n                if (bo > 1) {\n                    noshift = true;\n                    break;\n                }\n                let ispri = false;\n                for (let i = 0; i < (priority == null ? 0 : priority.length); i++)\n                    if (priority[i] == nfr[n])\n                        ispri = true;\n                let theta = angleDiff(Math.atan2(this.points[nfr[n] - 1].oval.cy - y1, this.points[nfr[n] - 1].oval.cx - x1), btheta);\n                if (Math.abs(theta) * RADDEG > 175) {\n                    noshift = true;\n                    break;\n                }\n                if (theta > 0) {\n                    if (ispri)\n                        countFLeft++;\n                    idxFLeft = nfr[n];\n                }\n                else {\n                    if (ispri)\n                        countFRight++;\n                    idxFRight = nfr[n];\n                }\n            }\n        for (let n = 0; n < nto.length; n++)\n            if (nto[n] != bfr) {\n                let bo = this.mol.bondOrder(this.mol.findBond(bto, nto[n]));\n                if (bo == 0)\n                    continue;\n                if (bo > 1) {\n                    noshift = true;\n                    break;\n                }\n                let ispri = false;\n                for (let i = 0; i < (priority == null ? 0 : priority.length); i++)\n                    if (priority[i] == nto[n])\n                        ispri = true;\n                let theta = angleDiff(Math.atan2(this.points[nto[n] - 1].oval.cy - y2, this.points[nto[n] - 1].oval.cx - x2), btheta);\n                if (Math.abs(theta) * RADDEG > 175) {\n                    noshift = true;\n                    break;\n                }\n                if (theta > 0) {\n                    if (ispri)\n                        countTLeft++;\n                    idxTLeft = nto[n];\n                }\n                else {\n                    if (ispri)\n                        countTRight++;\n                    idxTRight = nto[n];\n                }\n            }\n        let side = 0;\n        if (noshift || countFLeft > 1 || countFRight > 1 || countTLeft > 1 || countTRight > 1) { }\n        else if (countFLeft > 0 && countFRight > 0) { }\n        else if (countTLeft > 0 && countTRight > 0) { }\n        else if (countFLeft > 0 || countTLeft > 0)\n            side = 1;\n        else if (countFRight > 0 || countTRight > 0)\n            side = -1;\n        let sz = this.lineSizePix;\n        let ax1 = x1, ay1 = y1, ax2 = x2, ay2 = y2;\n        let bx1 = 0, by1 = 0, bx2 = 0, by2 = 0;\n        if (side == 0) {\n            ax1 = x1 + 0.5 * oxy[0];\n            ay1 = y1 + 0.5 * oxy[1];\n            ax2 = x2 + 0.5 * oxy[0];\n            ay2 = y2 + 0.5 * oxy[1];\n            bx1 = x1 - 0.5 * oxy[0];\n            by1 = y1 - 0.5 * oxy[1];\n            bx2 = x2 - 0.5 * oxy[0];\n            by2 = y2 - 0.5 * oxy[1];\n        }\n        else if (side > 0) {\n            bx1 = x1 + oxy[0];\n            by1 = y1 + oxy[1];\n            bx2 = x2 + oxy[0];\n            by2 = y2 + oxy[1];\n            if (nfr.length > 1 && this.points[bfr - 1].text == null) {\n                bx1 += oxy[1];\n                by1 -= oxy[0];\n            }\n            if (nto.length > 1 && this.points[bto - 1].text == null) {\n                bx2 -= oxy[1];\n                by2 += oxy[0];\n            }\n        }\n        else if (side < 0) {\n            bx1 = x1 - oxy[0];\n            by1 = y1 - oxy[1];\n            bx2 = x2 - oxy[0];\n            by2 = y2 - oxy[1];\n            if (nfr.length > 1 && this.points[bfr - 1].text == null) {\n                bx1 += oxy[1];\n                by1 -= oxy[0];\n            }\n            if (nto.length > 1 && this.points[bto - 1].text == null) {\n                bx2 -= oxy[1];\n                by2 += oxy[0];\n            }\n        }\n        if (side != 0) {\n            if (this.mol.atomElement(bfr).length <= 2 && this.mol.atomAdjCount(bfr) == 1 && this.points[bfr - 1].text != null) {\n                this.bumpAtomPosition(bfr, 0.5 * oxy[0] * side, 0.5 * oxy[1] * side);\n            }\n            if (this.mol.atomElement(bto).length <= 2 && this.mol.atomAdjCount(bto) == 1 && this.points[bto - 1].text != null) {\n                this.bumpAtomPosition(bto, 0.5 * oxy[0] * side, 0.5 * oxy[1] * side);\n            }\n        }\n        let delta1 = this.backOffAtomDelta(bfr, ax1, ay1, ax2, ay2, minDist), delta2 = this.backOffAtomDelta(bfr, bx1, by1, bx2, by2, minDist);\n        if (delta1 != null || delta2 != null) {\n            let delta = (delta1 == null ? 0 : delta1[0]) > (delta2 == null ? 0 : delta2[0]) ? delta1 : delta2;\n            ax1 += delta[1];\n            ay1 += delta[2];\n            bx1 += delta[1];\n            by1 += delta[2];\n        }\n        let delta3 = this.backOffAtomDelta(bto, ax2, ay2, ax1, ay1, minDist), delta4 = this.backOffAtomDelta(bto, bx2, by2, bx1, by1, minDist);\n        if (delta3 != null || delta4 != null) {\n            let delta = (delta3 == null ? 0 : delta3[0]) > (delta4 == null ? 0 : delta4[0]) ? delta3 : delta4;\n            ax2 += delta[1];\n            ay2 += delta[2];\n            bx2 += delta[1];\n            by2 += delta[2];\n        }\n        if (side == 0 && !noshift) {\n            let xy = null;\n            if (this.points[bfr - 1].text == null && !this.mol.bondInRing(idx)) {\n                xy = this.adjustBondPosition(idxFLeft, bfr, ax1, ay1, ax2, ay2);\n                if (xy != null) {\n                    ax1 = xy[0];\n                    ay1 = xy[1];\n                }\n                xy = this.adjustBondPosition(idxFRight, bfr, bx1, by1, bx2, by2);\n                if (xy != null) {\n                    bx1 = xy[0];\n                    by1 = xy[1];\n                }\n            }\n            if (this.points[bto - 1].text == null && !this.mol.bondInRing(idx)) {\n                xy = this.adjustBondPosition(idxTLeft, bto, ax2, ay2, ax1, ay1);\n                if (xy != null) {\n                    ax2 = xy[0];\n                    ay2 = xy[1];\n                }\n                xy = this.adjustBondPosition(idxTRight, bto, bx2, by2, bx1, by1);\n                if (xy != null) {\n                    bx2 = xy[0];\n                    by2 = xy[1];\n                }\n            }\n        }\n        let lt = this.mol.bondType(idx) == Molecule.BONDTYPE_UNKNOWN ? BLineType.Unknown : BLineType.Normal;\n        let head = lt == BLineType.Unknown ? 0.1 * this.scale : 0;\n        let col = this.effects.colBond[idx];\n        if (!col)\n            col = this.policy.data.foreground;\n        let b1 = {\n            bnum: idx,\n            bfr,\n            bto,\n            type: lt,\n            line: new Line(ax1, ay1, ax2, ay2),\n            size: sz,\n            head,\n            col\n        };\n        let b2 = {\n            bnum: idx,\n            bfr,\n            bto,\n            type: lt,\n            line: new Line(bx1, by1, bx2, by2),\n            size: sz,\n            head,\n            col\n        };\n        this.lines.push(b1);\n        this.lines.push(b2);\n        this.space.push(this.computeSpaceLine(b1));\n        this.space.push(this.computeSpaceLine(b2));\n    }\n    placeHydrogen(idx, hcount, fussy) {\n        let font = FontData.main;\n        const SSFRACT = 0.6;\n        const GLYPH_H = font.getIndex('H');\n        let a = this.points[idx];\n        let emscale = a.fsz * font.INV_UNITS_PER_EM;\n        let sub = hcount >= 2 ? hcount.toString() : '';\n        let outlineX = font.getOutlineX(GLYPH_H), outlineY = font.getOutlineY(GLYPH_H);\n        let firstEMW = font.HORIZ_ADV_X[GLYPH_H], emw = firstEMW;\n        for (let n = 0; n < sub.length; n++) {\n            let ch = sub.charAt(n), g = font.getIndex(ch);\n            if (n == 0) {\n                emw += font.getKerning('H', ch);\n            }\n            else {\n                let chp = sub.charAt(n - 1);\n                emw += font.getKerning(chp, ch) * SSFRACT;\n            }\n            let extraX = font.getOutlineX(g), extraY = font.getOutlineY(g);\n            Vec.addTo(extraX, emw / SSFRACT);\n            Vec.addTo(extraY, (SSFRACT - 1) * font.ASCENT * 1.30);\n            Vec.mulBy(extraX, SSFRACT);\n            Vec.mulBy(extraY, SSFRACT);\n            outlineX = outlineX.concat(extraX);\n            outlineY = outlineY.concat(extraY);\n            emw += font.HORIZ_ADV_X[g] * SSFRACT;\n        }\n        if (sub.length > 0) {\n            let qh = new QuickHull(outlineX, outlineY, 0);\n            outlineX = qh.hullX;\n            outlineY = qh.hullY;\n        }\n        let emdx = -0.5 * firstEMW, emdy = 0.5 * font.ASCENT * font.ASCENT_FUDGE;\n        for (let n = 0; n < outlineX.length; n++) {\n            outlineX[n] = a.oval.cx + (emdx + outlineX[n]) * emscale;\n            outlineY[n] = a.oval.cy + (emdy - outlineY[n]) * emscale * this.ymul;\n        }\n        let dx = 0, dy = 0;\n        let srcWAD = this.measure.measureText(a.text, a.fsz);\n        if (fussy) {\n            let RIGHTLEFT = [0, 1, 2, 3];\n            let LEFTRIGHT = [1, 0, 2, 3];\n            let UPDOWN = [2, 3, 0, 1];\n            let DOWNUP = [3, 2, 0, 1];\n            let quad = RIGHTLEFT, adj = this.mol.atomAdjList(a.anum);\n            if (adj.length == 0) {\n                let LEFTIES = ['O', 'S', 'F', 'Cl', 'Br', 'I'];\n                if (this.mol.atomCharge(a.anum) == 0 && this.mol.atomUnpaired(a.anum) == 0 &&\n                    LEFTIES.indexOf(this.mol.atomElement(a.anum)) >= 0)\n                    quad = LEFTRIGHT;\n                else\n                    quad = RIGHTLEFT;\n            }\n            else {\n                let allLeft = true, allRight = true, allUp = true, allDown = true;\n                const ax = this.mol.atomX(a.anum), ay = this.mol.atomY(a.anum);\n                for (let n = 0; n < adj.length; n++) {\n                    const bx = this.mol.atomX(adj[n]), by = this.mol.atomY(adj[n]);\n                    if (bx > ax + 0.01)\n                        allLeft = false;\n                    if (bx < ax - 0.01)\n                        allRight = false;\n                    if (by < ay - 0.01)\n                        allUp = false;\n                    if (by > ay + 0.01)\n                        allDown = false;\n                }\n                if (allLeft) { }\n                else if (allRight)\n                    quad = LEFTRIGHT;\n                else if (allUp)\n                    quad = DOWNUP;\n                else if (allDown)\n                    quad = UPDOWN;\n            }\n            for (let n = 0; n < 4; n++) {\n                let tx = 0, ty = 0;\n                if (quad[n] == 0)\n                    tx = 0.5 * srcWAD[0] + 0.5 * firstEMW * emscale;\n                else if (quad[n] == 1)\n                    tx = -0.5 * srcWAD[0] - (emw - 0.5 * firstEMW) * emscale;\n                else if (quad[n] == 2)\n                    ty = (1.1 * srcWAD[1] + 0.5 * srcWAD[2]) * -this.ymul;\n                else if (quad[n] == 3)\n                    ty = (1.1 * srcWAD[1] + 0.5 * srcWAD[2]) * this.ymul;\n                Vec.addTo(outlineX, tx);\n                Vec.addTo(outlineY, ty);\n                let viol = this.countPolyViolations(outlineX, outlineY, null, true);\n                Vec.addTo(outlineX, -tx);\n                Vec.addTo(outlineY, -ty);\n                if (viol == 0) {\n                    dx = tx;\n                    dy = ty;\n                    break;\n                }\n            }\n            if (dx == 0 && dy == 0)\n                return false;\n        }\n        else {\n            const mx1 = Vec.min(outlineY), mx2 = Vec.max(outlineX), my1 = Vec.min(outlineY), my2 = Vec.max(outlineY), cx = 0.5 * (mx1 + mx2), cy = 0.5 * (my1 + my2);\n            const mag = 1 + this.measure.scale() * this.policy.data.fontSize * ArrangeMolecule.FONT_CORRECT * 0.1 / Math.max(mx2 - cx, my2 - cy);\n            const psz = outlineX.length;\n            let magPX = outlineX.slice(0), magPY = outlineY.slice(0);\n            for (let n = 0; n < psz; n++) {\n                magPX[n] = (magPX[n] - cx) * mag + cx;\n                magPY[n] = (magPY[n] - cy) * mag + cy;\n            }\n            let bestScore = 0, bestExt = 0, bestAng = 0;\n            for (let ext = 0.5 * (a.oval.rw + a.oval.rh); ext < 1.5 * this.measure.scale(); ext += 0.1 * this.measure.scale()) {\n                let anyNoClash = false;\n                for (let ang = 0; ang < 2 * Math.PI; ang += 5 * DEGRAD) {\n                    let tx = ext * Math.cos(ang), ty = ext * Math.sin(ang);\n                    Vec.addTo(magPX, tx);\n                    Vec.addTo(magPY, ty);\n                    let viol = this.countPolyViolations(magPX, magPY, null, false);\n                    Vec.addTo(magPX, -tx);\n                    Vec.addTo(magPY, -ty);\n                    if (viol == 0)\n                        anyNoClash = true;\n                    let score = 10 * viol + this.spatialCongestion(a.oval.cx + tx, a.oval.cy + ty, 0.5) + 2 * ext;\n                    if (bestScore == 0 || score < bestScore) {\n                        bestScore = score;\n                        bestExt = ext;\n                        bestAng = ang;\n                        dx = tx;\n                        dy = ty;\n                    }\n                }\n                if (anyNoClash)\n                    break;\n            }\n        }\n        let wad = this.measure.measureText('H', a.fsz);\n        const PADDING = 1.1;\n        let ah = {\n            anum: 0,\n            text: 'H',\n            fsz: a.fsz,\n            col: a.col,\n            oval: new Oval(a.oval.cx + dx, a.oval.cy + dy, 0.5 * wad[0] * PADDING, 0.5 * wad[1] * PADDING)\n        };\n        this.points.push(ah);\n        if (sub.length > 0) {\n            const subFsz = SSFRACT * a.fsz;\n            wad = this.measure.measureText(sub, subFsz);\n            let an = {\n                anum: 0,\n                text: sub,\n                fsz: subFsz,\n                col: a.col,\n                oval: new Oval(ah.oval.cx + 0.5 * firstEMW * a.fsz * font.INV_UNITS_PER_EM + 0.5 * wad[0], ah.oval.cy + (1 - SSFRACT) * a.fsz, 0.5 * wad[0] * PADDING, 0.5 * wad[1] * PADDING)\n            };\n            this.points.push(an);\n        }\n        Vec.addTo(outlineX, dx);\n        Vec.addTo(outlineY, dy);\n        let minX = Vec.min(outlineX), minY = Vec.min(outlineY);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(minX, minY, Vec.max(outlineX) - minX, Vec.max(outlineY) - minY),\n            px: outlineX,\n            py: outlineY\n        };\n        this.space.push(spc);\n        return true;\n    }\n    computeSpacePoint(a) {\n        let s = {\n            anum: a.anum,\n            bnum: 0,\n            box: new Box(),\n            px: [],\n            py: []\n        };\n        const font = FontData.main;\n        let outlineX = [], outlineY = [];\n        let emw = 0, nglyphs = 0;\n        if (a.text != null) {\n            for (let n = 0; n < a.text.length; n++) {\n                let ch1 = a.text.charAt(n);\n                let i = font.getIndex(ch1);\n                if (i >= 0) {\n                    if (emw == 0) {\n                        outlineX = font.getOutlineX(i);\n                        outlineY = font.getOutlineY(i);\n                        nglyphs = 1;\n                    }\n                    else {\n                        let extraX = font.getOutlineX(i), extraY = font.getOutlineY(i);\n                        if (extraX.length > 0) {\n                            Vec.addTo(extraX, emw);\n                            outlineX = outlineX.concat(extraX);\n                            outlineY = outlineY.concat(extraY);\n                            nglyphs++;\n                        }\n                    }\n                    emw += font.HORIZ_ADV_X[i];\n                }\n                else\n                    emw += font.MISSING_HORZ;\n                if (n < a.text.length - 1) {\n                    let ch2 = a.text.charAt(n + 1);\n                    emw += font.getKerning(ch1, ch2);\n                }\n            }\n        }\n        if (outlineX.length > 0) {\n            if (nglyphs > 1) {\n                let qh = new QuickHull(outlineX, outlineY, 0);\n                outlineX = qh.hullX;\n                outlineY = qh.hullY;\n            }\n            let emdx = -0.5 * emw, emdy = 0.5 * font.ASCENT * font.ASCENT_FUDGE;\n            let emscale = a.fsz * font.INV_UNITS_PER_EM;\n            for (let n = 0; n < outlineX.length; n++) {\n                outlineX[n] = a.oval.cx + (emdx + outlineX[n]) * emscale;\n                outlineY[n] = a.oval.cy + (emdy - outlineY[n]) * emscale * this.ymul;\n            }\n            s.px = outlineX;\n            s.py = outlineY;\n            let minX = Vec.min(outlineX), minY = Vec.min(outlineY);\n            s.box = new Box(minX, minY, Vec.max(outlineX) - minX, Vec.max(outlineY) - minY);\n        }\n        else {\n            s.box = Box.fromOval(a.oval);\n            if (s.box.w > 0 && s.box.h > 0) {\n                s.px = [s.box.minX(), s.box.maxX(), s.box.maxX(), s.box.minX()];\n                s.py = [s.box.minY(), s.box.minY(), s.box.maxY(), s.box.maxY()];\n            }\n        }\n        return s;\n    }\n    computeSpaceLine(b) {\n        let s = {\n            anum: 0,\n            bnum: b.bnum,\n            box: new Box(),\n            px: [],\n            py: []\n        };\n        if (b.type == BLineType.Normal || b.type == BLineType.Dotted || b.type == BLineType.DotDir) {\n            s.px = [b.line.x1, b.line.x2];\n            s.py = [b.line.y1, b.line.y2];\n        }\n        else {\n            const dx = b.line.x2 - b.line.x1, dy = b.line.y2 - b.line.y1;\n            const norm = b.head / Math.sqrt(dx * dx + dy * dy);\n            const ox = norm * dy, oy = -norm * dx;\n            if (b.type == BLineType.Unknown) {\n                s.px = [b.line.x1 + ox, b.line.x1 - ox, b.line.x2 - ox, b.line.x2 + ox];\n                s.py = [b.line.y1 + oy, b.line.y1 - oy, b.line.y2 - oy, b.line.y2 + oy];\n            }\n            else {\n                s.px = [b.line.x1, b.line.x2 - ox, b.line.x2 + ox];\n                s.py = [b.line.y1, b.line.y2 - oy, b.line.y2 + oy];\n            }\n        }\n        s.box.x = Vec.min(s.px) - b.size;\n        s.box.y = Vec.min(s.py) - b.size;\n        s.box.w = Vec.max(s.px) - s.box.x + b.size;\n        s.box.h = Vec.max(s.py) - s.box.y + b.size;\n        return s;\n    }\n    bumpAtomPosition(atom, dx, dy) {\n        let p = this.points[atom - 1];\n        p.oval.cx += dx;\n        p.oval.cy += dy;\n        for (let n = this.space.length - 1; n >= 0; n--) {\n            let s = this.space[n - 1];\n            if (s == null || s.anum != atom)\n                continue;\n            s.box.x += dx;\n            s.box.y += dy;\n            Vec.addTo(s.px, dx);\n            Vec.addTo(s.py, dy);\n        }\n    }\n    spaceSubset(x, y, w, h) {\n        let subset = [];\n        for (let s of this.space)\n            if (GeomUtil.rectsIntersect(x, y, w, h, s.box.x, s.box.y, s.box.w, s.box.h))\n                subset.push(s);\n        return subset;\n    }\n    countPolyViolations(px, py, space, shortCircuit) {\n        if (space == null)\n            space = this.space;\n        let hits = 0;\n        const psz = px.length, nspc = space.length;\n        let pr = new Box(), sr = new Box();\n        for (let i1 = 0; i1 < psz; i1++) {\n            let i2 = i1 < psz - 1 ? i1 + 1 : 0;\n            pr.x = Math.min(px[i1], px[i2]) - 1;\n            pr.y = Math.min(py[i1], py[i2]) - 1;\n            pr.w = Math.max(px[i1], px[i2]) - pr.x + 2;\n            pr.h = Math.max(py[i1], py[i2]) - pr.y + 2;\n            for (let j = 0; j < nspc; j++) {\n                let spc = space[j];\n                if (spc.px == null)\n                    continue;\n                sr.x = spc.box.x - 1;\n                sr.y = spc.box.y - 1;\n                sr.w = spc.box.w + 1;\n                sr.h = spc.box.h + 1;\n                if (!pr.intersects(sr))\n                    continue;\n                let ssz = spc.px.length;\n                for (let j1 = 0; j1 < ssz; j1++) {\n                    let j2 = j1 < ssz - 1 ? j1 + 1 : 0;\n                    sr.x = Math.min(spc.px[j1], spc.px[j2]) - 1;\n                    sr.y = Math.min(spc.py[j1], spc.py[j2]) - 1;\n                    sr.w = Math.max(spc.px[j1], spc.px[j2]) - sr.x + 2;\n                    sr.h = Math.max(spc.py[j1], spc.py[j2]) - sr.y + 2;\n                    if (!pr.intersects(sr))\n                        continue;\n                    if (GeomUtil.doLineSegsIntersect(px[i1], py[i1], px[i2], py[i2], spc.px[j1], spc.py[j1], spc.px[j2], spc.py[j2])) {\n                        if (shortCircuit)\n                            return 1;\n                        hits++;\n                        break;\n                    }\n                    if (ssz == 1)\n                        break;\n                }\n            }\n        }\n        pr.x = Vec.min(px);\n        pr.y = Vec.min(py);\n        pr.w = Vec.max(px) - pr.x;\n        pr.h = Vec.max(py) - pr.y;\n        for (let n = nspc - 1; n >= 0; n--) {\n            let spc = space[n];\n            sr.x = spc.box.x;\n            sr.y = spc.box.y;\n            sr.w = spc.box.w;\n            sr.h = spc.box.h;\n            if (!pr.intersects(sr))\n                continue;\n            for (let i = spc.px.length - 1; i >= 0; i--)\n                if (GeomUtil.pointInPolygon(spc.px[i], spc.py[i], px, py)) {\n                    if (shortCircuit)\n                        return 1;\n                    hits++;\n                    break;\n                }\n            for (let i = 0; i < psz; i++)\n                if (GeomUtil.pointInPolygon(px[i], py[i], spc.px, spc.py)) {\n                    if (shortCircuit)\n                        return 1;\n                    hits++;\n                    break;\n                }\n        }\n        return hits;\n    }\n    adjustBondPosition(bf, bt, x1, y1, x2, y2) {\n        if (bf == 0 || bt == 0)\n            return null;\n        for (let n = 0; n < this.lines.length; n++) {\n            let b = this.lines[n];\n            if (this.mol.bondOrder(b.bnum) != 1 || this.mol.bondType(b.bnum) != Molecule.BONDTYPE_NORMAL)\n                continue;\n            let alt = false;\n            if (this.mol.bondFrom(b.bnum) == bf && this.mol.bondTo(b.bnum) == bt) { }\n            else if (this.mol.bondFrom(b.bnum) == bt && this.mol.bondTo(b.bnum) == bf)\n                alt = true;\n            else\n                continue;\n            let th = angleDiff(Math.atan2(b.line.y2 - b.line.y1, b.line.x2 - b.line.x1), Math.atan2(y2 - y1, x2 - x1)) * RADDEG;\n            if ((th > -5 && th < 5) || th > 175 || th < -175)\n                continue;\n            let xy = GeomUtil.lineIntersect(b.line.x1, b.line.y1, b.line.x2, b.line.y2, x1, y1, x2, y2);\n            if (this.mol.atomRingBlock(bt) == 0) {\n                if (alt) {\n                    b.line.x1 = xy[0];\n                    b.line.y1 = xy[1];\n                }\n                else {\n                    b.line.x2 = xy[0];\n                    b.line.y2 = xy[1];\n                }\n            }\n            return xy;\n        }\n        return null;\n    }\n    priorityDoubleSubstit(idx) {\n        let bf = this.mol.bondFrom(idx), bt = this.mol.bondTo(idx);\n        let nf = this.mol.atomAdjList(bf), nt = this.mol.atomAdjList(bt);\n        let a1 = this.points[bf - 1], a2 = this.points[bt - 1];\n        let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n        let dx = x2 - x1, dy = y2 - y1, btheta = Math.atan2(dy, dx);\n        let idxFLeft = 0, idxFRight = 0, idxTLeft = 0, idxTRight = 0;\n        for (let n = 0; n < nf.length; n++)\n            if (nf[n] != bt) {\n                let theta = angleDiff(Math.atan2(this.points[nf[n] - 1].oval.cy - y1, this.points[nf[n] - 1].oval.cx - x1), btheta);\n                if (theta > 0) {\n                    if (idxFLeft != 0)\n                        return null;\n                    idxFLeft = nf[n];\n                }\n                else {\n                    if (idxFRight != 0)\n                        return null;\n                    idxFRight = nf[n];\n                }\n            }\n        for (let n = 0; n < nt.length; n++)\n            if (nt[n] != bf) {\n                let theta = angleDiff(Math.atan2(this.points[nt[n] - 1].oval.cy - y2, this.points[nt[n] - 1].oval.cx - x2), btheta);\n                if (theta > 0) {\n                    if (idxTLeft != 0)\n                        return null;\n                    idxTLeft = nt[n];\n                }\n                else {\n                    if (idxTRight != 0)\n                        return null;\n                    idxTRight = nt[n];\n                }\n            }\n        let sumFrom = (idxFLeft > 0 ? 1 : 0) + (idxFRight > 0 ? 1 : 0), sumTo = (idxTLeft > 0 ? 1 : 0) + (idxTRight > 0 ? 1 : 0);\n        if (sumFrom == 1 && sumTo == 0)\n            return [idxFLeft > 0 ? idxFLeft : idxFRight];\n        if (sumFrom == 0 && sumTo == 1)\n            return [idxTLeft > 0 ? idxTLeft : idxTRight];\n        if (sumFrom == 1 && sumTo == 1) {\n            if (idxFLeft > 0 && idxTLeft > 0)\n                return [idxFLeft, idxTLeft];\n            if (idxFRight > 0 && idxTRight > 0)\n                return [idxFRight, idxTRight];\n            let oxy = this.orthogonalDelta(x1, y1, x2, y2, this.bondSepPix);\n            let congestLeft = this.spatialCongestion(0.5 * (x1 + x2) + oxy[0], 0.5 * (y1 + y2) + oxy[1]);\n            let congestRight = this.spatialCongestion(0.5 * (x1 + x2) - oxy[0], 0.5 * (y1 + y2) - oxy[1]);\n            if (congestLeft < congestRight)\n                return [idxFLeft > 0 ? idxFLeft : idxTLeft];\n            else\n                return [idxFRight > 0 ? idxFRight : idxTRight];\n        }\n        if (sumFrom == 2 && sumTo == 1) {\n            if (idxTLeft == 0)\n                return [idxFRight, idxTRight];\n            else\n                return [idxFLeft, idxTLeft];\n        }\n        if (sumFrom == 1 && sumTo == 2) {\n            if (idxFLeft == 0)\n                return [idxFRight, idxTRight];\n            else\n                return [idxFLeft, idxTLeft];\n        }\n        return null;\n    }\n    annotateAtom(atom, text, col, fsz) {\n        let [tw, ta] = this.measure.measureText(text, fsz);\n        let a = this.points[atom - 1];\n        let cx = a.oval.cx, cy = a.oval.cy, rw = 0.6 * tw, rh = 0.6 * ta;\n        let otherTheta = [];\n        for (let a of this.mol.atomAdjList(atom)) {\n            let dx = this.points[a - 1].oval.cx - cx, dy = this.points[a - 1].oval.cy - cy;\n            otherTheta.push(Math.atan2(dy, dx));\n        }\n        let minExt = 0.5 * (a.oval.rw + a.oval.rh), stepsz = 0.1 * this.scale, nsteps = 8;\n        let angsteps = 36, angsz = TWOPI / angsteps;\n        let bestScore = Number.POSITIVE_INFINITY, bestDX = 0, bestDY = 0;\n        let px = [0, 0, 0, 0], py = [0, 0, 0, 0];\n        let limX = rw + minExt + nsteps * stepsz, limY = rh + minExt + nsteps * stepsz;\n        let subSpace = this.spaceSubset(cx - limX, cy - limY, 2 * limX, 2 * limY);\n        for (let step = 0; step < nsteps; step++) {\n            let ext = minExt + step * stepsz;\n            for (let ang = 0; ang < angsteps; ang++) {\n                let th = angsz * ang;\n                let dx = ext * Math.cos(th), dy = ext * Math.sin(th);\n                let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                px[0] = x1;\n                py[0] = y1;\n                px[1] = x2;\n                py[1] = y1;\n                px[2] = x2;\n                py[2] = y2;\n                px[3] = x1;\n                py[3] = y2;\n                let viol = this.countPolyViolations(px, py, subSpace, false);\n                let score = viol * 1000;\n                for (let oth of otherTheta)\n                    score -= Math.abs(angleDiff(th, oth));\n                if (score < bestScore) {\n                    bestScore = score;\n                    bestDX = dx;\n                    bestDY = dy;\n                }\n            }\n            if (bestScore < 500)\n                break;\n        }\n        let x = cx + bestDX, y = cy + bestDY;\n        let an = {\n            anum: 0,\n            text,\n            fsz,\n            col,\n            oval: new Oval(x, y, rw, rh),\n        };\n        this.points.push(an);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(x - rw, y - rh, 2 * rw, 2 * rh),\n            px: [x - rw, x + rw, x + rw, x - rw],\n            py: [y - rh, y - rh, y + rh, y + rh],\n        };\n        this.space.push(spc);\n    }\n    annotateBond(bond, text, col, fsz) {\n        let [tw, ta] = this.measure.measureText(text, fsz);\n        let bfr = this.mol.bondFrom(bond), bto = this.mol.bondTo(bond);\n        let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n        let cx = 0.5 * (a1.oval.cx + a2.oval.cx), cy = 0.5 * (a1.oval.cy + a2.oval.cy), rw = 0.6 * tw, rh = 0.6 * ta;\n        let bth = Math.atan2(a2.oval.cy - a1.oval.cy, a2.oval.cx - a1.oval.cx);\n        let otherTheta = [bth, bth + Math.PI];\n        for (let a of this.mol.atomAdjList(bfr))\n            if (a != bto) {\n                let dx = this.points[a - 1].oval.cx - this.points[bfr - 1].oval.cx, dy = this.points[a - 1].oval.cy - this.points[bfr - 1].oval.cy;\n                otherTheta.push(Math.atan2(dy, dx));\n            }\n        for (let a of this.mol.atomAdjList(bto))\n            if (a != bfr) {\n                let dx = this.points[a - 1].oval.cx - this.points[bto - 1].oval.cx, dy = this.points[a - 1].oval.cy - this.points[bto - 1].oval.cy;\n                otherTheta.push(Math.atan2(dy, dx));\n            }\n        let minExt = 0.2 * this.scale * this.bondOrder[bond - 1], stepsz = 0.1 * this.scale, nsteps = 8;\n        let angsteps = 36, angsz = TWOPI / angsteps;\n        let bestScore = Number.POSITIVE_INFINITY, bestDX = 0, bestDY = 0;\n        let px = [0, 0, 0, 0], py = [0, 0, 0, 0];\n        let limX = rw + minExt + nsteps * stepsz, limY = rh + minExt + nsteps * stepsz;\n        let subSpace = this.spaceSubset(cx - limX, cy - limY, 2 * limX, 2 * limY);\n        for (let step = 0; step < nsteps; step++) {\n            let ext = minExt + step * stepsz;\n            for (let ang = 0; ang < angsteps; ang++) {\n                let th = angsz * ang;\n                let dx = ext * Math.cos(th), dy = ext * Math.sin(th);\n                let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                px[0] = x1;\n                py[0] = y1;\n                px[1] = x2;\n                py[1] = y1;\n                px[2] = x2;\n                py[2] = y2;\n                px[3] = x1;\n                py[3] = y2;\n                let viol = this.countPolyViolations(px, py, subSpace, false);\n                let score = viol * 1000;\n                for (let oth of otherTheta)\n                    score -= Math.abs(angleDiff(th, oth));\n                if (score < bestScore) {\n                    bestScore = score;\n                    bestDX = dx;\n                    bestDY = dy;\n                }\n            }\n            if (bestScore < 500)\n                break;\n        }\n        let x = cx + bestDX, y = cy + bestDY;\n        let an = {\n            anum: 0,\n            text,\n            fsz,\n            col,\n            oval: new Oval(x, y, rw, rh),\n        };\n        this.points.push(an);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(x - rw, y - rh, 2 * rw, 2 * rh),\n            px: [x - rw, x + rw, x + rw, x - rw],\n            py: [y - rh, y - rh, y + rh, y + rh],\n        };\n        this.space.push(spc);\n    }\n    boxOverlaps(x, y, w, h, pointmask, linemask) {\n        let vx1 = x, vy1 = y, vx2 = x + w, vy2 = y + h;\n        for (let n = 0; n < this.points.length; n++) {\n            if (pointmask != null && !pointmask[n])\n                continue;\n            let a = this.points[n];\n            let wx1 = a.oval.cx - a.oval.rw, wy1 = a.oval.cy - a.oval.rh, wx2 = a.oval.cx + a.oval.rw, wy2 = a.oval.cy + a.oval.rh;\n            if (vx2 < wx1 || vx1 > wx2 || vy2 < wy1 || vy1 > wy2)\n                continue;\n            return true;\n        }\n        for (let n = 0; n < this.lines.length; n++) {\n            if (linemask != null && !linemask[n])\n                continue;\n            let b = this.lines[n];\n            let wx1 = b.line.x1, wy1 = b.line.y1, wx2 = b.line.x2, wy2 = b.line.y2;\n            if (vx2 < Math.min(wx1, wx2) || vx1 > Math.max(wx1, wx2) || vy2 < Math.min(wy1, wy2) || vy1 > Math.max(wy1, wy2))\n                continue;\n            if (wx1 >= vx1 && wx1 <= vx2 && wy1 >= vy1 && wy1 <= vy2)\n                return true;\n            if (wx2 >= vx1 && wx2 <= vx2 && wy2 >= vy1 && wy2 <= vy2)\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy1, vx2, vy1))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy2, vx2, vy2))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy1, vx1, vy2))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx2, vy1, vx2, vy2))\n                return true;\n        }\n        return false;\n    }\n    resolveLineCrossings(bondHigher, bondLower) {\n        const TYPES = [BLineType.Normal, BLineType.Dotted, BLineType.DotDir];\n        const stashOriginals = () => {\n            if (!this.unsplitLines)\n                this.unsplitLines = this.lines.map((b) => {\n                    return Object.assign(Object.assign({}, b), { line: b.line.clone() });\n                });\n        };\n        while (true) {\n            let anything = false;\n            let linesHigher = this.lines.filter((b) => b.bnum == bondHigher && TYPES.includes(b.type));\n            let linesLower = this.lines.filter((b) => b.bnum == bondLower && TYPES.includes(b.type));\n            for (let b1 of linesHigher) {\n                for (let b2 of linesLower) {\n                    if (b1.bfr == b2.bfr || b1.bfr == b2.bto || b1.bto == b2.bfr || b1.bto == b2.bto)\n                        continue;\n                    if (b2.type == BLineType.DotDir)\n                        b2.type = BLineType.Dotted;\n                    if (!GeomUtil.doLineSegsIntersect(b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2))\n                        continue;\n                    let xy = GeomUtil.lineIntersect(b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2);\n                    let dx = b2.line.x2 - b2.line.x1, dy = b2.line.y2 - b2.line.y1;\n                    let ext = Math.abs(dx) > Math.abs(dy) ? (xy[0] - b2.line.x1) / dx : (xy[1] - b2.line.y1) / dy;\n                    let dist = norm_xy(dx, dy);\n                    let delta = b2.size / dist * (b2.type == BLineType.Normal ? 2 : 4);\n                    if (ext > delta && ext < 1 - delta) {\n                        stashOriginals();\n                        let b3 = {\n                            bnum: b2.bnum,\n                            bfr: b2.bfr,\n                            bto: b2.bto,\n                            type: b2.type,\n                            line: b2.line.clone(),\n                            size: b2.size,\n                            head: b2.head,\n                            col: b2.col\n                        };\n                        this.lines.push(b3);\n                        b2.line.x2 = b2.line.x1 + dx * (ext - delta);\n                        b2.line.y2 = b2.line.y1 + dy * (ext - delta);\n                        b3.line.x1 = b3.line.x1 + dx * (ext + delta);\n                        b3.line.y1 = b3.line.y1 + dy * (ext + delta);\n                        anything = true;\n                    }\n                    else if (ext > delta) {\n                        stashOriginals();\n                        b2.line.x2 = b2.line.x1 + dx * (ext - delta);\n                        b2.line.y2 = b2.line.y1 + dy * (ext - delta);\n                        anything = true;\n                    }\n                    else if (ext < 1 - delta) {\n                        stashOriginals();\n                        b2.line.x1 = b2.line.x1 + dx * (ext + delta);\n                        b2.line.y1 = b2.line.y1 + dy * (ext + delta);\n                        anything = true;\n                    }\n                }\n            }\n            if (!anything)\n                break;\n        }\n    }\n    createCircularRing(atoms) {\n        let px = new Array(atoms.length), py = new Array(atoms.length);\n        for (let n = 0; n < atoms.length; n++) {\n            let pt = this.points[atoms[n] - 1];\n            px[n] = pt.oval.cx;\n            py[n] = pt.oval.cy;\n        }\n        let cx = Vec.sum(px) / atoms.length, cy = Vec.sum(py) / atoms.length;\n        let bx = [], by = [];\n        let isRegular = true;\n        let regDist = Number.NaN;\n        const FRACT = 0.7;\n        for (let a of atoms) {\n            let pt = this.points[a - 1];\n            let x0 = pt.oval.cx - cx, y0 = pt.oval.cy - cy, x1 = x0 - pt.oval.rw, x2 = x0 + pt.oval.rw, y1 = y0 - pt.oval.rh, y2 = y0 + pt.oval.rh;\n            bx.push(x1);\n            by.push(y0);\n            bx.push(x1);\n            by.push(y1);\n            bx.push(x1);\n            by.push(y2);\n            bx.push(x0);\n            by.push(y1);\n            bx.push(x0);\n            by.push(y2);\n            bx.push(x2);\n            by.push(y0);\n            bx.push(x2);\n            by.push(y1);\n            bx.push(x2);\n            by.push(y2);\n            let dist = norm_xy(x0, y0), theta = Math.atan2(y0, x0);\n            bx.push(FRACT * dist * Math.cos(theta));\n            by.push(FRACT * dist * Math.sin(theta));\n            for (let b of this.mol.atomAdjList(a))\n                if (atoms.indexOf(b) >= 0) {\n                    let pb = this.points[b - 1];\n                    let mx = 0.5 * (pt.oval.cx + pb.oval.cx) - cx, my = 0.5 * (pt.oval.cy + pb.oval.cy) - cy;\n                    let mdist = norm_xy(mx, my), mtheta = Math.atan2(my, mx);\n                    bx.push(FRACT * mdist * Math.cos(mtheta));\n                    by.push(FRACT * mdist * Math.sin(mtheta));\n                }\n            if (!isRegular) { }\n            else if (Number.isFinite(regDist)) {\n                if (Math.abs(regDist - dist) > 1)\n                    isRegular = false;\n            }\n            else\n                regDist = dist;\n        }\n        let r = { atoms, cx, cy, rw: 0, rh: 0, theta: 0, size: 0 };\n        if (isRegular) {\n            r.rw = r.rh = GeomUtil.fitCircle(bx, by);\n        }\n        else {\n            let mdist = 0;\n            for (let n = 0; n < atoms.length; n++)\n                mdist += norm_xy(px[n] - cx, py[n] - cy);\n            let margin = mdist / atoms.length * (1 - FRACT);\n            var fit = new FitRotatedEllipse(px, py, margin);\n            fit.calculate();\n            r.cx = fit.cx;\n            r.cy = fit.cy;\n            r.rw = fit.rw;\n            r.rh = fit.rh;\n            r.theta = fit.theta;\n        }\n        r.size = this.lineSizePix;\n        this.rings.push(r);\n    }\n    createCurvedPath(atoms, fractional, extAtom) {\n        const sz = atoms.length, szn = sz - 1;\n        let x = [], y = [], symbol = [];\n        for (let n = 0; n < sz; n++) {\n            let pt = this.points[atoms[n] - 1];\n            x.push(pt.oval.cx);\n            y.push(pt.oval.cy);\n            symbol.push(pt.text != null);\n        }\n        let ox = [], oy = [];\n        const EXT = Molecule.IDEALBOND * 0.25 * this.scale;\n        for (let n = 0; n < sz - 1; n++) {\n            let dx = x[n + 1] - x[n], dy = y[n + 1] - y[n], invD = EXT * invZ(norm_xy(dx, dy));\n            ox.push(dy * invD);\n            oy.push(-dx * invD);\n        }\n        const FAR = 1.2, CLOSE = 0.7;\n        let sx1 = Vec.numberArray(0, sz), sy1 = Vec.numberArray(0, sz), sx2 = Vec.numberArray(0, sz), sy2 = Vec.numberArray(0, sz);\n        const capA = symbol[0] ? FAR : CLOSE;\n        if (!fractional) {\n            sx1[0] = x[0] + ox[0] * capA;\n            sy1[0] = y[0] + oy[0] * capA;\n            sx2[0] = x[0] - ox[0] * capA;\n            sy2[0] = y[0] - oy[0] * capA;\n        }\n        else {\n            const dx = -oy[0], dy = ox[0];\n            sx1[0] = x[0] + dx * capA;\n            sy1[0] = y[0] + dy * capA;\n            sx2[0] = x[0] + dx * capA;\n            sy2[0] = y[0] + dy * capA;\n        }\n        let ncross1 = 0, ncross2 = 0;\n        for (let n = 1; n < sz - 1; n++) {\n            const fr1 = symbol[n] ? FAR : CLOSE, fr2 = fr1;\n            sx1[n] = x[n] + fr1 * (ox[n - 1] + ox[n]);\n            sy1[n] = y[n] + fr1 * (oy[n - 1] + oy[n]);\n            sx2[n] = x[n] - fr2 * (ox[n - 1] + ox[n]);\n            sy2[n] = y[n] - fr2 * (oy[n - 1] + oy[n]);\n            for (let a of this.mol.atomAdjList(atoms[n]))\n                if (atoms.indexOf(a) < 0 && a != extAtom) {\n                    let pt = this.points[a - 1];\n                    let dx = pt.oval.cx - x[n], dy = pt.oval.cy - y[n];\n                    let dot1 = dx * (sx1[n] - x[n]) + dy * (sy1[n] - x[n]);\n                    let dot2 = dy * (sx2[n] - x[n]) + dy * (sy2[n] - x[n]);\n                    if (dot1 > dot2)\n                        ncross1++;\n                    else\n                        ncross2++;\n                }\n        }\n        let nn = sz - 1;\n        let capB = symbol[nn] ? FAR : CLOSE;\n        if (!fractional) {\n            sx1[nn] = x[nn] + ox[nn - 1] * capB;\n            sy1[nn] = y[nn] + oy[nn - 1] * capB;\n            sx2[nn] = x[nn] - ox[nn - 1] * capB;\n            sy2[nn] = y[nn] - oy[nn - 1] * capB;\n        }\n        else {\n            let dx = -oy[nn - 1], dy = ox[nn - 1];\n            sx1[nn] = x[nn] - dx * capB;\n            sy1[nn] = y[nn] - dy * capB;\n            sx2[nn] = x[nn] - dx * capB;\n            sy2[nn] = y[nn] - dy * capB;\n        }\n        let score1 = 0, score2 = 0;\n        for (let n = 0; n < sz - 1; n++) {\n            score1 += norm_xy(sx1[n + 1] - sx1[n], sy1[n + 1] - sy1[n]);\n            score2 += norm_xy(sx2[n + 1] - sx2[n], sy2[n + 1] - sy2[n]);\n        }\n        score1 *= ncross1 + 1;\n        score2 *= ncross2 + 1;\n        let sx = score1 < score2 ? sx1 : sx2;\n        let sy = score1 < score2 ? sy1 : sy2;\n        let p = { atoms, px: null, py: null, ctrl: null, size: this.lineSizePix };\n        this.splineInterpolate(p, sx, sy);\n        this.paths.push(p);\n    }\n    createBondCentroid(from, to) {\n        let pt = this.points[from - 1];\n        let x1 = pt.oval.cx, y1 = pt.oval.cy, x2 = 0, y2 = 0;\n        for (let a of to) {\n            pt = this.points[a - 1];\n            x2 += pt.oval.cx;\n            y2 += pt.oval.cy;\n        }\n        x2 /= to.length;\n        y2 /= to.length;\n        if (to.length <= 2) {\n            x2 -= 0.1 * (x2 - x1);\n            y2 -= 0.1 * (y2 - y1);\n        }\n        const minDist = MINBOND_LINE * this.measure.scale();\n        let xy1 = this.shrinkBond(x1, y1, x2, y2, this.backOffAtom(from, x1, y1, x2, y2, minDist));\n        this.ensureMinimumBondLength(xy1, [x2, y2], x1, y1, x2, y2, minDist);\n        let b = {\n            bnum: 0,\n            bfr: from,\n            bto: 0,\n            type: BLineType.Normal,\n            line: new Line(xy1[0], xy1[1], x2, y2),\n            size: this.lineSizePix,\n            head: 0,\n            col: this.policy.data.foreground\n        };\n        this.lines.push(b);\n        this.space.push(this.computeSpaceLine(b));\n    }\n    splineInterpolate(path, x, y) {\n        const sz = x.length;\n        const scale = 0.25;\n        for (let n = 0; n < sz; n++) {\n            if (n == 0) {\n                let dx = x[n + 1] - x[n], dy = y[n + 1] - y[n];\n                let qx = x[n] + scale * dx, qy = y[n] + scale * dy;\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n                path.px = Vec.append(path.px, qx);\n                path.py = Vec.append(path.py, qy);\n                path.ctrl = Vec.append(path.ctrl, true);\n            }\n            else if (n == sz - 1) {\n                let dx = x[n] - x[n - 1], dy = y[n] - y[n - 1];\n                let qx = x[n] - scale * dx, qy = y[n] - scale * dy;\n                path.px = Vec.append(path.px, qx);\n                path.py = Vec.append(path.py, qy);\n                path.ctrl = Vec.append(path.ctrl, true);\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n            }\n            else {\n                let dx = x[n + 1] - x[n - 1], dy = y[n + 1] - y[n - 1];\n                let invD = invZ(norm_xy(dx, dy));\n                dx *= invD;\n                dy *= invD;\n                let d1 = scale * norm_xy(x[n] - x[n - 1], y[n] - y[n - 1]), d2 = scale * norm_xy(x[n + 1] - x[n], y[n + 1] - y[n]);\n                let qx1 = x[n] - dx * d1, qy1 = y[n] - dy * d1;\n                let qx2 = x[n] + dx * d2, qy2 = y[n] + dy * d2;\n                path.px = Vec.append(path.px, qx1);\n                path.py = Vec.append(path.py, qy1);\n                path.ctrl = Vec.append(path.ctrl, true);\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n                path.px = Vec.append(path.px, qx2);\n                path.py = Vec.append(path.py, qy2);\n                path.ctrl = Vec.append(path.ctrl, true);\n            }\n        }\n    }\n    delocalisedAnnotation(atoms, charge, unpaired) {\n        const mol = this.mol;\n        let str = '';\n        if (charge == -1)\n            str = '-';\n        else if (charge == 1)\n            str = '+';\n        else if (charge < -1)\n            str = Math.abs(charge) + '-';\n        else if (charge > 1)\n            str = charge + '+';\n        if (unpaired > 0)\n            for (let n = 0; n < unpaired; n++)\n                str += '.';\n        if (str.length == 0)\n            return;\n        const sz = atoms.length;\n        let bestX = 0, bestY = 0;\n        for (let a of atoms) {\n            bestX += mol.atomX(a);\n            bestY += mol.atomY(a);\n        }\n        bestX /= sz;\n        bestY /= sz;\n        let bestScore = CoordUtil.congestionPoint(mol, bestX, bestY);\n        for (let n = 1; n < sz - 1; n++) {\n            let x = 0.5 * (mol.atomX(atoms[n - 1]) + mol.atomX(atoms[n + 1])), y = 0.5 * (mol.atomY(atoms[n - 1]) + mol.atomY(atoms[n + 1]));\n            let score = CoordUtil.congestionPoint(mol, x, y);\n            if (score < bestScore) {\n                bestScore = score;\n                bestX = x;\n                bestY = y;\n            }\n        }\n        let fsz = 0.8 * this.fontSizePix;\n        let wad = this.measure.measureText(str, fsz);\n        let rw = 0.55 * wad[0], rh = 0.55 * wad[1];\n        let a = {\n            anum: 0,\n            text: str,\n            fsz,\n            col: this.policy.data.foreground,\n            oval: new Oval(this.measure.angToX(bestX), this.measure.angToY(bestY), rw, rh)\n        };\n        this.points.push(a);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(a.oval.cx - rw, a.oval.cy - rh, 2 * rw, 2 * rh),\n            px: [a.oval.cx - rw, a.oval.cx + rw, a.oval.cx + rw, a.oval.cx - rw],\n            py: [a.oval.cy - rh, a.oval.cy - rh, a.oval.cy + rh, a.oval.cy + rh]\n        };\n        this.space.push(spc);\n    }\n    processPolymerUnit(unit, allUnits) {\n        if (Vec.len(unit.bondConn) == 4) {\n            this.processPolymerUnitPair(unit);\n            return;\n        }\n        let brackets = [];\n        const { mol, measure } = this;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let a1 = mol.bondFrom(n), a2 = mol.bondTo(n);\n            let in1 = unit.atoms.indexOf(a1) >= 0, in2 = unit.atoms.indexOf(a2) >= 0;\n            let bracket = null;\n            if (in1 && !in2)\n                bracket = { a1, a2 };\n            else if (in2 && !in1)\n                bracket = { a1: a2, a2: a1 };\n            else\n                continue;\n            bracket.x1 = mol.atomX(bracket.a1);\n            bracket.y1 = mol.atomY(bracket.a1);\n            bracket.x2 = mol.atomX(bracket.a2);\n            bracket.y2 = mol.atomY(bracket.a2);\n            bracket.shared = false;\n            for (let other of allUnits)\n                if (unit !== other && other.atoms.includes(bracket.a2)) {\n                    bracket.shared = true;\n                    break;\n                }\n            let nestings = allUnits.filter((look) => look === unit || (look.atoms.includes(bracket.a1) && !look.atoms.includes(bracket.a2)));\n            if (nestings.length > 1) {\n                nestings.sort((u1, u2) => u1.atoms.length - u2.atoms.length);\n                for (let i = 0; i < nestings.length; i++)\n                    if (nestings[i] === unit)\n                        bracket.nestOrder = i;\n                bracket.nestCount = nestings.length;\n            }\n            brackets.push(bracket);\n        }\n        let tagidx = 0;\n        let atomX = unit.atoms.map((a) => mol.atomX(a)), atomY = unit.atoms.map((a) => mol.atomY(a));\n        let minX = Vec.min(atomX), minY = Vec.min(atomY);\n        let maxX = Vec.max(atomX), maxY = Vec.max(atomY);\n        for (let n = 1; n < brackets.length; n++) {\n            let b1 = brackets[tagidx], b2 = brackets[n];\n            let score1 = b1.x2 - minX - b1.y2 + minY;\n            let score2 = b2.x2 - minX - b2.y2 + minY;\n            if (score2 > score1)\n                tagidx = n;\n        }\n        let isLinear = false, isOuter = false;\n        if (brackets.length == 2) {\n            let left = brackets[tagidx == 0 ? 1 : 0], right = brackets[tagidx];\n            let theta1 = Math.atan2(left.y2 - left.y1, left.x2 - left.x1);\n            let theta2 = Math.atan2(right.y2 - right.y1, right.x2 - right.x1);\n            isLinear = (theta1 > 145 * DEGRAD || theta1 < -145 * DEGRAD) && theta2 < 35 * DEGRAD && theta2 > -35 * DEGRAD;\n        }\n        else if (brackets.length == 0) {\n            let ym = 0.5 * (minY + maxY);\n            brackets.push({ x1: minX, y1: ym, x2: minX - 1, y2: ym });\n            brackets.push({ x1: maxX, y1: ym, x2: maxX + 1, y2: ym });\n            tagidx = 1;\n            isOuter = true;\n        }\n        let bsz1 = (isOuter ? 0.5 * (maxY - minY + 1) : isLinear ? 1.0 : 0.5) * this.scale, bsz2 = 0.2 * this.scale;\n        const BASE_LINE = { bnum: 0, bfr: 0, bto: 0, type: BLineType.Normal, size: this.lineSizePix, head: 0, col: this.policy.data.foreground };\n        const BASE_TEXT = { anum: 0, fsz: 0.7 * this.fontSizePix, bold: false, col: this.policy.data.foreground };\n        for (let n = 0; n < brackets.length; n++) {\n            let bracket = brackets[n];\n            let x1 = measure.angToX(bracket.x1), y1 = measure.angToY(bracket.y1);\n            let x2 = measure.angToX(bracket.x2), y2 = measure.angToY(bracket.y2);\n            if (bracket.shared) {\n                x2 -= (x2 - x1) * 0.1;\n                y2 -= (y2 - y1) * 0.1;\n            }\n            if (bracket.nestCount > 1) {\n                let dx = x2 - x1, dy = y2 - y1, fract = (bracket.nestOrder + 1) / bracket.nestCount;\n                x2 = x1 + dx * fract;\n                y2 = y1 + dy * fract;\n            }\n            let mx = 0.5 * (x1 + x2), my = 0.5 * (y1 + y2);\n            if (isLinear) {\n                x1 = x2 = mx;\n                y1 = y2 = my;\n                if (n == tagidx) {\n                    x1--;\n                    x2++;\n                }\n                else {\n                    x1++;\n                    x2--;\n                }\n            }\n            let invDist = invZ(norm_xy(x2 - x1, y2 - y1));\n            let dx = (x2 - x1) * invDist, dy = (y2 - y1) * invDist;\n            let ox = dy, oy = -dx;\n            let px2 = mx - bsz1 * ox, py2 = my - bsz1 * oy;\n            let px3 = mx + bsz1 * ox, py3 = my + bsz1 * oy;\n            let px1 = px2 - bsz2 * dx, py1 = py2 - bsz2 * dy;\n            let px4 = px3 - bsz2 * dx, py4 = py3 - bsz2 * dy;\n            let line1 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px1, py1, px2, py2) });\n            let line2 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px2, py2, px3, py3) });\n            let line3 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px3, py3, px4, py4) });\n            this.lines.push(line1);\n            this.lines.push(line2);\n            this.lines.push(line3);\n            this.space.push(this.computeSpaceLine(line1));\n            this.space.push(this.computeSpaceLine(line2));\n            this.space.push(this.computeSpaceLine(line3));\n            if (n == tagidx) {\n                let xx, yy;\n                if (bracket.shared)\n                    [xx, yy] = [px2 - 0.5 * this.scale * ox, py2 - 0.5 * this.scale * oy];\n                else\n                    [xx, yy] = [px2 + bsz2 * 2 * dx, py2 + bsz2 * 2 * dy];\n                let pt1 = Object.assign(Object.assign({}, BASE_TEXT), { 'text': 'n', 'oval': new Oval(xx, yy, 0, 0) });\n                this.points.push(pt1);\n                this.space.push(this.computeSpacePoint(pt1));\n                if (unit.connect != null) {\n                    let text = '?';\n                    if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                        text = 'ht';\n                    else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                        text = 'hh';\n                    else if (unit.connect == PolymerBlockConnectivity.Random)\n                        text = 'eu';\n                    if (bracket.shared)\n                        [xx, yy] = [px3 + 0.5 * this.scale * ox, py3 + 0.5 * this.scale * oy];\n                    else\n                        [xx, yy] = [px3 + bsz2 * 2.5 * dx, py3 + bsz2 * 2.5 * dy];\n                    let pt2 = Object.assign(Object.assign({}, BASE_TEXT), { 'text': text, 'oval': new Oval(xx, yy, 0, 0) });\n                    this.points.push(pt2);\n                    this.space.push(this.computeSpacePoint(pt2));\n                }\n            }\n        }\n    }\n    processPolymerUnitPair(unit) {\n        const { mol, measure } = this;\n        let xpos = [], ypos = [];\n        for (let b of unit.bondConn) {\n            let bfr = mol.bondFrom(b), bto = mol.bondTo(b);\n            xpos.push(measure.angToX(0.5 * (mol.atomX(bfr) + mol.atomX(bto))));\n            ypos.push(measure.angToY(0.5 * (mol.atomY(bfr) + mol.atomY(bto))));\n        }\n        let cx = Vec.sum(xpos) * 0.25, cy = Vec.sum(ypos) * 0.25;\n        let bsz = 0.5 * this.scale;\n        let rx = [], ry = [];\n        for (let [i1, i2] of [[0, 1], [2, 3]]) {\n            let dx = xpos[i2] - xpos[i1], dy = ypos[i2] - ypos[i1], inv = bsz * invZ(norm_xy(dx, dy) + 0.001);\n            [dx, dy] = [dx * inv, dy * inv];\n            xpos[i1] -= 2 * dx;\n            ypos[i1] -= 2 * dy;\n            xpos[i2] += 2 * dx;\n            ypos[i2] += 2 * dy;\n            let ox = dy, oy = -dx;\n            let dsq1 = norm2_xy(0.5 * (xpos[i1] + xpos[i2]) + ox - cx, 0.5 * (ypos[i1] + ypos[i2]) + oy - cy);\n            let dsq2 = norm2_xy(0.5 * (xpos[i1] + xpos[i2]) - ox - cx, 0.5 * (ypos[i1] + ypos[i2]) - oy - cy);\n            if (dsq2 < dsq1)\n                [ox, oy] = [-ox, -oy];\n            rx.push(...[ox, ox]);\n            ry.push(...[oy, oy]);\n        }\n        const BASE_LINE = { bnum: 0, bfr: 0, bto: 0, type: BLineType.Normal, size: this.lineSizePix, head: 0, col: this.policy.data.foreground };\n        const BASE_TEXT = { anum: 0, fsz: 0.7 * this.fontSizePix, bold: false, col: this.policy.data.foreground };\n        let drawLine = (x1, y1, x2, y2) => {\n            let line = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(x1, y1, x2, y2) });\n            this.lines.push(line);\n            this.space.push(this.computeSpaceLine(line));\n        };\n        let drawText = (x, y, txt) => {\n            let pt = Object.assign(Object.assign({}, BASE_TEXT), { 'text': txt, 'oval': new Oval(x, y, 0, 0) });\n            this.points.push(pt);\n            this.space.push(this.computeSpacePoint(pt));\n        };\n        drawLine(xpos[0], ypos[0], xpos[1], ypos[1]);\n        drawLine(xpos[0], ypos[0], xpos[0] + rx[0], ypos[0] + ry[0]);\n        drawLine(xpos[1], ypos[1], xpos[1] + rx[1], ypos[1] + ry[1]);\n        drawLine(xpos[2], ypos[2], xpos[3], ypos[3]);\n        drawLine(xpos[2], ypos[2], xpos[2] + rx[2], ypos[2] + ry[2]);\n        drawLine(xpos[3], ypos[3], xpos[3] + rx[3], ypos[3] + ry[3]);\n        let xmin = Vec.min(xpos), ymin = Vec.min(ypos);\n        let dist = [];\n        for (let n = 0; n < 4; n++)\n            dist.push(xpos[n] - xmin + ypos[n] - ymin);\n        let idxN = Vec.idxMax(dist);\n        drawText(xpos[idxN] - rx[idxN], ypos[idxN] - ry[idxN], 'n');\n        let idxD2 = idxN + (idxN % 2 == 1 ? -1 : 1), idxD1 = (idxD2 + 2) % 4;\n        drawText(xpos[idxD1] - 0.5 * rx[idxD1], ypos[idxD1] - 0.5 * ry[idxD1], '*');\n        drawText(xpos[idxD2] - 0.5 * rx[idxD2], ypos[idxD2] - 0.5 * ry[idxD2], '*');\n    }\n}\nArrangeMolecule.FONT_CORRECT = 1.5;\nexport { ArrangeMolecule };\n//# sourceMappingURL=ArrangeMolecule.js.map","import { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nimport { Graph } from './Graph';\nimport { GeomUtil } from '../util/Geom';\nimport { norm2_xy, norm_xy } from '../util/util';\nexport class PseudoEmbedding {\n    constructor(mol) {\n        this.mol = mol;\n        this.bondMask = null;\n        this.crossings = [];\n    }\n    calculateCrossings() {\n        const { mol, bondMask, crossings } = this;\n        let na = mol.numAtoms, nb = mol.numBonds;\n        let maskCross = Vec.booleanArray(false, na);\n        for (let i = 1; i < nb; i++) {\n            if (bondMask && !bondMask[i - 1])\n                continue;\n            let x1 = mol.atomX(mol.bondFrom(i)), y1 = mol.atomY(mol.bondFrom(i));\n            let x2 = mol.atomX(mol.bondTo(i)), y2 = mol.atomY(mol.bondTo(i));\n            let dx = x2 - x1, dy = y2 - y1;\n            x1 += dx * 0.001;\n            y1 += dy * 0.001;\n            x2 -= dx * 0.001;\n            y2 -= dy * 0.001;\n            for (let j = i + 1; j <= nb; j++) {\n                if (bondMask && !bondMask[j - 1])\n                    continue;\n                let x3 = mol.atomX(mol.bondFrom(j)), y3 = mol.atomY(mol.bondFrom(j));\n                let x4 = mol.atomX(mol.bondTo(j)), y4 = mol.atomY(mol.bondTo(j));\n                dx = x4 - x3;\n                dy = y4 - y3;\n                x3 += dx * 0.001;\n                y3 += dy * 0.001;\n                x4 -= dx * 0.001;\n                y4 -= dy * 0.001;\n                if (GeomUtil.doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4)) {\n                    crossings.push({ bond1: i, bond2: j, higher: 0 });\n                    maskCross[mol.bondFrom(i) - 1] = true;\n                    maskCross[mol.bondTo(i) - 1] = true;\n                    maskCross[mol.bondFrom(j) - 1] = true;\n                    maskCross[mol.bondTo(j) - 1] = true;\n                }\n            }\n        }\n        if (crossings.length == 0)\n            return;\n        let crossRblk = new Set();\n        for (let n = 1; n <= na; n++) {\n            let rblk = mol.atomRingBlock(n);\n            if (rblk > 0)\n                crossRblk.add(rblk);\n        }\n        for (let n = 1; n <= na; n++)\n            if (!maskCross[n - 1]) {\n                let rblk = mol.atomRingBlock(n);\n                if (rblk > 0 && crossRblk.has(rblk))\n                    maskCross[n - 1] = true;\n            }\n        let maskComp = this.connectMaskedComponents(maskCross);\n        let g = Graph.fromMoleculeMask(mol, maskComp);\n        let ccgrp = g.calculateComponentGroups();\n        for (let n = 0; n < ccgrp.length; n++) {\n            for (let i = 0; i < ccgrp[n].length; i++)\n                ccgrp[n][i] = g.getIndex(ccgrp[n][i]);\n            this.embedComponent(ccgrp[n]);\n        }\n    }\n    connectMaskedComponents(imask) {\n        const { mol } = this;\n        let omask = Vec.duplicate(imask);\n        let gmol = Graph.fromMolecule(mol);\n        let na = mol.numAtoms, nb = mol.numBonds;\n        let maskNever = Vec.booleanArray(false, na);\n        while (true) {\n            let anything = false;\n            for (let n = 1; n <= nb; n++) {\n                let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n                let aidx = 0;\n                if (omask[bfr - 1] && !omask[bto - 1])\n                    aidx = bto;\n                else if (omask[bto - 1] && !omask[bfr - 1])\n                    aidx = bfr;\n                else\n                    continue;\n                if (maskNever[aidx - 1])\n                    continue;\n                let g = gmol.clone();\n                g.removeEdge(bfr - 1, bto - 1);\n                let cc = g.calculateComponents();\n                let hit = false;\n                for (let i = 0; i < na; i++)\n                    if (omask[i] && cc[i] == cc[aidx - 1]) {\n                        hit = true;\n                        break;\n                    }\n                if (hit) {\n                    omask[aidx - 1] = true;\n                    anything = true;\n                }\n                else\n                    maskNever[aidx - 1] = true;\n            }\n            if (!anything)\n                break;\n        }\n        return omask;\n    }\n    embedComponent(atoms) {\n        const { mol, crossings } = this;\n        let na = mol.numAtoms, gsz = atoms.length;\n        let amask = Vec.booleanArray(false, na);\n        for (let n = 0; n < gsz; n++)\n            amask[atoms[n] - 1] = true;\n        let z = Vec.numberArray(0, gsz), newZ = new Array(gsz);\n        if (this.seedFromInternalWedges(atoms, amask, z)) { }\n        else if (this.seedFromExternalWedges(atoms, amask, z)) { }\n        else if (this.seedFromPerspective(atoms, amask, z)) { }\n        else if (this.seedFromDensity(atoms, amask, z)) { }\n        else\n            return;\n        let ucount = this.normaliseHeights(z);\n        while (ucount < gsz) {\n            this.expandOutward(z, newZ, atoms, amask);\n            let ncount = this.normaliseHeights(newZ);\n            if (ncount == ucount)\n                break;\n            for (let n = 0; n < gsz; n++)\n                z[n] = newZ[n];\n            ucount = ncount;\n        }\n        for (let cross of crossings) {\n            if (amask[mol.bondFrom(cross.bond1) - 1])\n                this.updateCrossing(cross, atoms, z);\n        }\n    }\n    seedFromInternalWedges(atoms, amask, z) {\n        const { mol } = this;\n        let nb = mol.numBonds;\n        let success = false;\n        for (let n = 1; n <= nb; n++) {\n            let bt = mol.bondType(n);\n            if (bt != Molecule.BONDTYPE_INCLINED && bt != Molecule.BONDTYPE_DECLINED)\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            if (!amask[bfr - 1] || !amask[bto - 1])\n                continue;\n            if (bt == Molecule.BONDTYPE_INCLINED) {\n                z[atoms.indexOf(bfr)] -= 0.5;\n                z[atoms.indexOf(bto)] += 0.5;\n            }\n            else {\n                z[atoms.indexOf(bfr)] += 0.5;\n                z[atoms.indexOf(bto)] -= 0.5;\n            }\n            success = true;\n        }\n        return success;\n    }\n    seedFromExternalWedges(atoms, amask, z) {\n        const { mol } = this;\n        let nb = mol.numBonds;\n        let success = false;\n        for (let n = 1; n <= nb; n++) {\n            let bt = mol.bondType(n);\n            if (bt != Molecule.BONDTYPE_INCLINED && bt != Molecule.BONDTYPE_DECLINED)\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            if (amask[bfr - 1]) {\n                z[atoms.indexOf(bfr)] += bt == Molecule.BONDTYPE_INCLINED ? 1 : -1;\n                success = true;\n            }\n            else if (amask[bto - 1]) {\n                z[atoms.indexOf(bto)] += bt == Molecule.BONDTYPE_INCLINED ? -1 : 1;\n                success = true;\n            }\n        }\n        return success;\n    }\n    seedFromPerspective(atoms, amask, z) {\n        const { mol } = this;\n        let nb = mol.numBonds;\n        let avgdist = 0, maxdist = 0;\n        let count = 0, bidx = 0;\n        for (let n = 1; n <= nb; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            if (!amask[bfr - 1] || !amask[bto - 1])\n                continue;\n            let d = norm_xy(mol.atomX(bfr) - mol.atomX(bto), mol.atomY(bfr) - mol.atomY(bto));\n            avgdist += d;\n            count++;\n            if (d > maxdist) {\n                maxdist = d;\n                bidx = n;\n            }\n        }\n        if (count == 0 || bidx == 0)\n            return false;\n        avgdist /= count;\n        if (maxdist < avgdist * 1.02)\n            return false;\n        z[atoms.indexOf(mol.bondFrom(bidx))] = 1;\n        z[atoms.indexOf(mol.bondTo(bidx))] = 1;\n        return true;\n    }\n    seedFromDensity(atoms, amask, z) {\n        const { mol } = this;\n        let highIdx = 0;\n        let highCongest = 0;\n        for (let i = 0; i < atoms.length; i++) {\n            let x1 = mol.atomX(atoms[i]), y1 = mol.atomY(atoms[i]);\n            let congest = 0;\n            for (let j = 0; j < atoms.length; j++)\n                if (i != j)\n                    congest += 1.0 / (0.001 + norm2_xy(mol.atomX(atoms[j]) - x1, mol.atomY(atoms[j]) - y1));\n            if (congest > highCongest) {\n                highIdx = atoms[i];\n                highCongest = congest;\n            }\n        }\n        if (highIdx == 0)\n            return false;\n        z[atoms.indexOf(highIdx)] = 1;\n        return true;\n    }\n    normaliseHeights(z) {\n        Vec.addTo(z, -Vec.min(z));\n        let eps = Vec.max(z) * 1E-6;\n        let idx = Vec.idxSort(z);\n        let prevZ = -1;\n        let mark = 0;\n        for (let n = 0; n < idx.length; n++) {\n            if (prevZ < 0 || Math.abs(prevZ - z[idx[n]]) > eps)\n                mark++;\n            prevZ = z[idx[n]];\n            z[idx[n]] = mark;\n        }\n        Vec.addTo(z, -0.5 * (1 + Vec.max(z)));\n        return mark;\n    }\n    expandOutward(z, newZ, atoms, amask) {\n        const { mol } = this;\n        let gsz = atoms.length;\n        for (let n = 0; n < gsz; n++)\n            newZ[n] = z[n];\n        for (let n = 0; n < gsz; n++) {\n            let adj = mol.atomAdjList(atoms[n]);\n            for (let i = 0; i < adj.length; i++)\n                if (amask[adj[i] - 1])\n                    newZ[atoms.indexOf(adj[i])] += 0.1 * z[n];\n        }\n    }\n    updateCrossing(cross, atoms, z) {\n        const { mol } = this;\n        let bfr1 = mol.bondFrom(cross.bond1), bto1 = mol.bondTo(cross.bond1);\n        let bfr2 = mol.bondFrom(cross.bond2), bto2 = mol.bondTo(cross.bond2);\n        let idx1 = atoms.indexOf(bfr1), idx2 = atoms.indexOf(bto1);\n        let idx3 = atoms.indexOf(bfr2), idx4 = atoms.indexOf(bto2);\n        if (idx1 < 0 || idx2 < 0 || idx3 < 0 || idx4 < 0)\n            return;\n        let x1a = mol.atomX(bfr1), y1a = mol.atomY(bfr1), x1b = mol.atomX(bto1), y1b = mol.atomY(bto1);\n        let x2a = mol.atomX(bfr2), y2a = mol.atomY(bfr2), x2b = mol.atomX(bto2), y2b = mol.atomY(bto2);\n        let xy = GeomUtil.lineIntersect(x1a, y1a, x1b, y1b, x2a, y2a, x2b, y2b);\n        let dx1 = x1b - x1a, dy1 = y1b - y1a, dx2 = x2b - x2a, dy2 = y2b - y2a;\n        let ext1 = Math.abs(dx1) > Math.abs(dy1) ? (xy[0] - x1a) / dx1 : (xy[1] - y1a) / dy1;\n        let ext2 = Math.abs(dx2) > Math.abs(dy2) ? (xy[0] - x2a) / dx2 : (xy[1] - y2a) / dy2;\n        if (ext1 < 0 || ext1 > 1 || ext2 < 0 || ext2 > 1)\n            return;\n        let z1a = z[idx1], z1b = z[idx2], z2a = z[idx3], z2b = z[idx4];\n        let z1 = z1a + ext1 * (z1b - z1a), z2 = z2a + ext2 * (z2b - z2a);\n        cross.higher = z1 > z2 ? 1 : 2;\n    }\n}\n//# sourceMappingURL=PseudoEmbedding.js.map","import { GeomUtil } from './Geom';\nimport { DEGRAD, fltEqual, norm2_xy, norm_xy, sqr, TWOPI } from './util';\nimport { Vec } from './Vec';\nconst CACHE_SIZE = 1000;\nclass FitRotatedEllipse {\n    constructor(px, py, margin) {\n        this.px = px;\n        this.py = py;\n        this.margin = margin;\n        this.theta = 0;\n        this.stop = false;\n        this.hashKey = JSON.stringify([this.px, this.py]);\n    }\n    calculate() {\n        if (this.lookupCache())\n            return;\n        this.setupParameters();\n        if (this.stop)\n            return;\n        this.currentScore = this.calculateScore(this.cx, this.cy, this.rw, this.rh);\n        this.coarseDiscovery();\n        this.fineImprovement();\n        this.theta = -this.theta;\n        this.saveCache();\n    }\n    getSpline() {\n        return GeomUtil.createBezierEllipse(this.cx, this.cy, this.rw, this.rh, this.theta);\n    }\n    lookupCache() {\n        let hashKey = this.hashKey;\n        let look = FitRotatedEllipse.cacheMap.get(hashKey);\n        if (look) {\n            this.cx = look.cx;\n            this.cy = look.cy;\n            this.rw = look.rw;\n            this.rh = look.rh;\n            this.theta = look.theta;\n            const { cacheVal } = FitRotatedEllipse;\n            for (let n = cacheVal.length - 1; n >= 0; n--)\n                if (cacheVal[n].hashKey == hashKey) {\n                    if (n < cacheVal.length - 1) {\n                        cacheVal.push(cacheVal[n]);\n                        cacheVal.splice(n, 1);\n                    }\n                    break;\n                }\n            return true;\n        }\n        return false;\n    }\n    saveCache() {\n        let hashKey = this.hashKey;\n        const { cacheVal, cacheMap } = FitRotatedEllipse;\n        cacheVal.push(this);\n        cacheMap.set(hashKey, this);\n        while (cacheVal.length > CACHE_SIZE) {\n            cacheMap.delete(cacheVal[0].hashKey);\n            cacheVal.splice(0);\n        }\n    }\n    setupParameters() {\n        const psz = this.psz = this.px.length;\n        const invpsz = this.invpsz = 1.0 / psz;\n        this.cx = Vec.sum(this.px) * invpsz;\n        this.cy = Vec.sum(this.py) * invpsz;\n        let ptheta = new Array(psz), pdist = new Array(psz);\n        for (let n = 0; n < psz; n++) {\n            ptheta[n] = Math.atan2(this.py[n] - this.cy, this.px[n] - this.cx);\n            pdist[n] = norm_xy(this.px[n] - this.cx, this.py[n] - this.cy);\n        }\n        let order = Vec.idxSort(ptheta);\n        this.px = Vec.idxGet(this.px, order);\n        this.py = Vec.idxGet(this.py, order);\n        ptheta = Vec.idxGet(ptheta, order);\n        pdist = Vec.idxGet(pdist, order);\n        let buffX = new Array(psz), buffY = new Array(psz);\n        const rotatedScore = (ptheta, pdist, rtheta) => {\n            for (let n = 0; n < psz; n++) {\n                buffX[n] = pdist[n] * Math.cos(ptheta[n] + rtheta);\n                buffY[n] = pdist[n] * Math.sin(ptheta[n] + rtheta);\n            }\n            let scx = Vec.sum(buffX) * invpsz, scy = Vec.sum(buffY) * invpsz;\n            let devx = 0, devy = 0;\n            for (let n = 0; n < psz; n++) {\n                devx += sqr(buffX[n] - scx);\n                devy += Math.abs(buffY[n] - scy);\n            }\n            return devy / (1 + devx);\n        };\n        let bestScore = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < 360; n++) {\n            let th = n * DEGRAD;\n            let score = rotatedScore(ptheta, pdist, th);\n            if (score < bestScore) {\n                this.theta = th;\n                bestScore = score;\n            }\n        }\n        for (let dth = -1; dth <= 1; dth += 0.05) {\n            let th = this.theta + dth * DEGRAD;\n            let score = rotatedScore(ptheta, pdist, th);\n            if (score < bestScore) {\n                this.theta = th;\n                bestScore = score;\n            }\n        }\n        for (let n = 0; n < psz; n++) {\n            this.px[n] = this.cx + pdist[n] * Math.cos(ptheta[n] + this.theta);\n            this.py[n] = this.cy + pdist[n] * Math.sin(ptheta[n] + this.theta);\n        }\n        this.cx = Vec.sum(this.px) * invpsz;\n        this.cy = Vec.sum(this.py) * invpsz;\n        this.rw = this.rh = 1;\n    }\n    coarseDiscovery() {\n        const { margin } = this;\n        let deltaD = 0.1 * margin, deltaR = 0.5 * deltaD;\n        const DELTA_OPTIONS = [\n            { dx: -1, dy: 0, dw: 0, dh: 0 },\n            { dx: 1, dy: 0, dw: 0, dh: 0 },\n            { dx: 0, dy: -1, dw: 0, dh: 0 },\n            { dx: 0, dy: 1, dw: 0, dh: 0 },\n            { dx: 0, dy: 0, dw: -1, dh: 0 },\n            { dx: 0, dy: 0, dw: 1, dh: 0 },\n            { dx: 0, dy: 0, dw: 0, dh: -1 },\n            { dx: 0, dy: 0, dw: 0, dh: 1 },\n        ];\n        for (let sanity = 0; sanity < 1000; sanity++) {\n            let anything = false;\n            let bestScore = this.currentScore;\n            let bestCX = this.cx, bestCY = this.cy, bestRW = this.rw, bestRH = this.rh;\n            for (let delta of DELTA_OPTIONS) {\n                let newCX = this.cx + delta.dx * deltaD;\n                let newCY = this.cy + delta.dy * deltaD;\n                let newRW = this.rw + delta.dw * deltaR;\n                let newRH = this.rh + delta.dh * deltaR;\n                let newScore = this.calculateScore(newCX, newCY, newRW, newRH);\n                if (newScore > bestScore && !fltEqual(newScore, bestScore)) {\n                    anything = true;\n                    bestScore = newScore;\n                    bestCX = newCX;\n                    bestCY = newCY;\n                    bestRW = newRW;\n                    bestRH = newRH;\n                }\n            }\n            if (!anything)\n                break;\n            this.currentScore = bestScore;\n            this.cx = bestCX;\n            this.cy = bestCY;\n            this.rw = bestRW;\n            this.rh = bestRH;\n        }\n    }\n    fineImprovement() {\n        const { margin } = this;\n        let deltaD = 0.1 * margin, deltaR = 0.5 * deltaD;\n        const REDUCTION = 2.0 / 3;\n        const MAX_REDUCTIONS = 20;\n        for (let reduc = 0; reduc < MAX_REDUCTIONS; reduc++) {\n            let anything = false;\n            let bestScore = this.currentScore;\n            let bestCX = this.cx, bestCY = this.cy, bestRW = this.rw, bestRH = this.rh;\n            for (let dCX = -1; dCX <= 1; dCX++) {\n                let newCX = this.cx + dCX * deltaD;\n                for (let dCY = -1; dCY <= 1; dCY++) {\n                    let newCY = this.cy + dCY * deltaD;\n                    for (let dRW = -1; dRW <= 1; dRW++) {\n                        let newRW = this.rw + dRW * deltaR;\n                        for (let dRH = -1; dRH <= 1; dRH++) {\n                            let newRH = this.rh + dRH * deltaR;\n                            if (dCX == 0 && dCY == 0 && dRW == 0 && dRH == 0)\n                                continue;\n                            let newScore = this.calculateScore(newCX, newCY, newRW, newRH);\n                            if (newScore > bestScore && !fltEqual(newScore, bestScore)) {\n                                anything = true;\n                                bestScore = newScore;\n                                bestCX = newCX;\n                                bestCY = newCY;\n                                bestRW = newRW;\n                                bestRH = newRH;\n                            }\n                        }\n                    }\n                }\n            }\n            if (anything) {\n                this.currentScore = bestScore;\n                this.cx = bestCX;\n                this.cy = bestCY;\n                this.rw = bestRW;\n                this.rh = bestRH;\n            }\n            else {\n                reduc++;\n                deltaD *= REDUCTION;\n                deltaR *= REDUCTION;\n            }\n        }\n    }\n    calculateScore(cx, cy, rw, rh) {\n        const { px, py, margin } = this, psz = px.length;\n        const nseg = 24;\n        let cosTheta = 1, sinTheta = 0;\n        let incrAlpha = TWOPI / nseg;\n        let closestDSQ = Vec.numberArray(Number.POSITIVE_INFINITY, psz);\n        for (let n = 0; n < nseg; n++) {\n            let alpha = n * incrAlpha;\n            let cosAlpha = Math.cos(alpha), sinAlpha = Math.sin(alpha);\n            let dx = rw * cosAlpha * cosTheta - rh * sinAlpha * sinTheta;\n            let dy = rw * cosAlpha * sinTheta + rh * sinAlpha * cosTheta;\n            let d = norm_xy(dx, dy) + margin, eth = Math.atan2(dy, dx);\n            let x = cx + d * Math.cos(eth);\n            let y = cy + d * Math.sin(eth);\n            for (let i = 0; i < psz; i++) {\n                let ii = i == psz - 1 ? 0 : i + 1;\n                if (GeomUtil.doLineSegsIntersect(cx, cy, x, y, px[i], py[i], px[ii], py[ii]))\n                    return 0;\n            }\n            for (let i = 0; i < psz; i++)\n                closestDSQ[i] = Math.min(closestDSQ[i], norm2_xy(x - px[i], y - py[i]));\n        }\n        let proxSum = 0;\n        for (let dsq of closestDSQ)\n            proxSum += 1.0 / (1 + Math.sqrt(dsq));\n        return rw * rh + proxSum;\n    }\n}\nFitRotatedEllipse.cacheVal = [];\nFitRotatedEllipse.cacheMap = new Map();\nexport { FitRotatedEllipse };\n//# sourceMappingURL=FitRotatedEllipse.js.map","class FontData {\n    constructor() {\n        this.UNITS_PER_EM = 2048;\n        this.INV_UNITS_PER_EM = 1.0 / this.UNITS_PER_EM;\n        this.PANOSE_1 = '2 11 6 4 3 5 4 4 2 4';\n        this.ASCENT = 1638;\n        this.DESCENT = -410;\n        this.MISSING_HORZ = 2048;\n        this.MISSING_DATA = 'M256 0v1536h1536v-1536h-1536zM384 128h1280v1280h-1280v-1280z';\n        this.ASCENT_FUDGE = 0.9;\n        this.UNICODE = [\n            ' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<',\n            '=', '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n            '[', '\\\\', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\n            'x', 'y', 'z', '{', '|', '}', '~', '\\u00A0', '\\u00A1', '\\u00A2', '\\u00A3', '\\u00A4', '\\u00A5', '\\u00A6', '\\u00A7', '\\u00A8', '\\u00A9', '\\u00AA',\n            '\\u00AB', '\\u00AC', '\\u00AD', '\\u00AE', '\\u00AF', '\\u00B0', '\\u00B1', '\\u00B2', '\\u00B3', '\\u00B4', '\\u00B5', '\\u00B6', '\\u00B7', '\\u00B8', '\\u00B9',\n            '\\u00BA', '\\u00BB', '\\u00BC', '\\u00BD', '\\u00BE', '\\u00BF', '\\u00C0', '\\u00C1', '\\u00C2', '\\u00C3', '\\u00C4', '\\u00C5', '\\u00C6', '\\u00C7', '\\u00C8',\n            '\\u00C9', '\\u00CA', '\\u00CB', '\\u00CC', '\\u00CD', '\\u00CE', '\\u00CF', '\\u00D0', '\\u00D1', '\\u00D2', '\\u00D3', '\\u00D4', '\\u00D5', '\\u00D6', '\\u00D7',\n            '\\u00D8', '\\u00D9', '\\u00DA', '\\u00DB', '\\u00DC', '\\u00DD', '\\u00DE', '\\u00DF', '\\u00E0', '\\u00E1', '\\u00E2', '\\u00E3', '\\u00E4', '\\u00E5', '\\u00E6',\n            '\\u00E7', '\\u00E8', '\\u00E9', '\\u00EA', '\\u00EB', '\\u00EC', '\\u00ED', '\\u00EE', '\\u00EF', '\\u00F0', '\\u00F1', '\\u00F2', '\\u00F3', '\\u00F4', '\\u00F5',\n            '\\u00F6', '\\u00F7', '\\u00F8', '\\u00F9', '\\u00FA', '\\u00FB', '\\u00FC', '\\u00FD', '\\u00FE', '\\u037E', '\\u0384', '\\u0385', '\\u0386', '\\u0387', '\\u0388',\n            '\\u0389', '\\u038A', '\\u038C', '\\u038E', '\\u038F', '\\u0390', '\\u0391', '\\u0392', '\\u0393', '\\u0394', '\\u0395', '\\u0396', '\\u0397', '\\u0398', '\\u0399',\n            '\\u039A', '\\u039B', '\\u039C', '\\u039D', '\\u039E', '\\u039F', '\\u03A0', '\\u03A1', '\\u03A3', '\\u03A4', '\\u03A5', '\\u03A6', '\\u03A7', '\\u03A8', '\\u03A9',\n            '\\u03AA', '\\u03AB', '\\u03AC', '\\u03AD', '\\u03AE', '\\u03AF', '\\u03B0', '\\u03B1', '\\u03B2', '\\u03B3', '\\u03B4', '\\u03B5', '\\u03B6', '\\u03B7', '\\u03B8',\n            '\\u03B9', '\\u03BA', '\\u03BB', '\\u03BC', '\\u03BD', '\\u03BE', '\\u03BF', '\\u03C0', '\\u03C1', '\\u03C2', '\\u03C3', '\\u03C4', '\\u03C5', '\\u03C6', '\\u03C7',\n            '\\u03C8', '\\u03C9', '\\u03CA', '\\u03CB', '\\u03CC', '\\u03CD', '\\u03CE', '\\u2202', '\\u2206', '\\u220F', '\\u2211', '\\u2212', '\\u2215', '\\u2219', '\\u221A',\n            '\\u221E', '\\u222B', '\\u2248', '\\u2260', '\\u2264', '\\u2265'\n        ];\n        this.HORIZ_ADV_X = [\n            720, 806, 940, 1676, 1302, 2204, 1488, 550, 930, 930, 1302, 1676, 745, 930, 745, 930, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302,\n            930, 930, 1676, 1676, 1676, 1117, 2048, 1400, 1404, 1430, 1578, 1295, 1177, 1588, 1539, 862, 931, 1419, 1140, 1726, 1532, 1612, 1235, 1612, 1424,\n            1400, 1262, 1499, 1400, 2025, 1403, 1260, 1403, 930, 930, 930, 1676, 1302, 1302, 1230, 1276, 1067, 1276, 1220, 720, 1276, 1296, 562, 705, 1212, 562,\n            1992, 1296, 1243, 1276, 1276, 874, 1067, 807, 1296, 1212, 1676, 1212, 1212, 1076, 1300, 930, 1300, 1676, 720, 806, 1302, 1302, 1302, 1302, 930, 1302,\n            1302, 2048, 1117, 1320, 1676, 930, 2048, 1302, 1110, 1676, 1110, 1110, 1302, 1314, 1302, 745, 1302, 1110, 1117, 1320, 2048, 2048, 2048, 1117, 1400,\n            1400, 1400, 1400, 1400, 1400, 2016, 1430, 1295, 1295, 1295, 1295, 862, 862, 862, 862, 1588, 1532, 1612, 1612, 1612, 1612, 1612, 1676, 1612, 1499,\n            1499, 1499, 1499, 1260, 1240, 1270, 1230, 1230, 1230, 1230, 1230, 1230, 1956, 1067, 1220, 1220, 1220, 1220, 562, 562, 562, 562, 1253, 1296, 1243,\n            1243, 1243, 1243, 1243, 1676, 1243, 1296, 1296, 1296, 1296, 1212, 1276, 930, 1302, 1302, 1400, 930, 1538, 1782, 1105, 1804, 1543, 1859, 562, 1400,\n            1404, 1160, 1440, 1295, 1403, 1539, 1612, 862, 1419, 1404, 1726, 1532, 1329, 1612, 1539, 1235, 1377, 1262, 1260, 1677, 1403, 1783, 1676, 862, 1260,\n            1276, 1050, 1296, 562, 1293, 1276, 1270, 1212, 1245, 1050, 937, 1296, 1278, 562, 1212, 1212, 1310, 1212, 1030, 1243, 1305, 1280, 1040, 1291, 1016,\n            1293, 1618, 1208, 1683, 1666, 562, 1293, 1243, 1293, 1666, 1302, 1489, 1676, 1489, 1676, 740, 745, 1676, 2048, 1302, 1676, 1676, 1676, 1676\n        ];\n        this.GLYPH_DATA = [\n            '',\n            'M515 1489l-26 -1079h-170l-28 1079h224zM505 0h-204v211h204v-211z',\n            'M772 1556l-43 -579h-132l-43 579h218zM386 1556l-43 -579h-132l-43 579h218z',\n            'M1481 932h-333l-92 -376h308v-135h-343l-104 -421h-129l104 421h-270l-104 -421h-129l104 421h-298v135h333l92 376h-308v135h343l105 422h129l-105 -422h270l105 422h129l-105 -422h298v-135zM1022 934h-274l-94 -380h274z',\n            'M1160 380q0 -155 -121 -257.5t-317 -121.5v-362h-118v357q-132 1 -248 25.5t-201 63.5v198h16q19 -14 68 -40.5t95 -43.5q52 -19 121.5 -35.5t148.5 -19.5v433q-40 8 -74 15.5t-63 15.5q-163 41 -234 123.5t-71 203.5q0 148 116.5 250t325.5 119v272h118v-270 q101 -2 207 -24t178 -51v-196h-14q-75 46 -156.5 81.5t-214.5 44.5v-431q30 -5 65 -13.5t61 -13.5q149 -32 230.5 -110t81.5 -213zM604 747v413q-107 -8 -180 -58.5t-73 -140.5q0 -91 54 -137t199 -77zM971 354q0 94 -58.5 137.5t-190.5 68.5v-414q120 12 184.5 61t64.5 147 z',\n            'M884 1076q0 -224 -94.5 -333t-272.5 -109q-182 0 -275 109t-93 332q0 224 95 333t273 109q181 0 274 -110t93 -331zM1575 1489l-780 -1489h-165l780 1489h165zM2055 413q0 -224 -95 -333t-273 -109q-181 0 -274 110t-93 331q0 224 94.5 333t272.5 109q182 0 275 -109 t93 -332zM706 1076q0 172 -44.5 240t-144.5 68q-102 0 -146 -68t-44 -241t44 -240.5t146 -67.5q100 0 144.5 67.5t44.5 241.5zM1877 413q0 172 -44.5 240t-144.5 68q-102 0 -146 -68t-44 -241t44 -240.5t146 -67.5q100 0 144.5 67.5t44.5 241.5z',\n            'M792 1191q0 95 -56.5 149.5t-144.5 54.5q-92 0 -150 -61.5t-58 -150.5q0 -75 39.5 -133t170.5 -137q98 35 148.5 102.5t50.5 175.5zM986 315l-478 466q-31 -15 -62 -39.5t-62 -66.5q-28 -39 -46 -94t-18 -124q0 -146 85.5 -235.5t242.5 -89.5q93 0 184.5 45.5 t153.5 137.5zM1287 909v-96q0 -96 -25 -216t-85 -229l378 -368h-246l-229 224q-115 -142 -235 -198.5t-247 -56.5q-208 0 -345.5 121.5t-137.5 318.5q0 92 26 159t61 116q35 47 87 88.5t105 72.5q-110 72 -158.5 145t-48.5 184q0 67 26.5 127.5t79.5 110.5q50 48 130.5 78 t177.5 30q173 0 280 -87.5t107 -221.5q0 -44 -12 -99.5t-41 -99.5q-32 -49 -91 -94t-153 -77l371 -362q14 40 21 88t8 100q2 56 1.5 125t-0.5 117h195z',\n            'M386 1556l-43 -579h-136l-43 579h222z',\n            'M783 -412h-229q-177 203 -275 443t-98 541t98 541t275 443h229v-10q-81 -73 -154.5 -168.5t-136.5 -222.5q-60 -123 -97.5 -271t-37.5 -312q0 -171 36.5 -313t98.5 -270q60 -123 137 -222.5t154 -168.5v-10z',\n            'M749 572q0 -301 -98 -541t-275 -443h-229v10q77 69 154.5 168.5t136.5 222.5q62 128 98.5 270t36.5 313q0 164 -37 312t-98 271q-63 127 -136.5 222.5t-154.5 168.5v10h229q177 -203 275 -443t98 -541z',\n            'M1137 887l-64 -110l-362 213l6 -360h-129l5 360l-361 -214l-65 110l381 207l-381 207l65 110l362 -213l-6 359h129l-7 -359l363 212l64 -110l-380 -205z',\n            'M1466 572h-545v-545h-166v545h-545v160h545v545h166v-545h545v-160z',\n            'M575 285l-282 -655h-146l174 655h254z',\n            'M777 561h-624v181h624v-181z',\n            'M492 0h-239v285h239v-285z',\n            'M860 1556l-717 -1860h-173l714 1860h176z',\n            'M1167 745q0 -401 -125.5 -588.5t-389.5 -187.5q-268 0 -391.5 190t-123.5 584q0 397 125 586.5t390 189.5q268 0 391.5 -192.5t123.5 -581.5zM904 291q35 81 47.5 190.5t12.5 263.5q0 152 -12.5 264t-48.5 190q-35 77 -95.5 116t-155.5 39q-94 0 -155.5 -39t-97.5 -118 q-34 -74 -46.5 -193t-12.5 -261q0 -156 11 -261t47 -188q33 -78 93.5 -119t160.5 -41q94 0 156 39t96 118z',\n            'M1084 0h-806v152h310v998h-310v136q63 0 135 10.5t109 30.5q46 25 72.5 63.5t30.5 103.5h155v-1342h304v-152z',\n            'M1169 0h-1008v209q105 90 210.5 180t196.5 179q192 186 263 295.5t71 236.5q0 116 -76.5 181.5t-213.5 65.5q-91 0 -197 -32t-207 -98h-10v210q71 35 189.5 64t229.5 29q229 0 359 -110.5t130 -299.5q0 -85 -21.5 -158.5t-63.5 -139.5q-39 -62 -91.5 -122t-127.5 -133 q-107 -105 -221 -203.5t-213 -182.5h801v-171z',\n            'M1038 717q48 -43 79 -108t31 -168q0 -102 -37 -187t-104 -148q-75 -70 -176.5 -103.5t-222.5 -33.5q-124 0 -244 29.5t-197 64.5v209h15q85 -56 200 -93t222 -37q63 0 134 21t115 62q46 44 68.5 97t22.5 134q0 80 -25.5 132.5t-70.5 82.5q-45 31 -109 42.5t-138 11.5h-90 v166h70q152 0 242.5 63.5t90.5 185.5q0 54 -23 94.5t-64 66.5q-43 26 -92 36t-111 10q-95 0 -202 -34t-202 -96h-10v209q71 35 189.5 64.5t229.5 29.5q109 0 192 -20t150 -64q72 -48 109 -116t37 -159q0 -124 -87.5 -216.5t-206.5 -116.5v-14q48 -8 110 -33.5t105 -63.5z ',\n            'M1203 419h-221v-419h-192v419h-713v230l721 840h184v-910h221v-160zM790 579v672l-577 -672h577z',\n            'M1157 473q0 -104 -38 -199t-104 -160q-72 -70 -171.5 -107.5t-230.5 -37.5q-122 0 -235 25.5t-191 61.5v211h14q82 -52 192 -88.5t216 -36.5q71 0 137.5 20t118.5 70q44 43 66.5 103t22.5 139q0 77 -26.5 130t-73.5 85q-52 38 -126.5 53.5t-166.5 15.5q-88 0 -169.5 -12 t-140.5 -24v767h896v-175h-703v-396q43 4 88 6t78 2q121 0 212 -20.5t167 -72.5q80 -55 124 -142t44 -218z',\n            'M1191 483q0 -227 -149.5 -370.5t-366.5 -143.5q-110 0 -200 34t-159 101q-86 83 -132.5 220t-46.5 330q0 198 42.5 351t135.5 272q88 113 227 176.5t324 63.5q59 0 99 -5t81 -18v-191h-10q-28 15 -84.5 28.5t-115.5 13.5q-215 0 -343 -134.5t-149 -363.5 q84 51 165.5 77.5t188.5 26.5q95 0 167.5 -17.5t148.5 -70.5q88 -61 132.5 -154t44.5 -226zM988 475q0 93 -27.5 154t-90.5 106q-46 32 -102 42t-117 10q-85 0 -158 -20t-150 -62q-2 -22 -3 -42.5t-1 -51.5q0 -158 32.5 -249.5t89.5 -144.5q46 -44 99.5 -64.5t116.5 -20.5 q145 0 228 88.5t83 254.5z',\n            'M1173 1266l-674 -1266h-214l717 1314h-848v175h1019v-223z',\n            'M1180 415q0 -193 -150.5 -321t-378.5 -128q-242 0 -385.5 125t-143.5 320q0 124 72 224.5t203 159.5v6q-120 64 -177.5 140t-57.5 190q0 168 138 280t351 112q223 0 356 -107t133 -272q0 -101 -63 -198.5t-185 -152.5v-6q140 -60 214 -148t74 -224zM943 1142 q0 107 -82.5 170.5t-210.5 63.5q-126 0 -206.5 -60t-80.5 -162q0 -72 40.5 -124.5t122.5 -93.5q37 -18 106.5 -47t135.5 -48q99 66 137 137t38 164zM974 396q0 92 -40.5 147.5t-158.5 111.5q-47 22 -103 41t-149 53q-90 -49 -144.5 -133t-54.5 -190q0 -135 93 -223t236 -88 q146 0 233.5 75t87.5 206z',\n            'M1167 834q0 -195 -44.5 -354t-134.5 -271q-91 -114 -228 -176t-322 -62q-52 0 -98 5.5t-82 17.5v191h10q29 -15 82 -28.5t118 -13.5q221 0 346.5 132.5t145.5 365.5q-93 -56 -175 -80t-179 -24q-92 0 -166.5 18t-149.5 70q-88 61 -132.5 155t-44.5 225q0 228 150 371 t366 143q108 0 200 -33.5t161 -100.5q85 -83 131 -213.5t46 -337.5zM965 877q0 155 -32 249t-88 146q-47 45 -101 64.5t-117 19.5q-144 0 -227.5 -90t-83.5 -253q0 -95 27 -155t91 -105q45 -31 99 -41.5t120 -10.5q78 0 158 21t150 61q1 21 2.5 41.5t1.5 52.5z',\n            'M585 832h-239v285h239v-285zM585 0h-239v285h239v-285z',\n            'M585 832h-239v285h239v-285zM658 285l-282 -655h-146l174 655h254z',\n            'M1408 77l-1154 513v124l1154 513v-180l-910 -395l910 -395v-180z',\n            'M1431 782h-1186v160h1186v-160zM1431 362h-1186v160h1186v-160z',\n            'M1422 590l-1154 -513v180l910 395l-910 395v180l1154 -513v-124z',\n            'M1005 1139q0 -98 -35 -174.5t-92 -135.5q-56 -57 -129 -107t-155 -97v-225h-179v305q65 37 140.5 81t123.5 89q58 52 90 107.5t32 141.5q0 113 -76.5 168.5t-197.5 55.5q-108 0 -204.5 -34t-152.5 -69h-10v204q70 27 177.5 48.5t203.5 21.5q215 0 339.5 -104.5 t124.5 -275.5zM610 0h-204v211h204v-211z',\n            'M1870 663q0 -139 -40.5 -269t-115.5 -237h-440l-27 116q-74 -60 -142 -92t-156 -32q-168 0 -268.5 127t-100.5 355q0 227 123 362t294 135q73 0 129 -16.5t121 -49.5v48h159v-842h243q42 75 63.5 187.5t21.5 201.5q0 164 -45.5 298t-133.5 230t-218 147.5t-295 51.5 q-160 0 -292.5 -58t-227.5 -156q-96 -98 -150.5 -234.5t-54.5 -290.5q0 -165 52 -301.5t147 -233.5q99 -101 232 -152.5t290 -51.5q86 0 177.5 11t175.5 35v-142q-97 -21 -181 -28.5t-173 -7.5q-186 0 -345 63.5t-273 177.5q-115 115 -179 276t-64 356q0 185 67 344.5 t183 276.5t275 184t340 67q196 0 350 -62t260 -174t162.5 -269.5t56.5 -350.5zM1245 408v518q-63 29 -113 41.5t-107 12.5q-129 0 -202 -90t-73 -256q0 -163 58 -246.5t181 -83.5q67 0 134 31t122 73z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523z',\n            'M1323 458q0 -111 -42 -196t-113 -140q-84 -66 -184.5 -94t-255.5 -28h-528v1489h441q163 0 244 -12t155 -50q82 -43 119 -110.5t37 -161.5q0 -106 -54 -180.5t-144 -119.5v-8q151 -31 238 -132.5t87 -256.5zM990 1129q0 54 -18 91t-58 60q-47 27 -114 33.5t-166 6.5h-236 v-430h256q93 0 148 9.5t102 39.5t66.5 77.5t19.5 112.5zM1117 450q0 90 -27 143t-98 90q-48 25 -116.5 32.5t-166.5 7.5h-311v-554h262q130 0 213 13.5t136 49.5q56 39 82 89t26 129z',\n            'M1350 108q-55 -24 -99.5 -45t-116.5 -44q-61 -19 -132.5 -32.5t-157.5 -13.5q-162 0 -294.5 45.5t-230.5 142.5q-96 95 -150 241.5t-54 340.5q0 184 52 329t150 245q95 97 229.5 148t298.5 51q120 0 239.5 -29t265.5 -102v-235h-15q-123 103 -244 150t-259 47 q-113 0 -203.5 -36.5t-161.5 -113.5q-69 -75 -107.5 -189.5t-38.5 -264.5q0 -157 42.5 -270t109.5 -184q70 -74 163.5 -109.5t197.5 -35.5q143 0 268 49t234 147h14v-232z',\n            'M1458 743q0 -203 -88.5 -368t-235.5 -256q-102 -63 -227.5 -91t-330.5 -28h-376v1489h372q218 0 346.5 -31.5t217.5 -86.5q152 -95 237 -253t85 -375zM1251 746q0 175 -61 295t-182 189q-88 50 -187 69.5t-237 19.5h-186v-1149h186q143 0 249.5 21t195.5 78 q111 71 166.5 187t55.5 290z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176z',\n            'M1151 1313h-753v-420h647v-176h-647v-717h-198v1489h951v-176z',\n            'M1442 110q-122 -56 -266.5 -97.5t-279.5 -41.5q-174 0 -319 48t-247 144q-103 97 -159 242.5t-56 340.5q0 357 208.5 563.5t572.5 206.5q127 0 259.5 -30.5t285.5 -103.5v-235h-18q-31 24 -90 63t-116 65q-69 31 -156.5 51.5t-198.5 20.5q-250 0 -395.5 -160.5 t-145.5 -434.5q0 -289 152 -449.5t414 -160.5q96 0 191.5 19t167.5 49v365h-399v174h595v-639z',\n            'M1339 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152z',\n            'M746 387q0 -196 -119.5 -302t-320.5 -106q-48 0 -128 8.5t-134 20.5v185h11q41 -14 101 -29t123 -15q92 0 146.5 21t80.5 60q27 40 34.5 98t7.5 134v869h-315v158h513v-1102z',\n            'M1397 0h-257l-589 663l-148 -158v-505h-198v1489h198v-777l723 777h240l-665 -700z',\n            'M1142 0h-942v1489h198v-1313h744v-176z',\n            'M1526 0h-198v1283l-414 -873h-118l-411 873v-1283h-185v1489h270l397 -829l384 829h275v-1489z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1174 1039q0 -99 -34.5 -183.5t-96.5 -146.5q-77 -77 -182 -115.5t-265 -38.5h-198v-555h-198v1489h404q134 0 227 -22.5t165 -70.5q85 -57 131.5 -142t46.5 -215zM968 1034q0 77 -27 134t-82 93q-48 31 -109.5 44.5t-155.5 13.5h-196v-595h167q120 0 195 21.5t122 68.5 q47 48 66.5 101t19.5 119z',\n            'M1528 -365q-60 -15 -118.5 -21.5t-119.5 -6.5q-174 0 -279.5 95.5t-114.5 273.5q-24 -4 -46.5 -5.5t-43.5 -1.5q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5 q91 -100 139.5 -245t48.5 -329q0 -273 -111.5 -460t-299.5 -262q4 -114 54 -177t182 -63q41 0 97.5 12.5t80.5 22.5h27v-182zM1292 744q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1432 0h-257l-498 592h-279v-592h-198v1489h417q135 0 225 -17.5t162 -62.5q81 -51 126.5 -128.5t45.5 -196.5q0 -161 -81 -269.5t-223 -163.5zM969 1070q0 64 -22.5 113.5t-74.5 83.5q-43 29 -102 40.5t-139 11.5h-233v-562h200q94 0 164 16.5t119 61.5q45 42 66.5 96.5 t21.5 138.5z',\n            'M1282 425q0 -87 -40.5 -172t-113.5 -144q-80 -64 -186.5 -100t-256.5 -36q-161 0 -289.5 30t-261.5 89v248h14q113 -94 261 -145t278 -51q184 0 286.5 69t102.5 184q0 99 -48.5 146t-147.5 73q-75 20 -162.5 33t-185.5 33q-198 42 -293.5 143.5t-95.5 264.5 q0 187 158 306.5t401 119.5q157 0 288 -30t232 -74v-234h-14q-85 72 -223.5 119.5t-283.5 47.5q-159 0 -255.5 -66t-96.5 -170q0 -93 48 -146t169 -81q64 -14 182 -34t200 -41q166 -44 250 -133t84 -249z',\n            'M1262 1313h-532v-1313h-198v1313h-532v176h1262v-176z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891z',\n            'M1374 1489l-542 -1489h-264l-542 1489h212l467 -1310l467 1310h202z',\n            'M1933 1489l-387 -1489h-223l-313 1236l-306 -1236h-218l-394 1489h203l313 -1238l308 1238h201l311 -1250l311 1250h194z',\n            'M1336 1489l-514 -736l513 -753h-229l-406 613l-416 -613h-216l519 744l-507 745h228l401 -605l410 605h217z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211z',\n            'M1288 0h-1162v184l913 1129h-879v176h1106v-179l-922 -1134h944v-176z',\n            'M759 -392h-520v1948h520v-143h-346v-1662h346v-143z',\n            'M960 -304h-173l-717 1860h176z',\n            'M691 -392h-520v143h346v1662h-346v143h520v-1948z',\n            'M1490 684h-198l-455 627l-454 -629h-197l589 807h126z',\n            'M1306 -300h-1310v120h1310v-120z',\n            'M762 1302h-149l-273 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5z',\n            'M1168 567q0 -140 -39.5 -252t-106.5 -188q-71 -79 -156 -118.5t-187 -39.5q-95 0 -166 22.5t-140 60.5l-12 -52h-176v1556h188v-556q79 65 168 106.5t200 41.5q198 0 312.5 -152t114.5 -429zM974 562q0 200 -66 303.5t-213 103.5q-82 0 -166 -35.5t-156 -91.5v-640 q80 -36 137.5 -50t130.5 -14q156 0 244.5 102.5t88.5 321.5z',\n            'M1011 70q-94 -45 -178.5 -70t-179.5 -25q-121 0 -222 35.5t-173 107.5q-73 72 -113 182t-40 257q0 274 150.5 430t397.5 156q96 0 188.5 -27t169.5 -66v-209h-10q-86 67 -177.5 103t-178.5 36q-160 0 -252.5 -107.5t-92.5 -315.5q0 -202 90.5 -310.5t254.5 -108.5 q57 0 116 15t106 39q41 21 77 44.5t57 40.5h10v-207z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -18.5t143 -57.5v484h188v-1556zM903 275v641q-76 34 -136 47t-131 13q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640z',\n            'M786 1374h-10q-31 9 -81 18.5t-88 9.5q-121 0 -175.5 -53.5t-54.5 -193.5v-38h339v-158h-333v-959h-188v959h-127v158h127v37q0 199 99 305.5t286 106.5q63 0 113.5 -6t92.5 -14v-172z',\n            'M1091 127q0 -284 -129 -417t-397 -133q-89 0 -173.5 12.5t-166.5 35.5v192h10q46 -18 146 -44.5t200 -26.5q96 0 159 23t98 64q35 39 50 94t15 123v102q-85 -68 -162.5 -101.5t-197.5 -33.5q-200 0 -317.5 144.5t-117.5 407.5q0 144 40.5 248.5t110.5 180.5 q65 71 158 110.5t185 39.5q97 0 162.5 -19.5t138.5 -59.5l12 48h176v-990zM903 307v609q-75 34 -139.5 48.5t-128.5 14.5q-155 0 -244 -104t-89 -302q0 -188 66 -285t219 -97q82 0 164.5 31.5t151.5 84.5z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1556h188v-563q88 73 182 114t193 41q181 0 276 -109t95 -314v-725z',\n            'M387 1304h-212v195h212v-195zM375 0h-188v1117h188v-1117z',\n            'M533 1304h-212v195h212v-195zM521 -27q0 -196 -100 -296t-268 -100q-40 0 -105.5 8t-109.5 20v179h10q28 -11 75.5 -25t92.5 -14q72 0 116 20t66 60t28.5 96.5t6.5 137.5v900h-233v158h421v-1144z',\n            'M1199 0h-248l-448 489l-122 -116v-373h-188v1556h188v-998l543 559h237l-519 -516z',\n            'M375 0h-188v1556h188v-1556z',\n            'M1815 0h-188v636q0 72 -6.5 139t-27.5 107q-23 43 -66 65t-124 22q-79 0 -158 -39.5t-158 -100.5q3 -23 5 -53.5t2 -60.5v-715h-188v636q0 74 -6.5 140.5t-27.5 106.5q-23 43 -66 64.5t-124 21.5q-77 0 -154.5 -38t-154.5 -97v-834h-188v1117h188v-124q88 73 175.5 114 t186.5 41q114 0 193.5 -48t118.5 -133q114 96 208 138.5t201 42.5q184 0 271.5 -111.5t87.5 -311.5v-725z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-725z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z',\n            'M1168 572q0 -136 -39 -248.5t-110 -190.5q-66 -74 -155.5 -114.5t-189.5 -40.5q-87 0 -157.5 19t-143.5 59v-468h-188v1529h188v-117q75 63 168.5 105.5t199.5 42.5q202 0 314.5 -152.5t112.5 -423.5zM974 567q0 202 -69 302t-212 100q-81 0 -163 -35t-157 -92v-633 q80 -36 137.5 -49t130.5 -13q157 0 245 106t88 314z',\n            'M1091 -412h-188v538q-87 -75 -173 -111.5t-186 -36.5q-199 0 -317.5 153.5t-118.5 423.5q0 144 41.5 254.5t109.5 185.5q66 73 155 113t188 40q90 0 159.5 -20t141.5 -59l12 48h176v-1529zM903 284v632q-78 35 -138 49t-130 14q-163 0 -248 -110.5t-85 -304.5 q0 -196 68.5 -301.5t215.5 -105.5q82 0 164 35.5t153 91.5z',\n            'M882 912h-10q-42 10 -81.5 14.5t-93.5 4.5q-87 0 -168 -38.5t-156 -99.5v-793h-188v1117h188v-165q112 90 197.5 127.5t174.5 37.5q49 0 71 -2.5t66 -9.5v-193z',\n            'M983 322q0 -153 -126.5 -251t-345.5 -98q-124 0 -227.5 29.5t-173.5 64.5v211h10q89 -67 198 -106.5t209 -39.5q124 0 194 40t70 126q0 66 -38 100t-146 58q-40 9 -104.5 21t-117.5 26q-147 39 -208.5 114.5t-61.5 185.5q0 69 28.5 130t86.5 109q56 47 142.5 74.5 t193.5 27.5q100 0 202.5 -24.5t170.5 -59.5v-201h-10q-72 53 -175 89.5t-202 36.5q-103 0 -174 -39.5t-71 -117.5q0 -69 43 -104q42 -35 136 -57q52 -12 116.5 -24t107.5 -22q131 -30 202 -103q71 -74 71 -196z',\n            'M765 10q-53 -14 -115.5 -23t-111.5 -9q-171 0 -260 92t-89 295v594h-127v158h127v321h188v-321h388v-158h-388v-509q0 -88 4 -137.5t28 -92.5q22 -40 60.5 -58.5t117.5 -18.5q46 0 96 13.5t72 22.5h10v-169z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117z',\n            'M1151 1117l-452 -1117h-189l-449 1117h204l346 -889l343 889h197z',\n            'M1590 1117l-291 -1117h-174l-287 861l-285 -861h-173l-294 1117h196l205 -865l279 865h155l286 -865l194 865h189z',\n            'M1152 0h-237l-317 429l-319 -429h-219l436 557l-432 560h237l315 -422l316 422h220l-439 -550z',\n            'M1151 1117l-652 -1529h-201l208 466l-445 1063h204l343 -828l346 828h197z',\n            'M995 0h-902v139l651 821h-637v157h871v-134l-654 -824h671v-159z',\n            'M1113 -392h-150q-179 0 -290.5 99.5t-111.5 287.5v149q0 169 -83 264.5t-254 95.5h-51v156h51q171 0 254 95.5t83 264.5v149q0 188 111.5 287.5t290.5 99.5h150v-138h-114q-136 0 -197.5 -63t-61.5 -203v-175q0 -139 -77 -233.5t-214 -149.5v-24q137 -55 214 -149.5 t77 -233.5v-175q0 -140 61.5 -203t197.5 -63h114v-138z',\n            'M552 -392h-174v1948h174v-1948z',\n            'M1127 504h-51q-171 0 -254 -95.5t-83 -264.5v-149q0 -188 -111.5 -287.5t-290.5 -99.5h-150v138h114q136 0 197.5 63t61.5 203v175q0 139 77 233.5t214 149.5v24q-137 55 -214 149.5t-77 233.5v175q0 140 -61.5 203t-197.5 63h-114v138h150q179 0 290.5 -99.5 t111.5 -287.5v-149q0 -169 83 -264.5t254 -95.5h51v-156z',\n            'M1489 927q-2 -99 -22.5 -195t-65.5 -171q-46 -77 -111 -121t-165 -44q-94 0 -167 39.5t-157 141.5q-102 125 -148 157t-96 32q-94 0 -144 -87.5t-59 -283.5h-167q2 100 22.5 194.5t64.5 171.5q43 74 112 119.5t165 45.5q93 0 166.5 -38.5t158.5 -142.5q80 -98 131 -143.5 t112 -45.5q103 0 151.5 101t51.5 270h167z',\n            '',\n            'M505 1278h-204v211h204v-211zM515 0h-224l26 1079h170z',\n            'M1120 74q-71 -30 -161 -53.5t-194 -26.5v-355h-118v359q-227 21 -357.5 165t-130.5 394q0 242 133.5 391.5t354.5 171.5v355h118v-351q104 -3 197 -25t158 -53v-203h-11q-55 44 -142 85t-202 50v-839q120 10 206.5 52.5t137.5 83.5h11v-201zM647 142v834 q-135 -20 -216 -125t-81 -294q0 -181 76 -286t221 -129z',\n            'M1163 0h-1026v207q118 32 169.5 126.5t51.5 279.5h-176v138h176v310q0 200 126.5 328.5t331.5 128.5q105 0 181 -17t140 -34v-206h-10q-62 42 -138 66t-162 24q-140 0 -209.5 -82.5t-69.5 -226.5v-291h415v-138h-415v-61q0 -126 -62 -219.5t-160 -150.5v-11h837v-171z ',\n            'M1168 257l-110 -110l-236 234q-44 -26 -81 -37t-89 -11q-46 0 -89.5 12.5t-79.5 35.5l-236 -236l-109 113l233 234q-23 37 -35 81.5t-12 87.5q0 52 11 88.5t37 79.5l-234 237l111 110l235 -235q36 23 79.5 35.5t88.5 12.5q44 0 88 -12t81 -35l234 234l113 -109l-235 -237 q24 -38 36 -79.5t12 -89.5q0 -45 -12.5 -89t-35.5 -80zM832 661q0 73 -52.5 129t-127.5 56q-73 0 -126.5 -55t-53.5 -130q0 -74 52.5 -129.5t127.5 -55.5q73 0 126.5 54.5t53.5 130.5z',\n            'M1191 1489l-448 -831v-94h372v-138h-370v-426h-188v426h-370v138h372v73l-451 852h212l332 -659l336 659h203z',\n            'M552 758h-174v798h174v-798zM552 -392h-174v798h174v-798z',\n            'M1128 601q0 -106 -59 -187t-158 -136v-7q97 -46 141 -118.5t44 -162.5q0 -77 -33 -146t-98 -119q-72 -56 -169 -83t-221 -27q-87 0 -170.5 13.5t-175.5 44.5v194h10q79 -37 169 -62t198 -25q134 0 215 48.5t81 135.5q0 56 -19.5 88.5t-64.5 57.5q-41 23 -113 41.5 t-154 38.5q-214 52 -296 133q-83 81 -83 210q0 98 57 182.5t159 141.5v7q-101 48 -143 121t-42 162q0 81 32 146.5t99 117.5q64 50 163.5 79t227.5 29q87 0 171 -14t175 -43v-194h-10q-58 27 -152.5 57t-215.5 30q-127 0 -211.5 -46t-84.5 -133q0 -57 21.5 -92.5t64.5 -58.5 t109 -41.5t157 -39.5q200 -46 290 -125q89 -79 89 -218zM881 399q28 33 43 65.5t15 90.5q0 51 -16.5 86t-45.5 58q-28 24 -67 39.5t-83 27.5q-39 11 -85.5 21.5t-116.5 30.5q-18 -9 -49 -31.5t-53 -46.5q-24 -26 -43 -69t-19 -92q0 -50 15.5 -85t44.5 -59q27 -23 67.5 -39 t84.5 -27q38 -10 86 -22t115 -31q20 11 53 34.5t54 48.5z',\n            'M958 1304h-199v195h199v-195zM545 1304h-199v195h199v-195z',\n            'M1889 655q0 -358 -253.5 -611.5t-611.5 -253.5t-611.5 253.5t-253.5 611.5t253.5 611.5t611.5 253.5t611.5 -253.5t253.5 -611.5zM1773 655q0 310 -219.5 532t-529.5 222t-529.5 -222t-219.5 -532t219.5 -532t529.5 -222t529.5 222t219.5 532zM1375 258 q-86 -39 -165.5 -58.5t-157.5 -19.5q-227 0 -359 123t-132 357q0 225 134.5 354t356.5 129q89 0 175 -24t148 -52v-181h-16q-54 40 -138.5 75t-173.5 35q-142 0 -221.5 -85.5t-79.5 -250.5q0 -159 76.5 -246t224.5 -87q83 0 161.5 29t150.5 81h16v-179z',\n            'M944 554h-170v94q-28 -20 -52.5 -38.5t-68.5 -37.5q-45 -20 -85.5 -30.5t-113.5 -10.5q-128 0 -215.5 85t-87.5 217q0 106 46.5 173.5t123.5 103.5q78 36 197.5 51.5t255.5 21.5v18q0 53 -18 85t-51 51q-34 18 -77.5 23t-91.5 5q-84 0 -168 -24t-123 -38h-14v172 q45 13 137 29t169 16q217 0 312 -84.5t95 -243.5v-638zM774 796v245q-69 -4 -160.5 -12t-145.5 -23q-64 -18 -103 -56.5t-39 -106.5q0 -76 45.5 -114t139.5 -38q82 0 147.5 33.5t115.5 71.5z',\n            'M1146 191l-528 419v85l528 418v-188l-357 -273l357 -273v-188zM716 162l-550 446v89l550 445v-196l-371 -294l371 -294v-196z',\n            'M1456 57h-171v545h-1075v160h1246v-705z',\n            'M777 561h-624v181h624v-181z',\n            'M1889 655q0 -358 -253.5 -611.5t-611.5 -253.5t-611.5 253.5t-253.5 611.5t253.5 611.5t611.5 253.5t611.5 -253.5t253.5 -611.5zM1773 655q0 310 -219.5 532t-529.5 222t-529.5 -222t-219.5 -532t219.5 -532t529.5 -222t529.5 222t219.5 532zM1581 215h-223l-331 355 h-162v-355h-165v915h312q94 0 155 -8t120 -39q63 -34 92.5 -82.5t29.5 -121.5q0 -97 -56.5 -161.5t-155.5 -102.5zM1229 868q0 36 -14 64t-47 46q-31 17 -66 22t-88 5h-149v-309h127q62 0 107 9.5t74 32.5q31 25 43.5 55t12.5 75z',\n            'M1306 1668h-1305l-5 120h1310v-120z',\n            'M956 1116q0 -168 -116 -284t-285 -116t-285 115.5t-116 284.5q0 168 116 284t285 116q170 0 285.5 -116t115.5 -284zM791 1116q0 102 -67 171.5t-169 69.5t-169 -69.5t-67 -171.5q0 -104 68.5 -172.5t167.5 -68.5q102 0 169 70t67 171z',\n            'M1461 179h-1246v158h540v422h-540v158h540v545h166v-545h540v-158h-540v-422h540v-158z',\n            'M967 566h-760v156q100 62 183.5 117t134.5 96q131 103 168 154.5t37 135.5q0 69 -53.5 107t-143.5 38q-89 0 -175 -30.5t-134 -61.5h-13v180q71 26 158.5 43.5t174.5 17.5q180 0 273.5 -78.5t93.5 -203.5q0 -99 -48.5 -174.5t-163.5 -165.5q-55 -43 -132.5 -94 t-143.5 -92h544v-145z',\n            'M956 817q0 -75 -33 -131.5t-89 -90.5q-57 -35 -131 -51.5t-163 -16.5q-94 0 -176.5 15t-156.5 43v179h14q41 -36 138.5 -65.5t190.5 -29.5q100 0 166.5 35.5t66.5 110.5q0 85 -59 115t-171 30h-143v141h128q112 0 165.5 38.5t53.5 106.5q0 61 -49.5 96.5t-153.5 35.5 q-77 0 -174.5 -31t-141.5 -67h-14v178q74 27 160.5 44.5t176.5 17.5q175 0 271.5 -68t96.5 -174q0 -89 -55 -146t-144 -83v-8q95 -17 160.5 -72.5t65.5 -151.5z',\n            'M963 1676l-273 -374h-149l179 374h243z',\n            'M1124 0h-178l-10 118q-59 -65 -123.5 -102t-155.5 -37q-86 0 -149.5 35t-129.5 99v-525h-188v1529h188v-838q32 -39 109.5 -80t168.5 -41q93 0 159.5 33.5t120.5 93.5v832h188v-1117z',\n            'M1106 -363h-148v1722h-214v-1722h-149v956q-206 5 -332 129t-126 328q0 207 130 323t373 116h466v-1852z',\n            'M492 511h-239v283h239v-283z',\n            'M880 -89q0 -162 -91.5 -248t-237.5 -86q-37 0 -95 7t-103 19v160h9q26 -10 70 -23t94 -13q104 0 153 39t49 127q0 29 -3 65.5t-6 61.5h153q2 -19 5 -45t3 -64z',\n            'M914 566h-615v122h234v568h-242v112q45 0 99 6.5t84 18.5q37 16 59 38t25 62h135v-805h221v-122z',\n            'M996 1025q0 -235 -122 -364.5t-315 -129.5q-201 0 -319.5 132.5t-118.5 361.5t118.5 362t319.5 133q193 0 315 -130t122 -365zM814 1025q0 172 -67.5 258t-187.5 86q-122 0 -189 -87t-67 -257t67 -256.5t189 -86.5q120 0 187.5 85.5t67.5 257.5z',\n            'M1154 608l-550 -446v196l371 294l-371 294v196l550 -445v-89zM702 610l-528 -419v188l357 273l-357 273v188l528 -418v-85z',\n            'M545 565h-165v681h-209v117q102 0 165 22t72 108h137v-928zM1410 1489l-780 -1489h-165l780 1489h165zM1857 220h-163v-220h-150v220h-465v185l466 539h149v-591h163v-133zM1548 353v400l-353 -400h353z',\n            'M545 565h-165v681h-209v117q102 0 165 22t72 108h137v-928zM1410 1489l-780 -1489h-165l780 1489h165zM1955 0h-688v148q91 69 158 121t106 89q109 103 141 157.5t32 136.5q0 70 -44 107t-120 37q-70 0 -141.5 -30t-112.5 -62h-15v179q65 27 140.5 44t152.5 17 q157 0 241.5 -79t84.5 -201q0 -93 -41 -167t-147 -168q-49 -43 -119.5 -96t-125.5 -94h498v-139z',\n            'M793 826q0 -71 -30 -127t-78 -90q-53 -37 -114.5 -53t-140.5 -16q-82 0 -153.5 15t-136.5 43v175h17q37 -35 114 -64.5t156 -29.5q84 0 139 36.5t55 108.5q0 83 -50 112.5t-141 29.5h-140v139h125q87 0 134.5 38t47.5 104q0 60 -41 95.5t-128 35.5q-66 0 -142.5 -31 t-113.5 -66h-17v175q64 27 139 44t154 17q152 0 237 -70t85 -168q0 -87 -48.5 -143.5t-125.5 -82.5v-8q80 -16 138.5 -70.5t58.5 -148.5zM1500 1489l-780 -1489h-165l780 1489h165zM1913 220h-163v-220h-150v220h-465v185l466 539h149v-591h163v-133zM1604 353v400 l-353 -400h353z',\n            'M712 1278h-204v211h204v-211zM958 40q-83 -30 -176 -50t-205 -20q-215 0 -339.5 104.5t-124.5 275.5q0 98 34.5 173t93.5 137q58 62 136.5 112.5t146.5 91.5v225h179v-305q-60 -33 -139 -81.5t-125 -88.5q-54 -47 -88 -109t-34 -140q0 -113 76.5 -168.5t197.5 -55.5 q103 0 201.5 33t155.5 70h10v-204z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM862 1675h-149l-273 374h243z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM955 2049l-273 -374h-149l179 374h243z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1033 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1119 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5 t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1005 1677h-199v195h199v-195zM592 1677h-199v195h199v-195z',\n            'M1374 0h-211l-148 415h-640l-148 -415h-201l519 1407q-89 44 -142.5 123.5t-53.5 181.5q0 143 102 240t248 97q147 0 248.5 -97t101.5 -240q0 -100 -52.5 -181.5t-141.5 -123.5zM899 1710q0 86 -57 143.5t-143 57.5t-143 -58t-57 -143q0 -86 57.5 -143.5t142.5 -57.5 q86 0 143 57.5t57 143.5zM953 585l-258 715l-259 -715h517z',\n            'M1901 0h-944v556h-524l-212 -556h-207l594 1489h1293v-176h-749v-408h749v-176h-749v-553h749v-176zM957 723v601h-219l-239 -601h458z',\n            'M1350 108q-55 -24 -99.5 -45t-116.5 -44q-11 -3 -24 -7.5t-31 -7.5q2 -19 3.5 -44.5t1.5 -48.5q0 -162 -93.5 -248t-240.5 -86q-38 0 -97.5 7t-104.5 19v162h9q26 -10 71.5 -24t95.5 -14q106 0 155 40t49 126q0 19 -1 41.5t-3 42.5q-19 -2 -40.5 -3t-39.5 -1 q-162 0 -294.5 45.5t-230.5 142.5q-96 95 -150 241.5t-54 340.5q0 184 52 329t150 245q95 97 229.5 148t298.5 51q120 0 239.5 -29t265.5 -102v-235h-15q-123 103 -244 150t-259 47q-113 0 -203.5 -36.5t-161.5 -113.5q-69 -75 -107.5 -189.5t-38.5 -264.5q0 -157 42.5 -270 t109.5 -184q70 -74 163.5 -109.5t197.5 -35.5q143 0 268 49t234 147h14v-232z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM822 1675h-149l-273 374h243z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM993 2049l-273 -374h-149l179 374h243z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM1031 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM1038 1677h-199v195h199v-195zM625 1677h-199v195h199v-195z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM568 1675h-149l-273 374h243z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM725 2049l-273 -374h-149l179 374h243z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM776 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM738 1677h-199v195h199v-195zM325 1677h-199v195h199v-195z',\n            'M1468 743q0 -203 -88.5 -368t-235.5 -256q-102 -63 -227.5 -91t-330.5 -28h-376v740h-196v143h196v606h372q218 0 347 -31.5t217 -86.5q152 -95 237 -253t85 -375zM1261 746q0 175 -61 295t-182 189q-88 50 -187 69.5t-237 19.5h-188v-436h361v-143h-361v-570h188 q143 0 249.5 21t195.5 78q111 71 166.5 187t55.5 290z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489zM1208 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5 q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM932 1675h-149l-273 374h243z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1083 2049l-273 -374h-149l179 374h243z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1136 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1207 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228 t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1307 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1289 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1108 1677h-199v195h199v-195zM695 1677h-199v195h199v-195z',\n            'M1385 216l-111 -111l-436 440l-436 -440l-111 111l440 436l-440 436l111 111l436 -440l436 440l111 -111l-440 -436z',\n            'M1498 744q0 -184 -49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-115 0 -215.5 29t-179.5 84l-159 -228h-132l205 294q-101 100 -155.5 250t-54.5 346q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q118 0 215 -27.5t179 -82.5l142 201h132 l-188 -268q101 -100 156.5 -248.5t55.5 -350.5zM1097 1260q-57 46 -129 68.5t-161 22.5q-110 0 -200 -38.5t-156 -116.5q-64 -76 -98.5 -190.5t-34.5 -261.5q0 -140 29.5 -252t87.5 -188zM1295 744q0 139 -30 253t-88 189l-664 -957q60 -45 132.5 -68t161.5 -23 q110 0 201.5 40t153.5 116q67 82 100 194.5t33 255.5z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM932 1675h-149l-273 374h243z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1073 2049l-273 -374h-149l179 374h243z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1084 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1056 1677h-199v195h199v-195zM643 1677h-199v195h199v-195z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM935 2049l-273 -374h-149l179 374h243z',\n            'M1174 787q0 -92 -35 -176.5t-95 -141.5q-78 -75 -187.5 -111t-260.5 -36h-198v-322h-198v1489h198v-270h205q133 0 230 -22.5t164 -66.5q83 -53 130 -138t47 -205zM968 782q0 72 -26 125.5t-82 88.5q-48 30 -112 42.5t-154 12.5h-196v-563h167q119 0 195 20.5t123 65.5 q44 41 64.5 92t20.5 116z',\n            'M1165 481q0 -214 -135.5 -359.5t-354.5 -145.5q-44 0 -101.5 7.5t-93.5 20.5v165h10q42 -24 91.5 -33t105.5 -9q74 0 129 29t88 78q35 52 50.5 115.5t15.5 139.5q0 166 -105.5 250.5t-303.5 84.5v150q157 0 234 59.5t77 188.5q0 35 -11 68t-41 64q-27 29 -71 46.5 t-105 17.5q-57 0 -103 -14.5t-86 -53.5q-37 -36 -59.5 -102t-22.5 -161v-1087h-188v1080q0 124 36 215.5t100 153.5q60 58 149.5 87.5t183.5 29.5q183 0 297.5 -87t114.5 -238q0 -112 -71 -201t-184 -121v-9q164 -37 259 -148.5t95 -280.5z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM738 1302h-149l-273 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM934 1676l-273 -374h-149l179 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM961 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM1038 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5 q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM926 1304h-199v195h199v-195zM513 1304h-199v195h199v-195z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM956 1630q0 -143 -102 -242t-248 -99q-144 0 -247 98.5t-103 242.5 q0 143 102 241t248 98q147 0 248.5 -98t101.5 -241zM811 1630q0 86 -58.5 145.5t-146.5 59.5t-146.5 -59t-58.5 -146t59 -146t146 -59q88 0 146.5 59t58.5 146z',\n            'M1855 559h-819q0 -114 30 -195t85 -133q52 -48 123 -70.5t157 -22.5q111 0 217.5 41.5t172.5 93.5h12v-205q-78 -35 -184.5 -64.5t-215.5 -29.5q-166 0 -284.5 52t-194.5 155q-21 -19 -67 -59t-96 -68q-63 -36 -137 -59.5t-189 -23.5q-150 0 -255.5 97t-105.5 249 q0 124 54 200.5t155 118.5q95 39 241 53t308 17v61q0 65 -23 107.5t-64 65.5q-40 23 -96 31.5t-116 8.5q-79 0 -168.5 -21t-179.5 -57h-13v191q55 15 158 34t204 19q159 0 264.5 -46.5t162.5 -137.5q69 82 170 134t226 52q217 0 342.5 -128t125.5 -379v-82zM1673 703 q-5 68 -23.5 119t-50.5 88q-34 39 -88.5 61t-133.5 22q-133 0 -223 -75t-115 -215h634zM894 298q-20 53 -30.5 119t-10.5 141q-105 -3 -201 -7.5t-178 -25.5q-79 -20 -127.5 -65.5t-48.5 -128.5q0 -95 58 -141t176 -46q99 0 195.5 43t166.5 111z',\n            'M1011 70q-33 -15 -71.5 -30.5t-67.5 -24.5q3 -19 5.5 -47.5t2.5 -56.5q0 -162 -91.5 -248t-237.5 -86q-37 0 -95 7t-103 19v160h9q26 -10 70 -23t94 -13q104 0 153 39t49 127q0 22 -1.5 45t-3.5 43q-16 -2 -30.5 -4t-39.5 -2q-121 0 -222 35.5t-173 107.5 q-73 72 -113 182t-40 257q0 274 150.5 430t397.5 156q96 0 188.5 -27t169.5 -66v-209h-10q-86 67 -177.5 103t-178.5 36q-160 0 -252.5 -107.5t-92.5 -315.5q0 -202 90.5 -310.5t254.5 -108.5q57 0 116 15t106 39q41 21 77 44.5t57 40.5h10v-207z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM759 1302h-149l-273 374h243z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM960 1676l-273 -374h-149l179 374h243z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM986 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM951 1304h-199v195h199v-195zM538 1304h-199v195h199v-195z',\n            'M375 0h-188v1117h188v-1117zM401 1302h-149l-273 374h243z',\n            'M375 0h-188v1117h188v-1117zM582 1676l-273 -374h-149l179 374h243z',\n            'M572 1297h-151l-143 267l-142 -267h-147l178 379h227zM375 0h-188v1117h188v-1117z',\n            'M557 1304h-189v195h189v-195zM194 1304h-189v195h189v-195zM375 0h-188v1117h188v-1117z',\n            'M1137 637q0 -324 -142 -496t-383 -172q-229 0 -367.5 135t-138.5 380q0 226 137 358t339 132q108 0 185.5 -26.5t163.5 -79.5q-32 112 -99.5 219t-154.5 181l-264 -162l-66 97l237 142q-84 67 -156 107.5t-165 87.5v16h295q35 -25 84 -58.5t86 -59.5l210 128l66 -97 l-186 -109q153 -147 236 -325.5t83 -397.5zM847 226q49 59 75 143.5t26 234.5q0 32 -1.5 59.5t-3.5 57.5q-75 45 -157.5 66.5t-168.5 21.5q-147 0 -231.5 -87.5t-84.5 -239.5q0 -180 84.5 -267t227.5 -87q66 0 127.5 22t106.5 76z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-725zM1075 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5 t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M732 1302h-149l-273 374h243z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M933 1676l-273 -374h-149l179 374h243z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M963 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M1038 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M928 1304h-199v195h199v-195zM515 1304h-199v195h199v-195z',\n            'M957 1022h-238v275h238v-275zM1466 572h-1256v160h1256v-160zM957 7h-238v275h238v-275z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-84 0 -155.5 21t-130.5 60l-133 -198h-110l171 256q-75 77 -116.5 190t-41.5 260q0 273 139.5 431.5t376.5 158.5q87 0 158 -22t125 -57l116 172h111l-155 -231q76 -76 118 -188t42 -264zM813 930q-37 29 -86.5 43.5t-104.5 14.5 q-155 0 -240 -110t-85 -320q0 -97 17 -171t52 -128zM946 558q0 97 -17.5 173t-51.5 130l-448 -671q39 -31 86.5 -46t106.5 -15q150 0 237 108.5t87 320.5z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM764 1302h-149l-273 374h243z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM945 1676l-273 -374h-149l179 374h243z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM985 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM955 1304h-199v195h199v-195zM542 1304h-199v195h199v-195z',\n            'M1151 1117l-652 -1529h-201l208 466l-445 1063h204l343 -828l346 828h197zM928 1676l-273 -374h-149l179 374h243z',\n            'M1168 572q0 -136 -39 -248.5t-110 -190.5q-66 -74 -155.5 -114.5t-189.5 -40.5q-87 0 -157.5 19t-143.5 59v-468h-188v1968h188v-556q75 63 168.5 105.5t199.5 42.5q202 0 314.5 -152.5t112.5 -423.5zM974 567q0 202 -69 302t-212 100q-81 0 -163 -35t-157 -92v-633 q80 -36 137.5 -49t130.5 -13q157 0 245 106t88 314z',\n            'M585 832h-239v285h239v-285zM658 285l-282 -655h-146l174 655h254z',\n            'M773 1676l-49 -384h-145l-49 384h243z',\n            'M765 1676l-49 -384h-128l-49 384h226zM1048 1304h-191v195h191v-195zM447 1304h-191v195h191v-195z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM250 1489l-49 -384h-145l-49 384h243z',\n            'M585 832h-239v285h239v-285z',\n            'M1424 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1582 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489zM243 1489l-49 -384h-145l-49 384h243z',\n            'M968 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1501 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1483 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1537 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1751 0h-576v387q60 38 119.5 82t103.5 101q45 59 71 138.5t26 185.5q0 206 -127 330.5t-347 124.5t-347 -124.5t-127 -330.5q0 -106 26 -185.5t71 -138.5q45 -57 104 -101t119 -82v-387h-576v174h410v124q-157 90 -258.5 246t-101.5 350q0 276 187.5 451t492.5 175 t492.5 -175t187.5 -451q0 -194 -101.5 -350t-258.5 -246v-124h410v-174zM243 1489l-49 -384h-145l-49 384h243z',\n            'M375 0h-188v1117h188v-1117zM379 1676l-56 -384h-84l-56 384h196zM615 1304h-171v195h171v-195zM118 1304h-171v195h171v-195z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523z',\n            'M1323 458q0 -111 -42 -196t-113 -140q-84 -66 -184.5 -94t-255.5 -28h-528v1489h441q163 0 244 -12t155 -50q82 -43 119 -110.5t37 -161.5q0 -106 -54 -180.5t-144 -119.5v-8q151 -31 238 -132.5t87 -256.5zM990 1129q0 54 -18 91t-58 60q-47 27 -114 33.5t-166 6.5h-236 v-430h256q93 0 148 9.5t102 39.5t66.5 77.5t19.5 112.5zM1117 450q0 90 -27 143t-98 90q-48 25 -116.5 32.5t-166.5 7.5h-311v-554h262q130 0 213 13.5t136 49.5q56 39 82 89t26 129z',\n            'M1162 1313h-764v-1313h-198v1489h962v-176z',\n            'M1414 0h-1388l562 1489h264zM1147 168l-432 1147l-431 -1147h863z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176z',\n            'M1288 0h-1162v184l913 1129h-879v176h1106v-179l-922 -1134h944v-176z',\n            'M1339 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1120 713h-627v179h627v-179z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152z',\n            'M1397 0h-257l-589 663l-148 -158v-505h-198v1489h198v-777l723 777h240l-665 -700z',\n            'M1378 0h-213l-468 1285l-468 -1285h-203l556 1489h240z',\n            'M1526 0h-198v1283l-414 -873h-118l-411 873v-1283h-185v1489h270l397 -829l384 829h275v-1489z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489z',\n            'M1215 1313h-1101v176h1101v-176zM1163 729h-997v176h997v-176zM1215 0h-1101v176h1101v-176z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1339 0h-198v1313h-743v-1313h-198v1489h1139v-1489z',\n            'M1174 1039q0 -99 -34.5 -183.5t-96.5 -146.5q-77 -77 -182 -115.5t-265 -38.5h-198v-555h-198v1489h404q134 0 227 -22.5t165 -70.5q85 -57 131.5 -142t46.5 -215zM968 1034q0 77 -27 134t-82 93q-48 31 -109.5 44.5t-155.5 13.5h-196v-595h167q120 0 195 21.5t122 68.5 q47 48 66.5 101t19.5 119z',\n            'M1280 0h-1162v184l620 600l-600 526v179h1096v-176h-832l586 -506v-26l-630 -605h922v-176z',\n            'M1262 1313h-532v-1313h-198v1313h-532v176h1262v-176z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211z',\n            'M1572 755q0 -140 -44.5 -248.5t-123.5 -181.5q-85 -79 -207 -125.5t-260 -49.5v-166h-197v166q-134 3 -257 48t-210 127q-79 74 -123.5 182t-44.5 248q0 136 43 238t119 178q81 81 202.5 128t270.5 51v155h197v-155q148 -3 271 -52t202 -127q75 -73 118.5 -177t43.5 -239 zM1366 763q0 99 -32 182t-91 140q-58 56 -129 82t-177 28v-890q94 2 171 30.5t127 75.5q65 60 98 147t33 205zM740 305v890q-106 -1 -177 -28t-129 -82t-90.5 -140t-32.5 -182q0 -112 33.5 -203t97.5 -149q49 -45 126.5 -75t171.5 -31z',\n            'M1336 1489l-514 -736l513 -753h-229l-406 613l-416 -613h-216l519 744l-507 745h228l401 -605l410 605h217z',\n            'M1604 910q0 -157 -40.5 -264.5t-117.5 -174.5q-80 -69 -192.5 -104t-263.5 -45v-322h-197v322q-154 11 -267 47t-188 102q-78 69 -118.5 176t-40.5 263v579h198v-602q0 -109 29.5 -180t81.5 -115q53 -45 130 -68.5t175 -30.5v996h197v-996q97 8 175 30.5t131 68.5 q56 49 83 115.5t27 179.5v602h198v-579z',\n            'M1568 0h-576v387q60 38 119.5 82t103.5 101q45 59 71 138.5t26 185.5q0 206 -127 330.5t-347 124.5t-347 -124.5t-127 -330.5q0 -106 26 -185.5t71 -138.5q45 -57 104 -101t119 -82v-387h-576v174h410v124q-157 90 -258.5 246t-101.5 350q0 276 187.5 451t492.5 175 t492.5 -175t187.5 -451q0 -194 -101.5 -350t-258.5 -246v-124h410v-174z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM738 1677h-199v195h199v-195zM325 1677h-199v195h199v-195z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM939 1677h-199v195h199v-195zM526 1677h-199v195h199v-195z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -22t143 -61v52h188v-1117zM903 275v636q-76 34 -136 49.5t-131 15.5q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5zM743 1676l-49 -384h-145l-49 384h243z',\n            'M1006 64q-107 -48 -210 -69t-218 -21q-79 0 -161 16t-152 56q-69 39 -112.5 102.5t-43.5 157.5q0 96 56.5 168t177.5 110v7q-91 24 -145 90t-54 158q0 89 47.5 147.5t112.5 92.5q64 33 145 49t160 16q98 0 180 -16.5t172 -44.5v-207h-13q-66 51 -163.5 79t-197.5 28 q-45 0 -84 -5.5t-81 -25.5q-35 -15 -60.5 -48.5t-25.5 -77.5q0 -61 28 -95t76 -49q45 -14 97 -15.5t105 -1.5h111v-166h-158q-62 0 -112 -4.5t-92 -21.5q-41 -17 -65.5 -54t-24.5 -96q0 -53 26 -90t67 -58q37 -19 87.5 -29t106.5 -10q102 0 218 36t187 98h13v-206zM721 1676 l-49 -384h-145l-49 384h243z',\n            'M1119 -412h-188v1048q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-1137zM802 1676l-49 -384h-145l-49 384h243z',\n            'M375 0h-188v1117h188v-1117zM403 1676l-49 -384h-145l-49 384h243z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM760 1676l-49 -384h-128l-49 384h226zM1043 1304h-191 v195h191v-195zM442 1304h-191v195h191v-195z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -22t143 -61v52h188v-1117zM903 275v636q-76 34 -136 49.5t-131 15.5q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5z',\n            'M1165 444q0 -202 -134.5 -334t-339.5 -132q-79 0 -167 22t-151 64v-476h-188v1490q0 224 126.5 351t349.5 127q90 0 164.5 -21.5t133.5 -67.5q57 -43 91 -112t34 -160q0 -127 -69.5 -221.5t-196.5 -131.5v-17q159 -26 253 -125.5t94 -255.5zM971 449q0 89 -34.5 144.5 t-92.5 86.5q-59 32 -132 43t-146 11h-36v160h36q66 0 131 14.5t104 44.5q46 34 68.5 83t22.5 134q0 112 -69 170t-178 58q-73 0 -125 -26.5t-85 -70.5q-32 -44 -47 -102.5t-15 -120.5v-862q66 -38 141 -53.5t147 -15.5q149 0 229.5 78.5t80.5 223.5z',\n            'M1151 1117l-457 -1061v-468h-188v468l-445 1061h204l343 -828l346 828h197z',\n            'M1139 551q0 -272 -138.5 -427t-376.5 -155q-241 0 -379.5 151.5t-138.5 413.5q0 141 43 239.5t107 162.5q69 72 159 113t182 58q-76 63 -166 130.5t-192 139.5v179h810v-158h-561v-10q68 -46 179 -124t204 -162q150 -136 209 -261.5t59 -289.5zM945 551q0 135 -55 249 t-165 200q-66 -8 -138.5 -32t-138.5 -77q-63 -50 -105.5 -137t-42.5 -214q0 -201 85 -305t241 -104q153 0 236 105.5t83 314.5z',\n            'M1006 64q-107 -48 -210 -69t-218 -21q-79 0 -161 16t-152 56q-69 39 -112.5 102.5t-43.5 157.5q0 96 56.5 168t177.5 110v7q-91 24 -145 90t-54 158q0 89 47.5 147.5t112.5 92.5q64 33 145 49t160 16q98 0 180 -16.5t172 -44.5v-207h-13q-66 51 -163.5 79t-197.5 28 q-45 0 -84 -5.5t-81 -25.5q-35 -15 -60.5 -48.5t-25.5 -77.5q0 -61 28 -95t76 -49q45 -14 97 -15.5t105 -1.5h111v-166h-158q-62 0 -112 -4.5t-92 -21.5q-41 -17 -65.5 -54t-24.5 -96q0 -53 26 -90t67 -58q37 -19 87.5 -29t106.5 -10q102 0 218 36t187 98h13v-206z',\n            'M922 75q32 -40 46 -85.5t14 -85.5q0 -84 -45 -168.5t-112 -147.5h-179v14q90 79 128 138.5t38 128.5q0 57 -30.5 95t-77.5 38h-145q-229 0 -340 116t-111 345q0 140 46 268t124 247q75 112 173.5 214.5t206.5 196.5v9h-460v158h744v-135q-117 -78 -231.5 -181 t-204.5 -223q-89 -117 -146 -257t-57 -283q0 -34 3 -70t15 -76q10 -38 34.5 -75.5t63.5 -61.5q36 -22 96.5 -24.5t116.5 -2.5h86q71 0 122 -26t82 -66z',\n            'M1119 -412h-188v1048q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-1137z',\n            'M1141 768q0 -190 -23 -316.5t-59 -210.5q-58 -135 -163 -203.5t-257 -68.5t-257 68.5t-163 203.5q-37 84 -59.5 210.5t-22.5 316.5q0 174 22.5 305.5t60.5 214.5q57 130 162.5 199t256.5 69t256.5 -69t162.5 -199q37 -84 60 -215t23 -305zM952 858q-4 143 -28.5 250 t-56.5 161q-41 70 -95 98.5t-133 28.5t-133 -28.5t-95 -98.5q-34 -55 -57.5 -161.5t-27.5 -249.5h626zM952 697h-626q0 -142 23 -258.5t59 -178.5q40 -69 96 -100t135 -31t135 31t96 100q36 62 59 178.5t23 258.5z',\n            'M375 0h-188v1117h188v-1117z',\n            'M1192 0h-248l-451 489l-112 -109v-380h-188v1117h188v-550l384 417q72 79 135.5 107t126.5 28q28 0 58 -1t37 -1v-166h-11q-16 2 -39.5 3t-36.5 1q-47 0 -85.5 -23.5t-67.5 -56.5l-251 -271z',\n            'M1151 0h-205l-328 829l-361 -829h-196l465 1056l-215 500h211z',\n            'M1125 0h-186v118q-74 -78 -141.5 -108.5t-145.5 -30.5q-75 0 -135 27t-144 107v-525h-188v1529h188v-838q32 -39 111 -80t170 -41q93 0 161 33.5t122 93.5v832h188v-1117z',\n            'M1151 1117l-452 -1117h-189l-449 1117h204l346 -889l343 889h197z',\n            'M1041 -96q0 -85 -45.5 -169t-111.5 -147h-180v14q92 79 129.5 139t37.5 128q0 55 -29 94t-75 39h-140q-140 0 -232.5 27t-155.5 84q-66 60 -100.5 135.5t-34.5 163.5q0 78 25 144t73 119q44 49 112.5 83.5t144.5 53.5v11q-125 28 -200 110.5t-75 186.5q0 83 43.5 150.5 t133.5 125.5v6h-228v154h824v-158h-256q-68 0 -122.5 -14.5t-102.5 -48.5q-45 -32 -72 -83t-27 -118q0 -79 32.5 -128t83.5 -75q45 -23 104 -34t139 -11h170v-165h-295q-66 0 -118.5 -20t-99.5 -59q-43 -37 -68.5 -90t-25.5 -112q0 -102 37.5 -159t101.5 -82 q63 -25 139.5 -28.5t166.5 -3.5h28q68 0 119.5 -23.5t84.5 -60.5q31 -35 48 -82.5t17 -96.5z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z',\n            'M1120 0h-188v955h-559v-955h-188v1117h935v-1117z',\n            'M1172 577q0 -258 -138.5 -428.5t-360.5 -170.5q-65 0 -146.5 18t-153.5 61v-469h-188v1058q0 123 35.5 215.5t101.5 158.5q62 62 155.5 95t195.5 33q243 0 371 -147t128 -424zM978 565q0 218 -80 320t-226 102q-158 0 -228.5 -96t-70.5 -278v-403q73 -34 132.5 -48.5 t134.5 -14.5q162 0 250 111t88 307z',\n            'M1018 -96q0 -87 -47 -172t-109 -144h-177v14q86 75 124.5 135.5t38.5 131.5q0 54 -30 93.5t-75 39.5h-92q-117 0 -216 30t-174 97q-73 66 -114.5 170t-41.5 250q0 270 155.5 432t414.5 162q84 0 164 -18.5t147 -45.5v-211h-12q-94 62 -172.5 87t-146.5 25 q-166 0 -260.5 -119t-94.5 -312q0 -112 28.5 -183t78.5 -116q50 -44 114.5 -63.5t139.5 -19.5h100q115 0 186 -76.5t71 -186.5z',\n            'M1137 558q0 -281 -140.5 -435t-373.5 -154q-241 0 -379 158t-138 431q0 275 141 432.5t378 157.5q55 0 108 -11t82 -20h480v-165h-288q62 -73 96 -170t34 -224zM943 558q0 215 -82 322t-236 107q-161 0 -243 -112t-82 -317q0 -209 83.5 -318t239.5 -109q152 0 236 107.5 t84 319.5z',\n            'M1006 952h-404v-952h-188v952h-404v165h996v-165z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710z',\n            'M1514 576q0 -259 -171.5 -417t-440.5 -173v-398h-187v398q-130 6 -240.5 46.5t-191.5 109.5q-85 74 -132 172t-47 232q0 159 59 296t192 275h229v-17q-136 -99 -210 -232t-74 -300q0 -189 112.5 -304t301.5 -121v1000q33 2 70.5 2.5t76.5 0.5q304 0 478.5 -149.5 t174.5 -420.5zM1319 586q0 184 -112 293.5t-305 109.5v-846q206 10 311.5 126t105.5 317z',\n            'M1160 -412h-213l-346 619l-350 -619h-203l444 770l-433 759h213l335 -600l339 600h203l-433 -751z',\n            'M1507 446q0 -114 -48 -198t-127 -137q-82 -55 -182 -82.5t-215 -32.5v-408h-187v408q-115 6 -214.5 32t-182.5 83q-80 54 -127.5 137.5t-47.5 197.5v671h188v-612q0 -113 37.5 -180.5t89.5 -102.5q56 -38 123 -53t134 -19v967h187v-967q67 5 134 19t123 53 q59 40 93 101.5t34 181.5v612h188v-671z',\n            'M1553 503q0 -96 -23.5 -192.5t-74.5 -171.5q-55 -80 -133.5 -124.5t-193.5 -44.5q-96 0 -177 49.5t-118 116.5h-6q-39 -68 -113 -117t-176 -49q-113 0 -194.5 46.5t-132.5 122.5t-74.5 171.5t-23.5 192.5q0 170 57 308.5t201 305.5h228v-17q-135 -108 -214.5 -262 t-79.5 -337q0 -66 8 -122.5t38 -119.5q26 -55 72.5 -91.5t117.5 -36.5q51 0 86.5 12.5t55.5 29.5q22 18 36.5 40t20.5 37v584h186v-584q9 -17 23 -39t35 -39q24 -19 52.5 -30t86.5 -11q70 0 117 35.5t74 92.5q25 55 36 116t11 126q0 182 -78.5 336t-215.5 263v17h228 q144 -167 201 -305.5t57 -308.5z',\n            'M557 1304h-189v195h189v-195zM194 1304h-189v195h189v-195zM375 0h-188v1117h188v-1117z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM953 1304h-199v195h199v-195zM540 1304h-199v195h199 v-195z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M743 1676l-49 -384h-145l-49 384h243z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM768 1676l-49 -384h-145l-49 384h243z',\n            'M1553 503q0 -96 -23.5 -192.5t-74.5 -171.5q-55 -80 -133.5 -124.5t-193.5 -44.5q-96 0 -177 49.5t-118 116.5h-6q-39 -68 -113 -117t-176 -49q-113 0 -194.5 46.5t-132.5 122.5t-74.5 171.5t-23.5 192.5q0 170 57 308.5t201 305.5h228v-17q-135 -108 -214.5 -262 t-79.5 -337q0 -66 8 -122.5t38 -119.5q26 -55 72.5 -91.5t117.5 -36.5q51 0 86.5 12.5t55.5 29.5q22 18 36.5 40t20.5 37v584h186v-584q9 -17 23 -39t35 -39q24 -19 52.5 -30t86.5 -11q70 0 117 35.5t74 92.5q25 55 36 116t11 126q0 182 -78.5 336t-215.5 263v17h228 q144 -167 201 -305.5t57 -308.5zM955 1676l-49 -384h-145l-49 384h243z',\n            'M1145 837q0 -164 -39 -344t-121 -303q-85 -124 -186.5 -173t-214.5 -49q-192 0 -313.5 126.5t-121.5 329.5q0 228 134.5 372.5t336.5 144.5q90 0 169.5 -26t158.5 -91q2 26 3 55.5t1 55.5q0 217 -79 318t-231 101q-78 0 -169.5 -31.5t-169.5 -86.5h-11v194 q81 44 181.5 66.5t196.5 22.5q137 0 239.5 -54.5t164.5 -178.5q42 -86 56.5 -189t14.5 -260zM942 678q-60 47 -136 74t-148 27q-141 0 -225 -91t-84 -261q0 -145 67.5 -221.5t179.5 -76.5q128 0 209.5 97t115.5 287q6 33 11.5 73t9.5 92z',\n            'M1438 0h-1388l562 1489h264zM1171 168l-432 1147l-431 -1147h863z',\n            'M1532 1315h-200v-1508h-198v1508h-592v-1508h-198v1508h-200v174h1388v-174z',\n            'M1369 -189h-1182v191l673 668l-663 631v188h1133v-176h-891l648 -601v-72l-666 -653h948v-176z',\n            'M1456 572h-1236v160h1236v-160z',\n            'M843 1489l-780 -1489h-165l780 1489h165z',\n            'M492 511h-239v283h239v-283z',\n            'M1737 1788l-880 -1939h-102l-384 993h-237v139h393l313 -821l730 1628h167z',\n            'M1887 663q0 -239 -122.5 -372.5t-329.5 -133.5q-133 0 -244 76.5t-180 222.5q-79 -151 -184.5 -225t-248.5 -74q-191 0 -304 135.5t-113 349.5q0 238 125 372t327 134q134 0 245 -77t179 -222q79 150 185.5 224.5t247.5 74.5q191 0 304 -135.5t113 -349.5zM967 729 q-63 117 -155 175.5t-188 58.5q-138 0 -216 -83.5t-78 -237.5q0 -133 63.5 -216t182.5 -83q110 0 172 48.5t119 142.5q34 57 52.5 92.5t47.5 102.5zM1718 663q0 134 -64 216.5t-182 82.5q-88 0 -152.5 -35.5t-138.5 -155.5q-30 -48 -55.5 -99.5t-44.5 -95.5 q60 -115 153.5 -174.5t189.5 -59.5q138 0 216 83t78 238z',\n            'M1168 1367h-10q-32 8 -89.5 18.5t-89.5 10.5q-129 0 -181 -61q-53 -61 -53 -210v-1123q0 -206 -104 -315q-105 -110 -293 -110q-52 0 -106.5 5.5t-103.5 15.5v178h10q33 -8 87 -18.5t88 -10.5q129 0 182 61q52 61 52 210v1123q0 204 104 315q104 110 293 110 q58 0 109 -5.5t105 -15.5v-178z',\n            'M1431 1104q-20 -194 -111 -293t-249 -99q-77 0 -147 37.5t-126 82.5q-65 52 -117 79.5t-96 27.5q-75 0 -117 -48t-70 -172h-155q23 182 112.5 280t248.5 98q72 0 143 -37t130 -83q61 -48 114.5 -77.5t98.5 -29.5q76 0 120.5 54.5t63.5 179.5h157zM1432 588 q-25 -184 -112 -281.5t-250 -97.5q-72 0 -144 37.5t-129 82.5q-39 31 -103 69t-110 38q-78 0 -121 -55t-63 -179h-157q19 192 110.5 292t249.5 100q77 0 146 -37t127 -83q35 -28 97 -67.5t116 -39.5q75 0 117 49.5t69 171.5h157z',\n            'M1431 362h-608l-104 -335h-153l104 335h-425v156h474l84 268h-558v156h606l105 335h153l-105 -335h427v-156h-476l-83 -268h559v-156z',\n            'M1408 303l-1154 483v124l1154 483v-183l-889 -362l889 -362v-183zM1408 0h-1154v160h1154v-160z',\n            'M1422 786l-1154 -483v183l889 362l-889 362v183l1154 -483v-124zM1422 0h-1154v160h1154v-160z'\n        ];\n        this.OUTLINE_X = [\n            [], [291, 301, 505, 515], [168, 211, 729, 772, 554], [195, 389, 917, 1364, 1481, 1481, 1288, 760, 312, 195],\n            [155, 604, 722, 1129.8, 1160, 1107, 722, 604, 278.5, 191.1, 162, 155], [149, 172.3, 242, 630, 1687, 1844.3, 1960, 2031.3, 2055, 2031.8, 1962, 1575, 517, 359.8, 244, 172.8],\n            [115, 149.4, 252.5, 407.6, 598, 1555, 1287, 961.3, 881, 757.5, 601, 423.5, 293, 213.5, 187], [164, 207, 343, 386], [181, 205.5, 279, 554, 783, 783, 554, 279, 205.5],\n            [147, 376, 651, 724.5, 749, 724.5, 651, 376, 147], [167, 232, 588, 717, 1073, 1137, 1137, 1073, 717, 588, 232, 167], [210, 755, 921, 1466, 1466, 921, 755, 210],\n            [147, 293, 575, 321], [153, 777, 777, 153], [253, 492, 492, 253], [-30, 143, 860, 684],\n            [137, 167.9, 260.5, 420.1, 652, 881.4, 1041.5, 1135.6, 1167, 1136.1, 1043.5, 883.9, 652, 422, 262, 168.3], [278, 1084, 1084, 780, 625, 278],\n            [161, 1169, 1169, 1106, 1073.5, 976, 821.3, 617, 387.5, 198, 161], [167, 364, 608, 830.5, 1007, 1111, 1148, 1117, 1080, 971, 821, 629, 399.5, 210, 167],\n            [77, 790, 982, 1203, 1203, 982, 798, 77], [187, 378, 613, 843.5, 1015, 1119, 1157, 1147, 251, 187],\n            [137, 183.5, 316, 475, 675, 875.1, 1041.5, 1153.6, 1191, 1046, 965, 866, 542, 315, 179.5], [154, 285, 499, 1173, 1173, 154],\n            [122, 157.9, 265.5, 433.6, 651, 859.6, 1029.5, 1142.4, 1180, 1140, 1106.8, 1007, 851.5, 651, 456.8, 300, 196.5, 162],\n            [113, 258, 340, 438, 760, 988, 1122.5, 1167, 1121, 990, 829, 629, 429.5, 263, 150.5], [346, 585, 585, 346], [230, 376, 658, 585, 346], [254, 1408, 1408, 254],\n            [245, 1431, 1431, 245], [268, 1422, 1422, 268], [160, 406, 610, 970, 1005, 973.9, 880.5, 733.4, 541, 337.5, 160],\n            [176, 240, 419, 692, 1037, 1210, 1391, 1714, 1829.5, 1870, 1813.5, 1651, 1391, 1041, 701, 426, 243], [26, 1374, 832, 568],\n            [200, 728, 983.5, 1168, 1281, 1323, 1196, 1159, 1040, 885, 641, 200], [115, 169, 319, 549.5, 844, 1001.5, 1134, 1250.5, 1350, 1350, 1084.5, 845, 546.5, 317, 167],\n            [200, 576, 906.5, 1134, 1369.5, 1458, 1373, 1136, 918.5, 572, 200], [200, 1181, 1181, 200], [200, 398, 1045, 1151, 1151, 200],\n            [115, 171, 330, 577, 896, 1175.5, 1442, 1442, 1441, 1155.5, 896, 570.9, 323.5, 167.1], [200, 1339, 1339, 200], [137, 725, 725, 137],\n            [44, 178, 306, 486.6, 626.5, 716.1, 746, 746, 233, 44], [205, 1397, 1366, 205], [200, 1142, 1142, 398, 200], [200, 1526, 1526, 200], [200, 1336, 1336, 200],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 398, 1043, 1139.5, 1174, 1127.5, 996, 831, 604, 200],\n            [115, 163.5, 302, 520.5, 1010.5, 1133.1, 1290, 1409.5, 1528, 1528, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 1432, 1130.5, 1004, 842, 617, 200],\n            [134, 395.5, 685, 941.5, 1128, 1241.5, 1282, 1222, 990, 702, 480.3, 301, 182.5, 143, 134], [0, 532, 730, 1262, 1262, 0],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 178], [26, 568, 832, 1374, 238], [92, 486, 1546, 1933, 295], [68, 1335, 1336, 80], [6, 532, 730, 1254, 225],\n            [126, 1288, 1288, 1266, 160, 126], [239, 759, 759, 239], [70, 787, 960, 246], [171, 691, 691, 171], [186, 383, 1490, 901, 775], [-4, 1306, 1306, -4], [340, 613, 762, 583],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 1020, 924, 772.5, 567, 362, 203], [185, 679, 866, 1022, 1128.5, 1168, 1139.4, 1053.5, 918.1, 373, 185],\n            [105, 145, 258, 431, 653, 832.5, 1011, 1011, 841.5, 653, 430.1, 255.5, 142.6], [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 903, 258, 148.5],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 997.5, 849.1, 649, 428.6, 255.5, 143.4], [68, 195, 383, 716, 786, 786, 693.5, 580, 415, 294, 68],\n            [108, 225, 391.5, 565, 798.3, 962, 1058.8, 1091, 1091, 602, 417, 259, 148.5], [185, 1119, 1119, 1095.3, 1024, 373, 185], [175, 187, 375, 387, 387, 175],\n            [-62, 47.5, 153, 304, 421, 496, 521, 533, 533, 321, 100, -62], [193, 1199, 1161, 381, 193], [187, 375, 375, 187], [185, 1815, 1815, 1793.1, 1727.5, 1615.9, 1456, 735, 185],\n            [185, 1119, 1119, 1095.3, 1024, 907.5, 748, 185], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 833.3, 622, 409.4, 245.5, 140.9],\n            [185, 373, 1019, 1129, 1168, 1139.9, 1055.5, 920.6, 741, 185], [108, 137.6, 226.5, 365.1, 903, 1091, 1091, 602, 414, 259, 149.5], [185, 373, 882, 882, 816, 745, 185],\n            [110, 283.5, 511, 706.9, 856.5, 951.4, 983, 939, 768.5, 566, 372.5, 230, 143.5, 115, 110], [62, 211.3, 278, 387.5, 538, 649.5, 765, 765, 377, 189, 62],\n            [177, 201.5, 275, 392.5, 549, 1111, 1111, 177], [61, 510, 699, 1151, 265], [86, 380, 1299, 1590, 766], [60, 1152, 1152, 64], [61, 298, 499, 1151, 265],\n            [93, 995, 995, 978, 107, 93], [173, 588.9, 672.5, 800.9, 963, 1113, 1113, 963, 800.9, 672.5, 588.9, 173], [378, 552, 552, 378],\n            [187, 337, 499.1, 627.5, 711.1, 1127, 1127, 711.1, 627.5, 499.1, 337, 187], [187, 354, 1125, 1290, 1401, 1466.5, 1489, 1322, 551, 386, 274, 209.5], [], [291, 515, 505, 301],\n            [159, 191.6, 289.5, 647, 765, 1120, 1120, 765, 647, 292.5, 192.4], [137, 1163, 1163, 1137, 997, 816, 630.6, 484.5, 389.6, 182, 137],\n            [138, 247, 1058, 1168, 1168, 1055, 249, 138], [108, 187, 557, 745, 1115, 1191, 320], [378, 552, 552, 378],\n            [172, 229, 404.5, 575, 796, 965, 1063, 1096, 1128, 1071, 896, 725, 497.5, 334, 235, 203], [346, 958, 958, 346],\n            [159, 222.4, 412.5, 692.1, 1024, 1355.9, 1635.5, 1825.6, 1889, 1825.6, 1635.5, 1355.9, 1024, 692.1, 412.5, 222.4],\n            [151, 238.5, 454, 944, 944, 920.3, 849, 723.5, 537, 368, 231], [166, 716, 1146, 1146, 716, 166], [210, 1285, 1456, 1456, 210], [153, 777, 777, 153],\n            [159, 222.4, 412.5, 692.1, 1024, 1355.9, 1635.5, 1825.6, 1889, 1825.6, 1635.5, 1355.9, 1024, 692.1, 412.5, 222.4], [-4, 1, 1306, 1306],\n            [154, 183, 270, 399.3, 555, 710.8, 840, 927, 956, 927.1, 840.5, 711.4, 555, 399.3, 270, 183], [215, 1461, 1461, 921, 755, 215],\n            [207, 967, 967, 911, 887.6, 817.5, 544, 369.5, 211, 207], [207, 363.5, 540, 703, 834, 923, 956, 929, 904.9, 832.5, 561, 384.5, 224, 207], [541, 690, 963, 720],\n            [190, 378, 1124, 1124, 190], [137, 168.5, 595, 1106, 1106, 640, 425.3, 267, 169.5], [253, 492, 492, 253], [353, 456, 551, 788.5, 857.1, 880, 877, 872, 719, 353],\n            [291, 299, 914, 914, 693, 558, 291], [121, 150.6, 239.5, 378.6, 559, 734.3, 874, 965.5, 996, 965.5, 874, 734.3, 559, 378.6, 239.5, 150.6], [174, 604, 1154, 1154, 604, 174],\n            [171, 465, 1694, 1857, 1857, 1694, 1410, 545, 408, 171], [171, 465, 1955, 1955, 1890, 1805.5, 1410, 545, 408, 171], [140, 555, 1750, 1913, 1913, 1750, 1500, 448, 294, 155, 140],\n            [113, 144.1, 237.5, 384.6, 577, 782, 958, 958, 712, 508, 147.5], [26, 1374, 862, 683, 440], [26, 1374, 955, 712, 533], [26, 1374, 1033, 805, 578, 350],\n            [26, 1374, 1119, 990, 541, 367, 288], [26, 1374, 1005, 806, 393], [26, 1374, 1049, 1023.6, 947.5, 834.6, 699, 564, 451, 374.5, 349], [14, 1901, 1901, 608],\n            [115, 169, 548, 652.5, 750, 990.5, 1350, 1350, 1084.5, 845, 546.5, 317, 167], [200, 1181, 1181, 643, 400, 200], [200, 1181, 1181, 993, 750, 200],\n            [200, 1181, 1181, 803, 576, 200], [200, 1181, 1181, 1038, 426, 200], [137, 725, 725, 389, 146, 137], [137, 725, 725, 482, 137], [93, 137, 725, 776, 548, 321],\n            [126, 137, 725, 738, 738, 126], [14, 210, 586, 916.5, 1144, 1379.5, 1468, 1383, 1146, 929, 582, 210, 14], [200, 1336, 1336, 1208, 1079, 630, 456, 200],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 753, 510, 163], [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1083, 840, 303, 163],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1136, 908, 681, 453, 163],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1207, 1078, 629, 455, 163],\n            [112, 160.5, 299, 517.5, 803, 1089.5, 1307, 1445.5, 1495, 1446.5, 1108, 909, 496, 160], [291, 402, 1274, 1385, 1385, 1274, 402, 291],\n            [115, 120, 252, 1092.5, 1310, 1448.5, 1498, 1474, 1342, 806, 521.5, 303, 163], [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 753, 510, 178],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 1073, 830, 178], [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 856, 629, 178],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 1056, 444, 178], [6, 532, 730, 1254, 935, 692], [200, 398, 1044, 1139, 1174, 1127, 997, 398, 200],\n            [185, 675, 873.1, 1029.5, 1131.1, 1165, 1066, 1037.4, 951.5, 819.9, 654, 470.5, 321, 221, 185], [104, 130.3, 209, 325.5, 465, 1053, 1053, 1020, 559, 316, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 934, 691, 203], [104, 130.3, 209, 325.5, 465, 1053, 1053, 961, 733, 506, 278, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 1038, 909, 460, 286, 207], [104, 130.3, 209, 325.5, 465, 1053, 1053, 926, 314, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 956, 930.6, 854.5, 741.6, 606, 471, 358, 281.5, 256],\n            [104, 130.4, 209.5, 326.1, 465, 1433, 1648.5, 1833, 1855, 1855, 1823.6, 1729.5, 1581.1, 1387, 564, 360, 202],\n            [105, 145, 353, 456, 551, 788.5, 857.1, 1011, 1011, 841.5, 653, 430.1, 255.5, 142.6], [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 997.5, 580, 337, 143.4],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 960, 717, 255.5, 143.4], [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 986, 758, 531, 303, 143.4],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 951, 339, 143.4], [-21, 187, 375, 401, 222], [160, 187, 375, 582, 339], [-11, 187, 375, 572, 394, 167],\n            [5, 187, 375, 557, 557, 5], [106, 140.6, 244.5, 405.6, 612, 828.3, 995, 1101.5, 1137, 1004, 938, 263], [185, 1119, 1119, 1075, 946, 497, 323, 244, 185],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 553, 310, 140.9], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 933, 690, 245.5, 140.9],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 963, 735, 508, 280, 140.9], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1038, 909, 460, 286, 207],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 928, 729, 316, 140.9], [210, 719, 957, 1466, 1466, 957, 719, 210],\n            [93, 203, 833.3, 997, 1102, 1137, 1132, 1021, 409.4, 245.5, 140.9, 106], [177, 201.5, 275, 392.5, 549, 1111, 1111, 585, 342, 177],\n            [177, 201.5, 275, 392.5, 549, 1111, 1111, 945, 702, 177], [177, 201.5, 275, 392.5, 549, 1111, 1111, 757, 530, 177], [177, 201.5, 275, 392.5, 549, 1111, 1111, 955, 343, 177],\n            [61, 298, 499, 1151, 928, 685], [185, 373, 1019, 1129, 1168, 1139.9, 1055.5, 920.6, 373, 185], [230, 376, 658, 585, 346], [530, 579, 724, 773],\n            [256, 588, 716, 1048, 1048, 765, 539, 256], [7, 26, 1374, 832], [346, 585, 585, 346], [0, 49, 443, 1424, 1424, 443], [0, 49, 443, 1582, 1582, 443], [0, 49, 380, 968, 968, 380],\n            [0, 49, 354.5, 493, 711.5, 997, 1283.5, 1501, 1639.5, 1689, 1640.5, 1501, 1284.5, 997], [0, 49, 815, 1013, 1537, 289],\n            [0, 49, 291, 1751, 1751, 1701, 1654.1, 1513.5, 1296.6, 1021], [-53, 187, 375, 615, 615, 379, 183, -53], [26, 1374, 832, 568],\n            [200, 728, 983.5, 1168, 1281, 1323, 1196, 1159, 1040, 885, 641, 200], [200, 398, 1162, 1162, 200], [26, 1414, 852, 588], [200, 1181, 1181, 200],\n            [126, 1288, 1288, 1266, 160, 126], [200, 1339, 1339, 200], [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163],\n            [137, 725, 725, 137], [205, 1397, 1366, 205], [26, 1378, 822, 582], [200, 1526, 1526, 200], [200, 1336, 1336, 200], [114, 1215, 1215, 114],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 1339, 1339, 200],\n            [200, 398, 1043, 1139.5, 1174, 1127.5, 996, 831, 604, 200], [118, 1280, 1280, 1234, 138, 118], [0, 532, 730, 1262, 1262, 0], [6, 532, 730, 1254, 225],\n            [105, 149.5, 273, 740, 937, 1404, 1527.5, 1572, 1528.5, 1410, 937, 740, 267, 148], [68, 1335, 1336, 80], [179, 219.5, 338, 793, 990, 1446, 1563.5, 1604, 1604, 179],\n            [108, 1568, 1568, 1518, 1471.1, 1330.5, 1113.6, 838, 562.4, 345.5, 204.9, 158, 108], [126, 137, 725, 738, 738, 126], [6, 532, 730, 1254, 939, 740, 327],\n            [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 743, 500, 148.5], [109, 152.5, 265, 417, 578, 796, 1006, 1006, 961, 721, 478, 191.5, 144],\n            [185, 931, 1119, 1119, 1095.3, 802, 559, 185], [160, 187, 375, 403], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 1043, 760, 534, 251, 177],\n            [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 604, 416.5, 258, 148.5], [185, 373, 1030.5, 1131.4, 1165, 1084, 1050, 959, 825.5, 661, 462.1, 311.5, 216.6, 185],\n            [61, 506, 694, 1151, 265], [106, 140.6, 244.5, 408.6, 624, 837.1, 1000.5, 1104.4, 1139, 1049, 239],\n            [109, 152.5, 265, 417, 578, 796, 1006, 1006, 961, 789, 609, 449, 304, 191.5, 144], [108, 135.8, 219, 646, 825, 937, 982, 942, 198],\n            [185, 931, 1119, 1119, 1095.3, 1024, 907.5, 748, 185], [137, 159.5, 219, 382, 639, 896, 1059, 1118, 1141, 1118, 1058, 895.5, 639, 382.5, 220, 159.5], [187, 375, 375, 187],\n            [193, 1192, 1122, 1085, 1027, 193], [61, 1151, 522, 311], [185, 373, 1125, 1125, 185], [61, 510, 699, 1151, 265], [104, 138.5, 239, 704, 884, 995.5, 1041, 957, 133],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 833.3, 622, 409.4, 245.5, 140.9], [185, 1120, 1120, 185],\n            [185, 373, 1033.5, 1137.4, 1172, 1140, 1044, 887.3, 673, 477.5, 322, 220.5, 185], [105, 146.5, 261, 685, 862, 971, 1018, 986, 839, 675, 441.9, 260.5, 143.9],\n            [106, 140.5, 244, 407.8, 623, 832.9, 996.5, 1101.9, 1295, 1295, 625, 412, 247, 141.3], [10, 414, 602, 1006, 1006, 10],\n            [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 177], [104, 151, 283, 715, 902, 1342.5, 1471.1, 1514, 1470.4, 1339.5, 1132.6, 861, 784.5, 714, 355, 163],\n            [48, 1160, 1149, 59], [176, 223.5, 748, 935, 1459, 1507, 1507, 176], [113, 136.5, 211, 343.5, 538, 1128, 1321.5, 1455, 1529.5, 1553, 1496, 1295, 371, 170],\n            [5, 187, 375, 557, 557, 5], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 953, 341, 177],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 743, 500, 140.9], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 768, 525, 177],\n            [113, 136.5, 211, 343.5, 538, 1128, 1321.5, 1455, 1529.5, 1553, 1496, 955, 712, 170],\n            [149, 179.4, 270.5, 409.6, 584, 798.5, 985, 1106, 1145, 1130.5, 1074, 909.5, 670, 473.5, 292], [50, 1438, 876, 612], [144, 344, 1332, 1532, 1532, 144],\n            [187, 1369, 1369, 1330, 197, 187], [220, 1456, 1456, 220], [-102, 63, 843, 678], [253, 492, 492, 253], [134, 755, 857, 1737, 1570, 134],\n            [161, 189.3, 274, 406.5, 578, 1435, 1620.9, 1764.5, 1856.4, 1887, 1858.8, 1774, 1641.5, 1470, 613, 430.3, 286, 192.3],\n            [138, 241.5, 348, 515.3, 641, 719, 1168, 1168, 1063, 954, 786.3, 661, 583, 138], [243, 400, 1070, 1214, 1320, 1432, 1431, 1274, 604, 462.4, 355.5, 243],\n            [245, 566, 719, 1431, 1431, 1109, 956, 245], [254, 1408, 1408, 254], [268, 1422, 1422, 268]\n        ];\n        this.OUTLINE_Y = [\n            [], [1489, 0, 0, 1489], [1556, 977, 977, 1556, 1556], [421, 0, 0, 421, 932, 1067, 1489, 1489, 1067, 556],\n            [85, -361, -361, 238.1, 380, 1231, 1576, 1576, 1185, 1071.5, 935, 283], [1075, 880.5, 743, 0, -29, -1.8, 80, 217.8, 413, 607.5, 745, 1489, 1517, 1489.8, 1408, 1270.3],\n            [409, 230.9, 90.5, -0.6, -31, 0, 909, 1333.4, 1432.5, 1498.1, 1520, 1490, 1412, 1301.5, 1174], [1556, 977, 977, 1556], [572, 286.3, 31, -412, -412, 1556, 1556, 1113, 857.8],\n            [-412, -412, 31, 286.3, 572, 857.8, 1113, 1556, 1556], [886, 776, 630, 630, 777, 887, 1299, 1409, 1556, 1556, 1410, 1300], [572, 27, 27, 572, 732, 1277, 1277, 732],\n            [-370, -370, 285, 285], [561, 561, 742, 742], [0, 0, 285, 285], [-304, -304, 1556, 1556],\n            [743, 400, 159, 16.5, -31, 15.9, 156.5, 397.4, 745, 1084.9, 1326.5, 1470.9, 1519, 1471.6, 1329.5, 1088.1], [0, 0, 152, 1494, 1494, 1286],\n            [0, 0, 171, 1110, 1279.4, 1409.5, 1492.4, 1520, 1491, 1427, 209], [63, -1.5, -31, 2.5, 106, 254, 441, 1161, 1320, 1436, 1500, 1520, 1490.5, 1426, 272],\n            [419, 0, 0, 419, 579, 1489, 1489, 649], [56, -5.5, -31, 6.5, 114, 274, 473, 1489, 1489, 267],\n            [654, 324, 104, 3, -31, 4.9, 112.5, 276.9, 483, 1494, 1512, 1517, 1453.5, 1277, 1005], [1314, 0, 0, 1266, 1489, 1489],\n            [411, 233.5, 91, -2.8, -34, -2, 94, 238.3, 415, 1144, 1294.5, 1416, 1496.3, 1523, 1495, 1411, 1285, 1131],\n            [1005, -6, -23.5, -29, 33, 209, 480, 834, 1171.5, 1385, 1485.5, 1519, 1483.3, 1376, 1211.8], [0, 0, 1117, 1117], [-370, -370, 285, 1117, 1117], [590, 77, 1227, 714],\n            [362, 362, 942, 942], [77, 590, 714, 1227], [1245, 0, 0, 964.5, 1139, 1293.4, 1414.5, 1492.9, 1519, 1497.5, 1449],\n            [647, 291, 15, -162.5, -226, -218.5, -190, 157, 394, 663, 1013.5, 1283, 1457, 1519, 1452, 1268, 991.5], [0, 0, 1489, 1489],\n            [0, 0, 28, 122, 262, 458, 1155, 1316.5, 1427, 1477, 1489, 1489], [743, 402.5, 161, 18.5, -27, -13.5, 19, 63, 108, 1385, 1487, 1516, 1465, 1317, 1072],\n            [0, 0, 28, 119, 375, 743, 1118, 1371, 1457.5, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 717, 1313, 1489, 1489],\n            [746, 405.5, 163, 19, -29, 12.5, 110, 749, 1382, 1485.5, 1516, 1464.4, 1309.5, 1065.4], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [8, -12.5, -21, 5.5, 85, 213.5, 387, 1489, 1489, 193], [0, 0, 1489, 1489], [0, 0, 176, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 709, 855.5, 1039, 1254, 1396, 1466.5, 1489, 1489],\n            [744, 415, 172, 21, -297.5, -369.1, -393, -386.5, -365, -183, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1280.5, 1409, 1471.5, 1489, 1489],\n            [92, 3, -27, 9, 109, 253, 425, 1412, 1486, 1516, 1486.1, 1396.5, 1260.1, 1090, 340], [1313, 0, 0, 1313, 1489, 1489], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 1489],\n            [1489, 0, 0, 1489, 1489], [1489, 0, 0, 1489, 1489], [0, 0, 1489, 1489], [1489, 0, 0, 1489, 1489], [0, 0, 176, 1489, 1489, 184], [-392, -392, 1556, 1556],\n            [1556, -304, -304, 1556], [-392, -392, 1556, 1556], [682, 682, 684, 1489, 1489], [-300, -300, -180, -180], [1676, 1302, 1302, 1676],\n            [324, 182.8, 69, -6, -31, 0, 758, 939, 1058, 1124.5, 1144, 1126, 1093], [0, -31, 8.5, 127, 315, 567, 812.8, 996, 1110, 1556, 1556],\n            [557, 300, 118, 10.5, -25, 0, 70, 1050, 1116, 1143, 1104, 987, 801.5], [550, 306.8, 123, 7.5, -31, 0, 1556, 1556, 992, 803],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1016, 1115, 1148, 1107.8, 987, 797.8], [959, 0, 0, 959, 1374, 1546, 1560, 1566, 1539.4, 1459.5, 1117],\n            [569, -375, -410.5, -423, -389.8, -290, -119.3, 127, 1117, 1148, 1108.5, 998, 817.5], [0, 0, 725, 906, 1039, 1556, 1556], [1304, 0, 0, 1304, 1499, 1499],\n            [-395, -415, -423, -398, -323, -199, -27, 1304, 1499, 1499, 1117, -216], [0, 0, 1117, 1556, 1556], [0, 0, 1556, 1556], [0, 0, 725, 902.9, 1036.5, 1120.1, 1148, 1148, 1117],\n            [0, 0, 725, 906, 1039, 1120.8, 1148, 1117], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1108.4, 1148, 1108.4, 989.5, 802.4],\n            [-412, -412, 133, 323.5, 572, 813.4, 995.5, 1109.9, 1148, 1117], [555, 314.1, 131.5, 16.4, -412, -412, 1117, 1148, 1108, 995, 809.5], [0, 0, 912, 1105, 1114.5, 1117, 1117],\n            [67, 2.5, -27, -2.5, 71, 182.8, 322, 1060, 1119.5, 1144, 1116.5, 1042, 933, 803, 278], [959, 189.8, 70, 1, -22, -13, 10, 1117, 1438, 1438, 1117],\n            [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [0, 0, 1117, 1117], [1117, -412, -412, 1117, 1117],\n            [0, 0, 159, 1117, 1117, 139], [504, -170.9, -292.5, -367.1, -392, -392, 1556, 1556, 1531.1, 1456.5, 1334.9, 660], [-392, -392, 1556, 1556],\n            [-392, -392, -367.1, -292.5, -170.9, 504, 660, 1334.9, 1456.5, 1531.1, 1556, 1556], [395, 395, 396, 440, 561, 732, 927, 927, 926, 880.5, 761, 589.5], [], [0, 0, 1489, 1489],\n            [557, 333.5, 163, -361, -361, 74, 1046, 1475, 1475, 948.5, 775.9], [0, 0, 171, 1467, 1501, 1518, 1485.9, 1389.5, 1243.1, 751, 207],\n            [258, 145, 147, 257, 1067, 1176, 1176, 1066], [1489, 426, 0, 0, 426, 1489, 1489], [-392, -392, 1556, 1556],\n            [533, -327, -371.5, -385, -358, -275, -156, -10, 601, 1462, 1505, 1519, 1490, 1411, 1293.5, 1147], [1304, 1304, 1499, 1499],\n            [655, 323.1, 43.5, -146.6, -210, -146.6, 43.5, 323.1, 655, 986.9, 1266.5, 1456.6, 1520, 1456.6, 1266.5, 986.9],\n            [833, 616, 531, 554, 1192, 1332.4, 1435.5, 1498.9, 1520, 1504, 1475], [608, 162, 191, 1113, 1142, 697], [602, 57, 57, 762, 762], [561, 561, 742, 742],\n            [655, 323.1, 43.5, -146.6, -210, -146.6, 43.5, 323.1, 655, 986.9, 1266.5, 1456.6, 1520, 1456.6, 1266.5, 986.9], [1788, 1668, 1668, 1788],\n            [1116, 960.4, 831.5, 744.9, 716, 745, 832, 961, 1116, 1271, 1400, 1487, 1516, 1487, 1400, 1271], [179, 179, 917, 1462, 1462, 917],\n            [566, 566, 711, 1237, 1350.4, 1440.5, 1519, 1501.5, 1458, 722], [585, 542, 527, 543.5, 595, 685.5, 817, 1278, 1374.5, 1452, 1520, 1502.5, 1458, 764],\n            [1302, 1302, 1676, 1676], [-412, -412, 0, 1117, 1117], [1050, 866, -363, -363, 1489, 1489, 1460, 1373, 1234.3], [511, 511, 794, 794],\n            [-397, -416, -423, -337, -232, -89, -25, 20, 20, -237], [1256, 566, 566, 688, 1493, 1493, 1368],\n            [1025, 820.1, 663.5, 564.1, 531, 563.4, 660.5, 816.4, 1025, 1233.8, 1390, 1487.5, 1520, 1486.8, 1387, 1230], [191, 162, 608, 697, 1142, 1113],\n            [1246, 0, 0, 220, 353, 944, 1489, 1493, 1493, 1363], [1246, 0, 0, 139, 664, 865, 1489, 1493, 1493, 1363], [598, 0, 0, 220, 353, 944, 1489, 1517, 1500, 1456, 773],\n            [350, 195.6, 74.5, -3.9, -30, -10, 40, 244, 1489, 1489, 523], [0, 0, 1675, 2049, 2049], [0, 0, 2049, 2049, 1675], [0, 0, 1670, 2049, 2049, 1670],\n            [0, 0, 1992, 1992, 1987, 1910, 1682], [0, 0, 1872, 1872, 1872], [0, 0, 1712, 1843.5, 1952, 2024.8, 2049, 2024.8, 1952, 1843.5, 1712], [0, 0, 1489, 1489],\n            [743, 402.5, -397, -416, -423, -337, 108, 1385, 1487, 1516, 1465, 1317, 1072], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 1489, 2049, 2049, 1489],\n            [0, 0, 1489, 1872, 1872, 1489], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 2049, 2049, 1489], [1670, 0, 0, 1670, 2049, 2049], [1677, 0, 0, 1677, 1872, 1872],\n            [740, 0, 0, 28, 119, 375, 743, 1118, 1371, 1457.5, 1489, 1489, 883], [0, 0, 1489, 1992, 1992, 1987, 1910, 1489],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 2049, 2049, 1070.5], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 2049, 2049, 1318, 1070.5],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1670, 2049, 2049, 1670, 1070.5], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1992, 1992, 1987, 1910, 1070.5],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1872, 1872, 1872, 1070.5], [216, 105, 105, 216, 1088, 1199, 1199, 1088],\n            [744, -146, -146, 20, 172, 414.5, 744, 1611, 1611, 1520, 1468, 1318, 1070.5], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489],\n            [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489],\n            [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 1872, 1872, 1489], [1489, 0, 0, 1489, 2049, 2049], [0, 0, 469, 610.5, 787, 992, 1130, 1489, 1489],\n            [0, -24, 12.4, 121.5, 284.1, 481, 1241, 1376, 1479, 1544.3, 1566, 1536.5, 1449, 1295.5, 1080], [324, 182.8, 69, -6, -31, 0, 758, 939, 1676, 1676, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1676, 1676, 1093], [324, 182.8, 69, -6, -31, 0, 758, 1297, 1676, 1676, 1297, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1619, 1619, 1614, 1537, 1309], [324, 182.8, 69, -6, -31, 0, 758, 1499, 1499, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1630, 1761.8, 1871, 1944.5, 1969, 1944.5, 1871, 1761.8, 1630],\n            [317, 178.8, 68, -4.8, -29, -26, 3.5, 68, 559, 641, 861.3, 1020, 1116, 1148, 1146, 1127, 1093], [557, 300, -397, -416, -423, -337, -232, 70, 1050, 1116, 1143, 1104, 987, 801.5],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1016, 1676, 1676, 797.8], [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1676, 1676, 987, 797.8],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1297, 1676, 1676, 1297, 797.8], [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1499, 1499, 797.8],\n            [1676, 0, 0, 1302, 1676], [1302, 0, 0, 1676, 1676], [1297, 0, 0, 1297, 1676, 1676], [1304, 0, 0, 1304, 1499, 1499],\n            [484, 266.5, 104, 2.8, -31, 12, 141, 351, 637, 1469, 1566, 1556], [0, 0, 725, 1619, 1619, 1614, 1537, 1309, 1117],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1676, 1676, 802.4], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1676, 1676, 989.5, 802.4],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1297, 1676, 1676, 1297, 802.4], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 1619, 1619, 1614, 1537, 1309],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1499, 1499, 1499, 802.4], [572, 7, 7, 572, 732, 1297, 1297, 732],\n            [-148, -148, 8.5, 127, 313.8, 558, 1241, 1241, 1108.4, 989.5, 802.4, 558], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117],\n            [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1499, 1499, 1117],\n            [1117, -412, -412, 1117, 1676, 1676], [-412, -412, 133, 323.5, 572, 813.4, 995.5, 1109.9, 1556, 1556], [-370, -370, 285, 1117, 1117], [1676, 1292, 1292, 1676],\n            [1304, 1292, 1292, 1304, 1499, 1676, 1676, 1499], [1489, 0, 0, 1489], [832, 832, 1117, 1117], [1489, 1105, 0, 0, 1489, 1489], [1489, 1105, 0, 0, 1489, 1489],\n            [1489, 1105, 0, 0, 1489, 1489], [1489, 1105, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520], [1489, 1105, 0, 0, 1489, 1489],\n            [1489, 1105, 0, 0, 174, 894, 1144.8, 1345, 1476.3, 1520], [1304, 0, 0, 1304, 1499, 1676, 1676, 1499], [0, 0, 1489, 1489],\n            [0, 0, 28, 122, 262, 458, 1155, 1316.5, 1427, 1477, 1489, 1489], [0, 0, 1313, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 176, 1489, 1489, 184],\n            [0, 0, 1489, 1489], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1489, 1489],\n            [0, 0, 709, 855.5, 1039, 1254, 1396, 1466.5, 1489, 1489], [0, 0, 176, 1489, 1489, 184], [1313, 0, 0, 1313, 1489, 1489], [1489, 0, 0, 1489, 1489],\n            [755, 507, 325, -16, -16, 325, 506.5, 755, 994, 1171, 1505, 1505, 1171, 993], [0, 0, 1489, 1489], [910, 647, 471, 0, 0, 471, 645.5, 910, 1489, 1489],\n            [0, 0, 174, 894, 1144.8, 1345, 1476.3, 1520, 1476.3, 1345, 1144.8, 894, 174], [1677, 0, 0, 1677, 1872, 1872], [1489, 0, 0, 1489, 1872, 1872, 1872],\n            [550, 306.8, 123, 7.5, -31, 0, 1117, 1676, 1676, 803], [306, 148.5, 46, -10, -26, -5, 64, 270, 1083, 1676, 1676, 986.5, 839], [0, -412, -412, 725, 906, 1676, 1676, 1117],\n            [1676, 0, 0, 1676], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1499, 1676, 1676, 1499, 1117], [550, 306.8, 123, 7.5, -31, 0, 1117, 1148, 1108, 992, 803],\n            [-412, -412, 110, 259.5, 444, 1195, 1355, 1467, 1534.5, 1556, 1524.3, 1429, 1277.8, 1078], [1117, -412, -412, 1117, 1117],\n            [534, 299.6, 120.5, 6.9, -31, 7.8, 124, 308.3, 551, 1556, 1556], [306, 148.5, 46, -10, -26, -5, 64, 270, 1083, 1127.5, 1144, 1128, 1079, 986.5, 839],\n            [463, 262.3, 118, -412, -412, -264.5, -96, 1556, 1556], [0, -412, -412, 725, 906, 1039, 1120.8, 1148, 1117],\n            [768, 451.5, 241, 37.5, -31, 37.5, 241, 451.5, 768, 1073, 1288, 1487, 1556, 1487, 1288, 1073.5], [0, 0, 1117, 1117], [0, 0, 1117, 1118, 1119, 1117], [0, 0, 1556, 1556],\n            [-412, -412, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [412, 248.5, 113, -412, -412, -265, -96, 1556, 1556],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1108.4, 1148, 1108.4, 989.5, 802.4], [0, 0, 1117, 1117],\n            [-412, -412, 148.5, 340.9, 577, 821.5, 1001, 1111.3, 1148, 1115, 1020, 861.5, 646], [549, 299, 129, -412, -412, -268, -96, 1079, 1124.5, 1143, 1102.5, 981, 792],\n            [558, 313.8, 127, 8.5, -31, 7.5, 123, 308.8, 952, 1117, 1148, 1108.6, 990.5, 803.6], [952, 0, 0, 952, 1117, 1117],\n            [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1117], [546, 314, 142, -412, -412, 159, 342.3, 576, 816.6, 996.5, 1108.6, 1146, 1145.5, 1143, 1117, 842],\n            [-412, -412, 1117, 1117], [446, 248.5, -412, -412, 248, 446, 1117, 1117], [503, 310.5, 139, 16.5, -30, -30, 14.5, 139, 310.5, 503, 811.5, 1117, 1117, 811.5],\n            [1304, 0, 0, 1304, 1499, 1499], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1499, 1499, 1117],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1676, 1676, 802.4], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1676, 1676, 1117],\n            [503, 310.5, 139, 16.5, -30, -30, 14.5, 139, 310.5, 503, 811.5, 1676, 1676, 811.5], [424, 240.1, 94.5, -0.4, -32, 17, 190, 493, 837, 1097, 1286, 1464.5, 1519, 1496.5, 1430],\n            [0, 0, 1489, 1489], [1315, -193, -193, 1315, 1489, 1489], [-189, -189, -13, 1489, 1489, 2], [572, 572, 732, 732], [0, 0, 1489, 1489], [511, 511, 794, 794],\n            [842, -151, -151, 1788, 1788, 981], [642, 447.6, 292.5, 190.9, 157, 157, 190.4, 290.5, 450.4, 663, 857.4, 1012.5, 1114.1, 1148, 1148, 1114.5, 1014, 854],\n            [-402, -417.5, -423, -395.5, -313, -179.8, 1367, 1545, 1560.5, 1566, 1538.5, 1456, 1321.8, -224], [202, 202, 209, 233.4, 306.5, 588, 1104, 1104, 1097, 1072.5, 999, 719],\n            [362, 27, 27, 362, 942, 1277, 1277, 942], [0, 0, 1393, 910], [0, 0, 910, 1393]\n        ];\n        this.KERN_C1 = [\n            '\\'', '\\'', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '.', '.', 'A', 'A', 'A', 'A', 'A', 'A', 'A',\n            'A', 'A', 'A', 'A', 'A', 'B', 'B', 'B', 'B', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F',\n            'I', 'J', 'J', 'J', 'J', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n            'L', 'O', 'O', 'O', 'O', 'O', 'O', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'Q', 'Q', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'S',\n            'S', 'S', 'S', 'S', 'S', 'S', 'S', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T',\n            'T', 'T', 'T', 'T', 'T', 'T', 'U', 'U', 'U', 'U', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'W', 'W', 'W', 'W', 'W', 'W',\n            'W', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y',\n            'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z',\n            'a', 'a', 'a', 'b', 'b', 'b', 'c', 'c', 'e', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'h', 'h', 'h', 'k', 'k', 'k', 'k', 'm', 'm',\n            'm', 'n', 'n', 'n', 'o', 'o', 'o', 'o', 'o', 'p', 'p', 'p', 'r', 'r', 'r', 'r', 'r', 't', 't', 'v', 'v', 'v', 'v', 'v', 'v', 'v', 'v', 'w', 'w', 'w',\n            'w', 'w', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'z', 'z', 'z', 'z', 'z', 'z', 'z',\n            'z', 'z', '\\u00C7', '\\u00E7', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00F8', '\\u00F8', '\\u00F8', '\\u00F8', '\\u00F8'\n        ];\n        this.KERN_C2 = [\n            '\\u00C6', 'A', '\\u00E6', '\\u00C6', 'z', 'y', 'x', 'w', 'v', 'a', 'Z', 'Y', 'X', 'W', 'V', 'T', 'S', 'J', 'I', 'A', '-', ',', 'y', 'w', 'v', 'u', 't',\n            'Y', 'W', 'V', 'U', 'T', 'S', '-', 'T', '.', '-', ',', '-', 'Z', 'Y', 'X', 'W', 'T', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'o', 'e', 'a', 'T', 'A',\n            '?', ';', ':', '.', ',', '-', '\\u00C6', 'A', '.', ',', '\\u00F8', '\\u00E6', '\\u00D8', 'y', 'w', 'v', 'u', 'o', 'e', 'a', 'O', '-', '\\u00D8', '\\u00C7',\n            'y', 'v', 'Y', 'W', 'V', 'T', 'O', 'J', 'G', 'C', '-', '\\'', 'Z', 'Y', 'X', 'T', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'o', 'e', 'a', 'Y', 'A',\n            '.', ',', '.', ',', '\\u00F8', '\\u00E6', 'y', 'u', 'o', 'e', 'a', 'Y', 'T', '-', '\\u00C6', 'y', 'w', 'v', 'S', 'A', '.', ',', '\\u00F8', '\\u00E6',\n            '\\u00D8', '\\u00C6', '\\u00C7', 'z', 'y', 'w', 'v', 'u', 's', 'r', 'o', 'g', 'e', 'c', 'a', 'T', 'S', 'O', 'G', 'C', 'A', '?', ';', ':', '.', '-', ',',\n            '\\u00C6', 'A', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'y', 'u', 'o', 'e', 'a', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'y', 'u',\n            'r', 'o', 'e', 'a', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6', '\\u00D8', '\\u00C7', 'y', 'u', 'o', 'e', 'a', 'O', 'G', 'C', '-', '\\u00F8',\n            '\\u00E6', '\\u00D8', '\\u00C6', 'v', 'u', 's', 'r', 'q', 'p', 'o', 'n', 'm', 'g', 'e', 'd', 'a', 'O', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6',\n            '\\u00D8', '\\u00C7', 'y', 'w', 'o', 'e', 'a', 'Z', 'O', 'G', 'C', '-', 'y', 'w', 'v', 'y', '.', ',', 'T', '-', 'T', '}', 'y', ']', '\\\\', '?', '.',\n            '-', ',', '*', ')', '\\'', '\"', 'y', 'w', 'v', '\\u00F8', 'o', 'e', '-', 'y', 'w', 'v', 'y', 'w', 'v', 'y', 'x', 'v', '.', ',', 'y', '.', ',',\n            '\\u00E6', 'a', '.', '-', ',', 'y', '-', '\\u00F8', '\\u00E6', 'o', 'e', 'a', '.', '-', ',', '\\u00E6', 'a', '.', '-', ',', '\\u00F8', '\\u00E7', 'o', 'g',\n            'e', 'd', 'c', '-', '\\u00F8', '\\u00E6', '\\u00E7', 'q', 'o', 'g', 'e', 'd', 'c', 'a', '.', '-', ',', '\\u00F8', '\\u00E7', 'q', 'o', 'g', 'e', 'd', 'c',\n            '-', '-', '-', 'Z', 'Y', 'X', 'T', '.', ',', 'y', 'x', 'v', '.', ','\n        ];\n        this.KERN_K = [\n            100, 100, 20, 50, 40, 40, 50, 20, 40, 20, 30, 140, 80, 50, 50, 150, 20, 100, 30, 50, 160, 130, 50, 30, 50, 10, 20, 80, 50, 60, 10, 120, 10, 50, 60,\n            20, -10, 20, 50, 20, 20, 10, 20, 50, 50, 50, 50, 100, 110, 50, 50, 100, -30, 100, -60, 60, 60, 300, 300, 30, 10, 10, 20, 20, 70, 60, 20, 80, 70, 80,\n            50, 70, 70, 60, 20, 110, 20, 20, 110, 110, 160, 100, 110, 170, 20, -100, 20, 20, 160, 120, 20, 20, 10, 50, 30, 30, 50, 50, 70, 50, 50, 50, -20, 50,\n            300, 300, 30, 30, 50, 50, 55, 20, 50, 50, 40, 20, 60, 100, 20, 30, 20, 30, 22, 20, 20, 20, 220, 240, 50, 130, 40, 170, 200, 200, 200, 200, 180, 200,\n            220, 210, 220, 220, 240, 70, 12, 50, 40, 40, 120, -60, 200, 200, 290, 150, 290, 20, 10, 20, 20, 100, 100, 70, 65, 60, 100, 100, 100, 60, 80, 80, 290,\n            50, 290, 100, 100, 60, 65, 60, 60, 100, 100, 100, 50, 80, 80, 220, 50, 290, 60, 50, 10, 10, 80, 30, 60, 60, 50, 10, 10, 10, 80, 130, 140, 20, 80,\n            100, 110, 110, 100, 130, 100, 130, 100, 100, 130, 130, 120, 140, 20, 80, 200, 200, 290, 140, 290, 60, 50, 20, 20, 65, 40, 60, 60, 50, 10, 20, 20, 20,\n            60, 16, 10, 16, 5, 20, 30, 60, 20, 140, -100, 10, -100, -100, -110, 120, 50, 130, -50, -100, -60, -60, 20, 10, 20, 20, 20, 20, 100, 20, 10, 20, 20,\n            10, 20, 15, 20, 15, 20, 30, 5, 20, 30, 40, 36, 290, 20, 290, 10, 40, 18, 40, 18, 18, 40, 180, 40, 180, 20, 20, 70, 20, 70, 24, 20, 24, 10, 24, 10,\n            20, 50, 18, 40, 18, 10, 18, 10, 18, 10, 18, 40, 190, 40, 190, 12, 10, 10, 12, 10, 12, 10, 10, 20, 50, 20, 20, 20, 10, 50, 30, 30, 15, 20, 15, 20, 30\n        ];\n        this.pathCache = [];\n        this.pathMissing = null;\n        this.ctxReference = null;\n        for (let n = this.GLYPH_DATA.length - 1; n >= 0; n--)\n            this.pathCache[n] = null;\n    }\n    getKerning(ch1, ch2) {\n        const sz = this.KERN_K.length;\n        for (let n = 0; n < sz; n++)\n            if (this.KERN_C1[n] == ch1 && this.KERN_C2[n] == ch2)\n                return -this.KERN_K[n];\n        return 0;\n    }\n    static measureText(txt, size) { return this.main.measureText(txt, size); }\n    measureText(txt, size) {\n        let font = FontData.main;\n        let scale = size / font.UNITS_PER_EM;\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = this.getIndex(ch);\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                continue;\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n        }\n        return [dx * scale, font.ASCENT * scale * font.ASCENT_FUDGE, -font.DESCENT * scale];\n    }\n    static measureWidths(txt, size) { return this.main.measureWidths(txt, size); }\n    measureWidths(txt, size) {\n        let font = FontData.main;\n        let scale = size / font.UNITS_PER_EM;\n        let xpos = [0];\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = this.getIndex(ch);\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                xpos.push(dx * scale);\n                continue;\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n            xpos.push(dx * scale);\n        }\n        return xpos;\n    }\n    getIndex(ch) {\n        return this.UNICODE.indexOf(ch);\n    }\n    getRawGlyph(idx) {\n        return this.GLYPH_DATA[idx];\n    }\n    getGlyphPath(idx) {\n        let path = this.pathCache[idx];\n        if (path != null)\n            return path;\n        path = new Path2D(this.GLYPH_DATA[idx]);\n        this.pathCache[idx] = path;\n        return path;\n    }\n    getMissingPath() {\n        if (!this.pathMissing)\n            this.pathMissing = new Path2D(this.MISSING_DATA);\n        return this.pathMissing;\n    }\n    getOutlineX(idx) { return this.OUTLINE_X[idx].slice(0); }\n    getOutlineY(idx) { return this.OUTLINE_Y[idx].slice(0); }\n    initNativeFont(ctx) {\n        if (ctx == null && this.ctxReference)\n            return;\n        if (ctx == null) {\n            let canvas = new OffscreenCanvas(256, 256);\n            this.ctxReference = canvas.getContext('2d');\n        }\n        else\n            this.ctxReference = ctx;\n    }\n    static measureTextNative(txt, family, size, opt = {}) {\n        return this.main.measureTextNative(txt, family, size, opt);\n    }\n    measureTextNative(txt, family, size, opt = {}) {\n        if (!this.ctxReference)\n            throw 'Calling measureTextNative without having called initNativeFont first';\n        this.ctxReference.save();\n        let pfx = '';\n        if (opt.bold)\n            pfx += 'bold ';\n        if (opt.italic)\n            pfx += 'italic ';\n        this.ctxReference.font = pfx + size + 'px ' + family;\n        let metrics = this.ctxReference.measureText(txt);\n        this.ctxReference.restore();\n        const FUDGE = this.ASCENT_FUDGE * this.ASCENT / this.UNITS_PER_EM;\n        return [metrics.width, size * FUDGE, size * (-this.DESCENT / this.ASCENT) * FUDGE];\n    }\n}\nFontData.main = new FontData();\nexport { FontData };\n//# sourceMappingURL=FontData.js.map","import { Vec } from '../util/Vec';\nlet globalInstance = null;\nimport ontoUnits from '../res/data/ontology/units.onto';\nconst ONTOLOGY_SOURCE = {\n    'units': ontoUnits,\n};\nexport class OntologyTree {\n    static get main() { return globalInstance; }\n    static getOntologyKeys() { return Object.keys(ONTOLOGY_SOURCE); }\n    static getOntologyData(key) { return ONTOLOGY_SOURCE[key]; }\n    constructor() {\n        this.roots = [];\n        this.mapTerms = new Map();\n        this.alreadyLoaded = new Set();\n    }\n    static init() {\n        if (globalInstance)\n            return;\n        globalInstance = new OntologyTree();\n        for (let key of this.getOntologyKeys()) {\n            globalInstance.loadFromString(key, this.getOntologyData(key));\n        }\n    }\n    getRoots() {\n        return this.roots;\n    }\n    hasTerm(uri) { return this.mapTerms.has(uri); }\n    getBranch(uri) {\n        return this.mapTerms.get(uri);\n    }\n    getBranchList(root) {\n        if (typeof root == 'string') {\n            let look = this.mapTerms.get(root);\n            if (!look)\n                throw `Unknown branch URI: ${root}`;\n            if (look.length > 1)\n                throw `Ambiguous branch URI occurs more than once: ${root}`;\n            root = look[0];\n        }\n        let list = [];\n        let accumulate = (branch) => {\n            list.push(branch);\n            for (let child of Vec.safeArray(branch.children))\n                accumulate(child);\n        };\n        accumulate(root);\n        return list;\n    }\n    loadFromString(key, text) {\n        if (this.alreadyLoaded.has(key))\n            return;\n        this.alreadyLoaded.add(key);\n        this.loadContent(text);\n    }\n    loadContent(text) {\n        let termList = [];\n        let pos = 0;\n        for (let line of text.split(/\\n/)) {\n            pos++;\n            line = line.trim();\n            if (!line || line.startsWith('#'))\n                continue;\n            let idx = line.indexOf('http');\n            if (idx < 0)\n                throw `Line ${pos} invalid, no URI term: ${line}`;\n            let depth = 0;\n            for (let n = 0; n < idx; n++)\n                if (line.charAt(n) == '-')\n                    depth++;\n            let uri = line.substring(idx);\n            idx = uri.indexOf(' ');\n            if (idx < 0)\n                throw `Line ${pos} invalid, no label: ${line}`;\n            let label = uri.substring(idx + 1);\n            uri = uri.substring(0, idx);\n            let term = null;\n            if (depth == 0)\n                term = this.roots.find((look) => look.uri == uri);\n            if (!term) {\n                term = { uri, label, 'parent': null, 'children': [], depth };\n                if (depth == 0)\n                    this.roots.push(term);\n                else {\n                    for (let n = termList.length - 1; n >= 0; n--)\n                        if (termList[n].depth == depth - 1) {\n                            term.parent = termList[n];\n                            termList[n].children.push(term);\n                            break;\n                        }\n                    if (!term.parent)\n                        throw `Line ${pos} invalid hierarchy, no parent found`;\n                }\n                let list = this.mapTerms.get(uri);\n                if (list)\n                    list.push(term);\n                else\n                    this.mapTerms.set(uri, [term]);\n            }\n            termList.push(term);\n        }\n    }\n    debugString(term) {\n        let lines = [];\n        let emit = (term) => {\n            lines.push('* '.repeat(term.depth) + `<${term.uri}> \"${term.label}\"`);\n            for (let child of term.children)\n                emit(child);\n        };\n        emit(term);\n        return lines.join('\\n');\n    }\n}\n//# sourceMappingURL=OntologyTree.js.map","export default \"http://purl.obolibrary.org/obo/UO_0000000 units\\n- http://purl.obolibrary.org/obo/UO_0000051 concentration units\\n- - http://www.bioassayontology.org/bao#BAO_0000102 -log10[mol/L]\\n- - http://purl.obolibrary.org/obo/UO_0000175 grams per litre (g/L)\\n- - http://www.bioassayontology.org/bao#BAO_0000101 log10[mol/L]\\n- - http://purl.obolibrary.org/obo/UO_0000275 micrograms per litre (ug/L)\\n- - http://purl.obolibrary.org/obo/UO_0000064 micromoles per litre (umol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000273 milligrams per litre (mg/L)\\n- - http://purl.obolibrary.org/obo/UO_0000063 millimoles per litre (mmol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000062 moles per litre (mol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000065 nanomoles per litre (nmol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000066 picomoles per litre (pmol/L)\\n- http://purl.obolibrary.org/obo/UO_0000186 dimensionless unit\\n- - http://www.bioassayontology.org/bao#BAO_0080023 binary (true/false)\\n- - http://purl.obolibrary.org/obo/UO_0000187 percent\";","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {Vec} from 'webmolkit/util/Vec';\n\n/*\n\tTry to arrange a list of boxes into a more rectangular pattern, which has a better ratio than stacking everything vertically.\n*/\n\nenum SquarePackingSpring\n{\n\tStrong = 0,\n\tMedium = 1,\n\tWeak = 2,\n}\n\ninterface SquarePackingCandidate\n{\n\tidxStart:number;\n\tsprings:SquarePackingSpring[];\n\tlayout?:Box[];\n\toutline?:Size;\n\tscore?:number; // lower is better\n\thash?:string;\n}\n\ninterface SquarePackingSegment\n{\n\ty:number;\n\tx1:number;\n\tx2:number;\n}\n\nexport class SquarePacking\n{\n\tpublic outline:Size;\n\tpublic layout:Box[] = null;\n\n\tprivate wantRatio:number;\n\n\t// --------------------- public methods ---------------------\n\n\t// sets up the object with the mandatory information\n\tconstructor(private packSize:Size, private boxes:Box[], private hspace:number, private vspace:number)\n\t{\n\t\tthis.wantRatio = packSize.w / packSize.h;\n\n\t\t/*\n\t\t// !! temporary validation\n\t\tlet segs:SquarePackingSegment[] =\n\t\t[\n\t\t\t{'y': 0, 'x1': 0, 'x2': 1},\n\t\t\t{'y': 2, 'x1': 1, 'x2': 3},\n\t\t\t{'y': 1, 'x1': 3, 'x2': Number.POSITIVE_INFINITY}\n\t\t];\n\t\tthis.mergeSegmentAbove(segs, {'y': 2.5, 'x1': 1.5, 'x2': 2.5});\n\t\t//this.mergeSegmentBelow(segs, {'y': -1.5, 'x1': 2, 'x2': 3.5});\n\t\tfor (let seg of segs) console.log(JSON.stringify(seg));\n\t\tthrow 'blork';*/\n\t}\n\n\t// carries out the arrangement: returns whether it got something good\n\tpublic pack():boolean\n\t{\n\t\tlet candidates:SquarePackingCandidate[] = [];\n\t\tlet num = this.boxes.length;\n\t\tfor (let n = 0; n < num; n++)\n\t\t{\n\t\t\tlet cand:SquarePackingCandidate = {idxStart: n, springs: Vec.anyArray(SquarePackingSpring.Weak, num)};\n\t\t\tcand.hash = cand.idxStart + '/' + cand.springs;\n\t\t\tthis.processCandidate(cand);\n\t\t\tcandidates.push(cand);\n\t\t}\n\n\t\tconst KEEP = 100;\n\t\tcandidates = candidates.sort((c1, c2) => c1.score - c2.score).slice(0, KEEP);\n\n\t\tfor (let sanity = 100; sanity > 0; sanity--)\n\t\t{\n\t\t\tlet hashes = new Set<string>();\n\t\t\tfor (let cand of candidates) hashes.add(cand.hash);\n\n\t\t\tlet batch = candidates.slice(0);\n\t\t\tfor (let cand of candidates) for (let n = 0; n < num; n++) if (n != cand.idxStart)\n\t\t\t{\n\t\t\t\tfor (let sp of [SquarePackingSpring.Strong, SquarePackingSpring.Medium, SquarePackingSpring.Weak]) if (cand.springs[n] != sp)\n\t\t\t\t{\n\t\t\t\t\tlet mod:SquarePackingCandidate = {idxStart: cand.idxStart, springs: cand.springs.slice(0)};\n\t\t\t\t\tmod.springs[n] = sp;\n\t\t\t\t\tmod.hash = mod.idxStart + '/' + mod.springs;\n\t\t\t\t\tif (hashes.has(mod.hash)) continue;\n\t\t\t\t\tthis.processCandidate(mod);\n\t\t\t\t\tbatch.push(mod);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbatch = batch.sort((c1, c2) => c1.score - c2.score).slice(0, KEEP);\n\n\t\t\tlet same = true;\n\t\t\tfor (let n = 0; n < candidates.length && n < batch.length; n++) if (candidates[n].hash != batch[n].hash) {same = false; break;}\n\n\t\t\tif (!same) break;\n\n\t\t\tcandidates = batch;\n\t\t}\n\n\t\tlet best = candidates[0];\n\n\t\tthis.outline = best.outline;\n\t\tthis.layout = best.layout;\n\t\tlet minY = Vec.min(this.layout.map((b) => b.y));\n\t\tfor (let box of this.layout) box.y -= minY;\n\n\t\treturn true;\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\tprivate processCandidate(cand:SquarePackingCandidate):void\n\t{\n\t\tlet len = this.boxes.length;\n\t\tcand.layout = this.boxes.map((box) => new Box(0, 0, box.w, box.h));\n\t\tlet placed = Vec.booleanArray(false, len);\n\t\tplaced[cand.idxStart] = true;\n\n\t\tlet placeAbove = (idx:number, spring:SquarePackingSpring):void =>\n\t\t{\n\t\t\tlet box = cand.layout[idx];\n\t\t\tlet segs:SquarePackingSegment[] = null;\n\t\t\tfor (let n = idx + 1; n < len; n++) if (placed[n])\n\t\t\t{\n\t\t\t\tlet ref = cand.layout[n];\n\t\t\t\tlet newsegs:SquarePackingSegment[] = [];\n\t\t\t\tif (ref.minX() > 0) newsegs.push({y: ref.midY() - this.vspace, x1: 0, x2: ref.minX() - this.hspace});\n\t\t\t\tnewsegs.push({y: ref.minY() - this.vspace, x1: Math.max(0, ref.minX() - this.hspace), x2: ref.maxX() + this.hspace});\n\t\t\t\tnewsegs.push({y: ref.minY() - this.vspace + 0.5 * box.h, x1: ref.maxX() + this.hspace, x2: Number.POSITIVE_INFINITY});\n\t\t\t\tif (segs == null) segs = newsegs;\n\t\t\t\telse for (let nseg of newsegs) this.mergeSegmentAbove(segs, nseg);\n\t\t\t}\n\n\t\t\tlet bestX = 0, bestY = Number.NEGATIVE_INFINITY;\n\t\t\tfor (let n = 0; n < segs.length; n++)\n\t\t\t{\n\t\t\t\tlet x = segs[n].x1, y = Number.POSITIVE_INFINITY;\n\t\t\t\tfor (let i = n; i < segs.length; i++)\n\t\t\t\t{\n\t\t\t\t\ty = Math.min(y, segs[i].y);\n\t\t\t\t\tif (box.w < segs[i].x2 - x) break;\n\t\t\t\t}\n\t\t\t\tif (y > bestY) [bestX, bestY] = [x, y];\n\t\t\t\tif (spring == SquarePackingSpring.Strong) break;\n\t\t\t\tif (spring == SquarePackingSpring.Medium && x > 0.5 * this.packSize.w) break;\n\t\t\t}\n\t\t\tbox.x = bestX;\n\t\t\tbox.y = bestY - box.h;\n\t\t\tplaced[idx] = true;\n\t\t};\n\t\tlet placeBelow = (idx:number, spring:SquarePackingSpring):void =>\n\t\t{\n\t\t\tlet box = cand.layout[idx];\n\t\t\tlet segs:SquarePackingSegment[] = null;\n\t\t\tfor (let n = idx - 1; n >= 0; n--) if (placed[n])\n\t\t\t{\n\t\t\t\tlet ref = cand.layout[n];\n\t\t\t\tlet newsegs:SquarePackingSegment[] = [];\n\t\t\t\tif (ref.minX() > 0) newsegs.push({y: ref.midY() + this.vspace, x1: 0, x2: ref.minX() - this.hspace});\n\t\t\t\tnewsegs.push({y: ref.maxY() + this.vspace, x1: Math.max(0, ref.minX() - this.hspace), x2: ref.maxX() + this.hspace});\n\t\t\t\tnewsegs.push({y: ref.maxY() + this.vspace - 0.5 * box.h, x1: ref.maxX() + this.hspace, x2: Number.POSITIVE_INFINITY});\n\t\t\t\tif (segs == null) segs = newsegs;\n\t\t\t\telse for (let nseg of newsegs) this.mergeSegmentBelow(segs, nseg);\n\t\t\t}\n\n\t\t\tlet bestX = 0, bestY = Number.POSITIVE_INFINITY;\n\t\t\tfor (let n = 0; n < segs.length; n++)\n\t\t\t{\n\t\t\t\tlet x = segs[n].x1, y = Number.NEGATIVE_INFINITY;\n\t\t\t\tfor (let i = n; i < segs.length; i++)\n\t\t\t\t{\n\t\t\t\t\ty = Math.max(y, segs[i].y);\n\t\t\t\t\tif (box.w < segs[i].x2 - x) break;\n\t\t\t\t}\n\t\t\t\tif (y < bestY) [bestX, bestY] = [x, y];\n\t\t\t\tif (spring == SquarePackingSpring.Strong) break;\n\t\t\t\tif (spring == SquarePackingSpring.Medium && x > 0.5 * this.packSize.w) break;\n\t\t\t}\n\t\t\tbox.x = bestX;\n\t\t\tbox.y = bestY;\n\t\t\tplaced[idx] = true;\n\t\t};\n\n\t\tfor (let d = 1; d < len; d++)\n\t\t{\n\t\t\tlet i1 = cand.idxStart - d, i2 = cand.idxStart + d;\n\t\t\tif (i1 >= 0) placeAbove(i1, cand.springs[i1]);\n\t\t\tif (i2 < len) placeBelow(i2, cand.springs[i2]);\n\t\t}\n\n\t\tlet loX = 0, hiX = Vec.max(cand.layout.map((box) => box.maxX()));\n\t\tlet loY = Vec.min(cand.layout.map((box) => box.minY())), hiY = Vec.max(cand.layout.map((box) => box.maxY()));\n\t\tcand.outline = new Size(hiX - loX, hiY - loY);\n\t\tlet ratio = cand.outline.w / cand.outline.h;\n\t\tcand.score = Math.abs(ratio - this.wantRatio) * (cand.outline.w + cand.outline.h);\n\t\tcand.score += Vec.sum((cand.layout.map((box) => box.x)));\n\t\tfor (let n = 0; n < cand.layout.length - 1; n++) cand.score += Math.max(0, cand.layout[n].minY() - cand.layout[n].maxY());\n\t}\n\n\tprivate mergeSegmentAbove(segs:SquarePackingSegment[], merge:SquarePackingSegment):void\n\t{\n\t\tfor (let look of segs)\n\t\t{\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2 && merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) return; // completely buried\n\t\t\t\tsegs.push({y: look.y, x1: merge.x2, x2: look.x2});\n\t\t\t\tlook.x2 = merge.x1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) look.x2 = merge.x1; else merge.x1 = look.x2;\n\t\t\t}\n\t\t\tif (merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) look.x1 = merge.x2; else merge.x2 = look.x1;\n\t\t\t}\n\t\t}\n\t\tfor (let n = segs.length - 1; n >= 0; n--) if (segs[n].x1 >= segs[n].x2) segs.splice(n, 1);\n\t\tif (merge.x1 < merge.x2)\n\t\t{\n\t\t\tsegs.push(merge);\n\t\t\tsegs.sort((seg1, seg2) => seg1.x1 - seg2.x1);\n\t\t}\n\t}\n\tprivate mergeSegmentBelow(segs:SquarePackingSegment[], merge:SquarePackingSegment):void\n\t{\n\t\tfor (let look of segs)\n\t\t{\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2 && merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) return; // completely buried\n\t\t\t\tsegs.push({y: look.y, x1: merge.x2, x2: look.x2});\n\t\t\t\tlook.x2 = merge.x1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) look.x2 = merge.x1; else merge.x1 = look.x2;\n\t\t\t}\n\t\t\tif (merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) look.x1 = merge.x2; else merge.x2 = look.x1;\n\t\t\t}\n\t\t}\n\t\tfor (let n = segs.length - 1; n >= 0; n--) if (segs[n].x1 >= segs[n].x2) segs.splice(n, 1);\n\t\tif (merge.x1 < merge.x2)\n\t\t{\n\t\t\tsegs.push(merge);\n\t\t\tsegs.sort((seg1, seg2) => seg1.x1 - seg2.x1);\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {ArrangeMolecule} from 'webmolkit/gfx/ArrangeMolecule';\nimport {ArrangeMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MoleculeStream} from 'webmolkit/io/MoleculeStream';\nimport {formatDouble} from 'webmolkit/util/util';\nimport {OntologyTree} from 'webmolkit/data/OntologyTree';\nimport {SquarePacking} from './SquarePacking';\nimport {FontData} from 'webmolkit/gfx/FontData';\nimport {MixfileComponent} from './Mixfile';\nimport {NormMixture} from './NormMixture';\nimport {Mixture} from './Mixture';\n\n/*\n\tArranging a Mixfile: will create a tree layout for all of the components, according to parameters.\n*/\n\nexport enum ArrangeMixtureLineSource\n{\n\tName,\n\tQuantity,\n\tIdentifier,\n\tMeta,\n}\n\nexport interface ArrangeMixtureLine\n{\n\ttext:string;\n\tcol:number;\n\tsource:ArrangeMixtureLineSource;\n}\n\nexport interface ArrangeMixtureComponent\n{\n\torigin:number[];\n\tcontent:MixfileComponent;\n\tparentIdx:number;\n\n\tboundary?:Box; // outer boundary (position on canvas)\n\n\tmol?:Molecule;\n\tmolLayout?:ArrangeMolecule;\n\tmolBox?:Box;\n\n\tnameBox?:Box;\n\tnameLines?:ArrangeMixtureLine[];\n\tfontSize?:number;\n\n\toutline?:Box; // inner boundary (surrounds molecule, names, etc.)\n\n\tisCollapsed?:boolean;\n\tcollapseBox?:Box;\n}\n\nconst PADDING = 0.25;\nconst VSPACE = 0.5;\nconst HSPACE = 1;\nconst COLLAPSE_SIZE = 0.3;\nconst COLLAPSE_GAP = 0.05;\n\nexport class ArrangeMixture\n{\n\tpublic norm:NormMixture = null; // optional: contents may be used for additional decoration\n\n\tpublic scale:number;\n\tpublic nameFontSize:number;\n\tpublic width = 0;\n\tpublic height = 0;\n\n\tpublic components:ArrangeMixtureComponent[] = [];\n\n\t// parameters to influence the drawing\n\tpublic limitStructW:number;\n\tpublic limitStructH:number;\n\tpublic minBoxSize:Size = null;\n\tpublic showCollapsors = false; // if true, boxes for [+]/[-] will be created for interactive use\n\tpublic collapsedBranches:number[][] = []; // any origin specified in this list will not display its children\n\tpublic packBranches:Size = null; // if defined, makes an effort to pack branches into the box size\n\tpublic hardwrapName:number; // name width guaranteed not longer than this\n\tpublic softwrapName:number; // name wrapping at selected characters kicks in after this width\n\tpublic includeIdentifiers = true; // if switched off, identifiers won't be included in text\n\n\t// --------------------- public methods ---------------------\n\n\t// sets up the object with the mandatory information\n\tconstructor(public mixture:Mixture, public measure:ArrangeMeasurement, public policy:RenderPolicy)\n\t{\n\t\tthis.scale = policy.data.pointScale;\n\t\tthis.nameFontSize = 0.5 * this.scale;\n\t\tthis.limitStructW = this.limitStructH = this.scale * 10;\n\t\tthis.hardwrapName = 12 * this.scale;\n\t\tthis.softwrapName = 8 * this.scale;\n\t}\n\n\t// carries out the arrangement\n\tpublic arrange():void\n\t{\n\t\tthis.createComponents();\n\t\tthis.layoutSubComponents(0);\n\t\tthis.contractComponents();\n\n\t\t// normalize boundaries\n\t\tlet outline:Box = null;\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tif (outline) outline = outline.union(comp.boundary); else outline = comp.boundary;\n\t\t}\n\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tcomp.boundary.x -= outline.x;\n\t\t\tcomp.boundary.y -= outline.y;\n\n\t\t\tif (comp.molLayout)\n\t\t\t{\n\t\t\t\tlet b1 = comp.boundary, b2 = comp.molBox;\n\t\t\t\tcomp.molLayout.squeezeInto(b1.x + b2.x, b1.y + b2.y, b2.w, b2.h);\n\t\t\t}\n\t\t}\n\t\tthis.width = outline.w;\n\t\tthis.height = outline.h;\n\t}\n\n\t// resize the whole thing\n\tpublic scaleComponents(modScale:number):void\n\t{\n\t\tif (modScale == 1) return;\n\n\t\tthis.scale *= modScale;\n\t\tthis.width *= modScale;\n\t\tthis.height *= modScale;\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tcomp.boundary.scaleBy(modScale);\n\t\t\tcomp.outline.scaleBy(modScale);\n\t\t\tif (comp.molBox)\n\t\t\t{\n\t\t\t\tcomp.molBox.scaleBy(modScale);\n\t\t\t\tif (comp.molLayout)\n\t\t\t\t{\n\t\t\t\t\tlet mx = comp.boundary.x + comp.molBox.x, my = comp.boundary.y + comp.molBox.y;\n\t\t\t\t\tcomp.molLayout.squeezeInto(mx, my, comp.molBox.w, comp.molBox.h);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (comp.nameBox) comp.nameBox.scaleBy(modScale);\n\t\t\tif (comp.collapseBox) comp.collapseBox.scaleBy(modScale);\n\t\t\tcomp.fontSize *= modScale;\n\t\t}\n\t}\n\n\t// returns the index of the indicated origin vector, or -1 if not present\n\tpublic findComponent(origin:number[]):number\n\t{\n\t\tfor (let n = 0; n < this.components.length; n++) if (Vec.equals(this.components[n].origin, origin)) return n;\n\t\treturn -1;\n\t}\n\n\t// turn quantity info into a readable string\n\tpublic static formatQuantity(mixcomp:MixfileComponent):string\n\t{\n\t\tlet prec = (val:number):string =>\n\t\t{\n\t\t\tif (val == null) return '';\n\t\t\tif (val > 10000) return Math.round(val).toString();\n\t\t\tlet str = val.toPrecision(6);\n\t\t\tif (str.indexOf('e') >= 0 || str.indexOf('.') < 0) return str;\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tif (str.endsWith('0')) str = str.substring(0, str.length - 1);\n\t\t\t\telse if (str.endsWith('.')) {str = str.substring(0, str.length - 1); break;}\n\t\t\t\telse break;\n\t\t\t}\n\t\t\treturn str;\n\t\t};\n\n\t\tif (mixcomp.ratio)\n\t\t{\n\t\t\tif (mixcomp.ratio.length == 2) return prec(mixcomp.ratio[0]) + '/' + prec(mixcomp.ratio[1]);\n\t\t\treturn null; // invalid ratio\n\t\t}\n\n\t\tif (mixcomp.quantity == null) return null;\n\n\t\tlet str = '';\n\t\tif (mixcomp.relation && mixcomp.relation != '=')\n\t\t{\n\t\t\tlet rel = mixcomp.relation;\n\t\t\tif (rel == '>=') rel = '\\u{2265}'; else if (rel == '<=') rel = '\\u{2264}';\n\t\t\tstr += rel /*+ ' '*/;\n\t\t}\n\t\tif (mixcomp.quantity instanceof Array)\n\t\t{\n\t\t\tif (mixcomp.quantity.length == 0) return;\n\t\t\tstr += prec(mixcomp.quantity[0]);\n\t\t\tif (mixcomp.quantity.length >= 2) str += ' - ' + prec(mixcomp.quantity[1]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr += prec(mixcomp.quantity); // is presumed to be scalar\n\t\t\tif (mixcomp.error)\n\t\t\t{\n\t\t\t\t// TODO: match the significant figures more carefully\n\t\t\t\tstr += ' \\u{00B1} ' + prec(mixcomp.error);\n\t\t\t}\n\t\t}\n\n\t\tif (mixcomp.units)\n\t\t{\n\t\t\tif (!mixcomp.units.startsWith('%')) str += ' ';\n\t\t\tstr += mixcomp.units;\n\t\t}\n\n\t\treturn str;\n\t}\n\n\t// if the component has a \"standardised\" quantity, format and return\n\tprivate formatNormQuantity(origin:number[]):string\n\t{\n\t\tif (!this.norm) return;\n\t\tlet note = this.norm.findNote(origin);\n\t\tif (!note || !note.concQuantity) return;\n\n\t\tlet comp:MixfileComponent =\n\t\t{\n\t\t\tquantity: note.concQuantity,\n\t\t\terror: note.concError,\n\t\t\tunits: note.concUnits,\n\t\t\trelation: note.concRelation,\n\t\t};\n\t\treturn ArrangeMixture.formatQuantity(comp);\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\t// instantiate each component in the diagram (which includes pluses and arrows)\n\tprivate createComponents():void\n\t{\n\t\t// assemble the components into a flat hierarchy\n\t\tlet examineBranch = (origin:number[], mixcomp:MixfileComponent, idx:number):void =>\n\t\t{\n\t\t\tlet comp:ArrangeMixtureComponent = {origin: origin, content: mixcomp, parentIdx: idx};\n\t\t\tlet parentIdx = this.components.push(comp) - 1;\n\n\t\t\t// see if it's been indicated as collapsed\n\t\t\tcomp.isCollapsed = false;\n\t\t\tfor (let origin of this.collapsedBranches) if (Vec.equals(origin, comp.origin)) comp.isCollapsed = true;\n\n\t\t\tif (mixcomp.contents && !comp.isCollapsed) for (let n = 0; n < mixcomp.contents.length; n++)\n\t\t\t{\n\t\t\t\tlet subOrigin = Vec.append(origin, n);\n\t\t\t\texamineBranch(subOrigin, mixcomp.contents[n], parentIdx);\n\t\t\t}\n\t\t};\n\t\texamineBranch([], this.mixture.mixfile, -1);\n\n\t\tlet padding = PADDING * this.scale;\n\n\t\t// do the sizing for each component\n\t\tfor (let [idx, comp] of this.components.entries())\n\t\t{\n\t\t\tlet mixcomp = comp.content;\n\n\t\t\t// handle molecule, if any\n\t\t\tif (mixcomp.molfile) comp.mol = MoleculeStream.readUnknown(mixcomp.molfile);\n\t\t\tif (comp.mol)\n\t\t\t{\n\t\t\t\tcomp.molLayout = new ArrangeMolecule(comp.mol, this.measure, this.policy);\n\t\t\t\tcomp.molLayout.arrange();\n\t\t\t\tcomp.molLayout.squeezeInto(0, 0, this.limitStructW, this.limitStructH);\n\t\t\t\tlet bounds = comp.molLayout.determineBoundary();\n\t\t\t\tcomp.molBox = new Box(padding, padding, Math.ceil(bounds[2] - bounds[0]), Math.ceil(bounds[3] - bounds[1]));\n\t\t\t}\n\t\t\telse comp.molBox = Box.zero();\n\n\t\t\t// handle name, or other content needing representation\n\t\t\tcomp.nameLines = [];\n\t\t\tif (mixcomp.name) this.wrapSplitName(comp.nameLines, mixcomp.name, 0x000000, ArrangeMixtureLineSource.Name);\n\n\t\t\t// (... synonyms, and linewrapping ...)\n\t\t\tlet qline = ArrangeMixture.formatQuantity(mixcomp);\n\t\t\tif (qline) comp.nameLines.push({text: qline, col: 0x000000, source: ArrangeMixtureLineSource.Quantity});\n\n\t\t\tqline = this.formatNormQuantity(comp.origin);\n\t\t\tif (qline) comp.nameLines.push({text: `(${qline})`, col: 0x808080, source: ArrangeMixtureLineSource.Quantity});\n\n\t\t\tif (this.includeIdentifiers && mixcomp.identifiers) for (let key in mixcomp.identifiers)\n\t\t\t{\n\t\t\t\tlet line = key + ' ';\n\t\t\t\tlet val = mixcomp.identifiers[key];\n\t\t\t\tif (val instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tfor (let n = 0; n < val.length; n++) line += (n == 0 ? '' : ', ') + val[n];\n\t\t\t\t}\n\t\t\t\telse line += val;\n\t\t\t\tcomp.nameLines.push({text: this.truncateEllipsis(line), col: 0x42007E, source: ArrangeMixtureLineSource.Identifier});\n\t\t\t}\n\t\t\tif (mixcomp.metadata) for (let meta of mixcomp.metadata)\n\t\t\t{\n\t\t\t\tlet metaString = (m:string | number):string =>\n\t\t\t\t{\n\t\t\t\t\tif (typeof m == 'number') return formatDouble(m, 4);\n\t\t\t\t\tif (!OntologyTree.main) return m;\n\t\t\t\t\tlet branch = OntologyTree.main.getBranch(m);\n\t\t\t\t\tif (Vec.notBlank(branch)) return branch[0].label;\n\t\t\t\t\treturn m;\n\t\t\t\t};\n\t\t\t\tlet bits:string[] = [];\n\t\t\t\tif (Array.isArray(meta)) bits = meta.map((m) => metaString(m)); else bits = [metaString(meta as string | number)];\n\t\t\t\tcomp.nameLines.push({text: bits.join(' '), col: 0x002B88, source: ArrangeMixtureLineSource.Meta});\n\t\t\t}\n\n\t\t\tcomp.nameBox = new Box(padding, padding);\n\t\t\tcomp.fontSize = this.nameFontSize;\n\t\t\tfor (let n = 0; n < comp.nameLines.length; n++)\n\t\t\t{\n\t\t\t\tlet wad = this.measure.measureText(comp.nameLines[n].text, comp.fontSize);\n\t\t\t\tcomp.nameBox.w = Math.max(comp.nameBox.w, wad[0]);\n\t\t\t\tcomp.nameBox.h += wad[1] + (n > 0 ? wad[2] * 2 : 0);\n\t\t\t}\n\n\t\t\tcomp.outline = Box.zero();\n\t\t\tcomp.outline.w = Math.max(comp.molBox.w, comp.nameBox.w) + 2 * padding;\n\t\t\tcomp.outline.h = comp.molBox.h + comp.nameBox.h + 2 * padding;\n\t\t\tif (comp.molBox.notEmpty() && comp.nameBox.notEmpty())\n\t\t\t{\n\t\t\t\tcomp.outline.h += padding;\n\t\t\t\tcomp.nameBox.y += comp.molBox.h + padding;\n\t\t\t\tcomp.molBox.w = comp.nameBox.w = Math.max(comp.molBox.w, comp.nameBox.w);\n\t\t\t}\n\n\t\t\tif (this.minBoxSize)\n\t\t\t{\n\t\t\t\tlet minsz = this.minBoxSize;\n\t\t\t\tlet dw = minsz.w - comp.outline.w, dh = minsz.h - comp.outline.h;\n\t\t\t\tif (dw > 0)\n\t\t\t\t{\n\t\t\t\t\tcomp.outline.w += dw;\n\t\t\t\t\tcomp.molBox.w += dw;\n\t\t\t\t}\n\t\t\t\tif (dh > 0)\n\t\t\t\t{\n\t\t\t\t\tcomp.outline.h += dh;\n\t\t\t\t\tcomp.molBox.h += dh;\n\t\t\t\t\tcomp.nameBox.y += dh;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcomp.boundary = comp.outline.clone();\n\n\t\t\tif ((this.showCollapsors || comp.isCollapsed) && Vec.notBlank(comp.content.contents))\n\t\t\t{\n\t\t\t\tlet gap = COLLAPSE_GAP * this.scale, wh = COLLAPSE_SIZE * this.scale;\n\t\t\t\tcomp.collapseBox = new Box(comp.boundary.maxX() + gap, comp.boundary.midY() - 0.5 * wh, wh, wh);\n\t\t\t\tcomp.boundary.w += gap + wh;\n\t\t\t}\n\t\t}\n\t}\n\n\t// arranges all of the subcomponents for a given index, positioning them relative to the current position; returns the indices of\n\t// the entire branch, for subsequent touchup\n\tprivate layoutSubComponents(idx:number):number[]\n\t{\n\t\tlet wholeBranch:number[] = [idx];\n\t\tlet branchBlock:number[][] = [];\n\t\tlet branchBox:Box[] = [];\n\n\t\tlet totalWidth = 0, totalHeight = 0;\n\n\t\tfor (let n = idx + 1; n < this.components.length; n++)\n\t\t{\n\t\t\tlet comp = this.components[n];\n\t\t\tif (comp.parentIdx != idx) continue;\n\n\t\t\tlet branch = this.layoutSubComponents(n);\n\t\t\tif (branch.length == 0) continue;\n\n\t\t\tlet box:Box = null;\n\t\t\tfor (let i of branch)\n\t\t\t{\n\t\t\t\twholeBranch.push(i);\n\t\t\t\tlet bound = this.components[i].boundary;\n\t\t\t\tif (box) box = box.union(bound); else box = bound;\n\t\t\t}\n\n\t\t\tbranchBlock.push(branch);\n\t\t\tbranchBox.push(box);\n\n\t\t\ttotalWidth = Math.max(totalWidth, box.w);\n\t\t\ttotalHeight += box.h;\n\t\t}\n\t\tif (branchBlock.length == 0) return wholeBranch;\n\n\t\tlet hspace = HSPACE * this.scale, vspace = VSPACE * this.scale;\n\t\ttotalHeight += vspace * (branchBlock.length - 1);\n\n\t\tlet cbox = this.components[idx].boundary;\n\t\tlet x = cbox.maxX() + hspace;\n\n\t\t// special case: may try to pack the boxes into a smaller area rather than vertically on top of each other\n\t\tif (this.packBranches && branchBlock.length > 2 && totalHeight > this.packBranches.h)\n\t\t{\n\t\t\tlet packSize = this.packBranches.clone();\n\t\t\tfor (let box of branchBox) packSize.h = Math.max(packSize.h, box.h); // if a sub-box is bigger than overall, no need to limit it further\n\n\t\t\tlet sq = new SquarePacking(packSize, branchBox, /*hspace*/ vspace, vspace);\n\t\t\tif (sq.pack())\n\t\t\t{\n\t\t\t\tlet y = cbox.midY() - 0.5 * sq.outline.h;\n\t\t\t\tfor (let n = 0; n < branchBlock.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet box = sq.layout[n];\n\t\t\t\t\tlet dx = x - branchBox[n].x + box.x, dy = y - branchBox[n].y + box.y;\n\t\t\t\t\tfor (let i of branchBlock[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.components[i].boundary.x += dx;\n\t\t\t\t\t\tthis.components[i].boundary.y += dy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn wholeBranch;\n\t\t\t}\n\t\t}\n\n\t\t// !! note: not guaranteed that x is high enough to not interfere with other boxes; will need a post-check of some kind, maybe here,\n\t\t//    maybe further down the line\n\n\t\tlet y = cbox.midY() - 0.5 * totalHeight;\n\t\tfor (let n = 0; n < branchBlock.length; n++)\n\t\t{\n\t\t\tlet dx = x - branchBox[n].x, dy = y - branchBox[n].y;\n\t\t\tfor (let i of branchBlock[n])\n\t\t\t{\n\t\t\t\tthis.components[i].boundary.x += dx;\n\t\t\t\tthis.components[i].boundary.y += dy;\n\t\t\t}\n\t\t\ty += branchBox[n].h + vspace;\n\t\t}\n\n\t\treturn wholeBranch;\n\t}\n\n\t// component layout is done, but may be able to \"reel in\" some of the branches to make it smaller\n\tprivate contractComponents():void\n\t{\n\t\tlet allChildren:number[][] = [];\n\t\tfor (let n = 0; n < this.components.length; n++)\n\t\t{\n\t\t\tallChildren.push([]);\n\t\t\tfor (let idx = this.components[n].parentIdx; idx >= 0; idx = this.components[idx].parentIdx) allChildren[idx].push(n);\n\t\t}\n\n\t\tlet hspace = HSPACE * this.scale, padding = PADDING * this.scale;\n\n\t\twhile (true)\n\t\t{\n\t\t\tlet anything = false;\n\n\t\t\tfor (let n = 1; n < allChildren.length; n++)\n\t\t\t{\n\t\t\t\tlet pidx = this.components[n].parentIdx;\n\t\t\t\tlet boundX = this.components[pidx].boundary.maxX() + hspace;\n\t\t\t\tlet dx = this.components[n].boundary.minX() - boundX; // how far to move to the left\n\t\t\t\tif (dx < 1) continue; // no room to contract\n\n\t\t\t\tlet idxInside = [n, ...allChildren[n]];\n\t\t\t\tlet idxOutside = Vec.identity0(allChildren.length).filter((idx) => !idxInside.includes(idx));\n\n\t\t\t\tfor (let i of idxInside)\n\t\t\t\t{\n\t\t\t\t\tlet box1 = this.components[i].boundary.withGrow(padding, padding);\n\t\t\t\t\tfor (let j of idxOutside)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet box2 = this.components[j].boundary;\n\t\t\t\t\t\tif (box2.minX() > box1.maxX()) continue;\n\t\t\t\t\t\tif (box1.minY() > box2.maxY() || box1.maxY() < box2.minY()) continue;\n\n\t\t\t\t\t\tdx = Math.min(dx, box1.minX() - box2.maxX());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dx > 1)\n\t\t\t\t{\n\t\t\t\t\tfor (let n of idxInside) this.components[n].boundary.x -= dx;\n\t\t\t\t\tanything = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!anything) break;\n\t\t}\n\t}\n\n\t// if the given string is longer than the soft/hard limit, looks to break it up into smaller pieces; each of them is\n\t// appended to the list parameter\n\tprivate wrapSplitName(list:ArrangeMixtureLine[], text:string, col:number, source:ArrangeMixtureLineSource):void\n\t{\n\t\tif (!text) return;\n\t\tlet xpos = FontData.measureWidths(text, this.nameFontSize);\n\t\tif (Vec.last(xpos) <= this.softwrapName)\n\t\t{\n\t\t\tlist.push({text, col, source});\n\t\t\treturn;\n\t\t}\n\n\t\tlet p = 0;\n\t\tfor (; xpos[p] < this.softwrapName; p++) {}\n\t\tfor (; xpos[p] < this.hardwrapName; p++)\n\t\t{\n\t\t\tlet ch = text.charAt(p);\n\t\t\tif (' ,;-/'.includes(ch))\n\t\t\t{\n\t\t\t\tp++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlist.push({text: text.substring(0, p).trim(), col, source});\n\t\tthis.wrapSplitName(list, text.substring(p).trim(), col, source);\n\t}\n\n\t// if the line is longer than the hard wrap limit, just truncate with ellipsis\n\tprivate truncateEllipsis(txt:string):string\n\t{\n\t\tlet xpos = FontData.measureWidths(txt, this.nameFontSize);\n\t\tif (Vec.last(xpos) <= this.hardwrapName) return txt;\n\t\tlet ellipsis = '...', ellw = FontData.measureText(ellipsis, this.nameFontSize)[0];\n\t\tlet keep = 1;\n\t\tfor (; keep < txt.length; keep++) if (xpos[keep] + ellw > this.hardwrapName) break;\n\t\treturn txt.substring(0, keep) + ellipsis;\n\t}\n}\n\n","import { Box } from '../util/Geom';\nimport { colourAlpha, colourCanvas, colourCode, DEGRAD, newElement, pixelDensity } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { FontData } from './FontData';\nexport var TextAlign;\n(function (TextAlign) {\n    TextAlign[TextAlign[\"Centre\"] = 0] = \"Centre\";\n    TextAlign[TextAlign[\"Left\"] = 1] = \"Left\";\n    TextAlign[TextAlign[\"Right\"] = 2] = \"Right\";\n    TextAlign[TextAlign[\"Baseline\"] = 0] = \"Baseline\";\n    TextAlign[TextAlign[\"Middle\"] = 4] = \"Middle\";\n    TextAlign[TextAlign[\"Top\"] = 8] = \"Top\";\n    TextAlign[TextAlign[\"Bottom\"] = 16] = \"Bottom\";\n})(TextAlign || (TextAlign = {}));\nvar PrimClass;\n(function (PrimClass) {\n    PrimClass[PrimClass[\"Line\"] = 1] = \"Line\";\n    PrimClass[PrimClass[\"Rect\"] = 2] = \"Rect\";\n    PrimClass[PrimClass[\"Oval\"] = 3] = \"Oval\";\n    PrimClass[PrimClass[\"Path\"] = 4] = \"Path\";\n    PrimClass[PrimClass[\"Text\"] = 5] = \"Text\";\n    PrimClass[PrimClass[\"TextNative\"] = 6] = \"TextNative\";\n})(PrimClass || (PrimClass = {}));\nclass SpoolSVG {\n    constructor(prettyPrint) {\n        this.prettyPrint = prettyPrint;\n        this.lines = [];\n        this.depth = 0;\n    }\n    spool(str) { if ((str === null || str === void 0 ? void 0 : str.length) > 0)\n        this.lines.push(str); }\n    start(str) {\n        if (this.prettyPrint && this.depth > 0)\n            this.lines.push('  '.repeat(this.depth));\n        this.spool(str);\n    }\n    stop(str) {\n        this.spool(str);\n        if (this.prettyPrint)\n            this.lines.push('\\n');\n    }\n    whole(str) {\n        if (this.prettyPrint && this.depth > 0)\n            this.lines.push('  '.repeat(this.depth));\n        this.spool(str);\n        if (this.prettyPrint)\n            this.lines.push('\\n');\n    }\n    attr(key, val) {\n        var _a;\n        if (typeof val == 'number') {\n            val = val.toFixed(4);\n            let match = (_a = /^(.*\\.\\d*?[1-9]+)0+$/.exec(val)) !== null && _a !== void 0 ? _a : /^(.*)\\.0+$/.exec(val);\n            if (match)\n                val = match[1];\n        }\n        this.spool(` ${key}=\"${val}\"`);\n    }\n    inc() { this.depth++; }\n    dec() { this.depth--; }\n    toString() { return this.lines.join(''); }\n}\nclass MetaVector {\n    constructor(vec) {\n        this.types = [];\n        this.prims = [];\n        this.width = 0;\n        this.height = 0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.scale = 1;\n        this.density = 1;\n        this.charMissing = false;\n        this.lowX = null;\n        this.lowY = null;\n        this.highX = null;\n        this.highY = null;\n        const font = FontData.main;\n        this.charMask = Vec.booleanArray(false, font.UNICODE.length);\n        if (vec != null) {\n            if (vec.size != null) {\n                this.width = vec.size[0];\n                this.height = vec.size[1];\n            }\n            if (vec.types != null)\n                this.types = vec.types;\n            if (vec.prims != null)\n                this.prims = vec.prims;\n            for (let p of this.prims)\n                if (p.primClass == PrimClass.Text) {\n                    let { txt } = p;\n                    for (let n = 0; n < txt.length; n++) {\n                        let i = font.getIndex(txt.charAt(n));\n                        if (i >= 0)\n                            this.charMask[i] = true;\n                        else\n                            this.charMissing = true;\n                    }\n                }\n        }\n    }\n    drawLine(x1, y1, x2, y2, colour, thickness) {\n        if (thickness == null)\n            thickness = 1;\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Line, thickness, colour });\n        const bump = 0.5 * thickness;\n        this.updateBounds(Math.min(x1, x2) - bump, Math.min(y1, y2) - bump);\n        this.updateBounds(Math.max(x1, x2) + bump, Math.max(y1, y2) + bump);\n        this.prims.push({ primClass: PrimClass.Line, typeidx, x1, y1, x2, y2 });\n    }\n    drawRect(x, y, w, h, edgeCol, thickness, fillCol) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Rect, edgeCol, fillCol, thickness });\n        const bump = 0.5 * thickness;\n        this.updateBounds(x - bump, y - bump);\n        this.updateBounds(x + w + bump, y + h + bump);\n        this.prims.push({ primClass: PrimClass.Rect, typeidx, x, y, w, h });\n    }\n    drawOval(cx, cy, rw, rh, edgeCol, thickness, fillCol) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        const bump = 0.5 * thickness;\n        this.updateBounds(cx - rw - bump, cy - rh - bump);\n        this.updateBounds(cx + rw + bump, cy + rh + bump);\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Oval, edgeCol, fillCol, thickness });\n        this.prims.push({ primClass: PrimClass.Oval, typeidx, cx, cy, rw, rh });\n    }\n    drawPath(xpoints, ypoints, ctrlFlags, isClosed, edgeCol, thickness, fillCol, hardEdge) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        if (hardEdge == null)\n            hardEdge = false;\n        const bump = 0.5 * thickness;\n        for (let n = 0; n < xpoints.length; n++) {\n            this.updateBounds(xpoints[n] - bump, ypoints[n] - bump);\n            if (bump != 0)\n                this.updateBounds(xpoints[n] + bump, ypoints[n] + bump);\n        }\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Path, edgeCol, fillCol, thickness, hardEdge });\n        this.prims.push({ primClass: PrimClass.Path, typeidx, count: xpoints.length,\n            x: Vec.duplicate(xpoints), y: Vec.duplicate(ypoints), ctrl: ctrlFlags && [...ctrlFlags], closed: isClosed });\n    }\n    drawPoly(xpoints, ypoints, edgeCol, thickness, fillCol, hardEdge) {\n        this.drawPath(xpoints, ypoints, null, true, edgeCol, thickness, fillCol, hardEdge);\n    }\n    drawText(x, y, txt, size, colour, align, direction) {\n        if (align == null)\n            align = TextAlign.Left | TextAlign.Baseline;\n        if (direction == null)\n            direction = 0;\n        let cosTheta = 1, sinTheta = 0;\n        if (direction != 0)\n            [cosTheta, sinTheta] = [Math.cos(direction * DEGRAD), Math.sin(direction * DEGRAD)];\n        const font = FontData.main;\n        for (let n = 0; n < txt.length; n++) {\n            let i = font.getIndex(txt.charAt(n));\n            if (i >= 0)\n                this.charMask[i] = true;\n            else\n                this.charMissing = true;\n        }\n        let metrics = font.measureText(txt, size);\n        let bx = 0, by = 0;\n        let dx = 0;\n        if ((align & TextAlign.Left) != 0) { }\n        else if ((align & TextAlign.Right) != 0)\n            dx = -metrics[0];\n        else\n            dx = -0.5 * metrics[0];\n        if (dx != 0) {\n            bx += dx * cosTheta;\n            by += dx * sinTheta;\n        }\n        let dy = 0;\n        if ((align & TextAlign.Middle) != 0)\n            dy = 0.5 * metrics[1];\n        else if ((align & TextAlign.Top) != 0)\n            dy = metrics[1];\n        else if ((align & TextAlign.Bottom) != 0)\n            dy = -metrics[2];\n        if (dy != 0) {\n            bx -= dy * sinTheta;\n            by += dy * cosTheta;\n        }\n        let x1 = 0, y1 = 0, x2 = 0, y2 = 0;\n        let tx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            if (i >= 0) {\n                let outlineX = font.getOutlineX(i), outlineY = font.getOutlineY(i);\n                x1 = Math.min(x1, tx + Vec.min(outlineX));\n                x2 = Math.max(x2, tx + Vec.max(outlineX));\n                y1 = Math.min(y1, -Vec.max(outlineY));\n                y2 = Math.max(y2, -Vec.min(outlineY));\n                tx += font.HORIZ_ADV_X[i];\n                if (n < txt.length - 1)\n                    tx += font.getKerning(ch, txt.charAt(n + 1));\n            }\n            else\n                tx += font.MISSING_HORZ;\n        }\n        const mscale = size * font.INV_UNITS_PER_EM;\n        if (direction == 0) {\n            this.updateBounds(x + bx + x1 * mscale, y + by + y1 * mscale);\n            this.updateBounds(x + bx + x2 * mscale, y + by + y2 * mscale);\n        }\n        else {\n            let rx1 = x1 * mscale, ry1 = y1 * mscale;\n            let rx2 = x2 * mscale, ry2 = y2 * mscale;\n            this.updateBounds(x + bx + rx1 * cosTheta - ry1 * sinTheta, y + by + rx1 * sinTheta + ry1 * cosTheta);\n            this.updateBounds(x + bx + rx2 * cosTheta - ry1 * sinTheta, y + by + rx2 * sinTheta + ry1 * cosTheta);\n            this.updateBounds(x + bx + rx2 * cosTheta - ry2 * sinTheta, y + by + rx2 * sinTheta + ry2 * cosTheta);\n            this.updateBounds(x + bx + rx1 * cosTheta - ry2 * sinTheta, y + by + rx1 * sinTheta + ry2 * cosTheta);\n        }\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Text, size, colour });\n        this.prims.push({ primClass: PrimClass.Text, typeidx, x: x + bx, y: y + by, txt, direction });\n    }\n    drawTextNative(x, y, txt, fontFamily, fontSize, colour, align, opt) {\n        if (!opt)\n            opt = {};\n        if (align == null)\n            align = TextAlign.Left | TextAlign.Baseline;\n        const font = FontData.main;\n        let metrics = font.measureTextNative(txt, fontFamily, fontSize, opt);\n        if ((align & TextAlign.Left) != 0) { }\n        else if ((align & TextAlign.Right) != 0)\n            x -= metrics[0];\n        else\n            x -= 0.5 * metrics[0];\n        if ((align & TextAlign.Middle) != 0)\n            y += 0.5 * metrics[1];\n        else if ((align & TextAlign.Top) != 0)\n            y += metrics[1];\n        else if ((align & TextAlign.Bottom) != 0)\n            y -= metrics[2];\n        this.updateBounds(x, y - metrics[1]);\n        this.updateBounds(x + metrics[0], y + metrics[2]);\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.TextNative, family: fontFamily, size: fontSize, colour, opt });\n        this.prims.push({ primClass: PrimClass.TextNative, typeidx, x, y, txt });\n    }\n    boundLowX() { return this.lowX; }\n    boundLowY() { return this.lowY; }\n    boundHighX() { return this.highX; }\n    boundHighY() { return this.highY; }\n    getBounds() { return new Box(this.lowX, this.lowY, this.highX - this.lowX, this.highY - this.lowY); }\n    measure() {\n        this.width = Math.ceil(this.highX - this.lowX);\n        this.height = Math.ceil(this.highY - this.lowY);\n    }\n    normalise() {\n        if (this.lowX != 0 || this.lowY != 0)\n            this.transformPrimitives(-this.lowX, -this.lowY, 1, 1);\n        this.width = Math.ceil(this.highX - this.lowX);\n        this.height = Math.ceil(this.highY - this.lowY);\n    }\n    setSize(width, height) { this.width = width; this.height = height; }\n    transformIntoBox(box) {\n        this.transformPrimitives(-this.lowX, -this.lowY, 1, 1);\n        let nw = Math.ceil(this.highX - this.lowX), nh = Math.ceil(this.highY - this.lowY);\n        let scale = 1;\n        if (nw > box.w) {\n            let mod = box.w / nw;\n            nw = box.w;\n            nh *= mod;\n            scale *= mod;\n        }\n        if (nh > box.h) {\n            let mod = box.h / nh;\n            nh = box.h;\n            nw *= mod;\n            scale *= mod;\n        }\n        let ox = 0.5 * (box.w - nw), oy = 0.5 * (box.h - nh);\n        this.transformPrimitives(box.x + ox, box.y + oy, scale, scale);\n    }\n    scaleExtent(maxWidth, maxHeight) {\n        let w = this.highX - this.lowX, h = this.highY - this.lowY;\n        if (w <= maxWidth && h <= maxHeight)\n            return;\n        let scale = Math.min(maxWidth / w, maxHeight / h);\n        this.transformPrimitives(0, 0, scale, scale);\n    }\n    transformPrimitives(ox, oy, sw, sh) {\n        if (ox == 0 && oy == 0 && sw == 1 && sh == 1)\n            return;\n        for (let a of this.prims) {\n            const type = a.primClass;\n            if (type == PrimClass.Line) {\n                let line = a;\n                line.x1 = ox + line.x1 * sw;\n                line.y1 = oy + line.y1 * sh;\n                line.x2 = ox + line.x2 * sw;\n                line.y2 = oy + line.y2 * sh;\n            }\n            else if (type == PrimClass.Rect) {\n                let rect = a;\n                rect.x = ox + rect.x * sw;\n                rect.y = oy + rect.y * sh;\n                rect.w = rect.w * sw;\n                rect.h = rect.h * sh;\n            }\n            else if (type == PrimClass.Oval) {\n                let oval = a;\n                oval.cx = ox + oval.cx * sw;\n                oval.cy = oy + oval.cy * sh;\n                oval.rw *= sw;\n                oval.rh *= sh;\n            }\n            else if (type == PrimClass.Path) {\n                let path = a;\n                let sz = path.count, px = path.x, py = path.y;\n                for (let n = 0; n < sz; n++) {\n                    px[n] = ox + px[n] * sw;\n                    py[n] = oy + py[n] * sh;\n                }\n            }\n            else if (type == PrimClass.Text || type == PrimClass.TextNative) {\n                let text = a;\n                text.x = ox + text.x * sw;\n                text.y = oy + text.y * sh;\n            }\n        }\n        let swsh = 0.5 * (sw + sh);\n        if (swsh != 1)\n            for (let t of this.types) {\n                const type = t.primClass;\n                if (type == PrimClass.Line)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Rect)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Oval)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Path)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Text)\n                    t.size *= swsh;\n                else if (type == PrimClass.TextNative)\n                    t.size *= swsh;\n            }\n        this.lowX = ox + this.lowX * sw;\n        this.lowY = oy + this.lowY * sh;\n        this.highX = ox + this.highX * sw;\n        this.highY = oy + this.highY * sh;\n    }\n    renderInto(parent) {\n        let canvas = newElement(parent, 'canvas', { 'width': this.width, 'height': this.height });\n        this.renderCanvas(canvas);\n        return canvas;\n    }\n    renderCanvas(canvas, clearFirst) {\n        let ctx = canvas.getContext('2d');\n        if (clearFirst)\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n        let w = this.width, h = this.height;\n        this.density = pixelDensity();\n        canvas.style.width = w + 'px';\n        canvas.style.height = h + 'px';\n        canvas.width = w * this.density;\n        canvas.height = h * this.density;\n        this.renderContext(ctx);\n    }\n    renderContext(ctx) {\n        ctx.save();\n        ctx.scale(this.density, this.density);\n        this.typeObj = [];\n        for (let n = 0; n < this.types.length; n++) {\n            let t = this.types[n];\n            if (t.primClass == PrimClass.Line)\n                this.typeObj[n] = this.setupTypeLine(t);\n            else if (t.primClass == PrimClass.Rect)\n                this.typeObj[n] = this.setupTypeRect(t);\n            else if (t.primClass == PrimClass.Oval)\n                this.typeObj[n] = this.setupTypeOval(t);\n            else if (t.primClass == PrimClass.Path)\n                this.typeObj[n] = this.setupTypePath(t);\n            else if (t.primClass == PrimClass.Text)\n                this.typeObj[n] = this.setupTypeText(t);\n            else if (t.primClass == PrimClass.TextNative)\n                this.typeObj[n] = this.setupTypeTextNative(t);\n        }\n        for (let n = 0; n < this.prims.length; n++) {\n            let p = this.prims[n];\n            if (p.primClass == PrimClass.Line)\n                this.renderLine(ctx, p);\n            else if (p.primClass == PrimClass.Rect)\n                this.renderRect(ctx, p);\n            else if (p.primClass == PrimClass.Oval)\n                this.renderOval(ctx, p);\n            else if (p.primClass == PrimClass.Path)\n                this.renderPath(ctx, p);\n            else if (p.primClass == PrimClass.Text)\n                this.renderText(ctx, p);\n            else if (p.primClass == PrimClass.TextNative)\n                this.renderTextNative(ctx, p);\n        }\n        ctx.restore();\n    }\n    createSVG(prettyPrint = false, withXlink = false) {\n        let svg = new SpoolSVG(prettyPrint);\n        svg.start('<svg xmlns=\"http://www.w3.org/2000/svg\"');\n        if (withXlink)\n            svg.attr('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n        svg.attr('width', this.width);\n        svg.attr('height', this.height);\n        svg.attr('viewBox', `0 0 ${this.width} ${this.height}`);\n        svg.stop('>');\n        svg.inc();\n        this.renderSVG(svg, withXlink);\n        svg.dec();\n        svg.whole('</svg>');\n        return svg.toString();\n    }\n    renderSVG(svg, withXlink = false) {\n        this.typeObj = [];\n        const font = FontData.main;\n        svg.whole('<defs>');\n        svg.inc();\n        if (this.charMissing) {\n            svg.start('<path');\n            svg.attr('id', 'missing');\n            svg.attr('d', font.MISSING_DATA);\n            svg.attr('edge', 'none');\n            svg.stop('/>');\n        }\n        for (let n = 0; n < font.UNICODE.length; n++)\n            if (this.charMask[n]) {\n                svg.start('<path');\n                svg.attr('id', 'char' + n);\n                svg.attr('d', font.GLYPH_DATA[n]);\n                svg.attr('edge', 'none');\n                svg.stop('/>');\n            }\n        svg.dec();\n        svg.whole('</defs>');\n        for (let n = 0; n < this.types.length; n++) {\n            let t = this.types[n];\n            if (t.primClass == PrimClass.Line)\n                this.typeObj[n] = this.setupTypeLine(t);\n            else if (t.primClass == PrimClass.Rect)\n                this.typeObj[n] = this.setupTypeRect(t);\n            else if (t.primClass == PrimClass.Oval)\n                this.typeObj[n] = this.setupTypeOval(t);\n            else if (t.primClass == PrimClass.Path)\n                this.typeObj[n] = this.setupTypePath(t);\n            else if (t.primClass == PrimClass.Text)\n                this.typeObj[n] = this.setupTypeText(t);\n            else if (t.primClass == PrimClass.TextNative)\n                this.typeObj[n] = this.setupTypeTextNative(t);\n        }\n        for (let n = 0; n < this.prims.length;) {\n            let p = this.prims[n], num = 1;\n            if (p.primClass != PrimClass.Path && p.primClass != PrimClass.Text && p.primClass != PrimClass.TextNative) {\n                for (; n + num < this.prims.length; num++)\n                    if (this.prims[n + num].primClass != p.primClass || this.prims[n + num].typeidx != p.typeidx)\n                        break;\n            }\n            if (p.primClass == PrimClass.Line) {\n                if (num == 1)\n                    this.svgLine1(svg, p);\n                else\n                    this.svgLineN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Rect) {\n                if (num == 1)\n                    this.svgRect1(svg, p);\n                else\n                    this.svgRectN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Oval) {\n                if (num == 1)\n                    this.svgOval1(svg, p);\n                else\n                    this.svgOvalN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Path)\n                this.svgPath(svg, p);\n            else if (p.primClass == PrimClass.Text)\n                this.svgText(svg, p, withXlink);\n            else if (p.primClass == PrimClass.TextNative)\n                this.svgTextNative(svg, p);\n            n += num;\n        }\n    }\n    spool(into) {\n        for (let p of this.prims) {\n            if (p.primClass == PrimClass.Line) {\n                let { typeidx, x1, y1, x2, y2 } = p;\n                let { thickness, colour } = this.types[typeidx];\n                into.drawLine(x1, y1, x2, y2, colour, thickness);\n            }\n            else if (p.primClass == PrimClass.Rect) {\n                let { typeidx, x, y, w, h } = p;\n                let { edgeCol, fillCol, thickness } = this.types[typeidx];\n                into.drawRect(x, y, w, h, edgeCol, thickness, fillCol);\n            }\n            else if (p.primClass == PrimClass.Oval) {\n                let { typeidx, cx, cy, rw, rh } = p;\n                let { edgeCol, fillCol, thickness } = this.types[typeidx];\n                into.drawOval(cx, cy, rw, rh, edgeCol, thickness, fillCol);\n            }\n            else if (p.primClass == PrimClass.Path) {\n                let { typeidx, count, x, y, ctrl, closed } = p;\n                let { edgeCol, fillCol, thickness, hardEdge } = this.types[typeidx];\n                into.drawPath(x, y, ctrl, closed, edgeCol, thickness, fillCol, hardEdge);\n            }\n            else if (p.primClass == PrimClass.Text) {\n                let { typeidx, x, y, txt, direction } = p;\n                let { size, colour } = this.types[typeidx];\n                into.drawText(x, y, txt, size, colour, null, direction);\n            }\n            else if (p.primClass == PrimClass.TextNative) {\n                let { typeidx, x, y, txt } = p;\n                let { family, size, colour } = this.types[typeidx];\n                into.drawTextNative(x, y, txt, family, size, colour);\n            }\n        }\n    }\n    setupTypeLine(t) {\n        let thickness = t.thickness * this.scale;\n        let colour = t.colour;\n        return { primClass: t.primClass, thickness, colour };\n    }\n    setupTypeRect(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness };\n    }\n    setupTypeOval(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness };\n    }\n    setupTypePath(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        let hardEdge = t.hardEdge;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness, hardEdge };\n    }\n    setupTypeText(t) {\n        let size = t.size * this.scale;\n        let colour = t.colour;\n        return { primClass: t.primClass, colour, size };\n    }\n    setupTypeTextNative(t) {\n        let family = t.family;\n        let size = t.size * this.scale;\n        let colour = t.colour;\n        let opt = t.opt;\n        return { primClass: t.primClass, colour, family, size, opt };\n    }\n    renderLine(ctx, line) {\n        let { x1, y1, x2, y2 } = line;\n        let { colour, thickness } = this.typeObj[line.typeidx];\n        x1 = this.offsetX + this.scale * x1;\n        y1 = this.offsetY + this.scale * y1;\n        x2 = this.offsetX + this.scale * x2;\n        y2 = this.offsetY + this.scale * y2;\n        if (colour != null) {\n            ctx.beginPath();\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2);\n            ctx.strokeStyle = colourCanvas(colour);\n            ctx.lineWidth = thickness;\n            ctx.lineCap = 'round';\n            ctx.stroke();\n        }\n    }\n    renderRect(ctx, rect) {\n        let { x, y, w, h } = rect;\n        let { edgeCol, fillCol, thickness } = this.typeObj[rect.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        w *= this.scale;\n        h *= this.scale;\n        if (fillCol != MetaVector.NOCOLOUR) {\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.fillRect(x, y, w, h);\n        }\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            ctx.strokeStyle = colourCanvas(edgeCol);\n            ctx.lineWidth = thickness;\n            ctx.lineCap = 'square';\n            ctx.strokeRect(x, y, w, h);\n        }\n    }\n    renderOval(ctx, oval) {\n        let { cx, cy, rw, rh } = oval;\n        let { edgeCol, fillCol, thickness } = this.typeObj[oval.typeidx];\n        cx = this.offsetX + this.scale * cx;\n        cy = this.offsetY + this.scale * cy;\n        rw *= this.scale;\n        rh *= this.scale;\n        if (fillCol != MetaVector.NOCOLOUR) {\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rw, rh, 0, 0, 2 * Math.PI, true);\n            ctx.fill();\n        }\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            ctx.strokeStyle = colourCanvas(edgeCol);\n            ctx.lineWidth = thickness;\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rw, rh, 0, 0, 2 * Math.PI, true);\n            ctx.stroke();\n        }\n    }\n    renderPath(ctx, path) {\n        let { count, x, y, ctrl, closed } = path;\n        let { edgeCol, fillCol, thickness, hardEdge } = this.typeObj[path.typeidx];\n        x = [...x];\n        y = [...y];\n        for (let n = 0; n < count; n++) {\n            x[n] = this.offsetX + this.scale * x[n];\n            y[n] = this.offsetY + this.scale * y[n];\n        }\n        for (let layer = 1; layer <= 2; layer++) {\n            if (layer == 1 && fillCol == MetaVector.NOCOLOUR)\n                continue;\n            if (layer == 2 && edgeCol == MetaVector.NOCOLOUR)\n                continue;\n            ctx.beginPath();\n            ctx.moveTo(x[0], y[0]);\n            for (let i = 1; i < count; i++) {\n                if (!ctrl || !ctrl[i]) {\n                    ctx.lineTo(x[i], y[i]);\n                }\n                else if (i < count - 1 && !ctrl[i + 1]) {\n                    ctx.quadraticCurveTo(x[i], y[i], x[i + 1], y[i + 1]);\n                    i++;\n                }\n                else if (i < count - 1 && !ctrl[i + 2]) {\n                    ctx.bezierCurveTo(x[i], y[i], x[i + 1], y[i + 1], x[i + 2], y[i + 2]);\n                    i += 2;\n                }\n            }\n            if (closed)\n                ctx.closePath();\n            if (layer == 1) {\n                ctx.fillStyle = colourCanvas(fillCol);\n                ctx.fill();\n            }\n            else {\n                ctx.strokeStyle = colourCanvas(edgeCol);\n                ctx.lineWidth = thickness;\n                ctx.lineCap = hardEdge ? 'square' : 'round';\n                ctx.lineJoin = hardEdge ? 'miter' : 'round';\n                ctx.stroke();\n            }\n        }\n    }\n    renderText(ctx, text) {\n        let { x, y, txt, direction } = text;\n        let { size, colour } = this.typeObj[text.typeidx];\n        let fill = colourCanvas(colour);\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let font = FontData.main;\n        let scale = size * this.scale / font.UNITS_PER_EM;\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            let path = null;\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                path = font.getMissingPath();\n            }\n            else\n                path = font.getGlyphPath(i);\n            if (path) {\n                ctx.save();\n                let theta = direction != 0 ? direction * DEGRAD : 0;\n                if (theta == 0)\n                    ctx.translate(x + dx * scale, y);\n                else\n                    ctx.translate(x + Math.cos(theta) * dx * scale, y + Math.sin(theta) * dx * scale);\n                ctx.scale(scale, -scale);\n                if (theta != 0)\n                    ctx.rotate(-theta);\n                ctx.fillStyle = fill;\n                ctx.fill(path);\n                ctx.restore();\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n        }\n    }\n    renderTextNative(ctx, text) {\n        let { x, y, txt } = text;\n        let { size, colour, family, opt } = this.typeObj[text.typeidx];\n        let fill = colourCanvas(colour);\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        ctx.save();\n        let pfx = '';\n        if (opt.bold)\n            pfx += 'bold ';\n        if (opt.italic)\n            pfx += 'italic ';\n        ctx.font = pfx + (size * this.scale) + 'px ' + family;\n        ctx.fillStyle = fill;\n        ctx.fillText(txt, x, y);\n        ctx.restore();\n    }\n    svgLine1(svg, line) {\n        let { x1, y1, x2, y2 } = line;\n        let { colour, thickness } = this.typeObj[line.typeidx];\n        x1 = this.offsetX + this.scale * x1;\n        y1 = this.offsetY + this.scale * y1;\n        x2 = this.offsetX + this.scale * x2;\n        y2 = this.offsetY + this.scale * y2;\n        if (colour != MetaVector.NOCOLOUR) {\n            svg.start('<line');\n            svg.attr('x1', x1);\n            svg.attr('y1', y1);\n            svg.attr('x2', x2);\n            svg.attr('y2', y2);\n            this.defineSVGStroke(svg, colour);\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'round');\n            svg.stop('/>');\n        }\n    }\n    svgLineN(svg, lines) {\n        let { colour, thickness } = this.typeObj[lines[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, colour);\n        svg.attr('stroke-width', thickness);\n        svg.attr('stroke-linecap', 'round');\n        svg.stop('>');\n        svg.inc();\n        for (let line of lines) {\n            let { x1, y1, x2, y2 } = line;\n            x1 = this.offsetX + this.scale * x1;\n            y1 = this.offsetY + this.scale * y1;\n            x2 = this.offsetX + this.scale * x2;\n            y2 = this.offsetY + this.scale * y2;\n            svg.start('<line');\n            svg.attr('x1', x1);\n            svg.attr('y1', y1);\n            svg.attr('x2', x2);\n            svg.attr('y2', y2);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgRect1(svg, rect) {\n        let { x, y, w, h } = rect;\n        let { edgeCol, fillCol, thickness } = this.typeObj[rect.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        w *= this.scale;\n        h *= this.scale;\n        svg.start('<rect');\n        svg.attr('x', x);\n        svg.attr('y', y);\n        svg.attr('width', w);\n        svg.attr('height', h);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'square');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgRectN(svg, rects) {\n        let { edgeCol, fillCol, thickness } = this.typeObj[rects[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'square');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('>');\n        svg.inc();\n        for (let rect of rects) {\n            let { x, y, w, h } = rect;\n            x = this.offsetX + this.scale * x;\n            y = this.offsetY + this.scale * y;\n            w *= this.scale;\n            h *= this.scale;\n            svg.start('<rect');\n            svg.attr('x', x);\n            svg.attr('y', y);\n            svg.attr('width', w);\n            svg.attr('height', h);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgOval1(svg, oval) {\n        let { cx, cy, rw, rh } = oval;\n        let { edgeCol, fillCol, thickness } = this.typeObj[oval.typeidx];\n        cx = this.offsetX + this.scale * cx;\n        cy = this.offsetY + this.scale * cy;\n        rw *= this.scale;\n        rh *= this.scale;\n        svg.start('<ellipse');\n        svg.attr('cx', cx);\n        svg.attr('cy', cy);\n        svg.attr('rx', rw);\n        svg.attr('ry', rh);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgOvalN(svg, ovals) {\n        let { edgeCol, fillCol, thickness } = this.typeObj[ovals[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('>');\n        svg.inc();\n        for (let oval of ovals) {\n            let { cx, cy, rw, rh } = oval;\n            cx = this.offsetX + this.scale * cx;\n            cy = this.offsetY + this.scale * cy;\n            rw *= this.scale;\n            rh *= this.scale;\n            svg.start('<ellipse');\n            svg.attr('cx', cx);\n            svg.attr('cy', cy);\n            svg.attr('rx', rw);\n            svg.attr('ry', rh);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgPath(svg, path) {\n        let { count, x, y, ctrl, closed } = path;\n        let { edgeCol, fillCol, thickness, hardEdge } = this.typeObj[path.typeidx];\n        x = [...x];\n        y = [...y];\n        for (let n = 0; n < count; n++) {\n            x[n] = this.offsetX + this.scale * x[n];\n            y[n] = this.offsetY + this.scale * y[n];\n        }\n        let shape = 'M ' + x[0] + ' ' + y[0];\n        let n = 1;\n        while (n < count) {\n            if (!ctrl || !ctrl[n]) {\n                shape += ' L ' + x[n] + ' ' + y[n];\n                n++;\n            }\n            else if (ctrl[n] && n < count - 1 && !ctrl[n + 1]) {\n                shape += ' Q ' + x[n] + ' ' + y[n] + ' ' + x[n + 1] + ' ' + y[n + 1];\n                n += 2;\n            }\n            else if (ctrl[n] && n < count - 2 && ctrl[n + 1] && !ctrl[n + 2]) {\n                shape += ' C ' + x[n] + ' ' + y[n] + ' ' + x[n + 1] + ' ' + y[n + 1] + ' ' + x[n + 2] + ' ' + y[n + 2];\n                n += 3;\n            }\n            else\n                n++;\n        }\n        if (closed)\n            shape += ' Z';\n        svg.start('<path');\n        svg.attr('d', shape);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linejoin', hardEdge ? 'miter' : 'round');\n            svg.attr('stroke-linecap', hardEdge ? 'square' : 'round');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgText(svg, text, withXlink = true) {\n        let { x, y, txt, direction } = text;\n        let { size, colour } = this.typeObj[text.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let font = FontData.main;\n        let scale = size * this.scale / font.UNITS_PER_EM;\n        if (direction != 0) {\n            svg.start('<g');\n            svg.attr('transform', `rotate(${direction},${x},${y})`);\n            svg.stop('>');\n            svg.inc();\n        }\n        svg.start('<g');\n        svg.attr('transform', 'translate(' + x + ',' + y + ')');\n        this.defineSVGFill(svg, colour);\n        svg.stop('>');\n        svg.inc();\n        svg.start('<g');\n        svg.attr('transform', 'scale(' + scale + ',' + (-scale) + ')');\n        svg.stop('>');\n        svg.inc();\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            svg.start('<use');\n            let ref = i < 0 ? '#missing' : '#char' + i;\n            if (withXlink)\n                svg.attr('xlink:href', ref);\n            else\n                svg.attr('href', ref);\n            svg.attr('x', dx);\n            svg.stop('/>');\n            if (i >= 0) {\n                dx += font.HORIZ_ADV_X[i];\n                if (n < txt.length - 1)\n                    dx += font.getKerning(ch, txt.charAt(n + 1));\n            }\n            else\n                dx += font.MISSING_HORZ;\n        }\n        svg.dec();\n        svg.whole('</g>');\n        svg.dec();\n        svg.whole('</g>');\n        if (direction != 0) {\n            svg.dec();\n            svg.whole('</g>');\n        }\n    }\n    svgTextNative(svg, text) {\n        let { x, y, txt } = text;\n        let { size, colour, family, opt } = this.typeObj[text.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let fill = colourCanvas(colour);\n        let style = `fill: ${fill}; font-family: ${family}; font-size: ${size * this.scale};`;\n        if (opt.bold)\n            style += ' font-weight: bold;';\n        if (opt.italic)\n            style += ' font-style: italic;';\n        const escapeXML = (str) => {\n            return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\n        };\n        svg.start('<text');\n        svg.attr('xml:space', 'preserve');\n        svg.attr('x', x);\n        svg.attr('y', y);\n        svg.attr('style', style);\n        svg.stop('>' + escapeXML(txt) + '</text>');\n    }\n    defineSVGStroke(svg, col) {\n        if (col == MetaVector.NOCOLOUR) {\n            svg.attr('stroke-opacity', '0');\n            return;\n        }\n        svg.attr('stroke', colourCode(col));\n        let alpha = colourAlpha(col);\n        if (alpha != 1)\n            svg.attr('stroke-opacity', alpha);\n    }\n    defineSVGFill(svg, col) {\n        if (col == MetaVector.NOCOLOUR) {\n            svg.attr('fill-opacity', '0');\n            return;\n        }\n        svg.attr('fill', colourCode(col));\n        let alpha = colourAlpha(col);\n        if (alpha != 1)\n            svg.attr('fill-opacity', alpha);\n    }\n    findOrCreateType(typeDef) {\n        for (let n = 0; n < this.types.length; n++) {\n            if (this.types[n].primClass != typeDef.primClass)\n                continue;\n            let keys = Object.keys(typeDef);\n            let match = keys.every((k) => typeDef[k] == this.types[n][k]);\n            if (match)\n                return n;\n        }\n        this.types.push(typeDef);\n        return this.types.length - 1;\n    }\n    updateBounds(x, y) {\n        if (this.lowX == null) {\n            this.lowX = x;\n            this.lowY = y;\n            this.highX = x;\n            this.highY = y;\n            return;\n        }\n        this.lowX = Math.min(this.lowX, x);\n        this.lowY = Math.min(this.lowY, y);\n        this.highX = Math.max(this.highX, x);\n        this.highY = Math.max(this.highY, y);\n    }\n}\nMetaVector.NOCOLOUR = -1;\nexport { MetaVector };\n//# sourceMappingURL=MetaVector.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Vec} from 'webmolkit/util/Vec';\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\n\tUnit definitions and conversions. Units are preferentially stored by URI, displayed by common name, and interconverted\n\tas necessary to other schemes, such as MInChI mnemonics.\n*/\n\nexport enum StandardUnits\n{\n\t// concentration units (these are favoured for most purposes)\n\tpc = 'http://purl.obolibrary.org/obo/UO_0000187', // percent (of arbitrary type)\n\tpcWV = 'http://purl.obolibrary.org/obo/UO_0000164', // percent (weight per volume),\n\tpcWW = 'http://purl.obolibrary.org/obo/UO_0000163', // percent (weight per weight),\n\tpcVV = 'http://purl.obolibrary.org/obo/UO_0000205', // percent (volume per volume),\n\tpcMM = 'http://purl.obolibrary.org/obo/UO_0000076', // percent (mole per mole)\n\tratio = 'http://purl.obolibrary.org/obo/UO_0000190', // ratio (numerator only; nominally by volume)\n\tmol_L = 'http://purl.obolibrary.org/obo/UO_0000062', // moles per litre (mol/L)\n\tmmol_L = 'http://purl.obolibrary.org/obo/UO_0000063', // milli-moles per litre\n\tumol_L = 'http://purl.obolibrary.org/obo/UO_0000064', // micro-moles per litre\n\tnmol_L = 'http://purl.obolibrary.org/obo/UO_0000065', // nano-moles per litre\n\tpmol_L = 'http://purl.obolibrary.org/obo/UO_0000066', // pico-moles per litre\n\t/* could be handy to allow these... maybe\n\tlogM = 'http://www.bioassayontology.org/bao#BAO_0000101', // log10 of mol/L\n\tperM = 'http://www.bioassayontology.org/bao#BAO_0000102', // -log10 of mol/L */\n\tg_L = 'http://purl.obolibrary.org/obo/UO_0000175', // grams per litre (g/L)\n\tmg_L = 'http://purl.obolibrary.org/obo/UO_0000273', // milligrams per litre (aka micrograms per mL)\n\tug_L = 'http://purl.obolibrary.org/obo/UO_0000275', // micrograms per litre (aka nanograms per mL)\n\tmol_kg = 'http://purl.obolibrary.org/obo/UO_0000068', // moles per kilogram\n\n\t// absolute units (these are often converted to concentrations when possible)\n\tkg = 'http://purl.obolibrary.org/obo/UO_0000009', // kilogram\n\tg = 'http://purl.obolibrary.org/obo/UO_0000021', // gram\n\tmg = 'http://purl.obolibrary.org/obo/UO_0000022', // milligram\n\tug = 'http://purl.obolibrary.org/obo/UO_0000023', // microgram\n\tng = 'http://purl.obolibrary.org/obo/UO_0000024', // nanogram\n\tL = 'http://purl.obolibrary.org/obo/UO_0000099', // litre\n\tmL = 'http://purl.obolibrary.org/obo/UO_0000098', // millilitre\n\tuL = 'http://purl.obolibrary.org/obo/UO_0000101', // microlitre\n\tnL = 'http://purl.obolibrary.org/obo/UO_0000102', // nanolitre\n\tmol = 'http://purl.obolibrary.org/obo/UO_0000013', // mole\n\tmmol = 'http://purl.obolibrary.org/obo/UO_0000040', // millimole\n\tumol = 'http://purl.obolibrary.org/obo/UO_0000039', // micromole\n\tnmol = 'http://purl.obolibrary.org/obo/UO_0000041', // nanomole\n\n\t// other\n\tppm = 'placeholder1',\n\tppb = 'placeholder2',\n}\n\nconst PAIR_UNIT_NAMES:any[] =\n[\n\t// form: [reference URI, primary display name, ...optional alternative names]\n\n\t[StandardUnits.pc, '%'],\n\t[StandardUnits.pcWV, 'w/v%'],\n\t[StandardUnits.pcWW, 'w/w%'],\n\t[StandardUnits.pcVV, 'v/v%'],\n\t[StandardUnits.pcMM, 'mol/mol%'],\n\t[StandardUnits.ratio, 'ratio'],\n\t[StandardUnits.mol_L, 'mol/L', 'M'],\n\t[StandardUnits.mmol_L, 'mmol/L', 'mM'],\n\t[StandardUnits.umol_L, '\\u{03BC}mol/L', 'umol/L', 'uM'],\n\t[StandardUnits.nmol_L, 'nmol/L', 'nM'],\n\t[StandardUnits.pmol_L, 'pmol/L', 'pM'],\n\t/*[StandardUnits.logM, ''],\n\t[StandardUnits.perM, ''],*/\n\t[StandardUnits.g_L, 'g/L'],\n\t[StandardUnits.mg_L, 'mg/L'],\n\t[StandardUnits.ug_L, '\\u{03BC}g/L', 'ug/L'],\n\t[StandardUnits.mol_kg, 'mol/kg'],\n\n\t[StandardUnits.kg, 'kg'],\n\t[StandardUnits.g, 'g'],\n\t[StandardUnits.mg, 'mg'],\n\t[StandardUnits.ug, '\\u{03BC}g', 'ug'],\n\t[StandardUnits.ng, 'ng'],\n\t[StandardUnits.L, 'L'],\n\t[StandardUnits.mL, 'mL'],\n\t[StandardUnits.uL, '\\u{03BC}L', 'uL'],\n\t[StandardUnits.nL, 'nL'],\n\t[StandardUnits.mol, 'mol'],\n\t[StandardUnits.mmol, 'mmol'],\n\t[StandardUnits.umol, '\\u{03BC}mol', 'umol'],\n\t[StandardUnits.nmol, 'nmol'],\n\n\t[StandardUnits.ppm, 'ppm'],\n\t[StandardUnits.ppb, 'ppb'],\n];\n\nconst PAIR_UNIT_MINCHI:any[] =\n[\n\t// [enum type, MInChI type, scaling] ... scaling factor is for going from standard to MInChI\n\t[StandardUnits.pc, 'pp', 1],\n\t[StandardUnits.pcWV, 'wv', 0.01],\n\t[StandardUnits.pcWW, 'wf', 0.01],\n\t[StandardUnits.pcVV, 'vf', 0.01],\n\t[StandardUnits.pcMM, 'mf', 0.01],\n\t[StandardUnits.ratio, 'rt', 1],\n\t[StandardUnits.mol_L, 'mr', 1],\n\t[StandardUnits.mmol_L, 'mr', 1E-3],\n\t[StandardUnits.umol_L, 'mr', 1E-6],\n\t[StandardUnits.nmol_L, 'mr', 1E-9],\n\t[StandardUnits.pmol_L, 'mr', 1E-12],\n\t/*[StandardUnits.logM, '', ],\n\t[StandardUnits.perM, '', ],*/\n\t[StandardUnits.g_L, 'wv', 1E-3],\n\t[StandardUnits.mg_L, 'wv', 1E-6],\n\t[StandardUnits.ug_L, 'wv', 1E-9],\n\t[StandardUnits.mol_kg, 'mb', 1],\n\t[StandardUnits.ppm, 'pp', 1E-6],\n\t[StandardUnits.ppb, 'pp', 1E-9],\n];\n\nexport class Units\n{\n\tpublic static STANDARD_LIST:string[] = []; // all of the applicable unit URIs\n\tpublic static COMMON_NAMES:string[] = []; // all of the preferred names (same order as above)\n\tpublic static URI_TO_NAME:Record<string, string> = {}; // each URI has one preferred display name\n\tpublic static NAME_TO_URI:Record<string, string> = {}; // multiple unit forms can point to the same URI\n\tpublic static URI_TO_MINCHI:Record<string, [string, number]> = {}; // URI to MInChI, when applicable\n\n\tpublic static setup():void\n\t{\n\t\tfor (let pair of PAIR_UNIT_NAMES)\n\t\t{\n\t\t\tlet uri:string = pair[0], name:string = pair[1];\n\t\t\tthis.STANDARD_LIST.push(uri);\n\t\t\tthis.COMMON_NAMES.push(name);\n\t\t\tthis.URI_TO_NAME[uri] = name;\n\t\t\t\n\t\t\t//this.NAME_TO_URI[name] = uri; (some of them have alternate names)\n\t\t\tfor (let n = 1; n <= pair.length; n++) this.NAME_TO_URI[pair[n]] = uri;\n\t\t}\n\t\tfor (let pair of PAIR_UNIT_MINCHI)\n\t\t{\n\t\t\tlet uri:string = pair[0], name:string = pair[1], scale:number = pair[2];\n\t\t\tthis.URI_TO_MINCHI[uri] = [name, scale];\n\t\t}\n\t\tthis.setup = () => {}; // calling it again is a nop\n\t}\n\n\tpublic static standardList():string[]\n\t{\n\t\tthis.setup();\n\t\treturn this.STANDARD_LIST;\n\t}\n\tpublic static commonNames():string[]\n\t{\n\t\tthis.setup();\n\t\treturn this.COMMON_NAMES;\n\t}\n\tpublic static uriToName(uri:string):string\n\t{\n\t\tthis.setup();\n\t\treturn this.URI_TO_NAME[uri];\n\t}\n\tpublic static nameToURI(name:string):string\n\t{\n\t\tthis.setup();\n\t\treturn this.NAME_TO_URI[name];\n\t}\n\n\t// converts a uri/value pair into mnemonic/value, ready to be exported to MInChI-style units; if the URI is not in the list of\n\t// things that can be converted, returns nulls\n\tpublic static convertToMInChI(uri:string, values:number[]):[string, number[]]\n\t{\n\t\tlet [mnemonic, scale] = this.URI_TO_MINCHI[uri] || [null, null];\n\t\tif (!mnemonic) return [null, null];\n\t\treturn [mnemonic, Vec.mul(values, scale)];\n\t}\n}\n\n","import { Molecule } from '../mol/Molecule';\nimport { GeomUtil } from '../util/Geom';\nimport { angleDiff, DEGRAD, invZ, norm2_xy, norm_xy } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { BLineType } from './ArrangeMolecule';\nimport { MetaVector, TextAlign } from './MetaVector';\nimport { RenderMnemonicType } from './Rendering';\nexport class DrawMolecule {\n    constructor(layout, vg) {\n        this.layout = layout;\n        this.vg = vg;\n        this.mnemonics = null;\n        this.mol = layout.getMolecule();\n        this.policy = layout.getPolicy();\n        this.effects = layout.getEffects();\n        this.scale = layout.getScale();\n        this.invScale = 1.0 / this.scale;\n    }\n    getMolecule() { return this.mol; }\n    getMetaVector() { return this.vg; }\n    getLayout() { return this.layout; }\n    getPolicy() { return this.policy; }\n    getEffects() { return this.effects; }\n    draw() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n        let DRAW_SPACE = false;\n        if (DRAW_SPACE) {\n            let bounds = this.layout.determineBoundary();\n            this.vg.drawRect(bounds[0], bounds[1], bounds[2] - bounds[0], bounds[3] - bounds[1], 0xFF0000, 1, MetaVector.NOCOLOUR);\n            for (let n = 0; n < this.layout.numSpace(); n++) {\n                let spc = this.layout.getSpace(n);\n                this.vg.drawRect(spc.box.x, spc.box.y, spc.box.w, spc.box.h, MetaVector.NOCOLOUR, 0, 0xE0E0E0);\n                if (spc.px != null && spc.py != null && spc.px.length > 2)\n                    this.vg.drawPoly(spc.px, spc.py, 0x000000, 1, 0x808080FF, true);\n            }\n        }\n        this.drawUnderEffects();\n        let { mol, layout, effects, policy, vg } = this;\n        let hideBonds = new Set(effects.hideBonds);\n        for (let i = 1; i <= mol.numBonds; i++)\n            if (mol.bondType(i) == Molecule.BONDTYPE_INCLINED && !hideBonds.has(i)) {\n                let atom = mol.bondTo(i);\n                if (layout.getPoint(atom - 1).text)\n                    continue;\n                for (let j of mol.atomAdjBonds(atom))\n                    if (j != i && mol.bondType(j) == Molecule.BONDTYPE_INCLINED && mol.bondTo(j) == atom && !hideBonds.has(j)) {\n                        let b1 = layout.getLines().find((b) => b.bnum == i);\n                        let b2 = layout.getLines().find((b) => b.bnum == j);\n                        let th1 = Math.atan2(b1.line.y1 - b1.line.y2, b1.line.x1 - b1.line.x2);\n                        let th2 = Math.atan2(b2.line.y1 - b2.line.y2, b2.line.x1 - b2.line.x2);\n                        if (Math.abs(angleDiff(th1, th2)) < 170 * DEGRAD) {\n                            this.drawFusedWedge(b1, b2);\n                            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Artifact, 'Fused', [b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2]);\n                            hideBonds.add(i);\n                            hideBonds.add(j);\n                            break;\n                        }\n                    }\n            }\n        for (let n = 0; n < layout.numLines(); n++) {\n            let b = layout.getLine(n);\n            if (hideBonds.has(b.bnum))\n                continue;\n            if (b.type == BLineType.Normal) {\n                vg.drawLine(b.line.x1, b.line.y1, b.line.x2, b.line.y2, b.col, b.size);\n                (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Bond, 'L', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Inclined) {\n                this.drawBondInclined(b);\n                (_c = this.mnemonics) === null || _c === void 0 ? void 0 : _c.append(RenderMnemonicType.Bond, 'I', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Declined) {\n                this.drawBondDeclined(b);\n                (_d = this.mnemonics) === null || _d === void 0 ? void 0 : _d.append(RenderMnemonicType.Bond, 'D', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Unknown) {\n                this.drawBondUnknown(b);\n                (_e = this.mnemonics) === null || _e === void 0 ? void 0 : _e.append(RenderMnemonicType.Bond, 'U', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Dotted || b.type == BLineType.DotDir) {\n                this.drawBondDotted(b);\n                (_f = this.mnemonics) === null || _f === void 0 ? void 0 : _f.append(RenderMnemonicType.Bond, 'O', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.IncDouble || b.type == BLineType.IncTriple || b.type == BLineType.IncQuadruple) {\n                this.drawBondIncMulti(b);\n                (_g = this.mnemonics) === null || _g === void 0 ? void 0 : _g.append(RenderMnemonicType.Bond, 'M', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n        }\n        let fg = policy.data.foreground;\n        for (let r of layout.getRings()) {\n            if (r.theta != 0) {\n                var bez = GeomUtil.createBezierEllipse(r.cx, r.cy, r.rw, r.rh, r.theta);\n                vg.drawPath(bez.px, bez.py, bez.ctrl, true, fg, r.size, MetaVector.NOCOLOUR, false);\n                (_h = this.mnemonics) === null || _h === void 0 ? void 0 : _h.append(RenderMnemonicType.Artifact, 'Ring', [r.cx, r.cy, r.rw, r.rh, r.theta]);\n            }\n            else {\n                vg.drawOval(r.cx, r.cy, r.rw, r.rh, fg, r.size, MetaVector.NOCOLOUR);\n                (_j = this.mnemonics) === null || _j === void 0 ? void 0 : _j.append(RenderMnemonicType.Artifact, 'Ring', [r.cx, r.cy, r.rw, r.rh]);\n            }\n        }\n        for (let p of layout.getPaths()) {\n            vg.drawPath(p.px, p.py, p.ctrl, false, fg, p.size, MetaVector.NOCOLOUR, false);\n            (_k = this.mnemonics) === null || _k === void 0 ? void 0 : _k.append(RenderMnemonicType.Artifact, 'Path', [...p.px, ...p.py]);\n        }\n        for (let n = 0; n < layout.numPoints(); n++) {\n            let p = layout.getPoint(n);\n            if (effects.hideAtoms.has(p.anum))\n                continue;\n            let txt = p.text;\n            let cx = p.oval.cx, cy = p.oval.cy, rw = p.oval.rw;\n            if (txt == null) {\n                (_l = this.mnemonics) === null || _l === void 0 ? void 0 : _l.append(RenderMnemonicType.Atom, '.', [cx, cy]);\n                continue;\n            }\n            let fsz = p.fsz;\n            let col = p.col;\n            while (txt.endsWith('.')) {\n                let dw = rw / txt.length;\n                let r = fsz * 0.15;\n                vg.drawOval(cx + rw - dw, cy, r, r, MetaVector.NOCOLOUR, 0, col);\n                cx -= dw;\n                rw -= dw;\n                txt = txt.substring(0, txt.length - 1);\n            }\n            while (txt.startsWith('+')) {\n                let dw = rw / txt.length;\n                let x = cx - rw + dw, y = cy, r = fsz * 0.18, lsz = fsz * 0.1;\n                vg.drawLine(x - r, y, x + r, y, col, lsz);\n                vg.drawLine(x, y - r, x, y + r, col, lsz);\n                cx += dw;\n                rw -= dw;\n                txt = txt.substring(1, txt.length);\n            }\n            while (txt.startsWith('-')) {\n                let dw = rw / txt.length;\n                let x = cx - rw + dw, y = cy, r = fsz * 0.18, lsz = fsz * 0.1;\n                vg.drawLine(x - r, y, x + r, y, col, lsz);\n                cx += dw;\n                rw -= dw;\n                txt = txt.substring(1, txt.length);\n            }\n            if (txt.length > 0) {\n                vg.drawText(cx, cy, txt, fsz, col, TextAlign.Centre | TextAlign.Middle, p.rotation || 0);\n                (_m = this.mnemonics) === null || _m === void 0 ? void 0 : _m.append(RenderMnemonicType.Atom, txt, [cx, cy]);\n            }\n            else\n                (_o = this.mnemonics) === null || _o === void 0 ? void 0 : _o.append(RenderMnemonicType.Atom, '.', [cx, cy]);\n        }\n        this.drawOverEffects();\n    }\n    drawUnderEffects() {\n        var _a, _b, _c;\n        let mol = this.mol, policy = this.policy, effects = this.effects, layout = this.layout, scale = this.scale, vg = this.vg;\n        for (let n = 0, num = Math.min(effects.atomFrameDotSz.length, mol.numAtoms); n < num; n++) {\n            if (effects.hideAtoms.has(n + 1))\n                continue;\n            let dw = effects.atomFrameDotSz[n] * scale, col = effects.atomFrameCol[n];\n            let a = layout.getPoint(n);\n            let rw = a.oval.rw + 0.1 * scale, rh = a.oval.rh + 0.1 * scale;\n            let wdots = Math.ceil(2 * rw / (3 * dw));\n            let hdots = Math.ceil(2 * rh / (3 * dw));\n            let wspc = 2 * rw / wdots, hspc = 2 * rh / hdots;\n            for (let i = 0; i <= wdots; i++) {\n                let x = a.oval.cx - rw + i * wspc;\n                vg.drawOval(x, a.oval.cy - rh, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(x, a.oval.cy + rh, dw, dw, MetaVector.NOCOLOUR, 0, col);\n            }\n            for (let i = 1; i < hdots; i++) {\n                let y = a.oval.cy - rh + i * hspc;\n                vg.drawOval(a.oval.cx - rw, y, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(a.oval.cx + rw, y, dw, dw, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Effect, 'Dot', [a.oval.cx, a.oval.cy, a.oval.rw, a.oval.rh]);\n        }\n        for (let key in effects.dottedRectOutline) {\n            let atom = parseInt(key), col = effects.dottedRectOutline[key];\n            let a = layout.getPoint(atom - 1);\n            let rw = Math.max(a.oval.rw, 0.2 * scale), rh = Math.max(a.oval.rh, 0.2 * scale);\n            let sz = 0.05 * scale;\n            let xdots = Math.max(1, Math.round(rw / (2 * sz)));\n            let ydots = Math.max(1, Math.round(rh / (2 * sz)));\n            let invX = (2 * rw) / xdots, invY = (2 * rh) / ydots;\n            for (let n = 0; n <= xdots; n++) {\n                let x = a.oval.cx - rw + n * invX;\n                vg.drawOval(x, a.oval.cy - rh, sz, sz, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(x, a.oval.cy + rh, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            for (let n = 1; n < ydots; n++) {\n                let y = a.oval.cy - rh + n * invY;\n                vg.drawOval(a.oval.cx - rw, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(a.oval.cx + rw, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Effect, 'Rect', [a.oval.cx, a.oval.cy, a.oval.rw, a.oval.rh]);\n        }\n        for (let key in effects.dottedBondCross) {\n            let bond = parseInt(key), col = effects.dottedBondCross[key];\n            let x1 = 0, y1 = 0, x2 = 0, y2 = 0, bcount = 0;\n            for (let n = 0; n < layout.numLines(); n++) {\n                let b = layout.getLine(n);\n                if (b.bnum == bond) {\n                    x1 += b.line.x1;\n                    y1 += b.line.y1;\n                    x2 += b.line.x2;\n                    y2 += b.line.y2;\n                    bcount += 1;\n                }\n            }\n            if (bcount > 1) {\n                let inv = 1 / bcount;\n                [x1, y1, x2, y2] = [x1 * inv, y1 * inv, x2 * inv, y2 * inv];\n            }\n            let dx = x2 - x1, dy = y2 - y1;\n            let inv = 0.2 * scale * invZ(norm_xy(dx, dy)), ox = dy * inv, oy = -dx * inv;\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2), sz = 0.05 * scale;\n            for (let p of [-2, -1, 1, 2]) {\n                let x = cx + p * ox, y = cy + p * oy;\n                vg.drawOval(x, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_c = this.mnemonics) === null || _c === void 0 ? void 0 : _c.append(RenderMnemonicType.Effect, 'Crossing', [x1, y1, x2, y2]);\n        }\n    }\n    drawOverEffects() {\n        var _a, _b;\n        let mol = this.mol, policy = this.policy, effects = this.effects, layout = this.layout, scale = this.scale, vg = this.vg;\n        for (let a of effects.overlapAtoms) {\n            let p = layout.getPoint(a - 1);\n            let rad = scale * 0.2;\n            vg.drawLine(p.oval.cx - rad, p.oval.cy - rad, p.oval.cx + rad, p.oval.cy + rad, 0xFF0000, 1);\n            vg.drawLine(p.oval.cx + rad, p.oval.cy - rad, p.oval.cx - rad, p.oval.cy + rad, 0xFF0000, 1);\n            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Effect, 'Overlap', [p.oval.cx, p.oval.cy, p.oval.rw, p.oval.rh]);\n        }\n        for (let n = 0, num = Math.min(effects.atomCircleSz.length, mol.numAtoms); n < num; n++)\n            if (effects.atomCircleSz[n] > 0) {\n                let dw = effects.atomCircleSz[n] * scale, col = effects.atomCircleCol[n];\n                let p = layout.getPoint(n);\n                vg.drawOval(p.oval.cx, p.oval.cy, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Effect, 'Circle', [p.oval.cx, p.oval.cy, p.oval.rw, p.oval.rh]);\n            }\n    }\n    drawBondInclined(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let norm = head / Math.sqrt(dx * dx + dy * dy);\n        let ox = norm * dy, oy = -norm * dx;\n        let px = [x1, x2 - ox, x2 + ox], py = [y1, y2 - oy, y2 + oy];\n        if (this.layout.getPoint(b.bto - 1).text == null && this.mol.atomAdjCount(b.bto) == 2) {\n            let other = null;\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let o = this.layout.getLine(n);\n                if (o.type == BLineType.Normal && (o.bfr == b.bto || o.bto == b.bto)) {\n                    if (other != null) {\n                        other = null;\n                        break;\n                    }\n                    other = o;\n                }\n            }\n            if (other != null) {\n                let th1 = Math.atan2(y1 - y2, x1 - x2);\n                let th2 = Math.atan2(other.line.y1 - other.line.y2, other.line.x1 - other.line.x2);\n                if (b.bto == other.bfr)\n                    th2 += Math.PI;\n                let diff = Math.abs(angleDiff(th1, th2));\n                if (diff > 105 * DEGRAD && diff < 135 * DEGRAD) {\n                    let ixy1 = GeomUtil.lineIntersect(px[0], py[0], px[1], py[1], other.line.x1, other.line.y1, other.line.x2, other.line.y2);\n                    let ixy2 = GeomUtil.lineIntersect(px[0], py[0], px[2], py[2], other.line.x1, other.line.y1, other.line.x2, other.line.y2);\n                    px[1] = ixy1[0];\n                    py[1] = ixy1[1];\n                    px[2] = ixy2[0];\n                    py[2] = ixy2[1];\n                    let dx1 = px[1] - px[0], dy1 = py[1] - py[0], inv1 = 0.5 * other.size / norm_xy(dx1, dy1);\n                    px[1] += dx1 * inv1;\n                    py[1] += dy1 * inv1;\n                    let dx2 = px[2] - px[0], dy2 = py[2] - py[0], inv2 = 0.5 * other.size / norm_xy(dx2, dy2);\n                    px[2] += dx2 * inv1;\n                    py[2] += dy2 * inv1;\n                }\n            }\n        }\n        if (this.layout.getPoint(b.bto - 1).text == null && this.mol.atomAdjCount(b.bto) == 3) {\n            let other1 = null, other2 = null;\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let o = this.layout.getLine(n);\n                if (o.type == BLineType.Normal && (o.bfr == b.bto || o.bto == b.bto)) {\n                    if (other1 == null)\n                        other1 = o;\n                    else if (other2 == null)\n                        other2 = o;\n                    else {\n                        other1 = other2 = null;\n                        break;\n                    }\n                }\n            }\n            if (other1 != null && other2 != null) {\n                let th1 = Math.atan2(y1 - y2, x1 - x2);\n                let th2 = Math.atan2(other1.line.y1 - other1.line.y2, other1.line.x1 - other1.line.x2);\n                let th3 = Math.atan2(other2.line.y1 - other2.line.y2, other2.line.x1 - other2.line.x2);\n                if (b.bto == other1.bfr)\n                    th2 += Math.PI;\n                if (b.bto == other2.bfr)\n                    th3 += Math.PI;\n                let dth1 = angleDiff(th1, th2), diff1 = Math.abs(dth1);\n                let dth2 = angleDiff(th1, th3), diff2 = Math.abs(dth2);\n                let diff3 = Math.abs(angleDiff(th2, th3));\n                if (diff1 > 105 * DEGRAD && diff1 < 135 * DEGRAD ||\n                    diff2 > 105 * DEGRAD && diff2 < 135 * DEGRAD ||\n                    diff3 > 105 * DEGRAD && diff3 < 135 * DEGRAD) {\n                    if (dth1 < 0)\n                        [other1, other2] = [other2, other1];\n                    let ixy1 = GeomUtil.lineIntersect(px[0], py[0], px[1], py[1], other1.line.x1, other1.line.y1, other1.line.x2, other1.line.y2);\n                    let ixy2 = GeomUtil.lineIntersect(px[0], py[0], px[2], py[2], other2.line.x1, other2.line.y1, other2.line.x2, other2.line.y2);\n                    px = [x1, ixy1[0], x2, ixy2[0]];\n                    py = [y1, ixy1[1], y2, ixy2[1]];\n                }\n            }\n        }\n        this.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, col, true);\n    }\n    drawFusedWedge(b1, b2) {\n        const terminalPoints = (b, other) => {\n            let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n            let dx = x2 - x1, dy = y2 - y1;\n            let norm = b.head / Math.sqrt(dx * dx + dy * dy);\n            let ox = norm * dy, oy = -norm * dx;\n            let tx1 = x2 - ox, ty1 = y2 - oy, tx2 = x2 + ox, ty2 = y2 + oy;\n            let dsq1 = norm2_xy(tx1 - other.line.x1, ty1 - other.line.y1);\n            let dsq2 = norm2_xy(tx2 - other.line.x1, ty2 - other.line.y1);\n            if (dsq1 > dsq2)\n                return { outerX: tx1, outerY: ty1, innerX: tx2, innerY: ty2 };\n            else\n                return { outerX: tx2, outerY: ty2, innerX: tx1, innerY: ty1 };\n        };\n        let u = terminalPoints(b1, b2), v = terminalPoints(b2, b1);\n        let [innerX, innerY] = GeomUtil.lineIntersect(b1.line.x1, b1.line.y1, u.innerX, u.innerY, b2.line.x1, b2.line.y1, v.innerX, v.innerY);\n        let px = [b1.line.x1, u.outerX, v.outerX, b2.line.x1, innerX];\n        let py = [b1.line.y1, u.outerY, v.outerY, b2.line.y1, innerY];\n        this.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, b1.col, true);\n    }\n    drawBondDeclined(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let ext = Math.sqrt(dx * dx + dy * dy);\n        let nsteps = Math.ceil(ext * 2.5 * this.invScale);\n        let norm = head / ext;\n        let ox = norm * dy, oy = -norm * dx, invSteps = 1.0 / (nsteps + 1);\n        let holdout = this.mol.atomAdjCount(b.bto) == 1 && this.layout.getPoint(b.bto - 1).text == null ? 1 : 1 - (0.15 * this.scale) / ext;\n        for (let i = 0; i <= nsteps + 1; i++) {\n            let cx = x1 + i * dx * invSteps * holdout, cy = y1 + i * dy * invSteps * holdout;\n            let ix = ox * i * invSteps, iy = oy * i * invSteps;\n            this.vg.drawLine(cx - ix, cy - iy, cx + ix, cy + iy, col, size);\n        }\n    }\n    drawBondUnknown(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let ext = Math.sqrt(dx * dx + dy * dy);\n        let nsteps = Math.ceil(ext * 3.5 * this.invScale);\n        let norm = head / ext;\n        let ox = norm * dy, oy = -norm * dx;\n        let sz = 1 + 3 * (nsteps + 1);\n        let x = Vec.numberArray(0, sz), y = Vec.numberArray(0, sz), ctrl = Vec.booleanArray(false, sz);\n        x[0] = x1;\n        y[0] = y1;\n        ctrl[0] = false;\n        for (let i = 0, j = 1; i <= nsteps; i++, j += 3) {\n            let ax = x1 + i * dx / (nsteps + 1), ay = y1 + i * dy / (nsteps + 1);\n            let cx = x1 + (i + 1) * dx / (nsteps + 1), cy = y1 + (i + 1) * dy / (nsteps + 1);\n            let bx = (ax + cx) / 2, by = (ay + cy) / 2;\n            let sign = i % 2 == 0 ? 1 : -1;\n            x[j] = ax;\n            x[j + 1] = bx + sign * ox;\n            x[j + 2] = cx;\n            y[j] = ay;\n            y[j + 1] = by + sign * oy;\n            y[j + 2] = cy;\n            ctrl[j] = true;\n            ctrl[j + 1] = true;\n            ctrl[j + 2] = false;\n        }\n        this.vg.drawPath(x, y, ctrl, false, col, size, MetaVector.NOCOLOUR, false);\n    }\n    drawBondDotted(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size;\n        let radius = size, dist = norm_xy(dx, dy);\n        if (dist < 0.01)\n            return;\n        let nudge = 0.5 * size / dist;\n        x1 += nudge * dx;\n        y1 += nudge * dy;\n        x2 -= nudge * dx;\n        y2 -= nudge * dy;\n        dx = x2 - x1;\n        dy = y2 - y1;\n        let nsteps = Math.ceil(0.2 * dist / radius);\n        let invSteps = 1.0 / (nsteps + 1);\n        for (let i = 0; i <= nsteps + 1; i++) {\n            let r = radius;\n            if (b.type == BLineType.DotDir)\n                r *= 1 + (i * (1.0 / (nsteps + 2)) - 0.5);\n            let cx = x1 + i * dx * invSteps, cy = y1 + i * dy * invSteps;\n            this.vg.drawOval(cx, cy, r, r, MetaVector.NOCOLOUR, 0, col);\n        }\n    }\n    drawBondIncMulti(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let norm = head / Math.sqrt(dx * dx + dy * dy);\n        let ox = norm * dy, oy = -norm * dx;\n        this.vg.drawPoly([x1, x2 - ox, x2 + ox], [y1, y2 - oy, y2 + oy], col, this.scale * 0.05, MetaVector.NOCOLOUR, true);\n        if (b.type == BLineType.IncDouble) {\n            this.vg.drawLine(x1, y1, x2, y2, col, this.scale * 0.03);\n        }\n        else {\n            this.vg.drawLine(x1, y1, x2 + 0.33 * ox, y2 + 0.33 * oy, col, this.scale * 0.03);\n            this.vg.drawLine(x1, y1, x2 - 0.33 * ox, y2 - 0.33 * oy, col, this.scale * 0.03);\n        }\n    }\n}\n//# sourceMappingURL=DrawMolecule.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {MetaVector, TextAlign} from 'webmolkit/gfx/MetaVector';\nimport {ArrangeMixture, ArrangeMixtureComponent, ArrangeMixtureLine} from './ArrangeMixture';\nimport {Box} from 'webmolkit/util/Geom';\nimport {ArrangeMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {DrawMolecule} from 'webmolkit/gfx/DrawMolecule';\n\n/*\n\tDrawing a Mixfile, which has been rendered.\n*/\n\nexport class DrawMixture\n{\n\tpublic hoverIndex = -1; // component to give a faint tinting to (for hover-over effect)\n\tpublic activeIndex = -1; // component that is actively engaged with UI\n\tpublic selectedIndex = -1; // component that is passively selected\n\n\tpublic callbackDrawNameLine:(comp:ArrangeMixtureComponent, line:ArrangeMixtureLine, gfx:MetaVector, box:Box) => boolean = null;\n\n\tprivate measure:ArrangeMeasurement;\n\tprivate policy:RenderPolicy;\n\n\tprivate scale:number;\n\tprivate invScale:number;\n\n\t// --------------------- public methods ---------------------\n\n\tconstructor(private layout:ArrangeMixture, private vg:MetaVector)\n\t{\n\t\tthis.measure = layout.measure;\n\t\tthis.policy = layout.policy;\n\t\tthis.scale = layout.scale;\n\t\tthis.invScale = 1.0 / this.scale;\n\t}\n\n\t// renders the experiment, one component at a time\n\tpublic draw():void\n\t{\n\t\tfor (let comp of this.layout.components) if (comp.parentIdx >= 0)\n\t\t\tthis.drawConnection(this.layout.components[comp.parentIdx], comp);\n\n\t\tfor (let n = 0; n < this.layout.components.length; n++) this.drawComponent(n);\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\tprivate drawConnection(parent:ArrangeMixtureComponent, child:ArrangeMixtureComponent):void\n\t{\n\t\tlet x1 = parent.boundary.maxX(), x2 = child.boundary.minX();\n\t\tlet y1 = parent.boundary.midY(), y2 = child.boundary.midY();\n\t\t//let xm = 0.5 * (x1 + x2);\n\t\tlet xm = x1 + 0.25 * this.scale;\n\t\tlet ym = 0.5 * (y1 + y2);\n\t\tlet d = 4, xd = d, yd = y1 < y2 - 1 ? -d : y1 > y2 + 1 ? d : 0;\n\n\t\tlet px = [x1, xm - xd, xm, xm, xm, xm, xm + xd, x2];\n\t\tlet py = [y1, y1, y1, y1 - yd, y2 + yd, y2, y2, y2];\n\t\tlet lsz = this.scale * 0.1;\n\t\tthis.vg.drawPath(px, py, [false, false, true, false, false, true, false, false], false, 0x000000, lsz, MetaVector.NOCOLOUR, false);\n\t}\n\n\tprivate drawComponent(idx:number):void\n\t{\n\t\tlet comp = this.layout.components[idx];\n\n\t\tlet box = comp.outline.clone();\n\t\tbox.offsetBy(comp.boundary.x, comp.boundary.y);\n\t\tlet bg = 0xF8F8F8;\n\t\tif (idx == this.activeIndex) bg = 0x8296E4;\n\t\telse if (idx == this.selectedIndex) bg = 0xA9BBFF;\n\t\telse if (idx == this.hoverIndex) bg = 0xE0E0E0;\n\n\t\tthis.vg.drawRect(box.x, box.y, box.w, box.h, 0x808080, 1, bg);\n\n\t\tif (comp.molLayout) new DrawMolecule(comp.molLayout, this.vg).draw();\n\n\t\tif (comp.nameLines.length > 0)\n\t\t{\n\t\t\tlet x = box.x, cx = x + comp.nameBox.midX(), y = box.y + comp.nameBox.y;\n\t\t\tfor (let line of comp.nameLines)\n\t\t\t{\n\t\t\t\tlet wad = this.measure.measureText(line.text, comp.fontSize), h = wad[1] + 2 * wad[2];\n\t\t\t\tlet override = this.callbackDrawNameLine && this.callbackDrawNameLine(comp, line, this.vg, new Box(x, y, box.w, h));\n\t\t\t\tif (!override) this.vg.drawText(cx, y, line.text, comp.fontSize, line.col, TextAlign.Centre | TextAlign.Top);\n\t\t\t\ty += h;\n\t\t\t}\n\t\t}\n\n\t\tif (comp.collapseBox)\n\t\t{\n\t\t\tlet cbox = comp.collapseBox.clone();\n\t\t\tcbox.offsetBy(comp.boundary.x, comp.boundary.y);\n\t\t\tthis.vg.drawRect(cbox.x, cbox.y, cbox.w, cbox.h, 0x808080, 1, 0xF8F8F8);\n\t\t\tlet cx = cbox.midX(), cy = cbox.midY(), d = Math.min(cbox.w, cbox.h) * 0.4, sz = d * 0.2;\n\t\t\tthis.vg.drawLine(cx - d, cy, cx + d, cy, 0x000000, sz);\n\t\t\tif (comp.isCollapsed) this.vg.drawLine(cx, cy - d, cx, cy + d, 0x000000, sz);\n\t\t}\n\t}\n}\n\n","import { fltEqual } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { ForeignMoleculeTransient } from './ForeignMolecule';\nimport { Graph } from './Graph';\nexport var DotPathBond;\n(function (DotPathBond) {\n    DotPathBond[DotPathBond[\"O0\"] = 0] = \"O0\";\n    DotPathBond[DotPathBond[\"O01\"] = 1] = \"O01\";\n    DotPathBond[DotPathBond[\"O1\"] = 2] = \"O1\";\n    DotPathBond[DotPathBond[\"O12\"] = 3] = \"O12\";\n    DotPathBond[DotPathBond[\"O2\"] = 4] = \"O2\";\n    DotPathBond[DotPathBond[\"O23\"] = 5] = \"O23\";\n    DotPathBond[DotPathBond[\"O3\"] = 6] = \"O3\";\n    DotPathBond[DotPathBond[\"O3X\"] = 7] = \"O3X\";\n})(DotPathBond || (DotPathBond = {}));\nexport var DotPathCharge;\n(function (DotPathCharge) {\n    DotPathCharge[DotPathCharge[\"N1X\"] = -3] = \"N1X\";\n    DotPathCharge[DotPathCharge[\"N1\"] = -2] = \"N1\";\n    DotPathCharge[DotPathCharge[\"N01\"] = -1] = \"N01\";\n    DotPathCharge[DotPathCharge[\"Z0\"] = 0] = \"Z0\";\n    DotPathCharge[DotPathCharge[\"P01\"] = 1] = \"P01\";\n    DotPathCharge[DotPathCharge[\"P1\"] = 2] = \"P1\";\n    DotPathCharge[DotPathCharge[\"P1X\"] = 3] = \"P1X\";\n})(DotPathCharge || (DotPathCharge = {}));\nexport class DotPath {\n    constructor(mol) {\n        this.mol = mol;\n        this.paths = [];\n        if (mol)\n            this.calculate();\n    }\n    clone() {\n        let dup = new DotPath(null);\n        dup.mol = this.mol;\n        dup.maskBlock = this.maskBlock;\n        dup.paths = this.paths.slice(0);\n        return dup;\n    }\n    getBondOrders() {\n        const mol = this.mol;\n        let orders = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            orders.push(mol.bondOrder(n));\n        for (let path of this.paths) {\n            let fract = path.numer / path.denom;\n            for (let n = 1; n <= 5; n++)\n                if (fltEqual(fract, n))\n                    fract = n;\n            for (let b of path.bonds)\n                orders[b - 1] = fract;\n        }\n        return orders;\n    }\n    getBondClasses() {\n        const mol = this.mol;\n        let classes = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bo = mol.bondOrder(n);\n            classes.push(bo == 0 ? 0 :\n                bo == 1 ? 2 :\n                    bo == 2 ? 4 :\n                        bo == 3 ? 6 : 7);\n        }\n        for (let path of this.paths) {\n            let fract = path.numer / path.denom;\n            let bcls = fltEqual(fract, 0) ? 0 :\n                fltEqual(fract, 1) ? 2 :\n                    fltEqual(fract, 2) ? 4 :\n                        fltEqual(fract, 3) ? 6 :\n                            fract < 1 ? 1 :\n                                fract < 2 ? 3 :\n                                    fract < 3 ? 5 : 7;\n            for (let b of path.bonds)\n                classes[b - 1] = bcls;\n        }\n        return classes;\n    }\n    getChargeClasses() {\n        const mol = this.mol;\n        let classes = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let chg = mol.atomCharge(n);\n            classes.push(chg == 0 ? 0 :\n                chg == -1 ? -2 :\n                    chg == 1 ? 2 :\n                        chg < -1 ? -3 : 3);\n        }\n        for (let path of this.paths) {\n            let chg = 0;\n            for (let a of path.atoms)\n                chg += mol.atomCharge(a);\n            chg /= path.atoms.length;\n            let ccls = fltEqual(chg, 0) ? 0 :\n                fltEqual(chg, -1) ? -2 :\n                    fltEqual(chg, 1) ? 2 :\n                        chg > -1 && chg < 0 ? -1 :\n                            chg > 0 && chg < 1 ? 1 :\n                                chg < -1 ? -3 : 3;\n            for (let a of path.atoms)\n                classes[a - 1] = ccls;\n        }\n        return classes;\n    }\n    getAggregateCharges() {\n        const mol = this.mol;\n        let chg = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            chg[n - 1] = mol.atomCharge(n);\n        for (let path of this.paths) {\n            let total = 0;\n            for (let a of path.atoms)\n                total += chg[a - 1];\n            for (let a of path.atoms)\n                chg[a - 1] = total;\n        }\n        return chg;\n    }\n    toString() {\n        let str = 'blocking=' + JSON.stringify(this.maskBlock) + '; paths=' + this.paths.length;\n        for (let p of this.paths)\n            str += ' [' + p.numer + '/' + p.denom + ';a=' + JSON.stringify(p.atoms) + ';b=' + JSON.stringify(p.bonds) + ']';\n        return str;\n    }\n    calculate() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let nonsingle = Vec.booleanArray(false, na), pibonded = Vec.booleanArray(false, na), metalbonded = Vec.booleanArray(false, na);\n        let bondsum = Vec.numberArray(0, na);\n        for (let n = 0; n < na; n++)\n            bondsum[n] = mol.atomHydrogens(n + 1);\n        for (let n = 1; n <= nb; n++) {\n            let bo = mol.bondOrder(n), bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            if (bo != 1) {\n                nonsingle[bfr - 1] = true;\n                nonsingle[bto - 1] = true;\n            }\n            if (bo >= 2) {\n                pibonded[bfr - 1] = true;\n                pibonded[bto - 1] = true;\n            }\n            else {\n                let blk1 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bfr)], blk2 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bto)];\n                if (blk1 >= 3 || blk2 >= 3) {\n                    metalbonded[bfr - 1] = true;\n                    metalbonded[bto - 1] = true;\n                }\n            }\n            bondsum[bfr - 1] += bo;\n            bondsum[bto - 1] += bo;\n            if (mol.bondTransient(n).indexOf(ForeignMoleculeTransient.BondAromatic) >= 0) {\n                pibonded[bfr - 1] = true;\n                pibonded[bto - 1] = true;\n            }\n        }\n        let impliedPi = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++)\n            if (!pibonded[n - 1]) {\n                let adjpi = 0;\n                for (let adj of mol.atomAdjList(n))\n                    if (pibonded[adj - 1] || metalbonded[adj - 1])\n                        adjpi++;\n                if (adjpi >= 2)\n                    impliedPi[n - 1] = true;\n            }\n        for (let n = 0; n < na; n++)\n            if (impliedPi[n])\n                pibonded[n] = true;\n        this.maskBlock = Vec.booleanArray(false, na);\n        let maskMaybe = Vec.booleanArray(false, na);\n        const COULD_BLOCK = [\n            Chemistry.ELEMENT_H,\n            Chemistry.ELEMENT_B, Chemistry.ELEMENT_C, Chemistry.ELEMENT_N, Chemistry.ELEMENT_O, Chemistry.ELEMENT_F,\n            Chemistry.ELEMENT_Al, Chemistry.ELEMENT_Si, Chemistry.ELEMENT_P, Chemistry.ELEMENT_S, Chemistry.ELEMENT_Cl,\n            Chemistry.ELEMENT_Ga, Chemistry.ELEMENT_Ge, Chemistry.ELEMENT_As, Chemistry.ELEMENT_Se, Chemistry.ELEMENT_Br,\n            Chemistry.ELEMENT_In, Chemistry.ELEMENT_Sn, Chemistry.ELEMENT_Sb, Chemistry.ELEMENT_Te, Chemistry.ELEMENT_I,\n            Chemistry.ELEMENT_Tl, Chemistry.ELEMENT_Pb, Chemistry.ELEMENT_Bi, Chemistry.ELEMENT_Po, Chemistry.ELEMENT_At,\n        ];\n        const ACIDS = [\n            Chemistry.ELEMENT_B,\n            Chemistry.ELEMENT_Al, Chemistry.ELEMENT_Si,\n            Chemistry.ELEMENT_Ga, Chemistry.ELEMENT_Ge,\n            Chemistry.ELEMENT_In, Chemistry.ELEMENT_Sn,\n            Chemistry.ELEMENT_Tl, Chemistry.ELEMENT_Pb,\n        ];\n        const BASES = [\n            Chemistry.ELEMENT_N, Chemistry.ELEMENT_O, Chemistry.ELEMENT_F,\n            Chemistry.ELEMENT_P, Chemistry.ELEMENT_S, Chemistry.ELEMENT_Cl,\n            Chemistry.ELEMENT_As, Chemistry.ELEMENT_Se, Chemistry.ELEMENT_Br,\n            Chemistry.ELEMENT_Sb, Chemistry.ELEMENT_Te, Chemistry.ELEMENT_I,\n            Chemistry.ELEMENT_Bi, Chemistry.ELEMENT_Po, Chemistry.ELEMENT_At,\n        ];\n        skip: for (let n = 0; n < na; n++) {\n            const a = n + 1;\n            if (nonsingle[n] || pibonded[n])\n                continue;\n            if (mol.atomCharge(a) != 0 || mol.atomUnpaired(a) != 0)\n                continue;\n            const atno = mol.atomicNumber(a);\n            if (atno == 0) {\n                this.maskBlock[n] = true;\n                continue;\n            }\n            if (COULD_BLOCK.indexOf(atno) < 0)\n                continue;\n            if (bondsum[n] != Chemistry.ELEMENT_BONDING[atno])\n                continue;\n            if (ACIDS.indexOf(atno) >= 0) {\n                for (let adj of mol.atomAdjList(a))\n                    if (BASES.indexOf(mol.atomicNumber(adj)) >= 0)\n                        continue skip;\n            }\n            if (BASES.indexOf(atno) >= 0) {\n                for (let adj of mol.atomAdjList(a))\n                    if (ACIDS.indexOf(mol.atomicNumber(adj)) >= 0)\n                        continue skip;\n            }\n            maskMaybe[n] = true;\n            if (atno == Chemistry.ELEMENT_C) {\n                let hasMetal = false;\n                for (let adj of mol.atomAdjList(a))\n                    if (COULD_BLOCK.indexOf(mol.atomicNumber(adj)) < 0)\n                        hasMetal = true;\n                if (!hasMetal)\n                    this.maskBlock[n] = true;\n            }\n            else if (atno == Chemistry.ELEMENT_H) {\n                this.maskBlock[n] = true;\n            }\n        }\n        skip: for (let n = 0; n < na; n++)\n            if (maskMaybe[n] && !this.maskBlock[n]) {\n                for (let a of mol.atomAdjList(n + 1))\n                    if (!maskMaybe[a - 1])\n                        continue skip;\n                this.maskBlock[n] = true;\n            }\n        let g = Graph.fromMolecule(mol);\n        for (let n = 0; n < na; n++)\n            if (this.maskBlock[n])\n                g.isolateNode(n);\n        for (let cc of g.calculateComponentGroups()) {\n            if (cc.length == 1)\n                continue;\n            let amask = Vec.idxMask(cc, na);\n            Vec.addTo(cc, 1);\n            let p = {\n                atoms: cc,\n                bonds: [],\n                numer: 0,\n                denom: 0\n            };\n            for (let n = 1; n <= nb; n++)\n                if (amask[mol.bondFrom(n) - 1] && amask[mol.bondTo(n) - 1])\n                    p.bonds.push(n);\n            let totalHave = 0, totalWant = 0;\n            for (let a of p.atoms) {\n                let others = mol.atomHydrogens(a);\n                for (let o of mol.atomAdjList(a))\n                    if (!amask[o - 1])\n                        others++;\n                let atno = mol.atomicNumber(a);\n                let have = Chemistry.ELEMENT_VALENCE[atno] - mol.atomCharge(a) - others;\n                let want = Chemistry.ELEMENT_SHELL[atno] - Chemistry.ELEMENT_VALENCE[atno] - others;\n                totalHave += have;\n                totalWant += want;\n            }\n            let electrons = Math.min(totalHave, totalWant);\n            p.numer = electrons;\n            p.denom = 2 * p.bonds.length;\n            this.paths.push(p);\n        }\n    }\n}\n//# sourceMappingURL=DotPath.js.map","import { GeomUtil } from '../util/Geom';\nimport { angleDiff, angleDiffPos, DEGRAD, norm2_xyz, norm_xyz } from '../util/util';\nimport { Permutation, Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nclass Stereochemistry {\n    constructor(meta) {\n        this.meta = meta;\n        this.mol = meta.mol;\n        this.priority = Vec.numberArray(0, this.mol.numAtoms);\n        this.chiralTetra = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n        this.cistransBond = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numBonds);\n        this.squarePlanar = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n    }\n    calculate() {\n        this.isH = Vec.booleanArray(false, this.mol.numAtoms);\n        for (let n = this.mol.numAtoms; n >= 1; n--)\n            this.isH[n - 1] = this.mol.atomElement(n) == 'H';\n        this.buildPriority();\n        this.buildTetraChirality();\n        this.buildBondCisTrans();\n        this.buildPlanarCisTrans();\n        this.buildOctaChirality();\n    }\n    atomPriority(atom) { return this.priority[atom - 1]; }\n    atomTetraChirality(atom) { return this.chiralTetra[atom - 1]; }\n    bondSideStereo(bond) { return this.cistransBond[bond - 1]; }\n    atomPlanarStereo(atom) { return this.squarePlanar[atom - 1]; }\n    getPriorities() { return this.priority.slice(0); }\n    getAtomTetraChiral() { return this.chiralTetra.slice(0); }\n    getBondSideStereo() { return this.cistransBond.slice(0); }\n    static create(meta) {\n        let stereo = new Stereochemistry(meta);\n        stereo.calculate();\n        return stereo;\n    }\n    static rubricTetrahedral(mol, atom) {\n        if (mol.atomAdjCount(atom) < 3 || mol.atomAdjCount(atom) + mol.atomHydrogens(atom) != 4)\n            return null;\n        let adjBonds = mol.atomAdjBonds(atom);\n        let hasWedge = false;\n        for (let n = 0; n < adjBonds.length; n++) {\n            let bt = mol.bondType(adjBonds[n]);\n            if (bt == Molecule.BONDTYPE_UNKNOWN)\n                return null;\n            if (mol.bondFrom(adjBonds[n]) != atom)\n                continue;\n            if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                hasWedge = true;\n        }\n        if (!hasWedge && !mol.is3D())\n            return null;\n        let adj = mol.atomAdjList(atom);\n        let x = [0, 0, 0, 0];\n        let y = [0, 0, 0, 0];\n        let z = [0, 0, 0, 0];\n        let numShort = 0, numWedges = 0;\n        for (let n = 0; n < adjBonds.length; n++) {\n            const bfr = mol.bondFrom(adjBonds[n]), bt = mol.bondType(adjBonds[n]);\n            x[n] = mol.atomX(adj[n]) - mol.atomX(atom);\n            y[n] = mol.atomY(adj[n]) - mol.atomY(atom);\n            if (mol.is3D()) {\n                z[n] = mol.atomZ(adj[n]) - mol.atomZ(atom);\n            }\n            else if (bfr == atom) {\n                if (bt == Molecule.BONDTYPE_INCLINED) {\n                    z[n] = 1;\n                    numWedges++;\n                }\n                else if (bt == Molecule.BONDTYPE_DECLINED) {\n                    z[n] = -1;\n                    numWedges++;\n                }\n            }\n            let dsq = norm_xyz(x[n], y[n], z[n]);\n            if (dsq < 0.01 * 0.01) {\n                numShort++;\n                if (numShort > 1)\n                    return null;\n            }\n        }\n        if (adjBonds.length == 3) {\n            adj.push(0);\n            if (!mol.is3D() && numWedges == 1) {\n                let th0 = Math.atan2(y[0], x[0]), th1 = Math.atan2(y[1], x[1]), th2 = Math.atan2(y[2], x[2]);\n                let i1 = 1, i2 = 2;\n                if (angleDiffPos(th1, th0) > angleDiffPos(th2, th0)) {\n                    i2 = 1;\n                    i1 = 2;\n                }\n                x[0] = 1.5;\n                y[0] = 0;\n                x[1] = -0.75;\n                y[i1] = 1.3;\n                x[2] = -0.75;\n                y[i2] = -1.3;\n            }\n            else {\n                x[3] = -(x[0] + x[1] + x[2]);\n                y[3] = -(y[0] + y[1] + y[2]);\n                z[3] = -(z[0] + z[1] + z[2]);\n                let dsq = norm2_xyz(x[3], y[3], z[3]);\n                if (dsq < 0.01 * 0.01)\n                    return null;\n                let inv = 1.0 / Math.sqrt(dsq);\n                x[3] *= inv;\n                y[3] *= inv;\n                z[3] *= inv;\n            }\n        }\n        let one = 0, two = 0;\n        for (let i = 1; i <= 6; i++) {\n            let a = 0, b = 0;\n            if (i == 1) {\n                a = 1;\n                b = 2;\n            }\n            else if (i == 2) {\n                a = 2;\n                b = 3;\n            }\n            else if (i == 3) {\n                a = 3;\n                b = 1;\n            }\n            else if (i == 4) {\n                a = 2;\n                b = 1;\n            }\n            else if (i == 5) {\n                a = 3;\n                b = 2;\n            }\n            else if (i == 6) {\n                a = 1;\n                b = 3;\n            }\n            let xx = y[a] * z[b] - y[b] * z[a] - x[0];\n            let yy = z[a] * x[b] - z[b] * x[a] - y[0];\n            let zz = x[a] * y[b] - x[b] * y[a] - z[0];\n            if (i <= 3)\n                one += xx * xx + yy * yy + zz * zz;\n            else\n                two += xx * xx + yy * yy + zz * zz;\n        }\n        if (two > one)\n            Vec.swap(adj, 2, 3);\n        return adj;\n    }\n    static rubricSquarePlanar(mol, atom) {\n        if (mol.atomAdjCount(atom) != 4)\n            return null;\n        if (!mol.is3D()) {\n            let ninc = 0, ndec = 0;\n            for (let b of mol.atomAdjBonds(atom)) {\n                let bt = mol.bondType(b);\n                if (bt == Molecule.BONDTYPE_INCLINED)\n                    ninc++;\n                else if (bt == Molecule.BONDTYPE_DECLINED)\n                    ndec++;\n            }\n            if (ninc == 2 && ndec == 2) { }\n            else if (ninc == 2 && ndec == 0) { }\n            else if (ninc == 0 && ndec == 2) { }\n            else\n                return null;\n        }\n        let adj = mol.atomAdjList(atom);\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v1 = Vec.sub(MolUtil.atomVec3(mol, adj[0]), v0);\n        let v2 = Vec.sub(MolUtil.atomVec3(mol, adj[1]), v0);\n        let v3 = Vec.sub(MolUtil.atomVec3(mol, adj[2]), v0);\n        let v4 = Vec.sub(MolUtil.atomVec3(mol, adj[3]), v0);\n        for (let v of [v1, v2, v3, v4]) {\n            let dsq = norm2_xyz(v[0], v[1], v[2]);\n            if (dsq < 0.01 * 0.01)\n                continue;\n            let inv = 1.0 / Math.sqrt(dsq);\n            v[0] *= inv;\n            v[1] *= inv;\n            v[2] *= inv;\n        }\n        let d2 = GeomUtil.dist2(v1, v2), d3 = GeomUtil.dist2(v1, v3), d4 = GeomUtil.dist2(v1, v4);\n        if (d2 > d3 && d2 >= d4) {\n            Vec.swap(adj, 1, 2);\n            [v2, v3] = [v3, v2];\n        }\n        else if (d4 > d3) {\n            Vec.swap(adj, 3, 2);\n            [v3, v4] = [v4, v3];\n        }\n        const MIN_ANGLE = (mol.is3D() ? 80 : 45) * DEGRAD;\n        const MAX_ANGLE = (mol.is3D() ? 100 : 135) * DEGRAD;\n        const th12 = GeomUtil.acuteAngle(v1, v2);\n        if (th12 < MIN_ANGLE || th12 > MAX_ANGLE)\n            return null;\n        const th23 = GeomUtil.acuteAngle(v2, v3);\n        if (th23 < MIN_ANGLE || th23 > MAX_ANGLE)\n            return null;\n        const th34 = GeomUtil.acuteAngle(v3, v4);\n        if (th34 < MIN_ANGLE || th34 > MAX_ANGLE)\n            return null;\n        const th41 = GeomUtil.acuteAngle(v4, v1);\n        if (th41 < MIN_ANGLE || th41 > MAX_ANGLE)\n            return null;\n        return adj;\n    }\n    static rubricBipyrimidal(mol, atom) {\n        const nadj = mol.atomAdjCount(atom);\n        if (nadj != 4 && nadj != 5)\n            return null;\n        let atom2 = 0, atom3 = 0;\n        let adj = mol.atomAdjList(atom), bonds = mol.atomAdjBonds(atom);\n        if (!mol.is3D()) {\n            for (let n = 0; n < adj.length; n++) {\n                if (mol.bondType(bonds[n]) == Molecule.BONDTYPE_INCLINED) {\n                    if (atom2 > 0)\n                        return null;\n                    atom2 = adj[n];\n                }\n                else if (mol.bondType(bonds[n]) == Molecule.BONDTYPE_DECLINED) {\n                    if (atom3 > 0)\n                        return null;\n                    atom3 = adj[n];\n                }\n            }\n            if (atom2 == 0 || atom3 == 0)\n                return null;\n            let th1 = Math.atan2(mol.atomY(atom2) - mol.atomY(atom), mol.atomX(atom2) - mol.atomX(atom));\n            let th2 = Math.atan2(mol.atomY(atom3) - mol.atomY(atom), mol.atomX(atom3) - mol.atomX(atom));\n            if (Math.abs(angleDiff(th1, th2)) > 160 * DEGRAD)\n                return null;\n        }\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v = [[], [], [], [], []];\n        const THRESH = 0.1;\n        for (let n = 0; n < nadj; n++) {\n            v[n] = Vec.sub(MolUtil.atomVec3(mol, adj[n]), v0);\n            const mag = GeomUtil.magnitude(v[n]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[n], 1.0 / mag);\n            if (adj[n] == atom2)\n                v[n][2] += 1;\n            else if (adj[n] == atom3)\n                v[n][2] -= 1;\n        }\n        let atom4 = 0, atom5 = 0;\n        const ANGLE_OPPOSITE = 175 * DEGRAD;\n        for (let i = 0; i < nadj - 1; i++)\n            if (adj[i] != atom2 && adj[i] != atom3) {\n                for (let j = i + 1; j < nadj; j++)\n                    if (adj[j] != atom2 && adj[j] != atom3) {\n                        let theta = GeomUtil.acuteAngle(v[i], v[j]);\n                        if (theta > ANGLE_OPPOSITE) {\n                            if (atom4 != 0)\n                                return null;\n                            atom4 = adj[i];\n                            atom5 = adj[j];\n                        }\n                    }\n            }\n        if (mol.is3D()) {\n            for (let a of adj)\n                if (a != atom4 && a != atom5) {\n                    if (atom2 == 0)\n                        atom2 = a;\n                    else if (atom3 == 0)\n                        atom3 = a;\n                }\n        }\n        if (!atom4 || !atom5)\n            return null;\n        let v1 = null;\n        let v2 = v[adj.indexOf(atom2)];\n        let v3 = v[adj.indexOf(atom3)];\n        let v4 = v[adj.indexOf(atom4)];\n        let v5 = v[adj.indexOf(atom5)];\n        let atom1 = 0;\n        if (nadj == 5) {\n            for (let n = 0; n < nadj; n++)\n                if (adj[n] != atom2 && adj[n] != atom3 && adj[n] != atom4 && adj[n] != atom5) {\n                    atom1 = adj[n];\n                    v1 = v[n];\n                    break;\n                }\n        }\n        else {\n            v1 = [0, 0, 0];\n            v1 = Vec.sub(v1, v2);\n            v1 = Vec.sub(v1, v3);\n            const mag = GeomUtil.magnitude(v1);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v1, 1.0 / mag);\n        }\n        let v45 = Vec.sub(v5, v4);\n        let cross = GeomUtil.crossProduct(v45, v1);\n        let dsq2 = GeomUtil.dist2(cross, v2), dsq3 = GeomUtil.dist2(cross, v3);\n        if (dsq2 < dsq3)\n            return [atom1, atom2, atom3, atom4, atom5];\n        else\n            return [atom1, atom2, atom3, atom5, atom4];\n    }\n    static rubricOctahedral(mol, atom) {\n        const nadj = mol.atomAdjCount(atom);\n        if (nadj != 5 && nadj != 6)\n            return null;\n        let adj = mol.atomAdjList(atom), bonds = mol.atomAdjBonds(atom);\n        if (nadj == 5) {\n            adj.push(0);\n            bonds.push(0);\n        }\n        if (!mol.is3D()) {\n            let numWedges = 0;\n            for (let b of bonds)\n                if (b > 0) {\n                    const bt = mol.bondType(b);\n                    if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                        numWedges++;\n                }\n            if ((nadj == 5 && numWedges < 1) || (nadj == 6 && numWedges < 2))\n                return null;\n        }\n        const THRESH = 0.1;\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v = [[], [], [], [], [], []];\n        for (let n = 0; n < nadj; n++) {\n            v[n] = MolUtil.atomVec3(mol, adj[n]);\n            Vec.subFromArray(v[n], v0);\n            let mag = GeomUtil.magnitude(v[n]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[n], 1 / mag);\n            let bt = mol.bondType(bonds[n]);\n            if (bt == Molecule.BONDTYPE_INCLINED) {\n                if (mol.bondFrom(bonds[n]) == atom)\n                    v[n][2] += 1;\n                else\n                    v[n][2] -= 1;\n            }\n            else if (bt == Molecule.BONDTYPE_DECLINED) {\n                if (mol.bondFrom(bonds[n]) == atom)\n                    v[n][2] -= 1;\n                else\n                    v[n][2] += 1;\n            }\n        }\n        if (nadj == 5) {\n            v[5] = [0, 0, 0];\n            for (let n = 0; n < 5; n++)\n                Vec.subFromArray(v[5], v[n]);\n            let mag = GeomUtil.magnitude(v[5]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[5], 1 / mag);\n        }\n        let slots = [-1, -1, -1, -1, 0, 1];\n        let bestOpposite = GeomUtil.acuteAngle(v[0], v[1]);\n        for (let i = 0; i < 5; i++)\n            for (let j = (i == 0 ? 2 : i + 1); j < 6; j++) {\n                let theta = GeomUtil.acuteAngle(v[i], v[j]);\n                if (theta > bestOpposite) {\n                    slots[4] = i;\n                    slots[5] = j;\n                    bestOpposite = theta;\n                }\n            }\n        let axial = Vec.sub(v[slots[5]], v[slots[4]]);\n        let bestOrthogonal = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < 6; n++)\n            if (n != slots[4] && n != slots[5]) {\n                let delta = Math.abs((90 * DEGRAD) - GeomUtil.acuteAngle(v[n], axial));\n                if (delta < bestOrthogonal) {\n                    slots[0] = n;\n                    bestOrthogonal = delta;\n                }\n            }\n        for (let s = 1; s <= 2; s++) {\n            let cross = GeomUtil.crossProduct(axial, v[slots[s - 1]]);\n            let bestOrient = Number.POSITIVE_INFINITY;\n            for (let n = 0; n < 6; n++) {\n                if (n == slots[4] || n == slots[5] || n == slots[0] || n == slots[1])\n                    continue;\n                let delta = GeomUtil.acuteAngle(v[n], cross);\n                if (delta < bestOrient) {\n                    slots[s] = n;\n                    bestOrient = delta;\n                }\n            }\n        }\n        for (let n = 0; n < 6; n++)\n            if (slots.indexOf(n) < 0) {\n                slots[3] = n;\n                break;\n            }\n        let rubric = [0, 0, 0, 0, 0, 0];\n        for (let n = 0; n < 6; n++)\n            rubric[n] = slots[n] < 0 ? 0 : adj[slots[n]];\n        return rubric;\n    }\n    static rubricBondSides(mol, bond) {\n        const bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        const nfr = mol.atomAdjCount(bfr), nto = mol.atomAdjCount(bto);\n        if (nfr < 2 || nfr > 3 || nto < 2 || nto > 3)\n            return null;\n        let adj1 = mol.atomAdjList(bfr), adj2 = mol.atomAdjList(bto);\n        let f1 = 0, f2 = 0, t1 = 0, t2 = 0;\n        for (let i = 0; i < adj1.length; i++) {\n            if (adj1[i] != bto) {\n                if (f1 == 0)\n                    f1 = adj1[i];\n                else\n                    f2 = adj1[i];\n            }\n        }\n        for (let i = 0; i < adj2.length; i++) {\n            if (adj2[i] != bfr) {\n                if (t1 == 0)\n                    t1 = adj2[i];\n                else\n                    t2 = adj2[i];\n            }\n        }\n        if (f1 > 0 && f2 > 0 && mol.atomElement(f1) == 'H') {\n            let f = f1;\n            f1 = f2;\n            f2 = f;\n        }\n        if (t1 > 0 && t2 > 0 && mol.atomElement(t1) == 'H') {\n            let t = t1;\n            t1 = t2;\n            t2 = t;\n        }\n        let vfr = MolUtil.atomVec3(mol, bfr), vto = MolUtil.atomVec3(mol, bto);\n        let vbond = Vec.sub(vto, vfr);\n        let vf1 = Vec.sub(MolUtil.atomVec3(mol, f1), vfr), vt1 = Vec.sub(MolUtil.atomVec3(mol, t1), vto);\n        const THRESHSQ = 0.1 * 0.1;\n        let xf1 = GeomUtil.crossProduct(vf1, vbond);\n        if (GeomUtil.magnitude2(xf1) < THRESHSQ)\n            return null;\n        let xt1 = GeomUtil.crossProduct(vt1, vbond);\n        if (GeomUtil.magnitude2(xt1) < THRESHSQ)\n            return null;\n        let xf1N = Vec.neg(xf1);\n        let keepF1T1 = GeomUtil.dist2(xf1, xt1) < GeomUtil.dist2(xf1N, xt1);\n        let keepF2T1 = keepF1T1, keepF1T2 = keepF1T1, keepF2T2 = keepF1T1;\n        let vf2 = null, vt2 = null, xf2 = null, xt2 = null, xf2N = null;\n        if (f2 > 0) {\n            vf2 = Vec.sub(MolUtil.atomVec3(mol, f2), vfr);\n            if (GeomUtil.magnitude2(vf2) < THRESHSQ) {\n                if (mol.atomElement(f2) != 'H')\n                    return null;\n            }\n            else {\n                xf2 = GeomUtil.crossProduct(vf2, vbond);\n                if (GeomUtil.magnitude2(xf2) < THRESHSQ)\n                    return null;\n                xf2N = Vec.neg(xf2);\n                keepF2T1 = GeomUtil.dist2(xf2, xt1) > GeomUtil.dist2(xf2N, xt1);\n            }\n        }\n        if (t2 > 0) {\n            vt2 = Vec.sub(MolUtil.atomVec3(mol, t2), vto);\n            if (GeomUtil.magnitude2(vt2) < THRESHSQ) {\n                if (mol.atomElement(t2) != 'H')\n                    return null;\n            }\n            else {\n                xt2 = GeomUtil.crossProduct(vt2, vbond);\n                if (GeomUtil.magnitude2(xt2) < THRESHSQ)\n                    return null;\n                keepF1T2 = GeomUtil.dist2(xf1, xt2) > GeomUtil.dist2(xf1N, xt2);\n            }\n        }\n        if (xf2 != null && xt2 != null) {\n            keepF2T2 = GeomUtil.dist2(xf2, xt2) < GeomUtil.dist2(xf2N, xt2);\n        }\n        if (keepF1T1 && keepF2T1 && keepF1T2 && keepF2T2)\n            return [f1, f2, t1, t2];\n        if (!keepF1T1 && !keepF2T1 && !keepF1T2 && !keepF2T2)\n            return [f1, f2, t2, t1];\n        return null;\n    }\n    buildTetraChirality() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let haswedge = Vec.booleanArray(false, na);\n        for (let n = 1; n <= nb; n++) {\n            if (mol.bondType(n) == Molecule.BONDTYPE_INCLINED || mol.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                haswedge[mol.bondFrom(n) - 1] = true;\n        }\n        skip_atom: for (let n = 1; n <= na; n++) {\n            this.chiralTetra[n - 1] = Stereochemistry.STEREO_NONE;\n            let adj = mol.atomAdjList(n);\n            if (!(adj.length == 4 || (adj.length == 3 && mol.atomHydrogens(n) == 1)))\n                continue;\n            if (adj.length == 3 && (this.isH[adj[0] - 1] || this.isH[adj[1] - 1] || this.isH[adj[2] - 1]))\n                continue;\n            for (let i = 0; i < adj.length - 1; i++) {\n                for (let j = i + 1; j < adj.length; j++) {\n                    if (this.priority[adj[i] - 1] == this.priority[adj[j] - 1])\n                        continue skip_atom;\n                }\n            }\n            if (!haswedge[n - 1] && !mol.is3D()) {\n                this.chiralTetra[n - 1] = Stereochemistry.STEREO_UNKNOWN;\n                continue;\n            }\n            let rubric = Stereochemistry.rubricTetrahedral(mol, n);\n            if (rubric == null)\n                continue;\n            let pri = [\n                rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1],\n                rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1],\n                rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1],\n                rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1]\n            ];\n            pri = Vec.idxSort(pri);\n            let parity = Permutation.parityIdentity(pri);\n            this.chiralTetra[n - 1] = (parity & 1) == 0 ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildBondCisTrans() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let sf = [0, 0], st = [0, 0];\n        let ringMask = Vec.booleanArray(false, nb);\n        for (let rsz = 3; rsz <= 7; rsz++) {\n            for (let r of mol.findRingsOfSize(rsz)) {\n                for (let n = 0; n < r.length; n++) {\n                    let b = mol.findBond(r[n], r[n < r.length - 1 ? n + 1 : 0]);\n                    ringMask[b - 1] = true;\n                }\n            }\n        }\n        skip_bond: for (let n = 1; n <= nb; n++) {\n            this.cistransBond[n - 1] = Stereochemistry.STEREO_NONE;\n            if (mol.bondOrder(n) != 2 || this.meta.isBondAromatic(n) || ringMask[n - 1])\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let adj1 = mol.atomAdjList(bfr), adj2 = mol.atomAdjList(bto);\n            if (adj1.length <= 1 || adj2.length <= 1 || adj1.length > 3 || adj2.length > 3)\n                continue;\n            if (adj1.length == 2 && (this.isH[adj1[0] - 1] || this.isH[adj1[1] - 1]))\n                continue;\n            if (adj2.length == 2 && (this.isH[adj2[0] - 1] || this.isH[adj2[1] - 1]))\n                continue;\n            for (let i = 0; i < adj1.length - 1; i++)\n                if (adj1[i] != bfr)\n                    for (let j = i + 1; j < adj1.length; j++)\n                        if (adj1[j] != bfr)\n                            if (this.priority[adj1[i] - 1] == this.priority[adj1[j] - 1])\n                                continue skip_bond;\n            for (let i = 0; i < adj2.length - 1; i++)\n                if (adj2[i] != bto)\n                    for (let j = i + 1; j < adj2.length; j++)\n                        if (adj2[j] != bto)\n                            if (this.priority[adj2[i] - 1] == this.priority[adj2[j] - 1])\n                                continue skip_bond;\n            if (mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN) {\n                this.cistransBond[n - 1] = Stereochemistry.STEREO_UNKNOWN;\n                continue;\n            }\n            let rubric = Stereochemistry.rubricBondSides(mol, n);\n            if (rubric == null)\n                continue;\n            let pf1 = rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1];\n            let pf2 = rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1];\n            let pt1 = rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1];\n            let pt2 = rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1];\n            this.cistransBond[n - 1] = ((pf1 < pf2) == (pt1 < pt2)) ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildPlanarCisTrans() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        skip_atom: for (let n = 1; n <= na; n++) {\n            this.squarePlanar[n - 1] = Stereochemistry.STEREO_NONE;\n            if (mol.atomAdjCount(n) != 4)\n                continue;\n            if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(n)] < 3)\n                continue;\n            let adj = mol.atomAdjList(n);\n            for (let i = 0; i < adj.length; i++) {\n                let count = 0;\n                for (let j = 0; j < adj.length; j++) {\n                    if (this.priority[adj[i] - 1] == this.priority[adj[j] - 1])\n                        count++;\n                }\n                if (count >= 3)\n                    continue skip_atom;\n            }\n            let rubric = Stereochemistry.rubricSquarePlanar(mol, n);\n            if (rubric == null)\n                continue;\n            let pri = [\n                rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1],\n                rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1],\n                rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1],\n                rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1]\n            ];\n            let parity = Permutation.parityOrder(pri);\n            this.squarePlanar[n - 1] = (parity & 1) == 0 ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildOctaChirality() {\n    }\n    buildPriority() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let cipgr = [];\n        for (let n = 0; n < na; n++)\n            cipgr.push(Vec.numberArray(-1, mol.atomHydrogens(n + 1)));\n        for (let n = 1; n <= nb; n++) {\n            let bf = mol.bondFrom(n) - 1, bt = mol.bondTo(n) - 1, bo = mol.bondOrder(n);\n            if (this.meta.isBondAromatic(n))\n                bo = 2;\n            if (bf != bt)\n                for (let i = 0; i < bo; i++) {\n                    cipgr[bf].push(bt);\n                    cipgr[bt].push(bf);\n                }\n        }\n        this.priority = Vec.numberArray(0, na);\n        let anyActualH = false;\n        for (let n = 0; n < na; n++) {\n            this.priority[n] = mol.atomicNumber(n + 1);\n            if (this.priority[n] == 1)\n                anyActualH = true;\n        }\n        let prigr = [];\n        for (let n = 0; n < na; n++)\n            prigr.push([]);\n        while (true) {\n            for (let n = 0; n < na; n++) {\n                let cip = cipgr[n], pri = [];\n                for (let i = 0; i < cip.length; i++)\n                    pri.push(cip[i] < 0 ? 1 : this.priority[cip[i]]);\n                Vec.sort(pri);\n                prigr[n] = pri;\n            }\n            let groups = this.sortAndGroup(this.priority);\n            let nextpri = anyActualH ? 0 : 1;\n            let repartitioned = false;\n            for (let n = 0; n < groups.length; n++) {\n                let g = groups[n];\n                for (let p = 0; p < g.length - 1;) {\n                    const i1 = g[p], i2 = g[p + 1];\n                    let cmp = 0, sz = Math.max(prigr[i1].length, prigr[i2].length);\n                    for (let i = 0; i < sz; i++) {\n                        let v1 = i < prigr[i1].length ? prigr[i1][i] : 0, v2 = i < prigr[i2].length ? prigr[i2][i] : 0;\n                        if (v1 < v2) {\n                            cmp = -1;\n                            break;\n                        }\n                        if (v1 > v2) {\n                            cmp = 1;\n                            break;\n                        }\n                    }\n                    if (cmp > 0) {\n                        g[p] = i2;\n                        g[p + 1] = i1;\n                        if (p > 0)\n                            p--;\n                    }\n                    else\n                        p++;\n                }\n                for (let i = 0; i < g.length; i++) {\n                    if (i == 0)\n                        nextpri++;\n                    else if (prigr[g[i]].length != prigr[g[i - 1]].length) {\n                        nextpri++;\n                        repartitioned = true;\n                    }\n                    else {\n                        for (let j = 0; j < prigr[g[i]].length; j++)\n                            if (prigr[g[i]][j] != prigr[g[i - 1]][j]) {\n                                nextpri++;\n                                repartitioned = true;\n                                break;\n                            }\n                    }\n                    this.priority[g[i]] = nextpri;\n                }\n            }\n            if (!repartitioned)\n                break;\n        }\n    }\n    sortAndGroup(val) {\n        let uset = new Set();\n        for (let v of val)\n            uset.add(v);\n        let unique = Array.from(uset);\n        Vec.sort(unique);\n        let ret = [];\n        for (let n = 0; n < unique.length; n++)\n            ret.push([]);\n        for (let n = 0; n < val.length; n++) {\n            let grp = unique.indexOf(val[n]);\n            ret[grp].push(n);\n        }\n        return ret;\n    }\n}\nStereochemistry.STEREO_NONE = 0;\nStereochemistry.STEREO_POS = 1;\nStereochemistry.STEREO_NEG = 2;\nStereochemistry.STEREO_UNKNOWN = 3;\nStereochemistry.STEREO_BROKEN = 4;\nStereochemistry.RUBRIC_EQUIV_TETRA = [\n    [0, 1, 2, 3], [0, 2, 3, 1], [0, 3, 1, 2], [1, 0, 3, 2], [1, 2, 0, 3], [1, 3, 2, 0],\n    [2, 0, 1, 3], [2, 1, 3, 0], [2, 3, 0, 1], [3, 0, 2, 1], [3, 1, 0, 2], [3, 2, 1, 0]\n];\nStereochemistry.RUBRIC_EQUIV_SIDES = [\n    [0, 1, 2, 3], [1, 0, 3, 2], [2, 3, 0, 1], [3, 2, 1, 0]\n];\nStereochemistry.RUBRIC_EQUIV_SQUARE = [\n    [0, 1, 2, 3], [0, 3, 2, 1], [1, 2, 3, 0], [1, 0, 3, 2],\n    [2, 1, 0, 3], [2, 3, 0, 1], [3, 2, 1, 0], [3, 0, 1, 2]\n];\nStereochemistry.RUBRIC_EQUIV_BIPY = [\n    [0, 1, 2, 3, 4], [1, 2, 0, 3, 4], [2, 0, 1, 3, 4],\n    [0, 2, 1, 4, 3], [1, 0, 2, 4, 3], [2, 1, 0, 4, 3],\n];\nStereochemistry.RUBRIC_EQUIV_OCTA = [\n    [0, 1, 2, 3, 4, 5], [0, 3, 2, 1, 5, 4], [0, 4, 2, 5, 3, 1], [0, 5, 2, 4, 1, 3],\n    [1, 0, 3, 2, 5, 4], [1, 2, 3, 0, 4, 5], [1, 4, 3, 5, 0, 2], [1, 5, 3, 4, 2, 0],\n    [2, 1, 0, 3, 5, 4], [2, 3, 0, 1, 4, 5], [2, 4, 0, 5, 1, 3], [2, 5, 0, 4, 3, 1],\n    [3, 0, 1, 2, 4, 5], [3, 2, 1, 0, 5, 4], [3, 4, 1, 5, 2, 0], [3, 5, 1, 4, 0, 2],\n    [4, 0, 5, 2, 1, 3], [4, 1, 5, 3, 2, 0], [4, 2, 5, 0, 3, 1], [4, 3, 5, 1, 0, 2],\n    [5, 0, 4, 2, 3, 1], [5, 1, 4, 3, 0, 2], [5, 2, 4, 0, 1, 3], [5, 3, 4, 1, 2, 0]\n];\nexport { Stereochemistry };\n//# sourceMappingURL=Stereochemistry.js.map","import { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { DotPath } from '../mol/DotPath';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nimport { Stereochemistry } from '../mol/Stereochemistry';\nclass MetaMolecule {\n    constructor(mol) {\n        this.mol = mol;\n        this.atomArom = null;\n        this.bondArom = null;\n        this.rubricTetra = null;\n        this.rubricSquare = null;\n        this.rubricBipy = null;\n        this.rubricOcta = null;\n        this.rubricSides = null;\n        this.hash = null;\n        this.heavyHash = null;\n        this.uniqueElements = null;\n        this.dots = null;\n        this.piAtom = null;\n    }\n    calculateStrictAromaticity() {\n        let mol = this.mol;\n        this.atomArom = Vec.booleanArray(false, mol.numAtoms);\n        this.bondArom = Vec.booleanArray(false, mol.numBonds);\n        let rings = mol.findRingsOfSize(6);\n        const nr = rings.length;\n        if (nr == 0)\n            return;\n        this.ensurePiAtoms();\n        let mask = Vec.booleanArray(false, nr);\n        for (let n = 0; n < nr; n++) {\n            for (let i = 0; i < rings[n].length; i++) {\n                let a = rings[n][i];\n                if (!this.piAtom[a - 1]) {\n                    mask[n] = true;\n                    break;\n                }\n                let b = mol.findBond(a, rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                let bo = mol.bondOrder(b);\n                if (bo != 1 && bo != 2) {\n                    mask[n] = true;\n                    break;\n                }\n            }\n        }\n        while (true) {\n            let anyChange = false;\n            for (let n = 0; n < nr; n++)\n                if (!mask[n]) {\n                    let phase1 = true, phase2 = true;\n                    for (let i = 0; i < rings[n].length; i++) {\n                        let b = mol.findBond(rings[n][i], rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                        if (this.bondArom[b - 1])\n                            continue;\n                        let bo = mol.bondOrder(b);\n                        phase1 = phase1 && bo == (2 - (i & 1));\n                        phase2 = phase2 && bo == (1 + (i & 1));\n                    }\n                    if (!phase1 && !phase2)\n                        continue;\n                    for (let i = 0; i < rings[n].length; i++) {\n                        let b = mol.findBond(rings[n][i], rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                        this.bondArom[b - 1] = true;\n                    }\n                    mask[n] = true;\n                    anyChange = true;\n                }\n            if (!anyChange)\n                break;\n        }\n        for (let n = 0; n < this.bondArom.length; n++)\n            if (this.bondArom[n]) {\n                this.atomArom[mol.bondFrom(n + 1) - 1] = true;\n                this.atomArom[mol.bondTo(n + 1) - 1] = true;\n            }\n    }\n    calculateRelaxedAromaticity() {\n        let mol = this.mol;\n        this.atomArom = Vec.booleanArray(false, mol.numAtoms);\n        this.bondArom = Vec.booleanArray(false, mol.numBonds);\n        this.ensurePiAtoms();\n        const na = mol.numAtoms, nb = mol.numBonds;\n        let electrons = Vec.numberArray(0, na);\n        let exocyclic = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++) {\n            let atno = mol.atomicNumber(n);\n            electrons[n - 1] = (Chemistry.ELEMENT_BLOCKS[atno] == 2 ? Chemistry.ELEMENT_VALENCE[atno] : 0) - mol.atomCharge(n) - mol.atomHydrogens(n)\n                - mol.atomUnpaired(n);\n        }\n        for (let n = 1; n <= nb; n++) {\n            const bfr = mol.bondFrom(n), bto = mol.bondTo(n), bo = mol.bondOrder(n);\n            electrons[bfr - 1] -= bo;\n            electrons[bto - 1] -= bo;\n            if (bo == 2) {\n                const rblk1 = mol.atomRingBlock(bfr), rblk2 = mol.atomRingBlock(bto);\n                if (rblk1 > 0 && rblk1 != rblk2)\n                    exocyclic[bfr - 1] = true;\n                if (rblk2 > 0 && rblk2 != rblk1)\n                    exocyclic[bto - 1] = true;\n            }\n        }\n        let rings = [];\n        for (let rsz = 3; rsz <= 7; rsz++)\n            for (let rng of mol.findRingsOfSize(rsz)) {\n                let valid = true;\n                for (let n = 0; n < rsz; n++) {\n                    const a = rng[n];\n                    if (!this.piAtom[a - 1] && electrons[a - 1] < 2 && !exocyclic[a - 1]) {\n                        valid = false;\n                        break;\n                    }\n                    let b = mol.findBond(a, rng[n < rsz - 1 ? n + 1 : 0]);\n                    let bo = mol.bondOrder(b);\n                    if (bo != 1 && bo != 2) {\n                        valid = false;\n                        break;\n                    }\n                }\n                if (valid)\n                    rings.push(rng);\n            }\n        while (rings.length > 0) {\n            let anyChange = false;\n            for (let n = 0; n < rings.length; n++) {\n                let r = rings[n];\n                let paths = [0];\n                for (let i = 0; i < r.length; i++) {\n                    const a = r[i];\n                    const b1 = mol.findBond(a, r[i < r.length - 1 ? i + 1 : 0]);\n                    const b2 = mol.findBond(a, r[i > 0 ? i - 1 : r.length - 1]);\n                    if (this.bondArom[b1 - 1]) {\n                        for (let j = paths.length - 1; j >= 0; j--) {\n                            const e = paths[j] + 2;\n                            if (paths.indexOf(e) < 0)\n                                paths = Vec.append(paths, e);\n                        }\n                    }\n                    else if (mol.bondOrder(b1) == 2)\n                        Vec.addTo(paths, 2);\n                    else if (electrons[a - 1] >= 2 && mol.bondOrder(b1) == 1 && mol.bondOrder(b2) == 1)\n                        Vec.addTo(paths, 2);\n                }\n                let arom = false;\n                for (let e of paths) {\n                    if (e == 2 && r.length == 3) {\n                        arom = true;\n                        break;\n                    }\n                    if (e == 6) {\n                        arom = true;\n                        break;\n                    }\n                }\n                if (arom) {\n                    for (let i = 0; i < r.length; i++) {\n                        let a = r[i], b = mol.findBond(a, r[i < r.length - 1 ? i + 1 : 0]);\n                        this.atomArom[a - 1] = true;\n                        this.bondArom[b - 1] = true;\n                    }\n                    rings.splice(n, 1);\n                    n--;\n                    anyChange = true;\n                }\n            }\n            if (!anyChange)\n                break;\n        }\n    }\n    calculateStereoRubric() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        this.rubricTetra = new Array(na);\n        this.rubricSquare = new Array(na);\n        this.rubricBipy = new Array(na);\n        this.rubricOcta = new Array(na);\n        this.rubricSides = new Array(nb);\n        for (let n = 1; n <= na; n++) {\n            let blk = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(n)];\n            let adjc = mol.atomAdjCount(n), hc = mol.atomHydrogens(n);\n            let ninc = 0, ndec = 0;\n            for (let b of mol.atomAdjBonds(n)) {\n                if (mol.bondType(b) == Molecule.BONDTYPE_INCLINED && mol.bondFrom(b) == n)\n                    ninc++;\n                else if (mol.bondType(b) == Molecule.BONDTYPE_DECLINED && mol.bondFrom(b) == n)\n                    ndec++;\n            }\n            if (blk == 2 && ((adjc == 3 && hc == 1) || (adjc == 4 && hc == 0))) {\n                this.rubricTetra[n - 1] = Stereochemistry.rubricTetrahedral(mol, n);\n            }\n            else if (blk >= 3 && adjc == 4 && ninc == 1 && ndec == 1) {\n                this.rubricTetra[n - 1] = Stereochemistry.rubricTetrahedral(mol, n);\n            }\n            if (blk >= 3 && adjc == 4 && hc == 0) {\n                this.rubricSquare[n - 1] = Stereochemistry.rubricSquarePlanar(mol, n);\n            }\n            if (blk >= 3 && (adjc == 4 || adjc == 5) && hc == 0) {\n                this.rubricBipy[n - 1] = Stereochemistry.rubricBipyrimidal(mol, n);\n            }\n            if (blk >= 3 && (adjc == 5 || adjc == 6) && hc == 0) {\n                this.rubricOcta[n - 1] = Stereochemistry.rubricOctahedral(mol, n);\n            }\n            else if (blk == 2 && adjc == 6 && hc == 0) {\n                this.rubricOcta[n - 1] = Stereochemistry.rubricOctahedral(mol, n);\n            }\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondOrder(n) != 2 || mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN || this.isBondAromatic(n))\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let blk1 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bfr)];\n            let blk2 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bto)];\n            let adjc1 = mol.atomAdjCount(bfr), hc1 = mol.atomHydrogens(bfr);\n            let adjc2 = mol.atomAdjCount(bto), hc2 = mol.atomHydrogens(bto);\n            if (blk1 == 2 && blk2 == 2 && (adjc1 + hc1 == 3 && hc1 <= 1) && (adjc2 + hc2 == 3 && hc2 <= 1)) {\n                this.rubricSides[n - 1] = Stereochemistry.rubricBondSides(mol, n);\n            }\n        }\n    }\n    removeHydrogens() {\n        let mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let atomMask = Vec.booleanArray(true, na), bondMask = Vec.booleanArray(true, nb);\n        for (let n = 1; n <= na; n++)\n            if (MolUtil.boringHydrogen(mol, n)) {\n                atomMask[n - 1] = false;\n                bondMask[mol.atomAdjBonds(n)[0] - 1] = false;\n            }\n        if (Vec.allTrue(atomMask))\n            return;\n        mol = MolUtil.subgraphMask(mol, atomMask);\n        if (this.atomArom)\n            this.atomArom = Vec.maskGet(this.atomArom, atomMask);\n        if (this.bondArom)\n            this.bondArom = Vec.maskGet(this.bondArom, bondMask);\n        if (this.rubricTetra || this.rubricSquare || this.rubricBipy || this.rubricOcta || this.rubricSides) {\n            if (this.rubricTetra)\n                this.rubricTetra = Vec.maskGet(this.rubricTetra, atomMask);\n            if (this.rubricSquare)\n                this.rubricSquare = Vec.maskGet(this.rubricSquare, atomMask);\n            if (this.rubricBipy)\n                this.rubricBipy = Vec.maskGet(this.rubricBipy, atomMask);\n            if (this.rubricOcta)\n                this.rubricOcta = Vec.maskGet(this.rubricOcta, atomMask);\n            if (this.rubricSides)\n                this.rubricSides = Vec.maskGet(this.rubricSides, bondMask);\n            let atomMap = Vec.prepend(Vec.add(Vec.maskMap(atomMask), 1), 0);\n            for (let n = 0; n < Vec.len(this.rubricTetra); n++)\n                if (this.rubricTetra[n])\n                    this.rubricTetra[n] = Vec.idxGet(atomMap, this.rubricTetra[n]);\n            for (let n = 0; n < Vec.len(this.rubricSquare); n++)\n                if (this.rubricSquare[n])\n                    this.rubricSquare[n] = Vec.idxGet(atomMap, this.rubricSquare[n]);\n            for (let n = 0; n < Vec.len(this.rubricBipy); n++)\n                if (this.rubricBipy[n])\n                    this.rubricBipy[n] = Vec.idxGet(atomMap, this.rubricBipy[n]);\n            for (let n = 0; n < Vec.len(this.rubricOcta); n++)\n                if (this.rubricOcta[n])\n                    this.rubricOcta[n] = Vec.idxGet(atomMap, this.rubricOcta[n]);\n            for (let n = 0; n < Vec.len(this.rubricSides); n++)\n                if (this.rubricSides[n])\n                    this.rubricSides[n] = Vec.idxGet(atomMap, this.rubricSides[n]);\n        }\n    }\n    calculateSkeletonHash() {\n        if (MetaMolecule.skeletonHash == null)\n            throw 'Skeleton hash not available.';\n        this.hash = MetaMolecule.skeletonHash(this.mol);\n    }\n    calculateHeavyHash() {\n        let anyH = false;\n        for (let n = 1; n <= this.mol.numAtoms; n++)\n            if (this.mol.atomElement(n) == 'H') {\n                anyH = true;\n                break;\n            }\n        if (!anyH) {\n            this.heavyHash = this.getSkeletonHash();\n            return;\n        }\n        let hvy = this.mol.clone();\n        for (let n = hvy.numAtoms; n >= 1; n--)\n            if (hvy.atomElement(n) == 'H')\n                hvy.deleteAtomAndBonds(n);\n        this.heavyHash = MetaMolecule.skeletonHash(hvy);\n    }\n    isAtomAromatic(atom) {\n        return this.atomArom == null ? false : this.atomArom[atom - 1];\n    }\n    isBondAromatic(bond) {\n        return this.bondArom == null ? false : this.bondArom[bond - 1];\n    }\n    bondOrderArom(bond) {\n        return this.bondArom != null && this.bondArom[bond - 1] ? -1 : this.mol.bondOrder(bond);\n    }\n    getAtomAromaticity() {\n        return this.atomArom == null ? null : this.atomArom.slice(0);\n    }\n    getBondAromaticity() {\n        return this.bondArom == null ? null : this.bondArom.slice(0);\n    }\n    getSkeletonHash() {\n        if (this.hash == null)\n            this.calculateSkeletonHash();\n        return this.hash;\n    }\n    getHeavyHash() {\n        if (this.heavyHash == null)\n            this.calculateHeavyHash();\n        return this.heavyHash;\n    }\n    getDotPath() {\n        if (this.dots == null)\n            this.dots = new DotPath(this.mol);\n        return this.dots;\n    }\n    getUniqueElements() {\n        if (this.uniqueElements == null) {\n            this.uniqueElements = [];\n            for (let n = 1; n <= this.mol.numAtoms; n++) {\n                let el = this.mol.atomElement(n);\n                if (this.uniqueElements.indexOf(el) < 0)\n                    this.uniqueElements.push(el);\n            }\n        }\n        return this.uniqueElements;\n    }\n    equivalentTo(other, timeout = 1000) {\n        if (MetaMolecule.isomorphMatch == null)\n            throw 'Isomorph search unavailable.';\n        if (this.mol.numAtoms != other.mol.numAtoms || this.mol.numBonds != other.mol.numBonds)\n            return false;\n        if (this.hash == null)\n            this.calculateSkeletonHash();\n        if (other.hash == null)\n            other.calculateSkeletonHash();\n        if (this.hash != other.hash)\n            return false;\n        if (this.mol.compareTo(other.mol) == 0)\n            return true;\n        let uniq1 = this.getUniqueElements(), uniq2 = other.getUniqueElements();\n        for (let n = 0; n < uniq1.length; n++) {\n            if (!uniq2.includes(uniq1[n]))\n                return false;\n        }\n        return MetaMolecule.isomorphMatch(this, other, timeout);\n    }\n    static createRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    static createStrict(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStrictAromaticity();\n        return meta;\n    }\n    static createStrictRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStrictAromaticity();\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    static createRelaxed(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateRelaxedAromaticity();\n        return meta;\n    }\n    static createRelaxedRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateRelaxedAromaticity();\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    ensurePiAtoms() {\n        if (this.piAtom != null)\n            return;\n        this.piAtom = Vec.booleanArray(false, this.mol.numAtoms);\n        for (let n = 1; n <= this.mol.numBonds; n++)\n            if (this.mol.bondOrder(n) == 2) {\n                {\n                    this.piAtom[this.mol.bondFrom(n) - 1] = true;\n                    this.piAtom[this.mol.bondTo(n) - 1] = true;\n                }\n            }\n    }\n}\nMetaMolecule.skeletonHash = null;\nMetaMolecule.isomorphMatch = null;\nexport { MetaMolecule };\n//# sourceMappingURL=MetaMolecule.js.map","import { Chemistry } from '../mol/Chemistry';\nimport { MetaMolecule } from '../mol/MetaMolecule';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { Permutation, Vec } from '../util/Vec';\nlet crc_table = [];\nfunction make_crc_table() {\n    if (crc_table.length > 0)\n        return;\n    for (let n = 0; n < 256; n++) {\n        let c = n;\n        for (let i = 0; i < 8; i++)\n            if ((c & 1) != 0)\n                c = 0xEDB88320 ^ (c >>> 1);\n            else\n                c = (c >>> 1);\n        crc_table.push(c);\n    }\n}\nconst BOOT_CRC = 0xFFFFFFFF;\nfunction start_crc() { return BOOT_CRC; }\nfunction feed_crc(crc, byte) {\n    let idx = (crc ^ byte) & 0xFF;\n    return crc_table[idx] ^ (crc >>> 8);\n}\nfunction end_crc(crc) { return crc ^ BOOT_CRC; }\nclass CircularFingerprints {\n    constructor(meta, kind) {\n        this.meta = meta;\n        this.kind = kind;\n        this.hookApplyNewFP = null;\n        this.hookConsiderNewFP = null;\n        this.identity = [];\n        this.resolvedChiral = [];\n        this.atomGroup = [];\n        this.fplist = [];\n        this.amask = [];\n        this.atomAdj = [];\n        this.bondAdj = [];\n        make_crc_table();\n    }\n    calculate() {\n        let mol = this.meta.mol, na = mol.numAtoms;\n        this.identity = Vec.numberArray(0, na);\n        this.resolvedChiral = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++)\n            this.atomGroup.push([]);\n        this.amask = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++) {\n            this.amask[n] = mol.atomicNumber(n + 1) >= 2 && !MolUtil.hasAbbrev(mol, n + 1);\n            this.atomAdj.push([]);\n            this.bondAdj.push([]);\n        }\n        for (let n = 0; n < na; n++) {\n            if (!this.amask[n])\n                continue;\n            this.atomAdj[n] = mol.atomAdjList(n + 1);\n            this.bondAdj[n] = mol.atomAdjBonds(n + 1);\n            for (let i = this.atomAdj[n].length - 1; i >= 0; i--)\n                if (!this.amask[this.atomAdj[n][i] - 1]) {\n                    this.atomAdj[n].splice(i, 1);\n                    this.bondAdj[n].splice(i, 1);\n                }\n        }\n        for (let n = 0; n < na; n++)\n            if (this.amask[n]) {\n                this.identity[n] = this.initialIdentityECFP(n + 1);\n                this.atomGroup[n] = [n + 1];\n                this.applyNewFP({ hashCode: this.identity[n], iteration: 0, atoms: this.atomGroup[n], centralAtom: n + 1 });\n            }\n        let niter = this.kind;\n        for (let iter = 1; iter <= niter; iter++) {\n            let newident = Vec.numberArray(0, na);\n            for (let n = 0; n < na; n++)\n                if (this.amask[n])\n                    newident[n] = this.circularIterate(iter, n + 1);\n            this.identity = newident;\n            for (let n = 0; n < na; n++)\n                if (this.amask[n]) {\n                    this.atomGroup[n] = this.growAtoms(this.atomGroup[n]);\n                    this.considerNewFP({ hashCode: this.identity[n], iteration: iter, atoms: this.atomGroup[n], centralAtom: n + 1 });\n                }\n        }\n    }\n    static create(meta, kind) {\n        if (meta instanceof Molecule)\n            meta = MetaMolecule.createStrictRubric(meta);\n        let circ = new CircularFingerprints(meta, kind);\n        circ.calculate();\n        return circ;\n    }\n    getMolecule() { return this.meta.mol; }\n    get numFP() { return this.fplist.length; }\n    getFP(idx) { return this.fplist[idx]; }\n    getFingerprints() { return this.fplist.slice(0); }\n    getUniqueHashes() {\n        let hashes = new Set();\n        for (let fp of this.fplist)\n            hashes.add(fp.hashCode);\n        return Vec.sorted(Array.from(hashes));\n    }\n    getFoldedHashes(maxBits) {\n        let andBits = maxBits - 1;\n        let hashes = new Set();\n        for (let fp of this.fplist)\n            hashes.add(fp.hashCode & andBits);\n        return Vec.sorted(Array.from(hashes));\n    }\n    static tanimoto(hash1, hash2) {\n        let shared = 0, total = 0;\n        let sz1 = hash1.length, sz2 = hash2.length;\n        if (sz1 == 0 && sz2 == 0)\n            return 0;\n        let i1 = 0, i2 = 0;\n        while (i1 < sz1 || i2 < sz2) {\n            if (i1 == sz1) {\n                total += sz2 - i2;\n                break;\n            }\n            if (i2 == sz2) {\n                total += sz1 - i1;\n                break;\n            }\n            let v1 = hash1[i1], v2 = hash2[i2];\n            if (v1 == v2) {\n                shared += 1;\n                i1 += 1;\n                i2 += 1;\n            }\n            else if (v1 < v2)\n                i1 += 1;\n            else\n                i2 += 1;\n            total += 1;\n        }\n        return shared / total;\n    }\n    initialIdentityECFP(atom) {\n        const mol = this.meta.mol;\n        let adj = mol.atomAdjList(atom);\n        let nheavy = 0, nhydr = mol.atomHydrogens(atom);\n        for (let a of adj)\n            if (mol.atomElement(a) == 'H')\n                nhydr++;\n            else\n                nheavy++;\n        let atno = mol.atomicNumber(atom);\n        let degree = Math.max(0, Chemistry.ELEMENT_BONDING[atno] - nhydr);\n        let chg = mol.atomCharge(atom);\n        let inring = mol.atomRingBlock(atom) > 0 ? 1 : 0;\n        let crc = start_crc();\n        crc = feed_crc(crc, (nheavy << 4) | degree);\n        crc = feed_crc(crc, atno);\n        crc = feed_crc(crc, chg + 0x80);\n        crc = feed_crc(crc, (nhydr << 4) | inring);\n        return end_crc(crc);\n    }\n    circularIterate(iter, atom) {\n        let adj = this.atomAdj[atom - 1], adjb = this.bondAdj[atom - 1];\n        let seq = Vec.numberArray(0, 2 + 2 * adj.length);\n        seq[0] = iter;\n        seq[1] = this.identity[atom - 1];\n        for (let n = 0; n < adj.length; n++) {\n            seq[2 * n + 2] = this.meta.isBondAromatic(adjb[n]) ? 0xF : this.meta.mol.bondOrder(adjb[n]);\n            seq[2 * n + 3] = this.identity[adj[n] - 1];\n        }\n        let p = 0;\n        while (p < adj.length - 1) {\n            let i = 2 + 2 * p;\n            if (seq[i] > seq[i + 2] || (seq[i] == seq[i + 2] && seq[i + 1] > seq[i + 3])) {\n                Vec.swap(seq, i, i + 2);\n                Vec.swap(seq, i + 1, i + 3);\n                if (p > 0)\n                    p--;\n            }\n            else\n                p++;\n        }\n        let crc = start_crc();\n        for (let n = 0; n < seq.length; n += 2) {\n            crc = feed_crc(crc, seq[n]);\n            let v = seq[n + 1];\n            crc = feed_crc(crc, v >> 24);\n            crc = feed_crc(crc, (v >> 16) & 0xFF);\n            crc = feed_crc(crc, (v >> 8) & 0xFF);\n            crc = feed_crc(crc, v & 0xFF);\n        }\n        if (!this.resolvedChiral[atom - 1] && Vec.len(this.meta.rubricTetra) > 0 && this.meta.rubricTetra[atom - 1] != null) {\n            let ru = this.meta.rubricTetra[atom - 1];\n            let par = [\n                ru[0] == 0 ? 0 : this.identity[ru[0] - 1],\n                ru[1] == 0 ? 0 : this.identity[ru[1] - 1],\n                ru[2] == 0 ? 0 : this.identity[ru[2] - 1],\n                ru[3] == 0 ? 0 : this.identity[ru[3] - 1]\n            ];\n            if (par[0] != par[1] && par[0] != par[2] && par[0] != par[3] && par[1] != par[2] && par[1] != par[3] && par[2] != par[3]) {\n                crc = feed_crc(crc, Permutation.parityOrder(par) + 1);\n                this.resolvedChiral[atom - 1] = true;\n            }\n        }\n        return end_crc(crc);\n    }\n    growAtoms(atoms) {\n        let mask = Vec.booleanArray(false, this.meta.mol.numAtoms);\n        for (let n = 0; n < atoms.length; n++) {\n            mask[atoms[n] - 1] = true;\n            for (let a of this.atomAdj[atoms[n] - 1])\n                mask[a - 1] = true;\n        }\n        return Vec.add(Vec.maskIdx(mask), 1);\n    }\n    applyNewFP(newFP) {\n        if (this.hookConsiderNewFP)\n            this.hookConsiderNewFP(newFP);\n        if (this.hookApplyNewFP)\n            this.hookApplyNewFP(newFP);\n        this.fplist.push(newFP);\n    }\n    considerNewFP(newFP) {\n        if (this.hookConsiderNewFP)\n            this.hookConsiderNewFP(newFP);\n        let hit = -1;\n        let fp = null;\n        for (let n = 0; n < this.fplist.length; n++) {\n            let lookFP = this.fplist[n];\n            if (Vec.equals(lookFP.atoms, newFP.atoms)) {\n                fp = lookFP;\n                hit = n;\n                break;\n            }\n        }\n        if (hit < 0) {\n            this.fplist.push(newFP);\n            return;\n        }\n        if (fp.iteration < newFP.iteration || fp.hashCode < newFP.hashCode)\n            return;\n        this.fplist[hit] = newFP;\n        if (this.hookApplyNewFP)\n            this.hookApplyNewFP(newFP);\n    }\n}\nCircularFingerprints.CLASS_ECFP0 = 0;\nCircularFingerprints.CLASS_ECFP2 = 1;\nCircularFingerprints.CLASS_ECFP4 = 2;\nCircularFingerprints.CLASS_ECFP6 = 3;\nexport { CircularFingerprints };\n//# sourceMappingURL=CircularFingerprints.js.map","import { deepClone, findNode, findNodes, nodeText } from '../util/util';\nimport { XML } from '../util/XML';\nimport { DataSheet } from '../ds/DataSheet';\nimport { Molecule } from '../mol/Molecule';\nimport { MoleculeStream } from './MoleculeStream';\nexport class DataSheetStream {\n    static readXML(strXML) {\n        let xmlDoc;\n        if (XML.customParser)\n            xmlDoc = new XML.customParser().parseFromString(strXML, 'application/xml');\n        else\n            xmlDoc = new DOMParser().parseFromString(strXML, 'application/xml');\n        if (xmlDoc == null)\n            return null;\n        let root = xmlDoc.documentElement;\n        if (root == null)\n            return null;\n        let ds = new DataSheet();\n        let summary = findNode(root, 'Summary');\n        if (summary == null)\n            return null;\n        ds.title = nodeText(findNode(summary, 'Title'));\n        ds.description = nodeText(findNode(summary, 'Description'));\n        let extRoot = findNode(root, 'Extension');\n        if (extRoot != null) {\n            let extList = findNodes(extRoot, 'Ext');\n            for (let n = 0; n < extList.length; n++) {\n                let ext = extList[n];\n                ds.appendExtension(ext.getAttribute('name'), ext.getAttribute('type'), nodeText(ext));\n            }\n        }\n        let header = findNode(root, 'Header');\n        let numCols = parseInt(header.getAttribute('ncols'));\n        let colList = findNodes(header, 'Column');\n        if (colList.length != numCols)\n            return null;\n        for (let n = 0; n < numCols; n++) {\n            let col = colList[n];\n            let id = parseInt(col.getAttribute('id'));\n            if (id != n + 1)\n                return null;\n            ds.appendColumn(col.getAttribute('name'), col.getAttribute('type'), nodeText(col));\n        }\n        let rowidx = 0;\n        for (let row of findNodes(findNode(root, 'Content'), 'Row')) {\n            if (parseInt(row.getAttribute('id')) != rowidx + 1)\n                return null;\n            ds.appendRow();\n            for (let col of findNodes(row, 'Cell')) {\n                let colidx = parseInt(col.getAttribute('id')) - 1;\n                let ct = ds.colType(colidx), val = nodeText(col);\n                if (val == '') { }\n                else if (ct == \"molecule\")\n                    ds.setObject(rowidx, colidx, val);\n                else if (ct == \"string\")\n                    ds.setString(rowidx, colidx, val);\n                else if (ct == \"real\")\n                    ds.setReal(rowidx, colidx, parseFloat(val));\n                else if (ct == \"integer\")\n                    ds.setInteger(rowidx, colidx, parseInt(val));\n                else if (ct == \"boolean\")\n                    ds.setBoolean(rowidx, colidx, val == 'true' ? true : val == 'false' ? false : null);\n                else if (ct == \"extend\")\n                    ds.setExtend(rowidx, colidx, val);\n                col = col.nextElementSibling;\n                colidx++;\n            }\n            row = row.nextElementSibling;\n            rowidx++;\n        }\n        return ds;\n    }\n    static readJSON(json) {\n        if (!json.colData || !json.rowData)\n            throw 'Not a JSON-formatted datasheet.';\n        return new DataSheet(deepClone(json));\n    }\n    static writeXML(ds) {\n        let xml;\n        if (XML.customParser)\n            xml = new XML.customParser().parseFromString('<DataSheet/>', 'application/xml');\n        else\n            xml = new DOMParser().parseFromString('<DataSheet/>', 'application/xml');\n        let summary = xml.createElement('Summary');\n        xml.documentElement.appendChild(summary);\n        let title = xml.createElement('Title'), descr = xml.createElement('Description');\n        summary.appendChild(title);\n        title.appendChild(xml.createTextNode(ds.title));\n        summary.appendChild(descr);\n        descr.appendChild(xml.createCDATASection(ds.description));\n        let extension = xml.createElement('Extension');\n        xml.documentElement.appendChild(extension);\n        for (let n = 0; n < ds.numExtensions; n++) {\n            let ext = xml.createElement('Ext');\n            extension.appendChild(ext);\n            ext.setAttribute('name', ds.getExtName(n));\n            ext.setAttribute('type', ds.getExtType(n));\n            ext.appendChild(xml.createCDATASection(ds.getExtData(n)));\n        }\n        let header = xml.createElement('Header');\n        xml.documentElement.appendChild(header);\n        header.setAttribute('nrows', ds.numRows.toString());\n        header.setAttribute('ncols', ds.numCols.toString());\n        for (let n = 0; n < ds.numCols; n++) {\n            let column = xml.createElement('Column');\n            header.appendChild(column);\n            column.setAttribute('id', (n + 1).toString());\n            column.setAttribute('name', ds.colName(n));\n            column.setAttribute('type', ds.colType(n));\n            column.appendChild(xml.createTextNode(ds.colDescr(n)));\n        }\n        let content = xml.createElement('Content');\n        xml.documentElement.appendChild(content);\n        for (let r = 0; r < ds.numRows; r++) {\n            let row = xml.createElement('Row');\n            row.setAttribute('id', (r + 1).toString());\n            content.appendChild(row);\n            for (let c = 0; c < ds.numCols; c++) {\n                let cell = xml.createElement('Cell');\n                cell.setAttribute('id', (c + 1).toString());\n                row.appendChild(cell);\n                let ct = ds.colType(c);\n                let txtNode = null;\n                if (ds.isNull(r, c)) { }\n                else if (ct == \"molecule\") {\n                    let obj = ds.getObject(r, c);\n                    if (obj instanceof Molecule)\n                        obj = MoleculeStream.writeNative(obj);\n                    txtNode = xml.createCDATASection(obj);\n                }\n                else if (ct == \"string\")\n                    txtNode = xml.createCDATASection(ds.getString(r, c));\n                else if (ct == \"real\")\n                    txtNode = xml.createTextNode(ds.getReal(r, c).toString());\n                else if (ct == \"integer\")\n                    txtNode = xml.createTextNode(ds.getInteger(r, c).toString());\n                else if (ct == \"boolean\")\n                    txtNode = xml.createTextNode(ds.getBoolean(r, c).toString());\n                else if (ct == \"extend\")\n                    txtNode = xml.createCDATASection(ds.getExtend(r, c));\n                if (txtNode != null)\n                    cell.appendChild(txtNode);\n            }\n        }\n        if (XML.customSerial)\n            return new XML.customSerial().serializeToString(xml.documentElement);\n        else\n            return new XMLSerializer().serializeToString(xml.documentElement);\n    }\n    static writeJSON(ds) {\n        let data = ds.data;\n        let nrow = ds.numRows, ncol = ds.numCols;\n        let rowData = new Array(nrow);\n        for (let n = 0; n < nrow; n++)\n            rowData[n] = new Array(ncol);\n        for (let c = 0; c < ncol; c++) {\n            let doConvert = ds.colType(c) == \"molecule\";\n            for (let r = 0; r < nrow; r++) {\n                let val = data.rowData[r][c];\n                if (val != null && doConvert)\n                    val = val.toString();\n                rowData[r][c] = val;\n            }\n        }\n        let json = {\n            title: data.title,\n            description: data.description,\n            colData: deepClone(data.colData),\n            rowData: rowData,\n            extData: deepClone(data.extData),\n        };\n        return json;\n    }\n}\n//# sourceMappingURL=DataSheetStream.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CircularFingerprints } from '../calc/CircularFingerprints';\nimport { DEGRAD, escapeHTML, norm_xy } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { DataSheetStream } from '../io/DataSheetStream';\nimport { MetaMolecule } from '../mol/MetaMolecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport dsRings from '../res/data/templates/rings.ds';\nimport dsTermGrp from '../res/data/templates/termgrp.ds';\nimport dsFuncGrp from '../res/data/templates/funcgrp.ds';\nimport dsProtGrp from '../res/data/templates/protgrp.ds';\nimport dsNonPlRings from '../res/data/templates/nonplrings.ds';\nimport dsLargeRings from '../res/data/templates/largerings.ds';\nimport dsCrownEthers from '../res/data/templates/crownethers.ds';\nimport dsLigMonodent from '../res/data/templates/ligmonodent.ds';\nimport dsLigBident from '../res/data/templates/ligbident.ds';\nimport dsLigTrident from '../res/data/templates/ligtrident.ds';\nimport dsLigMultident from '../res/data/templates/ligmultident.ds';\nimport dsCageCmplx from '../res/data/templates/cagecmplx.ds';\nimport dsAminoAcids from '../res/data/templates/aminoacids.ds';\nimport dsBiomolecules from '../res/data/templates/biomolecules.ds';\nimport dsSaccharides from '../res/data/templates/saccharides.ds';\nconst TEMPLATE_SOURCE = {\n    'rings': dsRings,\n    'termgrp': dsTermGrp,\n    'funcgrp': dsFuncGrp,\n    'protgrp': dsProtGrp,\n    'nonplrings': dsNonPlRings,\n    'largerings': dsLargeRings,\n    'crownethers': dsCrownEthers,\n    'ligmonodent': dsLigMonodent,\n    'ligbident': dsLigBident,\n    'ligtrident': dsLigTrident,\n    'ligmultident': dsLigMultident,\n    'cagecmplx': dsCageCmplx,\n    'aminoacids': dsAminoAcids,\n    'biomolecules': dsBiomolecules,\n    'saccharides': dsSaccharides,\n};\nclass AbbrevContainer {\n    constructor() {\n        this.abbrevs = [];\n    }\n    static getTemplateKeys() { return Object.keys(TEMPLATE_SOURCE); }\n    static getTemplateData(key) { return TEMPLATE_SOURCE[key]; }\n    static needsSetup() { return !this.main; }\n    static setupData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.main)\n                return;\n            this.main = new AbbrevContainer();\n            for (let key of this.getTemplateKeys()) {\n                let dsstr = this.getTemplateData(key);\n                let ds = DataSheetStream.readXML(dsstr);\n                let colMol = ds.firstColOfType(\"molecule\"), colAbbrev = ds.findColByName('Abbrev', \"string\");\n                if (colMol < 0 || colAbbrev < 0)\n                    continue;\n                for (let n = 0; n < ds.numRows; n++) {\n                    let frag = ds.getMoleculeClone(n, colMol), name = ds.getString(n, colAbbrev);\n                    if (!frag || !name)\n                        continue;\n                    let attcount = 0, firstConn = 0;\n                    for (let i = 1; i <= frag.numAtoms; i++)\n                        if (frag.atomElement(i) == MolUtil.TEMPLATE_ATTACHMENT) {\n                            if (firstConn == 0)\n                                firstConn = i;\n                            frag.setAtomElement(i, MolUtil.ABBREV_ATTACHMENT);\n                            attcount++;\n                        }\n                    if (attcount != 1)\n                        continue;\n                    if (firstConn > 1)\n                        frag.swapAtoms(1, firstConn);\n                    this.main.submitAbbreviation(name, frag);\n                }\n            }\n        });\n    }\n    getAbbrevs() {\n        return this.abbrevs.slice(0);\n    }\n    submitAbbreviation(name, infrag, promote = false) {\n        let frag = infrag.clone();\n        this.submitFragment(name, frag, promote);\n    }\n    submitMolecule(inmol, promote = false) {\n        let mol = inmol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let frag = MolUtil.getAbbrev(mol, n);\n            if (!frag)\n                continue;\n            this.submitFragment(mol.atomElement(n), frag, promote);\n        }\n    }\n    substituteAbbrevName(mol, atom) {\n        let frag = MolUtil.getAbbrev(mol, atom);\n        if (!frag)\n            return false;\n        let fragExp = MolUtil.expandedAbbrevs(frag);\n        let fragMF = MolUtil.molecularFormula(fragExp);\n        let fragFP = CircularFingerprints.create(MetaMolecule.createStrictRubric(fragExp), CircularFingerprints.CLASS_ECFP6).getUniqueHashes();\n        for (let abbrev of this.abbrevs)\n            if (abbrev.frag.numAtoms == frag.numAtoms) {\n                let match = CoordUtil.sketchEquivalent(frag, abbrev.frag);\n                if (!match) {\n                    let afragExp = MolUtil.expandedAbbrevs(abbrev.frag);\n                    if (fragMF == MolUtil.molecularFormula(afragExp)) {\n                        let afragFP = CircularFingerprints.create(MetaMolecule.createStrictRubric(afragExp), CircularFingerprints.CLASS_ECFP6).getUniqueHashes();\n                        if (Vec.equals(fragFP, afragFP))\n                            match = true;\n                    }\n                }\n                if (match) {\n                    mol.setAtomElement(atom, abbrev.name);\n                    return true;\n                }\n            }\n        return false;\n    }\n    submitFragment(name, frag, promote) {\n        if (name == '?')\n            return;\n        let vx = 0, vy = 0;\n        let adj = frag.atomAdjList(1);\n        for (let a of adj) {\n            vx += frag.atomX(a) - frag.atomX(1);\n            vy += frag.atomY(a) - frag.atomY(1);\n        }\n        if (adj.length > 1) {\n            let inv = 1.0 / adj.length;\n            vx *= inv;\n            vy *= inv;\n        }\n        if (norm_xy(vx, vy) > 0.1 * 0.1) {\n            let theta = Math.atan2(vy, vx);\n            if (Math.abs(theta) > 2 * DEGRAD)\n                CoordUtil.rotateMolecule(frag, -theta);\n        }\n        let hit = -1;\n        for (let n = 0; n < this.abbrevs.length; n++) {\n            let a = this.abbrevs[n];\n            if (a.name != name)\n                continue;\n            hit = n;\n            break;\n        }\n        let [html, search] = this.formatAbbrevLabel(name);\n        let abv = { name, frag, nameHTML: html, nameSearch: search };\n        if (hit < 0) {\n            if (promote)\n                this.abbrevs.unshift(abv);\n            else\n                this.abbrevs.push(abv);\n        }\n        else {\n            if (promote && hit > 0) {\n                this.abbrevs.splice(hit, 1);\n                this.abbrevs.unshift(abv);\n            }\n            else\n                this.abbrevs[hit] = abv;\n        }\n    }\n    formatAbbrevLabel(name) {\n        let html = '', search = '';\n        let append = (bit, tag) => {\n            if (tag)\n                html += '<' + tag + '>';\n            html += escapeHTML(bit);\n            search += bit;\n            if (tag)\n                html += '</' + tag + '>';\n        };\n        for (let bit of name.split('|')) {\n            while (true) {\n                let match = bit.match(/^(.*?)\\{(.*?)\\}(.*)$/);\n                if (!match)\n                    break;\n                let pre = match[1], mid = match[2], post = match[3];\n                append(pre, null);\n                if (mid.startsWith('^'))\n                    append(mid.substring(1), 'sup');\n                else\n                    append(mid, 'sub');\n                bit = post;\n            }\n            append(bit, null);\n        }\n        return [html, search.toLowerCase()];\n    }\n}\nAbbrevContainer.main = null;\nexport { AbbrevContainer };\n//# sourceMappingURL=AbbrevContainer.js.map","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Small Rings</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"24\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template Name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation Code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,3)\\nC=1.7500,-6.1500;0,0,i2\\nC=2.5000,-7.4490;0,0,i2\\nC=1.0000,-7.4490;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclopropane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,4)\\nC=3.6500,-0.9500;0,0,i2\\nC=3.6500,-2.4500;0,0,i2\\nC=5.1500,-2.4500;0,0,i2\\nC=5.1500,-0.9500;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclobutane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=0.7500,2.3100;0,0,i2\\nC=-0.4600,1.4300;0,0,i2\\nC=0.0000,0.0000;0,0,i2\\nC=1.9600,1.4300;0,0,i2\\nC=1.5000,0.0000;0,0,i2\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclopentane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=4.3700,-7.8550;0,0,i2\\nC=3.6200,-10.1650;0,0,i1\\nC=3.1600,-8.7350;0,0,i1\\nC=5.5800,-8.7350;0,0,i1\\nC=5.1200,-10.1650;0,0,i1\\n2-3=2,0\\n3-1=1,0\\n1-4=1,0\\n4-5=2,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclopentadiene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=3.9490,-2.3000;0,0,i2\\nC=2.6500,-3.0500;0,0,i2\\nC=2.6500,-4.5500;0,0,i2\\nC=3.9490,-5.3000;0,0,i2\\nC=5.2481,-4.5500;0,0,i2\\nC=5.2481,-3.0500;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclohexane1]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[Cy]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=1.5000,-3.6500;0,0,i2\\nC=2.7990,-3.2500;0,0,i2\\nC=2.2500,-2.3510;0,0,i2\\nC=4.0981,-4.0000;0,0,i2\\nC=3.5490,-3.1010;0,0,i2\\nC=4.8481,-2.3510;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclohexane2]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=-0.2500,-2.1490;0,0,i2\\nC=0.6000,-1.2500;0,0,i2\\nC=2.1500,-1.2500;0,0,i2\\nC=3.0000,-2.1490;0,0,i2\\nC=2.2500,-0.4990;0,0,i2\\nC=0.4500,-0.4990;0,0,i2\\n1-2=1,0\\n3-2=1,0\\n3-4=1,0\\n4-5=1,0\\n1-6=1,0\\n6-5=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclohexane3]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=6.1000,0.2500;0,0,i1\\nC=4.8010,-0.5000;0,0,i1\\nC=7.3990,-0.5000;0,0,i1\\nC=4.8010,-2.0000;0,0,i1\\nC=6.1000,-2.7500;0,0,i1\\nC=7.3990,-2.0000;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[benzene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[Ph]]></Cell>\\n  </Row>\\n  <Row id=\\\"9\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nC=0.7400,3.2800;0,0,i2\\nC=0.0000,0.0000;0,0,i2\\nC=-0.9400,1.1700;0,0,i2\\nC=-0.6100,2.6300;0,0,i2\\nC=2.0900,2.6300;0,0,i2\\nC=2.4200,1.1700;0,0,i2\\nC=1.4800,0.0000;0,0,i2\\n3-2=1,0\\n3-4=1,0\\n4-1=1,0\\n5-1=1,0\\n5-6=1,0\\n6-7=1,0\\n7-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cycloheptane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"10\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nC=0.0000,3.6200;0,0,i2\\nC=0.0000,0.0000;0,0,i2\\nC=-1.0600,1.0600;0,0,i2\\nC=-1.0600,2.5600;0,0,i2\\nC=1.5000,3.6200;0,0,i2\\nC=2.5600,2.5600;0,0,i2\\nC=2.5600,1.0600;0,0,i2\\nC=1.5000,0.0000;0,0,i2\\n2-3=1,0\\n3-4=1,0\\n4-1=1,0\\n1-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclooctane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"11\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nC=1.2510,-1.4500;0,0,i1\\nC=-0.0481,-2.2000;0,0,i1\\nC=2.5500,-2.2000;0,0,i0\\nC=-0.0481,-3.7000;0,0,i1\\nC=1.2510,-4.4500;0,0,i1\\nC=2.5500,-3.7000;0,0,i0\\nC=3.9713,-1.7306;0,0,i2\\nC=4.8537,-2.9389;0,0,i2\\nC=3.9779,-4.1593;0,0,i2\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-6=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[dihydroindene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"12\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,11)\\nC=2.5990,-2.5500;0,0,i1\\nC=1.3000,-3.3000;0,0,i1\\nC=1.3000,-4.8000;0,0,i1\\nC=2.5990,-5.5500;0,0,i1\\nC=3.8981,-4.8000;0,0,i0\\nC=3.8981,-3.3000;0,0,i0\\nC=5.1971,-2.5500;0,0,i1\\nC=5.1971,-5.5500;0,0,i1\\nC=6.4962,-4.8000;0,0,i1\\nC=6.4962,-3.3000;0,0,i1\\n2-3=2,0\\n2-1=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=2,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[napthalene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"13\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,15)\\nC=-0.1824,-4.7254;0,0,i1\\nC=-1.2065,-5.8214;0,0,i1\\nC=1.2788,-5.0643;0,0,i0\\nC=-0.7693,-7.2563;0,0,i1\\nC=0.6919,-7.5952;0,0,i1\\nC=1.7160,-6.4992;0,0,i0\\nC=2.5017,-4.2011;0,0,i2\\nC=3.6979,-5.0997;0,0,i0\\nC=3.2158,-6.5224;0,0,i0\\nC=5.1689,-4.8063;0,0,i1\\nC=6.1585,-5.9336;0,0,i1\\nC=4.2061,-7.6477;0,0,i1\\nC=5.6772,-7.3542;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-6=1,0\\n10-11=1,0\\n10-8=2,0\\n9-12=2,0\\n12-13=1,0\\n13-11=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[fluoroscene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"14\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,16)\\nC=2.5990,-2.5500;0,0,i1\\nC=1.3000,-3.3000;0,0,i1\\nC=1.3000,-4.8000;0,0,i1\\nC=2.5990,-5.5500;0,0,i1\\nC=3.8981,-4.8000;0,0,i0\\nC=3.8981,-3.3000;0,0,i0\\nC=5.1971,-2.5500;0,0,i1\\nC=5.1971,-5.5500;0,0,i1\\nC=6.4962,-4.8000;0,0,i0\\nC=6.4962,-3.3000;0,0,i0\\nC=7.7952,-2.5500;0,0,i1\\nC=7.7952,-5.5500;0,0,i1\\nC=9.0943,-4.8000;0,0,i1\\nC=9.0943,-3.3000;0,0,i1\\n2-3=1,0\\n2-1=2,0\\n3-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-1=1,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n10-11=1,0\\n9-12=1,0\\n12-13=2,0\\n13-14=1,0\\n14-11=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[anthracene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"15\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,16)\\nC=5.4911,-0.2789;0,0,i1\\nC=4.7411,-1.5780;0,0,i1\\nC=6.9910,-0.2789;0,0,i1\\nC=5.4910,-2.8770;0,0,i1\\nC=6.9911,-2.8770;0,0,i0\\nC=7.7411,-1.5780;0,0,i0\\nC=9.2410,-1.5780;0,0,i0\\nC=7.7410,-4.1760;0,0,i1\\nC=9.2411,-4.1761;0,0,i1\\nC=9.9911,-2.8770;0,0,i0\\nC=9.9910,-0.2789;0,0,i1\\nC=11.4911,-2.8770;0,0,i1\\nC=12.2411,-1.5780;0,0,i1\\nC=11.4911,-0.2790;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n7-11=1,0\\n10-12=1,0\\n12-13=2,0\\n13-14=1,0\\n14-11=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[phenanthrene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"16\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nN=3.3300,-1.7050;0,0,i1\\nC=2.5800,-4.0150;0,0,i2\\nC=2.1200,-2.5850;0,0,i2\\nC=4.5400,-2.5850;0,0,i2\\nC=4.0800,-4.0150;0,0,i2\\n2-3=1,0\\n3-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[pyrrolidine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"17\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=1.3200,-2.2350;0,0,i2\\nC=1.7800,-3.6650;0,0,i2\\nO=2.5300,-1.3550;0,0,i0\\nC=3.7400,-2.2350;0,0,i2\\nC=3.2800,-3.6650;0,0,i2\\n2-1=1,0\\n1-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[tetrahydrofuran]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"18\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=1.3200,-2.2350;0,0,i1\\nC=1.7800,-3.6650;0,0,i1\\nO=2.5300,-1.3550;0,0,i0\\nC=3.7400,-2.2350;0,0,i1\\nC=3.2800,-3.6650;0,0,i1\\n2-1=2,0\\n1-3=1,0\\n3-4=1,0\\n4-5=2,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[furan]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"19\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=1.3200,-2.2350;0,0,i1\\nC=1.7800,-3.6650;0,0,i1\\nS=2.5300,-1.3550;0,0,i0\\nC=3.7400,-2.2350;0,0,i1\\nC=3.2800,-3.6650;0,0,i1\\n2-1=2,0\\n1-3=1,0\\n3-4=1,0\\n4-5=2,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[thiofuran]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"20\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=1.6000,-3.0000;0,0,i1\\nN=2.8990,-2.2500;0,0,i0\\nC=4.1981,-3.0000;0,0,i1\\nC=1.6000,-4.5000;0,0,i1\\nC=2.8990,-5.2500;0,0,i1\\nC=4.1981,-4.5000;0,0,i1\\n2-1=1,0\\n2-3=2,0\\n1-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[pyridine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"21\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=0.7019,-2.1000;0,0,i2\\nC=0.7019,-3.6000;0,0,i2\\nO=2.0009,-1.3500;0,0,i0\\nO=2.0009,-4.3500;0,0,i0\\nC=3.3000,-3.6000;0,0,i2\\nC=3.3000,-2.1000;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[dioxane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"22\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=2.1519,-2.1000;0,0,i2\\nC=2.1519,-3.6000;0,0,i2\\nO=3.4509,-1.3500;0,0,i0\\nN=3.4509,-4.3500;0,0,i1\\nC=4.7500,-3.6000;0,0,i2\\nC=4.7500,-2.1000;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[morpholine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"23\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nN=2.6490,-2.3000;0,0,i1\\nC=1.3500,-3.0500;0,0,i2\\nC=1.3500,-4.5500;0,0,i2\\nC=2.6490,-5.3000;0,0,i2\\nC=3.9481,-4.5500;0,0,i2\\nC=3.9481,-3.0500;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[piperidine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"24\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=1.3500,-3.0500;0,0,i2\\nC=1.3500,-4.5500;0,0,i2\\nO=2.6490,-2.3000;0,0,i0\\nC=2.6490,-5.3000;0,0,i2\\nC=3.9481,-4.5500;0,0,i2\\nC=3.9481,-3.0500;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[pyran]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<DataSheet><Summary><Title>Terminal Groups</Title><Description><![CDATA[]]></Description></Summary><Extension/><Header nrows=\\\"11\\\" ncols=\\\"3\\\"><Column id=\\\"1\\\" name=\\\"Molecule\\\" type=\\\"molecule\\\">Molecular structure</Column><Column id=\\\"2\\\" name=\\\"Name\\\" type=\\\"string\\\">Template name</Column><Column id=\\\"3\\\" name=\\\"Abbrev\\\" type=\\\"string\\\">Optional abbreviation</Column></Header><Content><Row id=\\\"1\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-0.6500,-1.4000;0,0,i0\\nC=0.6490,-0.6500;0,0,i2\\nC=1.9481,-1.4000;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[ethyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Et]]></Cell></Row><Row id=\\\"2\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-5.1000,3.4000;0,0,i2\\nC=-3.8010,4.1500;0,0,i2\\nC=-2.5019,3.4000;0,0,i3\\nX=-6.3990,4.1500;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[n-propyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Pr]]></Cell></Row><Row id=\\\"3\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-4.9450,2.0214;0,0,i1\\nC=-4.1950,3.3204;0,0,i3\\nC=-4.1950,0.7224;0,0,i3\\nX=-6.4450,2.0214;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[i-propyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[{^i}Pr]]></Cell></Row><Row id=\\\"4\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=-4.6500,2.9000;0,0,i2\\nC=-3.3510,3.6500;0,0,i2\\nC=-2.0519,2.9000;0,0,i2\\nC=-0.7529,3.6500;0,0,i3\\nX=-5.9490,3.6500;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[n-butyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Bu]]></Cell></Row><Row id=\\\"5\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=-3.2000,0.9000;0,0,i0\\nC=-3.2000,2.4000;0,0,i3\\nC=-3.2000,-0.6000;0,0,i3\\nC=-1.7000,0.9000;0,0,i3\\nX=-4.7000,0.9000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[t-butyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[{^t}Bu]]></Cell></Row><Row id=\\\"6\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-7.4188,-4.7944;0,0,i0\\nO=-6.1198,-4.0444;0,0,i0\\nC=-4.8207,-4.7944;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[methoxy]]></Cell><Cell id=\\\"3\\\"><![CDATA[O|Me]]></Cell></Row><Row id=\\\"7\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nX=-7.4188,-4.7944;0,0,i0\\nO=-6.1198,-4.0444;0,0,i0\\nC=-4.8207,-4.7944;0,0,i2\\nC=-3.5217,-4.0444;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[ethoxy]]></Cell><Cell id=\\\"3\\\"><![CDATA[O|Et]]></Cell></Row><Row id=\\\"8\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nX=-6.5500,1.6000;0,0,i0\\nC=-5.0500,1.6000;0,0,i0\\nC=-4.3000,2.8990;0,0,i1\\nC=-2.8000,2.8990;0,0,i1\\nC=-4.3000,0.3010;0,0,i1\\nC=-2.8000,0.3010;0,0,i1\\nC=-2.0500,1.6000;0,0,i1\\n1-2=1,0\\n3-2=1,0\\n3-4=2,0\\n2-5=2,0\\n5-6=1,0\\n6-7=2,0\\n7-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[phenyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Ph]]></Cell></Row><Row id=\\\"9\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nX=-6.5500,1.6000;0,0,i0\\nC=-5.0500,1.6000;0,0,i1\\nC=-4.3000,2.8990;0,0,i2\\nC=-2.8000,2.8990;0,0,i2\\nC=-4.3000,0.3010;0,0,i2\\nC=-2.8000,0.3010;0,0,i2\\nC=-2.0500,1.6000;0,0,i2\\n1-2=1,0\\n3-2=1,0\\n3-4=1,0\\n2-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[cyclopentyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Cy]]></Cell></Row><Row id=\\\"10\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nX=0.0500,2.9500;0,0,i0\\nC=1.3490,3.7000;0,0,i2\\nC=2.6481,2.9500;0,0,i0\\nC=2.6481,1.4500;0,0,i1\\nC=3.9471,3.7000;0,0,i1\\nC=3.9471,0.7000;0,0,i1\\nC=5.2461,1.4500;0,0,i1\\nC=5.2461,2.9500;0,0,i1\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n3-5=2,0\\n4-6=2,0\\n6-7=1,0\\n7-8=2,0\\n8-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[benzyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Bz]]></Cell></Row><Row id=\\\"11\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,10)\\nX=-1.6000,1.6571;0,0,i0\\nC=-0.1000,1.6571;0,0,i0\\nC=0.6500,0.3581;0,0,i0\\nC=0.6500,2.9561;0,0,i0\\nC=2.1500,0.3581;0,0,i1\\nC=2.9000,1.6571;0,0,i0\\nC=2.1500,2.9561;0,0,i1\\nC=-0.1000,4.2551;0,0,i3\\nC=4.4000,1.6571;0,0,i3\\nC=-0.1000,-0.9409;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n2-4=2,0\\n3-5=2,0\\n5-6=1,0\\n6-7=2,0\\n7-4=1,0\\n4-8=1,0\\n6-9=1,0\\n3-10=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[mesityl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Mes]]></Cell></Row></Content></DataSheet>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Functional Groups</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"18\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nN=-6.6000,4.4000;1,0,i0\\nO=-5.8500,5.6990;0,0,i0\\nO=-5.8500,3.1010;-1,0,i0\\nX=-8.1000,4.4000;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[nitro]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[N|O{2}]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nO=-7.0500,1.9510;0,0,i1\\nX=-9.3000,3.2500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[carboxyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O{2}|H]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nO=-7.0500,1.9510;0,0,i0\\nX=-9.3000,3.2500;0,0,i0\\nC=-5.5500,1.9510;0,0,i3\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[methyl carboxylate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O{2}|Me]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nO=-7.0500,1.9510;0,0,i0\\nX=-9.3000,3.2500;0,0,i0\\nC=-5.5500,1.9510;0,0,i2\\nC=-4.8000,0.6520;0,0,i3\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n5-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ethyl carboxylate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O{2}|Et]]></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nN=-7.0500,1.9510;0,0,i2\\nX=-9.3000,3.2500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[amide]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O|NH{2}]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nC=-7.0500,1.9510;0,0,i3\\nX=-9.3000,3.2500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ac]]></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nO=-8.0010,2.5000;0,0,i0\\nC=-6.7019,3.2500;0,0,i0\\nX=-9.3000,3.2500;0,0,i0\\nC=-5.4029,2.5000;0,0,i3\\nO=-6.7019,4.7500;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n2-5=2,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetoxy]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[O|Ac]]></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-5.9500,5.0500;0,0,i0\\nC=-4.4500,5.0500;0,0,i0\\nN=-2.9500,5.0500;0,0,i0\\n1-2=1,0\\n2-3=3,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyano]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|N]]></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=0.0000,0.0000;0,0,i0\\nF=0.0000,1.5000;0,0,i0\\nF=-0.0000,-1.5000;0,0,i0\\nF=1.5000,-0.0000;0,0,i0\\nX=-1.5000,0.0000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[trifluoromethyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|F{3}]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nO=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nF=3.0000,0.0000;0,0,i0\\nF=1.5000,-1.5000;0,0,i0\\nF=1.5000,1.5000;0,0,i0\\nX=-0.7500,1.2990;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n2-4=1,0\\n2-5=1,0\\n1-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[trifluoromethoxy]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[O|CF{3}]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nP=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i1\\nO=0.2500,0.8500;0,0,i1\\nX=-2.7500,0.8500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phosphoric]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[P|O{3}|H{2}]]></Cell>\\n</Row>\\n<Row id=\\\"12\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nO=-2.7500,0.8500;0,0,i0\\nP=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i1\\nO=0.2500,0.8500;0,0,i1\\nX=-3.5000,2.1490;0,0,i0\\n2-3=2,0\\n2-4=1,0\\n2-5=1,0\\n2-1=1,0\\n1-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phosphoric]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[P|O{4}|H{2}]]></Cell>\\n</Row>\\n<Row id=\\\"13\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nS=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i0\\nX=-2.7500,0.8500;0,0,i0\\n1-2=2,0\\n1-3=2,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[sulphonyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[S|O{2}|H]]></Cell>\\n</Row>\\n<Row id=\\\"14\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nS=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i0\\nO=0.2500,0.8500;0,0,i1\\nX=-2.7500,0.8500;0,0,i0\\n1-2=2,0\\n1-3=2,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[sulphonic]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[S|O{3}|H]]></Cell>\\n</Row>\\n<Row id=\\\"15\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nO=-2.7500,0.8500;0,0,i0\\nS=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i0\\nO=0.2500,0.8500;0,0,i1\\nX=-3.5000,2.1490;0,0,i0\\n2-3=2,0\\n2-4=2,0\\n2-5=1,0\\n2-1=1,0\\n1-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[sulphonic]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[S|O{4}|H]]></Cell>\\n</Row>\\n<Row id=\\\"16\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nX=0.0000,0.0000;0,0,i0\\nSi=1.5000,0.0000;0,0,i0\\nC=3.0000,0.0000;0,0,i3\\nC=1.5000,-1.5000;0,0,i3\\nC=1.5000,1.5000;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n2-4=1,0\\n2-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[trimethylsilane]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[TMS]]></Cell>\\n</Row>\\n<Row id=\\\"17\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,22)\\nC=5.6600,-2.2950;0,0,i1\\nC=4.6100,-3.9050;0,0,i1\\nC=4.1500,-2.6750;0,0,i1\\nC=7.1700,-2.6750;0,0,i1\\nC=6.7100,-3.9050;0,0,i1\\nC=5.6300,-0.5870;0,0,i1\\nC=4.5800,0.7230;0,0,i1\\nC=4.1200,-0.2070;0,0,i0\\nC=7.1400,-0.2070;0,0,i1\\nC=6.6800,0.7230;0,0,i1\\nFe=5.6700,-1.6610;0,0,i0\\nX=2.6200,-0.2137;0,0,i0\\n2-3=2,0\\n3-1=1,0\\n1-4=1,0\\n4-5=2,0\\n5-2=1,0\\n7-8=2,0\\n8-6=1,0\\n6-9=1,0\\n9-10=2,0\\n10-7=1,0\\n11-6=1,0\\n11-1=1,0\\n3-11=0,0\\n4-11=0,0\\n2-11=0,0\\n5-11=0,0\\n8-11=0,0\\n9-11=0,0\\n10-11=0,0\\n7-11=0,0\\n9-9=1,0\\n8-12=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ferrocenyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Fc]]></Cell>\\n</Row>\\n<Row id=\\\"18\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,15)\\nX=-1.8965,0.7175;0,0,i0\\nFe=0.1000,0.7175;0,0,i0\\nC=0.3931,1.7515;0,0,i1\\nC=1.7233,2.7758;0,0,i1\\nC=1.9501,1.7633;0,0,i1\\nC=-0.9841,2.4781;0,0,i1\\nC=-0.3171,3.2728;0,0,i1\\nC=0.1000,-0.7825;0,0,e0\\nO=0.1000,-2.2825;0,0,i0\\nC=1.5289,-0.1075;0,0,e0\\nO=2.8280,-0.8575;0,0,i0\\n1-2=1,0\\n4-5=2,0\\n5-3=1,0\\n3-6=1,0\\n6-7=2,0\\n7-4=1,0\\n2-3=1,0\\n5-2=0,0\\n6-2=0,0\\n7-2=0,0\\n4-2=0,0\\n2-8=0,0\\n8-9=2,0\\n2-10=0,0\\n10-11=2,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[bis(carbonyl)cyclopentadienyl iron]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Fp]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Functional Groups</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"11\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nX=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nO=2.2500,1.2990;0,0,i0\\nO=2.2500,-1.2990;0,0,i0\\nC=3.7500,1.2990;0,0,i0\\nC=5.2500,1.2990;0,0,i3\\nC=3.7500,2.7990;0,0,i3\\nC=3.7500,-0.2010;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n2-4=2,0\\n3-5=1,0\\n5-6=1,0\\n5-7=1,0\\n5-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Boc]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,11)\\nS=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nO=-0.0000,1.5000;0,0,i0\\nO=0.0000,-1.5000;0,0,i0\\nC=2.2500,-1.2990;0,0,i1\\nC=3.7500,-1.2990;0,0,i1\\nC=4.5000,-0.0000;0,0,i0\\nC=3.7500,1.2990;0,0,i1\\nC=2.2500,1.2990;0,0,i1\\nC=6.0000,-0.0000;0,0,i3\\n1-2=1,0\\n1-3=1,0\\n1-4=2,0\\n1-5=2,0\\n2-6=2,0\\n6-7=1,0\\n7-8=2,0\\n8-9=1,0\\n9-10=2,0\\n10-2=1,0\\n8-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Tos]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nS=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nO=-0.0000,1.5000;0,0,i0\\nO=0.0000,-1.5000;0,0,i0\\nF=3.0000,-0.0000;0,0,i0\\nF=1.5000,1.5000;0,0,i0\\nF=1.5000,-1.5000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=2,0\\n1-5=2,0\\n2-6=1,0\\n2-7=1,0\\n2-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Tf]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nSi=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nPh=-0.0000,1.5000;0,0,i0,aSketchEl!(7\\\\002C7)\\\\000A*\\\\003D-6.5500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-5.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.3000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-4.3000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci1\\\\000A1-2\\\\003D1\\\\002C0\\\\000A3-2\\\\003D1\\\\002C0\\\\000A3-4\\\\003D2\\\\002C0\\\\000A2-5\\\\003D2\\\\002C0\\\\000A5-6\\\\003D1\\\\002C0\\\\000A6-7\\\\003D2\\\\002C0\\\\000A7-4\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\nPh=0.0000,-1.5000;0,0,i0,aSketchEl!(7\\\\002C7)\\\\000A*\\\\003D-6.5500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-5.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.3000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-4.3000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci1\\\\000A1-2\\\\003D1\\\\002C0\\\\000A3-2\\\\003D1\\\\002C0\\\\000A3-4\\\\003D2\\\\002C0\\\\000A2-5\\\\003D2\\\\002C0\\\\000A5-6\\\\003D1\\\\002C0\\\\000A6-7\\\\003D2\\\\002C0\\\\000A7-4\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\nC=3.0000,-0.0000;0,0,i3\\nC=1.5000,1.5000;0,0,i3\\nC=1.5000,-1.5000;0,0,i3\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n2-6=1,0\\n2-7=1,0\\n2-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[TBDPS]]></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nSi=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nC=-0.0000,1.5000;0,0,i3\\nC=0.0000,-1.5000;0,0,i3\\nC=3.0000,-0.0000;0,0,i3\\nC=1.5000,1.5000;0,0,i3\\nC=1.5000,-1.5000;0,0,i3\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n2-6=1,0\\n2-7=1,0\\n2-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[TBDMS]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nX=1.0000,0.0000;0,0,i0\\nO=1.8817,-1.2135;0,0,i0\\nC=3.3083,-0.7500;0,0,i2\\nC=3.3083,0.7500;0,0,i2\\nO=1.8817,1.2135;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nX=0.0000,0.0000;0,0,i0\\nO=0.7500,-1.2990;0,0,i0\\nC=2.2500,-1.2990;0,0,i2\\nC=3.0000,0.0000;0,0,i2\\nC=2.2500,1.2990;0,0,i2\\nO=0.7500,1.2990;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[1,3-dioxane]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nX=0.0000,0.0000;0,0,i0\\nS=0.7500,-1.2990;0,0,i0\\nC=2.2500,-1.2990;0,0,i2\\nC=3.0000,0.0000;0,0,i2\\nC=2.2500,1.2990;0,0,i2\\nS=0.7500,1.2990;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[1,3-dithiane]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,6)\\nX=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nO=2.2500,1.2990;0,0,i0\\nC=2.2500,-1.2990;0,0,i0\\nC=3.0000,-2.5981;0,0,i3\\nC=3.5490,-0.5490;0,0,i3\\nC=0.9510,-2.0490;0,0,i3\\n1-2=1,0\\n2-3=2,0\\n2-4=1,0\\n4-5=1,0\\n4-6=1,0\\n4-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Piv]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,11)\\nC=8.5563,4.7294;0,0,i1\\nC=9.8554,3.9794;0,0,i1\\nC=9.8554,2.4794;0,0,i1\\nC=8.5563,1.7294;0,0,i1\\nC=7.2573,2.4794;0,0,i1\\nC=7.2573,3.9794;0,0,i0\\nC=5.9582,4.7294;0,0,i2\\nO=4.6592,3.9794;0,0,i0\\nC=3.3602,4.7294;0,0,i0\\nX=2.0611,3.9794;0,0,i0\\nO=3.3602,6.2294;0,0,i0\\n1-2=2,0\\n2-3=1,0\\n3-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-1=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n9-11=2,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cbz]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,20)\\nC=7.2573,3.9794;0,0,i1\\nC=5.9582,4.7294;0,0,i2\\nO=4.6592,3.9794;0,0,i0\\nC=3.3602,4.7294;0,0,i0\\nX=2.0611,3.9794;0,0,i0\\nO=3.3602,6.2294;0,0,i0\\nC=7.4141,2.4876;0,0,i0\\nC=8.8814,2.1758;0,0,i0\\nC=9.6313,3.4748;0,0,i0\\nC=8.6276,4.5895;0,0,i0\\nC=11.0985,3.7867;0,0,i1\\nC=11.5620,5.2133;0,0,i1\\nC=10.5583,6.3280;0,0,i1\\nC=9.0911,6.0161;0,0,i1\\nC=6.4105,1.3729;0,0,i1\\nC=6.8740,-0.0537;0,0,i1\\nC=8.3412,-0.3655;0,0,i1\\nC=9.3449,0.7492;0,0,i1\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n4-6=2,0\\n1-7=1,0\\n7-8=2,0\\n8-9=1,0\\n9-10=2,0\\n10-1=1,0\\n9-11=1,0\\n11-12=2,0\\n12-13=1,0\\n13-14=2,0\\n14-10=1,0\\n7-15=1,0\\n15-16=2,0\\n16-17=1,0\\n17-18=2,0\\n18-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[FMOC]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Non-planar Rings</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"12\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,7)\\nC=-6.0428,5.1152;0,0,i1\\nC=-5.8360,7.2412;0,0,i2\\nC=-4.9821,6.1759;0,0,i1\\nC=-3.5332,5.7877;0,0,i2\\nC=-4.3230,4.4890;0,0,i2\\nC=-7.3398,5.1300;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-5=1,0\\n5-4=1,0\\n1-6=1,0\\n3-6=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[5-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,8)\\nC=-6.1000,5.0000;0,0,i2\\nC=-4.8010,5.7500;0,0,i1\\nC=-6.1000,3.5000;0,0,i2\\nC=-4.8010,4.2500;0,0,i1\\nC=-3.5019,5.0000;0,0,i2\\nC=-3.5019,3.5000;0,0,i2\\nC=-4.0510,6.8490;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n6-5=1,0\\n4-7=1,0\\n2-7=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[6-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,9)\\nC=-6.1000,5.0000;0,0,i2\\nC=-4.8010,5.7500;0,0,i1\\nC=-6.1000,3.5000;0,0,i2\\nC=-4.8010,4.2500;0,0,i1\\nC=-3.5019,5.0000;0,0,i2\\nC=-3.5019,3.5000;0,0,i2\\nC=-4.5010,6.7990;0,0,i2\\nC=-3.8510,5.7490;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n6-5=1,0\\n2-7=1,0\\n4-8=1,0\\n7-8=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[6-bridge-2]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,9)\\nC=-6.1177,3.0660;0,0,i2\\nC=-5.3677,4.3650;0,0,i1\\nC=-5.3677,1.7670;0,0,i2\\nC=-4.6177,3.0660;0,0,i1\\nC=-3.4177,4.2651;0,0,i2\\nC=-3.6177,3.0660;0,0,i2\\nC=-5.2677,5.6918;0,0,i2\\nC=-2.3186,2.3160;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n4-7=1,0\\n2-7=1,0\\n6-8=1,0\\n8-5=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[7-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nC=-6.1177,3.0660;0,0,i2\\nC=-5.3677,4.3650;0,0,i1\\nC=-5.3677,1.7670;0,0,i2\\nC=-4.6177,3.0660;0,0,i1\\nC=-3.4177,4.2651;0,0,i2\\nC=-3.6177,3.0660;0,0,i2\\nC=-5.6177,5.8418;0,0,i2\\nC=-2.3186,2.3160;0,0,i2\\nC=-4.9000,5.5000;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n2-7=1,0\\n6-8=1,0\\n8-5=1,0\\n4-9=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[7-bridge-2]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nC=-2.7481,2.7510;0,0,i2\\nC=-1.4491,3.1510;0,0,i2\\nC=-1.9981,4.0500;0,0,i2\\nC=-0.1500,2.4010;0,0,i1\\nC=-0.6991,3.3000;0,0,i1\\nC=0.6000,4.0500;0,0,i2\\nC=-0.4491,1.1500;0,0,i2\\nC=0.3078,0.9726;0,0,i2\\nC=-1.1922,-0.1265;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n5-7=1,0\\n4-8=1,0\\n8-9=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[6-bridge-3]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,11)\\nC=-2.8297,-3.0097;0,0,i2\\nC=-2.5266,-1.6847;0,0,i2\\nC=-3.5797,-1.7107;0,0,i2\\nC=-1.2275,-0.9347;0,0,i1\\nC=-2.2806,-0.9607;0,0,i1\\nC=-2.2806,0.5394;0,0,i2\\nC=-0.2937,-1.8192;0,0,i2\\nC=0.4384,-1.1524;0,0,i2\\nC=0.4402,-3.1010;0,0,i2\\nC=1.1902,-1.8019;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n5-7=1,0\\n4-8=1,0\\n7-9=1,0\\n9-10=1,0\\n10-8=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[7-bridge-3]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,11)\\nC=-5.9491,0.8000;0,0,i2\\nC=-7.2481,0.0500;0,0,i2\\nC=-7.2481,-1.4500;0,0,i2\\nC=-5.9491,-2.2000;0,0,i2\\nC=-4.6500,-1.4500;0,0,i1\\nC=-4.6500,0.0500;0,0,i1\\nC=-3.2287,0.5194;0,0,i2\\nC=-2.3463,-0.6889;0,0,i2\\nC=-3.2221,-1.9093;0,0,i2\\nC=-3.9000,1.3490;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-5=1,0\\n6-10=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[9-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"9\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,12)\\nC=-4.9010,5.1000;0,0,i2\\nC=-6.2000,4.3500;0,0,i2\\nC=-6.2000,2.8500;0,0,i2\\nC=-4.9010,2.1000;0,0,i2\\nC=-3.6019,2.8500;0,0,i1\\nC=-3.6019,4.3500;0,0,i1\\nC=-2.3029,5.1000;0,0,i2\\nC=-2.3029,2.1000;0,0,i2\\nC=-1.0038,2.8500;0,0,i2\\nC=-1.0038,4.3500;0,0,i2\\nC=-2.8519,5.6490;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n6-7=1,0\\n5-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-7=1,0\\n6-11=1,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[10-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"10\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,13)\\nC=-5.1991,3.1000;0,0,i2\\nC=-6.4981,2.3500;0,0,i2\\nC=-6.4981,0.8500;0,0,i2\\nC=-5.1991,0.1000;0,0,i2\\nC=-3.9000,0.8500;0,0,i1\\nC=-3.9000,2.3500;0,0,i1\\nC=-2.7265,3.2785;0,0,i2\\nC=-2.7252,-0.0840;0,0,i2\\nC=-1.2664,2.9421;0,0,i2\\nC=-0.6227,1.5908;0,0,i2\\nC=-1.2816,0.2423;0,0,i2\\nC=-4.6500,3.6490;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n5-8=1,0\\n6-7=1,0\\n9-7=1,0\\n9-10=1,0\\n10-11=1,0\\n11-8=1,0\\n6-12=1,0\\n5-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[11-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"11\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,12)\\nC=-4.3500,3.6500;0,0,i1\\nC=-4.3500,2.1500;0,0,i1\\nC=-2.8500,2.1500;0,0,i1\\nC=-2.8500,3.6500;0,0,i1\\nC=-3.5510,4.2000;0,0,i1\\nC=-2.0510,4.2000;0,0,i1\\nC=-2.0510,2.7000;0,0,i1\\nC=-3.5510,2.7000;0,0,i1\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-4=1,0\\n1-5=1,0\\n4-6=1,0\\n3-7=1,0\\n2-8=1,0\\n8-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cubane]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"12\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,12)\\nC=-5.1000,-1.5490;0,0,i2\\nC=-3.8010,-1.1490;0,0,i1\\nC=-4.3500,-0.2500;0,0,i1\\nC=-2.5019,-1.8990;0,0,i2\\nC=-3.0510,-1.0000;0,0,i2\\nC=-1.7519,-0.2500;0,0,i1\\nC=-4.3500,1.2500;0,0,i2\\nC=-3.8010,0.3510;0,0,i2\\nC=-1.7519,1.2500;0,0,i2\\nC=-3.0510,2.0000;0,0,i1\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n3-7=1,0\\n2-8=1,0\\n6-9=1,0\\n7-10=1,0\\n9-10=1,0\\n8-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[adamantane]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Large Rings</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"11\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=2.0428,-18.6516;0,0,i2\\nC=1.7880,-17.1633;0,0,i2\\nC=2.5387,-15.8790;0,0,i2\\nC=3.1939,-19.6177;0,0,i2\\nC=4.7060,-19.6177;0,0,i2\\nC=5.8535,-18.6576;0,0,i2\\nC=6.1088,-17.1863;0,0,i2\\nC=3.9528,-15.3740;0,0,i2\\nC=5.3645,-15.8923;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n1-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n8-3=1,0\\n8-9=1,0\\n9-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-9]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,10)\\nC=-3.5491,5.1000;0,0,i2\\nC=-4.8481,4.3500;0,0,i2\\nC=-4.8481,2.8500;0,0,i2\\nC=-3.5491,2.1000;0,0,i2\\nC=-2.2500,2.8500;0,0,i2\\nC=-2.2500,4.3500;0,0,i2\\nC=-0.9509,2.1000;0,0,i2\\nC=0.3481,2.8500;0,0,i2\\nC=0.3481,4.3500;0,0,i2\\nC=-0.9509,5.1000;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n8-9=1,0\\n8-7=1,0\\n9-10=1,0\\n10-6=1,0\\n5-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-10]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,11)\\nC=-7.7858,2.5448;0,0,i2\\nC=-7.8013,1.1000;0,0,i2\\nC=-6.4244,0.8579;0,0,i2\\nC=-5.3288,-0.5811;0,0,i2\\nC=-4.3565,0.8361;0,0,i2\\nC=-2.9104,1.0882;0,0,i2\\nC=-2.8964,2.5470;0,0,i2\\nC=-4.2864,2.8806;0,0,i2\\nC=-4.6033,4.2815;0,0,i2\\nC=-6.0450,4.2766;0,0,i2\\nC=-6.3710,2.8699;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-1=1,0\\n4-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-11]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.1614,6.9975;0,0,i2\\nC=2.4604,6.2475;0,0,i2\\nC=-0.1376,6.2475;0,0,i2\\nC=-0.1376,4.7475;0,0,i2\\nC=-1.4367,3.9975;0,0,i2\\nC=-1.4367,2.4975;0,0,i2\\nC=-0.1376,1.7475;0,0,i2\\nC=1.1614,2.4975;0,0,i2\\nC=2.4604,1.7475;0,0,i2\\nC=3.7595,2.4975;0,0,i2\\nC=3.7595,3.9975;0,0,i2\\nC=2.4604,4.7475;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n12-2=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-12]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=0.2503,-1.0236;0,0,i2\\nC=1.7491,-1.0236;0,0,i2\\nC=2.0788,0.4428;0,0,i2\\nC=3.5325,0.7862;0,0,i2\\nC=3.5274,2.2829;0,0,i2\\nC=2.0508,2.6151;0,0,i2\\nC=1.7054,4.0671;0,0,i2\\nC=0.1996,4.0655;0,0,i2\\nC=-0.1373,2.6137;0,0,i2\\nC=-1.5850,2.2710;0,0,i2\\nC=-1.5640,0.7758;0,0,i2\\nC=-0.0938,0.4547;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n12-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-12]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,13)\\nC=-9.0085,1.2181;0,0,i2\\nC=-8.4085,2.6671;0,0,i2\\nC=-6.9085,2.6671;0,0,i2\\nC=-6.3085,1.2181;0,0,i2\\nC=-4.8595,0.6181;0,0,i2\\nC=-4.8595,-0.8819;0,0,i2\\nC=-6.3085,-1.4819;0,0,i2\\nC=-9.0085,-1.4819;0,0,i2\\nC=-10.4575,-0.8819;0,0,i2\\nC=-10.4575,0.6181;0,0,i2\\nC=-9.0085,-2.9819;0,0,i2\\nC=-6.3085,-2.9819;0,0,i2\\nC=-7.7095,-3.7319;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n8-9=1,0\\n9-10=1,0\\n10-1=1,0\\n8-11=1,0\\n7-12=1,0\\n11-13=1,0\\n13-12=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-13]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,14)\\nC=6.9101,-5.9857;0,0,i2\\nC=7.5101,-4.5367;0,0,i2\\nC=9.0101,-4.5367;0,0,i2\\nC=9.6101,-5.9857;0,0,i2\\nC=9.6101,-8.6857;0,0,i2\\nC=9.0101,-10.1347;0,0,i2\\nC=7.5101,-10.1347;0,0,i2\\nC=6.9101,-8.6857;0,0,i2\\nC=5.4101,-5.9857;0,0,i2\\nC=5.4101,-8.6857;0,0,i2\\nC=11.1101,-8.6857;0,0,i2\\nC=11.1101,-5.9857;0,0,i2\\nC=11.8601,-7.3867;0,0,i2\\nC=4.6601,-7.2847;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n1-9=1,0\\n8-10=1,0\\n5-11=1,0\\n4-12=1,0\\n11-13=1,0\\n13-12=1,0\\n9-14=1,0\\n14-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-14]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,15)\\nC=22.1615,-1.5864;0,0,i2\\nC=23.3877,-0.7311;0,0,i2\\nC=20.9592,-0.7218;0,0,i2\\nC=22.9828,0.6878;0,0,i2\\nC=19.7379,-1.5763;0,0,i2\\nC=24.1796,1.5700;0,0,i2\\nC=18.5357,-0.7167;0,0,i2\\nC=23.7246,3.0381;0,0,i2\\nC=18.9534,0.7033;0,0,i2\\nC=22.2021,3.0764;0,0,i2\\nC=17.7398,1.6155;0,0,i2\\nC=21.7384,4.5021;0,0,i2\\nC=18.2148,3.0479;0,0,i2\\nC=20.2213,4.5021;0,0,i2\\nC=19.7018,3.0711;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-15=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-15]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,16)\\nC=-2.3295,-6.3508;0,0,i2\\nC=-2.3295,-7.8765;0,0,i2\\nC=-1.0175,-8.6353;0,0,i2\\nC=0.3099,-7.8765;0,0,i2\\nC=2.9416,-6.3508;0,0,i2\\nC=2.9416,-7.8765;0,0,i2\\nC=1.6218,-8.6353;0,0,i2\\nC=-1.0150,-4.2041;0,0,i2\\nC=0.2910,-3.4545;0,0,i2\\nC=1.6173,-4.2041;0,0,i2\\nC=-2.3088,-3.4429;0,0,i2\\nC=-3.6056,-4.1961;0,0,i2\\nC=-3.6212,-5.5973;0,0,i2\\nC=2.9184,-3.4366;0,0,i2\\nC=4.2222,-4.1763;0,0,i2\\nC=4.2483,-5.5976;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-4=1,0\\n8-9=1,0\\n9-10=1,0\\n11-12=1,0\\n8-11=1,0\\n1-13=1,0\\n12-13=1,0\\n14-15=1,0\\n10-14=1,0\\n5-16=1,0\\n15-16=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-16]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,18)\\nC=14.0401,-6.5516;0,0,i2\\nC=14.7839,-7.8398;0,0,i2\\nC=13.8355,-9.0080;0,0,i2\\nC=14.6732,-10.2249;0,0,i2\\nC=13.8569,-11.4861;0,0,i2\\nC=12.3571,-11.2554;0,0,i2\\nC=11.7609,-12.6417;0,0,i2\\nC=10.2552,-12.6811;0,0,i2\\nC=9.6255,-11.3345;0,0,i2\\nC=8.1419,-11.5631;0,0,i2\\nC=7.3964,-10.2751;0,0,i2\\nC=8.3448,-9.1199;0,0,i2\\nC=7.5032,-7.8976;0,0,i2\\nC=8.3106,-6.6466;0,0,i2\\nC=9.8063,-6.8716;0,0,i2\\nC=10.4049,-5.4658;0,0,i2\\nC=11.9207,-5.4290;0,0,i2\\nC=12.5403,-6.7723;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n3-4=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n7-8=1,0\\n12-13=1,0\\n13-14=1,0\\n14-15=1,0\\n11-12=1,0\\n16-17=1,0\\n17-18=1,0\\n15-16=1,0\\n1-18=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-18]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(20,20)\\nC=23.0039,-8.7037;0,0,i2\\nC=21.6788,-9.4637;0,0,i2\\nC=21.6617,-10.9743;0,0,i2\\nC=22.9767,-11.7478;0,0,i2\\nC=24.2738,-14.0464;0,0,i2\\nC=22.9667,-13.2731;0,0,i2\\nC=28.1300,-11.8325;0,0,i2\\nC=28.1300,-13.3322;0,0,i2\\nC=26.8927,-14.0616;0,0,i2\\nC=28.1261,-8.8196;0,0,i2\\nC=29.4195,-9.5784;0,0,i2\\nC=29.4306,-11.0859;0,0,i2\\nC=26.8898,-15.5611;0,0,i2\\nC=25.5812,-16.3118;0,0,i2\\nC=24.2488,-15.5459;0,0,i2\\nC=25.5520,-7.2815;0,0,i2\\nC=26.8533,-6.5619;0,0,i2\\nC=28.1325,-7.3250;0,0,i2\\nC=24.2475,-6.5288;0,0,i2\\nC=22.9549,-7.2639;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-4=1,0\\n7-8=1,0\\n8-9=1,0\\n10-11=1,0\\n7-12=1,0\\n11-12=1,0\\n13-14=1,0\\n9-13=1,0\\n5-15=1,0\\n15-14=1,0\\n16-17=1,0\\n10-18=1,0\\n17-18=1,0\\n19-20=1,0\\n16-19=1,0\\n20-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-20]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Crown Ethers</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"10\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nO=-3.3500,6.9000;0,0,i0\\nC=-2.7500,8.3490;0,0,i2\\nC=-1.2500,8.3490;0,0,i2\\nO=-0.6500,6.9000;0,0,i0\\nC=0.7990,6.3000;0,0,i2\\nC=0.7990,4.8000;0,0,i2\\nO=-0.6500,4.2000;0,0,i0\\nC=-1.2500,2.7510;0,0,i2\\nC=-2.7500,2.7510;0,0,i2\\nO=-3.3500,4.2000;0,0,i0\\nC=-4.7990,4.8000;0,0,i2\\nC=-4.7990,6.3000;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n12-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[12-crown-4]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,13)\\nO=-9.0085,1.2181;0,0,i0\\nC=-8.4085,2.6671;0,0,i2\\nC=-6.9085,2.6671;0,0,i2\\nO=-6.3085,1.2181;0,0,i0\\nC=-4.8595,0.6181;0,0,i2\\nC=-4.8595,-0.8819;0,0,i2\\nO=-6.3085,-1.4819;0,0,i0\\nO=-9.0085,-1.4819;0,0,i0\\nC=-10.4575,-0.8819;0,0,i2\\nC=-10.4575,0.6181;0,0,i2\\nC=-9.0085,-2.9819;0,0,i2\\nC=-6.3085,-2.9819;0,0,i2\\nC=-7.7095,-3.7319;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n8-9=1,0\\n9-10=1,0\\n10-1=1,0\\n8-11=1,0\\n7-12=1,0\\n11-13=1,0\\n13-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[13-crown-4]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,14)\\nO=6.9101,-5.9857;0,0,i0\\nC=7.5101,-4.5367;0,0,i2\\nC=9.0101,-4.5367;0,0,i2\\nO=9.6101,-5.9857;0,0,i0\\nO=9.6101,-8.6857;0,0,i0\\nC=9.0101,-10.1347;0,0,i2\\nC=7.5101,-10.1347;0,0,i2\\nO=6.9101,-8.6857;0,0,i0\\nC=5.4101,-5.9857;0,0,i2\\nC=5.4101,-8.6857;0,0,i2\\nC=11.1101,-8.6857;0,0,i2\\nC=11.1101,-5.9857;0,0,i2\\nC=11.8601,-7.3867;0,0,i2\\nC=4.6601,-7.2847;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n1-9=1,0\\n8-10=1,0\\n5-11=1,0\\n4-12=1,0\\n11-13=1,0\\n13-12=1,0\\n9-14=1,0\\n14-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[14-crown-4]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,15)\\nC=22.1615,-1.5864;0,0,i2\\nC=23.3877,-0.7311;0,0,i2\\nO=20.9592,-0.7218;0,0,i0\\nO=22.9828,0.6878;0,0,i0\\nC=19.7379,-1.5763;0,0,i2\\nC=24.1796,1.5700;0,0,i2\\nC=18.5357,-0.7167;0,0,i2\\nC=23.7246,3.0381;0,0,i2\\nO=18.9534,0.7033;0,0,i0\\nO=22.2021,3.0764;0,0,i0\\nC=17.7398,1.6155;0,0,i2\\nC=21.7384,4.5021;0,0,i2\\nC=18.2148,3.0479;0,0,i2\\nC=20.2213,4.5021;0,0,i2\\nO=19.7018,3.0711;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-15=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[15-crown-5]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,16)\\nC=-3.2703,-7.3624;0,0,i2\\nC=-4.4642,-6.4905;0,0,i2\\nO=-3.7283,-8.7862;0,0,i0\\nO=-5.6803,-7.3450;0,0,i0\\nC=-2.5315,-9.6420;0,0,i2\\nC=-6.8842,-6.4872;0,0,i2\\nC=-2.8996,-11.0971;0,0,i2\\nC=-8.0816,-7.3361;0,0,i2\\nO=-4.4208,-11.4135;0,0,i0\\nO=-7.6748,-8.7819;0,0,i0\\nC=-4.4492,-12.9087;0,0,i2\\nC=-8.9100,-9.5864;0,0,i2\\nC=-5.8087,-13.6602;0,0,i2\\nC=-8.6136,-11.0608;0,0,i2\\nC=-7.1438,-12.8902;0,0,i2\\nO=-7.1341,-11.4135;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-16=1,0\\n15-16=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[16-crown-5]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(17,17)\\nC=11.3913,-8.5218;0,0,i2\\nO=9.9653,-8.8821;0,0,i0\\nC=8.6597,-11.0126;0,0,i2\\nO=7.4967,-10.0548;0,0,i0\\nC=6.3270,-10.9800;0,0,i2\\nC=5.0002,-10.3582;0,0,i2\\nO=4.9982,-8.8783;0,0,i0\\nC=3.5605,-8.5538;0,0,i2\\nC=3.2430,-7.1220;0,0,i2\\nC=4.4248,-6.1867;0,0,i2\\nO=5.8590,-6.7660;0,0,i0\\nC=6.6561,-5.4870;0,0,i2\\nC=8.2017,-5.4870;0,0,i2\\nO=9.0164,-6.7596;0,0,i0\\nC=10.4452,-6.1465;0,0,i2\\nC=11.6565,-7.0603;0,0,i2\\nC=9.9960,-10.3691;0,0,i2\\n5-6=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n6-7=1,0\\n11-12=1,0\\n12-13=1,0\\n13-14=1,0\\n10-11=1,0\\n15-16=1,0\\n14-15=1,0\\n16-1=1,0\\n2-17=1,0\\n17-3=1,0\\n1-2=1,0\\n3-4=1,0\\n4-5=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[17-crown-5]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,18)\\nC=25.7638,-7.1614;0,0,i2\\nC=25.0080,-8.4698;0,0,i2\\nO=23.5267,-8.2690;0,0,i0\\nC=22.8858,-9.6176;0,0,i2\\nC=21.3709,-9.5699;0,0,i2\\nO=20.7705,-8.1782;0,0,i0\\nC=19.2614,-8.3591;0,0,i2\\nC=18.4799,-7.0636;0,0,i2\\nO=19.3514,-5.8621;0,0,i0\\nC=18.4463,-4.6854;0,0,i2\\nC=19.2046,-3.3933;0,0,i2\\nO=20.6839,-3.5899;0,0,i0\\nC=21.3018,-2.2555;0,0,i2\\nC=22.7925,-2.2628;0,0,i2\\nO=23.3883,-3.6550;0,0,i0\\nC=24.8877,-3.4674;0,0,i2\\nC=25.6817,-4.7676;0,0,i2\\nO=24.8469,-5.9802;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n3-4=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n7-8=1,0\\n12-13=1,0\\n13-14=1,0\\n14-15=1,0\\n11-12=1,0\\n16-17=1,0\\n17-18=1,0\\n15-16=1,0\\n1-18=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[18-crown-6]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(20,20)\\nC=-3.4089,-21.0677;0,0,i2\\nC=-4.1767,-22.3338;0,0,i2\\nC=-4.1760,-19.7823;0,0,i2\\nO=-5.6753,-22.3687;0,0,i0\\nO=-5.6837,-19.8385;0,0,i0\\nC=-5.9548,-23.7442;0,0,i2\\nC=-5.9813,-18.3858;0,0,i2\\nC=-7.3810,-24.2230;0,0,i2\\nC=-7.4086,-17.9180;0,0,i2\\nO=-8.5195,-23.2256;0,0,i0\\nO=-8.5335,-18.9110;0,0,i0\\nC=-9.6750,-17.9220;0,0,i2\\nC=-11.0728,-23.7403;0,0,i2\\nC=-11.1043,-18.4009;0,0,i2\\nO=-11.3732,-22.3272;0,0,i0\\nO=-11.3858,-19.8551;0,0,i0\\nC=-12.8889,-22.3529;0,0,i2\\nC=-12.9024,-19.8027;0,0,i2\\nC=-13.6729,-21.0850;0,0,i2\\nC=-9.6554,-24.2077;0,0,i2\\n1-2=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n11-12=1,0\\n13-15=1,0\\n14-16=1,0\\n15-17=1,0\\n16-18=1,0\\n17-19=1,0\\n18-19=1,0\\n12-14=1,0\\n13-20=1,0\\n10-20=1,0\\n3-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[20-crown-6]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"9\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(21,21)\\nC=5.3181,-17.4804;0,0,i2\\nC=3.8183,-17.4647;0,0,i2\\nO=3.1475,-18.8055;0,0,i0\\nC=1.6753,-18.4404;0,0,i2\\nC=0.7284,-19.5857;0,0,i2\\nO=1.3610,-20.9456;0,0,i0\\nC=0.1741,-21.8748;0,0,i2\\nC=0.5101,-23.3287;0,0,i2\\nO=1.9785,-23.6452;0,0,i0\\nC=1.9855,-25.1429;0,0,i2\\nC=3.3325,-25.7906;0,0,i2\\nO=4.5146,-24.8501;0,0,i0\\nC=5.6870,-25.8137;0,0,i2\\nC=7.0359,-25.1826;0,0,i2\\nC=8.3693,-19.6515;0,0,i2\\nC=7.4283,-18.4879;0,0,i2\\nO=5.9620,-18.8325;0,0,i0\\nO=7.0819,-23.6850;0,0,i0\\nO=7.7239,-20.9997;0,0,i0\\nC=8.5502,-23.3847;0,0,i2\\nC=8.9031,-21.9421;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n3-4=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n7-8=1,0\\n12-13=1,0\\n13-14=1,0\\n11-12=1,0\\n15-16=1,0\\n16-17=1,0\\n1-17=1,0\\n14-18=1,0\\n19-15=1,0\\n18-20=1,0\\n19-21=1,0\\n20-21=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[21-crown-7]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"10\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(24,24)\\nC=20.7446,-27.4663;0,0,i2\\nO=21.4914,-26.1584;0,0,i0\\nC=19.2274,-27.4663;0,0,i2\\nC=22.9335,-26.6476;0,0,i2\\nO=18.5013,-26.1469;0,0,i0\\nC=24.0269,-25.6099;0,0,i2\\nC=17.0704,-26.6026;0,0,i2\\nO=23.6289,-24.1676;0,0,i0\\nC=15.9870,-25.5356;0,0,i2\\nC=24.9576,-23.4669;0,0,i2\\nO=16.4266,-24.0844;0,0,i0\\nC=24.9616,-21.9609;0,0,i2\\nC=15.1053,-23.3507;0,0,i2\\nO=23.6462,-21.2624;0,0,i0\\nC=15.1453,-21.8561;0,0,i2\\nC=24.0717,-19.8181;0,0,i2\\nO=16.4802,-21.1978;0,0,i0\\nC=22.9846,-18.8108;0,0,i2\\nC=16.0898,-19.7657;0,0,i2\\nO=21.5453,-19.2991;0,0,i0\\nC=17.1862,-18.7823;0,0,i2\\nC=20.8284,-18.0103;0,0,i2\\nO=18.5947,-19.2887;0,0,i0\\nC=19.3270,-18.0074;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-16=1,0\\n15-17=1,0\\n16-18=1,0\\n17-19=1,0\\n18-20=1,0\\n19-21=1,0\\n20-22=1,0\\n21-23=1,0\\n22-24=1,0\\n23-24=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[24-crown-8]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<DataSheet><Summary><Title>Monodentate Ligands</Title><Description><![CDATA[]]></Description></Summary><Extension/><Header nrows=\\\"10\\\" ncols=\\\"3\\\"><Column id=\\\"1\\\" name=\\\"Molecule\\\" type=\\\"molecule\\\">Molecular structure</Column><Column id=\\\"2\\\" name=\\\"Name\\\" type=\\\"string\\\">Template name</Column><Column id=\\\"3\\\" name=\\\"Abbrev\\\" type=\\\"string\\\">Optional abbreviation</Column></Header><Content><Row id=\\\"1\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(20,22)\\nP=0.0000,0.0000;0,0,i0\\nC=0.0000,2.0000;0,0,i0\\nC=2.0000,-0.0000;0,0,i0\\nC=-0.0000,-2.0000;0,0,i0\\nC=-1.2990,2.7500;0,0,i1\\nC=1.2990,2.7500;0,0,i1\\nC=-1.2990,4.2500;0,0,i1\\nC=0.0000,5.0000;0,0,i1\\nC=1.2990,4.2500;0,0,i1\\nC=2.7500,1.2990;0,0,i1\\nC=2.7500,-1.2990;0,0,i1\\nC=4.2500,1.2990;0,0,i1\\nC=5.0000,-0.0000;0,0,i1\\nC=4.2500,-1.2990;0,0,i1\\nC=1.2990,-2.7500;0,0,i1\\nC=-1.2990,-2.7500;0,0,i1\\nC=1.2990,-4.2500;0,0,i1\\nC=-0.0000,-5.0000;0,0,i1\\nC=-1.2990,-4.2500;0,0,i1\\nX=-2.0000,0.0000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n2-5=1,0\\n2-6=2,0\\n5-7=2,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n3-10=1,0\\n3-11=2,0\\n10-12=2,0\\n12-13=1,0\\n13-14=2,0\\n14-11=1,0\\n4-15=1,0\\n4-16=2,0\\n15-17=2,0\\n17-18=1,0\\n18-19=2,0\\n19-16=1,0\\n1-20=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[triphenylphosphine]]></Cell><Cell id=\\\"3\\\"><![CDATA[P|Ph{3}]]></Cell></Row><Row id=\\\"2\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nP=0.0000,0.0000;0,0,i0\\nC=0.0000,1.5000;0,0,i3\\nC=1.5000,-0.0000;0,0,i3\\nC=-0.0000,-1.5000;0,0,i3\\nX=-1.5000,0.0000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[trimethylphosphine]]></Cell><Cell id=\\\"3\\\"><![CDATA[P|Me{3}]]></Cell></Row><Row id=\\\"3\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nX=-2.7000,3.9500;0,0,i0\\nC=-1.2000,3.9500;0,0,i0\\nN=-0.3200,2.7400;0,0,i0\\nC=1.1100,3.2000;0,0,i1\\nN=-0.3200,5.1600;0,0,i0\\nC=1.1100,4.7000;0,0,i1\\nC=-0.7853,6.5860;0,0,i3\\nC=-0.7853,1.3140;0,0,i3\\n1-2=2,0\\n4-3=1,0\\n3-2=1,0\\n2-5=1,0\\n5-6=1,0\\n6-4=2,0\\n5-7=1,0\\n3-8=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[imidazolidine]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"4\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-0.9000,0.3500;0,0,i0\\nC=0.6000,0.3500;0,0,e0\\nO=2.1000,0.3500;0,0,i0\\n1-2=0,0\\n2-3=2,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[carbonyl]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"5\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nX=-2.4000,1.9714;0,0,i0\\nO=-0.9000,1.9714;0,0,i0\\nC=-0.1500,3.2705;0,0,i2\\nC=1.3500,3.2705;0,0,i3\\nC=-0.1500,0.6724;0,0,i2\\nC=1.3500,0.6724;0,0,i3\\n1-2=0,0\\n2-3=1,0\\n3-4=1,0\\n2-5=1,0\\n5-6=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[diethylether]]></Cell><Cell id=\\\"3\\\"><![CDATA[O|Et{2}]]></Cell></Row><Row id=\\\"6\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nX=-2.4000,1.9714;0,0,i0\\nO=-0.9000,1.9714;0,0,i0\\nC=-0.0200,0.7614;0,0,i2\\nC=1.4100,1.2214;0,0,i2\\nC=-0.0200,3.1814;0,0,i2\\nC=1.4100,2.7214;0,0,i2\\n1-2=0,0\\n4-3=1,0\\n3-2=1,0\\n2-5=1,0\\n5-6=1,0\\n6-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[tetrahydrofuran]]></Cell><Cell id=\\\"3\\\"><![CDATA[THF]]></Cell></Row><Row id=\\\"7\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,6)\\nX=-1.0000,-0.9143;0,0,i0\\nO=0.5000,-0.9143;0,0,i0\\nC=2.0000,-0.9143;0,0,i0\\nN=2.7500,-2.2133;0,0,i0\\nC=4.2500,-2.2133;0,0,i3\\nC=2.0000,-3.5124;0,0,i3\\nH=2.7500,0.3848;0,0,i0\\n1-2=0,0\\n2-3=2,0\\n3-4=1,0\\n4-5=1,0\\n4-6=1,0\\n3-7=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[dimethylformamide]]></Cell><Cell id=\\\"3\\\"><![CDATA[DMF]]></Cell></Row><Row id=\\\"8\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nX=-1.0000,-0.9143;0,0,i0\\nO=0.5000,-0.9143;0,0,i0\\nS=2.0000,-0.9143;0,0,i0\\nC=2.7500,-2.2133;0,0,i3\\nC=2.7500,0.3848;0,0,i3\\n1-2=0,0\\n2-3=2,0\\n3-4=1,0\\n3-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[dimethylsulfoxide]]></Cell><Cell id=\\\"3\\\"><![CDATA[DMSO]]></Cell></Row><Row id=\\\"9\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nC=6.8500,0.0490;0,0,i1\\nC=5.3500,0.0490;0,0,i1\\nC=7.6000,-1.2500;0,0,i1\\nN=4.6000,-1.2500;0,0,i0\\nC=5.3500,-2.5490;0,0,i1\\nC=6.8500,-2.5490;0,0,i1\\nX=3.1000,-1.2500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n4-7=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[pyridine]]></Cell><Cell id=\\\"3\\\"><![CDATA[Py]]></Cell></Row><Row id=\\\"10\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(22,24)\\nX=0.0000,-0.1997;0,0,i0\\nC=0.0000,1.9965;0,2,i0\\nN=1.2135,2.8782;0,0,i0\\nC=0.7500,4.3048;0,0,i1\\nC=-0.7500,4.3048;0,0,i1\\nN=-1.2135,2.8782;0,0,i0\\nC=-2.7135,2.8782;0,0,i0\\nC=2.7135,2.8782;0,0,i0\\nC=-3.4635,4.1772;0,0,i0\\nC=-4.9635,4.1772;0,0,i1\\nC=-5.7135,2.8782;0,0,i1\\nC=-4.9635,1.5791;0,0,i1\\nC=-3.4635,1.5791;0,0,i0\\nC=3.4635,1.5791;0,0,i0\\nC=4.9635,1.5791;0,0,i1\\nC=5.7135,2.8782;0,0,i1\\nC=4.9635,4.1772;0,0,i1\\nC=3.4635,4.1772;0,0,i0\\n{^i}Pr=-2.7135,0.2801;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n{^i}Pr=2.7135,0.2801;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n{^i}Pr=2.7135,5.4763;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n{^i}Pr=-2.7135,5.4763;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n1-2=0,0\\n2-3=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-2=1,0\\n6-7=1,0\\n3-8=1,0\\n7-9=2,0\\n9-10=1,0\\n10-11=2,0\\n11-12=1,0\\n12-13=2,0\\n13-7=1,0\\n8-14=2,0\\n14-15=1,0\\n15-16=2,0\\n16-17=1,0\\n17-18=2,0\\n18-8=1,0\\n13-19=1,0\\n14-20=1,0\\n18-21=1,0\\n9-22=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[IPr]]></Cell><Cell id=\\\"3\\\"/></Row></Content></DataSheet>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Bidentate Ligands</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"11\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,15)\\nC=2.7915,1.5000;0,0,i1\\nC=4.0905,0.7500;0,0,i1\\nC=1.4925,0.7500;0,0,i1\\nC=4.0905,-0.7500;0,0,i1\\nC=2.7915,-1.5000;0,0,i0\\nN=1.4925,-0.7500;0,0,i0\\nC=2.7915,-3.0000;0,0,i0\\nC=4.0905,-3.7500;0,0,i1\\nN=1.4925,-3.7500;0,0,i0\\nC=4.0905,-5.2500;0,0,i1\\nC=2.7915,-6.0000;0,0,i1\\nC=1.4925,-5.2500;0,0,i1\\nX=-1.1000,-2.2500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n13-9=0,0\\n13-6=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[bipyridine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[bipy]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,15)\\nC=2.7915,1.5000;0,0,i1\\nC=4.0905,0.7500;0,0,i1\\nC=1.4925,0.7500;0,0,i1\\nC=4.0905,-0.7500;0,0,i1\\nC=2.7915,-1.5000;0,0,i0\\nN=1.4925,-0.7500;0,0,i0\\nC=2.7915,-3.0000;0,0,i0\\nC=4.0905,-3.7500;0,0,i1\\nC=1.4925,-3.7500;0,0,i0\\nC=4.0905,-5.2500;0,0,i1\\nC=2.7915,-6.0000;0,0,i1\\nC=1.4925,-5.2500;0,0,i1\\nX=-1.1000,-2.2500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n13-9=1,0\\n13-6=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phenylpyridine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[phpy]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nX=-0.8000,3.2500;0,0,i0\\nO=-0.0500,1.9510;0,0,i0,xRESPATH:1:1\\nC=1.4500,1.9510;0,0,i0,xRESPATH:1:2\\nC=2.2000,3.2499;0,0,i1,xRESPATH:1:3\\nC=1.4500,4.5491;0,0,i0,xRESPATH:1:4\\nO=-0.0500,4.5491;0,0,i0,xRESPATH:1:5\\nC=2.2001,5.8481;0,0,i3\\nC=2.1999,0.6519;0,0,i3\\n2-3=2,0\\n2-1=0,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=1,0\\n5-7=1,0\\n3-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetylacetonate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[acac]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nX=-3.2985,-1.8750;0,0,i0\\nC=0.4506,-1.8500;0,0,i3\\nC=-1.0494,-1.8500;0,0,i0,xRESPATH:1:2\\nO=-1.7995,-3.1491;0,0,i0,xRESPATH:1:1\\nO=-1.7994,-0.5509;0,0,i0,xRESPATH:1:3\\n2-3=1,0\\n3-4=2,0\\n3-5=1,0\\n5-1=1,0\\n4-1=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetate]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,18)\\nC=2.7915,1.5000;0,0,i1\\nC=4.0905,0.7500;0,0,i1\\nC=1.4925,0.7500;0,0,i1\\nC=4.0905,-0.7500;0,0,i0\\nC=2.7915,-1.5000;0,0,i0\\nN=1.4925,-0.7500;0,0,i0\\nC=2.7915,-3.0000;0,0,i0\\nC=4.0905,-3.7500;0,0,i0\\nN=1.4925,-3.7500;0,0,i0\\nC=4.0905,-5.2500;0,0,i1\\nC=2.7915,-6.0000;0,0,i1\\nC=1.4925,-5.2500;0,0,i1\\nX=-1.1000,-2.2500;0,0,i0\\nC=5.3896,-3.0000;0,0,i1\\nC=5.3896,-1.5000;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n13-9=0,0\\n13-6=0,0\\n8-14=1,0\\n14-15=2,0\\n15-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phenanthroline]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[phen]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nX=-1.6500,0.6500;0,0,i0\\nN=0.1300,-0.5600;0,0,i2\\nC=1.5600,-0.1000;0,0,i2\\nN=0.1300,1.8600;0,0,i2\\nC=1.5600,1.4000;0,0,i2\\n3-2=1,0\\n2-1=0,0\\n1-4=0,0\\n4-5=1,0\\n5-3=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ethylenediamine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[en]]></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,14)\\nC=4.1514,2.1507;0,0,i1\\nC=2.8524,2.9007;0,0,i1\\nC=1.5534,2.1507;0,0,i1\\nN=1.5534,0.6507;0,0,i0\\nC=2.8524,-0.0993;0,0,i0\\nC=4.1515,0.6507;0,0,i0\\nC=5.4505,-0.0993;0,0,i1\\nC=2.8524,-1.5993;0,0,i0\\nC=4.1515,-2.3494;0,0,i1\\nC=5.4505,-1.5994;0,0,i1\\nO=1.5534,-2.3493;0,0,i0\\nX=-0.1457,-0.9064;0,0,i0\\n2-3=2,0\\n2-1=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=2,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n8-11=1,0\\n11-12=1,0\\n12-4=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[oxyquinoline]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(29,33)\\nX=-0.3660,-0.1210;0,0,i0\\nP=1.8140,1.0890;0,0,i0\\nC=3.2440,0.6290;0,0,i2\\nP=1.8140,-1.3310;0,0,i0\\nC=3.2440,-0.8710;0,0,i2\\nC=1.0487,2.5150;0,0,i0\\nC=2.8725,2.1519;0,0,i0\\nC=1.0487,-2.7570;0,0,i0\\nC=2.8725,-2.3939;0,0,i0\\nC=4.3221,1.7667;0,0,i1\\nC=2.4812,3.5999;0,0,i1\\nC=5.3806,2.8295;0,0,i1\\nC=4.9894,4.2776;0,0,i1\\nC=3.5397,4.6628;0,0,i1\\nC=1.8387,3.7901;0,0,i1\\nC=-0.4505,2.5616;0,0,i1\\nC=1.1294,5.1118;0,0,i1\\nC=-0.3699,5.1584;0,0,i1\\nC=-1.1598,3.8833;0,0,i1\\nC=-0.4505,-2.8036;0,0,i1\\nC=1.8387,-4.0321;0,0,i1\\nC=-1.1598,-4.1253;0,0,i1\\nC=-0.3699,-5.4004;0,0,i1\\nC=1.1294,-5.3538;0,0,i1\\nC=2.4812,-3.8419;0,0,i1\\nC=4.3221,-2.0087;0,0,i1\\nC=3.5397,-4.9048;0,0,i1\\nC=4.9893,-4.5196;0,0,i1\\nC=5.3806,-3.0716;0,0,i1\\n3-2=1,0\\n2-1=0,0\\n1-4=0,0\\n4-5=1,0\\n5-3=1,0\\n2-6=1,0\\n2-7=1,0\\n4-8=1,0\\n4-9=1,0\\n7-10=1,0\\n7-11=2,0\\n10-12=2,0\\n12-13=1,0\\n13-14=2,0\\n14-11=1,0\\n6-15=1,0\\n6-16=2,0\\n15-17=2,0\\n17-18=1,0\\n18-19=2,0\\n19-16=1,0\\n8-20=1,0\\n8-21=2,0\\n20-22=2,0\\n22-23=1,0\\n23-24=2,0\\n24-21=1,0\\n9-25=1,0\\n9-26=2,0\\n25-27=2,0\\n27-28=1,0\\n28-29=2,0\\n29-26=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ethylene bis(diphenylphosphine)]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[dppe]]></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(28,32)\\nX=-0.3660,-0.1210;0,0,i0\\nP=1.8140,1.0890;0,0,i0\\nP=1.8140,-1.3310;0,0,i0\\nC=1.0487,2.5150;0,0,i0\\nC=2.8725,2.1519;0,0,i0\\nC=1.0487,-2.7570;0,0,i0\\nC=2.8725,-2.3939;0,0,i0\\nC=4.3221,1.7667;0,0,i1\\nC=2.4812,3.5999;0,0,i1\\nC=5.3806,2.8295;0,0,i1\\nC=4.9894,4.2776;0,0,i1\\nC=3.5397,4.6628;0,0,i1\\nC=1.8387,3.7901;0,0,i1\\nC=-0.4505,2.5616;0,0,i1\\nC=1.1294,5.1118;0,0,i1\\nC=-0.3699,5.1584;0,0,i1\\nC=-1.1598,3.8833;0,0,i1\\nC=-0.4505,-2.8036;0,0,i1\\nC=1.8387,-4.0321;0,0,i1\\nC=-1.1598,-4.1253;0,0,i1\\nC=-0.3699,-5.4004;0,0,i1\\nC=1.1294,-5.3538;0,0,i1\\nC=2.4812,-3.8419;0,0,i1\\nC=4.3221,-2.0087;0,0,i1\\nC=3.5397,-4.9048;0,0,i1\\nC=4.9893,-4.5196;0,0,i1\\nC=5.3806,-3.0716;0,0,i1\\nC=3.5430,-0.1210;0,0,i2\\n2-1=0,0\\n1-3=0,0\\n2-4=1,0\\n2-5=1,0\\n3-6=1,0\\n3-7=1,0\\n5-8=1,0\\n5-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n4-13=1,0\\n4-14=2,0\\n13-15=2,0\\n15-16=1,0\\n16-17=2,0\\n17-14=1,0\\n6-18=1,0\\n6-19=2,0\\n18-20=2,0\\n20-21=1,0\\n21-22=2,0\\n22-19=1,0\\n7-23=1,0\\n7-24=2,0\\n23-25=2,0\\n25-26=1,0\\n26-27=2,0\\n27-24=1,0\\n2-28=1,0\\n3-28=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[methylene bis(diphenylphonsphine)]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[dppm]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nX=-3.3500,-0.0500;0,0,i0\\nO=-1.6700,-1.2600;0,0,i0\\nC=-0.2400,-0.8000;0,0,i0\\nO=-1.6700,1.1600;0,0,i0\\nC=-0.2400,0.7000;0,0,i0\\nC=1.0590,1.4499;0,0,i1\\nC=1.0590,-1.5500;0,0,i1\\nC=2.3581,-0.8000;0,0,i1\\nC=2.3581,0.6999;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=2,0\\n3-7=2,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[catecholate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[cat]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,8)\\nX=-2.9010,4.6990;0,0,i0\\nO=-1.4010,4.6990;0,0,i0\\nC=0.0990,4.6990;0,0,i1\\nC=0.8490,5.9981;0,0,i3\\nC=0.8490,3.4000;0,0,i2\\nC=0.0990,2.1010;0,0,i1\\nO=-1.4010,2.1010;0,0,i0\\nC=0.8490,0.8019;0,0,i3\\nX=-2.9010,2.1009;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n3-5=1,0\\n5-6=1,0\\n6-7=1,0\\n6-8=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[bridging acac]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Tridentate Ligands</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"3\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(19,23)\\nC=2.9998,2.0011;0,0,i1\\nC=4.4998,2.0011;0,0,i1\\nC=2.2498,0.7021;0,0,i1\\nC=5.2498,0.7021;0,0,i1\\nC=4.4998,-0.5969;0,0,i0\\nN=2.9998,-0.5969;0,0,i0\\nC=5.2498,-1.8960;0,0,i0\\nC=6.7498,-1.8960;0,0,i1\\nN=4.4998,-3.1950;0,0,i0\\nC=7.4998,-3.1950;0,0,i1\\nC=6.7498,-4.4940;0,0,i1\\nC=5.2498,-4.4940;0,0,i0\\nC=4.4999,-5.7930;0,0,i0\\nN=2.9999,-5.7930;0,0,i0\\nC=5.2499,-7.0921;0,0,i1\\nC=2.2498,-7.0921;0,0,i1\\nC=2.9998,-8.3911;0,0,i1\\nC=4.4998,-8.3912;0,0,i1\\nX=1.4998,-3.1950;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n12-13=1,0\\n13-14=1,0\\n13-15=2,0\\n14-16=2,0\\n16-17=1,0\\n17-18=2,0\\n18-15=1,0\\n6-19=0,0\\n9-19=0,0\\n14-19=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[terpyridine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[terpy]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,5)\\nX=-7.0728,1.0229;0,0,i0,xARENE:1:1\\nC=-5.3624,2.3410;0,0,i2,xARENE:1:2\\nC=-4.5676,1.0688;0,0,i1,xARENE:1:3\\nC=-5.2718,-0.2556;0,0,i2,xARENE:1:4\\n2-3=2,0\\n3-4=1,0\\n1-4=1,0\\n1-3=0,0\\n1-2=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[allyl]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,9)\\nC=3.6861,-1.8600;0,0,i2\\nN=2.1861,-1.8600;0,0,i2\\nC=4.4361,-3.1590;0,0,i2\\nN=3.6861,-4.4580;0,0,i1\\nC=4.4361,-5.7571;0,0,i2\\nC=3.6861,-7.0561;0,0,i2\\nN=2.1862,-7.0561;0,0,i2\\nX=0.6861,-4.4580;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n5-4=1,0\\n5-6=1,0\\n6-7=1,0\\n2-8=0,0\\n4-8=0,0\\n7-8=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[diethylaminetriamine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[dien]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Multidentate Ligands</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"5\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,12)\\nX=3.7990,0.0000;0,0,i0,xARENE:2:1,xARENE:1:1\\nC=5.6500,-0.1000;0,0,i1,xARENE:2:2\\nC=5.1000,-2.3000;0,0,i1,xARENE:1:3\\nC=5.6500,2.4000;0,0,i1,xARENE:2:3\\nC=5.1000,0.2000;0,0,i1,xARENE:1:2\\nC=7.0319,1.5176;0,0,i2\\nC=7.5819,3.0176;0,0,i2\\nC=7.5819,-1.0824;0,0,i2\\nC=7.0319,-2.5824;0,0,i2\\n2-4=2,0\\n3-5=2,0\\n5-6=1,0\\n4-7=1,0\\n2-8=1,0\\n3-9=1,0\\n6-7=1,0\\n9-8=1,0\\n1-3=0,0\\n1-5=0,0\\n1-4=0,0\\n1-2=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclooctadiene]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[COD]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,12)\\nX=3.7990,0.0000;0,0,i0,xARENE:2:1,xARENE:1:1\\nC=5.8000,0.0500;0,0,i1\\nC=7.1000,1.2500;0,0,i1\\nC=4.7000,1.7651;0,0,i1,xARENE:1:2\\nC=6.3000,2.4651;0,0,i1,xARENE:1:3\\nC=5.5500,-2.0000;0,0,i1,xARENE:2:2\\nC=6.8500,-0.8000;0,0,i1,xARENE:2:3\\nC=8.5000,0.6500;0,0,i2\\n2-4=1,0\\n3-5=1,0\\n2-6=1,0\\n3-7=1,0\\n6-7=2,0\\n2-8=1,0\\n8-3=1,0\\n4-5=2,0\\n1-4=0,0\\n1-5=0,0\\n1-6=0,0\\n1-7=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[norbornadiene]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,10)\\nC=0.2150,2.1200;0,0,i1,xARENE:1:2\\nC=-1.0950,3.1700;0,0,i1,xARENE:1:4\\nC=-0.1650,3.6300;0,0,i1,xARENE:1:3\\nC=-0.1650,0.6100;0,0,i1,xARENE:1:6\\nC=-1.0950,1.0700;0,0,i1,xARENE:1:5\\nX=-2.2110,2.0800;0,0,i0,xARENE:1:1\\n2-3=2,0\\n3-1=1,0\\n1-4=1,0\\n4-5=2,0\\n5-2=1,0\\n6-1=1,0\\n3-6=0,0\\n4-6=0,0\\n5-6=0,0\\n2-6=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclopentadienyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cp]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,12)\\nC=0.7490,6.7000;0,0,i1,xARENE:1:2\\nC=0.2000,5.9500;0,0,i1,xARENE:1:3\\nC=1.2981,6.0500;0,0,i1,xARENE:1:7\\nC=0.2000,4.4500;0,0,i1,xARENE:1:4\\nC=0.7490,3.7000;0,0,i1,xARENE:1:5\\nC=1.2981,4.3500;0,0,i1,xARENE:1:6\\nX=-1.3490,5.2000;0,0,i0,xARENE:1:1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n2-7=0,0\\n4-7=0,0\\n7-1=0,0\\n7-5=0,0\\n7-6=0,0\\n7-3=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[arene]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,15)\\nX=0.0000,0.0000;0,0,i0,xARENE:1:1\\nC=2.9263,-0.0154;0,0,i0,xARENE:1:2\\nC=1.5927,-1.0352;0,0,i0,xARENE:1:4\\nC=2.5119,-1.5163;0,0,i0,xARENE:1:3\\nC=2.5809,1.5029;0,0,i0,xARENE:1:6\\nC=1.6407,1.0642;0,0,i0,xARENE:1:5\\nC=3.7728,-0.0348;0,0,i3\\nC=2.8692,2.9749;0,0,i3\\nC=0.9137,2.3762;0,0,i3\\nC=0.8354,-2.3300;0,0,i3\\nC=2.7329,-3.0000;0,0,i3\\n3-4=2,0\\n4-2=1,0\\n2-5=1,0\\n5-6=2,0\\n6-3=1,0\\n1-2=1,0\\n4-1=0,0\\n5-1=0,0\\n6-1=0,0\\n3-1=0,0\\n2-7=1,0\\n5-8=1,0\\n6-9=1,0\\n3-10=1,0\\n4-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[pentamethylcyclopentadienyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cp*]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<DataSheet><Summary><Title>Cage Complexes</Title><Description><![CDATA[]]></Description></Summary><Extension/><Header nrows=\\\"8\\\" ncols=\\\"3\\\"><Column id=\\\"1\\\" name=\\\"Molecule\\\" type=\\\"molecule\\\">Molecular structure</Column><Column id=\\\"2\\\" name=\\\"Name\\\" type=\\\"string\\\">Template name</Column><Column id=\\\"3\\\" name=\\\"Abbrev\\\" type=\\\"string\\\">Optional abbreviation</Column></Header><Content><Row id=\\\"1\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(21,25)\\nM=-0.6000,2.4500;0,0,i0\\nN=-1.3500,3.7490;0,0,i0\\nO=0.1500,1.1510;0,0,i0\\nO=0.9000,2.4500;0,0,i0\\nO=-2.1000,2.4500;0,0,i0\\nO=-1.3500,1.1510;0,0,i0\\nN=0.1500,3.7490;0,0,i0\\nC=-0.9618,5.1979;0,0,i2\\nC=-0.2382,5.1979;0,0,i2\\nC=-2.7989,4.1373;0,0,i2\\nC=-3.3990,3.2000;0,0,i0\\nC=2.1990,3.2000;0,0,i0\\nC=1.5989,4.1373;0,0,i2\\nC=-3.0821,2.1510;0,0,i0\\nC=1.8821,2.1510;0,0,i0\\nC=1.4938,3.5999;0,0,i2\\nC=-2.6938,3.5999;0,0,i2\\nO=3.2679,1.5769;0,0,i0\\nO=3.6975,3.2689;0,0,i0\\nO=-4.4679,1.5769;0,0,i0\\nO=-4.8975,3.2689;0,0,i0\\n1-2=0,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n1-6=1,0\\n1-7=0,0\\n2-8=1,0\\n7-9=1,0\\n8-9=1,0\\n2-10=1,0\\n5-11=1,0\\n4-12=1,0\\n7-13=1,0\\n12-13=1,0\\n11-10=1,0\\n6-14=1,0\\n3-15=1,0\\n15-16=1,0\\n14-17=1,0\\n17-2=1,0\\n16-7=1,0\\n15-18=2,0\\n12-19=2,0\\n14-20=2,0\\n11-21=2,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[EDTA]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"2\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(25,32)\\nM=-0.3000,1.2000;0,0,i0\\nN=-1.7142,2.6142;0,0,i0\\nN=1.1142,2.6142;0,0,i0\\nN=1.1142,-0.2142;0,0,i0\\nN=-1.7142,-0.2142;0,0,i0\\nC=-3.1921,0.0191;0,0,i0\\nC=-3.8780,-1.3173;0,0,i1\\nC=-1.4809,-1.6921;0,0,i0\\nC=-2.8173,-2.3780;0,0,i1\\nC=-1.4809,4.0921;0,0,i0\\nC=-2.8173,4.7780;0,0,i1\\nC=-3.1921,2.3809;0,0,i0\\nC=-3.8780,3.7173;0,0,i1\\nC=2.5921,2.3809;0,0,i0\\nC=3.2780,3.7173;0,0,i1\\nC=0.8809,4.0921;0,0,i0\\nC=2.2173,4.7780;0,0,i1\\nC=0.8809,-1.6921;0,0,i0\\nC=2.2173,-2.3780;0,0,i1\\nC=2.5921,0.0191;0,0,i0\\nC=3.2780,-1.3173;0,0,i1\\nC=-3.8714,1.2000;0,0,i1\\nC=-0.3000,4.7714;0,0,i1\\nC=3.2714,1.2000;0,0,i1\\nC=-0.3000,-2.3714;0,0,i1\\n1-2=1,0\\n1-3=0,0\\n1-4=1,0\\n1-5=0,0\\n7-6=1,0\\n6-5=1,0\\n5-8=2,0\\n8-9=1,0\\n9-7=2,0\\n11-10=2,0\\n10-2=1,0\\n2-12=1,0\\n12-13=2,0\\n13-11=1,0\\n15-14=1,0\\n14-3=2,0\\n3-16=1,0\\n16-17=1,0\\n17-15=2,0\\n19-18=1,0\\n18-4=1,0\\n4-20=1,0\\n20-21=1,0\\n21-19=2,0\\n6-22=2,0\\n10-23=1,0\\n14-24=1,0\\n18-25=2,0\\n22-12=1,0\\n23-16=2,0\\n24-20=2,0\\n25-8=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[porphyrin]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"3\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(25,32)\\nM=1.5000,0.0000;0,0,i0\\nN=2.9117,1.4117;0,0,i0\\nN=0.0882,-1.4117;0,0,i0\\nN=2.9117,-1.4117;0,0,i0\\nN=0.0882,1.4117;0,0,i0\\nC=-2.0755,-2.5147;0,0,i1\\nC=-1.3895,-1.1783;0,0,i0\\nC=0.3215,-2.8895;0,0,i0\\nC=-1.0148,-3.5754;0,0,i1\\nC=5.0755,2.5147;0,0,i1\\nC=4.3895,1.1783;0,0,i0\\nC=2.6784,2.8895;0,0,i0\\nC=4.0148,3.5754;0,0,i1\\nC=-1.0148,3.5754;0,0,i1\\nC=0.3216,2.8895;0,0,i0\\nC=-1.3895,1.1783;0,0,i0\\nC=-2.0754,2.5148;0,0,i1\\nC=4.0148,-3.5754;0,0,i1\\nC=2.6783,-2.8895;0,0,i0\\nC=4.3895,-1.1783;0,0,i0\\nC=5.0754,-2.5148;0,0,i1\\nN=-1.9510,-0.0731;0,0,i0\\nN=1.4268,3.4510;0,0,i0\\nN=4.9510,0.0731;0,0,i0\\nN=1.5731,-3.4510;0,0,i0\\n1-2=0,0\\n1-3=0,0\\n1-4=0,0\\n1-5=0,0\\n6-7=1,0\\n7-3=2,0\\n3-8=1,0\\n8-9=1,0\\n9-6=2,0\\n10-11=1,0\\n11-2=2,0\\n2-12=1,0\\n12-13=1,0\\n13-10=2,0\\n14-15=1,0\\n15-5=2,0\\n5-16=1,0\\n16-17=1,0\\n17-14=2,0\\n18-19=1,0\\n19-4=2,0\\n4-20=1,0\\n20-21=1,0\\n21-18=2,0\\n7-22=1,0\\n15-23=1,0\\n11-24=1,0\\n19-25=1,0\\n8-25=2,0\\n16-22=2,0\\n12-23=2,0\\n20-24=2,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[porphyrinoid]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"4\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,20)\\nM=12.1738,-1.7111;0,0,i0,xARENE:1:1,xARENE:2:1\\nC=13.1284,-0.5301;0,0,i1,xARENE:1:2\\nC=11.2193,-0.5301;0,0,i1,xARENE:1:3\\nC=11.2193,-2.8920;0,0,i1,xARENE:2:2\\nC=13.1284,-2.8920;0,0,i1,xARENE:2:3\\nC=10.8390,-3.7589;0,0,i1,xARENE:2:6\\nC=12.1738,-4.1749;0,0,i1,xARENE:2:5\\nC=13.5087,-3.7589;0,0,i1,xARENE:2:4\\nC=13.5087,0.3368;0,0,i1,xARENE:1:6\\nC=12.1738,0.7528;0,0,i1,xARENE:1:5\\nC=10.8390,0.3368;0,0,i1,xARENE:1:4\\n2-3=1,0\\n4-5=1,0\\n4-6=2,0\\n6-7=1,0\\n7-8=1,0\\n8-5=2,0\\n2-9=2,0\\n9-10=1,0\\n10-11=1,0\\n11-3=2,0\\n10-1=1,0\\n7-1=1,0\\n8-1=0,0\\n5-1=0,0\\n4-1=0,0\\n6-1=0,0\\n3-1=0,0\\n2-1=0,0\\n9-1=0,0\\n11-1=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[metallocene]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"5\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(37,45)\\nM=1.5000,0.0000;0,0,i0\\nC=5.3914,3.7500;0,0,i1\\nC=6.6904,3.0000;0,0,i1\\nC=4.0924,3.0000;0,0,i1\\nC=6.6904,1.5000;0,0,i1\\nC=5.3914,0.7500;0,0,i0\\nN=4.0924,1.5000;0,0,i0\\nC=5.3914,-0.7500;0,0,i0\\nC=6.6904,-1.5000;0,0,i1\\nN=4.0924,-1.5000;0,0,i0\\nC=6.6904,-3.0000;0,0,i1\\nC=5.3914,-3.7500;0,0,i1\\nC=4.0924,-3.0000;0,0,i1\\nC=-3.6940,1.4927;0,0,i1\\nC=-3.6946,2.9927;0,0,i1\\nC=-2.3946,0.7433;0,0,i1\\nC=-2.3959,3.7433;0,0,i1\\nC=-1.0966,2.9939;0,0,i0\\nN=-1.0959,1.4939;0,0,i0\\nC=0.2020,3.7445;0,0,i0\\nC=0.2013,5.2445;0,0,i1\\nN=1.5014,2.9951;0,0,i0\\nC=1.5000,5.9951;0,0,i1\\nC=2.7994,5.2457;0,0,i1\\nC=2.8001,3.7457;0,0,i1\\nC=2.8030,-5.2448;0,0,i1\\nC=1.5041,-5.9951;0,0,i1\\nC=2.8026,-3.7448;0,0,i1\\nC=0.2049,-5.2453;0,0,i1\\nC=0.2046,-3.7454;0,0,i0\\nN=1.5034,-2.9951;0,0,i0\\nC=-1.0945,-2.9957;0,0,i0\\nC=-2.3934,-3.7459;0,0,i1\\nN=-1.0949,-1.4957;0,0,i0\\nC=-3.6926,-2.9962;0,0,i1\\nC=-3.6930,-1.4963;0,0,i1\\nC=-2.3941,-0.7460;0,0,i1\\n2-3=1,0\\n2-4=2,0\\n3-5=2,0\\n5-6=1,0\\n6-7=2,0\\n7-4=1,0\\n6-8=1,0\\n8-9=1,0\\n8-10=2,0\\n9-11=2,0\\n11-12=1,0\\n12-13=2,0\\n13-10=1,0\\n1-10=0,0\\n1-7=0,0\\n14-15=1,0\\n14-16=2,0\\n15-17=2,0\\n17-18=1,0\\n18-19=2,0\\n19-16=1,0\\n18-20=1,0\\n20-21=1,0\\n20-22=2,0\\n21-23=2,0\\n23-24=1,0\\n24-25=2,0\\n25-22=1,0\\n1-22=0,0\\n1-19=0,0\\n26-27=1,0\\n26-28=2,0\\n27-29=2,0\\n29-30=1,0\\n30-31=2,0\\n31-28=1,0\\n30-32=1,0\\n32-33=1,0\\n32-34=2,0\\n33-35=2,0\\n35-36=1,0\\n36-37=2,0\\n37-34=1,0\\n1-34=0,0\\n1-31=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[tris-bipy]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"6\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,18)\\nN=0.0000,0.0000;0,0,i1\\nC=-1.5000,0.0000;0,0,i2\\nC=-2.2500,-1.2990;0,0,i2\\nC=-1.5000,-2.5981;0,0,i2\\nN=-0.0000,-2.5981;0,0,i1\\nC=0.7500,1.2990;0,0,i2\\nC=2.2500,1.2990;0,0,i2\\nN=3.0000,-0.0000;0,0,i1\\nC=4.5000,-0.0000;0,0,i2\\nC=5.2500,-1.2990;0,0,i2\\nC=4.5000,-2.5981;0,0,i2\\nN=3.0000,-2.5981;0,0,i1\\nC=0.7500,-3.8971;0,0,i2\\nC=2.2500,-3.8971;0,0,i2\\nM=1.5000,-1.3000;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n1-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n5-13=1,0\\n12-14=1,0\\n14-13=1,0\\n1-15=0,0\\n15-12=0,0\\n5-15=0,0\\n15-8=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[tren]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"7\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,13)\\nM=1.4999,0.0000;0,0,i0\\nN=1.4999,1.5000;0,0,i2\\nN=1.4999,-1.5000;0,0,i2\\nN=0.2009,0.7500;0,0,i2\\nN=0.2009,-0.7500;0,0,i0\\nC=0.4393,-2.5606;0,0,i2\\nC=-1.2479,-0.3617;0,0,i2\\nC=-0.1872,-2.1988;0,0,i2\\nC=-1.2479,0.3617;0,0,i2\\nC=0.0511,1.8882;0,0,i2\\nC=-0.7973,0.9790;0,0,i2\\n1-2=0,0\\n1-3=0,0\\n1-4=0,0\\n1-5=0,0\\n3-6=1,0\\n5-7=1,0\\n5-8=1,0\\n4-9=1,0\\n7-9=1,0\\n6-8=1,0\\n2-10=1,0\\n5-11=1,0\\n10-11=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[N4]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"8\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(21,27)\\nN=3.2639,-1.3522;0,0,i1\\nC=1.8122,-0.7585;0,0,i2\\nC=1.8056,0.7411;0,0,i2\\nN=3.2521,1.3475;0,0,i1\\nN=5.9520,1.3594;0,0,i1\\nC=7.4037,0.7657;0,0,i2\\nC=7.4103,-0.7339;0,0,i2\\nN=5.9639,-1.3403;0,0,i1\\nC=3.2705,-2.8521;0,0,i2\\nC=5.9705,-2.8402;0,0,i2\\nC=5.9454,2.8594;0,0,i2\\nC=3.2455,2.8475;0,0,i2\\nC=4.6431,3.6036;0,0,i1\\nC=4.5728,-3.5963;0,0,i1\\nM=4.6052,-0.0128;0,0,i0\\nN=4.5994,1.4890;0,0,i1\\nN=4.6133,-1.5126;0,0,i1\\nC=4.1980,2.5347;0,0,i2\\nC=4.2120,-2.5583;0,0,i2\\nC=2.8657,-0.6612;0,0,i2\\nC=2.8489,0.6376;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n1-9=1,0\\n8-10=1,0\\n5-11=1,0\\n4-12=1,0\\n11-13=1,0\\n13-12=1,0\\n9-14=1,0\\n14-10=1,0\\n1-15=0,0\\n4-15=0,0\\n8-15=0,0\\n5-15=0,0\\n15-16=0,0\\n15-17=0,0\\n16-18=1,0\\n13-18=1,0\\n17-19=1,0\\n19-14=1,0\\n17-20=1,0\\n16-21=1,0\\n21-20=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[N6]]></Cell><Cell id=\\\"3\\\"/></Row></Content></DataSheet>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Amino Acids</Title><Description><![CDATA[]]></Description></Summary>\\n<Header nrows=\\\"20\\\" ncols=\\\"4\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n<Column name=\\\"Mnemonic\\\" type=\\\"string\\\" id=\\\"4\\\"></Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,6)\\nC=-6.5731,8.0000;0,0,i0\\nO=-6.5731,9.5000;0,0,i0\\nC=-7.8721,7.2500;0,0,i1\\nX=-5.2741,7.2500;0,0,i0\\nN=-9.1712,8.0000;0,0,i1\\nC=-7.8721,5.7500;0,0,i3\\nX=-10.4702,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n5-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[alanine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ala]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[A]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nC=-6.8514,8.0000;0,0,i0\\nO=-6.8514,9.5000;0,0,i0\\nC=-8.1504,7.2500;0,0,i1\\nX=-5.5524,7.2500;0,0,i0\\nN=-9.4495,8.0000;0,0,i1\\nC=-8.1504,5.7500;0,0,i2\\nS=-6.8515,5.0000;0,0,i1\\nX=-10.7485,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n5-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cysteine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cys]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[C]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i0\\nO=-7.5009,3.5000;-1,0,i0\\nO=-6.2020,5.7499;0,0,i0\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[aspartic acid]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Asp]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[D]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,10)\\nC=-7.3830,8.0000;0,0,i0\\nO=-7.3830,9.5000;0,0,i0\\nC=-8.6820,7.2500;0,0,i1\\nX=-6.0840,7.2500;0,0,i0\\nN=-9.9811,8.0000;0,0,i1\\nC=-8.6820,5.7500;0,0,i2\\nC=-7.3830,5.0000;0,0,i2\\nC=-7.3828,3.5000;0,0,i0\\nO=-6.0838,2.7500;-1,0,i0\\nO=-8.6819,2.7500;0,0,i0\\nX=-11.2801,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n8-10=2,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[glutamic acid]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Glu]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[E]]></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,13)\\nC=-8.8000,8.0000;0,0,i0\\nO=-8.8000,9.5000;0,0,i0\\nC=-10.0990,7.2500;0,0,i1\\nX=-7.5010,7.2500;0,0,i0\\nN=-11.3981,8.0000;0,0,i1\\nC=-10.0990,5.7500;0,0,i2\\nC=-8.8000,5.0000;0,0,i0\\nC=-8.8000,3.5000;0,0,i1\\nC=-7.5010,5.7500;0,0,i1\\nC=-7.5010,2.7500;0,0,i1\\nC=-6.2019,3.5000;0,0,i1\\nC=-6.2019,5.0000;0,0,i1\\nX=-12.6971,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n5-13=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phenylalanine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Phe]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[F]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nC=-6.6349,8.0000;0,0,i0\\nO=-6.6349,9.5000;0,0,i0\\nC=-7.9339,7.2500;0,0,i2\\nX=-5.3359,7.2500;0,0,i0\\nN=-9.2330,8.0000;0,0,i1\\nX=-10.5320,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n5-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[glycine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Gly]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[G]]></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=-8.4232,8.0000;0,0,i0\\nO=-8.4232,9.5000;0,0,i0\\nC=-9.7222,7.2500;0,0,i1\\nX=-7.1242,7.2500;0,0,i0\\nN=-11.0213,8.0000;0,0,i1\\nC=-9.7222,5.7500;0,0,i2\\nC=-8.4232,5.0000;0,0,i0\\nC=-6.0475,4.4955;0,0,i1\\nN=-6.7961,3.2002;0,0,i1\\nC=-8.2664,3.5081;0,0,i1\\nN=-7.0492,5.6069;0,0,i0\\nX=-12.3203,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n10-9=1,0\\n9-8=1,0\\n8-11=2,0\\n11-7=1,0\\n7-10=2,0\\n5-12=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[histidine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[His]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[H]]></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-6.7216,8.0000;0,0,i0\\nO=-6.7216,9.5000;0,0,i0\\nC=-8.0206,7.2500;0,0,i1\\nX=-5.4226,7.2500;0,0,i0\\nN=-9.3197,8.0000;0,0,i1\\nC=-8.0206,5.7500;0,0,i1\\nC=-6.7216,5.0000;0,0,i2\\nC=-9.3196,5.0000;0,0,i3\\nC=-6.7214,3.5000;0,0,i3\\nX=-10.6187,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n6-8=1,0\\n7-9=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[isoleucine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ile]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[I]]></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,10)\\nC=-7.8553,8.0000;0,0,i0\\nO=-7.8553,9.5000;0,0,i0\\nC=-9.1543,7.2500;0,0,i1\\nX=-6.5563,7.2500;0,0,i0\\nN=-10.4534,8.0000;0,0,i1\\nC=-9.1543,5.7500;0,0,i2\\nC=-7.8553,5.0000;0,0,i2\\nC=-7.8552,3.5000;0,0,i2\\nC=-6.5561,2.7500;0,0,i2\\nN=-6.5561,1.2500;1,0,i3\\nX=-11.7524,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[lysine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Lys]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[K]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i1\\nC=-7.5008,3.5000;0,0,i3\\nC=-6.2019,5.7500;0,0,i3\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[leucine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Leu]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[L]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i2\\nS=-7.5008,3.5000;0,0,i0\\nC=-6.2018,2.7500;0,0,i3\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[methionine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Met]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[M]]></Cell>\\n</Row>\\n<Row id=\\\"12\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i0\\nN=-7.5008,3.5000;0,0,i2\\nO=-6.2019,5.7500;0,0,i0\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[asparagine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Asn]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[N]]></Cell>\\n</Row>\\n<Row id=\\\"13\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=-5.7561,8.0000;0,0,i0\\nO=-5.7561,9.5000;0,0,i0\\nC=-7.0551,7.2500;0,0,i1\\nX=-4.4571,7.2500;0,0,i0\\nC=-7.2122,5.7621;0,0,i2\\nC=-8.6806,5.4455;0,0,i2\\nN=-8.4222,7.8579;0,0,i0\\nC=-9.4306,6.7446;0,0,i2\\nX=-8.7323,9.3255;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n6-5=1,0\\n3-5=1,2\\n3-7=1,0\\n7-8=1,0\\n8-6=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[proline]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Pro]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[P]]></Cell>\\n</Row>\\n<Row id=\\\"14\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,10)\\nC=-7.3829,8.0000;0,0,i0\\nO=-7.3829,9.5000;0,0,i0\\nC=-8.6819,7.2500;0,0,i1\\nX=-6.0839,7.2500;0,0,i0\\nN=-9.9810,8.0000;0,0,i1\\nC=-8.6819,5.7500;0,0,i2\\nC=-7.3829,5.0000;0,0,i2\\nC=-7.3828,3.5000;0,0,i0\\nN=-6.0837,2.7500;0,0,i2\\nO=-8.6818,2.7500;0,0,i0\\nX=-11.2800,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n8-10=2,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[glutamine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Gln]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[Q]]></Cell>\\n</Row>\\n<Row id=\\\"15\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,12)\\nC=-11.2850,5.8016;0,0,i0\\nO=-11.2850,7.3016;0,0,i0\\nC=-12.5840,5.0517;0,0,i1\\nX=-9.9860,5.0516;0,0,i0\\nN=-13.8830,5.8017;0,0,i1\\nC=-12.5840,3.5516;0,0,i2\\nC=-11.2849,2.8015;0,0,i2\\nC=-11.2849,1.3015;0,0,i2\\nN=-9.9859,0.5516;0,0,i1\\nC=-9.9859,-0.9483;0,0,i0\\nN=-11.2850,-1.6984;1,0,i2\\nN=-8.6869,-1.6983;0,0,i2\\nX=-15.1821,5.0517;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=2,0\\n10-12=1,0\\n5-13=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[arginine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Arg]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[R]]></Cell>\\n</Row>\\n<Row id=\\\"16\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nC=-6.8514,8.0000;0,0,i0\\nO=-6.8514,9.5000;0,0,i0\\nC=-8.1504,7.2500;0,0,i1\\nX=-5.5525,7.2500;0,0,i0\\nN=-9.4496,8.0000;0,0,i1\\nC=-8.1504,5.7500;0,0,i2\\nO=-6.8514,5.0000;0,0,i1\\nX=-10.7486,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n5-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[serine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ser]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[S]]></Cell>\\n</Row>\\n<Row id=\\\"17\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,8)\\nC=-6.4906,8.0000;0,0,i0\\nO=-6.4906,9.5000;0,0,i0\\nC=-7.7896,7.2500;0,0,i1\\nX=-5.1916,7.2500;0,0,i0\\nN=-9.0887,8.0000;0,0,i1\\nC=-7.7896,5.7500;0,0,i1\\nC=-9.0887,5.0000;0,0,i3\\nO=-6.4906,5.0000;0,0,i1\\nX=-10.3877,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,2\\n3-6=1,0\\n6-7=1,0\\n6-8=1,2\\n5-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[threonine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Thr]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[T]]></Cell>\\n</Row>\\n<Row id=\\\"18\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,14)\\nC=-9.3567,8.0000;0,0,i0\\nO=-9.3567,9.5000;0,0,i0\\nC=-10.6557,7.2500;0,0,i1\\nX=-8.0577,7.2500;0,0,i0\\nN=-11.9548,8.0000;0,0,i1\\nC=-10.6557,5.7500;0,0,i2\\nC=-9.3567,5.0000;0,0,i0\\nC=-9.3567,3.5000;0,0,i1\\nC=-8.0577,5.7500;0,0,i1\\nC=-8.0577,2.7500;0,0,i1\\nC=-6.7586,3.5000;0,0,i0\\nC=-6.7586,5.0000;0,0,i1\\nO=-5.4596,2.7500;0,0,i1\\nX=-13.2538,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n11-13=1,0\\n5-14=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[tyrosine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Tyr]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[Y]]></Cell>\\n</Row>\\n<Row id=\\\"19\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,8)\\nC=-6.4906,8.0000;0,0,i0\\nO=-6.4906,9.5000;0,0,i0\\nC=-7.7896,7.2500;0,0,i1\\nX=-5.1916,7.2500;0,0,i0\\nN=-9.0887,8.0000;0,0,i1\\nC=-7.7896,5.7500;0,0,i1\\nC=-9.0887,5.0000;0,0,i3\\nC=-6.4906,5.0000;0,0,i3\\nX=-10.3877,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n6-8=1,0\\n5-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[valine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Val]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[V]]></Cell>\\n</Row>\\n<Row id=\\\"20\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,17)\\nC=-9.1949,8.0000;0,0,i0\\nO=-9.1949,9.5000;0,0,i0\\nC=-10.4939,7.2500;0,0,i1\\nX=-7.8959,7.2500;0,0,i0\\nN=-11.7930,8.0000;0,0,i1\\nC=-10.4939,5.7500;0,0,i2\\nC=-9.1949,5.0000;0,0,i0\\nC=-9.4755,2.2797;0,0,i1\\nC=-8.7255,0.9806;0,0,i1\\nC=-8.7255,3.5787;0,0,i0\\nC=-7.2255,0.9806;0,0,i1\\nC=-6.4755,2.2797;0,0,i1\\nC=-7.2255,3.5787;0,0,i0\\nC=-7.9866,5.8824;0,0,i1\\nN=-6.7662,5.0065;0,0,i1\\nX=-13.0920,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n8-9=1,0\\n8-10=2,0\\n9-11=2,0\\n11-12=1,0\\n12-13=2,0\\n13-10=1,0\\n10-7=1,0\\n7-14=2,0\\n14-15=1,0\\n15-13=1,0\\n5-16=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[tryptophan]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Trp]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[W]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Biomolecules</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"8\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,12)\\nN=0.7009,1.8000;0,0,i0\\nC=2.0000,2.5500;0,0,i1\\nC=-0.5981,2.5500;0,0,i0\\nN=2.0000,4.0500;0,0,i0\\nC=0.7009,4.8000;0,0,i0\\nC=-0.5981,4.0500;0,0,i0\\nN=-2.0194,2.0806;0,0,i0\\nC=-2.9018,3.2889;0,0,i1\\nN=-2.0260,4.5093;0,0,i0\\nN=0.7009,6.3000;0,0,i2\\nX=-2.4777,0.6523;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n5-10=1,0\\n7-11=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[adenine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,13)\\nN=0.7009,1.8000;0,0,i0\\nC=2.0000,2.5500;0,0,i0\\nC=-0.5981,2.5500;0,0,i0\\nN=2.0000,4.0500;0,0,i1\\nC=0.7009,4.8000;0,0,i0\\nC=-0.5981,4.0500;0,0,i0\\nN=-2.0194,2.0806;0,0,i0\\nC=-2.9018,3.2889;0,0,i1\\nN=-2.0260,4.5093;0,0,i0\\nO=0.7009,6.3000;0,0,i0\\nX=-2.4777,0.6523;0,0,i0\\nN=3.2990,1.8000;0,0,i2\\n1-2=2,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=2,0\\n3-7=1,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n5-10=2,0\\n7-11=1,0\\n2-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[guanine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=-1.7510,2.3500;0,0,i0\\nC=-3.0500,1.6000;0,0,i1\\nN=-0.4519,1.6000;0,0,i0\\nC=-3.0500,0.1000;0,0,i1\\nN=-1.7510,-0.6500;0,0,i0\\nC=-0.4519,0.1000;0,0,i0\\nN=-1.7510,3.8500;0,0,i2\\nO=0.8471,-0.6500;0,0,i0\\nX=-1.7510,-2.1500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n1-7=1,0\\n6-8=2,0\\n5-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cytosine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=-1.7510,2.3500;0,0,i0\\nC=-3.0500,1.6000;0,0,i1\\nN=-0.4519,1.6000;0,0,i1\\nC=-3.0500,0.1000;0,0,i1\\nN=-1.7510,-0.6500;0,0,i0\\nC=-0.4519,0.1000;0,0,i0\\nO=-1.7510,3.8500;0,0,i0\\nO=0.8471,-0.6500;0,0,i0\\nX=-1.7510,-2.1500;0,0,i0\\n1-2=1,0\\n3-1=1,0\\n2-4=2,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n1-7=2,0\\n6-8=2,0\\n5-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[uracil]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,10)\\nC=-1.7510,2.3500;0,0,i0\\nC=-3.0500,1.6000;0,0,i0\\nN=-0.4519,1.6000;0,0,i1\\nC=-3.0500,0.1000;0,0,i1\\nN=-1.7510,-0.6500;0,0,i0\\nC=-0.4519,0.1000;0,0,i0\\nO=-1.7510,3.8500;0,0,i0\\nO=0.8471,-0.6500;0,0,i0\\nX=-1.7510,-2.1500;0,0,i0\\nC=-4.3490,2.3500;0,0,i3\\n1-2=1,0\\n3-1=1,0\\n2-4=2,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n1-7=2,0\\n6-8=2,0\\n5-9=1,0\\n2-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[thymine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(27,29)\\nN=4.6026,-2.2500;0,0,i0\\nC=5.9018,-1.5000;0,0,i1\\nC=3.3036,-1.5000;0,0,i0\\nN=5.9018,0.0000;0,0,i0\\nC=4.6026,0.7500;0,0,i0\\nC=3.3036,0.0000;0,0,i0\\nN=1.8824,-1.9694;0,0,i0\\nC=1.0000,-0.7610;0,0,i1\\nN=1.8756,0.4593;0,0,i0\\nN=4.6026,2.2500;0,0,i2\\nC=1.4240,-3.3975;0,0,i1\\nO=0.0030,-3.8657;0,0,i0\\nC=0.0040,-5.3680;0,0,i1\\nC=2.3071,-4.6051;0,0,i1\\nC=1.4322,-5.8263;0,0,i1\\nO=3.8071,-4.5978;0,0,i1\\nO=1.9031,-7.2505;0,0,i1\\nC=-1.2076,-6.2522;0,0,i2\\nO=-2.5790,-5.6451;0,0,i0\\nP=-3.7905,-6.5296;0,0,i0\\nO=-4.6750,-5.3179;0,0,i0\\nO=-2.9062,-7.7412;0,0,i1\\nO=-5.0022,-7.4140;0,0,i0\\nP=-6.3738,-6.8069;0,0,i0\\nO=-5.7668,-5.4352;0,0,i0\\nO=-6.9808,-8.1786;0,0,i1\\nO=-7.7455,-6.1998;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n5-10=1,0\\n11-7=1,1\\n13-12=1,0\\n12-11=1,0\\n11-14=1,0\\n14-15=1,0\\n15-13=1,0\\n14-16=1,2\\n15-17=1,2\\n13-18=1,1\\n18-19=1,0\\n20-21=2,0\\n20-22=1,0\\n20-23=1,0\\n20-19=1,0\\n24-25=2,0\\n24-26=1,0\\n24-27=1,0\\n24-23=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[ADP]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,19)\\nC=2.2100,1.1549;0,0,i0\\nN=1.0000,0.2749;0,0,i1\\nC=1.4600,-1.1549;0,0,i0\\nN=3.4200,0.2749;0,0,i1\\nC=2.9600,-1.1549;0,0,i0\\nC=3.4282,-2.5763;0,0,i1\\nS=2.2199,-3.4587;0,0,i0\\nC=0.9995,-2.5829;0,0,i2\\nO=2.2100,2.6549;0,0,i0\\nH=4.4599,-1.1497;0,0,i0\\nH=-0.0399,-1.1545;0,0,i0\\nC=4.8563,-3.0352;0,0,i2\\nC=5.9677,-2.0279;0,0,i2\\nC=7.3958,-2.4869;0,0,i2\\nC=8.5073,-1.4796;0,0,i2\\nC=9.9353,-1.9386;0,0,i0\\nO=11.0468,-0.9314;0,0,i0\\nO=10.2519,-3.4048;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-3=1,0\\n1-9=2,0\\n5-10=1,1\\n3-11=1,1\\n6-12=1,2\\n12-13=1,0\\n13-14=1,0\\n14-15=1,0\\n16-17=2,0\\n16-18=1,0\\n16-15=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[biotin]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(24,27)\\nC=-7.1991,2.0500;0,0,i1\\nC=-8.4981,1.3000;0,0,i1\\nC=-8.4981,-0.2000;0,0,i0\\nC=-7.1991,-0.9500;0,0,i1\\nC=-5.9000,-0.2000;0,0,i0\\nC=-5.9000,1.3000;0,0,i0\\nC=-4.6009,-0.9500;0,0,i2\\nC=-3.3019,-0.2000;0,0,i2\\nC=-3.3019,1.3000;0,0,i0\\nC=-4.6009,2.0500;0,0,i0\\nC=-2.0028,2.0500;0,0,i0\\nC=-2.0028,3.5500;0,0,i0\\nC=-3.3018,4.3000;0,0,i2\\nC=-4.6008,3.5501;0,0,i2\\nC=-0.5814,4.0194;0,0,i1\\nC=0.3009,2.8111;0,0,i1\\nC=-0.5749,1.5907;0,0,i2\\nO=-9.7971,-0.9500;0,0,i1\\nH=-4.6009,0.5500;0,0,i0\\nH=-3.3019,2.8000;0,0,i0\\nH=-2.0028,0.5500;0,0,i0\\nC=-2.0028,5.0500;0,0,i3\\nO=-0.1231,5.4476;0,0,i1\\nO=1.8009,2.8174;0,0,i1\\n2-3=2,0\\n2-1=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=2,0\\n8-9=1,0\\n8-7=1,0\\n9-10=1,0\\n10-6=1,0\\n5-7=1,0\\n12-13=1,0\\n12-11=1,0\\n13-14=1,0\\n14-10=1,0\\n9-11=1,0\\n12-15=1,0\\n15-16=1,0\\n16-17=1,0\\n17-11=1,0\\n3-18=1,0\\n10-19=1,2\\n9-20=1,1\\n11-21=1,2\\n12-22=1,1\\n15-23=1,1\\n16-24=1,2\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[estrogen]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Saccharides</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"7\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.0000,0.5911;0,0,i1\\nC=2.2990,0.1911;0,0,i1\\nC=1.7500,-0.7078;0,0,i1\\nO=3.5981,0.9411;0,0,i0\\nC=3.0490,0.0421;0,0,i1\\nC=4.3481,-0.7078;0,0,i1\\nO=-0.2797,-0.1912;0,0,i1\\nO=0.2727,-0.9682;0,0,i1\\nC=1.4079,1.3978;0,0,i2\\nO=2.0074,2.7728;0,0,i1\\nO=3.4372,-1.4066;0,0,i1\\nO=4.5368,-2.1958;0,0,i1\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n1-7=1,0\\n3-8=1,0\\n2-9=1,0\\n9-10=1,0\\n5-11=1,0\\n6-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose alpha]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.0000,0.5910;0,0,i1\\nC=2.2990,0.1911;0,0,i1\\nC=1.7500,-0.7077;0,0,i1\\nO=3.5980,0.9411;0,0,i0\\nC=3.0490,0.0421;0,0,i1\\nC=4.3481,-0.7077;0,0,i1\\nO=-0.2797,-0.1912;0,0,i1\\nO=0.2727,-0.9682;0,0,i1\\nC=1.4078,1.3977;0,0,i2\\nO=2.0074,2.7727;0,0,i1\\nO=3.4372,-1.4065;0,0,i1\\nO=5.6169,0.0920;0,0,i1\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n1-7=1,0\\n3-8=1,0\\n2-9=1,0\\n9-10=1,0\\n5-11=1,0\\n6-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose beta]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,15)\\nC=1.5000,0.0000;0,0,i0\\nC=1.4999,1.5000;0,0,i1\\nC=1.4999,-1.5000;0,0,i0\\nO=3.0000,0.0000;0,0,i1\\nH=0.0000,0.0000;0,0,i0\\nC=1.4999,-3.0000;0,0,i0\\nH=2.9999,-1.5000;0,0,i0\\nO=-0.0000,-1.4999;0,0,i1\\nC=1.4999,-4.5000;0,0,i0\\nO=2.9999,-3.0000;0,0,i1\\nH=-0.0000,-2.9999;0,0,i0\\nC=1.4999,-6.0000;0,0,i2\\nO=2.9999,-4.5000;0,0,i1\\nH=-0.0000,-4.5000;0,0,i0\\nO=2.7990,-6.7500;0,0,i1\\nO=0.2009,2.2499;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n3-6=1,0\\n3-7=1,0\\n3-8=1,0\\n6-9=1,0\\n6-10=1,0\\n6-11=1,0\\n9-12=1,0\\n9-13=1,0\\n9-14=1,0\\n12-15=1,0\\n2-16=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose chain]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.3913,1.2718;0,0,i1\\nC=0.4839,-0.0000;0,0,i1\\nC=1.3913,-1.2718;0,0,i1\\nC=3.2063,-1.2718;0,0,i1\\nC=4.1139,0.0000;0,0,i1\\nO=3.2063,1.2718;0,0,i0\\nC=1.3912,2.7718;0,0,i2\\nO=4.1139,-1.4998;0,0,i1\\nO=3.2128,-2.7718;0,0,i1\\nO=1.3717,0.2280;0,0,i1\\nO=0.4839,-1.5000;0,0,i1\\nO=0.0922,3.5218;0,0,i1\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n1-7=1,1\\n5-8=1,2\\n4-9=1,2\\n3-10=1,1\\n2-11=1,2\\n7-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose alpha]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.3912,1.2718;0,0,i1\\nC=0.4839,-0.0000;0,0,i1\\nC=1.3912,-1.2718;0,0,i1\\nC=3.2063,-1.2718;0,0,i1\\nC=4.1139,0.0000;0,0,i1\\nO=3.2063,1.2718;0,0,i0\\nC=1.3911,2.7718;0,0,i2\\nO=4.1139,1.4997;0,0,i1\\nO=3.2128,-2.7718;0,0,i1\\nO=1.3717,0.2280;0,0,i1\\nO=0.4839,-1.5000;0,0,i1\\nO=0.0922,3.5218;0,0,i1\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n1-7=1,1\\n5-8=1,1\\n4-9=1,2\\n3-10=1,1\\n2-11=1,2\\n7-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose beta]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nO=2.2100,1.1549;0,0,i0\\nC=1.0000,0.2749;0,0,i0\\nC=1.4600,-1.1549;0,0,i1\\nC=3.4200,0.2749;0,0,i1\\nC=2.9600,-1.1549;0,0,i1\\nO=3.8434,-2.3672;0,0,i1\\nC=4.8460,0.7402;0,0,i2\\nO=5.1561,2.2078;0,0,i1\\nC=-0.4260,0.7402;0,0,i2\\nO=-1.5419,-0.2621;0,0,i1\\nO=0.7658,1.7566;0,0,i1\\nO=0.5765,-2.3672;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=1,1\\n4-7=1,2\\n7-8=1,0\\n2-9=1,2\\n9-10=1,0\\n2-11=1,1\\n3-12=1,2\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[fructose alpha]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nO=2.2100,1.1549;0,0,i0\\nC=1.0000,0.2749;0,0,i0\\nC=1.4600,-1.1549;0,0,i1\\nC=3.4200,0.2749;0,0,i1\\nC=2.9600,-1.1549;0,0,i1\\nO=3.8434,-2.3672;0,0,i1\\nC=4.8460,0.7402;0,0,i2\\nO=5.1561,2.2078;0,0,i1\\nO=-0.4260,0.7402;0,0,i1\\nC=0.7658,1.7566;0,0,i2\\nO=0.5765,-2.3672;0,0,i1\\nO=-0.6344,2.2946;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=1,1\\n4-7=1,2\\n7-8=1,0\\n2-9=1,2\\n2-10=1,1\\n3-11=1,2\\n10-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[fructose beta]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","import { Graph } from '../mol/Graph';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { GeomUtil } from '../util/Geom';\nimport { angleDiffPos, DEGRAD, norm2_xy, norm_xy, signum, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport class MetalLigate {\n    constructor(mol, metalAtom, ligandAttach) {\n        this.metalAtom = metalAtom;\n        this.ligandAttach = ligandAttach;\n        this.ligands = [];\n        this.mol = mol.clone();\n    }\n    generate() {\n        const { mol, metalAtom, ligandAttach, ligands } = this;\n        let g = Graph.fromMolecule(mol);\n        g.isolateNode(metalAtom - 1);\n        for (let cc of g.calculateComponentGroups()) {\n            Vec.addTo(cc, 1);\n            let anything = false;\n            for (let a of ligandAttach)\n                if (cc.indexOf(a) >= 0) {\n                    anything = true;\n                    break;\n                }\n            if (!anything)\n                continue;\n            let lig = { atoms: cc, attach: [] };\n            lig.atoms = cc;\n            let anyAttached = false;\n            for (let a of lig.atoms)\n                if (mol.findBond(a, metalAtom) > 0) {\n                    anyAttached = true;\n                    break;\n                }\n            for (let a of lig.atoms) {\n                let bonded = mol.findBond(a, metalAtom) > 0;\n                if (bonded || (!anyAttached && ligandAttach.includes(a)))\n                    lig.attach.push(a);\n            }\n            ligands.push(lig);\n            for (let a of lig.attach)\n                if (mol.findBond(a, metalAtom) == 0)\n                    this.makeLigandBond(a);\n        }\n        if (ligands.length == 0)\n            throw new Error('No ligand atoms');\n        let otherLigands = mol.atomAdjList(metalAtom);\n        for (let lig of ligands)\n            otherLigands = Vec.exclude(otherLigands, lig.attach);\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let otherTheta = new Array(otherLigands.length);\n        for (let n = 0; n < otherLigands.length; n++)\n            otherTheta[n] = Math.atan2(mol.atomY(otherLigands[n]) - my, mol.atomX(otherLigands[n]) - mx);\n        for (let lig of ligands) {\n            if (lig.attach.length == 1) {\n                let a = lig.attach[0];\n                lig.avgTheta = Math.atan2(mol.atomY(a) - my, mol.atomX(a) - mx);\n                this.orientLigand(lig);\n            }\n            else {\n                let theta = new Array(lig.attach.length);\n                for (let n = 0; n < lig.attach.length; n++) {\n                    let a = lig.attach[n];\n                    theta[n] = Math.atan2(mol.atomY(a) - my, mol.atomX(a) - mx);\n                }\n                theta = GeomUtil.sortAngles(theta);\n                let base = theta[0];\n                for (let n = 0; n < theta.length; n++)\n                    theta[n] = angleDiffPos(theta[n], base);\n                lig.avgTheta = base + Vec.sum(theta) / theta.length;\n                this.orientLigand(lig);\n            }\n        }\n        if (otherLigands.length == 0) {\n            ligands.sort((l1, l2) => signum(l1.avgTheta - l2.avgTheta));\n            this.arrangeLigandsFree(ligands);\n        }\n        else if (otherLigands.length == 1) {\n            ligands.sort((l1, l2) => {\n                let diff1 = angleDiffPos(l1.avgTheta, otherTheta[0]);\n                let diff2 = angleDiffPos(l2.avgTheta, otherTheta[0]);\n                return signum(diff1 - diff2);\n            });\n            this.arrangeLigandsRange(ligands, otherTheta[0], TWOPI, true);\n        }\n        else {\n            let otherOrder = Vec.idxSort(otherTheta);\n            for (let n = 0; n < otherOrder.length; n++) {\n                let nn = (n + 1) % otherOrder.length;\n                let theta = otherTheta[otherOrder[n]];\n                let extent = angleDiffPos(otherTheta[otherOrder[nn]], theta);\n                let batch = [];\n                for (let lig of ligands) {\n                    let diff = angleDiffPos(lig.avgTheta, theta);\n                    if (diff < extent)\n                        batch.push(lig);\n                }\n                if (batch.length == 0)\n                    continue;\n                batch.sort((l1, l2) => {\n                    let diff1 = angleDiffPos(l1.avgTheta, theta);\n                    let diff2 = angleDiffPos(l2.avgTheta, theta);\n                    return signum(diff1 - diff2);\n                });\n                this.arrangeLigandsRange(batch, theta, extent, true);\n            }\n        }\n        this.resolveClashes();\n        return mol;\n    }\n    makeLigandBond(ligAtom) {\n        const { mol, metalAtom } = this;\n        let mchg = mol.atomCharge(metalAtom), lchg = mol.atomCharge(ligAtom);\n        if (mchg > 0 && lchg < 0) {\n            mol.setAtomCharge(metalAtom, mchg - 1);\n            mol.setAtomCharge(ligAtom, lchg + 1);\n            mol.addBond(metalAtom, ligAtom, 1);\n            return;\n        }\n        if (mchg < 0 && lchg > 0) {\n            mol.setAtomCharge(metalAtom, mchg + 1);\n            mol.setAtomCharge(ligAtom, lchg - 1);\n            mol.addBond(metalAtom, ligAtom, 1);\n            return;\n        }\n        let order = 0;\n        if (mol.atomHExplicit(ligAtom) == Molecule.HEXPLICIT_UNKNOWN && mol.atomHydrogens(ligAtom) > 0)\n            order = 1;\n        mol.addBond(metalAtom, ligAtom, order);\n    }\n    orientLigand(lig) {\n        const { mol, metalAtom } = this;\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let lsz = lig.atoms.length, asz = lig.attach.length;\n        let idxAttach = new Array(asz);\n        for (let n = 0; n < asz; n++)\n            idxAttach[n] = lig.atoms.indexOf(lig.attach[n]);\n        let lx = new Array(lsz), ly = new Array(lsz);\n        let ax = MolUtil.arrayAtomX(mol), ay = MolUtil.arrayAtomY(mol);\n        let molExtent = Vec.max(ax) - Vec.min(ax) + Vec.max(ay) - Vec.min(ay);\n        let dx = molExtent * Math.cos(lig.avgTheta), dy = molExtent * Math.sin(lig.avgTheta);\n        for (let n = 0; n < lsz; n++) {\n            lx[n] = mol.atomX(lig.atoms[n]) + dx;\n            ly[n] = mol.atomY(lig.atoms[n]) + dy;\n        }\n        let cx = Vec.sum(lx) / lsz, cy = Vec.sum(ly) / lsz;\n        let weight = [];\n        for (let n = 0; n < lsz; n++) {\n            let closest = Number.POSITIVE_INFINITY;\n            for (let idx of idxAttach)\n                closest = Math.min(closest, norm2_xy(lx[n] - lx[idx], ly[n] - ly[idx]));\n            weight.push(1.0 / (1 + Math.sqrt(closest)));\n        }\n        let bestScore = Number.POSITIVE_INFINITY;\n        let bestLX = null, bestLY = null;\n        for (let theta = 0; theta < 360; theta += 15) {\n            let cosTheta = Math.cos(theta * DEGRAD), sinTheta = Math.sin(theta * DEGRAD);\n            let rx = new Array(lsz), ry = new Array(lsz);\n            let score = 0;\n            for (let n = 0; n < lsz; n++) {\n                let x = lx[n] - cx, y = ly[n] - cy;\n                rx[n] = cx + x * cosTheta - y * sinTheta;\n                ry[n] = cy + x * sinTheta + y * cosTheta;\n                let dist = norm_xy(rx[n] - mx, ry[n] - my);\n                if (lig.attach.indexOf(lig.atoms[n]) >= 0)\n                    score += dist;\n                else\n                    score -= dist * weight[n];\n            }\n            if (score < bestScore) {\n                bestScore = score;\n                bestLX = rx;\n                bestLY = ry;\n            }\n        }\n        lx = bestLX;\n        ly = bestLY;\n        if (asz == 1) {\n            dx = Molecule.IDEALBOND * Math.cos(lig.avgTheta);\n            dy = Molecule.IDEALBOND * Math.sin(lig.avgTheta);\n            Vec.addTo(lx, mx + dx - lx[idxAttach[0]]);\n            Vec.addTo(ly, my + dy - ly[idxAttach[0]]);\n        }\n        else {\n            let attTheta = new Array(asz), attDist = Vec.numberArray(0, asz), attDX = Vec.numberArray(0, asz), attDY = Vec.numberArray(0, asz);\n            for (let n = 0; n < asz; n++) {\n                let ox = lx[idxAttach[n]] - mx, oy = ly[idxAttach[n]] - my;\n                attTheta[n] = Math.atan2(oy, ox);\n                if (asz > 2) {\n                    attDist[n] = norm_xy(ox, oy);\n                    attDX[n] = ox / attDist[n];\n                    attDY[n] = oy / attDist[n];\n                }\n            }\n            Vec.addTo(attDist, -Vec.min(attDist));\n            let orderAttach = GeomUtil.idxSortAngles(attTheta);\n            let srcX = new Array(asz), srcY = new Array(asz);\n            let dstX = new Array(asz), dstY = new Array(asz);\n            let dtheta = 45 * DEGRAD / (asz - 1), theta = lig.avgTheta - 0.5 * dtheta;\n            for (let n = 0; n < asz; n++) {\n                srcX[n] = lx[idxAttach[orderAttach[n]]];\n                srcY[n] = ly[idxAttach[orderAttach[n]]];\n                dstX[n] = mx + Molecule.IDEALBOND * Math.cos(theta) + attDist[n] * attDX[n];\n                dstY[n] = my + Molecule.IDEALBOND * Math.sin(theta) + attDist[n] * attDY[n];\n                theta += dtheta / (asz - 1);\n            }\n            let tfm = GeomUtil.superimpose(srcX, srcY, dstX, dstY);\n            for (let n = 0; n < lsz; n++) {\n                let [x, y] = GeomUtil.applyAffine(lx[n], ly[n], tfm);\n                lx[n] = x;\n                ly[n] = y;\n            }\n        }\n        for (let n = 0; n < lsz; n++)\n            mol.setAtomPos(lig.atoms[n], lx[n], ly[n]);\n    }\n    arrangeLigandsFree(batch) {\n        if (batch.length == 1)\n            return;\n        let refTheta = Vec.last(batch).avgTheta;\n        refTheta += 0.5 * angleDiffPos(Vec.first(batch).avgTheta, refTheta);\n        this.arrangeLigandsRange(batch, refTheta, TWOPI, false);\n    }\n    arrangeLigandsRange(batch, refTheta, refSpan, bounded) {\n        const { mol, metalAtom } = this;\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let bsz = batch.length;\n        let thetaMin = new Array(bsz), thetaSpan = new Array(bsz);\n        let ligandSpan = 0;\n        for (let n = 0; n < bsz; n++) {\n            let [theta1, theta2] = this.determineThetaBounds(batch[n]);\n            thetaMin[n] = theta1;\n            thetaSpan[n] = angleDiffPos(theta2, theta1);\n            ligandSpan += thetaSpan[n];\n        }\n        let residual = (refSpan - ligandSpan) / (bsz + (bounded ? 1 : 0));\n        let theta = refTheta + (bounded ? residual : 0.5 * residual);\n        for (let n = 0; n < bsz; n++) {\n            let rotTheta = theta - thetaMin[n];\n            let cosTheta = Math.cos(rotTheta), sinTheta = Math.sin(rotTheta);\n            for (let a of batch[n].atoms) {\n                let x = mol.atomX(a) - mx, y = mol.atomY(a) - my;\n                mol.setAtomPos(a, mx + x * cosTheta - y * sinTheta, my + x * sinTheta + y * cosTheta);\n            }\n            theta += thetaSpan[n] + residual;\n        }\n    }\n    determineThetaBounds(lig) {\n        const { mol, metalAtom } = this;\n        let theta = [];\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        for (let n = 0; n < lig.attach.length; n++) {\n            let x = mol.atomX(lig.attach[n]) - mx;\n            let y = mol.atomY(lig.attach[n]) - my;\n            theta.push(Math.atan2(y, x));\n        }\n        Vec.sort(theta);\n        let bestScore = Number.POSITIVE_INFINITY, bestMin = 0, bestMax = 0;\n        for (let n = 0; n < theta.length; n++) {\n            let score = 0;\n            for (let i = 0; i < theta.length - 1; i++)\n                score += angleDiffPos(theta[i + 1], theta[i]);\n            if (score < bestScore) {\n                bestScore = score;\n                bestMin = Vec.first(theta);\n                bestMax = Vec.last(theta);\n            }\n            theta.push(theta.shift());\n        }\n        return [bestMin, bestMax];\n    }\n    resolveClashes() {\n        const { mol, metalAtom, ligands } = this;\n        const na = mol.numAtoms, nb = mol.numBonds, lsz = this.ligands.length;\n        let ablk = Vec.numberArray(-1, na), bblk = Vec.numberArray(-1, nb);\n        for (let n = 1; n <= na; n++)\n            if (mol.atomConnComp(n) == mol.atomConnComp(metalAtom))\n                ablk[n - 1] = 0;\n        for (let n = 0; n < lsz; n++)\n            for (let a of ligands[n].atoms)\n                ablk[a - 1] = n + 1;\n        for (let n = 1; n <= nb; n++) {\n            let blk1 = ablk[mol.bondFrom(n) - 1], blk2 = ablk[mol.bondTo(n) - 1];\n            if (blk1 < 0 || blk2 < 0) { }\n            else if (blk1 == blk2)\n                bblk[n - 1] = blk1;\n        }\n        let bumpDX = new Array(lsz), bumpDY = new Array(lsz);\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        for (let n = 0; n < lsz; n++) {\n            let lig = ligands[n];\n            let dx = 0, dy = 0;\n            for (let a of lig.attach) {\n                dx += mol.atomX(a) - mx;\n                dy += mol.atomY(a) - my;\n            }\n            dx /= lig.attach.length;\n            dy /= lig.attach.length;\n            let invDist = 1.0 / norm_xy(dx, dy);\n            bumpDX[n] = dx * 0.5 * invDist;\n            bumpDY[n] = dy * 0.5 * invDist;\n        }\n        const CLOSE_SQ = sqr(0.5);\n        for (let count = 0; count < 12; count++) {\n            let tainted = Vec.booleanArray(false, lsz);\n            outer: for (let i = 0; i < na - 1; i++) {\n                if (ablk[i] < 0)\n                    continue;\n                for (let j = i + 1; j < na; j++)\n                    if (ablk[j] >= 0 && ablk[j] != ablk[i]) {\n                        if (norm2_xy(mol.atomX(i + 1) - mol.atomX(j + 1), mol.atomY(i + 1) - mol.atomY(j + 1)) < CLOSE_SQ) {\n                            if (ablk[i] > 0)\n                                tainted[ablk[i] - 1] = true;\n                            if (ablk[j] > 0)\n                                tainted[ablk[j] - 1] = true;\n                        }\n                        if (Vec.allTrue(tainted))\n                            break outer;\n                    }\n            }\n            if (Vec.anyFalse(tainted))\n                outer: for (let i = 0; i < nb - 1; i++) {\n                    if (bblk[i] < 0)\n                        continue;\n                    let x1 = mol.atomX(mol.bondFrom(i + 1)), y1 = mol.atomY(mol.bondFrom(i + 1));\n                    let x2 = mol.atomX(mol.bondTo(i + 1)), y2 = mol.atomY(mol.bondTo(i + 1));\n                    for (let j = i + 1; j < nb; j++)\n                        if (bblk[j] >= 0 && bblk[j] != bblk[i]) {\n                            let x3 = mol.atomX(mol.bondFrom(j + 1)), y3 = mol.atomY(mol.bondFrom(j + 1));\n                            let x4 = mol.atomX(mol.bondTo(j + 1)), y4 = mol.atomY(mol.bondTo(j + 1));\n                            if (GeomUtil.doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4)) {\n                                if (bblk[i] > 0)\n                                    tainted[bblk[i] - 1] = true;\n                                if (bblk[j] > 0)\n                                    tainted[bblk[j] - 1] = true;\n                            }\n                            if (Vec.allTrue(tainted))\n                                break outer;\n                        }\n                }\n            if (Vec.allFalse(tainted))\n                break;\n            for (let n = 0; n < lsz; n++)\n                if (tainted[n]) {\n                    for (let a of ligands[n].atoms) {\n                        mol.setAtomPos(a, mol.atomX(a) + bumpDX[n], mol.atomY(a) + bumpDY[n]);\n                    }\n                }\n        }\n    }\n}\n//# sourceMappingURL=MetalLigate.js.map","import { BondArtifact } from '../mol/BondArtifact';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { Graph } from '../mol/Graph';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock } from '../mol/PolymerBlock';\nimport { SketchUtil } from '../mol/SketchUtil';\nimport { angleDiff, DEGRAD, norm_xy, RADDEG } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport class FusionPermutation {\n    constructor() {\n        this.attdist = 0;\n        this.guided = false;\n        this.bridged = false;\n        this.scoreModifier = 0;\n        this.chainSelect = 0;\n    }\n}\nclass TemplateFusion {\n    constructor(mol, templ, abbrev) {\n        this.mol = mol;\n        this.templ = templ;\n        this.abbrev = abbrev;\n        this.perms = [];\n        this.numAttach = 0;\n        this.withGuideOnly = false;\n        this.guidetempl = null;\n        this.guideidx = [];\n        this.guideadj = [];\n        this.timeLimit = 5.0;\n        let artif1 = new BondArtifact(mol), artif2 = new BondArtifact(templ);\n        artif2.harmoniseNumbering(artif1);\n        artif2.rewriteMolecule();\n        let poly1 = new PolymerBlock(mol), poly2 = new PolymerBlock(templ);\n        poly2.harmoniseNumbering(poly1);\n        poly2.rewriteMolecule();\n        this.huntForGuides();\n    }\n    permuteNone() {\n        let numAttach = 0;\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        if (oldmol.numAtoms > 0) {\n            let oldbox = oldmol.boundary(), newbox = newmol.boundary();\n            let dx = oldbox.maxX() + 1 - newbox.minX();\n            let dy = 0.5 * (oldbox.minY() + oldbox.maxY()) - 0.5 * (newbox.minY() + newbox.maxY());\n            CoordUtil.translateMolecule(newmol, dx, dy);\n        }\n        else {\n            let newbox = newmol.boundary();\n            CoordUtil.translateMolecule(newmol, -newbox.midX(), -newbox.midY());\n        }\n        let oldbox = oldmol.boundary(), newbox = newmol.boundary();\n        let cx = newbox.midX(), cy = newbox.midY();\n        let ROTN = [0, 30, 45, 60, 90, 120, 135, 150, 180, 210, 225, 240, 270, 300, 315, 330];\n        duplicate: for (let n = 0; n < ROTN.length; n++) {\n            let rotmol = newmol.clone();\n            CoordUtil.rotateMolecule(rotmol, -ROTN[n] * DEGRAD, cx, cy);\n            for (let i = 0; i < this.perms.length; i++)\n                if (CoordUtil.sketchEquivalent(rotmol, this.perms[i].display))\n                    continue duplicate;\n            let p = new FusionPermutation();\n            p.mol = oldmol.clone();\n            p.mol.append(rotmol);\n            p.display = rotmol;\n            p.srcidx = this.sourceIndex(p.mol, oldmol);\n            p.attdist = 0;\n            p.guided = false;\n            this.perms.push(p);\n        }\n    }\n    permuteAtom(atom) {\n        this.numAttach = 1;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            for (let n = 0; n < this.guideidx.length; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeGuidedOne(newperms, oldmol, this.guidetempl, atom, this.guideidx[n]);\n                this.composeGuidedOne(newperms, oldmol, fliptempl, atom, this.guideidx[n]);\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numAtoms; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeDirectOne(newperms, oldmol, newmol, atom, n);\n                this.composeDirectOne(newperms, oldmol, flipmol, atom, n);\n                this.composeBridge(newperms, oldmol, newmol, atom, n);\n                this.composeBridge(newperms, oldmol, flipmol, atom, n);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    permuteBond(a1, a2) {\n        this.numAttach = 2;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            for (let i = 0; i < this.guideidx.length; i++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                let g1 = this.guideidx[i];\n                let adj = this.guidetempl.atomAdjList(g1);\n                for (let j = 0; j < adj.length; j++) {\n                    let g2 = adj[j];\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a1, a2, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a2, a1, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a1, a2, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a2, a1, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a1, a2, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a2, a1, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a1, a2, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a2, a1, g1, g2, false);\n                }\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numBonds; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                let nfr = newmol.bondFrom(n), nto = newmol.bondTo(n);\n                this.composeDirectTwo(newperms, oldmol, newmol, a1, a2, nfr, nto);\n                this.composeDirectTwo(newperms, oldmol, flipmol, a1, a2, nfr, nto);\n                this.composeDirectTwo(newperms, oldmol, newmol, a1, a2, nto, nfr);\n                this.composeDirectTwo(newperms, oldmol, flipmol, a1, a2, nto, nfr);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    permuteMulti(atoms) {\n        this.numAttach = atoms.length;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            if (this.guideidx.length == atoms.length) {\n                this.composeGuidedMulti(newperms, oldmol, this.guidetempl, atoms, this.guideidx, true);\n                this.composeGuidedMulti(newperms, oldmol, fliptempl, atoms, this.guideidx, true);\n            }\n            if (this.guideadj.length == atoms.length) {\n                this.composeGuidedMulti(newperms, oldmol, this.guidetempl, atoms, this.guideadj, false);\n                this.composeGuidedMulti(newperms, oldmol, fliptempl, atoms, this.guideadj, false);\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numAtoms; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeDirectMulti(newperms, oldmol, newmol, atoms, n);\n                this.composeDirectMulti(newperms, oldmol, flipmol, atoms, n);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    huntForGuides() {\n        this.guideidx = [];\n        this.guideadj = [];\n        for (let n = 1; n <= this.templ.numAtoms; n++)\n            if (this.templ.atomElement(n) == 'X' && this.templ.atomAdjCount(n) > 0) {\n                this.guideidx.push(n);\n                let adj = this.templ.atomAdjList(n);\n                for (let i = 0; i < adj.length; i++)\n                    if (this.guideadj.indexOf(adj[i]) < 0)\n                        this.guideadj.push(adj[i]);\n            }\n        if (this.guideidx.length > 0) {\n            this.guidetempl = this.templ.clone();\n            for (let n = this.guideidx.length - 1; n >= 0; n--)\n                this.templ.deleteAtomAndBonds(this.guideidx[n]);\n        }\n    }\n    composeDirectOne(list, oldmol, newmol, o1, n1) {\n        let otheta = SketchUtil.primeDirections(oldmol, o1);\n        let ntheta = SketchUtil.primeDirections(newmol, n1);\n        let ocurrent = CoordUtil.atomBondAngles(oldmol, o1);\n        let ncurrent = CoordUtil.atomBondAngles(newmol, n1);\n        let theta1 = [], theta2 = [], scoreMod = [];\n        for (let i = 0; i < ocurrent.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                theta1.push(ocurrent[i]);\n                theta2.push(ntheta[j]);\n                scoreMod.push(-51);\n            }\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ncurrent.length; j++) {\n                theta1.push(otheta[i]);\n                theta2.push(ncurrent[j]);\n                scoreMod.push(0);\n            }\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                theta1.push(otheta[i]);\n                theta2.push(ntheta[j]);\n                scoreMod.push(0);\n            }\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1), nx = newmol.atomX(n1), ny = newmol.atomY(n1);\n        for (let n = 0; n < theta1.length; n++) {\n            let dth = angleDiff(theta1[n], theta2[n]);\n            let frag = newmol.clone();\n            CoordUtil.translateMolecule(frag, ox - nx, oy - ny);\n            CoordUtil.rotateMolecule(frag, dth, ox, oy);\n            let pmol = oldmol.clone();\n            let osz = pmol.numAtoms;\n            pmol.append(frag);\n            let srcidx = this.sourceIndex(pmol, oldmol);\n            SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n            if (pmol.numAtoms == osz)\n                continue;\n            let p = new FusionPermutation();\n            p.mol = pmol;\n            p.display = frag;\n            p.srcidx = srcidx;\n            p.molidx = [o1];\n            p.temidx = [n1];\n            p.attdist = bfs[n1 - 1];\n            p.guided = false;\n            p.scoreModifier = scoreMod[n];\n            this.removeExtraGuides(p, oldmol);\n            list.push(p);\n        }\n    }\n    composeDirectTwo(list, oldmol, newmol, o1, o2, n1, n2) {\n        let oth = Math.atan2(oldmol.atomY(o2) - oldmol.atomY(o1), oldmol.atomX(o2) - oldmol.atomX(o1));\n        let nth = Math.atan2(newmol.atomY(n2) - newmol.atomY(n1), newmol.atomX(n2) - newmol.atomX(n1));\n        let cx = 0.5 * (oldmol.atomX(o1) + oldmol.atomX(o2)), cy = 0.5 * (oldmol.atomY(o1) + oldmol.atomY(o2));\n        let frag = newmol.clone();\n        CoordUtil.translateMolecule(frag, cx - 0.5 * (newmol.atomX(n1) + newmol.atomX(n2)), cy - 0.5 * (newmol.atomY(n1) + newmol.atomY(n2)));\n        CoordUtil.rotateMolecule(frag, oth - nth, cx, cy);\n        frag.setAtomPos(n1, oldmol.atomX(o1), oldmol.atomY(o1));\n        frag.setAtomPos(n2, oldmol.atomX(o2), oldmol.atomY(o2));\n        let pmol = oldmol.clone();\n        let osz = pmol.numAtoms;\n        pmol.append(frag);\n        let srcidx = this.sourceIndex(pmol, oldmol);\n        SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n        if (pmol.numAtoms == osz)\n            return;\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        let p = new FusionPermutation();\n        p.mol = pmol;\n        p.display = frag;\n        p.srcidx = srcidx;\n        p.molidx = [o1, o2];\n        p.temidx = [n1, n2];\n        p.attdist = Math.min(bfs[n1 - 1], bfs[n2 - 1]);\n        p.guided = false;\n        this.removeExtraGuides(p, oldmol);\n        list.push(p);\n    }\n    composeDirectMulti(list, oldmol, newmol, oidx, n1) {\n        let frag = newmol.clone();\n        let x0 = oldmol.atomX(oidx[0]), y0 = oldmol.atomY(oidx[0]);\n        CoordUtil.translateMolecule(frag, x0 - frag.atomX(n1), y0 - frag.atomY(n1));\n        let ox = oldmol.atomX(oidx[1]) - x0, oy = oldmol.atomY(oidx[1]) - y0;\n        let otheta = Math.atan2(oy, ox), orad = norm_xy(ox, oy);\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(1);\n        let nidx = [];\n        for (let n2 = 1; n2 <= frag.numAtoms; n2++)\n            if (n1 != n2) {\n                let nx = frag.atomX(n2) - frag.atomX(n1), ny = frag.atomY(n2) - frag.atomY(n1), nrad = norm_xy(nx, ny);\n                if (Math.abs(nrad - orad) > 0.1)\n                    continue;\n                let ntheta = Math.atan2(ny, nx);\n                CoordUtil.rotateMolecule(frag, otheta - ntheta, x0, y0);\n                nidx = [n1, n2];\n                for (let i = 2; i < oidx.length; i++) {\n                    let hit = false;\n                    for (let j = 1; j <= frag.numAtoms; j++)\n                        if (nidx.indexOf(j) < 0)\n                            if (norm_xy(oldmol.atomX(oidx[i]) - frag.atomX(j), oldmol.atomY(oidx[i]) - frag.atomY(j)) < 0.1 * 0.1) {\n                                hit = true;\n                                nidx.push(j);\n                                break;\n                            }\n                    if (!hit)\n                        break;\n                }\n                if (nidx.length < oidx.length)\n                    continue;\n                let lowbfs = bfs.length;\n                for (let n = 0; n < nidx.length; n++)\n                    lowbfs = Math.min(lowbfs, bfs[nidx[n] - 1]);\n                let dx = 0, dy = 0;\n                for (let n = 0; n < oidx.length; n++) {\n                    dx += oldmol.atomX(oidx[n]) - frag.atomX(nidx[n]);\n                    dy += oldmol.atomY(oidx[n]) - frag.atomY(nidx[n]);\n                }\n                let invsz = 1.0 / oidx.length;\n                dx *= invsz;\n                dy *= invsz;\n                CoordUtil.translateMolecule(frag, dx, dy);\n                let pmol = oldmol.clone();\n                let osz = pmol.numAtoms;\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                for (let n = 0; n < nidx.length; n++) {\n                    let x = pmol.atomX(oidx[n]), y = pmol.atomY(oidx[n]);\n                    pmol.setAtomPos(osz + nidx[n], x, y);\n                }\n                SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n                if (pmol.numAtoms == osz)\n                    continue;\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag.clone();\n                p.srcidx = srcidx;\n                p.molidx = oidx.slice(0);\n                p.temidx = nidx.slice(0);\n                p.attdist = Math.min(bfs[n1 - 1], bfs[n2 - 1]);\n                p.guided = false;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    composeBridge(list, oldmol, newmol, o1, n1) {\n        let busy1 = oldmol.atomRingBlock(o1) != 0 || oldmol.atomAdjCount(o1) >= 3;\n        let busy2 = newmol.atomRingBlock(n1) != 0 || newmol.atomAdjCount(n1) >= 3;\n        if (!busy1 || !busy2)\n            return;\n        let otheta = SketchUtil.primeDirections(oldmol, o1);\n        let ntheta = SketchUtil.primeDirections(newmol, n1);\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1), nx = newmol.atomX(n1), ny = newmol.atomY(n1);\n                let dx = Molecule.IDEALBOND * Math.cos(otheta[i]), dy = Molecule.IDEALBOND * Math.sin(otheta[i]);\n                let dth = angleDiff(otheta[i], Math.PI + ntheta[j]);\n                let frag = newmol.clone();\n                CoordUtil.translateMolecule(frag, ox - nx + dx, oy - ny + dy);\n                CoordUtil.rotateMolecule(frag, dth, ox + dx, oy + dy);\n                let pmol = oldmol.clone();\n                let att = pmol.numAtoms + n1, osz = pmol.numAtoms;\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                pmol.addBond(o1, att, 1);\n                att = frag.addAtom('C', ox, oy);\n                frag.addBond(n1, att, 1);\n                SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n                if (pmol.numAtoms == osz)\n                    continue;\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag;\n                p.srcidx = srcidx;\n                p.molidx = [o1];\n                p.temidx = [att];\n                p.attdist = bfs[n1 - 1];\n                p.bridged = true;\n                p.guided = false;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    composeGuidedOne(list, oldmol, newmol, oidx, gidx) {\n        if (newmol.atomAdjCount(gidx) == 0)\n            return;\n        let otheta = SketchUtil.primeDirections(oldmol, oidx);\n        if (newmol.atomAdjCount(gidx) > 1 && oldmol.atomAdjCount(oidx) > 0) {\n            let ox = 0, oy = 0;\n            let adj = oldmol.atomAdjList(oidx);\n            for (let n = 0; n < adj.length; n++) {\n                ox += oldmol.atomX(adj[n]) - oldmol.atomX(oidx);\n                oy += oldmol.atomY(adj[n]) - oldmol.atomY(oidx);\n            }\n            let ang = Math.atan2(oy, ox);\n            let unique = true;\n            for (let n = 0; n < otheta.length; n++)\n                if (Math.abs(angleDiff(ang, otheta[n])) < 3 * RADDEG) {\n                    unique = false;\n                    break;\n                }\n            if (unique)\n                otheta.push(ang);\n        }\n        let gx = newmol.atomX(gidx), gy = newmol.atomY(gidx);\n        let dx = 0, dy = 0;\n        let adj = newmol.atomAdjList(gidx);\n        for (let n = 0; n < adj.length; n++) {\n            dx += newmol.atomX(adj[n]) - gx;\n            dy += newmol.atomY(adj[n]) - gy;\n        }\n        dx /= adj.length;\n        dy /= adj.length;\n        let ntheta = Math.atan2(dy, dx);\n        let homoPenalty = 0;\n        if (adj.length == 1) {\n            let oel = oldmol.atomElement(oidx), nel = newmol.atomElement(adj[0]);\n            if (oel != 'C' && oel == nel)\n                homoPenalty = 1;\n        }\n        for (let n = 0; n < otheta.length; n++) {\n            let frag = newmol.clone();\n            if (this.guideidx.length == 2) {\n                for (let i = 1; i <= frag.numAtoms; i++)\n                    if (i != gidx && frag.atomElement(i) == 'X') {\n                        frag.setAtomElement(i, TemplateFusion.RESERVED_GUIDESYMBOL);\n                        break;\n                    }\n            }\n            CoordUtil.rotateMolecule(frag, otheta[n] - ntheta, gx, gy);\n            CoordUtil.translateMolecule(frag, oldmol.atomX(oidx) - gx, oldmol.atomY(oidx) - gy);\n            let pmol = oldmol.clone();\n            let osz = pmol.numAtoms;\n            pmol.append(frag);\n            let srcidx = this.sourceIndex(pmol, oldmol);\n            SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n            if (pmol.numAtoms == osz)\n                continue;\n            let sel = 0;\n            for (let i = 1; i <= pmol.numAtoms; i++)\n                if (pmol.atomElement(i) == TemplateFusion.RESERVED_GUIDESYMBOL) {\n                    let padj = pmol.atomAdjList(i);\n                    if (padj.length == 1) {\n                        sel = padj[0];\n                        if (sel > i)\n                            sel--;\n                    }\n                    pmol.deleteAtomAndBonds(i);\n                    srcidx.splice(i - 1, 1);\n                    break;\n                }\n            let p = new FusionPermutation();\n            p.mol = pmol;\n            p.display = frag;\n            p.srcidx = srcidx;\n            p.molidx = [oidx];\n            p.temidx = [gidx];\n            p.attdist = 0;\n            p.guided = true;\n            p.scoreModifier = homoPenalty;\n            p.chainSelect = sel;\n            this.removeExtraGuides(p, oldmol);\n            list.push(p);\n        }\n    }\n    composeGuidedTwo(list, oldmol, newmol, o1, o2, gidx, nidx, snapToGuide) {\n        let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1);\n        let gx = newmol.atomX(gidx), gy = newmol.atomY(gidx);\n        let nx = newmol.atomX(nidx), ny = newmol.atomY(nidx);\n        let otheta = Math.atan2(oldmol.atomY(o2) - oy, oldmol.atomX(o2) - ox);\n        let gtheta = Math.atan2(ny - gy, nx - gx);\n        let isGuideOnTerminal = oldmol.atomAdjCount(o1) == 1;\n        let pmol = oldmol.clone(), frag = newmol.clone();\n        CoordUtil.rotateMolecule(frag, otheta - gtheta, gx, gy);\n        if (snapToGuide) {\n            CoordUtil.translateMolecule(frag, ox - gx, oy - gy);\n            pmol.setAtomPos(o2, frag.atomX(nidx), frag.atomY(nidx));\n        }\n        else {\n            CoordUtil.translateMolecule(frag, oldmol.atomX(o2) - frag.atomX(nidx), oldmol.atomY(o2) - frag.atomY(nidx));\n            frag.setAtomPos(gidx, ox, oy);\n        }\n        let osz = pmol.numAtoms;\n        pmol.append(frag);\n        let srcidx = this.sourceIndex(pmol, oldmol);\n        SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n        if (pmol.numAtoms == osz)\n            return;\n        let p = new FusionPermutation();\n        p.mol = pmol;\n        p.display = frag;\n        p.srcidx = srcidx;\n        p.molidx = [o1, o2];\n        p.temidx = [gidx, nidx];\n        p.attdist = isGuideOnTerminal ? 1 : 0;\n        p.guided = true;\n        this.removeExtraGuides(p, oldmol);\n        list.push(p);\n    }\n    composeGuidedMulti(list, oldmol, newmol, oidx, gidx, nudgenew) {\n        let cx1 = 0, cy1 = 0, cx2 = 0, cy2 = 0;\n        for (let n = 0; n < oidx.length; n++) {\n            cx1 += oldmol.atomX(oidx[n]);\n            cy1 += oldmol.atomY(oidx[n]);\n        }\n        for (let n = 0; n < gidx.length; n++) {\n            cx2 += newmol.atomX(gidx[n]);\n            cy2 += newmol.atomY(gidx[n]);\n        }\n        cx1 /= oidx.length;\n        cy1 /= oidx.length;\n        cx2 /= gidx.length;\n        cy2 /= gidx.length;\n        let osz = oldmol.numAtoms;\n        for (let i = 0; i < oidx.length; i++)\n            for (let j = 0; j < gidx.length; j++) {\n                let pmol = oldmol.clone(), frag = newmol.clone();\n                let th1 = Math.atan2(pmol.atomY(oidx[i]) - cy1, pmol.atomX(oidx[i]) - cx1);\n                let th2 = Math.atan2(frag.atomY(gidx[j]) - cy2, frag.atomX(gidx[j]) - cx2);\n                CoordUtil.rotateMolecule(frag, th1 - th2, cx2, cy2);\n                CoordUtil.translateMolecule(frag, cx1 - cx2, cy1 - cy2);\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                let midx = Vec.numberArray(0, gidx.length), tidx = gidx.slice(0);\n                Vec.sort(tidx);\n                let mask = Vec.booleanArray(false, osz);\n                for (let g = tidx.length - 1; g >= 0; g--) {\n                    let gatom = tidx[g] + osz;\n                    let closest = 0, closeDSQ = 0;\n                    for (let n = 0; n < oidx.length; n++)\n                        if (!mask[oidx[n] - 1]) {\n                            let dx = pmol.atomX(oidx[n]) - pmol.atomX(gatom), dy = pmol.atomY(oidx[n]) - pmol.atomY(gatom);\n                            let dsq = norm_xy(dx, dy);\n                            if (closest == 0 || dsq < closeDSQ) {\n                                closest = oidx[n];\n                                closeDSQ = dsq;\n                            }\n                        }\n                    if (!nudgenew) {\n                        let dsq = norm_xy(pmol.atomX(gatom) - pmol.atomX(closest), pmol.atomY(gatom) - pmol.atomY(closest));\n                        if (dsq > 0.1 * 0.1) {\n                            let num = frag.addAtom('C', pmol.atomX(closest), pmol.atomY(closest));\n                            frag.addBond(num, tidx[g], 0);\n                        }\n                        pmol.setAtomPos(closest, pmol.atomX(gatom), pmol.atomY(gatom));\n                    }\n                    midx[g] = closest;\n                    mask[closest - 1] = true;\n                    let adj = pmol.atomAdjList(gatom);\n                    for (let n = 0; n < adj.length; n++) {\n                        let b = pmol.findBond(gatom, adj[n]);\n                        pmol.addBond(closest, adj[n], pmol.bondOrder(b), pmol.bondType(b));\n                    }\n                    pmol.deleteAtomAndBonds(gatom);\n                    srcidx.splice(gatom - 1, 1);\n                    frag.setAtomPos(tidx[g], pmol.atomX(closest), pmol.atomY(closest));\n                }\n                for (let n = pmol.numAtoms; n > osz; n--)\n                    if (pmol.atomElement(n) == 'X') {\n                        pmol.deleteAtomAndBonds(n);\n                        srcidx.splice(n - 1, 1);\n                        for (let k = 0; k < tidx.length; k++)\n                            if (n < tidx[k])\n                                tidx[k]--;\n                    }\n                for (let n = frag.numAtoms; n >= 1; n--)\n                    if (frag.atomElement(n) == 'X') {\n                        frag.setAtomElement(n, 'C');\n                    }\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag;\n                p.srcidx = srcidx;\n                p.molidx = midx;\n                p.temidx = tidx;\n                p.attdist = 0;\n                p.guided = true;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    affixRawPermutations(list) {\n        let npsz = list.length;\n        if (npsz == 0)\n            return;\n        let umask = Vec.booleanArray(true, npsz);\n        for (let i = 0; i < npsz - 1; i++)\n            if (umask[i]) {\n                let p1 = list[i];\n                for (let j = i + 1; j < npsz; j++)\n                    if (umask[j]) {\n                        let p2 = list[j];\n                        if (CoordUtil.sketchEquivalent(p1.mol, p2.mol)) {\n                            if (p1.scoreModifier + p1.attdist > p2.scoreModifier + p2.attdist) {\n                                list[i] = p2;\n                                list[j] = p1;\n                            }\n                            umask[j] = false;\n                        }\n                    }\n            }\n        let score = Vec.numberArray(0, npsz);\n        let numKeep = 0;\n        for (let n = 0; n < npsz; n++) {\n            if (umask[n]) {\n                score[n] = this.scorePermutation(list[n]);\n                if (score[n] < 1000)\n                    numKeep++;\n            }\n            else\n                score[n] = 0;\n        }\n        if (numKeep > 0)\n            for (let n = 0; n < npsz; n++)\n                if (umask[n] && score[n] >= 1000)\n                    umask[n] = false;\n        let uscore = [], uidx = [];\n        for (let n = 0; n < npsz; n++)\n            if (umask[n]) {\n                uscore.push(score[n]);\n                uidx.push(n);\n            }\n        let sidx = Vec.idxSort(uscore);\n        for (let n = 0; n < sidx.length; n++) {\n            let p = list[uidx[sidx[n]]];\n            if (p.guided) {\n                this.perms.push(p);\n            }\n        }\n        for (let n = 0; n < sidx.length; n++) {\n            let p = list[uidx[sidx[n]]];\n            if (!p.guided) {\n                this.perms.push(p);\n            }\n        }\n    }\n    removeExtraGuides(perm, oldmol) {\n        MolUtil.removeDuplicateBonds(perm.mol);\n        for (let n = perm.temidx.length - 1; n >= 0; n--) {\n            let el = perm.display.atomElement(perm.temidx[n]);\n            if (el != 'X' && el != TemplateFusion.RESERVED_GUIDESYMBOL)\n                continue;\n            perm.molidx.splice(n, 1);\n            perm.temidx.splice(n, 1);\n        }\n        for (let n = perm.display.numAtoms; n >= 1; n--) {\n            let el = perm.display.atomElement(n);\n            if (el != 'X' && el != TemplateFusion.RESERVED_GUIDESYMBOL)\n                continue;\n            let a = CoordUtil.atomAtPoint(oldmol, perm.display.atomX(n), perm.display.atomY(n));\n            if (a > 0)\n                perm.display.setAtomElement(n, 'C');\n            else {\n                perm.display.deleteAtomAndBonds(n);\n                for (let i = 0; i < perm.temidx.length; i++)\n                    if (perm.temidx[i] > n)\n                        perm.temidx[i]--;\n            }\n        }\n    }\n    scorePermutation(perm) {\n        let mol = this.mol, tmol = perm.display, tunion = perm.mol;\n        let score = 0.2 * perm.attdist + perm.scoreModifier;\n        score += CoordUtil.congestionMolecule(tunion, 1e-3);\n        score -= tunion.numAtoms;\n        let sz1 = mol.numAtoms, sz2 = tmol.numAtoms;\n        let mx1 = [], my1 = [], mx2 = [], my2 = [];\n        for (let n = 0; n < sz1; n++) {\n            mx1.push(mol.atomX(n + 1));\n            my1.push(mol.atomY(n + 1));\n        }\n        for (let n = 0; n < sz2; n++) {\n            mx2.push(tmol.atomX(n + 1));\n            my2.push(tmol.atomY(n + 1));\n        }\n        for (let i = 0; i < sz1; i++)\n            for (let j = 0; j < sz2; j++) {\n                if (norm_xy(mx1[i] - mx2[j], my1[i] - my2[j]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                    continue;\n                let contained = false;\n                for (let k = 0; k < perm.molidx.length; k++)\n                    if (perm.molidx[k] == i + 1 && perm.temidx[k] == j + 1) {\n                        contained = true;\n                        break;\n                    }\n                if (contained)\n                    continue;\n                score += 100;\n            }\n        if (!perm.guided)\n            for (let n = 0; n < perm.molidx.length; n++) {\n                let el = mol.atomElement(perm.molidx[n]);\n                if (el == 'C' || el == 'O' || el == 'S' || el == 'N' || el == 'P')\n                    continue;\n                let adj1 = mol.atomAdjList(perm.molidx[n]), adj2 = tmol.atomAdjList(perm.temidx[n]);\n                if (adj1.length + adj2.length >= 4)\n                    continue;\n                for (let i = 0; i < adj1.length; i++)\n                    for (let j = 0; j < adj2.length; j++) {\n                        let ai = adj1[i], aj = adj2[j];\n                        let bo1 = mol.bondOrder(mol.findBond(perm.molidx[n], ai));\n                        let bo2 = tmol.bondOrder(tmol.findBond(perm.temidx[n], aj));\n                        let wantTheta = 0;\n                        if ((bo1 == 1 && bo2 == 1) || (bo1 == 1 && bo2 == 2) || (bo1 == 2 && bo2 == 1))\n                            wantTheta = 120;\n                        else if ((bo1 == 2 && bo2 == 2) || (bo1 == 1 && bo2 == 3) || (bo1 == 3 && bo2 == 1))\n                            wantTheta = 180;\n                        else\n                            continue;\n                        let dx1 = mx1[ai - 1] - mx1[perm.molidx[n] - 1];\n                        let dy1 = my1[ai - 1] - my1[perm.molidx[n] - 1];\n                        let dx2 = mx2[aj - 1] - mx2[perm.temidx[n] - 1];\n                        let dy2 = my2[aj - 1] - my2[perm.temidx[n] - 1];\n                        let theta = Math.abs(angleDiff(Math.atan2(dy1, dx1), Math.atan2(dy2, dx2))) * RADDEG;\n                        if (Math.abs(theta - wantTheta) > 5)\n                            score += 50;\n                    }\n            }\n        for (let n = 1; n <= tunion.numAtoms; n++)\n            if (tunion.atomElement(n) == 'C' || tunion.atomElement(n) == 'N') {\n                let adjb = tunion.atomAdjBonds(n);\n                let totalBO = 0;\n                for (let i = 0; i < adjb.length; i++) {\n                    let bo = tunion.bondOrder(adjb[i]);\n                    totalBO += bo;\n                    if (bo == 0) {\n                        totalBO = 0;\n                        break;\n                    }\n                }\n                if (totalBO > 4)\n                    score += 1000;\n            }\n        if (perm.molidx.length >= 2) {\n            let mmask = Vec.booleanArray(false, sz1);\n            for (let n = 0; n < perm.molidx.length; n++)\n                mmask[perm.molidx[n] - 1] = true;\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n                if (!mmask[bfr - 1] || !mmask[bto - 1])\n                    continue;\n                let tfr = perm.molidx.indexOf(bfr), tto = perm.molidx.indexOf(bto);\n                let tn = tmol.findBond(perm.temidx[tfr], perm.temidx[tto]);\n                if (tn == 0)\n                    continue;\n                if (mol.bondOrder(n) != tmol.bondOrder(tn))\n                    score += 1;\n            }\n        }\n        return score;\n    }\n    sourceIndex(xmol, wmol) {\n        let idx = Vec.numberArray(0, xmol.numAtoms);\n        for (let n = wmol.numAtoms; n >= 1; n--)\n            idx[n - 1] = n;\n        return idx;\n    }\n    asMask(imask) {\n        let ret = Vec.booleanArray(false, imask.length);\n        for (let n = 0; n < imask.length; n++)\n            ret[n] = imask[n] != 0;\n        return ret;\n    }\n}\nTemplateFusion.RESERVED_GUIDESYMBOL = 'XXX';\nexport { TemplateFusion };\n//# sourceMappingURL=TemplateFusion.js.map","import { AbbrevContainer } from '../data/AbbrevContainer';\nimport { BondArtifact } from '../mol/BondArtifact';\nimport { Chemistry } from '../mol/Chemistry';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { Graph } from '../mol/Graph';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock } from '../mol/PolymerBlock';\nimport { QueryTypeAtom, QueryUtil } from '../mol/QueryUtil';\nimport { SketchUtil } from '../mol/SketchUtil';\nimport { angleDiff, angleNorm, DEGRAD, norm2_xy, norm_xy, RADDEG, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { MetalLigate } from './MetalLigate';\nimport { TemplateFusion } from './TemplateFusion';\nexport var ActivityType;\n(function (ActivityType) {\n    ActivityType[ActivityType[\"Delete\"] = 1] = \"Delete\";\n    ActivityType[ActivityType[\"Clear\"] = 2] = \"Clear\";\n    ActivityType[ActivityType[\"Copy\"] = 3] = \"Copy\";\n    ActivityType[ActivityType[\"Cut\"] = 4] = \"Cut\";\n    ActivityType[ActivityType[\"SelectAll\"] = 5] = \"SelectAll\";\n    ActivityType[ActivityType[\"SelectNone\"] = 6] = \"SelectNone\";\n    ActivityType[ActivityType[\"SelectPrevComp\"] = 7] = \"SelectPrevComp\";\n    ActivityType[ActivityType[\"SelectNextComp\"] = 8] = \"SelectNextComp\";\n    ActivityType[ActivityType[\"SelectSide\"] = 9] = \"SelectSide\";\n    ActivityType[ActivityType[\"SelectGrow\"] = 10] = \"SelectGrow\";\n    ActivityType[ActivityType[\"SelectShrink\"] = 11] = \"SelectShrink\";\n    ActivityType[ActivityType[\"SelectChain\"] = 12] = \"SelectChain\";\n    ActivityType[ActivityType[\"SelectSmRing\"] = 13] = \"SelectSmRing\";\n    ActivityType[ActivityType[\"SelectRingBlk\"] = 14] = \"SelectRingBlk\";\n    ActivityType[ActivityType[\"SelectCurElement\"] = 15] = \"SelectCurElement\";\n    ActivityType[ActivityType[\"SelectToggle\"] = 16] = \"SelectToggle\";\n    ActivityType[ActivityType[\"SelectUnCurrent\"] = 17] = \"SelectUnCurrent\";\n    ActivityType[ActivityType[\"Element\"] = 18] = \"Element\";\n    ActivityType[ActivityType[\"AtomPos\"] = 19] = \"AtomPos\";\n    ActivityType[ActivityType[\"Charge\"] = 20] = \"Charge\";\n    ActivityType[ActivityType[\"Connect\"] = 21] = \"Connect\";\n    ActivityType[ActivityType[\"Disconnect\"] = 22] = \"Disconnect\";\n    ActivityType[ActivityType[\"MetalLigate\"] = 23] = \"MetalLigate\";\n    ActivityType[ActivityType[\"BondOrder\"] = 24] = \"BondOrder\";\n    ActivityType[ActivityType[\"BondType\"] = 25] = \"BondType\";\n    ActivityType[ActivityType[\"BondGeom\"] = 26] = \"BondGeom\";\n    ActivityType[ActivityType[\"BondAtom\"] = 27] = \"BondAtom\";\n    ActivityType[ActivityType[\"BondSwitch\"] = 28] = \"BondSwitch\";\n    ActivityType[ActivityType[\"BondRotate\"] = 29] = \"BondRotate\";\n    ActivityType[ActivityType[\"BondAddTwo\"] = 30] = \"BondAddTwo\";\n    ActivityType[ActivityType[\"BondInsert\"] = 31] = \"BondInsert\";\n    ActivityType[ActivityType[\"Join\"] = 32] = \"Join\";\n    ActivityType[ActivityType[\"Nudge\"] = 33] = \"Nudge\";\n    ActivityType[ActivityType[\"NudgeLots\"] = 34] = \"NudgeLots\";\n    ActivityType[ActivityType[\"NudgeFar\"] = 35] = \"NudgeFar\";\n    ActivityType[ActivityType[\"Flip\"] = 36] = \"Flip\";\n    ActivityType[ActivityType[\"Scale\"] = 37] = \"Scale\";\n    ActivityType[ActivityType[\"Rotate\"] = 38] = \"Rotate\";\n    ActivityType[ActivityType[\"BondDist\"] = 39] = \"BondDist\";\n    ActivityType[ActivityType[\"AlignAngle\"] = 40] = \"AlignAngle\";\n    ActivityType[ActivityType[\"AlignRegular\"] = 41] = \"AlignRegular\";\n    ActivityType[ActivityType[\"AdjustTorsion\"] = 42] = \"AdjustTorsion\";\n    ActivityType[ActivityType[\"Move\"] = 43] = \"Move\";\n    ActivityType[ActivityType[\"Ring\"] = 44] = \"Ring\";\n    ActivityType[ActivityType[\"TemplateFusion\"] = 45] = \"TemplateFusion\";\n    ActivityType[ActivityType[\"AbbrevTempl\"] = 46] = \"AbbrevTempl\";\n    ActivityType[ActivityType[\"AbbrevGroup\"] = 47] = \"AbbrevGroup\";\n    ActivityType[ActivityType[\"AbbrevFormula\"] = 48] = \"AbbrevFormula\";\n    ActivityType[ActivityType[\"AbbrevClear\"] = 49] = \"AbbrevClear\";\n    ActivityType[ActivityType[\"AbbrevExpand\"] = 50] = \"AbbrevExpand\";\n    ActivityType[ActivityType[\"BondArtifactPath\"] = 51] = \"BondArtifactPath\";\n    ActivityType[ActivityType[\"BondArtifactRing\"] = 52] = \"BondArtifactRing\";\n    ActivityType[ActivityType[\"BondArtifactArene\"] = 53] = \"BondArtifactArene\";\n    ActivityType[ActivityType[\"BondArtifactClear\"] = 54] = \"BondArtifactClear\";\n    ActivityType[ActivityType[\"PolymerBlock\"] = 55] = \"PolymerBlock\";\n    ActivityType[ActivityType[\"AddHydrogens\"] = 56] = \"AddHydrogens\";\n    ActivityType[ActivityType[\"RemoveHydrogens\"] = 57] = \"RemoveHydrogens\";\n    ActivityType[ActivityType[\"QueryClear\"] = 58] = \"QueryClear\";\n    ActivityType[ActivityType[\"QueryCopy\"] = 59] = \"QueryCopy\";\n    ActivityType[ActivityType[\"QueryPaste\"] = 60] = \"QueryPaste\";\n    ActivityType[ActivityType[\"QuerySetAtom\"] = 61] = \"QuerySetAtom\";\n    ActivityType[ActivityType[\"QuerySetBond\"] = 62] = \"QuerySetBond\";\n    ActivityType[ActivityType[\"QueryBondAny\"] = 63] = \"QueryBondAny\";\n    ActivityType[ActivityType[\"SproutDirection\"] = 64] = \"SproutDirection\";\n})(ActivityType || (ActivityType = {}));\nexport class MoleculeActivity {\n    constructor(input, activity, param, owner) {\n        this.input = input;\n        this.activity = activity;\n        this.param = param;\n        this.owner = owner;\n        this.toClipboard = null;\n        this.output =\n            {\n                mol: null,\n                currentAtom: -1,\n                currentBond: -1,\n                selectedMask: null\n            };\n        let na = this.input.mol.numAtoms;\n        if (this.input.selectedMask == null)\n            this.input.selectedMask = Vec.booleanArray(false, na);\n        while (this.input.selectedMask.length < na)\n            this.input.selectedMask.push(false);\n        this.subjectMask = this.input.selectedMask.slice(0);\n        this.subjectLength = Vec.maskCount(this.subjectMask);\n        this.subjectIndex = [];\n        this.hasSelected = this.subjectLength > 0;\n        if (this.subjectLength == 0) {\n            if (this.input.currentAtom > 0) {\n                this.subjectLength = 1;\n                this.subjectMask[this.input.currentAtom - 1] = true;\n                this.subjectIndex = [this.input.currentAtom];\n            }\n            else if (this.input.currentBond > 0) {\n                let bfr = this.input.mol.bondFrom(this.input.currentBond), bto = this.input.mol.bondTo(this.input.currentBond);\n                let b1 = Math.min(bfr, bto), b2 = Math.max(bfr, bto);\n                this.subjectLength = 2;\n                this.subjectMask[b1 - 1] = true;\n                this.subjectMask[b2 - 1] = true;\n                this.subjectIndex = [b1, b2];\n            }\n        }\n        else {\n            this.subjectIndex = Vec.maskIdx(this.subjectMask);\n            Vec.addTo(this.subjectIndex, 1);\n        }\n    }\n    setOwner(owner) {\n        this.owner = owner;\n    }\n    evaluate() {\n        return true;\n    }\n    execute() {\n        var _a;\n        let param = this.param;\n        if (this.activity == ActivityType.Delete)\n            this.execDelete();\n        else if (this.activity == ActivityType.Clear)\n            this.execClear();\n        else if (this.activity == ActivityType.Copy)\n            this.execCopy(false);\n        else if (this.activity == ActivityType.Cut)\n            this.execCopy(true);\n        else if (this.activity == ActivityType.SelectAll)\n            this.execSelectAll(true);\n        else if (this.activity == ActivityType.SelectNone)\n            this.execSelectAll(false);\n        else if (this.activity == ActivityType.SelectPrevComp)\n            this.execSelectComp(-1);\n        else if (this.activity == ActivityType.SelectNextComp)\n            this.execSelectComp(1);\n        else if (this.activity == ActivityType.SelectSide)\n            this.execSelectSide();\n        else if (this.activity == ActivityType.SelectGrow)\n            this.execSelectGrow();\n        else if (this.activity == ActivityType.SelectShrink)\n            this.execSelectShrink();\n        else if (this.activity == ActivityType.SelectChain)\n            this.execSelectChain();\n        else if (this.activity == ActivityType.SelectSmRing)\n            this.execSelectSmRing();\n        else if (this.activity == ActivityType.SelectRingBlk)\n            this.execSelectRingBlk();\n        else if (this.activity == ActivityType.SelectCurElement)\n            this.execSelectCurElement();\n        else if (this.activity == ActivityType.SelectToggle)\n            this.execSelectToggle();\n        else if (this.activity == ActivityType.SelectUnCurrent)\n            this.execSelectUnCurrent();\n        else if (this.activity == ActivityType.Element)\n            this.execElement(param.element, param.positionX, param.positionY, param.keepAbbrev);\n        else if (this.activity == ActivityType.Charge)\n            this.execCharge(param.delta);\n        else if (this.activity == ActivityType.Connect)\n            this.execConnect(1, Molecule.BONDTYPE_NORMAL);\n        else if (this.activity == ActivityType.Disconnect)\n            this.execDisconnect();\n        else if (this.activity == ActivityType.MetalLigate)\n            this.execMetalLigate();\n        else if (this.activity == ActivityType.BondOrder)\n            this.execBond(param.order, Molecule.BONDTYPE_NORMAL);\n        else if (this.activity == ActivityType.BondType)\n            this.execBond(1, param.type);\n        else if (this.activity == ActivityType.BondGeom)\n            this.execBondGeom(param.geom);\n        else if (this.activity == ActivityType.BondAtom)\n            this.execBondAtom(param.order, param.type, param.element, param.x1, param.y1, param.x2, param.y2);\n        else if (this.activity == ActivityType.BondSwitch)\n            this.execBondSwitch();\n        else if (this.activity == ActivityType.BondRotate)\n            this.execBondRotate();\n        else if (this.activity == ActivityType.BondAddTwo)\n            this.execBondAddTwo();\n        else if (this.activity == ActivityType.BondInsert)\n            this.execBondInsert();\n        else if (this.activity == ActivityType.Join)\n            this.execJoin();\n        else if (this.activity == ActivityType.Nudge)\n            this.execNudge(param.dir, 0.1);\n        else if (this.activity == ActivityType.NudgeLots)\n            this.execNudge(param.dir, 1);\n        else if (this.activity == ActivityType.NudgeFar)\n            this.execNudgeFar(param.dir);\n        else if (this.activity == ActivityType.Flip)\n            this.execFlip(param.axis);\n        else if (this.activity == ActivityType.Scale)\n            this.execScale(param.mag);\n        else if (this.activity == ActivityType.Rotate)\n            this.execRotate(param.theta, param.centreX, param.centreY);\n        else if (this.activity == ActivityType.BondDist)\n            this.execBondDist(param.dist);\n        else if (this.activity == ActivityType.AlignAngle)\n            this.execAlignAngle(param.angle);\n        else if (this.activity == ActivityType.AlignRegular)\n            this.execAlignRegular();\n        else if (this.activity == ActivityType.AdjustTorsion)\n            this.execAdjustTorsion(param.angle);\n        else if (this.activity == ActivityType.Move)\n            this.execMove(param.refAtom, param.deltaX, param.deltaY);\n        else if (this.activity == ActivityType.Ring)\n            this.execRing(param.ringX, param.ringY, param.aromatic);\n        else if (this.activity == ActivityType.TemplateFusion) {\n            this.execTemplateFusion((_a = param.frag) !== null && _a !== void 0 ? _a : Molecule.fromString(param.fragNative));\n            if (this.owner)\n                this.owner.setPermutations(this.output.permutations);\n            return;\n        }\n        else if (this.activity == ActivityType.AbbrevTempl)\n            this.execAbbrevTempl();\n        else if (this.activity == ActivityType.AbbrevGroup)\n            this.execAbbrevGroup();\n        else if (this.activity == ActivityType.AbbrevFormula)\n            this.execAbbrevFormula();\n        else if (this.activity == ActivityType.AbbrevClear)\n            this.execAbbrevClear();\n        else if (this.activity == ActivityType.AbbrevExpand)\n            this.execAbbrevExpand();\n        else if (this.activity == ActivityType.BondArtifactPath || this.activity == ActivityType.BondArtifactRing ||\n            this.activity == ActivityType.BondArtifactArene || this.activity == ActivityType.BondArtifactClear)\n            this.execBondArtifact(this.activity);\n        else if (this.activity == ActivityType.PolymerBlock)\n            this.execPolymerBlock();\n        else if (this.activity == ActivityType.AddHydrogens)\n            this.execAddHydrogens();\n        else if (this.activity == ActivityType.RemoveHydrogens)\n            this.execRemoveHydrogens();\n        else if (this.activity == ActivityType.QueryClear)\n            this.execQueryClear();\n        else if (this.activity == ActivityType.QueryCopy)\n            this.execQueryCopy();\n        else if (this.activity == ActivityType.QueryPaste)\n            this.execQueryPaste();\n        else if (this.activity == ActivityType.QuerySetAtom)\n            this.execQuerySetAtom();\n        else if (this.activity == ActivityType.QuerySetBond)\n            this.execQuerySetBond();\n        else if (this.activity == ActivityType.QueryBondAny)\n            this.execQueryBondAny();\n        else if (this.activity == ActivityType.SproutDirection)\n            this.execSproutDirection(param.deltaX, param.deltaY);\n        this.finish();\n    }\n    finish() {\n        if (!this.owner)\n            return;\n        if (this.output.mol != null || this.output.currentAtom >= 0 || this.output.currentBond >= 0 || this.output.selectedMask != null) {\n            this.owner.setState(this.output, true);\n            if (this.errmsg != null)\n                this.owner.showMessage(this.errmsg, false);\n        }\n        else {\n            if (this.errmsg != null)\n                this.owner.showMessage(this.errmsg, true);\n        }\n    }\n    execDelete() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.mol = mol.clone();\n        this.zapSubject();\n        if (this.input.currentBond > 0 && !this.hasSelected) {\n            this.output.mol.deleteBond(this.input.currentBond);\n            this.output.currentBond = 0;\n            return;\n        }\n        if (this.subjectLength == 1 && this.subjectIndex[0] == this.input.currentAtom) {\n            let adj = mol.atomAdjList(this.input.currentAtom);\n            if (adj.length == 1) {\n                this.output.currentAtom = adj[0];\n                if (this.output.currentAtom > this.input.currentAtom)\n                    this.output.currentAtom--;\n            }\n        }\n        for (let n = this.subjectLength - 1; n >= 0; n--)\n            this.output.mol.deleteAtomAndBonds(this.subjectIndex[n]);\n    }\n    execCopy(withCut) {\n        let mol = this.input.mol;\n        if (this.subjectLength > 0)\n            mol = MolUtil.subgraphWithAttachments(mol, this.subjectMask);\n        if (this.owner)\n            this.owner.performCopy(mol);\n        else\n            this.toClipboard = mol.toString();\n        if (withCut) {\n            this.zapSubject();\n            this.output.mol = MolUtil.subgraphMask(this.input.mol, Vec.notMask(this.subjectMask));\n        }\n    }\n    execClear() {\n        this.output.mol = new Molecule();\n        this.zapSubject();\n    }\n    execSelectAll(all) {\n        let same = true;\n        for (let n = 0; n < this.input.mol.numAtoms; n++)\n            if (this.subjectMask[n] != all) {\n                same = false;\n                break;\n            }\n        if (same) {\n            this.errmsg = all ? 'All atoms already selected.' : 'All atoms already deselected.';\n            return;\n        }\n        this.output.selectedMask = Vec.booleanArray(all, this.input.mol.numAtoms);\n    }\n    execSelectComp(dir) {\n        let cclist = MolUtil.componentList(this.input.mol);\n        if (cclist.length == 1 && this.hasSelected && this.subjectLength == this.input.mol.numAtoms) {\n            this.errmsg = 'All atoms already selected.';\n            return;\n        }\n        let sel = this.pickSelectedGroup(cclist, dir);\n        this.output.selectedMask = Vec.booleanArray(false, this.input.mol.numAtoms);\n        for (let n = 0; n < cclist[sel].length; n++)\n            this.output.selectedMask[cclist[sel][n] - 1] = true;\n    }\n    execSelectSide() {\n        if (!this.requireCurrent())\n            return;\n        let mol = this.input.mol, currentAtom = this.input.currentAtom, currentBond = this.input.currentBond;\n        if (currentAtom > 0 && mol.atomAdjCount(currentAtom) == 0) {\n            this.errmsg = 'Current atom has no neighbours.';\n            return;\n        }\n        if (currentBond > 0 && mol.atomAdjCount(mol.bondFrom(currentBond)) == 1 && mol.atomAdjCount(mol.bondTo(currentBond)) == 1) {\n            this.errmsg = 'Current bond has no neighbours.';\n            return;\n        }\n        let sides = currentAtom > 0 ? MolUtil.getAtomSides(mol, currentAtom) : MolUtil.getBondSides(mol, currentBond);\n        let sel = this.pickSelectedGroup(sides, 1);\n        this.output.selectedMask = Vec.booleanArray(false, mol.numAtoms);\n        for (let n = 0; n < sides[sel].length; n++)\n            this.output.selectedMask[sides[sel][n] - 1] = true;\n    }\n    execSelectGrow() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol, currentAtom = this.input.currentAtom, currentBond = this.input.currentBond;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (!this.hasSelected) {\n            if (currentAtom > 0) {\n                this.output.selectedMask[currentAtom - 1] = true;\n            }\n            else {\n                this.output.selectedMask[mol.bondFrom(currentBond) - 1] = true;\n                this.output.selectedMask[mol.bondTo(currentBond) - 1] = true;\n            }\n        }\n        else {\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n                if (this.input.selectedMask[bfr] && !this.input.selectedMask[bto])\n                    this.output.selectedMask[bto] = true;\n                else if (this.input.selectedMask && !this.input.selectedMask[bfr])\n                    this.output.selectedMask[bfr] = true;\n            }\n        }\n    }\n    execSelectShrink() {\n        if (!this.requireSelected())\n            return;\n        let mol = this.input.mol;\n        let count = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (!this.input.selectedMask[bfr] || !this.input.selectedMask[bto])\n                continue;\n            count[bfr]++;\n            count[bto]++;\n        }\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let n = 0; n < mol.numAtoms; n++)\n            this.output.selectedMask[n] = this.input.selectedMask[n] && count[n] >= 2;\n    }\n    execSelectChain() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (this.input.selectedMask[bfr] && !this.input.selectedMask[bto] && mol.atomRingBlock(bto + 1) == 0)\n                this.output.selectedMask[bto] = true;\n            else if (this.input.selectedMask[bto] && !this.input.selectedMask[bfr] && mol.atomRingBlock(bfr + 1) == 0)\n                this.output.selectedMask[bfr] = true;\n        }\n    }\n    execSelectSmRing() {\n        if (!this.requireSubject())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let r = 3; r <= 8; r++) {\n            let rings = this.input.mol.findRingsOfSize(r);\n            for (let i = 0; i < rings.length; i++) {\n                let any = false;\n                for (let j = 0; j < rings[i].length; j++)\n                    if (this.subjectMask[rings[i][j] - 1]) {\n                        any = true;\n                        break;\n                    }\n                if (any)\n                    for (let j = 0; j < rings[i].length; j++)\n                        this.output.selectedMask[rings[i][j] - 1] = true;\n            }\n        }\n    }\n    execSelectRingBlk() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        let maxRB = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            maxRB = Math.max(maxRB, mol.atomRingBlock(n));\n        if (maxRB == 0)\n            return;\n        let gotRB = Vec.booleanArray(false, maxRB);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let rb = mol.atomRingBlock(n);\n            if (rb > 0 && this.subjectMask[n - 1])\n                gotRB[rb - 1] = true;\n        }\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let rb = mol.atomRingBlock(n);\n            if (rb > 0 && gotRB[rb - 1])\n                this.output.selectedMask[n - 1] = true;\n        }\n    }\n    execSelectCurElement() {\n        if (!this.requireCurrent())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        let el1 = '', el2 = '';\n        if (this.input.currentAtom > 0) {\n            el1 = mol.atomElement(this.input.currentAtom);\n        }\n        else {\n            el1 = mol.atomElement(mol.bondFrom(this.input.currentBond));\n            el2 = mol.atomElement(mol.bondTo(this.input.currentBond));\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomElement(n) == el1 || mol.atomElement(n) == el2)\n                this.output.selectedMask[n - 1] = true;\n    }\n    execSelectToggle() {\n        if (!this.requireCurrent())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (this.input.currentAtom > 0) {\n            this.output.selectedMask[this.input.currentAtom - 1] = !this.output.selectedMask[this.input.currentAtom - 1];\n        }\n        else {\n            let bfr = this.input.mol.bondFrom(this.input.currentBond), bto = this.input.mol.bondTo(this.input.currentBond);\n            let sel = !this.input.selectedMask[bfr - 1] || !this.input.selectedMask[bto - 1];\n            this.output.selectedMask[bfr - 1] = sel;\n            this.output.selectedMask[bto - 1] = sel;\n        }\n    }\n    execSelectUnCurrent() {\n        if (!this.requireCurrent())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (this.input.currentAtom > 0) {\n            this.output.selectedMask[this.input.currentAtom - 1] = false;\n        }\n        else {\n            this.output.selectedMask[this.input.mol.bondFrom(this.input.currentBond) - 1] = false;\n            this.output.selectedMask[this.input.mol.bondTo(this.input.currentBond) - 1] = false;\n        }\n    }\n    execElement(element, positionX, positionY, keepAbbrev) {\n        const QUERY_ELEMENTS = ['A', 'X', 'Y', 'Z', 'Q', 'M', 'T', 'E', 'R'];\n        if (this.subjectLength > 0 && !QUERY_ELEMENTS.includes(element)) {\n            let anyChange = false;\n            for (let n = 0; n < this.subjectLength; n++)\n                if (this.input.mol.atomElement(this.subjectIndex[n]) != element) {\n                    anyChange = true;\n                    break;\n                }\n            if (!anyChange) {\n                this.errmsg = 'Elements not changed.';\n                return;\n            }\n        }\n        let mol = this.output.mol = this.input.mol.clone();\n        let applyQuery = (atom) => {\n            if (element == 'A') {\n                QueryUtil.setQueryAtomElementsNot(mol, atom, ['H']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'X') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['F', 'Cl', 'Br', 'I']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Y') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['O', 'S', 'Se', 'Te']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Z') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['F', 'Cl', 'Br', 'O', 'S']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Q') {\n                QueryUtil.setQueryAtomElementsNot(mol, atom, ['H', 'C']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'M') {\n                const NON_METALS = ['H', 'B', 'C', 'N', 'O', 'F', 'Si', 'P', 'S', 'Cl', 'As', 'Se', 'Br', 'Te', 'I'];\n                QueryUtil.setQueryAtomElementsNot(mol, atom, NON_METALS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'T') {\n                const TRANSITION_METALS = [\n                    'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n                    'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd',\n                    'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg',\n                    'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb', 'Lu',\n                    'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No', 'Lr'\n                ];\n                QueryUtil.setQueryAtomElements(mol, atom, TRANSITION_METALS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'E') {\n                const MAIN_GROUPS = [\n                    'B', 'N', 'O', 'F',\n                    'Al', 'Si', 'P', 'S', 'Cl',\n                    'Zn', 'Ga', 'Se', 'As', 'Se', 'Br',\n                    'Cd', 'In', 'Sn', 'Sb', 'Te', 'I',\n                    'Hg', 'Tl', 'Pb', 'Bi', 'Pb', 'At'\n                ];\n                QueryUtil.setQueryAtomElements(mol, atom, MAIN_GROUPS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'R') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['C', 'N', 'O', 'S', 'P', 'H']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n        };\n        if (mol.numAtoms == 0) {\n            mol.addAtom(element, 0, 0);\n            applyQuery(mol.numAtoms);\n        }\n        else if (this.subjectLength == 0) {\n            if (positionX != null && positionY != null)\n                mol.addAtom(element, positionX, positionY);\n            else\n                SketchUtil.placeNewAtom(mol, element);\n            applyQuery(mol.numAtoms);\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                if (keepAbbrev)\n                    mol.setAtomElement(this.subjectIndex[n], element);\n                else\n                    MolUtil.setAtomElement(mol, this.subjectIndex[n], element);\n                applyQuery(this.subjectIndex[n]);\n            }\n        }\n    }\n    execCharge(delta) {\n        if (!this.requireSubject())\n            return;\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let chg = Math.max(-20, Math.min(20, this.input.mol.atomCharge(this.subjectIndex[n]) + delta));\n            this.output.mol.setAtomCharge(this.subjectIndex[n], chg);\n        }\n    }\n    execConnect(order, type) {\n        if (!this.requireSubject())\n            return;\n        let conn = SketchUtil.pickAtomsToConnect(this.input.mol, this.subjectIndex);\n        if (conn == null) {\n            this.errmsg = 'Subject atoms contain no bonds suitable for connection.';\n            return;\n        }\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < conn.length; n += 2)\n            MolUtil.addBond(this.output.mol, conn[n], conn[n + 1], order, type);\n    }\n    execDisconnect() {\n        let zap = [];\n        let mol = this.input.mol;\n        if (this.hasSelected) {\n            for (let n = 1; n <= mol.numBonds; n++)\n                if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                    zap.push(n);\n        }\n        else if (this.input.currentAtom > 0) {\n            for (let a of mol.atomAdjBonds(this.input.currentAtom))\n                zap.push(a);\n        }\n        else if (this.input.currentBond > 0) {\n            zap.push(this.input.currentBond);\n        }\n        if (zap.length == 0) {\n            this.errmsg = 'Subject atoms contain no bonds suitable for disconnection.';\n            return;\n        }\n        let killmask = Vec.booleanArray(false, mol.numBonds);\n        for (let b of zap)\n            killmask[b - 1] = true;\n        this.output.mol = this.input.mol.clone();\n        for (let n = mol.numBonds; n >= 1; n--)\n            if (killmask[n - 1])\n                this.output.mol.deleteBond(n);\n    }\n    execMetalLigate() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        let ligAtoms = this.subjectIndex.slice(0);\n        let metalAtom = this.input.currentAtom;\n        if (metalAtom == 0) {\n            for (let a of this.subjectIndex) {\n                let atno = mol.atomicNumber(a);\n                if (Chemistry.ELEMENT_BLOCKS[atno] >= 3) {\n                    metalAtom = a;\n                    break;\n                }\n            }\n        }\n        if (metalAtom == 0) {\n            for (let a of this.subjectIndex) {\n                let atno = mol.atomicNumber(a);\n                if (Chemistry.ELEMENT_ROWS[atno] >= 3) {\n                    metalAtom = a;\n                    break;\n                }\n            }\n        }\n        if (metalAtom == 0) {\n            this.errmsg = 'Unsure which is the metal atom: try indicating as current.';\n            return;\n        }\n        let i = ligAtoms.indexOf(metalAtom);\n        if (i >= 0)\n            ligAtoms.splice(i, 1);\n        if (ligAtoms.length == 0)\n            ligAtoms = mol.atomAdjList(metalAtom);\n        if (ligAtoms.length == 0) {\n            this.errmsg = 'Metal centre has no attachments: try selecting atom join-points.';\n            return;\n        }\n        mol = new MetalLigate(mol, metalAtom, ligAtoms).generate();\n        this.output.mol = mol;\n        this.output.currentAtom = metalAtom;\n        this.output.currentBond = -1;\n        this.output.selectedMask = Vec.booleanArray(false, mol.numAtoms);\n        for (let a of ligAtoms)\n            this.output.selectedMask[a - 1] = true;\n    }\n    execBond(order, type) {\n        if (!this.requireSubject())\n            return;\n        if (this.subjectLength == 1) {\n            this.performBondNew(this.subjectIndex[0], order, type);\n            return;\n        }\n        let ccmol = MolUtil.subgraphMask(this.input.mol, this.subjectMask);\n        let oneComp = true;\n        for (let n = ccmol.numAtoms; n >= 1; n--)\n            if (ccmol.atomConnComp(n) != 1) {\n                oneComp = false;\n                break;\n            }\n        if (oneComp)\n            this.performBondChange(order, type);\n        else\n            this.execConnect(order, type);\n    }\n    execBondGeom(geom) {\n        let bond = this.subjectLength == 2 ? this.input.mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) : 0;\n        if (this.subjectLength == 0 || this.subjectLength > 2 || (this.subjectLength == 2 && bond == 0)) {\n            this.errmsg = 'The subject must be a single atom or bond.';\n            return;\n        }\n        if (this.subjectLength == 1)\n            this.performBondGeomAtom(geom, this.subjectIndex[0]);\n        else\n            this.performBondGeomBond(geom, bond);\n    }\n    execBondAtom(order, type, element, x1, y1, x2, y2) {\n        let mol = this.input.mol;\n        let a1 = CoordUtil.atomAtPoint(mol, x1, y1, 0.01), a2 = CoordUtil.atomAtPoint(mol, x2, y2, 0.01);\n        if (a1 > 0 && a1 == a2)\n            return;\n        if (a1 > 0 && a2 > 0 && mol.findBond(a1, a2) > 0)\n            return;\n        this.output.mol = mol.clone();\n        if (a1 == 0)\n            a1 = this.output.mol.addAtom('C', x1, y1);\n        if (a2 == 0)\n            a2 = this.output.mol.addAtom(element, x2, y2);\n        this.output.mol.addBond(a1, a2, order, type);\n    }\n    execBondSwitch() {\n        if (this.input.altmol) {\n            this.output.mol = this.input.altmol;\n            this.output.altmol = this.input.mol;\n            return;\n        }\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        let src = 0, dst = [];\n        if (this.subjectLength == 1) {\n            src = this.subjectIndex[0];\n            let adj = mol.atomAdjList(src);\n            for (let n = 0; n < adj.length; n++)\n                if (mol.atomAdjCount(adj[n]) == 1)\n                    dst.push(adj[n]);\n        }\n        else if (this.subjectLength == 2 && mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) > 0) {\n            let ac1 = mol.atomAdjCount(this.subjectIndex[0]), ac2 = mol.atomAdjCount(this.subjectIndex[1]);\n            if (ac1 > 1 && ac2 == 1) {\n                src = this.subjectIndex[0];\n                dst.push(this.subjectIndex[1]);\n            }\n            else if (ac1 == 1 && ac2 > 1) {\n                src = this.subjectIndex[1];\n                dst.push(this.subjectIndex[0]);\n            }\n        }\n        if (src == 0 || dst.length == 0) {\n            this.errmsg = 'Subject must include a terminal bond.';\n            return;\n        }\n        let geoms = SketchUtil.guessAtomGeometry(mol, src, 1);\n        if (geoms.length == 0) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        this.output.mol = SketchUtil.switchAtomGeometry(mol, src, dst, geoms);\n        if (this.output.mol == null) {\n            this.errmsg = 'No alternative geometries identified.';\n        }\n    }\n    execBondRotate() {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol;\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot rotate a ring-bond.';\n            return;\n        }\n        if (mol.atomAdjCount(mol.bondFrom(bond)) == 1 && mol.atomAdjCount(mol.bondTo(bond)) == 1) {\n            this.errmsg = 'Two-atom components do not rotate.';\n            return;\n        }\n        mol = mol.clone();\n        let [atom1, atom2, side] = this.mobileSide(bond, true);\n        let cx = mol.atomX(atom1), cy = mol.atomY(atom1);\n        let theta = Math.atan2(mol.atomY(atom1) - mol.atomY(atom2), mol.atomX(atom1) - mol.atomX(atom2));\n        for (let a of side)\n            if (a != atom1) {\n                let dx = mol.atomX(a) - cx, dy = mol.atomY(a) - cy, dist = norm_xy(dx, dy);\n                let dtheta = Math.atan2(dy, dx);\n                dtheta = theta - angleDiff(dtheta, theta);\n                mol.setAtomPos(a, cx + dist * Math.cos(dtheta), cy + dist * Math.sin(dtheta));\n            }\n        let mask = Vec.idxMask(Vec.add(side, -1), mol.numAtoms);\n        for (let b = 1; b <= mol.numBonds; b++)\n            if (mask[mol.bondFrom(b) - 1] && mask[mol.bondTo(b) - 1]) {\n                let bt = mol.bondType(b);\n                if (bt == Molecule.BONDTYPE_INCLINED)\n                    mol.setBondType(b, Molecule.BONDTYPE_DECLINED);\n                else if (bt == Molecule.BONDTYPE_DECLINED)\n                    mol.setBondType(b, Molecule.BONDTYPE_INCLINED);\n            }\n        if (CoordUtil.sketchEquivalent(this.input.mol, mol)) {\n            this.errmsg = 'Rotation has no effect.';\n            return;\n        }\n        this.output.mol = mol;\n    }\n    execBondAddTwo() {\n        if (this.subjectLength != 1) {\n            this.errmsg = 'Subject must be a single atom.';\n            return;\n        }\n        let atom = this.subjectIndex[0];\n        if (this.input.mol.atomAdjCount(atom) < 2) {\n            this.errmsg = 'Subject atom must already have at least 2 bonds.';\n            return;\n        }\n        let ang = SketchUtil.calculateNewBondAngles(this.input.mol, atom, 1);\n        if (ang.length == 0)\n            ang = SketchUtil.exitVectors(this.input.mol, atom);\n        if (ang.length == 0) {\n            this.errmsg = 'Could not find a suitable geometry for new substituents.';\n            return;\n        }\n        let baseAng = ang[0];\n        let cx = this.input.mol.atomX(atom), cy = this.input.mol.atomY(atom);\n        if (ang.length > 1) {\n            let best = 0;\n            for (let n = 0; n < ang.length; n++) {\n                let x = cx + Molecule.IDEALBOND * Math.cos(ang[n]);\n                let y = cy + Molecule.IDEALBOND * Math.sin(ang[n]);\n                let score = CoordUtil.congestionPoint(this.input.mol, x, y);\n                if (n == 0 || score < best) {\n                    best = score;\n                    baseAng = ang[n];\n                }\n            }\n        }\n        let ang1 = baseAng - 30.0 * DEGRAD, ang2 = baseAng + 30.0 * DEGRAD;\n        let mol = this.input.mol.clone();\n        let a1 = mol.addAtom('C', cx + Molecule.IDEALBOND * Math.cos(ang1), cy + Molecule.IDEALBOND * Math.sin(ang1));\n        let a2 = mol.addAtom('C', cx + Molecule.IDEALBOND * Math.cos(ang2), cy + Molecule.IDEALBOND * Math.sin(ang2));\n        mol.addBond(atom, a1, 1);\n        mol.addBond(atom, a2, 1);\n        this.output.mol = mol;\n    }\n    execBondInsert() {\n        let mol = this.input.mol, bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot insert into a ring-bond.';\n            return;\n        }\n        let [alink, _, side] = this.mobileSide(bond);\n        mol = mol.clone();\n        mol.setBondOrder(bond, 1);\n        let fragmask = Vec.booleanArray(false, mol.numAtoms);\n        for (let a of side)\n            fragmask[a - 1] = true;\n        let frag = MolUtil.subgraphWithAttachments(mol, fragmask);\n        for (let n = mol.numAtoms; n >= 1; n--)\n            if (fragmask[n - 1] && n != alink) {\n                mol.deleteAtomAndBonds(n);\n                if (n < alink)\n                    alink -= 1;\n            }\n        mol.setAtomElement(alink, 'C');\n        mol.setAtomCharge(alink, 0);\n        mol.setAtomUnpaired(alink, 0);\n        mol.setAtomHExplicit(alink, Molecule.HEXPLICIT_UNKNOWN);\n        mol.setAtomIsotope(alink, Molecule.ISOTOPE_NATURAL);\n        mol.setAtomMapNum(alink, 0);\n        mol.setAtomExtra(alink, []);\n        mol.setAtomTransient(alink, []);\n        let fusion = new TemplateFusion(mol, frag, '');\n        fusion.withGuideOnly = true;\n        fusion.permuteAtom(alink);\n        if (fusion.perms.length == 0) {\n            this.errmsg = 'Unable to insert.';\n            return;\n        }\n        this.output.mol = fusion.perms[0].mol;\n        this.zapSubject();\n        this.output.currentAtom = alink;\n    }\n    execJoin() {\n        if (!this.requireSubject())\n            return;\n        this.output.mol = SketchUtil.joinOverlappingAtoms(this.input.mol, this.subjectMask);\n        if (this.output.mol == null) {\n            this.errmsg = 'Subject contains no overlapping atoms.';\n        }\n        else {\n            this.zapSubject();\n        }\n    }\n    execNudge(dir, extent) {\n        if (!this.requireSubject())\n            return;\n        let dx = extent * (dir == 'left' ? -1 : dir == 'right' ? 1 : 0);\n        let dy = extent * (dir == 'down' ? -1 : dir == 'up' ? 1 : 0);\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let x = this.output.mol.atomX(this.subjectIndex[n]), y = this.output.mol.atomY(this.subjectIndex[n]);\n            this.output.mol.setAtomPos(this.subjectIndex[n], x + dx, y + dy);\n        }\n    }\n    execNudgeFar(dir) {\n        if (!this.requireSubject())\n            return;\n        if (this.subjectLength == this.input.mol.numAtoms) {\n            this.errmsg = 'Cannot apply to entire molecule.';\n            return;\n        }\n        let dx = dir == 'left' ? -1 : dir == 'right' ? 1 : 0;\n        let dy = dir == 'down' ? -1 : dir == 'up' ? 1 : 0;\n        this.output.mol = SketchUtil.moveToEdge(this.input.mol, this.subjectMask, dx, dy);\n        if (this.output.mol == null) {\n            this.execNudge(dir, 1);\n        }\n    }\n    execFlip(axis) {\n        if (this.input.mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        let isVertical = axis == 'ver';\n        let cx = 0, cy = 0;\n        let mask = this.subjectMask, mol = this.input.mol;\n        if (this.input.currentAtom > 0) {\n            cx = mol.atomX(this.input.currentAtom);\n            cy = mol.atomY(this.input.currentAtom);\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(this.input.currentAtom);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.input.currentBond > 0) {\n            let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(bfr);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.subjectLength == 0) {\n            let box = mol.boundary();\n            cx = 0.5 * (box.minX() + box.maxX());\n            cy = 0.5 * (box.minY() + box.maxY());\n            mask = Vec.booleanArray(true, mol.numAtoms);\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                if (!isVertical)\n                    this.output.mol.setAtomX(n, 2 * cx - this.output.mol.atomX(n));\n                else\n                    this.output.mol.setAtomY(n, 2 * cy - this.output.mol.atomY(n));\n            }\n    }\n    execScale(mag) {\n        const { mol, currentAtom, currentBond } = this.input;\n        if (mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        if (currentAtom > 0) {\n            let connAtoms = [];\n            for (let a of this.subjectIndex)\n                if (a != currentAtom && mol.findBond(currentAtom, a) > 0)\n                    connAtoms.push(a);\n            let g = Graph.fromMolecule(mol);\n            g.isolateNode(currentAtom - 1);\n            let anything = false;\n            for (let cc of g.calculateComponentGroups()) {\n                Vec.addTo(cc, 1);\n                let sz = 0, dx = 0, dy = 0;\n                for (let a of cc)\n                    if (connAtoms.includes(a)) {\n                        dx += mol.atomX(a) - mol.atomX(currentAtom);\n                        dy += mol.atomY(a) - mol.atomY(currentAtom);\n                        sz++;\n                    }\n                if (sz == 0)\n                    continue;\n                [dx, dy] = [dx / sz, dy / sz];\n                if (Math.abs(dx) < 0.1 && Math.abs(dy) < 0.1)\n                    continue;\n                [dx, dy] = [dx * (mag - 1), dy * (mag - 1)];\n                if (!this.output.mol)\n                    this.output.mol = mol.clone();\n                for (let a of cc)\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + dx, this.output.mol.atomY(a) + dy);\n                anything = true;\n            }\n            if (anything)\n                return;\n        }\n        let b;\n        if (this.subjectLength == 2 && (b = mol.findBond(this.subjectIndex[0], this.subjectIndex[1])) > 0 && !mol.bondInRing(b)) {\n            let a1 = this.subjectIndex[0], a2 = this.subjectIndex[1];\n            let ccmol = mol.clone();\n            ccmol.deleteBond(b);\n            let idx1 = [], idx2 = [];\n            for (let n = 1; n <= ccmol.numAtoms; n++) {\n                if (ccmol.atomConnComp(n) == ccmol.atomConnComp(a1))\n                    idx1.push(n);\n                else if (ccmol.atomConnComp(n) == ccmol.atomConnComp(a2))\n                    idx2.push(n);\n            }\n            let dx = (mol.atomX(a2) - mol.atomX(a1)) * (mag - 1);\n            let dy = (mol.atomY(a2) - mol.atomY(a1)) * (mag - 1);\n            if (idx1.length == idx2.length) {\n                dx *= 0.5;\n                dy *= 0.5;\n            }\n            this.output.mol = mol.clone();\n            if (idx1.length <= idx2.length)\n                for (let n = 0; n < idx1.length; n++) {\n                    let a = idx1[n];\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) - dx, this.output.mol.atomY(a) - dy);\n                }\n            if (idx2.length <= idx1.length)\n                for (let n = 0; n < idx2.length; n++) {\n                    let a = idx2[n];\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + dx, this.output.mol.atomY(a) + dy);\n                }\n            return;\n        }\n        let cx = 0, cy = 0;\n        if (currentAtom > 0) {\n            cx = mol.atomX(currentAtom);\n            cy = mol.atomY(currentAtom);\n        }\n        else if (currentBond > 0) {\n            let bfr = mol.bondFrom(currentBond), bto = mol.bondTo(currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let x = this.output.mol.atomX(this.subjectIndex[n]);\n            let y = this.output.mol.atomY(this.subjectIndex[n]);\n            this.output.mol.setAtomPos(this.subjectIndex[n], (x - cx) * mag + cx, (y - cy) * mag + cy);\n        }\n    }\n    execRotate(theta, centreX, centreY) {\n        theta *= DEGRAD;\n        let mol = this.input.mol;\n        if (centreX != null && centreY != null) {\n            this.output.mol = mol.clone();\n            let mask = this.subjectLength == 0 ? Vec.booleanArray(true, mol.numAtoms) : this.subjectMask;\n            CoordUtil.rotateAtoms(this.output.mol, mask, centreX, centreY, theta);\n            return;\n        }\n        if (mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        let cx = 0, cy = 0;\n        let mask = this.subjectMask;\n        if (this.input.currentAtom > 0) {\n            cx = mol.atomX(this.input.currentAtom);\n            cy = mol.atomY(this.input.currentAtom);\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(this.input.currentAtom);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n            if (Vec.maskCount(mask) == 1 && mask[this.input.currentAtom - 1]) {\n                this.errmsg = 'Component is isolated.';\n                return;\n            }\n        }\n        else if (this.input.currentBond > 0) {\n            let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(bfr);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.subjectLength == 0) {\n            let box = mol.boundary();\n            cx = 0.5 * (box.minX() + box.maxX());\n            cy = 0.5 * (box.minY() + box.maxY());\n            mask = Vec.booleanArray(true, mol.numAtoms);\n        }\n        else {\n            if (this.subjectLength == 1) {\n                this.errmsg = 'Component is isolated.';\n                return;\n            }\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        CoordUtil.rotateAtoms(this.output.mol, mask, cx, cy, theta);\n    }\n    execBondDist(dist) {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        if (mol.bondInRing(bond)) {\n            let atom1 = mol.bondFrom(bond), atom2 = mol.bondTo(bond);\n            let dx = mol.atomX(atom2) - mol.atomX(atom1), dy = mol.atomY(atom2) - mol.atomY(atom1), curDist = norm_xy(dx, dy), inv = 1.0 / curDist;\n            let sel1 = this.isSelected(atom1), sel2 = this.isSelected(atom2);\n            let ox = dx * (dist - curDist) * inv, oy = dy * (dist - curDist) * inv;\n            if (sel1 && !sel2) {\n                mol.setAtomPos(atom1, mol.atomX(atom1) - ox, mol.atomY(atom1) - oy);\n            }\n            else if (sel2 && !sel1) {\n                mol.setAtomPos(atom2, mol.atomX(atom2) + ox, mol.atomY(atom2) + oy);\n            }\n            else {\n                mol.setAtomPos(atom1, mol.atomX(atom1) - 0.5 * ox, mol.atomY(atom1) - 0.5 * oy);\n                mol.setAtomPos(atom2, mol.atomX(atom2) + 0.5 * ox, mol.atomY(atom2) + 0.5 * oy);\n            }\n        }\n        else {\n            let [atom1, atom2, side] = this.mobileSide(bond);\n            let dx = mol.atomX(atom2) - mol.atomX(atom1), dy = mol.atomY(atom2) - mol.atomY(atom1);\n            let curDist = norm_xy(dx, dy), inv = 1.0 / curDist;\n            let ox = dx * (dist - curDist) * inv, oy = dy * (dist - curDist) * inv;\n            for (let a of side)\n                mol.setAtomPos(a, mol.atomX(a) - ox, mol.atomY(a) - oy);\n        }\n        this.output.mol = mol;\n    }\n    execAlignAngle(angle) {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot align a ring-bond.';\n            return;\n        }\n        let [atom1, atom2, side] = this.mobileSide(bond);\n        let cx = mol.atomX(atom2), cy = mol.atomY(atom2);\n        let delta = angle - Math.atan2(mol.atomY(atom1) - cy, mol.atomX(atom1) - cx);\n        let cosTheta = Math.cos(delta), sinTheta = Math.sin(delta);\n        for (let a of side) {\n            let x = mol.atomX(a) - cx, y = mol.atomY(a) - cy;\n            mol.setAtomPos(a, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n        }\n        this.output.mol = mol;\n    }\n    execAlignRegular() {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n        let theta = Math.atan2(mol.atomY(bto) - mol.atomY(bfr), mol.atomX(bto) - mol.atomX(bfr)) * RADDEG;\n        if (theta < 0)\n            theta += 360;\n        let snap = Math.round(theta / 30) * 30;\n        if (Math.abs(theta - snap) < 0.001)\n            return;\n        let delta = (snap - theta) * DEGRAD;\n        let mask = this.input.selectedMask;\n        if (Vec.allFalse(mask)) {\n            let cc = mol.atomConnComp(bfr);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                mask[n - 1] = cc == mol.atomConnComp(n);\n        }\n        let cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto)), cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let dx = mol.atomX(n) - cx, dy = mol.atomY(n) - cy;\n                let th = Math.atan2(dy, dx) + delta, dist = norm_xy(dx, dy);\n                mol.setAtomPos(n, cx + dist * Math.cos(th), cy + dist * Math.sin(th));\n            }\n        this.output.mol = mol;\n    }\n    execAdjustTorsion(angle) {\n        if (this.input.currentAtom == 0 || Vec.maskCount(this.input.selectedMask) != 3) {\n            this.errmsg = 'Must be 3 selected atoms and a current atom.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        let a1 = this.input.currentAtom;\n        let atoms = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (n != a1 && this.input.selectedMask[n - 1])\n                atoms.push(n);\n        let a2 = mol.findBond(a1, atoms[0]) > 0 ? atoms.shift() :\n            mol.findBond(a1, atoms[1]) > 0 ? atoms.pop() : 0;\n        if (a2 == 0 || mol.findBond(a2, atoms[0]) == 0) {\n            this.errmsg = 'Selected atoms must be consecutive.';\n            return;\n        }\n        let a3 = atoms[0];\n        let cx = mol.atomX(a2), cy = mol.atomY(a2);\n        let theta1 = Math.atan2(mol.atomY(a1) - cy, mol.atomX(a1) - cx);\n        let theta3 = Math.atan2(mol.atomY(a3) - cy, mol.atomX(a3) - cx);\n        let delta = angle - angleDiff(theta3, theta1);\n        let group1 = [], group3 = [];\n        if (mol.atomRingBlock(a1) == 0 || mol.atomRingBlock(a1) != mol.atomRingBlock(a3)) {\n            let g = Graph.fromMolecule(mol);\n            g.removeEdge(a2 - 1, a1 - 1);\n            g.removeEdge(a2 - 1, a3 - 1);\n            let cc = g.calculateComponents();\n            for (let n = 0; n < g.numNodes; n++) {\n                if (cc[n] == cc[a1 - 1])\n                    group1.push(n + 1);\n                else if (cc[n] == cc[a3 - 1])\n                    group3.push(n + 1);\n            }\n        }\n        if (mol.atomRingBlock(a1) > 0 && mol.atomRingBlock(a1) == mol.atomRingBlock(a2))\n            group1 = [a1];\n        if (mol.atomRingBlock(a3) > 0 && mol.atomRingBlock(a3) == mol.atomRingBlock(a2))\n            group3 = [a3];\n        CoordUtil.rotateAtoms(mol, Vec.idxMask(Vec.add(group1, -1), mol.numAtoms), cx, cy, -0.5 * delta);\n        CoordUtil.rotateAtoms(mol, Vec.idxMask(Vec.add(group3, -1), mol.numAtoms), cx, cy, 0.5 * delta);\n        this.output.mol = mol;\n    }\n    execMove(refAtom, deltaX, deltaY) {\n        let subj = this.subjectIndex;\n        if (Vec.len(subj) == 0) {\n            if (refAtom == 0)\n                return;\n            subj = [refAtom];\n        }\n        this.output.mol = this.input.mol.clone();\n        for (let a of subj)\n            this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + deltaX, this.output.mol.atomY(a) + deltaY);\n    }\n    execRing(ringX, ringY, aromatic) {\n        let rsz = ringX.length;\n        let atoms = Vec.numberArray(0, rsz), bonds = Vec.numberArray(0, rsz);\n        let outmol = this.input.mol.clone();\n        for (let n = 0; n < rsz; n++) {\n            atoms[n] = CoordUtil.atomAtPoint(outmol, ringX[n], ringY[n]);\n            if (atoms[n] == 0)\n                atoms[n] = outmol.addAtom('C', ringX[n], ringY[n]);\n        }\n        for (let n = 0; n < rsz; n++) {\n            let nn = n < rsz - 1 ? n + 1 : 0;\n            bonds[n] = outmol.findBond(atoms[n], atoms[nn]);\n            if (bonds[n] == 0)\n                bonds[n] = outmol.addBond(atoms[n], atoms[nn], 1);\n        }\n        if (aromatic) {\n            let valence = Vec.numberArray(0, rsz);\n            let pi = Vec.booleanArray(false, rsz);\n            for (let n = 0; n < rsz; n++) {\n                valence[n] = Chemistry.ELEMENT_BONDING[outmol.atomicNumber(atoms[n])] + outmol.atomCharge(atoms[n]);\n                if (outmol.atomHExplicit(atoms[n]) != Molecule.HEXPLICIT_UNKNOWN)\n                    valence[n] -= outmol.atomHExplicit(atoms[n]);\n                for (let b of outmol.atomAdjBonds(atoms[n]))\n                    valence[n] -= outmol.bondOrder(b);\n                if (outmol.bondOrder(bonds[n]) >= 2) {\n                    pi[n] = true;\n                    if (n < rsz - 1) {\n                        pi[n] = true;\n                        n++;\n                    }\n                    else\n                        pi[0] = true;\n                }\n            }\n            for (let n = 0; n < rsz; n++) {\n                let nn = n < rsz - 1 ? n + 1 : 0;\n                if (pi[n] || pi[nn])\n                    continue;\n                if (valence[n] > 0 && valence[nn] > 0) {\n                    outmol.setBondOrder(bonds[n], 2);\n                    pi[n] = true;\n                    pi[nn] = true;\n                    valence[n]--;\n                    valence[nn]--;\n                }\n            }\n        }\n        this.output.mol = outmol;\n    }\n    execTemplateFusion(frag) {\n        let mol = this.input.mol;\n        let fusion = new TemplateFusion(mol, frag, '');\n        if (this.subjectLength == 0)\n            fusion.permuteNone();\n        else if (this.subjectLength == 1)\n            fusion.permuteAtom(this.subjectIndex[0]);\n        else if (this.subjectLength == 2 && mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) > 0)\n            fusion.permuteBond(this.subjectIndex[0], this.subjectIndex[1]);\n        else\n            fusion.permuteMulti(this.subjectIndex);\n        let permutations = [];\n        for (let perm of fusion.perms) {\n            let obj = {};\n            obj['mol'] = perm.mol.toString();\n            obj['display'] = perm.display.toString();\n            obj['molidx'] = perm.molidx;\n            obj['temidx'] = perm.temidx;\n            obj['srcidx'] = perm.srcidx;\n            permutations.push(obj);\n        }\n        this.output.permutations = permutations;\n    }\n    execAbbrevTempl() {\n    }\n    execAbbrevGroup() {\n        if (!this.requireSubject())\n            return;\n        if (!this.checkAbbreviationReady())\n            return;\n        let mol = MolUtil.convertToAbbrev(this.input.mol, Vec.notMask(this.subjectMask), '?');\n        if (mol == null) {\n            this.errmsg = 'Inline abbreviations must be terminal with exactly one attachment point.';\n            return;\n        }\n        if (AbbrevContainer.main) {\n            AbbrevContainer.main.submitMolecule(mol, true);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomElement(n) == '?' && MolUtil.hasAbbrev(mol, n))\n                    AbbrevContainer.main.substituteAbbrevName(mol, n);\n        }\n        this.output.mol = mol;\n        this.zapSubject();\n        this.output.currentAtom = mol.numAtoms;\n    }\n    execAbbrevFormula() {\n        if (!this.requireSubject())\n            return;\n        if (!this.checkAbbreviationReady())\n            return;\n        let fixed = this.input.mol.clone();\n        for (let n = 1; n <= fixed.numAtoms; n++)\n            fixed.setAtomHExplicit(n, fixed.atomHydrogens(n));\n        let abv = MolUtil.subgraphMask(fixed, this.subjectMask);\n        let formula = MolUtil.molecularFormula(abv, true);\n        let mol = MolUtil.convertToAbbrev(this.input.mol, Vec.notMask(this.subjectMask), formula);\n        if (mol == null) {\n            this.errmsg = 'Inline abbreviations must be terminal with exactly one attachment point.';\n            return;\n        }\n        this.output.mol = mol;\n        this.zapSubject();\n        this.output.currentAtom = mol.numAtoms;\n    }\n    execAbbrevClear() {\n        let idx = [];\n        for (let n of this.subjectIndex)\n            if (MolUtil.hasAbbrev(this.input.mol, n))\n                idx.push(n);\n        if (idx.length == 0) {\n            this.errmsg = 'No abbreviations to clear.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        for (let n of idx)\n            MolUtil.clearAbbrev(mol, n);\n        this.output.mol = mol;\n    }\n    execAbbrevExpand() {\n        let idx = [];\n        for (let n of this.subjectIndex)\n            if (MolUtil.hasAbbrev(this.input.mol, n))\n                idx.push(n);\n        if (idx.length == 0) {\n            this.errmsg = 'No abbreviations to expand.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        for (let n of idx)\n            MolUtil.expandOneAbbrev(mol, n, true);\n        this.output.mol = mol;\n        this.zapSubject();\n    }\n    execBondArtifact(activity) {\n        if (!this.requireAtoms() || !this.requireSubject())\n            return;\n        let artif = new BondArtifact(this.input.mol.clone());\n        let subject = this.subjectIndex.slice(0), curAtom = this.input.currentAtom;\n        if (curAtom > 0 && subject.indexOf(curAtom) < 0)\n            subject.push(curAtom);\n        if (activity == ActivityType.BondArtifactPath) {\n            if (!artif.createPath(subject)) {\n                this.errmsg = 'Path artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactRing) {\n            if (!artif.createRing(subject)) {\n                this.errmsg = 'Ring artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactArene) {\n            if (!artif.createArene(subject)) {\n                this.errmsg = 'Arene artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactClear) {\n            if (!artif.removeArtifact(subject)) {\n                if (this.removePolymerBlock(subject))\n                    return;\n                this.errmsg = 'No artifact removed.';\n                return;\n            }\n        }\n        artif.rewriteMolecule();\n        this.output.mol = artif.mol;\n    }\n    execPolymerBlock() {\n        if (!this.requireAtoms() || !this.requireSubject())\n            return;\n        if (this.owner)\n            this.owner.performPolymerBlock(this.subjectIndex);\n    }\n    execAddHydrogens() {\n        let mol = this.input.mol.clone();\n        if (!this.requireAtoms())\n            return;\n        let atoms = this.subjectIndex;\n        if (atoms.length == 0)\n            atoms = Vec.identity1(mol.numAtoms);\n        for (let a of atoms) {\n            let hc = mol.atomHydrogens(a);\n            if (hc > 0)\n                SketchUtil.placeAdditionalHydrogens(mol, a, hc);\n        }\n        if (mol.numAtoms == this.input.mol.numAtoms) {\n            this.errmsg = 'Nothing needs to be added.';\n            return;\n        }\n        this.output.mol = mol;\n    }\n    execRemoveHydrogens() {\n        if (!this.requireAtoms())\n            return;\n        let mol = this.input.mol;\n        let selmask = this.subjectMask;\n        if (Vec.allFalse(selmask))\n            selmask = Vec.booleanArray(true, mol.numAtoms);\n        let keepmask = Vec.booleanArray(true, mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.boringHydrogen(mol, n)) {\n                let nbr = mol.atomAdjList(n)[0];\n                if (selmask[n - 1] || selmask[nbr - 1])\n                    keepmask[n - 1] = false;\n            }\n        if (Vec.allTrue(keepmask)) {\n            this.errmsg = 'Nothing to be deleted.';\n            return;\n        }\n        this.output.mol = MolUtil.subgraphMask(mol, keepmask);\n    }\n    execQueryClear() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol.clone();\n        const { currentBond } = this.input;\n        if (currentBond > 0 && QueryUtil.hasAnyQueryBond(mol, currentBond)) {\n            QueryUtil.deleteQueryBondAll(mol, currentBond);\n            this.output.mol = mol;\n            return;\n        }\n        let anything = false;\n        for (let a of this.subjectIndex)\n            if (QueryUtil.hasAnyQueryAtom(mol, a)) {\n                QueryUtil.deleteQueryAtomAll(mol, a);\n                anything = true;\n            }\n        for (let b = 1; b <= mol.numBonds; b++)\n            if (this.subjectMask[mol.bondFrom(b) - 1] && this.subjectMask[mol.bondTo(b) - 1] && QueryUtil.hasAnyQueryBond(mol, b)) {\n                QueryUtil.deleteQueryBondAll(mol, b);\n                anything = true;\n            }\n        if (anything)\n            this.output.mol = mol;\n        else\n            this.errmsg = 'No query terms to clear.';\n    }\n    execQueryCopy() {\n        if (!this.requireSubject())\n            return;\n        const { mol, currentBond } = this.input;\n        if (currentBond > 0) {\n            if (!QueryUtil.hasAnyQueryBond(mol, currentBond)) {\n                this.errmsg = 'Bond has no query terms.';\n                return;\n            }\n            let qmol = new Molecule();\n            qmol.addAtom('*', 0, 0);\n            qmol.addAtom('*', Molecule.IDEALBOND, 0);\n            qmol.addBond(1, 2, 1);\n            qmol.setBondExtra(1, mol.bondExtra(currentBond).filter((xtra) => xtra.startsWith('q')));\n            this.toClipboard = qmol.toString();\n        }\n        else if (this.subjectLength == 1) {\n            let atom = this.subjectIndex[0];\n            if (!QueryUtil.hasAnyQueryAtom(mol, atom)) {\n                this.errmsg = 'Atom has no query terms.';\n                return;\n            }\n            let qmol = new Molecule();\n            qmol.addAtom('*', 0, 0);\n            qmol.setAtomExtra(1, mol.atomExtra(atom).filter((xtra) => xtra.startsWith('q')));\n            this.toClipboard = qmol.toString();\n        }\n        else\n            this.errmsg = 'Subject has to be a single atom or bond.';\n    }\n    execQueryPaste() {\n        if (!this.requireSubject())\n            return;\n        let qmol = this.param.qmol;\n        if (!qmol) { }\n        else if (qmol.numAtoms == 1 && qmol.atomElement(1) == '*' && QueryUtil.hasAnyQueryAtom(qmol, 1)) {\n            let mol = this.output.mol = this.input.mol.clone();\n            let qterms = qmol.atomExtra(1).filter((xtra) => xtra.startsWith('q'));\n            for (let a of this.subjectIndex) {\n                let aterms = mol.atomExtra(a).filter((xtra) => xtra.startsWith('q'));\n                mol.setAtomExtra(a, [...aterms, ...qterms]);\n            }\n            return;\n        }\n        else if (qmol.numAtoms == 2 && qmol.atomElement(1) == '*' && qmol.atomElement(2) == '*' &&\n            qmol.numBonds == 1 && QueryUtil.hasAnyQueryBond(qmol, 1)) {\n            let mol = this.output.mol = this.input.mol.clone();\n            let qterms = qmol.bondExtra(1).filter((xtra) => xtra.startsWith('q'));\n            for (let b = 1; b <= mol.numBonds; b++)\n                if (this.subjectMask[mol.bondFrom(b) - 1] && this.subjectMask[mol.bondTo(b) - 1]) {\n                    let bterms = mol.bondExtra(b).filter((xtra) => xtra.startsWith('q'));\n                    mol.setBondExtra(b, [...bterms, ...qterms]);\n                }\n            return;\n        }\n        this.errmsg = 'Unable to paste query terms.';\n    }\n    execQuerySetAtom() {\n    }\n    execQuerySetBond() {\n    }\n    execQueryBondAny() {\n        if (!this.requireSubject())\n            return;\n        const { mol, currentBond } = this.input;\n        let bonds = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                bonds.push(n);\n        if (bonds.length == 0) {\n            this.errmsg = 'Must select at least one bond.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        for (let b of bonds) {\n            this.output.mol.setBondOrder(b, 0);\n            QueryUtil.setQueryBondOrders(this.output.mol, b, [-1, 0, 1, 2, 3, 4]);\n        }\n    }\n    execSproutDirection(deltaX, deltaY) {\n        var _a, _b;\n        if (!this.requireCurrent())\n            return;\n        if (deltaX == 0 && deltaY == 0)\n            return;\n        const { mol, currentAtom } = this.input;\n        let angleOptions;\n        if (mol.atomAdjCount(currentAtom) == 0)\n            angleOptions = Vec.identity0(12).map((n) => n * TWOPI / 12);\n        else\n            angleOptions = (_a = SketchUtil.primeDirections(mol, currentAtom)) !== null && _a !== void 0 ? _a : SketchUtil.exitVectors(mol, currentAtom);\n        if (angleOptions.length == 0)\n            return;\n        let theta = Math.atan2(deltaY, deltaX);\n        let idx = Vec.idxMin(angleOptions.map((look) => Math.abs(angleDiff(theta, look)) + 0.01 * Math.abs(Math.sin(look))));\n        let px = mol.atomX(currentAtom) + Molecule.IDEALBOND * Math.cos(angleOptions[idx]);\n        let py = mol.atomY(currentAtom) + Molecule.IDEALBOND * Math.sin(angleOptions[idx]);\n        this.output.mol = mol.clone();\n        let newAtom = this.output.mol.addAtom('C', px, py);\n        this.output.mol.addBond(currentAtom, newAtom, 1);\n        this.output.mol = (_b = SketchUtil.joinOverlappingAtoms(this.output.mol, Vec.booleanArray(true, this.output.mol.numAtoms))) !== null && _b !== void 0 ? _b : this.output.mol;\n        for (let n = 1; n <= this.output.mol.numAtoms; n++) {\n            let dx = this.output.mol.atomX(n) - px, dy = this.output.mol.atomY(n) - py;\n            if (norm2_xy(dx, dy) < CoordUtil.OVERLAP_THRESHOLD_SQ) {\n                this.output.currentAtom = n;\n                break;\n            }\n        }\n    }\n    requireSubject() {\n        if (this.subjectLength == 0)\n            this.errmsg = 'Subject required: current atom/bond or selected atoms.';\n        return this.subjectLength > 0;\n    }\n    requireAtoms() {\n        if (this.input.mol.numAtoms == 0)\n            this.errmsg = 'There are no atoms.';\n        return this.input.mol.numAtoms > 0;\n    }\n    requireCurrent() {\n        if (this.input.currentAtom == 0 && this.input.currentBond == 0) {\n            this.errmsg = 'There must be a current atom or bond.';\n            return false;\n        }\n        return true;\n    }\n    requireSelected() {\n        if (!this.hasSelected)\n            this.errmsg = 'No atoms are selected.';\n        return this.hasSelected;\n    }\n    pickSelectedGroup(groups, dir) {\n        if (this.subjectLength == 0)\n            return 0;\n        for (let i = 0; i < groups.length; i++) {\n            let g = groups[i];\n            let all = true;\n            for (let j = 0; j < g.length; j++)\n                if (!this.subjectMask[g[j] - 1]) {\n                    all = false;\n                    break;\n                }\n            if (all) {\n                i += dir;\n                return i < 0 ? i + groups.length : i >= groups.length ? i - groups.length : i;\n            }\n        }\n        for (let i = 0; i < groups.length; i++) {\n            let g = groups[i];\n            for (let j = 0; j < g.length; j++)\n                if (this.subjectMask[g[j] - 1])\n                    return i;\n        }\n        return 0;\n    }\n    zapSubject() {\n        this.output.currentAtom = 0;\n        this.output.currentBond = 0;\n        this.output.selectedMask = Vec.booleanArray(false, this.input.mol.numAtoms);\n    }\n    performBondNew(atom, order, type) {\n        let mol = this.input.mol;\n        let ang = SketchUtil.calculateNewBondAngles(mol, atom, order);\n        if (ang.length == 0)\n            ang = SketchUtil.exitVectors(mol, atom);\n        if (ang.length == 0) {\n            this.errmsg = 'Could not find a suitable geometry for a new substituent.';\n            return;\n        }\n        let bx = [], by = [], bscore = [];\n        for (let n = 0; n < ang.length; n++) {\n            let x = mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(ang[n]);\n            let y = mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(ang[n]);\n            let score = CoordUtil.congestionPoint(mol, x, y);\n            if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(atom)] <= 2)\n                score += Math.abs(angleNorm(ang[n])) * 1E-8;\n            else\n                score += Math.abs(angleDiff(0.5 * Math.PI, ang[n])) * 1E-8;\n            bx.push(x);\n            by.push(y);\n            bscore.push(score);\n        }\n        let idx = Vec.idxSort(bscore);\n        this.output.mol = mol.clone();\n        let anum = CoordUtil.atomAtPoint(this.output.mol, bx[idx[0]], by[idx[0]]);\n        if (anum == 0)\n            anum = this.output.mol.addAtom('C', bx[idx[0]], by[idx[0]]);\n        MolUtil.addBond(this.output.mol, atom, anum, order, type);\n        if (idx.length >= 2) {\n            this.output.altmol = mol.clone();\n            anum = CoordUtil.atomAtPoint(this.output.altmol, bx[idx[1]], by[idx[1]]);\n            if (anum == 0)\n                anum = this.output.altmol.addAtom('C', bx[idx[1]], by[idx[1]]);\n            MolUtil.addBond(this.output.altmol, atom, anum, order, type);\n        }\n    }\n    performBondChange(order, type) {\n        let mol = this.input.mol;\n        let bonds = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                bonds.push(n);\n        let switchType = type == Molecule.BONDTYPE_DECLINED || type == Molecule.BONDTYPE_INCLINED;\n        let stereoType = switchType || type == Molecule.BONDTYPE_UNKNOWN;\n        let anyChange = switchType;\n        for (let n = 0; n < bonds.length && !anyChange; n++) {\n            let b = bonds[n];\n            if (mol.bondOrder(b) != order && type == Molecule.BONDTYPE_NORMAL)\n                anyChange = true;\n            else if (mol.bondType(b) != type)\n                anyChange = true;\n        }\n        if (!anyChange) {\n            this.errmsg = 'No bond changes made.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 0; n < bonds.length; n++) {\n            let b = bonds[n], bfr = this.output.mol.bondFrom(b), bto = this.output.mol.bondTo(b);\n            if (switchType && this.output.mol.bondType(b) == type) {\n                this.output.mol.setBondFromTo(b, bto, bfr);\n            }\n            else if (this.output.mol.bondOrder(b) != order || this.output.mol.bondType(b) != type) {\n                if (!stereoType && order != this.output.mol.bondOrder(b))\n                    this.output.mol.setBondOrder(b, order);\n                else\n                    this.output.mol.setBondType(b, type);\n            }\n            else if (switchType) {\n                this.output.mol.setBondFromTo(b, bto, bfr);\n            }\n        }\n    }\n    performBondGeomAtom(geom, atom) {\n        let mol = this.input.mol;\n        let adj = mol.atomAdjList(atom);\n        let asz = adj.length, gsz = SketchUtil.GEOM_ANGLES[geom].length;\n        if (asz > gsz) {\n            this.errmsg = 'The current atom has more bonds than does the selected geometry.';\n            return;\n        }\n        if (asz == 0) {\n            this.performBondNew(atom, 1, Molecule.BONDTYPE_NORMAL);\n            return;\n        }\n        if (asz == gsz) {\n            this.output.mol = SketchUtil.refitAtomGeometry(mol, atom, geom);\n            if (this.output.mol == null)\n                this.errmsg = 'Could not re-fit the atom geometry.';\n            return;\n        }\n        let ang = CoordUtil.atomBondAngles(mol, atom);\n        let newang = SketchUtil.mapAngleSubstituent(geom, ang);\n        if (newang == null) {\n            this.output.mol = SketchUtil.refitAtomGeometry(mol, atom, geom);\n            if (this.output.mol == null)\n                this.errmsg = 'Could not re-fit the atom geometry.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        let theta = SketchUtil.pickNewAtomDirection(mol, atom, newang);\n        let x = this.output.mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(theta);\n        let y = this.output.mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(theta);\n        let anum = CoordUtil.atomAtPoint(this.output.mol, x, y);\n        if (anum == 0)\n            anum = this.output.mol.addAtom('C', x, y);\n        MolUtil.addBond(this.output.mol, atom, anum, 1);\n    }\n    performBondGeomBond(geom, bond) {\n        let mol = this.input.mol;\n        let bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        let ac1 = mol.atomAdjCount(bfr), ac2 = mol.atomAdjCount(bto);\n        if (ac1 > 1 && ac2 == 1) { }\n        else if (ac1 == 1 && ac2 > 1) {\n            let t = ac1;\n            ac1 = ac2;\n            ac2 = t;\n        }\n        else {\n            this.errmsg = 'One end of the bond must be terminal.';\n            return;\n        }\n        let adj = mol.atomAdjList(bfr);\n        let x1 = mol.atomX(bfr), y1 = mol.atomY(bfr);\n        let x2 = mol.atomX(bto), y2 = mol.atomY(bto);\n        let ang = [];\n        for (let n = 0, p = 0; n < adj.length; n++)\n            if (adj[n] != bto) {\n                ang.push(Math.atan2(mol.atomY(adj[n]) - y1, mol.atomX(adj[n]) - x1));\n            }\n        let newang = SketchUtil.mapAngleSubstituent(geom, ang);\n        if (newang == null) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        let bestAng = TWOPI + 1, bestX = 0, bestY = 0;\n        let curth = Math.atan2(y2 - y1, x2 - x1), r = norm_xy(x2 - x1, y2 - y1);\n        for (let n = 0; n < newang.length; n++) {\n            let th = angleDiff(newang[n], curth);\n            if (th < 0)\n                th += TWOPI;\n            if (n > 0 && th > bestAng)\n                continue;\n            let x = x1 + r * Math.cos(th + curth);\n            let y = y1 + r * Math.sin(th + curth);\n            if (CoordUtil.atomAtPoint(mol, x, y) > 0)\n                continue;\n            bestAng = th;\n            bestX = x;\n            bestY = y;\n        }\n        if (bestAng > TWOPI) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        this.output.mol.setAtomPos(bto, bestX, bestY);\n    }\n    checkAbbreviationReady() {\n        let junction = 0;\n        let mol = this.input.mol, subjmask = this.subjectMask;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let b1 = mol.bondFrom(n), b2 = mol.bondTo(n);\n            let atom = 0;\n            if ((subjmask[b1 - 1] && !subjmask[b2 - 1] && MolUtil.hasAbbrev(mol, b1)) ||\n                (subjmask[b2 - 1] && !subjmask[b1 - 1] && MolUtil.hasAbbrev(mol, b2))) {\n                this.errmsg = 'Already an abbreviation.';\n                return false;\n            }\n            if (subjmask[b1 - 1] && !subjmask[b2 - 1])\n                atom = b1;\n            else if (subjmask[b2 - 1] && !subjmask[b1 - 1])\n                atom = b2;\n            if (atom == 0 || atom == junction) { }\n            else if (junction == 0)\n                junction = atom;\n            else {\n                this.errmsg = 'The selected group must be terminal.';\n                return false;\n            }\n        }\n        return true;\n    }\n    mobileSide(bond, disqualTerminal = false) {\n        let { mol } = this.input;\n        let atom1 = mol.bondFrom(bond), atom2 = mol.bondTo(bond);\n        let g = Graph.fromMolecule(mol);\n        g.removeEdge(atom1 - 1, atom2 - 1);\n        let side1 = [], side2 = [];\n        for (let grp of g.calculateComponentGroups()) {\n            if (grp.includes(atom1 - 1))\n                side1 = Vec.add(grp, 1);\n            if (grp.includes(atom2 - 1))\n                side2 = Vec.add(grp, 1);\n        }\n        let weight1 = side1.length * (mol.atomRingBlock(atom1) > 0 ? 2 : 1);\n        let weight2 = side2.length * (mol.atomRingBlock(atom2) > 0 ? 2 : 1);\n        let sel1 = false, sel2 = false;\n        for (let a of side1)\n            if (this.isSelected(a)) {\n                sel1 = true;\n                break;\n            }\n        for (let a of side2)\n            if (this.isSelected(a)) {\n                sel2 = true;\n                break;\n            }\n        if (disqualTerminal && mol.atomAdjCount(atom1) == 1)\n            return [atom2, atom1, side2];\n        else if (disqualTerminal && mol.atomAdjCount(atom2) == 1)\n            return [atom1, atom2, side1];\n        else if (sel1 && !sel2) { }\n        else if ((sel2 && !sel1) || weight2 < weight1)\n            return [atom2, atom1, side2];\n        return [atom1, atom2, side1];\n    }\n    isSelected(atom) {\n        let mask = this.input.selectedMask;\n        return mask ? mask[atom - 1] : false;\n    }\n    removePolymerBlock(atoms) {\n        let polymer = new PolymerBlock(this.input.mol.clone());\n        for (let id of polymer.getIDList()) {\n            let unit = polymer.getUnit(id);\n            for (let atom of atoms)\n                if (unit.atoms.includes(atom)) {\n                    polymer.removeUnit(id);\n                    polymer.rewriteMolecule();\n                    this.output.mol = polymer.mol;\n                    return true;\n                }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=MoleculeActivity.js.map","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Mixture} from './Mixture';\nimport {MoleculeStream} from 'webmolkit/io/MoleculeStream';\nimport {StandardUnits, Units} from './Units';\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {ActivityType, MoleculeActivity, SketchState} from 'webmolkit/sketcher/MoleculeActivity';\nimport {MixfileComponent} from './Mixfile';\n\n/*\n\tMixture normalisation options: recommendations for how to make a mixture more conformant. It is up to the caller\n\tto decide what to do with this information.\n*/\n\nexport interface NormMixtureNote\n{\n\torigin:number[];\n\n\tstereoEnum?:string[]; // if defined, contains stereo-enumerated versions of current\n\n\t// units converted into concentration, if both possible & necessary\n\tconcQuantity?:number | number[]; // a concentration numeric which is associated with the units below (two numbers in case of a range)\n\tconcError?:number; // optional standard error (applies to quantity when it's a scalar)\n\tconcUnits?:string; // units for quantity (e.g. %, mol/L, g, etc.)\n\tconcRelation?:string;\n}\n\nenum AbsType\n{\n\tNone,\n\tMass, // reference scale: g\n\tVolume, // reference scale: L\n\tMoles, // reference scale: mol\n}\n\nexport class NormMixture\n{\n\tpublic notes:NormMixtureNote[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor(private mixture:Mixture)\n\t{\n\t}\n\n\tpublic analyse():void\n\t{\n\t\tlet origins = this.mixture.getOrigins();\n\t\tlet compList = origins.map((origin) => this.mixture.getComponent(origin));\n\n\t\tfor (let n = 0; n < origins.length; n++)\n\t\t{\n\t\t\tlet note:NormMixtureNote = {origin: origins[n]};\n\n\t\t\t// stereocentres get expanded out\n\t\t\tlet comp = compList[n];\n\t\t\tif (comp.molfile && Vec.isBlank(comp.contents))\n\t\t\t{\n\t\t\t\tlet mol = MoleculeStream.readUnknown(comp.molfile);\n\t\t\t\tif (!mol) continue;\n\t\t\t\tlet stereo = this.enumerateStereo(mol);\n\t\t\t\tif (Vec.notBlank(stereo)) note.stereoEnum = stereo.map((mol) => MoleculeStream.writeMDLMOL(mol));\n\t\t\t}\n\n\t\t\tthis.notes.push(note);\n\t\t}\n\n\t\tlet childIndexes:number[][] = [];\n\t\tfor (let n = 0; n < origins.length; n++)\n\t\t{\n\t\t\tchildIndexes[n] = [];\n\t\t\tlet o = origins[n];\n\t\t\tfor (let i = n + 1; i < origins.length; i++)\n\t\t\t\tif (origins[i].length == o.length + 1 && Vec.equals(o, origins[i].slice(0, o.length))) childIndexes[n].push(i);\n\t\t}\n\n\t\t// conversion of \"absolute units\" to concentrations, where possible\n\t\tlet sumType = new Array(origins.length).fill(AbsType.None);\n\t\tlet sumAmount1 = Vec.numberArray(null, origins.length);\n\t\tlet sumAmount2 = Vec.numberArray(null, origins.length);\n\t\tlet sumError = Vec.numberArray(null, origins.length);\n\t\twhile (true)\n\t\t{\n\t\t\tlet modified = false;\n\n\t\t\tfor (let n = 0; n < origins.length; n++)\n\t\t\t{\n\t\t\t\tlet comp = compList[n], note = this.notes[n];\n\n\t\t\t\tif (sumType[n] == AbsType.None)\n\t\t\t\t{\n\t\t\t\t\t[sumType[n], sumAmount1[n], sumAmount2[n], sumError[n]] = this.toAbsoluteUnits(comp);\n\t\t\t\t\tif (sumType[n] != AbsType.None) modified = true;\n\t\t\t\t}\n\n\t\t\t\tif (Vec.isBlank(comp.contents)) continue;\n\n\t\t\t\t// if there's no absolute quantity presently available, see if we can add up the sub-components\n\t\t\t\tif (sumType[n] == AbsType.None)\n\t\t\t\t{\n\t\t\t\t\tlet amount = 0, childType = AbsType.None;\n\t\t\t\t\tfor (let i of childIndexes[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (sumType[i] == AbsType.None || sumAmount2[i] != null ||\n\t\t\t\t\t\t\t(childType != AbsType.None && sumType[i] != childType))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tchildType = AbsType.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchildType = sumType[i];\n\t\t\t\t\t\tamount += sumAmount1[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (childType != AbsType.None)\n\t\t\t\t\t{\n\t\t\t\t\t\tsumType[n] = childType;\n\t\t\t\t\t\tsumAmount1[n] = amount;\n\t\t\t\t\t\tmodified = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if current type is an absolute unit, see if all-but-one of the children have that same type\n\t\t\t\tif (sumType[n] != AbsType.None && childIndexes[n].length >= 2)\n\t\t\t\t{\n\t\t\t\t\tlet idxOne = -1, sum = 0;\n\t\t\t\t\tfor (let i of childIndexes[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (sumType[i] == AbsType.None)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (idxOne >= 0) {idxOne = -1; break;} // only one allowed\n\t\t\t\t\t\t\tidxOne = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (sumType[i] != sumType[n]) {idxOne = -1; break;} // can't be defined-but-different\n\t\t\t\t\t\telse if (sumAmount2[i] != null) {idxOne = -1; break;} // ranges disqualify\n\t\t\t\t\t\telse sum += sumAmount1[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (idxOne >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tsumType[idxOne] = sumType[n];\n\t\t\t\t\t\tsumAmount1[idxOne] = sumAmount1[n] - sum;\n\t\t\t\t\t\tmodified = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!modified) break;\n\t\t}\n\n\t\t// now use derived absolute units to infer concentration-types\n\t\tfor (let n = 0; n < origins.length; n++) if (sumType[n] != AbsType.None)\n\t\t{\n\t\t\tfor (let i of childIndexes[n]) if (sumType[i] != AbsType.None)\n\t\t\t{\n\t\t\t\tlet scale = 0, denom = sumAmount1[n], uri:string = null;\n\t\t\t\tif (sumType[i] == AbsType.Mass)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) [scale, uri] = [100 / denom, StandardUnits.pcWW];\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [100 / denom, StandardUnits.pcWV];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) {}\n\t\t\t\t}\n\t\t\t\telse if (sumType[i] == AbsType.Volume)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) {}\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [100 / denom, StandardUnits.pcVV];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) {}\n\t\t\t\t}\n\t\t\t\telse if (sumType[i] == AbsType.Moles)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) {}\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [1.0 / denom, StandardUnits.mol_L];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) [scale, uri] = [100 / denom, StandardUnits.pcMM];\n\t\t\t\t}\n\n\t\t\t\tif (uri != null)\n\t\t\t\t{\n\t\t\t\t\tif (sumAmount2[i] == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.notes[i].concQuantity = sumAmount1[i] * scale;\n\t\t\t\t\t\tthis.notes[i].concError = sumError[i] == null ? null : sumError[i] * scale;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.notes[i].concQuantity = [sumAmount1[i] * scale, sumAmount2[i] * scale];\n\t\t\t\t\t}\n\t\t\t\t\tthis.notes[i].concUnits = Units.uriToName(uri);\n\t\t\t\t\tthis.notes[i].concRelation = compList[n].relation;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic findNote(origin:number[]):NormMixtureNote\n\t{\n\t\tfor (let note of this.notes) if (Vec.equals(origin, note.origin)) return note;\n\t\treturn null;\n\t}\n\n\t// ------------ private methods ------------\n\n\t// if the given molecule has stereogenic centres (i.e. wavy bonds), enumerate them explicitly\n\tprivate enumerateStereo(mol:Molecule):Molecule[]\n\t{\n\t\tlet splitMolecule = (mol:Molecule):Molecule[] =>\n\t\t{\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++) if (mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN)\n\t\t\t{\n\t\t\t\tlet mol1 = mol.clone(), mol2 = mol.clone();\n\t\t\t\tif (mol.bondOrder(n) == 1)\n\t\t\t\t{\n\t\t\t\t\t// make up & down versions of the bond\n\t\t\t\t\tmol1.setBondType(n, Molecule.BONDTYPE_DECLINED);\n\t\t\t\t\tmol2.setBondType(n, Molecule.BONDTYPE_INCLINED);\n\t\t\t\t\treturn [mol1, mol2];\n\t\t\t\t}\n\t\t\t\telse if (mol.bondOrder(n) == 2)\n\t\t\t\t{\n\t\t\t\t\t// for a cis/trans double bond, use the sketcher algorithm to rotate it; if the rotation is rejected,\n\t\t\t\t\t// it'll just return the input molecule, with the stereolabel removed\n\t\t\t\t\tlet mol1 = mol.clone();\n\t\t\t\t\tmol1.setBondType(n, Molecule.BONDTYPE_NORMAL);\n\n\t\t\t\t\tlet mol2:Molecule = null;\n\t\t\t\t\tif (!mol.bondInRing(n))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet state:SketchState = {mol: mol1, currentAtom: 0, currentBond: n, selectedMask: null};\n\t\t\t\t\t\tlet activ = new MoleculeActivity(state, ActivityType.BondRotate, {});\n\t\t\t\t\t\tactiv.execute();\n\t\t\t\t\t\tif (!activ.errmsg && activ.output.mol) mol2 = activ.output.mol;\n\t\t\t\t\t}\n\t\t\t\t\treturn mol2 ? [mol1, mol2] : [mol1];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tlet list:Molecule[] = [mol];\n\t\tfor (let n = 0; n < list.length; n++)\n\t\t{\n\t\t\tlet emols = splitMolecule(list[n]);\n\t\t\tif (!emols) continue;\n\n\t\t\tlist[n] = emols[0];\n\t\t\tfor (let i = emols.length - 1; i >= 1; i--) list.splice(n + 1, 0, emols[i]);\n\t\t\tn--;\n\t\t}\n\n\t\treturn list.length > 1 ? list : null;\n\t}\n\n\t// converts the units within the component to \"absolute\" form, at a singular scale; return is type followed by\n\t// quantity1, quantity2, error (to capture ranges & errors, where applicable)\n\tprivate toAbsoluteUnits(comp:MixfileComponent):[AbsType, number, number, number]\n\t{\n\t\tif (!comp.units || comp.quantity == null /*|| typeof comp.quantity != 'number'*/) return [AbsType.None, null, null, null];\n\t\tlet uri = Units.nameToURI(comp.units);\n\t\tif (!uri) return [AbsType.None, null, null, null];\n\n\t\tlet scale = 0, type = AbsType.None;\n\n\t\tif (uri == StandardUnits.kg) [scale, type] = [1E3, AbsType.Mass];\n\t\telse if (uri == StandardUnits.g) [scale, type] = [1, AbsType.Mass];\n\t\telse if (uri == StandardUnits.mg) [scale, type] = [1E-3, AbsType.Mass];\n\t\telse if (uri == StandardUnits.ug) [scale, type] = [1E-6, AbsType.Mass];\n\t\telse if (uri == StandardUnits.ng) [scale, type] = [1E-9, AbsType.Mass];\n\t\telse if (uri == StandardUnits.L) [scale, type] = [1, AbsType.Volume];\n\t\telse if (uri == StandardUnits.mL) [scale, type] = [1E-3, AbsType.Volume];\n\t\telse if (uri == StandardUnits.uL) [scale, type] = [1E-6, AbsType.Volume];\n\t\telse if (uri == StandardUnits.nL) [scale, type] = [1E-9, AbsType.Volume];\n\t\telse if (uri == StandardUnits.mol) [scale, type] = [1, AbsType.Moles];\n\t\telse if (uri == StandardUnits.mmol) [scale, type] = [1E-3, AbsType.Moles];\n\t\telse if (uri == StandardUnits.umol) [scale, type] = [1E-6, AbsType.Moles];\n\t\telse if (uri == StandardUnits.nmol) [scale, type] = [1E-9, AbsType.Moles];\n\t\telse return [AbsType.None, null, null, null];\n\n\t\tif (typeof comp.quantity == 'number')\n\t\t{\n\t\t\tlet error = comp.error == null ? null : comp.error * scale;\n\t\t\treturn [type, (comp.quantity as number) * scale, null, error];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet [lo, hi] = comp.quantity as number[];\n\t\t\treturn [type, lo * scale, hi * scale, null];\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {deepClone} from 'webmolkit/util/util';\nimport {Mixfile, MIXFILE_VERSION, MixfileComponent} from './Mixfile';\nimport {Vec} from 'webmolkit/util/Vec';\n\n/*\n\tData container for mixtures: basically wraps the Mixfile interface, with additional functionality.\n\n\tNote that functionality should be assumed to be using shallow pointers to the underlying dictionary, unless\n\tspecified otherwise (e.g. clone).\n*/\n\nexport class Mixture\n{\n\t// ------------ public methods ------------\n\n\tconstructor(public mixfile?:Mixfile)\n\t{\n\t\tif (!mixfile) this.mixfile = {mixfileVersion: MIXFILE_VERSION};\n\t\telse if (!this.mixfile.mixfileVersion) this.mixfile.mixfileVersion = MIXFILE_VERSION;\n\t}\n\n\t// instantiates a new mixture object by casting a component into a root mixfile\n\tpublic static fromComponent(comp:MixfileComponent):Mixture\n\t{\n\t\tlet mixfile = deepClone(comp) as Mixfile;\n\t\tmixfile.mixfileVersion = MIXFILE_VERSION;\n\t\treturn new Mixture(mixfile);\n\t}\n\n\t// returns true if the mixture is blank\n\tpublic isEmpty():boolean\n\t{\n\t\treturn Mixture.isComponentEmpty(this.mixfile);\n\t}\n\tpublic static isComponentEmpty(comp:MixfileComponent):boolean\n\t{\n\t\tconst BITS = ['name', 'description', 'synonyms', 'formula', 'molfile', 'inchi', 'inchiKey', 'smiles',\n\t\t\t\t\t  'ratio', 'quantity', 'units', 'relation', 'identifiers', 'links'];\n\t\tfor (let bit of BITS) if ((comp as any)[bit] != null) return false;\n\t\tif (Vec.arrayLength(comp.contents) > 0) return false;\n\t\treturn true;\n\t}\n\n\t// returns true if there's something to put in the quantity section\n\tpublic static hasQuantity(comp:MixfileComponent):boolean\n\t{\n\t\treturn comp.quantity != null || comp.ratio != null;\n\t}\n\n\t// makes a deep copy of self\n\tpublic clone():Mixture\n\t{\n\t\treturn new Mixture(deepClone(this.mixfile));\n\t}\n\n\t// returns true if the two mixtures are identical at all parts of their branch structure\n\tpublic equals(other:Mixture):boolean\n\t{\n\t\tif (other == null) return false;\n\t\treturn this.recursiveEqual(this.mixfile, other.mixfile);\n\t}\n\n\t// unpacks a string into a mixture; throws an exception if anything went wrong\n\tpublic static deserialise(data:string):Mixture\n\t{\n\t\tlet mixfile = JSON.parse(data);\n\t\treturn new Mixture(mixfile);\n\t}\n\n\t// converts the entire underlying JSON mixfile into a prettyprinted string\n\tpublic serialise():string\n\t{\n\t\treturn Mixture.beautify(this.mixfile);\n\t}\n\n\t// likewise, for a sub-component\n\tpublic static serialiseComponent(comp:MixfileComponent):string\n\t{\n\t\treturn Mixture.beautify(comp);\n\t}\n\n\t// uses the \"origin vector\" to fetch a particular component; this is an array of indices, where [] indicates the root; its first\n\t// component is [0], the second child of its first component is [0,1], etc.\n\tpublic getComponent(origin:number[]):MixfileComponent\n\t{\n\t\tif (origin.length == 0) return this.mixfile;\n\t\tlet find:MixfileComponent = null, look = this.mixfile.contents || [];\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tfind = look[o];\n\t\t\tif (!find) return null;\n\t\t\tlook = find.contents || [];\n\t\t}\n\t\treturn find;\n\t}\n\tpublic getParentComponent(origin:number[]):MixfileComponent\n\t{\n\t\tif (origin.length == 0) return null;\n\t\torigin = origin.slice();\n\t\torigin.pop();\n\t\treturn this.getComponent(origin);\n\t}\n\n\t// returns a flat list of all components, i.e. without any hierarchy; these are all pointers to the originals, so\n\t// modifications can be made directly\n\tpublic getComponents():MixfileComponent[]\n\t{\n\t\tlet list:MixfileComponent[] = [], stack:MixfileComponent[] = [this.mixfile];\n\t\twhile (stack.length > 0)\n\t\t{\n\t\t\tlet comp = stack.shift();\n\t\t\tlist.push(comp);\n\t\t\tif (comp.contents) for (let sub of comp.contents) stack.push(sub);\n\t\t}\n\t\treturn list;\n\t}\n\n\t// returns an array that is equal in size to the number of nodes; each entry contains origin of that node\n\tpublic getOrigins():number[][]\n\t{\n\t\tlet origins:number[][] = [];\n\n\t\tlet nodeEnum = (origin:number[], comp:MixfileComponent):void =>\n\t\t{\n\t\t\torigins.push(origin);\n\t\t\tfor (let n = 0; n < Vec.arrayLength(comp.contents); n++) nodeEnum(Vec.append(origin, n), comp.contents[n]);\n\t\t};\n\n\t\tnodeEnum([], this.mixfile);\n\t\treturn origins;\n\t}\n\n\t// replaces a component at a given position; returns true if the new component was different to the old one\n\tpublic setComponent(origin:number[], comp:MixfileComponent):boolean\n\t{\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\n\t\t// copy over the dictionary entries in 'comp', noting if anything changed\n\t\tlet modified = false;\n\t\tfor (let k in comp)\n\t\t{\n\t\t\tlet v = (comp as any)[k];\n\t\t\tif (v != (find as any)[k])\n\t\t\t{\n\t\t\t\t(find as any)[k] = v;\n\t\t\t\tmodified = true;\n\t\t\t}\n\t\t}\n\n\t\t// cleanup by removing explicit nulls\n\t\tObject.keys(find).forEach((key:string) => {if ((find as any)[key] == null) delete (find as any)[key];});\n\n\t\treturn modified;\n\t}\n\n\t// deletes the indicated component, and collapses any child nodes into its own position (as opposed to just deleting\n\t// them too)\n\tpublic deleteComponent(origin:number[]):void\n\t{\n\t\tif (origin.length == 0) return; // can't delete the whole thing\n\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents, parent = look;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tparent = look;\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\t\tlet idx = origin[origin.length - 1];\n\t\tparent.splice(idx, 1);\n\t\tif (look) for (let c of look) parent.splice(idx++, 0, c);\n\t}\n\n\t// insert a new component \"above\" the existing one, and handle the reparenting\n\tpublic prependBefore(origin:number[], comp:MixfileComponent):void\n\t{\n\t\t// slightly different when prepending before the root element\n\t\tif (origin.length == 0)\n\t\t{\n\t\t\tlet mixfile = this.mixfile;\n\t\t\tlet subcomp:MixfileComponent = {};\n\t\t\tconst SKIP = ['mixfileVersion', 'contents'];\n\t\t\tfor (let key in (mixfile as any)) if (!SKIP.includes(key))\n\t\t\t{\n\t\t\t\t(subcomp as any)[key] = (mixfile as any)[key];\n\t\t\t\tdelete (mixfile as any)[key];\n\t\t\t}\n\t\t\tmixfile.contents = [subcomp];\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents, parent = look;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tparent = look;\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\t\tlet idx = origin[origin.length - 1];\n\t\tparent[idx] = comp;\n\t\tcomp.contents = [find];\n\t}\n\n\t// takes an origin vector and splits it into {parent origin} and {child index}; returns null on both counts if this is the root node\n\tpublic static splitOrigin(origin:number[]):[number[], number]\n\t{\n\t\tif (origin.length == 0) return [null, null];\n\t\tlet parent = origin.slice(0);\n\t\tlet idx = parent.splice(origin.length - 1, 1)[0];\n\t\treturn [parent, idx];\n\t}\n\n\t// makes a JSON object into a nicely formatted string for human readability\n\tpublic static beautify(json:any):string\n\t{\n\t\tlet lines = JSON.stringify(json, null, 4).split('\\n');\n\t\tlet regex = /^(\\s*\\\"\\w+\\\": )([\\[\\{].*)$/, regpad = /^(\\s*)/;\n\t\tfor (let n = 0; n < lines.length; n++)\n\t\t{\n\t\t\tlet match = regex.exec(lines[n]);\n\t\t\tif (!match) continue;\n\t\t\tlet padding = regpad.exec(lines[n]);\n\t\t\tlines[n] = match[1] + '\\n' + padding[1] + match[2];\n\t\t}\n\t\treturn lines.join('\\n');\n\t}\n\n\t// ------------ private methods ------------\n\n\t// returns true if this component, and all sub-components, are equal\n\tprivate recursiveEqual(comp1:MixfileComponent, comp2:MixfileComponent):boolean\n\t{\n\t\tlet dict1:any = comp1, dict2:any = comp2;\n\t\t/*let keys1 = Object.keys(dict1), keys2 = Object.keys(dict2);\n\t\tlet i:number;\n\t\tif ((i = keys1.indexOf('contents')) >= 0) keys1.splice(i, 1);\n\t\tif ((i = keys2.indexOf('contents')) >= 0) keys2.splice(i, 1);*/\n\t\tlet keys1:string[] = [], keys2:string[] = [];\n\t\tfor (let k in dict1) if (k != 'contents' && dict1[k] != null) keys1.push(k);\n\t\tfor (let k in dict2) if (k != 'contents' && dict2[k] != null) keys2.push(k);\n\t\tkeys1.sort();\n\t\tkeys2.sort();\n\t\tif (!Vec.equals(keys1, keys2)) return false; // different keys (less contents) is a dealbreaker\n\t\tfor (let k of keys1)\n\t\t{\n\t\t\tlet v1 = dict1[k], v2 = dict2[k];\n\t\t\tif (Array.isArray(v1) && Array.isArray(v2))\n\t\t\t{\n\t\t\t\tif (!Vec.equals(v1, v2)) return false;\n\t\t\t}\n\t\t\telse // assume scalar\n\t\t\t{\n\t\t\t\tif (v1 != v2) return false;\n\t\t\t}\n\t\t}\n\n\t\tlet len = Vec.arrayLength(comp1.contents);\n\t\tif (len != Vec.arrayLength(comp2.contents)) return false;\n\t\tfor (let n = 0; n < len; n++) if (!this.recursiveEqual(comp1.contents[n], comp2.contents[n])) return false;\n\n\t\treturn true;\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\n/*\n\tThe Mixfile is a raw definition of the contents of a mixture, which maps directly to the JSON datastructure\n\tthat holds the serialised content. For keeping an operable mixture instance, see the Mixture class.\n*/\n\nexport const MIXFILE_VERSION = 1.00; // version number to use for newly created instances\n\nexport type MixfileMetadatum = string | (string | number)[];\n\nexport interface Mixfile extends MixfileComponent\n{\n\tmixfileVersion:number;\n}\n\nexport interface MixfileComponent\n{\n\tname?:string;\n\tdescription?:string;\n\tsynonyms?:string[];\n\n\t// molecular specification: none of them are mandatory, but if more than one is specified, they must refer to the same species, \n\t// to the extent that the format allows; InChI strings are expected to be standard, while SMILES are not\n\tformula?:string;\n\tmolfile?:string;\n\tinchi?:string;\n\tinchiKey?:string;\n\tsmiles?:string;\n\n\t// if the concentration is known, then these fields should be filled out as appropriate; if the concentration is a ratio,\n\t// it is relative to all of the components within the same branch\n\tquantity?:number | number[]; // a concentration numeric which is associated with the units below (two numbers in case of a range)\n\terror?:number; // optional standard error (applies to quantity when it's a scalar)\n\tratio?:number[]; // a ratio, specified as [numerator, denominator]\n\tunits?:string; // units for quantity (e.g. %, mol/L, g, etc.)\n\trelation?:string; // optional modifier when applied to quantity (e.g. >, <, ~)\n\n\t// identifiers that map the substance to external databases (e.g. PubChem, ChemSpider, CAS, etc.); identifiers are ID numbers, and\n\t// the meaning is implied by the context; links should be resolvable URLs, which are an alternative way of locating external\n\t// resources; in some cases where there are multiple identifiers, the value should be specified as an array\n\tidentifiers?:Record<string, string | string[]>;\n\tlinks?:Record<string, string | string[]>;\n\n\t// metadata starts with an IRI that defines the core concept, and then may be followed by scalar data and/or other IRIs; this allows\n\t// discrete facts to be asserted about the component, as well as numeric values such as physical properties and their units\n\tmetadata?:MixfileMetadatum[];\n\n\t// subcomponents: if this is a discrete molecular entity, then there will be none; usually there are either 0 or 2-or-more; in cases\n\t// where there are any subcomponents, any of the properties above apply to all of these subcomponents collectively\n\tcontents?:MixfileComponent[];\n}\n\n// useful for cleaning up external JSON content\nexport const MIXFILE_COMPONENT_FIELDS =\n[\n\t'name', 'description', 'synonyms', 'formula', 'molfile', 'inchi', 'inchiKey', 'smiles',\n\t'ratio', 'quantity', 'units', 'relation', 'identifiers', 'links', 'contents'\n];\nexport const MIXFILE_ROOT_FIELDS =\n[\n\t'mixfileVersion', ...MIXFILE_COMPONENT_FIELDS\n];\n\n/* orignal example of what the format might look like (1st draft):\n{\n\t\"mixture\": \"1.0 M lithium diisopropyl amide in THF/hexanes\",\n\t\"contents\":\n\t[\n\t\t{\n\t\t\t\"name\": \"lithium diisopropylamide\",\n\t\t\t\"synonyms\": [\"LDA\", \"(iPr)2N.Li\"],\n\t\t\t\"formula\": \"C6H14LiN\",\n\t\t\t\"pubchem\": \"2724682\",\n\t\t\t\"chemspider\": \"2006804\",\n\t\t\t\"inchi\": \"InChI=1S/C6H14N.Li/c1-5(2)7-6(3)4;/h5-6H,1-4H3;/q-1;+1\",\n\t\t\t\"smiles\": \"[Li+].CC(C)[N-]C(C)C\",\n\t\t\t\"molfile\": \"\\nOpenMolecule\\n\\n  8  7  0  0  0  0  0  0  0  0999 V2000\\n    0.0000    0.0000    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\\n    1.5000    0.0000    0.0000 Li  0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.7500    1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.7500   -1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.0000    2.5981    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -2.2500    1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n    0.0000   -2.5981    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -2.2500   -1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n  1  2  1  0  0  0  0\\n  1  3  1  0  0  0  0\\n  1  4  1  0  0  0  0\\n  3  5  1  0  0  0  0\\n  3  6  1  0  0  0  0\\n  4  7  1  0  0  0  0\\n  4  8  1  0  0  0  0\\nM  END\\n\",\n\t\t\t\"quantity\": 1.0,\n\t\t\t\"units\": \"mol/L\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"solvent\",\n\t\t\t\"contents\":\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"tetrahydrofuran\",\n\t\t\t\t\t\"synonyms\": [\"THF\"],\n\t\t\t\t\t\"formula\": \"C4H8O\",\n\t\t\t\t\t\"pubchem\": \"8028\",\n\t\t\t\t\t\"chemspider\": \"7737\",\n\t\t\t\t\t\"inchi\": \"InChI=1S/C4H8O/c1-2-4-5-3-1/h1-4H2\",\n\t\t\t\t\t\"smiles\": \"C1CCOC1\",\n\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\"fraction\": [1, 8]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"group\": \"hexanes\",\n\t\t\t\t\t\"fraction\": [7, 8],\n\t\t\t\t\t\"contents\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"n-hexane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"8058\",\n\t\t\t\t\t\t\t\"chemspider\": \"7767\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-3-5-6-4-2/h3-6H2,1-2H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCCCCC\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [50, 70]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"methylcyclopentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7296\",\n\t\t\t\t\t\t\t\"chemspider\": \"7024\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H12/c1-6-4-2-3-5-6/h6H,2-5H2,1H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CC1CCCC1\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [10, 20]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"2-methypentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7892\",\n\t\t\t\t\t\t\t\"chemspider\": \"7604\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-4-5-6(2)3/h6H,4-5H2,1-3H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCCC(C)C\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [1, 5]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"3-methylpentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7282\",\n\t\t\t\t\t\t\t\"chemspider\": \"7010\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-4-6(3)5-2/h6H,4-5H2,1-3H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCC(C)CC\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [1, 5]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"other hexanes\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n*/\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {deepClone} from 'webmolkit/util/util';\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {MoleculeStream} from 'webmolkit/io/MoleculeStream';\nimport {MolUtil} from 'webmolkit/mol/MolUtil';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Mixfile, MixfileComponent} from './Mixfile';\nimport {NormMixture, NormMixtureNote} from './NormMixture';\nimport {Mixture} from './Mixture';\nimport {InChIDelegate} from './InChIDelegate';\nimport {Units} from './Units';\n\n// quick implementation of CRC hash codes\nlet crc_table:number[] = [];\nfunction make_crc_table():void\n{\n\tif (crc_table.length > 0) return;\n\tfor (let n = 0; n < 256; n++)\n\t{\n\t\tlet c = n;\n\t\tfor (let i = 0; i < 8; i++) if ((c & 1) != 0) c = 0xEDB88320 ^ (c >>> 1); else c = (c >>> 1);\n\t\tcrc_table.push(c);\n\t}\n}\nconst BOOT_CRC = 0xFFFFFFFF;\nfunction start_crc():number {return BOOT_CRC;}\nfunction feed_crc(crc:number, byte:number):number\n{\n\tlet idx = (crc ^ byte) & 0xFF;\n\treturn crc_table[idx] ^ (crc >>> 8);\n}\nfunction end_crc(crc:number):number {return crc ^ BOOT_CRC;}\n\n// work-in-progress placeholder for the recursive MInChI assembler\ninterface MInChIBuilder\n{\n\tlayerN:string; // N-layer is the hierarchical form\n\tlayerG:string; // G-layer has the concentrations\n}\n\n// for marking the segments of the outgoing MInChI string according to category\nexport enum MInChISegment\n{\n\tNone = 0,\n\tHeader, // the initial recognition string\n\tComponent, // the components (of which there can be multiple contiguous instances)\n\tHierarchy, // the /n layer\n\tConcentration, // the /g layer\n}\n\n// augmented version of a component used to stash some MInChI-specific derived content\ninterface MInChIComponent extends MixfileComponent\n{\n\tinchiFrag:string;\n\tuseRatio:number;\n\tnote:NormMixtureNote;\n}\n\nconst MINCHI_VERSION = 'MInChI=0.99.1S';\n\n/*\n\tFormulates a MInChI string out of the given mixture.\n*/\n\nexport class ExportMInChI\n{\n\tprivate mixture:Mixture;\n\tprivate norm:NormMixture;\n\tprivate minchi = '?';\n\tprivate segment:MInChISegment[] = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(mixfile:Mixfile, private inchi:InChIDelegate)\n\t{\n\t\tthis.mixture = new Mixture(deepClone(mixfile));\n\t\tthis.norm = new NormMixture(this.mixture);\n\t\tthis.norm.analyse();\n\t}\n\n\t// this should generally be called first: any component that has a structure but not an InChI string gets one calculated,\n\t// which presumes that the external environment has been configured to allow this; returns true if anything was done, i.e.\n\t// the parameter mixture was modified; note that if any components have an InChI that is wrong, this will be believed\n\tpublic async fillInChI():Promise<boolean>\n\t{\n\t\tlet modified = false;\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile || comp.inchi) continue;\n\t\t\tlet mol:Molecule = null;\n\t\t\ttry {mol = MoleculeStream.readUnknown(comp.molfile);}\n\t\t\tcatch (e) {continue;} // silent failure if it's an invalid molecule\n\t\t\tif (MolUtil.isBlank(mol)) continue;\n\t\t\tlet {inchi, inchiKey} = await this.inchi.generate(mol);\n\t\t\tcomp.inchi = inchi;\n\t\t\tcomp.inchiKey = inchiKey;\n\t\t\tmodified = true;\n\t\t}\n\t\treturn modified;\n\t}\n\n\t// assembles the MInChI string: once this has completed, the result is available\n\tpublic formulate():void\n\t{\n\t\tlet modmix = this.mixture.clone();\n\t\t//this.sortContents(sortmix.contents);\n\n\t\tfor (let origin of modmix.getOrigins())\n\t\t{\n\t\t\tlet note = this.norm.findNote(origin);\n\t\t\tif (note) (modmix.getComponent(origin) as MInChIComponent).note = note;\n\t\t}\n\n\t\t// special deal: any component with >2 mixtures that has a consistent ratio definition needs to be marked\n\t\t// at the parent-component level\n\t\tskip: for (let comp of modmix.getComponents()) if (Vec.len(comp.contents) >= 2)\n\t\t{\n\t\t\tif (Vec.len(comp.contents[0].ratio) != 2) continue;\n\t\t\tlet [numer, denom] = comp.contents[0].ratio;\n\t\t\tfor (let n = 1; n < comp.contents.length; n++)\n\t\t\t{\n\t\t\t\tlet ratio = comp.contents[n].ratio;\n\t\t\t\tif (Vec.len(ratio) != 2 || ratio[1] != denom) continue skip;\n\t\t\t\tnumer += ratio[0];\n\t\t\t}\n\t\t\tif (numer != denom) continue;\n\t\t\tfor (let sub of comp.contents) (sub as MInChIComponent).useRatio = sub.ratio[0];\n\t\t}\n\n\t\t// assemble the InChI fragments - which is sorted and unique and devoid of blanks; same for \"placenames\", which are\n\t\t// terminal components that have name and concentration information, but no InChI\n\t\tlet inchiList:string[] = [];\n\t\tconst PFX = 'InChI=1S/'; // if it doesn't start with this, we don't consider it a valid InChI\n\t\tfor (let origin of modmix.getOrigins())\n\t\t{\n\t\t\tlet mcomp = modmix.getComponent(origin) as MInChIComponent;\n\t\t\tif (Vec.len(mcomp.contents) > 0) continue; // leaf nodes only need apply\n\n\t\t\tmcomp.inchiFrag = mcomp.inchi || '';\n\t\t\tif (mcomp.inchiFrag.startsWith(PFX)) mcomp.inchiFrag = mcomp.inchiFrag.substring(PFX.length);\n\t\t\tif (!inchiList.includes(mcomp.inchiFrag)) inchiList.push(mcomp.inchiFrag);\n\t\t}\n\t\tinchiList.sort();\n\n\t\tlet root = modmix.mixfile as any as MInChIComponent;\n\t\tlet builder = this.assembleContents(root, inchiList);\n\n\t\tthis.minchi = '';\n\t\tthis.segment = [];\n\n\t\tlet appendSegment = (str:string, type:MInChISegment):void =>\n\t\t{\n\t\t\tthis.minchi += str;\n\t\t\tfor (let n = 0; n < str.length; n++) this.segment.push(type);\n\t\t};\n\n\t\tappendSegment(MINCHI_VERSION, MInChISegment.Header);\n\t\tappendSegment('/', MInChISegment.None);\n\t\tfor (let n = 0; n < inchiList.length; n++)\n\t\t{\n\t\t\tif (n > 0) appendSegment('&', MInChISegment.None);\n\t\t\tappendSegment(inchiList[n], MInChISegment.Component);\n\t\t}\n\t\tappendSegment('/', MInChISegment.None);\n\t\tappendSegment('n' + builder.layerN, MInChISegment.Hierarchy);\n\t\tappendSegment('/', MInChISegment.None);\n\t\tappendSegment('g' + builder.layerG, MInChISegment.Concentration);\n\t}\n\n\t// returns the MInChI notationstring formulated as above\n\tpublic getResult():string\n\t{\n\t\treturn this.minchi;\n\t}\n\n\t// return the segmentation values that mark the type for each character (corresponding to the notation string)\n\tpublic getSegment():MInChISegment[]\n\t{\n\t\treturn this.segment;\n\t}\n\n\t// prepares a \"hash key\" for the mixture: this is basically a sorted unique list of the InChI keys for the structures; it has no concentration or hierarchy\n\t// information because these things are not canonical\n\tpublic makeLongHashKey():string\n\t{\n\t\tlet bits:string[] = [];\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile) continue;\n\t\t\tif (!comp.inchiKey) throw 'Mixture has InChIKey(s) missing';\n\t\t\tif (!comp.inchiKey.startsWith('InChIKey=')) throw 'Invalid InChI key: ' + comp.inchiKey;\n\t\t\tbits.push(comp.inchiKey.substring(9));\n\t\t}\n\t\tbits = Vec.sortedUnique(bits);\n\t\treturn 'Long-MInChIKey=' + bits.join(';');\n\t}\n\n\t// similar to above except fixed length and quite short\n\tpublic makeShortHashKey():string\n\t{\n\t\tmake_crc_table();\n\t\tconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\t\tconst NCRC = 4;\n\t\tlet crclist:number[] = [], pos = 0;\n\t\tfor (let n = 0; n < NCRC; n++) crclist.push(start_crc());\n\n\t\tlet feedCharacter = (letter:string) =>\n\t\t{\n\t\t\tlet idx = LETTERS.indexOf(letter);\n\t\t\tif (idx < 0) return;\n\t\t\tcrclist[pos] = feed_crc(crclist[pos], idx);\n\t\t\tpos = pos < NCRC - 1 ? pos + 1 : 0;\n\t\t};\n\n\t\tlet bits:string[] = [];\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile) continue;\n\t\t\tif (!comp.inchiKey) throw 'Mixture has InChIKey(s) missing';\n\t\t\tif (!comp.inchiKey.startsWith('InChIKey=')) throw 'Invalid InChI key: ' + comp.inchiKey;\n\t\t\tbits.push(comp.inchiKey.substring(9));\n\t\t}\n\t\tfor (let bit of Vec.sortedUnique(bits)) for (let letter of bit)\n\t\t{\n\t\t\tfeedCharacter(letter);\n\t\t}\n\n\t\tlet key = 'Short-MInChIKey=';\n\n\t\tfor (let crc of crclist)\n\t\t{\n\t\t\tcrc = end_crc(crc) >>> 1; // clear the least significant bit and the sign as well\n\t\t\tfor (let n = 0; n < 7; n++)\n\t\t\t{\n\t\t\t\tlet idx = crc % 26;\n\t\t\t\tkey += LETTERS[idx];\n\t\t\t\tcrc = Math.trunc(crc / 26);\n\t\t\t}\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t// turns a concentration into a suitable precursor string, or null otherwise\n\tpublic static formatConcentration(quantity:number | number[], error:number, useRatio:number, units:string, relation:string):string\n\t{\n\t\tlet mantissa = (value:number, exp:number):string => Math.round(value * Math.pow(10, -exp)).toString();\n\n\t\t// check for special deal: the \"useRatio\" property is defined if everything in this peer group has a ratio with\n\t\t// the same denominator and they add up correctly; when this isn't the case, it will fall through and convert to\n\t\t// a percentage\n\t\tif (useRatio != null)\n\t\t{\n\t\t\tlet exp = this.determineExponent([useRatio], 4);\n\t\t\treturn mantissa(useRatio, exp) + 'rt' + exp;\n\t\t}\n\n\t\t/*if (comp.ratio && comp.ratio.length >= 2)\n\t\t{\n\t\t\tlet numer = comp.ratio[0], denom = comp.ratio[1];\n\t\t\tif (!(denom > 0)) return null;\n\t\t\tlet value = 100 * numer / denom, exp = this.determineExponent([value], 4);\n\t\t\treturn mantissa(value, exp) + 'pp' + exp;\n\t\t}*/\n\n\t\tif (quantity == null || units == null) return null;\n\n\t\t// special deal (maybe temporary): units that are written with common names that map to a URI are converted automatically\n\t\tlet unitURI = units;\n\t\tif (!unitURI.startsWith('http://')) unitURI = Units.nameToURI(unitURI);\n\t\tif (!unitURI) return;\n\n\t\t// TODO: maybe another special deal for absolute weight/volume/mole quantities - convert them into ratios, to the extent that's\n\t\t// possible... maybe approximating where necessary\n\n\t\tlet bits:string[] = [];\n\n\t\tif (relation != null) bits.push(relation);\n\n\t\tlet values:number[] = typeof quantity == 'number' ? [quantity as number] : quantity;\n\t\tif (error != null) values.push(error);\n\n\t\tlet [mnemonic, scaled] = Units.convertToMInChI(unitURI, values);\n\t\tif (!mnemonic) return;\n\n\t\tlet exp = this.determineExponent(scaled, 4);\n\n\t\tbits.push(mantissa(scaled[0], exp));\n\t\tif (scaled.length > 1)\n\t\t{\n\t\t\tif (Array.isArray(quantity)) bits.push(':'); else bits.push('?');\n\t\t\tbits.push(mantissa(scaled[1], exp));\n\t\t}\n\t\tbits.push(mnemonic);\n\t\tbits.push(exp.toString());\n\n\t\treturn bits.join('');\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate assembleContents(mcomp:MInChIComponent, inchiList:string[]):MInChIBuilder\n\t{\n\t\tlet tree:MInChIBuilder = {layerN: '', layerG: ''};\n\t\tlet builder:MInChIBuilder = {layerN: '', layerG: ''};\n\n\t\t// emit sub-contents recursively\n\t\tif (Vec.len(mcomp.contents) > 0)\n\t\t{\n\t\t\tif (mcomp.contents != null) for (let subComp of mcomp.contents)\n\t\t\t{\n\t\t\t\tlet subTree = this.assembleContents(subComp as MInChIComponent, inchiList);\n\t\t\t\t//if (!subTree.layerN && !subTree.layerG) continue;\n\t\t\t\tif (tree.layerN.length > 0 || tree.layerG.length > 0)\n\t\t\t\t{\n\t\t\t\t\ttree.layerN += '&';\n\t\t\t\t\ttree.layerG += '&';\n\t\t\t\t}\n\t\t\t\ttree.layerN += subTree.layerN;\n\t\t\t\ttree.layerG += subTree.layerG;\n\t\t\t}\n\t\t}\n\n\t\t// append the current information\n\t\tlet idx = mcomp.inchiFrag != null ? inchiList.indexOf(mcomp.inchiFrag) + 1 : 0;\n\t\tif (idx > 0) builder.layerN += idx.toString();\n\n\t\tlet conc = ExportMInChI.formatConcentration(mcomp.quantity, mcomp.error, mcomp.useRatio, mcomp.units, mcomp.relation);\n\t\tif (!conc && mcomp.note)\n\t\t{\n\t\t\tlet {concQuantity, concError, concUnits, concRelation} = mcomp.note;\n\t\t\tconc = ExportMInChI.formatConcentration(concQuantity, concError, null, concUnits, concRelation);\n\t\t}\n\t\tif (conc) builder.layerG += conc;\n\n\t\tif (tree.layerN.length > 0 || tree.layerG.length > 0)\n\t\t{\n\t\t\tbuilder.layerN = '{' + tree.layerN + '}' + builder.layerN;\n\t\t\tbuilder.layerG = '{' + tree.layerG + '}' + builder.layerG;\n\t\t\tthis.shaveBeard(builder);\n\t\t}\n\n\t\treturn builder;\n\t}\n\n\t// removes unnecessary nesting stubble\n\tprivate shaveBeard(builder:MInChIBuilder):void\n\t{\n\t\twhile (builder.layerN.startsWith('{{') && builder.layerN.endsWith('}}') &&\n\t\t\t   builder.layerG.startsWith('{{') && builder.layerG.endsWith('}}'))\n\t\t{\n\t\t\tbuilder.layerN = builder.layerN.substring(1, builder.layerN.length - 1);\n\t\t\tbuilder.layerG = builder.layerG.substring(1, builder.layerG.length - 1);\n\t\t}\n\t}\n\n\t// given a positive number, gives out an appropriate exponent to scale it to, such that the mantissa can be an integer that accommodates\n\t// the required number of significant figures\n\tprivate static determineExponent(values:number[], sigfig:number):number\n\t{\n\t\tlet minval = Number.POSITIVE_INFINITY;\n\t\tfor (let v of values) minval = Math.min(minval, Math.abs(v));\n\n\t\tif (!Number.isFinite(minval) || Number.isNaN(minval) || minval <= 0) return 0;\n\n\t\tlet exp = Math.round(Math.log10(minval)) - sigfig;\n\t\t//let man = Math.round(minval * Math.pow(10, -exp));\n\n\t\tlet str:string[] = [];\n\t\tfor (let v of values) str.push(Math.round(v * Math.pow(10, -exp)).toString());\n\n\t\touter: while (true)\n\t\t{\n\t\t\tfor (let n = 0; n < str.length; n++)\n\t\t\t{\n\t\t\t\tif (!str[n].endsWith('0')) break outer;\n\t\t\t\tstr[n] = str[n].substring(0, str[n].length - 1);\n\t\t\t}\n\t\t\texp++;\n\t\t}\n\n\t\treturn exp;\n\t}\n}\n\n","import { FontData } from './FontData';\nexport class OutlineMeasurement {\n    constructor(offsetX, offsetY, pointScale) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.pointScale = pointScale;\n        this.invScale = 1 / pointScale;\n    }\n    scale() { return this.pointScale; }\n    angToX(ax) { return ax * this.pointScale + this.offsetX; }\n    angToY(ay) { return ay * -this.pointScale + this.offsetY; }\n    xToAng(px) { return (px - this.offsetX) * this.invScale; }\n    yToAng(py) { return (py - this.offsetY) * -this.invScale; }\n    yIsUp() { return false; }\n    measureText(str, fontSize) { return FontData.main.measureText(str, fontSize); }\n}\n//# sourceMappingURL=ArrangeMeasurement.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Mixfile} from './Mixfile';\nimport {Mixture} from './Mixture';\n\n/*\n\tCollection of mixtures: convenience methods for handling an array thereof, including serialisation.\n\n\tMost of the methods that fetch or modify the mixture content one item at a time make deep clones, so it is safe to\n\tassume that there are no dangling pointers. Exceptions include the constructor, bulk modifications, and methods marked\n\tas providing direct access.\n*/\n\nexport class MixtureCollection\n{\n\tprivate mixtures:Mixture[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor(mixtures?:Mixture[])\n\t{\n\t\tif (mixtures) this.mixtures = mixtures.slice(0);\n\t}\n\n\tpublic get count():number\n\t{\n\t\treturn this.mixtures.length;\n\t}\n\tpublic getMixture(idx:number):Mixture\n\t{\n\t\treturn this.mixtures[idx].clone();\n\t}\n\tpublic getMixtureDirect(idx:number):Mixture\n\t{\n\t\treturn this.mixtures[idx];\n\t}\n\tpublic setMixture(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures[idx] = mixture.clone();\n\t}\n\tpublic setMixtureDirect(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures[idx] = mixture;\n\t}\n\tpublic deleteMixture(idx:number):void\n\t{\n\t\tthis.mixtures.splice(idx, 1);\n\t}\n\tpublic appendMixture(mixture:Mixture):number\n\t{\n\t\tthis.mixtures.push(mixture.clone());\n\t\treturn this.mixtures.length - 1;\n\t}\n\tpublic appendMixtureDirect(mixture:Mixture):number\n\t{\n\t\tthis.mixtures.push(mixture);\n\t\treturn this.mixtures.length - 1;\n\t}\n\tpublic appendCollection(collection:MixtureCollection):void\n\t{\n\t\tthis.mixtures = this.mixtures.concat(collection.mixtures);\n\t}\n\tpublic insertMixture(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures.splice(idx, 0, mixture.clone());\n\t}\n\tpublic swapMixtures(idx1:number, idx2:number):void\n\t{\n\t\tlet [m1, m2] = [this.mixtures[idx1], this.mixtures[idx2]];\n\t\tthis.mixtures[idx1] = m2;\n\t\tthis.mixtures[idx2] = m1;\n\t}\n\n\t// unpacks a string into a mixture; throws an exception if anything went wrong\n\tpublic static deserialise(data:string):MixtureCollection\n\t{\n\t\tlet list = JSON.parse(data);\n\t\tif (!Array.isArray(list)) throw 'Input content is not a JSON array.';\n\t\tlet mixtures:Mixture[] = [];\n\t\tfor (let mixfile of list) mixtures.push(new Mixture(mixfile));\n\t\treturn new MixtureCollection(mixtures);\n\t}\n\n\t// converts the entire underlying JSON mixfile into a prettyprinted string; note the optional beautification parameter:\n\t// if not specified, small collections will get nice whitespace, whereas large ones will be densely packed for efficiency\n\tpublic serialise(beautify?:boolean):string\n\t{\n\t\tlet list:Mixfile[] = [];\n\t\tfor (let mixture of this.mixtures) list.push(mixture.mixfile);\n\t\t//return beautify || list.length <= 1000 ? Mixture.beautify(list) : JSON.stringify(list);\n\t\tif (beautify || list.length <= 100) return Mixture.beautify(list);\n\t\t\n\t\tlet lines = list.map((mixfile) => JSON.stringify(mixfile));\n\t\treturn '[\\n    ' + lines.join(',\\n    ') + '\\n]\\n';\n\t}\n\n\t// ------------ private methods ------------\n\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {DrawMixture} from '../mixture/DrawMixture';\nimport {ExportMInChI, MInChISegment} from '../mixture/ExportMInChI';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {escapeHTML} from 'webmolkit/util/util';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport {MixtureCollection} from '../mixture/MixtureCollection';\nimport {InChI} from '../nodejs/InChI';\n\n/*\n\tLoads a mixture collection and emits it as visualisable HTML.\n*/\n\nexport class RenderHTML\n{\n\tconstructor(private htmlFile:string, private withMInChI:boolean)\n\t{\n\t}\n\n\tpublic async exec():Promise<void>\n\t{\n\t\tlet content:string;\n\t\ttry {content = fs.readFileSync(this.htmlFile).toString();}\n\t\tcatch (ex) {throw 'Unable to read file ' + this.htmlFile + ': ' + ex;}\n\n\t\tlet mixlist = MixtureCollection.deserialise(content);\n\t\tif (mixlist.count == 0) throw 'Nothing to render';\n\n\t\tlet emitln = (line:string):void => console.log(line);\n\t\tlet emit = (txt:string):void => {process.stdout.write(txt);};\n\n\t\temitln('<html>');\n\t\temitln('<style>');\n\t\temitln('table {border-collapse: collapse;}');\n\t\temitln('td {border: 1px solid black; padding: 0.2em;}');\n\t\temitln('.header {background-color: #FFC0C0;}');\n\t\temitln('.component {background-color: #C0C0FF;}');\n\t\temitln('.hierarchy {background-color: #E0E080;}');\n\t\temitln('.concentration {background-color: #80E080;}');\n\t\temitln('</style>');\n\t\t\n\t\temitln('<body><table>');\n\n\t\tlet policy = RenderPolicy.defaultColourOnWhite(15);\n\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\n\t\tfor (let n = 0; n < mixlist.count; n++)\n\t\t{\n\t\t\tlet mixture = mixlist.getMixtureDirect(n);\n\n\t\t\temitln('<tr>');\n\t\t\temitln(`<td>${n + 1}</td>`);\n\n\t\t\tlet layout = new ArrangeMixture(mixture, measure, policy);\n\t\t\tlayout.arrange();\n\n\t\t\tlet gfx = new MetaVector();\n\t\t\tlet draw = new DrawMixture(layout, gfx);\n\t\t\tdraw.draw();\n\t\t\tgfx.normalise();\n\n\t\t\temitln('<td>');\n\t\t\temitln(gfx.createSVG());\n\t\t\temitln('</td>');\n\n\t\t\tif (this.withMInChI)\n\t\t\t{\n\t\t\t\tlet maker = new ExportMInChI(mixture.mixfile, new InChI());\n\t\t\t\tawait maker.fillInChI();\n\t\t\t\tmaker.formulate();\n\t\t\t\t//let minchi = creator.getResult();\n\t\t\t\t//emitln('<td><pre>' + escapeHTML(minchi) + '</pre></td>');\n\n\t\t\t\temit('<td><pre>');\n\t\t\t\tlet minchi = maker.getResult(), segment = maker.getSegment();\n\t\t\t\tfor (let n = 0; n < minchi.length; n++)\n\t\t\t\t{\n\t\t\t\t\temit('<span');\n\t\t\t\t\tif (segment[n] == MInChISegment.Header) emit(' class=\"header\"');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Component) emit(' class=\"component\"');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Hierarchy) emit(' class=\"hierarchy\"');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Concentration) emit(' class=\"concentration\"');\n\t\t\t\t\temit('>' + escapeHTML(minchi[n]) + '</span>');\n\t\t\t\t}\n\t\t\t\temitln('</pre></td>');\n\t\t\t}\n\n\t\t\temitln('</tr>');\n\t\t}\n\n\t\temitln('</table></body></html>');\n\t}\n\n\t// ------------ private methods ------------\n}\n\n","import { DataSheet } from '../ds/DataSheet';\nimport { Vec } from '../util/Vec';\nclass Aspect {\n    constructor(code, ds, allowModify) {\n        this.code = code;\n        this.allowModify = true;\n        this.ds = ds ? ds : new DataSheet();\n        if (allowModify != null)\n            this.allowModify = allowModify;\n    }\n    isColumnReserved(colName) { return false; }\n    areColumnsReserved(colNames) {\n        let resMask = Vec.booleanArray(false, colNames.length);\n        for (let n = 0; n < colNames.length; n++)\n            resMask[n] = this.isColumnReserved(colNames[n]);\n        return resMask;\n    }\n    rowFirstBlock(row) { return true; }\n    rowBlockCount(row) { return 1; }\n    aspectUnion(other) { }\n    initiateNewRow(row) { }\n    columnEffectivelyBlank(row) { return []; }\n    numTextRenderings(row) { return 0; }\n    produceTextRendering(row, idx) { return null; }\n    numGraphicRenderings(row) { return 0; }\n    produceGraphicRendering(row, idx, policy) { return null; }\n    numHeaderRenderings() { return 0; }\n    produceHeaderRendering(idx) { return null; }\n}\nAspect.TEXT_PLAIN = 0;\nAspect.TEXT_LINK = 1;\nAspect.TEXT_HTML = 2;\nexport { Aspect };\n//# sourceMappingURL=Aspect.js.map","let supportedAspects = {};\nexport function registerAspect(classdef) {\n    let code = classdef.CODE, name = classdef.NAME;\n    supportedAspects[code] = { code, name, classdef };\n}\nexport class AspectList {\n    constructor(ds) {\n        this.ds = ds;\n    }\n    list() {\n        let present = [], absent = [];\n        let codes = new Set();\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            codes.add(this.ds.getExtType(n));\n        for (let code in supportedAspects)\n            if (codes.has(code))\n                present.push(code);\n            else\n                absent.push(code);\n        return [present, absent];\n    }\n    instantiate(code) {\n        let supp = supportedAspects[code];\n        if (supp)\n            return new supp.classdef(this.ds);\n        return null;\n    }\n    enumerate() {\n        let aspects = [];\n        for (let n = 0; n < this.ds.numExtensions; n++) {\n            let code = this.ds.getExtType(n);\n            if (supportedAspects[code])\n                aspects.push(this.instantiate(code));\n        }\n        return aspects;\n    }\n    aspectName(code) {\n        let supp = supportedAspects[code];\n        return supp ? supp.name : null;\n    }\n}\n//# sourceMappingURL=AspectList.js.map","import { MoleculeStream } from '../io/MoleculeStream';\nimport { Aspect } from './Aspect';\nimport { registerAspect } from './AspectList';\nexport class AssayProvenanceHeader {\n    constructor() {\n        this.prefixes = {};\n        this.targetName = '';\n        this.targetURI = '';\n        this.organismName = '';\n        this.organismURI = '';\n        this.targetTypeName = '';\n        this.targetTypeURI = '';\n        this.cellName = '';\n        this.cellURI = '';\n        this.assayTypeName = '';\n        this.assayTypeURI = '';\n        this.assayDescription = '';\n        this.sourceName = '';\n        this.sourceURI = '';\n        this.sourceVersion = '';\n        this.documentName = '';\n        this.documentURI = '';\n        this.measureTypeName = '';\n        this.measureTypeURI = '';\n        this.unitNames = [];\n        this.unitURIs = [];\n    }\n}\nclass AssayProvenance extends Aspect {\n    static isAssayProvenance(ds) {\n        for (let n = 0; n < ds.numExtensions; n++)\n            if (ds.getExtType(n) == AssayProvenance.CODE)\n                return true;\n        return false;\n    }\n    constructor(ds, allowModify) {\n        super(AssayProvenance.CODE, ds, allowModify);\n        this.setup();\n    }\n    getHeader() {\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == AssayProvenance.CODE)\n                return this.parseMetaData(this.ds.getExtData(n));\n        return null;\n    }\n    setHeader(header) {\n        let content = this.formatMetaData(header);\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == AssayProvenance.CODE) {\n                this.ds.setExtData(n, content);\n                return;\n            }\n        this.ds.appendExtension(AssayProvenance.NAME, AssayProvenance.CODE, content);\n    }\n    getMolecule(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_MOLECULE);\n        return col < 0 ? null : this.ds.getMolecule(row, col);\n    }\n    getName(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_NAME);\n        return col < 0 ? null : this.ds.getString(row, col);\n    }\n    getValue(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_VALUE);\n        return col < 0 ? null : this.ds.isNull(row, col) ? Number.NaN : this.ds.getReal(row, col);\n    }\n    getError(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_ERROR);\n        if (col < 0)\n            return null;\n        if (this.ds.isNull(row, col))\n            return Number.NaN;\n        let err = this.ds.getReal(row, col);\n        if (err <= 0)\n            return Number.NaN;\n        return err;\n    }\n    getUnits(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_UNITS);\n        return col < 0 ? null : this.ds.getString(row, col);\n    }\n    getRelation(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_RELATION);\n        return col < 0 ? null : this.ds.getString(row, col);\n    }\n    getSourceURI(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_SOURCEURI);\n        return col < 0 ? null : this.ds.getString(row, col);\n    }\n    setMolecule(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_MOLECULE);\n        if (col >= 0)\n            this.ds.setMolecule(row, col, v);\n    }\n    setName(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_NAME);\n        if (col >= 0)\n            this.ds.setString(row, col, v);\n    }\n    setValue(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_VALUE);\n        if (col < 0) { }\n        else if (Number.isNaN(v))\n            this.ds.setToNull(row, col);\n        else\n            this.ds.setReal(row, col, v);\n    }\n    setError(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_ERROR);\n        if (col < 0) { }\n        else if (Number.isNaN(v))\n            this.ds.setToNull(row, col);\n        else\n            this.ds.setReal(row, col, v);\n    }\n    setUnits(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_UNITS);\n        if (col >= 0)\n            this.ds.setString(row, col, v);\n    }\n    setRelation(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_RELATION);\n        if (col >= 0)\n            this.ds.setString(row, col, v);\n    }\n    setSourceURI(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_SOURCEURI);\n        if (col >= 0)\n            this.ds.setString(row, col, v);\n    }\n    setup() {\n        this.parseAndCorrect();\n    }\n    parseAndCorrect() {\n        let header = new AssayProvenanceHeader();\n        let got = false;\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == AssayProvenance.CODE) {\n                header = this.parseMetaData(this.ds.getExtData(n));\n                got = true;\n                break;\n            }\n        if (this.allowModify) {\n            this.ds.ensureColumn(AssayProvenance.COLNAME_MOLECULE, \"molecule\", 'Molecular structure of compound being measured');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_NAME, \"string\", 'Name of compound');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_VALUE, \"real\", 'Measured value');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_ERROR, \"real\", 'Experimental error of measurement');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_UNITS, \"string\", 'Units of measurement');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_RELATION, \"string\", 'Relation: exact, greater or less');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_SOURCEURI, \"string\", 'Source identifier for activity measurement');\n        }\n        if (!got && this.allowModify) {\n            let content = this.formatMetaData(header);\n            this.ds.appendExtension(AssayProvenance.NAME, AssayProvenance.CODE, content);\n        }\n    }\n    parseMetaData(content) {\n        let header = new AssayProvenanceHeader();\n        for (let line of content.split(/\\r?\\n/)) {\n            let eq = line.indexOf('=');\n            if (eq < 0)\n                continue;\n            if (line.startsWith('pfx:'))\n                header.prefixes[MoleculeStream.skUnescape(line.substring(4, eq))] = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('targetName='))\n                header.targetName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('targetURI='))\n                header.targetURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('organismName='))\n                header.organismName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('organismURI='))\n                header.organismURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('targetTypeName='))\n                header.targetTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('targetTypeURI='))\n                header.targetTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('cellName='))\n                header.cellName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('cellURI='))\n                header.cellURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('assayTypeName='))\n                header.assayTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('assayTypeURI='))\n                header.assayTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('assayDescription='))\n                header.assayDescription = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('sourceName='))\n                header.sourceName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('sourceURI='))\n                header.sourceURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('sourceVersion='))\n                header.sourceVersion = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('documentName='))\n                header.documentName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('documentURI='))\n                header.documentURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('measureTypeName='))\n                header.measureTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('measureTypeURI='))\n                header.measureTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('unit:')) {\n                header.unitNames.push(MoleculeStream.skUnescape(line.substring(5, eq)));\n                header.unitURIs.push(MoleculeStream.skUnescape(line.substring(eq + 1)));\n            }\n        }\n        return header;\n    }\n    formatMetaData(header) {\n        let content = '';\n        for (let pfx in header.prefixes)\n            content += 'pfx:' + MoleculeStream.skEscape(pfx) + '=' + MoleculeStream.skEscape(header.prefixes[pfx]) + '\\n';\n        content += 'targetName=' + MoleculeStream.skEscape(header.targetName) + '\\n';\n        content += 'targetURI=' + MoleculeStream.skEscape(header.targetURI) + '\\n';\n        content += 'organismName=' + MoleculeStream.skEscape(header.organismName) + '\\n';\n        content += 'organismURI=' + MoleculeStream.skEscape(header.organismURI) + '\\n';\n        content += 'targetTypeName=' + MoleculeStream.skEscape(header.targetTypeName) + '\\n';\n        content += 'targetTypeURI=' + MoleculeStream.skEscape(header.targetTypeURI) + '\\n';\n        content += 'cellName=' + MoleculeStream.skEscape(header.cellName) + '\\n';\n        content += 'cellURI=' + MoleculeStream.skEscape(header.cellURI) + '\\n';\n        content += 'assayTypeName=' + MoleculeStream.skEscape(header.assayTypeName) + '\\n';\n        content += 'assayTypeURI=' + MoleculeStream.skEscape(header.assayTypeURI) + '\\n';\n        content += 'assayDescription=' + MoleculeStream.skEscape(header.assayDescription) + '\\n';\n        content += 'sourceName=' + MoleculeStream.skEscape(header.sourceName) + '\\n';\n        content += 'sourceURI=' + MoleculeStream.skEscape(header.sourceURI) + '\\n';\n        content += 'sourceVersion=' + MoleculeStream.skEscape(header.sourceVersion) + '\\n';\n        content += 'documentName=' + MoleculeStream.skEscape(header.documentName) + '\\n';\n        content += 'documentURI=' + MoleculeStream.skEscape(header.documentURI) + '\\n';\n        content += 'measureTypeName=' + MoleculeStream.skEscape(header.measureTypeName) + '\\n';\n        content += 'measureTypeURI=' + MoleculeStream.skEscape(header.measureTypeURI) + '\\n';\n        for (let n = 0, num = Math.min(header.unitNames.length, header.unitURIs.length); n < num; n++)\n            content += 'unit:' + MoleculeStream.skEscape(header.unitNames[n]) + '=' + MoleculeStream.skEscape(header.unitURIs[n]) + '\\n';\n        return content;\n    }\n    plainHeading() { return AssayProvenance.NAME; }\n    isColumnReserved(colName) {\n        return colName == AssayProvenance.COLNAME_VALUE || colName == AssayProvenance.COLNAME_ERROR ||\n            colName == AssayProvenance.COLNAME_UNITS || colName == AssayProvenance.COLNAME_RELATION ||\n            colName == AssayProvenance.COLNAME_SOURCEURI;\n    }\n    numTextRenderings(row) { return 2; }\n    produceTextRendering(row, idx) {\n        let header = this.getHeader();\n        if (idx == 0) {\n            let tr = {\n                name: 'Activity',\n                descr: 'Activity measurement details for this record',\n                text: '',\n                type: Aspect.TEXT_PLAIN\n            };\n            let val = this.getValue(row), error = this.getError(row);\n            let units = this.getUnits(row), rel = this.getRelation(row);\n            tr.text = '';\n            if (!Number.isNaN(val)) {\n                if (rel)\n                    tr.text += rel + ' ';\n                tr.text += val;\n                if (!Number.isNaN(error))\n                    tr.text += ' \\u{00B1} ' + error;\n                if (units)\n                    tr.text += ' ' + units;\n            }\n            return tr;\n        }\n        else if (idx == 1) {\n            let tr = {\n                name: 'Source',\n                descr: 'Origin of the structure and activity measurement',\n                text: '',\n                type: Aspect.TEXT_LINK\n            };\n            let url = this.getSourceURI(row);\n            for (let pfx in header.prefixes)\n                if (url.startsWith(pfx + ':')) {\n                    url = header.prefixes[pfx] + url.substring(pfx.length + 1);\n                    break;\n                }\n            tr.text = url;\n            return tr;\n        }\n        return null;\n    }\n}\nAssayProvenance.CODE = 'org.mmi.aspect.AssayProvenance';\nAssayProvenance.NAME = 'Assay Provenance';\nAssayProvenance.COLNAME_MOLECULE = 'Molecule';\nAssayProvenance.COLNAME_NAME = 'Name';\nAssayProvenance.COLNAME_VALUE = 'Value';\nAssayProvenance.COLNAME_ERROR = 'Error';\nAssayProvenance.COLNAME_UNITS = 'Units';\nAssayProvenance.COLNAME_RELATION = 'Relation';\nAssayProvenance.COLNAME_SOURCEURI = 'SourceURI';\nAssayProvenance.URI_UNIT_M = 'http://purl.obolibrary.org/obo/UO_0000062';\nAssayProvenance.URI_UNIT_mM = 'http://purl.obolibrary.org/obo/UO_0000063';\nAssayProvenance.URI_UNIT_uM = 'http://purl.obolibrary.org/obo/UO_0000064';\nAssayProvenance.URI_UNIT_nM = 'http://purl.obolibrary.org/obo/UO_0000065';\nAssayProvenance.URI_UNIT_pM = 'http://purl.obolibrary.org/obo/UO_0000066';\nAssayProvenance.URI_UNIT_logM = 'http://www.bioassayontology.org/bao#BAO_0000101';\nAssayProvenance.URI_UNIT_perM = 'http://www.bioassayontology.org/bao#BAO_0000102';\nAssayProvenance.URI_UNIT_gL = 'http://purl.obolibrary.org/obo/UO_0000175';\nAssayProvenance.URI_UNIT_mgL = 'http://purl.obolibrary.org/obo/UO_0000273';\nAssayProvenance.URI_UNIT_ugL = 'http://purl.obolibrary.org/obo/UO_0000275';\nAssayProvenance.URI_UNIT_binary = 'http://www.bioassayontology.org/bao#BAO_0080023';\nexport { AssayProvenance };\nregisterAspect(AssayProvenance);\n//# sourceMappingURL=AssayProvenance.js.map","import { MoleculeStream } from '../io/MoleculeStream';\nimport { Vec } from '../util/Vec';\nimport { Aspect } from './Aspect';\nimport { registerAspect } from './AspectList';\nclass MeasurementData extends Aspect {\n    static isMeasurementData(ds) {\n        for (let n = 0; n < ds.numExtensions; n++)\n            if (ds.getExtType(n) == MeasurementData.CODE)\n                return true;\n        return false;\n    }\n    constructor(ds, allowModify) {\n        super(MeasurementData.CODE, ds, allowModify);\n        this.header = { units: [], fields: [] };\n        this.setup();\n    }\n    getHeader() {\n        return this.header;\n    }\n    setHeader(header) {\n        this.header = header;\n        let content = this.formatMetaData(header);\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == MeasurementData.CODE) {\n                this.ds.setExtData(n, content);\n                return;\n            }\n        this.ds.appendExtension(MeasurementData.NAME, MeasurementData.CODE, content);\n    }\n    effectHeader(header) {\n        this.setHeader(header);\n        this.ensureFields();\n    }\n    rename(fldidx, newName) {\n        let oldName = this.header.fields[fldidx].name;\n        if (oldName == newName)\n            return;\n        this.header.fields[fldidx].name = newName;\n        this.setHeader(this.header);\n        for (let sfx of [MeasurementData.SUFFIX_VALUE, MeasurementData.SUFFIX_ERROR, MeasurementData.SUFFIX_UNITS, MeasurementData.SUFFIX_MOD]) {\n            let col = this.ds.findColByName(oldName + sfx);\n            if (col >= 0)\n                this.ds.changeColumnName(col, newName + sfx, this.ds.colDescr(col));\n        }\n    }\n    reservedColumns(fldidx) {\n        let fieldName = this.header.fields[fldidx].name;\n        return [fieldName + MeasurementData.SUFFIX_VALUE, fieldName + MeasurementData.SUFFIX_ERROR,\n            fieldName + MeasurementData.SUFFIX_UNITS, fieldName + MeasurementData.SUFFIX_MOD];\n    }\n    getValue(row, fldidx) {\n        return this.getValueField(row, this.header.fields[fldidx]);\n    }\n    getValueField(row, field) {\n        let value = { value: Number.NaN, error: Number.NaN, units: '', mod: '' };\n        let colValue = this.ds.findColByName(field.name + MeasurementData.SUFFIX_VALUE, \"real\");\n        let colError = this.ds.findColByName(field.name + MeasurementData.SUFFIX_ERROR, \"real\");\n        let colUnits = this.ds.findColByName(field.name + MeasurementData.SUFFIX_UNITS, \"string\");\n        let colMod = this.ds.findColByName(field.name + MeasurementData.SUFFIX_MOD, \"string\");\n        if (colValue >= 0 && this.ds.notNull(row, colValue))\n            value.value = this.ds.getReal(row, colValue);\n        if (colError >= 0 && this.ds.notNull(row, colError))\n            value.error = this.ds.getReal(row, colError);\n        if (colUnits >= 0)\n            value.units = this.ds.getString(row, colUnits);\n        if (colMod >= 0)\n            value.mod = this.ds.getString(row, colMod);\n        return value;\n    }\n    setValue(row, fldidx, value) {\n        let fieldName = this.header.fields[fldidx].name;\n        let colValue = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_VALUE, \"real\");\n        let colError = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_ERROR, \"real\");\n        let colUnits = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_UNITS, \"string\");\n        let colMod = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_MOD, \"string\");\n        if (colValue >= 0)\n            if (isNaN(value.value))\n                this.ds.setToNull(row, colValue);\n            else\n                this.ds.setReal(row, colValue, value.value);\n        if (colError >= 0)\n            if (isNaN(value.error))\n                this.ds.setToNull(row, colError);\n            else\n                this.ds.setReal(row, colError, value.error);\n        if (colUnits >= 0)\n            this.ds.setString(row, colUnits, value.units);\n        if (colMod >= 0)\n            this.ds.setString(row, colMod, value.mod);\n    }\n    clearValue(row, fldidx) {\n        let fieldName = this.header.fields[fldidx].name;\n        let colValue = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_VALUE, \"real\");\n        let colError = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_ERROR, \"real\");\n        let colUnits = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_UNITS, \"string\");\n        let colMod = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_MOD, \"string\");\n        if (colValue >= 0)\n            this.ds.setToNull(row, colValue);\n        if (colError >= 0)\n            this.ds.setToNull(row, colError);\n        if (colUnits >= 0)\n            this.ds.setToNull(row, colUnits);\n        if (colMod >= 0)\n            this.ds.setToNull(row, colMod);\n    }\n    getDescr(row, fldidx) {\n        let col = this.ds.findColByName(this.header.fields[fldidx].name);\n        return col < 0 ? '' : this.ds.colDescr(col);\n    }\n    setDescr(row, fldidx, descr) {\n        let col = this.ds.findColByName(this.header.fields[fldidx].name);\n        if (col >= 0)\n            this.ds.changeColumnName(col, this.ds.colName(col), descr);\n    }\n    setup() {\n        this.parseAndCorrect();\n    }\n    parseAndCorrect() {\n        this.header = { units: [], fields: [] };\n        let got = false;\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == MeasurementData.CODE) {\n                this.header = this.parseMetaData(this.ds.getExtData(n));\n                got = true;\n                break;\n            }\n        this.ensureFields();\n        if (!got && this.allowModify) {\n            let content = this.formatMetaData(this.header);\n            this.ds.appendExtension(MeasurementData.NAME, MeasurementData.CODE, content);\n        }\n    }\n    ensureFields() {\n        for (let f of this.header.fields) {\n            let descr = 'Measurement';\n            let colidx = this.ds.findColByName(f.name);\n            if (colidx >= 0)\n                descr = this.ds.colDescr(colidx);\n            if (this.allowModify) {\n                this.ds.ensureColumn(f.name + MeasurementData.SUFFIX_VALUE, \"real\", descr);\n                this.ds.ensureColumn(f.name + MeasurementData.SUFFIX_ERROR, \"real\", 'Error');\n                this.ds.ensureColumn(f.name + MeasurementData.SUFFIX_UNITS, \"string\", 'Units');\n                this.ds.ensureColumn(f.name + MeasurementData.SUFFIX_MOD, \"string\", 'Modifier');\n            }\n        }\n    }\n    parseMetaData(content) {\n        let header = { units: [], fields: [] };\n        for (let line of content.split(/\\r?\\n/)) {\n            let eq = line.indexOf('=');\n            if (eq < 0)\n                continue;\n            if (line.startsWith('unit=')) {\n                let bits = line.substring(eq + 1).split(',');\n                if (bits.length >= 2)\n                    header.units.push({ name: MoleculeStream.skUnescape(bits[0]), uri: MoleculeStream.skUnescape(bits[1]) });\n            }\n            else if (line.startsWith('field=')) {\n                let bits = line.substring(eq + 1).split(',');\n                let f = { name: MoleculeStream.skUnescape(bits[0]), units: [], defnURI: [] };\n                for (let n = 1; n < bits.length; n++)\n                    f.units.push(MoleculeStream.skUnescape(bits[n]));\n                header.fields.push(f);\n            }\n            else if (line.startsWith('definition=')) {\n                let bits = line.substring(eq + 1).split(',');\n                if (bits.length >= 2) {\n                    let f = header.fields.find((f) => f.name == bits[0]);\n                    if (!f)\n                        continue;\n                    for (let n = 1; n < bits.length; n++)\n                        f.defnURI.push(MoleculeStream.skUnescape(bits[n]));\n                }\n            }\n        }\n        return header;\n    }\n    formatMetaData(header) {\n        let lines = [];\n        for (let u of header.units) {\n            lines.push('unit=' + MoleculeStream.skEscape(u.name) + ',' + MoleculeStream.skEscape(u.uri));\n        }\n        for (let f of header.fields) {\n            let line = 'field=' + MoleculeStream.skEscape(f.name);\n            for (let u of f.units)\n                line += ',' + MoleculeStream.skEscape(u);\n            lines.push(line);\n            if (Vec.notBlank(f.defnURI)) {\n                line = 'definition=' + MoleculeStream.skEscape(f.name);\n                for (let d of f.defnURI)\n                    line += ',' + MoleculeStream.skEscape(d);\n                lines.push(line);\n            }\n        }\n        return lines.join('\\n');\n    }\n    plainHeading() { return MeasurementData.NAME; }\n    isColumnReserved(colName) {\n        return this.areColumnsReserved([colName])[0];\n    }\n    areColumnsReserved(colNames) {\n        let names = new Set();\n        for (let f of this.header.fields) {\n            names.add(f.name + MeasurementData.SUFFIX_VALUE);\n            names.add(f.name + MeasurementData.SUFFIX_ERROR);\n            names.add(f.name + MeasurementData.SUFFIX_UNITS);\n            names.add(f.name + MeasurementData.SUFFIX_MOD);\n        }\n        let resv = [];\n        for (let col of colNames)\n            resv.push(names.has(col));\n        return resv;\n    }\n    numTextRenderings(row) { return this.header.fields.length; }\n    produceTextRendering(row, idx) {\n        let field = this.header.fields[idx];\n        let colField = this.ds.findColByName(field.name);\n        let tr = {\n            name: field.name,\n            descr: colField < 0 ? '' : this.ds.colDescr(colField),\n            text: '',\n            type: Aspect.TEXT_PLAIN\n        };\n        let datum = this.getValue(row, idx);\n        if (!Number.isNaN(datum.value)) {\n            if (datum.mod)\n                tr.text += datum.mod + ' ';\n            tr.text += datum.value;\n            if (!Number.isNaN(datum.error))\n                tr.text += ' \\u{00B1} ' + datum.error;\n            if (datum.units)\n                tr.text += ' ' + datum.units;\n        }\n        return tr;\n    }\n}\nMeasurementData.CODE = 'org.mmi.aspect.MeasurementData';\nMeasurementData.NAME = 'Measurement Data';\nMeasurementData.SUFFIX_VALUE = '';\nMeasurementData.SUFFIX_ERROR = '_error';\nMeasurementData.SUFFIX_UNITS = '_units';\nMeasurementData.SUFFIX_MOD = '_mod';\nexport { MeasurementData };\nregisterAspect(MeasurementData);\n//# sourceMappingURL=MeasurementData.js.map","import { MoleculeStream } from '../io/MoleculeStream';\nimport { Vec } from '../util/Vec';\nimport { Aspect } from './Aspect';\nimport { registerAspect } from './AspectList';\nimport { MeasurementData } from './MeasurementData';\nexport var MixtureAttributeType;\n(function (MixtureAttributeType) {\n    MixtureAttributeType[\"Structure\"] = \"structure\";\n    MixtureAttributeType[\"Name\"] = \"name\";\n    MixtureAttributeType[\"Quantity\"] = \"quantity\";\n    MixtureAttributeType[\"Bound\"] = \"bound\";\n    MixtureAttributeType[\"Error\"] = \"error\";\n    MixtureAttributeType[\"Ratio\"] = \"ratio\";\n    MixtureAttributeType[\"Units\"] = \"units\";\n    MixtureAttributeType[\"Relation\"] = \"relation\";\n    MixtureAttributeType[\"Identifier\"] = \"identifier\";\n    MixtureAttributeType[\"Link\"] = \"link\";\n    MixtureAttributeType[\"Property\"] = \"property\";\n})(MixtureAttributeType || (MixtureAttributeType = {}));\nclass Mixture extends Aspect {\n    static isMixture(ds) {\n        for (let n = 0; n < ds.numExtensions; n++)\n            if (ds.getExtType(n) == Mixture.CODE)\n                return true;\n        return false;\n    }\n    constructor(ds, allowModify) {\n        super(Mixture.CODE, ds, allowModify);\n        this.header = { attributes: [] };\n        this.setup();\n    }\n    getHeader() {\n        return this.header;\n    }\n    setHeader(header) {\n        this.header = header;\n        let content = this.formatMetaData(header);\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == Mixture.CODE) {\n                this.ds.setExtData(n, content);\n                return;\n            }\n        this.ds.appendExtension(Mixture.NAME, Mixture.CODE, content);\n    }\n    setup() {\n        this.parseAndCorrect();\n    }\n    parseAndCorrect() {\n        this.header = { attributes: [] };\n        let got = false;\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == Mixture.CODE) {\n                this.header = this.parseMetaData(this.ds.getExtData(n));\n                got = true;\n                break;\n            }\n        if (!got && this.allowModify) {\n            let content = this.formatMetaData(this.header);\n            this.ds.appendExtension(Mixture.NAME, Mixture.CODE, content);\n        }\n    }\n    parseMetaData(content) {\n        let header = { attributes: [] };\n        for (let line of content.split(/\\r?\\n/)) {\n            let eq = line.indexOf('=');\n            if (eq < 0)\n                continue;\n            if (line.startsWith('attr=')) {\n                let bits = line.substring(eq + 1).split(',');\n                if (bits.length < 3)\n                    continue;\n                let column = MoleculeStream.skUnescape(bits[0]);\n                let position = [];\n                if (bits[1] != '0')\n                    position = bits[1].split('.').map((str) => parseInt(str));\n                let type = bits[2];\n                let info = [];\n                for (let n = 3; n < bits.length; n++)\n                    info.push(MoleculeStream.skUnescape(bits[n]));\n                header.attributes.push({ column, position, type, info });\n            }\n        }\n        return header;\n    }\n    formatMetaData(header) {\n        let lines = [];\n        for (let a of header.attributes) {\n            let bits = [MoleculeStream.skEscape(a.column)];\n            if (Vec.isBlank(a.position))\n                bits.push('0');\n            else\n                bits.push(a.position.join('.'));\n            bits.push(a.type);\n            if (a.info)\n                for (let str of a.info)\n                    bits.push(MoleculeStream.skEscape(str));\n            lines.push('attr=' + bits.join(','));\n        }\n        return lines.join('\\n');\n    }\n    plainHeading() { return MeasurementData.NAME; }\n    isColumnReserved(colName) {\n        return this.areColumnsReserved([colName])[0];\n    }\n    areColumnsReserved(colNames) {\n        let names = new Set();\n        for (let a of this.header.attributes)\n            names.add(a.column);\n        let resv = [];\n        for (let col of colNames)\n            resv.push(names.has(col));\n        return resv;\n    }\n}\nMixture.CODE = 'org.mmi.aspect.Mixture';\nMixture.NAME = 'Mixture';\nMixture.SUFFIX_VALUE = '';\nexport { Mixture };\nregisterAspect(Mixture);\n//# sourceMappingURL=Mixture.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {DataSheet} from 'webmolkit/ds/DataSheet';\nimport {AssayProvenance} from 'webmolkit/aspect/AssayProvenance';\nimport {MeasurementData} from 'webmolkit/aspect/MeasurementData';\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {DataSheetStream} from 'webmolkit/io/DataSheetStream';\nimport {MDLSDFReader} from 'webmolkit/io/MDLReader';\nimport {MDLMOLWriter} from 'webmolkit/io/MDLWriter';\nimport {Mixture as MixtureAspect} from 'webmolkit/aspect/Mixture';\nimport {Vec} from 'webmolkit/util/Vec';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport {MixtureCollection} from '../mixture/MixtureCollection';\nimport {Mixture} from '../mixture/Mixture';\nimport {MixfileComponent} from '../mixture/Mixfile';\n\n/*\n\tTable extraction: create Mixfile instances from tabular data sources, with the help of directions for placing columns into\n\tthe mixture hierarchy.\n*/\n\nexport enum TableExtractType\n{\n\tStructure = 'structure',\n\tName = 'name',\n\tQuantity = 'quantity',\n\tBound = 'bound',\n\tError = 'error',\n\tRatio = 'ratio',\n\tUnits = 'units',\n\tRelation = 'relation',\n\tIdentifier = 'identifier',\n\tLink = 'link',\n\tProperty = 'property',\n}\n\ninterface TableExtractMapping\n{\n\tcolumn:string;\n\torigin:number[];\n\ttype:TableExtractType;\n\tinfo?:string[];\n}\n\nexport class TableExtract\n{\n\tprivate table:DataSheet = null;\n\tprivate aprov:AssayProvenance = null;\n\tprivate mdata:MeasurementData = null;\n\n\tprivate lookup:Map<string, Molecule> = null;\n\tprivate mappings:TableExtractMapping[] = [];\n\n\tconstructor(private tableFile:string, private lookupFile:string, private mappingFile:string, private verbose:boolean)\n\t{\n\t}\n\n\tpublic async exec():Promise<void>\n\t{\n\t\tlet content:string;\n\t\ttry {content = fs.readFileSync(this.tableFile).toString();}\n\t\tcatch (ex) {throw 'Unable to read file ' + this.tableFile + ': ' + ex;}\n\n\t\tif (this.tableFile.endsWith('.ds')) this.table = DataSheetStream.readXML(content);\n\t\telse if (this.tableFile.endsWith('.sdf')) this.table = new MDLSDFReader(content).parse();\n\t\telse if (this.tableFile.endsWith('.csv')) this.table = this.parseLines(',', true);\n\t\telse if (this.tableFile.endsWith('.tsv') || this.tableFile.endsWith('.tab')) this.table = this.parseLines('\\t', false);\n\t\tif (!this.table) throw 'Unable to parse: ' + this.tableFile;\n\n\t\tif (AssayProvenance.isAssayProvenance(this.table)) this.aprov = new AssayProvenance(this.table, false);\n\t\tif (MeasurementData.isMeasurementData(this.table)) this.mdata = new MeasurementData(this.table, false);\n\n\t\tif (this.lookupFile)\n\t\t{\n\t\t\t// TODO\n\t\t}\n\n\t\tthis.initialMapping();\n\t\tif (this.mappingFile)\n\t\t{\n\t\t\tcontent = fs.readFileSync(this.mappingFile).toString();\n\t\t\tthis.customMapping(JSON.parse(content));\n\t\t}\n\n\t\tif (this.mappings.length == 0) throw 'No column mapping information available.';\n\n\t\tlet mixtures = new MixtureCollection();\n\t\tfor (let n = 0; n < this.table.numRows; n++)\n\t\t{\n\t\t\tlet mixture = this.extractMixture(n);\n\t\t\tif (mixture) mixtures.appendMixtureDirect(mixture);\n\t\t}\n\n\t\tconsole.log(mixtures.serialise(true));\n\t}\n\n\t// ------------ private methods ------------\n\n\t// read TSV/CSV file, which is presumed to have column headings, and may include escape sequences\n\tprivate parseLines(sep:string, escaped:boolean):DataSheet\n\t{\n\t\tlet ds = new DataSheet();\n\n\t\t// !! load each line, split into strings, apply columns then rows...\n\t\t// !! anything that's all {int} or {real} gets changed retroactively\n\n\t\treturn ds;\n\t}\n\n\t// extract column-to-mixture information embedded in the initial datasheet, if possible\n\tprivate initialMapping():void\n\t{\n\t\tif (!MixtureAspect.isMixture(this.table)) return;\n\n\t\tlet aspect = new MixtureAspect(this.table, false);\n\t\tfor (let attr of aspect.getHeader().attributes)\n\t\t{\n\t\t\tlet map:TableExtractMapping =\n\t\t\t{\n\t\t\t\t'column': attr.column,\n\t\t\t\t'origin': Vec.add(attr.position, -1),\n\t\t\t\t'type': attr.type as any as TableExtractType, // same enum values\n\t\t\t\t'info': attr.info,\n\t\t\t};\n\t\t\tthis.mappings.push(map);\n\t\t}\n\t}\n\n\t// merge in user-provided mappings\n\tprivate customMapping(custom:TableExtractMapping[]):void\n\t{\n\t\tfor (let map of custom)\n\t\t{\n\t\t\tlet idx = this.mappings.findIndex((look) => look.column == map.column);\n\t\t\tif (idx >= 0) this.mappings[idx] = map; else this.mappings.push(map);\n\t\t}\n\t}\n\n\t// pull out the content from a row in the table and corral them into a mixture\n\tprivate extractMixture(row:number):Mixture\n\t{\n\t\tlet mixture = new Mixture();\n\n\t\tfor (let map of this.mappings)\n\t\t{\n\t\t\tlet comp = mixture.mixfile as MixfileComponent;\n\t\t\tfor (let idx of map.origin)\n\t\t\t{\n\t\t\t\tif (comp.contents == null) comp.contents = [];\n\t\t\t\twhile (idx >= comp.contents.length) comp.contents.push({});\n\t\t\t\tcomp = comp.contents[idx];\n\t\t\t}\n\t\t}\n\n\t\tlet appendQuant = (quantity:number | number[], val:number):number | number[] =>\n\t\t{\n\t\t\tif (isNaN(val)) return quantity;\n\t\t\tif (quantity == null) return val;\n\t\t\telse if (typeof quantity == 'number' && quantity != val) return [Math.min(quantity, val), Math.max(quantity, val)];\n\t\t\telse return quantity;\n\t\t};\n\n\t\tlet stashRatio = new Map<string, number>();\n\t\tlet fields = this.mdata ? this.mdata.getHeader().fields : [];\n\n\t\tfor (let map of this.mappings)\n\t\t{\n\t\t\tlet col = this.table.findColByName(map.column);\n\t\t\tif (col < 0 || this.table.isNull(row, col)) continue;\n\n\t\t\tlet comp = mixture.getComponent(map.origin);\n\n\t\t\tif (map.type == TableExtractType.Structure)\n\t\t\t{\n\t\t\t\tlet mol = this.table.getMolecule(row, col);\n\t\t\t\tcomp.molfile = new MDLMOLWriter(mol).write();\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Name)\n\t\t\t{\n\t\t\t\tcomp.name = this.table.toString(row, col);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Quantity)\n\t\t\t{\n\t\t\t\t// if aspected: can extract more information\n\t\t\t\tif (this.aprov && map.column == AssayProvenance.COLNAME_VALUE)\n\t\t\t\t{\n\t\t\t\t\tcomp.quantity = this.aprov.getValue(row);\n\t\t\t\t\tlet error = this.aprov.getError(row);\n\t\t\t\t\tif (!isNaN(error)) comp.error = error;\n\t\t\t\t\tcomp.units = this.aprov.getUnits(row); // TODO: translate based on URI\n\t\t\t\t\tlet relation = this.aprov.getRelation(row);\n\t\t\t\t\tif (relation && relation != '=') comp.relation = relation;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet field = fields.find((f) => f.name == map.column);\n\t\t\t\tif (field)\n\t\t\t\t{\n\t\t\t\t\tlet value = this.mdata.getValueField(row, field);\n\t\t\t\t\tcomp.quantity = value.value;\n\t\t\t\t\tif (!isNaN(value.error)) comp.error = value.error;\n\t\t\t\t\tcomp.units = value.units;\n\t\t\t\t\tif (value.mod && value.mod != '=') comp.relation = value.mod;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet val = parseFloat(this.table.toString(row, col));\n\t\t\t\tcomp.quantity = appendQuant(comp.quantity, val);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Bound)\n\t\t\t{\n\t\t\t\tlet val = parseFloat(this.table.toString(row, col));\n\t\t\t\tcomp.quantity = appendQuant(comp.quantity, val);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Error)\n\t\t\t{\n\t\t\t\tlet val = parseFloat(this.table.toString(row, col));\n\t\t\t\tif (!isNaN(val)) comp.error = val;\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Ratio)\n\t\t\t{\n\t\t\t\tlet val = parseFloat(this.table.toString(row, col));\n\t\t\t\tif (!isNaN(val)) stashRatio.set(JSON.stringify(map.origin), val);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Units)\n\t\t\t{\n\t\t\t\tlet units = this.table.toString(row, col);\n\t\t\t\t// TODO: correction/mapping...\n\t\t\t\tcomp.units = units;\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Relation)\n\t\t\t{\n\t\t\t\tlet relation = this.table.toString(row, col);\n\t\t\t\t// TODO: correction/mapping...\n\t\t\t\tcomp.relation = relation;\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Identifier)\n\t\t\t{\n\t\t\t\tif (comp.identifiers == null) comp.identifiers = {};\n\t\t\t\tcomp.identifiers[map.column] = this.table.toString(row, col);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Link)\n\t\t\t{\n\t\t\t\tif (comp.links == null) comp.links = {};\n\t\t\t\tcomp.links[map.column] = this.table.toString(row, col);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Property)\n\t\t\t{\n\t\t\t\tconsole.log('TODO: property'); // !! lookup aspects...\n\t\t\t}\n\t\t}\n\n\t\t// fill in any missing ratios\n\t\tfor (let origin of mixture.getOrigins())\n\t\t{\n\t\t\tlet comp = mixture.getComponent(origin);\n\t\t\tif (Vec.isBlank(comp.contents)) continue;\n\t\t\tlet num = 0, total = 0;\n\t\t\tfor (let n = 0; n < comp.contents.length; n++) if (!Mixture.isComponentEmpty(comp.contents[n]))\n\t\t\t{\n\t\t\t\tlet ratio = stashRatio.get(JSON.stringify([...origin, n]));\n\t\t\t\tif (!ratio) {num = 0; break;}\n\t\t\t\tnum++;\n\t\t\t\ttotal += ratio;\n\t\t\t}\n\t\t\tif (num > 0) for (let n = 0; n < comp.contents.length; n++) if (!Mixture.isComponentEmpty(comp.contents[n]))\n\t\t\t{\n\t\t\t\tlet ratio = stashRatio.get(JSON.stringify([...origin, n]));\n\t\t\t\tcomp.contents[n].ratio = [ratio, total];\n\t\t\t}\n\t\t}\n\n\t\t// trim out blank pieces\n\t\tskip: for (let origin of Vec.reverse(mixture.getOrigins()))\n\t\t{\n\t\t\tlet comp = mixture.getComponent(origin);\n\t\t\tif (Mixture.isComponentEmpty(comp))\n\t\t\t{\n\t\t\t\tmixture.deleteComponent(origin);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// may collapse singletons\n\t\t\tif (Vec.arrayLength(comp.contents) != 1) continue;\n\t\t\tfor (let key in comp) if (key != 'contents' && (comp as any)[key]) continue skip;\n\t\t\tlet sub = comp.contents[0];\n\t\t\tcomp.contents = null;\n\t\t\tmixture.setComponent(origin, sub);\n\t\t}\n\n\t\treturn mixture;\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {DataSheet, DataSheetColumn} from 'webmolkit/ds/DataSheet';\nimport {MDLSDFWriter} from 'webmolkit/io/MDLWriter';\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {MDLMOLReader} from 'webmolkit/io/MDLReader';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {ExportMInChI} from './ExportMInChI';\nimport {Mixfile, MixfileComponent} from './Mixfile';\n\n/*\n\tInteroperability with SDfiles: conversion of the Mixfile hierarchy into a flattened SDfile is useful for presenting to\n\tsoftware that can read this format, and is also a waypoint en route to a MInChI string.\n*/\n\nexport class ExportSDFile\n{\n\tprivate ds = new DataSheet();\n\tprivate colMol:number;\n\tprivate colName:number;\n\tprivate colHier:number;\n\tprivate colConc:number;\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t\tthis.colMol = this.ds.appendColumn('Molecule', DataSheetColumn.Molecule, '');\n\t\tthis.colName = this.ds.appendColumn('Name', DataSheetColumn.String, '');\n\t\tthis.colHier = this.ds.appendColumn('MINCHI$N', DataSheetColumn.String, '');\n\t\tthis.colConc = this.ds.appendColumn('MINCHI$C', DataSheetColumn.String, '');\n\t}\n\n\t// can add any number of mixtures, which will be numbered automatically\n\tpublic append(mixfile:Mixfile):void\n\t{\n\t\t// if the root node is something other than a pure placeholder, then add it explicitly\n\t\tif (mixfile.name || mixfile.molfile || mixfile.inchi)\n\t\t{\n\t\t\tthis.appendComponent(mixfile, [1]);\n\t\t\treturn;\n\t\t}\n\n\t\t// otherwise, add all of contents of the root node as a series with incrementing primary indexes\n\t\tif (!mixfile.contents) return;\n\t\tfor (let n = 0; n < mixfile.contents.length; n++) this.appendComponent(mixfile.contents[n], [n + 1]);\n\t}\n\n\t// return the SDF-serialised representation\n\tpublic write():string\n\t{\n\t\treturn new MDLSDFWriter(this.ds).write();\n\t}\n\n\t// ------------ private methods ------------\n\n\t// recursively add a component, and all of its subcomponents\n\tprivate appendComponent(comp:MixfileComponent, seq:number[]):void\n\t{\n\t\tlet row = this.ds.appendRow();\n\n\t\tlet mol:Molecule = null;\n\t\tif (comp.molfile)\n\t\t{\n\t\t\tmol = Molecule.fromString(comp.molfile);\n\t\t\tif (!mol)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tmol = new MDLMOLReader(comp.molfile).parse();\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\t\t\t}\n\t\t}\n\t\tif (!mol) mol = new Molecule();\n\n\t\tthis.ds.setMolecule(row, this.colMol, mol);\n\t\tif (comp.name) this.ds.setString(row, this.colName, comp.name);\n\t\tthis.ds.setString(row, this.colHier, seq.join('.'));\n\t\tthis.ds.setString(row, this.colConc, this.formatConcentration(comp));\n\n\t\tif (comp.contents) for (let n = 0; n < comp.contents.length; n++)\n\t\t{\n\t\t\tlet subseq = seq.slice(0);\n\t\t\tsubseq.push(n + 1);\n\t\t\tthis.appendComponent(comp.contents[n], subseq);\n\t\t}\n\t}\n\n\t// turns a concentration into a suitable precursor string, or null otherwise\n\tprivate formatConcentration(comp:MixfileComponent):string\n\t{\n\t\t/* ... this is a pseudo-MInChI approach ...\n\t\t// TODO: need special deal for ratio without denominator - can sometimes add them up to form an implicit denominator\n\n\t\tif (comp.ratio && comp.ratio.length >= 2)\n\t\t{\n\t\t\tlet numer = comp.ratio[0], denom = comp.ratio[1];\n\t\t\tif (!(denom > 0)) return null;\n\t\t\treturn (100 * numer / denom) + ' pp';\n\t\t}\n\n\t\tif (comp.quantity == null || comp.units == null) return null;\n\n\t\t// special deal (maybe temporary): units that are written with common names that map to a URI are converted automatically\n\t\tlet unitURI = comp.units;\n\t\tif (!unitURI.startsWith('http://')) unitURI = Units.nameToURI(unitURI);\n\t\tif (!unitURI) return;\n\n\t\t// TODO: maybe another special deal for absolute weight/volume/mole quantities - convert them into ratios, to the extent that's\n\t\t// possible... maybe approximating where necessary\n\n\t\tlet bits:string[] = [];\n\n\t\tif (comp.relation != null) bits.push(comp.relation);\n\n\t\tlet values:number[] = typeof comp.quantity == 'number' ? [comp.quantity as number] : comp.quantity;\n\n\t\tlet [mnemonic, scaled] = Units.convertToMInChI(unitURI, values);\n\t\tif (!mnemonic) return;\n\t\tbits.push(scaled[0].toString());\n\t\tif (scaled.length > 1) {bits.push('..'); bits.push(scaled[1].toString());}\n\t\tbits.push(mnemonic);\n\n\t\treturn bits.join(' ');*/\n\n\t\tlet useRatio:number = null;\n\t\tif (Vec.len(comp.ratio) == 2) useRatio = comp.ratio[0]; // mixfile ratios are stored as [numer, denom] where denom is checksum; could verify that this\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// is consistent before deigning to use it, but we're just passing it through\n\t\treturn ExportMInChI.formatConcentration(comp.quantity, comp.error, useRatio, comp.units, comp.relation);\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MDLSDFReader} from 'webmolkit/io/MDLReader';\nimport {DataSheetColumn} from 'webmolkit/ds/DataSheet';\nimport {MDLMOLWriter} from 'webmolkit/io/MDLWriter';\nimport {Mixfile, MixfileComponent} from './Mixfile';\nimport {Mixture} from './Mixture';\nimport {StandardUnits, Units} from './Units';\n\n/*\n\tImporting one or more mixtures from chunks of text that represent an SDfile with special mixture fields.\n*/\n\ninterface ImportComponent\n{\n\tmol:Molecule;\n\tname:string;\n\tconc:string;\n\thier:string;\n}\n\nexport class ImportSDFile\n{\n\tprivate buffer = '';\n\tprivate components:ImportComponent[] = [];\n\tprivate mixfiles:Mixfile[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t}\n\n\t// adds a chunk of text to the buffer, which may cause more SDfile units to be extracted; after calling this, 0-or-more new mixtures will become available\n\t// to be polled\n\tpublic feed(chunk:string):void\n\t{\n\t\tthis.buffer += chunk;\n\t\twhile (true)\n\t\t{\n\t\t\tlet sep = this.buffer.indexOf('$$$$\\n');\n\t\t\tif (sep < 0) break;\n\t\t\tsep += 5;\n\t\t\tthis.processBlock(this.buffer.substring(0, sep));\n\t\t\tthis.buffer = this.buffer.substring(sep);\n\t\t}\n\t}\n\n\t// grab the next assembled mixfile and take it out of the delivery list; if the final flag is true, it means we've reached the end of the input sequence, so\n\t// whatever components remain must be complete\n\tpublic poll(final = false):Mixfile\n\t{\n\t\tif (Vec.notBlank(this.mixfiles)) return this.mixfiles.shift();\n\t\tif (final && Vec.notBlank(this.components))\n\t\t{\n\t\t\tthis.assembleComponents();\n\t\t\treturn this.mixfiles[0];\n\t\t}\n\t\treturn null;\n\t}\n\n\t// ------------ private methods ------------\n\n\t// have identified one SDfile record (ending in $$$$), so carve it up into an upcoming component\n\tprivate processBlock(sdfile:string):void\n\t{\n\t\tlet reader = new MDLSDFReader(sdfile);\n\t\treader.upcastColumns = false;\n\t\tlet ds = reader.parse();\n\t\tif (!ds || ds.numRows == 0) return;\n\t\tlet colMol = ds.firstColOfType(DataSheetColumn.Molecule);\n\t\tlet colName = ds.findColByName('Name');\n\t\tlet colHier = ds.findColByName('MINCHI$N');\n\t\tlet colConc = ds.findColByName('MINCHI$C');\n\t\tif (colHier < 0) return; // not a valid mixture block\n\n\t\tlet mol = colMol < 0 ? null : ds.getMolecule(0, colMol);\n\t\tlet name = colName < 0 ? null : ds.getString(0, colName);\n\t\tlet hier = ds.getString(0, colHier);\n\t\tlet conc = colConc < 0 ? null : ds.getString(0, colConc);\n\t\tif (Vec.notBlank(this.components) && hier == '1') this.assembleComponents();\n\n\t\tthis.components.push({mol, name, hier, conc});\n\t}\n\n\t// turn the current list of components into a mixfile, based on the assumption that we've reached a dividing point\n\tprivate assembleComponents():void\n\t{\n\t\tlet mixture = new Mixture();\n\n\t\tfor (let incomp of this.components)\n\t\t{\n\t\t\tlet molfile = incomp.mol ? new MDLMOLWriter(incomp.mol).write() : undefined;\n\t\t\tlet origin = incomp.hier.split('.').map((str) => parseInt(str) - 1);\n\t\t\tlet idx = origin.pop();\n\t\t\tlet parent = mixture.getComponent(origin);\n\t\t\tif (!parent.contents) parent.contents = [];\n\t\t\tlet comp:MixfileComponent = {name: incomp.name, molfile: molfile, contents: []};\n\t\t\tif (incomp.conc) this.decodeConcentration(incomp.conc, comp);\n\t\t\tparent.contents[idx] = comp;\n\t\t}\n\n\t\tif (mixture.mixfile.contents.length == 1) mixture = new Mixture(mixture.mixfile.contents[0] as Mixfile);\n\n\t\t// ratios are expressed as the numerator; fill in the denominator as well\n\t\tlet finishRatio = (comp:MixfileComponent):void =>\n\t\t{\n\t\t\tif (Vec.isBlank(comp.contents)) return;\n\t\t\tlet denom = 0;\n\t\t\tfor (let child of comp.contents)\n\t\t\t{\n\t\t\t\t if (!child.ratio || Vec.len(child.ratio) != 2)\n\t\t\t\t {\n\t\t\t\t \tdenom = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t }\n\t\t\t\t denom += child.ratio[0];\n\t\t\t}\n\t\t\tfor (let child of comp.contents)\n\t\t\t{\n\t\t\t\tif (denom > 0)\n\t\t\t\t\tchild.ratio = [child.ratio[0], denom];\n\t\t\t\telse\n\t\t\t\t\tchild.ratio = undefined;\n\t\t\t}\n\t\t\tfor (let child of comp.contents) finishRatio(child);\n\t\t};\n\t\tfinishRatio(mixture.mixfile);\n\n\t\tthis.components = [];\n\t\tthis.mixfiles.push(mixture.mixfile);\n\t}\n\n\t// unpacks the MInChI-style concentration from the SDfile into the dictionary-style used by Mixfile components\n\tprivate decodeConcentration(conc:string, comp:MixfileComponent):void\n\t{\n\t\tlet match = conc.match(/^([\\>\\<\\=\\~]*)([-\\d\\.:]+)(\\w\\w)([-\\d]*)$/);\n\t\tif (!match) return; // this is technically an error: fails silently\n\n\t\tlet relation = match[1], qstr = match[2], mnemonic = match[3], mantissa = parseInt(match[4]) || 0;\n\n\t\tlet quant1:number = null, quant2:number = NaN;\n\t\tif ((match = qstr.match(/^([-\\d\\.]+):([-\\d\\.]+)$/)))\n\t\t{\n\t\t\tquant1 = parseFloat(match[1]);\n\t\t\tquant2 = parseFloat(match[2]);\n\t\t\tif (isNaN(quant1) || isNaN(quant2)) return;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tquant1 = parseFloat(qstr);\n\t\t\tif (isNaN(quant1)) return;\n\t\t}\n\n\t\tlet units = '', scale = 1, isRatio = false;\n\t\tif (mnemonic == 'pp') units = StandardUnits.pc;\n\t\telse if (mnemonic == 'wv') [units, scale] = [StandardUnits.pcWV, 100];\n\t\telse if (mnemonic == 'wf') [units, scale] = [StandardUnits.pcWW, 100];\n\t\telse if (mnemonic == 'vf') [units, scale] = [StandardUnits.pcVV, 100];\n\t\telse if (mnemonic == 'mf') [units, scale] = [StandardUnits.pcMM, 100];\n\t\telse if (mnemonic == 'rt') isRatio = true;\n\t\telse if (mnemonic == 'mr') [units, scale] = [StandardUnits.mol_L, 1];\n\t\telse if (mnemonic == 'wv') [units, scale] = [StandardUnits.g_L, 1E3];\n\t\telse if (mnemonic == 'mb') units = StandardUnits.mol_kg;\n\t\telse return; // not recognised\n\n\t\tcomp.relation = relation || undefined;\n\n\t\tif (isRatio) comp.ratio = [quant1, 0];\n\t\telse if (isNaN(quant2))\n\t\t{\n\t\t\tcomp.quantity = quant1 * Math.pow(10, mantissa) * scale;\n\t\t\tcomp.units = Units.uriToName(units);\n\t\t}\n\t\telse // it's a range\n\t\t{\n\t\t\tcomp.quantity = [quant1 * Math.pow(10, mantissa) * scale, quant2 * Math.pow(10, mantissa) * scale];\n\t\t\tcomp.units = Units.uriToName(units);\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {ExportMInChI} from '../mixture/ExportMInChI';\nimport {ExportSDFile} from '../mixture/ExportSDFile';\nimport {ImportSDFile} from '../mixture/ImportSDFile';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {DrawMixture} from '../mixture/DrawMixture';\nimport {Vec} from 'webmolkit/util/Vec';\nimport * as fs from 'fs';\nimport {InChI} from '../nodejs/InChI';\nimport {Mixfile} from '../mixture/Mixfile';\nimport {Mixture} from '../mixture/Mixture';\n\n/*\n\tReads a stream of mixtures and writes it out as a stream, with format transformation as necessary.\n*/\n\nexport enum TransformMixtureFormat\n{\n\tMixfile = 'mixfile', // single mixfile\n\tJSON = 'json', // list of mixtures\n\tSDF = 'sdf', // SDfile with mixture-specific columns\n\tMInChI = 'minchi', // MInChI notation, newline separated\n\tLongMInChIKey = 'longminchikey', // hashed keys of MInChI structure section\n\tShortMInChIKey = 'shortminchikey', // crunched keys of MInChI structure section, fixed length\n\tSVG = 'svg', // graphical rendering\n}\nexport const ALL_TRANSFORMMIXTURE_FORMATS = Object.values(TransformMixtureFormat);\n\nexport class TransformMixtures\n{\n\tprivate process = require('process');\n\n\tprivate inputFormat:TransformMixtureFormat = null;\n\tprivate outputFormat:TransformMixtureFormat = null;\n\n\tprivate instream:any = null;\n\tprivate outstream:any = null;\n\n\tprivate count = 0;\n\n\tprivate nextIndex = 0;\n\tprivate roster:{idx:number; chunk:string}[] = [];\n\n\tconstructor(private inputFile:string, inputFormat:string, private outputFile:string, outputFormat:string)\n\t{\n\t\tif (inputFormat)\n\t\t{\n\t\t\tif (!ALL_TRANSFORMMIXTURE_FORMATS.includes(inputFormat as TransformMixtureFormat)) throw 'Unknown input format: ' + inputFormat;\n\t\t\tthis.inputFormat = inputFormat as TransformMixtureFormat;\n\t\t}\n\t\tif (outputFormat)\n\t\t{\n\t\t\tif (!ALL_TRANSFORMMIXTURE_FORMATS.includes(outputFormat as TransformMixtureFormat)) throw 'Unknown output format: ' + outputFormat;\n\t\t\tthis.outputFormat = outputFormat as TransformMixtureFormat;\n\t\t}\n\t}\n\n\tpublic async exec():Promise<void>\n\t{\n\t\tif (this.inputFile && !this.inputFormat)\n\t\t{\n\t\t\tfor (let fmt of ALL_TRANSFORMMIXTURE_FORMATS) if (this.inputFile.endsWith('.' + fmt))\n\t\t\t{\n\t\t\t\tthis.inputFormat = fmt;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!this.inputFormat) throw 'Unknown input format';\n\t\tif (this.inputFormat == TransformMixtureFormat.MInChI || this.inputFormat == TransformMixtureFormat.SVG ||\n\t\t\tthis.inputFormat == TransformMixtureFormat.LongMInChIKey || this.inputFormat == TransformMixtureFormat.ShortMInChIKey) throw 'Can only write format: ' + this.inputFormat;\n\n\t\tif (this.outputFile && !this.outputFormat)\n\t\t{\n\t\t\tfor (let fmt of ALL_TRANSFORMMIXTURE_FORMATS) if (this.outputFile.endsWith('.' + fmt))\n\t\t\t{\n\t\t\t\tthis.outputFormat = fmt;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!this.outputFormat) throw 'Unknown output format';\n\t\tif ((this.outputFormat == TransformMixtureFormat.MInChI || this.outputFormat == TransformMixtureFormat.LongMInChIKey ||\n\t\t\tthis.outputFormat == TransformMixtureFormat.ShortMInChIKey) && !InChI.hasExecutable()) throw 'For MInChI, must specify InChI executable as command line parameter.';\n\n\t\tthis.instream = this.inputFile ? fs.createReadStream(this.inputFile) : this.process.stdin;\n\t\tthis.outstream = this.outputFile ? fs.createWriteStream(this.outputFile) : this.process.stdout;\n\n\t\tif (this.outputFormat == TransformMixtureFormat.JSON) this.outstream.write('[\\n');\n\n\t\tif (this.inputFormat == TransformMixtureFormat.Mixfile) await this.pipeMixfile();\n\t\telse if (this.inputFormat == TransformMixtureFormat.JSON) await this.pipeJSON();\n\t\telse if (this.inputFormat == TransformMixtureFormat.SDF) await this.pipeSDF();\n\n\t\tthis.flushRoster();\n\n\t\tif (this.outputFormat == TransformMixtureFormat.JSON) this.outstream.write(']\\n');\n\n\t\tthis.outstream.end();\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate async pipeMixfile():Promise<void>\n\t{\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet json = '';\n\t\t\tthis.instream.on('data', (chunk:string) => json += chunk);\n\t\t\tthis.instream.on('end', () =>\n\t\t\t{\n\t\t\t\t// (explicit blocking would be correct but hard to code in this framework; async tasks are ordered though, so is OK)\n\t\t\t\t(async () =>\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet mixfile = JSON.parse(json) as Mixfile;\n\t\t\t\t\t\tawait this.processMixfile(this.count++, mixfile);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ex) {reject(ex);}\n\t\t\t\t})();\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async pipeJSON():Promise<void>\n\t{\n\t\tconst StreamArray = require('stream-json/streamers/StreamArray');\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet array = StreamArray.withParser();\n\t\t\tthis.instream.pipe(array.input);\n\t\t\tlet json:Record<string, any> = {};\n\t\t\tarray.on('data', (keyval:Record<string, any>) =>\n\t\t\t{\n\t\t\t\tlet mixfile = keyval['value'] as Mixfile;\n\t\t\t\t// (explicit blocking would be correct but hard to code in this framework; async tasks are ordered though, so is OK)\n\t\t\t\t(async () =>\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tawait this.processMixfile(this.count++, mixfile);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ex) {reject(ex);}\n\t\t\t\t})();\n\t\t\t});\n\t\t\tarray.on('end', () => resolve());\n\t\t});\n\t}\n\n\tprivate async pipeSDF():Promise<void>\n\t{\n\t\tlet sdfile = new ImportSDFile();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tthis.instream.on('data', (chunk:string) =>\n\t\t\t{\n\t\t\t\tsdfile.feed(chunk);\n\t\t\t\tfor (let mixfile = sdfile.poll(); mixfile; mixfile = sdfile.poll()) this.processMixfile(this.count++, mixfile);\n\t\t\t});\n\t\t\tthis.instream.on('end', () =>\n\t\t\t{\n\t\t\t\t// (explicit blocking would be correct but hard to code in this framework; async tasks are ordered though, so is OK)\n\t\t\t\t(async () =>\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet mixfile = sdfile.poll(true);\n\t\t\t\t\t\tif (mixfile) await this.processMixfile(this.count++, mixfile);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ex) {reject(ex);}\n\t\t\t\t})();\n\t\t\t});\n\t\t});\n\t}\n\n\t// a mixfile has been parsed out from the input stream, so deal with it appropriately: this means that something goes into the output roster\n\t// with the given index\n\tprivate async processMixfile(idx:number, mixfile:Mixfile):Promise<void>\n\t{\n\t\tif (mixfile.mixfileVersion == null) throw 'Invalid mixfile';\n\n\t\tlet chunk:string = null;\n\n\t\tif (this.outputFormat == TransformMixtureFormat.Mixfile)\n\t\t{\n\t\t\tlet json = new Mixture(mixfile).serialise(); // makes it nice\n\t\t\tchunk = json + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.JSON)\n\t\t{\n\t\t\tthis.outstream.write(idx == 0 ? ' ' : ',');\n\t\t\tlet json = JSON.stringify(mixfile); // single line compact\n\t\t\tchunk = json + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.SDF)\n\t\t{\n\t\t\tlet sdfile = new ExportSDFile();\n\t\t\tsdfile.append(mixfile);\n\t\t\tlet record = sdfile.write();\n\t\t\tchunk = record + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.MInChI)\n\t\t{\n\t\t\tif (!InChI.isAvailable()) throw 'InChI unavailable: need to specify executable on command line';\n\t\t\tlet minchi = new ExportMInChI(mixfile, new InChI());\n\t\t\tawait minchi.fillInChI();\n\t\t\tminchi.formulate();\n\t\t\tchunk = minchi.getResult() + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.LongMInChIKey)\n\t\t{\n\t\t\tif (!InChI.isAvailable()) throw 'InChI unavailable: need to specify executable on command line';\n\t\t\tlet minchi = new ExportMInChI(mixfile, new InChI());\n\t\t\tawait minchi.fillInChI();\n\t\t\tlet hashkey = minchi.makeLongHashKey();\n\t\t\tchunk = hashkey + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.ShortMInChIKey)\n\t\t{\n\t\t\tif (!InChI.isAvailable()) throw 'InChI unavailable: need to specify executable on command line';\n\t\t\tlet minchi = new ExportMInChI(mixfile, new InChI());\n\t\t\tawait minchi.fillInChI();\n\t\t\tlet hashkey = minchi.makeShortHashKey();\n\t\t\tchunk = hashkey + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.SVG)\n\t\t{\n\t\t\tlet policy = RenderPolicy.defaultColourOnWhite(20);\n\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\tlet layout = new ArrangeMixture(new Mixture(mixfile), measure, policy);\n\t\t\tlayout.arrange();\n\n\t\t\tlet gfx = new MetaVector();\n\t\t\tnew DrawMixture(layout, gfx).draw();\n\t\t\tgfx.normalise();\n\t\t\tlet svg = gfx.createSVG(false);\n\n\t\t\tchunk = svg + '\\n';\n\t\t}\n\n\t\tthis.roster.push({idx, chunk});\n\t\tthis.flushRoster();\n\t}\n\n\t// checks the output roster for content to write out: will only write chunks if they are consecutive with the last emitted index; this is so because the\n\t// async generation methods do not necessarily come in with the same order\n\tprivate flushRoster():void\n\t{\n\t\tif (this.roster.length > 1) this.roster.sort((r1, r2) => r1.idx - r2.idx);\n\n\t\twhile (this.roster.length > 0 && Vec.first(this.roster).idx == this.nextIndex)\n\t\t{\n\t\t\tlet {chunk} = this.roster.shift();\n\t\t\tif (chunk) this.outstream.write(chunk);\n\t\t\tthis.nextIndex++;\n\t\t}\n\t}\n\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {InChI} from '../nodejs/InChI';\nimport {RenderHTML} from './RenderHTML';\nimport {TableExtract} from './TableExtract';\nimport {ALL_TRANSFORMMIXTURE_FORMATS, TransformMixtures} from './TransformMixtures';\nimport {XML} from 'webmolkit/util/XML';\n\n/*\n\tConsole utilities, to be run from NodeJS with command line arguments.\n*/\n\nexport class Console\n{\n\tprivate inputFile:string = null;\n\tprivate inputFormat:string = null;\n\tprivate outputFile:string = null;\n\tprivate outputFormat:string = null;\n\tprivate tableFile:string = null;\n\tprivate lookupFile:string = null;\n\tprivate mappingFile:string = null;\n\tprivate htmlFile:string = null;\n\tprivate withMInChI = false;\n\tprivate justHelp = false;\n\tprivate verbose = false;\n\n\tconstructor(args:string[])\n\t{\n\t\t// const {DOMParser, XMLSerializer} = require('xmldom/dom-parser.js');\n\t\t// XML.customParser = DOMParser;\n\t\t// XML.customSerial = XMLSerializer;\n\n\t\tfor (let n = 0; n < args.length; n++)\n\t\t{\n\t\t\tif (args[n] == '-i' && n + 1 < args.length) this.inputFile = args[++n];\n\t\t\telse if (args[n] == '-if' && n + 1 < args.length) this.inputFormat = args[++n];\n\t\t\telse if (args[n] == '-o' && n + 1 < args.length) this.outputFile = args[++n];\n\t\t\telse if (args[n] == '-of' && n + 1 < args.length) this.outputFormat = args[++n];\n\t\t\telse if (args[n] == '--table' && n + 1 < args.length) this.tableFile = args[++n];\n\t\t\telse if (args[n] == '--lookup' && n + 1 < args.length) this.lookupFile = args[++n];\n\t\t\telse if (args[n] == '--mapping' && n + 1 < args.length) this.mappingFile = args[++n];\n\t\t\telse if (args[n] == '--html' && n + 1 < args.length) this.htmlFile = args[++n];\n\t\t\telse if (args[n] == '--minchi') this.withMInChI = true;\n\t\t\telse if (args[n] == '--inchi' && n < args.length - 1) InChI.setExecutable(args[++n]);\n\t\t\telse if (args[n] == '-h' || args[n] == '-help' || args[n] == '--help') this.justHelp = true;\n\t\t\telse if (args[n] == '--verbose') this.verbose = true;\n\t\t}\n\t}\n\n\tpublic async run():Promise<void>\n\t{\n\t\tif (this.tableFile) await new TableExtract(this.tableFile, this.lookupFile, this.mappingFile, this.verbose).exec();\n\t\telse if (this.htmlFile) await new RenderHTML(this.htmlFile, this.withMInChI).exec();\n\t\telse if (this.inputFile || this.inputFormat || this.outputFile || this.outputFormat) await new TransformMixtures(this.inputFile, this.inputFormat, this.outputFile, this.outputFormat).exec();\n\t\telse if (this.justHelp) this.printHelp();\n\t\telse\n\t\t{\n\t\t\tthis.log('Nothing to do.');\n\t\t\tthis.printHelp();\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate printHelp():void\n\t{\n\t\tconsole.log('Mixtures console utilities. Arguments:');\n\t\tconsole.log('    -i {fn}          read input file (type guessed from suffix)');\n\t\tconsole.log('    -if {fmt}        specify/override type for input file');\n\t\tconsole.log('    -o {fn}          write output file (type guessed from suffix)');\n\t\tconsole.log('    -of {fmt}        specify/override type for output file');\n\t\tconsole.log('    --table {fn}     convert a tabular datafile to mixfile collection');\n\t\tconsole.log('    --lookup {fn}    (optional) lookup file for name-to-structure');\n\t\tconsole.log('    --mapping {fn}   (optional) JSON-formatted file for column mappings');\n\t\tconsole.log('    --html {fn}      render mixfile collection as an HTML table');\n\t\tconsole.log('    --minchi         (optional) include MInChI notation');\n\t\tconsole.log('    --inchi {fn}     (optional) specify InChI executable location');\n\t\tconsole.log('Mixture formats:');\n\t\tfor (let fmt of ALL_TRANSFORMMIXTURE_FORMATS) console.log('    ' + fmt);\n\t}\n\n\tprivate log(str:string):void\n\t{\n\t\tif (this.verbose) console.log(str);\n\t}\n}\n\n// if being run in NodeJS context, need to export the class\n// if (typeof module == 'object') module.exports['Console'] = Console;\n\n"],"names":["Object","defineProperty","exports","value","getElectronBinding","name","process","_linkedBinding","electronBinding","_a","_b","browserModuleNames","commonModuleNames","get_electron_binding_1","concat","features","isDesktopCapturerEnabled","call","push","isViewApiEnabled","deserialize","serialize","isSerializableObject","isPromise","electron_1","val","then","Function","constructor","reject","resolve","serializableTypes","Boolean","Number","String","Date","Error","RegExp","ArrayBuffer","isView","some","type","objectMap","source","mapper","targetEntries","entries","map","key","fromEntries","image","representations","scaleFactors","getScaleFactors","length","scaleFactor","size","getSize","buffer","toBitmap","dataURL","toDataURL","__ELECTRON_SERIALIZED_NativeImage__","serializeNativeImage","Array","isArray","nativeImage","createEmpty","width","height","addRepresentation","rep","deserializeNativeImage","CallbacksRegistry","this","nextId","callbacks","callbackIds","WeakMap","locationInfo","add","callback","id","get","set","regexp","stackString","stack","filenameAndLine","match","exec","location","includes","ref","getLocation","apply","args","global","remove","delete","__createBinding","create","o","m","k","k2","undefined","enumerable","__exportStar","p","prototype","hasOwnProperty","createFunctionWithReturnValue","getGlobal","getCurrentWebContents","getCurrentWindow","getBuiltin","callbacks_registry_1","type_utils_1","module_names_1","Promise","callbacksRegistry","remoteObjectCache","Map","finalizationRegistry","FinalizationRegistry","deref","ipcRenderer","send","contextId","electronIds","isReturnValue","WeakSet","v8Util","getHiddenValue","getContextId","on","IS_REMOTE_PROXY","Symbol","wrapArgs","visited","Set","valueToMeta","has","meta","Buffer","onFulfilled","onRejected","members","prop","setObjectMembers","object","metaId","member","descriptor","remoteMemberFunction","command","metaToValue","sendSync","descriptorFunction","proxyFunctionProperties","configurable","writable","setObjectPrototype","proto","setPrototypeOf","loaded","loadRemoteProperties","Proxy","target","property","bind","ownKeys","getOwnPropertyNames","getOwnPropertyDescriptor","from","byteOffset","byteLength","metaToError","ret","cached","getCachedRemoteObject","remoteFunction","wr","WeakRef","register","setCachedRemoteObject","obj","handleMessage","channel","handler","event","passedContextId","senderId","console","error","enableStacks","argv","getCurrentStack","captureStackTrace","require","module","returnValue","func","forEach","fs","path","pathFile","join","__dirname","executablePath","existsSync","readFileSync","env","ELECTRON_OVERRIDE_DIST_PATH","getElectronPath","Readable","Writable","Duplex","Transform","none","for","finalSymbol","manySymbol","wrapFunction","fn","writableObjectMode","readableObjectMode","transform","chunk","encoding","result","Chain","sanitize","next","async","gen","stream","data","done","runAsyncGenerator","wrapArray","fns","i","isFinal","getFinalValue","isReadableNodeStream","pipe","_writableState","_readableState","readable","isWritableNodeStream","write","options","super","streams","filter","index","convertToTransform","s","input","output","reduce","_write","_1","_2","_final","end","pause","_read","resume","skipEvents","emit","e","make","isMany","getManyValues","final","many","values","chain","Constructor","EventEmitter","startObject","Ctr","current","Assembler","connectTo","reviver","stringValue","_saveValue","_saveValueWithReviver","numberAsString","numberValue","depth","dropToLevel","level","splice","consume","keyValue","parseFloat","nullValue","trueValue","falseValue","endObject","pop","startArray","endArray","Utf8Stream","patterns","value1","string","key1","colon","comma","ws","numberStart","numberDigit","numberFraction","numberExponent","numberExpSign","noSticky","keys","src","slice","numberFracStart","numberExpStart","numberFracDigit","numberExpDigit","true","false","null","expected","array","codes","b","f","n","r","t","Parser","assign","_packKeys","_packStrings","_packNumbers","_streamKeys","_streamStrings","_streamNumbers","packValues","packKeys","packStrings","packNumbers","streamValues","streamKeys","streamStrings","streamNumbers","_jsonStreaming","jsonStreaming","_done","_expect","_stack","_parent","_open_number","_accumulator","_flush","_processBuffer","main","lastIndex","_buffer","charAt","fromCharCode","parseInt","parser","StreamBase","withParser","StreamArray","_level","_counter","_wait","_","_transform","_filter","_push","discard","_assembler","streamArray","Counter","initialDepth","objectFilter","includeUndecided","_accept","_saved_assembler","_reject","StringDecoder","_transformString","_stringDecoder","_transformBuffer","toString","_flushInput","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","toStringTag","isBlank","arr","notBlank","safeArray","len","arrayLength","anyTrue","v","allTrue","anyFalse","allFalse","iterAnyTrue","iterAllTrue","iterAnyFalse","iterAllFalse","swap","idx1","idx2","duplicate","append","item","prepend","unshift","arr1","arr2","idx","flatten","mtx","vec","transpose","sz1","sz2","anyArray","j","equals","equivalent","len1","compareTo","sz","Math","max","booleanArray","fill","numberArray","stringArray","genericArray","genericBlankArrays","funcArray","first","last","min","MAX_VALUE","MIN_VALUE","idxMin","idxMax","range","lo","hi","reverse","identity0","identity1","identityN","start","notMask","mask","idxGet","maskCount","c","maskIdx","idxMask","maskMap","pos","maskGet","maskEqual","sum","sub","mul","neg","setTo","addTo","mulBy","addToArray","subFromArray","mulByArray","divByArray","idxSort","sort","a","v1","v2","sorted","sortedUnique","unique","uniqueUnstable","uniqueStable","maskUnique","idxUnique","exclude","excl","count","indexOf","Permutation","parityPerms","parityIdentity","parityOrder","smallPermutation","PERM1","PERM2","PERM3","PERM4","allPermutations","SMALL_PERMS","PERM_CACHE","MAX_CACHE","nperms","perms","nonunique","Chemistry","ELEMENTS","ELEMENT_GROUPS","ELEMENT_ROWS","ELEMENT_BLOCKS","ELEMENT_VALENCE","ELEMENT_BONDING","ELEMENT_SHELL","NATURAL_ATOMIC_WEIGHTS","ELEMENT_H","ELEMENT_He","ELEMENT_Li","ELEMENT_Be","ELEMENT_B","ELEMENT_C","ELEMENT_N","ELEMENT_O","ELEMENT_F","ELEMENT_Ne","ELEMENT_Na","ELEMENT_Mg","ELEMENT_Al","ELEMENT_Si","ELEMENT_P","ELEMENT_S","ELEMENT_Cl","ELEMENT_Ar","ELEMENT_K","ELEMENT_Ca","ELEMENT_Sc","ELEMENT_Ti","ELEMENT_V","ELEMENT_Cr","ELEMENT_Mn","ELEMENT_Fe","ELEMENT_Co","ELEMENT_Ni","ELEMENT_Cu","ELEMENT_Zn","ELEMENT_Ga","ELEMENT_Ge","ELEMENT_As","ELEMENT_Se","ELEMENT_Br","ELEMENT_Kr","ELEMENT_Rb","ELEMENT_Sr","ELEMENT_Y","ELEMENT_Zr","ELEMENT_Nb","ELEMENT_Mo","ELEMENT_Tc","ELEMENT_Ru","ELEMENT_Rh","ELEMENT_Pd","ELEMENT_Ag","ELEMENT_Cd","ELEMENT_In","ELEMENT_Sn","ELEMENT_Sb","ELEMENT_Te","ELEMENT_I","ELEMENT_Xe","ELEMENT_Cs","ELEMENT_Ba","ELEMENT_La","ELEMENT_Ce","ELEMENT_Pr","ELEMENT_Nd","ELEMENT_Pm","ELEMENT_Sm","ELEMENT_Eu","ELEMENT_Gd","ELEMENT_Tb","ELEMENT_Dy","ELEMENT_Ho","ELEMENT_Er","ELEMENT_Tm","ELEMENT_Yb","ELEMENT_Lu","ELEMENT_Hf","ELEMENT_Ta","ELEMENT_W","ELEMENT_Re","ELEMENT_Os","ELEMENT_Ir","ELEMENT_Pt","ELEMENT_Au","ELEMENT_Hg","ELEMENT_Tl","ELEMENT_Pb","ELEMENT_Bi","ELEMENT_Po","ELEMENT_At","ELEMENT_Rn","ELEMENT_Fr","ELEMENT_Ra","ELEMENT_Ac","ELEMENT_Th","ELEMENT_Pa","ELEMENT_U","ELEMENT_Np","ELEMENT_Pu","ELEMENT_Am","ELEMENT_Cm","ELEMENT_Bk","ELEMENT_Cf","ELEMENT_Es","ELEMENT_Fm","ELEMENT_Md","ELEMENT_No","ELEMENT_Lr","ELEMENT_Rf","ELEMENT_Db","ELEMENT_Sg","ELEMENT_Bh","ELEMENT_Hs","ELEMENT_Mt","ELEMENT_Ds","ELEMENT_Rg","ELEMENT_Cn","Matrix","A","fromArray","clone","numRows","numCols","X","C","norm1","abs","normInf","uminus","plus","B","plusEquals","minus","minusEquals","arrayTimes","arrayTimesEquals","arrayRightDivide","arrayRightDivideEquals","arrayLeftDivide","arrayLeftDivideEquals","scalarTimes","scalarTimesEquals","times","Bcolj","Arowi","rank","SingularValueDecomposition","cond","trace","identity","lines","row","JSON","stringify","nu","U","V","work","nct","nrt","hypot","pp","iter","eps","pow","tiny","kase","ks","cs","sn","scale","sp","spm1","epm1","sk","ek","shift","sqrt","g","getU","getV","getSingularValues","getS","S","norm2","tol","EPSILON","Triangulation2D","px","py","numTriangles","edgeStack","hull","maxTriangles","triangles","halfedges","hashSize","ceil","hullPrev","hullNext","hullTri","hullHash","ids","dists","update","trimConcave","threshold","threshSq","sqr","tri","edge","uniqueEdges","edgeCount","ntri","c1","c2","c3","i1","i2","i3","repTri","repEdge","traceOutline","e1","e2","e3","edgePairs","entry","floor","isz","idxMap","g1","g2","sequence","minX","minY","maxX","maxY","centreX","centreY","i0","minDist","POSITIVE_INFINITY","norm_xy","i0x","i0y","i1x","i1y","minRadius","circumRadius","i2x","i2y","isFinite","quicksort","d0","NEGATIVE_INFINITY","orient","x","y","pickCircumCentre","hullStart","hullSize","hashKey","addTriangle","xp","yp","q","legalise","pseudoAngle","ar","a0","b0","al","bl","p0","pr","pl","p1","inCircle","hbl","link","br","dx","dy","orientIfSure","rx","ry","qx","qy","l","ax","ay","bx","by","cx","cy","ex","ey","fx","fy","bp","cp","cl","left","right","temp","tempDist","median","GeomUtil","pointInPolygon","minArray","maxArray","phase","x1","y1","x2","y2","areLinesParallel","x3","y3","x4","y4","dxa","dya","dxb","dyb","xmajorA","EPS","lineIntersect","u","isPointOnLineSeg","realEqual","pointLineDistance","pointLineSegDistance","doLineSegsIntersect","x4_x3","y4_y3","x2_x1","y2_y1","x1_x3","y1_y3","nx","ny","dn","rectsIntersect","w1","h1","w2","h2","sortAngles","theta","PI","angleDiff","idxSortAngles","uniqueAngles","ang","thetaObtuse","th1","th2","dth","emergentAngle","bottom","behind","delta","TWOPI","dotProduct","crossProduct","affineTranslate","affineMirror","xaxis","yaxis","affineScale","sx","sy","affineRotate","cos","sin","affineCompose","tfm","Acol","Brow","applyAffine","applyAffineArray","isAffineMirror","h","magnitude2","magnitude","dist2","dz","dist","normalise","dsq","inv","normalised","acuteAngle","mag1","mag2","cosTheta","acos","arcControlPoints","rad","t1x","t1y","t2x","t2y","tx","ty","D","createBezierEllipse","rw","rh","nseg","sinTheta","incrAlpha","alpha","cosAlpha","sinAlpha","npt","n1","n2","n3","n4","ctrl","fitCircle","fitEllipse","bestW","bestH","bestScore","shrinkToFit","whs","dmin","invW2","invH2","whsX","whsY","anything","superimpose","thetaA","atan2","rot00","rot01","rot10","rot11","acx","acy","invsz","bcx","bcy","mtxA","mtxB","cov","svd","rotate","convexHull","flatness","algo","QuickHull","hullX","hullY","outlinePolygon","diameter","del","concave","hsz","al1","al2","quickHull","furthestPoint","distance","ux","uy","maxDist","maxPos","Pos","zero","other","scaleBy","mag","offsetBy","withScaleBy","withOffsetBy","w","isZero","fitInto","maxW","maxH","Box","fromBounds","fromSize","fromOval","oval","getPos","setPos","setSize","midX","midY","area","grow","withGrow","intersects","intersection","x5","y5","x6","y6","contains","union","isEmpty","notEmpty","Oval","fromBox","box","setCentre","setRadius","Line","fromPos","pos1","pos2","setPos1","setPos2","XML","parseXML","strXML","xmlDoc","customParser","parseFromString","DOMParser","doc","customSerial","serializeToString","documentElement","XMLSerializer","toPrettyString","xslt","xsltDoc","xsltProc","XSLTProcessor","importStylesheet","resultDoc","transformToDocument","nodeText","el","text","child","childNodes","nodeType","nodeValue","childText","parent","tagName","findElement","appendElement","ownerDocument","createElement","appendChild","appendElementAfter","presib","postsib","nextSibling","parentNode","insertBefore","appendText","isCDATA","createCDATASection","createTextNode","createTextChild","textContent","setText","firstChild","removeChild","node","nodeName","findChildElements","list","childElements","DOM","parse","elHTML","elInput","elCanvas","xhtml","xml","html","outerHTML","template","document","innerHTML","content","find","selector","querySelector","findAll","nodeList","querySelectorAll","domList","parentElement","ancestor","closest","children","tag","firstElementChild","nextElementSibling","toLocaleLowerCase","exists","isVisible","offsetWidth","offsetHeight","getClientRects","appendTo","prependTo","insertAfter","before","empty","getHTML","setHTML","appendHTML","insertAdjacentHTML","getText","getValue","setValue","str","getCSS","style","getPropertyValue","setCSS","setProperty","css","dict","getAttr","hasAttribute","getAttribute","setAttr","setAttribute","attr","addClass","clsnames","cls","split","classList","removeClass","hasClass","clsname","setClass","flag","toggleClass","offset","rect","getBoundingClientRect","win","defaultView","pageXOffset","top","pageYOffset","setBoundaryPixels","setSizePixels","hasFocus","activeElement","grabFocus","delay","setTimeout","focus","removeEvent","removeEventListener","onKeyDown","addEventListener","onKeyUp","onKeyPress","onScroll","onWheel","onClick","onContextMenu","onDblClick","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","onMouseMove","onMouseOver","onChange","onInput","onTouchStart","onTouchMove","onTouchCancel","onTouchEnd","safeInt","def","startsWith","substring","isNaN","formatDouble","sigfig","toPrecision","endsWith","colourCode","col","hex","colourAlpha","transp","ONE_OVER_255","colourCanvas","norm2_xyz","signum","invZ","fltEqual","INV_TWOPI","DEGRAD","RADDEG","th","findNode","findNodes","deepClone","escapeHTML","replace","KeyCode","Graph","edge1","edge2","nbrs","indices","labels","props","nbr","fromMolecule","mol","numAtoms","numBonds","bfr","bondFrom","bto","bondTo","fromMoleculeMask","adj","atomAdjList","fromNeighbours","buff","numNodes","numEdges","getEdge","getEdges","getIndex","setIndex","getLabel","setLabel","lbl","getProperty","prp","addNode","hasEdge","node1","node2","addEdge","removeEdge","isolateNode","keepNodesMask","oldsz","newsz","newmap","newnbrs","keepNodesIndex","removeNodesMask","removeNodesIndex","subgraphIndex","nsz","subgraphMask","calculateComponents","cc","high","calculateComponentGroups","grp","calculateRingBlocks","rblk","plen","numVisited","back","nextID","calculateRingBlockGroups","cap","findRingsOfSize","num","rings","newRings","findRingsOfSizeMask","recursiveRingFind","calculateBFS","curnum","lsz","watermark","calculateGravity","wght","wmod","psize","capacity","fnd","newPath","fp","flip","look","same","ResonanceRemover","resBonds","atomHyd","maxIter","bondOrders","tolerant","bondOrder","perform","atomHExplicit","correctInputMask","processComponent","na","nb","atno","atomicNumber","atomCharge","atomAdjCount","nodes","findBond","optionalH","Molecule","HEXPLICIT_UNKNOWN","atomElement","gravity","bsz","bgrav","bidx","seq","paths","resultCount","definiteMatch","p2","validPath","count1","count2","a1","a2","BONDARTIFACT_EXTRA_RESPATH","BONDARTIFACT_EXTRA_RESRING","BONDARTIFACT_EXTRA_ARENE","BondArtifact","resPaths","resRings","arenes","atomExtra","appendResPath","appendResRing","appendArene","blk","res","atoms","pack","pathify","centre","getPathBlocks","getRingBlocks","getAreneBlocks","getResPaths","getResRings","getArenes","rewriteMolecule","extra","modified","setAtomExtra","ring","arene","atom","harmoniseNumbering","blocks","stashPaths","clear","nextIdentifier","stashRings","stashArenes","createPath","alreadyExists","atomsAsPath","createRing","atomsAsRing","createArene","atomsAsArene","removeArtifact","pick","overlap","removeAll","bits","requireRing","areneAtoms","best","bsum","inkeys","DataSheetColumn","ForeignMoleculeTransient","DataSheet","title","description","colData","rowData","numExtens","extData","withRows","inRow","outRow","cloneMask","colMask","rowMask","inclExtn","outCols","outRows","getData","numExtensions","getExtName","getExtType","getExtData","setExtName","setExtType","setExtData","appendExtension","insertExtension","deleteExtension","colName","colType","colDescr","descr","isNull","findColByName","notNull","ct","getMolecule","getString","getExtend","getObject","datum","fromString","getMoleculeClone","getMoleculeBlank","getInteger","getReal","getBoolean","setToNull","setObject","setMolecule","setString","setInteger","setReal","setBoolean","setExtend","isEqualMolecule","isEqualString","isEqualInteger","isEqualReal","isEqualBoolean","appendColumn","insertColumn","deleteColumn","changeColumnName","changeColumnType","newType","oldType","incompatible","toLowerCase","ensureColumn","reorderColumns","order","appendRow","appendRowFrom","srcDS","insertRow","deleteRow","deleteAllRows","moveRowUp","moveRowDown","swapRows","row1","row2","exciseSingleRow","newData","colIsPrimitive","firstColOfType","copyCell","toRow","toCol","fromDS","fromRow","fromCol","convertType","fromType","toType","ft","tt","safeFloat","round","toInt","toReal","ForeignMolecule","noteAromaticAtoms","atomTransient","AtomAromatic","noteAromaticBonds","bondTransient","BondAromatic","noteZeroDativeBonds","BondZeroDative","noteZeroHydrogenBonds","BondZeroHydrogen","markExplicitValence","valence","trans","tr","AtomExplicitValence","setAtomTransient","noteExplicitValence","markSgroupMultiAttach","keyval","idxHigh","AtomSgroupMultiAttach","payload","hasAnySgroupMultiAttach","noteAllSgroupMultiAttach","eq","sgm","markSgroupMultiRepeat","mult","AtomSgroupMultiRepeat","unit","hasAnySgroupMultiRepeat","noteAllSgroupMultiRepeat","mr","markSgroupData","query","AtomSgroupData","hasAnySgroupData","noteAllSgroupData","sd","POLYMERBLOCK_EXTRA_POLYMER","PolymerBlockConnectivity","QueryTypeAtom","QueryTypeBond","PolymerBlockUnit","connect","bondConn","atomName","bondIncl","bondExcl","dup","PolymerBlock","units","blockAtoms","appendBlock","getIDList","getUnit","getUnits","purgeExtraFields","writeUnit","allKeys","removeUnit","pfx","bondExtra","setBondExtra","createUnit","hasPolymerExtensions","getPolymerExtensions","polext","removePolymerExtensions","nattach","HeadToTail","HeadToHead","Random","hasOuter","subBits","in1","in2","bonds","formatBlockAtom","nbonds","names","formatBlockBond","bond","idxConn","incl","codeAtom","codeBond","QueryUtil","hasAnyQueryAtom","hasAnyQueryBond","hasQueryAtom","hasQueryBond","deleteQueryAtom","deleteQueryBond","deleteQueryAtomAll","xtra","deleteQueryBondAll","queryAtomString","queryAtomStringList","queryBondString","setQueryAtom","setQueryAtomList","setQueryBond","queryAtomCharges","parseIntegers","Charges","queryAtomAromatic","parseBoolean","Aromatic","queryAtomUnsaturated","Unsaturated","queryAtomElements","parseStrings","Elements","queryAtomElementsNot","ElementsNot","queryAtomRingSizes","RingSizes","queryAtomRingSizesNot","RingSizesNot","queryAtomRingBlock","RingBlock","queryAtomNumRings","NumRings","queryAtomRingBonds","RingBonds","queryAtomAdjacency","Adjacency","queryAtomBondSums","BondSums","queryAtomValences","Valences","queryAtomHydrogens","Hydrogens","queryAtomIsotope","Isotopes","queryAtomSubFrags","parseMolecules","SubFrags","queryAtomSubFragsNot","SubFragsNot","queryBondRingSizes","queryBondRingSizesNot","queryBondRingBlock","queryBondNumRings","queryBondOrders","Orders","setQueryAtomCharges","formatIntegers","setQueryAtomAromatic","formatBoolean","setQueryAtomUnsaturated","setQueryAtomElements","formatStrings","setQueryAtomElementsNot","setQueryAtomRingSizes","setQueryAtomRingSizesNot","setQueryAtomRingBlock","setQueryAtomNumRings","setQueryAtomRingBonds","setQueryAtomAdjacency","setQueryAtomBondSums","setQueryAtomValences","setQueryAtomHydrogens","setQueryAtomIsotope","setQueryAtomSubFrags","formatMolecules","setQueryAtomSubFragsNot","setQueryBondRingSizes","setQueryBondRingSizesNot","setQueryBondRingBlock","setQueryBondNumRings","setQueryBondOrders","strlist","intlist","mols","molstr","MolUtil","STEREOGROUP_EXTRA_RACEMIC","STEREOGROUP_EXTRA_RELATIVE","StereoGroup","hasStereoGroups","chiRac","chiRel","atomHasWedge","getRacemicGroups","getRelativeGroups","getRacemicAtoms","getRelativeAtoms","getRacemicGroupAtoms","getRelativeGroupAtoms","groups","stash","createRacemic","createRelative","removeRacemic","removeRelative","is3D","hasWedge","atomAdjBonds","bt","bondType","BONDTYPE_UNKNOWN","BONDTYPE_INCLINED","BONDTYPE_DECLINED","MDLMOL_VALENCE","MDLMOLReader","strData","parseHeader","parseExtended","allowV3000","considerRescale","keepAromatic","keepParity","keepQuery","molName","overallStereoAbsolute","groupAttachAny","groupAttachAll","groupStereoAbsolute","groupStereoRacemic","groupStereoRelative","groupLinkNodes","groupMixtures","scsrTemplates","parseCTAB","nextLine","keepTransient","line","version","parseV3000","trim","z","chg","stereo","hyd","mapnum","addAtom","setAtomZ","setIs3D","setAtomMapNum","AtomChiralMDLOdd","AtomChiralMDLEven","AtomChiralMDLRacemic","BONDTYPE_NORMAL","addBond","appendBondTransient","setBondTransient","superatoms","mixtures","anum","setAtomElement","stype","bracketType","mix","sup","connectType","minRep","maxRep","nbr1","nbr2","logic","elements","setAtomCharge","setAtomUnpaired","setAtomIsotope","setAtomHExplicit","setBondOrder","countRingBonds","countSubstitutions","postFix","artifacts","applyPolymerBlock","applySuperAtom","hasAbbrev","AtomSCSRClass","atomZ","hcount","atomHydrogens","usedValence","unp","atomUnpaired","CoordUtil","normaliseBondDistances","derez","Section","inCTAB","inTemplate","section","lineCounts","lineAtom","lineBond","lineColl","lineSgroup","asdrawnRBC","asdrawnSUB","templateBlocks","ERRPFX","fullLine","Atom","Bond","Coll","SGroup","splitWithQuotes","counts","atomBits","bondBits","parseQueryAtomList","spin","appendAtomTransient","AtomSCSRSeqID","attch","unpackStrings","AtomSCSRAttchOrd","rbc","endpts","attach","dir","setBondType","unpackList","stereoGroup","withoutQuotes","templateClass","natReplace","pts","attachPoints","parseV3000Template","label","not","residual","mod","abvAtom","convertToAbbrevIndex","subsumed","poly","b1","b2","b3","b4","header","mdl","segments","seg","quote","ch","bit","bondInRing","MDLSDFReader","ds","upcastColumns","parseStream","upcastStringColumns","rn","str1","str3","cn","allnull","allreal","allint","allbool","lc","int","VPFX","MDLMOLWriter","includeHeader","includeCounts","includeEnd","enhancedFields","chargeSeparate","abbrevSgroups","polymerBlocks","sgroups","writeCTAB","writeV3000","writeCTAB3000","writeEither","triggered","getResult","hasAnyAbbrev","partialAbbrevExpansion","expandAbbrevs","prepareSgroups","atomList1","atomList2","intrpad","elementAtomicNumber","pad","chgidx","chgval","radidx","radval","isoidx","isoval","rgpidx","rgpval","hydidx","hydval","zboidx","zboval","rbcidx","rbcval","subidx","subval","unsidx","unsval","atomX","atomY","rpad","toFixed","atomMapNum","qhyd","mdlValence","atomIsotope","ISOTOPE_NATURAL","qrbc","qsub","quns","maskArom","qbond","writeMBlockPair","writeMBlockFlat","inSgroup","sg","sidx","encodePolymerBlocks","token","writeMBlockFlatIdxFirst","zeroVal","marked","chgmod","bondSum","nativeVal","optVal","frag","getAbbrev","clearAbbrev","setAbbrev","expandOneAbbrev","ma","dat","bestIdx","bestSize","MAX_SAFE_INTEGER","skip","polymers","fl1","fl2","bcrs","sgroupText","populateV3000Sgroups","qel","isotope","packV3000Strings","maskHBond","collections","racidx","relidx","packV3000List","populateSCSRTemplates","sid","txt","defn","tmdl","molfile","trimEnd","MDLSDFWriter","colMol","wtr","escape","charCodeAt","writeKeyVals","keyvals","multiline","kv","readNextChunk","term","mandatory","escaped","MoleculeStream","readUnknown","jsonStr","readNative","readMDLMOL","readNativeLegacy","MSG_PREMATURE","MSG_UNEXPECTED","parseIntHard","parseFloatHard","applyAtomProperty","appendAtomExtra","applyBondProperty","appendBondExtra","lnum","chunkEl","chunkX","chunkY","chunkFrom","chunkTo","chunkOrder","hdr","skUnescape","frto","writeNative","formatV2Elements","writeNativeLegacy","roundedNumber","iso","typ","charge","unpaired","hy","skEscape","skEncodeExtra","writeMDLMOL","code","toUpperCase","hasZCoord","hasTransient","graph","graphBond","ringID","compID","ring3","ring4","ring5","ring6","ring7","base","trashTransient","getAtom","element","hExplicit","mapNum","transient","getBond","to","bondFromTo","trashGraph","setAtomPos","setAtomX","setAtomY","transi","swapAtoms","setBondFrom","setBondTo","setBondFromTo","deleteAtomAndBonds","deleteBond","HYVALENCE_EL","HYVALENCE_VAL","adjBonds","bondOther","atomExplicit","atomRingBlock","buildGraph","buildRingID","r1","r2","atomConnComp","buildConnComp","boundary","tx1","tx2","getAtomCloned","getBondCloned","setAtom","curr","setBond","modifyAtoms","lambda","modifyAtomsIndices","atomIndices","modifyBonds","modifyBondsIndices","bondIndices","findAtomMatch","findBondMatch","findAllAtoms","findAllBonds","mapAtoms","mapBonds","mapAtomsIndices","mapBondsIndices","comp","IDEALBOND","PREFIX_EXTRA","PREFIX_TRANSIENT","atomAtPoint","tolerance","OVERLAP_THRESHOLD","tolsq","sketchEquivalent","mol1","mol2","DEFAULT_EQUIV_TOLERANCE","box1","box2","mx1","arrayAtomX","my1","arrayAtomY","mx2","my2","bestdsq","j1","j2","sketchMappable","atomBondAngles","bndang","overlapsAtom","overlappingAtomMask","thresh","omask","threshSQ","d1","overlappingAtomList","congestionPoint","approach","score","congestionMolecule","mx","my","translateMolecule","ox","oy","rotateMolecule","rotateBond","rotateAtoms","angleNeighbours","mergeAtoms","oldN","newN","centreMolecule","meanX","meanY","deltaX","deltaY","mirrorImage","alignOrientFlip","x0","y0","deltaA","deltaB","dthA","dthB","scoreA","scoreB","atomIsWeirdLinear","Geometry","OVERLAP_THRESHOLD_SQ","SketchUtil","placeNewAtom","placeNewFragment","dirX","dirY","mbox","fbox","vx","vy","fragPosScore","iscore","rangeX","rangeY","mergeOverlappingAtoms","mergeFragmentsDiv","div","chopmask","remap","div1","div2","exotic","removeDuplicateBonds","mergeFragmentsMask","matchAngleGeometry","geom","GEOM_ANGLES","mtheta","hit","gotall","got","primeDirections","angles","calculateNewBondAngles","exits","exitVectors","nn","guessAtomGeometry","mapAngleSubstituent","atblk","elrow","adjBO","adjAN","pri","allSingle","Linear","Octa1","Octa2","Trigonal","SqPlan","Tetra1","Tetra2","gtheta","asz","gsz","vac","gang","mcount","refitAtomGeometry","inRing","allInRing","bestAng","ww","calculateWalkWeight","newAng","bdiff","diff","ringClash","switchAtomGeometry","dst","geoms","bestAtom","bestX","bestY","curth","pickAtomsToConnect","aidx","AUTO_DSQ","bestDSQ","bestA1","bestA2","conn","pickNewAtomDirection","bestTheta","joinOverlappingAtoms","groupX","groupY","adjb","keepmask","moveToEdge","gotS","gotN","sx1","sy1","sx2","sy2","nx1","ny1","nx2","ny2","SEPTEST","placeAdditionalHydrogens","numH","th3","th4","allViableDirections","proposeNewRing","rsz","snap","positionSimpleRing","proposeAtomRing","thsnap","angs","bestDelta","proposeBondRing","sign","brad","guidelineSprouts","sprouts","ords","sprout","orders","orBlank","attidx","ABBREV_ATTACHMENT","validateAbbrevs","convertToAbbrev","srcmask","abbrevName","molidx","junction","polymerExtra","fragidx","maskmol","maskfrag","nadj","newmol","newatom","alignCoords","expandedAbbrevs","expandOneAbbrevFrag","connBond","connType","vx1","vy1","vx2","vy2","invidx","subgraphWithAttachments","xmask","xmol","boxm","boxf","deleteAtoms","componentList","getAtomSides","oldmap","ccmax","grps","getBondSides","bf","arrayAtomMapNum","molecularFormula","punctuation","puncEnter","puncExit","puncEnterSuper","puncExitSuper","countC","countH","formula","molecularWeight","mw","an","bpri","el1","el2","limit1","limit2","boB1A1","boB1A2","boB2A1","boB2A2","bad1","bad2","exotic1","exotic2","ccsz","wn","totalHydrogens","hc","stripHydrogens","force","boringHydrogen","createHydrogens","position","atomVec3","atomOxidationState","nonMetal","oxstate","bo","chalco","oxidationStateText","absox","TEMPLATE_ATTACHMENT","InChIDelegate","generate","execLocation","inchi","InChI","available","inchiPath","X_OK","hasExecutable","setExecutable","isAvailable","nativeMolfileToInChI","writer","mdlmol","inchiKey","proc","cmd","raw","spawnSync","stdout","log","RenderPolicy","pointScale","resolutionDPI","fontSize","lineSize","bondSep","defaultPadding","foreground","background","atomCols","defaultBlackOnWhite","pixPerAng","policy","defaultWhiteOnBlack","defaultColourOnWhite","defaultColourOnBlack","defaultPrintedPublication","RenderEffects","colAtom","colBond","dottedRectOutline","dottedBondCross","hideAtoms","hideBonds","atomFrameDotSz","atomFrameCol","atomCircleSz","atomCircleCol","atomDecoText","atomDecoCol","atomDecoSize","bondDecoText","bondDecoCol","bondDecoSize","overlapAtoms","RenderMnemonicType","BLineType","PseudoEmbedding","bondMask","crossings","calculateCrossings","maskCross","bond1","bond2","higher","crossRblk","maskComp","connectMaskedComponents","ccgrp","embedComponent","imask","gmol","maskNever","amask","newZ","seedFromInternalWedges","seedFromExternalWedges","seedFromPerspective","seedFromDensity","ucount","normaliseHeights","expandOutward","ncount","cross","updateCrossing","success","avgdist","maxdist","highIdx","highCongest","congest","prevZ","mark","bfr1","bto1","bfr2","bto2","idx3","idx4","x1a","y1a","x1b","y1b","x2a","y2a","x2b","y2b","xy","dx1","dy1","dx2","dy2","ext1","ext2","z1a","z1b","z2a","z1","z2","FitRotatedEllipse","margin","stop","calculate","lookupCache","setupParameters","currentScore","calculateScore","coarseDiscovery","fineImprovement","saveCache","getSpline","cacheMap","cacheVal","psz","invpsz","ptheta","pdist","buffX","buffY","rotatedScore","rtheta","scx","scy","devx","devy","deltaD","deltaR","DELTA_OPTIONS","dw","dh","sanity","bestCX","bestCY","bestRW","bestRH","newCX","newCY","newRW","newRH","newScore","REDUCTION","reduc","dCX","dCY","dRW","dRH","closestDSQ","eth","ii","proxSum","FontData","UNITS_PER_EM","INV_UNITS_PER_EM","PANOSE_1","ASCENT","DESCENT","MISSING_HORZ","MISSING_DATA","ASCENT_FUDGE","UNICODE","HORIZ_ADV_X","GLYPH_DATA","OUTLINE_X","OUTLINE_Y","KERN_C1","KERN_C2","KERN_K","pathCache","pathMissing","ctxReference","getKerning","ch1","ch2","measureText","font","measureWidths","xpos","getRawGlyph","getGlyphPath","Path2D","getMissingPath","getOutlineX","getOutlineY","initNativeFont","ctx","canvas","OffscreenCanvas","getContext","measureTextNative","family","opt","save","bold","italic","metrics","restore","FUDGE","ArrangeMolecule","guestimateSize","FONT_CORRECT","numsym","plusH","aw","ah","measure","effects","points","space","unsplitLines","wantArtifacts","wantCrossings","artifactCharge","artifactUnpaired","artifactFract","getMeasure","getPolicy","getEffects","getScale","setWantArtifacts","want","getArtifacts","setArtifacts","setWantCrossings","arrange","bondSepPix","lineSizePix","fontSizePix","ymul","yIsUp","artmask","setupBondOrders","fsz","angToX","angToY","overCol","wad","PADDING","computeSpacePoint","processLabel","bdbl","xy1","shrinkBond","backOffAtom","xy2","ensureMinimumBondLength","head","qbonds","qtxt","oxy","orthogonalDelta","lx1","ly1","lx2","ly2","bnum","Dotted","computeSpaceLine","rotation","ltype","Normal","Inclined","Declined","Unknown","DotDir","IncDouble","IncTriple","IncQuadruple","invD","orderedRingList","processDoubleBond","priorityDoubleSubstit","placeHydrogen","isostr","placeAdjunct","annotateAtom","annotateBond","spc","createCurvedPath","delocalisedAnnotation","createCircularRing","isRing","alkeneLike","createBondCentroid","emb","resolveLineCrossings","processPolymerUnit","numPoints","getPoint","getPoints","numLines","getLine","getLines","getUnsplitLines","numRings","getRing","getRings","numPaths","getPath","getPaths","numSpace","getSpace","getSpaces","offsetEverything","offsetOrigin","bounds","determineBoundary","scaleEverything","padding","determineBoundaryBox","squeezeInto","bw","bh","downScale","limitBounds","monochromate","spatialCongestion","delocalise","fractional","angdir","zeroBonds","zpt","ext","bestDX","bestDY","angThresh","shorted","DELTA","dang","viol","countPolyViolations","shortCircuit","ibar","ibrace","side","chunks","primary","refchunk","bpos","isPrimary","chunkw","tw","bump","xbump","ybump","active","backOffAtomDelta","d12","d2","invD12","SIZE_ORDER","nring","ringsz","ringbusy","ringscore","ringorder","resbcount","maxbcount","sc","priority","nfr","nto","btheta","countFLeft","countFRight","countTLeft","countTRight","idxFLeft","idxFRight","idxTLeft","idxTRight","noshift","ispri","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","bumpAtomPosition","delta1","delta2","delta3","delta4","adjustBondPosition","lt","fussy","SSFRACT","GLYPH_H","emscale","outlineX","outlineY","firstEMW","emw","chp","extraX","extraY","qh","emdx","emdy","srcWAD","RIGHTLEFT","LEFTRIGHT","UPDOWN","DOWNUP","quad","LEFTIES","allLeft","allRight","allUp","allDown","magPX","magPY","bestExt","anyNoClash","subFsz","nglyphs","norm","spaceSubset","subset","hits","nspc","sr","ssz","alt","nf","nt","sumFrom","sumTo","ta","otherTheta","minExt","stepsz","angsz","limX","limY","subSpace","step","oth","bth","boxOverlaps","pointmask","linemask","wx1","wy1","wx2","wy2","bondHigher","bondLower","TYPES","stashOriginals","linesHigher","linesLower","pt","isRegular","regDist","NaN","FRACT","pb","mdist","fit","extAtom","symbol","EXT","capA","ncross1","ncross2","fr1","fr2","capB","score1","score2","splineInterpolate","qx1","qy1","qx2","qy2","allUnits","processPolymerUnitPair","brackets","bracket","shared","nestings","u1","u2","nestOrder","nestCount","tagidx","isLinear","isOuter","theta1","theta2","ym","bsz1","bsz2","BASE_LINE","BASE_TEXT","fract","invDist","px2","py2","px3","py3","px1","py1","px4","py4","line1","line2","line3","xx","yy","pt1","pt2","ypos","dsq1","drawLine","drawText","xmin","ymin","idxN","idxD2","idxD1","globalInstance","ONTOLOGY_SOURCE","OntologyTree","getOntologyKeys","getOntologyData","roots","mapTerms","alreadyLoaded","init","loadFromString","getRoots","hasTerm","uri","getBranch","getBranchList","root","accumulate","branch","loadContent","termList","debugString","repeat","SquarePackingSpring","ArrangeMixtureLineSource","TextAlign","PrimClass","StandardUnits","SquarePacking","packSize","boxes","hspace","vspace","layout","wantRatio","candidates","cand","idxStart","springs","Weak","hash","processCandidate","hashes","batch","Strong","Medium","outline","placed","placeAbove","spring","segs","newsegs","mergeSegmentAbove","placeBelow","mergeSegmentBelow","hiX","loY","hiY","ratio","merge","seg1","seg2","ArrangeMixture","mixture","components","minBoxSize","showCollapsors","collapsedBranches","packBranches","includeIdentifiers","nameFontSize","limitStructW","limitStructH","hardwrapName","softwrapName","createComponents","layoutSubComponents","contractComponents","molLayout","molBox","scaleComponents","modScale","nameBox","collapseBox","findComponent","origin","formatQuantity","mixcomp","prec","quantity","relation","rel","formatNormQuantity","note","findNote","concQuantity","concError","concUnits","concRelation","examineBranch","parentIdx","isCollapsed","contents","subOrigin","mixfile","nameLines","wrapSplitName","Name","qline","Quantity","identifiers","truncateEllipsis","Identifier","metadata","metaString","Meta","minsz","gap","wh","wholeBranch","branchBlock","branchBox","totalWidth","totalHeight","bound","cbox","sq","allChildren","pidx","boundX","idxInside","idxOutside","ellw","keep","SpoolSVG","prettyPrint","spool","whole","inc","dec","MetaVector","types","prims","offsetX","offsetY","density","charMissing","lowX","lowY","highX","highY","charMask","primClass","Text","colour","thickness","typeidx","findOrCreateType","updateBounds","drawRect","edgeCol","fillCol","NOCOLOUR","Rect","drawOval","drawPath","xpoints","ypoints","ctrlFlags","isClosed","hardEdge","Path","closed","drawPoly","align","direction","Left","Baseline","Right","Middle","Top","Bottom","mscale","rx1","ry1","rx2","ry2","drawTextNative","fontFamily","TextNative","boundLowX","boundLowY","boundHighX","boundHighY","getBounds","transformPrimitives","transformIntoBox","nw","nh","scaleExtent","maxWidth","maxHeight","sw","sh","swsh","renderInto","domNew","jquery","newElement","renderCanvas","clearFirst","clearRect","window","devicePixelRatio","renderContext","typeObj","setupTypeLine","setupTypeRect","setupTypeOval","setupTypePath","setupTypeText","setupTypeTextNative","renderLine","renderRect","renderOval","renderPath","renderText","renderTextNative","createSVG","withXlink","svg","renderSVG","svgLine1","svgLineN","svgRect1","svgRectN","svgOval1","svgOvalN","svgPath","svgText","svgTextNative","into","beginPath","moveTo","lineTo","strokeStyle","lineWidth","lineCap","stroke","fillStyle","fillRect","strokeRect","ellipse","layer","quadraticCurveTo","bezierCurveTo","closePath","lineJoin","translate","fillText","defineSVGStroke","defineSVGFill","rects","ovals","shape","typeDef","every","DrawMolecule","vg","mnemonics","invScale","getMetaVector","getLayout","draw","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","drawUnderEffects","drawFusedWedge","Artifact","drawBondInclined","drawBondDeclined","drawBondUnknown","drawBondDotted","drawBondIncMulti","fg","bez","Centre","drawOverEffects","wdots","hdots","wspc","hspc","Effect","xdots","ydots","invX","invY","bcount","ixy1","ixy2","inv1","other1","other2","dth1","diff1","dth2","diff2","diff3","terminalPoints","ty1","ty2","outerX","outerY","innerX","innerY","nsteps","invSteps","holdout","ix","iy","radius","nudge","DrawMixture","hoverIndex","activeIndex","selectedIndex","callbackDrawNameLine","drawConnection","drawComponent","xm","yd","bg","PAIR_UNIT_NAMES","pc","pcWV","pcWW","pcVV","pcMM","mol_L","mmol_L","umol_L","nmol_L","pmol_L","g_L","mg_L","ug_L","mol_kg","kg","mg","ug","ng","L","mL","uL","nL","mmol","umol","nmol","ppm","ppb","PAIR_UNIT_MINCHI","Units","setup","pair","STANDARD_LIST","COMMON_NAMES","URI_TO_NAME","NAME_TO_URI","URI_TO_MINCHI","standardList","commonNames","uriToName","nameToURI","convertToMInChI","mnemonic","DotPathBond","DotPathCharge","DotPath","maskBlock","getBondOrders","numer","denom","getBondClasses","classes","bcls","getChargeClasses","ccls","getAggregateCharges","total","nonsingle","pibonded","metalbonded","bondsum","blk1","blk2","impliedPi","adjpi","maskMaybe","COULD_BLOCK","ACIDS","BASES","hasMetal","totalHave","totalWant","others","electrons","Stereochemistry","chiralTetra","STEREO_NONE","cistransBond","squarePlanar","isH","buildPriority","buildTetraChirality","buildBondCisTrans","buildPlanarCisTrans","buildOctaChirality","atomPriority","atomTetraChirality","bondSideStereo","atomPlanarStereo","getPriorities","getAtomTetraChiral","getBondSideStereo","rubricTetrahedral","numShort","numWedges","th0","one","two","zz","rubricSquarePlanar","ninc","ndec","v0","v3","v4","d3","d4","MIN_ANGLE","MAX_ANGLE","th12","th23","th34","th41","rubricBipyrimidal","atom2","atom3","atom4","atom5","ANGLE_OPPOSITE","v5","atom1","v45","rubricOctahedral","slots","bestOpposite","axial","bestOrthogonal","bestOrient","rubric","rubricBondSides","adj1","adj2","f1","f2","t1","t2","vfr","vto","vbond","vf1","vt1","THRESHSQ","xf1","xt1","xf1N","keepF1T1","keepF2T1","keepF1T2","keepF2T2","vf2","vt2","xf2","xt2","xf2N","haswedge","skip_atom","STEREO_UNKNOWN","parity","STEREO_NEG","STEREO_POS","ringMask","skip_bond","isBondAromatic","pf1","pf2","cipgr","anyActualH","prigr","cip","sortAndGroup","nextpri","repartitioned","cmp","uset","STEREO_BROKEN","RUBRIC_EQUIV_TETRA","RUBRIC_EQUIV_SIDES","RUBRIC_EQUIV_SQUARE","RUBRIC_EQUIV_BIPY","RUBRIC_EQUIV_OCTA","MetaMolecule","atomArom","bondArom","rubricTetra","rubricSquare","rubricBipy","rubricOcta","rubricSides","heavyHash","uniqueElements","dots","piAtom","calculateStrictAromaticity","nr","ensurePiAtoms","anyChange","phase1","phase2","calculateRelaxedAromaticity","exocyclic","rblk1","rblk2","rng","valid","arom","calculateStereoRubric","adjc","adjc1","hc1","adjc2","hc2","removeHydrogens","atomMask","atomMap","calculateSkeletonHash","skeletonHash","calculateHeavyHash","anyH","getSkeletonHash","hvy","isAtomAromatic","bondOrderArom","getAtomAromaticity","getBondAromaticity","getHeavyHash","getDotPath","getUniqueElements","equivalentTo","timeout","isomorphMatch","uniq1","uniq2","createRubric","createStrict","createStrictRubric","createRelaxed","createRelaxedRubric","crc_table","BOOT_CRC","start_crc","feed_crc","crc","byte","end_crc","CircularFingerprints","kind","hookApplyNewFP","hookConsiderNewFP","resolvedChiral","atomGroup","fplist","atomAdj","bondAdj","make_crc_table","initialIdentityECFP","applyNewFP","hashCode","iteration","centralAtom","niter","newident","circularIterate","growAtoms","considerNewFP","circ","numFP","getFP","getFingerprints","getUniqueHashes","getFoldedHashes","maxBits","andBits","tanimoto","hash1","hash2","nheavy","nhydr","degree","inring","ru","par","newFP","lookFP","CLASS_ECFP0","CLASS_ECFP2","CLASS_ECFP4","CLASS_ECFP6","DataSheetStream","readXML","summary","extRoot","extList","colList","rowidx","colidx","readJSON","json","writeXML","extension","column","cell","txtNode","writeJSON","nrow","ncol","doConvert","TEMPLATE_SOURCE","AbbrevContainer","abbrevs","getTemplateKeys","getTemplateData","needsSetup","setupData","thisArg","_arguments","generator","dsstr","colAbbrev","attcount","firstConn","submitAbbreviation","P","fulfilled","rejected","getAbbrevs","infrag","promote","submitFragment","submitMolecule","inmol","substituteAbbrevName","fragExp","fragMF","fragFP","abbrev","afragExp","afragFP","search","formatAbbrevLabel","abv","nameHTML","nameSearch","pre","mid","post","MetalLigate","metalAtom","ligandAttach","ligands","lig","anyAttached","makeLigandBond","otherLigands","avgTheta","orientLigand","l1","l2","arrangeLigandsFree","arrangeLigandsRange","otherOrder","extent","resolveClashes","ligAtom","mchg","lchg","idxAttach","lx","ly","molExtent","weight","bestLX","bestLY","attTheta","attDist","attDX","attDY","orderAttach","srcX","srcY","dstX","dstY","dtheta","refTheta","refSpan","bounded","thetaMin","thetaSpan","ligandSpan","determineThetaBounds","rotTheta","bestMin","bestMax","ablk","bblk","bumpDX","bumpDY","CLOSE_SQ","tainted","outer","FusionPermutation","attdist","guided","bridged","scoreModifier","chainSelect","TemplateFusion","templ","numAttach","withGuideOnly","guidetempl","guideidx","guideadj","timeLimit","artif1","artif2","poly1","poly2","huntForGuides","permuteNone","oldmol","oldbox","newbox","ROTN","rotmol","display","srcidx","sourceIndex","permuteAtom","timeStart","getTime","newperms","fliptempl","composeGuidedOne","flipmol","composeDirectOne","composeBridge","affixRawPermutations","permuteBond","composeGuidedTwo","composeDirectTwo","permuteMulti","composeGuidedMulti","composeDirectMulti","o1","otheta","ntheta","ocurrent","ncurrent","scoreMod","bfs","pmol","osz","asMask","temidx","removeExtraGuides","o2","nth","oidx","orad","nidx","nrad","lowbfs","busy1","busy2","att","gidx","gx","gy","homoPenalty","oel","nel","RESERVED_GUIDESYMBOL","sel","padj","snapToGuide","isGuideOnTerminal","nudgenew","cx1","cy1","cx2","cy2","midx","tidx","gatom","closeDSQ","npsz","umask","numKeep","scorePermutation","uscore","uidx","perm","tmol","tunion","contained","ai","aj","bo1","bo2","wantTheta","totalBO","mmask","tfr","tto","tn","wmol","ActivityType","AbsType","MoleculeActivity","activity","param","owner","toClipboard","currentAtom","currentBond","selectedMask","subjectMask","subjectLength","subjectIndex","hasSelected","setOwner","evaluate","execute","Delete","execDelete","Clear","execClear","Copy","execCopy","Cut","SelectAll","execSelectAll","SelectNone","SelectPrevComp","execSelectComp","SelectNextComp","SelectSide","execSelectSide","SelectGrow","execSelectGrow","SelectShrink","execSelectShrink","SelectChain","execSelectChain","SelectSmRing","execSelectSmRing","SelectRingBlk","execSelectRingBlk","SelectCurElement","execSelectCurElement","SelectToggle","execSelectToggle","SelectUnCurrent","execSelectUnCurrent","Element","execElement","positionX","positionY","keepAbbrev","Charge","execCharge","Connect","execConnect","Disconnect","execDisconnect","execMetalLigate","BondOrder","execBond","BondType","BondGeom","execBondGeom","BondAtom","execBondAtom","BondSwitch","execBondSwitch","BondRotate","execBondRotate","BondAddTwo","execBondAddTwo","BondInsert","execBondInsert","Join","execJoin","Nudge","execNudge","NudgeLots","NudgeFar","execNudgeFar","Flip","execFlip","axis","Scale","execScale","Rotate","execRotate","BondDist","execBondDist","AlignAngle","execAlignAngle","angle","AlignRegular","execAlignRegular","AdjustTorsion","execAdjustTorsion","Move","execMove","refAtom","Ring","execRing","ringX","ringY","aromatic","execTemplateFusion","fragNative","setPermutations","permutations","AbbrevTempl","execAbbrevTempl","AbbrevGroup","execAbbrevGroup","AbbrevFormula","execAbbrevFormula","AbbrevClear","execAbbrevClear","AbbrevExpand","execAbbrevExpand","BondArtifactPath","BondArtifactRing","BondArtifactArene","BondArtifactClear","execBondArtifact","execPolymerBlock","AddHydrogens","execAddHydrogens","RemoveHydrogens","execRemoveHydrogens","QueryClear","execQueryClear","QueryCopy","execQueryCopy","QueryPaste","execQueryPaste","QuerySetAtom","execQuerySetAtom","QuerySetBond","execQuerySetBond","QueryBondAny","execQueryBondAny","SproutDirection","execSproutDirection","finish","setState","errmsg","showMessage","requireSubject","zapSubject","withCut","performCopy","all","cclist","pickSelectedGroup","requireCurrent","sides","requireSelected","any","maxRB","gotRB","rb","applyQuery","NON_METALS","TRANSITION_METALS","MAIN_GROUPS","zap","killmask","ligAtoms","performBondNew","ccmol","oneComp","performBondChange","performBondGeomAtom","performBondGeomBond","altmol","ac1","ac2","mobileSide","baseAng","ang1","ang2","alink","fragmask","fusion","isVertical","invSz","connAtoms","curDist","sel1","isSelected","sel2","a3","group1","group3","subj","outmol","pi","checkAbbreviationReady","fixed","requireAtoms","artif","subject","curAtom","removePolymerBlock","performPolymerBlock","selmask","qmol","qterms","aterms","bterms","angleOptions","newAtom","bscore","switchType","stereoType","newang","subjmask","disqualTerminal","side1","side2","weight1","weight2","polymer","NormMixture","notes","analyse","origins","getOrigins","compList","getComponent","enumerateStereo","stereoEnum","childIndexes","sumType","None","sumAmount1","sumAmount2","sumError","toAbsoluteUnits","amount","childType","idxOne","Mass","Volume","Moles","splitMolecule","activ","emols","Mixture","mixfileVersion","fromComponent","isComponentEmpty","BITS","hasQuantity","recursiveEqual","deserialise","serialise","beautify","serialiseComponent","getParentComponent","getComponents","nodeEnum","setComponent","deleteComponent","prependBefore","subcomp","SKIP","splitOrigin","regex","regpad","comp1","comp2","dict1","dict2","keys1","keys2","MInChISegment","ExportMInChI","minchi","segment","fillInChI","formulate","modmix","useRatio","inchiList","mcomp","inchiFrag","PFX","builder","assembleContents","appendSegment","Header","Component","layerN","Hierarchy","layerG","Concentration","getSegment","makeLongHashKey","makeShortHashKey","LETTERS","crclist","feedCharacter","letter","NCRC","trunc","formatConcentration","mantissa","exp","determineExponent","unitURI","scaled","tree","subComp","subTree","conc","shaveBeard","minval","log10","OutlineMeasurement","xToAng","yToAng","MixtureCollection","getMixture","getMixtureDirect","setMixture","setMixtureDirect","deleteMixture","appendMixture","appendMixtureDirect","appendCollection","collection","insertMixture","swapMixtures","m1","m2","RenderHTML","htmlFile","withMInChI","mixlist","emitln","gfx","maker","Aspect","allowModify","isColumnReserved","areColumnsReserved","colNames","resMask","rowFirstBlock","rowBlockCount","aspectUnion","initiateNewRow","columnEffectivelyBlank","numTextRenderings","produceTextRendering","numGraphicRenderings","produceGraphicRendering","numHeaderRenderings","produceHeaderRendering","TEXT_PLAIN","TEXT_LINK","TEXT_HTML","supportedAspects","registerAspect","classdef","CODE","NAME","AssayProvenanceHeader","prefixes","targetName","targetURI","organismName","organismURI","targetTypeName","targetTypeURI","cellName","cellURI","assayTypeName","assayTypeURI","assayDescription","sourceName","sourceURI","sourceVersion","documentName","documentURI","measureTypeName","measureTypeURI","unitNames","unitURIs","AssayProvenance","isAssayProvenance","getHeader","parseMetaData","setHeader","formatMetaData","COLNAME_MOLECULE","getName","COLNAME_NAME","COLNAME_VALUE","getError","COLNAME_ERROR","err","COLNAME_UNITS","getRelation","COLNAME_RELATION","getSourceURI","COLNAME_SOURCEURI","setName","setError","setUnits","setRelation","setSourceURI","parseAndCorrect","plainHeading","url","URI_UNIT_M","URI_UNIT_mM","URI_UNIT_uM","URI_UNIT_nM","URI_UNIT_pM","URI_UNIT_logM","URI_UNIT_perM","URI_UNIT_gL","URI_UNIT_mgL","URI_UNIT_ugL","URI_UNIT_binary","MeasurementData","isMeasurementData","fields","effectHeader","ensureFields","rename","fldidx","newName","oldName","sfx","SUFFIX_VALUE","SUFFIX_ERROR","SUFFIX_UNITS","SUFFIX_MOD","reservedColumns","fieldName","getValueField","field","colValue","colError","colUnits","colMod","clearValue","getDescr","setDescr","defnURI","resv","colField","MixtureAttributeType","isMixture","attributes","info","TableExtractType","TableExtract","tableFile","lookupFile","mappingFile","verbose","table","aprov","mdata","lookup","mappings","parseLines","initialMapping","customMapping","extractMixture","sep","aspect","custom","findIndex","appendQuant","stashRatio","Structure","Bound","Ratio","Relation","Link","links","Property","ExportSDFile","colHier","colConc","appendComponent","subseq","ImportSDFile","mixfiles","feed","processBlock","poll","assembleComponents","sdfile","reader","hier","incomp","decodeConcentration","finishRatio","qstr","quant1","quant2","isRatio","TransformMixtureFormat","ALL_TRANSFORMMIXTURE_FORMATS","TransformMixtures","inputFile","inputFormat","outputFile","outputFormat","instream","outstream","nextIndex","roster","fmt","MInChI","SVG","LongMInChIKey","ShortMInChIKey","stdin","Mixfile","pipeMixfile","pipeJSON","SDF","pipeSDF","flushRoster","processMixfile","Console","justHelp","run","printHelp"],"sourceRoot":""}