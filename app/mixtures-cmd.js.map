{"version":3,"file":"mixtures-cmd.js","mappings":"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IAAK,KAC9I,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC7I,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE3Ip6E,KAAKq6E,WAAa,CACd,GACA,kEACA,2EACA,kNACA,ofACA,8dACA,8nBACA,uCACA,mMACA,8LACA,iJACA,mEACA,uCACA,8BACA,4BACA,0CACA,iWACA,0GACA,wSACA,2fACA,8FACA,kWACA,qgBACA,0DACA,0gBACA,4eACA,uDACA,kEACA,gEACA,+DACA,gEACA,4RACA,6qBACA,0FACA,yaACA,mZACA,6QACA,oEACA,8DACA,8UACA,mEACA,kEACA,qKACA,iFACA,wCACA,4FACA,uEACA,uWACA,uRACA,ieACA,2QACA,+aACA,sDACA,mQACA,mEACA,oHACA,wGACA,wEACA,qEACA,oDACA,gCACA,kDACA,sDACA,kCACA,+BACA,ybACA,kTACA,0SACA,uRACA,qSACA,8KACA,gbACA,uKACA,0DACA,yLACA,iFACA,8BACA,gWACA,uKACA,wPACA,2SACA,4SACA,wJACA,2bACA,mMACA,4KACA,iEACA,8GACA,4FACA,yEACA,gEACA,8SACA,iCACA,0SACA,uSACA,GACA,uDACA,oSACA,4PACA,0aACA,0GACA,0DACA,0yBACA,2DACA,wdACA,waACA,wHACA,yCACA,8BACA,idACA,qCACA,6NACA,qFACA,0QACA,gZACA,wCACA,6KACA,qGACA,8BACA,uJACA,8FACA,sOACA,sHACA,+LACA,gVACA,+fACA,2RACA,sHACA,+HACA,8IACA,yTACA,mJACA,mTACA,iIACA,2jBACA,gGACA,yGACA,wHACA,6HACA,8FACA,uGACA,qHACA,0HACA,2SACA,sSACA,mYACA,6YACA,2ZACA,skBACA,gaACA,gHACA,6hBACA,+RACA,ySACA,uTACA,4TACA,6GACA,qRACA,sdACA,qdACA,8dACA,4eACA,wpBACA,ifACA,8oBACA,mtBACA,odACA,iUACA,0UACA,wVACA,6VACA,0DACA,mEACA,iFACA,sFACA,+cACA,sYACA,qRACA,8RACA,4SACA,udACA,iTACA,sFACA,6YACA,wMACA,iNACA,+NACA,oOACA,8GACA,2SACA,kEACA,uCACA,gGACA,8HACA,8BACA,wGACA,uGACA,sGACA,2YACA,4GACA,kWACA,yHACA,0FACA,yaACA,4CACA,iEACA,oEACA,qEACA,mEACA,mYACA,kEACA,iFACA,uDACA,4FACA,uEACA,0FACA,uWACA,qDACA,uRACA,yFACA,sDACA,wEACA,ydACA,wGACA,8RACA,8TACA,0HACA,gIACA,0TACA,ohBACA,gNACA,kEACA,uSACA,sRACA,meACA,0EACA,mXACA,+eACA,iYACA,4KACA,gcACA,8BACA,oLACA,8DACA,kKACA,iEACA,okBACA,wPACA,kDACA,6RACA,uWACA,wQACA,kDACA,yMACA,2UACA,+FACA,uRACA,+gBACA,sFACA,kQACA,6RACA,6OACA,mjBACA,6cACA,iEACA,2EACA,4FACA,iCACA,0CACA,8BACA,0EACA,8hBACA,iRACA,qcACA,gIACA,6FACA,6FAEJr6E,KAAKs6E,UAAY,CACb,GAAI,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KACvG,CAAC,IAAK,IAAK,IAAK,OAAQ,KAAM,KAAM,IAAK,IAAK,MAAO,MAAO,IAAK,KAAM,CAAC,IAAK,MAAO,IAAK,IAAK,KAAM,OAAQ,KAAM,OAAQ,KAAM,OAAQ,KAAM,KAAM,IAAK,MAAO,IAAK,OACrK,CAAC,IAAK,MAAO,MAAO,MAAO,IAAK,KAAM,KAAM,MAAO,IAAK,MAAO,IAAK,MAAO,IAAK,MAAO,KAAM,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,IAAK,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAC9J,C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,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KAEtIx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","sources":["webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/get-electron-binding.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/module-names.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/type-utils.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/callbacks-registry.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/index.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/remote.js","webpack://Mixtures/./node_modules/@electron/remote/renderer/index.js","webpack://Mixtures/./node_modules/stream-chain/index.js","webpack://Mixtures/./node_modules/stream-json/Assembler.js","webpack://Mixtures/./node_modules/stream-json/Parser.js","webpack://Mixtures/./node_modules/stream-json/streamers/StreamArray.js","webpack://Mixtures/./node_modules/stream-json/streamers/StreamBase.js","webpack://Mixtures/./node_modules/stream-json/utils/Utf8Stream.js","webpack://Mixtures/./node_modules/stream-json/utils/withParser.js","webpack://Mixtures/external node-commonjs \"child_process\"","webpack://Mixtures/external node-commonjs \"electron\"","webpack://Mixtures/external node-commonjs \"events\"","webpack://Mixtures/external node-commonjs \"https\"","webpack://Mixtures/external node-commonjs \"process\"","webpack://Mixtures/external node-commonjs \"stream\"","webpack://Mixtures/external node-commonjs \"string_decoder\"","webpack://Mixtures/webpack/bootstrap","webpack://Mixtures/webpack/runtime/define property getters","webpack://Mixtures/webpack/runtime/hasOwnProperty shorthand","webpack://Mixtures/webpack/runtime/make namespace object","webpack://Mixtures/./node_modules/webmolkit/util/Vec.js","webpack://Mixtures/./node_modules/webmolkit/util/Matrix.js","webpack://Mixtures/./node_modules/webmolkit/util/util.js","webpack://Mixtures/./node_modules/webmolkit/util/Triangulation2D.js","webpack://Mixtures/./node_modules/webmolkit/util/Geom.js","webpack://Mixtures/./node_modules/webmolkit/util/XML.js","webpack://Mixtures/./node_modules/webmolkit/util/dom.js","webpack://Mixtures/./node_modules/webmolkit/util/Theme.js","webpack://Mixtures/./node_modules/webmolkit/ui/Tooltip.js","webpack://Mixtures/./node_modules/webmolkit/ui/Widget.js","webpack://Mixtures/./src/data/Mixture.ts","webpack://Mixtures/./src/data/Mixfile.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/Rendering.js","webpack://Mixtures/./node_modules/webmolkit/data/Graph.js","webpack://Mixtures/./node_modules/webmolkit/data/BondArtifact.js","webpack://Mixtures/./node_modules/webmolkit/data/Chemistry.js","webpack://Mixtures/./node_modules/webmolkit/calc/ResonanceRemover.js","webpack://Mixtures/./node_modules/webmolkit/data/DataSheet.js","webpack://Mixtures/./node_modules/webmolkit/data/ForeignMolecule.js","webpack://Mixtures/./node_modules/webmolkit/data/PolymerBlock.js","webpack://Mixtures/./node_modules/webmolkit/data/SketchUtil.js","webpack://Mixtures/./node_modules/webmolkit/data/QueryUtil.js","webpack://Mixtures/./node_modules/webmolkit/data/MolUtil.js","webpack://Mixtures/./node_modules/webmolkit/data/StereoGroup.js","webpack://Mixtures/./node_modules/webmolkit/data/MDLReader.js","webpack://Mixtures/./node_modules/webmolkit/data/MDLWriter.js","webpack://Mixtures/./node_modules/webmolkit/data/MoleculeStream.js","webpack://Mixtures/./node_modules/webmolkit/data/Molecule.js","webpack://Mixtures/./node_modules/webmolkit/data/CoordUtil.js","webpack://Mixtures/./node_modules/webmolkit/util/FitRotatedEllipse.js","webpack://Mixtures/./node_modules/webmolkit/gfx/FontData.js","webpack://Mixtures/./node_modules/webmolkit/gfx/ArrangeMolecule.js","webpack://Mixtures/./node_modules/webmolkit/data/OntologyTree.js","webpack://Mixtures/./src/mixture/SquarePacking.ts","webpack://Mixtures/./src/mixture/ArrangeMixture.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/MetaVector.js","webpack://Mixtures/./node_modules/webmolkit/ui/ButtonView.js","webpack://Mixtures/./node_modules/webmolkit/data/DotPath.js","webpack://Mixtures/./node_modules/webmolkit/data/DataSheetStream.js","webpack://Mixtures/./node_modules/webmolkit/gfx/DrawMolecule.js","webpack://Mixtures/./node_modules/webmolkit/ui/ButtonBank.js","webpack://Mixtures/./node_modules/webmolkit/data/Stereochemistry.js","webpack://Mixtures/./node_modules/webmolkit/data/MetaMolecule.js","webpack://Mixtures/./node_modules/webmolkit/calc/CircularFingerprints.js","webpack://Mixtures/./node_modules/webmolkit/data/AbbrevContainer.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/MetalLigate.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/TemplateFusion.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/MoleculeActivity.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/CommandBank.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/ContextSketch.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/DrawCanvas.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/GeomWidget.js","webpack://Mixtures/./node_modules/webmolkit/dialog/Dialog.js","webpack://Mixtures/./node_modules/webmolkit/gfx/ArrangeMeasurement.js","webpack://Mixtures/./node_modules/webmolkit/ui/ClipboardProxy.js","webpack://Mixtures/./node_modules/webmolkit/ui/OptionList.js","webpack://Mixtures/./node_modules/webmolkit/ui/TabBar.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/ExtraFieldsWidget.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/PeriodicTableWidget.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/QueryFieldsWidget.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/EditAtom.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/EditBond.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/EditPolymer.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/TemplateBank.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/ToolBank.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/Sketcher.js","webpack://Mixtures/./src/data/Units.ts","webpack://Mixtures/./src/mixture/EditComponent.ts","webpack://Mixtures/./src/data/NormMixture.ts","webpack://Mixtures/./src/mixture/DrawMixture.ts","webpack://Mixtures/./src/mixture/EditMixture.ts","webpack://Mixtures/./src/main/MenuBanner.ts","webpack://Mixtures/./src/mixture/ExportMInChI.ts","webpack://Mixtures/./src/mixture/ExportSDFile.ts","webpack://Mixtures/external node-commonjs \"fs\"","webpack://Mixtures/external node-commonjs \"path\"","webpack://Mixtures/./src/main/MixturePanel.ts","webpack://Mixtures/./src/startup.ts","webpack://Mixtures/./src/data/InChI.ts","webpack://Mixtures/./src/data/MixtureCollection.ts","webpack://Mixtures/./src/cmdline/RenderHTML.ts","webpack://Mixtures/./node_modules/webmolkit/aspect/Aspect.js","webpack://Mixtures/./node_modules/webmolkit/aspect/AspectList.js","webpack://Mixtures/./node_modules/webmolkit/aspect/AssayProvenance.js","webpack://Mixtures/./node_modules/webmolkit/aspect/MeasurementData.js","webpack://Mixtures/./node_modules/webmolkit/aspect/Mixture.js","webpack://Mixtures/./src/cmdline/TableExtract.ts","webpack://Mixtures/./src/mixture/ImportSDFile.ts","webpack://Mixtures/./src/cmdline/TransformMixtures.ts","webpack://Mixtures/./src/cmdline/Console.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getElectronBinding = void 0;\nconst getElectronBinding = (name) => {\n    if (process._linkedBinding) {\n        return process._linkedBinding('electron_common_' + name);\n    }\n    else if (process.electronBinding) {\n        return process.electronBinding(name);\n    }\n    else {\n        return null;\n    }\n};\nexports.getElectronBinding = getElectronBinding;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.browserModuleNames = exports.commonModuleNames = void 0;\nconst get_electron_binding_1 = require(\"./get-electron-binding\");\nexports.commonModuleNames = [\n    'clipboard',\n    'nativeImage',\n    'shell',\n];\nexports.browserModuleNames = [\n    'app',\n    'autoUpdater',\n    'BaseWindow',\n    'BrowserView',\n    'BrowserWindow',\n    'contentTracing',\n    'crashReporter',\n    'dialog',\n    'globalShortcut',\n    'ipcMain',\n    'inAppPurchase',\n    'Menu',\n    'MenuItem',\n    'nativeTheme',\n    'net',\n    'netLog',\n    'MessageChannelMain',\n    'Notification',\n    'powerMonitor',\n    'powerSaveBlocker',\n    'protocol',\n    'pushNotifications',\n    'safeStorage',\n    'screen',\n    'session',\n    'ShareMenu',\n    'systemPreferences',\n    'TopLevelWindow',\n    'TouchBar',\n    'Tray',\n    'utilityProcess',\n    'View',\n    'webContents',\n    'WebContentsView',\n    'webFrameMain',\n].concat(exports.commonModuleNames);\nconst features = get_electron_binding_1.getElectronBinding('features');\nif (!features || !features.isDesktopCapturerEnabled || features.isDesktopCapturerEnabled()) {\n    exports.browserModuleNames.push('desktopCapturer');\n}\nif (!features || features.isViewApiEnabled()) {\n    exports.browserModuleNames.push('ImageView');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserialize = exports.serialize = exports.isSerializableObject = exports.isPromise = void 0;\nconst electron_1 = require(\"electron\");\nfunction isPromise(val) {\n    return (val &&\n        val.then &&\n        val.then instanceof Function &&\n        val.constructor &&\n        val.constructor.reject &&\n        val.constructor.reject instanceof Function &&\n        val.constructor.resolve &&\n        val.constructor.resolve instanceof Function);\n}\nexports.isPromise = isPromise;\nconst serializableTypes = [\n    Boolean,\n    Number,\n    String,\n    Date,\n    Error,\n    RegExp,\n    ArrayBuffer\n];\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm#Supported_types\nfunction isSerializableObject(value) {\n    return value === null || ArrayBuffer.isView(value) || serializableTypes.some(type => value instanceof type);\n}\nexports.isSerializableObject = isSerializableObject;\nconst objectMap = function (source, mapper) {\n    const sourceEntries = Object.entries(source);\n    const targetEntries = sourceEntries.map(([key, val]) => [key, mapper(val)]);\n    return Object.fromEntries(targetEntries);\n};\nfunction serializeNativeImage(image) {\n    const representations = [];\n    const scaleFactors = image.getScaleFactors();\n    // Use Buffer when there's only one representation for better perf.\n    // This avoids compressing to/from PNG where it's not necessary to\n    // ensure uniqueness of dataURLs (since there's only one).\n    if (scaleFactors.length === 1) {\n        const scaleFactor = scaleFactors[0];\n        const size = image.getSize(scaleFactor);\n        const buffer = image.toBitmap({ scaleFactor });\n        representations.push({ scaleFactor, size, buffer });\n    }\n    else {\n        // Construct from dataURLs to ensure that they are not lost in creation.\n        for (const scaleFactor of scaleFactors) {\n            const size = image.getSize(scaleFactor);\n            const dataURL = image.toDataURL({ scaleFactor });\n            representations.push({ scaleFactor, size, dataURL });\n        }\n    }\n    return { __ELECTRON_SERIALIZED_NativeImage__: true, representations };\n}\nfunction deserializeNativeImage(value) {\n    const image = electron_1.nativeImage.createEmpty();\n    // Use Buffer when there's only one representation for better perf.\n    // This avoids compressing to/from PNG where it's not necessary to\n    // ensure uniqueness of dataURLs (since there's only one).\n    if (value.representations.length === 1) {\n        const { buffer, size, scaleFactor } = value.representations[0];\n        const { width, height } = size;\n        image.addRepresentation({ buffer, scaleFactor, width, height });\n    }\n    else {\n        // Construct from dataURLs to ensure that they are not lost in creation.\n        for (const rep of value.representations) {\n            const { dataURL, size, scaleFactor } = rep;\n            const { width, height } = size;\n            image.addRepresentation({ dataURL, scaleFactor, width, height });\n        }\n    }\n    return image;\n}\nfunction serialize(value) {\n    if (value && value.constructor && value.constructor.name === 'NativeImage') {\n        return serializeNativeImage(value);\n    }\n    if (Array.isArray(value)) {\n        return value.map(serialize);\n    }\n    else if (isSerializableObject(value)) {\n        return value;\n    }\n    else if (value instanceof Object) {\n        return objectMap(value, serialize);\n    }\n    else {\n        return value;\n    }\n}\nexports.serialize = serialize;\nfunction deserialize(value) {\n    if (value && value.__ELECTRON_SERIALIZED_NativeImage__) {\n        return deserializeNativeImage(value);\n    }\n    else if (Array.isArray(value)) {\n        return value.map(deserialize);\n    }\n    else if (isSerializableObject(value)) {\n        return value;\n    }\n    else if (value instanceof Object) {\n        return objectMap(value, deserialize);\n    }\n    else {\n        return value;\n    }\n}\nexports.deserialize = deserialize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallbacksRegistry = void 0;\nclass CallbacksRegistry {\n    constructor() {\n        this.nextId = 0;\n        this.callbacks = {};\n        this.callbackIds = new WeakMap();\n        this.locationInfo = new WeakMap();\n    }\n    add(callback) {\n        // The callback is already added.\n        let id = this.callbackIds.get(callback);\n        if (id != null)\n            return id;\n        id = this.nextId += 1;\n        this.callbacks[id] = callback;\n        this.callbackIds.set(callback, id);\n        // Capture the location of the function and put it in the ID string,\n        // so that release errors can be tracked down easily.\n        const regexp = /at (.*)/gi;\n        const stackString = (new Error()).stack;\n        if (!stackString)\n            return id;\n        let filenameAndLine;\n        let match;\n        while ((match = regexp.exec(stackString)) !== null) {\n            const location = match[1];\n            if (location.includes('(native)'))\n                continue;\n            if (location.includes('(<anonymous>)'))\n                continue;\n            if (location.includes('callbacks-registry.js'))\n                continue;\n            if (location.includes('remote.js'))\n                continue;\n            if (location.includes('@electron/remote/dist'))\n                continue;\n            const ref = /([^/^)]*)\\)?$/gi.exec(location);\n            if (ref)\n                filenameAndLine = ref[1];\n            break;\n        }\n        this.locationInfo.set(callback, filenameAndLine);\n        return id;\n    }\n    get(id) {\n        return this.callbacks[id] || function () { };\n    }\n    getLocation(callback) {\n        return this.locationInfo.get(callback);\n    }\n    apply(id, ...args) {\n        return this.get(id).apply(global, ...args);\n    }\n    remove(id) {\n        const callback = this.callbacks[id];\n        if (callback) {\n            this.callbackIds.delete(callback);\n            delete this.callbacks[id];\n        }\n    }\n}\nexports.CallbacksRegistry = CallbacksRegistry;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nif (process.type === 'browser')\n    throw new Error(`\"@electron/remote\" cannot be required in the browser process. Instead require(\"@electron/remote/main\").`);\n__exportStar(require(\"./remote\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createFunctionWithReturnValue = exports.getGlobal = exports.getCurrentWebContents = exports.getCurrentWindow = exports.getBuiltin = void 0;\nconst callbacks_registry_1 = require(\"./callbacks-registry\");\nconst type_utils_1 = require(\"../common/type-utils\");\nconst electron_1 = require(\"electron\");\nconst module_names_1 = require(\"../common/module-names\");\nconst get_electron_binding_1 = require(\"../common/get-electron-binding\");\nconst { Promise } = global;\nconst callbacksRegistry = new callbacks_registry_1.CallbacksRegistry();\nconst remoteObjectCache = new Map();\nconst finalizationRegistry = new FinalizationRegistry((id) => {\n    const ref = remoteObjectCache.get(id);\n    if (ref !== undefined && ref.deref() === undefined) {\n        remoteObjectCache.delete(id);\n        electron_1.ipcRenderer.send(\"REMOTE_BROWSER_DEREFERENCE\" /* BROWSER_DEREFERENCE */, contextId, id, 0);\n    }\n});\nconst electronIds = new WeakMap();\nconst isReturnValue = new WeakSet();\nfunction getCachedRemoteObject(id) {\n    const ref = remoteObjectCache.get(id);\n    if (ref !== undefined) {\n        const deref = ref.deref();\n        if (deref !== undefined)\n            return deref;\n    }\n}\nfunction setCachedRemoteObject(id, value) {\n    const wr = new WeakRef(value);\n    remoteObjectCache.set(id, wr);\n    finalizationRegistry.register(value, id);\n    return value;\n}\nfunction getContextId() {\n    const v8Util = get_electron_binding_1.getElectronBinding('v8_util');\n    if (v8Util) {\n        return v8Util.getHiddenValue(global, 'contextId');\n    }\n    else {\n        throw new Error('Electron >=v13.0.0-beta.6 required to support sandboxed renderers');\n    }\n}\n// An unique ID that can represent current context.\nconst contextId = process.contextId || getContextId();\n// Notify the main process when current context is going to be released.\n// Note that when the renderer process is destroyed, the message may not be\n// sent, we also listen to the \"render-view-deleted\" event in the main process\n// to guard that situation.\nprocess.on('exit', () => {\n    const command = \"REMOTE_BROWSER_CONTEXT_RELEASE\" /* BROWSER_CONTEXT_RELEASE */;\n    electron_1.ipcRenderer.send(command, contextId);\n});\nconst IS_REMOTE_PROXY = Symbol('is-remote-proxy');\n// Convert the arguments object into an array of meta data.\nfunction wrapArgs(args, visited = new Set()) {\n    const valueToMeta = (value) => {\n        // Check for circular reference.\n        if (visited.has(value)) {\n            return {\n                type: 'value',\n                value: null\n            };\n        }\n        if (value && value.constructor && value.constructor.name === 'NativeImage') {\n            return { type: 'nativeimage', value: type_utils_1.serialize(value) };\n        }\n        else if (Array.isArray(value)) {\n            visited.add(value);\n            const meta = {\n                type: 'array',\n                value: wrapArgs(value, visited)\n            };\n            visited.delete(value);\n            return meta;\n        }\n        else if (value instanceof Buffer) {\n            return {\n                type: 'buffer',\n                value\n            };\n        }\n        else if (type_utils_1.isSerializableObject(value)) {\n            return {\n                type: 'value',\n                value\n            };\n        }\n        else if (typeof value === 'object') {\n            if (type_utils_1.isPromise(value)) {\n                return {\n                    type: 'promise',\n                    then: valueToMeta(function (onFulfilled, onRejected) {\n                        value.then(onFulfilled, onRejected);\n                    })\n                };\n            }\n            else if (electronIds.has(value)) {\n                return {\n                    type: 'remote-object',\n                    id: electronIds.get(value)\n                };\n            }\n            const meta = {\n                type: 'object',\n                name: value.constructor ? value.constructor.name : '',\n                members: []\n            };\n            visited.add(value);\n            for (const prop in value) { // eslint-disable-line guard-for-in\n                meta.members.push({\n                    name: prop,\n                    value: valueToMeta(value[prop])\n                });\n            }\n            visited.delete(value);\n            return meta;\n        }\n        else if (typeof value === 'function' && isReturnValue.has(value)) {\n            return {\n                type: 'function-with-return-value',\n                value: valueToMeta(value())\n            };\n        }\n        else if (typeof value === 'function') {\n            return {\n                type: 'function',\n                id: callbacksRegistry.add(value),\n                location: callbacksRegistry.getLocation(value),\n                length: value.length\n            };\n        }\n        else {\n            return {\n                type: 'value',\n                value\n            };\n        }\n    };\n    return args.map(valueToMeta);\n}\n// Populate object's members from descriptors.\n// The |ref| will be kept referenced by |members|.\n// This matches |getObjectMemebers| in rpc-server.\nfunction setObjectMembers(ref, object, metaId, members) {\n    if (!Array.isArray(members))\n        return;\n    for (const member of members) {\n        if (Object.prototype.hasOwnProperty.call(object, member.name))\n            continue;\n        const descriptor = { enumerable: member.enumerable };\n        if (member.type === 'method') {\n            const remoteMemberFunction = function (...args) {\n                let command;\n                if (this && this.constructor === remoteMemberFunction) {\n                    command = \"REMOTE_BROWSER_MEMBER_CONSTRUCTOR\" /* BROWSER_MEMBER_CONSTRUCTOR */;\n                }\n                else {\n                    command = \"REMOTE_BROWSER_MEMBER_CALL\" /* BROWSER_MEMBER_CALL */;\n                }\n                const ret = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name, wrapArgs(args));\n                return metaToValue(ret);\n            };\n            let descriptorFunction = proxyFunctionProperties(remoteMemberFunction, metaId, member.name);\n            descriptor.get = () => {\n                descriptorFunction.ref = ref; // The member should reference its object.\n                return descriptorFunction;\n            };\n            // Enable monkey-patch the method\n            descriptor.set = (value) => {\n                descriptorFunction = value;\n                return value;\n            };\n            descriptor.configurable = true;\n        }\n        else if (member.type === 'get') {\n            descriptor.get = () => {\n                const command = \"REMOTE_BROWSER_MEMBER_GET\" /* BROWSER_MEMBER_GET */;\n                const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name);\n                return metaToValue(meta);\n            };\n            if (member.writable) {\n                descriptor.set = (value) => {\n                    const args = wrapArgs([value]);\n                    const command = \"REMOTE_BROWSER_MEMBER_SET\" /* BROWSER_MEMBER_SET */;\n                    const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name, args);\n                    if (meta != null)\n                        metaToValue(meta);\n                    return value;\n                };\n            }\n        }\n        Object.defineProperty(object, member.name, descriptor);\n    }\n}\n// Populate object's prototype from descriptor.\n// This matches |getObjectPrototype| in rpc-server.\nfunction setObjectPrototype(ref, object, metaId, descriptor) {\n    if (descriptor === null)\n        return;\n    const proto = {};\n    setObjectMembers(ref, proto, metaId, descriptor.members);\n    setObjectPrototype(ref, proto, metaId, descriptor.proto);\n    Object.setPrototypeOf(object, proto);\n}\n// Wrap function in Proxy for accessing remote properties\nfunction proxyFunctionProperties(remoteMemberFunction, metaId, name) {\n    let loaded = false;\n    // Lazily load function properties\n    const loadRemoteProperties = () => {\n        if (loaded)\n            return;\n        loaded = true;\n        const command = \"REMOTE_BROWSER_MEMBER_GET\" /* BROWSER_MEMBER_GET */;\n        const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, name);\n        setObjectMembers(remoteMemberFunction, remoteMemberFunction, meta.id, meta.members);\n    };\n    return new Proxy(remoteMemberFunction, {\n        set: (target, property, value) => {\n            if (property !== 'ref')\n                loadRemoteProperties();\n            target[property] = value;\n            return true;\n        },\n        get: (target, property) => {\n            if (property === IS_REMOTE_PROXY)\n                return true;\n            if (!Object.prototype.hasOwnProperty.call(target, property))\n                loadRemoteProperties();\n            const value = target[property];\n            if (property === 'toString' && typeof value === 'function') {\n                return value.bind(target);\n            }\n            return value;\n        },\n        ownKeys: (target) => {\n            loadRemoteProperties();\n            return Object.getOwnPropertyNames(target);\n        },\n        getOwnPropertyDescriptor: (target, property) => {\n            const descriptor = Object.getOwnPropertyDescriptor(target, property);\n            if (descriptor)\n                return descriptor;\n            loadRemoteProperties();\n            return Object.getOwnPropertyDescriptor(target, property);\n        }\n    });\n}\n// Convert meta data from browser into real value.\nfunction metaToValue(meta) {\n    if (meta.type === 'value') {\n        return meta.value;\n    }\n    else if (meta.type === 'array') {\n        return meta.members.map((member) => metaToValue(member));\n    }\n    else if (meta.type === 'nativeimage') {\n        return type_utils_1.deserialize(meta.value);\n    }\n    else if (meta.type === 'buffer') {\n        return Buffer.from(meta.value.buffer, meta.value.byteOffset, meta.value.byteLength);\n    }\n    else if (meta.type === 'promise') {\n        return Promise.resolve({ then: metaToValue(meta.then) });\n    }\n    else if (meta.type === 'error') {\n        return metaToError(meta);\n    }\n    else if (meta.type === 'exception') {\n        if (meta.value.type === 'error') {\n            throw metaToError(meta.value);\n        }\n        else {\n            throw new Error(`Unexpected value type in exception: ${meta.value.type}`);\n        }\n    }\n    else {\n        let ret;\n        if ('id' in meta) {\n            const cached = getCachedRemoteObject(meta.id);\n            if (cached !== undefined) {\n                return cached;\n            }\n        }\n        // A shadow class to represent the remote function object.\n        if (meta.type === 'function') {\n            const remoteFunction = function (...args) {\n                let command;\n                if (this && this.constructor === remoteFunction) {\n                    command = \"REMOTE_BROWSER_CONSTRUCTOR\" /* BROWSER_CONSTRUCTOR */;\n                }\n                else {\n                    command = \"REMOTE_BROWSER_FUNCTION_CALL\" /* BROWSER_FUNCTION_CALL */;\n                }\n                const obj = electron_1.ipcRenderer.sendSync(command, contextId, meta.id, wrapArgs(args));\n                return metaToValue(obj);\n            };\n            ret = remoteFunction;\n        }\n        else {\n            ret = {};\n        }\n        setObjectMembers(ret, ret, meta.id, meta.members);\n        setObjectPrototype(ret, ret, meta.id, meta.proto);\n        if (ret.constructor && ret.constructor[IS_REMOTE_PROXY]) {\n            Object.defineProperty(ret.constructor, 'name', { value: meta.name });\n        }\n        // Track delegate obj's lifetime & tell browser to clean up when object is GCed.\n        electronIds.set(ret, meta.id);\n        setCachedRemoteObject(meta.id, ret);\n        return ret;\n    }\n}\nfunction metaToError(meta) {\n    const obj = meta.value;\n    for (const { name, value } of meta.members) {\n        obj[name] = metaToValue(value);\n    }\n    return obj;\n}\nfunction handleMessage(channel, handler) {\n    electron_1.ipcRenderer.on(channel, (event, passedContextId, id, ...args) => {\n        if (event.senderId !== 0) {\n            console.error(`Message ${channel} sent by unexpected WebContents (${event.senderId})`);\n            return;\n        }\n        if (passedContextId === contextId) {\n            handler(id, ...args);\n        }\n        else {\n            // Message sent to an un-exist context, notify the error to main process.\n            electron_1.ipcRenderer.send(\"REMOTE_BROWSER_WRONG_CONTEXT_ERROR\" /* BROWSER_WRONG_CONTEXT_ERROR */, contextId, passedContextId, id);\n        }\n    });\n}\nconst enableStacks = process.argv.includes('--enable-api-filtering-logging');\nfunction getCurrentStack() {\n    const target = { stack: undefined };\n    if (enableStacks) {\n        Error.captureStackTrace(target, getCurrentStack);\n    }\n    return target.stack;\n}\n// Browser calls a callback in renderer.\nhandleMessage(\"REMOTE_RENDERER_CALLBACK\" /* RENDERER_CALLBACK */, (id, args) => {\n    callbacksRegistry.apply(id, metaToValue(args));\n});\n// A callback in browser is released.\nhandleMessage(\"REMOTE_RENDERER_RELEASE_CALLBACK\" /* RENDERER_RELEASE_CALLBACK */, (id) => {\n    callbacksRegistry.remove(id);\n});\nexports.require = (module) => {\n    const command = \"REMOTE_BROWSER_REQUIRE\" /* BROWSER_REQUIRE */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, module, getCurrentStack());\n    return metaToValue(meta);\n};\n// Alias to remote.require('electron').xxx.\nfunction getBuiltin(module) {\n    const command = \"REMOTE_BROWSER_GET_BUILTIN\" /* BROWSER_GET_BUILTIN */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, module, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getBuiltin = getBuiltin;\nfunction getCurrentWindow() {\n    const command = \"REMOTE_BROWSER_GET_CURRENT_WINDOW\" /* BROWSER_GET_CURRENT_WINDOW */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getCurrentWindow = getCurrentWindow;\n// Get current WebContents object.\nfunction getCurrentWebContents() {\n    const command = \"REMOTE_BROWSER_GET_CURRENT_WEB_CONTENTS\" /* BROWSER_GET_CURRENT_WEB_CONTENTS */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getCurrentWebContents = getCurrentWebContents;\n// Get a global object in browser.\nfunction getGlobal(name) {\n    const command = \"REMOTE_BROWSER_GET_GLOBAL\" /* BROWSER_GET_GLOBAL */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, name, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getGlobal = getGlobal;\n// Get the process object in browser.\nObject.defineProperty(exports, 'process', {\n    enumerable: true,\n    get: () => exports.getGlobal('process')\n});\n// Create a function that will return the specified value when called in browser.\nfunction createFunctionWithReturnValue(returnValue) {\n    const func = () => returnValue;\n    isReturnValue.add(func);\n    return func;\n}\nexports.createFunctionWithReturnValue = createFunctionWithReturnValue;\nconst addBuiltinProperty = (name) => {\n    Object.defineProperty(exports, name, {\n        enumerable: true,\n        get: () => exports.getBuiltin(name)\n    });\n};\nmodule_names_1.browserModuleNames\n    .forEach(addBuiltinProperty);\n","module.exports = require('../dist/src/renderer')\n","'use strict';\n\nconst {Readable, Writable, Duplex, Transform} = require('stream');\n\nconst none = Symbol.for('object-stream.none');\nconst finalSymbol = Symbol.for('object-stream.final');\nconst manySymbol = Symbol.for('object-stream.many');\n\nconst final = value => ({[finalSymbol]: value});\nconst many = values => ({[manySymbol]: values});\n\nconst isFinal = o => o && typeof o == 'object' && finalSymbol in o;\nconst isMany = o => o && typeof o == 'object' && manySymbol in o;\n\nconst getFinalValue = o => o[finalSymbol];\nconst getManyValues = o => o[manySymbol];\n\nconst runAsyncGenerator = async (gen, stream) => {\n  for (;;) {\n    let data = gen.next();\n    if (data && typeof data.then == 'function') {\n      data = await data;\n    }\n    if (data.done) break;\n    let value = data.value;\n    if (value && typeof value.then == 'function') {\n      value = await value;\n    }\n    Chain.sanitize(value, stream);\n  }\n};\n\nconst wrapFunction = fn =>\n  new Transform({\n    writableObjectMode: true,\n    readableObjectMode: true,\n    transform(chunk, encoding, callback) {\n      try {\n        const result = fn.call(this, chunk, encoding);\n        if (result && typeof result.then == 'function') {\n          // thenable\n          result.then(\n            result => (Chain.sanitize(result, this), callback(null)),\n            error => callback(error)\n          );\n          return;\n        }\n        if (result && typeof result.next == 'function') {\n          // generator\n          runAsyncGenerator(result, this).then(\n            () => callback(null),\n            error => callback(error)\n          );\n          return;\n        }\n        Chain.sanitize(result, this);\n        callback(null);\n      } catch (error) {\n        callback(error);\n      }\n    }\n  });\n\nconst wrapArray = fns =>\n  new Transform({\n    writableObjectMode: true,\n    readableObjectMode: true,\n    transform(chunk, encoding, callback) {\n      try {\n        let value = chunk;\n        for (let i = 0; i < fns.length; ++i) {\n          const result = fns[i].call(this, value, encoding);\n          if (result === Chain.none) {\n            callback(null);\n            return;\n          }\n          if (Chain.isFinal(result)) {\n            value = Chain.getFinalValue(result);\n            break;\n          }\n          value = result;\n        }\n        Chain.sanitize(value, this);\n        callback(null);\n      } catch (error) {\n        callback(error);\n      }\n    }\n  });\n\n// is*NodeStream functions taken from https://github.com/nodejs/node/blob/master/lib/internal/streams/utils.js\nconst isReadableNodeStream = obj =>\n  obj &&\n  typeof obj.pipe === 'function' &&\n  typeof obj.on === 'function' &&\n  (!obj._writableState || (typeof obj._readableState === 'object' ? obj._readableState.readable : null) !== false) && // Duplex\n  (!obj._writableState || obj._readableState); // Writable has .pipe.\n\nconst isWritableNodeStream = obj =>\n  obj &&\n  typeof obj.write === 'function' &&\n  typeof obj.on === 'function' &&\n  (!obj._readableState || (typeof obj._writableState === 'object' ? obj._writableState.writable : null) !== false); // Duplex\n\nconst isDuplexNodeStream = obj =>\n  obj && typeof obj.pipe === 'function' && obj._readableState && typeof obj.on === 'function' && typeof obj.write === 'function';\n\nclass Chain extends Duplex {\n  constructor(fns, options) {\n    super(options || {writableObjectMode: true, readableObjectMode: true});\n\n    if (!(fns instanceof Array) || !fns.length) {\n      throw Error(\"Chain's argument should be a non-empty array.\");\n    }\n\n    this.streams = fns\n      .filter(fn => fn)\n      .map((fn, index, fns) => {\n        if (typeof fn === 'function' || fn instanceof Array) return Chain.convertToTransform(fn);\n        if (isDuplexNodeStream(fn) || (!index && isReadableNodeStream(fn)) || (index === fns.length - 1 && isWritableNodeStream(fn))) {\n          return fn;\n        }\n        throw Error('Arguments should be functions, arrays or streams.');\n      })\n      .filter(s => s);\n    this.input = this.streams[0];\n    this.output = this.streams.reduce((output, stream) => (output && output.pipe(stream)) || stream);\n\n    if (!isWritableNodeStream(this.input)) {\n      this._write = (_1, _2, callback) => callback(null);\n      this._final = callback => callback(null); // unavailable in Node 6\n      this.input.on('end', () => this.end());\n    }\n\n    if (isReadableNodeStream(this.output)) {\n      this.output.on('data', chunk => !this.push(chunk) && this.output.pause());\n      this.output.on('end', () => this.push(null));\n    } else {\n      this._read = () => {}; // nop\n      this.resume();\n      this.output.on('finish', () => this.push(null));\n    }\n\n    // connect events\n    if (!options || !options.skipEvents) {\n      this.streams.forEach(stream => stream.on('error', error => this.emit('error', error)));\n    }\n  }\n  _write(chunk, encoding, callback) {\n    let error = null;\n    try {\n      this.input.write(chunk, encoding, e => callback(e || error));\n    } catch (e) {\n      error = e;\n    }\n  }\n  _final(callback) {\n    let error = null;\n    try {\n      this.input.end(null, null, e => callback(e || error));\n    } catch (e) {\n      error = e;\n    }\n  }\n  _read() {\n    this.output.resume();\n  }\n  static make(fns, options) {\n    return new Chain(fns, options);\n  }\n  static sanitize(result, stream) {\n    if (Chain.isFinal(result)) {\n      result = Chain.getFinalValue(result);\n    } else if (Chain.isMany(result)) {\n      result = Chain.getManyValues(result);\n    }\n    if (result !== undefined && result !== null && result !== Chain.none) {\n      if (result instanceof Array) {\n        result.forEach(value => value !== undefined && value !== null && stream.push(value));\n      } else {\n        stream.push(result);\n      }\n    }\n  }\n  static convertToTransform(fn) {\n    if (typeof fn === 'function') return wrapFunction(fn);\n    if (fn instanceof Array) return fn.length ? wrapArray(fn) : null;\n    return null;\n  }\n}\n\nChain.none = none;\nChain.final = final;\nChain.isFinal = isFinal;\nChain.getFinalValue = getFinalValue;\nChain.many = many;\nChain.isMany = isMany;\nChain.getManyValues = getManyValues;\n\nChain.chain = Chain.make;\nChain.make.Constructor = Chain;\n\nmodule.exports = Chain;\n","'use strict';\n\nconst EventEmitter = require('events');\n\nconst startObject = Ctr =>\n  function () {\n    if (this.done) {\n      this.done = false;\n    } else {\n      this.stack.push(this.current, this.key);\n    }\n    this.current = new Ctr();\n    this.key = null;\n  };\n\nclass Assembler extends EventEmitter {\n  static connectTo(stream, options) {\n    return new Assembler(options).connectTo(stream);\n  }\n\n  constructor(options) {\n    super();\n    this.stack = [];\n    this.current = this.key = null;\n    this.done = true;\n    if (options) {\n      this.reviver = typeof options.reviver == 'function' && options.reviver;\n      if (this.reviver) {\n        this.stringValue = this._saveValue = this._saveValueWithReviver;\n      }\n      if (options.numberAsString) {\n        this.numberValue = this.stringValue;\n      }\n    }\n  }\n\n  connectTo(stream) {\n    stream.on('data', chunk => {\n      if (this[chunk.name]) {\n        this[chunk.name](chunk.value);\n        if (this.done) this.emit('done', this);\n      }\n    });\n    return this;\n  }\n\n  get depth() {\n    return (this.stack.length >> 1) + (this.done ? 0 : 1);\n  }\n\n  get path() {\n    const path = [];\n    for (let i = 0; i < this.stack.length; i += 2) {\n      const key = this.stack[i + 1];\n      path.push(key === null ? this.stack[i].length : key);\n    }\n    return path;\n  }\n\n  dropToLevel(level) {\n    if (level < this.depth) {\n      if (level) {\n        const index = (level - 1) << 1;\n        this.current = this.stack[index];\n        this.key = this.stack[index + 1];\n        this.stack.splice(index);\n      } else {\n        this.stack = [];\n        this.current = this.key = null;\n        this.done = true;\n      }\n    }\n    return this;\n  }\n\n  consume(chunk) {\n    this[chunk.name] && this[chunk.name](chunk.value);\n    return this;\n  }\n\n  keyValue(value) {\n    this.key = value;\n  }\n\n  //stringValue() - aliased below to _saveValue()\n\n  numberValue(value) {\n    this._saveValue(parseFloat(value));\n  }\n  nullValue() {\n    this._saveValue(null);\n  }\n  trueValue() {\n    this._saveValue(true);\n  }\n  falseValue() {\n    this._saveValue(false);\n  }\n\n  //startObject() - assigned below\n\n  endObject() {\n    if (this.stack.length) {\n      const value = this.current;\n      this.key = this.stack.pop();\n      this.current = this.stack.pop();\n      this._saveValue(value);\n    } else {\n      this.done = true;\n    }\n  }\n\n  //startArray() - assigned below\n  //endArray() - aliased below to endObject()\n\n  _saveValue(value) {\n    if (this.done) {\n      this.current = value;\n    } else {\n      if (this.current instanceof Array) {\n        this.current.push(value);\n      } else {\n        this.current[this.key] = value;\n        this.key = null;\n      }\n    }\n  }\n  _saveValueWithReviver(value) {\n    if (this.done) {\n      this.current = this.reviver('', value);\n    } else {\n      if (this.current instanceof Array) {\n        value = this.reviver('' + this.current.length, value);\n        this.current.push(value);\n        if (value === undefined) {\n          delete this.current[this.current.length - 1];\n        }\n      } else {\n        value = this.reviver(this.key, value);\n        if (value !== undefined) {\n          this.current[this.key] = value;\n        }\n        this.key = null;\n      }\n    }\n  }\n}\n\nAssembler.prototype.stringValue = Assembler.prototype._saveValue;\nAssembler.prototype.startObject = startObject(Object);\nAssembler.prototype.startArray = startObject(Array);\nAssembler.prototype.endArray = Assembler.prototype.endObject;\n\nmodule.exports = Assembler;\n","'use strict';\n\nconst Utf8Stream = require('./utils/Utf8Stream');\n\nconst patterns = {\n  value1: /^(?:[\\\"\\{\\[\\]\\-\\d]|true\\b|false\\b|null\\b|\\s{1,256})/,\n  string: /^(?:[^\\\"\\\\]{1,256}|\\\\[bfnrt\\\"\\\\\\/]|\\\\u[\\da-fA-F]{4}|\\\")/,\n  key1: /^(?:[\\\"\\}]|\\s{1,256})/,\n  colon: /^(?:\\:|\\s{1,256})/,\n  comma: /^(?:[\\,\\]\\}]|\\s{1,256})/,\n  ws: /^\\s{1,256}/,\n  numberStart: /^\\d/,\n  numberDigit: /^\\d{0,256}/,\n  numberFraction: /^[\\.eE]/,\n  numberExponent: /^[eE]/,\n  numberExpSign: /^[-+]/\n};\nconst MAX_PATTERN_SIZE = 16;\n\nlet noSticky = true;\ntry {\n  new RegExp('.', 'y');\n  noSticky = false;\n} catch (e) {\n  // suppress\n}\n\n!noSticky &&\n  Object.keys(patterns).forEach(key => {\n    let src = patterns[key].source.slice(1); // lop off ^\n    if (src.slice(0, 3) === '(?:' && src.slice(-1) === ')') {\n      src = src.slice(3, -1);\n    }\n    patterns[key] = new RegExp(src, 'y');\n  });\n\npatterns.numberFracStart = patterns.numberExpStart = patterns.numberStart;\npatterns.numberFracDigit = patterns.numberExpDigit = patterns.numberDigit;\n\nconst values = {true: true, false: false, null: null},\n  expected = {object: 'objectStop', array: 'arrayStop', '': 'done'};\n\n// long hexadecimal codes: \\uXXXX\nconst fromHex = s => String.fromCharCode(parseInt(s.slice(2), 16));\n\n// short codes: \\b \\f \\n \\r \\t \\\" \\\\ \\/\nconst codes = {b: '\\b', f: '\\f', n: '\\n', r: '\\r', t: '\\t', '\"': '\"', '\\\\': '\\\\', '/': '/'};\n\nclass Parser extends Utf8Stream {\n  static make(options) {\n    return new Parser(options);\n  }\n\n  constructor(options) {\n    super(Object.assign({}, options, {readableObjectMode: true}));\n\n    this._packKeys = this._packStrings = this._packNumbers = this._streamKeys = this._streamStrings = this._streamNumbers = true;\n    if (options) {\n      'packValues' in options && (this._packKeys = this._packStrings = this._packNumbers = options.packValues);\n      'packKeys' in options && (this._packKeys = options.packKeys);\n      'packStrings' in options && (this._packStrings = options.packStrings);\n      'packNumbers' in options && (this._packNumbers = options.packNumbers);\n      'streamValues' in options && (this._streamKeys = this._streamStrings = this._streamNumbers = options.streamValues);\n      'streamKeys' in options && (this._streamKeys = options.streamKeys);\n      'streamStrings' in options && (this._streamStrings = options.streamStrings);\n      'streamNumbers' in options && (this._streamNumbers = options.streamNumbers);\n      this._jsonStreaming = options.jsonStreaming;\n    }\n    !this._packKeys && (this._streamKeys = true);\n    !this._packStrings && (this._streamStrings = true);\n    !this._packNumbers && (this._streamNumbers = true);\n\n    this._done = false;\n    this._expect = this._jsonStreaming ? 'done' : 'value';\n    this._stack = [];\n    this._parent = '';\n    this._open_number = false;\n    this._accumulator = '';\n  }\n\n  _flush(callback) {\n    this._done = true;\n    super._flush(error => {\n      if (error) return callback(error);\n      if (this._open_number) {\n        if (this._streamNumbers) {\n          this.push({name: 'endNumber'});\n        }\n        this._open_number = false;\n        if (this._packNumbers) {\n          this.push({name: 'numberValue', value: this._accumulator});\n          this._accumulator = '';\n        }\n      }\n      callback(null);\n    });\n  }\n\n  _processBuffer(callback) {\n    let match,\n      value,\n      index = 0;\n    main: for (;;) {\n      switch (this._expect) {\n        case 'value1':\n        case 'value':\n          patterns.value1.lastIndex = index;\n          match = patterns.value1.exec(this._buffer);\n          if (!match) {\n            if (this._done || index + MAX_PATTERN_SIZE < this._buffer.length) {\n              if (index < this._buffer.length) return callback(new Error('Parser cannot parse input: expected a value'));\n              return callback(new Error('Parser has expected a value'));\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          switch (value) {\n            case '\"':\n              this._streamStrings && this.push({name: 'startString'});\n              this._expect = 'string';\n              break;\n            case '{':\n              this.push({name: 'startObject'});\n              this._stack.push(this._parent);\n              this._parent = 'object';\n              this._expect = 'key1';\n              break;\n            case '[':\n              this.push({name: 'startArray'});\n              this._stack.push(this._parent);\n              this._parent = 'array';\n              this._expect = 'value1';\n              break;\n            case ']':\n              if (this._expect !== 'value1') return callback(new Error(\"Parser cannot parse input: unexpected token ']'\"));\n              if (this._open_number) {\n                this._streamNumbers && this.push({name: 'endNumber'});\n                this._open_number = false;\n                if (this._packNumbers) {\n                  this.push({name: 'numberValue', value: this._accumulator});\n                  this._accumulator = '';\n                }\n              }\n              this.push({name: 'endArray'});\n              this._parent = this._stack.pop();\n              this._expect = expected[this._parent];\n              break;\n            case '-':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: '-'});\n              }\n              this._packNumbers && (this._accumulator = '-');\n              this._expect = 'numberStart';\n              break;\n            case '0':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: '0'});\n              }\n              this._packNumbers && (this._accumulator = '0');\n              this._expect = 'numberFraction';\n              break;\n            case '1':\n            case '2':\n            case '3':\n            case '4':\n            case '5':\n            case '6':\n            case '7':\n            case '8':\n            case '9':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: value});\n              }\n              this._packNumbers && (this._accumulator = value);\n              this._expect = 'numberDigit';\n              break;\n            case 'true':\n            case 'false':\n            case 'null':\n              if (this._buffer.length - index === value.length && !this._done) break main; // wait for more input\n              this.push({name: value + 'Value', value: values[value]});\n              this._expect = expected[this._parent];\n              break;\n            // default: // ws\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'keyVal':\n        case 'string':\n          patterns.string.lastIndex = index;\n          match = patterns.string.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length && (this._done || this._buffer.length - index >= 6))\n              return callback(new Error('Parser cannot parse input: escaped characters'));\n            if (this._done) return callback(new Error('Parser has expected a string value'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value === '\"') {\n            if (this._expect === 'keyVal') {\n              this._streamKeys && this.push({name: 'endKey'});\n              if (this._packKeys) {\n                this.push({name: 'keyValue', value: this._accumulator});\n                this._accumulator = '';\n              }\n              this._expect = 'colon';\n            } else {\n              this._streamStrings && this.push({name: 'endString'});\n              if (this._packStrings) {\n                this.push({name: 'stringValue', value: this._accumulator});\n                this._accumulator = '';\n              }\n              this._expect = expected[this._parent];\n            }\n          } else if (value.length > 1 && value.charAt(0) === '\\\\') {\n            const t = value.length == 2 ? codes[value.charAt(1)] : fromHex(value);\n            if (this._expect === 'keyVal' ? this._streamKeys : this._streamStrings) {\n              this.push({name: 'stringChunk', value: t});\n            }\n            if (this._expect === 'keyVal' ? this._packKeys : this._packStrings) {\n              this._accumulator += t;\n            }\n          } else {\n            if (this._expect === 'keyVal' ? this._streamKeys : this._streamStrings) {\n              this.push({name: 'stringChunk', value: value});\n            }\n            if (this._expect === 'keyVal' ? this._packKeys : this._packStrings) {\n              this._accumulator += value;\n            }\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'key1':\n        case 'key':\n          patterns.key1.lastIndex = index;\n          match = patterns.key1.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected an object key'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value === '\"') {\n            this._streamKeys && this.push({name: 'startKey'});\n            this._expect = 'keyVal';\n          } else if (value === '}') {\n            if (this._expect !== 'key1') return callback(new Error(\"Parser cannot parse input: unexpected token '}'\"));\n            this.push({name: 'endObject'});\n            this._parent = this._stack.pop();\n            this._expect = expected[this._parent];\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'colon':\n          patterns.colon.lastIndex = index;\n          match = patterns.colon.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error(\"Parser cannot parse input: expected ':'\"));\n            break main; // wait for more input\n          }\n          value = match[0];\n          value === ':' && (this._expect = 'value');\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'arrayStop':\n        case 'objectStop':\n          patterns.comma.lastIndex = index;\n          match = patterns.comma.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error(\"Parser cannot parse input: expected ','\"));\n            break main; // wait for more input\n          }\n          if (this._open_number) {\n            this._streamNumbers && this.push({name: 'endNumber'});\n            this._open_number = false;\n            if (this._packNumbers) {\n              this.push({name: 'numberValue', value: this._accumulator});\n              this._accumulator = '';\n            }\n          }\n          value = match[0];\n          if (value === ',') {\n            this._expect = this._expect === 'arrayStop' ? 'value' : 'key';\n          } else if (value === '}' || value === ']') {\n            if (value === '}' ? this._expect === 'arrayStop' : this._expect !== 'arrayStop') {\n              return callback(new Error(\"Parser cannot parse input: expected '\" + (this._expect === 'arrayStop' ? ']' : '}') + \"'\"));\n            }\n            this.push({name: value === '}' ? 'endObject' : 'endArray'});\n            this._parent = this._stack.pop();\n            this._expect = expected[this._parent];\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        // number chunks\n        case 'numberStart': // [0-9]\n          patterns.numberStart.lastIndex = index;\n          match = patterns.numberStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a starting digit'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = value === '0' ? 'numberFraction' : 'numberDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberDigit': // [0-9]*\n          patterns.numberDigit.lastIndex = index;\n          match = patterns.numberDigit.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a digit'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length) {\n              this._expect = 'numberFraction';\n              break;\n            }\n            if (this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'numberFraction': // [\\.eE]?\n          patterns.numberFraction.lastIndex = index;\n          match = patterns.numberFraction.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = value === '.' ? 'numberFracStart' : 'numberExpSign';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberFracStart': // [0-9]\n          patterns.numberFracStart.lastIndex = index;\n          match = patterns.numberFracStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a fractional part of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberFracDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberFracDigit': // [0-9]*\n          patterns.numberFracDigit.lastIndex = index;\n          match = patterns.numberFracDigit.exec(this._buffer);\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length) {\n              this._expect = 'numberExponent';\n              break;\n            }\n            if (this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'numberExponent': // [eE]?\n          patterns.numberExponent.lastIndex = index;\n          match = patterns.numberExponent.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            if (this._done) {\n              this._expect = 'done';\n              break;\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpSign';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpSign': // [-+]?\n          patterns.numberExpSign.lastIndex = index;\n          match = patterns.numberExpSign.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              this._expect = 'numberExpStart';\n              break;\n            }\n            if (this._done) return callback(new Error('Parser has expected an exponent value of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpStart';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpStart': // [0-9]\n          patterns.numberExpStart.lastIndex = index;\n          match = patterns.numberExpStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected an exponent part of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpDigit': // [0-9]*\n          patterns.numberExpDigit.lastIndex = index;\n          match = patterns.numberExpDigit.exec(this._buffer);\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length || this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'done':\n          patterns.ws.lastIndex = index;\n          match = patterns.ws.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              if (this._jsonStreaming) {\n                this._expect = 'value';\n                break;\n              }\n              return callback(new Error('Parser cannot parse input: unexpected characters'));\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (this._open_number) {\n            this._streamNumbers && this.push({name: 'endNumber'});\n            this._open_number = false;\n            if (this._packNumbers) {\n              this.push({name: 'numberValue', value: this._accumulator});\n              this._accumulator = '';\n            }\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n      }\n    }\n    !noSticky && (this._buffer = this._buffer.slice(index));\n    callback(null);\n  }\n}\nParser.parser = Parser.make;\nParser.make.Constructor = Parser;\n\nmodule.exports = Parser;\n","'use strict';\n\nconst StreamBase = require('./StreamBase');\nconst withParser = require('../utils/withParser');\n\nclass StreamArray extends StreamBase {\n  static make(options) {\n    return new StreamArray(options);\n  }\n\n  static withParser(options) {\n    return withParser(StreamArray.make, options);\n  }\n\n  constructor(options) {\n    super(options);\n    this._level = 1;\n    this._counter = 0;\n  }\n\n  _wait(chunk, _, callback) {\n    // first chunk should open an array\n    if (chunk.name !== 'startArray') {\n      return callback(new Error('Top-level object should be an array.'));\n    }\n    this._transform = this._filter;\n    return this._transform(chunk, _, callback);\n  }\n\n  _push(discard) {\n    if (this._assembler.current.length) {\n      if (discard) {\n        ++this._counter;\n        this._assembler.current.pop();\n      } else {\n        this.push({key: this._counter++, value: this._assembler.current.pop()});\n      }\n    }\n  }\n}\nStreamArray.streamArray = StreamArray.make;\nStreamArray.make.Constructor = StreamArray;\n\nmodule.exports = StreamArray;\n","'use strict';\n\nconst {Transform} = require('stream');\nconst Assembler = require('../Assembler');\n\nclass Counter {\n  constructor(initialDepth) {\n    this.depth = initialDepth;\n  }\n  startObject() {\n    ++this.depth;\n  }\n  endObject() {\n    --this.depth;\n  }\n  startArray() {\n    ++this.depth;\n  }\n  endArray() {\n    --this.depth;\n  }\n}\n\nclass StreamBase extends Transform {\n  constructor(options) {\n    super(Object.assign({}, options, {writableObjectMode: true, readableObjectMode: true}));\n    if (options) {\n      this.objectFilter = options.objectFilter;\n      this.includeUndecided = options.includeUndecided;\n    }\n    if (typeof this.objectFilter != 'function') {\n      this._filter = this._transform;\n    }\n    this._transform = this._wait || this._filter;\n    this._assembler = new Assembler(options);\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._push();\n      }\n    }\n    callback(null);\n  }\n\n  _filter(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      const result = this.objectFilter(this._assembler);\n      if (result) {\n        if (this._assembler.depth === this._level) {\n          this._push();\n          this._transform = this._filter;\n        }\n        this._transform = this._accept;\n        return callback(null);\n      }\n      if (result === false) {\n        this._saved_assembler = this._assembler;\n        this._assembler = new Counter(this._saved_assembler.depth);\n        this._saved_assembler.dropToLevel(this._level);\n        if (this._assembler.depth === this._level) {\n          this._assembler = this._saved_assembler;\n          this._transform = this._filter;\n        }\n        this._transform = this._reject;\n        return callback(null);\n      }\n      if (this._assembler.depth === this._level) {\n        this._push(!this.includeUndecided);\n      }\n    }\n    callback(null);\n  }\n\n  _accept(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._push();\n        this._transform = this._filter;\n      }\n    }\n    callback(null);\n  }\n\n  _reject(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._assembler = this._saved_assembler;\n        this._transform = this._filter;\n      }\n    }\n    callback(null);\n  }\n}\n\nmodule.exports = StreamBase;\n","'use strict';\n\nconst {Transform} = require('stream');\nconst {StringDecoder} = require('string_decoder');\n\nclass Utf8Stream extends Transform {\n  constructor(options) {\n    super(Object.assign({}, options, {writableObjectMode: false}));\n    this._buffer = '';\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (typeof chunk == 'string') {\n      this._transform = this._transformString;\n    } else {\n      this._stringDecoder = new StringDecoder();\n      this._transform = this._transformBuffer;\n    }\n    this._transform(chunk, encoding, callback);\n  }\n\n  _transformBuffer(chunk, _, callback) {\n    this._buffer += this._stringDecoder.write(chunk);\n    this._processBuffer(callback);\n  }\n\n  _transformString(chunk, _, callback) {\n    this._buffer += chunk.toString();\n    this._processBuffer(callback);\n  }\n\n  _processBuffer(callback) {\n    if (this._buffer) {\n      this.push(this._buffer, 'utf8');\n      this._buffer = '';\n    }\n    callback(null);\n  }\n\n  _flushInput() {\n    // meant to be called from _flush()\n    if (this._stringDecoder) {\n      this._buffer += this._stringDecoder.end();\n    }\n  }\n\n  _flush(callback) {\n    this._flushInput();\n    this._processBuffer(callback);\n  }\n}\n\nmodule.exports = Utf8Stream;\n","'use strict';\n\nconst Chain = require('stream-chain');\n\nconst Parser = require('../Parser');\n\nconst withParser = (fn, options) =>\n  new Chain([new Parser(options), fn(options)], Object.assign({}, options, {writableObjectMode: false, readableObjectMode: true}));\n\nmodule.exports = withParser;\n","module.exports = require(\"child_process\");","module.exports = require(\"electron\");","module.exports = require(\"events\");","module.exports = require(\"https\");","module.exports = require(\"process\");","module.exports = require(\"stream\");","module.exports = require(\"string_decoder\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Vec {\n    static isBlank(arr) { return arr == null || arr.length == 0; }\n    static notBlank(arr) { return arr != null && arr.length > 0; }\n    static safeArray(arr) { return arr == null ? [] : arr; }\n    static len(arr) { return arr == null ? 0 : arr.length; }\n    static arrayLength(arr) { return arr == null ? 0 : arr.length; }\n    static anyTrue(arr) {\n        if (arr == null)\n            return false;\n        for (let v of arr)\n            if (v)\n                return true;\n        return false;\n    }\n    static allTrue(arr) {\n        if (arr == null)\n            return true;\n        for (let v of arr)\n            if (!v)\n                return false;\n        return true;\n    }\n    static anyFalse(arr) {\n        if (arr == null)\n            return false;\n        for (let v of arr)\n            if (!v)\n                return true;\n        return false;\n    }\n    static allFalse(arr) {\n        if (arr == null)\n            return true;\n        for (let v of arr)\n            if (v)\n                return false;\n        return true;\n    }\n    static iterAnyTrue(arr, callback) {\n        for (let v of arr)\n            if (callback(v))\n                return true;\n        return false;\n    }\n    static iterAllTrue(arr, callback) {\n        for (let v of arr)\n            if (!callback(v))\n                return false;\n        return true;\n    }\n    static iterAnyFalse(arr, callback) {\n        for (let v of arr)\n            if (!callback(v))\n                return true;\n        return false;\n    }\n    static iterAllFalse(arr, callback) {\n        for (let v of arr)\n            if (callback(v))\n                return false;\n        return true;\n    }\n    static swap(arr, idx1, idx2) {\n        let v = arr[idx1];\n        arr[idx1] = arr[idx2];\n        arr[idx2] = v;\n    }\n    static duplicate(arr) {\n        return arr == null ? [] : arr.slice(0);\n    }\n    static append(arr, item) {\n        if (arr == null || arr.length == 0)\n            return [item];\n        arr = arr.slice(0);\n        arr.push(item);\n        return arr;\n    }\n    static prepend(arr, item) {\n        if (arr == null || arr.length == 0)\n            return [item];\n        arr = arr.slice(0);\n        arr.unshift(item);\n        return arr;\n    }\n    static concat(arr1, arr2) {\n        if (arr1 == null && arr2 == null)\n            return [];\n        if (arr1 == null)\n            return arr2.slice(0);\n        if (arr2 == null)\n            return arr1.slice(0);\n        return arr1.concat(arr2);\n    }\n    static remove(arr, idx) {\n        arr = arr.slice(0);\n        arr.splice(idx, 1);\n        return arr;\n    }\n    static flatten(mtx) {\n        let ret = [];\n        for (let vec of mtx)\n            ret.push(...vec);\n        return ret;\n    }\n    static transpose(mtx) {\n        let sz1 = mtx.length, sz2 = mtx[0].length;\n        let ret = Vec.anyArray(null, sz2);\n        for (let j = 0; j < sz2; j++) {\n            ret[j] = Vec.anyArray(null, sz1);\n            for (let i = 0; i < sz1; i++)\n                ret[j][i] = mtx[i][j];\n        }\n        return ret;\n    }\n    static equals(arr1, arr2) {\n        if (arr1 == null && arr2 == null)\n            return true;\n        if (arr1 == null || arr2 == null)\n            return false;\n        if (arr1.length != arr2.length)\n            return false;\n        for (let n = 0; n < arr1.length; n++)\n            if (arr1[n] != arr2[n])\n                return false;\n        return true;\n    }\n    static equivalent(arr1, arr2) {\n        const len1 = arr1 == null ? 0 : arr1.length, len2 = arr2 == null ? 0 : arr2.length;\n        if (len1 != len2)\n            return false;\n        for (let n = 0; n < len1; n++)\n            if (arr1[n] != arr2[n])\n                return false;\n        return true;\n    }\n    static compareTo(arr1, arr2) {\n        const sz = Math.max(arr1.length, arr2.length);\n        for (let n = 0; n < sz; n++) {\n            if (arr1[n] < arr2[n])\n                return -1;\n            if (arr1[n] > arr2[n])\n                return 1;\n        }\n        return 0;\n    }\n    static booleanArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static numberArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static stringArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static anyArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static genericArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static genericBlankArrays(sz) {\n        let arr = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            arr[n] = [];\n        return arr;\n    }\n    static funcArray(sz, func) {\n        let arr = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            arr[n] = func(n);\n        return arr;\n    }\n    static first(arr) { return arr == null || arr.length == 0 ? null : arr[0]; }\n    static last(arr) { return arr == null || arr.length == 0 ? null : arr[arr.length - 1]; }\n    static min(arr) {\n        if (arr == null || arr.length == 0)\n            return Number.MAX_VALUE;\n        let v = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            v = Math.min(v, arr[n]);\n        return v;\n    }\n    static max(arr) {\n        if (arr == null || arr.length == 0)\n            return Number.MIN_VALUE;\n        let v = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            v = Math.max(v, arr[n]);\n        return v;\n    }\n    static idxMin(arr) {\n        if (arr == null || arr.length == 0)\n            return -1;\n        let idx = 0;\n        for (let n = 1; n < arr.length; n++)\n            if (arr[n] < arr[idx])\n                idx = n;\n        return idx;\n    }\n    static idxMax(arr) {\n        if (arr == null || arr.length == 0)\n            return -1;\n        let idx = 0;\n        for (let n = 1; n < arr.length; n++)\n            if (arr[n] > arr[idx])\n                idx = n;\n        return idx;\n    }\n    static range(arr) {\n        if (arr == null || arr.length == 0)\n            return 0;\n        let lo = arr[0], hi = arr[0];\n        for (let n = 1; n < arr.length; n++) {\n            if (arr[n] < lo)\n                lo = arr[n];\n            if (arr[n] > hi)\n                hi = arr[n];\n        }\n        return hi - lo;\n    }\n    static reverse(arr) {\n        let ret = [];\n        for (let n = arr.length - 1; n >= 0; n--)\n            ret.push(arr[n]);\n        return ret;\n    }\n    static identity0(sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n;\n        return ret;\n    }\n    static identity1(sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n + 1;\n        return ret;\n    }\n    static identityN(start, sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n + start;\n        return ret;\n    }\n    static notMask(mask) {\n        let ret = new Array(mask.length);\n        for (let n = mask.length - 1; n >= 0; n--)\n            ret[n] = !mask[n];\n        return ret;\n    }\n    static idxGet(arr, idx) {\n        let ret = [];\n        for (let n = 0; n < idx.length; n++)\n            ret.push(arr[idx[n]]);\n        return ret;\n    }\n    static maskCount(mask) {\n        if (!mask)\n            return 0;\n        let c = 0;\n        for (let n = mask.length - 1; n >= 0; n--)\n            if (mask[n])\n                c++;\n        return c;\n    }\n    static maskIdx(mask) {\n        let idx = [];\n        for (let n = 0; n < mask.length; n++)\n            if (mask[n])\n                idx.push(n);\n        return idx;\n    }\n    static idxMask(idx, sz) {\n        let mask = Vec.booleanArray(false, sz);\n        for (let n of idx)\n            mask[n] = true;\n        return mask;\n    }\n    static maskMap(mask) {\n        let ret = [];\n        for (let n = 0, pos = 0; n < mask.length; n++)\n            ret.push(mask[n] ? pos++ : -1);\n        return ret;\n    }\n    static maskGet(arr, mask) {\n        let ret = [];\n        for (let n = 0, p = 0; n < arr.length; n++)\n            if (mask[n])\n                ret.push(arr[n]);\n        return ret;\n    }\n    static maskEqual(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] == arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] == val);\n        }\n        return ret;\n    }\n    static sum(arr) {\n        if (arr == null || arr.length == 0)\n            return 0;\n        let t = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            t += arr[n];\n        return t;\n    }\n    static add(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] + arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] + val);\n        }\n        return ret;\n    }\n    static sub(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] - arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] - val);\n        }\n        return ret;\n    }\n    static mul(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] * arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] * val);\n        }\n        return ret;\n    }\n    static neg(arr) {\n        let ret = arr.slice(0);\n        for (let n = ret.length - 1; n >= 0; n--)\n            ret[n] *= -1;\n        return ret;\n    }\n    static setTo(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] = val; }\n    static addTo(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] += val; }\n    static mulBy(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] *= val; }\n    static addToArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] += val[n]; }\n    static subFromArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] -= val[n]; }\n    static mulByArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] *= val[n]; }\n    static divByArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] /= val[n]; }\n    static idxSort(arr) {\n        let idx = new Array(arr.length);\n        for (let n = 0; n < arr.length; n++)\n            idx[n] = n;\n        idx.sort((a, b) => arr[a] < arr[b] ? -1 : arr[a] > arr[b] ? 1 : 0);\n        return idx;\n    }\n    static sort(arr) {\n        arr.sort((v1, v2) => v1 - v2);\n    }\n    static sorted(arr) {\n        arr = arr.slice(0);\n        this.sort(arr);\n        return arr;\n    }\n    static sortedUnique(arr) {\n        if (arr == null || arr.length == 0)\n            return [];\n        let unique = Vec.uniqueUnstable(arr);\n        if (typeof arr[0] == 'number')\n            this.sort(unique);\n        else\n            unique.sort();\n        return unique;\n    }\n    static uniqueUnstable(arr) {\n        return Array.from(new Set(arr));\n    }\n    static uniqueStable(arr) {\n        let set = new Set(arr), ret = [];\n        for (let v of arr)\n            if (set.has(v)) {\n                ret.push(v);\n                set.delete(v);\n            }\n        return ret;\n    }\n    static maskUnique(arr) {\n        let set = new Set(arr), ret = this.booleanArray(false, arr.length);\n        for (let n = 0; n < arr.length; n++)\n            if (set.has(arr[n])) {\n                ret[n] = true;\n                set.delete(arr[n]);\n            }\n        return ret;\n    }\n    static idxUnique(arr) {\n        let set = new Set(arr), ret = [];\n        for (let n = 0; n < arr.length; n++)\n            if (set.has(arr[n])) {\n                ret.push(n);\n                set.delete(arr[n]);\n            }\n        return ret;\n    }\n    static exclude(arr, excl) {\n        const sz = Vec.len(arr);\n        if (sz == 0)\n            return [];\n        let mask = new Array(sz);\n        let count = 0;\n        for (let n = 0; n < arr.length; n++) {\n            mask[n] = excl.indexOf(arr[n]) < 0;\n            if (mask[n])\n                count++;\n        }\n        if (count == sz)\n            return arr;\n        return Vec.maskGet(arr, mask);\n    }\n}\nclass Permutation {\n    static parityPerms(idx) {\n        let v = Vec.booleanArray(false, idx.length);\n        let p = 0;\n        for (let i = idx.length - 1; i >= 0; i--) {\n            if (v[i])\n                p++;\n            else {\n                let j = i;\n                do {\n                    j = idx[j];\n                    v[j] = true;\n                } while (j != i);\n            }\n        }\n        return p;\n    }\n    static parityIdentity(idx) {\n        return this.parityPerms(idx) & 1;\n    }\n    static parityOrder(src) {\n        if (src.length <= 1)\n            return 0;\n        else if (src.length == 2)\n            return src[0] < src[1] ? 0 : 1;\n        else if (src.length == 3) {\n            let p = 1;\n            if (src[0] < src[1])\n                p++;\n            if (src[0] < src[2])\n                p++;\n            if (src[1] < src[2])\n                p++;\n            return p & 1;\n        }\n        else if (src.length == 4) {\n            let p = 0;\n            if (src[0] < src[1])\n                p++;\n            if (src[0] < src[2])\n                p++;\n            if (src[0] < src[3])\n                p++;\n            if (src[1] < src[2])\n                p++;\n            if (src[1] < src[3])\n                p++;\n            if (src[2] < src[3])\n                p++;\n            return p & 1;\n        }\n        let idx = [], sorted = src.slice(0);\n        sorted.sort();\n        for (let n = 0; n < src.length; n++)\n            idx.push(sorted.indexOf(src[n]));\n        return this.parityIdentity(idx);\n    }\n    static smallPermutation(sz) {\n        if (sz == 1)\n            return this.PERM1;\n        else if (sz == 2)\n            return this.PERM2;\n        else if (sz == 3)\n            return this.PERM3;\n        else if (sz == 4)\n            return this.PERM4;\n        else\n            return null;\n    }\n    static allPermutations(sz) {\n        if (sz <= this.SMALL_PERMS)\n            return this.smallPermutation(sz);\n        while (this.PERM_CACHE.length < this.MAX_CACHE - this.SMALL_PERMS)\n            this.PERM_CACHE.push(null);\n        if (sz < this.MAX_CACHE && this.PERM_CACHE[sz - this.SMALL_PERMS] != null)\n            return this.PERM_CACHE[sz - this.SMALL_PERMS];\n        let nperms = 1;\n        for (let n = 2; n <= sz; n++)\n            nperms *= n;\n        let perms = [];\n        let idx = Vec.identity0(sz);\n        perms.push(idx.slice(0));\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n < nperms; n++) {\n            nonunique: while (idx[0] < sz) {\n                idx[sz - 1]++;\n                for (let i = sz - 1; i > 0; i--) {\n                    if (idx[i] < sz)\n                        break;\n                    idx[i] = 0;\n                    idx[i - 1]++;\n                }\n                Vec.setTo(mask, false);\n                for (let i of idx) {\n                    if (mask[i])\n                        continue nonunique;\n                    mask[i] = true;\n                }\n                perms[n] = idx.slice(0);\n                break;\n            }\n        }\n        if (sz < this.MAX_CACHE)\n            this.PERM_CACHE[sz - this.SMALL_PERMS] = perms;\n        return perms;\n    }\n}\nPermutation.PERM1 = [[0]];\nPermutation.PERM2 = [[0, 1], [1, 0]];\nPermutation.PERM3 = [[0, 1, 2], [0, 2, 1], [1, 0, 2], [1, 2, 0], [2, 0, 1], [2, 1, 0]];\nPermutation.PERM4 = [\n    [0, 1, 2, 3], [0, 1, 3, 2], [0, 2, 1, 3], [0, 2, 3, 1], [0, 3, 1, 2], [0, 3, 2, 1],\n    [1, 0, 2, 3], [1, 0, 3, 2], [1, 2, 0, 3], [1, 2, 3, 0], [1, 3, 0, 2], [1, 3, 2, 0],\n    [2, 0, 1, 3], [2, 0, 3, 1], [2, 1, 0, 3], [2, 1, 3, 0], [2, 3, 0, 1], [2, 3, 1, 0],\n    [3, 0, 1, 2], [3, 0, 2, 1], [3, 1, 0, 2], [3, 1, 2, 0], [3, 2, 0, 1], [3, 2, 1, 0]\n];\nPermutation.SMALL_PERMS = 4;\nPermutation.MAX_CACHE = 8;\nPermutation.PERM_CACHE = [];\nexport { Permutation };\n//# sourceMappingURL=Vec.js.map","import { Vec } from './Vec';\nexport class Matrix {\n    constructor(m, n, s = 0) {\n        this.m = m;\n        this.n = n;\n        if (m == 0)\n            return;\n        this.A = new Array(m);\n        for (let i = 0; i < m; i++)\n            this.A[i] = Vec.numberArray(s, n);\n    }\n    static fromArray(A) {\n        let mtx = new Matrix(0, 0);\n        mtx.A = A;\n        mtx.m = A.length;\n        mtx.n = A[0].length;\n        return mtx;\n    }\n    clone() {\n        const { A, m, n } = this;\n        let mtx = new Matrix(m, n);\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                mtx.A[i][j] = A[i][j];\n        return mtx;\n    }\n    get numRows() { return this.m; }\n    get numCols() { return this.n; }\n    get(i, j) { return this.A[i][j]; }\n    set(i, j, v) { this.A[i][j] = v; }\n    transpose() {\n        const { A, m, n } = this;\n        let X = new Matrix(n, m);\n        const C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[j][i] = A[i][j];\n        return X;\n    }\n    norm1() {\n        const { A, m, n } = this;\n        let f = 0;\n        for (let j = 0; j < n; j++) {\n            let s = 0;\n            for (let i = 0; i < m; i++)\n                s += Math.abs(A[i][j]);\n            f = Math.max(f, s);\n        }\n        return f;\n    }\n    normInf() {\n        const { A, m, n } = this;\n        let f = 0;\n        for (let i = 0; i < m; i++) {\n            let s = 0;\n            for (let j = 0; j < n; j++)\n                s += Math.abs(A[i][j]);\n            f = Math.max(f, s);\n        }\n        return f;\n    }\n    uminus() {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = -A[i][j];\n        return X;\n    }\n    plus(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] + B.A[i][j];\n        return X;\n    }\n    plusEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] + B.A[i][j];\n        return this;\n    }\n    minus(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] - B.A[i][j];\n        return X;\n    }\n    minusEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] - B.A[i][j];\n        return this;\n    }\n    arrayTimes(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] * B.A[i][j];\n        return X;\n    }\n    arrayTimesEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] * B.A[i][j];\n        return this;\n    }\n    arrayRightDivide(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] / B.A[i][j];\n        return X;\n    }\n    arrayRightDivideEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] / B.A[i][j];\n        return this;\n    }\n    arrayLeftDivide(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = B.A[i][j] / A[i][j];\n        return X;\n    }\n    arrayLeftDivideEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = B.A[i][j] / A[i][j];\n        return this;\n    }\n    scalarTimes(s) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = s * A[i][j];\n        return X;\n    }\n    scalarTimesEquals(s) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = s * A[i][j];\n        return this;\n    }\n    times(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, B.n);\n        let C = X.A, Bcolj = new Array(n);\n        for (let j = 0; j < B.n; j++) {\n            for (let k = 0; k < n; k++)\n                Bcolj[k] = B.A[k][j];\n            for (let i = 0; i < m; i++) {\n                let Arowi = A[i];\n                let s = 0;\n                for (let k = 0; k < n; k++)\n                    s += Arowi[k] * Bcolj[k];\n                C[i][j] = s;\n            }\n        }\n        return X;\n    }\n    rank() {\n        return new SingularValueDecomposition(this).rank();\n    }\n    cond() {\n        return new SingularValueDecomposition(this).cond();\n    }\n    trace() {\n        const { A, m, n } = this;\n        let t = 0;\n        for (let i = 0; i < Math.min(m, n); i++) {\n            t += A[i][i];\n        }\n        return t;\n    }\n    static identity(m, n) {\n        let mtx = new Matrix(m, n);\n        let A = mtx.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = (i == j ? 1.0 : 0.0);\n        return mtx;\n    }\n    toString() {\n        let lines = ['['];\n        for (let row of this.A)\n            lines.push(JSON.stringify(row));\n        lines.push(']');\n        return lines.join('\\n');\n    }\n}\nexport class SingularValueDecomposition {\n    constructor(mtx) {\n        let A = mtx.A;\n        let m = this.m = mtx.m;\n        let n = this.n = mtx.n;\n        let nu = Math.min(m, n);\n        let s = this.s = new Array(Math.min(m + 1, n));\n        let U = this.U = new Array(m);\n        let V = this.V = new Array(n);\n        for (let i = 0; i < m; i++)\n            U[i] = Vec.numberArray(0, nu);\n        for (let j = 0; j < n; j++)\n            V[j] = Vec.numberArray(0, n);\n        let e = new Array(n);\n        let work = new Array(m);\n        let wantu = true, wantv = true;\n        let nct = Math.min(m - 1, n);\n        let nrt = Math.max(0, Math.min(n - 2, m));\n        for (let k = 0; k < Math.max(nct, nrt); k++) {\n            if (k < nct) {\n                s[k] = 0;\n                for (let i = k; i < m; i++)\n                    s[k] = SingularValueDecomposition.hypot(s[k], A[i][k]);\n                if (s[k] != 0.0) {\n                    if (A[k][k] < 0.0)\n                        s[k] = -s[k];\n                    for (let i = k; i < m; i++)\n                        A[i][k] /= s[k];\n                    A[k][k] += 1.0;\n                }\n                s[k] = -s[k];\n            }\n            for (let j = k + 1; j < n; j++) {\n                if ((k < nct) && (s[k] != 0.0)) {\n                    let t = 0;\n                    for (let i = k; i < m; i++)\n                        t += A[i][k] * A[i][j];\n                    t = -t / A[k][k];\n                    for (let i = k; i < m; i++)\n                        A[i][j] += t * A[i][k];\n                }\n                e[j] = A[k][j];\n            }\n            if (wantu && (k < nct)) {\n                for (let i = k; i < m; i++)\n                    U[i][k] = A[i][k];\n            }\n            if (k < nrt) {\n                e[k] = 0;\n                for (let i = k + 1; i < n; i++)\n                    e[k] = SingularValueDecomposition.hypot(e[k], e[i]);\n                if (e[k] != 0.0) {\n                    if (e[k + 1] < 0.0)\n                        e[k] = -e[k];\n                    for (let i = k + 1; i < n; i++)\n                        e[i] /= e[k];\n                    e[k + 1] += 1.0;\n                }\n                e[k] = -e[k];\n                if ((k + 1 < m) && (e[k] != 0.0)) {\n                    for (let i = k + 1; i < m; i++)\n                        work[i] = 0.0;\n                    for (let j = k + 1; j < n; j++)\n                        for (let i = k + 1; i < m; i++)\n                            work[i] += e[j] * A[i][j];\n                    for (let j = k + 1; j < n; j++) {\n                        let t = -e[j] / e[k + 1];\n                        for (let i = k + 1; i < m; i++)\n                            A[i][j] += t * work[i];\n                    }\n                }\n                if (wantv) {\n                    for (let i = k + 1; i < n; i++)\n                        V[i][k] = e[i];\n                }\n            }\n        }\n        let p = Math.min(n, m + 1);\n        if (nct < n)\n            s[nct] = A[nct][nct];\n        if (m < p)\n            s[p - 1] = 0.0;\n        if (nrt + 1 < p)\n            e[nrt] = A[nrt][p - 1];\n        e[p - 1] = 0.0;\n        if (wantu) {\n            for (let j = nct; j < nu; j++) {\n                for (let i = 0; i < m; i++)\n                    U[i][j] = 0.0;\n                U[j][j] = 1.0;\n            }\n            for (let k = nct - 1; k >= 0; k--) {\n                if (s[k] != 0.0) {\n                    for (let j = k + 1; j < nu; j++) {\n                        let t = 0;\n                        for (let i = k; i < m; i++)\n                            t += U[i][k] * U[i][j];\n                        t = -t / U[k][k];\n                        for (let i = k; i < m; i++)\n                            U[i][j] += t * U[i][k];\n                    }\n                    for (let i = k; i < m; i++)\n                        U[i][k] = -U[i][k];\n                    U[k][k] = 1.0 + U[k][k];\n                    for (let i = 0; i < k - 1; i++)\n                        U[i][k] = 0.0;\n                }\n                else {\n                    for (let i = 0; i < m; i++)\n                        U[i][k] = 0.0;\n                    U[k][k] = 1.0;\n                }\n            }\n        }\n        if (wantv) {\n            for (let k = n - 1; k >= 0; k--) {\n                if ((k < nrt) && (e[k] != 0.0)) {\n                    for (let j = k + 1; j < nu; j++) {\n                        let t = 0;\n                        for (let i = k + 1; i < n; i++)\n                            t += V[i][k] * V[i][j];\n                        t = -t / V[k + 1][k];\n                        for (let i = k + 1; i < n; i++)\n                            V[i][j] += t * V[i][k];\n                    }\n                }\n                for (let i = 0; i < n; i++)\n                    V[i][k] = 0.0;\n                V[k][k] = 1.0;\n            }\n        }\n        let pp = p - 1;\n        let iter = 0;\n        let eps = Math.pow(2.0, -52.0);\n        let tiny = Math.pow(2.0, -966.0);\n        while (p > 0) {\n            let k, kase;\n            for (k = p - 2; k >= -1; k--) {\n                if (k == -1)\n                    break;\n                if (Math.abs(e[k]) <= tiny + eps * (Math.abs(s[k]) + Math.abs(s[k + 1]))) {\n                    e[k] = 0.0;\n                    break;\n                }\n            }\n            if (k == p - 2) {\n                kase = 4;\n            }\n            else {\n                let ks;\n                for (ks = p - 1; ks >= k; ks--) {\n                    if (ks == k)\n                        break;\n                    let t = (ks != p ? Math.abs(e[ks]) : 0.) + (ks != k + 1 ? Math.abs(e[ks - 1]) : 0.);\n                    if (Math.abs(s[ks]) <= tiny + eps * t) {\n                        s[ks] = 0.0;\n                        break;\n                    }\n                }\n                if (ks == k)\n                    kase = 3;\n                else if (ks == p - 1)\n                    kase = 1;\n                else {\n                    kase = 2;\n                    k = ks;\n                }\n            }\n            k++;\n            if (kase == 1) {\n                let f = e[p - 2];\n                e[p - 2] = 0.0;\n                for (let j = p - 2; j >= k; j--) {\n                    let t = SingularValueDecomposition.hypot(s[j], f);\n                    let cs = s[j] / t;\n                    let sn = f / t;\n                    s[j] = t;\n                    if (j != k) {\n                        f = -sn * e[j - 1];\n                        e[j - 1] = cs * e[j - 1];\n                    }\n                    if (wantv) {\n                        for (let i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][p - 1];\n                            V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                            V[i][j] = t;\n                        }\n                    }\n                }\n            }\n            else if (kase == 2) {\n                let f = e[k - 1];\n                e[k - 1] = 0.0;\n                for (let j = k; j < p; j++) {\n                    let t = SingularValueDecomposition.hypot(s[j], f);\n                    let cs = s[j] / t;\n                    let sn = f / t;\n                    s[j] = t;\n                    f = -sn * e[j];\n                    e[j] = cs * e[j];\n                    if (wantu) {\n                        for (let i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][k - 1];\n                            U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n            }\n            else if (kase == 3) {\n                let scale = Math.max(Math.max(Math.max(Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2])), Math.abs(e[p - 2])), Math.abs(s[k])), Math.abs(e[k]));\n                let sp = s[p - 1] / scale;\n                let spm1 = s[p - 2] / scale;\n                let epm1 = e[p - 2] / scale;\n                let sk = s[k] / scale;\n                let ek = e[k] / scale;\n                let b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2.0;\n                let c = (sp * epm1) * (sp * epm1);\n                let shift = 0.0;\n                if ((b != 0.0) || (c != 0.0)) {\n                    shift = Math.sqrt(b * b + c);\n                    if (b < 0.0)\n                        shift = -shift;\n                    shift = c / (b + shift);\n                }\n                let f = (sk + sp) * (sk - sp) + shift;\n                let g = sk * ek;\n                for (let j = k; j < p - 1; j++) {\n                    let t = SingularValueDecomposition.hypot(f, g);\n                    let cs = f / t;\n                    let sn = g / t;\n                    if (j != k)\n                        e[j - 1] = t;\n                    f = cs * s[j] + sn * e[j];\n                    e[j] = cs * e[j] - sn * s[j];\n                    g = sn * s[j + 1];\n                    s[j + 1] = cs * s[j + 1];\n                    if (wantv) {\n                        for (let i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][j + 1];\n                            V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                            V[i][j] = t;\n                        }\n                    }\n                    t = SingularValueDecomposition.hypot(f, g);\n                    cs = f / t;\n                    sn = g / t;\n                    s[j] = t;\n                    f = cs * e[j] + sn * s[j + 1];\n                    s[j + 1] = -sn * e[j] + cs * s[j + 1];\n                    g = sn * e[j + 1];\n                    e[j + 1] = cs * e[j + 1];\n                    if (wantu && (j < m - 1)) {\n                        for (let i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][j + 1];\n                            U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n                e[p - 2] = f;\n                iter = iter + 1;\n            }\n            else if (kase == 4) {\n                if (s[k] <= 0.0) {\n                    s[k] = (s[k] < 0.0 ? -s[k] : 0.0);\n                    if (wantv) {\n                        for (let i = 0; i <= pp; i++)\n                            V[i][k] = -V[i][k];\n                    }\n                }\n                while (k < pp) {\n                    if (s[k] >= s[k + 1])\n                        break;\n                    let t = s[k];\n                    s[k] = s[k + 1];\n                    s[k + 1] = t;\n                    if (wantv && (k < n - 1)) {\n                        for (let i = 0; i < n; i++) {\n                            t = V[i][k + 1];\n                            V[i][k + 1] = V[i][k];\n                            V[i][k] = t;\n                        }\n                    }\n                    if (wantu && (k < m - 1)) {\n                        for (let i = 0; i < m; i++) {\n                            t = U[i][k + 1];\n                            U[i][k + 1] = U[i][k];\n                            U[i][k] = t;\n                        }\n                    }\n                    k++;\n                }\n                iter = 0;\n                p--;\n            }\n        }\n    }\n    getU() {\n        return Matrix.fromArray(this.U);\n    }\n    getV() {\n        return Matrix.fromArray(this.V);\n    }\n    getSingularValues() {\n        return this.s;\n    }\n    getS() {\n        const { n } = this;\n        let X = new Matrix(n, n, 0);\n        let S = X.A;\n        for (let i = 0; i < n; i++)\n            S[i][i] = this.s[i];\n        return X;\n    }\n    norm2() {\n        return this.s[0];\n    }\n    cond() {\n        const { m, n, s } = this;\n        return s[0] / s[Math.min(m, n) - 1];\n    }\n    rank() {\n        const { m, n, s } = this;\n        let eps = Math.pow(2.0, -52.0);\n        let tol = Math.max(m, n) * s[0] * eps;\n        let r = 0;\n        for (let i = 0; i < s.length; i++)\n            if (s[i] > tol)\n                r++;\n        return r;\n    }\n    static hypot(a, b) {\n        let r;\n        if (Math.abs(a) > Math.abs(b)) {\n            r = b / a;\n            r = Math.abs(a) * Math.sqrt(1 + r * r);\n        }\n        else if (b != 0) {\n            r = a / b;\n            r = Math.abs(b) * Math.sqrt(1 + r * r);\n        }\n        else {\n            r = 0.0;\n        }\n        return r;\n    }\n}\n//# sourceMappingURL=Matrix.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { dom, domLegacy } from './dom';\nimport { Size } from './Geom';\nimport { Vec } from './Vec';\nexport function safeInt(str, def = 0) {\n    if (str == null || str.length == 0)\n        return def;\n    let val = str.startsWith('0x') ? parseInt(str.substring(2), 16) :\n        str.startsWith('#') ? parseInt(str.substring(1), 16) : parseInt(str);\n    return isNaN(val) ? def : val;\n}\nexport function safeFloat(str, def = 0) {\n    if (str == null || str.length == 0)\n        return def;\n    let val = parseFloat(str);\n    return isNaN(val) ? def : val;\n}\nexport function newElement(parent, tag, attr) {\n    let domNew = dom(`<${tag}/>`);\n    if (attr)\n        domNew.attr(attr);\n    domLegacy(parent).append(domNew);\n    return domNew.el;\n}\nexport function addText(parent, text) {\n    let el = dom(parent).el;\n    el.appendChild(document.createTextNode(text));\n}\nexport function plural(count) {\n    return count == 1 ? '' : 's';\n}\nexport function formatDouble(value, sigfig) {\n    if (value == null)\n        return '';\n    let str = value.toPrecision(sigfig);\n    if (str.indexOf('.') > 0) {\n        while (str.endsWith('0'))\n            str = str.substring(0, str.length - 1);\n        if (str.endsWith('.'))\n            str = str.substring(0, str.length - 1);\n    }\n    return str;\n}\nexport function htmlToRGB(col) {\n    if (col == null || col.charAt(0) != '#' || col.length != 7)\n        return null;\n    return parseInt(col.substring(1), 16);\n}\nexport function colourCode(col) {\n    let hex = (col & 0xFFFFFF).toString(16);\n    while (hex.length < 6)\n        hex = '0' + hex;\n    return '#' + hex;\n}\nexport function colourAlpha(col) {\n    let transp = (col >>> 24) & 0xFF;\n    return transp == 0 ? 1 : transp == 0xFF ? 0 : 1 - (transp * (1.0 / 255));\n}\nconst ONE_OVER_255 = 1.0 / 255;\nexport function colourCanvas(col) {\n    if (col == 0xFFFFFF)\n        return 'white';\n    if (col == 0x000000)\n        return 'black';\n    if (col == -1)\n        return null;\n    if (col >= 0 && col <= 0xFFFFFF)\n        return colourCode(col);\n    const t = ((col >> 24) & 0xFF) * ONE_OVER_255;\n    const r = ((col >> 16) & 0xFF);\n    const g = ((col >> 8) & 0xFF);\n    const b = (col & 0xFF);\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + (1 - t) + ')';\n}\nexport function blendRGB(fract, rgb1, rgb2, rgb3) {\n    fract = Math.max(0, Math.min(1, fract));\n    let r1 = ((rgb1 >> 16) & 0xFF) * ONE_OVER_255, g1 = ((rgb1 >> 8) & 0xFF) * ONE_OVER_255, b1 = (rgb1 & 0xFF) * ONE_OVER_255;\n    let r2 = ((rgb2 >> 16) & 0xFF) * ONE_OVER_255, g2 = ((rgb2 >> 8) & 0xFF) * ONE_OVER_255, b2 = (rgb2 & 0xFF) * ONE_OVER_255;\n    let R, G, B;\n    if (rgb3 == null) {\n        let f1 = 1 - fract, f2 = fract;\n        R = Math.round(0xFF * (f1 * r1 + f2 * r2));\n        G = Math.round(0xFF * (f1 * g1 + f2 * g2));\n        B = Math.round(0xFF * (f1 * b1 + f2 * b2));\n    }\n    else {\n        let r3 = ((rgb3 >> 16) & 0xFF) * ONE_OVER_255, g3 = ((rgb3 >> 8) & 0xFF) * ONE_OVER_255, b3 = (rgb3 & 0xFF) * ONE_OVER_255;\n        if (fract < 0.5) {\n            let f2 = fract * 2, f1 = 1 - f2;\n            R = Math.round(0xFF * (f1 * r1 + f2 * r2));\n            G = Math.round(0xFF * (f1 * g1 + f2 * g2));\n            B = Math.round(0xFF * (f1 * b1 + f2 * b2));\n        }\n        else {\n            let f2 = (fract - 0.5) * 2, f1 = 1 - f2;\n            R = Math.round(0xFF * (f1 * r2 + f2 * r3));\n            G = Math.round(0xFF * (f1 * g2 + f2 * g3));\n            B = Math.round(0xFF * (f1 * b2 + f2 * b3));\n        }\n    }\n    return (R << 16) | (G << 8) | B;\n}\nexport function formatDate(date) {\n    const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    let day = date.getDate(), mon = date.getMonth(), year = date.getFullYear();\n    return day + '-' + MONTHS[mon] + '-' + year;\n}\nexport function nodeText(node) {\n    let ret = '';\n    if (!node)\n        return '';\n    node = node.firstChild;\n    while (node) {\n        if (node.nodeType == 3 || node.nodeType == 4)\n            ret += node.nodeValue;\n        node = node.nextSibling;\n    }\n    return ret;\n}\nexport function isDef(v) {\n    return !(v === null || typeof v === 'undefined');\n}\nexport function notDef(v) {\n    return v === null || typeof v === 'undefined';\n}\nexport function eventCoords(event, container) {\n    let pos = domLegacy(container).offset();\n    let relX = event.pageX - pos.x;\n    let relY = event.pageY - pos.y;\n    return [relX, relY];\n}\nexport function setBoundaryPixels(dom, x, y, w, h) {\n    dom.css({ 'left': x + 'px', 'top': y + 'px', 'width': w + 'px', 'height': h + 'px' });\n}\nexport function getBoundaryPixelsDOM(dom) {\n    let offset = dom.offset();\n    return [offset.x, offset.y, dom.width(), dom.height()];\n}\nexport function getOffsetPixelsDOM(dom) {\n    return [dom.elHTML.offsetLeft, dom.elHTML.offsetTop, dom.elHTML.offsetWidth, dom.elHTML.offsetHeight];\n}\nexport function norm_xy(dx, dy) {\n    return Math.hypot(dx, dy);\n}\nexport function norm_xyz(dx, dy, dz) {\n    return Math.hypot(dx, dy, dz);\n}\nexport function norm2_xy(dx, dy) {\n    return dx * dx + dy * dy;\n}\nexport function norm2_xyz(dx, dy, dz) {\n    return dx * dx + dy * dy + dz * dz;\n}\nexport function signum(v) {\n    return v < 0 ? -1 : v > 0 ? 1 : 0;\n}\nexport function sqr(v) {\n    return v * v;\n}\nexport function invZ(v) { return v == 0 ? 0 : 1.0 / v; }\nexport function fltEqual(v1, v2) { return v1 == v2 || Math.abs(v1 - v2) <= 1E-7 * Math.max(v1, v2); }\nexport function realEqual(v1, v2) { return v1 == v2 || Math.abs(v1 - v2) <= 1E-14 * Math.max(v1, v2); }\nexport function randomInt(size) {\n    if (size <= 1)\n        return 0;\n    return Math.floor(Math.random() * size);\n}\nexport const TWOPI = 2 * Math.PI;\nexport const INV_TWOPI = 1.0 / TWOPI;\nexport const DEGRAD = Math.PI / 180;\nexport const RADDEG = 180 / Math.PI;\nexport function angleNorm(th) {\n    if (th == -Math.PI)\n        return Math.PI;\n    if (th < -Math.PI) {\n        let mod = Math.ceil((-th - Math.PI) * INV_TWOPI);\n        return th + mod * TWOPI;\n    }\n    if (th > Math.PI) {\n        let mod = Math.ceil((th - Math.PI) * INV_TWOPI);\n        return th - mod * TWOPI;\n    }\n    return th;\n}\nexport function angleDiff(th1, th2) {\n    let theta = angleNorm(th1) - angleNorm(th2);\n    return theta - (theta > Math.PI ? TWOPI : 0) + (theta <= -Math.PI ? TWOPI : 0);\n}\nexport function angleDiffPos(th1, th2) {\n    let theta = angleNorm(th1) - angleNorm(th2);\n    return theta + (theta < 0 ? TWOPI : 0);\n}\nexport function sortAngles(theta) {\n    if (theta == null || theta.length < 2)\n        return theta;\n    theta = theta.slice(0);\n    for (let n = 0; n < theta.length; n++)\n        theta[n] = angleNorm(theta[n]);\n    Vec.sort(theta);\n    while (true) {\n        let a = theta[theta.length - 1], b = theta[0], c = theta[1];\n        if (angleDiff(b, a) <= angleDiff(c, b))\n            break;\n        for (let n = theta.length - 1; n > 0; n--)\n            theta[n] = theta[n - 1];\n        theta[0] = a;\n    }\n    return theta;\n}\nexport function uniqueAngles(theta, threshold) {\n    theta = sortAngles(theta);\n    for (let n = 1; n < theta.length; n++) {\n        if (Math.abs(angleDiff(theta[n], theta[n - 1])) <= threshold) {\n            theta.splice(n, 1);\n            n--;\n        }\n    }\n    return theta;\n}\nexport function minArray(a) {\n    if (a == null || a.length == 0)\n        return 0;\n    let v = a[0];\n    for (let n = 1; n < a.length; n++)\n        v = Math.min(v, a[n]);\n    return v;\n}\nexport function maxArray(a) {\n    if (a == null || a.length == 0)\n        return 0;\n    let v = a[0];\n    for (let n = 1; n < a.length; n++)\n        v = Math.max(v, a[n]);\n    return v;\n}\nexport function findNode(parent, name) {\n    if (parent == null)\n        return null;\n    let node = parent.firstChild;\n    while (node) {\n        if (node.nodeName == name)\n            return node;\n        node = node.nextSibling;\n    }\n    return null;\n}\nexport function findNodes(parent, name) {\n    if (parent == null)\n        return null;\n    let node = parent.firstChild;\n    let list = [];\n    while (node) {\n        if (node.nodeName == name)\n            list.push(node);\n        node = node.nextSibling;\n    }\n    return list;\n}\nexport function pathRoundedRect(x1, y1, x2, y2, rad) {\n    let path = new Path2D();\n    path.moveTo(x2 - rad, y1);\n    path.quadraticCurveTo(x2, y1, x2, y1 + rad);\n    path.lineTo(x2, y2 - rad);\n    path.quadraticCurveTo(x2, y2, x2 - rad, y2);\n    path.lineTo(x1 + rad, y2);\n    path.quadraticCurveTo(x1, y2, x1, y2 - rad);\n    path.lineTo(x1, y1 + rad);\n    path.quadraticCurveTo(x1, y1, x1 + rad, y1);\n    path.closePath();\n    return path;\n}\nexport function coordsRoundedRect(x1, y1, x2, y2, rad) {\n    let px = [x2 - rad, x2, x2, x2, x2, x2 - rad, x1 + rad, x1, x1, x1, x1, x1 + rad];\n    let py = [y1, y1, y1 + rad, y2 - rad, y2, y2, y2, y2, y2 - rad, y1 + rad, y1, y1];\n    let ctrl = [false, true, false, false, true, false, false, true, false, false, true, false];\n    return [px, py, ctrl];\n}\nexport function drawLine(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\nexport const ASCENT_FUDGE = 1.4;\nexport function fontSansSerif(ascent) { return `${ascent * ASCENT_FUDGE}px sans-serif`; }\nexport function pixelDensity() {\n    if ('devicePixelRatio' in window && window.devicePixelRatio > 1)\n        return window.devicePixelRatio;\n    return 1;\n}\nexport function clone(data) {\n    if (data == null)\n        return null;\n    if (Array.isArray(data))\n        return data.slice(0);\n    if (typeof data != 'object')\n        return data;\n    let result = {};\n    for (let key in data)\n        result[key] = data[key];\n    return result;\n}\nexport function deepClone(data) {\n    if (data == null)\n        return null;\n    if (typeof data == 'function')\n        return null;\n    if (typeof data != 'object')\n        return data;\n    let result = Array.isArray(data) ? [] : {};\n    for (let key in data) {\n        let val = data[key];\n        result[key] = typeof val === 'object' ? deepClone(val) : val;\n    }\n    return result;\n}\nexport function escapeHTML(text) {\n    if (!text)\n        return '';\n    const map = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#039;' };\n    return text.replace(/[&<>\"']/g, (m) => map[m]);\n}\nexport function orBlank(str) { return str == null ? '' : str; }\nexport function dictValues(dict) {\n    let list = [];\n    for (let key in dict)\n        list.push(dict[key]);\n    return list;\n}\nexport function zip(u, v) {\n    return u.map((a, i) => [a, v[i]]);\n}\nexport function toUTF8(str) {\n    let data = [], stripe = '';\n    const sz = str.length;\n    for (let n = 0; n < sz; n++) {\n        let charcode = str.charCodeAt(n);\n        if (charcode < 0x80)\n            stripe += str.charAt(n);\n        else if (charcode < 0x800) {\n            stripe += String.fromCharCode(0xc0 | (charcode >> 6));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n            stripe += String.fromCharCode(0xe0 | (charcode >> 12));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3F));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        else {\n            n++;\n            charcode = 0x10000 + (((charcode & 0x3FF) << 10) | (str.charCodeAt(n) & 0x3FF));\n            stripe += String.fromCharCode(0xf0 | (charcode >> 18));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 12) & 0x3F));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3F));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        if (stripe.length > 100) {\n            data.push(stripe);\n            stripe = '';\n        }\n    }\n    data.push(stripe);\n    return data.join('');\n}\nexport function fromUTF8(str) {\n    let data = [], stripe = '';\n    const sz = str.length;\n    for (let n = 0; n < sz; n++) {\n        let value = str.charCodeAt(n);\n        if (value < 0x80)\n            stripe += str.charAt(n);\n        else if (value > 0xBF && value < 0xE0) {\n            stripe += String.fromCharCode((value & 0x1F) << 6 | str.charCodeAt(n + 1) & 0x3F);\n            n++;\n        }\n        else if (value > 0xDF && value < 0xF0) {\n            str += String.fromCharCode((value & 0x0F) << 12 | (str.charCodeAt(n + 1) & 0x3F) << 6 | str.charCodeAt(n + 2) & 0x3F);\n            n += 2;\n        }\n        else {\n            let charCode = ((value & 0x07) << 18 | (str.charCodeAt(n + 1) & 0x3F) << 12 | (str.charCodeAt(n + 2) & 0x3F) << 6 | str.charCodeAt(n + 3) & 0x3F) - 0x010000;\n            stripe += String.fromCharCode(charCode >> 10 | 0xD800, charCode & 0x03FF | 0xDC00);\n            n += 3;\n        }\n        if (stripe.length > 100) {\n            data.push(stripe);\n            stripe = '';\n        }\n    }\n    data.push(stripe);\n    return data.join('');\n}\nexport function jsonPrettyPrint(json) {\n    let lines = JSON.stringify(json, null, 1).split(/\\n/);\n    for (let n = 0; n < lines.length; n++) {\n        lines[n] = lines[n].trim();\n        if (lines[n].length > 1 && (lines[n].endsWith('{') || lines[n].endsWith('['))) {\n            let ch = lines[n].charAt(lines[n].length - 1);\n            lines[n] = lines[n].substring(0, lines[n].length - 1);\n            lines.splice(n + 1, 0, ch);\n            n--;\n        }\n    }\n    let indent = 0;\n    for (let n = 0; n < lines.length; n++) {\n        let orig = lines[n];\n        if (orig == ']' || orig == '}' || orig == '],' || orig == '},')\n            indent--;\n        lines[n] = '\\t'.repeat(indent) + orig;\n        if (orig == '[' || orig == '{')\n            indent++;\n    }\n    return lines.join('\\n');\n}\nexport var KeyCode;\n(function (KeyCode) {\n    KeyCode[\"Backspace\"] = \"Backspace\";\n    KeyCode[\"Tab\"] = \"Tab\";\n    KeyCode[\"Enter\"] = \"Enter\";\n    KeyCode[\"Escape\"] = \"Escape\";\n    KeyCode[\"Space\"] = \" \";\n    KeyCode[\"PageUp\"] = \"PageUp\";\n    KeyCode[\"PageDown\"] = \"PageDown\";\n    KeyCode[\"End\"] = \"End\";\n    KeyCode[\"Home\"] = \"Home\";\n    KeyCode[\"Left\"] = \"ArrowLeft\";\n    KeyCode[\"Right\"] = \"ArrowRight\";\n    KeyCode[\"Up\"] = \"ArrowUp\";\n    KeyCode[\"Down\"] = \"ArrowDown\";\n    KeyCode[\"Delete\"] = \"Delete\";\n    KeyCode[\"Insert\"] = \"Insert\";\n})(KeyCode || (KeyCode = {}));\nexport function readTextURL(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            let request = new XMLHttpRequest();\n            request.open('GET', url.toString(), true);\n            request.responseType = 'text';\n            request.onload = () => resolve(request.response.toString());\n            request.onerror = () => resolve(null);\n            request.send();\n        });\n    });\n}\nexport function postJSONURL(url, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            let request = new XMLHttpRequest();\n            request.open('POST', url.toString(), true);\n            request.responseType = 'text';\n            request.onload = () => {\n                let txt = request.response.toString();\n                try {\n                    resolve(JSON.parse(txt));\n                }\n                catch (ex) {\n                    let snippet = txt.substring(0, Math.min(200, txt.length)) + (txt.length > 200 ? '...etc...' : '');\n                    reject('JSON parsing error on result:' + ex + ' for text: ' + snippet);\n                }\n            };\n            request.onerror = () => reject('Failed to request URL: ' + url);\n            request.send(JSON.stringify(params));\n        });\n    });\n}\nexport function yieldDOM() {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => setTimeout(() => resolve()));\n    });\n}\nexport function pause(seconds) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => setTimeout(() => resolve(), seconds * 1000));\n    });\n}\nlet staticScrollerSize = null;\nexport function empiricalScrollerSize() {\n    if (staticScrollerSize)\n        return staticScrollerSize;\n    let outer = dom('<div/>').css({ 'visibility': 'hidden', 'width': '100px', 'height': '100px', 'overflow': 'scroll' }).appendTo(dom(document.body));\n    let inner = dom('<div/>').css({ 'width': '100%', 'height': '100%' }).appendTo(outer);\n    staticScrollerSize = new Size(100 - inner.elHTML.offsetWidth, 100 - inner.elHTML.offsetHeight);\n    outer.remove();\n    return staticScrollerSize;\n}\nexport function stringSimilarityPermutations(str1, str2) {\n    if (!str1 || !str2)\n        return 0;\n    const ch1 = Array.from(str1), len1 = ch1.length;\n    const ch2 = Array.from(str2), len2 = ch2.length;\n    let levenshteinDistance = (sz1, sz2) => {\n        let dist = [];\n        for (let i = 0; i <= sz1; i++) {\n            dist.push(Vec.numberArray(0, sz2 + 1));\n            dist[i][0] = i;\n        }\n        for (let j = 1; j <= sz2; j++)\n            dist[0][j] = j;\n        for (let j = 1; j <= sz2; j++)\n            for (let i = 1; i <= sz1; i++) {\n                let cost = ch1[i - 1] == ch2[j - 1] ? 0 : 1;\n                dist[i][j] = Math.min(Math.min(dist[i - 1][j] + 1, dist[i][j - 1] + 1), dist[i - 1][j - 1] + cost);\n            }\n        return dist[sz1][sz2];\n    };\n    let cost = ch1[len1 - 1] == ch2[len2 - 1] ? 0 : 1;\n    let lev1 = levenshteinDistance(len1 - 1, len2) + 1;\n    let lev2 = levenshteinDistance(len1, len2 - 1) + 1;\n    let lev3 = levenshteinDistance(len1 - 1, len2 - 1) + cost;\n    return Math.min(Math.min(lev1, lev2), lev3);\n}\n//# sourceMappingURL=util.js.map","import { norm2_xy, norm_xy, sqr } from './util';\nimport { Vec } from './Vec';\nconst EPSILON = Math.pow(2, -52);\nexport class Triangulation2D {\n    constructor(px, py) {\n        this.px = px;\n        this.py = py;\n        this.numTriangles = 0;\n        this.edgeStack = Vec.numberArray(0, 512);\n        this.hull = null;\n        this.px = px;\n        this.py = py;\n        this.sz = px.length;\n        let maxTriangles = Math.max(2 * this.sz - 5, 0);\n        this.triangles = new Array(maxTriangles * 3);\n        this.halfedges = new Array(maxTriangles * 3);\n        this.hashSize = Math.ceil(Math.sqrt(this.sz));\n        this.hullPrev = new Array(this.sz);\n        this.hullNext = new Array(this.sz);\n        this.hullTri = new Array(this.sz);\n        this.hullHash = Vec.numberArray(-1, this.hashSize);\n        this.ids = new Array(this.sz);\n        this.dists = new Array(this.sz);\n        this.update();\n    }\n    trimConcave(threshold) {\n        const threshSq = sqr(threshold);\n        const { sz, px, py } = this;\n        let tri = this.triangles.slice(0);\n        let edge = [];\n        for (let n = 0, i = 0; i < tri.length; n++, i += 3) {\n            edge.push(sz * Math.min(tri[i + 0], tri[i + 1]) + Math.max(tri[i + 0], tri[i + 1]));\n            edge.push(sz * Math.min(tri[i + 0], tri[i + 2]) + Math.max(tri[i + 0], tri[i + 2]));\n            edge.push(sz * Math.min(tri[i + 1], tri[i + 2]) + Math.max(tri[i + 1], tri[i + 2]));\n        }\n        let uniqueEdges = Vec.uniqueUnstable(edge);\n        for (let n = 0; n < edge.length; n++)\n            edge[n] = uniqueEdges.indexOf(edge[n]);\n        let edgeCount = new Array(edge.length);\n        while (true) {\n            const ntri = tri.length / 3;\n            edgeCount.fill(0);\n            for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n                edgeCount[edge[i + 0]]++;\n                edgeCount[edge[i + 1]]++;\n                edgeCount[edge[i + 2]]++;\n            }\n            let mask = Vec.booleanArray(true, ntri);\n            for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n                const c1 = edgeCount[edge[i + 0]];\n                const c2 = edgeCount[edge[i + 1]];\n                const c3 = edgeCount[edge[i + 2]];\n                const i1 = tri[i], i2 = tri[i + 1], i3 = tri[i + 2];\n                if (c1 == 1 && c2 != 1 && c3 != 1)\n                    mask[n] = norm2_xy(px[i1] - px[i2], py[i1] - py[i2]) < threshSq;\n                else if (c1 != 1 && c2 == 1 && c3 != 1)\n                    mask[n] = norm2_xy(px[i1] - px[i3], py[i1] - py[i3]) < threshSq;\n                else if (c1 != 1 && c2 != 1 && c3 == 1)\n                    mask[n] = norm2_xy(px[i2] - px[i3], py[i2] - py[i3]) < threshSq;\n            }\n            if (Vec.allTrue(mask))\n                break;\n            let repTri = new Array(Vec.maskCount(mask) * 3);\n            let repEdge = new Array(Vec.maskCount(mask) * 3);\n            for (let n = 0, i = 0, j = 0, k = 0; n < ntri; n++, i += 3)\n                if (mask[n]) {\n                    repTri[j++] = tri[i];\n                    repTri[j++] = tri[i + 1];\n                    repTri[j++] = tri[i + 2];\n                    repEdge[k++] = edge[i];\n                    repEdge[k++] = edge[i + 1];\n                    repEdge[k++] = edge[i + 2];\n                }\n            tri = repTri;\n            edge = repEdge;\n        }\n        return tri;\n    }\n    traceOutline(tri) {\n        const npt = tri.length, ntri = npt / 3;\n        const { sz, px, py } = this;\n        let edgeCount = new Map();\n        for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n            const e1 = sz * Math.min(tri[i + 0], tri[i + 1]) + Math.max(tri[i + 0], tri[i + 1]);\n            const e2 = sz * Math.min(tri[i + 0], tri[i + 2]) + Math.max(tri[i + 0], tri[i + 2]);\n            const e3 = sz * Math.min(tri[i + 1], tri[i + 2]) + Math.max(tri[i + 1], tri[i + 2]);\n            edgeCount.set(e1, (edgeCount.get(e1) || 0) + 1);\n            edgeCount.set(e2, (edgeCount.get(e2) || 0) + 1);\n            edgeCount.set(e3, (edgeCount.get(e3) || 0) + 1);\n        }\n        let edgePairs = [];\n        for (let entry of edgeCount.entries())\n            if (entry[1] == 1) {\n                const e = entry[0];\n                const i1 = Math.floor(e / sz), i2 = e % sz;\n                edgePairs.push(i1);\n                edgePairs.push(i2);\n            }\n        const idx = Vec.uniqueUnstable(edgePairs);\n        const isz = idx.length;\n        const idxMap = new Map();\n        for (let n = 0; n < isz; n++)\n            idxMap.set(idx[n], n);\n        let g1 = Vec.numberArray(-1, isz), g2 = Vec.numberArray(-1, isz);\n        for (let n = 0; n < edgePairs.length; n += 2) {\n            const i1 = idxMap.get(edgePairs[n]), i2 = idxMap.get(edgePairs[n + 1]);\n            if (g1[i1] < 0)\n                g1[i1] = i2;\n            else\n                g2[i1] = i2;\n            if (g1[i2] < 0)\n                g1[i2] = i1;\n            else\n                g2[i2] = i1;\n        }\n        let mask = Vec.booleanArray(false, isz);\n        let sequence = new Array(isz);\n        sequence[0] = 0;\n        mask[0] = true;\n        for (let n = 1; n < isz; n++) {\n            const i = sequence[n - 1];\n            if (!mask[g1[i]])\n                sequence[n] = g1[i];\n            else\n                sequence[n] = g2[i];\n            mask[sequence[n]] = true;\n        }\n        return Vec.idxGet(idx, sequence);\n    }\n    update() {\n        const sz = this.sz;\n        let { px, py, ids, dists, triangles, halfedges } = this;\n        const minX = Vec.min(px), minY = Vec.min(py);\n        const maxX = Vec.max(px), maxY = Vec.max(py);\n        for (let n = 0; n < sz; n++)\n            ids[n] = n;\n        this.centreX = 0.5 * (minX + maxX);\n        this.centreY = 0.5 * (minY + maxY);\n        let i0 = 0, i1 = 0, i2 = 0;\n        let minDist = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            const d = norm_xy(this.centreX - px[n], this.centreY - py[n]);\n            if (d < minDist) {\n                i0 = n;\n                minDist = d;\n            }\n        }\n        const i0x = px[i0], i0y = py[i0];\n        minDist = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            if (n == i0)\n                continue;\n            const d = norm_xy(i0x - px[n], i0y - py[n]);\n            if (d < minDist && d > 0) {\n                i1 = n;\n                minDist = d;\n            }\n        }\n        let i1x = px[i1], i1y = py[i1];\n        let minRadius = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            if (n == i0 || n == i1)\n                continue;\n            let r = this.circumRadius(i0x, i0y, i1x, i1y, px[n], py[n]);\n            if (r < minRadius) {\n                i2 = n;\n                minRadius = r;\n            }\n        }\n        let i2x = px[i2], i2y = py[i2];\n        if (!Number.isFinite(minRadius)) {\n            for (let n = 0; n < sz; n++) {\n                dists[n] = px[n] - px[0];\n                if (dists[n] == 0)\n                    dists[n] = py[n] - py[0];\n            }\n            this.quicksort(0, sz - 1);\n            let hull = new Array(sz);\n            let j = 0;\n            let d0 = Number.NEGATIVE_INFINITY;\n            for (let n = 0; n < sz; n++) {\n                let id = ids[n];\n                if (dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = dists[id];\n                }\n            }\n            this.hull = hull.slice(0, j);\n            triangles = [];\n            halfedges = [];\n            return;\n        }\n        if (this.orient(i0x, i0y, i1x, i1y, i2x, i2y)) {\n            let i = i1;\n            let x = i1x, y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n        this.pickCircumCentre(i0x, i0y, i1x, i1y, i2x, i2y);\n        for (let n = 0; n < sz; n++)\n            dists[n] = norm_xy(px[n] - this.centreX, py[n] - this.centreY);\n        this.quicksort(0, sz - 1);\n        this.hullStart = i0;\n        let hullSize = 3;\n        const { hullNext, hullPrev, hullTri, hullHash, hashSize } = this;\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n        hullHash.fill(-1);\n        hullHash[this.hashKey(i0x, i0y)] = i0;\n        hullHash[this.hashKey(i1x, i1y)] = i1;\n        hullHash[this.hashKey(i2x, i2y)] = i2;\n        this.numTriangles = 0;\n        this.addTriangle(i0, i1, i2, -1, -1, -1);\n        let xp = 0, yp = 0;\n        for (let k = 0; k < ids.length; k++) {\n            let i = ids[k];\n            let x = px[i], y = py[i];\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON)\n                continue;\n            xp = x;\n            yp = y;\n            if (i == i0 || i == i1 || i == i2)\n                continue;\n            let start = 0;\n            for (let j = 0, key = this.hashKey(x, y); j < hashSize; j++) {\n                start = hullHash[(key + j) % hashSize];\n                if (start >= 0 && start != hullNext[start])\n                    break;\n            }\n            start = hullPrev[start];\n            let e = start, q = hullNext[e];\n            while (!this.orient(x, y, px[e], py[e], px[q], py[q])) {\n                e = q;\n                if (e == start) {\n                    e = -1;\n                    break;\n                }\n                q = hullNext[e];\n            }\n            if (e < 0)\n                continue;\n            let t = this.addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n            hullTri[i] = this.legalise(t + 2);\n            hullTri[e] = t;\n            hullSize++;\n            let n = hullNext[e];\n            q = hullNext[n];\n            while (this.orient(x, y, px[n], py[n], px[q], py[q])) {\n                t = this.addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this.legalise(t + 2);\n                hullNext[n] = n;\n                hullSize--;\n                n = q;\n                q = hullNext[n];\n            }\n            if (e == start) {\n                q = hullPrev[e];\n                while (this.orient(x, y, px[q], py[q], px[e], py[e])) {\n                    t = this.addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this.legalise(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e;\n                    hullSize--;\n                    e = q;\n                    q = hullPrev[e];\n                }\n            }\n            this.hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n            hullHash[this.hashKey(x, y)] = i;\n            hullHash[this.hashKey(px[e], py[e])] = e;\n        }\n        this.hull = new Array(hullSize);\n        for (let n = 0, e = this.hullStart; n < hullSize; n++) {\n            this.hull[n] = e;\n            e = hullNext[e];\n        }\n        this.triangles = triangles.slice(0, this.numTriangles);\n        this.halfedges = halfedges.slice(0, this.numTriangles);\n    }\n    hashKey(x, y) {\n        return Math.floor(this.pseudoAngle(x - this.centreX, y - this.centreY) * this.hashSize) % this.hashSize;\n    }\n    legalise(a) {\n        let i = 0;\n        let ar = 0;\n        while (true) {\n            let b = this.halfedges[a];\n            let a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n            if (b < 0) {\n                if (i == 0)\n                    break;\n                a = this.edgeStack[--i];\n                continue;\n            }\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n            const { px, py, triangles, halfedges } = this;\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n            let illegal = this.inCircle(px[p0], py[p0], px[pr], py[pr], px[pl], py[pl], px[p1], py[p1]);\n            if (illegal) {\n                this.triangles[a] = p1;\n                this.triangles[b] = p0;\n                const hbl = halfedges[bl];\n                if (hbl < 0) {\n                    let e = this.hullStart;\n                    do {\n                        if (this.hullTri[e] == bl) {\n                            this.hullTri[e] = a;\n                            break;\n                        }\n                        e = this.hullPrev[e];\n                    } while (e != this.hullStart);\n                }\n                this.link(a, hbl);\n                this.link(b, halfedges[ar]);\n                this.link(ar, bl);\n                const br = b0 + (b + 1) % 3;\n                if (i < this.edgeStack.length)\n                    this.edgeStack[i++] = br;\n            }\n            else {\n                if (i == 0)\n                    break;\n                a = this.edgeStack[--i];\n            }\n        }\n        return ar;\n    }\n    link(a, b) {\n        this.halfedges[a] = b;\n        if (b >= 0)\n            this.halfedges[b] = a;\n    }\n    addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.numTriangles;\n        this.triangles[t] = i0;\n        this.triangles[t + 1] = i1;\n        this.triangles[t + 2] = i2;\n        this.link(t, a);\n        this.link(t + 1, b);\n        this.link(t + 2, c);\n        this.numTriangles += 3;\n        return t;\n    }\n    pseudoAngle(dx, dy) {\n        const p = dx / (Math.abs(dx) + Math.abs(dy));\n        return (dy > 0 ? 3 - p : 1 + p) / 4;\n    }\n    orientIfSure(px, py, rx, ry, qx, qy) {\n        const l = (ry - py) * (qx - px);\n        const r = (rx - px) * (qy - py);\n        return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n    }\n    orient(rx, ry, qx, qy, px, py) {\n        let o = this.orientIfSure(px, py, rx, ry, qx, qy);\n        if (o != 0)\n            return o < 0;\n        o = this.orientIfSure(rx, ry, qx, qy, px, py);\n        if (o != 0)\n            return o < 0;\n        o = this.orientIfSure(qx, qy, px, py, rx, ry);\n        return o < 0;\n    }\n    inCircle(ax, ay, bx, by, cx, cy, px, py) {\n        const dx = ax - px;\n        const dy = ay - py;\n        const ex = bx - px;\n        const ey = by - py;\n        const fx = cx - px;\n        const fy = cy - py;\n        const ap = dx * dx + dy * dy;\n        const bp = ex * ex + ey * ey;\n        const cp = fx * fx + fy * fy;\n        return dx * (ey * cp - bp * fy) -\n            dy * (ex * cp - bp * fx) +\n            ap * (ex * fy - ey * fx) < 0;\n    }\n    circumRadius(ax, ay, bx, by, cx, cy) {\n        const dx = bx - ax;\n        const dy = by - ay;\n        const ex = cx - ax;\n        const ey = cy - ay;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        const d = 0.5 / (dx * ey - dy * ex);\n        const x = (ey * bl - dy * cl) * d;\n        const y = (dx * cl - ex * bl) * d;\n        return x * x + y * y;\n    }\n    pickCircumCentre(ax, ay, bx, by, cx, cy) {\n        const dx = bx - ax;\n        const dy = by - ay;\n        const ex = cx - ax;\n        const ey = cy - ay;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        const d = 0.5 / (dx * ey - dy * ex);\n        this.centreX = ax + (ey * bl - dy * cl) * d;\n        this.centreY = ay + (dx * cl - ex * bl) * d;\n    }\n    quicksort(left, right) {\n        const { ids, dists } = this;\n        if (right - left <= 20) {\n            for (let i = left + 1; i <= right; i++) {\n                const temp = ids[i];\n                const tempDist = dists[temp];\n                let j = i - 1;\n                while (j >= left && dists[ids[j]] > tempDist)\n                    ids[j + 1] = ids[j--];\n                ids[j + 1] = temp;\n            }\n        }\n        else {\n            let median = (left + right) >> 1;\n            let i = left + 1;\n            let j = right;\n            Vec.swap(ids, median, i);\n            if (dists[ids[left]] > dists[ids[right]])\n                Vec.swap(ids, left, right);\n            if (dists[ids[i]] > dists[ids[right]])\n                Vec.swap(ids, i, right);\n            if (dists[ids[left]] > dists[ids[i]])\n                Vec.swap(ids, left, i);\n            let temp = ids[i];\n            const tempDist = dists[temp];\n            while (true) {\n                do\n                    i++;\n                while (dists[ids[i]] < tempDist);\n                do\n                    j--;\n                while (dists[ids[j]] > tempDist);\n                if (j < i)\n                    break;\n                Vec.swap(ids, i, j);\n            }\n            ids[left + 1] = ids[j];\n            ids[j] = temp;\n            if (right - i + 1 >= j - left) {\n                this.quicksort(i, right);\n                this.quicksort(left, j - 1);\n            }\n            else {\n                this.quicksort(left, j - 1);\n                this.quicksort(i, right);\n            }\n        }\n    }\n}\n//# sourceMappingURL=Triangulation2D.js.map","import { Matrix, SingularValueDecomposition } from './Matrix';\nimport { Triangulation2D } from './Triangulation2D';\nimport { angleDiff, angleDiffPos, angleNorm, maxArray, minArray, norm2_xy, norm_xy, realEqual, sqr, TWOPI } from './util';\nimport { Vec } from './Vec';\nexport class GeomUtil {\n    static pointInPolygon(x, y, px, py) {\n        if (x < minArray(px) || x > maxArray(px) || y < minArray(py) || y > maxArray(py))\n            return false;\n        let sz = px.length;\n        for (let n = 0; n < sz; n++)\n            if (px[n] == x && py[n] == y)\n                return true;\n        let phase = false;\n        for (let n = 0; n < sz; n++) {\n            let x1 = px[n], y1 = py[n], x2 = px[n + 1 < sz ? n + 1 : 0], y2 = py[n + 1 < sz ? n + 1 : 0];\n            if (y > Math.min(y1, y2) && y <= Math.max(y1, y2) && x <= Math.max(x1, x2) && y1 != y2) {\n                let intr = (y - y1) * (x2 - x1) / (y2 - y1) + x1;\n                if (x1 == x2 || x <= intr)\n                    phase = !phase;\n            }\n        }\n        return phase;\n    }\n    static areLinesParallel(x1, y1, x2, y2, x3, y3, x4, y4) {\n        let dxa = x2 - x1, dya = y2 - y1, dxb = x4 - x3, dyb = y4 - y3;\n        let xmajorA = Math.abs(dxa) > Math.abs(dya), xmajorB = Math.abs(dxb) > Math.abs(dyb);\n        if (xmajorA != xmajorB)\n            return false;\n        const EPS = 1E-6;\n        if (xmajorA)\n            return Math.abs(dya / dxa - dyb / dxb) < EPS;\n        else\n            return Math.abs(dxa / dya - dxb / dyb) < EPS;\n    }\n    static lineIntersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        let u = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n        return [x1 + u * (x2 - x1), y1 + u * (y2 - y1)];\n    }\n    static isPointOnLineSeg(px, py, x1, y1, x2, y2) {\n        if (px < Math.min(x1, x2) || px > Math.max(x1, x2) || py < Math.min(y1, y2) || py > Math.max(y1, y2))\n            return false;\n        if ((px == x1 && py == y1) || (px == x2 && py == y2))\n            return true;\n        let dx = x2 - x1, dy = y2 - y1;\n        if (Math.abs(dx) > Math.abs(dy))\n            return realEqual(py, (dy / dx) * (px - x1) + y1);\n        else\n            return realEqual(px, (dx / dy) * (py - y1) + x1);\n    }\n    static pointLineDistance(px, py, x1, y1, x2, y2) {\n        let dx = x2 - x1, dy = y2 - y1;\n        return Math.abs(dy * px - dx * py + x2 * y1 - y2 * x1) / norm_xy(dx, dy);\n    }\n    static pointLineSegDistance(px, py, x1, y1, x2, y2) {\n        let dx = x2 - x1, dy = y2 - y1;\n        let t = ((px - x1) * dx + (py - y1) * dy) / norm2_xy(dx, dy);\n        t = Math.max(0, Math.min(1, t));\n        let tx = x1 + t * dx, ty = y1 + t * dy;\n        return norm_xy(px - tx, py - ty);\n    }\n    static doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (Math.max(x1, x2) < Math.min(x3, x4) || Math.max(y1, y2) < Math.min(y3, y4))\n            return false;\n        if (Math.min(x1, x2) > Math.max(x3, x4) || Math.min(y1, y2) > Math.max(y3, y4))\n            return false;\n        if ((x1 == x3 && y1 == y3) || (x1 == x4 && y1 == y4) || (x2 == x3 && y2 == y3) || (x2 == x4 && y2 == y4))\n            return true;\n        if ((x1 == x2 || x3 == x4) && (x1 == x3 || x1 == x4 || x2 == x3 || x2 == x4))\n            return true;\n        if ((y1 == y2 || y3 == y4) && (y1 == y3 || y1 == y4 || y2 == y3 || y2 == y4))\n            return true;\n        let x4_x3 = x4 - x3, y4_y3 = y4 - y3, x2_x1 = x2 - x1, y2_y1 = y2 - y1, x1_x3 = x1 - x3, y1_y3 = y1 - y3;\n        let nx = x4_x3 * y1_y3 - y4_y3 * x1_x3;\n        let ny = x2_x1 * y1_y3 - y2_y1 * x1_x3;\n        let dn = y4_y3 * x2_x1 - x4_x3 * y2_y1;\n        if (dn == 0)\n            return false;\n        if (dn < 0) {\n            dn = -dn;\n            nx = -nx;\n            ny = -ny;\n        }\n        return nx >= 0 && nx <= dn && ny >= 0 && ny <= dn;\n    }\n    static rectsIntersect(x1, y1, w1, h1, x2, y2, w2, h2) {\n        if (x1 <= x2 && x1 + w1 >= x2 + w2 && y1 <= y2 && y1 + h1 >= y2 + h2)\n            return true;\n        if (x2 <= x1 && x2 + w2 >= x1 + w1 && y2 <= y1 && y2 + h2 >= y1 + h1)\n            return true;\n        if (x1 + w1 < x2 || x2 + w2 < x1 || y1 + h1 < y2 || y2 + h2 < y1)\n            return false;\n        return true;\n    }\n    static sortAngles(theta) {\n        if (theta == null || theta.length < 2)\n            return theta;\n        theta = theta.slice(0);\n        for (let n = 0; n < theta.length; n++)\n            theta[n] = angleNorm(theta[n]);\n        if (theta.length == 2) {\n            if (angleDiffPos(theta[1], theta[0]) > Math.PI)\n                return [theta[1], theta[0]];\n            return theta;\n        }\n        Vec.sort(theta);\n        while (true) {\n            let a = theta[theta.length - 1], b = theta[0], c = theta[1];\n            if (angleDiff(b, a) <= angleDiff(c, b))\n                break;\n            for (let n = theta.length - 1; n > 0; n--)\n                theta[n] = theta[n - 1];\n            theta[0] = a;\n        }\n        return theta;\n    }\n    static idxSortAngles(theta) {\n        const sz = Vec.len(theta);\n        if (theta == null || sz < 2)\n            return Vec.identity0(sz);\n        if (sz == 2) {\n            if (angleDiffPos(theta[1], theta[0]) > Math.PI)\n                return [1, 0];\n            else\n                return [0, 1];\n        }\n        theta = Vec.duplicate(theta);\n        for (let n = 0; n < sz; n++)\n            theta[n] = angleNorm(theta[n]);\n        let idx = Vec.idxSort(theta);\n        while (true) {\n            let a = theta[idx[sz - 1]], b = theta[idx[0]], c = theta[idx[1]];\n            if (angleDiff(b, a) <= angleDiff(c, b))\n                break;\n            let last = idx.pop();\n            idx.unshift(last);\n        }\n        return idx;\n    }\n    static uniqueAngles(theta, threshold) {\n        let ang = GeomUtil.sortAngles(theta), ret = [];\n        ret.push(ang[0]);\n        for (let n = 1; n < ang.length; n++) {\n            if (Math.abs(angleDiff(ang[n], ang[n - 1])) > threshold)\n                ret.push(ang[n]);\n        }\n        return ret;\n    }\n    static thetaObtuse(th1, th2) {\n        let dth = th2 - th1;\n        while (dth < -Math.PI)\n            dth += 2 * Math.PI;\n        while (dth > Math.PI)\n            dth -= 2 * Math.PI;\n        return dth > 0 ? th1 - 0.5 * (2 * Math.PI - dth) : th1 + 0.5 * (2 * Math.PI + dth);\n    }\n    static emergentAngle(theta) {\n        let len = theta.length;\n        if (len == 1)\n            return theta[0];\n        if (len == 2)\n            return 0.5 * (theta[0] + theta[1]);\n        Vec.sort(theta);\n        let bottom = 0;\n        let behind = angleDiffPos(theta[0], theta[len - 1]);\n        for (let n = 1; n < len; n++) {\n            let delta = angleDiffPos(theta[n], theta[n - 1]);\n            if (delta > behind) {\n                bottom = n;\n                behind = delta;\n            }\n        }\n        let sum = 0;\n        for (let n = 0; n < len; n++) {\n            let delta = theta[n] - theta[bottom];\n            if (delta < 0)\n                delta += TWOPI;\n            sum += delta;\n        }\n        return sum / len + theta[bottom];\n    }\n    static dotProduct(v1, v2) {\n        return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\n    }\n    static crossProduct(v1, v2) {\n        const x = v1[1] * v2[2] - v1[2] * v2[1];\n        const y = v1[2] * v2[0] - v1[0] * v2[2];\n        const z = v1[0] * v2[1] - v1[1] * v2[0];\n        return [x, y, z];\n    }\n    static affineTranslate(dx, dy) {\n        return [[1, 0, dx], [0, 1, dy], [0, 0, 1]];\n    }\n    static affineMirror(xaxis, yaxis) {\n        return [[xaxis ? -1 : 1, 0, 0], [0, yaxis ? -1 : 1, 0], [0, 0, 1]];\n    }\n    static affineScale(sx, sy) {\n        return [[sx, 0, 0], [0, sy, 0], [0, 0, 1]];\n    }\n    static affineRotate(theta) {\n        let cos = Math.cos(theta), sin = Math.sin(theta);\n        return [[cos, -sin, 0], [sin, cos, 0], [0, 0, 1]];\n    }\n    static affineCompose(A, B) {\n        let tfm = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n        let Acol = [0, 0, 0];\n        for (let j = 0; j < 3; j++) {\n            for (let k = 0; k < 3; k++)\n                Acol[k] = A[k][j];\n            for (let i = 0; i < 3; i++) {\n                let Brow = B[i];\n                let s = 0;\n                for (let k = 0; k < 3; k++)\n                    s += Acol[k] * Brow[k];\n                tfm[i][j] = s;\n            }\n        }\n        return tfm;\n    }\n    static applyAffine(x, y, tfm) {\n        return [x * tfm[0][0] + y * tfm[0][1] + tfm[0][2], x * tfm[1][0] + y * tfm[1][1] + tfm[1][2]];\n    }\n    static applyAffineArray(x, y, tfm) {\n        for (let n = 0; n < x.length; n++)\n            [x[n], y[n]] = this.applyAffine(x[n], y[n], tfm);\n    }\n    static isAffineMirror(tfm) {\n        let a = tfm[0][0], b = tfm[0][1], c = tfm[0][2];\n        let d = tfm[1][0], e = tfm[1][1], f = tfm[1][2];\n        let g = tfm[2][0], h = tfm[2][1], i = tfm[2][2];\n        return a * e * i + b * f * g + c * d * h - c * e * g - b * d * i - a * f * h < 0;\n    }\n    static magnitude2(v) {\n        return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n    }\n    static magnitude(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n    }\n    static dist2(v1, v2) {\n        let dx = v1[0] - v2[0], dy = v1[1] - v2[1], dz = v1[2] - v2[2];\n        return dx * dx + dy * dy + dz * dz;\n    }\n    static dist(v1, v2) {\n        let dx = v1[0] - v2[0], dy = v1[1] - v2[1], dz = v1[2] - v2[2];\n        return Math.sqrt(dx * dx + dy * dy + dz * dz);\n    }\n    static normalise(v) {\n        const dsq = v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n        if (dsq == 0)\n            return;\n        const inv = 1.0 / Math.sqrt(dsq);\n        v[0] *= inv;\n        v[1] *= inv;\n        v[2] *= inv;\n    }\n    static normalised(v) {\n        let ret = v.slice(0);\n        this.normalise(ret);\n        return ret;\n    }\n    static acuteAngle(v1, v2) {\n        let mag1 = this.magnitude(v1), mag2 = this.magnitude(v2);\n        if (mag1 == 0 || mag2 == 0)\n            return 0;\n        let dot = this.dotProduct(v1, v2);\n        let cosTheta = dot / (mag1 * mag2);\n        cosTheta = Math.max(-1, Math.min(1, cosTheta));\n        return Math.acos(cosTheta);\n    }\n    static arcControlPoints(rad, x1, y1, x2, y2) {\n        let t1x = -y1, t1y = x1;\n        let t2x = y2, t2y = -x2;\n        let dx = 0.5 * (x1 + x2);\n        let dy = 0.5 * (y1 + y2);\n        let tx = 3 / 8 * (t1x + t2x);\n        let ty = 3 / 8 * (t1y + t2y);\n        let a = tx * tx + ty * ty;\n        let b = dx * tx + dy * ty;\n        let c = dx * dx + dy * dy - rad * rad;\n        let D = b * b - a * c;\n        let k = (Math.sqrt(D) - b) / a;\n        return [x1 + k * t1x, y1 + k * t1y, x2 + k * t2x, y2 + k * t2y];\n    }\n    static createBezierEllipse(cx, cy, rw, rh, theta) {\n        let nseg = 24, npt = 2 * nseg + 1;\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        let incrAlpha = TWOPI / nseg;\n        let px = new Array(npt), py = new Array(npt);\n        for (let n = 0; n < nseg; n++) {\n            let alpha = n * incrAlpha;\n            let cosAlpha = Math.cos(alpha), sinAlpha = Math.sin(alpha);\n            px[n * 2] = rw * cosAlpha * cosTheta - rh * sinAlpha * sinTheta + cx;\n            py[n * 2] = rw * cosAlpha * sinTheta + rh * sinAlpha * cosTheta + cy;\n        }\n        px[npt - 1] = px[0];\n        py[npt - 1] = py[0];\n        let smooth = 0.3;\n        for (let n = 0; n < nseg; n++) {\n            let n1 = (n - 1 + nseg) % nseg;\n            let n2 = n;\n            let n3 = (n + 1) % nseg;\n            let n4 = (n + 2) % nseg;\n            let x1 = px[n1 * 2], x2 = px[n2 * 2], x3 = px[n3 * 2], x4 = px[n4 * 2];\n            let y1 = py[n1 * 2], y2 = py[n2 * 2], y3 = py[n3 * 2], y4 = py[n4 * 2];\n            px[n * 2 + 1] = 0.5 * (x2 + x3 + smooth * (x2 - x1 + x3 - x4));\n            py[n * 2 + 1] = 0.5 * (y2 + y3 + smooth * (y2 - y1 + y3 - y4));\n        }\n        let ctrl = new Array(npt);\n        for (let n = 0; n < npt; n++)\n            ctrl[n] = (n & 1) == 1;\n        return { px, py, ctrl };\n    }\n    static fitCircle(x, y) {\n        let dsq = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < x.length; n++)\n            dsq = Math.min(dsq, norm2_xy(x[n], y[n]));\n        return Math.sqrt(dsq);\n    }\n    static fitEllipse(px, py, minX, minY, maxX, maxY) {\n        let bestW = 0.5 * this.fitCircle(px, py), bestH = bestW, bestScore = bestW * bestH;\n        let x = Vec.concat(px, [minX, maxX, 0, 0]);\n        let y = Vec.concat(py, [0, 0, minY, maxY]);\n        const sz = x.length;\n        let shrinkToFit = (whs) => {\n            let dmin = Number.POSITIVE_INFINITY;\n            let invW2 = 1.0 / (whs[0] * whs[0]), invH2 = 1.0 / (whs[1] * whs[1]);\n            for (let n = 0; n < sz; n++)\n                dmin = Math.min(dmin, Math.sqrt(x[n] * x[n] * invW2 + y[n] * y[n] * invH2));\n            if (dmin < 1) {\n                whs[0] *= dmin;\n                whs[1] *= dmin;\n            }\n            whs[2] = whs[0] * whs[1];\n        };\n        let mul = 1;\n        let whsX = [0, 0, 0], whsY = [0, 0, 0];\n        while (mul > 0.001) {\n            whsX[0] = bestW * (1 + mul);\n            whsX[1] = bestH;\n            shrinkToFit(whsX);\n            whsY[0] = bestW;\n            whsY[1] = bestH * (1 + mul);\n            shrinkToFit(whsY);\n            let anything = false;\n            if (whsX[2] > bestScore) {\n                bestW = whsX[0];\n                bestH = whsX[1];\n                bestScore = whsX[2];\n                anything = true;\n            }\n            if (whsY[2] > bestScore) {\n                bestW = whsY[0];\n                bestH = whsY[1];\n                bestScore = whsY[2];\n                anything = true;\n            }\n            if (!anything)\n                mul *= 0.6;\n        }\n        return [bestW, bestH];\n    }\n    static superimpose(ax, ay, bx, by) {\n        let sz = ax.length;\n        if (sz == 1) {\n            let dx = bx[0] - ax[0], dy = by[0] - ay[0];\n            return [[1, 0, dx], [0, 1, dy], [0, 0, 1]];\n        }\n        if (sz == 2) {\n            let thetaA = Math.atan2(ay[1] - ay[0], ax[1] - ax[0]), thetaB = Math.atan2(by[1] - by[0], bx[1] - bx[0]);\n            let delta = angleDiff(thetaB, thetaA), cos = Math.cos(delta), sin = Math.sin(delta);\n            let rot00 = cos, rot01 = -sin;\n            let rot10 = sin, rot11 = cos;\n            let acx = 0.5 * (ax[0] + ax[1]), acy = 0.5 * (ay[0] + ay[1]);\n            let bcx = 0.5 * (bx[0] + bx[1]), bcy = 0.5 * (by[0] + by[1]);\n            let rax = rot00 * acx + rot01 * acy;\n            let ray = rot10 * acx + rot11 * acy;\n            return [[rot00, rot01, bcx - rax], [rot10, rot11, bcy - ray], [0, 0, 1]];\n        }\n        let invsz = 1.0 / sz;\n        let acx = Vec.sum(ax) * invsz, acy = Vec.sum(ay) * invsz;\n        let bcx = Vec.sum(bx) * invsz, bcy = Vec.sum(by) * invsz;\n        let mtxA = new Matrix(3, sz), mtxB = new Matrix(3, sz);\n        for (let n = 0; n < sz; n++) {\n            mtxA.set(0, n, ax[n] - acx);\n            mtxA.set(1, n, ay[n] - acy);\n            mtxA.set(2, n, 0);\n            mtxB.set(0, n, bx[n] - bcx);\n            mtxB.set(1, n, by[n] - bcy);\n            mtxB.set(2, n, 0);\n        }\n        let cov = mtxA.times(mtxB.transpose());\n        let svd = new SingularValueDecomposition(cov);\n        let rotate = svd.getV().times(svd.getU().transpose());\n        let rot00 = rotate.get(0, 0), rot01 = rotate.get(0, 1);\n        let rot10 = rotate.get(1, 0), rot11 = rotate.get(1, 1);\n        let rax = rot00 * acx + rot01 * acy;\n        let ray = rot10 * acx + rot11 * acy;\n        return [[rot00, rot01, bcx - rax], [rot10, rot11, bcy - ray], [0, 0, 1]];\n    }\n    static convexHull(x, y, flatness) {\n        let algo = new QuickHull(x, y, sqr(flatness * 0.1));\n        return [algo.hullX, algo.hullY];\n    }\n    static outlinePolygon(x, y, diameter) {\n        let del = new Triangulation2D(x, y);\n        let concave = del.trimConcave(diameter);\n        let idx = del.traceOutline(concave);\n        return [Vec.idxGet(x, idx), Vec.idxGet(y, idx)];\n    }\n}\nexport class QuickHull {\n    constructor(x, y, threshSq) {\n        this.x = x;\n        this.y = y;\n        this.threshSq = threshSq;\n        this.hsz = 0;\n        this.hullX = [];\n        this.hullY = [];\n        const sz = x.length;\n        let l = 0, r = 0;\n        for (let n = 0; n < sz; n++) {\n            if (x[r] > x[n] || (x[r] == x[n] && y[r] > y[n]))\n                r = n;\n            if (x[l] < x[n] || (x[l] == x[n] && y[l] < y[n]))\n                l = n;\n        }\n        let al1 = [], al2 = [];\n        for (let n = 0; n < sz; n++) {\n            if (n != l && n != r) {\n                if (this.right(r, l, n) > 0)\n                    al1.push(n);\n                else\n                    al2.push(n);\n            }\n        }\n        this.hullX.push(x[r]);\n        this.hullY.push(y[r]);\n        this.quickHull(r, l, al1);\n        this.hullX.push(x[l]);\n        this.hullY.push(y[l]);\n        this.quickHull(l, r, al2);\n        for (let n = 0; n < this.hullX.length - 1;) {\n            if (norm2_xy(this.hullX[n] - this.hullY[n + 1], this.hullY[n] - this.hullY[n + 1]) < threshSq) {\n                this.hullX.splice(n + 1, 1);\n                this.hullY.splice(n + 1, 1);\n            }\n            else\n                n++;\n        }\n    }\n    quickHull(a, b, al) {\n        if (al.length == 0)\n            return;\n        let c = this.furthestPoint(a, b, al);\n        let al1 = [], al2 = [];\n        for (let n = 0; n < al.length; n++) {\n            let p = al[n];\n            if (p == a || p == b)\n                continue;\n            if (this.right(a, c, p) > 0)\n                al1.push(p);\n            else if (this.right(c, b, p) > 0)\n                al2.push(p);\n        }\n        this.quickHull(a, c, al1);\n        this.hullX.push(this.x[c]);\n        this.hullY.push(this.y[c]);\n        this.quickHull(c, b, al2);\n    }\n    right(a, b, p) {\n        const x = this.x, y = this.y;\n        return (x[a] - x[b]) * (y[p] - y[b]) - (x[p] - x[b]) * (y[a] - y[b]);\n    }\n    distance(a, b, p) {\n        const x = this.x, y = this.y;\n        let u = ((x[p] - x[a]) * (x[b] - x[a]) + (y[p] - y[a]) * (y[b] - y[a])) / ((x[b] - x[a]) * (x[b] - x[a]) + (y[b] - y[a]) * (y[b] - y[a]));\n        let ux = x[a] + u * (x[b] - x[a]);\n        let uy = y[a] + u * (y[b] - y[a]);\n        return ((ux - x[p]) * (ux - x[p]) + (uy - y[p]) * (uy - y[p]));\n    }\n    furthestPoint(a, b, al) {\n        let maxDist = -1;\n        let maxPos = -1;\n        for (let n = 0; n < al.length; n++) {\n            let p = al[n];\n            if (p == a || p == b)\n                continue;\n            let dist = this.distance(a, b, p);\n            if (dist > maxDist) {\n                maxDist = dist;\n                maxPos = p;\n            }\n        }\n        return maxPos;\n    }\n}\nexport class RollingBall {\n    constructor(x, y, diameter) {\n        this.x = x;\n        this.y = y;\n        this.sequence = [];\n        const sz = x.length;\n        const threshSq = diameter * diameter;\n        let first = Vec.idxMax(x), latest = first;\n        let direction = 0.0;\n        let visited = Vec.booleanArray(false, sz);\n        this.sequence.push(first);\n        let roll = () => {\n            let bestIdx = -1;\n            let bestDelta = 0, bestTheta = 0;\n            for (let n = 0; n < sz; n++)\n                if (n != latest && !visited[n]) {\n                    let dx = x[n] - x[latest], dy = y[n] - y[latest];\n                    let dsq = norm2_xy(dx, dy);\n                    if (dsq == 0 || dsq > threshSq)\n                        continue;\n                    let theta = Math.atan2(dy, dx), delta = angleDiffPos(theta, direction);\n                    if (bestIdx < 0 || delta < bestDelta) {\n                        bestIdx = n;\n                        bestDelta = delta;\n                        bestTheta = theta;\n                    }\n                }\n            if (bestIdx < 0)\n                return -1;\n            direction = angleNorm(bestTheta - 0.5 * Math.PI);\n            visited[bestIdx] = true;\n            return bestIdx;\n        };\n        while (true) {\n            let next = roll();\n            if (next < 0) {\n                this.sequence = null;\n                return;\n            }\n            if (next == first)\n                break;\n            this.sequence.push(next);\n            latest = next;\n        }\n    }\n    sequencePos() {\n        if (!this.sequence)\n            return null;\n        let posList = [];\n        for (let n of this.sequence)\n            posList.push(new Pos(this.x[n], this.y[n]));\n        return posList;\n    }\n    sequenceXY() {\n        if (!this.sequence)\n            return [null, null];\n        let px = [], py = [];\n        for (let n of this.sequence) {\n            px.push(this.x[n]);\n            py.push(this.y[n]);\n        }\n        return [px, py];\n    }\n}\nexport class Pos {\n    static zero() { return new Pos(); }\n    static fromArray(src) { return new Pos(src[0], src[1]); }\n    constructor(x, y) {\n        this.x = x == null ? 0 : x;\n        this.y = y == null ? 0 : y;\n    }\n    clone() { return new Pos(this.x, this.y); }\n    equals(other) { return this.x == other.x && this.y == other.y; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x *= mag;\n        this.y *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    }\n    withScaleBy(mag) {\n        return new Pos(this.x * mag, this.y * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Pos(this.x + dx, this.y + dy);\n    }\n    toString() { return '[' + this.x + ',' + this.y + ']'; }\n}\nexport class Size {\n    static zero() { return new Size(); }\n    static fromArray(src) { return new Size(src[0], src[1]); }\n    constructor(w, h) {\n        this.w = w == null ? 0 : w;\n        this.h = h == null ? 0 : h;\n    }\n    clone() { return new Size(this.w, this.h); }\n    equals(other) { return this.w == other.w && this.h == other.h; }\n    isZero() { return this.w == 0 && this.h == 0; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.w *= mag;\n        this.h *= mag;\n    }\n    fitInto(maxW, maxH) {\n        let scale = 1;\n        if (this.w > maxW)\n            scale = maxW / this.w;\n        if (this.h > maxH)\n            scale = Math.min(scale, maxH / this.h);\n        if (scale < 1)\n            this.scaleBy(scale);\n    }\n    withScaleBy(mag) {\n        return new Size(this.w * mag, this.h * mag);\n    }\n    toString() { return '[' + this.w + ',' + this.h + ']'; }\n}\nexport class Box {\n    static zero() { return new Box(); }\n    static fromBounds(x1, y1, x2, y2) { return new Box(x1, y1, x2 - x1, y2 - y1); }\n    static fromSize(sz) { return new Box(0, 0, sz.w, sz.h); }\n    static fromOval(oval) { return new Box(oval.cx - oval.rw, oval.cy - oval.rh, 2 * oval.rw, 2 * oval.rh); }\n    static fromArray(src) { return new Box(src[0], src[1], src[2], src[3]); }\n    constructor(x, y, w, h) {\n        this.x = x == null ? 0 : x;\n        this.y = y == null ? 0 : y;\n        this.w = w == null ? 0 : w;\n        this.h = h == null ? 0 : h;\n    }\n    clone() { return new Box(this.x, this.y, this.w, this.h); }\n    equals(other) { return this.x == other.x && this.y == other.y && this.w == other.w && this.h == other.h; }\n    getPos() { return new Pos(this.x, this.y); }\n    setPos(pos) {\n        this.x = pos.x;\n        this.y = pos.y;\n    }\n    getSize() { return new Size(this.w, this.h); }\n    setSize(sz) {\n        this.w = sz.w;\n        this.h = sz.h;\n    }\n    minX() { return this.x; }\n    minY() { return this.y; }\n    midX() { return this.x + 0.5 * this.w; }\n    midY() { return this.y + 0.5 * this.h; }\n    maxX() { return this.x + this.w; }\n    maxY() { return this.y + this.h; }\n    area() { return this.w * this.h; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x *= mag;\n        this.y *= mag;\n        this.w *= mag;\n        this.h *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    }\n    grow(bx, by) {\n        this.x -= bx;\n        this.y -= by;\n        this.w += 2 * bx;\n        this.h += 2 * by;\n    }\n    withScaleBy(mag) {\n        return new Box(this.x * mag, this.y * mag, this.w * mag, this.h * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Box(this.x + dx, this.y + dy, this.w, this.h);\n    }\n    withGrow(bx, by) {\n        return new Box(this.x - bx, this.y - by, this.w + 2 * bx, this.h + 2 * by);\n    }\n    intersects(other) {\n        return GeomUtil.rectsIntersect(this.x, this.y, this.w, this.h, other.x, other.y, other.w, other.h);\n    }\n    intersection(other) {\n        let x1 = this.x, x2 = x1 + this.w, y1 = this.y, y2 = y1 + this.h;\n        let x3 = other.x, x4 = x3 + other.w, y3 = other.y, y4 = y3 + other.h;\n        let x5 = Math.max(x1, x3), y5 = Math.max(y1, y3), x6 = Math.min(x2, x4), y6 = Math.min(y2, y4);\n        return new Box(x5, y5, x6 - x5, y6 - y5);\n    }\n    contains(x, y) {\n        return x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h;\n    }\n    union(other) {\n        let x1 = Math.min(this.x, other.x), x2 = Math.max(this.x + this.w, other.x + other.w);\n        let y1 = Math.min(this.y, other.y), y2 = Math.max(this.y + this.h, other.y + other.h);\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    isZero() { return this.w == 0 && this.h == 0; }\n    isEmpty() { return this.w == 0 && this.h == 0; }\n    notEmpty() { return this.w > 0 || this.h > 0; }\n    toString() { return '[' + this.x + ',' + this.y + ';' + this.w + ',' + this.h + ']'; }\n}\nexport class Oval {\n    static zero() { return new Oval(); }\n    static fromBox(box) { return new Oval(box.x + 0.5 * box.w, box.y + 0.5 * box.h, 0.5 * box.w, 0.5 * box.h); }\n    static fromArray(src) { return new Oval(src[0], src[1], src[2], src[3]); }\n    constructor(cx, cy, rw, rh) {\n        this.cx = cx == null ? 0 : cx;\n        this.cy = cy == null ? 0 : cy;\n        this.rw = rw == null ? 0 : rw;\n        this.rh = rh == null ? 0 : rh;\n    }\n    clone() { return new Oval(this.cx, this.cy, this.rw, this.rh); }\n    setCentre(pos) {\n        this.cx = pos.x;\n        this.cy = pos.y;\n    }\n    setRadius(sz) {\n        this.rw = sz.w;\n        this.rh = sz.h;\n    }\n    minX() { return this.cx - this.rw; }\n    minY() { return this.cy - this.rh; }\n    maxX() { return this.cx + this.rw; }\n    maxY() { return this.cy + this.rh; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.cx *= mag;\n        this.cy *= mag;\n        this.rw *= mag;\n        this.rh *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.cx += dx;\n        this.cy += dy;\n    }\n    withScaleBy(mag) {\n        return new Oval(this.cx * mag, this.cy * mag, this.rw * mag, this.rh * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Oval(this.cx + dx, this.cy + dy, this.rw, this.rh);\n    }\n    contains(x, y) {\n        let dx = x - this.cx, dy = y - this.cy;\n        let a = dx / this.rw, b = dy / this.rh;\n        return a * a + b * b <= 1;\n    }\n    toString() { return '[' + this.cx + ',' + this.cy + ';' + this.rw + ',' + this.rh + ']'; }\n}\nexport class Line {\n    static zero() { return new Line(); }\n    static fromPos(pos1, pos2) { return new Line(pos1.x, pos1.y, pos2.x, pos2.y); }\n    constructor(x1, y1, x2, y2) {\n        this.x1 = x1 == null ? 0 : x1;\n        this.y1 = y1 == null ? 0 : y1;\n        this.x2 = x2 == null ? 0 : x2;\n        this.y2 = y2 == null ? 0 : y2;\n    }\n    clone() { return new Line(this.x1, this.y1, this.x2, this.y2); }\n    setPos1(pos) {\n        this.x1 = pos.x;\n        this.y1 = pos.y;\n    }\n    setPos2(pos) {\n        this.x2 = pos.x;\n        this.y2 = pos.y;\n    }\n    minX() { return Math.min(this.x1, this.x2); }\n    minY() { return Math.min(this.y1, this.y2); }\n    maxX() { return Math.max(this.x1, this.x2); }\n    maxY() { return Math.max(this.y1, this.y2); }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x1 *= mag;\n        this.y1 *= mag;\n        this.x2 *= mag;\n        this.y2 *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x1 += dx;\n        this.y1 += dy;\n        this.x2 += dx;\n        this.y2 += dy;\n    }\n    toString() { return '[' + this.x1 + ',' + this.y1 + ';' + this.x2 + ',' + this.y2 + ']'; }\n}\n//# sourceMappingURL=Geom.js.map","const ELEMENT_NODE = 1;\nconst ATTRIBUTE_NODE = 2;\nconst TEXT_NODE = 3;\nconst CDATA_SECTION_NODE = 4;\nconst ENTITY_REFERENCE_NODE = 5;\nconst ENTITY_NODE = 6;\nconst PROCESSING_INSTRUCTION_NODE = 7;\nconst COMMENT_NODE = 8;\nconst DOCUMENT_NODE = 9;\nconst DOCUMENT_TYPE_NODE = 10;\nconst DOCUMENT_FRAGMENT_NODE = 11;\nconst NOTATION_NODE = 12;\nclass XML {\n    static parseXML(strXML) {\n        let xmlDoc;\n        if (this.customParser)\n            xmlDoc = new this.customParser().parseFromString(strXML, 'application/xml');\n        else\n            xmlDoc = new DOMParser().parseFromString(strXML, 'application/xml');\n        if (xmlDoc == null)\n            return null;\n        return xmlDoc;\n    }\n    static toString(doc) {\n        if (this.customSerial)\n            return new this.customSerial().serializeToString(doc.documentElement);\n        else\n            return new XMLSerializer().serializeToString(doc.documentElement);\n    }\n    static toPrettyString(doc) {\n        let xslt = [\n            '<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">',\n            '  <xsl:strip-space elements=\"*\"/>',\n            '  <xsl:template match=\"para[content-style][not(text())]\">',\n            '    <xsl:value-of select=\"normalize-space(.)\"/>',\n            '  </xsl:template>',\n            '  <xsl:template match=\"node()|@*\">',\n            '    <xsl:copy><xsl:apply-templates select=\"node()|@*\"/></xsl:copy>',\n            '  </xsl:template>',\n            '  <xsl:output indent=\"yes\"/>',\n            '</xsl:stylesheet>',\n        ].join('\\n');\n        let xsltDoc = this.parseXML(xslt);\n        let xsltProc = new XSLTProcessor();\n        xsltProc.importStylesheet(xsltDoc);\n        let resultDoc = xsltProc.transformToDocument(doc);\n        return new XMLSerializer().serializeToString(resultDoc);\n    }\n    static nodeText(el) {\n        let text = '';\n        for (let child of Array.from(el.childNodes)) {\n            if (child.nodeType == TEXT_NODE || child.nodeType == CDATA_SECTION_NODE)\n                text += child.nodeValue;\n        }\n        return text;\n    }\n    static childText(parent, tagName) {\n        if (parent == null)\n            return null;\n        let el = this.findElement(parent, tagName);\n        if (el == null)\n            return null;\n        return this.nodeText(el);\n    }\n    static appendElement(parent, name) {\n        let el = parent.ownerDocument.createElement(name);\n        parent.appendChild(el);\n        return el;\n    }\n    static appendElementAfter(presib, name) {\n        let el = presib.ownerDocument.createElement(name);\n        let postsib = presib.nextSibling;\n        if (postsib == null)\n            presib.parentNode.appendChild(el);\n        else\n            presib.parentNode.insertBefore(el, postsib);\n        return el;\n    }\n    static appendText(parent, text, isCDATA = false) {\n        if (text == null || text.length == 0)\n            return;\n        if (!isCDATA)\n            parent.appendChild(parent.ownerDocument.createTextNode(text));\n        else\n            parent.appendChild(parent.ownerDocument.createCDATASection(text));\n    }\n    static createTextChild(parent, name, text, isCDATA = false) {\n        let el = parent.ownerDocument.createElement(name);\n        parent.appendChild(el);\n        if (!isCDATA)\n            el.textContent = text;\n        else\n            el.appendChild(parent.ownerDocument.createCDATASection(text));\n    }\n    static setText(parent, text, isCDATA = false) {\n        while (parent.firstChild != null)\n            parent.removeChild(parent.firstChild);\n        this.appendText(parent, text, isCDATA);\n    }\n    static findElement(parent, tagName) {\n        if (parent == null)\n            return null;\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE && node.nodeName == tagName)\n                return node;\n            node = node.nextSibling;\n        }\n        return null;\n    }\n    static findChildElements(parent, tagName) {\n        if (parent == null)\n            return [];\n        let list = [];\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE && node.nodeName === tagName)\n                list.push(node);\n            node = node.nextSibling;\n        }\n        return list;\n    }\n    static childElements(parent) {\n        if (parent == null)\n            return [];\n        let list = [];\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE)\n                list.push(node);\n            node = node.nextSibling;\n        }\n        return list;\n    }\n}\nXML.customParser = null;\nXML.customSerial = null;\nexport { XML };\n//# sourceMappingURL=XML.js.map","import { Box, Pos, Size } from './Geom';\nimport { XML } from './XML';\nexport function dom(obj) {\n    if (typeof obj == 'string')\n        return DOM.parse(obj);\n    if (obj instanceof DOM)\n        return obj;\n    return new DOM(obj);\n}\nexport function domLegacy(obj) {\n    if (obj == null)\n        return null;\n    if (obj.jquery)\n        return dom(obj[0]);\n    return dom(obj);\n}\nexport class DOM {\n    constructor(el) {\n        this.el = el;\n    }\n    get elHTML() { return this.el; }\n    get elInput() { return this.el; }\n    get elCanvas() { return this.el; }\n    static parse(xhtml) {\n        let xml = XML.parseXML(xhtml);\n        if (xml == null)\n            throw 'Invalid XHTML string: ' + xhtml;\n        let html = xml.documentElement.outerHTML;\n        let template = document.createElement('template');\n        template.innerHTML = html;\n        return new DOM(template.content.firstChild);\n    }\n    static find(selector) {\n        let el = document.querySelector(selector);\n        return el ? new DOM(el) : null;\n    }\n    static findAll(selector) {\n        let nodeList = document.querySelectorAll(selector);\n        let domList = [];\n        for (let n = 0; n < nodeList.length; n++)\n            domList.push(new DOM(nodeList.item(n)));\n        return domList;\n    }\n    parent() {\n        let parent = this.el.parentElement;\n        return parent ? new DOM(parent) : null;\n    }\n    ancestor(selector) {\n        let el = this.el.closest(selector);\n        return el ? new DOM(el) : null;\n    }\n    children(tag) {\n        let domList = [];\n        for (let child = this.el.firstElementChild; child; child = child.nextElementSibling) {\n            if (tag && child.tagName.toLocaleLowerCase() != tag.toLocaleLowerCase())\n                continue;\n            domList.push(new DOM(child));\n        }\n        return domList;\n    }\n    find(selector) {\n        let el = this.el.querySelector(selector);\n        return el ? new DOM(el) : null;\n    }\n    findAll(selector) {\n        let nodeList = this.el.querySelectorAll(selector);\n        let domList = [];\n        for (let n = 0; n < nodeList.length; n++)\n            domList.push(new DOM(nodeList.item(n)));\n        return domList;\n    }\n    exists() {\n        return document.documentElement.contains(this.el);\n    }\n    isVisible() {\n        return this.elHTML.offsetWidth > 0 || this.elHTML.offsetHeight > 0 || this.elHTML.getClientRects().length > 0;\n    }\n    append(child) {\n        this.el.append(child.el);\n    }\n    appendTo(parent) {\n        if (parent instanceof DOM)\n            parent.el.append(this.el);\n        else\n            parent.appendChild(this.el);\n        return this;\n    }\n    prepend(child) {\n        this.el.prepend(child.el);\n    }\n    prependTo(parent) {\n        if (parent instanceof DOM)\n            parent.el.prepend(this.el);\n        else\n            parent.append(this.el);\n        return this;\n    }\n    insertBefore(ref) {\n        ref.el.parentElement.insertBefore(this.el, ref.el);\n        return this;\n    }\n    insertAfter(ref) {\n        let before = ref.el.nextElementSibling;\n        if (before)\n            ref.el.parentElement.insertBefore(this.el, before);\n        else\n            ref.el.parentElement.append(this.el);\n        return this;\n    }\n    remove() {\n        this.el.remove();\n    }\n    empty() {\n        this.el.innerHTML = '';\n    }\n    getHTML() {\n        return this.el.innerHTML;\n    }\n    setHTML(html) {\n        this.el.innerHTML = html;\n    }\n    appendHTML(xhtml) {\n        let xml = XML.parseXML('<z>' + xhtml + '</z>');\n        if (xml == null)\n            throw 'Invalid XHTML string: ' + xhtml;\n        let html = xml.documentElement.innerHTML;\n        this.el.insertAdjacentHTML('beforeend', html);\n    }\n    getText() {\n        return this.el.textContent;\n    }\n    setText(text) {\n        this.el.textContent = text;\n    }\n    appendText(text) {\n        let content = document.createTextNode(text);\n        this.el.appendChild(content);\n    }\n    getValue() {\n        return this.el.value;\n    }\n    setValue(str) {\n        this.el.value = str || '';\n    }\n    getCSS(key) {\n        return this.elHTML.style.getPropertyValue(key);\n    }\n    setCSS(key, value) {\n        this.elHTML.style.setProperty(key, value === null || value === void 0 ? void 0 : value.toString());\n    }\n    css(dict) {\n        for (let key in dict)\n            this.setCSS(key, dict[key].toString());\n        return this;\n    }\n    getAttr(key) {\n        if (!this.el.hasAttribute(key))\n            return null;\n        return this.el.getAttribute(key);\n    }\n    setAttr(key, value) {\n        this.el.setAttribute(key, value);\n    }\n    attr(dict) {\n        for (let key in dict)\n            this.setAttr(key, dict[key].toString());\n        return this;\n    }\n    addClass(clsnames) {\n        for (let cls of clsnames.split(' '))\n            if (cls)\n                this.elHTML.classList.add(cls);\n    }\n    removeClass(clsnames) {\n        for (let cls of clsnames.split(' '))\n            if (cls)\n                this.elHTML.classList.remove(cls);\n    }\n    hasClass(clsname) {\n        return this.elHTML.classList.contains(clsname);\n    }\n    setClass(clsname, flag) {\n        if (flag)\n            this.addClass(clsname);\n        else\n            this.removeClass(clsname);\n    }\n    class(clsname) {\n        this.addClass(clsname);\n        return this;\n    }\n    toggleClass(dict) {\n        for (let key in dict) {\n            if (dict[key])\n                this.elHTML.classList.add(key);\n            else\n                this.elHTML.classList.remove(key);\n        }\n    }\n    width() {\n        return this.elHTML.offsetWidth;\n    }\n    height() {\n        return this.elHTML.offsetHeight;\n    }\n    offset() {\n        let rect = this.el.getBoundingClientRect();\n        let win = this.el.ownerDocument.defaultView;\n        return new Pos(rect.left + win.pageXOffset, rect.top + win.pageYOffset);\n    }\n    size() {\n        return new Size(this.width(), this.height());\n    }\n    area() {\n        let pos = this.offset();\n        return new Box(pos.x, pos.y, this.width(), this.height());\n    }\n    setBoundaryPixels(x, y, w, h) {\n        this.css({ 'left': `${x}px`, 'top': `${y}px`, 'width': `${w}px`, 'height': `${h}px` });\n    }\n    setSizePixels(w, h) {\n        this.css({ 'width': `${w}px`, 'height': `${h}px` });\n    }\n    hasFocus() {\n        return this.el === document.activeElement;\n    }\n    grabFocus(delay = false) {\n        if (delay)\n            setTimeout(() => this.grabFocus(), 10);\n        else\n            this.elHTML.focus();\n    }\n    removeEvent(id, callback) {\n        this.el.removeEventListener(id, callback);\n    }\n    onKeyDown(callback) {\n        this.el.addEventListener('keydown', callback);\n    }\n    onKeyUp(callback) {\n        this.el.addEventListener('keyup', callback);\n    }\n    onKeyPress(callback) {\n        this.el.addEventListener('keypress', callback);\n    }\n    onScroll(callback) {\n        this.el.addEventListener('scroll', callback);\n    }\n    onWheel(callback) {\n        this.el.addEventListener('wheel', callback);\n    }\n    onClick(callback) {\n        this.el.addEventListener('click', callback);\n    }\n    onContextMenu(callback) {\n        this.el.addEventListener('contextmenu', callback);\n    }\n    onDblClick(callback) {\n        this.el.addEventListener('dblclick', callback);\n    }\n    onMouseDown(callback) {\n        this.el.addEventListener('mousedown', callback);\n    }\n    onMouseUp(callback) {\n        this.el.addEventListener('mouseup', callback);\n    }\n    onMouseEnter(callback) {\n        this.el.addEventListener('mouseenter', callback);\n    }\n    onMouseLeave(callback) {\n        this.el.addEventListener('mouseleave', callback);\n    }\n    onMouseMove(callback) {\n        this.el.addEventListener('mousemove', callback);\n    }\n    onMouseOver(callback) {\n        this.el.addEventListener('mouseover', callback);\n    }\n    onChange(callback) {\n        this.el.addEventListener('change', callback);\n    }\n    onInput(callback) {\n        this.el.addEventListener('input', callback);\n    }\n    onTouchStart(callback) {\n        this.el.addEventListener('touchstart', callback);\n    }\n    onTouchMove(callback) {\n        this.el.addEventListener('touchmove', callback);\n    }\n    onTouchCancel(callback) {\n        this.el.addEventListener('touchcancel', callback);\n    }\n    onTouchEnd(callback) {\n        this.el.addEventListener('touchend', callback);\n    }\n}\n//# sourceMappingURL=dom.js.map","import { colourCode } from './util';\nclass Theme {\n}\nTheme.BASE_URL = null;\nTheme.RESOURCE_URL = null;\nTheme.foreground = 0x000000;\nTheme.background = 0xFFFFFF;\nTheme.lowlight = 0x24D0D0;\nTheme.lowlightEdge1 = 0x47D5D2;\nTheme.lowlightEdge2 = 0x008FD1;\nTheme.highlight = 0x00FF00;\nTheme.highlightEdge1 = 0x00CA59;\nTheme.highlightEdge2 = 0x008650;\nTheme.error = 0xFF0000;\nexport { Theme };\nexport function initWebMolKit(resourcePath) {\n    Theme.RESOURCE_URL = resourcePath;\n    try {\n        let _ = document;\n    }\n    catch (e) {\n        return;\n    }\n    if (document)\n        installInlineCSS('main', composeMainCSS());\n}\nlet cssTagsInstalled = new Set();\nexport function hasInlineCSS(tag) { return cssTagsInstalled.has(tag); }\nexport function installInlineCSS(tag, css) {\n    if (cssTagsInstalled.has(tag))\n        return false;\n    let el = document.createElement('style');\n    el.innerHTML = css;\n    document.head.appendChild(el);\n    cssTagsInstalled.add(tag);\n    return true;\n}\nfunction composeMainCSS() {\n    let lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n    let highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n    return `\n\t\t.wmk-button\n\t\t{\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: 6px 12px;\n\t\t\tmargin-bottom: 0;\n\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\tfont-size: 14px;\n\t\t\tfont-weight: normal;\n\t\t\tline-height: 1.42857143;\n\t\t\ttext-align: center;\n\t\t\twhite-space: nowrap;\n\t\t\tvertical-align: middle;\n\t\t\tcursor: pointer;\n\t\t\tbackground-image: none;\n\t\t\tborder: 1px solid transparent;\n\t\t\tborder-radius: 4px;\n\t\t\t-ms-touch-action: manipulation; touch-action: manipulation;\n\t\t\t-webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;\n\t\t}\n\t\t.wmk-button:focus,\n\t\t.wmk-button:active:focus,\n\t\t.wmk-button.active:focus,\n\t\t.wmk-button.focus,\n\t\t.wmk-button:active.focus,\n\t\t.wmk-button.active.focus\n\t\t{\n\t\t\toutline: thin dotted;\n\t\t\toutline: 5px auto -webkit-focus-ring-color;\n\t\t\toutline-offset: -2px;\n\t\t}\n\t\t.wmk-button:hover,\n\t\t.wmk-button:focus,\n\t\t.wmk-button.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\ttext-decoration: none;\n\t\t}\n\t\t.wmk-button:active,\n\t\t.wmk-button.active\n\t\t{\n\t\t\tbackground-image: none;\n\t\t\toutline: 0;\n\t\t\t-webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);\n\t\t\tbox-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);\n\t\t}\n\t\t.wmk-button.disabled,\n\t\t.wmk-button[disabled],\n\t\tfieldset[disabled] .wmk-button\n\t\t{\n\t\t\tcursor: not-allowed;\n\t\t\tfilter: alpha(opacity=65);\n\t\t\t-webkit-box-shadow: none;\n\t\t\tbox-shadow: none;\n\t\t\topacity: .65;\n\t\t}\n\t\ta.wmk-button.disabled,\n\t\tfieldset[disabled] a.wmk-button\n\t\t{\n\t\t\tpointer-events: none;\n\t\t}\n\n\t\t/* shrunken button */\n\n\t\t.wmk-button-small\n\t\t{\n\t\t\tpadding: 2px 4px;\n\t\t\tline-height: 1;\n\t\t\tfont-size: 12px;\n\t\t}\n\n\t\t/* default button */\n\n\t\t.wmk-button-default\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #fff;\n\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\tborder-color: #ccc;\n\t\t}\n\t\t.wmk-button-default:focus,\n\t\t.wmk-button-default.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #8c8c8c;\n\t\t}\n\t\t.wmk-button-default:hover\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #adadad;\n\t\t}\n\t\t.wmk-button-default:active,\n\t\t.wmk-button-default.active,\n\t\t.open > .dropdown-toggle.wmk-button-default\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #adadad;\n\t\t}\n\t\t.wmk-button-default:active:hover,\n\t\t.wmk-button-default.active:hover,\n\t\t.open > .dropdown-toggle.wmk-button-default:hover,\n\t\t.wmk-button-default:active:focus,\n\t\t.wmk-button-default.active:focus,\n\t\t.open > .dropdown-toggle.wmk-button-default:focus,\n\t\t.wmk-button-default:active.focus,\n\t\t.wmk-button-default.active.focus,\n\t\t.open > .dropdown-toggle.wmk-button-default.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #d4d4d4;\n\t\t\tborder-color: #8c8c8c;\n\t\t}\n\t\t.wmk-button-default:active,\n\t\t.wmk-button-default.active,\n\t\t.open > .dropdown-toggle.wmk-button-default\n\t\t{\n\t\t\tbackground-image: none;\n\t\t}\n\t\t.wmk-button-default.disabled:hover,\n\t\t.wmk-button-default[disabled]:hover,\n\t\tfieldset[disabled] .wmk-button-default:hover,\n\t\t.wmk-button-default.disabled:focus,\n\t\t.wmk-button-default[disabled]:focus,\n\t\tfieldset[disabled] .wmk-button-default:focus,\n\t\t.wmk-button-default.disabled.focus,\n\t\t.wmk-button-default[disabled].focus,\n\t\tfieldset[disabled] .wmk-button-default.focus\n\t\t{\n\t\t\tbackground-color: #fff;\n\t\t\tborder-color: #ccc;\n\t\t}\n\t\t.wmk-button-default .badge\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #333;\n\t\t}\n\n\t\t/* primary button */\n\n\t\t.wmk-button-primary\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #008FD2;\n\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\tborder-color: #00C0C0;\n\t\t}\n\t\t.wmk-button-primary:focus,\n\t\t.wmk-button-primary.focus\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: ${lowlight};\n\t\t\tborder-color: #122b40;\n\t\t}\n\t\t.wmk-button-primary:hover\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #286090;\n\t\t\tborder-color: #204d74;\n\t\t}\n\t\t.wmk-button-primary:active,\n\t\t.wmk-button-primary.active,\n\t\t.open > .dropdown-toggle.wmk-button-primary\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #286090;\n\t\t\tborder-color: #20744d;\n\t\t}\n\t\t.wmk-button-primary:active:hover,\n\t\t.wmk-button-primary.active:hover,\n\t\t.open > .dropdown-toggle.wmk-button-primary:hover,\n\t\t.wmk-button-primary:active:focus,\n\t\t.wmk-button-primary.active:focus,\n\t\t.open > .dropdown-toggle.wmk-button-primary:focus,\n\t\t.wmk-button-primary:active.focus,\n\t\t.wmk-button-primary.active.focus,\n\t\t.open > .dropdown-toggle.wmk-button-primary.focus\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: ${highlight};\n\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\tborder-color: #12802b;\n\t\t}\n\t\t.wmk-button-primary:active,\n\t\t.wmk-button-primary.active,\n\t\t.open > .dropdown-toggle.wmk-button-primary\n\t\t{\n\t\t\tbackground-image: none;\n\t\t}\n\t\t.wmk-button-primary.disabled:hover,\n\t\t.wmk-button-primary[disabled]:hover,\n\t\tfieldset[disabled] .wmk-button-primary:hover,\n\t\t.wmk-button-primary.disabled:focus,\n\t\t.wmk-button-primary[disabled]:focus,\n\t\tfieldset[disabled] .wmk-button-primary:focus,\n\t\t.wmk-button-primary.disabled.focus,\n\t\t.wmk-button-primary[disabled].focus,\n\t\tfieldset[disabled] .wmk-button-primary.focus\n\t\t{\n\t\t\tbackground-color: #337ab7;\n\t\t\tborder-color: #2ea46d;\n\t\t}\n\t\t.wmk-button-primary .badge\n\t\t{\n\t\t\tcolor: #337ab7;\n\t\t\tbackground-color: #fff;\n\t\t}\n\t`;\n}\n//# sourceMappingURL=Theme.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { dom } from '../util/dom';\nimport { installInlineCSS } from '../util/Theme';\nconst CSS_TOOLTIP = `\n    *.wmk-tooltip-outer\n    {\n\t\tposition: absolute;\n\t\tborder-radius: 4px;\n\t\tborder: 1px solid black;\n\t\tbackground-color: white;\n\t\tpadding: 1px;\n\t\tpointer-events: none;\n        font-family: 'Open Sans', sans-serif;\n\t\tfont-size: 14px;\n    }\n\t*.wmk-tooltip-inner\n\t{\n\t\tcolor: white;\n\t\tborder-radius: 4px;\n\t\tbackground-color: black;\n\t\tpadding: 0.3em;\n\t\tmax-width: calc(min(40em, 50vw));\n\t}\n`;\nlet globalTooltip = null;\nlet globalPopWatermark = 0;\nexport function addTooltip(parent, bodyHTML, titleHTML, delay) {\n    installInlineCSS('tooltip', CSS_TOOLTIP);\n    let widget = dom(parent);\n    let tooltip = new Tooltip(widget, bodyHTML, titleHTML, delay == null ? 1000 : delay);\n    widget.onMouseEnter(() => tooltip.start());\n    widget.onMouseLeave(() => tooltip.stop());\n}\nexport function addTooltipPromise(parent, bodyCallback, titleHTML, delay) {\n    installInlineCSS('tooltip', CSS_TOOLTIP);\n    let widget = dom(parent);\n    let tooltip = new Tooltip(widget, null, titleHTML, delay == null ? 1000 : delay);\n    tooltip.bodyCallback = bodyCallback;\n    widget.onMouseEnter(() => tooltip.start());\n    widget.onMouseLeave(() => tooltip.stop());\n}\nexport function raiseToolTip(parent, avoid, bodyHTML, titleHTML) {\n    installInlineCSS('tooltip', CSS_TOOLTIP);\n    clearTooltip();\n    new Tooltip(dom(parent), bodyHTML, titleHTML, 0).raise(avoid);\n}\nexport function clearTooltip() {\n    if (globalTooltip == null)\n        return;\n    globalPopWatermark++;\n    globalTooltip.stop();\n}\nexport class Tooltip {\n    constructor(widget, bodyHTML, titleHTML, delay) {\n        this.widget = widget;\n        this.bodyHTML = bodyHTML;\n        this.titleHTML = titleHTML;\n        this.delay = delay;\n        this.domTooltip = null;\n    }\n    start() {\n        this.watermark = ++globalPopWatermark;\n        (() => __awaiter(this, void 0, void 0, function* () {\n            if (this.bodyHTML == null && this.bodyCallback)\n                this.bodyHTML = yield this.bodyCallback();\n            window.setTimeout(() => {\n                if (this.watermark == globalPopWatermark)\n                    this.raise();\n            }, this.delay);\n        }))();\n    }\n    stop() {\n        if (this.domTooltip) {\n            this.domTooltip.remove();\n            this.domTooltip = null;\n        }\n        this.watermark = -1;\n    }\n    raise(avoid) {\n        if (!this.widget.exists())\n            return;\n        globalTooltip = this;\n        if (this.domTooltip)\n            return;\n        let pop = this.domTooltip = dom('<div/>').class('wmk-tooltip-outer').css({ 'visibility': 'hidden' }).appendTo(document.body);\n        let sanity = 50;\n        for (let ancestor = this.widget; ancestor; ancestor = ancestor.parent()) {\n            if (--sanity == 0)\n                break;\n            let zindex = parseInt(ancestor.elHTML.style.zIndex);\n            if (zindex > 0) {\n                pop.setCSS('z-index', (zindex + 1000).toString());\n                break;\n            }\n        }\n        let div = dom('<div/>').appendTo(pop).class('wmk-tooltip-inner');\n        let hasTitle = this.titleHTML != null && this.titleHTML.length > 0, hasBody = this.bodyHTML != null && this.bodyHTML.length > 0;\n        if (hasTitle)\n            dom('<div/>').appendTo(div).setHTML('<b>' + this.titleHTML + '</b>');\n        if (hasTitle && hasBody)\n            div.appendHTML('<hr/>');\n        if (hasBody)\n            dom('<div/>').appendTo(div).setHTML(this.bodyHTML);\n        let winW = window.innerWidth, winH = window.innerHeight;\n        const GAP = 2;\n        let boundDiv = this.widget.el.getBoundingClientRect();\n        let wx1 = boundDiv.left, wy1 = boundDiv.top;\n        let wx2 = wx1 + boundDiv.width, wy2 = wy1 + boundDiv.height;\n        if (avoid) {\n            wx1 += avoid.x;\n            wy1 += avoid.y;\n            wx2 = wx1 + avoid.w;\n            wy2 = wy1 + avoid.h;\n        }\n        let setPosition = () => {\n            let popW = pop.width(), popH = pop.height();\n            let posX = 0, posY = 0;\n            if (wx1 + popW < winW)\n                posX = wx1;\n            else if (popW < wx2)\n                posX = wx2 - popW;\n            if (wy2 + GAP + popH < winH)\n                posY = wy2 + GAP;\n            else if (wy1 - GAP - popH > 0)\n                posY = wy1 - GAP - popH;\n            else\n                posY = wy2 + GAP;\n            posX += window.pageXOffset;\n            posY += window.pageYOffset;\n            pop.css({ 'left': `${posX}px`, 'top': `${posY}px`, 'visibility': 'visible' });\n        };\n        pop.css({ 'left': '0px', 'top': '0px' });\n        setTimeout(() => setPosition(), 1);\n        let checkParent = () => {\n            if (this.watermark != globalPopWatermark || !this.widget.isVisible() || !this.widget.exists())\n                this.stop();\n            else\n                setTimeout(checkParent, 100);\n        };\n        setTimeout(checkParent, 100);\n    }\n}\n//# sourceMappingURL=Tooltip.js.map","import { dom } from '../util/dom';\nimport { addTooltip } from './Tooltip';\nexport class Widget {\n    get contentDOM() { return this.domContent; }\n    constructor() {\n        this.tagType = 'div';\n        this.domContent = null;\n    }\n    render(parent) {\n        let tag = this.tagType;\n        this.domContent = dom(`<${tag}/>`).appendTo(parent);\n    }\n    remove() {\n        if (this.domContent)\n            this.domContent.remove();\n        this.domContent = null;\n    }\n    addTooltip(bodyHTML, titleHTML) {\n        addTooltip(this.contentDOM, bodyHTML, titleHTML);\n    }\n    grabFocus() {\n        this.domContent.grabFocus();\n    }\n}\n//# sourceMappingURL=Widget.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {deepClone} from 'webmolkit/util/util';\nimport {Mixfile, MIXFILE_VERSION, MixfileComponent} from './Mixfile';\nimport {Vec} from 'webmolkit/util/Vec';\n\n/*\n\tData container for mixtures: basically wraps the Mixfile interface, with additional functionality.\n\n\tNote that functionality should be assumed to be using shallow pointers to the underlying dictionary, unless\n\tspecified otherwise (e.g. clone).\n*/\n\nexport class Mixture\n{\n\t// ------------ public methods ------------\n\n\tconstructor(public mixfile?:Mixfile)\n\t{\n\t\tif (!mixfile) this.mixfile = {mixfileVersion: MIXFILE_VERSION};\n\t\telse if (!this.mixfile.mixfileVersion) this.mixfile.mixfileVersion = MIXFILE_VERSION;\n\t}\n\n\t// instantiates a new mixture object by casting a component into a root mixfile\n\tpublic static fromComponent(comp:MixfileComponent):Mixture\n\t{\n\t\tlet mixfile = deepClone(comp) as Mixfile;\n\t\tmixfile.mixfileVersion = MIXFILE_VERSION;\n\t\treturn new Mixture(mixfile);\n\t}\n\n\t// returns true if the mixture is blank\n\tpublic isEmpty():boolean\n\t{\n\t\treturn Mixture.isComponentEmpty(this.mixfile);\n\t}\n\tpublic static isComponentEmpty(comp:MixfileComponent):boolean\n\t{\n\t\tconst BITS = ['name', 'description', 'synonyms', 'formula', 'molfile', 'inchi', 'inchiKey', 'smiles',\n\t\t\t\t\t  'ratio', 'quantity', 'units', 'relation', 'identifiers', 'links'];\n\t\tfor (let bit of BITS) if ((comp as any)[bit] != null) return false;\n\t\tif (Vec.arrayLength(comp.contents) > 0) return false;\n\t\treturn true;\n\t}\n\n\t// returns true if there's something to put in the quantity section\n\tpublic static hasQuantity(comp:MixfileComponent):boolean\n\t{\n\t\treturn comp.quantity != null || comp.ratio != null;\n\t}\n\n\t// makes a deep copy of self\n\tpublic clone():Mixture\n\t{\n\t\treturn new Mixture(deepClone(this.mixfile));\n\t}\n\n\t// returns true if the two mixtures are identical at all parts of their branch structure\n\tpublic equals(other:Mixture):boolean\n\t{\n\t\tif (other == null) return false;\n\t\treturn this.recursiveEqual(this.mixfile, other.mixfile);\n\t}\n\n\t// unpacks a string into a mixture; throws an exception if anything went wrong\n\tpublic static deserialise(data:string):Mixture\n\t{\n\t\tlet mixfile = JSON.parse(data);\n\t\treturn new Mixture(mixfile);\n\t}\n\n\t// converts the entire underlying JSON mixfile into a prettyprinted string\n\tpublic serialise():string\n\t{\n\t\treturn Mixture.beautify(this.mixfile);\n\t}\n\n\t// likewise, for a sub-component\n\tpublic static serialiseComponent(comp:MixfileComponent):string\n\t{\n\t\treturn Mixture.beautify(comp);\n\t}\n\n\t// uses the \"origin vector\" to fetch a particular component; this is an array of indices, where [] indicates the root; its first\n\t// component is [0], the second child of its first component is [0,1], etc.\n\tpublic getComponent(origin:number[]):MixfileComponent\n\t{\n\t\tif (origin.length == 0) return this.mixfile;\n\t\tlet find:MixfileComponent = null, look = this.mixfile.contents || [];\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tfind = look[o];\n\t\t\tif (!find) return null;\n\t\t\tlook = find.contents || [];\n\t\t}\n\t\treturn find;\n\t}\n\tpublic getParentComponent(origin:number[]):MixfileComponent\n\t{\n\t\tif (origin.length == 0) return null;\n\t\torigin = origin.slice();\n\t\torigin.pop();\n\t\treturn this.getComponent(origin);\n\t}\n\n\t// returns a flat list of all components, i.e. without any hierarchy; these are all pointers to the originals, so\n\t// modifications can be made directly\n\tpublic getComponents():MixfileComponent[]\n\t{\n\t\tlet list:MixfileComponent[] = [], stack:MixfileComponent[] = [this.mixfile];\n\t\twhile (stack.length > 0)\n\t\t{\n\t\t\tlet comp = stack.shift();\n\t\t\tlist.push(comp);\n\t\t\tif (comp.contents) for (let sub of comp.contents) stack.push(sub);\n\t\t}\n\t\treturn list;\n\t}\n\n\t// returns an array that is equal in size to the number of nodes; each entry contains origin of that node\n\tpublic getOrigins():number[][]\n\t{\n\t\tlet origins:number[][] = [];\n\n\t\tlet nodeEnum = (origin:number[], comp:MixfileComponent):void =>\n\t\t{\n\t\t\torigins.push(origin);\n\t\t\tfor (let n = 0; n < Vec.arrayLength(comp.contents); n++) nodeEnum(Vec.append(origin, n), comp.contents[n]);\n\t\t};\n\n\t\tnodeEnum([], this.mixfile);\n\t\treturn origins;\n\t}\n\n\t// replaces a component at a given position; returns true if the new component was different to the old one\n\tpublic setComponent(origin:number[], comp:MixfileComponent):boolean\n\t{\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\n\t\t// copy over the dictionary entries in 'comp', noting if anything changed\n\t\tlet modified = false;\n\t\tfor (let k in comp)\n\t\t{\n\t\t\tlet v = (comp as any)[k];\n\t\t\tif (v != (find as any)[k])\n\t\t\t{\n\t\t\t\t(find as any)[k] = v;\n\t\t\t\tmodified = true;\n\t\t\t}\n\t\t}\n\n\t\t// cleanup by removing explicit nulls\n\t\tObject.keys(find).forEach((key:string) => {if ((find as any)[key] == null) delete (find as any)[key];});\n\n\t\treturn modified;\n\t}\n\n\t// deletes the indicated component, and collapses any child nodes into its own position (as opposed to just deleting\n\t// them too)\n\tpublic deleteComponent(origin:number[]):void\n\t{\n\t\tif (origin.length == 0) return; // can't delete the whole thing\n\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents, parent = look;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tparent = look;\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\t\tlet idx = origin[origin.length - 1];\n\t\tparent.splice(idx, 1);\n\t\tif (look) for (let c of look) parent.splice(idx++, 0, c);\n\t}\n\n\t// insert a new component \"above\" the existing one, and handle the reparenting\n\tpublic prependBefore(origin:number[], comp:MixfileComponent):void\n\t{\n\t\t// slightly different when prepending before the root element\n\t\tif (origin.length == 0)\n\t\t{\n\t\t\tlet mixfile = this.mixfile;\n\t\t\tlet subcomp:MixfileComponent = {};\n\t\t\tconst SKIP = ['mixfileVersion', 'contents'];\n\t\t\tfor (let key in (mixfile as any)) if (!SKIP.includes(key))\n\t\t\t{\n\t\t\t\t(subcomp as any)[key] = (mixfile as any)[key];\n\t\t\t\tdelete (mixfile as any)[key];\n\t\t\t}\n\t\t\tmixfile.contents = [subcomp];\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents, parent = look;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tparent = look;\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\t\tlet idx = origin[origin.length - 1];\n\t\tparent[idx] = comp;\n\t\tcomp.contents = [find];\n\t}\n\n\t// takes an origin vector and splits it into {parent origin} and {child index}; returns null on both counts if this is the root node\n\tpublic static splitOrigin(origin:number[]):[number[], number]\n\t{\n\t\tif (origin.length == 0) return [null, null];\n\t\tlet parent = origin.slice(0);\n\t\tlet idx = parent.splice(origin.length - 1, 1)[0];\n\t\treturn [parent, idx];\n\t}\n\n\t// makes a JSON object into a nicely formatted string for human readability\n\tpublic static beautify(json:any):string\n\t{\n\t\tlet lines = JSON.stringify(json, null, 4).split('\\n');\n\t\tlet regex = /^(\\s*\\\"\\w+\\\": )([\\[\\{].*)$/, regpad = /^(\\s*)/;\n\t\tfor (let n = 0; n < lines.length; n++)\n\t\t{\n\t\t\tlet match = regex.exec(lines[n]);\n\t\t\tif (!match) continue;\n\t\t\tlet padding = regpad.exec(lines[n]);\n\t\t\tlines[n] = match[1] + '\\n' + padding[1] + match[2];\n\t\t}\n\t\treturn lines.join('\\n');\n\t}\n\n\t// ------------ private methods ------------\n\n\t// returns true if this component, and all sub-components, are equal\n\tprivate recursiveEqual(comp1:MixfileComponent, comp2:MixfileComponent):boolean\n\t{\n\t\tlet dict1:any = comp1, dict2:any = comp2;\n\t\t/*let keys1 = Object.keys(dict1), keys2 = Object.keys(dict2);\n\t\tlet i:number;\n\t\tif ((i = keys1.indexOf('contents')) >= 0) keys1.splice(i, 1);\n\t\tif ((i = keys2.indexOf('contents')) >= 0) keys2.splice(i, 1);*/\n\t\tlet keys1:string[] = [], keys2:string[] = [];\n\t\tfor (let k in dict1) if (k != 'contents' && dict1[k] != null) keys1.push(k);\n\t\tfor (let k in dict2) if (k != 'contents' && dict2[k] != null) keys2.push(k);\n\t\tkeys1.sort();\n\t\tkeys2.sort();\n\t\tif (!Vec.equals(keys1, keys2)) return false; // different keys (less contents) is a dealbreaker\n\t\tfor (let k of keys1)\n\t\t{\n\t\t\tlet v1 = dict1[k], v2 = dict2[k];\n\t\t\tif (Array.isArray(v1) && Array.isArray(v2))\n\t\t\t{\n\t\t\t\tif (!Vec.equals(v1, v2)) return false;\n\t\t\t}\n\t\t\telse // assume scalar\n\t\t\t{\n\t\t\t\tif (v1 != v2) return false;\n\t\t\t}\n\t\t}\n\n\t\tlet len = Vec.arrayLength(comp1.contents);\n\t\tif (len != Vec.arrayLength(comp2.contents)) return false;\n\t\tfor (let n = 0; n < len; n++) if (!this.recursiveEqual(comp1.contents[n], comp2.contents[n])) return false;\n\n\t\treturn true;\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\n/*\n\tThe Mixfile is a raw definition of the contents of a mixture, which maps directly to the JSON datastructure\n\tthat holds the serialised content. For keeping an operable mixture instance, see the Mixture class.\n*/\n\nexport const MIXFILE_VERSION = 1.00; // version number to use for newly created instances\n\nexport type MixfileMetadatum = string | (string | number)[];\n\nexport interface Mixfile extends MixfileComponent\n{\n\tmixfileVersion:number;\n}\n\nexport interface MixfileComponent\n{\n\tname?:string;\n\tdescription?:string;\n\tsynonyms?:string[];\n\n\t// molecular specification: none of them are mandatory, but if more than one is specified, they must refer to the same species, \n\t// to the extent that the format allows; InChI strings are expected to be standard, while SMILES are not\n\tformula?:string;\n\tmolfile?:string;\n\tinchi?:string;\n\tinchiKey?:string;\n\tsmiles?:string;\n\n\t// if the concentration is known, then these fields should be filled out as appropriate; if the concentration is a ratio,\n\t// it is relative to all of the components within the same branch\n\tquantity?:number | number[]; // a concentration numeric which is associated with the units below (two numbers in case of a range)\n\terror?:number; // optional standard error (applies to quantity when it's a scalar)\n\tratio?:number[]; // a ratio, specified as [numerator, denominator]\n\tunits?:string; // units for quantity (e.g. %, mol/L, g, etc.)\n\trelation?:string; // optional modifier when applied to quantity (e.g. >, <, ~)\n\n\t// identifiers that map the substance to external databases (e.g. PubChem, ChemSpider, CAS, etc.); identifiers are ID numbers, and\n\t// the meaning is implied by the context; links should be resolvable URLs, which are an alternative way of locating external\n\t// resources; in some cases where there are multiple identifiers, the value should be specified as an array\n\tidentifiers?:Record<string, string | string[]>;\n\tlinks?:Record<string, string | string[]>;\n\n\t// metadata starts with an IRI that defines the core concept, and then may be followed by scalar data and/or other IRIs; this allows\n\t// discrete facts to be asserted about the component, as well as numeric values such as physical properties and their units\n\tmetadata?:MixfileMetadatum[];\n\n\t// subcomponents: if this is a discrete molecular entity, then there will be none; usually there are either 0 or 2-or-more; in cases\n\t// where there are any subcomponents, any of the properties above apply to all of these subcomponents collectively\n\tcontents?:MixfileComponent[];\n}\n\n// useful for cleaning up external JSON content\nexport const MIXFILE_COMPONENT_FIELDS =\n[\n\t'name', 'description', 'synonyms', 'formula', 'molfile', 'inchi', 'inchiKey', 'smiles',\n\t'ratio', 'quantity', 'units', 'relation', 'identifiers', 'links', 'contents'\n];\nexport const MIXFILE_ROOT_FIELDS =\n[\n\t'mixfileVersion', ...MIXFILE_COMPONENT_FIELDS\n];\n\n/* orignal example of what the format might look like (1st draft):\n{\n\t\"mixture\": \"1.0 M lithium diisopropyl amide in THF/hexanes\",\n\t\"contents\":\n\t[\n\t\t{\n\t\t\t\"name\": \"lithium diisopropylamide\",\n\t\t\t\"synonyms\": [\"LDA\", \"(iPr)2N.Li\"],\n\t\t\t\"formula\": \"C6H14LiN\",\n\t\t\t\"pubchem\": \"2724682\",\n\t\t\t\"chemspider\": \"2006804\",\n\t\t\t\"inchi\": \"InChI=1S/C6H14N.Li/c1-5(2)7-6(3)4;/h5-6H,1-4H3;/q-1;+1\",\n\t\t\t\"smiles\": \"[Li+].CC(C)[N-]C(C)C\",\n\t\t\t\"molfile\": \"\\nOpenMolecule\\n\\n  8  7  0  0  0  0  0  0  0  0999 V2000\\n    0.0000    0.0000    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\\n    1.5000    0.0000    0.0000 Li  0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.7500    1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.7500   -1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.0000    2.5981    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -2.2500    1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n    0.0000   -2.5981    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -2.2500   -1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n  1  2  1  0  0  0  0\\n  1  3  1  0  0  0  0\\n  1  4  1  0  0  0  0\\n  3  5  1  0  0  0  0\\n  3  6  1  0  0  0  0\\n  4  7  1  0  0  0  0\\n  4  8  1  0  0  0  0\\nM  END\\n\",\n\t\t\t\"quantity\": 1.0,\n\t\t\t\"units\": \"mol/L\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"solvent\",\n\t\t\t\"contents\":\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"tetrahydrofuran\",\n\t\t\t\t\t\"synonyms\": [\"THF\"],\n\t\t\t\t\t\"formula\": \"C4H8O\",\n\t\t\t\t\t\"pubchem\": \"8028\",\n\t\t\t\t\t\"chemspider\": \"7737\",\n\t\t\t\t\t\"inchi\": \"InChI=1S/C4H8O/c1-2-4-5-3-1/h1-4H2\",\n\t\t\t\t\t\"smiles\": \"C1CCOC1\",\n\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\"fraction\": [1, 8]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"group\": \"hexanes\",\n\t\t\t\t\t\"fraction\": [7, 8],\n\t\t\t\t\t\"contents\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"n-hexane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"8058\",\n\t\t\t\t\t\t\t\"chemspider\": \"7767\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-3-5-6-4-2/h3-6H2,1-2H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCCCCC\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [50, 70]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"methylcyclopentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7296\",\n\t\t\t\t\t\t\t\"chemspider\": \"7024\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H12/c1-6-4-2-3-5-6/h6H,2-5H2,1H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CC1CCCC1\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [10, 20]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"2-methypentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7892\",\n\t\t\t\t\t\t\t\"chemspider\": \"7604\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-4-5-6(2)3/h6H,4-5H2,1-3H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCCC(C)C\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [1, 5]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"3-methylpentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7282\",\n\t\t\t\t\t\t\t\"chemspider\": \"7010\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-4-6(3)5-2/h6H,4-5H2,1-3H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCC(C)CC\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [1, 5]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"other hexanes\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n*/\n\n","import { clone } from '../util/util';\nexport class RenderPolicy {\n    constructor(data) {\n        if (!data) {\n            data =\n                {\n                    name: 'default',\n                    pointScale: 20,\n                    resolutionDPI: 100,\n                    fontSize: 0.65,\n                    lineSize: 0.075,\n                    bondSep: 0.2,\n                    defaultPadding: 0.2,\n                    foreground: 0x000000,\n                    background: 0xFFFFFF,\n                    atomCols: new Array(112)\n                };\n            for (let n = 0; n <= 111; n++)\n                data.atomCols[n] = 0x000000;\n            this.data = data;\n        }\n        else {\n            this.data = clone(data);\n        }\n    }\n    clone() { return new RenderPolicy(this.data); }\n    static defaultBlackOnWhite(pixPerAng) {\n        let policy = new RenderPolicy();\n        if (pixPerAng)\n            policy.data.pointScale = pixPerAng;\n        return policy;\n    }\n    static defaultWhiteOnBlack(pixPerAng) {\n        let policy = new RenderPolicy();\n        if (pixPerAng)\n            policy.data.pointScale = pixPerAng;\n        policy.data.foreground = 0xFFFFFF;\n        policy.data.background = 0x000000;\n        for (let n = 0; n <= 111; n++)\n            policy.data.atomCols[n] = 0xFFFFFF;\n        return policy;\n    }\n    static defaultColourOnWhite(pixPerAng) {\n        let policy = RenderPolicy.defaultBlackOnWhite(pixPerAng);\n        policy.data.atomCols[0] = 0x404040;\n        policy.data.atomCols[1] = 0x808080;\n        policy.data.atomCols[6] = 0x000000;\n        policy.data.atomCols[7] = 0x0000FF;\n        policy.data.atomCols[8] = 0xFF0000;\n        policy.data.atomCols[9] = 0xFF8080;\n        policy.data.atomCols[15] = 0xFF8000;\n        policy.data.atomCols[16] = 0x808000;\n        policy.data.atomCols[17] = 0x00C000;\n        policy.data.atomCols[35] = 0xC04000;\n        return policy;\n    }\n    static defaultColourOnBlack(pixPerAng) {\n        let policy = RenderPolicy.defaultWhiteOnBlack(pixPerAng);\n        policy.data.atomCols[0] = 0xA0A0A0;\n        policy.data.atomCols[1] = 0x808080;\n        policy.data.atomCols[6] = 0xFFFFFF;\n        policy.data.atomCols[7] = 0x4040FF;\n        policy.data.atomCols[8] = 0xFF4040;\n        policy.data.atomCols[9] = 0xFF8080;\n        policy.data.atomCols[15] = 0xFF8000;\n        policy.data.atomCols[16] = 0xFFFF00;\n        policy.data.atomCols[17] = 0x40FF40;\n        policy.data.atomCols[35] = 0xFF8040;\n        return policy;\n    }\n    static defaultPrintedPublication() {\n        let policy = RenderPolicy.defaultBlackOnWhite(9.6);\n        policy.data.resolutionDPI = 600;\n        policy.data.fontSize = 0.80;\n        policy.data.bondSep = 0.27;\n        policy.data.lineSize = 0.0625;\n        return policy;\n    }\n}\nexport class RenderEffects {\n    constructor() {\n        this.colAtom = {};\n        this.colBond = {};\n        this.dottedRectOutline = {};\n        this.dottedBondCross = {};\n        this.hideAtoms = new Set();\n        this.hideBonds = new Set();\n        this.atomFrameDotSz = [];\n        this.atomFrameCol = [];\n        this.atomCircleSz = [];\n        this.atomCircleCol = [];\n        this.atomDecoText = [];\n        this.atomDecoCol = [];\n        this.atomDecoSize = [];\n        this.bondDecoText = [];\n        this.bondDecoCol = [];\n        this.bondDecoSize = [];\n        this.overlapAtoms = [];\n    }\n}\nexport var RenderMnemonicType;\n(function (RenderMnemonicType) {\n    RenderMnemonicType[\"Atom\"] = \"A\";\n    RenderMnemonicType[\"Bond\"] = \"B\";\n    RenderMnemonicType[\"Artifact\"] = \"R\";\n    RenderMnemonicType[\"Effect\"] = \"E\";\n})(RenderMnemonicType || (RenderMnemonicType = {}));\nexport class RenderMnemonics {\n    constructor(encoded) {\n        this.items = [];\n        let lines = (encoded || '').split('&');\n        for (let line of lines) {\n            let bits = line.split('|');\n            if (bits.length != 3)\n                continue;\n            let item = {\n                type: bits[0],\n                details: bits[1],\n                coords: bits[2].split(',').map((str) => parseFloat(str)),\n            };\n            this.items.push(item);\n        }\n    }\n    append(type, details, coords) {\n        for (let n = details.length - 1; n >= 0; n--)\n            if (details[n] == '|' || details[n] == '&')\n                details = details.substring(0, n) + details.substring(n + 1);\n        this.items.push({ type, details, coords });\n    }\n    serialise() {\n        var _a;\n        let lines = [];\n        for (let item of this.items) {\n            let coords = ((_a = item.coords) !== null && _a !== void 0 ? _a : []).map((coord) => coord.toFixed(1)).join(',');\n            lines.push(`${item.type}|${item.details}|${coords}`);\n        }\n        return lines.join('&');\n    }\n    packWithCoords() { return this.serialise(); }\n    packWithoutCoords() {\n        return this.items.map((item) => `${item.type}|${item.details}`).join('&');\n    }\n}\n//# sourceMappingURL=Rendering.js.map","import { Vec } from '../util/Vec';\nexport class Graph {\n    constructor(sz, edge1, edge2) {\n        this.nbrs = [];\n        this.indices = null;\n        this.labels = null;\n        this.props = null;\n        if (sz != null)\n            for (let n = 0; n < sz; n++)\n                this.nbrs.push([]);\n        if (edge1 != null && edge2 != null) {\n            for (let n = 0; n < edge1.length; n++) {\n                this.nbrs[edge1[n]].push(edge2[n]);\n                this.nbrs[edge2[n]].push(edge1[n]);\n            }\n        }\n    }\n    clone() {\n        let g = new Graph();\n        for (let nbr of this.nbrs)\n            g.nbrs.push(nbr.slice(0));\n        g.indices = this.indices == null ? null : this.indices.slice(0);\n        g.labels = this.labels == null ? null : this.labels.slice(0);\n        g.props = this.props == null ? null : this.props.slice(0);\n        return g;\n    }\n    static fromMolecule(mol) {\n        let g = new Graph();\n        g.indices = [];\n        for (let n = 0; n < mol.numAtoms; n++) {\n            g.nbrs.push([]);\n            g.indices.push(n + 1);\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            g.nbrs[bfr].push(bto);\n            g.nbrs[bto].push(bfr);\n        }\n        return g;\n    }\n    static fromNeighbours(nbrs) {\n        let g = new Graph();\n        g.nbrs = nbrs;\n        return g;\n    }\n    toString() {\n        let buff = '#nodes=' + this.nbrs.length;\n        for (let n = 0; n < this.nbrs.length; n++) {\n            buff += ' ' + n + ':{' + this.nbrs[n] + '}';\n            if (n < Vec.len(this.indices))\n                buff += '[i=' + this.indices[n] + ']';\n            if (n < Vec.len(this.labels))\n                buff += '[l=' + this.labels[n] + ']';\n        }\n        return buff;\n    }\n    get numNodes() { return this.nbrs.length; }\n    numEdges(node) { return this.nbrs[node].length; }\n    getEdge(node, edge) { return this.nbrs[node][edge]; }\n    getEdges(node) { return this.nbrs[node]; }\n    getIndex(node) { return this.indices == null ? 0 : this.indices[node]; }\n    setIndex(node, idx) {\n        if (this.indices == null)\n            this.indices = Vec.numberArray(0, this.nbrs.length);\n        this.indices[node] = idx;\n    }\n    getLabel(node) { return this.labels == null ? null : this.labels[node]; }\n    setLabel(node, lbl) {\n        if (this.labels == null)\n            this.labels = Vec.stringArray('', this.nbrs.length);\n        this.labels[node] = lbl;\n    }\n    getProperty(node) { return this.props == null ? null : this.props[node]; }\n    setProperty(node, prp) {\n        if (this.props == null)\n            this.props = new Array(this.nbrs.length);\n        this.props[node] = prp;\n    }\n    addNode() {\n        this.nbrs.push([]);\n        if (this.indices != null)\n            this.indices.push(0);\n        if (this.labels != null)\n            this.labels.push('');\n        if (this.props != null)\n            this.props.push(null);\n        return this.nbrs.length - 1;\n    }\n    hasEdge(node1, node2) {\n        if (this.nbrs[node1].length <= this.nbrs[node2].length)\n            return this.nbrs[node1].indexOf(node2) >= 0;\n        else\n            return this.nbrs[node2].indexOf(node1) >= 0;\n    }\n    addEdge(node1, node2) {\n        this.nbrs[node1].push(node2);\n        this.nbrs[node2].push(node1);\n    }\n    removeEdge(node1, node2) {\n        let i1 = this.nbrs[node1].indexOf(node2), i2 = this.nbrs[node2].indexOf(node1);\n        if (i1 >= 0)\n            this.nbrs[node1].splice(i1, 1);\n        if (i2 >= 0)\n            this.nbrs[node2].splice(i2, 1);\n    }\n    isolateNode(node) {\n        for (let o of this.nbrs[node]) {\n            let i = this.nbrs[o].indexOf(node);\n            if (i >= 0)\n                this.nbrs[o].splice(i, 1);\n        }\n        this.nbrs[node] = [];\n    }\n    keepNodesMask(mask) {\n        const oldsz = this.nbrs.length, newsz = Vec.maskCount(mask);\n        if (newsz == oldsz)\n            return;\n        if (newsz == 0) {\n            this.nbrs = [];\n            this.indices = null;\n            this.labels = null;\n            this.props = null;\n            return;\n        }\n        let newmap = Vec.maskMap(mask);\n        let newnbrs = [];\n        for (let n = 0; n < newsz; n++)\n            newnbrs.push([]);\n        for (let n = 0, pos = 0; n < oldsz; n++)\n            if (mask[n]) {\n                for (let i of this.nbrs[n])\n                    if (mask[i])\n                        newnbrs[pos].push(newmap[i]);\n                pos++;\n            }\n        this.nbrs = newnbrs;\n        if (this.indices != null)\n            this.indices = Vec.maskGet(this.indices, mask);\n        if (this.labels != null)\n            this.labels = Vec.maskGet(this.labels, mask);\n        if (this.props != null)\n            this.props = Vec.maskGet(this.props, mask);\n    }\n    keepNodesIndex(idx) { this.keepNodesMask(Vec.idxMask(idx, this.numNodes)); }\n    removeNodesMask(mask) { this.keepNodesMask(Vec.notMask(mask)); }\n    removeNodesIndex(idx) { this.removeNodesMask(Vec.idxMask(idx, this.numNodes)); }\n    subgraphIndex(idx) {\n        const nsz = idx.length;\n        let g = new Graph(nsz);\n        if (this.indices != null || this.labels != null || this.props != null)\n            for (let n = 0; n < nsz; n++) {\n                if (this.indices != null)\n                    g.setIndex(n, this.indices[idx[n]]);\n                if (this.labels != null)\n                    g.setLabel(n, this.labels[idx[n]]);\n                if (this.props != null)\n                    g.setProperty(n, this.props[idx[n]]);\n            }\n        for (let i = 0; i < nsz; i++) {\n            for (let n of this.nbrs[idx[i]]) {\n                let j = idx.indexOf(n);\n                if (j > i)\n                    g.addEdge(i, j);\n            }\n        }\n        return g;\n    }\n    subgraphMask(mask) {\n        let g = this.clone();\n        g.keepNodesMask(mask);\n        return g;\n    }\n    calculateComponents() {\n        const sz = this.nbrs.length;\n        if (sz == 0)\n            return [];\n        let cc = Vec.numberArray(0, sz);\n        cc[0] = 1;\n        let first = 1, high = 1;\n        while (true) {\n            while (first < sz && cc[first] > 0) {\n                first++;\n            }\n            if (first >= sz)\n                break;\n            let anything = false;\n            for (let i = first; i < sz; i++)\n                if (cc[i] == 0) {\n                    for (let j = 0; j < this.nbrs[i].length; j++) {\n                        if (cc[this.nbrs[i][j]] != 0) {\n                            cc[i] = cc[this.nbrs[i][j]];\n                            anything = true;\n                        }\n                    }\n                }\n            if (!anything)\n                cc[first] = ++high;\n        }\n        return cc;\n    }\n    calculateComponentGroups() {\n        if (this.nbrs.length == 0)\n            return [];\n        let cc = this.calculateComponents();\n        let sz = Vec.max(cc);\n        let grp = [];\n        for (let n = 0; n < sz; n++)\n            grp.push([]);\n        for (let n = 0; n < cc.length; n++)\n            grp[cc[n] - 1].push(n);\n        return grp;\n    }\n    calculateRingBlocks() {\n        let sz = this.numNodes, nbrs = this.nbrs;\n        if (sz == 0)\n            return [[], 0];\n        let rblk = new Array(this.numNodes);\n        let visited = Vec.booleanArray(false, sz);\n        Vec.setTo(rblk, 0);\n        let path = new Array(sz + 1);\n        let plen = 0, numVisited = 0;\n        while (true) {\n            let last, current;\n            if (plen == 0) {\n                last = -1;\n                for (current = 0; visited[current]; current++) { }\n            }\n            else {\n                last = path[plen - 1];\n                current = -1;\n                for (let n = 0; n < nbrs[last].length; n++)\n                    if (!visited[nbrs[last][n]]) {\n                        current = nbrs[last][n];\n                        break;\n                    }\n            }\n            if (current >= 0 && plen >= 2) {\n                let back = path[plen - 1];\n                for (let n = 0; n < nbrs[current].length; n++) {\n                    let join = nbrs[current][n];\n                    if (join != back && visited[join]) {\n                        path[plen] = current;\n                        for (let i = plen; i == plen || path[i + 1] != join; i--) {\n                            let id = rblk[path[i]];\n                            if (id == 0)\n                                rblk[path[i]] = last;\n                            else if (id != last) {\n                                for (let j = 0; j < sz; j++)\n                                    if (rblk[j] == id)\n                                        rblk[j] = last;\n                            }\n                        }\n                    }\n                }\n            }\n            if (current >= 0) {\n                visited[current] = true;\n                path[plen++] = current;\n                numVisited++;\n            }\n            else {\n                plen--;\n            }\n            if (numVisited == sz)\n                break;\n        }\n        let nextID = 0;\n        for (let i = 0; i < sz; i++)\n            if (rblk[i] > 0) {\n                nextID--;\n                for (let j = sz - 1; j >= i; j--)\n                    if (rblk[j] == rblk[i])\n                        rblk[j] = nextID;\n            }\n        for (let i = 0; i < sz; i++)\n            rblk[i] = -rblk[i];\n        return [rblk, -nextID];\n    }\n    calculateRingBlockGroups() {\n        let [rblk, sz] = this.calculateRingBlocks();\n        if (sz == 0)\n            return [];\n        let cap = Vec.numberArray(0, sz);\n        for (let n = 0; n < rblk.length; n++)\n            if (rblk[n] > 0)\n                cap[rblk[n] - 1]++;\n        let grp = new Array(sz);\n        for (let n = 0; n < sz; n++) {\n            grp[n] = new Array(cap[n]);\n            cap[n] = 0;\n        }\n        for (let n = 0; n < rblk.length; n++) {\n            let i = rblk[n] - 1;\n            if (i < 0)\n                continue;\n            grp[i][cap[i]++] = n;\n        }\n        return grp;\n    }\n    findRingsOfSize(size) {\n        let [rblk, num] = this.calculateRingBlocks();\n        if (num == 0)\n            return [];\n        let rings = [];\n        let mask = new Array(this.numNodes);\n        for (let r = 1; r <= num; r++) {\n            for (let n = 0; n < this.numNodes; n++)\n                mask[n] = rblk[n] == r;\n            let newRings = this.findRingsOfSizeMask(size, mask);\n            for (let n = 0; n < newRings.length; n++)\n                rings.push(newRings[n]);\n        }\n        return rings;\n    }\n    findRingsOfSizeMask(size, mask) {\n        let rings = [];\n        for (let n = 0; n < this.numNodes; n++)\n            if (mask[n]) {\n                let path = new Array(size);\n                path[0] = n;\n                this.recursiveRingFind(path, 1, size, mask, rings);\n            }\n        return rings;\n    }\n    calculateBFS(idx) {\n        let ret = Vec.numberArray(-1, this.numNodes);\n        ret[idx] = 0;\n        let curnum = 0, lsz = 1, watermark = 0;\n        let list = Vec.numberArray(0, this.numNodes);\n        list[0] = idx;\n        while (true) {\n            let newsz = lsz;\n            for (let n = watermark; n < lsz; n++) {\n                for (let i = 0; i < this.nbrs[list[n]].length; i++) {\n                    let j = this.nbrs[list[n]][i];\n                    if (ret[j] < 0) {\n                        ret[j] = curnum + 1;\n                        list[newsz++] = j;\n                    }\n                }\n            }\n            if (newsz == lsz)\n                break;\n            watermark = lsz;\n            lsz = newsz;\n            curnum++;\n        }\n        return ret;\n    }\n    calculateGravity() {\n        const sz = this.numNodes;\n        const { nbrs } = this;\n        let wght = Vec.numberArray(1, sz), wmod = Vec.numberArray(0, sz);\n        for (let n = 0; n < sz; n++) {\n            Vec.setTo(wmod, wght);\n            for (let i = 0; i < sz; i++)\n                for (let j = nbrs[i].length - 1; j >= 0; j--)\n                    wmod[i] += wght[nbrs[i][j]];\n            Vec.setTo(wght, wmod);\n        }\n        return wght;\n    }\n    recursiveRingFind(path, psize, capacity, mask, rings) {\n        if (psize < capacity) {\n            let last = path[psize - 1];\n            for (let n = 0; n < this.nbrs[last].length; n++) {\n                let adj = this.nbrs[last][n];\n                if (!mask[adj])\n                    continue;\n                let fnd = false;\n                for (let i = 0; i < psize; i++)\n                    if (path[i] == adj) {\n                        fnd = true;\n                        break;\n                    }\n                if (!fnd) {\n                    let newPath = Vec.duplicate(path);\n                    newPath[psize] = adj;\n                    this.recursiveRingFind(newPath, psize + 1, capacity, mask, rings);\n                }\n            }\n            return;\n        }\n        let last = path[psize - 1];\n        let fnd = false;\n        for (let n = 0; n < this.nbrs[last].length; n++)\n            if (this.nbrs[last][n] == path[0]) {\n                fnd = true;\n                break;\n            }\n        if (!fnd)\n            return;\n        for (let n = 0; n < path.length; n++) {\n            let count = 0, p = path[n];\n            for (let i = 0; i < this.nbrs[p].length; i++)\n                if (path.indexOf(this.nbrs[p][i]) >= 0)\n                    count++;\n            if (count != 2)\n                return;\n        }\n        let first = 0;\n        for (let n = 1; n < psize; n++)\n            if (path[n] < path[first])\n                first = n;\n        let fm = (first - 1 + psize) % psize, fp = (first + 1) % psize;\n        let flip = path[fm] < path[fp];\n        if (first != 0 || flip) {\n            let newPath = new Array(psize);\n            for (let n = 0; n < psize; n++)\n                newPath[n] = path[(first + (flip ? psize - n : n)) % psize];\n            path = newPath;\n        }\n        for (let n = 0; n < rings.length; n++) {\n            let look = rings[n];\n            let same = true;\n            for (let i = 0; i < psize; i++)\n                if (look[i] != path[i]) {\n                    same = false;\n                    break;\n                }\n            if (same)\n                return;\n        }\n        rings.push(path);\n    }\n}\n//# sourceMappingURL=Graph.js.map","import { safeInt } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Graph } from './Graph';\nexport const BONDARTIFACT_EXTRA_RESPATH = 'xRESPATH:';\nexport const BONDARTIFACT_EXTRA_RESRING = 'xRESRING:';\nexport const BONDARTIFACT_EXTRA_ARENE = 'xARENE:';\nexport class BondArtifact {\n    constructor(mol) {\n        this.mol = mol;\n        this.resPaths = new Map();\n        this.resRings = new Map();\n        this.arenes = new Map();\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            for (let str of this.mol.atomExtra(n)) {\n                if (str.startsWith(BONDARTIFACT_EXTRA_RESPATH))\n                    this.appendResPath(n, str.substring(BONDARTIFACT_EXTRA_RESPATH.length).split(':'));\n                else if (str.startsWith(BONDARTIFACT_EXTRA_RESRING))\n                    this.appendResRing(n, str.substring(BONDARTIFACT_EXTRA_RESRING.length).split(':'));\n                else if (str.startsWith(BONDARTIFACT_EXTRA_ARENE))\n                    this.appendArene(n, str.substring(BONDARTIFACT_EXTRA_ARENE.length).split(':'));\n            }\n        }\n        for (let [blk, res] of this.resPaths.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (!this.pathify(res.atoms, false))\n                this.resPaths.delete(blk);\n        }\n        for (let [blk, res] of this.resRings.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (!this.pathify(res.atoms, true))\n                this.resRings.delete(blk);\n        }\n        for (let [blk, res] of this.arenes.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (res.atoms.length > 1)\n                res.centre = res.atoms.shift();\n            if (!this.pathify(res.atoms, false))\n                this.arenes.delete(blk);\n        }\n    }\n    getPathBlocks() { return Array.from(this.resPaths.keys()); }\n    getRingBlocks() { return Array.from(this.resRings.keys()); }\n    getAreneBlocks() { return Array.from(this.arenes.keys()); }\n    getResPaths() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.resPaths.keys())))\n            list.push(this.resPaths.get(key));\n        return list;\n    }\n    getResRings() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.resRings.keys())))\n            list.push(this.resRings.get(key));\n        return list;\n    }\n    getArenes() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.arenes.keys())))\n            list.push(this.arenes.get(key));\n        return list;\n    }\n    rewriteMolecule() {\n        const mol = this.mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n), modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (extra[i].startsWith(BONDARTIFACT_EXTRA_RESPATH) || extra[i].startsWith(BONDARTIFACT_EXTRA_RESRING) || extra[i].startsWith(BONDARTIFACT_EXTRA_ARENE)) {\n                    extra.splice(i);\n                    modified = true;\n                }\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n        for (let [blk, path] of this.resPaths.entries()) {\n            for (let n = 0; n < path.atoms.length; n++) {\n                let extra = mol.atomExtra(path.atoms[n]);\n                extra.push(BONDARTIFACT_EXTRA_RESPATH + blk + ':' + (n + 1));\n                mol.setAtomExtra(path.atoms[n], extra);\n            }\n        }\n        for (let [blk, ring] of this.resRings.entries()) {\n            for (let n = 0; n < ring.atoms.length; n++) {\n                let extra = mol.atomExtra(ring.atoms[n]);\n                extra.push(BONDARTIFACT_EXTRA_RESRING + blk + ':' + (n + 1));\n                mol.setAtomExtra(ring.atoms[n], extra);\n            }\n        }\n        for (let [blk, arene] of this.arenes.entries()) {\n            for (let n = -1; n < arene.atoms.length; n++) {\n                let atom = n < 0 ? arene.centre : arene.atoms[n];\n                let extra = mol.atomExtra(atom);\n                extra.push(BONDARTIFACT_EXTRA_ARENE + blk + ':' + (n + 2));\n                mol.setAtomExtra(atom, extra);\n            }\n        }\n    }\n    harmoniseNumbering(other) {\n        let blocks = other.getPathBlocks();\n        let stashPaths = this.getResPaths();\n        this.resPaths.clear();\n        for (let path of stashPaths) {\n            let blk = this.nextIdentifier(blocks);\n            this.resPaths.set(blk, path);\n            blocks.push(blk);\n        }\n        blocks = other.getRingBlocks();\n        let stashRings = this.getResRings();\n        this.resRings.clear();\n        for (let ring of stashRings) {\n            let blk = this.nextIdentifier(blocks);\n            this.resRings.set(blk, ring);\n            blocks.push(blk);\n        }\n        blocks = other.getAreneBlocks();\n        let stashArenes = this.getArenes();\n        this.arenes.clear();\n        for (let arene of stashArenes) {\n            let blk = this.nextIdentifier(blocks);\n            this.arenes.set(blk, arene);\n            blocks.push(blk);\n        }\n    }\n    createPath(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let path = this.atomsAsPath(atoms);\n        if (path) {\n            let id = this.nextIdentifier(Array.from(this.resPaths.keys()));\n            this.resPaths.set(id, path);\n            return true;\n        }\n        return false;\n    }\n    createRing(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let ring = this.atomsAsRing(atoms);\n        if (ring) {\n            let id = this.nextIdentifier(Array.from(this.resRings.keys()));\n            this.resRings.set(id, ring);\n            return true;\n        }\n        return false;\n    }\n    createArene(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let arene = this.atomsAsArene(atoms);\n        if (arene) {\n            let id = this.nextIdentifier(Array.from(this.arenes.keys()));\n            this.arenes.set(id, arene);\n            return true;\n        }\n        return false;\n    }\n    removeArtifact(atoms) {\n        let type = 0, pick = 0, overlap = 0;\n        for (let [blk, path] of this.resPaths.entries()) {\n            let count = 0;\n            for (let a of path.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 1;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        for (let [blk, ring] of this.resRings.entries()) {\n            let count = 0;\n            for (let a of ring.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 2;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        for (let [blk, arene] of this.arenes.entries()) {\n            let count = atoms.indexOf(arene.centre) >= 0 ? 1 : 0;\n            for (let a of arene.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 3;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        if (type == 0)\n            return false;\n        else if (type == 1)\n            this.resPaths.delete(pick);\n        else if (type == 2)\n            this.resRings.delete(pick);\n        else if (type == 3)\n            this.arenes.delete(pick);\n        return true;\n    }\n    static removeAll(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (!extra[i].startsWith(BONDARTIFACT_EXTRA_RESPATH) && !extra[i].startsWith(BONDARTIFACT_EXTRA_RESRING) &&\n                    !extra[i].startsWith(BONDARTIFACT_EXTRA_ARENE))\n                    continue;\n                extra = Vec.remove(extra, i);\n                modified = true;\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n    }\n    appendResPath(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.resPaths.get(blk);\n        if (res == null)\n            this.resPaths.set(blk, res = { atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    appendResRing(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.resRings.get(blk);\n        if (res == null)\n            this.resRings.set(blk, res = { atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    appendArene(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.arenes.get(blk);\n        if (res == null)\n            this.arenes.set(blk, res = { centre: 0, atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    pack(arr) {\n        let ret = [];\n        for (let v of arr)\n            if (v != 0)\n                ret.push(v);\n        return ret;\n    }\n    pathify(atoms, requireRing) {\n        let sz = atoms.length;\n        if (sz < 2)\n            return false;\n        let g = Graph.fromMolecule(this.mol);\n        for (let n = 0; n < this.mol.numAtoms; n++)\n            g.setIndex(n, n + 1);\n        g = g.subgraphIndex(Vec.add(atoms, -1));\n        let pos = 0;\n        for (let n = 1; n < sz; n++)\n            if (g.numEdges(n) < g.numEdges(pos))\n                pos = n;\n        Vec.setTo(atoms, -1);\n        for (let n = 0; n < sz; n++) {\n            atoms[n] = pos;\n            if (n == sz - 1) {\n                if (requireRing)\n                    if (g.getEdges(pos).indexOf(atoms[0]) < 0)\n                        return false;\n            }\n            else {\n                let next = sz;\n                for (let i of g.getEdges(pos))\n                    if (atoms.indexOf(i) < 0 && i < next)\n                        next = i;\n                if (next == sz)\n                    return false;\n                pos = next;\n            }\n        }\n        for (let n = 0; n < sz; n++)\n            atoms[n] = g.getIndex(atoms[n]);\n        return true;\n    }\n    alreadyExists(atoms) {\n        atoms = Vec.sorted(atoms);\n        for (let path of this.resPaths.values()) {\n            if (Vec.equals(atoms, Vec.sorted(path.atoms)))\n                return true;\n        }\n        for (let ring of this.resRings.values()) {\n            if (Vec.equals(atoms, Vec.sorted(ring.atoms)))\n                return true;\n        }\n        for (let arene of this.arenes.values()) {\n            let areneAtoms = Vec.append(arene.atoms, arene.centre);\n            if (Vec.equals(atoms, Vec.sorted(areneAtoms)))\n                return true;\n        }\n        return false;\n    }\n    atomsAsPath(atoms) {\n        if (atoms.length < 2)\n            return null;\n        let path = { atoms: atoms };\n        if (!this.pathify(path.atoms, false))\n            return null;\n        return path;\n    }\n    atomsAsRing(atoms) {\n        if (atoms.length < 3)\n            return null;\n        let ring = { atoms: atoms };\n        if (!this.pathify(ring.atoms, true))\n            return null;\n        return ring;\n    }\n    atomsAsArene(atoms) {\n        const sz = atoms.length;\n        if (sz < 3)\n            return null;\n        let g = Graph.fromMolecule(this.mol).subgraphIndex(Vec.add(atoms, -1));\n        let best = 0;\n        if (sz == 3) {\n            let bsum = [0, 0, 0];\n            for (let n = 0; n < sz; n++) {\n                if (g.numEdges(n) != 2)\n                    return null;\n                for (let e of g.getEdges(n))\n                    bsum[n] += this.mol.bondOrder(this.mol.findBond(atoms[n], atoms[e]));\n                best = Vec.idxMin(bsum);\n            }\n        }\n        else {\n            for (let n = 1; n < sz; n++)\n                if (g.numEdges(n) > g.numEdges(best))\n                    best = n;\n        }\n        let arene = { centre: atoms[best], atoms: Vec.remove(atoms, best) };\n        if (!this.pathify(arene.atoms, false))\n            return null;\n        return arene;\n    }\n    nextIdentifier(inkeys) {\n        if (inkeys.length == 0)\n            return 1;\n        let keys = Vec.sorted(inkeys);\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=BondArtifact.js.map","class Chemistry {\n}\nChemistry.ELEMENTS = [\n    null,\n    'H', 'He',\n    'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Ne',\n    'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'Ar',\n    'K', 'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr',\n    'Rb', 'Sr', 'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn', 'Sb', 'Te', 'I', 'Xe',\n    'Cs', 'Ba',\n    'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb',\n    'Lu', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg', 'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn',\n    'Fr', 'Ra',\n    'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No',\n    'Lr', 'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds', 'Rg', 'Cn'\n];\nChemistry.ELEMENT_GROUPS = [\n    0,\n    1, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_ROWS = [\n    0,\n    1, 1,\n    2, 2, 2, 2, 2, 2, 2, 2,\n    3, 3, 3, 3, 3, 3, 3, 3,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n    6, 6,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    7, 7,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7\n];\nChemistry.ELEMENT_BLOCKS = [\n    0,\n    1, 2,\n    1, 1, 2, 2, 2, 2, 2, 2,\n    1, 1, 2, 2, 2, 2, 2, 2,\n    1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3\n];\nChemistry.ELEMENT_VALENCE = [\n    0,\n    1, 2,\n    1, 2, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 2,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_BONDING = [\n    0,\n    1, 0,\n    1, 2, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 2,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_SHELL = [\n    0,\n    2, 2,\n    8, 8, 8, 8, 8, 8, 8, 8,\n    8, 8, 8, 8, 8, 8, 8, 8,\n    8, 8, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 8, 8, 8, 8, 8, 8,\n    8, 8, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 8, 8, 8, 8, 8, 8,\n    8, 8,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    8, 8,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18\n];\nChemistry.NATURAL_ATOMIC_WEIGHTS = [\n    0, 1.00794, 4.002602, 6.941, 9.012182, 10.811, 12.0107, 14.0067, 15.9994, 18.9984032, 20.1797,\n    22.989770, 24.3050, 26.981538, 28.0855, 30.973761, 32.065, 35.453, 39.948, 39.0983, 40.078,\n    44.955910, 47.867, 50.9415, 51.9961, 54.938049, 55.845, 58.933200, 58.6934, 63.546, 65.409,\n    69.723, 72.64, 74.92160, 78.96, 79.904, 83.798, 85.4678, 87.62, 88.90585, 91.224, 92.90638,\n    95.94, 98, 101.07, 102.90550, 106.42, 107.8682, 112.411, 114.818, 118.710, 121.760, 127.60,\n    126.90447, 131.293, 132.90545, 137.327, 138.9055, 140.116, 140.90765, 144.24, 145, 150.36,\n    151.964, 157.25, 158.92534, 162.500, 164.93032, 167.259, 168.93421, 173.04, 174.967, 178.49,\n    180.9479, 183.84, 186.207, 190.23, 192.217, 195.078, 196.96655, 200.59, 204.3833, 207.2, 208.98038,\n    209, 210, 222, 223, 226, 227, 230.0331266, 231.03588, 233.039628, 237, 244, 243, 247, 247, 251, 252, 257,\n    258, 259, 262, 261, 262, 266, 264, 277, 268, 271, 272, 285\n];\nChemistry.ELEMENT_H = 1;\nChemistry.ELEMENT_He = 2;\nChemistry.ELEMENT_Li = 3;\nChemistry.ELEMENT_Be = 4;\nChemistry.ELEMENT_B = 5;\nChemistry.ELEMENT_C = 6;\nChemistry.ELEMENT_N = 7;\nChemistry.ELEMENT_O = 8;\nChemistry.ELEMENT_F = 9;\nChemistry.ELEMENT_Ne = 10;\nChemistry.ELEMENT_Na = 11;\nChemistry.ELEMENT_Mg = 12;\nChemistry.ELEMENT_Al = 13;\nChemistry.ELEMENT_Si = 14;\nChemistry.ELEMENT_P = 15;\nChemistry.ELEMENT_S = 16;\nChemistry.ELEMENT_Cl = 17;\nChemistry.ELEMENT_Ar = 18;\nChemistry.ELEMENT_K = 19;\nChemistry.ELEMENT_Ca = 20;\nChemistry.ELEMENT_Sc = 21;\nChemistry.ELEMENT_Ti = 22;\nChemistry.ELEMENT_V = 23;\nChemistry.ELEMENT_Cr = 24;\nChemistry.ELEMENT_Mn = 25;\nChemistry.ELEMENT_Fe = 26;\nChemistry.ELEMENT_Co = 27;\nChemistry.ELEMENT_Ni = 28;\nChemistry.ELEMENT_Cu = 29;\nChemistry.ELEMENT_Zn = 30;\nChemistry.ELEMENT_Ga = 31;\nChemistry.ELEMENT_Ge = 32;\nChemistry.ELEMENT_As = 33;\nChemistry.ELEMENT_Se = 34;\nChemistry.ELEMENT_Br = 35;\nChemistry.ELEMENT_Kr = 36;\nChemistry.ELEMENT_Rb = 37;\nChemistry.ELEMENT_Sr = 38;\nChemistry.ELEMENT_Y = 39;\nChemistry.ELEMENT_Zr = 40;\nChemistry.ELEMENT_Nb = 41;\nChemistry.ELEMENT_Mo = 42;\nChemistry.ELEMENT_Tc = 43;\nChemistry.ELEMENT_Ru = 44;\nChemistry.ELEMENT_Rh = 45;\nChemistry.ELEMENT_Pd = 46;\nChemistry.ELEMENT_Ag = 47;\nChemistry.ELEMENT_Cd = 48;\nChemistry.ELEMENT_In = 49;\nChemistry.ELEMENT_Sn = 50;\nChemistry.ELEMENT_Sb = 51;\nChemistry.ELEMENT_Te = 52;\nChemistry.ELEMENT_I = 53;\nChemistry.ELEMENT_Xe = 54;\nChemistry.ELEMENT_Cs = 55;\nChemistry.ELEMENT_Ba = 56;\nChemistry.ELEMENT_La = 57;\nChemistry.ELEMENT_Ce = 58;\nChemistry.ELEMENT_Pr = 59;\nChemistry.ELEMENT_Nd = 60;\nChemistry.ELEMENT_Pm = 61;\nChemistry.ELEMENT_Sm = 62;\nChemistry.ELEMENT_Eu = 63;\nChemistry.ELEMENT_Gd = 64;\nChemistry.ELEMENT_Tb = 65;\nChemistry.ELEMENT_Dy = 66;\nChemistry.ELEMENT_Ho = 67;\nChemistry.ELEMENT_Er = 68;\nChemistry.ELEMENT_Tm = 69;\nChemistry.ELEMENT_Yb = 70;\nChemistry.ELEMENT_Lu = 71;\nChemistry.ELEMENT_Hf = 72;\nChemistry.ELEMENT_Ta = 73;\nChemistry.ELEMENT_W = 74;\nChemistry.ELEMENT_Re = 75;\nChemistry.ELEMENT_Os = 76;\nChemistry.ELEMENT_Ir = 77;\nChemistry.ELEMENT_Pt = 78;\nChemistry.ELEMENT_Au = 79;\nChemistry.ELEMENT_Hg = 80;\nChemistry.ELEMENT_Tl = 81;\nChemistry.ELEMENT_Pb = 82;\nChemistry.ELEMENT_Bi = 83;\nChemistry.ELEMENT_Po = 84;\nChemistry.ELEMENT_At = 85;\nChemistry.ELEMENT_Rn = 86;\nChemistry.ELEMENT_Fr = 87;\nChemistry.ELEMENT_Ra = 88;\nChemistry.ELEMENT_Ac = 89;\nChemistry.ELEMENT_Th = 90;\nChemistry.ELEMENT_Pa = 91;\nChemistry.ELEMENT_U = 92;\nChemistry.ELEMENT_Np = 93;\nChemistry.ELEMENT_Pu = 94;\nChemistry.ELEMENT_Am = 95;\nChemistry.ELEMENT_Cm = 96;\nChemistry.ELEMENT_Bk = 97;\nChemistry.ELEMENT_Cf = 98;\nChemistry.ELEMENT_Es = 99;\nChemistry.ELEMENT_Fm = 100;\nChemistry.ELEMENT_Md = 101;\nChemistry.ELEMENT_No = 102;\nChemistry.ELEMENT_Lr = 103;\nChemistry.ELEMENT_Rf = 104;\nChemistry.ELEMENT_Db = 105;\nChemistry.ELEMENT_Sg = 106;\nChemistry.ELEMENT_Bh = 107;\nChemistry.ELEMENT_Hs = 108;\nChemistry.ELEMENT_Mt = 109;\nChemistry.ELEMENT_Ds = 110;\nChemistry.ELEMENT_Rg = 111;\nChemistry.ELEMENT_Cn = 112;\nexport { Chemistry };\n//# sourceMappingURL=Chemistry.js.map","import { Chemistry } from '../data/Chemistry';\nimport { Graph } from '../data/Graph';\nimport { Molecule } from '../data/Molecule';\nimport { Vec } from '../util/Vec';\nexport class ResonanceRemover {\n    constructor(mol, resBonds, atomHyd = []) {\n        this.mol = mol;\n        this.resBonds = resBonds;\n        this.atomHyd = atomHyd;\n        this.maxIter = 1000;\n        this.bondOrders = [];\n        this.tolerant = false;\n        this.mol = mol;\n        this.resBonds = resBonds;\n        this.atomHyd = atomHyd;\n        for (let n = 1; n <= mol.numBonds; n++)\n            this.bondOrders.push(mol.bondOrder(n));\n    }\n    perform() {\n        const { mol } = this;\n        if (this.atomHyd == null) {\n            this.atomHyd = [];\n            for (let n = 1; n <= mol.numAtoms; n++)\n                this.atomHyd.push(mol.atomHExplicit(n));\n        }\n        this.correctInputMask();\n        let g = new Graph(mol.numAtoms);\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.resBonds[n - 1])\n                g.addEdge(mol.bondFrom(n) - 1, mol.bondTo(n) - 1);\n        let cc = g.calculateComponentGroups();\n        for (let n = 0; n < cc.length; n++)\n            if (cc[n].length >= 2)\n                this.processComponent(cc[n]);\n    }\n    correctInputMask() {\n        const { mol, atomHyd } = this;\n        const na = mol.numAtoms, nb = mol.numBonds;\n        let exclude = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++) {\n            let atno = mol.atomicNumber(n);\n            let val = atno == Chemistry.ELEMENT_C ? 4 :\n                atno == Chemistry.ELEMENT_N || atno == Chemistry.ELEMENT_P || atno == Chemistry.ELEMENT_B ? 3 :\n                    atno == Chemistry.ELEMENT_O || atno == Chemistry.ELEMENT_S ? 2 : -1;\n            if (val < 0) {\n                exclude[n - 1] = true;\n                continue;\n            }\n            val += mol.atomCharge(n);\n            if (atomHyd[n - 1] > 0)\n                val -= atomHyd[n - 1];\n            if (mol.atomAdjCount(n) >= val)\n                exclude[n - 1] = true;\n        }\n        for (let n = 1; n <= nb; n++)\n            if (!this.resBonds[n - 1] && mol.bondOrder(n) != 1) {\n                exclude[mol.bondFrom(n) - 1] = true;\n                exclude[mol.bondTo(n) - 1] = true;\n            }\n        this.resBonds = this.resBonds.slice(0);\n        for (let n = 0; n < nb; n++)\n            if (this.resBonds[n] && (exclude[mol.bondFrom(n + 1) - 1] || exclude[mol.bondTo(n + 1) - 1])) {\n                this.bondOrders[n] = 1;\n                this.resBonds[n] = false;\n            }\n    }\n    processComponent(nodes) {\n        const { mol, resBonds, bondOrders, atomHyd } = this;\n        let sz = nodes.length;\n        if (sz == 2) {\n            let b = mol.findBond(nodes[0] + 1, nodes[1] + 1);\n            bondOrders[b - 1] = 2;\n            return;\n        }\n        let optionalH = Vec.booleanArray(false, sz);\n        for (let n = 0; n < sz; n++) {\n            let i = nodes[n], a = i + 1;\n            optionalH[n] = atomHyd[i] == Molecule.HEXPLICIT_UNKNOWN && mol.atomElement(a) == 'N' && mol.atomAdjCount(a) - mol.atomCharge(a) <= 2;\n        }\n        let g = new Graph(sz);\n        let gravity = g.calculateGravity();\n        let mask = Vec.idxMask(nodes, mol.numAtoms);\n        let bsz = 0;\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (resBonds[n - 1] && mask[mol.bondFrom(n) - 1] && mask[mol.bondTo(n) - 1])\n                bsz++;\n        let bfr = Vec.numberArray(0, bsz), bto = Vec.numberArray(0, bsz), bgrav = Vec.numberArray(0, bsz), bidx = Vec.numberArray(0, bsz);\n        bsz = 0;\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (resBonds[n - 1] && mask[mol.bondFrom(n) - 1] && mask[mol.bondTo(n) - 1]) {\n                let f = nodes.indexOf(mol.bondFrom(n) - 1), t = nodes.indexOf(mol.bondTo(n) - 1);\n                bfr[bsz] = f;\n                bto[bsz] = t;\n                bgrav[bsz] = gravity[f] + gravity[t];\n                bidx[bsz] = n;\n                g.addEdge(f, t);\n                bsz++;\n            }\n        let seq = Vec.numberArray(0, bsz);\n        seq[0] = Vec.idxMax(bgrav);\n        let visited = Vec.booleanArray(false, bsz);\n        visited[seq[0]] = true;\n        for (let i = 1; i < bsz; i++) {\n            let b = -1;\n            for (let j = i - 1; j >= 0; j--) {\n                for (let n = 0; n < bsz; n++) {\n                    if (!visited[n])\n                        if (bfr[n] == bfr[seq[j]] || bfr[n] == bto[seq[j]] || bto[n] == bfr[seq[j]] || bto[n] == bto[seq[j]]) {\n                            if (b < 0 || bgrav[n] > bgrav[b])\n                                b = n;\n                        }\n                }\n                if (b >= 0)\n                    break;\n            }\n            if (b < 0)\n                throw 'Graph walk failed';\n            seq[i] = b;\n            visited[b] = true;\n        }\n        let paths = [];\n        paths.push([true]);\n        paths.push([false]);\n        let result = null;\n        let resultCount = 0;\n        let definiteMatch = Math.ceil(0.5 * bsz);\n        let iter = 0;\n        while (paths.length > 0) {\n            let p = paths[0];\n            let p1 = Vec.append(p, false), p2 = Vec.append(p, true);\n            if (!this.validPath(p1, seq, bfr, bto, g, optionalH))\n                p1 = null;\n            if (!this.validPath(p2, seq, bfr, bto, g, optionalH))\n                p2 = null;\n            if (Vec.len(p1) == bsz) {\n                let c = Vec.maskCount(p1);\n                if (c > resultCount) {\n                    result = p1;\n                    resultCount = c;\n                }\n                p1 = null;\n            }\n            if (Vec.len(p2) == bsz) {\n                let c = Vec.maskCount(p2);\n                if (c > resultCount) {\n                    result = p2;\n                    resultCount = c;\n                }\n                p2 = null;\n            }\n            if (resultCount >= definiteMatch)\n                break;\n            if (p1 == null && p2 == null)\n                paths.shift();\n            else if (p1 != null && p2 != null) {\n                paths[0] = p1;\n                paths.splice(1, 0, p2);\n            }\n            else if (p1 != null)\n                paths[0] = p1;\n            else\n                paths[0] = p2;\n            iter++;\n            if (iter > this.maxIter) {\n                if (result != null)\n                    break;\n                if (this.tolerant)\n                    return;\n                throw 'Resonance localisation exceeded maximum iteration count';\n            }\n        }\n        if (result == null) {\n            if (this.tolerant)\n                return;\n            throw 'Unable to find a solution to the resonance block.';\n        }\n        for (let n = 0; n < bsz; n++)\n            bondOrders[bidx[seq[n]] - 1] = result[n] ? 2 : 1;\n    }\n    validPath(path, seq, bfr, bto, g, optionalH) {\n        let sz = g.numNodes;\n        let count1 = Vec.numberArray(0, sz), count2 = Vec.numberArray(0, sz);\n        for (let n = 0; n < path.length; n++) {\n            let a1 = bfr[seq[n]], a2 = bto[seq[n]];\n            if (path[n]) {\n                count2[a1]++;\n                count2[a2]++;\n            }\n            else {\n                count1[a1]++;\n                count1[a2]++;\n            }\n        }\n        for (let n = 0; n < sz; n++) {\n            if (count2[n] > 1)\n                return false;\n            if (!optionalH[n] && g.numEdges(n) > 1 && count1[n] == g.numEdges(n))\n                return false;\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=ResonanceRemover.js.map","import { deepClone, safeFloat, safeInt } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nexport var DataSheetColumn;\n(function (DataSheetColumn) {\n    DataSheetColumn[\"Molecule\"] = \"molecule\";\n    DataSheetColumn[\"String\"] = \"string\";\n    DataSheetColumn[\"Real\"] = \"real\";\n    DataSheetColumn[\"Integer\"] = \"integer\";\n    DataSheetColumn[\"Boolean\"] = \"boolean\";\n    DataSheetColumn[\"Extend\"] = \"extend\";\n})(DataSheetColumn || (DataSheetColumn = {}));\nexport class DataSheet {\n    constructor(data) {\n        if (!data)\n            data = {};\n        if (!data.title)\n            data.title = '';\n        if (!data.description)\n            data.description = '';\n        if (data.numCols == null)\n            data.numCols = Vec.len(data.colData);\n        if (data.numRows == null)\n            data.numRows = Vec.len(data.rowData);\n        if (data.numExtens == null)\n            data.numExtens = Vec.len(data.extData);\n        if (data.colData == null)\n            data.colData = [];\n        if (data.rowData == null)\n            data.rowData = [];\n        if (data.extData == null)\n            data.extData = [];\n        this.data = data;\n    }\n    clone(withRows = true) {\n        let { numCols, numRows, colData, rowData } = this.data;\n        let data = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: numCols,\n            numRows: withRows ? numRows : 0,\n            numExtens: this.data.numExtens,\n            colData: deepClone(colData),\n            rowData: withRows ? new Array(numRows) : [],\n            extData: deepClone(this.data.extData),\n        };\n        if (withRows)\n            for (let r = 0; r < numRows; r++) {\n                let inRow = rowData[r], outRow = new Array(numCols);\n                for (let c = 0; c < numCols; c++) {\n                    if (inRow[c] != null && colData[c].type == \"molecule\" && inRow[c] instanceof Molecule)\n                        outRow[c] = inRow[c].clone();\n                    else\n                        outRow[c] = inRow[c];\n                }\n                data.rowData[r] = outRow;\n            }\n        return new DataSheet(data);\n    }\n    cloneMask(colMask, rowMask = null, inclExtn = true) {\n        let { numCols, numRows, colData, rowData } = this.data;\n        let data = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: Vec.maskCount(colMask),\n            numRows: rowMask ? Vec.maskCount(rowMask) : 0,\n            numExtens: inclExtn ? this.data.numExtens : 0,\n            colData: deepClone(Vec.maskGet(colData, colMask)),\n            rowData: [],\n            extData: inclExtn ? deepClone(this.data.extData) : [],\n        };\n        if (rowMask)\n            for (let r = 0; r < numRows; r++)\n                if (rowMask[r]) {\n                    let inRow = rowData[r], outRow = Vec.maskGet(inRow, colMask);\n                    data.rowData.push(outRow);\n                }\n        const { colData: outCols, rowData: outRows } = data;\n        for (let c = outCols.length - 1; c >= 0; c--)\n            if (outCols[c].type == \"molecule\") {\n                for (let r = outRows.length - 1; r >= 0; r--)\n                    if (outRows[r][c] != null && outRows[r][c] instanceof Molecule)\n                        outRows[r][c] = outRows[r][c].clone();\n            }\n        return new DataSheet(data);\n    }\n    getData() {\n        return this.data;\n    }\n    get numCols() {\n        return this.data.numCols;\n    }\n    get numRows() {\n        return this.data.numRows;\n    }\n    get title() { return this.data.title; }\n    set title(title) { this.data.title = title; }\n    get description() { return this.data.description; }\n    set description(description) { this.data.description = description; }\n    get numExtensions() {\n        return this.data.numExtens;\n    }\n    getExtName(idx) {\n        return this.data.extData[idx].name;\n    }\n    getExtType(idx) {\n        return this.data.extData[idx].type;\n    }\n    getExtData(idx) {\n        return this.data.extData[idx].data;\n    }\n    setExtName(idx, val) {\n        this.data.extData[idx].name = val;\n    }\n    setExtType(idx, val) {\n        this.data.extData[idx].type = val;\n    }\n    setExtData(idx, val) {\n        this.data.extData[idx].data = val;\n    }\n    appendExtension(name, type, data) {\n        this.data.numExtens++;\n        this.data.extData.push({ name, type, data });\n        return this.data.numExtens - 1;\n    }\n    insertExtension(idx, name, type, data) {\n        this.data.numExtens++;\n        this.data.extData.splice(idx, 0, { name, type, data });\n    }\n    deleteExtension(idx) {\n        this.data.extData.splice(idx, 1);\n        this.data.numExtens--;\n    }\n    colName(col) {\n        return this.data.colData[col].name;\n    }\n    colType(col) {\n        return this.data.colData[col].type;\n    }\n    colDescr(col) {\n        return this.data.colData[col].descr;\n    }\n    isNull(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col] == null;\n    }\n    notNull(row, col) {\n        return !this.isNull(row, col);\n    }\n    isBlank(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col))\n            return true;\n        let ct = this.colType(col);\n        if (ct == \"molecule\")\n            return this.getMolecule(row, col).numAtoms == 0;\n        if (ct == \"string\")\n            return this.getString(row, col).length == 0;\n        if (ct == \"extend\")\n            return this.getExtend(row, col).length == 0;\n        return false;\n    }\n    notBlank(row, col) {\n        return !this.isBlank(row, col);\n    }\n    getObject(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        return this.data.rowData[row][col];\n    }\n    getMolecule(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        let datum = this.data.rowData[row][col];\n        if (datum == null)\n            return null;\n        if (typeof datum === 'string') {\n            datum = Molecule.fromString(datum);\n            this.data.rowData[row][col] = datum;\n        }\n        return datum;\n    }\n    getMoleculeClone(row, col) {\n        let mol = this.getMolecule(row, col);\n        return mol == null ? null : mol.clone();\n    }\n    getMoleculeBlank(row, col) {\n        let mol = this.getMolecule(row, col);\n        return mol ? mol : new Molecule();\n    }\n    getString(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        let str = this.data.rowData[row][col];\n        return str == null ? '' : str;\n    }\n    getInteger(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getReal(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getBoolean(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getExtend(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    setToNull(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = null;\n    }\n    setObject(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setMolecule(row, col, mol) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = mol ? mol.clone() : null;\n    }\n    setString(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setInteger(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setReal(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setBoolean(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setExtend(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    isEqualMolecule(row, col, mol) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (mol == null))\n            return false;\n        if (mol == null)\n            return true;\n        return this.getMolecule(row, col).compareTo(mol) == 0;\n    }\n    isEqualString(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null || val == ''))\n            return false;\n        if (val == null || val == '')\n            return true;\n        return this.getString(row, col) == val;\n    }\n    isEqualInteger(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getInteger(row, col) == val;\n    }\n    isEqualReal(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getReal(row, col) == val;\n    }\n    isEqualBoolean(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getBoolean(row, col) == val;\n    }\n    appendColumn(name, type, descr) {\n        this.data.numCols++;\n        this.data.colData.push({ name, type, descr });\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].push(null);\n        return this.data.numCols - 1;\n    }\n    insertColumn(col, name, type, descr) {\n        this.data.numCols++;\n        this.data.colData.splice(col, 0, { name, type, descr });\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].splice(col, 0, null);\n    }\n    deleteColumn(col) {\n        this.data.numCols--;\n        this.data.colData.splice(col, 1);\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].splice(col, 1);\n    }\n    changeColumnName(col, name, descr) {\n        this.data.colData[col].name = name;\n        this.data.colData[col].descr = descr;\n    }\n    changeColumnType(col, newType) {\n        let oldType = this.colType(col);\n        if (oldType == newType)\n            return;\n        let incompatible = oldType == \"molecule\" || newType == \"molecule\" ||\n            oldType == \"extend\" || newType == \"extend\";\n        for (let n = this.data.rowData.length - 1; n >= 0; n--) {\n            let row = this.data.rowData[n];\n            if (row[col] == null)\n                continue;\n            if (incompatible) {\n                row[col] = null;\n                continue;\n            }\n            let val = '';\n            if (oldType == \"string\")\n                val = row[col];\n            else if (oldType == \"integer\")\n                val = row[col].toString();\n            else if (oldType == \"real\")\n                val = row[col].toString();\n            else if (oldType == \"boolean\")\n                val = row[col] ? 'true' : 'false';\n            row[col] = null;\n            if (newType == \"string\")\n                row[col] = val;\n            else if (newType == \"integer\") {\n                let num = parseInt(val);\n                row[col] = isFinite(num) ? num : null;\n            }\n            else if (newType == \"real\") {\n                let num = parseFloat(val);\n                row[col] = isFinite(num) ? num : null;\n            }\n            else if (newType == \"boolean\")\n                row[col] = val.toLowerCase() == 'true' ? true : false;\n        }\n        this.data.colData[col].type = newType;\n    }\n    ensureColumn(name, type, descr) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].name == name) {\n                if (this.data.colData[n].type != type)\n                    this.changeColumnType(n, type);\n                this.data.colData[n].descr = descr;\n                return n;\n            }\n        return this.appendColumn(name, type, descr);\n    }\n    reorderColumns(order) {\n        let identity = true;\n        for (let n = 0; n < order.length - 1; n++)\n            if (order[n] != order[n + 1] - 1) {\n                identity = false;\n                break;\n            }\n        if (identity)\n            return;\n        this.data.colData = Vec.idxGet(this.data.colData, order);\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n] = Vec.idxGet(this.data.rowData[n], order);\n    }\n    appendRow() {\n        this.data.numRows++;\n        let row = new Array();\n        for (let n = 0; n < this.data.numCols; n++)\n            row.push(null);\n        this.data.rowData.push(row);\n        return this.data.numRows - 1;\n    }\n    appendRowFrom(srcDS, row) {\n        this.data.numRows++;\n        this.data.rowData.push(srcDS.data.rowData[row].slice(0));\n        return this.data.numRows - 1;\n    }\n    insertRow(row) {\n        this.data.numRows++;\n        let data = new Array();\n        for (let n = 0; n < this.data.numCols; n++)\n            data.push(null);\n        this.data.rowData.splice(row, 0, data);\n    }\n    deleteRow(row) {\n        this.data.numRows--;\n        this.data.rowData.splice(row, 1);\n    }\n    deleteAllRows() {\n        this.data.numRows = 0;\n        this.data.rowData = new Array();\n    }\n    moveRowUp(row) {\n        let data = this.data.rowData[row];\n        this.data.rowData[row] = this.data.rowData[row - 1];\n        this.data.rowData[row - 1] = data;\n    }\n    moveRowDown(row) {\n        let data = this.data.rowData[row];\n        this.data.rowData[row] = this.data.rowData[row + 1];\n        this.data.rowData[row + 1] = data;\n    }\n    swapRows(row1, row2) {\n        Vec.swap(this.data.rowData, row1, row2);\n    }\n    exciseSingleRow(row) {\n        let newData = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: this.data.numCols,\n            numRows: 1,\n            numExtens: this.data.numExtens,\n            colData: this.data.colData.slice(0),\n            rowData: [this.data.rowData[row].slice(0)],\n            extData: this.data.extData.slice(0)\n        };\n        return new DataSheet(newData);\n    }\n    colIsPrimitive(col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        let ct = this.data.colData[col].type;\n        return ct == 'string' || ct == 'real' || ct == 'integer' || ct == 'boolean';\n    }\n    findColByName(name, type) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].name == name) {\n                if (type == null || this.data.colData[n].type == type)\n                    return n;\n            }\n        return -1;\n    }\n    firstColOfType(type) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].type == type)\n                return n;\n        return -1;\n    }\n    copyCell(toRow, toCol, fromDS, fromRow, fromCol) {\n        this.setToNull(toRow, toCol);\n        if (fromDS.isNull(fromRow, fromCol))\n            return;\n        let obj = fromDS.getObject(fromRow, fromCol);\n        this.setObject(toRow, toCol, DataSheet.convertType(obj, fromDS.colType(fromCol), this.colType(toCol)));\n    }\n    static convertType(obj, fromType, toType) {\n        const ft = fromType, tt = toType;\n        if (obj == null || ft == tt || (typeof obj == 'string' && obj == ''))\n            return obj;\n        if (tt == \"string\") {\n            if (ft == \"integer\")\n                return obj.toString();\n            else if (ft == \"real\")\n                return obj.toString();\n            else if (ft == \"boolean\")\n                return obj ? 'true' : 'false';\n        }\n        else if (tt == \"real\") {\n            if (ft == \"string\")\n                return safeFloat(obj, null);\n            else if (ft == \"integer\")\n                return obj;\n            else if (ft == \"boolean\")\n                return obj ? 1 : 0;\n        }\n        else if (tt == \"integer\") {\n            if (ft == \"string\")\n                return safeInt(obj, null);\n            else if (ft == \"real\")\n                return Math.round(obj);\n            else if (ft == \"boolean\")\n                return obj ? 1 : 0;\n        }\n        else if (tt == \"boolean\") {\n            if (ft == \"string\")\n                return obj.toLowerCase() == 'true';\n            else if (ft == \"integer\")\n                return obj > 0;\n            else if (ft == \"real\")\n                return obj >= 0.5;\n        }\n        return null;\n    }\n    toString(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : obj.toString();\n    }\n    toInt(row, col) {\n        if (!this.colIsPrimitive(col))\n            return null;\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : parseInt(obj);\n    }\n    toReal(row, col) {\n        if (!this.colIsPrimitive(col))\n            return null;\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : parseFloat(obj);\n    }\n}\n//# sourceMappingURL=DataSheet.js.map","import { Vec } from '../util/Vec';\nexport var ForeignMoleculeTransient;\n(function (ForeignMoleculeTransient) {\n    ForeignMoleculeTransient[\"AtomAromatic\"] = \"yAROMATIC\";\n    ForeignMoleculeTransient[\"BondAromatic\"] = \"yAROMATIC\";\n    ForeignMoleculeTransient[\"BondZeroDative\"] = \"yZERO_DATIVE\";\n    ForeignMoleculeTransient[\"BondZeroHydrogen\"] = \"yZERO_HYDROGEN\";\n    ForeignMoleculeTransient[\"AtomChiralMDLOdd\"] = \"yCHIRAL_MDL_ODD\";\n    ForeignMoleculeTransient[\"AtomChiralMDLEven\"] = \"yCHIRAL_MDL_EVEN\";\n    ForeignMoleculeTransient[\"AtomChiralMDLRacemic\"] = \"yCHIRAL_MDL_RACEMIC\";\n    ForeignMoleculeTransient[\"AtomExplicitValence\"] = \"yMDL_EXPLICIT_VALENCE\";\n    ForeignMoleculeTransient[\"AtomSgroupMultiAttach\"] = \"yMDL_SGROUP_MULTIATTACH\";\n    ForeignMoleculeTransient[\"AtomSgroupMultiRepeat\"] = \"yMDL_SGROUP_MULTIREPEAT\";\n    ForeignMoleculeTransient[\"AtomSgroupData\"] = \"yMDL_SGROUP_DATA\";\n    ForeignMoleculeTransient[\"AtomSCSRClass\"] = \"yMDL_SCSR_CLASS\";\n    ForeignMoleculeTransient[\"AtomSCSRSeqID\"] = \"yMDL_SCSR_SEQID\";\n    ForeignMoleculeTransient[\"AtomSCSRAttchOrd\"] = \"yMDL_SCSR_ATTCHORD\";\n})(ForeignMoleculeTransient || (ForeignMoleculeTransient = {}));\nexport class ForeignMolecule {\n    static noteAromaticAtoms(mol) {\n        const sz = mol.numAtoms;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.atomTransient(n).indexOf(ForeignMoleculeTransient.AtomAromatic) >= 0;\n        return mask;\n    }\n    static noteAromaticBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).indexOf(ForeignMoleculeTransient.BondAromatic) >= 0;\n        return mask;\n    }\n    static noteZeroDativeBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).includes(ForeignMoleculeTransient.BondZeroDative);\n        return mask;\n    }\n    static noteZeroHydrogenBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).includes(ForeignMoleculeTransient.BondZeroHydrogen);\n        return mask;\n    }\n    static markExplicitValence(mol, atom, valence) {\n        let trans = mol.atomTransient(atom).filter((tr) => !tr.startsWith(ForeignMoleculeTransient.AtomExplicitValence + ':'));\n        trans.push(`${ForeignMoleculeTransient.AtomExplicitValence}:${valence}`);\n        mol.setAtomTransient(atom, trans);\n    }\n    static noteExplicitValence(mol, atom) {\n        let trans = mol.atomTransient(atom);\n        for (let tr of trans)\n            if (tr.startsWith(ForeignMoleculeTransient.AtomExplicitValence + ':'))\n                return parseInt(tr.substring(ForeignMoleculeTransient.AtomExplicitValence.length + 1));\n        return null;\n    }\n    static markSgroupMultiAttach(mol, name, atoms, keyval = {}) {\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiAttach.length + 1);\n                    let comma = payload.indexOf(',');\n                    let bits = payload.split(',');\n                    let idx = parseInt(bits[0]);\n                    if (!(idx > 0))\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let tag = `${ForeignMoleculeTransient.AtomSgroupMultiAttach}:${idxHigh + 1},${name}`;\n        for (let [key, val] of Object.entries(keyval))\n            tag += ',' + key + '=' + val;\n        for (let a of atoms)\n            mol.setAtomTransient(a, Vec.append(mol.atomTransient(a), tag));\n    }\n    static hasAnySgroupMultiAttach(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupMultiAttach(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiAttach.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 2)\n                        continue;\n                    let idx = parseInt(bits[0]), name = bits[1];\n                    if (!(idx > 0) || !name)\n                        continue;\n                    let keyval = {};\n                    for (let i = 2; i < bits.length; i++) {\n                        let eq = bits[i].indexOf('=');\n                        if (eq < 0)\n                            continue;\n                        keyval[bits[i].substring(0, eq)] = bits[i].substring(eq + 1);\n                    }\n                    let sgm = map[idx];\n                    if (sgm)\n                        sgm.atoms.push(n);\n                    else\n                        map[idx] = { name, atoms: [n], keyval };\n                }\n        return Object.values(map);\n    }\n    static markSgroupMultiRepeat(mol, mult, atoms) {\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiRepeat.length + 1);\n                    let comma = payload.indexOf(',');\n                    if (comma <= 0)\n                        continue;\n                    let idx = parseInt(payload.substring(0, comma));\n                    if (idx <= 0)\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let unit = atoms.length / mult;\n        let tag = `${ForeignMoleculeTransient.AtomSgroupMultiRepeat}:${idxHigh + 1},${mult},${unit},`;\n        for (let n = 0; n < atoms.length; n++)\n            mol.setAtomTransient(atoms[n], Vec.append(mol.atomTransient(atoms[n]), tag + (n + 1)));\n    }\n    static hasAnySgroupMultiRepeat(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupMultiRepeat(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiRepeat.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 4)\n                        continue;\n                    let idx = parseInt(bits[0]), mult = parseInt(bits[1]), unit = parseInt(bits[2]), pos = parseInt(bits[3]);\n                    if (!(idx > 0) || mult < 2 || unit < 1 || pos < 1 || pos > mult * unit)\n                        continue;\n                    let mr = map[idx];\n                    if (mr == null)\n                        map[idx] = mr = { mult, unit, atoms: Vec.numberArray(0, mult * unit) };\n                    else if (mr.mult != mult || mr.unit != unit)\n                        continue;\n                    mr.atoms[pos - 1] = n;\n                }\n        return Object.values(map);\n    }\n    static markSgroupData(mol, name, value, unit, query, atoms) {\n        var _a;\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupData.length + 1);\n                    let comma = payload.indexOf(',');\n                    if (comma <= 0)\n                        continue;\n                    let idx = parseInt(payload.substring(0, comma));\n                    if (idx <= 0)\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let bits = [(idxHigh + 1).toString(), name, value, unit, query];\n        for (let n = 1; n < bits.length; n++)\n            bits[n] = ((_a = bits[n]) !== null && _a !== void 0 ? _a : '').replace(/\\,/g, '@@');\n        let tag = ForeignMoleculeTransient.AtomSgroupData + ':' + bits.join(',');\n        for (let n = 0; n < atoms.length; n++)\n            mol.setAtomTransient(atoms[n], Vec.append(mol.atomTransient(atoms[n]), tag));\n    }\n    static hasAnySgroupData(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupData(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupData.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 5)\n                        continue;\n                    let idx = parseInt(bits[0]);\n                    for (let i = 1; i < 5; i++)\n                        bits[i] = bits[i].replace(/\\@\\@/g, ',');\n                    if (!(idx > 0))\n                        continue;\n                    let sd = map[idx];\n                    if (sd)\n                        sd.atoms.push(n);\n                    else\n                        map[idx] = { name: bits[1], value: bits[2], unit: bits[3], query: bits[4], atoms: [n] };\n                }\n        return Object.values(map);\n    }\n}\n//# sourceMappingURL=ForeignMolecule.js.map","import { Vec } from '../util/Vec';\nexport const POLYMERBLOCK_EXTRA_POLYMER = 'xPOLYMER:';\nexport const POLYMERBLOCK_SPECIAL_UNCAPPED = '*';\nexport var PolymerBlockConnectivity;\n(function (PolymerBlockConnectivity) {\n    PolymerBlockConnectivity[\"HeadToTail\"] = \"ht\";\n    PolymerBlockConnectivity[\"HeadToHead\"] = \"hh\";\n    PolymerBlockConnectivity[\"Random\"] = \"rnd\";\n})(PolymerBlockConnectivity || (PolymerBlockConnectivity = {}));\nexport class PolymerBlockUnit {\n    constructor(atoms) {\n        this.atoms = atoms;\n        this.connect = null;\n        this.bondConn = null;\n        this.atomName = new Map();\n        this.bondIncl = new Map();\n        this.bondExcl = new Map();\n    }\n    clone() {\n        let dup = new PolymerBlockUnit(this.atoms.slice(0));\n        dup.connect = this.connect;\n        if (this.bondConn)\n            dup.bondConn = this.bondConn.slice(0);\n        for (let [k, v] of this.atomName.entries())\n            dup.atomName.set(k, v.slice(0));\n        for (let [k, v] of this.bondIncl.entries())\n            dup.bondIncl.set(k, v.slice(0));\n        for (let [k, v] of this.bondExcl.entries())\n            dup.bondExcl.set(k, v.slice(0));\n        return dup;\n    }\n}\nexport class PolymerBlock {\n    constructor(mol) {\n        this.mol = mol;\n        this.units = new Map();\n        let blockAtoms = new Map();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            for (let str of extra)\n                if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = str.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    let id = parseInt(bits[0]);\n                    if (id > 0) {\n                        let atoms = blockAtoms.get(id);\n                        if (atoms)\n                            atoms.push(n);\n                        else\n                            atoms = [n];\n                        blockAtoms.set(id, atoms);\n                    }\n                }\n        }\n        for (let key of Vec.sorted(Array.from(blockAtoms.keys())))\n            this.appendBlock(key, blockAtoms.get(key));\n    }\n    getIDList() { return Vec.sorted(Array.from(this.units.keys())); }\n    getUnit(id) { return this.units.get(id); }\n    getUnits() { return Array.from(this.units.values()); }\n    rewriteMolecule() {\n        this.purgeExtraFields();\n        for (let key of Vec.sorted(Array.from(this.units.keys())))\n            this.writeUnit(key, this.units.get(key));\n    }\n    harmoniseNumbering(other) {\n        let allKeys = other.getIDList();\n        for (let key of this.getIDList())\n            if (allKeys.includes(key)) {\n                let unit = this.units.get(key);\n                this.units.delete(key);\n                key = this.nextIdentifier(allKeys);\n                this.units.set(key, unit);\n                allKeys.push(key);\n            }\n    }\n    removeUnit(id) {\n        let unit = this.units.get(id);\n        if (unit == null)\n            return;\n        this.units.delete(id);\n        let pfx = POLYMERBLOCK_EXTRA_POLYMER + id + ':';\n        for (let a of unit.atoms) {\n            let extra = this.mol.atomExtra(a);\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(pfx))\n                    extra = Vec.remove(extra, i);\n            this.mol.setAtomExtra(a, extra);\n        }\n        for (let b = 1; b <= this.mol.numBonds; b++) {\n            let extra = this.mol.bondExtra(b);\n            if (Vec.isBlank(extra))\n                continue;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(pfx))\n                    extra = Vec.remove(extra, i);\n            this.mol.setBondExtra(b, extra);\n        }\n    }\n    removeAll() {\n        this.units.clear();\n        this.purgeExtraFields();\n    }\n    createUnit(unit) {\n        let id = this.nextIdentifier();\n        this.units.set(id, unit.clone());\n        this.writeUnit(id, unit);\n        return id;\n    }\n    static hasPolymerExtensions(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra)\n                    if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n                        return true;\n        }\n        return false;\n    }\n    static getPolymerExtensions(mol, atom) {\n        let extra = mol.atomExtra(atom), polext = null;\n        if (extra == null)\n            return null;\n        for (let str of extra)\n            if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n                polext = Vec.append(polext, str);\n        return polext;\n    }\n    static removePolymerExtensions(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        if (extra == null)\n            return;\n        let modified = false;\n        for (let i = extra.length - 1; i >= 0; i--)\n            if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                extra = Vec.remove(extra, i);\n                modified = true;\n            }\n        if (modified)\n            mol.setAtomExtra(atom, extra);\n    }\n    appendBlock(id, atoms) {\n        const { mol } = this;\n        let nattach = 0;\n        let unit = new PolymerBlockUnit(atoms);\n        for (let atom of atoms)\n            for (let extra of mol.atomExtra(atom))\n                if (extra.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = extra.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    if (bits.length < 2 || parseInt(bits[0]) != id)\n                        continue;\n                    nattach = parseInt(bits[1]);\n                    for (let n = 2; n < bits.length; n++) {\n                        if (bits[n] == PolymerBlockConnectivity.HeadToTail)\n                            unit.connect = PolymerBlockConnectivity.HeadToTail;\n                        else if (bits[n] == PolymerBlockConnectivity.HeadToHead)\n                            unit.connect = PolymerBlockConnectivity.HeadToHead;\n                        else if (bits[n] == PolymerBlockConnectivity.Random)\n                            unit.connect = PolymerBlockConnectivity.Random;\n                        else if (bits[n].startsWith('n')) {\n                            let hasOuter = false;\n                            for (let adj of mol.atomAdjList(atom))\n                                if (!atoms.includes(adj)) {\n                                    hasOuter = true;\n                                    break;\n                                }\n                            if (hasOuter) {\n                                let subBits = bits[n].substring(1).split(',');\n                                unit.atomName.set(atom, subBits.map((str) => parseInt(str)));\n                            }\n                        }\n                    }\n                }\n        if (nattach < 0)\n            return;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let in1 = atoms.indexOf(mol.bondFrom(n)) >= 0, in2 = atoms.indexOf(mol.bondTo(n)) >= 0;\n            if ((in1 && !in2) || (!in1 && in2))\n                nattach--;\n        }\n        if (nattach != 0)\n            return;\n        let bonds = null, order = null;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            for (let extra of mol.bondExtra(n))\n                if (extra.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = extra.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    if (bits.length < 2 || parseInt(bits[0]) != id)\n                        continue;\n                    for (let i = 1; i < bits.length; i++) {\n                        if (bits[i].startsWith('i')) {\n                            let subBits = bits[i].substring(1).split(',');\n                            unit.bondIncl.set(n, subBits.map((str) => parseInt(str)));\n                        }\n                        else if (bits[i].startsWith('e')) {\n                            let subBits = bits[i].substring(1).split(',');\n                            unit.bondExcl.set(n, subBits.map((str) => parseInt(str)));\n                        }\n                        else {\n                            let o = parseInt(bits[i]);\n                            if (o > 0) {\n                                bonds = Vec.append(bonds, n);\n                                order = Vec.append(order, o);\n                            }\n                        }\n                    }\n                }\n        }\n        if (bonds != null) {\n            if (bonds.length % 2 == 1)\n                return;\n            unit.bondConn = Vec.idxGet(bonds, Vec.idxSort(order));\n        }\n        this.units.set(id, unit);\n    }\n    formatBlockAtom(id, unit, atom) {\n        let nbonds = 0;\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let in1 = unit.atoms.indexOf(this.mol.bondFrom(n)) >= 0, in2 = unit.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n            if ((in1 && !in2) || (!in1 && in2))\n                nbonds++;\n        }\n        let str = POLYMERBLOCK_EXTRA_POLYMER + id + ':' + nbonds;\n        if (unit.connect != null)\n            str += ':' + unit.connect;\n        let names = unit.atomName.get(atom);\n        if (Vec.notBlank(names))\n            str += ':n' + names.join(',');\n        return str;\n    }\n    formatBlockBond(id, unit, bond) {\n        let in1 = unit.atoms.includes(this.mol.bondFrom(bond)), in2 = unit.atoms.includes(this.mol.bondTo(bond));\n        let isBoundary = (in1 && !in2) || (in2 && !in1);\n        if (!isBoundary)\n            return null;\n        let idxConn = unit.bondConn ? unit.bondConn.indexOf(bond) : -1;\n        let incl = unit.bondIncl.get(bond), excl = unit.bondExcl.get(bond);\n        if (idxConn < 0 && Vec.isBlank(incl) && Vec.isBlank(excl))\n            return null;\n        let str = POLYMERBLOCK_EXTRA_POLYMER + id;\n        if (idxConn >= 0)\n            str += ':' + (idxConn + 1);\n        if (Vec.notBlank(incl))\n            str += ':i' + incl.join(',');\n        if (Vec.notBlank(excl))\n            str += ':e' + excl.join(',');\n        return str;\n    }\n    purgeExtraFields() {\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let extra = this.mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    extra = Vec.remove(extra, i);\n                    modified = true;\n                }\n            if (modified)\n                this.mol.setAtomExtra(n, extra);\n        }\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let extra = this.mol.bondExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    extra = Vec.remove(extra, i);\n                    modified = true;\n                }\n            if (modified)\n                this.mol.setBondExtra(n, extra);\n        }\n    }\n    writeUnit(id, unit) {\n        const { mol } = this;\n        for (let a of unit.atoms) {\n            let codeAtom = this.formatBlockAtom(id, unit, a);\n            mol.setAtomExtra(a, Vec.append(mol.atomExtra(a), codeAtom));\n        }\n        for (let b = 1; b <= mol.numBonds; b++) {\n            let codeBond = this.formatBlockBond(id, unit, b);\n            if (codeBond)\n                mol.setBondExtra(b, Vec.append(mol.bondExtra(b), codeBond));\n        }\n    }\n    nextIdentifier(keys) {\n        if (!keys)\n            keys = this.getIDList();\n        if (keys.length == 0)\n            return 1;\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=PolymerBlock.js.map","import { GeomUtil } from '../util/Geom';\nimport { angleDiff, angleDiffPos, angleNorm, DEGRAD, norm2_xy, norm_xy, sortAngles, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { CoordUtil } from './CoordUtil';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nexport var Geometry;\n(function (Geometry) {\n    Geometry[Geometry[\"Linear\"] = 0] = \"Linear\";\n    Geometry[Geometry[\"Bent\"] = 1] = \"Bent\";\n    Geometry[Geometry[\"Trigonal\"] = 2] = \"Trigonal\";\n    Geometry[Geometry[\"Tetra1\"] = 3] = \"Tetra1\";\n    Geometry[Geometry[\"Tetra2\"] = 4] = \"Tetra2\";\n    Geometry[Geometry[\"SqPlan\"] = 5] = \"SqPlan\";\n    Geometry[Geometry[\"BasePyram\"] = 6] = \"BasePyram\";\n    Geometry[Geometry[\"TrigBip\"] = 7] = \"TrigBip\";\n    Geometry[Geometry[\"Octa1\"] = 8] = \"Octa1\";\n    Geometry[Geometry[\"Octa2\"] = 9] = \"Octa2\";\n})(Geometry || (Geometry = {}));\nclass SketchUtil {\n    static placeNewAtom(mol, el) {\n        let box = mol.boundary();\n        let x = box.maxX() + Molecule.IDEALBOND, y = box.maxY();\n        return mol.addAtom(el, x, y);\n    }\n    static placeNewFragment(mol, frag) {\n        if (frag.numAtoms == 0)\n            return;\n        let dirX = [1, 0, -1, 1, -1, 1, 0, -1], dirY = [1, 1, 1, 0, 0, -1, -1, -1];\n        let dx = Vec.numberArray(0, 8), dy = Vec.numberArray(0, 8), score = Vec.numberArray(0, 8);\n        let mbox = mol.boundary(), fbox = frag.boundary();\n        for (let n = 0; n < 8; n++) {\n            let vx = dirX[n], vy = dirY[n];\n            if (n == 0 || n == 3 || n == 5)\n                dx[n] = mbox.minX() - fbox.maxX();\n            else if (n == 2 || n == 4 || n == 7)\n                dx[n] = mbox.maxX() - fbox.minX();\n            else\n                dx[n] = 0.5 * (mbox.minX() + mbox.maxX() - fbox.minX() - fbox.maxX());\n            if (n == 5 || n == 6 || n == 7)\n                dy[n] = mbox.minY() - fbox.maxY();\n            else if (n == 0 || n == 1 || n == 2)\n                dy[n] = mbox.maxY() - fbox.minY();\n            else\n                dy[n] = 0.5 * (mbox.minY() + mbox.maxY() - fbox.minY() - fbox.maxY());\n            dx[n] -= vx;\n            dy[n] -= vy;\n            score[n] = SketchUtil.fragPosScore(mol, frag, dx[n], dy[n]);\n            vx *= 0.25;\n            vy *= 0.25;\n            for (let iter = 100; iter > 0; iter--) {\n                let iscore = SketchUtil.fragPosScore(mol, frag, dx[n] + vx, dy[n] + vy);\n                if (iscore <= score[n])\n                    break;\n                score[n] = iscore;\n                dx[n] += vx;\n                dy[n] += vy;\n            }\n            for (let iter = 100; iter > 0; iter--)\n                for (let d = 0; d < 8; d++) {\n                    vx = dirX[d] * 0.1;\n                    vy = dirY[d] * 0.1;\n                    let iscore = SketchUtil.fragPosScore(mol, frag, dx[n] + vx, dy[n] + vy);\n                    if (iscore <= score[n])\n                        break;\n                    score[n] = iscore;\n                    dx[n] += vx;\n                    dy[n] += vy;\n                }\n        }\n        let best = 0;\n        for (let n = 1; n < 8; n++)\n            if (score[n] > score[best])\n                best = n;\n        frag = frag.clone();\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomPos(n, frag.atomX(n) + dx[best], frag.atomY(n) + dy[best]);\n        mol.append(frag);\n    }\n    static fragPosScore(mol, frag, dx, dy) {\n        let score = 0;\n        for (let i = 1; i <= mol.numAtoms; i++)\n            for (let j = 1; j <= frag.numAtoms; j++) {\n                let ox = frag.atomX(j) + dx - mol.atomX(i), oy = frag.atomY(j) + dy - mol.atomY(i);\n                let dist2 = ox * ox + oy * oy;\n                if (dist2 < 1)\n                    return 0;\n                score += 1 / dist2;\n            }\n        let mbox = mol.boundary(), fbox = frag.boundary();\n        let minX = Math.min(fbox.minX() + dx, mbox.minX()), maxX = Math.max(fbox.maxX() + dx, mbox.maxX());\n        let minY = Math.min(fbox.minY() + dy, mbox.minY()), maxY = Math.max(fbox.maxY() + dy, mbox.maxY());\n        let rangeX = Math.max(1, maxX - minX), rangeY = Math.max(1, maxY - minY);\n        let ratio = Math.max(rangeX / rangeY, rangeY / rangeX);\n        return score / ratio;\n    }\n    static mergeOverlappingAtoms(mol) {\n        return SketchUtil.mergeFragmentsDiv(mol, 0);\n    }\n    static mergeFragmentsDiv(mol, div) {\n        const na = mol.numAtoms;\n        let omask = CoordUtil.overlappingAtomMask(mol);\n        let chopmask = Vec.booleanArray(false, na);\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        let remap = [];\n        for (let n = 0; n < na; n++)\n            remap.push(n + 1);\n        let div1 = div, div2 = div + 1;\n        if (div == 0)\n            div1 = na;\n        for (let i = 1; i <= div1; i++)\n            if (omask[i - 1] && !chopmask[i - 1]) {\n                if (div == 0)\n                    div2 = i + 1;\n                for (let j = div2; j <= na; j++)\n                    if (omask[j - 1] && !chopmask[j - 1]) {\n                        if (norm2_xy(mx[i - 1] - mx[j - 1], my[i - 1] - my[j - 1]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                            continue;\n                        let oldN = j, newN = i;\n                        let exotic = [0, 0];\n                        for (let k = 0; k < 2; k++) {\n                            let a = k == 0 ? i : j;\n                            exotic[k] = (mol.atomElement(a) == 'C' ? 0 : 1)\n                                + (mol.atomElement(a) == 'X' ? -100 : 0)\n                                + (mol.atomCharge(a) != 0 ? 1 : 0)\n                                + (mol.atomUnpaired(a) != 0 ? 1 : 0)\n                                + (mol.atomIsotope(a) != Molecule.ISOTOPE_NATURAL ? 1 : 0)\n                                + (mol.atomHExplicit(a) != Molecule.HEXPLICIT_UNKNOWN ? 1 : 0)\n                                + (MolUtil.hasAbbrev(mol, a) ? 1000 : 0);\n                        }\n                        if (exotic[1] > exotic[0]) {\n                            oldN = i;\n                            newN = j;\n                        }\n                        for (let n = 1; n <= mol.numBonds; n++) {\n                            if (mol.bondFrom(n) == oldN)\n                                mol.setBondFrom(n, newN);\n                            if (mol.bondTo(n) == oldN)\n                                mol.setBondTo(n, newN);\n                        }\n                        chopmask[oldN - 1] = true;\n                        remap[oldN - 1] = newN;\n                    }\n            }\n        for (let n = na; n >= 1; n--)\n            if (chopmask[n - 1]) {\n                if (n <= div)\n                    div--;\n                mol.deleteAtomAndBonds(n);\n                for (let i = 0; i < na; i++)\n                    if (remap[i] > n)\n                        remap[i]--;\n            }\n        for (let n = mol.numAtoms; n > div; n--)\n            if (mol.atomElement(n) == 'X') {\n                mol.deleteAtomAndBonds(n);\n                for (let i = 0; i < na; i++)\n                    if (remap[i] > n)\n                        remap[i]--;\n            }\n        MolUtil.removeDuplicateBonds(mol);\n        return remap;\n    }\n    static mergeFragmentsMask(mol, mask) {\n        let chopmask = Vec.booleanArray(false, mol.numAtoms);\n        let na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        for (let i = 1; i <= na; i++)\n            if (mask[i - 1])\n                for (let j = 1; j <= na; j++)\n                    if (!mask[j - 1] && !chopmask[j - 1])\n                        if (norm2_xy(mx[i - 1] - mx[j - 1], my[i - 1] - my[j - 1]) < CoordUtil.OVERLAP_THRESHOLD_SQ) {\n                            let oldN = j, newN = i;\n                            if (mol.atomElement(i) == 'C' && mol.atomElement(j) != 'C' && mol.atomElement(j) != 'X')\n                                [oldN, newN] = [i, j];\n                            if (mol.atomHExplicit(newN) == Molecule.HEXPLICIT_UNKNOWN)\n                                mol.setAtomHExplicit(newN, mol.atomHExplicit(oldN));\n                            mol.setAtomUnpaired(newN, mol.atomUnpaired(newN) + mol.atomUnpaired(oldN));\n                            mol.setAtomCharge(newN, mol.atomCharge(newN) + mol.atomCharge(oldN));\n                            mol.setAtomExtra(newN, Vec.concat(mol.atomExtra(oldN), mol.atomExtra(newN)));\n                            for (let n = 1; n <= mol.numBonds; n++) {\n                                if (mol.bondFrom(n) == oldN)\n                                    mol.setBondFrom(n, newN);\n                                if (mol.bondTo(n) == oldN)\n                                    mol.setBondTo(n, newN);\n                            }\n                            chopmask[oldN - 1] = true;\n                        }\n        for (let n = chopmask.length; n >= 1; n--)\n            if (chopmask[n - 1])\n                mol.deleteAtomAndBonds(n);\n        MolUtil.removeDuplicateBonds(mol);\n    }\n    static matchAngleGeometry(geom, theta) {\n        if (theta.length <= 1)\n            return true;\n        let match = SketchUtil.GEOM_ANGLES[geom], mtheta = Vec.numberArray(0, theta.length);\n        let hit = Vec.booleanArray(false, match.length);\n        for (let n = 0; n < theta.length; n++)\n            for (let s = 1; s >= -1; s -= 2) {\n                for (let i = 0; i < theta.length; i++)\n                    mtheta[i] = (theta[i] - theta[0]) * s;\n                Vec.setTo(hit, false);\n                let gotall = true;\n                for (let i = 0; i < mtheta.length; i++) {\n                    let got = false;\n                    for (let j = 0; j < match.length; j++)\n                        if (!hit[j] && Math.abs(angleDiff(mtheta[i], match[j])) < 3 * DEGRAD) {\n                            hit[j] = true;\n                            got = true;\n                            break;\n                        }\n                    if (!got) {\n                        gotall = false;\n                        break;\n                    }\n                }\n                if (gotall)\n                    return true;\n            }\n        return false;\n    }\n    static primeDirections(mol, atom) {\n        let angles = SketchUtil.calculateNewBondAngles(mol, atom, 1);\n        let exits = SketchUtil.exitVectors(mol, atom);\n        return GeomUtil.uniqueAngles(angles.concat(exits), 2 * DEGRAD);\n    }\n    static exitVectors(mol, atom) {\n        let adj = mol.atomAdjList(atom), sz = adj.length;\n        if (sz == 0)\n            return [0, 90 * DEGRAD, 180 * DEGRAD, -90 * DEGRAD];\n        if (sz == 1)\n            return [];\n        let ret = [];\n        let ang = GeomUtil.sortAngles(CoordUtil.atomBondAngles(mol, atom, adj));\n        for (let n = 0; n < sz; n++) {\n            let nn = n < sz - 1 ? n + 1 : 0;\n            ret.push(angleNorm(ang[n] + 0.5 * angleDiffPos(ang[nn], ang[n])));\n        }\n        return ret;\n    }\n    static calculateNewBondAngles(mol, atom, order) {\n        let adj = mol.atomAdjList(atom);\n        const sz = adj.length;\n        if (sz == 0) {\n            let atno = mol.atomicNumber(atom), atblk = Chemistry.ELEMENT_BLOCKS[atno];\n            if (atblk <= 2)\n                return [0, 90 * DEGRAD, 180 * DEGRAD, -90 * DEGRAD];\n            else\n                return [90 * DEGRAD, -90 * DEGRAD, 30 * DEGRAD, 150 * DEGRAD, 210 * DEGRAD, -30 * DEGRAD, 180 * DEGRAD, 0 * DEGRAD];\n        }\n        let geom = SketchUtil.guessAtomGeometry(mol, atom, order);\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        for (let n = 0; n < geom.length; n++) {\n            let ret = SketchUtil.mapAngleSubstituent(geom[n], ang);\n            if (ret != null)\n                return ret;\n        }\n        return [];\n    }\n    static guessAtomGeometry(mol, atom, order) {\n        let adj = mol.atomAdjList(atom);\n        let sz = adj.length, atno = mol.atomicNumber(atom);\n        let atblk = Chemistry.ELEMENT_BLOCKS[atno], elrow = Chemistry.ELEMENT_ROWS[atno];\n        let el = mol.atomElement(atom);\n        let adjBO = [], adjAN = [], pri = [];\n        let allSingle = true;\n        for (let n = 0; n < sz; n++) {\n            adjBO.push(mol.bondOrder(mol.findBond(atom, adj[n])));\n            adjAN.push(mol.atomicNumber(adj[n]));\n            pri.push(adjBO[n] * 200 + adjAN[n]);\n            if (adjBO[n] != 1)\n                allSingle = true;\n        }\n        for (let p = 0; p < sz - 1;) {\n            if (pri[p] > pri[p + 1]) {\n                Vec.swap(adj, p, p + 1);\n                Vec.swap(adjBO, p, p + 1);\n                Vec.swap(adjAN, p, p + 1);\n                Vec.swap(pri, p, p + 1);\n                if (p > 0)\n                    p--;\n            }\n            else\n                p++;\n        }\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        if (sz == 1) {\n            if (el == 'C' || el == 'N') {\n                if (adjBO[0] == 2 && order == 2)\n                    return [Geometry.Linear];\n                if ((adjBO[0] == 3 && order == 1) || (adjBO[0] == 1 && order == 3))\n                    return [Geometry.Linear];\n            }\n            if (atblk > 2)\n                return [Geometry.Octa1, Geometry.Octa2];\n            if (order != 0 && (el == 'C' || el == 'N' || el == 'O'))\n                return [Geometry.Trigonal];\n            return [Geometry.Trigonal, Geometry.Linear];\n        }\n        if (sz == 2 && Math.abs(angleDiff(ang[0], ang[1])) >= 175 * DEGRAD) {\n            if (atblk <= 2)\n                return [Geometry.SqPlan];\n            else\n                return [Geometry.Octa1, Geometry.Octa2];\n        }\n        let geom = [];\n        if (atblk == 0)\n            geom = [Geometry.Trigonal, Geometry.SqPlan];\n        else if (atblk == 1)\n            geom = [Geometry.Trigonal, Geometry.SqPlan, Geometry.Octa1, Geometry.Octa2];\n        else if (atblk == 2) {\n            geom.push(Geometry.Trigonal);\n            if (el == 'C' && allSingle) {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n            }\n            else if (el == 'C' && !allSingle) {\n            }\n            else if (elrow <= 3) {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n            }\n            else {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n                geom.push(Geometry.Octa1);\n                geom.push(Geometry.Octa2);\n            }\n        }\n        else {\n            geom.push(Geometry.Octa1);\n            geom.push(Geometry.Octa2);\n        }\n        for (let n = geom.length - 1; n >= 0; n--) {\n            if (!SketchUtil.matchAngleGeometry(geom[n], ang))\n                geom.splice(n, 1);\n        }\n        return geom;\n    }\n    static mapAngleSubstituent(geom, ang) {\n        let gtheta = SketchUtil.GEOM_ANGLES[geom];\n        const asz = ang.length, gsz = gtheta.length;\n        if (asz >= gsz)\n            return null;\n        if (asz == 0)\n            return gtheta.slice(0);\n        let vac = [];\n        for (let n = 0; n < asz; n++)\n            for (let k = 0; k < gsz; k++)\n                for (let s = 1; s >= -1; s -= 2) {\n                    let gang = [];\n                    for (let i = 0; i < gsz; i++)\n                        gang.push(angleNorm(ang[n] + s * (gtheta[i] - gtheta[k])));\n                    let mask = Vec.booleanArray(false, gsz);\n                    let mcount = 0;\n                    for (let i = 0; i < gsz; i++)\n                        if (!mask[i])\n                            for (let j = 0; j < asz; j++)\n                                if (Math.abs(angleDiff(gang[i], ang[j])) < 3 * DEGRAD) {\n                                    mask[i] = true;\n                                    mcount++;\n                                    break;\n                                }\n                    if (mcount != asz)\n                        continue;\n                    for (let i = 0; i < gsz; i++)\n                        if (!mask[i])\n                            vac.push(gang[i]);\n                }\n        if (vac.length == 0)\n            return null;\n        vac = GeomUtil.sortAngles(vac);\n        for (let n = 0; n < vac.length - 1; n++) {\n            let th1 = vac[n], th2 = vac[n + 1], dth = angleDiff(th2, th1);\n            if (Math.abs(dth) < 5 * DEGRAD) {\n                vac[n] = th1 + 0.5 * dth;\n                vac.splice(n + 1, 1);\n                n--;\n            }\n        }\n        return vac;\n    }\n    static refitAtomGeometry(mol, atom, geom) {\n        let gtheta = SketchUtil.GEOM_ANGLES[geom];\n        let gsz = gtheta.length;\n        let adj = mol.atomAdjList(atom);\n        let asz = adj.length;\n        if (asz <= 1 || asz > gsz)\n            return null;\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        let inRing = Vec.booleanArray(false, asz);\n        let allInRing = true;\n        for (let n = 0; n < asz; n++) {\n            inRing[n] = mol.bondInRing(mol.findBond(atom, adj[n]));\n            if (!inRing[n])\n                allInRing = false;\n        }\n        if (allInRing)\n            return null;\n        let bestAng = null;\n        let bestScore = 0;\n        let ww = MolUtil.calculateWalkWeight(mol, atom);\n        for (let i = 0; i < gsz; i++)\n            for (let j = 0; j < asz; j++)\n                for (let s = 1; s >= -1; s -= 2) {\n                    let newAng = Vec.numberArray(0, asz);\n                    let mask = Vec.booleanArray(false, gsz);\n                    for (let n1 = 0; n1 < asz; n1++) {\n                        let best = -1;\n                        let bdiff = 0;\n                        for (let n2 = 0; n2 < gsz; n2++)\n                            if (!mask[n2]) {\n                                let th = angleNorm(gtheta[n2] * s - gtheta[i] + ang[j]);\n                                let diff = Math.abs(angleDiff(th, ang[n1]));\n                                if (best < 0 || diff < bdiff) {\n                                    best = n2;\n                                    bdiff = diff;\n                                    newAng[n1] = th;\n                                }\n                            }\n                        mask[best] = true;\n                    }\n                    let ringClash = false;\n                    for (let n = 0; n < asz; n++)\n                        if (inRing[n] && Math.abs(angleDiff(newAng[n], ang[n])) > 2 * DEGRAD) {\n                            ringClash = true;\n                            break;\n                        }\n                    if (ringClash)\n                        continue;\n                    let score = 0;\n                    for (let n = 0; n < asz; n++)\n                        score += ww[adj[n] - 1] * Math.abs(angleDiff(newAng[n], ang[n]));\n                    if (bestAng == null || score < bestScore) {\n                        bestAng = newAng;\n                        bestScore = score;\n                    }\n                }\n        if (bestAng == null)\n            return null;\n        let same = true;\n        for (let n = 0; n < asz; n++)\n            if (Math.abs(angleDiff(bestAng[n], ang[n])) > 2 * DEGRAD) {\n                same = false;\n                break;\n            }\n        if (same)\n            return null;\n        mol = mol.clone();\n        for (let n = 0; n < asz; n++)\n            if (!inRing[n])\n                CoordUtil.rotateBond(mol, atom, adj[n], bestAng[n] - ang[n]);\n        return mol;\n    }\n    static switchAtomGeometry(mol, src, dst, geoms) {\n        let bestAtom = 0;\n        let bestAng = 0, bestX = 0, bestY = 0;\n        let adj = mol.atomAdjList(src);\n        let ang = CoordUtil.atomBondAngles(mol, src, adj), theta = Vec.numberArray(0, ang.length - 1);\n        let cx = mol.atomX(src), cy = mol.atomY(src);\n        for (let i = 0; i < dst.length; i++) {\n            let a = adj.indexOf(dst[i]);\n            let curth = ang[a];\n            for (let n = 0, p = 0; n < adj.length; n++)\n                if (n != a)\n                    theta[p++] = ang[n];\n            let r = norm_xy(mol.atomX(dst[i]) - cx, mol.atomY(dst[i]) - cy);\n            for (let j = 0; j < geoms.length; j++) {\n                if (adj.length >= SketchUtil.GEOM_ANGLES[geoms[j]].length)\n                    continue;\n                let newAng = SketchUtil.mapAngleSubstituent(geoms[j], theta);\n                if (newAng != null)\n                    for (let n = 0; n < newAng.length; n++) {\n                        let dth = angleDiff(newAng[n], curth);\n                        if (Math.abs(dth) < 3 * DEGRAD)\n                            continue;\n                        if (dth < 0)\n                            dth += TWOPI;\n                        if (bestAtom == 0 || dth < bestAng - 2 * DEGRAD || (dth < bestAng + 2 * DEGRAD && dst[i] < bestAtom)) {\n                            let x = cx + r * Math.cos(newAng[n]);\n                            let y = cy + r * Math.sin(newAng[n]);\n                            if (CoordUtil.atomAtPoint(mol, x, y) != 0)\n                                continue;\n                            bestAtom = dst[i];\n                            bestAng = dth;\n                            bestX = x;\n                            bestY = y;\n                        }\n                    }\n                break;\n            }\n        }\n        if (bestAtom == 0)\n            return null;\n        mol = mol.clone();\n        mol.setAtomPos(bestAtom, bestX, bestY);\n        return mol;\n    }\n    static pickAtomsToConnect(mol, aidx) {\n        if (aidx.length < 2)\n            return null;\n        if (aidx.length == 2) {\n            if (mol.findBond(aidx[0], aidx[1]) > 0)\n                return null;\n            return aidx;\n        }\n        const AUTO_DSQ = sqr(Molecule.IDEALBOND + 0.1);\n        let bestDSQ = Number.MAX_VALUE;\n        let bestA1 = 0, bestA2 = 0;\n        let conn = [];\n        for (let i = 0; i < aidx.length - 1; i++)\n            for (let j = i + 1; j < aidx.length; j++) {\n                if (mol.findBond(aidx[i], aidx[j]) > 0)\n                    continue;\n                let dsq = norm2_xy(mol.atomX(aidx[i]) - mol.atomX(aidx[j]), mol.atomY(aidx[i]) - mol.atomY(aidx[j]));\n                if (dsq < AUTO_DSQ) {\n                    conn.push(aidx[i]);\n                    conn.push(aidx[j]);\n                }\n                else if (dsq < bestDSQ) {\n                    bestDSQ = dsq;\n                    bestA1 = aidx[i];\n                    bestA2 = aidx[j];\n                }\n            }\n        if (conn.length == 0 && bestA1 != 0) {\n            conn.push(bestA1);\n            conn.push(bestA2);\n        }\n        return conn.length == 0 ? null : conn;\n    }\n    static pickNewAtomDirection(mol, atom, theta) {\n        if (theta.length == 1)\n            return theta[0];\n        let bestTheta = theta[0], bestScore = Number.MAX_VALUE;\n        for (let n = 0; n < theta.length; n++) {\n            let px = mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(theta[n]);\n            let py = mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(theta[n]);\n            let score = CoordUtil.congestionPoint(mol, px, py);\n            if (score > bestScore)\n                continue;\n            if (CoordUtil.overlapsAtom(mol, px, py, 0.2))\n                score += 1E5;\n            if (score < bestScore) {\n                bestTheta = theta[n];\n                bestScore = score;\n            }\n        }\n        return bestTheta;\n    }\n    static joinOverlappingAtoms(mol, mask) {\n        mol = mol.clone();\n        mask = mask.slice(0);\n        const na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        let groups = [];\n        let groupX = [], groupY = [];\n        for (let i = 0; i < na - 1; i++)\n            if (mask[i]) {\n                let g = [i + 1];\n                let x = mx[i], y = my[i];\n                for (let j = i + 1; j < na; j++)\n                    if (mask[j]) {\n                        if (norm2_xy(mx[j] - mx[i], my[j] - my[i]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                            continue;\n                        g.push(j + 1);\n                        x += mx[j];\n                        y += my[j];\n                        let adjb = mol.atomAdjBonds(j + 1);\n                        for (let n = 0; n < adjb.length; n++) {\n                            if (mol.bondFrom(adjb[n]) == j + 1)\n                                mol.setBondFrom(adjb[n], i + 1);\n                            else if (mol.bondTo(adjb[n]) == j + 1)\n                                mol.setBondTo(adjb[n], i + 1);\n                        }\n                    }\n                if (g.length == 1)\n                    continue;\n                groups.push(g);\n                groupX.push(x / g.length);\n                groupY.push(y / g.length);\n            }\n        if (groups.length == 0)\n            return null;\n        let keepmask = Vec.booleanArray(true, na);\n        for (let n = 0; n < groups.length; n++) {\n            let g = groups[n];\n            mol.setAtomPos(g[0], groupX[n], groupY[n]);\n            for (let i = 1; i < g.length; i++)\n                keepmask[g[i] - 1] = false;\n        }\n        mol = MolUtil.subgraphMask(mol, keepmask);\n        MolUtil.removeDuplicateBonds(mol);\n        return mol;\n    }\n    static moveToEdge(mol, mask, dx, dy) {\n        let gotS = false, gotN = false;\n        let sx1 = 0, sy1 = 0, sx2 = 0, sy2 = 0;\n        let nx1 = 0, ny1 = 0, nx2 = 0, ny2 = 0;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n), y = mol.atomY(n);\n            if (mask[n - 1]) {\n                if (!gotS || x < sx1)\n                    sx1 = x;\n                if (!gotS || y < sy1)\n                    sy1 = y;\n                if (!gotS || x > sx2)\n                    sx2 = x;\n                if (!gotS || y > sy2)\n                    sy2 = y;\n                gotS = true;\n            }\n            else {\n                if (!gotN || x < nx1)\n                    nx1 = x;\n                if (!gotN || y < ny1)\n                    ny1 = y;\n                if (!gotN || x > nx2)\n                    nx2 = x;\n                if (!gotN || y > ny2)\n                    ny2 = y;\n                gotN = true;\n            }\n        }\n        const SEPARATE = 1.0, SEPTEST = 0.9;\n        if ((dx < 0 && dy == 0 && sx2 <= nx1 - SEPTEST) ||\n            (dx > 0 && dy == 0 && sx1 >= nx2 + SEPTEST) ||\n            (dx == 0 && dy < 0 && sy2 <= ny1 - SEPTEST) ||\n            (dx == 0 && dy > 0 && sy1 >= ny2 + SEPTEST)) {\n            return null;\n        }\n        mol = mol.clone();\n        let ox = 0, oy = 0;\n        if (dx < 0)\n            ox = nx1 - sx2 - SEPARATE;\n        if (dx > 0)\n            ox = nx2 - sx1 + SEPARATE;\n        if (dy < 0)\n            oy = ny1 - sy2 - SEPARATE;\n        if (dy > 0)\n            oy = ny2 - sy1 + SEPARATE;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1])\n                mol.setAtomPos(n, mol.atomX(n) + ox, mol.atomY(n) + oy);\n        return mol;\n    }\n    static placeAdditionalHydrogens(mol, atom, numH) {\n        let base = mol.numAtoms;\n        const x0 = mol.atomX(atom), y0 = mol.atomY(atom);\n        let adj = mol.atomAdjList(atom);\n        if (adj.length == 2 && numH == 2) {\n            const th1 = Math.atan2(mol.atomY(adj[0]) - y0, mol.atomX(adj[0]) - x0);\n            const th2 = Math.atan2(mol.atomY(adj[1]) - y0, mol.atomX(adj[1]) - x0);\n            if (Math.abs(angleDiff(th1, th2)) < 170 * DEGRAD) {\n                let theta = 0.5 * (th1 + th2) + Math.PI;\n                let th3 = theta - 30 * DEGRAD, th4 = theta + 30 * DEGRAD;\n                mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th3), y0 + Molecule.IDEALBOND * Math.sin(th3));\n                mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th4), y0 + Molecule.IDEALBOND * Math.sin(th4));\n                mol.addBond(atom, base + 1, 1);\n                mol.addBond(atom, base + 2, 1);\n                return;\n            }\n        }\n        if (adj.length == 1 && numH == 3) {\n            let th1 = Math.atan2(mol.atomY(adj[0]) - y0, mol.atomX(adj[0]) - x0);\n            let th2 = th1 + 90 * DEGRAD, th3 = th1 + 180 * DEGRAD, th4 = th1 + 270 * DEGRAD;\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th2), y0 + Molecule.IDEALBOND * Math.sin(th2));\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th3), y0 + Molecule.IDEALBOND * Math.sin(th3));\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th4), y0 + Molecule.IDEALBOND * Math.sin(th4));\n            mol.addBond(atom, base + 1, 1);\n            mol.addBond(atom, base + 2, 1);\n            mol.addBond(atom, base + 3, 1);\n            return;\n        }\n        let theta = SketchUtil.pickNewAtomDirection(mol, atom, SketchUtil.primeDirections(mol, atom));\n        mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(theta), y0 + Molecule.IDEALBOND * Math.sin(theta));\n        mol.addBond(atom, base + 1, 1);\n        if (numH > 1)\n            SketchUtil.placeAdditionalHydrogens(mol, atom, numH - 1);\n    }\n    static allViableDirections(mol, atom, order) {\n        if (mol.atomAdjCount(atom) == 0) {\n            let angles = [];\n            for (let n = 0; n < 12; n++)\n                angles.push(30 * DEGRAD);\n            return angles;\n        }\n        let adj = mol.atomAdjList(atom);\n        let angles = SketchUtil.exitVectors(mol, atom);\n        let geom = SketchUtil.guessAtomGeometry(mol, atom, order);\n        if (adj.length == 1 && geom.indexOf(Geometry.Linear) < 0)\n            geom.push(Geometry.Linear);\n        let bndang = CoordUtil.atomBondAngles(mol, atom, adj);\n        for (let g of geom) {\n            let map = SketchUtil.mapAngleSubstituent(g, bndang);\n            if (map != null)\n                for (let th of map)\n                    angles.push(th);\n        }\n        return GeomUtil.uniqueAngles(angles, 2 * DEGRAD);\n    }\n    static proposeNewRing(mol, rsz, x, y, dx, dy, snap) {\n        let theta = dy == 0 && dx == 0 ? 0.5 * Math.PI : Math.atan2(dy, dx);\n        if (snap) {\n            const chunk = 30 * DEGRAD;\n            theta = Math.round(theta / chunk) * chunk;\n        }\n        return SketchUtil.positionSimpleRing(mol, rsz, x, y, theta);\n    }\n    static proposeAtomRing(mol, rsz, atom, dx, dy) {\n        let thsnap = [];\n        let cx = mol.atomX(atom), cy = mol.atomY(atom);\n        if (mol.atomAdjCount(atom) == 0) {\n            for (let n = 0; n < 12; n++)\n                thsnap.push(TWOPI * n / 12);\n        }\n        else if (mol.atomAdjCount(atom) == 1) {\n            let nbr = mol.atomAdjList(atom)[0];\n            thsnap.push(angleNorm(Math.atan2(mol.atomY(nbr) - cy, mol.atomX(nbr) - cx) + Math.PI));\n        }\n        else {\n            let angs = [];\n            for (let nbr of mol.atomAdjList(atom))\n                angs.push(Math.atan2(mol.atomY(nbr) - cy, mol.atomX(nbr) - cx));\n            angs = sortAngles(angs);\n            for (let n = 0; n < angs.length; n++) {\n                let th1 = angs[n], th2 = angs[n < angs.length - 1 ? n + 1 : 0];\n                thsnap.push(th1 + 0.5 * angleDiffPos(th2, th1));\n            }\n        }\n        let theta = Math.atan2(dy, dx);\n        let bestTheta = 0, bestDelta = Number.MAX_VALUE;\n        for (let th of thsnap) {\n            let delta = Math.abs(angleDiff(th, theta));\n            if (delta < bestDelta) {\n                bestTheta = th;\n                bestDelta = delta;\n            }\n        }\n        return SketchUtil.positionSimpleRing(mol, rsz, mol.atomX(atom), mol.atomY(atom), bestTheta);\n    }\n    static proposeBondRing(mol, rsz, bond, dx, dy) {\n        let bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        let bx = mol.atomX(bto) - mol.atomX(bfr), by = mol.atomY(bto) - mol.atomY(bfr);\n        let sign = dx * by - dy * bx;\n        let delta = sign > 0 ? -90 * DEGRAD : 90 * DEGRAD;\n        let theta = Math.atan2(by, bx) + delta;\n        let dth = TWOPI / rsz;\n        let rad = Molecule.IDEALBOND / (2.0 * Math.sin(0.5 * dth)), brad = rad * Math.cos(0.5 * dth);\n        let cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto)) + brad * Math.cos(theta);\n        let cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto)) + brad * Math.sin(theta);\n        let rx = [], ry = [];\n        for (let n = 0; n < rsz; n++) {\n            let th = theta - Math.PI + (n - 0.5) * dth;\n            rx.push(cx + Math.cos(th) * rad);\n            ry.push(cy + Math.sin(th) * rad);\n        }\n        let [i1, i2] = sign < 0 ? [bfr, bto] : [bto, bfr];\n        rx[0] = mol.atomX(i1);\n        ry[0] = mol.atomY(i1);\n        rx[1] = mol.atomX(i2);\n        ry[1] = mol.atomY(i2);\n        return [rx, ry];\n    }\n    static positionSimpleRing(mol, rsz, x, y, theta) {\n        let dth = TWOPI / rsz;\n        let rad = Molecule.IDEALBOND / (2 * Math.sin(0.5 * dth));\n        let cx = x + rad * Math.cos(theta), cy = y + rad * Math.sin(theta);\n        let rx = [], ry = [];\n        for (let n = 0; n < rsz; n++) {\n            let th = theta - Math.PI + n * dth;\n            rx.push(cx + Math.cos(th) * rad);\n            ry.push(cy + Math.sin(th) * rad);\n        }\n        return [rx, ry];\n    }\n    static guidelineSprouts(mol, atom) {\n        let sprouts = [];\n        let angs = [], ords = [];\n        for (let n = 0; n < 3; n++) {\n            angs.push(SketchUtil.allViableDirections(mol, atom, n + 1));\n            ords.push([n + 1]);\n            for (let i = 0; i < n; i++)\n                if (angs[i] != null && Vec.equals(angs[n], angs[i])) {\n                    angs[n] = null;\n                    ords[i].push(n + 1);\n                }\n        }\n        const cx = mol.atomX(atom), cy = mol.atomY(atom);\n        for (let n = 0; n < 3; n++)\n            if (angs[n] != null) {\n                let sprout = {\n                    atom: atom,\n                    orders: ords[n],\n                    x: [],\n                    y: [],\n                };\n                for (let i = 0; i < angs[n].length; i++) {\n                    sprout.x[i] = cx + Math.cos(angs[n][i]) * Molecule.IDEALBOND;\n                    sprout.y[i] = cy + Math.sin(angs[n][i]) * Molecule.IDEALBOND;\n                }\n                sprouts.push(sprout);\n            }\n        return sprouts;\n    }\n}\nSketchUtil.GEOM_ANGLES = [\n    [0, 180 * DEGRAD],\n    [0, 120 * DEGRAD],\n    [0, 120 * DEGRAD, 240 * DEGRAD],\n    [0, 90 * DEGRAD, 150 * DEGRAD, 240 * DEGRAD],\n    [0, 120 * DEGRAD, 180 * DEGRAD, 240 * DEGRAD],\n    [0, 90 * DEGRAD, 180 * DEGRAD, 270 * DEGRAD],\n    [0, 90 * DEGRAD, 150 * DEGRAD, 210 * DEGRAD, 270 * DEGRAD],\n    [0, 60 * DEGRAD, 90 * DEGRAD, 180 * DEGRAD, 210 * DEGRAD],\n    [0, 60 * DEGRAD, 120 * DEGRAD, 180 * DEGRAD, 240 * DEGRAD, 300 * DEGRAD],\n    [0, 45 * DEGRAD, 90 * DEGRAD, 180 * DEGRAD, 225 * DEGRAD, 270 * DEGRAD]\n];\nexport { SketchUtil };\n//# sourceMappingURL=SketchUtil.js.map","import { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nexport var QueryTypeAtom;\n(function (QueryTypeAtom) {\n    QueryTypeAtom[\"Charges\"] = \"qC:\";\n    QueryTypeAtom[\"Aromatic\"] = \"qA:\";\n    QueryTypeAtom[\"Unsaturated\"] = \"qU:\";\n    QueryTypeAtom[\"Elements\"] = \"qE:\";\n    QueryTypeAtom[\"ElementsNot\"] = \"qE!\";\n    QueryTypeAtom[\"RingSizes\"] = \"qR:\";\n    QueryTypeAtom[\"RingSizesNot\"] = \"qR!\";\n    QueryTypeAtom[\"RingBlock\"] = \"qB:\";\n    QueryTypeAtom[\"NumRings\"] = \"qN:\";\n    QueryTypeAtom[\"RingBonds\"] = \"qG:\";\n    QueryTypeAtom[\"Adjacency\"] = \"qJ:\";\n    QueryTypeAtom[\"BondSums\"] = \"qO:\";\n    QueryTypeAtom[\"Valences\"] = \"qV:\";\n    QueryTypeAtom[\"Hydrogens\"] = \"qH:\";\n    QueryTypeAtom[\"Isotopes\"] = \"qI:\";\n    QueryTypeAtom[\"SubFrags\"] = \"qX:\";\n    QueryTypeAtom[\"SubFragsNot\"] = \"qX!\";\n})(QueryTypeAtom || (QueryTypeAtom = {}));\nexport var QueryTypeBond;\n(function (QueryTypeBond) {\n    QueryTypeBond[\"RingSizes\"] = \"qR:\";\n    QueryTypeBond[\"RingSizesNot\"] = \"qR!\";\n    QueryTypeBond[\"RingBlock\"] = \"qB:\";\n    QueryTypeBond[\"NumRings\"] = \"qN:\";\n    QueryTypeBond[\"Orders\"] = \"qO:\";\n})(QueryTypeBond || (QueryTypeBond = {}));\nexport class QueryUtil {\n    static hasAnyQueryAtom(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith('q'))\n                return true;\n        return false;\n    }\n    static hasAnyQueryBond(mol, bond) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith('q'))\n                return true;\n        return false;\n    }\n    static hasQueryAtom(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return true;\n        return false;\n    }\n    static hasQueryBond(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return true;\n        return false;\n    }\n    static deleteQueryAtom(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        let modified = false;\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type)) {\n                extra.splice(n, 1);\n                modified = true;\n            }\n        if (modified)\n            mol.setAtomExtra(atom, extra);\n    }\n    static deleteQueryBond(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        let modified = false;\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type)) {\n                extra.splice(n, 1);\n                modified = true;\n            }\n        if (modified)\n            mol.setBondExtra(bond, extra);\n    }\n    static deleteQueryAtomAll(mol, atom) {\n        mol.setAtomExtra(atom, mol.atomExtra(atom).filter((xtra) => !xtra.startsWith('q')));\n    }\n    static deleteQueryBondAll(mol, bond) {\n        mol.setBondExtra(bond, mol.bondExtra(bond).filter((xtra) => !xtra.startsWith('q')));\n    }\n    static queryAtomString(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return extra[n].substring(type.length);\n        return null;\n    }\n    static queryAtomStringList(mol, atom, type) {\n        let extra = mol.atomExtra(atom), list = null;\n        if (extra != null)\n            for (let str of extra)\n                if (str.startsWith(type))\n                    list = Vec.append(list, str.substring(type.length));\n        return list;\n    }\n    static queryBondString(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return extra[n].substring(type.length);\n        return null;\n    }\n    static setQueryAtom(mol, atom, type, str) {\n        if (!str) {\n            this.deleteQueryAtom(mol, atom, type);\n            return;\n        }\n        let value = type + str;\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--) {\n            if (extra[n].startsWith(type)) {\n                if (value != null) {\n                    extra[n] = value;\n                    value = null;\n                }\n                else\n                    extra.splice(n, 1);\n            }\n        }\n        if (value != null)\n            extra.push(value);\n        mol.setAtomExtra(atom, extra);\n    }\n    static setQueryAtomList(mol, atom, type, list) {\n        if (Vec.isBlank(list)) {\n            this.deleteQueryAtom(mol, atom, type);\n            return;\n        }\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                extra.splice(n, 1);\n        for (let str of list)\n            extra.push(type + str);\n        mol.setAtomExtra(atom, extra);\n    }\n    static setQueryBond(mol, bond, type, str) {\n        if (!str) {\n            this.deleteQueryBond(mol, bond, type);\n            return;\n        }\n        let value = type + str;\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--) {\n            if (extra[n].startsWith(type)) {\n                if (value != null) {\n                    extra[n] = value;\n                    value = null;\n                }\n                else\n                    extra.splice(n, 1);\n            }\n        }\n        if (value != null)\n            extra.push(value);\n        mol.setBondExtra(bond, extra);\n    }\n    static queryAtomCharges(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Charges)); }\n    static queryAtomAromatic(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.Aromatic)); }\n    static queryAtomUnsaturated(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.Unsaturated)); }\n    static queryAtomElements(mol, atom) { return this.parseStrings(this.queryAtomString(mol, atom, QueryTypeAtom.Elements)); }\n    static queryAtomElementsNot(mol, atom) { return this.parseStrings(this.queryAtomString(mol, atom, QueryTypeAtom.ElementsNot)); }\n    static queryAtomRingSizes(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingSizes)); }\n    static queryAtomRingSizesNot(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingSizesNot)); }\n    static queryAtomRingBlock(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.RingBlock)); }\n    static queryAtomNumRings(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.NumRings)); }\n    static queryAtomRingBonds(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingBonds)); }\n    static queryAtomAdjacency(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Adjacency)); }\n    static queryAtomBondSums(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.BondSums)); }\n    static queryAtomValences(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Valences)); }\n    static queryAtomHydrogens(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Hydrogens)); }\n    static queryAtomIsotope(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Isotopes)); }\n    static queryAtomSubFrags(mol, atom) { return this.parseMolecules(this.queryAtomStringList(mol, atom, QueryTypeAtom.SubFrags)); }\n    static queryAtomSubFragsNot(mol, atom) { return this.parseMolecules(this.queryAtomStringList(mol, atom, QueryTypeAtom.SubFragsNot)); }\n    static queryBondRingSizes(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.RingSizes)); }\n    static queryBondRingSizesNot(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.RingSizesNot)); }\n    static queryBondRingBlock(mol, bond) { return this.parseBoolean(this.queryBondString(mol, bond, QueryTypeBond.RingBlock)); }\n    static queryBondNumRings(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.NumRings)); }\n    static queryBondOrders(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.Orders)); }\n    static setQueryAtomCharges(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Charges, this.formatIntegers(value)); }\n    static setQueryAtomAromatic(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Aromatic, this.formatBoolean(value)); }\n    static setQueryAtomUnsaturated(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Unsaturated, this.formatBoolean(value)); }\n    static setQueryAtomElements(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Elements, this.formatStrings(value)); }\n    static setQueryAtomElementsNot(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.ElementsNot, this.formatStrings(value)); }\n    static setQueryAtomRingSizes(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingSizes, this.formatIntegers(value)); }\n    static setQueryAtomRingSizesNot(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingSizesNot, this.formatIntegers(value)); }\n    static setQueryAtomRingBlock(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingBlock, this.formatBoolean(value)); }\n    static setQueryAtomNumRings(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.NumRings, this.formatIntegers(value)); }\n    static setQueryAtomRingBonds(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingBonds, this.formatIntegers(value)); }\n    static setQueryAtomAdjacency(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Adjacency, this.formatIntegers(value)); }\n    static setQueryAtomBondSums(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.BondSums, this.formatIntegers(value)); }\n    static setQueryAtomValences(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Valences, this.formatIntegers(value)); }\n    static setQueryAtomHydrogens(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Hydrogens, this.formatIntegers(value)); }\n    static setQueryAtomIsotope(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Isotopes, this.formatIntegers(value)); }\n    static setQueryAtomSubFrags(mol, atom, value) { this.setQueryAtomList(mol, atom, QueryTypeAtom.SubFrags, this.formatMolecules(value)); }\n    static setQueryAtomSubFragsNot(mol, atom, value) { this.setQueryAtomList(mol, atom, QueryTypeAtom.SubFragsNot, this.formatMolecules(value)); }\n    static setQueryBondRingSizes(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingSizes, this.formatIntegers(value)); }\n    static setQueryBondRingSizesNot(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingSizesNot, this.formatIntegers(value)); }\n    static setQueryBondRingBlock(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingBlock, this.formatBoolean(value)); }\n    static setQueryBondNumRings(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.NumRings, this.formatIntegers(value)); }\n    static setQueryBondOrders(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.Orders, this.formatIntegers(value)); }\n    static parseIntegers(str) {\n        if (!str)\n            return null;\n        let strlist = str.split(',');\n        let intlist = new Array(strlist.length);\n        for (let n = 0; n < strlist.length; n++)\n            intlist[n] = parseInt(strlist[n]);\n        return intlist;\n    }\n    static parseStrings(str) {\n        if (!str)\n            return null;\n        return str.split(',');\n    }\n    static parseBoolean(str) {\n        return !str ? null : str == 'yes';\n    }\n    static parseMolecules(list) {\n        if (!list)\n            return null;\n        let mols = [];\n        for (let molstr of list) {\n            let mol = Molecule.fromString(molstr);\n            if (MolUtil.notBlank(mol))\n                mols.push(mol);\n        }\n        return mols;\n    }\n    static formatIntegers(list) {\n        if (Vec.isBlank(list))\n            return null;\n        let str = '';\n        for (let n = 0; n < list.length; n++) {\n            if (n > 0)\n                str += ',';\n            str += list[n];\n        }\n        return str;\n    }\n    static formatStrings(list) {\n        if (Vec.isBlank(list))\n            return null;\n        let str = '';\n        for (let n = 0; n < list.length; n++) {\n            if (n > 0)\n                str += ',';\n            str += list[n];\n        }\n        return str;\n    }\n    static formatBoolean(value) {\n        return value ? 'yes' : 'no';\n    }\n    static formatMolecules(mols) {\n        if (Vec.isBlank(mols))\n            return null;\n        let list = [];\n        for (let mol of mols)\n            if (MolUtil.notBlank(mol))\n                list.push(mol.toString());\n        return list;\n    }\n}\n//# sourceMappingURL=QueryUtil.js.map","import { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { CoordUtil } from './CoordUtil';\nimport { Graph } from './Graph';\nimport { Molecule } from './Molecule';\nimport { PolymerBlock } from './PolymerBlock';\nimport { SketchUtil } from './SketchUtil';\nclass MolUtil {\n    static isBlank(mol) {\n        if (mol == null)\n            return true;\n        return mol.numAtoms == 0;\n    }\n    static notBlank(mol) {\n        if (mol == null)\n            return false;\n        return mol.numAtoms > 0;\n    }\n    static orBlank(mol) { return mol == null ? new Molecule() : mol; }\n    static hasAnyAbbrev(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n))\n                return true;\n        return false;\n    }\n    static hasAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra == null ? 0 : extra.length); n++)\n            if (extra[n].startsWith('a'))\n                return true;\n        return false;\n    }\n    static getAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                return Molecule.fromString(extra[n].substring(1));\n            }\n        return null;\n    }\n    static setAbbrev(mol, atom, frag) {\n        let attidx = 0;\n        for (let n = 1; n <= frag.numAtoms; n++)\n            if (frag.atomElement(n) == MolUtil.ABBREV_ATTACHMENT) {\n                attidx = n;\n                break;\n            }\n        if (attidx == 0)\n            throw 'No attachment points indicated.';\n        if (attidx >= 2) {\n            frag = frag.clone();\n            frag.swapAtoms(attidx, 1);\n        }\n        let adj = mol.atomAdjList(atom);\n        if (adj.length > 1)\n            throw 'Setting abbreviation for non-terminal atom.';\n        if (frag.atomAdjCount(1) == 1 && mol.atomAdjCount(atom) > 0) {\n            let b1 = mol.findBond(atom, mol.atomAdjList(atom)[0]);\n            let b2 = frag.findBond(1, frag.atomAdjList(1)[0]);\n            mol.setBondOrder(b1, frag.bondOrder(b2));\n        }\n        let extra = mol.atomExtra(atom);\n        let idx = -1;\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                idx = n;\n                break;\n            }\n        if (idx < 0)\n            idx = extra.push(null) - 1;\n        extra[idx] = 'a' + frag.toString();\n        mol.setAtomExtra(atom, extra);\n    }\n    static validateAbbrevs(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                if (mol.atomAdjCount(n) > 1)\n                    MolUtil.clearAbbrev(mol, n);\n                if (mol.atomCharge(n) != 0)\n                    mol.setAtomCharge(n, 0);\n                if (mol.atomUnpaired(n) != 0)\n                    mol.setAtomUnpaired(n, 0);\n                if (mol.atomIsotope(n) != 0)\n                    mol.setAtomIsotope(n, Molecule.ISOTOPE_NATURAL);\n                if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN)\n                    mol.setAtomHExplicit(n, Molecule.HEXPLICIT_UNKNOWN);\n            }\n    }\n    static convertToAbbrev(mol, srcmask, abbrevName) {\n        let molidx = this.convertToAbbrevIndex(mol, srcmask, abbrevName);\n        return molidx ? molidx[0] : null;\n    }\n    static convertToAbbrevIndex(mol, srcmask, abbrevName) {\n        let junction = 0;\n        let polymerExtra = null;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let b1 = mol.bondFrom(n), b2 = mol.bondTo(n), atom = 0;\n            if (srcmask[b1 - 1] && !srcmask[b2 - 1]) {\n                atom = b1;\n                polymerExtra = PolymerBlock.getPolymerExtensions(mol, b2);\n            }\n            else if (!srcmask[b1 - 1] && srcmask[b2 - 1]) {\n                atom = b2;\n                polymerExtra = PolymerBlock.getPolymerExtensions(mol, b1);\n            }\n            if (atom == 0)\n                continue;\n            if (junction > 0 && atom != junction)\n                return [null, null];\n            junction = atom;\n        }\n        if (junction == 0)\n            return [null, null];\n        let na = mol.numAtoms, molidx = 0, fragidx = 0;\n        let maskmol = Vec.booleanArray(false, na), maskfrag = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++) {\n            maskmol[n] = srcmask[n];\n            maskfrag[n] = !srcmask[n] || n + 1 == junction;\n            if (maskmol[n] && n + 1 <= junction)\n                molidx++;\n            if (maskfrag[n] && n + 1 <= junction)\n                fragidx++;\n        }\n        let bondType = Molecule.BONDTYPE_NORMAL, nadj = 0;\n        for (let a of mol.atomAdjList(junction))\n            if (!srcmask[a - 1]) {\n                if (nadj != 0) {\n                    bondType = Molecule.BONDTYPE_NORMAL;\n                    break;\n                }\n                let b = mol.findBond(junction, a);\n                if (mol.bondFrom(b) == junction)\n                    bondType = mol.bondType(b);\n                nadj++;\n            }\n        let frag = MolUtil.subgraphMask(mol, maskfrag);\n        frag.setAtomElement(fragidx, MolUtil.ABBREV_ATTACHMENT);\n        frag.setAtomCharge(fragidx, 0);\n        frag.setAtomUnpaired(fragidx, 0);\n        frag.setAtomHExplicit(fragidx, Molecule.HEXPLICIT_UNKNOWN);\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomMapNum(n, 0);\n        frag.setAtomExtra(fragidx, []);\n        frag.setAtomTransient(fragidx, []);\n        let adj = frag.atomAdjList(fragidx);\n        let x = 0, y = 0, inv = 1.0 / adj.length;\n        let bondOrder = 1;\n        for (let n = 0; n < adj.length; n++) {\n            x += frag.atomX(adj[n]);\n            y += frag.atomY(adj[n]);\n            let b = frag.findBond(fragidx, adj[n]);\n            if (n == 0)\n                bondOrder = frag.bondOrder(b);\n            else if (bondOrder != frag.bondOrder(b))\n                bondOrder = 1;\n        }\n        x *= inv;\n        y *= inv;\n        if (fragidx > 1)\n            frag.swapAtoms(fragidx, 1);\n        let newmol = MolUtil.subgraphMask(mol, maskmol);\n        let newatom = newmol.addAtom(abbrevName, x, y);\n        newmol.addBond(molidx, newatom, bondOrder, bondType);\n        MolUtil.setAbbrev(newmol, newatom, frag);\n        if (polymerExtra != null)\n            newmol.setAtomExtra(newatom, Vec.concat(newmol.atomExtra(newatom), polymerExtra));\n        return [newmol, newatom];\n    }\n    static expandAbbrevs(mol, alignCoords) {\n        while (true) {\n            let anything = false;\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (MolUtil.hasAbbrev(mol, n)) {\n                    if (MolUtil.expandOneAbbrev(mol, n, alignCoords))\n                        anything = true;\n                    n--;\n                }\n            if (!anything)\n                break;\n        }\n    }\n    static expandedAbbrevs(mol) {\n        if (!this.hasAnyAbbrev(mol))\n            return mol;\n        mol = mol.clone();\n        this.expandAbbrevs(mol, true);\n        return mol;\n    }\n    static expandOneAbbrev(mol, atom, alignCoords) {\n        let frag = MolUtil.getAbbrev(mol, atom);\n        if (frag == null)\n            return null;\n        if (mol.atomAdjCount(atom) != 1 || frag.numAtoms == 0) {\n            MolUtil.clearAbbrev(mol, atom);\n            return null;\n        }\n        let m = mol.atomMapNum(atom);\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomMapNum(n, 0);\n        if (m > 0)\n            for (let n of frag.atomAdjList(1))\n                frag.setAtomMapNum(n, m);\n        return MolUtil.expandOneAbbrevFrag(mol, atom, frag, alignCoords);\n    }\n    static expandOneAbbrevFrag(mol, atom, frag, alignCoords) {\n        let polymerExtra = PolymerBlock.getPolymerExtensions(mol, atom);\n        let nbr = mol.atomAdjCount(atom) == 1 ? mol.atomAdjList(atom)[0] : 0;\n        let connBond = mol.findBond(atom, nbr), connType = Molecule.BONDTYPE_NORMAL;\n        if (connBond > 0) {\n            connType = mol.bondType(connBond);\n            if (mol.bondFrom(connBond) != nbr && (connType == Molecule.BONDTYPE_INCLINED || connType == Molecule.BONDTYPE_DECLINED))\n                connType = Molecule.BONDTYPE_NORMAL;\n        }\n        if (alignCoords) {\n            let vx1 = mol.atomX(atom) - mol.atomX(nbr), vy1 = mol.atomY(atom) - mol.atomY(nbr);\n            let adj = frag.atomAdjList(1);\n            let vx2 = 0, vy2 = 0, inv = 1.0 / adj.length;\n            for (let n = 0; n < adj.length; n++) {\n                vx2 += frag.atomX(adj[n]) - frag.atomX(1);\n                vy2 += frag.atomY(adj[n]) - frag.atomY(1);\n            }\n            vx2 *= inv;\n            vy2 *= inv;\n            let th1 = Math.atan2(vy1, vx1), th2 = Math.atan2(vy2, vx2);\n            CoordUtil.rotateMolecule(frag, th1 - th2);\n            CoordUtil.translateMolecule(frag, mol.atomX(nbr) - frag.atomX(1), mol.atomY(nbr) - frag.atomY(1));\n        }\n        if (polymerExtra != null) {\n            for (let n = 1; n <= frag.numAtoms; n++) {\n                let extra = frag.atomExtra(n);\n                for (let i = extra.length - 1; i >= 0; i--)\n                    if (polymerExtra.indexOf(extra[i]) >= 0)\n                        extra.splice(i, 1);\n                frag.setAtomExtra(n, Vec.concat(extra, polymerExtra));\n            }\n        }\n        let join = mol.numAtoms + 1;\n        mol.append(frag);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondFrom(n) == join) {\n                mol.setBondFrom(n, nbr);\n                mol.setBondType(n, connType);\n            }\n            else if (mol.bondTo(n) == join) {\n                mol.setBondFromTo(n, nbr, mol.bondFrom(n));\n                mol.setBondType(n, connType);\n            }\n        }\n        let mask = Vec.booleanArray(false, mol.numAtoms);\n        for (let n = mask.length - frag.numAtoms; n < mask.length; n++)\n            mask[n] = true;\n        mol.deleteAtomAndBonds(join);\n        mol.deleteAtomAndBonds(atom);\n        mask.splice(join - 1, 1);\n        mask.splice(atom - 1, 1);\n        return mask;\n    }\n    static clearAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                extra.splice(n, 1);\n                mol.setAtomExtra(atom, extra);\n                mol.setAtomElement(atom, 'C');\n                return;\n            }\n    }\n    static setAtomElement(mol, atom, el) {\n        if (mol.atomElement(atom) == el)\n            return;\n        this.clearAbbrev(mol, atom);\n        mol.setAtomElement(atom, el);\n    }\n    static addBond(mol, bfr, bto, order, type) {\n        if (type == null)\n            type = Molecule.BONDTYPE_NORMAL;\n        if (mol.atomAdjCount(bfr) >= 1)\n            this.clearAbbrev(mol, bfr);\n        if (mol.atomAdjCount(bto) >= 1)\n            this.clearAbbrev(mol, bto);\n        let b = mol.findBond(bfr, bto);\n        if (b > 0)\n            mol.deleteBond(b);\n        return mol.addBond(bfr, bto, order, type);\n    }\n    static subgraphMask(mol, mask) {\n        let invidx = [];\n        let sum = 0;\n        for (let n = 0; n < mol.numAtoms; n++) {\n            if (mask[n])\n                invidx.push(++sum);\n            else\n                invidx.push(0);\n        }\n        if (sum == 0)\n            return new Molecule();\n        if (sum == mol.numAtoms)\n            return mol.clone();\n        let frag = new Molecule();\n        frag.keepTransient = true;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let num = frag.addAtom(mol.atomElement(n), mol.atomX(n), mol.atomY(n), mol.atomCharge(n), mol.atomUnpaired(n));\n                frag.setAtomIsotope(num, mol.atomIsotope(n));\n                frag.setAtomHExplicit(num, mol.atomHExplicit(n));\n                frag.setAtomMapNum(num, mol.atomMapNum(n));\n                frag.setAtomExtra(num, mol.atomExtra(n));\n                frag.setAtomTransient(num, mol.atomTransient(n));\n            }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = invidx[mol.bondFrom(n) - 1], bto = invidx[mol.bondTo(n) - 1];\n            if (bfr > 0 && bto > 0) {\n                let num = frag.addBond(bfr, bto, mol.bondOrder(n), mol.bondType(n));\n                frag.setBondExtra(num, mol.bondExtra(n));\n                frag.setBondTransient(num, mol.bondTransient(n));\n            }\n        }\n        frag.keepTransient = mol.keepTransient;\n        return frag;\n    }\n    static subgraphIndex(mol, idx) {\n        let invidx = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 0; n < invidx.length; n++)\n            invidx[n] = 0;\n        for (let n = 0; n < idx.length; n++)\n            invidx[idx[n] - 1] = n + 1;\n        let frag = new Molecule();\n        frag.keepTransient = true;\n        for (let n = 0; n < idx.length; n++) {\n            let num = frag.addAtom(mol.atomElement(idx[n]), mol.atomX(idx[n]), mol.atomY(idx[n]), mol.atomCharge(idx[n]), mol.atomUnpaired(idx[n]));\n            frag.setAtomIsotope(num, mol.atomIsotope(idx[n]));\n            frag.setAtomHExplicit(num, mol.atomHExplicit(idx[n]));\n            frag.setAtomMapNum(num, mol.atomMapNum(idx[n]));\n            frag.setAtomExtra(num, mol.atomExtra(idx[n]));\n            frag.setAtomTransient(num, mol.atomTransient(idx[n]));\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = invidx[mol.bondFrom(n) - 1], bto = invidx[mol.bondTo(n) - 1];\n            if (bfr > 0 && bto > 0) {\n                let num = frag.addBond(bfr, bto, mol.bondOrder(n), mol.bondType(n));\n                frag.setBondExtra(num, mol.bondExtra(n));\n                frag.setBondTransient(num, mol.bondTransient(n));\n            }\n        }\n        frag.keepTransient = mol.keepTransient;\n        return frag;\n    }\n    static subgraphWithAttachments(mol, mask) {\n        let xmask = mask.slice(0);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (mask[bfr] && !mask[bto])\n                xmask[bto] = true;\n            else if (mask[bto] && !mask[bfr])\n                xmask[bfr] = true;\n        }\n        let xmol = mol.clone();\n        for (let n = 1; n <= xmol.numAtoms; n++)\n            if (xmask[n - 1] && !mask[n - 1]) {\n                xmol.setAtomElement(n, 'X');\n                xmol.setAtomCharge(n, 0);\n                xmol.setAtomUnpaired(n, 0);\n                xmol.setAtomHExplicit(n, Molecule.HEXPLICIT_UNKNOWN);\n                xmol.setAtomExtra(n, []);\n            }\n        return MolUtil.subgraphMask(xmol, xmask);\n    }\n    static append(mol, frag) {\n        let boxm = mol.boundary(), boxf = frag.boundary();\n        let dx = boxm.maxX() + Molecule.IDEALBOND - boxf.minX();\n        let dy = 0.5 * (boxm.minY() + boxm.maxY() - boxf.minY() - boxf.maxY());\n        let top = mol.numAtoms;\n        mol.append(frag);\n        for (let n = top + 1; n <= mol.numAtoms; n++)\n            mol.setAtomPos(n, mol.atomX(n) + dx, mol.atomY(n) + dy);\n    }\n    static deleteAtoms(mol, idx) {\n        let mask = Vec.booleanArray(true, mol.numAtoms);\n        for (let n = 0; n < idx.length; n++)\n            mask[idx[n] - 1] = false;\n        return MolUtil.subgraphMask(mol, mask);\n    }\n    static componentList(mol) {\n        let sz = mol.numAtoms;\n        if (sz == 0)\n            return null;\n        let g = Graph.fromMolecule(mol);\n        let groups = g.calculateComponentGroups();\n        for (let grp of groups)\n            Vec.addTo(grp, 1);\n        return groups;\n    }\n    static getAtomSides(mol, atom) {\n        let g = Graph.fromMolecule(mol);\n        let cc = g.calculateComponents();\n        let mask = [];\n        for (let n = 0; n < cc.length; n++)\n            mask.push(cc[n] == cc[atom - 1]);\n        mask[atom - 1] = false;\n        let oldmap = Vec.maskIdx(mask);\n        g.keepNodesMask(mask);\n        cc = g.calculateComponents();\n        let ccmax = Vec.max(cc);\n        let grps = [];\n        for (let n = 0; n < ccmax; n++)\n            grps.push([atom]);\n        for (let n = 0; n < cc.length; n++)\n            grps[cc[n] - 1].push(oldmap[n] + 1);\n        return grps;\n    }\n    static getBondSides(mol, bond) {\n        let bf = mol.bondFrom(bond), bt = mol.bondTo(bond);\n        let inRing = mol.bondInRing(bond);\n        let g = Graph.fromMolecule(mol);\n        let cc = g.calculateComponents();\n        let mask = [];\n        for (let n = 0; n < cc.length; n++)\n            mask.push(cc[n] == cc[bf - 1]);\n        if (!inRing)\n            g.removeEdge(bf - 1, bt - 1);\n        else {\n            mask[bf - 1] = false;\n            mask[bt - 1] = false;\n        }\n        let oldmap = Vec.maskIdx(mask);\n        g.keepNodesMask(mask);\n        cc = g.calculateComponents();\n        let ccmax = Vec.max(cc);\n        let grps = [];\n        for (let n = 0; n < ccmax; n++) {\n            grps[n] = [];\n            if (inRing) {\n                grps[n].push(bf);\n                grps[n].push(bt);\n            }\n        }\n        for (let n = 0; n < cc.length; n++)\n            grps[cc[n] - 1].push(oldmap[n] + 1);\n        return grps;\n    }\n    static arrayAtomX(mol) {\n        let x = Vec.numberArray(0, mol.numAtoms);\n        for (let n = x.length - 1; n >= 0; n--)\n            x[n] = mol.atomX(n + 1);\n        return x;\n    }\n    static arrayAtomY(mol) {\n        let y = Vec.numberArray(0, mol.numAtoms);\n        for (let n = y.length - 1; n >= 0; n--)\n            y[n] = mol.atomY(n + 1);\n        return y;\n    }\n    static arrayAtomMapNum(mol) {\n        let mapnum = Vec.numberArray(0, mol.numAtoms);\n        for (let n = mapnum.length - 1; n >= 0; n--)\n            mapnum[n] = mol.atomMapNum(n + 1);\n        return mapnum;\n    }\n    static molecularFormula(mol, punctuation) {\n        let puncEnter = '', puncExit = '', puncEnterSuper = '', puncExitSuper = '';\n        if (punctuation == true)\n            [puncEnter, puncExit] = ['{', '}', '{^', '}'];\n        else if (punctuation instanceof Array) {\n            puncEnter = punctuation[0];\n            puncExit = punctuation[1];\n            puncEnterSuper = punctuation[2];\n            puncExitSuper = punctuation[3];\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                mol = mol.clone();\n                MolUtil.expandAbbrevs(mol, false);\n                break;\n            }\n        let countC = 0, countH = 0;\n        let elements = Vec.stringArray('', mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            countH += mol.atomHydrogens(n);\n            let el = mol.atomElement(n);\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL)\n                el = puncEnterSuper + mol.atomIsotope(n) + puncExitSuper + el;\n            if (el == 'C')\n                countC++;\n            else if (el == 'H')\n                countH++;\n            else\n                elements[n - 1] = el;\n        }\n        elements.sort();\n        let formula = '';\n        if (countC > 0)\n            formula += 'C';\n        if (countC > 1) {\n            if (punctuation)\n                formula += puncEnter;\n            formula += countC;\n            if (punctuation)\n                formula += puncExit;\n        }\n        if (countH > 0)\n            formula += 'H';\n        if (countH > 1) {\n            if (punctuation)\n                formula += puncEnter;\n            formula += countH;\n            if (punctuation)\n                formula += puncExit;\n        }\n        for (let n = 0; n < elements.length; n++)\n            if (elements[n].length > 0) {\n                let count = 1;\n                for (; n + 1 < elements.length && elements[n] == elements[n + 1]; n++)\n                    count++;\n                formula += elements[n];\n                if (count > 1) {\n                    if (punctuation)\n                        formula += puncEnter;\n                    formula += count;\n                    if (punctuation)\n                        formula += puncExit;\n                }\n            }\n        return formula.toString();\n    }\n    static molecularWeight(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                mol = mol.clone();\n                MolUtil.expandAbbrevs(mol, false);\n                break;\n            }\n        let mw = 0;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            mw += mol.atomHydrogens(n) * Chemistry.NATURAL_ATOMIC_WEIGHTS[1];\n            let iso = mol.atomIsotope(n);\n            if (iso != Molecule.ISOTOPE_NATURAL) {\n                mw += iso;\n                continue;\n            }\n            let an = Molecule.elementAtomicNumber(mol.atomElement(n));\n            if (an > 0 && an < Chemistry.NATURAL_ATOMIC_WEIGHTS.length)\n                mw += Chemistry.NATURAL_ATOMIC_WEIGHTS[an];\n        }\n        return mw;\n    }\n    static removeDuplicateBonds(mol) {\n        let bpri = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let p = Math.min(mol.bondFrom(n), mol.bondTo(n)) * mol.numAtoms + Math.max(mol.bondFrom(n), mol.bondTo(n));\n            bpri.push(p);\n        }\n        let bidx = Vec.idxSort(bpri);\n        let keepmask = Vec.booleanArray(false, bidx.length);\n        let p = 0;\n        while (p < bidx.length) {\n            let sz = 1;\n            while (p + sz < bidx.length && bpri[bidx[p]] == bpri[bidx[p + sz]])\n                sz++;\n            let best = p;\n            for (let n = p + 1; n < p + sz; n++) {\n                let b1 = bidx[best] + 1, b2 = bidx[n] + 1;\n                let a1 = mol.bondFrom(b1), a2 = mol.bondTo(b1);\n                let el1 = mol.atomElement(a1), el2 = mol.atomElement(a2);\n                let limit1 = 0, limit2 = 0;\n                if (el1 == 'C' || el1 == 'N')\n                    limit1 = 4;\n                else if (el1 == 'O')\n                    limit1 = 3;\n                if (el2 == 'C' || el2 == 'N')\n                    limit2 = 4;\n                else if (el2 == 'O')\n                    limit2 = 3;\n                if (limit1 > 0 || limit2 > 0) {\n                    let boB1A1 = 0, boB1A2 = 0, boB2A1 = 0, boB2A2 = 0;\n                    for (let i = 1; i <= mol.numBonds; i++) {\n                        if (i != b2 && (mol.bondFrom(i) == a1 || mol.bondTo(i) == a1))\n                            boB1A1 += mol.bondOrder(i);\n                        if (i != b2 && (mol.bondFrom(i) == a2 || mol.bondTo(i) == a2))\n                            boB1A2 += mol.bondOrder(i);\n                        if (i != b1 && (mol.bondFrom(i) == a1 || mol.bondTo(i) == a1))\n                            boB2A1 += mol.bondOrder(i);\n                        if (i != b1 && (mol.bondFrom(i) == a2 || mol.bondTo(i) == a2))\n                            boB2A2 += mol.bondOrder(i);\n                    }\n                    let bad1 = 0, bad2 = 0;\n                    if (limit1 > 0 && boB1A1 > limit1)\n                        bad1++;\n                    if (limit2 > 0 && boB1A2 > limit2)\n                        bad1++;\n                    if (limit1 > 0 && boB2A1 > limit1)\n                        bad2++;\n                    if (limit2 > 0 && boB2A2 > limit2)\n                        bad2++;\n                    if (bad1 < bad2)\n                        continue;\n                    if (bad1 > bad2) {\n                        best = n;\n                        continue;\n                    }\n                }\n                let exotic1 = 2 * mol.bondOrder(b1), exotic2 = 2 * mol.bondOrder(b2);\n                exotic1 += (exotic1 == 0 ? 4 : 0) + (mol.bondType(b1) != Molecule.BONDTYPE_NORMAL ? 1 : 0);\n                exotic2 += (exotic2 == 0 ? 4 : 0) + (mol.bondType(b2) != Molecule.BONDTYPE_NORMAL ? 1 : 0);\n                if (exotic2 > exotic1)\n                    best = n;\n            }\n            keepmask[bidx[best]] = true;\n            p += sz;\n        }\n        for (let n = mol.numBonds; n >= 1; n--)\n            if (!keepmask[n - 1] || mol.bondFrom(n) == mol.bondTo(n))\n                mol.deleteBond(n);\n    }\n    static calculateWalkWeight(mol, atom) {\n        let ccsz = 0, cc = Graph.fromMolecule(mol).calculateComponents();\n        for (let n = 0; n < cc.length; n++)\n            if (cc[n] == cc[atom - 1])\n                ccsz++;\n        let w = Vec.numberArray(1, mol.numAtoms), wn = Vec.numberArray(0, mol.numAtoms);\n        w[atom - 1] = 0;\n        for (; ccsz > 0; ccsz--) {\n            for (let n = 0; n < mol.numAtoms; n++)\n                wn[n] = w[n];\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let a1 = mol.bondFrom(n) - 1, a2 = mol.bondTo(n) - 1;\n                w[a1] += wn[a2] * 0.1;\n                w[a2] += wn[a1] * 0.1;\n            }\n            w[atom - 1] = 0;\n        }\n        return w;\n    }\n    static totalHydrogens(mol, atom) {\n        let hc = mol.atomHydrogens(atom);\n        let adj = mol.atomAdjList(atom);\n        for (let n = 0; n < adj.length; n++)\n            if (mol.atomElement(adj[n]) == 'H')\n                hc++;\n        return hc;\n    }\n    static stripHydrogens(mol, force = false) {\n        for (let n = mol.numAtoms; n >= 1; n--)\n            if ((force && mol.atomElement(n) == 'H') || this.boringHydrogen(mol, n))\n                mol.deleteAtomAndBonds(n);\n    }\n    static boringHydrogen(mol, atom) {\n        if (mol.atomElement(atom) != 'H')\n            return false;\n        if (mol.atomCharge(atom) != 0 || mol.atomUnpaired(atom) != 0)\n            return false;\n        if (mol.atomIsotope(atom) != Molecule.ISOTOPE_NATURAL)\n            return false;\n        if (Vec.notBlank(mol.atomExtra(atom)) || Vec.notBlank(mol.atomTransient(atom)))\n            return false;\n        if (mol.atomAdjCount(atom) != 1)\n            return false;\n        let other = mol.atomAdjList(atom)[0];\n        if (mol.atomElement(other) == 'H')\n            return false;\n        let bond = mol.atomAdjBonds(atom)[0];\n        if (mol.bondOrder(bond) != 1 || mol.bondType(bond) != Molecule.BONDTYPE_NORMAL)\n            return false;\n        if (mol.atomHExplicit(other) != Molecule.HEXPLICIT_UNKNOWN)\n            return false;\n        if (Molecule.HYVALENCE_EL.indexOf(mol.atomElement(other)) < 0)\n            return false;\n        return true;\n    }\n    static createHydrogens(mol, position) {\n        if (position == null)\n            position = false;\n        let na = mol.numAtoms;\n        for (let n = 1; n <= na; n++) {\n            let hc = mol.atomHydrogens(n);\n            if (hc == 0)\n                continue;\n            if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN)\n                mol.setAtomHExplicit(n, 0);\n            if (!position) {\n                for (; hc > 0; hc--) {\n                    let a = mol.addAtom('H', mol.atomX(n), mol.atomY(n));\n                    mol.addBond(n, a, 1);\n                }\n            }\n            else\n                SketchUtil.placeAdditionalHydrogens(mol, n, hc);\n        }\n        return mol.numAtoms - na;\n    }\n    static atomVec3(mol, atom) {\n        if (mol.is3D())\n            return [mol.atomX(atom), mol.atomY(atom), mol.atomZ(atom)];\n        else\n            return [mol.atomX(atom), mol.atomY(atom), 0];\n    }\n    static atomOxidationState(mol, atom) {\n        if (mol.atomAdjCount(atom) == 0)\n            return null;\n        if (this.hasAbbrev(mol, atom))\n            return null;\n        let atno = mol.atomicNumber(atom);\n        if (atno == 0)\n            return null;\n        let nonMetal = atno == Chemistry.ELEMENT_H || Chemistry.ELEMENT_BLOCKS[atno] == 2;\n        let oxstate = mol.atomHydrogens(atom) + (nonMetal ? -mol.atomCharge(atom) : mol.atomCharge(atom));\n        for (let b of mol.atomAdjBonds(atom)) {\n            let bo = mol.bondOrder(b), other = mol.bondOther(b, atom);\n            let chalco = ['O', 'S', 'Se', 'Te'].includes(mol.atomElement(other));\n            if (nonMetal || chalco)\n                oxstate += bo;\n            else\n                oxstate += bo % 2;\n        }\n        if (atno == Chemistry.ELEMENT_H && oxstate == 1)\n            return null;\n        if (atno == Chemistry.ELEMENT_B && oxstate == 3)\n            return null;\n        if (atno == Chemistry.ELEMENT_C && oxstate == 4)\n            return null;\n        if (atno == Chemistry.ELEMENT_N && oxstate == 3)\n            return null;\n        if (atno == Chemistry.ELEMENT_O && oxstate == 2)\n            return null;\n        if (atno == Chemistry.ELEMENT_S && (oxstate == 2 || oxstate == 4 || oxstate == 6))\n            return null;\n        if (atno == Chemistry.ELEMENT_P && (oxstate == 3 || oxstate == 5))\n            return null;\n        if ((atno == Chemistry.ELEMENT_F || atno == Chemistry.ELEMENT_Cl ||\n            atno == Chemistry.ELEMENT_Br || atno == Chemistry.ELEMENT_I) && oxstate == 1)\n            return null;\n        return oxstate;\n    }\n    static oxidationStateText(oxstate) {\n        if (oxstate == 0)\n            return '0';\n        let str = oxstate < 0 ? '-' : '';\n        let absox = Math.abs(oxstate);\n        if (absox == 1)\n            str += 'I';\n        else if (absox == 2)\n            str += 'II';\n        else if (absox == 3)\n            str += 'III';\n        else if (absox == 4)\n            str += 'IV';\n        else if (absox == 5)\n            str += 'V';\n        else if (absox == 6)\n            str += 'VI';\n        else if (absox == 7)\n            str += 'VII';\n        else if (absox == 8)\n            str += 'VIII';\n        else if (absox == 9)\n            str += 'IX';\n        else if (absox == 10)\n            str += 'X';\n        else if (absox == 11)\n            str += 'XI';\n        else if (absox == 12)\n            str += 'XII';\n        else\n            str = (oxstate > 0 ? '+' : '') + oxstate;\n        return str;\n    }\n}\nMolUtil.TEMPLATE_ATTACHMENT = 'X';\nMolUtil.ABBREV_ATTACHMENT = '*';\nexport { MolUtil };\n//# sourceMappingURL=MolUtil.js.map","import { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nexport const STEREOGROUP_EXTRA_RACEMIC = 'xCHIRAC:';\nexport const STEREOGROUP_EXTRA_RELATIVE = 'xCHIREL:';\nexport class StereoGroup {\n    static hasStereoGroups(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra)\n                    if (str.startsWith(STEREOGROUP_EXTRA_RACEMIC) || str.startsWith(STEREOGROUP_EXTRA_RELATIVE))\n                        return true;\n        }\n        return false;\n    }\n    constructor(mol) {\n        this.mol = mol;\n        this.chiRac = new Map();\n        this.chiRel = new Map();\n        this.mol = mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra) {\n                    if (str.startsWith(STEREOGROUP_EXTRA_RACEMIC)) {\n                        let grp = parseInt(str.substring(STEREOGROUP_EXTRA_RACEMIC.length));\n                        if (grp > 0)\n                            this.chiRac.set(grp, Vec.append(this.chiRac.get(grp), n));\n                    }\n                    else if (str.startsWith(STEREOGROUP_EXTRA_RELATIVE)) {\n                        let grp = parseInt(str.substring(STEREOGROUP_EXTRA_RELATIVE.length));\n                        if (grp > 0)\n                            this.chiRel.set(grp, Vec.append(this.chiRel.get(grp), n));\n                    }\n                }\n        }\n        for (let [grp, atoms] of this.chiRac.entries()) {\n            for (let n = atoms.length - 1; n >= 0; n--)\n                if (!this.atomHasWedge(atoms[n]))\n                    atoms.splice(n, 1);\n            if (atoms.length > 0)\n                this.chiRac.set(grp, atoms);\n            else\n                this.chiRac.delete(grp);\n        }\n        for (let [grp, atoms] of this.chiRel.entries()) {\n            for (let n = atoms.length - 1; n >= 0; n--)\n                if (!this.atomHasWedge(atoms[n]))\n                    atoms.splice(n, 1);\n            if (atoms.length > 0)\n                this.chiRel.set(grp, atoms);\n            else\n                this.chiRel.delete(grp);\n        }\n    }\n    getRacemicGroups() { return Array.from(this.chiRac.keys()); }\n    getRelativeGroups() { return Array.from(this.chiRel.keys()); }\n    getRacemicAtoms() { return Array.from(this.chiRac.values()); }\n    getRelativeAtoms() { return Array.from(this.chiRel.values()); }\n    getRacemicGroupAtoms(grp) { return this.chiRac.get(grp); }\n    getRelativeGroupAtoms(grp) { return this.chiRel.get(grp); }\n    rewriteMolecule() {\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let extra = this.mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (extra[i].startsWith(STEREOGROUP_EXTRA_RACEMIC) || extra[i].startsWith(STEREOGROUP_EXTRA_RELATIVE)) {\n                    extra.splice(i, 1);\n                    modified = true;\n                }\n            }\n            if (modified)\n                this.mol.setAtomExtra(n, extra);\n        }\n        for (let [grp, atoms] of this.chiRac.entries()) {\n            for (let a of atoms)\n                this.mol.setAtomExtra(a, [...this.mol.atomExtra(a), STEREOGROUP_EXTRA_RACEMIC + grp]);\n        }\n        for (let [grp, atoms] of this.chiRel.entries()) {\n            for (let a of atoms)\n                this.mol.setAtomExtra(a, [...this.mol.atomExtra(a), STEREOGROUP_EXTRA_RELATIVE + grp]);\n        }\n    }\n    harmoniseNumbering(other) {\n        let groups = other.getRacemicGroups();\n        let stash = this.getRacemicAtoms();\n        this.chiRac.clear();\n        for (let atoms of stash) {\n            let grp = this.nextIdentifier(groups);\n            this.chiRac.set(grp, atoms);\n            groups.push(grp);\n        }\n        groups = other.getRelativeGroups();\n        stash = this.getRelativeAtoms();\n        this.chiRel.clear();\n        for (let atoms of stash) {\n            let grp = this.nextIdentifier(groups);\n            this.chiRel.set(grp, atoms);\n            groups.push(grp);\n        }\n    }\n    createRacemic(atoms) {\n        let grp = this.nextIdentifier(this.getRacemicGroups());\n        this.chiRac.set(grp, atoms);\n        return grp;\n    }\n    createRelative(atoms) {\n        let grp = this.nextIdentifier(this.getRelativeGroups());\n        this.chiRel.set(grp, atoms);\n        return grp;\n    }\n    removeRacemic(grp) {\n        this.chiRac.delete(grp);\n    }\n    removeRelative(grp) {\n        this.chiRel.delete(grp);\n    }\n    static removeAll(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (!extra[i].startsWith(STEREOGROUP_EXTRA_RACEMIC) && !extra[i].startsWith(STEREOGROUP_EXTRA_RELATIVE))\n                    continue;\n                extra.splice(i, 1);\n                modified = true;\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n    }\n    atomHasWedge(atom) {\n        if (this.mol.is3D())\n            return true;\n        let hasWedge = false;\n        for (let b of this.mol.atomAdjBonds(atom)) {\n            let bt = this.mol.bondType(b);\n            if (bt == Molecule.BONDTYPE_UNKNOWN)\n                return false;\n            if (this.mol.bondFrom(b) != atom)\n                continue;\n            if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                hasWedge = true;\n        }\n        return hasWedge;\n    }\n    nextIdentifier(inkeys) {\n        if (inkeys.length == 0)\n            return 1;\n        let keys = Vec.sorted(inkeys);\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=StereoGroup.js.map","import { ResonanceRemover } from '../calc/ResonanceRemover';\nimport { Vec } from '../util/Vec';\nimport { BondArtifact } from './BondArtifact';\nimport { CoordUtil } from './CoordUtil';\nimport { DataSheet } from './DataSheet';\nimport { ForeignMolecule, ForeignMoleculeTransient } from './ForeignMolecule';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity, PolymerBlockUnit } from './PolymerBlock';\nimport { QueryUtil } from './QueryUtil';\nimport { StereoGroup } from './StereoGroup';\nexport const MDLMOL_VALENCE = {\n    'H': [1],\n    'B': [3],\n    'C': [4],\n    'Si': [4],\n    'N': [3],\n    'P': [3, 5],\n    'As': [3, 5],\n    'O': [2],\n    'S': [2, 4, 6],\n    'Se': [2, 4, 6],\n    'Te': [2, 4, 6],\n    'F': [1],\n    'Cl': [1, 3, 5, 7],\n    'Br': [1],\n    'I': [1, 3, 5, 7],\n    'At': [1, 3, 5, 7],\n};\nexport class MDLMOLReader {\n    constructor(strData) {\n        this.parseHeader = true;\n        this.parseExtended = true;\n        this.allowV3000 = true;\n        this.considerRescale = true;\n        this.keepAromatic = false;\n        this.keepParity = false;\n        this.keepQuery = true;\n        this.mol = null;\n        this.molName = '';\n        this.overallStereoAbsolute = true;\n        this.resBonds = null;\n        this.groupAttachAny = new Map();\n        this.groupAttachAll = new Map();\n        this.groupStereoAbsolute = [];\n        this.groupStereoRacemic = [];\n        this.groupStereoRelative = [];\n        this.groupLinkNodes = [];\n        this.groupMixtures = [];\n        this.scsrTemplates = null;\n        this.pos = 0;\n        this.lines = strData.split(/\\r?\\n/);\n    }\n    parse() {\n        if (this.parseHeader) {\n            this.molName = this.lines[0];\n            this.pos = 3;\n        }\n        this.parseCTAB();\n        return this.mol;\n    }\n    nextLine() {\n        if (this.pos >= this.lines.length)\n            throw 'MDL Molfile parser: premature end, at line ' + (this.pos + 1);\n        return this.lines[this.pos++];\n    }\n    parseCTAB() {\n        this.mol = new Molecule();\n        this.mol.keepTransient = true;\n        let line = this.nextLine();\n        let version = line.length >= 39 ? line.substring(34, 39) : '';\n        if (this.allowV3000 && version == 'V3000') {\n            this.parseV3000();\n            this.mol.keepTransient = false;\n            return;\n        }\n        if (version != 'V2000')\n            throw 'Invalid MDL MOL: no Vx000 tag.';\n        let numAtoms = parseInt(line.substring(0, 3).trim());\n        let numBonds = parseInt(line.substring(3, 6).trim());\n        if (line.length >= 15)\n            this.overallStereoAbsolute = parseInt(line.substring(12, 15).trim()) == 1;\n        for (let n = 0; n < numAtoms; n++) {\n            line = this.nextLine();\n            if (line.length < 34)\n                throw 'Invalid MDL MOL: atom line' + (n + 1);\n            let x = parseFloat(line.substring(0, 10).trim());\n            let y = parseFloat(line.substring(10, 20).trim());\n            let z = parseFloat(line.substring(20, 30).trim());\n            let el = line.substring(31, 34).trim();\n            let chg = line.length < 39 ? 0 : parseInt(line.substring(36, 39).trim()), rad = 0;\n            let stereo = line.length < 42 ? 0 : parseInt(line.substring(39, 42).trim());\n            let hyd = line.length < 45 ? 0 : parseInt(line.substring(42, 45).trim());\n            let val = line.length < 51 ? 0 : parseInt(line.substring(48, 51).trim());\n            let mapnum = line.length < 63 ? 0 : parseInt(line.substring(60, 63).trim());\n            if (chg >= 1 && chg <= 3)\n                chg = 4 - chg;\n            else if (chg == 4) {\n                chg = 0;\n                rad = 2;\n            }\n            else if (chg >= 5 && chg <= 7)\n                chg = 4 - chg;\n            else\n                chg = 0;\n            let a = this.mol.addAtom(el, x, y, chg, rad);\n            if (z != 0) {\n                this.mol.setAtomZ(a, z);\n                this.mol.setIs3D(true);\n            }\n            this.mol.setAtomMapNum(a, mapnum);\n            if (hyd > 0)\n                QueryUtil.setQueryAtomHydrogens(this.mol, a, [hyd - 1]);\n            if (stereo > 0 && this.keepParity) {\n                let trans = this.mol.atomTransient(a);\n                if (stereo == 1)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLOdd));\n                else if (stereo == 2)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLEven));\n                else if (stereo == 3)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLRacemic));\n            }\n            if (val != 0)\n                ForeignMolecule.markExplicitValence(this.mol, n + 1, val > 14 ? 0 : val);\n        }\n        for (let n = 0; n < numBonds; n++) {\n            line = this.nextLine();\n            if (line.length >= 9 && line.length < 12)\n                line = line.substring(0, 9) + '  0';\n            if (line.length < 12)\n                throw 'Invalid MDL MOL: bond line' + (n + 1);\n            let bfr = parseInt(line.substring(0, 3).trim()), bto = parseInt(line.substring(3, 6).trim());\n            let type = parseInt(line.substring(6, 9).trim()), stereo = parseInt(line.substring(9, 12).trim());\n            if (bfr == bto || bfr < 1 || bfr > numAtoms || bto < 1 || bto > numAtoms)\n                throw 'Invalid MDL MOL: bond line' + (n + 1);\n            let order = type >= 1 && type <= 3 ? type : type == 8 || type == 9 || type == 10 ? 0 : 1;\n            let style = Molecule.BONDTYPE_NORMAL;\n            if (stereo == 1)\n                style = Molecule.BONDTYPE_INCLINED;\n            else if (stereo == 6)\n                style = Molecule.BONDTYPE_DECLINED;\n            else if (stereo == 3 || stereo == 4)\n                style = Molecule.BONDTYPE_UNKNOWN;\n            let b = this.mol.addBond(bfr, bto, order, style);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroDative);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroHydrogen);\n            if (this.keepQuery) {\n                if (type == 4)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1]);\n                else if (type == 5)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [1, 2]);\n                else if (type == 6)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 1]);\n                else if (type == 7)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 2]);\n                else if (type == 8)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 0, 1, 2, 3]);\n            }\n            else {\n                if (type == 4) {\n                    if (this.keepAromatic)\n                        this.mol.setBondTransient(b, Vec.append(this.mol.bondTransient(b), ForeignMoleculeTransient.BondAromatic));\n                    else {\n                        if (this.resBonds == null)\n                            this.resBonds = Vec.booleanArray(false, numBonds);\n                        this.resBonds[n] = true;\n                    }\n                }\n            }\n        }\n        const MBLK_CHG = 1, MBLK_RAD = 2, MBLK_ISO = 3, MBLK_RGP = 4, MBLK_HYD = 5, MBLK_ZCH = 6, MBLK_ZBO = 7, MBLK_ZPA = 8, MBLK_ZRI = 9, MBLK_ZAR = 10, MBLK_RBC = 11, MBLK_SUB = 12, MBLK_UNS = 13;\n        let resPaths = new Map(), resRings = new Map(), arenes = new Map();\n        let superatoms = new Map(), mixtures = new Map();\n        while (true) {\n            line = this.nextLine();\n            if (line.startsWith('M  END'))\n                break;\n            let type = 0;\n            if (line.startsWith('M  CHG'))\n                type = MBLK_CHG;\n            else if (line.startsWith('M  RAD'))\n                type = MBLK_RAD;\n            else if (line.startsWith('M  ISO'))\n                type = MBLK_ISO;\n            else if (line.startsWith('M  RGP'))\n                type = MBLK_RGP;\n            else if (this.parseExtended && line.startsWith('M  HYD'))\n                type = MBLK_HYD;\n            else if (this.parseExtended && line.startsWith('M  ZCH'))\n                type = MBLK_ZCH;\n            else if (this.parseExtended && line.startsWith('M  ZBO'))\n                type = MBLK_ZBO;\n            else if (this.parseExtended && line.startsWith('M  ZPA'))\n                type = MBLK_ZPA;\n            else if (this.parseExtended && line.startsWith('M  ZRI'))\n                type = MBLK_ZRI;\n            else if (this.parseExtended && line.startsWith('M  ZAR'))\n                type = MBLK_ZAR;\n            else if (this.parseExtended && line.startsWith('M  RBC'))\n                type = MBLK_RBC;\n            else if (this.parseExtended && line.startsWith('M  SUB'))\n                type = MBLK_SUB;\n            else if (this.parseExtended && line.startsWith('M  UNS'))\n                type = MBLK_UNS;\n            else if (line.startsWith('A  ') && line.length >= 6) {\n                let anum = parseInt(line.substring(3, 6).trim());\n                if (anum >= 1 && anum <= this.mol.numAtoms) {\n                    line = this.nextLine();\n                    if (line == null)\n                        break;\n                    this.mol.setAtomElement(anum, line);\n                    continue;\n                }\n            }\n            else if (line.startsWith('M  STY')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let idx = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let stype = line.substring(14 + 8 * n, 17 + 8 * n);\n                    if (stype == 'SUP')\n                        superatoms.set(idx, { atoms: [], name: null });\n                    else if (stype == 'MIX' || stype == 'FOR')\n                        mixtures.set(idx, { index: idx, parent: 0, atoms: [], type: stype });\n                    else if (stype == 'SRU' || stype == 'COP' || stype == 'MUL' || stype == 'DAT')\n                        superatoms.set(idx, { atoms: [], name: null, bracketType: stype });\n                }\n            }\n            else if (line.startsWith('M  SPL')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let child = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let parent = parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim());\n                    let mix = mixtures.get(child);\n                    if (mix != null)\n                        mix.parent = parent;\n                }\n            }\n            else if (line.startsWith('M  SAL')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let atoms = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        atoms[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    sup.atoms = Vec.concat(sup.atoms, atoms);\n                }\n                let mix = mixtures.get(idx);\n                if (mix != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let atoms = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        atoms[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    mix.atoms = Vec.concat(mix.atoms, atoms);\n                }\n            }\n            else if (line.startsWith('M  SBL')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let bonds = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        bonds[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    sup.bonds = Vec.concat(sup.bonds, bonds);\n                }\n            }\n            else if (line.startsWith('M  SMT')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null)\n                    sup.name = line.substring(11).trim();\n            }\n            else if (line.startsWith('M  SDT')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup) {\n                    sup.name = line.substring(11, 41).trim();\n                    sup.unit = line.substring(43, 63).trim();\n                    sup.query = line.substring(63).trim();\n                }\n            }\n            else if (line.startsWith('M  SED')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup)\n                    sup.value = line.substring(11).trim();\n            }\n            else if (line.startsWith('M  SCN')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let idx = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let stype = line.substring(14 + 8 * n, 17 + 8 * n);\n                    let sup = superatoms.get(idx);\n                    if (sup != null)\n                        sup.connectType = stype.trim();\n                }\n            }\n            else if (line.startsWith('M  CRS')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    sup.bondConn = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        sup.bondConn[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                }\n            }\n            else if (line.startsWith('M  LIN')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let node = {\n                        atom: parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim()),\n                        nbrs: [],\n                        minRep: 1,\n                        maxRep: parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim()),\n                    };\n                    let nbr1 = parseInt(line.substring(17 + 8 * n, 21 + 8 * n).trim());\n                    let nbr2 = parseInt(line.substring(21 + 8 * n, 25 + 8 * n).trim());\n                    if (nbr1 > 0)\n                        node.nbrs.push(nbr1);\n                    if (nbr2 > 0)\n                        node.nbrs.push(nbr2);\n                    this.groupLinkNodes.push(node);\n                }\n            }\n            else if (line.startsWith('M  ALS')) {\n                let atom = parseInt(line.substring(7, 10).trim());\n                let len = parseInt(line.substring(10, 13).trim());\n                let logic = line.charAt(14);\n                let elements = [];\n                for (let n = 0; n < len; n++)\n                    elements.push(line.substring(16 + n * 4, 20 + n * 4).trim());\n                this.mol.setAtomElement(atom, '*');\n                if (logic == 'F')\n                    QueryUtil.setQueryAtomElements(this.mol, atom, elements);\n                else if (logic == 'T')\n                    QueryUtil.setQueryAtomElementsNot(this.mol, atom, elements);\n            }\n            if (type == MBLK_ZPA || type == MBLK_ZRI || type == MBLK_ZAR) {\n                let len = parseInt(line.substring(6, 9).trim()), blk = parseInt(line.substring(9, 13).trim());\n                let map = type == MBLK_ZPA ? resPaths : type == MBLK_ZRI ? resRings : arenes;\n                for (let n = 0; n < len; n++) {\n                    let val = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    if (val < 1 || val > numAtoms)\n                        throw 'Invalid MDL MOL: M-block';\n                    let atoms = map.get(blk);\n                    if (!atoms)\n                        map.set(blk, atoms = []);\n                    atoms.push(val);\n                }\n            }\n            else if (type > 0) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let pos = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let val = parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim());\n                    if (pos < 1)\n                        throw 'Invalid MDL MOL: M-block';\n                    if (type == MBLK_CHG)\n                        this.mol.setAtomCharge(pos, val);\n                    else if (type == MBLK_RAD) {\n                        if (val == 1 || val == 3)\n                            this.mol.setAtomUnpaired(pos, 2);\n                        else if (val == 2)\n                            this.mol.setAtomUnpaired(pos, 1);\n                    }\n                    else if (type == MBLK_ISO)\n                        this.mol.setAtomIsotope(pos, val);\n                    else if (type == MBLK_RGP)\n                        this.mol.setAtomElement(pos, 'R' + val);\n                    else if (type == MBLK_HYD)\n                        this.mol.setAtomHExplicit(pos, val);\n                    else if (type == MBLK_ZCH)\n                        this.mol.setAtomCharge(pos, val);\n                    else if (type == MBLK_ZBO)\n                        this.mol.setBondOrder(pos, val);\n                    else if (type == MBLK_RBC && val != 0) {\n                        if (val == -2)\n                            val = this.countRingBonds(pos);\n                        else if (val == -1)\n                            val = 0;\n                        QueryUtil.setQueryAtomRingBonds(this.mol, pos, [val]);\n                    }\n                    else if (type == MBLK_SUB && val != 0) {\n                        if (val == -2)\n                            val = this.countSubstitutions(pos);\n                        else if (val == -1)\n                            val = 0;\n                        QueryUtil.setQueryAtomAdjacency(this.mol, pos, [val]);\n                    }\n                    else if (type == MBLK_UNS) {\n                        if (val == 1)\n                            QueryUtil.setQueryAtomUnsaturated(this.mol, pos, true);\n                    }\n                }\n            }\n        }\n        this.postFix();\n        if (this.parseExtended) {\n            let artifacts = new BondArtifact(this.mol);\n            for (let atoms of resPaths.values())\n                artifacts.createPath(atoms);\n            for (let atoms of resRings.values())\n                artifacts.createRing(atoms);\n            for (let atoms of arenes.values())\n                artifacts.createArene(atoms);\n            artifacts.rewriteMolecule();\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            if (value.bracketType) {\n                superatoms.delete(key);\n                this.applyPolymerBlock(value);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            superatoms.delete(key);\n            this.applySuperAtom(value, Array.from(superatoms.values()));\n        }\n        for (let key of Vec.sorted(Array.from(mixtures.keys())))\n            this.groupMixtures.push(mixtures.get(key));\n        this.mol.keepTransient = false;\n    }\n    postFix() {\n        const mol = this.mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            if (MolUtil.hasAbbrev(mol, n) || mol.atomTransient(n).some((str) => str.startsWith(ForeignMoleculeTransient.AtomSCSRClass)))\n                continue;\n            let el = mol.atomElement(n);\n            if (el == 'D') {\n                mol.setAtomElement(n, 'H');\n                mol.setAtomIsotope(n, 2);\n            }\n            else if (el == 'T') {\n                mol.setAtomElement(n, 'H');\n                mol.setAtomIsotope(n, 3);\n            }\n            if (mol.is3D && mol.atomZ(n) === undefined)\n                mol.setAtomZ(n, 0);\n            let valence = ForeignMolecule.noteExplicitValence(this.mol, n);\n            let options = MDLMOL_VALENCE[el];\n            if (valence != null) {\n                let hcount = valence < 0 || valence > 14 ? 0 : valence;\n                for (let b of mol.atomAdjBonds(n))\n                    hcount -= mol.bondOrder(b);\n                if (hcount != mol.atomHydrogens(n))\n                    mol.setAtomHExplicit(n, Math.max(0, hcount));\n            }\n            else if (options) {\n                let chg = mol.atomCharge(n);\n                let chgmod = (el == 'C' || el == 'H') ? Math.abs(chg) : el == 'B' ? -Math.abs(chg) : -chg;\n                let usedValence = chgmod;\n                let unp = mol.atomUnpaired(n);\n                if (unp > 0 && (el == 'C' || el == 'O' || el == 'S' || el == 'N' || el == 'P'))\n                    usedValence += unp;\n                for (let b of mol.atomAdjBonds(n))\n                    usedValence += mol.bondOrder(b);\n                for (let v of options)\n                    if (usedValence <= v) {\n                        let hcount = v - usedValence;\n                        if (hcount != mol.atomHydrogens(n))\n                            mol.setAtomHExplicit(n, Math.max(0, hcount));\n                        break;\n                    }\n            }\n        }\n        if (this.considerRescale && Vec.isBlank(this.scsrTemplates))\n            CoordUtil.normaliseBondDistances(mol);\n        if (this.resBonds != null) {\n            let derez = new ResonanceRemover(mol, this.resBonds, null);\n            try {\n                derez.perform();\n                for (let n = 0; n < mol.numBonds; n++)\n                    mol.setBondOrder(n + 1, derez.bondOrders[n]);\n            }\n            catch (ex) {\n            }\n        }\n    }\n    parseV3000() {\n        var _a;\n        let Section;\n        (function (Section) {\n            Section[Section[\"Atom\"] = 0] = \"Atom\";\n            Section[Section[\"Bond\"] = 1] = \"Bond\";\n            Section[Section[\"Coll\"] = 2] = \"Coll\";\n            Section[Section[\"SGroup\"] = 3] = \"SGroup\";\n            Section[Section[\"Template\"] = 4] = \"Template\";\n        })(Section || (Section = {}));\n        let inCTAB = false, inTemplate = false;\n        let section = null;\n        let lineCounts = null;\n        let lineAtom = [], lineBond = [], lineColl = [], lineSgroup = [];\n        let asdrawnRBC = [], asdrawnSUB = [];\n        let templateBlocks = [];\n        const ERRPFX = 'Invalid MDL MOL V3000: ';\n        while (true) {\n            let fullLine = this.nextLine();\n            if (fullLine == 'M  END')\n                break;\n            if (!fullLine.startsWith('M  V30 '))\n                continue;\n            let line = fullLine.substring(7);\n            if (line.startsWith('BEGIN TEMPLATE'))\n                inTemplate = true;\n            else if (line.startsWith('END TEMPLATE'))\n                inTemplate = false;\n            else if (line.startsWith('TEMPLATE ') && inTemplate)\n                templateBlocks.push([fullLine]);\n            else if (inTemplate && templateBlocks != null)\n                Vec.last(templateBlocks).push(fullLine);\n            else if (line.startsWith('COUNTS '))\n                lineCounts = line.substring(7);\n            else if (line.startsWith('BEGIN CTAB'))\n                inCTAB = true;\n            else if (line.startsWith('BEGIN ATOM'))\n                section = Section.Atom;\n            else if (line.startsWith('BEGIN BOND'))\n                section = Section.Bond;\n            else if (line.startsWith('BEGIN COLLECTION'))\n                section = Section.Coll;\n            else if (line.startsWith('BEGIN SGROUP'))\n                section = Section.SGroup;\n            else if (line.startsWith('END '))\n                section = null;\n            else if (inCTAB && section == Section.Atom)\n                lineAtom.push(line);\n            else if (inCTAB && section == Section.Bond)\n                lineBond.push(line);\n            else if (inCTAB && section == Section.Coll)\n                lineColl.push(line);\n            else if (inCTAB && section == Section.SGroup)\n                lineSgroup.push(line);\n            else if (inCTAB && section == null) {\n                if (line.startsWith('LINKNODE ')) {\n                    let bits = this.splitWithQuotes(line.substring(9));\n                    let node = {\n                        atom: 0,\n                        nbrs: [],\n                        minRep: parseInt(bits[0]),\n                        maxRep: parseInt(bits[1])\n                    };\n                    let nb = parseInt(bits[2]);\n                    let atoms = [];\n                    for (let n = 0; n < nb * 2; n++)\n                        atoms.push(parseInt(bits[3 + n]));\n                    Vec.sort(atoms);\n                    for (let n = 0; n < atoms.length; n++) {\n                        if (n < atoms.length - 1 && atoms[n] == atoms[n + 1])\n                            node.atom = atoms[n++];\n                        else\n                            node.nbrs.push(atoms[n]);\n                    }\n                    this.groupLinkNodes.push(node);\n                }\n            }\n        }\n        let counts = lineCounts.trim().split(/\\s+/);\n        if (counts.length < 2)\n            throw ERRPFX + 'counts line malformatted';\n        let numAtoms = parseInt(counts[0]), numBonds = parseInt(counts[1]);\n        if (numAtoms < 0 || numAtoms > lineAtom.length)\n            throw ERRPFX + 'unreasonable atom count: ' + numAtoms;\n        if (numBonds < 0 || numBonds > lineBond.length)\n            throw ERRPFX + 'unreasonable bond count: ' + numBonds;\n        let atomBits = [], bondBits = [];\n        for (let n = 0; n < lineAtom.length; n++) {\n            let line = lineAtom[n];\n            while (n < lineAtom.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineAtom[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits.length < 6)\n                throw ERRPFX + 'atom line has too few components: ' + line;\n            let idx = parseInt(bits[0], 0);\n            if (idx < 1 || idx > numAtoms)\n                throw ERRPFX + 'invalid atom index: ' + bits[0];\n            if (atomBits[idx - 1] != null)\n                throw ERRPFX + 'duplicate atom index: ' + idx;\n            atomBits[idx - 1] = bits;\n        }\n        for (let n = 0; n < lineBond.length; n++) {\n            let line = lineBond[n];\n            while (n < lineBond.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineBond[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits.length < 4)\n                throw ERRPFX + 'bond line has too few components: ' + line;\n            let idx = parseInt(bits[0], 0);\n            if (idx < 1 || idx > numBonds)\n                throw ERRPFX + 'invalid bond index: ' + bits[0];\n            if (bondBits[idx - 1] != null)\n                throw ERRPFX + 'duplicate bond index: ' + idx;\n            bondBits[idx - 1] = bits;\n        }\n        for (let a = 1; a <= numAtoms; a++) {\n            let bits = atomBits[a - 1];\n            if (bits == null)\n                throw ERRPFX + 'atom definition missing for #' + a;\n            let type = bits[1];\n            if (type.length > 2 && type.startsWith('\"') && type.endsWith('\"'))\n                type = type.substring(1, type.length - 1);\n            let x = parseFloat(bits[2]), y = parseFloat(bits[3]), z = parseFloat(bits[4]);\n            let map = parseInt(bits[5]);\n            this.mol.addAtom(type, x, y);\n            if (z != 0) {\n                this.mol.setAtomZ(a, z);\n                this.mol.setIs3D(true);\n            }\n            this.mol.setAtomMapNum(a, map);\n            this.parseQueryAtomList(this.mol, a);\n            for (let i = 6; i < bits.length; i++) {\n                let eq = bits[i].indexOf('=');\n                if (eq < 0)\n                    continue;\n                let key = bits[i].substring(0, eq), val = bits[i].substring(eq + 1);\n                if (key == 'CHG')\n                    this.mol.setAtomCharge(a, parseInt(val));\n                else if (key == 'RAD') {\n                    let spin = parseInt(val);\n                    if (spin == 1 || spin == 3)\n                        this.mol.setAtomUnpaired(a, 2);\n                    else if (spin == 2)\n                        this.mol.setAtomUnpaired(a, 1);\n                }\n                else if (key == 'MASS')\n                    this.mol.setAtomIsotope(a, parseInt(val));\n                else if (key == 'CFG') {\n                    let stereo = parseInt(val);\n                    if (stereo > 0 && this.keepParity) {\n                    }\n                }\n                else if (key == 'VAL')\n                    ForeignMolecule.markExplicitValence(this.mol, a, parseInt(val));\n                else if (key == 'CLASS') {\n                    this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRClass + ':' + val);\n                }\n                else if (key == 'SEQID') {\n                    this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRSeqID + ':' + val);\n                }\n                else if (key == 'ATTCHORD') {\n                    let attch = this.unpackStrings(val);\n                    if (attch != null)\n                        this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRAttchOrd + ':' + attch.join(','));\n                }\n                else if (key == 'HCOUNT') {\n                    let hyd = parseInt(val);\n                    if (hyd != 0)\n                        QueryUtil.setQueryAtomHydrogens(this.mol, a, [Math.max(hyd, 0)]);\n                }\n                else if (key == 'RBCNT') {\n                    let rbc = parseInt(val);\n                    if (rbc == -2)\n                        asdrawnRBC.push(a);\n                    else if (rbc != 0)\n                        QueryUtil.setQueryAtomRingBonds(this.mol, a, [Math.max(rbc, 0)]);\n                }\n                else if (key == 'SUBST') {\n                    let sub = parseInt(val);\n                    if (sub == -2)\n                        asdrawnSUB.push(a);\n                    else if (sub != 0)\n                        QueryUtil.setQueryAtomAdjacency(this.mol, a, [Math.max(sub, 0)]);\n                }\n                else if (key == 'UNSAT') {\n                    let uns = parseInt(val);\n                    if (uns == 1)\n                        QueryUtil.setQueryAtomUnsaturated(this.mol, a, true);\n                }\n            }\n        }\n        for (let b = 1; b <= numBonds; b++) {\n            let bits = bondBits[b - 1];\n            if (bits == null)\n                throw ERRPFX + 'bond definition missing for #' + b;\n            let type = parseInt(bits[1]), bfr = parseInt(bits[2]), bto = parseInt(bits[3]);\n            let order = type >= 1 && type <= 3 ? type : type == 9 || type == 10 ? 0 : 1;\n            this.mol.addBond(bfr, bto, order);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroDative);\n            if (type == 10)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroHydrogen);\n            if (this.keepQuery) {\n                if (type == 4)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1]);\n                else if (type == 5)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [1, 2]);\n                else if (type == 6)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 1]);\n                else if (type == 7)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 2]);\n                else if (type == 8)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 0, 1, 2, 3]);\n            }\n            else {\n                if (type == 4) {\n                    if (this.keepAromatic)\n                        this.mol.setBondTransient(b, Vec.append(this.mol.bondTransient(b), ForeignMoleculeTransient.BondAromatic));\n                    else {\n                        if (this.resBonds == null)\n                            this.resBonds = Vec.booleanArray(false, numBonds);\n                        this.resBonds[b - 1] = true;\n                    }\n                }\n            }\n            let endpts = null;\n            let attach = null;\n            for (let i = 4; i < bits.length; i++) {\n                let eq = bits[i].indexOf('=');\n                if (eq < 0)\n                    continue;\n                let key = bits[i].substring(0, eq), val = bits[i].substring(eq + 1);\n                if (key == 'CFG') {\n                    let dir = parseInt(val);\n                    this.mol.setBondType(b, dir == 1 ? Molecule.BONDTYPE_INCLINED :\n                        dir == 2 ? Molecule.BONDTYPE_UNKNOWN :\n                            dir == 3 ? Molecule.BONDTYPE_DECLINED : Molecule.BONDTYPE_NORMAL);\n                }\n                else if (key == 'DISP') {\n                    if (val == 'COORD')\n                        this.mol.setBondOrder(b, 0);\n                }\n                else if (key == 'ENDPTS')\n                    endpts = this.unpackList(val);\n                else if (key == 'ATTACH')\n                    attach = val;\n            }\n            if (attach != null && endpts != null) {\n                if (attach == 'ALL')\n                    this.groupAttachAll.set(b, endpts);\n                else if (attach == 'ANY')\n                    this.groupAttachAny.set(b, endpts);\n            }\n        }\n        for (let atom of asdrawnRBC)\n            QueryUtil.setQueryAtomRingBonds(this.mol, atom, [this.countRingBonds(atom)]);\n        for (let atom of asdrawnSUB)\n            QueryUtil.setQueryAtomAdjacency(this.mol, atom, [this.countSubstitutions(atom)]);\n        this.postFix();\n        for (let n = 0; n < lineColl.length; n++) {\n            let line = lineColl[n];\n            while (n < lineColl.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineColl[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits[0].startsWith('MDLV30/STEABS')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoAbsolute = this.unpackList(bits[1].substring(5));\n            }\n            else if (bits[0].startsWith('MDLV30/STERAC')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoRacemic.push(this.unpackList(bits[1].substring(6)));\n            }\n            else if (bits[0].startsWith('MDLV30/STEREL')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoRelative.push(this.unpackList(bits[1].substring(6)));\n            }\n        }\n        let stereoGroup = new StereoGroup(this.mol);\n        for (let atoms of this.groupStereoRacemic)\n            stereoGroup.createRacemic(atoms);\n        for (let atoms of this.groupStereoRelative)\n            stereoGroup.createRelative(atoms);\n        stereoGroup.rewriteMolecule();\n        let superatoms = new Map();\n        for (let n = 0; n < lineSgroup.length; n++) {\n            let line = lineSgroup[n];\n            while (n < lineSgroup.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineSgroup[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            let idx = parseInt(bits[0]);\n            if (bits.length > 3 && idx > 0 && bits[1] == 'SUP') {\n                let sup = { atoms: [], name: null };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        sup.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('LABEL='))\n                        sup.name = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('XBONDS='))\n                        sup.bonds = this.unpackList(bits[i].substring(7));\n                    else if (bits[i].startsWith('CLASS='))\n                        sup.templateClass = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('NATREPLACE='))\n                        sup.natReplace = this.withoutQuotes(bits[i].substring(11));\n                    else if (bits[i].startsWith('SAP=')) {\n                        const pts = this.unpackStrings(bits[i].substring(4));\n                        sup.attachPoints = [...((_a = sup.attachPoints) !== null && _a !== void 0 ? _a : []), ...pts];\n                    }\n                }\n                superatoms.set(idx, sup);\n            }\n            else if (bits.length > 3 && idx > 0 && (bits[1] == 'MIX' || bits[1] == 'FOR') && parseInt(bits[2]) == idx) {\n                let mix = { index: idx, parent: 0, atoms: null, type: bits[1] };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        mix.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('PARENT='))\n                        mix.parent = parseInt(bits[i].substring(7));\n                }\n                this.groupMixtures.push(mix);\n            }\n            else if (bits.length > 3 && idx > 0 && (bits[1] == 'SRU' || bits[1] == 'COP' || bits[1] == 'MUL' || bits[1] == 'DAT')) {\n                let sup = { atoms: [], name: null, bracketType: bits[1] };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        sup.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('BONDS='))\n                        sup.bonds = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('LABEL='))\n                        sup.name = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('CONNECT='))\n                        sup.connectType = bits[i].substring(8);\n                    else if (bits[i].startsWith('XBCORR='))\n                        sup.bondConn = this.unpackList(bits[i].substring(7));\n                    else if (bits[i].startsWith('MULT='))\n                        sup.name = this.withoutQuotes(bits[i].substring(5));\n                    else if (bits[i].startsWith('FIELDNAME='))\n                        sup.name = this.withoutQuotes(bits[i].substring(10));\n                    else if (bits[i].startsWith('FIELDDATA='))\n                        sup.value = this.withoutQuotes(bits[i].substring(10));\n                }\n                superatoms.set(idx, sup);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            if (value.bracketType) {\n                superatoms.delete(key);\n                this.applyPolymerBlock(value);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            superatoms.delete(key);\n            this.applySuperAtom(value, Array.from(superatoms.values()));\n        }\n        if (templateBlocks.length > 0) {\n            this.scsrTemplates = templateBlocks.map((lines) => this.parseV3000Template(lines));\n        }\n    }\n    parseQueryAtomList(mol, atom) {\n        let label = mol.atomElement(atom);\n        let not = false;\n        if (label.startsWith('NOT ')) {\n            label = label.substring(4);\n            not = true;\n        }\n        if (label.length < 2 || !label.startsWith('[') || !label.endsWith(']'))\n            return;\n        label = label.substring(1, label.length - 1);\n        let elements = label.split(',');\n        mol.setAtomElement(atom, '*');\n        if (!not)\n            QueryUtil.setQueryAtomElements(mol, atom, elements);\n        else\n            QueryUtil.setQueryAtomElementsNot(mol, atom, elements);\n    }\n    applySuperAtom(sup, residual) {\n        if (sup.name == null || Vec.isBlank(sup.atoms))\n            return;\n        let mask = Vec.booleanArray(true, this.mol.numAtoms);\n        for (let a of sup.atoms)\n            mask[a - 1] = false;\n        let name = sup.name;\n        let i;\n        while ((i = name.indexOf('\\\\S')) >= 0)\n            name = name.substring(0, i) + '{^' + name.substring(i + 2);\n        while ((i = name.indexOf('\\\\s')) >= 0)\n            name = name.substring(0, i) + '{' + name.substring(i + 2);\n        while ((i = name.indexOf('\\\\n')) >= 0)\n            name = name.substring(0, i) + '}' + name.substring(i + 2);\n        let [mod, abvAtom] = !sup.templateClass ? MolUtil.convertToAbbrevIndex(this.mol, mask, name) : [null, null];\n        if (mod == null) {\n            let keyval = {};\n            if (sup.bonds)\n                keyval['bonds'] = sup.bonds.join(' ');\n            if (sup.templateClass)\n                keyval['templateClass'] = sup.templateClass;\n            if (sup.natReplace)\n                keyval['natReplace'] = sup.natReplace;\n            if (sup.attachPoints)\n                keyval['attachPoints'] = sup.attachPoints.join(' ');\n            ForeignMolecule.markSgroupMultiAttach(this.mol, name, sup.atoms, keyval);\n            return;\n        }\n        this.mol = mod;\n        let map = Vec.maskMap(mask);\n        for (let res of residual) {\n            let subsumed = false;\n            for (let n = res.atoms.length - 1; n >= 0; n--) {\n                let atom = map[res.atoms[n] - 1] + 1;\n                if (atom == 0) {\n                    res.atoms = Vec.remove(res.atoms, n);\n                    subsumed = true;\n                }\n                else\n                    res.atoms[n] = atom;\n            }\n            if (subsumed)\n                res.atoms = Vec.sorted(Vec.append(res.atoms, abvAtom));\n        }\n    }\n    applyPolymerBlock(sup) {\n        if (sup.bracketType == 'MUL') {\n            let mult = parseInt(sup.name);\n            ForeignMolecule.markSgroupMultiRepeat(this.mol, mult, sup.atoms);\n            return;\n        }\n        if (sup.bracketType == 'DAT') {\n            if (sup.atoms != null)\n                ForeignMolecule.markSgroupData(this.mol, sup.name, sup.value, sup.unit, sup.query, sup.atoms);\n            return;\n        }\n        let poly = new PolymerBlock(this.mol);\n        let connect = null;\n        if (sup.connectType == null) { }\n        else if (sup.connectType == 'HT')\n            connect = PolymerBlockConnectivity.HeadToTail;\n        else if (sup.connectType == 'HH')\n            connect = PolymerBlockConnectivity.HeadToHead;\n        else if (sup.connectType == 'EU')\n            connect = PolymerBlockConnectivity.Random;\n        else\n            return;\n        let bondConn = null;\n        if (Vec.len(sup.bondConn) == 3) {\n            let b1 = sup.bondConn[0], b2 = sup.bondConn[2], b3 = sup.bondConn[1], b4 = 0;\n            for (let n = 1; n <= this.mol.numBonds; n++)\n                if (n != b1 && n != b2 && n != b3) {\n                    let in1 = sup.atoms.indexOf(this.mol.bondFrom(n)) >= 0, in2 = sup.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n                    if ((in1 && !in2) || (!in1 && in2)) {\n                        if (b4 > 0) {\n                            b4 = 0;\n                            break;\n                        }\n                        b4 = n;\n                    }\n                }\n            bondConn = [b1, b2, b3, b4];\n        }\n        else if (Vec.len(sup.bondConn) == 4) {\n            bondConn = sup.bondConn;\n        }\n        let unit = new PolymerBlockUnit(sup.atoms);\n        unit.connect = connect;\n        unit.bondConn = bondConn;\n        poly.createUnit(unit);\n    }\n    parseV3000Template(lines) {\n        let header = lines[0];\n        let bits = this.splitWithQuotes(header.substring('M  V30 TEMPLATE '.length));\n        let name = bits[1], natReplace = null;\n        for (let n = 2; n < bits.length; n++) {\n            if (bits[n].startsWith('NATREPLACE='))\n                natReplace = bits[n].substring(11);\n        }\n        lines[0] = '  0  0  0  0  0  0  0  0  0  0  0 V3000';\n        lines.push('M  END');\n        let mdl = new MDLMOLReader(lines.join('\\n'));\n        mdl.parseHeader = false;\n        mdl.parse();\n        return { name, natReplace, mol: mdl.mol };\n    }\n    withoutQuotes(str) {\n        if (str.length >= 2 && str.startsWith('\"') && str.endsWith('\"'))\n            return str.substring(1, str.length - 1);\n        return str;\n    }\n    splitWithQuotes(line) {\n        let segments = [];\n        let seg = '';\n        let depth = 0, quote = false;\n        for (let n = 0; n < line.length; n++) {\n            let ch = line.charAt(n);\n            if (ch == ' ' && depth == 0 && !quote) {\n                if (seg.length > 0)\n                    segments.push(seg);\n                seg = '';\n            }\n            else {\n                seg += ch;\n                if (ch == '\"')\n                    quote = !quote;\n                else if (ch == '(' || ch == '[')\n                    depth++;\n                else if (ch == ')' || ch == ']')\n                    depth--;\n            }\n        }\n        if (seg.length > 0)\n            segments.push(seg);\n        return segments;\n    }\n    unpackList(str) {\n        if (!str.startsWith('(') || !str.endsWith(')'))\n            return null;\n        str = str.substring(1, str.length - 1);\n        let values = [];\n        for (let bit of str.split(' '))\n            values.push(parseInt(bit));\n        if (values[0] != values.length - 1)\n            return null;\n        return Vec.remove(values, 0);\n    }\n    unpackStrings(str) {\n        if (!str.startsWith('(') || !str.endsWith(')'))\n            return null;\n        str = str.substring(1, str.length - 1);\n        let values = str.split(' ');\n        if (parseInt(values[0]) != values.length - 1)\n            return null;\n        return Vec.remove(values, 0);\n    }\n    countRingBonds(atom) {\n        let count = 0;\n        for (let b of this.mol.atomAdjBonds(atom))\n            if (this.mol.bondInRing(b))\n                count++;\n        return count;\n    }\n    countSubstitutions(atom) {\n        let count = 0;\n        for (let adj of this.mol.atomAdjList(atom))\n            if (this.mol.atomElement(adj) != 'H')\n                count++;\n        return count;\n    }\n}\nexport class MDLSDFReader {\n    constructor(strData) {\n        this.ds = new DataSheet();\n        this.upcastColumns = true;\n        this.pos = 0;\n        this.lines = strData.split(/\\r?\\n/);\n    }\n    parse() {\n        this.parseStream();\n        if (this.upcastColumns)\n            this.upcastStringColumns();\n        return this.ds;\n    }\n    parseStream() {\n        let ds = this.ds;\n        ds.appendColumn('Molecule', \"molecule\", 'Molecular structure');\n        let colName = -1;\n        let entry = [];\n        while (this.pos < this.lines.length) {\n            let line = this.lines[this.pos++];\n            if (!line.startsWith('$$$$')) {\n                entry.push(line);\n                continue;\n            }\n            let rn = ds.appendRow();\n            let molstr = '';\n            let pos = 0;\n            while (pos < entry.length) {\n                line = entry[pos];\n                if (line.startsWith('> '))\n                    break;\n                molstr += line + '\\n';\n                pos++;\n                if (line.startsWith('M\tEND'))\n                    break;\n            }\n            let mol = null, name = null;\n            try {\n                if (molstr.length > 0) {\n                    let mdl = new MDLMOLReader(molstr);\n                    mdl.parse();\n                    mol = mdl.mol;\n                    name = mdl.molName;\n                }\n            }\n            catch (ex) {\n            }\n            if (mol != null)\n                ds.setMolecule(rn, 0, mol);\n            if (name) {\n                if (colName < 0)\n                    colName = ds.appendColumn('Name', \"string\", 'Molecule name');\n                ds.setString(rn, colName, name);\n            }\n            if (rn == 0 && mol != null) {\n                let str1 = entry[0], str3 = entry[2];\n                if (str1.length >= 7 && str1.startsWith('$name=')) {\n                    ds.changeColumnName(0, str1.substring(6), ds.colDescr(0));\n                }\n                if (str3.length >= 8 && str3.startsWith('$title=')) {\n                    ds.title = str3.substring(7);\n                }\n            }\n            for (; pos + 1 < entry.length; pos += 3) {\n                let key = entry[pos], val = entry[pos + 1];\n                if (!key.startsWith('>'))\n                    continue;\n                let z = key.indexOf('<');\n                if (z < 0)\n                    continue;\n                key = key.substring(z + 1);\n                z = key.indexOf('>');\n                if (z < 0)\n                    continue;\n                key = key.substring(0, z);\n                if (key.length == 0)\n                    continue;\n                while (pos + 2 < entry.length && entry[pos + 2].length > 0) {\n                    val += '\\n' + entry[pos + 2];\n                    pos++;\n                }\n                let cn = ds.findColByName(key);\n                if (cn < 0)\n                    cn = ds.appendColumn(key, \"string\", '');\n                if (val.length == 0)\n                    ds.setToNull(rn, cn);\n                else\n                    ds.setString(rn, cn, val);\n            }\n            entry = [];\n        }\n        if (ds.numRows == 0)\n            this.ds = null;\n    }\n    upcastStringColumns() {\n        let ds = this.ds;\n        for (let i = 0; i < ds.numCols; i++)\n            if (ds.colType(i) == \"string\") {\n                let allnull = true, allreal = true, allint = true, allbool = true;\n                for (let j = 0; j < ds.numRows; j++) {\n                    if (!allreal && !allint && !allbool)\n                        break;\n                    if (ds.isNull(j, i))\n                        continue;\n                    allnull = false;\n                    let val = ds.getString(j, i);\n                    if (allbool) {\n                        let lc = val.toLowerCase();\n                        if (lc != 'true' && lc != 'false')\n                            allbool = false;\n                    }\n                    if (allint) {\n                        let int = parseInt(val);\n                        if (!isFinite(int) || int != parseFloat(val))\n                            allint = false;\n                    }\n                    if (allreal) {\n                        if (!isFinite(parseFloat(val)))\n                            allreal = false;\n                    }\n                }\n                if (allnull) { }\n                else if (allint)\n                    ds.changeColumnType(i, \"integer\");\n                else if (allreal)\n                    ds.changeColumnType(i, \"real\");\n                else if (allbool)\n                    ds.changeColumnType(i, \"boolean\");\n            }\n    }\n}\n//# sourceMappingURL=MDLReader.js.map","import { Vec } from '../util/Vec';\nimport { BondArtifact } from './BondArtifact';\nimport { ForeignMolecule, ForeignMoleculeTransient } from './ForeignMolecule';\nimport { MDLMOL_VALENCE } from './MDLReader';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity } from './PolymerBlock';\nimport { QueryUtil } from './QueryUtil';\nimport { StereoGroup } from './StereoGroup';\nconst VPFX = 'M  V30 ';\nexport class MDLMOLWriter {\n    constructor(mol) {\n        this.mol = mol;\n        this.includeHeader = true;\n        this.includeCounts = true;\n        this.includeEnd = true;\n        this.overallStereoAbsolute = true;\n        this.enhancedFields = true;\n        this.chargeSeparate = false;\n        this.abbrevSgroups = true;\n        this.polymerBlocks = true;\n        this.molName = '';\n        this.scsrTemplates = null;\n        this.sgroups = [];\n        this.lines = [];\n    }\n    write() {\n        if (this.includeHeader) {\n            this.lines.push(this.molName);\n            this.lines.push('Generated by WebMolKit');\n            this.lines.push('');\n        }\n        this.writeCTAB();\n        return this.lines.join('\\n');\n    }\n    writeV3000() {\n        if (this.includeHeader) {\n            this.lines.push(this.molName);\n            this.lines.push('Generated by WebMolKit');\n            this.lines.push('');\n        }\n        this.writeCTAB3000();\n        return this.lines.join('\\n');\n    }\n    writeEither() {\n        let triggered = StereoGroup.hasStereoGroups(this.mol) || this.mol.numAtoms >= 1000 || this.mol.numBonds >= 1000 || Vec.notBlank(this.scsrTemplates);\n        if (!triggered)\n            for (let n = 1; n <= this.mol.numBonds; n++)\n                if (this.mol.bondOrder(n) == 0 && QueryUtil.queryBondOrders(this.mol, n) == null) {\n                    triggered = true;\n                    break;\n                }\n        if (triggered)\n            return this.writeV3000();\n        else\n            return this.write();\n    }\n    getResult() {\n        return this.lines.join('\\n');\n    }\n    writeCTAB() {\n        var _a;\n        let mol = this.mol = this.mol.clone();\n        mol.keepTransient = true;\n        if (MolUtil.hasAnyAbbrev(mol) || ForeignMolecule.hasAnySgroupMultiAttach(mol) || ForeignMolecule.hasAnySgroupMultiRepeat(mol) || ForeignMolecule.hasAnySgroupData(mol)) {\n            if (this.abbrevSgroups)\n                this.partialAbbrevExpansion();\n            else\n                MolUtil.expandAbbrevs(mol, true);\n            this.prepareSgroups();\n        }\n        let atomList1 = [], atomList2 = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let elements = null;\n            let logic = 'F';\n            elements = QueryUtil.queryAtomElements(mol, n);\n            if (elements == null) {\n                elements = QueryUtil.queryAtomElementsNot(mol, n);\n                logic = 'T';\n            }\n            if (elements == null)\n                continue;\n            mol.setAtomElement(n, 'L');\n            let line = this.intrpad(n, 3) + ' ' + logic + '  ' + this.intrpad(elements.length, 3);\n            for (let el of elements)\n                line += this.intrpad(Molecule.elementAtomicNumber(el), 4);\n            atomList1.push(line);\n            line = 'M  ALS ' + this.intrpad(n, 3) + this.intrpad(elements.length, 3) + ' ' + logic + ' ';\n            for (let el of elements)\n                line += this.pad(el, 4);\n            atomList2.push(line);\n        }\n        this.lines.push(this.intrpad(mol.numAtoms, 3) + this.intrpad(mol.numBonds, 3) + this.intrpad(atomList1.length, 3) +\n            '  0' + (this.overallStereoAbsolute ? '  1' : '  0') + '  0  0  0  0  0999 V2000');\n        let chgidx = [], chgval = [];\n        let radidx = [], radval = [];\n        let isoidx = [], isoval = [];\n        let rgpidx = [], rgpval = [];\n        let hydidx = [], hydval = [];\n        let zchidx = [], zchval = [];\n        let zboidx = [], zboval = [];\n        let rbcidx = [], rbcval = [];\n        let subidx = [], subval = [];\n        let unsidx = [], unsval = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n), y = mol.atomY(n);\n            let z = mol.is3D() ? mol.atomZ(n) : 0;\n            let line = this.rpad(x.toFixed(4), 10) + this.rpad(y.toFixed(4), 10) + this.rpad(z.toFixed(4), 10);\n            let el = mol.atomElement(n);\n            let str = el;\n            if (str.length > 3)\n                str = str.substring(0, 3);\n            if (str.length > 1 && str.charAt(0) == 'R' && str.charAt(1) >= '0' && str.charAt(1) <= '9') {\n                rgpidx.push(n);\n                rgpval.push(parseInt(str.substring(1)));\n                str = 'R#';\n            }\n            while (str.length < 4)\n                str += ' ';\n            line += ' ' + str + '0';\n            let chg = mol.atomCharge(n), rad = mol.atomUnpaired(n), mapnum = mol.atomMapNum(n);\n            if (chg >= -3 && chg <= -1)\n                chg = 4 - chg;\n            else if (chg == 0 && rad == 2)\n                chg = 4;\n            else if (chg >= 1 && chg <= 3)\n                chg = 4 - chg;\n            else\n                chg = 0;\n            let qhyd = QueryUtil.queryAtomHydrogens(mol, n);\n            let hyd = 0;\n            if (Vec.len(qhyd) == 1)\n                hyd = qhyd[0] + 1;\n            let val = this.mdlValence(mol, n, 15);\n            line += this.intrpad(chg, 3) + '  0' + this.intrpad(hyd, 3) + '  0' + this.intrpad(val, 3) + '  0  0  0' + this.intrpad(mapnum, 3) + '  0  0';\n            this.lines.push(line);\n            if (mol.atomCharge(n) != 0) {\n                chgidx.push(n);\n                chgval.push(mol.atomCharge(n));\n            }\n            if (this.enhancedFields) {\n                if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN) {\n                    hydidx.push(n);\n                    hydval.push(mol.atomHExplicit(n));\n                }\n            }\n            if (rad == 1) {\n                radidx.push(n);\n                radval.push(2);\n            }\n            if (rad == 2) {\n                radidx.push(n);\n                radval.push(1);\n            }\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) {\n                isoidx.push(n);\n                isoval.push(mol.atomIsotope(n));\n            }\n            let qrbc = QueryUtil.queryAtomRingBonds(mol, n), qsub = QueryUtil.queryAtomAdjacency(mol, n);\n            let quns = QueryUtil.queryAtomUnsaturated(mol, n);\n            if (Vec.len(qrbc) == 1) {\n                rbcidx.push(n);\n                rbcval.push(qrbc[0] == 0 ? -1 : qrbc[0]);\n            }\n            if (Vec.len(qsub) == 1) {\n                subidx.push(n);\n                subval.push(qsub[0] == 0 ? -1 : qsub[0]);\n            }\n            if (quns == true) {\n                unsidx.push(n);\n                unsval.push(1);\n            }\n        }\n        let maskArom = ForeignMolecule.noteAromaticBonds(mol);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let order = mol.bondOrder(n), type = order;\n            let qbond = Vec.sorted((_a = QueryUtil.queryBondOrders(mol, n)) !== null && _a !== void 0 ? _a : []);\n            if (maskArom[n - 1] || Vec.equals(qbond, [-1]))\n                type = 4;\n            else if (Vec.equals(qbond, [1, 2]))\n                type = 5;\n            else if (Vec.equals(qbond, [-1, 1]))\n                type = 6;\n            else if (Vec.equals(qbond, [-1, 2]))\n                type = 7;\n            else if (Vec.equals(qbond, [-1, 0, 1, 2, 3]))\n                type = 8;\n            else if (type > 3)\n                type = 3;\n            let stereo = mol.bondType(n);\n            if (stereo == Molecule.BONDTYPE_NORMAL) { }\n            else if (stereo == Molecule.BONDTYPE_INCLINED) {\n                stereo = 1;\n            }\n            else if (stereo == Molecule.BONDTYPE_DECLINED) {\n                stereo = 6;\n            }\n            else if (stereo == Molecule.BONDTYPE_UNKNOWN) {\n                if (type == 1)\n                    stereo = 4;\n                else\n                    stereo = 3;\n            }\n            else\n                stereo = 0;\n            let line = this.intrpad(mol.bondFrom(n), 3) + this.intrpad(mol.bondTo(n), 3) +\n                this.intrpad(type, 3) + this.intrpad(stereo, 3) + '  0  0  0';\n            this.lines.push(line);\n            if (this.enhancedFields) {\n                if ((order < 1 || order > 3) || type != order && Vec.isBlank(qbond)) {\n                    zboidx.push(n);\n                    zboval.push(order);\n                }\n            }\n        }\n        this.lines.push(...atomList1);\n        this.lines.push(...atomList2);\n        this.writeMBlockPair('CHG', chgidx, chgval);\n        this.writeMBlockPair('RAD', radidx, radval);\n        this.writeMBlockPair('ISO', isoidx, isoval);\n        this.writeMBlockPair('RGP', rgpidx, rgpval);\n        this.writeMBlockPair('HYD', hydidx, hydval);\n        this.writeMBlockPair('ZCH', zchidx, zchval);\n        this.writeMBlockPair('ZBO', zboidx, zboval);\n        this.writeMBlockPair('RBC', rbcidx, rbcval);\n        this.writeMBlockPair('SUB', subidx, subval);\n        this.writeMBlockPair('UNS', unsidx, unsval);\n        if (this.enhancedFields) {\n            let artifacts = new BondArtifact(this.mol);\n            let idx = 0;\n            for (let path of artifacts.getResPaths())\n                this.writeMBlockFlat('ZPA', ++idx, path.atoms);\n            for (let ring of artifacts.getResRings())\n                this.writeMBlockFlat('ZRI', ++idx, ring.atoms);\n            for (let arene of artifacts.getArenes())\n                this.writeMBlockFlat('ZAR', ++idx, Vec.prepend(arene.atoms, arene.centre));\n        }\n        let inSgroup = Vec.booleanArray(false, mol.numAtoms);\n        for (let s = 0; s < this.sgroups.length; s++) {\n            let sg = this.sgroups[s];\n            for (let n of sg.atoms)\n                inSgroup[n - 1] = true;\n            let sidx = this.intrpad(s + 1, 4);\n            this.lines.push('M  STY  1' + sidx + ' ' + sg.type);\n            for (let n = 0; n < sg.atoms.length; n += 15) {\n                let sz = Math.min(sg.atoms.length - n, 15);\n                let line = 'M  SAL' + sidx + this.intrpad(sz, 3);\n                for (let i = 0; i < sz; i++)\n                    line += this.intrpad(sg.atoms[n + i], 4);\n                this.lines.push(line);\n            }\n            if (sg.type != 'DAT')\n                this.lines.push('M  SMT' + sidx + ' ' + sg.name);\n            if (sg.type == 'MUL') {\n                let mult = parseInt(sg.name), unit = sg.atoms.length / mult;\n                for (let n = 0; n < unit; n += 15) {\n                    let sz = Math.min(unit - n, 15);\n                    let line = 'M  SPA' + sidx + this.intrpad(sz, 3);\n                    for (let i = 0; i < sz; i++)\n                        line += this.intrpad(sg.atoms[n + i], 4);\n                    this.lines.push(line);\n                }\n                if (sg.parent > 0)\n                    this.lines.push('M  SPL    1' + sidx + this.intrpad(sg.parent, 4));\n            }\n            if (sg.type == 'DAT') {\n                this.lines.push('M  SDT' + sidx + ' ' + this.pad(sg.name, 32) + this.pad(sg.unit, 20) + sg.query);\n                this.lines.push('M  SED' + sidx + ' ' + sg.value);\n            }\n        }\n        if (this.polymerBlocks)\n            this.encodePolymerBlocks(this.sgroups.length);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomElement(n).length > 2) {\n                this.lines.push('A  ' + this.intrpad(n, 3));\n                this.lines.push(mol.atomElement(n));\n            }\n        if (this.includeEnd)\n            this.lines.push('M  END');\n    }\n    writeMBlockPair(token, idx, val) {\n        const sz = idx.length;\n        for (let i = 0; i < sz; i += 8) {\n            let count = Math.min(8, sz - i);\n            let line = 'M  ' + token + this.intrpad(count, 3);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(idx[i + j], 4) + this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    writeMBlockFlat(token, idx, val) {\n        const sz = val.length;\n        for (let i = 0; i < sz; i += 15) {\n            let count = Math.min(15, sz - i);\n            let line = 'M  ' + token + this.intrpad(count, 3) + this.intrpad(idx, 4);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    writeMBlockFlatIdxFirst(token, idx, val) {\n        const sz = val.length;\n        for (let i = 0; i < sz; i += 15) {\n            let count = Math.min(15, sz - i);\n            let line = 'M  ' + token + this.intrpad(idx, 4) + this.intrpad(count, 3);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    intrpad(num, sz) {\n        return this.rpad(num.toString(), sz);\n    }\n    rpad(str, sz) {\n        while (str.length < sz)\n            str = ' ' + str;\n        return str;\n    }\n    pad(str, sz) {\n        while (str.length < sz)\n            str += ' ';\n        return str;\n    }\n    mdlValence(mol, atom, zeroVal) {\n        let marked = ForeignMolecule.noteExplicitValence(mol, atom);\n        if (marked != null)\n            return marked > 0 ? marked : zeroVal;\n        let hyd = mol.atomHydrogens(atom), el = mol.atomElement(atom);\n        let options = MDLMOL_VALENCE[el];\n        if (options == null && hyd == 0)\n            return 0;\n        let chg = mol.atomCharge(atom);\n        let chgmod = (el == 'C' || el == 'H') ? Math.abs(chg) : el == 'B' ? -Math.abs(chg) : -chg;\n        let bondSum = 0;\n        for (let b of mol.atomAdjBonds(atom))\n            bondSum += mol.bondOrder(b);\n        let nativeVal = chgmod + hyd + bondSum;\n        if (options === null || options === void 0 ? void 0 : options.includes(nativeVal))\n            return 0;\n        let val = nativeVal - chgmod;\n        return val <= 0 || val > 14 ? zeroVal : val;\n    }\n    partialAbbrevExpansion() {\n        const { mol } = this;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                let frag = MolUtil.getAbbrev(mol, n);\n                if (frag == null || mol.atomAdjCount(n) != 1) {\n                    MolUtil.clearAbbrev(mol, n);\n                    continue;\n                }\n                if (MolUtil.hasAnyAbbrev(frag)) {\n                    MolUtil.expandAbbrevs(frag, true);\n                    MolUtil.setAbbrev(mol, n, frag);\n                }\n                let order = mol.bondOrder(mol.atomAdjBonds(n)[0]);\n                if (frag.atomAdjCount(1) == 1 && order == frag.bondOrder(frag.atomAdjBonds(1)[0]))\n                    continue;\n                MolUtil.expandOneAbbrev(mol, n, true);\n                n--;\n            }\n    }\n    prepareSgroups() {\n        const { mol } = this;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomMapNum(n) < 0)\n                mol.setAtomMapNum(n, 0);\n        let next = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                this.sgroups.push({ type: 'SUP', name: mol.atomElement(n), atoms: null });\n                let mask = MolUtil.expandOneAbbrev(mol, n, true);\n                if (mask == null)\n                    continue;\n                next--;\n                for (let i = 0; i < mask.length; i++)\n                    if (mask[i])\n                        mol.setAtomMapNum(i + 1, next);\n                n--;\n            }\n        for (let idx = -1, p = 0; idx >= next; idx--, p++) {\n            let atoms = [];\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomMapNum(n) == idx) {\n                    atoms.push(n);\n                    mol.setAtomMapNum(n, 0);\n                }\n            this.sgroups[p].atoms = atoms;\n        }\n        for (let ma of ForeignMolecule.noteAllSgroupMultiAttach(mol)) {\n            let sg = { type: 'SUP', name: ma.name, atoms: ma.atoms };\n            let str = ma.keyval['bonds'];\n            if (str)\n                sg.bonds = str.split(' ').map((v) => parseInt(v));\n            sg.templateClass = ma.keyval['templateClass'];\n            sg.natReplace = ma.keyval['natReplace'];\n            str = ma.keyval['attachPoints'];\n            if (str)\n                sg.attachPoints = str.split(' ');\n            this.sgroups.push(sg);\n        }\n        for (let mr of ForeignMolecule.noteAllSgroupMultiRepeat(mol))\n            this.sgroups.push({ type: 'MUL', name: mr.mult.toString(), atoms: mr.atoms });\n        for (let dat of ForeignMolecule.noteAllSgroupData(mol))\n            this.sgroups.push({ type: 'DAT', name: dat.name, value: dat.value, unit: dat.unit, query: dat.query, atoms: dat.atoms });\n        for (let n = 0; n < this.sgroups.length; n++) {\n            let sg = this.sgroups[n];\n            if (sg.type != 'MUL')\n                continue;\n            let bestIdx = -1, bestSize = Number.MAX_SAFE_INTEGER;\n            skip: for (let i = 0; i < this.sgroups.length; i++)\n                if (i != n) {\n                    let look = this.sgroups[i];\n                    if (look.type != 'MUL' || look.atoms.length >= bestSize)\n                        continue;\n                    for (let a of sg.atoms)\n                        if (!look.atoms.includes(a))\n                            continue skip;\n                    bestIdx = i;\n                    bestSize = look.atoms.length;\n                }\n            if (bestIdx >= 0)\n                sg.parent = bestIdx + 1;\n        }\n    }\n    encodePolymerBlocks(idx) {\n        let polymers = new PolymerBlock(this.mol);\n        for (let id of polymers.getIDList()) {\n            let unit = polymers.getUnit(id);\n            let sidx = this.intrpad(++idx, 4);\n            this.lines.push('M  STY  1' + sidx + ' SRU');\n            if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                this.lines.push('M  SCN  1' + sidx + ' HT ');\n            else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                this.lines.push('M  SCN  1' + sidx + ' HH ');\n            else if (unit.connect == PolymerBlockConnectivity.Random)\n                this.lines.push('M  SCN  1' + sidx + ' EU ');\n            this.writeMBlockFlatIdxFirst('SAL', idx, unit.atoms);\n            let bonds = null;\n            for (let n = 1; n <= this.mol.numBonds; n++) {\n                let fl1 = unit.atoms.indexOf(this.mol.bondFrom(n)) >= 0, fl2 = unit.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n                if ((fl1 && !fl2) || (!fl1 && fl2))\n                    bonds = Vec.append(bonds, n);\n            }\n            if (bonds != null)\n                this.writeMBlockFlatIdxFirst('SBL', idx, bonds);\n            if (Vec.len(unit.bondConn) == 4) {\n                let bcrs = [unit.bondConn[0], unit.bondConn[2], unit.bondConn[1]];\n                this.writeMBlockFlatIdxFirst('CRS', idx, bcrs);\n            }\n            this.lines.push('M  SMT' + sidx + ' n');\n        }\n    }\n    writeCTAB3000() {\n        var _a;\n        let mol = this.mol;\n        if (MolUtil.hasAnyAbbrev(mol) || ForeignMolecule.hasAnySgroupMultiAttach(mol) || ForeignMolecule.hasAnySgroupMultiRepeat(mol) || ForeignMolecule.hasAnySgroupData(mol)) {\n            mol = this.mol = mol.clone();\n            mol.keepTransient = true;\n            if (this.abbrevSgroups)\n                this.partialAbbrevExpansion();\n            else\n                MolUtil.expandAbbrevs(mol, true);\n            this.prepareSgroups();\n        }\n        let sgroupText = this.populateV3000Sgroups();\n        if (this.includeCounts)\n            this.lines.push('  0  0  0     0  0            999 V3000');\n        this.lines.push(VPFX + 'BEGIN CTAB');\n        this.lines.push(VPFX + `COUNTS ${mol.numAtoms} ${mol.numBonds} ${sgroupText.length} 0 ${this.overallStereoAbsolute ? 1 : 0}`);\n        this.lines.push(VPFX + 'BEGIN ATOM');\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let label = mol.atomElement(n);\n            let qel = QueryUtil.queryAtomElements(mol, n);\n            if (qel != null)\n                label = '[' + qel.join(',') + ']';\n            else {\n                qel = QueryUtil.queryAtomElementsNot(mol, n);\n                if (qel != null)\n                    label = 'NOT [' + qel.join(',') + ']';\n            }\n            if (label.includes(' '))\n                label = `\"${label}\"`;\n            let x = mol.atomX(n), y = mol.atomY(n);\n            let z = mol.is3D() ? mol.atomZ(n) : 0;\n            let mapnum = mol.atomMapNum(n), chg = mol.atomCharge(n), unp = mol.atomUnpaired(n);\n            let isotope = mol.atomIsotope(n), val = this.mdlValence(mol, n, -1);\n            let line = `${VPFX}${n} ${label} ${x.toFixed(4)} ${y.toFixed(4)} ${z.toFixed(4)} ${mapnum}`;\n            if (chg != 0)\n                line += ' CHG=' + chg;\n            if (unp == 1)\n                line += ' RAD=2';\n            else if (unp == 2)\n                line += ' RAD=1';\n            if (isotope != 0)\n                line += ' MASS=' + isotope;\n            if (val != 0)\n                line += ' VAL=' + val;\n            let qhyd = QueryUtil.queryAtomHydrogens(mol, n), qrbc = QueryUtil.queryAtomRingBonds(mol, n), qsub = QueryUtil.queryAtomAdjacency(mol, n);\n            let quns = QueryUtil.queryAtomUnsaturated(mol, n);\n            if (Vec.len(qhyd) == 1)\n                line += ' HCOUNT=' + (qhyd[0] == 0 ? -1 : qhyd[0]);\n            if (Vec.len(qrbc) == 1)\n                line += ' RBCNT=' + (qrbc[0] == 0 ? -1 : qrbc[0]);\n            if (Vec.len(qsub) == 1)\n                line += ' SUBST=' + (qsub[0] == 0 ? -1 : qsub[0]);\n            if (quns == true)\n                line += ' UNSAT=1';\n            for (let trans of mol.atomTransient(n)) {\n                if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRClass))\n                    line += ' CLASS=' + trans.substring(ForeignMoleculeTransient.AtomSCSRClass.length + 1);\n                else if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRSeqID))\n                    line += ' SEQID=' + trans.substring(ForeignMoleculeTransient.AtomSCSRSeqID.length + 1);\n                else if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRAttchOrd)) {\n                    let bits = trans.substring(ForeignMoleculeTransient.AtomSCSRAttchOrd.length + 1).split(',');\n                    line += ' ATTCHORD=' + this.packV3000Strings(bits);\n                }\n            }\n            this.lines.push(line);\n        }\n        this.lines.push(VPFX + 'END ATOM');\n        if (mol.numBonds > 0) {\n            this.lines.push(VPFX + 'BEGIN BOND');\n            let maskArom = ForeignMolecule.noteAromaticBonds(mol);\n            let maskHBond = ForeignMolecule.noteZeroHydrogenBonds(mol);\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n                let order = mol.bondOrder(n), type = order;\n                let qbond = Vec.sorted((_a = QueryUtil.queryBondOrders(mol, n)) !== null && _a !== void 0 ? _a : []);\n                if (maskArom[n - 1] || Vec.equals(qbond, [-1]))\n                    type = 4;\n                else if (Vec.equals(qbond, [1, 2]))\n                    type = 5;\n                else if (Vec.equals(qbond, [-1, 1]))\n                    type = 6;\n                else if (Vec.equals(qbond, [-1, 2]))\n                    type = 7;\n                else if (Vec.equals(qbond, [-1, 0, 1, 2, 3]))\n                    type = 8;\n                else if (type == 0) {\n                    if (!maskHBond[n - 1])\n                        type = 9;\n                    else\n                        type = 10;\n                }\n                else if (type > 3)\n                    type = 3;\n                let stereo = mol.bondType(n);\n                let line = `${VPFX}${n} ${type} ${bfr} ${bto}`;\n                if (stereo == Molecule.BONDTYPE_INCLINED)\n                    line += ' CFG=1';\n                else if (stereo == Molecule.BONDTYPE_DECLINED)\n                    line += ' CFG=3';\n                else if (stereo == Molecule.BONDTYPE_UNKNOWN)\n                    line += ' CFG=2';\n                if (order == 0 && !maskHBond[n - 1])\n                    line += ' DISP=COORD';\n                this.lines.push(line);\n            }\n            this.lines.push(VPFX + 'END BOND');\n        }\n        if (sgroupText.length > 0) {\n            this.lines.push(VPFX + 'BEGIN SGROUP');\n            this.lines.push(...sgroupText);\n            this.lines.push(VPFX + 'END SGROUP');\n        }\n        let collections = [];\n        let stereoGroup = new StereoGroup(mol);\n        let racidx = 0, relidx = 0;\n        for (let atoms of stereoGroup.getRacemicAtoms())\n            collections.push(VPFX + 'MDLV30/STERAC' + (++racidx) + ' ATOMS=' + this.packV3000List(atoms));\n        for (let atoms of stereoGroup.getRelativeAtoms())\n            collections.push(VPFX + 'MDLV30/STEREL' + (++relidx) + ' ATOMS=' + this.packV3000List(atoms));\n        if (collections.length > 0) {\n            this.lines.push(VPFX + 'BEGIN COLLECTION');\n            this.lines.push(...collections);\n            this.lines.push(VPFX + 'END COLLECTION');\n        }\n        this.lines.push(VPFX + 'END CTAB');\n        if (Vec.notBlank(this.scsrTemplates))\n            this.populateSCSRTemplates();\n        if (this.includeEnd)\n            this.lines.push('M  END');\n    }\n    populateV3000Sgroups() {\n        let mol = this.mol;\n        let lines = [];\n        for (let s = 0; s < this.sgroups.length; s++) {\n            let sg = this.sgroups[s];\n            let sid = lines.length + 1;\n            let txt = `${VPFX}${sid} ${sg.type} 0`;\n            if (sg.type == 'SUP') {\n                txt += ' LABEL=' + (sg.name.includes(' ') ? `\"${sg.name}\"` : sg.name);\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                if (sg.bonds)\n                    txt += ' XBONDS=' + this.packV3000List(sg.bonds);\n                if (sg.templateClass)\n                    txt += ' CLASS=' + sg.templateClass;\n                if (sg.natReplace)\n                    txt += ' NATREPLACE=' + sg.natReplace;\n                if (sg.attachPoints) {\n                    for (let n = 0; n + 2 < sg.attachPoints.length; n += 3) {\n                        let v1 = sg.attachPoints[n], v2 = sg.attachPoints[n + 1], v3 = sg.attachPoints[n + 2];\n                        txt += ` SAP=(3 ${v1} ${v2} ${v3})`;\n                    }\n                }\n            }\n            else if (sg.type == 'MUL') {\n                let mult = parseInt(sg.name), unit = sg.atoms.length / mult;\n                txt += ' MULT=' + sg.name;\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                txt += ' PATOMS=' + this.packV3000List(sg.atoms.slice(0, unit));\n                if (sg.parent > 0)\n                    txt += ' PARENT=' + sg.parent;\n            }\n            else if (sg.type == 'DAT') {\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                txt += ' FIELDNAME=' + (sg.name.includes(' ') ? `\"${sg.name}\"` : sg.name);\n                txt += ' FIELDDATA=' + (sg.value.includes(' ') ? `\"${sg.value}\"` : sg.value);\n            }\n            lines.push(txt);\n        }\n        if (this.polymerBlocks) {\n            let polymers = new PolymerBlock(mol);\n            for (let id of polymers.getIDList()) {\n                let sid = lines.length + 1;\n                let unit = polymers.getUnit(id);\n                let txt = `${VPFX}${sid} SRU 0`;\n                txt += ' ATOMS=' + this.packV3000List(unit.atoms);\n                if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                    txt += ' CONNECT=HT';\n                else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                    txt += ' CONNECT=HH';\n                else if (unit.connect == PolymerBlockConnectivity.Random)\n                    txt += ' CONNECT=EU';\n                let bonds = [];\n                for (let n = 1; n <= mol.numBonds; n++) {\n                    let fl1 = unit.atoms.includes(mol.bondFrom(n)), fl2 = unit.atoms.includes(mol.bondTo(n));\n                    if ((fl1 && !fl2) || (!fl1 && fl2))\n                        bonds.push(n);\n                }\n                if (bonds.length > 0)\n                    txt += ' BONDS=' + this.packV3000List(bonds);\n                if (unit.bondConn != null)\n                    txt += ' XBCORR=' + this.packV3000List(unit.bondConn);\n                lines.push(txt);\n            }\n        }\n        return lines;\n    }\n    populateSCSRTemplates() {\n        this.lines.push(VPFX + 'BEGIN TEMPLATE');\n        for (let n = 0; n < this.scsrTemplates.length; n++) {\n            var defn = this.scsrTemplates[n];\n            let line = VPFX + 'TEMPLATE ' + (n + 1) + ' ' + defn.name;\n            if (defn.natReplace)\n                line += ' NATREPLACE=' + defn.natReplace;\n            this.lines.push(line);\n            var tmdl = new MDLMOLWriter(defn.mol);\n            tmdl.includeHeader = false;\n            tmdl.includeCounts = false;\n            tmdl.includeEnd = false;\n            let molfile = tmdl.writeV3000();\n            for (line of molfile.trimEnd().split('\\n'))\n                this.lines.push(line);\n        }\n        this.lines.push(VPFX + 'END TEMPLATE');\n    }\n    packV3000List(values) {\n        let str = '(' + values.length;\n        for (let v of values)\n            str += ' ' + v;\n        return str + ')';\n    }\n    packV3000Strings(values) {\n        let str = '(' + values.length;\n        for (let v of values)\n            str += ' ' + v;\n        return str + ')';\n    }\n}\nexport class MDLSDFWriter {\n    constructor(ds) {\n        this.ds = ds;\n        this.enhancedFields = true;\n        this.chargeSeparate = false;\n        this.abbrevSgroups = true;\n        this.lines = [];\n    }\n    write() {\n        let ds = this.ds, lines = this.lines;\n        let colMol = this.ds.firstColOfType(\"molecule\");\n        for (let i = 0; i < ds.numRows; i++) {\n            let mol = colMol < 0 ? null : ds.getMolecule(i, colMol);\n            if (mol != null) {\n                let wtr = new MDLMOLWriter(mol);\n                wtr.enhancedFields = this.enhancedFields;\n                wtr.chargeSeparate = this.chargeSeparate;\n                wtr.abbrevSgroups = this.abbrevSgroups;\n                let molstr = wtr.write();\n                lines.push(molstr);\n            }\n            for (let j = 0; j < ds.numCols; j++)\n                if (j != colMol && ds.notNull(i, j)) {\n                    let ct = ds.colType(j);\n                    let val = '';\n                    if (ct == \"string\")\n                        val = ds.getString(i, j);\n                    else if (ct == \"integer\")\n                        val = ds.getInteger(i, j).toString();\n                    else if (ct == \"real\")\n                        val = ds.getReal(i, j).toString();\n                    else if (ct == \"boolean\")\n                        val = ds.getBoolean(i, j) ? 'true' : 'false';\n                    if (val != '') {\n                        lines.push('> <' + ds.colName(j) + '>');\n                        lines.push(val);\n                        lines.push('');\n                    }\n                }\n            lines.push('$$$$');\n        }\n        return lines.join('\\n');\n    }\n    getResult() {\n        return this.lines.join('\\n');\n    }\n}\n//# sourceMappingURL=MDLWriter.js.map","import { MDLMOLReader } from './MDLReader';\nimport { MDLMOLWriter } from './MDLWriter';\nimport { Molecule } from './Molecule';\nexport class MoleculeStream {\n    static readUnknown(strData) {\n        if (strData.startsWith('\"')) {\n            try {\n                let jsonStr = JSON.parse(strData);\n                let mol = MoleculeStream.readNative(jsonStr);\n                if (mol)\n                    return mol;\n            }\n            catch (ex) { }\n        }\n        let mol = MoleculeStream.readNative(strData);\n        if (mol)\n            return mol;\n        try {\n            mol = MoleculeStream.readMDLMOL(strData);\n        }\n        catch (e) { }\n        return mol;\n    }\n    static readNative(strData) {\n        let mol = new Molecule();\n        mol.keepTransient = true;\n        let lines = strData.split(/\\r?\\n/);\n        if (lines.length < 2)\n            return null;\n        if (!lines[0].startsWith('SketchEl!') && lines.length >= 4 && lines[3].indexOf('V2000') >= 0) {\n            let i = strData.indexOf('SketchEl!');\n            if (i < 0)\n                return null;\n            lines = strData.substring(i).split(/r?\\n/);\n        }\n        let hdr = lines[0].match(/^SketchEl\\!\\((\\d+)\\,(\\d+)\\)/);\n        if (!hdr)\n            return null;\n        let numAtoms = parseInt(hdr[1]), numBonds = parseInt(hdr[2]);\n        if (lines.length < 2 + numAtoms + numBonds)\n            return null;\n        if (!lines[1 + numAtoms + numBonds].match(/^!End/))\n            return null;\n        for (let n = 0; n < numAtoms; n++) {\n            let bits = lines[1 + n].split(/[=,;]/);\n            let num = mol.addAtom(MoleculeStream.skUnescape(bits[0]), parseFloat(bits[1]), parseFloat(bits[2]), parseInt(bits[3]), parseInt(bits[4]));\n            let extra = [], trans = [];\n            for (let i = 5; i < bits.length; i++) {\n                let ch = bits[i].charAt(0);\n                if (bits[i].charAt(0) == 'i') { }\n                else if (bits[i].charAt(0) == 'e')\n                    mol.setAtomHExplicit(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'm')\n                    mol.setAtomIsotope(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'n')\n                    mol.setAtomMapNum(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'x')\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'y')\n                    trans.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'z') {\n                    mol.setAtomZ(num, parseFloat(bits[i].substring(1)));\n                    mol.setIs3D(true);\n                }\n                else\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n            }\n            mol.setAtomExtra(num, extra);\n            mol.setAtomTransient(num, trans);\n        }\n        for (let n = 0; n < numBonds; n++) {\n            let bits = lines[1 + numAtoms + n].split(/[=,]/);\n            let frto = bits[0].split('-');\n            let bfr = parseInt(frto[0].trim()), bto = parseInt(frto[1].trim());\n            if (bfr == bto)\n                continue;\n            let num = mol.addBond(bfr, bto, parseInt(bits[1]), parseInt(bits[2]));\n            let extra = new Array(), trans = new Array();\n            for (let i = 3; i < bits.length; i++) {\n                let ch = bits[i].charAt(0);\n                if (bits[i].charAt(0) == 'x')\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'y')\n                    trans.push(MoleculeStream.skUnescape(bits[i]));\n                else\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n            }\n            mol.setBondExtra(num, extra);\n            mol.setBondTransient(num, trans);\n        }\n        mol.keepTransient = false;\n        return mol;\n    }\n    static writeNative(mol) {\n        let ret = 'SketchEl!(' + mol.numAtoms + ',' + mol.numBonds + ')\\n';\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let el = mol.atomElement(n), x = mol.atomX(n), y = mol.atomY(n), charge = mol.atomCharge(n), unpaired = mol.atomUnpaired(n);\n            let hy = mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN ? ('e' + mol.atomHExplicit(n)) : ('i' + mol.atomHydrogens(n));\n            ret += MoleculeStream.skEscape(el) + '=' + x.toFixed(4) + ',' + y.toFixed(4) + ';' + charge + ',' + unpaired + ',' + hy;\n            if (mol.is3D())\n                ret += ',z' + mol.atomZ(n);\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL)\n                ret += ',m' + mol.atomIsotope(n);\n            if (mol.atomMapNum(n) > 0)\n                ret += ',n' + mol.atomMapNum(n);\n            ret += MoleculeStream.skEncodeExtra(mol.atomExtra(n));\n            ret += MoleculeStream.skEncodeExtra(mol.atomTransient(n));\n            ret += '\\n';\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            ret += mol.bondFrom(n) + '-' + mol.bondTo(n) + '=' + mol.bondOrder(n) + ',' + mol.bondType(n);\n            ret += MoleculeStream.skEncodeExtra(mol.bondExtra(n));\n            ret += MoleculeStream.skEncodeExtra(mol.bondTransient(n));\n            ret += '\\n';\n        }\n        ret += '!End\\n';\n        return ret;\n    }\n    static readMDLMOL(strData) {\n        let src = new MDLMOLReader(strData);\n        src.parseHeader = true;\n        src.parse();\n        return src.mol;\n    }\n    static writeMDLMOL(mol) {\n        return new MDLMOLWriter(mol).write();\n    }\n    static skUnescape(str) {\n        let ret = '', match;\n        while (match = str.match(/^(.*?)\\\\([0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])(.*)/)) {\n            ret += match[1] + String.fromCharCode(parseInt('0x' + match[2]));\n            str = match[3];\n        }\n        return ret + str;\n    }\n    static skEscape(str) {\n        let ret = '';\n        for (let n = 0; n < str.length; n++) {\n            let ch = str.charAt(n), code = str.charCodeAt(n);\n            if (code <= 32 || code > 127 || ch == '\\\\' || ch == ',' || ch == ';' || ch == '=') {\n                let hex = (code & 0xFFFF).toString(16).toUpperCase();\n                ret += '\\\\';\n                for (let i = 4 - hex.length; i > 0; i--)\n                    ret += '0';\n                ret += hex;\n            }\n            else\n                ret += ch;\n        }\n        return ret;\n    }\n    static skEncodeExtra(extra) {\n        let ret = '';\n        for (let n = 0; n < extra.length; n++)\n            ret += ',' + MoleculeStream.skEscape(extra[n]);\n        return ret;\n    }\n}\n//# sourceMappingURL=MoleculeStream.js.map","import { Box } from '../util/Geom';\nimport { deepClone } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { MoleculeStream } from './MoleculeStream';\nclass Atom {\n}\nclass Bond {\n}\nclass Molecule {\n    constructor() {\n        this.atoms = [];\n        this.bonds = [];\n        this.hasZCoord = false;\n        this.keepTransient = false;\n        this.hasTransient = false;\n        this.graph = null;\n        this.graphBond = null;\n        this.ringID = null;\n        this.compID = null;\n        this.ring3 = null;\n        this.ring4 = null;\n        this.ring5 = null;\n        this.ring6 = null;\n        this.ring7 = null;\n    }\n    clone() {\n        let dup = new Molecule();\n        dup.atoms = deepClone(this.atoms);\n        dup.bonds = deepClone(this.bonds);\n        dup.hasZCoord = this.hasZCoord;\n        dup.keepTransient = this.keepTransient;\n        dup.hasTransient = this.hasTransient;\n        dup.graph = this.graph;\n        dup.graphBond = this.graphBond;\n        dup.ringID = this.ringID;\n        dup.compID = this.compID;\n        dup.ring3 = this.ring3;\n        dup.ring4 = this.ring4;\n        dup.ring5 = this.ring5;\n        dup.ring6 = this.ring6;\n        dup.ring7 = this.ring7;\n        return dup;\n    }\n    static fromString(strData) { return MoleculeStream.readNative(strData); }\n    toString() { return MoleculeStream.writeNative(this); }\n    append(frag) {\n        let base = this.atoms.length;\n        for (let n = 1; n <= frag.numAtoms; n++) {\n            let num = this.addAtom(frag.atomElement(n), frag.atomX(n), frag.atomY(n), frag.atomCharge(n), frag.atomUnpaired(n));\n            this.setAtomIsotope(num, frag.atomIsotope(n));\n            this.setAtomHExplicit(num, frag.atomHExplicit(n));\n            this.setAtomMapNum(num, frag.atomMapNum(n));\n            this.setAtomExtra(num, frag.atomExtra(n));\n            this.setAtomTransient(num, frag.atomTransient(n));\n        }\n        for (let n = 1; n <= frag.numBonds; n++) {\n            let num = this.addBond(frag.bondFrom(n) + base, frag.bondTo(n) + base, frag.bondOrder(n), frag.bondType(n));\n            this.setBondExtra(num, frag.bondExtra(n));\n            this.setBondTransient(num, frag.bondTransient(n));\n        }\n        this.trashTransient();\n    }\n    get numAtoms() { return this.atoms.length; }\n    getAtom(idx) {\n        if (idx < 1 || idx > this.atoms.length)\n            throw new Error(`Molecule.getAtom: index ${idx} out of range (#atoms=${this.atoms.length})`);\n        return this.atoms[idx - 1];\n    }\n    atomElement(idx) { return this.getAtom(idx).element; }\n    atomX(idx) { return this.getAtom(idx).x; }\n    atomY(idx) { return this.getAtom(idx).y; }\n    atomCharge(idx) { return this.getAtom(idx).charge; }\n    atomUnpaired(idx) { return this.getAtom(idx).unpaired; }\n    atomIsotope(idx) { return this.getAtom(idx).isotope; }\n    atomHExplicit(idx) { return this.getAtom(idx).hExplicit; }\n    atomMapNum(idx) { return this.getAtom(idx).mapNum; }\n    atomExtra(idx) { return this.getAtom(idx).extra.slice(0); }\n    atomTransient(idx) { return this.getAtom(idx).transient.slice(0); }\n    get numBonds() { return this.bonds.length; }\n    getBond(idx) {\n        if (idx < 1 || idx > this.bonds.length)\n            throw new Error(`Molecule.getBond: index ${idx} out of range (#bonds=${this.bonds.length})`);\n        return this.bonds[idx - 1];\n    }\n    bondFrom(idx) { return this.getBond(idx).from; }\n    bondTo(idx) { return this.getBond(idx).to; }\n    bondOrder(idx) { return this.getBond(idx).order; }\n    bondType(idx) { return this.getBond(idx).type; }\n    bondExtra(idx) { return this.getBond(idx).extra.slice(0); }\n    bondTransient(idx) { return this.getBond(idx).transient.slice(0); }\n    bondFromTo(idx) { let b = this.getBond(idx); return [b.from, b.to]; }\n    addAtom(element, x, y, charge = 0, unpaired = 0) {\n        let a = new Atom();\n        a.element = element;\n        a.x = x;\n        a.y = y;\n        a.charge = charge;\n        a.unpaired = unpaired;\n        a.isotope = Molecule.ISOTOPE_NATURAL;\n        a.hExplicit = Molecule.HEXPLICIT_UNKNOWN;\n        a.mapNum = 0;\n        a.extra = [];\n        a.transient = [];\n        this.atoms.push(a);\n        this.trashTransient();\n        this.trashGraph();\n        return this.atoms.length;\n    }\n    setAtomElement(idx, element) {\n        this.getAtom(idx).element = element;\n        this.trashTransient();\n    }\n    setAtomPos(idx, x, y, z) {\n        let a = this.getAtom(idx);\n        a.x = x;\n        a.y = y;\n        a.z = z == null ? 0 : z;\n        this.trashTransient();\n    }\n    setAtomX(idx, x) {\n        this.getAtom(idx).x = x;\n        this.trashTransient();\n    }\n    setAtomY(idx, y) {\n        this.getAtom(idx).y = y;\n        this.trashTransient();\n    }\n    setAtomCharge(idx, charge) {\n        this.getAtom(idx).charge = charge;\n        this.trashTransient();\n    }\n    setAtomUnpaired(idx, unpaired) {\n        this.getAtom(idx).unpaired = unpaired;\n        this.trashTransient();\n    }\n    setAtomIsotope(idx, isotope) {\n        this.getAtom(idx).isotope = isotope;\n        this.trashTransient();\n    }\n    setAtomHExplicit(idx, hExplicit) {\n        this.getAtom(idx).hExplicit = hExplicit;\n        this.trashTransient();\n    }\n    setAtomMapNum(idx, mapNum) {\n        this.getAtom(idx).mapNum = mapNum;\n        this.trashTransient();\n    }\n    setAtomExtra(idx, extra) {\n        this.getAtom(idx).extra = extra.slice(0);\n    }\n    setAtomTransient(idx, transi) {\n        this.getAtom(idx).transient = transi.slice(0);\n        if (transi.length > 0)\n            this.hasTransient = true;\n    }\n    swapAtoms(a1, a2) {\n        let a = this.atoms[a1 - 1];\n        this.atoms[a1 - 1] = this.atoms[a2 - 1];\n        this.atoms[a2 - 1] = a;\n        for (let n = 0; n < this.bonds.length; n++) {\n            let b = this.bonds[n];\n            if (b.from == a2)\n                b.from = a1;\n            else if (b.from == a1)\n                b.from = a2;\n            if (b.to == a2)\n                b.to = a1;\n            else if (b.to == a1)\n                b.to = a2;\n        }\n        this.trashGraph();\n    }\n    addBond(from, to, order, type = Molecule.BONDTYPE_NORMAL) {\n        let b = new Bond();\n        b.from = from;\n        b.to = to;\n        b.order = order;\n        b.type = type;\n        b.extra = [];\n        b.transient = [];\n        this.bonds.push(b);\n        this.trashTransient();\n        this.trashGraph();\n        return this.bonds.length;\n    }\n    setBondFrom(idx, bfr) {\n        this.getBond(idx).from = bfr;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondTo(idx, to) {\n        this.getBond(idx).to = to;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondFromTo(idx, bfr, bto) {\n        this.getBond(idx).from = bfr;\n        this.getBond(idx).to = bto;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondOrder(idx, order) {\n        this.getBond(idx).order = order;\n        this.trashTransient();\n    }\n    setBondType(idx, type) {\n        this.getBond(idx).type = type;\n        this.trashTransient();\n    }\n    setBondExtra(idx, extra) {\n        this.getBond(idx).extra = extra.slice(0);\n    }\n    setBondTransient(idx, transi) {\n        this.getBond(idx).transient = transi.slice(0);\n        if (transi.length > 0)\n            this.hasTransient = true;\n    }\n    deleteAtomAndBonds(idx) {\n        for (let n = this.numBonds; n >= 1; n--) {\n            if (this.bondFrom(n) == idx || this.bondTo(n) == idx)\n                this.deleteBond(n);\n            else {\n                if (this.bondFrom(n) > idx)\n                    this.setBondFrom(n, this.bondFrom(n) - 1);\n                if (this.bondTo(n) > idx)\n                    this.setBondTo(n, this.bondTo(n) - 1);\n            }\n        }\n        this.atoms.splice(idx - 1, 1);\n        this.trashTransient();\n        this.trashGraph();\n    }\n    deleteBond(idx) {\n        this.bonds.splice(idx - 1, 1);\n        this.trashTransient();\n        this.trashGraph();\n    }\n    atomHydrogens(idx) {\n        let hy = this.atomHExplicit(idx);\n        if (hy != Molecule.HEXPLICIT_UNKNOWN)\n            return hy;\n        for (let n = 0; n < Molecule.HYVALENCE_EL.length; n++)\n            if (Molecule.HYVALENCE_EL[n] == this.atomElement(idx)) {\n                hy = Molecule.HYVALENCE_VAL[n];\n                break;\n            }\n        if (hy == Molecule.HEXPLICIT_UNKNOWN)\n            return 0;\n        let ch = this.atomCharge(idx);\n        if (this.atomElement(idx) == 'C')\n            ch = -Math.abs(ch);\n        hy += ch - this.atomUnpaired(idx);\n        let adjBonds = this.atomAdjBonds(idx);\n        for (let n = 0; n < adjBonds.length; n++)\n            hy -= this.bondOrder(adjBonds[n]);\n        return hy < 0 ? 0 : hy;\n    }\n    findBond(a1, a2) {\n        for (let n = 1; n <= this.numBonds; n++) {\n            let b1 = this.bondFrom(n), b2 = this.bondTo(n);\n            if ((a1 == b1 && a2 == b2) || (a1 == b2 && a2 == b1))\n                return n;\n        }\n        return 0;\n    }\n    bondOther(idx, ref) {\n        let b1 = this.bondFrom(idx), b2 = this.bondTo(idx);\n        if (b1 == ref)\n            return b2;\n        if (b2 == ref)\n            return b1;\n        return 0;\n    }\n    atomExplicit(idx) {\n        let a = this.atoms[idx - 1];\n        if (a.isotope != Molecule.ISOTOPE_NATURAL)\n            return true;\n        if (a.element != 'C' || a.charge != 0 || a.unpaired != 0)\n            return true;\n        if (this.atomAdjCount(idx) == 0)\n            return true;\n        return false;\n    }\n    atomRingBlock(idx) {\n        if (this.graph == null)\n            this.buildGraph();\n        if (this.ringID == null)\n            this.buildRingID();\n        return this.ringID[idx - 1];\n    }\n    bondInRing(idx) {\n        let r1 = this.atomRingBlock(this.bondFrom(idx)), r2 = this.atomRingBlock(this.bondTo(idx));\n        return r1 > 0 && r1 == r2;\n    }\n    atomConnComp(idx) {\n        if (this.graph == null)\n            this.buildGraph();\n        if (this.compID == null)\n            this.buildConnComp();\n        return this.compID[idx - 1];\n    }\n    atomAdjCount(idx) {\n        this.buildGraph();\n        return this.graph[idx - 1].length;\n    }\n    atomAdjList(idx) {\n        this.buildGraph();\n        let adj = this.graph[idx - 1].slice(0);\n        for (let n = adj.length - 1; n >= 0; n--)\n            adj[n]++;\n        return adj;\n    }\n    atomAdjBonds(idx) {\n        this.buildGraph();\n        return this.graphBond[idx - 1].slice(0);\n    }\n    findRingsOfSize(size) {\n        let rings = null;\n        if (size == 3 && this.ring3 != null)\n            rings = this.ring3;\n        if (size == 4 && this.ring4 != null)\n            rings = this.ring4;\n        if (size == 5 && this.ring5 != null)\n            rings = this.ring5;\n        if (size == 6 && this.ring6 != null)\n            rings = this.ring6;\n        if (size == 7 && this.ring7 != null)\n            rings = this.ring7;\n        if (rings == null) {\n            if (this.graph == null)\n                this.buildGraph();\n            if (this.ringID == null)\n                this.buildRingID();\n            rings = [];\n            for (let n = 1; n <= this.atoms.length; n++) {\n                if (this.ringID[n - 1] > 0) {\n                    let path = Vec.numberArray(0, size);\n                    path[0] = n;\n                    this.recursiveRingFind(path, 1, size, this.ringID[n - 1], rings);\n                }\n            }\n            if (size == 3)\n                this.ring3 = rings;\n            if (size == 4)\n                this.ring4 = rings;\n            if (size == 5)\n                this.ring5 = rings;\n            if (size == 6)\n                this.ring6 = rings;\n            if (size == 7)\n                this.ring7 = rings;\n        }\n        let ret = [];\n        for (let n = 0; n < rings.length; n++)\n            ret.push(rings[n].slice(0));\n        return ret;\n    }\n    boundary() {\n        if (this.atoms.length == 0)\n            return Box.zero();\n        let x1 = this.atoms[0].x, x2 = x1;\n        let y1 = this.atoms[0].y, y2 = y1;\n        for (let n = 1; n < this.atoms.length; n++) {\n            x1 = Math.min(x1, this.atoms[n].x);\n            y1 = Math.min(y1, this.atoms[n].y);\n            x2 = Math.max(x2, this.atoms[n].x);\n            y2 = Math.max(y2, this.atoms[n].y);\n        }\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    atomicNumber(idx) {\n        return Molecule.elementAtomicNumber(this.atomElement(idx));\n    }\n    static elementAtomicNumber(element) {\n        return Math.max(0, Chemistry.ELEMENTS.indexOf(element));\n    }\n    is3D() { return this.hasZCoord; }\n    setIs3D(v) { this.hasZCoord = v; }\n    atomZ(idx) { return this.getAtom(idx).z; }\n    setAtomZ(idx, z) { this.getAtom(idx).z = z; }\n    compareTo(other) {\n        if (other == null || other.numAtoms == 0)\n            return this.numAtoms == 0 ? 0 : 1;\n        if (this.numAtoms < other.numAtoms)\n            return -1;\n        if (this.numAtoms > other.numAtoms)\n            return 1;\n        if (this.numBonds < other.numBonds)\n            return -1;\n        if (this.numBonds > other.numBonds)\n            return 1;\n        for (let n = 1; n <= this.numAtoms; n++) {\n            if (this.atomElement(n) < other.atomElement(n))\n                return -1;\n            if (this.atomElement(n) > other.atomElement(n))\n                return 1;\n            if (this.atomX(n) < other.atomX(n))\n                return -1;\n            if (this.atomX(n) > other.atomX(n))\n                return 1;\n            if (this.atomY(n) < other.atomY(n))\n                return -1;\n            if (this.atomY(n) > other.atomY(n))\n                return 1;\n            if (this.atomCharge(n) < other.atomCharge(n))\n                return -1;\n            if (this.atomCharge(n) > other.atomCharge(n))\n                return 1;\n            if (this.atomUnpaired(n) < other.atomUnpaired(n))\n                return -1;\n            if (this.atomUnpaired(n) > other.atomUnpaired(n))\n                return 1;\n            if (this.atomHExplicit(n) < other.atomHExplicit(n))\n                return -1;\n            if (this.atomHExplicit(n) > other.atomHExplicit(n))\n                return 1;\n            if (this.atomIsotope(n) < other.atomIsotope(n))\n                return -1;\n            if (this.atomIsotope(n) > other.atomIsotope(n))\n                return 1;\n            if (this.atomMapNum(n) < other.atomMapNum(n))\n                return -1;\n            if (this.atomMapNum(n) > other.atomMapNum(n))\n                return 1;\n            let tx1 = this.atomExtra(n), tx2 = other.atomExtra(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n            tx1 = this.atomTransient(n);\n            tx2 = other.atomTransient(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n        }\n        for (let n = 1; n <= this.numBonds; n++) {\n            if (this.bondFrom(n) < other.bondFrom(n))\n                return -1;\n            if (this.bondFrom(n) > other.bondFrom(n))\n                return 1;\n            if (this.bondTo(n) < other.bondTo(n))\n                return -1;\n            if (this.bondTo(n) > other.bondTo(n))\n                return 1;\n            if (this.bondOrder(n) < other.bondOrder(n))\n                return -1;\n            if (this.bondOrder(n) > other.bondOrder(n))\n                return 1;\n            if (this.bondType(n) < other.bondType(n))\n                return -1;\n            if (this.bondType(n) > other.bondType(n))\n                return 1;\n            let tx1 = this.bondExtra(n), tx2 = other.bondExtra(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n            tx1 = this.bondTransient(n);\n            tx2 = other.bondTransient(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n        }\n        return 0;\n    }\n    trashTransient() {\n        if (this.keepTransient || !this.hasTransient)\n            return;\n        for (let a of this.atoms)\n            a.transient = [];\n        for (let b of this.bonds)\n            b.transient = [];\n        this.hasTransient = false;\n    }\n    appendAtomExtra(atom, extra) {\n        this.getAtom(atom).extra.push(extra);\n    }\n    appendAtomTransient(atom, trans) {\n        this.getAtom(atom).transient.push(trans);\n    }\n    appendBondExtra(bond, extra) {\n        this.getBond(bond).extra.push(extra);\n    }\n    appendBondTransient(bond, trans) {\n        this.getBond(bond).transient.push(trans);\n    }\n    trashGraph() {\n        this.graph = null;\n        this.graphBond = null;\n        this.ringID = null;\n        this.compID = null;\n        this.ring3 = null;\n        this.ring4 = null;\n        this.ring5 = null;\n        this.ring6 = null;\n        this.ring7 = null;\n    }\n    buildGraph() {\n        if (this.graph != null && this.graphBond != null)\n            return;\n        let graph = [], graphBond = [];\n        let na = this.numAtoms, nb = this.numBonds;\n        for (let n = 0; n < na; n++) {\n            graph.push([]);\n            graphBond.push([]);\n        }\n        for (let n = 1; n <= nb; n++) {\n            let b = this.getBond(n);\n            graph[b.from - 1].push(b.to - 1);\n            graph[b.to - 1].push(b.from - 1);\n            graphBond[b.from - 1].push(n);\n            graphBond[b.to - 1].push(n);\n        }\n        this.graph = graph;\n        this.graphBond = graphBond;\n    }\n    buildConnComp() {\n        const numAtoms = this.atoms.length;\n        this.compID = Vec.numberArray(0, numAtoms);\n        for (let n = 0; n < numAtoms; n++)\n            this.compID[n] = 0;\n        let comp = 1;\n        this.compID[0] = comp;\n        while (true) {\n            let anything = false;\n            for (let n = 0; n < numAtoms; n++)\n                if (this.compID[n] == comp) {\n                    for (let i = 0; i < this.graph[n].length; i++) {\n                        if (this.compID[this.graph[n][i]] == 0) {\n                            this.compID[this.graph[n][i]] = comp;\n                            anything = true;\n                        }\n                    }\n                }\n            if (!anything) {\n                for (let n = 0; n < numAtoms; n++) {\n                    if (this.compID[n] == 0) {\n                        this.compID[n] = ++comp;\n                        anything = true;\n                        break;\n                    }\n                }\n                if (!anything)\n                    break;\n            }\n        }\n    }\n    buildRingID() {\n        const numAtoms = this.atoms.length;\n        this.ringID = Vec.numberArray(0, numAtoms);\n        if (numAtoms == 0)\n            return;\n        let visited = Vec.booleanArray(false, numAtoms);\n        for (let n = 0; n < numAtoms; n++) {\n            this.ringID[n] = 0;\n            visited[n] = false;\n        }\n        let path = Vec.numberArray(0, numAtoms + 1), plen = 0, numVisited = 0;\n        while (true) {\n            let last, current;\n            if (plen == 0) {\n                last = -1;\n                for (current = 0; visited[current]; current++) { }\n            }\n            else {\n                last = path[plen - 1];\n                current = -1;\n                for (let n = 0; n < this.graph[last].length; n++) {\n                    if (!visited[this.graph[last][n]]) {\n                        current = this.graph[last][n];\n                        break;\n                    }\n                }\n            }\n            if (current >= 0 && plen >= 2) {\n                let back = path[plen - 1];\n                for (let n = 0; n < this.graph[current].length; n++) {\n                    let join = this.graph[current][n];\n                    if (join != back && visited[join]) {\n                        path[plen] = current;\n                        for (let i = plen; i == plen || path[i + 1] != join; i--) {\n                            let id = this.ringID[path[i]];\n                            if (id == 0)\n                                this.ringID[path[i]] = last;\n                            else if (id != last) {\n                                for (let j = 0; j < numAtoms; j++)\n                                    if (this.ringID[j] == id)\n                                        this.ringID[j] = last;\n                            }\n                        }\n                    }\n                }\n            }\n            if (current >= 0) {\n                visited[current] = true;\n                path[plen++] = current;\n                numVisited++;\n            }\n            else {\n                plen--;\n            }\n            if (numVisited == numAtoms)\n                break;\n        }\n        let nextID = 0;\n        for (let i = 0; i < numAtoms; i++) {\n            if (this.ringID[i] > 0) {\n                nextID--;\n                for (let j = numAtoms - 1; j >= i; j--)\n                    if (this.ringID[j] == this.ringID[i])\n                        this.ringID[j] = nextID;\n            }\n        }\n        for (let i = 0; i < numAtoms; i++)\n            this.ringID[i] = -this.ringID[i];\n    }\n    recursiveRingFind(path, psize, capacity, rblk, rings) {\n        const { graph } = this;\n        if (psize < capacity) {\n            let last = path[psize - 1];\n            for (let n = 0; n < graph[last - 1].length; n++) {\n                let adj = graph[last - 1][n] + 1;\n                if (this.ringID[adj - 1] != rblk)\n                    continue;\n                let fnd = false;\n                for (let i = 0; i < psize; i++) {\n                    if (path[i] == adj) {\n                        fnd = true;\n                        break;\n                    }\n                }\n                if (!fnd) {\n                    let newPath = path.slice(0);\n                    newPath[psize] = adj;\n                    this.recursiveRingFind(newPath, psize + 1, capacity, rblk, rings);\n                }\n            }\n            return;\n        }\n        let last = path[psize - 1];\n        let fnd = false;\n        for (let n = 0; n < graph[last - 1].length; n++) {\n            if (graph[last - 1][n] + 1 == path[0]) {\n                fnd = true;\n                break;\n            }\n        }\n        if (!fnd)\n            return;\n        for (let n = 0; n < path.length; n++) {\n            let count = 0, p = path[n] - 1;\n            for (let i = 0; i < graph[p].length; i++)\n                if (path.indexOf(graph[p][i] + 1) >= 0)\n                    count++;\n            if (count != 2)\n                return;\n        }\n        let first = 0;\n        for (let n = 1; n < psize; n++)\n            if (path[n] < path[first])\n                first = n;\n        let fm = (first - 1 + psize) % psize, fp = (first + 1) % psize;\n        let flip = path[fm] < path[fp];\n        if (first != 0 || flip) {\n            let newPath = Vec.numberArray(0, psize);\n            for (let n = 0; n < psize; n++)\n                newPath[n] = path[(first + (flip ? psize - n : n)) % psize];\n            path = newPath;\n        }\n        for (let n = 0; n < rings.length; n++) {\n            let look = rings[n];\n            let same = true;\n            for (let i = 0; i < psize; i++) {\n                if (look[i] != path[i]) {\n                    same = false;\n                    break;\n                }\n            }\n            if (same)\n                return;\n        }\n        rings.push(path);\n    }\n}\nMolecule.IDEALBOND = 1.5;\nMolecule.HEXPLICIT_UNKNOWN = -1;\nMolecule.ISOTOPE_NATURAL = 0;\nMolecule.BONDTYPE_NORMAL = 0;\nMolecule.BONDTYPE_INCLINED = 1;\nMolecule.BONDTYPE_DECLINED = 2;\nMolecule.BONDTYPE_UNKNOWN = 3;\nMolecule.HYVALENCE_EL = ['C', 'N', 'O', 'S', 'P'];\nMolecule.HYVALENCE_VAL = [4, 3, 2, 2, 3];\nMolecule.PREFIX_EXTRA = 'x';\nMolecule.PREFIX_TRANSIENT = 'y';\nexport { Molecule };\n//# sourceMappingURL=Molecule.js.map","import { angleDiff, angleNorm, DEGRAD, norm2_xy, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Graph } from './Graph';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nclass CoordUtil {\n    static atomAtPoint(mol, x, y, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.OVERLAP_THRESHOLD;\n        const tolsq = tolerance * tolerance;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y) < tolsq)\n                return n;\n        return 0;\n    }\n    static sketchEquivalent(mol1, mol2, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.DEFAULT_EQUIV_TOLERANCE;\n        const na = mol1.numAtoms, nb = mol1.numBonds;\n        if (na != mol2.numAtoms || nb != mol2.numBonds)\n            return false;\n        const tolsq = tolerance * tolerance;\n        let box1 = mol1.boundary(), box2 = mol2.boundary();\n        if (Math.abs(box1.minX() - box2.minX()) > tolerance)\n            return false;\n        if (Math.abs(box1.minY() - box2.minY()) > tolerance)\n            return false;\n        if (Math.abs(box1.maxX() - box2.maxX()) > tolerance)\n            return false;\n        if (Math.abs(box1.maxY() - box2.maxY()) > tolerance)\n            return false;\n        let mx1 = MolUtil.arrayAtomX(mol1), my1 = MolUtil.arrayAtomY(mol1);\n        let mx2 = MolUtil.arrayAtomX(mol2), my2 = MolUtil.arrayAtomY(mol2);\n        let map = Vec.numberArray(0, na);\n        let mask = Vec.booleanArray(false, na);\n        for (let i = 0; i < na; i++) {\n            let j = -1;\n            if (norm2_xy(mx1[i] - mx2[i], my1[i] - my2[i]) < tolsq)\n                j = i;\n            if (j < 0) {\n                let bestdsq = Number.MAX_VALUE;\n                for (let n = 0; n < na; n++)\n                    if (!mask[n]) {\n                        let dsq = norm2_xy(mx1[i] - mx2[n], my1[i] - my2[n]);\n                        if (dsq < bestdsq) {\n                            bestdsq = dsq;\n                            j = n;\n                        }\n                    }\n                if (j < 0 || bestdsq > tolsq)\n                    return false;\n            }\n            map[i] = j + 1;\n            mask[j] = true;\n            if (mol1.atomElement(i + 1) != mol2.atomElement(j + 1))\n                return false;\n            if (mol1.atomCharge(i + 1) != mol2.atomCharge(j + 1))\n                return false;\n            if (mol1.atomUnpaired(i + 1) != mol2.atomUnpaired(j + 1))\n                return false;\n            if (mol1.atomHExplicit(i + 1) != mol2.atomHExplicit(j + 1) &&\n                mol1.atomHExplicit(i + 1) != Molecule.HEXPLICIT_UNKNOWN &&\n                mol2.atomHExplicit(j + 1) != Molecule.HEXPLICIT_UNKNOWN)\n                return false;\n        }\n        for (let i = 1; i <= nb; i++) {\n            let i1 = mol1.bondFrom(i), i2 = mol1.bondTo(i), j1 = map[i1 - 1], j2 = map[i2 - 1];\n            let j = mol2.findBond(j1, j2);\n            if (j == 0)\n                return false;\n            if (mol1.bondOrder(i) != mol2.bondOrder(j) || mol1.bondType(i) != mol2.bondType(j))\n                return false;\n            if (mol2.bondFrom(j) == j1 && mol2.bondTo(j) == j2) { }\n            else if (mol2.bondType(j) != Molecule.BONDTYPE_INCLINED &&\n                mol2.bondType(j) != Molecule.BONDTYPE_DECLINED &&\n                mol2.bondFrom(j) == j2 && mol2.bondTo(j) == j1) { }\n            else\n                return false;\n        }\n        return true;\n    }\n    static sketchMappable(mol1, mol2, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.DEFAULT_EQUIV_TOLERANCE;\n        let box1 = mol1.boundary(), box2 = mol2.boundary();\n        let dx = box1.minX() - box2.minX(), dy = box1.minY() - box2.minY();\n        if (Math.abs(dx) > tolerance * 0.1 || Math.abs(dy) > tolerance * 0.1) {\n            mol2 = mol2.clone();\n            for (let n = 1; n <= mol2.numAtoms; n++)\n                mol2.setAtomPos(n, mol2.atomX(n) + dx, mol2.atomY(n) + dy);\n        }\n        return CoordUtil.sketchEquivalent(mol1, mol2, tolerance);\n    }\n    static atomBondAngles(mol, atom, adj) {\n        if (adj == null)\n            adj = mol.atomAdjList(atom);\n        let bndang = [];\n        let cx = mol.atomX(atom), cy = mol.atomY(atom);\n        for (let a of adj)\n            bndang.push(Math.atan2(mol.atomY(a) - cy, mol.atomX(a) - cx));\n        return bndang;\n    }\n    static overlapsAtom(mol, x, y, tol) {\n        const tolsq = tol * tol;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y) < tolsq)\n                return true;\n        return false;\n    }\n    static overlappingAtomMask(mol, thresh) {\n        if (thresh == null)\n            thresh = CoordUtil.OVERLAP_THRESHOLD;\n        const sz = mol.numAtoms;\n        let box = mol.boundary();\n        let p1, p2;\n        if (box.w > box.h) {\n            p1 = MolUtil.arrayAtomX(mol);\n            p2 = MolUtil.arrayAtomY(mol);\n        }\n        else {\n            p1 = MolUtil.arrayAtomY(mol);\n            p2 = MolUtil.arrayAtomX(mol);\n        }\n        let omask = Vec.booleanArray(false, sz);\n        let idx = Vec.idxSort(p1);\n        const threshSQ = thresh * thresh;\n        for (let i = 1; i < sz - 1; i++) {\n            for (let j = i - 1; j >= 0; j--) {\n                let d1 = p1[idx[i]] - p1[idx[j]];\n                if (d1 > thresh)\n                    break;\n                if (norm2_xy(d1, p2[idx[i]] - p2[idx[j]]) < threshSQ) {\n                    omask[idx[i]] = true;\n                    omask[idx[j]] = true;\n                }\n            }\n            for (let j = i + 1; j < sz; j++) {\n                let d1 = p1[idx[j]] - p1[idx[i]];\n                if (d1 > thresh)\n                    break;\n                if (norm2_xy(d1, p2[idx[j]] - p2[idx[i]]) < threshSQ) {\n                    omask[idx[i]] = true;\n                    omask[idx[j]] = true;\n                }\n            }\n        }\n        return omask;\n    }\n    static overlappingAtomList(mol, thresh) {\n        if (thresh == null)\n            thresh = CoordUtil.OVERLAP_THRESHOLD;\n        return Vec.add(Vec.maskIdx(CoordUtil.overlappingAtomMask(mol, thresh)), 1);\n    }\n    static congestionPoint(mol, x, y, approach) {\n        if (approach == null)\n            approach = 1E-5;\n        let score = 0;\n        let na = mol.numAtoms;\n        for (let n = 1; n <= na; n++)\n            score += 1.0 / (approach + norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y));\n        return score;\n    }\n    static congestionMolecule(mol, approach) {\n        if (approach == null)\n            approach = 1E-5;\n        let score = 0;\n        const na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        for (let i = 0; i < na - 1; i++)\n            for (let j = i + 1; j < na; j++)\n                score += 1.0 / (approach + norm2_xy(mx[i] - mx[j], my[i] - my[j]));\n        return score;\n    }\n    static translateMolecule(mol, ox, oy) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            mol.setAtomPos(n, mol.atomX(n) + ox, mol.atomY(n) + oy);\n    }\n    static rotateMolecule(mol, theta, cx, cy) {\n        if (cx == null || cy == null) {\n            let box = mol.boundary();\n            cx = box.midX();\n            cy = box.midY();\n        }\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n            mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n        }\n    }\n    static rotateBond(mol, centre, atom, theta) {\n        theta = angleNorm(theta);\n        if (Math.abs(theta) < 0.1 * DEGRAD)\n            return;\n        let g = Graph.fromMolecule(mol);\n        g.isolateNode(centre - 1);\n        let cc = g.calculateComponents();\n        let cx = mol.atomX(centre), cy = mol.atomY(centre);\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (cc[n - 1] == cc[atom - 1]) {\n                let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n                mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n            }\n    }\n    static rotateAtoms(mol, mask, cx, cy, theta) {\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n                mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n            }\n    }\n    static angleNeighbours(mol, atom) {\n        let adj = mol.atomAdjList(atom);\n        if (adj.length <= 1)\n            return null;\n        let th = [];\n        for (let n = 0; n < adj.length; n++)\n            th.push(Math.atan2(mol.atomY(adj[n]) - mol.atomY(atom), mol.atomX(adj[n]) - mol.atomX(atom)));\n        if (adj.length == 2) {\n            if (angleDiff(th[1], th[0]) > 0)\n                return adj;\n            return [adj[1], adj[0]];\n        }\n        let idx = Vec.idxSort(th);\n        return Vec.idxGet(adj, idx);\n    }\n    static mergeAtoms(mol, oldN, newN) {\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondFrom(n) == oldN)\n                mol.setBondFrom(n, newN);\n            if (mol.bondTo(n) == oldN)\n                mol.setBondTo(n, newN);\n        }\n        mol.deleteAtomAndBonds(oldN);\n    }\n    static normaliseBondDistances(mol) {\n        const nb = mol.numBonds;\n        if (nb == 0)\n            return;\n        let dsq = [];\n        for (let n = 1; n <= nb; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            dsq.push(norm2_xy(mol.atomX(bto) - mol.atomX(bfr), mol.atomY(bto) - mol.atomY(bfr)));\n        }\n        Vec.sort(dsq);\n        let median = (nb & 1) == 1 ? Math.sqrt(dsq[nb >> 1]) : 0.5 * (Math.sqrt(dsq[nb >> 1]) + Math.sqrt(dsq[(nb >> 1) - 1]));\n        if (median < 0.1 || (median > Molecule.IDEALBOND * 0.9 && median < Molecule.IDEALBOND * 1.1))\n            return;\n        let box = mol.boundary();\n        let cx = box.midX(), cy = box.midY();\n        let scale = Molecule.IDEALBOND / median;\n        for (let n = mol.numAtoms; n >= 1; n--) {\n            let x = (mol.atomX(n) - cx) * scale + cx;\n            let y = (mol.atomY(n) - cy) * scale + cy;\n            mol.setAtomPos(n, x, y);\n        }\n    }\n    static centreMolecule(mol) {\n        if (MolUtil.isBlank(mol))\n            return;\n        let x = MolUtil.arrayAtomX(mol), y = MolUtil.arrayAtomY(mol);\n        let sz = x.length;\n        let invsz = 1.0 / sz;\n        let meanX = Vec.sum(x) * invsz, meanY = Vec.sum(y) * invsz;\n        let closest = Number.POSITIVE_INFINITY;\n        let deltaX = 0, deltaY = 0;\n        for (let n = 0; n < sz; n++) {\n            let dsq = norm2_xy(x[n] - meanX, y[n] - meanY);\n            if (dsq < closest) {\n                deltaX = -x[n];\n                deltaY = -y[n];\n                closest = dsq;\n            }\n        }\n        for (let n = 0; n < sz; n++)\n            mol.setAtomPos(n + 1, x[n] + deltaX, y[n] + deltaY);\n    }\n    static mirrorImage(mol) {\n        mol = mol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            mol.setAtomX(n, -mol.atomX(n));\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                mol.setBondType(n, Molecule.BONDTYPE_INCLINED);\n            else if (mol.bondType(n) == Molecule.BONDTYPE_INCLINED)\n                mol.setBondType(n, Molecule.BONDTYPE_DECLINED);\n        }\n        return mol;\n    }\n    static alignOrientFlip(mol1, idx1, mol2, idx2) {\n        if (idx1.length < 2 || idx1.length != idx2.length)\n            throw 'Invalid mapping indices.';\n        let x0 = mol1.atomX(idx1[0]), y0 = mol1.atomY(idx1[0]);\n        CoordUtil.translateMolecule(mol2, x0 - mol2.atomX(idx2[0]), y0 - mol2.atomY(idx2[0]));\n        const sz = idx1.length - 1;\n        let th1 = [], th2 = [];\n        let deltaA = 0, deltaB = 0;\n        for (let n = 0; n < sz; n++) {\n            th1.push(Math.atan2(mol1.atomY(idx1[n + 1]) - y0, mol1.atomX(idx1[n + 1]) - x0));\n            th2.push(Math.atan2(mol2.atomY(idx2[n + 1]) - y0, mol2.atomX(idx2[n + 1]) - x0));\n            let dthA = angleDiff(th1[n], th2[n]), dthB = angleDiff(th1[n], -th2[n]);\n            if (dthA < -175 * DEGRAD && deltaA > 0)\n                dthA += TWOPI;\n            else if (dthA > 175 * DEGRAD && deltaA < 0)\n                dthA -= TWOPI;\n            if (dthB < -175 * DEGRAD && deltaB > 0)\n                dthB += TWOPI;\n            else if (dthB > 175 * DEGRAD && deltaB < 0)\n                dthB -= TWOPI;\n            deltaA += dthA;\n            deltaB += dthB;\n        }\n        if (sz > 1) {\n            let inv = 1.0 / sz;\n            deltaA *= inv;\n            deltaB *= inv;\n        }\n        let scoreA = 0, scoreB = 0;\n        for (let n = 0; n < sz; n++) {\n            scoreA += Math.abs(angleDiff(th1[n], th2[n] + deltaA));\n            scoreB += Math.abs(angleDiff(th1[n], -th2[n] + deltaB));\n        }\n        if (scoreB < scoreA) {\n            for (let n = 1; n <= mol2.numAtoms; n++)\n                mol2.setAtomY(n, 2 * y0 - mol2.atomY(n));\n            for (let n = 1; n <= mol2.numBonds; n++) {\n                if (mol2.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                    mol2.setBondType(n, Molecule.BONDTYPE_INCLINED);\n                else if (mol2.bondType(n) == Molecule.BONDTYPE_INCLINED)\n                    mol2.setBondType(n, Molecule.BONDTYPE_DECLINED);\n            }\n            CoordUtil.rotateMolecule(mol2, x0, y0, deltaB);\n        }\n        else\n            CoordUtil.rotateMolecule(mol2, x0, y0, deltaA);\n    }\n    static atomIsWeirdLinear(mol, idx) {\n        let bonds = mol.atomAdjBonds(idx);\n        if (bonds.length != 2)\n            return false;\n        for (let n = 0; n < bonds.length; n++)\n            if (mol.bondOrder(bonds[n]) == 3)\n                return false;\n        let adj = mol.atomAdjList(idx);\n        let th1 = Math.atan2(mol.atomY(adj[0]) - mol.atomY(idx), mol.atomX(adj[0]) - mol.atomX(idx));\n        let th2 = Math.atan2(mol.atomY(adj[1]) - mol.atomY(idx), mol.atomX(adj[1]) - mol.atomX(idx));\n        return Math.abs(angleDiff(th1, th2)) >= 175 * DEGRAD;\n    }\n}\nCoordUtil.OVERLAP_THRESHOLD = 0.2;\nCoordUtil.OVERLAP_THRESHOLD_SQ = CoordUtil.OVERLAP_THRESHOLD * CoordUtil.OVERLAP_THRESHOLD;\nCoordUtil.DEFAULT_EQUIV_TOLERANCE = 0.2;\nexport { CoordUtil };\n//# sourceMappingURL=CoordUtil.js.map","import { GeomUtil } from './Geom';\nimport { DEGRAD, fltEqual, norm2_xy, norm_xy, sqr, TWOPI } from './util';\nimport { Vec } from './Vec';\nconst CACHE_SIZE = 1000;\nclass FitRotatedEllipse {\n    constructor(px, py, margin) {\n        this.px = px;\n        this.py = py;\n        this.margin = margin;\n        this.theta = 0;\n        this.stop = false;\n        this.hashKey = JSON.stringify([this.px, this.py]);\n    }\n    calculate() {\n        if (this.lookupCache())\n            return;\n        this.setupParameters();\n        if (this.stop)\n            return;\n        this.currentScore = this.calculateScore(this.cx, this.cy, this.rw, this.rh);\n        this.coarseDiscovery();\n        this.fineImprovement();\n        this.theta = -this.theta;\n        this.saveCache();\n    }\n    getSpline() {\n        return GeomUtil.createBezierEllipse(this.cx, this.cy, this.rw, this.rh, this.theta);\n    }\n    lookupCache() {\n        let hashKey = this.hashKey;\n        let look = FitRotatedEllipse.cacheMap.get(hashKey);\n        if (look) {\n            this.cx = look.cx;\n            this.cy = look.cy;\n            this.rw = look.rw;\n            this.rh = look.rh;\n            this.theta = look.theta;\n            const { cacheVal } = FitRotatedEllipse;\n            for (let n = cacheVal.length - 1; n >= 0; n--)\n                if (cacheVal[n].hashKey == hashKey) {\n                    if (n < cacheVal.length - 1) {\n                        cacheVal.push(cacheVal[n]);\n                        cacheVal.splice(n, 1);\n                    }\n                    break;\n                }\n            return true;\n        }\n        return false;\n    }\n    saveCache() {\n        let hashKey = this.hashKey;\n        const { cacheVal, cacheMap } = FitRotatedEllipse;\n        cacheVal.push(this);\n        cacheMap.set(hashKey, this);\n        while (cacheVal.length > CACHE_SIZE) {\n            cacheMap.delete(cacheVal[0].hashKey);\n            cacheVal.splice(0);\n        }\n    }\n    setupParameters() {\n        const psz = this.psz = this.px.length;\n        const invpsz = this.invpsz = 1.0 / psz;\n        this.cx = Vec.sum(this.px) * invpsz;\n        this.cy = Vec.sum(this.py) * invpsz;\n        let ptheta = new Array(psz), pdist = new Array(psz);\n        for (let n = 0; n < psz; n++) {\n            ptheta[n] = Math.atan2(this.py[n] - this.cy, this.px[n] - this.cx);\n            pdist[n] = norm_xy(this.px[n] - this.cx, this.py[n] - this.cy);\n        }\n        let order = Vec.idxSort(ptheta);\n        this.px = Vec.idxGet(this.px, order);\n        this.py = Vec.idxGet(this.py, order);\n        ptheta = Vec.idxGet(ptheta, order);\n        pdist = Vec.idxGet(pdist, order);\n        let buffX = new Array(psz), buffY = new Array(psz);\n        const rotatedScore = (ptheta, pdist, rtheta) => {\n            for (let n = 0; n < psz; n++) {\n                buffX[n] = pdist[n] * Math.cos(ptheta[n] + rtheta);\n                buffY[n] = pdist[n] * Math.sin(ptheta[n] + rtheta);\n            }\n            let scx = Vec.sum(buffX) * invpsz, scy = Vec.sum(buffY) * invpsz;\n            let devx = 0, devy = 0;\n            for (let n = 0; n < psz; n++) {\n                devx += sqr(buffX[n] - scx);\n                devy += Math.abs(buffY[n] - scy);\n            }\n            return devy / (1 + devx);\n        };\n        let bestScore = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < 360; n++) {\n            let th = n * DEGRAD;\n            let score = rotatedScore(ptheta, pdist, th);\n            if (score < bestScore) {\n                this.theta = th;\n                bestScore = score;\n            }\n        }\n        for (let dth = -1; dth <= 1; dth += 0.05) {\n            let th = this.theta + dth * DEGRAD;\n            let score = rotatedScore(ptheta, pdist, th);\n            if (score < bestScore) {\n                this.theta = th;\n                bestScore = score;\n            }\n        }\n        for (let n = 0; n < psz; n++) {\n            this.px[n] = this.cx + pdist[n] * Math.cos(ptheta[n] + this.theta);\n            this.py[n] = this.cy + pdist[n] * Math.sin(ptheta[n] + this.theta);\n        }\n        this.cx = Vec.sum(this.px) * invpsz;\n        this.cy = Vec.sum(this.py) * invpsz;\n        this.rw = this.rh = 1;\n    }\n    coarseDiscovery() {\n        const { margin } = this;\n        let deltaD = 0.1 * margin, deltaR = 0.5 * deltaD;\n        const DELTA_OPTIONS = [\n            { dx: -1, dy: 0, dw: 0, dh: 0 },\n            { dx: 1, dy: 0, dw: 0, dh: 0 },\n            { dx: 0, dy: -1, dw: 0, dh: 0 },\n            { dx: 0, dy: 1, dw: 0, dh: 0 },\n            { dx: 0, dy: 0, dw: -1, dh: 0 },\n            { dx: 0, dy: 0, dw: 1, dh: 0 },\n            { dx: 0, dy: 0, dw: 0, dh: -1 },\n            { dx: 0, dy: 0, dw: 0, dh: 1 },\n        ];\n        for (let sanity = 0; sanity < 1000; sanity++) {\n            let anything = false;\n            let bestScore = this.currentScore;\n            let bestCX = this.cx, bestCY = this.cy, bestRW = this.rw, bestRH = this.rh;\n            for (let delta of DELTA_OPTIONS) {\n                let newCX = this.cx + delta.dx * deltaD;\n                let newCY = this.cy + delta.dy * deltaD;\n                let newRW = this.rw + delta.dw * deltaR;\n                let newRH = this.rh + delta.dh * deltaR;\n                let newScore = this.calculateScore(newCX, newCY, newRW, newRH);\n                if (newScore > bestScore && !fltEqual(newScore, bestScore)) {\n                    anything = true;\n                    bestScore = newScore;\n                    bestCX = newCX;\n                    bestCY = newCY;\n                    bestRW = newRW;\n                    bestRH = newRH;\n                }\n            }\n            if (!anything)\n                break;\n            this.currentScore = bestScore;\n            this.cx = bestCX;\n            this.cy = bestCY;\n            this.rw = bestRW;\n            this.rh = bestRH;\n        }\n    }\n    fineImprovement() {\n        const { margin } = this;\n        let deltaD = 0.1 * margin, deltaR = 0.5 * deltaD;\n        const REDUCTION = 2.0 / 3;\n        const MAX_REDUCTIONS = 20;\n        for (let reduc = 0; reduc < MAX_REDUCTIONS; reduc++) {\n            let anything = false;\n            let bestScore = this.currentScore;\n            let bestCX = this.cx, bestCY = this.cy, bestRW = this.rw, bestRH = this.rh;\n            for (let dCX = -1; dCX <= 1; dCX++) {\n                let newCX = this.cx + dCX * deltaD;\n                for (let dCY = -1; dCY <= 1; dCY++) {\n                    let newCY = this.cy + dCY * deltaD;\n                    for (let dRW = -1; dRW <= 1; dRW++) {\n                        let newRW = this.rw + dRW * deltaR;\n                        for (let dRH = -1; dRH <= 1; dRH++) {\n                            let newRH = this.rh + dRH * deltaR;\n                            if (dCX == 0 && dCY == 0 && dRW == 0 && dRH == 0)\n                                continue;\n                            let newScore = this.calculateScore(newCX, newCY, newRW, newRH);\n                            if (newScore > bestScore && !fltEqual(newScore, bestScore)) {\n                                anything = true;\n                                bestScore = newScore;\n                                bestCX = newCX;\n                                bestCY = newCY;\n                                bestRW = newRW;\n                                bestRH = newRH;\n                            }\n                        }\n                    }\n                }\n            }\n            if (anything) {\n                this.currentScore = bestScore;\n                this.cx = bestCX;\n                this.cy = bestCY;\n                this.rw = bestRW;\n                this.rh = bestRH;\n            }\n            else {\n                reduc++;\n                deltaD *= REDUCTION;\n                deltaR *= REDUCTION;\n            }\n        }\n    }\n    calculateScore(cx, cy, rw, rh) {\n        const { px, py, margin } = this, psz = px.length;\n        const nseg = 24;\n        let cosTheta = 1, sinTheta = 0;\n        let incrAlpha = TWOPI / nseg;\n        let closestDSQ = Vec.numberArray(Number.POSITIVE_INFINITY, psz);\n        for (let n = 0; n < nseg; n++) {\n            let alpha = n * incrAlpha;\n            let cosAlpha = Math.cos(alpha), sinAlpha = Math.sin(alpha);\n            let dx = rw * cosAlpha * cosTheta - rh * sinAlpha * sinTheta;\n            let dy = rw * cosAlpha * sinTheta + rh * sinAlpha * cosTheta;\n            let d = norm_xy(dx, dy) + margin, eth = Math.atan2(dy, dx);\n            let x = cx + d * Math.cos(eth);\n            let y = cy + d * Math.sin(eth);\n            for (let i = 0; i < psz; i++) {\n                let ii = i == psz - 1 ? 0 : i + 1;\n                if (GeomUtil.doLineSegsIntersect(cx, cy, x, y, px[i], py[i], px[ii], py[ii]))\n                    return 0;\n            }\n            for (let i = 0; i < psz; i++)\n                closestDSQ[i] = Math.min(closestDSQ[i], norm2_xy(x - px[i], y - py[i]));\n        }\n        let proxSum = 0;\n        for (let dsq of closestDSQ)\n            proxSum += 1.0 / (1 + Math.sqrt(dsq));\n        return rw * rh + proxSum;\n    }\n}\nFitRotatedEllipse.cacheVal = [];\nFitRotatedEllipse.cacheMap = new Map();\nexport { FitRotatedEllipse };\n//# sourceMappingURL=FitRotatedEllipse.js.map","class FontData {\n    constructor() {\n        this.UNITS_PER_EM = 2048;\n        this.INV_UNITS_PER_EM = 1.0 / this.UNITS_PER_EM;\n        this.PANOSE_1 = '2 11 6 4 3 5 4 4 2 4';\n        this.ASCENT = 1638;\n        this.DESCENT = -410;\n        this.MISSING_HORZ = 2048;\n        this.MISSING_DATA = 'M256 0v1536h1536v-1536h-1536zM384 128h1280v1280h-1280v-1280z';\n        this.ASCENT_FUDGE = 0.9;\n        this.UNICODE = [\n            ' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<',\n            '=', '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n            '[', '\\\\', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\n            'x', 'y', 'z', '{', '|', '}', '~', '\\u00A0', '\\u00A1', '\\u00A2', '\\u00A3', '\\u00A4', '\\u00A5', '\\u00A6', '\\u00A7', '\\u00A8', '\\u00A9', '\\u00AA',\n            '\\u00AB', '\\u00AC', '\\u00AD', '\\u00AE', '\\u00AF', '\\u00B0', '\\u00B1', '\\u00B2', '\\u00B3', '\\u00B4', '\\u00B5', '\\u00B6', '\\u00B7', '\\u00B8', '\\u00B9',\n            '\\u00BA', '\\u00BB', '\\u00BC', '\\u00BD', '\\u00BE', '\\u00BF', '\\u00C0', '\\u00C1', '\\u00C2', '\\u00C3', '\\u00C4', '\\u00C5', '\\u00C6', '\\u00C7', '\\u00C8',\n            '\\u00C9', '\\u00CA', '\\u00CB', '\\u00CC', '\\u00CD', '\\u00CE', '\\u00CF', '\\u00D0', '\\u00D1', '\\u00D2', '\\u00D3', '\\u00D4', '\\u00D5', '\\u00D6', '\\u00D7',\n            '\\u00D8', '\\u00D9', '\\u00DA', '\\u00DB', '\\u00DC', '\\u00DD', '\\u00DE', '\\u00DF', '\\u00E0', '\\u00E1', '\\u00E2', '\\u00E3', '\\u00E4', '\\u00E5', '\\u00E6',\n            '\\u00E7', '\\u00E8', '\\u00E9', '\\u00EA', '\\u00EB', '\\u00EC', '\\u00ED', '\\u00EE', '\\u00EF', '\\u00F0', '\\u00F1', '\\u00F2', '\\u00F3', '\\u00F4', '\\u00F5',\n            '\\u00F6', '\\u00F7', '\\u00F8', '\\u00F9', '\\u00FA', '\\u00FB', '\\u00FC', '\\u00FD', '\\u00FE', '\\u037E', '\\u0384', '\\u0385', '\\u0386', '\\u0387', '\\u0388',\n            '\\u0389', '\\u038A', '\\u038C', '\\u038E', '\\u038F', '\\u0390', '\\u0391', '\\u0392', '\\u0393', '\\u0394', '\\u0395', '\\u0396', '\\u0397', '\\u0398', '\\u0399',\n            '\\u039A', '\\u039B', '\\u039C', '\\u039D', '\\u039E', '\\u039F', '\\u03A0', '\\u03A1', '\\u03A3', '\\u03A4', '\\u03A5', '\\u03A6', '\\u03A7', '\\u03A8', '\\u03A9',\n            '\\u03AA', '\\u03AB', '\\u03AC', '\\u03AD', '\\u03AE', '\\u03AF', '\\u03B0', '\\u03B1', '\\u03B2', '\\u03B3', '\\u03B4', '\\u03B5', '\\u03B6', '\\u03B7', '\\u03B8',\n            '\\u03B9', '\\u03BA', '\\u03BB', '\\u03BC', '\\u03BD', '\\u03BE', '\\u03BF', '\\u03C0', '\\u03C1', '\\u03C2', '\\u03C3', '\\u03C4', '\\u03C5', '\\u03C6', '\\u03C7',\n            '\\u03C8', '\\u03C9', '\\u03CA', '\\u03CB', '\\u03CC', '\\u03CD', '\\u03CE', '\\u2202', '\\u2206', '\\u220F', '\\u2211', '\\u2212', '\\u2215', '\\u2219', '\\u221A',\n            '\\u221E', '\\u222B', '\\u2248', '\\u2260', '\\u2264', '\\u2265'\n        ];\n        this.HORIZ_ADV_X = [\n            720, 806, 940, 1676, 1302, 2204, 1488, 550, 930, 930, 1302, 1676, 745, 930, 745, 930, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302,\n            930, 930, 1676, 1676, 1676, 1117, 2048, 1400, 1404, 1430, 1578, 1295, 1177, 1588, 1539, 862, 931, 1419, 1140, 1726, 1532, 1612, 1235, 1612, 1424,\n            1400, 1262, 1499, 1400, 2025, 1403, 1260, 1403, 930, 930, 930, 1676, 1302, 1302, 1230, 1276, 1067, 1276, 1220, 720, 1276, 1296, 562, 705, 1212, 562,\n            1992, 1296, 1243, 1276, 1276, 874, 1067, 807, 1296, 1212, 1676, 1212, 1212, 1076, 1300, 930, 1300, 1676, 720, 806, 1302, 1302, 1302, 1302, 930, 1302,\n            1302, 2048, 1117, 1320, 1676, 930, 2048, 1302, 1110, 1676, 1110, 1110, 1302, 1314, 1302, 745, 1302, 1110, 1117, 1320, 2048, 2048, 2048, 1117, 1400,\n            1400, 1400, 1400, 1400, 1400, 2016, 1430, 1295, 1295, 1295, 1295, 862, 862, 862, 862, 1588, 1532, 1612, 1612, 1612, 1612, 1612, 1676, 1612, 1499,\n            1499, 1499, 1499, 1260, 1240, 1270, 1230, 1230, 1230, 1230, 1230, 1230, 1956, 1067, 1220, 1220, 1220, 1220, 562, 562, 562, 562, 1253, 1296, 1243,\n            1243, 1243, 1243, 1243, 1676, 1243, 1296, 1296, 1296, 1296, 1212, 1276, 930, 1302, 1302, 1400, 930, 1538, 1782, 1105, 1804, 1543, 1859, 562, 1400,\n            1404, 1160, 1440, 1295, 1403, 1539, 1612, 862, 1419, 1404, 1726, 1532, 1329, 1612, 1539, 1235, 1377, 1262, 1260, 1677, 1403, 1783, 1676, 862, 1260,\n            1276, 1050, 1296, 562, 1293, 1276, 1270, 1212, 1245, 1050, 937, 1296, 1278, 562, 1212, 1212, 1310, 1212, 1030, 1243, 1305, 1280, 1040, 1291, 1016,\n            1293, 1618, 1208, 1683, 1666, 562, 1293, 1243, 1293, 1666, 1302, 1489, 1676, 1489, 1676, 740, 745, 1676, 2048, 1302, 1676, 1676, 1676, 1676\n        ];\n        this.GLYPH_DATA = [\n            '',\n            'M515 1489l-26 -1079h-170l-28 1079h224zM505 0h-204v211h204v-211z',\n            'M772 1556l-43 -579h-132l-43 579h218zM386 1556l-43 -579h-132l-43 579h218z',\n            'M1481 932h-333l-92 -376h308v-135h-343l-104 -421h-129l104 421h-270l-104 -421h-129l104 421h-298v135h333l92 376h-308v135h343l105 422h129l-105 -422h270l105 422h129l-105 -422h298v-135zM1022 934h-274l-94 -380h274z',\n            'M1160 380q0 -155 -121 -257.5t-317 -121.5v-362h-118v357q-132 1 -248 25.5t-201 63.5v198h16q19 -14 68 -40.5t95 -43.5q52 -19 121.5 -35.5t148.5 -19.5v433q-40 8 -74 15.5t-63 15.5q-163 41 -234 123.5t-71 203.5q0 148 116.5 250t325.5 119v272h118v-270 q101 -2 207 -24t178 -51v-196h-14q-75 46 -156.5 81.5t-214.5 44.5v-431q30 -5 65 -13.5t61 -13.5q149 -32 230.5 -110t81.5 -213zM604 747v413q-107 -8 -180 -58.5t-73 -140.5q0 -91 54 -137t199 -77zM971 354q0 94 -58.5 137.5t-190.5 68.5v-414q120 12 184.5 61t64.5 147 z',\n            'M884 1076q0 -224 -94.5 -333t-272.5 -109q-182 0 -275 109t-93 332q0 224 95 333t273 109q181 0 274 -110t93 -331zM1575 1489l-780 -1489h-165l780 1489h165zM2055 413q0 -224 -95 -333t-273 -109q-181 0 -274 110t-93 331q0 224 94.5 333t272.5 109q182 0 275 -109 t93 -332zM706 1076q0 172 -44.5 240t-144.5 68q-102 0 -146 -68t-44 -241t44 -240.5t146 -67.5q100 0 144.5 67.5t44.5 241.5zM1877 413q0 172 -44.5 240t-144.5 68q-102 0 -146 -68t-44 -241t44 -240.5t146 -67.5q100 0 144.5 67.5t44.5 241.5z',\n            'M792 1191q0 95 -56.5 149.5t-144.5 54.5q-92 0 -150 -61.5t-58 -150.5q0 -75 39.5 -133t170.5 -137q98 35 148.5 102.5t50.5 175.5zM986 315l-478 466q-31 -15 -62 -39.5t-62 -66.5q-28 -39 -46 -94t-18 -124q0 -146 85.5 -235.5t242.5 -89.5q93 0 184.5 45.5 t153.5 137.5zM1287 909v-96q0 -96 -25 -216t-85 -229l378 -368h-246l-229 224q-115 -142 -235 -198.5t-247 -56.5q-208 0 -345.5 121.5t-137.5 318.5q0 92 26 159t61 116q35 47 87 88.5t105 72.5q-110 72 -158.5 145t-48.5 184q0 67 26.5 127.5t79.5 110.5q50 48 130.5 78 t177.5 30q173 0 280 -87.5t107 -221.5q0 -44 -12 -99.5t-41 -99.5q-32 -49 -91 -94t-153 -77l371 -362q14 40 21 88t8 100q2 56 1.5 125t-0.5 117h195z',\n            'M386 1556l-43 -579h-136l-43 579h222z',\n            'M783 -412h-229q-177 203 -275 443t-98 541t98 541t275 443h229v-10q-81 -73 -154.5 -168.5t-136.5 -222.5q-60 -123 -97.5 -271t-37.5 -312q0 -171 36.5 -313t98.5 -270q60 -123 137 -222.5t154 -168.5v-10z',\n            'M749 572q0 -301 -98 -541t-275 -443h-229v10q77 69 154.5 168.5t136.5 222.5q62 128 98.5 270t36.5 313q0 164 -37 312t-98 271q-63 127 -136.5 222.5t-154.5 168.5v10h229q177 -203 275 -443t98 -541z',\n            'M1137 887l-64 -110l-362 213l6 -360h-129l5 360l-361 -214l-65 110l381 207l-381 207l65 110l362 -213l-6 359h129l-7 -359l363 212l64 -110l-380 -205z',\n            'M1466 572h-545v-545h-166v545h-545v160h545v545h166v-545h545v-160z',\n            'M575 285l-282 -655h-146l174 655h254z',\n            'M777 561h-624v181h624v-181z',\n            'M492 0h-239v285h239v-285z',\n            'M860 1556l-717 -1860h-173l714 1860h176z',\n            'M1167 745q0 -401 -125.5 -588.5t-389.5 -187.5q-268 0 -391.5 190t-123.5 584q0 397 125 586.5t390 189.5q268 0 391.5 -192.5t123.5 -581.5zM904 291q35 81 47.5 190.5t12.5 263.5q0 152 -12.5 264t-48.5 190q-35 77 -95.5 116t-155.5 39q-94 0 -155.5 -39t-97.5 -118 q-34 -74 -46.5 -193t-12.5 -261q0 -156 11 -261t47 -188q33 -78 93.5 -119t160.5 -41q94 0 156 39t96 118z',\n            'M1084 0h-806v152h310v998h-310v136q63 0 135 10.5t109 30.5q46 25 72.5 63.5t30.5 103.5h155v-1342h304v-152z',\n            'M1169 0h-1008v209q105 90 210.5 180t196.5 179q192 186 263 295.5t71 236.5q0 116 -76.5 181.5t-213.5 65.5q-91 0 -197 -32t-207 -98h-10v210q71 35 189.5 64t229.5 29q229 0 359 -110.5t130 -299.5q0 -85 -21.5 -158.5t-63.5 -139.5q-39 -62 -91.5 -122t-127.5 -133 q-107 -105 -221 -203.5t-213 -182.5h801v-171z',\n            'M1038 717q48 -43 79 -108t31 -168q0 -102 -37 -187t-104 -148q-75 -70 -176.5 -103.5t-222.5 -33.5q-124 0 -244 29.5t-197 64.5v209h15q85 -56 200 -93t222 -37q63 0 134 21t115 62q46 44 68.5 97t22.5 134q0 80 -25.5 132.5t-70.5 82.5q-45 31 -109 42.5t-138 11.5h-90 v166h70q152 0 242.5 63.5t90.5 185.5q0 54 -23 94.5t-64 66.5q-43 26 -92 36t-111 10q-95 0 -202 -34t-202 -96h-10v209q71 35 189.5 64.5t229.5 29.5q109 0 192 -20t150 -64q72 -48 109 -116t37 -159q0 -124 -87.5 -216.5t-206.5 -116.5v-14q48 -8 110 -33.5t105 -63.5z ',\n            'M1203 419h-221v-419h-192v419h-713v230l721 840h184v-910h221v-160zM790 579v672l-577 -672h577z',\n            'M1157 473q0 -104 -38 -199t-104 -160q-72 -70 -171.5 -107.5t-230.5 -37.5q-122 0 -235 25.5t-191 61.5v211h14q82 -52 192 -88.5t216 -36.5q71 0 137.5 20t118.5 70q44 43 66.5 103t22.5 139q0 77 -26.5 130t-73.5 85q-52 38 -126.5 53.5t-166.5 15.5q-88 0 -169.5 -12 t-140.5 -24v767h896v-175h-703v-396q43 4 88 6t78 2q121 0 212 -20.5t167 -72.5q80 -55 124 -142t44 -218z',\n            'M1191 483q0 -227 -149.5 -370.5t-366.5 -143.5q-110 0 -200 34t-159 101q-86 83 -132.5 220t-46.5 330q0 198 42.5 351t135.5 272q88 113 227 176.5t324 63.5q59 0 99 -5t81 -18v-191h-10q-28 15 -84.5 28.5t-115.5 13.5q-215 0 -343 -134.5t-149 -363.5 q84 51 165.5 77.5t188.5 26.5q95 0 167.5 -17.5t148.5 -70.5q88 -61 132.5 -154t44.5 -226zM988 475q0 93 -27.5 154t-90.5 106q-46 32 -102 42t-117 10q-85 0 -158 -20t-150 -62q-2 -22 -3 -42.5t-1 -51.5q0 -158 32.5 -249.5t89.5 -144.5q46 -44 99.5 -64.5t116.5 -20.5 q145 0 228 88.5t83 254.5z',\n            'M1173 1266l-674 -1266h-214l717 1314h-848v175h1019v-223z',\n            'M1180 415q0 -193 -150.5 -321t-378.5 -128q-242 0 -385.5 125t-143.5 320q0 124 72 224.5t203 159.5v6q-120 64 -177.5 140t-57.5 190q0 168 138 280t351 112q223 0 356 -107t133 -272q0 -101 -63 -198.5t-185 -152.5v-6q140 -60 214 -148t74 -224zM943 1142 q0 107 -82.5 170.5t-210.5 63.5q-126 0 -206.5 -60t-80.5 -162q0 -72 40.5 -124.5t122.5 -93.5q37 -18 106.5 -47t135.5 -48q99 66 137 137t38 164zM974 396q0 92 -40.5 147.5t-158.5 111.5q-47 22 -103 41t-149 53q-90 -49 -144.5 -133t-54.5 -190q0 -135 93 -223t236 -88 q146 0 233.5 75t87.5 206z',\n            'M1167 834q0 -195 -44.5 -354t-134.5 -271q-91 -114 -228 -176t-322 -62q-52 0 -98 5.5t-82 17.5v191h10q29 -15 82 -28.5t118 -13.5q221 0 346.5 132.5t145.5 365.5q-93 -56 -175 -80t-179 -24q-92 0 -166.5 18t-149.5 70q-88 61 -132.5 155t-44.5 225q0 228 150 371 t366 143q108 0 200 -33.5t161 -100.5q85 -83 131 -213.5t46 -337.5zM965 877q0 155 -32 249t-88 146q-47 45 -101 64.5t-117 19.5q-144 0 -227.5 -90t-83.5 -253q0 -95 27 -155t91 -105q45 -31 99 -41.5t120 -10.5q78 0 158 21t150 61q1 21 2.5 41.5t1.5 52.5z',\n            'M585 832h-239v285h239v-285zM585 0h-239v285h239v-285z',\n            'M585 832h-239v285h239v-285zM658 285l-282 -655h-146l174 655h254z',\n            'M1408 77l-1154 513v124l1154 513v-180l-910 -395l910 -395v-180z',\n            'M1431 782h-1186v160h1186v-160zM1431 362h-1186v160h1186v-160z',\n            'M1422 590l-1154 -513v180l910 395l-910 395v180l1154 -513v-124z',\n            'M1005 1139q0 -98 -35 -174.5t-92 -135.5q-56 -57 -129 -107t-155 -97v-225h-179v305q65 37 140.5 81t123.5 89q58 52 90 107.5t32 141.5q0 113 -76.5 168.5t-197.5 55.5q-108 0 -204.5 -34t-152.5 -69h-10v204q70 27 177.5 48.5t203.5 21.5q215 0 339.5 -104.5 t124.5 -275.5zM610 0h-204v211h204v-211z',\n            'M1870 663q0 -139 -40.5 -269t-115.5 -237h-440l-27 116q-74 -60 -142 -92t-156 -32q-168 0 -268.5 127t-100.5 355q0 227 123 362t294 135q73 0 129 -16.5t121 -49.5v48h159v-842h243q42 75 63.5 187.5t21.5 201.5q0 164 -45.5 298t-133.5 230t-218 147.5t-295 51.5 q-160 0 -292.5 -58t-227.5 -156q-96 -98 -150.5 -234.5t-54.5 -290.5q0 -165 52 -301.5t147 -233.5q99 -101 232 -152.5t290 -51.5q86 0 177.5 11t175.5 35v-142q-97 -21 -181 -28.5t-173 -7.5q-186 0 -345 63.5t-273 177.5q-115 115 -179 276t-64 356q0 185 67 344.5 t183 276.5t275 184t340 67q196 0 350 -62t260 -174t162.5 -269.5t56.5 -350.5zM1245 408v518q-63 29 -113 41.5t-107 12.5q-129 0 -202 -90t-73 -256q0 -163 58 -246.5t181 -83.5q67 0 134 31t122 73z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523z',\n            'M1323 458q0 -111 -42 -196t-113 -140q-84 -66 -184.5 -94t-255.5 -28h-528v1489h441q163 0 244 -12t155 -50q82 -43 119 -110.5t37 -161.5q0 -106 -54 -180.5t-144 -119.5v-8q151 -31 238 -132.5t87 -256.5zM990 1129q0 54 -18 91t-58 60q-47 27 -114 33.5t-166 6.5h-236 v-430h256q93 0 148 9.5t102 39.5t66.5 77.5t19.5 112.5zM1117 450q0 90 -27 143t-98 90q-48 25 -116.5 32.5t-166.5 7.5h-311v-554h262q130 0 213 13.5t136 49.5q56 39 82 89t26 129z',\n            'M1350 108q-55 -24 -99.5 -45t-116.5 -44q-61 -19 -132.5 -32.5t-157.5 -13.5q-162 0 -294.5 45.5t-230.5 142.5q-96 95 -150 241.5t-54 340.5q0 184 52 329t150 245q95 97 229.5 148t298.5 51q120 0 239.5 -29t265.5 -102v-235h-15q-123 103 -244 150t-259 47 q-113 0 -203.5 -36.5t-161.5 -113.5q-69 -75 -107.5 -189.5t-38.5 -264.5q0 -157 42.5 -270t109.5 -184q70 -74 163.5 -109.5t197.5 -35.5q143 0 268 49t234 147h14v-232z',\n            'M1458 743q0 -203 -88.5 -368t-235.5 -256q-102 -63 -227.5 -91t-330.5 -28h-376v1489h372q218 0 346.5 -31.5t217.5 -86.5q152 -95 237 -253t85 -375zM1251 746q0 175 -61 295t-182 189q-88 50 -187 69.5t-237 19.5h-186v-1149h186q143 0 249.5 21t195.5 78 q111 71 166.5 187t55.5 290z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176z',\n            'M1151 1313h-753v-420h647v-176h-647v-717h-198v1489h951v-176z',\n            'M1442 110q-122 -56 -266.5 -97.5t-279.5 -41.5q-174 0 -319 48t-247 144q-103 97 -159 242.5t-56 340.5q0 357 208.5 563.5t572.5 206.5q127 0 259.5 -30.5t285.5 -103.5v-235h-18q-31 24 -90 63t-116 65q-69 31 -156.5 51.5t-198.5 20.5q-250 0 -395.5 -160.5 t-145.5 -434.5q0 -289 152 -449.5t414 -160.5q96 0 191.5 19t167.5 49v365h-399v174h595v-639z',\n            'M1339 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152z',\n            'M746 387q0 -196 -119.5 -302t-320.5 -106q-48 0 -128 8.5t-134 20.5v185h11q41 -14 101 -29t123 -15q92 0 146.5 21t80.5 60q27 40 34.5 98t7.5 134v869h-315v158h513v-1102z',\n            'M1397 0h-257l-589 663l-148 -158v-505h-198v1489h198v-777l723 777h240l-665 -700z',\n            'M1142 0h-942v1489h198v-1313h744v-176z',\n            'M1526 0h-198v1283l-414 -873h-118l-411 873v-1283h-185v1489h270l397 -829l384 829h275v-1489z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1174 1039q0 -99 -34.5 -183.5t-96.5 -146.5q-77 -77 -182 -115.5t-265 -38.5h-198v-555h-198v1489h404q134 0 227 -22.5t165 -70.5q85 -57 131.5 -142t46.5 -215zM968 1034q0 77 -27 134t-82 93q-48 31 -109.5 44.5t-155.5 13.5h-196v-595h167q120 0 195 21.5t122 68.5 q47 48 66.5 101t19.5 119z',\n            'M1528 -365q-60 -15 -118.5 -21.5t-119.5 -6.5q-174 0 -279.5 95.5t-114.5 273.5q-24 -4 -46.5 -5.5t-43.5 -1.5q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5 q91 -100 139.5 -245t48.5 -329q0 -273 -111.5 -460t-299.5 -262q4 -114 54 -177t182 -63q41 0 97.5 12.5t80.5 22.5h27v-182zM1292 744q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1432 0h-257l-498 592h-279v-592h-198v1489h417q135 0 225 -17.5t162 -62.5q81 -51 126.5 -128.5t45.5 -196.5q0 -161 -81 -269.5t-223 -163.5zM969 1070q0 64 -22.5 113.5t-74.5 83.5q-43 29 -102 40.5t-139 11.5h-233v-562h200q94 0 164 16.5t119 61.5q45 42 66.5 96.5 t21.5 138.5z',\n            'M1282 425q0 -87 -40.5 -172t-113.5 -144q-80 -64 -186.5 -100t-256.5 -36q-161 0 -289.5 30t-261.5 89v248h14q113 -94 261 -145t278 -51q184 0 286.5 69t102.5 184q0 99 -48.5 146t-147.5 73q-75 20 -162.5 33t-185.5 33q-198 42 -293.5 143.5t-95.5 264.5 q0 187 158 306.5t401 119.5q157 0 288 -30t232 -74v-234h-14q-85 72 -223.5 119.5t-283.5 47.5q-159 0 -255.5 -66t-96.5 -170q0 -93 48 -146t169 -81q64 -14 182 -34t200 -41q166 -44 250 -133t84 -249z',\n            'M1262 1313h-532v-1313h-198v1313h-532v176h1262v-176z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891z',\n            'M1374 1489l-542 -1489h-264l-542 1489h212l467 -1310l467 1310h202z',\n            'M1933 1489l-387 -1489h-223l-313 1236l-306 -1236h-218l-394 1489h203l313 -1238l308 1238h201l311 -1250l311 1250h194z',\n            'M1336 1489l-514 -736l513 -753h-229l-406 613l-416 -613h-216l519 744l-507 745h228l401 -605l410 605h217z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211z',\n            'M1288 0h-1162v184l913 1129h-879v176h1106v-179l-922 -1134h944v-176z',\n            'M759 -392h-520v1948h520v-143h-346v-1662h346v-143z',\n            'M960 -304h-173l-717 1860h176z',\n            'M691 -392h-520v143h346v1662h-346v143h520v-1948z',\n            'M1490 684h-198l-455 627l-454 -629h-197l589 807h126z',\n            'M1306 -300h-1310v120h1310v-120z',\n            'M762 1302h-149l-273 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5z',\n            'M1168 567q0 -140 -39.5 -252t-106.5 -188q-71 -79 -156 -118.5t-187 -39.5q-95 0 -166 22.5t-140 60.5l-12 -52h-176v1556h188v-556q79 65 168 106.5t200 41.5q198 0 312.5 -152t114.5 -429zM974 562q0 200 -66 303.5t-213 103.5q-82 0 -166 -35.5t-156 -91.5v-640 q80 -36 137.5 -50t130.5 -14q156 0 244.5 102.5t88.5 321.5z',\n            'M1011 70q-94 -45 -178.5 -70t-179.5 -25q-121 0 -222 35.5t-173 107.5q-73 72 -113 182t-40 257q0 274 150.5 430t397.5 156q96 0 188.5 -27t169.5 -66v-209h-10q-86 67 -177.5 103t-178.5 36q-160 0 -252.5 -107.5t-92.5 -315.5q0 -202 90.5 -310.5t254.5 -108.5 q57 0 116 15t106 39q41 21 77 44.5t57 40.5h10v-207z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -18.5t143 -57.5v484h188v-1556zM903 275v641q-76 34 -136 47t-131 13q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640z',\n            'M786 1374h-10q-31 9 -81 18.5t-88 9.5q-121 0 -175.5 -53.5t-54.5 -193.5v-38h339v-158h-333v-959h-188v959h-127v158h127v37q0 199 99 305.5t286 106.5q63 0 113.5 -6t92.5 -14v-172z',\n            'M1091 127q0 -284 -129 -417t-397 -133q-89 0 -173.5 12.5t-166.5 35.5v192h10q46 -18 146 -44.5t200 -26.5q96 0 159 23t98 64q35 39 50 94t15 123v102q-85 -68 -162.5 -101.5t-197.5 -33.5q-200 0 -317.5 144.5t-117.5 407.5q0 144 40.5 248.5t110.5 180.5 q65 71 158 110.5t185 39.5q97 0 162.5 -19.5t138.5 -59.5l12 48h176v-990zM903 307v609q-75 34 -139.5 48.5t-128.5 14.5q-155 0 -244 -104t-89 -302q0 -188 66 -285t219 -97q82 0 164.5 31.5t151.5 84.5z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1556h188v-563q88 73 182 114t193 41q181 0 276 -109t95 -314v-725z',\n            'M387 1304h-212v195h212v-195zM375 0h-188v1117h188v-1117z',\n            'M533 1304h-212v195h212v-195zM521 -27q0 -196 -100 -296t-268 -100q-40 0 -105.5 8t-109.5 20v179h10q28 -11 75.5 -25t92.5 -14q72 0 116 20t66 60t28.5 96.5t6.5 137.5v900h-233v158h421v-1144z',\n            'M1199 0h-248l-448 489l-122 -116v-373h-188v1556h188v-998l543 559h237l-519 -516z',\n            'M375 0h-188v1556h188v-1556z',\n            'M1815 0h-188v636q0 72 -6.5 139t-27.5 107q-23 43 -66 65t-124 22q-79 0 -158 -39.5t-158 -100.5q3 -23 5 -53.5t2 -60.5v-715h-188v636q0 74 -6.5 140.5t-27.5 106.5q-23 43 -66 64.5t-124 21.5q-77 0 -154.5 -38t-154.5 -97v-834h-188v1117h188v-124q88 73 175.5 114 t186.5 41q114 0 193.5 -48t118.5 -133q114 96 208 138.5t201 42.5q184 0 271.5 -111.5t87.5 -311.5v-725z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-725z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z',\n            'M1168 572q0 -136 -39 -248.5t-110 -190.5q-66 -74 -155.5 -114.5t-189.5 -40.5q-87 0 -157.5 19t-143.5 59v-468h-188v1529h188v-117q75 63 168.5 105.5t199.5 42.5q202 0 314.5 -152.5t112.5 -423.5zM974 567q0 202 -69 302t-212 100q-81 0 -163 -35t-157 -92v-633 q80 -36 137.5 -49t130.5 -13q157 0 245 106t88 314z',\n            'M1091 -412h-188v538q-87 -75 -173 -111.5t-186 -36.5q-199 0 -317.5 153.5t-118.5 423.5q0 144 41.5 254.5t109.5 185.5q66 73 155 113t188 40q90 0 159.5 -20t141.5 -59l12 48h176v-1529zM903 284v632q-78 35 -138 49t-130 14q-163 0 -248 -110.5t-85 -304.5 q0 -196 68.5 -301.5t215.5 -105.5q82 0 164 35.5t153 91.5z',\n            'M882 912h-10q-42 10 -81.5 14.5t-93.5 4.5q-87 0 -168 -38.5t-156 -99.5v-793h-188v1117h188v-165q112 90 197.5 127.5t174.5 37.5q49 0 71 -2.5t66 -9.5v-193z',\n            'M983 322q0 -153 -126.5 -251t-345.5 -98q-124 0 -227.5 29.5t-173.5 64.5v211h10q89 -67 198 -106.5t209 -39.5q124 0 194 40t70 126q0 66 -38 100t-146 58q-40 9 -104.5 21t-117.5 26q-147 39 -208.5 114.5t-61.5 185.5q0 69 28.5 130t86.5 109q56 47 142.5 74.5 t193.5 27.5q100 0 202.5 -24.5t170.5 -59.5v-201h-10q-72 53 -175 89.5t-202 36.5q-103 0 -174 -39.5t-71 -117.5q0 -69 43 -104q42 -35 136 -57q52 -12 116.5 -24t107.5 -22q131 -30 202 -103q71 -74 71 -196z',\n            'M765 10q-53 -14 -115.5 -23t-111.5 -9q-171 0 -260 92t-89 295v594h-127v158h127v321h188v-321h388v-158h-388v-509q0 -88 4 -137.5t28 -92.5q22 -40 60.5 -58.5t117.5 -18.5q46 0 96 13.5t72 22.5h10v-169z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117z',\n            'M1151 1117l-452 -1117h-189l-449 1117h204l346 -889l343 889h197z',\n            'M1590 1117l-291 -1117h-174l-287 861l-285 -861h-173l-294 1117h196l205 -865l279 865h155l286 -865l194 865h189z',\n            'M1152 0h-237l-317 429l-319 -429h-219l436 557l-432 560h237l315 -422l316 422h220l-439 -550z',\n            'M1151 1117l-652 -1529h-201l208 466l-445 1063h204l343 -828l346 828h197z',\n            'M995 0h-902v139l651 821h-637v157h871v-134l-654 -824h671v-159z',\n            'M1113 -392h-150q-179 0 -290.5 99.5t-111.5 287.5v149q0 169 -83 264.5t-254 95.5h-51v156h51q171 0 254 95.5t83 264.5v149q0 188 111.5 287.5t290.5 99.5h150v-138h-114q-136 0 -197.5 -63t-61.5 -203v-175q0 -139 -77 -233.5t-214 -149.5v-24q137 -55 214 -149.5 t77 -233.5v-175q0 -140 61.5 -203t197.5 -63h114v-138z',\n            'M552 -392h-174v1948h174v-1948z',\n            'M1127 504h-51q-171 0 -254 -95.5t-83 -264.5v-149q0 -188 -111.5 -287.5t-290.5 -99.5h-150v138h114q136 0 197.5 63t61.5 203v175q0 139 77 233.5t214 149.5v24q-137 55 -214 149.5t-77 233.5v175q0 140 -61.5 203t-197.5 63h-114v138h150q179 0 290.5 -99.5 t111.5 -287.5v-149q0 -169 83 -264.5t254 -95.5h51v-156z',\n            'M1489 927q-2 -99 -22.5 -195t-65.5 -171q-46 -77 -111 -121t-165 -44q-94 0 -167 39.5t-157 141.5q-102 125 -148 157t-96 32q-94 0 -144 -87.5t-59 -283.5h-167q2 100 22.5 194.5t64.5 171.5q43 74 112 119.5t165 45.5q93 0 166.5 -38.5t158.5 -142.5q80 -98 131 -143.5 t112 -45.5q103 0 151.5 101t51.5 270h167z',\n            '',\n            'M505 1278h-204v211h204v-211zM515 0h-224l26 1079h170z',\n            'M1120 74q-71 -30 -161 -53.5t-194 -26.5v-355h-118v359q-227 21 -357.5 165t-130.5 394q0 242 133.5 391.5t354.5 171.5v355h118v-351q104 -3 197 -25t158 -53v-203h-11q-55 44 -142 85t-202 50v-839q120 10 206.5 52.5t137.5 83.5h11v-201zM647 142v834 q-135 -20 -216 -125t-81 -294q0 -181 76 -286t221 -129z',\n            'M1163 0h-1026v207q118 32 169.5 126.5t51.5 279.5h-176v138h176v310q0 200 126.5 328.5t331.5 128.5q105 0 181 -17t140 -34v-206h-10q-62 42 -138 66t-162 24q-140 0 -209.5 -82.5t-69.5 -226.5v-291h415v-138h-415v-61q0 -126 -62 -219.5t-160 -150.5v-11h837v-171z ',\n            'M1168 257l-110 -110l-236 234q-44 -26 -81 -37t-89 -11q-46 0 -89.5 12.5t-79.5 35.5l-236 -236l-109 113l233 234q-23 37 -35 81.5t-12 87.5q0 52 11 88.5t37 79.5l-234 237l111 110l235 -235q36 23 79.5 35.5t88.5 12.5q44 0 88 -12t81 -35l234 234l113 -109l-235 -237 q24 -38 36 -79.5t12 -89.5q0 -45 -12.5 -89t-35.5 -80zM832 661q0 73 -52.5 129t-127.5 56q-73 0 -126.5 -55t-53.5 -130q0 -74 52.5 -129.5t127.5 -55.5q73 0 126.5 54.5t53.5 130.5z',\n            'M1191 1489l-448 -831v-94h372v-138h-370v-426h-188v426h-370v138h372v73l-451 852h212l332 -659l336 659h203z',\n            'M552 758h-174v798h174v-798zM552 -392h-174v798h174v-798z',\n            'M1128 601q0 -106 -59 -187t-158 -136v-7q97 -46 141 -118.5t44 -162.5q0 -77 -33 -146t-98 -119q-72 -56 -169 -83t-221 -27q-87 0 -170.5 13.5t-175.5 44.5v194h10q79 -37 169 -62t198 -25q134 0 215 48.5t81 135.5q0 56 -19.5 88.5t-64.5 57.5q-41 23 -113 41.5 t-154 38.5q-214 52 -296 133q-83 81 -83 210q0 98 57 182.5t159 141.5v7q-101 48 -143 121t-42 162q0 81 32 146.5t99 117.5q64 50 163.5 79t227.5 29q87 0 171 -14t175 -43v-194h-10q-58 27 -152.5 57t-215.5 30q-127 0 -211.5 -46t-84.5 -133q0 -57 21.5 -92.5t64.5 -58.5 t109 -41.5t157 -39.5q200 -46 290 -125q89 -79 89 -218zM881 399q28 33 43 65.5t15 90.5q0 51 -16.5 86t-45.5 58q-28 24 -67 39.5t-83 27.5q-39 11 -85.5 21.5t-116.5 30.5q-18 -9 -49 -31.5t-53 -46.5q-24 -26 -43 -69t-19 -92q0 -50 15.5 -85t44.5 -59q27 -23 67.5 -39 t84.5 -27q38 -10 86 -22t115 -31q20 11 53 34.5t54 48.5z',\n            'M958 1304h-199v195h199v-195zM545 1304h-199v195h199v-195z',\n            'M1889 655q0 -358 -253.5 -611.5t-611.5 -253.5t-611.5 253.5t-253.5 611.5t253.5 611.5t611.5 253.5t611.5 -253.5t253.5 -611.5zM1773 655q0 310 -219.5 532t-529.5 222t-529.5 -222t-219.5 -532t219.5 -532t529.5 -222t529.5 222t219.5 532zM1375 258 q-86 -39 -165.5 -58.5t-157.5 -19.5q-227 0 -359 123t-132 357q0 225 134.5 354t356.5 129q89 0 175 -24t148 -52v-181h-16q-54 40 -138.5 75t-173.5 35q-142 0 -221.5 -85.5t-79.5 -250.5q0 -159 76.5 -246t224.5 -87q83 0 161.5 29t150.5 81h16v-179z',\n            'M944 554h-170v94q-28 -20 -52.5 -38.5t-68.5 -37.5q-45 -20 -85.5 -30.5t-113.5 -10.5q-128 0 -215.5 85t-87.5 217q0 106 46.5 173.5t123.5 103.5q78 36 197.5 51.5t255.5 21.5v18q0 53 -18 85t-51 51q-34 18 -77.5 23t-91.5 5q-84 0 -168 -24t-123 -38h-14v172 q45 13 137 29t169 16q217 0 312 -84.5t95 -243.5v-638zM774 796v245q-69 -4 -160.5 -12t-145.5 -23q-64 -18 -103 -56.5t-39 -106.5q0 -76 45.5 -114t139.5 -38q82 0 147.5 33.5t115.5 71.5z',\n            'M1146 191l-528 419v85l528 418v-188l-357 -273l357 -273v-188zM716 162l-550 446v89l550 445v-196l-371 -294l371 -294v-196z',\n            'M1456 57h-171v545h-1075v160h1246v-705z',\n            'M777 561h-624v181h624v-181z',\n            'M1889 655q0 -358 -253.5 -611.5t-611.5 -253.5t-611.5 253.5t-253.5 611.5t253.5 611.5t611.5 253.5t611.5 -253.5t253.5 -611.5zM1773 655q0 310 -219.5 532t-529.5 222t-529.5 -222t-219.5 -532t219.5 -532t529.5 -222t529.5 222t219.5 532zM1581 215h-223l-331 355 h-162v-355h-165v915h312q94 0 155 -8t120 -39q63 -34 92.5 -82.5t29.5 -121.5q0 -97 -56.5 -161.5t-155.5 -102.5zM1229 868q0 36 -14 64t-47 46q-31 17 -66 22t-88 5h-149v-309h127q62 0 107 9.5t74 32.5q31 25 43.5 55t12.5 75z',\n            'M1306 1668h-1305l-5 120h1310v-120z',\n            'M956 1116q0 -168 -116 -284t-285 -116t-285 115.5t-116 284.5q0 168 116 284t285 116q170 0 285.5 -116t115.5 -284zM791 1116q0 102 -67 171.5t-169 69.5t-169 -69.5t-67 -171.5q0 -104 68.5 -172.5t167.5 -68.5q102 0 169 70t67 171z',\n            'M1461 179h-1246v158h540v422h-540v158h540v545h166v-545h540v-158h-540v-422h540v-158z',\n            'M967 566h-760v156q100 62 183.5 117t134.5 96q131 103 168 154.5t37 135.5q0 69 -53.5 107t-143.5 38q-89 0 -175 -30.5t-134 -61.5h-13v180q71 26 158.5 43.5t174.5 17.5q180 0 273.5 -78.5t93.5 -203.5q0 -99 -48.5 -174.5t-163.5 -165.5q-55 -43 -132.5 -94 t-143.5 -92h544v-145z',\n            'M956 817q0 -75 -33 -131.5t-89 -90.5q-57 -35 -131 -51.5t-163 -16.5q-94 0 -176.5 15t-156.5 43v179h14q41 -36 138.5 -65.5t190.5 -29.5q100 0 166.5 35.5t66.5 110.5q0 85 -59 115t-171 30h-143v141h128q112 0 165.5 38.5t53.5 106.5q0 61 -49.5 96.5t-153.5 35.5 q-77 0 -174.5 -31t-141.5 -67h-14v178q74 27 160.5 44.5t176.5 17.5q175 0 271.5 -68t96.5 -174q0 -89 -55 -146t-144 -83v-8q95 -17 160.5 -72.5t65.5 -151.5z',\n            'M963 1676l-273 -374h-149l179 374h243z',\n            'M1124 0h-178l-10 118q-59 -65 -123.5 -102t-155.5 -37q-86 0 -149.5 35t-129.5 99v-525h-188v1529h188v-838q32 -39 109.5 -80t168.5 -41q93 0 159.5 33.5t120.5 93.5v832h188v-1117z',\n            'M1106 -363h-148v1722h-214v-1722h-149v956q-206 5 -332 129t-126 328q0 207 130 323t373 116h466v-1852z',\n            'M492 511h-239v283h239v-283z',\n            'M880 -89q0 -162 -91.5 -248t-237.5 -86q-37 0 -95 7t-103 19v160h9q26 -10 70 -23t94 -13q104 0 153 39t49 127q0 29 -3 65.5t-6 61.5h153q2 -19 5 -45t3 -64z',\n            'M914 566h-615v122h234v568h-242v112q45 0 99 6.5t84 18.5q37 16 59 38t25 62h135v-805h221v-122z',\n            'M996 1025q0 -235 -122 -364.5t-315 -129.5q-201 0 -319.5 132.5t-118.5 361.5t118.5 362t319.5 133q193 0 315 -130t122 -365zM814 1025q0 172 -67.5 258t-187.5 86q-122 0 -189 -87t-67 -257t67 -256.5t189 -86.5q120 0 187.5 85.5t67.5 257.5z',\n            'M1154 608l-550 -446v196l371 294l-371 294v196l550 -445v-89zM702 610l-528 -419v188l357 273l-357 273v188l528 -418v-85z',\n            'M545 565h-165v681h-209v117q102 0 165 22t72 108h137v-928zM1410 1489l-780 -1489h-165l780 1489h165zM1857 220h-163v-220h-150v220h-465v185l466 539h149v-591h163v-133zM1548 353v400l-353 -400h353z',\n            'M545 565h-165v681h-209v117q102 0 165 22t72 108h137v-928zM1410 1489l-780 -1489h-165l780 1489h165zM1955 0h-688v148q91 69 158 121t106 89q109 103 141 157.5t32 136.5q0 70 -44 107t-120 37q-70 0 -141.5 -30t-112.5 -62h-15v179q65 27 140.5 44t152.5 17 q157 0 241.5 -79t84.5 -201q0 -93 -41 -167t-147 -168q-49 -43 -119.5 -96t-125.5 -94h498v-139z',\n            'M793 826q0 -71 -30 -127t-78 -90q-53 -37 -114.5 -53t-140.5 -16q-82 0 -153.5 15t-136.5 43v175h17q37 -35 114 -64.5t156 -29.5q84 0 139 36.5t55 108.5q0 83 -50 112.5t-141 29.5h-140v139h125q87 0 134.5 38t47.5 104q0 60 -41 95.5t-128 35.5q-66 0 -142.5 -31 t-113.5 -66h-17v175q64 27 139 44t154 17q152 0 237 -70t85 -168q0 -87 -48.5 -143.5t-125.5 -82.5v-8q80 -16 138.5 -70.5t58.5 -148.5zM1500 1489l-780 -1489h-165l780 1489h165zM1913 220h-163v-220h-150v220h-465v185l466 539h149v-591h163v-133zM1604 353v400 l-353 -400h353z',\n            'M712 1278h-204v211h204v-211zM958 40q-83 -30 -176 -50t-205 -20q-215 0 -339.5 104.5t-124.5 275.5q0 98 34.5 173t93.5 137q58 62 136.5 112.5t146.5 91.5v225h179v-305q-60 -33 -139 -81.5t-125 -88.5q-54 -47 -88 -109t-34 -140q0 -113 76.5 -168.5t197.5 -55.5 q103 0 201.5 33t155.5 70h10v-204z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM862 1675h-149l-273 374h243z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM955 2049l-273 -374h-149l179 374h243z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1033 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1119 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5 t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1005 1677h-199v195h199v-195zM592 1677h-199v195h199v-195z',\n            'M1374 0h-211l-148 415h-640l-148 -415h-201l519 1407q-89 44 -142.5 123.5t-53.5 181.5q0 143 102 240t248 97q147 0 248.5 -97t101.5 -240q0 -100 -52.5 -181.5t-141.5 -123.5zM899 1710q0 86 -57 143.5t-143 57.5t-143 -58t-57 -143q0 -86 57.5 -143.5t142.5 -57.5 q86 0 143 57.5t57 143.5zM953 585l-258 715l-259 -715h517z',\n            'M1901 0h-944v556h-524l-212 -556h-207l594 1489h1293v-176h-749v-408h749v-176h-749v-553h749v-176zM957 723v601h-219l-239 -601h458z',\n            'M1350 108q-55 -24 -99.5 -45t-116.5 -44q-11 -3 -24 -7.5t-31 -7.5q2 -19 3.5 -44.5t1.5 -48.5q0 -162 -93.5 -248t-240.5 -86q-38 0 -97.5 7t-104.5 19v162h9q26 -10 71.5 -24t95.5 -14q106 0 155 40t49 126q0 19 -1 41.5t-3 42.5q-19 -2 -40.5 -3t-39.5 -1 q-162 0 -294.5 45.5t-230.5 142.5q-96 95 -150 241.5t-54 340.5q0 184 52 329t150 245q95 97 229.5 148t298.5 51q120 0 239.5 -29t265.5 -102v-235h-15q-123 103 -244 150t-259 47q-113 0 -203.5 -36.5t-161.5 -113.5q-69 -75 -107.5 -189.5t-38.5 -264.5q0 -157 42.5 -270 t109.5 -184q70 -74 163.5 -109.5t197.5 -35.5q143 0 268 49t234 147h14v-232z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM822 1675h-149l-273 374h243z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM993 2049l-273 -374h-149l179 374h243z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM1031 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM1038 1677h-199v195h199v-195zM625 1677h-199v195h199v-195z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM568 1675h-149l-273 374h243z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM725 2049l-273 -374h-149l179 374h243z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM776 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM738 1677h-199v195h199v-195zM325 1677h-199v195h199v-195z',\n            'M1468 743q0 -203 -88.5 -368t-235.5 -256q-102 -63 -227.5 -91t-330.5 -28h-376v740h-196v143h196v606h372q218 0 347 -31.5t217 -86.5q152 -95 237 -253t85 -375zM1261 746q0 175 -61 295t-182 189q-88 50 -187 69.5t-237 19.5h-188v-436h361v-143h-361v-570h188 q143 0 249.5 21t195.5 78q111 71 166.5 187t55.5 290z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489zM1208 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5 q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM932 1675h-149l-273 374h243z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1083 2049l-273 -374h-149l179 374h243z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1136 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1207 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228 t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1307 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1289 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1108 1677h-199v195h199v-195zM695 1677h-199v195h199v-195z',\n            'M1385 216l-111 -111l-436 440l-436 -440l-111 111l440 436l-440 436l111 111l436 -440l436 440l111 -111l-440 -436z',\n            'M1498 744q0 -184 -49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-115 0 -215.5 29t-179.5 84l-159 -228h-132l205 294q-101 100 -155.5 250t-54.5 346q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q118 0 215 -27.5t179 -82.5l142 201h132 l-188 -268q101 -100 156.5 -248.5t55.5 -350.5zM1097 1260q-57 46 -129 68.5t-161 22.5q-110 0 -200 -38.5t-156 -116.5q-64 -76 -98.5 -190.5t-34.5 -261.5q0 -140 29.5 -252t87.5 -188zM1295 744q0 139 -30 253t-88 189l-664 -957q60 -45 132.5 -68t161.5 -23 q110 0 201.5 40t153.5 116q67 82 100 194.5t33 255.5z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM932 1675h-149l-273 374h243z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1073 2049l-273 -374h-149l179 374h243z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1084 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1056 1677h-199v195h199v-195zM643 1677h-199v195h199v-195z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM935 2049l-273 -374h-149l179 374h243z',\n            'M1174 787q0 -92 -35 -176.5t-95 -141.5q-78 -75 -187.5 -111t-260.5 -36h-198v-322h-198v1489h198v-270h205q133 0 230 -22.5t164 -66.5q83 -53 130 -138t47 -205zM968 782q0 72 -26 125.5t-82 88.5q-48 30 -112 42.5t-154 12.5h-196v-563h167q119 0 195 20.5t123 65.5 q44 41 64.5 92t20.5 116z',\n            'M1165 481q0 -214 -135.5 -359.5t-354.5 -145.5q-44 0 -101.5 7.5t-93.5 20.5v165h10q42 -24 91.5 -33t105.5 -9q74 0 129 29t88 78q35 52 50.5 115.5t15.5 139.5q0 166 -105.5 250.5t-303.5 84.5v150q157 0 234 59.5t77 188.5q0 35 -11 68t-41 64q-27 29 -71 46.5 t-105 17.5q-57 0 -103 -14.5t-86 -53.5q-37 -36 -59.5 -102t-22.5 -161v-1087h-188v1080q0 124 36 215.5t100 153.5q60 58 149.5 87.5t183.5 29.5q183 0 297.5 -87t114.5 -238q0 -112 -71 -201t-184 -121v-9q164 -37 259 -148.5t95 -280.5z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM738 1302h-149l-273 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM934 1676l-273 -374h-149l179 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM961 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM1038 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5 q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM926 1304h-199v195h199v-195zM513 1304h-199v195h199v-195z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM956 1630q0 -143 -102 -242t-248 -99q-144 0 -247 98.5t-103 242.5 q0 143 102 241t248 98q147 0 248.5 -98t101.5 -241zM811 1630q0 86 -58.5 145.5t-146.5 59.5t-146.5 -59t-58.5 -146t59 -146t146 -59q88 0 146.5 59t58.5 146z',\n            'M1855 559h-819q0 -114 30 -195t85 -133q52 -48 123 -70.5t157 -22.5q111 0 217.5 41.5t172.5 93.5h12v-205q-78 -35 -184.5 -64.5t-215.5 -29.5q-166 0 -284.5 52t-194.5 155q-21 -19 -67 -59t-96 -68q-63 -36 -137 -59.5t-189 -23.5q-150 0 -255.5 97t-105.5 249 q0 124 54 200.5t155 118.5q95 39 241 53t308 17v61q0 65 -23 107.5t-64 65.5q-40 23 -96 31.5t-116 8.5q-79 0 -168.5 -21t-179.5 -57h-13v191q55 15 158 34t204 19q159 0 264.5 -46.5t162.5 -137.5q69 82 170 134t226 52q217 0 342.5 -128t125.5 -379v-82zM1673 703 q-5 68 -23.5 119t-50.5 88q-34 39 -88.5 61t-133.5 22q-133 0 -223 -75t-115 -215h634zM894 298q-20 53 -30.5 119t-10.5 141q-105 -3 -201 -7.5t-178 -25.5q-79 -20 -127.5 -65.5t-48.5 -128.5q0 -95 58 -141t176 -46q99 0 195.5 43t166.5 111z',\n            'M1011 70q-33 -15 -71.5 -30.5t-67.5 -24.5q3 -19 5.5 -47.5t2.5 -56.5q0 -162 -91.5 -248t-237.5 -86q-37 0 -95 7t-103 19v160h9q26 -10 70 -23t94 -13q104 0 153 39t49 127q0 22 -1.5 45t-3.5 43q-16 -2 -30.5 -4t-39.5 -2q-121 0 -222 35.5t-173 107.5 q-73 72 -113 182t-40 257q0 274 150.5 430t397.5 156q96 0 188.5 -27t169.5 -66v-209h-10q-86 67 -177.5 103t-178.5 36q-160 0 -252.5 -107.5t-92.5 -315.5q0 -202 90.5 -310.5t254.5 -108.5q57 0 116 15t106 39q41 21 77 44.5t57 40.5h10v-207z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM759 1302h-149l-273 374h243z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM960 1676l-273 -374h-149l179 374h243z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM986 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM951 1304h-199v195h199v-195zM538 1304h-199v195h199v-195z',\n            'M375 0h-188v1117h188v-1117zM401 1302h-149l-273 374h243z',\n            'M375 0h-188v1117h188v-1117zM582 1676l-273 -374h-149l179 374h243z',\n            'M572 1297h-151l-143 267l-142 -267h-147l178 379h227zM375 0h-188v1117h188v-1117z',\n            'M557 1304h-189v195h189v-195zM194 1304h-189v195h189v-195zM375 0h-188v1117h188v-1117z',\n            'M1137 637q0 -324 -142 -496t-383 -172q-229 0 -367.5 135t-138.5 380q0 226 137 358t339 132q108 0 185.5 -26.5t163.5 -79.5q-32 112 -99.5 219t-154.5 181l-264 -162l-66 97l237 142q-84 67 -156 107.5t-165 87.5v16h295q35 -25 84 -58.5t86 -59.5l210 128l66 -97 l-186 -109q153 -147 236 -325.5t83 -397.5zM847 226q49 59 75 143.5t26 234.5q0 32 -1.5 59.5t-3.5 57.5q-75 45 -157.5 66.5t-168.5 21.5q-147 0 -231.5 -87.5t-84.5 -239.5q0 -180 84.5 -267t227.5 -87q66 0 127.5 22t106.5 76z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-725zM1075 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5 t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M732 1302h-149l-273 374h243z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M933 1676l-273 -374h-149l179 374h243z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M963 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M1038 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M928 1304h-199v195h199v-195zM515 1304h-199v195h199v-195z',\n            'M957 1022h-238v275h238v-275zM1466 572h-1256v160h1256v-160zM957 7h-238v275h238v-275z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-84 0 -155.5 21t-130.5 60l-133 -198h-110l171 256q-75 77 -116.5 190t-41.5 260q0 273 139.5 431.5t376.5 158.5q87 0 158 -22t125 -57l116 172h111l-155 -231q76 -76 118 -188t42 -264zM813 930q-37 29 -86.5 43.5t-104.5 14.5 q-155 0 -240 -110t-85 -320q0 -97 17 -171t52 -128zM946 558q0 97 -17.5 173t-51.5 130l-448 -671q39 -31 86.5 -46t106.5 -15q150 0 237 108.5t87 320.5z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM764 1302h-149l-273 374h243z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM945 1676l-273 -374h-149l179 374h243z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM985 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM955 1304h-199v195h199v-195zM542 1304h-199v195h199v-195z',\n            'M1151 1117l-652 -1529h-201l208 466l-445 1063h204l343 -828l346 828h197zM928 1676l-273 -374h-149l179 374h243z',\n            'M1168 572q0 -136 -39 -248.5t-110 -190.5q-66 -74 -155.5 -114.5t-189.5 -40.5q-87 0 -157.5 19t-143.5 59v-468h-188v1968h188v-556q75 63 168.5 105.5t199.5 42.5q202 0 314.5 -152.5t112.5 -423.5zM974 567q0 202 -69 302t-212 100q-81 0 -163 -35t-157 -92v-633 q80 -36 137.5 -49t130.5 -13q157 0 245 106t88 314z',\n            'M585 832h-239v285h239v-285zM658 285l-282 -655h-146l174 655h254z',\n            'M773 1676l-49 -384h-145l-49 384h243z',\n            'M765 1676l-49 -384h-128l-49 384h226zM1048 1304h-191v195h191v-195zM447 1304h-191v195h191v-195z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM250 1489l-49 -384h-145l-49 384h243z',\n            'M585 832h-239v285h239v-285z',\n            'M1424 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1582 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489zM243 1489l-49 -384h-145l-49 384h243z',\n            'M968 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1501 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1483 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1537 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1751 0h-576v387q60 38 119.5 82t103.5 101q45 59 71 138.5t26 185.5q0 206 -127 330.5t-347 124.5t-347 -124.5t-127 -330.5q0 -106 26 -185.5t71 -138.5q45 -57 104 -101t119 -82v-387h-576v174h410v124q-157 90 -258.5 246t-101.5 350q0 276 187.5 451t492.5 175 t492.5 -175t187.5 -451q0 -194 -101.5 -350t-258.5 -246v-124h410v-174zM243 1489l-49 -384h-145l-49 384h243z',\n            'M375 0h-188v1117h188v-1117zM379 1676l-56 -384h-84l-56 384h196zM615 1304h-171v195h171v-195zM118 1304h-171v195h171v-195z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523z',\n            'M1323 458q0 -111 -42 -196t-113 -140q-84 -66 -184.5 -94t-255.5 -28h-528v1489h441q163 0 244 -12t155 -50q82 -43 119 -110.5t37 -161.5q0 -106 -54 -180.5t-144 -119.5v-8q151 -31 238 -132.5t87 -256.5zM990 1129q0 54 -18 91t-58 60q-47 27 -114 33.5t-166 6.5h-236 v-430h256q93 0 148 9.5t102 39.5t66.5 77.5t19.5 112.5zM1117 450q0 90 -27 143t-98 90q-48 25 -116.5 32.5t-166.5 7.5h-311v-554h262q130 0 213 13.5t136 49.5q56 39 82 89t26 129z',\n            'M1162 1313h-764v-1313h-198v1489h962v-176z',\n            'M1414 0h-1388l562 1489h264zM1147 168l-432 1147l-431 -1147h863z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176z',\n            'M1288 0h-1162v184l913 1129h-879v176h1106v-179l-922 -1134h944v-176z',\n            'M1339 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1120 713h-627v179h627v-179z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152z',\n            'M1397 0h-257l-589 663l-148 -158v-505h-198v1489h198v-777l723 777h240l-665 -700z',\n            'M1378 0h-213l-468 1285l-468 -1285h-203l556 1489h240z',\n            'M1526 0h-198v1283l-414 -873h-118l-411 873v-1283h-185v1489h270l397 -829l384 829h275v-1489z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489z',\n            'M1215 1313h-1101v176h1101v-176zM1163 729h-997v176h997v-176zM1215 0h-1101v176h1101v-176z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1339 0h-198v1313h-743v-1313h-198v1489h1139v-1489z',\n            'M1174 1039q0 -99 -34.5 -183.5t-96.5 -146.5q-77 -77 -182 -115.5t-265 -38.5h-198v-555h-198v1489h404q134 0 227 -22.5t165 -70.5q85 -57 131.5 -142t46.5 -215zM968 1034q0 77 -27 134t-82 93q-48 31 -109.5 44.5t-155.5 13.5h-196v-595h167q120 0 195 21.5t122 68.5 q47 48 66.5 101t19.5 119z',\n            'M1280 0h-1162v184l620 600l-600 526v179h1096v-176h-832l586 -506v-26l-630 -605h922v-176z',\n            'M1262 1313h-532v-1313h-198v1313h-532v176h1262v-176z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211z',\n            'M1572 755q0 -140 -44.5 -248.5t-123.5 -181.5q-85 -79 -207 -125.5t-260 -49.5v-166h-197v166q-134 3 -257 48t-210 127q-79 74 -123.5 182t-44.5 248q0 136 43 238t119 178q81 81 202.5 128t270.5 51v155h197v-155q148 -3 271 -52t202 -127q75 -73 118.5 -177t43.5 -239 zM1366 763q0 99 -32 182t-91 140q-58 56 -129 82t-177 28v-890q94 2 171 30.5t127 75.5q65 60 98 147t33 205zM740 305v890q-106 -1 -177 -28t-129 -82t-90.5 -140t-32.5 -182q0 -112 33.5 -203t97.5 -149q49 -45 126.5 -75t171.5 -31z',\n            'M1336 1489l-514 -736l513 -753h-229l-406 613l-416 -613h-216l519 744l-507 745h228l401 -605l410 605h217z',\n            'M1604 910q0 -157 -40.5 -264.5t-117.5 -174.5q-80 -69 -192.5 -104t-263.5 -45v-322h-197v322q-154 11 -267 47t-188 102q-78 69 -118.5 176t-40.5 263v579h198v-602q0 -109 29.5 -180t81.5 -115q53 -45 130 -68.5t175 -30.5v996h197v-996q97 8 175 30.5t131 68.5 q56 49 83 115.5t27 179.5v602h198v-579z',\n            'M1568 0h-576v387q60 38 119.5 82t103.5 101q45 59 71 138.5t26 185.5q0 206 -127 330.5t-347 124.5t-347 -124.5t-127 -330.5q0 -106 26 -185.5t71 -138.5q45 -57 104 -101t119 -82v-387h-576v174h410v124q-157 90 -258.5 246t-101.5 350q0 276 187.5 451t492.5 175 t492.5 -175t187.5 -451q0 -194 -101.5 -350t-258.5 -246v-124h410v-174z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM738 1677h-199v195h199v-195zM325 1677h-199v195h199v-195z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM939 1677h-199v195h199v-195zM526 1677h-199v195h199v-195z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -22t143 -61v52h188v-1117zM903 275v636q-76 34 -136 49.5t-131 15.5q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5zM743 1676l-49 -384h-145l-49 384h243z',\n            'M1006 64q-107 -48 -210 -69t-218 -21q-79 0 -161 16t-152 56q-69 39 -112.5 102.5t-43.5 157.5q0 96 56.5 168t177.5 110v7q-91 24 -145 90t-54 158q0 89 47.5 147.5t112.5 92.5q64 33 145 49t160 16q98 0 180 -16.5t172 -44.5v-207h-13q-66 51 -163.5 79t-197.5 28 q-45 0 -84 -5.5t-81 -25.5q-35 -15 -60.5 -48.5t-25.5 -77.5q0 -61 28 -95t76 -49q45 -14 97 -15.5t105 -1.5h111v-166h-158q-62 0 -112 -4.5t-92 -21.5q-41 -17 -65.5 -54t-24.5 -96q0 -53 26 -90t67 -58q37 -19 87.5 -29t106.5 -10q102 0 218 36t187 98h13v-206zM721 1676 l-49 -384h-145l-49 384h243z',\n            'M1119 -412h-188v1048q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-1137zM802 1676l-49 -384h-145l-49 384h243z',\n            'M375 0h-188v1117h188v-1117zM403 1676l-49 -384h-145l-49 384h243z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM760 1676l-49 -384h-128l-49 384h226zM1043 1304h-191 v195h191v-195zM442 1304h-191v195h191v-195z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -22t143 -61v52h188v-1117zM903 275v636q-76 34 -136 49.5t-131 15.5q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5z',\n            'M1165 444q0 -202 -134.5 -334t-339.5 -132q-79 0 -167 22t-151 64v-476h-188v1490q0 224 126.5 351t349.5 127q90 0 164.5 -21.5t133.5 -67.5q57 -43 91 -112t34 -160q0 -127 -69.5 -221.5t-196.5 -131.5v-17q159 -26 253 -125.5t94 -255.5zM971 449q0 89 -34.5 144.5 t-92.5 86.5q-59 32 -132 43t-146 11h-36v160h36q66 0 131 14.5t104 44.5q46 34 68.5 83t22.5 134q0 112 -69 170t-178 58q-73 0 -125 -26.5t-85 -70.5q-32 -44 -47 -102.5t-15 -120.5v-862q66 -38 141 -53.5t147 -15.5q149 0 229.5 78.5t80.5 223.5z',\n            'M1151 1117l-457 -1061v-468h-188v468l-445 1061h204l343 -828l346 828h197z',\n            'M1139 551q0 -272 -138.5 -427t-376.5 -155q-241 0 -379.5 151.5t-138.5 413.5q0 141 43 239.5t107 162.5q69 72 159 113t182 58q-76 63 -166 130.5t-192 139.5v179h810v-158h-561v-10q68 -46 179 -124t204 -162q150 -136 209 -261.5t59 -289.5zM945 551q0 135 -55 249 t-165 200q-66 -8 -138.5 -32t-138.5 -77q-63 -50 -105.5 -137t-42.5 -214q0 -201 85 -305t241 -104q153 0 236 105.5t83 314.5z',\n            'M1006 64q-107 -48 -210 -69t-218 -21q-79 0 -161 16t-152 56q-69 39 -112.5 102.5t-43.5 157.5q0 96 56.5 168t177.5 110v7q-91 24 -145 90t-54 158q0 89 47.5 147.5t112.5 92.5q64 33 145 49t160 16q98 0 180 -16.5t172 -44.5v-207h-13q-66 51 -163.5 79t-197.5 28 q-45 0 -84 -5.5t-81 -25.5q-35 -15 -60.5 -48.5t-25.5 -77.5q0 -61 28 -95t76 -49q45 -14 97 -15.5t105 -1.5h111v-166h-158q-62 0 -112 -4.5t-92 -21.5q-41 -17 -65.5 -54t-24.5 -96q0 -53 26 -90t67 -58q37 -19 87.5 -29t106.5 -10q102 0 218 36t187 98h13v-206z',\n            'M922 75q32 -40 46 -85.5t14 -85.5q0 -84 -45 -168.5t-112 -147.5h-179v14q90 79 128 138.5t38 128.5q0 57 -30.5 95t-77.5 38h-145q-229 0 -340 116t-111 345q0 140 46 268t124 247q75 112 173.5 214.5t206.5 196.5v9h-460v158h744v-135q-117 -78 -231.5 -181 t-204.5 -223q-89 -117 -146 -257t-57 -283q0 -34 3 -70t15 -76q10 -38 34.5 -75.5t63.5 -61.5q36 -22 96.5 -24.5t116.5 -2.5h86q71 0 122 -26t82 -66z',\n            'M1119 -412h-188v1048q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-1137z',\n            'M1141 768q0 -190 -23 -316.5t-59 -210.5q-58 -135 -163 -203.5t-257 -68.5t-257 68.5t-163 203.5q-37 84 -59.5 210.5t-22.5 316.5q0 174 22.5 305.5t60.5 214.5q57 130 162.5 199t256.5 69t256.5 -69t162.5 -199q37 -84 60 -215t23 -305zM952 858q-4 143 -28.5 250 t-56.5 161q-41 70 -95 98.5t-133 28.5t-133 -28.5t-95 -98.5q-34 -55 -57.5 -161.5t-27.5 -249.5h626zM952 697h-626q0 -142 23 -258.5t59 -178.5q40 -69 96 -100t135 -31t135 31t96 100q36 62 59 178.5t23 258.5z',\n            'M375 0h-188v1117h188v-1117z',\n            'M1192 0h-248l-451 489l-112 -109v-380h-188v1117h188v-550l384 417q72 79 135.5 107t126.5 28q28 0 58 -1t37 -1v-166h-11q-16 2 -39.5 3t-36.5 1q-47 0 -85.5 -23.5t-67.5 -56.5l-251 -271z',\n            'M1151 0h-205l-328 829l-361 -829h-196l465 1056l-215 500h211z',\n            'M1125 0h-186v118q-74 -78 -141.5 -108.5t-145.5 -30.5q-75 0 -135 27t-144 107v-525h-188v1529h188v-838q32 -39 111 -80t170 -41q93 0 161 33.5t122 93.5v832h188v-1117z',\n            'M1151 1117l-452 -1117h-189l-449 1117h204l346 -889l343 889h197z',\n            'M1041 -96q0 -85 -45.5 -169t-111.5 -147h-180v14q92 79 129.5 139t37.5 128q0 55 -29 94t-75 39h-140q-140 0 -232.5 27t-155.5 84q-66 60 -100.5 135.5t-34.5 163.5q0 78 25 144t73 119q44 49 112.5 83.5t144.5 53.5v11q-125 28 -200 110.5t-75 186.5q0 83 43.5 150.5 t133.5 125.5v6h-228v154h824v-158h-256q-68 0 -122.5 -14.5t-102.5 -48.5q-45 -32 -72 -83t-27 -118q0 -79 32.5 -128t83.5 -75q45 -23 104 -34t139 -11h170v-165h-295q-66 0 -118.5 -20t-99.5 -59q-43 -37 -68.5 -90t-25.5 -112q0 -102 37.5 -159t101.5 -82 q63 -25 139.5 -28.5t166.5 -3.5h28q68 0 119.5 -23.5t84.5 -60.5q31 -35 48 -82.5t17 -96.5z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z',\n            'M1120 0h-188v955h-559v-955h-188v1117h935v-1117z',\n            'M1172 577q0 -258 -138.5 -428.5t-360.5 -170.5q-65 0 -146.5 18t-153.5 61v-469h-188v1058q0 123 35.5 215.5t101.5 158.5q62 62 155.5 95t195.5 33q243 0 371 -147t128 -424zM978 565q0 218 -80 320t-226 102q-158 0 -228.5 -96t-70.5 -278v-403q73 -34 132.5 -48.5 t134.5 -14.5q162 0 250 111t88 307z',\n            'M1018 -96q0 -87 -47 -172t-109 -144h-177v14q86 75 124.5 135.5t38.5 131.5q0 54 -30 93.5t-75 39.5h-92q-117 0 -216 30t-174 97q-73 66 -114.5 170t-41.5 250q0 270 155.5 432t414.5 162q84 0 164 -18.5t147 -45.5v-211h-12q-94 62 -172.5 87t-146.5 25 q-166 0 -260.5 -119t-94.5 -312q0 -112 28.5 -183t78.5 -116q50 -44 114.5 -63.5t139.5 -19.5h100q115 0 186 -76.5t71 -186.5z',\n            'M1137 558q0 -281 -140.5 -435t-373.5 -154q-241 0 -379 158t-138 431q0 275 141 432.5t378 157.5q55 0 108 -11t82 -20h480v-165h-288q62 -73 96 -170t34 -224zM943 558q0 215 -82 322t-236 107q-161 0 -243 -112t-82 -317q0 -209 83.5 -318t239.5 -109q152 0 236 107.5 t84 319.5z',\n            'M1006 952h-404v-952h-188v952h-404v165h996v-165z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710z',\n            'M1514 576q0 -259 -171.5 -417t-440.5 -173v-398h-187v398q-130 6 -240.5 46.5t-191.5 109.5q-85 74 -132 172t-47 232q0 159 59 296t192 275h229v-17q-136 -99 -210 -232t-74 -300q0 -189 112.5 -304t301.5 -121v1000q33 2 70.5 2.5t76.5 0.5q304 0 478.5 -149.5 t174.5 -420.5zM1319 586q0 184 -112 293.5t-305 109.5v-846q206 10 311.5 126t105.5 317z',\n            'M1160 -412h-213l-346 619l-350 -619h-203l444 770l-433 759h213l335 -600l339 600h203l-433 -751z',\n            'M1507 446q0 -114 -48 -198t-127 -137q-82 -55 -182 -82.5t-215 -32.5v-408h-187v408q-115 6 -214.5 32t-182.5 83q-80 54 -127.5 137.5t-47.5 197.5v671h188v-612q0 -113 37.5 -180.5t89.5 -102.5q56 -38 123 -53t134 -19v967h187v-967q67 5 134 19t123 53 q59 40 93 101.5t34 181.5v612h188v-671z',\n            'M1553 503q0 -96 -23.5 -192.5t-74.5 -171.5q-55 -80 -133.5 -124.5t-193.5 -44.5q-96 0 -177 49.5t-118 116.5h-6q-39 -68 -113 -117t-176 -49q-113 0 -194.5 46.5t-132.5 122.5t-74.5 171.5t-23.5 192.5q0 170 57 308.5t201 305.5h228v-17q-135 -108 -214.5 -262 t-79.5 -337q0 -66 8 -122.5t38 -119.5q26 -55 72.5 -91.5t117.5 -36.5q51 0 86.5 12.5t55.5 29.5q22 18 36.5 40t20.5 37v584h186v-584q9 -17 23 -39t35 -39q24 -19 52.5 -30t86.5 -11q70 0 117 35.5t74 92.5q25 55 36 116t11 126q0 182 -78.5 336t-215.5 263v17h228 q144 -167 201 -305.5t57 -308.5z',\n            'M557 1304h-189v195h189v-195zM194 1304h-189v195h189v-195zM375 0h-188v1117h188v-1117z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM953 1304h-199v195h199v-195zM540 1304h-199v195h199 v-195z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M743 1676l-49 -384h-145l-49 384h243z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM768 1676l-49 -384h-145l-49 384h243z',\n            'M1553 503q0 -96 -23.5 -192.5t-74.5 -171.5q-55 -80 -133.5 -124.5t-193.5 -44.5q-96 0 -177 49.5t-118 116.5h-6q-39 -68 -113 -117t-176 -49q-113 0 -194.5 46.5t-132.5 122.5t-74.5 171.5t-23.5 192.5q0 170 57 308.5t201 305.5h228v-17q-135 -108 -214.5 -262 t-79.5 -337q0 -66 8 -122.5t38 -119.5q26 -55 72.5 -91.5t117.5 -36.5q51 0 86.5 12.5t55.5 29.5q22 18 36.5 40t20.5 37v584h186v-584q9 -17 23 -39t35 -39q24 -19 52.5 -30t86.5 -11q70 0 117 35.5t74 92.5q25 55 36 116t11 126q0 182 -78.5 336t-215.5 263v17h228 q144 -167 201 -305.5t57 -308.5zM955 1676l-49 -384h-145l-49 384h243z',\n            'M1145 837q0 -164 -39 -344t-121 -303q-85 -124 -186.5 -173t-214.5 -49q-192 0 -313.5 126.5t-121.5 329.5q0 228 134.5 372.5t336.5 144.5q90 0 169.5 -26t158.5 -91q2 26 3 55.5t1 55.5q0 217 -79 318t-231 101q-78 0 -169.5 -31.5t-169.5 -86.5h-11v194 q81 44 181.5 66.5t196.5 22.5q137 0 239.5 -54.5t164.5 -178.5q42 -86 56.5 -189t14.5 -260zM942 678q-60 47 -136 74t-148 27q-141 0 -225 -91t-84 -261q0 -145 67.5 -221.5t179.5 -76.5q128 0 209.5 97t115.5 287q6 33 11.5 73t9.5 92z',\n            'M1438 0h-1388l562 1489h264zM1171 168l-432 1147l-431 -1147h863z',\n            'M1532 1315h-200v-1508h-198v1508h-592v-1508h-198v1508h-200v174h1388v-174z',\n            'M1369 -189h-1182v191l673 668l-663 631v188h1133v-176h-891l648 -601v-72l-666 -653h948v-176z',\n            'M1456 572h-1236v160h1236v-160z',\n            'M843 1489l-780 -1489h-165l780 1489h165z',\n            'M492 511h-239v283h239v-283z',\n            'M1737 1788l-880 -1939h-102l-384 993h-237v139h393l313 -821l730 1628h167z',\n            'M1887 663q0 -239 -122.5 -372.5t-329.5 -133.5q-133 0 -244 76.5t-180 222.5q-79 -151 -184.5 -225t-248.5 -74q-191 0 -304 135.5t-113 349.5q0 238 125 372t327 134q134 0 245 -77t179 -222q79 150 185.5 224.5t247.5 74.5q191 0 304 -135.5t113 -349.5zM967 729 q-63 117 -155 175.5t-188 58.5q-138 0 -216 -83.5t-78 -237.5q0 -133 63.5 -216t182.5 -83q110 0 172 48.5t119 142.5q34 57 52.5 92.5t47.5 102.5zM1718 663q0 134 -64 216.5t-182 82.5q-88 0 -152.5 -35.5t-138.5 -155.5q-30 -48 -55.5 -99.5t-44.5 -95.5 q60 -115 153.5 -174.5t189.5 -59.5q138 0 216 83t78 238z',\n            'M1168 1367h-10q-32 8 -89.5 18.5t-89.5 10.5q-129 0 -181 -61q-53 -61 -53 -210v-1123q0 -206 -104 -315q-105 -110 -293 -110q-52 0 -106.5 5.5t-103.5 15.5v178h10q33 -8 87 -18.5t88 -10.5q129 0 182 61q52 61 52 210v1123q0 204 104 315q104 110 293 110 q58 0 109 -5.5t105 -15.5v-178z',\n            'M1431 1104q-20 -194 -111 -293t-249 -99q-77 0 -147 37.5t-126 82.5q-65 52 -117 79.5t-96 27.5q-75 0 -117 -48t-70 -172h-155q23 182 112.5 280t248.5 98q72 0 143 -37t130 -83q61 -48 114.5 -77.5t98.5 -29.5q76 0 120.5 54.5t63.5 179.5h157zM1432 588 q-25 -184 -112 -281.5t-250 -97.5q-72 0 -144 37.5t-129 82.5q-39 31 -103 69t-110 38q-78 0 -121 -55t-63 -179h-157q19 192 110.5 292t249.5 100q77 0 146 -37t127 -83q35 -28 97 -67.5t116 -39.5q75 0 117 49.5t69 171.5h157z',\n            'M1431 362h-608l-104 -335h-153l104 335h-425v156h474l84 268h-558v156h606l105 335h153l-105 -335h427v-156h-476l-83 -268h559v-156z',\n            'M1408 303l-1154 483v124l1154 483v-183l-889 -362l889 -362v-183zM1408 0h-1154v160h1154v-160z',\n            'M1422 786l-1154 -483v183l889 362l-889 362v183l1154 -483v-124zM1422 0h-1154v160h1154v-160z'\n        ];\n        this.OUTLINE_X = [\n            [], [291, 301, 505, 515], [168, 211, 729, 772, 554], [195, 389, 917, 1364, 1481, 1481, 1288, 760, 312, 195],\n            [155, 604, 722, 1129.8, 1160, 1107, 722, 604, 278.5, 191.1, 162, 155], [149, 172.3, 242, 630, 1687, 1844.3, 1960, 2031.3, 2055, 2031.8, 1962, 1575, 517, 359.8, 244, 172.8],\n            [115, 149.4, 252.5, 407.6, 598, 1555, 1287, 961.3, 881, 757.5, 601, 423.5, 293, 213.5, 187], [164, 207, 343, 386], [181, 205.5, 279, 554, 783, 783, 554, 279, 205.5],\n            [147, 376, 651, 724.5, 749, 724.5, 651, 376, 147], [167, 232, 588, 717, 1073, 1137, 1137, 1073, 717, 588, 232, 167], [210, 755, 921, 1466, 1466, 921, 755, 210],\n            [147, 293, 575, 321], [153, 777, 777, 153], [253, 492, 492, 253], [-30, 143, 860, 684],\n            [137, 167.9, 260.5, 420.1, 652, 881.4, 1041.5, 1135.6, 1167, 1136.1, 1043.5, 883.9, 652, 422, 262, 168.3], [278, 1084, 1084, 780, 625, 278],\n            [161, 1169, 1169, 1106, 1073.5, 976, 821.3, 617, 387.5, 198, 161], [167, 364, 608, 830.5, 1007, 1111, 1148, 1117, 1080, 971, 821, 629, 399.5, 210, 167],\n            [77, 790, 982, 1203, 1203, 982, 798, 77], [187, 378, 613, 843.5, 1015, 1119, 1157, 1147, 251, 187],\n            [137, 183.5, 316, 475, 675, 875.1, 1041.5, 1153.6, 1191, 1046, 965, 866, 542, 315, 179.5], [154, 285, 499, 1173, 1173, 154],\n            [122, 157.9, 265.5, 433.6, 651, 859.6, 1029.5, 1142.4, 1180, 1140, 1106.8, 1007, 851.5, 651, 456.8, 300, 196.5, 162],\n            [113, 258, 340, 438, 760, 988, 1122.5, 1167, 1121, 990, 829, 629, 429.5, 263, 150.5], [346, 585, 585, 346], [230, 376, 658, 585, 346], [254, 1408, 1408, 254],\n            [245, 1431, 1431, 245], [268, 1422, 1422, 268], [160, 406, 610, 970, 1005, 973.9, 880.5, 733.4, 541, 337.5, 160],\n            [176, 240, 419, 692, 1037, 1210, 1391, 1714, 1829.5, 1870, 1813.5, 1651, 1391, 1041, 701, 426, 243], [26, 1374, 832, 568],\n            [200, 728, 983.5, 1168, 1281, 1323, 1196, 1159, 1040, 885, 641, 200], [115, 169, 319, 549.5, 844, 1001.5, 1134, 1250.5, 1350, 1350, 1084.5, 845, 546.5, 317, 167],\n            [200, 576, 906.5, 1134, 1369.5, 1458, 1373, 1136, 918.5, 572, 200], [200, 1181, 1181, 200], [200, 398, 1045, 1151, 1151, 200],\n            [115, 171, 330, 577, 896, 1175.5, 1442, 1442, 1441, 1155.5, 896, 570.9, 323.5, 167.1], [200, 1339, 1339, 200], [137, 725, 725, 137],\n            [44, 178, 306, 486.6, 626.5, 716.1, 746, 746, 233, 44], [205, 1397, 1366, 205], [200, 1142, 1142, 398, 200], [200, 1526, 1526, 200], [200, 1336, 1336, 200],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 398, 1043, 1139.5, 1174, 1127.5, 996, 831, 604, 200],\n            [115, 163.5, 302, 520.5, 1010.5, 1133.1, 1290, 1409.5, 1528, 1528, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 1432, 1130.5, 1004, 842, 617, 200],\n            [134, 395.5, 685, 941.5, 1128, 1241.5, 1282, 1222, 990, 702, 480.3, 301, 182.5, 143, 134], [0, 532, 730, 1262, 1262, 0],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 178], [26, 568, 832, 1374, 238], [92, 486, 1546, 1933, 295], [68, 1335, 1336, 80], [6, 532, 730, 1254, 225],\n            [126, 1288, 1288, 1266, 160, 126], [239, 759, 759, 239], [70, 787, 960, 246], [171, 691, 691, 171], [186, 383, 1490, 901, 775], [-4, 1306, 1306, -4], [340, 613, 762, 583],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 1020, 924, 772.5, 567, 362, 203], [185, 679, 866, 1022, 1128.5, 1168, 1139.4, 1053.5, 918.1, 373, 185],\n            [105, 145, 258, 431, 653, 832.5, 1011, 1011, 841.5, 653, 430.1, 255.5, 142.6], [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 903, 258, 148.5],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 997.5, 849.1, 649, 428.6, 255.5, 143.4], [68, 195, 383, 716, 786, 786, 693.5, 580, 415, 294, 68],\n            [108, 225, 391.5, 565, 798.3, 962, 1058.8, 1091, 1091, 602, 417, 259, 148.5], [185, 1119, 1119, 1095.3, 1024, 373, 185], [175, 187, 375, 387, 387, 175],\n            [-62, 47.5, 153, 304, 421, 496, 521, 533, 533, 321, 100, -62], [193, 1199, 1161, 381, 193], [187, 375, 375, 187], [185, 1815, 1815, 1793.1, 1727.5, 1615.9, 1456, 735, 185],\n            [185, 1119, 1119, 1095.3, 1024, 907.5, 748, 185], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 833.3, 622, 409.4, 245.5, 140.9],\n            [185, 373, 1019, 1129, 1168, 1139.9, 1055.5, 920.6, 741, 185], [108, 137.6, 226.5, 365.1, 903, 1091, 1091, 602, 414, 259, 149.5], [185, 373, 882, 882, 816, 745, 185],\n            [110, 283.5, 511, 706.9, 856.5, 951.4, 983, 939, 768.5, 566, 372.5, 230, 143.5, 115, 110], [62, 211.3, 278, 387.5, 538, 649.5, 765, 765, 377, 189, 62],\n            [177, 201.5, 275, 392.5, 549, 1111, 1111, 177], [61, 510, 699, 1151, 265], [86, 380, 1299, 1590, 766], [60, 1152, 1152, 64], [61, 298, 499, 1151, 265],\n            [93, 995, 995, 978, 107, 93], [173, 588.9, 672.5, 800.9, 963, 1113, 1113, 963, 800.9, 672.5, 588.9, 173], [378, 552, 552, 378],\n            [187, 337, 499.1, 627.5, 711.1, 1127, 1127, 711.1, 627.5, 499.1, 337, 187], [187, 354, 1125, 1290, 1401, 1466.5, 1489, 1322, 551, 386, 274, 209.5], [], [291, 515, 505, 301],\n            [159, 191.6, 289.5, 647, 765, 1120, 1120, 765, 647, 292.5, 192.4], [137, 1163, 1163, 1137, 997, 816, 630.6, 484.5, 389.6, 182, 137],\n            [138, 247, 1058, 1168, 1168, 1055, 249, 138], [108, 187, 557, 745, 1115, 1191, 320], [378, 552, 552, 378],\n            [172, 229, 404.5, 575, 796, 965, 1063, 1096, 1128, 1071, 896, 725, 497.5, 334, 235, 203], [346, 958, 958, 346],\n            [159, 222.4, 412.5, 692.1, 1024, 1355.9, 1635.5, 1825.6, 1889, 1825.6, 1635.5, 1355.9, 1024, 692.1, 412.5, 222.4],\n            [151, 238.5, 454, 944, 944, 920.3, 849, 723.5, 537, 368, 231], [166, 716, 1146, 1146, 716, 166], [210, 1285, 1456, 1456, 210], [153, 777, 777, 153],\n            [159, 222.4, 412.5, 692.1, 1024, 1355.9, 1635.5, 1825.6, 1889, 1825.6, 1635.5, 1355.9, 1024, 692.1, 412.5, 222.4], [-4, 1, 1306, 1306],\n            [154, 183, 270, 399.3, 555, 710.8, 840, 927, 956, 927.1, 840.5, 711.4, 555, 399.3, 270, 183], [215, 1461, 1461, 921, 755, 215],\n            [207, 967, 967, 911, 887.6, 817.5, 544, 369.5, 211, 207], [207, 363.5, 540, 703, 834, 923, 956, 929, 904.9, 832.5, 561, 384.5, 224, 207], [541, 690, 963, 720],\n            [190, 378, 1124, 1124, 190], [137, 168.5, 595, 1106, 1106, 640, 425.3, 267, 169.5], [253, 492, 492, 253], [353, 456, 551, 788.5, 857.1, 880, 877, 872, 719, 353],\n            [291, 299, 914, 914, 693, 558, 291], [121, 150.6, 239.5, 378.6, 559, 734.3, 874, 965.5, 996, 965.5, 874, 734.3, 559, 378.6, 239.5, 150.6], [174, 604, 1154, 1154, 604, 174],\n            [171, 465, 1694, 1857, 1857, 1694, 1410, 545, 408, 171], [171, 465, 1955, 1955, 1890, 1805.5, 1410, 545, 408, 171], [140, 555, 1750, 1913, 1913, 1750, 1500, 448, 294, 155, 140],\n            [113, 144.1, 237.5, 384.6, 577, 782, 958, 958, 712, 508, 147.5], [26, 1374, 862, 683, 440], [26, 1374, 955, 712, 533], [26, 1374, 1033, 805, 578, 350],\n            [26, 1374, 1119, 990, 541, 367, 288], [26, 1374, 1005, 806, 393], [26, 1374, 1049, 1023.6, 947.5, 834.6, 699, 564, 451, 374.5, 349], [14, 1901, 1901, 608],\n            [115, 169, 548, 652.5, 750, 990.5, 1350, 1350, 1084.5, 845, 546.5, 317, 167], [200, 1181, 1181, 643, 400, 200], [200, 1181, 1181, 993, 750, 200],\n            [200, 1181, 1181, 803, 576, 200], [200, 1181, 1181, 1038, 426, 200], [137, 725, 725, 389, 146, 137], [137, 725, 725, 482, 137], [93, 137, 725, 776, 548, 321],\n            [126, 137, 725, 738, 738, 126], [14, 210, 586, 916.5, 1144, 1379.5, 1468, 1383, 1146, 929, 582, 210, 14], [200, 1336, 1336, 1208, 1079, 630, 456, 200],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 753, 510, 163], [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1083, 840, 303, 163],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1136, 908, 681, 453, 163],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1207, 1078, 629, 455, 163],\n            [112, 160.5, 299, 517.5, 803, 1089.5, 1307, 1445.5, 1495, 1446.5, 1108, 909, 496, 160], [291, 402, 1274, 1385, 1385, 1274, 402, 291],\n            [115, 120, 252, 1092.5, 1310, 1448.5, 1498, 1474, 1342, 806, 521.5, 303, 163], [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 753, 510, 178],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 1073, 830, 178], [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 856, 629, 178],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 1056, 444, 178], [6, 532, 730, 1254, 935, 692], [200, 398, 1044, 1139, 1174, 1127, 997, 398, 200],\n            [185, 675, 873.1, 1029.5, 1131.1, 1165, 1066, 1037.4, 951.5, 819.9, 654, 470.5, 321, 221, 185], [104, 130.3, 209, 325.5, 465, 1053, 1053, 1020, 559, 316, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 934, 691, 203], [104, 130.3, 209, 325.5, 465, 1053, 1053, 961, 733, 506, 278, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 1038, 909, 460, 286, 207], [104, 130.3, 209, 325.5, 465, 1053, 1053, 926, 314, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 956, 930.6, 854.5, 741.6, 606, 471, 358, 281.5, 256],\n            [104, 130.4, 209.5, 326.1, 465, 1433, 1648.5, 1833, 1855, 1855, 1823.6, 1729.5, 1581.1, 1387, 564, 360, 202],\n            [105, 145, 353, 456, 551, 788.5, 857.1, 1011, 1011, 841.5, 653, 430.1, 255.5, 142.6], [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 997.5, 580, 337, 143.4],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 960, 717, 255.5, 143.4], [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 986, 758, 531, 303, 143.4],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 951, 339, 143.4], [-21, 187, 375, 401, 222], [160, 187, 375, 582, 339], [-11, 187, 375, 572, 394, 167],\n            [5, 187, 375, 557, 557, 5], [106, 140.6, 244.5, 405.6, 612, 828.3, 995, 1101.5, 1137, 1004, 938, 263], [185, 1119, 1119, 1075, 946, 497, 323, 244, 185],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 553, 310, 140.9], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 933, 690, 245.5, 140.9],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 963, 735, 508, 280, 140.9], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1038, 909, 460, 286, 207],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 928, 729, 316, 140.9], [210, 719, 957, 1466, 1466, 957, 719, 210],\n            [93, 203, 833.3, 997, 1102, 1137, 1132, 1021, 409.4, 245.5, 140.9, 106], [177, 201.5, 275, 392.5, 549, 1111, 1111, 585, 342, 177],\n            [177, 201.5, 275, 392.5, 549, 1111, 1111, 945, 702, 177], [177, 201.5, 275, 392.5, 549, 1111, 1111, 757, 530, 177], [177, 201.5, 275, 392.5, 549, 1111, 1111, 955, 343, 177],\n            [61, 298, 499, 1151, 928, 685], [185, 373, 1019, 1129, 1168, 1139.9, 1055.5, 920.6, 373, 185], [230, 376, 658, 585, 346], [530, 579, 724, 773],\n            [256, 588, 716, 1048, 1048, 765, 539, 256], [7, 26, 1374, 832], [346, 585, 585, 346], [0, 49, 443, 1424, 1424, 443], [0, 49, 443, 1582, 1582, 443], [0, 49, 380, 968, 968, 380],\n            [0, 49, 354.5, 493, 711.5, 997, 1283.5, 1501, 1639.5, 1689, 1640.5, 1501, 1284.5, 997], [0, 49, 815, 1013, 1537, 289],\n            [0, 49, 291, 1751, 1751, 1701, 1654.1, 1513.5, 1296.6, 1021], [-53, 187, 375, 615, 615, 379, 183, -53], [26, 1374, 832, 568],\n            [200, 728, 983.5, 1168, 1281, 1323, 1196, 1159, 1040, 885, 641, 200], [200, 398, 1162, 1162, 200], [26, 1414, 852, 588], [200, 1181, 1181, 200],\n            [126, 1288, 1288, 1266, 160, 126], [200, 1339, 1339, 200], [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163],\n            [137, 725, 725, 137], [205, 1397, 1366, 205], [26, 1378, 822, 582], [200, 1526, 1526, 200], [200, 1336, 1336, 200], [114, 1215, 1215, 114],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 1339, 1339, 200],\n            [200, 398, 1043, 1139.5, 1174, 1127.5, 996, 831, 604, 200], [118, 1280, 1280, 1234, 138, 118], [0, 532, 730, 1262, 1262, 0], [6, 532, 730, 1254, 225],\n            [105, 149.5, 273, 740, 937, 1404, 1527.5, 1572, 1528.5, 1410, 937, 740, 267, 148], [68, 1335, 1336, 80], [179, 219.5, 338, 793, 990, 1446, 1563.5, 1604, 1604, 179],\n            [108, 1568, 1568, 1518, 1471.1, 1330.5, 1113.6, 838, 562.4, 345.5, 204.9, 158, 108], [126, 137, 725, 738, 738, 126], [6, 532, 730, 1254, 939, 740, 327],\n            [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 743, 500, 148.5], [109, 152.5, 265, 417, 578, 796, 1006, 1006, 961, 721, 478, 191.5, 144],\n            [185, 931, 1119, 1119, 1095.3, 802, 559, 185], [160, 187, 375, 403], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 1043, 760, 534, 251, 177],\n            [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 604, 416.5, 258, 148.5], [185, 373, 1030.5, 1131.4, 1165, 1084, 1050, 959, 825.5, 661, 462.1, 311.5, 216.6, 185],\n            [61, 506, 694, 1151, 265], [106, 140.6, 244.5, 408.6, 624, 837.1, 1000.5, 1104.4, 1139, 1049, 239],\n            [109, 152.5, 265, 417, 578, 796, 1006, 1006, 961, 789, 609, 449, 304, 191.5, 144], [108, 135.8, 219, 646, 825, 937, 982, 942, 198],\n            [185, 931, 1119, 1119, 1095.3, 1024, 907.5, 748, 185], [137, 159.5, 219, 382, 639, 896, 1059, 1118, 1141, 1118, 1058, 895.5, 639, 382.5, 220, 159.5], [187, 375, 375, 187],\n            [193, 1192, 1122, 1085, 1027, 193], [61, 1151, 522, 311], [185, 373, 1125, 1125, 185], [61, 510, 699, 1151, 265], [104, 138.5, 239, 704, 884, 995.5, 1041, 957, 133],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 833.3, 622, 409.4, 245.5, 140.9], [185, 1120, 1120, 185],\n            [185, 373, 1033.5, 1137.4, 1172, 1140, 1044, 887.3, 673, 477.5, 322, 220.5, 185], [105, 146.5, 261, 685, 862, 971, 1018, 986, 839, 675, 441.9, 260.5, 143.9],\n            [106, 140.5, 244, 407.8, 623, 832.9, 996.5, 1101.9, 1295, 1295, 625, 412, 247, 141.3], [10, 414, 602, 1006, 1006, 10],\n            [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 177], [104, 151, 283, 715, 902, 1342.5, 1471.1, 1514, 1470.4, 1339.5, 1132.6, 861, 784.5, 714, 355, 163],\n            [48, 1160, 1149, 59], [176, 223.5, 748, 935, 1459, 1507, 1507, 176], [113, 136.5, 211, 343.5, 538, 1128, 1321.5, 1455, 1529.5, 1553, 1496, 1295, 371, 170],\n            [5, 187, 375, 557, 557, 5], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 953, 341, 177],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 743, 500, 140.9], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 768, 525, 177],\n            [113, 136.5, 211, 343.5, 538, 1128, 1321.5, 1455, 1529.5, 1553, 1496, 955, 712, 170],\n            [149, 179.4, 270.5, 409.6, 584, 798.5, 985, 1106, 1145, 1130.5, 1074, 909.5, 670, 473.5, 292], [50, 1438, 876, 612], [144, 344, 1332, 1532, 1532, 144],\n            [187, 1369, 1369, 1330, 197, 187], [220, 1456, 1456, 220], [-102, 63, 843, 678], [253, 492, 492, 253], [134, 755, 857, 1737, 1570, 134],\n            [161, 189.3, 274, 406.5, 578, 1435, 1620.9, 1764.5, 1856.4, 1887, 1858.8, 1774, 1641.5, 1470, 613, 430.3, 286, 192.3],\n            [138, 241.5, 348, 515.3, 641, 719, 1168, 1168, 1063, 954, 786.3, 661, 583, 138], [243, 400, 1070, 1214, 1320, 1432, 1431, 1274, 604, 462.4, 355.5, 243],\n            [245, 566, 719, 1431, 1431, 1109, 956, 245], [254, 1408, 1408, 254], [268, 1422, 1422, 268]\n        ];\n        this.OUTLINE_Y = [\n            [], [1489, 0, 0, 1489], [1556, 977, 977, 1556, 1556], [421, 0, 0, 421, 932, 1067, 1489, 1489, 1067, 556],\n            [85, -361, -361, 238.1, 380, 1231, 1576, 1576, 1185, 1071.5, 935, 283], [1075, 880.5, 743, 0, -29, -1.8, 80, 217.8, 413, 607.5, 745, 1489, 1517, 1489.8, 1408, 1270.3],\n            [409, 230.9, 90.5, -0.6, -31, 0, 909, 1333.4, 1432.5, 1498.1, 1520, 1490, 1412, 1301.5, 1174], [1556, 977, 977, 1556], [572, 286.3, 31, -412, -412, 1556, 1556, 1113, 857.8],\n            [-412, -412, 31, 286.3, 572, 857.8, 1113, 1556, 1556], [886, 776, 630, 630, 777, 887, 1299, 1409, 1556, 1556, 1410, 1300], [572, 27, 27, 572, 732, 1277, 1277, 732],\n            [-370, -370, 285, 285], [561, 561, 742, 742], [0, 0, 285, 285], [-304, -304, 1556, 1556],\n            [743, 400, 159, 16.5, -31, 15.9, 156.5, 397.4, 745, 1084.9, 1326.5, 1470.9, 1519, 1471.6, 1329.5, 1088.1], [0, 0, 152, 1494, 1494, 1286],\n            [0, 0, 171, 1110, 1279.4, 1409.5, 1492.4, 1520, 1491, 1427, 209], [63, -1.5, -31, 2.5, 106, 254, 441, 1161, 1320, 1436, 1500, 1520, 1490.5, 1426, 272],\n            [419, 0, 0, 419, 579, 1489, 1489, 649], [56, -5.5, -31, 6.5, 114, 274, 473, 1489, 1489, 267],\n            [654, 324, 104, 3, -31, 4.9, 112.5, 276.9, 483, 1494, 1512, 1517, 1453.5, 1277, 1005], [1314, 0, 0, 1266, 1489, 1489],\n            [411, 233.5, 91, -2.8, -34, -2, 94, 238.3, 415, 1144, 1294.5, 1416, 1496.3, 1523, 1495, 1411, 1285, 1131],\n            [1005, -6, -23.5, -29, 33, 209, 480, 834, 1171.5, 1385, 1485.5, 1519, 1483.3, 1376, 1211.8], [0, 0, 1117, 1117], [-370, -370, 285, 1117, 1117], [590, 77, 1227, 714],\n            [362, 362, 942, 942], [77, 590, 714, 1227], [1245, 0, 0, 964.5, 1139, 1293.4, 1414.5, 1492.9, 1519, 1497.5, 1449],\n            [647, 291, 15, -162.5, -226, -218.5, -190, 157, 394, 663, 1013.5, 1283, 1457, 1519, 1452, 1268, 991.5], [0, 0, 1489, 1489],\n            [0, 0, 28, 122, 262, 458, 1155, 1316.5, 1427, 1477, 1489, 1489], [743, 402.5, 161, 18.5, -27, -13.5, 19, 63, 108, 1385, 1487, 1516, 1465, 1317, 1072],\n            [0, 0, 28, 119, 375, 743, 1118, 1371, 1457.5, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 717, 1313, 1489, 1489],\n            [746, 405.5, 163, 19, -29, 12.5, 110, 749, 1382, 1485.5, 1516, 1464.4, 1309.5, 1065.4], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [8, -12.5, -21, 5.5, 85, 213.5, 387, 1489, 1489, 193], [0, 0, 1489, 1489], [0, 0, 176, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 709, 855.5, 1039, 1254, 1396, 1466.5, 1489, 1489],\n            [744, 415, 172, 21, -297.5, -369.1, -393, -386.5, -365, -183, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1280.5, 1409, 1471.5, 1489, 1489],\n            [92, 3, -27, 9, 109, 253, 425, 1412, 1486, 1516, 1486.1, 1396.5, 1260.1, 1090, 340], [1313, 0, 0, 1313, 1489, 1489], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 1489],\n            [1489, 0, 0, 1489, 1489], [1489, 0, 0, 1489, 1489], [0, 0, 1489, 1489], [1489, 0, 0, 1489, 1489], [0, 0, 176, 1489, 1489, 184], [-392, -392, 1556, 1556],\n            [1556, -304, -304, 1556], [-392, -392, 1556, 1556], [682, 682, 684, 1489, 1489], [-300, -300, -180, -180], [1676, 1302, 1302, 1676],\n            [324, 182.8, 69, -6, -31, 0, 758, 939, 1058, 1124.5, 1144, 1126, 1093], [0, -31, 8.5, 127, 315, 567, 812.8, 996, 1110, 1556, 1556],\n            [557, 300, 118, 10.5, -25, 0, 70, 1050, 1116, 1143, 1104, 987, 801.5], [550, 306.8, 123, 7.5, -31, 0, 1556, 1556, 992, 803],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1016, 1115, 1148, 1107.8, 987, 797.8], [959, 0, 0, 959, 1374, 1546, 1560, 1566, 1539.4, 1459.5, 1117],\n            [569, -375, -410.5, -423, -389.8, -290, -119.3, 127, 1117, 1148, 1108.5, 998, 817.5], [0, 0, 725, 906, 1039, 1556, 1556], [1304, 0, 0, 1304, 1499, 1499],\n            [-395, -415, -423, -398, -323, -199, -27, 1304, 1499, 1499, 1117, -216], [0, 0, 1117, 1556, 1556], [0, 0, 1556, 1556], [0, 0, 725, 902.9, 1036.5, 1120.1, 1148, 1148, 1117],\n            [0, 0, 725, 906, 1039, 1120.8, 1148, 1117], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1108.4, 1148, 1108.4, 989.5, 802.4],\n            [-412, -412, 133, 323.5, 572, 813.4, 995.5, 1109.9, 1148, 1117], [555, 314.1, 131.5, 16.4, -412, -412, 1117, 1148, 1108, 995, 809.5], [0, 0, 912, 1105, 1114.5, 1117, 1117],\n            [67, 2.5, -27, -2.5, 71, 182.8, 322, 1060, 1119.5, 1144, 1116.5, 1042, 933, 803, 278], [959, 189.8, 70, 1, -22, -13, 10, 1117, 1438, 1438, 1117],\n            [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [0, 0, 1117, 1117], [1117, -412, -412, 1117, 1117],\n            [0, 0, 159, 1117, 1117, 139], [504, -170.9, -292.5, -367.1, -392, -392, 1556, 1556, 1531.1, 1456.5, 1334.9, 660], [-392, -392, 1556, 1556],\n            [-392, -392, -367.1, -292.5, -170.9, 504, 660, 1334.9, 1456.5, 1531.1, 1556, 1556], [395, 395, 396, 440, 561, 732, 927, 927, 926, 880.5, 761, 589.5], [], [0, 0, 1489, 1489],\n            [557, 333.5, 163, -361, -361, 74, 1046, 1475, 1475, 948.5, 775.9], [0, 0, 171, 1467, 1501, 1518, 1485.9, 1389.5, 1243.1, 751, 207],\n            [258, 145, 147, 257, 1067, 1176, 1176, 1066], [1489, 426, 0, 0, 426, 1489, 1489], [-392, -392, 1556, 1556],\n            [533, -327, -371.5, -385, -358, -275, -156, -10, 601, 1462, 1505, 1519, 1490, 1411, 1293.5, 1147], [1304, 1304, 1499, 1499],\n            [655, 323.1, 43.5, -146.6, -210, -146.6, 43.5, 323.1, 655, 986.9, 1266.5, 1456.6, 1520, 1456.6, 1266.5, 986.9],\n            [833, 616, 531, 554, 1192, 1332.4, 1435.5, 1498.9, 1520, 1504, 1475], [608, 162, 191, 1113, 1142, 697], [602, 57, 57, 762, 762], [561, 561, 742, 742],\n            [655, 323.1, 43.5, -146.6, -210, -146.6, 43.5, 323.1, 655, 986.9, 1266.5, 1456.6, 1520, 1456.6, 1266.5, 986.9], [1788, 1668, 1668, 1788],\n            [1116, 960.4, 831.5, 744.9, 716, 745, 832, 961, 1116, 1271, 1400, 1487, 1516, 1487, 1400, 1271], [179, 179, 917, 1462, 1462, 917],\n            [566, 566, 711, 1237, 1350.4, 1440.5, 1519, 1501.5, 1458, 722], [585, 542, 527, 543.5, 595, 685.5, 817, 1278, 1374.5, 1452, 1520, 1502.5, 1458, 764],\n            [1302, 1302, 1676, 1676], [-412, -412, 0, 1117, 1117], [1050, 866, -363, -363, 1489, 1489, 1460, 1373, 1234.3], [511, 511, 794, 794],\n            [-397, -416, -423, -337, -232, -89, -25, 20, 20, -237], [1256, 566, 566, 688, 1493, 1493, 1368],\n            [1025, 820.1, 663.5, 564.1, 531, 563.4, 660.5, 816.4, 1025, 1233.8, 1390, 1487.5, 1520, 1486.8, 1387, 1230], [191, 162, 608, 697, 1142, 1113],\n            [1246, 0, 0, 220, 353, 944, 1489, 1493, 1493, 1363], [1246, 0, 0, 139, 664, 865, 1489, 1493, 1493, 1363], [598, 0, 0, 220, 353, 944, 1489, 1517, 1500, 1456, 773],\n            [350, 195.6, 74.5, -3.9, -30, -10, 40, 244, 1489, 1489, 523], [0, 0, 1675, 2049, 2049], [0, 0, 2049, 2049, 1675], [0, 0, 1670, 2049, 2049, 1670],\n            [0, 0, 1992, 1992, 1987, 1910, 1682], [0, 0, 1872, 1872, 1872], [0, 0, 1712, 1843.5, 1952, 2024.8, 2049, 2024.8, 1952, 1843.5, 1712], [0, 0, 1489, 1489],\n            [743, 402.5, -397, -416, -423, -337, 108, 1385, 1487, 1516, 1465, 1317, 1072], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 1489, 2049, 2049, 1489],\n            [0, 0, 1489, 1872, 1872, 1489], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 2049, 2049, 1489], [1670, 0, 0, 1670, 2049, 2049], [1677, 0, 0, 1677, 1872, 1872],\n            [740, 0, 0, 28, 119, 375, 743, 1118, 1371, 1457.5, 1489, 1489, 883], [0, 0, 1489, 1992, 1992, 1987, 1910, 1489],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 2049, 2049, 1070.5], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 2049, 2049, 1318, 1070.5],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1670, 2049, 2049, 1670, 1070.5], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1992, 1992, 1987, 1910, 1070.5],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1872, 1872, 1872, 1070.5], [216, 105, 105, 216, 1088, 1199, 1199, 1088],\n            [744, -146, -146, 20, 172, 414.5, 744, 1611, 1611, 1520, 1468, 1318, 1070.5], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489],\n            [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489],\n            [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 1872, 1872, 1489], [1489, 0, 0, 1489, 2049, 2049], [0, 0, 469, 610.5, 787, 992, 1130, 1489, 1489],\n            [0, -24, 12.4, 121.5, 284.1, 481, 1241, 1376, 1479, 1544.3, 1566, 1536.5, 1449, 1295.5, 1080], [324, 182.8, 69, -6, -31, 0, 758, 939, 1676, 1676, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1676, 1676, 1093], [324, 182.8, 69, -6, -31, 0, 758, 1297, 1676, 1676, 1297, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1619, 1619, 1614, 1537, 1309], [324, 182.8, 69, -6, -31, 0, 758, 1499, 1499, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1630, 1761.8, 1871, 1944.5, 1969, 1944.5, 1871, 1761.8, 1630],\n            [317, 178.8, 68, -4.8, -29, -26, 3.5, 68, 559, 641, 861.3, 1020, 1116, 1148, 1146, 1127, 1093], [557, 300, -397, -416, -423, -337, -232, 70, 1050, 1116, 1143, 1104, 987, 801.5],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1016, 1676, 1676, 797.8], [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1676, 1676, 987, 797.8],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1297, 1676, 1676, 1297, 797.8], [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1499, 1499, 797.8],\n            [1676, 0, 0, 1302, 1676], [1302, 0, 0, 1676, 1676], [1297, 0, 0, 1297, 1676, 1676], [1304, 0, 0, 1304, 1499, 1499],\n            [484, 266.5, 104, 2.8, -31, 12, 141, 351, 637, 1469, 1566, 1556], [0, 0, 725, 1619, 1619, 1614, 1537, 1309, 1117],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1676, 1676, 802.4], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1676, 1676, 989.5, 802.4],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1297, 1676, 1676, 1297, 802.4], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 1619, 1619, 1614, 1537, 1309],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1499, 1499, 1499, 802.4], [572, 7, 7, 572, 732, 1297, 1297, 732],\n            [-148, -148, 8.5, 127, 313.8, 558, 1241, 1241, 1108.4, 989.5, 802.4, 558], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117],\n            [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1499, 1499, 1117],\n            [1117, -412, -412, 1117, 1676, 1676], [-412, -412, 133, 323.5, 572, 813.4, 995.5, 1109.9, 1556, 1556], [-370, -370, 285, 1117, 1117], [1676, 1292, 1292, 1676],\n            [1304, 1292, 1292, 1304, 1499, 1676, 1676, 1499], [1489, 0, 0, 1489], [832, 832, 1117, 1117], [1489, 1105, 0, 0, 1489, 1489], [1489, 1105, 0, 0, 1489, 1489],\n            [1489, 1105, 0, 0, 1489, 1489], [1489, 1105, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520], [1489, 1105, 0, 0, 1489, 1489],\n            [1489, 1105, 0, 0, 174, 894, 1144.8, 1345, 1476.3, 1520], [1304, 0, 0, 1304, 1499, 1676, 1676, 1499], [0, 0, 1489, 1489],\n            [0, 0, 28, 122, 262, 458, 1155, 1316.5, 1427, 1477, 1489, 1489], [0, 0, 1313, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 176, 1489, 1489, 184],\n            [0, 0, 1489, 1489], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1489, 1489],\n            [0, 0, 709, 855.5, 1039, 1254, 1396, 1466.5, 1489, 1489], [0, 0, 176, 1489, 1489, 184], [1313, 0, 0, 1313, 1489, 1489], [1489, 0, 0, 1489, 1489],\n            [755, 507, 325, -16, -16, 325, 506.5, 755, 994, 1171, 1505, 1505, 1171, 993], [0, 0, 1489, 1489], [910, 647, 471, 0, 0, 471, 645.5, 910, 1489, 1489],\n            [0, 0, 174, 894, 1144.8, 1345, 1476.3, 1520, 1476.3, 1345, 1144.8, 894, 174], [1677, 0, 0, 1677, 1872, 1872], [1489, 0, 0, 1489, 1872, 1872, 1872],\n            [550, 306.8, 123, 7.5, -31, 0, 1117, 1676, 1676, 803], [306, 148.5, 46, -10, -26, -5, 64, 270, 1083, 1676, 1676, 986.5, 839], [0, -412, -412, 725, 906, 1676, 1676, 1117],\n            [1676, 0, 0, 1676], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1499, 1676, 1676, 1499, 1117], [550, 306.8, 123, 7.5, -31, 0, 1117, 1148, 1108, 992, 803],\n            [-412, -412, 110, 259.5, 444, 1195, 1355, 1467, 1534.5, 1556, 1524.3, 1429, 1277.8, 1078], [1117, -412, -412, 1117, 1117],\n            [534, 299.6, 120.5, 6.9, -31, 7.8, 124, 308.3, 551, 1556, 1556], [306, 148.5, 46, -10, -26, -5, 64, 270, 1083, 1127.5, 1144, 1128, 1079, 986.5, 839],\n            [463, 262.3, 118, -412, -412, -264.5, -96, 1556, 1556], [0, -412, -412, 725, 906, 1039, 1120.8, 1148, 1117],\n            [768, 451.5, 241, 37.5, -31, 37.5, 241, 451.5, 768, 1073, 1288, 1487, 1556, 1487, 1288, 1073.5], [0, 0, 1117, 1117], [0, 0, 1117, 1118, 1119, 1117], [0, 0, 1556, 1556],\n            [-412, -412, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [412, 248.5, 113, -412, -412, -265, -96, 1556, 1556],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1108.4, 1148, 1108.4, 989.5, 802.4], [0, 0, 1117, 1117],\n            [-412, -412, 148.5, 340.9, 577, 821.5, 1001, 1111.3, 1148, 1115, 1020, 861.5, 646], [549, 299, 129, -412, -412, -268, -96, 1079, 1124.5, 1143, 1102.5, 981, 792],\n            [558, 313.8, 127, 8.5, -31, 7.5, 123, 308.8, 952, 1117, 1148, 1108.6, 990.5, 803.6], [952, 0, 0, 952, 1117, 1117],\n            [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1117], [546, 314, 142, -412, -412, 159, 342.3, 576, 816.6, 996.5, 1108.6, 1146, 1145.5, 1143, 1117, 842],\n            [-412, -412, 1117, 1117], [446, 248.5, -412, -412, 248, 446, 1117, 1117], [503, 310.5, 139, 16.5, -30, -30, 14.5, 139, 310.5, 503, 811.5, 1117, 1117, 811.5],\n            [1304, 0, 0, 1304, 1499, 1499], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1499, 1499, 1117],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1676, 1676, 802.4], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1676, 1676, 1117],\n            [503, 310.5, 139, 16.5, -30, -30, 14.5, 139, 310.5, 503, 811.5, 1676, 1676, 811.5], [424, 240.1, 94.5, -0.4, -32, 17, 190, 493, 837, 1097, 1286, 1464.5, 1519, 1496.5, 1430],\n            [0, 0, 1489, 1489], [1315, -193, -193, 1315, 1489, 1489], [-189, -189, -13, 1489, 1489, 2], [572, 572, 732, 732], [0, 0, 1489, 1489], [511, 511, 794, 794],\n            [842, -151, -151, 1788, 1788, 981], [642, 447.6, 292.5, 190.9, 157, 157, 190.4, 290.5, 450.4, 663, 857.4, 1012.5, 1114.1, 1148, 1148, 1114.5, 1014, 854],\n            [-402, -417.5, -423, -395.5, -313, -179.8, 1367, 1545, 1560.5, 1566, 1538.5, 1456, 1321.8, -224], [202, 202, 209, 233.4, 306.5, 588, 1104, 1104, 1097, 1072.5, 999, 719],\n            [362, 27, 27, 362, 942, 1277, 1277, 942], [0, 0, 1393, 910], [0, 0, 910, 1393]\n        ];\n        this.KERN_C1 = [\n            '\\'', '\\'', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '.', '.', 'A', 'A', 'A', 'A', 'A', 'A', 'A',\n            'A', 'A', 'A', 'A', 'A', 'B', 'B', 'B', 'B', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F',\n            'I', 'J', 'J', 'J', 'J', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n            'L', 'O', 'O', 'O', 'O', 'O', 'O', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'Q', 'Q', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'S',\n            'S', 'S', 'S', 'S', 'S', 'S', 'S', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T',\n            'T', 'T', 'T', 'T', 'T', 'T', 'U', 'U', 'U', 'U', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'W', 'W', 'W', 'W', 'W', 'W',\n            'W', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y',\n            'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z',\n            'a', 'a', 'a', 'b', 'b', 'b', 'c', 'c', 'e', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'h', 'h', 'h', 'k', 'k', 'k', 'k', 'm', 'm',\n            'm', 'n', 'n', 'n', 'o', 'o', 'o', 'o', 'o', 'p', 'p', 'p', 'r', 'r', 'r', 'r', 'r', 't', 't', 'v', 'v', 'v', 'v', 'v', 'v', 'v', 'v', 'w', 'w', 'w',\n            'w', 'w', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'z', 'z', 'z', 'z', 'z', 'z', 'z',\n            'z', 'z', '\\u00C7', '\\u00E7', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00F8', '\\u00F8', '\\u00F8', '\\u00F8', '\\u00F8'\n        ];\n        this.KERN_C2 = [\n            '\\u00C6', 'A', '\\u00E6', '\\u00C6', 'z', 'y', 'x', 'w', 'v', 'a', 'Z', 'Y', 'X', 'W', 'V', 'T', 'S', 'J', 'I', 'A', '-', ',', 'y', 'w', 'v', 'u', 't',\n            'Y', 'W', 'V', 'U', 'T', 'S', '-', 'T', '.', '-', ',', '-', 'Z', 'Y', 'X', 'W', 'T', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'o', 'e', 'a', 'T', 'A',\n            '?', ';', ':', '.', ',', '-', '\\u00C6', 'A', '.', ',', '\\u00F8', '\\u00E6', '\\u00D8', 'y', 'w', 'v', 'u', 'o', 'e', 'a', 'O', '-', '\\u00D8', '\\u00C7',\n            'y', 'v', 'Y', 'W', 'V', 'T', 'O', 'J', 'G', 'C', '-', '\\'', 'Z', 'Y', 'X', 'T', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'o', 'e', 'a', 'Y', 'A',\n            '.', ',', '.', ',', '\\u00F8', '\\u00E6', 'y', 'u', 'o', 'e', 'a', 'Y', 'T', '-', '\\u00C6', 'y', 'w', 'v', 'S', 'A', '.', ',', '\\u00F8', '\\u00E6',\n            '\\u00D8', '\\u00C6', '\\u00C7', 'z', 'y', 'w', 'v', 'u', 's', 'r', 'o', 'g', 'e', 'c', 'a', 'T', 'S', 'O', 'G', 'C', 'A', '?', ';', ':', '.', '-', ',',\n            '\\u00C6', 'A', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'y', 'u', 'o', 'e', 'a', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'y', 'u',\n            'r', 'o', 'e', 'a', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6', '\\u00D8', '\\u00C7', 'y', 'u', 'o', 'e', 'a', 'O', 'G', 'C', '-', '\\u00F8',\n            '\\u00E6', '\\u00D8', '\\u00C6', 'v', 'u', 's', 'r', 'q', 'p', 'o', 'n', 'm', 'g', 'e', 'd', 'a', 'O', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6',\n            '\\u00D8', '\\u00C7', 'y', 'w', 'o', 'e', 'a', 'Z', 'O', 'G', 'C', '-', 'y', 'w', 'v', 'y', '.', ',', 'T', '-', 'T', '}', 'y', ']', '\\\\', '?', '.',\n            '-', ',', '*', ')', '\\'', '\"', 'y', 'w', 'v', '\\u00F8', 'o', 'e', '-', 'y', 'w', 'v', 'y', 'w', 'v', 'y', 'x', 'v', '.', ',', 'y', '.', ',',\n            '\\u00E6', 'a', '.', '-', ',', 'y', '-', '\\u00F8', '\\u00E6', 'o', 'e', 'a', '.', '-', ',', '\\u00E6', 'a', '.', '-', ',', '\\u00F8', '\\u00E7', 'o', 'g',\n            'e', 'd', 'c', '-', '\\u00F8', '\\u00E6', '\\u00E7', 'q', 'o', 'g', 'e', 'd', 'c', 'a', '.', '-', ',', '\\u00F8', '\\u00E7', 'q', 'o', 'g', 'e', 'd', 'c',\n            '-', '-', '-', 'Z', 'Y', 'X', 'T', '.', ',', 'y', 'x', 'v', '.', ','\n        ];\n        this.KERN_K = [\n            100, 100, 20, 50, 40, 40, 50, 20, 40, 20, 30, 140, 80, 50, 50, 150, 20, 100, 30, 50, 160, 130, 50, 30, 50, 10, 20, 80, 50, 60, 10, 120, 10, 50, 60,\n            20, -10, 20, 50, 20, 20, 10, 20, 50, 50, 50, 50, 100, 110, 50, 50, 100, -30, 100, -60, 60, 60, 300, 300, 30, 10, 10, 20, 20, 70, 60, 20, 80, 70, 80,\n            50, 70, 70, 60, 20, 110, 20, 20, 110, 110, 160, 100, 110, 170, 20, -100, 20, 20, 160, 120, 20, 20, 10, 50, 30, 30, 50, 50, 70, 50, 50, 50, -20, 50,\n            300, 300, 30, 30, 50, 50, 55, 20, 50, 50, 40, 20, 60, 100, 20, 30, 20, 30, 22, 20, 20, 20, 220, 240, 50, 130, 40, 170, 200, 200, 200, 200, 180, 200,\n            220, 210, 220, 220, 240, 70, 12, 50, 40, 40, 120, -60, 200, 200, 290, 150, 290, 20, 10, 20, 20, 100, 100, 70, 65, 60, 100, 100, 100, 60, 80, 80, 290,\n            50, 290, 100, 100, 60, 65, 60, 60, 100, 100, 100, 50, 80, 80, 220, 50, 290, 60, 50, 10, 10, 80, 30, 60, 60, 50, 10, 10, 10, 80, 130, 140, 20, 80,\n            100, 110, 110, 100, 130, 100, 130, 100, 100, 130, 130, 120, 140, 20, 80, 200, 200, 290, 140, 290, 60, 50, 20, 20, 65, 40, 60, 60, 50, 10, 20, 20, 20,\n            60, 16, 10, 16, 5, 20, 30, 60, 20, 140, -100, 10, -100, -100, -110, 120, 50, 130, -50, -100, -60, -60, 20, 10, 20, 20, 20, 20, 100, 20, 10, 20, 20,\n            10, 20, 15, 20, 15, 20, 30, 5, 20, 30, 40, 36, 290, 20, 290, 10, 40, 18, 40, 18, 18, 40, 180, 40, 180, 20, 20, 70, 20, 70, 24, 20, 24, 10, 24, 10,\n            20, 50, 18, 40, 18, 10, 18, 10, 18, 10, 18, 40, 190, 40, 190, 12, 10, 10, 12, 10, 12, 10, 10, 20, 50, 20, 20, 20, 10, 50, 30, 30, 15, 20, 15, 20, 30\n        ];\n        this.pathCache = [];\n        this.pathMissing = null;\n        this.ctxReference = null;\n        for (let n = this.GLYPH_DATA.length - 1; n >= 0; n--)\n            this.pathCache[n] = null;\n    }\n    getKerning(ch1, ch2) {\n        const sz = this.KERN_K.length;\n        for (let n = 0; n < sz; n++)\n            if (this.KERN_C1[n] == ch1 && this.KERN_C2[n] == ch2)\n                return -this.KERN_K[n];\n        return 0;\n    }\n    static measureText(txt, size) { return this.main.measureText(txt, size); }\n    measureText(txt, size) {\n        let font = FontData.main;\n        let scale = size / font.UNITS_PER_EM;\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = this.getIndex(ch);\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                continue;\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n        }\n        return [dx * scale, font.ASCENT * scale * font.ASCENT_FUDGE, -font.DESCENT * scale];\n    }\n    static measureWidths(txt, size) { return this.main.measureWidths(txt, size); }\n    measureWidths(txt, size) {\n        let font = FontData.main;\n        let scale = size / font.UNITS_PER_EM;\n        let xpos = [0];\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = this.getIndex(ch);\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                xpos.push(dx * scale);\n                continue;\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n            xpos.push(dx * scale);\n        }\n        return xpos;\n    }\n    getIndex(ch) {\n        return this.UNICODE.indexOf(ch);\n    }\n    getRawGlyph(idx) {\n        return this.GLYPH_DATA[idx];\n    }\n    getGlyphPath(idx) {\n        let path = this.pathCache[idx];\n        if (path != null)\n            return path;\n        path = new Path2D(this.GLYPH_DATA[idx]);\n        this.pathCache[idx] = path;\n        return path;\n    }\n    getMissingPath() {\n        if (!this.pathMissing)\n            this.pathMissing = new Path2D(this.MISSING_DATA);\n        return this.pathMissing;\n    }\n    getOutlineX(idx) { return this.OUTLINE_X[idx].slice(0); }\n    getOutlineY(idx) { return this.OUTLINE_Y[idx].slice(0); }\n    initNativeFont(ctx) {\n        if (ctx == null && this.ctxReference)\n            return;\n        if (ctx == null) {\n            let canvas = new OffscreenCanvas(256, 256);\n            this.ctxReference = canvas.getContext('2d');\n        }\n        else\n            this.ctxReference = ctx;\n    }\n    static measureTextNative(txt, family, size, opt = {}) {\n        return this.main.measureTextNative(txt, family, size, opt);\n    }\n    measureTextNative(txt, family, size, opt = {}) {\n        if (!this.ctxReference)\n            throw 'Calling measureTextNative without having called initNativeFont first';\n        this.ctxReference.save();\n        let pfx = '';\n        if (opt.bold)\n            pfx += 'bold ';\n        if (opt.italic)\n            pfx += 'italic ';\n        this.ctxReference.font = pfx + size + 'px ' + family;\n        let metrics = this.ctxReference.measureText(txt);\n        this.ctxReference.restore();\n        const FUDGE = this.ASCENT_FUDGE * this.ASCENT / this.UNITS_PER_EM;\n        return [metrics.width, size * FUDGE, size * (-this.DESCENT / this.ASCENT) * FUDGE];\n    }\n}\nFontData.main = new FontData();\nexport { FontData };\n//# sourceMappingURL=FontData.js.map","import { BondArtifact } from '../data/BondArtifact';\nimport { CoordUtil } from '../data/CoordUtil';\nimport { Molecule } from '../data/Molecule';\nimport { PolymerBlock, PolymerBlockConnectivity } from '../data/PolymerBlock';\nimport { QueryUtil } from '../data/QueryUtil';\nimport { FitRotatedEllipse } from '../util/FitRotatedEllipse';\nimport { Box, GeomUtil, Line, Oval, QuickHull } from '../util/Geom';\nimport { angleDiff, clone, DEGRAD, invZ, norm2_xy, norm_xy, RADDEG, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { FontData } from './FontData';\nimport { RenderEffects } from './Rendering';\nexport var BLineType;\n(function (BLineType) {\n    BLineType[BLineType[\"Normal\"] = 1] = \"Normal\";\n    BLineType[BLineType[\"Inclined\"] = 2] = \"Inclined\";\n    BLineType[BLineType[\"Declined\"] = 3] = \"Declined\";\n    BLineType[BLineType[\"Unknown\"] = 4] = \"Unknown\";\n    BLineType[BLineType[\"Dotted\"] = 5] = \"Dotted\";\n    BLineType[BLineType[\"DotDir\"] = 6] = \"DotDir\";\n    BLineType[BLineType[\"IncDouble\"] = 7] = \"IncDouble\";\n    BLineType[BLineType[\"IncTriple\"] = 8] = \"IncTriple\";\n    BLineType[BLineType[\"IncQuadruple\"] = 9] = \"IncQuadruple\";\n})(BLineType || (BLineType = {}));\nconst MINBOND_LINE = 0.25;\nconst MINBOND_EXOTIC = 0.5;\nclass ArrangeMolecule {\n    static guestimateSize(mol, policy, maxW, maxH) {\n        let box = mol.boundary();\n        let minX = box.minX(), minY = box.minY(), maxX = box.maxX(), maxY = box.maxY();\n        let fontSize = policy.data.fontSize * this.FONT_CORRECT;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomExplicit(n)) {\n                let numsym = 0;\n                for (let ch of mol.atomElement(n))\n                    if (!'|{}^'.includes(ch))\n                        numsym++;\n                let plusH = mol.atomHydrogens(n) > 0 ? 1 : 0;\n                const aw = 0.5 * 0.7 * fontSize * (numsym + plusH);\n                const ah = 0.75 * fontSize * (1 + 0.2 * plusH);\n                const ax = mol.atomX(n), ay = mol.atomY(n);\n                minX = Math.min(minX, ax - aw);\n                maxX = Math.max(maxX, ax + aw);\n                minY = Math.min(minY, ay - ah);\n                maxY = Math.max(maxY, ay + ah);\n            }\n        let w = Math.max(1, (maxX - minX)) * policy.data.pointScale;\n        let h = Math.max(1, (maxY - minY)) * policy.data.pointScale;\n        if (maxW > 0 && w > maxW) {\n            h *= maxW / w;\n            w = maxW;\n        }\n        if (maxH > 0 && h > maxH) {\n            w *= maxH / h;\n            h = maxH;\n        }\n        return [w, h];\n    }\n    constructor(mol, measure, policy, effects = new RenderEffects()) {\n        this.mol = mol;\n        this.measure = measure;\n        this.policy = policy;\n        this.effects = effects;\n        this.points = [];\n        this.lines = [];\n        this.rings = [];\n        this.paths = [];\n        this.space = [];\n        this.wantArtifacts = true;\n        this.artifacts = null;\n        this.bondOrder = [];\n        this.atomCharge = [];\n        this.atomUnpaired = [];\n        this.artifactCharge = new Map();\n        this.artifactUnpaired = new Map();\n        this.artifactFract = new Map();\n    }\n    getMolecule() { return this.mol; }\n    getMeasure() { return this.measure; }\n    getPolicy() { return this.policy; }\n    getEffects() { return this.effects; }\n    getScale() { return this.scale; }\n    setWantArtifacts(want) { this.wantArtifacts = want; }\n    getArtifacts() { return this.artifacts; }\n    setArtifacts(artifacts) { this.artifacts = artifacts; }\n    arrange() {\n        const { mol, measure, policy, effects } = this;\n        this.scale = measure.scale();\n        this.bondSepPix = policy.data.bondSep * measure.scale();\n        this.lineSizePix = policy.data.lineSize * measure.scale();\n        this.fontSizePix = policy.data.fontSize * measure.scale() * ArrangeMolecule.FONT_CORRECT;\n        this.ymul = measure.yIsUp() ? -1 : 1;\n        let artmask = null;\n        if (this.wantArtifacts && this.artifacts == null) {\n            this.artifacts = new BondArtifact(mol);\n            artmask = Vec.booleanArray(false, mol.numAtoms);\n            for (let path of this.artifacts.getResPaths())\n                for (let a of path.atoms)\n                    artmask[a - 1] = true;\n            for (let ring of this.artifacts.getResRings())\n                for (let a of ring.atoms)\n                    artmask[a - 1] = true;\n            for (let arene of this.artifacts.getArenes()) {\n                artmask[arene.centre - 1] = true;\n                for (let a of arene.atoms)\n                    artmask[a - 1] = true;\n            }\n        }\n        this.setupBondOrders();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            if (mol.atomElement(n).length > 2 && mol.atomHydrogens(n) == 0) {\n                this.points.push(null);\n                this.space.push(null);\n                continue;\n            }\n            let a = {\n                anum: n,\n                text: mol.atomExplicit(n) || CoordUtil.atomIsWeirdLinear(mol, n) ? mol.atomElement(n) : null,\n                fsz: this.fontSizePix,\n                col: this.policy.data.atomCols[mol.atomicNumber(n)],\n                oval: new Oval(this.measure.angToX(mol.atomX(n)), this.measure.angToY(mol.atomY(n)), 0, 0)\n            };\n            let overCol = this.effects.colAtom[n];\n            if (overCol)\n                a.col = overCol;\n            if (artmask && artmask[n - 1] && mol.atomElement(n) == 'C')\n                a.text = null;\n            if (a.text != null) {\n                let wad = this.measure.measureText(a.text, a.fsz);\n                const PADDING = 1.1;\n                a.oval.rw = 0.5 * wad[0] * PADDING;\n                a.oval.rh = 0.5 * wad[1] * PADDING;\n            }\n            this.points.push(a);\n            this.space.push(this.computeSpacePoint(a));\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (this.points[n - 1] == null)\n                this.processLabel(n);\n        let bdbl = Vec.booleanArray(false, mol.numBonds);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let bt = mol.bondType(n), bo = this.bondOrder[n - 1];\n            if (bo < 0)\n                continue;\n            let col = this.effects.colBond[n];\n            if (!col)\n                col = this.policy.data.foreground;\n            bdbl[n - 1] = bo == 2 && (bt == Molecule.BONDTYPE_NORMAL || bt == Molecule.BONDTYPE_UNKNOWN);\n            let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n            let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n            if (Math.abs(x2 - x1) <= 1 && Math.abs(y2 - y1) <= 1) {\n                bdbl[n - 1] = false;\n                continue;\n            }\n            if (bdbl[n - 1])\n                continue;\n            let minDist = (bo == 1 && bt == Molecule.BONDTYPE_NORMAL ? MINBOND_LINE : MINBOND_EXOTIC) * measure.scale();\n            let xy1 = this.shrinkBond(x1, y1, x2, y2, this.backOffAtom(bfr, x1, y1, x2, y2, minDist));\n            let xy2 = this.shrinkBond(x2, y2, x1, y1, this.backOffAtom(bto, x2, y2, x1, y1, minDist));\n            this.ensureMinimumBondLength(xy1, xy2, x1, y1, x2, y2, minDist);\n            let sz = this.lineSizePix, head = 0;\n            let qbonds = QueryUtil.queryBondOrders(mol, n);\n            if (Vec.notBlank(qbonds)) {\n                Vec.sort(qbonds);\n                if (qbonds[0] == -1) {\n                    qbonds.splice(0, 1);\n                    qbonds.push(-1);\n                }\n                let qtxt = Vec.equals(qbonds, [0, 1, 2, 3, -1]) ? '?' : qbonds.map((o) => o == -1 ? 'A' : o.toString()).join('');\n                let oxy = this.orthogonalDelta(xy1[0], xy1[1], xy2[0], xy2[1], 1.3 * this.bondSepPix);\n                let v = -0.5;\n                for (let i = 0; i < 2; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    let b = {\n                        bnum: n,\n                        bfr,\n                        bto,\n                        type: BLineType.Dotted,\n                        line: new Line(lx1, ly1, lx2, ly2),\n                        size: 0.5 * sz,\n                        head,\n                        col: (col & 0xFFFFFF) | 0x80000000,\n                    };\n                    this.lines.push(b);\n                    this.space.push(this.computeSpaceLine(b));\n                }\n                let rotation = Math.atan2(xy2[1] - xy1[1], xy2[0] - xy1[0]) * RADDEG;\n                if (rotation < -90 || rotation > 90)\n                    rotation += 180;\n                let a = {\n                    anum: 0,\n                    text: qtxt,\n                    fsz: 0.35 * this.fontSizePix,\n                    col,\n                    oval: new Oval(0.5 * (xy1[0] + xy2[0]), 0.5 * (xy1[1] + xy2[1]), 0, 0),\n                    rotation\n                };\n                this.points.push(a);\n                this.space.push(this.computeSpacePoint(a));\n                continue;\n            }\n            let ltype = BLineType.Normal;\n            if (bo == 1 && bt == Molecule.BONDTYPE_INCLINED) {\n                ltype = BLineType.Inclined;\n                head = 0.15 * measure.scale();\n            }\n            else if (bo == 1 && bt == Molecule.BONDTYPE_DECLINED) {\n                ltype = BLineType.Declined;\n                head = 0.15 * measure.scale();\n            }\n            else if (bt == Molecule.BONDTYPE_UNKNOWN) {\n                ltype = BLineType.Unknown;\n                head = 0.2 * measure.scale();\n            }\n            else if (bo == 0) {\n                if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                    ltype = BLineType.DotDir;\n                else\n                    ltype = BLineType.Dotted;\n            }\n            else if ((bo == 2 || bo == 3 || bo == 4) && (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)) {\n                ltype = bo == 2 ? BLineType.IncDouble : bo == 3 ? BLineType.IncTriple : BLineType.IncQuadruple;\n                head = (bo == 2 ? 0.20 : 0.25) * measure.scale();\n            }\n            if (bo == 0) {\n                let dx = xy2[0] - xy1[0], dy = xy2[1] - xy1[1];\n                let d = norm_xy(dx, dy), invD = 1 / d;\n                let ox = 0.5 * dx * invD * this.bondSepPix, oy = 0.5 * dy * invD * this.bondSepPix;\n                if (mol.atomAdjCount(bfr) > 1) {\n                    xy1[0] += ox;\n                    xy1[1] += oy;\n                }\n                if (mol.atomAdjCount(bto) > 1) {\n                    xy2[0] -= ox;\n                    xy2[1] -= oy;\n                }\n            }\n            if (bo != 1 && bt == Molecule.BONDTYPE_DECLINED)\n                [xy1, xy2] = [xy2, xy1];\n            if (bo > 1 && (bt == Molecule.BONDTYPE_NORMAL || bt == Molecule.BONDTYPE_UNKNOWN)) {\n                let oxy = this.orthogonalDelta(xy1[0], xy1[1], xy2[0], xy2[1], this.bondSepPix);\n                let ext1 = 1, ext2 = 1;\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    ext1 = Math.min(ext1, this.backOffAtom(bfr, lx1, ly1, lx2, ly2, minDist));\n                }\n                xy1 = this.shrinkBond(xy1[0], xy1[1], xy2[0], xy2[1], ext1);\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    ext2 = Math.min(ext2, this.backOffAtom(bto, lx2, ly2, lx1, ly1, minDist));\n                }\n                xy2 = this.shrinkBond(xy2[0], xy2[1], xy1[0], xy1[1], ext2);\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    let b = {\n                        bnum: n,\n                        bfr,\n                        bto,\n                        type: ltype,\n                        line: new Line(lx1, ly1, lx2, ly2),\n                        size: sz,\n                        head,\n                        col\n                    };\n                    this.lines.push(b);\n                    this.space.push(this.computeSpaceLine(b));\n                }\n            }\n            else {\n                let b = {\n                    bnum: n,\n                    bfr,\n                    bto,\n                    type: ltype,\n                    line: new Line(xy1[0], xy1[1], xy2[0], xy2[1]),\n                    size: sz,\n                    head,\n                    col\n                };\n                this.lines.push(b);\n                this.space.push(this.computeSpaceLine(b));\n            }\n        }\n        let rings = this.orderedRingList();\n        for (let i = 0; i < rings.length; i++) {\n            for (let j = 0; j < rings[i].length; j++) {\n                let k = mol.findBond(rings[i][j], rings[i][j < rings[i].length - 1 ? j + 1 : 0]);\n                if (bdbl[k - 1]) {\n                    this.processDoubleBond(k, rings[i]);\n                    bdbl[k - 1] = false;\n                }\n            }\n        }\n        for (let i = 1; i <= mol.numBonds; i++)\n            if (bdbl[i - 1])\n                this.processDoubleBond(i, this.priorityDoubleSubstit(i));\n        let hcount = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            hcount[n - 1] = this.points[n - 1].text == null ? 0 : mol.atomHydrogens(n);\n        for (let n = 0; n < mol.numAtoms; n++)\n            if (hcount[n] > 0 && this.placeHydrogen(n, hcount[n], true))\n                hcount[n] = 0;\n        for (let n = 0; n < mol.numAtoms; n++)\n            if (hcount[n] > 0)\n                this.placeHydrogen(n, hcount[n], false);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) {\n                let isostr = mol.atomIsotope(n).toString();\n                let col = policy.data.atomCols[mol.atomicNumber(n)];\n                this.placeAdjunct(n, isostr, this.fontSizePix * 0.6, col, 150 * DEGRAD);\n            }\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let str = '';\n            let chg = this.atomCharge[n - 1];\n            if (chg == -1)\n                str = '-';\n            else if (chg == 1)\n                str = '+';\n            else if (chg < -1)\n                str = Math.abs(chg) + '-';\n            else if (chg > 1)\n                str = chg + '+';\n            for (let i = this.atomUnpaired[n - 1]; i > 0; i--)\n                str += '.';\n            if (str.length == 0)\n                continue;\n            let col = policy.data.atomCols[mol.atomicNumber(n)];\n            this.placeAdjunct(n, str, str.length == 1 ? 0.8 * this.fontSizePix : 0.6 * this.fontSizePix, col, 30 * DEGRAD);\n        }\n        for (let n = 0; n < effects.atomDecoText.length; n++) {\n            let txt = effects.atomDecoText[n];\n            if (!txt)\n                continue;\n            this.annotateAtom(n + 1, txt, effects.atomDecoCol[n], effects.atomDecoSize[n] * this.scale * ArrangeMolecule.FONT_CORRECT);\n        }\n        for (let n = 0; n < effects.bondDecoText.length; n++) {\n            let txt = effects.bondDecoText[n];\n            if (!txt)\n                continue;\n            this.annotateBond(n + 1, txt, effects.bondDecoCol[n], effects.bondDecoSize[n] * this.scale * ArrangeMolecule.FONT_CORRECT);\n        }\n        for (let n = 0; n < Math.min(effects.atomCircleSz.length, mol.numAtoms); n++)\n            if (effects.atomCircleSz[n] > 0) {\n                let dw = effects.atomCircleSz[n] * this.scale;\n                let a = this.points[n];\n                let box = new Box(a.oval.cx - dw, a.oval.cy - dw, 2 * dw, 2 * dw);\n                let spc = {\n                    anum: 0,\n                    bnum: 0,\n                    box,\n                    px: [box.minX(), box.maxX(), box.maxX(), box.minX()],\n                    py: [box.minY(), box.minY(), box.maxY(), box.maxY()]\n                };\n                this.space.push(spc);\n            }\n        if (this.artifacts != null) {\n            for (let path of this.artifacts.getResPaths()) {\n                this.createCurvedPath(path.atoms, this.artifactFract.get(path), 0);\n                this.delocalisedAnnotation(path.atoms, this.artifactCharge.get(path), this.artifactUnpaired.get(path));\n            }\n            for (let ring of this.artifacts.getResRings()) {\n                this.createCircularRing(ring.atoms);\n                this.delocalisedAnnotation(ring.atoms, this.artifactCharge.get(ring), this.artifactUnpaired.get(ring));\n            }\n            for (let arene of this.artifacts.getArenes()) {\n                let isRing = arene.atoms.length > 2;\n                if (isRing)\n                    for (let n = 0; n < arene.atoms.length; n++) {\n                        let nn = n < arene.atoms.length - 1 ? n + 1 : 0;\n                        if (mol.findBond(arene.atoms[n], arene.atoms[nn]) == 0) {\n                            isRing = false;\n                            break;\n                        }\n                    }\n                let alkeneLike = arene.atoms.length == 2;\n                this.createBondCentroid(arene.centre, arene.atoms);\n                if (!alkeneLike) {\n                    if (isRing)\n                        this.createCircularRing(arene.atoms);\n                    else\n                        this.createCurvedPath(arene.atoms, false, arene.centre);\n                }\n                this.delocalisedAnnotation(arene.atoms, this.artifactCharge.get(arene), this.artifactUnpaired.get(arene));\n            }\n        }\n        let polymers = new PolymerBlock(mol);\n        for (let id of polymers.getIDList())\n            this.processPolymerUnit(polymers.getUnit(id), polymers.getUnits());\n    }\n    numPoints() { return this.points.length; }\n    getPoint(idx) { return this.points[idx]; }\n    getPoints() { return this.points; }\n    numLines() { return this.lines.length; }\n    getLine(idx) { return this.lines[idx]; }\n    getLines() { return this.lines; }\n    numRings() { return this.rings.length; }\n    getRing(idx) { return this.rings[idx]; }\n    getRings() { return this.rings; }\n    numPaths() { return this.paths.length; }\n    getPath(idx) { return this.paths[idx]; }\n    getPaths() { return this.paths; }\n    numSpace() { return this.space.length; }\n    getSpace(idx) { return this.space[idx]; }\n    getSpaces() { return this.space; }\n    offsetEverything(dx, dy) {\n        for (let a of this.points)\n            a.oval.offsetBy(dx, dy);\n        for (let b of this.lines)\n            b.line.offsetBy(dx, dy);\n        for (let r of this.rings) {\n            r.cx += dx;\n            r.cy += dy;\n        }\n        for (let p of this.paths) {\n            Vec.addTo(p.px, dx);\n            Vec.addTo(p.py, dy);\n        }\n        for (let spc of this.space) {\n            spc.box.offsetBy(dx, dy);\n            Vec.addTo(spc.px, dx);\n            Vec.addTo(spc.py, dy);\n        }\n    }\n    offsetOrigin() {\n        let bounds = this.determineBoundary();\n        if (bounds[0] != 0 || bounds[1] != 0)\n            this.offsetEverything(-bounds[0], -bounds[1]);\n    }\n    scaleEverything(scaleBy) {\n        if (scaleBy == 1)\n            return;\n        this.scale *= scaleBy;\n        for (let a of this.points) {\n            a.oval.scaleBy(scaleBy);\n            a.fsz *= scaleBy;\n        }\n        for (let b of this.lines) {\n            b.line.scaleBy(scaleBy);\n            b.size *= scaleBy;\n            b.head *= scaleBy;\n        }\n        for (let r of this.rings) {\n            r.cx *= scaleBy;\n            r.cy *= scaleBy;\n            r.rw *= scaleBy;\n            r.rh *= scaleBy;\n            r.size *= scaleBy;\n        }\n        for (let p of this.paths) {\n            Vec.mulBy(p.px, scaleBy);\n            Vec.mulBy(p.py, scaleBy);\n            p.size *= scaleBy;\n        }\n        for (let spc of this.space) {\n            spc.box.scaleBy(scaleBy);\n            Vec.mulBy(spc.px, scaleBy);\n            Vec.mulBy(spc.py, scaleBy);\n        }\n    }\n    determineBoundary(padding) {\n        if (padding == null)\n            padding = 0;\n        if (this.space.length == 0)\n            return [0, 0, 2 * padding, 2 * padding];\n        let bounds = Vec.numberArray(0, 4);\n        let spc = this.space[0];\n        bounds[0] = spc.box.x;\n        bounds[1] = spc.box.y;\n        bounds[2] = spc.box.x + spc.box.w;\n        bounds[3] = spc.box.y + spc.box.h;\n        for (let n = this.space.length - 1; n > 0; n--) {\n            spc = this.space[n];\n            bounds[0] = Math.min(bounds[0], spc.box.x);\n            bounds[1] = Math.min(bounds[1], spc.box.y);\n            bounds[2] = Math.max(bounds[2], spc.box.x + spc.box.w);\n            bounds[3] = Math.max(bounds[3], spc.box.y + spc.box.h);\n        }\n        return bounds;\n    }\n    determineBoundaryBox() {\n        let [x1, y1, x2, y2] = this.determineBoundary();\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    squeezeInto(x, y, w, h, padding) {\n        if (padding != null && padding > 0) {\n            x += padding;\n            y += padding;\n            w -= 2 * padding;\n            h -= 2 * padding;\n        }\n        let bounds = this.determineBoundary(0);\n        let bw = bounds[2] - bounds[0], bh = bounds[3] - bounds[1];\n        if (bw > w || bh > h) {\n            let downScale = 1;\n            if (bw > w)\n                downScale = w / bw;\n            if (bh > h)\n                downScale = Math.min(downScale, h / bh);\n            this.scaleEverything(downScale);\n            Vec.mulBy(bounds, downScale);\n        }\n        this.offsetEverything(x - bounds[0] + 0.5 * (w - bounds[2] + bounds[0]), y - bounds[1] + 0.5 * (h - bounds[3] + bounds[1]));\n    }\n    limitBounds(w, h) {\n        let bounds = this.determineBoundary(0);\n        if (bounds[0] == bounds[2] && bounds[1] == bounds[3])\n            return;\n        let scale = Math.min(1, Math.min(w / (bounds[2] - bounds[0]), h / (bounds[3] - bounds[1])));\n        this.offsetEverything(-bounds[0], -bounds[1]);\n        this.scaleEverything(scale);\n    }\n    monochromate(col) {\n        for (let a of this.points)\n            a.col = col;\n        for (let b of this.lines)\n            b.col = col;\n    }\n    spatialCongestion(x, y, thresh) {\n        if (thresh == null)\n            thresh = 0.001;\n        let congest = 0;\n        for (let n = 0; n < this.points.length; n++) {\n            let a = this.points[n];\n            if (a == null)\n                continue;\n            let dx = a.oval.cx - x, dy = a.oval.cy - y;\n            congest += 1 / (dx * dx + dy * dy + thresh);\n        }\n        return congest;\n    }\n    clone() {\n        let dup = new ArrangeMolecule(this.mol, this.measure, this.policy, this.effects);\n        dup.scale = this.scale;\n        dup.bondSepPix = this.bondSepPix;\n        dup.lineSizePix = this.lineSizePix;\n        dup.fontSizePix = this.fontSizePix;\n        dup.ymul = this.ymul;\n        for (let a of this.points)\n            dup.points.push(clone(a));\n        for (let b of this.lines)\n            dup.lines.push(clone(b));\n        for (let s of this.space)\n            dup.space.push(clone(s));\n        return dup;\n    }\n    setupBondOrders() {\n        const mol = this.mol;\n        for (let n = 0; n < mol.numBonds; n++)\n            this.bondOrder[n] = mol.bondOrder(n + 1);\n        for (let n = 0; n < mol.numAtoms; n++) {\n            this.atomCharge[n] = mol.atomCharge(n + 1);\n            this.atomUnpaired[n] = mol.atomUnpaired(n + 1);\n        }\n        let delocalise = (obj, atoms) => {\n            let charge = 0, unpaired = 0;\n            for (let a of atoms) {\n                charge += this.atomCharge[a - 1];\n                unpaired += this.atomUnpaired[a - 1];\n                this.atomCharge[a - 1] = this.atomUnpaired[a - 1] = 0;\n            }\n            this.artifactCharge.set(obj, charge);\n            this.artifactUnpaired.set(obj, unpaired);\n            for (let a1 of atoms)\n                for (let a2 of mol.atomAdjList(a1))\n                    if (!atoms.includes(a2)) {\n                        let b = mol.findBond(a1, a2);\n                        if (this.bondOrder[b - 1] >= 0)\n                            this.bondOrder[b - 1] = 1;\n                    }\n        };\n        if (this.artifacts == null)\n            return;\n        for (let path of this.artifacts.getResPaths()) {\n            let charge = 0, unpaired = 0, orders = 0;\n            for (let n = 0; n < path.atoms.length; n++) {\n                charge += mol.atomCharge(path.atoms[n]);\n                unpaired += mol.atomUnpaired(path.atoms[n]);\n                let b = mol.findBond(path.atoms[n], path.atoms[n < path.atoms.length - 1 ? n + 1 : 0]);\n                if (b > 0)\n                    orders += mol.bondOrder(b);\n            }\n            let fractional = (2 * orders - charge + unpaired) / path.atoms.length < 1;\n            this.artifactFract.set(path, fractional);\n            for (let n = 0; n < path.atoms.length - 1; n++) {\n                let b = mol.findBond(path.atoms[n], path.atoms[n + 1]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = fractional ? -1 : 1;\n            }\n            delocalise(path, path.atoms);\n        }\n        for (let ring of this.artifacts.getResRings()) {\n            for (let n = 0; n < ring.atoms.length; n++) {\n                let b = mol.findBond(ring.atoms[n], ring.atoms[n < ring.atoms.length - 1 ? n + 1 : 0]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = 1;\n            }\n            delocalise(ring, ring.atoms);\n        }\n        for (let arene of this.artifacts.getArenes()) {\n            let alkeneLike = arene.atoms.length == 2;\n            for (let n = 0; n < arene.atoms.length; n++) {\n                if (!alkeneLike) {\n                    let b = mol.findBond(arene.atoms[n], arene.atoms[n < arene.atoms.length - 1 ? n + 1 : 0]);\n                    if (b > 0)\n                        this.bondOrder[b - 1] = 1;\n                }\n                let b = mol.findBond(arene.centre, arene.atoms[n]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = -1;\n            }\n            delocalise(arene, arene.atoms);\n        }\n    }\n    placeAdjunct(atom, str, fsz, col, angdir) {\n        let wad = this.measure.measureText(str, fsz);\n        let a = this.points[atom - 1];\n        let cx = a.oval.cx, cy = a.oval.cy, rw = 0.55 * wad[0], rh = 0.55 * wad[1];\n        if (str == '..') {\n            let zeroBonds = this.mol.atomAdjBonds(atom).filter((b) => this.mol.bondOrder(b) == 0);\n            if (zeroBonds.length == 1) {\n                let zpt = this.getPoint(this.mol.bondOther(zeroBonds[0], atom) - 1);\n                let dx = zpt.oval.cx - cx, dy = zpt.oval.cy - cy, inv = 1 / norm_xy(dx, dy);\n                let r = fsz * 0.15;\n                let ox = dy * inv * 2.5 * r, oy = -dx * inv * 2.5 * r;\n                let ext = 1.2 * (rw + rh) * inv;\n                [dx, dy] = [dx * ext, dy * ext];\n                this.points.push({ anum: 0, text: '.', fsz, col, oval: new Oval(cx + dx + ox, cy + dy + oy, r, r) });\n                this.points.push({ anum: 0, text: '.', fsz, col, oval: new Oval(cx + dx - ox, cy + dy - oy, r, r) });\n                return;\n            }\n        }\n        let bestScore = 0, bestDX = 0, bestDY = 0;\n        let px = Vec.numberArray(0, 4), py = Vec.numberArray(0, 4);\n        let angThresh = 10;\n        let shorted = false;\n        for (let ext = 0.5 * (a.oval.rw + a.oval.rh); !shorted && ext < 1.5 * this.measure.scale(); ext += 0.1 * this.measure.scale()) {\n            const DELTA = 5 * DEGRAD;\n            for (let d = 0; !shorted && d < Math.PI - 0.0001; d += DELTA)\n                for (let s = -1; s <= 1; s += 2) {\n                    let dang = d * s + (s > 0 ? DELTA : 0), ang = angdir + dang;\n                    let dx = ext * Math.cos(ang), dy = ext * Math.sin(ang) * -this.ymul;\n                    let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                    px[0] = x1;\n                    py[0] = y1;\n                    px[1] = x2;\n                    py[1] = y1;\n                    px[2] = x2;\n                    py[2] = y2;\n                    px[3] = x1;\n                    py[3] = y2;\n                    let viol = this.countPolyViolations(px, py, null, false);\n                    let score = 10 * viol + Math.abs(dang) + 10 * ext;\n                    let shortCircuit = viol == 0 && Math.abs(dang) < (angThresh + 1) * DEGRAD;\n                    if (bestScore == 0 || shortCircuit || score < bestScore) {\n                        bestScore = score;\n                        bestDX = dx;\n                        bestDY = dy;\n                    }\n                    if (shortCircuit) {\n                        shorted = true;\n                        break;\n                    }\n                }\n            angThresh += 5;\n        }\n        a =\n            {\n                anum: 0,\n                text: str,\n                fsz,\n                col,\n                oval: new Oval(cx + bestDX, cy + bestDY, rw, rh)\n            };\n        this.points.push(a);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(a.oval.cx - rw, a.oval.cy - rh, 2 * rw, 2 * rh),\n            px: [a.oval.cx - rw, a.oval.cx + rw, a.oval.cx + rw, a.oval.cx - rw],\n            py: [a.oval.cy - rh, a.oval.cy - rh, a.oval.cy + rh, a.oval.cy + rh]\n        };\n        this.space.push(spc);\n    }\n    processLabel(anum) {\n        let ax = this.mol.atomX(anum), ay = this.mol.atomY(anum);\n        let left = 0, right = 0;\n        let adj = this.mol.atomAdjList(anum);\n        for (let n = 0; n < adj.length; n++) {\n            let theta = Math.atan2(this.mol.atomY(adj[n]) - ay, this.mol.atomX(adj[n]) - ax) * RADDEG;\n            if (theta >= -15 && theta <= 15)\n                right += 3;\n            else if (theta >= -85 && theta <= 85)\n                right++;\n            else if (theta > 85 && theta < 95) { }\n            else if (theta < -85 && theta > -95) { }\n            else if (theta > 165 || theta < -165)\n                left += 3;\n            else\n                left++;\n        }\n        let label = this.mol.atomElement(anum);\n        let ibar = label.indexOf('|'), ibrace = label.indexOf('{');\n        let side = 0;\n        if (left == 0 && right == 0 && ibar < 0 && ibrace < 0) { }\n        else if (left < right)\n            side = -1;\n        else if (right < left)\n            side = 1;\n        else {\n            let score1 = CoordUtil.congestionPoint(this.mol, ax - 1, ay);\n            let score2 = CoordUtil.congestionPoint(this.mol, ax + 1, ay);\n            if (score1 < 0.5 * score2)\n                side = -1;\n            else\n                side = 1;\n        }\n        let chunks = null;\n        let position = null;\n        let primary = null;\n        let refchunk = 0;\n        if (ibar < 0 && ibrace < 0) {\n            if (side == 0)\n                chunks = [label];\n            else if (side < 0) {\n                chunks = [label.substring(0, label.length - 1), label.substring(label.length - 1)];\n                refchunk = 1;\n            }\n            else\n                chunks = [label.substring(0, 1), label.substring(1)];\n        }\n        else {\n            let bits = [];\n            let bpos = [];\n            let bpri = [];\n            let blocks = label.split('|');\n            if (side < 0)\n                blocks = Vec.reverse(blocks);\n            let buff = '';\n            for (let i = 0; i < blocks.length; i++) {\n                let isPrimary = (side >= 0 && i == 0) || (side < 0 && i == blocks.length - 1);\n                if (side < 0 && refchunk == 0 && i == blocks.length - 1)\n                    refchunk = bits.length;\n                let pos = 0;\n                buff = '';\n                for (let j = 0; j < blocks[i].length; j++) {\n                    let ch = blocks[i].charAt(j);\n                    if (ch == '{' || ch == '}') {\n                        if (buff.length > 0) {\n                            bits.push(buff.toString());\n                            bpos.push(pos);\n                            bpri.push(isPrimary);\n                        }\n                        buff = '';\n                        pos = ch == '{' ? -1 : 0;\n                    }\n                    else if (ch == '^' && pos == -1 && buff.length == 0)\n                        pos = 1;\n                    else\n                        buff += ch;\n                }\n                if (buff.length > 0) {\n                    bits.push(buff.toString());\n                    bpos.push(pos);\n                    bpri.push(isPrimary);\n                }\n            }\n            chunks = bits;\n            position = bpos;\n            primary = bpri;\n            while (refchunk < chunks.length - 1 && position[refchunk] != 0)\n                refchunk++;\n        }\n        let PADDING = 1.1;\n        let SSFRACT = 0.6;\n        let chunkw = Vec.numberArray(0, chunks.length);\n        let tw = 0;\n        for (let n = 0; n < chunks.length; n++) {\n            chunkw[n] = this.measure.measureText(chunks[n], this.fontSizePix)[0];\n            if (position != null && position[n] != 0)\n                chunkw[n] *= SSFRACT;\n            tw += chunkw[n];\n        }\n        let x = this.measure.angToX(ax), y = this.measure.angToY(ay);\n        for (let n = 0; n < refchunk; n++)\n            x -= chunkw[n];\n        x -= 0.5 * chunkw[refchunk];\n        for (let n = 0; n < chunks.length; n++) {\n            let a = {\n                anum: (n == refchunk || (primary != null && primary[n])) ? anum : 0,\n                text: chunks[n],\n                fsz: this.fontSizePix,\n                col: this.policy.data.atomCols[this.mol.atomicNumber(anum)],\n                oval: new Oval(x + 0.5 * chunkw[n], y, 0.5 * chunkw[n] * PADDING, 0.5 * this.fontSizePix * PADDING)\n            };\n            if (position != null && position[n] != 0) {\n                a.fsz *= SSFRACT;\n                if (position[n] < 0)\n                    a.oval.cy += a.fsz * 0.7 * (this.measure.yIsUp() ? -1 : 1);\n                else\n                    a.oval.cy -= a.fsz * 0.3 * (this.measure.yIsUp() ? -1 : 1);\n            }\n            if (n == refchunk) {\n                this.points[anum - 1] = a;\n                this.space[anum - 1] = this.computeSpacePoint(a);\n            }\n            else {\n                this.points.push(a);\n                this.space.push(this.computeSpacePoint(a));\n            }\n            x += chunkw[n];\n        }\n    }\n    backOffAtom(atom, x, y, fx, fy, minDist) {\n        if (x == fx && y == fy)\n            return 1;\n        let dx = x - fx, dy = y - fy, dist = norm_xy(dx, dy), inv = 1.0 / dist;\n        const bump = 0.1 * this.measure.scale();\n        let xbump = x + 2 * bump * dx * inv, ybump = y + 2 * bump * dy * inv;\n        let ext = dist;\n        let active = false;\n        for (let spc of this.space)\n            if (spc.anum == atom) {\n                const sz = spc.px.length;\n                if (sz == 0)\n                    continue;\n                for (let n = 0; n < sz; n++) {\n                    let nn = n < sz - 1 ? n + 1 : 0;\n                    let x1 = spc.px[n], y1 = spc.py[n], x2 = spc.px[nn], y2 = spc.py[nn];\n                    if (!GeomUtil.doLineSegsIntersect(xbump, ybump, fx, fy, x1, y1, x2, y2))\n                        continue;\n                    let xy = GeomUtil.lineIntersect(x, y, fx, fy, x1, y1, x2, y2);\n                    active = true;\n                    ext = Math.min(ext, norm_xy(xy[0] - fx, xy[1] - fy));\n                }\n            }\n        if (active) {\n            ext = Math.max(minDist, ext - bump);\n            return ext / dist;\n        }\n        else\n            return 1;\n    }\n    backOffAtomDelta(atom, x, y, fx, fy, minDist) {\n        let ext = this.backOffAtom(atom, x, y, fx, fy, minDist);\n        if (ext >= 1)\n            return null;\n        ext = 1 - ext;\n        let dx = (fx - x) * ext, dy = (fy - y) * ext;\n        return [norm2_xy(dx, dy), dx, dy];\n    }\n    shrinkBond(x, y, fx, fy, ext) {\n        if (ext == 1)\n            return [x, y];\n        let dx = x - fx, dy = y - fy;\n        return [fx + ext * dx, fy + ext * dy];\n    }\n    ensureMinimumBondLength(xy1, xy2, x1, y1, x2, y2, minDist) {\n        let dx = xy2[0] - xy1[0], dy = xy2[1] - xy1[1];\n        let dsq = norm2_xy(dx, dy);\n        minDist = Math.min(minDist, norm_xy(x2 - x1, y2 - y1));\n        if (dsq >= sqr(minDist - 0.0001))\n            return;\n        let d12 = Math.sqrt(dsq), d1 = norm_xy(xy1[0] - x1, xy1[1] - y1), d2 = norm_xy(x2 - xy2[0], y2 - xy2[1]);\n        let mag = 1 - minDist / d12, invD12 = 1.0 / (d1 + d2), mag1 = d1 * mag * invD12, mag2 = d2 * mag * invD12;\n        xy1[0] -= dx * mag1;\n        xy1[1] -= dy * mag1;\n        xy2[0] += dx * mag2;\n        xy2[1] += dy * mag2;\n    }\n    orderedRingList() {\n        let rings = [];\n        let SIZE_ORDER = [6, 5, 7, 4, 3];\n        for (let i = 0; i < SIZE_ORDER.length; i++) {\n            let nring = this.mol.findRingsOfSize(SIZE_ORDER[i]);\n            for (let j = 0; j < nring.length; j++)\n                rings.push(nring[j]);\n        }\n        let ringsz = rings.length;\n        let ringbusy = Vec.numberArray(0, this.mol.numAtoms);\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[n];\n            for (let i = 0; i < r.length; i++)\n                ringbusy[r[i] - 1]++;\n        }\n        let ringscore = Vec.numberArray(0, ringsz);\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[n];\n            for (let i = 0; i < r.length; i++)\n                ringscore[n] += ringbusy[r[i] - 1];\n        }\n        let ringorder = Vec.idxSort(ringscore);\n        let resbcount = Vec.numberArray(0, ringsz), maxbcount = 0;\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[ringorder[n]];\n            for (let i = 0; i < r.length; i++) {\n                let j = this.mol.findBond(r[i], r[i + 1 < r.length ? i + 1 : 0]);\n                if (this.mol.bondOrder(j) == 2)\n                    resbcount[n]++;\n            }\n            maxbcount = Math.max(maxbcount, resbcount[n]);\n        }\n        let pos = 0, ret = [];\n        for (let sz = maxbcount; sz >= 0; sz--) {\n            for (let n = 0; n < ringsz; n++)\n                if (resbcount[n] == sz)\n                    ret.push(rings[ringorder[n]]);\n        }\n        return ret;\n    }\n    orthogonalDelta(x1, y1, x2, y2, d) {\n        let ox = y1 - y2, oy = x2 - x1, dsq = norm2_xy(ox, oy);\n        let sc = dsq > 0 ? d / Math.sqrt(dsq) : 1;\n        return [ox * sc, oy * sc];\n    }\n    processDoubleBond(idx, priority) {\n        let bfr = this.mol.bondFrom(idx), bto = this.mol.bondTo(idx);\n        let nfr = this.mol.atomAdjList(bfr), nto = this.mol.atomAdjList(bto);\n        let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n        let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n        let oxy = this.orthogonalDelta(x1, y1, x2, y2, this.bondSepPix);\n        const minDist = MINBOND_EXOTIC * this.measure.scale();\n        let dx = x2 - x1, dy = y2 - y1, btheta = Math.atan2(dy, dx);\n        let countFLeft = 0, countFRight = 0, countTLeft = 0, countTRight = 0;\n        let idxFLeft = 0, idxFRight = 0, idxTLeft = 0, idxTRight = 0;\n        let noshift = false;\n        for (let n = 0; n < nfr.length; n++)\n            if (nfr[n] != bto) {\n                let bo = this.mol.bondOrder(this.mol.findBond(bfr, nfr[n]));\n                if (bo == 0)\n                    continue;\n                if (bo > 1) {\n                    noshift = true;\n                    break;\n                }\n                let ispri = false;\n                for (let i = 0; i < (priority == null ? 0 : priority.length); i++)\n                    if (priority[i] == nfr[n])\n                        ispri = true;\n                let theta = angleDiff(Math.atan2(this.points[nfr[n] - 1].oval.cy - y1, this.points[nfr[n] - 1].oval.cx - x1), btheta);\n                if (Math.abs(theta) * RADDEG > 175) {\n                    noshift = true;\n                    break;\n                }\n                if (theta > 0) {\n                    if (ispri)\n                        countFLeft++;\n                    idxFLeft = nfr[n];\n                }\n                else {\n                    if (ispri)\n                        countFRight++;\n                    idxFRight = nfr[n];\n                }\n            }\n        for (let n = 0; n < nto.length; n++)\n            if (nto[n] != bfr) {\n                let bo = this.mol.bondOrder(this.mol.findBond(bto, nto[n]));\n                if (bo == 0)\n                    continue;\n                if (bo > 1) {\n                    noshift = true;\n                    break;\n                }\n                let ispri = false;\n                for (let i = 0; i < (priority == null ? 0 : priority.length); i++)\n                    if (priority[i] == nto[n])\n                        ispri = true;\n                let theta = angleDiff(Math.atan2(this.points[nto[n] - 1].oval.cy - y2, this.points[nto[n] - 1].oval.cx - x2), btheta);\n                if (Math.abs(theta) * RADDEG > 175) {\n                    noshift = true;\n                    break;\n                }\n                if (theta > 0) {\n                    if (ispri)\n                        countTLeft++;\n                    idxTLeft = nto[n];\n                }\n                else {\n                    if (ispri)\n                        countTRight++;\n                    idxTRight = nto[n];\n                }\n            }\n        let side = 0;\n        if (noshift || countFLeft > 1 || countFRight > 1 || countTLeft > 1 || countTRight > 1) { }\n        else if (countFLeft > 0 && countFRight > 0) { }\n        else if (countTLeft > 0 && countTRight > 0) { }\n        else if (countFLeft > 0 || countTLeft > 0)\n            side = 1;\n        else if (countFRight > 0 || countTRight > 0)\n            side = -1;\n        let sz = this.lineSizePix;\n        let ax1 = x1, ay1 = y1, ax2 = x2, ay2 = y2;\n        let bx1 = 0, by1 = 0, bx2 = 0, by2 = 0;\n        if (side == 0) {\n            ax1 = x1 + 0.5 * oxy[0];\n            ay1 = y1 + 0.5 * oxy[1];\n            ax2 = x2 + 0.5 * oxy[0];\n            ay2 = y2 + 0.5 * oxy[1];\n            bx1 = x1 - 0.5 * oxy[0];\n            by1 = y1 - 0.5 * oxy[1];\n            bx2 = x2 - 0.5 * oxy[0];\n            by2 = y2 - 0.5 * oxy[1];\n        }\n        else if (side > 0) {\n            bx1 = x1 + oxy[0];\n            by1 = y1 + oxy[1];\n            bx2 = x2 + oxy[0];\n            by2 = y2 + oxy[1];\n            if (nfr.length > 1 && this.points[bfr - 1].text == null) {\n                bx1 += oxy[1];\n                by1 -= oxy[0];\n            }\n            if (nto.length > 1 && this.points[bto - 1].text == null) {\n                bx2 -= oxy[1];\n                by2 += oxy[0];\n            }\n        }\n        else if (side < 0) {\n            bx1 = x1 - oxy[0];\n            by1 = y1 - oxy[1];\n            bx2 = x2 - oxy[0];\n            by2 = y2 - oxy[1];\n            if (nfr.length > 1 && this.points[bfr - 1].text == null) {\n                bx1 += oxy[1];\n                by1 -= oxy[0];\n            }\n            if (nto.length > 1 && this.points[bto - 1].text == null) {\n                bx2 -= oxy[1];\n                by2 += oxy[0];\n            }\n        }\n        if (side != 0) {\n            if (this.mol.atomElement(bfr).length <= 2 && this.mol.atomAdjCount(bfr) == 1 && this.points[bfr - 1].text != null) {\n                this.bumpAtomPosition(bfr, 0.5 * oxy[0] * side, 0.5 * oxy[1] * side);\n            }\n            if (this.mol.atomElement(bto).length <= 2 && this.mol.atomAdjCount(bto) == 1 && this.points[bto - 1].text != null) {\n                this.bumpAtomPosition(bto, 0.5 * oxy[0] * side, 0.5 * oxy[1] * side);\n            }\n        }\n        let delta1 = this.backOffAtomDelta(bfr, ax1, ay1, ax2, ay2, minDist), delta2 = this.backOffAtomDelta(bfr, bx1, by1, bx2, by2, minDist);\n        if (delta1 != null || delta2 != null) {\n            let delta = (delta1 == null ? 0 : delta1[0]) > (delta2 == null ? 0 : delta2[0]) ? delta1 : delta2;\n            ax1 += delta[1];\n            ay1 += delta[2];\n            bx1 += delta[1];\n            by1 += delta[2];\n        }\n        let delta3 = this.backOffAtomDelta(bto, ax2, ay2, ax1, ay1, minDist), delta4 = this.backOffAtomDelta(bto, bx2, by2, bx1, by1, minDist);\n        if (delta3 != null || delta4 != null) {\n            let delta = (delta3 == null ? 0 : delta3[0]) > (delta4 == null ? 0 : delta4[0]) ? delta3 : delta4;\n            ax2 += delta[1];\n            ay2 += delta[2];\n            bx2 += delta[1];\n            by2 += delta[2];\n        }\n        if (side == 0 && !noshift) {\n            let xy = null;\n            if (this.points[bfr - 1].text == null && !this.mol.bondInRing(idx)) {\n                xy = this.adjustBondPosition(idxFLeft, bfr, ax1, ay1, ax2, ay2);\n                if (xy != null) {\n                    ax1 = xy[0];\n                    ay1 = xy[1];\n                }\n                xy = this.adjustBondPosition(idxFRight, bfr, bx1, by1, bx2, by2);\n                if (xy != null) {\n                    bx1 = xy[0];\n                    by1 = xy[1];\n                }\n            }\n            if (this.points[bto - 1].text == null && !this.mol.bondInRing(idx)) {\n                xy = this.adjustBondPosition(idxTLeft, bto, ax2, ay2, ax1, ay1);\n                if (xy != null) {\n                    ax2 = xy[0];\n                    ay2 = xy[1];\n                }\n                xy = this.adjustBondPosition(idxTRight, bto, bx2, by2, bx1, by1);\n                if (xy != null) {\n                    bx2 = xy[0];\n                    by2 = xy[1];\n                }\n            }\n        }\n        let lt = this.mol.bondType(idx) == Molecule.BONDTYPE_UNKNOWN ? BLineType.Unknown : BLineType.Normal;\n        let head = lt == BLineType.Unknown ? 0.1 * this.scale : 0;\n        let col = this.effects.colBond[idx];\n        if (!col)\n            col = this.policy.data.foreground;\n        let b1 = {\n            bnum: idx,\n            bfr,\n            bto,\n            type: lt,\n            line: new Line(ax1, ay1, ax2, ay2),\n            size: sz,\n            head,\n            col\n        };\n        let b2 = {\n            bnum: idx,\n            bfr,\n            bto,\n            type: lt,\n            line: new Line(bx1, by1, bx2, by2),\n            size: sz,\n            head,\n            col\n        };\n        this.lines.push(b1);\n        this.lines.push(b2);\n        this.space.push(this.computeSpaceLine(b1));\n        this.space.push(this.computeSpaceLine(b2));\n    }\n    placeHydrogen(idx, hcount, fussy) {\n        let font = FontData.main;\n        const SSFRACT = 0.6;\n        const GLYPH_H = font.getIndex('H');\n        let a = this.points[idx];\n        let emscale = a.fsz * font.INV_UNITS_PER_EM;\n        let sub = hcount >= 2 ? hcount.toString() : '';\n        let outlineX = font.getOutlineX(GLYPH_H), outlineY = font.getOutlineY(GLYPH_H);\n        let firstEMW = font.HORIZ_ADV_X[GLYPH_H], emw = firstEMW;\n        for (let n = 0; n < sub.length; n++) {\n            let ch = sub.charAt(n), g = font.getIndex(ch);\n            if (n == 0) {\n                emw += font.getKerning('H', ch);\n            }\n            else {\n                let chp = sub.charAt(n - 1);\n                emw += font.getKerning(chp, ch) * SSFRACT;\n            }\n            let extraX = font.getOutlineX(g), extraY = font.getOutlineY(g);\n            Vec.addTo(extraX, emw / SSFRACT);\n            Vec.addTo(extraY, (SSFRACT - 1) * font.ASCENT * 1.30);\n            Vec.mulBy(extraX, SSFRACT);\n            Vec.mulBy(extraY, SSFRACT);\n            outlineX = outlineX.concat(extraX);\n            outlineY = outlineY.concat(extraY);\n            emw += font.HORIZ_ADV_X[g] * SSFRACT;\n        }\n        if (sub.length > 0) {\n            let qh = new QuickHull(outlineX, outlineY, 0);\n            outlineX = qh.hullX;\n            outlineY = qh.hullY;\n        }\n        let emdx = -0.5 * firstEMW, emdy = 0.5 * font.ASCENT * font.ASCENT_FUDGE;\n        for (let n = 0; n < outlineX.length; n++) {\n            outlineX[n] = a.oval.cx + (emdx + outlineX[n]) * emscale;\n            outlineY[n] = a.oval.cy + (emdy - outlineY[n]) * emscale * this.ymul;\n        }\n        let dx = 0, dy = 0;\n        let srcWAD = this.measure.measureText(a.text, a.fsz);\n        if (fussy) {\n            let RIGHTLEFT = [0, 1, 2, 3];\n            let LEFTRIGHT = [1, 0, 2, 3];\n            let UPDOWN = [2, 3, 0, 1];\n            let DOWNUP = [3, 2, 0, 1];\n            let quad = RIGHTLEFT, adj = this.mol.atomAdjList(a.anum);\n            if (adj.length == 0) {\n                let LEFTIES = ['O', 'S', 'F', 'Cl', 'Br', 'I'];\n                if (this.mol.atomCharge(a.anum) == 0 && this.mol.atomUnpaired(a.anum) == 0 &&\n                    LEFTIES.indexOf(this.mol.atomElement(a.anum)) >= 0)\n                    quad = LEFTRIGHT;\n                else\n                    quad = RIGHTLEFT;\n            }\n            else {\n                let allLeft = true, allRight = true, allUp = true, allDown = true;\n                const ax = this.mol.atomX(a.anum), ay = this.mol.atomY(a.anum);\n                for (let n = 0; n < adj.length; n++) {\n                    const bx = this.mol.atomX(adj[n]), by = this.mol.atomY(adj[n]);\n                    if (bx > ax + 0.01)\n                        allLeft = false;\n                    if (bx < ax - 0.01)\n                        allRight = false;\n                    if (by < ay - 0.01)\n                        allUp = false;\n                    if (by > ay + 0.01)\n                        allDown = false;\n                }\n                if (allLeft) { }\n                else if (allRight)\n                    quad = LEFTRIGHT;\n                else if (allUp)\n                    quad = DOWNUP;\n                else if (allDown)\n                    quad = UPDOWN;\n            }\n            for (let n = 0; n < 4; n++) {\n                let tx = 0, ty = 0;\n                if (quad[n] == 0)\n                    tx = 0.5 * srcWAD[0] + 0.5 * firstEMW * emscale;\n                else if (quad[n] == 1)\n                    tx = -0.5 * srcWAD[0] - (emw - 0.5 * firstEMW) * emscale;\n                else if (quad[n] == 2)\n                    ty = (1.1 * srcWAD[1] + 0.5 * srcWAD[2]) * -this.ymul;\n                else if (quad[n] == 3)\n                    ty = (1.1 * srcWAD[1] + 0.5 * srcWAD[2]) * this.ymul;\n                Vec.addTo(outlineX, tx);\n                Vec.addTo(outlineY, ty);\n                let viol = this.countPolyViolations(outlineX, outlineY, null, true);\n                Vec.addTo(outlineX, -tx);\n                Vec.addTo(outlineY, -ty);\n                if (viol == 0) {\n                    dx = tx;\n                    dy = ty;\n                    break;\n                }\n            }\n            if (dx == 0 && dy == 0)\n                return false;\n        }\n        else {\n            const mx1 = Vec.min(outlineY), mx2 = Vec.max(outlineX), my1 = Vec.min(outlineY), my2 = Vec.max(outlineY), cx = 0.5 * (mx1 + mx2), cy = 0.5 * (my1 + my2);\n            const mag = 1 + this.measure.scale() * this.policy.data.fontSize * ArrangeMolecule.FONT_CORRECT * 0.1 / Math.max(mx2 - cx, my2 - cy);\n            const psz = outlineX.length;\n            let magPX = outlineX.slice(0), magPY = outlineY.slice(0);\n            for (let n = 0; n < psz; n++) {\n                magPX[n] = (magPX[n] - cx) * mag + cx;\n                magPY[n] = (magPY[n] - cy) * mag + cy;\n            }\n            let bestScore = 0, bestExt = 0, bestAng = 0;\n            for (let ext = 0.5 * (a.oval.rw + a.oval.rh); ext < 1.5 * this.measure.scale(); ext += 0.1 * this.measure.scale()) {\n                let anyNoClash = false;\n                for (let ang = 0; ang < 2 * Math.PI; ang += 5 * DEGRAD) {\n                    let tx = ext * Math.cos(ang), ty = ext * Math.sin(ang);\n                    Vec.addTo(magPX, tx);\n                    Vec.addTo(magPY, ty);\n                    let viol = this.countPolyViolations(magPX, magPY, null, false);\n                    Vec.addTo(magPX, -tx);\n                    Vec.addTo(magPY, -ty);\n                    if (viol == 0)\n                        anyNoClash = true;\n                    let score = 10 * viol + this.spatialCongestion(a.oval.cx + tx, a.oval.cy + ty, 0.5) + 2 * ext;\n                    if (bestScore == 0 || score < bestScore) {\n                        bestScore = score;\n                        bestExt = ext;\n                        bestAng = ang;\n                        dx = tx;\n                        dy = ty;\n                    }\n                }\n                if (anyNoClash)\n                    break;\n            }\n        }\n        let wad = this.measure.measureText('H', a.fsz);\n        const PADDING = 1.1;\n        let ah = {\n            anum: 0,\n            text: 'H',\n            fsz: a.fsz,\n            col: a.col,\n            oval: new Oval(a.oval.cx + dx, a.oval.cy + dy, 0.5 * wad[0] * PADDING, 0.5 * wad[1] * PADDING)\n        };\n        this.points.push(ah);\n        if (sub.length > 0) {\n            const subFsz = SSFRACT * a.fsz;\n            wad = this.measure.measureText(sub, subFsz);\n            let an = {\n                anum: 0,\n                text: sub,\n                fsz: subFsz,\n                col: a.col,\n                oval: new Oval(ah.oval.cx + 0.5 * firstEMW * a.fsz * font.INV_UNITS_PER_EM + 0.5 * wad[0], ah.oval.cy + (1 - SSFRACT) * a.fsz, 0.5 * wad[0] * PADDING, 0.5 * wad[1] * PADDING)\n            };\n            this.points.push(an);\n        }\n        Vec.addTo(outlineX, dx);\n        Vec.addTo(outlineY, dy);\n        let minX = Vec.min(outlineX), minY = Vec.min(outlineY);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(minX, minY, Vec.max(outlineX) - minX, Vec.max(outlineY) - minY),\n            px: outlineX,\n            py: outlineY\n        };\n        this.space.push(spc);\n        return true;\n    }\n    computeSpacePoint(a) {\n        let s = {\n            anum: a.anum,\n            bnum: 0,\n            box: new Box(),\n            px: [],\n            py: []\n        };\n        const font = FontData.main;\n        let outlineX = [], outlineY = [];\n        let emw = 0, nglyphs = 0;\n        if (a.text != null) {\n            for (let n = 0; n < a.text.length; n++) {\n                let ch1 = a.text.charAt(n);\n                let i = font.getIndex(ch1);\n                if (i >= 0) {\n                    if (emw == 0) {\n                        outlineX = font.getOutlineX(i);\n                        outlineY = font.getOutlineY(i);\n                        nglyphs = 1;\n                    }\n                    else {\n                        let extraX = font.getOutlineX(i), extraY = font.getOutlineY(i);\n                        if (extraX.length > 0) {\n                            Vec.addTo(extraX, emw);\n                            outlineX = outlineX.concat(extraX);\n                            outlineY = outlineY.concat(extraY);\n                            nglyphs++;\n                        }\n                    }\n                    emw += font.HORIZ_ADV_X[i];\n                }\n                else\n                    emw += font.MISSING_HORZ;\n                if (n < a.text.length - 1) {\n                    let ch2 = a.text.charAt(n + 1);\n                    emw += font.getKerning(ch1, ch2);\n                }\n            }\n        }\n        if (outlineX.length > 0) {\n            if (nglyphs > 1) {\n                let qh = new QuickHull(outlineX, outlineY, 0);\n                outlineX = qh.hullX;\n                outlineY = qh.hullY;\n            }\n            let emdx = -0.5 * emw, emdy = 0.5 * font.ASCENT * font.ASCENT_FUDGE;\n            let emscale = a.fsz * font.INV_UNITS_PER_EM;\n            for (let n = 0; n < outlineX.length; n++) {\n                outlineX[n] = a.oval.cx + (emdx + outlineX[n]) * emscale;\n                outlineY[n] = a.oval.cy + (emdy - outlineY[n]) * emscale * this.ymul;\n            }\n            s.px = outlineX;\n            s.py = outlineY;\n            let minX = Vec.min(outlineX), minY = Vec.min(outlineY);\n            s.box = new Box(minX, minY, Vec.max(outlineX) - minX, Vec.max(outlineY) - minY);\n        }\n        else {\n            s.box = Box.fromOval(a.oval);\n            if (s.box.w > 0 && s.box.h > 0) {\n                s.px = [s.box.minX(), s.box.maxX(), s.box.maxX(), s.box.minX()];\n                s.py = [s.box.minY(), s.box.minY(), s.box.maxY(), s.box.maxY()];\n            }\n        }\n        return s;\n    }\n    computeSpaceLine(b) {\n        let s = {\n            anum: 0,\n            bnum: b.bnum,\n            box: new Box(),\n            px: [],\n            py: []\n        };\n        if (b.type == BLineType.Normal || b.type == BLineType.Dotted || b.type == BLineType.DotDir) {\n            s.px = [b.line.x1, b.line.x2];\n            s.py = [b.line.y1, b.line.y2];\n        }\n        else {\n            const dx = b.line.x2 - b.line.x1, dy = b.line.y2 - b.line.y1;\n            const norm = b.head / Math.sqrt(dx * dx + dy * dy);\n            const ox = norm * dy, oy = -norm * dx;\n            if (b.type == BLineType.Unknown) {\n                s.px = [b.line.x1 + ox, b.line.x1 - ox, b.line.x2 - ox, b.line.x2 + ox];\n                s.py = [b.line.y1 + oy, b.line.y1 - oy, b.line.y2 - oy, b.line.y2 + oy];\n            }\n            else {\n                s.px = [b.line.x1, b.line.x2 - ox, b.line.x2 + ox];\n                s.py = [b.line.y1, b.line.y2 - oy, b.line.y2 + oy];\n            }\n        }\n        s.box.x = Vec.min(s.px) - b.size;\n        s.box.y = Vec.min(s.py) - b.size;\n        s.box.w = Vec.max(s.px) - s.box.x + b.size;\n        s.box.h = Vec.max(s.py) - s.box.y + b.size;\n        return s;\n    }\n    bumpAtomPosition(atom, dx, dy) {\n        let p = this.points[atom - 1];\n        p.oval.cx += dx;\n        p.oval.cy += dy;\n        for (let n = this.space.length - 1; n >= 0; n--) {\n            let s = this.space[n - 1];\n            if (s == null || s.anum != atom)\n                continue;\n            s.box.x += dx;\n            s.box.y += dy;\n            Vec.addTo(s.px, dx);\n            Vec.addTo(s.py, dy);\n        }\n    }\n    spaceSubset(x, y, w, h) {\n        let subset = [];\n        for (let s of this.space)\n            if (GeomUtil.rectsIntersect(x, y, w, h, s.box.x, s.box.y, s.box.w, s.box.h))\n                subset.push(s);\n        return subset;\n    }\n    countPolyViolations(px, py, space, shortCircuit) {\n        if (space == null)\n            space = this.space;\n        let hits = 0;\n        const psz = px.length, nspc = space.length;\n        let pr = new Box(), sr = new Box();\n        for (let i1 = 0; i1 < psz; i1++) {\n            let i2 = i1 < psz - 1 ? i1 + 1 : 0;\n            pr.x = Math.min(px[i1], px[i2]) - 1;\n            pr.y = Math.min(py[i1], py[i2]) - 1;\n            pr.w = Math.max(px[i1], px[i2]) - pr.x + 2;\n            pr.h = Math.max(py[i1], py[i2]) - pr.y + 2;\n            for (let j = 0; j < nspc; j++) {\n                let spc = space[j];\n                if (spc.px == null)\n                    continue;\n                sr.x = spc.box.x - 1;\n                sr.y = spc.box.y - 1;\n                sr.w = spc.box.w + 1;\n                sr.h = spc.box.h + 1;\n                if (!pr.intersects(sr))\n                    continue;\n                let ssz = spc.px.length;\n                for (let j1 = 0; j1 < ssz; j1++) {\n                    let j2 = j1 < ssz - 1 ? j1 + 1 : 0;\n                    sr.x = Math.min(spc.px[j1], spc.px[j2]) - 1;\n                    sr.y = Math.min(spc.py[j1], spc.py[j2]) - 1;\n                    sr.w = Math.max(spc.px[j1], spc.px[j2]) - sr.x + 2;\n                    sr.h = Math.max(spc.py[j1], spc.py[j2]) - sr.y + 2;\n                    if (!pr.intersects(sr))\n                        continue;\n                    if (GeomUtil.doLineSegsIntersect(px[i1], py[i1], px[i2], py[i2], spc.px[j1], spc.py[j1], spc.px[j2], spc.py[j2])) {\n                        if (shortCircuit)\n                            return 1;\n                        hits++;\n                        break;\n                    }\n                    if (ssz == 1)\n                        break;\n                }\n            }\n        }\n        pr.x = Vec.min(px);\n        pr.y = Vec.min(py);\n        pr.w = Vec.max(px) - pr.x;\n        pr.h = Vec.max(py) - pr.y;\n        for (let n = nspc - 1; n >= 0; n--) {\n            let spc = space[n];\n            sr.x = spc.box.x;\n            sr.y = spc.box.y;\n            sr.w = spc.box.w;\n            sr.h = spc.box.h;\n            if (!pr.intersects(sr))\n                continue;\n            for (let i = spc.px.length - 1; i >= 0; i--)\n                if (GeomUtil.pointInPolygon(spc.px[i], spc.py[i], px, py)) {\n                    if (shortCircuit)\n                        return 1;\n                    hits++;\n                    break;\n                }\n            for (let i = 0; i < psz; i++)\n                if (GeomUtil.pointInPolygon(px[i], py[i], spc.px, spc.py)) {\n                    if (shortCircuit)\n                        return 1;\n                    hits++;\n                    break;\n                }\n        }\n        return hits;\n    }\n    adjustBondPosition(bf, bt, x1, y1, x2, y2) {\n        if (bf == 0 || bt == 0)\n            return null;\n        for (let n = 0; n < this.lines.length; n++) {\n            let b = this.lines[n];\n            if (this.mol.bondOrder(b.bnum) != 1 || this.mol.bondType(b.bnum) != Molecule.BONDTYPE_NORMAL)\n                continue;\n            let alt = false;\n            if (this.mol.bondFrom(b.bnum) == bf && this.mol.bondTo(b.bnum) == bt) { }\n            else if (this.mol.bondFrom(b.bnum) == bt && this.mol.bondTo(b.bnum) == bf)\n                alt = true;\n            else\n                continue;\n            let th = angleDiff(Math.atan2(b.line.y2 - b.line.y1, b.line.x2 - b.line.x1), Math.atan2(y2 - y1, x2 - x1)) * RADDEG;\n            if ((th > -5 && th < 5) || th > 175 || th < -175)\n                continue;\n            let xy = GeomUtil.lineIntersect(b.line.x1, b.line.y1, b.line.x2, b.line.y2, x1, y1, x2, y2);\n            if (this.mol.atomRingBlock(bt) == 0) {\n                if (alt) {\n                    b.line.x1 = xy[0];\n                    b.line.y1 = xy[1];\n                }\n                else {\n                    b.line.x2 = xy[0];\n                    b.line.y2 = xy[1];\n                }\n            }\n            return xy;\n        }\n        return null;\n    }\n    priorityDoubleSubstit(idx) {\n        let bf = this.mol.bondFrom(idx), bt = this.mol.bondTo(idx);\n        let nf = this.mol.atomAdjList(bf), nt = this.mol.atomAdjList(bt);\n        let a1 = this.points[bf - 1], a2 = this.points[bt - 1];\n        let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n        let dx = x2 - x1, dy = y2 - y1, btheta = Math.atan2(dy, dx);\n        let idxFLeft = 0, idxFRight = 0, idxTLeft = 0, idxTRight = 0;\n        for (let n = 0; n < nf.length; n++)\n            if (nf[n] != bt) {\n                let theta = angleDiff(Math.atan2(this.points[nf[n] - 1].oval.cy - y1, this.points[nf[n] - 1].oval.cx - x1), btheta);\n                if (theta > 0) {\n                    if (idxFLeft != 0)\n                        return null;\n                    idxFLeft = nf[n];\n                }\n                else {\n                    if (idxFRight != 0)\n                        return null;\n                    idxFRight = nf[n];\n                }\n            }\n        for (let n = 0; n < nt.length; n++)\n            if (nt[n] != bf) {\n                let theta = angleDiff(Math.atan2(this.points[nt[n] - 1].oval.cy - y2, this.points[nt[n] - 1].oval.cx - x2), btheta);\n                if (theta > 0) {\n                    if (idxTLeft != 0)\n                        return null;\n                    idxTLeft = nt[n];\n                }\n                else {\n                    if (idxTRight != 0)\n                        return null;\n                    idxTRight = nt[n];\n                }\n            }\n        let sumFrom = (idxFLeft > 0 ? 1 : 0) + (idxFRight > 0 ? 1 : 0), sumTo = (idxTLeft > 0 ? 1 : 0) + (idxTRight > 0 ? 1 : 0);\n        if (sumFrom == 1 && sumTo == 0)\n            return [idxFLeft > 0 ? idxFLeft : idxFRight];\n        if (sumFrom == 0 && sumTo == 1)\n            return [idxTLeft > 0 ? idxTLeft : idxTRight];\n        if (sumFrom == 1 && sumTo == 1) {\n            if (idxFLeft > 0 && idxTLeft > 0)\n                return [idxFLeft, idxTLeft];\n            if (idxFRight > 0 && idxTRight > 0)\n                return [idxFRight, idxTRight];\n            let oxy = this.orthogonalDelta(x1, y1, x2, y2, this.bondSepPix);\n            let congestLeft = this.spatialCongestion(0.5 * (x1 + x2) + oxy[0], 0.5 * (y1 + y2) + oxy[1]);\n            let congestRight = this.spatialCongestion(0.5 * (x1 + x2) - oxy[0], 0.5 * (y1 + y2) - oxy[1]);\n            if (congestLeft < congestRight)\n                return [idxFLeft > 0 ? idxFLeft : idxTLeft];\n            else\n                return [idxFRight > 0 ? idxFRight : idxTRight];\n        }\n        if (sumFrom == 2 && sumTo == 1) {\n            if (idxTLeft == 0)\n                return [idxFRight, idxTRight];\n            else\n                return [idxFLeft, idxTLeft];\n        }\n        if (sumFrom == 1 && sumTo == 2) {\n            if (idxFLeft == 0)\n                return [idxFRight, idxTRight];\n            else\n                return [idxFLeft, idxTLeft];\n        }\n        return null;\n    }\n    annotateAtom(atom, text, col, fsz) {\n        let [tw, ta] = this.measure.measureText(text, fsz);\n        let a = this.points[atom - 1];\n        let cx = a.oval.cx, cy = a.oval.cy, rw = 0.6 * tw, rh = 0.6 * ta;\n        let otherTheta = [];\n        for (let a of this.mol.atomAdjList(atom)) {\n            let dx = this.points[a - 1].oval.cx - cx, dy = this.points[a - 1].oval.cy - cy;\n            otherTheta.push(Math.atan2(dy, dx));\n        }\n        let minExt = 0.5 * (a.oval.rw + a.oval.rh), stepsz = 0.1 * this.scale, nsteps = 8;\n        let angsteps = 36, angsz = TWOPI / angsteps;\n        let bestScore = Number.POSITIVE_INFINITY, bestDX = 0, bestDY = 0;\n        let px = [0, 0, 0, 0], py = [0, 0, 0, 0];\n        let limX = rw + minExt + nsteps * stepsz, limY = rh + minExt + nsteps * stepsz;\n        let subSpace = this.spaceSubset(cx - limX, cy - limY, 2 * limX, 2 * limY);\n        for (let step = 0; step < nsteps; step++) {\n            let ext = minExt + step * stepsz;\n            for (let ang = 0; ang < angsteps; ang++) {\n                let th = angsz * ang;\n                let dx = ext * Math.cos(th), dy = ext * Math.sin(th);\n                let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                px[0] = x1;\n                py[0] = y1;\n                px[1] = x2;\n                py[1] = y1;\n                px[2] = x2;\n                py[2] = y2;\n                px[3] = x1;\n                py[3] = y2;\n                let viol = this.countPolyViolations(px, py, subSpace, false);\n                let score = viol * 1000;\n                for (let oth of otherTheta)\n                    score -= Math.abs(angleDiff(th, oth));\n                if (score < bestScore) {\n                    bestScore = score;\n                    bestDX = dx;\n                    bestDY = dy;\n                }\n            }\n            if (bestScore < 500)\n                break;\n        }\n        let x = cx + bestDX, y = cy + bestDY;\n        let an = {\n            anum: 0,\n            text,\n            fsz,\n            col,\n            oval: new Oval(x, y, rw, rh),\n        };\n        this.points.push(an);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(x - rw, y - rh, 2 * rw, 2 * rh),\n            px: [x - rw, x + rw, x + rw, x - rw],\n            py: [y - rh, y - rh, y + rh, y + rh],\n        };\n        this.space.push(spc);\n    }\n    annotateBond(bond, text, col, fsz) {\n        let [tw, ta] = this.measure.measureText(text, fsz);\n        let bfr = this.mol.bondFrom(bond), bto = this.mol.bondTo(bond);\n        let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n        let cx = 0.5 * (a1.oval.cx + a2.oval.cx), cy = 0.5 * (a1.oval.cy + a2.oval.cy), rw = 0.6 * tw, rh = 0.6 * ta;\n        let bth = Math.atan2(a2.oval.cy - a1.oval.cy, a2.oval.cx - a1.oval.cx);\n        let otherTheta = [bth, bth + Math.PI];\n        for (let a of this.mol.atomAdjList(bfr))\n            if (a != bto) {\n                let dx = this.points[a - 1].oval.cx - this.points[bfr - 1].oval.cx, dy = this.points[a - 1].oval.cy - this.points[bfr - 1].oval.cy;\n                otherTheta.push(Math.atan2(dy, dx));\n            }\n        for (let a of this.mol.atomAdjList(bto))\n            if (a != bfr) {\n                let dx = this.points[a - 1].oval.cx - this.points[bto - 1].oval.cx, dy = this.points[a - 1].oval.cy - this.points[bto - 1].oval.cy;\n                otherTheta.push(Math.atan2(dy, dx));\n            }\n        let minExt = 0.2 * this.scale * this.bondOrder[bond - 1], stepsz = 0.1 * this.scale, nsteps = 8;\n        let angsteps = 36, angsz = TWOPI / angsteps;\n        let bestScore = Number.POSITIVE_INFINITY, bestDX = 0, bestDY = 0;\n        let px = [0, 0, 0, 0], py = [0, 0, 0, 0];\n        let limX = rw + minExt + nsteps * stepsz, limY = rh + minExt + nsteps * stepsz;\n        let subSpace = this.spaceSubset(cx - limX, cy - limY, 2 * limX, 2 * limY);\n        for (let step = 0; step < nsteps; step++) {\n            let ext = minExt + step * stepsz;\n            for (let ang = 0; ang < angsteps; ang++) {\n                let th = angsz * ang;\n                let dx = ext * Math.cos(th), dy = ext * Math.sin(th);\n                let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                px[0] = x1;\n                py[0] = y1;\n                px[1] = x2;\n                py[1] = y1;\n                px[2] = x2;\n                py[2] = y2;\n                px[3] = x1;\n                py[3] = y2;\n                let viol = this.countPolyViolations(px, py, subSpace, false);\n                let score = viol * 1000;\n                for (let oth of otherTheta)\n                    score -= Math.abs(angleDiff(th, oth));\n                if (score < bestScore) {\n                    bestScore = score;\n                    bestDX = dx;\n                    bestDY = dy;\n                }\n            }\n            if (bestScore < 500)\n                break;\n        }\n        let x = cx + bestDX, y = cy + bestDY;\n        let an = {\n            anum: 0,\n            text,\n            fsz,\n            col,\n            oval: new Oval(x, y, rw, rh),\n        };\n        this.points.push(an);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(x - rw, y - rh, 2 * rw, 2 * rh),\n            px: [x - rw, x + rw, x + rw, x - rw],\n            py: [y - rh, y - rh, y + rh, y + rh],\n        };\n        this.space.push(spc);\n    }\n    boxOverlaps(x, y, w, h, pointmask, linemask) {\n        let vx1 = x, vy1 = y, vx2 = x + w, vy2 = y + h;\n        for (let n = 0; n < this.points.length; n++) {\n            if (pointmask != null && !pointmask[n])\n                continue;\n            let a = this.points[n];\n            let wx1 = a.oval.cx - a.oval.rw, wy1 = a.oval.cy - a.oval.rh, wx2 = a.oval.cx + a.oval.rw, wy2 = a.oval.cy + a.oval.rh;\n            if (vx2 < wx1 || vx1 > wx2 || vy2 < wy1 || vy1 > wy2)\n                continue;\n            return true;\n        }\n        for (let n = 0; n < this.lines.length; n++) {\n            if (linemask != null && !linemask[n])\n                continue;\n            let b = this.lines[n];\n            let wx1 = b.line.x1, wy1 = b.line.y1, wx2 = b.line.x2, wy2 = b.line.y2;\n            if (vx2 < Math.min(wx1, wx2) || vx1 > Math.max(wx1, wx2) || vy2 < Math.min(wy1, wy2) || vy1 > Math.max(wy1, wy2))\n                continue;\n            if (wx1 >= vx1 && wx1 <= vx2 && wy1 >= vy1 && wy1 <= vy2)\n                return true;\n            if (wx2 >= vx1 && wx2 <= vx2 && wy2 >= vy1 && wy2 <= vy2)\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy1, vx2, vy1))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy2, vx2, vy2))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy1, vx1, vy2))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx2, vy1, vx2, vy2))\n                return true;\n        }\n        return false;\n    }\n    resolveLineCrossings(bondHigher, bondLower) {\n        while (true) {\n            let anything = false;\n            for (let i1 = 0; i1 < this.lines.length; i1++) {\n                let b1 = this.lines[i1];\n                if (b1.bnum != bondHigher)\n                    continue;\n                if (b1.type != BLineType.Normal && b1.type != BLineType.Dotted && b1.type != BLineType.DotDir)\n                    continue;\n                for (let i2 = 0; i2 < this.lines.length; i2++) {\n                    let b2 = this.lines[i2];\n                    if (b2.bnum != bondLower)\n                        continue;\n                    if (b2.type == BLineType.DotDir)\n                        b2.type = BLineType.Dotted;\n                    if (b2.type != BLineType.Normal && b2.type != BLineType.Dotted)\n                        continue;\n                    if (b1.bfr == b2.bfr || b1.bfr == b2.bto || b1.bto == b2.bfr || b1.bto == b2.bto)\n                        continue;\n                    if (!GeomUtil.doLineSegsIntersect(b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2))\n                        continue;\n                    let xy = GeomUtil.lineIntersect(b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2);\n                    let dx = b2.line.x2 - b2.line.x1, dy = b2.line.y2 - b2.line.y1;\n                    let ext = Math.abs(dx) > Math.abs(dy) ? (xy[0] - b2.line.x1) / dx : (xy[1] - b2.line.y1) / dy;\n                    let dist = norm_xy(dx, dy);\n                    let delta = b2.size / dist * (b2.type == BLineType.Normal ? 2 : 4);\n                    if (ext > delta && ext < 1 - delta) {\n                        let b3 = {\n                            bnum: b2.bnum,\n                            bfr: b2.bfr,\n                            bto: b2.bto,\n                            type: b2.type,\n                            line: b2.line.clone(),\n                            size: b2.size,\n                            head: b2.head,\n                            col: b2.col\n                        };\n                        this.lines.push(b3);\n                        b2.line.x2 = b2.line.x1 + dx * (ext - delta);\n                        b2.line.y2 = b2.line.y1 + dy * (ext - delta);\n                        b3.line.x1 = b3.line.x1 + dx * (ext + delta);\n                        b3.line.y1 = b3.line.y1 + dy * (ext + delta);\n                        anything = true;\n                    }\n                    else if (ext > delta) {\n                        b2.line.x2 = b2.line.x1 + dx * (ext - delta);\n                        b2.line.y2 = b2.line.y1 + dy * (ext - delta);\n                        anything = true;\n                    }\n                    else if (ext < 1 - delta) {\n                        b2.line.x1 = b2.line.x1 + dx * (ext + delta);\n                        b2.line.y1 = b2.line.y1 + dy * (ext + delta);\n                        anything = true;\n                    }\n                }\n            }\n            if (!anything)\n                break;\n        }\n    }\n    createCircularRing(atoms) {\n        let px = new Array(atoms.length), py = new Array(atoms.length);\n        for (let n = 0; n < atoms.length; n++) {\n            let pt = this.points[atoms[n] - 1];\n            px[n] = pt.oval.cx;\n            py[n] = pt.oval.cy;\n        }\n        let cx = Vec.sum(px) / atoms.length, cy = Vec.sum(py) / atoms.length;\n        let bx = [], by = [];\n        let isRegular = true;\n        let regDist = Number.NaN;\n        const FRACT = 0.7;\n        for (let a of atoms) {\n            let pt = this.points[a - 1];\n            let x0 = pt.oval.cx - cx, y0 = pt.oval.cy - cy, x1 = x0 - pt.oval.rw, x2 = x0 + pt.oval.rw, y1 = y0 - pt.oval.rh, y2 = y0 + pt.oval.rh;\n            bx.push(x1);\n            by.push(y0);\n            bx.push(x1);\n            by.push(y1);\n            bx.push(x1);\n            by.push(y2);\n            bx.push(x0);\n            by.push(y1);\n            bx.push(x0);\n            by.push(y2);\n            bx.push(x2);\n            by.push(y0);\n            bx.push(x2);\n            by.push(y1);\n            bx.push(x2);\n            by.push(y2);\n            let dist = norm_xy(x0, y0), theta = Math.atan2(y0, x0);\n            bx.push(FRACT * dist * Math.cos(theta));\n            by.push(FRACT * dist * Math.sin(theta));\n            for (let b of this.mol.atomAdjList(a))\n                if (atoms.indexOf(b) >= 0) {\n                    let pb = this.points[b - 1];\n                    let mx = 0.5 * (pt.oval.cx + pb.oval.cx) - cx, my = 0.5 * (pt.oval.cy + pb.oval.cy) - cy;\n                    let mdist = norm_xy(mx, my), mtheta = Math.atan2(my, mx);\n                    bx.push(FRACT * mdist * Math.cos(mtheta));\n                    by.push(FRACT * mdist * Math.sin(mtheta));\n                }\n            if (!isRegular) { }\n            else if (Number.isFinite(regDist)) {\n                if (Math.abs(regDist - dist) > 1)\n                    isRegular = false;\n            }\n            else\n                regDist = dist;\n        }\n        let r = { atoms, cx, cy, rw: 0, rh: 0, theta: 0, size: 0 };\n        if (isRegular) {\n            r.rw = r.rh = GeomUtil.fitCircle(bx, by);\n        }\n        else {\n            let mdist = 0;\n            for (let n = 0; n < atoms.length; n++)\n                mdist += norm_xy(px[n] - cx, py[n] - cy);\n            let margin = mdist / atoms.length * (1 - FRACT);\n            var fit = new FitRotatedEllipse(px, py, margin);\n            fit.calculate();\n            r.cx = fit.cx;\n            r.cy = fit.cy;\n            r.rw = fit.rw;\n            r.rh = fit.rh;\n            r.theta = fit.theta;\n        }\n        r.size = this.lineSizePix;\n        this.rings.push(r);\n    }\n    createCurvedPath(atoms, fractional, extAtom) {\n        const sz = atoms.length, szn = sz - 1;\n        let x = [], y = [], symbol = [];\n        for (let n = 0; n < sz; n++) {\n            let pt = this.points[atoms[n] - 1];\n            x.push(pt.oval.cx);\n            y.push(pt.oval.cy);\n            symbol.push(pt.text != null);\n        }\n        let ox = [], oy = [];\n        const EXT = Molecule.IDEALBOND * 0.25 * this.scale;\n        for (let n = 0; n < sz - 1; n++) {\n            let dx = x[n + 1] - x[n], dy = y[n + 1] - y[n], invD = EXT * invZ(norm_xy(dx, dy));\n            ox.push(dy * invD);\n            oy.push(-dx * invD);\n        }\n        const FAR = 1.2, CLOSE = 0.7;\n        let sx1 = Vec.numberArray(0, sz), sy1 = Vec.numberArray(0, sz), sx2 = Vec.numberArray(0, sz), sy2 = Vec.numberArray(0, sz);\n        const capA = symbol[0] ? FAR : CLOSE;\n        if (!fractional) {\n            sx1[0] = x[0] + ox[0] * capA;\n            sy1[0] = y[0] + oy[0] * capA;\n            sx2[0] = x[0] - ox[0] * capA;\n            sy2[0] = y[0] - oy[0] * capA;\n        }\n        else {\n            const dx = -oy[0], dy = ox[0];\n            sx1[0] = x[0] + dx * capA;\n            sy1[0] = y[0] + dy * capA;\n            sx2[0] = x[0] + dx * capA;\n            sy2[0] = y[0] + dy * capA;\n        }\n        let ncross1 = 0, ncross2 = 0;\n        for (let n = 1; n < sz - 1; n++) {\n            const fr1 = symbol[n] ? FAR : CLOSE, fr2 = fr1;\n            sx1[n] = x[n] + fr1 * (ox[n - 1] + ox[n]);\n            sy1[n] = y[n] + fr1 * (oy[n - 1] + oy[n]);\n            sx2[n] = x[n] - fr2 * (ox[n - 1] + ox[n]);\n            sy2[n] = y[n] - fr2 * (oy[n - 1] + oy[n]);\n            for (let a of this.mol.atomAdjList(atoms[n]))\n                if (atoms.indexOf(a) < 0 && a != extAtom) {\n                    let pt = this.points[a - 1];\n                    let dx = pt.oval.cx - x[n], dy = pt.oval.cy - y[n];\n                    let dot1 = dx * (sx1[n] - x[n]) + dy * (sy1[n] - x[n]);\n                    let dot2 = dy * (sx2[n] - x[n]) + dy * (sy2[n] - x[n]);\n                    if (dot1 > dot2)\n                        ncross1++;\n                    else\n                        ncross2++;\n                }\n        }\n        let nn = sz - 1;\n        let capB = symbol[nn] ? FAR : CLOSE;\n        if (!fractional) {\n            sx1[nn] = x[nn] + ox[nn - 1] * capB;\n            sy1[nn] = y[nn] + oy[nn - 1] * capB;\n            sx2[nn] = x[nn] - ox[nn - 1] * capB;\n            sy2[nn] = y[nn] - oy[nn - 1] * capB;\n        }\n        else {\n            let dx = -oy[nn - 1], dy = ox[nn - 1];\n            sx1[nn] = x[nn] - dx * capB;\n            sy1[nn] = y[nn] - dy * capB;\n            sx2[nn] = x[nn] - dx * capB;\n            sy2[nn] = y[nn] - dy * capB;\n        }\n        let score1 = 0, score2 = 0;\n        for (let n = 0; n < sz - 1; n++) {\n            score1 += norm_xy(sx1[n + 1] - sx1[n], sy1[n + 1] - sy1[n]);\n            score2 += norm_xy(sx2[n + 1] - sx2[n], sy2[n + 1] - sy2[n]);\n        }\n        score1 *= ncross1 + 1;\n        score2 *= ncross2 + 1;\n        let sx = score1 < score2 ? sx1 : sx2;\n        let sy = score1 < score2 ? sy1 : sy2;\n        let p = { atoms, px: null, py: null, ctrl: null, size: this.lineSizePix };\n        this.splineInterpolate(p, sx, sy);\n        this.paths.push(p);\n    }\n    createBondCentroid(from, to) {\n        let pt = this.points[from - 1];\n        let x1 = pt.oval.cx, y1 = pt.oval.cy, x2 = 0, y2 = 0;\n        for (let a of to) {\n            pt = this.points[a - 1];\n            x2 += pt.oval.cx;\n            y2 += pt.oval.cy;\n        }\n        x2 /= to.length;\n        y2 /= to.length;\n        if (to.length <= 2) {\n            x2 -= 0.1 * (x2 - x1);\n            y2 -= 0.1 * (y2 - y1);\n        }\n        const minDist = MINBOND_LINE * this.measure.scale();\n        let xy1 = this.shrinkBond(x1, y1, x2, y2, this.backOffAtom(from, x1, y1, x2, y2, minDist));\n        this.ensureMinimumBondLength(xy1, [x2, y2], x1, y1, x2, y2, minDist);\n        let b = {\n            bnum: 0,\n            bfr: from,\n            bto: 0,\n            type: BLineType.Normal,\n            line: new Line(xy1[0], xy1[1], x2, y2),\n            size: this.lineSizePix,\n            head: 0,\n            col: this.policy.data.foreground\n        };\n        this.lines.push(b);\n        this.space.push(this.computeSpaceLine(b));\n    }\n    splineInterpolate(path, x, y) {\n        const sz = x.length;\n        const scale = 0.25;\n        for (let n = 0; n < sz; n++) {\n            if (n == 0) {\n                let dx = x[n + 1] - x[n], dy = y[n + 1] - y[n];\n                let qx = x[n] + scale * dx, qy = y[n] + scale * dy;\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n                path.px = Vec.append(path.px, qx);\n                path.py = Vec.append(path.py, qy);\n                path.ctrl = Vec.append(path.ctrl, true);\n            }\n            else if (n == sz - 1) {\n                let dx = x[n] - x[n - 1], dy = y[n] - y[n - 1];\n                let qx = x[n] - scale * dx, qy = y[n] - scale * dy;\n                path.px = Vec.append(path.px, qx);\n                path.py = Vec.append(path.py, qy);\n                path.ctrl = Vec.append(path.ctrl, true);\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n            }\n            else {\n                let dx = x[n + 1] - x[n - 1], dy = y[n + 1] - y[n - 1];\n                let invD = invZ(norm_xy(dx, dy));\n                dx *= invD;\n                dy *= invD;\n                let d1 = scale * norm_xy(x[n] - x[n - 1], y[n] - y[n - 1]), d2 = scale * norm_xy(x[n + 1] - x[n], y[n + 1] - y[n]);\n                let qx1 = x[n] - dx * d1, qy1 = y[n] - dy * d1;\n                let qx2 = x[n] + dx * d2, qy2 = y[n] + dy * d2;\n                path.px = Vec.append(path.px, qx1);\n                path.py = Vec.append(path.py, qy1);\n                path.ctrl = Vec.append(path.ctrl, true);\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n                path.px = Vec.append(path.px, qx2);\n                path.py = Vec.append(path.py, qy2);\n                path.ctrl = Vec.append(path.ctrl, true);\n            }\n        }\n    }\n    delocalisedAnnotation(atoms, charge, unpaired) {\n        const mol = this.mol;\n        let str = '';\n        if (charge == -1)\n            str = '-';\n        else if (charge == 1)\n            str = '+';\n        else if (charge < -1)\n            str = Math.abs(charge) + '-';\n        else if (charge > 1)\n            str = charge + '+';\n        if (unpaired > 0)\n            for (let n = 0; n < unpaired; n++)\n                str += '.';\n        if (str.length == 0)\n            return;\n        const sz = atoms.length;\n        let bestX = 0, bestY = 0;\n        for (let a of atoms) {\n            bestX += mol.atomX(a);\n            bestY += mol.atomY(a);\n        }\n        bestX /= sz;\n        bestY /= sz;\n        let bestScore = CoordUtil.congestionPoint(mol, bestX, bestY);\n        for (let n = 1; n < sz - 1; n++) {\n            let x = 0.5 * (mol.atomX(atoms[n - 1]) + mol.atomX(atoms[n + 1])), y = 0.5 * (mol.atomY(atoms[n - 1]) + mol.atomY(atoms[n + 1]));\n            let score = CoordUtil.congestionPoint(mol, x, y);\n            if (score < bestScore) {\n                bestScore = score;\n                bestX = x;\n                bestY = y;\n            }\n        }\n        let fsz = 0.8 * this.fontSizePix;\n        let wad = this.measure.measureText(str, fsz);\n        let rw = 0.55 * wad[0], rh = 0.55 * wad[1];\n        let a = {\n            anum: 0,\n            text: str,\n            fsz,\n            col: this.policy.data.foreground,\n            oval: new Oval(this.measure.angToX(bestX), this.measure.angToY(bestY), rw, rh)\n        };\n        this.points.push(a);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(a.oval.cx - rw, a.oval.cy - rh, 2 * rw, 2 * rh),\n            px: [a.oval.cx - rw, a.oval.cx + rw, a.oval.cx + rw, a.oval.cx - rw],\n            py: [a.oval.cy - rh, a.oval.cy - rh, a.oval.cy + rh, a.oval.cy + rh]\n        };\n        this.space.push(spc);\n    }\n    processPolymerUnit(unit, allUnits) {\n        if (Vec.len(unit.bondConn) == 4) {\n            this.processPolymerUnitPair(unit);\n            return;\n        }\n        let brackets = [];\n        const { mol, measure } = this;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let a1 = mol.bondFrom(n), a2 = mol.bondTo(n);\n            let in1 = unit.atoms.indexOf(a1) >= 0, in2 = unit.atoms.indexOf(a2) >= 0;\n            let bracket = null;\n            if (in1 && !in2)\n                bracket = { a1, a2 };\n            else if (in2 && !in1)\n                bracket = { a1: a2, a2: a1 };\n            else\n                continue;\n            bracket.x1 = mol.atomX(bracket.a1);\n            bracket.y1 = mol.atomY(bracket.a1);\n            bracket.x2 = mol.atomX(bracket.a2);\n            bracket.y2 = mol.atomY(bracket.a2);\n            bracket.shared = false;\n            for (let other of allUnits)\n                if (unit !== other && other.atoms.includes(bracket.a2)) {\n                    bracket.shared = true;\n                    break;\n                }\n            let nestings = allUnits.filter((look) => look === unit || (look.atoms.includes(bracket.a1) && !look.atoms.includes(bracket.a2)));\n            if (nestings.length > 1) {\n                nestings.sort((u1, u2) => u1.atoms.length - u2.atoms.length);\n                for (let i = 0; i < nestings.length; i++)\n                    if (nestings[i] === unit)\n                        bracket.nestOrder = i;\n                bracket.nestCount = nestings.length;\n            }\n            brackets.push(bracket);\n        }\n        let tagidx = 0;\n        let atomX = unit.atoms.map((a) => mol.atomX(a)), atomY = unit.atoms.map((a) => mol.atomY(a));\n        let minX = Vec.min(atomX), minY = Vec.min(atomY);\n        let maxX = Vec.max(atomX), maxY = Vec.max(atomY);\n        for (let n = 1; n < brackets.length; n++) {\n            let b1 = brackets[tagidx], b2 = brackets[n];\n            let score1 = b1.x2 - minX - b1.y2 + minY;\n            let score2 = b2.x2 - minX - b2.y2 + minY;\n            if (score2 > score1)\n                tagidx = n;\n        }\n        let isLinear = false, isOuter = false;\n        if (brackets.length == 2) {\n            let left = brackets[tagidx == 0 ? 1 : 0], right = brackets[tagidx];\n            let theta1 = Math.atan2(left.y2 - left.y1, left.x2 - left.x1);\n            let theta2 = Math.atan2(right.y2 - right.y1, right.x2 - right.x1);\n            isLinear = (theta1 > 145 * DEGRAD || theta1 < -145 * DEGRAD) && theta2 < 35 * DEGRAD && theta2 > -35 * DEGRAD;\n        }\n        else if (brackets.length == 0) {\n            let ym = 0.5 * (minY + maxY);\n            brackets.push({ x1: minX, y1: ym, x2: minX - 1, y2: ym });\n            brackets.push({ x1: maxX, y1: ym, x2: maxX + 1, y2: ym });\n            tagidx = 1;\n            isOuter = true;\n        }\n        let bsz1 = (isOuter ? 0.5 * (maxY - minY + 1) : isLinear ? 1.0 : 0.5) * this.scale, bsz2 = 0.2 * this.scale;\n        const BASE_LINE = { bnum: 0, bfr: 0, bto: 0, type: BLineType.Normal, size: this.lineSizePix, head: 0, col: this.policy.data.foreground };\n        const BASE_TEXT = { anum: 0, fsz: 0.7 * this.fontSizePix, bold: false, col: this.policy.data.foreground };\n        for (let n = 0; n < brackets.length; n++) {\n            let bracket = brackets[n];\n            let x1 = measure.angToX(bracket.x1), y1 = measure.angToY(bracket.y1);\n            let x2 = measure.angToX(bracket.x2), y2 = measure.angToY(bracket.y2);\n            if (bracket.shared) {\n                x2 -= (x2 - x1) * 0.1;\n                y2 -= (y2 - y1) * 0.1;\n            }\n            if (bracket.nestCount > 1) {\n                let dx = x2 - x1, dy = y2 - y1, fract = (bracket.nestOrder + 1) / bracket.nestCount;\n                x2 = x1 + dx * fract;\n                y2 = y1 + dy * fract;\n            }\n            let mx = 0.5 * (x1 + x2), my = 0.5 * (y1 + y2);\n            if (isLinear) {\n                x1 = x2 = mx;\n                y1 = y2 = my;\n                if (n == tagidx) {\n                    x1--;\n                    x2++;\n                }\n                else {\n                    x1++;\n                    x2--;\n                }\n            }\n            let invDist = invZ(norm_xy(x2 - x1, y2 - y1));\n            let dx = (x2 - x1) * invDist, dy = (y2 - y1) * invDist;\n            let ox = dy, oy = -dx;\n            let px2 = mx - bsz1 * ox, py2 = my - bsz1 * oy;\n            let px3 = mx + bsz1 * ox, py3 = my + bsz1 * oy;\n            let px1 = px2 - bsz2 * dx, py1 = py2 - bsz2 * dy;\n            let px4 = px3 - bsz2 * dx, py4 = py3 - bsz2 * dy;\n            let line1 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px1, py1, px2, py2) });\n            let line2 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px2, py2, px3, py3) });\n            let line3 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px3, py3, px4, py4) });\n            this.lines.push(line1);\n            this.lines.push(line2);\n            this.lines.push(line3);\n            this.space.push(this.computeSpaceLine(line1));\n            this.space.push(this.computeSpaceLine(line2));\n            this.space.push(this.computeSpaceLine(line3));\n            if (n == tagidx) {\n                let xx, yy;\n                if (bracket.shared)\n                    [xx, yy] = [px2 - 0.5 * this.scale * ox, py2 - 0.5 * this.scale * oy];\n                else\n                    [xx, yy] = [px2 + bsz2 * 2 * dx, py2 + bsz2 * 2 * dy];\n                let pt1 = Object.assign(Object.assign({}, BASE_TEXT), { 'text': 'n', 'oval': new Oval(xx, yy, 0, 0) });\n                this.points.push(pt1);\n                this.space.push(this.computeSpacePoint(pt1));\n                if (unit.connect != null) {\n                    let text = '?';\n                    if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                        text = 'ht';\n                    else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                        text = 'hh';\n                    else if (unit.connect == PolymerBlockConnectivity.Random)\n                        text = 'eu';\n                    if (bracket.shared)\n                        [xx, yy] = [px3 + 0.5 * this.scale * ox, py3 + 0.5 * this.scale * oy];\n                    else\n                        [xx, yy] = [px3 + bsz2 * 2.5 * dx, py3 + bsz2 * 2.5 * dy];\n                    let pt2 = Object.assign(Object.assign({}, BASE_TEXT), { 'text': text, 'oval': new Oval(xx, yy, 0, 0) });\n                    this.points.push(pt2);\n                    this.space.push(this.computeSpacePoint(pt2));\n                }\n            }\n        }\n    }\n    processPolymerUnitPair(unit) {\n        const { mol, measure } = this;\n        let xpos = [], ypos = [];\n        for (let b of unit.bondConn) {\n            let bfr = mol.bondFrom(b), bto = mol.bondTo(b);\n            xpos.push(measure.angToX(0.5 * (mol.atomX(bfr) + mol.atomX(bto))));\n            ypos.push(measure.angToY(0.5 * (mol.atomY(bfr) + mol.atomY(bto))));\n        }\n        let cx = Vec.sum(xpos) * 0.25, cy = Vec.sum(ypos) * 0.25;\n        let bsz = 0.5 * this.scale;\n        let rx = [], ry = [];\n        for (let [i1, i2] of [[0, 1], [2, 3]]) {\n            let dx = xpos[i2] - xpos[i1], dy = ypos[i2] - ypos[i1], inv = bsz * invZ(norm_xy(dx, dy) + 0.001);\n            [dx, dy] = [dx * inv, dy * inv];\n            xpos[i1] -= 2 * dx;\n            ypos[i1] -= 2 * dy;\n            xpos[i2] += 2 * dx;\n            ypos[i2] += 2 * dy;\n            let ox = dy, oy = -dx;\n            let dsq1 = norm2_xy(0.5 * (xpos[i1] + xpos[i2]) + ox - cx, 0.5 * (ypos[i1] + ypos[i2]) + oy - cy);\n            let dsq2 = norm2_xy(0.5 * (xpos[i1] + xpos[i2]) - ox - cx, 0.5 * (ypos[i1] + ypos[i2]) - oy - cy);\n            if (dsq2 < dsq1)\n                [ox, oy] = [-ox, -oy];\n            rx.push(...[ox, ox]);\n            ry.push(...[oy, oy]);\n        }\n        const BASE_LINE = { bnum: 0, bfr: 0, bto: 0, type: BLineType.Normal, size: this.lineSizePix, head: 0, col: this.policy.data.foreground };\n        const BASE_TEXT = { anum: 0, fsz: 0.7 * this.fontSizePix, bold: false, col: this.policy.data.foreground };\n        let drawLine = (x1, y1, x2, y2) => {\n            let line = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(x1, y1, x2, y2) });\n            this.lines.push(line);\n            this.space.push(this.computeSpaceLine(line));\n        };\n        let drawText = (x, y, txt) => {\n            let pt = Object.assign(Object.assign({}, BASE_TEXT), { 'text': txt, 'oval': new Oval(x, y, 0, 0) });\n            this.points.push(pt);\n            this.space.push(this.computeSpacePoint(pt));\n        };\n        drawLine(xpos[0], ypos[0], xpos[1], ypos[1]);\n        drawLine(xpos[0], ypos[0], xpos[0] + rx[0], ypos[0] + ry[0]);\n        drawLine(xpos[1], ypos[1], xpos[1] + rx[1], ypos[1] + ry[1]);\n        drawLine(xpos[2], ypos[2], xpos[3], ypos[3]);\n        drawLine(xpos[2], ypos[2], xpos[2] + rx[2], ypos[2] + ry[2]);\n        drawLine(xpos[3], ypos[3], xpos[3] + rx[3], ypos[3] + ry[3]);\n        let xmin = Vec.min(xpos), ymin = Vec.min(ypos);\n        let dist = [];\n        for (let n = 0; n < 4; n++)\n            dist.push(xpos[n] - xmin + ypos[n] - ymin);\n        let idxN = Vec.idxMax(dist);\n        drawText(xpos[idxN] - rx[idxN], ypos[idxN] - ry[idxN], 'n');\n        let idxD2 = idxN + (idxN % 2 == 1 ? -1 : 1), idxD1 = (idxD2 + 2) % 4;\n        drawText(xpos[idxD1] - 0.5 * rx[idxD1], ypos[idxD1] - 0.5 * ry[idxD1], '*');\n        drawText(xpos[idxD2] - 0.5 * rx[idxD2], ypos[idxD2] - 0.5 * ry[idxD2], '*');\n    }\n}\nArrangeMolecule.FONT_CORRECT = 1.5;\nexport { ArrangeMolecule };\n//# sourceMappingURL=ArrangeMolecule.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Theme } from '../util/Theme';\nimport { readTextURL } from '../util/util';\nimport { Vec } from '../util/Vec';\nlet globalInstance = null;\nconst ONTOLOGY_FILES = [\n    'units'\n];\nexport class OntologyTree {\n    static get main() { return globalInstance; }\n    constructor() {\n        this.roots = [];\n        this.mapTerms = new Map();\n        this.alreadyLoaded = new Set();\n    }\n    static init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (globalInstance)\n                return;\n            globalInstance = new OntologyTree();\n            for (let fn of ONTOLOGY_FILES) {\n                let url = Theme.RESOURCE_URL + '/data/ontology/' + fn + '.onto';\n                globalInstance.loadFromURL(url);\n            }\n        });\n    }\n    getRoots() {\n        return this.roots;\n    }\n    hasTerm(uri) { return this.mapTerms.has(uri); }\n    getBranch(uri) {\n        return this.mapTerms.get(uri);\n    }\n    getBranchList(root) {\n        if (typeof root == 'string') {\n            let look = this.mapTerms.get(root);\n            if (!look)\n                throw `Unknown branch URI: ${root}`;\n            if (look.length > 1)\n                throw `Ambiguous branch URI occurs more than once: ${root}`;\n            root = look[0];\n        }\n        let list = [];\n        let accumulate = (branch) => {\n            list.push(branch);\n            for (let child of Vec.safeArray(branch.children))\n                accumulate(child);\n        };\n        accumulate(root);\n        return list;\n    }\n    loadFromURL(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.alreadyLoaded.has(url))\n                return;\n            this.alreadyLoaded.add(url);\n            let text = yield readTextURL(url);\n            if (!text)\n                throw `Resource not found: ${url}`;\n            this.loadContent(text);\n        });\n    }\n    loadContent(text) {\n        let termList = [];\n        let pos = 0;\n        for (let line of text.split(/\\n/)) {\n            pos++;\n            line = line.trim();\n            if (!line || line.startsWith('#'))\n                continue;\n            let idx = line.indexOf('http');\n            if (idx < 0)\n                throw `Line ${pos} invalid, no URI term: ${line}`;\n            let depth = 0;\n            for (let n = 0; n < idx; n++)\n                if (line.charAt(n) == '-')\n                    depth++;\n            let uri = line.substring(idx);\n            idx = uri.indexOf(' ');\n            if (idx < 0)\n                throw `Line ${pos} invalid, no label: ${line}`;\n            let label = uri.substring(idx + 1);\n            uri = uri.substring(0, idx);\n            let term = null;\n            if (depth == 0)\n                term = this.roots.find((look) => look.uri == uri);\n            if (!term) {\n                term = { uri, label, 'parent': null, 'children': [], depth };\n                if (depth == 0)\n                    this.roots.push(term);\n                else {\n                    for (let n = termList.length - 1; n >= 0; n--)\n                        if (termList[n].depth == depth - 1) {\n                            term.parent = termList[n];\n                            termList[n].children.push(term);\n                            break;\n                        }\n                    if (!term.parent)\n                        throw `Line ${pos} invalid hierarchy, no parent found`;\n                }\n                let list = this.mapTerms.get(uri);\n                if (list)\n                    list.push(term);\n                else\n                    this.mapTerms.set(uri, [term]);\n            }\n            termList.push(term);\n        }\n    }\n    debugString(term) {\n        let lines = [];\n        let emit = (term) => {\n            lines.push('* '.repeat(term.depth) + `<${term.uri}> \"${term.label}\"`);\n            for (let child of term.children)\n                emit(child);\n        };\n        emit(term);\n        return lines.join('\\n');\n    }\n}\n//# sourceMappingURL=OntologyTree.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2021 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {Vec} from 'webmolkit/util/Vec';\n\n/*\n\tTry to arrange a list of boxes into a more rectangular pattern, which has a better ratio than stacking everything vertically.\n*/\n\nenum SquarePackingSpring\n{\n\tStrong = 0,\n\tMedium = 1,\n\tWeak = 2,\n}\n\ninterface SquarePackingCandidate\n{\n\tidxStart:number;\n\tsprings:SquarePackingSpring[];\n\tlayout?:Box[];\n\toutline?:Size;\n\tscore?:number; // lower is better\n\thash?:string;\n}\n\ninterface SquarePackingSegment\n{\n\ty:number;\n\tx1:number;\n\tx2:number;\n}\n\nexport class SquarePacking\n{\n\tpublic outline:Size;\n\tpublic layout:Box[] = null;\n\n\tprivate wantRatio:number;\n\n\t// --------------------- public methods ---------------------\n\n\t// sets up the object with the mandatory information\n\tconstructor(private packSize:Size, private boxes:Box[], private hspace:number, private vspace:number)\n\t{\n\t\tthis.wantRatio = packSize.w / packSize.h;\n\n\t\t/*\n\t\t// !! temporary validation\n\t\tlet segs:SquarePackingSegment[] =\n\t\t[\n\t\t\t{'y': 0, 'x1': 0, 'x2': 1},\n\t\t\t{'y': 2, 'x1': 1, 'x2': 3},\n\t\t\t{'y': 1, 'x1': 3, 'x2': Number.POSITIVE_INFINITY}\n\t\t];\n\t\tthis.mergeSegmentAbove(segs, {'y': 2.5, 'x1': 1.5, 'x2': 2.5});\n\t\t//this.mergeSegmentBelow(segs, {'y': -1.5, 'x1': 2, 'x2': 3.5});\n\t\tfor (let seg of segs) console.log(JSON.stringify(seg));\n\t\tthrow 'blork';*/\n\t}\n\n\t// carries out the arrangement: returns whether it got something good\n\tpublic pack():boolean\n\t{\n\t\tlet candidates:SquarePackingCandidate[] = [];\n\t\tlet num = this.boxes.length;\n\t\tfor (let n = 0; n < num; n++)\n\t\t{\n\t\t\tlet cand:SquarePackingCandidate = {idxStart: n, springs: Vec.anyArray(SquarePackingSpring.Weak, num)};\n\t\t\tcand.hash = cand.idxStart + '/' + cand.springs;\n\t\t\tthis.processCandidate(cand);\n\t\t\tcandidates.push(cand);\n\t\t}\n\n\t\tconst KEEP = 100;\n\t\tcandidates = candidates.sort((c1, c2) => c1.score - c2.score).slice(0, KEEP);\n\n\t\tfor (let sanity = 100; sanity > 0; sanity--)\n\t\t{\n\t\t\tlet hashes = new Set<string>();\n\t\t\tfor (let cand of candidates) hashes.add(cand.hash);\n\n\t\t\tlet batch = candidates.slice(0);\n\t\t\tfor (let cand of candidates) for (let n = 0; n < num; n++) if (n != cand.idxStart)\n\t\t\t{\n\t\t\t\tfor (let sp of [SquarePackingSpring.Strong, SquarePackingSpring.Medium, SquarePackingSpring.Weak]) if (cand.springs[n] != sp)\n\t\t\t\t{\n\t\t\t\t\tlet mod:SquarePackingCandidate = {idxStart: cand.idxStart, springs: cand.springs.slice(0)};\n\t\t\t\t\tmod.springs[n] = sp;\n\t\t\t\t\tmod.hash = mod.idxStart + '/' + mod.springs;\n\t\t\t\t\tif (hashes.has(mod.hash)) continue;\n\t\t\t\t\tthis.processCandidate(mod);\n\t\t\t\t\tbatch.push(mod);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbatch = batch.sort((c1, c2) => c1.score - c2.score).slice(0, KEEP);\n\n\t\t\tlet same = true;\n\t\t\tfor (let n = 0; n < candidates.length && n < batch.length; n++) if (candidates[n].hash != batch[n].hash) {same = false; break;}\n\n\t\t\tif (!same) break;\n\n\t\t\tcandidates = batch;\n\t\t}\n\n\t\tlet best = candidates[0];\n\n\t\tthis.outline = best.outline;\n\t\tthis.layout = best.layout;\n\t\tlet minY = Vec.min(this.layout.map((b) => b.y));\n\t\tfor (let box of this.layout) box.y -= minY;\n\n\t\treturn true;\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\tprivate processCandidate(cand:SquarePackingCandidate):void\n\t{\n\t\tlet len = this.boxes.length;\n\t\tcand.layout = this.boxes.map((box) => new Box(0, 0, box.w, box.h));\n\t\tlet placed = Vec.booleanArray(false, len);\n\t\tplaced[cand.idxStart] = true;\n\n\t\tlet placeAbove = (idx:number, spring:SquarePackingSpring):void =>\n\t\t{\n\t\t\tlet box = cand.layout[idx];\n\t\t\tlet segs:SquarePackingSegment[] = null;\n\t\t\tfor (let n = idx + 1; n < len; n++) if (placed[n])\n\t\t\t{\n\t\t\t\tlet ref = cand.layout[n];\n\t\t\t\tlet newsegs:SquarePackingSegment[] = [];\n\t\t\t\tif (ref.minX() > 0) newsegs.push({y: ref.midY() - this.vspace, x1: 0, x2: ref.minX() - this.hspace});\n\t\t\t\tnewsegs.push({y: ref.minY() - this.vspace, x1: Math.max(0, ref.minX() - this.hspace), x2: ref.maxX() + this.hspace});\n\t\t\t\tnewsegs.push({y: ref.minY() - this.vspace + 0.5 * box.h, x1: ref.maxX() + this.hspace, x2: Number.POSITIVE_INFINITY});\n\t\t\t\tif (segs == null) segs = newsegs;\n\t\t\t\telse for (let nseg of newsegs) this.mergeSegmentAbove(segs, nseg);\n\t\t\t}\n\n\t\t\tlet bestX = 0, bestY = Number.NEGATIVE_INFINITY;\n\t\t\tfor (let n = 0; n < segs.length; n++)\n\t\t\t{\n\t\t\t\tlet x = segs[n].x1, y = Number.POSITIVE_INFINITY;\n\t\t\t\tfor (let i = n; i < segs.length; i++)\n\t\t\t\t{\n\t\t\t\t\ty = Math.min(y, segs[i].y);\n\t\t\t\t\tif (box.w < segs[i].x2 - x) break;\n\t\t\t\t}\n\t\t\t\tif (y > bestY) [bestX, bestY] = [x, y];\n\t\t\t\tif (spring == SquarePackingSpring.Strong) break;\n\t\t\t\tif (spring == SquarePackingSpring.Medium && x > 0.5 * this.packSize.w) break;\n\t\t\t}\n\t\t\tbox.x = bestX;\n\t\t\tbox.y = bestY - box.h;\n\t\t\tplaced[idx] = true;\n\t\t};\n\t\tlet placeBelow = (idx:number, spring:SquarePackingSpring):void =>\n\t\t{\n\t\t\tlet box = cand.layout[idx];\n\t\t\tlet segs:SquarePackingSegment[] = null;\n\t\t\tfor (let n = idx - 1; n >= 0; n--) if (placed[n])\n\t\t\t{\n\t\t\t\tlet ref = cand.layout[n];\n\t\t\t\tlet newsegs:SquarePackingSegment[] = [];\n\t\t\t\tif (ref.minX() > 0) newsegs.push({y: ref.midY() + this.vspace, x1: 0, x2: ref.minX() - this.hspace});\n\t\t\t\tnewsegs.push({y: ref.maxY() + this.vspace, x1: Math.max(0, ref.minX() - this.hspace), x2: ref.maxX() + this.hspace});\n\t\t\t\tnewsegs.push({y: ref.maxY() + this.vspace - 0.5 * box.h, x1: ref.maxX() + this.hspace, x2: Number.POSITIVE_INFINITY});\n\t\t\t\tif (segs == null) segs = newsegs;\n\t\t\t\telse for (let nseg of newsegs) this.mergeSegmentBelow(segs, nseg);\n\t\t\t}\n\n\t\t\tlet bestX = 0, bestY = Number.POSITIVE_INFINITY;\n\t\t\tfor (let n = 0; n < segs.length; n++)\n\t\t\t{\n\t\t\t\tlet x = segs[n].x1, y = Number.NEGATIVE_INFINITY;\n\t\t\t\tfor (let i = n; i < segs.length; i++)\n\t\t\t\t{\n\t\t\t\t\ty = Math.max(y, segs[i].y);\n\t\t\t\t\tif (box.w < segs[i].x2 - x) break;\n\t\t\t\t}\n\t\t\t\tif (y < bestY) [bestX, bestY] = [x, y];\n\t\t\t\tif (spring == SquarePackingSpring.Strong) break;\n\t\t\t\tif (spring == SquarePackingSpring.Medium && x > 0.5 * this.packSize.w) break;\n\t\t\t}\n\t\t\tbox.x = bestX;\n\t\t\tbox.y = bestY;\n\t\t\tplaced[idx] = true;\n\t\t};\n\n\t\tfor (let d = 1; d < len; d++)\n\t\t{\n\t\t\tlet i1 = cand.idxStart - d, i2 = cand.idxStart + d;\n\t\t\tif (i1 >= 0) placeAbove(i1, cand.springs[i1]);\n\t\t\tif (i2 < len) placeBelow(i2, cand.springs[i2]);\n\t\t}\n\n\t\tlet loX = 0, hiX = Vec.max(cand.layout.map((box) => box.maxX()));\n\t\tlet loY = Vec.min(cand.layout.map((box) => box.minY())), hiY = Vec.max(cand.layout.map((box) => box.maxY()));\n\t\tcand.outline = new Size(hiX - loX, hiY - loY);\n\t\tlet ratio = cand.outline.w / cand.outline.h;\n\t\tcand.score = Math.abs(ratio - this.wantRatio) * (cand.outline.w + cand.outline.h);\n\t\tcand.score += Vec.sum((cand.layout.map((box) => box.x)));\n\t\tfor (let n = 0; n < cand.layout.length - 1; n++) cand.score += Math.max(0, cand.layout[n].minY() - cand.layout[n].maxY());\n\t}\n\n\tprivate mergeSegmentAbove(segs:SquarePackingSegment[], merge:SquarePackingSegment):void\n\t{\n\t\tfor (let look of segs)\n\t\t{\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2 && merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) return; // completely buried\n\t\t\t\tsegs.push({y: look.y, x1: merge.x2, x2: look.x2});\n\t\t\t\tlook.x2 = merge.x1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) look.x2 = merge.x1; else merge.x1 = look.x2;\n\t\t\t}\n\t\t\tif (merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) look.x1 = merge.x2; else merge.x2 = look.x1;\n\t\t\t}\n\t\t}\n\t\tfor (let n = segs.length - 1; n >= 0; n--) if (segs[n].x1 >= segs[n].x2) segs.splice(n, 1);\n\t\tif (merge.x1 < merge.x2)\n\t\t{\n\t\t\tsegs.push(merge);\n\t\t\tsegs.sort((seg1, seg2) => seg1.x1 - seg2.x1);\n\t\t}\n\t}\n\tprivate mergeSegmentBelow(segs:SquarePackingSegment[], merge:SquarePackingSegment):void\n\t{\n\t\tfor (let look of segs)\n\t\t{\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2 && merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) return; // completely buried\n\t\t\t\tsegs.push({y: look.y, x1: merge.x2, x2: look.x2});\n\t\t\t\tlook.x2 = merge.x1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) look.x2 = merge.x1; else merge.x1 = look.x2;\n\t\t\t}\n\t\t\tif (merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) look.x1 = merge.x2; else merge.x2 = look.x1;\n\t\t\t}\n\t\t}\n\t\tfor (let n = segs.length - 1; n >= 0; n--) if (segs[n].x1 >= segs[n].x2) segs.splice(n, 1);\n\t\tif (merge.x1 < merge.x2)\n\t\t{\n\t\t\tsegs.push(merge);\n\t\t\tsegs.sort((seg1, seg2) => seg1.x1 - seg2.x1);\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {MixfileComponent} from '../data/Mixfile';\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {ArrangeMolecule} from 'webmolkit/gfx/ArrangeMolecule';\nimport {NormMixture} from '../data/NormMixture';\nimport {Mixture} from '../data/Mixture';\nimport {ArrangeMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MoleculeStream} from 'webmolkit/data/MoleculeStream';\nimport {formatDouble} from 'webmolkit/util/util';\nimport {OntologyTree} from 'webmolkit/data/OntologyTree';\nimport {SquarePacking} from './SquarePacking';\nimport {FontData} from 'webmolkit/gfx/FontData';\n\n/*\n\tArranging a Mixfile: will create a tree layout for all of the components, according to parameters.\n*/\n\nexport enum ArrangeMixtureLineSource\n{\n\tName,\n\tQuantity,\n\tIdentifier,\n\tMeta,\n}\n\nexport interface ArrangeMixtureLine\n{\n\ttext:string;\n\tcol:number;\n\tsource:ArrangeMixtureLineSource;\n}\n\nexport interface ArrangeMixtureComponent\n{\n\torigin:number[];\n\tcontent:MixfileComponent;\n\tparentIdx:number;\n\n\tboundary?:Box; // outer boundary (position on canvas)\n\n\tmol?:Molecule;\n\tmolLayout?:ArrangeMolecule;\n\tmolBox?:Box;\n\n\tnameBox?:Box;\n\tnameLines?:ArrangeMixtureLine[];\n\tfontSize?:number;\n\n\toutline?:Box; // inner boundary (surrounds molecule, names, etc.)\n\n\tisCollapsed?:boolean;\n\tcollapseBox?:Box;\n}\n\nconst PADDING = 0.25;\nconst VSPACE = 0.5;\nconst HSPACE = 1;\nconst COLLAPSE_SIZE = 0.3;\nconst COLLAPSE_GAP = 0.05;\n\nexport class ArrangeMixture\n{\n\tpublic norm:NormMixture = null; // optional: contents may be used for additional decoration\n\n\tpublic scale:number;\n\tpublic nameFontSize:number;\n\tpublic width = 0;\n\tpublic height = 0;\n\n\tpublic components:ArrangeMixtureComponent[] = [];\n\n\t// parameters to influence the drawing\n\tpublic limitStructW:number;\n\tpublic limitStructH:number;\n\tpublic minBoxSize:Size = null;\n\tpublic showCollapsors = false; // if true, boxes for [+]/[-] will be created for interactive use\n\tpublic collapsedBranches:number[][] = []; // any origin specified in this list will not display its children\n\tpublic packBranches:Size = null; // if defined, makes an effort to pack branches into the box size\n\tpublic hardwrapName:number; // name width guaranteed not longer than this\n\tpublic softwrapName:number; // name wrapping at selected characters kicks in after this width\n\tpublic includeIdentifiers = true; // if switched off, identifiers won't be included in text\n\n\t// --------------------- public methods ---------------------\n\n\t// sets up the object with the mandatory information\n\tconstructor(public mixture:Mixture, public measure:ArrangeMeasurement, public policy:RenderPolicy)\n\t{\n\t\tthis.scale = policy.data.pointScale;\n\t\tthis.nameFontSize = 0.5 * this.scale;\n\t\tthis.limitStructW = this.limitStructH = this.scale * 10;\n\t\tthis.hardwrapName = 12 * this.scale;\n\t\tthis.softwrapName = 8 * this.scale;\n\t}\n\n\t// carries out the arrangement\n\tpublic arrange():void\n\t{\n\t\tthis.createComponents();\n\t\tthis.layoutSubComponents(0);\n\t\tthis.contractComponents();\n\n\t\t// normalize boundaries\n\t\tlet outline:Box = null;\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tif (outline) outline = outline.union(comp.boundary); else outline = comp.boundary;\n\t\t}\n\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tcomp.boundary.x -= outline.x;\n\t\t\tcomp.boundary.y -= outline.y;\n\n\t\t\tif (comp.molLayout)\n\t\t\t{\n\t\t\t\tlet b1 = comp.boundary, b2 = comp.molBox;\n\t\t\t\tcomp.molLayout.squeezeInto(b1.x + b2.x, b1.y + b2.y, b2.w, b2.h);\n\t\t\t}\n\t\t}\n\t\tthis.width = outline.w;\n\t\tthis.height = outline.h;\n\t}\n\n\t// resize the whole thing\n\tpublic scaleComponents(modScale:number):void\n\t{\n\t\tif (modScale == 1) return;\n\n\t\tthis.scale *= modScale;\n\t\tthis.width *= modScale;\n\t\tthis.height *= modScale;\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tcomp.boundary.scaleBy(modScale);\n\t\t\tcomp.outline.scaleBy(modScale);\n\t\t\tif (comp.molBox)\n\t\t\t{\n\t\t\t\tcomp.molBox.scaleBy(modScale);\n\t\t\t\tif (comp.molLayout)\n\t\t\t\t{\n\t\t\t\t\tlet mx = comp.boundary.x + comp.molBox.x, my = comp.boundary.y + comp.molBox.y;\n\t\t\t\t\tcomp.molLayout.squeezeInto(mx, my, comp.molBox.w, comp.molBox.h);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (comp.nameBox) comp.nameBox.scaleBy(modScale);\n\t\t\tif (comp.collapseBox) comp.collapseBox.scaleBy(modScale);\n\t\t\tcomp.fontSize *= modScale;\n\t\t}\n\t}\n\n\t// returns the index of the indicated origin vector, or -1 if not present\n\tpublic findComponent(origin:number[]):number\n\t{\n\t\tfor (let n = 0; n < this.components.length; n++) if (Vec.equals(this.components[n].origin, origin)) return n;\n\t\treturn -1;\n\t}\n\n\t// turn quantity info into a readable string\n\tpublic static formatQuantity(mixcomp:MixfileComponent):string\n\t{\n\t\tlet prec = (val:number):string =>\n\t\t{\n\t\t\tif (val == null) return '';\n\t\t\tif (val > 10000) return Math.round(val).toString();\n\t\t\tlet str = val.toPrecision(6);\n\t\t\tif (str.indexOf('e') >= 0 || str.indexOf('.') < 0) return str;\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tif (str.endsWith('0')) str = str.substring(0, str.length - 1);\n\t\t\t\telse if (str.endsWith('.')) {str = str.substring(0, str.length - 1); break;}\n\t\t\t\telse break;\n\t\t\t}\n\t\t\treturn str;\n\t\t};\n\n\t\tif (mixcomp.ratio)\n\t\t{\n\t\t\tif (mixcomp.ratio.length == 2) return prec(mixcomp.ratio[0]) + '/' + prec(mixcomp.ratio[1]);\n\t\t\treturn null; // invalid ratio\n\t\t}\n\n\t\tif (mixcomp.quantity == null) return null;\n\n\t\tlet str = '';\n\t\tif (mixcomp.relation && mixcomp.relation != '=')\n\t\t{\n\t\t\tlet rel = mixcomp.relation;\n\t\t\tif (rel == '>=') rel = '\\u{2265}'; else if (rel == '<=') rel = '\\u{2264}';\n\t\t\tstr += rel /*+ ' '*/;\n\t\t}\n\t\tif (mixcomp.quantity instanceof Array)\n\t\t{\n\t\t\tif (mixcomp.quantity.length == 0) return;\n\t\t\tstr += prec(mixcomp.quantity[0]);\n\t\t\tif (mixcomp.quantity.length >= 2) str += ' - ' + prec(mixcomp.quantity[1]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr += prec(mixcomp.quantity); // is presumed to be scalar\n\t\t\tif (mixcomp.error)\n\t\t\t{\n\t\t\t\t// TODO: match the significant figures more carefully\n\t\t\t\tstr += ' \\u{00B1} ' + prec(mixcomp.error);\n\t\t\t}\n\t\t}\n\n\t\tif (mixcomp.units)\n\t\t{\n\t\t\tif (!mixcomp.units.startsWith('%')) str += ' ';\n\t\t\tstr += mixcomp.units;\n\t\t}\n\n\t\treturn str;\n\t}\n\n\t// if the component has a \"standardised\" quantity, format and return\n\tprivate formatNormQuantity(origin:number[]):string\n\t{\n\t\tif (!this.norm) return;\n\t\tlet note = this.norm.findNote(origin);\n\t\tif (!note || !note.concQuantity) return;\n\n\t\tlet comp:MixfileComponent =\n\t\t{\n\t\t\tquantity: note.concQuantity,\n\t\t\terror: note.concError,\n\t\t\tunits: note.concUnits,\n\t\t\trelation: note.concRelation,\n\t\t};\n\t\treturn ArrangeMixture.formatQuantity(comp);\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\t// instantiate each component in the diagram (which includes pluses and arrows)\n\tprivate createComponents():void\n\t{\n\t\t// assemble the components into a flat hierarchy\n\t\tlet examineBranch = (origin:number[], mixcomp:MixfileComponent, idx:number):void =>\n\t\t{\n\t\t\tlet comp:ArrangeMixtureComponent = {origin: origin, content: mixcomp, parentIdx: idx};\n\t\t\tlet parentIdx = this.components.push(comp) - 1;\n\n\t\t\t// see if it's been indicated as collapsed\n\t\t\tcomp.isCollapsed = false;\n\t\t\tfor (let origin of this.collapsedBranches) if (Vec.equals(origin, comp.origin)) comp.isCollapsed = true;\n\n\t\t\tif (mixcomp.contents && !comp.isCollapsed) for (let n = 0; n < mixcomp.contents.length; n++)\n\t\t\t{\n\t\t\t\tlet subOrigin = Vec.append(origin, n);\n\t\t\t\texamineBranch(subOrigin, mixcomp.contents[n], parentIdx);\n\t\t\t}\n\t\t};\n\t\texamineBranch([], this.mixture.mixfile, -1);\n\n\t\tlet padding = PADDING * this.scale;\n\n\t\t// do the sizing for each component\n\t\tfor (let [idx, comp] of this.components.entries())\n\t\t{\n\t\t\tlet mixcomp = comp.content;\n\n\t\t\t// handle molecule, if any\n\t\t\tif (mixcomp.molfile) comp.mol = MoleculeStream.readUnknown(mixcomp.molfile);\n\t\t\tif (comp.mol)\n\t\t\t{\n\t\t\t\tcomp.molLayout = new ArrangeMolecule(comp.mol, this.measure, this.policy);\n\t\t\t\tcomp.molLayout.arrange();\n\t\t\t\tcomp.molLayout.squeezeInto(0, 0, this.limitStructW, this.limitStructH);\n\t\t\t\tlet bounds = comp.molLayout.determineBoundary();\n\t\t\t\tcomp.molBox = new Box(padding, padding, Math.ceil(bounds[2] - bounds[0]), Math.ceil(bounds[3] - bounds[1]));\n\t\t\t}\n\t\t\telse comp.molBox = Box.zero();\n\n\t\t\t// handle name, or other content needing representation\n\t\t\tcomp.nameLines = [];\n\t\t\tif (mixcomp.name) this.wrapSplitName(comp.nameLines, mixcomp.name, 0x000000, ArrangeMixtureLineSource.Name);\n\n\t\t\t// (... synonyms, and linewrapping ...)\n\t\t\tlet qline = ArrangeMixture.formatQuantity(mixcomp);\n\t\t\tif (qline) comp.nameLines.push({text: qline, col: 0x000000, source: ArrangeMixtureLineSource.Quantity});\n\n\t\t\tqline = this.formatNormQuantity(comp.origin);\n\t\t\tif (qline) comp.nameLines.push({text: `(${qline})`, col: 0x808080, source: ArrangeMixtureLineSource.Quantity});\n\n\t\t\tif (this.includeIdentifiers && mixcomp.identifiers) for (let key in mixcomp.identifiers)\n\t\t\t{\n\t\t\t\tlet line = key + ' ';\n\t\t\t\tlet val = mixcomp.identifiers[key];\n\t\t\t\tif (val instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tfor (let n = 0; n < val.length; n++) line += (n == 0 ? '' : ', ') + val[n];\n\t\t\t\t}\n\t\t\t\telse line += val;\n\t\t\t\tcomp.nameLines.push({text: this.truncateEllipsis(line), col: 0x42007E, source: ArrangeMixtureLineSource.Identifier});\n\t\t\t}\n\t\t\tif (mixcomp.metadata) for (let meta of mixcomp.metadata)\n\t\t\t{\n\t\t\t\tlet metaString = (m:string | number):string =>\n\t\t\t\t{\n\t\t\t\t\tif (typeof m == 'number') return formatDouble(m, 4);\n\t\t\t\t\tif (!OntologyTree.main) return m;\n\t\t\t\t\tlet branch = OntologyTree.main.getBranch(m);\n\t\t\t\t\tif (Vec.notBlank(branch)) return branch[0].label;\n\t\t\t\t\treturn m;\n\t\t\t\t};\n\t\t\t\tlet bits:string[] = [];\n\t\t\t\tif (Array.isArray(meta)) bits = meta.map((m) => metaString(m)); else bits = [metaString(meta as string | number)];\n\t\t\t\tcomp.nameLines.push({text: bits.join(' '), col: 0x002B88, source: ArrangeMixtureLineSource.Meta});\n\t\t\t}\n\n\t\t\tcomp.nameBox = new Box(padding, padding);\n\t\t\tcomp.fontSize = this.nameFontSize;\n\t\t\tfor (let n = 0; n < comp.nameLines.length; n++)\n\t\t\t{\n\t\t\t\tlet wad = this.measure.measureText(comp.nameLines[n].text, comp.fontSize);\n\t\t\t\tcomp.nameBox.w = Math.max(comp.nameBox.w, wad[0]);\n\t\t\t\tcomp.nameBox.h += wad[1] + (n > 0 ? wad[2] * 2 : 0);\n\t\t\t}\n\n\t\t\tcomp.outline = Box.zero();\n\t\t\tcomp.outline.w = Math.max(comp.molBox.w, comp.nameBox.w) + 2 * padding;\n\t\t\tcomp.outline.h = comp.molBox.h + comp.nameBox.h + 2 * padding;\n\t\t\tif (comp.molBox.notEmpty() && comp.nameBox.notEmpty())\n\t\t\t{\n\t\t\t\tcomp.outline.h += padding;\n\t\t\t\tcomp.nameBox.y += comp.molBox.h + padding;\n\t\t\t\tcomp.molBox.w = comp.nameBox.w = Math.max(comp.molBox.w, comp.nameBox.w);\n\t\t\t}\n\n\t\t\tif (this.minBoxSize)\n\t\t\t{\n\t\t\t\tlet minsz = this.minBoxSize;\n\t\t\t\tlet dw = minsz.w - comp.outline.w, dh = minsz.h - comp.outline.h;\n\t\t\t\tif (dw > 0)\n\t\t\t\t{\n\t\t\t\t\tcomp.outline.w += dw;\n\t\t\t\t\tcomp.molBox.w += dw;\n\t\t\t\t}\n\t\t\t\tif (dh > 0)\n\t\t\t\t{\n\t\t\t\t\tcomp.outline.h += dh;\n\t\t\t\t\tcomp.molBox.h += dh;\n\t\t\t\t\tcomp.nameBox.y += dh;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcomp.boundary = comp.outline.clone();\n\n\t\t\tif ((this.showCollapsors || comp.isCollapsed) && Vec.notBlank(comp.content.contents))\n\t\t\t{\n\t\t\t\tlet gap = COLLAPSE_GAP * this.scale, wh = COLLAPSE_SIZE * this.scale;\n\t\t\t\tcomp.collapseBox = new Box(comp.boundary.maxX() + gap, comp.boundary.midY() - 0.5 * wh, wh, wh);\n\t\t\t\tcomp.boundary.w += gap + wh;\n\t\t\t}\n\t\t}\n\t}\n\n\t// arranges all of the subcomponents for a given index, positioning them relative to the current position; returns the indices of\n\t// the entire branch, for subsequent touchup\n\tprivate layoutSubComponents(idx:number):number[]\n\t{\n\t\tlet wholeBranch:number[] = [idx];\n\t\tlet branchBlock:number[][] = [];\n\t\tlet branchBox:Box[] = [];\n\n\t\tlet totalWidth = 0, totalHeight = 0;\n\n\t\tfor (let n = idx + 1; n < this.components.length; n++)\n\t\t{\n\t\t\tlet comp = this.components[n];\n\t\t\tif (comp.parentIdx != idx) continue;\n\n\t\t\tlet branch = this.layoutSubComponents(n);\n\t\t\tif (branch.length == 0) continue;\n\n\t\t\tlet box:Box = null;\n\t\t\tfor (let i of branch)\n\t\t\t{\n\t\t\t\twholeBranch.push(i);\n\t\t\t\tlet bound = this.components[i].boundary;\n\t\t\t\tif (box) box = box.union(bound); else box = bound;\n\t\t\t}\n\n\t\t\tbranchBlock.push(branch);\n\t\t\tbranchBox.push(box);\n\n\t\t\ttotalWidth = Math.max(totalWidth, box.w);\n\t\t\ttotalHeight += box.h;\n\t\t}\n\t\tif (branchBlock.length == 0) return wholeBranch;\n\n\t\tlet hspace = HSPACE * this.scale, vspace = VSPACE * this.scale;\n\t\ttotalHeight += vspace * (branchBlock.length - 1);\n\n\t\tlet cbox = this.components[idx].boundary;\n\t\tlet x = cbox.maxX() + hspace;\n\n\t\t// special case: may try to pack the boxes into a smaller area rather than vertically on top of each other\n\t\tif (this.packBranches && branchBlock.length > 2 && totalHeight > this.packBranches.h)\n\t\t{\n\t\t\tlet packSize = this.packBranches.clone();\n\t\t\tfor (let box of branchBox) packSize.h = Math.max(packSize.h, box.h); // if a sub-box is bigger than overall, no need to limit it further\n\n\t\t\tlet sq = new SquarePacking(packSize, branchBox, /*hspace*/ vspace, vspace);\n\t\t\tif (sq.pack())\n\t\t\t{\n\t\t\t\tlet y = cbox.midY() - 0.5 * sq.outline.h;\n\t\t\t\tfor (let n = 0; n < branchBlock.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet box = sq.layout[n];\n\t\t\t\t\tlet dx = x - branchBox[n].x + box.x, dy = y - branchBox[n].y + box.y;\n\t\t\t\t\tfor (let i of branchBlock[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.components[i].boundary.x += dx;\n\t\t\t\t\t\tthis.components[i].boundary.y += dy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn wholeBranch;\n\t\t\t}\n\t\t}\n\n\t\t// !! note: not guaranteed that x is high enough to not interfere with other boxes; will need a post-check of some kind, maybe here,\n\t\t//    maybe further down the line\n\n\t\tlet y = cbox.midY() - 0.5 * totalHeight;\n\t\tfor (let n = 0; n < branchBlock.length; n++)\n\t\t{\n\t\t\tlet dx = x - branchBox[n].x, dy = y - branchBox[n].y;\n\t\t\tfor (let i of branchBlock[n])\n\t\t\t{\n\t\t\t\tthis.components[i].boundary.x += dx;\n\t\t\t\tthis.components[i].boundary.y += dy;\n\t\t\t}\n\t\t\ty += branchBox[n].h + vspace;\n\t\t}\n\n\t\treturn wholeBranch;\n\t}\n\n\t// component layout is done, but may be able to \"reel in\" some of the branches to make it smaller\n\tprivate contractComponents():void\n\t{\n\t\tlet allChildren:number[][] = [];\n\t\tfor (let n = 0; n < this.components.length; n++) \n\t\t{\n\t\t\tallChildren.push([]);\n\t\t\tfor (let idx = this.components[n].parentIdx; idx >= 0; idx = this.components[idx].parentIdx) allChildren[idx].push(n);\n\t\t}\n\n\t\tlet hspace = HSPACE * this.scale, padding = PADDING * this.scale;\n\n\t\twhile (true)\n\t\t{\n\t\t\tlet anything = false;\n\n\t\t\tfor (let n = 1; n < allChildren.length; n++)\n\t\t\t{\n\t\t\t\tlet pidx = this.components[n].parentIdx;\n\t\t\t\tlet boundX = this.components[pidx].boundary.maxX() + hspace;\n\t\t\t\tlet dx = this.components[n].boundary.minX() - boundX; // how far to move to the left\n\t\t\t\tif (dx < 1) continue; // no room to contract\n\n\t\t\t\tlet idxInside = [n, ...allChildren[n]];\n\t\t\t\tlet idxOutside = Vec.identity0(allChildren.length).filter((idx) => !idxInside.includes(idx));\n\n\t\t\t\tfor (let i of idxInside)\n\t\t\t\t{\n\t\t\t\t\tlet box1 = this.components[i].boundary.withGrow(padding, padding);\n\t\t\t\t\tfor (let j of idxOutside)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet box2 = this.components[j].boundary;\n\t\t\t\t\t\tif (box2.minX() > box1.maxX()) continue;\n\t\t\t\t\t\tif (box1.minY() > box2.maxY() || box1.maxY() < box2.minY()) continue;\n\n\t\t\t\t\t\tdx = Math.min(dx, box1.minX() - box2.maxX());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dx > 1)\n\t\t\t\t{\n\t\t\t\t\tfor (let n of idxInside) this.components[n].boundary.x -= dx;\n\t\t\t\t\tanything = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!anything) break;\n\t\t}\n\t}\n\n\t// if the given string is longer than the soft/hard limit, looks to break it up into smaller pieces; each of them is\n\t// appended to the list parameter\n\tprivate wrapSplitName(list:ArrangeMixtureLine[], text:string, col:number, source:ArrangeMixtureLineSource):void\n\t{\n\t\tif (!text) return;\n\t\tlet xpos = FontData.measureWidths(text, this.nameFontSize);\n\t\tif (Vec.last(xpos) <= this.softwrapName)\n\t\t{\n\t\t\tlist.push({text, col, source});\n\t\t\treturn;\n\t\t}\n\n\t\tlet p = 0;\n\t\tfor (; xpos[p] < this.softwrapName; p++) {}\n\t\tfor (; xpos[p] < this.hardwrapName; p++)\n\t\t{\n\t\t\tlet ch = text.charAt(p);\n\t\t\tif (' ,;-/'.includes(ch))\n\t\t\t{\n\t\t\t\tp++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlist.push({text: text.substring(0, p).trim(), col, source});\n\t\tthis.wrapSplitName(list, text.substring(p).trim(), col, source);\n\t}\n\n\t// if the line is longer than the hard wrap limit, just truncate with ellipsis\n\tprivate truncateEllipsis(txt:string):string\n\t{\n\t\tlet xpos = FontData.measureWidths(txt, this.nameFontSize);\n\t\tif (Vec.last(xpos) <= this.hardwrapName) return txt;\n\t\tlet ellipsis = '...', ellw = FontData.measureText(ellipsis, this.nameFontSize)[0];\n\t\tlet keep = 1;\n\t\tfor (; keep < txt.length; keep++) if (xpos[keep] + ellw > this.hardwrapName) break;\n\t\treturn txt.substring(0, keep) + ellipsis;\n\t}\n}\n\n","import { Box } from '../util/Geom';\nimport { colourAlpha, colourCanvas, colourCode, DEGRAD, newElement, pixelDensity } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { FontData } from './FontData';\nexport var TextAlign;\n(function (TextAlign) {\n    TextAlign[TextAlign[\"Centre\"] = 0] = \"Centre\";\n    TextAlign[TextAlign[\"Left\"] = 1] = \"Left\";\n    TextAlign[TextAlign[\"Right\"] = 2] = \"Right\";\n    TextAlign[TextAlign[\"Baseline\"] = 0] = \"Baseline\";\n    TextAlign[TextAlign[\"Middle\"] = 4] = \"Middle\";\n    TextAlign[TextAlign[\"Top\"] = 8] = \"Top\";\n    TextAlign[TextAlign[\"Bottom\"] = 16] = \"Bottom\";\n})(TextAlign || (TextAlign = {}));\nvar PrimClass;\n(function (PrimClass) {\n    PrimClass[PrimClass[\"Line\"] = 1] = \"Line\";\n    PrimClass[PrimClass[\"Rect\"] = 2] = \"Rect\";\n    PrimClass[PrimClass[\"Oval\"] = 3] = \"Oval\";\n    PrimClass[PrimClass[\"Path\"] = 4] = \"Path\";\n    PrimClass[PrimClass[\"Text\"] = 5] = \"Text\";\n    PrimClass[PrimClass[\"TextNative\"] = 6] = \"TextNative\";\n})(PrimClass || (PrimClass = {}));\nclass SpoolSVG {\n    constructor(prettyPrint) {\n        this.prettyPrint = prettyPrint;\n        this.lines = [];\n        this.depth = 0;\n    }\n    spool(str) { if ((str === null || str === void 0 ? void 0 : str.length) > 0)\n        this.lines.push(str); }\n    start(str) {\n        if (this.prettyPrint && this.depth > 0)\n            this.lines.push('  '.repeat(this.depth));\n        this.spool(str);\n    }\n    stop(str) {\n        this.spool(str);\n        if (this.prettyPrint)\n            this.lines.push('\\n');\n    }\n    whole(str) {\n        if (this.prettyPrint && this.depth > 0)\n            this.lines.push('  '.repeat(this.depth));\n        this.spool(str);\n        if (this.prettyPrint)\n            this.lines.push('\\n');\n    }\n    attr(key, val) {\n        var _a;\n        if (typeof val == 'number') {\n            val = val.toFixed(4);\n            let match = (_a = /^(.*\\.\\d*?[1-9]+)0+$/.exec(val)) !== null && _a !== void 0 ? _a : /^(.*)\\.0+$/.exec(val);\n            if (match)\n                val = match[1];\n        }\n        this.spool(` ${key}=\"${val}\"`);\n    }\n    inc() { this.depth++; }\n    dec() { this.depth--; }\n    toString() { return this.lines.join(''); }\n}\nclass MetaVector {\n    constructor(vec) {\n        this.types = [];\n        this.prims = [];\n        this.width = 0;\n        this.height = 0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.scale = 1;\n        this.density = 1;\n        this.charMissing = false;\n        this.lowX = null;\n        this.lowY = null;\n        this.highX = null;\n        this.highY = null;\n        const font = FontData.main;\n        this.charMask = Vec.booleanArray(false, font.UNICODE.length);\n        if (vec != null) {\n            if (vec.size != null) {\n                this.width = vec.size[0];\n                this.height = vec.size[1];\n            }\n            if (vec.types != null)\n                this.types = vec.types;\n            if (vec.prims != null)\n                this.prims = vec.prims;\n            for (let p of this.prims)\n                if (p.primClass == PrimClass.Text) {\n                    let { txt } = p;\n                    for (let n = 0; n < txt.length; n++) {\n                        let i = font.getIndex(txt.charAt(n));\n                        if (i >= 0)\n                            this.charMask[i] = true;\n                        else\n                            this.charMissing = true;\n                    }\n                }\n        }\n    }\n    drawLine(x1, y1, x2, y2, colour, thickness) {\n        if (thickness == null)\n            thickness = 1;\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Line, thickness, colour });\n        const bump = 0.5 * thickness;\n        this.updateBounds(Math.min(x1, x2) - bump, Math.min(y1, y2) - bump);\n        this.updateBounds(Math.max(x1, x2) + bump, Math.max(y1, y2) + bump);\n        this.prims.push({ primClass: PrimClass.Line, typeidx, x1, y1, x2, y2 });\n    }\n    drawRect(x, y, w, h, edgeCol, thickness, fillCol) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Rect, edgeCol, fillCol, thickness });\n        const bump = 0.5 * thickness;\n        this.updateBounds(x - bump, y - bump);\n        this.updateBounds(x + w + bump, y + h + bump);\n        this.prims.push({ primClass: PrimClass.Rect, typeidx, x, y, w, h });\n    }\n    drawOval(cx, cy, rw, rh, edgeCol, thickness, fillCol) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        const bump = 0.5 * thickness;\n        this.updateBounds(cx - rw - bump, cy - rh - bump);\n        this.updateBounds(cx + rw + bump, cy + rh + bump);\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Oval, edgeCol, fillCol, thickness });\n        this.prims.push({ primClass: PrimClass.Oval, typeidx, cx, cy, rw, rh });\n    }\n    drawPath(xpoints, ypoints, ctrlFlags, isClosed, edgeCol, thickness, fillCol, hardEdge) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        if (hardEdge == null)\n            hardEdge = false;\n        const bump = 0.5 * thickness;\n        for (let n = 0; n < xpoints.length; n++) {\n            this.updateBounds(xpoints[n] - bump, ypoints[n] - bump);\n            if (bump != 0)\n                this.updateBounds(xpoints[n] + bump, ypoints[n] + bump);\n        }\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Path, edgeCol, fillCol, thickness, hardEdge });\n        this.prims.push({ primClass: PrimClass.Path, typeidx, count: xpoints.length,\n            x: Vec.duplicate(xpoints), y: Vec.duplicate(ypoints), ctrl: ctrlFlags && [...ctrlFlags], closed: isClosed });\n    }\n    drawPoly(xpoints, ypoints, edgeCol, thickness, fillCol, hardEdge) {\n        this.drawPath(xpoints, ypoints, null, true, edgeCol, thickness, fillCol, hardEdge);\n    }\n    drawText(x, y, txt, size, colour, align, direction) {\n        if (align == null)\n            align = TextAlign.Left | TextAlign.Baseline;\n        if (direction == null)\n            direction = 0;\n        let cosTheta = 1, sinTheta = 0;\n        if (direction != 0)\n            [cosTheta, sinTheta] = [Math.cos(direction * DEGRAD), Math.sin(direction * DEGRAD)];\n        const font = FontData.main;\n        for (let n = 0; n < txt.length; n++) {\n            let i = font.getIndex(txt.charAt(n));\n            if (i >= 0)\n                this.charMask[i] = true;\n            else\n                this.charMissing = true;\n        }\n        let metrics = font.measureText(txt, size);\n        let bx = 0, by = 0;\n        let dx = 0;\n        if ((align & TextAlign.Left) != 0) { }\n        else if ((align & TextAlign.Right) != 0)\n            dx = -metrics[0];\n        else\n            dx = -0.5 * metrics[0];\n        if (dx != 0) {\n            bx += dx * cosTheta;\n            by += dx * sinTheta;\n        }\n        let dy = 0;\n        if ((align & TextAlign.Middle) != 0)\n            dy = 0.5 * metrics[1];\n        else if ((align & TextAlign.Top) != 0)\n            dy = metrics[1];\n        else if ((align & TextAlign.Bottom) != 0)\n            dy = -metrics[2];\n        if (dy != 0) {\n            bx -= dy * sinTheta;\n            by += dy * cosTheta;\n        }\n        let x1 = 0, y1 = 0, x2 = 0, y2 = 0;\n        let tx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            if (i >= 0) {\n                let outlineX = font.getOutlineX(i), outlineY = font.getOutlineY(i);\n                x1 = Math.min(x1, tx + Vec.min(outlineX));\n                x2 = Math.max(x2, tx + Vec.max(outlineX));\n                y1 = Math.min(y1, -Vec.max(outlineY));\n                y2 = Math.max(y2, -Vec.min(outlineY));\n                tx += font.HORIZ_ADV_X[i];\n                if (n < txt.length - 1)\n                    tx += font.getKerning(ch, txt.charAt(n + 1));\n            }\n            else\n                tx += font.MISSING_HORZ;\n        }\n        const mscale = size * font.INV_UNITS_PER_EM;\n        if (direction == 0) {\n            this.updateBounds(x + bx + x1 * mscale, y + by + y1 * mscale);\n            this.updateBounds(x + bx + x2 * mscale, y + by + y2 * mscale);\n        }\n        else {\n            let rx1 = x1 * mscale, ry1 = y1 * mscale;\n            let rx2 = x2 * mscale, ry2 = y2 * mscale;\n            this.updateBounds(x + bx + rx1 * cosTheta - ry1 * sinTheta, y + by + rx1 * sinTheta + ry1 * cosTheta);\n            this.updateBounds(x + bx + rx2 * cosTheta - ry1 * sinTheta, y + by + rx2 * sinTheta + ry1 * cosTheta);\n            this.updateBounds(x + bx + rx2 * cosTheta - ry2 * sinTheta, y + by + rx2 * sinTheta + ry2 * cosTheta);\n            this.updateBounds(x + bx + rx1 * cosTheta - ry2 * sinTheta, y + by + rx1 * sinTheta + ry2 * cosTheta);\n        }\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Text, size, colour });\n        this.prims.push({ primClass: PrimClass.Text, typeidx, x: x + bx, y: y + by, txt, direction });\n    }\n    drawTextNative(x, y, txt, fontFamily, fontSize, colour, align, opt) {\n        if (!opt)\n            opt = {};\n        if (align == null)\n            align = TextAlign.Left | TextAlign.Baseline;\n        const font = FontData.main;\n        let metrics = font.measureTextNative(txt, fontFamily, fontSize, opt);\n        if ((align & TextAlign.Left) != 0) { }\n        else if ((align & TextAlign.Right) != 0)\n            x -= metrics[0];\n        else\n            x -= 0.5 * metrics[0];\n        if ((align & TextAlign.Middle) != 0)\n            y += 0.5 * metrics[1];\n        else if ((align & TextAlign.Top) != 0)\n            y += metrics[1];\n        else if ((align & TextAlign.Bottom) != 0)\n            y -= metrics[2];\n        this.updateBounds(x, y - metrics[1]);\n        this.updateBounds(x + metrics[0], y + metrics[2]);\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.TextNative, family: fontFamily, size: fontSize, colour, opt });\n        this.prims.push({ primClass: PrimClass.TextNative, typeidx, x, y, txt });\n    }\n    boundLowX() { return this.lowX; }\n    boundLowY() { return this.lowY; }\n    boundHighX() { return this.highX; }\n    boundHighY() { return this.highY; }\n    getBounds() { return new Box(this.lowX, this.lowY, this.highX - this.lowX, this.highY - this.lowY); }\n    measure() {\n        this.width = Math.ceil(this.highX - this.lowX);\n        this.height = Math.ceil(this.highY - this.lowY);\n    }\n    normalise() {\n        if (this.lowX != 0 || this.lowY != 0)\n            this.transformPrimitives(-this.lowX, -this.lowY, 1, 1);\n        this.width = Math.ceil(this.highX - this.lowX);\n        this.height = Math.ceil(this.highY - this.lowY);\n    }\n    setSize(width, height) { this.width = width; this.height = height; }\n    transformIntoBox(box) {\n        this.transformPrimitives(-this.lowX, -this.lowY, 1, 1);\n        let nw = Math.ceil(this.highX - this.lowX), nh = Math.ceil(this.highY - this.lowY);\n        let scale = 1;\n        if (nw > box.w) {\n            let mod = box.w / nw;\n            nw = box.w;\n            nh *= mod;\n            scale *= mod;\n        }\n        if (nh > box.h) {\n            let mod = box.h / nh;\n            nh = box.h;\n            nw *= mod;\n            scale *= mod;\n        }\n        let ox = 0.5 * (box.w - nw), oy = 0.5 * (box.h - nh);\n        this.transformPrimitives(box.x + ox, box.y + oy, scale, scale);\n    }\n    scaleExtent(maxWidth, maxHeight) {\n        let w = this.highX - this.lowX, h = this.highY - this.lowY;\n        if (w <= maxWidth && h <= maxHeight)\n            return;\n        let scale = Math.min(maxWidth / w, maxHeight / h);\n        this.transformPrimitives(0, 0, scale, scale);\n    }\n    transformPrimitives(ox, oy, sw, sh) {\n        if (ox == 0 && oy == 0 && sw == 1 && sh == 1)\n            return;\n        for (let a of this.prims) {\n            const type = a.primClass;\n            if (type == PrimClass.Line) {\n                let line = a;\n                line.x1 = ox + line.x1 * sw;\n                line.y1 = oy + line.y1 * sh;\n                line.x2 = ox + line.x2 * sw;\n                line.y2 = oy + line.y2 * sh;\n            }\n            else if (type == PrimClass.Rect) {\n                let rect = a;\n                rect.x = ox + rect.x * sw;\n                rect.y = oy + rect.y * sh;\n                rect.w = rect.w * sw;\n                rect.h = rect.h * sh;\n            }\n            else if (type == PrimClass.Oval) {\n                let oval = a;\n                oval.cx = ox + oval.cx * sw;\n                oval.cy = oy + oval.cy * sh;\n                oval.rw *= sw;\n                oval.rh *= sh;\n            }\n            else if (type == PrimClass.Path) {\n                let path = a;\n                let sz = path.count, px = path.x, py = path.y;\n                for (let n = 0; n < sz; n++) {\n                    px[n] = ox + px[n] * sw;\n                    py[n] = oy + py[n] * sh;\n                }\n            }\n            else if (type == PrimClass.Text || type == PrimClass.TextNative) {\n                let text = a;\n                text.x = ox + text.x * sw;\n                text.y = oy + text.y * sh;\n            }\n        }\n        let swsh = 0.5 * (sw + sh);\n        if (swsh != 1)\n            for (let t of this.types) {\n                const type = t.primClass;\n                if (type == PrimClass.Line)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Rect)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Oval)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Path)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Text)\n                    t.size *= swsh;\n                else if (type == PrimClass.TextNative)\n                    t.size *= swsh;\n            }\n        this.lowX = ox + this.lowX * sw;\n        this.lowY = oy + this.lowY * sh;\n        this.highX = ox + this.highX * sw;\n        this.highY = oy + this.highY * sh;\n    }\n    renderInto(parent) {\n        let canvas = newElement(parent, 'canvas', { 'width': this.width, 'height': this.height });\n        this.renderCanvas(canvas);\n        return canvas;\n    }\n    renderCanvas(canvas, clearFirst) {\n        let ctx = canvas.getContext('2d');\n        if (clearFirst)\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n        let w = this.width, h = this.height;\n        this.density = pixelDensity();\n        canvas.style.width = w + 'px';\n        canvas.style.height = h + 'px';\n        canvas.width = w * this.density;\n        canvas.height = h * this.density;\n        this.renderContext(ctx);\n    }\n    renderContext(ctx) {\n        ctx.save();\n        ctx.scale(this.density, this.density);\n        this.typeObj = [];\n        for (let n = 0; n < this.types.length; n++) {\n            let t = this.types[n];\n            if (t.primClass == PrimClass.Line)\n                this.typeObj[n] = this.setupTypeLine(t);\n            else if (t.primClass == PrimClass.Rect)\n                this.typeObj[n] = this.setupTypeRect(t);\n            else if (t.primClass == PrimClass.Oval)\n                this.typeObj[n] = this.setupTypeOval(t);\n            else if (t.primClass == PrimClass.Path)\n                this.typeObj[n] = this.setupTypePath(t);\n            else if (t.primClass == PrimClass.Text)\n                this.typeObj[n] = this.setupTypeText(t);\n            else if (t.primClass == PrimClass.TextNative)\n                this.typeObj[n] = this.setupTypeTextNative(t);\n        }\n        for (let n = 0; n < this.prims.length; n++) {\n            let p = this.prims[n];\n            if (p.primClass == PrimClass.Line)\n                this.renderLine(ctx, p);\n            else if (p.primClass == PrimClass.Rect)\n                this.renderRect(ctx, p);\n            else if (p.primClass == PrimClass.Oval)\n                this.renderOval(ctx, p);\n            else if (p.primClass == PrimClass.Path)\n                this.renderPath(ctx, p);\n            else if (p.primClass == PrimClass.Text)\n                this.renderText(ctx, p);\n            else if (p.primClass == PrimClass.TextNative)\n                this.renderTextNative(ctx, p);\n        }\n        ctx.restore();\n    }\n    createSVG(prettyPrint = false, withXlink = false) {\n        let svg = new SpoolSVG(prettyPrint);\n        svg.start('<svg xmlns=\"http://www.w3.org/2000/svg\"');\n        if (withXlink)\n            svg.attr('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n        svg.attr('width', this.width);\n        svg.attr('height', this.height);\n        svg.attr('viewBox', `0 0 ${this.width} ${this.height}`);\n        svg.stop('>');\n        svg.inc();\n        this.renderSVG(svg, withXlink);\n        svg.dec();\n        svg.whole('</svg>');\n        return svg.toString();\n    }\n    renderSVG(svg, withXlink = false) {\n        this.typeObj = [];\n        const font = FontData.main;\n        svg.whole('<defs>');\n        svg.inc();\n        if (this.charMissing) {\n            svg.start('<path');\n            svg.attr('id', 'missing');\n            svg.attr('d', font.MISSING_DATA);\n            svg.attr('edge', 'none');\n            svg.stop('/>');\n        }\n        for (let n = 0; n < font.UNICODE.length; n++)\n            if (this.charMask[n]) {\n                svg.start('<path');\n                svg.attr('id', 'char' + n);\n                svg.attr('d', font.GLYPH_DATA[n]);\n                svg.attr('edge', 'none');\n                svg.stop('/>');\n            }\n        svg.dec();\n        svg.whole('</defs>');\n        for (let n = 0; n < this.types.length; n++) {\n            let t = this.types[n];\n            if (t.primClass == PrimClass.Line)\n                this.typeObj[n] = this.setupTypeLine(t);\n            else if (t.primClass == PrimClass.Rect)\n                this.typeObj[n] = this.setupTypeRect(t);\n            else if (t.primClass == PrimClass.Oval)\n                this.typeObj[n] = this.setupTypeOval(t);\n            else if (t.primClass == PrimClass.Path)\n                this.typeObj[n] = this.setupTypePath(t);\n            else if (t.primClass == PrimClass.Text)\n                this.typeObj[n] = this.setupTypeText(t);\n            else if (t.primClass == PrimClass.TextNative)\n                this.typeObj[n] = this.setupTypeTextNative(t);\n        }\n        for (let n = 0; n < this.prims.length;) {\n            let p = this.prims[n], num = 1;\n            if (p.primClass != PrimClass.Path && p.primClass != PrimClass.Text && p.primClass != PrimClass.TextNative) {\n                for (; n + num < this.prims.length; num++)\n                    if (this.prims[n + num].primClass != p.primClass || this.prims[n + num].typeidx != p.typeidx)\n                        break;\n            }\n            if (p.primClass == PrimClass.Line) {\n                if (num == 1)\n                    this.svgLine1(svg, p);\n                else\n                    this.svgLineN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Rect) {\n                if (num == 1)\n                    this.svgRect1(svg, p);\n                else\n                    this.svgRectN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Oval) {\n                if (num == 1)\n                    this.svgOval1(svg, p);\n                else\n                    this.svgOvalN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Path)\n                this.svgPath(svg, p);\n            else if (p.primClass == PrimClass.Text)\n                this.svgText(svg, p, withXlink);\n            else if (p.primClass == PrimClass.TextNative)\n                this.svgTextNative(svg, p);\n            n += num;\n        }\n    }\n    spool(into) {\n        for (let p of this.prims) {\n            if (p.primClass == PrimClass.Line) {\n                let { typeidx, x1, y1, x2, y2 } = p;\n                let { thickness, colour } = this.types[typeidx];\n                into.drawLine(x1, y1, x2, y2, colour, thickness);\n            }\n            else if (p.primClass == PrimClass.Rect) {\n                let { typeidx, x, y, w, h } = p;\n                let { edgeCol, fillCol, thickness } = this.types[typeidx];\n                into.drawRect(x, y, w, h, edgeCol, thickness, fillCol);\n            }\n            else if (p.primClass == PrimClass.Oval) {\n                let { typeidx, cx, cy, rw, rh } = p;\n                let { edgeCol, fillCol, thickness } = this.types[typeidx];\n                into.drawOval(cx, cy, rw, rh, edgeCol, thickness, fillCol);\n            }\n            else if (p.primClass == PrimClass.Path) {\n                let { typeidx, count, x, y, ctrl, closed } = p;\n                let { edgeCol, fillCol, thickness, hardEdge } = this.types[typeidx];\n                into.drawPath(x, y, ctrl, closed, edgeCol, thickness, fillCol, hardEdge);\n            }\n            else if (p.primClass == PrimClass.Text) {\n                let { typeidx, x, y, txt, direction } = p;\n                let { size, colour } = this.types[typeidx];\n                into.drawText(x, y, txt, size, colour, null, direction);\n            }\n            else if (p.primClass == PrimClass.TextNative) {\n                let { typeidx, x, y, txt } = p;\n                let { family, size, colour } = this.types[typeidx];\n                into.drawTextNative(x, y, txt, family, size, colour);\n            }\n        }\n    }\n    setupTypeLine(t) {\n        let thickness = t.thickness * this.scale;\n        let colour = t.colour;\n        return { primClass: t.primClass, thickness, colour };\n    }\n    setupTypeRect(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness };\n    }\n    setupTypeOval(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness };\n    }\n    setupTypePath(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        let hardEdge = t.hardEdge;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness, hardEdge };\n    }\n    setupTypeText(t) {\n        let size = t.size * this.scale;\n        let colour = t.colour;\n        return { primClass: t.primClass, colour, size };\n    }\n    setupTypeTextNative(t) {\n        let family = t.family;\n        let size = t.size * this.scale;\n        let colour = t.colour;\n        let opt = t.opt;\n        return { primClass: t.primClass, colour, family, size, opt };\n    }\n    renderLine(ctx, line) {\n        let { x1, y1, x2, y2 } = line;\n        let { colour, thickness } = this.typeObj[line.typeidx];\n        x1 = this.offsetX + this.scale * x1;\n        y1 = this.offsetY + this.scale * y1;\n        x2 = this.offsetX + this.scale * x2;\n        y2 = this.offsetY + this.scale * y2;\n        if (colour != null) {\n            ctx.beginPath();\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2);\n            ctx.strokeStyle = colourCanvas(colour);\n            ctx.lineWidth = thickness;\n            ctx.lineCap = 'round';\n            ctx.stroke();\n        }\n    }\n    renderRect(ctx, rect) {\n        let { x, y, w, h } = rect;\n        let { edgeCol, fillCol, thickness } = this.typeObj[rect.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        w *= this.scale;\n        h *= this.scale;\n        if (fillCol != MetaVector.NOCOLOUR) {\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.fillRect(x, y, w, h);\n        }\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            ctx.strokeStyle = colourCanvas(edgeCol);\n            ctx.lineWidth = thickness;\n            ctx.lineCap = 'square';\n            ctx.strokeRect(x, y, w, h);\n        }\n    }\n    renderOval(ctx, oval) {\n        let { cx, cy, rw, rh } = oval;\n        let { edgeCol, fillCol, thickness } = this.typeObj[oval.typeidx];\n        cx = this.offsetX + this.scale * cx;\n        cy = this.offsetY + this.scale * cy;\n        rw *= this.scale;\n        rh *= this.scale;\n        if (fillCol != MetaVector.NOCOLOUR) {\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rw, rh, 0, 0, 2 * Math.PI, true);\n            ctx.fill();\n        }\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            ctx.strokeStyle = colourCanvas(edgeCol);\n            ctx.lineWidth = thickness;\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rw, rh, 0, 0, 2 * Math.PI, true);\n            ctx.stroke();\n        }\n    }\n    renderPath(ctx, path) {\n        let { count, x, y, ctrl, closed } = path;\n        let { edgeCol, fillCol, thickness, hardEdge } = this.typeObj[path.typeidx];\n        x = [...x];\n        y = [...y];\n        for (let n = 0; n < count; n++) {\n            x[n] = this.offsetX + this.scale * x[n];\n            y[n] = this.offsetY + this.scale * y[n];\n        }\n        for (let layer = 1; layer <= 2; layer++) {\n            if (layer == 1 && fillCol == MetaVector.NOCOLOUR)\n                continue;\n            if (layer == 2 && edgeCol == MetaVector.NOCOLOUR)\n                continue;\n            ctx.beginPath();\n            ctx.moveTo(x[0], y[0]);\n            for (let i = 1; i < count; i++) {\n                if (!ctrl || !ctrl[i]) {\n                    ctx.lineTo(x[i], y[i]);\n                }\n                else if (i < count - 1 && !ctrl[i + 1]) {\n                    ctx.quadraticCurveTo(x[i], y[i], x[i + 1], y[i + 1]);\n                    i++;\n                }\n                else if (i < count - 1 && !ctrl[i + 2]) {\n                    ctx.bezierCurveTo(x[i], y[i], x[i + 1], y[i + 1], x[i + 2], y[i + 2]);\n                    i += 2;\n                }\n            }\n            if (closed)\n                ctx.closePath();\n            if (layer == 1) {\n                ctx.fillStyle = colourCanvas(fillCol);\n                ctx.fill();\n            }\n            else {\n                ctx.strokeStyle = colourCanvas(edgeCol);\n                ctx.lineWidth = thickness;\n                ctx.lineCap = hardEdge ? 'square' : 'round';\n                ctx.lineJoin = hardEdge ? 'miter' : 'round';\n                ctx.stroke();\n            }\n        }\n    }\n    renderText(ctx, text) {\n        let { x, y, txt, direction } = text;\n        let { size, colour } = this.typeObj[text.typeidx];\n        let fill = colourCanvas(colour);\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let font = FontData.main;\n        let scale = size * this.scale / font.UNITS_PER_EM;\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            let path = null;\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                path = font.getMissingPath();\n            }\n            else\n                path = font.getGlyphPath(i);\n            if (path) {\n                ctx.save();\n                let theta = direction != 0 ? direction * DEGRAD : 0;\n                if (theta == 0)\n                    ctx.translate(x + dx * scale, y);\n                else\n                    ctx.translate(x + Math.cos(theta) * dx * scale, y + Math.sin(theta) * dx * scale);\n                ctx.scale(scale, -scale);\n                if (theta != 0)\n                    ctx.rotate(-theta);\n                ctx.fillStyle = fill;\n                ctx.fill(path);\n                ctx.restore();\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n        }\n    }\n    renderTextNative(ctx, text) {\n        let { x, y, txt } = text;\n        let { size, colour, family, opt } = this.typeObj[text.typeidx];\n        let fill = colourCanvas(colour);\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        ctx.save();\n        let pfx = '';\n        if (opt.bold)\n            pfx += 'bold ';\n        if (opt.italic)\n            pfx += 'italic ';\n        ctx.font = pfx + (size * this.scale) + 'px ' + family;\n        ctx.fillStyle = fill;\n        ctx.fillText(txt, x, y);\n        ctx.restore();\n    }\n    svgLine1(svg, line) {\n        let { x1, y1, x2, y2 } = line;\n        let { colour, thickness } = this.typeObj[line.typeidx];\n        x1 = this.offsetX + this.scale * x1;\n        y1 = this.offsetY + this.scale * y1;\n        x2 = this.offsetX + this.scale * x2;\n        y2 = this.offsetY + this.scale * y2;\n        if (colour != MetaVector.NOCOLOUR) {\n            svg.start('<line');\n            svg.attr('x1', x1);\n            svg.attr('y1', y1);\n            svg.attr('x2', x2);\n            svg.attr('y2', y2);\n            this.defineSVGStroke(svg, colour);\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'round');\n            svg.stop('/>');\n        }\n    }\n    svgLineN(svg, lines) {\n        let { colour, thickness } = this.typeObj[lines[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, colour);\n        svg.attr('stroke-width', thickness);\n        svg.attr('stroke-linecap', 'round');\n        svg.stop('>');\n        svg.inc();\n        for (let line of lines) {\n            let { x1, y1, x2, y2 } = line;\n            x1 = this.offsetX + this.scale * x1;\n            y1 = this.offsetY + this.scale * y1;\n            x2 = this.offsetX + this.scale * x2;\n            y2 = this.offsetY + this.scale * y2;\n            svg.start('<line');\n            svg.attr('x1', x1);\n            svg.attr('y1', y1);\n            svg.attr('x2', x2);\n            svg.attr('y2', y2);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgRect1(svg, rect) {\n        let { x, y, w, h } = rect;\n        let { edgeCol, fillCol, thickness } = this.typeObj[rect.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        w *= this.scale;\n        h *= this.scale;\n        svg.start('<rect');\n        svg.attr('x', x);\n        svg.attr('y', y);\n        svg.attr('width', w);\n        svg.attr('height', h);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'square');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgRectN(svg, rects) {\n        let { edgeCol, fillCol, thickness } = this.typeObj[rects[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'square');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('>');\n        svg.inc();\n        for (let rect of rects) {\n            let { x, y, w, h } = rect;\n            x = this.offsetX + this.scale * x;\n            y = this.offsetY + this.scale * y;\n            w *= this.scale;\n            h *= this.scale;\n            svg.start('<rect');\n            svg.attr('x', x);\n            svg.attr('y', y);\n            svg.attr('width', w);\n            svg.attr('height', h);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgOval1(svg, oval) {\n        let { cx, cy, rw, rh } = oval;\n        let { edgeCol, fillCol, thickness } = this.typeObj[oval.typeidx];\n        cx = this.offsetX + this.scale * cx;\n        cy = this.offsetY + this.scale * cy;\n        rw *= this.scale;\n        rh *= this.scale;\n        svg.start('<ellipse');\n        svg.attr('cx', cx);\n        svg.attr('cy', cy);\n        svg.attr('rx', rw);\n        svg.attr('ry', rh);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgOvalN(svg, ovals) {\n        let { edgeCol, fillCol, thickness } = this.typeObj[ovals[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('>');\n        svg.inc();\n        for (let oval of ovals) {\n            let { cx, cy, rw, rh } = oval;\n            cx = this.offsetX + this.scale * cx;\n            cy = this.offsetY + this.scale * cy;\n            rw *= this.scale;\n            rh *= this.scale;\n            svg.start('<ellipse');\n            svg.attr('cx', cx);\n            svg.attr('cy', cy);\n            svg.attr('rx', rw);\n            svg.attr('ry', rh);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgPath(svg, path) {\n        let { count, x, y, ctrl, closed } = path;\n        let { edgeCol, fillCol, thickness, hardEdge } = this.typeObj[path.typeidx];\n        x = [...x];\n        y = [...y];\n        for (let n = 0; n < count; n++) {\n            x[n] = this.offsetX + this.scale * x[n];\n            y[n] = this.offsetY + this.scale * y[n];\n        }\n        let shape = 'M ' + x[0] + ' ' + y[0];\n        let n = 1;\n        while (n < count) {\n            if (!ctrl || !ctrl[n]) {\n                shape += ' L ' + x[n] + ' ' + y[n];\n                n++;\n            }\n            else if (ctrl[n] && n < count - 1 && !ctrl[n + 1]) {\n                shape += ' Q ' + x[n] + ' ' + y[n] + ' ' + x[n + 1] + ' ' + y[n + 1];\n                n += 2;\n            }\n            else if (ctrl[n] && n < count - 2 && ctrl[n + 1] && !ctrl[n + 2]) {\n                shape += ' C ' + x[n] + ' ' + y[n] + ' ' + x[n + 1] + ' ' + y[n + 1] + ' ' + x[n + 2] + ' ' + y[n + 2];\n                n += 3;\n            }\n            else\n                n++;\n        }\n        if (closed)\n            shape += ' Z';\n        svg.start('<path');\n        svg.attr('d', shape);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linejoin', hardEdge ? 'miter' : 'round');\n            svg.attr('stroke-linecap', hardEdge ? 'square' : 'round');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgText(svg, text, withXlink = true) {\n        let { x, y, txt, direction } = text;\n        let { size, colour } = this.typeObj[text.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let font = FontData.main;\n        let scale = size * this.scale / font.UNITS_PER_EM;\n        if (direction != 0) {\n            svg.start('<g');\n            svg.attr('transform', `rotate(${direction},${x},${y})`);\n            svg.stop('>');\n            svg.inc();\n        }\n        svg.start('<g');\n        svg.attr('transform', 'translate(' + x + ',' + y + ')');\n        this.defineSVGFill(svg, colour);\n        svg.stop('>');\n        svg.inc();\n        svg.start('<g');\n        svg.attr('transform', 'scale(' + scale + ',' + (-scale) + ')');\n        svg.stop('>');\n        svg.inc();\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            svg.start('<use');\n            let ref = i < 0 ? '#missing' : '#char' + i;\n            if (withXlink)\n                svg.attr('xlink:href', ref);\n            else\n                svg.attr('href', ref);\n            svg.attr('x', dx);\n            svg.stop('/>');\n            if (i >= 0) {\n                dx += font.HORIZ_ADV_X[i];\n                if (n < txt.length - 1)\n                    dx += font.getKerning(ch, txt.charAt(n + 1));\n            }\n            else\n                dx += font.MISSING_HORZ;\n        }\n        svg.dec();\n        svg.whole('</g>');\n        svg.dec();\n        svg.whole('</g>');\n        if (direction != 0) {\n            svg.dec();\n            svg.whole('</g>');\n        }\n    }\n    svgTextNative(svg, text) {\n        let { x, y, txt } = text;\n        let { size, colour, family, opt } = this.typeObj[text.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let fill = colourCanvas(colour);\n        let style = `fill: ${fill}; font-family: ${family}; font-size: ${size * this.scale};`;\n        if (opt.bold)\n            style += ' font-weight: bold;';\n        if (opt.italic)\n            style += ' font-style: italic;';\n        const escapeXML = (str) => {\n            return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\n        };\n        svg.start('<text');\n        svg.attr('xml:space', 'preserve');\n        svg.attr('x', x);\n        svg.attr('y', y);\n        svg.attr('style', style);\n        svg.stop('>' + escapeXML(txt) + '</text>');\n    }\n    defineSVGStroke(svg, col) {\n        if (col == MetaVector.NOCOLOUR) {\n            svg.attr('stroke-opacity', '0');\n            return;\n        }\n        svg.attr('stroke', colourCode(col));\n        let alpha = colourAlpha(col);\n        if (alpha != 1)\n            svg.attr('stroke-opacity', alpha);\n    }\n    defineSVGFill(svg, col) {\n        if (col == MetaVector.NOCOLOUR) {\n            svg.attr('fill-opacity', '0');\n            return;\n        }\n        svg.attr('fill', colourCode(col));\n        let alpha = colourAlpha(col);\n        if (alpha != 1)\n            svg.attr('fill-opacity', alpha);\n    }\n    findOrCreateType(typeDef) {\n        for (let n = 0; n < this.types.length; n++) {\n            if (this.types[n].primClass != typeDef.primClass)\n                continue;\n            let keys = Object.keys(typeDef);\n            let match = keys.every((k) => typeDef[k] == this.types[n][k]);\n            if (match)\n                return n;\n        }\n        this.types.push(typeDef);\n        return this.types.length - 1;\n    }\n    updateBounds(x, y) {\n        if (this.lowX == null) {\n            this.lowX = x;\n            this.lowY = y;\n            this.highX = x;\n            this.highY = y;\n            return;\n        }\n        this.lowX = Math.min(this.lowX, x);\n        this.lowY = Math.min(this.lowY, y);\n        this.highX = Math.max(this.highX, x);\n        this.highY = Math.max(this.highY, y);\n    }\n}\nMetaVector.NOCOLOUR = -1;\nexport { MetaVector };\n//# sourceMappingURL=MetaVector.js.map","import { FontData } from '../gfx/FontData';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { dom } from '../util/dom';\nimport { Theme } from '../util/Theme';\nimport { colourCanvas, eventCoords, newElement, pathRoundedRect, pixelDensity, setBoundaryPixels } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Widget } from './Widget';\nexport var ButtonViewPosition;\n(function (ButtonViewPosition) {\n    ButtonViewPosition[ButtonViewPosition[\"Left\"] = 0] = \"Left\";\n    ButtonViewPosition[ButtonViewPosition[\"Right\"] = 1] = \"Right\";\n    ButtonViewPosition[ButtonViewPosition[\"Top\"] = 2] = \"Top\";\n    ButtonViewPosition[ButtonViewPosition[\"Bottom\"] = 3] = \"Bottom\";\n    ButtonViewPosition[ButtonViewPosition[\"Centre\"] = 4] = \"Centre\";\n})(ButtonViewPosition || (ButtonViewPosition = {}));\nexport class ButtonView extends Widget {\n    constructor(position, parentX, parentY, parentWidth, parentHeight) {\n        super();\n        this.position = position;\n        this.parentX = parentX;\n        this.parentY = parentY;\n        this.parentWidth = parentWidth;\n        this.parentHeight = parentHeight;\n        this.idealSize = 50;\n        this.width = 0;\n        this.height = 0;\n        this.selectedButton = null;\n        this.highlightButton = null;\n        this.maxButtonColumns = 0;\n        this.maxButtonRows = 0;\n        this.border = 0x808080;\n        this.background = 0xFFFFFF;\n        this.buttonColNorm1 = 0x47D5D2;\n        this.buttonColNorm2 = 0x008FD1;\n        this.buttonColActv1 = 0x30FF69;\n        this.buttonColActv2 = 0x008650;\n        this.buttonColSel1 = 0xFFFFFF;\n        this.buttonColSel2 = 0xE0E0E0;\n        this.canvas = null;\n        this.stack = [];\n        this.display = [];\n        this.hasBigButtons = true;\n        this.prefabImgSize = 44;\n        this.gripHeight = 30;\n        this.gripWidth = 50;\n        this.isRaised = true;\n        this.outPadding = 2;\n        this.inPadding = 2;\n        this.x = 0;\n        this.y = 0;\n        this.isMacLike = false;\n        this.isMacLike = !!navigator.platform.match(/(Mac|iPhone|iPod|iPad)/i);\n    }\n    setParentSize(width, height) {\n        this.parentWidth = width;\n        this.parentHeight = height;\n        if (this.contentDOM) {\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    get topBank() {\n        return this.stack.length > 0 ? this.stack[this.stack.length - 1] : null;\n    }\n    get stackSize() { return this.stack.length; }\n    render(parent) {\n        super.render(parent);\n        this.contentDOM.css({ 'position': 'absolute', 'width': `${this.width}px`, 'height': `${this.height}px` });\n        this.contentDOM.addClass('no_selection');\n        this.layoutButtons();\n        let canvasStyle = 'position: absolute; left: 0; top: 0;';\n        canvasStyle += 'pointer-events: none;';\n        this.canvas = newElement(this.contentDOM.el, 'canvas', { 'width': this.width, 'height': this.height, 'style': canvasStyle });\n        this.canvas.style.width = this.width + 'px';\n        this.canvas.style.height = this.height + 'px';\n        this.applyOffset();\n        this.redraw();\n        this.contentDOM.onClick((event) => this.mouseClick(event));\n        this.contentDOM.onDblClick((event) => this.mouseDoubleClick(event));\n        this.contentDOM.onMouseDown((event) => { event.preventDefault(); this.mouseDown(event); });\n        this.contentDOM.onMouseUp((event) => this.mouseUp(event));\n        this.contentDOM.onMouseOver((event) => this.mouseOver(event));\n        this.contentDOM.onMouseLeave((event) => this.mouseOut(event));\n        this.contentDOM.onMouseMove((event) => this.mouseMove(event));\n    }\n    pushBank(bank) {\n        bank.buttonView = this;\n        bank.isSubLevel = this.stack.length > 0;\n        bank.init();\n        this.stack.push(bank);\n        if (this.canvas != null) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    popBank() {\n        if (this.stack.length == 0)\n            return;\n        Vec.last(this.stack).bankClosed();\n        this.stack.length--;\n        if (this.canvas != null) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    refreshBank() {\n        if (this.canvas != null) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    getSelectedButton() {\n        return this.selectedButton;\n    }\n    setSelectedButton(id) {\n        if (id != this.selectedButton) {\n            this.selectedButton = id;\n            this.redraw();\n        }\n    }\n    cycleSelected(dir) {\n        let sorted = this.display.filter((s) => s.id != '*');\n        sorted.sort((d1, d2) => (d1.y * 10000 + d1.x) - (d2.y * 10000 + d2.x));\n        let idx = 0, sz = sorted.length;\n        for (let n = 0; n < sz; n++)\n            if (sorted[n].id == this.selectedButton) {\n                idx = n;\n                break;\n            }\n        this.selectedButton = sorted[(idx + dir + sz) % sz].id;\n        this.redraw();\n    }\n    raiseBank() {\n        if (this.isRaised)\n            return;\n        this.isRaised = true;\n        if (this.contentDOM) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    lowerBank() {\n        if (!this.isRaised)\n            return;\n        this.isRaised = false;\n        if (this.contentDOM) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    getHasBigButtons() {\n        return this.hasBigButtons;\n    }\n    setHasBigButtons(flag) {\n        this.hasBigButtons = flag;\n        this.prefabImgSize = flag ? 44 : 36;\n        this.idealSize = flag ? 50 : 40;\n    }\n    withinOutline(x, y) {\n        let w = this.width, h = this.height;\n        if (x < 0 || x > w || y < 0 || y > h)\n            return false;\n        if (this.position == ButtonViewPosition.Centre || this.stack.length == 0)\n            return true;\n        if (this.position == ButtonViewPosition.Left) {\n            let my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n            return x < w - gw || (y > my - hg && y < my + hg);\n        }\n        else if (this.position == ButtonViewPosition.Right) {\n            let my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n            return x > gw || (y > my - hg && y < my + hg);\n        }\n        else if (this.position == ButtonViewPosition.Top) {\n            let mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n            return y < h - gh || (x > mx - hg && x < mx + hg);\n        }\n        else if (this.position == ButtonViewPosition.Bottom) {\n            let mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n            return y > gh || (x > mx - hg && x < mx + hg);\n        }\n        return true;\n    }\n    gripSize() {\n        return this.gripHeight;\n    }\n    sizeForButtons(nbtn) {\n        return this.idealSize * nbtn + this.inPadding * (nbtn - 1) + 2 * this.outPadding;\n    }\n    layoutButtons() {\n        if (this.contentDOM == null)\n            return;\n        let outPadding = this.outPadding, inPadding = this.inPadding;\n        this.removeDisplayButtons();\n        if (this.stack.length == 0) {\n            this.width = 10;\n            this.height = 10;\n            if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n                this.height = this.parentHeight;\n            else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n                this.width = this.parentWidth;\n            return;\n        }\n        if (!this.isRaised) {\n            if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) {\n                this.width = this.gripHeight;\n                this.height = this.gripWidth + 2 * outPadding;\n            }\n            else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) {\n                this.width = this.gripWidth + 2 * outPadding;\n                this.height = this.gripHeight;\n            }\n            this.addGripButton();\n            return;\n        }\n        let bank = this.stack[this.stack.length - 1];\n        bank.buttons = [];\n        bank.update();\n        let popWidth = 0, popHeight = 0;\n        if (this.stack.length == 1) { }\n        else if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n            popHeight = this.gripHeight + inPadding;\n        else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n            popWidth = this.gripHeight + inPadding;\n        let bestLayout = null, bestScore = null;\n        if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) {\n            let maxSlotHeight = Math.floor((this.parentHeight - 2 * outPadding - inPadding) / (this.idealSize + inPadding));\n            let minSlotHeight = Math.ceil(0.5 * maxSlotHeight);\n            for (let i = maxSlotHeight; i >= minSlotHeight; i--) {\n                let slotWidth = Math.ceil(bank.buttons.length / i);\n                for (let j = slotWidth; j <= slotWidth + 1; j++) {\n                    let layout = this.layoutMaxHeight(bank, i, j);\n                    let score = this.scoreLayout(layout) + 1 * layout[0].length;\n                    if (bestLayout == null || score < bestScore) {\n                        bestLayout = layout;\n                        bestScore = score;\n                    }\n                }\n            }\n        }\n        else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) {\n            let maxSlotWidth = Math.floor((this.parentWidth - 2 * outPadding - inPadding - popWidth) / (this.idealSize + inPadding));\n            let minSlotWidth = Math.ceil(0.5 * maxSlotWidth);\n            for (let n = maxSlotWidth; n >= minSlotWidth; n--) {\n                let layout = this.layoutMaxWidth(bank, n);\n                let score = this.scoreLayout(layout) + 1 * layout.length;\n                if (bestLayout == null || score < bestScore) {\n                    bestLayout = layout;\n                    bestScore = score;\n                }\n            }\n        }\n        else {\n        }\n        let ncols = bestLayout[0].length, nrows = bestLayout.length;\n        this.width = 2 * outPadding + inPadding + (this.idealSize + inPadding) * ncols + popWidth;\n        this.height = 2 * outPadding + inPadding + (this.idealSize + inPadding) * nrows + popHeight;\n        if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n            this.width += this.gripHeight;\n        else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n            this.height += this.gripHeight;\n        this.addGripButton();\n        if (popWidth > 0 || popHeight > 0) {\n            let d = {\n                id: '!',\n                x: outPadding + inPadding,\n                y: outPadding + inPadding,\n                width: popWidth - inPadding,\n                height: popHeight - inPadding\n            };\n            if (this.position == ButtonViewPosition.Right)\n                d.x += this.gripHeight;\n            else if (this.position == ButtonViewPosition.Bottom)\n                d.y += this.gripHeight;\n            if (popWidth == 0)\n                d.width = ncols * this.idealSize + inPadding * (ncols - 1);\n            if (popHeight == 0)\n                d.height = nrows * this.idealSize + inPadding * (nrows - 1);\n            this.display.push(d);\n        }\n        for (let y = 0; y < nrows; y++)\n            for (let x = 0; x < ncols; x++) {\n                for (let n = 0; n < bank.buttons.length; n++)\n                    if (bestLayout[y][x] == bank.buttons[n].id) {\n                        let b = bank.buttons[n], d = { id: b.id };\n                        d.x = outPadding + inPadding + popWidth + (this.idealSize + inPadding) * x;\n                        d.y = outPadding + inPadding + popHeight + (this.idealSize + inPadding) * y;\n                        if (this.position == ButtonViewPosition.Right)\n                            d.x += this.gripHeight;\n                        else if (this.position == ButtonViewPosition.Bottom)\n                            d.y += this.gripHeight;\n                        d.width = this.idealSize;\n                        d.height = this.idealSize;\n                        this.display.push(d);\n                    }\n            }\n    }\n    addGripButton() {\n        if (this.position == ButtonViewPosition.Centre)\n            return;\n        let d = { id: '*' }, spc = 3;\n        if (this.position == ButtonViewPosition.Left) {\n            d.width = this.gripHeight - spc;\n            d.height = this.gripWidth - 2 * spc;\n            d.x = this.width - d.width - spc - 1;\n            d.y = 0.5 * (this.height - d.height);\n        }\n        else if (this.position == ButtonViewPosition.Right) {\n            d.width = this.gripHeight - spc;\n            d.height = this.gripWidth - 2 * spc;\n            d.x = spc + 1;\n            d.y = 0.5 * (this.height - d.height);\n        }\n        else if (this.position == ButtonViewPosition.Top) {\n            d.width = this.gripWidth - 2 * spc;\n            d.height = this.gripHeight - spc;\n            d.x = 0.5 * (this.width - d.width);\n            d.y = this.height - d.height - spc - 1;\n        }\n        else if (this.position == ButtonViewPosition.Bottom) {\n            d.width = this.gripWidth - 2 * spc;\n            d.height = this.gripHeight - spc;\n            d.x = 0.5 * (this.width - d.width);\n            d.y = spc + 1;\n        }\n        this.display.push(d);\n    }\n    replaceCanvas() {\n        this.contentDOM.empty();\n        for (let n = 0; n < this.display.length; n++) {\n            this.display[n].imgDOM = null;\n            this.display[n].helpSpan = null;\n        }\n        let canvasStyle = 'position: absolute; left: 0; top: 0;';\n        canvasStyle += 'pointer-events: none;';\n        this.canvas = newElement(this.contentDOM.el, 'canvas', { 'width': this.width, 'height': this.height, 'style': canvasStyle });\n    }\n    removeDisplayButtons() {\n        this.contentDOM.empty();\n        this.display = [];\n    }\n    applyOffset() {\n        let x, y;\n        if (this.position == ButtonViewPosition.Left) {\n            x = 0;\n            y = 0.5 * (this.parentHeight - this.height);\n        }\n        else if (this.position == ButtonViewPosition.Right) {\n            x = this.parentWidth - this.width;\n            y = 0.5 * (this.parentHeight - this.height);\n        }\n        else if (this.position == ButtonViewPosition.Top) {\n            x = 0.5 * (this.parentWidth - this.width);\n            y = 0;\n        }\n        else if (this.position == ButtonViewPosition.Bottom) {\n            x = 0.5 * (this.parentWidth - this.width);\n            y = this.parentHeight - this.height;\n        }\n        else {\n            x = 0.5 * (this.parentWidth - this.width);\n            y = 0.5 * (this.parentHeight - this.height);\n        }\n        this.x = this.parentX + x;\n        this.y = this.parentY + y;\n        this.contentDOM.css({ 'position': 'absolute' });\n        setBoundaryPixels(this.contentDOM, this.x, this.y, this.width, this.height);\n    }\n    redraw() {\n        if (!this.contentDOM || !this.canvas)\n            return;\n        let density = pixelDensity();\n        this.canvas.width = this.width * density;\n        this.canvas.height = this.height * density;\n        this.canvas.style.width = this.width + 'px';\n        this.canvas.style.height = this.height + 'px';\n        let ctx = this.canvas.getContext('2d');\n        ctx.save();\n        ctx.scale(density, density);\n        ctx.clearRect(0, 0, this.width, this.height);\n        let path = this.traceOutline();\n        ctx.fillStyle = colourCanvas(this.background);\n        ctx.fill(path);\n        ctx.strokeStyle = colourCanvas(this.border);\n        ctx.lineWidth = 1;\n        ctx.stroke(path);\n        let bank = this.stack.length > 0 ? this.stack[this.stack.length - 1] : null;\n        this.contentDOM.css({ 'width': this.width + 'px', 'height': this.height + 'px' });\n        for (let n = 0; n < this.display.length; n++) {\n            const d = this.display[n], b = this.buttonFromID(d.id);\n            let col1, col2;\n            if (this.highlightButton != null && d.id == this.highlightButton) {\n                col1 = this.buttonColActv1;\n                col2 = this.buttonColActv2;\n            }\n            else if (this.selectedButton != null && d.id == this.selectedButton) {\n                col1 = this.buttonColSel1;\n                col2 = this.buttonColSel2;\n            }\n            else {\n                col1 = this.buttonColNorm1;\n                col2 = this.buttonColNorm2;\n            }\n            ctx.save();\n            path = pathRoundedRect(d.x + 0.5, d.y + 0.5, d.x + d.width - 1, d.y + d.height - 1, 5);\n            if (col2 != null) {\n                let grad = ctx.createLinearGradient(d.x, d.y, d.x + d.width, d.y + d.height);\n                grad.addColorStop(0, colourCanvas(col1));\n                grad.addColorStop(1, colourCanvas(col2));\n                ctx.fillStyle = grad;\n            }\n            else\n                ctx.fillStyle = colourCanvas(col1);\n            ctx.fill(path);\n            ctx.strokeStyle = colourCanvas(this.border);\n            ctx.lineWidth = 0.5;\n            ctx.stroke(path);\n            ctx.restore();\n            if (d.imgDOM != null) {\n                d.imgDOM.remove();\n                d.imgDOM = null;\n            }\n            if (b != null) {\n                if (d.helpSpan == null) {\n                    d.helpSpan = dom('<span style=\"position: absolute;\"/>').appendTo(this.contentDOM);\n                    let txt = b.helpText;\n                    if (b.mnemonic) {\n                        while (txt.endsWith('.'))\n                            txt = txt.substring(0, txt.length - 1);\n                        let keyText = b.mnemonic;\n                        let match = keyText.match(/^(.*)CmdOrCtrl(.*)$/);\n                        if (match)\n                            keyText = match[1] + (this.isMacLike ? 'Cmd' : 'Ctrl') + match[2];\n                        txt += ' [' + keyText + ']';\n                    }\n                    this.addTooltip(d.helpSpan.el.outerHTML, txt);\n                }\n                setBoundaryPixels(d.helpSpan, d.x, d.y, d.width, d.height);\n            }\n            if (b == null) { }\n            else if (b.imageFN != null && d.imgDOM == null) {\n                d.imgDOM = dom('<img/>').appendTo(this.contentDOM).css({ 'position': 'absolute', 'pointer-events': 'none' });\n                d.imgDOM.setAttr('src', Theme.RESOURCE_URL + '/img/actions/' + b.imageFN + '.svg');\n                const sz = this.prefabImgSize;\n                const bx = d.x + Math.floor(0.5 * (d.width - sz));\n                const by = d.y + Math.floor(0.5 * (d.height - sz));\n                setBoundaryPixels(d.imgDOM, bx, by, sz, sz);\n            }\n            else if (b.metavec != null) {\n                let draw = b.metavec instanceof MetaVector ? b.metavec : new MetaVector(b.metavec);\n                draw.offsetX = d.x + Math.floor(0.5 * (d.width - draw.width));\n                draw.offsetY = d.y + Math.floor(0.5 * (d.height - draw.height));\n                draw.renderContext(ctx);\n            }\n            else if (b.text != null) {\n                let sz = this.idealSize;\n                let draw = new MetaVector({ 'size': [sz, sz] });\n                let fsz = sz * 0.6;\n                let wad = FontData.main.measureText(b.text, fsz);\n                if (wad[1] + wad[2] > sz) {\n                    fsz *= sz / (wad[1] + wad[2]);\n                    wad = FontData.main.measureText(b.text, fsz);\n                }\n                if (wad[0] > sz) {\n                    fsz *= sz / wad[0];\n                    wad = FontData.main.measureText(b.text, fsz);\n                }\n                let x = 0.5 * (sz - wad[0]), y = 0.5 * (sz + wad[1]);\n                draw.drawText(x - 1, y, b.text, fsz, 0x000000);\n                draw.drawText(x + 1, y, b.text, fsz, 0x000000);\n                draw.drawText(x, y - 1, b.text, fsz, 0x000000);\n                draw.drawText(x, y + 1, b.text, fsz, 0x000000);\n                draw.drawText(x, y, b.text, fsz, 0xFFFFFF);\n                draw.offsetX = d.x + Math.floor(0.5 * (d.width - draw.width));\n                draw.offsetY = d.y + Math.floor(0.5 * (d.height - draw.height));\n                draw.renderContext(ctx);\n            }\n            if (b != null && b.isSubMenu) {\n                ctx.save();\n                let sx = d.x + d.width - 3, sy = d.y + d.height - 3;\n                ctx.beginPath();\n                ctx.moveTo(sx, sy);\n                ctx.lineTo(sx - 6, sy);\n                ctx.lineTo(sx, sy - 6);\n                ctx.closePath();\n                ctx.fillStyle = 'black';\n                ctx.fill();\n                ctx.restore();\n            }\n            if (d.id == '*') {\n                ctx.save();\n                path = new Path2D();\n                let px, py, flip = this.isRaised;\n                if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) {\n                    px = [0.2, 0.7, 0.7];\n                    py = [0.5, 0.3, 0.7];\n                    if (this.position == ButtonViewPosition.Left)\n                        flip = !flip;\n                }\n                else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) {\n                    px = [0.5, 0.3, 0.7];\n                    py = [0.2, 0.7, 0.7];\n                    if (this.position == ButtonViewPosition.Top)\n                        flip = !flip;\n                }\n                if (flip) {\n                    px = [1 - px[0], 1 - px[1], 1 - px[2]];\n                    py = [1 - py[0], 1 - py[1], 1 - py[2]];\n                }\n                path.moveTo(d.x + d.width * px[0], d.y + d.height * py[0]);\n                path.lineTo(d.x + d.width * px[1], d.y + d.height * py[1]);\n                path.lineTo(d.x + d.width * px[2], d.y + d.height * py[2]);\n                path.closePath();\n                ctx.fillStyle = 'white';\n                ctx.strokeStyle = 'black';\n                ctx.lineWidth = 0;\n                ctx.fill(path);\n                ctx.stroke(path);\n                ctx.restore();\n            }\n            else if (d.id == '!') {\n                ctx.save();\n                let path1 = new Path2D(), path2 = new Path2D();\n                let inset = 5;\n                let w = d.width - inset * 2, h = d.height - inset * 2;\n                for (let z = 5; z < w + h - 1; z += 12) {\n                    let x1 = 0, y1 = z, x2 = z, y2 = 0;\n                    if (y1 > h) {\n                        let delta = y1 - h;\n                        x1 += delta;\n                        y1 -= delta;\n                    }\n                    if (x2 > w) {\n                        let delta = x2 - w;\n                        x2 -= delta;\n                        y2 += delta;\n                    }\n                    path1.moveTo(d.x + inset + x1, d.y + inset + y1);\n                    path1.lineTo(d.x + inset + x2, d.y + inset + y2);\n                    path2.moveTo(d.x + inset + x1 + 1, d.y + inset + y1);\n                    path2.lineTo(d.x + inset + x2 + 1, d.y + inset + y2);\n                }\n                ctx.lineWidth = 1;\n                ctx.strokeStyle = '#404040';\n                ctx.stroke(path1);\n                ctx.strokeStyle = 'white';\n                ctx.stroke(path2);\n                ctx.restore();\n            }\n        }\n        ctx.restore();\n    }\n    delayedRedraw() {\n        window.setTimeout(() => this.redraw(), 100);\n    }\n    buttonFromID(id) {\n        let bank = this.stack[this.stack.length - 1];\n        for (let n = 0; n < bank.buttons.length; n++)\n            if (bank.buttons[n].id == id)\n                return bank.buttons[n];\n        return null;\n    }\n    displayFromID(id) {\n        for (let n = 0; n < this.display.length; n++)\n            if (this.display[n].id == id)\n                return this.display[n];\n        return null;\n    }\n    traceOutline() {\n        let w = this.width, h = this.height, uw = w - 1, uh = h - 1, r = 8;\n        if (this.position == ButtonViewPosition.Centre || this.stack.length == 0)\n            return pathRoundedRect(0.5, 0.5, w - 0.5, h - 0.5, r);\n        let path = new Path2D();\n        if (this.position == ButtonViewPosition.Left) {\n            let my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n            path.moveTo(0.5, 0.5);\n            path.lineTo(0.5 + uw - gw - r, 0.5);\n            path.bezierCurveTo(0.5 + uw - gw, 0.5, 0.5 + uw - gw, 0.5, 0.5 + uw - gw, 0.5 + r);\n            path.lineTo(0.5 + uw - gw, 0.5 + my - hg);\n            path.lineTo(0.5 + uw - r, 0.5 + my - hg);\n            path.bezierCurveTo(0.5 + uw, 0.5 + my - hg, 0.5 + uw, 0.5 + my - hg, 0.5 + uw, 0.5 + my - hg + r);\n            path.lineTo(0.5 + uw, 0.5 + my + hg - r);\n            path.bezierCurveTo(0.5 + uw, 0.5 + my + hg, 0.5 + uw, 0.5 + my + hg, 0.5 + uw - r, 0.5 + my + hg);\n            path.lineTo(0.5 + uw - gw, 0.5 + my + hg);\n            path.lineTo(0.5 + uw - gw, 0.5 + uh - r);\n            path.bezierCurveTo(0.5 + uw - gw, 0.5 + uh, 0.5 + uw - gw, 0.5 + uh, 0.5 + uw - gw - r, 0.5 + uh);\n            path.lineTo(0.5, 0.5 + uh);\n        }\n        else if (this.position == ButtonViewPosition.Right) {\n            let my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n            path.moveTo(w - 0.5, 0.5);\n            path.lineTo(w - (0.5 + uw - gw - r), 0.5);\n            path.bezierCurveTo(w - (0.5 + uw - gw), 0.5, w - (0.5 + uw - gw), 0.5, w - (0.5 + uw - gw), 0.5 + r);\n            path.lineTo(w - (0.5 + uw - gw), 0.5 + my - hg);\n            path.lineTo(w - (0.5 + uw - r), 0.5 + my - hg);\n            path.bezierCurveTo(w - (0.5 + uw), 0.5 + my - hg, w - (0.5 + uw), 0.5 + my - hg, w - (0.5 + uw), 0.5 + my - hg + r);\n            path.lineTo(w - (0.5 + uw), 0.5 + my + hg - r);\n            path.bezierCurveTo(w - (0.5 + uw), 0.5 + my + hg, w - (0.5 + uw), 0.5 + my + hg, w - (0.5 + uw - r), 0.5 + my + hg);\n            path.lineTo(w - (0.5 + uw - gw), 0.5 + my + hg);\n            path.lineTo(w - (0.5 + uw - gw), 0.5 + uh - r);\n            path.bezierCurveTo(w - (0.5 + uw - gw), 0.5 + uh, w - (0.5 + uw - gw), 0.5 + uh, w - (0.5 + uw - gw - r), 0.5 + uh);\n            path.lineTo(w - 0.5, 0.5 + uh);\n        }\n        else if (this.position == ButtonViewPosition.Top) {\n            let mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n            path.moveTo(0.5, h - (0.5 + uh));\n            path.lineTo(0.5, h - (0.5 + gh + r));\n            path.bezierCurveTo(0.5, h - (0.5 + gh), 0.5, h - (0.5 + gh), 0.5 + r, h - (0.5 + gh));\n            path.lineTo(0.5 + mx - hg, h - (0.5 + gh));\n            path.lineTo(0.5 + mx - hg, h - (0.5 + r));\n            path.bezierCurveTo(0.5 + mx - hg, h - 0.5, 0.5 + mx - hg, h - 0.5, 0.5 + mx - hg + r, h - 0.5);\n            path.lineTo(0.5 + mx + hg - r, h - 0.5);\n            path.bezierCurveTo(0.5 + mx + hg, h - 0.5, 0.5 + mx + hg, h - 0.5, 0.5 + mx + hg, h - (0.5 + r));\n            path.lineTo(0.5 + mx + hg, h - (0.5 + gh));\n            path.lineTo(0.5 + uw - r, h - (0.5 + gh));\n            path.bezierCurveTo(0.5 + uw, h - (0.5 + gh), 0.5 + uw, h - (0.5 + gh), 0.5 + uw, h - (0.5 + gh + r));\n            path.lineTo(0.5 + uw, h - (0.5 + uh));\n        }\n        else if (this.position == ButtonViewPosition.Bottom) {\n            let mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n            path.moveTo(0.5, 0.5 + uh);\n            path.lineTo(0.5, 0.5 + gh + r);\n            path.bezierCurveTo(0.5, 0.5 + gh, 0.5, 0.5 + gh, 0.5 + r, 0.5 + gh);\n            path.lineTo(0.5 + mx - hg, 0.5 + gh);\n            path.lineTo(0.5 + mx - hg, 0.5 + r);\n            path.bezierCurveTo(0.5 + mx - hg, 0.5, 0.5 + mx - hg, 0.5, 0.5 + mx - hg + r, 0.5);\n            path.lineTo(0.5 + mx + hg - r, 0.5);\n            path.bezierCurveTo(0.5 + mx + hg, 0.5, 0.5 + mx + hg, 0.5, 0.5 + mx + hg, 0.5 + r);\n            path.lineTo(0.5 + mx + hg, 0.5 + gh);\n            path.lineTo(0.5 + uw - r, 0.5 + gh);\n            path.bezierCurveTo(0.5 + uw, 0.5 + gh, 0.5 + uw, 0.5 + gh, 0.5 + uw, 0.5 + gh + r);\n            path.lineTo(0.5 + uw, 0.5 + uh);\n        }\n        return path;\n    }\n    layoutMaxWidth(bank, slotWidth) {\n        if (bank.buttons.length == 0)\n            return [[null]];\n        let bx = new Array(bank.buttons.length), by = new Array(bank.buttons.length);\n        let x = 0, y = 0, w = 0, h = 0;\n        for (let n = 0; n < bank.buttons.length; n++) {\n            w = Math.max(x + 1, w);\n            h = Math.max(y + 1, h);\n            bx[n] = x;\n            by[n] = y;\n            x++;\n            if (x >= slotWidth) {\n                x = 0;\n                y++;\n            }\n        }\n        let slot = new Array(h);\n        for (let n = 0; n < h; n++)\n            slot[n] = new Array(w);\n        for (let n = 0; n < bank.buttons.length; n++) {\n            slot[by[n]][bx[n]] = bank.buttons[n].id;\n        }\n        return slot;\n    }\n    layoutMaxHeight(bank, slotHeight, slotWidth) {\n        if (bank.buttons.length == 0)\n            return [[null]];\n        let bx = new Array(bank.buttons.length), by = new Array(bank.buttons.length);\n        let x = 0, y = 0, w = 0, h = 0;\n        for (let n = 0; n < bank.buttons.length; n++) {\n            w = Math.max(x + 1, w);\n            h = Math.max(y + 1, h);\n            bx[n] = x;\n            by[n] = y;\n            x++;\n            if (x >= slotWidth) {\n                x = 0;\n                y++;\n            }\n        }\n        let slot = new Array(h);\n        for (let n = 0; n < h; n++)\n            slot[n] = new Array(w);\n        for (let n = 0; n < bank.buttons.length; n++) {\n            slot[by[n]][bx[n]] = bank.buttons[n].id;\n        }\n        return slot;\n    }\n    scoreLayout(slots) {\n        let score = 0;\n        let nrows = slots.length, ncols = slots[0].length;\n        for (let y = 0; y < nrows; y++)\n            for (let x = 0; x < ncols; x++) {\n                if (slots[y][x] == null)\n                    score++;\n            }\n        if (this.maxButtonRows > 0 && nrows > this.maxButtonRows)\n            score += (nrows - this.maxButtonRows) * 100;\n        if (this.maxButtonColumns > 0 && ncols > this.maxButtonColumns)\n            score += (ncols - this.maxButtonColumns) * 100;\n        return score;\n    }\n    pickButtonIndex(x, y) {\n        for (let n = 0; n < this.display.length; n++) {\n            let d = this.display[n];\n            if (x >= d.x && y >= d.y && x < d.x + d.width && y < d.y + d.height)\n                return n;\n        }\n        return -1;\n    }\n    pickButtonID(x, y) {\n        let idx = this.pickButtonIndex(x, y);\n        if (idx < 0)\n            return undefined;\n        return this.display[idx].id;\n    }\n    triggerButton(id) {\n        if (id == '*') {\n            if (this.isRaised)\n                this.lowerBank();\n            else\n                this.raiseBank();\n            return;\n        }\n        else if (id == '!') {\n            this.popBank();\n            return;\n        }\n        let bank = this.stack[this.stack.length - 1];\n        bank.hitButton(id);\n    }\n    mouseClick(event) {\n    }\n    mouseDoubleClick(event) {\n        event.stopImmediatePropagation();\n    }\n    mouseDown(event) {\n        this.contentDOM.parent().grabFocus();\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1]))\n            return;\n        let id = this.pickButtonID(xy[0], xy[1]);\n        if (id != this.highlightButton) {\n            this.highlightButton = id;\n            this.redraw();\n        }\n        event.stopPropagation();\n    }\n    mouseUp(event) {\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1]))\n            return;\n        let id = this.pickButtonID(xy[0], xy[1]);\n        if (id != null && this.highlightButton == id) {\n            this.highlightButton = undefined;\n            this.triggerButton(id);\n            this.delayedRedraw();\n        }\n        else {\n            this.highlightButton = undefined;\n            this.delayedRedraw();\n        }\n        event.stopPropagation();\n    }\n    mouseOver(event) {\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1]))\n            return;\n        event.stopPropagation();\n    }\n    mouseOut(event) {\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1])) {\n            if (this.highlightButton != null) {\n                this.highlightButton = null;\n                this.delayedRedraw();\n            }\n            return;\n        }\n        if (this.highlightButton != null) {\n            let xy = eventCoords(event, this.contentDOM);\n            let id = this.pickButtonID(xy[0], xy[1]);\n            if (id != this.highlightButton) {\n                this.highlightButton = null;\n                this.delayedRedraw();\n            }\n        }\n        event.stopPropagation();\n    }\n    mouseMove(event) {\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1]))\n            return;\n    }\n}\n//# sourceMappingURL=ButtonView.js.map","import { fltEqual } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { ForeignMoleculeTransient } from './ForeignMolecule';\nimport { Graph } from './Graph';\nexport var DotPathBond;\n(function (DotPathBond) {\n    DotPathBond[DotPathBond[\"O0\"] = 0] = \"O0\";\n    DotPathBond[DotPathBond[\"O01\"] = 1] = \"O01\";\n    DotPathBond[DotPathBond[\"O1\"] = 2] = \"O1\";\n    DotPathBond[DotPathBond[\"O12\"] = 3] = \"O12\";\n    DotPathBond[DotPathBond[\"O2\"] = 4] = \"O2\";\n    DotPathBond[DotPathBond[\"O23\"] = 5] = \"O23\";\n    DotPathBond[DotPathBond[\"O3\"] = 6] = \"O3\";\n    DotPathBond[DotPathBond[\"O3X\"] = 7] = \"O3X\";\n})(DotPathBond || (DotPathBond = {}));\nexport var DotPathCharge;\n(function (DotPathCharge) {\n    DotPathCharge[DotPathCharge[\"N1X\"] = -3] = \"N1X\";\n    DotPathCharge[DotPathCharge[\"N1\"] = -2] = \"N1\";\n    DotPathCharge[DotPathCharge[\"N01\"] = -1] = \"N01\";\n    DotPathCharge[DotPathCharge[\"Z0\"] = 0] = \"Z0\";\n    DotPathCharge[DotPathCharge[\"P01\"] = 1] = \"P01\";\n    DotPathCharge[DotPathCharge[\"P1\"] = 2] = \"P1\";\n    DotPathCharge[DotPathCharge[\"P1X\"] = 3] = \"P1X\";\n})(DotPathCharge || (DotPathCharge = {}));\nexport class DotPath {\n    constructor(mol) {\n        this.mol = mol;\n        this.paths = [];\n        if (mol)\n            this.calculate();\n    }\n    clone() {\n        let dup = new DotPath(null);\n        dup.mol = this.mol;\n        dup.maskBlock = this.maskBlock;\n        dup.paths = this.paths.slice(0);\n        return dup;\n    }\n    getBondOrders() {\n        const mol = this.mol;\n        let orders = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            orders.push(mol.bondOrder(n));\n        for (let path of this.paths) {\n            let fract = path.numer / path.denom;\n            for (let n = 1; n <= 5; n++)\n                if (fltEqual(fract, n))\n                    fract = n;\n            for (let b of path.bonds)\n                orders[b - 1] = fract;\n        }\n        return orders;\n    }\n    getBondClasses() {\n        const mol = this.mol;\n        let classes = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bo = mol.bondOrder(n);\n            classes.push(bo == 0 ? 0 :\n                bo == 1 ? 2 :\n                    bo == 2 ? 4 :\n                        bo == 3 ? 6 : 7);\n        }\n        for (let path of this.paths) {\n            let fract = path.numer / path.denom;\n            let bcls = fltEqual(fract, 0) ? 0 :\n                fltEqual(fract, 1) ? 2 :\n                    fltEqual(fract, 2) ? 4 :\n                        fltEqual(fract, 3) ? 6 :\n                            fract < 1 ? 1 :\n                                fract < 2 ? 3 :\n                                    fract < 3 ? 5 : 7;\n            for (let b of path.bonds)\n                classes[b - 1] = bcls;\n        }\n        return classes;\n    }\n    getChargeClasses() {\n        const mol = this.mol;\n        let classes = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let chg = mol.atomCharge(n);\n            classes.push(chg == 0 ? 0 :\n                chg == -1 ? -2 :\n                    chg == 1 ? 2 :\n                        chg < -1 ? -3 : 3);\n        }\n        for (let path of this.paths) {\n            let chg = 0;\n            for (let a of path.atoms)\n                chg += mol.atomCharge(a);\n            chg /= path.atoms.length;\n            let ccls = fltEqual(chg, 0) ? 0 :\n                fltEqual(chg, -1) ? -2 :\n                    fltEqual(chg, 1) ? 2 :\n                        chg > -1 && chg < 0 ? -1 :\n                            chg > 0 && chg < 1 ? 1 :\n                                chg < -1 ? -3 : 3;\n            for (let a of path.atoms)\n                classes[a - 1] = ccls;\n        }\n        return classes;\n    }\n    getAggregateCharges() {\n        const mol = this.mol;\n        let chg = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            chg[n - 1] = mol.atomCharge(n);\n        for (let path of this.paths) {\n            let total = 0;\n            for (let a of path.atoms)\n                total += chg[a - 1];\n            for (let a of path.atoms)\n                chg[a - 1] = total;\n        }\n        return chg;\n    }\n    toString() {\n        let str = 'blocking=' + JSON.stringify(this.maskBlock) + '; paths=' + this.paths.length;\n        for (let p of this.paths)\n            str += ' [' + p.numer + '/' + p.denom + ';a=' + JSON.stringify(p.atoms) + ';b=' + JSON.stringify(p.bonds) + ']';\n        return str;\n    }\n    calculate() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let nonsingle = Vec.booleanArray(false, na), pibonded = Vec.booleanArray(false, na), metalbonded = Vec.booleanArray(false, na);\n        let bondsum = Vec.numberArray(0, na);\n        for (let n = 0; n < na; n++)\n            bondsum[n] = mol.atomHydrogens(n + 1);\n        for (let n = 1; n <= nb; n++) {\n            let bo = mol.bondOrder(n), bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            if (bo != 1) {\n                nonsingle[bfr - 1] = true;\n                nonsingle[bto - 1] = true;\n            }\n            if (bo >= 2) {\n                pibonded[bfr - 1] = true;\n                pibonded[bto - 1] = true;\n            }\n            else {\n                let blk1 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bfr)], blk2 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bto)];\n                if (blk1 >= 3 || blk2 >= 3) {\n                    metalbonded[bfr - 1] = true;\n                    metalbonded[bto - 1] = true;\n                }\n            }\n            bondsum[bfr - 1] += bo;\n            bondsum[bto - 1] += bo;\n            if (mol.bondTransient(n).indexOf(ForeignMoleculeTransient.BondAromatic) >= 0) {\n                pibonded[bfr - 1] = true;\n                pibonded[bto - 1] = true;\n            }\n        }\n        let impliedPi = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++)\n            if (!pibonded[n - 1]) {\n                let adjpi = 0;\n                for (let adj of mol.atomAdjList(n))\n                    if (pibonded[adj - 1] || metalbonded[adj - 1])\n                        adjpi++;\n                if (adjpi >= 2)\n                    impliedPi[n - 1] = true;\n            }\n        for (let n = 0; n < na; n++)\n            if (impliedPi[n])\n                pibonded[n] = true;\n        this.maskBlock = Vec.booleanArray(false, na);\n        let maskMaybe = Vec.booleanArray(false, na);\n        const COULD_BLOCK = [\n            Chemistry.ELEMENT_H,\n            Chemistry.ELEMENT_B, Chemistry.ELEMENT_C, Chemistry.ELEMENT_N, Chemistry.ELEMENT_O, Chemistry.ELEMENT_F,\n            Chemistry.ELEMENT_Al, Chemistry.ELEMENT_Si, Chemistry.ELEMENT_P, Chemistry.ELEMENT_S, Chemistry.ELEMENT_Cl,\n            Chemistry.ELEMENT_Ga, Chemistry.ELEMENT_Ge, Chemistry.ELEMENT_As, Chemistry.ELEMENT_Se, Chemistry.ELEMENT_Br,\n            Chemistry.ELEMENT_In, Chemistry.ELEMENT_Sn, Chemistry.ELEMENT_Sb, Chemistry.ELEMENT_Te, Chemistry.ELEMENT_I,\n            Chemistry.ELEMENT_Tl, Chemistry.ELEMENT_Pb, Chemistry.ELEMENT_Bi, Chemistry.ELEMENT_Po, Chemistry.ELEMENT_At,\n        ];\n        const ACIDS = [\n            Chemistry.ELEMENT_B,\n            Chemistry.ELEMENT_Al, Chemistry.ELEMENT_Si,\n            Chemistry.ELEMENT_Ga, Chemistry.ELEMENT_Ge,\n            Chemistry.ELEMENT_In, Chemistry.ELEMENT_Sn,\n            Chemistry.ELEMENT_Tl, Chemistry.ELEMENT_Pb,\n        ];\n        const BASES = [\n            Chemistry.ELEMENT_N, Chemistry.ELEMENT_O, Chemistry.ELEMENT_F,\n            Chemistry.ELEMENT_P, Chemistry.ELEMENT_S, Chemistry.ELEMENT_Cl,\n            Chemistry.ELEMENT_As, Chemistry.ELEMENT_Se, Chemistry.ELEMENT_Br,\n            Chemistry.ELEMENT_Sb, Chemistry.ELEMENT_Te, Chemistry.ELEMENT_I,\n            Chemistry.ELEMENT_Bi, Chemistry.ELEMENT_Po, Chemistry.ELEMENT_At,\n        ];\n        skip: for (let n = 0; n < na; n++) {\n            const a = n + 1;\n            if (nonsingle[n] || pibonded[n])\n                continue;\n            if (mol.atomCharge(a) != 0 || mol.atomUnpaired(a) != 0)\n                continue;\n            const atno = mol.atomicNumber(a);\n            if (atno == 0) {\n                this.maskBlock[n] = true;\n                continue;\n            }\n            if (COULD_BLOCK.indexOf(atno) < 0)\n                continue;\n            if (bondsum[n] != Chemistry.ELEMENT_BONDING[atno])\n                continue;\n            if (ACIDS.indexOf(atno) >= 0) {\n                for (let adj of mol.atomAdjList(a))\n                    if (BASES.indexOf(mol.atomicNumber(adj)) >= 0)\n                        continue skip;\n            }\n            if (BASES.indexOf(atno) >= 0) {\n                for (let adj of mol.atomAdjList(a))\n                    if (ACIDS.indexOf(mol.atomicNumber(adj)) >= 0)\n                        continue skip;\n            }\n            maskMaybe[n] = true;\n            if (atno == Chemistry.ELEMENT_C) {\n                let hasMetal = false;\n                for (let adj of mol.atomAdjList(a))\n                    if (COULD_BLOCK.indexOf(mol.atomicNumber(adj)) < 0)\n                        hasMetal = true;\n                if (!hasMetal)\n                    this.maskBlock[n] = true;\n            }\n            else if (atno == Chemistry.ELEMENT_H) {\n                this.maskBlock[n] = true;\n            }\n        }\n        skip: for (let n = 0; n < na; n++)\n            if (maskMaybe[n] && !this.maskBlock[n]) {\n                for (let a of mol.atomAdjList(n + 1))\n                    if (!maskMaybe[a - 1])\n                        continue skip;\n                this.maskBlock[n] = true;\n            }\n        let g = Graph.fromMolecule(mol);\n        for (let n = 0; n < na; n++)\n            if (this.maskBlock[n])\n                g.isolateNode(n);\n        for (let cc of g.calculateComponentGroups()) {\n            if (cc.length == 1)\n                continue;\n            let amask = Vec.idxMask(cc, na);\n            Vec.addTo(cc, 1);\n            let p = {\n                atoms: cc,\n                bonds: [],\n                numer: 0,\n                denom: 0\n            };\n            for (let n = 1; n <= nb; n++)\n                if (amask[mol.bondFrom(n) - 1] && amask[mol.bondTo(n) - 1])\n                    p.bonds.push(n);\n            let totalHave = 0, totalWant = 0;\n            for (let a of p.atoms) {\n                let others = mol.atomHydrogens(a);\n                for (let o of mol.atomAdjList(a))\n                    if (!amask[o - 1])\n                        others++;\n                let atno = mol.atomicNumber(a);\n                let have = Chemistry.ELEMENT_VALENCE[atno] - mol.atomCharge(a) - others;\n                let want = Chemistry.ELEMENT_SHELL[atno] - Chemistry.ELEMENT_VALENCE[atno] - others;\n                totalHave += have;\n                totalWant += want;\n            }\n            let electrons = Math.min(totalHave, totalWant);\n            p.numer = electrons;\n            p.denom = 2 * p.bonds.length;\n            this.paths.push(p);\n        }\n    }\n}\n//# sourceMappingURL=DotPath.js.map","import { deepClone, findNode, findNodes, nodeText } from '../util/util';\nimport { XML } from '../util/XML';\nimport { DataSheet } from './DataSheet';\nimport { Molecule } from './Molecule';\nimport { MoleculeStream } from './MoleculeStream';\nexport class DataSheetStream {\n    static readXML(strXML) {\n        let xmlDoc;\n        if (XML.customParser)\n            xmlDoc = new XML.customParser().parseFromString(strXML, 'application/xml');\n        else\n            xmlDoc = new DOMParser().parseFromString(strXML, 'application/xml');\n        if (xmlDoc == null)\n            return null;\n        let root = xmlDoc.documentElement;\n        if (root == null)\n            return null;\n        let ds = new DataSheet();\n        let summary = findNode(root, 'Summary');\n        if (summary == null)\n            return null;\n        ds.title = nodeText(findNode(summary, 'Title'));\n        ds.description = nodeText(findNode(summary, 'Description'));\n        let extRoot = findNode(root, 'Extension');\n        if (extRoot != null) {\n            let extList = findNodes(extRoot, 'Ext');\n            for (let n = 0; n < extList.length; n++) {\n                let ext = extList[n];\n                ds.appendExtension(ext.getAttribute('name'), ext.getAttribute('type'), nodeText(ext));\n            }\n        }\n        let header = findNode(root, 'Header');\n        let numCols = parseInt(header.getAttribute('ncols'));\n        let colList = findNodes(header, 'Column');\n        if (colList.length != numCols)\n            return null;\n        for (let n = 0; n < numCols; n++) {\n            let col = colList[n];\n            let id = parseInt(col.getAttribute('id'));\n            if (id != n + 1)\n                return null;\n            ds.appendColumn(col.getAttribute('name'), col.getAttribute('type'), nodeText(col));\n        }\n        let rowidx = 0;\n        for (let row of findNodes(findNode(root, 'Content'), 'Row')) {\n            if (parseInt(row.getAttribute('id')) != rowidx + 1)\n                return null;\n            ds.appendRow();\n            for (let col of findNodes(row, 'Cell')) {\n                let colidx = parseInt(col.getAttribute('id')) - 1;\n                let ct = ds.colType(colidx), val = nodeText(col);\n                if (val == '') { }\n                else if (ct == \"molecule\")\n                    ds.setObject(rowidx, colidx, val);\n                else if (ct == \"string\")\n                    ds.setString(rowidx, colidx, val);\n                else if (ct == \"real\")\n                    ds.setReal(rowidx, colidx, parseFloat(val));\n                else if (ct == \"integer\")\n                    ds.setInteger(rowidx, colidx, parseInt(val));\n                else if (ct == \"boolean\")\n                    ds.setBoolean(rowidx, colidx, val == 'true' ? true : val == 'false' ? false : null);\n                else if (ct == \"extend\")\n                    ds.setExtend(rowidx, colidx, val);\n                col = col.nextElementSibling;\n                colidx++;\n            }\n            row = row.nextElementSibling;\n            rowidx++;\n        }\n        return ds;\n    }\n    static readJSON(json) {\n        if (!json.colData || !json.rowData)\n            throw 'Not a JSON-formatted datasheet.';\n        return new DataSheet(deepClone(json));\n    }\n    static writeXML(ds) {\n        let xml;\n        if (XML.customParser)\n            xml = new XML.customParser().parseFromString('<DataSheet/>', 'application/xml');\n        else\n            xml = new DOMParser().parseFromString('<DataSheet/>', 'application/xml');\n        let summary = xml.createElement('Summary');\n        xml.documentElement.appendChild(summary);\n        let title = xml.createElement('Title'), descr = xml.createElement('Description');\n        summary.appendChild(title);\n        title.appendChild(xml.createTextNode(ds.title));\n        summary.appendChild(descr);\n        descr.appendChild(xml.createCDATASection(ds.description));\n        let extension = xml.createElement('Extension');\n        xml.documentElement.appendChild(extension);\n        for (let n = 0; n < ds.numExtensions; n++) {\n            let ext = xml.createElement('Ext');\n            extension.appendChild(ext);\n            ext.setAttribute('name', ds.getExtName(n));\n            ext.setAttribute('type', ds.getExtType(n));\n            ext.appendChild(xml.createCDATASection(ds.getExtData(n)));\n        }\n        let header = xml.createElement('Header');\n        xml.documentElement.appendChild(header);\n        header.setAttribute('nrows', ds.numRows.toString());\n        header.setAttribute('ncols', ds.numCols.toString());\n        for (let n = 0; n < ds.numCols; n++) {\n            let column = xml.createElement('Column');\n            header.appendChild(column);\n            column.setAttribute('id', (n + 1).toString());\n            column.setAttribute('name', ds.colName(n));\n            column.setAttribute('type', ds.colType(n));\n            column.appendChild(xml.createTextNode(ds.colDescr(n)));\n        }\n        let content = xml.createElement('Content');\n        xml.documentElement.appendChild(content);\n        for (let r = 0; r < ds.numRows; r++) {\n            let row = xml.createElement('Row');\n            row.setAttribute('id', (r + 1).toString());\n            content.appendChild(row);\n            for (let c = 0; c < ds.numCols; c++) {\n                let cell = xml.createElement('Cell');\n                cell.setAttribute('id', (c + 1).toString());\n                row.appendChild(cell);\n                let ct = ds.colType(c);\n                let txtNode = null;\n                if (ds.isNull(r, c)) { }\n                else if (ct == \"molecule\") {\n                    let obj = ds.getObject(r, c);\n                    if (obj instanceof Molecule)\n                        obj = MoleculeStream.writeNative(obj);\n                    txtNode = xml.createCDATASection(obj);\n                }\n                else if (ct == \"string\")\n                    txtNode = xml.createCDATASection(ds.getString(r, c));\n                else if (ct == \"real\")\n                    txtNode = xml.createTextNode(ds.getReal(r, c).toString());\n                else if (ct == \"integer\")\n                    txtNode = xml.createTextNode(ds.getInteger(r, c).toString());\n                else if (ct == \"boolean\")\n                    txtNode = xml.createTextNode(ds.getBoolean(r, c).toString());\n                else if (ct == \"extend\")\n                    txtNode = xml.createCDATASection(ds.getExtend(r, c));\n                if (txtNode != null)\n                    cell.appendChild(txtNode);\n            }\n        }\n        if (XML.customSerial)\n            return new XML.customSerial().serializeToString(xml.documentElement);\n        else\n            return new XMLSerializer().serializeToString(xml.documentElement);\n    }\n    static writeJSON(ds) {\n        let data = ds.data;\n        let nrow = ds.numRows, ncol = ds.numCols;\n        let rowData = new Array(nrow);\n        for (let n = 0; n < nrow; n++)\n            rowData[n] = new Array(ncol);\n        for (let c = 0; c < ncol; c++) {\n            let doConvert = ds.colType(c) == \"molecule\";\n            for (let r = 0; r < nrow; r++) {\n                let val = data.rowData[r][c];\n                if (val != null && doConvert)\n                    val = val.toString();\n                rowData[r][c] = val;\n            }\n        }\n        let json = {\n            title: data.title,\n            description: data.description,\n            colData: deepClone(data.colData),\n            rowData: rowData,\n            extData: deepClone(data.extData),\n        };\n        return json;\n    }\n}\n//# sourceMappingURL=DataSheetStream.js.map","import { Molecule } from '../data/Molecule';\nimport { GeomUtil } from '../util/Geom';\nimport { angleDiff, DEGRAD, invZ, norm2_xy, norm_xy } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { BLineType } from './ArrangeMolecule';\nimport { MetaVector, TextAlign } from './MetaVector';\nimport { RenderMnemonicType } from './Rendering';\nexport class DrawMolecule {\n    constructor(layout, vg) {\n        this.layout = layout;\n        this.vg = vg;\n        this.mnemonics = null;\n        this.mol = layout.getMolecule();\n        this.policy = layout.getPolicy();\n        this.effects = layout.getEffects();\n        this.scale = layout.getScale();\n        this.invScale = 1.0 / this.scale;\n    }\n    getMolecule() { return this.mol; }\n    getMetaVector() { return this.vg; }\n    getLayout() { return this.layout; }\n    getPolicy() { return this.policy; }\n    getEffects() { return this.effects; }\n    draw() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n        let DRAW_SPACE = false;\n        if (DRAW_SPACE) {\n            let bounds = this.layout.determineBoundary();\n            this.vg.drawRect(bounds[0], bounds[1], bounds[2] - bounds[0], bounds[3] - bounds[1], 0xFF0000, 1, MetaVector.NOCOLOUR);\n            for (let n = 0; n < this.layout.numSpace(); n++) {\n                let spc = this.layout.getSpace(n);\n                this.vg.drawRect(spc.box.x, spc.box.y, spc.box.w, spc.box.h, MetaVector.NOCOLOUR, 0, 0xE0E0E0);\n                if (spc.px != null && spc.py != null && spc.px.length > 2)\n                    this.vg.drawPoly(spc.px, spc.py, 0x000000, 1, 0x808080FF, true);\n            }\n        }\n        this.drawUnderEffects();\n        let { mol, layout, effects, policy, vg } = this;\n        let hideBonds = new Set(effects.hideBonds);\n        for (let i = 1; i <= mol.numBonds; i++)\n            if (mol.bondType(i) == Molecule.BONDTYPE_INCLINED && !hideBonds.has(i)) {\n                let atom = mol.bondTo(i);\n                if (layout.getPoint(atom - 1).text)\n                    continue;\n                for (let j of mol.atomAdjBonds(atom))\n                    if (j != i && mol.bondType(j) == Molecule.BONDTYPE_INCLINED && mol.bondTo(j) == atom && !hideBonds.has(j)) {\n                        let b1 = layout.getLines().find((b) => b.bnum == i);\n                        let b2 = layout.getLines().find((b) => b.bnum == j);\n                        let th1 = Math.atan2(b1.line.y1 - b1.line.y2, b1.line.x1 - b1.line.x2);\n                        let th2 = Math.atan2(b2.line.y1 - b2.line.y2, b2.line.x1 - b2.line.x2);\n                        if (Math.abs(angleDiff(th1, th2)) < 170 * DEGRAD) {\n                            this.drawFusedWedge(b1, b2);\n                            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Artifact, 'Fused', [b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2]);\n                            hideBonds.add(i);\n                            hideBonds.add(j);\n                            break;\n                        }\n                    }\n            }\n        for (let n = 0; n < layout.numLines(); n++) {\n            let b = layout.getLine(n);\n            if (hideBonds.has(b.bnum))\n                continue;\n            if (b.type == BLineType.Normal) {\n                vg.drawLine(b.line.x1, b.line.y1, b.line.x2, b.line.y2, b.col, b.size);\n                (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Bond, 'L', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Inclined) {\n                this.drawBondInclined(b);\n                (_c = this.mnemonics) === null || _c === void 0 ? void 0 : _c.append(RenderMnemonicType.Bond, 'I', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Declined) {\n                this.drawBondDeclined(b);\n                (_d = this.mnemonics) === null || _d === void 0 ? void 0 : _d.append(RenderMnemonicType.Bond, 'D', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Unknown) {\n                this.drawBondUnknown(b);\n                (_e = this.mnemonics) === null || _e === void 0 ? void 0 : _e.append(RenderMnemonicType.Bond, 'U', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Dotted || b.type == BLineType.DotDir) {\n                this.drawBondDotted(b);\n                (_f = this.mnemonics) === null || _f === void 0 ? void 0 : _f.append(RenderMnemonicType.Bond, 'O', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.IncDouble || b.type == BLineType.IncTriple || b.type == BLineType.IncQuadruple) {\n                this.drawBondIncMulti(b);\n                (_g = this.mnemonics) === null || _g === void 0 ? void 0 : _g.append(RenderMnemonicType.Bond, 'M', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n        }\n        let fg = policy.data.foreground;\n        for (let r of layout.getRings()) {\n            if (r.theta != 0) {\n                var bez = GeomUtil.createBezierEllipse(r.cx, r.cy, r.rw, r.rh, r.theta);\n                vg.drawPath(bez.px, bez.py, bez.ctrl, true, fg, r.size, MetaVector.NOCOLOUR, false);\n                (_h = this.mnemonics) === null || _h === void 0 ? void 0 : _h.append(RenderMnemonicType.Artifact, 'Ring', [r.cx, r.cy, r.rw, r.rh, r.theta]);\n            }\n            else {\n                vg.drawOval(r.cx, r.cy, r.rw, r.rh, fg, r.size, MetaVector.NOCOLOUR);\n                (_j = this.mnemonics) === null || _j === void 0 ? void 0 : _j.append(RenderMnemonicType.Artifact, 'Ring', [r.cx, r.cy, r.rw, r.rh]);\n            }\n        }\n        for (let p of layout.getPaths()) {\n            vg.drawPath(p.px, p.py, p.ctrl, false, fg, p.size, MetaVector.NOCOLOUR, false);\n            (_k = this.mnemonics) === null || _k === void 0 ? void 0 : _k.append(RenderMnemonicType.Artifact, 'Path', [...p.px, ...p.py]);\n        }\n        for (let n = 0; n < layout.numPoints(); n++) {\n            let p = layout.getPoint(n);\n            if (effects.hideAtoms.has(p.anum))\n                continue;\n            let txt = p.text;\n            let cx = p.oval.cx, cy = p.oval.cy, rw = p.oval.rw;\n            if (txt == null) {\n                (_l = this.mnemonics) === null || _l === void 0 ? void 0 : _l.append(RenderMnemonicType.Atom, '.', [cx, cy]);\n                continue;\n            }\n            let fsz = p.fsz;\n            let col = p.col;\n            while (txt.endsWith('.')) {\n                let dw = rw / txt.length;\n                let r = fsz * 0.15;\n                vg.drawOval(cx + rw - dw, cy, r, r, MetaVector.NOCOLOUR, 0, col);\n                cx -= dw;\n                rw -= dw;\n                txt = txt.substring(0, txt.length - 1);\n            }\n            while (txt.startsWith('+')) {\n                let dw = rw / txt.length;\n                let x = cx - rw + dw, y = cy, r = fsz * 0.18, lsz = fsz * 0.1;\n                vg.drawLine(x - r, y, x + r, y, col, lsz);\n                vg.drawLine(x, y - r, x, y + r, col, lsz);\n                cx += dw;\n                rw -= dw;\n                txt = txt.substring(1, txt.length);\n            }\n            while (txt.startsWith('-')) {\n                let dw = rw / txt.length;\n                let x = cx - rw + dw, y = cy, r = fsz * 0.18, lsz = fsz * 0.1;\n                vg.drawLine(x - r, y, x + r, y, col, lsz);\n                cx += dw;\n                rw -= dw;\n                txt = txt.substring(1, txt.length);\n            }\n            if (txt.length > 0) {\n                vg.drawText(cx, cy, txt, fsz, col, TextAlign.Centre | TextAlign.Middle, p.rotation || 0);\n                (_m = this.mnemonics) === null || _m === void 0 ? void 0 : _m.append(RenderMnemonicType.Atom, txt, [cx, cy]);\n            }\n            else\n                (_o = this.mnemonics) === null || _o === void 0 ? void 0 : _o.append(RenderMnemonicType.Atom, '.', [cx, cy]);\n        }\n        this.drawOverEffects();\n    }\n    drawUnderEffects() {\n        var _a, _b, _c;\n        let mol = this.mol, policy = this.policy, effects = this.effects, layout = this.layout, scale = this.scale, vg = this.vg;\n        for (let n = 0, num = Math.min(effects.atomFrameDotSz.length, mol.numAtoms); n < num; n++) {\n            if (effects.hideAtoms.has(n + 1))\n                continue;\n            let dw = effects.atomFrameDotSz[n] * scale, col = effects.atomFrameCol[n];\n            let a = layout.getPoint(n);\n            let rw = a.oval.rw + 0.1 * scale, rh = a.oval.rh + 0.1 * scale;\n            let wdots = Math.ceil(2 * rw / (3 * dw));\n            let hdots = Math.ceil(2 * rh / (3 * dw));\n            let wspc = 2 * rw / wdots, hspc = 2 * rh / hdots;\n            for (let i = 0; i <= wdots; i++) {\n                let x = a.oval.cx - rw + i * wspc;\n                vg.drawOval(x, a.oval.cy - rh, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(x, a.oval.cy + rh, dw, dw, MetaVector.NOCOLOUR, 0, col);\n            }\n            for (let i = 1; i < hdots; i++) {\n                let y = a.oval.cy - rh + i * hspc;\n                vg.drawOval(a.oval.cx - rw, y, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(a.oval.cx + rw, y, dw, dw, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Effect, 'Dot', [a.oval.cx, a.oval.cy, a.oval.rw, a.oval.rh]);\n        }\n        for (let key in effects.dottedRectOutline) {\n            let atom = parseInt(key), col = effects.dottedRectOutline[key];\n            let a = layout.getPoint(atom - 1);\n            let rw = Math.max(a.oval.rw, 0.2 * scale), rh = Math.max(a.oval.rh, 0.2 * scale);\n            let sz = 0.05 * scale;\n            let xdots = Math.max(1, Math.round(rw / (2 * sz)));\n            let ydots = Math.max(1, Math.round(rh / (2 * sz)));\n            let invX = (2 * rw) / xdots, invY = (2 * rh) / ydots;\n            for (let n = 0; n <= xdots; n++) {\n                let x = a.oval.cx - rw + n * invX;\n                vg.drawOval(x, a.oval.cy - rh, sz, sz, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(x, a.oval.cy + rh, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            for (let n = 1; n < ydots; n++) {\n                let y = a.oval.cy - rh + n * invY;\n                vg.drawOval(a.oval.cx - rw, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(a.oval.cx + rw, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Effect, 'Rect', [a.oval.cx, a.oval.cy, a.oval.rw, a.oval.rh]);\n        }\n        for (let key in effects.dottedBondCross) {\n            let bond = parseInt(key), col = effects.dottedBondCross[key];\n            let x1 = 0, y1 = 0, x2 = 0, y2 = 0, bcount = 0;\n            for (let n = 0; n < layout.numLines(); n++) {\n                let b = layout.getLine(n);\n                if (b.bnum == bond) {\n                    x1 += b.line.x1;\n                    y1 += b.line.y1;\n                    x2 += b.line.x2;\n                    y2 += b.line.y2;\n                    bcount += 1;\n                }\n            }\n            if (bcount > 1) {\n                let inv = 1 / bcount;\n                [x1, y1, x2, y2] = [x1 * inv, y1 * inv, x2 * inv, y2 * inv];\n            }\n            let dx = x2 - x1, dy = y2 - y1;\n            let inv = 0.2 * scale * invZ(norm_xy(dx, dy)), ox = dy * inv, oy = -dx * inv;\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2), sz = 0.05 * scale;\n            for (let p of [-2, -1, 1, 2]) {\n                let x = cx + p * ox, y = cy + p * oy;\n                vg.drawOval(x, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_c = this.mnemonics) === null || _c === void 0 ? void 0 : _c.append(RenderMnemonicType.Effect, 'Crossing', [x1, y1, x2, y2]);\n        }\n    }\n    drawOverEffects() {\n        var _a, _b;\n        let mol = this.mol, policy = this.policy, effects = this.effects, layout = this.layout, scale = this.scale, vg = this.vg;\n        for (let a of effects.overlapAtoms) {\n            let p = layout.getPoint(a - 1);\n            let rad = scale * 0.2;\n            vg.drawLine(p.oval.cx - rad, p.oval.cy - rad, p.oval.cx + rad, p.oval.cy + rad, 0xFF0000, 1);\n            vg.drawLine(p.oval.cx + rad, p.oval.cy - rad, p.oval.cx - rad, p.oval.cy + rad, 0xFF0000, 1);\n            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Effect, 'Overlap', [p.oval.cx, p.oval.cy, p.oval.rw, p.oval.rh]);\n        }\n        for (let n = 0, num = Math.min(effects.atomCircleSz.length, mol.numAtoms); n < num; n++)\n            if (effects.atomCircleSz[n] > 0) {\n                let dw = effects.atomCircleSz[n] * scale, col = effects.atomCircleCol[n];\n                let p = layout.getPoint(n);\n                vg.drawOval(p.oval.cx, p.oval.cy, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Effect, 'Circle', [p.oval.cx, p.oval.cy, p.oval.rw, p.oval.rh]);\n            }\n    }\n    drawBondInclined(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let norm = head / Math.sqrt(dx * dx + dy * dy);\n        let ox = norm * dy, oy = -norm * dx;\n        let px = [x1, x2 - ox, x2 + ox], py = [y1, y2 - oy, y2 + oy];\n        if (this.layout.getPoint(b.bto - 1).text == null && this.mol.atomAdjCount(b.bto) == 2) {\n            let other = null;\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let o = this.layout.getLine(n);\n                if (o.type == BLineType.Normal && (o.bfr == b.bto || o.bto == b.bto)) {\n                    if (other != null) {\n                        other = null;\n                        break;\n                    }\n                    other = o;\n                }\n            }\n            if (other != null) {\n                let th1 = Math.atan2(y1 - y2, x1 - x2);\n                let th2 = Math.atan2(other.line.y1 - other.line.y2, other.line.x1 - other.line.x2);\n                if (b.bto == other.bfr)\n                    th2 += Math.PI;\n                let diff = Math.abs(angleDiff(th1, th2));\n                if (diff > 105 * DEGRAD && diff < 135 * DEGRAD) {\n                    let ixy1 = GeomUtil.lineIntersect(px[0], py[0], px[1], py[1], other.line.x1, other.line.y1, other.line.x2, other.line.y2);\n                    let ixy2 = GeomUtil.lineIntersect(px[0], py[0], px[2], py[2], other.line.x1, other.line.y1, other.line.x2, other.line.y2);\n                    px[1] = ixy1[0];\n                    py[1] = ixy1[1];\n                    px[2] = ixy2[0];\n                    py[2] = ixy2[1];\n                    let dx1 = px[1] - px[0], dy1 = py[1] - py[0], inv1 = 0.5 * other.size / norm_xy(dx1, dy1);\n                    px[1] += dx1 * inv1;\n                    py[1] += dy1 * inv1;\n                    let dx2 = px[2] - px[0], dy2 = py[2] - py[0], inv2 = 0.5 * other.size / norm_xy(dx2, dy2);\n                    px[2] += dx2 * inv1;\n                    py[2] += dy2 * inv1;\n                }\n            }\n        }\n        if (this.layout.getPoint(b.bto - 1).text == null && this.mol.atomAdjCount(b.bto) == 3) {\n            let other1 = null, other2 = null;\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let o = this.layout.getLine(n);\n                if (o.type == BLineType.Normal && (o.bfr == b.bto || o.bto == b.bto)) {\n                    if (other1 == null)\n                        other1 = o;\n                    else if (other2 == null)\n                        other2 = o;\n                    else {\n                        other1 = other2 = null;\n                        break;\n                    }\n                }\n            }\n            if (other1 != null && other2 != null) {\n                let th1 = Math.atan2(y1 - y2, x1 - x2);\n                let th2 = Math.atan2(other1.line.y1 - other1.line.y2, other1.line.x1 - other1.line.x2);\n                let th3 = Math.atan2(other2.line.y1 - other2.line.y2, other2.line.x1 - other2.line.x2);\n                if (b.bto == other1.bfr)\n                    th2 += Math.PI;\n                if (b.bto == other2.bfr)\n                    th3 += Math.PI;\n                let dth1 = angleDiff(th1, th2), diff1 = Math.abs(dth1);\n                let dth2 = angleDiff(th1, th3), diff2 = Math.abs(dth2);\n                let diff3 = Math.abs(angleDiff(th2, th3));\n                if (diff1 > 105 * DEGRAD && diff1 < 135 * DEGRAD ||\n                    diff2 > 105 * DEGRAD && diff2 < 135 * DEGRAD ||\n                    diff3 > 105 * DEGRAD && diff3 < 135 * DEGRAD) {\n                    if (dth1 < 0)\n                        [other1, other2] = [other2, other1];\n                    let ixy1 = GeomUtil.lineIntersect(px[0], py[0], px[1], py[1], other1.line.x1, other1.line.y1, other1.line.x2, other1.line.y2);\n                    let ixy2 = GeomUtil.lineIntersect(px[0], py[0], px[2], py[2], other2.line.x1, other2.line.y1, other2.line.x2, other2.line.y2);\n                    px = [x1, ixy1[0], x2, ixy2[0]];\n                    py = [y1, ixy1[1], y2, ixy2[1]];\n                }\n            }\n        }\n        this.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, col, true);\n    }\n    drawFusedWedge(b1, b2) {\n        const terminalPoints = (b, other) => {\n            let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n            let dx = x2 - x1, dy = y2 - y1;\n            let norm = b.head / Math.sqrt(dx * dx + dy * dy);\n            let ox = norm * dy, oy = -norm * dx;\n            let tx1 = x2 - ox, ty1 = y2 - oy, tx2 = x2 + ox, ty2 = y2 + oy;\n            let dsq1 = norm2_xy(tx1 - other.line.x1, ty1 - other.line.y1);\n            let dsq2 = norm2_xy(tx2 - other.line.x1, ty2 - other.line.y1);\n            if (dsq1 > dsq2)\n                return { outerX: tx1, outerY: ty1, innerX: tx2, innerY: ty2 };\n            else\n                return { outerX: tx2, outerY: ty2, innerX: tx1, innerY: ty1 };\n        };\n        let u = terminalPoints(b1, b2), v = terminalPoints(b2, b1);\n        let [innerX, innerY] = GeomUtil.lineIntersect(b1.line.x1, b1.line.y1, u.innerX, u.innerY, b2.line.x1, b2.line.y1, v.innerX, v.innerY);\n        let px = [b1.line.x1, u.outerX, v.outerX, b2.line.x1, innerX];\n        let py = [b1.line.y1, u.outerY, v.outerY, b2.line.y1, innerY];\n        this.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, b1.col, true);\n    }\n    drawBondDeclined(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let ext = Math.sqrt(dx * dx + dy * dy);\n        let nsteps = Math.ceil(ext * 2.5 * this.invScale);\n        let norm = head / ext;\n        let ox = norm * dy, oy = -norm * dx, invSteps = 1.0 / (nsteps + 1);\n        let holdout = this.mol.atomAdjCount(b.bto) == 1 && this.layout.getPoint(b.bto - 1).text == null ? 1 : 1 - (0.15 * this.scale) / ext;\n        for (let i = 0; i <= nsteps + 1; i++) {\n            let cx = x1 + i * dx * invSteps * holdout, cy = y1 + i * dy * invSteps * holdout;\n            let ix = ox * i * invSteps, iy = oy * i * invSteps;\n            this.vg.drawLine(cx - ix, cy - iy, cx + ix, cy + iy, col, size);\n        }\n    }\n    drawBondUnknown(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let ext = Math.sqrt(dx * dx + dy * dy);\n        let nsteps = Math.ceil(ext * 3.5 * this.invScale);\n        let norm = head / ext;\n        let ox = norm * dy, oy = -norm * dx;\n        let sz = 1 + 3 * (nsteps + 1);\n        let x = Vec.numberArray(0, sz), y = Vec.numberArray(0, sz), ctrl = Vec.booleanArray(false, sz);\n        x[0] = x1;\n        y[0] = y1;\n        ctrl[0] = false;\n        for (let i = 0, j = 1; i <= nsteps; i++, j += 3) {\n            let ax = x1 + i * dx / (nsteps + 1), ay = y1 + i * dy / (nsteps + 1);\n            let cx = x1 + (i + 1) * dx / (nsteps + 1), cy = y1 + (i + 1) * dy / (nsteps + 1);\n            let bx = (ax + cx) / 2, by = (ay + cy) / 2;\n            let sign = i % 2 == 0 ? 1 : -1;\n            x[j] = ax;\n            x[j + 1] = bx + sign * ox;\n            x[j + 2] = cx;\n            y[j] = ay;\n            y[j + 1] = by + sign * oy;\n            y[j + 2] = cy;\n            ctrl[j] = true;\n            ctrl[j + 1] = true;\n            ctrl[j + 2] = false;\n        }\n        this.vg.drawPath(x, y, ctrl, false, col, size, MetaVector.NOCOLOUR, false);\n    }\n    drawBondDotted(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size;\n        let radius = size, dist = norm_xy(dx, dy);\n        if (dist < 0.01)\n            return;\n        let nudge = 0.5 * size / dist;\n        x1 += nudge * dx;\n        y1 += nudge * dy;\n        x2 -= nudge * dx;\n        y2 -= nudge * dy;\n        dx = x2 - x1;\n        dy = y2 - y1;\n        let nsteps = Math.ceil(0.2 * dist / radius);\n        let invSteps = 1.0 / (nsteps + 1);\n        for (let i = 0; i <= nsteps + 1; i++) {\n            let r = radius;\n            if (b.type == BLineType.DotDir)\n                r *= 1 + (i * (1.0 / (nsteps + 2)) - 0.5);\n            let cx = x1 + i * dx * invSteps, cy = y1 + i * dy * invSteps;\n            this.vg.drawOval(cx, cy, r, r, MetaVector.NOCOLOUR, 0, col);\n        }\n    }\n    drawBondIncMulti(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let norm = head / Math.sqrt(dx * dx + dy * dy);\n        let ox = norm * dy, oy = -norm * dx;\n        this.vg.drawPoly([x1, x2 - ox, x2 + ox], [y1, y2 - oy, y2 + oy], col, this.scale * 0.05, MetaVector.NOCOLOUR, true);\n        if (b.type == BLineType.IncDouble) {\n            this.vg.drawLine(x1, y1, x2, y2, col, this.scale * 0.03);\n        }\n        else {\n            this.vg.drawLine(x1, y1, x2 + 0.33 * ox, y2 + 0.33 * oy, col, this.scale * 0.03);\n            this.vg.drawLine(x1, y1, x2 - 0.33 * ox, y2 - 0.33 * oy, col, this.scale * 0.03);\n        }\n    }\n}\n//# sourceMappingURL=DrawMolecule.js.map","export class ButtonBank {\n    constructor() {\n        this.isSubLevel = false;\n        this.buttons = [];\n    }\n    init() { }\n    claimKey(event) { return false; }\n    bankClosed() { }\n    static matchKey(event, mnemonic, key) {\n        if (mnemonic == null || mnemonic == '')\n            return false;\n        let mshift = false, mctrl = false, malt = false, mmeta = false, mkey = mnemonic;\n        while (true) {\n            if (mkey.startsWith('Shift+')) {\n                mshift = true;\n                mkey = mkey.substring(6);\n            }\n            else if (mkey.startsWith('Ctrl+')) {\n                mctrl = true;\n                mkey = mkey.substring(5);\n            }\n            else if (mkey.startsWith('Alt+')) {\n                malt = true;\n                mkey = mkey.substring(4);\n            }\n            else if (mkey.startsWith('Cmd+')) {\n                mmeta = true;\n                mkey = mkey.substring(4);\n            }\n            else\n                break;\n        }\n        if (mshift != event.shiftKey)\n            return false;\n        if (mctrl != event.ctrlKey)\n            return false;\n        if (malt != event.altKey)\n            return false;\n        if (mmeta != event.metaKey)\n            return false;\n        if (key)\n            mkey = key;\n        return mkey.toLowerCase() == event.key.toLowerCase();\n    }\n}\n//# sourceMappingURL=ButtonBank.js.map","import { GeomUtil } from '../util/Geom';\nimport { angleDiff, angleDiffPos, DEGRAD, norm2_xyz, norm_xyz } from '../util/util';\nimport { Permutation, Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nclass Stereochemistry {\n    constructor(meta) {\n        this.meta = meta;\n        this.mol = meta.mol;\n        this.priority = Vec.numberArray(0, this.mol.numAtoms);\n        this.chiralTetra = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n        this.cistransBond = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numBonds);\n        this.squarePlanar = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n    }\n    calculate() {\n        this.isH = Vec.booleanArray(false, this.mol.numAtoms);\n        for (let n = this.mol.numAtoms; n >= 1; n--)\n            this.isH[n - 1] = this.mol.atomElement(n) == 'H';\n        this.buildPriority();\n        this.buildTetraChirality();\n        this.buildBondCisTrans();\n        this.buildPlanarCisTrans();\n        this.buildOctaChirality();\n    }\n    atomPriority(atom) { return this.priority[atom - 1]; }\n    atomTetraChirality(atom) { return this.chiralTetra[atom - 1]; }\n    bondSideStereo(bond) { return this.cistransBond[bond - 1]; }\n    atomPlanarStereo(atom) { return this.squarePlanar[atom - 1]; }\n    getPriorities() { return this.priority.slice(0); }\n    getAtomTetraChiral() { return this.chiralTetra.slice(0); }\n    getBondSideStereo() { return this.cistransBond.slice(0); }\n    static create(meta) {\n        let stereo = new Stereochemistry(meta);\n        stereo.calculate();\n        return stereo;\n    }\n    static rubricTetrahedral(mol, atom) {\n        if (mol.atomAdjCount(atom) < 3 || mol.atomAdjCount(atom) + mol.atomHydrogens(atom) != 4)\n            return null;\n        let adjBonds = mol.atomAdjBonds(atom);\n        let hasWedge = false;\n        for (let n = 0; n < adjBonds.length; n++) {\n            let bt = mol.bondType(adjBonds[n]);\n            if (bt == Molecule.BONDTYPE_UNKNOWN)\n                return null;\n            if (mol.bondFrom(adjBonds[n]) != atom)\n                continue;\n            if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                hasWedge = true;\n        }\n        if (!hasWedge && !mol.is3D())\n            return null;\n        let adj = mol.atomAdjList(atom);\n        let x = [0, 0, 0, 0];\n        let y = [0, 0, 0, 0];\n        let z = [0, 0, 0, 0];\n        let numShort = 0, numWedges = 0;\n        for (let n = 0; n < adjBonds.length; n++) {\n            const bfr = mol.bondFrom(adjBonds[n]), bt = mol.bondType(adjBonds[n]);\n            x[n] = mol.atomX(adj[n]) - mol.atomX(atom);\n            y[n] = mol.atomY(adj[n]) - mol.atomY(atom);\n            if (mol.is3D()) {\n                z[n] = mol.atomZ(adj[n]) - mol.atomZ(atom);\n            }\n            else if (bfr == atom) {\n                if (bt == Molecule.BONDTYPE_INCLINED) {\n                    z[n] = 1;\n                    numWedges++;\n                }\n                else if (bt == Molecule.BONDTYPE_DECLINED) {\n                    z[n] = -1;\n                    numWedges++;\n                }\n            }\n            let dsq = norm_xyz(x[n], y[n], z[n]);\n            if (dsq < 0.01 * 0.01) {\n                numShort++;\n                if (numShort > 1)\n                    return null;\n            }\n        }\n        if (adjBonds.length == 3) {\n            adj.push(0);\n            if (!mol.is3D() && numWedges == 1) {\n                let th0 = Math.atan2(y[0], x[0]), th1 = Math.atan2(y[1], x[1]), th2 = Math.atan2(y[2], x[2]);\n                let i1 = 1, i2 = 2;\n                if (angleDiffPos(th1, th0) > angleDiffPos(th2, th0)) {\n                    i2 = 1;\n                    i1 = 2;\n                }\n                x[0] = 1.5;\n                y[0] = 0;\n                x[1] = -0.75;\n                y[i1] = 1.3;\n                x[2] = -0.75;\n                y[i2] = -1.3;\n            }\n            else {\n                x[3] = -(x[0] + x[1] + x[2]);\n                y[3] = -(y[0] + y[1] + y[2]);\n                z[3] = -(z[0] + z[1] + z[2]);\n                let dsq = norm2_xyz(x[3], y[3], z[3]);\n                if (dsq < 0.01 * 0.01)\n                    return null;\n                let inv = 1.0 / Math.sqrt(dsq);\n                x[3] *= inv;\n                y[3] *= inv;\n                z[3] *= inv;\n            }\n        }\n        let one = 0, two = 0;\n        for (let i = 1; i <= 6; i++) {\n            let a = 0, b = 0;\n            if (i == 1) {\n                a = 1;\n                b = 2;\n            }\n            else if (i == 2) {\n                a = 2;\n                b = 3;\n            }\n            else if (i == 3) {\n                a = 3;\n                b = 1;\n            }\n            else if (i == 4) {\n                a = 2;\n                b = 1;\n            }\n            else if (i == 5) {\n                a = 3;\n                b = 2;\n            }\n            else if (i == 6) {\n                a = 1;\n                b = 3;\n            }\n            let xx = y[a] * z[b] - y[b] * z[a] - x[0];\n            let yy = z[a] * x[b] - z[b] * x[a] - y[0];\n            let zz = x[a] * y[b] - x[b] * y[a] - z[0];\n            if (i <= 3)\n                one += xx * xx + yy * yy + zz * zz;\n            else\n                two += xx * xx + yy * yy + zz * zz;\n        }\n        if (two > one)\n            Vec.swap(adj, 2, 3);\n        return adj;\n    }\n    static rubricSquarePlanar(mol, atom) {\n        if (mol.atomAdjCount(atom) != 4)\n            return null;\n        if (!mol.is3D()) {\n            let ninc = 0, ndec = 0;\n            for (let b of mol.atomAdjBonds(atom)) {\n                let bt = mol.bondType(b);\n                if (bt == Molecule.BONDTYPE_INCLINED)\n                    ninc++;\n                else if (bt == Molecule.BONDTYPE_DECLINED)\n                    ndec++;\n            }\n            if (ninc == 2 && ndec == 2) { }\n            else if (ninc == 2 && ndec == 0) { }\n            else if (ninc == 0 && ndec == 2) { }\n            else\n                return null;\n        }\n        let adj = mol.atomAdjList(atom);\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v1 = Vec.sub(MolUtil.atomVec3(mol, adj[0]), v0);\n        let v2 = Vec.sub(MolUtil.atomVec3(mol, adj[1]), v0);\n        let v3 = Vec.sub(MolUtil.atomVec3(mol, adj[2]), v0);\n        let v4 = Vec.sub(MolUtil.atomVec3(mol, adj[3]), v0);\n        for (let v of [v1, v2, v3, v4]) {\n            let dsq = norm2_xyz(v[0], v[1], v[2]);\n            if (dsq < 0.01 * 0.01)\n                continue;\n            let inv = 1.0 / Math.sqrt(dsq);\n            v[0] *= inv;\n            v[1] *= inv;\n            v[2] *= inv;\n        }\n        let d2 = GeomUtil.dist2(v1, v2), d3 = GeomUtil.dist2(v1, v3), d4 = GeomUtil.dist2(v1, v4);\n        if (d2 > d3 && d2 >= d4) {\n            Vec.swap(adj, 1, 2);\n            [v2, v3] = [v3, v2];\n        }\n        else if (d4 > d3) {\n            Vec.swap(adj, 3, 2);\n            [v3, v4] = [v4, v3];\n        }\n        const MIN_ANGLE = (mol.is3D() ? 80 : 45) * DEGRAD;\n        const MAX_ANGLE = (mol.is3D() ? 100 : 135) * DEGRAD;\n        const th12 = GeomUtil.acuteAngle(v1, v2);\n        if (th12 < MIN_ANGLE || th12 > MAX_ANGLE)\n            return null;\n        const th23 = GeomUtil.acuteAngle(v2, v3);\n        if (th23 < MIN_ANGLE || th23 > MAX_ANGLE)\n            return null;\n        const th34 = GeomUtil.acuteAngle(v3, v4);\n        if (th34 < MIN_ANGLE || th34 > MAX_ANGLE)\n            return null;\n        const th41 = GeomUtil.acuteAngle(v4, v1);\n        if (th41 < MIN_ANGLE || th41 > MAX_ANGLE)\n            return null;\n        return adj;\n    }\n    static rubricBipyrimidal(mol, atom) {\n        const nadj = mol.atomAdjCount(atom);\n        if (nadj != 4 && nadj != 5)\n            return null;\n        let atom2 = 0, atom3 = 0;\n        let adj = mol.atomAdjList(atom), bonds = mol.atomAdjBonds(atom);\n        if (!mol.is3D()) {\n            for (let n = 0; n < adj.length; n++) {\n                if (mol.bondType(bonds[n]) == Molecule.BONDTYPE_INCLINED) {\n                    if (atom2 > 0)\n                        return null;\n                    atom2 = adj[n];\n                }\n                else if (mol.bondType(bonds[n]) == Molecule.BONDTYPE_DECLINED) {\n                    if (atom3 > 0)\n                        return null;\n                    atom3 = adj[n];\n                }\n            }\n            if (atom2 == 0 || atom3 == 0)\n                return null;\n            let th1 = Math.atan2(mol.atomY(atom2) - mol.atomY(atom), mol.atomX(atom2) - mol.atomX(atom));\n            let th2 = Math.atan2(mol.atomY(atom3) - mol.atomY(atom), mol.atomX(atom3) - mol.atomX(atom));\n            if (Math.abs(angleDiff(th1, th2)) > 160 * DEGRAD)\n                return null;\n        }\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v = [[], [], [], [], []];\n        const THRESH = 0.1;\n        for (let n = 0; n < nadj; n++) {\n            v[n] = Vec.sub(MolUtil.atomVec3(mol, adj[n]), v0);\n            const mag = GeomUtil.magnitude(v[n]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[n], 1.0 / mag);\n            if (adj[n] == atom2)\n                v[n][2] += 1;\n            else if (adj[n] == atom3)\n                v[n][2] -= 1;\n        }\n        let atom4 = 0, atom5 = 0;\n        const ANGLE_OPPOSITE = 175 * DEGRAD;\n        for (let i = 0; i < nadj - 1; i++)\n            if (adj[i] != atom2 && adj[i] != atom3) {\n                for (let j = i + 1; j < nadj; j++)\n                    if (adj[j] != atom2 && adj[j] != atom3) {\n                        let theta = GeomUtil.acuteAngle(v[i], v[j]);\n                        if (theta > ANGLE_OPPOSITE) {\n                            if (atom4 != 0)\n                                return null;\n                            atom4 = adj[i];\n                            atom5 = adj[j];\n                        }\n                    }\n            }\n        if (mol.is3D()) {\n            for (let a of adj)\n                if (a != atom4 && a != atom5) {\n                    if (atom2 == 0)\n                        atom2 = a;\n                    else if (atom3 == 0)\n                        atom3 = a;\n                }\n        }\n        if (!atom4 || !atom5)\n            return null;\n        let v1 = null;\n        let v2 = v[adj.indexOf(atom2)];\n        let v3 = v[adj.indexOf(atom3)];\n        let v4 = v[adj.indexOf(atom4)];\n        let v5 = v[adj.indexOf(atom5)];\n        let atom1 = 0;\n        if (nadj == 5) {\n            for (let n = 0; n < nadj; n++)\n                if (adj[n] != atom2 && adj[n] != atom3 && adj[n] != atom4 && adj[n] != atom5) {\n                    atom1 = adj[n];\n                    v1 = v[n];\n                    break;\n                }\n        }\n        else {\n            v1 = [0, 0, 0];\n            v1 = Vec.sub(v1, v2);\n            v1 = Vec.sub(v1, v3);\n            const mag = GeomUtil.magnitude(v1);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v1, 1.0 / mag);\n        }\n        let v45 = Vec.sub(v5, v4);\n        let cross = GeomUtil.crossProduct(v45, v1);\n        let dsq2 = GeomUtil.dist2(cross, v2), dsq3 = GeomUtil.dist2(cross, v3);\n        if (dsq2 < dsq3)\n            return [atom1, atom2, atom3, atom4, atom5];\n        else\n            return [atom1, atom2, atom3, atom5, atom4];\n    }\n    static rubricOctahedral(mol, atom) {\n        const nadj = mol.atomAdjCount(atom);\n        if (nadj != 5 && nadj != 6)\n            return null;\n        let adj = mol.atomAdjList(atom), bonds = mol.atomAdjBonds(atom);\n        if (nadj == 5) {\n            adj.push(0);\n            bonds.push(0);\n        }\n        if (!mol.is3D()) {\n            let numWedges = 0;\n            for (let b of bonds)\n                if (b > 0) {\n                    const bt = mol.bondType(b);\n                    if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                        numWedges++;\n                }\n            if ((nadj == 5 && numWedges < 1) || (nadj == 6 && numWedges < 2))\n                return null;\n        }\n        const THRESH = 0.1;\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v = [[], [], [], [], [], []];\n        for (let n = 0; n < nadj; n++) {\n            v[n] = MolUtil.atomVec3(mol, adj[n]);\n            Vec.subFromArray(v[n], v0);\n            let mag = GeomUtil.magnitude(v[n]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[n], 1 / mag);\n            let bt = mol.bondType(bonds[n]);\n            if (bt == Molecule.BONDTYPE_INCLINED) {\n                if (mol.bondFrom(bonds[n]) == atom)\n                    v[n][2] += 1;\n                else\n                    v[n][2] -= 1;\n            }\n            else if (bt == Molecule.BONDTYPE_DECLINED) {\n                if (mol.bondFrom(bonds[n]) == atom)\n                    v[n][2] -= 1;\n                else\n                    v[n][2] += 1;\n            }\n        }\n        if (nadj == 5) {\n            v[5] = [0, 0, 0];\n            for (let n = 0; n < 5; n++)\n                Vec.subFromArray(v[5], v[n]);\n            let mag = GeomUtil.magnitude(v[5]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[5], 1 / mag);\n        }\n        let slots = [-1, -1, -1, -1, 0, 1];\n        let bestOpposite = GeomUtil.acuteAngle(v[0], v[1]);\n        for (let i = 0; i < 5; i++)\n            for (let j = (i == 0 ? 2 : i + 1); j < 6; j++) {\n                let theta = GeomUtil.acuteAngle(v[i], v[j]);\n                if (theta > bestOpposite) {\n                    slots[4] = i;\n                    slots[5] = j;\n                    bestOpposite = theta;\n                }\n            }\n        let axial = Vec.sub(v[slots[5]], v[slots[4]]);\n        let bestOrthogonal = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < 6; n++)\n            if (n != slots[4] && n != slots[5]) {\n                let delta = Math.abs((90 * DEGRAD) - GeomUtil.acuteAngle(v[n], axial));\n                if (delta < bestOrthogonal) {\n                    slots[0] = n;\n                    bestOrthogonal = delta;\n                }\n            }\n        for (let s = 1; s <= 2; s++) {\n            let cross = GeomUtil.crossProduct(axial, v[slots[s - 1]]);\n            let bestOrient = Number.POSITIVE_INFINITY;\n            for (let n = 0; n < 6; n++) {\n                if (n == slots[4] || n == slots[5] || n == slots[0] || n == slots[1])\n                    continue;\n                let delta = GeomUtil.acuteAngle(v[n], cross);\n                if (delta < bestOrient) {\n                    slots[s] = n;\n                    bestOrient = delta;\n                }\n            }\n        }\n        for (let n = 0; n < 6; n++)\n            if (slots.indexOf(n) < 0) {\n                slots[3] = n;\n                break;\n            }\n        let rubric = [0, 0, 0, 0, 0, 0];\n        for (let n = 0; n < 6; n++)\n            rubric[n] = slots[n] < 0 ? 0 : adj[slots[n]];\n        return rubric;\n    }\n    static rubricBondSides(mol, bond) {\n        const bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        const nfr = mol.atomAdjCount(bfr), nto = mol.atomAdjCount(bto);\n        if (nfr < 2 || nfr > 3 || nto < 2 || nto > 3)\n            return null;\n        let adj1 = mol.atomAdjList(bfr), adj2 = mol.atomAdjList(bto);\n        let f1 = 0, f2 = 0, t1 = 0, t2 = 0;\n        for (let i = 0; i < adj1.length; i++) {\n            if (adj1[i] != bto) {\n                if (f1 == 0)\n                    f1 = adj1[i];\n                else\n                    f2 = adj1[i];\n            }\n        }\n        for (let i = 0; i < adj2.length; i++) {\n            if (adj2[i] != bfr) {\n                if (t1 == 0)\n                    t1 = adj2[i];\n                else\n                    t2 = adj2[i];\n            }\n        }\n        if (f1 > 0 && f2 > 0 && mol.atomElement(f1) == 'H') {\n            let f = f1;\n            f1 = f2;\n            f2 = f;\n        }\n        if (t1 > 0 && t2 > 0 && mol.atomElement(t1) == 'H') {\n            let t = t1;\n            t1 = t2;\n            t2 = t;\n        }\n        let vfr = MolUtil.atomVec3(mol, bfr), vto = MolUtil.atomVec3(mol, bto);\n        let vbond = Vec.sub(vto, vfr);\n        let vf1 = Vec.sub(MolUtil.atomVec3(mol, f1), vfr), vt1 = Vec.sub(MolUtil.atomVec3(mol, t1), vto);\n        const THRESHSQ = 0.1 * 0.1;\n        let xf1 = GeomUtil.crossProduct(vf1, vbond);\n        if (GeomUtil.magnitude2(xf1) < THRESHSQ)\n            return null;\n        let xt1 = GeomUtil.crossProduct(vt1, vbond);\n        if (GeomUtil.magnitude2(xt1) < THRESHSQ)\n            return null;\n        let xf1N = Vec.neg(xf1);\n        let keepF1T1 = GeomUtil.dist2(xf1, xt1) < GeomUtil.dist2(xf1N, xt1);\n        let keepF2T1 = keepF1T1, keepF1T2 = keepF1T1, keepF2T2 = keepF1T1;\n        let vf2 = null, vt2 = null, xf2 = null, xt2 = null, xf2N = null;\n        if (f2 > 0) {\n            vf2 = Vec.sub(MolUtil.atomVec3(mol, f2), vfr);\n            if (GeomUtil.magnitude2(vf2) < THRESHSQ) {\n                if (mol.atomElement(f2) != 'H')\n                    return null;\n            }\n            else {\n                xf2 = GeomUtil.crossProduct(vf2, vbond);\n                if (GeomUtil.magnitude2(xf2) < THRESHSQ)\n                    return null;\n                xf2N = Vec.neg(xf2);\n                keepF2T1 = GeomUtil.dist2(xf2, xt1) > GeomUtil.dist2(xf2N, xt1);\n            }\n        }\n        if (t2 > 0) {\n            vt2 = Vec.sub(MolUtil.atomVec3(mol, t2), vto);\n            if (GeomUtil.magnitude2(vt2) < THRESHSQ) {\n                if (mol.atomElement(t2) != 'H')\n                    return null;\n            }\n            else {\n                xt2 = GeomUtil.crossProduct(vt2, vbond);\n                if (GeomUtil.magnitude2(xt2) < THRESHSQ)\n                    return null;\n                keepF1T2 = GeomUtil.dist2(xf1, xt2) > GeomUtil.dist2(xf1N, xt2);\n            }\n        }\n        if (xf2 != null && xt2 != null) {\n            keepF2T2 = GeomUtil.dist2(xf2, xt2) < GeomUtil.dist2(xf2N, xt2);\n        }\n        if (keepF1T1 && keepF2T1 && keepF1T2 && keepF2T2)\n            return [f1, f2, t1, t2];\n        if (!keepF1T1 && !keepF2T1 && !keepF1T2 && !keepF2T2)\n            return [f1, f2, t2, t1];\n        return null;\n    }\n    buildTetraChirality() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let haswedge = Vec.booleanArray(false, na);\n        for (let n = 1; n <= nb; n++) {\n            if (mol.bondType(n) == Molecule.BONDTYPE_INCLINED || mol.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                haswedge[mol.bondFrom(n) - 1] = true;\n        }\n        skip_atom: for (let n = 1; n <= na; n++) {\n            this.chiralTetra[n - 1] = Stereochemistry.STEREO_NONE;\n            let adj = mol.atomAdjList(n);\n            if (!(adj.length == 4 || (adj.length == 3 && mol.atomHydrogens(n) == 1)))\n                continue;\n            if (adj.length == 3 && (this.isH[adj[0] - 1] || this.isH[adj[1] - 1] || this.isH[adj[2] - 1]))\n                continue;\n            for (let i = 0; i < adj.length - 1; i++) {\n                for (let j = i + 1; j < adj.length; j++) {\n                    if (this.priority[adj[i] - 1] == this.priority[adj[j] - 1])\n                        continue skip_atom;\n                }\n            }\n            if (!haswedge[n - 1] && !mol.is3D()) {\n                this.chiralTetra[n - 1] = Stereochemistry.STEREO_UNKNOWN;\n                continue;\n            }\n            let rubric = Stereochemistry.rubricTetrahedral(mol, n);\n            if (rubric == null)\n                continue;\n            let pri = [\n                rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1],\n                rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1],\n                rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1],\n                rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1]\n            ];\n            pri = Vec.idxSort(pri);\n            let parity = Permutation.parityIdentity(pri);\n            this.chiralTetra[n - 1] = (parity & 1) == 0 ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildBondCisTrans() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let sf = [0, 0], st = [0, 0];\n        let ringMask = Vec.booleanArray(false, nb);\n        for (let rsz = 3; rsz <= 7; rsz++) {\n            for (let r of mol.findRingsOfSize(rsz)) {\n                for (let n = 0; n < r.length; n++) {\n                    let b = mol.findBond(r[n], r[n < r.length - 1 ? n + 1 : 0]);\n                    ringMask[b - 1] = true;\n                }\n            }\n        }\n        skip_bond: for (let n = 1; n <= nb; n++) {\n            this.cistransBond[n - 1] = Stereochemistry.STEREO_NONE;\n            if (mol.bondOrder(n) != 2 || this.meta.isBondAromatic(n) || ringMask[n - 1])\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let adj1 = mol.atomAdjList(bfr), adj2 = mol.atomAdjList(bto);\n            if (adj1.length <= 1 || adj2.length <= 1 || adj1.length > 3 || adj2.length > 3)\n                continue;\n            if (adj1.length == 2 && (this.isH[adj1[0] - 1] || this.isH[adj1[1] - 1]))\n                continue;\n            if (adj2.length == 2 && (this.isH[adj2[0] - 1] || this.isH[adj2[1] - 1]))\n                continue;\n            for (let i = 0; i < adj1.length - 1; i++)\n                if (adj1[i] != bfr)\n                    for (let j = i + 1; j < adj1.length; j++)\n                        if (adj1[j] != bfr)\n                            if (this.priority[adj1[i] - 1] == this.priority[adj1[j] - 1])\n                                continue skip_bond;\n            for (let i = 0; i < adj2.length - 1; i++)\n                if (adj2[i] != bto)\n                    for (let j = i + 1; j < adj2.length; j++)\n                        if (adj2[j] != bto)\n                            if (this.priority[adj2[i] - 1] == this.priority[adj2[j] - 1])\n                                continue skip_bond;\n            if (mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN) {\n                this.cistransBond[n - 1] = Stereochemistry.STEREO_UNKNOWN;\n                continue;\n            }\n            let rubric = Stereochemistry.rubricBondSides(mol, n);\n            if (rubric == null)\n                continue;\n            let pf1 = rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1];\n            let pf2 = rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1];\n            let pt1 = rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1];\n            let pt2 = rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1];\n            this.cistransBond[n - 1] = ((pf1 < pf2) == (pt1 < pt2)) ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildPlanarCisTrans() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        skip_atom: for (let n = 1; n <= na; n++) {\n            this.squarePlanar[n - 1] = Stereochemistry.STEREO_NONE;\n            if (mol.atomAdjCount(n) != 4)\n                continue;\n            if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(n)] < 3)\n                continue;\n            let adj = mol.atomAdjList(n);\n            for (let i = 0; i < adj.length; i++) {\n                let count = 0;\n                for (let j = 0; j < adj.length; j++) {\n                    if (this.priority[adj[i] - 1] == this.priority[adj[j] - 1])\n                        count++;\n                }\n                if (count >= 3)\n                    continue skip_atom;\n            }\n            let rubric = Stereochemistry.rubricSquarePlanar(mol, n);\n            if (rubric == null)\n                continue;\n            let pri = [\n                rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1],\n                rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1],\n                rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1],\n                rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1]\n            ];\n            let parity = Permutation.parityOrder(pri);\n            this.squarePlanar[n - 1] = (parity & 1) == 0 ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildOctaChirality() {\n    }\n    buildPriority() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let cipgr = [];\n        for (let n = 0; n < na; n++)\n            cipgr.push(Vec.numberArray(-1, mol.atomHydrogens(n + 1)));\n        for (let n = 1; n <= nb; n++) {\n            let bf = mol.bondFrom(n) - 1, bt = mol.bondTo(n) - 1, bo = mol.bondOrder(n);\n            if (this.meta.isBondAromatic(n))\n                bo = 2;\n            if (bf != bt)\n                for (let i = 0; i < bo; i++) {\n                    cipgr[bf].push(bt);\n                    cipgr[bt].push(bf);\n                }\n        }\n        this.priority = Vec.numberArray(0, na);\n        let anyActualH = false;\n        for (let n = 0; n < na; n++) {\n            this.priority[n] = mol.atomicNumber(n + 1);\n            if (this.priority[n] == 1)\n                anyActualH = true;\n        }\n        let prigr = [];\n        for (let n = 0; n < na; n++)\n            prigr.push([]);\n        while (true) {\n            for (let n = 0; n < na; n++) {\n                let cip = cipgr[n], pri = [];\n                for (let i = 0; i < cip.length; i++)\n                    pri.push(cip[i] < 0 ? 1 : this.priority[cip[i]]);\n                Vec.sort(pri);\n                prigr[n] = pri;\n            }\n            let groups = this.sortAndGroup(this.priority);\n            let nextpri = anyActualH ? 0 : 1;\n            let repartitioned = false;\n            for (let n = 0; n < groups.length; n++) {\n                let g = groups[n];\n                for (let p = 0; p < g.length - 1;) {\n                    const i1 = g[p], i2 = g[p + 1];\n                    let cmp = 0, sz = Math.max(prigr[i1].length, prigr[i2].length);\n                    for (let i = 0; i < sz; i++) {\n                        let v1 = i < prigr[i1].length ? prigr[i1][i] : 0, v2 = i < prigr[i2].length ? prigr[i2][i] : 0;\n                        if (v1 < v2) {\n                            cmp = -1;\n                            break;\n                        }\n                        if (v1 > v2) {\n                            cmp = 1;\n                            break;\n                        }\n                    }\n                    if (cmp > 0) {\n                        g[p] = i2;\n                        g[p + 1] = i1;\n                        if (p > 0)\n                            p--;\n                    }\n                    else\n                        p++;\n                }\n                for (let i = 0; i < g.length; i++) {\n                    if (i == 0)\n                        nextpri++;\n                    else if (prigr[g[i]].length != prigr[g[i - 1]].length) {\n                        nextpri++;\n                        repartitioned = true;\n                    }\n                    else {\n                        for (let j = 0; j < prigr[g[i]].length; j++)\n                            if (prigr[g[i]][j] != prigr[g[i - 1]][j]) {\n                                nextpri++;\n                                repartitioned = true;\n                                break;\n                            }\n                    }\n                    this.priority[g[i]] = nextpri;\n                }\n            }\n            if (!repartitioned)\n                break;\n        }\n    }\n    sortAndGroup(val) {\n        let uset = new Set();\n        for (let v of val)\n            uset.add(v);\n        let unique = Array.from(uset);\n        Vec.sort(unique);\n        let ret = [];\n        for (let n = 0; n < unique.length; n++)\n            ret.push([]);\n        for (let n = 0; n < val.length; n++) {\n            let grp = unique.indexOf(val[n]);\n            ret[grp].push(n);\n        }\n        return ret;\n    }\n}\nStereochemistry.STEREO_NONE = 0;\nStereochemistry.STEREO_POS = 1;\nStereochemistry.STEREO_NEG = 2;\nStereochemistry.STEREO_UNKNOWN = 3;\nStereochemistry.STEREO_BROKEN = 4;\nStereochemistry.RUBRIC_EQUIV_TETRA = [\n    [0, 1, 2, 3], [0, 2, 3, 1], [0, 3, 1, 2], [1, 0, 3, 2], [1, 2, 0, 3], [1, 3, 2, 0],\n    [2, 0, 1, 3], [2, 1, 3, 0], [2, 3, 0, 1], [3, 0, 2, 1], [3, 1, 0, 2], [3, 2, 1, 0]\n];\nStereochemistry.RUBRIC_EQUIV_SIDES = [\n    [0, 1, 2, 3], [1, 0, 3, 2], [2, 3, 0, 1], [3, 2, 1, 0]\n];\nStereochemistry.RUBRIC_EQUIV_SQUARE = [\n    [0, 1, 2, 3], [0, 3, 2, 1], [1, 2, 3, 0], [1, 0, 3, 2],\n    [2, 1, 0, 3], [2, 3, 0, 1], [3, 2, 1, 0], [3, 0, 1, 2]\n];\nStereochemistry.RUBRIC_EQUIV_BIPY = [\n    [0, 1, 2, 3, 4], [1, 2, 0, 3, 4], [2, 0, 1, 3, 4],\n    [0, 2, 1, 4, 3], [1, 0, 2, 4, 3], [2, 1, 0, 4, 3],\n];\nStereochemistry.RUBRIC_EQUIV_OCTA = [\n    [0, 1, 2, 3, 4, 5], [0, 3, 2, 1, 5, 4], [0, 4, 2, 5, 3, 1], [0, 5, 2, 4, 1, 3],\n    [1, 0, 3, 2, 5, 4], [1, 2, 3, 0, 4, 5], [1, 4, 3, 5, 0, 2], [1, 5, 3, 4, 2, 0],\n    [2, 1, 0, 3, 5, 4], [2, 3, 0, 1, 4, 5], [2, 4, 0, 5, 1, 3], [2, 5, 0, 4, 3, 1],\n    [3, 0, 1, 2, 4, 5], [3, 2, 1, 0, 5, 4], [3, 4, 1, 5, 2, 0], [3, 5, 1, 4, 0, 2],\n    [4, 0, 5, 2, 1, 3], [4, 1, 5, 3, 2, 0], [4, 2, 5, 0, 3, 1], [4, 3, 5, 1, 0, 2],\n    [5, 0, 4, 2, 3, 1], [5, 1, 4, 3, 0, 2], [5, 2, 4, 0, 1, 3], [5, 3, 4, 1, 2, 0]\n];\nexport { Stereochemistry };\n//# sourceMappingURL=Stereochemistry.js.map","import { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { DotPath } from './DotPath';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nimport { Stereochemistry } from './Stereochemistry';\nclass MetaMolecule {\n    constructor(mol) {\n        this.mol = mol;\n        this.atomArom = null;\n        this.bondArom = null;\n        this.rubricTetra = null;\n        this.rubricSquare = null;\n        this.rubricBipy = null;\n        this.rubricOcta = null;\n        this.rubricSides = null;\n        this.hash = null;\n        this.heavyHash = null;\n        this.uniqueElements = null;\n        this.dots = null;\n        this.piAtom = null;\n    }\n    calculateStrictAromaticity() {\n        let mol = this.mol;\n        this.atomArom = Vec.booleanArray(false, mol.numAtoms);\n        this.bondArom = Vec.booleanArray(false, mol.numBonds);\n        let rings = mol.findRingsOfSize(6);\n        const nr = rings.length;\n        if (nr == 0)\n            return;\n        this.ensurePiAtoms();\n        let mask = Vec.booleanArray(false, nr);\n        for (let n = 0; n < nr; n++) {\n            for (let i = 0; i < rings[n].length; i++) {\n                let a = rings[n][i];\n                if (!this.piAtom[a - 1]) {\n                    mask[n] = true;\n                    break;\n                }\n                let b = mol.findBond(a, rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                let bo = mol.bondOrder(b);\n                if (bo != 1 && bo != 2) {\n                    mask[n] = true;\n                    break;\n                }\n            }\n        }\n        while (true) {\n            let anyChange = false;\n            for (let n = 0; n < nr; n++)\n                if (!mask[n]) {\n                    let phase1 = true, phase2 = true;\n                    for (let i = 0; i < rings[n].length; i++) {\n                        let b = mol.findBond(rings[n][i], rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                        if (this.bondArom[b - 1])\n                            continue;\n                        let bo = mol.bondOrder(b);\n                        phase1 = phase1 && bo == (2 - (i & 1));\n                        phase2 = phase2 && bo == (1 + (i & 1));\n                    }\n                    if (!phase1 && !phase2)\n                        continue;\n                    for (let i = 0; i < rings[n].length; i++) {\n                        let b = mol.findBond(rings[n][i], rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                        this.bondArom[b - 1] = true;\n                    }\n                    mask[n] = true;\n                    anyChange = true;\n                }\n            if (!anyChange)\n                break;\n        }\n        for (let n = 0; n < this.bondArom.length; n++)\n            if (this.bondArom[n]) {\n                this.atomArom[mol.bondFrom(n + 1) - 1] = true;\n                this.atomArom[mol.bondTo(n + 1) - 1] = true;\n            }\n    }\n    calculateRelaxedAromaticity() {\n        let mol = this.mol;\n        this.atomArom = Vec.booleanArray(false, mol.numAtoms);\n        this.bondArom = Vec.booleanArray(false, mol.numBonds);\n        this.ensurePiAtoms();\n        const na = mol.numAtoms, nb = mol.numBonds;\n        let electrons = Vec.numberArray(0, na);\n        let exocyclic = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++) {\n            let atno = mol.atomicNumber(n);\n            electrons[n - 1] = (Chemistry.ELEMENT_BLOCKS[atno] == 2 ? Chemistry.ELEMENT_VALENCE[atno] : 0) - mol.atomCharge(n) - mol.atomHydrogens(n)\n                - mol.atomUnpaired(n);\n        }\n        for (let n = 1; n <= nb; n++) {\n            const bfr = mol.bondFrom(n), bto = mol.bondTo(n), bo = mol.bondOrder(n);\n            electrons[bfr - 1] -= bo;\n            electrons[bto - 1] -= bo;\n            if (bo == 2) {\n                const rblk1 = mol.atomRingBlock(bfr), rblk2 = mol.atomRingBlock(bto);\n                if (rblk1 > 0 && rblk1 != rblk2)\n                    exocyclic[bfr - 1] = true;\n                if (rblk2 > 0 && rblk2 != rblk1)\n                    exocyclic[bto - 1] = true;\n            }\n        }\n        let rings = [];\n        for (let rsz = 3; rsz <= 7; rsz++)\n            for (let rng of mol.findRingsOfSize(rsz)) {\n                let valid = true;\n                for (let n = 0; n < rsz; n++) {\n                    const a = rng[n];\n                    if (!this.piAtom[a - 1] && electrons[a - 1] < 2 && !exocyclic[a - 1]) {\n                        valid = false;\n                        break;\n                    }\n                    let b = mol.findBond(a, rng[n < rsz - 1 ? n + 1 : 0]);\n                    let bo = mol.bondOrder(b);\n                    if (bo != 1 && bo != 2) {\n                        valid = false;\n                        break;\n                    }\n                }\n                if (valid)\n                    rings.push(rng);\n            }\n        while (rings.length > 0) {\n            let anyChange = false;\n            for (let n = 0; n < rings.length; n++) {\n                let r = rings[n];\n                let paths = [0];\n                for (let i = 0; i < r.length; i++) {\n                    const a = r[i];\n                    const b1 = mol.findBond(a, r[i < r.length - 1 ? i + 1 : 0]);\n                    const b2 = mol.findBond(a, r[i > 0 ? i - 1 : r.length - 1]);\n                    if (this.bondArom[b1 - 1]) {\n                        for (let j = paths.length - 1; j >= 0; j--) {\n                            const e = paths[j] + 2;\n                            if (paths.indexOf(e) < 0)\n                                paths = Vec.append(paths, e);\n                        }\n                    }\n                    else if (mol.bondOrder(b1) == 2)\n                        Vec.addTo(paths, 2);\n                    else if (electrons[a - 1] >= 2 && mol.bondOrder(b1) == 1 && mol.bondOrder(b2) == 1)\n                        Vec.addTo(paths, 2);\n                }\n                let arom = false;\n                for (let e of paths) {\n                    if (e == 2 && r.length == 3) {\n                        arom = true;\n                        break;\n                    }\n                    if (e == 6) {\n                        arom = true;\n                        break;\n                    }\n                }\n                if (arom) {\n                    for (let i = 0; i < r.length; i++) {\n                        let a = r[i], b = mol.findBond(a, r[i < r.length - 1 ? i + 1 : 0]);\n                        this.atomArom[a - 1] = true;\n                        this.bondArom[b - 1] = true;\n                    }\n                    rings.splice(n, 1);\n                    n--;\n                    anyChange = true;\n                }\n            }\n            if (!anyChange)\n                break;\n        }\n    }\n    calculateStereoRubric() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        this.rubricTetra = new Array(na);\n        this.rubricSquare = new Array(na);\n        this.rubricBipy = new Array(na);\n        this.rubricOcta = new Array(na);\n        this.rubricSides = new Array(nb);\n        for (let n = 1; n <= na; n++) {\n            let blk = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(n)];\n            let adjc = mol.atomAdjCount(n), hc = mol.atomHydrogens(n);\n            let ninc = 0, ndec = 0;\n            for (let b of mol.atomAdjBonds(n)) {\n                if (mol.bondType(b) == Molecule.BONDTYPE_INCLINED && mol.bondFrom(b) == n)\n                    ninc++;\n                else if (mol.bondType(b) == Molecule.BONDTYPE_DECLINED && mol.bondFrom(b) == n)\n                    ndec++;\n            }\n            if (blk == 2 && ((adjc == 3 && hc == 1) || (adjc == 4 && hc == 0))) {\n                this.rubricTetra[n - 1] = Stereochemistry.rubricTetrahedral(mol, n);\n            }\n            else if (blk >= 3 && adjc == 4 && ninc == 1 && ndec == 1) {\n                this.rubricTetra[n - 1] = Stereochemistry.rubricTetrahedral(mol, n);\n            }\n            if (blk >= 3 && adjc == 4 && hc == 0) {\n                this.rubricSquare[n - 1] = Stereochemistry.rubricSquarePlanar(mol, n);\n            }\n            if (blk >= 3 && (adjc == 4 || adjc == 5) && hc == 0) {\n                this.rubricBipy[n - 1] = Stereochemistry.rubricBipyrimidal(mol, n);\n            }\n            if (blk >= 3 && (adjc == 5 || adjc == 6) && hc == 0) {\n                this.rubricOcta[n - 1] = Stereochemistry.rubricOctahedral(mol, n);\n            }\n            else if (blk == 2 && adjc == 6 && hc == 0) {\n                this.rubricOcta[n - 1] = Stereochemistry.rubricOctahedral(mol, n);\n            }\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondOrder(n) != 2 || mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN || this.isBondAromatic(n))\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let blk1 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bfr)];\n            let blk2 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bto)];\n            let adjc1 = mol.atomAdjCount(bfr), hc1 = mol.atomHydrogens(bfr);\n            let adjc2 = mol.atomAdjCount(bto), hc2 = mol.atomHydrogens(bto);\n            if (blk1 == 2 && blk2 == 2 && (adjc1 + hc1 == 3 && hc1 <= 1) && (adjc2 + hc2 == 3 && hc2 <= 1)) {\n                this.rubricSides[n - 1] = Stereochemistry.rubricBondSides(mol, n);\n            }\n        }\n    }\n    removeHydrogens() {\n        let mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let atomMask = Vec.booleanArray(true, na), bondMask = Vec.booleanArray(true, nb);\n        for (let n = 1; n <= na; n++)\n            if (MolUtil.boringHydrogen(mol, n)) {\n                atomMask[n - 1] = false;\n                bondMask[mol.atomAdjBonds(n)[0] - 1] = false;\n            }\n        if (Vec.allTrue(atomMask))\n            return;\n        mol = MolUtil.subgraphMask(mol, atomMask);\n        if (this.atomArom)\n            this.atomArom = Vec.maskGet(this.atomArom, atomMask);\n        if (this.bondArom)\n            this.bondArom = Vec.maskGet(this.bondArom, bondMask);\n        if (this.rubricTetra || this.rubricSquare || this.rubricBipy || this.rubricOcta || this.rubricSides) {\n            if (this.rubricTetra)\n                this.rubricTetra = Vec.maskGet(this.rubricTetra, atomMask);\n            if (this.rubricSquare)\n                this.rubricSquare = Vec.maskGet(this.rubricSquare, atomMask);\n            if (this.rubricBipy)\n                this.rubricBipy = Vec.maskGet(this.rubricBipy, atomMask);\n            if (this.rubricOcta)\n                this.rubricOcta = Vec.maskGet(this.rubricOcta, atomMask);\n            if (this.rubricSides)\n                this.rubricSides = Vec.maskGet(this.rubricSides, bondMask);\n            let atomMap = Vec.prepend(Vec.add(Vec.maskMap(atomMask), 1), 0);\n            for (let n = 0; n < Vec.len(this.rubricTetra); n++)\n                if (this.rubricTetra[n])\n                    this.rubricTetra[n] = Vec.idxGet(atomMap, this.rubricTetra[n]);\n            for (let n = 0; n < Vec.len(this.rubricSquare); n++)\n                if (this.rubricSquare[n])\n                    this.rubricSquare[n] = Vec.idxGet(atomMap, this.rubricSquare[n]);\n            for (let n = 0; n < Vec.len(this.rubricBipy); n++)\n                if (this.rubricBipy[n])\n                    this.rubricBipy[n] = Vec.idxGet(atomMap, this.rubricBipy[n]);\n            for (let n = 0; n < Vec.len(this.rubricOcta); n++)\n                if (this.rubricOcta[n])\n                    this.rubricOcta[n] = Vec.idxGet(atomMap, this.rubricOcta[n]);\n            for (let n = 0; n < Vec.len(this.rubricSides); n++)\n                if (this.rubricSides[n])\n                    this.rubricSides[n] = Vec.idxGet(atomMap, this.rubricSides[n]);\n        }\n    }\n    calculateSkeletonHash() {\n        if (MetaMolecule.skeletonHash == null)\n            throw 'Skeleton hash not available.';\n        this.hash = MetaMolecule.skeletonHash(this.mol);\n    }\n    calculateHeavyHash() {\n        let anyH = false;\n        for (let n = 1; n <= this.mol.numAtoms; n++)\n            if (this.mol.atomElement(n) == 'H') {\n                anyH = true;\n                break;\n            }\n        if (!anyH) {\n            this.heavyHash = this.getSkeletonHash();\n            return;\n        }\n        let hvy = this.mol.clone();\n        for (let n = hvy.numAtoms; n >= 1; n--)\n            if (hvy.atomElement(n) == 'H')\n                hvy.deleteAtomAndBonds(n);\n        this.heavyHash = MetaMolecule.skeletonHash(hvy);\n    }\n    isAtomAromatic(atom) {\n        return this.atomArom == null ? false : this.atomArom[atom - 1];\n    }\n    isBondAromatic(bond) {\n        return this.bondArom == null ? false : this.bondArom[bond - 1];\n    }\n    bondOrderArom(bond) {\n        return this.bondArom != null && this.bondArom[bond - 1] ? -1 : this.mol.bondOrder(bond);\n    }\n    getAtomAromaticity() {\n        return this.atomArom == null ? null : this.atomArom.slice(0);\n    }\n    getBondAromaticity() {\n        return this.bondArom == null ? null : this.bondArom.slice(0);\n    }\n    getSkeletonHash() {\n        if (this.hash == null)\n            this.calculateSkeletonHash();\n        return this.hash;\n    }\n    getHeavyHash() {\n        if (this.heavyHash == null)\n            this.calculateHeavyHash();\n        return this.heavyHash;\n    }\n    getDotPath() {\n        if (this.dots == null)\n            this.dots = new DotPath(this.mol);\n        return this.dots;\n    }\n    getUniqueElements() {\n        if (this.uniqueElements == null) {\n            this.uniqueElements = [];\n            for (let n = 1; n <= this.mol.numAtoms; n++) {\n                let el = this.mol.atomElement(n);\n                if (this.uniqueElements.indexOf(el) < 0)\n                    this.uniqueElements.push(el);\n            }\n        }\n        return this.uniqueElements;\n    }\n    equivalentTo(other, timeout = 1000) {\n        if (MetaMolecule.isomorphMatch == null)\n            throw 'Isomorph search unavailable.';\n        if (this.mol.numAtoms != other.mol.numAtoms || this.mol.numBonds != other.mol.numBonds)\n            return false;\n        if (this.hash == null)\n            this.calculateSkeletonHash();\n        if (other.hash == null)\n            other.calculateSkeletonHash();\n        if (this.hash != other.hash)\n            return false;\n        if (this.mol.compareTo(other.mol) == 0)\n            return true;\n        let uniq1 = this.getUniqueElements(), uniq2 = other.getUniqueElements();\n        for (let n = 0; n < uniq1.length; n++) {\n            if (!uniq2.includes(uniq1[n]))\n                return false;\n        }\n        return MetaMolecule.isomorphMatch(this, other, timeout);\n    }\n    static createRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    static createStrict(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStrictAromaticity();\n        return meta;\n    }\n    static createStrictRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStrictAromaticity();\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    static createRelaxed(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateRelaxedAromaticity();\n        return meta;\n    }\n    static createRelaxedRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateRelaxedAromaticity();\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    ensurePiAtoms() {\n        if (this.piAtom != null)\n            return;\n        this.piAtom = Vec.booleanArray(false, this.mol.numAtoms);\n        for (let n = 1; n <= this.mol.numBonds; n++)\n            if (this.mol.bondOrder(n) == 2) {\n                {\n                    this.piAtom[this.mol.bondFrom(n) - 1] = true;\n                    this.piAtom[this.mol.bondTo(n) - 1] = true;\n                }\n            }\n    }\n}\nMetaMolecule.skeletonHash = null;\nMetaMolecule.isomorphMatch = null;\nexport { MetaMolecule };\n//# sourceMappingURL=MetaMolecule.js.map","import { Chemistry } from '../data/Chemistry';\nimport { MetaMolecule } from '../data/MetaMolecule';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { Permutation, Vec } from '../util/Vec';\nlet crc_table = [];\nfunction make_crc_table() {\n    if (crc_table.length > 0)\n        return;\n    for (let n = 0; n < 256; n++) {\n        let c = n;\n        for (let i = 0; i < 8; i++)\n            if ((c & 1) != 0)\n                c = 0xEDB88320 ^ (c >>> 1);\n            else\n                c = (c >>> 1);\n        crc_table.push(c);\n    }\n}\nconst BOOT_CRC = 0xFFFFFFFF;\nfunction start_crc() { return BOOT_CRC; }\nfunction feed_crc(crc, byte) {\n    let idx = (crc ^ byte) & 0xFF;\n    return crc_table[idx] ^ (crc >>> 8);\n}\nfunction end_crc(crc) { return crc ^ BOOT_CRC; }\nclass CircularFingerprints {\n    constructor(meta, kind) {\n        this.meta = meta;\n        this.kind = kind;\n        this.hookApplyNewFP = null;\n        this.hookConsiderNewFP = null;\n        this.identity = [];\n        this.resolvedChiral = [];\n        this.atomGroup = [];\n        this.fplist = [];\n        this.amask = [];\n        this.atomAdj = [];\n        this.bondAdj = [];\n        make_crc_table();\n    }\n    calculate() {\n        let mol = this.meta.mol, na = mol.numAtoms;\n        this.identity = Vec.numberArray(0, na);\n        this.resolvedChiral = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++)\n            this.atomGroup.push([]);\n        this.amask = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++) {\n            this.amask[n] = mol.atomicNumber(n + 1) >= 2 && !MolUtil.hasAbbrev(mol, n + 1);\n            this.atomAdj.push([]);\n            this.bondAdj.push([]);\n        }\n        for (let n = 0; n < na; n++) {\n            if (!this.amask[n])\n                continue;\n            this.atomAdj[n] = mol.atomAdjList(n + 1);\n            this.bondAdj[n] = mol.atomAdjBonds(n + 1);\n            for (let i = this.atomAdj[n].length - 1; i >= 0; i--)\n                if (!this.amask[this.atomAdj[n][i] - 1]) {\n                    this.atomAdj[n].splice(i, 1);\n                    this.bondAdj[n].splice(i, 1);\n                }\n        }\n        for (let n = 0; n < na; n++)\n            if (this.amask[n]) {\n                this.identity[n] = this.initialIdentityECFP(n + 1);\n                this.atomGroup[n] = [n + 1];\n                this.applyNewFP({ hashCode: this.identity[n], iteration: 0, atoms: this.atomGroup[n], centralAtom: n + 1 });\n            }\n        let niter = this.kind;\n        for (let iter = 1; iter <= niter; iter++) {\n            let newident = Vec.numberArray(0, na);\n            for (let n = 0; n < na; n++)\n                if (this.amask[n])\n                    newident[n] = this.circularIterate(iter, n + 1);\n            this.identity = newident;\n            for (let n = 0; n < na; n++)\n                if (this.amask[n]) {\n                    this.atomGroup[n] = this.growAtoms(this.atomGroup[n]);\n                    this.considerNewFP({ hashCode: this.identity[n], iteration: iter, atoms: this.atomGroup[n], centralAtom: n + 1 });\n                }\n        }\n    }\n    static create(meta, kind) {\n        if (meta instanceof Molecule)\n            meta = MetaMolecule.createStrictRubric(meta);\n        let circ = new CircularFingerprints(meta, kind);\n        circ.calculate();\n        return circ;\n    }\n    getMolecule() { return this.meta.mol; }\n    get numFP() { return this.fplist.length; }\n    getFP(idx) { return this.fplist[idx]; }\n    getFingerprints() { return this.fplist.slice(0); }\n    getUniqueHashes() {\n        let hashes = new Set();\n        for (let fp of this.fplist)\n            hashes.add(fp.hashCode);\n        return Vec.sorted(Array.from(hashes));\n    }\n    getFoldedHashes(maxBits) {\n        let andBits = maxBits - 1;\n        let hashes = new Set();\n        for (let fp of this.fplist)\n            hashes.add(fp.hashCode & andBits);\n        return Vec.sorted(Array.from(hashes));\n    }\n    static tanimoto(hash1, hash2) {\n        let shared = 0, total = 0;\n        let sz1 = hash1.length, sz2 = hash2.length;\n        if (sz1 == 0 && sz2 == 0)\n            return 0;\n        let i1 = 0, i2 = 0;\n        while (i1 < sz1 || i2 < sz2) {\n            if (i1 == sz1) {\n                total += sz2 - i2;\n                break;\n            }\n            if (i2 == sz2) {\n                total += sz1 - i1;\n                break;\n            }\n            let v1 = hash1[i1], v2 = hash2[i2];\n            if (v1 == v2) {\n                shared += 1;\n                i1 += 1;\n                i2 += 1;\n            }\n            else if (v1 < v2)\n                i1 += 1;\n            else\n                i2 += 1;\n            total += 1;\n        }\n        return shared / total;\n    }\n    initialIdentityECFP(atom) {\n        const mol = this.meta.mol;\n        let adj = mol.atomAdjList(atom);\n        let nheavy = 0, nhydr = mol.atomHydrogens(atom);\n        for (let a of adj)\n            if (mol.atomElement(a) == 'H')\n                nhydr++;\n            else\n                nheavy++;\n        let atno = mol.atomicNumber(atom);\n        let degree = Math.max(0, Chemistry.ELEMENT_BONDING[atno] - nhydr);\n        let chg = mol.atomCharge(atom);\n        let inring = mol.atomRingBlock(atom) > 0 ? 1 : 0;\n        let crc = start_crc();\n        crc = feed_crc(crc, (nheavy << 4) | degree);\n        crc = feed_crc(crc, atno);\n        crc = feed_crc(crc, chg + 0x80);\n        crc = feed_crc(crc, (nhydr << 4) | inring);\n        return end_crc(crc);\n    }\n    circularIterate(iter, atom) {\n        let adj = this.atomAdj[atom - 1], adjb = this.bondAdj[atom - 1];\n        let seq = Vec.numberArray(0, 2 + 2 * adj.length);\n        seq[0] = iter;\n        seq[1] = this.identity[atom - 1];\n        for (let n = 0; n < adj.length; n++) {\n            seq[2 * n + 2] = this.meta.isBondAromatic(adjb[n]) ? 0xF : this.meta.mol.bondOrder(adjb[n]);\n            seq[2 * n + 3] = this.identity[adj[n] - 1];\n        }\n        let p = 0;\n        while (p < adj.length - 1) {\n            let i = 2 + 2 * p;\n            if (seq[i] > seq[i + 2] || (seq[i] == seq[i + 2] && seq[i + 1] > seq[i + 3])) {\n                Vec.swap(seq, i, i + 2);\n                Vec.swap(seq, i + 1, i + 3);\n                if (p > 0)\n                    p--;\n            }\n            else\n                p++;\n        }\n        let crc = start_crc();\n        for (let n = 0; n < seq.length; n += 2) {\n            crc = feed_crc(crc, seq[n]);\n            let v = seq[n + 1];\n            crc = feed_crc(crc, v >> 24);\n            crc = feed_crc(crc, (v >> 16) & 0xFF);\n            crc = feed_crc(crc, (v >> 8) & 0xFF);\n            crc = feed_crc(crc, v & 0xFF);\n        }\n        if (!this.resolvedChiral[atom - 1] && Vec.len(this.meta.rubricTetra) > 0 && this.meta.rubricTetra[atom - 1] != null) {\n            let ru = this.meta.rubricTetra[atom - 1];\n            let par = [\n                ru[0] == 0 ? 0 : this.identity[ru[0] - 1],\n                ru[1] == 0 ? 0 : this.identity[ru[1] - 1],\n                ru[2] == 0 ? 0 : this.identity[ru[2] - 1],\n                ru[3] == 0 ? 0 : this.identity[ru[3] - 1]\n            ];\n            if (par[0] != par[1] && par[0] != par[2] && par[0] != par[3] && par[1] != par[2] && par[1] != par[3] && par[2] != par[3]) {\n                crc = feed_crc(crc, Permutation.parityOrder(par) + 1);\n                this.resolvedChiral[atom - 1] = true;\n            }\n        }\n        return end_crc(crc);\n    }\n    growAtoms(atoms) {\n        let mask = Vec.booleanArray(false, this.meta.mol.numAtoms);\n        for (let n = 0; n < atoms.length; n++) {\n            mask[atoms[n] - 1] = true;\n            for (let a of this.atomAdj[atoms[n] - 1])\n                mask[a - 1] = true;\n        }\n        return Vec.add(Vec.maskIdx(mask), 1);\n    }\n    applyNewFP(newFP) {\n        if (this.hookConsiderNewFP)\n            this.hookConsiderNewFP(newFP);\n        if (this.hookApplyNewFP)\n            this.hookApplyNewFP(newFP);\n        this.fplist.push(newFP);\n    }\n    considerNewFP(newFP) {\n        if (this.hookConsiderNewFP)\n            this.hookConsiderNewFP(newFP);\n        let hit = -1;\n        let fp = null;\n        for (let n = 0; n < this.fplist.length; n++) {\n            let lookFP = this.fplist[n];\n            if (Vec.equals(lookFP.atoms, newFP.atoms)) {\n                fp = lookFP;\n                hit = n;\n                break;\n            }\n        }\n        if (hit < 0) {\n            this.fplist.push(newFP);\n            return;\n        }\n        if (fp.iteration < newFP.iteration || fp.hashCode < newFP.hashCode)\n            return;\n        this.fplist[hit] = newFP;\n        if (this.hookApplyNewFP)\n            this.hookApplyNewFP(newFP);\n    }\n}\nCircularFingerprints.CLASS_ECFP0 = 0;\nCircularFingerprints.CLASS_ECFP2 = 1;\nCircularFingerprints.CLASS_ECFP4 = 2;\nCircularFingerprints.CLASS_ECFP6 = 3;\nexport { CircularFingerprints };\n//# sourceMappingURL=CircularFingerprints.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CircularFingerprints } from '../calc/CircularFingerprints';\nimport { Theme } from '../util/Theme';\nimport { DEGRAD, escapeHTML, norm_xy, readTextURL } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { CoordUtil } from './CoordUtil';\nimport { DataSheetStream } from './DataSheetStream';\nimport { MetaMolecule } from './MetaMolecule';\nimport { MolUtil } from './MolUtil';\nexport const TEMPLATE_FILES = [\n    'rings',\n    'termgrp',\n    'funcgrp',\n    'protgrp',\n    'nonplrings',\n    'largerings',\n    'crownethers',\n    'ligmonodent',\n    'ligbident',\n    'ligtrident',\n    'ligmultident',\n    'cagecmplx',\n    'aminoacids',\n    'biomolecules',\n    'saccharides'\n];\nclass AbbrevContainer {\n    constructor() {\n        this.abbrevs = [];\n    }\n    static needsSetup() { return !this.main; }\n    static setupData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.main)\n                return;\n            if (!Theme.RESOURCE_URL)\n                throw ('RPC resource URL not defined.');\n            this.main = new AbbrevContainer();\n            for (let tfn of TEMPLATE_FILES) {\n                let url = Theme.RESOURCE_URL + '/data/templates/' + tfn + '.ds';\n                let dsstr = yield readTextURL(url);\n                let ds = DataSheetStream.readXML(dsstr);\n                let colMol = ds.firstColOfType(\"molecule\"), colAbbrev = ds.findColByName('Abbrev', \"string\");\n                if (colMol < 0 || colAbbrev < 0)\n                    continue;\n                for (let n = 0; n < ds.numRows; n++) {\n                    let frag = ds.getMoleculeClone(n, colMol), name = ds.getString(n, colAbbrev);\n                    if (!frag || !name)\n                        continue;\n                    let attcount = 0, firstConn = 0;\n                    for (let i = 1; i <= frag.numAtoms; i++)\n                        if (frag.atomElement(i) == MolUtil.TEMPLATE_ATTACHMENT) {\n                            if (firstConn == 0)\n                                firstConn = i;\n                            frag.setAtomElement(i, MolUtil.ABBREV_ATTACHMENT);\n                            attcount++;\n                        }\n                    if (attcount != 1)\n                        continue;\n                    if (firstConn > 1)\n                        frag.swapAtoms(1, firstConn);\n                    this.main.submitAbbreviation(name, frag);\n                }\n            }\n        });\n    }\n    getAbbrevs() {\n        return this.abbrevs.slice(0);\n    }\n    submitAbbreviation(name, infrag, promote = false) {\n        let frag = infrag.clone();\n        this.submitFragment(name, frag, promote);\n    }\n    submitMolecule(inmol, promote = false) {\n        let mol = inmol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let frag = MolUtil.getAbbrev(mol, n);\n            if (!frag)\n                continue;\n            this.submitFragment(mol.atomElement(n), frag, promote);\n        }\n    }\n    substituteAbbrevName(mol, atom) {\n        let frag = MolUtil.getAbbrev(mol, atom);\n        if (!frag)\n            return false;\n        let fragExp = MolUtil.expandedAbbrevs(frag);\n        let fragMF = MolUtil.molecularFormula(fragExp);\n        let fragFP = CircularFingerprints.create(MetaMolecule.createStrictRubric(fragExp), CircularFingerprints.CLASS_ECFP6).getUniqueHashes();\n        for (let abbrev of this.abbrevs)\n            if (abbrev.frag.numAtoms == frag.numAtoms) {\n                let match = CoordUtil.sketchEquivalent(frag, abbrev.frag);\n                if (!match) {\n                    let afragExp = MolUtil.expandedAbbrevs(abbrev.frag);\n                    if (fragMF == MolUtil.molecularFormula(afragExp)) {\n                        let afragFP = CircularFingerprints.create(MetaMolecule.createStrictRubric(afragExp), CircularFingerprints.CLASS_ECFP6).getUniqueHashes();\n                        if (Vec.equals(fragFP, afragFP))\n                            match = true;\n                    }\n                }\n                if (match) {\n                    mol.setAtomElement(atom, abbrev.name);\n                    return true;\n                }\n            }\n        return false;\n    }\n    submitFragment(name, frag, promote) {\n        if (name == '?')\n            return;\n        let vx = 0, vy = 0;\n        let adj = frag.atomAdjList(1);\n        for (let a of adj) {\n            vx += frag.atomX(a) - frag.atomX(1);\n            vy += frag.atomY(a) - frag.atomY(1);\n        }\n        if (adj.length > 1) {\n            let inv = 1.0 / adj.length;\n            vx *= inv;\n            vy *= inv;\n        }\n        if (norm_xy(vx, vy) > 0.1 * 0.1) {\n            let theta = Math.atan2(vy, vx);\n            if (Math.abs(theta) > 2 * DEGRAD)\n                CoordUtil.rotateMolecule(frag, -theta);\n        }\n        let hit = -1;\n        for (let n = 0; n < this.abbrevs.length; n++) {\n            let a = this.abbrevs[n];\n            if (a.name != name)\n                continue;\n            hit = n;\n            break;\n        }\n        let [html, search] = this.formatAbbrevLabel(name);\n        let abv = { name, frag, nameHTML: html, nameSearch: search };\n        if (hit < 0) {\n            if (promote)\n                this.abbrevs.unshift(abv);\n            else\n                this.abbrevs.push(abv);\n        }\n        else {\n            if (promote && hit > 0) {\n                this.abbrevs.splice(hit, 1);\n                this.abbrevs.unshift(abv);\n            }\n            else\n                this.abbrevs[hit] = abv;\n        }\n    }\n    formatAbbrevLabel(name) {\n        let html = '', search = '';\n        let append = (bit, tag) => {\n            if (tag)\n                html += '<' + tag + '>';\n            html += escapeHTML(bit);\n            search += bit;\n            if (tag)\n                html += '</' + tag + '>';\n        };\n        for (let bit of name.split('|')) {\n            while (true) {\n                let match = bit.match(/^(.*?)\\{(.*?)\\}(.*)$/);\n                if (!match)\n                    break;\n                let pre = match[1], mid = match[2], post = match[3];\n                append(pre, null);\n                if (mid.startsWith('^'))\n                    append(mid.substring(1), 'sup');\n                else\n                    append(mid, 'sub');\n                bit = post;\n            }\n            append(bit, null);\n        }\n        return [html, search.toLowerCase()];\n    }\n}\nAbbrevContainer.main = null;\nexport { AbbrevContainer };\n//# sourceMappingURL=AbbrevContainer.js.map","import { Graph } from '../data/Graph';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { GeomUtil } from '../util/Geom';\nimport { angleDiffPos, DEGRAD, norm2_xy, norm_xy, signum, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport class MetalLigate {\n    constructor(mol, metalAtom, ligandAttach) {\n        this.metalAtom = metalAtom;\n        this.ligandAttach = ligandAttach;\n        this.ligands = [];\n        this.mol = mol.clone();\n    }\n    generate() {\n        const { mol, metalAtom, ligandAttach, ligands } = this;\n        let g = Graph.fromMolecule(mol);\n        g.isolateNode(metalAtom - 1);\n        for (let cc of g.calculateComponentGroups()) {\n            Vec.addTo(cc, 1);\n            let anything = false;\n            for (let a of ligandAttach)\n                if (cc.indexOf(a) >= 0) {\n                    anything = true;\n                    break;\n                }\n            if (!anything)\n                continue;\n            let lig = { atoms: cc, attach: [] };\n            lig.atoms = cc;\n            let anyAttached = false;\n            for (let a of lig.atoms)\n                if (mol.findBond(a, metalAtom) > 0) {\n                    anyAttached = true;\n                    break;\n                }\n            for (let a of lig.atoms) {\n                let bonded = mol.findBond(a, metalAtom) > 0;\n                if (bonded || (!anyAttached && ligandAttach.includes(a)))\n                    lig.attach.push(a);\n            }\n            ligands.push(lig);\n            for (let a of lig.attach)\n                if (mol.findBond(a, metalAtom) == 0)\n                    this.makeLigandBond(a);\n        }\n        if (ligands.length == 0)\n            throw new Error('No ligand atoms');\n        let otherLigands = mol.atomAdjList(metalAtom);\n        for (let lig of ligands)\n            otherLigands = Vec.exclude(otherLigands, lig.attach);\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let otherTheta = new Array(otherLigands.length);\n        for (let n = 0; n < otherLigands.length; n++)\n            otherTheta[n] = Math.atan2(mol.atomY(otherLigands[n]) - my, mol.atomX(otherLigands[n]) - mx);\n        for (let lig of ligands) {\n            if (lig.attach.length == 1) {\n                let a = lig.attach[0];\n                lig.avgTheta = Math.atan2(mol.atomY(a) - my, mol.atomX(a) - mx);\n                this.orientLigand(lig);\n            }\n            else {\n                let theta = new Array(lig.attach.length);\n                for (let n = 0; n < lig.attach.length; n++) {\n                    let a = lig.attach[n];\n                    theta[n] = Math.atan2(mol.atomY(a) - my, mol.atomX(a) - mx);\n                }\n                theta = GeomUtil.sortAngles(theta);\n                let base = theta[0];\n                for (let n = 0; n < theta.length; n++)\n                    theta[n] = angleDiffPos(theta[n], base);\n                lig.avgTheta = base + Vec.sum(theta) / theta.length;\n                this.orientLigand(lig);\n            }\n        }\n        if (otherLigands.length == 0) {\n            ligands.sort((l1, l2) => signum(l1.avgTheta - l2.avgTheta));\n            this.arrangeLigandsFree(ligands);\n        }\n        else if (otherLigands.length == 1) {\n            ligands.sort((l1, l2) => {\n                let diff1 = angleDiffPos(l1.avgTheta, otherTheta[0]);\n                let diff2 = angleDiffPos(l2.avgTheta, otherTheta[0]);\n                return signum(diff1 - diff2);\n            });\n            this.arrangeLigandsRange(ligands, otherTheta[0], TWOPI, true);\n        }\n        else {\n            let otherOrder = Vec.idxSort(otherTheta);\n            for (let n = 0; n < otherOrder.length; n++) {\n                let nn = (n + 1) % otherOrder.length;\n                let theta = otherTheta[otherOrder[n]];\n                let extent = angleDiffPos(otherTheta[otherOrder[nn]], theta);\n                let batch = [];\n                for (let lig of ligands) {\n                    let diff = angleDiffPos(lig.avgTheta, theta);\n                    if (diff < extent)\n                        batch.push(lig);\n                }\n                if (batch.length == 0)\n                    continue;\n                batch.sort((l1, l2) => {\n                    let diff1 = angleDiffPos(l1.avgTheta, theta);\n                    let diff2 = angleDiffPos(l2.avgTheta, theta);\n                    return signum(diff1 - diff2);\n                });\n                this.arrangeLigandsRange(batch, theta, extent, true);\n            }\n        }\n        this.resolveClashes();\n        return mol;\n    }\n    makeLigandBond(ligAtom) {\n        const { mol, metalAtom } = this;\n        let mchg = mol.atomCharge(metalAtom), lchg = mol.atomCharge(ligAtom);\n        if (mchg > 0 && lchg < 0) {\n            mol.setAtomCharge(metalAtom, mchg - 1);\n            mol.setAtomCharge(ligAtom, lchg + 1);\n            mol.addBond(metalAtom, ligAtom, 1);\n            return;\n        }\n        if (mchg < 0 && lchg > 0) {\n            mol.setAtomCharge(metalAtom, mchg + 1);\n            mol.setAtomCharge(ligAtom, lchg - 1);\n            mol.addBond(metalAtom, ligAtom, 1);\n            return;\n        }\n        let order = 0;\n        if (mol.atomHExplicit(ligAtom) == Molecule.HEXPLICIT_UNKNOWN && mol.atomHydrogens(ligAtom) > 0)\n            order = 1;\n        mol.addBond(metalAtom, ligAtom, order);\n    }\n    orientLigand(lig) {\n        const { mol, metalAtom } = this;\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let lsz = lig.atoms.length, asz = lig.attach.length;\n        let idxAttach = new Array(asz);\n        for (let n = 0; n < asz; n++)\n            idxAttach[n] = lig.atoms.indexOf(lig.attach[n]);\n        let lx = new Array(lsz), ly = new Array(lsz);\n        let ax = MolUtil.arrayAtomX(mol), ay = MolUtil.arrayAtomY(mol);\n        let molExtent = Vec.max(ax) - Vec.min(ax) + Vec.max(ay) - Vec.min(ay);\n        let dx = molExtent * Math.cos(lig.avgTheta), dy = molExtent * Math.sin(lig.avgTheta);\n        for (let n = 0; n < lsz; n++) {\n            lx[n] = mol.atomX(lig.atoms[n]) + dx;\n            ly[n] = mol.atomY(lig.atoms[n]) + dy;\n        }\n        let cx = Vec.sum(lx) / lsz, cy = Vec.sum(ly) / lsz;\n        let weight = [];\n        for (let n = 0; n < lsz; n++) {\n            let closest = Number.POSITIVE_INFINITY;\n            for (let idx of idxAttach)\n                closest = Math.min(closest, norm2_xy(lx[n] - lx[idx], ly[n] - ly[idx]));\n            weight.push(1.0 / (1 + Math.sqrt(closest)));\n        }\n        let bestScore = Number.POSITIVE_INFINITY;\n        let bestLX = null, bestLY = null;\n        for (let theta = 0; theta < 360; theta += 15) {\n            let cosTheta = Math.cos(theta * DEGRAD), sinTheta = Math.sin(theta * DEGRAD);\n            let rx = new Array(lsz), ry = new Array(lsz);\n            let score = 0;\n            for (let n = 0; n < lsz; n++) {\n                let x = lx[n] - cx, y = ly[n] - cy;\n                rx[n] = cx + x * cosTheta - y * sinTheta;\n                ry[n] = cy + x * sinTheta + y * cosTheta;\n                let dist = norm_xy(rx[n] - mx, ry[n] - my);\n                if (lig.attach.indexOf(lig.atoms[n]) >= 0)\n                    score += dist;\n                else\n                    score -= dist * weight[n];\n            }\n            if (score < bestScore) {\n                bestScore = score;\n                bestLX = rx;\n                bestLY = ry;\n            }\n        }\n        lx = bestLX;\n        ly = bestLY;\n        if (asz == 1) {\n            dx = Molecule.IDEALBOND * Math.cos(lig.avgTheta);\n            dy = Molecule.IDEALBOND * Math.sin(lig.avgTheta);\n            Vec.addTo(lx, mx + dx - lx[idxAttach[0]]);\n            Vec.addTo(ly, my + dy - ly[idxAttach[0]]);\n        }\n        else {\n            let attTheta = new Array(asz), attDist = Vec.numberArray(0, asz), attDX = Vec.numberArray(0, asz), attDY = Vec.numberArray(0, asz);\n            for (let n = 0; n < asz; n++) {\n                let ox = lx[idxAttach[n]] - mx, oy = ly[idxAttach[n]] - my;\n                attTheta[n] = Math.atan2(oy, ox);\n                if (asz > 2) {\n                    attDist[n] = norm_xy(ox, oy);\n                    attDX[n] = ox / attDist[n];\n                    attDY[n] = oy / attDist[n];\n                }\n            }\n            Vec.addTo(attDist, -Vec.min(attDist));\n            let orderAttach = GeomUtil.idxSortAngles(attTheta);\n            let srcX = new Array(asz), srcY = new Array(asz);\n            let dstX = new Array(asz), dstY = new Array(asz);\n            let dtheta = 45 * DEGRAD / (asz - 1), theta = lig.avgTheta - 0.5 * dtheta;\n            for (let n = 0; n < asz; n++) {\n                srcX[n] = lx[idxAttach[orderAttach[n]]];\n                srcY[n] = ly[idxAttach[orderAttach[n]]];\n                dstX[n] = mx + Molecule.IDEALBOND * Math.cos(theta) + attDist[n] * attDX[n];\n                dstY[n] = my + Molecule.IDEALBOND * Math.sin(theta) + attDist[n] * attDY[n];\n                theta += dtheta / (asz - 1);\n            }\n            let tfm = GeomUtil.superimpose(srcX, srcY, dstX, dstY);\n            for (let n = 0; n < lsz; n++) {\n                let [x, y] = GeomUtil.applyAffine(lx[n], ly[n], tfm);\n                lx[n] = x;\n                ly[n] = y;\n            }\n        }\n        for (let n = 0; n < lsz; n++)\n            mol.setAtomPos(lig.atoms[n], lx[n], ly[n]);\n    }\n    arrangeLigandsFree(batch) {\n        if (batch.length == 1)\n            return;\n        let refTheta = Vec.last(batch).avgTheta;\n        refTheta += 0.5 * angleDiffPos(Vec.first(batch).avgTheta, refTheta);\n        this.arrangeLigandsRange(batch, refTheta, TWOPI, false);\n    }\n    arrangeLigandsRange(batch, refTheta, refSpan, bounded) {\n        const { mol, metalAtom } = this;\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let bsz = batch.length;\n        let thetaMin = new Array(bsz), thetaSpan = new Array(bsz);\n        let ligandSpan = 0;\n        for (let n = 0; n < bsz; n++) {\n            let [theta1, theta2] = this.determineThetaBounds(batch[n]);\n            thetaMin[n] = theta1;\n            thetaSpan[n] = angleDiffPos(theta2, theta1);\n            ligandSpan += thetaSpan[n];\n        }\n        let residual = (refSpan - ligandSpan) / (bsz + (bounded ? 1 : 0));\n        let theta = refTheta + (bounded ? residual : 0.5 * residual);\n        for (let n = 0; n < bsz; n++) {\n            let rotTheta = theta - thetaMin[n];\n            let cosTheta = Math.cos(rotTheta), sinTheta = Math.sin(rotTheta);\n            for (let a of batch[n].atoms) {\n                let x = mol.atomX(a) - mx, y = mol.atomY(a) - my;\n                mol.setAtomPos(a, mx + x * cosTheta - y * sinTheta, my + x * sinTheta + y * cosTheta);\n            }\n            theta += thetaSpan[n] + residual;\n        }\n    }\n    determineThetaBounds(lig) {\n        const { mol, metalAtom } = this;\n        let theta = [];\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        for (let n = 0; n < lig.attach.length; n++) {\n            let x = mol.atomX(lig.attach[n]) - mx;\n            let y = mol.atomY(lig.attach[n]) - my;\n            theta.push(Math.atan2(y, x));\n        }\n        Vec.sort(theta);\n        let bestScore = Number.POSITIVE_INFINITY, bestMin = 0, bestMax = 0;\n        for (let n = 0; n < theta.length; n++) {\n            let score = 0;\n            for (let i = 0; i < theta.length - 1; i++)\n                score += angleDiffPos(theta[i + 1], theta[i]);\n            if (score < bestScore) {\n                bestScore = score;\n                bestMin = Vec.first(theta);\n                bestMax = Vec.last(theta);\n            }\n            theta.push(theta.shift());\n        }\n        return [bestMin, bestMax];\n    }\n    resolveClashes() {\n        const { mol, metalAtom, ligands } = this;\n        const na = mol.numAtoms, nb = mol.numBonds, lsz = this.ligands.length;\n        let ablk = Vec.numberArray(-1, na), bblk = Vec.numberArray(-1, nb);\n        for (let n = 1; n <= na; n++)\n            if (mol.atomConnComp(n) == mol.atomConnComp(metalAtom))\n                ablk[n - 1] = 0;\n        for (let n = 0; n < lsz; n++)\n            for (let a of ligands[n].atoms)\n                ablk[a - 1] = n + 1;\n        for (let n = 1; n <= nb; n++) {\n            let blk1 = ablk[mol.bondFrom(n) - 1], blk2 = ablk[mol.bondTo(n) - 1];\n            if (blk1 < 0 || blk2 < 0) { }\n            else if (blk1 == blk2)\n                bblk[n - 1] = blk1;\n        }\n        let bumpDX = new Array(lsz), bumpDY = new Array(lsz);\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        for (let n = 0; n < lsz; n++) {\n            let lig = ligands[n];\n            let dx = 0, dy = 0;\n            for (let a of lig.attach) {\n                dx += mol.atomX(a) - mx;\n                dy += mol.atomY(a) - my;\n            }\n            dx /= lig.attach.length;\n            dy /= lig.attach.length;\n            let invDist = 1.0 / norm_xy(dx, dy);\n            bumpDX[n] = dx * 0.5 * invDist;\n            bumpDY[n] = dy * 0.5 * invDist;\n        }\n        const CLOSE_SQ = sqr(0.5);\n        for (let count = 0; count < 12; count++) {\n            let tainted = Vec.booleanArray(false, lsz);\n            outer: for (let i = 0; i < na - 1; i++) {\n                if (ablk[i] < 0)\n                    continue;\n                for (let j = i + 1; j < na; j++)\n                    if (ablk[j] >= 0 && ablk[j] != ablk[i]) {\n                        if (norm2_xy(mol.atomX(i + 1) - mol.atomX(j + 1), mol.atomY(i + 1) - mol.atomY(j + 1)) < CLOSE_SQ) {\n                            if (ablk[i] > 0)\n                                tainted[ablk[i] - 1] = true;\n                            if (ablk[j] > 0)\n                                tainted[ablk[j] - 1] = true;\n                        }\n                        if (Vec.allTrue(tainted))\n                            break outer;\n                    }\n            }\n            if (Vec.anyFalse(tainted))\n                outer: for (let i = 0; i < nb - 1; i++) {\n                    if (bblk[i] < 0)\n                        continue;\n                    let x1 = mol.atomX(mol.bondFrom(i + 1)), y1 = mol.atomY(mol.bondFrom(i + 1));\n                    let x2 = mol.atomX(mol.bondTo(i + 1)), y2 = mol.atomY(mol.bondTo(i + 1));\n                    for (let j = i + 1; j < nb; j++)\n                        if (bblk[j] >= 0 && bblk[j] != bblk[i]) {\n                            let x3 = mol.atomX(mol.bondFrom(j + 1)), y3 = mol.atomY(mol.bondFrom(j + 1));\n                            let x4 = mol.atomX(mol.bondTo(j + 1)), y4 = mol.atomY(mol.bondTo(j + 1));\n                            if (GeomUtil.doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4)) {\n                                if (bblk[i] > 0)\n                                    tainted[bblk[i] - 1] = true;\n                                if (bblk[j] > 0)\n                                    tainted[bblk[j] - 1] = true;\n                            }\n                            if (Vec.allTrue(tainted))\n                                break outer;\n                        }\n                }\n            if (Vec.allFalse(tainted))\n                break;\n            for (let n = 0; n < lsz; n++)\n                if (tainted[n]) {\n                    for (let a of ligands[n].atoms) {\n                        mol.setAtomPos(a, mol.atomX(a) + bumpDX[n], mol.atomY(a) + bumpDY[n]);\n                    }\n                }\n        }\n    }\n}\n//# sourceMappingURL=MetalLigate.js.map","import { BondArtifact } from '../data/BondArtifact';\nimport { CoordUtil } from '../data/CoordUtil';\nimport { Graph } from '../data/Graph';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { PolymerBlock } from '../data/PolymerBlock';\nimport { SketchUtil } from '../data/SketchUtil';\nimport { angleDiff, DEGRAD, norm_xy, RADDEG } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport class FusionPermutation {\n    constructor() {\n        this.attdist = 0;\n        this.guided = false;\n        this.bridged = false;\n        this.scoreModifier = 0;\n        this.chainSelect = 0;\n    }\n}\nclass TemplateFusion {\n    constructor(mol, templ, abbrev) {\n        this.mol = mol;\n        this.templ = templ;\n        this.abbrev = abbrev;\n        this.perms = [];\n        this.numAttach = 0;\n        this.withGuideOnly = false;\n        this.guidetempl = null;\n        this.guideidx = [];\n        this.guideadj = [];\n        this.timeLimit = 5.0;\n        let artif1 = new BondArtifact(mol), artif2 = new BondArtifact(templ);\n        artif2.harmoniseNumbering(artif1);\n        artif2.rewriteMolecule();\n        let poly1 = new PolymerBlock(mol), poly2 = new PolymerBlock(templ);\n        poly2.harmoniseNumbering(poly1);\n        poly2.rewriteMolecule();\n        this.huntForGuides();\n    }\n    permuteNone() {\n        let numAttach = 0;\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        if (oldmol.numAtoms > 0) {\n            let oldbox = oldmol.boundary(), newbox = newmol.boundary();\n            let dx = oldbox.maxX() + 1 - newbox.minX();\n            let dy = 0.5 * (oldbox.minY() + oldbox.maxY()) - 0.5 * (newbox.minY() + newbox.maxY());\n            CoordUtil.translateMolecule(newmol, dx, dy);\n        }\n        else {\n            let newbox = newmol.boundary();\n            CoordUtil.translateMolecule(newmol, -newbox.midX(), -newbox.midY());\n        }\n        let oldbox = oldmol.boundary(), newbox = newmol.boundary();\n        let cx = newbox.midX(), cy = newbox.midY();\n        let ROTN = [0, 30, 45, 60, 90, 120, 135, 150, 180, 210, 225, 240, 270, 300, 315, 330];\n        duplicate: for (let n = 0; n < ROTN.length; n++) {\n            let rotmol = newmol.clone();\n            CoordUtil.rotateMolecule(rotmol, -ROTN[n] * DEGRAD, cx, cy);\n            for (let i = 0; i < this.perms.length; i++)\n                if (CoordUtil.sketchEquivalent(rotmol, this.perms[i].display))\n                    continue duplicate;\n            let p = new FusionPermutation();\n            p.mol = oldmol.clone();\n            p.mol.append(rotmol);\n            p.display = rotmol;\n            p.srcidx = this.sourceIndex(p.mol, oldmol);\n            p.attdist = 0;\n            p.guided = false;\n            this.perms.push(p);\n        }\n    }\n    permuteAtom(atom) {\n        this.numAttach = 1;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            for (let n = 0; n < this.guideidx.length; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeGuidedOne(newperms, oldmol, this.guidetempl, atom, this.guideidx[n]);\n                this.composeGuidedOne(newperms, oldmol, fliptempl, atom, this.guideidx[n]);\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numAtoms; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeDirectOne(newperms, oldmol, newmol, atom, n);\n                this.composeDirectOne(newperms, oldmol, flipmol, atom, n);\n                this.composeBridge(newperms, oldmol, newmol, atom, n);\n                this.composeBridge(newperms, oldmol, flipmol, atom, n);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    permuteBond(a1, a2) {\n        this.numAttach = 2;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            for (let i = 0; i < this.guideidx.length; i++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                let g1 = this.guideidx[i];\n                let adj = this.guidetempl.atomAdjList(g1);\n                for (let j = 0; j < adj.length; j++) {\n                    let g2 = adj[j];\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a1, a2, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a2, a1, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a1, a2, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a2, a1, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a1, a2, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a2, a1, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a1, a2, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a2, a1, g1, g2, false);\n                }\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numBonds; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                let nfr = newmol.bondFrom(n), nto = newmol.bondTo(n);\n                this.composeDirectTwo(newperms, oldmol, newmol, a1, a2, nfr, nto);\n                this.composeDirectTwo(newperms, oldmol, flipmol, a1, a2, nfr, nto);\n                this.composeDirectTwo(newperms, oldmol, newmol, a1, a2, nto, nfr);\n                this.composeDirectTwo(newperms, oldmol, flipmol, a1, a2, nto, nfr);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    permuteMulti(atoms) {\n        this.numAttach = atoms.length;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            if (this.guideidx.length == atoms.length) {\n                this.composeGuidedMulti(newperms, oldmol, this.guidetempl, atoms, this.guideidx, true);\n                this.composeGuidedMulti(newperms, oldmol, fliptempl, atoms, this.guideidx, true);\n            }\n            if (this.guideadj.length == atoms.length) {\n                this.composeGuidedMulti(newperms, oldmol, this.guidetempl, atoms, this.guideadj, false);\n                this.composeGuidedMulti(newperms, oldmol, fliptempl, atoms, this.guideadj, false);\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numAtoms; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeDirectMulti(newperms, oldmol, newmol, atoms, n);\n                this.composeDirectMulti(newperms, oldmol, flipmol, atoms, n);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    huntForGuides() {\n        this.guideidx = [];\n        this.guideadj = [];\n        for (let n = 1; n <= this.templ.numAtoms; n++)\n            if (this.templ.atomElement(n) == 'X' && this.templ.atomAdjCount(n) > 0) {\n                this.guideidx.push(n);\n                let adj = this.templ.atomAdjList(n);\n                for (let i = 0; i < adj.length; i++)\n                    if (this.guideadj.indexOf(adj[i]) < 0)\n                        this.guideadj.push(adj[i]);\n            }\n        if (this.guideidx.length > 0) {\n            this.guidetempl = this.templ.clone();\n            for (let n = this.guideidx.length - 1; n >= 0; n--)\n                this.templ.deleteAtomAndBonds(this.guideidx[n]);\n        }\n    }\n    composeDirectOne(list, oldmol, newmol, o1, n1) {\n        let otheta = SketchUtil.primeDirections(oldmol, o1);\n        let ntheta = SketchUtil.primeDirections(newmol, n1);\n        let ocurrent = CoordUtil.atomBondAngles(oldmol, o1);\n        let ncurrent = CoordUtil.atomBondAngles(newmol, n1);\n        let theta1 = [], theta2 = [], scoreMod = [];\n        for (let i = 0; i < ocurrent.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                theta1.push(ocurrent[i]);\n                theta2.push(ntheta[j]);\n                scoreMod.push(-51);\n            }\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ncurrent.length; j++) {\n                theta1.push(otheta[i]);\n                theta2.push(ncurrent[j]);\n                scoreMod.push(0);\n            }\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                theta1.push(otheta[i]);\n                theta2.push(ntheta[j]);\n                scoreMod.push(0);\n            }\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1), nx = newmol.atomX(n1), ny = newmol.atomY(n1);\n        for (let n = 0; n < theta1.length; n++) {\n            let dth = angleDiff(theta1[n], theta2[n]);\n            let frag = newmol.clone();\n            CoordUtil.translateMolecule(frag, ox - nx, oy - ny);\n            CoordUtil.rotateMolecule(frag, dth, ox, oy);\n            let pmol = oldmol.clone();\n            let osz = pmol.numAtoms;\n            pmol.append(frag);\n            let srcidx = this.sourceIndex(pmol, oldmol);\n            SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n            if (pmol.numAtoms == osz)\n                continue;\n            let p = new FusionPermutation();\n            p.mol = pmol;\n            p.display = frag;\n            p.srcidx = srcidx;\n            p.molidx = [o1];\n            p.temidx = [n1];\n            p.attdist = bfs[n1 - 1];\n            p.guided = false;\n            p.scoreModifier = scoreMod[n];\n            this.removeExtraGuides(p, oldmol);\n            list.push(p);\n        }\n    }\n    composeDirectTwo(list, oldmol, newmol, o1, o2, n1, n2) {\n        let oth = Math.atan2(oldmol.atomY(o2) - oldmol.atomY(o1), oldmol.atomX(o2) - oldmol.atomX(o1));\n        let nth = Math.atan2(newmol.atomY(n2) - newmol.atomY(n1), newmol.atomX(n2) - newmol.atomX(n1));\n        let cx = 0.5 * (oldmol.atomX(o1) + oldmol.atomX(o2)), cy = 0.5 * (oldmol.atomY(o1) + oldmol.atomY(o2));\n        let frag = newmol.clone();\n        CoordUtil.translateMolecule(frag, cx - 0.5 * (newmol.atomX(n1) + newmol.atomX(n2)), cy - 0.5 * (newmol.atomY(n1) + newmol.atomY(n2)));\n        CoordUtil.rotateMolecule(frag, oth - nth, cx, cy);\n        frag.setAtomPos(n1, oldmol.atomX(o1), oldmol.atomY(o1));\n        frag.setAtomPos(n2, oldmol.atomX(o2), oldmol.atomY(o2));\n        let pmol = oldmol.clone();\n        let osz = pmol.numAtoms;\n        pmol.append(frag);\n        let srcidx = this.sourceIndex(pmol, oldmol);\n        SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n        if (pmol.numAtoms == osz)\n            return;\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        let p = new FusionPermutation();\n        p.mol = pmol;\n        p.display = frag;\n        p.srcidx = srcidx;\n        p.molidx = [o1, o2];\n        p.temidx = [n1, n2];\n        p.attdist = Math.min(bfs[n1 - 1], bfs[n2 - 1]);\n        p.guided = false;\n        this.removeExtraGuides(p, oldmol);\n        list.push(p);\n    }\n    composeDirectMulti(list, oldmol, newmol, oidx, n1) {\n        let frag = newmol.clone();\n        let x0 = oldmol.atomX(oidx[0]), y0 = oldmol.atomY(oidx[0]);\n        CoordUtil.translateMolecule(frag, x0 - frag.atomX(n1), y0 - frag.atomY(n1));\n        let ox = oldmol.atomX(oidx[1]) - x0, oy = oldmol.atomY(oidx[1]) - y0;\n        let otheta = Math.atan2(oy, ox), orad = norm_xy(ox, oy);\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(1);\n        let nidx = [];\n        for (let n2 = 1; n2 <= frag.numAtoms; n2++)\n            if (n1 != n2) {\n                let nx = frag.atomX(n2) - frag.atomX(n1), ny = frag.atomY(n2) - frag.atomY(n1), nrad = norm_xy(nx, ny);\n                if (Math.abs(nrad - orad) > 0.1)\n                    continue;\n                let ntheta = Math.atan2(ny, nx);\n                CoordUtil.rotateMolecule(frag, otheta - ntheta, x0, y0);\n                nidx = [n1, n2];\n                for (let i = 2; i < oidx.length; i++) {\n                    let hit = false;\n                    for (let j = 1; j <= frag.numAtoms; j++)\n                        if (nidx.indexOf(j) < 0)\n                            if (norm_xy(oldmol.atomX(oidx[i]) - frag.atomX(j), oldmol.atomY(oidx[i]) - frag.atomY(j)) < 0.1 * 0.1) {\n                                hit = true;\n                                nidx.push(j);\n                                break;\n                            }\n                    if (!hit)\n                        break;\n                }\n                if (nidx.length < oidx.length)\n                    continue;\n                let lowbfs = bfs.length;\n                for (let n = 0; n < nidx.length; n++)\n                    lowbfs = Math.min(lowbfs, bfs[nidx[n] - 1]);\n                let dx = 0, dy = 0;\n                for (let n = 0; n < oidx.length; n++) {\n                    dx += oldmol.atomX(oidx[n]) - frag.atomX(nidx[n]);\n                    dy += oldmol.atomY(oidx[n]) - frag.atomY(nidx[n]);\n                }\n                let invsz = 1.0 / oidx.length;\n                dx *= invsz;\n                dy *= invsz;\n                CoordUtil.translateMolecule(frag, dx, dy);\n                let pmol = oldmol.clone();\n                let osz = pmol.numAtoms;\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                for (let n = 0; n < nidx.length; n++) {\n                    let x = pmol.atomX(oidx[n]), y = pmol.atomY(oidx[n]);\n                    pmol.setAtomPos(osz + nidx[n], x, y);\n                }\n                SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n                if (pmol.numAtoms == osz)\n                    continue;\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag.clone();\n                p.srcidx = srcidx;\n                p.molidx = oidx.slice(0);\n                p.temidx = nidx.slice(0);\n                p.attdist = Math.min(bfs[n1 - 1], bfs[n2 - 1]);\n                p.guided = false;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    composeBridge(list, oldmol, newmol, o1, n1) {\n        let busy1 = oldmol.atomRingBlock(o1) != 0 || oldmol.atomAdjCount(o1) >= 3;\n        let busy2 = newmol.atomRingBlock(n1) != 0 || newmol.atomAdjCount(n1) >= 3;\n        if (!busy1 || !busy2)\n            return;\n        let otheta = SketchUtil.primeDirections(oldmol, o1);\n        let ntheta = SketchUtil.primeDirections(newmol, n1);\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1), nx = newmol.atomX(n1), ny = newmol.atomY(n1);\n                let dx = Molecule.IDEALBOND * Math.cos(otheta[i]), dy = Molecule.IDEALBOND * Math.sin(otheta[i]);\n                let dth = angleDiff(otheta[i], Math.PI + ntheta[j]);\n                let frag = newmol.clone();\n                CoordUtil.translateMolecule(frag, ox - nx + dx, oy - ny + dy);\n                CoordUtil.rotateMolecule(frag, dth, ox + dx, oy + dy);\n                let pmol = oldmol.clone();\n                let att = pmol.numAtoms + n1, osz = pmol.numAtoms;\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                pmol.addBond(o1, att, 1);\n                att = frag.addAtom('C', ox, oy);\n                frag.addBond(n1, att, 1);\n                SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n                if (pmol.numAtoms == osz)\n                    continue;\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag;\n                p.srcidx = srcidx;\n                p.molidx = [o1];\n                p.temidx = [att];\n                p.attdist = bfs[n1 - 1];\n                p.bridged = true;\n                p.guided = false;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    composeGuidedOne(list, oldmol, newmol, oidx, gidx) {\n        if (newmol.atomAdjCount(gidx) == 0)\n            return;\n        let otheta = SketchUtil.primeDirections(oldmol, oidx);\n        if (newmol.atomAdjCount(gidx) > 1 && oldmol.atomAdjCount(oidx) > 0) {\n            let ox = 0, oy = 0;\n            let adj = oldmol.atomAdjList(oidx);\n            for (let n = 0; n < adj.length; n++) {\n                ox += oldmol.atomX(adj[n]) - oldmol.atomX(oidx);\n                oy += oldmol.atomY(adj[n]) - oldmol.atomY(oidx);\n            }\n            let ang = Math.atan2(oy, ox);\n            let unique = true;\n            for (let n = 0; n < otheta.length; n++)\n                if (Math.abs(angleDiff(ang, otheta[n])) < 3 * RADDEG) {\n                    unique = false;\n                    break;\n                }\n            if (unique)\n                otheta.push(ang);\n        }\n        let gx = newmol.atomX(gidx), gy = newmol.atomY(gidx);\n        let dx = 0, dy = 0;\n        let adj = newmol.atomAdjList(gidx);\n        for (let n = 0; n < adj.length; n++) {\n            dx += newmol.atomX(adj[n]) - gx;\n            dy += newmol.atomY(adj[n]) - gy;\n        }\n        dx /= adj.length;\n        dy /= adj.length;\n        let ntheta = Math.atan2(dy, dx);\n        let homoPenalty = 0;\n        if (adj.length == 1) {\n            let oel = oldmol.atomElement(oidx), nel = newmol.atomElement(adj[0]);\n            if (oel != 'C' && oel == nel)\n                homoPenalty = 1;\n        }\n        for (let n = 0; n < otheta.length; n++) {\n            let frag = newmol.clone();\n            if (this.guideidx.length == 2) {\n                for (let i = 1; i <= frag.numAtoms; i++)\n                    if (i != gidx && frag.atomElement(i) == 'X') {\n                        frag.setAtomElement(i, TemplateFusion.RESERVED_GUIDESYMBOL);\n                        break;\n                    }\n            }\n            CoordUtil.rotateMolecule(frag, otheta[n] - ntheta, gx, gy);\n            CoordUtil.translateMolecule(frag, oldmol.atomX(oidx) - gx, oldmol.atomY(oidx) - gy);\n            let pmol = oldmol.clone();\n            let osz = pmol.numAtoms;\n            pmol.append(frag);\n            let srcidx = this.sourceIndex(pmol, oldmol);\n            SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n            if (pmol.numAtoms == osz)\n                continue;\n            let sel = 0;\n            for (let i = 1; i <= pmol.numAtoms; i++)\n                if (pmol.atomElement(i) == TemplateFusion.RESERVED_GUIDESYMBOL) {\n                    let padj = pmol.atomAdjList(i);\n                    if (padj.length == 1) {\n                        sel = padj[0];\n                        if (sel > i)\n                            sel--;\n                    }\n                    pmol.deleteAtomAndBonds(i);\n                    srcidx.splice(i - 1, 1);\n                    break;\n                }\n            let p = new FusionPermutation();\n            p.mol = pmol;\n            p.display = frag;\n            p.srcidx = srcidx;\n            p.molidx = [oidx];\n            p.temidx = [gidx];\n            p.attdist = 0;\n            p.guided = true;\n            p.scoreModifier = homoPenalty;\n            p.chainSelect = sel;\n            this.removeExtraGuides(p, oldmol);\n            list.push(p);\n        }\n    }\n    composeGuidedTwo(list, oldmol, newmol, o1, o2, gidx, nidx, snapToGuide) {\n        let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1);\n        let gx = newmol.atomX(gidx), gy = newmol.atomY(gidx);\n        let nx = newmol.atomX(nidx), ny = newmol.atomY(nidx);\n        let otheta = Math.atan2(oldmol.atomY(o2) - oy, oldmol.atomX(o2) - ox);\n        let gtheta = Math.atan2(ny - gy, nx - gx);\n        let isGuideOnTerminal = oldmol.atomAdjCount(o1) == 1;\n        let pmol = oldmol.clone(), frag = newmol.clone();\n        CoordUtil.rotateMolecule(frag, otheta - gtheta, gx, gy);\n        if (snapToGuide) {\n            CoordUtil.translateMolecule(frag, ox - gx, oy - gy);\n            pmol.setAtomPos(o2, frag.atomX(nidx), frag.atomY(nidx));\n        }\n        else {\n            CoordUtil.translateMolecule(frag, oldmol.atomX(o2) - frag.atomX(nidx), oldmol.atomY(o2) - frag.atomY(nidx));\n            frag.setAtomPos(gidx, ox, oy);\n        }\n        let osz = pmol.numAtoms;\n        pmol.append(frag);\n        let srcidx = this.sourceIndex(pmol, oldmol);\n        SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n        if (pmol.numAtoms == osz)\n            return;\n        let p = new FusionPermutation();\n        p.mol = pmol;\n        p.display = frag;\n        p.srcidx = srcidx;\n        p.molidx = [o1, o2];\n        p.temidx = [gidx, nidx];\n        p.attdist = isGuideOnTerminal ? 1 : 0;\n        p.guided = true;\n        this.removeExtraGuides(p, oldmol);\n        list.push(p);\n    }\n    composeGuidedMulti(list, oldmol, newmol, oidx, gidx, nudgenew) {\n        let cx1 = 0, cy1 = 0, cx2 = 0, cy2 = 0;\n        for (let n = 0; n < oidx.length; n++) {\n            cx1 += oldmol.atomX(oidx[n]);\n            cy1 += oldmol.atomY(oidx[n]);\n        }\n        for (let n = 0; n < gidx.length; n++) {\n            cx2 += newmol.atomX(gidx[n]);\n            cy2 += newmol.atomY(gidx[n]);\n        }\n        cx1 /= oidx.length;\n        cy1 /= oidx.length;\n        cx2 /= gidx.length;\n        cy2 /= gidx.length;\n        let osz = oldmol.numAtoms;\n        for (let i = 0; i < oidx.length; i++)\n            for (let j = 0; j < gidx.length; j++) {\n                let pmol = oldmol.clone(), frag = newmol.clone();\n                let th1 = Math.atan2(pmol.atomY(oidx[i]) - cy1, pmol.atomX(oidx[i]) - cx1);\n                let th2 = Math.atan2(frag.atomY(gidx[j]) - cy2, frag.atomX(gidx[j]) - cx2);\n                CoordUtil.rotateMolecule(frag, th1 - th2, cx2, cy2);\n                CoordUtil.translateMolecule(frag, cx1 - cx2, cy1 - cy2);\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                let midx = Vec.numberArray(0, gidx.length), tidx = gidx.slice(0);\n                Vec.sort(tidx);\n                let mask = Vec.booleanArray(false, osz);\n                for (let g = tidx.length - 1; g >= 0; g--) {\n                    let gatom = tidx[g] + osz;\n                    let closest = 0, closeDSQ = 0;\n                    for (let n = 0; n < oidx.length; n++)\n                        if (!mask[oidx[n] - 1]) {\n                            let dx = pmol.atomX(oidx[n]) - pmol.atomX(gatom), dy = pmol.atomY(oidx[n]) - pmol.atomY(gatom);\n                            let dsq = norm_xy(dx, dy);\n                            if (closest == 0 || dsq < closeDSQ) {\n                                closest = oidx[n];\n                                closeDSQ = dsq;\n                            }\n                        }\n                    if (!nudgenew) {\n                        let dsq = norm_xy(pmol.atomX(gatom) - pmol.atomX(closest), pmol.atomY(gatom) - pmol.atomY(closest));\n                        if (dsq > 0.1 * 0.1) {\n                            let num = frag.addAtom('C', pmol.atomX(closest), pmol.atomY(closest));\n                            frag.addBond(num, tidx[g], 0);\n                        }\n                        pmol.setAtomPos(closest, pmol.atomX(gatom), pmol.atomY(gatom));\n                    }\n                    midx[g] = closest;\n                    mask[closest - 1] = true;\n                    let adj = pmol.atomAdjList(gatom);\n                    for (let n = 0; n < adj.length; n++) {\n                        let b = pmol.findBond(gatom, adj[n]);\n                        pmol.addBond(closest, adj[n], pmol.bondOrder(b), pmol.bondType(b));\n                    }\n                    pmol.deleteAtomAndBonds(gatom);\n                    srcidx.splice(gatom - 1, 1);\n                    frag.setAtomPos(tidx[g], pmol.atomX(closest), pmol.atomY(closest));\n                }\n                for (let n = pmol.numAtoms; n > osz; n--)\n                    if (pmol.atomElement(n) == 'X') {\n                        pmol.deleteAtomAndBonds(n);\n                        srcidx.splice(n - 1, 1);\n                        for (let k = 0; k < tidx.length; k++)\n                            if (n < tidx[k])\n                                tidx[k]--;\n                    }\n                for (let n = frag.numAtoms; n >= 1; n--)\n                    if (frag.atomElement(n) == 'X') {\n                        frag.setAtomElement(n, 'C');\n                    }\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag;\n                p.srcidx = srcidx;\n                p.molidx = midx;\n                p.temidx = tidx;\n                p.attdist = 0;\n                p.guided = true;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    affixRawPermutations(list) {\n        let npsz = list.length;\n        if (npsz == 0)\n            return;\n        let umask = Vec.booleanArray(true, npsz);\n        for (let i = 0; i < npsz - 1; i++)\n            if (umask[i]) {\n                let p1 = list[i];\n                for (let j = i + 1; j < npsz; j++)\n                    if (umask[j]) {\n                        let p2 = list[j];\n                        if (CoordUtil.sketchEquivalent(p1.mol, p2.mol)) {\n                            if (p1.scoreModifier + p1.attdist > p2.scoreModifier + p2.attdist) {\n                                list[i] = p2;\n                                list[j] = p1;\n                            }\n                            umask[j] = false;\n                        }\n                    }\n            }\n        let score = Vec.numberArray(0, npsz);\n        let numKeep = 0;\n        for (let n = 0; n < npsz; n++) {\n            if (umask[n]) {\n                score[n] = this.scorePermutation(list[n]);\n                if (score[n] < 1000)\n                    numKeep++;\n            }\n            else\n                score[n] = 0;\n        }\n        if (numKeep > 0)\n            for (let n = 0; n < npsz; n++)\n                if (umask[n] && score[n] >= 1000)\n                    umask[n] = false;\n        let uscore = [], uidx = [];\n        for (let n = 0; n < npsz; n++)\n            if (umask[n]) {\n                uscore.push(score[n]);\n                uidx.push(n);\n            }\n        let sidx = Vec.idxSort(uscore);\n        for (let n = 0; n < sidx.length; n++) {\n            let p = list[uidx[sidx[n]]];\n            if (p.guided) {\n                this.perms.push(p);\n            }\n        }\n        for (let n = 0; n < sidx.length; n++) {\n            let p = list[uidx[sidx[n]]];\n            if (!p.guided) {\n                this.perms.push(p);\n            }\n        }\n    }\n    removeExtraGuides(perm, oldmol) {\n        MolUtil.removeDuplicateBonds(perm.mol);\n        for (let n = perm.temidx.length - 1; n >= 0; n--) {\n            let el = perm.display.atomElement(perm.temidx[n]);\n            if (el != 'X' && el != TemplateFusion.RESERVED_GUIDESYMBOL)\n                continue;\n            perm.molidx.splice(n, 1);\n            perm.temidx.splice(n, 1);\n        }\n        for (let n = perm.display.numAtoms; n >= 1; n--) {\n            let el = perm.display.atomElement(n);\n            if (el != 'X' && el != TemplateFusion.RESERVED_GUIDESYMBOL)\n                continue;\n            let a = CoordUtil.atomAtPoint(oldmol, perm.display.atomX(n), perm.display.atomY(n));\n            if (a > 0)\n                perm.display.setAtomElement(n, 'C');\n            else {\n                perm.display.deleteAtomAndBonds(n);\n                for (let i = 0; i < perm.temidx.length; i++)\n                    if (perm.temidx[i] > n)\n                        perm.temidx[i]--;\n            }\n        }\n    }\n    scorePermutation(perm) {\n        let mol = this.mol, tmol = perm.display, tunion = perm.mol;\n        let score = 0.2 * perm.attdist + perm.scoreModifier;\n        score += CoordUtil.congestionMolecule(tunion, 1e-3);\n        score -= tunion.numAtoms;\n        let sz1 = mol.numAtoms, sz2 = tmol.numAtoms;\n        let mx1 = [], my1 = [], mx2 = [], my2 = [];\n        for (let n = 0; n < sz1; n++) {\n            mx1.push(mol.atomX(n + 1));\n            my1.push(mol.atomY(n + 1));\n        }\n        for (let n = 0; n < sz2; n++) {\n            mx2.push(tmol.atomX(n + 1));\n            my2.push(tmol.atomY(n + 1));\n        }\n        for (let i = 0; i < sz1; i++)\n            for (let j = 0; j < sz2; j++) {\n                if (norm_xy(mx1[i] - mx2[j], my1[i] - my2[j]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                    continue;\n                let contained = false;\n                for (let k = 0; k < perm.molidx.length; k++)\n                    if (perm.molidx[k] == i + 1 && perm.temidx[k] == j + 1) {\n                        contained = true;\n                        break;\n                    }\n                if (contained)\n                    continue;\n                score += 100;\n            }\n        if (!perm.guided)\n            for (let n = 0; n < perm.molidx.length; n++) {\n                let el = mol.atomElement(perm.molidx[n]);\n                if (el == 'C' || el == 'O' || el == 'S' || el == 'N' || el == 'P')\n                    continue;\n                let adj1 = mol.atomAdjList(perm.molidx[n]), adj2 = tmol.atomAdjList(perm.temidx[n]);\n                if (adj1.length + adj2.length >= 4)\n                    continue;\n                for (let i = 0; i < adj1.length; i++)\n                    for (let j = 0; j < adj2.length; j++) {\n                        let ai = adj1[i], aj = adj2[j];\n                        let bo1 = mol.bondOrder(mol.findBond(perm.molidx[n], ai));\n                        let bo2 = tmol.bondOrder(tmol.findBond(perm.temidx[n], aj));\n                        let wantTheta = 0;\n                        if ((bo1 == 1 && bo2 == 1) || (bo1 == 1 && bo2 == 2) || (bo1 == 2 && bo2 == 1))\n                            wantTheta = 120;\n                        else if ((bo1 == 2 && bo2 == 2) || (bo1 == 1 && bo2 == 3) || (bo1 == 3 && bo2 == 1))\n                            wantTheta = 180;\n                        else\n                            continue;\n                        let dx1 = mx1[ai - 1] - mx1[perm.molidx[n] - 1];\n                        let dy1 = my1[ai - 1] - my1[perm.molidx[n] - 1];\n                        let dx2 = mx2[aj - 1] - mx2[perm.temidx[n] - 1];\n                        let dy2 = my2[aj - 1] - my2[perm.temidx[n] - 1];\n                        let theta = Math.abs(angleDiff(Math.atan2(dy1, dx1), Math.atan2(dy2, dx2))) * RADDEG;\n                        if (Math.abs(theta - wantTheta) > 5)\n                            score += 50;\n                    }\n            }\n        for (let n = 1; n <= tunion.numAtoms; n++)\n            if (tunion.atomElement(n) == 'C' || tunion.atomElement(n) == 'N') {\n                let adjb = tunion.atomAdjBonds(n);\n                let totalBO = 0;\n                for (let i = 0; i < adjb.length; i++) {\n                    let bo = tunion.bondOrder(adjb[i]);\n                    totalBO += bo;\n                    if (bo == 0) {\n                        totalBO = 0;\n                        break;\n                    }\n                }\n                if (totalBO > 4)\n                    score += 1000;\n            }\n        if (perm.molidx.length >= 2) {\n            let mmask = Vec.booleanArray(false, sz1);\n            for (let n = 0; n < perm.molidx.length; n++)\n                mmask[perm.molidx[n] - 1] = true;\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n                if (!mmask[bfr - 1] || !mmask[bto - 1])\n                    continue;\n                let tfr = perm.molidx.indexOf(bfr), tto = perm.molidx.indexOf(bto);\n                let tn = tmol.findBond(perm.temidx[tfr], perm.temidx[tto]);\n                if (tn == 0)\n                    continue;\n                if (mol.bondOrder(n) != tmol.bondOrder(tn))\n                    score += 1;\n            }\n        }\n        return score;\n    }\n    sourceIndex(xmol, wmol) {\n        let idx = Vec.numberArray(0, xmol.numAtoms);\n        for (let n = wmol.numAtoms; n >= 1; n--)\n            idx[n - 1] = n;\n        return idx;\n    }\n    asMask(imask) {\n        let ret = Vec.booleanArray(false, imask.length);\n        for (let n = 0; n < imask.length; n++)\n            ret[n] = imask[n] != 0;\n        return ret;\n    }\n}\nTemplateFusion.RESERVED_GUIDESYMBOL = 'XXX';\nexport { TemplateFusion };\n//# sourceMappingURL=TemplateFusion.js.map","import { AbbrevContainer } from '../data/AbbrevContainer';\nimport { BondArtifact } from '../data/BondArtifact';\nimport { Chemistry } from '../data/Chemistry';\nimport { CoordUtil } from '../data/CoordUtil';\nimport { Graph } from '../data/Graph';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { PolymerBlock } from '../data/PolymerBlock';\nimport { QueryTypeAtom, QueryUtil } from '../data/QueryUtil';\nimport { SketchUtil } from '../data/SketchUtil';\nimport { angleDiff, angleNorm, DEGRAD, norm2_xy, norm_xy, RADDEG, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { MetalLigate } from './MetalLigate';\nimport { TemplateFusion } from './TemplateFusion';\nexport var ActivityType;\n(function (ActivityType) {\n    ActivityType[ActivityType[\"Delete\"] = 1] = \"Delete\";\n    ActivityType[ActivityType[\"Clear\"] = 2] = \"Clear\";\n    ActivityType[ActivityType[\"Copy\"] = 3] = \"Copy\";\n    ActivityType[ActivityType[\"Cut\"] = 4] = \"Cut\";\n    ActivityType[ActivityType[\"SelectAll\"] = 5] = \"SelectAll\";\n    ActivityType[ActivityType[\"SelectNone\"] = 6] = \"SelectNone\";\n    ActivityType[ActivityType[\"SelectPrevComp\"] = 7] = \"SelectPrevComp\";\n    ActivityType[ActivityType[\"SelectNextComp\"] = 8] = \"SelectNextComp\";\n    ActivityType[ActivityType[\"SelectSide\"] = 9] = \"SelectSide\";\n    ActivityType[ActivityType[\"SelectGrow\"] = 10] = \"SelectGrow\";\n    ActivityType[ActivityType[\"SelectShrink\"] = 11] = \"SelectShrink\";\n    ActivityType[ActivityType[\"SelectChain\"] = 12] = \"SelectChain\";\n    ActivityType[ActivityType[\"SelectSmRing\"] = 13] = \"SelectSmRing\";\n    ActivityType[ActivityType[\"SelectRingBlk\"] = 14] = \"SelectRingBlk\";\n    ActivityType[ActivityType[\"SelectCurElement\"] = 15] = \"SelectCurElement\";\n    ActivityType[ActivityType[\"SelectToggle\"] = 16] = \"SelectToggle\";\n    ActivityType[ActivityType[\"SelectUnCurrent\"] = 17] = \"SelectUnCurrent\";\n    ActivityType[ActivityType[\"Element\"] = 18] = \"Element\";\n    ActivityType[ActivityType[\"AtomPos\"] = 19] = \"AtomPos\";\n    ActivityType[ActivityType[\"Charge\"] = 20] = \"Charge\";\n    ActivityType[ActivityType[\"Connect\"] = 21] = \"Connect\";\n    ActivityType[ActivityType[\"Disconnect\"] = 22] = \"Disconnect\";\n    ActivityType[ActivityType[\"MetalLigate\"] = 23] = \"MetalLigate\";\n    ActivityType[ActivityType[\"BondOrder\"] = 24] = \"BondOrder\";\n    ActivityType[ActivityType[\"BondType\"] = 25] = \"BondType\";\n    ActivityType[ActivityType[\"BondGeom\"] = 26] = \"BondGeom\";\n    ActivityType[ActivityType[\"BondAtom\"] = 27] = \"BondAtom\";\n    ActivityType[ActivityType[\"BondSwitch\"] = 28] = \"BondSwitch\";\n    ActivityType[ActivityType[\"BondRotate\"] = 29] = \"BondRotate\";\n    ActivityType[ActivityType[\"BondAddTwo\"] = 30] = \"BondAddTwo\";\n    ActivityType[ActivityType[\"BondInsert\"] = 31] = \"BondInsert\";\n    ActivityType[ActivityType[\"Join\"] = 32] = \"Join\";\n    ActivityType[ActivityType[\"Nudge\"] = 33] = \"Nudge\";\n    ActivityType[ActivityType[\"NudgeLots\"] = 34] = \"NudgeLots\";\n    ActivityType[ActivityType[\"NudgeFar\"] = 35] = \"NudgeFar\";\n    ActivityType[ActivityType[\"Flip\"] = 36] = \"Flip\";\n    ActivityType[ActivityType[\"Scale\"] = 37] = \"Scale\";\n    ActivityType[ActivityType[\"Rotate\"] = 38] = \"Rotate\";\n    ActivityType[ActivityType[\"BondDist\"] = 39] = \"BondDist\";\n    ActivityType[ActivityType[\"AlignAngle\"] = 40] = \"AlignAngle\";\n    ActivityType[ActivityType[\"AlignRegular\"] = 41] = \"AlignRegular\";\n    ActivityType[ActivityType[\"AdjustTorsion\"] = 42] = \"AdjustTorsion\";\n    ActivityType[ActivityType[\"Move\"] = 43] = \"Move\";\n    ActivityType[ActivityType[\"Ring\"] = 44] = \"Ring\";\n    ActivityType[ActivityType[\"TemplateFusion\"] = 45] = \"TemplateFusion\";\n    ActivityType[ActivityType[\"AbbrevTempl\"] = 46] = \"AbbrevTempl\";\n    ActivityType[ActivityType[\"AbbrevGroup\"] = 47] = \"AbbrevGroup\";\n    ActivityType[ActivityType[\"AbbrevFormula\"] = 48] = \"AbbrevFormula\";\n    ActivityType[ActivityType[\"AbbrevClear\"] = 49] = \"AbbrevClear\";\n    ActivityType[ActivityType[\"AbbrevExpand\"] = 50] = \"AbbrevExpand\";\n    ActivityType[ActivityType[\"BondArtifactPath\"] = 51] = \"BondArtifactPath\";\n    ActivityType[ActivityType[\"BondArtifactRing\"] = 52] = \"BondArtifactRing\";\n    ActivityType[ActivityType[\"BondArtifactArene\"] = 53] = \"BondArtifactArene\";\n    ActivityType[ActivityType[\"BondArtifactClear\"] = 54] = \"BondArtifactClear\";\n    ActivityType[ActivityType[\"PolymerBlock\"] = 55] = \"PolymerBlock\";\n    ActivityType[ActivityType[\"AddHydrogens\"] = 56] = \"AddHydrogens\";\n    ActivityType[ActivityType[\"RemoveHydrogens\"] = 57] = \"RemoveHydrogens\";\n    ActivityType[ActivityType[\"QueryClear\"] = 58] = \"QueryClear\";\n    ActivityType[ActivityType[\"QueryCopy\"] = 59] = \"QueryCopy\";\n    ActivityType[ActivityType[\"QueryPaste\"] = 60] = \"QueryPaste\";\n    ActivityType[ActivityType[\"QuerySetAtom\"] = 61] = \"QuerySetAtom\";\n    ActivityType[ActivityType[\"QuerySetBond\"] = 62] = \"QuerySetBond\";\n    ActivityType[ActivityType[\"QueryBondAny\"] = 63] = \"QueryBondAny\";\n    ActivityType[ActivityType[\"SproutDirection\"] = 64] = \"SproutDirection\";\n})(ActivityType || (ActivityType = {}));\nexport class MoleculeActivity {\n    constructor(input, activity, param, owner) {\n        this.input = input;\n        this.activity = activity;\n        this.param = param;\n        this.owner = owner;\n        this.toClipboard = null;\n        this.output =\n            {\n                mol: null,\n                currentAtom: -1,\n                currentBond: -1,\n                selectedMask: null\n            };\n        let na = this.input.mol.numAtoms;\n        if (this.input.selectedMask == null)\n            this.input.selectedMask = Vec.booleanArray(false, na);\n        while (this.input.selectedMask.length < na)\n            this.input.selectedMask.push(false);\n        this.subjectMask = this.input.selectedMask.slice(0);\n        this.subjectLength = Vec.maskCount(this.subjectMask);\n        this.subjectIndex = [];\n        this.hasSelected = this.subjectLength > 0;\n        if (this.subjectLength == 0) {\n            if (this.input.currentAtom > 0) {\n                this.subjectLength = 1;\n                this.subjectMask[this.input.currentAtom - 1] = true;\n                this.subjectIndex = [this.input.currentAtom];\n            }\n            else if (this.input.currentBond > 0) {\n                let bfr = this.input.mol.bondFrom(this.input.currentBond), bto = this.input.mol.bondTo(this.input.currentBond);\n                let b1 = Math.min(bfr, bto), b2 = Math.max(bfr, bto);\n                this.subjectLength = 2;\n                this.subjectMask[b1 - 1] = true;\n                this.subjectMask[b2 - 1] = true;\n                this.subjectIndex = [b1, b2];\n            }\n        }\n        else {\n            this.subjectIndex = Vec.maskIdx(this.subjectMask);\n            Vec.addTo(this.subjectIndex, 1);\n        }\n    }\n    setOwner(owner) {\n        this.owner = owner;\n    }\n    evaluate() {\n        return true;\n    }\n    execute() {\n        let param = this.param;\n        if (this.activity == ActivityType.Delete)\n            this.execDelete();\n        else if (this.activity == ActivityType.Clear)\n            this.execClear();\n        else if (this.activity == ActivityType.Copy)\n            this.execCopy(false);\n        else if (this.activity == ActivityType.Cut)\n            this.execCopy(true);\n        else if (this.activity == ActivityType.SelectAll)\n            this.execSelectAll(true);\n        else if (this.activity == ActivityType.SelectNone)\n            this.execSelectAll(false);\n        else if (this.activity == ActivityType.SelectPrevComp)\n            this.execSelectComp(-1);\n        else if (this.activity == ActivityType.SelectNextComp)\n            this.execSelectComp(1);\n        else if (this.activity == ActivityType.SelectSide)\n            this.execSelectSide();\n        else if (this.activity == ActivityType.SelectGrow)\n            this.execSelectGrow();\n        else if (this.activity == ActivityType.SelectShrink)\n            this.execSelectShrink();\n        else if (this.activity == ActivityType.SelectChain)\n            this.execSelectChain();\n        else if (this.activity == ActivityType.SelectSmRing)\n            this.execSelectSmRing();\n        else if (this.activity == ActivityType.SelectRingBlk)\n            this.execSelectRingBlk();\n        else if (this.activity == ActivityType.SelectCurElement)\n            this.execSelectCurElement();\n        else if (this.activity == ActivityType.SelectToggle)\n            this.execSelectToggle();\n        else if (this.activity == ActivityType.SelectUnCurrent)\n            this.execSelectUnCurrent();\n        else if (this.activity == ActivityType.Element)\n            this.execElement(param.element, param.positionX, param.positionY, param.keepAbbrev);\n        else if (this.activity == ActivityType.Charge)\n            this.execCharge(param.delta);\n        else if (this.activity == ActivityType.Connect)\n            this.execConnect(1, Molecule.BONDTYPE_NORMAL);\n        else if (this.activity == ActivityType.Disconnect)\n            this.execDisconnect();\n        else if (this.activity == ActivityType.MetalLigate)\n            this.execMetalLigate();\n        else if (this.activity == ActivityType.BondOrder)\n            this.execBond(param.order, Molecule.BONDTYPE_NORMAL);\n        else if (this.activity == ActivityType.BondType)\n            this.execBond(1, param.type);\n        else if (this.activity == ActivityType.BondGeom)\n            this.execBondGeom(param.geom);\n        else if (this.activity == ActivityType.BondAtom)\n            this.execBondAtom(param.order, param.type, param.element, param.x1, param.y1, param.x2, param.y2);\n        else if (this.activity == ActivityType.BondSwitch)\n            this.execBondSwitch();\n        else if (this.activity == ActivityType.BondRotate)\n            this.execBondRotate();\n        else if (this.activity == ActivityType.BondAddTwo)\n            this.execBondAddTwo();\n        else if (this.activity == ActivityType.BondInsert)\n            this.execBondInsert();\n        else if (this.activity == ActivityType.Join)\n            this.execJoin();\n        else if (this.activity == ActivityType.Nudge)\n            this.execNudge(param.dir, 0.1);\n        else if (this.activity == ActivityType.NudgeLots)\n            this.execNudge(param.dir, 1);\n        else if (this.activity == ActivityType.NudgeFar)\n            this.execNudgeFar(param.dir);\n        else if (this.activity == ActivityType.Flip)\n            this.execFlip(param.axis);\n        else if (this.activity == ActivityType.Scale)\n            this.execScale(param.mag);\n        else if (this.activity == ActivityType.Rotate)\n            this.execRotate(param.theta, param.centreX, param.centreY);\n        else if (this.activity == ActivityType.BondDist)\n            this.execBondDist(param.dist);\n        else if (this.activity == ActivityType.AlignAngle)\n            this.execAlignAngle(param.angle);\n        else if (this.activity == ActivityType.AlignRegular)\n            this.execAlignRegular();\n        else if (this.activity == ActivityType.AdjustTorsion)\n            this.execAdjustTorsion(param.angle);\n        else if (this.activity == ActivityType.Move)\n            this.execMove(param.refAtom, param.deltaX, param.deltaY);\n        else if (this.activity == ActivityType.Ring)\n            this.execRing(param.ringX, param.ringY, param.aromatic);\n        else if (this.activity == ActivityType.TemplateFusion) {\n            this.execTemplateFusion(Molecule.fromString(param.fragNative));\n            if (this.owner)\n                this.owner.setPermutations(this.output.permutations);\n            return;\n        }\n        else if (this.activity == ActivityType.AbbrevTempl)\n            this.execAbbrevTempl();\n        else if (this.activity == ActivityType.AbbrevGroup)\n            this.execAbbrevGroup();\n        else if (this.activity == ActivityType.AbbrevFormula)\n            this.execAbbrevFormula();\n        else if (this.activity == ActivityType.AbbrevClear)\n            this.execAbbrevClear();\n        else if (this.activity == ActivityType.AbbrevExpand)\n            this.execAbbrevExpand();\n        else if (this.activity == ActivityType.BondArtifactPath || this.activity == ActivityType.BondArtifactRing ||\n            this.activity == ActivityType.BondArtifactArene || this.activity == ActivityType.BondArtifactClear)\n            this.execBondArtifact(this.activity);\n        else if (this.activity == ActivityType.PolymerBlock)\n            this.execPolymerBlock();\n        else if (this.activity == ActivityType.AddHydrogens)\n            this.execAddHydrogens();\n        else if (this.activity == ActivityType.RemoveHydrogens)\n            this.execRemoveHydrogens();\n        else if (this.activity == ActivityType.QueryClear)\n            this.execQueryClear();\n        else if (this.activity == ActivityType.QueryCopy)\n            this.execQueryCopy();\n        else if (this.activity == ActivityType.QueryPaste)\n            this.execQueryPaste();\n        else if (this.activity == ActivityType.QuerySetAtom)\n            this.execQuerySetAtom();\n        else if (this.activity == ActivityType.QuerySetBond)\n            this.execQuerySetBond();\n        else if (this.activity == ActivityType.QueryBondAny)\n            this.execQueryBondAny();\n        else if (this.activity == ActivityType.SproutDirection)\n            this.execSproutDirection(param.deltaX, param.deltaY);\n        this.finish();\n    }\n    finish() {\n        if (!this.owner)\n            return;\n        if (this.output.mol != null || this.output.currentAtom >= 0 || this.output.currentBond >= 0 || this.output.selectedMask != null) {\n            this.owner.setState(this.output, true);\n            if (this.errmsg != null)\n                this.owner.showMessage(this.errmsg, false);\n        }\n        else {\n            if (this.errmsg != null)\n                this.owner.showMessage(this.errmsg, true);\n        }\n    }\n    execDelete() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.mol = mol.clone();\n        this.zapSubject();\n        if (this.input.currentBond > 0 && !this.hasSelected) {\n            this.output.mol.deleteBond(this.input.currentBond);\n            this.output.currentBond = 0;\n            return;\n        }\n        if (this.subjectLength == 1 && this.subjectIndex[0] == this.input.currentAtom) {\n            let adj = mol.atomAdjList(this.input.currentAtom);\n            if (adj.length == 1) {\n                this.output.currentAtom = adj[0];\n                if (this.output.currentAtom > this.input.currentAtom)\n                    this.output.currentAtom--;\n            }\n        }\n        for (let n = this.subjectLength - 1; n >= 0; n--)\n            this.output.mol.deleteAtomAndBonds(this.subjectIndex[n]);\n    }\n    execCopy(withCut) {\n        let mol = this.input.mol;\n        if (this.subjectLength > 0)\n            mol = MolUtil.subgraphWithAttachments(mol, this.subjectMask);\n        if (this.owner)\n            this.owner.performCopy(mol);\n        else\n            this.toClipboard = mol.toString();\n        if (withCut) {\n            this.zapSubject();\n            this.output.mol = MolUtil.subgraphMask(this.input.mol, Vec.notMask(this.subjectMask));\n        }\n    }\n    execClear() {\n        this.output.mol = new Molecule();\n        this.zapSubject();\n    }\n    execSelectAll(all) {\n        let same = true;\n        for (let n = 0; n < this.input.mol.numAtoms; n++)\n            if (this.subjectMask[n] != all) {\n                same = false;\n                break;\n            }\n        if (same) {\n            this.errmsg = all ? 'All atoms already selected.' : 'All atoms already deselected.';\n            return;\n        }\n        this.output.selectedMask = Vec.booleanArray(all, this.input.mol.numAtoms);\n    }\n    execSelectComp(dir) {\n        let cclist = MolUtil.componentList(this.input.mol);\n        if (cclist.length == 1 && this.hasSelected && this.subjectLength == this.input.mol.numAtoms) {\n            this.errmsg = 'All atoms already selected.';\n            return;\n        }\n        let sel = this.pickSelectedGroup(cclist, dir);\n        this.output.selectedMask = Vec.booleanArray(false, this.input.mol.numAtoms);\n        for (let n = 0; n < cclist[sel].length; n++)\n            this.output.selectedMask[cclist[sel][n] - 1] = true;\n    }\n    execSelectSide() {\n        if (!this.requireCurrent())\n            return;\n        let mol = this.input.mol, currentAtom = this.input.currentAtom, currentBond = this.input.currentBond;\n        if (currentAtom > 0 && mol.atomAdjCount(currentAtom) == 0) {\n            this.errmsg = 'Current atom has no neighbours.';\n            return;\n        }\n        if (currentBond > 0 && mol.atomAdjCount(mol.bondFrom(currentBond)) == 1 && mol.atomAdjCount(mol.bondTo(currentBond)) == 1) {\n            this.errmsg = 'Current bond has no neighbours.';\n            return;\n        }\n        let sides = currentAtom > 0 ? MolUtil.getAtomSides(mol, currentAtom) : MolUtil.getBondSides(mol, currentBond);\n        let sel = this.pickSelectedGroup(sides, 1);\n        this.output.selectedMask = Vec.booleanArray(false, mol.numAtoms);\n        for (let n = 0; n < sides[sel].length; n++)\n            this.output.selectedMask[sides[sel][n] - 1] = true;\n    }\n    execSelectGrow() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol, currentAtom = this.input.currentAtom, currentBond = this.input.currentBond;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (!this.hasSelected) {\n            if (currentAtom > 0) {\n                this.output.selectedMask[currentAtom - 1] = true;\n            }\n            else {\n                this.output.selectedMask[mol.bondFrom(currentBond) - 1] = true;\n                this.output.selectedMask[mol.bondTo(currentBond) - 1] = true;\n            }\n        }\n        else {\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n                if (this.input.selectedMask[bfr] && !this.input.selectedMask[bto])\n                    this.output.selectedMask[bto] = true;\n                else if (this.input.selectedMask && !this.input.selectedMask[bfr])\n                    this.output.selectedMask[bfr] = true;\n            }\n        }\n    }\n    execSelectShrink() {\n        if (!this.requireSelected())\n            return;\n        let mol = this.input.mol;\n        let count = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (!this.input.selectedMask[bfr] || !this.input.selectedMask[bto])\n                continue;\n            count[bfr]++;\n            count[bto]++;\n        }\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let n = 0; n < mol.numAtoms; n++)\n            this.output.selectedMask[n] = this.input.selectedMask[n] && count[n] >= 2;\n    }\n    execSelectChain() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (this.input.selectedMask[bfr] && !this.input.selectedMask[bto] && mol.atomRingBlock(bto + 1) == 0)\n                this.output.selectedMask[bto] = true;\n            else if (this.input.selectedMask[bto] && !this.input.selectedMask[bfr] && mol.atomRingBlock(bfr + 1) == 0)\n                this.output.selectedMask[bfr] = true;\n        }\n    }\n    execSelectSmRing() {\n        if (!this.requireSubject())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let r = 3; r <= 8; r++) {\n            let rings = this.input.mol.findRingsOfSize(r);\n            for (let i = 0; i < rings.length; i++) {\n                let any = false;\n                for (let j = 0; j < rings[i].length; j++)\n                    if (this.subjectMask[rings[i][j] - 1]) {\n                        any = true;\n                        break;\n                    }\n                if (any)\n                    for (let j = 0; j < rings[i].length; j++)\n                        this.output.selectedMask[rings[i][j] - 1] = true;\n            }\n        }\n    }\n    execSelectRingBlk() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        let maxRB = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            maxRB = Math.max(maxRB, mol.atomRingBlock(n));\n        if (maxRB == 0)\n            return;\n        let gotRB = Vec.booleanArray(false, maxRB);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let rb = mol.atomRingBlock(n);\n            if (rb > 0 && this.subjectMask[n - 1])\n                gotRB[rb - 1] = true;\n        }\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let rb = mol.atomRingBlock(n);\n            if (rb > 0 && gotRB[rb - 1])\n                this.output.selectedMask[n - 1] = true;\n        }\n    }\n    execSelectCurElement() {\n        if (!this.requireCurrent())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        let el1 = '', el2 = '';\n        if (this.input.currentAtom > 0) {\n            el1 = mol.atomElement(this.input.currentAtom);\n        }\n        else {\n            el1 = mol.atomElement(mol.bondFrom(this.input.currentBond));\n            el2 = mol.atomElement(mol.bondTo(this.input.currentBond));\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomElement(n) == el1 || mol.atomElement(n) == el2)\n                this.output.selectedMask[n - 1] = true;\n    }\n    execSelectToggle() {\n        if (!this.requireCurrent())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (this.input.currentAtom > 0) {\n            this.output.selectedMask[this.input.currentAtom - 1] = !this.output.selectedMask[this.input.currentAtom - 1];\n        }\n        else {\n            let bfr = this.input.mol.bondFrom(this.input.currentBond), bto = this.input.mol.bondTo(this.input.currentBond);\n            let sel = !this.input.selectedMask[bfr - 1] || !this.input.selectedMask[bto - 1];\n            this.output.selectedMask[bfr - 1] = sel;\n            this.output.selectedMask[bto - 1] = sel;\n        }\n    }\n    execSelectUnCurrent() {\n        if (!this.requireCurrent())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (this.input.currentAtom > 0) {\n            this.output.selectedMask[this.input.currentAtom - 1] = false;\n        }\n        else {\n            this.output.selectedMask[this.input.mol.bondFrom(this.input.currentBond) - 1] = false;\n            this.output.selectedMask[this.input.mol.bondTo(this.input.currentBond) - 1] = false;\n        }\n    }\n    execElement(element, positionX, positionY, keepAbbrev) {\n        const QUERY_ELEMENTS = ['A', 'X', 'Y', 'Z', 'Q', 'M', 'T', 'E', 'R'];\n        if (this.subjectLength > 0 && !QUERY_ELEMENTS.includes(element)) {\n            let anyChange = false;\n            for (let n = 0; n < this.subjectLength; n++)\n                if (this.input.mol.atomElement(this.subjectIndex[n]) != element) {\n                    anyChange = true;\n                    break;\n                }\n            if (!anyChange) {\n                this.errmsg = 'Elements not changed.';\n                return;\n            }\n        }\n        let mol = this.output.mol = this.input.mol.clone();\n        let applyQuery = (atom) => {\n            if (element == 'A') {\n                QueryUtil.setQueryAtomElementsNot(mol, atom, ['H']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'X') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['F', 'Cl', 'Br', 'I']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Y') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['O', 'S', 'Se', 'Te']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Z') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['F', 'Cl', 'Br', 'O', 'S']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Q') {\n                QueryUtil.setQueryAtomElementsNot(mol, atom, ['H', 'C']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'M') {\n                const NON_METALS = ['H', 'B', 'C', 'N', 'O', 'F', 'Si', 'P', 'S', 'Cl', 'As', 'Se', 'Br', 'Te', 'I'];\n                QueryUtil.setQueryAtomElementsNot(mol, atom, NON_METALS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'T') {\n                const TRANSITION_METALS = [\n                    'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n                    'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd',\n                    'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg',\n                    'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb', 'Lu',\n                    'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No', 'Lr'\n                ];\n                QueryUtil.setQueryAtomElements(mol, atom, TRANSITION_METALS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'E') {\n                const MAIN_GROUPS = [\n                    'B', 'N', 'O', 'F',\n                    'Al', 'Si', 'P', 'S', 'Cl',\n                    'Zn', 'Ga', 'Se', 'As', 'Se', 'Br',\n                    'Cd', 'In', 'Sn', 'Sb', 'Te', 'I',\n                    'Hg', 'Tl', 'Pb', 'Bi', 'Pb', 'At'\n                ];\n                QueryUtil.setQueryAtomElements(mol, atom, MAIN_GROUPS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'R') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['C', 'N', 'O', 'S', 'P', 'H']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n        };\n        if (mol.numAtoms == 0) {\n            mol.addAtom(element, 0, 0);\n            applyQuery(mol.numAtoms);\n        }\n        else if (this.subjectLength == 0) {\n            if (positionX != null && positionY != null)\n                mol.addAtom(element, positionX, positionY);\n            else\n                SketchUtil.placeNewAtom(mol, element);\n            applyQuery(mol.numAtoms);\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                if (keepAbbrev)\n                    mol.setAtomElement(this.subjectIndex[n], element);\n                else\n                    MolUtil.setAtomElement(mol, this.subjectIndex[n], element);\n                applyQuery(this.subjectIndex[n]);\n            }\n        }\n    }\n    execCharge(delta) {\n        if (!this.requireSubject())\n            return;\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let chg = Math.max(-20, Math.min(20, this.input.mol.atomCharge(this.subjectIndex[n]) + delta));\n            this.output.mol.setAtomCharge(this.subjectIndex[n], chg);\n        }\n    }\n    execConnect(order, type) {\n        if (!this.requireSubject())\n            return;\n        let conn = SketchUtil.pickAtomsToConnect(this.input.mol, this.subjectIndex);\n        if (conn == null) {\n            this.errmsg = 'Subject atoms contain no bonds suitable for connection.';\n            return;\n        }\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < conn.length; n += 2)\n            MolUtil.addBond(this.output.mol, conn[n], conn[n + 1], order, type);\n    }\n    execDisconnect() {\n        let zap = [];\n        let mol = this.input.mol;\n        if (this.hasSelected) {\n            for (let n = 1; n <= mol.numBonds; n++)\n                if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                    zap.push(n);\n        }\n        else if (this.input.currentAtom > 0) {\n            for (let a of mol.atomAdjBonds(this.input.currentAtom))\n                zap.push(a);\n        }\n        else if (this.input.currentBond > 0) {\n            zap.push(this.input.currentBond);\n        }\n        if (zap.length == 0) {\n            this.errmsg = 'Subject atoms contain no bonds suitable for disconnection.';\n            return;\n        }\n        let killmask = Vec.booleanArray(false, mol.numBonds);\n        for (let b of zap)\n            killmask[b - 1] = true;\n        this.output.mol = this.input.mol.clone();\n        for (let n = mol.numBonds; n >= 1; n--)\n            if (killmask[n - 1])\n                this.output.mol.deleteBond(n);\n    }\n    execMetalLigate() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        let ligAtoms = this.subjectIndex.slice(0);\n        let metalAtom = this.input.currentAtom;\n        if (metalAtom == 0) {\n            for (let a of this.subjectIndex) {\n                let atno = mol.atomicNumber(a);\n                if (Chemistry.ELEMENT_BLOCKS[atno] >= 3) {\n                    metalAtom = a;\n                    break;\n                }\n            }\n        }\n        if (metalAtom == 0) {\n            for (let a of this.subjectIndex) {\n                let atno = mol.atomicNumber(a);\n                if (Chemistry.ELEMENT_ROWS[atno] >= 3) {\n                    metalAtom = a;\n                    break;\n                }\n            }\n        }\n        if (metalAtom == 0) {\n            this.errmsg = 'Unsure which is the metal atom: try indicating as current.';\n            return;\n        }\n        let i = ligAtoms.indexOf(metalAtom);\n        if (i >= 0)\n            ligAtoms.splice(i, 1);\n        if (ligAtoms.length == 0)\n            ligAtoms = mol.atomAdjList(metalAtom);\n        if (ligAtoms.length == 0) {\n            this.errmsg = 'Metal centre has no attachments: try selecting atom join-points.';\n            return;\n        }\n        mol = new MetalLigate(mol, metalAtom, ligAtoms).generate();\n        this.output.mol = mol;\n        this.output.currentAtom = metalAtom;\n        this.output.currentBond = -1;\n        this.output.selectedMask = Vec.booleanArray(false, mol.numAtoms);\n        for (let a of ligAtoms)\n            this.output.selectedMask[a - 1] = true;\n    }\n    execBond(order, type) {\n        if (!this.requireSubject())\n            return;\n        if (this.subjectLength == 1) {\n            this.performBondNew(this.subjectIndex[0], order, type);\n            return;\n        }\n        let ccmol = MolUtil.subgraphMask(this.input.mol, this.subjectMask);\n        let oneComp = true;\n        for (let n = ccmol.numAtoms; n >= 1; n--)\n            if (ccmol.atomConnComp(n) != 1) {\n                oneComp = false;\n                break;\n            }\n        if (oneComp)\n            this.performBondChange(order, type);\n        else\n            this.execConnect(order, type);\n    }\n    execBondGeom(geom) {\n        let bond = this.subjectLength == 2 ? this.input.mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) : 0;\n        if (this.subjectLength == 0 || this.subjectLength > 2 || (this.subjectLength == 2 && bond == 0)) {\n            this.errmsg = 'The subject must be a single atom or bond.';\n            return;\n        }\n        if (this.subjectLength == 1)\n            this.performBondGeomAtom(geom, this.subjectIndex[0]);\n        else\n            this.performBondGeomBond(geom, bond);\n    }\n    execBondAtom(order, type, element, x1, y1, x2, y2) {\n        let mol = this.input.mol;\n        let a1 = CoordUtil.atomAtPoint(mol, x1, y1, 0.01), a2 = CoordUtil.atomAtPoint(mol, x2, y2, 0.01);\n        if (a1 > 0 && a1 == a2)\n            return;\n        if (a1 > 0 && a2 > 0 && mol.findBond(a1, a2) > 0)\n            return;\n        this.output.mol = mol.clone();\n        if (a1 == 0)\n            a1 = this.output.mol.addAtom('C', x1, y1);\n        if (a2 == 0)\n            a2 = this.output.mol.addAtom(element, x2, y2);\n        this.output.mol.addBond(a1, a2, order, type);\n    }\n    execBondSwitch() {\n        if (this.input.altmol) {\n            this.output.mol = this.input.altmol;\n            this.output.altmol = this.input.mol;\n            return;\n        }\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        let src = 0, dst = [];\n        if (this.subjectLength == 1) {\n            src = this.subjectIndex[0];\n            let adj = mol.atomAdjList(src);\n            for (let n = 0; n < adj.length; n++)\n                if (mol.atomAdjCount(adj[n]) == 1)\n                    dst.push(adj[n]);\n        }\n        else if (this.subjectLength == 2 && mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) > 0) {\n            let ac1 = mol.atomAdjCount(this.subjectIndex[0]), ac2 = mol.atomAdjCount(this.subjectIndex[1]);\n            if (ac1 > 1 && ac2 == 1) {\n                src = this.subjectIndex[0];\n                dst.push(this.subjectIndex[1]);\n            }\n            else if (ac1 == 1 && ac2 > 1) {\n                src = this.subjectIndex[1];\n                dst.push(this.subjectIndex[0]);\n            }\n        }\n        if (src == 0 || dst.length == 0) {\n            this.errmsg = 'Subject must include a terminal bond.';\n            return;\n        }\n        let geoms = SketchUtil.guessAtomGeometry(mol, src, 1);\n        if (geoms.length == 0) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        this.output.mol = SketchUtil.switchAtomGeometry(mol, src, dst, geoms);\n        if (this.output.mol == null) {\n            this.errmsg = 'No alternative geometries identified.';\n        }\n    }\n    execBondRotate() {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol;\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot rotate a ring-bond.';\n            return;\n        }\n        if (mol.atomAdjCount(mol.bondFrom(bond)) == 1 && mol.atomAdjCount(mol.bondTo(bond)) == 1) {\n            this.errmsg = 'Two-atom components do not rotate.';\n            return;\n        }\n        mol = mol.clone();\n        let [atom1, atom2, side] = this.mobileSide(bond, true);\n        let cx = mol.atomX(atom1), cy = mol.atomY(atom1);\n        let theta = Math.atan2(mol.atomY(atom1) - mol.atomY(atom2), mol.atomX(atom1) - mol.atomX(atom2));\n        for (let a of side)\n            if (a != atom1) {\n                let dx = mol.atomX(a) - cx, dy = mol.atomY(a) - cy, dist = norm_xy(dx, dy);\n                let dtheta = Math.atan2(dy, dx);\n                dtheta = theta - angleDiff(dtheta, theta);\n                mol.setAtomPos(a, cx + dist * Math.cos(dtheta), cy + dist * Math.sin(dtheta));\n            }\n        let mask = Vec.idxMask(Vec.add(side, -1), mol.numAtoms);\n        for (let b = 1; b <= mol.numBonds; b++)\n            if (mask[mol.bondFrom(b) - 1] && mask[mol.bondTo(b) - 1]) {\n                let bt = mol.bondType(b);\n                if (bt == Molecule.BONDTYPE_INCLINED)\n                    mol.setBondType(b, Molecule.BONDTYPE_DECLINED);\n                else if (bt == Molecule.BONDTYPE_DECLINED)\n                    mol.setBondType(b, Molecule.BONDTYPE_INCLINED);\n            }\n        if (CoordUtil.sketchEquivalent(this.input.mol, mol)) {\n            this.errmsg = 'Rotation has no effect.';\n            return;\n        }\n        this.output.mol = mol;\n    }\n    execBondAddTwo() {\n        if (this.subjectLength != 1) {\n            this.errmsg = 'Subject must be a single atom.';\n            return;\n        }\n        let atom = this.subjectIndex[0];\n        if (this.input.mol.atomAdjCount(atom) < 2) {\n            this.errmsg = 'Subject atom must already have at least 2 bonds.';\n            return;\n        }\n        let ang = SketchUtil.calculateNewBondAngles(this.input.mol, atom, 1);\n        if (ang.length == 0)\n            ang = SketchUtil.exitVectors(this.input.mol, atom);\n        if (ang.length == 0) {\n            this.errmsg = 'Could not find a suitable geometry for new substituents.';\n            return;\n        }\n        let baseAng = ang[0];\n        let cx = this.input.mol.atomX(atom), cy = this.input.mol.atomY(atom);\n        if (ang.length > 1) {\n            let best = 0;\n            for (let n = 0; n < ang.length; n++) {\n                let x = cx + Molecule.IDEALBOND * Math.cos(ang[n]);\n                let y = cy + Molecule.IDEALBOND * Math.sin(ang[n]);\n                let score = CoordUtil.congestionPoint(this.input.mol, x, y);\n                if (n == 0 || score < best) {\n                    best = score;\n                    baseAng = ang[n];\n                }\n            }\n        }\n        let ang1 = baseAng - 30.0 * DEGRAD, ang2 = baseAng + 30.0 * DEGRAD;\n        let mol = this.input.mol.clone();\n        let a1 = mol.addAtom('C', cx + Molecule.IDEALBOND * Math.cos(ang1), cy + Molecule.IDEALBOND * Math.sin(ang1));\n        let a2 = mol.addAtom('C', cx + Molecule.IDEALBOND * Math.cos(ang2), cy + Molecule.IDEALBOND * Math.sin(ang2));\n        mol.addBond(atom, a1, 1);\n        mol.addBond(atom, a2, 1);\n        this.output.mol = mol;\n    }\n    execBondInsert() {\n        let mol = this.input.mol, bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot insert into a ring-bond.';\n            return;\n        }\n        let [alink, _, side] = this.mobileSide(bond);\n        mol = mol.clone();\n        mol.setBondOrder(bond, 1);\n        let fragmask = Vec.booleanArray(false, mol.numAtoms);\n        for (let a of side)\n            fragmask[a - 1] = true;\n        let frag = MolUtil.subgraphWithAttachments(mol, fragmask);\n        for (let n = mol.numAtoms; n >= 1; n--)\n            if (fragmask[n - 1] && n != alink) {\n                mol.deleteAtomAndBonds(n);\n                if (n < alink)\n                    alink -= 1;\n            }\n        mol.setAtomElement(alink, 'C');\n        mol.setAtomCharge(alink, 0);\n        mol.setAtomUnpaired(alink, 0);\n        mol.setAtomHExplicit(alink, Molecule.HEXPLICIT_UNKNOWN);\n        mol.setAtomIsotope(alink, Molecule.ISOTOPE_NATURAL);\n        mol.setAtomMapNum(alink, 0);\n        mol.setAtomExtra(alink, []);\n        mol.setAtomTransient(alink, []);\n        let fusion = new TemplateFusion(mol, frag, '');\n        fusion.withGuideOnly = true;\n        fusion.permuteAtom(alink);\n        if (fusion.perms.length == 0) {\n            this.errmsg = 'Unable to insert.';\n            return;\n        }\n        this.output.mol = fusion.perms[0].mol;\n        this.zapSubject();\n        this.output.currentAtom = alink;\n    }\n    execJoin() {\n        if (!this.requireSubject())\n            return;\n        this.output.mol = SketchUtil.joinOverlappingAtoms(this.input.mol, this.subjectMask);\n        if (this.output.mol == null) {\n            this.errmsg = 'Subject contains no overlapping atoms.';\n        }\n        else {\n            this.zapSubject();\n        }\n    }\n    execNudge(dir, extent) {\n        if (!this.requireSubject())\n            return;\n        let dx = extent * (dir == 'left' ? -1 : dir == 'right' ? 1 : 0);\n        let dy = extent * (dir == 'down' ? -1 : dir == 'up' ? 1 : 0);\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let x = this.output.mol.atomX(this.subjectIndex[n]), y = this.output.mol.atomY(this.subjectIndex[n]);\n            this.output.mol.setAtomPos(this.subjectIndex[n], x + dx, y + dy);\n        }\n    }\n    execNudgeFar(dir) {\n        if (!this.requireSubject())\n            return;\n        if (this.subjectLength == this.input.mol.numAtoms) {\n            this.errmsg = 'Cannot apply to entire molecule.';\n            return;\n        }\n        let dx = dir == 'left' ? -1 : dir == 'right' ? 1 : 0;\n        let dy = dir == 'down' ? -1 : dir == 'up' ? 1 : 0;\n        this.output.mol = SketchUtil.moveToEdge(this.input.mol, this.subjectMask, dx, dy);\n        if (this.output.mol == null) {\n            this.execNudge(dir, 1);\n        }\n    }\n    execFlip(axis) {\n        if (this.input.mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        let isVertical = axis == 'ver';\n        let cx = 0, cy = 0;\n        let mask = this.subjectMask, mol = this.input.mol;\n        if (this.input.currentAtom > 0) {\n            cx = mol.atomX(this.input.currentAtom);\n            cy = mol.atomY(this.input.currentAtom);\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(this.input.currentAtom);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.input.currentBond > 0) {\n            let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(bfr);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.subjectLength == 0) {\n            let box = mol.boundary();\n            cx = 0.5 * (box.minX() + box.maxX());\n            cy = 0.5 * (box.minY() + box.maxY());\n            mask = Vec.booleanArray(true, mol.numAtoms);\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                if (!isVertical)\n                    this.output.mol.setAtomX(n, 2 * cx - this.output.mol.atomX(n));\n                else\n                    this.output.mol.setAtomY(n, 2 * cy - this.output.mol.atomY(n));\n            }\n    }\n    execScale(mag) {\n        const { mol, currentAtom, currentBond } = this.input;\n        if (mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        if (currentAtom > 0) {\n            let connAtoms = [];\n            for (let a of this.subjectIndex)\n                if (a != currentAtom && mol.findBond(currentAtom, a) > 0)\n                    connAtoms.push(a);\n            let g = Graph.fromMolecule(mol);\n            g.isolateNode(currentAtom - 1);\n            let anything = false;\n            for (let cc of g.calculateComponentGroups()) {\n                Vec.addTo(cc, 1);\n                let sz = 0, dx = 0, dy = 0;\n                for (let a of cc)\n                    if (connAtoms.includes(a)) {\n                        dx += mol.atomX(a) - mol.atomX(currentAtom);\n                        dy += mol.atomY(a) - mol.atomY(currentAtom);\n                        sz++;\n                    }\n                if (sz == 0)\n                    continue;\n                [dx, dy] = [dx / sz, dy / sz];\n                if (Math.abs(dx) < 0.1 && Math.abs(dy) < 0.1)\n                    continue;\n                [dx, dy] = [dx * (mag - 1), dy * (mag - 1)];\n                if (!this.output.mol)\n                    this.output.mol = mol.clone();\n                for (let a of cc)\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + dx, this.output.mol.atomY(a) + dy);\n                anything = true;\n            }\n            if (anything)\n                return;\n        }\n        let b;\n        if (this.subjectLength == 2 && (b = mol.findBond(this.subjectIndex[0], this.subjectIndex[1])) > 0 && !mol.bondInRing(b)) {\n            let a1 = this.subjectIndex[0], a2 = this.subjectIndex[1];\n            let ccmol = mol.clone();\n            ccmol.deleteBond(b);\n            let idx1 = [], idx2 = [];\n            for (let n = 1; n <= ccmol.numAtoms; n++) {\n                if (ccmol.atomConnComp(n) == ccmol.atomConnComp(a1))\n                    idx1.push(n);\n                else if (ccmol.atomConnComp(n) == ccmol.atomConnComp(a2))\n                    idx2.push(n);\n            }\n            let dx = (mol.atomX(a2) - mol.atomX(a1)) * (mag - 1);\n            let dy = (mol.atomY(a2) - mol.atomY(a1)) * (mag - 1);\n            if (idx1.length == idx2.length) {\n                dx *= 0.5;\n                dy *= 0.5;\n            }\n            this.output.mol = mol.clone();\n            if (idx1.length <= idx2.length)\n                for (let n = 0; n < idx1.length; n++) {\n                    let a = idx1[n];\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) - dx, this.output.mol.atomY(a) - dy);\n                }\n            if (idx2.length <= idx1.length)\n                for (let n = 0; n < idx2.length; n++) {\n                    let a = idx2[n];\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + dx, this.output.mol.atomY(a) + dy);\n                }\n            return;\n        }\n        let cx = 0, cy = 0;\n        if (currentAtom > 0) {\n            cx = mol.atomX(currentAtom);\n            cy = mol.atomY(currentAtom);\n        }\n        else if (currentBond > 0) {\n            let bfr = mol.bondFrom(currentBond), bto = mol.bondTo(currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let x = this.output.mol.atomX(this.subjectIndex[n]);\n            let y = this.output.mol.atomY(this.subjectIndex[n]);\n            this.output.mol.setAtomPos(this.subjectIndex[n], (x - cx) * mag + cx, (y - cy) * mag + cy);\n        }\n    }\n    execRotate(theta, centreX, centreY) {\n        theta *= DEGRAD;\n        let mol = this.input.mol;\n        if (centreX != null && centreY != null) {\n            this.output.mol = mol.clone();\n            let mask = this.subjectLength == 0 ? Vec.booleanArray(true, mol.numAtoms) : this.subjectMask;\n            CoordUtil.rotateAtoms(this.output.mol, mask, centreX, centreY, theta);\n            return;\n        }\n        if (mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        let cx = 0, cy = 0;\n        let mask = this.subjectMask;\n        if (this.input.currentAtom > 0) {\n            cx = mol.atomX(this.input.currentAtom);\n            cy = mol.atomY(this.input.currentAtom);\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(this.input.currentAtom);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n            if (Vec.maskCount(mask) == 1 && mask[this.input.currentAtom - 1]) {\n                this.errmsg = 'Component is isolated.';\n                return;\n            }\n        }\n        else if (this.input.currentBond > 0) {\n            let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(bfr);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.subjectLength == 0) {\n            let box = mol.boundary();\n            cx = 0.5 * (box.minX() + box.maxX());\n            cy = 0.5 * (box.minY() + box.maxY());\n            mask = Vec.booleanArray(true, mol.numAtoms);\n        }\n        else {\n            if (this.subjectLength == 1) {\n                this.errmsg = 'Component is isolated.';\n                return;\n            }\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        CoordUtil.rotateAtoms(this.output.mol, mask, cx, cy, theta);\n    }\n    execBondDist(dist) {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        if (mol.bondInRing(bond)) {\n            let atom1 = mol.bondFrom(bond), atom2 = mol.bondTo(bond);\n            let dx = mol.atomX(atom2) - mol.atomX(atom1), dy = mol.atomY(atom2) - mol.atomY(atom1), curDist = norm_xy(dx, dy), inv = 1.0 / curDist;\n            let sel1 = this.isSelected(atom1), sel2 = this.isSelected(atom2);\n            let ox = dx * (dist - curDist) * inv, oy = dy * (dist - curDist) * inv;\n            if (sel1 && !sel2) {\n                mol.setAtomPos(atom1, mol.atomX(atom1) - ox, mol.atomY(atom1) - oy);\n            }\n            else if (sel2 && !sel1) {\n                mol.setAtomPos(atom2, mol.atomX(atom2) + ox, mol.atomY(atom2) + oy);\n            }\n            else {\n                mol.setAtomPos(atom1, mol.atomX(atom1) - 0.5 * ox, mol.atomY(atom1) - 0.5 * oy);\n                mol.setAtomPos(atom2, mol.atomX(atom2) + 0.5 * ox, mol.atomY(atom2) + 0.5 * oy);\n            }\n        }\n        else {\n            let [atom1, atom2, side] = this.mobileSide(bond);\n            let dx = mol.atomX(atom2) - mol.atomX(atom1), dy = mol.atomY(atom2) - mol.atomY(atom1);\n            let curDist = norm_xy(dx, dy), inv = 1.0 / curDist;\n            let ox = dx * (dist - curDist) * inv, oy = dy * (dist - curDist) * inv;\n            for (let a of side)\n                mol.setAtomPos(a, mol.atomX(a) - ox, mol.atomY(a) - oy);\n        }\n        this.output.mol = mol;\n    }\n    execAlignAngle(angle) {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot align a ring-bond.';\n            return;\n        }\n        let [atom1, atom2, side] = this.mobileSide(bond);\n        let cx = mol.atomX(atom2), cy = mol.atomY(atom2);\n        let delta = angle - Math.atan2(mol.atomY(atom1) - cy, mol.atomX(atom1) - cx);\n        let cosTheta = Math.cos(delta), sinTheta = Math.sin(delta);\n        for (let a of side) {\n            let x = mol.atomX(a) - cx, y = mol.atomY(a) - cy;\n            mol.setAtomPos(a, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n        }\n        this.output.mol = mol;\n    }\n    execAlignRegular() {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n        let theta = Math.atan2(mol.atomY(bto) - mol.atomY(bfr), mol.atomX(bto) - mol.atomX(bfr)) * RADDEG;\n        if (theta < 0)\n            theta += 360;\n        let snap = Math.round(theta / 30) * 30;\n        if (Math.abs(theta - snap) < 0.001)\n            return;\n        let delta = (snap - theta) * DEGRAD;\n        let mask = this.input.selectedMask;\n        if (Vec.allFalse(mask)) {\n            let cc = mol.atomConnComp(bfr);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                mask[n - 1] = cc == mol.atomConnComp(n);\n        }\n        let cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto)), cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let dx = mol.atomX(n) - cx, dy = mol.atomY(n) - cy;\n                let th = Math.atan2(dy, dx) + delta, dist = norm_xy(dx, dy);\n                mol.setAtomPos(n, cx + dist * Math.cos(th), cy + dist * Math.sin(th));\n            }\n        this.output.mol = mol;\n    }\n    execAdjustTorsion(angle) {\n        if (this.input.currentAtom == 0 || Vec.maskCount(this.input.selectedMask) != 3) {\n            this.errmsg = 'Must be 3 selected atoms and a current atom.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        let a1 = this.input.currentAtom;\n        let atoms = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (n != a1 && this.input.selectedMask[n - 1])\n                atoms.push(n);\n        let a2 = mol.findBond(a1, atoms[0]) > 0 ? atoms.shift() :\n            mol.findBond(a1, atoms[1]) > 0 ? atoms.pop() : 0;\n        if (a2 == 0 || mol.findBond(a2, atoms[0]) == 0) {\n            this.errmsg = 'Selected atoms must be consecutive.';\n            return;\n        }\n        let a3 = atoms[0];\n        let cx = mol.atomX(a2), cy = mol.atomY(a2);\n        let theta1 = Math.atan2(mol.atomY(a1) - cy, mol.atomX(a1) - cx);\n        let theta3 = Math.atan2(mol.atomY(a3) - cy, mol.atomX(a3) - cx);\n        let delta = angle - angleDiff(theta3, theta1);\n        let group1 = [], group3 = [];\n        if (mol.atomRingBlock(a1) == 0 || mol.atomRingBlock(a1) != mol.atomRingBlock(a3)) {\n            let g = Graph.fromMolecule(mol);\n            g.removeEdge(a2 - 1, a1 - 1);\n            g.removeEdge(a2 - 1, a3 - 1);\n            let cc = g.calculateComponents();\n            for (let n = 0; n < g.numNodes; n++) {\n                if (cc[n] == cc[a1 - 1])\n                    group1.push(n + 1);\n                else if (cc[n] == cc[a3 - 1])\n                    group3.push(n + 1);\n            }\n        }\n        if (mol.atomRingBlock(a1) > 0 && mol.atomRingBlock(a1) == mol.atomRingBlock(a2))\n            group1 = [a1];\n        if (mol.atomRingBlock(a3) > 0 && mol.atomRingBlock(a3) == mol.atomRingBlock(a2))\n            group3 = [a3];\n        CoordUtil.rotateAtoms(mol, Vec.idxMask(Vec.add(group1, -1), mol.numAtoms), cx, cy, -0.5 * delta);\n        CoordUtil.rotateAtoms(mol, Vec.idxMask(Vec.add(group3, -1), mol.numAtoms), cx, cy, 0.5 * delta);\n        this.output.mol = mol;\n    }\n    execMove(refAtom, deltaX, deltaY) {\n        let subj = this.subjectIndex;\n        if (Vec.len(subj) == 0) {\n            if (refAtom == 0)\n                return;\n            subj = [refAtom];\n        }\n        this.output.mol = this.input.mol.clone();\n        for (let a of subj)\n            this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + deltaX, this.output.mol.atomY(a) + deltaY);\n    }\n    execRing(ringX, ringY, aromatic) {\n        let rsz = ringX.length;\n        let atoms = Vec.numberArray(0, rsz), bonds = Vec.numberArray(0, rsz);\n        let outmol = this.input.mol.clone();\n        for (let n = 0; n < rsz; n++) {\n            atoms[n] = CoordUtil.atomAtPoint(outmol, ringX[n], ringY[n]);\n            if (atoms[n] == 0)\n                atoms[n] = outmol.addAtom('C', ringX[n], ringY[n]);\n        }\n        for (let n = 0; n < rsz; n++) {\n            let nn = n < rsz - 1 ? n + 1 : 0;\n            bonds[n] = outmol.findBond(atoms[n], atoms[nn]);\n            if (bonds[n] == 0)\n                bonds[n] = outmol.addBond(atoms[n], atoms[nn], 1);\n        }\n        if (aromatic) {\n            let valence = Vec.numberArray(0, rsz);\n            let pi = Vec.booleanArray(false, rsz);\n            for (let n = 0; n < rsz; n++) {\n                valence[n] = Chemistry.ELEMENT_BONDING[outmol.atomicNumber(atoms[n])] + outmol.atomCharge(atoms[n]);\n                if (outmol.atomHExplicit(atoms[n]) != Molecule.HEXPLICIT_UNKNOWN)\n                    valence[n] -= outmol.atomHExplicit(atoms[n]);\n                for (let b of outmol.atomAdjBonds(atoms[n]))\n                    valence[n] -= outmol.bondOrder(b);\n                if (outmol.bondOrder(bonds[n]) >= 2) {\n                    pi[n] = true;\n                    if (n < rsz - 1) {\n                        pi[n] = true;\n                        n++;\n                    }\n                    else\n                        pi[0] = true;\n                }\n            }\n            for (let n = 0; n < rsz; n++) {\n                let nn = n < rsz - 1 ? n + 1 : 0;\n                if (pi[n] || pi[nn])\n                    continue;\n                if (valence[n] > 0 && valence[nn] > 0) {\n                    outmol.setBondOrder(bonds[n], 2);\n                    pi[n] = true;\n                    pi[nn] = true;\n                    valence[n]--;\n                    valence[nn]--;\n                }\n            }\n        }\n        this.output.mol = outmol;\n    }\n    execTemplateFusion(frag) {\n        let mol = this.input.mol;\n        let fusion = new TemplateFusion(mol, frag, '');\n        if (this.subjectLength == 0)\n            fusion.permuteNone();\n        else if (this.subjectLength == 1)\n            fusion.permuteAtom(this.subjectIndex[0]);\n        else if (this.subjectLength == 2 && mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) > 0)\n            fusion.permuteBond(this.subjectIndex[0], this.subjectIndex[1]);\n        else\n            fusion.permuteMulti(this.subjectIndex);\n        let permutations = [];\n        for (let perm of fusion.perms) {\n            let obj = {};\n            obj['mol'] = perm.mol.toString();\n            obj['display'] = perm.display.toString();\n            obj['molidx'] = perm.molidx;\n            obj['temidx'] = perm.temidx;\n            obj['srcidx'] = perm.srcidx;\n            permutations.push(obj);\n        }\n        this.output.permutations = permutations;\n    }\n    execAbbrevTempl() {\n    }\n    execAbbrevGroup() {\n        if (!this.requireSubject())\n            return;\n        if (!this.checkAbbreviationReady())\n            return;\n        let mol = MolUtil.convertToAbbrev(this.input.mol, Vec.notMask(this.subjectMask), '?');\n        if (mol == null) {\n            this.errmsg = 'Inline abbreviations must be terminal with exactly one attachment point.';\n            return;\n        }\n        if (AbbrevContainer.main) {\n            AbbrevContainer.main.submitMolecule(mol, true);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomElement(n) == '?' && MolUtil.hasAbbrev(mol, n))\n                    AbbrevContainer.main.substituteAbbrevName(mol, n);\n        }\n        this.output.mol = mol;\n        this.zapSubject();\n        this.output.currentAtom = mol.numAtoms;\n    }\n    execAbbrevFormula() {\n        if (!this.requireSubject())\n            return;\n        if (!this.checkAbbreviationReady())\n            return;\n        let fixed = this.input.mol.clone();\n        for (let n = 1; n <= fixed.numAtoms; n++)\n            fixed.setAtomHExplicit(n, fixed.atomHydrogens(n));\n        let abv = MolUtil.subgraphMask(fixed, this.subjectMask);\n        let formula = MolUtil.molecularFormula(abv, true);\n        let mol = MolUtil.convertToAbbrev(this.input.mol, Vec.notMask(this.subjectMask), formula);\n        if (mol == null) {\n            this.errmsg = 'Inline abbreviations must be terminal with exactly one attachment point.';\n            return;\n        }\n        this.output.mol = mol;\n        this.zapSubject();\n        this.output.currentAtom = mol.numAtoms;\n    }\n    execAbbrevClear() {\n        let idx = [];\n        for (let n of this.subjectIndex)\n            if (MolUtil.hasAbbrev(this.input.mol, n))\n                idx.push(n);\n        if (idx.length == 0) {\n            this.errmsg = 'No abbreviations to clear.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        for (let n of idx)\n            MolUtil.clearAbbrev(mol, n);\n        this.output.mol = mol;\n    }\n    execAbbrevExpand() {\n        let idx = [];\n        for (let n of this.subjectIndex)\n            if (MolUtil.hasAbbrev(this.input.mol, n))\n                idx.push(n);\n        if (idx.length == 0) {\n            this.errmsg = 'No abbreviations to expand.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        for (let n of idx)\n            MolUtil.expandOneAbbrev(mol, n, true);\n        this.output.mol = mol;\n        this.zapSubject();\n    }\n    execBondArtifact(activity) {\n        if (!this.requireAtoms() || !this.requireSubject())\n            return;\n        let artif = new BondArtifact(this.input.mol.clone());\n        let subject = this.subjectIndex.slice(0), curAtom = this.input.currentAtom;\n        if (curAtom > 0 && subject.indexOf(curAtom) < 0)\n            subject.push(curAtom);\n        if (activity == ActivityType.BondArtifactPath) {\n            if (!artif.createPath(subject)) {\n                this.errmsg = 'Path artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactRing) {\n            if (!artif.createRing(subject)) {\n                this.errmsg = 'Ring artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactArene) {\n            if (!artif.createArene(subject)) {\n                this.errmsg = 'Arene artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactClear) {\n            if (!artif.removeArtifact(subject)) {\n                if (this.removePolymerBlock(subject))\n                    return;\n                this.errmsg = 'No artifact removed.';\n                return;\n            }\n        }\n        artif.rewriteMolecule();\n        this.output.mol = artif.mol;\n    }\n    execPolymerBlock() {\n        if (!this.requireAtoms() || !this.requireSubject())\n            return;\n        if (this.owner)\n            this.owner.performPolymerBlock(this.subjectIndex);\n    }\n    execAddHydrogens() {\n        let mol = this.input.mol.clone();\n        if (!this.requireAtoms())\n            return;\n        let atoms = this.subjectIndex;\n        if (atoms.length == 0)\n            atoms = Vec.identity1(mol.numAtoms);\n        for (let a of atoms) {\n            let hc = mol.atomHydrogens(a);\n            if (hc > 0)\n                SketchUtil.placeAdditionalHydrogens(mol, a, hc);\n        }\n        if (mol.numAtoms == this.input.mol.numAtoms) {\n            this.errmsg = 'Nothing needs to be added.';\n            return;\n        }\n        this.output.mol = mol;\n    }\n    execRemoveHydrogens() {\n        if (!this.requireAtoms())\n            return;\n        let mol = this.input.mol;\n        let selmask = this.subjectMask;\n        if (Vec.allFalse(selmask))\n            selmask = Vec.booleanArray(true, mol.numAtoms);\n        let keepmask = Vec.booleanArray(true, mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.boringHydrogen(mol, n)) {\n                let nbr = mol.atomAdjList(n)[0];\n                if (selmask[n - 1] || selmask[nbr - 1])\n                    keepmask[n - 1] = false;\n            }\n        if (Vec.allTrue(keepmask)) {\n            this.errmsg = 'Nothing to be deleted.';\n            return;\n        }\n        this.output.mol = MolUtil.subgraphMask(mol, keepmask);\n    }\n    execQueryClear() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol.clone();\n        const { currentBond } = this.input;\n        if (currentBond > 0 && QueryUtil.hasAnyQueryBond(mol, currentBond)) {\n            QueryUtil.deleteQueryBondAll(mol, currentBond);\n            this.output.mol = mol;\n            return;\n        }\n        let anything = false;\n        for (let a of this.subjectIndex)\n            if (QueryUtil.hasAnyQueryAtom(mol, a)) {\n                QueryUtil.deleteQueryAtomAll(mol, a);\n                anything = true;\n            }\n        for (let b = 1; b <= mol.numBonds; b++)\n            if (this.subjectMask[mol.bondFrom(b) - 1] && this.subjectMask[mol.bondTo(b) - 1] && QueryUtil.hasAnyQueryBond(mol, b)) {\n                QueryUtil.deleteQueryBondAll(mol, b);\n                anything = true;\n            }\n        if (anything)\n            this.output.mol = mol;\n        else\n            this.errmsg = 'No query terms to clear.';\n    }\n    execQueryCopy() {\n        if (!this.requireSubject())\n            return;\n        const { mol, currentBond } = this.input;\n        if (currentBond > 0) {\n            if (!QueryUtil.hasAnyQueryBond(mol, currentBond)) {\n                this.errmsg = 'Bond has no query terms.';\n                return;\n            }\n            let qmol = new Molecule();\n            qmol.addAtom('*', 0, 0);\n            qmol.addAtom('*', Molecule.IDEALBOND, 0);\n            qmol.addBond(1, 2, 1);\n            qmol.setBondExtra(1, mol.bondExtra(currentBond).filter((xtra) => xtra.startsWith('q')));\n            this.toClipboard = qmol.toString();\n        }\n        else if (this.subjectLength == 1) {\n            let atom = this.subjectIndex[0];\n            if (!QueryUtil.hasAnyQueryAtom(mol, atom)) {\n                this.errmsg = 'Atom has no query terms.';\n                return;\n            }\n            let qmol = new Molecule();\n            qmol.addAtom('*', 0, 0);\n            qmol.setAtomExtra(1, mol.atomExtra(atom).filter((xtra) => xtra.startsWith('q')));\n            this.toClipboard = qmol.toString();\n        }\n        else\n            this.errmsg = 'Subject has to be a single atom or bond.';\n    }\n    execQueryPaste() {\n        if (!this.requireSubject())\n            return;\n        let qmol = this.param.qmol;\n        if (!qmol) { }\n        else if (qmol.numAtoms == 1 && qmol.atomElement(1) == '*' && QueryUtil.hasAnyQueryAtom(qmol, 1)) {\n            let mol = this.output.mol = this.input.mol.clone();\n            let qterms = qmol.atomExtra(1).filter((xtra) => xtra.startsWith('q'));\n            for (let a of this.subjectIndex) {\n                let aterms = mol.atomExtra(a).filter((xtra) => xtra.startsWith('q'));\n                mol.setAtomExtra(a, [...aterms, ...qterms]);\n            }\n            return;\n        }\n        else if (qmol.numAtoms == 2 && qmol.atomElement(1) == '*' && qmol.atomElement(2) == '*' &&\n            qmol.numBonds == 1 && QueryUtil.hasAnyQueryBond(qmol, 1)) {\n            let mol = this.output.mol = this.input.mol.clone();\n            let qterms = qmol.bondExtra(1).filter((xtra) => xtra.startsWith('q'));\n            for (let b = 1; b <= mol.numBonds; b++)\n                if (this.subjectMask[mol.bondFrom(b) - 1] && this.subjectMask[mol.bondTo(b) - 1]) {\n                    let bterms = mol.bondExtra(b).filter((xtra) => xtra.startsWith('q'));\n                    mol.setBondExtra(b, [...bterms, ...qterms]);\n                }\n            return;\n        }\n        this.errmsg = 'Unable to paste query terms.';\n    }\n    execQuerySetAtom() {\n    }\n    execQuerySetBond() {\n    }\n    execQueryBondAny() {\n        if (!this.requireSubject())\n            return;\n        const { mol, currentBond } = this.input;\n        let bonds = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                bonds.push(n);\n        if (bonds.length == 0) {\n            this.errmsg = 'Must select at least one bond.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        for (let b of bonds) {\n            this.output.mol.setBondOrder(b, 0);\n            QueryUtil.setQueryBondOrders(this.output.mol, b, [-1, 0, 1, 2, 3, 4]);\n        }\n    }\n    execSproutDirection(deltaX, deltaY) {\n        var _a, _b;\n        if (!this.requireCurrent())\n            return;\n        if (deltaX == 0 && deltaY == 0)\n            return;\n        const { mol, currentAtom } = this.input;\n        let angleOptions;\n        if (mol.atomAdjCount(currentAtom) == 0)\n            angleOptions = Vec.identity0(12).map((n) => n * TWOPI / 12);\n        else\n            angleOptions = (_a = SketchUtil.primeDirections(mol, currentAtom)) !== null && _a !== void 0 ? _a : SketchUtil.exitVectors(mol, currentAtom);\n        if (angleOptions.length == 0)\n            return;\n        let theta = Math.atan2(deltaY, deltaX);\n        let idx = Vec.idxMin(angleOptions.map((look) => Math.abs(angleDiff(theta, look)) + 0.01 * Math.abs(Math.sin(look))));\n        let px = mol.atomX(currentAtom) + Molecule.IDEALBOND * Math.cos(angleOptions[idx]);\n        let py = mol.atomY(currentAtom) + Molecule.IDEALBOND * Math.sin(angleOptions[idx]);\n        this.output.mol = mol.clone();\n        let newAtom = this.output.mol.addAtom('C', px, py);\n        this.output.mol.addBond(currentAtom, newAtom, 1);\n        this.output.mol = (_b = SketchUtil.joinOverlappingAtoms(this.output.mol, Vec.booleanArray(true, this.output.mol.numAtoms))) !== null && _b !== void 0 ? _b : this.output.mol;\n        for (let n = 1; n <= this.output.mol.numAtoms; n++) {\n            let dx = this.output.mol.atomX(n) - px, dy = this.output.mol.atomY(n) - py;\n            if (norm2_xy(dx, dy) < CoordUtil.OVERLAP_THRESHOLD_SQ) {\n                this.output.currentAtom = n;\n                break;\n            }\n        }\n    }\n    requireSubject() {\n        if (this.subjectLength == 0)\n            this.errmsg = 'Subject required: current atom/bond or selected atoms.';\n        return this.subjectLength > 0;\n    }\n    requireAtoms() {\n        if (this.input.mol.numAtoms == 0)\n            this.errmsg = 'There are no atoms.';\n        return this.input.mol.numAtoms > 0;\n    }\n    requireCurrent() {\n        if (this.input.currentAtom == 0 && this.input.currentBond == 0) {\n            this.errmsg = 'There must be a current atom or bond.';\n            return false;\n        }\n        return true;\n    }\n    requireSelected() {\n        if (!this.hasSelected)\n            this.errmsg = 'No atoms are selected.';\n        return this.hasSelected;\n    }\n    pickSelectedGroup(groups, dir) {\n        if (this.subjectLength == 0)\n            return 0;\n        for (let i = 0; i < groups.length; i++) {\n            let g = groups[i];\n            let all = true;\n            for (let j = 0; j < g.length; j++)\n                if (!this.subjectMask[g[j] - 1]) {\n                    all = false;\n                    break;\n                }\n            if (all) {\n                i += dir;\n                return i < 0 ? i + groups.length : i >= groups.length ? i - groups.length : i;\n            }\n        }\n        for (let i = 0; i < groups.length; i++) {\n            let g = groups[i];\n            for (let j = 0; j < g.length; j++)\n                if (this.subjectMask[g[j] - 1])\n                    return i;\n        }\n        return 0;\n    }\n    zapSubject() {\n        this.output.currentAtom = 0;\n        this.output.currentBond = 0;\n        this.output.selectedMask = Vec.booleanArray(false, this.input.mol.numAtoms);\n    }\n    performBondNew(atom, order, type) {\n        let mol = this.input.mol;\n        let ang = SketchUtil.calculateNewBondAngles(mol, atom, order);\n        if (ang.length == 0)\n            ang = SketchUtil.exitVectors(mol, atom);\n        if (ang.length == 0) {\n            this.errmsg = 'Could not find a suitable geometry for a new substituent.';\n            return;\n        }\n        let bx = [], by = [], bscore = [];\n        for (let n = 0; n < ang.length; n++) {\n            let x = mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(ang[n]);\n            let y = mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(ang[n]);\n            let score = CoordUtil.congestionPoint(mol, x, y);\n            if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(atom)] <= 2)\n                score += Math.abs(angleNorm(ang[n])) * 1E-8;\n            else\n                score += Math.abs(angleDiff(0.5 * Math.PI, ang[n])) * 1E-8;\n            bx.push(x);\n            by.push(y);\n            bscore.push(score);\n        }\n        let idx = Vec.idxSort(bscore);\n        this.output.mol = mol.clone();\n        let anum = CoordUtil.atomAtPoint(this.output.mol, bx[idx[0]], by[idx[0]]);\n        if (anum == 0)\n            anum = this.output.mol.addAtom('C', bx[idx[0]], by[idx[0]]);\n        MolUtil.addBond(this.output.mol, atom, anum, order, type);\n        if (idx.length >= 2) {\n            this.output.altmol = mol.clone();\n            anum = CoordUtil.atomAtPoint(this.output.altmol, bx[idx[1]], by[idx[1]]);\n            if (anum == 0)\n                anum = this.output.altmol.addAtom('C', bx[idx[1]], by[idx[1]]);\n            MolUtil.addBond(this.output.altmol, atom, anum, order, type);\n        }\n    }\n    performBondChange(order, type) {\n        let mol = this.input.mol;\n        let bonds = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                bonds.push(n);\n        let switchType = type == Molecule.BONDTYPE_DECLINED || type == Molecule.BONDTYPE_INCLINED;\n        let stereoType = switchType || type == Molecule.BONDTYPE_UNKNOWN;\n        let anyChange = switchType;\n        for (let n = 0; n < bonds.length && !anyChange; n++) {\n            let b = bonds[n];\n            if (mol.bondOrder(b) != order && type == Molecule.BONDTYPE_NORMAL)\n                anyChange = true;\n            else if (mol.bondType(b) != type)\n                anyChange = true;\n        }\n        if (!anyChange) {\n            this.errmsg = 'No bond changes made.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 0; n < bonds.length; n++) {\n            let b = bonds[n], bfr = this.output.mol.bondFrom(b), bto = this.output.mol.bondTo(b);\n            if (switchType && this.output.mol.bondType(b) == type) {\n                this.output.mol.setBondFromTo(b, bto, bfr);\n            }\n            else if (this.output.mol.bondOrder(b) != order || this.output.mol.bondType(b) != type) {\n                if (!stereoType && order != this.output.mol.bondOrder(b))\n                    this.output.mol.setBondOrder(b, order);\n                else\n                    this.output.mol.setBondType(b, type);\n            }\n            else if (switchType) {\n                this.output.mol.setBondFromTo(b, bto, bfr);\n            }\n        }\n    }\n    performBondGeomAtom(geom, atom) {\n        let mol = this.input.mol;\n        let adj = mol.atomAdjList(atom);\n        let asz = adj.length, gsz = SketchUtil.GEOM_ANGLES[geom].length;\n        if (asz > gsz) {\n            this.errmsg = 'The current atom has more bonds than does the selected geometry.';\n            return;\n        }\n        if (asz == 0) {\n            this.performBondNew(atom, 1, Molecule.BONDTYPE_NORMAL);\n            return;\n        }\n        if (asz == gsz) {\n            this.output.mol = SketchUtil.refitAtomGeometry(mol, atom, geom);\n            if (this.output.mol == null)\n                this.errmsg = 'Could not re-fit the atom geometry.';\n            return;\n        }\n        let ang = CoordUtil.atomBondAngles(mol, atom);\n        let newang = SketchUtil.mapAngleSubstituent(geom, ang);\n        if (newang == null) {\n            this.output.mol = SketchUtil.refitAtomGeometry(mol, atom, geom);\n            if (this.output.mol == null)\n                this.errmsg = 'Could not re-fit the atom geometry.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        let theta = SketchUtil.pickNewAtomDirection(mol, atom, newang);\n        let x = this.output.mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(theta);\n        let y = this.output.mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(theta);\n        let anum = CoordUtil.atomAtPoint(this.output.mol, x, y);\n        if (anum == 0)\n            anum = this.output.mol.addAtom('C', x, y);\n        MolUtil.addBond(this.output.mol, atom, anum, 1);\n    }\n    performBondGeomBond(geom, bond) {\n        let mol = this.input.mol;\n        let bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        let ac1 = mol.atomAdjCount(bfr), ac2 = mol.atomAdjCount(bto);\n        if (ac1 > 1 && ac2 == 1) { }\n        else if (ac1 == 1 && ac2 > 1) {\n            let t = ac1;\n            ac1 = ac2;\n            ac2 = t;\n        }\n        else {\n            this.errmsg = 'One end of the bond must be terminal.';\n            return;\n        }\n        let adj = mol.atomAdjList(bfr);\n        let x1 = mol.atomX(bfr), y1 = mol.atomY(bfr);\n        let x2 = mol.atomX(bto), y2 = mol.atomY(bto);\n        let ang = [];\n        for (let n = 0, p = 0; n < adj.length; n++)\n            if (adj[n] != bto) {\n                ang.push(Math.atan2(mol.atomY(adj[n]) - y1, mol.atomX(adj[n]) - x1));\n            }\n        let newang = SketchUtil.mapAngleSubstituent(geom, ang);\n        if (newang == null) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        let bestAng = TWOPI + 1, bestX = 0, bestY = 0;\n        let curth = Math.atan2(y2 - y1, x2 - x1), r = norm_xy(x2 - x1, y2 - y1);\n        for (let n = 0; n < newang.length; n++) {\n            let th = angleDiff(newang[n], curth);\n            if (th < 0)\n                th += TWOPI;\n            if (n > 0 && th > bestAng)\n                continue;\n            let x = x1 + r * Math.cos(th + curth);\n            let y = y1 + r * Math.sin(th + curth);\n            if (CoordUtil.atomAtPoint(mol, x, y) > 0)\n                continue;\n            bestAng = th;\n            bestX = x;\n            bestY = y;\n        }\n        if (bestAng > TWOPI) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        this.output.mol.setAtomPos(bto, bestX, bestY);\n    }\n    checkAbbreviationReady() {\n        let junction = 0;\n        let mol = this.input.mol, subjmask = this.subjectMask;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let b1 = mol.bondFrom(n), b2 = mol.bondTo(n);\n            let atom = 0;\n            if ((subjmask[b1 - 1] && !subjmask[b2 - 1] && MolUtil.hasAbbrev(mol, b1)) ||\n                (subjmask[b2 - 1] && !subjmask[b1 - 1] && MolUtil.hasAbbrev(mol, b2))) {\n                this.errmsg = 'Already an abbreviation.';\n                return false;\n            }\n            if (subjmask[b1 - 1] && !subjmask[b2 - 1])\n                atom = b1;\n            else if (subjmask[b2 - 1] && !subjmask[b1 - 1])\n                atom = b2;\n            if (atom == 0 || atom == junction) { }\n            else if (junction == 0)\n                junction = atom;\n            else {\n                this.errmsg = 'The selected group must be terminal.';\n                return false;\n            }\n        }\n        return true;\n    }\n    mobileSide(bond, disqualTerminal = false) {\n        let { mol } = this.input;\n        let atom1 = mol.bondFrom(bond), atom2 = mol.bondTo(bond);\n        let g = Graph.fromMolecule(mol);\n        g.removeEdge(atom1 - 1, atom2 - 1);\n        let side1 = [], side2 = [];\n        for (let grp of g.calculateComponentGroups()) {\n            if (grp.includes(atom1 - 1))\n                side1 = Vec.add(grp, 1);\n            if (grp.includes(atom2 - 1))\n                side2 = Vec.add(grp, 1);\n        }\n        let weight1 = side1.length * (mol.atomRingBlock(atom1) > 0 ? 2 : 1);\n        let weight2 = side2.length * (mol.atomRingBlock(atom2) > 0 ? 2 : 1);\n        let sel1 = false, sel2 = false;\n        for (let a of side1)\n            if (this.isSelected(a)) {\n                sel1 = true;\n                break;\n            }\n        for (let a of side2)\n            if (this.isSelected(a)) {\n                sel2 = true;\n                break;\n            }\n        if (disqualTerminal && mol.atomAdjCount(atom1) == 1)\n            return [atom2, atom1, side2];\n        else if (disqualTerminal && mol.atomAdjCount(atom2) == 1)\n            return [atom1, atom2, side1];\n        else if (sel1 && !sel2) { }\n        else if ((sel2 && !sel1) || weight2 < weight1)\n            return [atom2, atom1, side2];\n        return [atom1, atom2, side1];\n    }\n    isSelected(atom) {\n        let mask = this.input.selectedMask;\n        return mask ? mask[atom - 1] : false;\n    }\n    removePolymerBlock(atoms) {\n        let polymer = new PolymerBlock(this.input.mol.clone());\n        for (let id of polymer.getIDList()) {\n            let unit = polymer.getUnit(id);\n            for (let atom of atoms)\n                if (unit.atoms.includes(atom)) {\n                    polymer.removeUnit(id);\n                    polymer.rewriteMolecule();\n                    this.output.mol = polymer.mol;\n                    return true;\n                }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=MoleculeActivity.js.map","import { Molecule } from '../data/Molecule';\nimport { Geometry } from '../data/SketchUtil';\nimport { ButtonBank } from '../ui/ButtonBank';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nconst ELEMENTS_NOBLE = [\n    'He', 'Ar', 'Kr', 'Xe', 'Rn'\n];\nconst ELEMENTS_S_BLOCK = [\n    'Li', 'Na', 'K', 'Rb', 'Cs', 'Fr', 'Sc',\n    'Be', 'Mg', 'Ca', 'Sr', 'Ba', 'Ra', 'Y'\n];\nconst ELEMENTS_P_BLOCK = [\n    'B', 'Al', 'Si', 'Ga', 'Ge', 'As', 'Se',\n    'In', 'Sn', 'Sb', 'Te', 'Tl', 'Pb', 'Bi', 'Po', 'At'\n];\nconst ELEMENTS_D_BLOCK = [\n    'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n    'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd',\n    'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg'\n];\nconst ELEMENTS_F_BLOCK = [\n    'La', 'Ce', 'Pr', 'Nd', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy',\n    'Ho', 'Er', 'Tm', 'Yb', 'Lu', 'Ac', 'Th', 'Pa', 'U'\n];\nconst ELEMENTS_ABBREV = [\n    '*', 'A', 'X', 'Y', 'Z', 'Q', 'M', 'T', 'E', 'L', 'R',\n    'R0', 'R1', 'R2', 'R3', 'R4', 'R5', 'R6', 'R7', 'R8'\n];\nvar CommandType;\n(function (CommandType) {\n    CommandType[CommandType[\"Main\"] = 0] = \"Main\";\n    CommandType[CommandType[\"Atom\"] = 1] = \"Atom\";\n    CommandType[CommandType[\"Bond\"] = 2] = \"Bond\";\n    CommandType[CommandType[\"Select\"] = 3] = \"Select\";\n    CommandType[CommandType[\"Move\"] = 4] = \"Move\";\n    CommandType[CommandType[\"Abbrev\"] = 5] = \"Abbrev\";\n    CommandType[CommandType[\"SBlock\"] = 6] = \"SBlock\";\n    CommandType[CommandType[\"PBlock\"] = 7] = \"PBlock\";\n    CommandType[CommandType[\"DBlock\"] = 8] = \"DBlock\";\n    CommandType[CommandType[\"FBlock\"] = 9] = \"FBlock\";\n    CommandType[CommandType[\"Noble\"] = 10] = \"Noble\";\n})(CommandType || (CommandType = {}));\nconst COMMANDS_MAIN = [\n    { id: 'undo', imageFN: 'MainUndo', helpText: 'Undo last change.', mnemonic: 'CmdOrCtrl+Z' },\n    { id: 'redo', imageFN: 'MainRedo', helpText: 'Cancel last undo.', mnemonic: 'CmdOrCtrl+Shift+Z' },\n    { id: 'zoomin', imageFN: 'MainZoomIn', helpText: 'Zoom in.', mnemonic: '=' },\n    { id: 'zoomout', imageFN: 'MainZoomOut', helpText: 'Zoom out.', mnemonic: '-' },\n    { id: 'zoomfit', imageFN: 'MainZoomFit', helpText: 'Show whole diagram onscreen.', mnemonic: '' },\n    { id: 'selside', imageFN: 'MainSelSide', helpText: 'Select alternate side of current atom or bond.', mnemonic: 'E' },\n    { id: 'selall', imageFN: 'MainSelAll', helpText: 'Select all atoms.', mnemonic: 'Shift+A' },\n    { id: 'selnone', imageFN: 'MainSelNone', helpText: 'Clear selection.', mnemonic: 'Shift+Q' },\n    { id: 'delete', imageFN: 'MainDelete', helpText: 'Delete selected atoms and bonds.', mnemonic: 'D' },\n    { id: 'cut', imageFN: 'MainCut', helpText: 'Copy selection to clipboard, and remove.', mnemonic: 'CmdOrCtrl+X' },\n    { id: 'copy', imageFN: 'MainCopy', helpText: 'Copy selection to clipboard.', mnemonic: 'CmdOrCtrl+C' },\n    { id: 'paste', imageFN: 'MainPaste', helpText: 'Paste clipboard contents.' },\n    { id: 'atom', imageFN: 'MainAtom', helpText: 'Open the Atom submenu.', isSubMenu: true, mnemonic: 'A' },\n    { id: 'bond', imageFN: 'MainBond', helpText: 'Open the Bond submenu.', isSubMenu: true, mnemonic: 'B' },\n    { id: 'select', imageFN: 'MainSelect', helpText: 'Open the Selection submenu.', isSubMenu: true, mnemonic: 'S' },\n    { id: 'move', imageFN: 'MainMove', helpText: 'Open the Move submenu.', isSubMenu: true, mnemonic: 'M' },\n];\nconst COMMANDS_ATOM = [\n    { id: 'element:C', text: 'C', helpText: 'Change elements to Carbon.', mnemonic: 'Shift+C' },\n    { id: 'element:N', text: 'N', helpText: 'Change elements to Nitrogen.', mnemonic: 'Shift+N' },\n    { id: 'element:O', text: 'O', helpText: 'Change elements to Oxygen.', mnemonic: 'Shift+O' },\n    { id: 'element:S', text: 'S', helpText: 'Change elements to Sulfur.', mnemonic: 'Shift+S' },\n    { id: 'element:P', text: 'P', helpText: 'Change elements to Phosphorus.', mnemonic: 'Shift+P' },\n    { id: 'element:H', text: 'H', helpText: 'Change elements to Hydrogen.', mnemonic: 'Shift+H' },\n    { id: 'element:F', text: 'F', helpText: 'Change elements to Fluorine.', mnemonic: 'Shift+F' },\n    { id: 'element:Cl', text: 'Cl', helpText: 'Change elements to Chlorine.', mnemonic: 'Shift+L' },\n    { id: 'element:Br', text: 'Br', helpText: 'Change elements to Bromine.', mnemonic: 'Shift+B' },\n    { id: 'element:I', text: 'I', helpText: 'Change elements to Iodine.', mnemonic: 'Shift+I' },\n    { id: 'plus', imageFN: 'AtomPlus', helpText: 'Increase the atom charge.', mnemonic: 'Shift+=', key: '+' },\n    { id: 'minus', imageFN: 'AtomMinus', helpText: 'Decrease the atom charge.', mnemonic: 'Shift+-', key: '_' },\n    { id: 'abbrev', imageFN: 'AtomAbbrev', helpText: 'Open list of common labels.', isSubMenu: true, mnemonic: '' },\n    { id: 'sblock', imageFN: 'AtomSBlock', helpText: 'Open list of s-block elements.', isSubMenu: true, mnemonic: '' },\n    { id: 'pblock', imageFN: 'AtomPBlock', helpText: 'Open list of p-block elements.', isSubMenu: true, mnemonic: '' },\n    { id: 'dblock', imageFN: 'AtomDBlock', helpText: 'Open list of d-block elements.', isSubMenu: true, mnemonic: '' },\n    { id: 'fblock', imageFN: 'AtomFBlock', helpText: 'Open list of f-block elements.', isSubMenu: true, mnemonic: '' },\n    { id: 'noble', imageFN: 'AtomNoble', helpText: 'Open list of noble elements.', isSubMenu: true, mnemonic: '' },\n];\nconst COMMANDS_BOND = [\n    { id: 'one', imageFN: 'BondOne', helpText: 'Create or set bonds to single.', mnemonic: '1' },\n    { id: 'two', imageFN: 'BondTwo', helpText: 'Create or set bonds to double.', mnemonic: '2' },\n    { id: 'three', imageFN: 'BondThree', helpText: 'Create or set bonds to triple.', mnemonic: '3' },\n    { id: 'four', imageFN: 'BondFour', helpText: 'Create or set bonds to quadruple.', mnemonic: '' },\n    { id: 'zero', imageFN: 'BondZero', helpText: 'Create or set bonds to zero-order.', mnemonic: '0' },\n    { id: 'inclined', imageFN: 'BondUp', helpText: 'Create or set bonds to inclined.', mnemonic: '5' },\n    { id: 'declined', imageFN: 'BondDown', helpText: 'Create or set bonds to declined.', mnemonic: '6' },\n    { id: 'squig', imageFN: 'BondSquig', helpText: 'Create or set bonds to unknown stereochemistry.', mnemonic: '4' },\n    { id: 'bondQAny', imageFN: 'BondQAny', helpText: 'Query bond that matches anything.' },\n    { id: 'addtwo', imageFN: 'BondAddTwo', helpText: 'Add two new bonds to the subject atom.', mnemonic: 'Shift+D' },\n    { id: 'insert', imageFN: 'BondInsert', helpText: 'Insert a methylene into the subject bond.', mnemonic: '' },\n    { id: 'switch', imageFN: 'BondSwitch', helpText: 'Cycle through likely bond geometries.', mnemonic: '\\'' },\n    { id: 'rotate', imageFN: 'BondRotate', helpText: 'Rotate bond to invert substituent orientation.', mnemonic: '' },\n    { id: 'linear', imageFN: 'BondLinear', helpText: 'Apply linear geometry.', mnemonic: 'Shift+V' },\n    { id: 'trigonal', imageFN: 'BondTrigonal', helpText: 'Apply trigonal geometry.', mnemonic: 'Shift+W' },\n    { id: 'tetra1', imageFN: 'BondTetra1', helpText: 'Apply tetrahedral geometry #1.', mnemonic: 'Shift+E' },\n    { id: 'tetra2', imageFN: 'BondTetra2', helpText: 'Apply tetrahedral geometry #2.', mnemonic: 'Shift+R' },\n    { id: 'sqplan', imageFN: 'BondSqPlan', helpText: 'Apply square planar geometry.', mnemonic: 'Shift+T' },\n    { id: 'octa1', imageFN: 'BondOcta1', helpText: 'Apply octahedral geometry #1.', mnemonic: 'Shift+Y' },\n    { id: 'octa2', imageFN: 'BondOcta2', helpText: 'Apply octahedral geometry #2.', mnemonic: 'Shift+U' },\n    { id: 'metalligate', imageFN: 'BondMetalLigate', helpText: 'Arrange ligands around metal centre.', mnemonic: '' },\n    { id: 'artifactpath', imageFN: 'BondArtifactPath', helpText: 'Add a path bond artifact.', mnemonic: '' },\n    { id: 'artifactring', imageFN: 'BondArtifactRing', helpText: 'Add a ring bond artifact.', mnemonic: '' },\n    { id: 'artifactarene', imageFN: 'BondArtifactArene', helpText: 'Add an arene bond artifact.', mnemonic: '' },\n    { id: 'artifactclear', imageFN: 'BondArtifactClear', helpText: 'Remove a bond artifact.', mnemonic: '' },\n    { id: 'polymer', imageFN: 'BondPolymer', helpText: 'Create a polymer block.', mnemonic: '' },\n];\nconst COMMANDS_SELECT = [\n    { id: 'selgrow', imageFN: 'SelectionGrow', helpText: 'Add adjacent atoms to selection.', mnemonic: '' },\n    { id: 'selshrink', imageFN: 'SelectionShrink', helpText: 'Unselect exterior atoms.', mnemonic: '' },\n    { id: 'selchain', imageFN: 'SelectionChain', helpText: 'Extend selection to non-ring atoms.', mnemonic: '' },\n    { id: 'smallring', imageFN: 'SelectionSmRing', helpText: 'Extend selection to small rings.', mnemonic: '' },\n    { id: 'ringblock', imageFN: 'SelectionRingBlk', helpText: 'Extend selection to ring blocks.', mnemonic: '' },\n    { id: 'curelement', imageFN: 'SelectionCurElement', helpText: 'Select all atoms of current element type.', mnemonic: '' },\n    { id: 'selprev', imageFN: 'MainSelPrev', helpText: 'Select previous connected component.', mnemonic: '[' },\n    { id: 'selnext', imageFN: 'MainSelNext', helpText: 'Select next connected component.', mnemonic: ']' },\n    { id: 'toggle', imageFN: 'SelectionToggle', helpText: 'Toggle selection of current.', mnemonic: ',' },\n    { id: 'uncurrent', imageFN: 'SelectionUncurrent', helpText: 'Undefine current object.', mnemonic: '.' },\n    { id: 'join', imageFN: 'MoveJoin', helpText: 'Overlapping atoms will be joined as one.', mnemonic: '' },\n    { id: 'new', imageFN: 'MainNew', helpText: 'Clear the molecular structure.', mnemonic: '' },\n    { id: 'inline', imageFN: 'AtomInline', helpText: 'Make selected atoms into an inline abbreviation.', mnemonic: '/' },\n    { id: 'formula', imageFN: 'AtomFormula', helpText: 'Make selected atoms into their molecule formula.', mnemonic: '\\\\' },\n    { id: 'expandabbrev', imageFN: 'AtomExpandAbbrev', helpText: 'Expand out the inline abbreviation.', mnemonic: 'Shift+/', key: '?' },\n    { id: 'clearabbrev', imageFN: 'AtomClearAbbrev', helpText: 'Remove inline abbreviation.', mnemonic: 'Shift+\\\\', key: '|' },\n];\nconst COMMANDS_MOVE = [\n    { id: 'up', imageFN: 'MoveUp', helpText: 'Move subject atoms up slightly.', mnemonic: 'Shift+Up', key: \"ArrowUp\" },\n    { id: 'down', imageFN: 'MoveDown', helpText: 'Move subject atoms down slightly.', mnemonic: 'Shift+Down', key: \"ArrowDown\" },\n    { id: 'left', imageFN: 'MoveLeft', helpText: 'Move subject atoms slightly to the left.', mnemonic: 'Shift+Left', key: \"ArrowLeft\" },\n    { id: 'right', imageFN: 'MoveRight', helpText: 'Move subject atoms slightly to the right.', mnemonic: 'Shift+Right', key: \"ArrowRight\" },\n    { id: 'uplots', imageFN: 'MoveUpLots', helpText: 'Move subject atoms up somewhat.', mnemonic: '' },\n    { id: 'downlots', imageFN: 'MoveDownLots', helpText: 'Move subject atoms down somewhat.', mnemonic: '' },\n    { id: 'leftlots', imageFN: 'MoveLeftLots', helpText: 'Move subject atoms somewhat to the left.', mnemonic: '' },\n    { id: 'rightlots', imageFN: 'MoveRightLots', helpText: 'Move subject atoms somewhat to the right.', mnemonic: '' },\n    { id: 'upfar', imageFN: 'MoveUpFar', helpText: 'Move subject atoms far up.', mnemonic: '' },\n    { id: 'downfar', imageFN: 'MoveDownFar', helpText: 'Move subject atoms far down.', mnemonic: '' },\n    { id: 'leftfar', imageFN: 'MoveLeftFar', helpText: 'Move subject atoms far to the left.', mnemonic: '' },\n    { id: 'rightfar', imageFN: 'MoveRightFar', helpText: 'Move subject atoms far to the right.', mnemonic: '' },\n    { id: 'rotp01', imageFN: 'MoveRotP01', helpText: 'Rotate 1\\u00B0 counter-clockwise.', mnemonic: '' },\n    { id: 'rotm01', imageFN: 'MoveRotM01', helpText: 'Rotate 1\\u00B0 clockwise.', mnemonic: '' },\n    { id: 'rotp05', imageFN: 'MoveRotP05', helpText: 'Rotate 5\\u00B0 counter-clockwise.', mnemonic: '' },\n    { id: 'rotm05', imageFN: 'MoveRotM05', helpText: 'Rotate 5\\u00B0 clockwise.', mnemonic: '' },\n    { id: 'rotp15', imageFN: 'MoveRotP15', helpText: 'Rotate 15\\u00B0 counter-clockwise.', mnemonic: '' },\n    { id: 'rotm15', imageFN: 'MoveRotM15', helpText: 'Rotate 15\\u00B0 clockwise.', mnemonic: '' },\n    { id: 'rotp30', imageFN: 'MoveRotP30', helpText: 'Rotate 30\\u00B0 counter-clockwise.', mnemonic: 'Shift+[', key: '{' },\n    { id: 'rotm30', imageFN: 'MoveRotM30', helpText: 'Rotate 30\\u00B0 clockwise.', mnemonic: 'Shift+]', key: '}' },\n    { id: 'hflip', imageFN: 'MoveHFlip', helpText: 'Flip subject atoms horizontally.', mnemonic: 'Shift+,', key: '<' },\n    { id: 'vflip', imageFN: 'MoveVFlip', helpText: 'Flip subject atoms vertically.', mnemonic: 'Shift+.', key: '>' },\n    { id: 'shrink', imageFN: 'MoveShrink', helpText: 'Decrease subject bond distances.', mnemonic: 'Shift+Z' },\n    { id: 'grow', imageFN: 'MoveGrow', helpText: 'Increase subject bond distances.', mnemonic: 'Shift+X' },\n];\nexport class CommandBank extends ButtonBank {\n    constructor(owner, cmdType = CommandType.Main) {\n        super();\n        this.owner = owner;\n        this.cmdType = cmdType;\n    }\n    update() {\n        if (this.cmdType == CommandType.Main)\n            for (let btn of COMMANDS_MAIN)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Atom)\n            for (let btn of COMMANDS_ATOM)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Bond)\n            for (let btn of COMMANDS_BOND)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Select)\n            for (let btn of COMMANDS_SELECT)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Move)\n            for (let btn of COMMANDS_MOVE)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Abbrev)\n            this.populateElements(ELEMENTS_ABBREV);\n        else if (this.cmdType == CommandType.SBlock)\n            this.populateElements(ELEMENTS_S_BLOCK);\n        else if (this.cmdType == CommandType.PBlock)\n            this.populateElements(ELEMENTS_P_BLOCK);\n        else if (this.cmdType == CommandType.DBlock)\n            this.populateElements(ELEMENTS_D_BLOCK);\n        else if (this.cmdType == CommandType.FBlock)\n            this.populateElements(ELEMENTS_F_BLOCK);\n        else if (this.cmdType == CommandType.Noble)\n            this.populateElements(ELEMENTS_NOBLE);\n    }\n    populateElements(elements) {\n        for (let el of elements) {\n            this.buttons.push({ id: `element:${el}`, text: el, helpText: `Change elements to ${el}.` });\n        }\n    }\n    hitButton(id) {\n        let actv = 0, param = null;\n        if (id.startsWith('element:')) {\n            let el = id.substring(8);\n            actv = ActivityType.Element;\n            param = { element: el };\n        }\n        else if (id == 'delete')\n            actv = ActivityType.Delete;\n        else if (id == 'undo') {\n            if (this.owner.canUndo())\n                this.owner.performUndo();\n            else\n                this.owner.showMessage('Nothing to undo.');\n        }\n        else if (id == 'redo') {\n            if (this.owner.canRedo())\n                this.owner.performRedo();\n            else\n                this.owner.showMessage('Nothing to redo.');\n        }\n        else if (id == 'cut')\n            actv = ActivityType.Cut;\n        else if (id == 'copy')\n            actv = ActivityType.Copy;\n        else if (id == 'paste')\n            this.owner.performPaste();\n        else if (id == 'new')\n            actv = ActivityType.Clear;\n        else if (id == 'zoomfit')\n            this.owner.autoScale();\n        else if (id == 'zoomout')\n            this.owner.zoom(0.8);\n        else if (id == 'zoomin')\n            this.owner.zoom(1.25);\n        else if (id == 'selall')\n            actv = ActivityType.SelectAll;\n        else if (id == 'selnone')\n            actv = ActivityType.SelectNone;\n        else if (id == 'selprev')\n            actv = ActivityType.SelectPrevComp;\n        else if (id == 'selnext')\n            actv = ActivityType.SelectNextComp;\n        else if (id == 'selside')\n            actv = ActivityType.SelectSide;\n        else if (id == 'plus') {\n            actv = ActivityType.Charge;\n            param = { delta: 1 };\n        }\n        else if (id == 'minus') {\n            actv = ActivityType.Charge;\n            param = { delta: -1 };\n        }\n        else if (id == 'one') {\n            actv = ActivityType.BondOrder;\n            param = { order: 1 };\n        }\n        else if (id == 'two') {\n            actv = ActivityType.BondOrder;\n            param = { order: 2 };\n        }\n        else if (id == 'three') {\n            actv = ActivityType.BondOrder;\n            param = { order: 3 };\n        }\n        else if (id == 'four') {\n            actv = ActivityType.BondOrder;\n            param = { order: 4 };\n        }\n        else if (id == 'zero') {\n            actv = ActivityType.BondOrder;\n            param = { order: 0 };\n        }\n        else if (id == 'inclined') {\n            actv = ActivityType.BondType;\n            param = { type: Molecule.BONDTYPE_INCLINED };\n        }\n        else if (id == 'declined') {\n            actv = ActivityType.BondType;\n            param = { type: Molecule.BONDTYPE_DECLINED };\n        }\n        else if (id == 'squig') {\n            actv = ActivityType.BondType;\n            param = { type: Molecule.BONDTYPE_UNKNOWN };\n        }\n        else if (id == 'linear') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Linear };\n        }\n        else if (id == 'trigonal') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Trigonal };\n        }\n        else if (id == 'tetra1') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Tetra1 };\n        }\n        else if (id == 'tetra2') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Tetra2 };\n        }\n        else if (id == 'sqplan') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.SqPlan };\n        }\n        else if (id == 'octa1') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Octa1 };\n        }\n        else if (id == 'octa2') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Octa2 };\n        }\n        else if (id == 'switch')\n            actv = ActivityType.BondSwitch;\n        else if (id == 'rotate')\n            actv = ActivityType.BondRotate;\n        else if (id == 'connect')\n            actv = ActivityType.Connect;\n        else if (id == 'disconnect')\n            actv = ActivityType.Disconnect;\n        else if (id == 'metalligate')\n            actv = ActivityType.MetalLigate;\n        else if (id == 'artifactpath')\n            actv = ActivityType.BondArtifactPath;\n        else if (id == 'artifactring')\n            actv = ActivityType.BondArtifactRing;\n        else if (id == 'artifactarene')\n            actv = ActivityType.BondArtifactArene;\n        else if (id == 'artifactclear')\n            actv = ActivityType.BondArtifactClear;\n        else if (id == 'polymer')\n            actv = ActivityType.PolymerBlock;\n        else if (id == 'addtwo')\n            actv = ActivityType.BondAddTwo;\n        else if (id == 'insert')\n            actv = ActivityType.BondInsert;\n        else if (id == 'curelement')\n            actv = ActivityType.SelectCurElement;\n        else if (id == 'selgrow')\n            actv = ActivityType.SelectGrow;\n        else if (id == 'selshrink')\n            actv = ActivityType.SelectShrink;\n        else if (id == 'selprev')\n            actv = ActivityType.SelectPrevComp;\n        else if (id == 'selnext')\n            actv = ActivityType.SelectNextComp;\n        else if (id == 'selchain')\n            actv = ActivityType.SelectChain;\n        else if (id == 'smallring')\n            actv = ActivityType.SelectSmRing;\n        else if (id == 'ringblock')\n            actv = ActivityType.SelectRingBlk;\n        else if (id == 'toggle')\n            actv = ActivityType.SelectToggle;\n        else if (id == 'uncurrent')\n            actv = ActivityType.SelectUnCurrent;\n        else if (id == 'join')\n            actv = ActivityType.Join;\n        else if (id == 'inline')\n            actv = ActivityType.AbbrevGroup;\n        else if (id == 'formula')\n            actv = ActivityType.AbbrevFormula;\n        else if (id == 'clearabbrev')\n            actv = ActivityType.AbbrevClear;\n        else if (id == 'expandabbrev')\n            actv = ActivityType.AbbrevExpand;\n        else if (id == 'up') {\n            actv = ActivityType.Nudge;\n            param = { dir: 'up' };\n        }\n        else if (id == 'down') {\n            actv = ActivityType.Nudge;\n            param = { dir: 'down' };\n        }\n        else if (id == 'left') {\n            actv = ActivityType.Nudge;\n            param = { dir: 'left' };\n        }\n        else if (id == 'right') {\n            actv = ActivityType.Nudge;\n            param = { dir: 'right' };\n        }\n        else if (id == 'uplots') {\n            actv = ActivityType.NudgeLots;\n            param = { dir: 'up' };\n        }\n        else if (id == 'downlots') {\n            actv = ActivityType.NudgeLots;\n            param = { dir: 'down' };\n        }\n        else if (id == 'leftlots') {\n            actv = ActivityType.NudgeLots;\n            param = { dir: 'left' };\n        }\n        else if (id == 'rightlots') {\n            actv = ActivityType.NudgeLots;\n            param = { dir: 'right' };\n        }\n        else if (id == 'upfar') {\n            actv = ActivityType.NudgeFar;\n            param = { dir: 'up' };\n        }\n        else if (id == 'downfar') {\n            actv = ActivityType.NudgeFar;\n            param = { dir: 'down' };\n        }\n        else if (id == 'leftfar') {\n            actv = ActivityType.NudgeFar;\n            param = { dir: 'left' };\n        }\n        else if (id == 'rightfar') {\n            actv = ActivityType.NudgeFar;\n            param = { dir: 'right' };\n        }\n        else if (id == 'rotp01') {\n            actv = ActivityType.Rotate;\n            param = { theta: 1 };\n        }\n        else if (id == 'rotm01') {\n            actv = ActivityType.Rotate;\n            param = { theta: -1 };\n        }\n        else if (id == 'rotp05') {\n            actv = ActivityType.Rotate;\n            param = { theta: 5 };\n        }\n        else if (id == 'rotm05') {\n            actv = ActivityType.Rotate;\n            param = { theta: -5 };\n        }\n        else if (id == 'rotp15') {\n            actv = ActivityType.Rotate;\n            param = { theta: 15 };\n        }\n        else if (id == 'rotm15') {\n            actv = ActivityType.Rotate;\n            param = { theta: -15 };\n        }\n        else if (id == 'rotp30') {\n            actv = ActivityType.Rotate;\n            param = { theta: 30 };\n        }\n        else if (id == 'rotm30') {\n            actv = ActivityType.Rotate;\n            param = { theta: -30 };\n        }\n        else if (id == 'hflip') {\n            actv = ActivityType.Flip;\n            param = { axis: 'hor' };\n        }\n        else if (id == 'vflip') {\n            actv = ActivityType.Flip;\n            param = { axis: 'ver' };\n        }\n        else if (id == 'shrink') {\n            actv = ActivityType.Scale;\n            param = { mag: 1 / 1.1 };\n        }\n        else if (id == 'grow') {\n            actv = ActivityType.Scale;\n            param = { mag: 1.1 };\n        }\n        else if (id == 'bondQAny')\n            actv = ActivityType.QueryBondAny;\n        else if (id == 'atom')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Atom));\n        else if (id == 'bond')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Bond));\n        else if (id == 'select')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Select));\n        else if (id == 'move')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Move));\n        else if (id == 'abbrev')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Abbrev));\n        else if (id == 'sblock')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.SBlock));\n        else if (id == 'pblock')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.PBlock));\n        else if (id == 'dblock')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.DBlock));\n        else if (id == 'fblock')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.FBlock));\n        else if (id == 'noble')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Noble));\n        else\n            alert('Unhandled command: \"' + id + '\"');\n        if (actv > 0) {\n            new MoleculeActivity(this.owner.getState(), actv, param, this.owner).execute();\n        }\n    }\n    claimKey(event) {\n        for (let listItems of [COMMANDS_MAIN, COMMANDS_ATOM, COMMANDS_BOND, COMMANDS_SELECT, COMMANDS_MOVE])\n            for (let item of listItems) {\n                if (ButtonBank.matchKey(event, item.mnemonic, item.key)) {\n                    this.hitButton(item.id);\n                    return true;\n                }\n            }\n        return false;\n    }\n}\n//# sourceMappingURL=CommandBank.js.map","import { Molecule } from '../data/Molecule';\nimport { PolymerBlock } from '../data/PolymerBlock';\nimport { Vec } from '../util/Vec';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nexport class ContextSketch {\n    constructor(state, sketcher, proxyClip) {\n        this.state = state;\n        this.sketcher = sketcher;\n        this.proxyClip = proxyClip;\n    }\n    populate() {\n        const { state, sketcher } = this;\n        let menu = [];\n        if (sketcher.canUndo() || sketcher.canRedo()) {\n            if (sketcher.canUndo())\n                menu.push({ label: 'Undo', accelerator: 'CmdOrCtrl+Z', click: () => sketcher.performUndo() });\n            if (sketcher.canRedo())\n                menu.push({ label: 'Redo', accelerator: 'CmdOrCtrl+Shift+Z', click: () => sketcher.performRedo() });\n            menu.push(null);\n        }\n        if (state.currentAtom > 0 || state.currentBond > 0)\n            menu.push({ label: 'Edit', 'accelerator': 'Enter', click: () => sketcher.editCurrent() });\n        this.maybeAppend(menu, 'Delete', 'D', ActivityType.Delete);\n        this.maybeAppend(menu, 'Cut', 'CmdOrCtrl+X', ActivityType.Cut);\n        this.maybeAppend(menu, 'Copy', 'CmdOrCtrl+C', ActivityType.Copy);\n        if (this.proxyClip.canAlwaysGet())\n            menu.push({ label: 'Paste', 'accelerator': 'CmdOrCtrl+V', click: () => sketcher.performPaste() });\n        this.maybeAppend(menu, 'Charge +', 'Shift+=', ActivityType.Charge, { delta: 1 });\n        this.maybeAppend(menu, 'Charge -', 'Shift+-', ActivityType.Charge, { delta: -1 });\n        this.maybeAppend(menu, 'Bond Order 0', '0', ActivityType.BondOrder, { order: 0 });\n        this.maybeAppend(menu, 'Bond Order 1', '1', ActivityType.BondOrder, { order: 1 });\n        this.maybeAppend(menu, 'Bond Order 2', '2', ActivityType.BondOrder, { order: 2 });\n        this.maybeAppend(menu, 'Bond Order 3', '3', ActivityType.BondOrder, { order: 3 });\n        this.maybeAppend(menu, 'Bond Order 4', null, ActivityType.BondOrder, { order: 4 });\n        this.maybeAppend(menu, 'Unknown Stereochemistry', '4', ActivityType.BondType, { type: Molecule.BONDTYPE_UNKNOWN });\n        this.maybeAppend(menu, 'Bond Wedge Up', '5', ActivityType.BondType, { type: Molecule.BONDTYPE_INCLINED });\n        this.maybeAppend(menu, 'Bond Wedge Down', '6', ActivityType.BondType, { type: Molecule.BONDTYPE_DECLINED });\n        this.maybeAppend(menu, 'Switch Geometry', null, ActivityType.BondSwitch);\n        this.maybeAppend(menu, 'Add Two Bonds', 'Shift+D', ActivityType.BondAddTwo);\n        this.maybeAppend(menu, 'Insert Atom', null, ActivityType.BondInsert);\n        this.maybeAppend(menu, 'Join Atoms', null, ActivityType.Join);\n        this.maybeAppend(menu, 'Abbreviate Group', '/', ActivityType.AbbrevGroup);\n        this.maybeAppend(menu, 'Abbreviate Formula', '\\\\', ActivityType.AbbrevFormula);\n        this.maybeAppend(menu, 'Clear Abbreviation', 'Shift+\\\\', ActivityType.AbbrevClear);\n        this.maybeAppend(menu, 'Expand Abbreviation', 'Shift+/', ActivityType.AbbrevExpand);\n        let rotateSub = this.rotateSubMenu();\n        if (Vec.notBlank(rotateSub))\n            menu.push({ label: 'Rotate', subMenu: rotateSub });\n        let querySub = this.querySubMenu();\n        if (Vec.notBlank(querySub))\n            menu.push({ label: 'Query', subMenu: querySub });\n        let poly = new PolymerBlock(state.mol);\n        for (let units of poly.getUnits()) {\n            let a1 = state.currentAtom, a2 = 0;\n            if (state.currentBond > 0)\n                [a1, a2] = state.mol.bondFromTo(state.currentBond);\n            if (units.atoms.includes(a1) || units.atoms.includes(a2)) {\n                let label = 'Polymer Block (' + units.atoms.length + ' atom' + (units.atoms.length == 1 ? '' : 's') + ')';\n                menu.push({ label: label, click: () => sketcher.performPolymerBlock(units.atoms) });\n            }\n        }\n        if (menu.length > 0)\n            menu.push(null);\n        menu.push({ label: 'Scale to Fit', click: () => sketcher.autoScale() });\n        menu.push({ label: 'Zoom In', 'accelerator': '=', click: () => sketcher.zoom(1.25) });\n        menu.push({ label: 'Zoom Out', 'accelerator': '-', click: () => sketcher.zoom(0.8) });\n        return menu;\n    }\n    maybeAppend(menu, title, accelerator, activ, param = null) {\n        let molact = new MoleculeActivity(this.state, activ, param);\n        molact.execute();\n        if (!molact.output.mol && !molact.toClipboard)\n            return;\n        menu.push({ label: title, 'accelerator': accelerator, click: () => {\n                this.sketcher.setState(molact.output, true);\n                if (molact.toClipboard)\n                    this.proxyClip.setString(molact.toClipboard);\n            } });\n    }\n    rotateSubMenu() {\n        let menu = [];\n        this.maybeAppend(menu, 'Bond', null, ActivityType.BondRotate);\n        this.maybeAppend(menu, '+1 \\u{00B0}', null, ActivityType.Rotate, { theta: 1 });\n        this.maybeAppend(menu, '-1 \\u{00B0}', null, ActivityType.Rotate, { theta: -1 });\n        this.maybeAppend(menu, '+5 \\u{00B0}', null, ActivityType.Rotate, { theta: 5 });\n        this.maybeAppend(menu, '-5 \\u{00B0}', null, ActivityType.Rotate, { theta: -5 });\n        this.maybeAppend(menu, '+15 \\u{00B0}', null, ActivityType.Rotate, { theta: 15 });\n        this.maybeAppend(menu, '-15 \\u{00B0}', null, ActivityType.Rotate, { theta: -15 });\n        this.maybeAppend(menu, '+30 \\u{00B0}', 'Shift+[', ActivityType.Rotate, { theta: 30 });\n        this.maybeAppend(menu, '-30 \\u{00B0}', 'Shift+]', ActivityType.Rotate, { theta: -30 });\n        this.maybeAppend(menu, 'H-Flip', 'Shift+,', ActivityType.Flip, { axis: 'hor' });\n        this.maybeAppend(menu, 'V-Flip', 'Shift+.', ActivityType.Flip, { axis: 'ver' });\n        this.maybeAppend(menu, 'Align', null, ActivityType.AlignRegular);\n        return menu;\n    }\n    querySubMenu() {\n        let menu = [];\n        this.maybeAppend(menu, 'Clear', null, ActivityType.QueryClear);\n        this.maybeAppend(menu, 'Copy', null, ActivityType.QueryCopy);\n        return menu;\n    }\n}\n//# sourceMappingURL=ContextSketch.js.map","import { Chemistry } from '../data/Chemistry';\nimport { CoordUtil } from '../data/CoordUtil';\nimport { MetaMolecule } from '../data/MetaMolecule';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { PolymerBlock, POLYMERBLOCK_SPECIAL_UNCAPPED, PolymerBlockConnectivity } from '../data/PolymerBlock';\nimport { QueryTypeBond, QueryUtil } from '../data/QueryUtil';\nimport { SketchUtil } from '../data/SketchUtil';\nimport { Stereochemistry } from '../data/Stereochemistry';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { FontData } from '../gfx/FontData';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nimport { GeomUtil } from '../util/Geom';\nimport { Theme } from '../util/Theme';\nimport { colourCanvas, drawLine, fontSansSerif, invZ, norm2_xy, norm_xy, pixelDensity, setBoundaryPixels, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport var DraggingTool;\n(function (DraggingTool) {\n    DraggingTool[DraggingTool[\"None\"] = 0] = \"None\";\n    DraggingTool[DraggingTool[\"Press\"] = 1] = \"Press\";\n    DraggingTool[DraggingTool[\"Lasso\"] = 2] = \"Lasso\";\n    DraggingTool[DraggingTool[\"Pan\"] = 3] = \"Pan\";\n    DraggingTool[DraggingTool[\"Zoom\"] = 4] = \"Zoom\";\n    DraggingTool[DraggingTool[\"Rotate\"] = 5] = \"Rotate\";\n    DraggingTool[DraggingTool[\"Move\"] = 6] = \"Move\";\n    DraggingTool[DraggingTool[\"Erasor\"] = 7] = \"Erasor\";\n    DraggingTool[DraggingTool[\"Atom\"] = 8] = \"Atom\";\n    DraggingTool[DraggingTool[\"Bond\"] = 9] = \"Bond\";\n    DraggingTool[DraggingTool[\"Charge\"] = 10] = \"Charge\";\n    DraggingTool[DraggingTool[\"Ring\"] = 11] = \"Ring\";\n})(DraggingTool || (DraggingTool = {}));\nexport var DrawCanvasDecoration;\n(function (DrawCanvasDecoration) {\n    DrawCanvasDecoration[DrawCanvasDecoration[\"None\"] = 0] = \"None\";\n    DrawCanvasDecoration[DrawCanvasDecoration[\"Stereochemistry\"] = 1] = \"Stereochemistry\";\n    DrawCanvasDecoration[DrawCanvasDecoration[\"MappingNumber\"] = 2] = \"MappingNumber\";\n    DrawCanvasDecoration[DrawCanvasDecoration[\"AtomIndex\"] = 3] = \"AtomIndex\";\n})(DrawCanvasDecoration || (DrawCanvasDecoration = {}));\nexport class DrawCanvas extends Widget {\n    constructor() {\n        super();\n        this.mol = null;\n        this.policy = null;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.pointScale = 1;\n        this.viewOpt = {\n            decoration: DrawCanvasDecoration.Stereochemistry,\n            showOxState: true,\n            showQuery: true,\n            showArtifacts: true,\n        };\n        this.width = 0;\n        this.height = 0;\n        this.border = 0x808080;\n        this.borderRadius = 4;\n        this.background = 0xF8F8F8;\n        this.canvasUnder = null;\n        this.canvasMolecule = null;\n        this.canvasOver = null;\n        this.divMessage = null;\n        this.layout = null;\n        this.metavec = null;\n        this.stereo = null;\n        this.guidelines = null;\n        this.filthy = false;\n        this.dragType = DraggingTool.None;\n        this.currentAtom = 0;\n        this.currentBond = 0;\n        this.hoverAtom = 0;\n        this.hoverBond = 0;\n        this.selectedMask = null;\n        this.opAtom = 0;\n        this.opBond = 0;\n        this.opBudged = false;\n        this.opShift = false;\n        this.opCtrl = false;\n        this.opAlt = false;\n        this.lassoX = null;\n        this.lassoY = null;\n        this.lassoMask = null;\n        this.clickX = 0;\n        this.clickY = 0;\n        this.mouseX = 0;\n        this.mouseY = 0;\n        this.dragGuides = null;\n        this.templatePerms = null;\n        this.currentPerm = 0;\n        this.fusionBank = null;\n        this.cursorWatermark = 0;\n        this.cursorDX = 0;\n        this.cursorDY = 0;\n        this.toolAtomSymbol = '';\n        this.toolBondOrder = 0;\n        this.toolBondType = 0;\n        this.toolChargeDelta = 0;\n        this.toolRingArom = false;\n        this.toolRingFreeform = false;\n        this.toolRotateIncr = 0;\n        this.redrawCacheKey = '';\n        this.abbrevPolicy = RenderPolicy.defaultBlackOnWhite();\n        this.abbrevPolicy.data.foreground = 0xD0D0D0;\n        this.abbrevPolicy.data.atomCols = Vec.numberArray(0xD0D0D0, this.abbrevPolicy.data.atomCols.length);\n    }\n    render(parent) {\n        if (!this.width || !this.height)\n            throw 'Sketcher.render called without width and height';\n        super.render(parent);\n        this.container = dom('<div/>').appendTo(this.contentDOM);\n        this.container.css({ 'position': 'relative', 'width': this.width + 'px', 'height': this.height + 'px' });\n        this.container.css({ 'background-color': colourCanvas(this.background) });\n        if (this.border != MetaVector.NOCOLOUR) {\n            this.container.css({ 'border': '1px solid ' + colourCanvas(this.border) });\n            this.container.css({ 'border-radius': this.borderRadius + 'px' });\n        }\n        this.container.css({ 'outline': 'none' });\n        this.container.attr({ 'tabindex': '0' });\n        let canvasStyle = { 'position': 'absolute', 'left': '0', 'top': '0', 'width': `${this.width}px`, 'height': `${this.height}`, 'pointer-events': 'none' };\n        this.divInfo = dom('<div/>').appendTo(this.container).css({ 'position': 'absolute', 'left': '0', 'top': '0', 'pointer-events': 'none' });\n        this.canvasUnder = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n        this.canvasMolecule = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n        this.canvasOver = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n        this.divMessage = dom('<div/>').appendTo(this.container).css(canvasStyle);\n        this.divMessage.css({ 'text-align': 'center', 'vertical-align': 'middle', 'font-weight': 'bold', 'font-size': '120%' });\n    }\n    getState() {\n        let state = {\n            mol: this.mol.clone(),\n            currentAtom: this.currentAtom,\n            currentBond: this.currentBond,\n            selectedMask: this.selectedMask == null ? null : this.selectedMask.slice(0)\n        };\n        return state;\n    }\n    getSelected(atom) {\n        if (this.selectedMask == null || atom > this.selectedMask.length)\n            return false;\n        return this.selectedMask[atom - 1];\n    }\n    getLassoed(atom) {\n        if (this.lassoMask == null || atom > this.lassoMask.length)\n            return false;\n        return this.lassoMask[atom - 1];\n    }\n    scale() { return this.pointScale; }\n    angToX(ax) {\n        return ax * this.pointScale + this.offsetX;\n    }\n    angToY(ay) {\n        return ay * -this.pointScale + this.offsetY;\n    }\n    xToAng(px) {\n        return (px - this.offsetX) / this.pointScale;\n    }\n    yToAng(py) {\n        return (py - this.offsetY) / -this.pointScale;\n    }\n    scaleToAng(scale) { return scale / this.pointScale; }\n    angToScale(ang) { return ang * this.pointScale; }\n    yIsUp() { return false; }\n    measureText(str, fontSize) { return FontData.main.measureText(str, fontSize); }\n    delayedRedraw() {\n        if (this.canvasMolecule == null)\n            return;\n        this.filthy = true;\n        window.setTimeout(() => { if (this.filthy)\n            this.redraw(); }, 10);\n    }\n    layoutMolecule() {\n        let mol = this.mol;\n        if (this.hoverAtom > 0 && MolUtil.hasAbbrev(mol, this.hoverAtom)) {\n            mol = mol.clone();\n            mol.setAtomElement(this.hoverAtom, '');\n            mol.setAtomCharge(this.hoverAtom, 0);\n            mol.setAtomUnpaired(this.hoverAtom, 0);\n            MolUtil.clearAbbrev(mol, this.hoverAtom);\n        }\n        let effects = this.sketchEffects(mol);\n        this.layout = new ArrangeMolecule(mol, this, this.policy, effects);\n        this.layout.setWantArtifacts(this.viewOpt.showArtifacts);\n        this.layout.arrange();\n    }\n    redrawMetaVector() {\n        this.metavec = new MetaVector();\n        new DrawMolecule(this.layout, this.metavec).draw();\n        if (this.hoverAtom > 0 && MolUtil.hasAbbrev(this.mol, this.hoverAtom)) {\n            let abbrevMol = MolUtil.getAbbrev(this.mol, this.hoverAtom);\n            this.orientAbbreviation(this.hoverAtom, abbrevMol);\n            this.abbrevPolicy.data.pointScale = this.policy.data.pointScale;\n            let layout = new ArrangeMolecule(abbrevMol, this, this.abbrevPolicy, new RenderEffects());\n            layout.arrange();\n            new DrawMolecule(layout, this.metavec).draw();\n        }\n    }\n    redraw() {\n        this.filthy = false;\n        this.redrawInfo();\n        this.redrawUnder();\n        this.redrawMolecule();\n        this.redrawOver();\n    }\n    redrawInfo() {\n        let cacheKey = JSON.stringify([this.width, this.height, this.mol.toString()]);\n        if (cacheKey == this.redrawCacheKey)\n            return;\n        this.redrawCacheKey = cacheKey;\n        this.divInfo.empty();\n        this.divInfo.css({ 'visibility': 'hidden', 'left': '0', 'top': '0' });\n        if (this.mol.numAtoms == 0)\n            return;\n        let divText = dom('<div/>').appendTo(this.divInfo);\n        divText.css({ 'display': 'inline-block', 'text-align': 'right', 'font-family': 'sans-serif', 'font-size': '80%', 'color': '#C0C0C0' });\n        let html = MolUtil.molecularFormula(this.mol, ['<sub>', '</sub>', '<sup>', '</sup>']);\n        let chg = 0;\n        for (let n = 1; n <= this.mol.numAtoms; n++)\n            chg += this.mol.atomCharge(n);\n        if (chg == -1)\n            html += '<sup>-</sup>';\n        else if (chg < -1)\n            html += `<sup>${chg}</sup>`;\n        else if (chg == 1)\n            html += '<sup>+</sup>';\n        else if (chg > 1)\n            html += `<sup>+${chg}</sup>`;\n        html += '<br>' + MolUtil.molecularWeight(this.mol).toFixed(2);\n        divText.setHTML(html);\n        setTimeout(() => {\n            let w = divText.width(), h = divText.height();\n            setBoundaryPixels(this.divInfo, this.width - w - 1, 1, w, h);\n            this.divInfo.css({ 'visibility': 'visible' });\n        }, 1);\n    }\n    redrawUnder() {\n        let HOVER_COL = 0xE0E0E0;\n        let CURRENT_COL = 0xA0A0A0, CURRENT_BORD = 0x808080;\n        let SELECT_COL = 0xC0C0C0;\n        let LASSO_COL = 0xD0D0D0;\n        let density = pixelDensity();\n        this.canvasUnder.elCanvas.width = this.width * density;\n        this.canvasUnder.elCanvas.height = this.height * density;\n        this.canvasUnder.css({ 'width': `${this.width}px`, 'height': `${this.height}px` });\n        let ctx = this.canvasUnder.elCanvas.getContext('2d');\n        ctx.save();\n        ctx.scale(density, density);\n        ctx.clearRect(0, 0, this.width, this.height);\n        if (this.hoverAtom > 0) {\n            let units = new PolymerBlock(this.mol).getUnits();\n            for (let unit of units)\n                if (unit.atoms.includes(this.hoverAtom))\n                    this.drawPolymerUnit(ctx, unit, units);\n            let sz = 0;\n            if (this.hoverAtom == this.currentAtom)\n                sz += 0.1;\n            if (this.getSelected(this.hoverAtom))\n                sz += 0.1;\n            if (this.currentBond > 0 && (this.mol.bondFrom(this.currentBond) == this.hoverAtom || this.mol.bondTo(this.currentBond) == this.hoverAtom))\n                sz += 0.1;\n            this.drawAtomShade(ctx, this.hoverAtom, HOVER_COL, -1, sz);\n        }\n        if (this.hoverBond > 0) {\n            let bfr = this.mol.bondFrom(this.hoverBond), bto = this.mol.bondTo(this.hoverBond);\n            let units = new PolymerBlock(this.mol).getUnits();\n            for (let unit of units)\n                if (unit.atoms.includes(bfr) && unit.atoms.includes(bto))\n                    this.drawPolymerUnit(ctx, unit, units);\n            let sz = 0;\n            if (this.hoverBond == this.currentBond)\n                sz += 0.1;\n            if (this.getSelected(bfr) && this.getSelected(bto))\n                sz += 0.1;\n            this.drawBondShade(ctx, this.hoverBond, HOVER_COL, -1, sz);\n        }\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let sz = n == this.currentBond ? 0.1 : 0;\n            let bfr = this.mol.bondFrom(n), bto = this.mol.bondTo(n);\n            let sfr = this.getSelected(bfr), sto = this.getSelected(bto), lfr = this.getLassoed(bfr), lto = this.getLassoed(bto);\n            if (sfr && sto)\n                this.drawBondShade(ctx, n, SELECT_COL, -1, sz);\n            else if ((sfr || lfr) && (sto || lto))\n                this.drawBondShade(ctx, n, LASSO_COL, -1, sz);\n        }\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let sz = this.currentAtom == n ? 0.1 : 0;\n            if (this.getSelected(n))\n                this.drawAtomShade(ctx, n, SELECT_COL, -1, sz);\n            else if (this.getLassoed(n))\n                this.drawAtomShade(ctx, n, LASSO_COL, -1, sz);\n        }\n        if (this.currentAtom > 0) {\n            this.drawAtomShade(ctx, this.currentAtom, CURRENT_COL, CURRENT_BORD, 0);\n        }\n        if (this.currentBond > 0) {\n            this.drawBondShade(ctx, this.currentBond, CURRENT_COL, CURRENT_BORD, 0);\n        }\n        if (this.dragType == DraggingTool.Move || (this.dragType == DraggingTool.Atom && this.opAtom > 0) || this.dragType == DraggingTool.Bond) {\n            if (this.dragGuides != null && this.dragGuides.length > 0) {\n                for (let g of this.dragGuides)\n                    for (let n = 0; n < g.x.length; n++) {\n                        let lw = this.policy.data.lineSize * this.pointScale;\n                        ctx.strokeStyle = '#C0C0C0';\n                        ctx.lineWidth = lw;\n                        drawLine(ctx, g.sourceX, g.sourceY, g.destX[n], g.destY[n]);\n                        ctx.beginPath();\n                        ctx.ellipse(g.destX[n], g.destY[n], 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n                        ctx.fillStyle = '#C0C0C0';\n                        ctx.fill();\n                    }\n            }\n        }\n        if (this.dragType == DraggingTool.Ring) {\n            let [ringX, ringY] = this.determineFauxRing();\n            let rsz = ringX == null ? 0 : ringX.length;\n            if (rsz > 0) {\n                let scale = this.pointScale;\n                let lw = this.policy.data.lineSize * scale;\n                ctx.strokeStyle = '#C0C0C0';\n                ctx.lineWidth = lw;\n                for (let n = 0; n < rsz; n++) {\n                    let nn = n < rsz - 1 ? n + 1 : 0;\n                    let x1 = this.angToX(ringX[n]), y1 = this.angToY(ringY[n]);\n                    let x2 = this.angToX(ringX[nn]), y2 = this.angToY(ringY[nn]);\n                    drawLine(ctx, x1, y1, x2, y2);\n                }\n                if (this.toolRingArom) {\n                    let cx = 0, cy = 0;\n                    for (let n = 0; n < rsz; n++) {\n                        cx += ringX[n];\n                        cy += ringY[n];\n                    }\n                    cx /= rsz;\n                    cy /= rsz;\n                    let rad = 0;\n                    for (let n = 0; n < rsz; n++)\n                        rad += norm_xy(ringX[n] - cx, ringY[n] - cy);\n                    rad = this.angToScale(rad * 0.5 / rsz);\n                    ctx.beginPath();\n                    ctx.ellipse(this.angToX(cx), this.angToY(cy), rad, rad, 0, 0, TWOPI, false);\n                    ctx.stroke();\n                }\n            }\n        }\n        ctx.restore();\n    }\n    redrawMolecule() {\n        let density = pixelDensity();\n        this.canvasMolecule.elCanvas.width = this.width * density;\n        this.canvasMolecule.elCanvas.height = this.height * density;\n        this.canvasMolecule.css({ 'width': `${this.width}px`, 'height': `${this.height}px` });\n        let ctx = this.canvasMolecule.elCanvas.getContext('2d');\n        ctx.save();\n        ctx.scale(density, density);\n        ctx.clearRect(0, 0, this.width, this.height);\n        if (this.metavec != null)\n            this.metavec.renderContext(ctx);\n        if (this.templatePerms != null) {\n            let perm = this.templatePerms[this.currentPerm];\n            if (perm.metavec != null)\n                perm.metavec.renderContext(ctx);\n        }\n        ctx.restore();\n    }\n    redrawOver() {\n        let density = pixelDensity();\n        this.canvasOver.elCanvas.width = this.width * density;\n        this.canvasOver.elCanvas.height = this.height * density;\n        this.canvasOver.css({ 'width': `${this.width}px`, 'height': `${this.height}px` });\n        let ctx = this.canvasOver.elCanvas.getContext('2d');\n        ctx.save();\n        ctx.scale(density, density);\n        ctx.clearRect(0, 0, this.width, this.height);\n        if ((this.dragType == DraggingTool.Lasso || this.dragType == DraggingTool.Erasor) && this.lassoX.length > 1) {\n            let erasing = this.dragType == DraggingTool.Erasor;\n            let path = new Path2D();\n            path.moveTo(this.lassoX[0], this.lassoY[0]);\n            for (let n = 1; n < this.lassoX.length; n++)\n                path.lineTo(this.lassoX[n], this.lassoY[n]);\n            path.closePath();\n            ctx.fillStyle = colourCanvas(erasing ? 0xD0FF0000 : 0xF0000000);\n            ctx.fill(path);\n            ctx.strokeStyle = erasing ? '#804040' : '#808080';\n            ctx.lineWidth = 0.5;\n            ctx.stroke(path);\n        }\n        if (this.dragType == DraggingTool.Rotate) {\n            let [x0, y0, theta, magnitude] = this.determineDragTheta();\n            let scale = this.pointScale;\n            let lw = this.policy.data.lineSize * scale;\n            ctx.strokeStyle = '#E0E0E0';\n            ctx.lineWidth = 0.5 * lw;\n            drawLine(ctx, x0, y0, x0 + magnitude, y0);\n            ctx.strokeStyle = '#808080';\n            ctx.lineWidth = lw;\n            drawLine(ctx, x0, y0, x0 + magnitude * Math.cos(theta), y0 + magnitude * Math.sin(theta));\n            ctx.beginPath();\n            ctx.ellipse(x0, y0, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n            ctx.fillStyle = '#808080';\n            ctx.fill();\n            for (let atom of this.subjectAtoms(true, false)) {\n                let ax = this.angToX(this.mol.atomX(atom)), ay = this.angToY(this.mol.atomY(atom));\n                let ang = Math.atan2(ay - y0, ax - x0), dist = norm_xy(ax - x0, ay - y0);\n                let nx = x0 + dist * Math.cos(ang + theta), ny = y0 + dist * Math.sin(ang + theta);\n                ctx.beginPath();\n                ctx.ellipse(nx, ny, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n                ctx.strokeStyle = 'black';\n                ctx.lineWidth = 0.5;\n                ctx.stroke();\n            }\n        }\n        if (this.dragType == DraggingTool.Move) {\n            let [dx, dy] = this.determineMoveDelta();\n            let scale = this.pointScale;\n            let lw = this.policy.data.lineSize * scale;\n            for (let atom of this.subjectAtoms(false, true)) {\n                let ax = this.angToX(this.mol.atomX(atom)), ay = this.angToY(this.mol.atomY(atom));\n                ctx.beginPath();\n                ctx.ellipse(ax + dx, ay + dy, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n                ctx.strokeStyle = 'black';\n                ctx.lineWidth = 0.5;\n                ctx.stroke();\n            }\n        }\n        if ((this.dragType == DraggingTool.Atom && this.opAtom > 0) || this.dragType == DraggingTool.Bond) {\n            let element = this.dragType == DraggingTool.Atom ? this.toolAtomSymbol : 'C';\n            let order = this.dragType == DraggingTool.Bond ? this.toolBondOrder : 1;\n            let type = this.dragType == DraggingTool.Bond ? this.toolBondType : Molecule.BONDTYPE_NORMAL;\n            this.drawOriginatingBond(ctx, element, order, type);\n        }\n        if (this.viewOpt.showQuery)\n            this.drawQueryFeatures(ctx);\n        ctx.restore();\n    }\n    subjectAtoms(allIfNone = false, useOpAtom = false) {\n        let atoms = [];\n        if (this.selectedMask != null) {\n            for (let n = 0; n < this.selectedMask.length; n++)\n                if (this.selectedMask[n])\n                    atoms.push(n + 1);\n            if (atoms.length > 0)\n                return atoms;\n        }\n        if (this.currentAtom > 0)\n            atoms.push(this.currentAtom);\n        else if (this.currentBond > 0) {\n            atoms.push(this.mol.bondFrom(this.currentBond));\n            atoms.push(this.mol.bondTo(this.currentBond));\n        }\n        if (useOpAtom && atoms.length == 0 && this.opAtom > 0)\n            atoms.push(this.opAtom);\n        if (allIfNone && atoms.length == 0) {\n            for (let n = 1; n <= this.mol.numAtoms; n++)\n                atoms.push(n);\n        }\n        return atoms;\n    }\n    updateLasso(x, y) {\n        if (this.dragType != DraggingTool.Lasso && this.dragType != DraggingTool.Erasor)\n            return;\n        if (x < 0 || y < 0 || x > this.width || y > this.height) {\n            this.dragType = DraggingTool.None;\n            this.lassoX = null;\n            this.lassoY = null;\n            this.lassoMask = null;\n            this.delayedRedraw();\n        }\n        let len = Vec.len(this.lassoX);\n        if (len > 0 && this.lassoX[len - 1] == x && this.lassoY[len - 1] == y)\n            return;\n        this.lassoX.push(x);\n        this.lassoY.push(y);\n        this.calculateLassoMask();\n        this.delayedRedraw();\n    }\n    calculateLassoMask() {\n        this.lassoMask = new Array(this.mol.numAtoms);\n        for (let n = 0; n < this.mol.numAtoms; n++)\n            this.lassoMask[n] = false;\n        for (let n = 0; n < this.layout.numPoints(); n++) {\n            let p = this.layout.getPoint(n);\n            if (p.anum == 0)\n                continue;\n            this.lassoMask[p.anum - 1] = GeomUtil.pointInPolygon(p.oval.cx, p.oval.cy, this.lassoX, this.lassoY);\n        }\n    }\n    drawAtomShade(ctx, atom, fillCol, borderCol, anghalo) {\n        if (this.layout == null)\n            return;\n        let p = null;\n        for (let n = 0; n < this.layout.numPoints(); n++)\n            if (this.layout.getPoint(n).anum == atom) {\n                p = this.layout.getPoint(n);\n                break;\n            }\n        if (p == null)\n            return;\n        let minRad = 0.2 * this.pointScale, minRadSq = sqr(minRad);\n        let cx = p.oval.cx, cy = p.oval.cy;\n        let rad = Math.max(minRad, Math.max(p.oval.rw, p.oval.rh)) + (0.1 + anghalo) * this.pointScale;\n        if (fillCol != -1) {\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rad, rad, 0, 0, TWOPI, true);\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.fill();\n        }\n        if (borderCol != -1) {\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rad, rad, 0, 0, TWOPI, true);\n            ctx.strokeStyle = colourCanvas(borderCol);\n            ctx.lineWidth = 1;\n            ctx.stroke();\n        }\n    }\n    drawBondShade(ctx, bond, fillCol, borderCol, anghalo) {\n        if (this.layout == null)\n            return;\n        let x1 = 0, y1 = 0, x2 = 0, y2 = 0, nb = 0, sz = 0;\n        for (let n = 0; n < this.layout.numLines(); n++) {\n            let l = this.layout.getLine(n);\n            if (l.bnum != bond)\n                continue;\n            x1 += l.line.x1;\n            y1 += l.line.y1;\n            x2 += l.line.x2;\n            y2 += l.line.y2;\n            nb++;\n            sz += l.size + (0.2 + anghalo) * this.pointScale;\n        }\n        if (nb == 0)\n            return;\n        let invNB = 1 / nb;\n        sz *= invNB;\n        x1 *= invNB;\n        y1 *= invNB;\n        x2 *= invNB;\n        y2 *= invNB;\n        let dx = x2 - x1, dy = y2 - y1, invDist = 1 / norm_xy(dx, dy);\n        dx *= invDist;\n        dy *= invDist;\n        let ox = dy, oy = -dx;\n        let path = new Path2D(), mx, my, CIRC = 0.8;\n        path.moveTo(x1 + ox * sz, y1 + oy * sz);\n        mx = x1 + (ox * sz - dx * sz) * CIRC;\n        my = y1 + (oy * sz - dy * sz) * CIRC;\n        path.quadraticCurveTo(mx, my, x1 - dx * sz, y1 - dy * sz);\n        mx = x1 + (-ox * sz - dx * sz) * CIRC;\n        my = y1 + (-oy * sz - dy * sz) * CIRC;\n        path.quadraticCurveTo(mx, my, x1 - ox * sz, y1 - oy * sz);\n        path.lineTo(x2 - ox * sz, y2 - oy * sz);\n        mx = x2 + (-ox * sz + dx * sz) * CIRC;\n        my = y2 + (-oy * sz + dy * sz) * CIRC;\n        path.quadraticCurveTo(mx, my, x2 + dx * sz, y2 + dy * sz);\n        mx = x2 + (ox * sz + dx * sz) * CIRC;\n        my = y2 + (oy * sz + dy * sz) * CIRC;\n        path.quadraticCurveTo(mx, my, x2 + ox * sz, y2 + oy * sz);\n        path.closePath();\n        if (fillCol != -1) {\n            ctx.beginPath();\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.fill(path);\n        }\n        if (borderCol != -1) {\n            ctx.beginPath();\n            ctx.strokeStyle = colourCanvas(borderCol);\n            ctx.lineWidth = 1;\n            ctx.stroke(path);\n        }\n    }\n    drawOriginatingBond(ctx, element, order, type) {\n        let x1 = this.clickX, y1 = this.clickY;\n        if (this.opAtom > 0) {\n            x1 = this.angToX(this.mol.atomX(this.opAtom));\n            y1 = this.angToY(this.mol.atomY(this.opAtom));\n        }\n        else if (this.opBond > 0) {\n            let [bfr, bto] = this.mol.bondFromTo(this.opBond);\n            x1 = this.angToX(0.5 * (this.mol.atomX(bfr) + this.mol.atomX(bto)));\n            y1 = this.angToY(0.5 * (this.mol.atomY(bfr) + this.mol.atomY(bto)));\n        }\n        let x2 = this.mouseX, y2 = this.mouseY;\n        let snapTo = this.snapToGuide(x2, y2), snapAtom = false;\n        if (snapTo)\n            [x2, y2, snapAtom] = snapTo;\n        let scale = this.pointScale;\n        ctx.strokeStyle = snapAtom ? '#4040FF' : '#808080';\n        ctx.lineWidth = this.policy.data.lineSize * scale * (snapAtom ? 1.5 : 1);\n        drawLine(ctx, x1, y1, x2, y2);\n        if (element != 'C') {\n            let fh = this.policy.data.fontSize * scale;\n            ctx.font = fontSansSerif(fh);\n            let metrics = ctx.measureText(element);\n            ctx.fillStyle = '#808080';\n            ctx.fillText(element, x2 - 0.5 * metrics.width, y2 + 0.5 * fh);\n        }\n    }\n    drawQueryFeatures(ctx) {\n        const { layout, mol } = this;\n        let annots = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (QueryUtil.hasAnyQueryAtom(mol, n)) {\n                let bits = [];\n                for (let xtra of mol.atomExtra(n))\n                    if (xtra.startsWith('q'))\n                        bits.push(xtra);\n                let ap = layout.getPoint(n - 1);\n                annots.push({ txt: bits.join(','), x: ap.oval.cx + ap.oval.rw, y: ap.oval.cy });\n            }\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (QueryUtil.hasAnyQueryBond(mol, n)) {\n                let bits = [];\n                for (let xtra of mol.bondExtra(n))\n                    if (xtra.startsWith('q') && !xtra.startsWith(QueryTypeBond.Orders))\n                        bits.push(xtra);\n                let num = 0, cx = 0, cy = 0;\n                for (let bl of layout.getLines())\n                    if (bl.bnum == n) {\n                        num += 2;\n                        cx += bl.line.x1 + bl.line.x2;\n                        cy += bl.line.y1 + bl.line.y2;\n                    }\n                annots.push({ txt: bits.join(','), x: cx / num, y: cy / num });\n            }\n        let fh = 0.7 * this.policy.data.fontSize * this.pointScale;\n        for (let annot of annots) {\n            ctx.font = fontSansSerif(fh);\n            ctx.fillStyle = '#FF40C0';\n            ctx.fillText(annot.txt, annot.x, annot.y);\n        }\n    }\n    drawPolymerUnit(ctx, unit, allUnits) {\n        const { mol, layout } = this;\n        let x = [], y = [];\n        let scale = this.pointScale;\n        for (let a of unit.atoms) {\n            let pt = layout.getPoint(a - 1);\n            let rad = Math.max(0.5 * scale, Math.max(pt.oval.rw, pt.oval.rh));\n            const NPT = 36, THPT = TWOPI / NPT;\n            for (let n = 0; n < NPT; n++) {\n                let th = n * THPT;\n                x.push(pt.oval.cx + rad * Math.cos(th));\n                y.push(pt.oval.cy + rad * Math.sin(th));\n            }\n        }\n        let extBonds = [], inAtoms = [], outAtoms = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let flag1 = unit.atoms.includes(bfr), flag2 = unit.atoms.includes(bto);\n            if (!flag1 && !flag2)\n                continue;\n            if (!flag2) {\n                extBonds.push(n);\n                inAtoms.push(bfr);\n                outAtoms.push(bto);\n            }\n            else if (!flag1) {\n                extBonds.push(n);\n                inAtoms.push(bto);\n                outAtoms.push(bfr);\n            }\n            let pt1 = layout.getPoint(bfr - 1), pt2 = layout.getPoint(bto - 1);\n            let x1 = pt1.oval.cx, y1 = pt1.oval.cy, x2 = pt2.oval.cx, y2 = pt2.oval.cy;\n            if (!flag1)\n                [x1, y1] = [0.5 * (x1 + x2), 0.5 * (y1 + y2)];\n            else if (!flag2)\n                [x2, y2] = [0.5 * (x1 + x2), 0.5 * (y1 + y2)];\n            let dx = x2 - x1, dy = y2 - y1, d = norm_xy(dx, dy), invD = invZ(d);\n            let ox = dy * invD * 0.3 * scale, oy = -dx * invD * 0.3 * scale;\n            let npWidth = Math.ceil(2 * d / scale) + 1, npHeight = Math.ceil(2 * norm_xy(ox, oy) / scale) + 1;\n            for (let n = 0; n <= npWidth; n++) {\n                x.push(x1 - ox + dx * n / npWidth);\n                y.push(y1 - oy + dy * n / npWidth);\n                x.push(x1 + ox + dx * n / npWidth);\n                y.push(y1 + oy + dy * n / npWidth);\n            }\n            for (let n = 1; n < npHeight; n++) {\n                x.push(x1 - ox + 2 * ox * n / npHeight);\n                y.push(y1 - oy + 2 * oy * n / npHeight);\n                x.push(x2 - ox + 2 * ox * n / npHeight);\n                y.push(y2 - oy + 2 * oy * n / npHeight);\n            }\n        }\n        let [px, py] = GeomUtil.outlinePolygon(x, y, 0.5 * scale);\n        let path = new Path2D();\n        path.moveTo(px[0], py[0]);\n        for (let n = 1; n < px.length; n++)\n            path.lineTo(px[n], py[n]);\n        path.closePath();\n        ctx.save();\n        ctx.fillStyle = '#F9EFFF';\n        ctx.fill(path);\n        ctx.strokeStyle = '#C0C0C0';\n        ctx.lineWidth = 1;\n        ctx.stroke(path);\n        ctx.restore();\n        let selfLinks = [];\n        let innerLinks = [];\n        let outerLinks = [];\n        if (Vec.len(unit.bondConn) == 4) {\n            innerLinks.push([inAtoms[extBonds.indexOf(unit.bondConn[0])], inAtoms[extBonds.indexOf(unit.bondConn[2])]]);\n            innerLinks.push([inAtoms[extBonds.indexOf(unit.bondConn[1])], inAtoms[extBonds.indexOf(unit.bondConn[3])]]);\n        }\n        else if (Vec.len(extBonds) == 2 && unit.connect != null) {\n            if (unit.connect == PolymerBlockConnectivity.HeadToTail || unit.connect == PolymerBlockConnectivity.Random) {\n                innerLinks.push([inAtoms[0], inAtoms[1]]);\n            }\n            if (unit.connect == PolymerBlockConnectivity.HeadToHead || unit.connect == PolymerBlockConnectivity.Random) {\n                selfLinks.push(inAtoms[0]);\n                selfLinks.push(inAtoms[1]);\n            }\n        }\n        else {\n            for (let b of extBonds) {\n                let a1 = mol.bondFrom(b), a2 = mol.bondTo(b);\n                if (unit.atoms.includes(a2))\n                    [a1, a2] = [a2, a1];\n                let incl = unit.bondIncl.get(b), excl = unit.bondExcl.get(b);\n                let isCapped = mol.atomElement(a2) != POLYMERBLOCK_SPECIAL_UNCAPPED;\n                for (let look of (isCapped ? [unit] : allUnits))\n                    for (let a of look.atoms) {\n                        let isExt = false;\n                        for (let adj of mol.atomAdjList(a))\n                            if (!look.atoms.includes(adj)) {\n                                isExt = true;\n                                break;\n                            }\n                        if (!isExt)\n                            continue;\n                        if (Vec.notBlank(incl)) {\n                            let anames = look.atomName.get(a), any = false;\n                            if (anames)\n                                for (let an of anames)\n                                    any = any || incl.includes(an);\n                            if (!any)\n                                continue;\n                        }\n                        if (Vec.notBlank(excl)) {\n                            let anames = look.atomName.get(a), any = false;\n                            if (anames)\n                                for (let an of anames)\n                                    any = any || excl.includes(an);\n                            if (any)\n                                continue;\n                        }\n                        if (a == a1)\n                            selfLinks.push(a1);\n                        else if (unit === look)\n                            innerLinks.push([a1, a]);\n                        else\n                            outerLinks.push([a1, a]);\n                    }\n            }\n        }\n        selfLinks = Vec.uniqueStable(selfLinks);\n        innerLinks = Vec.maskGet(innerLinks, Vec.maskUnique(innerLinks.map((pair) => Vec.min(pair) * mol.numAtoms + Vec.max(pair))));\n        outerLinks = Vec.maskGet(outerLinks, Vec.maskUnique(outerLinks.map((pair) => Vec.min(pair) * mol.numAtoms + Vec.max(pair))));\n        ctx.save();\n        ctx.strokeStyle = '#6329C1';\n        ctx.lineWidth = 2;\n        ctx.setLineDash([1, 1]);\n        ctx.beginPath();\n        for (let a of selfLinks) {\n            let p1 = layout.getPoint(a - 1), x1 = p1.oval.cx, y1 = p1.oval.cy;\n            let x2 = 0, y2 = 0, num = 0;\n            for (let n = 0; n < extBonds.length; n++)\n                if (inAtoms[n] == a) {\n                    let p2 = layout.getPoint(outAtoms[n] - 1);\n                    x2 += p2.oval.cx;\n                    y2 += p2.oval.cy;\n                    num++;\n                }\n            if (num > 1) {\n                x2 /= num;\n                y2 /= num;\n            }\n            x2 = x1 + 0.5 * (x2 - x1);\n            y2 = y1 + 0.5 * (y2 - y1);\n            let dx = x2 - x1, dy = y2 - y1, invD = invZ(norm_xy(dx, dy)), ox = dy * invD, oy = -dx * invD;\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2);\n            const EXT = 2 * scale;\n            ctx.moveTo(x1, y1);\n            ctx.quadraticCurveTo(cx + ox * EXT, cy + oy * EXT, x2, y2);\n            ctx.quadraticCurveTo(cx - ox * EXT, cy - oy * EXT, x1, y1);\n        }\n        for (let [a1, a2] of innerLinks) {\n            let x1 = mol.atomX(a1), y1 = mol.atomY(a1), x2 = mol.atomX(a2), y2 = mol.atomY(a2);\n            let dx = x2 - x1, dy = y2 - y1, invD = invZ(norm_xy(dx, dy)), ox = dy * invD, oy = -dx * invD;\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2);\n            const EXT = 5;\n            let px1 = cx + ox * EXT, py1 = cy + oy * EXT, px2 = cx - ox * EXT, py2 = cy - oy * EXT;\n            let [px, py] = CoordUtil.congestionPoint(mol, px1, py1) < CoordUtil.congestionPoint(mol, px2, py2) ? [px1, py1] : [px2, py2];\n            ctx.moveTo(this.angToX(x1), this.angToY(y1));\n            ctx.quadraticCurveTo(this.angToX(px), this.angToY(py), this.angToX(x2), this.angToY(y2));\n        }\n        for (let [a1, a2] of outerLinks) {\n            let p1 = layout.getPoint(a1 - 1), p2 = layout.getPoint(a2 - 1);\n            ctx.moveTo(p1.oval.cx, p1.oval.cy);\n            ctx.lineTo(p2.oval.cx, p2.oval.cy);\n        }\n        ctx.stroke();\n        ctx.restore();\n    }\n    determineFauxRing() {\n        let atom = this.opAtom, bond = this.opBond, mol = this.mol;\n        let x1 = atom > 0 ? mol.atomX(atom) : bond > 0 ? 0.5 * (mol.atomX(mol.bondFrom(bond)) + mol.atomX(mol.bondTo(bond))) : this.xToAng(this.clickX);\n        let y1 = atom > 0 ? mol.atomY(atom) : bond > 0 ? 0.5 * (mol.atomY(mol.bondFrom(bond)) + mol.atomY(mol.bondTo(bond))) : this.yToAng(this.clickY);\n        let x2 = this.xToAng(this.mouseX), y2 = this.yToAng(this.mouseY), dx = x2 - x1, dy = y2 - y1;\n        let rsz = Math.min(9, Math.round(norm_xy(dx, dy) * 2 / Molecule.IDEALBOND) + 2);\n        if (rsz < 3) { }\n        else if (bond > 0)\n            return SketchUtil.proposeBondRing(mol, rsz, bond, dx, dy);\n        else if (atom > 0 && mol.atomAdjCount(atom) > 0 && !this.toolRingFreeform)\n            return SketchUtil.proposeAtomRing(mol, rsz, atom, dx, dy);\n        else\n            return SketchUtil.proposeNewRing(mol, rsz, x1, y1, dx, dy, !this.toolRingFreeform);\n        return [null, null];\n    }\n    determineDragTheta() {\n        let x0 = this.clickX, y0 = this.clickY;\n        let snap = this.snapToGuide(x0, y0);\n        if (snap != null) {\n            x0 = snap[0];\n            y0 = snap[1];\n        }\n        let theta = Math.atan2(this.mouseY - y0, this.mouseX - x0), magnitude = norm_xy(this.mouseX - x0, this.mouseY - y0);\n        if (this.toolRotateIncr > 0)\n            theta = Math.round(theta / this.toolRotateIncr) * this.toolRotateIncr;\n        return [x0, y0, theta, magnitude];\n    }\n    determineMoveDelta() {\n        let x1 = this.clickX, y1 = this.clickY, x2 = this.mouseX, y2 = this.mouseY;\n        if (this.opAtom > 0) {\n            x1 = this.angToX(this.mol.atomX(this.opAtom));\n            y1 = this.angToY(this.mol.atomY(this.opAtom));\n            let snap = this.snapToGuide(x2, y2);\n            if (snap != null) {\n                x2 = snap[0];\n                y2 = snap[1];\n            }\n        }\n        return [x2 - x1, y2 - y1];\n    }\n    snapToGuide(x, y) {\n        if (this.opBond > 0) {\n            let obj = this.pickObject(x, y);\n            if (obj < 0) {\n                let [bfr, bto] = this.mol.bondFromTo(-obj);\n                let px = this.angToX(0.5 * (this.mol.atomX(bfr) + this.mol.atomX(bto)));\n                let py = this.angToY(0.5 * (this.mol.atomY(bfr) + this.mol.atomY(bto)));\n                return [px, py, false];\n            }\n            return null;\n        }\n        let bestDSQ = Number.POSITIVE_INFINITY, bestX = 0, bestY = 0, bestAtom = false;\n        const APPROACH = sqr(0.5 * this.pointScale);\n        if (this.dragGuides != null)\n            for (let i = 0; i < this.dragGuides.length; i++)\n                for (let j = 0; j < this.dragGuides[i].x.length; j++) {\n                    let px = this.dragGuides[i].destX[j], py = this.dragGuides[i].destY[j];\n                    let dsq = norm2_xy(px - x, py - y);\n                    if (dsq < APPROACH && dsq < bestDSQ)\n                        [bestDSQ, bestX, bestY, bestAtom] = [dsq, px, py, false];\n                }\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let px = this.angToX(this.mol.atomX(n)), py = this.angToY(this.mol.atomY(n));\n            let dsq = norm2_xy(px - x, py - y);\n            if (dsq < APPROACH && dsq < bestDSQ)\n                [bestDSQ, bestX, bestY, bestAtom] = [dsq, px, py, true];\n        }\n        if (isFinite(bestDSQ))\n            return [bestX, bestY, bestAtom];\n        return null;\n    }\n    pickObjectCanvas(x, y, opt = {}) {\n        let limitDist = 0.5 * this.pointScale;\n        let bestItem = 0, bestScore = Number.POSITIVE_INFINITY;\n        if (!opt.noAtoms)\n            for (let n = 0; n < this.layout.numPoints(); n++) {\n                let p = this.layout.getPoint(n);\n                if (p.anum == 0)\n                    continue;\n                let dx = Math.abs(x - p.oval.cx), dy = Math.abs(y - p.oval.cy);\n                let dsq = norm2_xy(dx, dy);\n                let limitDSQ = sqr(Math.max(limitDist, Math.max(p.oval.rw, p.oval.rh)));\n                if (dsq > limitDSQ)\n                    continue;\n                if (dsq < bestScore) {\n                    bestItem = p.anum;\n                    bestScore = dsq;\n                }\n            }\n        if (bestItem != 0)\n            return bestItem;\n        if (!opt.noBonds)\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let l = this.layout.getLine(n);\n                if (l.bnum == 0)\n                    continue;\n                let x1 = l.line.x1, y1 = l.line.y1;\n                let x2 = l.line.x2, y2 = l.line.y2;\n                if (x < Math.min(x1, x2) - limitDist || y < Math.min(y1, y2) - limitDist ||\n                    x > Math.max(x1, x2) + limitDist || y > Math.max(y1, y2) + limitDist)\n                    continue;\n                let dist = GeomUtil.pointLineSegDistance(x, y, x1, y1, x2, y2);\n                if (dist > limitDist)\n                    continue;\n                if (dist < bestScore) {\n                    bestItem = -l.bnum;\n                    bestScore = dist;\n                }\n            }\n        return bestItem;\n    }\n    pickObject(x, y, opt = {}) {\n        return this.pickObjectCanvas(x, y, opt) || 0;\n    }\n    sketchEffects(mol) {\n        let effects = new RenderEffects();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n) && n != this.hoverAtom)\n                effects.dottedRectOutline[n] = 0x808080;\n        effects.overlapAtoms = CoordUtil.overlappingAtomList(mol, 0.2);\n        effects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n        effects.atomDecoCol = Vec.numberArray(Theme.foreground, mol.numAtoms);\n        effects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n        effects.bondDecoText = Vec.stringArray('', mol.numBonds);\n        effects.bondDecoCol = Vec.numberArray(Theme.foreground, mol.numBonds);\n        effects.bondDecoSize = Vec.numberArray(0.3, mol.numBonds);\n        if (this.viewOpt.showOxState) {\n            for (let n = 1; n <= mol.numAtoms; n++) {\n                let ox = MolUtil.atomOxidationState(mol, n);\n                if (ox != null) {\n                    effects.atomDecoText[n - 1] = MolUtil.oxidationStateText(ox);\n                    effects.atomDecoCol[n - 1] = 0xFF8080;\n                }\n            }\n        }\n        if (this.viewOpt.decoration == DrawCanvasDecoration.Stereochemistry) {\n            if (!this.stereo)\n                this.stereo = Stereochemistry.create(MetaMolecule.createStrict(mol));\n            skip: for (let n = 1; n <= mol.numAtoms; n++) {\n                let chi = this.stereo.atomTetraChirality(n);\n                if (chi == Stereochemistry.STEREO_NONE)\n                    continue;\n                for (let adjb of mol.atomAdjBonds(n))\n                    if (mol.bondOrder(adjb) != 1)\n                        continue skip;\n                if (chi == Stereochemistry.STEREO_UNKNOWN) {\n                    for (let adj of mol.atomAdjList(n))\n                        if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(adj)] >= 3)\n                            continue skip;\n                }\n                effects.atomDecoText[n - 1] = chi == Stereochemistry.STEREO_POS ? 'R' :\n                    chi == Stereochemistry.STEREO_NEG ? 'S' :\n                        chi == Stereochemistry.STEREO_UNKNOWN ? 'R/S' : '?';\n                effects.atomDecoCol[n - 1] = 0x00A000;\n            }\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let side = this.stereo.bondSideStereo(n);\n                if (side == Stereochemistry.STEREO_NONE)\n                    continue;\n                effects.bondDecoText[n - 1] = side == Stereochemistry.STEREO_POS ? 'Z' :\n                    side == Stereochemistry.STEREO_NEG ? 'E' :\n                        side == Stereochemistry.STEREO_UNKNOWN ? 'Z/E' : '?';\n                effects.bondDecoCol[n - 1] = 0x00A000;\n            }\n        }\n        else if (this.viewOpt.decoration == DrawCanvasDecoration.MappingNumber) {\n            effects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n            effects.atomDecoCol = Vec.numberArray(0x8000FF, mol.numAtoms);\n            effects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomMapNum(n) > 0)\n                    effects.atomDecoText[n - 1] = mol.atomMapNum(n).toString();\n        }\n        else if (this.viewOpt.decoration == DrawCanvasDecoration.AtomIndex) {\n            effects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n            effects.atomDecoCol = Vec.numberArray(0x8000FF, mol.numAtoms);\n            effects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                effects.atomDecoText[n - 1] = n.toString();\n        }\n        return effects;\n    }\n    orientAbbreviation(abbrevAtom, abbrevMol) {\n        const { mol } = this;\n        if (MolUtil.isBlank(abbrevMol))\n            return;\n        if (this.mol.atomAdjCount(abbrevAtom) != 1)\n            return;\n        let nbr = mol.atomAdjList(abbrevAtom)[0];\n        let vx1 = mol.atomX(abbrevAtom) - mol.atomX(nbr), vy1 = mol.atomY(abbrevAtom) - mol.atomY(nbr);\n        let adj = abbrevMol.atomAdjList(1);\n        let vx2 = 0, vy2 = 0, inv = invZ(adj.length);\n        for (let a of adj) {\n            vx2 += abbrevMol.atomX(a) - abbrevMol.atomX(1);\n            vy2 += abbrevMol.atomY(a) - abbrevMol.atomY(1);\n        }\n        vx2 *= inv;\n        vy2 *= inv;\n        let th1 = Math.atan2(vy1, vx1), th2 = Math.atan2(vy2, vx2);\n        CoordUtil.rotateMolecule(abbrevMol, th1 - th2);\n        if (adj.length == 1) {\n            CoordUtil.translateMolecule(abbrevMol, mol.atomX(abbrevAtom) - abbrevMol.atomX(adj[0]), mol.atomY(abbrevAtom) - abbrevMol.atomY(adj[0]));\n            abbrevMol.setAtomPos(1, mol.atomX(nbr), mol.atomY(nbr));\n        }\n        else {\n            CoordUtil.translateMolecule(abbrevMol, mol.atomX(nbr) - abbrevMol.atomX(1), mol.atomY(nbr) - abbrevMol.atomY(1));\n        }\n        for (let b of abbrevMol.atomAdjBonds(1)) {\n            let a = abbrevMol.bondOther(b, 1);\n            if (abbrevMol.atomHExplicit(a) != Molecule.HEXPLICIT_UNKNOWN)\n                continue;\n            abbrevMol.setAtomHExplicit(a, Math.max(0, abbrevMol.atomHydrogens(a)));\n        }\n        abbrevMol.deleteAtomAndBonds(1);\n    }\n}\n//# sourceMappingURL=DrawCanvas.js.map","import { MetaVector } from '../gfx/MetaVector';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nimport { GeomUtil } from '../util/Geom';\nimport { Theme } from '../util/Theme';\nimport { angleDiff, DEGRAD, eventCoords, norm_xy, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport var GeomWidgetType;\n(function (GeomWidgetType) {\n    GeomWidgetType[GeomWidgetType[\"Atom\"] = 0] = \"Atom\";\n    GeomWidgetType[GeomWidgetType[\"Bond\"] = 1] = \"Bond\";\n})(GeomWidgetType || (GeomWidgetType = {}));\nexport var GeomWidgetSelType;\n(function (GeomWidgetSelType) {\n    GeomWidgetSelType[GeomWidgetSelType[\"Position\"] = 0] = \"Position\";\n    GeomWidgetSelType[GeomWidgetSelType[\"Link\"] = 1] = \"Link\";\n    GeomWidgetSelType[GeomWidgetSelType[\"Torsion\"] = 2] = \"Torsion\";\n})(GeomWidgetSelType || (GeomWidgetSelType = {}));\nexport class GeomWidget extends Widget {\n    constructor(type, mol, idx) {\n        super();\n        this.type = type;\n        this.mol = mol;\n        this.idx = idx;\n        this.posX = [];\n        this.posY = [];\n        this.linkA = [];\n        this.linkB = [];\n        this.torsA = [];\n        this.torsB = [];\n        this.hovered = null;\n        if (type == GeomWidgetType.Atom) {\n            const atom = idx;\n            let adj = mol.atomAdjList(atom);\n            this.atomSubset = [atom, ...adj];\n            for (let b of mol.atomAdjBonds(atom)) {\n                this.linkA.push(0);\n                this.linkB.push(this.atomSubset.indexOf(mol.bondOther(b, atom)));\n            }\n            let theta = [];\n            for (let a of adj)\n                theta.push(Math.atan2(-(mol.atomY(a) - mol.atomY(atom)), mol.atomX(a) - mol.atomX(atom)));\n            let order = Vec.idxSort(theta);\n            for (let n = 0; n < order.length; n++) {\n                this.torsA.push(order[n] + 1);\n                this.torsB.push(order[n < order.length - 1 ? n + 1 : 0] + 1);\n            }\n            this.selected = { type: GeomWidgetSelType.Position, idx: 0 };\n        }\n        else {\n            const bond = idx;\n            let a1 = mol.bondFrom(bond), a2 = mol.bondTo(bond);\n            this.atomSubset = [...mol.atomAdjList(a1), ...mol.atomAdjList(a2)];\n            let link = (a1, a2) => {\n                this.linkA.push(this.atomSubset.indexOf(a1));\n                this.linkB.push(this.atomSubset.indexOf(a2));\n            };\n            link(a1, a2);\n            for (let a of mol.atomAdjList(a1))\n                if (a != a2)\n                    link(a1, a);\n            for (let a of mol.atomAdjList(a2))\n                if (a != a1)\n                    link(a2, a);\n            this.selected = { type: GeomWidgetSelType.Link, idx: 0 };\n        }\n    }\n    render(parent) {\n        super.render(parent);\n        let divOuter = dom('<div/>').appendTo(this.contentDOM).css({ 'text-align': 'center' });\n        this.divDiagram = dom('<div/>').appendTo(divOuter).css({ 'display': 'inline-block' });\n        this.contentDOM.onClick((event) => this.mouseClick(eventCoords(event, this.divDiagram)));\n        this.contentDOM.onMouseMove((event) => this.mouseMove(eventCoords(event, this.divDiagram)));\n        this.redraw();\n    }\n    selectionAtoms(sel) {\n        const atoms = this.atomSubset;\n        if (sel.type == GeomWidgetSelType.Position)\n            return [atoms[sel.idx]];\n        if (sel.type == GeomWidgetSelType.Link)\n            return [atoms[this.linkA[sel.idx]], atoms[this.linkB[sel.idx]]];\n        if (sel.type == GeomWidgetSelType.Torsion)\n            return [atoms[0], atoms[this.torsA[sel.idx]], atoms[this.torsB[sel.idx]]];\n        return null;\n    }\n    redraw() {\n        this.divDiagram.empty();\n        let w = 250, h = 250;\n        this.posX = [];\n        this.posY = [];\n        const ANG_RAD = 0.25;\n        for (let a of this.atomSubset) {\n            this.posX.push(this.mol.atomX(a));\n            this.posY.push(this.mol.atomY(a));\n        }\n        let loX = Vec.min(this.posX) - ANG_RAD, hiX = Vec.max(this.posX) + ANG_RAD;\n        let loY = Vec.min(this.posY) - ANG_RAD, hiY = Vec.max(this.posY) + ANG_RAD;\n        this.scale = Math.min(40, Math.min((w - 4) / (hiX - loX), (h - 4) / (hiY - loY)));\n        let dx = 0.5 * (w - (hiX - loX) * this.scale), dy = 0.5 * (h - (hiY - loY) * this.scale);\n        for (let n = 0; n < this.atomSubset.length; n++) {\n            this.posX[n] = dx + (this.posX[n] - loX) * this.scale;\n            this.posY[n] = h - (dy + (this.posY[n] - loY) * this.scale);\n        }\n        this.posRad = ANG_RAD * this.scale;\n        let gfx = new MetaVector();\n        gfx.setSize(w, h);\n        let fg = Theme.foreground, bg = Theme.background, outerSel = 0x008FD1, innerSel = 0x47D5D2;\n        for (let n = 0; n < this.atomSubset.length; n++) {\n            if (this.hovered && this.hovered.type == GeomWidgetSelType.Position && this.hovered.idx == n)\n                gfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, fg, 1, bg);\n            else if (this.selected && this.selected.type == GeomWidgetSelType.Position && this.selected.idx == n)\n                gfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, outerSel, 1, innerSel);\n            else\n                gfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, MetaVector.NOCOLOUR, 0, fg);\n        }\n        for (let showsel of [1, 2, 3])\n            for (let n = 0; n < this.linkA.length; n++) {\n                let x1 = this.posX[this.linkA[n]], y1 = this.posY[this.linkA[n]];\n                let x2 = this.posX[this.linkB[n]], y2 = this.posY[this.linkB[n]];\n                if (this.hovered && this.hovered.type == GeomWidgetSelType.Link && this.hovered.idx == n) {\n                    if (showsel == 3) {\n                        gfx.drawLine(x1, y1, x2, y2, fg, this.scale * 0.1 + 2);\n                        gfx.drawLine(x1, y1, x2, y2, bg, this.scale * 0.1);\n                    }\n                }\n                else if (this.selected && this.selected.type == GeomWidgetSelType.Link && this.selected.idx == n) {\n                    if (showsel == 2) {\n                        gfx.drawLine(x1, y1, x2, y2, outerSel, this.scale * 0.1 + 2);\n                        gfx.drawLine(x1, y1, x2, y2, innerSel, this.scale * 0.1);\n                    }\n                }\n                else {\n                    if (showsel == 1)\n                        gfx.drawLine(x1, y1, x2, y2, fg, this.scale * 0.1);\n                }\n            }\n        for (let n = 0; n < this.torsA.length; n++) {\n            let cx = this.posX[0], cy = this.posY[0];\n            let dx1 = 0.5 * (this.posX[this.torsA[n]] - cx), dy1 = 0.5 * (this.posY[this.torsA[n]] - cy);\n            let dx2 = 0.5 * (this.posX[this.torsB[n]] - cx), dy2 = 0.5 * (this.posY[this.torsB[n]] - cy);\n            let rad = 0.5 * (norm_xy(dx1, dy1) + norm_xy(dx2, dy2));\n            let theta1 = Math.atan2(dy1, dx1) + 10 * DEGRAD, theta2 = Math.atan2(dy2, dx2) - 10 * DEGRAD, dtheta = angleDiff(theta2, theta1);\n            let ox1 = rad * Math.cos(theta1), oy1 = rad * Math.sin(theta1), ox2 = rad * Math.cos(theta2), oy2 = rad * Math.sin(theta2);\n            let px, py, pf;\n            if (dtheta > 0) {\n                let [ax1, ay1, ax2, ay2] = GeomUtil.arcControlPoints(rad, ox1, oy1, ox2, oy2);\n                px = Vec.add([ox1, ax1, ax2, ox2], cx);\n                py = Vec.add([oy1, ay1, ay2, oy2], cy);\n                pf = [false, true, true, false];\n            }\n            else {\n                let thetaM = theta1 + 0.5 * (dtheta + TWOPI);\n                let oxM = rad * Math.cos(thetaM), oyM = rad * Math.sin(thetaM);\n                let [ax1, ay1, ax2, ay2] = GeomUtil.arcControlPoints(rad, ox1, oy1, oxM, oyM);\n                let [ax3, ay3, ax4, ay4] = GeomUtil.arcControlPoints(rad, oxM, oyM, ox2, oy2);\n                px = Vec.add([ox1, ax1, ax2, oxM, ax3, ax4, ox2], cx);\n                py = Vec.add([oy1, ay1, ay2, oyM, ay3, ay4, oy2], cy);\n                pf = [false, true, true, false, true, true, false];\n            }\n            if (this.hovered && this.hovered.type == GeomWidgetSelType.Torsion && this.hovered.idx == n) {\n                gfx.drawPath(px, py, pf, false, fg, this.scale * 0.1 + 2, MetaVector.NOCOLOUR, false);\n                gfx.drawPath(px, py, pf, false, bg, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n            }\n            else if (this.selected && this.selected.type == GeomWidgetSelType.Torsion && this.selected.idx == n) {\n                gfx.drawPath(px, py, pf, false, outerSel, this.scale * 0.1 + 2, MetaVector.NOCOLOUR, false);\n                gfx.drawPath(px, py, pf, false, innerSel, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n            }\n            else\n                gfx.drawPath(px, py, pf, false, fg, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n        }\n        this.divDiagram.empty();\n        let svg = dom(gfx.createSVG()).appendTo(this.divDiagram).css({ 'pointer-events': 'none' });\n    }\n    mouseClick(xy) {\n        event.stopPropagation();\n        if (this.type == GeomWidgetType.Bond)\n            return;\n        let which = this.whichSelection(xy[0], xy[1]);\n        if (!which)\n            return;\n        if (!this.sameSelection(this.selected, which)) {\n            this.selected = which;\n            this.hovered = null;\n            this.redraw();\n            this.callbackSelect(which);\n        }\n    }\n    mouseMove(xy) {\n        if (this.type == GeomWidgetType.Bond)\n            return;\n        let which = this.whichSelection(xy[0], xy[1]);\n        if (which && this.sameSelection(which, this.selected))\n            which = null;\n        if (!this.sameSelection(this.hovered, which)) {\n            this.hovered = which;\n            this.redraw();\n        }\n    }\n    whichSelection(x, y) {\n        let cx = this.posX[0], cy = this.posY[0];\n        if (norm_xy(x - cx, y - cy) <= this.posRad)\n            return { type: GeomWidgetSelType.Position, idx: 0 };\n        let maxRad = 0;\n        for (let n = 1; n < this.atomSubset.length; n++)\n            maxRad = Math.max(maxRad, norm_xy(this.posX[n] - cx, this.posY[n] - cy) + this.posRad);\n        if (norm_xy(x - cx, y - cy) > maxRad)\n            return null;\n        let theta = Math.atan2(y - cy, x - cx);\n        let closeSel = null, closeDelta = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < this.linkB.length; n++) {\n            let delta = Math.abs(angleDiff(Math.atan2(this.posY[this.linkB[n]] - cy, this.posX[this.linkB[n]] - cx), theta));\n            if (delta < 10 * DEGRAD && delta < closeDelta) {\n                closeSel = { type: GeomWidgetSelType.Link, idx: n };\n                closeDelta = delta;\n            }\n        }\n        for (let n = 0; n < this.torsA.length; n++) {\n            let theta1 = Math.atan2(this.posY[this.torsA[n]] - cy, this.posX[this.torsA[n]] - cx);\n            let theta2 = Math.atan2(this.posY[this.torsB[n]] - cy, this.posX[this.torsB[n]] - cx);\n            let midtheta = theta1 + 0.5 * (angleDiff(theta2, theta1));\n            let delta = Math.abs(angleDiff(midtheta, theta));\n            if (delta < closeDelta) {\n                closeSel = { type: GeomWidgetSelType.Torsion, idx: n };\n                closeDelta = delta;\n            }\n        }\n        return closeSel;\n    }\n    sameSelection(sel1, sel2) {\n        if (sel1 == null && sel2 == null)\n            return true;\n        if (sel1 == null || sel2 == null)\n            return false;\n        return sel1.type == sel2.type && sel1.idx == sel2.idx;\n    }\n}\n//# sourceMappingURL=GeomWidget.js.map","import { clearTooltip } from '../ui/Tooltip';\nimport { dom, domLegacy } from '../util/dom';\nimport { installInlineCSS } from '../util/Theme';\nconst CSS_DIALOG = `\n    *.wmk-dialog\n    {\n        font-family: 'Open Sans', sans-serif;\n\t\tfont-size: 16px;\n\t\tcolor: black;\n\t\tuser-select: none;\n    }\n\t*.wmk-noscroll\n\t{\n\t\toverflow: hidden;\n\t}\n`;\nexport class Dialog {\n    constructor(parent = null) {\n        this.minPortionWidth = 80;\n        this.maxPortionWidth = 80;\n        this.maximumWidth = 0;\n        this.maximumHeight = 0;\n        this.minPortionHeight = 20;\n        this.maxPortionHeight = 0;\n        this.topMargin = 50;\n        this.title = 'Dialog';\n        this.allowScroller = true;\n        this.zindex = null;\n        this.callbackClose = null;\n        this.callbackShown = null;\n        this.parent = domLegacy(parent);\n        installInlineCSS('dialog', CSS_DIALOG);\n    }\n    onClose(callback) {\n        this.callbackClose = callback;\n    }\n    onShown(callback) {\n        this.callbackShown = callback;\n    }\n    open() {\n        clearTooltip();\n        let body = this.parent || dom(document.body);\n        body.addClass('wmk-noscroll');\n        let bg = this.domObscureBackground = dom('<div/>').appendTo(body);\n        bg.css({ 'position': 'fixed' });\n        bg.css({ 'left': '0', 'right': '0', 'top': '0', 'bottom': '0' });\n        bg.css({ 'background-color': 'black', 'opacity': 0.8 });\n        bg.onClick(() => this.close());\n        let fg = this.domObscureForeground = dom('<div/>').appendTo(body);\n        fg.css({ 'position': 'fixed' });\n        fg.css({ 'left': '0', 'right': '0', 'top': '0', 'bottom': '0' });\n        if (this.zindex > 0) {\n            bg.setCSS('z-index', this.zindex);\n            fg.setCSS('z-index', this.zindex + 1);\n        }\n        let pb = this.domPanelBoundary = dom('<div class=\"wmk-dialog\"/>').appendTo(fg);\n        pb.css({ 'min-width': this.minPortionWidth + '%' });\n        if (this.maximumWidth > 0)\n            pb.css({ 'max-width': this.maximumWidth + 'px' });\n        else if (this.maxPortionWidth != null)\n            pb.css({ 'max-width': this.maxPortionWidth + '%' });\n        if (this.maximumHeight > 0)\n            pb.css({ 'max-height': this.maximumHeight + 'px' });\n        else if (this.maxPortionHeight > 0)\n            pb.css({ 'max-height': this.maxPortionHeight + 'vh' });\n        pb.css({ 'background-color': 'white', 'border-radius': '6px', 'border': '1px solid black' });\n        pb.css({ 'position': 'absolute' });\n        pb.css({ 'left': (50 - 0.5 * this.minPortionWidth) + '%' });\n        pb.css({ 'top': this.topMargin + 'px' });\n        pb.css({ 'min-height': this.minPortionHeight + '%' });\n        let divOuter = dom('<div/>').appendTo(pb).css({ 'display': 'flex' });\n        divOuter.css({ 'flex-direction': 'column', 'align-items': 'stretch' });\n        if (this.maximumHeight > 0)\n            divOuter.css({ 'max-height': this.maximumHeight + 'px' });\n        else if (this.maxPortionHeight > 0)\n            divOuter.css({ 'max-height': this.maxPortionHeight + 'vh' });\n        let tdiv = this.domTitle = dom('<div/>').appendTo(divOuter);\n        tdiv.css({ 'flex-shrink': '0', 'flex-grow': '0' });\n        tdiv.css({ 'margin': '0', 'padding': '0' });\n        tdiv.css({ 'background-color': '#F0F0F0' });\n        tdiv.css({ 'background-image': 'linear-gradient(to right bottom, #FFFFFF, #E0E0E0)' });\n        tdiv.css({ 'border-bottom': '1px solid #C0C0C0' });\n        tdiv.css({ 'border-radius': '6px 6px 0 0' });\n        let bdiv = dom('<div/>').appendTo(divOuter).css({ 'width': '100%' });\n        bdiv.css({ 'flex-shrink': '1', 'flex-grow': '0' });\n        if (this.allowScroller)\n            bdiv.css({ 'overflow-y': 'auto' });\n        this.domBody = dom('<div/>').appendTo(bdiv).css({ 'padding': '0.5em' });\n        let ttlTable = dom('<table/>').appendTo(tdiv), tr = dom('<tr/>').appendTo(ttlTable);\n        ttlTable.attr({ 'width': '100%' });\n        let tdTitle = dom('<td valign=\"center\"/>').appendTo(tr).css({ 'padding': '0.5em' });\n        let ttl = dom('<font/>').appendTo(tdTitle).css({ 'font-size': '1.5em', 'font-weight': '600' });\n        ttl.setText(this.title);\n        let tdButtons = this.domTitleButtons = dom('<td align=\"right\" valign=\"center\"/>').appendTo(tr).css({ 'padding': '0.5em' });\n        this.domClose = dom('<button class=\"wmk-button wmk-button-default\">Close</button>').appendTo(tdButtons);\n        this.domClose.onClick(() => this.close());\n        this.populate();\n        this.repositionSize();\n        if (this.callbackShown)\n            this.callbackShown(this);\n    }\n    close() {\n        clearTooltip();\n        this.domObscureBackground.remove();\n        this.domObscureForeground.remove();\n        let body = this.parent || dom(document.body);\n        body.removeClass('wmk-noscroll');\n        if (this.callbackClose)\n            this.callbackClose(this);\n    }\n    bump() {\n        this.repositionSize();\n    }\n    bodyDOM() { return this.domBody; }\n    buttonsDOM() { return this.domTitleButtons; }\n    populate() {\n        this.bodyDOM().setText('Empty dialog box.');\n    }\n    repositionSize() {\n        let docW = window.innerWidth, dlgW = this.domPanelBoundary.width();\n        this.domPanelBoundary.css({ 'left': (0.5 * (docW - dlgW)) + 'px' });\n    }\n}\n//# sourceMappingURL=Dialog.js.map","import { FontData } from './FontData';\nexport class OutlineMeasurement {\n    constructor(offsetX, offsetY, pointScale) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.pointScale = pointScale;\n        this.invScale = 1 / pointScale;\n    }\n    scale() { return this.pointScale; }\n    angToX(ax) { return ax * this.pointScale + this.offsetX; }\n    angToY(ay) { return ay * -this.pointScale + this.offsetY; }\n    xToAng(px) { return (px - this.offsetX) * this.invScale; }\n    yToAng(py) { return (py - this.offsetY) * -this.invScale; }\n    yIsUp() { return false; }\n    measureText(str, fontSize) { return FontData.main.measureText(str, fontSize); }\n}\n//# sourceMappingURL=ArrangeMeasurement.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Vec } from '../util/Vec';\nexport class ClipboardProxyHandler {\n    copyEvent(andCut, proxy) { return false; }\n    pasteEvent(proxy) { return false; }\n}\nexport class ClipboardProxy {\n    constructor() {\n        this.handlers = [new ClipboardProxyHandler()];\n    }\n    pushHandler(handler) {\n        this.handlers.push(handler);\n    }\n    popHandler() {\n        this.handlers.pop();\n    }\n    currentHandler() {\n        return Vec.last(this.handlers);\n    }\n    triggerCopy(andCut) {\n        if (this.currentHandler().copyEvent(andCut, this))\n            return;\n        document.execCommand(andCut ? 'cut' : 'copy');\n    }\n    triggerPaste() {\n        if (this.currentHandler().pasteEvent(this))\n            return;\n        document.execCommand('paste');\n    }\n    getString() { return null; }\n    setString(str) { }\n    setImage(blob) { }\n    canSetHTML() { return false; }\n    setHTML(html) { }\n    canAlwaysGet() { return false; }\n    downloadString(str, fn) { }\n}\nexport class ClipboardProxyWeb extends ClipboardProxy {\n    constructor() {\n        super();\n        this.lastContent = null;\n        this.fakeTextArea = null;\n        this.busy = false;\n        document.addEventListener('copy', (event) => {\n            var _a;\n            if (this.busy)\n                return null;\n            if ((_a = this.currentHandler()) === null || _a === void 0 ? void 0 : _a.copyEvent(false, this)) {\n                event.preventDefault();\n                return false;\n            }\n        });\n        document.addEventListener('cut', (event) => {\n            var _a;\n            if (this.busy)\n                return null;\n            if ((_a = this.currentHandler()) === null || _a === void 0 ? void 0 : _a.copyEvent(true, this)) {\n                event.preventDefault();\n                return false;\n            }\n        });\n        document.addEventListener('paste', (event) => {\n            var _a;\n            let wnd = window;\n            this.lastContent = null;\n            if (wnd.clipboardData && wnd.clipboardData.getData)\n                this.lastContent = wnd.clipboardData.getData('Text');\n            else if (event.clipboardData && event.clipboardData.getData)\n                this.lastContent = event.clipboardData.getData('text/plain');\n            let consumed = (_a = this.currentHandler()) === null || _a === void 0 ? void 0 : _a.pasteEvent(this);\n            this.lastContent = null;\n            if (consumed) {\n                event.preventDefault();\n                return false;\n            }\n            return true;\n        });\n    }\n    getString() {\n        return this.lastContent;\n    }\n    setString(str) {\n        let fallbackWorkaround = () => {\n            if (this.fakeTextArea == null) {\n                this.fakeTextArea = document.createElement('textarea');\n                this.fakeTextArea.style.fontSize = '12pt';\n                this.fakeTextArea.style.border = '0';\n                this.fakeTextArea.style.padding = '0';\n                this.fakeTextArea.style.margin = '0';\n                this.fakeTextArea.style.position = 'fixed';\n                this.fakeTextArea.style['left'] = '-9999px';\n                this.fakeTextArea.style.top = (window.pageYOffset || document.documentElement.scrollTop) + 'px';\n                this.fakeTextArea.setAttribute('readonly', '');\n                document.body.appendChild(this.fakeTextArea);\n            }\n            this.fakeTextArea.value = str;\n            this.fakeTextArea.select();\n            this.busy = true;\n            document.execCommand('copy');\n            this.busy = false;\n        };\n        if (navigator.clipboard) {\n            navigator.clipboard.writeText(str).then(() => { }, fallbackWorkaround);\n        }\n        else\n            fallbackWorkaround();\n    }\n    setImage(blob) {\n        let item = new ClipboardItem({ 'image/png': blob });\n        this.busy = true;\n        (() => __awaiter(this, void 0, void 0, function* () {\n            yield navigator.clipboard.write([item]);\n            this.busy = false;\n        }))();\n    }\n}\n//# sourceMappingURL=ClipboardProxy.js.map","import { dom } from '../util/dom';\nimport { hasInlineCSS, installInlineCSS, Theme } from '../util/Theme';\nimport { colourCode } from '../util/util';\nimport { Widget } from './Widget';\nexport class OptionList extends Widget {\n    constructor(options, isVertical = false) {\n        super();\n        this.options = options;\n        this.isVertical = isVertical;\n        this.padding = 6;\n        this.htmlLabels = false;\n        this.numCols = 0;\n        this.selidx = 0;\n        this.buttonDiv = [];\n        this.auxCell = [];\n        this.callbackSelect = null;\n        if (options.length == 0)\n            throw 'molsync.ui.OptionList: must provide a list of option labels.';\n        if (!hasInlineCSS('option'))\n            installInlineCSS('option', this.composeCSS());\n    }\n    getSelectedIndex() {\n        return this.selidx;\n    }\n    getSelectedValue() {\n        return this.options[this.selidx];\n    }\n    getAuxiliaryCell(idx) {\n        return this.auxCell[idx].el;\n    }\n    onSelect(callback) {\n        this.callbackSelect = callback;\n    }\n    render(parent) {\n        super.render(parent);\n        this.contentDOM.css({ 'display': 'block', 'baseline-shift': '1.5em' });\n        this.buttonDiv = [];\n        this.auxCell = [];\n        let table = dom('<table class=\"wmk-option-table\"/>').appendTo(this.contentDOM);\n        let tr = this.isVertical ? null : dom('<tr/>').appendTo(table);\n        for (let n = 0; n < this.options.length; n++) {\n            if (this.isVertical || (this.numCols > 0 && n > 0 && n % this.numCols == 0))\n                tr = dom('<tr/>').appendTo(table);\n            let td = dom('<td class=\"wmk-option-cell\"/>').appendTo(tr);\n            let div = dom('<div class=\"wmk-option\"/>').appendTo(td);\n            div.css({ 'padding': `${this.padding}px` });\n            div.onClick(() => this.clickButton(n));\n            this.buttonDiv.push(div);\n            if (this.isVertical) {\n                td = dom('<td style=\"vertical-align: middle;\"/>').appendTo(tr);\n                this.auxCell.push(td);\n            }\n        }\n        this.updateButtons();\n    }\n    clickButton(idx) {\n        if (idx == this.selidx)\n            return;\n        this.setSelectedIndex(idx);\n        if (this.callbackSelect)\n            this.callbackSelect(idx, this);\n    }\n    setSelectedIndex(idx) {\n        if (this.selidx == idx)\n            return;\n        this.selidx = idx;\n        this.updateButtons();\n    }\n    setSelectedValue(val) {\n        let idx = this.options.indexOf(val);\n        if (idx >= 0)\n            this.setSelectedIndex(idx);\n    }\n    updateButtons() {\n        for (let n = 0; n < this.options.length && n < this.buttonDiv.length; n++) {\n            let div = this.buttonDiv[n];\n            let txt = this.options[n];\n            if (txt.length == 0 && n == this.selidx)\n                div.setText('\\u00A0\\u2716\\u00A0');\n            else if (txt.length == 0)\n                div.setText('\\u00A0\\u00A0\\u00A0');\n            else if (this.htmlLabels)\n                div.setHTML(txt);\n            else\n                div.setText(txt);\n            div.removeClass('wmk-option-unselected wmk-option-selected');\n            if (n != this.selidx)\n                div.addClass('wmk-option-unselected');\n            else\n                div.addClass('wmk-option-selected');\n        }\n    }\n    composeCSS() {\n        let lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n        let highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n        return `\n\t\t\t.wmk-option\n\t\t\t{\n\t\t\t\tmargin-bottom: 0;\n\t\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tfont-weight: normal;\n\t\t\t\ttext-align: center;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\tline-height: 1.2em;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t.wmk-option-selected\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #008FD2;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\t}\n\t\t\t.wmk-option-unselected\n\t\t\t{\n\t\t\t\tcolor: #333;\n\t\t\t\tbackground-color: white;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\t}\n\t\t\t.wmk-option-unselected:hover\n\t\t\t{\n\t\t\t\tbackground-color: #808080;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #F0F0F0, #D0D0D0);\n\t\t\t}\n\t\t\t.wmk-option-unselected:active\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #00C000;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\t}\n\t\t\t.wmk-option-table\n\t\t\t{\n\t\t\t\tmargin: 1px;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-collapse: collapse;\n\t\t\t}\n\t\t\t.wmk-option-cell\n\t\t\t{\n\t\t\t\tmargin: 0;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-width: 1px;\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-color: #808080;\n\t\t\t}\n\t\t`;\n    }\n}\n//# sourceMappingURL=OptionList.js.map","import { dom } from '../util/dom';\nimport { hasInlineCSS, installInlineCSS, Theme } from '../util/Theme';\nimport { colourCode } from '../util/util';\nimport { Widget } from './Widget';\nexport class TabBar extends Widget {\n    constructor(options) {\n        super();\n        this.options = options;\n        this.unionHeight = false;\n        this.selidx = 0;\n        this.buttonDiv = [];\n        this.panelDiv = [];\n        this.padding = 6;\n        this.callbackSelect = null;\n        if (!hasInlineCSS('tabbar'))\n            installInlineCSS('tabbar', this.composeCSS());\n    }\n    onSelect(callback) {\n        this.callbackSelect = callback;\n    }\n    getSelectedIndex() {\n        return this.selidx;\n    }\n    getSelectedValue() {\n        return this.options[this.selidx];\n    }\n    getPanelDOM(idxOrName) {\n        let idx = typeof idxOrName == 'number' ? idxOrName : this.options.indexOf(idxOrName);\n        if (idx < 0)\n            return null;\n        return this.panelDiv[idx];\n    }\n    render(parent) {\n        super.render(parent);\n        let grid = dom('<div/>').appendTo(this.contentDOM).css({ 'display': 'grid' });\n        grid.css({ 'align-items': 'center', 'justify-content': 'start', 'grid-row-gap': '0.5em' });\n        let columns = '[start] 1fr ';\n        for (let n = 0; n < this.options.length; n++)\n            columns += '[btn' + n + '] auto ';\n        columns += '[btnX] 1fr [end]';\n        grid.css({ 'grid-template-columns': columns });\n        let underline = dom('<div/>').appendTo(grid);\n        underline.css({ 'grid-column': 'start / end', 'grid-row': '1', 'height': '100%' });\n        underline.css({ 'border-bottom': '1px solid #C0C0C0' });\n        for (let n = 0; n < this.options.length; n++) {\n            let outline = dom('<div class=\"wmk-tabbar-cell\"/>').appendTo(grid);\n            outline.css({ 'grid-column': 'btn' + n, 'grid-row': '1' });\n            let btn = dom('<div class=\"wmk-tabbar\"/>').appendTo(outline);\n            btn.css({ 'padding': `${this.padding}px` });\n            btn.onClick(() => this.clickButton(n));\n            this.buttonDiv.push(btn);\n            let panel = dom('<div/>').appendTo(grid);\n            panel.css({ 'grid-column': 'start / end', 'grid-row': '2' });\n            panel.css({ 'align-self': 'start', 'justify-self': 'center', 'width': '100%' });\n            this.panelDiv.push(panel);\n        }\n        this.updateButtons();\n    }\n    clickButton(idx) {\n        if (idx == this.selidx)\n            return;\n        this.setSelectedIndex(idx);\n        if (this.callbackSelect)\n            this.callbackSelect(idx, this);\n    }\n    setSelectedIndex(idx) {\n        if (this.selidx == idx)\n            return;\n        this.selidx = idx;\n        let dom = this.contentDOM;\n        dom.setCSS('min-width', `${dom.width()}px`);\n        this.updateButtons();\n    }\n    setSelectedValue(val) {\n        let idx = this.options.indexOf(val);\n        if (idx >= 0)\n            this.setSelectedIndex(idx);\n    }\n    rotateSelected(dir) {\n        this.setSelectedIndex((this.selidx + dir + this.options.length) % this.options.length);\n    }\n    updateButtons() {\n        for (let n = 0; n < this.options.length && n < this.buttonDiv.length; n++) {\n            let div = this.buttonDiv[n];\n            let txt = this.options[n];\n            if (txt.length == 0 && n == this.selidx)\n                div.setText('\\u00A0\\u2716\\u00A0');\n            else if (txt.length == 0)\n                div.setText('\\u00A0\\u00A0\\u00A0');\n            else\n                div.setText(txt);\n            div.removeClass('wmk-tabbar-unselected wmk-tabbar-selected');\n            if (n != this.selidx)\n                div.addClass('wmk-tabbar-unselected');\n            else\n                div.addClass('wmk-tabbar-selected');\n            if (this.unionHeight)\n                this.panelDiv[n].setCSS('visibility', n == this.selidx ? 'visible' : 'hidden');\n            else\n                this.panelDiv[n].setCSS('display', n == this.selidx ? 'block' : 'none');\n        }\n    }\n    composeCSS() {\n        let lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n        let highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n        return `\n\t\t\t.wmk-tabbar\n\t\t\t{\n\t\t\t\tmargin-bottom: 0;\n\t\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tfont-weight: normal;\n\t\t\t\ttext-align: center;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\tvertical-align: middle;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t.wmk-tabbar-selected\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #008FD2;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected\n\t\t\t{\n\t\t\t\tcolor: #333;\n\t\t\t\tbackground-color: white;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected:hover\n\t\t\t{\n\t\t\t\tbackground-color: #808080;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #F0F0F0, #D0D0D0);\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected:active\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #00C000;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\t}\n\t\t\t.wmk-tabbar-table\n\t\t\t{\n\t\t\t\tmargin: 1px;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-collapse: collapse;\n\t\t\t}\n\t\t\t.wmk-tabbar-cell\n\t\t\t{\n\t\t\t\tmargin: 0 -1px -1px 0;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-width: 1px;\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-color: #808080;\n\t\t\t}\n\t\t`;\n    }\n}\n//# sourceMappingURL=TabBar.js.map","import { Molecule } from '../data/Molecule';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nexport class ExtraFieldsWidget extends Widget {\n    constructor(fields) {\n        super();\n        this.fields = fields;\n    }\n    render(parent) {\n        super.render(parent);\n        this.divFields = dom('<div/>').appendTo(this.contentDOM);\n        this.fillTable();\n        let divButtons = dom('<div/>').appendTo(this.contentDOM).css({ 'text-align': 'center' });\n        let btnExtra = dom('<button class=\"wmk-button wmk-button-default\">Extra</button>').appendTo(divButtons);\n        btnExtra.onClick(() => {\n            this.fields.push(Molecule.PREFIX_EXTRA);\n            this.fillTable();\n        });\n        let btnTransient = dom('<button class=\"wmk-button wmk-button-default\">Transient</button>').appendTo(divButtons).css({ 'margin-left': '0.5em' });\n        btnTransient.onClick(() => {\n            this.fields.push(Molecule.PREFIX_TRANSIENT);\n            this.fillTable();\n        });\n    }\n    getExtraFields() {\n        let extra = [];\n        for (let field of this.fields)\n            if (!field.startsWith(Molecule.PREFIX_TRANSIENT) && field.length > 1)\n                extra.push(field);\n        return extra;\n    }\n    getTransientFields() {\n        let transient = [];\n        for (let field of this.fields)\n            if (field.startsWith(Molecule.PREFIX_TRANSIENT) && field.length > 1)\n                transient.push(field);\n        return transient;\n    }\n    fillTable() {\n        this.divFields.empty();\n        if (this.fields.length == 0)\n            return;\n        let table = dom('<table/>').appendTo(this.divFields).css({ 'width': '100%' });\n        let tr = dom('<tr/>').appendTo(table);\n        dom('<td/>').appendTo(tr).css({ 'text-align': 'right', 'font-weight': 'bold', 'text-decoration': 'underline' }).setText('Type');\n        dom('<td/>').appendTo(tr).css({ 'font-weight': 'bold', 'text-decoration': 'underline' }).setText('Value');\n        for (let n = 0; n < this.fields.length; n++) {\n            let strType = '?', strValue = '';\n            if (this.fields[n].length > 0) {\n                strType = this.fields[n].charAt(0);\n                strValue = this.fields[n].substring(1);\n            }\n            tr = dom('<tr/>').appendTo(table);\n            let tdType = dom('<td/>').appendTo(tr).css({ 'text-align': 'right' }), tdValue = dom('<td/>').appendTo(tr), tdButton = dom('<td/>').appendTo(tr);\n            dom('<span/>').appendTo(tdType).css({ 'padding': '0.2em', 'border': '1px solid black', 'background-color': '#C0C0C0' }).setText(strType);\n            let input = dom('<input size=\"20\"/>').appendTo(tdValue).css({ 'width': '100%', 'font': 'inherit' });\n            input.setValue(strValue);\n            input.onInput(() => { this.fields[n] = strType + input.getValue(); });\n            let btnDelete = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\">\\u{2716}</button>').appendTo(tdButton).css({ 'margin-left': '0.5em' });\n            btnDelete.onClick(() => {\n                this.fields.splice(n, 1);\n                this.fillTable();\n            });\n        }\n    }\n}\n//# sourceMappingURL=ExtraFieldsWidget.js.map","import { Chemistry } from '../data/Chemistry';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nimport { installInlineCSS } from '../util/Theme';\nconst POSITION_TABLE_Y = [\n    1, 1,\n    2, 2, 2, 2, 2, 2, 2, 2,\n    3, 3, 3, 3, 3, 3, 3, 3,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n    6, 6,\n    8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    7, 7,\n    9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7\n];\nconst POSITION_TABLE_X = [\n    1, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nconst CSS_PERIODICTABLE = `\n\t*.wmk-periodictable-element\n\t{\n\t\tborder: 1px solid black;\n\t\tborder-radius: 2px;\n\t\tmargin: 0;\n\t\tmin-width: 2em;\n\t\tpadding: 0.4em 0 0.3em 0;\n\t\ttext-align: center;\n\t\tcolor: #FFFFFF;\n\t\tcursor: pointer;\n\t}\n\t*.wmk-periodictable-block1\n\t{\n\t\tbackground-color: #313062;\n\t}\n\t*.wmk-periodictable-block1:hover\n\t{\n\t\tbackground-color: #414072;\n\t}\n\t*.wmk-periodictable-block2\n\t{\n\t\tbackground-color: #205224;\n\t}\n\t*.wmk-periodictable-block2:hover\n\t{\n\t\tbackground-color: #306234;\n\t}\n\t*.wmk-periodictable-block3\n\t{\n\t\tbackground-color: #522818;\n\t}\n\t*.wmk-periodictable-block3:hover\n\t{\n\t\tbackground-color: #623828;\n\t}\n\t*.wmk-periodictable-block4\n\t{\n\t\tbackground-color: #575212;\n\t}\n\t*.wmk-periodictable-block4:block\n\t{\n\t\tbackground-color: #676222;\n\t}\n\t*.wmk-periodictable-selected\n\t{\n\t\tbackground-color: #FFFFFF !important;\n\t\tcolor: #000000 !important;\n\t\tcursor: default;\n\t}\n`;\nexport class PeriodicTableWidget extends Widget {\n    constructor() {\n        super();\n        this.divList = [];\n        this.selectedAtno = [];\n        installInlineCSS('periodictable', CSS_PERIODICTABLE);\n    }\n    render(parent) {\n        super.render(parent);\n        let grid = dom('<div/>').appendTo(this.contentDOM).css({ 'display': 'grid' });\n        grid.css({ 'align-items': 'center', 'justify-content': 'start', 'gap': '1px' });\n        let row = POSITION_TABLE_Y.map((y) => Math.round(2 * y) + 1);\n        let col = POSITION_TABLE_X.map((x) => Math.round(2 * x) + 1);\n        let num = row.length;\n        for (let n = 0; n < num; n++) {\n            let div = dom('<div/>').appendTo(grid);\n            div.css({ 'grid-row': `${row[n]} / span 2`, 'grid-column': `${col[n]} / span 2` });\n            div.addClass('wmk-periodictable-element');\n            let blk = Chemistry.ELEMENT_BLOCKS[n + 1];\n            if (blk == 1)\n                div.addClass('wmk-periodictable-block1');\n            else if (blk == 2)\n                div.addClass('wmk-periodictable-block2');\n            else if (blk == 3)\n                div.addClass('wmk-periodictable-block3');\n            else if (blk == 4)\n                div.addClass('wmk-periodictable-block4');\n            let el = Chemistry.ELEMENTS[n + 1];\n            div.setText(el);\n            this.divList.push(div);\n            div.onClick(() => {\n                this.changeElement(el);\n                this.callbackSelect(el);\n            });\n            div.onDblClick((event) => {\n                this.callbackDoubleClick();\n                event.preventDefault();\n                event.stopPropagation();\n            });\n        }\n    }\n    onSelect(callback) {\n        this.callbackSelect = callback;\n    }\n    onDoubleClick(callback) {\n        this.callbackDoubleClick = callback;\n    }\n    changeElement(element) {\n        let atno = Chemistry.ELEMENTS.indexOf(element);\n        this.selectedAtno = [atno];\n        this.updateSelected();\n    }\n    setSelectedElements(elementList) {\n        this.selectedAtno = elementList.map((el) => Chemistry.ELEMENTS.indexOf(el)).filter((atno) => atno > 0);\n        this.updateSelected();\n    }\n    updateSelected() {\n        for (let n = 1; n <= this.divList.length; n++) {\n            if (this.selectedAtno.includes(n))\n                this.divList[n - 1].addClass('wmk-periodictable-selected');\n            else\n                this.divList[n - 1].removeClass('wmk-periodictable-selected');\n        }\n    }\n}\n//# sourceMappingURL=PeriodicTableWidget.js.map","import { QueryUtil } from '../data/QueryUtil';\nimport { OptionList } from '../ui/OptionList';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nimport { Vec } from '../util/Vec';\nexport class QueryFieldsWidget extends Widget {\n    constructor(mol, atom, bond) {\n        super();\n        this.mol = mol;\n        this.atom = atom;\n        this.bond = bond;\n    }\n    render(parent) {\n        super.render(parent);\n        let grid = dom('<div/>').appendTo(this.contentDOM);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[title] auto [value] auto [end]' });\n        let row = 0;\n        let makeInput = () => {\n            let input = dom('<input size=\"20\"/>').appendTo(grid).css({ 'grid-area': `${row} / value` });\n            return input;\n        };\n        let makeToggleInput = () => {\n            let div = dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value`, 'dispkay': 'flex' });\n            let lbl = dom('<label/>').appendTo(div).css({ 'margin-right': '0.5em' });\n            let chk = dom('<input type=\"checkbox\"/>').appendTo(lbl);\n            lbl.appendText('Not');\n            let input = dom('<input size=\"20\"/>').appendTo(div).css({ 'flex-grow': '1' });\n            return [chk, input];\n        };\n        if (this.atom > 0) {\n            dom('<div>Charges</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputCharges = makeInput();\n            dom('<div>Aromatic</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.optAromatic = new OptionList(['Maybe', 'Yes', 'No']);\n            this.optAromatic.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value` }));\n            dom('<div>Unsaturated</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.optUnsaturated = new OptionList(['Maybe', 'Yes', 'No']);\n            this.optUnsaturated.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value` }));\n            dom('<div>Elements</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            [this.chkNotElements, this.inputElements] = makeToggleInput();\n            dom('<div>Ring Sizes</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            [this.chkNotRingSizes, this.inputRingSizes] = makeToggleInput();\n            dom('<div>Ring Block</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.optRingBlock = new OptionList(['Maybe', 'Yes', 'No']);\n            this.optRingBlock.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value` }));\n            dom('<div># Small Rings</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputNumRings = makeInput();\n            dom('<div># Ring Bonds</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputRingBonds = makeInput();\n            dom('<div>Adjacency</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputAdjacency = makeInput();\n            dom('<div>Bond Sums</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputBondSums = makeInput();\n            dom('<div>Valences</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputValences = makeInput();\n            dom('<div>Hydrogens</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputHydrogens = makeInput();\n            dom('<div>Isotopes</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputIsotopes = makeInput();\n            this.setupAtom();\n        }\n        else {\n            dom('<div>Ring Sizes</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            [this.chkNotRingSizes, this.inputRingSizes] = makeToggleInput();\n            dom('<div>Ring Block</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.optRingBlock = new OptionList(['Maybe', 'Yes', 'No']);\n            this.optRingBlock.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value` }));\n            dom('<div># Small Rings</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputNumRings = makeInput();\n            dom('<div>Num Rings</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputNumRings = makeInput();\n            dom('<div>Bond Orders</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputOrders = makeInput();\n            this.setupBond();\n        }\n    }\n    updateAtom() {\n        const { mol, atom } = this;\n        QueryUtil.deleteQueryAtomAll(mol, atom);\n        let chg = this.splitNumbers(this.inputCharges.getValue());\n        if (chg)\n            QueryUtil.setQueryAtomCharges(mol, atom, chg);\n        let arom = this.optAromatic.getSelectedIndex();\n        if (arom > 0)\n            QueryUtil.setQueryAtomAromatic(mol, atom, arom == 1);\n        let unsat = this.optUnsaturated.getSelectedIndex();\n        if (unsat > 0)\n            QueryUtil.setQueryAtomUnsaturated(mol, atom, unsat == 1);\n        let elem = this.splitStrings(this.inputElements.getValue());\n        if (elem) {\n            if (!this.chkNotElements.elInput.checked)\n                QueryUtil.setQueryAtomElements(mol, atom, elem);\n            else\n                QueryUtil.setQueryAtomElementsNot(mol, atom, elem);\n        }\n        let ringsz = this.splitNumbers(this.inputRingSizes.getValue());\n        if (ringsz) {\n            if (!this.chkNotRingSizes.elInput.checked)\n                QueryUtil.setQueryAtomRingSizes(mol, atom, ringsz);\n            else\n                QueryUtil.setQueryAtomRingSizesNot(mol, atom, ringsz);\n        }\n        let ringblk = this.optRingBlock.getSelectedIndex();\n        if (ringblk > 0)\n            QueryUtil.setQueryAtomRingBlock(mol, atom, ringblk == 1);\n        let nring = this.splitNumbers(this.inputNumRings.getValue());\n        if (nring)\n            QueryUtil.setQueryAtomNumRings(mol, atom, nring);\n        let rbc = this.splitNumbers(this.inputRingBonds.getValue());\n        if (rbc)\n            QueryUtil.setQueryAtomRingBonds(mol, atom, rbc);\n        let adj = this.splitNumbers(this.inputAdjacency.getValue());\n        if (adj)\n            QueryUtil.setQueryAtomAdjacency(mol, atom, adj);\n        let bond = this.splitNumbers(this.inputBondSums.getValue());\n        if (bond)\n            QueryUtil.setQueryAtomBondSums(mol, atom, bond);\n        let val = this.splitNumbers(this.inputValences.getValue());\n        if (val)\n            QueryUtil.setQueryAtomValences(mol, atom, val);\n        let hyd = this.splitNumbers(this.inputHydrogens.getValue());\n        if (hyd)\n            QueryUtil.setQueryAtomHydrogens(mol, atom, hyd);\n        let iso = this.splitNumbers(this.inputIsotopes.getValue());\n        if (iso)\n            QueryUtil.setQueryAtomIsotope(mol, atom, iso);\n    }\n    updateBond() {\n        const { mol, bond } = this;\n        QueryUtil.deleteQueryBondAll(mol, bond);\n        let ringsz = this.splitNumbers(this.inputRingSizes.getValue());\n        if (ringsz) {\n            if (!this.chkNotRingSizes.elInput.checked)\n                QueryUtil.setQueryBondRingSizes(mol, bond, ringsz);\n            else\n                QueryUtil.setQueryBondRingSizesNot(mol, bond, ringsz);\n        }\n        let ringblk = this.optRingBlock.getSelectedIndex();\n        if (ringblk > 0)\n            QueryUtil.setQueryBondRingBlock(mol, bond, ringblk == 1);\n        let nring = this.splitNumbers(this.inputNumRings.getValue());\n        if (nring)\n            QueryUtil.setQueryBondNumRings(mol, bond, nring);\n        let order = this.splitNumbers(this.inputOrders.getValue());\n        if (order)\n            QueryUtil.setQueryBondOrders(mol, bond, order);\n    }\n    setupAtom() {\n        const { mol, atom } = this;\n        let chg = QueryUtil.queryAtomCharges(mol, atom);\n        let arom = QueryUtil.queryAtomAromatic(mol, atom);\n        let unsat = QueryUtil.queryAtomUnsaturated(mol, atom);\n        let elem = QueryUtil.queryAtomElements(mol, atom);\n        let elemNot = QueryUtil.queryAtomElementsNot(mol, atom);\n        let ringsz = QueryUtil.queryAtomRingSizes(mol, atom);\n        let ringszNot = QueryUtil.queryAtomRingSizesNot(mol, atom);\n        let ringblk = QueryUtil.queryAtomRingBlock(mol, atom);\n        let nring = QueryUtil.queryAtomNumRings(mol, atom);\n        let rbc = QueryUtil.queryAtomRingBonds(mol, atom);\n        let adj = QueryUtil.queryAtomAdjacency(mol, atom);\n        let bond = QueryUtil.queryAtomBondSums(mol, atom);\n        let val = QueryUtil.queryAtomValences(mol, atom);\n        let hyd = QueryUtil.queryAtomHydrogens(mol, atom);\n        let iso = QueryUtil.queryAtomIsotope(mol, atom);\n        let frag = QueryUtil.queryAtomSubFrags(mol, atom);\n        let fragNot = QueryUtil.queryAtomSubFragsNot(mol, atom);\n        this.inputCharges.setValue(Vec.notBlank(chg) ? chg.join(',') : '');\n        this.optAromatic.setSelectedIndex(arom == null ? 0 : arom ? 1 : 2);\n        this.optUnsaturated.setSelectedIndex(unsat == null ? 0 : unsat ? 1 : 2);\n        this.chkNotElements.elInput.checked = Vec.isBlank(elem) && Vec.notBlank(elemNot);\n        this.inputElements.setValue(Vec.notBlank(elem) ? elem.join(',') : Vec.notBlank(elemNot) ? elemNot.join(',') : '');\n        this.chkNotRingSizes.elInput.checked = Vec.isBlank(ringsz) && Vec.notBlank(ringszNot);\n        this.inputRingSizes.setValue(Vec.notBlank(ringsz) ? ringsz.join(',') : Vec.notBlank(ringszNot) ? ringszNot.join(',') : '');\n        this.optRingBlock.setSelectedIndex(ringblk == null ? 0 : ringblk ? 1 : 2);\n        this.inputNumRings.setValue(Vec.notBlank(nring) ? nring.join(',') : '');\n        this.inputRingBonds.setValue(Vec.notBlank(rbc) ? rbc.join(',') : '');\n        this.inputAdjacency.setValue(Vec.notBlank(adj) ? adj.join(',') : '');\n        this.inputBondSums.setValue(Vec.notBlank(bond) ? bond.join(',') : '');\n        this.inputValences.setValue(Vec.notBlank(val) ? val.join(',') : '');\n        this.inputHydrogens.setValue(Vec.notBlank(hyd) ? hyd.join(',') : '');\n        this.inputIsotopes.setValue(Vec.notBlank(iso) ? iso.join(',') : '');\n    }\n    setupBond() {\n        const { mol, bond } = this;\n        let ringsz = QueryUtil.queryBondRingSizes(mol, bond);\n        let ringszNot = QueryUtil.queryBondRingSizesNot(mol, bond);\n        let ringblk = QueryUtil.queryBondRingBlock(mol, bond);\n        let nring = QueryUtil.queryBondNumRings(mol, bond);\n        let order = QueryUtil.queryBondOrders(mol, bond);\n        this.chkNotRingSizes.elInput.checked = Vec.isBlank(ringsz) && Vec.notBlank(ringszNot);\n        this.inputRingSizes.setValue(Vec.notBlank(ringsz) ? ringsz.join(',') : Vec.notBlank(ringszNot) ? ringszNot.join(',') : '');\n        this.optRingBlock.setSelectedIndex(ringblk == null ? 0 : ringblk ? 1 : 2);\n        this.inputNumRings.setValue(Vec.notBlank(nring) ? nring.join(',') : '');\n        this.inputOrders.setValue(Vec.notBlank(order) ? order.join(',') : '');\n    }\n    splitStrings(str) {\n        let list = [];\n        if (str)\n            for (let bit of str.split(/[\\s\\,\\;]+/))\n                if (bit)\n                    list.push(bit);\n        return list.length ? list : null;\n    }\n    splitNumbers(str) {\n        let list = [];\n        if (str)\n            for (let bit of str.split(/[\\s\\,\\;]+/)) {\n                if (bit.startsWith('+'))\n                    bit = bit.substring(1);\n                let num = parseInt(bit);\n                if (!isNaN(num))\n                    list.push(num);\n            }\n        return list.length ? list : null;\n    }\n}\n//# sourceMappingURL=QueryFieldsWidget.js.map","import { AbbrevContainer } from '../data/AbbrevContainer';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { Dialog } from '../dialog/Dialog';\nimport { OutlineMeasurement } from '../gfx/ArrangeMeasurement';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { ClipboardProxyHandler } from '../ui/ClipboardProxy';\nimport { OptionList } from '../ui/OptionList';\nimport { TabBar } from '../ui/TabBar';\nimport { dom } from '../util/dom';\nimport { Theme } from '../util/Theme';\nimport { angleDiffPos, colourCode, DEGRAD, norm_xy, RADDEG } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { ExtraFieldsWidget } from './ExtraFieldsWidget';\nimport { GeomWidget, GeomWidgetSelType, GeomWidgetType } from './GeomWidget';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nimport { PeriodicTableWidget } from './PeriodicTableWidget';\nimport { QueryFieldsWidget } from './QueryFieldsWidget';\nexport class EditAtom extends Dialog {\n    constructor(mol, atom, proxyClip, callbackApply) {\n        super();\n        this.atom = atom;\n        this.proxyClip = proxyClip;\n        this.callbackApply = callbackApply;\n        this.newX = 0;\n        this.newY = 0;\n        this.tabs = null;\n        this.abbrevList = null;\n        this.svgAbbrev = null;\n        this.abbrevIndices = [];\n        this.currentAbbrev = -1;\n        this.initMol = mol;\n        this.mol = mol.clone();\n        this.title = 'Edit Atom';\n        this.minPortionWidth = 20;\n        this.maxPortionWidth = 95;\n    }\n    populate() {\n        this.proxyClip.pushHandler(new ClipboardProxyHandler());\n        let buttons = this.buttonsDOM(), body = this.bodyDOM();\n        this.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnApply.onClick(() => this.applyChanges());\n        if (this.atom > 0) {\n            this.tabs = new TabBar(['Atom', 'Abbreviation', 'Geometry', 'Query', 'Extra']);\n            this.tabs.render(body);\n            this.tabs.onSelect((idx) => this.selectedTab(idx));\n            this.populateAtom(this.tabs.getPanelDOM('Atom'));\n            this.populateAbbreviation(this.tabs.getPanelDOM('Abbreviation'));\n            if (this.atom > 0)\n                this.populateGeometry(this.tabs.getPanelDOM('Geometry'));\n            this.populateQuery(this.tabs.getPanelDOM('Query'));\n            this.populateExtra(this.tabs.getPanelDOM('Extra'));\n        }\n        else {\n            this.populateAtom(body);\n        }\n        let focusable = body.findAll('input,textarea');\n        if (focusable.length > 0)\n            focusable[0].grabFocus(true);\n        for (let dom of focusable) {\n            dom.css({ 'font': 'inherit' });\n            dom.onKeyDown((event) => {\n                if (event.key == \"Enter\")\n                    this.applyChanges();\n                else if (event.key == \"Escape\")\n                    this.close();\n                else if (event.key == \"PageUp\") {\n                    this.tabs.rotateSelected(-1);\n                    this.selectedTab(this.tabs.getSelectedIndex());\n                    event.preventDefault();\n                }\n                else if (event.key == \"PageDown\") {\n                    this.tabs.rotateSelected(1);\n                    this.selectedTab(this.tabs.getSelectedIndex());\n                    event.preventDefault();\n                }\n                event.stopPropagation();\n            });\n        }\n    }\n    close() {\n        this.proxyClip.popHandler();\n        super.close();\n    }\n    applyChanges() {\n        this.mol.keepTransient = true;\n        this.updateMolecule();\n        let selTab = this.tabs ? this.tabs.getSelectedValue() : null;\n        if (selTab == 'Abbreviation')\n            this.updateAbbrev();\n        if (selTab == 'Geometry')\n            this.updateGeometry();\n        if (selTab == 'Query')\n            this.updateQuery();\n        if (selTab == 'Extra')\n            this.updateExtra();\n        this.mol.keepTransient = false;\n        if (this.callbackApply)\n            this.callbackApply(this);\n    }\n    populateAtom(panel) {\n        let grid = dom('<div/>').appendTo(panel);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]' });\n        grid.appendHTML('<div style=\"grid-area: 1 / col0;\">Symbol</div>');\n        this.inputSymbol = dom('<input size=\"20\"/>').appendTo(grid);\n        this.inputSymbol.css({ 'grid-area': '1 / col1 / auto / col4}' });\n        this.inputSymbol.onInput(() => this.periodicWidget.changeElement(this.inputSymbol.getValue()));\n        grid.appendHTML('<div style=\"grid-area: 2 / col0;\">Charge</div>');\n        this.inputCharge = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n        this.inputCharge.css({ 'grid-area': '2 / col1' });\n        grid.appendHTML('<div style=\"grid-area: 2 / col2;\">Unpaired</div>');\n        this.inputUnpaired = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n        this.inputUnpaired.css({ 'grid-area': '2 / col3' });\n        grid.appendHTML('<div style=\"grid-area: 3 / col0;\">Hydrogens</div>');\n        this.optionHydrogen = new OptionList(['Auto', 'None', '1', '2', '3', '4', 'Other']);\n        this.optionHydrogen.render(dom('<div style=\"grid-area: 3 / col1 / auto / col3\"/>').appendTo(grid));\n        this.optionHydrogen.onSelect((idx) => this.inputHydrogen.elInput.disabled = idx != 6);\n        this.inputHydrogen = dom('<input type=\"number\" size=\"4\"/>').appendTo(grid);\n        this.inputHydrogen.css({ 'grid-area': '3 / col3' });\n        this.inputHydrogen.elInput.disabled = true;\n        grid.appendHTML('<div style=\"grid-area: 4 / col0;\">Isotope</div>');\n        this.optionIsotope = new OptionList(['Natural', 'Enriched']);\n        this.optionIsotope.render(dom('<div style=\"grid-area: 4 / col1 / auto / col3\"/>').appendTo(grid));\n        this.optionIsotope.onSelect((idx) => this.inputIsotope.elInput.disabled = idx == 0);\n        this.inputIsotope = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n        this.inputIsotope.css({ 'grid-area': '4 / col3' });\n        this.inputIsotope.elInput.disabled = true;\n        grid.appendHTML('<div style=\"grid-area: 5 / col0;\">Mapping</div>');\n        this.inputMapping = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n        this.inputMapping.css({ 'grid-area': '5 / col1' });\n        grid.appendHTML('<div style=\"grid-area: 5 / col2;\">Index</div>');\n        this.inputIndex = dom('<input type=\"number\" size=\"6\" readonly=\"readonly\"/>').appendTo(grid);\n        this.inputIndex.css({ 'grid-area': '5 / col3' });\n        let divPeriodic = dom('<div/>').appendTo(grid).css({ 'grid-area': '6 / start / 6 / end' });\n        this.periodicWidget = new PeriodicTableWidget();\n        this.periodicWidget.onSelect((element) => this.inputSymbol.setValue(element));\n        this.periodicWidget.onDoubleClick(() => this.applyChanges());\n        this.periodicWidget.render(divPeriodic);\n        const mol = this.mol, atom = this.atom;\n        if (atom > 0) {\n            this.inputSymbol.setValue(mol.atomElement(atom));\n            this.inputCharge.setValue(mol.atomCharge(atom).toString());\n            this.inputUnpaired.setValue(mol.atomUnpaired(atom).toString());\n            let hc = mol.atomHExplicit(atom);\n            if (hc == Molecule.HEXPLICIT_UNKNOWN) {\n                this.optionHydrogen.setSelectedIndex(0);\n                this.inputHydrogen.setValue(mol.atomHydrogens(atom).toString());\n                this.inputHydrogen.elInput.disabled = true;\n            }\n            else if (hc <= 4) {\n                this.optionHydrogen.setSelectedIndex(hc + 1);\n                this.inputHydrogen.setValue(hc.toString());\n                this.inputHydrogen.elInput.disabled = true;\n            }\n            else {\n                this.optionHydrogen.setSelectedIndex(6);\n                this.inputHydrogen.setValue(hc.toString());\n                this.inputHydrogen.elInput.disabled = false;\n            }\n            this.optionIsotope.setSelectedIndex(mol.atomIsotope(atom) == Molecule.ISOTOPE_NATURAL ? 0 : 1);\n            if (mol.atomIsotope(atom) != Molecule.ISOTOPE_NATURAL)\n                this.inputIsotope.setValue(mol.atomIsotope(atom).toString());\n            this.inputIsotope.elInput.disabled = mol.atomIsotope(atom) == Molecule.ISOTOPE_NATURAL;\n            this.inputMapping.setValue(mol.atomMapNum(atom).toString());\n            this.inputIndex.setValue(atom.toString());\n            this.periodicWidget.changeElement(mol.atomElement(atom));\n        }\n    }\n    populateAbbreviation(panel) {\n        let divFlex = dom('<div/>').appendTo(panel).css({ 'display': 'flex', 'align-items': 'flex-start' });\n        divFlex.css({ 'max-width': '60vw', 'max-height': '50vh', 'overflow-y': 'scroll' });\n        let spanSearch = dom('<div/>').appendTo(divFlex).css({ 'margin-right': '0.5em', 'flex': '0 0' });\n        let spanList = dom('<div/>').appendTo(divFlex).css({ 'flex': '1 1 100%' });\n        this.inputAbbrevSearch = dom('<input size=\"10\"/>').appendTo(spanSearch);\n        this.inputAbbrevSearch.setAttr('placeholder', 'Search');\n        let lastSearch = '';\n        this.inputAbbrevSearch.onKeyDown((event) => {\n            if (event.key == \"ArrowUp\")\n                this.cycleAbbreviation(-1);\n            else if (event.key == \"ArrowDown\")\n                this.cycleAbbreviation(1);\n        });\n        this.inputAbbrevSearch.onInput(() => {\n            let search = this.inputAbbrevSearch.getValue();\n            if (search == lastSearch)\n                return;\n            lastSearch = search;\n            this.fillAbbreviations();\n        });\n        let divButtons = dom('<div/>').appendTo(spanSearch).css({ 'margin-top': '0.5em' });\n        let btnClear = dom('<button class=\"wmk-button wmk-button-default\">Clear</button>').appendTo(divButtons);\n        btnClear.onClick(() => {\n            this.selectAbbreviation(-1);\n            if (this.atom > 0 && MolUtil.hasAbbrev(this.mol, this.atom))\n                this.applyChanges();\n        });\n        this.tableAbbrev = dom('<table/>').appendTo(spanList).css({ 'border-collapse': 'collapse', 'width': '100%' });\n        this.fillAbbreviations();\n    }\n    populateGeometry(panel) {\n        const { mol, atom } = this;\n        let divContainer1 = dom('<div/>').appendTo(panel).css({ 'text-align': 'center' });\n        let divContainer2 = dom('<div/>').appendTo(divContainer1).css({ 'display': 'inline-block' });\n        let grid = dom('<div/>').appendTo(divContainer2);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]' });\n        this.geomWidget = new GeomWidget(GeomWidgetType.Atom, mol, atom);\n        this.geomWidget.render(dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col0 / auto / col4', 'text-align': 'center' }));\n        let label1 = dom('<div/>').appendTo(grid).css({ 'grid-area': '2 / col0' });\n        this.inputGeom1 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({ 'grid-area': '2 / col1' });\n        let label2 = dom('<div/>').appendTo(grid).css({ 'grid-area': '2 / col2' });\n        this.inputGeom2 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({ 'grid-area': '2 / col3' });\n        this.geomWidget.callbackSelect = (sel) => {\n            let atoms = this.geomWidget.selectionAtoms(sel);\n            if (sel.type == GeomWidgetSelType.Position) {\n                label1.setText('Position X');\n                label2.setText('Y');\n                this.inputGeom1.setValue(this.refGeom1 = mol.atomX(atoms[0]).toFixed(3));\n                this.inputGeom2.setValue(this.refGeom2 = mol.atomY(atoms[0]).toFixed(3));\n            }\n            else if (sel.type == GeomWidgetSelType.Link) {\n                let dx = mol.atomX(atoms[1]) - mol.atomX(atoms[0]), dy = mol.atomY(atoms[1]) - mol.atomY(atoms[0]);\n                label1.setText('Distance');\n                label2.setText('Angle');\n                this.inputGeom1.setValue(this.refGeom1 = norm_xy(dx, dy).toFixed(3));\n                this.inputGeom2.setValue(this.refGeom2 = (Math.atan2(dy, dx) * RADDEG).toFixed(1));\n            }\n            else if (sel.type == GeomWidgetSelType.Torsion) {\n                let cx = mol.atomX(atoms[0]), cy = mol.atomY(atoms[0]);\n                let th2 = Math.atan2(mol.atomY(atoms[1]) - cy, mol.atomX(atoms[1]) - cx);\n                let th1 = Math.atan2(mol.atomY(atoms[2]) - cy, mol.atomX(atoms[2]) - cx);\n                label1.setText('Angle');\n                label2.setText('');\n                this.inputGeom1.setValue(this.refGeom1 = (angleDiffPos(th2, th1) * RADDEG).toFixed(1));\n                this.inputGeom2.setValue(this.refGeom2 = '');\n            }\n            label2.setCSS('display', sel.type == GeomWidgetSelType.Torsion ? 'none' : 'block');\n            this.inputGeom2.setCSS('display', sel.type == GeomWidgetSelType.Torsion ? 'none' : 'block');\n        };\n        this.geomWidget.callbackSelect(this.geomWidget.selected);\n    }\n    populateQuery(panel) {\n        this.queryWidget = new QueryFieldsWidget(this.mol, this.atom, 0);\n        this.queryWidget.render(panel);\n    }\n    populateExtra(panel) {\n        let fields = [...this.mol.atomExtra(this.atom), ...this.mol.atomTransient(this.atom)];\n        this.fieldsWidget = new ExtraFieldsWidget(fields);\n        this.fieldsWidget.render(panel);\n    }\n    updateMolecule() {\n        let { mol, atom } = this;\n        if (atom == 0)\n            atom = this.atom = mol.addAtom('C', this.newX, this.newY);\n        let sym = this.inputSymbol.getValue();\n        if (sym != '')\n            mol.setAtomElement(atom, sym);\n        let chg = parseInt(this.inputCharge.getValue());\n        if (chg > -20 && chg < 20)\n            mol.setAtomCharge(atom, chg);\n        let unp = parseInt(this.inputUnpaired.getValue());\n        if (unp >= 0 && unp < 20)\n            mol.setAtomUnpaired(atom, unp);\n        let hcidx = this.optionHydrogen.getSelectedIndex();\n        if (hcidx == 0)\n            mol.setAtomHExplicit(atom, Molecule.HEXPLICIT_UNKNOWN);\n        else if (hcidx <= 5)\n            mol.setAtomHExplicit(atom, hcidx - 1);\n        else {\n            let hyd = parseInt(this.inputHydrogen.getValue());\n            if (hyd >= 0 && hyd < 20)\n                mol.setAtomHExplicit(atom, hyd);\n        }\n        if (this.optionIsotope.getSelectedIndex() == 1) {\n            let iso = parseInt(this.inputIsotope.getValue());\n            if (iso >= 0 && iso < 300)\n                mol.setAtomIsotope(atom, iso);\n        }\n        else\n            mol.setAtomIsotope(atom, Molecule.ISOTOPE_NATURAL);\n        let map = parseInt(this.inputMapping.getValue());\n        if (!isNaN(map))\n            mol.setAtomMapNum(atom, map);\n    }\n    updateAbbrev() {\n        const { mol, atom } = this;\n        if (this.currentAbbrev < 0) {\n            let el = mol.atomElement(atom);\n            MolUtil.clearAbbrev(mol, atom);\n            mol.setAtomElement(atom, el);\n        }\n        else {\n            let abbrev = this.abbrevList[this.currentAbbrev];\n            mol.setAtomElement(atom, abbrev.name);\n            MolUtil.setAbbrev(mol, atom, abbrev.frag);\n        }\n    }\n    updateGeometry() {\n        let strval1 = this.inputGeom1.getValue(), strval2 = this.inputGeom2.getValue();\n        if (this.refGeom1 == strval1 && this.refGeom2 == strval2)\n            return;\n        const { mol } = this;\n        let sel = this.geomWidget.selected, atoms = this.geomWidget.selectionAtoms(sel);\n        if (sel.type == GeomWidgetSelType.Position) {\n            let x = parseFloat(strval1), y = parseFloat(strval2);\n            if (isNaN(x) || isNaN(y) || Math.abs(x) > 1E6 || Math.abs(y) > 1E6)\n                return;\n            mol.setAtomPos(atoms[0], x, y);\n        }\n        else if (sel.type == GeomWidgetSelType.Link) {\n            if (this.refGeom1 != strval1) {\n                let dist = parseFloat(strval1);\n                if (isNaN(dist) || Math.abs(dist) > 100)\n                    return;\n                let mask = Vec.booleanArray(false, mol.numAtoms);\n                mask[atoms[1] - 1] = true;\n                let instate = { mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), 'selectedMask': mask };\n                let molact = new MoleculeActivity(instate, ActivityType.BondDist, { dist });\n                molact.execute();\n                if (molact.output.mol)\n                    this.mol = molact.output.mol;\n                return;\n            }\n            else if (this.refGeom2 != strval2) {\n                let angle = parseFloat(strval2);\n                if (isNaN(angle))\n                    return;\n                let mask = Vec.booleanArray(false, mol.numAtoms);\n                mask[atoms[1] - 1] = true;\n                let instate = { mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), selectedMask: mask };\n                let molact = new MoleculeActivity(instate, ActivityType.AlignAngle, { angle: angle * DEGRAD });\n                molact.execute();\n                if (molact.output.mol)\n                    this.mol = molact.output.mol;\n                return;\n            }\n        }\n        else if (sel.type == GeomWidgetSelType.Torsion) {\n            let angle = parseFloat(strval1);\n            if (isNaN(angle))\n                return;\n            let mask = Vec.booleanArray(false, mol.numAtoms);\n            for (let a of atoms)\n                mask[a - 1] = true;\n            let instate = { mol, currentAtom: atoms[2], currentBond: 0, selectedMask: mask };\n            let molact = new MoleculeActivity(instate, ActivityType.AdjustTorsion, { angle: angle * DEGRAD });\n            molact.execute();\n            if (molact.output.mol)\n                this.mol = molact.output.mol;\n            return;\n        }\n    }\n    updateQuery() {\n        this.queryWidget.updateAtom();\n    }\n    updateExtra() {\n        this.mol.setAtomExtra(this.atom, this.fieldsWidget.getExtraFields());\n        this.mol.setAtomTransient(this.atom, this.fieldsWidget.getTransientFields());\n    }\n    fillAbbreviations() {\n        if (AbbrevContainer.needsSetup()) {\n            setTimeout(() => AbbrevContainer.setupData().then(() => this.fillAbbreviations()), 1);\n            return;\n        }\n        this.tableAbbrev.empty();\n        AbbrevContainer.main.submitMolecule(this.mol, true);\n        this.abbrevList = AbbrevContainer.main.getAbbrevs();\n        if (!this.svgAbbrev) {\n            this.svgAbbrev = [];\n            let policy = RenderPolicy.defaultColourOnWhite(10);\n            let measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n            for (let abbrev of this.abbrevList) {\n                let effects = new RenderEffects();\n                let mol = abbrev.frag.clone();\n                effects.atomCircleSz = Vec.numberArray(0, mol.numAtoms);\n                effects.atomCircleCol = Vec.numberArray(0, mol.numAtoms);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    if (mol.atomElement(n) == MolUtil.ABBREV_ATTACHMENT) {\n                        mol.setAtomElement(n, 'C');\n                        effects.atomCircleSz[n - 1] = 0.2;\n                        effects.atomCircleCol[n - 1] = 0x00C000;\n                    }\n                let layout = new ArrangeMolecule(mol, measure, policy, effects);\n                layout.arrange();\n                let gfx = new MetaVector();\n                new DrawMolecule(layout, gfx).draw();\n                gfx.normalise();\n                this.svgAbbrev.push(gfx.createSVG());\n            }\n            const { mol, atom } = this;\n            if (atom > 0 && MolUtil.hasAbbrev(mol, atom)) {\n                let name = mol.atomElement(atom), mf = MolUtil.molecularFormula(MolUtil.getAbbrev(mol, atom));\n                for (let n = 0; n < this.abbrevList.length; n++)\n                    if (name == this.abbrevList[n].name) {\n                        if (mf == MolUtil.molecularFormula(this.abbrevList[n].frag))\n                            this.currentAbbrev = n;\n                        break;\n                    }\n            }\n        }\n        let tr = dom('<tr/>').appendTo(this.tableAbbrev);\n        tr.appendHTML('<td><u>Label</u></td>');\n        tr.appendHTML('<td><u>Structure</u></td>');\n        this.abbrevEntries = [];\n        this.abbrevIndices = [];\n        let search = this.inputAbbrevSearch.getValue().toLowerCase();\n        for (let n = 0; n < this.abbrevList.length; n++) {\n            if (this.currentAbbrev != n && !this.abbrevList[n].nameSearch.includes(search))\n                continue;\n            let entry = {\n                tr: dom('<tr/>').appendTo(this.tableAbbrev),\n                idx: n,\n                bgcol: this.abbrevEntries.length % 2 == 0 ? '#FFFFFF' : '#F8F8F8'\n            };\n            entry.tr.setCSS('background-color', this.currentAbbrev == entry.idx ? colourCode(Theme.lowlight) : entry.bgcol);\n            let tdLabel = dom('<td/>').appendTo(entry.tr), tdStruct = dom('<td/>').appendTo(entry.tr);\n            tdLabel.setHTML(this.abbrevList[n].nameHTML);\n            dom(this.svgAbbrev[n]).appendTo(tdStruct).css({ 'display': 'block', 'pointer-events': 'none' });\n            entry.tr.css({ 'cursor': 'pointer' });\n            entry.tr.onClick(() => this.selectAbbreviation(n));\n            entry.tr.onDblClick((event) => this.applyChanges());\n            this.abbrevEntries.push(entry);\n            this.abbrevIndices.push(n);\n        }\n    }\n    selectAbbreviation(idx) {\n        if (this.currentAbbrev == idx)\n            return;\n        this.currentAbbrev = idx;\n        for (let entry of this.abbrevEntries) {\n            entry.tr.setCSS('background-color', this.currentAbbrev == entry.idx ? colourCode(Theme.lowlight) : entry.bgcol);\n            if (this.currentAbbrev == entry.idx)\n                entry.tr.el.scrollIntoView({ 'block': 'nearest' });\n        }\n    }\n    cycleAbbreviation(dir) {\n        let sz = this.abbrevIndices.length;\n        if (sz == 0)\n            return;\n        let idx = this.abbrevIndices.indexOf(this.currentAbbrev);\n        if (idx < 0) {\n            if (dir < 0)\n                idx = sz - 1;\n            else\n                idx = 0;\n        }\n        else\n            idx = (idx + sz + dir) % sz;\n        this.selectAbbreviation(this.abbrevIndices[idx]);\n    }\n    selectedTab(idx) {\n        if (idx == 0)\n            this.inputSymbol.grabFocus();\n        else if (idx == 1)\n            this.inputAbbrevSearch.grabFocus();\n        else if (idx == 2)\n            this.inputGeom1.grabFocus();\n    }\n}\n//# sourceMappingURL=EditAtom.js.map","import { Dialog } from '../dialog/Dialog';\nimport { ClipboardProxyHandler } from '../ui/ClipboardProxy';\nimport { OptionList } from '../ui/OptionList';\nimport { TabBar } from '../ui/TabBar';\nimport { dom } from '../util/dom';\nimport { norm_xy } from '../util/util';\nimport { ExtraFieldsWidget } from './ExtraFieldsWidget';\nimport { GeomWidget, GeomWidgetSelType, GeomWidgetType } from './GeomWidget';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nimport { QueryFieldsWidget } from './QueryFieldsWidget';\nexport class EditBond extends Dialog {\n    constructor(mol, bond, proxyClip, callbackApply) {\n        super();\n        this.bond = bond;\n        this.proxyClip = proxyClip;\n        this.callbackApply = callbackApply;\n        this.initMol = mol;\n        this.mol = mol.clone();\n        this.title = 'Edit Bond';\n        this.minPortionWidth = 20;\n        this.maxPortionWidth = 95;\n    }\n    populate() {\n        this.proxyClip.pushHandler(new ClipboardProxyHandler());\n        let buttons = this.buttonsDOM(), body = this.bodyDOM();\n        this.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnApply.onClick(() => this.applyChanges());\n        this.tabs = new TabBar(['Bond', 'Geometry', 'Query', 'Extra']);\n        this.tabs.render(body);\n        this.tabs.onSelect((idx) => this.selectedTab(idx));\n        this.populateBond(this.tabs.getPanelDOM('Bond'));\n        this.populateGeometry(this.tabs.getPanelDOM('Geometry'));\n        this.populateQuery(this.tabs.getPanelDOM('Query'));\n        this.populateExtra(this.tabs.getPanelDOM('Extra'));\n        let focusable = body.findAll('input,textarea');\n        if (focusable.length > 0)\n            focusable[0].grabFocus(true);\n        for (let dom of focusable) {\n            dom.css({ 'font': 'inherit' });\n            dom.onKeyDown((event) => {\n                if (event.key == \"Enter\")\n                    this.applyChanges();\n                else if (event.key == \"Escape\")\n                    this.close();\n                else if (event.key == \"PageUp\") {\n                    this.tabs.rotateSelected(-1);\n                    this.selectedTab(this.tabs.getSelectedIndex());\n                    event.preventDefault();\n                }\n                else if (event.key == \"PageDown\") {\n                    this.tabs.rotateSelected(1);\n                    this.selectedTab(this.tabs.getSelectedIndex());\n                    event.preventDefault();\n                }\n                event.stopPropagation();\n            });\n        }\n    }\n    close() {\n        this.proxyClip.popHandler();\n        super.close();\n    }\n    applyChanges() {\n        this.mol.keepTransient = true;\n        this.updateMolecule();\n        if (this.tabs.getSelectedValue() == 'Geometry')\n            this.updateGeometry();\n        if (this.tabs.getSelectedValue() == 'Query')\n            this.updateQuery();\n        if (this.tabs.getSelectedValue() == 'Extra')\n            this.updateExtra();\n        this.mol.keepTransient = false;\n        if (this.callbackApply)\n            this.callbackApply(this);\n    }\n    populateBond(panel) {\n        const { mol, bond } = this;\n        let grid = dom('<div/>').appendTo(panel);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]' });\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col0' }).setText('Order');\n        let ordersHTML = [];\n        for (let o = 0; o <= 4; o++)\n            ordersHTML.push(`&nbsp;&nbsp;${o}&nbsp;&nbsp;`);\n        this.optionOrder = new OptionList(ordersHTML);\n        this.optionOrder.htmlLabels = true;\n        this.optionOrder.setSelectedIndex(mol.bondOrder(bond));\n        this.optionOrder.render(dom('<div/>').appendTo(grid).css({ 'grid-column': 'col1 / col4', 'grid-row': '1' }));\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '2 / col0' }).setText('Stereo');\n        this.optionStereo = new OptionList(['None', 'Up', 'Down', 'Unknown']);\n        this.optionStereo.setSelectedIndex(mol.bondType(bond));\n        this.optionStereo.render(dom('<div/>').appendTo(grid).css({ 'grid-column': 'col1 / col4', 'grid-row': '2' }));\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '3 / col0' }).setText('From');\n        this.inputFrom = dom('<input size=\"6\"/>').appendTo(grid).css({ 'grid-area': '3 / col1', 'font': 'inherit' });\n        this.inputFrom.elInput.readOnly = true;\n        this.inputFrom.setValue(mol.bondFrom(bond).toString());\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '3 / col2' }).setText('To');\n        this.inputTo = dom('<input size=\"6\"/>').appendTo(grid).css({ 'grid-area': '3 / col3', 'font': 'inherit' });\n        this.inputTo.elInput.readOnly = true;\n        this.inputTo.setValue(mol.bondTo(bond).toString());\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '4 / col2' }).setText('Index');\n        this.inputIndex = dom('<input size=\"6\"/>').appendTo(grid).css({ 'grid-area': '4 / col3', 'font': 'inherit' });\n        this.inputIndex.elInput.readOnly = true;\n        this.inputIndex.setValue(bond.toString());\n    }\n    populateGeometry(panel) {\n        const { mol, bond } = this;\n        let divContainer1 = dom('<div/>').appendTo(panel).css({ 'text-align': 'center' });\n        let divContainer2 = dom('<div/>').appendTo(divContainer1).css({ 'display': 'inline-block' });\n        let grid = dom('<div/>').appendTo(divContainer2);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2]' });\n        this.geomWidget = new GeomWidget(GeomWidgetType.Bond, mol, bond);\n        this.geomWidget.render(dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col0 / auto / col2', 'text-align': 'center' }));\n        let label1 = dom('<div/>').appendTo(grid).css({ 'grid-area': '2 / col0' });\n        this.inputGeom1 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({ 'grid-area': '2 / col1' });\n        this.geomWidget.callbackSelect = (sel) => {\n            if (sel.type == GeomWidgetSelType.Link) {\n                let a1 = mol.bondFrom(bond), a2 = mol.bondTo(bond);\n                let dx = mol.atomX(a2) - mol.atomX(a1), dy = mol.atomY(a2) - mol.atomY(a1);\n                label1.setText('Distance');\n                this.inputGeom1.setValue(this.refGeom1 = norm_xy(dx, dy).toFixed(3));\n            }\n        };\n        this.geomWidget.callbackSelect(this.geomWidget.selected);\n    }\n    populateQuery(panel) {\n        this.queryWidget = new QueryFieldsWidget(this.mol, 0, this.bond);\n        this.queryWidget.render(panel);\n    }\n    populateExtra(panel) {\n        let fields = [...this.mol.bondExtra(this.bond), ...this.mol.bondTransient(this.bond)];\n        this.fieldsWidget = new ExtraFieldsWidget(fields);\n        this.fieldsWidget.render(panel);\n    }\n    updateMolecule() {\n        let { mol, bond } = this;\n        mol.setBondOrder(bond, this.optionOrder.getSelectedIndex());\n        mol.setBondType(bond, this.optionStereo.getSelectedIndex());\n    }\n    updateGeometry() {\n        let strval1 = this.inputGeom1.getValue();\n        if (this.refGeom1 == strval1)\n            return;\n        const { mol } = this;\n        let sel = this.geomWidget.selected, atoms = this.geomWidget.selectionAtoms(sel);\n        if (sel.type == GeomWidgetSelType.Link) {\n            if (this.refGeom1 != strval1) {\n                let dist = parseFloat(strval1);\n                if (isNaN(dist) || Math.abs(dist) > 100)\n                    return;\n                let instate = { mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), selectedMask: null };\n                let molact = new MoleculeActivity(instate, ActivityType.BondDist, { dist });\n                molact.execute();\n                this.mol = molact.output.mol;\n                return;\n            }\n        }\n    }\n    updateQuery() {\n        this.queryWidget.updateBond();\n    }\n    updateExtra() {\n        this.mol.setBondExtra(this.bond, this.fieldsWidget.getExtraFields());\n        this.mol.setBondTransient(this.bond, this.fieldsWidget.getTransientFields());\n    }\n    selectedTab(idx) {\n        if (idx == 0)\n            this.inputFrom.grabFocus();\n        else if (idx == 1)\n            this.inputGeom1.grabFocus();\n    }\n}\n//# sourceMappingURL=EditBond.js.map","import { MolUtil } from '../data/MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity, PolymerBlockUnit } from '../data/PolymerBlock';\nimport { Dialog } from '../dialog/Dialog';\nimport { OutlineMeasurement } from '../gfx/ArrangeMeasurement';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { ClipboardProxyHandler } from '../ui/ClipboardProxy';\nimport { OptionList } from '../ui/OptionList';\nimport { dom } from '../util/dom';\nimport { Vec } from '../util/Vec';\nconst CHAR_LOW_A = 'a'.charCodeAt(0), CHAR_UP_A = 'A'.charCodeAt(0);\nfunction indexToAtomLabel(idx) { return String.fromCharCode(CHAR_UP_A + Math.min(26, Math.max(0, idx)) - 1); }\nfunction indexToBondLabel(idx) { return String.fromCharCode(CHAR_LOW_A + Math.min(26, Math.max(0, idx)) - 1); }\nexport class EditPolymer extends Dialog {\n    constructor(mol, atoms, proxyClip, callbackApply) {\n        super();\n        this.atoms = atoms;\n        this.proxyClip = proxyClip;\n        this.callbackApply = callbackApply;\n        this.optionConnect = null;\n        this.optionBondConn = null;\n        this.currentID = 0;\n        this.unit = null;\n        this.borderAtoms = [];\n        this.outBonds = [];\n        this.outAtoms = [];\n        this.initMol = mol;\n        this.mol = mol.clone();\n        this.title = 'Polymer Block';\n        this.minPortionWidth = 20;\n        this.maxPortionWidth = 95;\n        this.polymer = new PolymerBlock(this.mol);\n        atoms = Vec.sorted(atoms);\n        for (let id of this.polymer.getIDList()) {\n            let look = this.polymer.getUnit(id);\n            if (Vec.equals(atoms, look.atoms)) {\n                this.currentID = id;\n                this.unit = look;\n                break;\n            }\n        }\n        if (!this.unit)\n            this.unit = new PolymerBlockUnit(atoms);\n        let umol = this.umol = this.mol.clone();\n        let mask = Vec.booleanArray(false, this.umol.numAtoms);\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let bfr = this.mol.bondFrom(n), bto = this.mol.bondTo(n);\n            let in1 = this.atoms.includes(bfr), in2 = this.atoms.includes(bto);\n            if (in1 || in2)\n                mask[bfr - 1] = mask[bto - 1] = true;\n            if (in1 && !in2) {\n                this.borderAtoms.push(bfr);\n                this.outBonds.push(n);\n                this.outAtoms.push(bto);\n            }\n            if (in2 && !in1) {\n                this.borderAtoms.push(bto);\n                this.outBonds.push(n);\n                this.outAtoms.push(bfr);\n            }\n        }\n        this.borderAtoms = Vec.sortedUnique(this.borderAtoms);\n        this.umap = Vec.maskMap(mask);\n        this.umol = MolUtil.subgraphMask(this.umol, mask);\n        new PolymerBlock(this.umol).removeAll();\n    }\n    populate() {\n        this.proxyClip.pushHandler(new ClipboardProxyHandler());\n        let buttons = this.buttonsDOM(), body = this.bodyDOM();\n        this.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        if (this.currentID == 0)\n            this.btnApply.setText('Create');\n        this.btnApply.onClick(() => this.applyChanges());\n        if (this.currentID > 0) {\n            this.btnRemove = dom('<button class=\"wmk-button wmk-button-default\">Remove</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n            this.btnRemove.onClick(() => this.applyRemove());\n        }\n        let grid = dom('<div/>').appendTo(body);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4] auto [end]' });\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col0' }).setText('# Atoms');\n        let inputNAtoms = dom('<input size=\"5\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col1' }));\n        inputNAtoms.elInput.readOnly = true;\n        inputNAtoms.setValue(this.unit.atoms.length.toString());\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col2' }).setText('Out-bonds');\n        let inputNBond = dom('<input size=\"5\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col3' }));\n        inputNBond.elInput.readOnly = true;\n        inputNBond.setValue(this.outBonds.length.toString());\n        let row = 1;\n        if (this.outBonds.length == 2) {\n            row++;\n            dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0` }).setText('Connectivity');\n            this.optionConnect = new OptionList(['Unknown', 'Head-to-Tail', 'Head-to-Head', 'Random']);\n            this.optionConnect.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col1 / auto / col4` }));\n            if (this.unit.connect == PolymerBlockConnectivity.HeadToTail)\n                this.optionConnect.setSelectedIndex(1);\n            else if (this.unit.connect == PolymerBlockConnectivity.HeadToHead)\n                this.optionConnect.setSelectedIndex(2);\n            else if (this.unit.connect == PolymerBlockConnectivity.Random)\n                this.optionConnect.setSelectedIndex(3);\n        }\n        if (this.outBonds.length == 4 && Vec.uniqueUnstable(this.outAtoms).length == 4) {\n            row++;\n            dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0` }).setText('2x2 Connectivity');\n            this.populate2x2Conn(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col1 / auto / end` }));\n        }\n        let getList = (str) => {\n            if (!str)\n                return null;\n            let list = [];\n            for (let bit of str.split(',')) {\n                let v = parseInt(bit);\n                if (v > 0)\n                    list.push(v);\n                else\n                    return undefined;\n            }\n            return list;\n        };\n        for (let n = 0; n < this.borderAtoms.length; n++) {\n            row++;\n            let domLabel = dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0`, 'text-align': 'right', 'padding-right': '0.5em' });\n            if (n == 0)\n                domLabel.setText('Name ');\n            dom('<span/>').appendTo(domLabel).css({ 'color': '#008000' }).setText(indexToAtomLabel(n + 1));\n            let input = dom('<input size=\"20\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col1 / auto / end`, 'width': '100%' }));\n            let atom = this.borderAtoms[n];\n            let nvals = this.unit.atomName.get(atom);\n            if (nvals)\n                input.setValue(nvals.join(','));\n            input.onInput(() => {\n                let list = getList(input.getValue());\n                if (list !== undefined)\n                    this.unit.atomName.set(atom, list);\n            });\n        }\n        for (let n = 0; n < this.outAtoms.length; n++) {\n            row++;\n            let domLabel = dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0`, 'text-align': 'right', 'padding-right': '0.5em' });\n            if (n == 0)\n                domLabel.setText('Link ');\n            dom('<span/>').appendTo(domLabel).css({ 'color': '#800080' }).setText(indexToBondLabel(n + 1));\n            dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col1` }).setText('Include');\n            let inputIncl = dom('<input size=\"10\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col2`, 'width': '100%' }));\n            dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col3` }).setText('Exclude');\n            let inputExcl = dom('<input size=\"10\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col4`, 'width': '100%' }));\n            let bond = this.outBonds[n];\n            let ivals = this.unit.bondIncl.get(bond), evals = this.unit.bondExcl.get(bond);\n            if (ivals)\n                inputIncl.setValue(ivals.join(','));\n            if (evals)\n                inputExcl.setValue(evals.join(','));\n            inputIncl.onInput(() => {\n                let list = getList(inputIncl.getValue());\n                if (list !== undefined)\n                    this.unit.bondIncl.set(bond, list);\n            });\n            inputExcl.onInput(() => {\n                let list = getList(inputExcl.getValue());\n                if (list !== undefined)\n                    this.unit.bondExcl.set(bond, list);\n            });\n        }\n        row++;\n        this.populateUncap(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0 / auto / col4`, 'text-align': 'center' }));\n        row++;\n        this.divPreview = dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0 / auto / col4`, 'text-align': 'center' });\n        this.renderUnit();\n        let focusable = body.findAll('input,textarea');\n        if (focusable.length > 0)\n            focusable[0].grabFocus(true);\n        for (let dom of focusable) {\n            dom.css({ 'font': 'inherit' });\n            dom.onKeyDown((event) => {\n                let keyCode = event.keyCode || event.which;\n                if (keyCode == 13)\n                    this.applyChanges();\n                if (keyCode == 27)\n                    this.close();\n            });\n        }\n    }\n    close() {\n        this.proxyClip.popHandler();\n        super.close();\n    }\n    populate2x2Conn(div) {\n        const perms = [[0, 1, 2, 3], [0, 1, 3, 2], [0, 2, 1, 3], [0, 2, 3, 1], [0, 3, 1, 2], [0, 3, 2, 1]];\n        let bondConnOptions = [null];\n        let optionList = ['None'];\n        let selidx = 0;\n        for (let perm of perms) {\n            let bonds = Vec.idxGet(this.outBonds, perm);\n            if (Vec.equals(bonds, this.unit.bondConn))\n                selidx = optionList.length;\n            bondConnOptions.push(bonds);\n            optionList.push(`${perm[0] + 1},${perm[1] + 1}:${perm[2] + 1},${perm[3] + 1}`);\n        }\n        this.optionBondConn = new OptionList(optionList);\n        this.optionBondConn.setSelectedIndex(selidx);\n        this.optionBondConn.render(div);\n        this.optionBondConn.onSelect((idx) => {\n            this.unit.bondConn = bondConnOptions[idx];\n            this.renderUnit();\n        });\n    }\n    populateUncap(div) {\n        let uncapAtoms = [];\n        skip: for (let a of this.outAtoms)\n            if (this.mol.atomAdjCount(a) == 1 && this.mol.atomElement(a) != '*') {\n                for (let unit of this.polymer.getUnits())\n                    if (unit.atoms.includes(a))\n                        continue skip;\n                uncapAtoms.push(a);\n            }\n        if (uncapAtoms.length == 0)\n            return;\n        let btnUncap = dom('<button class=\"wmk-button wmk-button-default\">Uncap Exterior</button>').appendTo(div);\n        btnUncap.onClick(() => {\n            btnUncap.elInput.disabled = true;\n            for (let a of uncapAtoms)\n                this.mol.setAtomElement(a, '*');\n        });\n    }\n    applyChanges() {\n        if (this.optionConnect) {\n            let sel = this.optionConnect.getSelectedIndex();\n            if (sel == 0)\n                this.unit.connect = null;\n            else if (sel == 1)\n                this.unit.connect = PolymerBlockConnectivity.HeadToTail;\n            else if (sel == 2)\n                this.unit.connect = PolymerBlockConnectivity.HeadToHead;\n            else if (sel == 3)\n                this.unit.connect = PolymerBlockConnectivity.Random;\n        }\n        if (this.currentID)\n            this.polymer.removeUnit(this.currentID);\n        this.currentID = this.polymer.createUnit(this.unit.clone());\n        this.polymer.rewriteMolecule();\n        this.callbackApply(this);\n    }\n    applyRemove() {\n        if (this.currentID)\n            this.polymer.removeUnit(this.currentID);\n        this.callbackApply(this);\n    }\n    renderUnit() {\n        let umol = this.umol.clone();\n        let policy = RenderPolicy.defaultColourOnWhite(20);\n        let measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n        let effects = new RenderEffects();\n        effects.atomCircleSz = Vec.numberArray(0, umol.numAtoms);\n        effects.atomCircleCol = Vec.numberArray(0, umol.numAtoms);\n        effects.atomDecoText = Vec.stringArray(null, umol.numAtoms);\n        effects.atomDecoCol = Vec.numberArray(null, umol.numAtoms);\n        effects.atomDecoSize = Vec.numberArray(null, umol.numAtoms);\n        let borderAtoms = this.borderAtoms.map((atom) => this.umap[atom - 1] + 1);\n        let outAtoms = this.outAtoms.map((atom) => this.umap[atom - 1] + 1);\n        for (let n = 1; n <= umol.numAtoms; n++) {\n            let bidx = borderAtoms.indexOf(n), oidx = outAtoms.indexOf(n);\n            if (bidx >= 0) {\n                effects.atomDecoText[n - 1] = indexToAtomLabel(bidx + 1);\n                effects.atomDecoCol[n - 1] = 0x008000;\n                effects.atomDecoSize[n - 1] = 0.5;\n            }\n            if (oidx >= 0) {\n                umol.setAtomCharge(n, 0);\n                umol.setAtomUnpaired(n, 0);\n                umol.setAtomIsotope(n, 0);\n                effects.atomCircleSz[n - 1] = 0.1;\n                effects.atomCircleCol[n - 1] = 0xFF00FF;\n                effects.atomDecoText[n - 1] = indexToBondLabel(oidx + 1);\n                effects.atomDecoCol[n - 1] = 0x800080;\n                effects.atomDecoSize[n - 1] = 0.5;\n                umol.setAtomElement(n, 'C');\n            }\n        }\n        let layout = new ArrangeMolecule(umol, measure, policy, effects);\n        layout.arrange();\n        layout.squeezeInto(0, 0, 300, 300);\n        let gfx = new MetaVector();\n        if (this.unit.bondConn) {\n            const LINES = [\n                [0, 1, 0xC86D08, 2, false], [2, 3, 0xC86D08, 2, false],\n                [0, 2, 0xC0C86D08, 1, true], [1, 3, 0xC0C86D08, 1, true]\n            ];\n            for (let [i1, i2, col, sz, circle] of LINES) {\n                let a1 = this.outAtoms[this.outBonds.indexOf(this.unit.bondConn[i1])];\n                let a2 = this.outAtoms[this.outBonds.indexOf(this.unit.bondConn[i2])];\n                let p1 = layout.getPoint(a1 - 1), p2 = layout.getPoint(a2 - 1);\n                gfx.drawLine(p1.oval.cx, p1.oval.cy, p2.oval.cx, p2.oval.cy, col, sz);\n                if (circle) {\n                    for (let f of [0.2, 0.4, 0.6, 0.8]) {\n                        let mx = p1.oval.cx + f * (p2.oval.cx - p1.oval.cx), my = p1.oval.cy + f * (p2.oval.cy - p1.oval.cy);\n                        gfx.drawOval(mx, my, 2, 2, col, sz, null);\n                    }\n                }\n            }\n        }\n        new DrawMolecule(layout, gfx).draw();\n        gfx.normalise();\n        this.divPreview.empty();\n        dom(gfx.createSVG()).appendTo(this.divPreview).css({ 'pointer-events': 'none' });\n    }\n}\n//# sourceMappingURL=EditPolymer.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { TEMPLATE_FILES } from '../data/AbbrevContainer';\nimport { DataSheetStream } from '../data/DataSheetStream';\nimport { MolUtil } from '../data/MolUtil';\nimport { OutlineMeasurement } from '../gfx/ArrangeMeasurement';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { ButtonBank } from '../ui/ButtonBank';\nimport { Theme } from '../util/Theme';\nimport { readTextURL } from '../util/util';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nclass TemplateBank extends ButtonBank {\n    constructor(owner, group) {\n        super();\n        this.owner = owner;\n        this.group = group;\n        this.subgroups = null;\n        this.templates = null;\n    }\n    init() {\n        let policy = RenderPolicy.defaultBlackOnWhite();\n        policy.data.pointScale = 10;\n        policy.data.lineSize *= 1.5;\n        policy.data.bondSep *= 1.5;\n        (() => __awaiter(this, void 0, void 0, function* () {\n            if (TemplateBank.resourceData.length == 0)\n                yield this.loadResourceData();\n            if (this.group == null)\n                this.prepareSubGroups();\n            else\n                this.prepareTemplates();\n        }))();\n    }\n    update() {\n        if (this.subgroups == null && this.templates == null)\n            return;\n        this.buttons = [];\n        if (this.group == null)\n            this.populateGroups();\n        else\n            this.populateTemplates();\n    }\n    populateGroups() {\n        let groups = this.subgroups.groups, titles = this.subgroups.titles, preview = this.subgroups.preview;\n        for (let n = 0; n < groups.length; n++) {\n            this.buttons.push({ id: groups[n], metavec: preview[n], helpText: titles[n] });\n        }\n    }\n    populateTemplates() {\n        let names = this.templates.names, abbrev = this.templates.abbrev, mnemonic = this.templates.mnemonic, preview = this.templates.preview;\n        for (let n = 0; n < names.length; n++) {\n            this.buttons.push({ id: n.toString(), metavec: preview[n], helpText: names[n] });\n        }\n    }\n    hitButton(id) {\n        if (this.group == null) {\n            this.buttonView.pushBank(new TemplateBank(this.owner, id));\n        }\n        else {\n            let idx = parseInt(id);\n            let param = { fragNative: this.templates.molecules[idx] };\n            new MoleculeActivity(this.owner.getState(), ActivityType.TemplateFusion, param, this.owner).execute();\n        }\n    }\n    loadResourceData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let fn of TEMPLATE_FILES) {\n                let url = Theme.RESOURCE_URL + '/data/templates/' + fn + '.ds';\n                let dsstr = yield readTextURL(url);\n                TemplateBank.resourceList.push(fn);\n                TemplateBank.resourceData.push(DataSheetStream.readXML(dsstr));\n            }\n        });\n    }\n    prepareSubGroups() {\n        this.subgroups = { groups: TemplateBank.resourceList, titles: [], preview: [] };\n        let sz = this.buttonView.idealSize, msz = 0.5 * (sz - 2);\n        let policy = RenderPolicy.defaultBlackOnWhite();\n        policy.data.pointScale = 10;\n        let effects = new RenderEffects();\n        let measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n        for (let ds of TemplateBank.resourceData) {\n            this.subgroups.titles.push(ds.title);\n            let colMol = ds.firstColOfType(\"molecule\");\n            let metavec = new MetaVector();\n            for (let n = 0, idx = 0; idx < 4 && n < ds.numRows; n++) {\n                let mol = ds.getMolecule(n, colMol);\n                if (MolUtil.isBlank(mol))\n                    continue;\n                let layout = new ArrangeMolecule(mol, measure, policy, effects);\n                layout.arrange();\n                let col = (idx % 2), row = Math.floor(idx / 2);\n                layout.squeezeInto(1 + col * msz, 1 + row * msz, msz, msz, 1);\n                new DrawMolecule(layout, metavec).draw();\n                idx++;\n            }\n            metavec.width = sz;\n            metavec.height = sz;\n            this.subgroups.preview.push(metavec);\n        }\n        this.buttonView.refreshBank();\n    }\n    prepareTemplates() {\n        let idx = TemplateBank.resourceList.indexOf(this.group);\n        let ds = TemplateBank.resourceData[idx];\n        this.templates = { molecules: [], names: [], abbrev: [], mnemonic: [], preview: [] };\n        let sz = this.buttonView.idealSize;\n        let policy = RenderPolicy.defaultBlackOnWhite();\n        policy.data.pointScale = 12;\n        let effects = new RenderEffects();\n        let measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n        let colMol = ds.findColByName('Molecule');\n        let colName = ds.findColByName('Name');\n        let colAbbrev = ds.findColByName('Abbrev');\n        let colMnemonic = ds.findColByName('Mnemonic');\n        for (let n = 0; n < ds.numRows; n++) {\n            let mol = ds.getMolecule(n, colMol);\n            this.templates.molecules.push(mol.toString());\n            this.templates.names.push(ds.getString(n, colName));\n            this.templates.abbrev.push(ds.getString(n, colAbbrev));\n            this.templates.mnemonic.push(ds.getString(n, colMnemonic));\n            let layout = new ArrangeMolecule(mol, measure, policy, effects);\n            layout.arrange();\n            layout.squeezeInto(0, 0, sz, sz, 2);\n            let metavec = new MetaVector();\n            new DrawMolecule(layout, metavec).draw();\n            metavec.width = sz;\n            metavec.height = sz;\n            this.templates.preview.push(metavec);\n        }\n        this.buttonView.refreshBank();\n    }\n}\nTemplateBank.resourceList = [];\nTemplateBank.resourceData = [];\nexport { TemplateBank };\nexport class FusionBank extends ButtonBank {\n    constructor(owner) {\n        super();\n        this.owner = owner;\n    }\n    update() {\n        this.buttons = [];\n        this.buttons.push({ id: 'accept', imageFN: 'GenericAccept', helpText: 'Apply this template.' });\n        this.buttons.push({ id: 'prev', imageFN: 'TemplatePrev', helpText: 'Show previous fusion option.' });\n        this.buttons.push({ id: 'next', imageFN: 'TemplateNext', helpText: 'Show next fusion option.' });\n    }\n    hitButton(id) {\n        if (id == 'accept')\n            this.owner.templateAccept();\n        else if (id == 'prev')\n            this.owner.templateRotate(-1);\n        else if (id == 'next')\n            this.owner.templateRotate(1);\n    }\n    bankClosed() {\n        this.owner.clearPermutations();\n    }\n}\n//# sourceMappingURL=TemplateBank.js.map","import { ButtonBank } from '../ui/ButtonBank';\nexport var ToolBankItem;\n(function (ToolBankItem) {\n    ToolBankItem[\"Arrow\"] = \"arrow\";\n    ToolBankItem[\"Rotate\"] = \"rotate\";\n    ToolBankItem[\"Pan\"] = \"pan\";\n    ToolBankItem[\"Drag\"] = \"drag\";\n    ToolBankItem[\"Erasor\"] = \"erasor\";\n    ToolBankItem[\"BondOrder0\"] = \"bond:Order0\";\n    ToolBankItem[\"BondOrder1\"] = \"bond:Order1\";\n    ToolBankItem[\"BondOrder2\"] = \"bond:Order2\";\n    ToolBankItem[\"BondOrder3\"] = \"bond:Order3\";\n    ToolBankItem[\"BondUnknown\"] = \"bond:Unknown\";\n    ToolBankItem[\"BondInclined\"] = \"bond:Inclined\";\n    ToolBankItem[\"BondDeclined\"] = \"bond:Declined\";\n    ToolBankItem[\"RingAliph\"] = \"ringAliph\";\n    ToolBankItem[\"RingArom\"] = \"ringArom\";\n    ToolBankItem[\"AtomPlus\"] = \"atomPlus\";\n    ToolBankItem[\"AtomMinus\"] = \"atomMinus\";\n    ToolBankItem[\"BondPfx\"] = \"bond:\";\n    ToolBankItem[\"ElementPfx\"] = \"element:\";\n})(ToolBankItem || (ToolBankItem = {}));\nconst TOOLS_MAIN = [\n    { id: ToolBankItem.Arrow, imageFN: 'ToolSelect', helpText: 'Selection tool.', mnemonic: 'Escape' },\n    { id: ToolBankItem.Rotate, imageFN: 'ToolRotate', helpText: 'Rotate subject atoms.', mnemonic: '' },\n    { id: ToolBankItem.Pan, imageFN: 'ToolPan', helpText: 'Pan the viewport around the screen.', mnemonic: '' },\n    { id: ToolBankItem.Drag, imageFN: 'ToolDrag', helpText: 'Drag selected atoms to new positions.', mnemonic: '' },\n    { id: ToolBankItem.Erasor, imageFN: 'ToolErasor', helpText: 'Delete atoms or bonds by selecting.', mnemonic: 'Delete' },\n    { id: ToolBankItem.BondOrder0, imageFN: 'BondZero', helpText: 'Create or change a bond to zero order.', mnemonic: 'Shift+0', 'key': ')' },\n    { id: ToolBankItem.BondOrder1, imageFN: 'BondOne', helpText: 'Create or change a bond to single.', mnemonic: 'Shift+1', 'key': '!' },\n    { id: ToolBankItem.BondOrder2, imageFN: 'BondTwo', helpText: 'Create or change a bond to double.', mnemonic: 'Shift+2', 'key': '@' },\n    { id: ToolBankItem.BondOrder3, imageFN: 'BondThree', helpText: 'Create or change a bond to triple.', mnemonic: 'Shift+3', 'key': '#' },\n    { id: ToolBankItem.BondUnknown, imageFN: 'BondSquig', helpText: 'Create or change a bond to unknown stereochemistry.', mnemonic: 'Shift+4', 'key': '$' },\n    { id: ToolBankItem.BondInclined, imageFN: 'BondUp', helpText: 'Create or change a bond to up-wedge.', mnemonic: 'Shift+5', 'key': '%' },\n    { id: ToolBankItem.BondDeclined, imageFN: 'BondDown', helpText: 'Create or change a bond to down-wedge.', mnemonic: 'Shift+6', 'key': '^' },\n    { id: ToolBankItem.RingAliph, imageFN: 'ToolRing', helpText: 'Create plain ring.', mnemonic: 'Shift+7', 'key': '&' },\n    { id: ToolBankItem.RingArom, imageFN: 'ToolArom', helpText: 'Create aromatic ring.', mnemonic: 'Shift+8', 'key': '*' },\n    { id: ToolBankItem.AtomPlus, imageFN: 'AtomPlus', helpText: 'Increase charge on atom.', mnemonic: '' },\n    { id: ToolBankItem.AtomMinus, imageFN: 'AtomMinus', helpText: 'Decrease charge on atom.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'C', 'text': 'C', helpText: 'Change elements to Carbon.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'N', 'text': 'N', helpText: 'Change elements to Nitrogen.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'O', 'text': 'O', helpText: 'Change elements to Oxygen.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'S', 'text': 'S', helpText: 'Change elements to Sulfur.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'P', 'text': 'P', helpText: 'Change elements to Phosphorus.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'H', 'text': 'H', helpText: 'Change elements to Hydrogen.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'F', 'text': 'F', helpText: 'Change elements to Fluorine.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'Cl', 'text': 'Cl', helpText: 'Change elements to Chlorine.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'Br', 'text': 'Br', helpText: 'Change elements to Bromine.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'A', 'text': 'A', helpText: 'Pick other element.', mnemonic: '' }\n];\nexport class ToolBank extends ButtonBank {\n    constructor(owner) {\n        super();\n        this.owner = owner;\n    }\n    update() {\n        for (let btn of TOOLS_MAIN)\n            this.buttons.push(btn);\n        this.buttonView.setSelectedButton('arrow');\n    }\n    hitButton(id) {\n        this.buttonView.setSelectedButton(id);\n    }\n    claimKey(event) {\n        for (let item of TOOLS_MAIN) {\n            if (ButtonBank.matchKey(event, item.mnemonic, item.key)) {\n                this.hitButton(item.id);\n                return true;\n            }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=ToolBank.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CoordUtil } from '../data/CoordUtil';\nimport { DataSheetStream } from '../data/DataSheetStream';\nimport { Molecule } from '../data/Molecule';\nimport { MoleculeStream } from '../data/MoleculeStream';\nimport { MolUtil } from '../data/MolUtil';\nimport { PolymerBlock } from '../data/PolymerBlock';\nimport { SketchUtil } from '../data/SketchUtil';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { ButtonView, ButtonViewPosition } from '../ui/ButtonView';\nimport { angleDiff, clone, DEGRAD, eventCoords, norm2_xy, norm_xy, RADDEG, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { CommandBank } from './CommandBank';\nimport { ContextSketch } from './ContextSketch';\nimport { DraggingTool, DrawCanvas } from './DrawCanvas';\nimport { EditAtom } from './EditAtom';\nimport { EditBond } from './EditBond';\nimport { EditPolymer } from './EditPolymer';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nimport { FusionBank, TemplateBank } from './TemplateBank';\nimport { ToolBank, ToolBankItem } from './ToolBank';\nclass Sketcher extends DrawCanvas {\n    constructor() {\n        super();\n        this.callbackSpecialPaste = null;\n        this.inDialog = false;\n        this.initialFocus = true;\n        this.useToolBank = true;\n        this.lowerToolBank = false;\n        this.useCommandBank = true;\n        this.lowerCommandBank = false;\n        this.useTemplateBank = true;\n        this.lowerTemplateBank = false;\n        this.debugOutput = undefined;\n        this.beenSetup = false;\n        this.undoStack = [];\n        this.redoStack = [];\n        this.fadeWatermark = 0;\n        this.toolView = null;\n        this.commandView = null;\n        this.templateView = null;\n        this.proxyClip = null;\n        this.proxyMenu = null;\n    }\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    defineMolecule(mol, withAutoScale = true, withStashUndo = false, keepSelect = false) {\n        if (mol.compareTo(this.mol) == 0)\n            return;\n        if (withStashUndo)\n            this.stashUndo();\n        this.stopTemplateFusion();\n        this.mol = mol.clone();\n        if (this.callbackChangeMolecule)\n            this.callbackChangeMolecule(this.mol);\n        this.guidelines = [];\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            for (let sprout of SketchUtil.guidelineSprouts(this.mol, n))\n                this.guidelines.push(sprout);\n        }\n        if (!this.beenSetup)\n            return;\n        if (!keepSelect) {\n            this.currentAtom = this.currentBond = 0;\n            this.selectedMask = null;\n        }\n        this.stereo = null;\n        this.hoverAtom = 0;\n        this.hoverBond = 0;\n        if (!withAutoScale)\n            this.renderMolecule();\n        else\n            this.autoScale();\n    }\n    defineClipboard(proxy) {\n        this.proxyClip = proxy;\n    }\n    defineContext(proxy) {\n        this.proxyMenu = proxy;\n    }\n    defineMoleculeString(molsk, withAutoScale, withStashUndo) {\n        this.defineMolecule(Molecule.fromString(molsk), withAutoScale, withStashUndo);\n    }\n    defineRenderPolicy(policy) {\n        this.policy = policy;\n        this.pointScale = policy.data.pointScale;\n    }\n    defineBackground(borderCol, borderRad, bgCol) {\n        if (borderCol != null)\n            this.border = borderCol;\n        if (borderRad != null)\n            this.borderRadius = borderRad;\n        if (bgCol != null)\n            this.background = bgCol;\n    }\n    clearMolecule() { this.defineMolecule(new Molecule(), true, true); }\n    getMolecule() { return this.mol.clone(); }\n    setup(callback) {\n        this.beenSetup = true;\n        if (this.mol == null)\n            this.mol = new Molecule();\n        if (this.policy == null) {\n            this.policy = RenderPolicy.defaultColourOnWhite();\n            this.pointScale = this.policy.data.pointScale;\n        }\n        this.layoutMolecule();\n        this.centreAndShrink();\n        this.redrawMetaVector();\n        if (callback)\n            callback();\n    }\n    setupAsync() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => this.setup(() => resolve()));\n        });\n    }\n    render(parent) {\n        super.render(parent);\n        this.centreAndShrink();\n        this.redraw();\n        let reserveHeight = 0;\n        if (this.useCommandBank) {\n            this.commandView = new ButtonView(ButtonViewPosition.Bottom, 0, 0, this.width, this.height);\n            if (this.lowerCommandBank)\n                this.commandView.lowerBank();\n            this.commandView.setHasBigButtons(false);\n            this.commandView.pushBank(new CommandBank(this));\n            this.commandView.render(this.container);\n            reserveHeight = this.commandView.height;\n        }\n        if (this.useToolBank) {\n            this.toolView = new ButtonView(ButtonViewPosition.Left, 0, 0, this.width, this.height - reserveHeight);\n            if (this.lowerToolBank)\n                this.toolView.lowerBank();\n            this.toolView.setHasBigButtons(false);\n            this.toolView.pushBank(new ToolBank(this));\n            this.toolView.render(this.container);\n        }\n        if (this.useTemplateBank) {\n            this.templateView = new ButtonView(ButtonViewPosition.Right, 0, 0, this.width, this.height - reserveHeight);\n            if (this.lowerTemplateBank)\n                this.templateView.lowerBank();\n            this.templateView.setHasBigButtons(true);\n            this.templateView.pushBank(new TemplateBank(this, null));\n            this.templateView.render(this.container);\n        }\n        this.container.onClick((event) => this.mouseClick(event));\n        this.container.onDblClick((event) => this.mouseDoubleClick(event));\n        this.container.onMouseDown((event) => this.mouseDown(event));\n        this.container.onMouseUp((event) => this.mouseUp(event));\n        this.container.onMouseOver((event) => this.mouseOver(event));\n        this.container.onMouseLeave((event) => this.mouseOut(event));\n        this.container.onMouseMove((event) => this.mouseMove(event));\n        this.container.onKeyPress((event) => this.keyPressed(event));\n        this.container.onKeyDown((event) => this.keyDown(event));\n        this.container.onKeyUp((event) => this.keyUp(event));\n        this.container.onTouchStart((event) => this.touchStart(event));\n        this.container.onTouchMove((event) => this.touchMove(event));\n        this.container.onTouchCancel((event) => this.touchCancel(event));\n        this.container.onTouchEnd((event) => this.touchEnd(event));\n        this.contentDOM.onContextMenu((event) => this.contextMenu(event));\n        this.container.el.addEventListener('dragover', (event) => {\n            event.stopPropagation();\n            event.preventDefault();\n            event.dataTransfer.dropEffect = 'copy';\n        });\n        this.container.el.addEventListener('drop', (event) => {\n            event.stopPropagation();\n            event.preventDefault();\n            this.dropInto(event.dataTransfer);\n        });\n        if (this.initialFocus)\n            this.grabFocus();\n    }\n    get decoration() { return this.viewOpt.decoration; }\n    set decoration(decoration) { if (this.viewOpt.decoration != decoration) {\n        this.viewOpt.decoration = decoration;\n        this.renderMolecule();\n    } }\n    get showOxState() { return this.viewOpt.showOxState; }\n    set showOxState(showOxState) { if (this.viewOpt.showOxState != showOxState) {\n        this.viewOpt.showOxState = showOxState;\n        this.renderMolecule();\n    } }\n    get showQuery() { return this.viewOpt.showQuery; }\n    set showQuery(showQuery) { if (this.viewOpt.showQuery != showQuery) {\n        this.viewOpt.showQuery = showQuery;\n        this.renderMolecule();\n    } }\n    get showArtifacts() { return this.viewOpt.showArtifacts; }\n    set showArtifacts(showArtifacts) { if (this.viewOpt.showArtifacts != showArtifacts) {\n        this.viewOpt.showArtifacts = showArtifacts;\n        this.renderMolecule();\n    } }\n    changeSize(width, height) {\n        if (width == this.width && height == this.height)\n            return;\n        this.width = width;\n        this.height = height;\n        for (let widget of [this.container, this.canvasUnder, this.canvasMolecule, this.canvasOver]) {\n            widget.css({ 'width': `${width}px`, 'height': `${height}px` });\n        }\n        for (let btnv of [this.commandView, this.toolView, this.templateView])\n            if (btnv) {\n                btnv.setParentSize(width, height);\n                btnv.refreshBank();\n            }\n        this.autoScale();\n    }\n    showMessage(msg, isError = false) {\n        let watermark = ++this.fadeWatermark;\n        this.divMessage.css({ 'color': isError ? '#FF0000' : '#008000' });\n        this.divMessage.setText(msg);\n        let szLeft = (this.toolView == null ? 0 : this.toolView.width) + 2;\n        let szRight = (this.templateView == null ? 0 : this.templateView.width) + 2;\n        let szBottom = (this.commandView == null ? 0 : this.commandView.height) + 2;\n        this.divMessage.css({ 'left': szLeft + 'px' });\n        this.divMessage.css({ 'width': (this.width - szLeft - szRight) + 'px' });\n        this.divMessage.css({ 'height': (this.height - szBottom) + 'px' });\n        window.setTimeout(() => {\n            if (watermark == this.fadeWatermark)\n                this.divMessage.setText('');\n        }, 5000);\n    }\n    clearMessage() {\n        if (this.divMessage.getText() == '')\n            return;\n        this.fadeWatermark++;\n        this.divMessage.setText('');\n    }\n    autoScale() {\n        this.pointScale = this.policy.data.pointScale;\n        this.layoutMolecule();\n        this.centreAndShrink();\n        this.redrawMetaVector();\n        this.layoutTemplatePerm();\n        this.delayedRedraw();\n    }\n    anySelected() {\n        if (this.selectedMask == null)\n            return false;\n        for (let n = 0; n < this.selectedMask.length; n++)\n            if (this.selectedMask[n])\n                return true;\n        return false;\n    }\n    setSelected(atom, sel) {\n        if (this.selectedMask == null) {\n            this.selectedMask = new Array(this.mol.numAtoms);\n            for (let n = this.selectedMask.length - 1; n >= 0; n--)\n                this.selectedMask[n] = false;\n        }\n        while (this.selectedMask.length < this.mol.numAtoms) {\n            this.selectedMask.push(false);\n        }\n        this.selectedMask[atom - 1] = sel;\n        this.delayedRedraw();\n    }\n    changeCurrentAtom(atom) {\n        if (this.currentAtom == atom)\n            return;\n        this.currentAtom = atom;\n        this.currentBond = 0;\n        this.delayedRedraw();\n    }\n    changeCurrentBond(bond) {\n        if (this.currentBond == bond)\n            return;\n        this.currentBond = bond;\n        this.currentAtom = 0;\n        this.delayedRedraw();\n    }\n    clearSubject() {\n        if (this.currentAtom == 0 && this.currentBond == 0 && Vec.allFalse(this.selectedMask))\n            return;\n        this.currentAtom = 0;\n        this.currentBond = 0;\n        this.selectedMask = Vec.booleanArray(false, this.mol.numAtoms);\n        this.delayedRedraw();\n    }\n    setState(state, withStashUndo = true) {\n        this.stopTemplateFusion();\n        if (state.mol != null)\n            this.defineMolecule(state.mol.clone(), false, withStashUndo, true);\n        if (state.currentAtom >= 0)\n            this.currentAtom = state.currentAtom;\n        if (state.currentBond >= 0)\n            this.currentBond = state.currentBond;\n        if (state.selectedMask != null)\n            this.selectedMask = state.selectedMask == null ? null : state.selectedMask.slice(0);\n        this.delayedRedraw();\n    }\n    stashUndo() {\n        let state = this.getState();\n        this.undoStack.push(state);\n        while (this.undoStack.length > Sketcher.UNDO_SIZE) {\n            this.undoStack.splice(0, 1);\n        }\n        this.redoStack = [];\n    }\n    setPermutations(perms) {\n        this.templatePerms = perms;\n        this.pickTemplatePermutation(0);\n        this.fusionBank = new FusionBank(this);\n        this.templateView.pushBank(this.fusionBank);\n        if (this.mol.numAtoms == 0)\n            this.centreAndShrink();\n    }\n    stopTemplateFusion() {\n        if (this.fusionBank != null)\n            this.templateView.popBank();\n    }\n    clearPermutations() {\n        if (this.templatePerms == null)\n            return;\n        this.templatePerms = null;\n        this.delayedRedraw();\n        this.fusionBank = null;\n    }\n    templateAccept() {\n        let mol = Molecule.fromString(this.templatePerms[this.currentPerm].mol);\n        this.templateView.popBank();\n        this.defineMolecule(mol, false, true, false);\n    }\n    templateRotate(dir) {\n        let idx = (this.currentPerm + dir) % this.templatePerms.length;\n        if (idx < 0)\n            idx += this.templatePerms.length;\n        this.pickTemplatePermutation(idx);\n    }\n    canUndo() { return this.undoStack.length > 0; }\n    canRedo() { return this.redoStack.length > 0; }\n    performUndo() {\n        if (this.undoStack.length == 0)\n            return;\n        let state = this.getState();\n        this.redoStack.push(state);\n        this.setState(this.undoStack.pop(), false);\n    }\n    performRedo() {\n        if (this.redoStack.length == 0)\n            return;\n        let state = this.getState();\n        this.undoStack.push(state);\n        this.setState(this.redoStack.pop(), false);\n    }\n    performCopy(mol) {\n        if (!mol)\n            mol = this.getMolecule();\n        if (this.proxyClip)\n            this.proxyClip.setString(mol.toString());\n    }\n    performCopySelection(andCut) {\n        new MoleculeActivity(this.getState(), andCut ? ActivityType.Cut : ActivityType.Copy, {}, this).execute();\n    }\n    performPaste() {\n        if (this.proxyClip && this.proxyClip.canAlwaysGet()) {\n            let txt = this.proxyClip.getString();\n            this.pasteText(txt);\n        }\n    }\n    performActivity(activity, param = {}) {\n        new MoleculeActivity(this.getState(), activity, param, this).execute();\n    }\n    zoom(mag) {\n        let cx = 0.5 * this.width, cy = 0.5 * this.height;\n        let newScale = Math.min(10 * this.policy.data.pointScale, Math.max(0.1 * this.policy.data.pointScale, this.pointScale * mag));\n        if (newScale == this.pointScale)\n            return;\n        this.offsetX = cx - (newScale / this.pointScale) * (cx - this.offsetX);\n        this.offsetY = cy - (newScale / this.pointScale) * (cy - this.offsetY);\n        this.pointScale = newScale;\n        this.layoutMolecule();\n        this.redrawMetaVector();\n        this.layoutTemplatePerm();\n        this.delayedRedraw();\n    }\n    editCurrent() {\n        if (this.currentBond > 0)\n            this.editBond(this.currentBond);\n        else\n            this.editAtom(this.currentAtom);\n    }\n    pasteText(str) {\n        const pasteLocal = () => {\n            let mol = MoleculeStream.readUnknown(str);\n            if (!mol) {\n                let ds = DataSheetStream.readXML(str);\n                if (ds) {\n                    outer: for (let r = 0; r < ds.numRows; r++)\n                        for (let c = 0; c < ds.numCols; c++)\n                            if (ds.colType(c) == \"molecule\" && ds.notNull(r, c)) {\n                                mol = ds.getMolecule(r, c);\n                                break outer;\n                            }\n                }\n            }\n            if (mol != null)\n                this.pasteMolecule(mol);\n            else\n                alert('Text from clipboard is not a valid molecule.');\n        };\n        if (this.callbackSpecialPaste) {\n            (() => __awaiter(this, void 0, void 0, function* () {\n                let mol = yield this.callbackSpecialPaste(str);\n                if (mol)\n                    this.pasteMolecule(mol);\n                else\n                    pasteLocal();\n            }))();\n        }\n        else\n            pasteLocal();\n    }\n    pasteMolecule(mol) {\n        if (this.mol.numAtoms == 0) {\n            this.defineMolecule(mol, true, true, true);\n            return;\n        }\n        let molact = new MoleculeActivity(this.getState(), ActivityType.QueryPaste, { qmol: mol });\n        molact.execute();\n        if (molact.output.mol) {\n            this.defineMolecule(molact.output.mol, false, true, true);\n            return;\n        }\n        let param = { fragNative: mol.toString() };\n        new MoleculeActivity(this.getState(), ActivityType.TemplateFusion, param, this).execute();\n    }\n    pickTemplatePermutation(idx) {\n        let perm = this.templatePerms[idx];\n        this.currentPerm = idx;\n        this.layoutTemplatePerm();\n        this.delayedRedraw();\n    }\n    performPolymerBlock(atoms) {\n        let dlg = new EditPolymer(this.mol, atoms, this.proxyClip, () => {\n            if (this.mol.compareTo(dlg.mol) != 0)\n                this.defineMolecule(dlg.mol, false, true, true);\n            dlg.close();\n        });\n        dlg.callbackClose = () => {\n            this.inDialog = false;\n            this.grabFocus();\n        };\n        this.inDialog = true;\n        dlg.open();\n    }\n    grabFocus() {\n        this.container.grabFocus();\n    }\n    hasFocus() {\n        return this.container.hasFocus();\n    }\n    centreAndShrink() {\n        if (this.mol.numAtoms == 0 || this.layout == null) {\n            this.offsetX = 0.5 * this.width;\n            this.offsetY = 0.5 * this.height;\n            this.pointScale = this.policy.data.pointScale;\n            return;\n        }\n        let bounds = this.layout.determineBoundary(0);\n        let limW = this.width - 6, limH = this.height - 6;\n        let natW = bounds[2] - bounds[0], natH = bounds[3] - bounds[1];\n        let scale = 1;\n        if (natW > limW) {\n            let down = limW / natW;\n            scale *= down;\n            natW *= down;\n            natH *= down;\n        }\n        if (natH > limH) {\n            let down = limH / natH;\n            scale *= down;\n            natW *= down;\n            natH *= down;\n        }\n        if (scale < 1) {\n            this.pointScale *= scale;\n            this.layout.offsetEverything(this.offsetX * scale, this.offsetY * scale);\n            this.layout.scaleEverything(scale);\n            bounds = this.layout.determineBoundary(0);\n        }\n        let dx = 0.5 * (limW - natW) - bounds[0], dy = 0.5 * (limH - natH) - bounds[1];\n        this.offsetX += dx;\n        this.offsetY += dy;\n        this.layout.offsetEverything(dx, dy);\n    }\n    layoutTemplatePerm() {\n        if (this.currentPerm < 0 || this.templatePerms == null)\n            return;\n        let perm = this.templatePerms[this.currentPerm];\n        let tpolicy = new RenderPolicy(this.policy.data);\n        tpolicy.data.foreground = 0x808080;\n        tpolicy.data.atomCols = tpolicy.data.atomCols.slice(0);\n        for (let n in tpolicy.data.atomCols)\n            tpolicy.data.atomCols[n] = 0x808080;\n        let effects = new RenderEffects();\n        let layout = new ArrangeMolecule(Molecule.fromString(perm.display), this, tpolicy, effects);\n        layout.arrange();\n        perm.metavec = new MetaVector();\n        new DrawMolecule(layout, perm.metavec).draw();\n    }\n    renderMolecule() {\n        this.layoutMolecule();\n        this.redrawMetaVector();\n        this.delayedRedraw();\n    }\n    pickObjectCanvas(x, y) {\n        if (this.layout == null)\n            return 0;\n        if (this.toolView != null) {\n            let pos1 = this.container.offset(), pos2 = this.toolView.contentDOM.offset();\n            if (this.toolView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y))\n                return null;\n        }\n        if (this.commandView != null) {\n            let pos1 = this.container.offset(), pos2 = this.commandView.contentDOM.offset();\n            if (this.commandView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y))\n                return null;\n        }\n        if (this.templateView != null) {\n            let pos1 = this.container.offset(), pos2 = this.templateView.contentDOM.offset();\n            if (this.templateView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y))\n                return null;\n        }\n        return super.pickObjectCanvas(x, y);\n    }\n    updateHoverCursor(x, y) {\n        let tool = this.toolView ? this.toolView.selectedButton : '';\n        let toolApplies = tool && tool != ToolBankItem.Pan && tool != ToolBankItem.Rotate;\n        let mouseObj = 0;\n        if (this.dragType == DraggingTool.None && toolApplies) {\n            mouseObj = this.pickObject(x, y);\n        }\n        let mouseAtom = mouseObj > 0 ? mouseObj : 0, mouseBond = mouseObj < 0 ? -mouseObj : 0;\n        let abbrevThen = this.hoverAtom > 0 && MolUtil.hasAbbrev(this.mol, this.hoverAtom) ? this.hoverAtom : 0;\n        let abbrevNow = mouseAtom > 0 && MolUtil.hasAbbrev(this.mol, mouseAtom) ? mouseAtom : 0;\n        if (mouseAtom != this.hoverAtom || mouseBond != this.hoverBond) {\n            this.hoverAtom = mouseAtom;\n            this.hoverBond = mouseBond;\n            if (abbrevThen != abbrevNow) {\n                this.layoutMolecule();\n                this.redrawMetaVector();\n            }\n            this.delayedRedraw();\n        }\n    }\n    determineDragGuide(order) {\n        if (this.opAtom == 0 || this.mol.atomAdjCount(this.opAtom) == 0) {\n            let g = {\n                atom: this.opAtom,\n                orders: [order],\n                x: [],\n                y: [],\n                sourceX: this.opAtom == 0 ? this.clickX : this.angToX(this.mol.atomX(this.opAtom)),\n                sourceY: this.opAtom == 0 ? this.clickY : this.angToY(this.mol.atomY(this.opAtom)),\n                destX: [],\n                destY: []\n            };\n            let mx = this.opAtom == 0 ? this.xToAng(this.clickX) : this.mol.atomX(this.opAtom);\n            let my = this.opAtom == 0 ? this.yToAng(this.clickY) : this.mol.atomY(this.opAtom);\n            for (let n = 0; n < 12; n++) {\n                let theta = TWOPI * n / 12;\n                let dx = Molecule.IDEALBOND * Math.cos(theta), dy = Molecule.IDEALBOND * Math.sin(theta);\n                g.x.push(mx + dx);\n                g.y.push(my + dy);\n                g.destX.push(g.sourceX + dx * this.pointScale);\n                g.destY.push(g.sourceY - dy * this.pointScale);\n            }\n            return [g];\n        }\n        if (this.guidelines == null)\n            return null;\n        let best = null, single = null;\n        for (let n = 0; n < this.guidelines.length; n++) {\n            let g = this.guidelines[n];\n            if (g.atom != this.opAtom)\n                continue;\n            if (g.orders.indexOf(order) >= 0) {\n                best = g;\n                break;\n            }\n            if (g.orders.indexOf(1) >= 0)\n                single = g;\n        }\n        if (best == null)\n            best = single;\n        if (best == null)\n            return [];\n        let g = clone(best);\n        g.sourceX = this.angToX(this.mol.atomX(g.atom));\n        g.sourceY = this.angToY(this.mol.atomY(g.atom));\n        g.destX = [];\n        g.destY = [];\n        for (let n = 0; n < g.x.length; n++) {\n            g.destX.push(this.angToX(g.x[n]));\n            g.destY.push(this.angToY(g.y[n]));\n        }\n        return [g];\n    }\n    determineMoveGuide() {\n        let subj = this.subjectAtoms(false, true);\n        if (subj.length == 0 || subj.length == this.mol.numAtoms)\n            return null;\n        let guides = [];\n        for (let n = 0; n < this.guidelines.length; n++) {\n            let g = this.guidelines[n];\n            if (g.orders.indexOf(1) < 0 || subj.indexOf(g.atom) >= 0)\n                continue;\n            g = clone(g);\n            g.sourceX = this.angToX(this.mol.atomX(g.atom));\n            g.sourceY = this.angToY(this.mol.atomY(g.atom));\n            g.destX = [];\n            g.destY = [];\n            for (let i = 0; i < g.x.length; i++) {\n                g.destX.push(this.angToX(g.x[i]));\n                g.destY.push(this.angToY(g.y[i]));\n            }\n            guides.push(g);\n        }\n        return guides;\n    }\n    editAtom(atom) {\n        let dlg = new EditAtom(this.mol, atom, this.proxyClip, () => {\n            if (this.mol.compareTo(dlg.mol) != 0)\n                this.defineMolecule(dlg.mol, false, true, true);\n            dlg.close();\n        });\n        dlg.callbackClose = () => {\n            this.inDialog = false;\n            this.grabFocus();\n        };\n        if (atom == 0 && this.mol.numAtoms > 0) {\n            let box = this.mol.boundary();\n            dlg.newX = box.maxX() + Molecule.IDEALBOND;\n            dlg.newY = box.midY();\n        }\n        this.inDialog = true;\n        dlg.open();\n    }\n    editBond(bond) {\n        if (bond == 0)\n            return;\n        let dlg = new EditBond(this.mol, bond, this.proxyClip, () => {\n            if (this.mol.compareTo(dlg.mol) != 0)\n                this.defineMolecule(dlg.mol, false, true, true);\n            dlg.close();\n        });\n        dlg.callbackClose = () => {\n            this.inDialog = false;\n            this.grabFocus();\n        };\n        this.inDialog = true;\n        dlg.open();\n    }\n    hitArrowKey(dx, dy) {\n        let watermark = ++this.cursorWatermark;\n        this.cursorDX += dx;\n        this.cursorDY += dy;\n        setTimeout(() => {\n            if (watermark == this.cursorWatermark)\n                this.cursorJumpDirection();\n        }, 100);\n    }\n    cursorJumpDirection() {\n        let theta = Math.atan2(this.cursorDY, this.cursorDX);\n        if (this.currentAtom > 0)\n            this.jumpFromCurrentAtom(theta);\n        else if (this.currentBond > 0)\n            this.jumpFromCurrentBond(theta);\n        else\n            this.jumpFromNowhere(theta);\n        this.cursorDX = 0;\n        this.cursorDY = 0;\n        this.cursorWatermark = 0;\n    }\n    jumpFromCurrentAtom(theta) {\n        let adj = this.mol.atomAdjList(this.currentAtom);\n        let closest = 0, closestDelta = Number.MAX_VALUE;\n        for (let a of adj) {\n            let dx = this.mol.atomX(a) - this.mol.atomX(this.currentAtom), dy = this.mol.atomY(a) - this.mol.atomY(this.currentAtom);\n            let adjTheta = Math.atan2(dy, dx), delta = Math.abs(angleDiff(adjTheta, theta));\n            if (delta < 35.0 * DEGRAD && delta < closestDelta)\n                [closest, closestDelta] = [a, delta];\n        }\n        if (closest > 0) {\n            this.changeCurrentBond(this.mol.findBond(this.currentAtom, closest));\n            return;\n        }\n        let best = 0, bestScore = Number.MIN_VALUE;\n        for (let n = 1; n <= this.mol.numAtoms; n++)\n            if (n != this.currentAtom && adj.indexOf(n) < 0) {\n                let dx = this.mol.atomX(n) - this.mol.atomX(this.currentAtom), dy = this.mol.atomY(n) - this.mol.atomY(this.currentAtom);\n                let adjTheta = Math.atan2(dy, dx), delta = Math.abs(angleDiff(adjTheta, theta));\n                if (delta > 45.0 * DEGRAD)\n                    continue;\n                let cosdelta = Math.cos(delta);\n                let score = Math.pow(cosdelta, 2) / (norm2_xy(dx, dy) + 0.001);\n                if (score > bestScore)\n                    [best, bestScore] = [n, score];\n            }\n        if (best > 0)\n            this.changeCurrentAtom(best);\n    }\n    jumpFromCurrentBond(theta) {\n        let [bfr, bto] = this.mol.bondFromTo(this.currentBond);\n        let bondTheta = Math.atan2(this.mol.atomY(bto) - this.mol.atomY(bfr), this.mol.atomX(bto) - this.mol.atomX(bfr));\n        if (Math.abs(angleDiff(theta, bondTheta)) < 50.0 * DEGRAD)\n            this.changeCurrentAtom(bto);\n        if (Math.abs(angleDiff(theta, bondTheta + Math.PI)) < 50.0 * DEGRAD)\n            this.changeCurrentAtom(bfr);\n    }\n    jumpFromNowhere(theta) {\n        if (this.mol.numAtoms == 0)\n            return;\n        if (this.mol.numAtoms == 1) {\n            this.changeCurrentAtom(1);\n            return;\n        }\n        let cx = 0, cy = 0;\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            cx += this.mol.atomX(n);\n            cy += this.mol.atomY(n);\n        }\n        let inv = 1.0 / this.mol.numAtoms;\n        cx *= inv;\n        cy *= inv;\n        let best = 0, bestScore = Number.MIN_VALUE;\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let dx = this.mol.atomX(n) - cx, dy = this.mol.atomY(n) - cy, atheta = Math.atan2(dy, dx);\n            let cosdelta = Math.cos(Math.abs(angleDiff(theta + Math.PI, atheta)));\n            let score = cosdelta * norm_xy(dx, dy);\n            if (score > bestScore)\n                [best, bestScore] = [n, score];\n        }\n        if (best > 0)\n            this.changeCurrentAtom(best);\n    }\n    createRing(rsz, aromatic) {\n        const { mol } = this;\n        let rx = null, ry = null;\n        if (this.currentAtom > 0) {\n            let dx = 0, dy = 0, adj = mol.atomAdjList(this.currentAtom);\n            let x0 = mol.atomX(this.currentAtom), y0 = mol.atomY(this.currentAtom);\n            for (let a of adj) {\n                dx -= mol.atomX(a) - x0;\n                dy -= mol.atomY(a) - y0;\n            }\n            if (Math.abs(dx) < 0.001 && Math.abs(dy) < 0.001) {\n                if (adj.length >= 2) {\n                    let theta = adj.map((a) => Math.atan2(mol.atomY(a) - x0, mol.atomX(a) - y0));\n                    Vec.sort(theta);\n                    let best = Number.POSITIVE_INFINITY;\n                    for (let n = 0; n < theta.length; n++) {\n                        let th = angleDiff(theta[(n + 1) % theta.length], theta[n]);\n                        let lx = Math.cos(th), ly = Math.sin(th), score = CoordUtil.congestionPoint(mol, x0 + lx, y0 + ly);\n                        if (score < best)\n                            [best, dx, dy] = [score, lx, ly];\n                    }\n                }\n                else\n                    [dx, dy] = [1, 0];\n            }\n            [rx, ry] = SketchUtil.proposeAtomRing(this.mol, rsz, this.currentAtom, dx, dy);\n        }\n        else if (this.currentBond > 0) {\n            let a1 = mol.bondFrom(this.currentBond), a2 = mol.bondTo(this.currentBond);\n            let x1 = mol.atomX(a1), y1 = mol.atomY(a1), x2 = mol.atomX(a2), y2 = mol.atomY(a2);\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2), ox = y1 - y2, oy = x2 - x1;\n            let [dx, dy] = CoordUtil.congestionPoint(mol, cx - ox, cy - oy) < CoordUtil.congestionPoint(mol, cx + ox, cy + oy) ? [-ox, -oy] : [ox, oy];\n            [rx, ry] = SketchUtil.proposeBondRing(this.mol, rsz, this.currentBond, dx, dy);\n        }\n        else {\n            let x = 0, y = 0;\n            if (mol.numAtoms > 0) {\n                let bound = mol.boundary();\n                [x, y] = [bound.maxX() + Molecule.IDEALBOND, bound.midY()];\n            }\n            [rx, ry] = SketchUtil.proposeNewRing(this.mol, rsz, x, y, 0, -1, false);\n        }\n        if (!rx)\n            return;\n        let param = {\n            ringX: rx,\n            ringY: ry,\n            aromatic: aromatic\n        };\n        let molact = new MoleculeActivity(this.getState(), ActivityType.Ring, param, this);\n        molact.execute();\n    }\n    ctrlArrowKey(dx, dy) {\n        let watermark = ++this.cursorWatermark;\n        this.cursorDX += dx;\n        this.cursorDY += dy;\n        setTimeout(() => {\n            if (watermark == this.cursorWatermark) {\n                this.sproutDirection(this.cursorDX, this.cursorDY);\n                this.cursorDX = this.cursorDY = 0;\n            }\n        }, 100);\n    }\n    sproutDirection(deltaX, deltaY) {\n        new MoleculeActivity(this.getState(), ActivityType.SproutDirection, { deltaX, deltaY }, this).execute();\n    }\n    mouseClick(event) {\n        event.stopPropagation();\n        this.grabFocus();\n        return false;\n    }\n    mouseDoubleClick(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        if (this.toolView.selectedButton != ToolBankItem.Arrow)\n            return;\n        let xy = eventCoords(event, this.container);\n        let clickObj = this.pickObject(xy[0], xy[1]);\n        if (clickObj > 0) {\n            let atom = clickObj;\n            this.editAtom(atom);\n        }\n        else {\n            let bond = -clickObj;\n            this.editBond(bond);\n        }\n        return false;\n    }\n    mouseDown(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.clearMessage();\n        if (event.ctrlKey && !event.shiftKey && !event.altKey) {\n            this.contextMenu(event);\n            return;\n        }\n        let [x, y] = eventCoords(event, this.container);\n        this.interactStart(x, y, event.shiftKey, event.ctrlKey, event.altKey);\n        return false;\n    }\n    mouseUp(event) {\n        event.stopPropagation();\n        let [x, y] = eventCoords(event, this.container);\n        this.interactEnd(x, y);\n        return false;\n    }\n    mouseOver(event) {\n        event.stopPropagation();\n        let [x, y] = eventCoords(event, this.container);\n        this.updateHoverCursor(x, y);\n        this.updateLasso(x, y);\n        return false;\n    }\n    mouseOut(event) {\n        event.stopPropagation();\n        let [x, y] = eventCoords(event, this.container);\n        this.updateHoverCursor(x, y);\n        this.updateLasso(x, y);\n        return false;\n    }\n    mouseMove(event) {\n        event.stopPropagation();\n        let [x, y] = eventCoords(event, this.container);\n        this.updateHoverCursor(x, y);\n        if (this.dragType == DraggingTool.None)\n            return;\n        this.interactDrag(x, y);\n        return false;\n    }\n    keyPressed(event) {\n    }\n    keyDown(event) {\n        let key = event.key;\n        if (key == \"Escape\") {\n            for (let view of [this.templateView, this.commandView, this.toolView])\n                if (view != null && view.stackSize > 1) {\n                    view.popBank();\n                    event.preventDefault();\n                    event.stopPropagation();\n                    return;\n                }\n        }\n        let mod = (event.shiftKey ? 'S' : '') + (event.ctrlKey || event.metaKey ? 'C' : '') + (event.altKey ? 'A' : '');\n        let nomod = !event.shiftKey && !event.ctrlKey && !event.altKey && !event.metaKey;\n        if (key == \"Enter\")\n            this.editCurrent();\n        else if (key == \"ArrowLeft\" && nomod)\n            this.hitArrowKey(-1, 0);\n        else if (key == \"ArrowRight\" && nomod)\n            this.hitArrowKey(1, 0);\n        else if (key == \"ArrowUp\" && nomod)\n            this.hitArrowKey(0, 1);\n        else if (key == \"ArrowDown\" && nomod)\n            this.hitArrowKey(0, -1);\n        else if (key == 'z' && mod == 'C')\n            this.performUndo();\n        else if (key == 'Z' && mod == 'SC')\n            this.performRedo();\n        else if (key == 'z' && nomod)\n            this.toolView.cycleSelected(-1);\n        else if (key == 'x' && nomod)\n            this.toolView.cycleSelected(1);\n        else if (this.toolView != null && this.toolView.topBank.claimKey(event)) { }\n        else if (this.commandView != null && this.commandView.topBank.claimKey(event)) { }\n        else if (this.templateView != null && this.templateView.topBank.claimKey(event)) { }\n        else if (key == '#' && mod == 'SC')\n            this.createRing(3, false);\n        else if (key == '$' && mod == 'SC')\n            this.createRing(4, false);\n        else if (key == '%' && mod == 'SC')\n            this.createRing(5, false);\n        else if (key == '^' && mod == 'SC')\n            this.createRing(6, false);\n        else if (key == '&' && mod == 'SC')\n            this.createRing(7, false);\n        else if (key == '3' && mod == 'CA')\n            this.createRing(3, true);\n        else if (key == '4' && mod == 'CA')\n            this.createRing(4, true);\n        else if (key == '5' && mod == 'CA')\n            this.createRing(5, true);\n        else if (key == '6' && mod == 'CA')\n            this.createRing(6, true);\n        else if (key == '7' && mod == 'CA')\n            this.createRing(7, true);\n        else if (key == 'c' && mod == 'C' && this.proxyClip)\n            this.proxyClip.triggerCopy(false);\n        else if (key == 'x' && mod == 'C' && this.proxyClip)\n            this.proxyClip.triggerCopy(true);\n        else if (key == 'v' && mod == 'C' && this.proxyClip && this.proxyClip.canAlwaysGet())\n            this.proxyClip.triggerPaste();\n        else if (key == \"ArrowLeft\" && mod == 'C')\n            this.ctrlArrowKey(-1, 0);\n        else if (key == \"ArrowRight\" && mod == 'C')\n            this.ctrlArrowKey(1, 0);\n        else if (key == \"ArrowUp\" && mod == 'C')\n            this.ctrlArrowKey(0, 1);\n        else if (key == \"ArrowDown\" && mod == 'C')\n            this.ctrlArrowKey(0, -1);\n        else if (key == '1' && mod == 'C')\n            this.sproutDirection(-1, -1);\n        else if (key == '2' && mod == 'C')\n            this.sproutDirection(0, -1);\n        else if (key == '3' && mod == 'C')\n            this.sproutDirection(1, -1);\n        else if (key == '4' && mod == 'C')\n            this.sproutDirection(-1, 0);\n        else if (key == '6' && mod == 'C')\n            this.sproutDirection(1, 0);\n        else if (key == '7' && mod == 'C')\n            this.sproutDirection(-1, 1);\n        else if (key == '8' && mod == 'C')\n            this.sproutDirection(0, 1);\n        else if (key == '9' && mod == 'C')\n            this.sproutDirection(1, 1);\n        else\n            return;\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    keyUp(event) {\n    }\n    touchStart(event) {\n        let [x, y] = eventCoords(event.touches[0], this.container);\n        if (this.pickObjectCanvas(x, y) == null)\n            return;\n        this.interactStart(x, y, event.shiftKey, event.ctrlKey, event.altKey);\n        event.preventDefault();\n    }\n    touchMove(event) {\n        if (this.dragType != DraggingTool.None) {\n            let [x, y] = eventCoords(event.touches[0], this.container);\n            this.interactDrag(x, y);\n        }\n        event.preventDefault();\n    }\n    touchCancel(event) {\n    }\n    touchEnd(event) {\n        if (this.dragType != DraggingTool.None) {\n            let [x, y] = [this.mouseX, this.mouseY];\n            this.interactEnd(x, y);\n            event.preventDefault();\n        }\n    }\n    mouseWheel(event) {\n    }\n    contextMenu(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.dragType = DraggingTool.None;\n        if (!this.proxyMenu)\n            return;\n        let [x, y] = eventCoords(event, this.container);\n        let clickObj = this.pickObject(x, y);\n        if (clickObj > 0)\n            this.changeCurrentAtom(clickObj);\n        else if (clickObj < 0)\n            this.changeCurrentBond(-clickObj);\n        let state = this.getState();\n        let ctx = new ContextSketch(state, this, this.proxyClip);\n        let menu = ctx.populate();\n        this.proxyMenu.openContextMenu(menu, event);\n    }\n    interactStart(x, y, shiftKey, ctrlKey, altKey) {\n        this.dragType = DraggingTool.Press;\n        this.opBudged = false;\n        this.dragGuides = null;\n        this.mouseX = x;\n        this.mouseY = y;\n        this.clickX = x;\n        this.clickY = y;\n        let clickObj = this.pickObject(x, y);\n        this.opAtom = clickObj > 0 ? clickObj : 0;\n        this.opBond = clickObj < 0 ? -clickObj : 0;\n        this.opShift = shiftKey;\n        this.opCtrl = ctrlKey;\n        this.opAlt = altKey;\n        let tool = '';\n        if (this.toolView != null)\n            tool = this.toolView.selectedButton;\n        if (tool == ToolBankItem.Arrow) {\n            if (!this.opShift && !this.opCtrl && !this.opAlt) {\n                this.dragType = DraggingTool.Press;\n            }\n            else if (!this.opShift && !this.opCtrl && this.opAlt) {\n                this.dragType = DraggingTool.Pan;\n            }\n            else if (!this.opShift && this.opCtrl && this.opAlt) {\n                this.dragType = DraggingTool.Zoom;\n            }\n        }\n        else if (tool == ToolBankItem.Rotate) {\n            this.dragType = DraggingTool.Rotate;\n            this.toolRotateIncr = this.opShift ? 0 : 15 * DEGRAD;\n        }\n        else if (tool == ToolBankItem.Pan) {\n            this.dragType = DraggingTool.Pan;\n        }\n        else if (tool == ToolBankItem.Drag) {\n            this.dragType = DraggingTool.Move;\n            if (this.opAtom > 0)\n                this.dragGuides = this.determineMoveGuide();\n            this.delayedRedraw();\n        }\n        else if (tool == ToolBankItem.Erasor) {\n            this.dragType = DraggingTool.Erasor;\n            this.lassoX = [x];\n            this.lassoY = [y];\n            this.lassoMask = [];\n        }\n        else if (tool == ToolBankItem.RingAliph) {\n            this.dragType = DraggingTool.Ring;\n            this.toolRingArom = false;\n            this.toolRingFreeform = this.opShift;\n        }\n        else if (tool == ToolBankItem.RingArom) {\n            this.dragType = DraggingTool.Ring;\n            this.toolRingArom = true;\n            this.toolRingFreeform = this.opShift;\n        }\n        else if (tool == ToolBankItem.AtomPlus) {\n            this.dragType = DraggingTool.Charge;\n            this.toolChargeDelta = 1;\n        }\n        else if (tool == ToolBankItem.AtomMinus) {\n            this.dragType = DraggingTool.Charge;\n            this.toolChargeDelta = -1;\n        }\n        else if (tool.startsWith(ToolBankItem.BondPfx)) {\n            this.dragType = DraggingTool.Bond;\n            this.toolBondOrder = 1;\n            this.toolBondType = Molecule.BONDTYPE_NORMAL;\n            if (tool == ToolBankItem.BondOrder0)\n                this.toolBondOrder = 0;\n            else if (tool == ToolBankItem.BondOrder2)\n                this.toolBondOrder = 2;\n            else if (tool == ToolBankItem.BondOrder3)\n                this.toolBondOrder = 3;\n            else if (tool == ToolBankItem.BondUnknown)\n                this.toolBondType = Molecule.BONDTYPE_UNKNOWN;\n            else if (tool == ToolBankItem.BondInclined)\n                this.toolBondType = Molecule.BONDTYPE_INCLINED;\n            else if (tool == ToolBankItem.BondDeclined)\n                this.toolBondType = Molecule.BONDTYPE_DECLINED;\n            if (this.opBond > 0) {\n                let [bfr, bto] = this.mol.bondFromTo(this.opBond), inPoly = false;\n                for (let poly of new PolymerBlock(this.mol).getUnits()) {\n                    let in1 = poly.atoms.includes(bfr), in2 = poly.atoms.includes(bto);\n                    if ((in1 && !in2) || (in2 && !in1)) {\n                        inPoly = true;\n                        break;\n                    }\n                }\n                if (inPoly) {\n                    this.toolBondOrder = 0;\n                    this.toolBondType = Molecule.BONDTYPE_NORMAL;\n                }\n            }\n            if (this.opBond == 0)\n                this.dragGuides = this.determineDragGuide(this.toolBondOrder);\n        }\n        else if (tool.startsWith(ToolBankItem.ElementPfx)) {\n            this.dragType = DraggingTool.Atom;\n            this.toolAtomSymbol = tool.substring(ToolBankItem.ElementPfx.length);\n            this.dragGuides = this.determineDragGuide(1);\n        }\n    }\n    interactDrag(x, y) {\n        if (!this.opBudged) {\n            let dx = x - this.clickX, dy = y - this.clickY;\n            if (dx * dx + dy * dy > 2 * 2)\n                this.opBudged = true;\n        }\n        if (this.dragType == DraggingTool.Press && this.opAtom == 0 && this.opBond == 0 && this.opBudged) {\n            this.dragType = DraggingTool.Lasso;\n            this.lassoX = [x];\n            this.lassoY = [y];\n            this.lassoMask = [];\n        }\n        if (this.dragType == DraggingTool.Lasso || this.dragType == DraggingTool.Erasor) {\n            this.updateLasso(x, y);\n        }\n        else if (this.dragType == DraggingTool.Pan) {\n            let dx = x - this.mouseX, dy = y - this.mouseY;\n            if (dx != 0 || dy != 0) {\n                this.offsetX += dx;\n                this.offsetY += dy;\n                this.layout.offsetEverything(dx, dy);\n                this.metavec.transformPrimitives(dx, dy, 1, 1);\n                if (this.currentPerm >= 0 && this.templatePerms != null) {\n                    let perm = this.templatePerms[this.currentPerm];\n                    perm.metavec.transformPrimitives(dx, dy, 1, 1);\n                }\n                this.delayedRedraw();\n            }\n            this.mouseX = x;\n            this.mouseY = y;\n        }\n        else if (this.dragType == DraggingTool.Zoom) {\n            let dy = y - this.mouseY;\n            if (dy != 0) {\n                dy = Math.min(50, Math.max(-50, dy));\n                let newScale = this.pointScale * (1 - dy * 0.01);\n                newScale = Math.min(10, Math.max(0.1, newScale));\n                let newOX = this.clickX - (newScale / this.pointScale) * (this.clickX - this.offsetX);\n                let newOY = this.clickY - (newScale / this.pointScale) * (this.clickY - this.offsetY);\n                this.pointScale = newScale;\n                this.offsetX = newOX;\n                this.offsetY = newOY;\n                this.delayedRedraw();\n            }\n            this.mouseX = x;\n            this.mouseY = y;\n        }\n        else if (this.dragType == DraggingTool.Rotate ||\n            this.dragType == DraggingTool.Move ||\n            this.dragType == DraggingTool.Atom ||\n            this.dragType == DraggingTool.Bond ||\n            this.dragType == DraggingTool.Ring) {\n            this.mouseX = x;\n            this.mouseY = y;\n            this.delayedRedraw();\n        }\n    }\n    interactEnd(x, y) {\n        if (this.opBudged)\n            this.interactEndDrag(x, y);\n        else\n            this.interactEndClick(x, y);\n        this.dragType = DraggingTool.None;\n        this.lassoX = null;\n        this.lassoY = null;\n        this.lassoMask = null;\n        this.dragGuides = null;\n        this.delayedRedraw();\n    }\n    interactEndClick(x, y) {\n        let clickObj = this.pickObject(x, y);\n        let clickAtom = clickObj > 0 ? clickObj : 0, clickBond = clickObj < 0 ? -clickObj : 0;\n        if (this.dragType == DraggingTool.Press) {\n            if (!this.opShift && !this.opCtrl && !this.opAlt) {\n                if (clickAtom == 0 && clickBond == 0) {\n                    if (Vec.anyTrue(this.selectedMask))\n                        this.selectedMask = null;\n                    else if (this.currentAtom > 0)\n                        this.currentAtom = 0;\n                    else if (this.currentBond > 0)\n                        this.currentBond = 0;\n                }\n                else if (clickAtom != this.currentAtom || clickBond != this.currentBond) {\n                    this.currentAtom = clickAtom;\n                    this.currentBond = clickBond;\n                }\n                else if (clickAtom == 0 && clickBond == 0 && this.anySelected()) {\n                    this.selectedMask = null;\n                }\n            }\n            else if (this.opShift && !this.opCtrl && !this.opAlt) {\n                if (clickAtom > 0)\n                    this.setSelected(clickAtom, !this.getSelected(clickAtom));\n            }\n        }\n        else if (this.dragType == DraggingTool.Move) {\n            if (clickObj == 0) {\n                if (Vec.anyTrue(this.selectedMask))\n                    this.selectedMask = null;\n                else if (this.currentAtom > 0)\n                    this.currentAtom = 0;\n                else if (this.currentBond > 0)\n                    this.currentBond = 0;\n            }\n        }\n        else if (this.dragType == DraggingTool.Erasor) {\n            if (this.opAtom > 0 || this.opBond > 0) {\n                let state = Object.assign(Object.assign({}, this.getState()), { 'currentAtom': this.opAtom, 'currentBond': this.opBond, 'selectedMask': [] });\n                let molact = new MoleculeActivity(state, ActivityType.Delete, {}, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Atom) {\n            let element = this.toolAtomSymbol;\n            if (element == 'A') {\n                let dlg = new EditAtom(this.mol, this.opAtom, this.proxyClip, () => {\n                    let autoscale = this.mol.numAtoms == 0;\n                    if (this.mol.compareTo(dlg.mol) != 0)\n                        this.defineMolecule(dlg.mol, autoscale, true);\n                    dlg.close();\n                });\n                if (this.opAtom == 0) {\n                    dlg.newX = this.xToAng(this.clickX);\n                    dlg.newY = this.yToAng(this.clickY);\n                }\n                dlg.callbackClose = () => {\n                    this.inDialog = false;\n                    this.grabFocus();\n                };\n                this.inDialog = true;\n                dlg.open();\n            }\n            else if (element) {\n                let param = { element, keepAbbrev: true };\n                if (this.opAtom == 0) {\n                    let x = this.xToAng(this.clickX), y = this.yToAng(this.clickY);\n                    if (this.mol.numAtoms == 0) {\n                        this.offsetX = this.clickX;\n                        this.offsetY = this.clickY;\n                        x = 0;\n                        y = 0;\n                    }\n                    param.positionX = x;\n                    param.positionY = y;\n                }\n                let state = Object.assign(Object.assign({}, this.getState()), { currentAtom: this.opAtom, currentBond: 0, selectedMask: null });\n                let molact = new MoleculeActivity(state, ActivityType.Element, param, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Charge) {\n            if (this.opAtom > 0 || this.opBond > 0) {\n                let state = Object.assign(Object.assign({}, this.getState()), { currentAtom: this.opAtom, currentBond: this.opBond, selectedMask: null });\n                let molact = new MoleculeActivity(state, ActivityType.Charge, { delta: this.toolChargeDelta }, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Bond) {\n            let state = Object.assign(Object.assign({}, this.getState()), { currentAtom: this.opAtom, currentBond: this.opBond, selectedMask: null });\n            let molact;\n            if (this.toolBondType == Molecule.BONDTYPE_NORMAL)\n                molact = new MoleculeActivity(state, ActivityType.BondOrder, { order: this.toolBondOrder }, this);\n            else\n                molact = new MoleculeActivity(state, ActivityType.BondType, { type: this.toolBondType }, this);\n            molact.execute();\n        }\n    }\n    interactEndDrag(x, y) {\n        if (this.dragType == DraggingTool.Lasso) {\n            if (this.lassoX.length >= 2) {\n                this.calculateLassoMask();\n                for (let n = 1; n <= this.mol.numAtoms; n++)\n                    if (this.getLassoed(n) && !this.getSelected(n))\n                        this.setSelected(n, true);\n            }\n            this.lassoX = null;\n            this.lassoY = null;\n            this.lassoMask = null;\n            this.delayedRedraw();\n        }\n        else if (this.dragType == DraggingTool.Erasor) {\n            let any = false;\n            for (let n = 0; n < this.lassoMask.length; n++)\n                if (this.lassoMask[n]) {\n                    any = true;\n                    break;\n                }\n            if (any) {\n                let state = Object.assign(Object.assign({}, this.getState()), { currentAtom: 0, currentBond: 0, selectedMask: this.lassoMask });\n                let molact = new MoleculeActivity(state, ActivityType.Delete, {}, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Rotate) {\n            let [x0, y0, theta, magnitude] = this.determineDragTheta();\n            let degrees = -theta * RADDEG;\n            let mx = this.xToAng(x0), my = this.yToAng(y0);\n            let molact = new MoleculeActivity(this.getState(), ActivityType.Rotate, { theta: degrees, centreX: mx, centreY: my }, this);\n            molact.execute();\n        }\n        else if (this.dragType == DraggingTool.Move) {\n            let [dx, dy] = this.determineMoveDelta();\n            let scale = this.pointScale;\n            let molact = new MoleculeActivity(this.getState(), ActivityType.Move, { refAtom: this.opAtom, deltaX: dx / scale, deltaY: -dy / scale }, this);\n            molact.execute();\n        }\n        else if (this.dragType == DraggingTool.Ring) {\n            let [ringX, ringY] = this.determineFauxRing();\n            if (ringX != null) {\n                let param = {\n                    ringX: ringX,\n                    ringY: ringY,\n                    aromatic: this.toolRingArom\n                };\n                let molact = new MoleculeActivity(this.getState(), ActivityType.Ring, param, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Atom && this.opAtom > 0) {\n            let x2 = this.mouseX, y2 = this.mouseY;\n            let snapTo = this.snapToGuide(x2, y2);\n            if (snapTo != null)\n                [x2, y2] = snapTo;\n            let param = {\n                order: 1,\n                type: Molecule.BONDTYPE_NORMAL,\n                element: this.toolAtomSymbol,\n                x1: this.mol.atomX(this.opAtom),\n                y1: this.mol.atomY(this.opAtom),\n                x2: this.xToAng(x2),\n                y2: this.yToAng(y2)\n            };\n            if (this.toolAtomSymbol == 'A')\n                param.element = window.prompt('Enter element symbol:', '');\n            if (param.element != '') {\n                let molact = new MoleculeActivity(this.getState(), ActivityType.BondAtom, param, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Bond) {\n            let x2 = this.mouseX, y2 = this.mouseY;\n            let snapTo = this.snapToGuide(x2, y2);\n            if (snapTo != null) {\n                [x2, y2] = snapTo;\n                if (this.opBond > 0) {\n                    let toObj = this.pickObject(x2, y2, { noAtoms: true });\n                    if (toObj < 0) {\n                        this.connectPolymerBlock(this.opBond, -toObj);\n                        return;\n                    }\n                }\n            }\n            let param = {\n                order: this.toolBondOrder,\n                type: this.toolBondType,\n                element: 'C',\n                x1: this.opAtom == 0 ? this.xToAng(this.clickX) : this.mol.atomX(this.opAtom),\n                y1: this.opAtom == 0 ? this.yToAng(this.clickY) : this.mol.atomY(this.opAtom),\n                x2: this.xToAng(x2),\n                y2: this.yToAng(y2)\n            };\n            let molact = new MoleculeActivity(this.getState(), ActivityType.BondAtom, param, this);\n            molact.execute();\n        }\n    }\n    dropInto(transfer) {\n        let items = transfer.items, files = transfer.files;\n        const SUFFIXES = ['.el', '.mol'];\n        const MIMES = ['text/plain', 'chemical/x-sketchel', 'x-mdl-molfile'];\n        for (let n = 0; n < items.length; n++) {\n            if (items[n].kind == 'string' && MIMES.indexOf(items[n].type) >= 0) {\n                items[n].getAsString((str) => {\n                    let mol = Molecule.fromString(str);\n                    if (mol != null) {\n                        this.defineMolecule(mol, true, true, true);\n                    }\n                    else\n                        console.log('Dragged data is not a SketchEl molecule: ' + str);\n                });\n                return;\n            }\n        }\n        for (let n = 0; n < files.length; n++) {\n            for (let sfx of SUFFIXES)\n                if (files[n].name.endsWith(sfx)) {\n                    let reader = new FileReader();\n                    reader.onload = (event) => {\n                        let str = reader.result;\n                        let mol = MoleculeStream.readUnknown(str.toString());\n                        if (mol != null) {\n                            this.defineMolecule(mol, true, true);\n                        }\n                        else\n                            console.log('Dragged file is not a recognised molecule: ' + str);\n                    };\n                    reader.readAsText(files[n]);\n                    return;\n                }\n        }\n    }\n    connectPolymerBlock(bond1, bond2) {\n        let [atomIn1, atomOut1] = this.mol.bondFromTo(bond1), [atomIn2, atomOut2] = this.mol.bondFromTo(bond2);\n        let state = this.getState();\n        let polymer = new PolymerBlock(state.mol);\n        let poly1 = null, poly2 = null;\n        let highName = 0;\n        for (let poly of polymer.getUnits()) {\n            if (!poly1 || poly.atoms.length < poly1.atoms.length) {\n                let ina = poly.atoms.includes(atomIn1), inb = poly.atoms.includes(atomOut1);\n                if (ina && !inb)\n                    poly1 = poly;\n                else if (inb && !ina)\n                    [poly1, atomIn1, atomOut1] = [poly, atomOut1, atomIn1];\n            }\n            if (!poly2 || poly.atoms.length < poly2.atoms.length) {\n                let ina = poly.atoms.includes(atomIn2), inb = poly.atoms.includes(atomOut2);\n                if (ina && !inb)\n                    poly2 = poly;\n                else if (inb && !ina)\n                    [poly2, atomIn2, atomOut2] = [poly, atomOut2, atomIn2];\n            }\n            for (let nameList of poly.atomName.values())\n                highName = Math.max(highName, Vec.max(nameList));\n        }\n        if (!poly1 || !poly2)\n            return false;\n        let name1 = Vec.first(poly1.atomName.get(atomIn1));\n        if (!name1) {\n            name1 = ++highName;\n            poly1.atomName.set(atomIn1, [name1]);\n        }\n        let name2 = Vec.first(poly2.atomName.get(atomIn2));\n        if (!name2) {\n            name2 = ++highName;\n            poly2.atomName.set(atomIn2, [name2]);\n        }\n        poly1.bondIncl.set(bond1, Vec.append(poly1.bondIncl.get(bond1), name2));\n        poly2.bondIncl.set(bond2, Vec.append(poly2.bondIncl.get(bond2), name1));\n        polymer.rewriteMolecule();\n        this.setState(state);\n    }\n}\nSketcher.UNDO_SIZE = 20;\nexport { Sketcher };\n//# sourceMappingURL=Sketcher.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Vec} from 'webmolkit/util/Vec';\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\n\tUnit definitions and conversions. Units are preferentially stored by URI, displayed by common name, and interconverted\n\tas necessary to other schemes, such as MInChI mnemonics.\n*/\n\nexport enum StandardUnits\n{\n\t// concentration units (these are favoured for most purposes)\n\tpc = 'http://purl.obolibrary.org/obo/UO_0000187', // percent (of arbitrary type)\n\tpcWV = 'http://purl.obolibrary.org/obo/UO_0000164', // percent (weight per volume),\n\tpcWW = 'http://purl.obolibrary.org/obo/UO_0000163', // percent (weight per weight),\n\tpcVV = 'http://purl.obolibrary.org/obo/UO_0000205', // percent (volume per volume),\n\tpcMM = 'http://purl.obolibrary.org/obo/UO_0000076', // percent (mole per mole)\n\tratio = 'http://purl.obolibrary.org/obo/UO_0000190', // ratio (numerator only; nominally by volume)\n\tmol_L = 'http://purl.obolibrary.org/obo/UO_0000062', // moles per litre (mol/L)\n\tmmol_L = 'http://purl.obolibrary.org/obo/UO_0000063', // milli-moles per litre\n\tumol_L = 'http://purl.obolibrary.org/obo/UO_0000064', // micro-moles per litre\n\tnmol_L = 'http://purl.obolibrary.org/obo/UO_0000065', // nano-moles per litre\n\tpmol_L = 'http://purl.obolibrary.org/obo/UO_0000066', // pico-moles per litre\n\t/* could be handy to allow these... maybe\n\tlogM = 'http://www.bioassayontology.org/bao#BAO_0000101', // log10 of mol/L\n\tperM = 'http://www.bioassayontology.org/bao#BAO_0000102', // -log10 of mol/L */\n\tg_L = 'http://purl.obolibrary.org/obo/UO_0000175', // grams per litre (g/L)\n\tmg_L = 'http://purl.obolibrary.org/obo/UO_0000273', // milligrams per litre (aka micrograms per mL)\n\tug_L = 'http://purl.obolibrary.org/obo/UO_0000275', // micrograms per litre (aka nanograms per mL)\n\tmol_kg = 'http://purl.obolibrary.org/obo/UO_0000068', // moles per kilogram\n\n\t// absolute units (these are often converted to concentrations when possible)\n\tkg = 'http://purl.obolibrary.org/obo/UO_0000009', // kilogram\n\tg = 'http://purl.obolibrary.org/obo/UO_0000021', // gram\n\tmg = 'http://purl.obolibrary.org/obo/UO_0000022', // milligram\n\tug = 'http://purl.obolibrary.org/obo/UO_0000023', // microgram\n\tng = 'http://purl.obolibrary.org/obo/UO_0000024', // nanogram\n\tL = 'http://purl.obolibrary.org/obo/UO_0000099', // litre\n\tmL = 'http://purl.obolibrary.org/obo/UO_0000098', // millilitre\n\tuL = 'http://purl.obolibrary.org/obo/UO_0000101', // microlitre\n\tnL = 'http://purl.obolibrary.org/obo/UO_0000102', // nanolitre\n\tmol = 'http://purl.obolibrary.org/obo/UO_0000013', // mole\n\tmmol = 'http://purl.obolibrary.org/obo/UO_0000040', // millimole\n\tumol = 'http://purl.obolibrary.org/obo/UO_0000039', // micromole\n\tnmol = 'http://purl.obolibrary.org/obo/UO_0000041', // nanomole\n\n\t// other\n\tppm = 'placeholder1',\n\tppb = 'placeholder2',\n}\n\nconst PAIR_UNIT_NAMES:any[] =\n[\n\t// form: [reference URI, primary display name, ...optional alternative names]\n\n\t[StandardUnits.pc, '%'],\n\t[StandardUnits.pcWV, 'w/v%'],\n\t[StandardUnits.pcWW, 'w/w%'],\n\t[StandardUnits.pcVV, 'v/v%'],\n\t[StandardUnits.pcMM, 'mol/mol%'],\n\t[StandardUnits.ratio, 'ratio'],\n\t[StandardUnits.mol_L, 'mol/L', 'M'],\n\t[StandardUnits.mmol_L, 'mmol/L', 'mM'],\n\t[StandardUnits.umol_L, '\\u{03BC}mol/L', 'umol/L', 'uM'],\n\t[StandardUnits.nmol_L, 'nmol/L', 'nM'],\n\t[StandardUnits.pmol_L, 'pmol/L', 'pM'],\n\t/*[StandardUnits.logM, ''],\n\t[StandardUnits.perM, ''],*/\n\t[StandardUnits.g_L, 'g/L'],\n\t[StandardUnits.mg_L, 'mg/L'],\n\t[StandardUnits.ug_L, '\\u{03BC}g/L', 'ug/L'],\n\t[StandardUnits.mol_kg, 'mol/kg'],\n\n\t[StandardUnits.kg, 'kg'],\n\t[StandardUnits.g, 'g'],\n\t[StandardUnits.mg, 'mg'],\n\t[StandardUnits.ug, '\\u{03BC}g', 'ug'],\n\t[StandardUnits.ng, 'ng'],\n\t[StandardUnits.L, 'L'],\n\t[StandardUnits.mL, 'mL'],\n\t[StandardUnits.uL, '\\u{03BC}L', 'uL'],\n\t[StandardUnits.nL, 'nL'],\n\t[StandardUnits.mol, 'mol'],\n\t[StandardUnits.mmol, 'mmol'],\n\t[StandardUnits.umol, '\\u{03BC}mol', 'umol'],\n\t[StandardUnits.nmol, 'nmol'],\n\n\t[StandardUnits.ppm, 'ppm'],\n\t[StandardUnits.ppb, 'ppb'],\n];\n\nconst PAIR_UNIT_MINCHI:any[] =\n[\n\t// [enum type, MInChI type, scaling] ... scaling factor is for going from standard to MInChI\n\t[StandardUnits.pc, 'pp', 1],\n\t[StandardUnits.pcWV, 'wv', 0.01],\n\t[StandardUnits.pcWW, 'wf', 0.01],\n\t[StandardUnits.pcVV, 'vf', 0.01],\n\t[StandardUnits.pcMM, 'mf', 0.01],\n\t[StandardUnits.ratio, 'rt', 1],\n\t[StandardUnits.mol_L, 'mr', 1],\n\t[StandardUnits.mmol_L, 'mr', 1E-3],\n\t[StandardUnits.umol_L, 'mr', 1E-6],\n\t[StandardUnits.nmol_L, 'mr', 1E-9],\n\t[StandardUnits.pmol_L, 'mr', 1E-12],\n\t/*[StandardUnits.logM, '', ],\n\t[StandardUnits.perM, '', ],*/\n\t[StandardUnits.g_L, 'wv', 1E-3],\n\t[StandardUnits.mg_L, 'wv', 1E-6],\n\t[StandardUnits.ug_L, 'wv', 1E-9],\n\t[StandardUnits.mol_kg, 'mb', 1],\n\t[StandardUnits.ppm, 'pp', 1E-6],\n\t[StandardUnits.ppb, 'pp', 1E-9],\n];\n\nexport class Units\n{\n\tpublic static STANDARD_LIST:string[] = []; // all of the applicable unit URIs\n\tpublic static COMMON_NAMES:string[] = []; // all of the preferred names (same order as above)\n\tpublic static URI_TO_NAME:Record<string, string> = {}; // each URI has one preferred display name\n\tpublic static NAME_TO_URI:Record<string, string> = {}; // multiple unit forms can point to the same URI\n\tpublic static URI_TO_MINCHI:Record<string, [string, number]> = {}; // URI to MInChI, when applicable\n\n\tpublic static setup():void\n\t{\n\t\tfor (let pair of PAIR_UNIT_NAMES)\n\t\t{\n\t\t\tlet uri:string = pair[0], name:string = pair[1];\n\t\t\tthis.STANDARD_LIST.push(uri);\n\t\t\tthis.COMMON_NAMES.push(name);\n\t\t\tthis.URI_TO_NAME[uri] = name;\n\t\t\t\n\t\t\t//this.NAME_TO_URI[name] = uri; (some of them have alternate names)\n\t\t\tfor (let n = 1; n <= pair.length; n++) this.NAME_TO_URI[pair[n]] = uri;\n\t\t}\n\t\tfor (let pair of PAIR_UNIT_MINCHI)\n\t\t{\n\t\t\tlet uri:string = pair[0], name:string = pair[1], scale:number = pair[2];\n\t\t\tthis.URI_TO_MINCHI[uri] = [name, scale];\n\t\t}\n\t\tthis.setup = () => {}; // calling it again is a nop\n\t}\n\n\tpublic static standardList():string[]\n\t{\n\t\tthis.setup();\n\t\treturn this.STANDARD_LIST;\n\t}\n\tpublic static commonNames():string[]\n\t{\n\t\tthis.setup();\n\t\treturn this.COMMON_NAMES;\n\t}\n\tpublic static uriToName(uri:string):string\n\t{\n\t\tthis.setup();\n\t\treturn this.URI_TO_NAME[uri];\n\t}\n\tpublic static nameToURI(name:string):string\n\t{\n\t\tthis.setup();\n\t\treturn this.NAME_TO_URI[name];\n\t}\n\n\t// converts a uri/value pair into mnemonic/value, ready to be exported to MInChI-style units; if the URI is not in the list of\n\t// things that can be converted, returns nulls\n\tpublic static convertToMInChI(uri:string, values:number[]):[string, number[]]\n\t{\n\t\tlet [mnemonic, scale] = this.URI_TO_MINCHI[uri] || [null, null];\n\t\tif (!mnemonic) return [null, null];\n\t\treturn [mnemonic, Vec.mul(values, scale)];\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Dialog} from 'webmolkit/dialog/Dialog';\nimport {ClipboardProxy, ClipboardProxyHandler} from 'webmolkit/ui/ClipboardProxy';\nimport {MixfileComponent} from '../data/Mixfile';\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {OptionList} from 'webmolkit/ui/OptionList';\nimport {deepClone} from 'webmolkit/util/util';\nimport {installInlineCSS} from 'webmolkit/util/Theme';\nimport {InChI} from '../data/InChI';\nimport {KeyValueWidget} from './KeyValueWidget';\nimport {OntologyTree} from 'webmolkit/data/OntologyTree';\nimport {MetadataWidget} from './MetadataWidget';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Mixture} from '../data/Mixture';\nimport {Popup} from 'webmolkit/ui/Popup';\nimport {Units} from '../data/Units';\nimport {MoleculeStream} from 'webmolkit/data/MoleculeStream';\nimport {MolUtil} from 'webmolkit/data/MolUtil';\nimport {Chemistry} from 'webmolkit/data/Chemistry';\n\n/*\n\tHigh level widget for the editing area for a mixture.\n*/\n\nconst CSS_EDITCOMPONENT = `\n\t*.wmk-editcomponent-input\n\t{\n\t}\n\t*.wmk-editcomponent-input::placeholder\n\t{\n\t\tfont-size: 70%;\n\t\tcolor: #D0D0D0;\n\t}\n\t*.wmk-editcomponent-units\n\t{\n\t\tcursor: pointer;\n\t}\n\t*.wmk-editcomponent-units:hover\n\t{\n\t\tbackground-color: #C0C0FF;\n\t\tcursor: pointer;\n\t}\n`;\n\nenum QuantityType\n{\n\tValue = 'Value',\n\tRange = 'Range',\n\tRatio = 'Ratio'\n}\nconst RELATION_VALUES:string[] = ['=', '~', '<', '<=', '>', '>='];\nconst RELATION_LABELS:string[] = ['=', '~', '&lt;', '&le;', '&gt;', '&ge;'];\n\nexport class EditComponent extends Dialog\n{\n\tpublic proxyClip:ClipboardProxy = null;\n\n\tprivate component:MixfileComponent;\n\n\tprivate btnSketch:DOM;\n\tprivate btnSave:DOM;\n\n\tprivate lineName:DOM;\n\tprivate optQuantType:OptionList;\n\tprivate dropQuantRel:DOM;\n\tprivate lineQuantVal1:DOM;\n\tprivate lineQuantVal2:DOM;\n\tprivate lineQuantUnits:DOM;\n\tprivate btnQuantUnits:DOM;\n\tprivate areaDescr:DOM = null;\n\tprivate areaSyn:DOM = null;\n\tprivate lineFormula:DOM;\n\tprivate divWeight:DOM;\n\tprivate lineInChI:DOM;\n\tprivate lineSMILES:DOM;\n\n\tprivate callbackSave:(source?:EditComponent) => void = null;\n\tprivate callbackSketch:(source?:EditComponent) => void = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(component:MixfileComponent, private parentSize:[number, number], parent:DOM = null)\n\t{\n\t\tsuper(parent);\n\n\t\tthis.component = deepClone(component);\n\n\t\tthis.title = 'Edit Component';\n\t\tthis.minPortionWidth = 20;\n\t\tthis.maxPortionWidth = 95;\n\t\t//this.maximumWidth = parentSize[0];\n\t\t//this.maximumHeight = parentSize[1];\n\n\t\tinstallInlineCSS('editcomponent', CSS_EDITCOMPONENT);\n\t}\n\n\tpublic onSave(callback:(source?:EditComponent) => void):void\n\t{\n\t\tthis.callbackSave = callback;\n\t}\n\tpublic onSketch(callback:(source?:EditComponent) => void):void\n\t{\n\t\tthis.callbackSketch = callback;\n\t}\n\n\tpublic getComponent():MixfileComponent {return this.component;}\n\n\t// builds the dialog content\n\tprotected populate():void\n\t{\n\t\tif (this.proxyClip) this.proxyClip.pushHandler(new ClipboardProxyHandler());\n\n\t\tlet buttons = this.buttonsDOM(), body = this.bodyDOM();\n\n\t\t// top section\n\n\t\tif (this.callbackSketch)\n\t\t{\n\t\t\tthis.btnSketch = dom('<button class=\"wmk-button wmk-button-default\">Sketch</button>').appendTo(buttons);\n\t\t\tthis.btnSketch.onClick(() => this.invokeSketcher());\n\t\t}\n\n\t\tbuttons.appendText(' ');\n\t\tbuttons.append(this.domClose); // easy way to reorder\n\n\t\tbuttons.appendText(' ');\n\t\tthis.btnSave = dom('<button class=\"wmk-button wmk-button-primary\">Save</button>').appendTo(buttons);\n\t\tthis.btnSave.onClick(() => this.saveAndClose());\n\n\t\t// main section\n\n\t\tbody.css({'padding': '0 0 0 1em'});\n\t\tlet vertical = dom('<div/>').appendTo(body);\n\t\tvertical.css({'overflow-y': 'scroll', 'height': '100%'});\n\t\tvertical.css({'max-height': this.parentSize[1] + 'px'});\n\t\tvertical.css({'padding-right': '18px', 'padding-bottom': '10px'});\n\n\t\t// first batch of fields\n\n\t\tlet grid1 = this.fieldGrid().appendTo(vertical);\n\n\t\tthis.createFieldName(grid1, 1, 'Name', false);\n\t\tthis.lineName = this.createValueLine(grid1, 1);\n\t\tthis.lineName.setValue(this.component.name);\n\n\t\tthis.createFieldName(grid1, 2, 'Quantity', false);\n\t\tlet divQuant = dom('<div/>').appendTo(grid1);\n\t\tdivQuant.css({'grid-column': 'value', 'grid-row': '2'});\n\t\tthis.createQuantity(divQuant);\n\n\t\tthis.createFieldName(grid1, 3, 'Description', true);\n\t\tthis.areaDescr = this.createValueMultiline(grid1, 3);\n\n\t\tthis.createFieldName(grid1, 4, 'Synonyms', true);\n\t\tthis.areaSyn = this.createValueMultiline(grid1, 4);\n\n\t\tthis.areaDescr.setValue(this.component.description);\n\t\tif (this.component.synonyms) this.areaSyn.setValue(this.component.synonyms.join('\\n'));\n\n\t\t// second batch of fields\n\n\t\tlet grid2 = this.fieldGrid().appendTo(vertical);\n\t\tlet row = 0;\n\n\t\t//this.createFieldName(grid2, ++row, 'Formula', false);\n\t\trow++;\n\t\tthis.createFieldName(grid2, ++row, 'Formula', false);\n\t\tlet divFormula = this.createDiv(grid2, row).css({'display': 'flex', 'align-items': 'center'});\n\t\tthis.lineFormula = dom('<input/>').appendTo(divFormula).css({'flex-grow': '1', 'font': 'inherit'});\n\t\tthis.lineFormula.setValue(this.component.formula);\n\t\tthis.lineFormula.elInput.placeholder = this.calculateFormula();\n\t\tthis.lineFormula.onInput(() => this.calculateWeight());\n\t\tthis.divWeight = dom('<div/>').appendTo(divFormula).css({'flex-grow': '0'});\n\t\tthis.calculateWeight();\n\n\t\tthis.createFieldName(grid2, ++row, 'InChI', false);\n\t\tthis.lineInChI = this.createValueLine(grid2, row);\n\t\tthis.lineInChI.setValue(this.component.inchi);\n\n\t\tif (InChI.isAvailable() && this.component.molfile)\n\t\t{\n\t\t\tlet div = this.createDiv(grid2, ++row);\n\t\t\tlet btn = dom('<button class=\"wmk-button wmk-button-default\">Calculate from Structure</button>').appendTo(div);\n\t\t\tbtn.onClick(() => {this.calculateInChI().then();});\n\t\t}\n\n\t\tthis.createFieldName(grid2, ++row, 'SMILES', false);\n\t\tthis.lineSMILES = this.createValueLine(grid2, row);\n\t\tthis.lineSMILES.setValue(this.component.smiles);\n\n\t\tthis.createFieldName(grid2, ++row, 'Identifiers', true);\n\t\tlet editIdentifiers = new KeyValueWidget(this.component.identifiers, (dict) =>\n\t\t{\n\t\t\tthis.component.identifiers = dict;\n\t\t});\n\t\teditIdentifiers.render(dom('<div/>').appendTo(grid2).css({'grid-area': `${row} / value`}));\n\n\t\tthis.createFieldName(grid2, ++row, 'Links', true);\n\t\tlet editLinks = new KeyValueWidget(this.component.links, (dict) =>\n\t\t{\n\t\t\tthis.component.links = dict;\n\t\t});\n\t\teditLinks.render(dom('<div/>').appendTo(grid2).css({'grid-area': `${row} / value`}));\n\n\t\tif (OntologyTree.main && OntologyTree.main.getRoots().length > 0)\n\t\t{\n\t\t\tthis.createFieldName(grid2, ++row, 'Metadata', true);\n\t\t\tlet editMetadata = new MetadataWidget(this.component.metadata, (metadata) =>\n\t\t\t{\n\t\t\t\tthis.component.metadata = Vec.notBlank(metadata) ? metadata : undefined;\n\t\t\t});\n\t\t\teditMetadata.render(dom('<div/>').appendTo(grid2).css({'grid-area': `${row} / value`}));\n\t\t}\n\n\t\tthis.lineName.grabFocus();\n\n\t\tfor (let dom of body.findAll('input')) dom.onKeyDown((event) => this.trapEscape(event, true));\n\t\tfor (let dom of body.findAll('textarea')) dom.onKeyDown((event) => this.trapEscape(event, false));\n\t\tfor (let dom of body.findAll('input,textarea')) dom.elInput.spellcheck = false;\n\t}\n\n\tpublic close():void\n\t{\n\t\tif (this.proxyClip) this.proxyClip.popHandler();\n\t\tsuper.close();\n\t}\n\n\t// ------------ private methods ------------\n\n\t// assuming that something is different, refreshes the current component information and closes\n\tprivate saveAndClose():void\n\t{\n\t\tlet nullifyBlank = (str:string):string => str === '' ? null : str;\n\t\tlet splitLines = (str:string):string[] =>\n\t\t{\n\t\t\tlet lines = str.split('\\n').filter((line) => line.length > 0);\n\t\t\treturn lines.length > 0 ? lines : null;\n\t\t};\n\t\tlet splitKeys = (str:string):Record<string, any> =>\n\t\t{\n\t\t\tlet dict:Record<string, any> = null;\n\t\t\tfor (let line of str.split('\\n'))\n\t\t\t{\n\t\t\t\tlet eq = line.indexOf('=');\n\t\t\t\tif (eq < 0) continue;\n\t\t\t\tif (dict == null) dict = {};\n\t\t\t\tdict[line.substring(0, eq)] = line.substring(eq + 1);\n\t\t\t}\n\t\t\treturn dict;\n\t\t};\n\n\t\tthis.component.name = nullifyBlank(this.lineName.getValue());\n\n\t\tlet qtype = this.optQuantType.getSelectedValue();\n\t\t[this.component.ratio, this.component.quantity, this.component.error] = [null, null, null];\n\t\tlet strQuant1 = this.lineQuantVal1.getValue().trim(), strQuant2 = this.lineQuantVal2.getValue().trim();\n\t\tif (qtype == QuantityType.Value)\n\t\t{\n\t\t\tif (strQuant1) this.component.quantity = parseFloat(strQuant1);\n\t\t\tif (strQuant2) this.component.error = parseFloat(strQuant2);\n\t\t\tthis.component.units = this.lineQuantUnits.getValue().trim();\n\t\t}\n\t\telse if (qtype == QuantityType.Range)\n\t\t{\n\t\t\tthis.component.quantity = [parseFloat(strQuant1), parseFloat(strQuant2)];\n\t\t\tthis.component.relation = null;\n\t\t\tthis.component.units = this.lineQuantUnits.getValue().trim();\n\t\t}\n\t\telse if (qtype == QuantityType.Ratio)\n\t\t{\n\t\t\tthis.component.ratio = [parseFloat(strQuant1), parseFloat(strQuant2)];\n\t\t\tthis.component.relation = null;\n\t\t\tthis.component.units = null;\n\t\t}\n\n\t\tif (!Mixture.hasQuantity(this.component))\n\t\t{\n\t\t\tthis.component.quantity = null;\n\t\t\tthis.component.error = null;\n\t\t\tthis.component.ratio = null;\n\t\t\tthis.component.units = null;\n\t\t\tthis.component.relation = null;\n\t\t}\n\n\t\tif (this.areaDescr) this.component.description = nullifyBlank(this.areaDescr.getValue());\n\n\t\tthis.component.synonyms = splitLines(this.areaSyn.getValue());\n\n\t\tthis.component.formula = nullifyBlank(this.lineFormula.getValue());\n\t\tthis.component.inchi = nullifyBlank(this.lineInChI.getValue());\n\t\tthis.component.smiles = nullifyBlank(this.lineSMILES.getValue());\n\n\t\t// remove explicit nulls, for clarity\n\t\t//Object.keys(this.component).forEach((key:string) => {if ((<any>this.component)[key] == null) delete (<any>this.component)[key];});\n\n\t\t//console.log(JSON.stringify(this.component));\n\t\tthis.callbackSave(this);\n\t}\n\n\t// change to sketch mode: close this dialog, save everything, then tell the parent to sketch instead\n\tprivate invokeSketcher():void\n\t{\n\t\tthis.saveAndClose();\n\t\tthis.callbackSketch(this);\n\t}\n\n\t// creates a 2-column grid for field/value entry\n\tprivate fieldGrid():DOM\n\t{\n\t\tlet div = dom('<div/>').css({'display': 'grid', 'width': '100%', 'margin': '1em 0 1em 0'});\n\t\tdiv.css({'align-items': 'center'}); // would be 'baseline', but breaks with textarea\n\t\tdiv.css({'justify-content': 'start', 'grid-row-gap': '0.5em'});\n\t\tdiv.css({'grid-template-columns': '[start field] max-content [value] 1fr [end]'});\n\t\treturn div;\n\t}\n\n\t// creates a field name for inclusion in the grid\n\tprivate createFieldName(parent:DOM, row:number, text:string, topAlign:boolean):DOM\n\t{\n\t\tlet div = dom('<div/>').appendTo(parent);\n\t\tdiv.css({'grid-column': 'field', 'grid-row': row.toString(), 'align-self': topAlign ? 'baseline' : 'center'});\n\t\tif (topAlign) div.css({'padding-top': '0.2em'}); // baseline fudge\n\t\tdiv.css({'padding-right': '0.5em', 'font-weight': 'bold'});\n\t\tdiv.setText(text);\n\t\treturn div;\n\t}\n\n\t// returns single/multi-line editors\n\tprivate createValueLine(parent:DOM, row:number):DOM\n\t{\n\t\tlet div = dom('<div/>').appendTo(parent).css({'grid-area': `${row} / value`});\n\t\tlet input = dom('<input/>').appendTo(div);\n\t\tinput.css({'width': 'calc(100% - 4px)', 'padding': '0', 'font': 'inherit'});\n\t\treturn input;\n\t}\n\tprivate createValueMultiline(parent:DOM, row:number):DOM\n\t{\n\t\tlet div = dom('<div/>').appendTo(parent).css({'grid-area': `${row} / value`});\n\t\tlet area = dom('<textarea/>').appendTo(div);\n\t\tarea.attr({'rows': '5'});\n\t\tarea.css({'width': 'calc(100% - 4px)', 'padding': '0', 'font': 'inherit'});\n\t\treturn area;\n\t}\n\n\tprivate createDiv(parent:DOM, row:number):DOM\n\t{\n\t\tlet div = dom('<div/>').appendTo(parent);\n\t\tdiv.css({'grid-column': 'value', 'grid-row': row.toString()});\n\t\treturn div;\n\t}\n\n\t// make it so that line/text entry boxes trap the escape key to close the dialog box\n\tprivate trapEscape(event:KeyboardEvent, andEnter:boolean):void\n\t{\n\t\tif (event.keyCode == 27)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.close();\n\t\t}\n\t\telse if (andEnter && event.keyCode == 13)\n\t\t{\n\t\t\tif (this.interpretQuantString()) return;\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.saveAndClose();\n\t\t}\n\t}\n\n\t// creates the quantity data entry objects, which are somewhat fiddly and multistate\n\tprivate createQuantity(parent:DOM):void\n\t{\n\t\tlet flex = dom('<div/>').appendTo(parent);\n\t\tflex.css({'display': 'flex', 'align-items': 'center'});\n\t\tlet box = ():DOM => dom('<div style=\"padding-left: 0.5em;\"/>').appendTo(flex);\n\n\t\tthis.optQuantType = new OptionList([QuantityType.Value, QuantityType.Range, QuantityType.Ratio]);\n\t\tthis.optQuantType.render(flex);\n\n\t\tthis.dropQuantRel = this.makeDropdownGroup(box(), this.component.relation, RELATION_VALUES, RELATION_LABELS,\n\t\t\t\t\t\t\t\t\t(value:string, label:string) => {this.component.relation = value;});\n\n\t\tthis.lineQuantVal1 = dom('<input/>').appendTo(box()).class('wmk-editcomponent-input');\n\t\tthis.lineQuantVal1.attr({'size': '10'});\n\t\tthis.lineQuantVal1.onChange(() => this.interpretQuantString());\n\n\t\tlet spanGap = dom('<span/>').appendTo(flex).css({'padding': '0 0.5em 0 0.5em'});\n\n\t\tthis.lineQuantVal2 = dom('<input/>').appendTo(box()).class('wmk-editcomponent-input');\n\t\tthis.lineQuantVal2.attr({'size': '10'});\n\n\t\tlet qubox = box();\n\t\tthis.lineQuantUnits = dom('<input/>').appendTo(qubox).class('wmk-editcomponent-input');\n\t\tthis.lineQuantUnits.attr({'size': '10', 'placeholder': 'units'});\n\t\tthis.btnQuantUnits = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(qubox).css({'margin-left': '0.2em'});\n\t\tthis.btnQuantUnits.setText('\\u{25BC}');\n\t\tthis.btnQuantUnits.onClick(() => this.selectDropUnits());\n\n\t\tlet changeToValue = ():void =>\n\t\t{\n\t\t\tthis.dropQuantRel.setCSS('display', 'block');\n\t\t\tspanGap.setHTML('&plusmn;');\n\t\t\tthis.lineQuantUnits.setCSS('display', 'inline-block');\n\t\t\tthis.btnQuantUnits.setCSS('display', 'inline-block');\n\t\t};\n\t\tlet changeToRange = ():void =>\n\t\t{\n\t\t\tthis.dropQuantRel.setCSS('display', 'none');\n\t\t\tspanGap.setHTML('to');\n\t\t\tthis.lineQuantUnits.setCSS('display', 'inline-block');\n\t\t\tthis.btnQuantUnits.setCSS('display', 'inline-block');\n\t\t};\n\t\tlet changeToRatio = ():void =>\n\t\t{\n\t\t\tthis.dropQuantRel.setCSS('display', 'none');\n\t\t\tspanGap.setHTML('/');\n\t\t\tthis.lineQuantUnits.setCSS('display', 'none');\n\t\t\tthis.btnQuantUnits.setCSS('display', 'none');\n\t\t};\n\n\t\tif (this.component.ratio != null)\n\t\t{\n\t\t\tthis.optQuantType.setSelectedValue(QuantityType.Ratio);\n\t\t\tif (this.component.ratio)\n\t\t\t{\n\t\t\t\tlet [numer, denom] = this.component.ratio;\n\t\t\t\tthis.lineQuantVal1.setValue(numer.toString());\n\t\t\t\tthis.lineQuantVal2.setValue(denom.toString());\n\t\t\t}\n\t\t\tchangeToRatio();\n\t\t}\n\t\telse if (Array.isArray(this.component.quantity))\n\t\t{\n\t\t\tthis.optQuantType.setSelectedValue(QuantityType.Range);\n\t\t\tlet [low, high] = this.component.quantity;\n\t\t\tif (low != null) this.lineQuantVal1.setValue(low.toString());\n\t\t\tif (high != null) this.lineQuantVal2.setValue(high.toString());\n\t\t\tthis.lineQuantUnits.setValue(this.component.units);\n\t\t\tchangeToRange();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.optQuantType.setSelectedValue(QuantityType.Value);\n\t\t\tif (this.component.quantity != null) this.lineQuantVal1.setValue(this.component.quantity.toString());\n\t\t\tif (this.component.error != null) this.lineQuantVal2.setValue(this.component.error.toString());\n\t\t\tthis.lineQuantUnits.setValue(this.component.units);\n\t\t\tchangeToValue();\n\t\t}\n\n\t\tthis.optQuantType.callbackSelect = (idx:number) =>\n\t\t{\n\t\t\tif (idx == 0) changeToValue();\n\t\t\telse if (idx == 1) changeToRange();\n\t\t\telse if (idx == 2) changeToRatio();\n\t\t};\n\t}\n\n\t// creates a dropdown list with a prescribed list of choices; the first one will be selected if current matches nothing\n\tprivate makeDropdownGroup(parent:DOM, current:string, values:string[], labels:string[], changeFunc:(value:string, label:string) => void):DOM\n\t{\n\t\tlet drop = dom('<select/>').appendTo(parent);\n\t\tdrop.css({'height': '2.3em'});\n\t\tfor (let n = 0; n < values.length; n++)\n\t\t{\n\t\t\tlet opt = dom('<option/>').appendTo(drop);\n\t\t\topt.setAttr('value', n.toString());\n\t\t\topt.setHTML(labels[n]);\n\t\t\tif (current == values[n] || current == labels[n]) opt.setAttr('selected', 'true');\n\t\t}\n\t\tdrop.onChange(() => {let idx = parseInt(drop.getValue()); changeFunc(values[idx], labels[idx]);});\n\t\treturn drop;\n\t}\n\n\tprivate selectDropUnits():void\n\t{\n\t\tlet popup = new Popup(this.btnQuantUnits);\n\t\tpopup.callbackPopulate = () =>\n\t\t{\n\t\t\tlet body = popup.bodyDOM();\n\t\t\tfor (let label of Units.commonNames())\n\t\t\t{\n\t\t\t\tlet div = dom('<div/>').appendTo(body).class('wmk-editcomponent-units');\n\t\t\t\tdiv.setText(label);\n\t\t\t\tdiv.onClick(() =>\n\t\t\t\t{\n\t\t\t\t\tthis.lineQuantUnits.setValue(label);\n\t\t\t\t\tpopup.close();\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\tpopup.open();\n\t}\n\n\t// special deal: when typing in extended content to the regular value entry box, optionally break up strings that contain\n\t// a more complete description, e.g. quantity *and* units; returns true if it did something interesting\n\tprivate interpretQuantString():boolean\n\t{\n\t\tlet qstr = this.lineQuantVal1.getValue().trim();\n\n\t\t// scrape out any \"relation\" properties from the beginning first of all\n\t\tlet rel = '';\n\t\tfor (let pfx of RELATION_VALUES) if (qstr.startsWith(pfx) && pfx.length > rel.length) rel = pfx;\n\t\tif (rel) qstr = qstr.substring(rel.length);\n\t\telse if (qstr.startsWith('\\u{2264}')) [rel, qstr] = ['<=', qstr.substring(1)];\n\t\telse if (qstr.startsWith('\\u{2265}')) [rel, qstr] = ['>=', qstr.substring(1)];\n\n\t\t// scrape off units from the end\n\t\tlet units = '';\n\t\tfor (let [name, uri] of Object.entries(Units.NAME_TO_URI))\n\t\t{\n\t\t\tlet regname = name.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // regexify the unit name\n\t\t\tlet regex = new RegExp(`^(.*[\\\\d\\\\s\\)])(${regname})$`);\n\t\t\tlet match = regex.exec(qstr);\n\t\t\tif (!match) continue;\n\t\t\tqstr = match[1];\n\t\t\tunits = Units.URI_TO_NAME[uri];\n\t\t\tbreak;\n\t\t}\n\n\t\tlet isNum = (str:string):boolean =>\n\t\t{\n\t\t\tif (str.startsWith('.')) str = '0' + str;\n\t\t\tif (!/^-?[0-9]+\\.?[0-9eE]*$/.test(str)) return false;\n\t\t\treturn !isNaN(parseFloat(str));\n\t\t};\n\n\t\tqstr = qstr.trim();\n\t\tlet qtype:QuantityType = null;\n\t\tlet qnum1 = '', qnum2 = '';\n\t\tlet match = /^([0-9\\-\\.eE]+)-([0-9\\-\\.eE]+)$/.exec(qstr); // A-B\n\t\tif (match)\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Range, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2) || !units) return false;\n\t\t}\n\t\telse if (match = /^([0-9\\-\\.eE]+)\\.\\.([0-9\\-\\.eE]+)$/.exec(qstr)) // A..B\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Range, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2) || !units) return false;\n\t\t}\n\t\telse if (match = /^([0-9\\-\\.eE]+)\\(([0-9\\-\\.eE]+)\\)$/.exec(qstr)) // A(B)\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Value, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2) || !units) return false;\n\t\t}\n\t\telse if (match = /^([0-9\\-\\.eE]+)\\:([0-9\\-\\.eE]+)$/.exec(qstr)) // A:B\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Ratio, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2)) return false;\n\t\t}\n\t\telse if (match = /^([0-9\\-\\.eE]+)\\/([0-9\\-\\.eE]+)$/.exec(qstr)) // A/B\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Ratio, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2)) return false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (!isNum(qstr) || !units) return false;\n\t\t\t[qtype, qnum1] = [QuantityType.Value, qstr];\n\t\t}\n\n\t\tthis.optQuantType.setSelectedValue(qtype);\n\t\tthis.dropQuantRel.setValue(Math.max(0, RELATION_VALUES.indexOf(rel)).toString());\n\t\tthis.lineQuantVal1.setValue(qnum1);\n\t\tthis.lineQuantVal2.setValue(qnum2);\n\t\tthis.lineQuantUnits.setValue(units);\n\t\tthis.component.units = units;\n\t\treturn true;\n\t}\n\n\t// uses the structure (if any) to calculate the InChI, and fill in the field value\n\tprivate async calculateInChI():Promise<void>\n\t{\n\t\tif (!InChI.isAvailable()) return;\n\t\t//let mol = this.sketcher.getMolecule();\n\t\tlet mol = MoleculeStream.readUnknown(this.component.molfile);\n\t\tif (MolUtil.isBlank(mol))\n\t\t{\n\t\t\t//alert('Draw a molecule first, then calculate the InChI.');\n\t\t\treturn;\n\t\t}\n\n\t\ttry\n\t\t{\n\t\t\tlet inchi = Vec.first(await InChI.makeInChI(mol));\n\t\t\tthis.lineInChI.setValue(inchi);\n\t\t}\n\t\tcatch (ex) {alert('InChI generation failed: ' + ex);}\n\t}\n\n\t// if there is a structure, calculate MF\n\tprivate calculateFormula():string\n\t{\n\t\tif (!this.component.molfile) return '';\n\t\tlet mol = MoleculeStream.readUnknown(this.component.molfile);\n\t\tif (MolUtil.isBlank(mol)) return '';\n\t\tfor (let n = mol.numAtoms; n >= 1; n--) if (mol.atomicNumber(n) == 0) mol.deleteAtomAndBonds(n);\n\t\treturn MolUtil.molecularFormula(mol);\n\t}\n\n\t// derive from MF field, if any\n\tprivate calculateWeight():void\n\t{\n\t\tlet mw = 0;\n\n\t\tlet mf = this.lineFormula.getValue();\n\t\tif (!mf) mf = this.lineFormula.elInput.placeholder;\n\n\t\twhile (mf)\n\t\t{\n\t\t\tlet match = mf.match(/^([A-Z][a-z]?)(\\d*)(.*?)$/);\n\t\t\tif (!match) {mw = 0; break;}\n\t\t\tlet atno = Chemistry.ELEMENTS.indexOf(match[1]);\n\t\t\tif (atno <= 0) {mw = 0; break;}\n\t\t\tlet num = 1;\n\t\t\tif (match[2])\n\t\t\t{\n\t\t\t\tnum = parseInt(match[2]);\n\t\t\t\tif (num <= 0) {mw = 0; break;}\n\t\t\t}\n\t\t\tmw += Chemistry.NATURAL_ATOMIC_WEIGHTS[atno] * num;\n\t\t\tmf = match[3];\n\t\t}\n\n\t\tif (mw > 0)\n\t\t{\n\t\t\tthis.divWeight.css({'padding-left': '0.5em'});\n\t\t\tthis.divWeight.setText(mw.toFixed(3) + ' g/mol');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.divWeight.css({'padding-left': '0'});\n\t\t\tthis.divWeight.setText('');\n\t\t}\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Mixture} from './Mixture';\nimport {MoleculeStream} from 'webmolkit/data/MoleculeStream';\nimport {StandardUnits, Units} from './Units';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {ActivityType, MoleculeActivity, SketchState} from 'webmolkit/sketcher/MoleculeActivity';\nimport {MixfileComponent} from './Mixfile';\n\n/*\n\tMixture normalisation options: recommendations for how to make a mixture more conformant. It is up to the caller\n\tto decide what to do with this information.\n*/\n\nexport interface NormMixtureNote\n{\n\torigin:number[];\n\n\tstereoEnum?:string[]; // if defined, contains stereo-enumerated versions of current\n\n\t// units converted into concentration, if both possible & necessary\n\tconcQuantity?:number | number[]; // a concentration numeric which is associated with the units below (two numbers in case of a range)\n\tconcError?:number; // optional standard error (applies to quantity when it's a scalar)\n\tconcUnits?:string; // units for quantity (e.g. %, mol/L, g, etc.)\n\tconcRelation?:string;\n}\n\nenum AbsType\n{\n\tNone,\n\tMass, // reference scale: g\n\tVolume, // reference scale: L\n\tMoles, // reference scale: mol\n}\n\nexport class NormMixture\n{\n\tpublic notes:NormMixtureNote[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor(private mixture:Mixture)\n\t{\n\t}\n\n\tpublic analyse():void\n\t{\n\t\tlet origins = this.mixture.getOrigins();\n\t\tlet compList = origins.map((origin) => this.mixture.getComponent(origin));\n\n\t\tfor (let n = 0; n < origins.length; n++)\n\t\t{\n\t\t\tlet note:NormMixtureNote = {origin: origins[n]};\n\n\t\t\t// stereocentres get expanded out\n\t\t\tlet comp = compList[n];\n\t\t\tif (comp.molfile && Vec.isBlank(comp.contents))\n\t\t\t{\n\t\t\t\tlet mol = MoleculeStream.readUnknown(comp.molfile);\n\t\t\t\tif (!mol) continue;\n\t\t\t\tlet stereo = this.enumerateStereo(mol);\n\t\t\t\tif (Vec.notBlank(stereo)) note.stereoEnum = stereo.map((mol) => MoleculeStream.writeMDLMOL(mol));\n\t\t\t}\n\n\t\t\tthis.notes.push(note);\n\t\t}\n\n\t\tlet childIndexes:number[][] = [];\n\t\tfor (let n = 0; n < origins.length; n++)\n\t\t{\n\t\t\tchildIndexes[n] = [];\n\t\t\tlet o = origins[n];\n\t\t\tfor (let i = n + 1; i < origins.length; i++)\n\t\t\t\tif (origins[i].length == o.length + 1 && Vec.equals(o, origins[i].slice(0, o.length))) childIndexes[n].push(i);\n\t\t}\n\n\t\t// conversion of \"absolute units\" to concentrations, where possible\n\t\tlet sumType = new Array(origins.length).fill(AbsType.None);\n\t\tlet sumAmount1 = Vec.numberArray(null, origins.length);\n\t\tlet sumAmount2 = Vec.numberArray(null, origins.length);\n\t\tlet sumError = Vec.numberArray(null, origins.length);\n\t\twhile (true)\n\t\t{\n\t\t\tlet modified = false;\n\n\t\t\tfor (let n = 0; n < origins.length; n++)\n\t\t\t{\n\t\t\t\tlet comp = compList[n], note = this.notes[n];\n\n\t\t\t\tif (sumType[n] == AbsType.None)\n\t\t\t\t{\n\t\t\t\t\t[sumType[n], sumAmount1[n], sumAmount2[n], sumError[n]] = this.toAbsoluteUnits(comp);\n\t\t\t\t\tif (sumType[n] != AbsType.None) modified = true;\n\t\t\t\t}\n\n\t\t\t\tif (Vec.isBlank(comp.contents)) continue;\n\n\t\t\t\t// if there's no absolute quantity presently available, see if we can add up the sub-components\n\t\t\t\tif (sumType[n] == AbsType.None)\n\t\t\t\t{\n\t\t\t\t\tlet amount = 0, childType = AbsType.None;\n\t\t\t\t\tfor (let i of childIndexes[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (sumType[i] == AbsType.None || sumAmount2[i] != null ||\n\t\t\t\t\t\t\t(childType != AbsType.None && sumType[i] != childType))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tchildType = AbsType.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchildType = sumType[i];\n\t\t\t\t\t\tamount += sumAmount1[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (childType != AbsType.None)\n\t\t\t\t\t{\n\t\t\t\t\t\tsumType[n] = childType;\n\t\t\t\t\t\tsumAmount1[n] = amount;\n\t\t\t\t\t\tmodified = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if current type is an absolute unit, see if all-but-one of the children have that same type\n\t\t\t\tif (sumType[n] != AbsType.None && childIndexes[n].length >= 2)\n\t\t\t\t{\n\t\t\t\t\tlet idxOne = -1, sum = 0;\n\t\t\t\t\tfor (let i of childIndexes[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (sumType[i] == AbsType.None)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (idxOne >= 0) {idxOne = -1; break;} // only one allowed\n\t\t\t\t\t\t\tidxOne = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (sumType[i] != sumType[n]) {idxOne = -1; break;} // can't be defined-but-different\n\t\t\t\t\t\telse if (sumAmount2[i] != null) {idxOne = -1; break;} // ranges disqualify\n\t\t\t\t\t\telse sum += sumAmount1[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (idxOne >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tsumType[idxOne] = sumType[n];\n\t\t\t\t\t\tsumAmount1[idxOne] = sumAmount1[n] - sum;\n\t\t\t\t\t\tmodified = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!modified) break;\n\t\t}\n\n\t\t// now use derived absolute units to infer concentration-types\n\t\tfor (let n = 0; n < origins.length; n++) if (sumType[n] != AbsType.None)\n\t\t{\n\t\t\tfor (let i of childIndexes[n]) if (sumType[i] != AbsType.None)\n\t\t\t{\n\t\t\t\tlet scale = 0, denom = sumAmount1[n], uri:string = null;\n\t\t\t\tif (sumType[i] == AbsType.Mass)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) [scale, uri] = [100 / denom, StandardUnits.pcWW];\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [100 / denom, StandardUnits.pcWV];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) {}\n\t\t\t\t}\n\t\t\t\telse if (sumType[i] == AbsType.Volume)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) {}\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [100 / denom, StandardUnits.pcVV];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) {}\n\t\t\t\t}\n\t\t\t\telse if (sumType[i] == AbsType.Moles)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) {}\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [1.0 / denom, StandardUnits.mol_L];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) [scale, uri] = [100 / denom, StandardUnits.pcMM];\n\t\t\t\t}\n\n\t\t\t\tif (uri != null)\n\t\t\t\t{\n\t\t\t\t\tif (sumAmount2[i] == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.notes[i].concQuantity = sumAmount1[i] * scale;\n\t\t\t\t\t\tthis.notes[i].concError = sumError[i] == null ? null : sumError[i] * scale;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.notes[i].concQuantity = [sumAmount1[i] * scale, sumAmount2[i] * scale];\n\t\t\t\t\t}\n\t\t\t\t\tthis.notes[i].concUnits = Units.uriToName(uri);\n\t\t\t\t\tthis.notes[i].concRelation = compList[n].relation;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic findNote(origin:number[]):NormMixtureNote\n\t{\n\t\tfor (let note of this.notes) if (Vec.equals(origin, note.origin)) return note;\n\t\treturn null;\n\t}\n\n\t// ------------ private methods ------------\n\n\t// if the given molecule has stereogenic centres (i.e. wavy bonds), enumerate them explicitly\n\tprivate enumerateStereo(mol:Molecule):Molecule[]\n\t{\n\t\tlet splitMolecule = (mol:Molecule):Molecule[] =>\n\t\t{\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++) if (mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN)\n\t\t\t{\n\t\t\t\tlet mol1 = mol.clone(), mol2 = mol.clone();\n\t\t\t\tif (mol.bondOrder(n) == 1)\n\t\t\t\t{\n\t\t\t\t\t// make up & down versions of the bond\n\t\t\t\t\tmol1.setBondType(n, Molecule.BONDTYPE_DECLINED);\n\t\t\t\t\tmol2.setBondType(n, Molecule.BONDTYPE_INCLINED);\n\t\t\t\t\treturn [mol1, mol2];\n\t\t\t\t}\n\t\t\t\telse if (mol.bondOrder(n) == 2)\n\t\t\t\t{\n\t\t\t\t\t// for a cis/trans double bond, use the sketcher algorithm to rotate it; if the rotation is rejected,\n\t\t\t\t\t// it'll just return the input molecule, with the stereolabel removed\n\t\t\t\t\tlet mol1 = mol.clone();\n\t\t\t\t\tmol1.setBondType(n, Molecule.BONDTYPE_NORMAL);\n\n\t\t\t\t\tlet mol2:Molecule = null;\n\t\t\t\t\tif (!mol.bondInRing(n))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet state:SketchState = {mol: mol1, currentAtom: 0, currentBond: n, selectedMask: null};\n\t\t\t\t\t\tlet activ = new MoleculeActivity(state, ActivityType.BondRotate, {});\n\t\t\t\t\t\tactiv.execute();\n\t\t\t\t\t\tif (!activ.errmsg && activ.output.mol) mol2 = activ.output.mol;\n\t\t\t\t\t}\n\t\t\t\t\treturn mol2 ? [mol1, mol2] : [mol1];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tlet list:Molecule[] = [mol];\n\t\tfor (let n = 0; n < list.length; n++)\n\t\t{\n\t\t\tlet emols = splitMolecule(list[n]);\n\t\t\tif (!emols) continue;\n\n\t\t\tlist[n] = emols[0];\n\t\t\tfor (let i = emols.length - 1; i >= 1; i--) list.splice(n + 1, 0, emols[i]);\n\t\t\tn--;\n\t\t}\n\n\t\treturn list.length > 1 ? list : null;\n\t}\n\n\t// converts the units within the component to \"absolute\" form, at a singular scale; return is type followed by\n\t// quantity1, quantity2, error (to capture ranges & errors, where applicable)\n\tprivate toAbsoluteUnits(comp:MixfileComponent):[AbsType, number, number, number]\n\t{\n\t\tif (!comp.units || comp.quantity == null /*|| typeof comp.quantity != 'number'*/) return [AbsType.None, null, null, null];\n\t\tlet uri = Units.nameToURI(comp.units);\n\t\tif (!uri) return [AbsType.None, null, null, null];\n\n\t\tlet scale = 0, type = AbsType.None;\n\n\t\tif (uri == StandardUnits.kg) [scale, type] = [1E3, AbsType.Mass];\n\t\telse if (uri == StandardUnits.g) [scale, type] = [1, AbsType.Mass];\n\t\telse if (uri == StandardUnits.mg) [scale, type] = [1E-3, AbsType.Mass];\n\t\telse if (uri == StandardUnits.ug) [scale, type] = [1E-6, AbsType.Mass];\n\t\telse if (uri == StandardUnits.ng) [scale, type] = [1E-9, AbsType.Mass];\n\t\telse if (uri == StandardUnits.L) [scale, type] = [1, AbsType.Volume];\n\t\telse if (uri == StandardUnits.mL) [scale, type] = [1E-3, AbsType.Volume];\n\t\telse if (uri == StandardUnits.uL) [scale, type] = [1E-6, AbsType.Volume];\n\t\telse if (uri == StandardUnits.nL) [scale, type] = [1E-9, AbsType.Volume];\n\t\telse if (uri == StandardUnits.mol) [scale, type] = [1, AbsType.Moles];\n\t\telse if (uri == StandardUnits.mmol) [scale, type] = [1E-3, AbsType.Moles];\n\t\telse if (uri == StandardUnits.umol) [scale, type] = [1E-6, AbsType.Moles];\n\t\telse if (uri == StandardUnits.nmol) [scale, type] = [1E-9, AbsType.Moles];\n\t\telse return [AbsType.None, null, null, null];\n\n\t\tif (typeof comp.quantity == 'number')\n\t\t{\n\t\t\tlet error = comp.error == null ? null : comp.error * scale;\n\t\t\treturn [type, (comp.quantity as number) * scale, null, error];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet [lo, hi] = comp.quantity as number[];\n\t\t\treturn [type, lo * scale, hi * scale, null];\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {MetaVector, TextAlign} from 'webmolkit/gfx/MetaVector';\nimport {ArrangeMixture, ArrangeMixtureComponent, ArrangeMixtureLine} from './ArrangeMixture';\nimport {Box} from 'webmolkit/util/Geom';\nimport {ArrangeMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {DrawMolecule} from 'webmolkit/gfx/DrawMolecule';\n\n/*\n\tDrawing a Mixfile, which has been rendered.\n*/\n\nexport class DrawMixture\n{\n\tpublic hoverIndex = -1; // component to give a faint tinting to (for hover-over effect)\n\tpublic activeIndex = -1; // component that is actively engaged with UI\n\tpublic selectedIndex = -1; // component that is passively selected\n\n\tpublic callbackDrawNameLine:(comp:ArrangeMixtureComponent, line:ArrangeMixtureLine, gfx:MetaVector, box:Box) => boolean = null;\n\n\tprivate measure:ArrangeMeasurement;\n\tprivate policy:RenderPolicy;\n\n\tprivate scale:number;\n\tprivate invScale:number;\n\n\t// --------------------- public methods ---------------------\n\n\tconstructor(private layout:ArrangeMixture, private vg:MetaVector)\n\t{\n\t\tthis.measure = layout.measure;\n\t\tthis.policy = layout.policy;\n\t\tthis.scale = layout.scale;\n\t\tthis.invScale = 1.0 / this.scale;\n\t}\n\n\t// renders the experiment, one component at a time\n\tpublic draw():void\n\t{\n\t\tfor (let comp of this.layout.components) if (comp.parentIdx >= 0)\n\t\t\tthis.drawConnection(this.layout.components[comp.parentIdx], comp);\n\n\t\tfor (let n = 0; n < this.layout.components.length; n++) this.drawComponent(n);\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\tprivate drawConnection(parent:ArrangeMixtureComponent, child:ArrangeMixtureComponent):void\n\t{\n\t\tlet x1 = parent.boundary.maxX(), x2 = child.boundary.minX();\n\t\tlet y1 = parent.boundary.midY(), y2 = child.boundary.midY();\n\t\t//let xm = 0.5 * (x1 + x2);\n\t\tlet xm = x1 + 0.25 * this.scale;\n\t\tlet ym = 0.5 * (y1 + y2);\n\t\tlet d = 4, xd = d, yd = y1 < y2 - 1 ? -d : y1 > y2 + 1 ? d : 0;\n\n\t\tlet px = [x1, xm - xd, xm, xm, xm, xm, xm + xd, x2];\n\t\tlet py = [y1, y1, y1, y1 - yd, y2 + yd, y2, y2, y2];\n\t\tlet lsz = this.scale * 0.1;\n\t\tthis.vg.drawPath(px, py, [false, false, true, false, false, true, false, false], false, 0x000000, lsz, MetaVector.NOCOLOUR, false);\n\t}\n\n\tprivate drawComponent(idx:number):void\n\t{\n\t\tlet comp = this.layout.components[idx];\n\n\t\tlet box = comp.outline.clone();\n\t\tbox.offsetBy(comp.boundary.x, comp.boundary.y);\n\t\tlet bg = 0xF8F8F8;\n\t\tif (idx == this.activeIndex) bg = 0x8296E4;\n\t\telse if (idx == this.selectedIndex) bg = 0xA9BBFF;\n\t\telse if (idx == this.hoverIndex) bg = 0xE0E0E0;\n\n\t\tthis.vg.drawRect(box.x, box.y, box.w, box.h, 0x808080, 1, bg);\n\n\t\tif (comp.molLayout) new DrawMolecule(comp.molLayout, this.vg).draw();\n\n\t\tif (comp.nameLines.length > 0)\n\t\t{\n\t\t\tlet x = box.x, cx = x + comp.nameBox.midX(), y = box.y + comp.nameBox.y;\n\t\t\tfor (let line of comp.nameLines)\n\t\t\t{\n\t\t\t\tlet wad = this.measure.measureText(line.text, comp.fontSize), h = wad[1] + 2 * wad[2];\n\t\t\t\tlet override = this.callbackDrawNameLine && this.callbackDrawNameLine(comp, line, this.vg, new Box(x, y, box.w, h));\n\t\t\t\tif (!override) this.vg.drawText(cx, y, line.text, comp.fontSize, line.col, TextAlign.Centre | TextAlign.Top);\n\t\t\t\ty += h;\n\t\t\t}\n\t\t}\n\n\t\tif (comp.collapseBox)\n\t\t{\n\t\t\tlet cbox = comp.collapseBox.clone();\n\t\t\tcbox.offsetBy(comp.boundary.x, comp.boundary.y);\n\t\t\tthis.vg.drawRect(cbox.x, cbox.y, cbox.w, cbox.h, 0x808080, 1, 0xF8F8F8);\n\t\t\tlet cx = cbox.midX(), cy = cbox.midY(), d = Math.min(cbox.w, cbox.h) * 0.4, sz = d * 0.2;\n\t\t\tthis.vg.drawLine(cx - d, cy, cx + d, cy, 0x000000, sz);\n\t\t\tif (comp.isCollapsed) this.vg.drawLine(cx, cy - d, cx, cy + d, 0x000000, sz);\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Widget} from 'webmolkit/ui/Widget';\nimport {Mixture} from '../data/Mixture';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {ArrangeMixture} from './ArrangeMixture';\nimport {ClipboardProxy} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy} from 'webmolkit/ui/MenuProxy';\nimport {deepClone, eventCoords, newElement, pixelDensity} from 'webmolkit/util/util';\nimport {EditCompound} from 'webmolkit/dialog/EditCompound';\nimport {MixfileComponent} from '../data/Mixfile';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MoleculeStream} from 'webmolkit/data/MoleculeStream';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {EditComponent} from './EditComponent';\nimport {LookupCompoundDialog} from '../lookup/LookupCompoundDialog';\nimport {MDLMOLWriter} from 'webmolkit/data/MDLWriter';\nimport {ExtractCTABComponent} from '../lookup/ExtractCTABComponent';\nimport {MolUtil} from 'webmolkit/data/MolUtil';\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {NormMixture} from '../data/NormMixture';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {DrawMixture} from './DrawMixture';\nimport {CoordUtil} from 'webmolkit/data/CoordUtil';\nimport {Menu as ElectronMenu, MenuItem as ElectronMenuItem, getCurrentWindow} from '@electron/remote';\n\n/*\n\tHigh level widget for the editing area for a mixture.\n*/\n\nconst DEFAULT_SCALE = 25;\nconst UNDO_SIZE = 10;\n\nenum DragReason\n{\n\tNone,\n\tAny,\n\tPan,\n}\n\nexport class EditMixture extends Widget\n{\n\tpublic callbackUpdateTitle:() => void = null;\n\tpublic callbackInteraction:() => void = null;\n\n\tpublic monochrome = false;\n\n\tprotected mixture = new Mixture();\n\tprotected policy:RenderPolicy = null\n\tprotected canvasMixture:HTMLCanvasElement;\n\tprotected canvasOver:HTMLCanvasElement;\n\n\tprotected undoStack:Mixture[] = [];\n\tprotected redoStack:Mixture[] = [];\n\n\tprotected offsetX = 0;\n\tprotected offsetY = 0;\n\tprotected pointScale = DEFAULT_SCALE;\n\tprotected filthy = true; // filthy: screen is out of date, needs to be redrawn\n\tprotected dirty = false; // dirty: data has changed since last save\n\tprotected layout:ArrangeMixture = null;\n\tprotected collapsedBranches:number[][] = [];\n\tprotected hoverIndex = -1; // component over which the mouse is hovering\n\tprotected activeIndex = -1; // component that is currently being clicked upon\n\tprotected selectedIndex = 0; // selected component (having been previously clicked)\n\tprotected delayedSelect:number[] = null; // if set to an origin vector: to rederive selectedIndex next time the layout is evaluated\n\n\tprotected dragReason = DragReason.None;\n\tprotected dragIndex = -1;\n\tprotected dragX = 0;\n\tprotected dragY = 0;\n\tprotected isEditing = false;\n\tprotected dlgCompound:EditCompound = null;\n\n\tprotected structureIntegrity:Record<string, string> = {}; // metadata key -> name for those which are sensitive to changes to structure\n\n\t// ------------ public methods ------------\n\n\tconstructor(protected proxyClip:ClipboardProxy, protected proxyMenu:MenuProxy)\n\t{\n\t\tsuper();\n\t}\n\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\n\t\tlet content = this.contentDOM;\n\n\t\tcontent.css({'width': '100%', 'height': '100%'});\n\t\tcontent.css({'background-color': '#F0F0F0'});\n\t\tcontent.css({'position': 'relative', 'outline-width': '0'});\n\n\t\tlet canvasStyle = 'position: absolute; left: 0; top: 0; pointer-events: none;';\n\t\tthis.canvasMixture = newElement(content, 'canvas', {style: canvasStyle}) as HTMLCanvasElement;\n\t\tthis.canvasOver = newElement(content, 'canvas', {style: canvasStyle}) as HTMLCanvasElement;\n\n\t\t//content.onResize(() => this.redraw());\n\n\t\t// setup all the interactive events\n\t\tcontent.onClick((event) => this.mouseClick(event));\n\t\tcontent.onDblClick((event) => this.mouseDoubleClick(event));\n\t\tcontent.onMouseDown((event) => this.mouseDown(event));\n\t\tcontent.onMouseUp((event) => this.mouseUp(event));\n\t\tcontent.onMouseOver((event) => this.mouseOver(event));\n\t\tcontent.onMouseLeave((event) => this.mouseOut(event));\n\t\tcontent.onMouseMove((event) => this.mouseMove(event));\n\t\t// (maybe have mousewheel as an option: in Electron mode it makes some sense, but embedded\n\t\t// on a web page it' not good...)\n\t\t//content.on('mousewheel', (event:JQueryEventObject) => this.mouseWheel(event));\n\t\tcontent.onKeyPress((event) => this.keyPressed(event));\n\t\tcontent.onKeyDown((event) => this.keyDown(event));\n\t\tcontent.onKeyUp((event) => this.keyUp(event));\n\t\tcontent.onContextMenu((event) => this.contextMenu(event));\n\n\t\tcontent.attr({'id': 'mixtureEditor_main', 'tabindex': '0'});\n\t\tthis.refocus();\n\t\tthis.redraw(true, false);\n\t}\n\n\t// whether or not menu commands are being received; no means that it's in dialog/editing mode\n\tpublic isReceivingCommands():boolean {return !this.isEditing;}\n\tpublic setEditing(isEditing:boolean):void {this.isEditing = isEditing;}\n\tpublic compoundEditor():EditCompound {return this.dlgCompound;}\n\n\t// add a metadata key that can potentially stop being valid when the structure is changed\n\tpublic addStructureIntegrityKey(key:string, description:string):void\n\t{\n\t\tthis.structureIntegrity[key] = description;\n\t}\n\n\t// access to current state\n\tpublic getMixture():Mixture {return this.mixture;}\n\tpublic setMixture(mixture:Mixture, withAutoScale:boolean = false, withStashUndo:boolean = true):void\n\t{\n\t\t// NOTE: the \"withAutoScale\" parameter is currently not very meaningful since the modified mixture gets a re-layout\n\t\twithAutoScale = true;\n\n\t\tif (this.delayedSelect == null && this.selectedIndex >= 0 && this.layout != null) this.delayedSelect = this.layout.components[this.selectedIndex].origin;\n\n\t\tif (withStashUndo) this.stashUndo();\n\t\tthis.mixture = mixture;\n\n\t\tthis.offsetX = 0;\n\t\tthis.offsetY = 0;\n\t\tthis.pointScale = this.policy.data.pointScale;\n\t\tthis.filthy = true;\n\t\tthis.layout = null;\n\t\tthis.hoverIndex = -1;\n\t\tthis.activeIndex = -1;\n\t\tthis.selectedIndex = -1;\n\t\tthis.redraw(withAutoScale);\n\n\t\tthis.dirty = true;\n\t\tif (this.callbackUpdateTitle) this.callbackUpdateTitle();\n\t}\n\n\t// returns the selected origin indices & component, or null if nothing selected\n\tpublic getSelected():[number[], MixfileComponent]\n\t{\n\t\tif (this.selectedIndex < 0 || this.layout == null) return [null, null];\n\t\tlet comp = this.layout.components[this.selectedIndex];\n\t\treturn [comp.origin, comp.content];\n\t}\n\n\tpublic getCollapsedBranches():number[][] {return this.collapsedBranches;}\n\n\t// wipes the undo & redo stacks\n\tpublic clearHistory():void\n\t{\n\t\tthis.undoStack = [];\n\t\tthis.redoStack = [];\n\t}\n\n\t// appends the current state to the undo-stack\n\tpublic stashUndo():void\n\t{\n\t\t//if (this.undoStack.length == 0 && this.mixture.isEmpty()) return; // don't put empty stuff at the beginning\n\t\tthis.undoStack.push(this.mixture.clone());\n\t\twhile (this.undoStack.length > UNDO_SIZE) this.undoStack.splice(0, 1);\n\t\tthis.redoStack = [];\n\t}\n\n\t// reports on the state of the undo/redo buffers\n\tpublic canUndo():boolean {return this.undoStack.length > 0;}\n\tpublic canRedo():boolean {return this.redoStack.length > 0;}\n\n\t// actually does the undo/redo operation\n\tpublic performUndo():void\n\t{\n\t\tif (this.undoStack.length == 0) return;\n\t\tthis.redoStack.push(this.mixture.clone());\n\t\tthis.setMixture(this.undoStack.pop(), false, false);\n\t}\n\tpublic performRedo():void\n\t{\n\t\tif (this.redoStack.length == 0) return;\n\t\tthis.undoStack.push(this.mixture.clone());\n\t\tthis.setMixture(this.redoStack.pop(), false, false);\n\t}\n\n\t// need-save status\n\tpublic isDirty():boolean {return this.dirty;}\n\tpublic setDirty(dirty:boolean):void {this.dirty = dirty;}\n\n\t// returns true if the mixture content is empty\n\tpublic isBlank():boolean {return this.mixture.isEmpty();}\n\n\t// makes sure the content gets redrawn imminently; calling many times is not a performance issue\n\tpublic delayedRedraw():void\n\t{\n\t\tthis.filthy = true;\n\t\twindow.setTimeout(() => {if (this.filthy) this.redraw();}, 10);\n\t}\n\n\t// alter zoom level by a factor\n\tpublic zoom(scale:number):void\n\t{\n\t\tthis.pointScale *= scale;\n\t\tthis.layout = null;\n\t\tthis.redraw();\n\t}\n\n\t// rescale to fit & recentre\n\tpublic zoomFull():void\n\t{\n\t\tthis.layout = null;\n\t\tthis.pointScale = DEFAULT_SCALE;\n\t\tthis.redraw(true, true);\n\t}\n\n\t// rescale to fit & recentre/with a limit to the size\n\tpublic zoomNormal():void\n\t{\n\t\tthis.layout = null;\n\t\tthis.pointScale = DEFAULT_SCALE;\n\t\tthis.redraw(true, false);\n\t}\n\n\t// select the given component index (programmatically)\n\tpublic selectComponent(idx:number):void\n\t{\n\t\tif (this.selectedIndex == idx) return;\n\t\tthis.selectedIndex = idx;\n\t\tthis.activeIndex = -1;\n\t\tthis.delayedRedraw();\n\t}\n\n\t// convenient overload for selecting whichever numbered component matches the origin sequence\n\tpublic selectOrigin(origin:number[]):void\n\t{\n\t\tlet complist = this.layout.components;\n\t\tfor (let n = 0; n < complist.length; n++) if (Vec.equals(complist[n].origin, origin))\n\t\t{\n\t\t\tthis.selectComponent(n);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// bring up the structure-editing panel, which uses the generic sketching dialog\n\tpublic editStructure():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet comp = this.mixture.getComponent(origin);\n\n\t\tlet mol = comp.molfile ? MoleculeStream.readUnknown(comp.molfile) : null;\n\n\t\tthis.dlgCompound = new EditCompound(mol ? mol : new Molecule(), this.contentDOM);\n\t\tthis.dlgCompound.onSave(() =>\n\t\t{\n\t\t\tlet mol = this.dlgCompound.getMolecule();\n\t\t\tcomp = deepClone(comp);\n\t\t\tthis.checkStructureIntegrity(comp, mol);\n\n\t\t\tlet molfile = MoleculeStream.writeMDLMOL(mol);\n\t\t\tif (!molfile) molfile = null;\n\n\t\t\tcomp.molfile = molfile;\n\t\t\tlet modmix = this.mixture.clone();\n\t\t\tif (modmix.setComponent(origin, comp))\n\t\t\t{\n\t\t\t\tthis.setMixture(modmix);\n\t\t\t\tthis.selectOrigin(origin);\n\t\t\t}\n\n\t\t\tthis.dlgCompound.close();\n\t\t});\n\t\tthis.dlgCompound.onClose(() =>\n\t\t{\n\t\t\tthis.isEditing = false;\n\t\t\tthis.dlgCompound = null;\n\t\t\tthis.refocus();\n\t\t});\n\t\tthis.dlgCompound.defineClipboard(this.proxyClip);\n\t\tthis.dlgCompound.defineContext(this.proxyMenu);\n\t\tthis.isEditing = true;\n\t\tthis.dlgCompound.open();\n\t}\n\n\t// invoke the editor dialog for the current component - basically everything except the structure\n\tpublic editDetails():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet comp = this.mixture.getComponent(origin);\n\n\t\tlet w = window.innerWidth * 0.8, h = window.innerHeight * 0.8;\n\n\t\tlet dlg = new EditComponent(deepClone(comp), [w, h], this.contentDOM);\n\t\tdlg.proxyClip = this.proxyClip;\n\t\tdlg.onSave(() =>\n\t\t{\n\t\t\tlet modmix = this.mixture.clone();\n\t\t\tif (modmix.setComponent(origin, dlg.getComponent()))\n\t\t\t{\n\t\t\t\tthis.setMixture(modmix);\n\t\t\t\tthis.selectOrigin(origin);\n\t\t\t}\n\t\t\tdlg.close();\n\t\t});\n\t\tdlg.onSketch(() =>\n\t\t{\n\t\t\tthis.selectOrigin(origin);\n\t\t\tthis.editStructure();\n\t\t});\n\t\tdlg.onClose(() =>\n\t\t{\n\t\t\tthis.isEditing = false;\n\t\t\tthis.refocus();\n\t\t});\n\t\tthis.isEditing = true;\n\t\tdlg.open();\n\t}\n\n\t// lookup: searches for compound information based on name, prespecified or otherwise\n\tpublic lookupCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet comp = this.mixture.getComponent(origin);\n\t\tlet curX = this.contentDOM.width(), curY = this.contentDOM.height();\n\t\tlet dlg = new LookupCompoundDialog(comp.name, [curX, curY]);\n\t\tdlg.onSelect(() =>\n\t\t{\n\t\t\tlet modmix = this.mixture.clone();\n\t\t\tcomp = deepClone(modmix.getComponent(origin));\n\t\t\tlet name = dlg.getName(), mol = dlg.getMolecule();\n\t\t\tif (name != null) comp.name = name;\n\t\t\tif (mol != null) comp.molfile = new MDLMOLWriter(mol).write();\n\t\t\tif (modmix.setComponent(origin, comp))\n\t\t\t{\n\t\t\t\tthis.setMixture(modmix);\n\t\t\t\tthis.selectOrigin(origin);\n\t\t\t}\n\t\t\tdlg.close();\n\t\t});\n\t\tdlg.onClose(() =>\n\t\t{\n\t\t\tthis.isEditing = false;\n\t\t\tthis.refocus();\n\t\t});\n\t\tdlg.open();\n\t}\n\n\t// deletes selected component, if any\n\tpublic deleteCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tif (origin.length == 0) return;\n\n\t\tlet modmix = this.mixture.clone();\n\t\tmodmix.deleteComponent(origin);\n\t\tthis.delayedSelect = null;\n\t\tthis.setMixture(modmix);\n\n\t\torigin = origin.slice(0);\n\t\tif (modmix.getComponent(origin)) {}\n\t\telse if (Vec.last(origin) > 0) origin[origin.length - 1]--;\n\t\telse origin.pop();\n\t\tthis.selectOrigin(origin);\n\t}\n\n\t// append a new sub-item to the end of the current component's list\n\tpublic appendToCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet modmix = this.mixture.clone();\n\t\tlet comp = modmix.getComponent(origin);\n\t\tif (!comp.contents) comp.contents = [];\n\t\tcomp.contents.push({});\n\t\tthis.delayedSelect = Vec.concat(origin, [comp.contents.length - 1]);\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// inserts an empty component before the current one\n\tpublic prependBeforeCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet modmix = this.mixture.clone();\n\t\tmodmix.prependBefore(origin, {});\n\t\tthis.delayedSelect = origin;\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// insert above/below the current component\n\tpublic insertBeforeCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tif (Vec.isBlank(origin)) return;\n\t\tlet modmix = this.mixture.clone();\n\t\tlet pos = origin.pop();\n\t\tlet parent = modmix.getComponent(origin);\n\t\tparent.contents.splice(pos, 0, {});\n\t\torigin.push(pos);\n\t\tthis.delayedSelect = origin;\n\t\tthis.setMixture(modmix);\n\t}\n\tpublic insertAfterCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tif (Vec.isBlank(origin)) return;\n\t\tlet modmix = this.mixture.clone();\n\t\tlet pos = origin.pop();\n\t\tlet parent = modmix.getComponent(origin);\n\t\tparent.contents.splice(pos + 1, 0, {});\n\t\torigin.push(pos + 1);\n\t\tthis.delayedSelect = origin;\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// move the current component up or down the hierarchy\n\tpublic reorderCurrent(dir:number):void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tif (origin.length == 0) return;\n\n\t\tlet modmix = this.mixture.clone();\n\t\tlet [parent, idx] = Mixture.splitOrigin(origin);\n\t\tlet comp = modmix.getComponent(parent);\n\t\tif (idx + dir < 0 || idx + dir >= comp.contents.length) return;\n\t\tVec.swap(comp.contents, idx, idx + dir);\n\t\tthis.delayedSelect = Vec.concat(parent, [idx + dir]);\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// copy current to clipboard, and optionally excise it\n\tpublic clipboardCopy(andCut:boolean, wholeBranch:boolean = false):void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\n\t\tlet comp = deepClone(this.mixture.getComponent(origin));\n\t\tdelete (comp as any).mixfileVersion;\n\t\tif (!wholeBranch) comp.contents = [];\n\t\tlet str = Mixture.serialiseComponent(comp);\n\n\t\t/*let clipboard = require('electron').clipboard;\n\t\tclipboard.writeText(str);*/\n\t\tthis.proxyClip.setString(str);\n\n\t\tif (origin.length > 0 && andCut) this.deleteCurrent();\n\t}\n\n\t// paste from clipboard, if possible\n\tpublic clipboardPaste():void\n\t{\n\t\t/*let clipboard = require('electron').clipboard;\n\t\tlet str = clipboard.readText();*/\n\t\tlet str = this.proxyClip.getString();\n\n\t\tlet json:any = null;\n\t\ttry {json = JSON.parse(str);}\n\t\tcatch (e) {} // silent failure\n\n\t\tlet origin:number[] = [];\n\t\tif (this.selectedIndex >= 0) origin = this.layout.components[this.selectedIndex].origin;\n\n\t\t// see if it's a Molfile CTAB that has enumeration flags set (stays null if nothing component-ish)\n\t\tif (!json) json = new ExtractCTABComponent(str).extract();\n\n\t\t// see if it's just a regular singular molecule\n\t\tif (!json)\n\t\t{\n\t\t\tlet mol = MoleculeStream.readUnknown(str);\n\t\t\tif (MolUtil.notBlank(mol))\n\t\t\t{\n\t\t\t\tlet modmix = this.mixture.clone();\n\t\t\t\tlet comp = modmix.getComponent(origin);\n\t\t\t\tif (comp)\n\t\t\t\t{\n\t\t\t\t\tcomp.molfile = new MDLMOLWriter(mol).write();\n\t\t\t\t\tthis.setMixture(modmix);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse alert('Clipboard does not contain a mixture component.');\n\t\t\treturn;\n\t\t}\n\n\t\tif (!json.name && !json.molfile && !json.quantity && Vec.isBlank(json.contents))\n\t\t{\n\t\t\talert('Clipboard content is either not a component, or has no interesting content.');\n\t\t\treturn;\n\t\t}\n\n\t\t// special deal when pasting into nothing: just replace it\n\t\tif (this.selectedIndex < 0 && this.mixture.isEmpty())\n\t\t{\n\t\t\tlet modmix = new Mixture(json);\n\t\t\tthis.delayedSelect = [];\n\t\t\tthis.setMixture(modmix);\n\t\t\treturn;\n\t\t}\n\n\t\t// append to or replace some piece, preferably selected\n\t\tlet modmix = this.mixture.clone();\n\t\tlet comp = modmix.getComponent(origin);\n\t\tif (Mixture.isComponentEmpty(comp))\n\t\t{\n\t\t\tObject.keys(comp).forEach((key:string) => delete (comp as any)[key]);\n\t\t\tObject.keys(json).forEach((key:string) => (comp as any)[key] = json[key]);\n\t\t\tthis.delayedSelect = origin;\n\t\t}\n\t\telse // append\n\t\t{\n\t\t\tif (!comp.contents) comp.contents = [];\n\t\t\tcomp.contents.push(json);\n\t\t\tthis.delayedSelect = Vec.concat(origin, [comp.contents.length - 1]);\n\t\t}\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// call this anytime the focus could have wandered\n\tpublic refocus():void\n\t{\n\t\tthis.contentDOM.grabFocus();\n\t}\n\n\t// return the layout around onscreen for an indicated component\n\tpublic getComponentPosition(origin:number[]):Box\n\t{\n\t\tfor (let comp of this.layout.components) if (Vec.equals(origin, comp.origin))\n\t\t{\n\t\t\tlet box = comp.boundary.clone();\n\t\t\tbox.x += this.offsetX;\n\t\t\tbox.y += this.offsetY;\n\t\t\treturn box;\n\t\t}\n\t\treturn null;\n\t}\n\n\t// ------------ private methods ------------\n\n\tprotected redraw(rescale = false, fit = false):void\n\t{\n\t\tthis.filthy = false;\n\n\t\tlet width = this.contentDOM.width(), height = this.contentDOM.height();\n\t\tlet density = pixelDensity();\n\n\t\tfor (let canvas of [this.canvasMixture, this.canvasOver])\n\t\t{\n\t\t\tcanvas.width = width * density;\n\t\t\tcanvas.height = height * density;\n\t\t\tcanvas.style.width = width + 'px';\n\t\t\tcanvas.style.height = height + 'px';\n\t\t}\n\n\t\tif (!this.layout)\n\t\t{\n\t\t\tlet measure = new OutlineMeasurement(0, 0, this.pointScale);\n\t\t\tthis.policy = this.monochrome ? RenderPolicy.defaultBlackOnWhite(this.pointScale) : RenderPolicy.defaultColourOnWhite(this.pointScale);\n\t\t\tthis.layout = new ArrangeMixture(this.mixture, measure, this.policy);\n\t\t\tthis.layout.showCollapsors = true;\n\t\t\tthis.layout.collapsedBranches = this.collapsedBranches;\n\t\t\tthis.layout.packBranches = new Size(0.8 * this.contentDOM.width(), 0.8 * this.contentDOM.height());\n\t\t\tthis.layout.norm = new NormMixture(this.mixture);\n\t\t\tthis.layout.norm.analyse();\n\t\t\tthis.layout.arrange();\n\t\t\tif (rescale) this.scaleToFit(fit);\n\t\t}\n\n\t\tif (this.delayedSelect)\n\t\t{\n\t\t\tfor (let n = 0; n < this.layout.components.length; n++) if (Vec.equals(this.delayedSelect, this.layout.components[n].origin))\n\t\t\t{\n\t\t\t\tthis.selectedIndex = n;\n\t\t\t\tthis.ensureComponentVisible(n);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.delayedSelect = null;\n\t\t}\n\n\t\tlet gfx = new MetaVector();\n\t\tlet draw = new DrawMixture(this.layout, gfx);\n\t\tdraw.hoverIndex = this.hoverIndex;\n\t\tdraw.activeIndex = this.activeIndex;\n\t\tdraw.selectedIndex = this.selectedIndex;\n\t\tdraw.draw();\n\n\t\tgfx.offsetX = this.offsetX;\n\t\tgfx.offsetY = this.offsetY;\n\t\tgfx.setSize(width, height);\n\t\tgfx.renderCanvas(this.canvasMixture, true);\n\n\t}\n\n\t// assuming that layout is already defined, modifies the offset/scale so that\n\tprotected scaleToFit(mustFit:boolean):void\n\t{\n\t\tlet width = this.contentDOM.width(), height = this.contentDOM.height(), pad = 4;\n\t\tif (mustFit)\n\t\t{\n\t\t\tif (this.layout.width > width - pad || this.layout.height > height - pad)\n\t\t\t{\n\t\t\t\tlet scale = Math.min((width - pad) / this.layout.width, (height - pad) / this.layout.height);\n\t\t\t\tthis.pointScale *= scale;\n\t\t\t\tthis.layout.scaleComponents(scale);\n\t\t\t}\n\t\t\tthis.offsetX = 0.5 * (width - this.layout.width);\n\t\t\tthis.offsetY = 0.5 * (height - this.layout.height);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.offsetX = Math.max(pad, 0.5 * (width - this.layout.width));\n\t\t\tthis.offsetY = 0.5 * (height - this.layout.height);\n\t\t}\n\t}\n\n\t// make sure the indicated component is fully visible onscreen\n\tprivate ensureComponentVisible(idx:number):void\n\t{\n\t\tlet width = this.contentDOM.width(), height = this.contentDOM.height(), pad = 4;\n\t\tlet comp = this.layout.components[idx];\n\t\tlet box = comp.boundary.withOffsetBy(this.offsetX, this.offsetY);\n\n\t\tif (box.minX() < pad) this.offsetX -= box.minX() - pad;\n\t\telse if (box.maxX() > width - pad) this.offsetX += width - pad - box.maxX();\n\n\t\tif (box.minY() < pad) this.offsetY -= box.minY() - pad;\n\t\telse if (box.maxY() > height - pad) this.offsetY += height - pad - box.maxY();\n\t}\n\n\t// mouse has moved: see if we need to update the hover\n\tprotected updateHoverCursor(event:MouseEvent):void\n\t{\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet idx = this.activeIndex >= 0 ? -1 : this.pickComponent(x, y);\n\t\tif (idx != this.hoverIndex)\n\t\t{\n\t\t\tthis.hoverIndex = idx;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t}\n\n\t// finds the index of a component at a given position, or -1 if none\n\tprotected pickComponent(x:number, y:number):number\n\t{\n\t\tlet pick = this.pickComponentSection(x, y);\n\t\treturn pick == null || pick[1] ? -1 : pick[0];\n\t}\n\n\t// more detailed pick: nothing = null, something = [compidx, collapsebox]\n\tprotected pickComponentSection(x:number, y:number):[number, boolean]\n\t{\n\t\tif (!this.layout) return null;\n\t\tfor (let n = 0; n < this.layout.components.length; n++)\n\t\t{\n\t\t\tlet comp = this.layout.components[n];\n\t\t\tlet ux = x - this.offsetX - comp.boundary.x, uy = y - this.offsetY - comp.boundary.y;\n\t\t\tif (comp.outline.contains(ux, uy)) return [n, false];\n\t\t\tif (comp.collapseBox && comp.collapseBox.contains(ux, uy)) return [n, true];\n\t\t}\n\t\treturn null;\n\t}\n\n\t// cursor key wandering\n\tprotected navigateDirection(dir:string):void\n\t{\n\t\tlet newIndex = -1;\n\t\tif (this.selectedIndex < 0) newIndex = 0;\n\t\telse\n\t\t{\n\t\t\tlet origin = this.layout.components[this.selectedIndex].origin.slice(0);\n\n\t\t\tif (dir == 'tab')\n\t\t\t{\n\t\t\t\tif (Vec.isBlank(origin))\n\t\t\t\t{\n\t\t\t\t\tlet comp = this.mixture.getComponent(origin);\n\t\t\t\t\tif (Vec.isBlank(comp.contents))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.delayedSelect = [0];\n\t\t\t\t\t\tthis.appendToCurrent();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdir = 'right';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet parent = this.mixture.getComponent(origin.slice(0, origin.length - 1)), pos = Vec.last(origin);\n\t\t\t\t\tif (pos == parent.contents.length - 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.insertAfterCurrent();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdir = 'down';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dir == 'left')\n\t\t\t{\n\t\t\t\tif (origin.length == 0) return;\n\t\t\t\torigin.pop();\n\t\t\t\tnewIndex = this.layout.findComponent(origin);\n\t\t\t}\n\t\t\telse if (dir == 'right')\n\t\t\t{\n\t\t\t\torigin.push(0);\n\t\t\t\tnewIndex = this.layout.findComponent(origin);\n\t\t\t}\n\t\t\telse if (dir == 'up')\n\t\t\t{\n\t\t\t\tif (origin.length == 0 || origin[origin.length - 1] == 0) return;\n\t\t\t\torigin[origin.length - 1]--;\n\t\t\t\tnewIndex = this.layout.findComponent(origin);\n\t\t\t}\n\t\t\telse if (dir == 'down')\n\t\t\t{\n\t\t\t\tif (origin.length == 0) return;\n\t\t\t\torigin[origin.length - 1]++;\n\t\t\t\tnewIndex = this.layout.findComponent(origin);\n\t\t\t}\n\t\t}\n\n\t\tif (newIndex >= 0 && newIndex < this.layout.components.length)\n\t\t{\n\t\t\tthis.delayedSelect = this.layout.components[newIndex].origin;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t}\n\n\t// collapses or un-collapses the indicated position\n\tprotected toggleCollapsed(idx:number):void\n\t{\n\t\tlet origin = this.layout.components[idx].origin;\n\t\tlet got = false;\n\t\tfor (let n = 0; n < this.collapsedBranches.length; n++) if (Vec.equals(origin, this.collapsedBranches[n]))\n\t\t{\n\t\t\tthis.collapsedBranches.splice(n, 1);\n\t\t\tgot = true;\n\t\t\tbreak;\n\t\t}\n\t\tif (!got) this.collapsedBranches.push(origin);\n\t\tthis.layout = null;\n\t\tthis.redraw();\n\t}\n\n\t// interactivity\n\tprotected mouseClick(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tif (event.ctrlKey)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet picked = this.pickComponentSection(x, y);\n\t\tif (picked && picked[1]) this.toggleCollapsed(picked[0]);\n\t}\n\tprotected mouseDoubleClick(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tevent.stopImmediatePropagation();\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet idx = this.pickComponent(x, y);\n\t\tif (idx >= 0)\n\t\t{\n\t\t\tthis.hoverIndex = -1;\n\t\t\tthis.activeIndex = -1;\n\t\t\tthis.selectedIndex = idx;\n\t\t\tthis.delayedRedraw();\n\t\t\tthis.editDetails();\n\t\t}\n\t}\n\tprotected mouseDown(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tif (this.callbackInteraction) this.callbackInteraction();\n\t\t//event.preventDefault();\n\n\t\tif (event.which != 1) return;\n\t\tif (event.ctrlKey)\n\t\t{\n\t\t\t//this.contextMenu(event);\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet idx = this.pickComponent(x, y);\n\n\t\tthis.dragReason = DragReason.Any;\n\t\tthis.dragIndex = idx;\n\t\tthis.dragX = x;\n\t\tthis.dragY = y;\n\n\t\tif (idx != this.activeIndex)\n\t\t{\n\t\t\tthis.activeIndex = idx;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t}\n\tprotected mouseUp(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tif (event.ctrlKey)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.dragReason != DragReason.Pan)\n\t\t{\n\t\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\t\tlet idx = this.pickComponent(x, y);\n\t\t\tif (idx == this.activeIndex) this.selectedIndex = idx;\n\t\t\tthis.activeIndex = -1;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\n\t\tthis.dragReason = DragReason.None;\n\t}\n\tprotected mouseOver(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tthis.updateHoverCursor(event);\n\t}\n\tprotected mouseOut(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tthis.updateHoverCursor(event);\n\t\tthis.dragReason = DragReason.None;\n\t}\n\tprotected mouseMove(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tthis.updateHoverCursor(event);\n\n\t\tif (this.dragReason == DragReason.Any && this.dragIndex < 0)\n\t\t{\n\t\t\tthis.dragReason = DragReason.Pan;\n\t\t}\n\n\t\tif (this.dragReason == DragReason.Pan)\n\t\t{\n\t\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\t\tlet dx = x - this.dragX, dy = y - this.dragY;\n\t\t\tif (dx != 0 && dy != 0)\n\t\t\t{\n\t\t\t\tthis.offsetX += dx;\n\t\t\t\tthis.offsetY += dy;\n\t\t\t\tthis.delayedRedraw();\n\t\t\t\t[this.dragX, this.dragY] = [x, y];\n\t\t\t}\n\t\t}\n\t}\n\tprotected keyPressed(event:KeyboardEvent):void\n\t{\n\t\t//let ch = String.fromCharCode(event.keyCode || event.charCode);\n\t\t//console.log('PRESSED['+ch+'] key='+event.keyCode+' chcode='+event.charCode);\n\t}\n\tprotected keyDown(event:KeyboardEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tif (this.callbackInteraction) this.callbackInteraction();\n\n\t\tif (!this.isReceivingCommands()) return;\n\n\t\tlet key = event.key;\n\t\t//console.log('DOWN: key='+key);\n\n\t\tif (!event.shiftKey && !event.ctrlKey && !event.altKey && !event.metaKey)\n\t\t{\n\t\t\tif (key == 'Enter')\n\t\t\t{\n\t\t\t\tif (this.selectedIndex >= 0) this.editDetails();\n\t\t\t}\n\t\t\telse if (key == 'Escape') {} // escape\n\t\t\telse if (key == 'ArrowLeft') this.navigateDirection('left');\n\t\t\telse if (key == 'ArrowRight') this.navigateDirection('right');\n\t\t\telse if (key == 'ArrowUp') this.navigateDirection('up');\n\t\t\telse if (key == 'ArrowDown') this.navigateDirection('down');\n\t\t\telse if (key == 'Tab') this.navigateDirection('tab');\n\t\t\telse return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t}\n\tprotected keyUp(event:KeyboardEvent):void\n\t{\n\t\t// !!\n\t}\n\tprotected mouseWheel(event:WheelEvent):void\n\t{\n\t\tif (this.callbackInteraction) this.callbackInteraction();\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet delta = Math.abs(event.deltaX) > Math.abs(event.deltaY) ? event.deltaX : event.deltaY;\n\t\tlet scale = 1 + Math.abs(delta) * 0.05;\n\t\tif (delta < 0) scale = 1.0 / scale;\n\n\t\tlet newScale = this.pointScale * scale;\n\t\tthis.offsetX = x - (newScale / this.pointScale) * (x - this.offsetX);\n\t\tthis.offsetY = y - (newScale / this.pointScale) * (y - this.offsetY);\n\t\t//if (this.layout) this.layout.scaleComponents(newScale / this.pointScale);\n\t\tthis.pointScale = newScale;\n\n\t\tthis.layout = null;\n\t\tthis.delayedRedraw();\n\t\tevent.preventDefault();\n\t}\n\tprotected contextMenu(event:MouseEvent):void\n\t{\n\t\tif (this.callbackInteraction) this.callbackInteraction();\n\n\t\tevent.preventDefault();\n\t\tif (!this.isReceivingCommands()) return;\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet idx = this.pickComponent(x, y);\n\n\t\tthis.selectedIndex = idx;\n\t\tthis.activeIndex = -1;\n\t\tthis.delayedRedraw();\n\n\t\tlet menu = new ElectronMenu();\n\t\tif (idx >= 0)\n\t\t{\n\t\t\tlet comp = this.layout.components[idx].content, origin = this.layout.components[idx].origin;\n\t\t\tlet sel = ():void => this.selectComponent(idx);\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Edit Structure', click: () => {sel(); this.editStructure();}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Edit Details', click: () => {sel(); this.editDetails();}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Lookup Name', click: () => {sel(); this.lookupCurrent();}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Append', click: () => {sel(); this.appendToCurrent();}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Prepend', click: () => {sel(); this.prependBeforeCurrent();}}));\n\t\t\tif (origin.length > 0)\n\t\t\t{\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Insert Before', click: () => {sel(); this.insertBeforeCurrent();}}));\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Insert After', click: () => {sel(); this.insertAfterCurrent();}}));\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Delete', click: () => {this.selectComponent(idx); this.deleteCurrent();}}));\n\n\t\t\t\tif (origin[origin.length - 1] > 0)\n\t\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Move Up', click: () => {sel(); this.reorderCurrent(-1);}}));\n\t\t\t\tif (origin[origin.length - 1] < Vec.arrayLength(this.mixture.getParentComponent(origin).contents) - 1)\n\t\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Move Down', click: () => {sel(); this.reorderCurrent(1);}}));\n\t\t\t}\n\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Copy', click: () => {sel(); this.clipboardCopy(false);}}));\n\t\t\tif (Vec.arrayLength(comp.contents) > 0)\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Copy Branch', click: () => {sel(); this.clipboardCopy(false, true);}}));\n\t\t\tif (origin.length > 0)\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Cut', click: () => {sel(); this.clipboardCopy(true);}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Paste', click: () => {sel(); this.clipboardPaste();}}));\n\n\t\t\tif (Vec.notBlank(comp.contents))\n\t\t\t{\n\t\t\t\tlet label = this.layout.components[idx].isCollapsed ? 'Expand Branch' : 'Collapse Branch';\n\t\t\t\tmenu.append(new ElectronMenuItem({label: label, click: () => this.toggleCollapsed(idx)}));\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Zoom In', click: () => this.zoom(1.25)}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Zoom Out', click: () => this.zoom(0.8)}));\n\t\t}\n\n\t\tmenu.popup({window: getCurrentWindow()});\n\t}\n\n\t// given that the structure may have changed, see if any metadata is potentially invalidated - and ask the user; the component parameter\n\t// may be modified\n\tprotected checkStructureIntegrity(comp:MixfileComponent, newMol:Molecule):void\n\t{\n\t\tlet integKeys = Object.keys(this.structureIntegrity).filter((key) => (comp.identifiers && comp.identifiers[key]) || (comp.links && comp.links[key]));\n\t\tif (integKeys.length == 0) return;\n\n\t\tlet oldMol = comp.molfile ? MoleculeStream.readUnknown(comp.molfile) : null;\n\t\tif (MolUtil.isBlank(oldMol) && MolUtil.isBlank(newMol)) return;\n\t\tif (oldMol && newMol && CoordUtil.sketchMappable(oldMol, newMol)) return;\n\n\t\tlet msg = MolUtil.isBlank(newMol) ? 'Structure has been removed.' : 'Structure has changed.';\n\t\tmsg += `\\nThe following reference${integKeys.length == 1 ? '' : 's'} may have become stale:`;\n\t\tfor (let key of integKeys) msg += '\\n    ' + this.structureIntegrity[key];\n\t\tmsg += integKeys.length == 1 ? '\\nRemove this reference?' : '\\nRemove these references?';\n\t\tif (!confirm(msg)) return;\n\n\t\tfor (let key of integKeys)\n\t\t{\n\t\t\tif (comp.identifiers) delete comp.identifiers[key];\n\t\t\tif (comp.links) delete comp.links[key];\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {Box} from 'webmolkit/util/Geom';\nimport {installInlineCSS, Theme} from 'webmolkit/util/Theme';\nimport {addTooltip} from 'webmolkit/ui/Tooltip';\nimport {escapeHTML} from 'webmolkit/util/util';\n\n/*\n\tA banner that goes along the top of the screen and fills up with clickable icons.\n*/\n\nexport enum MenuBannerCommand\n{\n\tNewMixture = 'newMixture',\n\tNewCollection = 'newCollection',\n\tOpen = 'open',\n\tSave = 'save',\n\tSaveAs = 'saveAs',\n\tEditDetails = 'editDetails',\n\tEditStructure = 'editStructure',\n\tLookup = 'lookup',\n\tExportSVG = 'exportSVG',\n\tExportSDF = 'exportSDF',\n\tCreateMInChI = 'createMInChI',\n\tAppend = 'append',\n\tPrepend = 'prepend',\n\tInsertBefore = 'insertBefore',\n\tInsertAfter = 'insertAfter',\n\tDelete = 'delete',\n\tMoveUp = 'moveUp',\n\tMoveDown = 'moveDown',\n\tUndo = 'undo',\n\tRedo = 'redo',\n\tCopy = 'copy',\n\tCopyBranch = 'copyBranch',\n\tCut = 'cut',\n\tPaste = 'paste',\n\tZoomFull = 'zoomFull',\n\tZoomNormal = 'zoomNormal',\n\tZoomIn = 'zoomIn',\n\tZoomOut = 'zoomOut',\n\tViewDetail = 'viewDetail',\n\tViewCard = 'viewCard',\n\tBack = 'back',\n}\n\nexport interface MenuBannerButton\n{\n\ticon:string; // filename\n\ttip:string; // popup tooltip\n\tcmd:string;\n\twidth?:number; // optional width override\n}\n\nconst CSS_MENUBANNER = `\n\t*.mixtures-menubanner-button:hover\n\t{\n\t\tbackground-color: #D0D0D0;\n\t}\n\t*.mixtures-menubanner-button:active\n\t{\n\t\tbackground-color: #C0C0C0;\n\t}\n`;\nexport class MenuBanner\n{\n\tpublic callbackRefocus:() => void = null;\n\n\tprivate divFlex:DOM;\n\tprivate mapDiv:Record<string, DOM> = {};\n\tprivate mapSVG:Record<string, DOM> = {};\n\tprivate mapActive:Record<string, boolean> = {};\n\tprivate selected = new Set<string>();\n\n\t// ------------ public methods ------------\n\n\tconstructor(private commands:MenuBannerButton[][], private callbackAction:(cmd:string) => void)\n\t{\n\t\tinstallInlineCSS('mixtures-menubanner', CSS_MENUBANNER);\n\t}\n\n\tpublic render(domParent:DOM):void\n\t{\n\t\tdomParent.empty();\n\t\tthis.divFlex = dom('<div/>').appendTo(domParent).css({'display': 'flex', 'width': '100%', 'height': '100%'});\n\t\tthis.divFlex.css({'flex-direction': 'row', 'flex-wrap': 'nowrap', 'justify-content': 'space-around', 'align-items': 'center'});\n\t\t//this.divFlex.css({'linear-gradient': '90deg, #F0F0F0, #808080'});\n\t\tthis.divFlex.css({'background': 'linear-gradient(to bottom, #FFFFFF, #C0C0C0)'});\n\t\tthis.divFlex.css({'user-select': 'none' /*, 'pointer-events': 'none'*/});\n\n\t\t//this.divFlex.click(() => {if (this.callbackRefocus) this.callbackRefocus();});\n\n\t\tfor (let blk of this.commands)\n\t\t{\n\t\t\tlet divBlk = dom('<div/>').appendTo(this.divFlex);\n\t\t\tfor (let btn of blk)\n\t\t\t{\n\t\t\t\tlet [div, svg] = this.createCommand(btn);\n\t\t\t\tdivBlk.append(div);\n\t\t\t\tthis.mapDiv[btn.cmd] = div;\n\t\t\t\tthis.mapSVG[btn.cmd] = svg;\n\t\t\t\tthis.mapActive[btn.cmd] = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t// switch on/off specific buttons\n\tpublic activateButtons(map:Record<string, boolean>):void\n\t{\n\t\tfor (let cmd in map)\n\t\t{\n\t\t\tlet active = this.mapActive[cmd] = map[cmd];\n\t\t\tthis.mapSVG[cmd].css({'opacity': active ? 1 : 0.5});\n\t\t}\n\t}\n\n\t// control over which button(s) are selected\n\tpublic addSelected(cmd:string):void\n\t{\n\t\tif (this.selected.has(cmd)) return;\n\t\tthis.selected.add(cmd);\n\t\tthis.mapDiv[cmd].css({'background-color': '#D0D0D0'});\n\t}\n\tpublic removeSelected(cmd:string):void\n\t{\n\t\tif (!this.selected.has(cmd)) return;\n\t\tthis.selected.delete(cmd);\n\t\tthis.mapDiv[cmd].css({'background-color': 'transparent'});\n\t}\n\n\t// fetch the position of the given icon, relative to the banner overall\n\tpublic iconPosition(cmd:MenuBannerCommand):Box\n\t{\n\t\tlet div = this.mapDiv[cmd];\n\t\tif (!div) return null;\n\t\treturn new Box(div.elHTML.offsetLeft, div.elHTML.offsetTop, div.width(), div.height());\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate createCommand(btn:MenuBannerButton):DOM[]\n\t{\n\t\tlet div = dom('<div/>').css({'display': 'inline-block'});\n\t\tdiv.setAttr('id', 'mixtureEditor_btn_' + btn.icon.substring(0, btn.icon.lastIndexOf('.')));\n\t\tlet width = btn.width ? btn.width : 20;\n\t\tdiv.css({'width': `${width}px`, 'height': '20px', 'margin': '2px', 'padding': '5px'});\n\t\tdiv.css({'border-radius': '4px'});\n\t\tif (this.selected.has(btn.cmd)) div.css({'background-color': '#D0D0D0'});\n\n\t\tlet imgURL = Theme.RESOURCE_URL + '/img/icons/' + btn.icon;\n\t\tlet svg = dom('<img/>').appendTo(div).attr({'src': imgURL});\n\n\t\tdiv.addClass('mixtures-menubanner-button');\n\t\t/*div.onHover(\n\t\t\t() =>\n\t\t\t{\n\t\t\t\tlet col = this.selected.has(btn.cmd) ? '#D0D0D0' : this.mapActive[btn.cmd] ? '#C0C0C0' : 'transparent';\n\t\t\t\tdiv.setCSS('background-color', col);\n\t\t\t},\n\t\t\t() =>\n\t\t\t{\n\t\t\t\tlet col = this.selected.has(btn.cmd) ? '#D0D0D0' : 'transparent';\n\t\t\t\tdiv.setCSS('background-color', col);\n\t\t\t});*/\n\t\tdiv.onClick(() =>\n\t\t{\n\t\t\tif (this.callbackRefocus) this.callbackRefocus();\n\t\t\tif (!this.mapActive[btn.cmd]) return;\n\t\t\tthis.callbackAction(btn.cmd);\n\t\t});\n\t\tif (btn.tip) addTooltip(div, escapeHTML(btn.tip));\n\n\t\treturn [div, svg];\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {deepClone} from 'webmolkit/util/util';\nimport {Mixfile, MixfileComponent} from '../data/Mixfile';\nimport {Mixture} from '../data/Mixture';\nimport {NormMixture, NormMixtureNote} from '../data/NormMixture';\nimport {InChI} from '../data/InChI';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {MoleculeStream} from 'webmolkit/data/MoleculeStream';\nimport {MolUtil} from 'webmolkit/data/MolUtil';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Units} from '../data/Units';\n\n// quick implementation of CRC hash codes\nlet crc_table:number[] = [];\nfunction make_crc_table():void\n{\n\tif (crc_table.length > 0) return;\n\tfor (let n = 0; n < 256; n++)\n\t{\n\t\tlet c = n;\n\t\tfor (let i = 0; i < 8; i++) if ((c & 1) != 0) c = 0xEDB88320 ^ (c >>> 1); else c = (c >>> 1);\n\t\tcrc_table.push(c);\n\t}\n}\nconst BOOT_CRC = 0xFFFFFFFF;\nfunction start_crc():number {return BOOT_CRC;}\nfunction feed_crc(crc:number, byte:number):number\n{\n\tlet idx = (crc ^ byte) & 0xFF;\n\treturn crc_table[idx] ^ (crc >>> 8);\n}\nfunction end_crc(crc:number):number {return crc ^ BOOT_CRC;}\n\n// work-in-progress placeholder for the recursive MInChI assembler\ninterface MInChIBuilder\n{\n\tlayerN:string; // N-layer is the hierarchical form\n\tlayerG:string; // G-layer has the concentrations\n}\n\n// for marking the segments of the outgoing MInChI string according to category\nexport enum MInChISegment\n{\n\tNone = 0,\n\tHeader, // the initial recognition string\n\tComponent, // the components (of which there can be multiple contiguous instances)\n\tHierarchy, // the /n layer\n\tConcentration, // the /g layer\n}\n\n// augmented version of a component used to stash some MInChI-specific derived content\ninterface MInChIComponent extends MixfileComponent\n{\n\tinchiFrag:string;\n\tuseRatio:number;\n\tnote:NormMixtureNote;\n}\n\nconst MINCHI_VERSION = 'MInChI=0.99.1S';\n\n/*\n\tFormulates a MInChI string out of the given mixture.\n*/\n\nexport class ExportMInChI\n{\n\tprivate mixture:Mixture;\n\tprivate norm:NormMixture;\n\tprivate minchi = '?';\n\tprivate segment:MInChISegment[] = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(mixfile:Mixfile)\n\t{\n\t\tthis.mixture = new Mixture(deepClone(mixfile));\n\t\tthis.norm = new NormMixture(this.mixture);\n\t\tthis.norm.analyse();\n\t}\n\n\t// this should generally be called first: any component that has a structure but not an InChI string gets one calculated,\n\t// which presumes that the external environment has been configured to allow this; returns true if anything was done, i.e.\n\t// the parameter mixture was modified; note that if any components have an InChI that is wrong, this will be believed\n\tpublic async fillInChI():Promise<boolean>\n\t{\n\t\tif (!InChI.isAvailable()) return false; // silent failure: the caller should check if specific action is required\n\n\t\tlet modified = false;\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile || comp.inchi) continue;\n\t\t\tlet mol:Molecule = null;\n\t\t\ttry {mol = MoleculeStream.readUnknown(comp.molfile);}\n\t\t\tcatch (e) {continue;} // silent failure if it's an invalid molecule\n\t\t\tif (MolUtil.isBlank(mol)) continue;\n\t\t\tlet [inchi, inchiKey] = await InChI.makeInChI(mol);\n\t\t\tcomp.inchi = inchi;\n\t\t\tcomp.inchiKey = inchiKey;\n\t\t\tmodified = true;\n\t\t}\n\t\treturn modified;\n\t}\n\n\t// assembles the MInChI string: once this has completed, the result is available\n\tpublic formulate():void\n\t{\n\t\tlet modmix = this.mixture.clone();\n\t\t//this.sortContents(sortmix.contents);\n\n\t\tfor (let origin of modmix.getOrigins())\n\t\t{\n\t\t\tlet note = this.norm.findNote(origin);\n\t\t\tif (note) (modmix.getComponent(origin) as MInChIComponent).note = note;\n\t\t}\n\n\t\t// special deal: any component with >2 mixtures that has a consistent ratio definition needs to be marked\n\t\t// at the parent-component level\n\t\tskip: for (let comp of modmix.getComponents()) if (Vec.len(comp.contents) >= 2)\n\t\t{\n\t\t\tif (Vec.len(comp.contents[0].ratio) != 2) continue;\n\t\t\tlet [numer, denom] = comp.contents[0].ratio;\n\t\t\tfor (let n = 1; n < comp.contents.length; n++)\n\t\t\t{\n\t\t\t\tlet ratio = comp.contents[n].ratio;\n\t\t\t\tif (Vec.len(ratio) != 2 || ratio[1] != denom) continue skip;\n\t\t\t\tnumer += ratio[0];\n\t\t\t}\n\t\t\tif (numer != denom) continue;\n\t\t\tfor (let sub of comp.contents) (sub as MInChIComponent).useRatio = sub.ratio[0];\n\t\t}\n\n\t\t// assemble the InChI fragments - which is sorted and unique and devoid of blanks; same for \"placenames\", which are\n\t\t// terminal components that have name and concentration information, but no InChI\n\t\tlet inchiList:string[] = [];\n\t\tconst PFX = 'InChI=1S/'; // if it doesn't start with this, we don't consider it a valid InChI\n\t\tfor (let origin of modmix.getOrigins())\n\t\t{\n\t\t\tlet mcomp = modmix.getComponent(origin) as MInChIComponent;\n\t\t\tif (Vec.len(mcomp.contents) > 0) continue; // leaf nodes only need apply\n\n\t\t\tmcomp.inchiFrag = mcomp.inchi || '';\n\t\t\tif (mcomp.inchiFrag.startsWith(PFX)) mcomp.inchiFrag = mcomp.inchiFrag.substring(PFX.length);\n\t\t\tif (!inchiList.includes(mcomp.inchiFrag)) inchiList.push(mcomp.inchiFrag);\n\t\t}\n\t\tinchiList.sort();\n\n\t\tlet root = modmix.mixfile as any as MInChIComponent;\n\t\tlet builder = this.assembleContents(root, inchiList);\n\n\t\tthis.minchi = '';\n\t\tthis.segment = [];\n\n\t\tlet appendSegment = (str:string, type:MInChISegment):void =>\n\t\t{\n\t\t\tthis.minchi += str;\n\t\t\tfor (let n = 0; n < str.length; n++) this.segment.push(type);\n\t\t};\n\n\t\tappendSegment(MINCHI_VERSION, MInChISegment.Header);\n\t\tappendSegment('/', MInChISegment.None);\n\t\tfor (let n = 0; n < inchiList.length; n++)\n\t\t{\n\t\t\tif (n > 0) appendSegment('&', MInChISegment.None);\n\t\t\tappendSegment(inchiList[n], MInChISegment.Component);\n\t\t}\n\t\tappendSegment('/', MInChISegment.None);\n\t\tappendSegment('n' + builder.layerN, MInChISegment.Hierarchy);\n\t\tappendSegment('/', MInChISegment.None);\n\t\tappendSegment('g' + builder.layerG, MInChISegment.Concentration);\n\t}\n\n\t// returns the MInChI notationstring formulated as above\n\tpublic getResult():string\n\t{\n\t\treturn this.minchi;\n\t}\n\n\t// return the segmentation values that mark the type for each character (corresponding to the notation string)\n\tpublic getSegment():MInChISegment[]\n\t{\n\t\treturn this.segment;\n\t}\n\n\t// prepares a \"hash key\" for the mixture: this is basically a sorted unique list of the InChI keys for the structures; it has no concentration or hierarchy\n\t// information because these things are not canonical\n\tpublic makeLongHashKey():string\n\t{\n\t\tlet bits:string[] = [];\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile) continue;\n\t\t\tif (!comp.inchiKey) throw 'Mixture has InChIKey(s) missing';\n\t\t\tif (!comp.inchiKey.startsWith('InChIKey=')) throw 'Invalid InChI key: ' + comp.inchiKey;\n\t\t\tbits.push(comp.inchiKey.substring(9));\n\t\t}\n\t\tbits = Vec.sortedUnique(bits);\n\t\treturn 'Long-MInChIKey=' + bits.join(';');\n\t}\n\n\t// similar to above except fixed length and quite short\n\tpublic makeShortHashKey():string\n\t{\n\t\tmake_crc_table();\n\t\tconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\t\tconst NCRC = 4;\n\t\tlet crclist:number[] = [], pos = 0;\n\t\tfor (let n = 0; n < NCRC; n++) crclist.push(start_crc());\n\n\t\tlet feedCharacter = (letter:string) =>\n\t\t{\n\t\t\tlet idx = LETTERS.indexOf(letter);\n\t\t\tif (idx < 0) return;\n\t\t\tcrclist[pos] = feed_crc(crclist[pos], idx);\n\t\t\tpos = pos < NCRC - 1 ? pos + 1 : 0;\n\t\t};\n\n\t\tlet bits:string[] = [];\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile) continue;\n\t\t\tif (!comp.inchiKey) throw 'Mixture has InChIKey(s) missing';\n\t\t\tif (!comp.inchiKey.startsWith('InChIKey=')) throw 'Invalid InChI key: ' + comp.inchiKey;\n\t\t\tbits.push(comp.inchiKey.substring(9));\n\t\t}\n\t\tfor (let bit of Vec.sortedUnique(bits)) for (let letter of bit)\n\t\t{\n\t\t\tfeedCharacter(letter);\n\t\t}\n\n\t\tlet key = 'Short-MInChIKey=';\n\n\t\tfor (let crc of crclist)\n\t\t{\n\t\t\tcrc = end_crc(crc) >>> 1; // clear the least significant bit and the sign as well\n\t\t\tfor (let n = 0; n < 7; n++)\n\t\t\t{\n\t\t\t\tlet idx = crc % 26;\n\t\t\t\tkey += LETTERS[idx];\n\t\t\t\tcrc = Math.trunc(crc / 26);\n\t\t\t}\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t// turns a concentration into a suitable precursor string, or null otherwise\n\tpublic static formatConcentration(quantity:number | number[], error:number, useRatio:number, units:string, relation:string):string\n\t{\n\t\tlet mantissa = (value:number, exp:number):string => Math.round(value * Math.pow(10, -exp)).toString();\n\n\t\t// check for special deal: the \"useRatio\" property is defined if everything in this peer group has a ratio with\n\t\t// the same denominator and they add up correctly; when this isn't the case, it will fall through and convert to\n\t\t// a percentage\n\t\tif (useRatio != null)\n\t\t{\n\t\t\tlet exp = this.determineExponent([useRatio], 4);\n\t\t\treturn mantissa(useRatio, exp) + 'rt' + exp;\n\t\t}\n\n\t\t/*if (comp.ratio && comp.ratio.length >= 2)\n\t\t{\n\t\t\tlet numer = comp.ratio[0], denom = comp.ratio[1];\n\t\t\tif (!(denom > 0)) return null;\n\t\t\tlet value = 100 * numer / denom, exp = this.determineExponent([value], 4);\n\t\t\treturn mantissa(value, exp) + 'pp' + exp;\n\t\t}*/\n\n\t\tif (quantity == null || units == null) return null;\n\n\t\t// special deal (maybe temporary): units that are written with common names that map to a URI are converted automatically\n\t\tlet unitURI = units;\n\t\tif (!unitURI.startsWith('http://')) unitURI = Units.nameToURI(unitURI);\n\t\tif (!unitURI) return;\n\n\t\t// TODO: maybe another special deal for absolute weight/volume/mole quantities - convert them into ratios, to the extent that's\n\t\t// possible... maybe approximating where necessary\n\n\t\tlet bits:string[] = [];\n\n\t\tif (relation != null) bits.push(relation);\n\n\t\tlet values:number[] = typeof quantity == 'number' ? [quantity as number] : quantity;\n\t\tif (error != null) values.push(error);\n\n\t\tlet [mnemonic, scaled] = Units.convertToMInChI(unitURI, values);\n\t\tif (!mnemonic) return;\n\n\t\tlet exp = this.determineExponent(scaled, 4);\n\n\t\tbits.push(mantissa(scaled[0], exp));\n\t\tif (scaled.length > 1)\n\t\t{\n\t\t\tif (Array.isArray(quantity)) bits.push(':'); else bits.push('?');\n\t\t\tbits.push(mantissa(scaled[1], exp));\n\t\t}\n\t\tbits.push(mnemonic);\n\t\tbits.push(exp.toString());\n\n\t\treturn bits.join('');\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate assembleContents(mcomp:MInChIComponent, inchiList:string[]):MInChIBuilder\n\t{\n\t\tlet tree:MInChIBuilder = {layerN: '', layerG: ''};\n\t\tlet builder:MInChIBuilder = {layerN: '', layerG: ''};\n\n\t\t// emit sub-contents recursively\n\t\tif (Vec.len(mcomp.contents) > 0)\n\t\t{\n\t\t\tif (mcomp.contents != null) for (let subComp of mcomp.contents)\n\t\t\t{\n\t\t\t\tlet subTree = this.assembleContents(subComp as MInChIComponent, inchiList);\n\t\t\t\t//if (!subTree.layerN && !subTree.layerG) continue;\n\t\t\t\tif (tree.layerN.length > 0 || tree.layerG.length > 0)\n\t\t\t\t{\n\t\t\t\t\ttree.layerN += '&';\n\t\t\t\t\ttree.layerG += '&';\n\t\t\t\t}\n\t\t\t\ttree.layerN += subTree.layerN;\n\t\t\t\ttree.layerG += subTree.layerG;\n\t\t\t}\n\t\t}\n\n\t\t// append the current information\n\t\tlet idx = mcomp.inchiFrag != null ? inchiList.indexOf(mcomp.inchiFrag) + 1 : 0;\n\t\tif (idx > 0) builder.layerN += idx.toString();\n\n\t\tlet conc = ExportMInChI.formatConcentration(mcomp.quantity, mcomp.error, mcomp.useRatio, mcomp.units, mcomp.relation);\n\t\tif (!conc && mcomp.note)\n\t\t{\n\t\t\tlet {concQuantity, concError, concUnits, concRelation} = mcomp.note;\n\t\t\tconc = ExportMInChI.formatConcentration(concQuantity, concError, null, concUnits, concRelation);\n\t\t}\n\t\tif (conc) builder.layerG += conc;\n\n\t\tif (tree.layerN.length > 0 || tree.layerG.length > 0)\n\t\t{\n\t\t\tbuilder.layerN = '{' + tree.layerN + '}' + builder.layerN;\n\t\t\tbuilder.layerG = '{' + tree.layerG + '}' + builder.layerG;\n\t\t\tthis.shaveBeard(builder);\n\t\t}\n\n\t\treturn builder;\n\t}\n\n\t// removes unnecessary nesting stubble\n\tprivate shaveBeard(builder:MInChIBuilder):void\n\t{\n\t\twhile (builder.layerN.startsWith('{{') && builder.layerN.endsWith('}}') &&\n\t\t\t   builder.layerG.startsWith('{{') && builder.layerG.endsWith('}}'))\n\t\t{\n\t\t\tbuilder.layerN = builder.layerN.substring(1, builder.layerN.length - 1);\n\t\t\tbuilder.layerG = builder.layerG.substring(1, builder.layerG.length - 1);\n\t\t}\n\t}\n\n\t// given a positive number, gives out an appropriate exponent to scale it to, such that the mantissa can be an integer that accommodates\n\t// the required number of significant figures\n\tprivate static determineExponent(values:number[], sigfig:number):number\n\t{\n\t\tlet minval = Number.POSITIVE_INFINITY;\n\t\tfor (let v of values) minval = Math.min(minval, Math.abs(v));\n\n\t\tif (!Number.isFinite(minval) || Number.isNaN(minval) || minval <= 0) return 0;\n\n\t\tlet exp = Math.round(Math.log10(minval)) - sigfig;\n\t\t//let man = Math.round(minval * Math.pow(10, -exp));\n\n\t\tlet str:string[] = [];\n\t\tfor (let v of values) str.push(Math.round(v * Math.pow(10, -exp)).toString());\n\n\t\touter: while (true)\n\t\t{\n\t\t\tfor (let n = 0; n < str.length; n++)\n\t\t\t{\n\t\t\t\tif (!str[n].endsWith('0')) break outer;\n\t\t\t\tstr[n] = str[n].substring(0, str[n].length - 1);\n\t\t\t}\n\t\t\texp++;\n\t\t}\n\n\t\treturn exp;\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {DataSheet, DataSheetColumn} from 'webmolkit/data/DataSheet';\nimport {Mixfile, MixfileComponent} from '../data/Mixfile';\nimport {MDLSDFWriter} from 'webmolkit/data/MDLWriter';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {MDLMOLReader} from 'webmolkit/data/MDLReader';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {ExportMInChI} from './ExportMInChI';\n\n/*\n\tInteroperability with SDfiles: conversion of the Mixfile hierarchy into a flattened SDfile is useful for presenting to\n\tsoftware that can read this format, and is also a waypoint en route to a MInChI string.\n*/\n\nexport class ExportSDFile\n{\n\tprivate ds = new DataSheet();\n\tprivate colMol:number;\n\tprivate colName:number;\n\tprivate colHier:number;\n\tprivate colConc:number;\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t\tthis.colMol = this.ds.appendColumn('Molecule', DataSheetColumn.Molecule, '');\n\t\tthis.colName = this.ds.appendColumn('Name', DataSheetColumn.String, '');\n\t\tthis.colHier = this.ds.appendColumn('MINCHI$N', DataSheetColumn.String, '');\n\t\tthis.colConc = this.ds.appendColumn('MINCHI$C', DataSheetColumn.String, '');\n\t}\n\n\t// can add any number of mixtures, which will be numbered automatically\n\tpublic append(mixfile:Mixfile):void\n\t{\n\t\t// if the root node is something other than a pure placeholder, then add it explicitly\n\t\tif (mixfile.name || mixfile.molfile || mixfile.inchi)\n\t\t{\n\t\t\tthis.appendComponent(mixfile, [1]);\n\t\t\treturn;\n\t\t}\n\n\t\t// otherwise, add all of contents of the root node as a series with incrementing primary indexes\n\t\tif (!mixfile.contents) return;\n\t\tfor (let n = 0; n < mixfile.contents.length; n++) this.appendComponent(mixfile.contents[n], [n + 1]);\n\t}\n\n\t// return the SDF-serialised representation\n\tpublic write():string\n\t{\n\t\treturn new MDLSDFWriter(this.ds).write();\n\t}\n\n\t// ------------ private methods ------------\n\n\t// recursively add a component, and all of its subcomponents\n\tprivate appendComponent(comp:MixfileComponent, seq:number[]):void\n\t{\n\t\tlet row = this.ds.appendRow();\n\n\t\tlet mol:Molecule = null;\n\t\tif (comp.molfile)\n\t\t{\n\t\t\tmol = Molecule.fromString(comp.molfile);\n\t\t\tif (!mol)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tmol = new MDLMOLReader(comp.molfile).parse();\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\t\t\t}\n\t\t}\n\t\tif (!mol) mol = new Molecule();\n\n\t\tthis.ds.setMolecule(row, this.colMol, mol);\n\t\tif (comp.name) this.ds.setString(row, this.colName, comp.name);\n\t\tthis.ds.setString(row, this.colHier, seq.join('.'));\n\t\tthis.ds.setString(row, this.colConc, this.formatConcentration(comp));\n\n\t\tif (comp.contents) for (let n = 0; n < comp.contents.length; n++)\n\t\t{\n\t\t\tlet subseq = seq.slice(0);\n\t\t\tsubseq.push(n + 1);\n\t\t\tthis.appendComponent(comp.contents[n], subseq);\n\t\t}\n\t}\n\n\t// turns a concentration into a suitable precursor string, or null otherwise\n\tprivate formatConcentration(comp:MixfileComponent):string\n\t{\n\t\t/* ... this is a pseudo-MInChI approach ...\n\t\t// TODO: need special deal for ratio without denominator - can sometimes add them up to form an implicit denominator\n\n\t\tif (comp.ratio && comp.ratio.length >= 2)\n\t\t{\n\t\t\tlet numer = comp.ratio[0], denom = comp.ratio[1];\n\t\t\tif (!(denom > 0)) return null;\n\t\t\treturn (100 * numer / denom) + ' pp';\n\t\t}\n\n\t\tif (comp.quantity == null || comp.units == null) return null;\n\n\t\t// special deal (maybe temporary): units that are written with common names that map to a URI are converted automatically\n\t\tlet unitURI = comp.units;\n\t\tif (!unitURI.startsWith('http://')) unitURI = Units.nameToURI(unitURI);\n\t\tif (!unitURI) return;\n\n\t\t// TODO: maybe another special deal for absolute weight/volume/mole quantities - convert them into ratios, to the extent that's\n\t\t// possible... maybe approximating where necessary\n\n\t\tlet bits:string[] = [];\n\n\t\tif (comp.relation != null) bits.push(comp.relation);\n\n\t\tlet values:number[] = typeof comp.quantity == 'number' ? [comp.quantity as number] : comp.quantity;\n\n\t\tlet [mnemonic, scaled] = Units.convertToMInChI(unitURI, values);\n\t\tif (!mnemonic) return;\n\t\tbits.push(scaled[0].toString());\n\t\tif (scaled.length > 1) {bits.push('..'); bits.push(scaled[1].toString());}\n\t\tbits.push(mnemonic);\n\n\t\treturn bits.join(' ');*/\n\n\t\tlet useRatio:number = null;\n\t\tif (Vec.len(comp.ratio) == 2) useRatio = comp.ratio[0]; // mixfile ratios are stored as [numer, denom] where denom is checksum; could verify that this\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// is consistent before deigning to use it, but we're just passing it through\n\t\treturn ExportMInChI.formatConcentration(comp.quantity, comp.error, useRatio, comp.units, comp.relation);\n\t}\n}\n\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"path\");","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {EditMixture} from '../mixture/EditMixture';\nimport {MainPanel} from './MainPanel';\nimport {MenuBanner, MenuBannerButton, MenuBannerCommand} from './MenuBanner';\nimport {ClipboardProxy, ClipboardProxyHandler} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy} from 'webmolkit/ui/MenuProxy';\nimport {Mixture} from '../data/Mixture';\nimport {MIXFILE_VERSION} from '../data/Mixfile';\nimport {openNewWindow} from '../startup';\nimport {ExportSDFile} from '../mixture/ExportSDFile';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {Size} from 'webmolkit/util/Geom';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {DrawMixture} from '../mixture/DrawMixture';\nimport {InChI} from '../data/InChI';\nimport {ExportMInChI, MInChISegment} from '../mixture/ExportMInChI';\nimport {Dialog} from 'webmolkit/dialog/Dialog';\nimport {yieldDOM} from 'webmolkit/util/util';\nimport {Dialog as ElectronDialog, OpenDialogOptions, SaveDialogOptions, clipboard as electronClipboard, ipcRenderer} from 'electron';\nimport {dialog as electronDialog, getCurrentWindow} from '@electron/remote';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\n/*\n\tViewing/editing window: dedicated entirely to the sketching of a mixture.\n*/\n\nconst BANNER:MenuBannerButton[][] =\n[\n\t[\n\t\t{icon: 'CommandSave.svg', tip: 'Save', cmd: MenuBannerCommand.Save},\n\t],\n\t[\n\t\t{icon: 'CommandEdit.svg', tip: 'Edit component', cmd: MenuBannerCommand.EditDetails},\n\t\t{icon: 'CommandStructure.svg', tip: 'Edit structure', cmd: MenuBannerCommand.EditStructure},\n\t\t{icon: 'CommandLookup.svg', tip: 'Lookup compound', cmd: MenuBannerCommand.Lookup},\n\t\t{icon: 'CommandPicture.svg', tip: 'Export graphics', cmd: MenuBannerCommand.ExportSVG},\n\t],\n\t[\n\t\t{icon: 'CommandAppend.svg', tip: 'Append component to the right', cmd: MenuBannerCommand.Append},\n\t\t{icon: 'CommandPrepend.svg', tip: 'Prepend component to the left', cmd: MenuBannerCommand.Prepend},\n\t\t{icon: 'CommandInsertBefore.svg', tip: 'Insert component above', cmd: MenuBannerCommand.InsertBefore},\n\t\t{icon: 'CommandInsertAfter.svg', tip: 'Append component below', cmd: MenuBannerCommand.InsertAfter},\n\t\t{icon: 'CommandDelete.svg', tip: 'Delete', cmd: MenuBannerCommand.Delete},\n\t\t{icon: 'CommandMoveUp.svg', tip: 'Move Up', cmd: MenuBannerCommand.MoveUp},\n\t\t{icon: 'CommandMoveDown.svg', tip: 'Move Down', cmd: MenuBannerCommand.MoveDown},\n\t],\n\t[\n\t\t{icon: 'CommandUndo.svg', tip: 'Undo', cmd: MenuBannerCommand.Undo},\n\t\t{icon: 'CommandRedo.svg', tip: 'Redo', cmd: MenuBannerCommand.Redo},\n\t],\n\t[\n\t\t{icon: 'CommandCopy.svg', tip: 'Copy', cmd: MenuBannerCommand.Copy},\n\t\t{icon: 'CommandCut.svg', tip: 'Cut', cmd: MenuBannerCommand.Cut},\n\t\t{icon: 'CommandPaste.svg', tip: 'Paste', cmd: MenuBannerCommand.Paste},\n\t],\n\t[\n\t\t{icon: 'CommandZoomNormal.svg', tip: 'Zoom full', cmd: MenuBannerCommand.ZoomFull},\n\t\t{icon: 'CommandZoomIn.svg', tip: 'Zoom in', cmd: MenuBannerCommand.ZoomIn},\n\t\t{icon: 'CommandZoomOut.svg', tip: 'Zoom out', cmd: MenuBannerCommand.ZoomOut},\n\t],\n];\n\nexport class MixturePanel extends MainPanel\n{\n\tprivate filename:string = null;\n\tprivate banner:MenuBanner;\n\tprivate editor = new EditMixture(this.proxyClip, this.proxyMenu);\n\n\t// ------------ public methods ------------\n\n\tconstructor(root:DOM, private proxyClip:ClipboardProxy, private proxyMenu:MenuProxy)\n\t{\n\t\tsuper(root);\n\n\t\tthis.banner = new MenuBanner(BANNER, (cmd:MenuBannerCommand) => this.menuAction(cmd));\n\n\t\tthis.editor.callbackUpdateTitle = () => this.updateTitle();\n\n\t\tlet divFlex = dom('<div/>').appendTo(root).css({'display': 'flex'});\n\t\tdivFlex.css({'flex-direction': 'column', 'width': '100%', 'height': '100%'});\n\t\tlet divBanner = dom('<div/>').appendTo(divFlex).css({'flex-grow': '0'});\n\t\tlet divEditor = dom('<div/>').appendTo(divFlex).css({'flex-grow': '1'});\n\n\t\tthis.banner.render(divBanner);\n\t\tthis.editor.render(divEditor);\n\n\t\tthis.banner.callbackRefocus = () => this.editor.refocus();\n\t}\n\n\tpublic setMixture(mixture:Mixture):void\n\t{\n\t\tthis.editor.clearHistory();\n\t\tthis.editor.setMixture(mixture, true, false);\n\t\tthis.editor.setDirty(false);\n\t}\n\n\tpublic loadFile(filename:string):void\n\t{\n\t\tif (!filename)\n\t\t{\n\t\t\tthis.editor.clearHistory();\n\t\t\tthis.editor.setMixture(new Mixture(), true, true);\n\t\t\tthis.updateTitle();\n\t\t\tthis.filename = null;\n\t\t\treturn;\n\t\t}\n\n\t\tfs.readFile(filename, 'utf-8', (err:any, data:string):void =>\n\t\t{\n\t\t\tif (err) throw err;\n\n\t\t\tlet mixture:Mixture;\n\t\t\ttry {mixture = Mixture.deserialise(data);}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tconsole.log('Invalid mixture file: ' + e + '\\n' + data);\n\t\t\t\talert('Not a valid mixture file.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmixture.mixfile.mixfileVersion = MIXFILE_VERSION; // as good a time as any to set latest version\n\n\t\t\tthis.editor.clearHistory();\n\t\t\tthis.editor.setMixture(mixture, true, false);\n\t\t\tthis.editor.setDirty(false);\n\t\t\tthis.filename = filename;\n\t\t\tthis.updateTitle();\n\t\t});\n\t}\n\n\tpublic saveFile(filename:string):void\n\t{\n\t\tlet mixture = this.editor.getMixture();\n\t\tlet content = mixture.serialise();\n\n\t\tfs.writeFile(filename, content, (err:any):void =>\n\t\t{\n\t\t\tif (err) alert('Unable to save: ' + err);\n\t\t});\n\t}\n\n\tprotected onResize():void\n\t{\n\t\tsuper.onResize();\n\t\tthis.editor.delayedRedraw();\n\n\t\t//let w = document.documentElement.clientWidth, h = document.documentElement.clientHeight;\n\t\t//this.sketcher.changeSize(w, h); // force a re-layout to match the new size\n\t}\n\n\tpublic menuAction(cmd:MenuBannerCommand):void\n\t{\n\t\tlet dlg = this.editor.compoundEditor();\n\t\tif (dlg)\n\t\t{\n\t\t\tif (cmd == MenuBannerCommand.Cut) dlg.actionCut();\n\t\t\telse if (cmd == MenuBannerCommand.Copy) dlg.actionCopy();\n\t\t\telse if (cmd == MenuBannerCommand.Paste) dlg.actionPaste();\n\t\t\telse if (cmd == MenuBannerCommand.Undo) dlg.actionUndo();\n\t\t\telse if (cmd == MenuBannerCommand.Redo) dlg.actionRedo();\n\t\t\treturn;\n\t\t}\n\t\tif (!this.editor.isReceivingCommands())\n\t\t{\n\t\t\t// certain common menu/shortcut commands are passed through to standard behaviour, the rest are stopped\n\t\t\tif ([MenuBannerCommand.Cut, MenuBannerCommand.Copy, MenuBannerCommand.Paste,\n\t\t\t\t MenuBannerCommand.Undo, MenuBannerCommand.Redo].indexOf(cmd) >= 0) document.execCommand(cmd);\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.menuAction(cmd);\n\t}\n\n\tpublic customMenuAction(cmd:MenuBannerCommand):void\n\t{\n\t\tif (cmd == MenuBannerCommand.ExportSDF) this.actionExportSDF();\n\t\telse if (cmd == MenuBannerCommand.ExportSVG) this.actionFileExportSVG();\n\t\telse if (cmd == MenuBannerCommand.CreateMInChI) this.actionFileCreateMInChI();\n\t\telse if (cmd == MenuBannerCommand.Undo) this.editor.performUndo();\n\t\telse if (cmd == MenuBannerCommand.Redo) this.editor.performRedo();\n\t\telse if (cmd == MenuBannerCommand.Cut) this.editor.clipboardCopy(true);\n\t\telse if (cmd == MenuBannerCommand.Copy) this.editor.clipboardCopy(false);\n\t\telse if (cmd == MenuBannerCommand.CopyBranch) this.editor.clipboardCopy(false, true);\n\t\telse if (cmd == MenuBannerCommand.Paste) this.editor.clipboardPaste();\n\t\telse if (cmd == MenuBannerCommand.EditStructure) this.editor.editStructure();\n\t\telse if (cmd == MenuBannerCommand.EditDetails) this.editor.editDetails();\n\t\telse if (cmd == MenuBannerCommand.Lookup) this.editor.lookupCurrent();\n\t\telse if (cmd == MenuBannerCommand.Delete) this.editor.deleteCurrent();\n\t\telse if (cmd == MenuBannerCommand.Append) this.editor.appendToCurrent();\n\t\telse if (cmd == MenuBannerCommand.Prepend) this.editor.prependBeforeCurrent();\n\t\telse if (cmd == MenuBannerCommand.InsertBefore) this.editor.insertBeforeCurrent();\n\t\telse if (cmd == MenuBannerCommand.InsertAfter) this.editor.insertAfterCurrent();\n\t\telse if (cmd == MenuBannerCommand.MoveUp) this.editor.reorderCurrent(-1);\n\t\telse if (cmd == MenuBannerCommand.MoveDown) this.editor.reorderCurrent(1);\n\t\telse if (cmd == MenuBannerCommand.ZoomFull) this.editor.zoomFull();\n\t\telse if (cmd == MenuBannerCommand.ZoomNormal) this.editor.zoomNormal();\n\t\telse if (cmd == MenuBannerCommand.ZoomIn) this.editor.zoom(1.25);\n\t\telse if (cmd == MenuBannerCommand.ZoomOut) this.editor.zoom(0.8);\n\t\telse super.customMenuAction(cmd);\n\t}\n\n\t// ------------ private methods ------------\n\n\tprotected actionFileOpen():void\n\t{\n\t\tlet filedir = this.filename && this.filename.indexOf(path.sep) ? this.filename.substring(0, this.filename.lastIndexOf(path.sep)) : undefined;\n\t\tlet params:OpenDialogOptions =\n\t\t{\n\t\t\ttitle: 'Open Mixture',\n\t\t\tproperties: ['openFile'],\n\t\t\tdefaultPath: filedir,\n\t\t\tfilters:\n\t\t\t[\n\t\t\t\t{name: 'Mixfile', extensions: ['mixfile']},\n\t\t\t\t{name: 'Mixfile Collection', extensions: ['json']},\n\t\t\t]\n\t\t};\n\t\telectronDialog.showOpenDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tlet inPlace = this.editor.getMixture().isEmpty();\n\t\t\tfor (let fn of value.filePaths)\n\t\t\t{\n\t\t\t\tif (inPlace && fn.endsWith('.mixfile'))\n\t\t\t\t{\n\t\t\t\t\tthis.loadFile(fn);\n\t\t\t\t\tinPlace = false;\n\t\t\t\t}\n\t\t\t\telse if (fn.endsWith('.json'))\n\t\t\t\t\topenNewWindow('CollectionPanel', fn);\n\t\t\t\telse\n\t\t\t\t\topenNewWindow('MixturePanel', fn);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected actionFileSave():void\n\t{\n\t\tif (this.editor.isBlank()) return;\n\t\tif (!this.filename) {this.actionFileSaveAs(); return;}\n\n\t\tthis.saveFile(this.filename);\n\t\tthis.editor.setDirty(false);\n\t\tthis.updateTitle();\n\t}\n\n\tprotected actionFileSaveAs():void\n\t{\n\t\tif (this.editor.isBlank()) return;\n\n\t\tlet params:SaveDialogOptions =\n\t\t{\n\t\t\ttitle: 'Save Mixfile',\n\t\t\t//defaultPath...\n\t\t\tfilters:\n\t\t\t[\n\t\t\t\t{name: 'Mixfile', extensions: ['mixfile']}\n\t\t\t]\n\t\t};\n\t\telectronDialog.showSaveDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tthis.saveFile(value.filePath);\n\t\t\tthis.filename = value.filePath;\n\t\t\tthis.editor.setDirty(false);\n\t\t\tthis.updateTitle();\n\t\t});\n\t}\n\n\tprivate actionExportSDF():void\n\t{\n\t\tlet mixture = this.editor.getMixture();\n\t\tif (mixture.isEmpty()) return;\n\n\t\tlet exportSDF = new ExportSDFile();\n\t\texportSDF.append(mixture.mixfile);\n\t\tlet sdfile = exportSDF.write();\n\n\t\tlet defPath = this.filename;\n\t\tif (defPath)\n\t\t{\n\t\t\tlet lastDot = defPath.lastIndexOf('.');\n\t\t\tif (lastDot > 0 && lastDot > defPath.lastIndexOf('/') && lastDot > defPath.lastIndexOf('\\\\')) defPath = defPath.substring(0, lastDot);\n\t\t\tdefPath += '.sdf';\n\t\t}\n\t\telse defPath = undefined;\n\n\t\tlet params:SaveDialogOptions =\n\t\t{\n\t\t\ttitle: 'Export as SDfile',\n\t\t\tdefaultPath: defPath,\n\t\t\tfilters:\n\t\t\t[\n\t\t\t\t{name: 'SDfile', extensions: ['sdf']}\n\t\t\t]\n\t\t};\n\t\tif (this.filename && this.filename.endsWith('.mixfile'))\n\t\t\tparams.defaultPath = (this.filename.substring(0, this.filename.length - 8) + '.sdf').split(/[\\/\\\\]/).pop();\n\n\t\telectronDialog.showSaveDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tfs.writeFile(value.filePath, sdfile, (err:any):void =>\n\t\t\t{\n\t\t\t\tif (err) alert('Unable to save: ' + err);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate actionFileExportSVG():void\n\t{\n\t\tlet defPath = this.filename;\n\t\tif (defPath)\n\t\t{\n\t\t\tlet lastDot = defPath.lastIndexOf('.');\n\t\t\tif (lastDot > 0 && lastDot > defPath.lastIndexOf('/') && lastDot > defPath.lastIndexOf('\\\\')) defPath = defPath.substring(0, lastDot);\n\t\t\tdefPath += '.svg';\n\t\t}\n\t\telse defPath = undefined;\n\n\t\tlet params:SaveDialogOptions =\n\t\t{\n\t\t\t'title': 'Save SVG Diagram',\n\t\t\t'defaultPath': defPath,\n\t\t\t'filters':\n\t\t\t[\n\t\t\t\t{'name': 'Scalable Vector Graphics', 'extensions': ['svg']}\n\t\t\t]\n\t\t};\n\t\telectronDialog.showSaveDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tlet policy = RenderPolicy.defaultColourOnWhite();\n\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\tlet layout = new ArrangeMixture(this.editor.getMixture(), measure, policy);\n\t\t\tlayout.collapsedBranches = this.editor.getCollapsedBranches();\n\t\t\t// TODO: decide whether to pack the branches...\n\t\t\tlayout.packBranches = new Size(0.8 * this.editor.contentDOM.width(), 0.8 * this.editor.contentDOM.height());\n\t\t\tlayout.arrange();\n\n\t\t\tlet gfx = new MetaVector();\n\t\t\tnew DrawMixture(layout, gfx).draw();\n\t\t\tgfx.normalise();\n\t\t\tlet svg = gfx.createSVG(true, true);\n\n\t\t\tfs.writeFile(value.filePath, svg, (err:any):void =>\n\t\t\t{\n\t\t\t\tif (err) alert('Unable to save: ' + err);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate actionFileCreateMInChI():void\n\t{\n\t\tif (!InChI.isAvailable())\n\t\t{\n\t\t\talert('InChI executable has not been configured. Specify with --inchi parameter.');\n\t\t\treturn;\n\t\t}\n\n\t\tlet maker = new ExportMInChI(this.editor.getMixture().mixfile);\n\t\tlet self = this;\n\t\tclass MInChIDialog extends Dialog\n\t\t{\n\t\t\tconstructor()\n\t\t\t{\n\t\t\t\tsuper();\n\t\t\t\tthis.title = 'MInChI';\n\t\t\t}\n\t\t\tprotected populate():void\n\t\t\t{\n\t\t\t\tself.proxyClip.pushHandler(new ClipboardProxyHandler());\n\t\t\t\tthis.bodyDOM().setText('Calculating...');\n\t\t\t\t(async () => await this.renderResult())();\n\t\t\t}\n\t\t\tpublic close():void\n\t\t\t{\n\t\t\t\tself.proxyClip.popHandler();\n\t\t\t\tsuper.close();\n\t\t\t}\n\t\t\tprivate async renderResult():Promise<void>\n\t\t\t{\n\t\t\t\tawait yieldDOM();\n\t\t\t\tawait maker.fillInChI();\n\t\t\t\tmaker.formulate();\n\n\t\t\t\tlet body = this.bodyDOM();\n\t\t\t\tbody.empty();\n\n\t\t\t\tlet divOuter = dom('<div/>').appendTo(body);\n\t\t\t\tlet pre = dom('<span/>').appendTo(divOuter).css({'font-family': 'monospace', 'padding-top': '0.5em', 'word-break': 'break-all'});\n\t\t\t\tlet minchi = maker.getResult(), segment = maker.getSegment();\n\t\t\t\tfor (let n = 0; n < minchi.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet span = dom('<span/>').appendTo(pre);\n\t\t\t\t\tspan.setText(minchi[n]);\n\t\t\t\t\tif (segment[n] == MInChISegment.Header) span.setCSS('background-color', '#FFC0C0');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Component) span.setCSS('background-color', '#C0C0FF');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Hierarchy) span.setCSS('background-color', '#E0E080');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Concentration) span.setCSS('background-color', '#80E080');\n\t\t\t\t\tpre.appendHTML('<wbr/>');\n\t\t\t\t}\n\n\t\t\t\tlet btnCopy = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\">Copy</button>').appendTo(divOuter).css({'margin-left': '0.5em'});\n\t\t\t\tbtnCopy.onClick(() => self.proxyClip.setString(minchi));\n\t\t\t}\n\t\t}\n\t\tnew MInChIDialog().open();\n\t}\n\n\tprivate updateTitle():void\n\t{\n\t\tif (this.filename == null) {document.title = 'Mixtures'; return;}\n\n\t\tlet slash = Math.max(this.filename.lastIndexOf('/'), this.filename.lastIndexOf('\\\\'));\n\t\tlet title = 'Mixtures - ' + this.filename.substring(slash + 1);\n\t\tif (this.editor.isDirty() && !this.editor.isBlank()) title += '*';\n\t\tdocument.title = title;\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {MainPanel} from './main/MainPanel';\nimport {MixturePanel} from './main/MixturePanel';\nimport {DOM} from 'webmolkit/util/dom';\nimport {initWebMolKit, Theme} from 'webmolkit/util/Theme';\nimport {OntologyTree} from 'webmolkit/data/OntologyTree';\nimport {ClipboardProxy} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy, MenuProxyContext} from 'webmolkit/ui/MenuProxy';\nimport * as path from 'path';\nimport * as process from 'process';\nimport {ipcRenderer} from 'electron';\nimport {BrowserWindow, Menu as ElectronMenu, MenuItem as ElectronMenuItem, clipboard as electronClipboard, getCurrentWindow} from '@electron/remote';\n\nexport let ON_DESKTOP = false; // by default assume it's running in a regular web page; switch to true if it's the locally\n\t\t\t\t\t\t\t   // executed window version\nexport function setOnDesktop(onDesktop:boolean):void {ON_DESKTOP = onDesktop;}\n\n/*\n\tStartup: gets the ball rolling, and provide some high level window handling.\n*/\n\nexport async function runMixfileEditor(resURL:string, rootID:string):Promise<void>\n{\n\tlet root = DOM.find('#' + rootID);\n\n\tON_DESKTOP = true;\n\tinitWebMolKit(resURL);\n\tawait OntologyTree.init();\n\tawait OntologyTree.main.loadFromURL(resURL + '/data/ontology/metacategory.onto');\n\n\tprocess.env['ELECTRON_DISABLE_SECURITY_WARNINGS'] = 'true';\n\n\tlet url = window.location.href.substring(0, window.location.href.lastIndexOf('/'));\n\tTheme.RESOURCE_URL = path.normalize(url + '/res');\n\n\t// unpack web params: if present, they determine where to go from here\n \tlet params = window.location.search.substring(1).split('&');\n\tlet panelClass:string = null; // default is straight to molecule editing\n\tlet filename:string = null;\n\tfor (let p of params)\n\t{\n\t\tlet eq = p.indexOf('=');\n\t\tif (eq < 0) continue;\n\t\tlet key = p.substring(0, eq), val = decodeURIComponent(p.substring(eq + 1));\n\t\tif (key == 'panel') panelClass = val;\n\t\telse if (key == 'fn') filename = val;\n\t}\n\n\tif (!panelClass && filename && filename.endsWith('.json')) panelClass = 'CollectionPanel';\n\n\tlet proxyClip = new ClipboardProxy();\n\tproxyClip.getString = ():string => electronClipboard.readText();\n\tproxyClip.setString = (str:string):void => electronClipboard.writeText(str);\n\tproxyClip.setHTML = (html:string):void => electronClipboard.writeHTML(html);\n\tproxyClip.canSetHTML = ():boolean => true;\n\tproxyClip.canAlwaysGet = ():boolean => true;\n\n\tlet proxyMenu = new MenuProxy();\n\tproxyMenu.hasContextMenu = () => true;\n\tproxyMenu.openContextMenu = (menuItems:MenuProxyContext[], event:MouseEvent) =>\n\t{\n\t\tlet populate = (emenu:Electron.Menu, itemList:MenuProxyContext[]):void =>\n\t\t{\n\t\t\tfor (let item of itemList)\n\t\t\t{\n\t\t\t\tif (!item || !item.label) emenu.append(new ElectronMenuItem({type: 'separator'}));\n\t\t\t\telse if (item.click) emenu.append(new ElectronMenuItem(item));\n\t\t\t\telse if (item.subMenu)\n\t\t\t\t{\n\t\t\t\t\tlet subMenu = new ElectronMenu();\n\t\t\t\t\tpopulate(subMenu, item.subMenu);\n\t\t\t\t\temenu.append(new ElectronMenuItem({label: item.label, submenu: subMenu}));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tlet menu = new ElectronMenu();\n\t\tpopulate(menu, menuItems);\n\n\t\tmenu.popup({window: getCurrentWindow()});\n\t};\n\n\tlet main:MainPanel;\n\tif (!panelClass)\n\t{\n\t\tlet dw = main = new MixturePanel(root, proxyClip, proxyMenu);\n\t}\n\telse\n\t{\n\t\t/* !! TODO \n\t\tlet proto = (Mixtures as any)[panelClass];\n\t\tif (!proto) throw 'Unknown class: ' + panelClass;\n\t\tmain = new (proto as any)(root, proxyClip, proxyMenu);*/\n\t}\n\n\tmain.loadFile(filename);\n\n\tipcRenderer.on('menuAction', (event, args) => main.menuAction(args));\t\n}\n\n// high level functionality for opening a window, with a given panel as content\n/*export function openNewWindow(panelClass:string, filename?:string):void\n{\n\tconst WEBPREF = {nodeIntegration: true, contextIsolation: false, enableRemoteModule: true, spellcheck: false};\n\tlet iconFN = __dirname + '/img/icon.png';\n\tlet bw = new BrowserWindow({width: 900, height: 800, icon: iconFN, webPreferences: WEBPREF});\n\tlet baseApp = path.normalize('file:/' + __dirname);\n\tlet url = baseApp + '/index.html?panel=' + panelClass;\n\tif (filename) url += '&fn=' + encodeURIComponent(filename);\n\tbw.loadURL(url);\n}*/\n\n\nexport function openNewWindow(panelClass:string, filename?:string, options:Record<string, string> = {}):void\n{\n\tlet args:Record<string, string> = {...options};\n\tif (panelClass) args['panelClass'] = panelClass;\n\tif (filename) args['filename'] = filename;\n\tipcRenderer.send('openWindow', args);\n}\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {ON_DESKTOP} from '../startup';\nimport {MolUtil} from 'webmolkit/data/MolUtil';\nimport {MDLMOLWriter} from 'webmolkit/data/MDLWriter';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport {getGlobal} from '@electron/remote';\n\n/*\n\tInteroperability with InChI technology: the generator program is a native binary, the location of which\n\tneeds to be discovered. Each generation operation involves a trip to the external execution subsystem.\n*/\n\nlet execLocation:string = null;\nlet inchi:InChI = null;\n\nexport class InChI\n{\n\t// optional override: when using the Emscripten-ported version of InChI, set this function to call the\n\t// natively encoded implementation\n\tpublic static nativeMolfileToInChI:(mdlmol:string, options:string) => Promise<string> = null;\n\n\tprivate available = false;\n\tprivate inchiPath = execLocation;\n\n\tconstructor()\n\t{\n\t\tif (!ON_DESKTOP) return;\n\n\t\tif (!this.inchiPath)\n\t\t{\n\t\t\tthis.inchiPath = getGlobal('INCHI_EXEC');\n\t\t}\n\n\t\tif (this.inchiPath)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfs.accessSync(this.inchiPath, fs.constants.X_OK);\n\t\t\t\tthis.available = true;\n\t\t\t}\n\t\t\tcatch (ex) {} // not available\n\t\t}\n\t}\n\n\t// specify where the executable file is (overrides the global option)\n\tpublic static hasExecutable():boolean\n\t{\n\t\treturn !!execLocation;\n\t}\n\tpublic static setExecutable(exec:string):void\n\t{\n\t\texecLocation = exec;\n\t}\n\n\t// returns true if we have reason to believe the InChI executable can be run on demand\n\tpublic static isAvailable():boolean\n\t{\n\t\tif (this.nativeMolfileToInChI != null) return true;\n\t\tif (!inchi) inchi = new InChI();\n\t\treturn inchi.available;\n\t}\n\n\t// converts a molecule to an InChI string, if possible; should check the availability first, for graceful\n\t// rejection; failure results in an exception; note that it is executed synchronously: if the executable takes\n\t// a long time to run, this will be a problem for the UI; the return value is [InChI, InChIKey]\n\tpublic static async makeInChI(mol:Molecule):Promise<[string, string]>\n\t{\n\t\tmol = mol.clone();\n\t\tMolUtil.expandAbbrevs(mol, true);\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (mol.bondOrder(n) < 1 || mol.bondOrder(n) > 3) mol.setBondOrder(n, 1);\n\n\t\tlet writer = new MDLMOLWriter(mol);\n\t\twriter.enhancedFields = false;\n\t\tlet mdlmol = writer.write();\n\n\t\tif (this.nativeMolfileToInChI != null)\n\t\t{\n\t\t\tlet inchi = await this.nativeMolfileToInChI(mdlmol, '-AuxNone -NoLabels');\n\t\t\treturn [inchi, null]; // NOTE: this version doesn't provide a key; address this in the future\n\t\t}\n\n\t\tif (!inchi) inchi = new InChI();\n\t\tif (!inchi.available) throw 'InChI executable is not available.';\n\n\t\tconst proc = require('child_process');\n\n\t\tlet cmd = inchi.inchiPath.replace(/ /g, '\\\\\\ '); // very crude escaping of spaces\n\t\tlet result = proc.spawnSync(cmd, ['-STDIO', '-AuxNone', '-NoLabels', '-Key'], {input: mdlmol});\n\t\tlet raw = result.stdout.toString(), bits = raw.split('\\n');\n\n\t\tif (bits.length < 2 || !bits[0].startsWith('InChI='))\n\t\t{\n\t\t\tconsole.log('InChI command returned result:\\n' + raw);\n\t\t\tconsole.log('Molecule:\\n' + mol);\n\t\t\tconsole.log('MDL Molfile:\\n' + mdlmol);\n\t\t\tthrow 'Invalid returned by InChI generator: ' + raw;\n\t\t}\n\t\treturn bits;\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Mixfile} from './Mixfile';\nimport {Mixture} from './Mixture';\n\n/*\n\tCollection of mixtures: convenience methods for handling an array thereof, including serialisation.\n\n\tMost of the methods that fetch or modify the mixture content one item at a time make deep clones, so it is safe to\n\tassume that there are no dangling pointers. Exceptions include the constructor, bulk modifications, and methods marked\n\tas providing direct access.\n*/\n\nexport class MixtureCollection\n{\n\tprivate mixtures:Mixture[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor(mixtures?:Mixture[])\n\t{\n\t\tif (mixtures) this.mixtures = mixtures.slice(0);\n\t}\n\n\tpublic get count():number\n\t{\n\t\treturn this.mixtures.length;\n\t}\n\tpublic getMixture(idx:number):Mixture\n\t{\n\t\treturn this.mixtures[idx].clone();\n\t}\n\tpublic getMixtureDirect(idx:number):Mixture\n\t{\n\t\treturn this.mixtures[idx];\n\t}\n\tpublic setMixture(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures[idx] = mixture.clone();\n\t}\n\tpublic setMixtureDirect(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures[idx] = mixture;\n\t}\n\tpublic deleteMixture(idx:number):void\n\t{\n\t\tthis.mixtures.splice(idx, 1);\n\t}\n\tpublic appendMixture(mixture:Mixture):number\n\t{\n\t\tthis.mixtures.push(mixture.clone());\n\t\treturn this.mixtures.length - 1;\n\t}\n\tpublic appendMixtureDirect(mixture:Mixture):number\n\t{\n\t\tthis.mixtures.push(mixture);\n\t\treturn this.mixtures.length - 1;\n\t}\n\tpublic appendCollection(collection:MixtureCollection):void\n\t{\n\t\tthis.mixtures = this.mixtures.concat(collection.mixtures);\n\t}\n\tpublic insertMixture(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures.splice(idx, 0, mixture.clone());\n\t}\n\tpublic swapMixtures(idx1:number, idx2:number):void\n\t{\n\t\tlet [m1, m2] = [this.mixtures[idx1], this.mixtures[idx2]];\n\t\tthis.mixtures[idx1] = m2;\n\t\tthis.mixtures[idx2] = m1;\n\t}\n\n\t// unpacks a string into a mixture; throws an exception if anything went wrong\n\tpublic static deserialise(data:string):MixtureCollection\n\t{\n\t\tlet list = JSON.parse(data);\n\t\tif (!Array.isArray(list)) throw 'Input content is not a JSON array.';\n\t\tlet mixtures:Mixture[] = [];\n\t\tfor (let mixfile of list) mixtures.push(new Mixture(mixfile));\n\t\treturn new MixtureCollection(mixtures);\n\t}\n\n\t// converts the entire underlying JSON mixfile into a prettyprinted string; note the optional beautification parameter:\n\t// if not specified, small collections will get nice whitespace, whereas large ones will be densely packed for efficiency\n\tpublic serialise(beautify?:boolean):string\n\t{\n\t\tlet list:Mixfile[] = [];\n\t\tfor (let mixture of this.mixtures) list.push(mixture.mixfile);\n\t\t//return beautify || list.length <= 1000 ? Mixture.beautify(list) : JSON.stringify(list);\n\t\tif (beautify || list.length <= 100) return Mixture.beautify(list);\n\t\t\n\t\tlet lines = list.map((mixfile) => JSON.stringify(mixfile));\n\t\treturn '[\\n    ' + lines.join(',\\n    ') + '\\n]\\n';\n\t}\n\n\t// ------------ private methods ------------\n\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2021 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {MixtureCollection} from '../data/MixtureCollection';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {DrawMixture} from '../mixture/DrawMixture';\nimport {ExportMInChI, MInChISegment} from '../mixture/ExportMInChI';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {escapeHTML} from 'webmolkit/util/util';\nimport * as path from 'path';\nimport * as fs from 'fs';\n\n/*\n\tLoads a mixture collection and emits it as visualisable HTML.\n*/\n\nexport class RenderHTML\n{\n\tconstructor(private htmlFile:string, private withMInChI:boolean)\n\t{\n\t}\n\n\tpublic async exec():Promise<void>\n\t{\n\t\tlet content:string;\n\t\ttry {content = fs.readFileSync(this.htmlFile).toString();}\n\t\tcatch (ex) {throw 'Unable to read file ' + this.htmlFile + ': ' + ex;}\n\n\t\tlet mixlist = MixtureCollection.deserialise(content);\n\t\tif (mixlist.count == 0) throw 'Nothing to render';\n\n\t\tlet emitln = (line:string):void => console.log(line);\n\t\tlet emit = (txt:string):void => {process.stdout.write(txt);};\n\n\t\temitln('<html>');\n\t\temitln('<style>');\n\t\temitln('table {border-collapse: collapse;}');\n\t\temitln('td {border: 1px solid black; padding: 0.2em;}');\n\t\temitln('.header {background-color: #FFC0C0;}');\n\t\temitln('.component {background-color: #C0C0FF;}');\n\t\temitln('.hierarchy {background-color: #E0E080;}');\n\t\temitln('.concentration {background-color: #80E080;}');\n\t\temitln('</style>');\n\t\t\n\t\temitln('<body><table>');\n\n\t\tlet policy = RenderPolicy.defaultColourOnWhite(15);\n\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\n\t\tfor (let n = 0; n < mixlist.count; n++)\n\t\t{\n\t\t\tlet mixture = mixlist.getMixtureDirect(n);\n\n\t\t\temitln('<tr>');\n\t\t\temitln(`<td>${n + 1}</td>`);\n\n\t\t\tlet layout = new ArrangeMixture(mixture, measure, policy);\n\t\t\tlayout.arrange();\n\n\t\t\tlet gfx = new MetaVector();\n\t\t\tlet draw = new DrawMixture(layout, gfx);\n\t\t\tdraw.draw();\n\t\t\tgfx.normalise();\n\n\t\t\temitln('<td>');\n\t\t\temitln(gfx.createSVG());\n\t\t\temitln('</td>');\n\n\t\t\tif (this.withMInChI)\n\t\t\t{\n\t\t\t\tlet maker = new ExportMInChI(mixture.mixfile);\n\t\t\t\tawait maker.fillInChI();\n\t\t\t\tmaker.formulate();\n\t\t\t\t//let minchi = creator.getResult();\n\t\t\t\t//emitln('<td><pre>' + escapeHTML(minchi) + '</pre></td>');\n\n\t\t\t\temit('<td><pre>');\n\t\t\t\tlet minchi = maker.getResult(), segment = maker.getSegment();\n\t\t\t\tfor (let n = 0; n < minchi.length; n++)\n\t\t\t\t{\n\t\t\t\t\temit('<span');\n\t\t\t\t\tif (segment[n] == MInChISegment.Header) emit(' class=\"header\"');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Component) emit(' class=\"component\"');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Hierarchy) emit(' class=\"hierarchy\"');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Concentration) emit(' class=\"concentration\"');\n\t\t\t\t\temit('>' + escapeHTML(minchi[n]) + '</span>');\n\t\t\t\t}\n\t\t\t\temitln('</pre></td>');\n\t\t\t}\n\n\t\t\temitln('</tr>');\n\t\t}\n\n\t\temitln('</table></body></html>');\n\t}\n\n\t// ------------ private methods ------------\n}\n\n","import { DataSheet } from '../data/DataSheet';\nimport { Vec } from '../util/Vec';\nclass Aspect {\n    constructor(code, ds, allowModify) {\n        this.code = code;\n        this.allowModify = true;\n        this.ds = ds ? ds : new DataSheet();\n        if (allowModify != null)\n            this.allowModify = allowModify;\n    }\n    isColumnReserved(colName) { return false; }\n    areColumnsReserved(colNames) {\n        let resMask = Vec.booleanArray(false, colNames.length);\n        for (let n = 0; n < colNames.length; n++)\n            resMask[n] = this.isColumnReserved(colNames[n]);\n        return resMask;\n    }\n    rowFirstBlock(row) { return true; }\n    rowBlockCount(row) { return 1; }\n    aspectUnion(other) { }\n    initiateNewRow(row) { }\n    columnEffectivelyBlank(row) { return []; }\n    numTextRenderings(row) { return 0; }\n    produceTextRendering(row, idx) { return null; }\n    numGraphicRenderings(row) { return 0; }\n    produceGraphicRendering(row, idx, policy) { return null; }\n    numHeaderRenderings() { return 0; }\n    produceHeaderRendering(idx) { return null; }\n}\nAspect.TEXT_PLAIN = 0;\nAspect.TEXT_LINK = 1;\nAspect.TEXT_HTML = 2;\nexport { Aspect };\n//# sourceMappingURL=Aspect.js.map","let supportedAspects = {};\nexport function registerAspect(classdef) {\n    let code = classdef.CODE, name = classdef.NAME;\n    supportedAspects[code] = { code, name, classdef };\n}\nexport class AspectList {\n    constructor(ds) {\n        this.ds = ds;\n    }\n    list() {\n        let present = [], absent = [];\n        let codes = new Set();\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            codes.add(this.ds.getExtType(n));\n        for (let code in supportedAspects)\n            if (codes.has(code))\n                present.push(code);\n            else\n                absent.push(code);\n        return [present, absent];\n    }\n    instantiate(code) {\n        let supp = supportedAspects[code];\n        if (supp)\n            return new supp.classdef(this.ds);\n        return null;\n    }\n    enumerate() {\n        let aspects = [];\n        for (let n = 0; n < this.ds.numExtensions; n++) {\n            let code = this.ds.getExtType(n);\n            if (supportedAspects[code])\n                aspects.push(this.instantiate(code));\n        }\n        return aspects;\n    }\n    aspectName(code) {\n        let supp = supportedAspects[code];\n        return supp ? supp.name : null;\n    }\n}\n//# sourceMappingURL=AspectList.js.map","import { MoleculeStream } from '../data/MoleculeStream';\nimport { Aspect } from './Aspect';\nimport { registerAspect } from './AspectList';\nexport class AssayProvenanceHeader {\n    constructor() {\n        this.prefixes = {};\n        this.targetName = '';\n        this.targetURI = '';\n        this.organismName = '';\n        this.organismURI = '';\n        this.targetTypeName = '';\n        this.targetTypeURI = '';\n        this.cellName = '';\n        this.cellURI = '';\n        this.assayTypeName = '';\n        this.assayTypeURI = '';\n        this.assayDescription = '';\n        this.sourceName = '';\n        this.sourceURI = '';\n        this.sourceVersion = '';\n        this.documentName = '';\n        this.documentURI = '';\n        this.measureTypeName = '';\n        this.measureTypeURI = '';\n        this.unitNames = [];\n        this.unitURIs = [];\n    }\n}\nclass AssayProvenance extends Aspect {\n    static isAssayProvenance(ds) {\n        for (let n = 0; n < ds.numExtensions; n++)\n            if (ds.getExtType(n) == AssayProvenance.CODE)\n                return true;\n        return false;\n    }\n    constructor(ds, allowModify) {\n        super(AssayProvenance.CODE, ds, allowModify);\n        this.setup();\n    }\n    getHeader() {\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == AssayProvenance.CODE)\n                return this.parseMetaData(this.ds.getExtData(n));\n        return null;\n    }\n    setHeader(header) {\n        let content = this.formatMetaData(header);\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == AssayProvenance.CODE) {\n                this.ds.setExtData(n, content);\n                return;\n            }\n        this.ds.appendExtension(AssayProvenance.NAME, AssayProvenance.CODE, content);\n    }\n    getMolecule(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_MOLECULE);\n        return col < 0 ? null : this.ds.getMolecule(row, col);\n    }\n    getName(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_NAME);\n        return col < 0 ? null : this.ds.getString(row, col);\n    }\n    getValue(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_VALUE);\n        return col < 0 ? null : this.ds.isNull(row, col) ? Number.NaN : this.ds.getReal(row, col);\n    }\n    getError(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_ERROR);\n        if (col < 0)\n            return null;\n        if (this.ds.isNull(row, col))\n            return Number.NaN;\n        let err = this.ds.getReal(row, col);\n        if (err <= 0)\n            return Number.NaN;\n        return err;\n    }\n    getUnits(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_UNITS);\n        return col < 0 ? null : this.ds.getString(row, col);\n    }\n    getRelation(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_RELATION);\n        return col < 0 ? null : this.ds.getString(row, col);\n    }\n    getSourceURI(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_SOURCEURI);\n        return col < 0 ? null : this.ds.getString(row, col);\n    }\n    setMolecule(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_MOLECULE);\n        if (col >= 0)\n            this.ds.setMolecule(row, col, v);\n    }\n    setName(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_NAME);\n        if (col >= 0)\n            this.ds.setString(row, col, v);\n    }\n    setValue(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_VALUE);\n        if (col < 0) { }\n        else if (Number.isNaN(v))\n            this.ds.setToNull(row, col);\n        else\n            this.ds.setReal(row, col, v);\n    }\n    setError(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_ERROR);\n        if (col < 0) { }\n        else if (Number.isNaN(v))\n            this.ds.setToNull(row, col);\n        else\n            this.ds.setReal(row, col, v);\n    }\n    setUnits(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_UNITS);\n        if (col >= 0)\n            this.ds.setString(row, col, v);\n    }\n    setRelation(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_RELATION);\n        if (col >= 0)\n            this.ds.setString(row, col, v);\n    }\n    setSourceURI(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_SOURCEURI);\n        if (col >= 0)\n            this.ds.setString(row, col, v);\n    }\n    setup() {\n        this.parseAndCorrect();\n    }\n    parseAndCorrect() {\n        let header = new AssayProvenanceHeader();\n        let got = false;\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == AssayProvenance.CODE) {\n                header = this.parseMetaData(this.ds.getExtData(n));\n                got = true;\n                break;\n            }\n        if (this.allowModify) {\n            this.ds.ensureColumn(AssayProvenance.COLNAME_MOLECULE, \"molecule\", 'Molecular structure of compound being measured');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_NAME, \"string\", 'Name of compound');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_VALUE, \"real\", 'Measured value');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_ERROR, \"real\", 'Experimental error of measurement');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_UNITS, \"string\", 'Units of measurement');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_RELATION, \"string\", 'Relation: exact, greater or less');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_SOURCEURI, \"string\", 'Source identifier for activity measurement');\n        }\n        if (!got && this.allowModify) {\n            let content = this.formatMetaData(header);\n            this.ds.appendExtension(AssayProvenance.NAME, AssayProvenance.CODE, content);\n        }\n    }\n    parseMetaData(content) {\n        let header = new AssayProvenanceHeader();\n        for (let line of content.split(/\\r?\\n/)) {\n            let eq = line.indexOf('=');\n            if (eq < 0)\n                continue;\n            if (line.startsWith('pfx:'))\n                header.prefixes[MoleculeStream.skUnescape(line.substring(4, eq))] = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('targetName='))\n                header.targetName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('targetURI='))\n                header.targetURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('organismName='))\n                header.organismName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('organismURI='))\n                header.organismURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('targetTypeName='))\n                header.targetTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('targetTypeURI='))\n                header.targetTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('cellName='))\n                header.cellName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('cellURI='))\n                header.cellURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('assayTypeName='))\n                header.assayTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('assayTypeURI='))\n                header.assayTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('assayDescription='))\n                header.assayDescription = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('sourceName='))\n                header.sourceName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('sourceURI='))\n                header.sourceURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('sourceVersion='))\n                header.sourceVersion = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('documentName='))\n                header.documentName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('documentURI='))\n                header.documentURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('measureTypeName='))\n                header.measureTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('measureTypeURI='))\n                header.measureTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('unit:')) {\n                header.unitNames.push(MoleculeStream.skUnescape(line.substring(5, eq)));\n                header.unitURIs.push(MoleculeStream.skUnescape(line.substring(eq + 1)));\n            }\n        }\n        return header;\n    }\n    formatMetaData(header) {\n        let content = '';\n        for (let pfx in header.prefixes)\n            content += 'pfx:' + MoleculeStream.skEscape(pfx) + '=' + MoleculeStream.skEscape(header.prefixes[pfx]) + '\\n';\n        content += 'targetName=' + MoleculeStream.skEscape(header.targetName) + '\\n';\n        content += 'targetURI=' + MoleculeStream.skEscape(header.targetURI) + '\\n';\n        content += 'organismName=' + MoleculeStream.skEscape(header.organismName) + '\\n';\n        content += 'organismURI=' + MoleculeStream.skEscape(header.organismURI) + '\\n';\n        content += 'targetTypeName=' + MoleculeStream.skEscape(header.targetTypeName) + '\\n';\n        content += 'targetTypeURI=' + MoleculeStream.skEscape(header.targetTypeURI) + '\\n';\n        content += 'cellName=' + MoleculeStream.skEscape(header.cellName) + '\\n';\n        content += 'cellURI=' + MoleculeStream.skEscape(header.cellURI) + '\\n';\n        content += 'assayTypeName=' + MoleculeStream.skEscape(header.assayTypeName) + '\\n';\n        content += 'assayTypeURI=' + MoleculeStream.skEscape(header.assayTypeURI) + '\\n';\n        content += 'assayDescription=' + MoleculeStream.skEscape(header.assayDescription) + '\\n';\n        content += 'sourceName=' + MoleculeStream.skEscape(header.sourceName) + '\\n';\n        content += 'sourceURI=' + MoleculeStream.skEscape(header.sourceURI) + '\\n';\n        content += 'sourceVersion=' + MoleculeStream.skEscape(header.sourceVersion) + '\\n';\n        content += 'documentName=' + MoleculeStream.skEscape(header.documentName) + '\\n';\n        content += 'documentURI=' + MoleculeStream.skEscape(header.documentURI) + '\\n';\n        content += 'measureTypeName=' + MoleculeStream.skEscape(header.measureTypeName) + '\\n';\n        content += 'measureTypeURI=' + MoleculeStream.skEscape(header.measureTypeURI) + '\\n';\n        for (let n = 0, num = Math.min(header.unitNames.length, header.unitURIs.length); n < num; n++)\n            content += 'unit:' + MoleculeStream.skEscape(header.unitNames[n]) + '=' + MoleculeStream.skEscape(header.unitURIs[n]) + '\\n';\n        return content;\n    }\n    plainHeading() { return AssayProvenance.NAME; }\n    isColumnReserved(colName) {\n        return colName == AssayProvenance.COLNAME_VALUE || colName == AssayProvenance.COLNAME_ERROR ||\n            colName == AssayProvenance.COLNAME_UNITS || colName == AssayProvenance.COLNAME_RELATION ||\n            colName == AssayProvenance.COLNAME_SOURCEURI;\n    }\n    numTextRenderings(row) { return 2; }\n    produceTextRendering(row, idx) {\n        let header = this.getHeader();\n        if (idx == 0) {\n            let tr = {\n                name: 'Activity',\n                descr: 'Activity measurement details for this record',\n                text: '',\n                type: Aspect.TEXT_PLAIN\n            };\n            let val = this.getValue(row), error = this.getError(row);\n            let units = this.getUnits(row), rel = this.getRelation(row);\n            tr.text = '';\n            if (!Number.isNaN(val)) {\n                if (rel)\n                    tr.text += rel + ' ';\n                tr.text += val;\n                if (!Number.isNaN(error))\n                    tr.text += ' \\u{00B1} ' + error;\n                if (units)\n                    tr.text += ' ' + units;\n            }\n            return tr;\n        }\n        else if (idx == 1) {\n            let tr = {\n                name: 'Source',\n                descr: 'Origin of the structure and activity measurement',\n                text: '',\n                type: Aspect.TEXT_LINK\n            };\n            let url = this.getSourceURI(row);\n            for (let pfx in header.prefixes)\n                if (url.startsWith(pfx + ':')) {\n                    url = header.prefixes[pfx] + url.substring(pfx.length + 1);\n                    break;\n                }\n            tr.text = url;\n            return tr;\n        }\n        return null;\n    }\n}\nAssayProvenance.CODE = 'org.mmi.aspect.AssayProvenance';\nAssayProvenance.NAME = 'Assay Provenance';\nAssayProvenance.COLNAME_MOLECULE = 'Molecule';\nAssayProvenance.COLNAME_NAME = 'Name';\nAssayProvenance.COLNAME_VALUE = 'Value';\nAssayProvenance.COLNAME_ERROR = 'Error';\nAssayProvenance.COLNAME_UNITS = 'Units';\nAssayProvenance.COLNAME_RELATION = 'Relation';\nAssayProvenance.COLNAME_SOURCEURI = 'SourceURI';\nAssayProvenance.URI_UNIT_M = 'http://purl.obolibrary.org/obo/UO_0000062';\nAssayProvenance.URI_UNIT_mM = 'http://purl.obolibrary.org/obo/UO_0000063';\nAssayProvenance.URI_UNIT_uM = 'http://purl.obolibrary.org/obo/UO_0000064';\nAssayProvenance.URI_UNIT_nM = 'http://purl.obolibrary.org/obo/UO_0000065';\nAssayProvenance.URI_UNIT_pM = 'http://purl.obolibrary.org/obo/UO_0000066';\nAssayProvenance.URI_UNIT_logM = 'http://www.bioassayontology.org/bao#BAO_0000101';\nAssayProvenance.URI_UNIT_perM = 'http://www.bioassayontology.org/bao#BAO_0000102';\nAssayProvenance.URI_UNIT_gL = 'http://purl.obolibrary.org/obo/UO_0000175';\nAssayProvenance.URI_UNIT_mgL = 'http://purl.obolibrary.org/obo/UO_0000273';\nAssayProvenance.URI_UNIT_ugL = 'http://purl.obolibrary.org/obo/UO_0000275';\nAssayProvenance.URI_UNIT_binary = 'http://www.bioassayontology.org/bao#BAO_0080023';\nexport { AssayProvenance };\nregisterAspect(AssayProvenance);\n//# sourceMappingURL=AssayProvenance.js.map","import { MoleculeStream } from '../data/MoleculeStream';\nimport { Vec } from '../util/Vec';\nimport { Aspect } from './Aspect';\nimport { registerAspect } from './AspectList';\nclass MeasurementData extends Aspect {\n    static isMeasurementData(ds) {\n        for (let n = 0; n < ds.numExtensions; n++)\n            if (ds.getExtType(n) == MeasurementData.CODE)\n                return true;\n        return false;\n    }\n    constructor(ds, allowModify) {\n        super(MeasurementData.CODE, ds, allowModify);\n        this.header = { units: [], fields: [] };\n        this.setup();\n    }\n    getHeader() {\n        return this.header;\n    }\n    setHeader(header) {\n        this.header = header;\n        let content = this.formatMetaData(header);\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == MeasurementData.CODE) {\n                this.ds.setExtData(n, content);\n                return;\n            }\n        this.ds.appendExtension(MeasurementData.NAME, MeasurementData.CODE, content);\n    }\n    effectHeader(header) {\n        this.setHeader(header);\n        this.ensureFields();\n    }\n    rename(fldidx, newName) {\n        let oldName = this.header.fields[fldidx].name;\n        if (oldName == newName)\n            return;\n        this.header.fields[fldidx].name = newName;\n        this.setHeader(this.header);\n        for (let sfx of [MeasurementData.SUFFIX_VALUE, MeasurementData.SUFFIX_ERROR, MeasurementData.SUFFIX_UNITS, MeasurementData.SUFFIX_MOD]) {\n            let col = this.ds.findColByName(oldName + sfx);\n            if (col >= 0)\n                this.ds.changeColumnName(col, newName + sfx, this.ds.colDescr(col));\n        }\n    }\n    reservedColumns(fldidx) {\n        let fieldName = this.header.fields[fldidx].name;\n        return [fieldName + MeasurementData.SUFFIX_VALUE, fieldName + MeasurementData.SUFFIX_ERROR,\n            fieldName + MeasurementData.SUFFIX_UNITS, fieldName + MeasurementData.SUFFIX_MOD];\n    }\n    getValue(row, fldidx) {\n        return this.getValueField(row, this.header.fields[fldidx]);\n    }\n    getValueField(row, field) {\n        let value = { value: Number.NaN, error: Number.NaN, units: '', mod: '' };\n        let colValue = this.ds.findColByName(field.name + MeasurementData.SUFFIX_VALUE, \"real\");\n        let colError = this.ds.findColByName(field.name + MeasurementData.SUFFIX_ERROR, \"real\");\n        let colUnits = this.ds.findColByName(field.name + MeasurementData.SUFFIX_UNITS, \"string\");\n        let colMod = this.ds.findColByName(field.name + MeasurementData.SUFFIX_MOD, \"string\");\n        if (colValue >= 0 && this.ds.notNull(row, colValue))\n            value.value = this.ds.getReal(row, colValue);\n        if (colError >= 0 && this.ds.notNull(row, colError))\n            value.error = this.ds.getReal(row, colError);\n        if (colUnits >= 0)\n            value.units = this.ds.getString(row, colUnits);\n        if (colMod >= 0)\n            value.mod = this.ds.getString(row, colMod);\n        return value;\n    }\n    setValue(row, fldidx, value) {\n        let fieldName = this.header.fields[fldidx].name;\n        let colValue = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_VALUE, \"real\");\n        let colError = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_ERROR, \"real\");\n        let colUnits = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_UNITS, \"string\");\n        let colMod = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_MOD, \"string\");\n        if (colValue >= 0)\n            if (isNaN(value.value))\n                this.ds.setToNull(row, colValue);\n            else\n                this.ds.setReal(row, colValue, value.value);\n        if (colError >= 0)\n            if (isNaN(value.error))\n                this.ds.setToNull(row, colError);\n            else\n                this.ds.setReal(row, colError, value.error);\n        if (colUnits >= 0)\n            this.ds.setString(row, colUnits, value.units);\n        if (colMod >= 0)\n            this.ds.setString(row, colMod, value.mod);\n    }\n    clearValue(row, fldidx) {\n        let fieldName = this.header.fields[fldidx].name;\n        let colValue = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_VALUE, \"real\");\n        let colError = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_ERROR, \"real\");\n        let colUnits = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_UNITS, \"string\");\n        let colMod = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_MOD, \"string\");\n        if (colValue >= 0)\n            this.ds.setToNull(row, colValue);\n        if (colError >= 0)\n            this.ds.setToNull(row, colError);\n        if (colUnits >= 0)\n            this.ds.setToNull(row, colUnits);\n        if (colMod >= 0)\n            this.ds.setToNull(row, colMod);\n    }\n    getDescr(row, fldidx) {\n        let col = this.ds.findColByName(this.header.fields[fldidx].name);\n        return col < 0 ? '' : this.ds.colDescr(col);\n    }\n    setDescr(row, fldidx, descr) {\n        let col = this.ds.findColByName(this.header.fields[fldidx].name);\n        if (col >= 0)\n            this.ds.changeColumnName(col, this.ds.colName(col), descr);\n    }\n    setup() {\n        this.parseAndCorrect();\n    }\n    parseAndCorrect() {\n        this.header = { units: [], fields: [] };\n        let got = false;\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == MeasurementData.CODE) {\n                this.header = this.parseMetaData(this.ds.getExtData(n));\n                got = true;\n                break;\n            }\n        this.ensureFields();\n        if (!got && this.allowModify) {\n            let content = this.formatMetaData(this.header);\n            this.ds.appendExtension(MeasurementData.NAME, MeasurementData.CODE, content);\n        }\n    }\n    ensureFields() {\n        for (let f of this.header.fields) {\n            let descr = 'Measurement';\n            let colidx = this.ds.findColByName(f.name);\n            if (colidx >= 0)\n                descr = this.ds.colDescr(colidx);\n            if (this.allowModify) {\n                this.ds.ensureColumn(f.name + MeasurementData.SUFFIX_VALUE, \"real\", descr);\n                this.ds.ensureColumn(f.name + MeasurementData.SUFFIX_ERROR, \"real\", 'Error');\n                this.ds.ensureColumn(f.name + MeasurementData.SUFFIX_UNITS, \"string\", 'Units');\n                this.ds.ensureColumn(f.name + MeasurementData.SUFFIX_MOD, \"string\", 'Modifier');\n            }\n        }\n    }\n    parseMetaData(content) {\n        let header = { units: [], fields: [] };\n        for (let line of content.split(/\\r?\\n/)) {\n            let eq = line.indexOf('=');\n            if (eq < 0)\n                continue;\n            if (line.startsWith('unit=')) {\n                let bits = line.substring(eq + 1).split(',');\n                if (bits.length >= 2)\n                    header.units.push({ name: MoleculeStream.skUnescape(bits[0]), uri: MoleculeStream.skUnescape(bits[1]) });\n            }\n            else if (line.startsWith('field=')) {\n                let bits = line.substring(eq + 1).split(',');\n                let f = { name: MoleculeStream.skUnescape(bits[0]), units: [], defnURI: [] };\n                for (let n = 1; n < bits.length; n++)\n                    f.units.push(MoleculeStream.skUnescape(bits[n]));\n                header.fields.push(f);\n            }\n            else if (line.startsWith('definition=')) {\n                let bits = line.substring(eq + 1).split(',');\n                if (bits.length >= 2) {\n                    let f = header.fields.find((f) => f.name == bits[0]);\n                    if (!f)\n                        continue;\n                    for (let n = 1; n < bits.length; n++)\n                        f.defnURI.push(MoleculeStream.skUnescape(bits[n]));\n                }\n            }\n        }\n        return header;\n    }\n    formatMetaData(header) {\n        let lines = [];\n        for (let u of header.units) {\n            lines.push('unit=' + MoleculeStream.skEscape(u.name) + ',' + MoleculeStream.skEscape(u.uri));\n        }\n        for (let f of header.fields) {\n            let line = 'field=' + MoleculeStream.skEscape(f.name);\n            for (let u of f.units)\n                line += ',' + MoleculeStream.skEscape(u);\n            lines.push(line);\n            if (Vec.notBlank(f.defnURI)) {\n                line = 'definition=' + MoleculeStream.skEscape(f.name);\n                for (let d of f.defnURI)\n                    line += ',' + MoleculeStream.skEscape(d);\n                lines.push(line);\n            }\n        }\n        return lines.join('\\n');\n    }\n    plainHeading() { return MeasurementData.NAME; }\n    isColumnReserved(colName) {\n        return this.areColumnsReserved([colName])[0];\n    }\n    areColumnsReserved(colNames) {\n        let names = new Set();\n        for (let f of this.header.fields) {\n            names.add(f.name + MeasurementData.SUFFIX_VALUE);\n            names.add(f.name + MeasurementData.SUFFIX_ERROR);\n            names.add(f.name + MeasurementData.SUFFIX_UNITS);\n            names.add(f.name + MeasurementData.SUFFIX_MOD);\n        }\n        let resv = [];\n        for (let col of colNames)\n            resv.push(names.has(col));\n        return resv;\n    }\n    numTextRenderings(row) { return this.header.fields.length; }\n    produceTextRendering(row, idx) {\n        let field = this.header.fields[idx];\n        let colField = this.ds.findColByName(field.name);\n        let tr = {\n            name: field.name,\n            descr: colField < 0 ? '' : this.ds.colDescr(colField),\n            text: '',\n            type: Aspect.TEXT_PLAIN\n        };\n        let datum = this.getValue(row, idx);\n        if (!Number.isNaN(datum.value)) {\n            if (datum.mod)\n                tr.text += datum.mod + ' ';\n            tr.text += datum.value;\n            if (!Number.isNaN(datum.error))\n                tr.text += ' \\u{00B1} ' + datum.error;\n            if (datum.units)\n                tr.text += ' ' + datum.units;\n        }\n        return tr;\n    }\n}\nMeasurementData.CODE = 'org.mmi.aspect.MeasurementData';\nMeasurementData.NAME = 'Measurement Data';\nMeasurementData.SUFFIX_VALUE = '';\nMeasurementData.SUFFIX_ERROR = '_error';\nMeasurementData.SUFFIX_UNITS = '_units';\nMeasurementData.SUFFIX_MOD = '_mod';\nexport { MeasurementData };\nregisterAspect(MeasurementData);\n//# sourceMappingURL=MeasurementData.js.map","import { MoleculeStream } from '../data/MoleculeStream';\nimport { Vec } from '../util/Vec';\nimport { Aspect } from './Aspect';\nimport { registerAspect } from './AspectList';\nimport { MeasurementData } from './MeasurementData';\nexport var MixtureAttributeType;\n(function (MixtureAttributeType) {\n    MixtureAttributeType[\"Structure\"] = \"structure\";\n    MixtureAttributeType[\"Name\"] = \"name\";\n    MixtureAttributeType[\"Quantity\"] = \"quantity\";\n    MixtureAttributeType[\"Bound\"] = \"bound\";\n    MixtureAttributeType[\"Error\"] = \"error\";\n    MixtureAttributeType[\"Ratio\"] = \"ratio\";\n    MixtureAttributeType[\"Units\"] = \"units\";\n    MixtureAttributeType[\"Relation\"] = \"relation\";\n    MixtureAttributeType[\"Identifier\"] = \"identifier\";\n    MixtureAttributeType[\"Link\"] = \"link\";\n    MixtureAttributeType[\"Property\"] = \"property\";\n})(MixtureAttributeType || (MixtureAttributeType = {}));\nclass Mixture extends Aspect {\n    static isMixture(ds) {\n        for (let n = 0; n < ds.numExtensions; n++)\n            if (ds.getExtType(n) == Mixture.CODE)\n                return true;\n        return false;\n    }\n    constructor(ds, allowModify) {\n        super(Mixture.CODE, ds, allowModify);\n        this.header = { attributes: [] };\n        this.setup();\n    }\n    getHeader() {\n        return this.header;\n    }\n    setHeader(header) {\n        this.header = header;\n        let content = this.formatMetaData(header);\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == Mixture.CODE) {\n                this.ds.setExtData(n, content);\n                return;\n            }\n        this.ds.appendExtension(Mixture.NAME, Mixture.CODE, content);\n    }\n    setup() {\n        this.parseAndCorrect();\n    }\n    parseAndCorrect() {\n        this.header = { attributes: [] };\n        let got = false;\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == Mixture.CODE) {\n                this.header = this.parseMetaData(this.ds.getExtData(n));\n                got = true;\n                break;\n            }\n        if (!got && this.allowModify) {\n            let content = this.formatMetaData(this.header);\n            this.ds.appendExtension(Mixture.NAME, Mixture.CODE, content);\n        }\n    }\n    parseMetaData(content) {\n        let header = { attributes: [] };\n        for (let line of content.split(/\\r?\\n/)) {\n            let eq = line.indexOf('=');\n            if (eq < 0)\n                continue;\n            if (line.startsWith('attr=')) {\n                let bits = line.substring(eq + 1).split(',');\n                if (bits.length < 3)\n                    continue;\n                let column = MoleculeStream.skUnescape(bits[0]);\n                let position = [];\n                if (bits[1] != '0')\n                    position = bits[1].split('.').map((str) => parseInt(str));\n                let type = bits[2];\n                let info = [];\n                for (let n = 3; n < bits.length; n++)\n                    info.push(MoleculeStream.skUnescape(bits[n]));\n                header.attributes.push({ column, position, type, info });\n            }\n        }\n        return header;\n    }\n    formatMetaData(header) {\n        let lines = [];\n        for (let a of header.attributes) {\n            let bits = [MoleculeStream.skEscape(a.column)];\n            if (Vec.isBlank(a.position))\n                bits.push('0');\n            else\n                bits.push(a.position.join('.'));\n            bits.push(a.type);\n            if (a.info)\n                for (let str of a.info)\n                    bits.push(MoleculeStream.skEscape(str));\n            lines.push('attr=' + bits.join(','));\n        }\n        return lines.join('\\n');\n    }\n    plainHeading() { return MeasurementData.NAME; }\n    isColumnReserved(colName) {\n        return this.areColumnsReserved([colName])[0];\n    }\n    areColumnsReserved(colNames) {\n        let names = new Set();\n        for (let a of this.header.attributes)\n            names.add(a.column);\n        let resv = [];\n        for (let col of colNames)\n            resv.push(names.has(col));\n        return resv;\n    }\n}\nMixture.CODE = 'org.mmi.aspect.Mixture';\nMixture.NAME = 'Mixture';\nMixture.SUFFIX_VALUE = '';\nexport { Mixture };\nregisterAspect(Mixture);\n//# sourceMappingURL=Mixture.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2021 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {MixfileComponent} from '../data/Mixfile';\nimport {MixtureCollection} from '../data/MixtureCollection';\nimport {DataSheet} from 'webmolkit/data/DataSheet';\nimport {AssayProvenance} from 'webmolkit/aspect/AssayProvenance';\nimport {MeasurementData} from 'webmolkit/aspect/MeasurementData';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {DataSheetStream} from 'webmolkit/data/DataSheetStream';\nimport {MDLSDFReader} from 'webmolkit/data/MDLReader';\nimport {MDLMOLWriter} from 'webmolkit/data/MDLWriter';\nimport {Mixture as MixtureAspect} from 'webmolkit/aspect/Mixture';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Mixture} from '../data/Mixture';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\n/*\n\tTable extraction: create Mixfile instances from tabular data sources, with the help of directions for placing columns into\n\tthe mixture hierarchy.\n*/\n\nexport enum TableExtractType\n{\n\tStructure = 'structure',\n\tName = 'name',\n\tQuantity = 'quantity',\n\tBound = 'bound',\n\tError = 'error',\n\tRatio = 'ratio',\n\tUnits = 'units',\n\tRelation = 'relation',\n\tIdentifier = 'identifier',\n\tLink = 'link',\n\tProperty = 'property',\n}\n\ninterface TableExtractMapping\n{\n\tcolumn:string;\n\torigin:number[];\n\ttype:TableExtractType;\n\tinfo?:string[];\n}\n\nexport class TableExtract\n{\n\tprivate table:DataSheet = null;\n\tprivate aprov:AssayProvenance = null;\n\tprivate mdata:MeasurementData = null;\n\n\tprivate lookup:Map<string, Molecule> = null;\n\tprivate mappings:TableExtractMapping[] = [];\n\n\tconstructor(private tableFile:string, private lookupFile:string, private mappingFile:string, private verbose:boolean)\n\t{\n\t}\n\n\tpublic async exec():Promise<void>\n\t{\n\t\tlet content:string;\n\t\ttry {content = fs.readFileSync(this.tableFile).toString();}\n\t\tcatch (ex) {throw 'Unable to read file ' + this.tableFile + ': ' + ex;}\n\n\t\tif (this.tableFile.endsWith('.ds')) this.table = DataSheetStream.readXML(content);\n\t\telse if (this.tableFile.endsWith('.sdf')) this.table = new MDLSDFReader(content).parse();\n\t\telse if (this.tableFile.endsWith('.csv')) this.table = this.parseLines(',', true);\n\t\telse if (this.tableFile.endsWith('.tsv') || this.tableFile.endsWith('.tab')) this.table = this.parseLines('\\t', false);\n\t\tif (!this.table) throw 'Unable to parse: ' + this.tableFile;\n\n\t\tif (AssayProvenance.isAssayProvenance(this.table)) this.aprov = new AssayProvenance(this.table, false);\n\t\tif (MeasurementData.isMeasurementData(this.table)) this.mdata = new MeasurementData(this.table, false);\n\n\t\tif (this.lookupFile)\n\t\t{\n\t\t\t// TODO\n\t\t}\n\n\t\tthis.initialMapping();\n\t\tif (this.mappingFile)\n\t\t{\n\t\t\tcontent = fs.readFileSync(this.mappingFile).toString();\n\t\t\tthis.customMapping(JSON.parse(content));\n\t\t}\n\n\t\tif (this.mappings.length == 0) throw 'No column mapping information available.';\n\n\t\tlet mixtures = new MixtureCollection();\n\t\tfor (let n = 0; n < this.table.numRows; n++)\n\t\t{\n\t\t\tlet mixture = this.extractMixture(n);\n\t\t\tif (mixture) mixtures.appendMixtureDirect(mixture);\n\t\t}\n\n\t\tconsole.log(mixtures.serialise(true));\n\t}\n\n\t// ------------ private methods ------------\n\n\t// read TSV/CSV file, which is presumed to have column headings, and may include escape sequences\n\tprivate parseLines(sep:string, escaped:boolean):DataSheet\n\t{\n\t\tlet ds = new DataSheet();\n\n\t\t// !! load each line, split into strings, apply columns then rows...\n\t\t// !! anything that's all {int} or {real} gets changed retroactively\n\n\t\treturn ds;\n\t}\n\n\t// extract column-to-mixture information embedded in the initial datasheet, if possible\n\tprivate initialMapping():void\n\t{\n\t\tif (!MixtureAspect.isMixture(this.table)) return;\n\n\t\tlet aspect = new MixtureAspect(this.table, false);\n\t\tfor (let attr of aspect.getHeader().attributes)\n\t\t{\n\t\t\tlet map:TableExtractMapping =\n\t\t\t{\n\t\t\t\t'column': attr.column,\n\t\t\t\t'origin': Vec.add(attr.position, -1),\n\t\t\t\t'type': attr.type as any as TableExtractType, // same enum values\n\t\t\t\t'info': attr.info,\n\t\t\t};\n\t\t\tthis.mappings.push(map);\n\t\t}\n\t}\n\n\t// merge in user-provided mappings\n\tprivate customMapping(custom:TableExtractMapping[]):void\n\t{\n\t\tfor (let map of custom)\n\t\t{\n\t\t\tlet idx = this.mappings.findIndex((look) => look.column == map.column);\n\t\t\tif (idx >= 0) this.mappings[idx] = map; else this.mappings.push(map);\n\t\t}\n\t}\n\n\t// pull out the content from a row in the table and corral them into a mixture\n\tprivate extractMixture(row:number):Mixture\n\t{\n\t\tlet mixture = new Mixture();\n\n\t\tfor (let map of this.mappings)\n\t\t{\n\t\t\tlet comp = mixture.mixfile as MixfileComponent;\n\t\t\tfor (let idx of map.origin)\n\t\t\t{\n\t\t\t\tif (comp.contents == null) comp.contents = [];\n\t\t\t\twhile (idx >= comp.contents.length) comp.contents.push({});\n\t\t\t\tcomp = comp.contents[idx];\n\t\t\t}\n\t\t}\n\n\t\tlet appendQuant = (quantity:number | number[], val:number):number | number[] =>\n\t\t{\n\t\t\tif (isNaN(val)) return quantity;\n\t\t\tif (quantity == null) return val;\n\t\t\telse if (typeof quantity == 'number' && quantity != val) return [Math.min(quantity, val), Math.max(quantity, val)];\n\t\t\telse return quantity;\n\t\t};\n\n\t\tlet stashRatio = new Map<string, number>();\n\t\tlet fields = this.mdata ? this.mdata.getHeader().fields : [];\n\n\t\tfor (let map of this.mappings)\n\t\t{\n\t\t\tlet col = this.table.findColByName(map.column);\n\t\t\tif (col < 0 || this.table.isNull(row, col)) continue;\n\n\t\t\tlet comp = mixture.getComponent(map.origin);\n\n\t\t\tif (map.type == TableExtractType.Structure)\n\t\t\t{\n\t\t\t\tlet mol = this.table.getMolecule(row, col);\n\t\t\t\tcomp.molfile = new MDLMOLWriter(mol).write();\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Name)\n\t\t\t{\n\t\t\t\tcomp.name = this.table.toString(row, col);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Quantity)\n\t\t\t{\n\t\t\t\t// if aspected: can extract more information\n\t\t\t\tif (this.aprov && map.column == AssayProvenance.COLNAME_VALUE)\n\t\t\t\t{\n\t\t\t\t\tcomp.quantity = this.aprov.getValue(row);\n\t\t\t\t\tlet error = this.aprov.getError(row);\n\t\t\t\t\tif (!isNaN(error)) comp.error = error;\n\t\t\t\t\tcomp.units = this.aprov.getUnits(row); // TODO: translate based on URI\n\t\t\t\t\tlet relation = this.aprov.getRelation(row);\n\t\t\t\t\tif (relation && relation != '=') comp.relation = relation;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet field = fields.find((f) => f.name == map.column);\n\t\t\t\tif (field)\n\t\t\t\t{\n\t\t\t\t\tlet value = this.mdata.getValueField(row, field);\n\t\t\t\t\tcomp.quantity = value.value;\n\t\t\t\t\tif (!isNaN(value.error)) comp.error = value.error;\n\t\t\t\t\tcomp.units = value.units;\n\t\t\t\t\tif (value.mod && value.mod != '=') comp.relation = value.mod;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet val = parseFloat(this.table.toString(row, col));\n\t\t\t\tcomp.quantity = appendQuant(comp.quantity, val);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Bound)\n\t\t\t{\n\t\t\t\tlet val = parseFloat(this.table.toString(row, col));\n\t\t\t\tcomp.quantity = appendQuant(comp.quantity, val);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Error)\n\t\t\t{\n\t\t\t\tlet val = parseFloat(this.table.toString(row, col));\n\t\t\t\tif (!isNaN(val)) comp.error = val;\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Ratio)\n\t\t\t{\n\t\t\t\tlet val = parseFloat(this.table.toString(row, col));\n\t\t\t\tif (!isNaN(val)) stashRatio.set(JSON.stringify(map.origin), val);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Units)\n\t\t\t{\n\t\t\t\tlet units = this.table.toString(row, col);\n\t\t\t\t// TODO: correction/mapping...\n\t\t\t\tcomp.units = units;\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Relation)\n\t\t\t{\n\t\t\t\tlet relation = this.table.toString(row, col);\n\t\t\t\t// TODO: correction/mapping...\n\t\t\t\tcomp.relation = relation;\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Identifier)\n\t\t\t{\n\t\t\t\tif (comp.identifiers == null) comp.identifiers = {};\n\t\t\t\tcomp.identifiers[map.column] = this.table.toString(row, col);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Link)\n\t\t\t{\n\t\t\t\tif (comp.links == null) comp.links = {};\n\t\t\t\tcomp.links[map.column] = this.table.toString(row, col);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Property)\n\t\t\t{\n\t\t\t\tconsole.log('TODO: property'); // !! lookup aspects...\n\t\t\t}\n\t\t}\n\n\t\t// fill in any missing ratios\n\t\tfor (let origin of mixture.getOrigins())\n\t\t{\n\t\t\tlet comp = mixture.getComponent(origin);\n\t\t\tif (Vec.isBlank(comp.contents)) continue;\n\t\t\tlet num = 0, total = 0;\n\t\t\tfor (let n = 0; n < comp.contents.length; n++) if (!Mixture.isComponentEmpty(comp.contents[n]))\n\t\t\t{\n\t\t\t\tlet ratio = stashRatio.get(JSON.stringify([...origin, n]));\n\t\t\t\tif (!ratio) {num = 0; break;}\n\t\t\t\tnum++;\n\t\t\t\ttotal += ratio;\n\t\t\t}\n\t\t\tif (num > 0) for (let n = 0; n < comp.contents.length; n++) if (!Mixture.isComponentEmpty(comp.contents[n]))\n\t\t\t{\n\t\t\t\tlet ratio = stashRatio.get(JSON.stringify([...origin, n]));\n\t\t\t\tcomp.contents[n].ratio = [ratio, total];\n\t\t\t}\n\t\t}\n\n\t\t// trim out blank pieces\n\t\tskip: for (let origin of Vec.reverse(mixture.getOrigins()))\n\t\t{\n\t\t\tlet comp = mixture.getComponent(origin);\n\t\t\tif (Mixture.isComponentEmpty(comp))\n\t\t\t{\n\t\t\t\tmixture.deleteComponent(origin);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// may collapse singletons\n\t\t\tif (Vec.arrayLength(comp.contents) != 1) continue;\n\t\t\tfor (let key in comp) if (key != 'contents' && (comp as any)[key]) continue skip;\n\t\t\tlet sub = comp.contents[0];\n\t\t\tcomp.contents = null;\n\t\t\tmixture.setComponent(origin, sub);\n\t\t}\n\n\t\treturn mixture;\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2021 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {Mixfile, MixfileComponent} from '../data/Mixfile';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MDLSDFReader} from 'webmolkit/data/MDLReader';\nimport {DataSheetColumn} from 'webmolkit/data/DataSheet';\nimport {Mixture} from '../data/Mixture';\nimport {MDLMOLWriter} from 'webmolkit/data/MDLWriter';\nimport {StandardUnits, Units} from '../data/Units';\n\n/*\n\tImporting one or more mixtures from chunks of text that represent an SDfile with special mixture fields.\n*/\n\ninterface ImportComponent\n{\n\tmol:Molecule;\n\tname:string;\n\tconc:string;\n\thier:string;\n}\n\nexport class ImportSDFile\n{\n\tprivate buffer = '';\n\tprivate components:ImportComponent[] = [];\n\tprivate mixfiles:Mixfile[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t}\n\n\t// adds a chunk of text to the buffer, which may cause more SDfile units to be extracted; after calling this, 0-or-more new mixtures will become available\n\t// to be polled\n\tpublic feed(chunk:string):void\n\t{\n\t\tthis.buffer += chunk;\n\t\twhile (true)\n\t\t{\n\t\t\tlet sep = this.buffer.indexOf('$$$$\\n');\n\t\t\tif (sep < 0) break;\n\t\t\tsep += 5;\n\t\t\tthis.processBlock(this.buffer.substring(0, sep));\n\t\t\tthis.buffer = this.buffer.substring(sep);\n\t\t}\n\t}\n\n\t// grab the next assembled mixfile and take it out of the delivery list; if the final flag is true, it means we've reached the end of the input sequence, so\n\t// whatever components remain must be complete\n\tpublic poll(final = false):Mixfile\n\t{\n\t\tif (Vec.notBlank(this.mixfiles)) return this.mixfiles.shift();\n\t\tif (final && Vec.notBlank(this.components))\n\t\t{\n\t\t\tthis.assembleComponents();\n\t\t\treturn this.mixfiles[0];\n\t\t}\n\t\treturn null;\n\t}\n\n\t// ------------ private methods ------------\n\n\t// have identified one SDfile record (ending in $$$$), so carve it up into an upcoming component\n\tprivate processBlock(sdfile:string):void\n\t{\n\t\tlet reader = new MDLSDFReader(sdfile);\n\t\treader.upcastColumns = false;\n\t\tlet ds = reader.parse();\n\t\tif (!ds || ds.numRows == 0) return;\n\t\tlet colMol = ds.firstColOfType(DataSheetColumn.Molecule);\n\t\tlet colName = ds.findColByName('Name');\n\t\tlet colHier = ds.findColByName('MINCHI$N');\n\t\tlet colConc = ds.findColByName('MINCHI$C');\n\t\tif (colHier < 0) return; // not a valid mixture block\n\n\t\tlet mol = colMol < 0 ? null : ds.getMolecule(0, colMol);\n\t\tlet name = colName < 0 ? null : ds.getString(0, colName);\n\t\tlet hier = ds.getString(0, colHier);\n\t\tlet conc = colConc < 0 ? null : ds.getString(0, colConc);\n\t\tif (Vec.notBlank(this.components) && hier == '1') this.assembleComponents();\n\n\t\tthis.components.push({mol, name, hier, conc});\n\t}\n\n\t// turn the current list of components into a mixfile, based on the assumption that we've reached a dividing point\n\tprivate assembleComponents():void\n\t{\n\t\tlet mixture = new Mixture();\n\n\t\tfor (let incomp of this.components)\n\t\t{\n\t\t\tlet molfile = incomp.mol ? new MDLMOLWriter(incomp.mol).write() : undefined;\n\t\t\tlet origin = incomp.hier.split('.').map((str) => parseInt(str) - 1);\n\t\t\tlet idx = origin.pop();\n\t\t\tlet parent = mixture.getComponent(origin);\n\t\t\tif (!parent.contents) parent.contents = [];\n\t\t\tlet comp:MixfileComponent = {name: incomp.name, molfile: molfile, contents: []};\n\t\t\tif (incomp.conc) this.decodeConcentration(incomp.conc, comp);\n\t\t\tparent.contents[idx] = comp;\n\t\t}\n\n\t\tif (mixture.mixfile.contents.length == 1) mixture = new Mixture(mixture.mixfile.contents[0] as Mixfile);\n\n\t\t// ratios are expressed as the numerator; fill in the denominator as well\n\t\tlet finishRatio = (comp:MixfileComponent):void =>\n\t\t{\n\t\t\tif (Vec.isBlank(comp.contents)) return;\n\t\t\tlet denom = 0;\n\t\t\tfor (let child of comp.contents)\n\t\t\t{\n\t\t\t\t if (!child.ratio || Vec.len(child.ratio) != 2)\n\t\t\t\t {\n\t\t\t\t \tdenom = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t }\n\t\t\t\t denom += child.ratio[0];\n\t\t\t}\n\t\t\tfor (let child of comp.contents)\n\t\t\t{\n\t\t\t\tif (denom > 0)\n\t\t\t\t\tchild.ratio = [child.ratio[0], denom];\n\t\t\t\telse\n\t\t\t\t\tchild.ratio = undefined;\n\t\t\t}\n\t\t\tfor (let child of comp.contents) finishRatio(child);\n\t\t};\n\t\tfinishRatio(mixture.mixfile);\n\n\t\tthis.components = [];\n\t\tthis.mixfiles.push(mixture.mixfile);\n\t}\n\n\t// unpacks the MInChI-style concentration from the SDfile into the dictionary-style used by Mixfile components\n\tprivate decodeConcentration(conc:string, comp:MixfileComponent):void\n\t{\n\t\tlet match = conc.match(/^([\\>\\<\\=\\~]*)([-\\d\\.:]+)(\\w\\w)([-\\d]*)$/);\n\t\tif (!match) return; // this is technically an error: fails silently\n\n\t\tlet relation = match[1], qstr = match[2], mnemonic = match[3], mantissa = parseInt(match[4]) || 0;\n\n\t\tlet quant1:number = null, quant2:number = NaN;\n\t\tif ((match = qstr.match(/^([-\\d\\.]+):([-\\d\\.]+)$/)))\n\t\t{\n\t\t\tquant1 = parseFloat(match[1]);\n\t\t\tquant2 = parseFloat(match[2]);\n\t\t\tif (isNaN(quant1) || isNaN(quant2)) return;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tquant1 = parseFloat(qstr);\n\t\t\tif (isNaN(quant1)) return;\n\t\t}\n\n\t\tlet units = '', scale = 1, isRatio = false;\n\t\tif (mnemonic == 'pp') units = StandardUnits.pc;\n\t\telse if (mnemonic == 'wv') [units, scale] = [StandardUnits.pcWV, 100];\n\t\telse if (mnemonic == 'wf') [units, scale] = [StandardUnits.pcWW, 100];\n\t\telse if (mnemonic == 'vf') [units, scale] = [StandardUnits.pcVV, 100];\n\t\telse if (mnemonic == 'mf') [units, scale] = [StandardUnits.pcMM, 100];\n\t\telse if (mnemonic == 'rt') isRatio = true;\n\t\telse if (mnemonic == 'mr') [units, scale] = [StandardUnits.mol_L, 1];\n\t\telse if (mnemonic == 'wv') [units, scale] = [StandardUnits.g_L, 1E3];\n\t\telse if (mnemonic == 'mb') units = StandardUnits.mol_kg;\n\t\telse return; // not recognised\n\n\t\tcomp.relation = relation || undefined;\n\n\t\tif (isRatio) comp.ratio = [quant1, 0];\n\t\telse if (isNaN(quant2))\n\t\t{\n\t\t\tcomp.quantity = quant1 * Math.pow(10, mantissa) * scale;\n\t\t\tcomp.units = Units.uriToName(units);\n\t\t}\n\t\telse // it's a range\n\t\t{\n\t\t\tcomp.quantity = [quant1 * Math.pow(10, mantissa) * scale, quant2 * Math.pow(10, mantissa) * scale];\n\t\t\tcomp.units = Units.uriToName(units);\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2021 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {InChI} from '../data/InChI';\nimport {Mixfile} from '../data/Mixfile';\nimport {Mixture} from '../data/Mixture';\nimport {ExportMInChI} from '../mixture/ExportMInChI';\nimport {ExportSDFile} from '../mixture/ExportSDFile';\nimport {ImportSDFile} from '../mixture/ImportSDFile';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {DrawMixture} from '../mixture/DrawMixture';\nimport {Vec} from 'webmolkit/util/Vec';\nimport * as fs from 'fs';\n\n/*\n\tReads a stream of mixtures and writes it out as a stream, with format transformation as necessary.\n*/\n\nexport enum TransformMixtureFormat\n{\n\tMixfile = 'mixfile', // single mixfile\n\tJSON = 'json', // list of mixtures\n\tSDF = 'sdf', // SDfile with mixture-specific columns\n\tMInChI = 'minchi', // MInChI notation, newline separated\n\tLongMInChIKey = 'longminchikey', // hashed keys of MInChI structure section\n\tShortMInChIKey = 'shortminchikey', // crunched keys of MInChI structure section, fixed length\n\tSVG = 'svg', // graphical rendering\n}\nexport const ALL_TRANSFORMMIXTURE_FORMATS = Object.values(TransformMixtureFormat);\n\nexport class TransformMixtures\n{\n\tprivate process = require('process');\n\n\tprivate inputFormat:TransformMixtureFormat = null;\n\tprivate outputFormat:TransformMixtureFormat = null;\n\n\tprivate instream:any = null;\n\tprivate outstream:any = null;\n\n\tprivate count = 0;\n\n\tprivate nextIndex = 0;\n\tprivate roster:{idx:number; chunk:string}[] = [];\n\n\tconstructor(private inputFile:string, inputFormat:string, private outputFile:string, outputFormat:string)\n\t{\n\t\tif (inputFormat)\n\t\t{\n\t\t\tif (!ALL_TRANSFORMMIXTURE_FORMATS.includes(inputFormat as TransformMixtureFormat)) throw 'Unknown input format: ' + inputFormat;\n\t\t\tthis.inputFormat = inputFormat as TransformMixtureFormat;\n\t\t}\n\t\tif (outputFormat)\n\t\t{\n\t\t\tif (!ALL_TRANSFORMMIXTURE_FORMATS.includes(outputFormat as TransformMixtureFormat)) throw 'Unknown output format: ' + outputFormat;\n\t\t\tthis.outputFormat = outputFormat as TransformMixtureFormat;\n\t\t}\n\t}\n\n\tpublic async exec():Promise<void>\n\t{\n\t\tif (this.inputFile && !this.inputFormat)\n\t\t{\n\t\t\tfor (let fmt of ALL_TRANSFORMMIXTURE_FORMATS) if (this.inputFile.endsWith('.' + fmt))\n\t\t\t{\n\t\t\t\tthis.inputFormat = fmt;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!this.inputFormat) throw 'Unknown input format';\n\t\tif (this.inputFormat == TransformMixtureFormat.MInChI || this.inputFormat == TransformMixtureFormat.SVG ||\n\t\t\tthis.inputFormat == TransformMixtureFormat.LongMInChIKey || this.inputFormat == TransformMixtureFormat.ShortMInChIKey) throw 'Can only write format: ' + this.inputFormat;\n\n\t\tif (this.outputFile && !this.outputFormat)\n\t\t{\n\t\t\tfor (let fmt of ALL_TRANSFORMMIXTURE_FORMATS) if (this.outputFile.endsWith('.' + fmt))\n\t\t\t{\n\t\t\t\tthis.outputFormat = fmt;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!this.outputFormat) throw 'Unknown output format';\n\t\tif ((this.outputFormat == TransformMixtureFormat.MInChI || this.outputFormat == TransformMixtureFormat.LongMInChIKey ||\n\t\t\tthis.outputFormat == TransformMixtureFormat.ShortMInChIKey) && !InChI.hasExecutable()) throw 'For MInChI, must specify InChI executable as command line parameter.';\n\n\t\tthis.instream = this.inputFile ? fs.createReadStream(this.inputFile) : this.process.stdin;\n\t\tthis.outstream = this.outputFile ? fs.createWriteStream(this.outputFile) : this.process.stdout;\n\n\t\tif (this.outputFormat == TransformMixtureFormat.JSON) this.outstream.write('[\\n');\n\n\t\tif (this.inputFormat == TransformMixtureFormat.Mixfile) await this.pipeMixfile();\n\t\telse if (this.inputFormat == TransformMixtureFormat.JSON) await this.pipeJSON();\n\t\telse if (this.inputFormat == TransformMixtureFormat.SDF) await this.pipeSDF();\n\n\t\tthis.flushRoster();\n\n\t\tif (this.outputFormat == TransformMixtureFormat.JSON) this.outstream.write(']\\n');\n\n\t\tthis.outstream.end();\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate async pipeMixfile():Promise<void>\n\t{\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet json = '';\n\t\t\tthis.instream.on('data', (chunk:string) => json += chunk);\n\t\t\tthis.instream.on('end', () =>\n\t\t\t{\n\t\t\t\t// (explicit blocking would be correct but hard to code in this framework; async tasks are ordered though, so is OK)\n\t\t\t\t(async () =>\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet mixfile = JSON.parse(json) as Mixfile;\n\t\t\t\t\t\tawait this.processMixfile(this.count++, mixfile);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ex) {reject(ex);}\n\t\t\t\t})();\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async pipeJSON():Promise<void>\n\t{\n\t\tconst StreamArray = require('stream-json/streamers/StreamArray');\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet array = StreamArray.withParser();\n\t\t\tthis.instream.pipe(array.input);\n\t\t\tlet json:Record<string, any> = {};\n\t\t\tarray.on('data', (keyval:Record<string, any>) =>\n\t\t\t{\n\t\t\t\tlet mixfile = keyval['value'] as Mixfile;\n\t\t\t\t// (explicit blocking would be correct but hard to code in this framework; async tasks are ordered though, so is OK)\n\t\t\t\t(async () =>\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tawait this.processMixfile(this.count++, mixfile);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ex) {reject(ex);}\n\t\t\t\t})();\n\t\t\t});\n\t\t\tarray.on('end', () => resolve());\n\t\t});\n\t}\n\n\tprivate async pipeSDF():Promise<void>\n\t{\n\t\tlet sdfile = new ImportSDFile();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tthis.instream.on('data', (chunk:string) =>\n\t\t\t{\n\t\t\t\tsdfile.feed(chunk);\n\t\t\t\tfor (let mixfile = sdfile.poll(); mixfile; mixfile = sdfile.poll()) this.processMixfile(this.count++, mixfile);\n\t\t\t});\n\t\t\tthis.instream.on('end', () =>\n\t\t\t{\n\t\t\t\t// (explicit blocking would be correct but hard to code in this framework; async tasks are ordered though, so is OK)\n\t\t\t\t(async () =>\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet mixfile = sdfile.poll(true);\n\t\t\t\t\t\tif (mixfile) await this.processMixfile(this.count++, mixfile);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ex) {reject(ex);}\n\t\t\t\t})();\n\t\t\t});\n\t\t});\n\t}\n\n\t// a mixfile has been parsed out from the input stream, so deal with it appropriately: this means that something goes into the output roster\n\t// with the given index\n\tprivate async processMixfile(idx:number, mixfile:Mixfile):Promise<void>\n\t{\n\t\tif (mixfile.mixfileVersion == null) throw 'Invalid mixfile';\n\n\t\tlet chunk:string = null;\n\n\t\tif (this.outputFormat == TransformMixtureFormat.Mixfile)\n\t\t{\n\t\t\tlet json = new Mixture(mixfile).serialise(); // makes it nice\n\t\t\tchunk = json + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.JSON)\n\t\t{\n\t\t\tthis.outstream.write(idx == 0 ? ' ' : ',');\n\t\t\tlet json = JSON.stringify(mixfile); // single line compact\n\t\t\tchunk = json + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.SDF)\n\t\t{\n\t\t\tlet sdfile = new ExportSDFile();\n\t\t\tsdfile.append(mixfile);\n\t\t\tlet record = sdfile.write();\n\t\t\tchunk = record + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.MInChI)\n\t\t{\n\t\t\tif (!InChI.isAvailable()) throw 'InChI unavailable: need to specify executable on command line';\n\t\t\tlet minchi = new ExportMInChI(mixfile);\n\t\t\tawait minchi.fillInChI();\n\t\t\tminchi.formulate();\n\t\t\tchunk = minchi.getResult() + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.LongMInChIKey)\n\t\t{\n\t\t\tif (!InChI.isAvailable()) throw 'InChI unavailable: need to specify executable on command line';\n\t\t\tlet minchi = new ExportMInChI(mixfile);\n\t\t\tawait minchi.fillInChI();\n\t\t\tlet hashkey = minchi.makeLongHashKey();\n\t\t\tchunk = hashkey + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.ShortMInChIKey)\n\t\t{\n\t\t\tif (!InChI.isAvailable()) throw 'InChI unavailable: need to specify executable on command line';\n\t\t\tlet minchi = new ExportMInChI(mixfile);\n\t\t\tawait minchi.fillInChI();\n\t\t\tlet hashkey = minchi.makeShortHashKey();\n\t\t\tchunk = hashkey + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.SVG)\n\t\t{\n\t\t\tlet policy = RenderPolicy.defaultColourOnWhite(20);\n\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\tlet layout = new ArrangeMixture(new Mixture(mixfile), measure, policy);\n\t\t\tlayout.arrange();\n\n\t\t\tlet gfx = new MetaVector();\n\t\t\tnew DrawMixture(layout, gfx).draw();\n\t\t\tgfx.normalise();\n\t\t\tlet svg = gfx.createSVG(false);\n\n\t\t\tchunk = svg + '\\n';\n\t\t}\n\n\t\tthis.roster.push({idx, chunk});\n\t\tthis.flushRoster();\n\t}\n\n\t// checks the output roster for content to write out: will only write chunks if they are consecutive with the last emitted index; this is so because the\n\t// async generation methods do not necessarily come in with the same order\n\tprivate flushRoster():void\n\t{\n\t\tif (this.roster.length > 1) this.roster.sort((r1, r2) => r1.idx - r2.idx);\n\n\t\twhile (this.roster.length > 0 && Vec.first(this.roster).idx == this.nextIndex)\n\t\t{\n\t\t\tlet {chunk} = this.roster.shift();\n\t\t\tif (chunk) this.outstream.write(chunk);\n\t\t\tthis.nextIndex++;\n\t\t}\n\t}\n\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2021 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {InChI} from '../data/InChI';\nimport {setOnDesktop} from '../startup';\nimport {RenderHTML} from './RenderHTML';\nimport {TableExtract} from './TableExtract';\nimport {ALL_TRANSFORMMIXTURE_FORMATS, TransformMixtures} from './TransformMixtures';\nimport {XML} from 'webmolkit/util/XML';\n\n/*\n\tConsole utilities, to be run from NodeJS with command line arguments.\n*/\n\nexport class Console\n{\n\tprivate inputFile:string = null;\n\tprivate inputFormat:string = null;\n\tprivate outputFile:string = null;\n\tprivate outputFormat:string = null;\n\tprivate tableFile:string = null;\n\tprivate lookupFile:string = null;\n\tprivate mappingFile:string = null;\n\tprivate htmlFile:string = null;\n\tprivate withMInChI = false;\n\tprivate justHelp = false;\n\tprivate verbose = false;\n\n\tconstructor(args:string[])\n\t{\n\t\tsetOnDesktop(true);\n\n\t\t// const {DOMParser, XMLSerializer} = require('xmldom/dom-parser.js');\n\t\t// XML.customParser = DOMParser;\n\t\t// XML.customSerial = XMLSerializer;\n\n\t\tfor (let n = 0; n < args.length; n++)\n\t\t{\n\t\t\tif (args[n] == '-i' && n + 1 < args.length) this.inputFile = args[++n];\n\t\t\telse if (args[n] == '-if' && n + 1 < args.length) this.inputFormat = args[++n];\n\t\t\telse if (args[n] == '-o' && n + 1 < args.length) this.outputFile = args[++n];\n\t\t\telse if (args[n] == '-of' && n + 1 < args.length) this.outputFormat = args[++n];\n\t\t\telse if (args[n] == '--table' && n + 1 < args.length) this.tableFile = args[++n];\n\t\t\telse if (args[n] == '--lookup' && n + 1 < args.length) this.lookupFile = args[++n];\n\t\t\telse if (args[n] == '--mapping' && n + 1 < args.length) this.mappingFile = args[++n];\n\t\t\telse if (args[n] == '--html' && n + 1 < args.length) this.htmlFile = args[++n];\n\t\t\telse if (args[n] == '--minchi') this.withMInChI = true;\n\t\t\telse if (args[n] == '--inchi' && n < args.length - 1) InChI.setExecutable(args[++n]);\n\t\t\telse if (args[n] == '-h' || args[n] == '-help' || args[n] == '--help') this.justHelp = true;\n\t\t\telse if (args[n] == '--verbose') this.verbose = true;\n\t\t}\n\t}\n\n\tpublic async run():Promise<void>\n\t{\n\t\tif (this.tableFile) await new TableExtract(this.tableFile, this.lookupFile, this.mappingFile, this.verbose).exec();\n\t\telse if (this.htmlFile) await new RenderHTML(this.htmlFile, this.withMInChI).exec();\n\t\telse if (this.inputFile || this.inputFormat || this.outputFile || this.outputFormat) await new TransformMixtures(this.inputFile, this.inputFormat, this.outputFile, this.outputFormat).exec();\n\t\telse if (this.justHelp) this.printHelp();\n\t\telse\n\t\t{\n\t\t\tthis.log('Nothing to do.');\n\t\t\tthis.printHelp();\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate printHelp():void\n\t{\n\t\tconsole.log('Mixtures console utilities. Arguments:');\n\t\tconsole.log('    -i {fn}          read input file (type guessed from suffix)');\n\t\tconsole.log('    -if {fmt}        specify/override type for input file');\n\t\tconsole.log('    -o {fn}          write output file (type guessed from suffix)');\n\t\tconsole.log('    -of {fmt}        specify/override type for output file');\n\t\tconsole.log('    --table {fn}     convert a tabular datafile to mixfile collection');\n\t\tconsole.log('    --lookup {fn}    (optional) lookup file for name-to-structure');\n\t\tconsole.log('    --mapping {fn}   (optional) JSON-formatted file for column mappings');\n\t\tconsole.log('    --html {fn}      render mixfile collection as an HTML table');\n\t\tconsole.log('    --minchi         (optional) include MInChI notation');\n\t\tconsole.log('    --inchi {fn}     (optional) specify InChI executable location');\n\t\tconsole.log('Mixture formats:');\n\t\tfor (let fmt of ALL_TRANSFORMMIXTURE_FORMATS) console.log('    ' + fmt);\n\t}\n\n\tprivate log(str:string):void\n\t{\n\t\tif (this.verbose) console.log(str);\n\t}\n}\n\n// if being run in NodeJS context, need to export the class\n// if (typeof module == 'object') module.exports['Console'] = Console;\n\n"],"names":["Object","defineProperty","exports","value","getElectronBinding","name","process","_linkedBinding","electronBinding","browserModuleNames","commonModuleNames","get_electron_binding_1","concat","features","isDesktopCapturerEnabled","push","isViewApiEnabled","deserialize","serialize","isSerializableObject","isPromise","electron_1","val","then","Function","constructor","reject","resolve","serializableTypes","Boolean","Number","String","Date","Error","RegExp","ArrayBuffer","isView","some","type","objectMap","source","mapper","targetEntries","entries","map","key","fromEntries","image","representations","scaleFactors","getScaleFactors","length","scaleFactor","size","getSize","buffer","toBitmap","dataURL","toDataURL","__ELECTRON_SERIALIZED_NativeImage__","serializeNativeImage","Array","isArray","nativeImage","createEmpty","width","height","addRepresentation","rep","deserializeNativeImage","CallbacksRegistry","this","nextId","callbacks","callbackIds","WeakMap","locationInfo","add","callback","id","get","set","regexp","stackString","stack","filenameAndLine","match","exec","location","includes","ref","getLocation","apply","args","global","remove","delete","__createBinding","create","o","m","k","k2","undefined","enumerable","__exportStar","p","prototype","hasOwnProperty","call","createFunctionWithReturnValue","getGlobal","getCurrentWebContents","getCurrentWindow","getBuiltin","callbacks_registry_1","type_utils_1","module_names_1","Promise","callbacksRegistry","remoteObjectCache","Map","finalizationRegistry","FinalizationRegistry","deref","ipcRenderer","send","contextId","electronIds","isReturnValue","WeakSet","v8Util","getHiddenValue","getContextId","on","IS_REMOTE_PROXY","Symbol","wrapArgs","visited","Set","valueToMeta","has","meta","Buffer","onFulfilled","onRejected","members","prop","setObjectMembers","object","metaId","member","descriptor","remoteMemberFunction","command","metaToValue","sendSync","descriptorFunction","proxyFunctionProperties","configurable","writable","setObjectPrototype","proto","setPrototypeOf","loaded","loadRemoteProperties","Proxy","target","property","bind","ownKeys","getOwnPropertyNames","getOwnPropertyDescriptor","from","byteOffset","byteLength","metaToError","ret","cached","getCachedRemoteObject","remoteFunction","wr","WeakRef","register","setCachedRemoteObject","obj","handleMessage","channel","handler","event","passedContextId","senderId","console","error","enableStacks","argv","getCurrentStack","captureStackTrace","require","module","returnValue","func","forEach","Readable","Writable","Duplex","Transform","none","for","finalSymbol","manySymbol","wrapFunction","fn","writableObjectMode","readableObjectMode","transform","chunk","encoding","result","Chain","sanitize","next","async","gen","stream","data","done","runAsyncGenerator","wrapArray","fns","i","isFinal","getFinalValue","isReadableNodeStream","pipe","_writableState","_readableState","readable","isWritableNodeStream","write","options","super","streams","filter","index","convertToTransform","s","input","output","reduce","_write","_1","_2","_final","end","pause","_read","resume","skipEvents","emit","e","make","isMany","getManyValues","final","many","values","chain","Constructor","EventEmitter","startObject","Ctr","current","Assembler","connectTo","reviver","stringValue","_saveValue","_saveValueWithReviver","numberAsString","numberValue","depth","path","dropToLevel","level","splice","consume","keyValue","parseFloat","nullValue","trueValue","falseValue","endObject","pop","startArray","endArray","Utf8Stream","patterns","value1","string","key1","colon","comma","ws","numberStart","numberDigit","numberFraction","numberExponent","numberExpSign","noSticky","keys","src","slice","numberFracStart","numberExpStart","numberFracDigit","numberExpDigit","true","false","null","expected","array","codes","b","f","n","r","t","Parser","assign","_packKeys","_packStrings","_packNumbers","_streamKeys","_streamStrings","_streamNumbers","packValues","packKeys","packStrings","packNumbers","streamValues","streamKeys","streamStrings","streamNumbers","_jsonStreaming","jsonStreaming","_done","_expect","_stack","_parent","_open_number","_accumulator","_flush","_processBuffer","main","lastIndex","_buffer","charAt","fromCharCode","parseInt","parser","StreamBase","withParser","StreamArray","_level","_counter","_wait","_","_transform","_filter","_push","discard","_assembler","streamArray","Counter","initialDepth","objectFilter","includeUndecided","_accept","_saved_assembler","_reject","StringDecoder","_transformString","_stringDecoder","_transformBuffer","toString","_flushInput","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","toStringTag","isBlank","arr","notBlank","safeArray","len","arrayLength","anyTrue","v","allTrue","anyFalse","allFalse","iterAnyTrue","iterAllTrue","iterAnyFalse","iterAllFalse","swap","idx1","idx2","duplicate","append","item","prepend","unshift","arr1","arr2","idx","flatten","mtx","vec","transpose","sz1","sz2","anyArray","j","equals","equivalent","len1","compareTo","sz","Math","max","booleanArray","fill","numberArray","stringArray","genericArray","genericBlankArrays","funcArray","first","last","min","MAX_VALUE","MIN_VALUE","idxMin","idxMax","range","lo","hi","reverse","identity0","identity1","identityN","start","notMask","mask","idxGet","maskCount","c","maskIdx","idxMask","maskMap","pos","maskGet","maskEqual","sum","sub","mul","neg","setTo","addTo","mulBy","addToArray","subFromArray","mulByArray","divByArray","idxSort","sort","a","v1","v2","sorted","sortedUnique","unique","uniqueUnstable","uniqueStable","maskUnique","idxUnique","exclude","excl","count","indexOf","Permutation","parityPerms","parityIdentity","parityOrder","smallPermutation","PERM1","PERM2","PERM3","PERM4","allPermutations","SMALL_PERMS","PERM_CACHE","MAX_CACHE","nperms","perms","nonunique","Matrix","A","fromArray","clone","numRows","numCols","X","C","norm1","abs","normInf","uminus","plus","B","plusEquals","minus","minusEquals","arrayTimes","arrayTimesEquals","arrayRightDivide","arrayRightDivideEquals","arrayLeftDivide","arrayLeftDivideEquals","scalarTimes","scalarTimesEquals","times","Bcolj","Arowi","rank","SingularValueDecomposition","cond","trace","identity","lines","row","JSON","stringify","join","nu","U","V","work","nct","nrt","hypot","pp","iter","eps","pow","tiny","kase","ks","cs","sn","scale","sp","spm1","epm1","sk","ek","shift","sqrt","g","getU","getV","getSingularValues","getS","S","norm2","tol","safeInt","str","def","startsWith","substring","isNaN","newElement","parent","tag","attr","domNew","domLegacy","el","formatDouble","sigfig","toPrecision","endsWith","col","hex","colourAlpha","transp","ONE_OVER_255","colourCanvas","nodeText","node","firstChild","nodeType","nodeValue","nextSibling","container","offset","pageX","x","pageY","y","dom","w","h","css","norm_xy","dx","dy","norm2_xyz","dz","signum","sqr","invZ","fltEqual","realEqual","TWOPI","PI","INV_TWOPI","DEGRAD","RADDEG","th","ceil","angleDiff","th1","th2","theta","minArray","maxArray","findNode","nodeName","findNodes","list","pathRoundedRect","x1","y1","x2","y2","rad","Path2D","moveTo","quadraticCurveTo","lineTo","closePath","drawLine","ctx","beginPath","stroke","fontSansSerif","ascent","pixelDensity","window","devicePixelRatio","deepClone","escapeHTML","text","replace","KeyCode","readTextURL","url","thisArg","_arguments","generator","request","XMLHttpRequest","open","responseType","onload","response","onerror","P","fulfilled","step","rejected","EPSILON","Triangulation2D","px","py","numTriangles","edgeStack","hull","maxTriangles","triangles","halfedges","hashSize","hullPrev","hullNext","hullTri","hullHash","ids","dists","update","trimConcave","threshold","threshSq","tri","edge","uniqueEdges","edgeCount","ntri","c1","c2","c3","i1","i2","i3","repTri","repEdge","traceOutline","e1","e2","e3","edgePairs","entry","floor","isz","idxMap","g1","g2","sequence","minX","minY","maxX","maxY","centreX","centreY","i0","minDist","POSITIVE_INFINITY","i0x","i0y","i1x","i1y","minRadius","circumRadius","i2x","i2y","isFinite","quicksort","d0","NEGATIVE_INFINITY","orient","pickCircumCentre","hullStart","hullSize","hashKey","addTriangle","xp","yp","q","legalise","pseudoAngle","ar","a0","b0","al","bl","p0","pr","pl","p1","inCircle","hbl","link","br","orientIfSure","rx","ry","qx","qy","l","ax","ay","bx","by","cx","cy","ex","ey","fx","fy","bp","cp","cl","left","right","temp","tempDist","median","GeomUtil","pointInPolygon","phase","areLinesParallel","x3","y3","x4","y4","dxa","dya","dxb","dyb","xmajorA","EPS","lineIntersect","u","isPointOnLineSeg","pointLineDistance","pointLineSegDistance","doLineSegsIntersect","x4_x3","y4_y3","x2_x1","y2_y1","x1_x3","y1_y3","nx","ny","dn","rectsIntersect","w1","h1","w2","h2","sortAngles","idxSortAngles","uniqueAngles","ang","thetaObtuse","dth","emergentAngle","bottom","behind","delta","dotProduct","crossProduct","affineTranslate","affineMirror","xaxis","yaxis","affineScale","sx","sy","affineRotate","cos","sin","affineCompose","tfm","Acol","Brow","applyAffine","applyAffineArray","isAffineMirror","magnitude2","magnitude","dist2","dist","normalise","dsq","inv","normalised","acuteAngle","mag1","mag2","cosTheta","acos","arcControlPoints","t1x","t1y","t2x","t2y","tx","ty","D","createBezierEllipse","rw","rh","nseg","sinTheta","incrAlpha","alpha","cosAlpha","sinAlpha","npt","n1","n2","n3","n4","ctrl","fitCircle","fitEllipse","bestW","bestH","bestScore","shrinkToFit","whs","dmin","invW2","invH2","whsX","whsY","anything","superimpose","thetaA","atan2","rot00","rot01","rot10","rot11","acx","acy","invsz","bcx","bcy","mtxA","mtxB","cov","svd","rotate","convexHull","flatness","algo","QuickHull","hullX","hullY","outlinePolygon","diameter","del","concave","hsz","al1","al2","quickHull","furthestPoint","distance","ux","uy","maxDist","maxPos","Pos","zero","other","scaleBy","mag","offsetBy","withScaleBy","withOffsetBy","Size","isZero","fitInto","maxW","maxH","Box","fromBounds","fromSize","fromOval","oval","getPos","setPos","setSize","midX","midY","area","grow","withGrow","intersects","intersection","x5","y5","x6","y6","contains","union","isEmpty","notEmpty","Oval","fromBox","box","setCentre","setRadius","Line","fromPos","pos1","pos2","setPos1","setPos2","XML","parseXML","strXML","xmlDoc","customParser","parseFromString","DOMParser","doc","customSerial","serializeToString","documentElement","XMLSerializer","toPrettyString","xslt","xsltDoc","xsltProc","XSLTProcessor","importStylesheet","resultDoc","transformToDocument","child","childNodes","childText","tagName","findElement","appendElement","ownerDocument","createElement","appendChild","appendElementAfter","presib","postsib","parentNode","insertBefore","appendText","isCDATA","createCDATASection","createTextNode","createTextChild","textContent","setText","removeChild","findChildElements","childElements","parse","jquery","elHTML","elInput","elCanvas","xhtml","xml","html","outerHTML","template","document","innerHTML","content","find","selector","querySelector","findAll","nodeList","querySelectorAll","domList","parentElement","ancestor","closest","children","firstElementChild","nextElementSibling","toLocaleLowerCase","exists","isVisible","offsetWidth","offsetHeight","getClientRects","appendTo","prependTo","insertAfter","before","empty","getHTML","setHTML","appendHTML","insertAdjacentHTML","getText","getValue","setValue","getCSS","style","getPropertyValue","setCSS","setProperty","dict","getAttr","hasAttribute","getAttribute","setAttr","setAttribute","addClass","clsnames","cls","split","classList","removeClass","hasClass","clsname","setClass","flag","toggleClass","rect","getBoundingClientRect","win","defaultView","pageXOffset","top","pageYOffset","setBoundaryPixels","setSizePixels","hasFocus","activeElement","grabFocus","delay","setTimeout","focus","removeEvent","removeEventListener","onKeyDown","addEventListener","onKeyUp","onKeyPress","onScroll","onWheel","onClick","onContextMenu","onDblClick","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","onMouseMove","onMouseOver","onChange","onInput","onTouchStart","onTouchMove","onTouchCancel","onTouchEnd","BASE_URL","RESOURCE_URL","foreground","background","lowlight","lowlightEdge1","lowlightEdge2","highlight","highlightEdge1","highlightEdge2","cssTagsInstalled","hasInlineCSS","head","globalTooltip","globalPopWatermark","clearTooltip","stop","Tooltip","widget","bodyHTML","titleHTML","domTooltip","watermark","bodyCallback","raise","avoid","class","body","sanity","zindex","zIndex","div","hasTitle","hasBody","winW","innerWidth","winH","innerHeight","boundDiv","wx1","wy1","wx2","wy2","popW","popH","posX","posY","setPosition","checkParent","Widget","contentDOM","domContent","tagType","render","addTooltip","tooltip","Mixture","mixfile","mixfileVersion","fromComponent","comp","isComponentEmpty","BITS","bit","contents","hasQuantity","quantity","ratio","recursiveEqual","deserialise","serialise","beautify","serialiseComponent","getComponent","origin","look","getParentComponent","getComponents","getOrigins","origins","nodeEnum","setComponent","modified","deleteComponent","prependBefore","subcomp","SKIP","splitOrigin","json","regex","regpad","padding","comp1","comp2","dict1","dict2","keys1","keys2","RenderPolicy","pointScale","resolutionDPI","fontSize","lineSize","bondSep","defaultPadding","atomCols","defaultBlackOnWhite","pixPerAng","policy","defaultWhiteOnBlack","defaultColourOnWhite","defaultColourOnBlack","defaultPrintedPublication","RenderEffects","colAtom","colBond","dottedRectOutline","dottedBondCross","hideAtoms","hideBonds","atomFrameDotSz","atomFrameCol","atomCircleSz","atomCircleCol","atomDecoText","atomDecoCol","atomDecoSize","bondDecoText","bondDecoCol","bondDecoSize","overlapAtoms","RenderMnemonicType","Graph","edge1","edge2","nbrs","indices","labels","props","nbr","fromMolecule","mol","numAtoms","numBonds","bfr","bondFrom","bto","bondTo","fromNeighbours","buff","numNodes","numEdges","getEdge","getEdges","getIndex","setIndex","getLabel","setLabel","lbl","getProperty","prp","addNode","hasEdge","node1","node2","addEdge","removeEdge","isolateNode","keepNodesMask","oldsz","newsz","newmap","newnbrs","keepNodesIndex","removeNodesMask","removeNodesIndex","subgraphIndex","nsz","subgraphMask","calculateComponents","cc","high","calculateComponentGroups","grp","calculateRingBlocks","rblk","plen","numVisited","back","nextID","calculateRingBlockGroups","cap","findRingsOfSize","num","rings","newRings","findRingsOfSizeMask","recursiveRingFind","calculateBFS","curnum","lsz","calculateGravity","wght","wmod","psize","capacity","adj","fnd","newPath","fp","flip","same","BONDARTIFACT_EXTRA_RESPATH","BONDARTIFACT_EXTRA_RESRING","BONDARTIFACT_EXTRA_ARENE","BondArtifact","resPaths","resRings","arenes","atomExtra","appendResPath","appendResRing","appendArene","blk","res","atoms","pack","pathify","centre","getPathBlocks","getRingBlocks","getAreneBlocks","getResPaths","getResRings","getArenes","rewriteMolecule","extra","setAtomExtra","ring","arene","atom","harmoniseNumbering","blocks","stashPaths","clear","nextIdentifier","stashRings","stashArenes","createPath","alreadyExists","atomsAsPath","createRing","atomsAsRing","createArene","atomsAsArene","removeArtifact","pick","overlap","removeAll","bits","requireRing","areneAtoms","best","bsum","bondOrder","findBond","inkeys","Chemistry","ELEMENTS","ELEMENT_GROUPS","ELEMENT_ROWS","ELEMENT_BLOCKS","ELEMENT_VALENCE","ELEMENT_BONDING","ELEMENT_SHELL","NATURAL_ATOMIC_WEIGHTS","ELEMENT_H","ELEMENT_He","ELEMENT_Li","ELEMENT_Be","ELEMENT_B","ELEMENT_C","ELEMENT_N","ELEMENT_O","ELEMENT_F","ELEMENT_Ne","ELEMENT_Na","ELEMENT_Mg","ELEMENT_Al","ELEMENT_Si","ELEMENT_P","ELEMENT_S","ELEMENT_Cl","ELEMENT_Ar","ELEMENT_K","ELEMENT_Ca","ELEMENT_Sc","ELEMENT_Ti","ELEMENT_V","ELEMENT_Cr","ELEMENT_Mn","ELEMENT_Fe","ELEMENT_Co","ELEMENT_Ni","ELEMENT_Cu","ELEMENT_Zn","ELEMENT_Ga","ELEMENT_Ge","ELEMENT_As","ELEMENT_Se","ELEMENT_Br","ELEMENT_Kr","ELEMENT_Rb","ELEMENT_Sr","ELEMENT_Y","ELEMENT_Zr","ELEMENT_Nb","ELEMENT_Mo","ELEMENT_Tc","ELEMENT_Ru","ELEMENT_Rh","ELEMENT_Pd","ELEMENT_Ag","ELEMENT_Cd","ELEMENT_In","ELEMENT_Sn","ELEMENT_Sb","ELEMENT_Te","ELEMENT_I","ELEMENT_Xe","ELEMENT_Cs","ELEMENT_Ba","ELEMENT_La","ELEMENT_Ce","ELEMENT_Pr","ELEMENT_Nd","ELEMENT_Pm","ELEMENT_Sm","ELEMENT_Eu","ELEMENT_Gd","ELEMENT_Tb","ELEMENT_Dy","ELEMENT_Ho","ELEMENT_Er","ELEMENT_Tm","ELEMENT_Yb","ELEMENT_Lu","ELEMENT_Hf","ELEMENT_Ta","ELEMENT_W","ELEMENT_Re","ELEMENT_Os","ELEMENT_Ir","ELEMENT_Pt","ELEMENT_Au","ELEMENT_Hg","ELEMENT_Tl","ELEMENT_Pb","ELEMENT_Bi","ELEMENT_Po","ELEMENT_At","ELEMENT_Rn","ELEMENT_Fr","ELEMENT_Ra","ELEMENT_Ac","ELEMENT_Th","ELEMENT_Pa","ELEMENT_U","ELEMENT_Np","ELEMENT_Pu","ELEMENT_Am","ELEMENT_Cm","ELEMENT_Bk","ELEMENT_Cf","ELEMENT_Es","ELEMENT_Fm","ELEMENT_Md","ELEMENT_No","ELEMENT_Lr","ELEMENT_Rf","ELEMENT_Db","ELEMENT_Sg","ELEMENT_Bh","ELEMENT_Hs","ELEMENT_Mt","ELEMENT_Ds","ELEMENT_Rg","ELEMENT_Cn","ResonanceRemover","resBonds","atomHyd","maxIter","bondOrders","tolerant","perform","atomHExplicit","correctInputMask","processComponent","na","nb","atno","atomicNumber","atomCharge","atomAdjCount","nodes","optionalH","Molecule","HEXPLICIT_UNKNOWN","atomElement","gravity","bsz","bgrav","bidx","seq","paths","resultCount","definiteMatch","p2","validPath","count1","count2","a1","a2","DataSheetColumn","ForeignMoleculeTransient","DataSheet","title","description","colData","rowData","numExtens","extData","withRows","inRow","outRow","cloneMask","colMask","rowMask","inclExtn","outCols","outRows","getData","numExtensions","getExtName","getExtType","getExtData","setExtName","setExtType","setExtData","appendExtension","insertExtension","deleteExtension","colName","colType","colDescr","descr","isNull","findColByName","notNull","ct","getMolecule","getString","getExtend","getObject","datum","fromString","getMoleculeClone","getMoleculeBlank","getInteger","getReal","getBoolean","setToNull","setObject","setMolecule","setString","setInteger","setReal","setBoolean","setExtend","isEqualMolecule","isEqualString","isEqualInteger","isEqualReal","isEqualBoolean","appendColumn","insertColumn","deleteColumn","changeColumnName","changeColumnType","newType","oldType","incompatible","toLowerCase","ensureColumn","reorderColumns","order","appendRow","appendRowFrom","srcDS","insertRow","deleteRow","deleteAllRows","moveRowUp","moveRowDown","swapRows","row1","row2","exciseSingleRow","newData","colIsPrimitive","firstColOfType","copyCell","toRow","toCol","fromDS","fromRow","fromCol","convertType","fromType","toType","ft","tt","safeFloat","round","toInt","toReal","ForeignMolecule","noteAromaticAtoms","atomTransient","AtomAromatic","noteAromaticBonds","bondTransient","BondAromatic","noteZeroDativeBonds","BondZeroDative","noteZeroHydrogenBonds","BondZeroHydrogen","markExplicitValence","valence","trans","tr","AtomExplicitValence","setAtomTransient","noteExplicitValence","markSgroupMultiAttach","keyval","idxHigh","AtomSgroupMultiAttach","payload","hasAnySgroupMultiAttach","noteAllSgroupMultiAttach","eq","sgm","markSgroupMultiRepeat","mult","AtomSgroupMultiRepeat","unit","hasAnySgroupMultiRepeat","noteAllSgroupMultiRepeat","mr","markSgroupData","query","_a","AtomSgroupData","hasAnySgroupData","noteAllSgroupData","sd","POLYMERBLOCK_EXTRA_POLYMER","PolymerBlockConnectivity","Geometry","QueryTypeAtom","QueryTypeBond","PolymerBlockUnit","connect","bondConn","atomName","bondIncl","bondExcl","dup","PolymerBlock","units","blockAtoms","appendBlock","getIDList","getUnit","getUnits","purgeExtraFields","writeUnit","allKeys","removeUnit","pfx","bondExtra","setBondExtra","createUnit","hasPolymerExtensions","getPolymerExtensions","polext","removePolymerExtensions","nattach","HeadToTail","HeadToHead","Random","hasOuter","atomAdjList","subBits","in1","in2","bonds","formatBlockAtom","nbonds","names","formatBlockBond","bond","idxConn","incl","codeAtom","codeBond","SketchUtil","placeNewAtom","boundary","IDEALBOND","addAtom","placeNewFragment","frag","dirX","dirY","score","mbox","fbox","vx","vy","fragPosScore","iscore","setAtomPos","atomX","atomY","ox","oy","rangeX","rangeY","mergeOverlappingAtoms","mergeFragmentsDiv","omask","CoordUtil","overlappingAtomMask","chopmask","mx","MolUtil","arrayAtomX","my","arrayAtomY","remap","div1","div2","OVERLAP_THRESHOLD_SQ","oldN","newN","exotic","atomUnpaired","atomIsotope","ISOTOPE_NATURAL","hasAbbrev","setBondFrom","setBondTo","deleteAtomAndBonds","removeDuplicateBonds","mergeFragmentsMask","setAtomHExplicit","setAtomUnpaired","setAtomCharge","matchAngleGeometry","geom","GEOM_ANGLES","mtheta","hit","gotall","got","primeDirections","angles","calculateNewBondAngles","exits","exitVectors","atomBondAngles","nn","guessAtomGeometry","mapAngleSubstituent","atblk","elrow","adjBO","adjAN","pri","allSingle","Linear","Octa1","Octa2","Trigonal","SqPlan","Tetra1","Tetra2","gtheta","asz","gsz","vac","gang","mcount","refitAtomGeometry","inRing","allInRing","bondInRing","bestAng","ww","calculateWalkWeight","newAng","bdiff","diff","ringClash","rotateBond","switchAtomGeometry","dst","geoms","bestAtom","bestX","bestY","curth","atomAtPoint","pickAtomsToConnect","aidx","AUTO_DSQ","bestDSQ","bestA1","bestA2","conn","pickNewAtomDirection","bestTheta","congestionPoint","overlapsAtom","joinOverlappingAtoms","groups","groupX","groupY","adjb","atomAdjBonds","keepmask","moveToEdge","gotS","gotN","sx1","sy1","sx2","sy2","nx1","ny1","nx2","ny2","SEPTEST","placeAdditionalHydrogens","numH","base","x0","y0","th3","th4","addBond","allViableDirections","bndang","proposeNewRing","rsz","snap","positionSimpleRing","proposeAtomRing","thsnap","angs","bestDelta","proposeBondRing","sign","brad","guidelineSprouts","sprouts","ords","sprout","orders","orBlank","hasAnyAbbrev","getAbbrev","setAbbrev","attidx","ABBREV_ATTACHMENT","swapAtoms","b1","b2","setBondOrder","validateAbbrevs","clearAbbrev","setAtomIsotope","convertToAbbrev","srcmask","abbrevName","molidx","convertToAbbrevIndex","junction","polymerExtra","fragidx","maskmol","maskfrag","bondType","BONDTYPE_NORMAL","nadj","setAtomElement","setAtomMapNum","newmol","newatom","expandAbbrevs","alignCoords","expandOneAbbrev","expandedAbbrevs","atomMapNum","expandOneAbbrevFrag","connBond","connType","BONDTYPE_INCLINED","BONDTYPE_DECLINED","vx1","vy1","vx2","vy2","rotateMolecule","translateMolecule","setBondType","setBondFromTo","deleteBond","invidx","keepTransient","setBondTransient","subgraphWithAttachments","xmask","xmol","boxm","boxf","deleteAtoms","componentList","getAtomSides","oldmap","ccmax","grps","getBondSides","bf","bt","arrayAtomMapNum","mapnum","molecularFormula","punctuation","puncEnter","puncExit","puncEnterSuper","puncExitSuper","countC","countH","elements","atomHydrogens","formula","molecularWeight","mw","iso","an","elementAtomicNumber","bpri","el1","el2","limit1","limit2","boB1A1","boB1A2","boB2A1","boB2A2","bad1","bad2","exotic1","exotic2","ccsz","wn","totalHydrogens","hc","stripHydrogens","force","boringHydrogen","HYVALENCE_EL","createHydrogens","position","atomVec3","is3D","atomZ","atomOxidationState","nonMetal","oxstate","bo","bondOther","chalco","oxidationStateText","absox","TEMPLATE_ATTACHMENT","QueryUtil","hasAnyQueryAtom","hasAnyQueryBond","hasQueryAtom","hasQueryBond","deleteQueryAtom","deleteQueryBond","deleteQueryAtomAll","xtra","deleteQueryBondAll","queryAtomString","queryAtomStringList","queryBondString","setQueryAtom","setQueryAtomList","setQueryBond","queryAtomCharges","parseIntegers","Charges","queryAtomAromatic","parseBoolean","Aromatic","queryAtomUnsaturated","Unsaturated","queryAtomElements","parseStrings","Elements","queryAtomElementsNot","ElementsNot","queryAtomRingSizes","RingSizes","queryAtomRingSizesNot","RingSizesNot","queryAtomRingBlock","RingBlock","queryAtomNumRings","NumRings","queryAtomRingBonds","RingBonds","queryAtomAdjacency","Adjacency","queryAtomBondSums","BondSums","queryAtomValences","Valences","queryAtomHydrogens","Hydrogens","queryAtomIsotope","Isotopes","queryAtomSubFrags","parseMolecules","SubFrags","queryAtomSubFragsNot","SubFragsNot","queryBondRingSizes","queryBondRingSizesNot","queryBondRingBlock","queryBondNumRings","queryBondOrders","Orders","setQueryAtomCharges","formatIntegers","setQueryAtomAromatic","formatBoolean","setQueryAtomUnsaturated","setQueryAtomElements","formatStrings","setQueryAtomElementsNot","setQueryAtomRingSizes","setQueryAtomRingSizesNot","setQueryAtomRingBlock","setQueryAtomNumRings","setQueryAtomRingBonds","setQueryAtomAdjacency","setQueryAtomBondSums","setQueryAtomValences","setQueryAtomHydrogens","setQueryAtomIsotope","setQueryAtomSubFrags","formatMolecules","setQueryAtomSubFragsNot","setQueryBondRingSizes","setQueryBondRingSizesNot","setQueryBondRingBlock","setQueryBondNumRings","setQueryBondOrders","strlist","intlist","mols","molstr","STEREOGROUP_EXTRA_RACEMIC","STEREOGROUP_EXTRA_RELATIVE","StereoGroup","hasStereoGroups","chiRac","chiRel","atomHasWedge","getRacemicGroups","getRelativeGroups","getRacemicAtoms","getRelativeAtoms","getRacemicGroupAtoms","getRelativeGroupAtoms","stash","createRacemic","createRelative","removeRacemic","removeRelative","hasWedge","BONDTYPE_UNKNOWN","MDLMOL_VALENCE","MDLMOLReader","strData","parseHeader","parseExtended","allowV3000","considerRescale","keepAromatic","keepParity","keepQuery","molName","overallStereoAbsolute","groupAttachAny","groupAttachAll","groupStereoAbsolute","groupStereoRacemic","groupStereoRelative","groupLinkNodes","groupMixtures","scsrTemplates","parseCTAB","nextLine","line","version","parseV3000","trim","z","chg","stereo","hyd","setAtomZ","setIs3D","AtomChiralMDLOdd","AtomChiralMDLEven","AtomChiralMDLRacemic","appendBondTransient","superatoms","mixtures","anum","stype","bracketType","mix","sup","connectType","minRep","maxRep","nbr1","nbr2","logic","countRingBonds","countSubstitutions","postFix","artifacts","applyPolymerBlock","applySuperAtom","AtomSCSRClass","hcount","usedValence","unp","normaliseBondDistances","derez","Section","inCTAB","inTemplate","section","lineCounts","lineAtom","lineBond","lineColl","lineSgroup","asdrawnRBC","asdrawnSUB","templateBlocks","ERRPFX","fullLine","Atom","Bond","Coll","SGroup","splitWithQuotes","counts","atomBits","bondBits","parseQueryAtomList","spin","appendAtomTransient","AtomSCSRSeqID","attch","unpackStrings","AtomSCSRAttchOrd","rbc","endpts","attach","dir","unpackList","stereoGroup","withoutQuotes","templateClass","natReplace","pts","attachPoints","parseV3000Template","label","not","residual","mod","abvAtom","subsumed","poly","b3","b4","header","mdl","segments","seg","quote","ch","MDLSDFReader","ds","upcastColumns","parseStream","upcastStringColumns","rn","str1","str3","cn","allnull","allreal","allint","allbool","lc","int","VPFX","MDLMOLWriter","includeHeader","includeCounts","includeEnd","enhancedFields","chargeSeparate","abbrevSgroups","polymerBlocks","sgroups","writeCTAB","writeV3000","writeCTAB3000","writeEither","triggered","getResult","partialAbbrevExpansion","prepareSgroups","atomList1","atomList2","intrpad","pad","chgidx","chgval","radidx","radval","isoidx","isoval","rgpidx","rgpval","hydidx","hydval","zboidx","zboval","rbcidx","rbcval","subidx","subval","unsidx","unsval","rpad","toFixed","qhyd","mdlValence","qrbc","qsub","quns","maskArom","qbond","writeMBlockPair","writeMBlockFlat","inSgroup","sg","sidx","encodePolymerBlocks","token","writeMBlockFlatIdxFirst","zeroVal","marked","chgmod","bondSum","nativeVal","ma","dat","bestIdx","bestSize","MAX_SAFE_INTEGER","skip","polymers","fl1","fl2","bcrs","sgroupText","populateV3000Sgroups","qel","isotope","packV3000Strings","maskHBond","collections","racidx","relidx","packV3000List","populateSCSRTemplates","sid","txt","defn","tmdl","molfile","trimEnd","MDLSDFWriter","colMol","wtr","MoleculeStream","readUnknown","jsonStr","readNative","readMDLMOL","hdr","skUnescape","frto","writeNative","charge","unpaired","hy","skEscape","skEncodeExtra","writeMDLMOL","code","charCodeAt","toUpperCase","hasZCoord","hasTransient","graph","graphBond","ringID","compID","ring3","ring4","ring5","ring6","ring7","trashTransient","getAtom","element","hExplicit","mapNum","transient","getBond","to","bondFromTo","trashGraph","setAtomX","setAtomY","transi","HYVALENCE_VAL","adjBonds","atomExplicit","atomRingBlock","buildGraph","buildRingID","r1","r2","atomConnComp","buildConnComp","tx1","tx2","appendAtomExtra","appendBondExtra","PREFIX_EXTRA","PREFIX_TRANSIENT","tolerance","OVERLAP_THRESHOLD","tolsq","sketchEquivalent","mol1","mol2","DEFAULT_EQUIV_TOLERANCE","box1","box2","mx1","my1","mx2","my2","bestdsq","j1","j2","sketchMappable","thresh","threshSQ","d1","overlappingAtomList","approach","congestionMolecule","rotateAtoms","angleNeighbours","mergeAtoms","centreMolecule","meanX","meanY","deltaX","deltaY","mirrorImage","alignOrientFlip","deltaA","deltaB","dthA","dthB","scoreA","scoreB","atomIsWeirdLinear","FitRotatedEllipse","margin","calculate","lookupCache","setupParameters","currentScore","calculateScore","coarseDiscovery","fineImprovement","saveCache","getSpline","cacheMap","cacheVal","psz","invpsz","ptheta","pdist","buffX","buffY","rotatedScore","rtheta","scx","scy","devx","devy","deltaD","deltaR","DELTA_OPTIONS","dw","dh","bestCX","bestCY","bestRW","bestRH","newCX","newCY","newRW","newRH","newScore","REDUCTION","reduc","dCX","dCY","dRW","dRH","closestDSQ","eth","ii","proxSum","FontData","UNITS_PER_EM","INV_UNITS_PER_EM","PANOSE_1","ASCENT","DESCENT","MISSING_HORZ","MISSING_DATA","ASCENT_FUDGE","UNICODE","HORIZ_ADV_X","GLYPH_DATA","OUTLINE_X","OUTLINE_Y","KERN_C1","KERN_C2","KERN_K","pathCache","pathMissing","ctxReference","getKerning","ch1","ch2","measureText","font","measureWidths","xpos","getRawGlyph","getGlyphPath","getMissingPath","getOutlineX","getOutlineY","initNativeFont","canvas","OffscreenCanvas","getContext","measureTextNative","family","opt","save","bold","italic","metrics","restore","FUDGE","BLineType","ArrangeMolecule","guestimateSize","FONT_CORRECT","numsym","plusH","aw","ah","measure","effects","points","space","wantArtifacts","artifactCharge","artifactUnpaired","artifactFract","getMeasure","getPolicy","getEffects","getScale","setWantArtifacts","want","getArtifacts","setArtifacts","arrange","bondSepPix","lineSizePix","fontSizePix","ymul","yIsUp","artmask","setupBondOrders","fsz","angToX","angToY","overCol","wad","PADDING","computeSpacePoint","processLabel","bdbl","xy1","shrinkBond","backOffAtom","xy2","ensureMinimumBondLength","qbonds","qtxt","oxy","orthogonalDelta","lx1","ly1","lx2","ly2","bnum","Dotted","computeSpaceLine","rotation","ltype","Normal","Inclined","Declined","Unknown","DotDir","IncDouble","IncTriple","IncQuadruple","invD","ext1","ext2","orderedRingList","processDoubleBond","priorityDoubleSubstit","placeHydrogen","isostr","placeAdjunct","annotateAtom","annotateBond","spc","createCurvedPath","delocalisedAnnotation","createCircularRing","isRing","alkeneLike","createBondCentroid","processPolymerUnit","numPoints","getPoint","getPoints","numLines","getLine","getLines","numRings","getRing","getRings","numPaths","getPath","getPaths","numSpace","getSpace","getSpaces","offsetEverything","offsetOrigin","bounds","determineBoundary","scaleEverything","determineBoundaryBox","squeezeInto","bw","bh","downScale","limitBounds","monochromate","spatialCongestion","congest","delocalise","fractional","angdir","zeroBonds","zpt","ext","bestDX","bestDY","angThresh","shorted","DELTA","dang","viol","countPolyViolations","shortCircuit","ibar","ibrace","side","chunks","primary","refchunk","bpos","isPrimary","chunkw","tw","bump","xbump","ybump","active","xy","backOffAtomDelta","d12","d2","invD12","SIZE_ORDER","nring","ringsz","ringbusy","ringscore","ringorder","resbcount","maxbcount","sc","priority","nfr","nto","btheta","countFLeft","countFRight","countTLeft","countTRight","idxFLeft","idxFRight","idxTLeft","idxTRight","noshift","ispri","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","bumpAtomPosition","delta1","delta2","delta3","delta4","adjustBondPosition","lt","fussy","SSFRACT","GLYPH_H","emscale","outlineX","outlineY","firstEMW","emw","chp","extraX","extraY","qh","emdx","emdy","srcWAD","RIGHTLEFT","LEFTRIGHT","UPDOWN","DOWNUP","quad","LEFTIES","allLeft","allRight","allUp","allDown","magPX","magPY","bestExt","anyNoClash","subFsz","nglyphs","norm","spaceSubset","subset","hits","nspc","sr","ssz","alt","nf","nt","sumFrom","sumTo","ta","otherTheta","minExt","stepsz","angsz","limX","limY","subSpace","oth","bth","boxOverlaps","pointmask","linemask","resolveLineCrossings","bondHigher","bondLower","pt","isRegular","regDist","NaN","FRACT","pb","mdist","fit","extAtom","symbol","EXT","capA","ncross1","ncross2","fr1","fr2","capB","score1","score2","splineInterpolate","qx1","qy1","qx2","qy2","allUnits","processPolymerUnitPair","brackets","bracket","shared","nestings","u1","u2","nestOrder","nestCount","tagidx","isLinear","isOuter","theta1","theta2","ym","bsz1","bsz2","BASE_LINE","BASE_TEXT","fract","invDist","px2","py2","px3","py3","px1","py1","px4","py4","line1","line2","line3","xx","yy","pt1","pt2","ypos","dsq1","drawText","xmin","ymin","idxN","idxD2","idxD1","globalInstance","ONTOLOGY_FILES","roots","mapTerms","alreadyLoaded","init","loadFromURL","getRoots","hasTerm","uri","getBranch","getBranchList","root","accumulate","branch","loadContent","termList","term","debugString","repeat","SquarePackingSpring","ArrangeMixtureLineSource","TextAlign","PrimClass","ButtonViewPosition","DotPathBond","DotPathCharge","SquarePacking","packSize","boxes","hspace","vspace","layout","wantRatio","candidates","cand","idxStart","springs","Weak","hash","processCandidate","hashes","batch","Strong","Medium","outline","placed","placeAbove","spring","segs","newsegs","mergeSegmentAbove","placeBelow","mergeSegmentBelow","hiX","loY","hiY","merge","seg1","seg2","ArrangeMixture","mixture","components","minBoxSize","showCollapsors","collapsedBranches","packBranches","includeIdentifiers","nameFontSize","limitStructW","limitStructH","hardwrapName","softwrapName","createComponents","layoutSubComponents","contractComponents","molLayout","molBox","scaleComponents","modScale","nameBox","collapseBox","findComponent","formatQuantity","mixcomp","prec","relation","rel","formatNormQuantity","note","findNote","concQuantity","concError","concUnits","concRelation","examineBranch","parentIdx","isCollapsed","subOrigin","nameLines","wrapSplitName","Name","qline","Quantity","identifiers","truncateEllipsis","Identifier","metadata","metaString","Meta","minsz","gap","wh","wholeBranch","branchBlock","branchBox","totalWidth","totalHeight","bound","cbox","sq","allChildren","pidx","boundX","idxInside","idxOutside","ellw","keep","DataSheetStream","readXML","summary","extRoot","extList","colList","rowidx","colidx","readJSON","writeXML","extension","column","cell","txtNode","writeJSON","nrow","ncol","doConvert","SpoolSVG","prettyPrint","spool","whole","inc","dec","MetaVector","types","prims","offsetX","offsetY","density","charMissing","lowX","lowY","highX","highY","charMask","primClass","Text","colour","thickness","typeidx","findOrCreateType","updateBounds","drawRect","edgeCol","fillCol","NOCOLOUR","Rect","drawOval","drawPath","xpoints","ypoints","ctrlFlags","isClosed","hardEdge","Path","closed","drawPoly","align","direction","Left","Baseline","Right","Middle","Top","Bottom","mscale","rx1","ry1","rx2","ry2","drawTextNative","fontFamily","TextNative","boundLowX","boundLowY","boundHighX","boundHighY","getBounds","transformPrimitives","transformIntoBox","nw","nh","scaleExtent","maxWidth","maxHeight","sw","sh","swsh","renderInto","renderCanvas","clearFirst","clearRect","renderContext","typeObj","setupTypeLine","setupTypeRect","setupTypeOval","setupTypePath","setupTypeText","setupTypeTextNative","renderLine","renderRect","renderOval","renderPath","renderText","renderTextNative","createSVG","withXlink","svg","renderSVG","svgLine1","svgLineN","svgRect1","svgRectN","svgOval1","svgOvalN","svgPath","svgText","svgTextNative","into","strokeStyle","lineWidth","lineCap","fillStyle","fillRect","strokeRect","ellipse","layer","bezierCurveTo","lineJoin","translate","fillText","defineSVGStroke","defineSVGFill","rects","ovals","shape","typeDef","every","DrawMolecule","vg","mnemonics","invScale","getMetaVector","getLayout","draw","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","drawUnderEffects","drawFusedWedge","Artifact","drawBondInclined","drawBondDeclined","drawBondUnknown","drawBondDotted","drawBondIncMulti","fg","bez","Centre","drawOverEffects","wdots","hdots","wspc","hspc","Effect","xdots","ydots","invX","invY","bcount","ixy1","ixy2","dx1","dy1","inv1","dx2","dy2","other1","other2","dth1","diff1","dth2","diff2","diff3","terminalPoints","ty1","ty2","outerX","outerY","innerX","innerY","nsteps","invSteps","holdout","ix","iy","radius","nudge","ButtonView","parentX","parentY","parentWidth","parentHeight","idealSize","selectedButton","highlightButton","maxButtonColumns","maxButtonRows","border","buttonColNorm1","buttonColNorm2","buttonColActv1","buttonColActv2","buttonColSel1","buttonColSel2","display","hasBigButtons","prefabImgSize","gripHeight","gripWidth","isRaised","outPadding","inPadding","isMacLike","navigator","platform","setParentSize","applyOffset","redraw","topBank","stackSize","layoutButtons","canvasStyle","mouseClick","mouseDoubleClick","preventDefault","mouseDown","mouseUp","mouseOver","mouseOut","mouseMove","pushBank","bank","buttonView","isSubLevel","replaceCanvas","popBank","bankClosed","refreshBank","getSelectedButton","setSelectedButton","cycleSelected","raiseBank","lowerBank","getHasBigButtons","setHasBigButtons","withinOutline","gw","hg","gh","gripSize","sizeForButtons","nbtn","removeDisplayButtons","addGripButton","buttons","popWidth","popHeight","bestLayout","maxSlotHeight","minSlotHeight","slotWidth","layoutMaxHeight","scoreLayout","maxSlotWidth","minSlotWidth","layoutMaxWidth","ncols","nrows","imgDOM","helpSpan","buttonFromID","col1","col2","grad","createLinearGradient","addColorStop","helpText","mnemonic","keyText","imageFN","metavec","isSubMenu","path1","path2","inset","delayedRedraw","displayFromID","uw","uh","slot","slotHeight","slots","pickButtonIndex","pickButtonID","triggerButton","hitButton","stopImmediatePropagation","stopPropagation","ButtonBank","claimKey","matchKey","mshift","mctrl","malt","mmeta","mkey","shiftKey","ctrlKey","altKey","metaKey","DotPath","maskBlock","getBondOrders","numer","denom","getBondClasses","classes","bcls","getChargeClasses","ccls","getAggregateCharges","total","nonsingle","pibonded","metalbonded","bondsum","blk1","blk2","impliedPi","adjpi","maskMaybe","COULD_BLOCK","ACIDS","BASES","hasMetal","amask","totalHave","totalWant","others","electrons","Stereochemistry","chiralTetra","STEREO_NONE","cistransBond","squarePlanar","isH","buildPriority","buildTetraChirality","buildBondCisTrans","buildPlanarCisTrans","buildOctaChirality","atomPriority","atomTetraChirality","bondSideStereo","atomPlanarStereo","getPriorities","getAtomTetraChiral","getBondSideStereo","rubricTetrahedral","numShort","numWedges","th0","one","two","zz","rubricSquarePlanar","ninc","ndec","v0","v3","v4","d3","d4","MIN_ANGLE","MAX_ANGLE","th12","th23","th34","th41","rubricBipyrimidal","atom2","atom3","atom4","atom5","ANGLE_OPPOSITE","v5","atom1","v45","cross","rubricOctahedral","bestOpposite","axial","bestOrthogonal","bestOrient","rubric","rubricBondSides","adj1","adj2","f1","f2","t1","t2","vfr","vto","vbond","vf1","vt1","THRESHSQ","xf1","xt1","xf1N","keepF1T1","keepF2T1","keepF1T2","keepF2T2","vf2","vt2","xf2","xt2","xf2N","haswedge","skip_atom","STEREO_UNKNOWN","parity","STEREO_NEG","STEREO_POS","ringMask","skip_bond","isBondAromatic","pf1","pf2","cipgr","anyActualH","prigr","cip","sortAndGroup","nextpri","repartitioned","cmp","uset","STEREO_BROKEN","RUBRIC_EQUIV_TETRA","RUBRIC_EQUIV_SIDES","RUBRIC_EQUIV_SQUARE","RUBRIC_EQUIV_BIPY","RUBRIC_EQUIV_OCTA","MetaMolecule","atomArom","bondArom","rubricTetra","rubricSquare","rubricBipy","rubricOcta","rubricSides","heavyHash","uniqueElements","dots","piAtom","calculateStrictAromaticity","nr","ensurePiAtoms","anyChange","phase1","phase2","calculateRelaxedAromaticity","exocyclic","rblk1","rblk2","rng","valid","arom","calculateStereoRubric","adjc","adjc1","hc1","adjc2","hc2","removeHydrogens","atomMask","bondMask","atomMap","calculateSkeletonHash","skeletonHash","calculateHeavyHash","anyH","getSkeletonHash","hvy","isAtomAromatic","bondOrderArom","getAtomAromaticity","getBondAromaticity","getHeavyHash","getDotPath","getUniqueElements","equivalentTo","timeout","isomorphMatch","uniq1","uniq2","createRubric","createStrict","createStrictRubric","createRelaxed","createRelaxedRubric","crc_table","BOOT_CRC","start_crc","feed_crc","crc","byte","end_crc","CircularFingerprints","kind","hookApplyNewFP","hookConsiderNewFP","resolvedChiral","atomGroup","fplist","atomAdj","bondAdj","make_crc_table","initialIdentityECFP","applyNewFP","hashCode","iteration","centralAtom","niter","newident","circularIterate","growAtoms","considerNewFP","circ","numFP","getFP","getFingerprints","getUniqueHashes","getFoldedHashes","maxBits","andBits","tanimoto","hash1","hash2","nheavy","nhydr","degree","inring","ru","par","newFP","lookFP","CLASS_ECFP0","CLASS_ECFP2","CLASS_ECFP4","CLASS_ECFP6","TEMPLATE_FILES","AbbrevContainer","abbrevs","needsSetup","setupData","tfn","dsstr","colAbbrev","attcount","firstConn","submitAbbreviation","getAbbrevs","infrag","promote","submitFragment","submitMolecule","inmol","substituteAbbrevName","fragExp","fragMF","fragFP","abbrev","afragExp","afragFP","search","formatAbbrevLabel","abv","nameHTML","nameSearch","pre","mid","post","MetalLigate","metalAtom","ligandAttach","ligands","generate","lig","anyAttached","makeLigandBond","otherLigands","avgTheta","orientLigand","l1","l2","arrangeLigandsFree","arrangeLigandsRange","otherOrder","extent","resolveClashes","ligAtom","mchg","lchg","idxAttach","lx","ly","molExtent","weight","bestLX","bestLY","attTheta","attDist","attDX","attDY","orderAttach","srcX","srcY","dstX","dstY","dtheta","refTheta","refSpan","bounded","thetaMin","thetaSpan","ligandSpan","determineThetaBounds","rotTheta","bestMin","bestMax","ablk","bblk","bumpDX","bumpDY","CLOSE_SQ","tainted","outer","FusionPermutation","attdist","guided","bridged","scoreModifier","chainSelect","TemplateFusion","templ","numAttach","withGuideOnly","guidetempl","guideidx","guideadj","timeLimit","artif1","artif2","poly1","poly2","huntForGuides","permuteNone","oldmol","oldbox","newbox","ROTN","rotmol","srcidx","sourceIndex","permuteAtom","timeStart","getTime","newperms","fliptempl","composeGuidedOne","flipmol","composeDirectOne","composeBridge","affixRawPermutations","permuteBond","composeGuidedTwo","composeDirectTwo","permuteMulti","composeGuidedMulti","composeDirectMulti","o1","otheta","ntheta","ocurrent","ncurrent","scoreMod","bfs","pmol","osz","asMask","temidx","removeExtraGuides","o2","nth","oidx","orad","nidx","nrad","lowbfs","busy1","busy2","att","gidx","gx","gy","homoPenalty","oel","nel","RESERVED_GUIDESYMBOL","sel","padj","snapToGuide","isGuideOnTerminal","nudgenew","cx1","cy1","cx2","cy2","midx","tidx","gatom","closeDSQ","npsz","umask","numKeep","scorePermutation","uscore","uidx","perm","tmol","tunion","contained","ai","aj","bo1","bo2","wantTheta","totalBO","mmask","tfr","tto","tn","wmol","imask","ActivityType","MoleculeActivity","activity","param","owner","toClipboard","currentAtom","currentBond","selectedMask","subjectMask","subjectLength","subjectIndex","hasSelected","setOwner","evaluate","execute","Delete","execDelete","Clear","execClear","Copy","execCopy","Cut","SelectAll","execSelectAll","SelectNone","SelectPrevComp","execSelectComp","SelectNextComp","SelectSide","execSelectSide","SelectGrow","execSelectGrow","SelectShrink","execSelectShrink","SelectChain","execSelectChain","SelectSmRing","execSelectSmRing","SelectRingBlk","execSelectRingBlk","SelectCurElement","execSelectCurElement","SelectToggle","execSelectToggle","SelectUnCurrent","execSelectUnCurrent","Element","execElement","positionX","positionY","keepAbbrev","Charge","execCharge","Connect","execConnect","Disconnect","execDisconnect","execMetalLigate","BondOrder","execBond","BondType","BondGeom","execBondGeom","BondAtom","execBondAtom","BondSwitch","execBondSwitch","BondRotate","execBondRotate","BondAddTwo","execBondAddTwo","BondInsert","execBondInsert","Join","execJoin","Nudge","execNudge","NudgeLots","NudgeFar","execNudgeFar","Flip","execFlip","axis","Scale","execScale","Rotate","execRotate","BondDist","execBondDist","AlignAngle","execAlignAngle","angle","AlignRegular","execAlignRegular","AdjustTorsion","execAdjustTorsion","Move","execMove","refAtom","Ring","execRing","ringX","ringY","aromatic","execTemplateFusion","fragNative","setPermutations","permutations","AbbrevTempl","execAbbrevTempl","AbbrevGroup","execAbbrevGroup","AbbrevFormula","execAbbrevFormula","AbbrevClear","execAbbrevClear","AbbrevExpand","execAbbrevExpand","BondArtifactPath","BondArtifactRing","BondArtifactArene","BondArtifactClear","execBondArtifact","execPolymerBlock","AddHydrogens","execAddHydrogens","RemoveHydrogens","execRemoveHydrogens","QueryClear","execQueryClear","QueryCopy","execQueryCopy","QueryPaste","execQueryPaste","QuerySetAtom","execQuerySetAtom","QuerySetBond","execQuerySetBond","QueryBondAny","execQueryBondAny","SproutDirection","execSproutDirection","finish","setState","errmsg","showMessage","requireSubject","zapSubject","withCut","performCopy","all","cclist","pickSelectedGroup","requireCurrent","sides","requireSelected","any","maxRB","gotRB","rb","applyQuery","NON_METALS","TRANSITION_METALS","MAIN_GROUPS","zap","killmask","ligAtoms","performBondNew","ccmol","oneComp","performBondChange","performBondGeomAtom","performBondGeomBond","altmol","ac1","ac2","mobileSide","baseAng","ang1","ang2","alink","fragmask","fusion","isVertical","invSz","connAtoms","curDist","sel1","isSelected","sel2","a3","group1","group3","subj","outmol","pi","checkAbbreviationReady","fixed","requireAtoms","artif","subject","curAtom","removePolymerBlock","performPolymerBlock","selmask","qmol","qterms","aterms","bterms","angleOptions","newAtom","bscore","switchType","stereoType","newang","subjmask","disqualTerminal","side1","side2","weight1","weight2","polymer","ELEMENTS_NOBLE","ELEMENTS_S_BLOCK","ELEMENTS_P_BLOCK","ELEMENTS_D_BLOCK","ELEMENTS_F_BLOCK","ELEMENTS_ABBREV","CommandType","COMMANDS_MAIN","COMMANDS_ATOM","COMMANDS_BOND","COMMANDS_SELECT","COMMANDS_MOVE","CommandBank","cmdType","Main","btn","Select","Abbrev","populateElements","SBlock","PBlock","DBlock","FBlock","Noble","actv","canUndo","performUndo","canRedo","performRedo","performPaste","autoScale","zoom","alert","getState","listItems","ContextSketch","state","sketcher","proxyClip","populate","menu","accelerator","click","editCurrent","maybeAppend","canAlwaysGet","rotateSub","rotateSubMenu","subMenu","querySub","querySubMenu","activ","molact","DraggingTool","DrawCanvasDecoration","GeomWidgetType","GeomWidgetSelType","DrawCanvas","viewOpt","decoration","showOxState","showQuery","showArtifacts","borderRadius","canvasUnder","canvasMolecule","canvasOver","divMessage","guidelines","filthy","dragType","None","hoverAtom","hoverBond","opAtom","opBond","opBudged","opShift","opCtrl","opAlt","lassoX","lassoY","lassoMask","clickX","clickY","mouseX","mouseY","dragGuides","templatePerms","currentPerm","fusionBank","cursorWatermark","cursorDX","cursorDY","toolAtomSymbol","toolBondOrder","toolBondType","toolChargeDelta","toolRingArom","toolRingFreeform","toolRotateIncr","redrawCacheKey","abbrevPolicy","divInfo","getSelected","getLassoed","xToAng","yToAng","scaleToAng","angToScale","layoutMolecule","sketchEffects","redrawMetaVector","abbrevMol","orientAbbreviation","redrawInfo","redrawUnder","redrawMolecule","redrawOver","cacheKey","divText","HOVER_COL","CURRENT_COL","CURRENT_BORD","SELECT_COL","LASSO_COL","drawPolymerUnit","drawAtomShade","drawBondShade","sfr","sto","lfr","lto","lw","sourceX","sourceY","destX","destY","determineFauxRing","Lasso","Erasor","erasing","determineDragTheta","subjectAtoms","determineMoveDelta","drawOriginatingBond","drawQueryFeatures","allIfNone","useOpAtom","updateLasso","calculateLassoMask","borderCol","anghalo","minRad","invNB","CIRC","snapTo","snapAtom","fh","annots","ap","annot","NPT","THPT","extBonds","inAtoms","outAtoms","flag1","flag2","npWidth","npHeight","selfLinks","innerLinks","outerLinks","isCapped","isExt","anames","pair","setLineDash","pickObject","APPROACH","pickObjectCanvas","limitDist","bestItem","noAtoms","noBonds","chi","MappingNumber","AtomIndex","abbrevAtom","Dialog","minPortionWidth","maxPortionWidth","maximumWidth","maximumHeight","minPortionHeight","maxPortionHeight","topMargin","allowScroller","callbackClose","callbackShown","onClose","onShown","bg","domObscureBackground","close","domObscureForeground","domPanelBoundary","divOuter","tdiv","domTitle","bdiv","domBody","ttlTable","tdTitle","tdButtons","domTitleButtons","domClose","repositionSize","bodyDOM","buttonsDOM","docW","dlgW","OutlineMeasurement","ClipboardProxyHandler","copyEvent","andCut","proxy","pasteEvent","OptionList","htmlLabels","selidx","buttonDiv","auxCell","callbackSelect","composeCSS","getSelectedIndex","getSelectedValue","getAuxiliaryCell","onSelect","table","td","clickButton","updateButtons","setSelectedIndex","setSelectedValue","TabBar","unionHeight","panelDiv","getPanelDOM","idxOrName","grid","columns","underline","panel","rotateSelected","ExtraFieldsWidget","fields","divFields","fillTable","divButtons","getExtraFields","field","getTransientFields","strType","strValue","tdType","tdValue","tdButton","GeomWidget","linkA","linkB","torsA","torsB","hovered","atomSubset","selected","Position","Link","divDiagram","selectionAtoms","Torsion","ANG_RAD","loX","posRad","gfx","outerSel","innerSel","showsel","pf","ox1","oy1","ox2","oy2","thetaM","oxM","oyM","ax3","ay3","ax4","ay4","which","whichSelection","sameSelection","maxRad","closeSel","closeDelta","midtheta","POSITION_TABLE_Y","POSITION_TABLE_X","PeriodicTableWidget","divList","selectedAtno","changeElement","callbackDoubleClick","onDoubleClick","updateSelected","setSelectedElements","elementList","QueryFieldsWidget","makeInput","makeToggleInput","chk","inputCharges","optAromatic","optUnsaturated","chkNotElements","inputElements","chkNotRingSizes","inputRingSizes","optRingBlock","inputNumRings","inputRingBonds","inputAdjacency","inputBondSums","inputValences","inputHydrogens","inputIsotopes","setupAtom","inputOrders","setupBond","updateAtom","splitNumbers","unsat","elem","splitStrings","checked","ringblk","updateBond","elemNot","ringszNot","EditAtom","callbackApply","newX","newY","tabs","abbrevList","svgAbbrev","abbrevIndices","currentAbbrev","initMol","pushHandler","btnApply","applyChanges","selectedTab","populateAtom","populateAbbreviation","populateGeometry","populateQuery","populateExtra","focusable","popHandler","updateMolecule","selTab","updateAbbrev","updateGeometry","updateQuery","updateExtra","inputSymbol","periodicWidget","inputCharge","inputUnpaired","optionHydrogen","inputHydrogen","disabled","optionIsotope","inputIsotope","inputMapping","inputIndex","divPeriodic","divFlex","spanSearch","spanList","inputAbbrevSearch","lastSearch","cycleAbbreviation","fillAbbreviations","selectAbbreviation","tableAbbrev","divContainer1","divContainer2","geomWidget","label1","inputGeom1","label2","inputGeom2","refGeom1","refGeom2","queryWidget","fieldsWidget","sym","hcidx","strval1","strval2","instate","mf","abbrevEntries","bgcol","tdLabel","tdStruct","scrollIntoView","EditBond","populateBond","ordersHTML","optionOrder","optionStereo","inputFrom","readOnly","inputTo","CHAR_LOW_A","CHAR_UP_A","indexToAtomLabel","indexToBondLabel","EditPolymer","optionConnect","optionBondConn","currentID","borderAtoms","outBonds","umol","umap","btnRemove","applyRemove","inputNAtoms","inputNBond","populate2x2Conn","getList","domLabel","nvals","inputIncl","inputExcl","ivals","evals","populateUncap","divPreview","renderUnit","keyCode","bondConnOptions","optionList","uncapAtoms","btnUncap","LINES","circle","ToolBankItem","TemplateBank","group","subgroups","templates","resourceData","loadResourceData","prepareSubGroups","prepareTemplates","populateGroups","populateTemplates","titles","preview","molecules","resourceList","msz","colMnemonic","FusionBank","templateAccept","templateRotate","clearPermutations","TOOLS_MAIN","Arrow","Pan","Drag","BondOrder0","BondOrder1","BondOrder2","BondOrder3","BondUnknown","BondInclined","BondDeclined","RingAliph","RingArom","AtomPlus","AtomMinus","ElementPfx","ToolBank","StandardUnits","Sketcher","callbackSpecialPaste","inDialog","initialFocus","useToolBank","lowerToolBank","useCommandBank","lowerCommandBank","useTemplateBank","lowerTemplateBank","debugOutput","beenSetup","undoStack","redoStack","fadeWatermark","toolView","commandView","templateView","proxyMenu","defineMolecule","withAutoScale","withStashUndo","keepSelect","stashUndo","stopTemplateFusion","callbackChangeMolecule","renderMolecule","defineClipboard","defineContext","defineMoleculeString","molsk","defineRenderPolicy","defineBackground","borderRad","bgCol","clearMolecule","setup","centreAndShrink","setupAsync","reserveHeight","keyPressed","keyDown","keyUp","touchStart","touchMove","touchCancel","touchEnd","contextMenu","dataTransfer","dropEffect","dropInto","changeSize","btnv","msg","isError","szLeft","szRight","szBottom","clearMessage","layoutTemplatePerm","anySelected","setSelected","changeCurrentAtom","changeCurrentBond","clearSubject","UNDO_SIZE","pickTemplatePermutation","performCopySelection","pasteText","performActivity","newScale","editBond","editAtom","pasteLocal","pasteMolecule","dlg","limW","limH","natW","natH","down","tpolicy","updateHoverCursor","tool","toolApplies","mouseObj","mouseAtom","mouseBond","abbrevThen","abbrevNow","determineDragGuide","single","determineMoveGuide","guides","hitArrowKey","cursorJumpDirection","jumpFromCurrentAtom","jumpFromCurrentBond","jumpFromNowhere","closestDelta","adjTheta","cosdelta","bondTheta","atheta","ctrlArrowKey","sproutDirection","clickObj","interactStart","interactEnd","interactDrag","view","nomod","triggerCopy","triggerPaste","touches","mouseWheel","openContextMenu","Press","Zoom","BondPfx","inPoly","newOX","newOY","interactEndDrag","interactEndClick","clickAtom","clickBond","autoscale","degrees","prompt","toObj","connectPolymerBlock","transfer","items","files","SUFFIXES","MIMES","getAsString","log","sfx","reader","FileReader","readAsText","bond1","bond2","atomIn1","atomOut1","atomIn2","atomOut2","highName","ina","inb","nameList","name1","name2","PAIR_UNIT_NAMES","pc","pcWV","pcWW","pcVV","pcMM","mol_L","mmol_L","umol_L","nmol_L","pmol_L","g_L","mg_L","ug_L","mol_kg","kg","mg","ug","ng","L","mL","uL","nL","mmol","nmol","ppm","ppb","PAIR_UNIT_MINCHI","Units","STANDARD_LIST","COMMON_NAMES","URI_TO_NAME","NAME_TO_URI","URI_TO_MINCHI","standardList","commonNames","uriToName","nameToURI","convertToMInChI","QuantityType","AbsType","NormMixture","notes","analyse","compList","enumerateStereo","stereoEnum","childIndexes","sumType","sumAmount1","sumAmount2","sumError","toAbsoluteUnits","amount","childType","idxOne","Mass","Volume","Moles","splitMolecule","emols","DrawMixture","hoverIndex","activeIndex","selectedIndex","callbackDrawNameLine","drawConnection","drawComponent","xm","yd","DragReason","MenuBannerCommand","MInChISegment","ExportMInChI","minchi","segment","fillInChI","InChI","isAvailable","inchi","inchiKey","makeInChI","formulate","modmix","useRatio","inchiList","mcomp","inchiFrag","PFX","builder","assembleContents","appendSegment","Header","Component","layerN","Hierarchy","layerG","Concentration","getSegment","makeLongHashKey","makeShortHashKey","LETTERS","crclist","feedCharacter","letter","NCRC","trunc","formatConcentration","mantissa","exp","determineExponent","unitURI","scaled","tree","subComp","subTree","conc","shaveBeard","minval","log10","ExportSDFile","colHier","colConc","appendComponent","subseq","Save","EditDetails","EditStructure","Lookup","ExportSVG","Append","Prepend","InsertBefore","InsertAfter","MoveUp","MoveDown","Undo","Redo","Paste","ZoomFull","ZoomIn","ZoomOut","ON_DESKTOP","execLocation","available","inchiPath","X_OK","hasExecutable","setExecutable","nativeMolfileToInChI","writer","mdlmol","proc","cmd","raw","spawnSync","stdout","MixtureCollection","getMixture","getMixtureDirect","setMixture","setMixtureDirect","deleteMixture","appendMixture","appendMixtureDirect","appendCollection","collection","insertMixture","swapMixtures","m1","m2","RenderHTML","htmlFile","withMInChI","mixlist","emitln","maker","Aspect","allowModify","isColumnReserved","areColumnsReserved","colNames","resMask","rowFirstBlock","rowBlockCount","aspectUnion","initiateNewRow","columnEffectivelyBlank","numTextRenderings","produceTextRendering","numGraphicRenderings","produceGraphicRendering","numHeaderRenderings","produceHeaderRendering","TEXT_PLAIN","TEXT_LINK","TEXT_HTML","supportedAspects","registerAspect","classdef","CODE","NAME","AssayProvenanceHeader","prefixes","targetName","targetURI","organismName","organismURI","targetTypeName","targetTypeURI","cellName","cellURI","assayTypeName","assayTypeURI","assayDescription","sourceName","sourceURI","sourceVersion","documentName","documentURI","measureTypeName","measureTypeURI","unitNames","unitURIs","AssayProvenance","isAssayProvenance","getHeader","parseMetaData","setHeader","formatMetaData","COLNAME_MOLECULE","getName","COLNAME_NAME","COLNAME_VALUE","getError","COLNAME_ERROR","err","COLNAME_UNITS","getRelation","COLNAME_RELATION","getSourceURI","COLNAME_SOURCEURI","setName","setError","setUnits","setRelation","setSourceURI","parseAndCorrect","plainHeading","URI_UNIT_M","URI_UNIT_mM","URI_UNIT_uM","URI_UNIT_nM","URI_UNIT_pM","URI_UNIT_logM","URI_UNIT_perM","URI_UNIT_gL","URI_UNIT_mgL","URI_UNIT_ugL","URI_UNIT_binary","MeasurementData","isMeasurementData","effectHeader","ensureFields","rename","fldidx","newName","oldName","SUFFIX_VALUE","SUFFIX_ERROR","SUFFIX_UNITS","SUFFIX_MOD","reservedColumns","fieldName","getValueField","colValue","colError","colUnits","colMod","clearValue","getDescr","setDescr","defnURI","resv","colField","MixtureAttributeType","isMixture","attributes","info","TableExtractType","TableExtract","tableFile","lookupFile","mappingFile","verbose","aprov","mdata","lookup","mappings","parseLines","initialMapping","customMapping","extractMixture","sep","escaped","aspect","custom","findIndex","appendQuant","stashRatio","Structure","Bound","Ratio","Relation","links","Property","ImportSDFile","mixfiles","feed","processBlock","poll","assembleComponents","sdfile","hier","incomp","decodeConcentration","finishRatio","qstr","quant1","quant2","isRatio","TransformMixtureFormat","ALL_TRANSFORMMIXTURE_FORMATS","TransformMixtures","inputFile","inputFormat","outputFile","outputFormat","instream","outstream","nextIndex","roster","fmt","MInChI","SVG","LongMInChIKey","ShortMInChIKey","stdin","Mixfile","pipeMixfile","pipeJSON","SDF","pipeSDF","flushRoster","processMixfile","Console","justHelp","run","printHelp"],"sourceRoot":""}