{"version":3,"file":"mixtures-cmd.js","mappings":"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AK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC7I,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE3Iv/E,KAAKw/E,WAAa,CACd,GACA,kEACA,2EACA,kNACA,ofACA,8dACA,8nBACA,uCACA,mMACA,8LACA,iJACA,mEACA,uCACA,8BACA,4BACA,0CACA,iWACA,0GACA,wSACA,2fACA,8FACA,kWACA,qgBACA,0DACA,0gBACA,4eACA,uDACA,kEACA,gEACA,+DACA,gEACA,4RACA,6qBACA,0FACA,yaACA,mZACA,6QACA,oEACA,8DACA,8UACA,mEACA,kEACA,qKACA,iFACA,wCACA,4FACA,uEACA,uWACA,uRACA,ieACA,2QACA,+aACA,sDACA,mQACA,mEACA,oHACA,wGACA,wEACA,qEACA,oDACA,gCACA,kDACA,sDACA,kCACA,+BACA,ybACA,kTACA,0SACA,uRACA,qSACA,8KACA,gbACA,uKACA,0DACA,yLACA,iFACA,8BACA,gWACA,uKACA,wPACA,2SACA,4SACA,wJACA,2bACA,mMACA,4KACA,iEACA,8GACA,4FACA,yEACA,gEACA,8SACA,iCACA,0SACA,uSACA,GACA,uDACA,oSACA,4PACA,0aACA,0GACA,0DACA,0yBACA,2DACA,wdACA,waACA,wHACA,yCACA,8BACA,idACA,qCACA,6NACA,qFACA,0QACA,gZACA,wCACA,6KACA,qGACA,8BACA,uJACA,8FACA,sOACA,sHACA,+LACA,gVACA,+fACA,2RACA,sHACA,+HACA,8IACA,yTACA,mJACA,mTACA,iIACA,2jBACA,gGACA,yGACA,wHACA,6HACA,8FACA,uGACA,qHACA,0HACA,2SACA,sSACA,mYACA,6YACA,2ZACA,skBACA,gaACA,gHACA,6hBACA,+RACA,ySACA,uTACA,4TACA,6GACA,qRACA,sdACA,qdACA,8dACA,4eACA,wpBACA,ifACA,8oBACA,mtBACA,odACA,iUACA,0UACA,wVACA,6VACA,0DACA,mEACA,iFACA,sFACA,+cACA,sYACA,qRACA,8RACA,4SACA,udACA,iTACA,sFACA,6YACA,wMACA,iNACA,+NACA,oOACA,8GACA,2SACA,kEACA,uCACA,gGACA,8HACA,8BACA,wGACA,uGACA,sGACA,2YACA,4GACA,kWACA,yHACA,0FACA,yaACA,4CACA,iEACA,oEACA,qEACA,mEACA,mYACA,kEACA,iFACA,uDACA,4FACA,uEACA,0FACA,uWACA,qDACA,uRACA,yFACA,sDACA,wEACA,ydACA,wGACA,8RACA,8TACA,0HACA,gIACA,0TACA,ohBACA,gNACA,kEACA,uSACA,sRACA,meACA,0EACA,mXACA,+eACA,iYACA,4KACA,gcACA,8BACA,oLACA,8DACA,kKACA,iEACA,okBACA,wPACA,kDACA,6RACA,uWACA,wQACA,kDACA,yMACA,2UACA,+FACA,uRACA,+gBACA,sFACA,kQACA,6RACA,6OACA,mjBACA,6cACA,iEACA,2EACA,4FACA,iCACA,0CACA,8BACA,0EACA,8hBACA,iRACA,qcACA,gIACA,6FACA,6FAEJx/E,KAAKy/E,UAAY,CACb,GAAI,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KACvG,CAAC,IAAK,IAAK,IAAK,OAAQ,KAAM,KAAM,IAAK,IAAK,MAAO,MAAO,IAAK,KAAM,CAAC,IAAK,MAAO,IAAK,IAAK,KAAM,OAAQ,KAAM,OAAQ,KAAM,OAAQ,KAAM,KAAM,IAAK,MAAO,IAAK,OACrK,CAAC,IAAK,MAAO,MAAO,MAAO,IAAK,KAAM,KAAM,MAAO,IAAK,MAAO,IAAK,MAAO,IAAK,MAAO,KAAM,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,IAAK,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAC9J,CAAC,IAAK,IAAK,IAAK,MAAO,IAAK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AK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KAEtI3/E,KAAK4/E,QAAU,CACX,IAAU,IAAK,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAC5I,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAC7I,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IACvI,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAU,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvI,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAC5I,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAA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","sources":["webpack://Mixtures/./node_modules/stream-json/streamers/StreamArray.js","webpack://Mixtures/./node_modules/stream-json/streamers/StreamBase.js","webpack://Mixtures/external node-commonjs \"string_decoder\"","webpack://Mixtures/external node-commonjs \"stream\"","webpack://Mixtures/./node_modules/electron/index.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/remote.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/callbacks-registry.js","webpack://Mixtures/external node-commonjs \"child_process\"","webpack://Mixtures/./node_modules/stream-json/Parser.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/get-electron-binding.js","webpack://Mixtures/external node-commonjs \"events\"","webpack://Mixtures/./node_modules/stream-json/Assembler.js","webpack://Mixtures/./node_modules/stream-json/utils/Utf8Stream.js","webpack://Mixtures/./node_modules/@electron/remote/renderer/index.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/type-utils.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/module-names.js","webpack://Mixtures/external node-commonjs \"fs\"","webpack://Mixtures/./node_modules/stream-json/utils/withParser.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/index.js","webpack://Mixtures/external node-commonjs \"path\"","webpack://Mixtures/external node-commonjs \"process\"","webpack://Mixtures/./node_modules/stream-chain/index.js","webpack://Mixtures/webpack/bootstrap","webpack://Mixtures/webpack/runtime/define property getters","webpack://Mixtures/webpack/runtime/hasOwnProperty shorthand","webpack://Mixtures/webpack/runtime/make namespace object","webpack://Mixtures/./node_modules/webmolkit/util/Vec.js","webpack://Mixtures/./node_modules/webmolkit/mol/Chemistry.js","webpack://Mixtures/./node_modules/webmolkit/util/Matrix.js","webpack://Mixtures/./node_modules/webmolkit/util/Triangulation2D.js","webpack://Mixtures/./node_modules/webmolkit/util/Geom.js","webpack://Mixtures/./node_modules/webmolkit/util/XML.js","webpack://Mixtures/./node_modules/webmolkit/util/dom.js","webpack://Mixtures/./node_modules/webmolkit/util/util.js","webpack://Mixtures/./node_modules/webmolkit/mol/Graph.js","webpack://Mixtures/./node_modules/webmolkit/calc/ResonanceRemover.js","webpack://Mixtures/./node_modules/webmolkit/mol/BondArtifact.js","webpack://Mixtures/./node_modules/webmolkit/ds/DataSheet.js","webpack://Mixtures/./node_modules/webmolkit/mol/ForeignMolecule.js","webpack://Mixtures/./node_modules/webmolkit/mol/PolymerBlock.js","webpack://Mixtures/./node_modules/webmolkit/mol/QueryUtil.js","webpack://Mixtures/./node_modules/webmolkit/mol/StereoGroup.js","webpack://Mixtures/./node_modules/webmolkit/io/MDLReader.js","webpack://Mixtures/./node_modules/webmolkit/io/MDLWriter.js","webpack://Mixtures/./node_modules/webmolkit/io/MoleculeStream.js","webpack://Mixtures/./node_modules/webmolkit/mol/Molecule.js","webpack://Mixtures/./node_modules/webmolkit/mol/CoordUtil.js","webpack://Mixtures/./node_modules/webmolkit/mol/SketchUtil.js","webpack://Mixtures/./node_modules/webmolkit/mol/MolUtil.js","webpack://Mixtures/./src/mixture/InChIDelegate.ts","webpack://Mixtures/./src/nodejs/InChI.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/Rendering.js","webpack://Mixtures/./node_modules/webmolkit/gfx/ArrangeMolecule.js","webpack://Mixtures/./node_modules/webmolkit/mol/PseudoEmbedding.js","webpack://Mixtures/./node_modules/webmolkit/util/FitRotatedEllipse.js","webpack://Mixtures/./node_modules/webmolkit/gfx/FontData.js","webpack://Mixtures/./node_modules/webmolkit/data/OntologyTree.js","webpack://Mixtures/./node_modules/webmolkit/res/data/ontology/units.onto","webpack://Mixtures/./src/mixture/SquarePacking.ts","webpack://Mixtures/./src/mixture/ArrangeMixture.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/MetaVector.js","webpack://Mixtures/./src/mixture/Units.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/DrawMolecule.js","webpack://Mixtures/./src/mixture/DrawMixture.ts","webpack://Mixtures/./node_modules/webmolkit/mol/DotPath.js","webpack://Mixtures/./node_modules/webmolkit/mol/Stereochemistry.js","webpack://Mixtures/./node_modules/webmolkit/mol/MetaMolecule.js","webpack://Mixtures/./node_modules/webmolkit/calc/CircularFingerprints.js","webpack://Mixtures/./node_modules/webmolkit/io/DataSheetStream.js","webpack://Mixtures/./node_modules/webmolkit/data/AbbrevContainer.js","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/rings.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/termgrp.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/funcgrp.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/protgrp.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/nonplrings.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/largerings.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/crownethers.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/ligmonodent.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/ligbident.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/ligtrident.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/ligmultident.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/cagecmplx.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/aminoacids.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/biomolecules.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/saccharides.ds","webpack://Mixtures/./node_modules/webmolkit/sketcher/MetalLigate.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/TemplateFusion.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/MoleculeActivity.js","webpack://Mixtures/./src/mixture/NormMixture.ts","webpack://Mixtures/./src/mixture/Mixture.ts","webpack://Mixtures/./src/mixture/Mixfile.ts","webpack://Mixtures/./src/mixture/ExportMInChI.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/ArrangeMeasurement.js","webpack://Mixtures/./src/mixture/MixtureCollection.ts","webpack://Mixtures/./src/cmdline/RenderHTML.ts","webpack://Mixtures/./node_modules/webmolkit/aspect/Aspect.js","webpack://Mixtures/./node_modules/webmolkit/aspect/AspectList.js","webpack://Mixtures/./node_modules/webmolkit/aspect/AssayProvenance.js","webpack://Mixtures/./node_modules/webmolkit/aspect/MeasurementData.js","webpack://Mixtures/./node_modules/webmolkit/aspect/Mixture.js","webpack://Mixtures/./src/cmdline/TableExtract.ts","webpack://Mixtures/./src/mixture/ExportSDFile.ts","webpack://Mixtures/./src/mixture/ImportSDFile.ts","webpack://Mixtures/./src/cmdline/TransformMixtures.ts","webpack://Mixtures/./src/cmdline/Console.ts"],"sourcesContent":["'use strict';\n\nconst StreamBase = require('./StreamBase');\nconst withParser = require('../utils/withParser');\n\nclass StreamArray extends StreamBase {\n  static make(options) {\n    return new StreamArray(options);\n  }\n\n  static withParser(options) {\n    return withParser(StreamArray.make, options);\n  }\n\n  constructor(options) {\n    super(options);\n    this._level = 1;\n    this._counter = 0;\n  }\n\n  _wait(chunk, _, callback) {\n    // first chunk should open an array\n    if (chunk.name !== 'startArray') {\n      return callback(new Error('Top-level object should be an array.'));\n    }\n    this._transform = this._filter;\n    return this._transform(chunk, _, callback);\n  }\n\n  _push(discard) {\n    if (this._assembler.current.length) {\n      if (discard) {\n        ++this._counter;\n        this._assembler.current.pop();\n      } else {\n        this.push({key: this._counter++, value: this._assembler.current.pop()});\n      }\n    }\n  }\n}\nStreamArray.streamArray = StreamArray.make;\nStreamArray.make.Constructor = StreamArray;\n\nmodule.exports = StreamArray;\n","'use strict';\n\nconst {Transform} = require('stream');\nconst Assembler = require('../Assembler');\n\nclass Counter {\n  constructor(initialDepth) {\n    this.depth = initialDepth;\n  }\n  startObject() {\n    ++this.depth;\n  }\n  endObject() {\n    --this.depth;\n  }\n  startArray() {\n    ++this.depth;\n  }\n  endArray() {\n    --this.depth;\n  }\n}\n\nclass StreamBase extends Transform {\n  constructor(options) {\n    super(Object.assign({}, options, {writableObjectMode: true, readableObjectMode: true}));\n    if (options) {\n      this.objectFilter = options.objectFilter;\n      this.includeUndecided = options.includeUndecided;\n    }\n    if (typeof this.objectFilter != 'function') {\n      this._filter = this._transform;\n    }\n    this._transform = this._wait || this._filter;\n    this._assembler = new Assembler(options);\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._push();\n      }\n    }\n    callback(null);\n  }\n\n  _filter(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      const result = this.objectFilter(this._assembler);\n      if (result) {\n        if (this._assembler.depth === this._level) {\n          this._push();\n          this._transform = this._filter;\n        }\n        this._transform = this._accept;\n        return callback(null);\n      }\n      if (result === false) {\n        this._saved_assembler = this._assembler;\n        this._assembler = new Counter(this._saved_assembler.depth);\n        this._saved_assembler.dropToLevel(this._level);\n        if (this._assembler.depth === this._level) {\n          this._assembler = this._saved_assembler;\n          this._transform = this._filter;\n        }\n        this._transform = this._reject;\n        return callback(null);\n      }\n      if (this._assembler.depth === this._level) {\n        this._push(!this.includeUndecided);\n      }\n    }\n    callback(null);\n  }\n\n  _accept(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._push();\n        this._transform = this._filter;\n      }\n    }\n    callback(null);\n  }\n\n  _reject(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._assembler = this._saved_assembler;\n        this._transform = this._filter;\n      }\n    }\n    callback(null);\n  }\n}\n\nmodule.exports = StreamBase;\n","module.exports = require(\"string_decoder\");","module.exports = require(\"stream\");","const fs = require('fs');\nconst path = require('path');\n\nconst pathFile = path.join(__dirname, 'path.txt');\n\nfunction getElectronPath () {\n  let executablePath;\n  if (fs.existsSync(pathFile)) {\n    executablePath = fs.readFileSync(pathFile, 'utf-8');\n  }\n  if (process.env.ELECTRON_OVERRIDE_DIST_PATH) {\n    return path.join(process.env.ELECTRON_OVERRIDE_DIST_PATH, executablePath || 'electron');\n  }\n  if (executablePath) {\n    return path.join(__dirname, 'dist', executablePath);\n  } else {\n    throw new Error('Electron failed to install correctly, please delete node_modules/electron and try installing again');\n  }\n}\n\nmodule.exports = getElectronPath();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createFunctionWithReturnValue = exports.getGlobal = exports.getCurrentWebContents = exports.getCurrentWindow = exports.getBuiltin = void 0;\nconst callbacks_registry_1 = require(\"./callbacks-registry\");\nconst type_utils_1 = require(\"../common/type-utils\");\nconst electron_1 = require(\"electron\");\nconst module_names_1 = require(\"../common/module-names\");\nconst get_electron_binding_1 = require(\"../common/get-electron-binding\");\nconst { Promise } = global;\nconst callbacksRegistry = new callbacks_registry_1.CallbacksRegistry();\nconst remoteObjectCache = new Map();\nconst finalizationRegistry = new FinalizationRegistry((id) => {\n    const ref = remoteObjectCache.get(id);\n    if (ref !== undefined && ref.deref() === undefined) {\n        remoteObjectCache.delete(id);\n        electron_1.ipcRenderer.send(\"REMOTE_BROWSER_DEREFERENCE\" /* BROWSER_DEREFERENCE */, contextId, id, 0);\n    }\n});\nconst electronIds = new WeakMap();\nconst isReturnValue = new WeakSet();\nfunction getCachedRemoteObject(id) {\n    const ref = remoteObjectCache.get(id);\n    if (ref !== undefined) {\n        const deref = ref.deref();\n        if (deref !== undefined)\n            return deref;\n    }\n}\nfunction setCachedRemoteObject(id, value) {\n    const wr = new WeakRef(value);\n    remoteObjectCache.set(id, wr);\n    finalizationRegistry.register(value, id);\n    return value;\n}\nfunction getContextId() {\n    const v8Util = get_electron_binding_1.getElectronBinding('v8_util');\n    if (v8Util) {\n        return v8Util.getHiddenValue(global, 'contextId');\n    }\n    else {\n        throw new Error('Electron >=v13.0.0-beta.6 required to support sandboxed renderers');\n    }\n}\n// An unique ID that can represent current context.\nconst contextId = process.contextId || getContextId();\n// Notify the main process when current context is going to be released.\n// Note that when the renderer process is destroyed, the message may not be\n// sent, we also listen to the \"render-view-deleted\" event in the main process\n// to guard that situation.\nprocess.on('exit', () => {\n    const command = \"REMOTE_BROWSER_CONTEXT_RELEASE\" /* BROWSER_CONTEXT_RELEASE */;\n    electron_1.ipcRenderer.send(command, contextId);\n});\nconst IS_REMOTE_PROXY = Symbol('is-remote-proxy');\n// Convert the arguments object into an array of meta data.\nfunction wrapArgs(args, visited = new Set()) {\n    const valueToMeta = (value) => {\n        // Check for circular reference.\n        if (visited.has(value)) {\n            return {\n                type: 'value',\n                value: null\n            };\n        }\n        if (value && value.constructor && value.constructor.name === 'NativeImage') {\n            return { type: 'nativeimage', value: type_utils_1.serialize(value) };\n        }\n        else if (Array.isArray(value)) {\n            visited.add(value);\n            const meta = {\n                type: 'array',\n                value: wrapArgs(value, visited)\n            };\n            visited.delete(value);\n            return meta;\n        }\n        else if (value instanceof Buffer) {\n            return {\n                type: 'buffer',\n                value\n            };\n        }\n        else if (type_utils_1.isSerializableObject(value)) {\n            return {\n                type: 'value',\n                value\n            };\n        }\n        else if (typeof value === 'object') {\n            if (type_utils_1.isPromise(value)) {\n                return {\n                    type: 'promise',\n                    then: valueToMeta(function (onFulfilled, onRejected) {\n                        value.then(onFulfilled, onRejected);\n                    })\n                };\n            }\n            else if (electronIds.has(value)) {\n                return {\n                    type: 'remote-object',\n                    id: electronIds.get(value)\n                };\n            }\n            const meta = {\n                type: 'object',\n                name: value.constructor ? value.constructor.name : '',\n                members: []\n            };\n            visited.add(value);\n            for (const prop in value) { // eslint-disable-line guard-for-in\n                meta.members.push({\n                    name: prop,\n                    value: valueToMeta(value[prop])\n                });\n            }\n            visited.delete(value);\n            return meta;\n        }\n        else if (typeof value === 'function' && isReturnValue.has(value)) {\n            return {\n                type: 'function-with-return-value',\n                value: valueToMeta(value())\n            };\n        }\n        else if (typeof value === 'function') {\n            return {\n                type: 'function',\n                id: callbacksRegistry.add(value),\n                location: callbacksRegistry.getLocation(value),\n                length: value.length\n            };\n        }\n        else {\n            return {\n                type: 'value',\n                value\n            };\n        }\n    };\n    return args.map(valueToMeta);\n}\n// Populate object's members from descriptors.\n// The |ref| will be kept referenced by |members|.\n// This matches |getObjectMemebers| in rpc-server.\nfunction setObjectMembers(ref, object, metaId, members) {\n    if (!Array.isArray(members))\n        return;\n    for (const member of members) {\n        if (Object.prototype.hasOwnProperty.call(object, member.name))\n            continue;\n        const descriptor = { enumerable: member.enumerable };\n        if (member.type === 'method') {\n            const remoteMemberFunction = function (...args) {\n                let command;\n                if (this && this.constructor === remoteMemberFunction) {\n                    command = \"REMOTE_BROWSER_MEMBER_CONSTRUCTOR\" /* BROWSER_MEMBER_CONSTRUCTOR */;\n                }\n                else {\n                    command = \"REMOTE_BROWSER_MEMBER_CALL\" /* BROWSER_MEMBER_CALL */;\n                }\n                const ret = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name, wrapArgs(args));\n                return metaToValue(ret);\n            };\n            let descriptorFunction = proxyFunctionProperties(remoteMemberFunction, metaId, member.name);\n            descriptor.get = () => {\n                descriptorFunction.ref = ref; // The member should reference its object.\n                return descriptorFunction;\n            };\n            // Enable monkey-patch the method\n            descriptor.set = (value) => {\n                descriptorFunction = value;\n                return value;\n            };\n            descriptor.configurable = true;\n        }\n        else if (member.type === 'get') {\n            descriptor.get = () => {\n                const command = \"REMOTE_BROWSER_MEMBER_GET\" /* BROWSER_MEMBER_GET */;\n                const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name);\n                return metaToValue(meta);\n            };\n            if (member.writable) {\n                descriptor.set = (value) => {\n                    const args = wrapArgs([value]);\n                    const command = \"REMOTE_BROWSER_MEMBER_SET\" /* BROWSER_MEMBER_SET */;\n                    const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name, args);\n                    if (meta != null)\n                        metaToValue(meta);\n                    return value;\n                };\n            }\n        }\n        Object.defineProperty(object, member.name, descriptor);\n    }\n}\n// Populate object's prototype from descriptor.\n// This matches |getObjectPrototype| in rpc-server.\nfunction setObjectPrototype(ref, object, metaId, descriptor) {\n    if (descriptor === null)\n        return;\n    const proto = {};\n    setObjectMembers(ref, proto, metaId, descriptor.members);\n    setObjectPrototype(ref, proto, metaId, descriptor.proto);\n    Object.setPrototypeOf(object, proto);\n}\n// Wrap function in Proxy for accessing remote properties\nfunction proxyFunctionProperties(remoteMemberFunction, metaId, name) {\n    let loaded = false;\n    // Lazily load function properties\n    const loadRemoteProperties = () => {\n        if (loaded)\n            return;\n        loaded = true;\n        const command = \"REMOTE_BROWSER_MEMBER_GET\" /* BROWSER_MEMBER_GET */;\n        const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, name);\n        setObjectMembers(remoteMemberFunction, remoteMemberFunction, meta.id, meta.members);\n    };\n    return new Proxy(remoteMemberFunction, {\n        set: (target, property, value) => {\n            if (property !== 'ref')\n                loadRemoteProperties();\n            target[property] = value;\n            return true;\n        },\n        get: (target, property) => {\n            if (property === IS_REMOTE_PROXY)\n                return true;\n            if (!Object.prototype.hasOwnProperty.call(target, property))\n                loadRemoteProperties();\n            const value = target[property];\n            if (property === 'toString' && typeof value === 'function') {\n                return value.bind(target);\n            }\n            return value;\n        },\n        ownKeys: (target) => {\n            loadRemoteProperties();\n            return Object.getOwnPropertyNames(target);\n        },\n        getOwnPropertyDescriptor: (target, property) => {\n            const descriptor = Object.getOwnPropertyDescriptor(target, property);\n            if (descriptor)\n                return descriptor;\n            loadRemoteProperties();\n            return Object.getOwnPropertyDescriptor(target, property);\n        }\n    });\n}\n// Convert meta data from browser into real value.\nfunction metaToValue(meta) {\n    if (!meta)\n        return {};\n    if (meta.type === 'value') {\n        return meta.value;\n    }\n    else if (meta.type === 'array') {\n        return meta.members.map((member) => metaToValue(member));\n    }\n    else if (meta.type === 'nativeimage') {\n        return type_utils_1.deserialize(meta.value);\n    }\n    else if (meta.type === 'buffer') {\n        return Buffer.from(meta.value.buffer, meta.value.byteOffset, meta.value.byteLength);\n    }\n    else if (meta.type === 'promise') {\n        return Promise.resolve({ then: metaToValue(meta.then) });\n    }\n    else if (meta.type === 'error') {\n        return metaToError(meta);\n    }\n    else if (meta.type === 'exception') {\n        if (meta.value.type === 'error') {\n            throw metaToError(meta.value);\n        }\n        else {\n            throw new Error(`Unexpected value type in exception: ${meta.value.type}`);\n        }\n    }\n    else {\n        let ret;\n        if ('id' in meta) {\n            const cached = getCachedRemoteObject(meta.id);\n            if (cached !== undefined) {\n                return cached;\n            }\n        }\n        // A shadow class to represent the remote function object.\n        if (meta.type === 'function') {\n            const remoteFunction = function (...args) {\n                let command;\n                if (this && this.constructor === remoteFunction) {\n                    command = \"REMOTE_BROWSER_CONSTRUCTOR\" /* BROWSER_CONSTRUCTOR */;\n                }\n                else {\n                    command = \"REMOTE_BROWSER_FUNCTION_CALL\" /* BROWSER_FUNCTION_CALL */;\n                }\n                const obj = electron_1.ipcRenderer.sendSync(command, contextId, meta.id, wrapArgs(args));\n                return metaToValue(obj);\n            };\n            ret = remoteFunction;\n        }\n        else {\n            ret = {};\n        }\n        setObjectMembers(ret, ret, meta.id, meta.members);\n        setObjectPrototype(ret, ret, meta.id, meta.proto);\n        if (ret.constructor && ret.constructor[IS_REMOTE_PROXY]) {\n            Object.defineProperty(ret.constructor, 'name', { value: meta.name });\n        }\n        // Track delegate obj's lifetime & tell browser to clean up when object is GCed.\n        electronIds.set(ret, meta.id);\n        setCachedRemoteObject(meta.id, ret);\n        return ret;\n    }\n}\nfunction metaToError(meta) {\n    const obj = meta.value;\n    for (const { name, value } of meta.members) {\n        obj[name] = metaToValue(value);\n    }\n    return obj;\n}\nfunction hasSenderId(input) {\n    return typeof input.senderId === \"number\";\n}\nfunction handleMessage(channel, handler) {\n    electron_1.ipcRenderer.on(channel, (event, passedContextId, id, ...args) => {\n        if (hasSenderId(event)) {\n            if (event.senderId !== 0 && event.senderId !== undefined) {\n                console.error(`Message ${channel} sent by unexpected WebContents (${event.senderId})`);\n                return;\n            }\n        }\n        if (passedContextId === contextId) {\n            handler(id, ...args);\n        }\n        else {\n            // Message sent to an un-exist context, notify the error to main process.\n            electron_1.ipcRenderer.send(\"REMOTE_BROWSER_WRONG_CONTEXT_ERROR\" /* BROWSER_WRONG_CONTEXT_ERROR */, contextId, passedContextId, id);\n        }\n    });\n}\nconst enableStacks = process.argv.includes('--enable-api-filtering-logging');\nfunction getCurrentStack() {\n    const target = { stack: undefined };\n    if (enableStacks) {\n        Error.captureStackTrace(target, getCurrentStack);\n    }\n    return target.stack;\n}\n// Browser calls a callback in renderer.\nhandleMessage(\"REMOTE_RENDERER_CALLBACK\" /* RENDERER_CALLBACK */, (id, args) => {\n    callbacksRegistry.apply(id, metaToValue(args));\n});\n// A callback in browser is released.\nhandleMessage(\"REMOTE_RENDERER_RELEASE_CALLBACK\" /* RENDERER_RELEASE_CALLBACK */, (id) => {\n    callbacksRegistry.remove(id);\n});\nexports.require = (module) => {\n    const command = \"REMOTE_BROWSER_REQUIRE\" /* BROWSER_REQUIRE */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, module, getCurrentStack());\n    return metaToValue(meta);\n};\n// Alias to remote.require('electron').xxx.\nfunction getBuiltin(module) {\n    const command = \"REMOTE_BROWSER_GET_BUILTIN\" /* BROWSER_GET_BUILTIN */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, module, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getBuiltin = getBuiltin;\nfunction getCurrentWindow() {\n    const command = \"REMOTE_BROWSER_GET_CURRENT_WINDOW\" /* BROWSER_GET_CURRENT_WINDOW */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getCurrentWindow = getCurrentWindow;\n// Get current WebContents object.\nfunction getCurrentWebContents() {\n    const command = \"REMOTE_BROWSER_GET_CURRENT_WEB_CONTENTS\" /* BROWSER_GET_CURRENT_WEB_CONTENTS */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getCurrentWebContents = getCurrentWebContents;\n// Get a global object in browser.\nfunction getGlobal(name) {\n    const command = \"REMOTE_BROWSER_GET_GLOBAL\" /* BROWSER_GET_GLOBAL */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, name, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getGlobal = getGlobal;\n// Get the process object in browser.\nObject.defineProperty(exports, 'process', {\n    enumerable: true,\n    get: () => exports.getGlobal('process')\n});\n// Create a function that will return the specified value when called in browser.\nfunction createFunctionWithReturnValue(returnValue) {\n    const func = () => returnValue;\n    isReturnValue.add(func);\n    return func;\n}\nexports.createFunctionWithReturnValue = createFunctionWithReturnValue;\nconst addBuiltinProperty = (name) => {\n    Object.defineProperty(exports, name, {\n        enumerable: true,\n        get: () => exports.getBuiltin(name)\n    });\n};\nmodule_names_1.browserModuleNames\n    .forEach(addBuiltinProperty);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallbacksRegistry = void 0;\nclass CallbacksRegistry {\n    constructor() {\n        this.nextId = 0;\n        this.callbacks = {};\n        this.callbackIds = new WeakMap();\n        this.locationInfo = new WeakMap();\n    }\n    add(callback) {\n        // The callback is already added.\n        let id = this.callbackIds.get(callback);\n        if (id != null)\n            return id;\n        id = this.nextId += 1;\n        this.callbacks[id] = callback;\n        this.callbackIds.set(callback, id);\n        // Capture the location of the function and put it in the ID string,\n        // so that release errors can be tracked down easily.\n        const regexp = /at (.*)/gi;\n        const stackString = (new Error()).stack;\n        if (!stackString)\n            return id;\n        let filenameAndLine;\n        let match;\n        while ((match = regexp.exec(stackString)) !== null) {\n            const location = match[1];\n            if (location.includes('(native)'))\n                continue;\n            if (location.includes('(<anonymous>)'))\n                continue;\n            if (location.includes('callbacks-registry.js'))\n                continue;\n            if (location.includes('remote.js'))\n                continue;\n            if (location.includes('@electron/remote/dist'))\n                continue;\n            const ref = /([^/^)]*)\\)?$/gi.exec(location);\n            if (ref)\n                filenameAndLine = ref[1];\n            break;\n        }\n        this.locationInfo.set(callback, filenameAndLine);\n        return id;\n    }\n    get(id) {\n        return this.callbacks[id] || function () { };\n    }\n    getLocation(callback) {\n        return this.locationInfo.get(callback);\n    }\n    apply(id, ...args) {\n        return this.get(id).apply(global, ...args);\n    }\n    remove(id) {\n        const callback = this.callbacks[id];\n        if (callback) {\n            this.callbackIds.delete(callback);\n            delete this.callbacks[id];\n        }\n    }\n}\nexports.CallbacksRegistry = CallbacksRegistry;\n","module.exports = require(\"child_process\");","'use strict';\n\nconst Utf8Stream = require('./utils/Utf8Stream');\n\nconst patterns = {\n  value1: /^(?:[\\\"\\{\\[\\]\\-\\d]|true\\b|false\\b|null\\b|\\s{1,256})/,\n  string: /^(?:[^\\x00-\\x1f\\\"\\\\]{1,256}|\\\\[bfnrt\\\"\\\\\\/]|\\\\u[\\da-fA-F]{4}|\\\")/,\n  key1: /^(?:[\\\"\\}]|\\s{1,256})/,\n  colon: /^(?:\\:|\\s{1,256})/,\n  comma: /^(?:[\\,\\]\\}]|\\s{1,256})/,\n  ws: /^\\s{1,256}/,\n  numberStart: /^\\d/,\n  numberDigit: /^\\d{0,256}/,\n  numberFraction: /^[\\.eE]/,\n  numberExponent: /^[eE]/,\n  numberExpSign: /^[-+]/\n};\nconst MAX_PATTERN_SIZE = 16;\n\nlet noSticky = true;\ntry {\n  new RegExp('.', 'y');\n  noSticky = false;\n} catch (e) {\n  // suppress\n}\n\n!noSticky &&\n  Object.keys(patterns).forEach(key => {\n    let src = patterns[key].source.slice(1); // lop off ^\n    if (src.slice(0, 3) === '(?:' && src.slice(-1) === ')') {\n      src = src.slice(3, -1);\n    }\n    patterns[key] = new RegExp(src, 'y');\n  });\n\npatterns.numberFracStart = patterns.numberExpStart = patterns.numberStart;\npatterns.numberFracDigit = patterns.numberExpDigit = patterns.numberDigit;\n\nconst values = {true: true, false: false, null: null},\n  expected = {object: 'objectStop', array: 'arrayStop', '': 'done'};\n\n// long hexadecimal codes: \\uXXXX\nconst fromHex = s => String.fromCharCode(parseInt(s.slice(2), 16));\n\n// short codes: \\b \\f \\n \\r \\t \\\" \\\\ \\/\nconst codes = {b: '\\b', f: '\\f', n: '\\n', r: '\\r', t: '\\t', '\"': '\"', '\\\\': '\\\\', '/': '/'};\n\nclass Parser extends Utf8Stream {\n  static make(options) {\n    return new Parser(options);\n  }\n\n  constructor(options) {\n    super(Object.assign({}, options, {readableObjectMode: true}));\n\n    this._packKeys = this._packStrings = this._packNumbers = this._streamKeys = this._streamStrings = this._streamNumbers = true;\n    if (options) {\n      'packValues' in options && (this._packKeys = this._packStrings = this._packNumbers = options.packValues);\n      'packKeys' in options && (this._packKeys = options.packKeys);\n      'packStrings' in options && (this._packStrings = options.packStrings);\n      'packNumbers' in options && (this._packNumbers = options.packNumbers);\n      'streamValues' in options && (this._streamKeys = this._streamStrings = this._streamNumbers = options.streamValues);\n      'streamKeys' in options && (this._streamKeys = options.streamKeys);\n      'streamStrings' in options && (this._streamStrings = options.streamStrings);\n      'streamNumbers' in options && (this._streamNumbers = options.streamNumbers);\n      this._jsonStreaming = options.jsonStreaming;\n    }\n    !this._packKeys && (this._streamKeys = true);\n    !this._packStrings && (this._streamStrings = true);\n    !this._packNumbers && (this._streamNumbers = true);\n\n    this._done = false;\n    this._expect = this._jsonStreaming ? 'done' : 'value';\n    this._stack = [];\n    this._parent = '';\n    this._open_number = false;\n    this._accumulator = '';\n  }\n\n  _flush(callback) {\n    this._done = true;\n    super._flush(error => {\n      if (error) return callback(error);\n      if (this._open_number) {\n        if (this._streamNumbers) {\n          this.push({name: 'endNumber'});\n        }\n        this._open_number = false;\n        if (this._packNumbers) {\n          this.push({name: 'numberValue', value: this._accumulator});\n          this._accumulator = '';\n        }\n      }\n      callback(null);\n    });\n  }\n\n  _processBuffer(callback) {\n    let match,\n      value,\n      index = 0;\n    main: for (;;) {\n      switch (this._expect) {\n        case 'value1':\n        case 'value':\n          patterns.value1.lastIndex = index;\n          match = patterns.value1.exec(this._buffer);\n          if (!match) {\n            if (this._done || index + MAX_PATTERN_SIZE < this._buffer.length) {\n              if (index < this._buffer.length) return callback(new Error('Parser cannot parse input: expected a value'));\n              return callback(new Error('Parser has expected a value'));\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          switch (value) {\n            case '\"':\n              this._streamStrings && this.push({name: 'startString'});\n              this._expect = 'string';\n              break;\n            case '{':\n              this.push({name: 'startObject'});\n              this._stack.push(this._parent);\n              this._parent = 'object';\n              this._expect = 'key1';\n              break;\n            case '[':\n              this.push({name: 'startArray'});\n              this._stack.push(this._parent);\n              this._parent = 'array';\n              this._expect = 'value1';\n              break;\n            case ']':\n              if (this._expect !== 'value1') return callback(new Error(\"Parser cannot parse input: unexpected token ']'\"));\n              if (this._open_number) {\n                this._streamNumbers && this.push({name: 'endNumber'});\n                this._open_number = false;\n                if (this._packNumbers) {\n                  this.push({name: 'numberValue', value: this._accumulator});\n                  this._accumulator = '';\n                }\n              }\n              this.push({name: 'endArray'});\n              this._parent = this._stack.pop();\n              this._expect = expected[this._parent];\n              break;\n            case '-':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: '-'});\n              }\n              this._packNumbers && (this._accumulator = '-');\n              this._expect = 'numberStart';\n              break;\n            case '0':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: '0'});\n              }\n              this._packNumbers && (this._accumulator = '0');\n              this._expect = 'numberFraction';\n              break;\n            case '1':\n            case '2':\n            case '3':\n            case '4':\n            case '5':\n            case '6':\n            case '7':\n            case '8':\n            case '9':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: value});\n              }\n              this._packNumbers && (this._accumulator = value);\n              this._expect = 'numberDigit';\n              break;\n            case 'true':\n            case 'false':\n            case 'null':\n              if (this._buffer.length - index === value.length && !this._done) break main; // wait for more input\n              this.push({name: value + 'Value', value: values[value]});\n              this._expect = expected[this._parent];\n              break;\n            // default: // ws\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'keyVal':\n        case 'string':\n          patterns.string.lastIndex = index;\n          match = patterns.string.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length && (this._done || this._buffer.length - index >= 6))\n              return callback(new Error('Parser cannot parse input: escaped characters'));\n            if (this._done) return callback(new Error('Parser has expected a string value'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value === '\"') {\n            if (this._expect === 'keyVal') {\n              this._streamKeys && this.push({name: 'endKey'});\n              if (this._packKeys) {\n                this.push({name: 'keyValue', value: this._accumulator});\n                this._accumulator = '';\n              }\n              this._expect = 'colon';\n            } else {\n              this._streamStrings && this.push({name: 'endString'});\n              if (this._packStrings) {\n                this.push({name: 'stringValue', value: this._accumulator});\n                this._accumulator = '';\n              }\n              this._expect = expected[this._parent];\n            }\n          } else if (value.length > 1 && value.charAt(0) === '\\\\') {\n            const t = value.length == 2 ? codes[value.charAt(1)] : fromHex(value);\n            if (this._expect === 'keyVal' ? this._streamKeys : this._streamStrings) {\n              this.push({name: 'stringChunk', value: t});\n            }\n            if (this._expect === 'keyVal' ? this._packKeys : this._packStrings) {\n              this._accumulator += t;\n            }\n          } else {\n            if (this._expect === 'keyVal' ? this._streamKeys : this._streamStrings) {\n              this.push({name: 'stringChunk', value: value});\n            }\n            if (this._expect === 'keyVal' ? this._packKeys : this._packStrings) {\n              this._accumulator += value;\n            }\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'key1':\n        case 'key':\n          patterns.key1.lastIndex = index;\n          match = patterns.key1.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected an object key'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value === '\"') {\n            this._streamKeys && this.push({name: 'startKey'});\n            this._expect = 'keyVal';\n          } else if (value === '}') {\n            if (this._expect !== 'key1') return callback(new Error(\"Parser cannot parse input: unexpected token '}'\"));\n            this.push({name: 'endObject'});\n            this._parent = this._stack.pop();\n            this._expect = expected[this._parent];\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'colon':\n          patterns.colon.lastIndex = index;\n          match = patterns.colon.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error(\"Parser cannot parse input: expected ':'\"));\n            break main; // wait for more input\n          }\n          value = match[0];\n          value === ':' && (this._expect = 'value');\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'arrayStop':\n        case 'objectStop':\n          patterns.comma.lastIndex = index;\n          match = patterns.comma.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error(\"Parser cannot parse input: expected ','\"));\n            break main; // wait for more input\n          }\n          if (this._open_number) {\n            this._streamNumbers && this.push({name: 'endNumber'});\n            this._open_number = false;\n            if (this._packNumbers) {\n              this.push({name: 'numberValue', value: this._accumulator});\n              this._accumulator = '';\n            }\n          }\n          value = match[0];\n          if (value === ',') {\n            this._expect = this._expect === 'arrayStop' ? 'value' : 'key';\n          } else if (value === '}' || value === ']') {\n            if (value === '}' ? this._expect === 'arrayStop' : this._expect !== 'arrayStop') {\n              return callback(new Error(\"Parser cannot parse input: expected '\" + (this._expect === 'arrayStop' ? ']' : '}') + \"'\"));\n            }\n            this.push({name: value === '}' ? 'endObject' : 'endArray'});\n            this._parent = this._stack.pop();\n            this._expect = expected[this._parent];\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        // number chunks\n        case 'numberStart': // [0-9]\n          patterns.numberStart.lastIndex = index;\n          match = patterns.numberStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a starting digit'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = value === '0' ? 'numberFraction' : 'numberDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberDigit': // [0-9]*\n          patterns.numberDigit.lastIndex = index;\n          match = patterns.numberDigit.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a digit'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length) {\n              this._expect = 'numberFraction';\n              break;\n            }\n            if (this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'numberFraction': // [\\.eE]?\n          patterns.numberFraction.lastIndex = index;\n          match = patterns.numberFraction.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = value === '.' ? 'numberFracStart' : 'numberExpSign';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberFracStart': // [0-9]\n          patterns.numberFracStart.lastIndex = index;\n          match = patterns.numberFracStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a fractional part of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberFracDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberFracDigit': // [0-9]*\n          patterns.numberFracDigit.lastIndex = index;\n          match = patterns.numberFracDigit.exec(this._buffer);\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length) {\n              this._expect = 'numberExponent';\n              break;\n            }\n            if (this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'numberExponent': // [eE]?\n          patterns.numberExponent.lastIndex = index;\n          match = patterns.numberExponent.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            if (this._done) {\n              this._expect = 'done';\n              break;\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpSign';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpSign': // [-+]?\n          patterns.numberExpSign.lastIndex = index;\n          match = patterns.numberExpSign.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              this._expect = 'numberExpStart';\n              break;\n            }\n            if (this._done) return callback(new Error('Parser has expected an exponent value of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpStart';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpStart': // [0-9]\n          patterns.numberExpStart.lastIndex = index;\n          match = patterns.numberExpStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected an exponent part of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpDigit': // [0-9]*\n          patterns.numberExpDigit.lastIndex = index;\n          match = patterns.numberExpDigit.exec(this._buffer);\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length || this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'done':\n          patterns.ws.lastIndex = index;\n          match = patterns.ws.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              if (this._jsonStreaming) {\n                this._expect = 'value';\n                break;\n              }\n              return callback(new Error('Parser cannot parse input: unexpected characters'));\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (this._open_number) {\n            this._streamNumbers && this.push({name: 'endNumber'});\n            this._open_number = false;\n            if (this._packNumbers) {\n              this.push({name: 'numberValue', value: this._accumulator});\n              this._accumulator = '';\n            }\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n      }\n    }\n    !noSticky && (this._buffer = this._buffer.slice(index));\n    callback(null);\n  }\n}\nParser.parser = Parser.make;\nParser.make.Constructor = Parser;\n\nmodule.exports = Parser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getElectronBinding = void 0;\nconst getElectronBinding = (name) => {\n    if (process._linkedBinding) {\n        return process._linkedBinding('electron_common_' + name);\n    }\n    else if (process.electronBinding) {\n        return process.electronBinding(name);\n    }\n    else {\n        return null;\n    }\n};\nexports.getElectronBinding = getElectronBinding;\n","module.exports = require(\"events\");","'use strict';\n\nconst EventEmitter = require('events');\n\nconst startObject = Ctr =>\n  function () {\n    if (this.done) {\n      this.done = false;\n    } else {\n      this.stack.push(this.current, this.key);\n    }\n    this.current = new Ctr();\n    this.key = null;\n  };\n\nclass Assembler extends EventEmitter {\n  static connectTo(stream, options) {\n    return new Assembler(options).connectTo(stream);\n  }\n\n  constructor(options) {\n    super();\n    this.stack = [];\n    this.current = this.key = null;\n    this.done = true;\n    if (options) {\n      this.reviver = typeof options.reviver == 'function' && options.reviver;\n      if (this.reviver) {\n        this.stringValue = this._saveValue = this._saveValueWithReviver;\n      }\n      if (options.numberAsString) {\n        this.numberValue = this.stringValue;\n      }\n    }\n  }\n\n  connectTo(stream) {\n    stream.on('data', chunk => {\n      if (this[chunk.name]) {\n        this[chunk.name](chunk.value);\n        if (this.done) this.emit('done', this);\n      }\n    });\n    return this;\n  }\n\n  get depth() {\n    return (this.stack.length >> 1) + (this.done ? 0 : 1);\n  }\n\n  get path() {\n    const path = [];\n    for (let i = 0; i < this.stack.length; i += 2) {\n      const key = this.stack[i + 1];\n      path.push(key === null ? this.stack[i].length : key);\n    }\n    return path;\n  }\n\n  dropToLevel(level) {\n    if (level < this.depth) {\n      if (level) {\n        const index = (level - 1) << 1;\n        this.current = this.stack[index];\n        this.key = this.stack[index + 1];\n        this.stack.splice(index);\n      } else {\n        this.stack = [];\n        this.current = this.key = null;\n        this.done = true;\n      }\n    }\n    return this;\n  }\n\n  consume(chunk) {\n    this[chunk.name] && this[chunk.name](chunk.value);\n    return this;\n  }\n\n  keyValue(value) {\n    this.key = value;\n  }\n\n  //stringValue() - aliased below to _saveValue()\n\n  numberValue(value) {\n    this._saveValue(parseFloat(value));\n  }\n  nullValue() {\n    this._saveValue(null);\n  }\n  trueValue() {\n    this._saveValue(true);\n  }\n  falseValue() {\n    this._saveValue(false);\n  }\n\n  //startObject() - assigned below\n\n  endObject() {\n    if (this.stack.length) {\n      const value = this.current;\n      this.key = this.stack.pop();\n      this.current = this.stack.pop();\n      this._saveValue(value);\n    } else {\n      this.done = true;\n    }\n  }\n\n  //startArray() - assigned below\n  //endArray() - aliased below to endObject()\n\n  _saveValue(value) {\n    if (this.done) {\n      this.current = value;\n    } else {\n      if (this.current instanceof Array) {\n        this.current.push(value);\n      } else {\n        this.current[this.key] = value;\n        this.key = null;\n      }\n    }\n  }\n  _saveValueWithReviver(value) {\n    if (this.done) {\n      this.current = this.reviver('', value);\n    } else {\n      if (this.current instanceof Array) {\n        value = this.reviver('' + this.current.length, value);\n        this.current.push(value);\n        if (value === undefined) {\n          delete this.current[this.current.length - 1];\n        }\n      } else {\n        value = this.reviver(this.key, value);\n        if (value !== undefined) {\n          this.current[this.key] = value;\n        }\n        this.key = null;\n      }\n    }\n  }\n}\n\nAssembler.prototype.stringValue = Assembler.prototype._saveValue;\nAssembler.prototype.startObject = startObject(Object);\nAssembler.prototype.startArray = startObject(Array);\nAssembler.prototype.endArray = Assembler.prototype.endObject;\n\nmodule.exports = Assembler;\n","'use strict';\n\nconst {Transform} = require('stream');\nconst {StringDecoder} = require('string_decoder');\n\nclass Utf8Stream extends Transform {\n  constructor(options) {\n    super(Object.assign({}, options, {writableObjectMode: false}));\n    this._buffer = '';\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (typeof chunk == 'string') {\n      this._transform = this._transformString;\n    } else {\n      this._stringDecoder = new StringDecoder();\n      this._transform = this._transformBuffer;\n    }\n    this._transform(chunk, encoding, callback);\n  }\n\n  _transformBuffer(chunk, _, callback) {\n    this._buffer += this._stringDecoder.write(chunk);\n    this._processBuffer(callback);\n  }\n\n  _transformString(chunk, _, callback) {\n    this._buffer += chunk.toString();\n    this._processBuffer(callback);\n  }\n\n  _processBuffer(callback) {\n    if (this._buffer) {\n      this.push(this._buffer, 'utf8');\n      this._buffer = '';\n    }\n    callback(null);\n  }\n\n  _flushInput() {\n    // meant to be called from _flush()\n    if (this._stringDecoder) {\n      this._buffer += this._stringDecoder.end();\n    }\n  }\n\n  _flush(callback) {\n    this._flushInput();\n    this._processBuffer(callback);\n  }\n}\n\nmodule.exports = Utf8Stream;\n","module.exports = require('../dist/src/renderer')\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserialize = exports.serialize = exports.isSerializableObject = exports.isPromise = void 0;\nconst electron_1 = require(\"electron\");\nfunction isPromise(val) {\n    return (val &&\n        val.then &&\n        val.then instanceof Function &&\n        val.constructor &&\n        val.constructor.reject &&\n        val.constructor.reject instanceof Function &&\n        val.constructor.resolve &&\n        val.constructor.resolve instanceof Function);\n}\nexports.isPromise = isPromise;\nconst serializableTypes = [\n    Boolean,\n    Number,\n    String,\n    Date,\n    Error,\n    RegExp,\n    ArrayBuffer\n];\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm#Supported_types\nfunction isSerializableObject(value) {\n    return value === null || ArrayBuffer.isView(value) || serializableTypes.some(type => value instanceof type);\n}\nexports.isSerializableObject = isSerializableObject;\nconst objectMap = function (source, mapper) {\n    const sourceEntries = Object.entries(source);\n    const targetEntries = sourceEntries.map(([key, val]) => [key, mapper(val)]);\n    return Object.fromEntries(targetEntries);\n};\nfunction serializeNativeImage(image) {\n    const representations = [];\n    const scaleFactors = image.getScaleFactors();\n    // Use Buffer when there's only one representation for better perf.\n    // This avoids compressing to/from PNG where it's not necessary to\n    // ensure uniqueness of dataURLs (since there's only one).\n    if (scaleFactors.length === 1) {\n        const scaleFactor = scaleFactors[0];\n        const size = image.getSize(scaleFactor);\n        const buffer = image.toBitmap({ scaleFactor });\n        representations.push({ scaleFactor, size, buffer });\n    }\n    else {\n        // Construct from dataURLs to ensure that they are not lost in creation.\n        for (const scaleFactor of scaleFactors) {\n            const size = image.getSize(scaleFactor);\n            const dataURL = image.toDataURL({ scaleFactor });\n            representations.push({ scaleFactor, size, dataURL });\n        }\n    }\n    return { __ELECTRON_SERIALIZED_NativeImage__: true, representations };\n}\nfunction deserializeNativeImage(value) {\n    const image = electron_1.nativeImage.createEmpty();\n    // Use Buffer when there's only one representation for better perf.\n    // This avoids compressing to/from PNG where it's not necessary to\n    // ensure uniqueness of dataURLs (since there's only one).\n    if (value.representations.length === 1) {\n        const { buffer, size, scaleFactor } = value.representations[0];\n        const { width, height } = size;\n        image.addRepresentation({ buffer, scaleFactor, width, height });\n    }\n    else {\n        // Construct from dataURLs to ensure that they are not lost in creation.\n        for (const rep of value.representations) {\n            const { dataURL, size, scaleFactor } = rep;\n            const { width, height } = size;\n            image.addRepresentation({ dataURL, scaleFactor, width, height });\n        }\n    }\n    return image;\n}\nfunction serialize(value) {\n    if (value && value.constructor && value.constructor.name === 'NativeImage') {\n        return serializeNativeImage(value);\n    }\n    if (Array.isArray(value)) {\n        return value.map(serialize);\n    }\n    else if (isSerializableObject(value)) {\n        return value;\n    }\n    else if (value instanceof Object) {\n        return objectMap(value, serialize);\n    }\n    else {\n        return value;\n    }\n}\nexports.serialize = serialize;\nfunction deserialize(value) {\n    if (value && value.__ELECTRON_SERIALIZED_NativeImage__) {\n        return deserializeNativeImage(value);\n    }\n    else if (Array.isArray(value)) {\n        return value.map(deserialize);\n    }\n    else if (isSerializableObject(value)) {\n        return value;\n    }\n    else if (value instanceof Object) {\n        return objectMap(value, deserialize);\n    }\n    else {\n        return value;\n    }\n}\nexports.deserialize = deserialize;\n","\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.browserModuleNames = exports.commonModuleNames = void 0;\nconst get_electron_binding_1 = require(\"./get-electron-binding\");\nexports.commonModuleNames = [\n    'clipboard',\n    'nativeImage',\n    'shell',\n];\nexports.browserModuleNames = [\n    'app',\n    'autoUpdater',\n    'BaseWindow',\n    'BrowserView',\n    'BrowserWindow',\n    'contentTracing',\n    'crashReporter',\n    'dialog',\n    'globalShortcut',\n    'ipcMain',\n    'inAppPurchase',\n    'Menu',\n    'MenuItem',\n    'nativeTheme',\n    'net',\n    'netLog',\n    'MessageChannelMain',\n    'Notification',\n    'powerMonitor',\n    'powerSaveBlocker',\n    'protocol',\n    'pushNotifications',\n    'safeStorage',\n    'screen',\n    'session',\n    'ShareMenu',\n    'systemPreferences',\n    'TopLevelWindow',\n    'TouchBar',\n    'Tray',\n    'utilityProcess',\n    'View',\n    'webContents',\n    'WebContentsView',\n    'webFrameMain',\n].concat(exports.commonModuleNames);\nconst features = get_electron_binding_1.getElectronBinding('features');\nif (((_a = features === null || features === void 0 ? void 0 : features.isDesktopCapturerEnabled) === null || _a === void 0 ? void 0 : _a.call(features)) !== false) {\n    exports.browserModuleNames.push('desktopCapturer');\n}\nif (((_b = features === null || features === void 0 ? void 0 : features.isViewApiEnabled) === null || _b === void 0 ? void 0 : _b.call(features)) !== false) {\n    exports.browserModuleNames.push('ImageView');\n}\n","module.exports = require(\"fs\");","'use strict';\n\nconst {chain} = require('stream-chain');\n\nconst Parser = require('../Parser');\n\nconst withParser = (fn, options) =>\n  chain([new Parser(options), fn(options)], Object.assign({}, options, {writableObjectMode: false, readableObjectMode: true}));\n\nmodule.exports = withParser;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nif (process.type === 'browser')\n    throw new Error(`\"@electron/remote\" cannot be required in the browser process. Instead require(\"@electron/remote/main\").`);\n__exportStar(require(\"./remote\"), exports);\n","module.exports = require(\"path\");","module.exports = require(\"process\");","'use strict';\n\nconst {Readable, Writable, Duplex, Transform} = require('stream');\n\nconst none = Symbol.for('object-stream.none');\nconst finalSymbol = Symbol.for('object-stream.final');\nconst manySymbol = Symbol.for('object-stream.many');\n\nconst final = value => ({[finalSymbol]: value});\nconst many = values => ({[manySymbol]: values});\n\nconst isFinal = o => o && typeof o == 'object' && finalSymbol in o;\nconst isMany = o => o && typeof o == 'object' && manySymbol in o;\n\nconst getFinalValue = o => o[finalSymbol];\nconst getManyValues = o => o[manySymbol];\n\nconst runAsyncGenerator = async (gen, stream) => {\n  for (;;) {\n    let data = gen.next();\n    if (data && typeof data.then == 'function') {\n      data = await data;\n    }\n    if (data.done) break;\n    let value = data.value;\n    if (value && typeof value.then == 'function') {\n      value = await value;\n    }\n    Chain.sanitize(value, stream);\n  }\n};\n\nconst wrapFunction = fn =>\n  new Transform({\n    writableObjectMode: true,\n    readableObjectMode: true,\n    transform(chunk, encoding, callback) {\n      try {\n        const result = fn.call(this, chunk, encoding);\n        if (result && typeof result.then == 'function') {\n          // thenable\n          result.then(\n            result => (Chain.sanitize(result, this), callback(null)),\n            error => callback(error)\n          );\n          return;\n        }\n        if (result && typeof result.next == 'function') {\n          // generator\n          runAsyncGenerator(result, this).then(\n            () => callback(null),\n            error => callback(error)\n          );\n          return;\n        }\n        Chain.sanitize(result, this);\n        callback(null);\n      } catch (error) {\n        callback(error);\n      }\n    }\n  });\n\nconst wrapArray = fns =>\n  new Transform({\n    writableObjectMode: true,\n    readableObjectMode: true,\n    transform(chunk, encoding, callback) {\n      try {\n        let value = chunk;\n        for (let i = 0; i < fns.length; ++i) {\n          const result = fns[i].call(this, value, encoding);\n          if (result === Chain.none) {\n            callback(null);\n            return;\n          }\n          if (Chain.isFinal(result)) {\n            value = Chain.getFinalValue(result);\n            break;\n          }\n          value = result;\n        }\n        Chain.sanitize(value, this);\n        callback(null);\n      } catch (error) {\n        callback(error);\n      }\n    }\n  });\n\n// is*NodeStream functions taken from https://github.com/nodejs/node/blob/master/lib/internal/streams/utils.js\nconst isReadableNodeStream = obj =>\n  obj &&\n  typeof obj.pipe === 'function' &&\n  typeof obj.on === 'function' &&\n  (!obj._writableState || (typeof obj._readableState === 'object' ? obj._readableState.readable : null) !== false) && // Duplex\n  (!obj._writableState || obj._readableState); // Writable has .pipe.\n\nconst isWritableNodeStream = obj =>\n  obj &&\n  typeof obj.write === 'function' &&\n  typeof obj.on === 'function' &&\n  (!obj._readableState || (typeof obj._writableState === 'object' ? obj._writableState.writable : null) !== false); // Duplex\n\nconst isDuplexNodeStream = obj =>\n  obj && typeof obj.pipe === 'function' && obj._readableState && typeof obj.on === 'function' && typeof obj.write === 'function';\n\nclass Chain extends Duplex {\n  constructor(fns, options) {\n    super(options || {writableObjectMode: true, readableObjectMode: true});\n\n    if (!(fns instanceof Array) || !fns.length) {\n      throw Error(\"Chain's argument should be a non-empty array.\");\n    }\n\n    this.streams = fns\n      .filter(fn => fn)\n      .map((fn, index, fns) => {\n        if (typeof fn === 'function' || fn instanceof Array) return Chain.convertToTransform(fn);\n        if (isDuplexNodeStream(fn) || (!index && isReadableNodeStream(fn)) || (index === fns.length - 1 && isWritableNodeStream(fn))) {\n          return fn;\n        }\n        throw Error('Arguments should be functions, arrays or streams.');\n      })\n      .filter(s => s);\n    this.input = this.streams[0];\n    this.output = this.streams.reduce((output, stream) => (output && output.pipe(stream)) || stream);\n\n    if (!isWritableNodeStream(this.input)) {\n      this._write = (_1, _2, callback) => callback(null);\n      this._final = callback => callback(null); // unavailable in Node 6\n      this.input.on('end', () => this.end());\n    }\n\n    if (isReadableNodeStream(this.output)) {\n      this.output.on('data', chunk => !this.push(chunk) && this.output.pause());\n      this.output.on('end', () => this.push(null));\n    } else {\n      this._read = () => {}; // nop\n      this.resume();\n      this.output.on('finish', () => this.push(null));\n    }\n\n    // connect events\n    if (!options || !options.skipEvents) {\n      this.streams.forEach(stream => stream.on('error', error => this.emit('error', error)));\n    }\n  }\n  _write(chunk, encoding, callback) {\n    let error = null;\n    try {\n      this.input.write(chunk, encoding, e => callback(e || error));\n    } catch (e) {\n      error = e;\n    }\n  }\n  _final(callback) {\n    let error = null;\n    try {\n      this.input.end(null, null, e => callback(e || error));\n    } catch (e) {\n      error = e;\n    }\n  }\n  _read() {\n    this.output.resume();\n  }\n  static make(fns, options) {\n    return new Chain(fns, options);\n  }\n  static sanitize(result, stream) {\n    if (Chain.isFinal(result)) {\n      result = Chain.getFinalValue(result);\n    } else if (Chain.isMany(result)) {\n      result = Chain.getManyValues(result);\n    }\n    if (result !== undefined && result !== null && result !== Chain.none) {\n      if (result instanceof Array) {\n        result.forEach(value => value !== undefined && value !== null && stream.push(value));\n      } else {\n        stream.push(result);\n      }\n    }\n  }\n  static convertToTransform(fn) {\n    if (typeof fn === 'function') return wrapFunction(fn);\n    if (fn instanceof Array) return fn.length ? wrapArray(fn) : null;\n    return null;\n  }\n}\n\nChain.none = none;\nChain.final = final;\nChain.isFinal = isFinal;\nChain.getFinalValue = getFinalValue;\nChain.many = many;\nChain.isMany = isMany;\nChain.getManyValues = getManyValues;\n\nChain.chain = Chain.make;\nChain.make.Constructor = Chain;\n\nmodule.exports = Chain;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Vec {\n    static isBlank(arr) { return arr == null || arr.length == 0; }\n    static notBlank(arr) { return arr != null && arr.length > 0; }\n    static safeArray(arr) { return arr == null ? [] : arr; }\n    static len(arr) { return arr == null ? 0 : arr.length; }\n    static arrayLength(arr) { return arr == null ? 0 : arr.length; }\n    static anyTrue(arr) {\n        if (arr == null)\n            return false;\n        for (let v of arr)\n            if (v)\n                return true;\n        return false;\n    }\n    static allTrue(arr) {\n        if (arr == null)\n            return true;\n        for (let v of arr)\n            if (!v)\n                return false;\n        return true;\n    }\n    static anyFalse(arr) {\n        if (arr == null)\n            return false;\n        for (let v of arr)\n            if (!v)\n                return true;\n        return false;\n    }\n    static allFalse(arr) {\n        if (arr == null)\n            return true;\n        for (let v of arr)\n            if (v)\n                return false;\n        return true;\n    }\n    static iterAnyTrue(arr, callback) {\n        for (let v of arr)\n            if (callback(v))\n                return true;\n        return false;\n    }\n    static iterAllTrue(arr, callback) {\n        for (let v of arr)\n            if (!callback(v))\n                return false;\n        return true;\n    }\n    static iterAnyFalse(arr, callback) {\n        for (let v of arr)\n            if (!callback(v))\n                return true;\n        return false;\n    }\n    static iterAllFalse(arr, callback) {\n        for (let v of arr)\n            if (callback(v))\n                return false;\n        return true;\n    }\n    static swap(arr, idx1, idx2) {\n        let v = arr[idx1];\n        arr[idx1] = arr[idx2];\n        arr[idx2] = v;\n    }\n    static duplicate(arr) {\n        return arr == null ? [] : arr.slice(0);\n    }\n    static append(arr, item) {\n        if (arr == null || arr.length == 0)\n            return [item];\n        arr = arr.slice(0);\n        arr.push(item);\n        return arr;\n    }\n    static prepend(arr, item) {\n        if (arr == null || arr.length == 0)\n            return [item];\n        arr = arr.slice(0);\n        arr.unshift(item);\n        return arr;\n    }\n    static concat(arr1, arr2) {\n        if (arr1 == null && arr2 == null)\n            return [];\n        if (arr1 == null)\n            return arr2.slice(0);\n        if (arr2 == null)\n            return arr1.slice(0);\n        return arr1.concat(arr2);\n    }\n    static remove(arr, idx) {\n        arr = arr.slice(0);\n        arr.splice(idx, 1);\n        return arr;\n    }\n    static flatten(mtx) {\n        let ret = [];\n        for (let vec of mtx)\n            ret.push(...vec);\n        return ret;\n    }\n    static transpose(mtx) {\n        let sz1 = mtx.length, sz2 = mtx[0].length;\n        let ret = Vec.anyArray(null, sz2);\n        for (let j = 0; j < sz2; j++) {\n            ret[j] = Vec.anyArray(null, sz1);\n            for (let i = 0; i < sz1; i++)\n                ret[j][i] = mtx[i][j];\n        }\n        return ret;\n    }\n    static equals(arr1, arr2) {\n        if (arr1 == null && arr2 == null)\n            return true;\n        if (arr1 == null || arr2 == null)\n            return false;\n        if (arr1.length != arr2.length)\n            return false;\n        for (let n = 0; n < arr1.length; n++)\n            if (arr1[n] != arr2[n])\n                return false;\n        return true;\n    }\n    static equivalent(arr1, arr2) {\n        const len1 = arr1 == null ? 0 : arr1.length, len2 = arr2 == null ? 0 : arr2.length;\n        if (len1 != len2)\n            return false;\n        for (let n = 0; n < len1; n++)\n            if (arr1[n] != arr2[n])\n                return false;\n        return true;\n    }\n    static compareTo(arr1, arr2) {\n        const sz = Math.max(arr1.length, arr2.length);\n        for (let n = 0; n < sz; n++) {\n            if (arr1[n] < arr2[n])\n                return -1;\n            if (arr1[n] > arr2[n])\n                return 1;\n        }\n        return 0;\n    }\n    static booleanArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static numberArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static stringArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static anyArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static genericArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static genericBlankArrays(sz) {\n        let arr = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            arr[n] = [];\n        return arr;\n    }\n    static funcArray(sz, func) {\n        let arr = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            arr[n] = func(n);\n        return arr;\n    }\n    static first(arr) { return arr == null || arr.length == 0 ? null : arr[0]; }\n    static last(arr) { return arr == null || arr.length == 0 ? null : arr[arr.length - 1]; }\n    static min(arr) {\n        if (arr == null || arr.length == 0)\n            return Number.MAX_VALUE;\n        let v = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            v = Math.min(v, arr[n]);\n        return v;\n    }\n    static max(arr) {\n        if (arr == null || arr.length == 0)\n            return Number.MIN_VALUE;\n        let v = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            v = Math.max(v, arr[n]);\n        return v;\n    }\n    static idxMin(arr) {\n        if (arr == null || arr.length == 0)\n            return -1;\n        let idx = 0;\n        for (let n = 1; n < arr.length; n++)\n            if (arr[n] < arr[idx])\n                idx = n;\n        return idx;\n    }\n    static idxMax(arr) {\n        if (arr == null || arr.length == 0)\n            return -1;\n        let idx = 0;\n        for (let n = 1; n < arr.length; n++)\n            if (arr[n] > arr[idx])\n                idx = n;\n        return idx;\n    }\n    static range(arr) {\n        if (arr == null || arr.length == 0)\n            return 0;\n        let lo = arr[0], hi = arr[0];\n        for (let n = 1; n < arr.length; n++) {\n            if (arr[n] < lo)\n                lo = arr[n];\n            if (arr[n] > hi)\n                hi = arr[n];\n        }\n        return hi - lo;\n    }\n    static reverse(arr) {\n        let ret = [];\n        for (let n = arr.length - 1; n >= 0; n--)\n            ret.push(arr[n]);\n        return ret;\n    }\n    static identity0(sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n;\n        return ret;\n    }\n    static identity1(sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n + 1;\n        return ret;\n    }\n    static identityN(start, sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n + start;\n        return ret;\n    }\n    static notMask(mask) {\n        let ret = new Array(mask.length);\n        for (let n = mask.length - 1; n >= 0; n--)\n            ret[n] = !mask[n];\n        return ret;\n    }\n    static idxGet(arr, idx) {\n        let ret = [];\n        for (let n = 0; n < idx.length; n++)\n            ret.push(arr[idx[n]]);\n        return ret;\n    }\n    static maskCount(mask) {\n        if (!mask)\n            return 0;\n        let c = 0;\n        for (let n = mask.length - 1; n >= 0; n--)\n            if (mask[n])\n                c++;\n        return c;\n    }\n    static maskIdx(mask) {\n        let idx = [];\n        for (let n = 0; n < mask.length; n++)\n            if (mask[n])\n                idx.push(n);\n        return idx;\n    }\n    static idxMask(idx, sz) {\n        let mask = Vec.booleanArray(false, sz);\n        for (let n of idx)\n            mask[n] = true;\n        return mask;\n    }\n    static maskMap(mask) {\n        let ret = [];\n        for (let n = 0, pos = 0; n < mask.length; n++)\n            ret.push(mask[n] ? pos++ : -1);\n        return ret;\n    }\n    static maskGet(arr, mask) {\n        let ret = [];\n        for (let n = 0, p = 0; n < arr.length; n++)\n            if (mask[n])\n                ret.push(arr[n]);\n        return ret;\n    }\n    static maskEqual(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] == arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] == val);\n        }\n        return ret;\n    }\n    static sum(arr) {\n        if (arr == null || arr.length == 0)\n            return 0;\n        let t = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            t += arr[n];\n        return t;\n    }\n    static add(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] + arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] + val);\n        }\n        return ret;\n    }\n    static sub(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] - arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] - val);\n        }\n        return ret;\n    }\n    static mul(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] * arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] * val);\n        }\n        return ret;\n    }\n    static neg(arr) {\n        let ret = arr.slice(0);\n        for (let n = ret.length - 1; n >= 0; n--)\n            ret[n] *= -1;\n        return ret;\n    }\n    static setTo(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] = val; }\n    static addTo(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] += val; }\n    static mulBy(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] *= val; }\n    static setToArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] = val[n]; }\n    static addToArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] += val[n]; }\n    static subFromArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] -= val[n]; }\n    static mulByArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] *= val[n]; }\n    static divByArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] /= val[n]; }\n    static idxSort(arr) {\n        let idx = new Array(arr.length);\n        for (let n = 0; n < arr.length; n++)\n            idx[n] = n;\n        idx.sort((a, b) => arr[a] < arr[b] ? -1 : arr[a] > arr[b] ? 1 : 0);\n        return idx;\n    }\n    static sort(arr) {\n        arr.sort((v1, v2) => v1 - v2);\n    }\n    static sorted(arr) {\n        arr = arr.slice(0);\n        this.sort(arr);\n        return arr;\n    }\n    static sortedUnique(arr) {\n        if (arr == null || arr.length == 0)\n            return [];\n        let unique = Vec.uniqueUnstable(arr);\n        if (typeof arr[0] == 'number')\n            this.sort(unique);\n        else\n            unique.sort();\n        return unique;\n    }\n    static uniqueUnstable(arr) {\n        return Array.from(new Set(arr));\n    }\n    static uniqueStable(arr) {\n        let set = new Set(arr), ret = [];\n        for (let v of arr)\n            if (set.has(v)) {\n                ret.push(v);\n                set.delete(v);\n            }\n        return ret;\n    }\n    static maskUnique(arr) {\n        let set = new Set(arr), ret = this.booleanArray(false, arr.length);\n        for (let n = 0; n < arr.length; n++)\n            if (set.has(arr[n])) {\n                ret[n] = true;\n                set.delete(arr[n]);\n            }\n        return ret;\n    }\n    static idxUnique(arr) {\n        let set = new Set(arr), ret = [];\n        for (let n = 0; n < arr.length; n++)\n            if (set.has(arr[n])) {\n                ret.push(n);\n                set.delete(arr[n]);\n            }\n        return ret;\n    }\n    static exclude(arr, excl) {\n        const sz = Vec.len(arr);\n        if (sz == 0)\n            return [];\n        let mask = new Array(sz);\n        let count = 0;\n        for (let n = 0; n < arr.length; n++) {\n            mask[n] = excl.indexOf(arr[n]) < 0;\n            if (mask[n])\n                count++;\n        }\n        if (count == sz)\n            return arr;\n        return Vec.maskGet(arr, mask);\n    }\n}\nclass Permutation {\n    static parityPerms(idx) {\n        let v = Vec.booleanArray(false, idx.length);\n        let p = 0;\n        for (let i = idx.length - 1; i >= 0; i--) {\n            if (v[i])\n                p++;\n            else {\n                let j = i;\n                do {\n                    j = idx[j];\n                    v[j] = true;\n                } while (j != i);\n            }\n        }\n        return p;\n    }\n    static parityIdentity(idx) {\n        return this.parityPerms(idx) & 1;\n    }\n    static parityOrder(src) {\n        if (src.length <= 1)\n            return 0;\n        else if (src.length == 2)\n            return src[0] < src[1] ? 0 : 1;\n        else if (src.length == 3) {\n            let p = 1;\n            if (src[0] < src[1])\n                p++;\n            if (src[0] < src[2])\n                p++;\n            if (src[1] < src[2])\n                p++;\n            return p & 1;\n        }\n        else if (src.length == 4) {\n            let p = 0;\n            if (src[0] < src[1])\n                p++;\n            if (src[0] < src[2])\n                p++;\n            if (src[0] < src[3])\n                p++;\n            if (src[1] < src[2])\n                p++;\n            if (src[1] < src[3])\n                p++;\n            if (src[2] < src[3])\n                p++;\n            return p & 1;\n        }\n        let idx = [], sorted = src.slice(0);\n        sorted.sort();\n        for (let n = 0; n < src.length; n++)\n            idx.push(sorted.indexOf(src[n]));\n        return this.parityIdentity(idx);\n    }\n    static smallPermutation(sz) {\n        if (sz == 1)\n            return this.PERM1;\n        else if (sz == 2)\n            return this.PERM2;\n        else if (sz == 3)\n            return this.PERM3;\n        else if (sz == 4)\n            return this.PERM4;\n        else\n            return null;\n    }\n    static allPermutations(sz) {\n        if (sz <= this.SMALL_PERMS)\n            return this.smallPermutation(sz);\n        while (this.PERM_CACHE.length < this.MAX_CACHE - this.SMALL_PERMS)\n            this.PERM_CACHE.push(null);\n        if (sz < this.MAX_CACHE && this.PERM_CACHE[sz - this.SMALL_PERMS] != null)\n            return this.PERM_CACHE[sz - this.SMALL_PERMS];\n        let nperms = 1;\n        for (let n = 2; n <= sz; n++)\n            nperms *= n;\n        let perms = [];\n        let idx = Vec.identity0(sz);\n        perms.push(idx.slice(0));\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n < nperms; n++) {\n            nonunique: while (idx[0] < sz) {\n                idx[sz - 1]++;\n                for (let i = sz - 1; i > 0; i--) {\n                    if (idx[i] < sz)\n                        break;\n                    idx[i] = 0;\n                    idx[i - 1]++;\n                }\n                Vec.setTo(mask, false);\n                for (let i of idx) {\n                    if (mask[i])\n                        continue nonunique;\n                    mask[i] = true;\n                }\n                perms[n] = idx.slice(0);\n                break;\n            }\n        }\n        if (sz < this.MAX_CACHE)\n            this.PERM_CACHE[sz - this.SMALL_PERMS] = perms;\n        return perms;\n    }\n}\nPermutation.PERM1 = [[0]];\nPermutation.PERM2 = [[0, 1], [1, 0]];\nPermutation.PERM3 = [[0, 1, 2], [0, 2, 1], [1, 0, 2], [1, 2, 0], [2, 0, 1], [2, 1, 0]];\nPermutation.PERM4 = [\n    [0, 1, 2, 3], [0, 1, 3, 2], [0, 2, 1, 3], [0, 2, 3, 1], [0, 3, 1, 2], [0, 3, 2, 1],\n    [1, 0, 2, 3], [1, 0, 3, 2], [1, 2, 0, 3], [1, 2, 3, 0], [1, 3, 0, 2], [1, 3, 2, 0],\n    [2, 0, 1, 3], [2, 0, 3, 1], [2, 1, 0, 3], [2, 1, 3, 0], [2, 3, 0, 1], [2, 3, 1, 0],\n    [3, 0, 1, 2], [3, 0, 2, 1], [3, 1, 0, 2], [3, 1, 2, 0], [3, 2, 0, 1], [3, 2, 1, 0]\n];\nPermutation.SMALL_PERMS = 4;\nPermutation.MAX_CACHE = 8;\nPermutation.PERM_CACHE = [];\nexport { Permutation };\n//# sourceMappingURL=Vec.js.map","class Chemistry {\n}\nChemistry.ELEMENTS = [\n    null,\n    'H', 'He',\n    'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Ne',\n    'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'Ar',\n    'K', 'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr',\n    'Rb', 'Sr', 'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn', 'Sb', 'Te', 'I', 'Xe',\n    'Cs', 'Ba',\n    'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb',\n    'Lu', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg', 'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn',\n    'Fr', 'Ra',\n    'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No',\n    'Lr', 'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds', 'Rg', 'Cn'\n];\nChemistry.ELEMENT_GROUPS = [\n    0,\n    1, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_ROWS = [\n    0,\n    1, 1,\n    2, 2, 2, 2, 2, 2, 2, 2,\n    3, 3, 3, 3, 3, 3, 3, 3,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n    6, 6,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    7, 7,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7\n];\nChemistry.ELEMENT_BLOCKS = [\n    0,\n    1, 2,\n    1, 1, 2, 2, 2, 2, 2, 2,\n    1, 1, 2, 2, 2, 2, 2, 2,\n    1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3\n];\nChemistry.ELEMENT_VALENCE = [\n    0,\n    1, 2,\n    1, 2, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 2,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_BONDING = [\n    0,\n    1, 0,\n    1, 2, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 2,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_SHELL = [\n    0,\n    2, 2,\n    8, 8, 8, 8, 8, 8, 8, 8,\n    8, 8, 8, 8, 8, 8, 8, 8,\n    8, 8, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 8, 8, 8, 8, 8, 8,\n    8, 8, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 8, 8, 8, 8, 8, 8,\n    8, 8,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    8, 8,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18\n];\nChemistry.NATURAL_ATOMIC_WEIGHTS = [\n    0, 1.00794, 4.002602, 6.941, 9.012182, 10.811, 12.0107, 14.0067, 15.9994, 18.9984032, 20.1797,\n    22.989770, 24.3050, 26.981538, 28.0855, 30.973761, 32.065, 35.453, 39.948, 39.0983, 40.078,\n    44.955910, 47.867, 50.9415, 51.9961, 54.938049, 55.845, 58.933200, 58.6934, 63.546, 65.409,\n    69.723, 72.64, 74.92160, 78.96, 79.904, 83.798, 85.4678, 87.62, 88.90585, 91.224, 92.90638,\n    95.94, 98, 101.07, 102.90550, 106.42, 107.8682, 112.411, 114.818, 118.710, 121.760, 127.60,\n    126.90447, 131.293, 132.90545, 137.327, 138.9055, 140.116, 140.90765, 144.24, 145, 150.36,\n    151.964, 157.25, 158.92534, 162.500, 164.93032, 167.259, 168.93421, 173.04, 174.967, 178.49,\n    180.9479, 183.84, 186.207, 190.23, 192.217, 195.078, 196.96655, 200.59, 204.3833, 207.2, 208.98038,\n    209, 210, 222, 223, 226, 227, 230.0331266, 231.03588, 233.039628, 237, 244, 243, 247, 247, 251, 252, 257,\n    258, 259, 262, 261, 262, 266, 264, 277, 268, 271, 272, 285\n];\nChemistry.ELEMENT_H = 1;\nChemistry.ELEMENT_He = 2;\nChemistry.ELEMENT_Li = 3;\nChemistry.ELEMENT_Be = 4;\nChemistry.ELEMENT_B = 5;\nChemistry.ELEMENT_C = 6;\nChemistry.ELEMENT_N = 7;\nChemistry.ELEMENT_O = 8;\nChemistry.ELEMENT_F = 9;\nChemistry.ELEMENT_Ne = 10;\nChemistry.ELEMENT_Na = 11;\nChemistry.ELEMENT_Mg = 12;\nChemistry.ELEMENT_Al = 13;\nChemistry.ELEMENT_Si = 14;\nChemistry.ELEMENT_P = 15;\nChemistry.ELEMENT_S = 16;\nChemistry.ELEMENT_Cl = 17;\nChemistry.ELEMENT_Ar = 18;\nChemistry.ELEMENT_K = 19;\nChemistry.ELEMENT_Ca = 20;\nChemistry.ELEMENT_Sc = 21;\nChemistry.ELEMENT_Ti = 22;\nChemistry.ELEMENT_V = 23;\nChemistry.ELEMENT_Cr = 24;\nChemistry.ELEMENT_Mn = 25;\nChemistry.ELEMENT_Fe = 26;\nChemistry.ELEMENT_Co = 27;\nChemistry.ELEMENT_Ni = 28;\nChemistry.ELEMENT_Cu = 29;\nChemistry.ELEMENT_Zn = 30;\nChemistry.ELEMENT_Ga = 31;\nChemistry.ELEMENT_Ge = 32;\nChemistry.ELEMENT_As = 33;\nChemistry.ELEMENT_Se = 34;\nChemistry.ELEMENT_Br = 35;\nChemistry.ELEMENT_Kr = 36;\nChemistry.ELEMENT_Rb = 37;\nChemistry.ELEMENT_Sr = 38;\nChemistry.ELEMENT_Y = 39;\nChemistry.ELEMENT_Zr = 40;\nChemistry.ELEMENT_Nb = 41;\nChemistry.ELEMENT_Mo = 42;\nChemistry.ELEMENT_Tc = 43;\nChemistry.ELEMENT_Ru = 44;\nChemistry.ELEMENT_Rh = 45;\nChemistry.ELEMENT_Pd = 46;\nChemistry.ELEMENT_Ag = 47;\nChemistry.ELEMENT_Cd = 48;\nChemistry.ELEMENT_In = 49;\nChemistry.ELEMENT_Sn = 50;\nChemistry.ELEMENT_Sb = 51;\nChemistry.ELEMENT_Te = 52;\nChemistry.ELEMENT_I = 53;\nChemistry.ELEMENT_Xe = 54;\nChemistry.ELEMENT_Cs = 55;\nChemistry.ELEMENT_Ba = 56;\nChemistry.ELEMENT_La = 57;\nChemistry.ELEMENT_Ce = 58;\nChemistry.ELEMENT_Pr = 59;\nChemistry.ELEMENT_Nd = 60;\nChemistry.ELEMENT_Pm = 61;\nChemistry.ELEMENT_Sm = 62;\nChemistry.ELEMENT_Eu = 63;\nChemistry.ELEMENT_Gd = 64;\nChemistry.ELEMENT_Tb = 65;\nChemistry.ELEMENT_Dy = 66;\nChemistry.ELEMENT_Ho = 67;\nChemistry.ELEMENT_Er = 68;\nChemistry.ELEMENT_Tm = 69;\nChemistry.ELEMENT_Yb = 70;\nChemistry.ELEMENT_Lu = 71;\nChemistry.ELEMENT_Hf = 72;\nChemistry.ELEMENT_Ta = 73;\nChemistry.ELEMENT_W = 74;\nChemistry.ELEMENT_Re = 75;\nChemistry.ELEMENT_Os = 76;\nChemistry.ELEMENT_Ir = 77;\nChemistry.ELEMENT_Pt = 78;\nChemistry.ELEMENT_Au = 79;\nChemistry.ELEMENT_Hg = 80;\nChemistry.ELEMENT_Tl = 81;\nChemistry.ELEMENT_Pb = 82;\nChemistry.ELEMENT_Bi = 83;\nChemistry.ELEMENT_Po = 84;\nChemistry.ELEMENT_At = 85;\nChemistry.ELEMENT_Rn = 86;\nChemistry.ELEMENT_Fr = 87;\nChemistry.ELEMENT_Ra = 88;\nChemistry.ELEMENT_Ac = 89;\nChemistry.ELEMENT_Th = 90;\nChemistry.ELEMENT_Pa = 91;\nChemistry.ELEMENT_U = 92;\nChemistry.ELEMENT_Np = 93;\nChemistry.ELEMENT_Pu = 94;\nChemistry.ELEMENT_Am = 95;\nChemistry.ELEMENT_Cm = 96;\nChemistry.ELEMENT_Bk = 97;\nChemistry.ELEMENT_Cf = 98;\nChemistry.ELEMENT_Es = 99;\nChemistry.ELEMENT_Fm = 100;\nChemistry.ELEMENT_Md = 101;\nChemistry.ELEMENT_No = 102;\nChemistry.ELEMENT_Lr = 103;\nChemistry.ELEMENT_Rf = 104;\nChemistry.ELEMENT_Db = 105;\nChemistry.ELEMENT_Sg = 106;\nChemistry.ELEMENT_Bh = 107;\nChemistry.ELEMENT_Hs = 108;\nChemistry.ELEMENT_Mt = 109;\nChemistry.ELEMENT_Ds = 110;\nChemistry.ELEMENT_Rg = 111;\nChemistry.ELEMENT_Cn = 112;\nexport { Chemistry };\n//# sourceMappingURL=Chemistry.js.map","import { Vec } from './Vec';\nexport class Matrix {\n    constructor(m, n, s = 0) {\n        this.m = m;\n        this.n = n;\n        if (m == 0)\n            return;\n        this.A = new Array(m);\n        for (let i = 0; i < m; i++)\n            this.A[i] = Vec.numberArray(s, n);\n    }\n    static fromArray(A) {\n        let mtx = new Matrix(0, 0);\n        mtx.A = A;\n        mtx.m = A.length;\n        mtx.n = A[0].length;\n        return mtx;\n    }\n    clone() {\n        const { A, m, n } = this;\n        let mtx = new Matrix(m, n);\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                mtx.A[i][j] = A[i][j];\n        return mtx;\n    }\n    get numRows() { return this.m; }\n    get numCols() { return this.n; }\n    get(i, j) { return this.A[i][j]; }\n    set(i, j, v) { this.A[i][j] = v; }\n    transpose() {\n        const { A, m, n } = this;\n        let X = new Matrix(n, m);\n        const C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[j][i] = A[i][j];\n        return X;\n    }\n    norm1() {\n        const { A, m, n } = this;\n        let f = 0;\n        for (let j = 0; j < n; j++) {\n            let s = 0;\n            for (let i = 0; i < m; i++)\n                s += Math.abs(A[i][j]);\n            f = Math.max(f, s);\n        }\n        return f;\n    }\n    normInf() {\n        const { A, m, n } = this;\n        let f = 0;\n        for (let i = 0; i < m; i++) {\n            let s = 0;\n            for (let j = 0; j < n; j++)\n                s += Math.abs(A[i][j]);\n            f = Math.max(f, s);\n        }\n        return f;\n    }\n    uminus() {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = -A[i][j];\n        return X;\n    }\n    plus(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] + B.A[i][j];\n        return X;\n    }\n    plusEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] + B.A[i][j];\n        return this;\n    }\n    minus(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] - B.A[i][j];\n        return X;\n    }\n    minusEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] - B.A[i][j];\n        return this;\n    }\n    arrayTimes(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] * B.A[i][j];\n        return X;\n    }\n    arrayTimesEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] * B.A[i][j];\n        return this;\n    }\n    arrayRightDivide(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] / B.A[i][j];\n        return X;\n    }\n    arrayRightDivideEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] / B.A[i][j];\n        return this;\n    }\n    arrayLeftDivide(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = B.A[i][j] / A[i][j];\n        return X;\n    }\n    arrayLeftDivideEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = B.A[i][j] / A[i][j];\n        return this;\n    }\n    scalarTimes(s) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = s * A[i][j];\n        return X;\n    }\n    scalarTimesEquals(s) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = s * A[i][j];\n        return this;\n    }\n    times(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, B.n);\n        let C = X.A, Bcolj = new Array(n);\n        for (let j = 0; j < B.n; j++) {\n            for (let k = 0; k < n; k++)\n                Bcolj[k] = B.A[k][j];\n            for (let i = 0; i < m; i++) {\n                let Arowi = A[i];\n                let s = 0;\n                for (let k = 0; k < n; k++)\n                    s += Arowi[k] * Bcolj[k];\n                C[i][j] = s;\n            }\n        }\n        return X;\n    }\n    rank() {\n        return new SingularValueDecomposition(this).rank();\n    }\n    cond() {\n        return new SingularValueDecomposition(this).cond();\n    }\n    trace() {\n        const { A, m, n } = this;\n        let t = 0;\n        for (let i = 0; i < Math.min(m, n); i++) {\n            t += A[i][i];\n        }\n        return t;\n    }\n    static identity(m, n) {\n        let mtx = new Matrix(m, n);\n        let A = mtx.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = (i == j ? 1.0 : 0.0);\n        return mtx;\n    }\n    toString() {\n        let lines = ['['];\n        for (let row of this.A)\n            lines.push(JSON.stringify(row));\n        lines.push(']');\n        return lines.join('\\n');\n    }\n}\nexport class SingularValueDecomposition {\n    constructor(mtx) {\n        let A = mtx.A;\n        let m = this.m = mtx.m;\n        let n = this.n = mtx.n;\n        let nu = Math.min(m, n);\n        let s = this.s = new Array(Math.min(m + 1, n));\n        let U = this.U = new Array(m);\n        let V = this.V = new Array(n);\n        for (let i = 0; i < m; i++)\n            U[i] = Vec.numberArray(0, nu);\n        for (let j = 0; j < n; j++)\n            V[j] = Vec.numberArray(0, n);\n        let e = new Array(n);\n        let work = new Array(m);\n        let wantu = true, wantv = true;\n        let nct = Math.min(m - 1, n);\n        let nrt = Math.max(0, Math.min(n - 2, m));\n        for (let k = 0; k < Math.max(nct, nrt); k++) {\n            if (k < nct) {\n                s[k] = 0;\n                for (let i = k; i < m; i++)\n                    s[k] = SingularValueDecomposition.hypot(s[k], A[i][k]);\n                if (s[k] != 0.0) {\n                    if (A[k][k] < 0.0)\n                        s[k] = -s[k];\n                    for (let i = k; i < m; i++)\n                        A[i][k] /= s[k];\n                    A[k][k] += 1.0;\n                }\n                s[k] = -s[k];\n            }\n            for (let j = k + 1; j < n; j++) {\n                if ((k < nct) && (s[k] != 0.0)) {\n                    let t = 0;\n                    for (let i = k; i < m; i++)\n                        t += A[i][k] * A[i][j];\n                    t = -t / A[k][k];\n                    for (let i = k; i < m; i++)\n                        A[i][j] += t * A[i][k];\n                }\n                e[j] = A[k][j];\n            }\n            if (wantu && (k < nct)) {\n                for (let i = k; i < m; i++)\n                    U[i][k] = A[i][k];\n            }\n            if (k < nrt) {\n                e[k] = 0;\n                for (let i = k + 1; i < n; i++)\n                    e[k] = SingularValueDecomposition.hypot(e[k], e[i]);\n                if (e[k] != 0.0) {\n                    if (e[k + 1] < 0.0)\n                        e[k] = -e[k];\n                    for (let i = k + 1; i < n; i++)\n                        e[i] /= e[k];\n                    e[k + 1] += 1.0;\n                }\n                e[k] = -e[k];\n                if ((k + 1 < m) && (e[k] != 0.0)) {\n                    for (let i = k + 1; i < m; i++)\n                        work[i] = 0.0;\n                    for (let j = k + 1; j < n; j++)\n                        for (let i = k + 1; i < m; i++)\n                            work[i] += e[j] * A[i][j];\n                    for (let j = k + 1; j < n; j++) {\n                        let t = -e[j] / e[k + 1];\n                        for (let i = k + 1; i < m; i++)\n                            A[i][j] += t * work[i];\n                    }\n                }\n                if (wantv) {\n                    for (let i = k + 1; i < n; i++)\n                        V[i][k] = e[i];\n                }\n            }\n        }\n        let p = Math.min(n, m + 1);\n        if (nct < n)\n            s[nct] = A[nct][nct];\n        if (m < p)\n            s[p - 1] = 0.0;\n        if (nrt + 1 < p)\n            e[nrt] = A[nrt][p - 1];\n        e[p - 1] = 0.0;\n        if (wantu) {\n            for (let j = nct; j < nu; j++) {\n                for (let i = 0; i < m; i++)\n                    U[i][j] = 0.0;\n                U[j][j] = 1.0;\n            }\n            for (let k = nct - 1; k >= 0; k--) {\n                if (s[k] != 0.0) {\n                    for (let j = k + 1; j < nu; j++) {\n                        let t = 0;\n                        for (let i = k; i < m; i++)\n                            t += U[i][k] * U[i][j];\n                        t = -t / U[k][k];\n                        for (let i = k; i < m; i++)\n                            U[i][j] += t * U[i][k];\n                    }\n                    for (let i = k; i < m; i++)\n                        U[i][k] = -U[i][k];\n                    U[k][k] = 1.0 + U[k][k];\n                    for (let i = 0; i < k - 1; i++)\n                        U[i][k] = 0.0;\n                }\n                else {\n                    for (let i = 0; i < m; i++)\n                        U[i][k] = 0.0;\n                    U[k][k] = 1.0;\n                }\n            }\n        }\n        if (wantv) {\n            for (let k = n - 1; k >= 0; k--) {\n                if ((k < nrt) && (e[k] != 0.0)) {\n                    for (let j = k + 1; j < nu; j++) {\n                        let t = 0;\n                        for (let i = k + 1; i < n; i++)\n                            t += V[i][k] * V[i][j];\n                        t = -t / V[k + 1][k];\n                        for (let i = k + 1; i < n; i++)\n                            V[i][j] += t * V[i][k];\n                    }\n                }\n                for (let i = 0; i < n; i++)\n                    V[i][k] = 0.0;\n                V[k][k] = 1.0;\n            }\n        }\n        let pp = p - 1;\n        let iter = 0;\n        let eps = Math.pow(2.0, -52.0);\n        let tiny = Math.pow(2.0, -966.0);\n        while (p > 0) {\n            let k, kase;\n            for (k = p - 2; k >= -1; k--) {\n                if (k == -1)\n                    break;\n                if (Math.abs(e[k]) <= tiny + eps * (Math.abs(s[k]) + Math.abs(s[k + 1]))) {\n                    e[k] = 0.0;\n                    break;\n                }\n            }\n            if (k == p - 2) {\n                kase = 4;\n            }\n            else {\n                let ks;\n                for (ks = p - 1; ks >= k; ks--) {\n                    if (ks == k)\n                        break;\n                    let t = (ks != p ? Math.abs(e[ks]) : 0.) + (ks != k + 1 ? Math.abs(e[ks - 1]) : 0.);\n                    if (Math.abs(s[ks]) <= tiny + eps * t) {\n                        s[ks] = 0.0;\n                        break;\n                    }\n                }\n                if (ks == k)\n                    kase = 3;\n                else if (ks == p - 1)\n                    kase = 1;\n                else {\n                    kase = 2;\n                    k = ks;\n                }\n            }\n            k++;\n            if (kase == 1) {\n                let f = e[p - 2];\n                e[p - 2] = 0.0;\n                for (let j = p - 2; j >= k; j--) {\n                    let t = SingularValueDecomposition.hypot(s[j], f);\n                    let cs = s[j] / t;\n                    let sn = f / t;\n                    s[j] = t;\n                    if (j != k) {\n                        f = -sn * e[j - 1];\n                        e[j - 1] = cs * e[j - 1];\n                    }\n                    if (wantv) {\n                        for (let i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][p - 1];\n                            V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                            V[i][j] = t;\n                        }\n                    }\n                }\n            }\n            else if (kase == 2) {\n                let f = e[k - 1];\n                e[k - 1] = 0.0;\n                for (let j = k; j < p; j++) {\n                    let t = SingularValueDecomposition.hypot(s[j], f);\n                    let cs = s[j] / t;\n                    let sn = f / t;\n                    s[j] = t;\n                    f = -sn * e[j];\n                    e[j] = cs * e[j];\n                    if (wantu) {\n                        for (let i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][k - 1];\n                            U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n            }\n            else if (kase == 3) {\n                let scale = Math.max(Math.max(Math.max(Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2])), Math.abs(e[p - 2])), Math.abs(s[k])), Math.abs(e[k]));\n                let sp = s[p - 1] / scale;\n                let spm1 = s[p - 2] / scale;\n                let epm1 = e[p - 2] / scale;\n                let sk = s[k] / scale;\n                let ek = e[k] / scale;\n                let b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2.0;\n                let c = (sp * epm1) * (sp * epm1);\n                let shift = 0.0;\n                if ((b != 0.0) || (c != 0.0)) {\n                    shift = Math.sqrt(b * b + c);\n                    if (b < 0.0)\n                        shift = -shift;\n                    shift = c / (b + shift);\n                }\n                let f = (sk + sp) * (sk - sp) + shift;\n                let g = sk * ek;\n                for (let j = k; j < p - 1; j++) {\n                    let t = SingularValueDecomposition.hypot(f, g);\n                    let cs = f / t;\n                    let sn = g / t;\n                    if (j != k)\n                        e[j - 1] = t;\n                    f = cs * s[j] + sn * e[j];\n                    e[j] = cs * e[j] - sn * s[j];\n                    g = sn * s[j + 1];\n                    s[j + 1] = cs * s[j + 1];\n                    if (wantv) {\n                        for (let i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][j + 1];\n                            V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                            V[i][j] = t;\n                        }\n                    }\n                    t = SingularValueDecomposition.hypot(f, g);\n                    cs = f / t;\n                    sn = g / t;\n                    s[j] = t;\n                    f = cs * e[j] + sn * s[j + 1];\n                    s[j + 1] = -sn * e[j] + cs * s[j + 1];\n                    g = sn * e[j + 1];\n                    e[j + 1] = cs * e[j + 1];\n                    if (wantu && (j < m - 1)) {\n                        for (let i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][j + 1];\n                            U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n                e[p - 2] = f;\n                iter = iter + 1;\n            }\n            else if (kase == 4) {\n                if (s[k] <= 0.0) {\n                    s[k] = (s[k] < 0.0 ? -s[k] : 0.0);\n                    if (wantv) {\n                        for (let i = 0; i <= pp; i++)\n                            V[i][k] = -V[i][k];\n                    }\n                }\n                while (k < pp) {\n                    if (s[k] >= s[k + 1])\n                        break;\n                    let t = s[k];\n                    s[k] = s[k + 1];\n                    s[k + 1] = t;\n                    if (wantv && (k < n - 1)) {\n                        for (let i = 0; i < n; i++) {\n                            t = V[i][k + 1];\n                            V[i][k + 1] = V[i][k];\n                            V[i][k] = t;\n                        }\n                    }\n                    if (wantu && (k < m - 1)) {\n                        for (let i = 0; i < m; i++) {\n                            t = U[i][k + 1];\n                            U[i][k + 1] = U[i][k];\n                            U[i][k] = t;\n                        }\n                    }\n                    k++;\n                }\n                iter = 0;\n                p--;\n            }\n        }\n    }\n    getU() {\n        return Matrix.fromArray(this.U);\n    }\n    getV() {\n        return Matrix.fromArray(this.V);\n    }\n    getSingularValues() {\n        return this.s;\n    }\n    getS() {\n        const { n } = this;\n        let X = new Matrix(n, n, 0);\n        let S = X.A;\n        for (let i = 0; i < n; i++)\n            S[i][i] = this.s[i];\n        return X;\n    }\n    norm2() {\n        return this.s[0];\n    }\n    cond() {\n        const { m, n, s } = this;\n        return s[0] / s[Math.min(m, n) - 1];\n    }\n    rank() {\n        const { m, n, s } = this;\n        let eps = Math.pow(2.0, -52.0);\n        let tol = Math.max(m, n) * s[0] * eps;\n        let r = 0;\n        for (let i = 0; i < s.length; i++)\n            if (s[i] > tol)\n                r++;\n        return r;\n    }\n    static hypot(a, b) {\n        let r;\n        if (Math.abs(a) > Math.abs(b)) {\n            r = b / a;\n            r = Math.abs(a) * Math.sqrt(1 + r * r);\n        }\n        else if (b != 0) {\n            r = a / b;\n            r = Math.abs(b) * Math.sqrt(1 + r * r);\n        }\n        else {\n            r = 0.0;\n        }\n        return r;\n    }\n}\n//# sourceMappingURL=Matrix.js.map","import { norm2_xy, norm_xy, sqr } from './util';\nimport { Vec } from './Vec';\nconst EPSILON = Math.pow(2, -52);\nexport class Triangulation2D {\n    constructor(px, py) {\n        this.px = px;\n        this.py = py;\n        this.numTriangles = 0;\n        this.edgeStack = Vec.numberArray(0, 512);\n        this.hull = null;\n        this.px = px;\n        this.py = py;\n        this.sz = px.length;\n        let maxTriangles = Math.max(2 * this.sz - 5, 0);\n        this.triangles = new Array(maxTriangles * 3);\n        this.halfedges = new Array(maxTriangles * 3);\n        this.hashSize = Math.ceil(Math.sqrt(this.sz));\n        this.hullPrev = new Array(this.sz);\n        this.hullNext = new Array(this.sz);\n        this.hullTri = new Array(this.sz);\n        this.hullHash = Vec.numberArray(-1, this.hashSize);\n        this.ids = new Array(this.sz);\n        this.dists = new Array(this.sz);\n        this.update();\n    }\n    trimConcave(threshold) {\n        const threshSq = sqr(threshold);\n        const { sz, px, py } = this;\n        let tri = this.triangles.slice(0);\n        let edge = [];\n        for (let n = 0, i = 0; i < tri.length; n++, i += 3) {\n            edge.push(sz * Math.min(tri[i + 0], tri[i + 1]) + Math.max(tri[i + 0], tri[i + 1]));\n            edge.push(sz * Math.min(tri[i + 0], tri[i + 2]) + Math.max(tri[i + 0], tri[i + 2]));\n            edge.push(sz * Math.min(tri[i + 1], tri[i + 2]) + Math.max(tri[i + 1], tri[i + 2]));\n        }\n        let uniqueEdges = Vec.uniqueUnstable(edge);\n        for (let n = 0; n < edge.length; n++)\n            edge[n] = uniqueEdges.indexOf(edge[n]);\n        let edgeCount = new Array(edge.length);\n        while (true) {\n            const ntri = tri.length / 3;\n            edgeCount.fill(0);\n            for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n                edgeCount[edge[i + 0]]++;\n                edgeCount[edge[i + 1]]++;\n                edgeCount[edge[i + 2]]++;\n            }\n            let mask = Vec.booleanArray(true, ntri);\n            for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n                const c1 = edgeCount[edge[i + 0]];\n                const c2 = edgeCount[edge[i + 1]];\n                const c3 = edgeCount[edge[i + 2]];\n                const i1 = tri[i], i2 = tri[i + 1], i3 = tri[i + 2];\n                if (c1 == 1 && c2 != 1 && c3 != 1)\n                    mask[n] = norm2_xy(px[i1] - px[i2], py[i1] - py[i2]) < threshSq;\n                else if (c1 != 1 && c2 == 1 && c3 != 1)\n                    mask[n] = norm2_xy(px[i1] - px[i3], py[i1] - py[i3]) < threshSq;\n                else if (c1 != 1 && c2 != 1 && c3 == 1)\n                    mask[n] = norm2_xy(px[i2] - px[i3], py[i2] - py[i3]) < threshSq;\n            }\n            if (Vec.allTrue(mask))\n                break;\n            let repTri = new Array(Vec.maskCount(mask) * 3);\n            let repEdge = new Array(Vec.maskCount(mask) * 3);\n            for (let n = 0, i = 0, j = 0, k = 0; n < ntri; n++, i += 3)\n                if (mask[n]) {\n                    repTri[j++] = tri[i];\n                    repTri[j++] = tri[i + 1];\n                    repTri[j++] = tri[i + 2];\n                    repEdge[k++] = edge[i];\n                    repEdge[k++] = edge[i + 1];\n                    repEdge[k++] = edge[i + 2];\n                }\n            tri = repTri;\n            edge = repEdge;\n        }\n        return tri;\n    }\n    traceOutline(tri) {\n        const npt = tri.length, ntri = npt / 3;\n        const { sz, px, py } = this;\n        let edgeCount = new Map();\n        for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n            const e1 = sz * Math.min(tri[i + 0], tri[i + 1]) + Math.max(tri[i + 0], tri[i + 1]);\n            const e2 = sz * Math.min(tri[i + 0], tri[i + 2]) + Math.max(tri[i + 0], tri[i + 2]);\n            const e3 = sz * Math.min(tri[i + 1], tri[i + 2]) + Math.max(tri[i + 1], tri[i + 2]);\n            edgeCount.set(e1, (edgeCount.get(e1) || 0) + 1);\n            edgeCount.set(e2, (edgeCount.get(e2) || 0) + 1);\n            edgeCount.set(e3, (edgeCount.get(e3) || 0) + 1);\n        }\n        let edgePairs = [];\n        for (let entry of edgeCount.entries())\n            if (entry[1] == 1) {\n                const e = entry[0];\n                const i1 = Math.floor(e / sz), i2 = e % sz;\n                edgePairs.push(i1);\n                edgePairs.push(i2);\n            }\n        const idx = Vec.uniqueUnstable(edgePairs);\n        const isz = idx.length;\n        const idxMap = new Map();\n        for (let n = 0; n < isz; n++)\n            idxMap.set(idx[n], n);\n        let g1 = Vec.numberArray(-1, isz), g2 = Vec.numberArray(-1, isz);\n        for (let n = 0; n < edgePairs.length; n += 2) {\n            const i1 = idxMap.get(edgePairs[n]), i2 = idxMap.get(edgePairs[n + 1]);\n            if (g1[i1] < 0)\n                g1[i1] = i2;\n            else\n                g2[i1] = i2;\n            if (g1[i2] < 0)\n                g1[i2] = i1;\n            else\n                g2[i2] = i1;\n        }\n        let mask = Vec.booleanArray(false, isz);\n        let sequence = new Array(isz);\n        sequence[0] = 0;\n        mask[0] = true;\n        for (let n = 1; n < isz; n++) {\n            const i = sequence[n - 1];\n            if (!mask[g1[i]])\n                sequence[n] = g1[i];\n            else\n                sequence[n] = g2[i];\n            mask[sequence[n]] = true;\n        }\n        return Vec.idxGet(idx, sequence);\n    }\n    update() {\n        const sz = this.sz;\n        let { px, py, ids, dists, triangles, halfedges } = this;\n        const minX = Vec.min(px), minY = Vec.min(py);\n        const maxX = Vec.max(px), maxY = Vec.max(py);\n        for (let n = 0; n < sz; n++)\n            ids[n] = n;\n        this.centreX = 0.5 * (minX + maxX);\n        this.centreY = 0.5 * (minY + maxY);\n        let i0 = 0, i1 = 0, i2 = 0;\n        let minDist = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            const d = norm_xy(this.centreX - px[n], this.centreY - py[n]);\n            if (d < minDist) {\n                i0 = n;\n                minDist = d;\n            }\n        }\n        const i0x = px[i0], i0y = py[i0];\n        minDist = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            if (n == i0)\n                continue;\n            const d = norm_xy(i0x - px[n], i0y - py[n]);\n            if (d < minDist && d > 0) {\n                i1 = n;\n                minDist = d;\n            }\n        }\n        let i1x = px[i1], i1y = py[i1];\n        let minRadius = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            if (n == i0 || n == i1)\n                continue;\n            let r = this.circumRadius(i0x, i0y, i1x, i1y, px[n], py[n]);\n            if (r < minRadius) {\n                i2 = n;\n                minRadius = r;\n            }\n        }\n        let i2x = px[i2], i2y = py[i2];\n        if (!Number.isFinite(minRadius)) {\n            for (let n = 0; n < sz; n++) {\n                dists[n] = px[n] - px[0];\n                if (dists[n] == 0)\n                    dists[n] = py[n] - py[0];\n            }\n            this.quicksort(0, sz - 1);\n            let hull = new Array(sz);\n            let j = 0;\n            let d0 = Number.NEGATIVE_INFINITY;\n            for (let n = 0; n < sz; n++) {\n                let id = ids[n];\n                if (dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = dists[id];\n                }\n            }\n            this.hull = hull.slice(0, j);\n            triangles = [];\n            halfedges = [];\n            return;\n        }\n        if (this.orient(i0x, i0y, i1x, i1y, i2x, i2y)) {\n            let i = i1;\n            let x = i1x, y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n        this.pickCircumCentre(i0x, i0y, i1x, i1y, i2x, i2y);\n        for (let n = 0; n < sz; n++)\n            dists[n] = norm_xy(px[n] - this.centreX, py[n] - this.centreY);\n        this.quicksort(0, sz - 1);\n        this.hullStart = i0;\n        let hullSize = 3;\n        const { hullNext, hullPrev, hullTri, hullHash, hashSize } = this;\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n        hullHash.fill(-1);\n        hullHash[this.hashKey(i0x, i0y)] = i0;\n        hullHash[this.hashKey(i1x, i1y)] = i1;\n        hullHash[this.hashKey(i2x, i2y)] = i2;\n        this.numTriangles = 0;\n        this.addTriangle(i0, i1, i2, -1, -1, -1);\n        let xp = 0, yp = 0;\n        for (let k = 0; k < ids.length; k++) {\n            let i = ids[k];\n            let x = px[i], y = py[i];\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON)\n                continue;\n            xp = x;\n            yp = y;\n            if (i == i0 || i == i1 || i == i2)\n                continue;\n            let start = 0;\n            for (let j = 0, key = this.hashKey(x, y); j < hashSize; j++) {\n                start = hullHash[(key + j) % hashSize];\n                if (start >= 0 && start != hullNext[start])\n                    break;\n            }\n            start = hullPrev[start];\n            let e = start, q = hullNext[e];\n            while (!this.orient(x, y, px[e], py[e], px[q], py[q])) {\n                e = q;\n                if (e == start) {\n                    e = -1;\n                    break;\n                }\n                q = hullNext[e];\n            }\n            if (e < 0)\n                continue;\n            let t = this.addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n            hullTri[i] = this.legalise(t + 2);\n            hullTri[e] = t;\n            hullSize++;\n            let n = hullNext[e];\n            q = hullNext[n];\n            while (this.orient(x, y, px[n], py[n], px[q], py[q])) {\n                t = this.addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this.legalise(t + 2);\n                hullNext[n] = n;\n                hullSize--;\n                n = q;\n                q = hullNext[n];\n            }\n            if (e == start) {\n                q = hullPrev[e];\n                while (this.orient(x, y, px[q], py[q], px[e], py[e])) {\n                    t = this.addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this.legalise(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e;\n                    hullSize--;\n                    e = q;\n                    q = hullPrev[e];\n                }\n            }\n            this.hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n            hullHash[this.hashKey(x, y)] = i;\n            hullHash[this.hashKey(px[e], py[e])] = e;\n        }\n        this.hull = new Array(hullSize);\n        for (let n = 0, e = this.hullStart; n < hullSize; n++) {\n            this.hull[n] = e;\n            e = hullNext[e];\n        }\n        this.triangles = triangles.slice(0, this.numTriangles);\n        this.halfedges = halfedges.slice(0, this.numTriangles);\n    }\n    hashKey(x, y) {\n        return Math.floor(this.pseudoAngle(x - this.centreX, y - this.centreY) * this.hashSize) % this.hashSize;\n    }\n    legalise(a) {\n        let i = 0;\n        let ar = 0;\n        while (true) {\n            let b = this.halfedges[a];\n            let a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n            if (b < 0) {\n                if (i == 0)\n                    break;\n                a = this.edgeStack[--i];\n                continue;\n            }\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n            const { px, py, triangles, halfedges } = this;\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n            let illegal = this.inCircle(px[p0], py[p0], px[pr], py[pr], px[pl], py[pl], px[p1], py[p1]);\n            if (illegal) {\n                this.triangles[a] = p1;\n                this.triangles[b] = p0;\n                const hbl = halfedges[bl];\n                if (hbl < 0) {\n                    let e = this.hullStart;\n                    do {\n                        if (this.hullTri[e] == bl) {\n                            this.hullTri[e] = a;\n                            break;\n                        }\n                        e = this.hullPrev[e];\n                    } while (e != this.hullStart);\n                }\n                this.link(a, hbl);\n                this.link(b, halfedges[ar]);\n                this.link(ar, bl);\n                const br = b0 + (b + 1) % 3;\n                if (i < this.edgeStack.length)\n                    this.edgeStack[i++] = br;\n            }\n            else {\n                if (i == 0)\n                    break;\n                a = this.edgeStack[--i];\n            }\n        }\n        return ar;\n    }\n    link(a, b) {\n        this.halfedges[a] = b;\n        if (b >= 0)\n            this.halfedges[b] = a;\n    }\n    addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.numTriangles;\n        this.triangles[t] = i0;\n        this.triangles[t + 1] = i1;\n        this.triangles[t + 2] = i2;\n        this.link(t, a);\n        this.link(t + 1, b);\n        this.link(t + 2, c);\n        this.numTriangles += 3;\n        return t;\n    }\n    pseudoAngle(dx, dy) {\n        const p = dx / (Math.abs(dx) + Math.abs(dy));\n        return (dy > 0 ? 3 - p : 1 + p) / 4;\n    }\n    orientIfSure(px, py, rx, ry, qx, qy) {\n        const l = (ry - py) * (qx - px);\n        const r = (rx - px) * (qy - py);\n        return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n    }\n    orient(rx, ry, qx, qy, px, py) {\n        let o = this.orientIfSure(px, py, rx, ry, qx, qy);\n        if (o != 0)\n            return o < 0;\n        o = this.orientIfSure(rx, ry, qx, qy, px, py);\n        if (o != 0)\n            return o < 0;\n        o = this.orientIfSure(qx, qy, px, py, rx, ry);\n        return o < 0;\n    }\n    inCircle(ax, ay, bx, by, cx, cy, px, py) {\n        const dx = ax - px;\n        const dy = ay - py;\n        const ex = bx - px;\n        const ey = by - py;\n        const fx = cx - px;\n        const fy = cy - py;\n        const ap = dx * dx + dy * dy;\n        const bp = ex * ex + ey * ey;\n        const cp = fx * fx + fy * fy;\n        return dx * (ey * cp - bp * fy) -\n            dy * (ex * cp - bp * fx) +\n            ap * (ex * fy - ey * fx) < 0;\n    }\n    circumRadius(ax, ay, bx, by, cx, cy) {\n        const dx = bx - ax;\n        const dy = by - ay;\n        const ex = cx - ax;\n        const ey = cy - ay;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        const d = 0.5 / (dx * ey - dy * ex);\n        const x = (ey * bl - dy * cl) * d;\n        const y = (dx * cl - ex * bl) * d;\n        return x * x + y * y;\n    }\n    pickCircumCentre(ax, ay, bx, by, cx, cy) {\n        const dx = bx - ax;\n        const dy = by - ay;\n        const ex = cx - ax;\n        const ey = cy - ay;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        const d = 0.5 / (dx * ey - dy * ex);\n        this.centreX = ax + (ey * bl - dy * cl) * d;\n        this.centreY = ay + (dx * cl - ex * bl) * d;\n    }\n    quicksort(left, right) {\n        const { ids, dists } = this;\n        if (right - left <= 20) {\n            for (let i = left + 1; i <= right; i++) {\n                const temp = ids[i];\n                const tempDist = dists[temp];\n                let j = i - 1;\n                while (j >= left && dists[ids[j]] > tempDist)\n                    ids[j + 1] = ids[j--];\n                ids[j + 1] = temp;\n            }\n        }\n        else {\n            let median = (left + right) >> 1;\n            let i = left + 1;\n            let j = right;\n            Vec.swap(ids, median, i);\n            if (dists[ids[left]] > dists[ids[right]])\n                Vec.swap(ids, left, right);\n            if (dists[ids[i]] > dists[ids[right]])\n                Vec.swap(ids, i, right);\n            if (dists[ids[left]] > dists[ids[i]])\n                Vec.swap(ids, left, i);\n            let temp = ids[i];\n            const tempDist = dists[temp];\n            while (true) {\n                do\n                    i++;\n                while (dists[ids[i]] < tempDist);\n                do\n                    j--;\n                while (dists[ids[j]] > tempDist);\n                if (j < i)\n                    break;\n                Vec.swap(ids, i, j);\n            }\n            ids[left + 1] = ids[j];\n            ids[j] = temp;\n            if (right - i + 1 >= j - left) {\n                this.quicksort(i, right);\n                this.quicksort(left, j - 1);\n            }\n            else {\n                this.quicksort(left, j - 1);\n                this.quicksort(i, right);\n            }\n        }\n    }\n}\n//# sourceMappingURL=Triangulation2D.js.map","import { Matrix, SingularValueDecomposition } from './Matrix';\nimport { Triangulation2D } from './Triangulation2D';\nimport { angleDiff, angleDiffPos, angleNorm, fltEqual, maxArray, minArray, norm2_xy, norm_xy, realEqual, sqr, TWOPI } from './util';\nimport { Vec } from './Vec';\nexport class GeomUtil {\n    static pointInPolygon(x, y, px, py) {\n        if (x < minArray(px) || x > maxArray(px) || y < minArray(py) || y > maxArray(py))\n            return false;\n        let sz = px.length;\n        for (let n = 0; n < sz; n++)\n            if (px[n] == x && py[n] == y)\n                return true;\n        let phase = false;\n        for (let n = 0; n < sz; n++) {\n            let x1 = px[n], y1 = py[n], x2 = px[n + 1 < sz ? n + 1 : 0], y2 = py[n + 1 < sz ? n + 1 : 0];\n            if (y > Math.min(y1, y2) && y <= Math.max(y1, y2) && x <= Math.max(x1, x2) && y1 != y2) {\n                let intr = (y - y1) * (x2 - x1) / (y2 - y1) + x1;\n                if (x1 == x2 || x <= intr)\n                    phase = !phase;\n            }\n        }\n        return phase;\n    }\n    static areLinesParallel(x1, y1, x2, y2, x3, y3, x4, y4) {\n        let dxa = x2 - x1, dya = y2 - y1, dxb = x4 - x3, dyb = y4 - y3;\n        let xmajorA = Math.abs(dxa) > Math.abs(dya), xmajorB = Math.abs(dxb) > Math.abs(dyb);\n        if (xmajorA != xmajorB)\n            return false;\n        const EPS = 1E-6;\n        if (xmajorA)\n            return Math.abs(dya / dxa - dyb / dxb) < EPS;\n        else\n            return Math.abs(dxa / dya - dxb / dyb) < EPS;\n    }\n    static lineIntersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        let u = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n        return [x1 + u * (x2 - x1), y1 + u * (y2 - y1)];\n    }\n    static isPointOnLineSeg(px, py, x1, y1, x2, y2) {\n        if (px < Math.min(x1, x2) || px > Math.max(x1, x2) || py < Math.min(y1, y2) || py > Math.max(y1, y2))\n            return false;\n        if ((px == x1 && py == y1) || (px == x2 && py == y2))\n            return true;\n        let dx = x2 - x1, dy = y2 - y1;\n        if (Math.abs(dx) > Math.abs(dy))\n            return realEqual(py, (dy / dx) * (px - x1) + y1);\n        else\n            return realEqual(px, (dx / dy) * (py - y1) + x1);\n    }\n    static pointLineDistance(px, py, x1, y1, x2, y2) {\n        let dx = x2 - x1, dy = y2 - y1;\n        return Math.abs(dy * px - dx * py + x2 * y1 - y2 * x1) / norm_xy(dx, dy);\n    }\n    static pointLineSegDistance(px, py, x1, y1, x2, y2) {\n        let dx = x2 - x1, dy = y2 - y1;\n        let t = ((px - x1) * dx + (py - y1) * dy) / norm2_xy(dx, dy);\n        t = Math.max(0, Math.min(1, t));\n        let tx = x1 + t * dx, ty = y1 + t * dy;\n        return norm_xy(px - tx, py - ty);\n    }\n    static doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (Math.max(x1, x2) < Math.min(x3, x4) || Math.max(y1, y2) < Math.min(y3, y4))\n            return false;\n        if (Math.min(x1, x2) > Math.max(x3, x4) || Math.min(y1, y2) > Math.max(y3, y4))\n            return false;\n        let ax = x2 - x1, ay = y2 - y1, bx = x4 - x3, by = y4 - y3;\n        if (fltEqual(norm2_xy(ax, ay), 0) || fltEqual(norm2_xy(bx, by), 0))\n            return false;\n        if (Math.abs(ay) > Math.abs(ax) && Math.abs(by) > Math.abs(bx)) {\n            if (fltEqual(ax / ay - bx / by, 0))\n                return false;\n        }\n        else if (Math.abs(ax) > Math.abs(ay) && Math.abs(bx) > Math.abs(by)) {\n            if (fltEqual(ay / ax - by / bx, 0))\n                return false;\n        }\n        if ((x1 == x3 && y1 == y3) || (x1 == x4 && y1 == y4) || (x2 == x3 && y2 == y3) || (x2 == x4 && y2 == y4))\n            return true;\n        if ((x1 == x2 || x3 == x4) && (x1 == x3 || x1 == x4 || x2 == x3 || x2 == x4))\n            return true;\n        if ((y1 == y2 || y3 == y4) && (y1 == y3 || y1 == y4 || y2 == y3 || y2 == y4))\n            return true;\n        let x4_x3 = bx, y4_y3 = by, x2_x1 = ax, y2_y1 = ay, x1_x3 = x1 - x3, y1_y3 = y1 - y3;\n        let nx = x4_x3 * y1_y3 - y4_y3 * x1_x3;\n        let ny = x2_x1 * y1_y3 - y2_y1 * x1_x3;\n        let dn = y4_y3 * x2_x1 - x4_x3 * y2_y1;\n        if (dn == 0)\n            return false;\n        if (dn < 0) {\n            dn = -dn;\n            nx = -nx;\n            ny = -ny;\n        }\n        return nx >= 0 && nx <= dn && ny >= 0 && ny <= dn;\n    }\n    static rectsIntersect(x1, y1, w1, h1, x2, y2, w2, h2) {\n        if (x1 <= x2 && x1 + w1 >= x2 + w2 && y1 <= y2 && y1 + h1 >= y2 + h2)\n            return true;\n        if (x2 <= x1 && x2 + w2 >= x1 + w1 && y2 <= y1 && y2 + h2 >= y1 + h1)\n            return true;\n        if (x1 + w1 < x2 || x2 + w2 < x1 || y1 + h1 < y2 || y2 + h2 < y1)\n            return false;\n        return true;\n    }\n    static sortAngles(theta) {\n        if (theta == null || theta.length < 2)\n            return theta;\n        theta = theta.slice(0);\n        for (let n = 0; n < theta.length; n++)\n            theta[n] = angleNorm(theta[n]);\n        if (theta.length == 2) {\n            if (angleDiffPos(theta[1], theta[0]) > Math.PI)\n                return [theta[1], theta[0]];\n            return theta;\n        }\n        Vec.sort(theta);\n        while (true) {\n            let a = theta[theta.length - 1], b = theta[0], c = theta[1];\n            if (angleDiff(b, a) <= angleDiff(c, b))\n                break;\n            for (let n = theta.length - 1; n > 0; n--)\n                theta[n] = theta[n - 1];\n            theta[0] = a;\n        }\n        return theta;\n    }\n    static idxSortAngles(theta) {\n        const sz = Vec.len(theta);\n        if (theta == null || sz < 2)\n            return Vec.identity0(sz);\n        if (sz == 2) {\n            if (angleDiffPos(theta[1], theta[0]) > Math.PI)\n                return [1, 0];\n            else\n                return [0, 1];\n        }\n        theta = Vec.duplicate(theta);\n        for (let n = 0; n < sz; n++)\n            theta[n] = angleNorm(theta[n]);\n        let idx = Vec.idxSort(theta);\n        while (true) {\n            let a = theta[idx[sz - 1]], b = theta[idx[0]], c = theta[idx[1]];\n            if (angleDiff(b, a) <= angleDiff(c, b))\n                break;\n            let last = idx.pop();\n            idx.unshift(last);\n        }\n        return idx;\n    }\n    static uniqueAngles(theta, threshold) {\n        let ang = GeomUtil.sortAngles(theta), ret = [];\n        ret.push(ang[0]);\n        for (let n = 1; n < ang.length; n++) {\n            if (Math.abs(angleDiff(ang[n], ang[n - 1])) > threshold)\n                ret.push(ang[n]);\n        }\n        return ret;\n    }\n    static thetaObtuse(th1, th2) {\n        let dth = th2 - th1;\n        while (dth < -Math.PI)\n            dth += 2 * Math.PI;\n        while (dth > Math.PI)\n            dth -= 2 * Math.PI;\n        return dth > 0 ? th1 - 0.5 * (2 * Math.PI - dth) : th1 + 0.5 * (2 * Math.PI + dth);\n    }\n    static emergentAngle(theta) {\n        let len = theta.length;\n        if (len == 1)\n            return theta[0];\n        if (len == 2)\n            return 0.5 * (theta[0] + theta[1]);\n        Vec.sort(theta);\n        let bottom = 0;\n        let behind = angleDiffPos(theta[0], theta[len - 1]);\n        for (let n = 1; n < len; n++) {\n            let delta = angleDiffPos(theta[n], theta[n - 1]);\n            if (delta > behind) {\n                bottom = n;\n                behind = delta;\n            }\n        }\n        let sum = 0;\n        for (let n = 0; n < len; n++) {\n            let delta = theta[n] - theta[bottom];\n            if (delta < 0)\n                delta += TWOPI;\n            sum += delta;\n        }\n        return sum / len + theta[bottom];\n    }\n    static dotProduct(v1, v2) {\n        return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\n    }\n    static crossProduct(v1, v2) {\n        const x = v1[1] * v2[2] - v1[2] * v2[1];\n        const y = v1[2] * v2[0] - v1[0] * v2[2];\n        const z = v1[0] * v2[1] - v1[1] * v2[0];\n        return [x, y, z];\n    }\n    static affineTranslate(dx, dy) {\n        return [[1, 0, dx], [0, 1, dy], [0, 0, 1]];\n    }\n    static affineMirror(xaxis, yaxis) {\n        return [[xaxis ? -1 : 1, 0, 0], [0, yaxis ? -1 : 1, 0], [0, 0, 1]];\n    }\n    static affineScale(sx, sy) {\n        return [[sx, 0, 0], [0, sy, 0], [0, 0, 1]];\n    }\n    static affineRotate(theta) {\n        let cos = Math.cos(theta), sin = Math.sin(theta);\n        return [[cos, -sin, 0], [sin, cos, 0], [0, 0, 1]];\n    }\n    static affineCompose(A, B) {\n        let tfm = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n        let Acol = [0, 0, 0];\n        for (let j = 0; j < 3; j++) {\n            for (let k = 0; k < 3; k++)\n                Acol[k] = A[k][j];\n            for (let i = 0; i < 3; i++) {\n                let Brow = B[i];\n                let s = 0;\n                for (let k = 0; k < 3; k++)\n                    s += Acol[k] * Brow[k];\n                tfm[i][j] = s;\n            }\n        }\n        return tfm;\n    }\n    static applyAffine(x, y, tfm) {\n        return [x * tfm[0][0] + y * tfm[0][1] + tfm[0][2], x * tfm[1][0] + y * tfm[1][1] + tfm[1][2]];\n    }\n    static applyAffineArray(x, y, tfm) {\n        for (let n = 0; n < x.length; n++)\n            [x[n], y[n]] = this.applyAffine(x[n], y[n], tfm);\n    }\n    static isAffineMirror(tfm) {\n        let a = tfm[0][0], b = tfm[0][1], c = tfm[0][2];\n        let d = tfm[1][0], e = tfm[1][1], f = tfm[1][2];\n        let g = tfm[2][0], h = tfm[2][1], i = tfm[2][2];\n        return a * e * i + b * f * g + c * d * h - c * e * g - b * d * i - a * f * h < 0;\n    }\n    static magnitude2(v) {\n        return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n    }\n    static magnitude(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n    }\n    static dist2(v1, v2) {\n        let dx = v1[0] - v2[0], dy = v1[1] - v2[1], dz = v1[2] - v2[2];\n        return dx * dx + dy * dy + dz * dz;\n    }\n    static dist(v1, v2) {\n        let dx = v1[0] - v2[0], dy = v1[1] - v2[1], dz = v1[2] - v2[2];\n        return Math.sqrt(dx * dx + dy * dy + dz * dz);\n    }\n    static normalise(v) {\n        const dsq = v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n        if (dsq == 0)\n            return;\n        const inv = 1.0 / Math.sqrt(dsq);\n        v[0] *= inv;\n        v[1] *= inv;\n        v[2] *= inv;\n    }\n    static normalised(v) {\n        let ret = v.slice(0);\n        this.normalise(ret);\n        return ret;\n    }\n    static acuteAngle(v1, v2) {\n        let mag1 = this.magnitude(v1), mag2 = this.magnitude(v2);\n        if (mag1 == 0 || mag2 == 0)\n            return 0;\n        let dot = this.dotProduct(v1, v2);\n        let cosTheta = dot / (mag1 * mag2);\n        cosTheta = Math.max(-1, Math.min(1, cosTheta));\n        return Math.acos(cosTheta);\n    }\n    static arcControlPoints(rad, x1, y1, x2, y2) {\n        let t1x = -y1, t1y = x1;\n        let t2x = y2, t2y = -x2;\n        let dx = 0.5 * (x1 + x2);\n        let dy = 0.5 * (y1 + y2);\n        let tx = 3 / 8 * (t1x + t2x);\n        let ty = 3 / 8 * (t1y + t2y);\n        let a = tx * tx + ty * ty;\n        let b = dx * tx + dy * ty;\n        let c = dx * dx + dy * dy - rad * rad;\n        let D = b * b - a * c;\n        let k = (Math.sqrt(D) - b) / a;\n        return [x1 + k * t1x, y1 + k * t1y, x2 + k * t2x, y2 + k * t2y];\n    }\n    static createBezierEllipse(cx, cy, rw, rh, theta) {\n        let nseg = 24, npt = 2 * nseg + 1;\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        let incrAlpha = TWOPI / nseg;\n        let px = new Array(npt), py = new Array(npt);\n        for (let n = 0; n < nseg; n++) {\n            let alpha = n * incrAlpha;\n            let cosAlpha = Math.cos(alpha), sinAlpha = Math.sin(alpha);\n            px[n * 2] = rw * cosAlpha * cosTheta - rh * sinAlpha * sinTheta + cx;\n            py[n * 2] = rw * cosAlpha * sinTheta + rh * sinAlpha * cosTheta + cy;\n        }\n        px[npt - 1] = px[0];\n        py[npt - 1] = py[0];\n        let smooth = 0.3;\n        for (let n = 0; n < nseg; n++) {\n            let n1 = (n - 1 + nseg) % nseg;\n            let n2 = n;\n            let n3 = (n + 1) % nseg;\n            let n4 = (n + 2) % nseg;\n            let x1 = px[n1 * 2], x2 = px[n2 * 2], x3 = px[n3 * 2], x4 = px[n4 * 2];\n            let y1 = py[n1 * 2], y2 = py[n2 * 2], y3 = py[n3 * 2], y4 = py[n4 * 2];\n            px[n * 2 + 1] = 0.5 * (x2 + x3 + smooth * (x2 - x1 + x3 - x4));\n            py[n * 2 + 1] = 0.5 * (y2 + y3 + smooth * (y2 - y1 + y3 - y4));\n        }\n        let ctrl = new Array(npt);\n        for (let n = 0; n < npt; n++)\n            ctrl[n] = (n & 1) == 1;\n        return { px, py, ctrl };\n    }\n    static fitCircle(x, y) {\n        let dsq = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < x.length; n++)\n            dsq = Math.min(dsq, norm2_xy(x[n], y[n]));\n        return Math.sqrt(dsq);\n    }\n    static fitEllipse(px, py, minX, minY, maxX, maxY) {\n        let bestW = 0.5 * this.fitCircle(px, py), bestH = bestW, bestScore = bestW * bestH;\n        let x = Vec.concat(px, [minX, maxX, 0, 0]);\n        let y = Vec.concat(py, [0, 0, minY, maxY]);\n        const sz = x.length;\n        let shrinkToFit = (whs) => {\n            let dmin = Number.POSITIVE_INFINITY;\n            let invW2 = 1.0 / (whs[0] * whs[0]), invH2 = 1.0 / (whs[1] * whs[1]);\n            for (let n = 0; n < sz; n++)\n                dmin = Math.min(dmin, Math.sqrt(x[n] * x[n] * invW2 + y[n] * y[n] * invH2));\n            if (dmin < 1) {\n                whs[0] *= dmin;\n                whs[1] *= dmin;\n            }\n            whs[2] = whs[0] * whs[1];\n        };\n        let mul = 1;\n        let whsX = [0, 0, 0], whsY = [0, 0, 0];\n        while (mul > 0.001) {\n            whsX[0] = bestW * (1 + mul);\n            whsX[1] = bestH;\n            shrinkToFit(whsX);\n            whsY[0] = bestW;\n            whsY[1] = bestH * (1 + mul);\n            shrinkToFit(whsY);\n            let anything = false;\n            if (whsX[2] > bestScore) {\n                bestW = whsX[0];\n                bestH = whsX[1];\n                bestScore = whsX[2];\n                anything = true;\n            }\n            if (whsY[2] > bestScore) {\n                bestW = whsY[0];\n                bestH = whsY[1];\n                bestScore = whsY[2];\n                anything = true;\n            }\n            if (!anything)\n                mul *= 0.6;\n        }\n        return [bestW, bestH];\n    }\n    static superimpose(ax, ay, bx, by) {\n        let sz = ax.length;\n        if (sz == 1) {\n            let dx = bx[0] - ax[0], dy = by[0] - ay[0];\n            return [[1, 0, dx], [0, 1, dy], [0, 0, 1]];\n        }\n        if (sz == 2) {\n            let thetaA = Math.atan2(ay[1] - ay[0], ax[1] - ax[0]), thetaB = Math.atan2(by[1] - by[0], bx[1] - bx[0]);\n            let delta = angleDiff(thetaB, thetaA), cos = Math.cos(delta), sin = Math.sin(delta);\n            let rot00 = cos, rot01 = -sin;\n            let rot10 = sin, rot11 = cos;\n            let acx = 0.5 * (ax[0] + ax[1]), acy = 0.5 * (ay[0] + ay[1]);\n            let bcx = 0.5 * (bx[0] + bx[1]), bcy = 0.5 * (by[0] + by[1]);\n            let rax = rot00 * acx + rot01 * acy;\n            let ray = rot10 * acx + rot11 * acy;\n            return [[rot00, rot01, bcx - rax], [rot10, rot11, bcy - ray], [0, 0, 1]];\n        }\n        let invsz = 1.0 / sz;\n        let acx = Vec.sum(ax) * invsz, acy = Vec.sum(ay) * invsz;\n        let bcx = Vec.sum(bx) * invsz, bcy = Vec.sum(by) * invsz;\n        let mtxA = new Matrix(3, sz), mtxB = new Matrix(3, sz);\n        for (let n = 0; n < sz; n++) {\n            mtxA.set(0, n, ax[n] - acx);\n            mtxA.set(1, n, ay[n] - acy);\n            mtxA.set(2, n, 0);\n            mtxB.set(0, n, bx[n] - bcx);\n            mtxB.set(1, n, by[n] - bcy);\n            mtxB.set(2, n, 0);\n        }\n        let cov = mtxA.times(mtxB.transpose());\n        let svd = new SingularValueDecomposition(cov);\n        let rotate = svd.getV().times(svd.getU().transpose());\n        let rot00 = rotate.get(0, 0), rot01 = rotate.get(0, 1);\n        let rot10 = rotate.get(1, 0), rot11 = rotate.get(1, 1);\n        let rax = rot00 * acx + rot01 * acy;\n        let ray = rot10 * acx + rot11 * acy;\n        return [[rot00, rot01, bcx - rax], [rot10, rot11, bcy - ray], [0, 0, 1]];\n    }\n    static convexHull(x, y, flatness) {\n        let algo = new QuickHull(x, y, sqr(flatness * 0.1));\n        return [algo.hullX, algo.hullY];\n    }\n    static outlinePolygon(x, y, diameter) {\n        let del = new Triangulation2D(x, y);\n        let concave = del.trimConcave(diameter);\n        let idx = del.traceOutline(concave);\n        return [Vec.idxGet(x, idx), Vec.idxGet(y, idx)];\n    }\n}\nexport class QuickHull {\n    constructor(x, y, threshSq) {\n        this.x = x;\n        this.y = y;\n        this.threshSq = threshSq;\n        this.hsz = 0;\n        this.hullX = [];\n        this.hullY = [];\n        const sz = x.length;\n        let l = 0, r = 0;\n        for (let n = 0; n < sz; n++) {\n            if (x[r] > x[n] || (x[r] == x[n] && y[r] > y[n]))\n                r = n;\n            if (x[l] < x[n] || (x[l] == x[n] && y[l] < y[n]))\n                l = n;\n        }\n        let al1 = [], al2 = [];\n        for (let n = 0; n < sz; n++) {\n            if (n != l && n != r) {\n                if (this.right(r, l, n) > 0)\n                    al1.push(n);\n                else\n                    al2.push(n);\n            }\n        }\n        this.hullX.push(x[r]);\n        this.hullY.push(y[r]);\n        this.quickHull(r, l, al1);\n        this.hullX.push(x[l]);\n        this.hullY.push(y[l]);\n        this.quickHull(l, r, al2);\n        for (let n = 0; n < this.hullX.length - 1;) {\n            if (norm2_xy(this.hullX[n] - this.hullY[n + 1], this.hullY[n] - this.hullY[n + 1]) < threshSq) {\n                this.hullX.splice(n + 1, 1);\n                this.hullY.splice(n + 1, 1);\n            }\n            else\n                n++;\n        }\n    }\n    quickHull(a, b, al) {\n        if (al.length == 0)\n            return;\n        let c = this.furthestPoint(a, b, al);\n        let al1 = [], al2 = [];\n        for (let n = 0; n < al.length; n++) {\n            let p = al[n];\n            if (p == a || p == b)\n                continue;\n            if (this.right(a, c, p) > 0)\n                al1.push(p);\n            else if (this.right(c, b, p) > 0)\n                al2.push(p);\n        }\n        this.quickHull(a, c, al1);\n        this.hullX.push(this.x[c]);\n        this.hullY.push(this.y[c]);\n        this.quickHull(c, b, al2);\n    }\n    right(a, b, p) {\n        const x = this.x, y = this.y;\n        return (x[a] - x[b]) * (y[p] - y[b]) - (x[p] - x[b]) * (y[a] - y[b]);\n    }\n    distance(a, b, p) {\n        const x = this.x, y = this.y;\n        let u = ((x[p] - x[a]) * (x[b] - x[a]) + (y[p] - y[a]) * (y[b] - y[a])) / ((x[b] - x[a]) * (x[b] - x[a]) + (y[b] - y[a]) * (y[b] - y[a]));\n        let ux = x[a] + u * (x[b] - x[a]);\n        let uy = y[a] + u * (y[b] - y[a]);\n        return ((ux - x[p]) * (ux - x[p]) + (uy - y[p]) * (uy - y[p]));\n    }\n    furthestPoint(a, b, al) {\n        let maxDist = -1;\n        let maxPos = -1;\n        for (let n = 0; n < al.length; n++) {\n            let p = al[n];\n            if (p == a || p == b)\n                continue;\n            let dist = this.distance(a, b, p);\n            if (dist > maxDist) {\n                maxDist = dist;\n                maxPos = p;\n            }\n        }\n        return maxPos;\n    }\n}\nexport class RollingBall {\n    constructor(x, y, diameter) {\n        this.x = x;\n        this.y = y;\n        this.sequence = [];\n        const sz = x.length;\n        const threshSq = diameter * diameter;\n        let first = Vec.idxMax(x), latest = first;\n        let direction = 0.0;\n        let visited = Vec.booleanArray(false, sz);\n        this.sequence.push(first);\n        let roll = () => {\n            let bestIdx = -1;\n            let bestDelta = 0, bestTheta = 0;\n            for (let n = 0; n < sz; n++)\n                if (n != latest && !visited[n]) {\n                    let dx = x[n] - x[latest], dy = y[n] - y[latest];\n                    let dsq = norm2_xy(dx, dy);\n                    if (dsq == 0 || dsq > threshSq)\n                        continue;\n                    let theta = Math.atan2(dy, dx), delta = angleDiffPos(theta, direction);\n                    if (bestIdx < 0 || delta < bestDelta) {\n                        bestIdx = n;\n                        bestDelta = delta;\n                        bestTheta = theta;\n                    }\n                }\n            if (bestIdx < 0)\n                return -1;\n            direction = angleNorm(bestTheta - 0.5 * Math.PI);\n            visited[bestIdx] = true;\n            return bestIdx;\n        };\n        while (true) {\n            let next = roll();\n            if (next < 0) {\n                this.sequence = null;\n                return;\n            }\n            if (next == first)\n                break;\n            this.sequence.push(next);\n            latest = next;\n        }\n    }\n    sequencePos() {\n        if (!this.sequence)\n            return null;\n        let posList = [];\n        for (let n of this.sequence)\n            posList.push(new Pos(this.x[n], this.y[n]));\n        return posList;\n    }\n    sequenceXY() {\n        if (!this.sequence)\n            return [null, null];\n        let px = [], py = [];\n        for (let n of this.sequence) {\n            px.push(this.x[n]);\n            py.push(this.y[n]);\n        }\n        return [px, py];\n    }\n}\nexport class Pos {\n    static zero() { return new Pos(); }\n    static fromArray(src) { return new Pos(src[0], src[1]); }\n    constructor(x, y) {\n        this.x = x == null ? 0 : x;\n        this.y = y == null ? 0 : y;\n    }\n    clone() { return new Pos(this.x, this.y); }\n    equals(other) { return this.x == other.x && this.y == other.y; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x *= mag;\n        this.y *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    }\n    withScaleBy(mag) {\n        return new Pos(this.x * mag, this.y * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Pos(this.x + dx, this.y + dy);\n    }\n    toString() { return '[' + this.x + ',' + this.y + ']'; }\n}\nexport class Size {\n    static zero() { return new Size(); }\n    static fromArray(src) { return new Size(src[0], src[1]); }\n    constructor(w, h) {\n        this.w = w == null ? 0 : w;\n        this.h = h == null ? 0 : h;\n    }\n    clone() { return new Size(this.w, this.h); }\n    equals(other) { return this.w == other.w && this.h == other.h; }\n    isZero() { return this.w == 0 && this.h == 0; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.w *= mag;\n        this.h *= mag;\n    }\n    fitInto(maxW, maxH) {\n        let scale = 1;\n        if (this.w > maxW)\n            scale = maxW / this.w;\n        if (this.h > maxH)\n            scale = Math.min(scale, maxH / this.h);\n        if (scale < 1)\n            this.scaleBy(scale);\n    }\n    withScaleBy(mag) {\n        return new Size(this.w * mag, this.h * mag);\n    }\n    toString() { return '[' + this.w + ',' + this.h + ']'; }\n}\nexport class Box {\n    static zero() { return new Box(); }\n    static fromBounds(x1, y1, x2, y2) { return new Box(x1, y1, x2 - x1, y2 - y1); }\n    static fromSize(sz) { return new Box(0, 0, sz.w, sz.h); }\n    static fromOval(oval) { return new Box(oval.cx - oval.rw, oval.cy - oval.rh, 2 * oval.rw, 2 * oval.rh); }\n    static fromArray(src) { return new Box(src[0], src[1], src[2], src[3]); }\n    constructor(x, y, w, h) {\n        this.x = x == null ? 0 : x;\n        this.y = y == null ? 0 : y;\n        this.w = w == null ? 0 : w;\n        this.h = h == null ? 0 : h;\n    }\n    clone() { return new Box(this.x, this.y, this.w, this.h); }\n    equals(other) { return this.x == other.x && this.y == other.y && this.w == other.w && this.h == other.h; }\n    getPos() { return new Pos(this.x, this.y); }\n    setPos(pos) {\n        this.x = pos.x;\n        this.y = pos.y;\n    }\n    getSize() { return new Size(this.w, this.h); }\n    setSize(sz) {\n        this.w = sz.w;\n        this.h = sz.h;\n    }\n    minX() { return this.x; }\n    minY() { return this.y; }\n    midX() { return this.x + 0.5 * this.w; }\n    midY() { return this.y + 0.5 * this.h; }\n    maxX() { return this.x + this.w; }\n    maxY() { return this.y + this.h; }\n    area() { return this.w * this.h; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x *= mag;\n        this.y *= mag;\n        this.w *= mag;\n        this.h *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    }\n    grow(bx, by) {\n        this.x -= bx;\n        this.y -= by;\n        this.w += 2 * bx;\n        this.h += 2 * by;\n    }\n    withScaleBy(mag) {\n        return new Box(this.x * mag, this.y * mag, this.w * mag, this.h * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Box(this.x + dx, this.y + dy, this.w, this.h);\n    }\n    withGrow(bx, by) {\n        return new Box(this.x - bx, this.y - by, this.w + 2 * bx, this.h + 2 * by);\n    }\n    intersects(other) {\n        return GeomUtil.rectsIntersect(this.x, this.y, this.w, this.h, other.x, other.y, other.w, other.h);\n    }\n    intersection(other) {\n        let x1 = this.x, x2 = x1 + this.w, y1 = this.y, y2 = y1 + this.h;\n        let x3 = other.x, x4 = x3 + other.w, y3 = other.y, y4 = y3 + other.h;\n        let x5 = Math.max(x1, x3), y5 = Math.max(y1, y3), x6 = Math.min(x2, x4), y6 = Math.min(y2, y4);\n        return new Box(x5, y5, x6 - x5, y6 - y5);\n    }\n    contains(x, y) {\n        return x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h;\n    }\n    union(other) {\n        let x1 = Math.min(this.x, other.x), x2 = Math.max(this.x + this.w, other.x + other.w);\n        let y1 = Math.min(this.y, other.y), y2 = Math.max(this.y + this.h, other.y + other.h);\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    isZero() { return this.w == 0 && this.h == 0; }\n    isEmpty() { return this.w == 0 && this.h == 0; }\n    notEmpty() { return this.w > 0 || this.h > 0; }\n    toString() { return '[' + this.x + ',' + this.y + ';' + this.w + ',' + this.h + ']'; }\n}\nexport class Oval {\n    static zero() { return new Oval(); }\n    static fromBox(box) { return new Oval(box.x + 0.5 * box.w, box.y + 0.5 * box.h, 0.5 * box.w, 0.5 * box.h); }\n    static fromArray(src) { return new Oval(src[0], src[1], src[2], src[3]); }\n    constructor(cx, cy, rw, rh) {\n        this.cx = cx == null ? 0 : cx;\n        this.cy = cy == null ? 0 : cy;\n        this.rw = rw == null ? 0 : rw;\n        this.rh = rh == null ? 0 : rh;\n    }\n    clone() { return new Oval(this.cx, this.cy, this.rw, this.rh); }\n    setCentre(pos) {\n        this.cx = pos.x;\n        this.cy = pos.y;\n    }\n    setRadius(sz) {\n        this.rw = sz.w;\n        this.rh = sz.h;\n    }\n    minX() { return this.cx - this.rw; }\n    minY() { return this.cy - this.rh; }\n    maxX() { return this.cx + this.rw; }\n    maxY() { return this.cy + this.rh; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.cx *= mag;\n        this.cy *= mag;\n        this.rw *= mag;\n        this.rh *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.cx += dx;\n        this.cy += dy;\n    }\n    withScaleBy(mag) {\n        return new Oval(this.cx * mag, this.cy * mag, this.rw * mag, this.rh * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Oval(this.cx + dx, this.cy + dy, this.rw, this.rh);\n    }\n    contains(x, y) {\n        let dx = x - this.cx, dy = y - this.cy;\n        let a = dx / this.rw, b = dy / this.rh;\n        return a * a + b * b <= 1;\n    }\n    toString() { return '[' + this.cx + ',' + this.cy + ';' + this.rw + ',' + this.rh + ']'; }\n}\nexport class Line {\n    static zero() { return new Line(); }\n    static fromPos(pos1, pos2) { return new Line(pos1.x, pos1.y, pos2.x, pos2.y); }\n    constructor(x1, y1, x2, y2) {\n        this.x1 = x1 == null ? 0 : x1;\n        this.y1 = y1 == null ? 0 : y1;\n        this.x2 = x2 == null ? 0 : x2;\n        this.y2 = y2 == null ? 0 : y2;\n    }\n    clone() { return new Line(this.x1, this.y1, this.x2, this.y2); }\n    setPos1(pos) {\n        this.x1 = pos.x;\n        this.y1 = pos.y;\n    }\n    setPos2(pos) {\n        this.x2 = pos.x;\n        this.y2 = pos.y;\n    }\n    minX() { return Math.min(this.x1, this.x2); }\n    minY() { return Math.min(this.y1, this.y2); }\n    maxX() { return Math.max(this.x1, this.x2); }\n    maxY() { return Math.max(this.y1, this.y2); }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x1 *= mag;\n        this.y1 *= mag;\n        this.x2 *= mag;\n        this.y2 *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x1 += dx;\n        this.y1 += dy;\n        this.x2 += dx;\n        this.y2 += dy;\n    }\n    toString() { return '[' + this.x1 + ',' + this.y1 + ';' + this.x2 + ',' + this.y2 + ']'; }\n}\n//# sourceMappingURL=Geom.js.map","const ELEMENT_NODE = 1;\nconst ATTRIBUTE_NODE = 2;\nconst TEXT_NODE = 3;\nconst CDATA_SECTION_NODE = 4;\nconst ENTITY_REFERENCE_NODE = 5;\nconst ENTITY_NODE = 6;\nconst PROCESSING_INSTRUCTION_NODE = 7;\nconst COMMENT_NODE = 8;\nconst DOCUMENT_NODE = 9;\nconst DOCUMENT_TYPE_NODE = 10;\nconst DOCUMENT_FRAGMENT_NODE = 11;\nconst NOTATION_NODE = 12;\nclass XML {\n    static parseXML(strXML) {\n        let xmlDoc;\n        if (this.customParser)\n            xmlDoc = new this.customParser().parseFromString(strXML, 'application/xml');\n        else\n            xmlDoc = new DOMParser().parseFromString(strXML, 'application/xml');\n        if (xmlDoc == null)\n            return null;\n        return xmlDoc;\n    }\n    static toString(doc) {\n        if (this.customSerial)\n            return new this.customSerial().serializeToString(doc.documentElement);\n        else\n            return new XMLSerializer().serializeToString(doc.documentElement);\n    }\n    static toPrettyString(doc) {\n        let xslt = [\n            '<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">',\n            '  <xsl:strip-space elements=\"*\"/>',\n            '  <xsl:template match=\"para[content-style][not(text())]\">',\n            '    <xsl:value-of select=\"normalize-space(.)\"/>',\n            '  </xsl:template>',\n            '  <xsl:template match=\"node()|@*\">',\n            '    <xsl:copy><xsl:apply-templates select=\"node()|@*\"/></xsl:copy>',\n            '  </xsl:template>',\n            '  <xsl:output indent=\"yes\"/>',\n            '</xsl:stylesheet>',\n        ].join('\\n');\n        let xsltDoc = this.parseXML(xslt);\n        let xsltProc = new XSLTProcessor();\n        xsltProc.importStylesheet(xsltDoc);\n        let resultDoc = xsltProc.transformToDocument(doc);\n        return new XMLSerializer().serializeToString(resultDoc);\n    }\n    static nodeText(el) {\n        let text = '';\n        for (let child of Array.from(el.childNodes)) {\n            if (child.nodeType == TEXT_NODE || child.nodeType == CDATA_SECTION_NODE)\n                text += child.nodeValue;\n        }\n        return text;\n    }\n    static childText(parent, tagName) {\n        if (parent == null)\n            return null;\n        let el = this.findElement(parent, tagName);\n        if (el == null)\n            return null;\n        return this.nodeText(el);\n    }\n    static appendElement(parent, name) {\n        let el = parent.ownerDocument.createElement(name);\n        parent.appendChild(el);\n        return el;\n    }\n    static appendElementAfter(presib, name) {\n        let el = presib.ownerDocument.createElement(name);\n        let postsib = presib.nextSibling;\n        if (postsib == null)\n            presib.parentNode.appendChild(el);\n        else\n            presib.parentNode.insertBefore(el, postsib);\n        return el;\n    }\n    static appendText(parent, text, isCDATA = false) {\n        if (text == null || text.length == 0)\n            return;\n        if (!isCDATA)\n            parent.appendChild(parent.ownerDocument.createTextNode(text));\n        else\n            parent.appendChild(parent.ownerDocument.createCDATASection(text));\n    }\n    static createTextChild(parent, name, text, isCDATA = false) {\n        let el = parent.ownerDocument.createElement(name);\n        parent.appendChild(el);\n        if (!isCDATA)\n            el.textContent = text;\n        else\n            el.appendChild(parent.ownerDocument.createCDATASection(text));\n    }\n    static setText(parent, text, isCDATA = false) {\n        while (parent.firstChild != null)\n            parent.removeChild(parent.firstChild);\n        this.appendText(parent, text, isCDATA);\n    }\n    static findElement(parent, tagName) {\n        if (parent == null)\n            return null;\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE && node.nodeName == tagName)\n                return node;\n            node = node.nextSibling;\n        }\n        return null;\n    }\n    static findChildElements(parent, tagName) {\n        if (parent == null)\n            return [];\n        let list = [];\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE && node.nodeName === tagName)\n                list.push(node);\n            node = node.nextSibling;\n        }\n        return list;\n    }\n    static childElements(parent) {\n        if (parent == null)\n            return [];\n        let list = [];\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE)\n                list.push(node);\n            node = node.nextSibling;\n        }\n        return list;\n    }\n}\nXML.customParser = null;\nXML.customSerial = null;\nexport { XML };\n//# sourceMappingURL=XML.js.map","import { Box, Pos, Size } from './Geom';\nimport { XML } from './XML';\nexport function dom(obj) {\n    if (typeof obj == 'string')\n        return DOM.parse(obj);\n    if (obj instanceof DOM)\n        return obj;\n    return new DOM(obj);\n}\nexport function domLegacy(obj) {\n    if (obj == null)\n        return null;\n    if (obj.jquery)\n        return dom(obj[0]);\n    return dom(obj);\n}\nexport class DOM {\n    constructor(el) {\n        this.el = el;\n    }\n    get elHTML() { return this.el; }\n    get elInput() { return this.el; }\n    get elCanvas() { return this.el; }\n    static parse(xhtml) {\n        let xml = XML.parseXML(xhtml);\n        if (xml == null)\n            throw 'Invalid XHTML string: ' + xhtml;\n        let html = xml.documentElement.outerHTML;\n        let template = document.createElement('template');\n        template.innerHTML = html;\n        return new DOM(template.content.firstChild);\n    }\n    static find(selector) {\n        let el = document.querySelector(selector);\n        return el ? new DOM(el) : null;\n    }\n    static findAll(selector) {\n        let nodeList = document.querySelectorAll(selector);\n        let domList = [];\n        for (let n = 0; n < nodeList.length; n++)\n            domList.push(new DOM(nodeList.item(n)));\n        return domList;\n    }\n    parent() {\n        let parent = this.el.parentElement;\n        return parent ? new DOM(parent) : null;\n    }\n    ancestor(selector) {\n        let el = this.el.closest(selector);\n        return el ? new DOM(el) : null;\n    }\n    children(tag) {\n        let domList = [];\n        for (let child = this.el.firstElementChild; child; child = child.nextElementSibling) {\n            if (tag && child.tagName.toLocaleLowerCase() != tag.toLocaleLowerCase())\n                continue;\n            domList.push(new DOM(child));\n        }\n        return domList;\n    }\n    find(selector) {\n        let el = this.el.querySelector(selector);\n        return el ? new DOM(el) : null;\n    }\n    findAll(selector) {\n        let nodeList = this.el.querySelectorAll(selector);\n        let domList = [];\n        for (let n = 0; n < nodeList.length; n++)\n            domList.push(new DOM(nodeList.item(n)));\n        return domList;\n    }\n    exists() {\n        return document.documentElement.contains(this.el);\n    }\n    isVisible() {\n        return this.elHTML.offsetWidth > 0 || this.elHTML.offsetHeight > 0 || this.elHTML.getClientRects().length > 0;\n    }\n    append(child) {\n        this.el.append(child.el);\n    }\n    appendTo(parent) {\n        if (parent instanceof DOM)\n            parent.el.append(this.el);\n        else\n            parent.appendChild(this.el);\n        return this;\n    }\n    prepend(child) {\n        this.el.prepend(child.el);\n    }\n    prependTo(parent) {\n        if (parent instanceof DOM)\n            parent.el.prepend(this.el);\n        else\n            parent.append(this.el);\n        return this;\n    }\n    insertBefore(ref) {\n        ref.el.parentElement.insertBefore(this.el, ref.el);\n        return this;\n    }\n    insertAfter(ref) {\n        let before = ref.el.nextElementSibling;\n        if (before)\n            ref.el.parentElement.insertBefore(this.el, before);\n        else\n            ref.el.parentElement.append(this.el);\n        return this;\n    }\n    remove() {\n        this.el.remove();\n    }\n    empty() {\n        this.el.innerHTML = '';\n    }\n    getHTML() {\n        return this.el.innerHTML;\n    }\n    setHTML(html) {\n        this.el.innerHTML = html;\n    }\n    appendHTML(xhtml) {\n        let xml = XML.parseXML('<z>' + xhtml + '</z>');\n        if (xml == null)\n            throw 'Invalid XHTML string: ' + xhtml;\n        let html = xml.documentElement.innerHTML;\n        this.el.insertAdjacentHTML('beforeend', html);\n    }\n    getText() {\n        return this.el.textContent;\n    }\n    setText(text) {\n        this.el.textContent = text;\n    }\n    appendText(text) {\n        let content = document.createTextNode(text);\n        this.el.appendChild(content);\n    }\n    getValue() {\n        return this.el.value;\n    }\n    setValue(str) {\n        this.el.value = str || '';\n    }\n    getCSS(key) {\n        return this.elHTML.style.getPropertyValue(key);\n    }\n    setCSS(key, value) {\n        this.elHTML.style.setProperty(key, value === null || value === void 0 ? void 0 : value.toString());\n    }\n    css(dict) {\n        for (let key in dict)\n            this.setCSS(key, dict[key].toString());\n        return this;\n    }\n    getAttr(key) {\n        if (!this.el.hasAttribute(key))\n            return null;\n        return this.el.getAttribute(key);\n    }\n    setAttr(key, value) {\n        this.el.setAttribute(key, value);\n    }\n    attr(dict) {\n        for (let key in dict)\n            this.setAttr(key, dict[key].toString());\n        return this;\n    }\n    addClass(clsnames) {\n        for (let cls of clsnames.split(' '))\n            if (cls)\n                this.elHTML.classList.add(cls);\n    }\n    removeClass(clsnames) {\n        for (let cls of clsnames.split(' '))\n            if (cls)\n                this.elHTML.classList.remove(cls);\n    }\n    hasClass(clsname) {\n        return this.elHTML.classList.contains(clsname);\n    }\n    setClass(clsname, flag) {\n        if (flag)\n            this.addClass(clsname);\n        else\n            this.removeClass(clsname);\n    }\n    class(clsname) {\n        this.addClass(clsname);\n        return this;\n    }\n    toggleClass(dict) {\n        for (let key in dict) {\n            if (dict[key])\n                this.elHTML.classList.add(key);\n            else\n                this.elHTML.classList.remove(key);\n        }\n    }\n    width() {\n        return this.elHTML.offsetWidth;\n    }\n    height() {\n        return this.elHTML.offsetHeight;\n    }\n    offset() {\n        let rect = this.el.getBoundingClientRect();\n        let win = this.el.ownerDocument.defaultView;\n        return new Pos(rect.left + win.pageXOffset, rect.top + win.pageYOffset);\n    }\n    size() {\n        return new Size(this.width(), this.height());\n    }\n    area() {\n        let pos = this.offset();\n        return new Box(pos.x, pos.y, this.width(), this.height());\n    }\n    setBoundaryPixels(x, y, w, h) {\n        this.css({ 'left': `${x}px`, 'top': `${y}px`, 'width': `${w}px`, 'height': `${h}px` });\n    }\n    setSizePixels(w, h) {\n        this.css({ 'width': `${w}px`, 'height': `${h}px` });\n    }\n    hasFocus() {\n        return this.el === document.activeElement;\n    }\n    grabFocus(delay = false) {\n        if (delay)\n            setTimeout(() => this.grabFocus(), 10);\n        else\n            this.elHTML.focus();\n    }\n    removeEvent(id, callback) {\n        this.el.removeEventListener(id, callback);\n    }\n    onKeyDown(callback) {\n        this.el.addEventListener('keydown', callback);\n    }\n    onKeyUp(callback) {\n        this.el.addEventListener('keyup', callback);\n    }\n    onKeyPress(callback) {\n        this.el.addEventListener('keypress', callback);\n    }\n    onScroll(callback) {\n        this.el.addEventListener('scroll', callback);\n    }\n    onWheel(callback) {\n        this.el.addEventListener('wheel', callback);\n    }\n    onClick(callback) {\n        this.el.addEventListener('click', callback);\n    }\n    onContextMenu(callback) {\n        this.el.addEventListener('contextmenu', callback);\n    }\n    onDblClick(callback) {\n        this.el.addEventListener('dblclick', callback);\n    }\n    onMouseDown(callback) {\n        this.el.addEventListener('mousedown', callback);\n    }\n    onMouseUp(callback) {\n        this.el.addEventListener('mouseup', callback);\n    }\n    onMouseEnter(callback) {\n        this.el.addEventListener('mouseenter', callback);\n    }\n    onMouseLeave(callback) {\n        this.el.addEventListener('mouseleave', callback);\n    }\n    onMouseMove(callback) {\n        this.el.addEventListener('mousemove', callback);\n    }\n    onMouseOver(callback) {\n        this.el.addEventListener('mouseover', callback);\n    }\n    onChange(callback) {\n        this.el.addEventListener('change', callback);\n    }\n    onInput(callback) {\n        this.el.addEventListener('input', callback);\n    }\n    onTouchStart(callback) {\n        this.el.addEventListener('touchstart', callback);\n    }\n    onTouchMove(callback) {\n        this.el.addEventListener('touchmove', callback);\n    }\n    onTouchCancel(callback) {\n        this.el.addEventListener('touchcancel', callback);\n    }\n    onTouchEnd(callback) {\n        this.el.addEventListener('touchend', callback);\n    }\n}\n//# sourceMappingURL=dom.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { dom, domLegacy } from './dom';\nimport { Size } from './Geom';\nimport { Vec } from './Vec';\nexport function safeInt(str, def = 0) {\n    if (str == null || str.length == 0)\n        return def;\n    let val = str.startsWith('0x') ? parseInt(str.substring(2), 16) :\n        str.startsWith('#') ? parseInt(str.substring(1), 16) : parseInt(str);\n    return isNaN(val) ? def : val;\n}\nexport function safeFloat(str, def = 0) {\n    if (str == null || str.length == 0)\n        return def;\n    let val = parseFloat(str);\n    return isNaN(val) ? def : val;\n}\nexport function newElement(parent, tag, attr) {\n    let domNew = dom(`<${tag}/>`);\n    if (attr)\n        domNew.attr(attr);\n    domLegacy(parent).append(domNew);\n    return domNew.el;\n}\nexport function addText(parent, text) {\n    let el = dom(parent).el;\n    el.appendChild(document.createTextNode(text));\n}\nexport function plural(count) {\n    return count == 1 ? '' : 's';\n}\nexport function formatDouble(value, sigfig) {\n    if (value == null)\n        return '';\n    let str = value.toPrecision(sigfig);\n    if (str.indexOf('.') > 0) {\n        while (str.endsWith('0'))\n            str = str.substring(0, str.length - 1);\n        if (str.endsWith('.'))\n            str = str.substring(0, str.length - 1);\n    }\n    return str;\n}\nexport function htmlToRGB(col) {\n    if (col == null || col.charAt(0) != '#' || col.length != 7)\n        return null;\n    return parseInt(col.substring(1), 16);\n}\nexport function colourCode(col) {\n    let hex = (col & 0xFFFFFF).toString(16);\n    while (hex.length < 6)\n        hex = '0' + hex;\n    return '#' + hex;\n}\nexport function colourAlpha(col) {\n    let transp = (col >>> 24) & 0xFF;\n    return transp == 0 ? 1 : transp == 0xFF ? 0 : 1 - (transp * (1.0 / 255));\n}\nconst ONE_OVER_255 = 1.0 / 255;\nexport function colourCanvas(col) {\n    if (col == 0xFFFFFF)\n        return 'white';\n    if (col == 0x000000)\n        return 'black';\n    if (col == -1)\n        return null;\n    if (col >= 0 && col <= 0xFFFFFF)\n        return colourCode(col);\n    const t = ((col >> 24) & 0xFF) * ONE_OVER_255;\n    const r = ((col >> 16) & 0xFF);\n    const g = ((col >> 8) & 0xFF);\n    const b = (col & 0xFF);\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + (1 - t) + ')';\n}\nexport function blendRGB(fract, rgb1, rgb2, rgb3) {\n    fract = Math.max(0, Math.min(1, fract));\n    let r1 = ((rgb1 >> 16) & 0xFF) * ONE_OVER_255, g1 = ((rgb1 >> 8) & 0xFF) * ONE_OVER_255, b1 = (rgb1 & 0xFF) * ONE_OVER_255;\n    let r2 = ((rgb2 >> 16) & 0xFF) * ONE_OVER_255, g2 = ((rgb2 >> 8) & 0xFF) * ONE_OVER_255, b2 = (rgb2 & 0xFF) * ONE_OVER_255;\n    let R, G, B;\n    if (rgb3 == null) {\n        let f1 = 1 - fract, f2 = fract;\n        R = Math.round(0xFF * (f1 * r1 + f2 * r2));\n        G = Math.round(0xFF * (f1 * g1 + f2 * g2));\n        B = Math.round(0xFF * (f1 * b1 + f2 * b2));\n    }\n    else {\n        let r3 = ((rgb3 >> 16) & 0xFF) * ONE_OVER_255, g3 = ((rgb3 >> 8) & 0xFF) * ONE_OVER_255, b3 = (rgb3 & 0xFF) * ONE_OVER_255;\n        if (fract < 0.5) {\n            let f2 = fract * 2, f1 = 1 - f2;\n            R = Math.round(0xFF * (f1 * r1 + f2 * r2));\n            G = Math.round(0xFF * (f1 * g1 + f2 * g2));\n            B = Math.round(0xFF * (f1 * b1 + f2 * b2));\n        }\n        else {\n            let f2 = (fract - 0.5) * 2, f1 = 1 - f2;\n            R = Math.round(0xFF * (f1 * r2 + f2 * r3));\n            G = Math.round(0xFF * (f1 * g2 + f2 * g3));\n            B = Math.round(0xFF * (f1 * b2 + f2 * b3));\n        }\n    }\n    return (R << 16) | (G << 8) | B;\n}\nexport function formatDate(date) {\n    const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    let day = date.getDate(), mon = date.getMonth(), year = date.getFullYear();\n    return day + '-' + MONTHS[mon] + '-' + year;\n}\nexport function nodeText(node) {\n    let ret = '';\n    if (!node)\n        return '';\n    node = node.firstChild;\n    while (node) {\n        if (node.nodeType == 3 || node.nodeType == 4)\n            ret += node.nodeValue;\n        node = node.nextSibling;\n    }\n    return ret;\n}\nexport function isDef(v) {\n    return !(v === null || typeof v === 'undefined');\n}\nexport function notDef(v) {\n    return v === null || typeof v === 'undefined';\n}\nexport function eventCoords(event, container) {\n    let pos = domLegacy(container).offset();\n    let relX = event.pageX - pos.x;\n    let relY = event.pageY - pos.y;\n    return [relX, relY];\n}\nexport function setBoundaryPixels(dom, x, y, w, h) {\n    dom.css({ 'left': x + 'px', 'top': y + 'px', 'width': w + 'px', 'height': h + 'px' });\n}\nexport function getBoundaryPixelsDOM(dom) {\n    let offset = dom.offset();\n    return [offset.x, offset.y, dom.width(), dom.height()];\n}\nexport function getOffsetPixelsDOM(dom) {\n    return [dom.elHTML.offsetLeft, dom.elHTML.offsetTop, dom.elHTML.offsetWidth, dom.elHTML.offsetHeight];\n}\nexport function norm_xy(dx, dy) {\n    return Math.hypot(dx, dy);\n}\nexport function norm_xyz(dx, dy, dz) {\n    return Math.hypot(dx, dy, dz);\n}\nexport function norm2_xy(dx, dy) {\n    return dx * dx + dy * dy;\n}\nexport function norm2_xyz(dx, dy, dz) {\n    return dx * dx + dy * dy + dz * dz;\n}\nexport function signum(v) {\n    return v < 0 ? -1 : v > 0 ? 1 : 0;\n}\nexport function sqr(v) {\n    return v * v;\n}\nexport function invZ(v) { return v == 0 ? 0 : 1.0 / v; }\nexport function fltEqual(v1, v2) { return v1 == v2 || Math.abs(v1 - v2) <= 1E-7 * Math.max(v1, v2); }\nexport function realEqual(v1, v2) { return v1 == v2 || Math.abs(v1 - v2) <= 1E-14 * Math.max(v1, v2); }\nexport function randomInt(size) {\n    if (size <= 1)\n        return 0;\n    return Math.floor(Math.random() * size);\n}\nexport const TWOPI = 2 * Math.PI;\nexport const INV_TWOPI = 1.0 / TWOPI;\nexport const DEGRAD = Math.PI / 180;\nexport const RADDEG = 180 / Math.PI;\nexport function angleNorm(th) {\n    if (th == -Math.PI)\n        return Math.PI;\n    if (th < -Math.PI) {\n        let mod = Math.ceil((-th - Math.PI) * INV_TWOPI);\n        return th + mod * TWOPI;\n    }\n    if (th > Math.PI) {\n        let mod = Math.ceil((th - Math.PI) * INV_TWOPI);\n        return th - mod * TWOPI;\n    }\n    return th;\n}\nexport function angleDiff(th1, th2) {\n    let theta = angleNorm(th1) - angleNorm(th2);\n    return theta - (theta > Math.PI ? TWOPI : 0) + (theta <= -Math.PI ? TWOPI : 0);\n}\nexport function angleDiffPos(th1, th2) {\n    let theta = angleNorm(th1) - angleNorm(th2);\n    return theta + (theta < 0 ? TWOPI : 0);\n}\nexport function sortAngles(theta) {\n    if (theta == null || theta.length < 2)\n        return theta;\n    theta = theta.slice(0);\n    for (let n = 0; n < theta.length; n++)\n        theta[n] = angleNorm(theta[n]);\n    Vec.sort(theta);\n    while (true) {\n        let a = theta[theta.length - 1], b = theta[0], c = theta[1];\n        if (angleDiff(b, a) <= angleDiff(c, b))\n            break;\n        for (let n = theta.length - 1; n > 0; n--)\n            theta[n] = theta[n - 1];\n        theta[0] = a;\n    }\n    return theta;\n}\nexport function uniqueAngles(theta, threshold) {\n    theta = sortAngles(theta);\n    for (let n = 1; n < theta.length; n++) {\n        if (Math.abs(angleDiff(theta[n], theta[n - 1])) <= threshold) {\n            theta.splice(n, 1);\n            n--;\n        }\n    }\n    return theta;\n}\nexport function minArray(a) {\n    if (a == null || a.length == 0)\n        return 0;\n    let v = a[0];\n    for (let n = 1; n < a.length; n++)\n        v = Math.min(v, a[n]);\n    return v;\n}\nexport function maxArray(a) {\n    if (a == null || a.length == 0)\n        return 0;\n    let v = a[0];\n    for (let n = 1; n < a.length; n++)\n        v = Math.max(v, a[n]);\n    return v;\n}\nexport function findNode(parent, name) {\n    if (parent == null)\n        return null;\n    let node = parent.firstChild;\n    while (node) {\n        if (node.nodeName == name)\n            return node;\n        node = node.nextSibling;\n    }\n    return null;\n}\nexport function findNodes(parent, name) {\n    if (parent == null)\n        return null;\n    let node = parent.firstChild;\n    let list = [];\n    while (node) {\n        if (node.nodeName == name)\n            list.push(node);\n        node = node.nextSibling;\n    }\n    return list;\n}\nexport function pathRoundedRect(x1, y1, x2, y2, rad) {\n    let path = new Path2D();\n    path.moveTo(x2 - rad, y1);\n    path.quadraticCurveTo(x2, y1, x2, y1 + rad);\n    path.lineTo(x2, y2 - rad);\n    path.quadraticCurveTo(x2, y2, x2 - rad, y2);\n    path.lineTo(x1 + rad, y2);\n    path.quadraticCurveTo(x1, y2, x1, y2 - rad);\n    path.lineTo(x1, y1 + rad);\n    path.quadraticCurveTo(x1, y1, x1 + rad, y1);\n    path.closePath();\n    return path;\n}\nexport function coordsRoundedRect(x1, y1, x2, y2, rad) {\n    let px = [x2 - rad, x2, x2, x2, x2, x2 - rad, x1 + rad, x1, x1, x1, x1, x1 + rad];\n    let py = [y1, y1, y1 + rad, y2 - rad, y2, y2, y2, y2, y2 - rad, y1 + rad, y1, y1];\n    let ctrl = [false, true, false, false, true, false, false, true, false, false, true, false];\n    return [px, py, ctrl];\n}\nexport function drawLine(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\nexport const ASCENT_FUDGE = 1.4;\nexport function fontSansSerif(ascent) { return `${ascent * ASCENT_FUDGE}px sans-serif`; }\nexport function pixelDensity() {\n    if ('devicePixelRatio' in window && window.devicePixelRatio > 1)\n        return window.devicePixelRatio;\n    return 1;\n}\nexport function clone(data) {\n    if (data == null)\n        return null;\n    if (Array.isArray(data))\n        return data.slice(0);\n    if (typeof data != 'object')\n        return data;\n    let result = {};\n    for (let key in data)\n        result[key] = data[key];\n    return result;\n}\nexport function deepClone(data) {\n    if (data == null)\n        return null;\n    if (typeof data == 'function')\n        return null;\n    if (typeof data != 'object')\n        return data;\n    let result = Array.isArray(data) ? [] : {};\n    for (let key in data) {\n        let val = data[key];\n        result[key] = typeof val === 'object' ? deepClone(val) : val;\n    }\n    return result;\n}\nexport function escapeHTML(text) {\n    if (!text)\n        return '';\n    const map = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#039;' };\n    return text.replace(/[&<>\"']/g, (m) => map[m]);\n}\nexport function orBlank(str) { return str == null ? '' : str; }\nexport function dictValues(dict) {\n    let list = [];\n    for (let key in dict)\n        list.push(dict[key]);\n    return list;\n}\nexport function zip(u, v) {\n    return u.map((a, i) => [a, v[i]]);\n}\nexport function toUTF8(str) {\n    let data = [], stripe = '';\n    const sz = str.length;\n    for (let n = 0; n < sz; n++) {\n        let charcode = str.charCodeAt(n);\n        if (charcode < 0x80)\n            stripe += str.charAt(n);\n        else if (charcode < 0x800) {\n            stripe += String.fromCharCode(0xc0 | (charcode >> 6));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n            stripe += String.fromCharCode(0xe0 | (charcode >> 12));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3F));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        else {\n            n++;\n            charcode = 0x10000 + (((charcode & 0x3FF) << 10) | (str.charCodeAt(n) & 0x3FF));\n            stripe += String.fromCharCode(0xf0 | (charcode >> 18));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 12) & 0x3F));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3F));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        if (stripe.length > 100) {\n            data.push(stripe);\n            stripe = '';\n        }\n    }\n    data.push(stripe);\n    return data.join('');\n}\nexport function fromUTF8(str) {\n    let data = [], stripe = '';\n    const sz = str.length;\n    for (let n = 0; n < sz; n++) {\n        let value = str.charCodeAt(n);\n        if (value < 0x80)\n            stripe += str.charAt(n);\n        else if (value > 0xBF && value < 0xE0) {\n            stripe += String.fromCharCode((value & 0x1F) << 6 | str.charCodeAt(n + 1) & 0x3F);\n            n++;\n        }\n        else if (value > 0xDF && value < 0xF0) {\n            str += String.fromCharCode((value & 0x0F) << 12 | (str.charCodeAt(n + 1) & 0x3F) << 6 | str.charCodeAt(n + 2) & 0x3F);\n            n += 2;\n        }\n        else {\n            let charCode = ((value & 0x07) << 18 | (str.charCodeAt(n + 1) & 0x3F) << 12 | (str.charCodeAt(n + 2) & 0x3F) << 6 | str.charCodeAt(n + 3) & 0x3F) - 0x010000;\n            stripe += String.fromCharCode(charCode >> 10 | 0xD800, charCode & 0x03FF | 0xDC00);\n            n += 3;\n        }\n        if (stripe.length > 100) {\n            data.push(stripe);\n            stripe = '';\n        }\n    }\n    data.push(stripe);\n    return data.join('');\n}\nexport function jsonPrettyPrint(json) {\n    let lines = JSON.stringify(json, null, 1).split(/\\n/);\n    for (let n = 0; n < lines.length; n++) {\n        lines[n] = lines[n].trim();\n        if (lines[n].length > 1 && (lines[n].endsWith('{') || lines[n].endsWith('['))) {\n            let ch = lines[n].charAt(lines[n].length - 1);\n            lines[n] = lines[n].substring(0, lines[n].length - 1);\n            lines.splice(n + 1, 0, ch);\n            n--;\n        }\n    }\n    let indent = 0;\n    for (let n = 0; n < lines.length; n++) {\n        let orig = lines[n];\n        if (orig == ']' || orig == '}' || orig == '],' || orig == '},')\n            indent--;\n        lines[n] = '\\t'.repeat(indent) + orig;\n        if (orig == '[' || orig == '{')\n            indent++;\n    }\n    return lines.join('\\n');\n}\nexport var KeyCode;\n(function (KeyCode) {\n    KeyCode[\"Backspace\"] = \"Backspace\";\n    KeyCode[\"Tab\"] = \"Tab\";\n    KeyCode[\"Enter\"] = \"Enter\";\n    KeyCode[\"Escape\"] = \"Escape\";\n    KeyCode[\"Space\"] = \" \";\n    KeyCode[\"PageUp\"] = \"PageUp\";\n    KeyCode[\"PageDown\"] = \"PageDown\";\n    KeyCode[\"End\"] = \"End\";\n    KeyCode[\"Home\"] = \"Home\";\n    KeyCode[\"Left\"] = \"ArrowLeft\";\n    KeyCode[\"Right\"] = \"ArrowRight\";\n    KeyCode[\"Up\"] = \"ArrowUp\";\n    KeyCode[\"Down\"] = \"ArrowDown\";\n    KeyCode[\"Delete\"] = \"Delete\";\n    KeyCode[\"Insert\"] = \"Insert\";\n})(KeyCode || (KeyCode = {}));\nexport function readTextURL(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            let request = new XMLHttpRequest();\n            request.open('GET', url.toString(), true);\n            request.responseType = 'text';\n            request.onload = () => resolve(request.response.toString());\n            request.onerror = () => resolve(null);\n            request.send();\n        });\n    });\n}\nexport function postJSONURL(url, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            let request = new XMLHttpRequest();\n            request.open('POST', url.toString(), true);\n            request.responseType = 'text';\n            request.onload = () => {\n                let txt = request.response.toString();\n                try {\n                    resolve(JSON.parse(txt));\n                }\n                catch (ex) {\n                    let snippet = txt.substring(0, Math.min(200, txt.length)) + (txt.length > 200 ? '...etc...' : '');\n                    reject('JSON parsing error on result:' + ex + ' for text: ' + snippet);\n                }\n            };\n            request.onerror = () => reject('Failed to request URL: ' + url);\n            request.send(JSON.stringify(params));\n        });\n    });\n}\nexport function yieldDOM() {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => setTimeout(() => resolve()));\n    });\n}\nexport function pause(seconds) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => setTimeout(() => resolve(), seconds * 1000));\n    });\n}\nlet staticScrollerSize = null;\nexport function empiricalScrollerSize() {\n    if (staticScrollerSize)\n        return staticScrollerSize;\n    let outer = dom('<div/>').css({ 'visibility': 'hidden', 'width': '100px', 'height': '100px', 'overflow': 'scroll' }).appendTo(dom(document.body));\n    let inner = dom('<div/>').css({ 'width': '100%', 'height': '100%' }).appendTo(outer);\n    staticScrollerSize = new Size(100 - inner.elHTML.offsetWidth, 100 - inner.elHTML.offsetHeight);\n    outer.remove();\n    return staticScrollerSize;\n}\nexport function stringSimilarityPermutations(str1, str2) {\n    if (!str1 || !str2)\n        return 0;\n    const ch1 = Array.from(str1), len1 = ch1.length;\n    const ch2 = Array.from(str2), len2 = ch2.length;\n    let levenshteinDistance = (sz1, sz2) => {\n        let dist = [];\n        for (let i = 0; i <= sz1; i++) {\n            dist.push(Vec.numberArray(0, sz2 + 1));\n            dist[i][0] = i;\n        }\n        for (let j = 1; j <= sz2; j++)\n            dist[0][j] = j;\n        for (let j = 1; j <= sz2; j++)\n            for (let i = 1; i <= sz1; i++) {\n                let cost = ch1[i - 1] == ch2[j - 1] ? 0 : 1;\n                dist[i][j] = Math.min(Math.min(dist[i - 1][j] + 1, dist[i][j - 1] + 1), dist[i - 1][j - 1] + cost);\n            }\n        return dist[sz1][sz2];\n    };\n    let cost = ch1[len1 - 1] == ch2[len2 - 1] ? 0 : 1;\n    let lev1 = levenshteinDistance(len1 - 1, len2) + 1;\n    let lev2 = levenshteinDistance(len1, len2 - 1) + 1;\n    let lev3 = levenshteinDistance(len1 - 1, len2 - 1) + cost;\n    return Math.min(Math.min(lev1, lev2), lev3);\n}\n//# sourceMappingURL=util.js.map","import { Vec } from '../util/Vec';\nexport class Graph {\n    constructor(sz, edge1, edge2) {\n        this.nbrs = [];\n        this.indices = null;\n        this.labels = null;\n        this.props = null;\n        if (sz != null)\n            for (let n = 0; n < sz; n++)\n                this.nbrs.push([]);\n        if (edge1 != null && edge2 != null) {\n            for (let n = 0; n < edge1.length; n++) {\n                this.nbrs[edge1[n]].push(edge2[n]);\n                this.nbrs[edge2[n]].push(edge1[n]);\n            }\n        }\n    }\n    clone() {\n        let g = new Graph();\n        for (let nbr of this.nbrs)\n            g.nbrs.push(nbr.slice(0));\n        g.indices = this.indices == null ? null : this.indices.slice(0);\n        g.labels = this.labels == null ? null : this.labels.slice(0);\n        g.props = this.props == null ? null : this.props.slice(0);\n        return g;\n    }\n    static fromMolecule(mol) {\n        let g = new Graph();\n        g.indices = [];\n        for (let n = 0; n < mol.numAtoms; n++) {\n            g.nbrs.push([]);\n            g.indices.push(n + 1);\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            g.nbrs[bfr].push(bto);\n            g.nbrs[bto].push(bfr);\n        }\n        return g;\n    }\n    static fromMoleculeMask(mol, mask) {\n        let count = Vec.maskCount(mask);\n        let map = Vec.maskMap(mask);\n        let g = new Graph(count);\n        g.indices = Vec.maskIdx(mask);\n        Vec.addTo(g.indices, 1);\n        for (let n = 0; n < count; n++) {\n            let adj = mol.atomAdjList(g.indices[n]);\n            g.nbrs[n] = [];\n            for (let i = 0; i < adj.length; i++)\n                if (mask[adj[i] - 1])\n                    g.nbrs[n].push(map[adj[i] - 1]);\n        }\n        return g;\n    }\n    static fromNeighbours(nbrs) {\n        let g = new Graph();\n        g.nbrs = nbrs;\n        return g;\n    }\n    toString() {\n        let buff = '#nodes=' + this.nbrs.length;\n        for (let n = 0; n < this.nbrs.length; n++) {\n            buff += ' ' + n + ':{' + this.nbrs[n] + '}';\n            if (n < Vec.len(this.indices))\n                buff += '[i=' + this.indices[n] + ']';\n            if (n < Vec.len(this.labels))\n                buff += '[l=' + this.labels[n] + ']';\n        }\n        return buff;\n    }\n    get numNodes() { return this.nbrs.length; }\n    numEdges(node) { return this.nbrs[node].length; }\n    getEdge(node, edge) { return this.nbrs[node][edge]; }\n    getEdges(node) { return this.nbrs[node]; }\n    getIndex(node) { return this.indices == null ? 0 : this.indices[node]; }\n    setIndex(node, idx) {\n        if (this.indices == null)\n            this.indices = Vec.numberArray(0, this.nbrs.length);\n        this.indices[node] = idx;\n    }\n    getLabel(node) { return this.labels == null ? null : this.labels[node]; }\n    setLabel(node, lbl) {\n        if (this.labels == null)\n            this.labels = Vec.stringArray('', this.nbrs.length);\n        this.labels[node] = lbl;\n    }\n    getProperty(node) { return this.props == null ? null : this.props[node]; }\n    setProperty(node, prp) {\n        if (this.props == null)\n            this.props = new Array(this.nbrs.length);\n        this.props[node] = prp;\n    }\n    addNode() {\n        this.nbrs.push([]);\n        if (this.indices != null)\n            this.indices.push(0);\n        if (this.labels != null)\n            this.labels.push('');\n        if (this.props != null)\n            this.props.push(null);\n        return this.nbrs.length - 1;\n    }\n    hasEdge(node1, node2) {\n        if (this.nbrs[node1].length <= this.nbrs[node2].length)\n            return this.nbrs[node1].indexOf(node2) >= 0;\n        else\n            return this.nbrs[node2].indexOf(node1) >= 0;\n    }\n    addEdge(node1, node2) {\n        this.nbrs[node1].push(node2);\n        this.nbrs[node2].push(node1);\n    }\n    removeEdge(node1, node2) {\n        let i1 = this.nbrs[node1].indexOf(node2), i2 = this.nbrs[node2].indexOf(node1);\n        if (i1 >= 0)\n            this.nbrs[node1].splice(i1, 1);\n        if (i2 >= 0)\n            this.nbrs[node2].splice(i2, 1);\n    }\n    isolateNode(node) {\n        for (let o of this.nbrs[node]) {\n            let i = this.nbrs[o].indexOf(node);\n            if (i >= 0)\n                this.nbrs[o].splice(i, 1);\n        }\n        this.nbrs[node] = [];\n    }\n    keepNodesMask(mask) {\n        const oldsz = this.nbrs.length, newsz = Vec.maskCount(mask);\n        if (newsz == oldsz)\n            return;\n        if (newsz == 0) {\n            this.nbrs = [];\n            this.indices = null;\n            this.labels = null;\n            this.props = null;\n            return;\n        }\n        let newmap = Vec.maskMap(mask);\n        let newnbrs = [];\n        for (let n = 0; n < newsz; n++)\n            newnbrs.push([]);\n        for (let n = 0, pos = 0; n < oldsz; n++)\n            if (mask[n]) {\n                for (let i of this.nbrs[n])\n                    if (mask[i])\n                        newnbrs[pos].push(newmap[i]);\n                pos++;\n            }\n        this.nbrs = newnbrs;\n        if (this.indices != null)\n            this.indices = Vec.maskGet(this.indices, mask);\n        if (this.labels != null)\n            this.labels = Vec.maskGet(this.labels, mask);\n        if (this.props != null)\n            this.props = Vec.maskGet(this.props, mask);\n    }\n    keepNodesIndex(idx) { this.keepNodesMask(Vec.idxMask(idx, this.numNodes)); }\n    removeNodesMask(mask) { this.keepNodesMask(Vec.notMask(mask)); }\n    removeNodesIndex(idx) { this.removeNodesMask(Vec.idxMask(idx, this.numNodes)); }\n    subgraphIndex(idx) {\n        const nsz = idx.length;\n        let g = new Graph(nsz);\n        if (this.indices != null || this.labels != null || this.props != null)\n            for (let n = 0; n < nsz; n++) {\n                if (this.indices != null)\n                    g.setIndex(n, this.indices[idx[n]]);\n                if (this.labels != null)\n                    g.setLabel(n, this.labels[idx[n]]);\n                if (this.props != null)\n                    g.setProperty(n, this.props[idx[n]]);\n            }\n        for (let i = 0; i < nsz; i++) {\n            for (let n of this.nbrs[idx[i]]) {\n                let j = idx.indexOf(n);\n                if (j > i)\n                    g.addEdge(i, j);\n            }\n        }\n        return g;\n    }\n    subgraphMask(mask) {\n        let g = this.clone();\n        g.keepNodesMask(mask);\n        return g;\n    }\n    calculateComponents() {\n        const sz = this.nbrs.length;\n        if (sz == 0)\n            return [];\n        let cc = Vec.numberArray(0, sz);\n        cc[0] = 1;\n        let first = 1, high = 1;\n        while (true) {\n            while (first < sz && cc[first] > 0) {\n                first++;\n            }\n            if (first >= sz)\n                break;\n            let anything = false;\n            for (let i = first; i < sz; i++)\n                if (cc[i] == 0) {\n                    for (let j = 0; j < this.nbrs[i].length; j++) {\n                        if (cc[this.nbrs[i][j]] != 0) {\n                            cc[i] = cc[this.nbrs[i][j]];\n                            anything = true;\n                        }\n                    }\n                }\n            if (!anything)\n                cc[first] = ++high;\n        }\n        return cc;\n    }\n    calculateComponentGroups() {\n        if (this.nbrs.length == 0)\n            return [];\n        let cc = this.calculateComponents();\n        let sz = Vec.max(cc);\n        let grp = [];\n        for (let n = 0; n < sz; n++)\n            grp.push([]);\n        for (let n = 0; n < cc.length; n++)\n            grp[cc[n] - 1].push(n);\n        return grp;\n    }\n    calculateRingBlocks() {\n        let sz = this.numNodes, nbrs = this.nbrs;\n        if (sz == 0)\n            return [[], 0];\n        let rblk = new Array(this.numNodes);\n        let visited = Vec.booleanArray(false, sz);\n        Vec.setTo(rblk, 0);\n        let path = new Array(sz + 1);\n        let plen = 0, numVisited = 0;\n        while (true) {\n            let last, current;\n            if (plen == 0) {\n                last = -1;\n                for (current = 0; visited[current]; current++) { }\n            }\n            else {\n                last = path[plen - 1];\n                current = -1;\n                for (let n = 0; n < nbrs[last].length; n++)\n                    if (!visited[nbrs[last][n]]) {\n                        current = nbrs[last][n];\n                        break;\n                    }\n            }\n            if (current >= 0 && plen >= 2) {\n                let back = path[plen - 1];\n                for (let n = 0; n < nbrs[current].length; n++) {\n                    let join = nbrs[current][n];\n                    if (join != back && visited[join]) {\n                        path[plen] = current;\n                        for (let i = plen; i == plen || path[i + 1] != join; i--) {\n                            let id = rblk[path[i]];\n                            if (id == 0)\n                                rblk[path[i]] = last;\n                            else if (id != last) {\n                                for (let j = 0; j < sz; j++)\n                                    if (rblk[j] == id)\n                                        rblk[j] = last;\n                            }\n                        }\n                    }\n                }\n            }\n            if (current >= 0) {\n                visited[current] = true;\n                path[plen++] = current;\n                numVisited++;\n            }\n            else {\n                plen--;\n            }\n            if (numVisited == sz)\n                break;\n        }\n        let nextID = 0;\n        for (let i = 0; i < sz; i++)\n            if (rblk[i] > 0) {\n                nextID--;\n                for (let j = sz - 1; j >= i; j--)\n                    if (rblk[j] == rblk[i])\n                        rblk[j] = nextID;\n            }\n        for (let i = 0; i < sz; i++)\n            rblk[i] = -rblk[i];\n        return [rblk, -nextID];\n    }\n    calculateRingBlockGroups() {\n        let [rblk, sz] = this.calculateRingBlocks();\n        if (sz == 0)\n            return [];\n        let cap = Vec.numberArray(0, sz);\n        for (let n = 0; n < rblk.length; n++)\n            if (rblk[n] > 0)\n                cap[rblk[n] - 1]++;\n        let grp = new Array(sz);\n        for (let n = 0; n < sz; n++) {\n            grp[n] = new Array(cap[n]);\n            cap[n] = 0;\n        }\n        for (let n = 0; n < rblk.length; n++) {\n            let i = rblk[n] - 1;\n            if (i < 0)\n                continue;\n            grp[i][cap[i]++] = n;\n        }\n        return grp;\n    }\n    findRingsOfSize(size) {\n        let [rblk, num] = this.calculateRingBlocks();\n        if (num == 0)\n            return [];\n        let rings = [];\n        let mask = new Array(this.numNodes);\n        for (let r = 1; r <= num; r++) {\n            for (let n = 0; n < this.numNodes; n++)\n                mask[n] = rblk[n] == r;\n            let newRings = this.findRingsOfSizeMask(size, mask);\n            for (let n = 0; n < newRings.length; n++)\n                rings.push(newRings[n]);\n        }\n        return rings;\n    }\n    findRingsOfSizeMask(size, mask) {\n        let rings = [];\n        for (let n = 0; n < this.numNodes; n++)\n            if (mask[n]) {\n                let path = new Array(size);\n                path[0] = n;\n                this.recursiveRingFind(path, 1, size, mask, rings);\n            }\n        return rings;\n    }\n    calculateBFS(idx) {\n        let ret = Vec.numberArray(-1, this.numNodes);\n        ret[idx] = 0;\n        let curnum = 0, lsz = 1, watermark = 0;\n        let list = Vec.numberArray(0, this.numNodes);\n        list[0] = idx;\n        while (true) {\n            let newsz = lsz;\n            for (let n = watermark; n < lsz; n++) {\n                for (let i = 0; i < this.nbrs[list[n]].length; i++) {\n                    let j = this.nbrs[list[n]][i];\n                    if (ret[j] < 0) {\n                        ret[j] = curnum + 1;\n                        list[newsz++] = j;\n                    }\n                }\n            }\n            if (newsz == lsz)\n                break;\n            watermark = lsz;\n            lsz = newsz;\n            curnum++;\n        }\n        return ret;\n    }\n    calculateGravity() {\n        const sz = this.numNodes;\n        const { nbrs } = this;\n        let wght = Vec.numberArray(1, sz);\n        for (let n = 0; n < sz; n++) {\n            let wmod = Vec.numberArray(0, sz);\n            for (let i = 0; i < sz; i++)\n                for (let j = nbrs[i].length - 1; j >= 0; j--)\n                    wmod[i] += wght[nbrs[i][j]];\n            wght = wmod;\n        }\n        return wght;\n    }\n    calculateShortestPath(node1, node2) {\n        const sz = this.numNodes;\n        let q = new Set();\n        for (let n = 0; n < sz; n++)\n            q.add(n);\n        let dist = Vec.numberArray(Number.MAX_SAFE_INTEGER, sz);\n        let prev = Vec.numberArray(-1, sz);\n        dist[node1] = 0;\n        while (q.size > 0) {\n            let u = -1;\n            for (let i of q)\n                if (u < 0 || dist[i] < dist[u])\n                    u = i;\n            q.delete(u);\n            if (u == node2)\n                break;\n            for (let v of this.nbrs[u]) {\n                let alt = dist[u] + 1;\n                if (alt < dist[v]) {\n                    dist[v] = alt;\n                    prev[v] = u;\n                }\n            }\n        }\n        let path = [];\n        for (let u = node2; prev[u] >= 0; u = prev[u])\n            path.unshift(u);\n        if (path.length > 0)\n            path.unshift(node1);\n        return path.length > 0 ? path : null;\n    }\n    adjacencyMatrix() {\n        const sz = this.numNodes;\n        let mtx = [];\n        for (let n = 0; n < sz; n++)\n            mtx.push(Vec.numberArray(0, sz));\n        for (let i = 0; i < sz; i++)\n            for (let j of this.nbrs[i])\n                mtx[i][j] = mtx[j][i] = 1;\n        return mtx;\n    }\n    distanceMatrix() {\n        const sz = this.numNodes;\n        let mtx = [];\n        for (let n = 0; n < sz; n++)\n            mtx.push(Vec.numberArray(Number.POSITIVE_INFINITY, sz));\n        for (let i = 0; i < sz; i++) {\n            mtx[i][i] = 0;\n            for (let j of this.nbrs[i])\n                mtx[i][j] = mtx[j][i] = 1;\n        }\n        for (let k = 0; k < sz; k++) {\n            for (let i = 0; i < sz; i++)\n                for (let j = 0; j < sz; j++) {\n                    if (!Number.isFinite(mtx[k][j]) || !Number.isFinite(mtx[i][k]))\n                        continue;\n                    mtx[i][j] = Math.min(mtx[i][j], mtx[i][k] + mtx[k][j]);\n                }\n        }\n        return mtx;\n    }\n    recursiveRingFind(path, psize, capacity, mask, rings) {\n        if (psize < capacity) {\n            let last = path[psize - 1];\n            for (let n = 0; n < this.nbrs[last].length; n++) {\n                let adj = this.nbrs[last][n];\n                if (!mask[adj])\n                    continue;\n                let fnd = false;\n                for (let i = 0; i < psize; i++)\n                    if (path[i] == adj) {\n                        fnd = true;\n                        break;\n                    }\n                if (!fnd) {\n                    let newPath = Vec.duplicate(path);\n                    newPath[psize] = adj;\n                    this.recursiveRingFind(newPath, psize + 1, capacity, mask, rings);\n                }\n            }\n            return;\n        }\n        let last = path[psize - 1];\n        let fnd = false;\n        for (let n = 0; n < this.nbrs[last].length; n++)\n            if (this.nbrs[last][n] == path[0]) {\n                fnd = true;\n                break;\n            }\n        if (!fnd)\n            return;\n        for (let n = 0; n < path.length; n++) {\n            let count = 0, p = path[n];\n            for (let i = 0; i < this.nbrs[p].length; i++)\n                if (path.indexOf(this.nbrs[p][i]) >= 0)\n                    count++;\n            if (count != 2)\n                return;\n        }\n        let first = 0;\n        for (let n = 1; n < psize; n++)\n            if (path[n] < path[first])\n                first = n;\n        let fm = (first - 1 + psize) % psize, fp = (first + 1) % psize;\n        let flip = path[fm] < path[fp];\n        if (first != 0 || flip) {\n            let newPath = new Array(psize);\n            for (let n = 0; n < psize; n++)\n                newPath[n] = path[(first + (flip ? psize - n : n)) % psize];\n            path = newPath;\n        }\n        for (let n = 0; n < rings.length; n++) {\n            let look = rings[n];\n            let same = true;\n            for (let i = 0; i < psize; i++)\n                if (look[i] != path[i]) {\n                    same = false;\n                    break;\n                }\n            if (same)\n                return;\n        }\n        rings.push(path);\n    }\n}\n//# sourceMappingURL=Graph.js.map","import { Chemistry } from '../mol/Chemistry';\nimport { Graph } from '../mol/Graph';\nimport { Molecule } from '../mol/Molecule';\nimport { Vec } from '../util/Vec';\nexport class ResonanceRemover {\n    constructor(mol, resBonds, atomHyd = []) {\n        this.mol = mol;\n        this.resBonds = resBonds;\n        this.atomHyd = atomHyd;\n        this.maxIter = 1000;\n        this.bondOrders = [];\n        this.tolerant = false;\n        this.mol = mol;\n        this.resBonds = resBonds;\n        this.atomHyd = atomHyd;\n        for (let n = 1; n <= mol.numBonds; n++)\n            this.bondOrders.push(mol.bondOrder(n));\n    }\n    perform() {\n        const { mol } = this;\n        if (this.atomHyd == null) {\n            this.atomHyd = [];\n            for (let n = 1; n <= mol.numAtoms; n++)\n                this.atomHyd.push(mol.atomHExplicit(n));\n        }\n        this.correctInputMask();\n        let g = new Graph(mol.numAtoms);\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.resBonds[n - 1])\n                g.addEdge(mol.bondFrom(n) - 1, mol.bondTo(n) - 1);\n        let cc = g.calculateComponentGroups();\n        for (let n = 0; n < cc.length; n++)\n            if (cc[n].length >= 2)\n                this.processComponent(cc[n]);\n    }\n    correctInputMask() {\n        const { mol, atomHyd } = this;\n        const na = mol.numAtoms, nb = mol.numBonds;\n        let exclude = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++) {\n            let atno = mol.atomicNumber(n);\n            let val = atno == Chemistry.ELEMENT_C ? 4 :\n                atno == Chemistry.ELEMENT_N || atno == Chemistry.ELEMENT_P || atno == Chemistry.ELEMENT_B ? 3 :\n                    atno == Chemistry.ELEMENT_O || atno == Chemistry.ELEMENT_S ? 2 : -1;\n            if (val < 0) {\n                exclude[n - 1] = true;\n                continue;\n            }\n            val += mol.atomCharge(n);\n            if (atomHyd[n - 1] > 0)\n                val -= atomHyd[n - 1];\n            if (mol.atomAdjCount(n) >= val)\n                exclude[n - 1] = true;\n        }\n        for (let n = 1; n <= nb; n++)\n            if (!this.resBonds[n - 1] && mol.bondOrder(n) != 1) {\n                exclude[mol.bondFrom(n) - 1] = true;\n                exclude[mol.bondTo(n) - 1] = true;\n            }\n        this.resBonds = this.resBonds.slice(0);\n        for (let n = 0; n < nb; n++)\n            if (this.resBonds[n] && (exclude[mol.bondFrom(n + 1) - 1] || exclude[mol.bondTo(n + 1) - 1])) {\n                this.bondOrders[n] = 1;\n                this.resBonds[n] = false;\n            }\n    }\n    processComponent(nodes) {\n        const { mol, resBonds, bondOrders, atomHyd } = this;\n        let sz = nodes.length;\n        if (sz == 2) {\n            let b = mol.findBond(nodes[0] + 1, nodes[1] + 1);\n            bondOrders[b - 1] = 2;\n            return;\n        }\n        let optionalH = Vec.booleanArray(false, sz);\n        for (let n = 0; n < sz; n++) {\n            let i = nodes[n], a = i + 1;\n            optionalH[n] = atomHyd[i] == Molecule.HEXPLICIT_UNKNOWN && mol.atomElement(a) == 'N' && mol.atomAdjCount(a) - mol.atomCharge(a) <= 2;\n        }\n        let g = new Graph(sz);\n        let gravity = g.calculateGravity();\n        let mask = Vec.idxMask(nodes, mol.numAtoms);\n        let bsz = 0;\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (resBonds[n - 1] && mask[mol.bondFrom(n) - 1] && mask[mol.bondTo(n) - 1])\n                bsz++;\n        let bfr = Vec.numberArray(0, bsz), bto = Vec.numberArray(0, bsz), bgrav = Vec.numberArray(0, bsz), bidx = Vec.numberArray(0, bsz);\n        bsz = 0;\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (resBonds[n - 1] && mask[mol.bondFrom(n) - 1] && mask[mol.bondTo(n) - 1]) {\n                let f = nodes.indexOf(mol.bondFrom(n) - 1), t = nodes.indexOf(mol.bondTo(n) - 1);\n                bfr[bsz] = f;\n                bto[bsz] = t;\n                bgrav[bsz] = gravity[f] + gravity[t];\n                bidx[bsz] = n;\n                g.addEdge(f, t);\n                bsz++;\n            }\n        let seq = Vec.numberArray(0, bsz);\n        seq[0] = Vec.idxMax(bgrav);\n        let visited = Vec.booleanArray(false, bsz);\n        visited[seq[0]] = true;\n        for (let i = 1; i < bsz; i++) {\n            let b = -1;\n            for (let j = i - 1; j >= 0; j--) {\n                for (let n = 0; n < bsz; n++) {\n                    if (!visited[n])\n                        if (bfr[n] == bfr[seq[j]] || bfr[n] == bto[seq[j]] || bto[n] == bfr[seq[j]] || bto[n] == bto[seq[j]]) {\n                            if (b < 0 || bgrav[n] > bgrav[b])\n                                b = n;\n                        }\n                }\n                if (b >= 0)\n                    break;\n            }\n            if (b < 0)\n                throw 'Graph walk failed';\n            seq[i] = b;\n            visited[b] = true;\n        }\n        let paths = [];\n        paths.push([true]);\n        paths.push([false]);\n        let result = null;\n        let resultCount = 0;\n        let definiteMatch = Math.ceil(0.5 * bsz);\n        let iter = 0;\n        while (paths.length > 0) {\n            let p = paths[0];\n            let p1 = Vec.append(p, false), p2 = Vec.append(p, true);\n            if (!this.validPath(p1, seq, bfr, bto, g, optionalH))\n                p1 = null;\n            if (!this.validPath(p2, seq, bfr, bto, g, optionalH))\n                p2 = null;\n            if (Vec.len(p1) == bsz) {\n                let c = Vec.maskCount(p1);\n                if (c > resultCount) {\n                    result = p1;\n                    resultCount = c;\n                }\n                p1 = null;\n            }\n            if (Vec.len(p2) == bsz) {\n                let c = Vec.maskCount(p2);\n                if (c > resultCount) {\n                    result = p2;\n                    resultCount = c;\n                }\n                p2 = null;\n            }\n            if (resultCount >= definiteMatch)\n                break;\n            if (p1 == null && p2 == null)\n                paths.shift();\n            else if (p1 != null && p2 != null) {\n                paths[0] = p1;\n                paths.splice(1, 0, p2);\n            }\n            else if (p1 != null)\n                paths[0] = p1;\n            else\n                paths[0] = p2;\n            iter++;\n            if (iter > this.maxIter) {\n                if (result != null)\n                    break;\n                if (this.tolerant)\n                    return;\n                throw 'Resonance localisation exceeded maximum iteration count';\n            }\n        }\n        if (result == null) {\n            if (this.tolerant)\n                return;\n            throw 'Unable to find a solution to the resonance block.';\n        }\n        for (let n = 0; n < bsz; n++)\n            bondOrders[bidx[seq[n]] - 1] = result[n] ? 2 : 1;\n    }\n    validPath(path, seq, bfr, bto, g, optionalH) {\n        let sz = g.numNodes;\n        let count1 = Vec.numberArray(0, sz), count2 = Vec.numberArray(0, sz);\n        for (let n = 0; n < path.length; n++) {\n            let a1 = bfr[seq[n]], a2 = bto[seq[n]];\n            if (path[n]) {\n                count2[a1]++;\n                count2[a2]++;\n            }\n            else {\n                count1[a1]++;\n                count1[a2]++;\n            }\n        }\n        for (let n = 0; n < sz; n++) {\n            if (count2[n] > 1)\n                return false;\n            if (!optionalH[n] && g.numEdges(n) > 1 && count1[n] == g.numEdges(n))\n                return false;\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=ResonanceRemover.js.map","import { safeInt } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Graph } from './Graph';\nexport const BONDARTIFACT_EXTRA_RESPATH = 'xRESPATH:';\nexport const BONDARTIFACT_EXTRA_RESRING = 'xRESRING:';\nexport const BONDARTIFACT_EXTRA_ARENE = 'xARENE:';\nexport class BondArtifact {\n    constructor(mol) {\n        this.mol = mol;\n        this.resPaths = new Map();\n        this.resRings = new Map();\n        this.arenes = new Map();\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            for (let str of this.mol.atomExtra(n)) {\n                if (str.startsWith(BONDARTIFACT_EXTRA_RESPATH))\n                    this.appendResPath(n, str.substring(BONDARTIFACT_EXTRA_RESPATH.length).split(':'));\n                else if (str.startsWith(BONDARTIFACT_EXTRA_RESRING))\n                    this.appendResRing(n, str.substring(BONDARTIFACT_EXTRA_RESRING.length).split(':'));\n                else if (str.startsWith(BONDARTIFACT_EXTRA_ARENE))\n                    this.appendArene(n, str.substring(BONDARTIFACT_EXTRA_ARENE.length).split(':'));\n            }\n        }\n        for (let [blk, res] of this.resPaths.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (!this.pathify(res.atoms, false))\n                this.resPaths.delete(blk);\n        }\n        for (let [blk, res] of this.resRings.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (!this.pathify(res.atoms, true))\n                this.resRings.delete(blk);\n        }\n        for (let [blk, res] of this.arenes.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (res.atoms.length > 1)\n                res.centre = res.atoms.shift();\n            if (!this.pathify(res.atoms, false))\n                this.arenes.delete(blk);\n        }\n    }\n    getPathBlocks() { return Array.from(this.resPaths.keys()); }\n    getRingBlocks() { return Array.from(this.resRings.keys()); }\n    getAreneBlocks() { return Array.from(this.arenes.keys()); }\n    getResPaths() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.resPaths.keys())))\n            list.push(this.resPaths.get(key));\n        return list;\n    }\n    getResRings() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.resRings.keys())))\n            list.push(this.resRings.get(key));\n        return list;\n    }\n    getArenes() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.arenes.keys())))\n            list.push(this.arenes.get(key));\n        return list;\n    }\n    rewriteMolecule() {\n        const mol = this.mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n), modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (extra[i].startsWith(BONDARTIFACT_EXTRA_RESPATH) || extra[i].startsWith(BONDARTIFACT_EXTRA_RESRING) || extra[i].startsWith(BONDARTIFACT_EXTRA_ARENE)) {\n                    extra.splice(i);\n                    modified = true;\n                }\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n        for (let [blk, path] of this.resPaths.entries()) {\n            for (let n = 0; n < path.atoms.length; n++) {\n                let extra = mol.atomExtra(path.atoms[n]);\n                extra.push(BONDARTIFACT_EXTRA_RESPATH + blk + ':' + (n + 1));\n                mol.setAtomExtra(path.atoms[n], extra);\n            }\n        }\n        for (let [blk, ring] of this.resRings.entries()) {\n            for (let n = 0; n < ring.atoms.length; n++) {\n                let extra = mol.atomExtra(ring.atoms[n]);\n                extra.push(BONDARTIFACT_EXTRA_RESRING + blk + ':' + (n + 1));\n                mol.setAtomExtra(ring.atoms[n], extra);\n            }\n        }\n        for (let [blk, arene] of this.arenes.entries()) {\n            for (let n = -1; n < arene.atoms.length; n++) {\n                let atom = n < 0 ? arene.centre : arene.atoms[n];\n                let extra = mol.atomExtra(atom);\n                extra.push(BONDARTIFACT_EXTRA_ARENE + blk + ':' + (n + 2));\n                mol.setAtomExtra(atom, extra);\n            }\n        }\n    }\n    harmoniseNumbering(other) {\n        let blocks = other.getPathBlocks();\n        let stashPaths = this.getResPaths();\n        this.resPaths.clear();\n        for (let path of stashPaths) {\n            let blk = this.nextIdentifier(blocks);\n            this.resPaths.set(blk, path);\n            blocks.push(blk);\n        }\n        blocks = other.getRingBlocks();\n        let stashRings = this.getResRings();\n        this.resRings.clear();\n        for (let ring of stashRings) {\n            let blk = this.nextIdentifier(blocks);\n            this.resRings.set(blk, ring);\n            blocks.push(blk);\n        }\n        blocks = other.getAreneBlocks();\n        let stashArenes = this.getArenes();\n        this.arenes.clear();\n        for (let arene of stashArenes) {\n            let blk = this.nextIdentifier(blocks);\n            this.arenes.set(blk, arene);\n            blocks.push(blk);\n        }\n    }\n    createPath(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let path = this.atomsAsPath(atoms);\n        if (path) {\n            let id = this.nextIdentifier(Array.from(this.resPaths.keys()));\n            this.resPaths.set(id, path);\n            return true;\n        }\n        return false;\n    }\n    createRing(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let ring = this.atomsAsRing(atoms);\n        if (ring) {\n            let id = this.nextIdentifier(Array.from(this.resRings.keys()));\n            this.resRings.set(id, ring);\n            return true;\n        }\n        return false;\n    }\n    createArene(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let arene = this.atomsAsArene(atoms);\n        if (arene) {\n            let id = this.nextIdentifier(Array.from(this.arenes.keys()));\n            this.arenes.set(id, arene);\n            return true;\n        }\n        return false;\n    }\n    removeArtifact(atoms) {\n        let type = 0, pick = 0, overlap = 0;\n        for (let [blk, path] of this.resPaths.entries()) {\n            let count = 0;\n            for (let a of path.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 1;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        for (let [blk, ring] of this.resRings.entries()) {\n            let count = 0;\n            for (let a of ring.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 2;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        for (let [blk, arene] of this.arenes.entries()) {\n            let count = atoms.indexOf(arene.centre) >= 0 ? 1 : 0;\n            for (let a of arene.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 3;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        if (type == 0)\n            return false;\n        else if (type == 1)\n            this.resPaths.delete(pick);\n        else if (type == 2)\n            this.resRings.delete(pick);\n        else if (type == 3)\n            this.arenes.delete(pick);\n        return true;\n    }\n    static removeAll(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (!extra[i].startsWith(BONDARTIFACT_EXTRA_RESPATH) && !extra[i].startsWith(BONDARTIFACT_EXTRA_RESRING) &&\n                    !extra[i].startsWith(BONDARTIFACT_EXTRA_ARENE))\n                    continue;\n                extra = Vec.remove(extra, i);\n                modified = true;\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n    }\n    appendResPath(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.resPaths.get(blk);\n        if (res == null)\n            this.resPaths.set(blk, res = { atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    appendResRing(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.resRings.get(blk);\n        if (res == null)\n            this.resRings.set(blk, res = { atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    appendArene(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.arenes.get(blk);\n        if (res == null)\n            this.arenes.set(blk, res = { centre: 0, atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    pack(arr) {\n        let ret = [];\n        for (let v of arr)\n            if (v != 0)\n                ret.push(v);\n        return ret;\n    }\n    pathify(atoms, requireRing) {\n        let sz = atoms.length;\n        if (sz < 2)\n            return false;\n        let g = Graph.fromMolecule(this.mol);\n        for (let n = 0; n < this.mol.numAtoms; n++)\n            g.setIndex(n, n + 1);\n        g = g.subgraphIndex(Vec.add(atoms, -1));\n        let pos = 0;\n        for (let n = 1; n < sz; n++)\n            if (g.numEdges(n) < g.numEdges(pos))\n                pos = n;\n        Vec.setTo(atoms, -1);\n        for (let n = 0; n < sz; n++) {\n            atoms[n] = pos;\n            if (n == sz - 1) {\n                if (requireRing)\n                    if (g.getEdges(pos).indexOf(atoms[0]) < 0)\n                        return false;\n            }\n            else {\n                let next = sz;\n                for (let i of g.getEdges(pos))\n                    if (atoms.indexOf(i) < 0 && i < next)\n                        next = i;\n                if (next == sz)\n                    return false;\n                pos = next;\n            }\n        }\n        for (let n = 0; n < sz; n++)\n            atoms[n] = g.getIndex(atoms[n]);\n        return true;\n    }\n    alreadyExists(atoms) {\n        atoms = Vec.sorted(atoms);\n        for (let path of this.resPaths.values()) {\n            if (Vec.equals(atoms, Vec.sorted(path.atoms)))\n                return true;\n        }\n        for (let ring of this.resRings.values()) {\n            if (Vec.equals(atoms, Vec.sorted(ring.atoms)))\n                return true;\n        }\n        for (let arene of this.arenes.values()) {\n            let areneAtoms = Vec.append(arene.atoms, arene.centre);\n            if (Vec.equals(atoms, Vec.sorted(areneAtoms)))\n                return true;\n        }\n        return false;\n    }\n    atomsAsPath(atoms) {\n        if (atoms.length < 2)\n            return null;\n        let path = { atoms: atoms };\n        if (!this.pathify(path.atoms, false))\n            return null;\n        return path;\n    }\n    atomsAsRing(atoms) {\n        if (atoms.length < 3)\n            return null;\n        let ring = { atoms: atoms };\n        if (!this.pathify(ring.atoms, true))\n            return null;\n        return ring;\n    }\n    atomsAsArene(atoms) {\n        const sz = atoms.length;\n        if (sz < 3)\n            return null;\n        let g = Graph.fromMolecule(this.mol).subgraphIndex(Vec.add(atoms, -1));\n        let best = 0;\n        if (sz == 3) {\n            let bsum = [0, 0, 0];\n            for (let n = 0; n < sz; n++) {\n                if (g.numEdges(n) != 2)\n                    return null;\n                for (let e of g.getEdges(n))\n                    bsum[n] += this.mol.bondOrder(this.mol.findBond(atoms[n], atoms[e]));\n                best = Vec.idxMin(bsum);\n            }\n        }\n        else {\n            for (let n = 1; n < sz; n++)\n                if (g.numEdges(n) > g.numEdges(best))\n                    best = n;\n        }\n        let arene = { centre: atoms[best], atoms: Vec.remove(atoms, best) };\n        if (!this.pathify(arene.atoms, false))\n            return null;\n        return arene;\n    }\n    nextIdentifier(inkeys) {\n        if (inkeys.length == 0)\n            return 1;\n        let keys = Vec.sorted(inkeys);\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=BondArtifact.js.map","import { deepClone, safeFloat, safeInt } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Molecule } from '../mol/Molecule';\nexport var DataSheetColumn;\n(function (DataSheetColumn) {\n    DataSheetColumn[\"Molecule\"] = \"molecule\";\n    DataSheetColumn[\"String\"] = \"string\";\n    DataSheetColumn[\"Real\"] = \"real\";\n    DataSheetColumn[\"Integer\"] = \"integer\";\n    DataSheetColumn[\"Boolean\"] = \"boolean\";\n    DataSheetColumn[\"Extend\"] = \"extend\";\n})(DataSheetColumn || (DataSheetColumn = {}));\nexport class DataSheet {\n    constructor(data) {\n        if (!data)\n            data = {};\n        if (!data.title)\n            data.title = '';\n        if (!data.description)\n            data.description = '';\n        if (data.numCols == null)\n            data.numCols = Vec.len(data.colData);\n        if (data.numRows == null)\n            data.numRows = Vec.len(data.rowData);\n        if (data.numExtens == null)\n            data.numExtens = Vec.len(data.extData);\n        if (data.colData == null)\n            data.colData = [];\n        if (data.rowData == null)\n            data.rowData = [];\n        if (data.extData == null)\n            data.extData = [];\n        this.data = data;\n    }\n    clone(withRows = true) {\n        let { numCols, numRows, colData, rowData } = this.data;\n        let data = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: numCols,\n            numRows: withRows ? numRows : 0,\n            numExtens: this.data.numExtens,\n            colData: deepClone(colData),\n            rowData: withRows ? new Array(numRows) : [],\n            extData: deepClone(this.data.extData),\n        };\n        if (withRows)\n            for (let r = 0; r < numRows; r++) {\n                let inRow = rowData[r], outRow = new Array(numCols);\n                for (let c = 0; c < numCols; c++) {\n                    if (inRow[c] != null && colData[c].type == \"molecule\" && inRow[c] instanceof Molecule)\n                        outRow[c] = inRow[c].clone();\n                    else\n                        outRow[c] = inRow[c];\n                }\n                data.rowData[r] = outRow;\n            }\n        return new DataSheet(data);\n    }\n    cloneMask(colMask, rowMask = null, inclExtn = true) {\n        let { numCols, numRows, colData, rowData } = this.data;\n        let data = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: Vec.maskCount(colMask),\n            numRows: rowMask ? Vec.maskCount(rowMask) : 0,\n            numExtens: inclExtn ? this.data.numExtens : 0,\n            colData: deepClone(Vec.maskGet(colData, colMask)),\n            rowData: [],\n            extData: inclExtn ? deepClone(this.data.extData) : [],\n        };\n        if (rowMask)\n            for (let r = 0; r < numRows; r++)\n                if (rowMask[r]) {\n                    let inRow = rowData[r], outRow = Vec.maskGet(inRow, colMask);\n                    data.rowData.push(outRow);\n                }\n        const { colData: outCols, rowData: outRows } = data;\n        for (let c = outCols.length - 1; c >= 0; c--)\n            if (outCols[c].type == \"molecule\") {\n                for (let r = outRows.length - 1; r >= 0; r--)\n                    if (outRows[r][c] != null && outRows[r][c] instanceof Molecule)\n                        outRows[r][c] = outRows[r][c].clone();\n            }\n        return new DataSheet(data);\n    }\n    getData() {\n        return this.data;\n    }\n    get numCols() {\n        return this.data.numCols;\n    }\n    get numRows() {\n        return this.data.numRows;\n    }\n    get title() { return this.data.title; }\n    set title(title) { this.data.title = title; }\n    get description() { return this.data.description; }\n    set description(description) { this.data.description = description; }\n    get numExtensions() {\n        return this.data.numExtens;\n    }\n    getExtName(idx) {\n        return this.data.extData[idx].name;\n    }\n    getExtType(idx) {\n        return this.data.extData[idx].type;\n    }\n    getExtData(idx) {\n        return this.data.extData[idx].data;\n    }\n    setExtName(idx, val) {\n        this.data.extData[idx].name = val;\n    }\n    setExtType(idx, val) {\n        this.data.extData[idx].type = val;\n    }\n    setExtData(idx, val) {\n        this.data.extData[idx].data = val;\n    }\n    appendExtension(name, type, data) {\n        this.data.numExtens++;\n        this.data.extData.push({ name, type, data });\n        return this.data.numExtens - 1;\n    }\n    insertExtension(idx, name, type, data) {\n        this.data.numExtens++;\n        this.data.extData.splice(idx, 0, { name, type, data });\n    }\n    deleteExtension(idx) {\n        this.data.extData.splice(idx, 1);\n        this.data.numExtens--;\n    }\n    colName(col) {\n        return this.data.colData[col].name;\n    }\n    colType(col) {\n        return this.data.colData[col].type;\n    }\n    colDescr(col) {\n        return this.data.colData[col].descr;\n    }\n    isNull(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col] == null;\n    }\n    notNull(row, col) {\n        return !this.isNull(row, col);\n    }\n    isBlank(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col))\n            return true;\n        let ct = this.colType(col);\n        if (ct == \"molecule\")\n            return this.getMolecule(row, col).numAtoms == 0;\n        if (ct == \"string\")\n            return this.getString(row, col).length == 0;\n        if (ct == \"extend\")\n            return this.getExtend(row, col).length == 0;\n        return false;\n    }\n    notBlank(row, col) {\n        return !this.isBlank(row, col);\n    }\n    getObject(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        return this.data.rowData[row][col];\n    }\n    getMolecule(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        let datum = this.data.rowData[row][col];\n        if (datum == null)\n            return null;\n        if (typeof datum === 'string') {\n            datum = Molecule.fromString(datum);\n            this.data.rowData[row][col] = datum;\n        }\n        return datum;\n    }\n    getMoleculeClone(row, col) {\n        let mol = this.getMolecule(row, col);\n        return mol == null ? null : mol.clone();\n    }\n    getMoleculeBlank(row, col) {\n        let mol = this.getMolecule(row, col);\n        return mol ? mol : new Molecule();\n    }\n    getString(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        let str = this.data.rowData[row][col];\n        return str == null ? '' : str;\n    }\n    getInteger(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getReal(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getBoolean(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getExtend(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    setToNull(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = null;\n    }\n    setObject(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setMolecule(row, col, mol) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = mol ? mol.clone() : null;\n    }\n    setString(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setInteger(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setReal(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setBoolean(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setExtend(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    isEqualMolecule(row, col, mol) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (mol == null))\n            return false;\n        if (mol == null)\n            return true;\n        return this.getMolecule(row, col).compareTo(mol) == 0;\n    }\n    isEqualString(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null || val == ''))\n            return false;\n        if (val == null || val == '')\n            return true;\n        return this.getString(row, col) == val;\n    }\n    isEqualInteger(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getInteger(row, col) == val;\n    }\n    isEqualReal(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getReal(row, col) == val;\n    }\n    isEqualBoolean(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getBoolean(row, col) == val;\n    }\n    appendColumn(name, type, descr) {\n        this.data.numCols++;\n        this.data.colData.push({ name, type, descr });\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].push(null);\n        return this.data.numCols - 1;\n    }\n    insertColumn(col, name, type, descr) {\n        this.data.numCols++;\n        this.data.colData.splice(col, 0, { name, type, descr });\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].splice(col, 0, null);\n    }\n    deleteColumn(col) {\n        this.data.numCols--;\n        this.data.colData.splice(col, 1);\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].splice(col, 1);\n    }\n    changeColumnName(col, name, descr) {\n        this.data.colData[col].name = name;\n        this.data.colData[col].descr = descr;\n    }\n    changeColumnType(col, newType) {\n        let oldType = this.colType(col);\n        if (oldType == newType)\n            return;\n        let incompatible = oldType == \"molecule\" || newType == \"molecule\" ||\n            oldType == \"extend\" || newType == \"extend\";\n        for (let n = this.data.rowData.length - 1; n >= 0; n--) {\n            let row = this.data.rowData[n];\n            if (row[col] == null)\n                continue;\n            if (incompatible) {\n                row[col] = null;\n                continue;\n            }\n            let val = '';\n            if (oldType == \"string\")\n                val = row[col];\n            else if (oldType == \"integer\")\n                val = row[col].toString();\n            else if (oldType == \"real\")\n                val = row[col].toString();\n            else if (oldType == \"boolean\")\n                val = row[col] ? 'true' : 'false';\n            row[col] = null;\n            if (newType == \"string\")\n                row[col] = val;\n            else if (newType == \"integer\") {\n                let num = parseInt(val);\n                row[col] = isFinite(num) ? num : null;\n            }\n            else if (newType == \"real\") {\n                let num = parseFloat(val);\n                row[col] = isFinite(num) ? num : null;\n            }\n            else if (newType == \"boolean\")\n                row[col] = val.toLowerCase() == 'true' ? true : false;\n        }\n        this.data.colData[col].type = newType;\n    }\n    ensureColumn(name, type, descr) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].name == name) {\n                if (this.data.colData[n].type != type)\n                    this.changeColumnType(n, type);\n                this.data.colData[n].descr = descr;\n                return n;\n            }\n        return this.appendColumn(name, type, descr);\n    }\n    reorderColumns(order) {\n        let identity = true;\n        for (let n = 0; n < order.length - 1; n++)\n            if (order[n] != order[n + 1] - 1) {\n                identity = false;\n                break;\n            }\n        if (identity)\n            return;\n        this.data.colData = Vec.idxGet(this.data.colData, order);\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n] = Vec.idxGet(this.data.rowData[n], order);\n    }\n    appendRow() {\n        this.data.numRows++;\n        let row = new Array();\n        for (let n = 0; n < this.data.numCols; n++)\n            row.push(null);\n        this.data.rowData.push(row);\n        return this.data.numRows - 1;\n    }\n    appendRowFrom(srcDS, row) {\n        this.data.numRows++;\n        this.data.rowData.push(srcDS.data.rowData[row].slice(0));\n        return this.data.numRows - 1;\n    }\n    insertRow(row) {\n        this.data.numRows++;\n        let data = new Array();\n        for (let n = 0; n < this.data.numCols; n++)\n            data.push(null);\n        this.data.rowData.splice(row, 0, data);\n    }\n    deleteRow(row) {\n        this.data.numRows--;\n        this.data.rowData.splice(row, 1);\n    }\n    deleteAllRows() {\n        this.data.numRows = 0;\n        this.data.rowData = new Array();\n    }\n    moveRowUp(row) {\n        let data = this.data.rowData[row];\n        this.data.rowData[row] = this.data.rowData[row - 1];\n        this.data.rowData[row - 1] = data;\n    }\n    moveRowDown(row) {\n        let data = this.data.rowData[row];\n        this.data.rowData[row] = this.data.rowData[row + 1];\n        this.data.rowData[row + 1] = data;\n    }\n    swapRows(row1, row2) {\n        Vec.swap(this.data.rowData, row1, row2);\n    }\n    exciseSingleRow(row) {\n        let newData = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: this.data.numCols,\n            numRows: 1,\n            numExtens: this.data.numExtens,\n            colData: this.data.colData.slice(0),\n            rowData: [this.data.rowData[row].slice(0)],\n            extData: this.data.extData.slice(0)\n        };\n        return new DataSheet(newData);\n    }\n    colIsPrimitive(col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        let ct = this.data.colData[col].type;\n        return ct == 'string' || ct == 'real' || ct == 'integer' || ct == 'boolean';\n    }\n    findColByName(name, type) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].name == name) {\n                if (type == null || this.data.colData[n].type == type)\n                    return n;\n            }\n        return -1;\n    }\n    firstColOfType(type) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].type == type)\n                return n;\n        return -1;\n    }\n    copyCell(toRow, toCol, fromDS, fromRow, fromCol) {\n        this.setToNull(toRow, toCol);\n        if (fromDS.isNull(fromRow, fromCol))\n            return;\n        let obj = fromDS.getObject(fromRow, fromCol);\n        this.setObject(toRow, toCol, DataSheet.convertType(obj, fromDS.colType(fromCol), this.colType(toCol)));\n    }\n    static convertType(obj, fromType, toType) {\n        const ft = fromType, tt = toType;\n        if (obj == null || ft == tt || (typeof obj == 'string' && obj == ''))\n            return obj;\n        if (tt == \"string\") {\n            if (ft == \"integer\")\n                return obj.toString();\n            else if (ft == \"real\")\n                return obj.toString();\n            else if (ft == \"boolean\")\n                return obj ? 'true' : 'false';\n        }\n        else if (tt == \"real\") {\n            if (ft == \"string\")\n                return safeFloat(obj, null);\n            else if (ft == \"integer\")\n                return obj;\n            else if (ft == \"boolean\")\n                return obj ? 1 : 0;\n        }\n        else if (tt == \"integer\") {\n            if (ft == \"string\")\n                return safeInt(obj, null);\n            else if (ft == \"real\")\n                return Math.round(obj);\n            else if (ft == \"boolean\")\n                return obj ? 1 : 0;\n        }\n        else if (tt == \"boolean\") {\n            if (ft == \"string\")\n                return obj.toLowerCase() == 'true';\n            else if (ft == \"integer\")\n                return obj > 0;\n            else if (ft == \"real\")\n                return obj >= 0.5;\n        }\n        return null;\n    }\n    toString(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : obj.toString();\n    }\n    toInt(row, col) {\n        if (!this.colIsPrimitive(col))\n            return null;\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : parseInt(obj);\n    }\n    toReal(row, col) {\n        if (!this.colIsPrimitive(col))\n            return null;\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : parseFloat(obj);\n    }\n}\n//# sourceMappingURL=DataSheet.js.map","import { Vec } from '../util/Vec';\nexport var ForeignMoleculeTransient;\n(function (ForeignMoleculeTransient) {\n    ForeignMoleculeTransient[\"AtomAromatic\"] = \"yAROMATIC\";\n    ForeignMoleculeTransient[\"BondAromatic\"] = \"yAROMATIC\";\n    ForeignMoleculeTransient[\"BondZeroDative\"] = \"yZERO_DATIVE\";\n    ForeignMoleculeTransient[\"BondZeroHydrogen\"] = \"yZERO_HYDROGEN\";\n    ForeignMoleculeTransient[\"AtomChiralMDLOdd\"] = \"yCHIRAL_MDL_ODD\";\n    ForeignMoleculeTransient[\"AtomChiralMDLEven\"] = \"yCHIRAL_MDL_EVEN\";\n    ForeignMoleculeTransient[\"AtomChiralMDLRacemic\"] = \"yCHIRAL_MDL_RACEMIC\";\n    ForeignMoleculeTransient[\"AtomExplicitValence\"] = \"yMDL_EXPLICIT_VALENCE\";\n    ForeignMoleculeTransient[\"AtomSgroupMultiAttach\"] = \"yMDL_SGROUP_MULTIATTACH\";\n    ForeignMoleculeTransient[\"AtomSgroupMultiRepeat\"] = \"yMDL_SGROUP_MULTIREPEAT\";\n    ForeignMoleculeTransient[\"AtomSgroupData\"] = \"yMDL_SGROUP_DATA\";\n    ForeignMoleculeTransient[\"AtomSCSRClass\"] = \"yMDL_SCSR_CLASS\";\n    ForeignMoleculeTransient[\"AtomSCSRSeqID\"] = \"yMDL_SCSR_SEQID\";\n    ForeignMoleculeTransient[\"AtomSCSRAttchOrd\"] = \"yMDL_SCSR_ATTCHORD\";\n})(ForeignMoleculeTransient || (ForeignMoleculeTransient = {}));\nexport class ForeignMolecule {\n    static noteAromaticAtoms(mol) {\n        const sz = mol.numAtoms;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.atomTransient(n).indexOf(ForeignMoleculeTransient.AtomAromatic) >= 0;\n        return mask;\n    }\n    static noteAromaticBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).indexOf(ForeignMoleculeTransient.BondAromatic) >= 0;\n        return mask;\n    }\n    static noteZeroDativeBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).includes(ForeignMoleculeTransient.BondZeroDative);\n        return mask;\n    }\n    static noteZeroHydrogenBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).includes(ForeignMoleculeTransient.BondZeroHydrogen);\n        return mask;\n    }\n    static markExplicitValence(mol, atom, valence) {\n        let trans = mol.atomTransient(atom).filter((tr) => !tr.startsWith(ForeignMoleculeTransient.AtomExplicitValence + ':'));\n        trans.push(`${ForeignMoleculeTransient.AtomExplicitValence}:${valence}`);\n        mol.setAtomTransient(atom, trans);\n    }\n    static noteExplicitValence(mol, atom) {\n        let trans = mol.atomTransient(atom);\n        for (let tr of trans)\n            if (tr.startsWith(ForeignMoleculeTransient.AtomExplicitValence + ':'))\n                return parseInt(tr.substring(ForeignMoleculeTransient.AtomExplicitValence.length + 1));\n        return null;\n    }\n    static markSgroupMultiAttach(mol, name, atoms, keyval = {}) {\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiAttach.length + 1);\n                    let comma = payload.indexOf(',');\n                    let bits = payload.split(',');\n                    let idx = parseInt(bits[0]);\n                    if (!(idx > 0))\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let tag = `${ForeignMoleculeTransient.AtomSgroupMultiAttach}:${idxHigh + 1},${name}`;\n        for (let [key, val] of Object.entries(keyval))\n            tag += ',' + key + '=' + val;\n        for (let a of atoms)\n            mol.setAtomTransient(a, Vec.append(mol.atomTransient(a), tag));\n    }\n    static hasAnySgroupMultiAttach(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupMultiAttach(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiAttach.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 2)\n                        continue;\n                    let idx = parseInt(bits[0]), name = bits[1];\n                    if (!(idx > 0) || !name)\n                        continue;\n                    let keyval = {};\n                    for (let i = 2; i < bits.length; i++) {\n                        let eq = bits[i].indexOf('=');\n                        if (eq < 0)\n                            continue;\n                        keyval[bits[i].substring(0, eq)] = bits[i].substring(eq + 1);\n                    }\n                    let sgm = map[idx];\n                    if (sgm)\n                        sgm.atoms.push(n);\n                    else\n                        map[idx] = { name, atoms: [n], keyval };\n                }\n        return Object.values(map);\n    }\n    static markSgroupMultiRepeat(mol, mult, atoms) {\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiRepeat.length + 1);\n                    let comma = payload.indexOf(',');\n                    if (comma <= 0)\n                        continue;\n                    let idx = parseInt(payload.substring(0, comma));\n                    if (idx <= 0)\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let unit = atoms.length / mult;\n        let tag = `${ForeignMoleculeTransient.AtomSgroupMultiRepeat}:${idxHigh + 1},${mult},${unit},`;\n        for (let n = 0; n < atoms.length; n++)\n            mol.setAtomTransient(atoms[n], Vec.append(mol.atomTransient(atoms[n]), tag + (n + 1)));\n    }\n    static hasAnySgroupMultiRepeat(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupMultiRepeat(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiRepeat.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 4)\n                        continue;\n                    let idx = parseInt(bits[0]), mult = parseInt(bits[1]), unit = parseInt(bits[2]), pos = parseInt(bits[3]);\n                    if (!(idx > 0) || mult < 2 || unit < 1 || pos < 1 || pos > mult * unit)\n                        continue;\n                    let mr = map[idx];\n                    if (mr == null)\n                        map[idx] = mr = { mult, unit, atoms: Vec.numberArray(0, mult * unit) };\n                    else if (mr.mult != mult || mr.unit != unit)\n                        continue;\n                    mr.atoms[pos - 1] = n;\n                }\n        return Object.values(map);\n    }\n    static markSgroupData(mol, name, value, unit, query, atoms) {\n        var _a;\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupData.length + 1);\n                    let comma = payload.indexOf(',');\n                    if (comma <= 0)\n                        continue;\n                    let idx = parseInt(payload.substring(0, comma));\n                    if (idx <= 0)\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let bits = [(idxHigh + 1).toString(), name, value, unit, query];\n        for (let n = 1; n < bits.length; n++)\n            bits[n] = ((_a = bits[n]) !== null && _a !== void 0 ? _a : '').replace(/\\,/g, '@@');\n        let tag = ForeignMoleculeTransient.AtomSgroupData + ':' + bits.join(',');\n        for (let n = 0; n < atoms.length; n++)\n            mol.setAtomTransient(atoms[n], Vec.append(mol.atomTransient(atoms[n]), tag));\n    }\n    static hasAnySgroupData(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupData(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupData.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 5)\n                        continue;\n                    let idx = parseInt(bits[0]);\n                    for (let i = 1; i < 5; i++)\n                        bits[i] = bits[i].replace(/\\@\\@/g, ',');\n                    if (!(idx > 0))\n                        continue;\n                    let sd = map[idx];\n                    if (sd)\n                        sd.atoms.push(n);\n                    else\n                        map[idx] = { name: bits[1], value: bits[2], unit: bits[3], query: bits[4], atoms: [n] };\n                }\n        return Object.values(map);\n    }\n}\n//# sourceMappingURL=ForeignMolecule.js.map","import { Vec } from '../util/Vec';\nexport const POLYMERBLOCK_EXTRA_POLYMER = 'xPOLYMER:';\nexport const POLYMERBLOCK_SPECIAL_UNCAPPED = '*';\nexport var PolymerBlockConnectivity;\n(function (PolymerBlockConnectivity) {\n    PolymerBlockConnectivity[\"HeadToTail\"] = \"ht\";\n    PolymerBlockConnectivity[\"HeadToHead\"] = \"hh\";\n    PolymerBlockConnectivity[\"Random\"] = \"rnd\";\n})(PolymerBlockConnectivity || (PolymerBlockConnectivity = {}));\nexport class PolymerBlockUnit {\n    constructor(atoms) {\n        this.atoms = atoms;\n        this.connect = null;\n        this.bondConn = null;\n        this.atomName = new Map();\n        this.bondIncl = new Map();\n        this.bondExcl = new Map();\n    }\n    clone() {\n        let dup = new PolymerBlockUnit(this.atoms.slice(0));\n        dup.connect = this.connect;\n        if (this.bondConn)\n            dup.bondConn = this.bondConn.slice(0);\n        for (let [k, v] of this.atomName.entries())\n            dup.atomName.set(k, v.slice(0));\n        for (let [k, v] of this.bondIncl.entries())\n            dup.bondIncl.set(k, v.slice(0));\n        for (let [k, v] of this.bondExcl.entries())\n            dup.bondExcl.set(k, v.slice(0));\n        return dup;\n    }\n}\nexport class PolymerBlock {\n    constructor(mol) {\n        this.mol = mol;\n        this.units = new Map();\n        let blockAtoms = new Map();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            for (let str of extra)\n                if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = str.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    let id = parseInt(bits[0]);\n                    if (id > 0) {\n                        let atoms = blockAtoms.get(id);\n                        if (atoms)\n                            atoms.push(n);\n                        else\n                            atoms = [n];\n                        blockAtoms.set(id, atoms);\n                    }\n                }\n        }\n        for (let key of Vec.sorted(Array.from(blockAtoms.keys())))\n            this.appendBlock(key, blockAtoms.get(key));\n    }\n    getIDList() { return Vec.sorted(Array.from(this.units.keys())); }\n    getUnit(id) { return this.units.get(id); }\n    getUnits() { return Array.from(this.units.values()); }\n    rewriteMolecule() {\n        this.purgeExtraFields();\n        for (let key of Vec.sorted(Array.from(this.units.keys())))\n            this.writeUnit(key, this.units.get(key));\n    }\n    harmoniseNumbering(other) {\n        let allKeys = other.getIDList();\n        for (let key of this.getIDList())\n            if (allKeys.includes(key)) {\n                let unit = this.units.get(key);\n                this.units.delete(key);\n                key = this.nextIdentifier(allKeys);\n                this.units.set(key, unit);\n                allKeys.push(key);\n            }\n    }\n    removeUnit(id) {\n        let unit = this.units.get(id);\n        if (unit == null)\n            return;\n        this.units.delete(id);\n        let pfx = POLYMERBLOCK_EXTRA_POLYMER + id + ':';\n        for (let a of unit.atoms) {\n            let extra = this.mol.atomExtra(a);\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(pfx))\n                    extra = Vec.remove(extra, i);\n            this.mol.setAtomExtra(a, extra);\n        }\n        for (let b = 1; b <= this.mol.numBonds; b++) {\n            let extra = this.mol.bondExtra(b);\n            if (Vec.isBlank(extra))\n                continue;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(pfx))\n                    extra = Vec.remove(extra, i);\n            this.mol.setBondExtra(b, extra);\n        }\n    }\n    removeAll() {\n        this.units.clear();\n        this.purgeExtraFields();\n    }\n    createUnit(unit) {\n        let id = this.nextIdentifier();\n        this.units.set(id, unit.clone());\n        this.writeUnit(id, unit);\n        return id;\n    }\n    static hasPolymerExtensions(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra)\n                    if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n                        return true;\n        }\n        return false;\n    }\n    static getPolymerExtensions(mol, atom) {\n        let extra = mol.atomExtra(atom), polext = null;\n        if (extra == null)\n            return null;\n        for (let str of extra)\n            if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n                polext = Vec.append(polext, str);\n        return polext;\n    }\n    static removePolymerExtensions(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        if (extra == null)\n            return;\n        let modified = false;\n        for (let i = extra.length - 1; i >= 0; i--)\n            if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                extra = Vec.remove(extra, i);\n                modified = true;\n            }\n        if (modified)\n            mol.setAtomExtra(atom, extra);\n    }\n    appendBlock(id, atoms) {\n        const { mol } = this;\n        let nattach = 0;\n        let unit = new PolymerBlockUnit(atoms);\n        for (let atom of atoms)\n            for (let extra of mol.atomExtra(atom))\n                if (extra.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = extra.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    if (bits.length < 2 || parseInt(bits[0]) != id)\n                        continue;\n                    nattach = parseInt(bits[1]);\n                    for (let n = 2; n < bits.length; n++) {\n                        if (bits[n] == PolymerBlockConnectivity.HeadToTail)\n                            unit.connect = PolymerBlockConnectivity.HeadToTail;\n                        else if (bits[n] == PolymerBlockConnectivity.HeadToHead)\n                            unit.connect = PolymerBlockConnectivity.HeadToHead;\n                        else if (bits[n] == PolymerBlockConnectivity.Random)\n                            unit.connect = PolymerBlockConnectivity.Random;\n                        else if (bits[n].startsWith('n')) {\n                            let hasOuter = false;\n                            for (let adj of mol.atomAdjList(atom))\n                                if (!atoms.includes(adj)) {\n                                    hasOuter = true;\n                                    break;\n                                }\n                            if (hasOuter) {\n                                let subBits = bits[n].substring(1).split(',');\n                                unit.atomName.set(atom, subBits.map((str) => parseInt(str)));\n                            }\n                        }\n                    }\n                }\n        if (nattach < 0)\n            return;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let in1 = atoms.indexOf(mol.bondFrom(n)) >= 0, in2 = atoms.indexOf(mol.bondTo(n)) >= 0;\n            if ((in1 && !in2) || (!in1 && in2))\n                nattach--;\n        }\n        if (nattach != 0)\n            return;\n        let bonds = null, order = null;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            for (let extra of mol.bondExtra(n))\n                if (extra.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = extra.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    if (bits.length < 2 || parseInt(bits[0]) != id)\n                        continue;\n                    for (let i = 1; i < bits.length; i++) {\n                        if (bits[i].startsWith('i')) {\n                            let subBits = bits[i].substring(1).split(',');\n                            unit.bondIncl.set(n, subBits.map((str) => parseInt(str)));\n                        }\n                        else if (bits[i].startsWith('e')) {\n                            let subBits = bits[i].substring(1).split(',');\n                            unit.bondExcl.set(n, subBits.map((str) => parseInt(str)));\n                        }\n                        else {\n                            let o = parseInt(bits[i]);\n                            if (o > 0) {\n                                bonds = Vec.append(bonds, n);\n                                order = Vec.append(order, o);\n                            }\n                        }\n                    }\n                }\n        }\n        if (bonds != null) {\n            if (bonds.length % 2 == 1)\n                return;\n            unit.bondConn = Vec.idxGet(bonds, Vec.idxSort(order));\n        }\n        this.units.set(id, unit);\n    }\n    formatBlockAtom(id, unit, atom) {\n        let nbonds = 0;\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let in1 = unit.atoms.indexOf(this.mol.bondFrom(n)) >= 0, in2 = unit.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n            if ((in1 && !in2) || (!in1 && in2))\n                nbonds++;\n        }\n        let str = POLYMERBLOCK_EXTRA_POLYMER + id + ':' + nbonds;\n        if (unit.connect != null)\n            str += ':' + unit.connect;\n        let names = unit.atomName.get(atom);\n        if (Vec.notBlank(names))\n            str += ':n' + names.join(',');\n        return str;\n    }\n    formatBlockBond(id, unit, bond) {\n        let in1 = unit.atoms.includes(this.mol.bondFrom(bond)), in2 = unit.atoms.includes(this.mol.bondTo(bond));\n        let isBoundary = (in1 && !in2) || (in2 && !in1);\n        if (!isBoundary)\n            return null;\n        let idxConn = unit.bondConn ? unit.bondConn.indexOf(bond) : -1;\n        let incl = unit.bondIncl.get(bond), excl = unit.bondExcl.get(bond);\n        if (idxConn < 0 && Vec.isBlank(incl) && Vec.isBlank(excl))\n            return null;\n        let str = POLYMERBLOCK_EXTRA_POLYMER + id;\n        if (idxConn >= 0)\n            str += ':' + (idxConn + 1);\n        if (Vec.notBlank(incl))\n            str += ':i' + incl.join(',');\n        if (Vec.notBlank(excl))\n            str += ':e' + excl.join(',');\n        return str;\n    }\n    purgeExtraFields() {\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let extra = this.mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    extra = Vec.remove(extra, i);\n                    modified = true;\n                }\n            if (modified)\n                this.mol.setAtomExtra(n, extra);\n        }\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let extra = this.mol.bondExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    extra = Vec.remove(extra, i);\n                    modified = true;\n                }\n            if (modified)\n                this.mol.setBondExtra(n, extra);\n        }\n    }\n    writeUnit(id, unit) {\n        const { mol } = this;\n        for (let a of unit.atoms) {\n            let codeAtom = this.formatBlockAtom(id, unit, a);\n            mol.setAtomExtra(a, Vec.append(mol.atomExtra(a), codeAtom));\n        }\n        for (let b = 1; b <= mol.numBonds; b++) {\n            let codeBond = this.formatBlockBond(id, unit, b);\n            if (codeBond)\n                mol.setBondExtra(b, Vec.append(mol.bondExtra(b), codeBond));\n        }\n    }\n    nextIdentifier(keys) {\n        if (!keys)\n            keys = this.getIDList();\n        if (keys.length == 0)\n            return 1;\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=PolymerBlock.js.map","import { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nexport var QueryTypeAtom;\n(function (QueryTypeAtom) {\n    QueryTypeAtom[\"Charges\"] = \"qC:\";\n    QueryTypeAtom[\"Aromatic\"] = \"qA:\";\n    QueryTypeAtom[\"Unsaturated\"] = \"qU:\";\n    QueryTypeAtom[\"Elements\"] = \"qE:\";\n    QueryTypeAtom[\"ElementsNot\"] = \"qE!\";\n    QueryTypeAtom[\"RingSizes\"] = \"qR:\";\n    QueryTypeAtom[\"RingSizesNot\"] = \"qR!\";\n    QueryTypeAtom[\"RingBlock\"] = \"qB:\";\n    QueryTypeAtom[\"NumRings\"] = \"qN:\";\n    QueryTypeAtom[\"RingBonds\"] = \"qG:\";\n    QueryTypeAtom[\"Adjacency\"] = \"qJ:\";\n    QueryTypeAtom[\"BondSums\"] = \"qO:\";\n    QueryTypeAtom[\"Valences\"] = \"qV:\";\n    QueryTypeAtom[\"Hydrogens\"] = \"qH:\";\n    QueryTypeAtom[\"Isotopes\"] = \"qI:\";\n    QueryTypeAtom[\"SubFrags\"] = \"qX:\";\n    QueryTypeAtom[\"SubFragsNot\"] = \"qX!\";\n})(QueryTypeAtom || (QueryTypeAtom = {}));\nexport var QueryTypeBond;\n(function (QueryTypeBond) {\n    QueryTypeBond[\"RingSizes\"] = \"qR:\";\n    QueryTypeBond[\"RingSizesNot\"] = \"qR!\";\n    QueryTypeBond[\"RingBlock\"] = \"qB:\";\n    QueryTypeBond[\"NumRings\"] = \"qN:\";\n    QueryTypeBond[\"Orders\"] = \"qO:\";\n})(QueryTypeBond || (QueryTypeBond = {}));\nexport class QueryUtil {\n    static hasAnyQueryAtom(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith('q'))\n                return true;\n        return false;\n    }\n    static hasAnyQueryBond(mol, bond) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith('q'))\n                return true;\n        return false;\n    }\n    static hasQueryAtom(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return true;\n        return false;\n    }\n    static hasQueryBond(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return true;\n        return false;\n    }\n    static deleteQueryAtom(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        let modified = false;\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type)) {\n                extra.splice(n, 1);\n                modified = true;\n            }\n        if (modified)\n            mol.setAtomExtra(atom, extra);\n    }\n    static deleteQueryBond(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        let modified = false;\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type)) {\n                extra.splice(n, 1);\n                modified = true;\n            }\n        if (modified)\n            mol.setBondExtra(bond, extra);\n    }\n    static deleteQueryAtomAll(mol, atom) {\n        mol.setAtomExtra(atom, mol.atomExtra(atom).filter((xtra) => !xtra.startsWith('q')));\n    }\n    static deleteQueryBondAll(mol, bond) {\n        mol.setBondExtra(bond, mol.bondExtra(bond).filter((xtra) => !xtra.startsWith('q')));\n    }\n    static queryAtomString(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return extra[n].substring(type.length);\n        return null;\n    }\n    static queryAtomStringList(mol, atom, type) {\n        let extra = mol.atomExtra(atom), list = null;\n        if (extra != null)\n            for (let str of extra)\n                if (str.startsWith(type))\n                    list = Vec.append(list, str.substring(type.length));\n        return list;\n    }\n    static queryBondString(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return extra[n].substring(type.length);\n        return null;\n    }\n    static setQueryAtom(mol, atom, type, str) {\n        if (!str) {\n            this.deleteQueryAtom(mol, atom, type);\n            return;\n        }\n        let value = type + str;\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--) {\n            if (extra[n].startsWith(type)) {\n                if (value != null) {\n                    extra[n] = value;\n                    value = null;\n                }\n                else\n                    extra.splice(n, 1);\n            }\n        }\n        if (value != null)\n            extra.push(value);\n        mol.setAtomExtra(atom, extra);\n    }\n    static setQueryAtomList(mol, atom, type, list) {\n        if (Vec.isBlank(list)) {\n            this.deleteQueryAtom(mol, atom, type);\n            return;\n        }\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                extra.splice(n, 1);\n        for (let str of list)\n            extra.push(type + str);\n        mol.setAtomExtra(atom, extra);\n    }\n    static setQueryBond(mol, bond, type, str) {\n        if (!str) {\n            this.deleteQueryBond(mol, bond, type);\n            return;\n        }\n        let value = type + str;\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--) {\n            if (extra[n].startsWith(type)) {\n                if (value != null) {\n                    extra[n] = value;\n                    value = null;\n                }\n                else\n                    extra.splice(n, 1);\n            }\n        }\n        if (value != null)\n            extra.push(value);\n        mol.setBondExtra(bond, extra);\n    }\n    static queryAtomCharges(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Charges)); }\n    static queryAtomAromatic(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.Aromatic)); }\n    static queryAtomUnsaturated(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.Unsaturated)); }\n    static queryAtomElements(mol, atom) { return this.parseStrings(this.queryAtomString(mol, atom, QueryTypeAtom.Elements)); }\n    static queryAtomElementsNot(mol, atom) { return this.parseStrings(this.queryAtomString(mol, atom, QueryTypeAtom.ElementsNot)); }\n    static queryAtomRingSizes(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingSizes)); }\n    static queryAtomRingSizesNot(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingSizesNot)); }\n    static queryAtomRingBlock(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.RingBlock)); }\n    static queryAtomNumRings(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.NumRings)); }\n    static queryAtomRingBonds(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingBonds)); }\n    static queryAtomAdjacency(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Adjacency)); }\n    static queryAtomBondSums(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.BondSums)); }\n    static queryAtomValences(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Valences)); }\n    static queryAtomHydrogens(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Hydrogens)); }\n    static queryAtomIsotope(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Isotopes)); }\n    static queryAtomSubFrags(mol, atom) { return this.parseMolecules(this.queryAtomStringList(mol, atom, QueryTypeAtom.SubFrags)); }\n    static queryAtomSubFragsNot(mol, atom) { return this.parseMolecules(this.queryAtomStringList(mol, atom, QueryTypeAtom.SubFragsNot)); }\n    static queryBondRingSizes(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.RingSizes)); }\n    static queryBondRingSizesNot(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.RingSizesNot)); }\n    static queryBondRingBlock(mol, bond) { return this.parseBoolean(this.queryBondString(mol, bond, QueryTypeBond.RingBlock)); }\n    static queryBondNumRings(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.NumRings)); }\n    static queryBondOrders(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.Orders)); }\n    static setQueryAtomCharges(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Charges, this.formatIntegers(value)); }\n    static setQueryAtomAromatic(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Aromatic, this.formatBoolean(value)); }\n    static setQueryAtomUnsaturated(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Unsaturated, this.formatBoolean(value)); }\n    static setQueryAtomElements(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Elements, this.formatStrings(value)); }\n    static setQueryAtomElementsNot(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.ElementsNot, this.formatStrings(value)); }\n    static setQueryAtomRingSizes(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingSizes, this.formatIntegers(value)); }\n    static setQueryAtomRingSizesNot(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingSizesNot, this.formatIntegers(value)); }\n    static setQueryAtomRingBlock(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingBlock, this.formatBoolean(value)); }\n    static setQueryAtomNumRings(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.NumRings, this.formatIntegers(value)); }\n    static setQueryAtomRingBonds(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingBonds, this.formatIntegers(value)); }\n    static setQueryAtomAdjacency(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Adjacency, this.formatIntegers(value)); }\n    static setQueryAtomBondSums(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.BondSums, this.formatIntegers(value)); }\n    static setQueryAtomValences(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Valences, this.formatIntegers(value)); }\n    static setQueryAtomHydrogens(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Hydrogens, this.formatIntegers(value)); }\n    static setQueryAtomIsotope(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Isotopes, this.formatIntegers(value)); }\n    static setQueryAtomSubFrags(mol, atom, value) { this.setQueryAtomList(mol, atom, QueryTypeAtom.SubFrags, this.formatMolecules(value)); }\n    static setQueryAtomSubFragsNot(mol, atom, value) { this.setQueryAtomList(mol, atom, QueryTypeAtom.SubFragsNot, this.formatMolecules(value)); }\n    static setQueryBondRingSizes(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingSizes, this.formatIntegers(value)); }\n    static setQueryBondRingSizesNot(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingSizesNot, this.formatIntegers(value)); }\n    static setQueryBondRingBlock(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingBlock, this.formatBoolean(value)); }\n    static setQueryBondNumRings(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.NumRings, this.formatIntegers(value)); }\n    static setQueryBondOrders(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.Orders, this.formatIntegers(value)); }\n    static parseIntegers(str) {\n        if (!str)\n            return null;\n        let strlist = str.split(',');\n        let intlist = new Array(strlist.length);\n        for (let n = 0; n < strlist.length; n++)\n            intlist[n] = parseInt(strlist[n]);\n        return intlist;\n    }\n    static parseStrings(str) {\n        if (!str)\n            return null;\n        return str.split(',');\n    }\n    static parseBoolean(str) {\n        return !str ? null : str == 'yes';\n    }\n    static parseMolecules(list) {\n        if (!list)\n            return null;\n        let mols = [];\n        for (let molstr of list) {\n            let mol = Molecule.fromString(molstr);\n            if (MolUtil.notBlank(mol))\n                mols.push(mol);\n        }\n        return mols;\n    }\n    static formatIntegers(list) {\n        if (Vec.isBlank(list))\n            return null;\n        let str = '';\n        for (let n = 0; n < list.length; n++) {\n            if (n > 0)\n                str += ',';\n            str += list[n];\n        }\n        return str;\n    }\n    static formatStrings(list) {\n        if (Vec.isBlank(list))\n            return null;\n        let str = '';\n        for (let n = 0; n < list.length; n++) {\n            if (n > 0)\n                str += ',';\n            str += list[n];\n        }\n        return str;\n    }\n    static formatBoolean(value) {\n        return value ? 'yes' : 'no';\n    }\n    static formatMolecules(mols) {\n        if (Vec.isBlank(mols))\n            return null;\n        let list = [];\n        for (let mol of mols)\n            if (MolUtil.notBlank(mol))\n                list.push(mol.toString());\n        return list;\n    }\n}\n//# sourceMappingURL=QueryUtil.js.map","import { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nexport const STEREOGROUP_EXTRA_RACEMIC = 'xCHIRAC:';\nexport const STEREOGROUP_EXTRA_RELATIVE = 'xCHIREL:';\nexport class StereoGroup {\n    static hasStereoGroups(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra)\n                    if (str.startsWith(STEREOGROUP_EXTRA_RACEMIC) || str.startsWith(STEREOGROUP_EXTRA_RELATIVE))\n                        return true;\n        }\n        return false;\n    }\n    constructor(mol) {\n        this.mol = mol;\n        this.chiRac = new Map();\n        this.chiRel = new Map();\n        this.mol = mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra) {\n                    if (str.startsWith(STEREOGROUP_EXTRA_RACEMIC)) {\n                        let grp = parseInt(str.substring(STEREOGROUP_EXTRA_RACEMIC.length));\n                        if (grp > 0)\n                            this.chiRac.set(grp, Vec.append(this.chiRac.get(grp), n));\n                    }\n                    else if (str.startsWith(STEREOGROUP_EXTRA_RELATIVE)) {\n                        let grp = parseInt(str.substring(STEREOGROUP_EXTRA_RELATIVE.length));\n                        if (grp > 0)\n                            this.chiRel.set(grp, Vec.append(this.chiRel.get(grp), n));\n                    }\n                }\n        }\n        for (let [grp, atoms] of this.chiRac.entries()) {\n            for (let n = atoms.length - 1; n >= 0; n--)\n                if (!this.atomHasWedge(atoms[n]))\n                    atoms.splice(n, 1);\n            if (atoms.length > 0)\n                this.chiRac.set(grp, atoms);\n            else\n                this.chiRac.delete(grp);\n        }\n        for (let [grp, atoms] of this.chiRel.entries()) {\n            for (let n = atoms.length - 1; n >= 0; n--)\n                if (!this.atomHasWedge(atoms[n]))\n                    atoms.splice(n, 1);\n            if (atoms.length > 0)\n                this.chiRel.set(grp, atoms);\n            else\n                this.chiRel.delete(grp);\n        }\n    }\n    getRacemicGroups() { return Array.from(this.chiRac.keys()); }\n    getRelativeGroups() { return Array.from(this.chiRel.keys()); }\n    getRacemicAtoms() { return Array.from(this.chiRac.values()); }\n    getRelativeAtoms() { return Array.from(this.chiRel.values()); }\n    getRacemicGroupAtoms(grp) { return this.chiRac.get(grp); }\n    getRelativeGroupAtoms(grp) { return this.chiRel.get(grp); }\n    rewriteMolecule() {\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let extra = this.mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (extra[i].startsWith(STEREOGROUP_EXTRA_RACEMIC) || extra[i].startsWith(STEREOGROUP_EXTRA_RELATIVE)) {\n                    extra.splice(i, 1);\n                    modified = true;\n                }\n            }\n            if (modified)\n                this.mol.setAtomExtra(n, extra);\n        }\n        for (let [grp, atoms] of this.chiRac.entries()) {\n            for (let a of atoms)\n                this.mol.setAtomExtra(a, [...this.mol.atomExtra(a), STEREOGROUP_EXTRA_RACEMIC + grp]);\n        }\n        for (let [grp, atoms] of this.chiRel.entries()) {\n            for (let a of atoms)\n                this.mol.setAtomExtra(a, [...this.mol.atomExtra(a), STEREOGROUP_EXTRA_RELATIVE + grp]);\n        }\n    }\n    harmoniseNumbering(other) {\n        let groups = other.getRacemicGroups();\n        let stash = this.getRacemicAtoms();\n        this.chiRac.clear();\n        for (let atoms of stash) {\n            let grp = this.nextIdentifier(groups);\n            this.chiRac.set(grp, atoms);\n            groups.push(grp);\n        }\n        groups = other.getRelativeGroups();\n        stash = this.getRelativeAtoms();\n        this.chiRel.clear();\n        for (let atoms of stash) {\n            let grp = this.nextIdentifier(groups);\n            this.chiRel.set(grp, atoms);\n            groups.push(grp);\n        }\n    }\n    createRacemic(atoms) {\n        let grp = this.nextIdentifier(this.getRacemicGroups());\n        this.chiRac.set(grp, atoms);\n        return grp;\n    }\n    createRelative(atoms) {\n        let grp = this.nextIdentifier(this.getRelativeGroups());\n        this.chiRel.set(grp, atoms);\n        return grp;\n    }\n    removeRacemic(grp) {\n        this.chiRac.delete(grp);\n    }\n    removeRelative(grp) {\n        this.chiRel.delete(grp);\n    }\n    static removeAll(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (!extra[i].startsWith(STEREOGROUP_EXTRA_RACEMIC) && !extra[i].startsWith(STEREOGROUP_EXTRA_RELATIVE))\n                    continue;\n                extra.splice(i, 1);\n                modified = true;\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n    }\n    atomHasWedge(atom) {\n        if (this.mol.is3D())\n            return true;\n        let hasWedge = false;\n        for (let b of this.mol.atomAdjBonds(atom)) {\n            let bt = this.mol.bondType(b);\n            if (bt == Molecule.BONDTYPE_UNKNOWN)\n                return false;\n            if (this.mol.bondFrom(b) != atom)\n                continue;\n            if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                hasWedge = true;\n        }\n        return hasWedge;\n    }\n    nextIdentifier(inkeys) {\n        if (inkeys.length == 0)\n            return 1;\n        let keys = Vec.sorted(inkeys);\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=StereoGroup.js.map","import { ResonanceRemover } from '../calc/ResonanceRemover';\nimport { Vec } from '../util/Vec';\nimport { BondArtifact } from '../mol/BondArtifact';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { DataSheet } from '../ds/DataSheet';\nimport { ForeignMolecule, ForeignMoleculeTransient } from '../mol/ForeignMolecule';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity, PolymerBlockUnit } from '../mol/PolymerBlock';\nimport { QueryUtil } from '../mol/QueryUtil';\nimport { StereoGroup } from '../mol/StereoGroup';\nexport const MDLMOL_VALENCE = {\n    'H': [1],\n    'B': [3],\n    'C': [4],\n    'Si': [4],\n    'N': [3],\n    'P': [3, 5],\n    'As': [3, 5],\n    'O': [2],\n    'S': [2, 4, 6],\n    'Se': [2, 4, 6],\n    'Te': [2, 4, 6],\n    'F': [1],\n    'Cl': [1, 3, 5, 7],\n    'Br': [1],\n    'I': [1, 3, 5, 7],\n    'At': [1, 3, 5, 7],\n};\nexport class MDLMOLReader {\n    constructor(strData) {\n        this.parseHeader = true;\n        this.parseExtended = true;\n        this.allowV3000 = true;\n        this.considerRescale = true;\n        this.keepAromatic = false;\n        this.keepParity = false;\n        this.keepQuery = true;\n        this.mol = null;\n        this.molName = '';\n        this.overallStereoAbsolute = true;\n        this.resBonds = null;\n        this.groupAttachAny = new Map();\n        this.groupAttachAll = new Map();\n        this.groupStereoAbsolute = [];\n        this.groupStereoRacemic = [];\n        this.groupStereoRelative = [];\n        this.groupLinkNodes = [];\n        this.groupMixtures = [];\n        this.scsrTemplates = null;\n        this.pos = 0;\n        this.lines = strData.split(/\\r?\\n/);\n    }\n    parse() {\n        if (this.parseHeader) {\n            this.molName = this.lines[0];\n            this.pos = 3;\n        }\n        this.parseCTAB();\n        return this.mol;\n    }\n    nextLine() {\n        if (this.pos >= this.lines.length)\n            throw 'MDL Molfile parser: premature end, at line ' + (this.pos + 1);\n        return this.lines[this.pos++];\n    }\n    parseCTAB() {\n        this.mol = new Molecule();\n        this.mol.keepTransient = true;\n        let line = this.nextLine();\n        let version = line.length >= 39 ? line.substring(34, 39) : '';\n        if (this.allowV3000 && version == 'V3000') {\n            this.parseV3000();\n            this.mol.keepTransient = false;\n            return;\n        }\n        if (version != 'V2000')\n            throw 'Invalid MDL MOL: no Vx000 tag.';\n        let numAtoms = parseInt(line.substring(0, 3).trim());\n        let numBonds = parseInt(line.substring(3, 6).trim());\n        if (line.length >= 15)\n            this.overallStereoAbsolute = parseInt(line.substring(12, 15).trim()) == 1;\n        for (let n = 0; n < numAtoms; n++) {\n            line = this.nextLine();\n            if (line.length < 34)\n                throw 'Invalid MDL MOL: atom line' + (n + 1);\n            let x = parseFloat(line.substring(0, 10).trim());\n            let y = parseFloat(line.substring(10, 20).trim());\n            let z = parseFloat(line.substring(20, 30).trim());\n            let el = line.substring(31, 34).trim();\n            let chg = line.length < 39 ? 0 : parseInt(line.substring(36, 39).trim()), rad = 0;\n            let stereo = line.length < 42 ? 0 : parseInt(line.substring(39, 42).trim());\n            let hyd = line.length < 45 ? 0 : parseInt(line.substring(42, 45).trim());\n            let val = line.length < 51 ? 0 : parseInt(line.substring(48, 51).trim());\n            let mapnum = line.length < 63 ? 0 : parseInt(line.substring(60, 63).trim());\n            if (chg >= 1 && chg <= 3)\n                chg = 4 - chg;\n            else if (chg == 4) {\n                chg = 0;\n                rad = 2;\n            }\n            else if (chg >= 5 && chg <= 7)\n                chg = 4 - chg;\n            else\n                chg = 0;\n            let a = this.mol.addAtom(el, x, y, chg, rad);\n            if (z != 0) {\n                this.mol.setAtomZ(a, z);\n                this.mol.setIs3D(true);\n            }\n            this.mol.setAtomMapNum(a, mapnum);\n            if (hyd > 0)\n                QueryUtil.setQueryAtomHydrogens(this.mol, a, [hyd - 1]);\n            if (stereo > 0 && this.keepParity) {\n                let trans = this.mol.atomTransient(a);\n                if (stereo == 1)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLOdd));\n                else if (stereo == 2)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLEven));\n                else if (stereo == 3)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLRacemic));\n            }\n            if (val != 0)\n                ForeignMolecule.markExplicitValence(this.mol, n + 1, val > 14 ? 0 : val);\n        }\n        for (let n = 0; n < numBonds; n++) {\n            line = this.nextLine();\n            if (line.length >= 9 && line.length < 12)\n                line = line.substring(0, 9) + '  0';\n            if (line.length < 12)\n                throw 'Invalid MDL MOL: bond line' + (n + 1);\n            let bfr = parseInt(line.substring(0, 3).trim()), bto = parseInt(line.substring(3, 6).trim());\n            let type = parseInt(line.substring(6, 9).trim()), stereo = parseInt(line.substring(9, 12).trim());\n            if (bfr == bto || bfr < 1 || bfr > numAtoms || bto < 1 || bto > numAtoms)\n                throw 'Invalid MDL MOL: bond line' + (n + 1);\n            let order = type >= 1 && type <= 3 ? type : type == 8 || type == 9 || type == 10 ? 0 : 1;\n            let style = Molecule.BONDTYPE_NORMAL;\n            if (stereo == 1)\n                style = Molecule.BONDTYPE_INCLINED;\n            else if (stereo == 6)\n                style = Molecule.BONDTYPE_DECLINED;\n            else if (stereo == 3 || stereo == 4)\n                style = Molecule.BONDTYPE_UNKNOWN;\n            let b = this.mol.addBond(bfr, bto, order, style);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroDative);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroHydrogen);\n            if (this.keepQuery) {\n                if (type == 4)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1]);\n                else if (type == 5)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [1, 2]);\n                else if (type == 6)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 1]);\n                else if (type == 7)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 2]);\n                else if (type == 8)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 0, 1, 2, 3]);\n            }\n            else {\n                if (type == 4) {\n                    if (this.keepAromatic)\n                        this.mol.setBondTransient(b, Vec.append(this.mol.bondTransient(b), ForeignMoleculeTransient.BondAromatic));\n                    else {\n                        if (this.resBonds == null)\n                            this.resBonds = Vec.booleanArray(false, numBonds);\n                        this.resBonds[n] = true;\n                    }\n                }\n            }\n        }\n        const MBLK_CHG = 1, MBLK_RAD = 2, MBLK_ISO = 3, MBLK_RGP = 4, MBLK_HYD = 5, MBLK_ZCH = 6, MBLK_ZBO = 7, MBLK_ZPA = 8, MBLK_ZRI = 9, MBLK_ZAR = 10, MBLK_RBC = 11, MBLK_SUB = 12, MBLK_UNS = 13;\n        let resPaths = new Map(), resRings = new Map(), arenes = new Map();\n        let superatoms = new Map(), mixtures = new Map();\n        while (true) {\n            line = this.nextLine();\n            if (line.startsWith('M  END'))\n                break;\n            let type = 0;\n            if (line.startsWith('M  CHG'))\n                type = MBLK_CHG;\n            else if (line.startsWith('M  RAD'))\n                type = MBLK_RAD;\n            else if (line.startsWith('M  ISO'))\n                type = MBLK_ISO;\n            else if (line.startsWith('M  RGP'))\n                type = MBLK_RGP;\n            else if (this.parseExtended && line.startsWith('M  HYD'))\n                type = MBLK_HYD;\n            else if (this.parseExtended && line.startsWith('M  ZCH'))\n                type = MBLK_ZCH;\n            else if (this.parseExtended && line.startsWith('M  ZBO'))\n                type = MBLK_ZBO;\n            else if (this.parseExtended && line.startsWith('M  ZPA'))\n                type = MBLK_ZPA;\n            else if (this.parseExtended && line.startsWith('M  ZRI'))\n                type = MBLK_ZRI;\n            else if (this.parseExtended && line.startsWith('M  ZAR'))\n                type = MBLK_ZAR;\n            else if (this.parseExtended && line.startsWith('M  RBC'))\n                type = MBLK_RBC;\n            else if (this.parseExtended && line.startsWith('M  SUB'))\n                type = MBLK_SUB;\n            else if (this.parseExtended && line.startsWith('M  UNS'))\n                type = MBLK_UNS;\n            else if (line.startsWith('A  ') && line.length >= 6) {\n                let anum = parseInt(line.substring(3, 6).trim());\n                if (anum >= 1 && anum <= this.mol.numAtoms) {\n                    line = this.nextLine();\n                    if (line == null)\n                        break;\n                    this.mol.setAtomElement(anum, line);\n                    continue;\n                }\n            }\n            else if (line.startsWith('M  STY')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let idx = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let stype = line.substring(14 + 8 * n, 17 + 8 * n);\n                    if (stype == 'SUP')\n                        superatoms.set(idx, { atoms: [], name: null });\n                    else if (stype == 'MIX' || stype == 'FOR')\n                        mixtures.set(idx, { index: idx, parent: 0, atoms: [], type: stype });\n                    else if (stype == 'SRU' || stype == 'COP' || stype == 'MUL' || stype == 'DAT')\n                        superatoms.set(idx, { atoms: [], name: null, bracketType: stype });\n                }\n            }\n            else if (line.startsWith('M  SPL')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let child = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let parent = parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim());\n                    let mix = mixtures.get(child);\n                    if (mix != null)\n                        mix.parent = parent;\n                }\n            }\n            else if (line.startsWith('M  SAL')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let atoms = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        atoms[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    sup.atoms = Vec.concat(sup.atoms, atoms);\n                }\n                let mix = mixtures.get(idx);\n                if (mix != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let atoms = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        atoms[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    mix.atoms = Vec.concat(mix.atoms, atoms);\n                }\n            }\n            else if (line.startsWith('M  SBL')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let bonds = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        bonds[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    sup.bonds = Vec.concat(sup.bonds, bonds);\n                }\n            }\n            else if (line.startsWith('M  SMT')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null)\n                    sup.name = line.substring(11).trim();\n            }\n            else if (line.startsWith('M  SDT')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup) {\n                    sup.name = line.substring(11, 41).trim();\n                    sup.unit = line.substring(43, 63).trim();\n                    sup.query = line.substring(63).trim();\n                }\n            }\n            else if (line.startsWith('M  SED')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup)\n                    sup.value = line.substring(11).trim();\n            }\n            else if (line.startsWith('M  SCN')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let idx = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let stype = line.substring(14 + 8 * n, 17 + 8 * n);\n                    let sup = superatoms.get(idx);\n                    if (sup != null)\n                        sup.connectType = stype.trim();\n                }\n            }\n            else if (line.startsWith('M  CRS')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    sup.bondConn = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        sup.bondConn[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                }\n            }\n            else if (line.startsWith('M  LIN')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let node = {\n                        atom: parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim()),\n                        nbrs: [],\n                        minRep: 1,\n                        maxRep: parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim()),\n                    };\n                    let nbr1 = parseInt(line.substring(17 + 8 * n, 21 + 8 * n).trim());\n                    let nbr2 = parseInt(line.substring(21 + 8 * n, 25 + 8 * n).trim());\n                    if (nbr1 > 0)\n                        node.nbrs.push(nbr1);\n                    if (nbr2 > 0)\n                        node.nbrs.push(nbr2);\n                    this.groupLinkNodes.push(node);\n                }\n            }\n            else if (line.startsWith('M  ALS')) {\n                let atom = parseInt(line.substring(7, 10).trim());\n                let len = parseInt(line.substring(10, 13).trim());\n                let logic = line.charAt(14);\n                let elements = [];\n                for (let n = 0; n < len; n++)\n                    elements.push(line.substring(16 + n * 4, 20 + n * 4).trim());\n                this.mol.setAtomElement(atom, '*');\n                if (logic == 'F')\n                    QueryUtil.setQueryAtomElements(this.mol, atom, elements);\n                else if (logic == 'T')\n                    QueryUtil.setQueryAtomElementsNot(this.mol, atom, elements);\n            }\n            if (type == MBLK_ZPA || type == MBLK_ZRI || type == MBLK_ZAR) {\n                let len = parseInt(line.substring(6, 9).trim()), blk = parseInt(line.substring(9, 13).trim());\n                let map = type == MBLK_ZPA ? resPaths : type == MBLK_ZRI ? resRings : arenes;\n                for (let n = 0; n < len; n++) {\n                    let val = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    if (val < 1 || val > numAtoms)\n                        throw 'Invalid MDL MOL: M-block';\n                    let atoms = map.get(blk);\n                    if (!atoms)\n                        map.set(blk, atoms = []);\n                    atoms.push(val);\n                }\n            }\n            else if (type > 0) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let pos = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let val = parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim());\n                    if (pos < 1)\n                        throw 'Invalid MDL MOL: M-block';\n                    if (type == MBLK_CHG)\n                        this.mol.setAtomCharge(pos, val);\n                    else if (type == MBLK_RAD) {\n                        if (val == 1 || val == 3)\n                            this.mol.setAtomUnpaired(pos, 2);\n                        else if (val == 2)\n                            this.mol.setAtomUnpaired(pos, 1);\n                    }\n                    else if (type == MBLK_ISO)\n                        this.mol.setAtomIsotope(pos, val);\n                    else if (type == MBLK_RGP)\n                        this.mol.setAtomElement(pos, 'R' + val);\n                    else if (type == MBLK_HYD)\n                        this.mol.setAtomHExplicit(pos, val);\n                    else if (type == MBLK_ZCH)\n                        this.mol.setAtomCharge(pos, val);\n                    else if (type == MBLK_ZBO)\n                        this.mol.setBondOrder(pos, val);\n                    else if (type == MBLK_RBC && val != 0) {\n                        if (val == -2)\n                            val = this.countRingBonds(pos);\n                        else if (val == -1)\n                            val = 0;\n                        QueryUtil.setQueryAtomRingBonds(this.mol, pos, [val]);\n                    }\n                    else if (type == MBLK_SUB && val != 0) {\n                        if (val == -2)\n                            val = this.countSubstitutions(pos);\n                        else if (val == -1)\n                            val = 0;\n                        QueryUtil.setQueryAtomAdjacency(this.mol, pos, [val]);\n                    }\n                    else if (type == MBLK_UNS) {\n                        if (val == 1)\n                            QueryUtil.setQueryAtomUnsaturated(this.mol, pos, true);\n                    }\n                }\n            }\n        }\n        this.postFix();\n        if (this.parseExtended) {\n            let artifacts = new BondArtifact(this.mol);\n            for (let atoms of resPaths.values())\n                artifacts.createPath(atoms);\n            for (let atoms of resRings.values())\n                artifacts.createRing(atoms);\n            for (let atoms of arenes.values())\n                artifacts.createArene(atoms);\n            artifacts.rewriteMolecule();\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            if (value.bracketType) {\n                superatoms.delete(key);\n                this.applyPolymerBlock(value);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            superatoms.delete(key);\n            this.applySuperAtom(value, Array.from(superatoms.values()));\n        }\n        for (let key of Vec.sorted(Array.from(mixtures.keys())))\n            this.groupMixtures.push(mixtures.get(key));\n        this.mol.keepTransient = false;\n    }\n    postFix() {\n        const mol = this.mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            if (MolUtil.hasAbbrev(mol, n) || mol.atomTransient(n).some((str) => str.startsWith(ForeignMoleculeTransient.AtomSCSRClass)))\n                continue;\n            let el = mol.atomElement(n);\n            if (el == 'D') {\n                mol.setAtomElement(n, 'H');\n                mol.setAtomIsotope(n, 2);\n            }\n            else if (el == 'T') {\n                mol.setAtomElement(n, 'H');\n                mol.setAtomIsotope(n, 3);\n            }\n            if (mol.is3D && mol.atomZ(n) === undefined)\n                mol.setAtomZ(n, 0);\n            let valence = ForeignMolecule.noteExplicitValence(this.mol, n);\n            let options = MDLMOL_VALENCE[el];\n            if (valence != null) {\n                let hcount = valence < 0 || valence > 14 ? 0 : valence;\n                for (let b of mol.atomAdjBonds(n))\n                    hcount -= mol.bondOrder(b);\n                if (hcount != mol.atomHydrogens(n))\n                    mol.setAtomHExplicit(n, Math.max(0, hcount));\n            }\n            else if (options) {\n                let chg = mol.atomCharge(n);\n                let chgmod = (el == 'C' || el == 'H') ? Math.abs(chg) : el == 'B' ? -Math.abs(chg) : -chg;\n                let usedValence = chgmod;\n                let unp = mol.atomUnpaired(n);\n                if (unp > 0 && (el == 'C' || el == 'O' || el == 'S' || el == 'N' || el == 'P'))\n                    usedValence += unp;\n                for (let b of mol.atomAdjBonds(n))\n                    usedValence += mol.bondOrder(b);\n                for (let v of options)\n                    if (usedValence <= v) {\n                        let hcount = v - usedValence;\n                        if (hcount != mol.atomHydrogens(n))\n                            mol.setAtomHExplicit(n, Math.max(0, hcount));\n                        break;\n                    }\n            }\n        }\n        if (this.considerRescale && Vec.isBlank(this.scsrTemplates))\n            CoordUtil.normaliseBondDistances(mol);\n        if (this.resBonds != null) {\n            let derez = new ResonanceRemover(mol, this.resBonds, null);\n            try {\n                derez.perform();\n                for (let n = 0; n < mol.numBonds; n++)\n                    mol.setBondOrder(n + 1, derez.bondOrders[n]);\n            }\n            catch (ex) {\n            }\n        }\n    }\n    parseV3000() {\n        var _a;\n        let Section;\n        (function (Section) {\n            Section[Section[\"Atom\"] = 0] = \"Atom\";\n            Section[Section[\"Bond\"] = 1] = \"Bond\";\n            Section[Section[\"Coll\"] = 2] = \"Coll\";\n            Section[Section[\"SGroup\"] = 3] = \"SGroup\";\n            Section[Section[\"Template\"] = 4] = \"Template\";\n        })(Section || (Section = {}));\n        let inCTAB = false, inTemplate = false;\n        let section = null;\n        let lineCounts = null;\n        let lineAtom = [], lineBond = [], lineColl = [], lineSgroup = [];\n        let asdrawnRBC = [], asdrawnSUB = [];\n        let templateBlocks = [];\n        const ERRPFX = 'Invalid MDL MOL V3000: ';\n        while (true) {\n            let fullLine = this.nextLine();\n            if (fullLine == 'M  END')\n                break;\n            if (!fullLine.startsWith('M  V30 '))\n                continue;\n            let line = fullLine.substring(7);\n            if (line.startsWith('BEGIN TEMPLATE'))\n                inTemplate = true;\n            else if (line.startsWith('END TEMPLATE'))\n                inTemplate = false;\n            else if (line.startsWith('TEMPLATE ') && inTemplate)\n                templateBlocks.push([fullLine]);\n            else if (inTemplate && templateBlocks != null)\n                Vec.last(templateBlocks).push(fullLine);\n            else if (line.startsWith('COUNTS '))\n                lineCounts = line.substring(7);\n            else if (line.startsWith('BEGIN CTAB'))\n                inCTAB = true;\n            else if (line.startsWith('BEGIN ATOM'))\n                section = Section.Atom;\n            else if (line.startsWith('BEGIN BOND'))\n                section = Section.Bond;\n            else if (line.startsWith('BEGIN COLLECTION'))\n                section = Section.Coll;\n            else if (line.startsWith('BEGIN SGROUP'))\n                section = Section.SGroup;\n            else if (line.startsWith('END '))\n                section = null;\n            else if (inCTAB && section == Section.Atom)\n                lineAtom.push(line);\n            else if (inCTAB && section == Section.Bond)\n                lineBond.push(line);\n            else if (inCTAB && section == Section.Coll)\n                lineColl.push(line);\n            else if (inCTAB && section == Section.SGroup)\n                lineSgroup.push(line);\n            else if (inCTAB && section == null) {\n                if (line.startsWith('LINKNODE ')) {\n                    let bits = this.splitWithQuotes(line.substring(9));\n                    let node = {\n                        atom: 0,\n                        nbrs: [],\n                        minRep: parseInt(bits[0]),\n                        maxRep: parseInt(bits[1])\n                    };\n                    let nb = parseInt(bits[2]);\n                    let atoms = [];\n                    for (let n = 0; n < nb * 2; n++)\n                        atoms.push(parseInt(bits[3 + n]));\n                    Vec.sort(atoms);\n                    for (let n = 0; n < atoms.length; n++) {\n                        if (n < atoms.length - 1 && atoms[n] == atoms[n + 1])\n                            node.atom = atoms[n++];\n                        else\n                            node.nbrs.push(atoms[n]);\n                    }\n                    this.groupLinkNodes.push(node);\n                }\n            }\n        }\n        let counts = lineCounts.trim().split(/\\s+/);\n        if (counts.length < 2)\n            throw ERRPFX + 'counts line malformatted';\n        let numAtoms = parseInt(counts[0]), numBonds = parseInt(counts[1]);\n        if (numAtoms < 0 || numAtoms > lineAtom.length)\n            throw ERRPFX + 'unreasonable atom count: ' + numAtoms;\n        if (numBonds < 0 || numBonds > lineBond.length)\n            throw ERRPFX + 'unreasonable bond count: ' + numBonds;\n        let atomBits = [], bondBits = [];\n        for (let n = 0; n < lineAtom.length; n++) {\n            let line = lineAtom[n];\n            while (n < lineAtom.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineAtom[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits.length < 6)\n                throw ERRPFX + 'atom line has too few components: ' + line;\n            let idx = parseInt(bits[0], 0);\n            if (idx < 1 || idx > numAtoms)\n                throw ERRPFX + 'invalid atom index: ' + bits[0];\n            if (atomBits[idx - 1] != null)\n                throw ERRPFX + 'duplicate atom index: ' + idx;\n            atomBits[idx - 1] = bits;\n        }\n        for (let n = 0; n < lineBond.length; n++) {\n            let line = lineBond[n];\n            while (n < lineBond.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineBond[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits.length < 4)\n                throw ERRPFX + 'bond line has too few components: ' + line;\n            let idx = parseInt(bits[0], 0);\n            if (idx < 1 || idx > numBonds)\n                throw ERRPFX + 'invalid bond index: ' + bits[0];\n            if (bondBits[idx - 1] != null)\n                throw ERRPFX + 'duplicate bond index: ' + idx;\n            bondBits[idx - 1] = bits;\n        }\n        for (let a = 1; a <= numAtoms; a++) {\n            let bits = atomBits[a - 1];\n            if (bits == null)\n                throw ERRPFX + 'atom definition missing for #' + a;\n            let type = bits[1];\n            if (type.length > 2 && type.startsWith('\"') && type.endsWith('\"'))\n                type = type.substring(1, type.length - 1);\n            let x = parseFloat(bits[2]), y = parseFloat(bits[3]), z = parseFloat(bits[4]);\n            let map = parseInt(bits[5]);\n            this.mol.addAtom(type, x, y);\n            if (z != 0) {\n                this.mol.setAtomZ(a, z);\n                this.mol.setIs3D(true);\n            }\n            this.mol.setAtomMapNum(a, map);\n            this.parseQueryAtomList(this.mol, a);\n            for (let i = 6; i < bits.length; i++) {\n                let eq = bits[i].indexOf('=');\n                if (eq < 0)\n                    continue;\n                let key = bits[i].substring(0, eq), val = bits[i].substring(eq + 1);\n                if (key == 'CHG')\n                    this.mol.setAtomCharge(a, parseInt(val));\n                else if (key == 'RAD') {\n                    let spin = parseInt(val);\n                    if (spin == 1 || spin == 3)\n                        this.mol.setAtomUnpaired(a, 2);\n                    else if (spin == 2)\n                        this.mol.setAtomUnpaired(a, 1);\n                }\n                else if (key == 'MASS')\n                    this.mol.setAtomIsotope(a, parseInt(val));\n                else if (key == 'CFG') {\n                    let stereo = parseInt(val);\n                    if (stereo > 0 && this.keepParity) {\n                    }\n                }\n                else if (key == 'VAL')\n                    ForeignMolecule.markExplicitValence(this.mol, a, parseInt(val));\n                else if (key == 'CLASS') {\n                    this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRClass + ':' + val);\n                }\n                else if (key == 'SEQID') {\n                    this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRSeqID + ':' + val);\n                }\n                else if (key == 'ATTCHORD') {\n                    let attch = this.unpackStrings(val);\n                    if (attch != null)\n                        this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRAttchOrd + ':' + attch.join(','));\n                }\n                else if (key == 'HCOUNT') {\n                    let hyd = parseInt(val);\n                    if (hyd != 0)\n                        QueryUtil.setQueryAtomHydrogens(this.mol, a, [Math.max(hyd, 0)]);\n                }\n                else if (key == 'RBCNT') {\n                    let rbc = parseInt(val);\n                    if (rbc == -2)\n                        asdrawnRBC.push(a);\n                    else if (rbc != 0)\n                        QueryUtil.setQueryAtomRingBonds(this.mol, a, [Math.max(rbc, 0)]);\n                }\n                else if (key == 'SUBST') {\n                    let sub = parseInt(val);\n                    if (sub == -2)\n                        asdrawnSUB.push(a);\n                    else if (sub != 0)\n                        QueryUtil.setQueryAtomAdjacency(this.mol, a, [Math.max(sub, 0)]);\n                }\n                else if (key == 'UNSAT') {\n                    let uns = parseInt(val);\n                    if (uns == 1)\n                        QueryUtil.setQueryAtomUnsaturated(this.mol, a, true);\n                }\n            }\n        }\n        for (let b = 1; b <= numBonds; b++) {\n            let bits = bondBits[b - 1];\n            if (bits == null)\n                throw ERRPFX + 'bond definition missing for #' + b;\n            let type = parseInt(bits[1]), bfr = parseInt(bits[2]), bto = parseInt(bits[3]);\n            let order = type >= 1 && type <= 3 ? type : type == 9 || type == 10 ? 0 : 1;\n            this.mol.addBond(bfr, bto, order);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroDative);\n            if (type == 10)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroHydrogen);\n            if (this.keepQuery) {\n                if (type == 4)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1]);\n                else if (type == 5)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [1, 2]);\n                else if (type == 6)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 1]);\n                else if (type == 7)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 2]);\n                else if (type == 8)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 0, 1, 2, 3]);\n            }\n            else {\n                if (type == 4) {\n                    if (this.keepAromatic)\n                        this.mol.setBondTransient(b, Vec.append(this.mol.bondTransient(b), ForeignMoleculeTransient.BondAromatic));\n                    else {\n                        if (this.resBonds == null)\n                            this.resBonds = Vec.booleanArray(false, numBonds);\n                        this.resBonds[b - 1] = true;\n                    }\n                }\n            }\n            let endpts = null;\n            let attach = null;\n            for (let i = 4; i < bits.length; i++) {\n                let eq = bits[i].indexOf('=');\n                if (eq < 0)\n                    continue;\n                let key = bits[i].substring(0, eq), val = bits[i].substring(eq + 1);\n                if (key == 'CFG') {\n                    let dir = parseInt(val);\n                    this.mol.setBondType(b, dir == 1 ? Molecule.BONDTYPE_INCLINED :\n                        dir == 2 ? Molecule.BONDTYPE_UNKNOWN :\n                            dir == 3 ? Molecule.BONDTYPE_DECLINED : Molecule.BONDTYPE_NORMAL);\n                }\n                else if (key == 'DISP') {\n                    if (val == 'COORD')\n                        this.mol.setBondOrder(b, 0);\n                }\n                else if (key == 'ENDPTS')\n                    endpts = this.unpackList(val);\n                else if (key == 'ATTACH')\n                    attach = val;\n            }\n            if (attach != null && endpts != null) {\n                if (attach == 'ALL')\n                    this.groupAttachAll.set(b, endpts);\n                else if (attach == 'ANY')\n                    this.groupAttachAny.set(b, endpts);\n            }\n        }\n        for (let atom of asdrawnRBC)\n            QueryUtil.setQueryAtomRingBonds(this.mol, atom, [this.countRingBonds(atom)]);\n        for (let atom of asdrawnSUB)\n            QueryUtil.setQueryAtomAdjacency(this.mol, atom, [this.countSubstitutions(atom)]);\n        this.postFix();\n        for (let n = 0; n < lineColl.length; n++) {\n            let line = lineColl[n];\n            while (n < lineColl.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineColl[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits[0].startsWith('MDLV30/STEABS')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoAbsolute = this.unpackList(bits[1].substring(5));\n            }\n            else if (bits[0].startsWith('MDLV30/STERAC')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoRacemic.push(this.unpackList(bits[1].substring(6)));\n            }\n            else if (bits[0].startsWith('MDLV30/STEREL')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoRelative.push(this.unpackList(bits[1].substring(6)));\n            }\n        }\n        let stereoGroup = new StereoGroup(this.mol);\n        for (let atoms of this.groupStereoRacemic)\n            stereoGroup.createRacemic(atoms);\n        for (let atoms of this.groupStereoRelative)\n            stereoGroup.createRelative(atoms);\n        stereoGroup.rewriteMolecule();\n        let superatoms = new Map();\n        for (let n = 0; n < lineSgroup.length; n++) {\n            let line = lineSgroup[n];\n            while (n < lineSgroup.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineSgroup[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            let idx = parseInt(bits[0]);\n            if (bits.length > 3 && idx > 0 && bits[1] == 'SUP') {\n                let sup = { atoms: [], name: null };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        sup.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('LABEL='))\n                        sup.name = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('XBONDS='))\n                        sup.bonds = this.unpackList(bits[i].substring(7));\n                    else if (bits[i].startsWith('CLASS='))\n                        sup.templateClass = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('NATREPLACE='))\n                        sup.natReplace = this.withoutQuotes(bits[i].substring(11));\n                    else if (bits[i].startsWith('SAP=')) {\n                        const pts = this.unpackStrings(bits[i].substring(4));\n                        sup.attachPoints = [...((_a = sup.attachPoints) !== null && _a !== void 0 ? _a : []), ...pts];\n                    }\n                }\n                superatoms.set(idx, sup);\n            }\n            else if (bits.length > 3 && idx > 0 && (bits[1] == 'MIX' || bits[1] == 'FOR') && parseInt(bits[2]) == idx) {\n                let mix = { index: idx, parent: 0, atoms: null, type: bits[1] };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        mix.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('PARENT='))\n                        mix.parent = parseInt(bits[i].substring(7));\n                }\n                this.groupMixtures.push(mix);\n            }\n            else if (bits.length > 3 && idx > 0 && (bits[1] == 'SRU' || bits[1] == 'COP' || bits[1] == 'MUL' || bits[1] == 'DAT')) {\n                let sup = { atoms: [], name: null, bracketType: bits[1] };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        sup.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('BONDS='))\n                        sup.bonds = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('LABEL='))\n                        sup.name = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('CONNECT='))\n                        sup.connectType = bits[i].substring(8);\n                    else if (bits[i].startsWith('XBCORR='))\n                        sup.bondConn = this.unpackList(bits[i].substring(7));\n                    else if (bits[i].startsWith('MULT='))\n                        sup.name = this.withoutQuotes(bits[i].substring(5));\n                    else if (bits[i].startsWith('FIELDNAME='))\n                        sup.name = this.withoutQuotes(bits[i].substring(10));\n                    else if (bits[i].startsWith('FIELDDATA='))\n                        sup.value = this.withoutQuotes(bits[i].substring(10));\n                }\n                superatoms.set(idx, sup);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            if (value.bracketType) {\n                superatoms.delete(key);\n                this.applyPolymerBlock(value);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            superatoms.delete(key);\n            this.applySuperAtom(value, Array.from(superatoms.values()));\n        }\n        if (templateBlocks.length > 0) {\n            this.scsrTemplates = templateBlocks.map((lines) => this.parseV3000Template(lines));\n        }\n    }\n    parseQueryAtomList(mol, atom) {\n        let label = mol.atomElement(atom);\n        let not = false;\n        if (label.startsWith('NOT ')) {\n            label = label.substring(4);\n            not = true;\n        }\n        if (label.length < 2 || !label.startsWith('[') || !label.endsWith(']'))\n            return;\n        label = label.substring(1, label.length - 1);\n        let elements = label.split(',');\n        mol.setAtomElement(atom, '*');\n        if (!not)\n            QueryUtil.setQueryAtomElements(mol, atom, elements);\n        else\n            QueryUtil.setQueryAtomElementsNot(mol, atom, elements);\n    }\n    applySuperAtom(sup, residual) {\n        if (sup.name == null || Vec.isBlank(sup.atoms))\n            return;\n        let mask = Vec.booleanArray(true, this.mol.numAtoms);\n        for (let a of sup.atoms)\n            mask[a - 1] = false;\n        let name = sup.name;\n        let i;\n        while ((i = name.indexOf('\\\\S')) >= 0)\n            name = name.substring(0, i) + '{^' + name.substring(i + 2);\n        while ((i = name.indexOf('\\\\s')) >= 0)\n            name = name.substring(0, i) + '{' + name.substring(i + 2);\n        while ((i = name.indexOf('\\\\n')) >= 0)\n            name = name.substring(0, i) + '}' + name.substring(i + 2);\n        let [mod, abvAtom] = !sup.templateClass ? MolUtil.convertToAbbrevIndex(this.mol, mask, name) : [null, null];\n        if (mod == null) {\n            let keyval = {};\n            if (sup.bonds)\n                keyval['bonds'] = sup.bonds.join(' ');\n            if (sup.templateClass)\n                keyval['templateClass'] = sup.templateClass;\n            if (sup.natReplace)\n                keyval['natReplace'] = sup.natReplace;\n            if (sup.attachPoints)\n                keyval['attachPoints'] = sup.attachPoints.join(' ');\n            ForeignMolecule.markSgroupMultiAttach(this.mol, name, sup.atoms, keyval);\n            return;\n        }\n        this.mol = mod;\n        let map = Vec.maskMap(mask);\n        for (let res of residual) {\n            let subsumed = false;\n            for (let n = res.atoms.length - 1; n >= 0; n--) {\n                let atom = map[res.atoms[n] - 1] + 1;\n                if (atom == 0) {\n                    res.atoms = Vec.remove(res.atoms, n);\n                    subsumed = true;\n                }\n                else\n                    res.atoms[n] = atom;\n            }\n            if (subsumed)\n                res.atoms = Vec.sorted(Vec.append(res.atoms, abvAtom));\n        }\n    }\n    applyPolymerBlock(sup) {\n        if (sup.bracketType == 'MUL') {\n            let mult = parseInt(sup.name);\n            ForeignMolecule.markSgroupMultiRepeat(this.mol, mult, sup.atoms);\n            return;\n        }\n        if (sup.bracketType == 'DAT') {\n            if (sup.atoms != null)\n                ForeignMolecule.markSgroupData(this.mol, sup.name, sup.value, sup.unit, sup.query, sup.atoms);\n            return;\n        }\n        let poly = new PolymerBlock(this.mol);\n        let connect = null;\n        if (sup.connectType == null) { }\n        else if (sup.connectType == 'HT')\n            connect = PolymerBlockConnectivity.HeadToTail;\n        else if (sup.connectType == 'HH')\n            connect = PolymerBlockConnectivity.HeadToHead;\n        else if (sup.connectType == 'EU')\n            connect = PolymerBlockConnectivity.Random;\n        else\n            return;\n        let bondConn = null;\n        if (Vec.len(sup.bondConn) == 3) {\n            let b1 = sup.bondConn[0], b2 = sup.bondConn[2], b3 = sup.bondConn[1], b4 = 0;\n            for (let n = 1; n <= this.mol.numBonds; n++)\n                if (n != b1 && n != b2 && n != b3) {\n                    let in1 = sup.atoms.indexOf(this.mol.bondFrom(n)) >= 0, in2 = sup.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n                    if ((in1 && !in2) || (!in1 && in2)) {\n                        if (b4 > 0) {\n                            b4 = 0;\n                            break;\n                        }\n                        b4 = n;\n                    }\n                }\n            bondConn = [b1, b2, b3, b4];\n        }\n        else if (Vec.len(sup.bondConn) == 4) {\n            bondConn = sup.bondConn;\n        }\n        let unit = new PolymerBlockUnit(sup.atoms);\n        unit.connect = connect;\n        unit.bondConn = bondConn;\n        poly.createUnit(unit);\n    }\n    parseV3000Template(lines) {\n        let header = lines[0];\n        let bits = this.splitWithQuotes(header.substring('M  V30 TEMPLATE '.length));\n        let name = bits[1], natReplace = null;\n        for (let n = 2; n < bits.length; n++) {\n            if (bits[n].startsWith('NATREPLACE='))\n                natReplace = bits[n].substring(11);\n        }\n        lines[0] = '  0  0  0  0  0  0  0  0  0  0  0 V3000';\n        lines.push('M  END');\n        let mdl = new MDLMOLReader(lines.join('\\n'));\n        mdl.parseHeader = false;\n        mdl.parse();\n        return { name, natReplace, mol: mdl.mol };\n    }\n    withoutQuotes(str) {\n        if (str.length >= 2 && str.startsWith('\"') && str.endsWith('\"'))\n            return str.substring(1, str.length - 1);\n        return str;\n    }\n    splitWithQuotes(line) {\n        let segments = [];\n        let seg = '';\n        let depth = 0, quote = false;\n        for (let n = 0; n < line.length; n++) {\n            let ch = line.charAt(n);\n            if (ch == ' ' && depth == 0 && !quote) {\n                if (seg.length > 0)\n                    segments.push(seg);\n                seg = '';\n            }\n            else {\n                seg += ch;\n                if (ch == '\"')\n                    quote = !quote;\n                else if (ch == '(' || ch == '[')\n                    depth++;\n                else if (ch == ')' || ch == ']')\n                    depth--;\n            }\n        }\n        if (seg.length > 0)\n            segments.push(seg);\n        return segments;\n    }\n    unpackList(str) {\n        if (!str.startsWith('(') || !str.endsWith(')'))\n            return null;\n        str = str.substring(1, str.length - 1);\n        let values = [];\n        for (let bit of str.split(' '))\n            values.push(parseInt(bit));\n        if (values[0] != values.length - 1)\n            return null;\n        return Vec.remove(values, 0);\n    }\n    unpackStrings(str) {\n        if (!str.startsWith('(') || !str.endsWith(')'))\n            return null;\n        str = str.substring(1, str.length - 1);\n        let values = str.split(' ');\n        if (parseInt(values[0]) != values.length - 1)\n            return null;\n        return Vec.remove(values, 0);\n    }\n    countRingBonds(atom) {\n        let count = 0;\n        for (let b of this.mol.atomAdjBonds(atom))\n            if (this.mol.bondInRing(b))\n                count++;\n        return count;\n    }\n    countSubstitutions(atom) {\n        let count = 0;\n        for (let adj of this.mol.atomAdjList(atom))\n            if (this.mol.atomElement(adj) != 'H')\n                count++;\n        return count;\n    }\n}\nexport class MDLSDFReader {\n    constructor(strData) {\n        this.ds = new DataSheet();\n        this.upcastColumns = true;\n        this.pos = 0;\n        this.lines = strData.split(/\\r?\\n/);\n    }\n    parse() {\n        this.parseStream();\n        if (this.upcastColumns)\n            this.upcastStringColumns();\n        return this.ds;\n    }\n    parseStream() {\n        let ds = this.ds;\n        ds.appendColumn('Molecule', \"molecule\", 'Molecular structure');\n        let colName = -1;\n        let entry = [];\n        while (this.pos < this.lines.length) {\n            let line = this.lines[this.pos++];\n            if (!line.startsWith('$$$$')) {\n                entry.push(line);\n                continue;\n            }\n            let rn = ds.appendRow();\n            let molstr = '';\n            let pos = 0;\n            while (pos < entry.length) {\n                line = entry[pos];\n                if (line.startsWith('> '))\n                    break;\n                molstr += line + '\\n';\n                pos++;\n                if (line.startsWith('M\tEND'))\n                    break;\n            }\n            let mol = null, name = null;\n            try {\n                if (molstr.length > 0) {\n                    let mdl = new MDLMOLReader(molstr);\n                    mdl.parse();\n                    mol = mdl.mol;\n                    name = mdl.molName;\n                }\n            }\n            catch (ex) {\n            }\n            if (mol != null)\n                ds.setMolecule(rn, 0, mol);\n            if (name) {\n                if (colName < 0)\n                    colName = ds.appendColumn('Name', \"string\", 'Molecule name');\n                ds.setString(rn, colName, name);\n            }\n            if (rn == 0 && mol != null) {\n                let str1 = entry[0], str3 = entry[2];\n                if (str1.length >= 7 && str1.startsWith('$name=')) {\n                    ds.changeColumnName(0, str1.substring(6), ds.colDescr(0));\n                }\n                if (str3.length >= 8 && str3.startsWith('$title=')) {\n                    ds.title = str3.substring(7);\n                }\n            }\n            for (; pos + 1 < entry.length; pos += 3) {\n                let key = entry[pos], val = entry[pos + 1];\n                if (!key.startsWith('>'))\n                    continue;\n                let z = key.indexOf('<');\n                if (z < 0)\n                    continue;\n                key = key.substring(z + 1);\n                z = key.indexOf('>');\n                if (z < 0)\n                    continue;\n                key = key.substring(0, z);\n                if (key.length == 0)\n                    continue;\n                while (pos + 2 < entry.length && entry[pos + 2].length > 0) {\n                    val += '\\n' + entry[pos + 2];\n                    pos++;\n                }\n                let cn = ds.findColByName(key);\n                if (cn < 0)\n                    cn = ds.appendColumn(key, \"string\", '');\n                if (val.length == 0)\n                    ds.setToNull(rn, cn);\n                else\n                    ds.setString(rn, cn, val);\n            }\n            entry = [];\n        }\n        if (ds.numRows == 0)\n            this.ds = null;\n    }\n    upcastStringColumns() {\n        let ds = this.ds;\n        for (let i = 0; i < ds.numCols; i++)\n            if (ds.colType(i) == \"string\") {\n                let allnull = true, allreal = true, allint = true, allbool = true;\n                for (let j = 0; j < ds.numRows; j++) {\n                    if (!allreal && !allint && !allbool)\n                        break;\n                    if (ds.isNull(j, i))\n                        continue;\n                    allnull = false;\n                    let val = ds.getString(j, i);\n                    if (allbool) {\n                        let lc = val.toLowerCase();\n                        if (lc != 'true' && lc != 'false')\n                            allbool = false;\n                    }\n                    if (allint) {\n                        let int = parseInt(val);\n                        if (!isFinite(int) || int != parseFloat(val))\n                            allint = false;\n                    }\n                    if (allreal) {\n                        if (!isFinite(parseFloat(val)))\n                            allreal = false;\n                    }\n                }\n                if (allnull) { }\n                else if (allint)\n                    ds.changeColumnType(i, \"integer\");\n                else if (allreal)\n                    ds.changeColumnType(i, \"real\");\n                else if (allbool)\n                    ds.changeColumnType(i, \"boolean\");\n            }\n    }\n}\n//# sourceMappingURL=MDLReader.js.map","import { Vec } from '../util/Vec';\nimport { BondArtifact } from '../mol/BondArtifact';\nimport { ForeignMolecule, ForeignMoleculeTransient } from '../mol/ForeignMolecule';\nimport { MDLMOL_VALENCE } from './MDLReader';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity } from '../mol/PolymerBlock';\nimport { QueryUtil } from '../mol/QueryUtil';\nimport { StereoGroup } from '../mol/StereoGroup';\nconst VPFX = 'M  V30 ';\nexport class MDLMOLWriter {\n    constructor(mol) {\n        this.mol = mol;\n        this.includeHeader = true;\n        this.includeCounts = true;\n        this.includeEnd = true;\n        this.overallStereoAbsolute = true;\n        this.enhancedFields = false;\n        this.chargeSeparate = false;\n        this.abbrevSgroups = true;\n        this.polymerBlocks = true;\n        this.molName = '';\n        this.scsrTemplates = null;\n        this.sgroups = [];\n        this.lines = [];\n    }\n    write() {\n        if (this.includeHeader) {\n            this.lines.push(this.molName);\n            this.lines.push('Generated by WebMolKit');\n            this.lines.push('');\n        }\n        this.writeCTAB();\n        return this.lines.join('\\n');\n    }\n    writeV3000() {\n        if (this.includeHeader) {\n            this.lines.push(this.molName);\n            this.lines.push('Generated by WebMolKit');\n            this.lines.push('');\n        }\n        this.writeCTAB3000();\n        return this.lines.join('\\n');\n    }\n    writeEither() {\n        let triggered = StereoGroup.hasStereoGroups(this.mol) || this.mol.numAtoms >= 1000 || this.mol.numBonds >= 1000 || Vec.notBlank(this.scsrTemplates);\n        if (!triggered)\n            for (let n = 1; n <= this.mol.numBonds; n++)\n                if (this.mol.bondOrder(n) == 0 && QueryUtil.queryBondOrders(this.mol, n) == null) {\n                    triggered = true;\n                    break;\n                }\n        if (triggered)\n            return this.writeV3000();\n        else\n            return this.write();\n    }\n    getResult() {\n        return this.lines.join('\\n');\n    }\n    writeCTAB() {\n        var _a;\n        let mol = this.mol = this.mol.clone();\n        mol.keepTransient = true;\n        if (MolUtil.hasAnyAbbrev(mol) || ForeignMolecule.hasAnySgroupMultiAttach(mol) || ForeignMolecule.hasAnySgroupMultiRepeat(mol) || ForeignMolecule.hasAnySgroupData(mol)) {\n            if (this.abbrevSgroups)\n                this.partialAbbrevExpansion();\n            else\n                MolUtil.expandAbbrevs(mol, true);\n            this.prepareSgroups();\n        }\n        let atomList1 = [], atomList2 = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let elements = null;\n            let logic = 'F';\n            elements = QueryUtil.queryAtomElements(mol, n);\n            if (elements == null) {\n                elements = QueryUtil.queryAtomElementsNot(mol, n);\n                logic = 'T';\n            }\n            if (elements == null)\n                continue;\n            mol.setAtomElement(n, 'L');\n            let line = this.intrpad(n, 3) + ' ' + logic + '  ' + this.intrpad(elements.length, 3);\n            for (let el of elements)\n                line += this.intrpad(Molecule.elementAtomicNumber(el), 4);\n            atomList1.push(line);\n            line = 'M  ALS ' + this.intrpad(n, 3) + this.intrpad(elements.length, 3) + ' ' + logic + ' ';\n            for (let el of elements)\n                line += this.pad(el, 4);\n            atomList2.push(line);\n        }\n        this.lines.push(this.intrpad(mol.numAtoms, 3) + this.intrpad(mol.numBonds, 3) + this.intrpad(atomList1.length, 3) +\n            '  0' + (this.overallStereoAbsolute ? '  1' : '  0') + '  0  0  0  0  0999 V2000');\n        let chgidx = [], chgval = [];\n        let radidx = [], radval = [];\n        let isoidx = [], isoval = [];\n        let rgpidx = [], rgpval = [];\n        let hydidx = [], hydval = [];\n        let zchidx = [], zchval = [];\n        let zboidx = [], zboval = [];\n        let rbcidx = [], rbcval = [];\n        let subidx = [], subval = [];\n        let unsidx = [], unsval = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n), y = mol.atomY(n);\n            let z = mol.is3D() ? mol.atomZ(n) : 0;\n            let line = this.rpad(x.toFixed(4), 10) + this.rpad(y.toFixed(4), 10) + this.rpad(z.toFixed(4), 10);\n            let el = mol.atomElement(n);\n            let str = el;\n            if (str.length > 3)\n                str = str.substring(0, 3);\n            if (str.length > 1 && str.charAt(0) == 'R' && str.charAt(1) >= '0' && str.charAt(1) <= '9') {\n                rgpidx.push(n);\n                rgpval.push(parseInt(str.substring(1)));\n                str = 'R#';\n            }\n            while (str.length < 4)\n                str += ' ';\n            line += ' ' + str + '0';\n            let chg = mol.atomCharge(n), rad = mol.atomUnpaired(n), mapnum = mol.atomMapNum(n);\n            if (chg >= -3 && chg <= -1)\n                chg = 4 - chg;\n            else if (chg == 0 && rad == 2)\n                chg = 4;\n            else if (chg >= 1 && chg <= 3)\n                chg = 4 - chg;\n            else\n                chg = 0;\n            let qhyd = QueryUtil.queryAtomHydrogens(mol, n);\n            let hyd = 0;\n            if (Vec.len(qhyd) == 1)\n                hyd = qhyd[0] + 1;\n            let val = this.mdlValence(mol, n, 15);\n            line += this.intrpad(chg, 3) + '  0' + this.intrpad(hyd, 3) + '  0' + this.intrpad(val, 3) + '  0  0  0' + this.intrpad(mapnum, 3) + '  0  0';\n            this.lines.push(line);\n            if (mol.atomCharge(n) != 0) {\n                chgidx.push(n);\n                chgval.push(mol.atomCharge(n));\n            }\n            if (this.enhancedFields) {\n                if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN) {\n                    hydidx.push(n);\n                    hydval.push(mol.atomHExplicit(n));\n                }\n            }\n            if (rad == 1) {\n                radidx.push(n);\n                radval.push(2);\n            }\n            if (rad == 2) {\n                radidx.push(n);\n                radval.push(1);\n            }\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) {\n                isoidx.push(n);\n                isoval.push(mol.atomIsotope(n));\n            }\n            let qrbc = QueryUtil.queryAtomRingBonds(mol, n), qsub = QueryUtil.queryAtomAdjacency(mol, n);\n            let quns = QueryUtil.queryAtomUnsaturated(mol, n);\n            if (Vec.len(qrbc) == 1) {\n                rbcidx.push(n);\n                rbcval.push(qrbc[0] == 0 ? -1 : qrbc[0]);\n            }\n            if (Vec.len(qsub) == 1) {\n                subidx.push(n);\n                subval.push(qsub[0] == 0 ? -1 : qsub[0]);\n            }\n            if (quns == true) {\n                unsidx.push(n);\n                unsval.push(1);\n            }\n        }\n        let maskArom = ForeignMolecule.noteAromaticBonds(mol);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let order = mol.bondOrder(n), type = order;\n            let qbond = Vec.sorted((_a = QueryUtil.queryBondOrders(mol, n)) !== null && _a !== void 0 ? _a : []);\n            if (maskArom[n - 1] || Vec.equals(qbond, [-1]))\n                type = 4;\n            else if (Vec.equals(qbond, [1, 2]))\n                type = 5;\n            else if (Vec.equals(qbond, [-1, 1]))\n                type = 6;\n            else if (Vec.equals(qbond, [-1, 2]))\n                type = 7;\n            else if (Vec.equals(qbond, [-1, 0, 1, 2, 3]))\n                type = 8;\n            else if (type > 3)\n                type = 3;\n            let stereo = mol.bondType(n);\n            if (stereo == Molecule.BONDTYPE_NORMAL) { }\n            else if (stereo == Molecule.BONDTYPE_INCLINED) {\n                stereo = 1;\n            }\n            else if (stereo == Molecule.BONDTYPE_DECLINED) {\n                stereo = 6;\n            }\n            else if (stereo == Molecule.BONDTYPE_UNKNOWN) {\n                if (type == 1)\n                    stereo = 4;\n                else\n                    stereo = 3;\n            }\n            else\n                stereo = 0;\n            let line = this.intrpad(mol.bondFrom(n), 3) + this.intrpad(mol.bondTo(n), 3) +\n                this.intrpad(type, 3) + this.intrpad(stereo, 3) + '  0  0  0';\n            this.lines.push(line);\n            if (this.enhancedFields) {\n                if ((order < 1 || order > 3) || type != order && Vec.isBlank(qbond)) {\n                    zboidx.push(n);\n                    zboval.push(order);\n                }\n            }\n        }\n        this.lines.push(...atomList1);\n        this.lines.push(...atomList2);\n        this.writeMBlockPair('CHG', chgidx, chgval);\n        this.writeMBlockPair('RAD', radidx, radval);\n        this.writeMBlockPair('ISO', isoidx, isoval);\n        this.writeMBlockPair('RGP', rgpidx, rgpval);\n        this.writeMBlockPair('HYD', hydidx, hydval);\n        this.writeMBlockPair('ZCH', zchidx, zchval);\n        this.writeMBlockPair('ZBO', zboidx, zboval);\n        this.writeMBlockPair('RBC', rbcidx, rbcval);\n        this.writeMBlockPair('SUB', subidx, subval);\n        this.writeMBlockPair('UNS', unsidx, unsval);\n        if (this.enhancedFields) {\n            let artifacts = new BondArtifact(this.mol);\n            let idx = 0;\n            for (let path of artifacts.getResPaths())\n                this.writeMBlockFlat('ZPA', ++idx, path.atoms);\n            for (let ring of artifacts.getResRings())\n                this.writeMBlockFlat('ZRI', ++idx, ring.atoms);\n            for (let arene of artifacts.getArenes())\n                this.writeMBlockFlat('ZAR', ++idx, Vec.prepend(arene.atoms, arene.centre));\n        }\n        let inSgroup = Vec.booleanArray(false, mol.numAtoms);\n        for (let s = 0; s < this.sgroups.length; s++) {\n            let sg = this.sgroups[s];\n            for (let n of sg.atoms)\n                inSgroup[n - 1] = true;\n            let sidx = this.intrpad(s + 1, 4);\n            this.lines.push('M  STY  1' + sidx + ' ' + sg.type);\n            for (let n = 0; n < sg.atoms.length; n += 15) {\n                let sz = Math.min(sg.atoms.length - n, 15);\n                let line = 'M  SAL' + sidx + this.intrpad(sz, 3);\n                for (let i = 0; i < sz; i++)\n                    line += this.intrpad(sg.atoms[n + i], 4);\n                this.lines.push(line);\n            }\n            if (sg.type != 'DAT')\n                this.lines.push('M  SMT' + sidx + ' ' + sg.name);\n            if (sg.type == 'MUL') {\n                let mult = parseInt(sg.name), unit = sg.atoms.length / mult;\n                for (let n = 0; n < unit; n += 15) {\n                    let sz = Math.min(unit - n, 15);\n                    let line = 'M  SPA' + sidx + this.intrpad(sz, 3);\n                    for (let i = 0; i < sz; i++)\n                        line += this.intrpad(sg.atoms[n + i], 4);\n                    this.lines.push(line);\n                }\n                if (sg.parent > 0)\n                    this.lines.push('M  SPL    1' + sidx + this.intrpad(sg.parent, 4));\n            }\n            if (sg.type == 'DAT') {\n                this.lines.push('M  SDT' + sidx + ' ' + this.pad(sg.name, 32) + this.pad(sg.unit, 20) + sg.query);\n                this.lines.push('M  SED' + sidx + ' ' + sg.value);\n            }\n        }\n        if (this.polymerBlocks)\n            this.encodePolymerBlocks(this.sgroups.length);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomElement(n).length > 2) {\n                this.lines.push('A  ' + this.intrpad(n, 3));\n                this.lines.push(mol.atomElement(n));\n            }\n        if (this.includeEnd)\n            this.lines.push('M  END');\n    }\n    writeMBlockPair(token, idx, val) {\n        const sz = idx.length;\n        for (let i = 0; i < sz; i += 8) {\n            let count = Math.min(8, sz - i);\n            let line = 'M  ' + token + this.intrpad(count, 3);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(idx[i + j], 4) + this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    writeMBlockFlat(token, idx, val) {\n        const sz = val.length;\n        for (let i = 0; i < sz; i += 15) {\n            let count = Math.min(15, sz - i);\n            let line = 'M  ' + token + this.intrpad(count, 3) + this.intrpad(idx, 4);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    writeMBlockFlatIdxFirst(token, idx, val) {\n        const sz = val.length;\n        for (let i = 0; i < sz; i += 15) {\n            let count = Math.min(15, sz - i);\n            let line = 'M  ' + token + this.intrpad(idx, 4) + this.intrpad(count, 3);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    intrpad(num, sz) {\n        return this.rpad(num.toString(), sz);\n    }\n    rpad(str, sz) {\n        while (str.length < sz)\n            str = ' ' + str;\n        return str;\n    }\n    pad(str, sz) {\n        while (str.length < sz)\n            str += ' ';\n        return str;\n    }\n    mdlValence(mol, atom, zeroVal) {\n        let marked = ForeignMolecule.noteExplicitValence(mol, atom);\n        if (marked != null)\n            return marked > 0 ? marked : zeroVal;\n        let hyd = mol.atomHydrogens(atom), el = mol.atomElement(atom);\n        let options = MDLMOL_VALENCE[el];\n        if (options == null && hyd == 0)\n            return 0;\n        let chg = mol.atomCharge(atom);\n        let chgmod = (el == 'C' || el == 'H') ? Math.abs(chg) : el == 'B' ? -Math.abs(chg) : -chg;\n        let bondSum = 0;\n        for (let b of mol.atomAdjBonds(atom))\n            bondSum += mol.bondOrder(b);\n        let nativeVal = chgmod + hyd + bondSum;\n        if (options)\n            for (let optVal of options)\n                if (optVal >= chgmod + bondSum) {\n                    if (optVal == nativeVal)\n                        return 0;\n                    break;\n                }\n        let val = nativeVal - chgmod;\n        return val <= 0 || val > 14 ? zeroVal : val;\n    }\n    partialAbbrevExpansion() {\n        const { mol } = this;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                let frag = MolUtil.getAbbrev(mol, n);\n                if (frag == null || mol.atomAdjCount(n) != 1) {\n                    MolUtil.clearAbbrev(mol, n);\n                    continue;\n                }\n                if (MolUtil.hasAnyAbbrev(frag)) {\n                    MolUtil.expandAbbrevs(frag, true);\n                    MolUtil.setAbbrev(mol, n, frag);\n                }\n                let order = mol.bondOrder(mol.atomAdjBonds(n)[0]);\n                if (frag.atomAdjCount(1) == 1 && order == frag.bondOrder(frag.atomAdjBonds(1)[0]))\n                    continue;\n                MolUtil.expandOneAbbrev(mol, n, true);\n                n--;\n            }\n    }\n    prepareSgroups() {\n        const { mol } = this;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomMapNum(n) < 0)\n                mol.setAtomMapNum(n, 0);\n        let next = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                this.sgroups.push({ type: 'SUP', name: mol.atomElement(n), atoms: null });\n                let mask = MolUtil.expandOneAbbrev(mol, n, true);\n                if (mask == null)\n                    continue;\n                next--;\n                for (let i = 0; i < mask.length; i++)\n                    if (mask[i])\n                        mol.setAtomMapNum(i + 1, next);\n                n--;\n            }\n        for (let idx = -1, p = 0; idx >= next; idx--, p++) {\n            let atoms = [];\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomMapNum(n) == idx) {\n                    atoms.push(n);\n                    mol.setAtomMapNum(n, 0);\n                }\n            this.sgroups[p].atoms = atoms;\n        }\n        for (let ma of ForeignMolecule.noteAllSgroupMultiAttach(mol)) {\n            let sg = { type: 'SUP', name: ma.name, atoms: ma.atoms };\n            let str = ma.keyval['bonds'];\n            if (str)\n                sg.bonds = str.split(' ').map((v) => parseInt(v));\n            sg.templateClass = ma.keyval['templateClass'];\n            sg.natReplace = ma.keyval['natReplace'];\n            str = ma.keyval['attachPoints'];\n            if (str)\n                sg.attachPoints = str.split(' ');\n            this.sgroups.push(sg);\n        }\n        for (let mr of ForeignMolecule.noteAllSgroupMultiRepeat(mol))\n            this.sgroups.push({ type: 'MUL', name: mr.mult.toString(), atoms: mr.atoms });\n        for (let dat of ForeignMolecule.noteAllSgroupData(mol))\n            this.sgroups.push({ type: 'DAT', name: dat.name, value: dat.value, unit: dat.unit, query: dat.query, atoms: dat.atoms });\n        for (let n = 0; n < this.sgroups.length; n++) {\n            let sg = this.sgroups[n];\n            if (sg.type != 'MUL')\n                continue;\n            let bestIdx = -1, bestSize = Number.MAX_SAFE_INTEGER;\n            skip: for (let i = 0; i < this.sgroups.length; i++)\n                if (i != n) {\n                    let look = this.sgroups[i];\n                    if (look.type != 'MUL' || look.atoms.length >= bestSize)\n                        continue;\n                    for (let a of sg.atoms)\n                        if (!look.atoms.includes(a))\n                            continue skip;\n                    bestIdx = i;\n                    bestSize = look.atoms.length;\n                }\n            if (bestIdx >= 0)\n                sg.parent = bestIdx + 1;\n        }\n    }\n    encodePolymerBlocks(idx) {\n        let polymers = new PolymerBlock(this.mol);\n        for (let id of polymers.getIDList()) {\n            let unit = polymers.getUnit(id);\n            let sidx = this.intrpad(++idx, 4);\n            this.lines.push('M  STY  1' + sidx + ' SRU');\n            if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                this.lines.push('M  SCN  1' + sidx + ' HT ');\n            else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                this.lines.push('M  SCN  1' + sidx + ' HH ');\n            else if (unit.connect == PolymerBlockConnectivity.Random)\n                this.lines.push('M  SCN  1' + sidx + ' EU ');\n            this.writeMBlockFlatIdxFirst('SAL', idx, unit.atoms);\n            let bonds = null;\n            for (let n = 1; n <= this.mol.numBonds; n++) {\n                let fl1 = unit.atoms.indexOf(this.mol.bondFrom(n)) >= 0, fl2 = unit.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n                if ((fl1 && !fl2) || (!fl1 && fl2))\n                    bonds = Vec.append(bonds, n);\n            }\n            if (bonds != null)\n                this.writeMBlockFlatIdxFirst('SBL', idx, bonds);\n            if (Vec.len(unit.bondConn) == 4) {\n                let bcrs = [unit.bondConn[0], unit.bondConn[2], unit.bondConn[1]];\n                this.writeMBlockFlatIdxFirst('CRS', idx, bcrs);\n            }\n            this.lines.push('M  SMT' + sidx + ' n');\n        }\n    }\n    writeCTAB3000() {\n        var _a;\n        let mol = this.mol;\n        if (MolUtil.hasAnyAbbrev(mol) || ForeignMolecule.hasAnySgroupMultiAttach(mol) || ForeignMolecule.hasAnySgroupMultiRepeat(mol) || ForeignMolecule.hasAnySgroupData(mol)) {\n            mol = this.mol = mol.clone();\n            mol.keepTransient = true;\n            if (this.abbrevSgroups)\n                this.partialAbbrevExpansion();\n            else\n                MolUtil.expandAbbrevs(mol, true);\n            this.prepareSgroups();\n        }\n        let sgroupText = this.populateV3000Sgroups();\n        if (this.includeCounts)\n            this.lines.push('  0  0  0     0  0            999 V3000');\n        this.lines.push(VPFX + 'BEGIN CTAB');\n        this.lines.push(VPFX + `COUNTS ${mol.numAtoms} ${mol.numBonds} ${sgroupText.length} 0 ${this.overallStereoAbsolute ? 1 : 0}`);\n        this.lines.push(VPFX + 'BEGIN ATOM');\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let label = mol.atomElement(n);\n            let qel = QueryUtil.queryAtomElements(mol, n);\n            if (qel != null)\n                label = '[' + qel.join(',') + ']';\n            else {\n                qel = QueryUtil.queryAtomElementsNot(mol, n);\n                if (qel != null)\n                    label = 'NOT [' + qel.join(',') + ']';\n            }\n            if (label.includes(' '))\n                label = `\"${label}\"`;\n            let x = mol.atomX(n), y = mol.atomY(n);\n            let z = mol.is3D() ? mol.atomZ(n) : 0;\n            let mapnum = mol.atomMapNum(n), chg = mol.atomCharge(n), unp = mol.atomUnpaired(n);\n            let isotope = mol.atomIsotope(n), val = this.mdlValence(mol, n, -1);\n            let line = `${VPFX}${n} ${label} ${x.toFixed(4)} ${y.toFixed(4)} ${z.toFixed(4)} ${mapnum}`;\n            if (chg != 0)\n                line += ' CHG=' + chg;\n            if (unp == 1)\n                line += ' RAD=2';\n            else if (unp == 2)\n                line += ' RAD=1';\n            if (isotope != 0)\n                line += ' MASS=' + isotope;\n            if (val != 0)\n                line += ' VAL=' + val;\n            let qhyd = QueryUtil.queryAtomHydrogens(mol, n), qrbc = QueryUtil.queryAtomRingBonds(mol, n), qsub = QueryUtil.queryAtomAdjacency(mol, n);\n            let quns = QueryUtil.queryAtomUnsaturated(mol, n);\n            if (Vec.len(qhyd) == 1)\n                line += ' HCOUNT=' + (qhyd[0] == 0 ? -1 : qhyd[0]);\n            if (Vec.len(qrbc) == 1)\n                line += ' RBCNT=' + (qrbc[0] == 0 ? -1 : qrbc[0]);\n            if (Vec.len(qsub) == 1)\n                line += ' SUBST=' + (qsub[0] == 0 ? -1 : qsub[0]);\n            if (quns == true)\n                line += ' UNSAT=1';\n            for (let trans of mol.atomTransient(n)) {\n                if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRClass))\n                    line += ' CLASS=' + trans.substring(ForeignMoleculeTransient.AtomSCSRClass.length + 1);\n                else if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRSeqID))\n                    line += ' SEQID=' + trans.substring(ForeignMoleculeTransient.AtomSCSRSeqID.length + 1);\n                else if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRAttchOrd)) {\n                    let bits = trans.substring(ForeignMoleculeTransient.AtomSCSRAttchOrd.length + 1).split(',');\n                    line += ' ATTCHORD=' + this.packV3000Strings(bits);\n                }\n            }\n            this.lines.push(line);\n        }\n        this.lines.push(VPFX + 'END ATOM');\n        if (mol.numBonds > 0) {\n            this.lines.push(VPFX + 'BEGIN BOND');\n            let maskArom = ForeignMolecule.noteAromaticBonds(mol);\n            let maskHBond = ForeignMolecule.noteZeroHydrogenBonds(mol);\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n                let order = mol.bondOrder(n), type = order;\n                let qbond = Vec.sorted((_a = QueryUtil.queryBondOrders(mol, n)) !== null && _a !== void 0 ? _a : []);\n                if (maskArom[n - 1] || Vec.equals(qbond, [-1]))\n                    type = 4;\n                else if (Vec.equals(qbond, [1, 2]))\n                    type = 5;\n                else if (Vec.equals(qbond, [-1, 1]))\n                    type = 6;\n                else if (Vec.equals(qbond, [-1, 2]))\n                    type = 7;\n                else if (Vec.equals(qbond, [-1, 0, 1, 2, 3]))\n                    type = 8;\n                else if (type == 0) {\n                    if (!maskHBond[n - 1])\n                        type = 9;\n                    else\n                        type = 10;\n                }\n                else if (type > 3)\n                    type = 3;\n                let stereo = mol.bondType(n);\n                let line = `${VPFX}${n} ${type} ${bfr} ${bto}`;\n                if (stereo == Molecule.BONDTYPE_INCLINED)\n                    line += ' CFG=1';\n                else if (stereo == Molecule.BONDTYPE_DECLINED)\n                    line += ' CFG=3';\n                else if (stereo == Molecule.BONDTYPE_UNKNOWN)\n                    line += ' CFG=2';\n                if (order == 0 && !maskHBond[n - 1])\n                    line += ' DISP=COORD';\n                this.lines.push(line);\n            }\n            this.lines.push(VPFX + 'END BOND');\n        }\n        if (sgroupText.length > 0) {\n            this.lines.push(VPFX + 'BEGIN SGROUP');\n            this.lines.push(...sgroupText);\n            this.lines.push(VPFX + 'END SGROUP');\n        }\n        let collections = [];\n        let stereoGroup = new StereoGroup(mol);\n        let racidx = 0, relidx = 0;\n        for (let atoms of stereoGroup.getRacemicAtoms())\n            collections.push(VPFX + 'MDLV30/STERAC' + (++racidx) + ' ATOMS=' + this.packV3000List(atoms));\n        for (let atoms of stereoGroup.getRelativeAtoms())\n            collections.push(VPFX + 'MDLV30/STEREL' + (++relidx) + ' ATOMS=' + this.packV3000List(atoms));\n        if (collections.length > 0) {\n            this.lines.push(VPFX + 'BEGIN COLLECTION');\n            this.lines.push(...collections);\n            this.lines.push(VPFX + 'END COLLECTION');\n        }\n        this.lines.push(VPFX + 'END CTAB');\n        if (Vec.notBlank(this.scsrTemplates))\n            this.populateSCSRTemplates();\n        if (this.includeEnd)\n            this.lines.push('M  END');\n    }\n    populateV3000Sgroups() {\n        let mol = this.mol;\n        let lines = [];\n        for (let s = 0; s < this.sgroups.length; s++) {\n            let sg = this.sgroups[s];\n            let sid = lines.length + 1;\n            let txt = `${VPFX}${sid} ${sg.type} 0`;\n            if (sg.type == 'SUP') {\n                txt += ' LABEL=' + (sg.name.includes(' ') ? `\"${sg.name}\"` : sg.name);\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                if (sg.bonds)\n                    txt += ' XBONDS=' + this.packV3000List(sg.bonds);\n                if (sg.templateClass)\n                    txt += ' CLASS=' + sg.templateClass;\n                if (sg.natReplace)\n                    txt += ' NATREPLACE=' + sg.natReplace;\n                if (sg.attachPoints) {\n                    for (let n = 0; n + 2 < sg.attachPoints.length; n += 3) {\n                        let v1 = sg.attachPoints[n], v2 = sg.attachPoints[n + 1], v3 = sg.attachPoints[n + 2];\n                        txt += ` SAP=(3 ${v1} ${v2} ${v3})`;\n                    }\n                }\n            }\n            else if (sg.type == 'MUL') {\n                let mult = parseInt(sg.name), unit = sg.atoms.length / mult;\n                txt += ' MULT=' + sg.name;\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                txt += ' PATOMS=' + this.packV3000List(sg.atoms.slice(0, unit));\n                if (sg.parent > 0)\n                    txt += ' PARENT=' + sg.parent;\n            }\n            else if (sg.type == 'DAT') {\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                txt += ' FIELDNAME=' + (sg.name.includes(' ') ? `\"${sg.name}\"` : sg.name);\n                txt += ' FIELDDATA=' + (sg.value.includes(' ') ? `\"${sg.value}\"` : sg.value);\n            }\n            lines.push(txt);\n        }\n        if (this.polymerBlocks) {\n            let polymers = new PolymerBlock(mol);\n            for (let id of polymers.getIDList()) {\n                let sid = lines.length + 1;\n                let unit = polymers.getUnit(id);\n                let txt = `${VPFX}${sid} SRU 0`;\n                txt += ' ATOMS=' + this.packV3000List(unit.atoms);\n                if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                    txt += ' CONNECT=HT';\n                else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                    txt += ' CONNECT=HH';\n                else if (unit.connect == PolymerBlockConnectivity.Random)\n                    txt += ' CONNECT=EU';\n                let bonds = [];\n                for (let n = 1; n <= mol.numBonds; n++) {\n                    let fl1 = unit.atoms.includes(mol.bondFrom(n)), fl2 = unit.atoms.includes(mol.bondTo(n));\n                    if ((fl1 && !fl2) || (!fl1 && fl2))\n                        bonds.push(n);\n                }\n                if (bonds.length > 0)\n                    txt += ' BONDS=' + this.packV3000List(bonds);\n                if (unit.bondConn != null)\n                    txt += ' XBCORR=' + this.packV3000List(unit.bondConn);\n                lines.push(txt);\n            }\n        }\n        return lines;\n    }\n    populateSCSRTemplates() {\n        this.lines.push(VPFX + 'BEGIN TEMPLATE');\n        for (let n = 0; n < this.scsrTemplates.length; n++) {\n            var defn = this.scsrTemplates[n];\n            let line = VPFX + 'TEMPLATE ' + (n + 1) + ' ' + defn.name;\n            if (defn.natReplace)\n                line += ' NATREPLACE=' + defn.natReplace;\n            this.lines.push(line);\n            var tmdl = new MDLMOLWriter(defn.mol);\n            tmdl.includeHeader = false;\n            tmdl.includeCounts = false;\n            tmdl.includeEnd = false;\n            let molfile = tmdl.writeV3000();\n            for (line of molfile.trimEnd().split('\\n'))\n                this.lines.push(line);\n        }\n        this.lines.push(VPFX + 'END TEMPLATE');\n    }\n    packV3000List(values) {\n        let str = '(' + values.length;\n        for (let v of values)\n            str += ' ' + v;\n        return str + ')';\n    }\n    packV3000Strings(values) {\n        let str = '(' + values.length;\n        for (let v of values)\n            str += ' ' + v;\n        return str + ')';\n    }\n}\nexport class MDLSDFWriter {\n    constructor(ds) {\n        this.ds = ds;\n        this.enhancedFields = true;\n        this.chargeSeparate = false;\n        this.abbrevSgroups = true;\n        this.lines = [];\n    }\n    write() {\n        let ds = this.ds, lines = this.lines;\n        let colMol = this.ds.firstColOfType(\"molecule\");\n        for (let i = 0; i < ds.numRows; i++) {\n            let mol = colMol < 0 ? null : ds.getMolecule(i, colMol);\n            if (mol != null) {\n                let wtr = new MDLMOLWriter(mol);\n                wtr.enhancedFields = this.enhancedFields;\n                wtr.chargeSeparate = this.chargeSeparate;\n                wtr.abbrevSgroups = this.abbrevSgroups;\n                let molstr = wtr.write();\n                lines.push(molstr);\n            }\n            for (let j = 0; j < ds.numCols; j++)\n                if (j != colMol && ds.notNull(i, j)) {\n                    let ct = ds.colType(j);\n                    let val = '';\n                    if (ct == \"string\")\n                        val = ds.getString(i, j);\n                    else if (ct == \"integer\")\n                        val = ds.getInteger(i, j).toString();\n                    else if (ct == \"real\")\n                        val = ds.getReal(i, j).toString();\n                    else if (ct == \"boolean\")\n                        val = ds.getBoolean(i, j) ? 'true' : 'false';\n                    if (val != '') {\n                        lines.push('> <' + ds.colName(j) + '>');\n                        lines.push(val);\n                        lines.push('');\n                    }\n                }\n            lines.push('$$$$');\n        }\n        return lines.join('\\n');\n    }\n    getResult() {\n        return this.lines.join('\\n');\n    }\n}\n//# sourceMappingURL=MDLWriter.js.map","import { MDLMOLReader } from './MDLReader';\nimport { MDLMOLWriter } from './MDLWriter';\nimport { Molecule } from '../mol/Molecule';\nconst ESCAPED_CHARS = '\\n\\t\\\\,=';\nfunction escape(str) {\n    let buff = null;\n    for (let n = 0; n < str.length; n++) {\n        let ch = str.charAt(n);\n        let escape = ESCAPED_CHARS.includes(ch), ctrl = ch.charCodeAt(0) < 32;\n        if (buff == null && (escape || ctrl)) {\n            buff = str.substring(0, n);\n        }\n        if (escape) {\n            if (ch == '\\n')\n                buff += '\\\\n';\n            else if (ch == '\\t')\n                buff += '\\\\t';\n            else\n                buff += '\\\\' + ch;\n        }\n        else if (ctrl) { }\n        else if (buff != null)\n            buff += ch;\n    }\n    return buff !== null && buff !== void 0 ? buff : str;\n}\nfunction writeKeyVals(keyvals) {\n    let str = '';\n    let multiline = [];\n    for (let kv of keyvals) {\n        if (!kv.includes('\\n'))\n            str += ',' + escape(kv);\n        else\n            multiline.push(kv);\n    }\n    str += '\\n';\n    for (let kv of multiline) {\n        let lines = kv.trimEnd().split('\\n');\n        for (let n = 0; n < lines.length; n++) {\n            str += `${n == 0 ? '.' : ':'}${lines[n]}\\n`;\n        }\n    }\n    return str;\n}\nfunction readNextChunk(line, pos, term, mandatory) {\n    let end = pos, sz = line.length;\n    if (pos >= sz) {\n        if (mandatory)\n            throw new Error('Molecule missing line fragment');\n        return null;\n    }\n    let escaped = false;\n    while (end < sz) {\n        let ch = line.charAt(end);\n        if (ch == '\\\\') {\n            if (end == sz - 1)\n                throw new Error('Escape character \\\\ at end of line');\n            escaped = true;\n            end += 2;\n        }\n        else if (ch == term)\n            break;\n        else\n            end++;\n    }\n    if (!escaped)\n        return { str: line.substring(pos, end), pos: end };\n    var str = '';\n    for (let n = pos; n < end; n++) {\n        let ch = line.charAt(n);\n        if (ch == '\\\\') {\n            ch = line.charAt(++n);\n            if (ch == 'n')\n                str += '\\n';\n            else if (ch == 't')\n                str += '\\t';\n            else\n                str += ch;\n        }\n        else\n            str += ch;\n    }\n    return { str, pos: end };\n}\nclass MoleculeStream {\n    static readUnknown(strData) {\n        if (strData.startsWith('\"')) {\n            try {\n                let jsonStr = JSON.parse(strData);\n                let mol = MoleculeStream.readNative(jsonStr);\n                if (mol)\n                    return mol;\n            }\n            catch (ex) { }\n        }\n        let mol = MoleculeStream.readNative(strData);\n        if (mol)\n            return mol;\n        try {\n            mol = MoleculeStream.readMDLMOL(strData);\n        }\n        catch (e) { }\n        return mol;\n    }\n    static readNative(strData) {\n        if (strData.startsWith('SketchEl!'))\n            return this.readNativeLegacy(strData);\n        let mol = new Molecule();\n        mol.keepTransient = true;\n        let lines = strData.split(/\\r?\\n/);\n        let match = lines[0].match(/^Elements\\!\\((\\d+),(\\d+)\\)$/);\n        if (!match)\n            return null;\n        let numAtoms = parseInt(match[1]), numBonds = parseInt(match[2]);\n        if (!(numAtoms >= 0))\n            throw new Error(`Invalid atom count: ${match[1]}`);\n        if (!(numBonds >= 0))\n            throw new Error(`Invalid bond count: ${match[2]}`);\n        const MSG_PREMATURE = 'Molecule atom content ends prematurely';\n        const MSG_UNEXPECTED = 'Molecule unexpected end tag';\n        const parseIntHard = (str) => {\n            let v = parseInt(str);\n            if (Number.isNaN(v))\n                throw new Error(`Malformed integer: ${str}`);\n            return v;\n        };\n        const parseFloatHard = (str) => {\n            let v = parseFloat(str);\n            if (Number.isNaN(v))\n                throw new Error(`Malformed float: ${str}`);\n            return v;\n        };\n        const applyAtomProperty = (atom, str) => {\n            if (!str)\n                return;\n            let pfx = str.charAt(0);\n            if (pfx == 'z')\n                mol.setAtomZ(atom, parseFloatHard(str.substring(1)));\n            else if (pfx == 'c')\n                mol.setAtomCharge(atom, parseIntHard(str.substring(1)));\n            else if (pfx == 'u')\n                mol.setAtomUnpaired(atom, parseIntHard(str.substring(1)));\n            else if (pfx == 'h')\n                mol.setAtomHExplicit(atom, parseIntHard(str.substring(1)));\n            else if (pfx == 'i')\n                mol.setAtomIsotope(atom, parseIntHard(str.substring(1)));\n            else if (pfx == 'm')\n                mol.setAtomMapNum(atom, parseIntHard(str.substring(1)));\n            else if (pfx == 'y')\n                mol.appendAtomTransient(atom, str);\n            else\n                mol.appendAtomExtra(atom, str);\n        };\n        const applyBondProperty = (bond, str) => {\n            if (!str)\n                return;\n            let pfx = str.charAt(0);\n            if (pfx == 'i')\n                mol.setBondType(bond, Molecule.BONDTYPE_INCLINED);\n            else if (pfx == 'd')\n                mol.setBondType(bond, Molecule.BONDTYPE_DECLINED);\n            else if (pfx == 'u')\n                mol.setBondType(bond, Molecule.BONDTYPE_UNKNOWN);\n            else if (pfx == 'y')\n                mol.appendBondTransient(bond, str);\n            else\n                mol.appendBondExtra(bond, str);\n        };\n        let lnum = 1;\n        for (let n = 1; n <= numAtoms; n++) {\n            if (!lines[lnum])\n                throw new Error(MSG_PREMATURE);\n            let chunkEl = readNextChunk(lines[lnum], 0, '=', true);\n            let chunkX = readNextChunk(lines[lnum], chunkEl.pos + 1, ',', true);\n            let chunkY = readNextChunk(lines[lnum], chunkX.pos + 1, ',', true);\n            let x = parseFloatHard(chunkX.str), y = parseFloatHard(chunkY.str);\n            mol.addAtom(chunkEl.str, x, y);\n            let pos = chunkY.pos + 1;\n            while (true) {\n                var chunk = readNextChunk(lines[lnum], pos, ',', false);\n                if (chunk == null)\n                    break;\n                applyAtomProperty(n, chunk.str);\n                pos = chunk.pos + 1;\n            }\n            lnum++;\n            while (true) {\n                if (!lines[lnum])\n                    throw new Error(MSG_PREMATURE);\n                if (lines[lnum] == '!End') {\n                    if (n == numAtoms && numBonds == 0)\n                        break;\n                    throw new Error(MSG_UNEXPECTED);\n                }\n                if (!lines[lnum].startsWith('.'))\n                    break;\n                var buff = lines[lnum].substring(1);\n                while (true) {\n                    lnum++;\n                    if (!lines[lnum])\n                        throw new Error(MSG_PREMATURE);\n                    if (!lines[lnum].startsWith(':'))\n                        break;\n                    buff += '\\n' + lines[lnum].substring(1);\n                }\n                applyAtomProperty(n, buff);\n            }\n        }\n        for (let n = 1; n <= numBonds; n++) {\n            if (!lines[lnum])\n                throw new Error(MSG_PREMATURE);\n            var chunkFrom = readNextChunk(lines[lnum], 0, '-', true);\n            var chunkTo = readNextChunk(lines[lnum], chunkFrom.pos + 1, '=', true);\n            var chunkOrder = readNextChunk(lines[lnum], chunkTo.pos + 1, ',', true);\n            let bfr = parseIntHard(chunkFrom.str), bto = parseIntHard(chunkTo.str), order = parseIntHard(chunkOrder.str);\n            if (bfr < 1 || bfr > numAtoms || bto < 1 || bto > numAtoms || order < 0 || order > 4)\n                throw new Error('Invalid bond specification');\n            mol.addBond(bfr, bto, order);\n            let pos = chunkOrder.pos + 1;\n            while (true) {\n                var chunk = readNextChunk(lines[lnum], pos, ',', false);\n                if (chunk == null)\n                    break;\n                applyBondProperty(n, chunk.str);\n                pos = chunk.pos + 1;\n            }\n            lnum++;\n            while (true) {\n                if (!lines[lnum])\n                    throw new Error(MSG_PREMATURE);\n                if (lines[lnum] == '!End') {\n                    if (n == numBonds)\n                        break;\n                    throw new Error(MSG_UNEXPECTED);\n                }\n                if (!lines[lnum].startsWith('.'))\n                    break;\n                let buff = lines[lnum].substring(1);\n                while (true) {\n                    lnum++;\n                    if (!lines[lnum])\n                        throw new Error(MSG_PREMATURE);\n                    if (!lines[lnum].startsWith(':'))\n                        break;\n                    buff += '\\n' + lines[lnum].substring(1);\n                }\n                applyBondProperty(n, buff);\n            }\n        }\n        if (lines[lnum] != '!End')\n            throw new Error('Molecule end tag missing');\n        mol.keepTransient = false;\n        return mol;\n    }\n    static readNativeLegacy(strData) {\n        let mol = new Molecule();\n        mol.keepTransient = true;\n        let lines = strData.split(/\\r?\\n/);\n        if (lines.length < 2)\n            return null;\n        if (!lines[0].startsWith('SketchEl!') && lines.length >= 4 && lines[3].indexOf('V2000') >= 0) {\n            let i = strData.indexOf('SketchEl!');\n            if (i < 0)\n                return null;\n            lines = strData.substring(i).split(/r?\\n/);\n        }\n        let hdr = lines[0].match(/^SketchEl\\!\\((\\d+)\\,(\\d+)\\)/);\n        if (!hdr)\n            return null;\n        let numAtoms = parseInt(hdr[1]), numBonds = parseInt(hdr[2]);\n        if (lines.length < 2 + numAtoms + numBonds)\n            return null;\n        if (!lines[1 + numAtoms + numBonds].match(/^!End/))\n            return null;\n        for (let n = 0; n < numAtoms; n++) {\n            let bits = lines[1 + n].split(/[=,;]/);\n            let num = mol.addAtom(MoleculeStream.skUnescape(bits[0]), parseFloat(bits[1]), parseFloat(bits[2]), parseInt(bits[3]), parseInt(bits[4]));\n            let extra = [], trans = [];\n            for (let i = 5; i < bits.length; i++) {\n                let ch = bits[i].charAt(0);\n                if (bits[i].charAt(0) == 'i') { }\n                else if (bits[i].charAt(0) == 'e')\n                    mol.setAtomHExplicit(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'm')\n                    mol.setAtomIsotope(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'n')\n                    mol.setAtomMapNum(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'x')\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'y')\n                    trans.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'z') {\n                    mol.setAtomZ(num, parseFloat(bits[i].substring(1)));\n                    mol.setIs3D(true);\n                }\n                else\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n            }\n            mol.setAtomExtra(num, extra);\n            mol.setAtomTransient(num, trans);\n        }\n        for (let n = 0; n < numBonds; n++) {\n            let bits = lines[1 + numAtoms + n].split(/[=,]/);\n            let frto = bits[0].split('-');\n            let bfr = parseInt(frto[0].trim()), bto = parseInt(frto[1].trim());\n            if (bfr == bto)\n                continue;\n            let num = mol.addBond(bfr, bto, parseInt(bits[1]), parseInt(bits[2]));\n            let extra = new Array(), trans = new Array();\n            for (let i = 3; i < bits.length; i++) {\n                let ch = bits[i].charAt(0);\n                if (bits[i].charAt(0) == 'x')\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'y')\n                    trans.push(MoleculeStream.skUnescape(bits[i]));\n                else\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n            }\n            mol.setBondExtra(num, extra);\n            mol.setBondTransient(num, trans);\n        }\n        mol.keepTransient = false;\n        return mol;\n    }\n    static writeNative(mol) {\n        if (!this.formatV2Elements)\n            return this.writeNativeLegacy(mol);\n        let bits = [`Elements!(${mol.numAtoms},${mol.numBonds})\\n`];\n        const roundedNumber = (v) => {\n            return (Math.round(v * 1E4) * 1E-4).toFixed(4);\n        };\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let el = mol.atomElement(n), x = roundedNumber(mol.atomX(n)), y = roundedNumber(mol.atomY(n));\n            bits.push(`${escape(el)}=${x},${y}`);\n            let keyvals = [];\n            if (mol.is3D())\n                keyvals.push(`z${roundedNumber(mol.atomZ(n))}`);\n            let chg = mol.atomCharge(n), unp = mol.atomUnpaired(n), hyd = mol.atomHExplicit(n), iso = mol.atomIsotope(n), map = mol.atomMapNum(n);\n            if (chg != 0)\n                keyvals.push(`c${chg}`);\n            if (unp != 0)\n                keyvals.push(`u${unp}`);\n            if (hyd != Molecule.HEXPLICIT_UNKNOWN)\n                keyvals.push(`h${hyd}`);\n            if (iso != Molecule.ISOTOPE_NATURAL)\n                keyvals.push(`i${iso}`);\n            if (map > 0)\n                keyvals.push(`m${map}`);\n            keyvals.push(...mol.atomExtra(n));\n            keyvals.push(...mol.atomTransient(n));\n            bits.push(writeKeyVals(keyvals));\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n), order = mol.bondOrder(n);\n            bits.push(`${bfr}-${bto}=${order}`);\n            let keyvals = [];\n            let typ = mol.bondType(n);\n            if (typ == Molecule.BONDTYPE_INCLINED)\n                keyvals.push('i');\n            else if (typ == Molecule.BONDTYPE_DECLINED)\n                keyvals.push('d');\n            else if (typ == Molecule.BONDTYPE_UNKNOWN)\n                keyvals.push('u');\n            keyvals.push(...mol.bondExtra(n));\n            keyvals.push(...mol.bondTransient(n));\n            bits.push(writeKeyVals(keyvals));\n        }\n        bits.push('!End\\n');\n        return bits.join('');\n    }\n    static writeNativeLegacy(mol) {\n        let ret = 'SketchEl!(' + mol.numAtoms + ',' + mol.numBonds + ')\\n';\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let el = mol.atomElement(n), x = mol.atomX(n), y = mol.atomY(n), charge = mol.atomCharge(n), unpaired = mol.atomUnpaired(n);\n            let hy = mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN ? ('e' + mol.atomHExplicit(n)) : ('i' + mol.atomHydrogens(n));\n            ret += MoleculeStream.skEscape(el) + '=' + x.toFixed(4) + ',' + y.toFixed(4) + ';' + charge + ',' + unpaired + ',' + hy;\n            if (mol.is3D())\n                ret += ',z' + mol.atomZ(n);\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL)\n                ret += ',m' + mol.atomIsotope(n);\n            if (mol.atomMapNum(n) > 0)\n                ret += ',n' + mol.atomMapNum(n);\n            ret += MoleculeStream.skEncodeExtra(mol.atomExtra(n));\n            ret += MoleculeStream.skEncodeExtra(mol.atomTransient(n));\n            ret += '\\n';\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            ret += mol.bondFrom(n) + '-' + mol.bondTo(n) + '=' + mol.bondOrder(n) + ',' + mol.bondType(n);\n            ret += MoleculeStream.skEncodeExtra(mol.bondExtra(n));\n            ret += MoleculeStream.skEncodeExtra(mol.bondTransient(n));\n            ret += '\\n';\n        }\n        ret += '!End\\n';\n        return ret;\n    }\n    static readMDLMOL(strData) {\n        let src = new MDLMOLReader(strData);\n        src.parseHeader = true;\n        src.parse();\n        return src.mol;\n    }\n    static writeMDLMOL(mol) {\n        return new MDLMOLWriter(mol).write();\n    }\n    static skUnescape(str) {\n        let ret = '', match;\n        while (match = str.match(/^(.*?)\\\\([0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])(.*)/)) {\n            ret += match[1] + String.fromCharCode(parseInt('0x' + match[2]));\n            str = match[3];\n        }\n        return ret + str;\n    }\n    static skEscape(str) {\n        let ret = '';\n        for (let n = 0; n < str.length; n++) {\n            let ch = str.charAt(n), code = str.charCodeAt(n);\n            if (code <= 32 || code > 127 || ch == '\\\\' || ch == ',' || ch == ';' || ch == '=') {\n                let hex = (code & 0xFFFF).toString(16).toUpperCase();\n                ret += '\\\\';\n                for (let i = 4 - hex.length; i > 0; i--)\n                    ret += '0';\n                ret += hex;\n            }\n            else\n                ret += ch;\n        }\n        return ret;\n    }\n    static skEncodeExtra(extra) {\n        let ret = '';\n        for (let n = 0; n < extra.length; n++)\n            ret += ',' + MoleculeStream.skEscape(extra[n]);\n        return ret;\n    }\n}\nMoleculeStream.formatV2Elements = false;\nexport { MoleculeStream };\n//# sourceMappingURL=MoleculeStream.js.map","import { Box } from '../util/Geom';\nimport { deepClone } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { MoleculeStream } from '../io/MoleculeStream';\nexport class Atom {\n}\nexport class Bond {\n}\nclass Molecule {\n    constructor() {\n        this.atoms = [];\n        this.bonds = [];\n        this.hasZCoord = false;\n        this.keepTransient = false;\n        this.hasTransient = false;\n        this.graph = null;\n        this.graphBond = null;\n        this.ringID = null;\n        this.compID = null;\n        this.ring3 = null;\n        this.ring4 = null;\n        this.ring5 = null;\n        this.ring6 = null;\n        this.ring7 = null;\n    }\n    clone() {\n        let dup = new Molecule();\n        dup.atoms = deepClone(this.atoms);\n        dup.bonds = deepClone(this.bonds);\n        dup.hasZCoord = this.hasZCoord;\n        dup.keepTransient = this.keepTransient;\n        dup.hasTransient = this.hasTransient;\n        dup.graph = this.graph;\n        dup.graphBond = this.graphBond;\n        dup.ringID = this.ringID;\n        dup.compID = this.compID;\n        dup.ring3 = this.ring3;\n        dup.ring4 = this.ring4;\n        dup.ring5 = this.ring5;\n        dup.ring6 = this.ring6;\n        dup.ring7 = this.ring7;\n        return dup;\n    }\n    static fromString(strData) { return MoleculeStream.readNative(strData); }\n    toString() { return MoleculeStream.writeNative(this); }\n    append(frag) {\n        let base = this.atoms.length;\n        for (let n = 1; n <= frag.numAtoms; n++) {\n            let num = this.addAtom(frag.atomElement(n), frag.atomX(n), frag.atomY(n), frag.atomCharge(n), frag.atomUnpaired(n));\n            this.setAtomIsotope(num, frag.atomIsotope(n));\n            this.setAtomHExplicit(num, frag.atomHExplicit(n));\n            this.setAtomMapNum(num, frag.atomMapNum(n));\n            this.setAtomExtra(num, frag.atomExtra(n));\n            this.setAtomTransient(num, frag.atomTransient(n));\n        }\n        for (let n = 1; n <= frag.numBonds; n++) {\n            let num = this.addBond(frag.bondFrom(n) + base, frag.bondTo(n) + base, frag.bondOrder(n), frag.bondType(n));\n            this.setBondExtra(num, frag.bondExtra(n));\n            this.setBondTransient(num, frag.bondTransient(n));\n        }\n        this.trashTransient();\n    }\n    get numAtoms() { return this.atoms.length; }\n    getAtom(idx) {\n        if (idx < 1 || idx > this.atoms.length)\n            throw new Error(`Molecule.getAtom: index ${idx} out of range (#atoms=${this.atoms.length})`);\n        return this.atoms[idx - 1];\n    }\n    atomElement(idx) { return this.getAtom(idx).element; }\n    atomX(idx) { return this.getAtom(idx).x; }\n    atomY(idx) { return this.getAtom(idx).y; }\n    atomCharge(idx) { return this.getAtom(idx).charge; }\n    atomUnpaired(idx) { return this.getAtom(idx).unpaired; }\n    atomIsotope(idx) { return this.getAtom(idx).isotope; }\n    atomHExplicit(idx) { return this.getAtom(idx).hExplicit; }\n    atomMapNum(idx) { return this.getAtom(idx).mapNum; }\n    atomExtra(idx) { return this.getAtom(idx).extra.slice(0); }\n    atomTransient(idx) { return this.getAtom(idx).transient.slice(0); }\n    get numBonds() { return this.bonds.length; }\n    getBond(idx) {\n        if (idx < 1 || idx > this.bonds.length)\n            throw new Error(`Molecule.getBond: index ${idx} out of range (#bonds=${this.bonds.length})`);\n        return this.bonds[idx - 1];\n    }\n    bondFrom(idx) { return this.getBond(idx).from; }\n    bondTo(idx) { return this.getBond(idx).to; }\n    bondOrder(idx) { return this.getBond(idx).order; }\n    bondType(idx) { return this.getBond(idx).type; }\n    bondExtra(idx) { return this.getBond(idx).extra.slice(0); }\n    bondTransient(idx) { return this.getBond(idx).transient.slice(0); }\n    bondFromTo(idx) { let b = this.getBond(idx); return [b.from, b.to]; }\n    addAtom(element, x, y, charge = 0, unpaired = 0) {\n        let a = new Atom();\n        a.element = element;\n        a.x = x;\n        a.y = y;\n        a.charge = charge;\n        a.unpaired = unpaired;\n        a.isotope = Molecule.ISOTOPE_NATURAL;\n        a.hExplicit = Molecule.HEXPLICIT_UNKNOWN;\n        a.mapNum = 0;\n        a.extra = [];\n        a.transient = [];\n        this.atoms.push(a);\n        this.trashTransient();\n        this.trashGraph();\n        return this.atoms.length;\n    }\n    setAtomElement(idx, element) {\n        this.getAtom(idx).element = element;\n        this.trashTransient();\n    }\n    setAtomPos(idx, x, y, z) {\n        let a = this.getAtom(idx);\n        a.x = x;\n        a.y = y;\n        a.z = z == null ? 0 : z;\n        this.trashTransient();\n    }\n    setAtomX(idx, x) {\n        this.getAtom(idx).x = x;\n        this.trashTransient();\n    }\n    setAtomY(idx, y) {\n        this.getAtom(idx).y = y;\n        this.trashTransient();\n    }\n    setAtomCharge(idx, charge) {\n        this.getAtom(idx).charge = charge;\n        this.trashTransient();\n    }\n    setAtomUnpaired(idx, unpaired) {\n        this.getAtom(idx).unpaired = unpaired;\n        this.trashTransient();\n    }\n    setAtomIsotope(idx, isotope) {\n        this.getAtom(idx).isotope = isotope;\n        this.trashTransient();\n    }\n    setAtomHExplicit(idx, hExplicit) {\n        this.getAtom(idx).hExplicit = hExplicit;\n        this.trashTransient();\n    }\n    setAtomMapNum(idx, mapNum) {\n        this.getAtom(idx).mapNum = mapNum;\n        this.trashTransient();\n    }\n    setAtomExtra(idx, extra) {\n        this.getAtom(idx).extra = extra.slice(0);\n    }\n    setAtomTransient(idx, transi) {\n        this.getAtom(idx).transient = transi.slice(0);\n        if (transi.length > 0)\n            this.hasTransient = true;\n    }\n    swapAtoms(a1, a2) {\n        let a = this.atoms[a1 - 1];\n        this.atoms[a1 - 1] = this.atoms[a2 - 1];\n        this.atoms[a2 - 1] = a;\n        for (let n = 0; n < this.bonds.length; n++) {\n            let b = this.bonds[n];\n            if (b.from == a2)\n                b.from = a1;\n            else if (b.from == a1)\n                b.from = a2;\n            if (b.to == a2)\n                b.to = a1;\n            else if (b.to == a1)\n                b.to = a2;\n        }\n        this.trashGraph();\n    }\n    addBond(from, to, order, type = Molecule.BONDTYPE_NORMAL) {\n        let b = new Bond();\n        b.from = from;\n        b.to = to;\n        b.order = order;\n        b.type = type;\n        b.extra = [];\n        b.transient = [];\n        this.bonds.push(b);\n        this.trashTransient();\n        this.trashGraph();\n        return this.bonds.length;\n    }\n    setBondFrom(idx, bfr) {\n        this.getBond(idx).from = bfr;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondTo(idx, to) {\n        this.getBond(idx).to = to;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondFromTo(idx, bfr, bto) {\n        this.getBond(idx).from = bfr;\n        this.getBond(idx).to = bto;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondOrder(idx, order) {\n        this.getBond(idx).order = order;\n        this.trashTransient();\n    }\n    setBondType(idx, type) {\n        this.getBond(idx).type = type;\n        this.trashTransient();\n    }\n    setBondExtra(idx, extra) {\n        this.getBond(idx).extra = extra.slice(0);\n    }\n    setBondTransient(idx, transi) {\n        this.getBond(idx).transient = transi.slice(0);\n        if (transi.length > 0)\n            this.hasTransient = true;\n    }\n    deleteAtomAndBonds(idx) {\n        for (let n = this.numBonds; n >= 1; n--) {\n            if (this.bondFrom(n) == idx || this.bondTo(n) == idx)\n                this.deleteBond(n);\n            else {\n                if (this.bondFrom(n) > idx)\n                    this.setBondFrom(n, this.bondFrom(n) - 1);\n                if (this.bondTo(n) > idx)\n                    this.setBondTo(n, this.bondTo(n) - 1);\n            }\n        }\n        this.atoms.splice(idx - 1, 1);\n        this.trashTransient();\n        this.trashGraph();\n    }\n    deleteBond(idx) {\n        this.bonds.splice(idx - 1, 1);\n        this.trashTransient();\n        this.trashGraph();\n    }\n    atomHydrogens(idx) {\n        let hy = this.atomHExplicit(idx);\n        if (hy != Molecule.HEXPLICIT_UNKNOWN)\n            return hy;\n        for (let n = 0; n < Molecule.HYVALENCE_EL.length; n++)\n            if (Molecule.HYVALENCE_EL[n] == this.atomElement(idx)) {\n                hy = Molecule.HYVALENCE_VAL[n];\n                break;\n            }\n        if (hy == Molecule.HEXPLICIT_UNKNOWN)\n            return 0;\n        let ch = this.atomCharge(idx);\n        if (this.atomElement(idx) == 'C')\n            ch = -Math.abs(ch);\n        hy += ch - this.atomUnpaired(idx);\n        let adjBonds = this.atomAdjBonds(idx);\n        for (let n = 0; n < adjBonds.length; n++)\n            hy -= this.bondOrder(adjBonds[n]);\n        return hy < 0 ? 0 : hy;\n    }\n    findBond(a1, a2) {\n        for (let n = 1; n <= this.numBonds; n++) {\n            let b1 = this.bondFrom(n), b2 = this.bondTo(n);\n            if ((a1 == b1 && a2 == b2) || (a1 == b2 && a2 == b1))\n                return n;\n        }\n        return 0;\n    }\n    bondOther(idx, ref) {\n        let b1 = this.bondFrom(idx), b2 = this.bondTo(idx);\n        if (b1 == ref)\n            return b2;\n        if (b2 == ref)\n            return b1;\n        return 0;\n    }\n    atomExplicit(idx) {\n        let a = this.atoms[idx - 1];\n        if (a.isotope != Molecule.ISOTOPE_NATURAL)\n            return true;\n        if (a.element != 'C' || a.charge != 0 || a.unpaired != 0)\n            return true;\n        if (this.atomAdjCount(idx) == 0)\n            return true;\n        return false;\n    }\n    atomRingBlock(idx) {\n        if (this.graph == null)\n            this.buildGraph();\n        if (this.ringID == null)\n            this.buildRingID();\n        return this.ringID[idx - 1];\n    }\n    bondInRing(idx) {\n        let r1 = this.atomRingBlock(this.bondFrom(idx)), r2 = this.atomRingBlock(this.bondTo(idx));\n        return r1 > 0 && r1 == r2;\n    }\n    atomConnComp(idx) {\n        if (this.graph == null)\n            this.buildGraph();\n        if (this.compID == null)\n            this.buildConnComp();\n        return this.compID[idx - 1];\n    }\n    atomAdjCount(idx) {\n        this.buildGraph();\n        return this.graph[idx - 1].length;\n    }\n    atomAdjList(idx) {\n        this.buildGraph();\n        let adj = this.graph[idx - 1].slice(0);\n        for (let n = adj.length - 1; n >= 0; n--)\n            adj[n]++;\n        return adj;\n    }\n    atomAdjBonds(idx) {\n        this.buildGraph();\n        return this.graphBond[idx - 1].slice(0);\n    }\n    findRingsOfSize(size) {\n        let rings = null;\n        if (size == 3 && this.ring3 != null)\n            rings = this.ring3;\n        if (size == 4 && this.ring4 != null)\n            rings = this.ring4;\n        if (size == 5 && this.ring5 != null)\n            rings = this.ring5;\n        if (size == 6 && this.ring6 != null)\n            rings = this.ring6;\n        if (size == 7 && this.ring7 != null)\n            rings = this.ring7;\n        if (rings == null) {\n            if (this.graph == null)\n                this.buildGraph();\n            if (this.ringID == null)\n                this.buildRingID();\n            rings = [];\n            for (let n = 1; n <= this.atoms.length; n++) {\n                if (this.ringID[n - 1] > 0) {\n                    let path = Vec.numberArray(0, size);\n                    path[0] = n;\n                    this.recursiveRingFind(path, 1, size, this.ringID[n - 1], rings);\n                }\n            }\n            if (size == 3)\n                this.ring3 = rings;\n            if (size == 4)\n                this.ring4 = rings;\n            if (size == 5)\n                this.ring5 = rings;\n            if (size == 6)\n                this.ring6 = rings;\n            if (size == 7)\n                this.ring7 = rings;\n        }\n        let ret = [];\n        for (let n = 0; n < rings.length; n++)\n            ret.push(rings[n].slice(0));\n        return ret;\n    }\n    boundary() {\n        if (this.atoms.length == 0)\n            return Box.zero();\n        let x1 = this.atoms[0].x, x2 = x1;\n        let y1 = this.atoms[0].y, y2 = y1;\n        for (let n = 1; n < this.atoms.length; n++) {\n            x1 = Math.min(x1, this.atoms[n].x);\n            y1 = Math.min(y1, this.atoms[n].y);\n            x2 = Math.max(x2, this.atoms[n].x);\n            y2 = Math.max(y2, this.atoms[n].y);\n        }\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    atomicNumber(idx) {\n        return Molecule.elementAtomicNumber(this.atomElement(idx));\n    }\n    static elementAtomicNumber(element) {\n        return Math.max(0, Chemistry.ELEMENTS.indexOf(element));\n    }\n    is3D() { return this.hasZCoord; }\n    setIs3D(v) { this.hasZCoord = v; }\n    atomZ(idx) { return this.getAtom(idx).z; }\n    setAtomZ(idx, z) { this.getAtom(idx).z = z; }\n    compareTo(other) {\n        if (other == null || other.numAtoms == 0)\n            return this.numAtoms == 0 ? 0 : 1;\n        if (this.numAtoms < other.numAtoms)\n            return -1;\n        if (this.numAtoms > other.numAtoms)\n            return 1;\n        if (this.numBonds < other.numBonds)\n            return -1;\n        if (this.numBonds > other.numBonds)\n            return 1;\n        for (let n = 1; n <= this.numAtoms; n++) {\n            if (this.atomElement(n) < other.atomElement(n))\n                return -1;\n            if (this.atomElement(n) > other.atomElement(n))\n                return 1;\n            if (this.atomX(n) < other.atomX(n))\n                return -1;\n            if (this.atomX(n) > other.atomX(n))\n                return 1;\n            if (this.atomY(n) < other.atomY(n))\n                return -1;\n            if (this.atomY(n) > other.atomY(n))\n                return 1;\n            if (this.atomCharge(n) < other.atomCharge(n))\n                return -1;\n            if (this.atomCharge(n) > other.atomCharge(n))\n                return 1;\n            if (this.atomUnpaired(n) < other.atomUnpaired(n))\n                return -1;\n            if (this.atomUnpaired(n) > other.atomUnpaired(n))\n                return 1;\n            if (this.atomHExplicit(n) < other.atomHExplicit(n))\n                return -1;\n            if (this.atomHExplicit(n) > other.atomHExplicit(n))\n                return 1;\n            if (this.atomIsotope(n) < other.atomIsotope(n))\n                return -1;\n            if (this.atomIsotope(n) > other.atomIsotope(n))\n                return 1;\n            if (this.atomMapNum(n) < other.atomMapNum(n))\n                return -1;\n            if (this.atomMapNum(n) > other.atomMapNum(n))\n                return 1;\n            let tx1 = this.atomExtra(n).map((v) => v.trimEnd()), tx2 = other.atomExtra(n).map((v) => v.trimEnd());\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n            tx1 = this.atomTransient(n).map((v) => v.trimEnd());\n            tx2 = other.atomTransient(n).map((v) => v.trimEnd());\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n        }\n        for (let n = 1; n <= this.numBonds; n++) {\n            if (this.bondFrom(n) < other.bondFrom(n))\n                return -1;\n            if (this.bondFrom(n) > other.bondFrom(n))\n                return 1;\n            if (this.bondTo(n) < other.bondTo(n))\n                return -1;\n            if (this.bondTo(n) > other.bondTo(n))\n                return 1;\n            if (this.bondOrder(n) < other.bondOrder(n))\n                return -1;\n            if (this.bondOrder(n) > other.bondOrder(n))\n                return 1;\n            if (this.bondType(n) < other.bondType(n))\n                return -1;\n            if (this.bondType(n) > other.bondType(n))\n                return 1;\n            let tx1 = this.bondExtra(n), tx2 = other.bondExtra(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n            tx1 = this.bondTransient(n);\n            tx2 = other.bondTransient(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n        }\n        return 0;\n    }\n    trashTransient() {\n        if (this.keepTransient || !this.hasTransient)\n            return;\n        for (let a of this.atoms)\n            a.transient = [];\n        for (let b of this.bonds)\n            b.transient = [];\n        this.hasTransient = false;\n    }\n    appendAtomExtra(atom, extra) {\n        this.getAtom(atom).extra.push(extra);\n    }\n    appendAtomTransient(atom, trans) {\n        this.getAtom(atom).transient.push(trans);\n    }\n    appendBondExtra(bond, extra) {\n        this.getBond(bond).extra.push(extra);\n    }\n    appendBondTransient(bond, trans) {\n        this.getBond(bond).transient.push(trans);\n    }\n    getAtomCloned(idx) { return deepClone(this.getAtom(idx)); }\n    getBondCloned(idx) { return deepClone(this.getBond(idx)); }\n    setAtom(idx, atom) {\n        if (!atom)\n            return;\n        let curr = this.getAtom(idx);\n        if (atom.element != curr.element)\n            this.setAtomElement(idx, atom.element);\n        if (atom.x != curr.x)\n            this.setAtomX(idx, atom.x);\n        if (atom.y != curr.y)\n            this.setAtomY(idx, atom.y);\n        if (atom.z != curr.z)\n            this.setAtomZ(idx, atom.z);\n        if (atom.charge != curr.charge)\n            this.setAtomCharge(idx, atom.charge);\n        if (atom.unpaired != curr.unpaired)\n            this.setAtomUnpaired(idx, atom.unpaired);\n        if (atom.isotope != curr.isotope)\n            this.setAtomIsotope(idx, atom.isotope);\n        if (atom.hExplicit != curr.hExplicit)\n            this.setAtomHExplicit(idx, atom.hExplicit);\n        if (atom.mapNum != curr.mapNum)\n            this.setAtomMapNum(idx, atom.mapNum);\n        if (!Vec.equals(atom.extra, curr.extra))\n            this.setAtomExtra(idx, atom.extra);\n        if (!Vec.equals(atom.transient, curr.transient))\n            this.setAtomTransient(idx, atom.transient);\n    }\n    setBond(idx, bond) {\n        if (bond == null)\n            return;\n        let curr = this.getBond(idx);\n        if (bond.from != curr.from)\n            this.setBondFrom(idx, bond.from);\n        if (bond.to != curr.to)\n            this.setBondTo(idx, bond.to);\n        if (bond.order != curr.order)\n            this.setBondOrder(idx, bond.order);\n        if (bond.type != curr.type)\n            this.setBondType(idx, bond.type);\n        if (!Vec.equals(bond.extra, curr.extra))\n            this.setBondExtra(idx, bond.extra);\n        if (!Vec.equals(bond.transient, curr.transient))\n            this.setBondTransient(idx, bond.transient);\n    }\n    modifyAtoms(lambda) {\n        for (let n = 1; n <= this.numAtoms; n++) {\n            var mod = lambda(n, this.getAtomCloned(n));\n            if (mod != null)\n                this.setAtom(n, mod);\n        }\n    }\n    modifyAtomsIndices(atomIndices, lambda) {\n        for (let n of atomIndices) {\n            var mod = lambda(n, this.getAtomCloned(n));\n            if (mod != null)\n                this.setAtom(n, mod);\n        }\n    }\n    modifyBonds(lambda) {\n        for (let n = 1; n <= this.numBonds; n++) {\n            var mod = lambda(n, this.getBondCloned(n));\n            if (mod != null)\n                this.setBond(n, mod);\n        }\n    }\n    modifyBondsIndices(bondIndices, lambda) {\n        for (let n of bondIndices) {\n            var mod = lambda(n, this.getBondCloned(n));\n            if (mod != null)\n                this.setBond(n, mod);\n        }\n    }\n    findAtomMatch(lambda) {\n        for (let n = 1; n <= this.numAtoms; n++)\n            if (lambda(this.getAtom(n)))\n                return n;\n        return 0;\n    }\n    findBondMatch(lambda) {\n        for (let n = 1; n <= this.numBonds; n++)\n            if (lambda(this.getBond(n)))\n                return n;\n        return 0;\n    }\n    findAllAtoms(lambda) {\n        let indices = [];\n        for (let n = 1; n <= this.numAtoms; n++)\n            if (lambda(this.getAtom(n)))\n                indices.push(n);\n        return indices;\n    }\n    findAllBonds(lambda) {\n        let indices = [];\n        for (let n = 1; n <= this.numBonds; n++)\n            if (lambda(this.getBond(n)))\n                indices.push(n);\n        return indices;\n    }\n    mapAtoms(lambda) {\n        let ret = new Array(this.numAtoms);\n        for (let n = 1; n <= this.numAtoms; n++)\n            ret[n - 1] = lambda(this.getAtom(n));\n        return ret;\n    }\n    mapBonds(lambda) {\n        let ret = new Array(this.numBonds);\n        for (let n = 1; n <= this.numBonds; n++)\n            ret[n - 1] = lambda(this.getBond(n));\n        return ret;\n    }\n    mapAtomsIndices(atomIndices, lambda) {\n        let ret = new Array(atomIndices.length);\n        let pos = 0;\n        for (let n of atomIndices)\n            ret[pos++] = lambda(this.getAtom(n));\n        return ret;\n    }\n    mapBondsIndices(bondIndices, lambda) {\n        let ret = new Array(bondIndices.length);\n        let pos = 0;\n        for (let n of bondIndices)\n            ret[pos++] = lambda(this.getBond(n));\n        return ret;\n    }\n    trashGraph() {\n        this.graph = null;\n        this.graphBond = null;\n        this.ringID = null;\n        this.compID = null;\n        this.ring3 = null;\n        this.ring4 = null;\n        this.ring5 = null;\n        this.ring6 = null;\n        this.ring7 = null;\n    }\n    buildGraph() {\n        if (this.graph != null && this.graphBond != null)\n            return;\n        let graph = [], graphBond = [];\n        let na = this.numAtoms, nb = this.numBonds;\n        for (let n = 0; n < na; n++) {\n            graph.push([]);\n            graphBond.push([]);\n        }\n        for (let n = 1; n <= nb; n++) {\n            let b = this.getBond(n);\n            graph[b.from - 1].push(b.to - 1);\n            graph[b.to - 1].push(b.from - 1);\n            graphBond[b.from - 1].push(n);\n            graphBond[b.to - 1].push(n);\n        }\n        this.graph = graph;\n        this.graphBond = graphBond;\n    }\n    buildConnComp() {\n        const numAtoms = this.atoms.length;\n        this.compID = Vec.numberArray(0, numAtoms);\n        for (let n = 0; n < numAtoms; n++)\n            this.compID[n] = 0;\n        let comp = 1;\n        this.compID[0] = comp;\n        while (true) {\n            let anything = false;\n            for (let n = 0; n < numAtoms; n++)\n                if (this.compID[n] == comp) {\n                    for (let i = 0; i < this.graph[n].length; i++) {\n                        if (this.compID[this.graph[n][i]] == 0) {\n                            this.compID[this.graph[n][i]] = comp;\n                            anything = true;\n                        }\n                    }\n                }\n            if (!anything) {\n                for (let n = 0; n < numAtoms; n++) {\n                    if (this.compID[n] == 0) {\n                        this.compID[n] = ++comp;\n                        anything = true;\n                        break;\n                    }\n                }\n                if (!anything)\n                    break;\n            }\n        }\n    }\n    buildRingID() {\n        const numAtoms = this.atoms.length;\n        this.ringID = Vec.numberArray(0, numAtoms);\n        if (numAtoms == 0)\n            return;\n        let visited = Vec.booleanArray(false, numAtoms);\n        for (let n = 0; n < numAtoms; n++) {\n            this.ringID[n] = 0;\n            visited[n] = false;\n        }\n        let path = Vec.numberArray(0, numAtoms + 1), plen = 0, numVisited = 0;\n        while (true) {\n            let last, current;\n            if (plen == 0) {\n                last = -1;\n                for (current = 0; visited[current]; current++) { }\n            }\n            else {\n                last = path[plen - 1];\n                current = -1;\n                for (let n = 0; n < this.graph[last].length; n++) {\n                    if (!visited[this.graph[last][n]]) {\n                        current = this.graph[last][n];\n                        break;\n                    }\n                }\n            }\n            if (current >= 0 && plen >= 2) {\n                let back = path[plen - 1];\n                for (let n = 0; n < this.graph[current].length; n++) {\n                    let join = this.graph[current][n];\n                    if (join != back && visited[join]) {\n                        path[plen] = current;\n                        for (let i = plen; i == plen || path[i + 1] != join; i--) {\n                            let id = this.ringID[path[i]];\n                            if (id == 0)\n                                this.ringID[path[i]] = last;\n                            else if (id != last) {\n                                for (let j = 0; j < numAtoms; j++)\n                                    if (this.ringID[j] == id)\n                                        this.ringID[j] = last;\n                            }\n                        }\n                    }\n                }\n            }\n            if (current >= 0) {\n                visited[current] = true;\n                path[plen++] = current;\n                numVisited++;\n            }\n            else {\n                plen--;\n            }\n            if (numVisited == numAtoms)\n                break;\n        }\n        let nextID = 0;\n        for (let i = 0; i < numAtoms; i++) {\n            if (this.ringID[i] > 0) {\n                nextID--;\n                for (let j = numAtoms - 1; j >= i; j--)\n                    if (this.ringID[j] == this.ringID[i])\n                        this.ringID[j] = nextID;\n            }\n        }\n        for (let i = 0; i < numAtoms; i++)\n            this.ringID[i] = -this.ringID[i];\n    }\n    recursiveRingFind(path, psize, capacity, rblk, rings) {\n        const { graph } = this;\n        if (psize < capacity) {\n            let last = path[psize - 1];\n            for (let n = 0; n < graph[last - 1].length; n++) {\n                let adj = graph[last - 1][n] + 1;\n                if (this.ringID[adj - 1] != rblk)\n                    continue;\n                let fnd = false;\n                for (let i = 0; i < psize; i++) {\n                    if (path[i] == adj) {\n                        fnd = true;\n                        break;\n                    }\n                }\n                if (!fnd) {\n                    let newPath = path.slice(0);\n                    newPath[psize] = adj;\n                    this.recursiveRingFind(newPath, psize + 1, capacity, rblk, rings);\n                }\n            }\n            return;\n        }\n        let last = path[psize - 1];\n        let fnd = false;\n        for (let n = 0; n < graph[last - 1].length; n++) {\n            if (graph[last - 1][n] + 1 == path[0]) {\n                fnd = true;\n                break;\n            }\n        }\n        if (!fnd)\n            return;\n        for (let n = 0; n < path.length; n++) {\n            let count = 0, p = path[n] - 1;\n            for (let i = 0; i < graph[p].length; i++)\n                if (path.indexOf(graph[p][i] + 1) >= 0)\n                    count++;\n            if (count != 2)\n                return;\n        }\n        let first = 0;\n        for (let n = 1; n < psize; n++)\n            if (path[n] < path[first])\n                first = n;\n        let fm = (first - 1 + psize) % psize, fp = (first + 1) % psize;\n        let flip = path[fm] < path[fp];\n        if (first != 0 || flip) {\n            let newPath = Vec.numberArray(0, psize);\n            for (let n = 0; n < psize; n++)\n                newPath[n] = path[(first + (flip ? psize - n : n)) % psize];\n            path = newPath;\n        }\n        for (let n = 0; n < rings.length; n++) {\n            let look = rings[n];\n            let same = true;\n            for (let i = 0; i < psize; i++) {\n                if (look[i] != path[i]) {\n                    same = false;\n                    break;\n                }\n            }\n            if (same)\n                return;\n        }\n        rings.push(path);\n    }\n}\nMolecule.IDEALBOND = 1.5;\nMolecule.HEXPLICIT_UNKNOWN = -1;\nMolecule.ISOTOPE_NATURAL = 0;\nMolecule.BONDTYPE_NORMAL = 0;\nMolecule.BONDTYPE_INCLINED = 1;\nMolecule.BONDTYPE_DECLINED = 2;\nMolecule.BONDTYPE_UNKNOWN = 3;\nMolecule.HYVALENCE_EL = ['C', 'N', 'O', 'S', 'P'];\nMolecule.HYVALENCE_VAL = [4, 3, 2, 2, 3];\nMolecule.PREFIX_EXTRA = 'x';\nMolecule.PREFIX_TRANSIENT = 'y';\nexport { Molecule };\n//# sourceMappingURL=Molecule.js.map","import { angleDiff, angleNorm, DEGRAD, norm2_xy, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Graph } from './Graph';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nclass CoordUtil {\n    static atomAtPoint(mol, x, y, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.OVERLAP_THRESHOLD;\n        const tolsq = tolerance * tolerance;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y) < tolsq)\n                return n;\n        return 0;\n    }\n    static sketchEquivalent(mol1, mol2, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.DEFAULT_EQUIV_TOLERANCE;\n        const na = mol1.numAtoms, nb = mol1.numBonds;\n        if (na != mol2.numAtoms || nb != mol2.numBonds)\n            return false;\n        const tolsq = tolerance * tolerance;\n        let box1 = mol1.boundary(), box2 = mol2.boundary();\n        if (Math.abs(box1.minX() - box2.minX()) > tolerance)\n            return false;\n        if (Math.abs(box1.minY() - box2.minY()) > tolerance)\n            return false;\n        if (Math.abs(box1.maxX() - box2.maxX()) > tolerance)\n            return false;\n        if (Math.abs(box1.maxY() - box2.maxY()) > tolerance)\n            return false;\n        let mx1 = MolUtil.arrayAtomX(mol1), my1 = MolUtil.arrayAtomY(mol1);\n        let mx2 = MolUtil.arrayAtomX(mol2), my2 = MolUtil.arrayAtomY(mol2);\n        let map = Vec.numberArray(0, na);\n        let mask = Vec.booleanArray(false, na);\n        for (let i = 0; i < na; i++) {\n            let j = -1;\n            if (norm2_xy(mx1[i] - mx2[i], my1[i] - my2[i]) < tolsq)\n                j = i;\n            if (j < 0) {\n                let bestdsq = Number.MAX_VALUE;\n                for (let n = 0; n < na; n++)\n                    if (!mask[n]) {\n                        let dsq = norm2_xy(mx1[i] - mx2[n], my1[i] - my2[n]);\n                        if (dsq < bestdsq) {\n                            bestdsq = dsq;\n                            j = n;\n                        }\n                    }\n                if (j < 0 || bestdsq > tolsq)\n                    return false;\n            }\n            map[i] = j + 1;\n            mask[j] = true;\n            if (mol1.atomElement(i + 1) != mol2.atomElement(j + 1))\n                return false;\n            if (mol1.atomCharge(i + 1) != mol2.atomCharge(j + 1))\n                return false;\n            if (mol1.atomUnpaired(i + 1) != mol2.atomUnpaired(j + 1))\n                return false;\n            if (mol1.atomHExplicit(i + 1) != mol2.atomHExplicit(j + 1) &&\n                mol1.atomHExplicit(i + 1) != Molecule.HEXPLICIT_UNKNOWN &&\n                mol2.atomHExplicit(j + 1) != Molecule.HEXPLICIT_UNKNOWN)\n                return false;\n        }\n        for (let i = 1; i <= nb; i++) {\n            let i1 = mol1.bondFrom(i), i2 = mol1.bondTo(i), j1 = map[i1 - 1], j2 = map[i2 - 1];\n            let j = mol2.findBond(j1, j2);\n            if (j == 0)\n                return false;\n            if (mol1.bondOrder(i) != mol2.bondOrder(j) || mol1.bondType(i) != mol2.bondType(j))\n                return false;\n            if (mol2.bondFrom(j) == j1 && mol2.bondTo(j) == j2) { }\n            else if (mol2.bondType(j) != Molecule.BONDTYPE_INCLINED &&\n                mol2.bondType(j) != Molecule.BONDTYPE_DECLINED &&\n                mol2.bondFrom(j) == j2 && mol2.bondTo(j) == j1) { }\n            else\n                return false;\n        }\n        return true;\n    }\n    static sketchMappable(mol1, mol2, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.DEFAULT_EQUIV_TOLERANCE;\n        let box1 = mol1.boundary(), box2 = mol2.boundary();\n        let dx = box1.minX() - box2.minX(), dy = box1.minY() - box2.minY();\n        if (Math.abs(dx) > tolerance * 0.1 || Math.abs(dy) > tolerance * 0.1) {\n            mol2 = mol2.clone();\n            for (let n = 1; n <= mol2.numAtoms; n++)\n                mol2.setAtomPos(n, mol2.atomX(n) + dx, mol2.atomY(n) + dy);\n        }\n        return CoordUtil.sketchEquivalent(mol1, mol2, tolerance);\n    }\n    static atomBondAngles(mol, atom, adj) {\n        if (adj == null)\n            adj = mol.atomAdjList(atom);\n        let bndang = [];\n        let cx = mol.atomX(atom), cy = mol.atomY(atom);\n        for (let a of adj)\n            bndang.push(Math.atan2(mol.atomY(a) - cy, mol.atomX(a) - cx));\n        return bndang;\n    }\n    static overlapsAtom(mol, x, y, tol) {\n        const tolsq = tol * tol;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y) < tolsq)\n                return true;\n        return false;\n    }\n    static overlappingAtomMask(mol, thresh) {\n        if (thresh == null)\n            thresh = CoordUtil.OVERLAP_THRESHOLD;\n        const sz = mol.numAtoms;\n        let box = mol.boundary();\n        let p1, p2;\n        if (box.w > box.h) {\n            p1 = MolUtil.arrayAtomX(mol);\n            p2 = MolUtil.arrayAtomY(mol);\n        }\n        else {\n            p1 = MolUtil.arrayAtomY(mol);\n            p2 = MolUtil.arrayAtomX(mol);\n        }\n        let omask = Vec.booleanArray(false, sz);\n        let idx = Vec.idxSort(p1);\n        const threshSQ = thresh * thresh;\n        for (let i = 1; i < sz - 1; i++) {\n            for (let j = i - 1; j >= 0; j--) {\n                let d1 = p1[idx[i]] - p1[idx[j]];\n                if (d1 > thresh)\n                    break;\n                if (norm2_xy(d1, p2[idx[i]] - p2[idx[j]]) < threshSQ) {\n                    omask[idx[i]] = true;\n                    omask[idx[j]] = true;\n                }\n            }\n            for (let j = i + 1; j < sz; j++) {\n                let d1 = p1[idx[j]] - p1[idx[i]];\n                if (d1 > thresh)\n                    break;\n                if (norm2_xy(d1, p2[idx[j]] - p2[idx[i]]) < threshSQ) {\n                    omask[idx[i]] = true;\n                    omask[idx[j]] = true;\n                }\n            }\n        }\n        return omask;\n    }\n    static overlappingAtomList(mol, thresh) {\n        if (thresh == null)\n            thresh = CoordUtil.OVERLAP_THRESHOLD;\n        return Vec.add(Vec.maskIdx(CoordUtil.overlappingAtomMask(mol, thresh)), 1);\n    }\n    static congestionPoint(mol, x, y, approach) {\n        if (approach == null)\n            approach = 1E-5;\n        let score = 0;\n        let na = mol.numAtoms;\n        for (let n = 1; n <= na; n++)\n            score += 1.0 / (approach + norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y));\n        return score;\n    }\n    static congestionMolecule(mol, approach) {\n        if (approach == null)\n            approach = 1E-5;\n        let score = 0;\n        const na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        for (let i = 0; i < na - 1; i++)\n            for (let j = i + 1; j < na; j++)\n                score += 1.0 / (approach + norm2_xy(mx[i] - mx[j], my[i] - my[j]));\n        return score;\n    }\n    static translateMolecule(mol, ox, oy) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            mol.setAtomPos(n, mol.atomX(n) + ox, mol.atomY(n) + oy);\n    }\n    static rotateMolecule(mol, theta, cx, cy) {\n        if (cx == null || cy == null) {\n            let box = mol.boundary();\n            cx = box.midX();\n            cy = box.midY();\n        }\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n            mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n        }\n    }\n    static rotateBond(mol, centre, atom, theta) {\n        theta = angleNorm(theta);\n        if (Math.abs(theta) < 0.1 * DEGRAD)\n            return;\n        let g = Graph.fromMolecule(mol);\n        g.isolateNode(centre - 1);\n        let cc = g.calculateComponents();\n        let cx = mol.atomX(centre), cy = mol.atomY(centre);\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (cc[n - 1] == cc[atom - 1]) {\n                let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n                mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n            }\n    }\n    static rotateAtoms(mol, mask, cx, cy, theta) {\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n                mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n            }\n    }\n    static angleNeighbours(mol, atom) {\n        let adj = mol.atomAdjList(atom);\n        if (adj.length <= 1)\n            return null;\n        let th = [];\n        for (let n = 0; n < adj.length; n++)\n            th.push(Math.atan2(mol.atomY(adj[n]) - mol.atomY(atom), mol.atomX(adj[n]) - mol.atomX(atom)));\n        if (adj.length == 2) {\n            if (angleDiff(th[1], th[0]) > 0)\n                return adj;\n            return [adj[1], adj[0]];\n        }\n        let idx = Vec.idxSort(th);\n        return Vec.idxGet(adj, idx);\n    }\n    static mergeAtoms(mol, oldN, newN) {\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondFrom(n) == oldN)\n                mol.setBondFrom(n, newN);\n            if (mol.bondTo(n) == oldN)\n                mol.setBondTo(n, newN);\n        }\n        mol.deleteAtomAndBonds(oldN);\n    }\n    static normaliseBondDistances(mol) {\n        const nb = mol.numBonds;\n        if (nb == 0)\n            return;\n        let dsq = [];\n        for (let n = 1; n <= nb; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            dsq.push(norm2_xy(mol.atomX(bto) - mol.atomX(bfr), mol.atomY(bto) - mol.atomY(bfr)));\n        }\n        Vec.sort(dsq);\n        let median = (nb & 1) == 1 ? Math.sqrt(dsq[nb >> 1]) : 0.5 * (Math.sqrt(dsq[nb >> 1]) + Math.sqrt(dsq[(nb >> 1) - 1]));\n        if (median < 0.1 || (median > Molecule.IDEALBOND * 0.9 && median < Molecule.IDEALBOND * 1.1))\n            return;\n        let box = mol.boundary();\n        let cx = box.midX(), cy = box.midY();\n        let scale = Molecule.IDEALBOND / median;\n        for (let n = mol.numAtoms; n >= 1; n--) {\n            let x = (mol.atomX(n) - cx) * scale + cx;\n            let y = (mol.atomY(n) - cy) * scale + cy;\n            mol.setAtomPos(n, x, y);\n        }\n    }\n    static centreMolecule(mol) {\n        if (MolUtil.isBlank(mol))\n            return;\n        let x = MolUtil.arrayAtomX(mol), y = MolUtil.arrayAtomY(mol);\n        let sz = x.length;\n        let invsz = 1.0 / sz;\n        let meanX = Vec.sum(x) * invsz, meanY = Vec.sum(y) * invsz;\n        let closest = Number.POSITIVE_INFINITY;\n        let deltaX = 0, deltaY = 0;\n        for (let n = 0; n < sz; n++) {\n            let dsq = norm2_xy(x[n] - meanX, y[n] - meanY);\n            if (dsq < closest) {\n                deltaX = -x[n];\n                deltaY = -y[n];\n                closest = dsq;\n            }\n        }\n        for (let n = 0; n < sz; n++)\n            mol.setAtomPos(n + 1, x[n] + deltaX, y[n] + deltaY);\n    }\n    static mirrorImage(mol) {\n        mol = mol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            mol.setAtomX(n, -mol.atomX(n));\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                mol.setBondType(n, Molecule.BONDTYPE_INCLINED);\n            else if (mol.bondType(n) == Molecule.BONDTYPE_INCLINED)\n                mol.setBondType(n, Molecule.BONDTYPE_DECLINED);\n        }\n        return mol;\n    }\n    static alignOrientFlip(mol1, idx1, mol2, idx2) {\n        if (idx1.length < 2 || idx1.length != idx2.length)\n            throw 'Invalid mapping indices.';\n        let x0 = mol1.atomX(idx1[0]), y0 = mol1.atomY(idx1[0]);\n        CoordUtil.translateMolecule(mol2, x0 - mol2.atomX(idx2[0]), y0 - mol2.atomY(idx2[0]));\n        const sz = idx1.length - 1;\n        let th1 = [], th2 = [];\n        let deltaA = 0, deltaB = 0;\n        for (let n = 0; n < sz; n++) {\n            th1.push(Math.atan2(mol1.atomY(idx1[n + 1]) - y0, mol1.atomX(idx1[n + 1]) - x0));\n            th2.push(Math.atan2(mol2.atomY(idx2[n + 1]) - y0, mol2.atomX(idx2[n + 1]) - x0));\n            let dthA = angleDiff(th1[n], th2[n]), dthB = angleDiff(th1[n], -th2[n]);\n            if (dthA < -175 * DEGRAD && deltaA > 0)\n                dthA += TWOPI;\n            else if (dthA > 175 * DEGRAD && deltaA < 0)\n                dthA -= TWOPI;\n            if (dthB < -175 * DEGRAD && deltaB > 0)\n                dthB += TWOPI;\n            else if (dthB > 175 * DEGRAD && deltaB < 0)\n                dthB -= TWOPI;\n            deltaA += dthA;\n            deltaB += dthB;\n        }\n        if (sz > 1) {\n            let inv = 1.0 / sz;\n            deltaA *= inv;\n            deltaB *= inv;\n        }\n        let scoreA = 0, scoreB = 0;\n        for (let n = 0; n < sz; n++) {\n            scoreA += Math.abs(angleDiff(th1[n], th2[n] + deltaA));\n            scoreB += Math.abs(angleDiff(th1[n], -th2[n] + deltaB));\n        }\n        if (scoreB < scoreA) {\n            for (let n = 1; n <= mol2.numAtoms; n++)\n                mol2.setAtomY(n, 2 * y0 - mol2.atomY(n));\n            for (let n = 1; n <= mol2.numBonds; n++) {\n                if (mol2.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                    mol2.setBondType(n, Molecule.BONDTYPE_INCLINED);\n                else if (mol2.bondType(n) == Molecule.BONDTYPE_INCLINED)\n                    mol2.setBondType(n, Molecule.BONDTYPE_DECLINED);\n            }\n            CoordUtil.rotateMolecule(mol2, x0, y0, deltaB);\n        }\n        else\n            CoordUtil.rotateMolecule(mol2, x0, y0, deltaA);\n    }\n    static atomIsWeirdLinear(mol, idx) {\n        let bonds = mol.atomAdjBonds(idx);\n        if (bonds.length != 2)\n            return false;\n        for (let n = 0; n < bonds.length; n++)\n            if (mol.bondOrder(bonds[n]) == 3)\n                return false;\n        let adj = mol.atomAdjList(idx);\n        let th1 = Math.atan2(mol.atomY(adj[0]) - mol.atomY(idx), mol.atomX(adj[0]) - mol.atomX(idx));\n        let th2 = Math.atan2(mol.atomY(adj[1]) - mol.atomY(idx), mol.atomX(adj[1]) - mol.atomX(idx));\n        return Math.abs(angleDiff(th1, th2)) >= 175 * DEGRAD;\n    }\n}\nCoordUtil.OVERLAP_THRESHOLD = 0.2;\nCoordUtil.OVERLAP_THRESHOLD_SQ = CoordUtil.OVERLAP_THRESHOLD * CoordUtil.OVERLAP_THRESHOLD;\nCoordUtil.DEFAULT_EQUIV_TOLERANCE = 0.2;\nexport { CoordUtil };\n//# sourceMappingURL=CoordUtil.js.map","import { GeomUtil } from '../util/Geom';\nimport { angleDiff, angleDiffPos, angleNorm, DEGRAD, norm2_xy, norm_xy, sortAngles, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { CoordUtil } from './CoordUtil';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nexport var Geometry;\n(function (Geometry) {\n    Geometry[Geometry[\"Linear\"] = 0] = \"Linear\";\n    Geometry[Geometry[\"Bent\"] = 1] = \"Bent\";\n    Geometry[Geometry[\"Trigonal\"] = 2] = \"Trigonal\";\n    Geometry[Geometry[\"Tetra1\"] = 3] = \"Tetra1\";\n    Geometry[Geometry[\"Tetra2\"] = 4] = \"Tetra2\";\n    Geometry[Geometry[\"SqPlan\"] = 5] = \"SqPlan\";\n    Geometry[Geometry[\"BasePyram\"] = 6] = \"BasePyram\";\n    Geometry[Geometry[\"TrigBip\"] = 7] = \"TrigBip\";\n    Geometry[Geometry[\"Octa1\"] = 8] = \"Octa1\";\n    Geometry[Geometry[\"Octa2\"] = 9] = \"Octa2\";\n})(Geometry || (Geometry = {}));\nclass SketchUtil {\n    static placeNewAtom(mol, el) {\n        let box = mol.boundary();\n        let x = box.maxX() + Molecule.IDEALBOND, y = box.maxY();\n        return mol.addAtom(el, x, y);\n    }\n    static placeNewFragment(mol, frag) {\n        if (frag.numAtoms == 0)\n            return;\n        let dirX = [1, 0, -1, 1, -1, 1, 0, -1], dirY = [1, 1, 1, 0, 0, -1, -1, -1];\n        let dx = Vec.numberArray(0, 8), dy = Vec.numberArray(0, 8), score = Vec.numberArray(0, 8);\n        let mbox = mol.boundary(), fbox = frag.boundary();\n        for (let n = 0; n < 8; n++) {\n            let vx = dirX[n], vy = dirY[n];\n            if (n == 0 || n == 3 || n == 5)\n                dx[n] = mbox.minX() - fbox.maxX();\n            else if (n == 2 || n == 4 || n == 7)\n                dx[n] = mbox.maxX() - fbox.minX();\n            else\n                dx[n] = 0.5 * (mbox.minX() + mbox.maxX() - fbox.minX() - fbox.maxX());\n            if (n == 5 || n == 6 || n == 7)\n                dy[n] = mbox.minY() - fbox.maxY();\n            else if (n == 0 || n == 1 || n == 2)\n                dy[n] = mbox.maxY() - fbox.minY();\n            else\n                dy[n] = 0.5 * (mbox.minY() + mbox.maxY() - fbox.minY() - fbox.maxY());\n            dx[n] -= vx;\n            dy[n] -= vy;\n            score[n] = SketchUtil.fragPosScore(mol, frag, dx[n], dy[n]);\n            vx *= 0.25;\n            vy *= 0.25;\n            for (let iter = 100; iter > 0; iter--) {\n                let iscore = SketchUtil.fragPosScore(mol, frag, dx[n] + vx, dy[n] + vy);\n                if (iscore <= score[n])\n                    break;\n                score[n] = iscore;\n                dx[n] += vx;\n                dy[n] += vy;\n            }\n            for (let iter = 100; iter > 0; iter--)\n                for (let d = 0; d < 8; d++) {\n                    vx = dirX[d] * 0.1;\n                    vy = dirY[d] * 0.1;\n                    let iscore = SketchUtil.fragPosScore(mol, frag, dx[n] + vx, dy[n] + vy);\n                    if (iscore <= score[n])\n                        break;\n                    score[n] = iscore;\n                    dx[n] += vx;\n                    dy[n] += vy;\n                }\n        }\n        let best = 0;\n        for (let n = 1; n < 8; n++)\n            if (score[n] > score[best])\n                best = n;\n        frag = frag.clone();\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomPos(n, frag.atomX(n) + dx[best], frag.atomY(n) + dy[best]);\n        mol.append(frag);\n    }\n    static fragPosScore(mol, frag, dx, dy) {\n        let score = 0;\n        for (let i = 1; i <= mol.numAtoms; i++)\n            for (let j = 1; j <= frag.numAtoms; j++) {\n                let ox = frag.atomX(j) + dx - mol.atomX(i), oy = frag.atomY(j) + dy - mol.atomY(i);\n                let dist2 = ox * ox + oy * oy;\n                if (dist2 < 1)\n                    return 0;\n                score += 1 / dist2;\n            }\n        let mbox = mol.boundary(), fbox = frag.boundary();\n        let minX = Math.min(fbox.minX() + dx, mbox.minX()), maxX = Math.max(fbox.maxX() + dx, mbox.maxX());\n        let minY = Math.min(fbox.minY() + dy, mbox.minY()), maxY = Math.max(fbox.maxY() + dy, mbox.maxY());\n        let rangeX = Math.max(1, maxX - minX), rangeY = Math.max(1, maxY - minY);\n        let ratio = Math.max(rangeX / rangeY, rangeY / rangeX);\n        return score / ratio;\n    }\n    static mergeOverlappingAtoms(mol) {\n        return SketchUtil.mergeFragmentsDiv(mol, 0);\n    }\n    static mergeFragmentsDiv(mol, div) {\n        const na = mol.numAtoms;\n        let omask = CoordUtil.overlappingAtomMask(mol);\n        let chopmask = Vec.booleanArray(false, na);\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        let remap = [];\n        for (let n = 0; n < na; n++)\n            remap.push(n + 1);\n        let div1 = div, div2 = div + 1;\n        if (div == 0)\n            div1 = na;\n        for (let i = 1; i <= div1; i++)\n            if (omask[i - 1] && !chopmask[i - 1]) {\n                if (div == 0)\n                    div2 = i + 1;\n                for (let j = div2; j <= na; j++)\n                    if (omask[j - 1] && !chopmask[j - 1]) {\n                        if (norm2_xy(mx[i - 1] - mx[j - 1], my[i - 1] - my[j - 1]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                            continue;\n                        let oldN = j, newN = i;\n                        let exotic = [0, 0];\n                        for (let k = 0; k < 2; k++) {\n                            let a = k == 0 ? i : j;\n                            exotic[k] = (mol.atomElement(a) == 'C' ? 0 : 1)\n                                + (mol.atomElement(a) == 'X' ? -100 : 0)\n                                + (mol.atomCharge(a) != 0 ? 1 : 0)\n                                + (mol.atomUnpaired(a) != 0 ? 1 : 0)\n                                + (mol.atomIsotope(a) != Molecule.ISOTOPE_NATURAL ? 1 : 0)\n                                + (mol.atomHExplicit(a) != Molecule.HEXPLICIT_UNKNOWN ? 1 : 0)\n                                + (MolUtil.hasAbbrev(mol, a) ? 1000 : 0);\n                        }\n                        if (exotic[1] > exotic[0]) {\n                            oldN = i;\n                            newN = j;\n                        }\n                        for (let n = 1; n <= mol.numBonds; n++) {\n                            if (mol.bondFrom(n) == oldN)\n                                mol.setBondFrom(n, newN);\n                            if (mol.bondTo(n) == oldN)\n                                mol.setBondTo(n, newN);\n                        }\n                        chopmask[oldN - 1] = true;\n                        remap[oldN - 1] = newN;\n                    }\n            }\n        for (let n = na; n >= 1; n--)\n            if (chopmask[n - 1]) {\n                if (n <= div)\n                    div--;\n                mol.deleteAtomAndBonds(n);\n                for (let i = 0; i < na; i++)\n                    if (remap[i] > n)\n                        remap[i]--;\n            }\n        for (let n = mol.numAtoms; n > div; n--)\n            if (mol.atomElement(n) == 'X') {\n                mol.deleteAtomAndBonds(n);\n                for (let i = 0; i < na; i++)\n                    if (remap[i] > n)\n                        remap[i]--;\n            }\n        MolUtil.removeDuplicateBonds(mol);\n        return remap;\n    }\n    static mergeFragmentsMask(mol, mask) {\n        let chopmask = Vec.booleanArray(false, mol.numAtoms);\n        let na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        for (let i = 1; i <= na; i++)\n            if (mask[i - 1])\n                for (let j = 1; j <= na; j++)\n                    if (!mask[j - 1] && !chopmask[j - 1])\n                        if (norm2_xy(mx[i - 1] - mx[j - 1], my[i - 1] - my[j - 1]) < CoordUtil.OVERLAP_THRESHOLD_SQ) {\n                            let oldN = j, newN = i;\n                            if (mol.atomElement(i) == 'C' && mol.atomElement(j) != 'C' && mol.atomElement(j) != 'X')\n                                [oldN, newN] = [i, j];\n                            if (mol.atomHExplicit(newN) == Molecule.HEXPLICIT_UNKNOWN)\n                                mol.setAtomHExplicit(newN, mol.atomHExplicit(oldN));\n                            mol.setAtomUnpaired(newN, mol.atomUnpaired(newN) + mol.atomUnpaired(oldN));\n                            mol.setAtomCharge(newN, mol.atomCharge(newN) + mol.atomCharge(oldN));\n                            mol.setAtomExtra(newN, Vec.concat(mol.atomExtra(oldN), mol.atomExtra(newN)));\n                            for (let n = 1; n <= mol.numBonds; n++) {\n                                if (mol.bondFrom(n) == oldN)\n                                    mol.setBondFrom(n, newN);\n                                if (mol.bondTo(n) == oldN)\n                                    mol.setBondTo(n, newN);\n                            }\n                            chopmask[oldN - 1] = true;\n                        }\n        for (let n = chopmask.length; n >= 1; n--)\n            if (chopmask[n - 1])\n                mol.deleteAtomAndBonds(n);\n        MolUtil.removeDuplicateBonds(mol);\n    }\n    static matchAngleGeometry(geom, theta) {\n        if (theta.length <= 1)\n            return true;\n        let match = SketchUtil.GEOM_ANGLES[geom], mtheta = Vec.numberArray(0, theta.length);\n        let hit = Vec.booleanArray(false, match.length);\n        for (let n = 0; n < theta.length; n++)\n            for (let s = 1; s >= -1; s -= 2) {\n                for (let i = 0; i < theta.length; i++)\n                    mtheta[i] = (theta[i] - theta[0]) * s;\n                Vec.setTo(hit, false);\n                let gotall = true;\n                for (let i = 0; i < mtheta.length; i++) {\n                    let got = false;\n                    for (let j = 0; j < match.length; j++)\n                        if (!hit[j] && Math.abs(angleDiff(mtheta[i], match[j])) < 3 * DEGRAD) {\n                            hit[j] = true;\n                            got = true;\n                            break;\n                        }\n                    if (!got) {\n                        gotall = false;\n                        break;\n                    }\n                }\n                if (gotall)\n                    return true;\n            }\n        return false;\n    }\n    static primeDirections(mol, atom) {\n        let angles = SketchUtil.calculateNewBondAngles(mol, atom, 1);\n        let exits = SketchUtil.exitVectors(mol, atom);\n        return GeomUtil.uniqueAngles(angles.concat(exits), 2 * DEGRAD);\n    }\n    static exitVectors(mol, atom) {\n        let adj = mol.atomAdjList(atom), sz = adj.length;\n        if (sz == 0)\n            return [0, 90 * DEGRAD, 180 * DEGRAD, -90 * DEGRAD];\n        if (sz == 1)\n            return [];\n        let ret = [];\n        let ang = GeomUtil.sortAngles(CoordUtil.atomBondAngles(mol, atom, adj));\n        for (let n = 0; n < sz; n++) {\n            let nn = n < sz - 1 ? n + 1 : 0;\n            ret.push(angleNorm(ang[n] + 0.5 * angleDiffPos(ang[nn], ang[n])));\n        }\n        return ret;\n    }\n    static calculateNewBondAngles(mol, atom, order) {\n        let adj = mol.atomAdjList(atom);\n        const sz = adj.length;\n        if (sz == 0) {\n            let atno = mol.atomicNumber(atom), atblk = Chemistry.ELEMENT_BLOCKS[atno];\n            if (atblk <= 2)\n                return [0, 90 * DEGRAD, 180 * DEGRAD, -90 * DEGRAD];\n            else\n                return [90 * DEGRAD, -90 * DEGRAD, 30 * DEGRAD, 150 * DEGRAD, 210 * DEGRAD, -30 * DEGRAD, 180 * DEGRAD, 0 * DEGRAD];\n        }\n        let geom = SketchUtil.guessAtomGeometry(mol, atom, order);\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        for (let n = 0; n < geom.length; n++) {\n            let ret = SketchUtil.mapAngleSubstituent(geom[n], ang);\n            if (ret != null)\n                return ret;\n        }\n        return [];\n    }\n    static guessAtomGeometry(mol, atom, order) {\n        let adj = mol.atomAdjList(atom);\n        let sz = adj.length, atno = mol.atomicNumber(atom);\n        let atblk = Chemistry.ELEMENT_BLOCKS[atno], elrow = Chemistry.ELEMENT_ROWS[atno];\n        let el = mol.atomElement(atom);\n        let adjBO = [], adjAN = [], pri = [];\n        let allSingle = true;\n        for (let n = 0; n < sz; n++) {\n            adjBO.push(mol.bondOrder(mol.findBond(atom, adj[n])));\n            adjAN.push(mol.atomicNumber(adj[n]));\n            pri.push(adjBO[n] * 200 + adjAN[n]);\n            if (adjBO[n] != 1)\n                allSingle = true;\n        }\n        for (let p = 0; p < sz - 1;) {\n            if (pri[p] > pri[p + 1]) {\n                Vec.swap(adj, p, p + 1);\n                Vec.swap(adjBO, p, p + 1);\n                Vec.swap(adjAN, p, p + 1);\n                Vec.swap(pri, p, p + 1);\n                if (p > 0)\n                    p--;\n            }\n            else\n                p++;\n        }\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        if (sz == 1) {\n            if (el == 'C' || el == 'N') {\n                if (adjBO[0] == 2 && order == 2)\n                    return [Geometry.Linear];\n                if ((adjBO[0] == 3 && order == 1) || (adjBO[0] == 1 && order == 3))\n                    return [Geometry.Linear];\n            }\n            if (atblk > 2)\n                return [Geometry.Octa1, Geometry.Octa2];\n            if (order != 0 && (el == 'C' || el == 'N' || el == 'O'))\n                return [Geometry.Trigonal];\n            return [Geometry.Trigonal, Geometry.Linear];\n        }\n        if (sz == 2 && Math.abs(angleDiff(ang[0], ang[1])) >= 175 * DEGRAD) {\n            if (atblk <= 2)\n                return [Geometry.SqPlan];\n            else\n                return [Geometry.Octa1, Geometry.Octa2];\n        }\n        let geom = [];\n        if (atblk == 0)\n            geom = [Geometry.Trigonal, Geometry.SqPlan];\n        else if (atblk == 1)\n            geom = [Geometry.Trigonal, Geometry.SqPlan, Geometry.Octa1, Geometry.Octa2];\n        else if (atblk == 2) {\n            geom.push(Geometry.Trigonal);\n            if (el == 'C' && allSingle) {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n            }\n            else if (el == 'C' && !allSingle) {\n            }\n            else if (elrow <= 3) {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n            }\n            else {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n                geom.push(Geometry.Octa1);\n                geom.push(Geometry.Octa2);\n            }\n        }\n        else {\n            geom.push(Geometry.Octa1);\n            geom.push(Geometry.Octa2);\n        }\n        for (let n = geom.length - 1; n >= 0; n--) {\n            if (!SketchUtil.matchAngleGeometry(geom[n], ang))\n                geom.splice(n, 1);\n        }\n        return geom;\n    }\n    static mapAngleSubstituent(geom, ang) {\n        let gtheta = SketchUtil.GEOM_ANGLES[geom];\n        const asz = ang.length, gsz = gtheta.length;\n        if (asz >= gsz)\n            return null;\n        if (asz == 0)\n            return gtheta.slice(0);\n        let vac = [];\n        for (let n = 0; n < asz; n++)\n            for (let k = 0; k < gsz; k++)\n                for (let s = 1; s >= -1; s -= 2) {\n                    let gang = [];\n                    for (let i = 0; i < gsz; i++)\n                        gang.push(angleNorm(ang[n] + s * (gtheta[i] - gtheta[k])));\n                    let mask = Vec.booleanArray(false, gsz);\n                    let mcount = 0;\n                    for (let i = 0; i < gsz; i++)\n                        if (!mask[i])\n                            for (let j = 0; j < asz; j++)\n                                if (Math.abs(angleDiff(gang[i], ang[j])) < 3 * DEGRAD) {\n                                    mask[i] = true;\n                                    mcount++;\n                                    break;\n                                }\n                    if (mcount != asz)\n                        continue;\n                    for (let i = 0; i < gsz; i++)\n                        if (!mask[i])\n                            vac.push(gang[i]);\n                }\n        if (vac.length == 0)\n            return null;\n        vac = GeomUtil.sortAngles(vac);\n        for (let n = 0; n < vac.length - 1; n++) {\n            let th1 = vac[n], th2 = vac[n + 1], dth = angleDiff(th2, th1);\n            if (Math.abs(dth) < 5 * DEGRAD) {\n                vac[n] = th1 + 0.5 * dth;\n                vac.splice(n + 1, 1);\n                n--;\n            }\n        }\n        return vac;\n    }\n    static refitAtomGeometry(mol, atom, geom) {\n        let gtheta = SketchUtil.GEOM_ANGLES[geom];\n        let gsz = gtheta.length;\n        let adj = mol.atomAdjList(atom);\n        let asz = adj.length;\n        if (asz <= 1 || asz > gsz)\n            return null;\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        let inRing = Vec.booleanArray(false, asz);\n        let allInRing = true;\n        for (let n = 0; n < asz; n++) {\n            inRing[n] = mol.bondInRing(mol.findBond(atom, adj[n]));\n            if (!inRing[n])\n                allInRing = false;\n        }\n        if (allInRing)\n            return null;\n        let bestAng = null;\n        let bestScore = 0;\n        let ww = MolUtil.calculateWalkWeight(mol, atom);\n        for (let i = 0; i < gsz; i++)\n            for (let j = 0; j < asz; j++)\n                for (let s = 1; s >= -1; s -= 2) {\n                    let newAng = Vec.numberArray(0, asz);\n                    let mask = Vec.booleanArray(false, gsz);\n                    for (let n1 = 0; n1 < asz; n1++) {\n                        let best = -1;\n                        let bdiff = 0;\n                        for (let n2 = 0; n2 < gsz; n2++)\n                            if (!mask[n2]) {\n                                let th = angleNorm(gtheta[n2] * s - gtheta[i] + ang[j]);\n                                let diff = Math.abs(angleDiff(th, ang[n1]));\n                                if (best < 0 || diff < bdiff) {\n                                    best = n2;\n                                    bdiff = diff;\n                                    newAng[n1] = th;\n                                }\n                            }\n                        mask[best] = true;\n                    }\n                    let ringClash = false;\n                    for (let n = 0; n < asz; n++)\n                        if (inRing[n] && Math.abs(angleDiff(newAng[n], ang[n])) > 2 * DEGRAD) {\n                            ringClash = true;\n                            break;\n                        }\n                    if (ringClash)\n                        continue;\n                    let score = 0;\n                    for (let n = 0; n < asz; n++)\n                        score += ww[adj[n] - 1] * Math.abs(angleDiff(newAng[n], ang[n]));\n                    if (bestAng == null || score < bestScore) {\n                        bestAng = newAng;\n                        bestScore = score;\n                    }\n                }\n        if (bestAng == null)\n            return null;\n        let same = true;\n        for (let n = 0; n < asz; n++)\n            if (Math.abs(angleDiff(bestAng[n], ang[n])) > 2 * DEGRAD) {\n                same = false;\n                break;\n            }\n        if (same)\n            return null;\n        mol = mol.clone();\n        for (let n = 0; n < asz; n++)\n            if (!inRing[n])\n                CoordUtil.rotateBond(mol, atom, adj[n], bestAng[n] - ang[n]);\n        return mol;\n    }\n    static switchAtomGeometry(mol, src, dst, geoms) {\n        let bestAtom = 0;\n        let bestAng = 0, bestX = 0, bestY = 0;\n        let adj = mol.atomAdjList(src);\n        let ang = CoordUtil.atomBondAngles(mol, src, adj), theta = Vec.numberArray(0, ang.length - 1);\n        let cx = mol.atomX(src), cy = mol.atomY(src);\n        for (let i = 0; i < dst.length; i++) {\n            let a = adj.indexOf(dst[i]);\n            let curth = ang[a];\n            for (let n = 0, p = 0; n < adj.length; n++)\n                if (n != a)\n                    theta[p++] = ang[n];\n            let r = norm_xy(mol.atomX(dst[i]) - cx, mol.atomY(dst[i]) - cy);\n            for (let j = 0; j < geoms.length; j++) {\n                if (adj.length >= SketchUtil.GEOM_ANGLES[geoms[j]].length)\n                    continue;\n                let newAng = SketchUtil.mapAngleSubstituent(geoms[j], theta);\n                if (newAng != null)\n                    for (let n = 0; n < newAng.length; n++) {\n                        let dth = angleDiff(newAng[n], curth);\n                        if (Math.abs(dth) < 3 * DEGRAD)\n                            continue;\n                        if (dth < 0)\n                            dth += TWOPI;\n                        if (bestAtom == 0 || dth < bestAng - 2 * DEGRAD || (dth < bestAng + 2 * DEGRAD && dst[i] < bestAtom)) {\n                            let x = cx + r * Math.cos(newAng[n]);\n                            let y = cy + r * Math.sin(newAng[n]);\n                            if (CoordUtil.atomAtPoint(mol, x, y) != 0)\n                                continue;\n                            bestAtom = dst[i];\n                            bestAng = dth;\n                            bestX = x;\n                            bestY = y;\n                        }\n                    }\n                break;\n            }\n        }\n        if (bestAtom == 0)\n            return null;\n        mol = mol.clone();\n        mol.setAtomPos(bestAtom, bestX, bestY);\n        return mol;\n    }\n    static pickAtomsToConnect(mol, aidx) {\n        if (aidx.length < 2)\n            return null;\n        if (aidx.length == 2) {\n            if (mol.findBond(aidx[0], aidx[1]) > 0)\n                return null;\n            return aidx;\n        }\n        const AUTO_DSQ = sqr(Molecule.IDEALBOND + 0.1);\n        let bestDSQ = Number.MAX_VALUE;\n        let bestA1 = 0, bestA2 = 0;\n        let conn = [];\n        for (let i = 0; i < aidx.length - 1; i++)\n            for (let j = i + 1; j < aidx.length; j++) {\n                if (mol.findBond(aidx[i], aidx[j]) > 0)\n                    continue;\n                let dsq = norm2_xy(mol.atomX(aidx[i]) - mol.atomX(aidx[j]), mol.atomY(aidx[i]) - mol.atomY(aidx[j]));\n                if (dsq < AUTO_DSQ) {\n                    conn.push(aidx[i]);\n                    conn.push(aidx[j]);\n                }\n                else if (dsq < bestDSQ) {\n                    bestDSQ = dsq;\n                    bestA1 = aidx[i];\n                    bestA2 = aidx[j];\n                }\n            }\n        if (conn.length == 0 && bestA1 != 0) {\n            conn.push(bestA1);\n            conn.push(bestA2);\n        }\n        return conn.length == 0 ? null : conn;\n    }\n    static pickNewAtomDirection(mol, atom, theta) {\n        if (theta.length == 1)\n            return theta[0];\n        let bestTheta = theta[0], bestScore = Number.MAX_VALUE;\n        for (let n = 0; n < theta.length; n++) {\n            let px = mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(theta[n]);\n            let py = mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(theta[n]);\n            let score = CoordUtil.congestionPoint(mol, px, py);\n            if (score > bestScore)\n                continue;\n            if (CoordUtil.overlapsAtom(mol, px, py, 0.2))\n                score += 1E5;\n            if (score < bestScore) {\n                bestTheta = theta[n];\n                bestScore = score;\n            }\n        }\n        return bestTheta;\n    }\n    static joinOverlappingAtoms(mol, mask) {\n        mol = mol.clone();\n        mask = mask.slice(0);\n        const na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        let groups = [];\n        let groupX = [], groupY = [];\n        for (let i = 0; i < na - 1; i++)\n            if (mask[i]) {\n                let g = [i + 1];\n                let x = mx[i], y = my[i];\n                for (let j = i + 1; j < na; j++)\n                    if (mask[j]) {\n                        if (norm2_xy(mx[j] - mx[i], my[j] - my[i]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                            continue;\n                        g.push(j + 1);\n                        x += mx[j];\n                        y += my[j];\n                        let adjb = mol.atomAdjBonds(j + 1);\n                        for (let n = 0; n < adjb.length; n++) {\n                            if (mol.bondFrom(adjb[n]) == j + 1)\n                                mol.setBondFrom(adjb[n], i + 1);\n                            else if (mol.bondTo(adjb[n]) == j + 1)\n                                mol.setBondTo(adjb[n], i + 1);\n                        }\n                    }\n                if (g.length == 1)\n                    continue;\n                groups.push(g);\n                groupX.push(x / g.length);\n                groupY.push(y / g.length);\n            }\n        if (groups.length == 0)\n            return null;\n        let keepmask = Vec.booleanArray(true, na);\n        for (let n = 0; n < groups.length; n++) {\n            let g = groups[n];\n            mol.setAtomPos(g[0], groupX[n], groupY[n]);\n            for (let i = 1; i < g.length; i++)\n                keepmask[g[i] - 1] = false;\n        }\n        mol = MolUtil.subgraphMask(mol, keepmask);\n        MolUtil.removeDuplicateBonds(mol);\n        return mol;\n    }\n    static moveToEdge(mol, mask, dx, dy) {\n        let gotS = false, gotN = false;\n        let sx1 = 0, sy1 = 0, sx2 = 0, sy2 = 0;\n        let nx1 = 0, ny1 = 0, nx2 = 0, ny2 = 0;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n), y = mol.atomY(n);\n            if (mask[n - 1]) {\n                if (!gotS || x < sx1)\n                    sx1 = x;\n                if (!gotS || y < sy1)\n                    sy1 = y;\n                if (!gotS || x > sx2)\n                    sx2 = x;\n                if (!gotS || y > sy2)\n                    sy2 = y;\n                gotS = true;\n            }\n            else {\n                if (!gotN || x < nx1)\n                    nx1 = x;\n                if (!gotN || y < ny1)\n                    ny1 = y;\n                if (!gotN || x > nx2)\n                    nx2 = x;\n                if (!gotN || y > ny2)\n                    ny2 = y;\n                gotN = true;\n            }\n        }\n        const SEPARATE = 1.0, SEPTEST = 0.9;\n        if ((dx < 0 && dy == 0 && sx2 <= nx1 - SEPTEST) ||\n            (dx > 0 && dy == 0 && sx1 >= nx2 + SEPTEST) ||\n            (dx == 0 && dy < 0 && sy2 <= ny1 - SEPTEST) ||\n            (dx == 0 && dy > 0 && sy1 >= ny2 + SEPTEST)) {\n            return null;\n        }\n        mol = mol.clone();\n        let ox = 0, oy = 0;\n        if (dx < 0)\n            ox = nx1 - sx2 - SEPARATE;\n        if (dx > 0)\n            ox = nx2 - sx1 + SEPARATE;\n        if (dy < 0)\n            oy = ny1 - sy2 - SEPARATE;\n        if (dy > 0)\n            oy = ny2 - sy1 + SEPARATE;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1])\n                mol.setAtomPos(n, mol.atomX(n) + ox, mol.atomY(n) + oy);\n        return mol;\n    }\n    static placeAdditionalHydrogens(mol, atom, numH) {\n        let base = mol.numAtoms;\n        const x0 = mol.atomX(atom), y0 = mol.atomY(atom);\n        let adj = mol.atomAdjList(atom);\n        if (adj.length == 2 && numH == 2) {\n            const th1 = Math.atan2(mol.atomY(adj[0]) - y0, mol.atomX(adj[0]) - x0);\n            const th2 = Math.atan2(mol.atomY(adj[1]) - y0, mol.atomX(adj[1]) - x0);\n            if (Math.abs(angleDiff(th1, th2)) < 170 * DEGRAD) {\n                let theta = 0.5 * (th1 + th2) + Math.PI;\n                let th3 = theta - 30 * DEGRAD, th4 = theta + 30 * DEGRAD;\n                mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th3), y0 + Molecule.IDEALBOND * Math.sin(th3));\n                mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th4), y0 + Molecule.IDEALBOND * Math.sin(th4));\n                mol.addBond(atom, base + 1, 1);\n                mol.addBond(atom, base + 2, 1);\n                return;\n            }\n        }\n        if (adj.length == 1 && numH == 3) {\n            let th1 = Math.atan2(mol.atomY(adj[0]) - y0, mol.atomX(adj[0]) - x0);\n            let th2 = th1 + 90 * DEGRAD, th3 = th1 + 180 * DEGRAD, th4 = th1 + 270 * DEGRAD;\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th2), y0 + Molecule.IDEALBOND * Math.sin(th2));\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th3), y0 + Molecule.IDEALBOND * Math.sin(th3));\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th4), y0 + Molecule.IDEALBOND * Math.sin(th4));\n            mol.addBond(atom, base + 1, 1);\n            mol.addBond(atom, base + 2, 1);\n            mol.addBond(atom, base + 3, 1);\n            return;\n        }\n        let theta = SketchUtil.pickNewAtomDirection(mol, atom, SketchUtil.primeDirections(mol, atom));\n        mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(theta), y0 + Molecule.IDEALBOND * Math.sin(theta));\n        mol.addBond(atom, base + 1, 1);\n        if (numH > 1)\n            SketchUtil.placeAdditionalHydrogens(mol, atom, numH - 1);\n    }\n    static allViableDirections(mol, atom, order) {\n        if (mol.atomAdjCount(atom) == 0) {\n            let angles = [];\n            for (let n = 0; n < 12; n++)\n                angles.push(30 * DEGRAD);\n            return angles;\n        }\n        let adj = mol.atomAdjList(atom);\n        let angles = SketchUtil.exitVectors(mol, atom);\n        let geom = SketchUtil.guessAtomGeometry(mol, atom, order);\n        if (adj.length == 1 && geom.indexOf(Geometry.Linear) < 0)\n            geom.push(Geometry.Linear);\n        let bndang = CoordUtil.atomBondAngles(mol, atom, adj);\n        for (let g of geom) {\n            let map = SketchUtil.mapAngleSubstituent(g, bndang);\n            if (map != null)\n                for (let th of map)\n                    angles.push(th);\n        }\n        return GeomUtil.uniqueAngles(angles, 2 * DEGRAD);\n    }\n    static proposeNewRing(mol, rsz, x, y, dx, dy, snap) {\n        let theta = dy == 0 && dx == 0 ? 0.5 * Math.PI : Math.atan2(dy, dx);\n        if (snap) {\n            const chunk = 30 * DEGRAD;\n            theta = Math.round(theta / chunk) * chunk;\n        }\n        return SketchUtil.positionSimpleRing(mol, rsz, x, y, theta);\n    }\n    static proposeAtomRing(mol, rsz, atom, dx, dy) {\n        let thsnap = [];\n        let cx = mol.atomX(atom), cy = mol.atomY(atom);\n        if (mol.atomAdjCount(atom) == 0) {\n            for (let n = 0; n < 12; n++)\n                thsnap.push(TWOPI * n / 12);\n        }\n        else if (mol.atomAdjCount(atom) == 1) {\n            let nbr = mol.atomAdjList(atom)[0];\n            thsnap.push(angleNorm(Math.atan2(mol.atomY(nbr) - cy, mol.atomX(nbr) - cx) + Math.PI));\n        }\n        else {\n            let angs = [];\n            for (let nbr of mol.atomAdjList(atom))\n                angs.push(Math.atan2(mol.atomY(nbr) - cy, mol.atomX(nbr) - cx));\n            angs = sortAngles(angs);\n            for (let n = 0; n < angs.length; n++) {\n                let th1 = angs[n], th2 = angs[n < angs.length - 1 ? n + 1 : 0];\n                thsnap.push(th1 + 0.5 * angleDiffPos(th2, th1));\n            }\n        }\n        let theta = Math.atan2(dy, dx);\n        let bestTheta = 0, bestDelta = Number.MAX_VALUE;\n        for (let th of thsnap) {\n            let delta = Math.abs(angleDiff(th, theta));\n            if (delta < bestDelta) {\n                bestTheta = th;\n                bestDelta = delta;\n            }\n        }\n        return SketchUtil.positionSimpleRing(mol, rsz, mol.atomX(atom), mol.atomY(atom), bestTheta);\n    }\n    static proposeBondRing(mol, rsz, bond, dx, dy) {\n        let bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        let bx = mol.atomX(bto) - mol.atomX(bfr), by = mol.atomY(bto) - mol.atomY(bfr);\n        let sign = dx * by - dy * bx;\n        let delta = sign > 0 ? -90 * DEGRAD : 90 * DEGRAD;\n        let theta = Math.atan2(by, bx) + delta;\n        let dth = TWOPI / rsz;\n        let rad = Molecule.IDEALBOND / (2.0 * Math.sin(0.5 * dth)), brad = rad * Math.cos(0.5 * dth);\n        let cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto)) + brad * Math.cos(theta);\n        let cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto)) + brad * Math.sin(theta);\n        let rx = [], ry = [];\n        for (let n = 0; n < rsz; n++) {\n            let th = theta - Math.PI + (n - 0.5) * dth;\n            rx.push(cx + Math.cos(th) * rad);\n            ry.push(cy + Math.sin(th) * rad);\n        }\n        let [i1, i2] = sign < 0 ? [bfr, bto] : [bto, bfr];\n        rx[0] = mol.atomX(i1);\n        ry[0] = mol.atomY(i1);\n        rx[1] = mol.atomX(i2);\n        ry[1] = mol.atomY(i2);\n        return [rx, ry];\n    }\n    static positionSimpleRing(mol, rsz, x, y, theta) {\n        let dth = TWOPI / rsz;\n        let rad = Molecule.IDEALBOND / (2 * Math.sin(0.5 * dth));\n        let cx = x + rad * Math.cos(theta), cy = y + rad * Math.sin(theta);\n        let rx = [], ry = [];\n        for (let n = 0; n < rsz; n++) {\n            let th = theta - Math.PI + n * dth;\n            rx.push(cx + Math.cos(th) * rad);\n            ry.push(cy + Math.sin(th) * rad);\n        }\n        return [rx, ry];\n    }\n    static guidelineSprouts(mol, atom) {\n        let sprouts = [];\n        let angs = [], ords = [];\n        for (let n = 0; n < 3; n++) {\n            angs.push(SketchUtil.allViableDirections(mol, atom, n + 1));\n            ords.push([n + 1]);\n            for (let i = 0; i < n; i++)\n                if (angs[i] != null && Vec.equals(angs[n], angs[i])) {\n                    angs[n] = null;\n                    ords[i].push(n + 1);\n                }\n        }\n        const cx = mol.atomX(atom), cy = mol.atomY(atom);\n        for (let n = 0; n < 3; n++)\n            if (angs[n] != null) {\n                let sprout = {\n                    atom: atom,\n                    orders: ords[n],\n                    x: [],\n                    y: [],\n                };\n                for (let i = 0; i < angs[n].length; i++) {\n                    sprout.x[i] = cx + Math.cos(angs[n][i]) * Molecule.IDEALBOND;\n                    sprout.y[i] = cy + Math.sin(angs[n][i]) * Molecule.IDEALBOND;\n                }\n                sprouts.push(sprout);\n            }\n        return sprouts;\n    }\n}\nSketchUtil.GEOM_ANGLES = [\n    [0, 180 * DEGRAD],\n    [0, 120 * DEGRAD],\n    [0, 120 * DEGRAD, 240 * DEGRAD],\n    [0, 90 * DEGRAD, 150 * DEGRAD, 240 * DEGRAD],\n    [0, 120 * DEGRAD, 180 * DEGRAD, 240 * DEGRAD],\n    [0, 90 * DEGRAD, 180 * DEGRAD, 270 * DEGRAD],\n    [0, 90 * DEGRAD, 150 * DEGRAD, 210 * DEGRAD, 270 * DEGRAD],\n    [0, 60 * DEGRAD, 90 * DEGRAD, 180 * DEGRAD, 210 * DEGRAD],\n    [0, 60 * DEGRAD, 120 * DEGRAD, 180 * DEGRAD, 240 * DEGRAD, 300 * DEGRAD],\n    [0, 45 * DEGRAD, 90 * DEGRAD, 180 * DEGRAD, 225 * DEGRAD, 270 * DEGRAD]\n];\nexport { SketchUtil };\n//# sourceMappingURL=SketchUtil.js.map","import { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { CoordUtil } from './CoordUtil';\nimport { Graph } from './Graph';\nimport { Molecule } from './Molecule';\nimport { PolymerBlock } from '../mol/PolymerBlock';\nimport { SketchUtil } from './SketchUtil';\nclass MolUtil {\n    static isBlank(mol) {\n        if (mol == null)\n            return true;\n        return mol.numAtoms == 0;\n    }\n    static notBlank(mol) {\n        if (mol == null)\n            return false;\n        return mol.numAtoms > 0;\n    }\n    static orBlank(mol) { return mol == null ? new Molecule() : mol; }\n    static hasAnyAbbrev(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n))\n                return true;\n        return false;\n    }\n    static hasAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra == null ? 0 : extra.length); n++)\n            if (extra[n].startsWith('a'))\n                return true;\n        return false;\n    }\n    static getAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                return Molecule.fromString(extra[n].substring(1));\n            }\n        return null;\n    }\n    static setAbbrev(mol, atom, frag) {\n        let attidx = 0;\n        for (let n = 1; n <= frag.numAtoms; n++)\n            if (frag.atomElement(n) == MolUtil.ABBREV_ATTACHMENT) {\n                attidx = n;\n                break;\n            }\n        if (attidx == 0)\n            throw 'No attachment points indicated.';\n        if (attidx >= 2) {\n            frag = frag.clone();\n            frag.swapAtoms(attidx, 1);\n        }\n        let adj = mol.atomAdjList(atom);\n        if (adj.length > 1)\n            throw 'Setting abbreviation for non-terminal atom.';\n        if (frag.atomAdjCount(1) == 1 && mol.atomAdjCount(atom) > 0) {\n            let b1 = mol.findBond(atom, mol.atomAdjList(atom)[0]);\n            let b2 = frag.findBond(1, frag.atomAdjList(1)[0]);\n            mol.setBondOrder(b1, frag.bondOrder(b2));\n        }\n        let extra = mol.atomExtra(atom);\n        let idx = -1;\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                idx = n;\n                break;\n            }\n        if (idx < 0)\n            idx = extra.push(null) - 1;\n        extra[idx] = 'a' + frag.toString();\n        mol.setAtomExtra(atom, extra);\n    }\n    static validateAbbrevs(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                if (mol.atomAdjCount(n) > 1)\n                    MolUtil.clearAbbrev(mol, n);\n                if (mol.atomCharge(n) != 0)\n                    mol.setAtomCharge(n, 0);\n                if (mol.atomUnpaired(n) != 0)\n                    mol.setAtomUnpaired(n, 0);\n                if (mol.atomIsotope(n) != 0)\n                    mol.setAtomIsotope(n, Molecule.ISOTOPE_NATURAL);\n                if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN)\n                    mol.setAtomHExplicit(n, Molecule.HEXPLICIT_UNKNOWN);\n            }\n    }\n    static convertToAbbrev(mol, srcmask, abbrevName) {\n        let molidx = this.convertToAbbrevIndex(mol, srcmask, abbrevName);\n        return molidx ? molidx[0] : null;\n    }\n    static convertToAbbrevIndex(mol, srcmask, abbrevName) {\n        let junction = 0;\n        let polymerExtra = null;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let b1 = mol.bondFrom(n), b2 = mol.bondTo(n), atom = 0;\n            if (srcmask[b1 - 1] && !srcmask[b2 - 1]) {\n                atom = b1;\n                polymerExtra = PolymerBlock.getPolymerExtensions(mol, b2);\n            }\n            else if (!srcmask[b1 - 1] && srcmask[b2 - 1]) {\n                atom = b2;\n                polymerExtra = PolymerBlock.getPolymerExtensions(mol, b1);\n            }\n            if (atom == 0)\n                continue;\n            if (junction > 0 && atom != junction)\n                return [null, null];\n            junction = atom;\n        }\n        if (junction == 0)\n            return [null, null];\n        let na = mol.numAtoms, molidx = 0, fragidx = 0;\n        let maskmol = Vec.booleanArray(false, na), maskfrag = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++) {\n            maskmol[n] = srcmask[n];\n            maskfrag[n] = !srcmask[n] || n + 1 == junction;\n            if (maskmol[n] && n + 1 <= junction)\n                molidx++;\n            if (maskfrag[n] && n + 1 <= junction)\n                fragidx++;\n        }\n        let bondType = Molecule.BONDTYPE_NORMAL, nadj = 0;\n        for (let a of mol.atomAdjList(junction))\n            if (!srcmask[a - 1]) {\n                if (nadj != 0) {\n                    bondType = Molecule.BONDTYPE_NORMAL;\n                    break;\n                }\n                let b = mol.findBond(junction, a);\n                if (mol.bondFrom(b) == junction)\n                    bondType = mol.bondType(b);\n                nadj++;\n            }\n        let frag = MolUtil.subgraphMask(mol, maskfrag);\n        frag.setAtomElement(fragidx, MolUtil.ABBREV_ATTACHMENT);\n        frag.setAtomCharge(fragidx, 0);\n        frag.setAtomUnpaired(fragidx, 0);\n        frag.setAtomHExplicit(fragidx, Molecule.HEXPLICIT_UNKNOWN);\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomMapNum(n, 0);\n        frag.setAtomExtra(fragidx, []);\n        frag.setAtomTransient(fragidx, []);\n        let adj = frag.atomAdjList(fragidx);\n        let x = 0, y = 0, inv = 1.0 / adj.length;\n        let bondOrder = 1;\n        for (let n = 0; n < adj.length; n++) {\n            x += frag.atomX(adj[n]);\n            y += frag.atomY(adj[n]);\n            let b = frag.findBond(fragidx, adj[n]);\n            if (n == 0)\n                bondOrder = frag.bondOrder(b);\n            else if (bondOrder != frag.bondOrder(b))\n                bondOrder = 1;\n        }\n        x *= inv;\n        y *= inv;\n        if (fragidx > 1)\n            frag.swapAtoms(fragidx, 1);\n        let newmol = MolUtil.subgraphMask(mol, maskmol);\n        let newatom = newmol.addAtom(abbrevName, x, y);\n        newmol.addBond(molidx, newatom, bondOrder, bondType);\n        MolUtil.setAbbrev(newmol, newatom, frag);\n        if (polymerExtra != null)\n            newmol.setAtomExtra(newatom, Vec.concat(newmol.atomExtra(newatom), polymerExtra));\n        return [newmol, newatom];\n    }\n    static expandAbbrevs(mol, alignCoords) {\n        while (true) {\n            let anything = false;\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (MolUtil.hasAbbrev(mol, n)) {\n                    if (MolUtil.expandOneAbbrev(mol, n, alignCoords))\n                        anything = true;\n                    n--;\n                }\n            if (!anything)\n                break;\n        }\n    }\n    static expandedAbbrevs(mol) {\n        if (!this.hasAnyAbbrev(mol))\n            return mol;\n        mol = mol.clone();\n        this.expandAbbrevs(mol, true);\n        return mol;\n    }\n    static expandOneAbbrev(mol, atom, alignCoords) {\n        let frag = MolUtil.getAbbrev(mol, atom);\n        if (frag == null)\n            return null;\n        if (mol.atomAdjCount(atom) != 1 || frag.numAtoms == 0) {\n            MolUtil.clearAbbrev(mol, atom);\n            return null;\n        }\n        let m = mol.atomMapNum(atom);\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomMapNum(n, 0);\n        if (m > 0)\n            for (let n of frag.atomAdjList(1))\n                frag.setAtomMapNum(n, m);\n        return MolUtil.expandOneAbbrevFrag(mol, atom, frag, alignCoords);\n    }\n    static expandOneAbbrevFrag(mol, atom, frag, alignCoords) {\n        let polymerExtra = PolymerBlock.getPolymerExtensions(mol, atom);\n        let nbr = mol.atomAdjCount(atom) == 1 ? mol.atomAdjList(atom)[0] : 0;\n        let connBond = mol.findBond(atom, nbr), connType = Molecule.BONDTYPE_NORMAL;\n        if (connBond > 0) {\n            connType = mol.bondType(connBond);\n            if (mol.bondFrom(connBond) != nbr && (connType == Molecule.BONDTYPE_INCLINED || connType == Molecule.BONDTYPE_DECLINED))\n                connType = Molecule.BONDTYPE_NORMAL;\n        }\n        if (alignCoords) {\n            let vx1 = mol.atomX(atom) - mol.atomX(nbr), vy1 = mol.atomY(atom) - mol.atomY(nbr);\n            let adj = frag.atomAdjList(1);\n            let vx2 = 0, vy2 = 0, inv = 1.0 / adj.length;\n            for (let n = 0; n < adj.length; n++) {\n                vx2 += frag.atomX(adj[n]) - frag.atomX(1);\n                vy2 += frag.atomY(adj[n]) - frag.atomY(1);\n            }\n            vx2 *= inv;\n            vy2 *= inv;\n            let th1 = Math.atan2(vy1, vx1), th2 = Math.atan2(vy2, vx2);\n            CoordUtil.rotateMolecule(frag, th1 - th2);\n            CoordUtil.translateMolecule(frag, mol.atomX(nbr) - frag.atomX(1), mol.atomY(nbr) - frag.atomY(1));\n        }\n        if (polymerExtra != null) {\n            for (let n = 1; n <= frag.numAtoms; n++) {\n                let extra = frag.atomExtra(n);\n                for (let i = extra.length - 1; i >= 0; i--)\n                    if (polymerExtra.indexOf(extra[i]) >= 0)\n                        extra.splice(i, 1);\n                frag.setAtomExtra(n, Vec.concat(extra, polymerExtra));\n            }\n        }\n        let join = mol.numAtoms + 1;\n        mol.append(frag);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondFrom(n) == join) {\n                mol.setBondFrom(n, nbr);\n                mol.setBondType(n, connType);\n            }\n            else if (mol.bondTo(n) == join) {\n                mol.setBondFromTo(n, nbr, mol.bondFrom(n));\n                mol.setBondType(n, connType);\n            }\n        }\n        let mask = Vec.booleanArray(false, mol.numAtoms);\n        for (let n = mask.length - frag.numAtoms; n < mask.length; n++)\n            mask[n] = true;\n        mol.deleteAtomAndBonds(join);\n        mol.deleteAtomAndBonds(atom);\n        mask.splice(join - 1, 1);\n        mask.splice(atom - 1, 1);\n        return mask;\n    }\n    static clearAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                extra.splice(n, 1);\n                mol.setAtomExtra(atom, extra);\n                mol.setAtomElement(atom, 'C');\n                return;\n            }\n    }\n    static setAtomElement(mol, atom, el) {\n        if (mol.atomElement(atom) == el)\n            return;\n        this.clearAbbrev(mol, atom);\n        mol.setAtomElement(atom, el);\n    }\n    static addBond(mol, bfr, bto, order, type) {\n        if (type == null)\n            type = Molecule.BONDTYPE_NORMAL;\n        if (mol.atomAdjCount(bfr) >= 1)\n            this.clearAbbrev(mol, bfr);\n        if (mol.atomAdjCount(bto) >= 1)\n            this.clearAbbrev(mol, bto);\n        let b = mol.findBond(bfr, bto);\n        if (b > 0)\n            mol.deleteBond(b);\n        return mol.addBond(bfr, bto, order, type);\n    }\n    static subgraphMask(mol, mask) {\n        let invidx = [];\n        let sum = 0;\n        for (let n = 0; n < mol.numAtoms; n++) {\n            if (mask[n])\n                invidx.push(++sum);\n            else\n                invidx.push(0);\n        }\n        if (sum == 0)\n            return new Molecule();\n        if (sum == mol.numAtoms)\n            return mol.clone();\n        let frag = new Molecule();\n        frag.keepTransient = true;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let num = frag.addAtom(mol.atomElement(n), mol.atomX(n), mol.atomY(n), mol.atomCharge(n), mol.atomUnpaired(n));\n                frag.setAtomIsotope(num, mol.atomIsotope(n));\n                frag.setAtomHExplicit(num, mol.atomHExplicit(n));\n                frag.setAtomMapNum(num, mol.atomMapNum(n));\n                frag.setAtomExtra(num, mol.atomExtra(n));\n                frag.setAtomTransient(num, mol.atomTransient(n));\n            }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = invidx[mol.bondFrom(n) - 1], bto = invidx[mol.bondTo(n) - 1];\n            if (bfr > 0 && bto > 0) {\n                let num = frag.addBond(bfr, bto, mol.bondOrder(n), mol.bondType(n));\n                frag.setBondExtra(num, mol.bondExtra(n));\n                frag.setBondTransient(num, mol.bondTransient(n));\n            }\n        }\n        frag.keepTransient = mol.keepTransient;\n        return frag;\n    }\n    static subgraphIndex(mol, idx) {\n        let invidx = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 0; n < invidx.length; n++)\n            invidx[n] = 0;\n        for (let n = 0; n < idx.length; n++)\n            invidx[idx[n] - 1] = n + 1;\n        let frag = new Molecule();\n        frag.keepTransient = true;\n        for (let n = 0; n < idx.length; n++) {\n            let num = frag.addAtom(mol.atomElement(idx[n]), mol.atomX(idx[n]), mol.atomY(idx[n]), mol.atomCharge(idx[n]), mol.atomUnpaired(idx[n]));\n            frag.setAtomIsotope(num, mol.atomIsotope(idx[n]));\n            frag.setAtomHExplicit(num, mol.atomHExplicit(idx[n]));\n            frag.setAtomMapNum(num, mol.atomMapNum(idx[n]));\n            frag.setAtomExtra(num, mol.atomExtra(idx[n]));\n            frag.setAtomTransient(num, mol.atomTransient(idx[n]));\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = invidx[mol.bondFrom(n) - 1], bto = invidx[mol.bondTo(n) - 1];\n            if (bfr > 0 && bto > 0) {\n                let num = frag.addBond(bfr, bto, mol.bondOrder(n), mol.bondType(n));\n                frag.setBondExtra(num, mol.bondExtra(n));\n                frag.setBondTransient(num, mol.bondTransient(n));\n            }\n        }\n        frag.keepTransient = mol.keepTransient;\n        return frag;\n    }\n    static subgraphWithAttachments(mol, mask) {\n        let xmask = mask.slice(0);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (mask[bfr] && !mask[bto])\n                xmask[bto] = true;\n            else if (mask[bto] && !mask[bfr])\n                xmask[bfr] = true;\n        }\n        let xmol = mol.clone();\n        for (let n = 1; n <= xmol.numAtoms; n++)\n            if (xmask[n - 1] && !mask[n - 1]) {\n                xmol.setAtomElement(n, 'X');\n                xmol.setAtomCharge(n, 0);\n                xmol.setAtomUnpaired(n, 0);\n                xmol.setAtomHExplicit(n, Molecule.HEXPLICIT_UNKNOWN);\n                xmol.setAtomExtra(n, []);\n            }\n        return MolUtil.subgraphMask(xmol, xmask);\n    }\n    static append(mol, frag) {\n        let boxm = mol.boundary(), boxf = frag.boundary();\n        let dx = boxm.maxX() + Molecule.IDEALBOND - boxf.minX();\n        let dy = 0.5 * (boxm.minY() + boxm.maxY() - boxf.minY() - boxf.maxY());\n        let top = mol.numAtoms;\n        mol.append(frag);\n        for (let n = top + 1; n <= mol.numAtoms; n++)\n            mol.setAtomPos(n, mol.atomX(n) + dx, mol.atomY(n) + dy);\n    }\n    static deleteAtoms(mol, idx) {\n        let mask = Vec.booleanArray(true, mol.numAtoms);\n        for (let n = 0; n < idx.length; n++)\n            mask[idx[n] - 1] = false;\n        return MolUtil.subgraphMask(mol, mask);\n    }\n    static componentList(mol) {\n        let sz = mol.numAtoms;\n        if (sz == 0)\n            return null;\n        let g = Graph.fromMolecule(mol);\n        let groups = g.calculateComponentGroups();\n        for (let grp of groups)\n            Vec.addTo(grp, 1);\n        return groups;\n    }\n    static getAtomSides(mol, atom) {\n        let g = Graph.fromMolecule(mol);\n        let cc = g.calculateComponents();\n        let mask = [];\n        for (let n = 0; n < cc.length; n++)\n            mask.push(cc[n] == cc[atom - 1]);\n        mask[atom - 1] = false;\n        let oldmap = Vec.maskIdx(mask);\n        g.keepNodesMask(mask);\n        cc = g.calculateComponents();\n        let ccmax = Vec.max(cc);\n        let grps = [];\n        for (let n = 0; n < ccmax; n++)\n            grps.push([atom]);\n        for (let n = 0; n < cc.length; n++)\n            grps[cc[n] - 1].push(oldmap[n] + 1);\n        return grps;\n    }\n    static getBondSides(mol, bond) {\n        let bf = mol.bondFrom(bond), bt = mol.bondTo(bond);\n        let inRing = mol.bondInRing(bond);\n        let g = Graph.fromMolecule(mol);\n        let cc = g.calculateComponents();\n        let mask = [];\n        for (let n = 0; n < cc.length; n++)\n            mask.push(cc[n] == cc[bf - 1]);\n        if (!inRing)\n            g.removeEdge(bf - 1, bt - 1);\n        else {\n            mask[bf - 1] = false;\n            mask[bt - 1] = false;\n        }\n        let oldmap = Vec.maskIdx(mask);\n        g.keepNodesMask(mask);\n        cc = g.calculateComponents();\n        let ccmax = Vec.max(cc);\n        let grps = [];\n        for (let n = 0; n < ccmax; n++) {\n            grps[n] = [];\n            if (inRing) {\n                grps[n].push(bf);\n                grps[n].push(bt);\n            }\n        }\n        for (let n = 0; n < cc.length; n++)\n            grps[cc[n] - 1].push(oldmap[n] + 1);\n        return grps;\n    }\n    static arrayAtomX(mol) {\n        let x = Vec.numberArray(0, mol.numAtoms);\n        for (let n = x.length - 1; n >= 0; n--)\n            x[n] = mol.atomX(n + 1);\n        return x;\n    }\n    static arrayAtomY(mol) {\n        let y = Vec.numberArray(0, mol.numAtoms);\n        for (let n = y.length - 1; n >= 0; n--)\n            y[n] = mol.atomY(n + 1);\n        return y;\n    }\n    static arrayAtomMapNum(mol) {\n        let mapnum = Vec.numberArray(0, mol.numAtoms);\n        for (let n = mapnum.length - 1; n >= 0; n--)\n            mapnum[n] = mol.atomMapNum(n + 1);\n        return mapnum;\n    }\n    static molecularFormula(mol, punctuation) {\n        let puncEnter = '', puncExit = '', puncEnterSuper = '', puncExitSuper = '';\n        if (punctuation == true)\n            [puncEnter, puncExit] = ['{', '}', '{^', '}'];\n        else if (punctuation instanceof Array) {\n            puncEnter = punctuation[0];\n            puncExit = punctuation[1];\n            puncEnterSuper = punctuation[2];\n            puncExitSuper = punctuation[3];\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                mol = mol.clone();\n                MolUtil.expandAbbrevs(mol, false);\n                break;\n            }\n        let countC = 0, countH = 0;\n        let elements = Vec.stringArray('', mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            countH += mol.atomHydrogens(n);\n            let el = mol.atomElement(n);\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL)\n                el = puncEnterSuper + mol.atomIsotope(n) + puncExitSuper + el;\n            if (el == 'C')\n                countC++;\n            else if (el == 'H')\n                countH++;\n            else\n                elements[n - 1] = el;\n        }\n        elements.sort();\n        let formula = '';\n        if (countC > 0)\n            formula += 'C';\n        if (countC > 1) {\n            if (punctuation)\n                formula += puncEnter;\n            formula += countC;\n            if (punctuation)\n                formula += puncExit;\n        }\n        if (countH > 0)\n            formula += 'H';\n        if (countH > 1) {\n            if (punctuation)\n                formula += puncEnter;\n            formula += countH;\n            if (punctuation)\n                formula += puncExit;\n        }\n        for (let n = 0; n < elements.length; n++)\n            if (elements[n].length > 0) {\n                let count = 1;\n                for (; n + 1 < elements.length && elements[n] == elements[n + 1]; n++)\n                    count++;\n                formula += elements[n];\n                if (count > 1) {\n                    if (punctuation)\n                        formula += puncEnter;\n                    formula += count;\n                    if (punctuation)\n                        formula += puncExit;\n                }\n            }\n        return formula.toString();\n    }\n    static molecularWeight(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                mol = mol.clone();\n                MolUtil.expandAbbrevs(mol, false);\n                break;\n            }\n        let mw = 0;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            mw += mol.atomHydrogens(n) * Chemistry.NATURAL_ATOMIC_WEIGHTS[1];\n            let iso = mol.atomIsotope(n);\n            if (iso != Molecule.ISOTOPE_NATURAL) {\n                mw += iso;\n                continue;\n            }\n            let an = Molecule.elementAtomicNumber(mol.atomElement(n));\n            if (an > 0 && an < Chemistry.NATURAL_ATOMIC_WEIGHTS.length)\n                mw += Chemistry.NATURAL_ATOMIC_WEIGHTS[an];\n        }\n        return mw;\n    }\n    static removeDuplicateBonds(mol) {\n        let bpri = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let p = Math.min(mol.bondFrom(n), mol.bondTo(n)) * mol.numAtoms + Math.max(mol.bondFrom(n), mol.bondTo(n));\n            bpri.push(p);\n        }\n        let bidx = Vec.idxSort(bpri);\n        let keepmask = Vec.booleanArray(false, bidx.length);\n        let p = 0;\n        while (p < bidx.length) {\n            let sz = 1;\n            while (p + sz < bidx.length && bpri[bidx[p]] == bpri[bidx[p + sz]])\n                sz++;\n            let best = p;\n            for (let n = p + 1; n < p + sz; n++) {\n                let b1 = bidx[best] + 1, b2 = bidx[n] + 1;\n                let a1 = mol.bondFrom(b1), a2 = mol.bondTo(b1);\n                let el1 = mol.atomElement(a1), el2 = mol.atomElement(a2);\n                let limit1 = 0, limit2 = 0;\n                if (el1 == 'C' || el1 == 'N')\n                    limit1 = 4;\n                else if (el1 == 'O')\n                    limit1 = 3;\n                if (el2 == 'C' || el2 == 'N')\n                    limit2 = 4;\n                else if (el2 == 'O')\n                    limit2 = 3;\n                if (limit1 > 0 || limit2 > 0) {\n                    let boB1A1 = 0, boB1A2 = 0, boB2A1 = 0, boB2A2 = 0;\n                    for (let i = 1; i <= mol.numBonds; i++) {\n                        if (i != b2 && (mol.bondFrom(i) == a1 || mol.bondTo(i) == a1))\n                            boB1A1 += mol.bondOrder(i);\n                        if (i != b2 && (mol.bondFrom(i) == a2 || mol.bondTo(i) == a2))\n                            boB1A2 += mol.bondOrder(i);\n                        if (i != b1 && (mol.bondFrom(i) == a1 || mol.bondTo(i) == a1))\n                            boB2A1 += mol.bondOrder(i);\n                        if (i != b1 && (mol.bondFrom(i) == a2 || mol.bondTo(i) == a2))\n                            boB2A2 += mol.bondOrder(i);\n                    }\n                    let bad1 = 0, bad2 = 0;\n                    if (limit1 > 0 && boB1A1 > limit1)\n                        bad1++;\n                    if (limit2 > 0 && boB1A2 > limit2)\n                        bad1++;\n                    if (limit1 > 0 && boB2A1 > limit1)\n                        bad2++;\n                    if (limit2 > 0 && boB2A2 > limit2)\n                        bad2++;\n                    if (bad1 < bad2)\n                        continue;\n                    if (bad1 > bad2) {\n                        best = n;\n                        continue;\n                    }\n                }\n                let exotic1 = 2 * mol.bondOrder(b1), exotic2 = 2 * mol.bondOrder(b2);\n                exotic1 += (exotic1 == 0 ? 4 : 0) + (mol.bondType(b1) != Molecule.BONDTYPE_NORMAL ? 1 : 0);\n                exotic2 += (exotic2 == 0 ? 4 : 0) + (mol.bondType(b2) != Molecule.BONDTYPE_NORMAL ? 1 : 0);\n                if (exotic2 > exotic1)\n                    best = n;\n            }\n            keepmask[bidx[best]] = true;\n            p += sz;\n        }\n        for (let n = mol.numBonds; n >= 1; n--)\n            if (!keepmask[n - 1] || mol.bondFrom(n) == mol.bondTo(n))\n                mol.deleteBond(n);\n    }\n    static calculateWalkWeight(mol, atom) {\n        let ccsz = 0, cc = Graph.fromMolecule(mol).calculateComponents();\n        for (let n = 0; n < cc.length; n++)\n            if (cc[n] == cc[atom - 1])\n                ccsz++;\n        let w = Vec.numberArray(1, mol.numAtoms), wn = Vec.numberArray(0, mol.numAtoms);\n        w[atom - 1] = 0;\n        for (; ccsz > 0; ccsz--) {\n            for (let n = 0; n < mol.numAtoms; n++)\n                wn[n] = w[n];\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let a1 = mol.bondFrom(n) - 1, a2 = mol.bondTo(n) - 1;\n                w[a1] += wn[a2] * 0.1;\n                w[a2] += wn[a1] * 0.1;\n            }\n            w[atom - 1] = 0;\n        }\n        return w;\n    }\n    static totalHydrogens(mol, atom) {\n        let hc = mol.atomHydrogens(atom);\n        let adj = mol.atomAdjList(atom);\n        for (let n = 0; n < adj.length; n++)\n            if (mol.atomElement(adj[n]) == 'H')\n                hc++;\n        return hc;\n    }\n    static stripHydrogens(mol, force = false) {\n        for (let n = mol.numAtoms; n >= 1; n--)\n            if ((force && mol.atomElement(n) == 'H') || this.boringHydrogen(mol, n))\n                mol.deleteAtomAndBonds(n);\n    }\n    static boringHydrogen(mol, atom) {\n        if (mol.atomElement(atom) != 'H')\n            return false;\n        if (mol.atomCharge(atom) != 0 || mol.atomUnpaired(atom) != 0)\n            return false;\n        if (mol.atomIsotope(atom) != Molecule.ISOTOPE_NATURAL)\n            return false;\n        if (Vec.notBlank(mol.atomExtra(atom)) || Vec.notBlank(mol.atomTransient(atom)))\n            return false;\n        if (mol.atomAdjCount(atom) != 1)\n            return false;\n        let other = mol.atomAdjList(atom)[0];\n        if (mol.atomElement(other) == 'H')\n            return false;\n        let bond = mol.atomAdjBonds(atom)[0];\n        if (mol.bondOrder(bond) != 1 || mol.bondType(bond) != Molecule.BONDTYPE_NORMAL)\n            return false;\n        if (mol.atomHExplicit(other) != Molecule.HEXPLICIT_UNKNOWN)\n            return false;\n        if (Molecule.HYVALENCE_EL.indexOf(mol.atomElement(other)) < 0)\n            return false;\n        return true;\n    }\n    static createHydrogens(mol, position) {\n        if (position == null)\n            position = false;\n        let na = mol.numAtoms;\n        for (let n = 1; n <= na; n++) {\n            let hc = mol.atomHydrogens(n);\n            if (hc == 0)\n                continue;\n            if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN)\n                mol.setAtomHExplicit(n, 0);\n            if (!position) {\n                for (; hc > 0; hc--) {\n                    let a = mol.addAtom('H', mol.atomX(n), mol.atomY(n));\n                    mol.addBond(n, a, 1);\n                }\n            }\n            else\n                SketchUtil.placeAdditionalHydrogens(mol, n, hc);\n        }\n        return mol.numAtoms - na;\n    }\n    static atomVec3(mol, atom) {\n        if (mol.is3D())\n            return [mol.atomX(atom), mol.atomY(atom), mol.atomZ(atom)];\n        else\n            return [mol.atomX(atom), mol.atomY(atom), 0];\n    }\n    static atomOxidationState(mol, atom) {\n        if (mol.atomAdjCount(atom) == 0)\n            return null;\n        if (this.hasAbbrev(mol, atom))\n            return null;\n        let atno = mol.atomicNumber(atom);\n        if (atno == 0)\n            return null;\n        let nonMetal = atno == Chemistry.ELEMENT_H || Chemistry.ELEMENT_BLOCKS[atno] == 2;\n        let oxstate = mol.atomHydrogens(atom) + (nonMetal ? -mol.atomCharge(atom) : mol.atomCharge(atom));\n        for (let b of mol.atomAdjBonds(atom)) {\n            let bo = mol.bondOrder(b), other = mol.bondOther(b, atom);\n            let chalco = ['O', 'S', 'Se', 'Te'].includes(mol.atomElement(other));\n            if (nonMetal || chalco)\n                oxstate += bo;\n            else\n                oxstate += bo % 2;\n        }\n        if (atno == Chemistry.ELEMENT_H && oxstate == 1)\n            return null;\n        if (atno == Chemistry.ELEMENT_B && oxstate == 3)\n            return null;\n        if (atno == Chemistry.ELEMENT_C && oxstate == 4)\n            return null;\n        if (atno == Chemistry.ELEMENT_N && oxstate == 3)\n            return null;\n        if (atno == Chemistry.ELEMENT_O && oxstate == 2)\n            return null;\n        if (atno == Chemistry.ELEMENT_S && (oxstate == 2 || oxstate == 4 || oxstate == 6))\n            return null;\n        if (atno == Chemistry.ELEMENT_P && (oxstate == 3 || oxstate == 5))\n            return null;\n        if ((atno == Chemistry.ELEMENT_F || atno == Chemistry.ELEMENT_Cl ||\n            atno == Chemistry.ELEMENT_Br || atno == Chemistry.ELEMENT_I) && oxstate == 1)\n            return null;\n        return oxstate;\n    }\n    static oxidationStateText(oxstate) {\n        if (oxstate == 0)\n            return '0';\n        let str = oxstate < 0 ? '-' : '';\n        let absox = Math.abs(oxstate);\n        if (absox == 1)\n            str += 'I';\n        else if (absox == 2)\n            str += 'II';\n        else if (absox == 3)\n            str += 'III';\n        else if (absox == 4)\n            str += 'IV';\n        else if (absox == 5)\n            str += 'V';\n        else if (absox == 6)\n            str += 'VI';\n        else if (absox == 7)\n            str += 'VII';\n        else if (absox == 8)\n            str += 'VIII';\n        else if (absox == 9)\n            str += 'IX';\n        else if (absox == 10)\n            str += 'X';\n        else if (absox == 11)\n            str += 'XI';\n        else if (absox == 12)\n            str += 'XII';\n        else\n            str = (oxstate > 0 ? '+' : '') + oxstate;\n        return str;\n    }\n}\nMolUtil.TEMPLATE_ATTACHMENT = 'X';\nMolUtil.ABBREV_ATTACHMENT = '*';\nexport { MolUtil };\n//# sourceMappingURL=MolUtil.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/mol/Molecule';\n\nexport interface InChIResult\n{\n\tinchi:string;\n\tinchiKey:string;\n}\n\nexport abstract class InChIDelegate\n{\n\tpublic async generate(mol:Molecule):Promise<InChIResult>\n\t{\n\t\tthrow new Error('InChI not implemented.');\n\t}\n}","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {MolUtil} from 'webmolkit/mol/MolUtil';\nimport {MDLMOLWriter} from 'webmolkit/io/MDLWriter';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport {getGlobal} from '@electron/remote';\nimport {InChIDelegate, InChIResult} from '../mixture/InChIDelegate';\n\n/*\n\tInteroperability with InChI technology: the generator program is a native binary, the location of which\n\tneeds to be discovered. Each generation operation involves a trip to the external execution subsystem.\n*/\n\nlet execLocation:string = null;\nlet inchi:InChI = null;\n\nexport class InChI extends InChIDelegate\n{\n\t// optional override: when using the Emscripten-ported version of InChI, set this function to call the\n\t// natively encoded implementation\n\tpublic static nativeMolfileToInChI:(mdlmol:string, options:string) => Promise<string> = null;\n\n\tprivate available = false;\n\tprivate inchiPath = execLocation;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tif (!this.inchiPath)\n\t\t{\n\t\t\tthis.inchiPath = getGlobal('INCHI_EXEC');\n\t\t}\n\n\t\tif (this.inchiPath)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfs.accessSync(this.inchiPath, fs.constants.X_OK);\n\t\t\t\tthis.available = true;\n\t\t\t}\n\t\t\tcatch (ex) {} // not available\n\t\t}\n\t}\n\n\t// specify where the executable file is (overrides the global option)\n\tpublic static hasExecutable():boolean\n\t{\n\t\treturn !!execLocation;\n\t}\n\tpublic static setExecutable(exec:string):void\n\t{\n\t\texecLocation = exec;\n\t}\n\n\t// returns true if we have reason to believe the InChI executable can be run on demand\n\tpublic static isAvailable():boolean\n\t{\n\t\tif (this.nativeMolfileToInChI != null) return true;\n\t\tif (!inchi) inchi = new InChI();\n\t\treturn inchi.available;\n\t}\n\n\t// converts a molecule to an InChI string, if possible; should check the availability first, for graceful\n\t// rejection; failure results in an exception; note that it is executed synchronously: if the executable takes\n\t// a long time to run, this will be a problem for the UI; the return value is [InChI, InChIKey]\n\tpublic async generate(mol:Molecule):Promise<InChIResult>\n\t{\n\t\tmol = mol.clone();\n\t\tMolUtil.expandAbbrevs(mol, true);\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (mol.bondOrder(n) < 1 || mol.bondOrder(n) > 3) mol.setBondOrder(n, 1);\n\n\t\tlet writer = new MDLMOLWriter(mol);\n\t\twriter.enhancedFields = false;\n\t\tlet mdlmol = writer.write();\n\n\t\tif (InChI.nativeMolfileToInChI != null)\n\t\t{\n\t\t\tlet inchi = await InChI.nativeMolfileToInChI(mdlmol, '-AuxNone -NoLabels');\n\t\t\treturn {inchi: inchi, inchiKey: null}; // NOTE: this version doesn't provide a key; address this in the future\n\t\t}\n\n\t\tif (!inchi) inchi = new InChI();\n\t\tif (!inchi.available) throw 'InChI executable is not available.';\n\n\t\tconst proc = require('child_process');\n\n\t\tlet cmd = inchi.inchiPath.replace(/ /g, '\\\\\\ '); // very crude escaping of spaces\n\t\tlet result = proc.spawnSync(cmd, ['-STDIO', '-AuxNone', '-NoLabels', '-Key'], {input: mdlmol});\n\t\tlet raw = result.stdout.toString(), bits = raw.split('\\n');\n\n\t\tif (bits.length < 2 || !bits[0].startsWith('InChI='))\n\t\t{\n\t\t\tconsole.log('InChI command returned result:\\n' + raw);\n\t\t\tconsole.log('Molecule:\\n' + mol);\n\t\t\tconsole.log('MDL Molfile:\\n' + mdlmol);\n\t\t\tthrow 'Invalid returned by InChI generator: ' + raw;\n\t\t}\n\t\treturn {inchi: bits[0], inchiKey: bits[1]};\n\t}\n}\n\n","import { clone } from '../util/util';\nexport class RenderPolicy {\n    constructor(data) {\n        if (!data) {\n            data =\n                {\n                    name: 'default',\n                    pointScale: 20,\n                    resolutionDPI: 100,\n                    fontSize: 0.65,\n                    lineSize: 0.075,\n                    bondSep: 0.2,\n                    defaultPadding: 0.2,\n                    foreground: 0x000000,\n                    background: 0xFFFFFF,\n                    atomCols: new Array(112)\n                };\n            for (let n = 0; n <= 111; n++)\n                data.atomCols[n] = 0x000000;\n            this.data = data;\n        }\n        else {\n            this.data = clone(data);\n        }\n    }\n    clone() { return new RenderPolicy(this.data); }\n    static defaultBlackOnWhite(pixPerAng) {\n        let policy = new RenderPolicy();\n        if (pixPerAng)\n            policy.data.pointScale = pixPerAng;\n        return policy;\n    }\n    static defaultWhiteOnBlack(pixPerAng) {\n        let policy = new RenderPolicy();\n        if (pixPerAng)\n            policy.data.pointScale = pixPerAng;\n        policy.data.foreground = 0xFFFFFF;\n        policy.data.background = 0x000000;\n        for (let n = 0; n <= 111; n++)\n            policy.data.atomCols[n] = 0xFFFFFF;\n        return policy;\n    }\n    static defaultColourOnWhite(pixPerAng) {\n        let policy = RenderPolicy.defaultBlackOnWhite(pixPerAng);\n        policy.data.atomCols[0] = 0x404040;\n        policy.data.atomCols[1] = 0x808080;\n        policy.data.atomCols[6] = 0x000000;\n        policy.data.atomCols[7] = 0x0000FF;\n        policy.data.atomCols[8] = 0xFF0000;\n        policy.data.atomCols[9] = 0xFF8080;\n        policy.data.atomCols[15] = 0xFF8000;\n        policy.data.atomCols[16] = 0x808000;\n        policy.data.atomCols[17] = 0x00C000;\n        policy.data.atomCols[35] = 0xC04000;\n        return policy;\n    }\n    static defaultColourOnBlack(pixPerAng) {\n        let policy = RenderPolicy.defaultWhiteOnBlack(pixPerAng);\n        policy.data.atomCols[0] = 0xA0A0A0;\n        policy.data.atomCols[1] = 0x808080;\n        policy.data.atomCols[6] = 0xFFFFFF;\n        policy.data.atomCols[7] = 0x4040FF;\n        policy.data.atomCols[8] = 0xFF4040;\n        policy.data.atomCols[9] = 0xFF8080;\n        policy.data.atomCols[15] = 0xFF8000;\n        policy.data.atomCols[16] = 0xFFFF00;\n        policy.data.atomCols[17] = 0x40FF40;\n        policy.data.atomCols[35] = 0xFF8040;\n        return policy;\n    }\n    static defaultPrintedPublication() {\n        let policy = RenderPolicy.defaultBlackOnWhite(9.6);\n        policy.data.resolutionDPI = 600;\n        policy.data.fontSize = 0.80;\n        policy.data.bondSep = 0.27;\n        policy.data.lineSize = 0.0625;\n        return policy;\n    }\n}\nexport class RenderEffects {\n    constructor() {\n        this.colAtom = {};\n        this.colBond = {};\n        this.dottedRectOutline = {};\n        this.dottedBondCross = {};\n        this.hideAtoms = new Set();\n        this.hideBonds = new Set();\n        this.atomFrameDotSz = [];\n        this.atomFrameCol = [];\n        this.atomCircleSz = [];\n        this.atomCircleCol = [];\n        this.atomDecoText = [];\n        this.atomDecoCol = [];\n        this.atomDecoSize = [];\n        this.bondDecoText = [];\n        this.bondDecoCol = [];\n        this.bondDecoSize = [];\n        this.overlapAtoms = [];\n    }\n}\nexport var RenderMnemonicType;\n(function (RenderMnemonicType) {\n    RenderMnemonicType[\"Atom\"] = \"A\";\n    RenderMnemonicType[\"Bond\"] = \"B\";\n    RenderMnemonicType[\"Artifact\"] = \"R\";\n    RenderMnemonicType[\"Effect\"] = \"E\";\n})(RenderMnemonicType || (RenderMnemonicType = {}));\nexport class RenderMnemonics {\n    constructor(encoded) {\n        this.items = [];\n        let lines = (encoded || '').split('&');\n        for (let line of lines) {\n            let bits = line.split('|');\n            if (bits.length != 3)\n                continue;\n            let item = {\n                type: bits[0],\n                details: bits[1],\n                coords: bits[2].split(',').map((str) => parseFloat(str)),\n            };\n            this.items.push(item);\n        }\n    }\n    append(type, details, coords) {\n        for (let n = details.length - 1; n >= 0; n--)\n            if (details[n] == '|' || details[n] == '&')\n                details = details.substring(0, n) + details.substring(n + 1);\n        this.items.push({ type, details, coords });\n    }\n    serialise() {\n        var _a;\n        let lines = [];\n        for (let item of this.items) {\n            let coords = ((_a = item.coords) !== null && _a !== void 0 ? _a : []).map((coord) => coord.toFixed(1)).join(',');\n            lines.push(`${item.type}|${item.details}|${coords}`);\n        }\n        return lines.join('&');\n    }\n    packWithCoords() { return this.serialise(); }\n    packWithoutCoords() {\n        return this.items.map((item) => `${item.type}|${item.details}`).join('&');\n    }\n}\n//# sourceMappingURL=Rendering.js.map","import { PseudoEmbedding } from '../mol/PseudoEmbedding';\nimport { BondArtifact } from '../mol/BondArtifact';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { Molecule } from '../mol/Molecule';\nimport { PolymerBlock, PolymerBlockConnectivity } from '../mol/PolymerBlock';\nimport { QueryUtil } from '../mol/QueryUtil';\nimport { FitRotatedEllipse } from '../util/FitRotatedEllipse';\nimport { Box, GeomUtil, Line, Oval, QuickHull } from '../util/Geom';\nimport { angleDiff, clone, DEGRAD, invZ, norm2_xy, norm_xy, RADDEG, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { FontData } from './FontData';\nimport { RenderEffects } from './Rendering';\nexport var BLineType;\n(function (BLineType) {\n    BLineType[BLineType[\"Normal\"] = 1] = \"Normal\";\n    BLineType[BLineType[\"Inclined\"] = 2] = \"Inclined\";\n    BLineType[BLineType[\"Declined\"] = 3] = \"Declined\";\n    BLineType[BLineType[\"Unknown\"] = 4] = \"Unknown\";\n    BLineType[BLineType[\"Dotted\"] = 5] = \"Dotted\";\n    BLineType[BLineType[\"DotDir\"] = 6] = \"DotDir\";\n    BLineType[BLineType[\"IncDouble\"] = 7] = \"IncDouble\";\n    BLineType[BLineType[\"IncTriple\"] = 8] = \"IncTriple\";\n    BLineType[BLineType[\"IncQuadruple\"] = 9] = \"IncQuadruple\";\n})(BLineType || (BLineType = {}));\nconst MINBOND_LINE = 0.25;\nconst MINBOND_EXOTIC = 0.5;\nclass ArrangeMolecule {\n    static guestimateSize(mol, policy, maxW, maxH) {\n        let box = mol.boundary();\n        let minX = box.minX(), minY = box.minY(), maxX = box.maxX(), maxY = box.maxY();\n        let fontSize = policy.data.fontSize * this.FONT_CORRECT;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomExplicit(n)) {\n                let numsym = 0;\n                for (let ch of mol.atomElement(n))\n                    if (!'|{}^'.includes(ch))\n                        numsym++;\n                let plusH = mol.atomHydrogens(n) > 0 ? 1 : 0;\n                const aw = 0.5 * 0.7 * fontSize * (numsym + plusH);\n                const ah = 0.75 * fontSize * (1 + 0.2 * plusH);\n                const ax = mol.atomX(n), ay = mol.atomY(n);\n                minX = Math.min(minX, ax - aw);\n                maxX = Math.max(maxX, ax + aw);\n                minY = Math.min(minY, ay - ah);\n                maxY = Math.max(maxY, ay + ah);\n            }\n        let w = Math.max(1, (maxX - minX)) * policy.data.pointScale;\n        let h = Math.max(1, (maxY - minY)) * policy.data.pointScale;\n        if (maxW > 0 && w > maxW) {\n            h *= maxW / w;\n            w = maxW;\n        }\n        if (maxH > 0 && h > maxH) {\n            w *= maxH / h;\n            h = maxH;\n        }\n        return [w, h];\n    }\n    constructor(mol, measure, policy, effects = new RenderEffects()) {\n        this.mol = mol;\n        this.measure = measure;\n        this.policy = policy;\n        this.effects = effects;\n        this.points = [];\n        this.lines = [];\n        this.rings = [];\n        this.paths = [];\n        this.space = [];\n        this.unsplitLines = null;\n        this.wantArtifacts = true;\n        this.wantCrossings = true;\n        this.artifacts = null;\n        this.bondOrder = [];\n        this.atomCharge = [];\n        this.atomUnpaired = [];\n        this.artifactCharge = new Map();\n        this.artifactUnpaired = new Map();\n        this.artifactFract = new Map();\n    }\n    getMolecule() { return this.mol; }\n    getMeasure() { return this.measure; }\n    getPolicy() { return this.policy; }\n    getEffects() { return this.effects; }\n    getScale() { return this.scale; }\n    setWantArtifacts(want) { this.wantArtifacts = want; }\n    getArtifacts() { return this.artifacts; }\n    setArtifacts(artifacts) { this.artifacts = artifacts; }\n    setWantCrossings(want) { this.wantCrossings = want; }\n    arrange() {\n        const { mol, measure, policy, effects } = this;\n        this.scale = measure.scale();\n        this.bondSepPix = policy.data.bondSep * measure.scale();\n        this.lineSizePix = policy.data.lineSize * measure.scale();\n        this.fontSizePix = policy.data.fontSize * measure.scale() * ArrangeMolecule.FONT_CORRECT;\n        this.ymul = measure.yIsUp() ? -1 : 1;\n        let artmask = null;\n        if (this.wantArtifacts && this.artifacts == null) {\n            this.artifacts = new BondArtifact(mol);\n            artmask = Vec.booleanArray(false, mol.numAtoms);\n            for (let path of this.artifacts.getResPaths())\n                for (let a of path.atoms)\n                    artmask[a - 1] = true;\n            for (let ring of this.artifacts.getResRings())\n                for (let a of ring.atoms)\n                    artmask[a - 1] = true;\n            for (let arene of this.artifacts.getArenes()) {\n                artmask[arene.centre - 1] = true;\n                for (let a of arene.atoms)\n                    artmask[a - 1] = true;\n            }\n        }\n        this.setupBondOrders();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            if (mol.atomElement(n).length > 2 && mol.atomHydrogens(n) == 0) {\n                this.points.push(null);\n                this.space.push(null);\n                continue;\n            }\n            let a = {\n                anum: n,\n                text: mol.atomExplicit(n) || CoordUtil.atomIsWeirdLinear(mol, n) ? mol.atomElement(n) : null,\n                fsz: this.fontSizePix,\n                col: this.policy.data.atomCols[mol.atomicNumber(n)],\n                oval: new Oval(this.measure.angToX(mol.atomX(n)), this.measure.angToY(mol.atomY(n)), 0, 0)\n            };\n            let overCol = this.effects.colAtom[n];\n            if (overCol)\n                a.col = overCol;\n            if (artmask && artmask[n - 1] && mol.atomElement(n) == 'C')\n                a.text = null;\n            if (a.text != null) {\n                let wad = this.measure.measureText(a.text, a.fsz);\n                const PADDING = 1.1;\n                a.oval.rw = 0.5 * wad[0] * PADDING;\n                a.oval.rh = 0.5 * wad[1] * PADDING;\n            }\n            this.points.push(a);\n            this.space.push(this.computeSpacePoint(a));\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (this.points[n - 1] == null)\n                this.processLabel(n);\n        let bdbl = Vec.booleanArray(false, mol.numBonds);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let bt = mol.bondType(n), bo = this.bondOrder[n - 1];\n            if (bo < 0)\n                continue;\n            let col = this.effects.colBond[n];\n            if (!col)\n                col = this.policy.data.foreground;\n            bdbl[n - 1] = bo == 2 && (bt == Molecule.BONDTYPE_NORMAL || bt == Molecule.BONDTYPE_UNKNOWN);\n            let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n            let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n            if (Math.abs(x2 - x1) <= 1 && Math.abs(y2 - y1) <= 1) {\n                bdbl[n - 1] = false;\n                continue;\n            }\n            if (bdbl[n - 1])\n                continue;\n            let minDist = (bo == 1 && bt == Molecule.BONDTYPE_NORMAL ? MINBOND_LINE : MINBOND_EXOTIC) * measure.scale();\n            let xy1 = this.shrinkBond(x1, y1, x2, y2, this.backOffAtom(bfr, x1, y1, x2, y2, minDist));\n            let xy2 = this.shrinkBond(x2, y2, x1, y1, this.backOffAtom(bto, x2, y2, x1, y1, minDist));\n            this.ensureMinimumBondLength(xy1, xy2, x1, y1, x2, y2, minDist);\n            let sz = this.lineSizePix, head = 0;\n            let qbonds = QueryUtil.queryBondOrders(mol, n);\n            if (Vec.notBlank(qbonds)) {\n                Vec.sort(qbonds);\n                if (qbonds[0] == -1) {\n                    qbonds.splice(0, 1);\n                    qbonds.push(-1);\n                }\n                let qtxt = Vec.equals(qbonds, [0, 1, 2, 3, -1]) ? '?' : qbonds.map((o) => o == -1 ? 'A' : o.toString()).join('');\n                let oxy = this.orthogonalDelta(xy1[0], xy1[1], xy2[0], xy2[1], 1.3 * this.bondSepPix);\n                let v = -0.5;\n                for (let i = 0; i < 2; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    let b = {\n                        bnum: n,\n                        bfr,\n                        bto,\n                        type: BLineType.Dotted,\n                        line: new Line(lx1, ly1, lx2, ly2),\n                        size: 0.5 * sz,\n                        head,\n                        col: (col & 0xFFFFFF) | 0x80000000,\n                    };\n                    this.lines.push(b);\n                    this.space.push(this.computeSpaceLine(b));\n                }\n                let rotation = Math.atan2(xy2[1] - xy1[1], xy2[0] - xy1[0]) * RADDEG;\n                if (rotation < -90 || rotation > 90)\n                    rotation += 180;\n                let a = {\n                    anum: 0,\n                    text: qtxt,\n                    fsz: 0.35 * this.fontSizePix,\n                    col,\n                    oval: new Oval(0.5 * (xy1[0] + xy2[0]), 0.5 * (xy1[1] + xy2[1]), 0, 0),\n                    rotation\n                };\n                this.points.push(a);\n                this.space.push(this.computeSpacePoint(a));\n                continue;\n            }\n            let ltype = BLineType.Normal;\n            if (bo == 1 && bt == Molecule.BONDTYPE_INCLINED) {\n                ltype = BLineType.Inclined;\n                head = 0.15 * measure.scale();\n            }\n            else if (bo == 1 && bt == Molecule.BONDTYPE_DECLINED) {\n                ltype = BLineType.Declined;\n                head = 0.15 * measure.scale();\n            }\n            else if (bt == Molecule.BONDTYPE_UNKNOWN) {\n                ltype = BLineType.Unknown;\n                head = 0.2 * measure.scale();\n            }\n            else if (bo == 0) {\n                if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                    ltype = BLineType.DotDir;\n                else\n                    ltype = BLineType.Dotted;\n            }\n            else if ((bo == 2 || bo == 3 || bo == 4) && (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)) {\n                ltype = bo == 2 ? BLineType.IncDouble : bo == 3 ? BLineType.IncTriple : BLineType.IncQuadruple;\n                head = (bo == 2 ? 0.20 : 0.25) * measure.scale();\n            }\n            if (bo == 0) {\n                let dx = xy2[0] - xy1[0], dy = xy2[1] - xy1[1];\n                let d = norm_xy(dx, dy), invD = 1 / d;\n                let ox = 0.5 * dx * invD * this.bondSepPix, oy = 0.5 * dy * invD * this.bondSepPix;\n                if (mol.atomAdjCount(bfr) > 1) {\n                    xy1[0] += ox;\n                    xy1[1] += oy;\n                }\n                if (mol.atomAdjCount(bto) > 1) {\n                    xy2[0] -= ox;\n                    xy2[1] -= oy;\n                }\n            }\n            if (bo != 1 && bt == Molecule.BONDTYPE_DECLINED)\n                [xy1, xy2] = [xy2, xy1];\n            if (bo > 1 && (bt == Molecule.BONDTYPE_NORMAL || bt == Molecule.BONDTYPE_UNKNOWN)) {\n                let oxy = this.orthogonalDelta(xy1[0], xy1[1], xy2[0], xy2[1], this.bondSepPix);\n                let ext1 = 1, ext2 = 1;\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    ext1 = Math.min(ext1, this.backOffAtom(bfr, lx1, ly1, lx2, ly2, minDist));\n                }\n                xy1 = this.shrinkBond(xy1[0], xy1[1], xy2[0], xy2[1], ext1);\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    ext2 = Math.min(ext2, this.backOffAtom(bto, lx2, ly2, lx1, ly1, minDist));\n                }\n                xy2 = this.shrinkBond(xy2[0], xy2[1], xy1[0], xy1[1], ext2);\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    let b = {\n                        bnum: n,\n                        bfr,\n                        bto,\n                        type: ltype,\n                        line: new Line(lx1, ly1, lx2, ly2),\n                        size: sz,\n                        head,\n                        col\n                    };\n                    this.lines.push(b);\n                    this.space.push(this.computeSpaceLine(b));\n                }\n            }\n            else {\n                let b = {\n                    bnum: n,\n                    bfr,\n                    bto,\n                    type: ltype,\n                    line: new Line(xy1[0], xy1[1], xy2[0], xy2[1]),\n                    size: sz,\n                    head,\n                    col\n                };\n                this.lines.push(b);\n                this.space.push(this.computeSpaceLine(b));\n            }\n        }\n        let rings = this.orderedRingList();\n        for (let i = 0; i < rings.length; i++) {\n            for (let j = 0; j < rings[i].length; j++) {\n                let k = mol.findBond(rings[i][j], rings[i][j < rings[i].length - 1 ? j + 1 : 0]);\n                if (bdbl[k - 1]) {\n                    this.processDoubleBond(k, rings[i]);\n                    bdbl[k - 1] = false;\n                }\n            }\n        }\n        for (let i = 1; i <= mol.numBonds; i++)\n            if (bdbl[i - 1])\n                this.processDoubleBond(i, this.priorityDoubleSubstit(i));\n        let hcount = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            hcount[n - 1] = this.points[n - 1].text == null ? 0 : mol.atomHydrogens(n);\n        for (let n = 0; n < mol.numAtoms; n++)\n            if (hcount[n] > 0 && this.placeHydrogen(n, hcount[n], true))\n                hcount[n] = 0;\n        for (let n = 0; n < mol.numAtoms; n++)\n            if (hcount[n] > 0)\n                this.placeHydrogen(n, hcount[n], false);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) {\n                let isostr = mol.atomIsotope(n).toString();\n                let col = policy.data.atomCols[mol.atomicNumber(n)];\n                this.placeAdjunct(n, isostr, this.fontSizePix * 0.6, col, 150 * DEGRAD);\n            }\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let str = '';\n            let chg = this.atomCharge[n - 1];\n            if (chg == -1)\n                str = '-';\n            else if (chg == 1)\n                str = '+';\n            else if (chg < -1)\n                str = Math.abs(chg) + '-';\n            else if (chg > 1)\n                str = chg + '+';\n            for (let i = this.atomUnpaired[n - 1]; i > 0; i--)\n                str += '.';\n            if (str.length == 0)\n                continue;\n            let col = policy.data.atomCols[mol.atomicNumber(n)];\n            this.placeAdjunct(n, str, str.length == 1 ? 0.8 * this.fontSizePix : 0.6 * this.fontSizePix, col, 30 * DEGRAD);\n        }\n        for (let n = 0; n < effects.atomDecoText.length; n++) {\n            let txt = effects.atomDecoText[n];\n            if (!txt)\n                continue;\n            this.annotateAtom(n + 1, txt, effects.atomDecoCol[n], effects.atomDecoSize[n] * this.scale * ArrangeMolecule.FONT_CORRECT);\n        }\n        for (let n = 0; n < effects.bondDecoText.length; n++) {\n            let txt = effects.bondDecoText[n];\n            if (!txt)\n                continue;\n            this.annotateBond(n + 1, txt, effects.bondDecoCol[n], effects.bondDecoSize[n] * this.scale * ArrangeMolecule.FONT_CORRECT);\n        }\n        for (let n = 0; n < Math.min(effects.atomCircleSz.length, mol.numAtoms); n++)\n            if (effects.atomCircleSz[n] > 0) {\n                let dw = effects.atomCircleSz[n] * this.scale;\n                let a = this.points[n];\n                let box = new Box(a.oval.cx - dw, a.oval.cy - dw, 2 * dw, 2 * dw);\n                let spc = {\n                    anum: 0,\n                    bnum: 0,\n                    box,\n                    px: [box.minX(), box.maxX(), box.maxX(), box.minX()],\n                    py: [box.minY(), box.minY(), box.maxY(), box.maxY()]\n                };\n                this.space.push(spc);\n            }\n        if (this.artifacts != null) {\n            for (let path of this.artifacts.getResPaths()) {\n                this.createCurvedPath(path.atoms, this.artifactFract.get(path), 0);\n                this.delocalisedAnnotation(path.atoms, this.artifactCharge.get(path), this.artifactUnpaired.get(path));\n            }\n            for (let ring of this.artifacts.getResRings()) {\n                this.createCircularRing(ring.atoms);\n                this.delocalisedAnnotation(ring.atoms, this.artifactCharge.get(ring), this.artifactUnpaired.get(ring));\n            }\n            for (let arene of this.artifacts.getArenes()) {\n                let isRing = arene.atoms.length > 2;\n                if (isRing)\n                    for (let n = 0; n < arene.atoms.length; n++) {\n                        let nn = n < arene.atoms.length - 1 ? n + 1 : 0;\n                        if (mol.findBond(arene.atoms[n], arene.atoms[nn]) == 0) {\n                            isRing = false;\n                            break;\n                        }\n                    }\n                let alkeneLike = arene.atoms.length == 2;\n                this.createBondCentroid(arene.centre, arene.atoms);\n                if (!alkeneLike) {\n                    if (isRing)\n                        this.createCircularRing(arene.atoms);\n                    else\n                        this.createCurvedPath(arene.atoms, false, arene.centre);\n                }\n                this.delocalisedAnnotation(arene.atoms, this.artifactCharge.get(arene), this.artifactUnpaired.get(arene));\n            }\n        }\n        if (this.wantCrossings) {\n            let emb = new PseudoEmbedding(mol);\n            emb.calculateCrossings();\n            for (let cross of emb.crossings) {\n                if (cross.higher == 1)\n                    this.resolveLineCrossings(cross.bond1, cross.bond2);\n                else if (cross.higher == 2)\n                    this.resolveLineCrossings(cross.bond2, cross.bond1);\n            }\n        }\n        let polymers = new PolymerBlock(mol);\n        for (let id of polymers.getIDList())\n            this.processPolymerUnit(polymers.getUnit(id), polymers.getUnits());\n    }\n    numPoints() { return this.points.length; }\n    getPoint(idx) { return this.points[idx]; }\n    getPoints() { return this.points; }\n    numLines() { return this.lines.length; }\n    getLine(idx) { return this.lines[idx]; }\n    getLines() { return this.lines; }\n    getUnsplitLines() { return this.unsplitLines; }\n    numRings() { return this.rings.length; }\n    getRing(idx) { return this.rings[idx]; }\n    getRings() { return this.rings; }\n    numPaths() { return this.paths.length; }\n    getPath(idx) { return this.paths[idx]; }\n    getPaths() { return this.paths; }\n    numSpace() { return this.space.length; }\n    getSpace(idx) { return this.space[idx]; }\n    getSpaces() { return this.space; }\n    offsetEverything(dx, dy) {\n        var _a;\n        for (let a of this.points)\n            a.oval.offsetBy(dx, dy);\n        for (let b of [...this.lines, ...((_a = this.unsplitLines) !== null && _a !== void 0 ? _a : [])])\n            b.line.offsetBy(dx, dy);\n        for (let r of this.rings) {\n            r.cx += dx;\n            r.cy += dy;\n        }\n        for (let p of this.paths) {\n            Vec.addTo(p.px, dx);\n            Vec.addTo(p.py, dy);\n        }\n        for (let spc of this.space) {\n            spc.box.offsetBy(dx, dy);\n            Vec.addTo(spc.px, dx);\n            Vec.addTo(spc.py, dy);\n        }\n    }\n    offsetOrigin() {\n        let bounds = this.determineBoundary();\n        if (bounds[0] != 0 || bounds[1] != 0)\n            this.offsetEverything(-bounds[0], -bounds[1]);\n    }\n    scaleEverything(scaleBy) {\n        var _a;\n        if (scaleBy == 1)\n            return;\n        this.scale *= scaleBy;\n        for (let a of this.points) {\n            a.oval.scaleBy(scaleBy);\n            a.fsz *= scaleBy;\n        }\n        for (let b of [...this.lines, ...((_a = this.unsplitLines) !== null && _a !== void 0 ? _a : [])]) {\n            b.line.scaleBy(scaleBy);\n            b.size *= scaleBy;\n            b.head *= scaleBy;\n        }\n        for (let r of this.rings) {\n            r.cx *= scaleBy;\n            r.cy *= scaleBy;\n            r.rw *= scaleBy;\n            r.rh *= scaleBy;\n            r.size *= scaleBy;\n        }\n        for (let p of this.paths) {\n            Vec.mulBy(p.px, scaleBy);\n            Vec.mulBy(p.py, scaleBy);\n            p.size *= scaleBy;\n        }\n        for (let spc of this.space) {\n            spc.box.scaleBy(scaleBy);\n            Vec.mulBy(spc.px, scaleBy);\n            Vec.mulBy(spc.py, scaleBy);\n        }\n    }\n    determineBoundary(padding) {\n        if (padding == null)\n            padding = 0;\n        if (this.space.length == 0)\n            return [0, 0, 2 * padding, 2 * padding];\n        let bounds = Vec.numberArray(0, 4);\n        let spc = this.space[0];\n        bounds[0] = spc.box.x;\n        bounds[1] = spc.box.y;\n        bounds[2] = spc.box.x + spc.box.w;\n        bounds[3] = spc.box.y + spc.box.h;\n        for (let n = this.space.length - 1; n > 0; n--) {\n            spc = this.space[n];\n            bounds[0] = Math.min(bounds[0], spc.box.x);\n            bounds[1] = Math.min(bounds[1], spc.box.y);\n            bounds[2] = Math.max(bounds[2], spc.box.x + spc.box.w);\n            bounds[3] = Math.max(bounds[3], spc.box.y + spc.box.h);\n        }\n        return bounds;\n    }\n    determineBoundaryBox() {\n        let [x1, y1, x2, y2] = this.determineBoundary();\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    squeezeInto(x, y, w, h, padding) {\n        if (padding != null && padding > 0) {\n            x += padding;\n            y += padding;\n            w -= 2 * padding;\n            h -= 2 * padding;\n        }\n        let bounds = this.determineBoundary(0);\n        let bw = bounds[2] - bounds[0], bh = bounds[3] - bounds[1];\n        if (bw > w || bh > h) {\n            let downScale = 1;\n            if (bw > w)\n                downScale = w / bw;\n            if (bh > h)\n                downScale = Math.min(downScale, h / bh);\n            this.scaleEverything(downScale);\n            Vec.mulBy(bounds, downScale);\n        }\n        this.offsetEverything(x - bounds[0] + 0.5 * (w - bounds[2] + bounds[0]), y - bounds[1] + 0.5 * (h - bounds[3] + bounds[1]));\n    }\n    limitBounds(w, h) {\n        let bounds = this.determineBoundary(0);\n        if (bounds[0] == bounds[2] && bounds[1] == bounds[3])\n            return;\n        let scale = Math.min(1, Math.min(w / (bounds[2] - bounds[0]), h / (bounds[3] - bounds[1])));\n        this.offsetEverything(-bounds[0], -bounds[1]);\n        this.scaleEverything(scale);\n    }\n    monochromate(col) {\n        for (let a of this.points)\n            a.col = col;\n        for (let b of this.lines)\n            b.col = col;\n    }\n    spatialCongestion(x, y, thresh) {\n        if (thresh == null)\n            thresh = 0.001;\n        let congest = 0;\n        for (let n = 0; n < this.points.length; n++) {\n            let a = this.points[n];\n            if (a == null)\n                continue;\n            let dx = a.oval.cx - x, dy = a.oval.cy - y;\n            congest += 1 / (dx * dx + dy * dy + thresh);\n        }\n        return congest;\n    }\n    clone() {\n        let dup = new ArrangeMolecule(this.mol, this.measure, this.policy, this.effects);\n        dup.scale = this.scale;\n        dup.bondSepPix = this.bondSepPix;\n        dup.lineSizePix = this.lineSizePix;\n        dup.fontSizePix = this.fontSizePix;\n        dup.ymul = this.ymul;\n        for (let a of this.points)\n            dup.points.push(clone(a));\n        for (let b of this.lines)\n            dup.lines.push(clone(b));\n        for (let s of this.space)\n            dup.space.push(clone(s));\n        return dup;\n    }\n    setupBondOrders() {\n        const mol = this.mol;\n        for (let n = 0; n < mol.numBonds; n++)\n            this.bondOrder[n] = mol.bondOrder(n + 1);\n        for (let n = 0; n < mol.numAtoms; n++) {\n            this.atomCharge[n] = mol.atomCharge(n + 1);\n            this.atomUnpaired[n] = mol.atomUnpaired(n + 1);\n        }\n        let delocalise = (obj, atoms) => {\n            let charge = 0, unpaired = 0;\n            for (let a of atoms) {\n                charge += this.atomCharge[a - 1];\n                unpaired += this.atomUnpaired[a - 1];\n                this.atomCharge[a - 1] = this.atomUnpaired[a - 1] = 0;\n            }\n            this.artifactCharge.set(obj, charge);\n            this.artifactUnpaired.set(obj, unpaired);\n            for (let a1 of atoms)\n                for (let a2 of mol.atomAdjList(a1))\n                    if (!atoms.includes(a2)) {\n                        let b = mol.findBond(a1, a2);\n                        if (this.bondOrder[b - 1] >= 0)\n                            this.bondOrder[b - 1] = 1;\n                    }\n        };\n        if (this.artifacts == null)\n            return;\n        for (let path of this.artifacts.getResPaths()) {\n            let charge = 0, unpaired = 0, orders = 0;\n            for (let n = 0; n < path.atoms.length; n++) {\n                charge += mol.atomCharge(path.atoms[n]);\n                unpaired += mol.atomUnpaired(path.atoms[n]);\n                let b = mol.findBond(path.atoms[n], path.atoms[n < path.atoms.length - 1 ? n + 1 : 0]);\n                if (b > 0)\n                    orders += mol.bondOrder(b);\n            }\n            let fractional = (2 * orders - charge + unpaired) / path.atoms.length < 1;\n            this.artifactFract.set(path, fractional);\n            for (let n = 0; n < path.atoms.length - 1; n++) {\n                let b = mol.findBond(path.atoms[n], path.atoms[n + 1]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = fractional ? -1 : 1;\n            }\n            delocalise(path, path.atoms);\n        }\n        for (let ring of this.artifacts.getResRings()) {\n            for (let n = 0; n < ring.atoms.length; n++) {\n                let b = mol.findBond(ring.atoms[n], ring.atoms[n < ring.atoms.length - 1 ? n + 1 : 0]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = 1;\n            }\n            delocalise(ring, ring.atoms);\n        }\n        for (let arene of this.artifacts.getArenes()) {\n            let alkeneLike = arene.atoms.length == 2;\n            for (let n = 0; n < arene.atoms.length; n++) {\n                if (!alkeneLike) {\n                    let b = mol.findBond(arene.atoms[n], arene.atoms[n < arene.atoms.length - 1 ? n + 1 : 0]);\n                    if (b > 0)\n                        this.bondOrder[b - 1] = 1;\n                }\n                let b = mol.findBond(arene.centre, arene.atoms[n]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = -1;\n            }\n            delocalise(arene, arene.atoms);\n        }\n    }\n    placeAdjunct(atom, str, fsz, col, angdir) {\n        let wad = this.measure.measureText(str, fsz);\n        let a = this.points[atom - 1];\n        let cx = a.oval.cx, cy = a.oval.cy, rw = 0.55 * wad[0], rh = 0.55 * wad[1];\n        if (str == '..') {\n            let zeroBonds = this.mol.atomAdjBonds(atom).filter((b) => this.mol.bondOrder(b) == 0);\n            if (zeroBonds.length == 1) {\n                let zpt = this.getPoint(this.mol.bondOther(zeroBonds[0], atom) - 1);\n                let dx = zpt.oval.cx - cx, dy = zpt.oval.cy - cy, inv = 1 / norm_xy(dx, dy);\n                let r = fsz * 0.15;\n                let ox = dy * inv * 2.5 * r, oy = -dx * inv * 2.5 * r;\n                let ext = 1.2 * (rw + rh) * inv;\n                [dx, dy] = [dx * ext, dy * ext];\n                this.points.push({ anum: 0, text: '.', fsz, col, oval: new Oval(cx + dx + ox, cy + dy + oy, r, r) });\n                this.points.push({ anum: 0, text: '.', fsz, col, oval: new Oval(cx + dx - ox, cy + dy - oy, r, r) });\n                return;\n            }\n        }\n        let bestScore = 0, bestDX = 0, bestDY = 0;\n        let px = Vec.numberArray(0, 4), py = Vec.numberArray(0, 4);\n        let angThresh = 10;\n        let shorted = false;\n        for (let ext = 0.5 * (a.oval.rw + a.oval.rh); !shorted && ext < 1.5 * this.measure.scale(); ext += 0.1 * this.measure.scale()) {\n            const DELTA = 5 * DEGRAD;\n            for (let d = 0; !shorted && d < Math.PI - 0.0001; d += DELTA)\n                for (let s = -1; s <= 1; s += 2) {\n                    let dang = d * s + (s > 0 ? DELTA : 0), ang = angdir + dang;\n                    let dx = ext * Math.cos(ang), dy = ext * Math.sin(ang) * -this.ymul;\n                    let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                    px[0] = x1;\n                    py[0] = y1;\n                    px[1] = x2;\n                    py[1] = y1;\n                    px[2] = x2;\n                    py[2] = y2;\n                    px[3] = x1;\n                    py[3] = y2;\n                    let viol = this.countPolyViolations(px, py, null, false);\n                    let score = 10 * viol + Math.abs(dang) + 10 * ext;\n                    let shortCircuit = viol == 0 && Math.abs(dang) < (angThresh + 1) * DEGRAD;\n                    if (bestScore == 0 || shortCircuit || score < bestScore) {\n                        bestScore = score;\n                        bestDX = dx;\n                        bestDY = dy;\n                    }\n                    if (shortCircuit) {\n                        shorted = true;\n                        break;\n                    }\n                }\n            angThresh += 5;\n        }\n        a =\n            {\n                anum: 0,\n                text: str,\n                fsz,\n                col,\n                oval: new Oval(cx + bestDX, cy + bestDY, rw, rh)\n            };\n        this.points.push(a);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(a.oval.cx - rw, a.oval.cy - rh, 2 * rw, 2 * rh),\n            px: [a.oval.cx - rw, a.oval.cx + rw, a.oval.cx + rw, a.oval.cx - rw],\n            py: [a.oval.cy - rh, a.oval.cy - rh, a.oval.cy + rh, a.oval.cy + rh]\n        };\n        this.space.push(spc);\n    }\n    processLabel(anum) {\n        let ax = this.mol.atomX(anum), ay = this.mol.atomY(anum);\n        let left = 0, right = 0;\n        let adj = this.mol.atomAdjList(anum);\n        for (let n = 0; n < adj.length; n++) {\n            let theta = Math.atan2(this.mol.atomY(adj[n]) - ay, this.mol.atomX(adj[n]) - ax) * RADDEG;\n            if (theta >= -15 && theta <= 15)\n                right += 3;\n            else if (theta >= -85 && theta <= 85)\n                right++;\n            else if (theta > 85 && theta < 95) { }\n            else if (theta < -85 && theta > -95) { }\n            else if (theta > 165 || theta < -165)\n                left += 3;\n            else\n                left++;\n        }\n        let label = this.mol.atomElement(anum);\n        let ibar = label.indexOf('|'), ibrace = label.indexOf('{');\n        let side = 0;\n        if (left == 0 && right == 0 && ibar < 0 && ibrace < 0) { }\n        else if (left < right)\n            side = -1;\n        else if (right < left)\n            side = 1;\n        else {\n            let score1 = CoordUtil.congestionPoint(this.mol, ax - 1, ay);\n            let score2 = CoordUtil.congestionPoint(this.mol, ax + 1, ay);\n            if (score1 < 0.5 * score2)\n                side = -1;\n            else\n                side = 1;\n        }\n        let chunks = null;\n        let position = null;\n        let primary = null;\n        let refchunk = 0;\n        if (ibar < 0 && ibrace < 0) {\n            if (side == 0)\n                chunks = [label];\n            else if (side < 0) {\n                chunks = [label.substring(0, label.length - 1), label.substring(label.length - 1)];\n                refchunk = 1;\n            }\n            else\n                chunks = [label.substring(0, 1), label.substring(1)];\n        }\n        else {\n            let bits = [];\n            let bpos = [];\n            let bpri = [];\n            let blocks = label.split('|');\n            if (side < 0)\n                blocks = Vec.reverse(blocks);\n            let buff = '';\n            for (let i = 0; i < blocks.length; i++) {\n                let isPrimary = (side >= 0 && i == 0) || (side < 0 && i == blocks.length - 1);\n                if (side < 0 && refchunk == 0 && i == blocks.length - 1)\n                    refchunk = bits.length;\n                let pos = 0;\n                buff = '';\n                for (let j = 0; j < blocks[i].length; j++) {\n                    let ch = blocks[i].charAt(j);\n                    if (ch == '{' || ch == '}') {\n                        if (buff.length > 0) {\n                            bits.push(buff.toString());\n                            bpos.push(pos);\n                            bpri.push(isPrimary);\n                        }\n                        buff = '';\n                        pos = ch == '{' ? -1 : 0;\n                    }\n                    else if (ch == '^' && pos == -1 && buff.length == 0)\n                        pos = 1;\n                    else\n                        buff += ch;\n                }\n                if (buff.length > 0) {\n                    bits.push(buff.toString());\n                    bpos.push(pos);\n                    bpri.push(isPrimary);\n                }\n            }\n            chunks = bits;\n            position = bpos;\n            primary = bpri;\n            while (refchunk < chunks.length - 1 && position[refchunk] != 0)\n                refchunk++;\n        }\n        let PADDING = 1.1;\n        let SSFRACT = 0.6;\n        let chunkw = Vec.numberArray(0, chunks.length);\n        let tw = 0;\n        for (let n = 0; n < chunks.length; n++) {\n            chunkw[n] = this.measure.measureText(chunks[n], this.fontSizePix)[0];\n            if (position != null && position[n] != 0)\n                chunkw[n] *= SSFRACT;\n            tw += chunkw[n];\n        }\n        let x = this.measure.angToX(ax), y = this.measure.angToY(ay);\n        for (let n = 0; n < refchunk; n++)\n            x -= chunkw[n];\n        x -= 0.5 * chunkw[refchunk];\n        for (let n = 0; n < chunks.length; n++) {\n            let a = {\n                anum: (n == refchunk || (primary != null && primary[n])) ? anum : 0,\n                text: chunks[n],\n                fsz: this.fontSizePix,\n                col: this.policy.data.atomCols[this.mol.atomicNumber(anum)],\n                oval: new Oval(x + 0.5 * chunkw[n], y, 0.5 * chunkw[n] * PADDING, 0.5 * this.fontSizePix * PADDING)\n            };\n            if (position != null && position[n] != 0) {\n                a.fsz *= SSFRACT;\n                if (position[n] < 0)\n                    a.oval.cy += a.fsz * 0.7 * (this.measure.yIsUp() ? -1 : 1);\n                else\n                    a.oval.cy -= a.fsz * 0.3 * (this.measure.yIsUp() ? -1 : 1);\n            }\n            if (n == refchunk) {\n                this.points[anum - 1] = a;\n                this.space[anum - 1] = this.computeSpacePoint(a);\n            }\n            else {\n                this.points.push(a);\n                this.space.push(this.computeSpacePoint(a));\n            }\n            x += chunkw[n];\n        }\n    }\n    backOffAtom(atom, x, y, fx, fy, minDist) {\n        if (x == fx && y == fy)\n            return 1;\n        let dx = x - fx, dy = y - fy, dist = norm_xy(dx, dy), inv = 1.0 / dist;\n        const bump = 0.1 * this.measure.scale();\n        let xbump = x + 2 * bump * dx * inv, ybump = y + 2 * bump * dy * inv;\n        let ext = dist;\n        let active = false;\n        for (let spc of this.space)\n            if (spc.anum == atom) {\n                const sz = spc.px.length;\n                if (sz == 0)\n                    continue;\n                for (let n = 0; n < sz; n++) {\n                    let nn = n < sz - 1 ? n + 1 : 0;\n                    let x1 = spc.px[n], y1 = spc.py[n], x2 = spc.px[nn], y2 = spc.py[nn];\n                    if (!GeomUtil.doLineSegsIntersect(xbump, ybump, fx, fy, x1, y1, x2, y2))\n                        continue;\n                    let xy = GeomUtil.lineIntersect(x, y, fx, fy, x1, y1, x2, y2);\n                    active = true;\n                    ext = Math.min(ext, norm_xy(xy[0] - fx, xy[1] - fy));\n                }\n            }\n        if (active) {\n            ext = Math.max(minDist, ext - bump);\n            return ext / dist;\n        }\n        else\n            return 1;\n    }\n    backOffAtomDelta(atom, x, y, fx, fy, minDist) {\n        let ext = this.backOffAtom(atom, x, y, fx, fy, minDist);\n        if (ext >= 1)\n            return null;\n        ext = 1 - ext;\n        let dx = (fx - x) * ext, dy = (fy - y) * ext;\n        return [norm2_xy(dx, dy), dx, dy];\n    }\n    shrinkBond(x, y, fx, fy, ext) {\n        if (ext == 1)\n            return [x, y];\n        let dx = x - fx, dy = y - fy;\n        return [fx + ext * dx, fy + ext * dy];\n    }\n    ensureMinimumBondLength(xy1, xy2, x1, y1, x2, y2, minDist) {\n        let dx = xy2[0] - xy1[0], dy = xy2[1] - xy1[1];\n        let dsq = norm2_xy(dx, dy);\n        minDist = Math.min(minDist, norm_xy(x2 - x1, y2 - y1));\n        if (dsq >= sqr(minDist - 0.0001))\n            return;\n        let d12 = Math.sqrt(dsq), d1 = norm_xy(xy1[0] - x1, xy1[1] - y1), d2 = norm_xy(x2 - xy2[0], y2 - xy2[1]);\n        let mag = 1 - minDist / d12, invD12 = 1.0 / (d1 + d2), mag1 = d1 * mag * invD12, mag2 = d2 * mag * invD12;\n        xy1[0] -= dx * mag1;\n        xy1[1] -= dy * mag1;\n        xy2[0] += dx * mag2;\n        xy2[1] += dy * mag2;\n    }\n    orderedRingList() {\n        let rings = [];\n        let SIZE_ORDER = [6, 5, 7, 4, 3];\n        for (let i = 0; i < SIZE_ORDER.length; i++) {\n            let nring = this.mol.findRingsOfSize(SIZE_ORDER[i]);\n            for (let j = 0; j < nring.length; j++)\n                rings.push(nring[j]);\n        }\n        let ringsz = rings.length;\n        let ringbusy = Vec.numberArray(0, this.mol.numAtoms);\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[n];\n            for (let i = 0; i < r.length; i++)\n                ringbusy[r[i] - 1]++;\n        }\n        let ringscore = Vec.numberArray(0, ringsz);\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[n];\n            for (let i = 0; i < r.length; i++)\n                ringscore[n] += ringbusy[r[i] - 1];\n        }\n        let ringorder = Vec.idxSort(ringscore);\n        let resbcount = Vec.numberArray(0, ringsz), maxbcount = 0;\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[ringorder[n]];\n            for (let i = 0; i < r.length; i++) {\n                let j = this.mol.findBond(r[i], r[i + 1 < r.length ? i + 1 : 0]);\n                if (this.mol.bondOrder(j) == 2)\n                    resbcount[n]++;\n            }\n            maxbcount = Math.max(maxbcount, resbcount[n]);\n        }\n        let pos = 0, ret = [];\n        for (let sz = maxbcount; sz >= 0; sz--) {\n            for (let n = 0; n < ringsz; n++)\n                if (resbcount[n] == sz)\n                    ret.push(rings[ringorder[n]]);\n        }\n        return ret;\n    }\n    orthogonalDelta(x1, y1, x2, y2, d) {\n        let ox = y1 - y2, oy = x2 - x1, dsq = norm2_xy(ox, oy);\n        let sc = dsq > 0 ? d / Math.sqrt(dsq) : 1;\n        return [ox * sc, oy * sc];\n    }\n    processDoubleBond(idx, priority) {\n        let bfr = this.mol.bondFrom(idx), bto = this.mol.bondTo(idx);\n        let nfr = this.mol.atomAdjList(bfr), nto = this.mol.atomAdjList(bto);\n        let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n        let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n        let oxy = this.orthogonalDelta(x1, y1, x2, y2, this.bondSepPix);\n        const minDist = MINBOND_EXOTIC * this.measure.scale();\n        let dx = x2 - x1, dy = y2 - y1, btheta = Math.atan2(dy, dx);\n        let countFLeft = 0, countFRight = 0, countTLeft = 0, countTRight = 0;\n        let idxFLeft = 0, idxFRight = 0, idxTLeft = 0, idxTRight = 0;\n        let noshift = false;\n        for (let n = 0; n < nfr.length; n++)\n            if (nfr[n] != bto) {\n                let bo = this.mol.bondOrder(this.mol.findBond(bfr, nfr[n]));\n                if (bo == 0)\n                    continue;\n                if (bo > 1) {\n                    noshift = true;\n                    break;\n                }\n                let ispri = false;\n                for (let i = 0; i < (priority == null ? 0 : priority.length); i++)\n                    if (priority[i] == nfr[n])\n                        ispri = true;\n                let theta = angleDiff(Math.atan2(this.points[nfr[n] - 1].oval.cy - y1, this.points[nfr[n] - 1].oval.cx - x1), btheta);\n                if (Math.abs(theta) * RADDEG > 175) {\n                    noshift = true;\n                    break;\n                }\n                if (theta > 0) {\n                    if (ispri)\n                        countFLeft++;\n                    idxFLeft = nfr[n];\n                }\n                else {\n                    if (ispri)\n                        countFRight++;\n                    idxFRight = nfr[n];\n                }\n            }\n        for (let n = 0; n < nto.length; n++)\n            if (nto[n] != bfr) {\n                let bo = this.mol.bondOrder(this.mol.findBond(bto, nto[n]));\n                if (bo == 0)\n                    continue;\n                if (bo > 1) {\n                    noshift = true;\n                    break;\n                }\n                let ispri = false;\n                for (let i = 0; i < (priority == null ? 0 : priority.length); i++)\n                    if (priority[i] == nto[n])\n                        ispri = true;\n                let theta = angleDiff(Math.atan2(this.points[nto[n] - 1].oval.cy - y2, this.points[nto[n] - 1].oval.cx - x2), btheta);\n                if (Math.abs(theta) * RADDEG > 175) {\n                    noshift = true;\n                    break;\n                }\n                if (theta > 0) {\n                    if (ispri)\n                        countTLeft++;\n                    idxTLeft = nto[n];\n                }\n                else {\n                    if (ispri)\n                        countTRight++;\n                    idxTRight = nto[n];\n                }\n            }\n        let side = 0;\n        if (noshift || countFLeft > 1 || countFRight > 1 || countTLeft > 1 || countTRight > 1) { }\n        else if (countFLeft > 0 && countFRight > 0) { }\n        else if (countTLeft > 0 && countTRight > 0) { }\n        else if (countFLeft > 0 || countTLeft > 0)\n            side = 1;\n        else if (countFRight > 0 || countTRight > 0)\n            side = -1;\n        let sz = this.lineSizePix;\n        let ax1 = x1, ay1 = y1, ax2 = x2, ay2 = y2;\n        let bx1 = 0, by1 = 0, bx2 = 0, by2 = 0;\n        if (side == 0) {\n            ax1 = x1 + 0.5 * oxy[0];\n            ay1 = y1 + 0.5 * oxy[1];\n            ax2 = x2 + 0.5 * oxy[0];\n            ay2 = y2 + 0.5 * oxy[1];\n            bx1 = x1 - 0.5 * oxy[0];\n            by1 = y1 - 0.5 * oxy[1];\n            bx2 = x2 - 0.5 * oxy[0];\n            by2 = y2 - 0.5 * oxy[1];\n        }\n        else if (side > 0) {\n            bx1 = x1 + oxy[0];\n            by1 = y1 + oxy[1];\n            bx2 = x2 + oxy[0];\n            by2 = y2 + oxy[1];\n            if (nfr.length > 1 && this.points[bfr - 1].text == null) {\n                bx1 += oxy[1];\n                by1 -= oxy[0];\n            }\n            if (nto.length > 1 && this.points[bto - 1].text == null) {\n                bx2 -= oxy[1];\n                by2 += oxy[0];\n            }\n        }\n        else if (side < 0) {\n            bx1 = x1 - oxy[0];\n            by1 = y1 - oxy[1];\n            bx2 = x2 - oxy[0];\n            by2 = y2 - oxy[1];\n            if (nfr.length > 1 && this.points[bfr - 1].text == null) {\n                bx1 += oxy[1];\n                by1 -= oxy[0];\n            }\n            if (nto.length > 1 && this.points[bto - 1].text == null) {\n                bx2 -= oxy[1];\n                by2 += oxy[0];\n            }\n        }\n        if (side != 0) {\n            if (this.mol.atomElement(bfr).length <= 2 && this.mol.atomAdjCount(bfr) == 1 && this.points[bfr - 1].text != null) {\n                this.bumpAtomPosition(bfr, 0.5 * oxy[0] * side, 0.5 * oxy[1] * side);\n            }\n            if (this.mol.atomElement(bto).length <= 2 && this.mol.atomAdjCount(bto) == 1 && this.points[bto - 1].text != null) {\n                this.bumpAtomPosition(bto, 0.5 * oxy[0] * side, 0.5 * oxy[1] * side);\n            }\n        }\n        let delta1 = this.backOffAtomDelta(bfr, ax1, ay1, ax2, ay2, minDist), delta2 = this.backOffAtomDelta(bfr, bx1, by1, bx2, by2, minDist);\n        if (delta1 != null || delta2 != null) {\n            let delta = (delta1 == null ? 0 : delta1[0]) > (delta2 == null ? 0 : delta2[0]) ? delta1 : delta2;\n            ax1 += delta[1];\n            ay1 += delta[2];\n            bx1 += delta[1];\n            by1 += delta[2];\n        }\n        let delta3 = this.backOffAtomDelta(bto, ax2, ay2, ax1, ay1, minDist), delta4 = this.backOffAtomDelta(bto, bx2, by2, bx1, by1, minDist);\n        if (delta3 != null || delta4 != null) {\n            let delta = (delta3 == null ? 0 : delta3[0]) > (delta4 == null ? 0 : delta4[0]) ? delta3 : delta4;\n            ax2 += delta[1];\n            ay2 += delta[2];\n            bx2 += delta[1];\n            by2 += delta[2];\n        }\n        if (side == 0 && !noshift) {\n            let xy = null;\n            if (this.points[bfr - 1].text == null && !this.mol.bondInRing(idx)) {\n                xy = this.adjustBondPosition(idxFLeft, bfr, ax1, ay1, ax2, ay2);\n                if (xy != null) {\n                    ax1 = xy[0];\n                    ay1 = xy[1];\n                }\n                xy = this.adjustBondPosition(idxFRight, bfr, bx1, by1, bx2, by2);\n                if (xy != null) {\n                    bx1 = xy[0];\n                    by1 = xy[1];\n                }\n            }\n            if (this.points[bto - 1].text == null && !this.mol.bondInRing(idx)) {\n                xy = this.adjustBondPosition(idxTLeft, bto, ax2, ay2, ax1, ay1);\n                if (xy != null) {\n                    ax2 = xy[0];\n                    ay2 = xy[1];\n                }\n                xy = this.adjustBondPosition(idxTRight, bto, bx2, by2, bx1, by1);\n                if (xy != null) {\n                    bx2 = xy[0];\n                    by2 = xy[1];\n                }\n            }\n        }\n        let lt = this.mol.bondType(idx) == Molecule.BONDTYPE_UNKNOWN ? BLineType.Unknown : BLineType.Normal;\n        let head = lt == BLineType.Unknown ? 0.1 * this.scale : 0;\n        let col = this.effects.colBond[idx];\n        if (!col)\n            col = this.policy.data.foreground;\n        let b1 = {\n            bnum: idx,\n            bfr,\n            bto,\n            type: lt,\n            line: new Line(ax1, ay1, ax2, ay2),\n            size: sz,\n            head,\n            col\n        };\n        let b2 = {\n            bnum: idx,\n            bfr,\n            bto,\n            type: lt,\n            line: new Line(bx1, by1, bx2, by2),\n            size: sz,\n            head,\n            col\n        };\n        this.lines.push(b1);\n        this.lines.push(b2);\n        this.space.push(this.computeSpaceLine(b1));\n        this.space.push(this.computeSpaceLine(b2));\n    }\n    placeHydrogen(idx, hcount, fussy) {\n        let font = FontData.main;\n        const SSFRACT = 0.6;\n        const GLYPH_H = font.getIndex('H');\n        let a = this.points[idx];\n        let emscale = a.fsz * font.INV_UNITS_PER_EM;\n        let sub = hcount >= 2 ? hcount.toString() : '';\n        let outlineX = font.getOutlineX(GLYPH_H), outlineY = font.getOutlineY(GLYPH_H);\n        let firstEMW = font.HORIZ_ADV_X[GLYPH_H], emw = firstEMW;\n        for (let n = 0; n < sub.length; n++) {\n            let ch = sub.charAt(n), g = font.getIndex(ch);\n            if (n == 0) {\n                emw += font.getKerning('H', ch);\n            }\n            else {\n                let chp = sub.charAt(n - 1);\n                emw += font.getKerning(chp, ch) * SSFRACT;\n            }\n            let extraX = font.getOutlineX(g), extraY = font.getOutlineY(g);\n            Vec.addTo(extraX, emw / SSFRACT);\n            Vec.addTo(extraY, (SSFRACT - 1) * font.ASCENT * 1.30);\n            Vec.mulBy(extraX, SSFRACT);\n            Vec.mulBy(extraY, SSFRACT);\n            outlineX = outlineX.concat(extraX);\n            outlineY = outlineY.concat(extraY);\n            emw += font.HORIZ_ADV_X[g] * SSFRACT;\n        }\n        if (sub.length > 0) {\n            let qh = new QuickHull(outlineX, outlineY, 0);\n            outlineX = qh.hullX;\n            outlineY = qh.hullY;\n        }\n        let emdx = -0.5 * firstEMW, emdy = 0.5 * font.ASCENT * font.ASCENT_FUDGE;\n        for (let n = 0; n < outlineX.length; n++) {\n            outlineX[n] = a.oval.cx + (emdx + outlineX[n]) * emscale;\n            outlineY[n] = a.oval.cy + (emdy - outlineY[n]) * emscale * this.ymul;\n        }\n        let dx = 0, dy = 0;\n        let srcWAD = this.measure.measureText(a.text, a.fsz);\n        if (fussy) {\n            let RIGHTLEFT = [0, 1, 2, 3];\n            let LEFTRIGHT = [1, 0, 2, 3];\n            let UPDOWN = [2, 3, 0, 1];\n            let DOWNUP = [3, 2, 0, 1];\n            let quad = RIGHTLEFT, adj = this.mol.atomAdjList(a.anum);\n            if (adj.length == 0) {\n                let LEFTIES = ['O', 'S', 'F', 'Cl', 'Br', 'I'];\n                if (this.mol.atomCharge(a.anum) == 0 && this.mol.atomUnpaired(a.anum) == 0 &&\n                    LEFTIES.indexOf(this.mol.atomElement(a.anum)) >= 0)\n                    quad = LEFTRIGHT;\n                else\n                    quad = RIGHTLEFT;\n            }\n            else {\n                let allLeft = true, allRight = true, allUp = true, allDown = true;\n                const ax = this.mol.atomX(a.anum), ay = this.mol.atomY(a.anum);\n                for (let n = 0; n < adj.length; n++) {\n                    const bx = this.mol.atomX(adj[n]), by = this.mol.atomY(adj[n]);\n                    if (bx > ax + 0.01)\n                        allLeft = false;\n                    if (bx < ax - 0.01)\n                        allRight = false;\n                    if (by < ay - 0.01)\n                        allUp = false;\n                    if (by > ay + 0.01)\n                        allDown = false;\n                }\n                if (allLeft) { }\n                else if (allRight)\n                    quad = LEFTRIGHT;\n                else if (allUp)\n                    quad = DOWNUP;\n                else if (allDown)\n                    quad = UPDOWN;\n            }\n            for (let n = 0; n < 4; n++) {\n                let tx = 0, ty = 0;\n                if (quad[n] == 0)\n                    tx = 0.5 * srcWAD[0] + 0.5 * firstEMW * emscale;\n                else if (quad[n] == 1)\n                    tx = -0.5 * srcWAD[0] - (emw - 0.5 * firstEMW) * emscale;\n                else if (quad[n] == 2)\n                    ty = (1.1 * srcWAD[1] + 0.5 * srcWAD[2]) * -this.ymul;\n                else if (quad[n] == 3)\n                    ty = (1.1 * srcWAD[1] + 0.5 * srcWAD[2]) * this.ymul;\n                Vec.addTo(outlineX, tx);\n                Vec.addTo(outlineY, ty);\n                let viol = this.countPolyViolations(outlineX, outlineY, null, true);\n                Vec.addTo(outlineX, -tx);\n                Vec.addTo(outlineY, -ty);\n                if (viol == 0) {\n                    dx = tx;\n                    dy = ty;\n                    break;\n                }\n            }\n            if (dx == 0 && dy == 0)\n                return false;\n        }\n        else {\n            const mx1 = Vec.min(outlineY), mx2 = Vec.max(outlineX), my1 = Vec.min(outlineY), my2 = Vec.max(outlineY), cx = 0.5 * (mx1 + mx2), cy = 0.5 * (my1 + my2);\n            const mag = 1 + this.measure.scale() * this.policy.data.fontSize * ArrangeMolecule.FONT_CORRECT * 0.1 / Math.max(mx2 - cx, my2 - cy);\n            const psz = outlineX.length;\n            let magPX = outlineX.slice(0), magPY = outlineY.slice(0);\n            for (let n = 0; n < psz; n++) {\n                magPX[n] = (magPX[n] - cx) * mag + cx;\n                magPY[n] = (magPY[n] - cy) * mag + cy;\n            }\n            let bestScore = 0, bestExt = 0, bestAng = 0;\n            for (let ext = 0.5 * (a.oval.rw + a.oval.rh); ext < 1.5 * this.measure.scale(); ext += 0.1 * this.measure.scale()) {\n                let anyNoClash = false;\n                for (let ang = 0; ang < 2 * Math.PI; ang += 5 * DEGRAD) {\n                    let tx = ext * Math.cos(ang), ty = ext * Math.sin(ang);\n                    Vec.addTo(magPX, tx);\n                    Vec.addTo(magPY, ty);\n                    let viol = this.countPolyViolations(magPX, magPY, null, false);\n                    Vec.addTo(magPX, -tx);\n                    Vec.addTo(magPY, -ty);\n                    if (viol == 0)\n                        anyNoClash = true;\n                    let score = 10 * viol + this.spatialCongestion(a.oval.cx + tx, a.oval.cy + ty, 0.5) + 2 * ext;\n                    if (bestScore == 0 || score < bestScore) {\n                        bestScore = score;\n                        bestExt = ext;\n                        bestAng = ang;\n                        dx = tx;\n                        dy = ty;\n                    }\n                }\n                if (anyNoClash)\n                    break;\n            }\n        }\n        let wad = this.measure.measureText('H', a.fsz);\n        const PADDING = 1.1;\n        let ah = {\n            anum: 0,\n            text: 'H',\n            fsz: a.fsz,\n            col: a.col,\n            oval: new Oval(a.oval.cx + dx, a.oval.cy + dy, 0.5 * wad[0] * PADDING, 0.5 * wad[1] * PADDING)\n        };\n        this.points.push(ah);\n        if (sub.length > 0) {\n            const subFsz = SSFRACT * a.fsz;\n            wad = this.measure.measureText(sub, subFsz);\n            let an = {\n                anum: 0,\n                text: sub,\n                fsz: subFsz,\n                col: a.col,\n                oval: new Oval(ah.oval.cx + 0.5 * firstEMW * a.fsz * font.INV_UNITS_PER_EM + 0.5 * wad[0], ah.oval.cy + (1 - SSFRACT) * a.fsz, 0.5 * wad[0] * PADDING, 0.5 * wad[1] * PADDING)\n            };\n            this.points.push(an);\n        }\n        Vec.addTo(outlineX, dx);\n        Vec.addTo(outlineY, dy);\n        let minX = Vec.min(outlineX), minY = Vec.min(outlineY);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(minX, minY, Vec.max(outlineX) - minX, Vec.max(outlineY) - minY),\n            px: outlineX,\n            py: outlineY\n        };\n        this.space.push(spc);\n        return true;\n    }\n    computeSpacePoint(a) {\n        let s = {\n            anum: a.anum,\n            bnum: 0,\n            box: new Box(),\n            px: [],\n            py: []\n        };\n        const font = FontData.main;\n        let outlineX = [], outlineY = [];\n        let emw = 0, nglyphs = 0;\n        if (a.text != null) {\n            for (let n = 0; n < a.text.length; n++) {\n                let ch1 = a.text.charAt(n);\n                let i = font.getIndex(ch1);\n                if (i >= 0) {\n                    if (emw == 0) {\n                        outlineX = font.getOutlineX(i);\n                        outlineY = font.getOutlineY(i);\n                        nglyphs = 1;\n                    }\n                    else {\n                        let extraX = font.getOutlineX(i), extraY = font.getOutlineY(i);\n                        if (extraX.length > 0) {\n                            Vec.addTo(extraX, emw);\n                            outlineX = outlineX.concat(extraX);\n                            outlineY = outlineY.concat(extraY);\n                            nglyphs++;\n                        }\n                    }\n                    emw += font.HORIZ_ADV_X[i];\n                }\n                else\n                    emw += font.MISSING_HORZ;\n                if (n < a.text.length - 1) {\n                    let ch2 = a.text.charAt(n + 1);\n                    emw += font.getKerning(ch1, ch2);\n                }\n            }\n        }\n        if (outlineX.length > 0) {\n            if (nglyphs > 1) {\n                let qh = new QuickHull(outlineX, outlineY, 0);\n                outlineX = qh.hullX;\n                outlineY = qh.hullY;\n            }\n            let emdx = -0.5 * emw, emdy = 0.5 * font.ASCENT * font.ASCENT_FUDGE;\n            let emscale = a.fsz * font.INV_UNITS_PER_EM;\n            for (let n = 0; n < outlineX.length; n++) {\n                outlineX[n] = a.oval.cx + (emdx + outlineX[n]) * emscale;\n                outlineY[n] = a.oval.cy + (emdy - outlineY[n]) * emscale * this.ymul;\n            }\n            s.px = outlineX;\n            s.py = outlineY;\n            let minX = Vec.min(outlineX), minY = Vec.min(outlineY);\n            s.box = new Box(minX, minY, Vec.max(outlineX) - minX, Vec.max(outlineY) - minY);\n        }\n        else {\n            s.box = Box.fromOval(a.oval);\n            if (s.box.w > 0 && s.box.h > 0) {\n                s.px = [s.box.minX(), s.box.maxX(), s.box.maxX(), s.box.minX()];\n                s.py = [s.box.minY(), s.box.minY(), s.box.maxY(), s.box.maxY()];\n            }\n        }\n        return s;\n    }\n    computeSpaceLine(b) {\n        let s = {\n            anum: 0,\n            bnum: b.bnum,\n            box: new Box(),\n            px: [],\n            py: []\n        };\n        if (b.type == BLineType.Normal || b.type == BLineType.Dotted || b.type == BLineType.DotDir) {\n            s.px = [b.line.x1, b.line.x2];\n            s.py = [b.line.y1, b.line.y2];\n        }\n        else {\n            const dx = b.line.x2 - b.line.x1, dy = b.line.y2 - b.line.y1;\n            const norm = b.head / Math.sqrt(dx * dx + dy * dy);\n            const ox = norm * dy, oy = -norm * dx;\n            if (b.type == BLineType.Unknown) {\n                s.px = [b.line.x1 + ox, b.line.x1 - ox, b.line.x2 - ox, b.line.x2 + ox];\n                s.py = [b.line.y1 + oy, b.line.y1 - oy, b.line.y2 - oy, b.line.y2 + oy];\n            }\n            else {\n                s.px = [b.line.x1, b.line.x2 - ox, b.line.x2 + ox];\n                s.py = [b.line.y1, b.line.y2 - oy, b.line.y2 + oy];\n            }\n        }\n        s.box.x = Vec.min(s.px) - b.size;\n        s.box.y = Vec.min(s.py) - b.size;\n        s.box.w = Vec.max(s.px) - s.box.x + b.size;\n        s.box.h = Vec.max(s.py) - s.box.y + b.size;\n        return s;\n    }\n    bumpAtomPosition(atom, dx, dy) {\n        let p = this.points[atom - 1];\n        p.oval.cx += dx;\n        p.oval.cy += dy;\n        for (let n = this.space.length - 1; n >= 0; n--) {\n            let s = this.space[n - 1];\n            if (s == null || s.anum != atom)\n                continue;\n            s.box.x += dx;\n            s.box.y += dy;\n            Vec.addTo(s.px, dx);\n            Vec.addTo(s.py, dy);\n        }\n    }\n    spaceSubset(x, y, w, h) {\n        let subset = [];\n        for (let s of this.space)\n            if (GeomUtil.rectsIntersect(x, y, w, h, s.box.x, s.box.y, s.box.w, s.box.h))\n                subset.push(s);\n        return subset;\n    }\n    countPolyViolations(px, py, space, shortCircuit) {\n        if (space == null)\n            space = this.space;\n        let hits = 0;\n        const psz = px.length, nspc = space.length;\n        let pr = new Box(), sr = new Box();\n        for (let i1 = 0; i1 < psz; i1++) {\n            let i2 = i1 < psz - 1 ? i1 + 1 : 0;\n            pr.x = Math.min(px[i1], px[i2]) - 1;\n            pr.y = Math.min(py[i1], py[i2]) - 1;\n            pr.w = Math.max(px[i1], px[i2]) - pr.x + 2;\n            pr.h = Math.max(py[i1], py[i2]) - pr.y + 2;\n            for (let j = 0; j < nspc; j++) {\n                let spc = space[j];\n                if (spc.px == null)\n                    continue;\n                sr.x = spc.box.x - 1;\n                sr.y = spc.box.y - 1;\n                sr.w = spc.box.w + 1;\n                sr.h = spc.box.h + 1;\n                if (!pr.intersects(sr))\n                    continue;\n                let ssz = spc.px.length;\n                for (let j1 = 0; j1 < ssz; j1++) {\n                    let j2 = j1 < ssz - 1 ? j1 + 1 : 0;\n                    sr.x = Math.min(spc.px[j1], spc.px[j2]) - 1;\n                    sr.y = Math.min(spc.py[j1], spc.py[j2]) - 1;\n                    sr.w = Math.max(spc.px[j1], spc.px[j2]) - sr.x + 2;\n                    sr.h = Math.max(spc.py[j1], spc.py[j2]) - sr.y + 2;\n                    if (!pr.intersects(sr))\n                        continue;\n                    if (GeomUtil.doLineSegsIntersect(px[i1], py[i1], px[i2], py[i2], spc.px[j1], spc.py[j1], spc.px[j2], spc.py[j2])) {\n                        if (shortCircuit)\n                            return 1;\n                        hits++;\n                        break;\n                    }\n                    if (ssz == 1)\n                        break;\n                }\n            }\n        }\n        pr.x = Vec.min(px);\n        pr.y = Vec.min(py);\n        pr.w = Vec.max(px) - pr.x;\n        pr.h = Vec.max(py) - pr.y;\n        for (let n = nspc - 1; n >= 0; n--) {\n            let spc = space[n];\n            sr.x = spc.box.x;\n            sr.y = spc.box.y;\n            sr.w = spc.box.w;\n            sr.h = spc.box.h;\n            if (!pr.intersects(sr))\n                continue;\n            for (let i = spc.px.length - 1; i >= 0; i--)\n                if (GeomUtil.pointInPolygon(spc.px[i], spc.py[i], px, py)) {\n                    if (shortCircuit)\n                        return 1;\n                    hits++;\n                    break;\n                }\n            for (let i = 0; i < psz; i++)\n                if (GeomUtil.pointInPolygon(px[i], py[i], spc.px, spc.py)) {\n                    if (shortCircuit)\n                        return 1;\n                    hits++;\n                    break;\n                }\n        }\n        return hits;\n    }\n    adjustBondPosition(bf, bt, x1, y1, x2, y2) {\n        if (bf == 0 || bt == 0)\n            return null;\n        for (let n = 0; n < this.lines.length; n++) {\n            let b = this.lines[n];\n            if (this.mol.bondOrder(b.bnum) != 1 || this.mol.bondType(b.bnum) != Molecule.BONDTYPE_NORMAL)\n                continue;\n            let alt = false;\n            if (this.mol.bondFrom(b.bnum) == bf && this.mol.bondTo(b.bnum) == bt) { }\n            else if (this.mol.bondFrom(b.bnum) == bt && this.mol.bondTo(b.bnum) == bf)\n                alt = true;\n            else\n                continue;\n            let th = angleDiff(Math.atan2(b.line.y2 - b.line.y1, b.line.x2 - b.line.x1), Math.atan2(y2 - y1, x2 - x1)) * RADDEG;\n            if ((th > -5 && th < 5) || th > 175 || th < -175)\n                continue;\n            let xy = GeomUtil.lineIntersect(b.line.x1, b.line.y1, b.line.x2, b.line.y2, x1, y1, x2, y2);\n            if (this.mol.atomRingBlock(bt) == 0) {\n                if (alt) {\n                    b.line.x1 = xy[0];\n                    b.line.y1 = xy[1];\n                }\n                else {\n                    b.line.x2 = xy[0];\n                    b.line.y2 = xy[1];\n                }\n            }\n            return xy;\n        }\n        return null;\n    }\n    priorityDoubleSubstit(idx) {\n        let bf = this.mol.bondFrom(idx), bt = this.mol.bondTo(idx);\n        let nf = this.mol.atomAdjList(bf), nt = this.mol.atomAdjList(bt);\n        let a1 = this.points[bf - 1], a2 = this.points[bt - 1];\n        let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n        let dx = x2 - x1, dy = y2 - y1, btheta = Math.atan2(dy, dx);\n        let idxFLeft = 0, idxFRight = 0, idxTLeft = 0, idxTRight = 0;\n        for (let n = 0; n < nf.length; n++)\n            if (nf[n] != bt) {\n                let theta = angleDiff(Math.atan2(this.points[nf[n] - 1].oval.cy - y1, this.points[nf[n] - 1].oval.cx - x1), btheta);\n                if (theta > 0) {\n                    if (idxFLeft != 0)\n                        return null;\n                    idxFLeft = nf[n];\n                }\n                else {\n                    if (idxFRight != 0)\n                        return null;\n                    idxFRight = nf[n];\n                }\n            }\n        for (let n = 0; n < nt.length; n++)\n            if (nt[n] != bf) {\n                let theta = angleDiff(Math.atan2(this.points[nt[n] - 1].oval.cy - y2, this.points[nt[n] - 1].oval.cx - x2), btheta);\n                if (theta > 0) {\n                    if (idxTLeft != 0)\n                        return null;\n                    idxTLeft = nt[n];\n                }\n                else {\n                    if (idxTRight != 0)\n                        return null;\n                    idxTRight = nt[n];\n                }\n            }\n        let sumFrom = (idxFLeft > 0 ? 1 : 0) + (idxFRight > 0 ? 1 : 0), sumTo = (idxTLeft > 0 ? 1 : 0) + (idxTRight > 0 ? 1 : 0);\n        if (sumFrom == 1 && sumTo == 0)\n            return [idxFLeft > 0 ? idxFLeft : idxFRight];\n        if (sumFrom == 0 && sumTo == 1)\n            return [idxTLeft > 0 ? idxTLeft : idxTRight];\n        if (sumFrom == 1 && sumTo == 1) {\n            if (idxFLeft > 0 && idxTLeft > 0)\n                return [idxFLeft, idxTLeft];\n            if (idxFRight > 0 && idxTRight > 0)\n                return [idxFRight, idxTRight];\n            let oxy = this.orthogonalDelta(x1, y1, x2, y2, this.bondSepPix);\n            let congestLeft = this.spatialCongestion(0.5 * (x1 + x2) + oxy[0], 0.5 * (y1 + y2) + oxy[1]);\n            let congestRight = this.spatialCongestion(0.5 * (x1 + x2) - oxy[0], 0.5 * (y1 + y2) - oxy[1]);\n            if (congestLeft < congestRight)\n                return [idxFLeft > 0 ? idxFLeft : idxTLeft];\n            else\n                return [idxFRight > 0 ? idxFRight : idxTRight];\n        }\n        if (sumFrom == 2 && sumTo == 1) {\n            if (idxTLeft == 0)\n                return [idxFRight, idxTRight];\n            else\n                return [idxFLeft, idxTLeft];\n        }\n        if (sumFrom == 1 && sumTo == 2) {\n            if (idxFLeft == 0)\n                return [idxFRight, idxTRight];\n            else\n                return [idxFLeft, idxTLeft];\n        }\n        return null;\n    }\n    annotateAtom(atom, text, col, fsz) {\n        let [tw, ta] = this.measure.measureText(text, fsz);\n        let a = this.points[atom - 1];\n        let cx = a.oval.cx, cy = a.oval.cy, rw = 0.6 * tw, rh = 0.6 * ta;\n        let otherTheta = [];\n        for (let a of this.mol.atomAdjList(atom)) {\n            let dx = this.points[a - 1].oval.cx - cx, dy = this.points[a - 1].oval.cy - cy;\n            otherTheta.push(Math.atan2(dy, dx));\n        }\n        let minExt = 0.5 * (a.oval.rw + a.oval.rh), stepsz = 0.1 * this.scale, nsteps = 8;\n        let angsteps = 36, angsz = TWOPI / angsteps;\n        let bestScore = Number.POSITIVE_INFINITY, bestDX = 0, bestDY = 0;\n        let px = [0, 0, 0, 0], py = [0, 0, 0, 0];\n        let limX = rw + minExt + nsteps * stepsz, limY = rh + minExt + nsteps * stepsz;\n        let subSpace = this.spaceSubset(cx - limX, cy - limY, 2 * limX, 2 * limY);\n        for (let step = 0; step < nsteps; step++) {\n            let ext = minExt + step * stepsz;\n            for (let ang = 0; ang < angsteps; ang++) {\n                let th = angsz * ang;\n                let dx = ext * Math.cos(th), dy = ext * Math.sin(th);\n                let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                px[0] = x1;\n                py[0] = y1;\n                px[1] = x2;\n                py[1] = y1;\n                px[2] = x2;\n                py[2] = y2;\n                px[3] = x1;\n                py[3] = y2;\n                let viol = this.countPolyViolations(px, py, subSpace, false);\n                let score = viol * 1000;\n                for (let oth of otherTheta)\n                    score -= Math.abs(angleDiff(th, oth));\n                if (score < bestScore) {\n                    bestScore = score;\n                    bestDX = dx;\n                    bestDY = dy;\n                }\n            }\n            if (bestScore < 500)\n                break;\n        }\n        let x = cx + bestDX, y = cy + bestDY;\n        let an = {\n            anum: 0,\n            text,\n            fsz,\n            col,\n            oval: new Oval(x, y, rw, rh),\n        };\n        this.points.push(an);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(x - rw, y - rh, 2 * rw, 2 * rh),\n            px: [x - rw, x + rw, x + rw, x - rw],\n            py: [y - rh, y - rh, y + rh, y + rh],\n        };\n        this.space.push(spc);\n    }\n    annotateBond(bond, text, col, fsz) {\n        let [tw, ta] = this.measure.measureText(text, fsz);\n        let bfr = this.mol.bondFrom(bond), bto = this.mol.bondTo(bond);\n        let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n        let cx = 0.5 * (a1.oval.cx + a2.oval.cx), cy = 0.5 * (a1.oval.cy + a2.oval.cy), rw = 0.6 * tw, rh = 0.6 * ta;\n        let bth = Math.atan2(a2.oval.cy - a1.oval.cy, a2.oval.cx - a1.oval.cx);\n        let otherTheta = [bth, bth + Math.PI];\n        for (let a of this.mol.atomAdjList(bfr))\n            if (a != bto) {\n                let dx = this.points[a - 1].oval.cx - this.points[bfr - 1].oval.cx, dy = this.points[a - 1].oval.cy - this.points[bfr - 1].oval.cy;\n                otherTheta.push(Math.atan2(dy, dx));\n            }\n        for (let a of this.mol.atomAdjList(bto))\n            if (a != bfr) {\n                let dx = this.points[a - 1].oval.cx - this.points[bto - 1].oval.cx, dy = this.points[a - 1].oval.cy - this.points[bto - 1].oval.cy;\n                otherTheta.push(Math.atan2(dy, dx));\n            }\n        let minExt = 0.2 * this.scale * this.bondOrder[bond - 1], stepsz = 0.1 * this.scale, nsteps = 8;\n        let angsteps = 36, angsz = TWOPI / angsteps;\n        let bestScore = Number.POSITIVE_INFINITY, bestDX = 0, bestDY = 0;\n        let px = [0, 0, 0, 0], py = [0, 0, 0, 0];\n        let limX = rw + minExt + nsteps * stepsz, limY = rh + minExt + nsteps * stepsz;\n        let subSpace = this.spaceSubset(cx - limX, cy - limY, 2 * limX, 2 * limY);\n        for (let step = 0; step < nsteps; step++) {\n            let ext = minExt + step * stepsz;\n            for (let ang = 0; ang < angsteps; ang++) {\n                let th = angsz * ang;\n                let dx = ext * Math.cos(th), dy = ext * Math.sin(th);\n                let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                px[0] = x1;\n                py[0] = y1;\n                px[1] = x2;\n                py[1] = y1;\n                px[2] = x2;\n                py[2] = y2;\n                px[3] = x1;\n                py[3] = y2;\n                let viol = this.countPolyViolations(px, py, subSpace, false);\n                let score = viol * 1000;\n                for (let oth of otherTheta)\n                    score -= Math.abs(angleDiff(th, oth));\n                if (score < bestScore) {\n                    bestScore = score;\n                    bestDX = dx;\n                    bestDY = dy;\n                }\n            }\n            if (bestScore < 500)\n                break;\n        }\n        let x = cx + bestDX, y = cy + bestDY;\n        let an = {\n            anum: 0,\n            text,\n            fsz,\n            col,\n            oval: new Oval(x, y, rw, rh),\n        };\n        this.points.push(an);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(x - rw, y - rh, 2 * rw, 2 * rh),\n            px: [x - rw, x + rw, x + rw, x - rw],\n            py: [y - rh, y - rh, y + rh, y + rh],\n        };\n        this.space.push(spc);\n    }\n    boxOverlaps(x, y, w, h, pointmask, linemask) {\n        let vx1 = x, vy1 = y, vx2 = x + w, vy2 = y + h;\n        for (let n = 0; n < this.points.length; n++) {\n            if (pointmask != null && !pointmask[n])\n                continue;\n            let a = this.points[n];\n            let wx1 = a.oval.cx - a.oval.rw, wy1 = a.oval.cy - a.oval.rh, wx2 = a.oval.cx + a.oval.rw, wy2 = a.oval.cy + a.oval.rh;\n            if (vx2 < wx1 || vx1 > wx2 || vy2 < wy1 || vy1 > wy2)\n                continue;\n            return true;\n        }\n        for (let n = 0; n < this.lines.length; n++) {\n            if (linemask != null && !linemask[n])\n                continue;\n            let b = this.lines[n];\n            let wx1 = b.line.x1, wy1 = b.line.y1, wx2 = b.line.x2, wy2 = b.line.y2;\n            if (vx2 < Math.min(wx1, wx2) || vx1 > Math.max(wx1, wx2) || vy2 < Math.min(wy1, wy2) || vy1 > Math.max(wy1, wy2))\n                continue;\n            if (wx1 >= vx1 && wx1 <= vx2 && wy1 >= vy1 && wy1 <= vy2)\n                return true;\n            if (wx2 >= vx1 && wx2 <= vx2 && wy2 >= vy1 && wy2 <= vy2)\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy1, vx2, vy1))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy2, vx2, vy2))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy1, vx1, vy2))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx2, vy1, vx2, vy2))\n                return true;\n        }\n        return false;\n    }\n    resolveLineCrossings(bondHigher, bondLower) {\n        const TYPES = [BLineType.Normal, BLineType.Dotted, BLineType.DotDir];\n        const stashOriginals = () => {\n            if (!this.unsplitLines)\n                this.unsplitLines = this.lines.map((b) => {\n                    return Object.assign(Object.assign({}, b), { line: b.line.clone() });\n                });\n        };\n        for (let sanity = 10; sanity > 0; sanity--) {\n            let anything = false;\n            let linesHigher = this.lines.filter((b) => b.bnum == bondHigher && TYPES.includes(b.type));\n            let linesLower = this.lines.filter((b) => b.bnum == bondLower && TYPES.includes(b.type));\n            for (let b1 of linesHigher) {\n                for (let b2 of linesLower) {\n                    if (b1.bfr == b2.bfr || b1.bfr == b2.bto || b1.bto == b2.bfr || b1.bto == b2.bto)\n                        continue;\n                    if (b2.type == BLineType.DotDir)\n                        b2.type = BLineType.Dotted;\n                    if (!GeomUtil.doLineSegsIntersect(b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2))\n                        continue;\n                    let [ix, iy] = GeomUtil.lineIntersect(b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2);\n                    let dx = b2.line.x2 - b2.line.x1, dy = b2.line.y2 - b2.line.y1;\n                    let ext = Math.abs(dx) > Math.abs(dy) ? (ix - b2.line.x1) / dx : (iy - b2.line.y1) / dy;\n                    let dist = norm_xy(dx, dy);\n                    let delta = b2.size / dist * (b2.type == BLineType.Normal ? 2 : 4);\n                    if (ext > delta && ext < 1 - delta) {\n                        stashOriginals();\n                        let b3 = {\n                            bnum: b2.bnum,\n                            bfr: b2.bfr,\n                            bto: b2.bto,\n                            type: b2.type,\n                            line: b2.line.clone(),\n                            size: b2.size,\n                            head: b2.head,\n                            col: b2.col\n                        };\n                        this.lines.push(b3);\n                        b2.line.x2 = b2.line.x1 + dx * (ext - delta);\n                        b2.line.y2 = b2.line.y1 + dy * (ext - delta);\n                        b3.line.x1 = b3.line.x1 + dx * (ext + delta);\n                        b3.line.y1 = b3.line.y1 + dy * (ext + delta);\n                        anything = true;\n                    }\n                    else if (ext > delta) {\n                        stashOriginals();\n                        b2.line.x2 = b2.line.x1 + dx * (ext - delta);\n                        b2.line.y2 = b2.line.y1 + dy * (ext - delta);\n                        anything = true;\n                    }\n                    else if (ext < 1 - delta) {\n                        stashOriginals();\n                        b2.line.x1 = b2.line.x1 + dx * (ext + delta);\n                        b2.line.y1 = b2.line.y1 + dy * (ext + delta);\n                        anything = true;\n                    }\n                }\n            }\n            if (!anything)\n                break;\n        }\n    }\n    createCircularRing(atoms) {\n        let px = new Array(atoms.length), py = new Array(atoms.length);\n        for (let n = 0; n < atoms.length; n++) {\n            let pt = this.points[atoms[n] - 1];\n            px[n] = pt.oval.cx;\n            py[n] = pt.oval.cy;\n        }\n        let cx = Vec.sum(px) / atoms.length, cy = Vec.sum(py) / atoms.length;\n        let bx = [], by = [];\n        let isRegular = true;\n        let regDist = Number.NaN;\n        const FRACT = 0.7;\n        for (let a of atoms) {\n            let pt = this.points[a - 1];\n            let x0 = pt.oval.cx - cx, y0 = pt.oval.cy - cy, x1 = x0 - pt.oval.rw, x2 = x0 + pt.oval.rw, y1 = y0 - pt.oval.rh, y2 = y0 + pt.oval.rh;\n            bx.push(x1);\n            by.push(y0);\n            bx.push(x1);\n            by.push(y1);\n            bx.push(x1);\n            by.push(y2);\n            bx.push(x0);\n            by.push(y1);\n            bx.push(x0);\n            by.push(y2);\n            bx.push(x2);\n            by.push(y0);\n            bx.push(x2);\n            by.push(y1);\n            bx.push(x2);\n            by.push(y2);\n            let dist = norm_xy(x0, y0), theta = Math.atan2(y0, x0);\n            bx.push(FRACT * dist * Math.cos(theta));\n            by.push(FRACT * dist * Math.sin(theta));\n            for (let b of this.mol.atomAdjList(a))\n                if (atoms.indexOf(b) >= 0) {\n                    let pb = this.points[b - 1];\n                    let mx = 0.5 * (pt.oval.cx + pb.oval.cx) - cx, my = 0.5 * (pt.oval.cy + pb.oval.cy) - cy;\n                    let mdist = norm_xy(mx, my), mtheta = Math.atan2(my, mx);\n                    bx.push(FRACT * mdist * Math.cos(mtheta));\n                    by.push(FRACT * mdist * Math.sin(mtheta));\n                }\n            if (!isRegular) { }\n            else if (Number.isFinite(regDist)) {\n                if (Math.abs(regDist - dist) > 1)\n                    isRegular = false;\n            }\n            else\n                regDist = dist;\n        }\n        let r = { atoms, cx, cy, rw: 0, rh: 0, theta: 0, size: 0 };\n        if (isRegular) {\n            r.rw = r.rh = GeomUtil.fitCircle(bx, by);\n        }\n        else {\n            let mdist = 0;\n            for (let n = 0; n < atoms.length; n++)\n                mdist += norm_xy(px[n] - cx, py[n] - cy);\n            let margin = mdist / atoms.length * (1 - FRACT);\n            var fit = new FitRotatedEllipse(px, py, margin);\n            fit.calculate();\n            r.cx = fit.cx;\n            r.cy = fit.cy;\n            r.rw = fit.rw;\n            r.rh = fit.rh;\n            r.theta = fit.theta;\n        }\n        r.size = this.lineSizePix;\n        this.rings.push(r);\n    }\n    createCurvedPath(atoms, fractional, extAtom) {\n        const sz = atoms.length, szn = sz - 1;\n        let x = [], y = [], symbol = [];\n        for (let n = 0; n < sz; n++) {\n            let pt = this.points[atoms[n] - 1];\n            x.push(pt.oval.cx);\n            y.push(pt.oval.cy);\n            symbol.push(pt.text != null);\n        }\n        let ox = [], oy = [];\n        const EXT = Molecule.IDEALBOND * 0.25 * this.scale;\n        for (let n = 0; n < sz - 1; n++) {\n            let dx = x[n + 1] - x[n], dy = y[n + 1] - y[n], invD = EXT * invZ(norm_xy(dx, dy));\n            ox.push(dy * invD);\n            oy.push(-dx * invD);\n        }\n        const FAR = 1.2, CLOSE = 0.7;\n        let sx1 = Vec.numberArray(0, sz), sy1 = Vec.numberArray(0, sz), sx2 = Vec.numberArray(0, sz), sy2 = Vec.numberArray(0, sz);\n        const capA = symbol[0] ? FAR : CLOSE;\n        if (!fractional) {\n            sx1[0] = x[0] + ox[0] * capA;\n            sy1[0] = y[0] + oy[0] * capA;\n            sx2[0] = x[0] - ox[0] * capA;\n            sy2[0] = y[0] - oy[0] * capA;\n        }\n        else {\n            const dx = -oy[0], dy = ox[0];\n            sx1[0] = x[0] + dx * capA;\n            sy1[0] = y[0] + dy * capA;\n            sx2[0] = x[0] + dx * capA;\n            sy2[0] = y[0] + dy * capA;\n        }\n        let ncross1 = 0, ncross2 = 0;\n        for (let n = 1; n < sz - 1; n++) {\n            const fr1 = symbol[n] ? FAR : CLOSE, fr2 = fr1;\n            sx1[n] = x[n] + fr1 * (ox[n - 1] + ox[n]);\n            sy1[n] = y[n] + fr1 * (oy[n - 1] + oy[n]);\n            sx2[n] = x[n] - fr2 * (ox[n - 1] + ox[n]);\n            sy2[n] = y[n] - fr2 * (oy[n - 1] + oy[n]);\n            for (let a of this.mol.atomAdjList(atoms[n]))\n                if (atoms.indexOf(a) < 0 && a != extAtom) {\n                    let pt = this.points[a - 1];\n                    let dx = pt.oval.cx - x[n], dy = pt.oval.cy - y[n];\n                    let dot1 = dx * (sx1[n] - x[n]) + dy * (sy1[n] - x[n]);\n                    let dot2 = dy * (sx2[n] - x[n]) + dy * (sy2[n] - x[n]);\n                    if (dot1 > dot2)\n                        ncross1++;\n                    else\n                        ncross2++;\n                }\n        }\n        let nn = sz - 1;\n        let capB = symbol[nn] ? FAR : CLOSE;\n        if (!fractional) {\n            sx1[nn] = x[nn] + ox[nn - 1] * capB;\n            sy1[nn] = y[nn] + oy[nn - 1] * capB;\n            sx2[nn] = x[nn] - ox[nn - 1] * capB;\n            sy2[nn] = y[nn] - oy[nn - 1] * capB;\n        }\n        else {\n            let dx = -oy[nn - 1], dy = ox[nn - 1];\n            sx1[nn] = x[nn] - dx * capB;\n            sy1[nn] = y[nn] - dy * capB;\n            sx2[nn] = x[nn] - dx * capB;\n            sy2[nn] = y[nn] - dy * capB;\n        }\n        let score1 = 0, score2 = 0;\n        for (let n = 0; n < sz - 1; n++) {\n            score1 += norm_xy(sx1[n + 1] - sx1[n], sy1[n + 1] - sy1[n]);\n            score2 += norm_xy(sx2[n + 1] - sx2[n], sy2[n + 1] - sy2[n]);\n        }\n        score1 *= ncross1 + 1;\n        score2 *= ncross2 + 1;\n        let sx = score1 < score2 ? sx1 : sx2;\n        let sy = score1 < score2 ? sy1 : sy2;\n        let p = { atoms, px: null, py: null, ctrl: null, size: this.lineSizePix };\n        this.splineInterpolate(p, sx, sy);\n        this.paths.push(p);\n    }\n    createBondCentroid(from, to) {\n        let pt = this.points[from - 1];\n        let x1 = pt.oval.cx, y1 = pt.oval.cy, x2 = 0, y2 = 0;\n        for (let a of to) {\n            pt = this.points[a - 1];\n            x2 += pt.oval.cx;\n            y2 += pt.oval.cy;\n        }\n        x2 /= to.length;\n        y2 /= to.length;\n        if (to.length <= 2) {\n            x2 -= 0.1 * (x2 - x1);\n            y2 -= 0.1 * (y2 - y1);\n        }\n        const minDist = MINBOND_LINE * this.measure.scale();\n        let xy1 = this.shrinkBond(x1, y1, x2, y2, this.backOffAtom(from, x1, y1, x2, y2, minDist));\n        this.ensureMinimumBondLength(xy1, [x2, y2], x1, y1, x2, y2, minDist);\n        let b = {\n            bnum: 0,\n            bfr: from,\n            bto: 0,\n            type: BLineType.Normal,\n            line: new Line(xy1[0], xy1[1], x2, y2),\n            size: this.lineSizePix,\n            head: 0,\n            col: this.policy.data.foreground\n        };\n        this.lines.push(b);\n        this.space.push(this.computeSpaceLine(b));\n    }\n    splineInterpolate(path, x, y) {\n        const sz = x.length;\n        const scale = 0.25;\n        for (let n = 0; n < sz; n++) {\n            if (n == 0) {\n                let dx = x[n + 1] - x[n], dy = y[n + 1] - y[n];\n                let qx = x[n] + scale * dx, qy = y[n] + scale * dy;\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n                path.px = Vec.append(path.px, qx);\n                path.py = Vec.append(path.py, qy);\n                path.ctrl = Vec.append(path.ctrl, true);\n            }\n            else if (n == sz - 1) {\n                let dx = x[n] - x[n - 1], dy = y[n] - y[n - 1];\n                let qx = x[n] - scale * dx, qy = y[n] - scale * dy;\n                path.px = Vec.append(path.px, qx);\n                path.py = Vec.append(path.py, qy);\n                path.ctrl = Vec.append(path.ctrl, true);\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n            }\n            else {\n                let dx = x[n + 1] - x[n - 1], dy = y[n + 1] - y[n - 1];\n                let invD = invZ(norm_xy(dx, dy));\n                dx *= invD;\n                dy *= invD;\n                let d1 = scale * norm_xy(x[n] - x[n - 1], y[n] - y[n - 1]), d2 = scale * norm_xy(x[n + 1] - x[n], y[n + 1] - y[n]);\n                let qx1 = x[n] - dx * d1, qy1 = y[n] - dy * d1;\n                let qx2 = x[n] + dx * d2, qy2 = y[n] + dy * d2;\n                path.px = Vec.append(path.px, qx1);\n                path.py = Vec.append(path.py, qy1);\n                path.ctrl = Vec.append(path.ctrl, true);\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n                path.px = Vec.append(path.px, qx2);\n                path.py = Vec.append(path.py, qy2);\n                path.ctrl = Vec.append(path.ctrl, true);\n            }\n        }\n    }\n    delocalisedAnnotation(atoms, charge, unpaired) {\n        const mol = this.mol;\n        let str = '';\n        if (charge == -1)\n            str = '-';\n        else if (charge == 1)\n            str = '+';\n        else if (charge < -1)\n            str = Math.abs(charge) + '-';\n        else if (charge > 1)\n            str = charge + '+';\n        if (unpaired > 0)\n            for (let n = 0; n < unpaired; n++)\n                str += '.';\n        if (str.length == 0)\n            return;\n        const sz = atoms.length;\n        let bestX = 0, bestY = 0;\n        for (let a of atoms) {\n            bestX += mol.atomX(a);\n            bestY += mol.atomY(a);\n        }\n        bestX /= sz;\n        bestY /= sz;\n        let bestScore = CoordUtil.congestionPoint(mol, bestX, bestY);\n        for (let n = 1; n < sz - 1; n++) {\n            let x = 0.5 * (mol.atomX(atoms[n - 1]) + mol.atomX(atoms[n + 1])), y = 0.5 * (mol.atomY(atoms[n - 1]) + mol.atomY(atoms[n + 1]));\n            let score = CoordUtil.congestionPoint(mol, x, y);\n            if (score < bestScore) {\n                bestScore = score;\n                bestX = x;\n                bestY = y;\n            }\n        }\n        let fsz = 0.8 * this.fontSizePix;\n        let wad = this.measure.measureText(str, fsz);\n        let rw = 0.55 * wad[0], rh = 0.55 * wad[1];\n        let a = {\n            anum: 0,\n            text: str,\n            fsz,\n            col: this.policy.data.foreground,\n            oval: new Oval(this.measure.angToX(bestX), this.measure.angToY(bestY), rw, rh)\n        };\n        this.points.push(a);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(a.oval.cx - rw, a.oval.cy - rh, 2 * rw, 2 * rh),\n            px: [a.oval.cx - rw, a.oval.cx + rw, a.oval.cx + rw, a.oval.cx - rw],\n            py: [a.oval.cy - rh, a.oval.cy - rh, a.oval.cy + rh, a.oval.cy + rh]\n        };\n        this.space.push(spc);\n    }\n    processPolymerUnit(unit, allUnits) {\n        if (Vec.len(unit.bondConn) == 4) {\n            this.processPolymerUnitPair(unit);\n            return;\n        }\n        let brackets = [];\n        const { mol, measure } = this;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let a1 = mol.bondFrom(n), a2 = mol.bondTo(n);\n            let in1 = unit.atoms.indexOf(a1) >= 0, in2 = unit.atoms.indexOf(a2) >= 0;\n            let bracket = null;\n            if (in1 && !in2)\n                bracket = { a1, a2 };\n            else if (in2 && !in1)\n                bracket = { a1: a2, a2: a1 };\n            else\n                continue;\n            bracket.x1 = mol.atomX(bracket.a1);\n            bracket.y1 = mol.atomY(bracket.a1);\n            bracket.x2 = mol.atomX(bracket.a2);\n            bracket.y2 = mol.atomY(bracket.a2);\n            bracket.shared = false;\n            for (let other of allUnits)\n                if (unit !== other && other.atoms.includes(bracket.a2)) {\n                    bracket.shared = true;\n                    break;\n                }\n            let nestings = allUnits.filter((look) => look === unit || (look.atoms.includes(bracket.a1) && !look.atoms.includes(bracket.a2)));\n            if (nestings.length > 1) {\n                nestings.sort((u1, u2) => u1.atoms.length - u2.atoms.length);\n                for (let i = 0; i < nestings.length; i++)\n                    if (nestings[i] === unit)\n                        bracket.nestOrder = i;\n                bracket.nestCount = nestings.length;\n            }\n            brackets.push(bracket);\n        }\n        let tagidx = 0;\n        let atomX = unit.atoms.map((a) => mol.atomX(a)), atomY = unit.atoms.map((a) => mol.atomY(a));\n        let minX = Vec.min(atomX), minY = Vec.min(atomY);\n        let maxX = Vec.max(atomX), maxY = Vec.max(atomY);\n        for (let n = 1; n < brackets.length; n++) {\n            let b1 = brackets[tagidx], b2 = brackets[n];\n            let score1 = b1.x2 - minX - b1.y2 + minY;\n            let score2 = b2.x2 - minX - b2.y2 + minY;\n            if (score2 > score1)\n                tagidx = n;\n        }\n        let isLinear = false, isOuter = false;\n        if (brackets.length == 2) {\n            let left = brackets[tagidx == 0 ? 1 : 0], right = brackets[tagidx];\n            let theta1 = Math.atan2(left.y2 - left.y1, left.x2 - left.x1);\n            let theta2 = Math.atan2(right.y2 - right.y1, right.x2 - right.x1);\n            isLinear = (theta1 > 145 * DEGRAD || theta1 < -145 * DEGRAD) && theta2 < 35 * DEGRAD && theta2 > -35 * DEGRAD;\n        }\n        else if (brackets.length == 0) {\n            let ym = 0.5 * (minY + maxY);\n            brackets.push({ x1: minX, y1: ym, x2: minX - 1, y2: ym });\n            brackets.push({ x1: maxX, y1: ym, x2: maxX + 1, y2: ym });\n            tagidx = 1;\n            isOuter = true;\n        }\n        let bsz1 = (isOuter ? 0.5 * (maxY - minY + 1) : isLinear ? 1.0 : 0.5) * this.scale, bsz2 = 0.2 * this.scale;\n        const BASE_LINE = { bnum: 0, bfr: 0, bto: 0, type: BLineType.Normal, size: this.lineSizePix, head: 0, col: this.policy.data.foreground };\n        const BASE_TEXT = { anum: 0, fsz: 0.7 * this.fontSizePix, bold: false, col: this.policy.data.foreground };\n        for (let n = 0; n < brackets.length; n++) {\n            let bracket = brackets[n];\n            let x1 = measure.angToX(bracket.x1), y1 = measure.angToY(bracket.y1);\n            let x2 = measure.angToX(bracket.x2), y2 = measure.angToY(bracket.y2);\n            if (bracket.shared) {\n                x2 -= (x2 - x1) * 0.1;\n                y2 -= (y2 - y1) * 0.1;\n            }\n            if (bracket.nestCount > 1) {\n                let dx = x2 - x1, dy = y2 - y1, fract = (bracket.nestOrder + 1) / bracket.nestCount;\n                x2 = x1 + dx * fract;\n                y2 = y1 + dy * fract;\n            }\n            let mx = 0.5 * (x1 + x2), my = 0.5 * (y1 + y2);\n            if (isLinear) {\n                x1 = x2 = mx;\n                y1 = y2 = my;\n                if (n == tagidx) {\n                    x1--;\n                    x2++;\n                }\n                else {\n                    x1++;\n                    x2--;\n                }\n            }\n            let invDist = invZ(norm_xy(x2 - x1, y2 - y1));\n            let dx = (x2 - x1) * invDist, dy = (y2 - y1) * invDist;\n            let ox = dy, oy = -dx;\n            let px2 = mx - bsz1 * ox, py2 = my - bsz1 * oy;\n            let px3 = mx + bsz1 * ox, py3 = my + bsz1 * oy;\n            let px1 = px2 - bsz2 * dx, py1 = py2 - bsz2 * dy;\n            let px4 = px3 - bsz2 * dx, py4 = py3 - bsz2 * dy;\n            let line1 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px1, py1, px2, py2) });\n            let line2 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px2, py2, px3, py3) });\n            let line3 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px3, py3, px4, py4) });\n            this.lines.push(line1);\n            this.lines.push(line2);\n            this.lines.push(line3);\n            this.space.push(this.computeSpaceLine(line1));\n            this.space.push(this.computeSpaceLine(line2));\n            this.space.push(this.computeSpaceLine(line3));\n            if (n == tagidx) {\n                let xx, yy;\n                if (bracket.shared)\n                    [xx, yy] = [px2 - 0.5 * this.scale * ox, py2 - 0.5 * this.scale * oy];\n                else\n                    [xx, yy] = [px2 + bsz2 * 2 * dx, py2 + bsz2 * 2 * dy];\n                let pt1 = Object.assign(Object.assign({}, BASE_TEXT), { 'text': 'n', 'oval': new Oval(xx, yy, 0, 0) });\n                this.points.push(pt1);\n                this.space.push(this.computeSpacePoint(pt1));\n                if (unit.connect != null) {\n                    let text = '?';\n                    if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                        text = 'ht';\n                    else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                        text = 'hh';\n                    else if (unit.connect == PolymerBlockConnectivity.Random)\n                        text = 'eu';\n                    if (bracket.shared)\n                        [xx, yy] = [px3 + 0.5 * this.scale * ox, py3 + 0.5 * this.scale * oy];\n                    else\n                        [xx, yy] = [px3 + bsz2 * 2.5 * dx, py3 + bsz2 * 2.5 * dy];\n                    let pt2 = Object.assign(Object.assign({}, BASE_TEXT), { 'text': text, 'oval': new Oval(xx, yy, 0, 0) });\n                    this.points.push(pt2);\n                    this.space.push(this.computeSpacePoint(pt2));\n                }\n            }\n        }\n    }\n    processPolymerUnitPair(unit) {\n        const { mol, measure } = this;\n        let xpos = [], ypos = [];\n        for (let b of unit.bondConn) {\n            let bfr = mol.bondFrom(b), bto = mol.bondTo(b);\n            xpos.push(measure.angToX(0.5 * (mol.atomX(bfr) + mol.atomX(bto))));\n            ypos.push(measure.angToY(0.5 * (mol.atomY(bfr) + mol.atomY(bto))));\n        }\n        let cx = Vec.sum(xpos) * 0.25, cy = Vec.sum(ypos) * 0.25;\n        let bsz = 0.5 * this.scale;\n        let rx = [], ry = [];\n        for (let [i1, i2] of [[0, 1], [2, 3]]) {\n            let dx = xpos[i2] - xpos[i1], dy = ypos[i2] - ypos[i1], inv = bsz * invZ(norm_xy(dx, dy) + 0.001);\n            [dx, dy] = [dx * inv, dy * inv];\n            xpos[i1] -= 2 * dx;\n            ypos[i1] -= 2 * dy;\n            xpos[i2] += 2 * dx;\n            ypos[i2] += 2 * dy;\n            let ox = dy, oy = -dx;\n            let dsq1 = norm2_xy(0.5 * (xpos[i1] + xpos[i2]) + ox - cx, 0.5 * (ypos[i1] + ypos[i2]) + oy - cy);\n            let dsq2 = norm2_xy(0.5 * (xpos[i1] + xpos[i2]) - ox - cx, 0.5 * (ypos[i1] + ypos[i2]) - oy - cy);\n            if (dsq2 < dsq1)\n                [ox, oy] = [-ox, -oy];\n            rx.push(...[ox, ox]);\n            ry.push(...[oy, oy]);\n        }\n        const BASE_LINE = { bnum: 0, bfr: 0, bto: 0, type: BLineType.Normal, size: this.lineSizePix, head: 0, col: this.policy.data.foreground };\n        const BASE_TEXT = { anum: 0, fsz: 0.7 * this.fontSizePix, bold: false, col: this.policy.data.foreground };\n        let drawLine = (x1, y1, x2, y2) => {\n            let line = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(x1, y1, x2, y2) });\n            this.lines.push(line);\n            this.space.push(this.computeSpaceLine(line));\n        };\n        let drawText = (x, y, txt) => {\n            let pt = Object.assign(Object.assign({}, BASE_TEXT), { 'text': txt, 'oval': new Oval(x, y, 0, 0) });\n            this.points.push(pt);\n            this.space.push(this.computeSpacePoint(pt));\n        };\n        drawLine(xpos[0], ypos[0], xpos[1], ypos[1]);\n        drawLine(xpos[0], ypos[0], xpos[0] + rx[0], ypos[0] + ry[0]);\n        drawLine(xpos[1], ypos[1], xpos[1] + rx[1], ypos[1] + ry[1]);\n        drawLine(xpos[2], ypos[2], xpos[3], ypos[3]);\n        drawLine(xpos[2], ypos[2], xpos[2] + rx[2], ypos[2] + ry[2]);\n        drawLine(xpos[3], ypos[3], xpos[3] + rx[3], ypos[3] + ry[3]);\n        let xmin = Vec.min(xpos), ymin = Vec.min(ypos);\n        let dist = [];\n        for (let n = 0; n < 4; n++)\n            dist.push(xpos[n] - xmin + ypos[n] - ymin);\n        let idxN = Vec.idxMax(dist);\n        drawText(xpos[idxN] - rx[idxN], ypos[idxN] - ry[idxN], 'n');\n        let idxD2 = idxN + (idxN % 2 == 1 ? -1 : 1), idxD1 = (idxD2 + 2) % 4;\n        drawText(xpos[idxD1] - 0.5 * rx[idxD1], ypos[idxD1] - 0.5 * ry[idxD1], '*');\n        drawText(xpos[idxD2] - 0.5 * rx[idxD2], ypos[idxD2] - 0.5 * ry[idxD2], '*');\n    }\n}\nArrangeMolecule.FONT_CORRECT = 1.5;\nexport { ArrangeMolecule };\n//# sourceMappingURL=ArrangeMolecule.js.map","import { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nimport { Graph } from './Graph';\nimport { GeomUtil } from '../util/Geom';\nimport { norm2_xy, norm_xy } from '../util/util';\nexport class PseudoEmbedding {\n    constructor(mol) {\n        this.mol = mol;\n        this.bondMask = null;\n        this.crossings = [];\n    }\n    calculateCrossings() {\n        const { mol, bondMask, crossings } = this;\n        let na = mol.numAtoms, nb = mol.numBonds;\n        let maskCross = Vec.booleanArray(false, na);\n        for (let i = 1; i < nb; i++) {\n            if (bondMask && !bondMask[i - 1])\n                continue;\n            let x1 = mol.atomX(mol.bondFrom(i)), y1 = mol.atomY(mol.bondFrom(i));\n            let x2 = mol.atomX(mol.bondTo(i)), y2 = mol.atomY(mol.bondTo(i));\n            let dx = x2 - x1, dy = y2 - y1;\n            x1 += dx * 0.001;\n            y1 += dy * 0.001;\n            x2 -= dx * 0.001;\n            y2 -= dy * 0.001;\n            for (let j = i + 1; j <= nb; j++) {\n                if (bondMask && !bondMask[j - 1])\n                    continue;\n                let x3 = mol.atomX(mol.bondFrom(j)), y3 = mol.atomY(mol.bondFrom(j));\n                let x4 = mol.atomX(mol.bondTo(j)), y4 = mol.atomY(mol.bondTo(j));\n                dx = x4 - x3;\n                dy = y4 - y3;\n                x3 += dx * 0.001;\n                y3 += dy * 0.001;\n                x4 -= dx * 0.001;\n                y4 -= dy * 0.001;\n                if (GeomUtil.doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4)) {\n                    crossings.push({ bond1: i, bond2: j, higher: 0 });\n                    maskCross[mol.bondFrom(i) - 1] = true;\n                    maskCross[mol.bondTo(i) - 1] = true;\n                    maskCross[mol.bondFrom(j) - 1] = true;\n                    maskCross[mol.bondTo(j) - 1] = true;\n                }\n            }\n        }\n        if (crossings.length == 0)\n            return;\n        let crossRblk = new Set();\n        for (let n = 1; n <= na; n++) {\n            let rblk = mol.atomRingBlock(n);\n            if (rblk > 0)\n                crossRblk.add(rblk);\n        }\n        for (let n = 1; n <= na; n++)\n            if (!maskCross[n - 1]) {\n                let rblk = mol.atomRingBlock(n);\n                if (rblk > 0 && crossRblk.has(rblk))\n                    maskCross[n - 1] = true;\n            }\n        let maskComp = this.connectMaskedComponents(maskCross);\n        let g = Graph.fromMoleculeMask(mol, maskComp);\n        let ccgrp = g.calculateComponentGroups();\n        for (let n = 0; n < ccgrp.length; n++) {\n            for (let i = 0; i < ccgrp[n].length; i++)\n                ccgrp[n][i] = g.getIndex(ccgrp[n][i]);\n            this.embedComponent(ccgrp[n]);\n        }\n    }\n    connectMaskedComponents(imask) {\n        const { mol } = this;\n        let omask = Vec.duplicate(imask);\n        let gmol = Graph.fromMolecule(mol);\n        let na = mol.numAtoms, nb = mol.numBonds;\n        let maskNever = Vec.booleanArray(false, na);\n        while (true) {\n            let anything = false;\n            for (let n = 1; n <= nb; n++) {\n                let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n                let aidx = 0;\n                if (omask[bfr - 1] && !omask[bto - 1])\n                    aidx = bto;\n                else if (omask[bto - 1] && !omask[bfr - 1])\n                    aidx = bfr;\n                else\n                    continue;\n                if (maskNever[aidx - 1])\n                    continue;\n                let g = gmol.clone();\n                g.removeEdge(bfr - 1, bto - 1);\n                let cc = g.calculateComponents();\n                let hit = false;\n                for (let i = 0; i < na; i++)\n                    if (omask[i] && cc[i] == cc[aidx - 1]) {\n                        hit = true;\n                        break;\n                    }\n                if (hit) {\n                    omask[aidx - 1] = true;\n                    anything = true;\n                }\n                else\n                    maskNever[aidx - 1] = true;\n            }\n            if (!anything)\n                break;\n        }\n        return omask;\n    }\n    embedComponent(atoms) {\n        const { mol, crossings } = this;\n        let na = mol.numAtoms, gsz = atoms.length;\n        let amask = Vec.booleanArray(false, na);\n        for (let n = 0; n < gsz; n++)\n            amask[atoms[n] - 1] = true;\n        let z = Vec.numberArray(0, gsz), newZ = new Array(gsz);\n        if (this.seedFromInternalWedges(atoms, amask, z)) { }\n        else if (this.seedFromExternalWedges(atoms, amask, z)) { }\n        else if (this.seedFromPerspective(atoms, amask, z)) { }\n        else if (this.seedFromDensity(atoms, amask, z)) { }\n        else\n            return;\n        let ucount = this.normaliseHeights(z);\n        while (ucount < gsz) {\n            this.expandOutward(z, newZ, atoms, amask);\n            let ncount = this.normaliseHeights(newZ);\n            if (ncount == ucount)\n                break;\n            for (let n = 0; n < gsz; n++)\n                z[n] = newZ[n];\n            ucount = ncount;\n        }\n        for (let cross of crossings) {\n            if (amask[mol.bondFrom(cross.bond1) - 1])\n                this.updateCrossing(cross, atoms, z);\n        }\n    }\n    seedFromInternalWedges(atoms, amask, z) {\n        const { mol } = this;\n        let nb = mol.numBonds;\n        let success = false;\n        for (let n = 1; n <= nb; n++) {\n            let bt = mol.bondType(n);\n            if (bt != Molecule.BONDTYPE_INCLINED && bt != Molecule.BONDTYPE_DECLINED)\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            if (!amask[bfr - 1] || !amask[bto - 1])\n                continue;\n            if (bt == Molecule.BONDTYPE_INCLINED) {\n                z[atoms.indexOf(bfr)] -= 0.5;\n                z[atoms.indexOf(bto)] += 0.5;\n            }\n            else {\n                z[atoms.indexOf(bfr)] += 0.5;\n                z[atoms.indexOf(bto)] -= 0.5;\n            }\n            success = true;\n        }\n        return success;\n    }\n    seedFromExternalWedges(atoms, amask, z) {\n        const { mol } = this;\n        let nb = mol.numBonds;\n        let success = false;\n        for (let n = 1; n <= nb; n++) {\n            let bt = mol.bondType(n);\n            if (bt != Molecule.BONDTYPE_INCLINED && bt != Molecule.BONDTYPE_DECLINED)\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            if (amask[bfr - 1]) {\n                z[atoms.indexOf(bfr)] += bt == Molecule.BONDTYPE_INCLINED ? 1 : -1;\n                success = true;\n            }\n            else if (amask[bto - 1]) {\n                z[atoms.indexOf(bto)] += bt == Molecule.BONDTYPE_INCLINED ? -1 : 1;\n                success = true;\n            }\n        }\n        return success;\n    }\n    seedFromPerspective(atoms, amask, z) {\n        const { mol } = this;\n        let nb = mol.numBonds;\n        let avgdist = 0, maxdist = 0;\n        let count = 0, bidx = 0;\n        for (let n = 1; n <= nb; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            if (!amask[bfr - 1] || !amask[bto - 1])\n                continue;\n            let d = norm_xy(mol.atomX(bfr) - mol.atomX(bto), mol.atomY(bfr) - mol.atomY(bto));\n            avgdist += d;\n            count++;\n            if (d > maxdist) {\n                maxdist = d;\n                bidx = n;\n            }\n        }\n        if (count == 0 || bidx == 0)\n            return false;\n        avgdist /= count;\n        if (maxdist < avgdist * 1.02)\n            return false;\n        z[atoms.indexOf(mol.bondFrom(bidx))] = 1;\n        z[atoms.indexOf(mol.bondTo(bidx))] = 1;\n        return true;\n    }\n    seedFromDensity(atoms, amask, z) {\n        const { mol } = this;\n        let highIdx = 0;\n        let highCongest = 0;\n        for (let i = 0; i < atoms.length; i++) {\n            let x1 = mol.atomX(atoms[i]), y1 = mol.atomY(atoms[i]);\n            let congest = 0;\n            for (let j = 0; j < atoms.length; j++)\n                if (i != j)\n                    congest += 1.0 / (0.001 + norm2_xy(mol.atomX(atoms[j]) - x1, mol.atomY(atoms[j]) - y1));\n            if (congest > highCongest) {\n                highIdx = atoms[i];\n                highCongest = congest;\n            }\n        }\n        if (highIdx == 0)\n            return false;\n        z[atoms.indexOf(highIdx)] = 1;\n        return true;\n    }\n    normaliseHeights(z) {\n        Vec.addTo(z, -Vec.min(z));\n        let eps = Vec.max(z) * 1E-6;\n        let idx = Vec.idxSort(z);\n        let prevZ = -1;\n        let mark = 0;\n        for (let n = 0; n < idx.length; n++) {\n            if (prevZ < 0 || Math.abs(prevZ - z[idx[n]]) > eps)\n                mark++;\n            prevZ = z[idx[n]];\n            z[idx[n]] = mark;\n        }\n        Vec.addTo(z, -0.5 * (1 + Vec.max(z)));\n        return mark;\n    }\n    expandOutward(z, newZ, atoms, amask) {\n        const { mol } = this;\n        let gsz = atoms.length;\n        for (let n = 0; n < gsz; n++)\n            newZ[n] = z[n];\n        for (let n = 0; n < gsz; n++) {\n            let adj = mol.atomAdjList(atoms[n]);\n            for (let i = 0; i < adj.length; i++)\n                if (amask[adj[i] - 1])\n                    newZ[atoms.indexOf(adj[i])] += 0.1 * z[n];\n        }\n    }\n    updateCrossing(cross, atoms, z) {\n        const { mol } = this;\n        let bfr1 = mol.bondFrom(cross.bond1), bto1 = mol.bondTo(cross.bond1);\n        let bfr2 = mol.bondFrom(cross.bond2), bto2 = mol.bondTo(cross.bond2);\n        let idx1 = atoms.indexOf(bfr1), idx2 = atoms.indexOf(bto1);\n        let idx3 = atoms.indexOf(bfr2), idx4 = atoms.indexOf(bto2);\n        if (idx1 < 0 || idx2 < 0 || idx3 < 0 || idx4 < 0)\n            return;\n        let x1a = mol.atomX(bfr1), y1a = mol.atomY(bfr1), x1b = mol.atomX(bto1), y1b = mol.atomY(bto1);\n        let x2a = mol.atomX(bfr2), y2a = mol.atomY(bfr2), x2b = mol.atomX(bto2), y2b = mol.atomY(bto2);\n        let xy = GeomUtil.lineIntersect(x1a, y1a, x1b, y1b, x2a, y2a, x2b, y2b);\n        let dx1 = x1b - x1a, dy1 = y1b - y1a, dx2 = x2b - x2a, dy2 = y2b - y2a;\n        let ext1 = Math.abs(dx1) > Math.abs(dy1) ? (xy[0] - x1a) / dx1 : (xy[1] - y1a) / dy1;\n        let ext2 = Math.abs(dx2) > Math.abs(dy2) ? (xy[0] - x2a) / dx2 : (xy[1] - y2a) / dy2;\n        if (ext1 < 0 || ext1 > 1 || ext2 < 0 || ext2 > 1)\n            return;\n        let z1a = z[idx1], z1b = z[idx2], z2a = z[idx3], z2b = z[idx4];\n        let z1 = z1a + ext1 * (z1b - z1a), z2 = z2a + ext2 * (z2b - z2a);\n        cross.higher = z1 > z2 ? 1 : 2;\n    }\n}\n//# sourceMappingURL=PseudoEmbedding.js.map","import { GeomUtil } from './Geom';\nimport { DEGRAD, fltEqual, norm2_xy, norm_xy, sqr, TWOPI } from './util';\nimport { Vec } from './Vec';\nconst CACHE_SIZE = 1000;\nclass FitRotatedEllipse {\n    constructor(px, py, margin) {\n        this.px = px;\n        this.py = py;\n        this.margin = margin;\n        this.theta = 0;\n        this.stop = false;\n        this.hashKey = JSON.stringify([this.px, this.py]);\n    }\n    calculate() {\n        if (this.lookupCache())\n            return;\n        this.setupParameters();\n        if (this.stop)\n            return;\n        this.currentScore = this.calculateScore(this.cx, this.cy, this.rw, this.rh);\n        this.coarseDiscovery();\n        this.fineImprovement();\n        this.theta = -this.theta;\n        this.saveCache();\n    }\n    getSpline() {\n        return GeomUtil.createBezierEllipse(this.cx, this.cy, this.rw, this.rh, this.theta);\n    }\n    lookupCache() {\n        let hashKey = this.hashKey;\n        let look = FitRotatedEllipse.cacheMap.get(hashKey);\n        if (look) {\n            this.cx = look.cx;\n            this.cy = look.cy;\n            this.rw = look.rw;\n            this.rh = look.rh;\n            this.theta = look.theta;\n            const { cacheVal } = FitRotatedEllipse;\n            for (let n = cacheVal.length - 1; n >= 0; n--)\n                if (cacheVal[n].hashKey == hashKey) {\n                    if (n < cacheVal.length - 1) {\n                        cacheVal.push(cacheVal[n]);\n                        cacheVal.splice(n, 1);\n                    }\n                    break;\n                }\n            return true;\n        }\n        return false;\n    }\n    saveCache() {\n        let hashKey = this.hashKey;\n        const { cacheVal, cacheMap } = FitRotatedEllipse;\n        cacheVal.push(this);\n        cacheMap.set(hashKey, this);\n        while (cacheVal.length > CACHE_SIZE) {\n            cacheMap.delete(cacheVal[0].hashKey);\n            cacheVal.splice(0);\n        }\n    }\n    setupParameters() {\n        const psz = this.psz = this.px.length;\n        const invpsz = this.invpsz = 1.0 / psz;\n        this.cx = Vec.sum(this.px) * invpsz;\n        this.cy = Vec.sum(this.py) * invpsz;\n        let ptheta = new Array(psz), pdist = new Array(psz);\n        for (let n = 0; n < psz; n++) {\n            ptheta[n] = Math.atan2(this.py[n] - this.cy, this.px[n] - this.cx);\n            pdist[n] = norm_xy(this.px[n] - this.cx, this.py[n] - this.cy);\n        }\n        let order = Vec.idxSort(ptheta);\n        this.px = Vec.idxGet(this.px, order);\n        this.py = Vec.idxGet(this.py, order);\n        ptheta = Vec.idxGet(ptheta, order);\n        pdist = Vec.idxGet(pdist, order);\n        let buffX = new Array(psz), buffY = new Array(psz);\n        const rotatedScore = (ptheta, pdist, rtheta) => {\n            for (let n = 0; n < psz; n++) {\n                buffX[n] = pdist[n] * Math.cos(ptheta[n] + rtheta);\n                buffY[n] = pdist[n] * Math.sin(ptheta[n] + rtheta);\n            }\n            let scx = Vec.sum(buffX) * invpsz, scy = Vec.sum(buffY) * invpsz;\n            let devx = 0, devy = 0;\n            for (let n = 0; n < psz; n++) {\n                devx += sqr(buffX[n] - scx);\n                devy += Math.abs(buffY[n] - scy);\n            }\n            return devy / (1 + devx);\n        };\n        let bestScore = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < 360; n++) {\n            let th = n * DEGRAD;\n            let score = rotatedScore(ptheta, pdist, th);\n            if (score < bestScore) {\n                this.theta = th;\n                bestScore = score;\n            }\n        }\n        for (let dth = -1; dth <= 1; dth += 0.05) {\n            let th = this.theta + dth * DEGRAD;\n            let score = rotatedScore(ptheta, pdist, th);\n            if (score < bestScore) {\n                this.theta = th;\n                bestScore = score;\n            }\n        }\n        for (let n = 0; n < psz; n++) {\n            this.px[n] = this.cx + pdist[n] * Math.cos(ptheta[n] + this.theta);\n            this.py[n] = this.cy + pdist[n] * Math.sin(ptheta[n] + this.theta);\n        }\n        this.cx = Vec.sum(this.px) * invpsz;\n        this.cy = Vec.sum(this.py) * invpsz;\n        this.rw = this.rh = 1;\n    }\n    coarseDiscovery() {\n        const { margin } = this;\n        let deltaD = 0.1 * margin, deltaR = 0.5 * deltaD;\n        const DELTA_OPTIONS = [\n            { dx: -1, dy: 0, dw: 0, dh: 0 },\n            { dx: 1, dy: 0, dw: 0, dh: 0 },\n            { dx: 0, dy: -1, dw: 0, dh: 0 },\n            { dx: 0, dy: 1, dw: 0, dh: 0 },\n            { dx: 0, dy: 0, dw: -1, dh: 0 },\n            { dx: 0, dy: 0, dw: 1, dh: 0 },\n            { dx: 0, dy: 0, dw: 0, dh: -1 },\n            { dx: 0, dy: 0, dw: 0, dh: 1 },\n        ];\n        for (let sanity = 0; sanity < 1000; sanity++) {\n            let anything = false;\n            let bestScore = this.currentScore;\n            let bestCX = this.cx, bestCY = this.cy, bestRW = this.rw, bestRH = this.rh;\n            for (let delta of DELTA_OPTIONS) {\n                let newCX = this.cx + delta.dx * deltaD;\n                let newCY = this.cy + delta.dy * deltaD;\n                let newRW = this.rw + delta.dw * deltaR;\n                let newRH = this.rh + delta.dh * deltaR;\n                let newScore = this.calculateScore(newCX, newCY, newRW, newRH);\n                if (newScore > bestScore && !fltEqual(newScore, bestScore)) {\n                    anything = true;\n                    bestScore = newScore;\n                    bestCX = newCX;\n                    bestCY = newCY;\n                    bestRW = newRW;\n                    bestRH = newRH;\n                }\n            }\n            if (!anything)\n                break;\n            this.currentScore = bestScore;\n            this.cx = bestCX;\n            this.cy = bestCY;\n            this.rw = bestRW;\n            this.rh = bestRH;\n        }\n    }\n    fineImprovement() {\n        const { margin } = this;\n        let deltaD = 0.1 * margin, deltaR = 0.5 * deltaD;\n        const REDUCTION = 2.0 / 3;\n        const MAX_REDUCTIONS = 20;\n        for (let reduc = 0; reduc < MAX_REDUCTIONS; reduc++) {\n            let anything = false;\n            let bestScore = this.currentScore;\n            let bestCX = this.cx, bestCY = this.cy, bestRW = this.rw, bestRH = this.rh;\n            for (let dCX = -1; dCX <= 1; dCX++) {\n                let newCX = this.cx + dCX * deltaD;\n                for (let dCY = -1; dCY <= 1; dCY++) {\n                    let newCY = this.cy + dCY * deltaD;\n                    for (let dRW = -1; dRW <= 1; dRW++) {\n                        let newRW = this.rw + dRW * deltaR;\n                        for (let dRH = -1; dRH <= 1; dRH++) {\n                            let newRH = this.rh + dRH * deltaR;\n                            if (dCX == 0 && dCY == 0 && dRW == 0 && dRH == 0)\n                                continue;\n                            let newScore = this.calculateScore(newCX, newCY, newRW, newRH);\n                            if (newScore > bestScore && !fltEqual(newScore, bestScore)) {\n                                anything = true;\n                                bestScore = newScore;\n                                bestCX = newCX;\n                                bestCY = newCY;\n                                bestRW = newRW;\n                                bestRH = newRH;\n                            }\n                        }\n                    }\n                }\n            }\n            if (anything) {\n                this.currentScore = bestScore;\n                this.cx = bestCX;\n                this.cy = bestCY;\n                this.rw = bestRW;\n                this.rh = bestRH;\n            }\n            else {\n                reduc++;\n                deltaD *= REDUCTION;\n                deltaR *= REDUCTION;\n            }\n        }\n    }\n    calculateScore(cx, cy, rw, rh) {\n        const { px, py, margin } = this, psz = px.length;\n        const nseg = 24;\n        let cosTheta = 1, sinTheta = 0;\n        let incrAlpha = TWOPI / nseg;\n        let closestDSQ = Vec.numberArray(Number.POSITIVE_INFINITY, psz);\n        for (let n = 0; n < nseg; n++) {\n            let alpha = n * incrAlpha;\n            let cosAlpha = Math.cos(alpha), sinAlpha = Math.sin(alpha);\n            let dx = rw * cosAlpha * cosTheta - rh * sinAlpha * sinTheta;\n            let dy = rw * cosAlpha * sinTheta + rh * sinAlpha * cosTheta;\n            let d = norm_xy(dx, dy) + margin, eth = Math.atan2(dy, dx);\n            let x = cx + d * Math.cos(eth);\n            let y = cy + d * Math.sin(eth);\n            for (let i = 0; i < psz; i++) {\n                let ii = i == psz - 1 ? 0 : i + 1;\n                if (GeomUtil.doLineSegsIntersect(cx, cy, x, y, px[i], py[i], px[ii], py[ii]))\n                    return 0;\n            }\n            for (let i = 0; i < psz; i++)\n                closestDSQ[i] = Math.min(closestDSQ[i], norm2_xy(x - px[i], y - py[i]));\n        }\n        let proxSum = 0;\n        for (let dsq of closestDSQ)\n            proxSum += 1.0 / (1 + Math.sqrt(dsq));\n        return rw * rh + proxSum;\n    }\n}\nFitRotatedEllipse.cacheVal = [];\nFitRotatedEllipse.cacheMap = new Map();\nexport { FitRotatedEllipse };\n//# sourceMappingURL=FitRotatedEllipse.js.map","class FontData {\n    constructor() {\n        this.UNITS_PER_EM = 2048;\n        this.INV_UNITS_PER_EM = 1.0 / this.UNITS_PER_EM;\n        this.PANOSE_1 = '2 11 6 4 3 5 4 4 2 4';\n        this.ASCENT = 1638;\n        this.DESCENT = -410;\n        this.MISSING_HORZ = 2048;\n        this.MISSING_DATA = 'M256 0v1536h1536v-1536h-1536zM384 128h1280v1280h-1280v-1280z';\n        this.ASCENT_FUDGE = 0.9;\n        this.UNICODE = [\n            ' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<',\n            '=', '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n            '[', '\\\\', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\n            'x', 'y', 'z', '{', '|', '}', '~', '\\u00A0', '\\u00A1', '\\u00A2', '\\u00A3', '\\u00A4', '\\u00A5', '\\u00A6', '\\u00A7', '\\u00A8', '\\u00A9', '\\u00AA',\n            '\\u00AB', '\\u00AC', '\\u00AD', '\\u00AE', '\\u00AF', '\\u00B0', '\\u00B1', '\\u00B2', '\\u00B3', '\\u00B4', '\\u00B5', '\\u00B6', '\\u00B7', '\\u00B8', '\\u00B9',\n            '\\u00BA', '\\u00BB', '\\u00BC', '\\u00BD', '\\u00BE', '\\u00BF', '\\u00C0', '\\u00C1', '\\u00C2', '\\u00C3', '\\u00C4', '\\u00C5', '\\u00C6', '\\u00C7', '\\u00C8',\n            '\\u00C9', '\\u00CA', '\\u00CB', '\\u00CC', '\\u00CD', '\\u00CE', '\\u00CF', '\\u00D0', '\\u00D1', '\\u00D2', '\\u00D3', '\\u00D4', '\\u00D5', '\\u00D6', '\\u00D7',\n            '\\u00D8', '\\u00D9', '\\u00DA', '\\u00DB', '\\u00DC', '\\u00DD', '\\u00DE', '\\u00DF', '\\u00E0', '\\u00E1', '\\u00E2', '\\u00E3', '\\u00E4', '\\u00E5', '\\u00E6',\n            '\\u00E7', '\\u00E8', '\\u00E9', '\\u00EA', '\\u00EB', '\\u00EC', '\\u00ED', '\\u00EE', '\\u00EF', '\\u00F0', '\\u00F1', '\\u00F2', '\\u00F3', '\\u00F4', '\\u00F5',\n            '\\u00F6', '\\u00F7', '\\u00F8', '\\u00F9', '\\u00FA', '\\u00FB', '\\u00FC', '\\u00FD', '\\u00FE', '\\u037E', '\\u0384', '\\u0385', '\\u0386', '\\u0387', '\\u0388',\n            '\\u0389', '\\u038A', '\\u038C', '\\u038E', '\\u038F', '\\u0390', '\\u0391', '\\u0392', '\\u0393', '\\u0394', '\\u0395', '\\u0396', '\\u0397', '\\u0398', '\\u0399',\n            '\\u039A', '\\u039B', '\\u039C', '\\u039D', '\\u039E', '\\u039F', '\\u03A0', '\\u03A1', '\\u03A3', '\\u03A4', '\\u03A5', '\\u03A6', '\\u03A7', '\\u03A8', '\\u03A9',\n            '\\u03AA', '\\u03AB', '\\u03AC', '\\u03AD', '\\u03AE', '\\u03AF', '\\u03B0', '\\u03B1', '\\u03B2', '\\u03B3', '\\u03B4', '\\u03B5', '\\u03B6', '\\u03B7', '\\u03B8',\n            '\\u03B9', '\\u03BA', '\\u03BB', '\\u03BC', '\\u03BD', '\\u03BE', '\\u03BF', '\\u03C0', '\\u03C1', '\\u03C2', '\\u03C3', '\\u03C4', '\\u03C5', '\\u03C6', '\\u03C7',\n            '\\u03C8', '\\u03C9', '\\u03CA', '\\u03CB', '\\u03CC', '\\u03CD', '\\u03CE', '\\u2202', '\\u2206', '\\u220F', '\\u2211', '\\u2212', '\\u2215', '\\u2219', '\\u221A',\n            '\\u221E', '\\u222B', '\\u2248', '\\u2260', '\\u2264', '\\u2265'\n        ];\n        this.HORIZ_ADV_X = [\n            720, 806, 940, 1676, 1302, 2204, 1488, 550, 930, 930, 1302, 1676, 745, 930, 745, 930, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302,\n            930, 930, 1676, 1676, 1676, 1117, 2048, 1400, 1404, 1430, 1578, 1295, 1177, 1588, 1539, 862, 931, 1419, 1140, 1726, 1532, 1612, 1235, 1612, 1424,\n            1400, 1262, 1499, 1400, 2025, 1403, 1260, 1403, 930, 930, 930, 1676, 1302, 1302, 1230, 1276, 1067, 1276, 1220, 720, 1276, 1296, 562, 705, 1212, 562,\n            1992, 1296, 1243, 1276, 1276, 874, 1067, 807, 1296, 1212, 1676, 1212, 1212, 1076, 1300, 930, 1300, 1676, 720, 806, 1302, 1302, 1302, 1302, 930, 1302,\n            1302, 2048, 1117, 1320, 1676, 930, 2048, 1302, 1110, 1676, 1110, 1110, 1302, 1314, 1302, 745, 1302, 1110, 1117, 1320, 2048, 2048, 2048, 1117, 1400,\n            1400, 1400, 1400, 1400, 1400, 2016, 1430, 1295, 1295, 1295, 1295, 862, 862, 862, 862, 1588, 1532, 1612, 1612, 1612, 1612, 1612, 1676, 1612, 1499,\n            1499, 1499, 1499, 1260, 1240, 1270, 1230, 1230, 1230, 1230, 1230, 1230, 1956, 1067, 1220, 1220, 1220, 1220, 562, 562, 562, 562, 1253, 1296, 1243,\n            1243, 1243, 1243, 1243, 1676, 1243, 1296, 1296, 1296, 1296, 1212, 1276, 930, 1302, 1302, 1400, 930, 1538, 1782, 1105, 1804, 1543, 1859, 562, 1400,\n            1404, 1160, 1440, 1295, 1403, 1539, 1612, 862, 1419, 1404, 1726, 1532, 1329, 1612, 1539, 1235, 1377, 1262, 1260, 1677, 1403, 1783, 1676, 862, 1260,\n            1276, 1050, 1296, 562, 1293, 1276, 1270, 1212, 1245, 1050, 937, 1296, 1278, 562, 1212, 1212, 1310, 1212, 1030, 1243, 1305, 1280, 1040, 1291, 1016,\n            1293, 1618, 1208, 1683, 1666, 562, 1293, 1243, 1293, 1666, 1302, 1489, 1676, 1489, 1676, 740, 745, 1676, 2048, 1302, 1676, 1676, 1676, 1676\n        ];\n        this.GLYPH_DATA = [\n            '',\n            'M515 1489l-26 -1079h-170l-28 1079h224zM505 0h-204v211h204v-211z',\n            'M772 1556l-43 -579h-132l-43 579h218zM386 1556l-43 -579h-132l-43 579h218z',\n            'M1481 932h-333l-92 -376h308v-135h-343l-104 -421h-129l104 421h-270l-104 -421h-129l104 421h-298v135h333l92 376h-308v135h343l105 422h129l-105 -422h270l105 422h129l-105 -422h298v-135zM1022 934h-274l-94 -380h274z',\n            'M1160 380q0 -155 -121 -257.5t-317 -121.5v-362h-118v357q-132 1 -248 25.5t-201 63.5v198h16q19 -14 68 -40.5t95 -43.5q52 -19 121.5 -35.5t148.5 -19.5v433q-40 8 -74 15.5t-63 15.5q-163 41 -234 123.5t-71 203.5q0 148 116.5 250t325.5 119v272h118v-270 q101 -2 207 -24t178 -51v-196h-14q-75 46 -156.5 81.5t-214.5 44.5v-431q30 -5 65 -13.5t61 -13.5q149 -32 230.5 -110t81.5 -213zM604 747v413q-107 -8 -180 -58.5t-73 -140.5q0 -91 54 -137t199 -77zM971 354q0 94 -58.5 137.5t-190.5 68.5v-414q120 12 184.5 61t64.5 147 z',\n            'M884 1076q0 -224 -94.5 -333t-272.5 -109q-182 0 -275 109t-93 332q0 224 95 333t273 109q181 0 274 -110t93 -331zM1575 1489l-780 -1489h-165l780 1489h165zM2055 413q0 -224 -95 -333t-273 -109q-181 0 -274 110t-93 331q0 224 94.5 333t272.5 109q182 0 275 -109 t93 -332zM706 1076q0 172 -44.5 240t-144.5 68q-102 0 -146 -68t-44 -241t44 -240.5t146 -67.5q100 0 144.5 67.5t44.5 241.5zM1877 413q0 172 -44.5 240t-144.5 68q-102 0 -146 -68t-44 -241t44 -240.5t146 -67.5q100 0 144.5 67.5t44.5 241.5z',\n            'M792 1191q0 95 -56.5 149.5t-144.5 54.5q-92 0 -150 -61.5t-58 -150.5q0 -75 39.5 -133t170.5 -137q98 35 148.5 102.5t50.5 175.5zM986 315l-478 466q-31 -15 -62 -39.5t-62 -66.5q-28 -39 -46 -94t-18 -124q0 -146 85.5 -235.5t242.5 -89.5q93 0 184.5 45.5 t153.5 137.5zM1287 909v-96q0 -96 -25 -216t-85 -229l378 -368h-246l-229 224q-115 -142 -235 -198.5t-247 -56.5q-208 0 -345.5 121.5t-137.5 318.5q0 92 26 159t61 116q35 47 87 88.5t105 72.5q-110 72 -158.5 145t-48.5 184q0 67 26.5 127.5t79.5 110.5q50 48 130.5 78 t177.5 30q173 0 280 -87.5t107 -221.5q0 -44 -12 -99.5t-41 -99.5q-32 -49 -91 -94t-153 -77l371 -362q14 40 21 88t8 100q2 56 1.5 125t-0.5 117h195z',\n            'M386 1556l-43 -579h-136l-43 579h222z',\n            'M783 -412h-229q-177 203 -275 443t-98 541t98 541t275 443h229v-10q-81 -73 -154.5 -168.5t-136.5 -222.5q-60 -123 -97.5 -271t-37.5 -312q0 -171 36.5 -313t98.5 -270q60 -123 137 -222.5t154 -168.5v-10z',\n            'M749 572q0 -301 -98 -541t-275 -443h-229v10q77 69 154.5 168.5t136.5 222.5q62 128 98.5 270t36.5 313q0 164 -37 312t-98 271q-63 127 -136.5 222.5t-154.5 168.5v10h229q177 -203 275 -443t98 -541z',\n            'M1137 887l-64 -110l-362 213l6 -360h-129l5 360l-361 -214l-65 110l381 207l-381 207l65 110l362 -213l-6 359h129l-7 -359l363 212l64 -110l-380 -205z',\n            'M1466 572h-545v-545h-166v545h-545v160h545v545h166v-545h545v-160z',\n            'M575 285l-282 -655h-146l174 655h254z',\n            'M777 561h-624v181h624v-181z',\n            'M492 0h-239v285h239v-285z',\n            'M860 1556l-717 -1860h-173l714 1860h176z',\n            'M1167 745q0 -401 -125.5 -588.5t-389.5 -187.5q-268 0 -391.5 190t-123.5 584q0 397 125 586.5t390 189.5q268 0 391.5 -192.5t123.5 -581.5zM904 291q35 81 47.5 190.5t12.5 263.5q0 152 -12.5 264t-48.5 190q-35 77 -95.5 116t-155.5 39q-94 0 -155.5 -39t-97.5 -118 q-34 -74 -46.5 -193t-12.5 -261q0 -156 11 -261t47 -188q33 -78 93.5 -119t160.5 -41q94 0 156 39t96 118z',\n            'M1084 0h-806v152h310v998h-310v136q63 0 135 10.5t109 30.5q46 25 72.5 63.5t30.5 103.5h155v-1342h304v-152z',\n            'M1169 0h-1008v209q105 90 210.5 180t196.5 179q192 186 263 295.5t71 236.5q0 116 -76.5 181.5t-213.5 65.5q-91 0 -197 -32t-207 -98h-10v210q71 35 189.5 64t229.5 29q229 0 359 -110.5t130 -299.5q0 -85 -21.5 -158.5t-63.5 -139.5q-39 -62 -91.5 -122t-127.5 -133 q-107 -105 -221 -203.5t-213 -182.5h801v-171z',\n            'M1038 717q48 -43 79 -108t31 -168q0 -102 -37 -187t-104 -148q-75 -70 -176.5 -103.5t-222.5 -33.5q-124 0 -244 29.5t-197 64.5v209h15q85 -56 200 -93t222 -37q63 0 134 21t115 62q46 44 68.5 97t22.5 134q0 80 -25.5 132.5t-70.5 82.5q-45 31 -109 42.5t-138 11.5h-90 v166h70q152 0 242.5 63.5t90.5 185.5q0 54 -23 94.5t-64 66.5q-43 26 -92 36t-111 10q-95 0 -202 -34t-202 -96h-10v209q71 35 189.5 64.5t229.5 29.5q109 0 192 -20t150 -64q72 -48 109 -116t37 -159q0 -124 -87.5 -216.5t-206.5 -116.5v-14q48 -8 110 -33.5t105 -63.5z ',\n            'M1203 419h-221v-419h-192v419h-713v230l721 840h184v-910h221v-160zM790 579v672l-577 -672h577z',\n            'M1157 473q0 -104 -38 -199t-104 -160q-72 -70 -171.5 -107.5t-230.5 -37.5q-122 0 -235 25.5t-191 61.5v211h14q82 -52 192 -88.5t216 -36.5q71 0 137.5 20t118.5 70q44 43 66.5 103t22.5 139q0 77 -26.5 130t-73.5 85q-52 38 -126.5 53.5t-166.5 15.5q-88 0 -169.5 -12 t-140.5 -24v767h896v-175h-703v-396q43 4 88 6t78 2q121 0 212 -20.5t167 -72.5q80 -55 124 -142t44 -218z',\n            'M1191 483q0 -227 -149.5 -370.5t-366.5 -143.5q-110 0 -200 34t-159 101q-86 83 -132.5 220t-46.5 330q0 198 42.5 351t135.5 272q88 113 227 176.5t324 63.5q59 0 99 -5t81 -18v-191h-10q-28 15 -84.5 28.5t-115.5 13.5q-215 0 -343 -134.5t-149 -363.5 q84 51 165.5 77.5t188.5 26.5q95 0 167.5 -17.5t148.5 -70.5q88 -61 132.5 -154t44.5 -226zM988 475q0 93 -27.5 154t-90.5 106q-46 32 -102 42t-117 10q-85 0 -158 -20t-150 -62q-2 -22 -3 -42.5t-1 -51.5q0 -158 32.5 -249.5t89.5 -144.5q46 -44 99.5 -64.5t116.5 -20.5 q145 0 228 88.5t83 254.5z',\n            'M1173 1266l-674 -1266h-214l717 1314h-848v175h1019v-223z',\n            'M1180 415q0 -193 -150.5 -321t-378.5 -128q-242 0 -385.5 125t-143.5 320q0 124 72 224.5t203 159.5v6q-120 64 -177.5 140t-57.5 190q0 168 138 280t351 112q223 0 356 -107t133 -272q0 -101 -63 -198.5t-185 -152.5v-6q140 -60 214 -148t74 -224zM943 1142 q0 107 -82.5 170.5t-210.5 63.5q-126 0 -206.5 -60t-80.5 -162q0 -72 40.5 -124.5t122.5 -93.5q37 -18 106.5 -47t135.5 -48q99 66 137 137t38 164zM974 396q0 92 -40.5 147.5t-158.5 111.5q-47 22 -103 41t-149 53q-90 -49 -144.5 -133t-54.5 -190q0 -135 93 -223t236 -88 q146 0 233.5 75t87.5 206z',\n            'M1167 834q0 -195 -44.5 -354t-134.5 -271q-91 -114 -228 -176t-322 -62q-52 0 -98 5.5t-82 17.5v191h10q29 -15 82 -28.5t118 -13.5q221 0 346.5 132.5t145.5 365.5q-93 -56 -175 -80t-179 -24q-92 0 -166.5 18t-149.5 70q-88 61 -132.5 155t-44.5 225q0 228 150 371 t366 143q108 0 200 -33.5t161 -100.5q85 -83 131 -213.5t46 -337.5zM965 877q0 155 -32 249t-88 146q-47 45 -101 64.5t-117 19.5q-144 0 -227.5 -90t-83.5 -253q0 -95 27 -155t91 -105q45 -31 99 -41.5t120 -10.5q78 0 158 21t150 61q1 21 2.5 41.5t1.5 52.5z',\n            'M585 832h-239v285h239v-285zM585 0h-239v285h239v-285z',\n            'M585 832h-239v285h239v-285zM658 285l-282 -655h-146l174 655h254z',\n            'M1408 77l-1154 513v124l1154 513v-180l-910 -395l910 -395v-180z',\n            'M1431 782h-1186v160h1186v-160zM1431 362h-1186v160h1186v-160z',\n            'M1422 590l-1154 -513v180l910 395l-910 395v180l1154 -513v-124z',\n            'M1005 1139q0 -98 -35 -174.5t-92 -135.5q-56 -57 -129 -107t-155 -97v-225h-179v305q65 37 140.5 81t123.5 89q58 52 90 107.5t32 141.5q0 113 -76.5 168.5t-197.5 55.5q-108 0 -204.5 -34t-152.5 -69h-10v204q70 27 177.5 48.5t203.5 21.5q215 0 339.5 -104.5 t124.5 -275.5zM610 0h-204v211h204v-211z',\n            'M1870 663q0 -139 -40.5 -269t-115.5 -237h-440l-27 116q-74 -60 -142 -92t-156 -32q-168 0 -268.5 127t-100.5 355q0 227 123 362t294 135q73 0 129 -16.5t121 -49.5v48h159v-842h243q42 75 63.5 187.5t21.5 201.5q0 164 -45.5 298t-133.5 230t-218 147.5t-295 51.5 q-160 0 -292.5 -58t-227.5 -156q-96 -98 -150.5 -234.5t-54.5 -290.5q0 -165 52 -301.5t147 -233.5q99 -101 232 -152.5t290 -51.5q86 0 177.5 11t175.5 35v-142q-97 -21 -181 -28.5t-173 -7.5q-186 0 -345 63.5t-273 177.5q-115 115 -179 276t-64 356q0 185 67 344.5 t183 276.5t275 184t340 67q196 0 350 -62t260 -174t162.5 -269.5t56.5 -350.5zM1245 408v518q-63 29 -113 41.5t-107 12.5q-129 0 -202 -90t-73 -256q0 -163 58 -246.5t181 -83.5q67 0 134 31t122 73z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523z',\n            'M1323 458q0 -111 -42 -196t-113 -140q-84 -66 -184.5 -94t-255.5 -28h-528v1489h441q163 0 244 -12t155 -50q82 -43 119 -110.5t37 -161.5q0 -106 -54 -180.5t-144 -119.5v-8q151 -31 238 -132.5t87 -256.5zM990 1129q0 54 -18 91t-58 60q-47 27 -114 33.5t-166 6.5h-236 v-430h256q93 0 148 9.5t102 39.5t66.5 77.5t19.5 112.5zM1117 450q0 90 -27 143t-98 90q-48 25 -116.5 32.5t-166.5 7.5h-311v-554h262q130 0 213 13.5t136 49.5q56 39 82 89t26 129z',\n            'M1350 108q-55 -24 -99.5 -45t-116.5 -44q-61 -19 -132.5 -32.5t-157.5 -13.5q-162 0 -294.5 45.5t-230.5 142.5q-96 95 -150 241.5t-54 340.5q0 184 52 329t150 245q95 97 229.5 148t298.5 51q120 0 239.5 -29t265.5 -102v-235h-15q-123 103 -244 150t-259 47 q-113 0 -203.5 -36.5t-161.5 -113.5q-69 -75 -107.5 -189.5t-38.5 -264.5q0 -157 42.5 -270t109.5 -184q70 -74 163.5 -109.5t197.5 -35.5q143 0 268 49t234 147h14v-232z',\n            'M1458 743q0 -203 -88.5 -368t-235.5 -256q-102 -63 -227.5 -91t-330.5 -28h-376v1489h372q218 0 346.5 -31.5t217.5 -86.5q152 -95 237 -253t85 -375zM1251 746q0 175 -61 295t-182 189q-88 50 -187 69.5t-237 19.5h-186v-1149h186q143 0 249.5 21t195.5 78 q111 71 166.5 187t55.5 290z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176z',\n            'M1151 1313h-753v-420h647v-176h-647v-717h-198v1489h951v-176z',\n            'M1442 110q-122 -56 -266.5 -97.5t-279.5 -41.5q-174 0 -319 48t-247 144q-103 97 -159 242.5t-56 340.5q0 357 208.5 563.5t572.5 206.5q127 0 259.5 -30.5t285.5 -103.5v-235h-18q-31 24 -90 63t-116 65q-69 31 -156.5 51.5t-198.5 20.5q-250 0 -395.5 -160.5 t-145.5 -434.5q0 -289 152 -449.5t414 -160.5q96 0 191.5 19t167.5 49v365h-399v174h595v-639z',\n            'M1339 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152z',\n            'M746 387q0 -196 -119.5 -302t-320.5 -106q-48 0 -128 8.5t-134 20.5v185h11q41 -14 101 -29t123 -15q92 0 146.5 21t80.5 60q27 40 34.5 98t7.5 134v869h-315v158h513v-1102z',\n            'M1397 0h-257l-589 663l-148 -158v-505h-198v1489h198v-777l723 777h240l-665 -700z',\n            'M1142 0h-942v1489h198v-1313h744v-176z',\n            'M1526 0h-198v1283l-414 -873h-118l-411 873v-1283h-185v1489h270l397 -829l384 829h275v-1489z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1174 1039q0 -99 -34.5 -183.5t-96.5 -146.5q-77 -77 -182 -115.5t-265 -38.5h-198v-555h-198v1489h404q134 0 227 -22.5t165 -70.5q85 -57 131.5 -142t46.5 -215zM968 1034q0 77 -27 134t-82 93q-48 31 -109.5 44.5t-155.5 13.5h-196v-595h167q120 0 195 21.5t122 68.5 q47 48 66.5 101t19.5 119z',\n            'M1528 -365q-60 -15 -118.5 -21.5t-119.5 -6.5q-174 0 -279.5 95.5t-114.5 273.5q-24 -4 -46.5 -5.5t-43.5 -1.5q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5 q91 -100 139.5 -245t48.5 -329q0 -273 -111.5 -460t-299.5 -262q4 -114 54 -177t182 -63q41 0 97.5 12.5t80.5 22.5h27v-182zM1292 744q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1432 0h-257l-498 592h-279v-592h-198v1489h417q135 0 225 -17.5t162 -62.5q81 -51 126.5 -128.5t45.5 -196.5q0 -161 -81 -269.5t-223 -163.5zM969 1070q0 64 -22.5 113.5t-74.5 83.5q-43 29 -102 40.5t-139 11.5h-233v-562h200q94 0 164 16.5t119 61.5q45 42 66.5 96.5 t21.5 138.5z',\n            'M1282 425q0 -87 -40.5 -172t-113.5 -144q-80 -64 -186.5 -100t-256.5 -36q-161 0 -289.5 30t-261.5 89v248h14q113 -94 261 -145t278 -51q184 0 286.5 69t102.5 184q0 99 -48.5 146t-147.5 73q-75 20 -162.5 33t-185.5 33q-198 42 -293.5 143.5t-95.5 264.5 q0 187 158 306.5t401 119.5q157 0 288 -30t232 -74v-234h-14q-85 72 -223.5 119.5t-283.5 47.5q-159 0 -255.5 -66t-96.5 -170q0 -93 48 -146t169 -81q64 -14 182 -34t200 -41q166 -44 250 -133t84 -249z',\n            'M1262 1313h-532v-1313h-198v1313h-532v176h1262v-176z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891z',\n            'M1374 1489l-542 -1489h-264l-542 1489h212l467 -1310l467 1310h202z',\n            'M1933 1489l-387 -1489h-223l-313 1236l-306 -1236h-218l-394 1489h203l313 -1238l308 1238h201l311 -1250l311 1250h194z',\n            'M1336 1489l-514 -736l513 -753h-229l-406 613l-416 -613h-216l519 744l-507 745h228l401 -605l410 605h217z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211z',\n            'M1288 0h-1162v184l913 1129h-879v176h1106v-179l-922 -1134h944v-176z',\n            'M759 -392h-520v1948h520v-143h-346v-1662h346v-143z',\n            'M960 -304h-173l-717 1860h176z',\n            'M691 -392h-520v143h346v1662h-346v143h520v-1948z',\n            'M1490 684h-198l-455 627l-454 -629h-197l589 807h126z',\n            'M1306 -300h-1310v120h1310v-120z',\n            'M762 1302h-149l-273 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5z',\n            'M1168 567q0 -140 -39.5 -252t-106.5 -188q-71 -79 -156 -118.5t-187 -39.5q-95 0 -166 22.5t-140 60.5l-12 -52h-176v1556h188v-556q79 65 168 106.5t200 41.5q198 0 312.5 -152t114.5 -429zM974 562q0 200 -66 303.5t-213 103.5q-82 0 -166 -35.5t-156 -91.5v-640 q80 -36 137.5 -50t130.5 -14q156 0 244.5 102.5t88.5 321.5z',\n            'M1011 70q-94 -45 -178.5 -70t-179.5 -25q-121 0 -222 35.5t-173 107.5q-73 72 -113 182t-40 257q0 274 150.5 430t397.5 156q96 0 188.5 -27t169.5 -66v-209h-10q-86 67 -177.5 103t-178.5 36q-160 0 -252.5 -107.5t-92.5 -315.5q0 -202 90.5 -310.5t254.5 -108.5 q57 0 116 15t106 39q41 21 77 44.5t57 40.5h10v-207z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -18.5t143 -57.5v484h188v-1556zM903 275v641q-76 34 -136 47t-131 13q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640z',\n            'M786 1374h-10q-31 9 -81 18.5t-88 9.5q-121 0 -175.5 -53.5t-54.5 -193.5v-38h339v-158h-333v-959h-188v959h-127v158h127v37q0 199 99 305.5t286 106.5q63 0 113.5 -6t92.5 -14v-172z',\n            'M1091 127q0 -284 -129 -417t-397 -133q-89 0 -173.5 12.5t-166.5 35.5v192h10q46 -18 146 -44.5t200 -26.5q96 0 159 23t98 64q35 39 50 94t15 123v102q-85 -68 -162.5 -101.5t-197.5 -33.5q-200 0 -317.5 144.5t-117.5 407.5q0 144 40.5 248.5t110.5 180.5 q65 71 158 110.5t185 39.5q97 0 162.5 -19.5t138.5 -59.5l12 48h176v-990zM903 307v609q-75 34 -139.5 48.5t-128.5 14.5q-155 0 -244 -104t-89 -302q0 -188 66 -285t219 -97q82 0 164.5 31.5t151.5 84.5z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1556h188v-563q88 73 182 114t193 41q181 0 276 -109t95 -314v-725z',\n            'M387 1304h-212v195h212v-195zM375 0h-188v1117h188v-1117z',\n            'M533 1304h-212v195h212v-195zM521 -27q0 -196 -100 -296t-268 -100q-40 0 -105.5 8t-109.5 20v179h10q28 -11 75.5 -25t92.5 -14q72 0 116 20t66 60t28.5 96.5t6.5 137.5v900h-233v158h421v-1144z',\n            'M1199 0h-248l-448 489l-122 -116v-373h-188v1556h188v-998l543 559h237l-519 -516z',\n            'M375 0h-188v1556h188v-1556z',\n            'M1815 0h-188v636q0 72 -6.5 139t-27.5 107q-23 43 -66 65t-124 22q-79 0 -158 -39.5t-158 -100.5q3 -23 5 -53.5t2 -60.5v-715h-188v636q0 74 -6.5 140.5t-27.5 106.5q-23 43 -66 64.5t-124 21.5q-77 0 -154.5 -38t-154.5 -97v-834h-188v1117h188v-124q88 73 175.5 114 t186.5 41q114 0 193.5 -48t118.5 -133q114 96 208 138.5t201 42.5q184 0 271.5 -111.5t87.5 -311.5v-725z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-725z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z',\n            'M1168 572q0 -136 -39 -248.5t-110 -190.5q-66 -74 -155.5 -114.5t-189.5 -40.5q-87 0 -157.5 19t-143.5 59v-468h-188v1529h188v-117q75 63 168.5 105.5t199.5 42.5q202 0 314.5 -152.5t112.5 -423.5zM974 567q0 202 -69 302t-212 100q-81 0 -163 -35t-157 -92v-633 q80 -36 137.5 -49t130.5 -13q157 0 245 106t88 314z',\n            'M1091 -412h-188v538q-87 -75 -173 -111.5t-186 -36.5q-199 0 -317.5 153.5t-118.5 423.5q0 144 41.5 254.5t109.5 185.5q66 73 155 113t188 40q90 0 159.5 -20t141.5 -59l12 48h176v-1529zM903 284v632q-78 35 -138 49t-130 14q-163 0 -248 -110.5t-85 -304.5 q0 -196 68.5 -301.5t215.5 -105.5q82 0 164 35.5t153 91.5z',\n            'M882 912h-10q-42 10 -81.5 14.5t-93.5 4.5q-87 0 -168 -38.5t-156 -99.5v-793h-188v1117h188v-165q112 90 197.5 127.5t174.5 37.5q49 0 71 -2.5t66 -9.5v-193z',\n            'M983 322q0 -153 -126.5 -251t-345.5 -98q-124 0 -227.5 29.5t-173.5 64.5v211h10q89 -67 198 -106.5t209 -39.5q124 0 194 40t70 126q0 66 -38 100t-146 58q-40 9 -104.5 21t-117.5 26q-147 39 -208.5 114.5t-61.5 185.5q0 69 28.5 130t86.5 109q56 47 142.5 74.5 t193.5 27.5q100 0 202.5 -24.5t170.5 -59.5v-201h-10q-72 53 -175 89.5t-202 36.5q-103 0 -174 -39.5t-71 -117.5q0 -69 43 -104q42 -35 136 -57q52 -12 116.5 -24t107.5 -22q131 -30 202 -103q71 -74 71 -196z',\n            'M765 10q-53 -14 -115.5 -23t-111.5 -9q-171 0 -260 92t-89 295v594h-127v158h127v321h188v-321h388v-158h-388v-509q0 -88 4 -137.5t28 -92.5q22 -40 60.5 -58.5t117.5 -18.5q46 0 96 13.5t72 22.5h10v-169z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117z',\n            'M1151 1117l-452 -1117h-189l-449 1117h204l346 -889l343 889h197z',\n            'M1590 1117l-291 -1117h-174l-287 861l-285 -861h-173l-294 1117h196l205 -865l279 865h155l286 -865l194 865h189z',\n            'M1152 0h-237l-317 429l-319 -429h-219l436 557l-432 560h237l315 -422l316 422h220l-439 -550z',\n            'M1151 1117l-652 -1529h-201l208 466l-445 1063h204l343 -828l346 828h197z',\n            'M995 0h-902v139l651 821h-637v157h871v-134l-654 -824h671v-159z',\n            'M1113 -392h-150q-179 0 -290.5 99.5t-111.5 287.5v149q0 169 -83 264.5t-254 95.5h-51v156h51q171 0 254 95.5t83 264.5v149q0 188 111.5 287.5t290.5 99.5h150v-138h-114q-136 0 -197.5 -63t-61.5 -203v-175q0 -139 -77 -233.5t-214 -149.5v-24q137 -55 214 -149.5 t77 -233.5v-175q0 -140 61.5 -203t197.5 -63h114v-138z',\n            'M552 -392h-174v1948h174v-1948z',\n            'M1127 504h-51q-171 0 -254 -95.5t-83 -264.5v-149q0 -188 -111.5 -287.5t-290.5 -99.5h-150v138h114q136 0 197.5 63t61.5 203v175q0 139 77 233.5t214 149.5v24q-137 55 -214 149.5t-77 233.5v175q0 140 -61.5 203t-197.5 63h-114v138h150q179 0 290.5 -99.5 t111.5 -287.5v-149q0 -169 83 -264.5t254 -95.5h51v-156z',\n            'M1489 927q-2 -99 -22.5 -195t-65.5 -171q-46 -77 -111 -121t-165 -44q-94 0 -167 39.5t-157 141.5q-102 125 -148 157t-96 32q-94 0 -144 -87.5t-59 -283.5h-167q2 100 22.5 194.5t64.5 171.5q43 74 112 119.5t165 45.5q93 0 166.5 -38.5t158.5 -142.5q80 -98 131 -143.5 t112 -45.5q103 0 151.5 101t51.5 270h167z',\n            '',\n            'M505 1278h-204v211h204v-211zM515 0h-224l26 1079h170z',\n            'M1120 74q-71 -30 -161 -53.5t-194 -26.5v-355h-118v359q-227 21 -357.5 165t-130.5 394q0 242 133.5 391.5t354.5 171.5v355h118v-351q104 -3 197 -25t158 -53v-203h-11q-55 44 -142 85t-202 50v-839q120 10 206.5 52.5t137.5 83.5h11v-201zM647 142v834 q-135 -20 -216 -125t-81 -294q0 -181 76 -286t221 -129z',\n            'M1163 0h-1026v207q118 32 169.5 126.5t51.5 279.5h-176v138h176v310q0 200 126.5 328.5t331.5 128.5q105 0 181 -17t140 -34v-206h-10q-62 42 -138 66t-162 24q-140 0 -209.5 -82.5t-69.5 -226.5v-291h415v-138h-415v-61q0 -126 -62 -219.5t-160 -150.5v-11h837v-171z ',\n            'M1168 257l-110 -110l-236 234q-44 -26 -81 -37t-89 -11q-46 0 -89.5 12.5t-79.5 35.5l-236 -236l-109 113l233 234q-23 37 -35 81.5t-12 87.5q0 52 11 88.5t37 79.5l-234 237l111 110l235 -235q36 23 79.5 35.5t88.5 12.5q44 0 88 -12t81 -35l234 234l113 -109l-235 -237 q24 -38 36 -79.5t12 -89.5q0 -45 -12.5 -89t-35.5 -80zM832 661q0 73 -52.5 129t-127.5 56q-73 0 -126.5 -55t-53.5 -130q0 -74 52.5 -129.5t127.5 -55.5q73 0 126.5 54.5t53.5 130.5z',\n            'M1191 1489l-448 -831v-94h372v-138h-370v-426h-188v426h-370v138h372v73l-451 852h212l332 -659l336 659h203z',\n            'M552 758h-174v798h174v-798zM552 -392h-174v798h174v-798z',\n            'M1128 601q0 -106 -59 -187t-158 -136v-7q97 -46 141 -118.5t44 -162.5q0 -77 -33 -146t-98 -119q-72 -56 -169 -83t-221 -27q-87 0 -170.5 13.5t-175.5 44.5v194h10q79 -37 169 -62t198 -25q134 0 215 48.5t81 135.5q0 56 -19.5 88.5t-64.5 57.5q-41 23 -113 41.5 t-154 38.5q-214 52 -296 133q-83 81 -83 210q0 98 57 182.5t159 141.5v7q-101 48 -143 121t-42 162q0 81 32 146.5t99 117.5q64 50 163.5 79t227.5 29q87 0 171 -14t175 -43v-194h-10q-58 27 -152.5 57t-215.5 30q-127 0 -211.5 -46t-84.5 -133q0 -57 21.5 -92.5t64.5 -58.5 t109 -41.5t157 -39.5q200 -46 290 -125q89 -79 89 -218zM881 399q28 33 43 65.5t15 90.5q0 51 -16.5 86t-45.5 58q-28 24 -67 39.5t-83 27.5q-39 11 -85.5 21.5t-116.5 30.5q-18 -9 -49 -31.5t-53 -46.5q-24 -26 -43 -69t-19 -92q0 -50 15.5 -85t44.5 -59q27 -23 67.5 -39 t84.5 -27q38 -10 86 -22t115 -31q20 11 53 34.5t54 48.5z',\n            'M958 1304h-199v195h199v-195zM545 1304h-199v195h199v-195z',\n            'M1889 655q0 -358 -253.5 -611.5t-611.5 -253.5t-611.5 253.5t-253.5 611.5t253.5 611.5t611.5 253.5t611.5 -253.5t253.5 -611.5zM1773 655q0 310 -219.5 532t-529.5 222t-529.5 -222t-219.5 -532t219.5 -532t529.5 -222t529.5 222t219.5 532zM1375 258 q-86 -39 -165.5 -58.5t-157.5 -19.5q-227 0 -359 123t-132 357q0 225 134.5 354t356.5 129q89 0 175 -24t148 -52v-181h-16q-54 40 -138.5 75t-173.5 35q-142 0 -221.5 -85.5t-79.5 -250.5q0 -159 76.5 -246t224.5 -87q83 0 161.5 29t150.5 81h16v-179z',\n            'M944 554h-170v94q-28 -20 -52.5 -38.5t-68.5 -37.5q-45 -20 -85.5 -30.5t-113.5 -10.5q-128 0 -215.5 85t-87.5 217q0 106 46.5 173.5t123.5 103.5q78 36 197.5 51.5t255.5 21.5v18q0 53 -18 85t-51 51q-34 18 -77.5 23t-91.5 5q-84 0 -168 -24t-123 -38h-14v172 q45 13 137 29t169 16q217 0 312 -84.5t95 -243.5v-638zM774 796v245q-69 -4 -160.5 -12t-145.5 -23q-64 -18 -103 -56.5t-39 -106.5q0 -76 45.5 -114t139.5 -38q82 0 147.5 33.5t115.5 71.5z',\n            'M1146 191l-528 419v85l528 418v-188l-357 -273l357 -273v-188zM716 162l-550 446v89l550 445v-196l-371 -294l371 -294v-196z',\n            'M1456 57h-171v545h-1075v160h1246v-705z',\n            'M777 561h-624v181h624v-181z',\n            'M1889 655q0 -358 -253.5 -611.5t-611.5 -253.5t-611.5 253.5t-253.5 611.5t253.5 611.5t611.5 253.5t611.5 -253.5t253.5 -611.5zM1773 655q0 310 -219.5 532t-529.5 222t-529.5 -222t-219.5 -532t219.5 -532t529.5 -222t529.5 222t219.5 532zM1581 215h-223l-331 355 h-162v-355h-165v915h312q94 0 155 -8t120 -39q63 -34 92.5 -82.5t29.5 -121.5q0 -97 -56.5 -161.5t-155.5 -102.5zM1229 868q0 36 -14 64t-47 46q-31 17 -66 22t-88 5h-149v-309h127q62 0 107 9.5t74 32.5q31 25 43.5 55t12.5 75z',\n            'M1306 1668h-1305l-5 120h1310v-120z',\n            'M956 1116q0 -168 -116 -284t-285 -116t-285 115.5t-116 284.5q0 168 116 284t285 116q170 0 285.5 -116t115.5 -284zM791 1116q0 102 -67 171.5t-169 69.5t-169 -69.5t-67 -171.5q0 -104 68.5 -172.5t167.5 -68.5q102 0 169 70t67 171z',\n            'M1461 179h-1246v158h540v422h-540v158h540v545h166v-545h540v-158h-540v-422h540v-158z',\n            'M967 566h-760v156q100 62 183.5 117t134.5 96q131 103 168 154.5t37 135.5q0 69 -53.5 107t-143.5 38q-89 0 -175 -30.5t-134 -61.5h-13v180q71 26 158.5 43.5t174.5 17.5q180 0 273.5 -78.5t93.5 -203.5q0 -99 -48.5 -174.5t-163.5 -165.5q-55 -43 -132.5 -94 t-143.5 -92h544v-145z',\n            'M956 817q0 -75 -33 -131.5t-89 -90.5q-57 -35 -131 -51.5t-163 -16.5q-94 0 -176.5 15t-156.5 43v179h14q41 -36 138.5 -65.5t190.5 -29.5q100 0 166.5 35.5t66.5 110.5q0 85 -59 115t-171 30h-143v141h128q112 0 165.5 38.5t53.5 106.5q0 61 -49.5 96.5t-153.5 35.5 q-77 0 -174.5 -31t-141.5 -67h-14v178q74 27 160.5 44.5t176.5 17.5q175 0 271.5 -68t96.5 -174q0 -89 -55 -146t-144 -83v-8q95 -17 160.5 -72.5t65.5 -151.5z',\n            'M963 1676l-273 -374h-149l179 374h243z',\n            'M1124 0h-178l-10 118q-59 -65 -123.5 -102t-155.5 -37q-86 0 -149.5 35t-129.5 99v-525h-188v1529h188v-838q32 -39 109.5 -80t168.5 -41q93 0 159.5 33.5t120.5 93.5v832h188v-1117z',\n            'M1106 -363h-148v1722h-214v-1722h-149v956q-206 5 -332 129t-126 328q0 207 130 323t373 116h466v-1852z',\n            'M492 511h-239v283h239v-283z',\n            'M880 -89q0 -162 -91.5 -248t-237.5 -86q-37 0 -95 7t-103 19v160h9q26 -10 70 -23t94 -13q104 0 153 39t49 127q0 29 -3 65.5t-6 61.5h153q2 -19 5 -45t3 -64z',\n            'M914 566h-615v122h234v568h-242v112q45 0 99 6.5t84 18.5q37 16 59 38t25 62h135v-805h221v-122z',\n            'M996 1025q0 -235 -122 -364.5t-315 -129.5q-201 0 -319.5 132.5t-118.5 361.5t118.5 362t319.5 133q193 0 315 -130t122 -365zM814 1025q0 172 -67.5 258t-187.5 86q-122 0 -189 -87t-67 -257t67 -256.5t189 -86.5q120 0 187.5 85.5t67.5 257.5z',\n            'M1154 608l-550 -446v196l371 294l-371 294v196l550 -445v-89zM702 610l-528 -419v188l357 273l-357 273v188l528 -418v-85z',\n            'M545 565h-165v681h-209v117q102 0 165 22t72 108h137v-928zM1410 1489l-780 -1489h-165l780 1489h165zM1857 220h-163v-220h-150v220h-465v185l466 539h149v-591h163v-133zM1548 353v400l-353 -400h353z',\n            'M545 565h-165v681h-209v117q102 0 165 22t72 108h137v-928zM1410 1489l-780 -1489h-165l780 1489h165zM1955 0h-688v148q91 69 158 121t106 89q109 103 141 157.5t32 136.5q0 70 -44 107t-120 37q-70 0 -141.5 -30t-112.5 -62h-15v179q65 27 140.5 44t152.5 17 q157 0 241.5 -79t84.5 -201q0 -93 -41 -167t-147 -168q-49 -43 -119.5 -96t-125.5 -94h498v-139z',\n            'M793 826q0 -71 -30 -127t-78 -90q-53 -37 -114.5 -53t-140.5 -16q-82 0 -153.5 15t-136.5 43v175h17q37 -35 114 -64.5t156 -29.5q84 0 139 36.5t55 108.5q0 83 -50 112.5t-141 29.5h-140v139h125q87 0 134.5 38t47.5 104q0 60 -41 95.5t-128 35.5q-66 0 -142.5 -31 t-113.5 -66h-17v175q64 27 139 44t154 17q152 0 237 -70t85 -168q0 -87 -48.5 -143.5t-125.5 -82.5v-8q80 -16 138.5 -70.5t58.5 -148.5zM1500 1489l-780 -1489h-165l780 1489h165zM1913 220h-163v-220h-150v220h-465v185l466 539h149v-591h163v-133zM1604 353v400 l-353 -400h353z',\n            'M712 1278h-204v211h204v-211zM958 40q-83 -30 -176 -50t-205 -20q-215 0 -339.5 104.5t-124.5 275.5q0 98 34.5 173t93.5 137q58 62 136.5 112.5t146.5 91.5v225h179v-305q-60 -33 -139 -81.5t-125 -88.5q-54 -47 -88 -109t-34 -140q0 -113 76.5 -168.5t197.5 -55.5 q103 0 201.5 33t155.5 70h10v-204z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM862 1675h-149l-273 374h243z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM955 2049l-273 -374h-149l179 374h243z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1033 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1119 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5 t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1005 1677h-199v195h199v-195zM592 1677h-199v195h199v-195z',\n            'M1374 0h-211l-148 415h-640l-148 -415h-201l519 1407q-89 44 -142.5 123.5t-53.5 181.5q0 143 102 240t248 97q147 0 248.5 -97t101.5 -240q0 -100 -52.5 -181.5t-141.5 -123.5zM899 1710q0 86 -57 143.5t-143 57.5t-143 -58t-57 -143q0 -86 57.5 -143.5t142.5 -57.5 q86 0 143 57.5t57 143.5zM953 585l-258 715l-259 -715h517z',\n            'M1901 0h-944v556h-524l-212 -556h-207l594 1489h1293v-176h-749v-408h749v-176h-749v-553h749v-176zM957 723v601h-219l-239 -601h458z',\n            'M1350 108q-55 -24 -99.5 -45t-116.5 -44q-11 -3 -24 -7.5t-31 -7.5q2 -19 3.5 -44.5t1.5 -48.5q0 -162 -93.5 -248t-240.5 -86q-38 0 -97.5 7t-104.5 19v162h9q26 -10 71.5 -24t95.5 -14q106 0 155 40t49 126q0 19 -1 41.5t-3 42.5q-19 -2 -40.5 -3t-39.5 -1 q-162 0 -294.5 45.5t-230.5 142.5q-96 95 -150 241.5t-54 340.5q0 184 52 329t150 245q95 97 229.5 148t298.5 51q120 0 239.5 -29t265.5 -102v-235h-15q-123 103 -244 150t-259 47q-113 0 -203.5 -36.5t-161.5 -113.5q-69 -75 -107.5 -189.5t-38.5 -264.5q0 -157 42.5 -270 t109.5 -184q70 -74 163.5 -109.5t197.5 -35.5q143 0 268 49t234 147h14v-232z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM822 1675h-149l-273 374h243z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM993 2049l-273 -374h-149l179 374h243z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM1031 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM1038 1677h-199v195h199v-195zM625 1677h-199v195h199v-195z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM568 1675h-149l-273 374h243z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM725 2049l-273 -374h-149l179 374h243z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM776 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM738 1677h-199v195h199v-195zM325 1677h-199v195h199v-195z',\n            'M1468 743q0 -203 -88.5 -368t-235.5 -256q-102 -63 -227.5 -91t-330.5 -28h-376v740h-196v143h196v606h372q218 0 347 -31.5t217 -86.5q152 -95 237 -253t85 -375zM1261 746q0 175 -61 295t-182 189q-88 50 -187 69.5t-237 19.5h-188v-436h361v-143h-361v-570h188 q143 0 249.5 21t195.5 78q111 71 166.5 187t55.5 290z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489zM1208 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5 q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM932 1675h-149l-273 374h243z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1083 2049l-273 -374h-149l179 374h243z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1136 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1207 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228 t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1307 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1289 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1108 1677h-199v195h199v-195zM695 1677h-199v195h199v-195z',\n            'M1385 216l-111 -111l-436 440l-436 -440l-111 111l440 436l-440 436l111 111l436 -440l436 440l111 -111l-440 -436z',\n            'M1498 744q0 -184 -49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-115 0 -215.5 29t-179.5 84l-159 -228h-132l205 294q-101 100 -155.5 250t-54.5 346q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q118 0 215 -27.5t179 -82.5l142 201h132 l-188 -268q101 -100 156.5 -248.5t55.5 -350.5zM1097 1260q-57 46 -129 68.5t-161 22.5q-110 0 -200 -38.5t-156 -116.5q-64 -76 -98.5 -190.5t-34.5 -261.5q0 -140 29.5 -252t87.5 -188zM1295 744q0 139 -30 253t-88 189l-664 -957q60 -45 132.5 -68t161.5 -23 q110 0 201.5 40t153.5 116q67 82 100 194.5t33 255.5z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM932 1675h-149l-273 374h243z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1073 2049l-273 -374h-149l179 374h243z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1084 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1056 1677h-199v195h199v-195zM643 1677h-199v195h199v-195z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM935 2049l-273 -374h-149l179 374h243z',\n            'M1174 787q0 -92 -35 -176.5t-95 -141.5q-78 -75 -187.5 -111t-260.5 -36h-198v-322h-198v1489h198v-270h205q133 0 230 -22.5t164 -66.5q83 -53 130 -138t47 -205zM968 782q0 72 -26 125.5t-82 88.5q-48 30 -112 42.5t-154 12.5h-196v-563h167q119 0 195 20.5t123 65.5 q44 41 64.5 92t20.5 116z',\n            'M1165 481q0 -214 -135.5 -359.5t-354.5 -145.5q-44 0 -101.5 7.5t-93.5 20.5v165h10q42 -24 91.5 -33t105.5 -9q74 0 129 29t88 78q35 52 50.5 115.5t15.5 139.5q0 166 -105.5 250.5t-303.5 84.5v150q157 0 234 59.5t77 188.5q0 35 -11 68t-41 64q-27 29 -71 46.5 t-105 17.5q-57 0 -103 -14.5t-86 -53.5q-37 -36 -59.5 -102t-22.5 -161v-1087h-188v1080q0 124 36 215.5t100 153.5q60 58 149.5 87.5t183.5 29.5q183 0 297.5 -87t114.5 -238q0 -112 -71 -201t-184 -121v-9q164 -37 259 -148.5t95 -280.5z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM738 1302h-149l-273 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM934 1676l-273 -374h-149l179 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM961 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM1038 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5 q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM926 1304h-199v195h199v-195zM513 1304h-199v195h199v-195z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM956 1630q0 -143 -102 -242t-248 -99q-144 0 -247 98.5t-103 242.5 q0 143 102 241t248 98q147 0 248.5 -98t101.5 -241zM811 1630q0 86 -58.5 145.5t-146.5 59.5t-146.5 -59t-58.5 -146t59 -146t146 -59q88 0 146.5 59t58.5 146z',\n            'M1855 559h-819q0 -114 30 -195t85 -133q52 -48 123 -70.5t157 -22.5q111 0 217.5 41.5t172.5 93.5h12v-205q-78 -35 -184.5 -64.5t-215.5 -29.5q-166 0 -284.5 52t-194.5 155q-21 -19 -67 -59t-96 -68q-63 -36 -137 -59.5t-189 -23.5q-150 0 -255.5 97t-105.5 249 q0 124 54 200.5t155 118.5q95 39 241 53t308 17v61q0 65 -23 107.5t-64 65.5q-40 23 -96 31.5t-116 8.5q-79 0 -168.5 -21t-179.5 -57h-13v191q55 15 158 34t204 19q159 0 264.5 -46.5t162.5 -137.5q69 82 170 134t226 52q217 0 342.5 -128t125.5 -379v-82zM1673 703 q-5 68 -23.5 119t-50.5 88q-34 39 -88.5 61t-133.5 22q-133 0 -223 -75t-115 -215h634zM894 298q-20 53 -30.5 119t-10.5 141q-105 -3 -201 -7.5t-178 -25.5q-79 -20 -127.5 -65.5t-48.5 -128.5q0 -95 58 -141t176 -46q99 0 195.5 43t166.5 111z',\n            'M1011 70q-33 -15 -71.5 -30.5t-67.5 -24.5q3 -19 5.5 -47.5t2.5 -56.5q0 -162 -91.5 -248t-237.5 -86q-37 0 -95 7t-103 19v160h9q26 -10 70 -23t94 -13q104 0 153 39t49 127q0 22 -1.5 45t-3.5 43q-16 -2 -30.5 -4t-39.5 -2q-121 0 -222 35.5t-173 107.5 q-73 72 -113 182t-40 257q0 274 150.5 430t397.5 156q96 0 188.5 -27t169.5 -66v-209h-10q-86 67 -177.5 103t-178.5 36q-160 0 -252.5 -107.5t-92.5 -315.5q0 -202 90.5 -310.5t254.5 -108.5q57 0 116 15t106 39q41 21 77 44.5t57 40.5h10v-207z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM759 1302h-149l-273 374h243z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM960 1676l-273 -374h-149l179 374h243z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM986 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM951 1304h-199v195h199v-195zM538 1304h-199v195h199v-195z',\n            'M375 0h-188v1117h188v-1117zM401 1302h-149l-273 374h243z',\n            'M375 0h-188v1117h188v-1117zM582 1676l-273 -374h-149l179 374h243z',\n            'M572 1297h-151l-143 267l-142 -267h-147l178 379h227zM375 0h-188v1117h188v-1117z',\n            'M557 1304h-189v195h189v-195zM194 1304h-189v195h189v-195zM375 0h-188v1117h188v-1117z',\n            'M1137 637q0 -324 -142 -496t-383 -172q-229 0 -367.5 135t-138.5 380q0 226 137 358t339 132q108 0 185.5 -26.5t163.5 -79.5q-32 112 -99.5 219t-154.5 181l-264 -162l-66 97l237 142q-84 67 -156 107.5t-165 87.5v16h295q35 -25 84 -58.5t86 -59.5l210 128l66 -97 l-186 -109q153 -147 236 -325.5t83 -397.5zM847 226q49 59 75 143.5t26 234.5q0 32 -1.5 59.5t-3.5 57.5q-75 45 -157.5 66.5t-168.5 21.5q-147 0 -231.5 -87.5t-84.5 -239.5q0 -180 84.5 -267t227.5 -87q66 0 127.5 22t106.5 76z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-725zM1075 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5 t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M732 1302h-149l-273 374h243z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M933 1676l-273 -374h-149l179 374h243z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M963 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M1038 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M928 1304h-199v195h199v-195zM515 1304h-199v195h199v-195z',\n            'M957 1022h-238v275h238v-275zM1466 572h-1256v160h1256v-160zM957 7h-238v275h238v-275z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-84 0 -155.5 21t-130.5 60l-133 -198h-110l171 256q-75 77 -116.5 190t-41.5 260q0 273 139.5 431.5t376.5 158.5q87 0 158 -22t125 -57l116 172h111l-155 -231q76 -76 118 -188t42 -264zM813 930q-37 29 -86.5 43.5t-104.5 14.5 q-155 0 -240 -110t-85 -320q0 -97 17 -171t52 -128zM946 558q0 97 -17.5 173t-51.5 130l-448 -671q39 -31 86.5 -46t106.5 -15q150 0 237 108.5t87 320.5z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM764 1302h-149l-273 374h243z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM945 1676l-273 -374h-149l179 374h243z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM985 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM955 1304h-199v195h199v-195zM542 1304h-199v195h199v-195z',\n            'M1151 1117l-652 -1529h-201l208 466l-445 1063h204l343 -828l346 828h197zM928 1676l-273 -374h-149l179 374h243z',\n            'M1168 572q0 -136 -39 -248.5t-110 -190.5q-66 -74 -155.5 -114.5t-189.5 -40.5q-87 0 -157.5 19t-143.5 59v-468h-188v1968h188v-556q75 63 168.5 105.5t199.5 42.5q202 0 314.5 -152.5t112.5 -423.5zM974 567q0 202 -69 302t-212 100q-81 0 -163 -35t-157 -92v-633 q80 -36 137.5 -49t130.5 -13q157 0 245 106t88 314z',\n            'M585 832h-239v285h239v-285zM658 285l-282 -655h-146l174 655h254z',\n            'M773 1676l-49 -384h-145l-49 384h243z',\n            'M765 1676l-49 -384h-128l-49 384h226zM1048 1304h-191v195h191v-195zM447 1304h-191v195h191v-195z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM250 1489l-49 -384h-145l-49 384h243z',\n            'M585 832h-239v285h239v-285z',\n            'M1424 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1582 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489zM243 1489l-49 -384h-145l-49 384h243z',\n            'M968 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1501 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1483 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1537 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1751 0h-576v387q60 38 119.5 82t103.5 101q45 59 71 138.5t26 185.5q0 206 -127 330.5t-347 124.5t-347 -124.5t-127 -330.5q0 -106 26 -185.5t71 -138.5q45 -57 104 -101t119 -82v-387h-576v174h410v124q-157 90 -258.5 246t-101.5 350q0 276 187.5 451t492.5 175 t492.5 -175t187.5 -451q0 -194 -101.5 -350t-258.5 -246v-124h410v-174zM243 1489l-49 -384h-145l-49 384h243z',\n            'M375 0h-188v1117h188v-1117zM379 1676l-56 -384h-84l-56 384h196zM615 1304h-171v195h171v-195zM118 1304h-171v195h171v-195z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523z',\n            'M1323 458q0 -111 -42 -196t-113 -140q-84 -66 -184.5 -94t-255.5 -28h-528v1489h441q163 0 244 -12t155 -50q82 -43 119 -110.5t37 -161.5q0 -106 -54 -180.5t-144 -119.5v-8q151 -31 238 -132.5t87 -256.5zM990 1129q0 54 -18 91t-58 60q-47 27 -114 33.5t-166 6.5h-236 v-430h256q93 0 148 9.5t102 39.5t66.5 77.5t19.5 112.5zM1117 450q0 90 -27 143t-98 90q-48 25 -116.5 32.5t-166.5 7.5h-311v-554h262q130 0 213 13.5t136 49.5q56 39 82 89t26 129z',\n            'M1162 1313h-764v-1313h-198v1489h962v-176z',\n            'M1414 0h-1388l562 1489h264zM1147 168l-432 1147l-431 -1147h863z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176z',\n            'M1288 0h-1162v184l913 1129h-879v176h1106v-179l-922 -1134h944v-176z',\n            'M1339 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1120 713h-627v179h627v-179z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152z',\n            'M1397 0h-257l-589 663l-148 -158v-505h-198v1489h198v-777l723 777h240l-665 -700z',\n            'M1378 0h-213l-468 1285l-468 -1285h-203l556 1489h240z',\n            'M1526 0h-198v1283l-414 -873h-118l-411 873v-1283h-185v1489h270l397 -829l384 829h275v-1489z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489z',\n            'M1215 1313h-1101v176h1101v-176zM1163 729h-997v176h997v-176zM1215 0h-1101v176h1101v-176z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1339 0h-198v1313h-743v-1313h-198v1489h1139v-1489z',\n            'M1174 1039q0 -99 -34.5 -183.5t-96.5 -146.5q-77 -77 -182 -115.5t-265 -38.5h-198v-555h-198v1489h404q134 0 227 -22.5t165 -70.5q85 -57 131.5 -142t46.5 -215zM968 1034q0 77 -27 134t-82 93q-48 31 -109.5 44.5t-155.5 13.5h-196v-595h167q120 0 195 21.5t122 68.5 q47 48 66.5 101t19.5 119z',\n            'M1280 0h-1162v184l620 600l-600 526v179h1096v-176h-832l586 -506v-26l-630 -605h922v-176z',\n            'M1262 1313h-532v-1313h-198v1313h-532v176h1262v-176z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211z',\n            'M1572 755q0 -140 -44.5 -248.5t-123.5 -181.5q-85 -79 -207 -125.5t-260 -49.5v-166h-197v166q-134 3 -257 48t-210 127q-79 74 -123.5 182t-44.5 248q0 136 43 238t119 178q81 81 202.5 128t270.5 51v155h197v-155q148 -3 271 -52t202 -127q75 -73 118.5 -177t43.5 -239 zM1366 763q0 99 -32 182t-91 140q-58 56 -129 82t-177 28v-890q94 2 171 30.5t127 75.5q65 60 98 147t33 205zM740 305v890q-106 -1 -177 -28t-129 -82t-90.5 -140t-32.5 -182q0 -112 33.5 -203t97.5 -149q49 -45 126.5 -75t171.5 -31z',\n            'M1336 1489l-514 -736l513 -753h-229l-406 613l-416 -613h-216l519 744l-507 745h228l401 -605l410 605h217z',\n            'M1604 910q0 -157 -40.5 -264.5t-117.5 -174.5q-80 -69 -192.5 -104t-263.5 -45v-322h-197v322q-154 11 -267 47t-188 102q-78 69 -118.5 176t-40.5 263v579h198v-602q0 -109 29.5 -180t81.5 -115q53 -45 130 -68.5t175 -30.5v996h197v-996q97 8 175 30.5t131 68.5 q56 49 83 115.5t27 179.5v602h198v-579z',\n            'M1568 0h-576v387q60 38 119.5 82t103.5 101q45 59 71 138.5t26 185.5q0 206 -127 330.5t-347 124.5t-347 -124.5t-127 -330.5q0 -106 26 -185.5t71 -138.5q45 -57 104 -101t119 -82v-387h-576v174h410v124q-157 90 -258.5 246t-101.5 350q0 276 187.5 451t492.5 175 t492.5 -175t187.5 -451q0 -194 -101.5 -350t-258.5 -246v-124h410v-174z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM738 1677h-199v195h199v-195zM325 1677h-199v195h199v-195z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM939 1677h-199v195h199v-195zM526 1677h-199v195h199v-195z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -22t143 -61v52h188v-1117zM903 275v636q-76 34 -136 49.5t-131 15.5q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5zM743 1676l-49 -384h-145l-49 384h243z',\n            'M1006 64q-107 -48 -210 -69t-218 -21q-79 0 -161 16t-152 56q-69 39 -112.5 102.5t-43.5 157.5q0 96 56.5 168t177.5 110v7q-91 24 -145 90t-54 158q0 89 47.5 147.5t112.5 92.5q64 33 145 49t160 16q98 0 180 -16.5t172 -44.5v-207h-13q-66 51 -163.5 79t-197.5 28 q-45 0 -84 -5.5t-81 -25.5q-35 -15 -60.5 -48.5t-25.5 -77.5q0 -61 28 -95t76 -49q45 -14 97 -15.5t105 -1.5h111v-166h-158q-62 0 -112 -4.5t-92 -21.5q-41 -17 -65.5 -54t-24.5 -96q0 -53 26 -90t67 -58q37 -19 87.5 -29t106.5 -10q102 0 218 36t187 98h13v-206zM721 1676 l-49 -384h-145l-49 384h243z',\n            'M1119 -412h-188v1048q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-1137zM802 1676l-49 -384h-145l-49 384h243z',\n            'M375 0h-188v1117h188v-1117zM403 1676l-49 -384h-145l-49 384h243z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM760 1676l-49 -384h-128l-49 384h226zM1043 1304h-191 v195h191v-195zM442 1304h-191v195h191v-195z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -22t143 -61v52h188v-1117zM903 275v636q-76 34 -136 49.5t-131 15.5q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5z',\n            'M1165 444q0 -202 -134.5 -334t-339.5 -132q-79 0 -167 22t-151 64v-476h-188v1490q0 224 126.5 351t349.5 127q90 0 164.5 -21.5t133.5 -67.5q57 -43 91 -112t34 -160q0 -127 -69.5 -221.5t-196.5 -131.5v-17q159 -26 253 -125.5t94 -255.5zM971 449q0 89 -34.5 144.5 t-92.5 86.5q-59 32 -132 43t-146 11h-36v160h36q66 0 131 14.5t104 44.5q46 34 68.5 83t22.5 134q0 112 -69 170t-178 58q-73 0 -125 -26.5t-85 -70.5q-32 -44 -47 -102.5t-15 -120.5v-862q66 -38 141 -53.5t147 -15.5q149 0 229.5 78.5t80.5 223.5z',\n            'M1151 1117l-457 -1061v-468h-188v468l-445 1061h204l343 -828l346 828h197z',\n            'M1139 551q0 -272 -138.5 -427t-376.5 -155q-241 0 -379.5 151.5t-138.5 413.5q0 141 43 239.5t107 162.5q69 72 159 113t182 58q-76 63 -166 130.5t-192 139.5v179h810v-158h-561v-10q68 -46 179 -124t204 -162q150 -136 209 -261.5t59 -289.5zM945 551q0 135 -55 249 t-165 200q-66 -8 -138.5 -32t-138.5 -77q-63 -50 -105.5 -137t-42.5 -214q0 -201 85 -305t241 -104q153 0 236 105.5t83 314.5z',\n            'M1006 64q-107 -48 -210 -69t-218 -21q-79 0 -161 16t-152 56q-69 39 -112.5 102.5t-43.5 157.5q0 96 56.5 168t177.5 110v7q-91 24 -145 90t-54 158q0 89 47.5 147.5t112.5 92.5q64 33 145 49t160 16q98 0 180 -16.5t172 -44.5v-207h-13q-66 51 -163.5 79t-197.5 28 q-45 0 -84 -5.5t-81 -25.5q-35 -15 -60.5 -48.5t-25.5 -77.5q0 -61 28 -95t76 -49q45 -14 97 -15.5t105 -1.5h111v-166h-158q-62 0 -112 -4.5t-92 -21.5q-41 -17 -65.5 -54t-24.5 -96q0 -53 26 -90t67 -58q37 -19 87.5 -29t106.5 -10q102 0 218 36t187 98h13v-206z',\n            'M922 75q32 -40 46 -85.5t14 -85.5q0 -84 -45 -168.5t-112 -147.5h-179v14q90 79 128 138.5t38 128.5q0 57 -30.5 95t-77.5 38h-145q-229 0 -340 116t-111 345q0 140 46 268t124 247q75 112 173.5 214.5t206.5 196.5v9h-460v158h744v-135q-117 -78 -231.5 -181 t-204.5 -223q-89 -117 -146 -257t-57 -283q0 -34 3 -70t15 -76q10 -38 34.5 -75.5t63.5 -61.5q36 -22 96.5 -24.5t116.5 -2.5h86q71 0 122 -26t82 -66z',\n            'M1119 -412h-188v1048q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-1137z',\n            'M1141 768q0 -190 -23 -316.5t-59 -210.5q-58 -135 -163 -203.5t-257 -68.5t-257 68.5t-163 203.5q-37 84 -59.5 210.5t-22.5 316.5q0 174 22.5 305.5t60.5 214.5q57 130 162.5 199t256.5 69t256.5 -69t162.5 -199q37 -84 60 -215t23 -305zM952 858q-4 143 -28.5 250 t-56.5 161q-41 70 -95 98.5t-133 28.5t-133 -28.5t-95 -98.5q-34 -55 -57.5 -161.5t-27.5 -249.5h626zM952 697h-626q0 -142 23 -258.5t59 -178.5q40 -69 96 -100t135 -31t135 31t96 100q36 62 59 178.5t23 258.5z',\n            'M375 0h-188v1117h188v-1117z',\n            'M1192 0h-248l-451 489l-112 -109v-380h-188v1117h188v-550l384 417q72 79 135.5 107t126.5 28q28 0 58 -1t37 -1v-166h-11q-16 2 -39.5 3t-36.5 1q-47 0 -85.5 -23.5t-67.5 -56.5l-251 -271z',\n            'M1151 0h-205l-328 829l-361 -829h-196l465 1056l-215 500h211z',\n            'M1125 0h-186v118q-74 -78 -141.5 -108.5t-145.5 -30.5q-75 0 -135 27t-144 107v-525h-188v1529h188v-838q32 -39 111 -80t170 -41q93 0 161 33.5t122 93.5v832h188v-1117z',\n            'M1151 1117l-452 -1117h-189l-449 1117h204l346 -889l343 889h197z',\n            'M1041 -96q0 -85 -45.5 -169t-111.5 -147h-180v14q92 79 129.5 139t37.5 128q0 55 -29 94t-75 39h-140q-140 0 -232.5 27t-155.5 84q-66 60 -100.5 135.5t-34.5 163.5q0 78 25 144t73 119q44 49 112.5 83.5t144.5 53.5v11q-125 28 -200 110.5t-75 186.5q0 83 43.5 150.5 t133.5 125.5v6h-228v154h824v-158h-256q-68 0 -122.5 -14.5t-102.5 -48.5q-45 -32 -72 -83t-27 -118q0 -79 32.5 -128t83.5 -75q45 -23 104 -34t139 -11h170v-165h-295q-66 0 -118.5 -20t-99.5 -59q-43 -37 -68.5 -90t-25.5 -112q0 -102 37.5 -159t101.5 -82 q63 -25 139.5 -28.5t166.5 -3.5h28q68 0 119.5 -23.5t84.5 -60.5q31 -35 48 -82.5t17 -96.5z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z',\n            'M1120 0h-188v955h-559v-955h-188v1117h935v-1117z',\n            'M1172 577q0 -258 -138.5 -428.5t-360.5 -170.5q-65 0 -146.5 18t-153.5 61v-469h-188v1058q0 123 35.5 215.5t101.5 158.5q62 62 155.5 95t195.5 33q243 0 371 -147t128 -424zM978 565q0 218 -80 320t-226 102q-158 0 -228.5 -96t-70.5 -278v-403q73 -34 132.5 -48.5 t134.5 -14.5q162 0 250 111t88 307z',\n            'M1018 -96q0 -87 -47 -172t-109 -144h-177v14q86 75 124.5 135.5t38.5 131.5q0 54 -30 93.5t-75 39.5h-92q-117 0 -216 30t-174 97q-73 66 -114.5 170t-41.5 250q0 270 155.5 432t414.5 162q84 0 164 -18.5t147 -45.5v-211h-12q-94 62 -172.5 87t-146.5 25 q-166 0 -260.5 -119t-94.5 -312q0 -112 28.5 -183t78.5 -116q50 -44 114.5 -63.5t139.5 -19.5h100q115 0 186 -76.5t71 -186.5z',\n            'M1137 558q0 -281 -140.5 -435t-373.5 -154q-241 0 -379 158t-138 431q0 275 141 432.5t378 157.5q55 0 108 -11t82 -20h480v-165h-288q62 -73 96 -170t34 -224zM943 558q0 215 -82 322t-236 107q-161 0 -243 -112t-82 -317q0 -209 83.5 -318t239.5 -109q152 0 236 107.5 t84 319.5z',\n            'M1006 952h-404v-952h-188v952h-404v165h996v-165z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710z',\n            'M1514 576q0 -259 -171.5 -417t-440.5 -173v-398h-187v398q-130 6 -240.5 46.5t-191.5 109.5q-85 74 -132 172t-47 232q0 159 59 296t192 275h229v-17q-136 -99 -210 -232t-74 -300q0 -189 112.5 -304t301.5 -121v1000q33 2 70.5 2.5t76.5 0.5q304 0 478.5 -149.5 t174.5 -420.5zM1319 586q0 184 -112 293.5t-305 109.5v-846q206 10 311.5 126t105.5 317z',\n            'M1160 -412h-213l-346 619l-350 -619h-203l444 770l-433 759h213l335 -600l339 600h203l-433 -751z',\n            'M1507 446q0 -114 -48 -198t-127 -137q-82 -55 -182 -82.5t-215 -32.5v-408h-187v408q-115 6 -214.5 32t-182.5 83q-80 54 -127.5 137.5t-47.5 197.5v671h188v-612q0 -113 37.5 -180.5t89.5 -102.5q56 -38 123 -53t134 -19v967h187v-967q67 5 134 19t123 53 q59 40 93 101.5t34 181.5v612h188v-671z',\n            'M1553 503q0 -96 -23.5 -192.5t-74.5 -171.5q-55 -80 -133.5 -124.5t-193.5 -44.5q-96 0 -177 49.5t-118 116.5h-6q-39 -68 -113 -117t-176 -49q-113 0 -194.5 46.5t-132.5 122.5t-74.5 171.5t-23.5 192.5q0 170 57 308.5t201 305.5h228v-17q-135 -108 -214.5 -262 t-79.5 -337q0 -66 8 -122.5t38 -119.5q26 -55 72.5 -91.5t117.5 -36.5q51 0 86.5 12.5t55.5 29.5q22 18 36.5 40t20.5 37v584h186v-584q9 -17 23 -39t35 -39q24 -19 52.5 -30t86.5 -11q70 0 117 35.5t74 92.5q25 55 36 116t11 126q0 182 -78.5 336t-215.5 263v17h228 q144 -167 201 -305.5t57 -308.5z',\n            'M557 1304h-189v195h189v-195zM194 1304h-189v195h189v-195zM375 0h-188v1117h188v-1117z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM953 1304h-199v195h199v-195zM540 1304h-199v195h199 v-195z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M743 1676l-49 -384h-145l-49 384h243z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM768 1676l-49 -384h-145l-49 384h243z',\n            'M1553 503q0 -96 -23.5 -192.5t-74.5 -171.5q-55 -80 -133.5 -124.5t-193.5 -44.5q-96 0 -177 49.5t-118 116.5h-6q-39 -68 -113 -117t-176 -49q-113 0 -194.5 46.5t-132.5 122.5t-74.5 171.5t-23.5 192.5q0 170 57 308.5t201 305.5h228v-17q-135 -108 -214.5 -262 t-79.5 -337q0 -66 8 -122.5t38 -119.5q26 -55 72.5 -91.5t117.5 -36.5q51 0 86.5 12.5t55.5 29.5q22 18 36.5 40t20.5 37v584h186v-584q9 -17 23 -39t35 -39q24 -19 52.5 -30t86.5 -11q70 0 117 35.5t74 92.5q25 55 36 116t11 126q0 182 -78.5 336t-215.5 263v17h228 q144 -167 201 -305.5t57 -308.5zM955 1676l-49 -384h-145l-49 384h243z',\n            'M1145 837q0 -164 -39 -344t-121 -303q-85 -124 -186.5 -173t-214.5 -49q-192 0 -313.5 126.5t-121.5 329.5q0 228 134.5 372.5t336.5 144.5q90 0 169.5 -26t158.5 -91q2 26 3 55.5t1 55.5q0 217 -79 318t-231 101q-78 0 -169.5 -31.5t-169.5 -86.5h-11v194 q81 44 181.5 66.5t196.5 22.5q137 0 239.5 -54.5t164.5 -178.5q42 -86 56.5 -189t14.5 -260zM942 678q-60 47 -136 74t-148 27q-141 0 -225 -91t-84 -261q0 -145 67.5 -221.5t179.5 -76.5q128 0 209.5 97t115.5 287q6 33 11.5 73t9.5 92z',\n            'M1438 0h-1388l562 1489h264zM1171 168l-432 1147l-431 -1147h863z',\n            'M1532 1315h-200v-1508h-198v1508h-592v-1508h-198v1508h-200v174h1388v-174z',\n            'M1369 -189h-1182v191l673 668l-663 631v188h1133v-176h-891l648 -601v-72l-666 -653h948v-176z',\n            'M1456 572h-1236v160h1236v-160z',\n            'M843 1489l-780 -1489h-165l780 1489h165z',\n            'M492 511h-239v283h239v-283z',\n            'M1737 1788l-880 -1939h-102l-384 993h-237v139h393l313 -821l730 1628h167z',\n            'M1887 663q0 -239 -122.5 -372.5t-329.5 -133.5q-133 0 -244 76.5t-180 222.5q-79 -151 -184.5 -225t-248.5 -74q-191 0 -304 135.5t-113 349.5q0 238 125 372t327 134q134 0 245 -77t179 -222q79 150 185.5 224.5t247.5 74.5q191 0 304 -135.5t113 -349.5zM967 729 q-63 117 -155 175.5t-188 58.5q-138 0 -216 -83.5t-78 -237.5q0 -133 63.5 -216t182.5 -83q110 0 172 48.5t119 142.5q34 57 52.5 92.5t47.5 102.5zM1718 663q0 134 -64 216.5t-182 82.5q-88 0 -152.5 -35.5t-138.5 -155.5q-30 -48 -55.5 -99.5t-44.5 -95.5 q60 -115 153.5 -174.5t189.5 -59.5q138 0 216 83t78 238z',\n            'M1168 1367h-10q-32 8 -89.5 18.5t-89.5 10.5q-129 0 -181 -61q-53 -61 -53 -210v-1123q0 -206 -104 -315q-105 -110 -293 -110q-52 0 -106.5 5.5t-103.5 15.5v178h10q33 -8 87 -18.5t88 -10.5q129 0 182 61q52 61 52 210v1123q0 204 104 315q104 110 293 110 q58 0 109 -5.5t105 -15.5v-178z',\n            'M1431 1104q-20 -194 -111 -293t-249 -99q-77 0 -147 37.5t-126 82.5q-65 52 -117 79.5t-96 27.5q-75 0 -117 -48t-70 -172h-155q23 182 112.5 280t248.5 98q72 0 143 -37t130 -83q61 -48 114.5 -77.5t98.5 -29.5q76 0 120.5 54.5t63.5 179.5h157zM1432 588 q-25 -184 -112 -281.5t-250 -97.5q-72 0 -144 37.5t-129 82.5q-39 31 -103 69t-110 38q-78 0 -121 -55t-63 -179h-157q19 192 110.5 292t249.5 100q77 0 146 -37t127 -83q35 -28 97 -67.5t116 -39.5q75 0 117 49.5t69 171.5h157z',\n            'M1431 362h-608l-104 -335h-153l104 335h-425v156h474l84 268h-558v156h606l105 335h153l-105 -335h427v-156h-476l-83 -268h559v-156z',\n            'M1408 303l-1154 483v124l1154 483v-183l-889 -362l889 -362v-183zM1408 0h-1154v160h1154v-160z',\n            'M1422 786l-1154 -483v183l889 362l-889 362v183l1154 -483v-124zM1422 0h-1154v160h1154v-160z'\n        ];\n        this.OUTLINE_X = [\n            [], [291, 301, 505, 515], [168, 211, 729, 772, 554], [195, 389, 917, 1364, 1481, 1481, 1288, 760, 312, 195],\n            [155, 604, 722, 1129.8, 1160, 1107, 722, 604, 278.5, 191.1, 162, 155], [149, 172.3, 242, 630, 1687, 1844.3, 1960, 2031.3, 2055, 2031.8, 1962, 1575, 517, 359.8, 244, 172.8],\n            [115, 149.4, 252.5, 407.6, 598, 1555, 1287, 961.3, 881, 757.5, 601, 423.5, 293, 213.5, 187], [164, 207, 343, 386], [181, 205.5, 279, 554, 783, 783, 554, 279, 205.5],\n            [147, 376, 651, 724.5, 749, 724.5, 651, 376, 147], [167, 232, 588, 717, 1073, 1137, 1137, 1073, 717, 588, 232, 167], [210, 755, 921, 1466, 1466, 921, 755, 210],\n            [147, 293, 575, 321], [153, 777, 777, 153], [253, 492, 492, 253], [-30, 143, 860, 684],\n            [137, 167.9, 260.5, 420.1, 652, 881.4, 1041.5, 1135.6, 1167, 1136.1, 1043.5, 883.9, 652, 422, 262, 168.3], [278, 1084, 1084, 780, 625, 278],\n            [161, 1169, 1169, 1106, 1073.5, 976, 821.3, 617, 387.5, 198, 161], [167, 364, 608, 830.5, 1007, 1111, 1148, 1117, 1080, 971, 821, 629, 399.5, 210, 167],\n            [77, 790, 982, 1203, 1203, 982, 798, 77], [187, 378, 613, 843.5, 1015, 1119, 1157, 1147, 251, 187],\n            [137, 183.5, 316, 475, 675, 875.1, 1041.5, 1153.6, 1191, 1046, 965, 866, 542, 315, 179.5], [154, 285, 499, 1173, 1173, 154],\n            [122, 157.9, 265.5, 433.6, 651, 859.6, 1029.5, 1142.4, 1180, 1140, 1106.8, 1007, 851.5, 651, 456.8, 300, 196.5, 162],\n            [113, 258, 340, 438, 760, 988, 1122.5, 1167, 1121, 990, 829, 629, 429.5, 263, 150.5], [346, 585, 585, 346], [230, 376, 658, 585, 346], [254, 1408, 1408, 254],\n            [245, 1431, 1431, 245], [268, 1422, 1422, 268], [160, 406, 610, 970, 1005, 973.9, 880.5, 733.4, 541, 337.5, 160],\n            [176, 240, 419, 692, 1037, 1210, 1391, 1714, 1829.5, 1870, 1813.5, 1651, 1391, 1041, 701, 426, 243], [26, 1374, 832, 568],\n            [200, 728, 983.5, 1168, 1281, 1323, 1196, 1159, 1040, 885, 641, 200], [115, 169, 319, 549.5, 844, 1001.5, 1134, 1250.5, 1350, 1350, 1084.5, 845, 546.5, 317, 167],\n            [200, 576, 906.5, 1134, 1369.5, 1458, 1373, 1136, 918.5, 572, 200], [200, 1181, 1181, 200], [200, 398, 1045, 1151, 1151, 200],\n            [115, 171, 330, 577, 896, 1175.5, 1442, 1442, 1441, 1155.5, 896, 570.9, 323.5, 167.1], [200, 1339, 1339, 200], [137, 725, 725, 137],\n            [44, 178, 306, 486.6, 626.5, 716.1, 746, 746, 233, 44], [205, 1397, 1366, 205], [200, 1142, 1142, 398, 200], [200, 1526, 1526, 200], [200, 1336, 1336, 200],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 398, 1043, 1139.5, 1174, 1127.5, 996, 831, 604, 200],\n            [115, 163.5, 302, 520.5, 1010.5, 1133.1, 1290, 1409.5, 1528, 1528, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 1432, 1130.5, 1004, 842, 617, 200],\n            [134, 395.5, 685, 941.5, 1128, 1241.5, 1282, 1222, 990, 702, 480.3, 301, 182.5, 143, 134], [0, 532, 730, 1262, 1262, 0],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 178], [26, 568, 832, 1374, 238], [92, 486, 1546, 1933, 295], [68, 1335, 1336, 80], [6, 532, 730, 1254, 225],\n            [126, 1288, 1288, 1266, 160, 126], [239, 759, 759, 239], [70, 787, 960, 246], [171, 691, 691, 171], [186, 383, 1490, 901, 775], [-4, 1306, 1306, -4], [340, 613, 762, 583],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 1020, 924, 772.5, 567, 362, 203], [185, 679, 866, 1022, 1128.5, 1168, 1139.4, 1053.5, 918.1, 373, 185],\n            [105, 145, 258, 431, 653, 832.5, 1011, 1011, 841.5, 653, 430.1, 255.5, 142.6], [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 903, 258, 148.5],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 997.5, 849.1, 649, 428.6, 255.5, 143.4], [68, 195, 383, 716, 786, 786, 693.5, 580, 415, 294, 68],\n            [108, 225, 391.5, 565, 798.3, 962, 1058.8, 1091, 1091, 602, 417, 259, 148.5], [185, 1119, 1119, 1095.3, 1024, 373, 185], [175, 187, 375, 387, 387, 175],\n            [-62, 47.5, 153, 304, 421, 496, 521, 533, 533, 321, 100, -62], [193, 1199, 1161, 381, 193], [187, 375, 375, 187], [185, 1815, 1815, 1793.1, 1727.5, 1615.9, 1456, 735, 185],\n            [185, 1119, 1119, 1095.3, 1024, 907.5, 748, 185], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 833.3, 622, 409.4, 245.5, 140.9],\n            [185, 373, 1019, 1129, 1168, 1139.9, 1055.5, 920.6, 741, 185], [108, 137.6, 226.5, 365.1, 903, 1091, 1091, 602, 414, 259, 149.5], [185, 373, 882, 882, 816, 745, 185],\n            [110, 283.5, 511, 706.9, 856.5, 951.4, 983, 939, 768.5, 566, 372.5, 230, 143.5, 115, 110], [62, 211.3, 278, 387.5, 538, 649.5, 765, 765, 377, 189, 62],\n            [177, 201.5, 275, 392.5, 549, 1111, 1111, 177], [61, 510, 699, 1151, 265], [86, 380, 1299, 1590, 766], [60, 1152, 1152, 64], [61, 298, 499, 1151, 265],\n            [93, 995, 995, 978, 107, 93], [173, 588.9, 672.5, 800.9, 963, 1113, 1113, 963, 800.9, 672.5, 588.9, 173], [378, 552, 552, 378],\n            [187, 337, 499.1, 627.5, 711.1, 1127, 1127, 711.1, 627.5, 499.1, 337, 187], [187, 354, 1125, 1290, 1401, 1466.5, 1489, 1322, 551, 386, 274, 209.5], [], [291, 515, 505, 301],\n            [159, 191.6, 289.5, 647, 765, 1120, 1120, 765, 647, 292.5, 192.4], [137, 1163, 1163, 1137, 997, 816, 630.6, 484.5, 389.6, 182, 137],\n            [138, 247, 1058, 1168, 1168, 1055, 249, 138], [108, 187, 557, 745, 1115, 1191, 320], [378, 552, 552, 378],\n            [172, 229, 404.5, 575, 796, 965, 1063, 1096, 1128, 1071, 896, 725, 497.5, 334, 235, 203], [346, 958, 958, 346],\n            [159, 222.4, 412.5, 692.1, 1024, 1355.9, 1635.5, 1825.6, 1889, 1825.6, 1635.5, 1355.9, 1024, 692.1, 412.5, 222.4],\n            [151, 238.5, 454, 944, 944, 920.3, 849, 723.5, 537, 368, 231], [166, 716, 1146, 1146, 716, 166], [210, 1285, 1456, 1456, 210], [153, 777, 777, 153],\n            [159, 222.4, 412.5, 692.1, 1024, 1355.9, 1635.5, 1825.6, 1889, 1825.6, 1635.5, 1355.9, 1024, 692.1, 412.5, 222.4], [-4, 1, 1306, 1306],\n            [154, 183, 270, 399.3, 555, 710.8, 840, 927, 956, 927.1, 840.5, 711.4, 555, 399.3, 270, 183], [215, 1461, 1461, 921, 755, 215],\n            [207, 967, 967, 911, 887.6, 817.5, 544, 369.5, 211, 207], [207, 363.5, 540, 703, 834, 923, 956, 929, 904.9, 832.5, 561, 384.5, 224, 207], [541, 690, 963, 720],\n            [190, 378, 1124, 1124, 190], [137, 168.5, 595, 1106, 1106, 640, 425.3, 267, 169.5], [253, 492, 492, 253], [353, 456, 551, 788.5, 857.1, 880, 877, 872, 719, 353],\n            [291, 299, 914, 914, 693, 558, 291], [121, 150.6, 239.5, 378.6, 559, 734.3, 874, 965.5, 996, 965.5, 874, 734.3, 559, 378.6, 239.5, 150.6], [174, 604, 1154, 1154, 604, 174],\n            [171, 465, 1694, 1857, 1857, 1694, 1410, 545, 408, 171], [171, 465, 1955, 1955, 1890, 1805.5, 1410, 545, 408, 171], [140, 555, 1750, 1913, 1913, 1750, 1500, 448, 294, 155, 140],\n            [113, 144.1, 237.5, 384.6, 577, 782, 958, 958, 712, 508, 147.5], [26, 1374, 862, 683, 440], [26, 1374, 955, 712, 533], [26, 1374, 1033, 805, 578, 350],\n            [26, 1374, 1119, 990, 541, 367, 288], [26, 1374, 1005, 806, 393], [26, 1374, 1049, 1023.6, 947.5, 834.6, 699, 564, 451, 374.5, 349], [14, 1901, 1901, 608],\n            [115, 169, 548, 652.5, 750, 990.5, 1350, 1350, 1084.5, 845, 546.5, 317, 167], [200, 1181, 1181, 643, 400, 200], [200, 1181, 1181, 993, 750, 200],\n            [200, 1181, 1181, 803, 576, 200], [200, 1181, 1181, 1038, 426, 200], [137, 725, 725, 389, 146, 137], [137, 725, 725, 482, 137], [93, 137, 725, 776, 548, 321],\n            [126, 137, 725, 738, 738, 126], [14, 210, 586, 916.5, 1144, 1379.5, 1468, 1383, 1146, 929, 582, 210, 14], [200, 1336, 1336, 1208, 1079, 630, 456, 200],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 753, 510, 163], [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1083, 840, 303, 163],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1136, 908, 681, 453, 163],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1207, 1078, 629, 455, 163],\n            [112, 160.5, 299, 517.5, 803, 1089.5, 1307, 1445.5, 1495, 1446.5, 1108, 909, 496, 160], [291, 402, 1274, 1385, 1385, 1274, 402, 291],\n            [115, 120, 252, 1092.5, 1310, 1448.5, 1498, 1474, 1342, 806, 521.5, 303, 163], [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 753, 510, 178],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 1073, 830, 178], [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 856, 629, 178],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 1056, 444, 178], [6, 532, 730, 1254, 935, 692], [200, 398, 1044, 1139, 1174, 1127, 997, 398, 200],\n            [185, 675, 873.1, 1029.5, 1131.1, 1165, 1066, 1037.4, 951.5, 819.9, 654, 470.5, 321, 221, 185], [104, 130.3, 209, 325.5, 465, 1053, 1053, 1020, 559, 316, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 934, 691, 203], [104, 130.3, 209, 325.5, 465, 1053, 1053, 961, 733, 506, 278, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 1038, 909, 460, 286, 207], [104, 130.3, 209, 325.5, 465, 1053, 1053, 926, 314, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 956, 930.6, 854.5, 741.6, 606, 471, 358, 281.5, 256],\n            [104, 130.4, 209.5, 326.1, 465, 1433, 1648.5, 1833, 1855, 1855, 1823.6, 1729.5, 1581.1, 1387, 564, 360, 202],\n            [105, 145, 353, 456, 551, 788.5, 857.1, 1011, 1011, 841.5, 653, 430.1, 255.5, 142.6], [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 997.5, 580, 337, 143.4],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 960, 717, 255.5, 143.4], [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 986, 758, 531, 303, 143.4],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 951, 339, 143.4], [-21, 187, 375, 401, 222], [160, 187, 375, 582, 339], [-11, 187, 375, 572, 394, 167],\n            [5, 187, 375, 557, 557, 5], [106, 140.6, 244.5, 405.6, 612, 828.3, 995, 1101.5, 1137, 1004, 938, 263], [185, 1119, 1119, 1075, 946, 497, 323, 244, 185],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 553, 310, 140.9], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 933, 690, 245.5, 140.9],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 963, 735, 508, 280, 140.9], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1038, 909, 460, 286, 207],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 928, 729, 316, 140.9], [210, 719, 957, 1466, 1466, 957, 719, 210],\n            [93, 203, 833.3, 997, 1102, 1137, 1132, 1021, 409.4, 245.5, 140.9, 106], [177, 201.5, 275, 392.5, 549, 1111, 1111, 585, 342, 177],\n            [177, 201.5, 275, 392.5, 549, 1111, 1111, 945, 702, 177], [177, 201.5, 275, 392.5, 549, 1111, 1111, 757, 530, 177], [177, 201.5, 275, 392.5, 549, 1111, 1111, 955, 343, 177],\n            [61, 298, 499, 1151, 928, 685], [185, 373, 1019, 1129, 1168, 1139.9, 1055.5, 920.6, 373, 185], [230, 376, 658, 585, 346], [530, 579, 724, 773],\n            [256, 588, 716, 1048, 1048, 765, 539, 256], [7, 26, 1374, 832], [346, 585, 585, 346], [0, 49, 443, 1424, 1424, 443], [0, 49, 443, 1582, 1582, 443], [0, 49, 380, 968, 968, 380],\n            [0, 49, 354.5, 493, 711.5, 997, 1283.5, 1501, 1639.5, 1689, 1640.5, 1501, 1284.5, 997], [0, 49, 815, 1013, 1537, 289],\n            [0, 49, 291, 1751, 1751, 1701, 1654.1, 1513.5, 1296.6, 1021], [-53, 187, 375, 615, 615, 379, 183, -53], [26, 1374, 832, 568],\n            [200, 728, 983.5, 1168, 1281, 1323, 1196, 1159, 1040, 885, 641, 200], [200, 398, 1162, 1162, 200], [26, 1414, 852, 588], [200, 1181, 1181, 200],\n            [126, 1288, 1288, 1266, 160, 126], [200, 1339, 1339, 200], [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163],\n            [137, 725, 725, 137], [205, 1397, 1366, 205], [26, 1378, 822, 582], [200, 1526, 1526, 200], [200, 1336, 1336, 200], [114, 1215, 1215, 114],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 1339, 1339, 200],\n            [200, 398, 1043, 1139.5, 1174, 1127.5, 996, 831, 604, 200], [118, 1280, 1280, 1234, 138, 118], [0, 532, 730, 1262, 1262, 0], [6, 532, 730, 1254, 225],\n            [105, 149.5, 273, 740, 937, 1404, 1527.5, 1572, 1528.5, 1410, 937, 740, 267, 148], [68, 1335, 1336, 80], [179, 219.5, 338, 793, 990, 1446, 1563.5, 1604, 1604, 179],\n            [108, 1568, 1568, 1518, 1471.1, 1330.5, 1113.6, 838, 562.4, 345.5, 204.9, 158, 108], [126, 137, 725, 738, 738, 126], [6, 532, 730, 1254, 939, 740, 327],\n            [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 743, 500, 148.5], [109, 152.5, 265, 417, 578, 796, 1006, 1006, 961, 721, 478, 191.5, 144],\n            [185, 931, 1119, 1119, 1095.3, 802, 559, 185], [160, 187, 375, 403], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 1043, 760, 534, 251, 177],\n            [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 604, 416.5, 258, 148.5], [185, 373, 1030.5, 1131.4, 1165, 1084, 1050, 959, 825.5, 661, 462.1, 311.5, 216.6, 185],\n            [61, 506, 694, 1151, 265], [106, 140.6, 244.5, 408.6, 624, 837.1, 1000.5, 1104.4, 1139, 1049, 239],\n            [109, 152.5, 265, 417, 578, 796, 1006, 1006, 961, 789, 609, 449, 304, 191.5, 144], [108, 135.8, 219, 646, 825, 937, 982, 942, 198],\n            [185, 931, 1119, 1119, 1095.3, 1024, 907.5, 748, 185], [137, 159.5, 219, 382, 639, 896, 1059, 1118, 1141, 1118, 1058, 895.5, 639, 382.5, 220, 159.5], [187, 375, 375, 187],\n            [193, 1192, 1122, 1085, 1027, 193], [61, 1151, 522, 311], [185, 373, 1125, 1125, 185], [61, 510, 699, 1151, 265], [104, 138.5, 239, 704, 884, 995.5, 1041, 957, 133],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 833.3, 622, 409.4, 245.5, 140.9], [185, 1120, 1120, 185],\n            [185, 373, 1033.5, 1137.4, 1172, 1140, 1044, 887.3, 673, 477.5, 322, 220.5, 185], [105, 146.5, 261, 685, 862, 971, 1018, 986, 839, 675, 441.9, 260.5, 143.9],\n            [106, 140.5, 244, 407.8, 623, 832.9, 996.5, 1101.9, 1295, 1295, 625, 412, 247, 141.3], [10, 414, 602, 1006, 1006, 10],\n            [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 177], [104, 151, 283, 715, 902, 1342.5, 1471.1, 1514, 1470.4, 1339.5, 1132.6, 861, 784.5, 714, 355, 163],\n            [48, 1160, 1149, 59], [176, 223.5, 748, 935, 1459, 1507, 1507, 176], [113, 136.5, 211, 343.5, 538, 1128, 1321.5, 1455, 1529.5, 1553, 1496, 1295, 371, 170],\n            [5, 187, 375, 557, 557, 5], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 953, 341, 177],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 743, 500, 140.9], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 768, 525, 177],\n            [113, 136.5, 211, 343.5, 538, 1128, 1321.5, 1455, 1529.5, 1553, 1496, 955, 712, 170],\n            [149, 179.4, 270.5, 409.6, 584, 798.5, 985, 1106, 1145, 1130.5, 1074, 909.5, 670, 473.5, 292], [50, 1438, 876, 612], [144, 344, 1332, 1532, 1532, 144],\n            [187, 1369, 1369, 1330, 197, 187], [220, 1456, 1456, 220], [-102, 63, 843, 678], [253, 492, 492, 253], [134, 755, 857, 1737, 1570, 134],\n            [161, 189.3, 274, 406.5, 578, 1435, 1620.9, 1764.5, 1856.4, 1887, 1858.8, 1774, 1641.5, 1470, 613, 430.3, 286, 192.3],\n            [138, 241.5, 348, 515.3, 641, 719, 1168, 1168, 1063, 954, 786.3, 661, 583, 138], [243, 400, 1070, 1214, 1320, 1432, 1431, 1274, 604, 462.4, 355.5, 243],\n            [245, 566, 719, 1431, 1431, 1109, 956, 245], [254, 1408, 1408, 254], [268, 1422, 1422, 268]\n        ];\n        this.OUTLINE_Y = [\n            [], [1489, 0, 0, 1489], [1556, 977, 977, 1556, 1556], [421, 0, 0, 421, 932, 1067, 1489, 1489, 1067, 556],\n            [85, -361, -361, 238.1, 380, 1231, 1576, 1576, 1185, 1071.5, 935, 283], [1075, 880.5, 743, 0, -29, -1.8, 80, 217.8, 413, 607.5, 745, 1489, 1517, 1489.8, 1408, 1270.3],\n            [409, 230.9, 90.5, -0.6, -31, 0, 909, 1333.4, 1432.5, 1498.1, 1520, 1490, 1412, 1301.5, 1174], [1556, 977, 977, 1556], [572, 286.3, 31, -412, -412, 1556, 1556, 1113, 857.8],\n            [-412, -412, 31, 286.3, 572, 857.8, 1113, 1556, 1556], [886, 776, 630, 630, 777, 887, 1299, 1409, 1556, 1556, 1410, 1300], [572, 27, 27, 572, 732, 1277, 1277, 732],\n            [-370, -370, 285, 285], [561, 561, 742, 742], [0, 0, 285, 285], [-304, -304, 1556, 1556],\n            [743, 400, 159, 16.5, -31, 15.9, 156.5, 397.4, 745, 1084.9, 1326.5, 1470.9, 1519, 1471.6, 1329.5, 1088.1], [0, 0, 152, 1494, 1494, 1286],\n            [0, 0, 171, 1110, 1279.4, 1409.5, 1492.4, 1520, 1491, 1427, 209], [63, -1.5, -31, 2.5, 106, 254, 441, 1161, 1320, 1436, 1500, 1520, 1490.5, 1426, 272],\n            [419, 0, 0, 419, 579, 1489, 1489, 649], [56, -5.5, -31, 6.5, 114, 274, 473, 1489, 1489, 267],\n            [654, 324, 104, 3, -31, 4.9, 112.5, 276.9, 483, 1494, 1512, 1517, 1453.5, 1277, 1005], [1314, 0, 0, 1266, 1489, 1489],\n            [411, 233.5, 91, -2.8, -34, -2, 94, 238.3, 415, 1144, 1294.5, 1416, 1496.3, 1523, 1495, 1411, 1285, 1131],\n            [1005, -6, -23.5, -29, 33, 209, 480, 834, 1171.5, 1385, 1485.5, 1519, 1483.3, 1376, 1211.8], [0, 0, 1117, 1117], [-370, -370, 285, 1117, 1117], [590, 77, 1227, 714],\n            [362, 362, 942, 942], [77, 590, 714, 1227], [1245, 0, 0, 964.5, 1139, 1293.4, 1414.5, 1492.9, 1519, 1497.5, 1449],\n            [647, 291, 15, -162.5, -226, -218.5, -190, 157, 394, 663, 1013.5, 1283, 1457, 1519, 1452, 1268, 991.5], [0, 0, 1489, 1489],\n            [0, 0, 28, 122, 262, 458, 1155, 1316.5, 1427, 1477, 1489, 1489], [743, 402.5, 161, 18.5, -27, -13.5, 19, 63, 108, 1385, 1487, 1516, 1465, 1317, 1072],\n            [0, 0, 28, 119, 375, 743, 1118, 1371, 1457.5, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 717, 1313, 1489, 1489],\n            [746, 405.5, 163, 19, -29, 12.5, 110, 749, 1382, 1485.5, 1516, 1464.4, 1309.5, 1065.4], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [8, -12.5, -21, 5.5, 85, 213.5, 387, 1489, 1489, 193], [0, 0, 1489, 1489], [0, 0, 176, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 709, 855.5, 1039, 1254, 1396, 1466.5, 1489, 1489],\n            [744, 415, 172, 21, -297.5, -369.1, -393, -386.5, -365, -183, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1280.5, 1409, 1471.5, 1489, 1489],\n            [92, 3, -27, 9, 109, 253, 425, 1412, 1486, 1516, 1486.1, 1396.5, 1260.1, 1090, 340], [1313, 0, 0, 1313, 1489, 1489], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 1489],\n            [1489, 0, 0, 1489, 1489], [1489, 0, 0, 1489, 1489], [0, 0, 1489, 1489], [1489, 0, 0, 1489, 1489], [0, 0, 176, 1489, 1489, 184], [-392, -392, 1556, 1556],\n            [1556, -304, -304, 1556], [-392, -392, 1556, 1556], [682, 682, 684, 1489, 1489], [-300, -300, -180, -180], [1676, 1302, 1302, 1676],\n            [324, 182.8, 69, -6, -31, 0, 758, 939, 1058, 1124.5, 1144, 1126, 1093], [0, -31, 8.5, 127, 315, 567, 812.8, 996, 1110, 1556, 1556],\n            [557, 300, 118, 10.5, -25, 0, 70, 1050, 1116, 1143, 1104, 987, 801.5], [550, 306.8, 123, 7.5, -31, 0, 1556, 1556, 992, 803],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1016, 1115, 1148, 1107.8, 987, 797.8], [959, 0, 0, 959, 1374, 1546, 1560, 1566, 1539.4, 1459.5, 1117],\n            [569, -375, -410.5, -423, -389.8, -290, -119.3, 127, 1117, 1148, 1108.5, 998, 817.5], [0, 0, 725, 906, 1039, 1556, 1556], [1304, 0, 0, 1304, 1499, 1499],\n            [-395, -415, -423, -398, -323, -199, -27, 1304, 1499, 1499, 1117, -216], [0, 0, 1117, 1556, 1556], [0, 0, 1556, 1556], [0, 0, 725, 902.9, 1036.5, 1120.1, 1148, 1148, 1117],\n            [0, 0, 725, 906, 1039, 1120.8, 1148, 1117], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1108.4, 1148, 1108.4, 989.5, 802.4],\n            [-412, -412, 133, 323.5, 572, 813.4, 995.5, 1109.9, 1148, 1117], [555, 314.1, 131.5, 16.4, -412, -412, 1117, 1148, 1108, 995, 809.5], [0, 0, 912, 1105, 1114.5, 1117, 1117],\n            [67, 2.5, -27, -2.5, 71, 182.8, 322, 1060, 1119.5, 1144, 1116.5, 1042, 933, 803, 278], [959, 189.8, 70, 1, -22, -13, 10, 1117, 1438, 1438, 1117],\n            [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [0, 0, 1117, 1117], [1117, -412, -412, 1117, 1117],\n            [0, 0, 159, 1117, 1117, 139], [504, -170.9, -292.5, -367.1, -392, -392, 1556, 1556, 1531.1, 1456.5, 1334.9, 660], [-392, -392, 1556, 1556],\n            [-392, -392, -367.1, -292.5, -170.9, 504, 660, 1334.9, 1456.5, 1531.1, 1556, 1556], [395, 395, 396, 440, 561, 732, 927, 927, 926, 880.5, 761, 589.5], [], [0, 0, 1489, 1489],\n            [557, 333.5, 163, -361, -361, 74, 1046, 1475, 1475, 948.5, 775.9], [0, 0, 171, 1467, 1501, 1518, 1485.9, 1389.5, 1243.1, 751, 207],\n            [258, 145, 147, 257, 1067, 1176, 1176, 1066], [1489, 426, 0, 0, 426, 1489, 1489], [-392, -392, 1556, 1556],\n            [533, -327, -371.5, -385, -358, -275, -156, -10, 601, 1462, 1505, 1519, 1490, 1411, 1293.5, 1147], [1304, 1304, 1499, 1499],\n            [655, 323.1, 43.5, -146.6, -210, -146.6, 43.5, 323.1, 655, 986.9, 1266.5, 1456.6, 1520, 1456.6, 1266.5, 986.9],\n            [833, 616, 531, 554, 1192, 1332.4, 1435.5, 1498.9, 1520, 1504, 1475], [608, 162, 191, 1113, 1142, 697], [602, 57, 57, 762, 762], [561, 561, 742, 742],\n            [655, 323.1, 43.5, -146.6, -210, -146.6, 43.5, 323.1, 655, 986.9, 1266.5, 1456.6, 1520, 1456.6, 1266.5, 986.9], [1788, 1668, 1668, 1788],\n            [1116, 960.4, 831.5, 744.9, 716, 745, 832, 961, 1116, 1271, 1400, 1487, 1516, 1487, 1400, 1271], [179, 179, 917, 1462, 1462, 917],\n            [566, 566, 711, 1237, 1350.4, 1440.5, 1519, 1501.5, 1458, 722], [585, 542, 527, 543.5, 595, 685.5, 817, 1278, 1374.5, 1452, 1520, 1502.5, 1458, 764],\n            [1302, 1302, 1676, 1676], [-412, -412, 0, 1117, 1117], [1050, 866, -363, -363, 1489, 1489, 1460, 1373, 1234.3], [511, 511, 794, 794],\n            [-397, -416, -423, -337, -232, -89, -25, 20, 20, -237], [1256, 566, 566, 688, 1493, 1493, 1368],\n            [1025, 820.1, 663.5, 564.1, 531, 563.4, 660.5, 816.4, 1025, 1233.8, 1390, 1487.5, 1520, 1486.8, 1387, 1230], [191, 162, 608, 697, 1142, 1113],\n            [1246, 0, 0, 220, 353, 944, 1489, 1493, 1493, 1363], [1246, 0, 0, 139, 664, 865, 1489, 1493, 1493, 1363], [598, 0, 0, 220, 353, 944, 1489, 1517, 1500, 1456, 773],\n            [350, 195.6, 74.5, -3.9, -30, -10, 40, 244, 1489, 1489, 523], [0, 0, 1675, 2049, 2049], [0, 0, 2049, 2049, 1675], [0, 0, 1670, 2049, 2049, 1670],\n            [0, 0, 1992, 1992, 1987, 1910, 1682], [0, 0, 1872, 1872, 1872], [0, 0, 1712, 1843.5, 1952, 2024.8, 2049, 2024.8, 1952, 1843.5, 1712], [0, 0, 1489, 1489],\n            [743, 402.5, -397, -416, -423, -337, 108, 1385, 1487, 1516, 1465, 1317, 1072], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 1489, 2049, 2049, 1489],\n            [0, 0, 1489, 1872, 1872, 1489], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 2049, 2049, 1489], [1670, 0, 0, 1670, 2049, 2049], [1677, 0, 0, 1677, 1872, 1872],\n            [740, 0, 0, 28, 119, 375, 743, 1118, 1371, 1457.5, 1489, 1489, 883], [0, 0, 1489, 1992, 1992, 1987, 1910, 1489],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 2049, 2049, 1070.5], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 2049, 2049, 1318, 1070.5],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1670, 2049, 2049, 1670, 1070.5], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1992, 1992, 1987, 1910, 1070.5],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1872, 1872, 1872, 1070.5], [216, 105, 105, 216, 1088, 1199, 1199, 1088],\n            [744, -146, -146, 20, 172, 414.5, 744, 1611, 1611, 1520, 1468, 1318, 1070.5], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489],\n            [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489],\n            [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 1872, 1872, 1489], [1489, 0, 0, 1489, 2049, 2049], [0, 0, 469, 610.5, 787, 992, 1130, 1489, 1489],\n            [0, -24, 12.4, 121.5, 284.1, 481, 1241, 1376, 1479, 1544.3, 1566, 1536.5, 1449, 1295.5, 1080], [324, 182.8, 69, -6, -31, 0, 758, 939, 1676, 1676, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1676, 1676, 1093], [324, 182.8, 69, -6, -31, 0, 758, 1297, 1676, 1676, 1297, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1619, 1619, 1614, 1537, 1309], [324, 182.8, 69, -6, -31, 0, 758, 1499, 1499, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1630, 1761.8, 1871, 1944.5, 1969, 1944.5, 1871, 1761.8, 1630],\n            [317, 178.8, 68, -4.8, -29, -26, 3.5, 68, 559, 641, 861.3, 1020, 1116, 1148, 1146, 1127, 1093], [557, 300, -397, -416, -423, -337, -232, 70, 1050, 1116, 1143, 1104, 987, 801.5],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1016, 1676, 1676, 797.8], [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1676, 1676, 987, 797.8],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1297, 1676, 1676, 1297, 797.8], [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1499, 1499, 797.8],\n            [1676, 0, 0, 1302, 1676], [1302, 0, 0, 1676, 1676], [1297, 0, 0, 1297, 1676, 1676], [1304, 0, 0, 1304, 1499, 1499],\n            [484, 266.5, 104, 2.8, -31, 12, 141, 351, 637, 1469, 1566, 1556], [0, 0, 725, 1619, 1619, 1614, 1537, 1309, 1117],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1676, 1676, 802.4], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1676, 1676, 989.5, 802.4],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1297, 1676, 1676, 1297, 802.4], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 1619, 1619, 1614, 1537, 1309],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1499, 1499, 1499, 802.4], [572, 7, 7, 572, 732, 1297, 1297, 732],\n            [-148, -148, 8.5, 127, 313.8, 558, 1241, 1241, 1108.4, 989.5, 802.4, 558], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117],\n            [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1499, 1499, 1117],\n            [1117, -412, -412, 1117, 1676, 1676], [-412, -412, 133, 323.5, 572, 813.4, 995.5, 1109.9, 1556, 1556], [-370, -370, 285, 1117, 1117], [1676, 1292, 1292, 1676],\n            [1304, 1292, 1292, 1304, 1499, 1676, 1676, 1499], [1489, 0, 0, 1489], [832, 832, 1117, 1117], [1489, 1105, 0, 0, 1489, 1489], [1489, 1105, 0, 0, 1489, 1489],\n            [1489, 1105, 0, 0, 1489, 1489], [1489, 1105, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520], [1489, 1105, 0, 0, 1489, 1489],\n            [1489, 1105, 0, 0, 174, 894, 1144.8, 1345, 1476.3, 1520], [1304, 0, 0, 1304, 1499, 1676, 1676, 1499], [0, 0, 1489, 1489],\n            [0, 0, 28, 122, 262, 458, 1155, 1316.5, 1427, 1477, 1489, 1489], [0, 0, 1313, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 176, 1489, 1489, 184],\n            [0, 0, 1489, 1489], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1489, 1489],\n            [0, 0, 709, 855.5, 1039, 1254, 1396, 1466.5, 1489, 1489], [0, 0, 176, 1489, 1489, 184], [1313, 0, 0, 1313, 1489, 1489], [1489, 0, 0, 1489, 1489],\n            [755, 507, 325, -16, -16, 325, 506.5, 755, 994, 1171, 1505, 1505, 1171, 993], [0, 0, 1489, 1489], [910, 647, 471, 0, 0, 471, 645.5, 910, 1489, 1489],\n            [0, 0, 174, 894, 1144.8, 1345, 1476.3, 1520, 1476.3, 1345, 1144.8, 894, 174], [1677, 0, 0, 1677, 1872, 1872], [1489, 0, 0, 1489, 1872, 1872, 1872],\n            [550, 306.8, 123, 7.5, -31, 0, 1117, 1676, 1676, 803], [306, 148.5, 46, -10, -26, -5, 64, 270, 1083, 1676, 1676, 986.5, 839], [0, -412, -412, 725, 906, 1676, 1676, 1117],\n            [1676, 0, 0, 1676], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1499, 1676, 1676, 1499, 1117], [550, 306.8, 123, 7.5, -31, 0, 1117, 1148, 1108, 992, 803],\n            [-412, -412, 110, 259.5, 444, 1195, 1355, 1467, 1534.5, 1556, 1524.3, 1429, 1277.8, 1078], [1117, -412, -412, 1117, 1117],\n            [534, 299.6, 120.5, 6.9, -31, 7.8, 124, 308.3, 551, 1556, 1556], [306, 148.5, 46, -10, -26, -5, 64, 270, 1083, 1127.5, 1144, 1128, 1079, 986.5, 839],\n            [463, 262.3, 118, -412, -412, -264.5, -96, 1556, 1556], [0, -412, -412, 725, 906, 1039, 1120.8, 1148, 1117],\n            [768, 451.5, 241, 37.5, -31, 37.5, 241, 451.5, 768, 1073, 1288, 1487, 1556, 1487, 1288, 1073.5], [0, 0, 1117, 1117], [0, 0, 1117, 1118, 1119, 1117], [0, 0, 1556, 1556],\n            [-412, -412, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [412, 248.5, 113, -412, -412, -265, -96, 1556, 1556],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1108.4, 1148, 1108.4, 989.5, 802.4], [0, 0, 1117, 1117],\n            [-412, -412, 148.5, 340.9, 577, 821.5, 1001, 1111.3, 1148, 1115, 1020, 861.5, 646], [549, 299, 129, -412, -412, -268, -96, 1079, 1124.5, 1143, 1102.5, 981, 792],\n            [558, 313.8, 127, 8.5, -31, 7.5, 123, 308.8, 952, 1117, 1148, 1108.6, 990.5, 803.6], [952, 0, 0, 952, 1117, 1117],\n            [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1117], [546, 314, 142, -412, -412, 159, 342.3, 576, 816.6, 996.5, 1108.6, 1146, 1145.5, 1143, 1117, 842],\n            [-412, -412, 1117, 1117], [446, 248.5, -412, -412, 248, 446, 1117, 1117], [503, 310.5, 139, 16.5, -30, -30, 14.5, 139, 310.5, 503, 811.5, 1117, 1117, 811.5],\n            [1304, 0, 0, 1304, 1499, 1499], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1499, 1499, 1117],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1676, 1676, 802.4], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1676, 1676, 1117],\n            [503, 310.5, 139, 16.5, -30, -30, 14.5, 139, 310.5, 503, 811.5, 1676, 1676, 811.5], [424, 240.1, 94.5, -0.4, -32, 17, 190, 493, 837, 1097, 1286, 1464.5, 1519, 1496.5, 1430],\n            [0, 0, 1489, 1489], [1315, -193, -193, 1315, 1489, 1489], [-189, -189, -13, 1489, 1489, 2], [572, 572, 732, 732], [0, 0, 1489, 1489], [511, 511, 794, 794],\n            [842, -151, -151, 1788, 1788, 981], [642, 447.6, 292.5, 190.9, 157, 157, 190.4, 290.5, 450.4, 663, 857.4, 1012.5, 1114.1, 1148, 1148, 1114.5, 1014, 854],\n            [-402, -417.5, -423, -395.5, -313, -179.8, 1367, 1545, 1560.5, 1566, 1538.5, 1456, 1321.8, -224], [202, 202, 209, 233.4, 306.5, 588, 1104, 1104, 1097, 1072.5, 999, 719],\n            [362, 27, 27, 362, 942, 1277, 1277, 942], [0, 0, 1393, 910], [0, 0, 910, 1393]\n        ];\n        this.KERN_C1 = [\n            '\\'', '\\'', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '.', '.', 'A', 'A', 'A', 'A', 'A', 'A', 'A',\n            'A', 'A', 'A', 'A', 'A', 'B', 'B', 'B', 'B', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F',\n            'I', 'J', 'J', 'J', 'J', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n            'L', 'O', 'O', 'O', 'O', 'O', 'O', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'Q', 'Q', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'S',\n            'S', 'S', 'S', 'S', 'S', 'S', 'S', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T',\n            'T', 'T', 'T', 'T', 'T', 'T', 'U', 'U', 'U', 'U', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'W', 'W', 'W', 'W', 'W', 'W',\n            'W', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y',\n            'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z',\n            'a', 'a', 'a', 'b', 'b', 'b', 'c', 'c', 'e', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'h', 'h', 'h', 'k', 'k', 'k', 'k', 'm', 'm',\n            'm', 'n', 'n', 'n', 'o', 'o', 'o', 'o', 'o', 'p', 'p', 'p', 'r', 'r', 'r', 'r', 'r', 't', 't', 'v', 'v', 'v', 'v', 'v', 'v', 'v', 'v', 'w', 'w', 'w',\n            'w', 'w', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'z', 'z', 'z', 'z', 'z', 'z', 'z',\n            'z', 'z', '\\u00C7', '\\u00E7', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00F8', '\\u00F8', '\\u00F8', '\\u00F8', '\\u00F8'\n        ];\n        this.KERN_C2 = [\n            '\\u00C6', 'A', '\\u00E6', '\\u00C6', 'z', 'y', 'x', 'w', 'v', 'a', 'Z', 'Y', 'X', 'W', 'V', 'T', 'S', 'J', 'I', 'A', '-', ',', 'y', 'w', 'v', 'u', 't',\n            'Y', 'W', 'V', 'U', 'T', 'S', '-', 'T', '.', '-', ',', '-', 'Z', 'Y', 'X', 'W', 'T', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'o', 'e', 'a', 'T', 'A',\n            '?', ';', ':', '.', ',', '-', '\\u00C6', 'A', '.', ',', '\\u00F8', '\\u00E6', '\\u00D8', 'y', 'w', 'v', 'u', 'o', 'e', 'a', 'O', '-', '\\u00D8', '\\u00C7',\n            'y', 'v', 'Y', 'W', 'V', 'T', 'O', 'J', 'G', 'C', '-', '\\'', 'Z', 'Y', 'X', 'T', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'o', 'e', 'a', 'Y', 'A',\n            '.', ',', '.', ',', '\\u00F8', '\\u00E6', 'y', 'u', 'o', 'e', 'a', 'Y', 'T', '-', '\\u00C6', 'y', 'w', 'v', 'S', 'A', '.', ',', '\\u00F8', '\\u00E6',\n            '\\u00D8', '\\u00C6', '\\u00C7', 'z', 'y', 'w', 'v', 'u', 's', 'r', 'o', 'g', 'e', 'c', 'a', 'T', 'S', 'O', 'G', 'C', 'A', '?', ';', ':', '.', '-', ',',\n            '\\u00C6', 'A', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'y', 'u', 'o', 'e', 'a', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'y', 'u',\n            'r', 'o', 'e', 'a', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6', '\\u00D8', '\\u00C7', 'y', 'u', 'o', 'e', 'a', 'O', 'G', 'C', '-', '\\u00F8',\n            '\\u00E6', '\\u00D8', '\\u00C6', 'v', 'u', 's', 'r', 'q', 'p', 'o', 'n', 'm', 'g', 'e', 'd', 'a', 'O', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6',\n            '\\u00D8', '\\u00C7', 'y', 'w', 'o', 'e', 'a', 'Z', 'O', 'G', 'C', '-', 'y', 'w', 'v', 'y', '.', ',', 'T', '-', 'T', '}', 'y', ']', '\\\\', '?', '.',\n            '-', ',', '*', ')', '\\'', '\"', 'y', 'w', 'v', '\\u00F8', 'o', 'e', '-', 'y', 'w', 'v', 'y', 'w', 'v', 'y', 'x', 'v', '.', ',', 'y', '.', ',',\n            '\\u00E6', 'a', '.', '-', ',', 'y', '-', '\\u00F8', '\\u00E6', 'o', 'e', 'a', '.', '-', ',', '\\u00E6', 'a', '.', '-', ',', '\\u00F8', '\\u00E7', 'o', 'g',\n            'e', 'd', 'c', '-', '\\u00F8', '\\u00E6', '\\u00E7', 'q', 'o', 'g', 'e', 'd', 'c', 'a', '.', '-', ',', '\\u00F8', '\\u00E7', 'q', 'o', 'g', 'e', 'd', 'c',\n            '-', '-', '-', 'Z', 'Y', 'X', 'T', '.', ',', 'y', 'x', 'v', '.', ','\n        ];\n        this.KERN_K = [\n            100, 100, 20, 50, 40, 40, 50, 20, 40, 20, 30, 140, 80, 50, 50, 150, 20, 100, 30, 50, 160, 130, 50, 30, 50, 10, 20, 80, 50, 60, 10, 120, 10, 50, 60,\n            20, -10, 20, 50, 20, 20, 10, 20, 50, 50, 50, 50, 100, 110, 50, 50, 100, -30, 100, -60, 60, 60, 300, 300, 30, 10, 10, 20, 20, 70, 60, 20, 80, 70, 80,\n            50, 70, 70, 60, 20, 110, 20, 20, 110, 110, 160, 100, 110, 170, 20, -100, 20, 20, 160, 120, 20, 20, 10, 50, 30, 30, 50, 50, 70, 50, 50, 50, -20, 50,\n            300, 300, 30, 30, 50, 50, 55, 20, 50, 50, 40, 20, 60, 100, 20, 30, 20, 30, 22, 20, 20, 20, 220, 240, 50, 130, 40, 170, 200, 200, 200, 200, 180, 200,\n            220, 210, 220, 220, 240, 70, 12, 50, 40, 40, 120, -60, 200, 200, 290, 150, 290, 20, 10, 20, 20, 100, 100, 70, 65, 60, 100, 100, 100, 60, 80, 80, 290,\n            50, 290, 100, 100, 60, 65, 60, 60, 100, 100, 100, 50, 80, 80, 220, 50, 290, 60, 50, 10, 10, 80, 30, 60, 60, 50, 10, 10, 10, 80, 130, 140, 20, 80,\n            100, 110, 110, 100, 130, 100, 130, 100, 100, 130, 130, 120, 140, 20, 80, 200, 200, 290, 140, 290, 60, 50, 20, 20, 65, 40, 60, 60, 50, 10, 20, 20, 20,\n            60, 16, 10, 16, 5, 20, 30, 60, 20, 140, -100, 10, -100, -100, -110, 120, 50, 130, -50, -100, -60, -60, 20, 10, 20, 20, 20, 20, 100, 20, 10, 20, 20,\n            10, 20, 15, 20, 15, 20, 30, 5, 20, 30, 40, 36, 290, 20, 290, 10, 40, 18, 40, 18, 18, 40, 180, 40, 180, 20, 20, 70, 20, 70, 24, 20, 24, 10, 24, 10,\n            20, 50, 18, 40, 18, 10, 18, 10, 18, 10, 18, 40, 190, 40, 190, 12, 10, 10, 12, 10, 12, 10, 10, 20, 50, 20, 20, 20, 10, 50, 30, 30, 15, 20, 15, 20, 30\n        ];\n        this.pathCache = [];\n        this.pathMissing = null;\n        this.ctxReference = null;\n        for (let n = this.GLYPH_DATA.length - 1; n >= 0; n--)\n            this.pathCache[n] = null;\n    }\n    getKerning(ch1, ch2) {\n        const sz = this.KERN_K.length;\n        for (let n = 0; n < sz; n++)\n            if (this.KERN_C1[n] == ch1 && this.KERN_C2[n] == ch2)\n                return -this.KERN_K[n];\n        return 0;\n    }\n    static measureText(txt, size) { return this.main.measureText(txt, size); }\n    measureText(txt, size) {\n        let font = FontData.main;\n        let scale = size / font.UNITS_PER_EM;\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = this.getIndex(ch);\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                continue;\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n        }\n        return [dx * scale, font.ASCENT * scale * font.ASCENT_FUDGE, -font.DESCENT * scale];\n    }\n    static measureWidths(txt, size) { return this.main.measureWidths(txt, size); }\n    measureWidths(txt, size) {\n        let font = FontData.main;\n        let scale = size / font.UNITS_PER_EM;\n        let xpos = [0];\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = this.getIndex(ch);\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                xpos.push(dx * scale);\n                continue;\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n            xpos.push(dx * scale);\n        }\n        return xpos;\n    }\n    getIndex(ch) {\n        return this.UNICODE.indexOf(ch);\n    }\n    getRawGlyph(idx) {\n        return this.GLYPH_DATA[idx];\n    }\n    getGlyphPath(idx) {\n        let path = this.pathCache[idx];\n        if (path != null)\n            return path;\n        path = new Path2D(this.GLYPH_DATA[idx]);\n        this.pathCache[idx] = path;\n        return path;\n    }\n    getMissingPath() {\n        if (!this.pathMissing)\n            this.pathMissing = new Path2D(this.MISSING_DATA);\n        return this.pathMissing;\n    }\n    getOutlineX(idx) { return this.OUTLINE_X[idx].slice(0); }\n    getOutlineY(idx) { return this.OUTLINE_Y[idx].slice(0); }\n    initNativeFont(ctx) {\n        if (ctx == null && this.ctxReference)\n            return;\n        if (ctx == null) {\n            let canvas = new OffscreenCanvas(256, 256);\n            this.ctxReference = canvas.getContext('2d');\n        }\n        else\n            this.ctxReference = ctx;\n    }\n    static measureTextNative(txt, family, size, opt = {}) {\n        return this.main.measureTextNative(txt, family, size, opt);\n    }\n    measureTextNative(txt, family, size, opt = {}) {\n        if (!this.ctxReference)\n            throw 'Calling measureTextNative without having called initNativeFont first';\n        this.ctxReference.save();\n        let pfx = '';\n        if (opt.bold)\n            pfx += 'bold ';\n        if (opt.italic)\n            pfx += 'italic ';\n        this.ctxReference.font = pfx + size + 'px ' + family;\n        let metrics = this.ctxReference.measureText(txt);\n        this.ctxReference.restore();\n        const FUDGE = this.ASCENT_FUDGE * this.ASCENT / this.UNITS_PER_EM;\n        return [metrics.width, size * FUDGE, size * (-this.DESCENT / this.ASCENT) * FUDGE];\n    }\n}\nFontData.main = new FontData();\nexport { FontData };\n//# sourceMappingURL=FontData.js.map","import { Vec } from '../util/Vec';\nlet globalInstance = null;\nimport ontoUnits from '../res/data/ontology/units.onto';\nconst ONTOLOGY_SOURCE = {\n    'units': ontoUnits,\n};\nexport class OntologyTree {\n    static get main() { return globalInstance; }\n    static getOntologyKeys() { return Object.keys(ONTOLOGY_SOURCE); }\n    static getOntologyData(key) { return ONTOLOGY_SOURCE[key]; }\n    constructor() {\n        this.roots = [];\n        this.mapTerms = new Map();\n        this.alreadyLoaded = new Set();\n    }\n    static init() {\n        if (globalInstance)\n            return;\n        globalInstance = new OntologyTree();\n        for (let key of this.getOntologyKeys()) {\n            globalInstance.loadFromString(key, this.getOntologyData(key));\n        }\n    }\n    getRoots() {\n        return this.roots;\n    }\n    hasTerm(uri) { return this.mapTerms.has(uri); }\n    getBranch(uri) {\n        return this.mapTerms.get(uri);\n    }\n    getBranchList(root) {\n        if (typeof root == 'string') {\n            let look = this.mapTerms.get(root);\n            if (!look)\n                throw `Unknown branch URI: ${root}`;\n            if (look.length > 1)\n                throw `Ambiguous branch URI occurs more than once: ${root}`;\n            root = look[0];\n        }\n        let list = [];\n        let accumulate = (branch) => {\n            list.push(branch);\n            for (let child of Vec.safeArray(branch.children))\n                accumulate(child);\n        };\n        accumulate(root);\n        return list;\n    }\n    loadFromString(key, text) {\n        if (this.alreadyLoaded.has(key))\n            return;\n        this.alreadyLoaded.add(key);\n        this.loadContent(text);\n    }\n    loadContent(text) {\n        let termList = [];\n        let pos = 0;\n        for (let line of text.split(/\\n/)) {\n            pos++;\n            line = line.trim();\n            if (!line || line.startsWith('#'))\n                continue;\n            let idx = line.indexOf('http');\n            if (idx < 0)\n                throw `Line ${pos} invalid, no URI term: ${line}`;\n            let depth = 0;\n            for (let n = 0; n < idx; n++)\n                if (line.charAt(n) == '-')\n                    depth++;\n            let uri = line.substring(idx);\n            idx = uri.indexOf(' ');\n            if (idx < 0)\n                throw `Line ${pos} invalid, no label: ${line}`;\n            let label = uri.substring(idx + 1);\n            uri = uri.substring(0, idx);\n            let term = null;\n            if (depth == 0)\n                term = this.roots.find((look) => look.uri == uri);\n            if (!term) {\n                term = { uri, label, 'parent': null, 'children': [], depth };\n                if (depth == 0)\n                    this.roots.push(term);\n                else {\n                    for (let n = termList.length - 1; n >= 0; n--)\n                        if (termList[n].depth == depth - 1) {\n                            term.parent = termList[n];\n                            termList[n].children.push(term);\n                            break;\n                        }\n                    if (!term.parent)\n                        throw `Line ${pos} invalid hierarchy, no parent found`;\n                }\n                let list = this.mapTerms.get(uri);\n                if (list)\n                    list.push(term);\n                else\n                    this.mapTerms.set(uri, [term]);\n            }\n            termList.push(term);\n        }\n    }\n    debugString(term) {\n        let lines = [];\n        let emit = (term) => {\n            lines.push('* '.repeat(term.depth) + `<${term.uri}> \"${term.label}\"`);\n            for (let child of term.children)\n                emit(child);\n        };\n        emit(term);\n        return lines.join('\\n');\n    }\n}\n//# sourceMappingURL=OntologyTree.js.map","export default \"http://purl.obolibrary.org/obo/UO_0000000 units\\n- http://purl.obolibrary.org/obo/UO_0000051 concentration units\\n- - http://www.bioassayontology.org/bao#BAO_0000102 -log10[mol/L]\\n- - http://purl.obolibrary.org/obo/UO_0000175 grams per litre (g/L)\\n- - http://www.bioassayontology.org/bao#BAO_0000101 log10[mol/L]\\n- - http://purl.obolibrary.org/obo/UO_0000275 micrograms per litre (ug/L)\\n- - http://purl.obolibrary.org/obo/UO_0000064 micromoles per litre (umol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000273 milligrams per litre (mg/L)\\n- - http://purl.obolibrary.org/obo/UO_0000063 millimoles per litre (mmol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000062 moles per litre (mol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000065 nanomoles per litre (nmol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000066 picomoles per litre (pmol/L)\\n- http://purl.obolibrary.org/obo/UO_0000186 dimensionless unit\\n- - http://www.bioassayontology.org/bao#BAO_0080023 binary (true/false)\\n- - http://purl.obolibrary.org/obo/UO_0000187 percent\";","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {Vec} from 'webmolkit/util/Vec';\n\n/*\n\tTry to arrange a list of boxes into a more rectangular pattern, which has a better ratio than stacking everything vertically.\n*/\n\nenum SquarePackingSpring\n{\n\tStrong = 0,\n\tMedium = 1,\n\tWeak = 2,\n}\n\ninterface SquarePackingCandidate\n{\n\tidxStart:number;\n\tsprings:SquarePackingSpring[];\n\tlayout?:Box[];\n\toutline?:Size;\n\tscore?:number; // lower is better\n\thash?:string;\n}\n\ninterface SquarePackingSegment\n{\n\ty:number;\n\tx1:number;\n\tx2:number;\n}\n\nexport class SquarePacking\n{\n\tpublic outline:Size;\n\tpublic layout:Box[] = null;\n\n\tprivate wantRatio:number;\n\n\t// --------------------- public methods ---------------------\n\n\t// sets up the object with the mandatory information\n\tconstructor(private packSize:Size, private boxes:Box[], private hspace:number, private vspace:number)\n\t{\n\t\tthis.wantRatio = packSize.w / packSize.h;\n\n\t\t/*\n\t\t// !! temporary validation\n\t\tlet segs:SquarePackingSegment[] =\n\t\t[\n\t\t\t{'y': 0, 'x1': 0, 'x2': 1},\n\t\t\t{'y': 2, 'x1': 1, 'x2': 3},\n\t\t\t{'y': 1, 'x1': 3, 'x2': Number.POSITIVE_INFINITY}\n\t\t];\n\t\tthis.mergeSegmentAbove(segs, {'y': 2.5, 'x1': 1.5, 'x2': 2.5});\n\t\t//this.mergeSegmentBelow(segs, {'y': -1.5, 'x1': 2, 'x2': 3.5});\n\t\tfor (let seg of segs) console.log(JSON.stringify(seg));\n\t\tthrow 'blork';*/\n\t}\n\n\t// carries out the arrangement: returns whether it got something good\n\tpublic pack():boolean\n\t{\n\t\tlet candidates:SquarePackingCandidate[] = [];\n\t\tlet num = this.boxes.length;\n\t\tfor (let n = 0; n < num; n++)\n\t\t{\n\t\t\tlet cand:SquarePackingCandidate = {idxStart: n, springs: Vec.anyArray(SquarePackingSpring.Weak, num)};\n\t\t\tcand.hash = cand.idxStart + '/' + cand.springs;\n\t\t\tthis.processCandidate(cand);\n\t\t\tcandidates.push(cand);\n\t\t}\n\n\t\tconst KEEP = 100;\n\t\tcandidates = candidates.sort((c1, c2) => c1.score - c2.score).slice(0, KEEP);\n\n\t\tfor (let sanity = 100; sanity > 0; sanity--)\n\t\t{\n\t\t\tlet hashes = new Set<string>();\n\t\t\tfor (let cand of candidates) hashes.add(cand.hash);\n\n\t\t\tlet batch = candidates.slice(0);\n\t\t\tfor (let cand of candidates) for (let n = 0; n < num; n++) if (n != cand.idxStart)\n\t\t\t{\n\t\t\t\tfor (let sp of [SquarePackingSpring.Strong, SquarePackingSpring.Medium, SquarePackingSpring.Weak]) if (cand.springs[n] != sp)\n\t\t\t\t{\n\t\t\t\t\tlet mod:SquarePackingCandidate = {idxStart: cand.idxStart, springs: cand.springs.slice(0)};\n\t\t\t\t\tmod.springs[n] = sp;\n\t\t\t\t\tmod.hash = mod.idxStart + '/' + mod.springs;\n\t\t\t\t\tif (hashes.has(mod.hash)) continue;\n\t\t\t\t\tthis.processCandidate(mod);\n\t\t\t\t\tbatch.push(mod);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbatch = batch.sort((c1, c2) => c1.score - c2.score).slice(0, KEEP);\n\n\t\t\tlet same = true;\n\t\t\tfor (let n = 0; n < candidates.length && n < batch.length; n++) if (candidates[n].hash != batch[n].hash) {same = false; break;}\n\n\t\t\tif (!same) break;\n\n\t\t\tcandidates = batch;\n\t\t}\n\n\t\tlet best = candidates[0];\n\n\t\tthis.outline = best.outline;\n\t\tthis.layout = best.layout;\n\t\tlet minY = Vec.min(this.layout.map((b) => b.y));\n\t\tfor (let box of this.layout) box.y -= minY;\n\n\t\treturn true;\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\tprivate processCandidate(cand:SquarePackingCandidate):void\n\t{\n\t\tlet len = this.boxes.length;\n\t\tcand.layout = this.boxes.map((box) => new Box(0, 0, box.w, box.h));\n\t\tlet placed = Vec.booleanArray(false, len);\n\t\tplaced[cand.idxStart] = true;\n\n\t\tlet placeAbove = (idx:number, spring:SquarePackingSpring):void =>\n\t\t{\n\t\t\tlet box = cand.layout[idx];\n\t\t\tlet segs:SquarePackingSegment[] = null;\n\t\t\tfor (let n = idx + 1; n < len; n++) if (placed[n])\n\t\t\t{\n\t\t\t\tlet ref = cand.layout[n];\n\t\t\t\tlet newsegs:SquarePackingSegment[] = [];\n\t\t\t\tif (ref.minX() > 0) newsegs.push({y: ref.midY() - this.vspace, x1: 0, x2: ref.minX() - this.hspace});\n\t\t\t\tnewsegs.push({y: ref.minY() - this.vspace, x1: Math.max(0, ref.minX() - this.hspace), x2: ref.maxX() + this.hspace});\n\t\t\t\tnewsegs.push({y: ref.minY() - this.vspace + 0.5 * box.h, x1: ref.maxX() + this.hspace, x2: Number.POSITIVE_INFINITY});\n\t\t\t\tif (segs == null) segs = newsegs;\n\t\t\t\telse for (let nseg of newsegs) this.mergeSegmentAbove(segs, nseg);\n\t\t\t}\n\n\t\t\tlet bestX = 0, bestY = Number.NEGATIVE_INFINITY;\n\t\t\tfor (let n = 0; n < segs.length; n++)\n\t\t\t{\n\t\t\t\tlet x = segs[n].x1, y = Number.POSITIVE_INFINITY;\n\t\t\t\tfor (let i = n; i < segs.length; i++)\n\t\t\t\t{\n\t\t\t\t\ty = Math.min(y, segs[i].y);\n\t\t\t\t\tif (box.w < segs[i].x2 - x) break;\n\t\t\t\t}\n\t\t\t\tif (y > bestY) [bestX, bestY] = [x, y];\n\t\t\t\tif (spring == SquarePackingSpring.Strong) break;\n\t\t\t\tif (spring == SquarePackingSpring.Medium && x > 0.5 * this.packSize.w) break;\n\t\t\t}\n\t\t\tbox.x = bestX;\n\t\t\tbox.y = bestY - box.h;\n\t\t\tplaced[idx] = true;\n\t\t};\n\t\tlet placeBelow = (idx:number, spring:SquarePackingSpring):void =>\n\t\t{\n\t\t\tlet box = cand.layout[idx];\n\t\t\tlet segs:SquarePackingSegment[] = null;\n\t\t\tfor (let n = idx - 1; n >= 0; n--) if (placed[n])\n\t\t\t{\n\t\t\t\tlet ref = cand.layout[n];\n\t\t\t\tlet newsegs:SquarePackingSegment[] = [];\n\t\t\t\tif (ref.minX() > 0) newsegs.push({y: ref.midY() + this.vspace, x1: 0, x2: ref.minX() - this.hspace});\n\t\t\t\tnewsegs.push({y: ref.maxY() + this.vspace, x1: Math.max(0, ref.minX() - this.hspace), x2: ref.maxX() + this.hspace});\n\t\t\t\tnewsegs.push({y: ref.maxY() + this.vspace - 0.5 * box.h, x1: ref.maxX() + this.hspace, x2: Number.POSITIVE_INFINITY});\n\t\t\t\tif (segs == null) segs = newsegs;\n\t\t\t\telse for (let nseg of newsegs) this.mergeSegmentBelow(segs, nseg);\n\t\t\t}\n\n\t\t\tlet bestX = 0, bestY = Number.POSITIVE_INFINITY;\n\t\t\tfor (let n = 0; n < segs.length; n++)\n\t\t\t{\n\t\t\t\tlet x = segs[n].x1, y = Number.NEGATIVE_INFINITY;\n\t\t\t\tfor (let i = n; i < segs.length; i++)\n\t\t\t\t{\n\t\t\t\t\ty = Math.max(y, segs[i].y);\n\t\t\t\t\tif (box.w < segs[i].x2 - x) break;\n\t\t\t\t}\n\t\t\t\tif (y < bestY) [bestX, bestY] = [x, y];\n\t\t\t\tif (spring == SquarePackingSpring.Strong) break;\n\t\t\t\tif (spring == SquarePackingSpring.Medium && x > 0.5 * this.packSize.w) break;\n\t\t\t}\n\t\t\tbox.x = bestX;\n\t\t\tbox.y = bestY;\n\t\t\tplaced[idx] = true;\n\t\t};\n\n\t\tfor (let d = 1; d < len; d++)\n\t\t{\n\t\t\tlet i1 = cand.idxStart - d, i2 = cand.idxStart + d;\n\t\t\tif (i1 >= 0) placeAbove(i1, cand.springs[i1]);\n\t\t\tif (i2 < len) placeBelow(i2, cand.springs[i2]);\n\t\t}\n\n\t\tlet loX = 0, hiX = Vec.max(cand.layout.map((box) => box.maxX()));\n\t\tlet loY = Vec.min(cand.layout.map((box) => box.minY())), hiY = Vec.max(cand.layout.map((box) => box.maxY()));\n\t\tcand.outline = new Size(hiX - loX, hiY - loY);\n\t\tlet ratio = cand.outline.w / cand.outline.h;\n\t\tcand.score = Math.abs(ratio - this.wantRatio) * (cand.outline.w + cand.outline.h);\n\t\tcand.score += Vec.sum((cand.layout.map((box) => box.x)));\n\t\tfor (let n = 0; n < cand.layout.length - 1; n++) cand.score += Math.max(0, cand.layout[n].minY() - cand.layout[n].maxY());\n\t}\n\n\tprivate mergeSegmentAbove(segs:SquarePackingSegment[], merge:SquarePackingSegment):void\n\t{\n\t\tfor (let look of segs)\n\t\t{\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2 && merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) return; // completely buried\n\t\t\t\tsegs.push({y: look.y, x1: merge.x2, x2: look.x2});\n\t\t\t\tlook.x2 = merge.x1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) look.x2 = merge.x1; else merge.x1 = look.x2;\n\t\t\t}\n\t\t\tif (merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) look.x1 = merge.x2; else merge.x2 = look.x1;\n\t\t\t}\n\t\t}\n\t\tfor (let n = segs.length - 1; n >= 0; n--) if (segs[n].x1 >= segs[n].x2) segs.splice(n, 1);\n\t\tif (merge.x1 < merge.x2)\n\t\t{\n\t\t\tsegs.push(merge);\n\t\t\tsegs.sort((seg1, seg2) => seg1.x1 - seg2.x1);\n\t\t}\n\t}\n\tprivate mergeSegmentBelow(segs:SquarePackingSegment[], merge:SquarePackingSegment):void\n\t{\n\t\tfor (let look of segs)\n\t\t{\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2 && merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) return; // completely buried\n\t\t\t\tsegs.push({y: look.y, x1: merge.x2, x2: look.x2});\n\t\t\t\tlook.x2 = merge.x1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) look.x2 = merge.x1; else merge.x1 = look.x2;\n\t\t\t}\n\t\t\tif (merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) look.x1 = merge.x2; else merge.x2 = look.x1;\n\t\t\t}\n\t\t}\n\t\tfor (let n = segs.length - 1; n >= 0; n--) if (segs[n].x1 >= segs[n].x2) segs.splice(n, 1);\n\t\tif (merge.x1 < merge.x2)\n\t\t{\n\t\t\tsegs.push(merge);\n\t\t\tsegs.sort((seg1, seg2) => seg1.x1 - seg2.x1);\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {ArrangeMolecule} from 'webmolkit/gfx/ArrangeMolecule';\nimport {ArrangeMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MoleculeStream} from 'webmolkit/io/MoleculeStream';\nimport {formatDouble} from 'webmolkit/util/util';\nimport {OntologyTree} from 'webmolkit/data/OntologyTree';\nimport {SquarePacking} from './SquarePacking';\nimport {FontData} from 'webmolkit/gfx/FontData';\nimport {MixfileComponent} from './Mixfile';\nimport {NormMixture} from './NormMixture';\nimport {Mixture} from './Mixture';\n\n/*\n\tArranging a Mixfile: will create a tree layout for all of the components, according to parameters.\n*/\n\nexport enum ArrangeMixtureLineSource\n{\n\tName,\n\tQuantity,\n\tIdentifier,\n\tMeta,\n}\n\nexport interface ArrangeMixtureLine\n{\n\ttext:string;\n\tcol:number;\n\tsource:ArrangeMixtureLineSource;\n}\n\nexport interface ArrangeMixtureComponent\n{\n\torigin:number[];\n\tcontent:MixfileComponent;\n\tparentIdx:number;\n\n\tboundary?:Box; // outer boundary (position on canvas)\n\n\tmol?:Molecule;\n\tmolLayout?:ArrangeMolecule;\n\tmolBox?:Box;\n\n\tnameBox?:Box;\n\tnameLines?:ArrangeMixtureLine[];\n\tfontSize?:number;\n\n\toutline?:Box; // inner boundary (surrounds molecule, names, etc.)\n\n\tisCollapsed?:boolean;\n\tcollapseBox?:Box;\n}\n\nconst PADDING = 0.25;\nconst VSPACE = 0.5;\nconst HSPACE = 1;\nconst COLLAPSE_SIZE = 0.3;\nconst COLLAPSE_GAP = 0.05;\n\nexport class ArrangeMixture\n{\n\tpublic norm:NormMixture = null; // optional: contents may be used for additional decoration\n\n\tpublic scale:number;\n\tpublic nameFontSize:number;\n\tpublic width = 0;\n\tpublic height = 0;\n\n\tpublic components:ArrangeMixtureComponent[] = [];\n\n\t// parameters to influence the drawing\n\tpublic limitStructW:number;\n\tpublic limitStructH:number;\n\tpublic minBoxSize:Size = null;\n\tpublic showCollapsors = false; // if true, boxes for [+]/[-] will be created for interactive use\n\tpublic collapsedBranches:number[][] = []; // any origin specified in this list will not display its children\n\tpublic packBranches:Size = null; // if defined, makes an effort to pack branches into the box size\n\tpublic hardwrapName:number; // name width guaranteed not longer than this\n\tpublic softwrapName:number; // name wrapping at selected characters kicks in after this width\n\tpublic includeIdentifiers = true; // if switched off, identifiers won't be included in text\n\n\t// optionally override the size estimation for the molecule: note that this should be paired with overriding\n\t// the actual drawing; return null to fall back to default sizing, or zero-size to indicate nothing\n\tpublic callbackMoleculeSize:(comp:ArrangeMixtureComponent) => Size = null;\n\n\t// --------------------- public methods ---------------------\n\n\t// sets up the object with the mandatory information\n\tconstructor(public mixture:Mixture, public measure:ArrangeMeasurement, public policy:RenderPolicy)\n\t{\n\t\tthis.scale = policy.data.pointScale;\n\t\tthis.nameFontSize = 0.5 * this.scale;\n\t\tthis.limitStructW = this.limitStructH = this.scale * 10;\n\t\tthis.hardwrapName = 12 * this.scale;\n\t\tthis.softwrapName = 8 * this.scale;\n\t}\n\n\t// carries out the arrangement\n\tpublic arrange():void\n\t{\n\t\tthis.createComponents();\n\t\tthis.layoutSubComponents(0);\n\t\tthis.contractComponents();\n\n\t\t// normalize boundaries\n\t\tlet outline:Box = null;\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tif (outline) outline = outline.union(comp.boundary); else outline = comp.boundary;\n\t\t}\n\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tcomp.boundary.x -= outline.x;\n\t\t\tcomp.boundary.y -= outline.y;\n\n\t\t\tif (comp.molLayout)\n\t\t\t{\n\t\t\t\tlet b1 = comp.boundary, b2 = comp.molBox;\n\t\t\t\tcomp.molLayout.squeezeInto(b1.x + b2.x, b1.y + b2.y, b2.w, b2.h);\n\t\t\t}\n\t\t}\n\t\tthis.width = outline.w;\n\t\tthis.height = outline.h;\n\t}\n\n\t// resize the whole thing\n\tpublic scaleComponents(modScale:number):void\n\t{\n\t\tif (modScale == 1) return;\n\n\t\tthis.scale *= modScale;\n\t\tthis.width *= modScale;\n\t\tthis.height *= modScale;\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tcomp.boundary.scaleBy(modScale);\n\t\t\tcomp.outline.scaleBy(modScale);\n\t\t\tif (comp.molBox)\n\t\t\t{\n\t\t\t\tcomp.molBox.scaleBy(modScale);\n\t\t\t\tif (comp.molLayout)\n\t\t\t\t{\n\t\t\t\t\tlet mx = comp.boundary.x + comp.molBox.x, my = comp.boundary.y + comp.molBox.y;\n\t\t\t\t\tcomp.molLayout.squeezeInto(mx, my, comp.molBox.w, comp.molBox.h);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (comp.nameBox) comp.nameBox.scaleBy(modScale);\n\t\t\tif (comp.collapseBox) comp.collapseBox.scaleBy(modScale);\n\t\t\tcomp.fontSize *= modScale;\n\t\t}\n\t}\n\n\t// returns the index of the indicated origin vector, or -1 if not present\n\tpublic findComponent(origin:number[]):number\n\t{\n\t\tfor (let n = 0; n < this.components.length; n++) if (Vec.equals(this.components[n].origin, origin)) return n;\n\t\treturn -1;\n\t}\n\n\t// turn quantity info into a readable string\n\tpublic static formatQuantity(mixcomp:MixfileComponent):string\n\t{\n\t\tlet prec = (val:number):string =>\n\t\t{\n\t\t\tif (val == null) return '';\n\t\t\tif (val > 10000) return Math.round(val).toString();\n\t\t\tlet str = val.toPrecision(6);\n\t\t\tif (str.indexOf('e') >= 0 || str.indexOf('.') < 0) return str;\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tif (str.endsWith('0')) str = str.substring(0, str.length - 1);\n\t\t\t\telse if (str.endsWith('.')) {str = str.substring(0, str.length - 1); break;}\n\t\t\t\telse break;\n\t\t\t}\n\t\t\treturn str;\n\t\t};\n\n\t\tif (mixcomp.ratio)\n\t\t{\n\t\t\tif (mixcomp.ratio.length == 2) return prec(mixcomp.ratio[0]) + '/' + prec(mixcomp.ratio[1]);\n\t\t\treturn null; // invalid ratio\n\t\t}\n\n\t\tif (mixcomp.quantity == null) return null;\n\n\t\tlet str = '';\n\t\tif (mixcomp.relation && mixcomp.relation != '=')\n\t\t{\n\t\t\tlet rel = mixcomp.relation;\n\t\t\tif (rel == '>=') rel = '\\u{2265}'; else if (rel == '<=') rel = '\\u{2264}';\n\t\t\tstr += rel /*+ ' '*/;\n\t\t}\n\t\tif (mixcomp.quantity instanceof Array)\n\t\t{\n\t\t\tif (mixcomp.quantity.length == 0) return;\n\t\t\tstr += prec(mixcomp.quantity[0]);\n\t\t\tif (mixcomp.quantity.length >= 2) str += ' - ' + prec(mixcomp.quantity[1]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr += prec(mixcomp.quantity); // is presumed to be scalar\n\t\t\tif (mixcomp.error)\n\t\t\t{\n\t\t\t\t// TODO: match the significant figures more carefully\n\t\t\t\tstr += ' \\u{00B1} ' + prec(mixcomp.error);\n\t\t\t}\n\t\t}\n\n\t\tif (mixcomp.units)\n\t\t{\n\t\t\tif (!mixcomp.units.startsWith('%')) str += ' ';\n\t\t\tstr += mixcomp.units;\n\t\t}\n\n\t\treturn str;\n\t}\n\n\t// if the component has a \"standardised\" quantity, format and return\n\tprivate formatNormQuantity(origin:number[]):string\n\t{\n\t\tif (!this.norm) return;\n\t\tlet note = this.norm.findNote(origin);\n\t\tif (!note || !note.concQuantity) return;\n\n\t\tlet comp:MixfileComponent =\n\t\t{\n\t\t\tquantity: note.concQuantity,\n\t\t\terror: note.concError,\n\t\t\tunits: note.concUnits,\n\t\t\trelation: note.concRelation,\n\t\t};\n\t\treturn ArrangeMixture.formatQuantity(comp);\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\t// instantiate each component in the diagram (which includes pluses and arrows)\n\tprivate createComponents():void\n\t{\n\t\t// assemble the components into a flat hierarchy\n\t\tlet examineBranch = (origin:number[], mixcomp:MixfileComponent, idx:number):void =>\n\t\t{\n\t\t\tlet comp:ArrangeMixtureComponent = {origin, content: mixcomp, parentIdx: idx};\n\t\t\tlet parentIdx = this.components.push(comp) - 1;\n\n\t\t\t// see if it's been indicated as collapsed\n\t\t\tcomp.isCollapsed = false;\n\t\t\tfor (let origin of this.collapsedBranches) if (Vec.equals(origin, comp.origin)) comp.isCollapsed = true;\n\n\t\t\tif (mixcomp.contents && !comp.isCollapsed) for (let n = 0; n < mixcomp.contents.length; n++)\n\t\t\t{\n\t\t\t\tlet subOrigin = Vec.append(origin, n);\n\t\t\t\texamineBranch(subOrigin, mixcomp.contents[n], parentIdx);\n\t\t\t}\n\t\t};\n\t\texamineBranch([], this.mixture.mixfile, -1);\n\n\t\tlet padding = PADDING * this.scale;\n\n\t\t// do the sizing for each component\n\t\tfor (let [idx, comp] of this.components.entries())\n\t\t{\n\t\t\tlet mixcomp = comp.content;\n\n\t\t\t// handle molecule, if any\n\t\t\tif (mixcomp.molfile) comp.mol = MoleculeStream.readUnknown(mixcomp.molfile);\n\n\t\t\tlet molsz = this.callbackMoleculeSize && this.callbackMoleculeSize(comp);\n\t\t\tif (molsz)\n\t\t\t{\n\t\t\t\tcomp.molBox = new Box(padding, padding, Math.ceil(molsz.w), Math.ceil(molsz.h));\n\t\t\t}\n\t\t\telse if (comp.mol)\n\t\t\t{\n\t\t\t\tcomp.molLayout = new ArrangeMolecule(comp.mol, this.measure, this.policy);\n\t\t\t\tcomp.molLayout.arrange();\n\t\t\t\tcomp.molLayout.squeezeInto(0, 0, this.limitStructW, this.limitStructH);\n\t\t\t\tlet bounds = comp.molLayout.determineBoundary();\n\t\t\t\tcomp.molBox = new Box(padding, padding, Math.ceil(bounds[2] - bounds[0]), Math.ceil(bounds[3] - bounds[1]));\n\t\t\t}\n\t\t\telse comp.molBox = Box.zero();\n\n\t\t\t// handle name, or other content needing representation\n\t\t\tcomp.nameLines = [];\n\t\t\tif (mixcomp.name) this.wrapSplitName(comp.nameLines, mixcomp.name, 0x000000, ArrangeMixtureLineSource.Name);\n\n\t\t\t// (... synonyms, and linewrapping ...)\n\t\t\tlet qline = ArrangeMixture.formatQuantity(mixcomp);\n\t\t\tif (qline) comp.nameLines.push({text: qline, col: 0x000000, source: ArrangeMixtureLineSource.Quantity});\n\n\t\t\tqline = this.formatNormQuantity(comp.origin);\n\t\t\tif (qline) comp.nameLines.push({text: `(${qline})`, col: 0x808080, source: ArrangeMixtureLineSource.Quantity});\n\n\t\t\tif (this.includeIdentifiers && mixcomp.identifiers) for (let key in mixcomp.identifiers)\n\t\t\t{\n\t\t\t\tlet line = key + ' ';\n\t\t\t\tlet val = mixcomp.identifiers[key];\n\t\t\t\tif (val instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tfor (let n = 0; n < val.length; n++) line += (n == 0 ? '' : ', ') + val[n];\n\t\t\t\t}\n\t\t\t\telse line += val;\n\t\t\t\tcomp.nameLines.push({text: this.truncateEllipsis(line), col: 0x42007E, source: ArrangeMixtureLineSource.Identifier});\n\t\t\t}\n\t\t\tif (mixcomp.metadata) for (let meta of mixcomp.metadata)\n\t\t\t{\n\t\t\t\tlet metaString = (m:string | number):string =>\n\t\t\t\t{\n\t\t\t\t\tif (typeof m == 'number') return formatDouble(m, 4);\n\t\t\t\t\tif (!OntologyTree.main) return m;\n\t\t\t\t\tlet branch = OntologyTree.main.getBranch(m);\n\t\t\t\t\tif (Vec.notBlank(branch)) return branch[0].label;\n\t\t\t\t\treturn m;\n\t\t\t\t};\n\t\t\t\tlet bits:string[] = [];\n\t\t\t\tif (Array.isArray(meta)) bits = meta.map((m) => metaString(m)); else bits = [metaString(meta as string | number)];\n\t\t\t\tcomp.nameLines.push({text: bits.join(' '), col: 0x002B88, source: ArrangeMixtureLineSource.Meta});\n\t\t\t}\n\n\t\t\tcomp.nameBox = new Box(padding, padding);\n\t\t\tcomp.fontSize = this.nameFontSize;\n\t\t\tfor (let n = 0; n < comp.nameLines.length; n++)\n\t\t\t{\n\t\t\t\tlet wad = this.measure.measureText(comp.nameLines[n].text, comp.fontSize);\n\t\t\t\tcomp.nameBox.w = Math.max(comp.nameBox.w, wad[0]);\n\t\t\t\tcomp.nameBox.h += wad[1] + (n > 0 ? wad[2] * 2 : 0);\n\t\t\t}\n\n\t\t\tcomp.outline = Box.zero();\n\t\t\tcomp.outline.w = Math.max(comp.molBox.w, comp.nameBox.w) + 2 * padding;\n\t\t\tcomp.outline.h = comp.molBox.h + comp.nameBox.h + 2 * padding;\n\t\t\tif (comp.molBox.notEmpty() && comp.nameBox.notEmpty())\n\t\t\t{\n\t\t\t\tcomp.outline.h += padding;\n\t\t\t\tcomp.nameBox.y += comp.molBox.h + padding;\n\t\t\t\tcomp.molBox.w = comp.nameBox.w = Math.max(comp.molBox.w, comp.nameBox.w);\n\t\t\t}\n\n\t\t\tif (this.minBoxSize)\n\t\t\t{\n\t\t\t\tlet minsz = this.minBoxSize;\n\t\t\t\tlet dw = minsz.w - comp.outline.w, dh = minsz.h - comp.outline.h;\n\t\t\t\tif (dw > 0)\n\t\t\t\t{\n\t\t\t\t\tcomp.outline.w += dw;\n\t\t\t\t\tcomp.molBox.w += dw;\n\t\t\t\t}\n\t\t\t\tif (dh > 0)\n\t\t\t\t{\n\t\t\t\t\tcomp.outline.h += dh;\n\t\t\t\t\tcomp.molBox.h += dh;\n\t\t\t\t\tcomp.nameBox.y += dh;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcomp.boundary = comp.outline.clone();\n\n\t\t\tif ((this.showCollapsors || comp.isCollapsed) && Vec.notBlank(comp.content.contents))\n\t\t\t{\n\t\t\t\tlet gap = COLLAPSE_GAP * this.scale, wh = COLLAPSE_SIZE * this.scale;\n\t\t\t\tcomp.collapseBox = new Box(comp.boundary.maxX() + gap, comp.boundary.midY() - 0.5 * wh, wh, wh);\n\t\t\t\tcomp.boundary.w += gap + wh;\n\t\t\t}\n\t\t}\n\t}\n\n\t// arranges all of the subcomponents for a given index, positioning them relative to the current position; returns the indices of\n\t// the entire branch, for subsequent touchup\n\tprivate layoutSubComponents(idx:number):number[]\n\t{\n\t\tlet wholeBranch:number[] = [idx];\n\t\tlet branchBlock:number[][] = [];\n\t\tlet branchBox:Box[] = [];\n\n\t\tlet totalWidth = 0, totalHeight = 0;\n\n\t\tfor (let n = idx + 1; n < this.components.length; n++)\n\t\t{\n\t\t\tlet comp = this.components[n];\n\t\t\tif (comp.parentIdx != idx) continue;\n\n\t\t\tlet branch = this.layoutSubComponents(n);\n\t\t\tif (branch.length == 0) continue;\n\n\t\t\tlet box:Box = null;\n\t\t\tfor (let i of branch)\n\t\t\t{\n\t\t\t\twholeBranch.push(i);\n\t\t\t\tlet bound = this.components[i].boundary;\n\t\t\t\tif (box) box = box.union(bound); else box = bound;\n\t\t\t}\n\n\t\t\tbranchBlock.push(branch);\n\t\t\tbranchBox.push(box);\n\n\t\t\ttotalWidth = Math.max(totalWidth, box.w);\n\t\t\ttotalHeight += box.h;\n\t\t}\n\t\tif (branchBlock.length == 0) return wholeBranch;\n\n\t\tlet hspace = HSPACE * this.scale, vspace = VSPACE * this.scale;\n\t\ttotalHeight += vspace * (branchBlock.length - 1);\n\n\t\tlet cbox = this.components[idx].boundary;\n\t\tlet x = cbox.maxX() + hspace;\n\n\t\t// special case: may try to pack the boxes into a smaller area rather than vertically on top of each other\n\t\tif (this.packBranches && branchBlock.length > 2 && totalHeight > this.packBranches.h)\n\t\t{\n\t\t\tlet packSize = this.packBranches.clone();\n\t\t\tfor (let box of branchBox) packSize.h = Math.max(packSize.h, box.h); // if a sub-box is bigger than overall, no need to limit it further\n\n\t\t\tlet sq = new SquarePacking(packSize, branchBox, /*hspace*/ vspace, vspace);\n\t\t\tif (sq.pack())\n\t\t\t{\n\t\t\t\tlet y = cbox.midY() - 0.5 * sq.outline.h;\n\t\t\t\tfor (let n = 0; n < branchBlock.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet box = sq.layout[n];\n\t\t\t\t\tlet dx = x - branchBox[n].x + box.x, dy = y - branchBox[n].y + box.y;\n\t\t\t\t\tfor (let i of branchBlock[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.components[i].boundary.x += dx;\n\t\t\t\t\t\tthis.components[i].boundary.y += dy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn wholeBranch;\n\t\t\t}\n\t\t}\n\n\t\t// !! note: not guaranteed that x is high enough to not interfere with other boxes; will need a post-check of some kind, maybe here,\n\t\t//    maybe further down the line\n\n\t\tlet y = cbox.midY() - 0.5 * totalHeight;\n\t\tfor (let n = 0; n < branchBlock.length; n++)\n\t\t{\n\t\t\tlet dx = x - branchBox[n].x, dy = y - branchBox[n].y;\n\t\t\tfor (let i of branchBlock[n])\n\t\t\t{\n\t\t\t\tthis.components[i].boundary.x += dx;\n\t\t\t\tthis.components[i].boundary.y += dy;\n\t\t\t}\n\t\t\ty += branchBox[n].h + vspace;\n\t\t}\n\n\t\treturn wholeBranch;\n\t}\n\n\t// component layout is done, but may be able to \"reel in\" some of the branches to make it smaller\n\tprivate contractComponents():void\n\t{\n\t\tlet allChildren:number[][] = [];\n\t\tfor (let n = 0; n < this.components.length; n++)\n\t\t{\n\t\t\tallChildren.push([]);\n\t\t\tfor (let idx = this.components[n].parentIdx; idx >= 0; idx = this.components[idx].parentIdx) allChildren[idx].push(n);\n\t\t}\n\n\t\tlet hspace = HSPACE * this.scale, padding = PADDING * this.scale;\n\n\t\twhile (true)\n\t\t{\n\t\t\tlet anything = false;\n\n\t\t\tfor (let n = 1; n < allChildren.length; n++)\n\t\t\t{\n\t\t\t\tlet pidx = this.components[n].parentIdx;\n\t\t\t\tlet boundX = this.components[pidx].boundary.maxX() + hspace;\n\t\t\t\tlet dx = this.components[n].boundary.minX() - boundX; // how far to move to the left\n\t\t\t\tif (dx < 1) continue; // no room to contract\n\n\t\t\t\tlet idxInside = [n, ...allChildren[n]];\n\t\t\t\tlet idxOutside = Vec.identity0(allChildren.length).filter((idx) => !idxInside.includes(idx));\n\n\t\t\t\tfor (let i of idxInside)\n\t\t\t\t{\n\t\t\t\t\tlet box1 = this.components[i].boundary.withGrow(padding, padding);\n\t\t\t\t\tfor (let j of idxOutside)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet box2 = this.components[j].boundary;\n\t\t\t\t\t\tif (box2.minX() > box1.maxX()) continue;\n\t\t\t\t\t\tif (box1.minY() > box2.maxY() || box1.maxY() < box2.minY()) continue;\n\n\t\t\t\t\t\tdx = Math.min(dx, box1.minX() - box2.maxX());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dx > 1)\n\t\t\t\t{\n\t\t\t\t\tfor (let n of idxInside) this.components[n].boundary.x -= dx;\n\t\t\t\t\tanything = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!anything) break;\n\t\t}\n\t}\n\n\t// if the given string is longer than the soft/hard limit, looks to break it up into smaller pieces; each of them is\n\t// appended to the list parameter\n\tprivate wrapSplitName(list:ArrangeMixtureLine[], text:string, col:number, source:ArrangeMixtureLineSource):void\n\t{\n\t\tif (!text) return;\n\t\tlet xpos = FontData.measureWidths(text, this.nameFontSize);\n\t\tif (Vec.last(xpos) <= this.softwrapName)\n\t\t{\n\t\t\tlist.push({text, col, source});\n\t\t\treturn;\n\t\t}\n\n\t\tlet p = 0;\n\t\tfor (; xpos[p] < this.softwrapName; p++) {}\n\t\tfor (; xpos[p] < this.hardwrapName; p++)\n\t\t{\n\t\t\tlet ch = text.charAt(p);\n\t\t\tif (' ,;-/'.includes(ch))\n\t\t\t{\n\t\t\t\tp++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlist.push({text: text.substring(0, p).trim(), col, source});\n\t\tthis.wrapSplitName(list, text.substring(p).trim(), col, source);\n\t}\n\n\t// if the line is longer than the hard wrap limit, just truncate with ellipsis\n\tprivate truncateEllipsis(txt:string):string\n\t{\n\t\tlet xpos = FontData.measureWidths(txt, this.nameFontSize);\n\t\tif (Vec.last(xpos) <= this.hardwrapName) return txt;\n\t\tlet ellipsis = '...', ellw = FontData.measureText(ellipsis, this.nameFontSize)[0];\n\t\tlet keep = 1;\n\t\tfor (; keep < txt.length; keep++) if (xpos[keep] + ellw > this.hardwrapName) break;\n\t\treturn txt.substring(0, keep) + ellipsis;\n\t}\n}\n\n","import { Box } from '../util/Geom';\nimport { colourAlpha, colourCanvas, colourCode, DEGRAD, newElement, pixelDensity } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { FontData } from './FontData';\nexport var TextAlign;\n(function (TextAlign) {\n    TextAlign[TextAlign[\"Centre\"] = 0] = \"Centre\";\n    TextAlign[TextAlign[\"Left\"] = 1] = \"Left\";\n    TextAlign[TextAlign[\"Right\"] = 2] = \"Right\";\n    TextAlign[TextAlign[\"Baseline\"] = 0] = \"Baseline\";\n    TextAlign[TextAlign[\"Middle\"] = 4] = \"Middle\";\n    TextAlign[TextAlign[\"Top\"] = 8] = \"Top\";\n    TextAlign[TextAlign[\"Bottom\"] = 16] = \"Bottom\";\n})(TextAlign || (TextAlign = {}));\nvar PrimClass;\n(function (PrimClass) {\n    PrimClass[PrimClass[\"Line\"] = 1] = \"Line\";\n    PrimClass[PrimClass[\"Rect\"] = 2] = \"Rect\";\n    PrimClass[PrimClass[\"Oval\"] = 3] = \"Oval\";\n    PrimClass[PrimClass[\"Path\"] = 4] = \"Path\";\n    PrimClass[PrimClass[\"Text\"] = 5] = \"Text\";\n    PrimClass[PrimClass[\"TextNative\"] = 6] = \"TextNative\";\n})(PrimClass || (PrimClass = {}));\nfunction pixelCoord(val) {\n    var _a;\n    let str = val.toFixed(4);\n    let match = (_a = /^(.*\\.\\d*?[1-9]+)0+$/.exec(str)) !== null && _a !== void 0 ? _a : /^(.*)\\.0+$/.exec(str);\n    if (match)\n        str = match[1];\n    return str;\n}\nclass SpoolSVG {\n    constructor(prettyPrint) {\n        this.prettyPrint = prettyPrint;\n        this.lines = [];\n        this.depth = 0;\n    }\n    spool(str) { if ((str === null || str === void 0 ? void 0 : str.length) > 0)\n        this.lines.push(str); }\n    start(str) {\n        if (this.prettyPrint && this.depth > 0)\n            this.lines.push('  '.repeat(this.depth));\n        this.spool(str);\n    }\n    stop(str) {\n        this.spool(str);\n        if (this.prettyPrint)\n            this.lines.push('\\n');\n    }\n    whole(str) {\n        if (this.prettyPrint && this.depth > 0)\n            this.lines.push('  '.repeat(this.depth));\n        this.spool(str);\n        if (this.prettyPrint)\n            this.lines.push('\\n');\n    }\n    attr(key, val) {\n        if (typeof val == 'number') {\n            val = pixelCoord(val);\n        }\n        this.spool(` ${key}=\"${val}\"`);\n    }\n    inc() { this.depth++; }\n    dec() { this.depth--; }\n    toString() { return this.lines.join(''); }\n}\nclass MetaVector {\n    constructor(vec) {\n        this.types = [];\n        this.prims = [];\n        this.width = 0;\n        this.height = 0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.scale = 1;\n        this.density = 1;\n        this.charMissing = false;\n        this.lowX = null;\n        this.lowY = null;\n        this.highX = null;\n        this.highY = null;\n        const font = FontData.main;\n        this.charMask = Vec.booleanArray(false, font.UNICODE.length);\n        if (vec != null) {\n            if (vec.size != null) {\n                this.width = vec.size[0];\n                this.height = vec.size[1];\n            }\n            if (vec.types != null)\n                this.types = vec.types;\n            if (vec.prims != null)\n                this.prims = vec.prims;\n            for (let p of this.prims)\n                if (p.primClass == PrimClass.Text) {\n                    let { txt } = p;\n                    for (let n = 0; n < txt.length; n++) {\n                        let i = font.getIndex(txt.charAt(n));\n                        if (i >= 0)\n                            this.charMask[i] = true;\n                        else\n                            this.charMissing = true;\n                    }\n                }\n        }\n    }\n    drawLine(x1, y1, x2, y2, colour, thickness) {\n        if (thickness == null)\n            thickness = 1;\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Line, thickness, colour });\n        const bump = 0.5 * thickness;\n        this.updateBounds(Math.min(x1, x2) - bump, Math.min(y1, y2) - bump);\n        this.updateBounds(Math.max(x1, x2) + bump, Math.max(y1, y2) + bump);\n        this.prims.push({ primClass: PrimClass.Line, typeidx, x1, y1, x2, y2 });\n    }\n    drawRect(x, y, w, h, edgeCol, thickness, fillCol) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Rect, edgeCol, fillCol, thickness });\n        const bump = 0.5 * thickness;\n        this.updateBounds(x - bump, y - bump);\n        this.updateBounds(x + w + bump, y + h + bump);\n        this.prims.push({ primClass: PrimClass.Rect, typeidx, x, y, w, h });\n    }\n    drawOval(cx, cy, rw, rh, edgeCol, thickness, fillCol) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        const bump = 0.5 * thickness;\n        this.updateBounds(cx - rw - bump, cy - rh - bump);\n        this.updateBounds(cx + rw + bump, cy + rh + bump);\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Oval, edgeCol, fillCol, thickness });\n        this.prims.push({ primClass: PrimClass.Oval, typeidx, cx, cy, rw, rh });\n    }\n    drawPath(xpoints, ypoints, ctrlFlags, isClosed, edgeCol, thickness, fillCol, hardEdge) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        if (hardEdge == null)\n            hardEdge = false;\n        const bump = 0.5 * thickness;\n        for (let n = 0; n < xpoints.length; n++) {\n            this.updateBounds(xpoints[n] - bump, ypoints[n] - bump);\n            if (bump != 0)\n                this.updateBounds(xpoints[n] + bump, ypoints[n] + bump);\n        }\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Path, edgeCol, fillCol, thickness, hardEdge });\n        this.prims.push({ primClass: PrimClass.Path, typeidx, count: xpoints.length,\n            x: Vec.duplicate(xpoints), y: Vec.duplicate(ypoints), ctrl: ctrlFlags && [...ctrlFlags], closed: isClosed });\n    }\n    drawPoly(xpoints, ypoints, edgeCol, thickness, fillCol, hardEdge) {\n        this.drawPath(xpoints, ypoints, null, true, edgeCol, thickness, fillCol, hardEdge);\n    }\n    drawText(x, y, txt, size, colour, align, direction) {\n        if (align == null)\n            align = TextAlign.Left | TextAlign.Baseline;\n        if (direction == null)\n            direction = 0;\n        let cosTheta = 1, sinTheta = 0;\n        if (direction != 0)\n            [cosTheta, sinTheta] = [Math.cos(direction * DEGRAD), Math.sin(direction * DEGRAD)];\n        const font = FontData.main;\n        for (let n = 0; n < txt.length; n++) {\n            let i = font.getIndex(txt.charAt(n));\n            if (i >= 0)\n                this.charMask[i] = true;\n            else\n                this.charMissing = true;\n        }\n        let metrics = font.measureText(txt, size);\n        let bx = 0, by = 0;\n        let dx = 0;\n        if ((align & TextAlign.Left) != 0) { }\n        else if ((align & TextAlign.Right) != 0)\n            dx = -metrics[0];\n        else\n            dx = -0.5 * metrics[0];\n        if (dx != 0) {\n            bx += dx * cosTheta;\n            by += dx * sinTheta;\n        }\n        let dy = 0;\n        if ((align & TextAlign.Middle) != 0)\n            dy = 0.5 * metrics[1];\n        else if ((align & TextAlign.Top) != 0)\n            dy = metrics[1];\n        else if ((align & TextAlign.Bottom) != 0)\n            dy = -metrics[2];\n        if (dy != 0) {\n            bx -= dy * sinTheta;\n            by += dy * cosTheta;\n        }\n        let x1 = 0, y1 = 0, x2 = 0, y2 = 0;\n        let tx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            if (i >= 0) {\n                let outlineX = font.getOutlineX(i), outlineY = font.getOutlineY(i);\n                x1 = Math.min(x1, tx + Vec.min(outlineX));\n                x2 = Math.max(x2, tx + Vec.max(outlineX));\n                y1 = Math.min(y1, -Vec.max(outlineY));\n                y2 = Math.max(y2, -Vec.min(outlineY));\n                tx += font.HORIZ_ADV_X[i];\n                if (n < txt.length - 1)\n                    tx += font.getKerning(ch, txt.charAt(n + 1));\n            }\n            else\n                tx += font.MISSING_HORZ;\n        }\n        const mscale = size * font.INV_UNITS_PER_EM;\n        if (direction == 0) {\n            this.updateBounds(x + bx + x1 * mscale, y + by + y1 * mscale);\n            this.updateBounds(x + bx + x2 * mscale, y + by + y2 * mscale);\n        }\n        else {\n            let rx1 = x1 * mscale, ry1 = y1 * mscale;\n            let rx2 = x2 * mscale, ry2 = y2 * mscale;\n            this.updateBounds(x + bx + rx1 * cosTheta - ry1 * sinTheta, y + by + rx1 * sinTheta + ry1 * cosTheta);\n            this.updateBounds(x + bx + rx2 * cosTheta - ry1 * sinTheta, y + by + rx2 * sinTheta + ry1 * cosTheta);\n            this.updateBounds(x + bx + rx2 * cosTheta - ry2 * sinTheta, y + by + rx2 * sinTheta + ry2 * cosTheta);\n            this.updateBounds(x + bx + rx1 * cosTheta - ry2 * sinTheta, y + by + rx1 * sinTheta + ry2 * cosTheta);\n        }\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Text, size, colour });\n        this.prims.push({ primClass: PrimClass.Text, typeidx, x: x + bx, y: y + by, txt, direction });\n    }\n    drawTextNative(x, y, txt, fontFamily, fontSize, colour, align, opt) {\n        if (!opt)\n            opt = {};\n        if (align == null)\n            align = TextAlign.Left | TextAlign.Baseline;\n        const font = FontData.main;\n        let metrics = font.measureTextNative(txt, fontFamily, fontSize, opt);\n        if ((align & TextAlign.Left) != 0) { }\n        else if ((align & TextAlign.Right) != 0)\n            x -= metrics[0];\n        else\n            x -= 0.5 * metrics[0];\n        if ((align & TextAlign.Middle) != 0)\n            y += 0.5 * metrics[1];\n        else if ((align & TextAlign.Top) != 0)\n            y += metrics[1];\n        else if ((align & TextAlign.Bottom) != 0)\n            y -= metrics[2];\n        this.updateBounds(x, y - metrics[1]);\n        this.updateBounds(x + metrics[0], y + metrics[2]);\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.TextNative, family: fontFamily, size: fontSize, colour, opt });\n        this.prims.push({ primClass: PrimClass.TextNative, typeidx, x, y, txt });\n    }\n    boundLowX() { return this.lowX; }\n    boundLowY() { return this.lowY; }\n    boundHighX() { return this.highX; }\n    boundHighY() { return this.highY; }\n    getBounds() { return new Box(this.lowX, this.lowY, this.highX - this.lowX, this.highY - this.lowY); }\n    measure() {\n        this.width = Math.ceil(this.highX - this.lowX);\n        this.height = Math.ceil(this.highY - this.lowY);\n    }\n    normalise() {\n        if (this.lowX != 0 || this.lowY != 0)\n            this.transformPrimitives(-this.lowX, -this.lowY, 1, 1);\n        this.width = Math.ceil(this.highX - this.lowX);\n        this.height = Math.ceil(this.highY - this.lowY);\n    }\n    setSize(width, height) { this.width = width; this.height = height; }\n    transformIntoBox(box) {\n        this.transformPrimitives(-this.lowX, -this.lowY, 1, 1);\n        let nw = Math.ceil(this.highX - this.lowX), nh = Math.ceil(this.highY - this.lowY);\n        let scale = 1;\n        if (nw > box.w) {\n            let mod = box.w / nw;\n            nw = box.w;\n            nh *= mod;\n            scale *= mod;\n        }\n        if (nh > box.h) {\n            let mod = box.h / nh;\n            nh = box.h;\n            nw *= mod;\n            scale *= mod;\n        }\n        let ox = 0.5 * (box.w - nw), oy = 0.5 * (box.h - nh);\n        this.transformPrimitives(box.x + ox, box.y + oy, scale, scale);\n    }\n    scaleExtent(maxWidth, maxHeight) {\n        let w = this.highX - this.lowX, h = this.highY - this.lowY;\n        if (w <= maxWidth && h <= maxHeight)\n            return;\n        let scale = Math.min(maxWidth / w, maxHeight / h);\n        this.transformPrimitives(0, 0, scale, scale);\n    }\n    transformPrimitives(ox, oy, sw, sh) {\n        if (ox == 0 && oy == 0 && sw == 1 && sh == 1)\n            return;\n        for (let a of this.prims) {\n            const type = a.primClass;\n            if (type == PrimClass.Line) {\n                let line = a;\n                line.x1 = ox + line.x1 * sw;\n                line.y1 = oy + line.y1 * sh;\n                line.x2 = ox + line.x2 * sw;\n                line.y2 = oy + line.y2 * sh;\n            }\n            else if (type == PrimClass.Rect) {\n                let rect = a;\n                rect.x = ox + rect.x * sw;\n                rect.y = oy + rect.y * sh;\n                rect.w = rect.w * sw;\n                rect.h = rect.h * sh;\n            }\n            else if (type == PrimClass.Oval) {\n                let oval = a;\n                oval.cx = ox + oval.cx * sw;\n                oval.cy = oy + oval.cy * sh;\n                oval.rw *= sw;\n                oval.rh *= sh;\n            }\n            else if (type == PrimClass.Path) {\n                let path = a;\n                let sz = path.count, px = path.x, py = path.y;\n                for (let n = 0; n < sz; n++) {\n                    px[n] = ox + px[n] * sw;\n                    py[n] = oy + py[n] * sh;\n                }\n            }\n            else if (type == PrimClass.Text || type == PrimClass.TextNative) {\n                let text = a;\n                text.x = ox + text.x * sw;\n                text.y = oy + text.y * sh;\n            }\n        }\n        let swsh = 0.5 * (sw + sh);\n        if (swsh != 1)\n            for (let t of this.types) {\n                const type = t.primClass;\n                if (type == PrimClass.Line)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Rect)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Oval)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Path)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Text)\n                    t.size *= swsh;\n                else if (type == PrimClass.TextNative)\n                    t.size *= swsh;\n            }\n        this.lowX = ox + this.lowX * sw;\n        this.lowY = oy + this.lowY * sh;\n        this.highX = ox + this.highX * sw;\n        this.highY = oy + this.highY * sh;\n    }\n    renderInto(parent) {\n        let canvas = newElement(parent, 'canvas', { 'width': this.width, 'height': this.height });\n        this.renderCanvas(canvas);\n        return canvas;\n    }\n    renderCanvas(canvas, clearFirst) {\n        let ctx = canvas.getContext('2d');\n        if (clearFirst)\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n        let w = this.width, h = this.height;\n        this.density = pixelDensity();\n        canvas.style.width = w + 'px';\n        canvas.style.height = h + 'px';\n        canvas.width = w * this.density;\n        canvas.height = h * this.density;\n        this.renderContext(ctx);\n    }\n    renderContext(ctx) {\n        ctx.save();\n        ctx.scale(this.density, this.density);\n        this.typeObj = [];\n        for (let n = 0; n < this.types.length; n++) {\n            let t = this.types[n];\n            if (t.primClass == PrimClass.Line)\n                this.typeObj[n] = this.setupTypeLine(t);\n            else if (t.primClass == PrimClass.Rect)\n                this.typeObj[n] = this.setupTypeRect(t);\n            else if (t.primClass == PrimClass.Oval)\n                this.typeObj[n] = this.setupTypeOval(t);\n            else if (t.primClass == PrimClass.Path)\n                this.typeObj[n] = this.setupTypePath(t);\n            else if (t.primClass == PrimClass.Text)\n                this.typeObj[n] = this.setupTypeText(t);\n            else if (t.primClass == PrimClass.TextNative)\n                this.typeObj[n] = this.setupTypeTextNative(t);\n        }\n        for (let n = 0; n < this.prims.length; n++) {\n            let p = this.prims[n];\n            if (p.primClass == PrimClass.Line)\n                this.renderLine(ctx, p);\n            else if (p.primClass == PrimClass.Rect)\n                this.renderRect(ctx, p);\n            else if (p.primClass == PrimClass.Oval)\n                this.renderOval(ctx, p);\n            else if (p.primClass == PrimClass.Path)\n                this.renderPath(ctx, p);\n            else if (p.primClass == PrimClass.Text)\n                this.renderText(ctx, p);\n            else if (p.primClass == PrimClass.TextNative)\n                this.renderTextNative(ctx, p);\n        }\n        ctx.restore();\n    }\n    createSVG(prettyPrint = false, withXlink = false) {\n        let svg = new SpoolSVG(prettyPrint);\n        svg.start('<svg xmlns=\"http://www.w3.org/2000/svg\"');\n        if (withXlink)\n            svg.attr('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n        svg.attr('width', this.width);\n        svg.attr('height', this.height);\n        svg.attr('viewBox', `0 0 ${this.width} ${this.height}`);\n        svg.stop('>');\n        svg.inc();\n        this.renderSVG(svg, withXlink);\n        svg.dec();\n        svg.whole('</svg>');\n        return svg.toString();\n    }\n    renderSVG(svg, withXlink = false) {\n        this.typeObj = [];\n        const font = FontData.main;\n        svg.whole('<defs>');\n        svg.inc();\n        if (this.charMissing) {\n            svg.start('<path');\n            svg.attr('id', 'missing');\n            svg.attr('d', font.MISSING_DATA);\n            svg.attr('edge', 'none');\n            svg.stop('/>');\n        }\n        for (let n = 0; n < font.UNICODE.length; n++)\n            if (this.charMask[n]) {\n                svg.start('<path');\n                svg.attr('id', 'char' + n);\n                svg.attr('d', font.GLYPH_DATA[n]);\n                svg.attr('edge', 'none');\n                svg.stop('/>');\n            }\n        svg.dec();\n        svg.whole('</defs>');\n        for (let n = 0; n < this.types.length; n++) {\n            let t = this.types[n];\n            if (t.primClass == PrimClass.Line)\n                this.typeObj[n] = this.setupTypeLine(t);\n            else if (t.primClass == PrimClass.Rect)\n                this.typeObj[n] = this.setupTypeRect(t);\n            else if (t.primClass == PrimClass.Oval)\n                this.typeObj[n] = this.setupTypeOval(t);\n            else if (t.primClass == PrimClass.Path)\n                this.typeObj[n] = this.setupTypePath(t);\n            else if (t.primClass == PrimClass.Text)\n                this.typeObj[n] = this.setupTypeText(t);\n            else if (t.primClass == PrimClass.TextNative)\n                this.typeObj[n] = this.setupTypeTextNative(t);\n        }\n        for (let n = 0; n < this.prims.length;) {\n            let p = this.prims[n], num = 1;\n            if (p.primClass != PrimClass.Path && p.primClass != PrimClass.Text && p.primClass != PrimClass.TextNative) {\n                for (; n + num < this.prims.length; num++)\n                    if (this.prims[n + num].primClass != p.primClass || this.prims[n + num].typeidx != p.typeidx)\n                        break;\n            }\n            if (p.primClass == PrimClass.Line) {\n                if (num == 1)\n                    this.svgLine1(svg, p);\n                else\n                    this.svgLineN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Rect) {\n                if (num == 1)\n                    this.svgRect1(svg, p);\n                else\n                    this.svgRectN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Oval) {\n                if (num == 1)\n                    this.svgOval1(svg, p);\n                else\n                    this.svgOvalN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Path)\n                this.svgPath(svg, p);\n            else if (p.primClass == PrimClass.Text)\n                this.svgText(svg, p, withXlink);\n            else if (p.primClass == PrimClass.TextNative)\n                this.svgTextNative(svg, p);\n            n += num;\n        }\n    }\n    spool(into) {\n        for (let p of this.prims) {\n            if (p.primClass == PrimClass.Line) {\n                let { typeidx, x1, y1, x2, y2 } = p;\n                let { thickness, colour } = this.types[typeidx];\n                into.drawLine(x1, y1, x2, y2, colour, thickness);\n            }\n            else if (p.primClass == PrimClass.Rect) {\n                let { typeidx, x, y, w, h } = p;\n                let { edgeCol, fillCol, thickness } = this.types[typeidx];\n                into.drawRect(x, y, w, h, edgeCol, thickness, fillCol);\n            }\n            else if (p.primClass == PrimClass.Oval) {\n                let { typeidx, cx, cy, rw, rh } = p;\n                let { edgeCol, fillCol, thickness } = this.types[typeidx];\n                into.drawOval(cx, cy, rw, rh, edgeCol, thickness, fillCol);\n            }\n            else if (p.primClass == PrimClass.Path) {\n                let { typeidx, count, x, y, ctrl, closed } = p;\n                let { edgeCol, fillCol, thickness, hardEdge } = this.types[typeidx];\n                into.drawPath(x, y, ctrl, closed, edgeCol, thickness, fillCol, hardEdge);\n            }\n            else if (p.primClass == PrimClass.Text) {\n                let { typeidx, x, y, txt, direction } = p;\n                let { size, colour } = this.types[typeidx];\n                into.drawText(x, y, txt, size, colour, null, direction);\n            }\n            else if (p.primClass == PrimClass.TextNative) {\n                let { typeidx, x, y, txt } = p;\n                let { family, size, colour } = this.types[typeidx];\n                into.drawTextNative(x, y, txt, family, size, colour);\n            }\n        }\n    }\n    setupTypeLine(t) {\n        let thickness = t.thickness * this.scale;\n        let colour = t.colour;\n        return { primClass: t.primClass, thickness, colour };\n    }\n    setupTypeRect(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness };\n    }\n    setupTypeOval(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness };\n    }\n    setupTypePath(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        let hardEdge = t.hardEdge;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness, hardEdge };\n    }\n    setupTypeText(t) {\n        let size = t.size * this.scale;\n        let colour = t.colour;\n        return { primClass: t.primClass, colour, size };\n    }\n    setupTypeTextNative(t) {\n        let family = t.family;\n        let size = t.size * this.scale;\n        let colour = t.colour;\n        let opt = t.opt;\n        return { primClass: t.primClass, colour, family, size, opt };\n    }\n    renderLine(ctx, line) {\n        let { x1, y1, x2, y2 } = line;\n        let { colour, thickness } = this.typeObj[line.typeidx];\n        x1 = this.offsetX + this.scale * x1;\n        y1 = this.offsetY + this.scale * y1;\n        x2 = this.offsetX + this.scale * x2;\n        y2 = this.offsetY + this.scale * y2;\n        if (colour != null) {\n            ctx.beginPath();\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2);\n            ctx.strokeStyle = colourCanvas(colour);\n            ctx.lineWidth = thickness;\n            ctx.lineCap = 'round';\n            ctx.stroke();\n        }\n    }\n    renderRect(ctx, rect) {\n        let { x, y, w, h } = rect;\n        let { edgeCol, fillCol, thickness } = this.typeObj[rect.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        w *= this.scale;\n        h *= this.scale;\n        if (fillCol != MetaVector.NOCOLOUR) {\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.fillRect(x, y, w, h);\n        }\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            ctx.strokeStyle = colourCanvas(edgeCol);\n            ctx.lineWidth = thickness;\n            ctx.lineCap = 'square';\n            ctx.strokeRect(x, y, w, h);\n        }\n    }\n    renderOval(ctx, oval) {\n        let { cx, cy, rw, rh } = oval;\n        let { edgeCol, fillCol, thickness } = this.typeObj[oval.typeidx];\n        cx = this.offsetX + this.scale * cx;\n        cy = this.offsetY + this.scale * cy;\n        rw *= this.scale;\n        rh *= this.scale;\n        if (fillCol != MetaVector.NOCOLOUR) {\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rw, rh, 0, 0, 2 * Math.PI, true);\n            ctx.fill();\n        }\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            ctx.strokeStyle = colourCanvas(edgeCol);\n            ctx.lineWidth = thickness;\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rw, rh, 0, 0, 2 * Math.PI, true);\n            ctx.stroke();\n        }\n    }\n    renderPath(ctx, path) {\n        let { count, x, y, ctrl, closed } = path;\n        let { edgeCol, fillCol, thickness, hardEdge } = this.typeObj[path.typeidx];\n        x = [...x];\n        y = [...y];\n        for (let n = 0; n < count; n++) {\n            x[n] = this.offsetX + this.scale * x[n];\n            y[n] = this.offsetY + this.scale * y[n];\n        }\n        for (let layer = 1; layer <= 2; layer++) {\n            if (layer == 1 && fillCol == MetaVector.NOCOLOUR)\n                continue;\n            if (layer == 2 && edgeCol == MetaVector.NOCOLOUR)\n                continue;\n            ctx.beginPath();\n            ctx.moveTo(x[0], y[0]);\n            for (let i = 1; i < count; i++) {\n                if (!ctrl || !ctrl[i]) {\n                    ctx.lineTo(x[i], y[i]);\n                }\n                else if (i < count - 1 && !ctrl[i + 1]) {\n                    ctx.quadraticCurveTo(x[i], y[i], x[i + 1], y[i + 1]);\n                    i++;\n                }\n                else if (i < count - 1 && !ctrl[i + 2]) {\n                    ctx.bezierCurveTo(x[i], y[i], x[i + 1], y[i + 1], x[i + 2], y[i + 2]);\n                    i += 2;\n                }\n            }\n            if (closed)\n                ctx.closePath();\n            if (layer == 1) {\n                ctx.fillStyle = colourCanvas(fillCol);\n                ctx.fill();\n            }\n            else {\n                ctx.strokeStyle = colourCanvas(edgeCol);\n                ctx.lineWidth = thickness;\n                ctx.lineCap = hardEdge ? 'square' : 'round';\n                ctx.lineJoin = hardEdge ? 'miter' : 'round';\n                ctx.stroke();\n            }\n        }\n    }\n    renderText(ctx, text) {\n        let { x, y, txt, direction } = text;\n        let { size, colour } = this.typeObj[text.typeidx];\n        let fill = colourCanvas(colour);\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let font = FontData.main;\n        let scale = size * this.scale / font.UNITS_PER_EM;\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            let path = null;\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                path = font.getMissingPath();\n            }\n            else\n                path = font.getGlyphPath(i);\n            if (path) {\n                ctx.save();\n                let theta = direction != 0 ? direction * DEGRAD : 0;\n                if (theta == 0)\n                    ctx.translate(x + dx * scale, y);\n                else\n                    ctx.translate(x + Math.cos(theta) * dx * scale, y + Math.sin(theta) * dx * scale);\n                ctx.scale(scale, -scale);\n                if (theta != 0)\n                    ctx.rotate(-theta);\n                ctx.fillStyle = fill;\n                ctx.fill(path);\n                ctx.restore();\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n        }\n    }\n    renderTextNative(ctx, text) {\n        let { x, y, txt } = text;\n        let { size, colour, family, opt } = this.typeObj[text.typeidx];\n        let fill = colourCanvas(colour);\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        ctx.save();\n        let pfx = '';\n        if (opt.bold)\n            pfx += 'bold ';\n        if (opt.italic)\n            pfx += 'italic ';\n        ctx.font = pfx + (size * this.scale) + 'px ' + family;\n        ctx.fillStyle = fill;\n        ctx.fillText(txt, x, y);\n        ctx.restore();\n    }\n    svgLine1(svg, line) {\n        let { x1, y1, x2, y2 } = line;\n        let { colour, thickness } = this.typeObj[line.typeidx];\n        x1 = this.offsetX + this.scale * x1;\n        y1 = this.offsetY + this.scale * y1;\n        x2 = this.offsetX + this.scale * x2;\n        y2 = this.offsetY + this.scale * y2;\n        if (colour != MetaVector.NOCOLOUR) {\n            svg.start('<line');\n            svg.attr('x1', x1);\n            svg.attr('y1', y1);\n            svg.attr('x2', x2);\n            svg.attr('y2', y2);\n            this.defineSVGStroke(svg, colour);\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'round');\n            svg.stop('/>');\n        }\n    }\n    svgLineN(svg, lines) {\n        let { colour, thickness } = this.typeObj[lines[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, colour);\n        svg.attr('stroke-width', thickness);\n        svg.attr('stroke-linecap', 'round');\n        svg.stop('>');\n        svg.inc();\n        for (let line of lines) {\n            let { x1, y1, x2, y2 } = line;\n            x1 = this.offsetX + this.scale * x1;\n            y1 = this.offsetY + this.scale * y1;\n            x2 = this.offsetX + this.scale * x2;\n            y2 = this.offsetY + this.scale * y2;\n            svg.start('<line');\n            svg.attr('x1', x1);\n            svg.attr('y1', y1);\n            svg.attr('x2', x2);\n            svg.attr('y2', y2);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgRect1(svg, rect) {\n        let { x, y, w, h } = rect;\n        let { edgeCol, fillCol, thickness } = this.typeObj[rect.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        w *= this.scale;\n        h *= this.scale;\n        svg.start('<rect');\n        svg.attr('x', x);\n        svg.attr('y', y);\n        svg.attr('width', w);\n        svg.attr('height', h);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'square');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgRectN(svg, rects) {\n        let { edgeCol, fillCol, thickness } = this.typeObj[rects[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'square');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('>');\n        svg.inc();\n        for (let rect of rects) {\n            let { x, y, w, h } = rect;\n            x = this.offsetX + this.scale * x;\n            y = this.offsetY + this.scale * y;\n            w *= this.scale;\n            h *= this.scale;\n            svg.start('<rect');\n            svg.attr('x', x);\n            svg.attr('y', y);\n            svg.attr('width', w);\n            svg.attr('height', h);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgOval1(svg, oval) {\n        let { cx, cy, rw, rh } = oval;\n        let { edgeCol, fillCol, thickness } = this.typeObj[oval.typeidx];\n        cx = this.offsetX + this.scale * cx;\n        cy = this.offsetY + this.scale * cy;\n        rw *= this.scale;\n        rh *= this.scale;\n        svg.start('<ellipse');\n        svg.attr('cx', cx);\n        svg.attr('cy', cy);\n        svg.attr('rx', rw);\n        svg.attr('ry', rh);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgOvalN(svg, ovals) {\n        let { edgeCol, fillCol, thickness } = this.typeObj[ovals[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('>');\n        svg.inc();\n        for (let oval of ovals) {\n            let { cx, cy, rw, rh } = oval;\n            cx = this.offsetX + this.scale * cx;\n            cy = this.offsetY + this.scale * cy;\n            rw *= this.scale;\n            rh *= this.scale;\n            svg.start('<ellipse');\n            svg.attr('cx', cx);\n            svg.attr('cy', cy);\n            svg.attr('rx', rw);\n            svg.attr('ry', rh);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgPath(svg, path) {\n        let { count, x, y, ctrl, closed } = path;\n        let { edgeCol, fillCol, thickness, hardEdge } = this.typeObj[path.typeidx];\n        x = [...x];\n        y = [...y];\n        for (let n = 0; n < count; n++) {\n            x[n] = this.offsetX + this.scale * x[n];\n            y[n] = this.offsetY + this.scale * y[n];\n        }\n        let shape = 'M ' + pixelCoord(x[0]) + ' ' + pixelCoord(y[0]);\n        let n = 1;\n        while (n < count) {\n            if (!ctrl || !ctrl[n]) {\n                shape += ' L ' + pixelCoord(x[n]) + ' ' + pixelCoord(y[n]);\n                n++;\n            }\n            else if (ctrl[n] && n < count - 1 && !ctrl[n + 1]) {\n                shape += ' Q ' + pixelCoord(x[n]) + ' ' + pixelCoord(y[n]) + ' '\n                    + pixelCoord(x[n + 1]) + ' ' + pixelCoord(y[n + 1]);\n                n += 2;\n            }\n            else if (ctrl[n] && n < count - 2 && ctrl[n + 1] && !ctrl[n + 2]) {\n                shape += ' C ' + pixelCoord(x[n]) + ' ' + pixelCoord(y[n]) + ' '\n                    + pixelCoord(x[n + 1]) + ' ' + pixelCoord(y[n + 1]) + ' '\n                    + pixelCoord(x[n + 2]) + ' ' + pixelCoord(y[n + 2]);\n                n += 3;\n            }\n            else\n                n++;\n        }\n        if (closed)\n            shape += ' Z';\n        svg.start('<path');\n        svg.attr('d', shape);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linejoin', hardEdge ? 'miter' : 'round');\n            svg.attr('stroke-linecap', hardEdge ? 'square' : 'round');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgText(svg, text, withXlink = true) {\n        let { x, y, txt, direction } = text;\n        let { size, colour } = this.typeObj[text.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let font = FontData.main;\n        let scale = size * this.scale / font.UNITS_PER_EM;\n        if (direction != 0) {\n            svg.start('<g');\n            svg.attr('transform', `rotate(${direction},${pixelCoord(x)},${pixelCoord(y)})`);\n            svg.stop('>');\n            svg.inc();\n        }\n        svg.start('<g');\n        svg.attr('transform', `translate(${pixelCoord(x)},${pixelCoord(y)})`);\n        this.defineSVGFill(svg, colour);\n        svg.stop('>');\n        svg.inc();\n        svg.start('<g');\n        svg.attr('transform', `scale(${pixelCoord(scale)},${pixelCoord(-scale)})`);\n        svg.stop('>');\n        svg.inc();\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            svg.start('<use');\n            let ref = i < 0 ? '#missing' : '#char' + i;\n            if (withXlink)\n                svg.attr('xlink:href', ref);\n            else\n                svg.attr('href', ref);\n            svg.attr('x', dx);\n            svg.stop('/>');\n            if (i >= 0) {\n                dx += font.HORIZ_ADV_X[i];\n                if (n < txt.length - 1)\n                    dx += font.getKerning(ch, txt.charAt(n + 1));\n            }\n            else\n                dx += font.MISSING_HORZ;\n        }\n        svg.dec();\n        svg.whole('</g>');\n        svg.dec();\n        svg.whole('</g>');\n        if (direction != 0) {\n            svg.dec();\n            svg.whole('</g>');\n        }\n    }\n    svgTextNative(svg, text) {\n        let { x, y, txt } = text;\n        let { size, colour, family, opt } = this.typeObj[text.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let fill = colourCanvas(colour);\n        let style = `fill: ${fill}; font-family: ${family}; font-size: ${size * this.scale};`;\n        if (opt.bold)\n            style += ' font-weight: bold;';\n        if (opt.italic)\n            style += ' font-style: italic;';\n        const escapeXML = (str) => {\n            return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\n        };\n        svg.start('<text');\n        svg.attr('xml:space', 'preserve');\n        svg.attr('x', x);\n        svg.attr('y', y);\n        svg.attr('style', style);\n        svg.stop('>' + escapeXML(txt) + '</text>');\n    }\n    defineSVGStroke(svg, col) {\n        if (col == MetaVector.NOCOLOUR) {\n            svg.attr('stroke-opacity', '0');\n            return;\n        }\n        svg.attr('stroke', colourCode(col));\n        let alpha = colourAlpha(col);\n        if (alpha != 1)\n            svg.attr('stroke-opacity', alpha);\n    }\n    defineSVGFill(svg, col) {\n        if (col == MetaVector.NOCOLOUR) {\n            svg.attr('fill-opacity', '0');\n            return;\n        }\n        svg.attr('fill', colourCode(col));\n        let alpha = colourAlpha(col);\n        if (alpha != 1)\n            svg.attr('fill-opacity', alpha);\n    }\n    findOrCreateType(typeDef) {\n        for (let n = 0; n < this.types.length; n++) {\n            if (this.types[n].primClass != typeDef.primClass)\n                continue;\n            let keys = Object.keys(typeDef);\n            let match = keys.every((k) => typeDef[k] == this.types[n][k]);\n            if (match)\n                return n;\n        }\n        this.types.push(typeDef);\n        return this.types.length - 1;\n    }\n    updateBounds(x, y) {\n        if (this.lowX == null) {\n            this.lowX = x;\n            this.lowY = y;\n            this.highX = x;\n            this.highY = y;\n            return;\n        }\n        this.lowX = Math.min(this.lowX, x);\n        this.lowY = Math.min(this.lowY, y);\n        this.highX = Math.max(this.highX, x);\n        this.highY = Math.max(this.highY, y);\n    }\n}\nMetaVector.NOCOLOUR = -1;\nexport { MetaVector };\n//# sourceMappingURL=MetaVector.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Vec} from 'webmolkit/util/Vec';\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\n\tUnit definitions and conversions. Units are preferentially stored by URI, displayed by common name, and interconverted\n\tas necessary to other schemes, such as MInChI mnemonics.\n*/\n\nexport enum StandardUnits\n{\n\t// concentration units (these are favoured for most purposes)\n\tpc = 'http://purl.obolibrary.org/obo/UO_0000187', // percent (of arbitrary type)\n\tpcWV = 'http://purl.obolibrary.org/obo/UO_0000164', // percent (weight per volume),\n\tpcWW = 'http://purl.obolibrary.org/obo/UO_0000163', // percent (weight per weight),\n\tpcVV = 'http://purl.obolibrary.org/obo/UO_0000205', // percent (volume per volume),\n\tpcMM = 'http://purl.obolibrary.org/obo/UO_0000076', // percent (mole per mole)\n\tratio = 'http://purl.obolibrary.org/obo/UO_0000190', // ratio (numerator only; nominally by volume)\n\tmol_L = 'http://purl.obolibrary.org/obo/UO_0000062', // moles per litre (mol/L)\n\tmmol_L = 'http://purl.obolibrary.org/obo/UO_0000063', // milli-moles per litre\n\tumol_L = 'http://purl.obolibrary.org/obo/UO_0000064', // micro-moles per litre\n\tnmol_L = 'http://purl.obolibrary.org/obo/UO_0000065', // nano-moles per litre\n\tpmol_L = 'http://purl.obolibrary.org/obo/UO_0000066', // pico-moles per litre\n\t/* could be handy to allow these... maybe\n\tlogM = 'http://www.bioassayontology.org/bao#BAO_0000101', // log10 of mol/L\n\tperM = 'http://www.bioassayontology.org/bao#BAO_0000102', // -log10 of mol/L */\n\tg_L = 'http://purl.obolibrary.org/obo/UO_0000175', // grams per litre (g/L)\n\tmg_L = 'http://purl.obolibrary.org/obo/UO_0000273', // milligrams per litre (aka micrograms per mL)\n\tug_L = 'http://purl.obolibrary.org/obo/UO_0000275', // micrograms per litre (aka nanograms per mL)\n\tmg_mL = 'http://purl.obolibrary.org/obo/UO_0000176', // milligrams per millilitre (aka grams per L)\n\tmol_kg = 'http://purl.obolibrary.org/obo/UO_0000068', // moles per kilogram\n\n\t// absolute units (these are often converted to concentrations when possible)\n\tkg = 'http://purl.obolibrary.org/obo/UO_0000009', // kilogram\n\tg = 'http://purl.obolibrary.org/obo/UO_0000021', // gram\n\tmg = 'http://purl.obolibrary.org/obo/UO_0000022', // milligram\n\tug = 'http://purl.obolibrary.org/obo/UO_0000023', // microgram\n\tng = 'http://purl.obolibrary.org/obo/UO_0000024', // nanogram\n\tL = 'http://purl.obolibrary.org/obo/UO_0000099', // litre\n\tmL = 'http://purl.obolibrary.org/obo/UO_0000098', // millilitre\n\tuL = 'http://purl.obolibrary.org/obo/UO_0000101', // microlitre\n\tnL = 'http://purl.obolibrary.org/obo/UO_0000102', // nanolitre\n\tmol = 'http://purl.obolibrary.org/obo/UO_0000013', // mole\n\tmmol = 'http://purl.obolibrary.org/obo/UO_0000040', // millimole\n\tumol = 'http://purl.obolibrary.org/obo/UO_0000039', // micromole\n\tnmol = 'http://purl.obolibrary.org/obo/UO_0000041', // nanomole\n\n\t// other\n\tppm = 'placeholder1',\n\tppb = 'placeholder2',\n}\n\nconst PAIR_UNIT_NAMES:any[] =\n[\n\t// form: [reference URI, primary display name, ...optional alternative names]\n\n\t[StandardUnits.pc, '%'],\n\t[StandardUnits.pcWV, 'w/v%'],\n\t[StandardUnits.pcWW, 'w/w%'],\n\t[StandardUnits.pcVV, 'v/v%'],\n\t[StandardUnits.pcMM, 'mol/mol%'],\n\t[StandardUnits.ratio, 'ratio'],\n\t[StandardUnits.mol_L, 'mol/L', 'M'],\n\t[StandardUnits.mmol_L, 'mmol/L', 'mM'],\n\t[StandardUnits.umol_L, '\\u{03BC}mol/L', 'umol/L', 'uM'],\n\t[StandardUnits.nmol_L, 'nmol/L', 'nM'],\n\t[StandardUnits.pmol_L, 'pmol/L', 'pM'],\n\t/*[StandardUnits.logM, ''],\n\t[StandardUnits.perM, ''],*/\n\t[StandardUnits.g_L, 'g/L'],\n\t[StandardUnits.mg_L, 'mg/L'],\n\t[StandardUnits.ug_L, '\\u{03BC}g/L', 'ug/L'],\n\t[StandardUnits.mg_mL, 'mg/mL'],\n\t[StandardUnits.mol_kg, 'mol/kg'],\n\n\t[StandardUnits.kg, 'kg'],\n\t[StandardUnits.g, 'g'],\n\t[StandardUnits.mg, 'mg'],\n\t[StandardUnits.ug, '\\u{03BC}g', 'ug'],\n\t[StandardUnits.ng, 'ng'],\n\t[StandardUnits.L, 'L'],\n\t[StandardUnits.mL, 'mL'],\n\t[StandardUnits.uL, '\\u{03BC}L', 'uL'],\n\t[StandardUnits.nL, 'nL'],\n\t[StandardUnits.mol, 'mol'],\n\t[StandardUnits.mmol, 'mmol'],\n\t[StandardUnits.umol, '\\u{03BC}mol', 'umol'],\n\t[StandardUnits.nmol, 'nmol'],\n\n\t[StandardUnits.ppm, 'ppm'],\n\t[StandardUnits.ppb, 'ppb'],\n];\n\nconst PAIR_UNIT_MINCHI:any[] =\n[\n\t// [enum type, MInChI type, scaling] ... scaling factor is for going from standard to MInChI\n\t[StandardUnits.pc, 'pp', 1],\n\t[StandardUnits.pcWV, 'wv', 0.01],\n\t[StandardUnits.pcWW, 'wf', 0.01],\n\t[StandardUnits.pcVV, 'vf', 0.01],\n\t[StandardUnits.pcMM, 'mf', 0.01],\n\t[StandardUnits.ratio, 'rt', 1],\n\t[StandardUnits.mol_L, 'mr', 1],\n\t[StandardUnits.mmol_L, 'mr', 1E-3],\n\t[StandardUnits.umol_L, 'mr', 1E-6],\n\t[StandardUnits.nmol_L, 'mr', 1E-9],\n\t[StandardUnits.pmol_L, 'mr', 1E-12],\n\t/*[StandardUnits.logM, '', ],\n\t[StandardUnits.perM, '', ],*/\n\t[StandardUnits.g_L, 'wv', 1E-3],\n\t[StandardUnits.mg_L, 'wv', 1E-6],\n\t[StandardUnits.ug_L, 'wv', 1E-9],\n\t[StandardUnits.mg_mL, 'wv', 1E-3],\n\t[StandardUnits.mol_kg, 'mb', 1],\n\t[StandardUnits.ppm, 'pp', 1E-6],\n\t[StandardUnits.ppb, 'pp', 1E-9],\n];\n\nexport class Units\n{\n\tpublic static STANDARD_LIST:string[] = []; // all of the applicable unit URIs\n\tpublic static COMMON_NAMES:string[] = []; // all of the preferred names (same order as above)\n\tpublic static URI_TO_NAME:Record<string, string> = {}; // each URI has one preferred display name\n\tpublic static NAME_TO_URI:Record<string, string> = {}; // multiple unit forms can point to the same URI\n\tpublic static URI_TO_MINCHI:Record<string, [string, number]> = {}; // URI to MInChI, when applicable\n\n\tpublic static setup():void\n\t{\n\t\tfor (let pair of PAIR_UNIT_NAMES)\n\t\t{\n\t\t\tlet uri:string = pair[0], name:string = pair[1];\n\t\t\tthis.STANDARD_LIST.push(uri);\n\t\t\tthis.COMMON_NAMES.push(name);\n\t\t\tthis.URI_TO_NAME[uri] = name;\n\t\t\t\n\t\t\t//this.NAME_TO_URI[name] = uri; (some of them have alternate names)\n\t\t\tfor (let n = 1; n <= pair.length; n++) this.NAME_TO_URI[pair[n]] = uri;\n\t\t}\n\t\tfor (let pair of PAIR_UNIT_MINCHI)\n\t\t{\n\t\t\tlet uri:string = pair[0], name:string = pair[1], scale:number = pair[2];\n\t\t\tthis.URI_TO_MINCHI[uri] = [name, scale];\n\t\t}\n\t\tthis.setup = () => {}; // calling it again is a nop\n\t}\n\n\tpublic static standardList():string[]\n\t{\n\t\tthis.setup();\n\t\treturn this.STANDARD_LIST;\n\t}\n\tpublic static commonNames():string[]\n\t{\n\t\tthis.setup();\n\t\treturn this.COMMON_NAMES;\n\t}\n\tpublic static uriToName(uri:string):string\n\t{\n\t\tthis.setup();\n\t\treturn this.URI_TO_NAME[uri];\n\t}\n\tpublic static nameToURI(name:string):string\n\t{\n\t\tthis.setup();\n\t\treturn this.NAME_TO_URI[name];\n\t}\n\n\t// converts a uri/value pair into mnemonic/value, ready to be exported to MInChI-style units; if the URI is not in the list of\n\t// things that can be converted, returns nulls\n\tpublic static convertToMInChI(uri:string, values:number[]):[string, number[]]\n\t{\n\t\tlet [mnemonic, scale] = this.URI_TO_MINCHI[uri] || [null, null];\n\t\tif (!mnemonic) return [null, null];\n\t\treturn [mnemonic, Vec.mul(values, scale)];\n\t}\n}\n\n","import { Molecule } from '../mol/Molecule';\nimport { GeomUtil } from '../util/Geom';\nimport { angleDiff, DEGRAD, invZ, norm2_xy, norm_xy } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { BLineType } from './ArrangeMolecule';\nimport { MetaVector, TextAlign } from './MetaVector';\nimport { RenderMnemonicType } from './Rendering';\nexport class DrawMolecule {\n    constructor(layout, vg) {\n        this.layout = layout;\n        this.vg = vg;\n        this.mnemonics = null;\n        this.mol = layout.getMolecule();\n        this.policy = layout.getPolicy();\n        this.effects = layout.getEffects();\n        this.scale = layout.getScale();\n        this.invScale = 1.0 / this.scale;\n    }\n    getMolecule() { return this.mol; }\n    getMetaVector() { return this.vg; }\n    getLayout() { return this.layout; }\n    getPolicy() { return this.policy; }\n    getEffects() { return this.effects; }\n    draw() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n        let DRAW_SPACE = false;\n        if (DRAW_SPACE) {\n            let bounds = this.layout.determineBoundary();\n            this.vg.drawRect(bounds[0], bounds[1], bounds[2] - bounds[0], bounds[3] - bounds[1], 0xFF0000, 1, MetaVector.NOCOLOUR);\n            for (let n = 0; n < this.layout.numSpace(); n++) {\n                let spc = this.layout.getSpace(n);\n                this.vg.drawRect(spc.box.x, spc.box.y, spc.box.w, spc.box.h, MetaVector.NOCOLOUR, 0, 0xE0E0E0);\n                if (spc.px != null && spc.py != null && spc.px.length > 2)\n                    this.vg.drawPoly(spc.px, spc.py, 0x000000, 1, 0x808080FF, true);\n            }\n        }\n        this.drawUnderEffects();\n        let { mol, layout, effects, policy, vg } = this;\n        let hideBonds = new Set(effects.hideBonds);\n        for (let i = 1; i <= mol.numBonds; i++)\n            if (mol.bondType(i) == Molecule.BONDTYPE_INCLINED && !hideBonds.has(i)) {\n                let atom = mol.bondTo(i);\n                if (layout.getPoint(atom - 1).text)\n                    continue;\n                for (let j of mol.atomAdjBonds(atom))\n                    if (j != i && mol.bondType(j) == Molecule.BONDTYPE_INCLINED && mol.bondTo(j) == atom && !hideBonds.has(j)) {\n                        let b1 = layout.getLines().find((b) => b.bnum == i);\n                        let b2 = layout.getLines().find((b) => b.bnum == j);\n                        let th1 = Math.atan2(b1.line.y1 - b1.line.y2, b1.line.x1 - b1.line.x2);\n                        let th2 = Math.atan2(b2.line.y1 - b2.line.y2, b2.line.x1 - b2.line.x2);\n                        if (Math.abs(angleDiff(th1, th2)) < 170 * DEGRAD) {\n                            this.drawFusedWedge(b1, b2);\n                            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Artifact, 'Fused', [b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2]);\n                            hideBonds.add(i);\n                            hideBonds.add(j);\n                            break;\n                        }\n                    }\n            }\n        for (let n = 0; n < layout.numLines(); n++) {\n            let b = layout.getLine(n);\n            if (hideBonds.has(b.bnum))\n                continue;\n            if (b.type == BLineType.Normal) {\n                vg.drawLine(b.line.x1, b.line.y1, b.line.x2, b.line.y2, b.col, b.size);\n                (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Bond, 'L', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Inclined) {\n                this.drawBondInclined(b);\n                (_c = this.mnemonics) === null || _c === void 0 ? void 0 : _c.append(RenderMnemonicType.Bond, 'I', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Declined) {\n                this.drawBondDeclined(b);\n                (_d = this.mnemonics) === null || _d === void 0 ? void 0 : _d.append(RenderMnemonicType.Bond, 'D', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Unknown) {\n                this.drawBondUnknown(b);\n                (_e = this.mnemonics) === null || _e === void 0 ? void 0 : _e.append(RenderMnemonicType.Bond, 'U', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Dotted || b.type == BLineType.DotDir) {\n                this.drawBondDotted(b);\n                (_f = this.mnemonics) === null || _f === void 0 ? void 0 : _f.append(RenderMnemonicType.Bond, 'O', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.IncDouble || b.type == BLineType.IncTriple || b.type == BLineType.IncQuadruple) {\n                this.drawBondIncMulti(b);\n                (_g = this.mnemonics) === null || _g === void 0 ? void 0 : _g.append(RenderMnemonicType.Bond, 'M', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n        }\n        let fg = policy.data.foreground;\n        for (let r of layout.getRings()) {\n            if (r.theta != 0) {\n                var bez = GeomUtil.createBezierEllipse(r.cx, r.cy, r.rw, r.rh, r.theta);\n                vg.drawPath(bez.px, bez.py, bez.ctrl, true, fg, r.size, MetaVector.NOCOLOUR, false);\n                (_h = this.mnemonics) === null || _h === void 0 ? void 0 : _h.append(RenderMnemonicType.Artifact, 'Ring', [r.cx, r.cy, r.rw, r.rh, r.theta]);\n            }\n            else {\n                vg.drawOval(r.cx, r.cy, r.rw, r.rh, fg, r.size, MetaVector.NOCOLOUR);\n                (_j = this.mnemonics) === null || _j === void 0 ? void 0 : _j.append(RenderMnemonicType.Artifact, 'Ring', [r.cx, r.cy, r.rw, r.rh]);\n            }\n        }\n        for (let p of layout.getPaths()) {\n            vg.drawPath(p.px, p.py, p.ctrl, false, fg, p.size, MetaVector.NOCOLOUR, false);\n            (_k = this.mnemonics) === null || _k === void 0 ? void 0 : _k.append(RenderMnemonicType.Artifact, 'Path', [...p.px, ...p.py]);\n        }\n        for (let n = 0; n < layout.numPoints(); n++) {\n            let p = layout.getPoint(n);\n            if (effects.hideAtoms.has(p.anum))\n                continue;\n            let txt = p.text;\n            let cx = p.oval.cx, cy = p.oval.cy, rw = p.oval.rw;\n            if (txt == null) {\n                (_l = this.mnemonics) === null || _l === void 0 ? void 0 : _l.append(RenderMnemonicType.Atom, '.', [cx, cy]);\n                continue;\n            }\n            let fsz = p.fsz;\n            let col = p.col;\n            while (txt.endsWith('.')) {\n                let dw = rw / txt.length;\n                let r = fsz * 0.15;\n                vg.drawOval(cx + rw - dw, cy, r, r, MetaVector.NOCOLOUR, 0, col);\n                cx -= dw;\n                rw -= dw;\n                txt = txt.substring(0, txt.length - 1);\n            }\n            while (txt.startsWith('+')) {\n                let dw = rw / txt.length;\n                let x = cx - rw + dw, y = cy, r = fsz * 0.18, lsz = fsz * 0.1;\n                vg.drawLine(x - r, y, x + r, y, col, lsz);\n                vg.drawLine(x, y - r, x, y + r, col, lsz);\n                cx += dw;\n                rw -= dw;\n                txt = txt.substring(1, txt.length);\n            }\n            while (txt.startsWith('-')) {\n                let dw = rw / txt.length;\n                let x = cx - rw + dw, y = cy, r = fsz * 0.18, lsz = fsz * 0.1;\n                vg.drawLine(x - r, y, x + r, y, col, lsz);\n                cx += dw;\n                rw -= dw;\n                txt = txt.substring(1, txt.length);\n            }\n            if (txt.length > 0) {\n                vg.drawText(cx, cy, txt, fsz, col, TextAlign.Centre | TextAlign.Middle, p.rotation || 0);\n                (_m = this.mnemonics) === null || _m === void 0 ? void 0 : _m.append(RenderMnemonicType.Atom, txt, [cx, cy]);\n            }\n            else\n                (_o = this.mnemonics) === null || _o === void 0 ? void 0 : _o.append(RenderMnemonicType.Atom, '.', [cx, cy]);\n        }\n        this.drawOverEffects();\n    }\n    drawUnderEffects() {\n        var _a, _b, _c;\n        let mol = this.mol, policy = this.policy, effects = this.effects, layout = this.layout, scale = this.scale, vg = this.vg;\n        for (let n = 0, num = Math.min(effects.atomFrameDotSz.length, mol.numAtoms); n < num; n++) {\n            if (effects.hideAtoms.has(n + 1))\n                continue;\n            let dw = effects.atomFrameDotSz[n] * scale, col = effects.atomFrameCol[n];\n            let a = layout.getPoint(n);\n            let rw = a.oval.rw + 0.1 * scale, rh = a.oval.rh + 0.1 * scale;\n            let wdots = Math.ceil(2 * rw / (3 * dw));\n            let hdots = Math.ceil(2 * rh / (3 * dw));\n            let wspc = 2 * rw / wdots, hspc = 2 * rh / hdots;\n            for (let i = 0; i <= wdots; i++) {\n                let x = a.oval.cx - rw + i * wspc;\n                vg.drawOval(x, a.oval.cy - rh, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(x, a.oval.cy + rh, dw, dw, MetaVector.NOCOLOUR, 0, col);\n            }\n            for (let i = 1; i < hdots; i++) {\n                let y = a.oval.cy - rh + i * hspc;\n                vg.drawOval(a.oval.cx - rw, y, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(a.oval.cx + rw, y, dw, dw, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Effect, 'Dot', [a.oval.cx, a.oval.cy, a.oval.rw, a.oval.rh]);\n        }\n        for (let key in effects.dottedRectOutline) {\n            let atom = parseInt(key), col = effects.dottedRectOutline[key];\n            let a = layout.getPoint(atom - 1);\n            let rw = Math.max(a.oval.rw, 0.2 * scale), rh = Math.max(a.oval.rh, 0.2 * scale);\n            let sz = 0.05 * scale;\n            let xdots = Math.max(1, Math.round(rw / (2 * sz)));\n            let ydots = Math.max(1, Math.round(rh / (2 * sz)));\n            let invX = (2 * rw) / xdots, invY = (2 * rh) / ydots;\n            for (let n = 0; n <= xdots; n++) {\n                let x = a.oval.cx - rw + n * invX;\n                vg.drawOval(x, a.oval.cy - rh, sz, sz, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(x, a.oval.cy + rh, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            for (let n = 1; n < ydots; n++) {\n                let y = a.oval.cy - rh + n * invY;\n                vg.drawOval(a.oval.cx - rw, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(a.oval.cx + rw, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Effect, 'Rect', [a.oval.cx, a.oval.cy, a.oval.rw, a.oval.rh]);\n        }\n        for (let key in effects.dottedBondCross) {\n            let bond = parseInt(key), col = effects.dottedBondCross[key];\n            let x1 = 0, y1 = 0, x2 = 0, y2 = 0, bcount = 0;\n            for (let n = 0; n < layout.numLines(); n++) {\n                let b = layout.getLine(n);\n                if (b.bnum == bond) {\n                    x1 += b.line.x1;\n                    y1 += b.line.y1;\n                    x2 += b.line.x2;\n                    y2 += b.line.y2;\n                    bcount += 1;\n                }\n            }\n            if (bcount > 1) {\n                let inv = 1 / bcount;\n                [x1, y1, x2, y2] = [x1 * inv, y1 * inv, x2 * inv, y2 * inv];\n            }\n            let dx = x2 - x1, dy = y2 - y1;\n            let inv = 0.2 * scale * invZ(norm_xy(dx, dy)), ox = dy * inv, oy = -dx * inv;\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2), sz = 0.05 * scale;\n            for (let p of [-2, -1, 1, 2]) {\n                let x = cx + p * ox, y = cy + p * oy;\n                vg.drawOval(x, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_c = this.mnemonics) === null || _c === void 0 ? void 0 : _c.append(RenderMnemonicType.Effect, 'Crossing', [x1, y1, x2, y2]);\n        }\n    }\n    drawOverEffects() {\n        var _a, _b;\n        let mol = this.mol, policy = this.policy, effects = this.effects, layout = this.layout, scale = this.scale, vg = this.vg;\n        for (let a of effects.overlapAtoms) {\n            let p = layout.getPoint(a - 1);\n            let rad = scale * 0.2;\n            vg.drawLine(p.oval.cx - rad, p.oval.cy - rad, p.oval.cx + rad, p.oval.cy + rad, 0xFF0000, 1);\n            vg.drawLine(p.oval.cx + rad, p.oval.cy - rad, p.oval.cx - rad, p.oval.cy + rad, 0xFF0000, 1);\n            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Effect, 'Overlap', [p.oval.cx, p.oval.cy, p.oval.rw, p.oval.rh]);\n        }\n        for (let n = 0, num = Math.min(effects.atomCircleSz.length, mol.numAtoms); n < num; n++)\n            if (effects.atomCircleSz[n] > 0) {\n                let dw = effects.atomCircleSz[n] * scale, col = effects.atomCircleCol[n];\n                let p = layout.getPoint(n);\n                vg.drawOval(p.oval.cx, p.oval.cy, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Effect, 'Circle', [p.oval.cx, p.oval.cy, p.oval.rw, p.oval.rh]);\n            }\n    }\n    drawBondInclined(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let norm = head / Math.sqrt(dx * dx + dy * dy);\n        let ox = norm * dy, oy = -norm * dx;\n        let px = [x1, x2 - ox, x2 + ox], py = [y1, y2 - oy, y2 + oy];\n        if (this.layout.getPoint(b.bto - 1).text == null && this.mol.atomAdjCount(b.bto) == 2) {\n            let other = null;\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let o = this.layout.getLine(n);\n                if (o.type == BLineType.Normal && (o.bfr == b.bto || o.bto == b.bto)) {\n                    if (other != null) {\n                        other = null;\n                        break;\n                    }\n                    other = o;\n                }\n            }\n            if (other != null) {\n                let th1 = Math.atan2(y1 - y2, x1 - x2);\n                let th2 = Math.atan2(other.line.y1 - other.line.y2, other.line.x1 - other.line.x2);\n                if (b.bto == other.bfr)\n                    th2 += Math.PI;\n                let diff = Math.abs(angleDiff(th1, th2));\n                if (diff > 105 * DEGRAD && diff < 135 * DEGRAD) {\n                    let ixy1 = GeomUtil.lineIntersect(px[0], py[0], px[1], py[1], other.line.x1, other.line.y1, other.line.x2, other.line.y2);\n                    let ixy2 = GeomUtil.lineIntersect(px[0], py[0], px[2], py[2], other.line.x1, other.line.y1, other.line.x2, other.line.y2);\n                    px[1] = ixy1[0];\n                    py[1] = ixy1[1];\n                    px[2] = ixy2[0];\n                    py[2] = ixy2[1];\n                    let dx1 = px[1] - px[0], dy1 = py[1] - py[0], inv1 = 0.5 * other.size / norm_xy(dx1, dy1);\n                    px[1] += dx1 * inv1;\n                    py[1] += dy1 * inv1;\n                    let dx2 = px[2] - px[0], dy2 = py[2] - py[0], inv2 = 0.5 * other.size / norm_xy(dx2, dy2);\n                    px[2] += dx2 * inv1;\n                    py[2] += dy2 * inv1;\n                }\n            }\n        }\n        if (this.layout.getPoint(b.bto - 1).text == null && this.mol.atomAdjCount(b.bto) == 3) {\n            let other1 = null, other2 = null;\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let o = this.layout.getLine(n);\n                if (o.type == BLineType.Normal && (o.bfr == b.bto || o.bto == b.bto)) {\n                    if (other1 == null)\n                        other1 = o;\n                    else if (other2 == null)\n                        other2 = o;\n                    else {\n                        other1 = other2 = null;\n                        break;\n                    }\n                }\n            }\n            if (other1 != null && other2 != null) {\n                let th1 = Math.atan2(y1 - y2, x1 - x2);\n                let th2 = Math.atan2(other1.line.y1 - other1.line.y2, other1.line.x1 - other1.line.x2);\n                let th3 = Math.atan2(other2.line.y1 - other2.line.y2, other2.line.x1 - other2.line.x2);\n                if (b.bto == other1.bfr)\n                    th2 += Math.PI;\n                if (b.bto == other2.bfr)\n                    th3 += Math.PI;\n                let dth1 = angleDiff(th1, th2), diff1 = Math.abs(dth1);\n                let dth2 = angleDiff(th1, th3), diff2 = Math.abs(dth2);\n                let diff3 = Math.abs(angleDiff(th2, th3));\n                if (diff1 > 105 * DEGRAD && diff1 < 135 * DEGRAD ||\n                    diff2 > 105 * DEGRAD && diff2 < 135 * DEGRAD ||\n                    diff3 > 105 * DEGRAD && diff3 < 135 * DEGRAD) {\n                    if (dth1 < 0)\n                        [other1, other2] = [other2, other1];\n                    let ixy1 = GeomUtil.lineIntersect(px[0], py[0], px[1], py[1], other1.line.x1, other1.line.y1, other1.line.x2, other1.line.y2);\n                    let ixy2 = GeomUtil.lineIntersect(px[0], py[0], px[2], py[2], other2.line.x1, other2.line.y1, other2.line.x2, other2.line.y2);\n                    px = [x1, ixy1[0], x2, ixy2[0]];\n                    py = [y1, ixy1[1], y2, ixy2[1]];\n                }\n            }\n        }\n        this.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, col, true);\n    }\n    drawFusedWedge(b1, b2) {\n        const terminalPoints = (b, other) => {\n            let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n            let dx = x2 - x1, dy = y2 - y1;\n            let norm = b.head / Math.sqrt(dx * dx + dy * dy);\n            let ox = norm * dy, oy = -norm * dx;\n            let tx1 = x2 - ox, ty1 = y2 - oy, tx2 = x2 + ox, ty2 = y2 + oy;\n            let dsq1 = norm2_xy(tx1 - other.line.x1, ty1 - other.line.y1);\n            let dsq2 = norm2_xy(tx2 - other.line.x1, ty2 - other.line.y1);\n            if (dsq1 > dsq2)\n                return { outerX: tx1, outerY: ty1, innerX: tx2, innerY: ty2 };\n            else\n                return { outerX: tx2, outerY: ty2, innerX: tx1, innerY: ty1 };\n        };\n        let u = terminalPoints(b1, b2), v = terminalPoints(b2, b1);\n        let [innerX, innerY] = GeomUtil.lineIntersect(b1.line.x1, b1.line.y1, u.innerX, u.innerY, b2.line.x1, b2.line.y1, v.innerX, v.innerY);\n        let px = [b1.line.x1, u.outerX, v.outerX, b2.line.x1, innerX];\n        let py = [b1.line.y1, u.outerY, v.outerY, b2.line.y1, innerY];\n        this.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, b1.col, true);\n    }\n    drawBondDeclined(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let ext = Math.sqrt(dx * dx + dy * dy);\n        let nsteps = Math.ceil(ext * 2.5 * this.invScale);\n        let norm = head / ext;\n        let ox = norm * dy, oy = -norm * dx, invSteps = 1.0 / (nsteps + 1);\n        let holdout = this.mol.atomAdjCount(b.bto) == 1 && this.layout.getPoint(b.bto - 1).text == null ? 1 : 1 - (0.15 * this.scale) / ext;\n        for (let i = 0; i <= nsteps + 1; i++) {\n            let cx = x1 + i * dx * invSteps * holdout, cy = y1 + i * dy * invSteps * holdout;\n            let ix = ox * i * invSteps, iy = oy * i * invSteps;\n            this.vg.drawLine(cx - ix, cy - iy, cx + ix, cy + iy, col, size);\n        }\n    }\n    drawBondUnknown(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let ext = Math.sqrt(dx * dx + dy * dy);\n        let nsteps = Math.ceil(ext * 3.5 * this.invScale);\n        let norm = head / ext;\n        let ox = norm * dy, oy = -norm * dx;\n        let sz = 1 + 3 * (nsteps + 1);\n        let x = Vec.numberArray(0, sz), y = Vec.numberArray(0, sz), ctrl = Vec.booleanArray(false, sz);\n        x[0] = x1;\n        y[0] = y1;\n        ctrl[0] = false;\n        for (let i = 0, j = 1; i <= nsteps; i++, j += 3) {\n            let ax = x1 + i * dx / (nsteps + 1), ay = y1 + i * dy / (nsteps + 1);\n            let cx = x1 + (i + 1) * dx / (nsteps + 1), cy = y1 + (i + 1) * dy / (nsteps + 1);\n            let bx = (ax + cx) / 2, by = (ay + cy) / 2;\n            let sign = i % 2 == 0 ? 1 : -1;\n            x[j] = ax;\n            x[j + 1] = bx + sign * ox;\n            x[j + 2] = cx;\n            y[j] = ay;\n            y[j + 1] = by + sign * oy;\n            y[j + 2] = cy;\n            ctrl[j] = true;\n            ctrl[j + 1] = true;\n            ctrl[j + 2] = false;\n        }\n        this.vg.drawPath(x, y, ctrl, false, col, size, MetaVector.NOCOLOUR, false);\n    }\n    drawBondDotted(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size;\n        let radius = size, dist = norm_xy(dx, dy);\n        if (dist < 0.01)\n            return;\n        let nudge = 0.5 * size / dist;\n        x1 += nudge * dx;\n        y1 += nudge * dy;\n        x2 -= nudge * dx;\n        y2 -= nudge * dy;\n        dx = x2 - x1;\n        dy = y2 - y1;\n        let nsteps = Math.ceil(0.2 * dist / radius);\n        let invSteps = 1.0 / (nsteps + 1);\n        for (let i = 0; i <= nsteps + 1; i++) {\n            let r = radius;\n            if (b.type == BLineType.DotDir)\n                r *= 1 + (i * (1.0 / (nsteps + 2)) - 0.5);\n            let cx = x1 + i * dx * invSteps, cy = y1 + i * dy * invSteps;\n            this.vg.drawOval(cx, cy, r, r, MetaVector.NOCOLOUR, 0, col);\n        }\n    }\n    drawBondIncMulti(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let norm = head / Math.sqrt(dx * dx + dy * dy);\n        let ox = norm * dy, oy = -norm * dx;\n        this.vg.drawPoly([x1, x2 - ox, x2 + ox], [y1, y2 - oy, y2 + oy], col, this.scale * 0.05, MetaVector.NOCOLOUR, true);\n        if (b.type == BLineType.IncDouble) {\n            this.vg.drawLine(x1, y1, x2, y2, col, this.scale * 0.03);\n        }\n        else {\n            this.vg.drawLine(x1, y1, x2 + 0.33 * ox, y2 + 0.33 * oy, col, this.scale * 0.03);\n            this.vg.drawLine(x1, y1, x2 - 0.33 * ox, y2 - 0.33 * oy, col, this.scale * 0.03);\n        }\n    }\n}\n//# sourceMappingURL=DrawMolecule.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {MetaVector, TextAlign} from 'webmolkit/gfx/MetaVector';\nimport {ArrangeMixture, ArrangeMixtureComponent, ArrangeMixtureLine} from './ArrangeMixture';\nimport {Box} from 'webmolkit/util/Geom';\nimport {ArrangeMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {DrawMolecule} from 'webmolkit/gfx/DrawMolecule';\n\n/*\n\tDrawing a Mixfile, which has been arranged already.\n*/\n\nexport class DrawMixture\n{\n\tpublic hoverIndex = -1; // component to give a faint tinting to (for hover-over effect)\n\tpublic activeIndex = -1; // component that is actively engaged with UI\n\tpublic selectedIndex = -1; // component that is passively selected\n\n\t// optionally override drawing functionality within a component; return true if the rendering was intercepted,\n\t// or false to fall back to default rendering\n\tpublic callbackDrawMolecule:(comp:ArrangeMixtureComponent, gfx:MetaVector, box:Box) => boolean = null;\n\tpublic callbackDrawNameLine:(comp:ArrangeMixtureComponent, line:ArrangeMixtureLine, gfx:MetaVector, box:Box) => boolean = null;\n\n\tprivate measure:ArrangeMeasurement;\n\tprivate policy:RenderPolicy;\n\n\tprivate scale:number;\n\tprivate invScale:number;\n\n\t// --------------------- public methods ---------------------\n\n\tconstructor(private layout:ArrangeMixture, private vg:MetaVector)\n\t{\n\t\tthis.measure = layout.measure;\n\t\tthis.policy = layout.policy;\n\t\tthis.scale = layout.scale;\n\t\tthis.invScale = 1.0 / this.scale;\n\t}\n\n\t// renders the experiment, one component at a time\n\tpublic draw():void\n\t{\n\t\tfor (let comp of this.layout.components) if (comp.parentIdx >= 0)\n\t\t\tthis.drawConnection(this.layout.components[comp.parentIdx], comp);\n\n\t\tfor (let n = 0; n < this.layout.components.length; n++) this.drawComponent(n);\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\tprivate drawConnection(parent:ArrangeMixtureComponent, child:ArrangeMixtureComponent):void\n\t{\n\t\tlet x1 = parent.boundary.maxX(), x2 = child.boundary.minX();\n\t\tlet y1 = parent.boundary.midY(), y2 = child.boundary.midY();\n\t\t//let xm = 0.5 * (x1 + x2);\n\t\tlet xm = x1 + 0.25 * this.scale;\n\t\tlet ym = 0.5 * (y1 + y2);\n\t\tlet d = 4, xd = d, yd = y1 < y2 - 1 ? -d : y1 > y2 + 1 ? d : 0;\n\n\t\tlet px = [x1, xm - xd, xm, xm, xm, xm, xm + xd, x2];\n\t\tlet py = [y1, y1, y1, y1 - yd, y2 + yd, y2, y2, y2];\n\t\tlet lsz = this.scale * 0.1;\n\t\tthis.vg.drawPath(px, py, [false, false, true, false, false, true, false, false], false, 0x000000, lsz, MetaVector.NOCOLOUR, false);\n\t}\n\n\tprivate drawComponent(idx:number):void\n\t{\n\t\tlet comp = this.layout.components[idx];\n\n\t\tlet box = comp.outline.clone();\n\t\tbox.offsetBy(comp.boundary.x, comp.boundary.y);\n\t\tlet bg = 0xF8F8F8;\n\t\tif (idx == this.activeIndex) bg = 0x8296E4;\n\t\telse if (idx == this.selectedIndex) bg = 0xA9BBFF;\n\t\telse if (idx == this.hoverIndex) bg = 0xE0E0E0;\n\n\t\tthis.vg.drawRect(box.x, box.y, box.w, box.h, 0x808080, 1, bg);\n\n\t\t\tif (comp.molLayout)\n\t\t\t{\n\t\t\t\tlet b1 = comp.boundary, b2 = comp.molBox;\n\t\t\t\tcomp.molLayout.squeezeInto(b1.x + b2.x, b1.y + b2.y, b2.w, b2.h);\n\t\t\t}\n\n\t\tlet molBox = new Box(comp.boundary.x + comp.molBox.x, comp.boundary.y + comp.molBox.y, comp.molBox.w, comp.molBox.h);\n\t\tlet override = this.callbackDrawMolecule && this.callbackDrawMolecule(comp, this.vg, molBox);\n\n\t\tif (!override && comp.molLayout) new DrawMolecule(comp.molLayout, this.vg).draw();\n\n\t\tif (comp.nameLines.length > 0)\n\t\t{\n\t\t\tlet x = box.x, cx = x + comp.nameBox.midX(), y = box.y + comp.nameBox.y;\n\t\t\tfor (let line of comp.nameLines)\n\t\t\t{\n\t\t\t\tlet wad = this.measure.measureText(line.text, comp.fontSize), h = wad[1] + 2 * wad[2];\n\t\t\t\tlet override = this.callbackDrawNameLine && this.callbackDrawNameLine(comp, line, this.vg, new Box(x, y, box.w, h));\n\t\t\t\tif (!override) this.vg.drawText(cx, y, line.text, comp.fontSize, line.col, TextAlign.Centre | TextAlign.Top);\n\t\t\t\ty += h;\n\t\t\t}\n\t\t}\n\n\t\tif (comp.collapseBox)\n\t\t{\n\t\t\tlet cbox = comp.collapseBox.clone();\n\t\t\tcbox.offsetBy(comp.boundary.x, comp.boundary.y);\n\t\t\tthis.vg.drawRect(cbox.x, cbox.y, cbox.w, cbox.h, 0x808080, 1, 0xF8F8F8);\n\t\t\tlet cx = cbox.midX(), cy = cbox.midY(), d = Math.min(cbox.w, cbox.h) * 0.4, sz = d * 0.2;\n\t\t\tthis.vg.drawLine(cx - d, cy, cx + d, cy, 0x000000, sz);\n\t\t\tif (comp.isCollapsed) this.vg.drawLine(cx, cy - d, cx, cy + d, 0x000000, sz);\n\t\t}\n\t}\n}\n\n","import { fltEqual } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { ForeignMoleculeTransient } from './ForeignMolecule';\nimport { Graph } from './Graph';\nexport var DotPathBond;\n(function (DotPathBond) {\n    DotPathBond[DotPathBond[\"O0\"] = 0] = \"O0\";\n    DotPathBond[DotPathBond[\"O01\"] = 1] = \"O01\";\n    DotPathBond[DotPathBond[\"O1\"] = 2] = \"O1\";\n    DotPathBond[DotPathBond[\"O12\"] = 3] = \"O12\";\n    DotPathBond[DotPathBond[\"O2\"] = 4] = \"O2\";\n    DotPathBond[DotPathBond[\"O23\"] = 5] = \"O23\";\n    DotPathBond[DotPathBond[\"O3\"] = 6] = \"O3\";\n    DotPathBond[DotPathBond[\"O3X\"] = 7] = \"O3X\";\n})(DotPathBond || (DotPathBond = {}));\nexport var DotPathCharge;\n(function (DotPathCharge) {\n    DotPathCharge[DotPathCharge[\"N1X\"] = -3] = \"N1X\";\n    DotPathCharge[DotPathCharge[\"N1\"] = -2] = \"N1\";\n    DotPathCharge[DotPathCharge[\"N01\"] = -1] = \"N01\";\n    DotPathCharge[DotPathCharge[\"Z0\"] = 0] = \"Z0\";\n    DotPathCharge[DotPathCharge[\"P01\"] = 1] = \"P01\";\n    DotPathCharge[DotPathCharge[\"P1\"] = 2] = \"P1\";\n    DotPathCharge[DotPathCharge[\"P1X\"] = 3] = \"P1X\";\n})(DotPathCharge || (DotPathCharge = {}));\nexport class DotPath {\n    constructor(mol) {\n        this.mol = mol;\n        this.paths = [];\n        if (mol)\n            this.calculate();\n    }\n    clone() {\n        let dup = new DotPath(null);\n        dup.mol = this.mol;\n        dup.maskBlock = this.maskBlock;\n        dup.paths = this.paths.slice(0);\n        return dup;\n    }\n    getBondOrders() {\n        const mol = this.mol;\n        let orders = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            orders.push(mol.bondOrder(n));\n        for (let path of this.paths) {\n            let fract = path.numer / path.denom;\n            for (let n = 1; n <= 5; n++)\n                if (fltEqual(fract, n))\n                    fract = n;\n            for (let b of path.bonds)\n                orders[b - 1] = fract;\n        }\n        return orders;\n    }\n    getBondClasses() {\n        const mol = this.mol;\n        let classes = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bo = mol.bondOrder(n);\n            classes.push(bo == 0 ? 0 :\n                bo == 1 ? 2 :\n                    bo == 2 ? 4 :\n                        bo == 3 ? 6 : 7);\n        }\n        for (let path of this.paths) {\n            let fract = path.numer / path.denom;\n            let bcls = fltEqual(fract, 0) ? 0 :\n                fltEqual(fract, 1) ? 2 :\n                    fltEqual(fract, 2) ? 4 :\n                        fltEqual(fract, 3) ? 6 :\n                            fract < 1 ? 1 :\n                                fract < 2 ? 3 :\n                                    fract < 3 ? 5 : 7;\n            for (let b of path.bonds)\n                classes[b - 1] = bcls;\n        }\n        return classes;\n    }\n    getChargeClasses() {\n        const mol = this.mol;\n        let classes = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let chg = mol.atomCharge(n);\n            classes.push(chg == 0 ? 0 :\n                chg == -1 ? -2 :\n                    chg == 1 ? 2 :\n                        chg < -1 ? -3 : 3);\n        }\n        for (let path of this.paths) {\n            let chg = 0;\n            for (let a of path.atoms)\n                chg += mol.atomCharge(a);\n            chg /= path.atoms.length;\n            let ccls = fltEqual(chg, 0) ? 0 :\n                fltEqual(chg, -1) ? -2 :\n                    fltEqual(chg, 1) ? 2 :\n                        chg > -1 && chg < 0 ? -1 :\n                            chg > 0 && chg < 1 ? 1 :\n                                chg < -1 ? -3 : 3;\n            for (let a of path.atoms)\n                classes[a - 1] = ccls;\n        }\n        return classes;\n    }\n    getAggregateCharges() {\n        const mol = this.mol;\n        let chg = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            chg[n - 1] = mol.atomCharge(n);\n        for (let path of this.paths) {\n            let total = 0;\n            for (let a of path.atoms)\n                total += chg[a - 1];\n            for (let a of path.atoms)\n                chg[a - 1] = total;\n        }\n        return chg;\n    }\n    toString() {\n        let str = 'blocking=' + JSON.stringify(this.maskBlock) + '; paths=' + this.paths.length;\n        for (let p of this.paths)\n            str += ' [' + p.numer + '/' + p.denom + ';a=' + JSON.stringify(p.atoms) + ';b=' + JSON.stringify(p.bonds) + ']';\n        return str;\n    }\n    calculate() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let nonsingle = Vec.booleanArray(false, na), pibonded = Vec.booleanArray(false, na), metalbonded = Vec.booleanArray(false, na);\n        let bondsum = Vec.numberArray(0, na);\n        for (let n = 0; n < na; n++)\n            bondsum[n] = mol.atomHydrogens(n + 1);\n        for (let n = 1; n <= nb; n++) {\n            let bo = mol.bondOrder(n), bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            if (bo != 1) {\n                nonsingle[bfr - 1] = true;\n                nonsingle[bto - 1] = true;\n            }\n            if (bo >= 2) {\n                pibonded[bfr - 1] = true;\n                pibonded[bto - 1] = true;\n            }\n            else {\n                let blk1 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bfr)], blk2 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bto)];\n                if (blk1 >= 3 || blk2 >= 3) {\n                    metalbonded[bfr - 1] = true;\n                    metalbonded[bto - 1] = true;\n                }\n            }\n            bondsum[bfr - 1] += bo;\n            bondsum[bto - 1] += bo;\n            if (mol.bondTransient(n).indexOf(ForeignMoleculeTransient.BondAromatic) >= 0) {\n                pibonded[bfr - 1] = true;\n                pibonded[bto - 1] = true;\n            }\n        }\n        let impliedPi = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++)\n            if (!pibonded[n - 1]) {\n                let adjpi = 0;\n                for (let adj of mol.atomAdjList(n))\n                    if (pibonded[adj - 1] || metalbonded[adj - 1])\n                        adjpi++;\n                if (adjpi >= 2)\n                    impliedPi[n - 1] = true;\n            }\n        for (let n = 0; n < na; n++)\n            if (impliedPi[n])\n                pibonded[n] = true;\n        this.maskBlock = Vec.booleanArray(false, na);\n        let maskMaybe = Vec.booleanArray(false, na);\n        const COULD_BLOCK = [\n            Chemistry.ELEMENT_H,\n            Chemistry.ELEMENT_B, Chemistry.ELEMENT_C, Chemistry.ELEMENT_N, Chemistry.ELEMENT_O, Chemistry.ELEMENT_F,\n            Chemistry.ELEMENT_Al, Chemistry.ELEMENT_Si, Chemistry.ELEMENT_P, Chemistry.ELEMENT_S, Chemistry.ELEMENT_Cl,\n            Chemistry.ELEMENT_Ga, Chemistry.ELEMENT_Ge, Chemistry.ELEMENT_As, Chemistry.ELEMENT_Se, Chemistry.ELEMENT_Br,\n            Chemistry.ELEMENT_In, Chemistry.ELEMENT_Sn, Chemistry.ELEMENT_Sb, Chemistry.ELEMENT_Te, Chemistry.ELEMENT_I,\n            Chemistry.ELEMENT_Tl, Chemistry.ELEMENT_Pb, Chemistry.ELEMENT_Bi, Chemistry.ELEMENT_Po, Chemistry.ELEMENT_At,\n        ];\n        const ACIDS = [\n            Chemistry.ELEMENT_B,\n            Chemistry.ELEMENT_Al, Chemistry.ELEMENT_Si,\n            Chemistry.ELEMENT_Ga, Chemistry.ELEMENT_Ge,\n            Chemistry.ELEMENT_In, Chemistry.ELEMENT_Sn,\n            Chemistry.ELEMENT_Tl, Chemistry.ELEMENT_Pb,\n        ];\n        const BASES = [\n            Chemistry.ELEMENT_N, Chemistry.ELEMENT_O, Chemistry.ELEMENT_F,\n            Chemistry.ELEMENT_P, Chemistry.ELEMENT_S, Chemistry.ELEMENT_Cl,\n            Chemistry.ELEMENT_As, Chemistry.ELEMENT_Se, Chemistry.ELEMENT_Br,\n            Chemistry.ELEMENT_Sb, Chemistry.ELEMENT_Te, Chemistry.ELEMENT_I,\n            Chemistry.ELEMENT_Bi, Chemistry.ELEMENT_Po, Chemistry.ELEMENT_At,\n        ];\n        skip: for (let n = 0; n < na; n++) {\n            const a = n + 1;\n            if (nonsingle[n] || pibonded[n])\n                continue;\n            if (mol.atomCharge(a) != 0 || mol.atomUnpaired(a) != 0)\n                continue;\n            const atno = mol.atomicNumber(a);\n            if (atno == 0) {\n                this.maskBlock[n] = true;\n                continue;\n            }\n            if (COULD_BLOCK.indexOf(atno) < 0)\n                continue;\n            if (bondsum[n] != Chemistry.ELEMENT_BONDING[atno])\n                continue;\n            if (ACIDS.indexOf(atno) >= 0) {\n                for (let adj of mol.atomAdjList(a))\n                    if (BASES.indexOf(mol.atomicNumber(adj)) >= 0)\n                        continue skip;\n            }\n            if (BASES.indexOf(atno) >= 0) {\n                for (let adj of mol.atomAdjList(a))\n                    if (ACIDS.indexOf(mol.atomicNumber(adj)) >= 0)\n                        continue skip;\n            }\n            maskMaybe[n] = true;\n            if (atno == Chemistry.ELEMENT_C) {\n                let hasMetal = false;\n                for (let adj of mol.atomAdjList(a))\n                    if (COULD_BLOCK.indexOf(mol.atomicNumber(adj)) < 0)\n                        hasMetal = true;\n                if (!hasMetal)\n                    this.maskBlock[n] = true;\n            }\n            else if (atno == Chemistry.ELEMENT_H) {\n                this.maskBlock[n] = true;\n            }\n        }\n        skip: for (let n = 0; n < na; n++)\n            if (maskMaybe[n] && !this.maskBlock[n]) {\n                for (let a of mol.atomAdjList(n + 1))\n                    if (!maskMaybe[a - 1])\n                        continue skip;\n                this.maskBlock[n] = true;\n            }\n        let g = Graph.fromMolecule(mol);\n        for (let n = 0; n < na; n++)\n            if (this.maskBlock[n])\n                g.isolateNode(n);\n        for (let cc of g.calculateComponentGroups()) {\n            if (cc.length == 1)\n                continue;\n            let amask = Vec.idxMask(cc, na);\n            Vec.addTo(cc, 1);\n            let p = {\n                atoms: cc,\n                bonds: [],\n                numer: 0,\n                denom: 0\n            };\n            for (let n = 1; n <= nb; n++)\n                if (amask[mol.bondFrom(n) - 1] && amask[mol.bondTo(n) - 1])\n                    p.bonds.push(n);\n            let totalHave = 0, totalWant = 0;\n            for (let a of p.atoms) {\n                let others = mol.atomHydrogens(a);\n                for (let o of mol.atomAdjList(a))\n                    if (!amask[o - 1])\n                        others++;\n                let atno = mol.atomicNumber(a);\n                let have = Chemistry.ELEMENT_VALENCE[atno] - mol.atomCharge(a) - others;\n                let want = Chemistry.ELEMENT_SHELL[atno] - Chemistry.ELEMENT_VALENCE[atno] - others;\n                totalHave += have;\n                totalWant += want;\n            }\n            let electrons = Math.min(totalHave, totalWant);\n            p.numer = electrons;\n            p.denom = 2 * p.bonds.length;\n            this.paths.push(p);\n        }\n    }\n}\n//# sourceMappingURL=DotPath.js.map","import { GeomUtil } from '../util/Geom';\nimport { angleDiff, angleDiffPos, DEGRAD, norm2_xyz, norm_xyz } from '../util/util';\nimport { Permutation, Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nclass Stereochemistry {\n    constructor(meta) {\n        this.meta = meta;\n        this.mol = meta.mol;\n        this.priority = Vec.numberArray(0, this.mol.numAtoms);\n        this.chiralTetra = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n        this.cistransBond = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numBonds);\n        this.squarePlanar = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n    }\n    calculate() {\n        this.isH = Vec.booleanArray(false, this.mol.numAtoms);\n        for (let n = this.mol.numAtoms; n >= 1; n--)\n            this.isH[n - 1] = this.mol.atomElement(n) == 'H';\n        this.buildPriority();\n        this.buildTetraChirality();\n        this.buildBondCisTrans();\n        this.buildPlanarCisTrans();\n        this.buildOctaChirality();\n    }\n    atomPriority(atom) { return this.priority[atom - 1]; }\n    atomTetraChirality(atom) { return this.chiralTetra[atom - 1]; }\n    bondSideStereo(bond) { return this.cistransBond[bond - 1]; }\n    atomPlanarStereo(atom) { return this.squarePlanar[atom - 1]; }\n    getPriorities() { return this.priority.slice(0); }\n    getAtomTetraChiral() { return this.chiralTetra.slice(0); }\n    getBondSideStereo() { return this.cistransBond.slice(0); }\n    static create(meta) {\n        let stereo = new Stereochemistry(meta);\n        stereo.calculate();\n        return stereo;\n    }\n    static rubricTetrahedral(mol, atom) {\n        if (mol.atomAdjCount(atom) < 3 || mol.atomAdjCount(atom) + mol.atomHydrogens(atom) != 4)\n            return null;\n        let adjBonds = mol.atomAdjBonds(atom);\n        let hasWedge = false;\n        for (let n = 0; n < adjBonds.length; n++) {\n            let bt = mol.bondType(adjBonds[n]);\n            if (bt == Molecule.BONDTYPE_UNKNOWN)\n                return null;\n            if (mol.bondFrom(adjBonds[n]) != atom)\n                continue;\n            if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                hasWedge = true;\n        }\n        if (!hasWedge && !mol.is3D())\n            return null;\n        let adj = mol.atomAdjList(atom);\n        let x = [0, 0, 0, 0];\n        let y = [0, 0, 0, 0];\n        let z = [0, 0, 0, 0];\n        let numShort = 0, numWedges = 0;\n        for (let n = 0; n < adjBonds.length; n++) {\n            const bfr = mol.bondFrom(adjBonds[n]), bt = mol.bondType(adjBonds[n]);\n            x[n] = mol.atomX(adj[n]) - mol.atomX(atom);\n            y[n] = mol.atomY(adj[n]) - mol.atomY(atom);\n            if (mol.is3D()) {\n                z[n] = mol.atomZ(adj[n]) - mol.atomZ(atom);\n            }\n            else if (bfr == atom) {\n                if (bt == Molecule.BONDTYPE_INCLINED) {\n                    z[n] = 1;\n                    numWedges++;\n                }\n                else if (bt == Molecule.BONDTYPE_DECLINED) {\n                    z[n] = -1;\n                    numWedges++;\n                }\n            }\n            let dsq = norm_xyz(x[n], y[n], z[n]);\n            if (dsq < 0.01 * 0.01) {\n                numShort++;\n                if (numShort > 1)\n                    return null;\n            }\n        }\n        if (adjBonds.length == 3) {\n            adj.push(0);\n            if (!mol.is3D() && numWedges == 1) {\n                let th0 = Math.atan2(y[0], x[0]), th1 = Math.atan2(y[1], x[1]), th2 = Math.atan2(y[2], x[2]);\n                let i1 = 1, i2 = 2;\n                if (angleDiffPos(th1, th0) > angleDiffPos(th2, th0)) {\n                    i2 = 1;\n                    i1 = 2;\n                }\n                x[0] = 1.5;\n                y[0] = 0;\n                x[1] = -0.75;\n                y[i1] = 1.3;\n                x[2] = -0.75;\n                y[i2] = -1.3;\n            }\n            else {\n                x[3] = -(x[0] + x[1] + x[2]);\n                y[3] = -(y[0] + y[1] + y[2]);\n                z[3] = -(z[0] + z[1] + z[2]);\n                let dsq = norm2_xyz(x[3], y[3], z[3]);\n                if (dsq < 0.01 * 0.01)\n                    return null;\n                let inv = 1.0 / Math.sqrt(dsq);\n                x[3] *= inv;\n                y[3] *= inv;\n                z[3] *= inv;\n            }\n        }\n        let one = 0, two = 0;\n        for (let i = 1; i <= 6; i++) {\n            let a = 0, b = 0;\n            if (i == 1) {\n                a = 1;\n                b = 2;\n            }\n            else if (i == 2) {\n                a = 2;\n                b = 3;\n            }\n            else if (i == 3) {\n                a = 3;\n                b = 1;\n            }\n            else if (i == 4) {\n                a = 2;\n                b = 1;\n            }\n            else if (i == 5) {\n                a = 3;\n                b = 2;\n            }\n            else if (i == 6) {\n                a = 1;\n                b = 3;\n            }\n            let xx = y[a] * z[b] - y[b] * z[a] - x[0];\n            let yy = z[a] * x[b] - z[b] * x[a] - y[0];\n            let zz = x[a] * y[b] - x[b] * y[a] - z[0];\n            if (i <= 3)\n                one += xx * xx + yy * yy + zz * zz;\n            else\n                two += xx * xx + yy * yy + zz * zz;\n        }\n        if (two > one)\n            Vec.swap(adj, 2, 3);\n        return adj;\n    }\n    static rubricSquarePlanar(mol, atom) {\n        if (mol.atomAdjCount(atom) != 4)\n            return null;\n        if (!mol.is3D()) {\n            let ninc = 0, ndec = 0;\n            for (let b of mol.atomAdjBonds(atom)) {\n                let bt = mol.bondType(b);\n                if (bt == Molecule.BONDTYPE_INCLINED)\n                    ninc++;\n                else if (bt == Molecule.BONDTYPE_DECLINED)\n                    ndec++;\n            }\n            if (ninc == 2 && ndec == 2) { }\n            else if (ninc == 2 && ndec == 0) { }\n            else if (ninc == 0 && ndec == 2) { }\n            else\n                return null;\n        }\n        let adj = mol.atomAdjList(atom);\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v1 = Vec.sub(MolUtil.atomVec3(mol, adj[0]), v0);\n        let v2 = Vec.sub(MolUtil.atomVec3(mol, adj[1]), v0);\n        let v3 = Vec.sub(MolUtil.atomVec3(mol, adj[2]), v0);\n        let v4 = Vec.sub(MolUtil.atomVec3(mol, adj[3]), v0);\n        for (let v of [v1, v2, v3, v4]) {\n            let dsq = norm2_xyz(v[0], v[1], v[2]);\n            if (dsq < 0.01 * 0.01)\n                continue;\n            let inv = 1.0 / Math.sqrt(dsq);\n            v[0] *= inv;\n            v[1] *= inv;\n            v[2] *= inv;\n        }\n        let d2 = GeomUtil.dist2(v1, v2), d3 = GeomUtil.dist2(v1, v3), d4 = GeomUtil.dist2(v1, v4);\n        if (d2 > d3 && d2 >= d4) {\n            Vec.swap(adj, 1, 2);\n            [v2, v3] = [v3, v2];\n        }\n        else if (d4 > d3) {\n            Vec.swap(adj, 3, 2);\n            [v3, v4] = [v4, v3];\n        }\n        const MIN_ANGLE = (mol.is3D() ? 80 : 45) * DEGRAD;\n        const MAX_ANGLE = (mol.is3D() ? 100 : 135) * DEGRAD;\n        const th12 = GeomUtil.acuteAngle(v1, v2);\n        if (th12 < MIN_ANGLE || th12 > MAX_ANGLE)\n            return null;\n        const th23 = GeomUtil.acuteAngle(v2, v3);\n        if (th23 < MIN_ANGLE || th23 > MAX_ANGLE)\n            return null;\n        const th34 = GeomUtil.acuteAngle(v3, v4);\n        if (th34 < MIN_ANGLE || th34 > MAX_ANGLE)\n            return null;\n        const th41 = GeomUtil.acuteAngle(v4, v1);\n        if (th41 < MIN_ANGLE || th41 > MAX_ANGLE)\n            return null;\n        return adj;\n    }\n    static rubricBipyrimidal(mol, atom) {\n        const nadj = mol.atomAdjCount(atom);\n        if (nadj != 4 && nadj != 5)\n            return null;\n        let atom2 = 0, atom3 = 0;\n        let adj = mol.atomAdjList(atom), bonds = mol.atomAdjBonds(atom);\n        if (!mol.is3D()) {\n            for (let n = 0; n < adj.length; n++) {\n                if (mol.bondType(bonds[n]) == Molecule.BONDTYPE_INCLINED) {\n                    if (atom2 > 0)\n                        return null;\n                    atom2 = adj[n];\n                }\n                else if (mol.bondType(bonds[n]) == Molecule.BONDTYPE_DECLINED) {\n                    if (atom3 > 0)\n                        return null;\n                    atom3 = adj[n];\n                }\n            }\n            if (atom2 == 0 || atom3 == 0)\n                return null;\n            let th1 = Math.atan2(mol.atomY(atom2) - mol.atomY(atom), mol.atomX(atom2) - mol.atomX(atom));\n            let th2 = Math.atan2(mol.atomY(atom3) - mol.atomY(atom), mol.atomX(atom3) - mol.atomX(atom));\n            if (Math.abs(angleDiff(th1, th2)) > 160 * DEGRAD)\n                return null;\n        }\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v = [[], [], [], [], []];\n        const THRESH = 0.1;\n        for (let n = 0; n < nadj; n++) {\n            v[n] = Vec.sub(MolUtil.atomVec3(mol, adj[n]), v0);\n            const mag = GeomUtil.magnitude(v[n]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[n], 1.0 / mag);\n            if (adj[n] == atom2)\n                v[n][2] += 1;\n            else if (adj[n] == atom3)\n                v[n][2] -= 1;\n        }\n        let atom4 = 0, atom5 = 0;\n        const ANGLE_OPPOSITE = 175 * DEGRAD;\n        for (let i = 0; i < nadj - 1; i++)\n            if (adj[i] != atom2 && adj[i] != atom3) {\n                for (let j = i + 1; j < nadj; j++)\n                    if (adj[j] != atom2 && adj[j] != atom3) {\n                        let theta = GeomUtil.acuteAngle(v[i], v[j]);\n                        if (theta > ANGLE_OPPOSITE) {\n                            if (atom4 != 0)\n                                return null;\n                            atom4 = adj[i];\n                            atom5 = adj[j];\n                        }\n                    }\n            }\n        if (mol.is3D()) {\n            for (let a of adj)\n                if (a != atom4 && a != atom5) {\n                    if (atom2 == 0)\n                        atom2 = a;\n                    else if (atom3 == 0)\n                        atom3 = a;\n                }\n        }\n        if (!atom4 || !atom5)\n            return null;\n        let v1 = null;\n        let v2 = v[adj.indexOf(atom2)];\n        let v3 = v[adj.indexOf(atom3)];\n        let v4 = v[adj.indexOf(atom4)];\n        let v5 = v[adj.indexOf(atom5)];\n        let atom1 = 0;\n        if (nadj == 5) {\n            for (let n = 0; n < nadj; n++)\n                if (adj[n] != atom2 && adj[n] != atom3 && adj[n] != atom4 && adj[n] != atom5) {\n                    atom1 = adj[n];\n                    v1 = v[n];\n                    break;\n                }\n        }\n        else {\n            v1 = [0, 0, 0];\n            v1 = Vec.sub(v1, v2);\n            v1 = Vec.sub(v1, v3);\n            const mag = GeomUtil.magnitude(v1);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v1, 1.0 / mag);\n        }\n        let v45 = Vec.sub(v5, v4);\n        let cross = GeomUtil.crossProduct(v45, v1);\n        let dsq2 = GeomUtil.dist2(cross, v2), dsq3 = GeomUtil.dist2(cross, v3);\n        if (dsq2 < dsq3)\n            return [atom1, atom2, atom3, atom4, atom5];\n        else\n            return [atom1, atom2, atom3, atom5, atom4];\n    }\n    static rubricOctahedral(mol, atom) {\n        const nadj = mol.atomAdjCount(atom);\n        if (nadj != 5 && nadj != 6)\n            return null;\n        let adj = mol.atomAdjList(atom), bonds = mol.atomAdjBonds(atom);\n        if (nadj == 5) {\n            adj.push(0);\n            bonds.push(0);\n        }\n        if (!mol.is3D()) {\n            let numWedges = 0;\n            for (let b of bonds)\n                if (b > 0) {\n                    const bt = mol.bondType(b);\n                    if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                        numWedges++;\n                }\n            if ((nadj == 5 && numWedges < 1) || (nadj == 6 && numWedges < 2))\n                return null;\n        }\n        const THRESH = 0.1;\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v = [[], [], [], [], [], []];\n        for (let n = 0; n < nadj; n++) {\n            v[n] = MolUtil.atomVec3(mol, adj[n]);\n            Vec.subFromArray(v[n], v0);\n            let mag = GeomUtil.magnitude(v[n]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[n], 1 / mag);\n            let bt = mol.bondType(bonds[n]);\n            if (bt == Molecule.BONDTYPE_INCLINED) {\n                if (mol.bondFrom(bonds[n]) == atom)\n                    v[n][2] += 1;\n                else\n                    v[n][2] -= 1;\n            }\n            else if (bt == Molecule.BONDTYPE_DECLINED) {\n                if (mol.bondFrom(bonds[n]) == atom)\n                    v[n][2] -= 1;\n                else\n                    v[n][2] += 1;\n            }\n        }\n        if (nadj == 5) {\n            v[5] = [0, 0, 0];\n            for (let n = 0; n < 5; n++)\n                Vec.subFromArray(v[5], v[n]);\n            let mag = GeomUtil.magnitude(v[5]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[5], 1 / mag);\n        }\n        let slots = [-1, -1, -1, -1, 0, 1];\n        let bestOpposite = GeomUtil.acuteAngle(v[0], v[1]);\n        for (let i = 0; i < 5; i++)\n            for (let j = (i == 0 ? 2 : i + 1); j < 6; j++) {\n                let theta = GeomUtil.acuteAngle(v[i], v[j]);\n                if (theta > bestOpposite) {\n                    slots[4] = i;\n                    slots[5] = j;\n                    bestOpposite = theta;\n                }\n            }\n        let axial = Vec.sub(v[slots[5]], v[slots[4]]);\n        let bestOrthogonal = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < 6; n++)\n            if (n != slots[4] && n != slots[5]) {\n                let delta = Math.abs((90 * DEGRAD) - GeomUtil.acuteAngle(v[n], axial));\n                if (delta < bestOrthogonal) {\n                    slots[0] = n;\n                    bestOrthogonal = delta;\n                }\n            }\n        for (let s = 1; s <= 2; s++) {\n            let cross = GeomUtil.crossProduct(axial, v[slots[s - 1]]);\n            let bestOrient = Number.POSITIVE_INFINITY;\n            for (let n = 0; n < 6; n++) {\n                if (n == slots[4] || n == slots[5] || n == slots[0] || n == slots[1])\n                    continue;\n                let delta = GeomUtil.acuteAngle(v[n], cross);\n                if (delta < bestOrient) {\n                    slots[s] = n;\n                    bestOrient = delta;\n                }\n            }\n        }\n        for (let n = 0; n < 6; n++)\n            if (slots.indexOf(n) < 0) {\n                slots[3] = n;\n                break;\n            }\n        let rubric = [0, 0, 0, 0, 0, 0];\n        for (let n = 0; n < 6; n++)\n            rubric[n] = slots[n] < 0 ? 0 : adj[slots[n]];\n        return rubric;\n    }\n    static rubricBondSides(mol, bond) {\n        const bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        const nfr = mol.atomAdjCount(bfr), nto = mol.atomAdjCount(bto);\n        if (nfr < 2 || nfr > 3 || nto < 2 || nto > 3)\n            return null;\n        let adj1 = mol.atomAdjList(bfr), adj2 = mol.atomAdjList(bto);\n        let f1 = 0, f2 = 0, t1 = 0, t2 = 0;\n        for (let i = 0; i < adj1.length; i++) {\n            if (adj1[i] != bto) {\n                if (f1 == 0)\n                    f1 = adj1[i];\n                else\n                    f2 = adj1[i];\n            }\n        }\n        for (let i = 0; i < adj2.length; i++) {\n            if (adj2[i] != bfr) {\n                if (t1 == 0)\n                    t1 = adj2[i];\n                else\n                    t2 = adj2[i];\n            }\n        }\n        if (f1 > 0 && f2 > 0 && mol.atomElement(f1) == 'H') {\n            let f = f1;\n            f1 = f2;\n            f2 = f;\n        }\n        if (t1 > 0 && t2 > 0 && mol.atomElement(t1) == 'H') {\n            let t = t1;\n            t1 = t2;\n            t2 = t;\n        }\n        let vfr = MolUtil.atomVec3(mol, bfr), vto = MolUtil.atomVec3(mol, bto);\n        let vbond = Vec.sub(vto, vfr);\n        let vf1 = Vec.sub(MolUtil.atomVec3(mol, f1), vfr), vt1 = Vec.sub(MolUtil.atomVec3(mol, t1), vto);\n        const THRESHSQ = 0.1 * 0.1;\n        let xf1 = GeomUtil.crossProduct(vf1, vbond);\n        if (GeomUtil.magnitude2(xf1) < THRESHSQ)\n            return null;\n        let xt1 = GeomUtil.crossProduct(vt1, vbond);\n        if (GeomUtil.magnitude2(xt1) < THRESHSQ)\n            return null;\n        let xf1N = Vec.neg(xf1);\n        let keepF1T1 = GeomUtil.dist2(xf1, xt1) < GeomUtil.dist2(xf1N, xt1);\n        let keepF2T1 = keepF1T1, keepF1T2 = keepF1T1, keepF2T2 = keepF1T1;\n        let vf2 = null, vt2 = null, xf2 = null, xt2 = null, xf2N = null;\n        if (f2 > 0) {\n            vf2 = Vec.sub(MolUtil.atomVec3(mol, f2), vfr);\n            if (GeomUtil.magnitude2(vf2) < THRESHSQ) {\n                if (mol.atomElement(f2) != 'H')\n                    return null;\n            }\n            else {\n                xf2 = GeomUtil.crossProduct(vf2, vbond);\n                if (GeomUtil.magnitude2(xf2) < THRESHSQ)\n                    return null;\n                xf2N = Vec.neg(xf2);\n                keepF2T1 = GeomUtil.dist2(xf2, xt1) > GeomUtil.dist2(xf2N, xt1);\n            }\n        }\n        if (t2 > 0) {\n            vt2 = Vec.sub(MolUtil.atomVec3(mol, t2), vto);\n            if (GeomUtil.magnitude2(vt2) < THRESHSQ) {\n                if (mol.atomElement(t2) != 'H')\n                    return null;\n            }\n            else {\n                xt2 = GeomUtil.crossProduct(vt2, vbond);\n                if (GeomUtil.magnitude2(xt2) < THRESHSQ)\n                    return null;\n                keepF1T2 = GeomUtil.dist2(xf1, xt2) > GeomUtil.dist2(xf1N, xt2);\n            }\n        }\n        if (xf2 != null && xt2 != null) {\n            keepF2T2 = GeomUtil.dist2(xf2, xt2) < GeomUtil.dist2(xf2N, xt2);\n        }\n        if (keepF1T1 && keepF2T1 && keepF1T2 && keepF2T2)\n            return [f1, f2, t1, t2];\n        if (!keepF1T1 && !keepF2T1 && !keepF1T2 && !keepF2T2)\n            return [f1, f2, t2, t1];\n        return null;\n    }\n    buildTetraChirality() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let haswedge = Vec.booleanArray(false, na);\n        for (let n = 1; n <= nb; n++) {\n            if (mol.bondType(n) == Molecule.BONDTYPE_INCLINED || mol.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                haswedge[mol.bondFrom(n) - 1] = true;\n        }\n        skip_atom: for (let n = 1; n <= na; n++) {\n            this.chiralTetra[n - 1] = Stereochemistry.STEREO_NONE;\n            let adj = mol.atomAdjList(n);\n            if (!(adj.length == 4 || (adj.length == 3 && mol.atomHydrogens(n) == 1)))\n                continue;\n            if (adj.length == 3 && (this.isH[adj[0] - 1] || this.isH[adj[1] - 1] || this.isH[adj[2] - 1]))\n                continue;\n            for (let i = 0; i < adj.length - 1; i++) {\n                for (let j = i + 1; j < adj.length; j++) {\n                    if (this.priority[adj[i] - 1] == this.priority[adj[j] - 1])\n                        continue skip_atom;\n                }\n            }\n            if (!haswedge[n - 1] && !mol.is3D()) {\n                this.chiralTetra[n - 1] = Stereochemistry.STEREO_UNKNOWN;\n                continue;\n            }\n            let rubric = Stereochemistry.rubricTetrahedral(mol, n);\n            if (rubric == null)\n                continue;\n            let pri = [\n                rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1],\n                rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1],\n                rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1],\n                rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1]\n            ];\n            pri = Vec.idxSort(pri);\n            let parity = Permutation.parityIdentity(pri);\n            this.chiralTetra[n - 1] = (parity & 1) == 0 ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildBondCisTrans() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let sf = [0, 0], st = [0, 0];\n        let ringMask = Vec.booleanArray(false, nb);\n        for (let rsz = 3; rsz <= 7; rsz++) {\n            for (let r of mol.findRingsOfSize(rsz)) {\n                for (let n = 0; n < r.length; n++) {\n                    let b = mol.findBond(r[n], r[n < r.length - 1 ? n + 1 : 0]);\n                    ringMask[b - 1] = true;\n                }\n            }\n        }\n        skip_bond: for (let n = 1; n <= nb; n++) {\n            this.cistransBond[n - 1] = Stereochemistry.STEREO_NONE;\n            if (mol.bondOrder(n) != 2 || this.meta.isBondAromatic(n) || ringMask[n - 1])\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let adj1 = mol.atomAdjList(bfr), adj2 = mol.atomAdjList(bto);\n            if (adj1.length <= 1 || adj2.length <= 1 || adj1.length > 3 || adj2.length > 3)\n                continue;\n            if (adj1.length == 2 && (this.isH[adj1[0] - 1] || this.isH[adj1[1] - 1]))\n                continue;\n            if (adj2.length == 2 && (this.isH[adj2[0] - 1] || this.isH[adj2[1] - 1]))\n                continue;\n            for (let i = 0; i < adj1.length - 1; i++)\n                if (adj1[i] != bfr)\n                    for (let j = i + 1; j < adj1.length; j++)\n                        if (adj1[j] != bfr)\n                            if (this.priority[adj1[i] - 1] == this.priority[adj1[j] - 1])\n                                continue skip_bond;\n            for (let i = 0; i < adj2.length - 1; i++)\n                if (adj2[i] != bto)\n                    for (let j = i + 1; j < adj2.length; j++)\n                        if (adj2[j] != bto)\n                            if (this.priority[adj2[i] - 1] == this.priority[adj2[j] - 1])\n                                continue skip_bond;\n            if (mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN) {\n                this.cistransBond[n - 1] = Stereochemistry.STEREO_UNKNOWN;\n                continue;\n            }\n            let rubric = Stereochemistry.rubricBondSides(mol, n);\n            if (rubric == null)\n                continue;\n            let pf1 = rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1];\n            let pf2 = rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1];\n            let pt1 = rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1];\n            let pt2 = rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1];\n            this.cistransBond[n - 1] = ((pf1 < pf2) == (pt1 < pt2)) ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildPlanarCisTrans() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        skip_atom: for (let n = 1; n <= na; n++) {\n            this.squarePlanar[n - 1] = Stereochemistry.STEREO_NONE;\n            if (mol.atomAdjCount(n) != 4)\n                continue;\n            if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(n)] < 3)\n                continue;\n            let adj = mol.atomAdjList(n);\n            for (let i = 0; i < adj.length; i++) {\n                let count = 0;\n                for (let j = 0; j < adj.length; j++) {\n                    if (this.priority[adj[i] - 1] == this.priority[adj[j] - 1])\n                        count++;\n                }\n                if (count >= 3)\n                    continue skip_atom;\n            }\n            let rubric = Stereochemistry.rubricSquarePlanar(mol, n);\n            if (rubric == null)\n                continue;\n            let pri = [\n                rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1],\n                rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1],\n                rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1],\n                rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1]\n            ];\n            let parity = Permutation.parityOrder(pri);\n            this.squarePlanar[n - 1] = (parity & 1) == 0 ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildOctaChirality() {\n    }\n    buildPriority() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let cipgr = [];\n        for (let n = 0; n < na; n++)\n            cipgr.push(Vec.numberArray(-1, mol.atomHydrogens(n + 1)));\n        for (let n = 1; n <= nb; n++) {\n            let bf = mol.bondFrom(n) - 1, bt = mol.bondTo(n) - 1, bo = mol.bondOrder(n);\n            if (this.meta.isBondAromatic(n))\n                bo = 2;\n            if (bf != bt)\n                for (let i = 0; i < bo; i++) {\n                    cipgr[bf].push(bt);\n                    cipgr[bt].push(bf);\n                }\n        }\n        this.priority = Vec.numberArray(0, na);\n        let anyActualH = false;\n        for (let n = 0; n < na; n++) {\n            this.priority[n] = mol.atomicNumber(n + 1);\n            if (this.priority[n] == 1)\n                anyActualH = true;\n        }\n        let prigr = [];\n        for (let n = 0; n < na; n++)\n            prigr.push([]);\n        while (true) {\n            for (let n = 0; n < na; n++) {\n                let cip = cipgr[n], pri = [];\n                for (let i = 0; i < cip.length; i++)\n                    pri.push(cip[i] < 0 ? 1 : this.priority[cip[i]]);\n                Vec.sort(pri);\n                prigr[n] = pri;\n            }\n            let groups = this.sortAndGroup(this.priority);\n            let nextpri = anyActualH ? 0 : 1;\n            let repartitioned = false;\n            for (let n = 0; n < groups.length; n++) {\n                let g = groups[n];\n                for (let p = 0; p < g.length - 1;) {\n                    const i1 = g[p], i2 = g[p + 1];\n                    let cmp = 0, sz = Math.max(prigr[i1].length, prigr[i2].length);\n                    for (let i = 0; i < sz; i++) {\n                        let v1 = i < prigr[i1].length ? prigr[i1][i] : 0, v2 = i < prigr[i2].length ? prigr[i2][i] : 0;\n                        if (v1 < v2) {\n                            cmp = -1;\n                            break;\n                        }\n                        if (v1 > v2) {\n                            cmp = 1;\n                            break;\n                        }\n                    }\n                    if (cmp > 0) {\n                        g[p] = i2;\n                        g[p + 1] = i1;\n                        if (p > 0)\n                            p--;\n                    }\n                    else\n                        p++;\n                }\n                for (let i = 0; i < g.length; i++) {\n                    if (i == 0)\n                        nextpri++;\n                    else if (prigr[g[i]].length != prigr[g[i - 1]].length) {\n                        nextpri++;\n                        repartitioned = true;\n                    }\n                    else {\n                        for (let j = 0; j < prigr[g[i]].length; j++)\n                            if (prigr[g[i]][j] != prigr[g[i - 1]][j]) {\n                                nextpri++;\n                                repartitioned = true;\n                                break;\n                            }\n                    }\n                    this.priority[g[i]] = nextpri;\n                }\n            }\n            if (!repartitioned)\n                break;\n        }\n    }\n    sortAndGroup(val) {\n        let uset = new Set();\n        for (let v of val)\n            uset.add(v);\n        let unique = Array.from(uset);\n        Vec.sort(unique);\n        let ret = [];\n        for (let n = 0; n < unique.length; n++)\n            ret.push([]);\n        for (let n = 0; n < val.length; n++) {\n            let grp = unique.indexOf(val[n]);\n            ret[grp].push(n);\n        }\n        return ret;\n    }\n}\nStereochemistry.STEREO_NONE = 0;\nStereochemistry.STEREO_POS = 1;\nStereochemistry.STEREO_NEG = 2;\nStereochemistry.STEREO_UNKNOWN = 3;\nStereochemistry.STEREO_BROKEN = 4;\nStereochemistry.RUBRIC_EQUIV_TETRA = [\n    [0, 1, 2, 3], [0, 2, 3, 1], [0, 3, 1, 2], [1, 0, 3, 2], [1, 2, 0, 3], [1, 3, 2, 0],\n    [2, 0, 1, 3], [2, 1, 3, 0], [2, 3, 0, 1], [3, 0, 2, 1], [3, 1, 0, 2], [3, 2, 1, 0]\n];\nStereochemistry.RUBRIC_EQUIV_SIDES = [\n    [0, 1, 2, 3], [1, 0, 3, 2], [2, 3, 0, 1], [3, 2, 1, 0]\n];\nStereochemistry.RUBRIC_EQUIV_SQUARE = [\n    [0, 1, 2, 3], [0, 3, 2, 1], [1, 2, 3, 0], [1, 0, 3, 2],\n    [2, 1, 0, 3], [2, 3, 0, 1], [3, 2, 1, 0], [3, 0, 1, 2]\n];\nStereochemistry.RUBRIC_EQUIV_BIPY = [\n    [0, 1, 2, 3, 4], [1, 2, 0, 3, 4], [2, 0, 1, 3, 4],\n    [0, 2, 1, 4, 3], [1, 0, 2, 4, 3], [2, 1, 0, 4, 3],\n];\nStereochemistry.RUBRIC_EQUIV_OCTA = [\n    [0, 1, 2, 3, 4, 5], [0, 3, 2, 1, 5, 4], [0, 4, 2, 5, 3, 1], [0, 5, 2, 4, 1, 3],\n    [1, 0, 3, 2, 5, 4], [1, 2, 3, 0, 4, 5], [1, 4, 3, 5, 0, 2], [1, 5, 3, 4, 2, 0],\n    [2, 1, 0, 3, 5, 4], [2, 3, 0, 1, 4, 5], [2, 4, 0, 5, 1, 3], [2, 5, 0, 4, 3, 1],\n    [3, 0, 1, 2, 4, 5], [3, 2, 1, 0, 5, 4], [3, 4, 1, 5, 2, 0], [3, 5, 1, 4, 0, 2],\n    [4, 0, 5, 2, 1, 3], [4, 1, 5, 3, 2, 0], [4, 2, 5, 0, 3, 1], [4, 3, 5, 1, 0, 2],\n    [5, 0, 4, 2, 3, 1], [5, 1, 4, 3, 0, 2], [5, 2, 4, 0, 1, 3], [5, 3, 4, 1, 2, 0]\n];\nexport { Stereochemistry };\n//# sourceMappingURL=Stereochemistry.js.map","import { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { DotPath } from '../mol/DotPath';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nimport { Stereochemistry } from '../mol/Stereochemistry';\nclass MetaMolecule {\n    constructor(mol) {\n        this.mol = mol;\n        this.atomArom = null;\n        this.bondArom = null;\n        this.rubricTetra = null;\n        this.rubricSquare = null;\n        this.rubricBipy = null;\n        this.rubricOcta = null;\n        this.rubricSides = null;\n        this.hash = null;\n        this.heavyHash = null;\n        this.uniqueElements = null;\n        this.dots = null;\n        this.piAtom = null;\n    }\n    calculateStrictAromaticity() {\n        let mol = this.mol;\n        this.atomArom = Vec.booleanArray(false, mol.numAtoms);\n        this.bondArom = Vec.booleanArray(false, mol.numBonds);\n        let rings = mol.findRingsOfSize(6);\n        const nr = rings.length;\n        if (nr == 0)\n            return;\n        this.ensurePiAtoms();\n        let mask = Vec.booleanArray(false, nr);\n        for (let n = 0; n < nr; n++) {\n            for (let i = 0; i < rings[n].length; i++) {\n                let a = rings[n][i];\n                if (!this.piAtom[a - 1]) {\n                    mask[n] = true;\n                    break;\n                }\n                let b = mol.findBond(a, rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                let bo = mol.bondOrder(b);\n                if (bo != 1 && bo != 2) {\n                    mask[n] = true;\n                    break;\n                }\n            }\n        }\n        while (true) {\n            let anyChange = false;\n            for (let n = 0; n < nr; n++)\n                if (!mask[n]) {\n                    let phase1 = true, phase2 = true;\n                    for (let i = 0; i < rings[n].length; i++) {\n                        let b = mol.findBond(rings[n][i], rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                        if (this.bondArom[b - 1])\n                            continue;\n                        let bo = mol.bondOrder(b);\n                        phase1 = phase1 && bo == (2 - (i & 1));\n                        phase2 = phase2 && bo == (1 + (i & 1));\n                    }\n                    if (!phase1 && !phase2)\n                        continue;\n                    for (let i = 0; i < rings[n].length; i++) {\n                        let b = mol.findBond(rings[n][i], rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                        this.bondArom[b - 1] = true;\n                    }\n                    mask[n] = true;\n                    anyChange = true;\n                }\n            if (!anyChange)\n                break;\n        }\n        for (let n = 0; n < this.bondArom.length; n++)\n            if (this.bondArom[n]) {\n                this.atomArom[mol.bondFrom(n + 1) - 1] = true;\n                this.atomArom[mol.bondTo(n + 1) - 1] = true;\n            }\n    }\n    calculateRelaxedAromaticity() {\n        let mol = this.mol;\n        this.atomArom = Vec.booleanArray(false, mol.numAtoms);\n        this.bondArom = Vec.booleanArray(false, mol.numBonds);\n        this.ensurePiAtoms();\n        const na = mol.numAtoms, nb = mol.numBonds;\n        let electrons = Vec.numberArray(0, na);\n        let exocyclic = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++) {\n            let atno = mol.atomicNumber(n);\n            electrons[n - 1] = (Chemistry.ELEMENT_BLOCKS[atno] == 2 ? Chemistry.ELEMENT_VALENCE[atno] : 0) - mol.atomCharge(n) - mol.atomHydrogens(n)\n                - mol.atomUnpaired(n);\n        }\n        for (let n = 1; n <= nb; n++) {\n            const bfr = mol.bondFrom(n), bto = mol.bondTo(n), bo = mol.bondOrder(n);\n            electrons[bfr - 1] -= bo;\n            electrons[bto - 1] -= bo;\n            if (bo == 2) {\n                const rblk1 = mol.atomRingBlock(bfr), rblk2 = mol.atomRingBlock(bto);\n                if (rblk1 > 0 && rblk1 != rblk2)\n                    exocyclic[bfr - 1] = true;\n                if (rblk2 > 0 && rblk2 != rblk1)\n                    exocyclic[bto - 1] = true;\n            }\n        }\n        let rings = [];\n        for (let rsz = 3; rsz <= 7; rsz++)\n            for (let rng of mol.findRingsOfSize(rsz)) {\n                let valid = true;\n                for (let n = 0; n < rsz; n++) {\n                    const a = rng[n];\n                    if (!this.piAtom[a - 1] && electrons[a - 1] < 2 && !exocyclic[a - 1]) {\n                        valid = false;\n                        break;\n                    }\n                    let b = mol.findBond(a, rng[n < rsz - 1 ? n + 1 : 0]);\n                    let bo = mol.bondOrder(b);\n                    if (bo != 1 && bo != 2) {\n                        valid = false;\n                        break;\n                    }\n                }\n                if (valid)\n                    rings.push(rng);\n            }\n        while (rings.length > 0) {\n            let anyChange = false;\n            for (let n = 0; n < rings.length; n++) {\n                let r = rings[n];\n                let paths = [0];\n                for (let i = 0; i < r.length; i++) {\n                    const a = r[i];\n                    const b1 = mol.findBond(a, r[i < r.length - 1 ? i + 1 : 0]);\n                    const b2 = mol.findBond(a, r[i > 0 ? i - 1 : r.length - 1]);\n                    if (this.bondArom[b1 - 1]) {\n                        for (let j = paths.length - 1; j >= 0; j--) {\n                            const e = paths[j] + 2;\n                            if (paths.indexOf(e) < 0)\n                                paths = Vec.append(paths, e);\n                        }\n                    }\n                    else if (mol.bondOrder(b1) == 2)\n                        Vec.addTo(paths, 2);\n                    else if (electrons[a - 1] >= 2 && mol.bondOrder(b1) == 1 && mol.bondOrder(b2) == 1)\n                        Vec.addTo(paths, 2);\n                }\n                let arom = false;\n                for (let e of paths) {\n                    if (e == 2 && r.length == 3) {\n                        arom = true;\n                        break;\n                    }\n                    if (e == 6) {\n                        arom = true;\n                        break;\n                    }\n                }\n                if (arom) {\n                    for (let i = 0; i < r.length; i++) {\n                        let a = r[i], b = mol.findBond(a, r[i < r.length - 1 ? i + 1 : 0]);\n                        this.atomArom[a - 1] = true;\n                        this.bondArom[b - 1] = true;\n                    }\n                    rings.splice(n, 1);\n                    n--;\n                    anyChange = true;\n                }\n            }\n            if (!anyChange)\n                break;\n        }\n    }\n    calculateStereoRubric() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        this.rubricTetra = new Array(na);\n        this.rubricSquare = new Array(na);\n        this.rubricBipy = new Array(na);\n        this.rubricOcta = new Array(na);\n        this.rubricSides = new Array(nb);\n        for (let n = 1; n <= na; n++) {\n            let blk = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(n)];\n            let adjc = mol.atomAdjCount(n), hc = mol.atomHydrogens(n);\n            let ninc = 0, ndec = 0;\n            for (let b of mol.atomAdjBonds(n)) {\n                if (mol.bondType(b) == Molecule.BONDTYPE_INCLINED && mol.bondFrom(b) == n)\n                    ninc++;\n                else if (mol.bondType(b) == Molecule.BONDTYPE_DECLINED && mol.bondFrom(b) == n)\n                    ndec++;\n            }\n            if (blk == 2 && ((adjc == 3 && hc == 1) || (adjc == 4 && hc == 0))) {\n                this.rubricTetra[n - 1] = Stereochemistry.rubricTetrahedral(mol, n);\n            }\n            else if (blk >= 3 && adjc == 4 && ninc == 1 && ndec == 1) {\n                this.rubricTetra[n - 1] = Stereochemistry.rubricTetrahedral(mol, n);\n            }\n            if (blk >= 3 && adjc == 4 && hc == 0) {\n                this.rubricSquare[n - 1] = Stereochemistry.rubricSquarePlanar(mol, n);\n            }\n            if (blk >= 3 && (adjc == 4 || adjc == 5) && hc == 0) {\n                this.rubricBipy[n - 1] = Stereochemistry.rubricBipyrimidal(mol, n);\n            }\n            if (blk >= 3 && (adjc == 5 || adjc == 6) && hc == 0) {\n                this.rubricOcta[n - 1] = Stereochemistry.rubricOctahedral(mol, n);\n            }\n            else if (blk == 2 && adjc == 6 && hc == 0) {\n                this.rubricOcta[n - 1] = Stereochemistry.rubricOctahedral(mol, n);\n            }\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondOrder(n) != 2 || mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN || this.isBondAromatic(n))\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let blk1 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bfr)];\n            let blk2 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bto)];\n            let adjc1 = mol.atomAdjCount(bfr), hc1 = mol.atomHydrogens(bfr);\n            let adjc2 = mol.atomAdjCount(bto), hc2 = mol.atomHydrogens(bto);\n            if (blk1 == 2 && blk2 == 2 && (adjc1 + hc1 == 3 && hc1 <= 1) && (adjc2 + hc2 == 3 && hc2 <= 1)) {\n                this.rubricSides[n - 1] = Stereochemistry.rubricBondSides(mol, n);\n            }\n        }\n    }\n    removeHydrogens() {\n        let mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let atomMask = Vec.booleanArray(true, na), bondMask = Vec.booleanArray(true, nb);\n        for (let n = 1; n <= na; n++)\n            if (MolUtil.boringHydrogen(mol, n)) {\n                atomMask[n - 1] = false;\n                bondMask[mol.atomAdjBonds(n)[0] - 1] = false;\n            }\n        if (Vec.allTrue(atomMask))\n            return;\n        mol = MolUtil.subgraphMask(mol, atomMask);\n        if (this.atomArom)\n            this.atomArom = Vec.maskGet(this.atomArom, atomMask);\n        if (this.bondArom)\n            this.bondArom = Vec.maskGet(this.bondArom, bondMask);\n        if (this.rubricTetra || this.rubricSquare || this.rubricBipy || this.rubricOcta || this.rubricSides) {\n            if (this.rubricTetra)\n                this.rubricTetra = Vec.maskGet(this.rubricTetra, atomMask);\n            if (this.rubricSquare)\n                this.rubricSquare = Vec.maskGet(this.rubricSquare, atomMask);\n            if (this.rubricBipy)\n                this.rubricBipy = Vec.maskGet(this.rubricBipy, atomMask);\n            if (this.rubricOcta)\n                this.rubricOcta = Vec.maskGet(this.rubricOcta, atomMask);\n            if (this.rubricSides)\n                this.rubricSides = Vec.maskGet(this.rubricSides, bondMask);\n            let atomMap = Vec.prepend(Vec.add(Vec.maskMap(atomMask), 1), 0);\n            for (let n = 0; n < Vec.len(this.rubricTetra); n++)\n                if (this.rubricTetra[n])\n                    this.rubricTetra[n] = Vec.idxGet(atomMap, this.rubricTetra[n]);\n            for (let n = 0; n < Vec.len(this.rubricSquare); n++)\n                if (this.rubricSquare[n])\n                    this.rubricSquare[n] = Vec.idxGet(atomMap, this.rubricSquare[n]);\n            for (let n = 0; n < Vec.len(this.rubricBipy); n++)\n                if (this.rubricBipy[n])\n                    this.rubricBipy[n] = Vec.idxGet(atomMap, this.rubricBipy[n]);\n            for (let n = 0; n < Vec.len(this.rubricOcta); n++)\n                if (this.rubricOcta[n])\n                    this.rubricOcta[n] = Vec.idxGet(atomMap, this.rubricOcta[n]);\n            for (let n = 0; n < Vec.len(this.rubricSides); n++)\n                if (this.rubricSides[n])\n                    this.rubricSides[n] = Vec.idxGet(atomMap, this.rubricSides[n]);\n        }\n    }\n    calculateSkeletonHash() {\n        if (MetaMolecule.skeletonHash == null)\n            throw 'Skeleton hash not available.';\n        this.hash = MetaMolecule.skeletonHash(this.mol);\n    }\n    calculateHeavyHash() {\n        let anyH = false;\n        for (let n = 1; n <= this.mol.numAtoms; n++)\n            if (this.mol.atomElement(n) == 'H') {\n                anyH = true;\n                break;\n            }\n        if (!anyH) {\n            this.heavyHash = this.getSkeletonHash();\n            return;\n        }\n        let hvy = this.mol.clone();\n        for (let n = hvy.numAtoms; n >= 1; n--)\n            if (hvy.atomElement(n) == 'H')\n                hvy.deleteAtomAndBonds(n);\n        this.heavyHash = MetaMolecule.skeletonHash(hvy);\n    }\n    isAtomAromatic(atom) {\n        return this.atomArom == null ? false : this.atomArom[atom - 1];\n    }\n    isBondAromatic(bond) {\n        return this.bondArom == null ? false : this.bondArom[bond - 1];\n    }\n    bondOrderArom(bond) {\n        return this.bondArom != null && this.bondArom[bond - 1] ? -1 : this.mol.bondOrder(bond);\n    }\n    getAtomAromaticity() {\n        return this.atomArom == null ? null : this.atomArom.slice(0);\n    }\n    getBondAromaticity() {\n        return this.bondArom == null ? null : this.bondArom.slice(0);\n    }\n    getSkeletonHash() {\n        if (this.hash == null)\n            this.calculateSkeletonHash();\n        return this.hash;\n    }\n    getHeavyHash() {\n        if (this.heavyHash == null)\n            this.calculateHeavyHash();\n        return this.heavyHash;\n    }\n    getDotPath() {\n        if (this.dots == null)\n            this.dots = new DotPath(this.mol);\n        return this.dots;\n    }\n    getUniqueElements() {\n        if (this.uniqueElements == null) {\n            this.uniqueElements = [];\n            for (let n = 1; n <= this.mol.numAtoms; n++) {\n                let el = this.mol.atomElement(n);\n                if (this.uniqueElements.indexOf(el) < 0)\n                    this.uniqueElements.push(el);\n            }\n        }\n        return this.uniqueElements;\n    }\n    equivalentTo(other, timeout = 1000) {\n        if (MetaMolecule.isomorphMatch == null)\n            throw 'Isomorph search unavailable.';\n        if (this.mol.numAtoms != other.mol.numAtoms || this.mol.numBonds != other.mol.numBonds)\n            return false;\n        if (this.hash == null)\n            this.calculateSkeletonHash();\n        if (other.hash == null)\n            other.calculateSkeletonHash();\n        if (this.hash != other.hash)\n            return false;\n        if (this.mol.compareTo(other.mol) == 0)\n            return true;\n        let uniq1 = this.getUniqueElements(), uniq2 = other.getUniqueElements();\n        for (let n = 0; n < uniq1.length; n++) {\n            if (!uniq2.includes(uniq1[n]))\n                return false;\n        }\n        return MetaMolecule.isomorphMatch(this, other, timeout);\n    }\n    static createRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    static createStrict(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStrictAromaticity();\n        return meta;\n    }\n    static createStrictRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStrictAromaticity();\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    static createRelaxed(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateRelaxedAromaticity();\n        return meta;\n    }\n    static createRelaxedRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateRelaxedAromaticity();\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    ensurePiAtoms() {\n        if (this.piAtom != null)\n            return;\n        this.piAtom = Vec.booleanArray(false, this.mol.numAtoms);\n        for (let n = 1; n <= this.mol.numBonds; n++)\n            if (this.mol.bondOrder(n) == 2) {\n                {\n                    this.piAtom[this.mol.bondFrom(n) - 1] = true;\n                    this.piAtom[this.mol.bondTo(n) - 1] = true;\n                }\n            }\n    }\n}\nMetaMolecule.skeletonHash = null;\nMetaMolecule.isomorphMatch = null;\nexport { MetaMolecule };\n//# sourceMappingURL=MetaMolecule.js.map","import { Chemistry } from '../mol/Chemistry';\nimport { MetaMolecule } from '../mol/MetaMolecule';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { Permutation, Vec } from '../util/Vec';\nlet crc_table = [];\nfunction make_crc_table() {\n    if (crc_table.length > 0)\n        return;\n    for (let n = 0; n < 256; n++) {\n        let c = n;\n        for (let i = 0; i < 8; i++)\n            if ((c & 1) != 0)\n                c = 0xEDB88320 ^ (c >>> 1);\n            else\n                c = (c >>> 1);\n        crc_table.push(c);\n    }\n}\nconst BOOT_CRC = 0xFFFFFFFF;\nfunction start_crc() { return BOOT_CRC; }\nfunction feed_crc(crc, byte) {\n    let idx = (crc ^ byte) & 0xFF;\n    return crc_table[idx] ^ (crc >>> 8);\n}\nfunction end_crc(crc) { return crc ^ BOOT_CRC; }\nclass CircularFingerprints {\n    constructor(meta, kind) {\n        this.meta = meta;\n        this.kind = kind;\n        this.hookApplyNewFP = null;\n        this.hookConsiderNewFP = null;\n        this.identity = [];\n        this.resolvedChiral = [];\n        this.atomGroup = [];\n        this.fplist = [];\n        this.amask = [];\n        this.atomAdj = [];\n        this.bondAdj = [];\n        make_crc_table();\n    }\n    calculate() {\n        let mol = this.meta.mol, na = mol.numAtoms;\n        this.identity = Vec.numberArray(0, na);\n        this.resolvedChiral = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++)\n            this.atomGroup.push([]);\n        this.amask = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++) {\n            this.amask[n] = mol.atomicNumber(n + 1) >= 2 && !MolUtil.hasAbbrev(mol, n + 1);\n            this.atomAdj.push([]);\n            this.bondAdj.push([]);\n        }\n        for (let n = 0; n < na; n++) {\n            if (!this.amask[n])\n                continue;\n            this.atomAdj[n] = mol.atomAdjList(n + 1);\n            this.bondAdj[n] = mol.atomAdjBonds(n + 1);\n            for (let i = this.atomAdj[n].length - 1; i >= 0; i--)\n                if (!this.amask[this.atomAdj[n][i] - 1]) {\n                    this.atomAdj[n].splice(i, 1);\n                    this.bondAdj[n].splice(i, 1);\n                }\n        }\n        for (let n = 0; n < na; n++)\n            if (this.amask[n]) {\n                this.identity[n] = this.initialIdentityECFP(n + 1);\n                this.atomGroup[n] = [n + 1];\n                this.applyNewFP({ hashCode: this.identity[n], iteration: 0, atoms: this.atomGroup[n], centralAtom: n + 1 });\n            }\n        let niter = this.kind;\n        for (let iter = 1; iter <= niter; iter++) {\n            let newident = Vec.numberArray(0, na);\n            for (let n = 0; n < na; n++)\n                if (this.amask[n])\n                    newident[n] = this.circularIterate(iter, n + 1);\n            this.identity = newident;\n            for (let n = 0; n < na; n++)\n                if (this.amask[n]) {\n                    this.atomGroup[n] = this.growAtoms(this.atomGroup[n]);\n                    this.considerNewFP({ hashCode: this.identity[n], iteration: iter, atoms: this.atomGroup[n], centralAtom: n + 1 });\n                }\n        }\n    }\n    static create(meta, kind) {\n        if (meta instanceof Molecule)\n            meta = MetaMolecule.createStrictRubric(meta);\n        let circ = new CircularFingerprints(meta, kind);\n        circ.calculate();\n        return circ;\n    }\n    getMolecule() { return this.meta.mol; }\n    get numFP() { return this.fplist.length; }\n    getFP(idx) { return this.fplist[idx]; }\n    getFingerprints() { return this.fplist.slice(0); }\n    getUniqueHashes() {\n        let hashes = new Set();\n        for (let fp of this.fplist)\n            hashes.add(fp.hashCode);\n        return Vec.sorted(Array.from(hashes));\n    }\n    getFoldedHashes(maxBits) {\n        let andBits = maxBits - 1;\n        let hashes = new Set();\n        for (let fp of this.fplist)\n            hashes.add(fp.hashCode & andBits);\n        return Vec.sorted(Array.from(hashes));\n    }\n    static tanimoto(hash1, hash2) {\n        let shared = 0, total = 0;\n        let sz1 = hash1.length, sz2 = hash2.length;\n        if (sz1 == 0 && sz2 == 0)\n            return 0;\n        let i1 = 0, i2 = 0;\n        while (i1 < sz1 || i2 < sz2) {\n            if (i1 == sz1) {\n                total += sz2 - i2;\n                break;\n            }\n            if (i2 == sz2) {\n                total += sz1 - i1;\n                break;\n            }\n            let v1 = hash1[i1], v2 = hash2[i2];\n            if (v1 == v2) {\n                shared += 1;\n                i1 += 1;\n                i2 += 1;\n            }\n            else if (v1 < v2)\n                i1 += 1;\n            else\n                i2 += 1;\n            total += 1;\n        }\n        return shared / total;\n    }\n    initialIdentityECFP(atom) {\n        const mol = this.meta.mol;\n        let adj = mol.atomAdjList(atom);\n        let nheavy = 0, nhydr = mol.atomHydrogens(atom);\n        for (let a of adj)\n            if (mol.atomElement(a) == 'H')\n                nhydr++;\n            else\n                nheavy++;\n        let atno = mol.atomicNumber(atom);\n        let degree = Math.max(0, Chemistry.ELEMENT_BONDING[atno] - nhydr);\n        let chg = mol.atomCharge(atom);\n        let inring = mol.atomRingBlock(atom) > 0 ? 1 : 0;\n        let crc = start_crc();\n        crc = feed_crc(crc, (nheavy << 4) | degree);\n        crc = feed_crc(crc, atno);\n        crc = feed_crc(crc, chg + 0x80);\n        crc = feed_crc(crc, (nhydr << 4) | inring);\n        return end_crc(crc);\n    }\n    circularIterate(iter, atom) {\n        let adj = this.atomAdj[atom - 1], adjb = this.bondAdj[atom - 1];\n        let seq = Vec.numberArray(0, 2 + 2 * adj.length);\n        seq[0] = iter;\n        seq[1] = this.identity[atom - 1];\n        for (let n = 0; n < adj.length; n++) {\n            seq[2 * n + 2] = this.meta.isBondAromatic(adjb[n]) ? 0xF : this.meta.mol.bondOrder(adjb[n]);\n            seq[2 * n + 3] = this.identity[adj[n] - 1];\n        }\n        let p = 0;\n        while (p < adj.length - 1) {\n            let i = 2 + 2 * p;\n            if (seq[i] > seq[i + 2] || (seq[i] == seq[i + 2] && seq[i + 1] > seq[i + 3])) {\n                Vec.swap(seq, i, i + 2);\n                Vec.swap(seq, i + 1, i + 3);\n                if (p > 0)\n                    p--;\n            }\n            else\n                p++;\n        }\n        let crc = start_crc();\n        for (let n = 0; n < seq.length; n += 2) {\n            crc = feed_crc(crc, seq[n]);\n            let v = seq[n + 1];\n            crc = feed_crc(crc, v >> 24);\n            crc = feed_crc(crc, (v >> 16) & 0xFF);\n            crc = feed_crc(crc, (v >> 8) & 0xFF);\n            crc = feed_crc(crc, v & 0xFF);\n        }\n        if (!this.resolvedChiral[atom - 1] && Vec.len(this.meta.rubricTetra) > 0 && this.meta.rubricTetra[atom - 1] != null) {\n            let ru = this.meta.rubricTetra[atom - 1];\n            let par = [\n                ru[0] == 0 ? 0 : this.identity[ru[0] - 1],\n                ru[1] == 0 ? 0 : this.identity[ru[1] - 1],\n                ru[2] == 0 ? 0 : this.identity[ru[2] - 1],\n                ru[3] == 0 ? 0 : this.identity[ru[3] - 1]\n            ];\n            if (par[0] != par[1] && par[0] != par[2] && par[0] != par[3] && par[1] != par[2] && par[1] != par[3] && par[2] != par[3]) {\n                crc = feed_crc(crc, Permutation.parityOrder(par) + 1);\n                this.resolvedChiral[atom - 1] = true;\n            }\n        }\n        return end_crc(crc);\n    }\n    growAtoms(atoms) {\n        let mask = Vec.booleanArray(false, this.meta.mol.numAtoms);\n        for (let n = 0; n < atoms.length; n++) {\n            mask[atoms[n] - 1] = true;\n            for (let a of this.atomAdj[atoms[n] - 1])\n                mask[a - 1] = true;\n        }\n        return Vec.add(Vec.maskIdx(mask), 1);\n    }\n    applyNewFP(newFP) {\n        if (this.hookConsiderNewFP)\n            this.hookConsiderNewFP(newFP);\n        if (this.hookApplyNewFP)\n            this.hookApplyNewFP(newFP);\n        this.fplist.push(newFP);\n    }\n    considerNewFP(newFP) {\n        if (this.hookConsiderNewFP)\n            this.hookConsiderNewFP(newFP);\n        let hit = -1;\n        let fp = null;\n        for (let n = 0; n < this.fplist.length; n++) {\n            let lookFP = this.fplist[n];\n            if (Vec.equals(lookFP.atoms, newFP.atoms)) {\n                fp = lookFP;\n                hit = n;\n                break;\n            }\n        }\n        if (hit < 0) {\n            this.fplist.push(newFP);\n            return;\n        }\n        if (fp.iteration < newFP.iteration || fp.hashCode < newFP.hashCode)\n            return;\n        this.fplist[hit] = newFP;\n        if (this.hookApplyNewFP)\n            this.hookApplyNewFP(newFP);\n    }\n}\nCircularFingerprints.CLASS_ECFP0 = 0;\nCircularFingerprints.CLASS_ECFP2 = 1;\nCircularFingerprints.CLASS_ECFP4 = 2;\nCircularFingerprints.CLASS_ECFP6 = 3;\nexport { CircularFingerprints };\n//# sourceMappingURL=CircularFingerprints.js.map","import { deepClone, findNode, findNodes, nodeText } from '../util/util';\nimport { XML } from '../util/XML';\nimport { DataSheet } from '../ds/DataSheet';\nimport { Molecule } from '../mol/Molecule';\nimport { MoleculeStream } from './MoleculeStream';\nexport class DataSheetStream {\n    static readXML(strXML) {\n        let xmlDoc;\n        if (XML.customParser)\n            xmlDoc = new XML.customParser().parseFromString(strXML, 'application/xml');\n        else\n            xmlDoc = new DOMParser().parseFromString(strXML, 'application/xml');\n        if (xmlDoc == null)\n            return null;\n        let root = xmlDoc.documentElement;\n        if (root == null)\n            return null;\n        let ds = new DataSheet();\n        let summary = findNode(root, 'Summary');\n        if (summary == null)\n            return null;\n        ds.title = nodeText(findNode(summary, 'Title'));\n        ds.description = nodeText(findNode(summary, 'Description'));\n        let extRoot = findNode(root, 'Extension');\n        if (extRoot != null) {\n            let extList = findNodes(extRoot, 'Ext');\n            for (let n = 0; n < extList.length; n++) {\n                let ext = extList[n];\n                ds.appendExtension(ext.getAttribute('name'), ext.getAttribute('type'), nodeText(ext));\n            }\n        }\n        let header = findNode(root, 'Header');\n        let numCols = parseInt(header.getAttribute('ncols'));\n        let colList = findNodes(header, 'Column');\n        if (colList.length != numCols)\n            return null;\n        for (let n = 0; n < numCols; n++) {\n            let col = colList[n];\n            let id = parseInt(col.getAttribute('id'));\n            if (id != n + 1)\n                return null;\n            ds.appendColumn(col.getAttribute('name'), col.getAttribute('type'), nodeText(col));\n        }\n        let rowidx = 0;\n        for (let row of findNodes(findNode(root, 'Content'), 'Row')) {\n            if (parseInt(row.getAttribute('id')) != rowidx + 1)\n                return null;\n            ds.appendRow();\n            for (let col of findNodes(row, 'Cell')) {\n                let colidx = parseInt(col.getAttribute('id')) - 1;\n                let ct = ds.colType(colidx), val = nodeText(col);\n                if (val == '') { }\n                else if (ct == \"molecule\")\n                    ds.setObject(rowidx, colidx, val);\n                else if (ct == \"string\")\n                    ds.setString(rowidx, colidx, val);\n                else if (ct == \"real\")\n                    ds.setReal(rowidx, colidx, parseFloat(val));\n                else if (ct == \"integer\")\n                    ds.setInteger(rowidx, colidx, parseInt(val));\n                else if (ct == \"boolean\")\n                    ds.setBoolean(rowidx, colidx, val == 'true' ? true : val == 'false' ? false : null);\n                else if (ct == \"extend\")\n                    ds.setExtend(rowidx, colidx, val);\n                col = col.nextElementSibling;\n                colidx++;\n            }\n            row = row.nextElementSibling;\n            rowidx++;\n        }\n        return ds;\n    }\n    static readJSON(json) {\n        if (!json.colData || !json.rowData)\n            throw 'Not a JSON-formatted datasheet.';\n        return new DataSheet(deepClone(json));\n    }\n    static writeXML(ds) {\n        let xml;\n        if (XML.customParser)\n            xml = new XML.customParser().parseFromString('<DataSheet/>', 'application/xml');\n        else\n            xml = new DOMParser().parseFromString('<DataSheet/>', 'application/xml');\n        let summary = xml.createElement('Summary');\n        xml.documentElement.appendChild(summary);\n        let title = xml.createElement('Title'), descr = xml.createElement('Description');\n        summary.appendChild(title);\n        title.appendChild(xml.createTextNode(ds.title));\n        summary.appendChild(descr);\n        descr.appendChild(xml.createCDATASection(ds.description));\n        let extension = xml.createElement('Extension');\n        xml.documentElement.appendChild(extension);\n        for (let n = 0; n < ds.numExtensions; n++) {\n            let ext = xml.createElement('Ext');\n            extension.appendChild(ext);\n            ext.setAttribute('name', ds.getExtName(n));\n            ext.setAttribute('type', ds.getExtType(n));\n            ext.appendChild(xml.createCDATASection(ds.getExtData(n)));\n        }\n        let header = xml.createElement('Header');\n        xml.documentElement.appendChild(header);\n        header.setAttribute('nrows', ds.numRows.toString());\n        header.setAttribute('ncols', ds.numCols.toString());\n        for (let n = 0; n < ds.numCols; n++) {\n            let column = xml.createElement('Column');\n            header.appendChild(column);\n            column.setAttribute('id', (n + 1).toString());\n            column.setAttribute('name', ds.colName(n));\n            column.setAttribute('type', ds.colType(n));\n            column.appendChild(xml.createTextNode(ds.colDescr(n)));\n        }\n        let content = xml.createElement('Content');\n        xml.documentElement.appendChild(content);\n        for (let r = 0; r < ds.numRows; r++) {\n            let row = xml.createElement('Row');\n            row.setAttribute('id', (r + 1).toString());\n            content.appendChild(row);\n            for (let c = 0; c < ds.numCols; c++) {\n                let cell = xml.createElement('Cell');\n                cell.setAttribute('id', (c + 1).toString());\n                row.appendChild(cell);\n                let ct = ds.colType(c);\n                let txtNode = null;\n                if (ds.isNull(r, c)) { }\n                else if (ct == \"molecule\") {\n                    let obj = ds.getObject(r, c);\n                    if (obj instanceof Molecule)\n                        obj = MoleculeStream.writeNative(obj);\n                    txtNode = xml.createCDATASection(obj);\n                }\n                else if (ct == \"string\")\n                    txtNode = xml.createCDATASection(ds.getString(r, c));\n                else if (ct == \"real\")\n                    txtNode = xml.createTextNode(ds.getReal(r, c).toString());\n                else if (ct == \"integer\")\n                    txtNode = xml.createTextNode(ds.getInteger(r, c).toString());\n                else if (ct == \"boolean\")\n                    txtNode = xml.createTextNode(ds.getBoolean(r, c).toString());\n                else if (ct == \"extend\")\n                    txtNode = xml.createCDATASection(ds.getExtend(r, c));\n                if (txtNode != null)\n                    cell.appendChild(txtNode);\n            }\n        }\n        if (XML.customSerial)\n            return new XML.customSerial().serializeToString(xml.documentElement);\n        else\n            return new XMLSerializer().serializeToString(xml.documentElement);\n    }\n    static writeJSON(ds) {\n        let data = ds.data;\n        let nrow = ds.numRows, ncol = ds.numCols;\n        let rowData = new Array(nrow);\n        for (let n = 0; n < nrow; n++)\n            rowData[n] = new Array(ncol);\n        for (let c = 0; c < ncol; c++) {\n            let doConvert = ds.colType(c) == \"molecule\";\n            for (let r = 0; r < nrow; r++) {\n                let val = data.rowData[r][c];\n                if (val != null && doConvert)\n                    val = val.toString();\n                rowData[r][c] = val;\n            }\n        }\n        let json = {\n            title: data.title,\n            description: data.description,\n            colData: deepClone(data.colData),\n            rowData: rowData,\n            extData: deepClone(data.extData),\n        };\n        return json;\n    }\n}\n//# sourceMappingURL=DataSheetStream.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CircularFingerprints } from '../calc/CircularFingerprints';\nimport { DEGRAD, escapeHTML, norm_xy } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { DataSheetStream } from '../io/DataSheetStream';\nimport { MetaMolecule } from '../mol/MetaMolecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport dsRings from '../res/data/templates/rings.ds';\nimport dsTermGrp from '../res/data/templates/termgrp.ds';\nimport dsFuncGrp from '../res/data/templates/funcgrp.ds';\nimport dsProtGrp from '../res/data/templates/protgrp.ds';\nimport dsNonPlRings from '../res/data/templates/nonplrings.ds';\nimport dsLargeRings from '../res/data/templates/largerings.ds';\nimport dsCrownEthers from '../res/data/templates/crownethers.ds';\nimport dsLigMonodent from '../res/data/templates/ligmonodent.ds';\nimport dsLigBident from '../res/data/templates/ligbident.ds';\nimport dsLigTrident from '../res/data/templates/ligtrident.ds';\nimport dsLigMultident from '../res/data/templates/ligmultident.ds';\nimport dsCageCmplx from '../res/data/templates/cagecmplx.ds';\nimport dsAminoAcids from '../res/data/templates/aminoacids.ds';\nimport dsBiomolecules from '../res/data/templates/biomolecules.ds';\nimport dsSaccharides from '../res/data/templates/saccharides.ds';\nconst TEMPLATE_SOURCE = {\n    'rings': dsRings,\n    'termgrp': dsTermGrp,\n    'funcgrp': dsFuncGrp,\n    'protgrp': dsProtGrp,\n    'nonplrings': dsNonPlRings,\n    'largerings': dsLargeRings,\n    'crownethers': dsCrownEthers,\n    'ligmonodent': dsLigMonodent,\n    'ligbident': dsLigBident,\n    'ligtrident': dsLigTrident,\n    'ligmultident': dsLigMultident,\n    'cagecmplx': dsCageCmplx,\n    'aminoacids': dsAminoAcids,\n    'biomolecules': dsBiomolecules,\n    'saccharides': dsSaccharides,\n};\nclass AbbrevContainer {\n    constructor() {\n        this.abbrevs = [];\n    }\n    static getTemplateKeys() { return Object.keys(TEMPLATE_SOURCE); }\n    static getTemplateData(key) { return TEMPLATE_SOURCE[key]; }\n    static needsSetup() { return !this.main; }\n    static setupData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.main)\n                return;\n            this.main = new AbbrevContainer();\n            for (let key of this.getTemplateKeys()) {\n                let dsstr = this.getTemplateData(key);\n                let ds = DataSheetStream.readXML(dsstr);\n                let colMol = ds.firstColOfType(\"molecule\"), colAbbrev = ds.findColByName('Abbrev', \"string\");\n                if (colMol < 0 || colAbbrev < 0)\n                    continue;\n                for (let n = 0; n < ds.numRows; n++) {\n                    let frag = ds.getMoleculeClone(n, colMol), name = ds.getString(n, colAbbrev);\n                    if (!frag || !name)\n                        continue;\n                    let attcount = 0, firstConn = 0;\n                    for (let i = 1; i <= frag.numAtoms; i++)\n                        if (frag.atomElement(i) == MolUtil.TEMPLATE_ATTACHMENT) {\n                            if (firstConn == 0)\n                                firstConn = i;\n                            frag.setAtomElement(i, MolUtil.ABBREV_ATTACHMENT);\n                            attcount++;\n                        }\n                    if (attcount != 1)\n                        continue;\n                    if (firstConn > 1)\n                        frag.swapAtoms(1, firstConn);\n                    this.main.submitAbbreviation(name, frag);\n                }\n            }\n        });\n    }\n    getAbbrevs() {\n        return this.abbrevs.slice(0);\n    }\n    submitAbbreviation(name, infrag, promote = false) {\n        let frag = infrag.clone();\n        this.submitFragment(name, frag, promote);\n    }\n    submitMolecule(inmol, promote = false) {\n        let mol = inmol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let frag = MolUtil.getAbbrev(mol, n);\n            if (!frag)\n                continue;\n            this.submitFragment(mol.atomElement(n), frag, promote);\n        }\n    }\n    substituteAbbrevName(mol, atom) {\n        let frag = MolUtil.getAbbrev(mol, atom);\n        if (!frag)\n            return false;\n        let fragExp = MolUtil.expandedAbbrevs(frag);\n        let fragMF = MolUtil.molecularFormula(fragExp);\n        let fragFP = CircularFingerprints.create(MetaMolecule.createStrictRubric(fragExp), CircularFingerprints.CLASS_ECFP6).getUniqueHashes();\n        for (let abbrev of this.abbrevs)\n            if (abbrev.frag.numAtoms == frag.numAtoms) {\n                let match = CoordUtil.sketchEquivalent(frag, abbrev.frag);\n                if (!match) {\n                    let afragExp = MolUtil.expandedAbbrevs(abbrev.frag);\n                    if (fragMF == MolUtil.molecularFormula(afragExp)) {\n                        let afragFP = CircularFingerprints.create(MetaMolecule.createStrictRubric(afragExp), CircularFingerprints.CLASS_ECFP6).getUniqueHashes();\n                        if (Vec.equals(fragFP, afragFP))\n                            match = true;\n                    }\n                }\n                if (match) {\n                    mol.setAtomElement(atom, abbrev.name);\n                    return true;\n                }\n            }\n        return false;\n    }\n    submitFragment(name, frag, promote) {\n        if (name == '?')\n            return;\n        let vx = 0, vy = 0;\n        let adj = frag.atomAdjList(1);\n        for (let a of adj) {\n            vx += frag.atomX(a) - frag.atomX(1);\n            vy += frag.atomY(a) - frag.atomY(1);\n        }\n        if (adj.length > 1) {\n            let inv = 1.0 / adj.length;\n            vx *= inv;\n            vy *= inv;\n        }\n        if (norm_xy(vx, vy) > 0.1 * 0.1) {\n            let theta = Math.atan2(vy, vx);\n            if (Math.abs(theta) > 2 * DEGRAD)\n                CoordUtil.rotateMolecule(frag, -theta);\n        }\n        let hit = -1;\n        for (let n = 0; n < this.abbrevs.length; n++) {\n            let a = this.abbrevs[n];\n            if (a.name != name)\n                continue;\n            hit = n;\n            break;\n        }\n        let [html, search] = this.formatAbbrevLabel(name);\n        let abv = { name, frag, nameHTML: html, nameSearch: search };\n        if (hit < 0) {\n            if (promote)\n                this.abbrevs.unshift(abv);\n            else\n                this.abbrevs.push(abv);\n        }\n        else {\n            if (promote && hit > 0) {\n                this.abbrevs.splice(hit, 1);\n                this.abbrevs.unshift(abv);\n            }\n            else\n                this.abbrevs[hit] = abv;\n        }\n    }\n    formatAbbrevLabel(name) {\n        let html = '', search = '';\n        let append = (bit, tag) => {\n            if (tag)\n                html += '<' + tag + '>';\n            html += escapeHTML(bit);\n            search += bit;\n            if (tag)\n                html += '</' + tag + '>';\n        };\n        for (let bit of name.split('|')) {\n            while (true) {\n                let match = bit.match(/^(.*?)\\{(.*?)\\}(.*)$/);\n                if (!match)\n                    break;\n                let pre = match[1], mid = match[2], post = match[3];\n                append(pre, null);\n                if (mid.startsWith('^'))\n                    append(mid.substring(1), 'sup');\n                else\n                    append(mid, 'sub');\n                bit = post;\n            }\n            append(bit, null);\n        }\n        return [html, search.toLowerCase()];\n    }\n}\nAbbrevContainer.main = null;\nexport { AbbrevContainer };\n//# sourceMappingURL=AbbrevContainer.js.map","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Small Rings</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"24\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template Name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation Code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,3)\\nC=1.7500,-6.1500;0,0,i2\\nC=2.5000,-7.4490;0,0,i2\\nC=1.0000,-7.4490;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclopropane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,4)\\nC=3.6500,-0.9500;0,0,i2\\nC=3.6500,-2.4500;0,0,i2\\nC=5.1500,-2.4500;0,0,i2\\nC=5.1500,-0.9500;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclobutane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=0.7500,2.3100;0,0,i2\\nC=-0.4600,1.4300;0,0,i2\\nC=0.0000,0.0000;0,0,i2\\nC=1.9600,1.4300;0,0,i2\\nC=1.5000,0.0000;0,0,i2\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclopentane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=4.3700,-7.8550;0,0,i2\\nC=3.6200,-10.1650;0,0,i1\\nC=3.1600,-8.7350;0,0,i1\\nC=5.5800,-8.7350;0,0,i1\\nC=5.1200,-10.1650;0,0,i1\\n2-3=2,0\\n3-1=1,0\\n1-4=1,0\\n4-5=2,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclopentadiene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=3.9490,-2.3000;0,0,i2\\nC=2.6500,-3.0500;0,0,i2\\nC=2.6500,-4.5500;0,0,i2\\nC=3.9490,-5.3000;0,0,i2\\nC=5.2481,-4.5500;0,0,i2\\nC=5.2481,-3.0500;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclohexane1]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[Cy]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=1.5000,-3.6500;0,0,i2\\nC=2.7990,-3.2500;0,0,i2\\nC=2.2500,-2.3510;0,0,i2\\nC=4.0981,-4.0000;0,0,i2\\nC=3.5490,-3.1010;0,0,i2\\nC=4.8481,-2.3510;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclohexane2]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=-0.2500,-2.1490;0,0,i2\\nC=0.6000,-1.2500;0,0,i2\\nC=2.1500,-1.2500;0,0,i2\\nC=3.0000,-2.1490;0,0,i2\\nC=2.2500,-0.4990;0,0,i2\\nC=0.4500,-0.4990;0,0,i2\\n1-2=1,0\\n3-2=1,0\\n3-4=1,0\\n4-5=1,0\\n1-6=1,0\\n6-5=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclohexane3]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=6.1000,0.2500;0,0,i1\\nC=4.8010,-0.5000;0,0,i1\\nC=7.3990,-0.5000;0,0,i1\\nC=4.8010,-2.0000;0,0,i1\\nC=6.1000,-2.7500;0,0,i1\\nC=7.3990,-2.0000;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[benzene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[Ph]]></Cell>\\n  </Row>\\n  <Row id=\\\"9\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nC=0.7400,3.2800;0,0,i2\\nC=0.0000,0.0000;0,0,i2\\nC=-0.9400,1.1700;0,0,i2\\nC=-0.6100,2.6300;0,0,i2\\nC=2.0900,2.6300;0,0,i2\\nC=2.4200,1.1700;0,0,i2\\nC=1.4800,0.0000;0,0,i2\\n3-2=1,0\\n3-4=1,0\\n4-1=1,0\\n5-1=1,0\\n5-6=1,0\\n6-7=1,0\\n7-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cycloheptane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"10\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nC=0.0000,3.6200;0,0,i2\\nC=0.0000,0.0000;0,0,i2\\nC=-1.0600,1.0600;0,0,i2\\nC=-1.0600,2.5600;0,0,i2\\nC=1.5000,3.6200;0,0,i2\\nC=2.5600,2.5600;0,0,i2\\nC=2.5600,1.0600;0,0,i2\\nC=1.5000,0.0000;0,0,i2\\n2-3=1,0\\n3-4=1,0\\n4-1=1,0\\n1-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclooctane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"11\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nC=1.2510,-1.4500;0,0,i1\\nC=-0.0481,-2.2000;0,0,i1\\nC=2.5500,-2.2000;0,0,i0\\nC=-0.0481,-3.7000;0,0,i1\\nC=1.2510,-4.4500;0,0,i1\\nC=2.5500,-3.7000;0,0,i0\\nC=3.9713,-1.7306;0,0,i2\\nC=4.8537,-2.9389;0,0,i2\\nC=3.9779,-4.1593;0,0,i2\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-6=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[dihydroindene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"12\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,11)\\nC=2.5990,-2.5500;0,0,i1\\nC=1.3000,-3.3000;0,0,i1\\nC=1.3000,-4.8000;0,0,i1\\nC=2.5990,-5.5500;0,0,i1\\nC=3.8981,-4.8000;0,0,i0\\nC=3.8981,-3.3000;0,0,i0\\nC=5.1971,-2.5500;0,0,i1\\nC=5.1971,-5.5500;0,0,i1\\nC=6.4962,-4.8000;0,0,i1\\nC=6.4962,-3.3000;0,0,i1\\n2-3=2,0\\n2-1=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=2,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[napthalene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"13\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,15)\\nC=-0.1824,-4.7254;0,0,i1\\nC=-1.2065,-5.8214;0,0,i1\\nC=1.2788,-5.0643;0,0,i0\\nC=-0.7693,-7.2563;0,0,i1\\nC=0.6919,-7.5952;0,0,i1\\nC=1.7160,-6.4992;0,0,i0\\nC=2.5017,-4.2011;0,0,i2\\nC=3.6979,-5.0997;0,0,i0\\nC=3.2158,-6.5224;0,0,i0\\nC=5.1689,-4.8063;0,0,i1\\nC=6.1585,-5.9336;0,0,i1\\nC=4.2061,-7.6477;0,0,i1\\nC=5.6772,-7.3542;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-6=1,0\\n10-11=1,0\\n10-8=2,0\\n9-12=2,0\\n12-13=1,0\\n13-11=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[fluoroscene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"14\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,16)\\nC=2.5990,-2.5500;0,0,i1\\nC=1.3000,-3.3000;0,0,i1\\nC=1.3000,-4.8000;0,0,i1\\nC=2.5990,-5.5500;0,0,i1\\nC=3.8981,-4.8000;0,0,i0\\nC=3.8981,-3.3000;0,0,i0\\nC=5.1971,-2.5500;0,0,i1\\nC=5.1971,-5.5500;0,0,i1\\nC=6.4962,-4.8000;0,0,i0\\nC=6.4962,-3.3000;0,0,i0\\nC=7.7952,-2.5500;0,0,i1\\nC=7.7952,-5.5500;0,0,i1\\nC=9.0943,-4.8000;0,0,i1\\nC=9.0943,-3.3000;0,0,i1\\n2-3=1,0\\n2-1=2,0\\n3-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-1=1,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n10-11=1,0\\n9-12=1,0\\n12-13=2,0\\n13-14=1,0\\n14-11=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[anthracene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"15\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,16)\\nC=5.4911,-0.2789;0,0,i1\\nC=4.7411,-1.5780;0,0,i1\\nC=6.9910,-0.2789;0,0,i1\\nC=5.4910,-2.8770;0,0,i1\\nC=6.9911,-2.8770;0,0,i0\\nC=7.7411,-1.5780;0,0,i0\\nC=9.2410,-1.5780;0,0,i0\\nC=7.7410,-4.1760;0,0,i1\\nC=9.2411,-4.1761;0,0,i1\\nC=9.9911,-2.8770;0,0,i0\\nC=9.9910,-0.2789;0,0,i1\\nC=11.4911,-2.8770;0,0,i1\\nC=12.2411,-1.5780;0,0,i1\\nC=11.4911,-0.2790;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n7-11=1,0\\n10-12=1,0\\n12-13=2,0\\n13-14=1,0\\n14-11=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[phenanthrene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"16\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nN=3.3300,-1.7050;0,0,i1\\nC=2.5800,-4.0150;0,0,i2\\nC=2.1200,-2.5850;0,0,i2\\nC=4.5400,-2.5850;0,0,i2\\nC=4.0800,-4.0150;0,0,i2\\n2-3=1,0\\n3-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[pyrrolidine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"17\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=1.3200,-2.2350;0,0,i2\\nC=1.7800,-3.6650;0,0,i2\\nO=2.5300,-1.3550;0,0,i0\\nC=3.7400,-2.2350;0,0,i2\\nC=3.2800,-3.6650;0,0,i2\\n2-1=1,0\\n1-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[tetrahydrofuran]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"18\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=1.3200,-2.2350;0,0,i1\\nC=1.7800,-3.6650;0,0,i1\\nO=2.5300,-1.3550;0,0,i0\\nC=3.7400,-2.2350;0,0,i1\\nC=3.2800,-3.6650;0,0,i1\\n2-1=2,0\\n1-3=1,0\\n3-4=1,0\\n4-5=2,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[furan]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"19\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=1.3200,-2.2350;0,0,i1\\nC=1.7800,-3.6650;0,0,i1\\nS=2.5300,-1.3550;0,0,i0\\nC=3.7400,-2.2350;0,0,i1\\nC=3.2800,-3.6650;0,0,i1\\n2-1=2,0\\n1-3=1,0\\n3-4=1,0\\n4-5=2,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[thiofuran]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"20\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=1.6000,-3.0000;0,0,i1\\nN=2.8990,-2.2500;0,0,i0\\nC=4.1981,-3.0000;0,0,i1\\nC=1.6000,-4.5000;0,0,i1\\nC=2.8990,-5.2500;0,0,i1\\nC=4.1981,-4.5000;0,0,i1\\n2-1=1,0\\n2-3=2,0\\n1-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[pyridine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"21\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=0.7019,-2.1000;0,0,i2\\nC=0.7019,-3.6000;0,0,i2\\nO=2.0009,-1.3500;0,0,i0\\nO=2.0009,-4.3500;0,0,i0\\nC=3.3000,-3.6000;0,0,i2\\nC=3.3000,-2.1000;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[dioxane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"22\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=2.1519,-2.1000;0,0,i2\\nC=2.1519,-3.6000;0,0,i2\\nO=3.4509,-1.3500;0,0,i0\\nN=3.4509,-4.3500;0,0,i1\\nC=4.7500,-3.6000;0,0,i2\\nC=4.7500,-2.1000;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[morpholine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"23\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nN=2.6490,-2.3000;0,0,i1\\nC=1.3500,-3.0500;0,0,i2\\nC=1.3500,-4.5500;0,0,i2\\nC=2.6490,-5.3000;0,0,i2\\nC=3.9481,-4.5500;0,0,i2\\nC=3.9481,-3.0500;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[piperidine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"24\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=1.3500,-3.0500;0,0,i2\\nC=1.3500,-4.5500;0,0,i2\\nO=2.6490,-2.3000;0,0,i0\\nC=2.6490,-5.3000;0,0,i2\\nC=3.9481,-4.5500;0,0,i2\\nC=3.9481,-3.0500;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[pyran]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<DataSheet><Summary><Title>Terminal Groups</Title><Description><![CDATA[]]></Description></Summary><Extension/><Header nrows=\\\"11\\\" ncols=\\\"3\\\"><Column id=\\\"1\\\" name=\\\"Molecule\\\" type=\\\"molecule\\\">Molecular structure</Column><Column id=\\\"2\\\" name=\\\"Name\\\" type=\\\"string\\\">Template name</Column><Column id=\\\"3\\\" name=\\\"Abbrev\\\" type=\\\"string\\\">Optional abbreviation</Column></Header><Content><Row id=\\\"1\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-0.6500,-1.4000;0,0,i0\\nC=0.6490,-0.6500;0,0,i2\\nC=1.9481,-1.4000;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[ethyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Et]]></Cell></Row><Row id=\\\"2\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-5.1000,3.4000;0,0,i2\\nC=-3.8010,4.1500;0,0,i2\\nC=-2.5019,3.4000;0,0,i3\\nX=-6.3990,4.1500;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[n-propyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Pr]]></Cell></Row><Row id=\\\"3\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-4.9450,2.0214;0,0,i1\\nC=-4.1950,3.3204;0,0,i3\\nC=-4.1950,0.7224;0,0,i3\\nX=-6.4450,2.0214;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[i-propyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[{^i}Pr]]></Cell></Row><Row id=\\\"4\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=-4.6500,2.9000;0,0,i2\\nC=-3.3510,3.6500;0,0,i2\\nC=-2.0519,2.9000;0,0,i2\\nC=-0.7529,3.6500;0,0,i3\\nX=-5.9490,3.6500;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[n-butyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Bu]]></Cell></Row><Row id=\\\"5\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=-3.2000,0.9000;0,0,i0\\nC=-3.2000,2.4000;0,0,i3\\nC=-3.2000,-0.6000;0,0,i3\\nC=-1.7000,0.9000;0,0,i3\\nX=-4.7000,0.9000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[t-butyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[{^t}Bu]]></Cell></Row><Row id=\\\"6\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-7.4188,-4.7944;0,0,i0\\nO=-6.1198,-4.0444;0,0,i0\\nC=-4.8207,-4.7944;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[methoxy]]></Cell><Cell id=\\\"3\\\"><![CDATA[O|Me]]></Cell></Row><Row id=\\\"7\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nX=-7.4188,-4.7944;0,0,i0\\nO=-6.1198,-4.0444;0,0,i0\\nC=-4.8207,-4.7944;0,0,i2\\nC=-3.5217,-4.0444;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[ethoxy]]></Cell><Cell id=\\\"3\\\"><![CDATA[O|Et]]></Cell></Row><Row id=\\\"8\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nX=-6.5500,1.6000;0,0,i0\\nC=-5.0500,1.6000;0,0,i0\\nC=-4.3000,2.8990;0,0,i1\\nC=-2.8000,2.8990;0,0,i1\\nC=-4.3000,0.3010;0,0,i1\\nC=-2.8000,0.3010;0,0,i1\\nC=-2.0500,1.6000;0,0,i1\\n1-2=1,0\\n3-2=1,0\\n3-4=2,0\\n2-5=2,0\\n5-6=1,0\\n6-7=2,0\\n7-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[phenyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Ph]]></Cell></Row><Row id=\\\"9\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nX=-6.5500,1.6000;0,0,i0\\nC=-5.0500,1.6000;0,0,i1\\nC=-4.3000,2.8990;0,0,i2\\nC=-2.8000,2.8990;0,0,i2\\nC=-4.3000,0.3010;0,0,i2\\nC=-2.8000,0.3010;0,0,i2\\nC=-2.0500,1.6000;0,0,i2\\n1-2=1,0\\n3-2=1,0\\n3-4=1,0\\n2-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[cyclopentyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Cy]]></Cell></Row><Row id=\\\"10\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nX=0.0500,2.9500;0,0,i0\\nC=1.3490,3.7000;0,0,i2\\nC=2.6481,2.9500;0,0,i0\\nC=2.6481,1.4500;0,0,i1\\nC=3.9471,3.7000;0,0,i1\\nC=3.9471,0.7000;0,0,i1\\nC=5.2461,1.4500;0,0,i1\\nC=5.2461,2.9500;0,0,i1\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n3-5=2,0\\n4-6=2,0\\n6-7=1,0\\n7-8=2,0\\n8-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[benzyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Bz]]></Cell></Row><Row id=\\\"11\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,10)\\nX=-1.6000,1.6571;0,0,i0\\nC=-0.1000,1.6571;0,0,i0\\nC=0.6500,0.3581;0,0,i0\\nC=0.6500,2.9561;0,0,i0\\nC=2.1500,0.3581;0,0,i1\\nC=2.9000,1.6571;0,0,i0\\nC=2.1500,2.9561;0,0,i1\\nC=-0.1000,4.2551;0,0,i3\\nC=4.4000,1.6571;0,0,i3\\nC=-0.1000,-0.9409;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n2-4=2,0\\n3-5=2,0\\n5-6=1,0\\n6-7=2,0\\n7-4=1,0\\n4-8=1,0\\n6-9=1,0\\n3-10=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[mesityl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Mes]]></Cell></Row></Content></DataSheet>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Functional Groups</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"18\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nN=-6.6000,4.4000;1,0,i0\\nO=-5.8500,5.6990;0,0,i0\\nO=-5.8500,3.1010;-1,0,i0\\nX=-8.1000,4.4000;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[nitro]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[N|O{2}]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nO=-7.0500,1.9510;0,0,i1\\nX=-9.3000,3.2500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[carboxyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O{2}|H]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nO=-7.0500,1.9510;0,0,i0\\nX=-9.3000,3.2500;0,0,i0\\nC=-5.5500,1.9510;0,0,i3\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[methyl carboxylate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O{2}|Me]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nO=-7.0500,1.9510;0,0,i0\\nX=-9.3000,3.2500;0,0,i0\\nC=-5.5500,1.9510;0,0,i2\\nC=-4.8000,0.6520;0,0,i3\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n5-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ethyl carboxylate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O{2}|Et]]></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nN=-7.0500,1.9510;0,0,i2\\nX=-9.3000,3.2500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[amide]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O|NH{2}]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nC=-7.0500,1.9510;0,0,i3\\nX=-9.3000,3.2500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ac]]></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nO=-8.0010,2.5000;0,0,i0\\nC=-6.7019,3.2500;0,0,i0\\nX=-9.3000,3.2500;0,0,i0\\nC=-5.4029,2.5000;0,0,i3\\nO=-6.7019,4.7500;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n2-5=2,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetoxy]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[O|Ac]]></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-5.9500,5.0500;0,0,i0\\nC=-4.4500,5.0500;0,0,i0\\nN=-2.9500,5.0500;0,0,i0\\n1-2=1,0\\n2-3=3,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyano]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|N]]></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=0.0000,0.0000;0,0,i0\\nF=0.0000,1.5000;0,0,i0\\nF=-0.0000,-1.5000;0,0,i0\\nF=1.5000,-0.0000;0,0,i0\\nX=-1.5000,0.0000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[trifluoromethyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|F{3}]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nO=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nF=3.0000,0.0000;0,0,i0\\nF=1.5000,-1.5000;0,0,i0\\nF=1.5000,1.5000;0,0,i0\\nX=-0.7500,1.2990;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n2-4=1,0\\n2-5=1,0\\n1-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[trifluoromethoxy]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[O|CF{3}]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nP=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i1\\nO=0.2500,0.8500;0,0,i1\\nX=-2.7500,0.8500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phosphoric]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[P|O{3}|H{2}]]></Cell>\\n</Row>\\n<Row id=\\\"12\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nO=-2.7500,0.8500;0,0,i0\\nP=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i1\\nO=0.2500,0.8500;0,0,i1\\nX=-3.5000,2.1490;0,0,i0\\n2-3=2,0\\n2-4=1,0\\n2-5=1,0\\n2-1=1,0\\n1-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phosphoric]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[P|O{4}|H{2}]]></Cell>\\n</Row>\\n<Row id=\\\"13\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nS=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i0\\nX=-2.7500,0.8500;0,0,i0\\n1-2=2,0\\n1-3=2,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[sulphonyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[S|O{2}|H]]></Cell>\\n</Row>\\n<Row id=\\\"14\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nS=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i0\\nO=0.2500,0.8500;0,0,i1\\nX=-2.7500,0.8500;0,0,i0\\n1-2=2,0\\n1-3=2,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[sulphonic]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[S|O{3}|H]]></Cell>\\n</Row>\\n<Row id=\\\"15\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nO=-2.7500,0.8500;0,0,i0\\nS=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i0\\nO=0.2500,0.8500;0,0,i1\\nX=-3.5000,2.1490;0,0,i0\\n2-3=2,0\\n2-4=2,0\\n2-5=1,0\\n2-1=1,0\\n1-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[sulphonic]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[S|O{4}|H]]></Cell>\\n</Row>\\n<Row id=\\\"16\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nX=0.0000,0.0000;0,0,i0\\nSi=1.5000,0.0000;0,0,i0\\nC=3.0000,0.0000;0,0,i3\\nC=1.5000,-1.5000;0,0,i3\\nC=1.5000,1.5000;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n2-4=1,0\\n2-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[trimethylsilane]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[TMS]]></Cell>\\n</Row>\\n<Row id=\\\"17\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,22)\\nC=5.6600,-2.2950;0,0,i1\\nC=4.6100,-3.9050;0,0,i1\\nC=4.1500,-2.6750;0,0,i1\\nC=7.1700,-2.6750;0,0,i1\\nC=6.7100,-3.9050;0,0,i1\\nC=5.6300,-0.5870;0,0,i1\\nC=4.5800,0.7230;0,0,i1\\nC=4.1200,-0.2070;0,0,i0\\nC=7.1400,-0.2070;0,0,i1\\nC=6.6800,0.7230;0,0,i1\\nFe=5.6700,-1.6610;0,0,i0\\nX=2.6200,-0.2137;0,0,i0\\n2-3=2,0\\n3-1=1,0\\n1-4=1,0\\n4-5=2,0\\n5-2=1,0\\n7-8=2,0\\n8-6=1,0\\n6-9=1,0\\n9-10=2,0\\n10-7=1,0\\n11-6=1,0\\n11-1=1,0\\n3-11=0,0\\n4-11=0,0\\n2-11=0,0\\n5-11=0,0\\n8-11=0,0\\n9-11=0,0\\n10-11=0,0\\n7-11=0,0\\n9-9=1,0\\n8-12=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ferrocenyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Fc]]></Cell>\\n</Row>\\n<Row id=\\\"18\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,15)\\nX=-1.8965,0.7175;0,0,i0\\nFe=0.1000,0.7175;0,0,i0\\nC=0.3931,1.7515;0,0,i1\\nC=1.7233,2.7758;0,0,i1\\nC=1.9501,1.7633;0,0,i1\\nC=-0.9841,2.4781;0,0,i1\\nC=-0.3171,3.2728;0,0,i1\\nC=0.1000,-0.7825;0,0,e0\\nO=0.1000,-2.2825;0,0,i0\\nC=1.5289,-0.1075;0,0,e0\\nO=2.8280,-0.8575;0,0,i0\\n1-2=1,0\\n4-5=2,0\\n5-3=1,0\\n3-6=1,0\\n6-7=2,0\\n7-4=1,0\\n2-3=1,0\\n5-2=0,0\\n6-2=0,0\\n7-2=0,0\\n4-2=0,0\\n2-8=0,0\\n8-9=2,0\\n2-10=0,0\\n10-11=2,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[bis(carbonyl)cyclopentadienyl iron]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Fp]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Functional Groups</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"11\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nX=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nO=2.2500,1.2990;0,0,i0\\nO=2.2500,-1.2990;0,0,i0\\nC=3.7500,1.2990;0,0,i0\\nC=5.2500,1.2990;0,0,i3\\nC=3.7500,2.7990;0,0,i3\\nC=3.7500,-0.2010;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n2-4=2,0\\n3-5=1,0\\n5-6=1,0\\n5-7=1,0\\n5-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Boc]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,11)\\nS=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nO=-0.0000,1.5000;0,0,i0\\nO=0.0000,-1.5000;0,0,i0\\nC=2.2500,-1.2990;0,0,i1\\nC=3.7500,-1.2990;0,0,i1\\nC=4.5000,-0.0000;0,0,i0\\nC=3.7500,1.2990;0,0,i1\\nC=2.2500,1.2990;0,0,i1\\nC=6.0000,-0.0000;0,0,i3\\n1-2=1,0\\n1-3=1,0\\n1-4=2,0\\n1-5=2,0\\n2-6=2,0\\n6-7=1,0\\n7-8=2,0\\n8-9=1,0\\n9-10=2,0\\n10-2=1,0\\n8-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Tos]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nS=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nO=-0.0000,1.5000;0,0,i0\\nO=0.0000,-1.5000;0,0,i0\\nF=3.0000,-0.0000;0,0,i0\\nF=1.5000,1.5000;0,0,i0\\nF=1.5000,-1.5000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=2,0\\n1-5=2,0\\n2-6=1,0\\n2-7=1,0\\n2-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Tf]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nSi=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nPh=-0.0000,1.5000;0,0,i0,aSketchEl!(7\\\\002C7)\\\\000A*\\\\003D-6.5500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-5.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.3000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-4.3000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci1\\\\000A1-2\\\\003D1\\\\002C0\\\\000A3-2\\\\003D1\\\\002C0\\\\000A3-4\\\\003D2\\\\002C0\\\\000A2-5\\\\003D2\\\\002C0\\\\000A5-6\\\\003D1\\\\002C0\\\\000A6-7\\\\003D2\\\\002C0\\\\000A7-4\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\nPh=0.0000,-1.5000;0,0,i0,aSketchEl!(7\\\\002C7)\\\\000A*\\\\003D-6.5500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-5.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.3000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-4.3000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci1\\\\000A1-2\\\\003D1\\\\002C0\\\\000A3-2\\\\003D1\\\\002C0\\\\000A3-4\\\\003D2\\\\002C0\\\\000A2-5\\\\003D2\\\\002C0\\\\000A5-6\\\\003D1\\\\002C0\\\\000A6-7\\\\003D2\\\\002C0\\\\000A7-4\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\nC=3.0000,-0.0000;0,0,i3\\nC=1.5000,1.5000;0,0,i3\\nC=1.5000,-1.5000;0,0,i3\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n2-6=1,0\\n2-7=1,0\\n2-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[TBDPS]]></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nSi=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nC=-0.0000,1.5000;0,0,i3\\nC=0.0000,-1.5000;0,0,i3\\nC=3.0000,-0.0000;0,0,i3\\nC=1.5000,1.5000;0,0,i3\\nC=1.5000,-1.5000;0,0,i3\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n2-6=1,0\\n2-7=1,0\\n2-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[TBDMS]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nX=1.0000,0.0000;0,0,i0\\nO=1.8817,-1.2135;0,0,i0\\nC=3.3083,-0.7500;0,0,i2\\nC=3.3083,0.7500;0,0,i2\\nO=1.8817,1.2135;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nX=0.0000,0.0000;0,0,i0\\nO=0.7500,-1.2990;0,0,i0\\nC=2.2500,-1.2990;0,0,i2\\nC=3.0000,0.0000;0,0,i2\\nC=2.2500,1.2990;0,0,i2\\nO=0.7500,1.2990;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[1,3-dioxane]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nX=0.0000,0.0000;0,0,i0\\nS=0.7500,-1.2990;0,0,i0\\nC=2.2500,-1.2990;0,0,i2\\nC=3.0000,0.0000;0,0,i2\\nC=2.2500,1.2990;0,0,i2\\nS=0.7500,1.2990;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[1,3-dithiane]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,6)\\nX=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nO=2.2500,1.2990;0,0,i0\\nC=2.2500,-1.2990;0,0,i0\\nC=3.0000,-2.5981;0,0,i3\\nC=3.5490,-0.5490;0,0,i3\\nC=0.9510,-2.0490;0,0,i3\\n1-2=1,0\\n2-3=2,0\\n2-4=1,0\\n4-5=1,0\\n4-6=1,0\\n4-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Piv]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,11)\\nC=8.5563,4.7294;0,0,i1\\nC=9.8554,3.9794;0,0,i1\\nC=9.8554,2.4794;0,0,i1\\nC=8.5563,1.7294;0,0,i1\\nC=7.2573,2.4794;0,0,i1\\nC=7.2573,3.9794;0,0,i0\\nC=5.9582,4.7294;0,0,i2\\nO=4.6592,3.9794;0,0,i0\\nC=3.3602,4.7294;0,0,i0\\nX=2.0611,3.9794;0,0,i0\\nO=3.3602,6.2294;0,0,i0\\n1-2=2,0\\n2-3=1,0\\n3-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-1=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n9-11=2,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cbz]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,20)\\nC=7.2573,3.9794;0,0,i1\\nC=5.9582,4.7294;0,0,i2\\nO=4.6592,3.9794;0,0,i0\\nC=3.3602,4.7294;0,0,i0\\nX=2.0611,3.9794;0,0,i0\\nO=3.3602,6.2294;0,0,i0\\nC=7.4141,2.4876;0,0,i0\\nC=8.8814,2.1758;0,0,i0\\nC=9.6313,3.4748;0,0,i0\\nC=8.6276,4.5895;0,0,i0\\nC=11.0985,3.7867;0,0,i1\\nC=11.5620,5.2133;0,0,i1\\nC=10.5583,6.3280;0,0,i1\\nC=9.0911,6.0161;0,0,i1\\nC=6.4105,1.3729;0,0,i1\\nC=6.8740,-0.0537;0,0,i1\\nC=8.3412,-0.3655;0,0,i1\\nC=9.3449,0.7492;0,0,i1\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n4-6=2,0\\n1-7=1,0\\n7-8=2,0\\n8-9=1,0\\n9-10=2,0\\n10-1=1,0\\n9-11=1,0\\n11-12=2,0\\n12-13=1,0\\n13-14=2,0\\n14-10=1,0\\n7-15=1,0\\n15-16=2,0\\n16-17=1,0\\n17-18=2,0\\n18-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[FMOC]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Non-planar Rings</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"12\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,7)\\nC=-6.0428,5.1152;0,0,i1\\nC=-5.8360,7.2412;0,0,i2\\nC=-4.9821,6.1759;0,0,i1\\nC=-3.5332,5.7877;0,0,i2\\nC=-4.3230,4.4890;0,0,i2\\nC=-7.3398,5.1300;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-5=1,0\\n5-4=1,0\\n1-6=1,0\\n3-6=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[5-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,8)\\nC=-6.1000,5.0000;0,0,i2\\nC=-4.8010,5.7500;0,0,i1\\nC=-6.1000,3.5000;0,0,i2\\nC=-4.8010,4.2500;0,0,i1\\nC=-3.5019,5.0000;0,0,i2\\nC=-3.5019,3.5000;0,0,i2\\nC=-4.0510,6.8490;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n6-5=1,0\\n4-7=1,0\\n2-7=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[6-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,9)\\nC=-6.1000,5.0000;0,0,i2\\nC=-4.8010,5.7500;0,0,i1\\nC=-6.1000,3.5000;0,0,i2\\nC=-4.8010,4.2500;0,0,i1\\nC=-3.5019,5.0000;0,0,i2\\nC=-3.5019,3.5000;0,0,i2\\nC=-4.5010,6.7990;0,0,i2\\nC=-3.8510,5.7490;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n6-5=1,0\\n2-7=1,0\\n4-8=1,0\\n7-8=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[6-bridge-2]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,9)\\nC=-6.1177,3.0660;0,0,i2\\nC=-5.3677,4.3650;0,0,i1\\nC=-5.3677,1.7670;0,0,i2\\nC=-4.6177,3.0660;0,0,i1\\nC=-3.4177,4.2651;0,0,i2\\nC=-3.6177,3.0660;0,0,i2\\nC=-5.2677,5.6918;0,0,i2\\nC=-2.3186,2.3160;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n4-7=1,0\\n2-7=1,0\\n6-8=1,0\\n8-5=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[7-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nC=-6.1177,3.0660;0,0,i2\\nC=-5.3677,4.3650;0,0,i1\\nC=-5.3677,1.7670;0,0,i2\\nC=-4.6177,3.0660;0,0,i1\\nC=-3.4177,4.2651;0,0,i2\\nC=-3.6177,3.0660;0,0,i2\\nC=-5.6177,5.8418;0,0,i2\\nC=-2.3186,2.3160;0,0,i2\\nC=-4.9000,5.5000;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n2-7=1,0\\n6-8=1,0\\n8-5=1,0\\n4-9=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[7-bridge-2]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nC=-2.7481,2.7510;0,0,i2\\nC=-1.4491,3.1510;0,0,i2\\nC=-1.9981,4.0500;0,0,i2\\nC=-0.1500,2.4010;0,0,i1\\nC=-0.6991,3.3000;0,0,i1\\nC=0.6000,4.0500;0,0,i2\\nC=-0.4491,1.1500;0,0,i2\\nC=0.3078,0.9726;0,0,i2\\nC=-1.1922,-0.1265;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n5-7=1,0\\n4-8=1,0\\n8-9=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[6-bridge-3]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,11)\\nC=-2.8297,-3.0097;0,0,i2\\nC=-2.5266,-1.6847;0,0,i2\\nC=-3.5797,-1.7107;0,0,i2\\nC=-1.2275,-0.9347;0,0,i1\\nC=-2.2806,-0.9607;0,0,i1\\nC=-2.2806,0.5394;0,0,i2\\nC=-0.2937,-1.8192;0,0,i2\\nC=0.4384,-1.1524;0,0,i2\\nC=0.4402,-3.1010;0,0,i2\\nC=1.1902,-1.8019;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n5-7=1,0\\n4-8=1,0\\n7-9=1,0\\n9-10=1,0\\n10-8=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[7-bridge-3]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,11)\\nC=-5.9491,0.8000;0,0,i2\\nC=-7.2481,0.0500;0,0,i2\\nC=-7.2481,-1.4500;0,0,i2\\nC=-5.9491,-2.2000;0,0,i2\\nC=-4.6500,-1.4500;0,0,i1\\nC=-4.6500,0.0500;0,0,i1\\nC=-3.2287,0.5194;0,0,i2\\nC=-2.3463,-0.6889;0,0,i2\\nC=-3.2221,-1.9093;0,0,i2\\nC=-3.9000,1.3490;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-5=1,0\\n6-10=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[9-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"9\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,12)\\nC=-4.9010,5.1000;0,0,i2\\nC=-6.2000,4.3500;0,0,i2\\nC=-6.2000,2.8500;0,0,i2\\nC=-4.9010,2.1000;0,0,i2\\nC=-3.6019,2.8500;0,0,i1\\nC=-3.6019,4.3500;0,0,i1\\nC=-2.3029,5.1000;0,0,i2\\nC=-2.3029,2.1000;0,0,i2\\nC=-1.0038,2.8500;0,0,i2\\nC=-1.0038,4.3500;0,0,i2\\nC=-2.8519,5.6490;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n6-7=1,0\\n5-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-7=1,0\\n6-11=1,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[10-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"10\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,13)\\nC=-5.1991,3.1000;0,0,i2\\nC=-6.4981,2.3500;0,0,i2\\nC=-6.4981,0.8500;0,0,i2\\nC=-5.1991,0.1000;0,0,i2\\nC=-3.9000,0.8500;0,0,i1\\nC=-3.9000,2.3500;0,0,i1\\nC=-2.7265,3.2785;0,0,i2\\nC=-2.7252,-0.0840;0,0,i2\\nC=-1.2664,2.9421;0,0,i2\\nC=-0.6227,1.5908;0,0,i2\\nC=-1.2816,0.2423;0,0,i2\\nC=-4.6500,3.6490;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n5-8=1,0\\n6-7=1,0\\n9-7=1,0\\n9-10=1,0\\n10-11=1,0\\n11-8=1,0\\n6-12=1,0\\n5-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[11-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"11\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,12)\\nC=-4.3500,3.6500;0,0,i1\\nC=-4.3500,2.1500;0,0,i1\\nC=-2.8500,2.1500;0,0,i1\\nC=-2.8500,3.6500;0,0,i1\\nC=-3.5510,4.2000;0,0,i1\\nC=-2.0510,4.2000;0,0,i1\\nC=-2.0510,2.7000;0,0,i1\\nC=-3.5510,2.7000;0,0,i1\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-4=1,0\\n1-5=1,0\\n4-6=1,0\\n3-7=1,0\\n2-8=1,0\\n8-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cubane]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"12\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,12)\\nC=-5.1000,-1.5490;0,0,i2\\nC=-3.8010,-1.1490;0,0,i1\\nC=-4.3500,-0.2500;0,0,i1\\nC=-2.5019,-1.8990;0,0,i2\\nC=-3.0510,-1.0000;0,0,i2\\nC=-1.7519,-0.2500;0,0,i1\\nC=-4.3500,1.2500;0,0,i2\\nC=-3.8010,0.3510;0,0,i2\\nC=-1.7519,1.2500;0,0,i2\\nC=-3.0510,2.0000;0,0,i1\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n3-7=1,0\\n2-8=1,0\\n6-9=1,0\\n7-10=1,0\\n9-10=1,0\\n8-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[adamantane]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Large Rings</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"11\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=2.0428,-18.6516;0,0,i2\\nC=1.7880,-17.1633;0,0,i2\\nC=2.5387,-15.8790;0,0,i2\\nC=3.1939,-19.6177;0,0,i2\\nC=4.7060,-19.6177;0,0,i2\\nC=5.8535,-18.6576;0,0,i2\\nC=6.1088,-17.1863;0,0,i2\\nC=3.9528,-15.3740;0,0,i2\\nC=5.3645,-15.8923;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n1-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n8-3=1,0\\n8-9=1,0\\n9-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-9]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,10)\\nC=-3.5491,5.1000;0,0,i2\\nC=-4.8481,4.3500;0,0,i2\\nC=-4.8481,2.8500;0,0,i2\\nC=-3.5491,2.1000;0,0,i2\\nC=-2.2500,2.8500;0,0,i2\\nC=-2.2500,4.3500;0,0,i2\\nC=-0.9509,2.1000;0,0,i2\\nC=0.3481,2.8500;0,0,i2\\nC=0.3481,4.3500;0,0,i2\\nC=-0.9509,5.1000;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n8-9=1,0\\n8-7=1,0\\n9-10=1,0\\n10-6=1,0\\n5-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-10]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,11)\\nC=-7.7858,2.5448;0,0,i2\\nC=-7.8013,1.1000;0,0,i2\\nC=-6.4244,0.8579;0,0,i2\\nC=-5.3288,-0.5811;0,0,i2\\nC=-4.3565,0.8361;0,0,i2\\nC=-2.9104,1.0882;0,0,i2\\nC=-2.8964,2.5470;0,0,i2\\nC=-4.2864,2.8806;0,0,i2\\nC=-4.6033,4.2815;0,0,i2\\nC=-6.0450,4.2766;0,0,i2\\nC=-6.3710,2.8699;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-1=1,0\\n4-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-11]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.1614,6.9975;0,0,i2\\nC=2.4604,6.2475;0,0,i2\\nC=-0.1376,6.2475;0,0,i2\\nC=-0.1376,4.7475;0,0,i2\\nC=-1.4367,3.9975;0,0,i2\\nC=-1.4367,2.4975;0,0,i2\\nC=-0.1376,1.7475;0,0,i2\\nC=1.1614,2.4975;0,0,i2\\nC=2.4604,1.7475;0,0,i2\\nC=3.7595,2.4975;0,0,i2\\nC=3.7595,3.9975;0,0,i2\\nC=2.4604,4.7475;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n12-2=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-12]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=0.2503,-1.0236;0,0,i2\\nC=1.7491,-1.0236;0,0,i2\\nC=2.0788,0.4428;0,0,i2\\nC=3.5325,0.7862;0,0,i2\\nC=3.5274,2.2829;0,0,i2\\nC=2.0508,2.6151;0,0,i2\\nC=1.7054,4.0671;0,0,i2\\nC=0.1996,4.0655;0,0,i2\\nC=-0.1373,2.6137;0,0,i2\\nC=-1.5850,2.2710;0,0,i2\\nC=-1.5640,0.7758;0,0,i2\\nC=-0.0938,0.4547;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n12-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-12]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,13)\\nC=-9.0085,1.2181;0,0,i2\\nC=-8.4085,2.6671;0,0,i2\\nC=-6.9085,2.6671;0,0,i2\\nC=-6.3085,1.2181;0,0,i2\\nC=-4.8595,0.6181;0,0,i2\\nC=-4.8595,-0.8819;0,0,i2\\nC=-6.3085,-1.4819;0,0,i2\\nC=-9.0085,-1.4819;0,0,i2\\nC=-10.4575,-0.8819;0,0,i2\\nC=-10.4575,0.6181;0,0,i2\\nC=-9.0085,-2.9819;0,0,i2\\nC=-6.3085,-2.9819;0,0,i2\\nC=-7.7095,-3.7319;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n8-9=1,0\\n9-10=1,0\\n10-1=1,0\\n8-11=1,0\\n7-12=1,0\\n11-13=1,0\\n13-12=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-13]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,14)\\nC=6.9101,-5.9857;0,0,i2\\nC=7.5101,-4.5367;0,0,i2\\nC=9.0101,-4.5367;0,0,i2\\nC=9.6101,-5.9857;0,0,i2\\nC=9.6101,-8.6857;0,0,i2\\nC=9.0101,-10.1347;0,0,i2\\nC=7.5101,-10.1347;0,0,i2\\nC=6.9101,-8.6857;0,0,i2\\nC=5.4101,-5.9857;0,0,i2\\nC=5.4101,-8.6857;0,0,i2\\nC=11.1101,-8.6857;0,0,i2\\nC=11.1101,-5.9857;0,0,i2\\nC=11.8601,-7.3867;0,0,i2\\nC=4.6601,-7.2847;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n1-9=1,0\\n8-10=1,0\\n5-11=1,0\\n4-12=1,0\\n11-13=1,0\\n13-12=1,0\\n9-14=1,0\\n14-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-14]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,15)\\nC=22.1615,-1.5864;0,0,i2\\nC=23.3877,-0.7311;0,0,i2\\nC=20.9592,-0.7218;0,0,i2\\nC=22.9828,0.6878;0,0,i2\\nC=19.7379,-1.5763;0,0,i2\\nC=24.1796,1.5700;0,0,i2\\nC=18.5357,-0.7167;0,0,i2\\nC=23.7246,3.0381;0,0,i2\\nC=18.9534,0.7033;0,0,i2\\nC=22.2021,3.0764;0,0,i2\\nC=17.7398,1.6155;0,0,i2\\nC=21.7384,4.5021;0,0,i2\\nC=18.2148,3.0479;0,0,i2\\nC=20.2213,4.5021;0,0,i2\\nC=19.7018,3.0711;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-15=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-15]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,16)\\nC=-2.3295,-6.3508;0,0,i2\\nC=-2.3295,-7.8765;0,0,i2\\nC=-1.0175,-8.6353;0,0,i2\\nC=0.3099,-7.8765;0,0,i2\\nC=2.9416,-6.3508;0,0,i2\\nC=2.9416,-7.8765;0,0,i2\\nC=1.6218,-8.6353;0,0,i2\\nC=-1.0150,-4.2041;0,0,i2\\nC=0.2910,-3.4545;0,0,i2\\nC=1.6173,-4.2041;0,0,i2\\nC=-2.3088,-3.4429;0,0,i2\\nC=-3.6056,-4.1961;0,0,i2\\nC=-3.6212,-5.5973;0,0,i2\\nC=2.9184,-3.4366;0,0,i2\\nC=4.2222,-4.1763;0,0,i2\\nC=4.2483,-5.5976;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-4=1,0\\n8-9=1,0\\n9-10=1,0\\n11-12=1,0\\n8-11=1,0\\n1-13=1,0\\n12-13=1,0\\n14-15=1,0\\n10-14=1,0\\n5-16=1,0\\n15-16=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-16]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,18)\\nC=14.0401,-6.5516;0,0,i2\\nC=14.7839,-7.8398;0,0,i2\\nC=13.8355,-9.0080;0,0,i2\\nC=14.6732,-10.2249;0,0,i2\\nC=13.8569,-11.4861;0,0,i2\\nC=12.3571,-11.2554;0,0,i2\\nC=11.7609,-12.6417;0,0,i2\\nC=10.2552,-12.6811;0,0,i2\\nC=9.6255,-11.3345;0,0,i2\\nC=8.1419,-11.5631;0,0,i2\\nC=7.3964,-10.2751;0,0,i2\\nC=8.3448,-9.1199;0,0,i2\\nC=7.5032,-7.8976;0,0,i2\\nC=8.3106,-6.6466;0,0,i2\\nC=9.8063,-6.8716;0,0,i2\\nC=10.4049,-5.4658;0,0,i2\\nC=11.9207,-5.4290;0,0,i2\\nC=12.5403,-6.7723;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n3-4=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n7-8=1,0\\n12-13=1,0\\n13-14=1,0\\n14-15=1,0\\n11-12=1,0\\n16-17=1,0\\n17-18=1,0\\n15-16=1,0\\n1-18=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-18]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(20,20)\\nC=23.0039,-8.7037;0,0,i2\\nC=21.6788,-9.4637;0,0,i2\\nC=21.6617,-10.9743;0,0,i2\\nC=22.9767,-11.7478;0,0,i2\\nC=24.2738,-14.0464;0,0,i2\\nC=22.9667,-13.2731;0,0,i2\\nC=28.1300,-11.8325;0,0,i2\\nC=28.1300,-13.3322;0,0,i2\\nC=26.8927,-14.0616;0,0,i2\\nC=28.1261,-8.8196;0,0,i2\\nC=29.4195,-9.5784;0,0,i2\\nC=29.4306,-11.0859;0,0,i2\\nC=26.8898,-15.5611;0,0,i2\\nC=25.5812,-16.3118;0,0,i2\\nC=24.2488,-15.5459;0,0,i2\\nC=25.5520,-7.2815;0,0,i2\\nC=26.8533,-6.5619;0,0,i2\\nC=28.1325,-7.3250;0,0,i2\\nC=24.2475,-6.5288;0,0,i2\\nC=22.9549,-7.2639;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-4=1,0\\n7-8=1,0\\n8-9=1,0\\n10-11=1,0\\n7-12=1,0\\n11-12=1,0\\n13-14=1,0\\n9-13=1,0\\n5-15=1,0\\n15-14=1,0\\n16-17=1,0\\n10-18=1,0\\n17-18=1,0\\n19-20=1,0\\n16-19=1,0\\n20-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-20]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Crown Ethers</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"10\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nO=-3.3500,6.9000;0,0,i0\\nC=-2.7500,8.3490;0,0,i2\\nC=-1.2500,8.3490;0,0,i2\\nO=-0.6500,6.9000;0,0,i0\\nC=0.7990,6.3000;0,0,i2\\nC=0.7990,4.8000;0,0,i2\\nO=-0.6500,4.2000;0,0,i0\\nC=-1.2500,2.7510;0,0,i2\\nC=-2.7500,2.7510;0,0,i2\\nO=-3.3500,4.2000;0,0,i0\\nC=-4.7990,4.8000;0,0,i2\\nC=-4.7990,6.3000;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n12-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[12-crown-4]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,13)\\nO=-9.0085,1.2181;0,0,i0\\nC=-8.4085,2.6671;0,0,i2\\nC=-6.9085,2.6671;0,0,i2\\nO=-6.3085,1.2181;0,0,i0\\nC=-4.8595,0.6181;0,0,i2\\nC=-4.8595,-0.8819;0,0,i2\\nO=-6.3085,-1.4819;0,0,i0\\nO=-9.0085,-1.4819;0,0,i0\\nC=-10.4575,-0.8819;0,0,i2\\nC=-10.4575,0.6181;0,0,i2\\nC=-9.0085,-2.9819;0,0,i2\\nC=-6.3085,-2.9819;0,0,i2\\nC=-7.7095,-3.7319;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n8-9=1,0\\n9-10=1,0\\n10-1=1,0\\n8-11=1,0\\n7-12=1,0\\n11-13=1,0\\n13-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[13-crown-4]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,14)\\nO=6.9101,-5.9857;0,0,i0\\nC=7.5101,-4.5367;0,0,i2\\nC=9.0101,-4.5367;0,0,i2\\nO=9.6101,-5.9857;0,0,i0\\nO=9.6101,-8.6857;0,0,i0\\nC=9.0101,-10.1347;0,0,i2\\nC=7.5101,-10.1347;0,0,i2\\nO=6.9101,-8.6857;0,0,i0\\nC=5.4101,-5.9857;0,0,i2\\nC=5.4101,-8.6857;0,0,i2\\nC=11.1101,-8.6857;0,0,i2\\nC=11.1101,-5.9857;0,0,i2\\nC=11.8601,-7.3867;0,0,i2\\nC=4.6601,-7.2847;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n1-9=1,0\\n8-10=1,0\\n5-11=1,0\\n4-12=1,0\\n11-13=1,0\\n13-12=1,0\\n9-14=1,0\\n14-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[14-crown-4]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,15)\\nC=22.1615,-1.5864;0,0,i2\\nC=23.3877,-0.7311;0,0,i2\\nO=20.9592,-0.7218;0,0,i0\\nO=22.9828,0.6878;0,0,i0\\nC=19.7379,-1.5763;0,0,i2\\nC=24.1796,1.5700;0,0,i2\\nC=18.5357,-0.7167;0,0,i2\\nC=23.7246,3.0381;0,0,i2\\nO=18.9534,0.7033;0,0,i0\\nO=22.2021,3.0764;0,0,i0\\nC=17.7398,1.6155;0,0,i2\\nC=21.7384,4.5021;0,0,i2\\nC=18.2148,3.0479;0,0,i2\\nC=20.2213,4.5021;0,0,i2\\nO=19.7018,3.0711;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-15=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[15-crown-5]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,16)\\nC=-3.2703,-7.3624;0,0,i2\\nC=-4.4642,-6.4905;0,0,i2\\nO=-3.7283,-8.7862;0,0,i0\\nO=-5.6803,-7.3450;0,0,i0\\nC=-2.5315,-9.6420;0,0,i2\\nC=-6.8842,-6.4872;0,0,i2\\nC=-2.8996,-11.0971;0,0,i2\\nC=-8.0816,-7.3361;0,0,i2\\nO=-4.4208,-11.4135;0,0,i0\\nO=-7.6748,-8.7819;0,0,i0\\nC=-4.4492,-12.9087;0,0,i2\\nC=-8.9100,-9.5864;0,0,i2\\nC=-5.8087,-13.6602;0,0,i2\\nC=-8.6136,-11.0608;0,0,i2\\nC=-7.1438,-12.8902;0,0,i2\\nO=-7.1341,-11.4135;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-16=1,0\\n15-16=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[16-crown-5]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(17,17)\\nC=11.3913,-8.5218;0,0,i2\\nO=9.9653,-8.8821;0,0,i0\\nC=8.6597,-11.0126;0,0,i2\\nO=7.4967,-10.0548;0,0,i0\\nC=6.3270,-10.9800;0,0,i2\\nC=5.0002,-10.3582;0,0,i2\\nO=4.9982,-8.8783;0,0,i0\\nC=3.5605,-8.5538;0,0,i2\\nC=3.2430,-7.1220;0,0,i2\\nC=4.4248,-6.1867;0,0,i2\\nO=5.8590,-6.7660;0,0,i0\\nC=6.6561,-5.4870;0,0,i2\\nC=8.2017,-5.4870;0,0,i2\\nO=9.0164,-6.7596;0,0,i0\\nC=10.4452,-6.1465;0,0,i2\\nC=11.6565,-7.0603;0,0,i2\\nC=9.9960,-10.3691;0,0,i2\\n5-6=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n6-7=1,0\\n11-12=1,0\\n12-13=1,0\\n13-14=1,0\\n10-11=1,0\\n15-16=1,0\\n14-15=1,0\\n16-1=1,0\\n2-17=1,0\\n17-3=1,0\\n1-2=1,0\\n3-4=1,0\\n4-5=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[17-crown-5]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,18)\\nC=25.7638,-7.1614;0,0,i2\\nC=25.0080,-8.4698;0,0,i2\\nO=23.5267,-8.2690;0,0,i0\\nC=22.8858,-9.6176;0,0,i2\\nC=21.3709,-9.5699;0,0,i2\\nO=20.7705,-8.1782;0,0,i0\\nC=19.2614,-8.3591;0,0,i2\\nC=18.4799,-7.0636;0,0,i2\\nO=19.3514,-5.8621;0,0,i0\\nC=18.4463,-4.6854;0,0,i2\\nC=19.2046,-3.3933;0,0,i2\\nO=20.6839,-3.5899;0,0,i0\\nC=21.3018,-2.2555;0,0,i2\\nC=22.7925,-2.2628;0,0,i2\\nO=23.3883,-3.6550;0,0,i0\\nC=24.8877,-3.4674;0,0,i2\\nC=25.6817,-4.7676;0,0,i2\\nO=24.8469,-5.9802;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n3-4=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n7-8=1,0\\n12-13=1,0\\n13-14=1,0\\n14-15=1,0\\n11-12=1,0\\n16-17=1,0\\n17-18=1,0\\n15-16=1,0\\n1-18=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[18-crown-6]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(20,20)\\nC=-3.4089,-21.0677;0,0,i2\\nC=-4.1767,-22.3338;0,0,i2\\nC=-4.1760,-19.7823;0,0,i2\\nO=-5.6753,-22.3687;0,0,i0\\nO=-5.6837,-19.8385;0,0,i0\\nC=-5.9548,-23.7442;0,0,i2\\nC=-5.9813,-18.3858;0,0,i2\\nC=-7.3810,-24.2230;0,0,i2\\nC=-7.4086,-17.9180;0,0,i2\\nO=-8.5195,-23.2256;0,0,i0\\nO=-8.5335,-18.9110;0,0,i0\\nC=-9.6750,-17.9220;0,0,i2\\nC=-11.0728,-23.7403;0,0,i2\\nC=-11.1043,-18.4009;0,0,i2\\nO=-11.3732,-22.3272;0,0,i0\\nO=-11.3858,-19.8551;0,0,i0\\nC=-12.8889,-22.3529;0,0,i2\\nC=-12.9024,-19.8027;0,0,i2\\nC=-13.6729,-21.0850;0,0,i2\\nC=-9.6554,-24.2077;0,0,i2\\n1-2=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n11-12=1,0\\n13-15=1,0\\n14-16=1,0\\n15-17=1,0\\n16-18=1,0\\n17-19=1,0\\n18-19=1,0\\n12-14=1,0\\n13-20=1,0\\n10-20=1,0\\n3-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[20-crown-6]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"9\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(21,21)\\nC=5.3181,-17.4804;0,0,i2\\nC=3.8183,-17.4647;0,0,i2\\nO=3.1475,-18.8055;0,0,i0\\nC=1.6753,-18.4404;0,0,i2\\nC=0.7284,-19.5857;0,0,i2\\nO=1.3610,-20.9456;0,0,i0\\nC=0.1741,-21.8748;0,0,i2\\nC=0.5101,-23.3287;0,0,i2\\nO=1.9785,-23.6452;0,0,i0\\nC=1.9855,-25.1429;0,0,i2\\nC=3.3325,-25.7906;0,0,i2\\nO=4.5146,-24.8501;0,0,i0\\nC=5.6870,-25.8137;0,0,i2\\nC=7.0359,-25.1826;0,0,i2\\nC=8.3693,-19.6515;0,0,i2\\nC=7.4283,-18.4879;0,0,i2\\nO=5.9620,-18.8325;0,0,i0\\nO=7.0819,-23.6850;0,0,i0\\nO=7.7239,-20.9997;0,0,i0\\nC=8.5502,-23.3847;0,0,i2\\nC=8.9031,-21.9421;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n3-4=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n7-8=1,0\\n12-13=1,0\\n13-14=1,0\\n11-12=1,0\\n15-16=1,0\\n16-17=1,0\\n1-17=1,0\\n14-18=1,0\\n19-15=1,0\\n18-20=1,0\\n19-21=1,0\\n20-21=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[21-crown-7]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"10\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(24,24)\\nC=20.7446,-27.4663;0,0,i2\\nO=21.4914,-26.1584;0,0,i0\\nC=19.2274,-27.4663;0,0,i2\\nC=22.9335,-26.6476;0,0,i2\\nO=18.5013,-26.1469;0,0,i0\\nC=24.0269,-25.6099;0,0,i2\\nC=17.0704,-26.6026;0,0,i2\\nO=23.6289,-24.1676;0,0,i0\\nC=15.9870,-25.5356;0,0,i2\\nC=24.9576,-23.4669;0,0,i2\\nO=16.4266,-24.0844;0,0,i0\\nC=24.9616,-21.9609;0,0,i2\\nC=15.1053,-23.3507;0,0,i2\\nO=23.6462,-21.2624;0,0,i0\\nC=15.1453,-21.8561;0,0,i2\\nC=24.0717,-19.8181;0,0,i2\\nO=16.4802,-21.1978;0,0,i0\\nC=22.9846,-18.8108;0,0,i2\\nC=16.0898,-19.7657;0,0,i2\\nO=21.5453,-19.2991;0,0,i0\\nC=17.1862,-18.7823;0,0,i2\\nC=20.8284,-18.0103;0,0,i2\\nO=18.5947,-19.2887;0,0,i0\\nC=19.3270,-18.0074;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-16=1,0\\n15-17=1,0\\n16-18=1,0\\n17-19=1,0\\n18-20=1,0\\n19-21=1,0\\n20-22=1,0\\n21-23=1,0\\n22-24=1,0\\n23-24=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[24-crown-8]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<DataSheet><Summary><Title>Monodentate Ligands</Title><Description><![CDATA[]]></Description></Summary><Extension/><Header nrows=\\\"10\\\" ncols=\\\"3\\\"><Column id=\\\"1\\\" name=\\\"Molecule\\\" type=\\\"molecule\\\">Molecular structure</Column><Column id=\\\"2\\\" name=\\\"Name\\\" type=\\\"string\\\">Template name</Column><Column id=\\\"3\\\" name=\\\"Abbrev\\\" type=\\\"string\\\">Optional abbreviation</Column></Header><Content><Row id=\\\"1\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(20,22)\\nP=0.0000,0.0000;0,0,i0\\nC=0.0000,2.0000;0,0,i0\\nC=2.0000,-0.0000;0,0,i0\\nC=-0.0000,-2.0000;0,0,i0\\nC=-1.2990,2.7500;0,0,i1\\nC=1.2990,2.7500;0,0,i1\\nC=-1.2990,4.2500;0,0,i1\\nC=0.0000,5.0000;0,0,i1\\nC=1.2990,4.2500;0,0,i1\\nC=2.7500,1.2990;0,0,i1\\nC=2.7500,-1.2990;0,0,i1\\nC=4.2500,1.2990;0,0,i1\\nC=5.0000,-0.0000;0,0,i1\\nC=4.2500,-1.2990;0,0,i1\\nC=1.2990,-2.7500;0,0,i1\\nC=-1.2990,-2.7500;0,0,i1\\nC=1.2990,-4.2500;0,0,i1\\nC=-0.0000,-5.0000;0,0,i1\\nC=-1.2990,-4.2500;0,0,i1\\nX=-2.0000,0.0000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n2-5=1,0\\n2-6=2,0\\n5-7=2,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n3-10=1,0\\n3-11=2,0\\n10-12=2,0\\n12-13=1,0\\n13-14=2,0\\n14-11=1,0\\n4-15=1,0\\n4-16=2,0\\n15-17=2,0\\n17-18=1,0\\n18-19=2,0\\n19-16=1,0\\n1-20=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[triphenylphosphine]]></Cell><Cell id=\\\"3\\\"><![CDATA[P|Ph{3}]]></Cell></Row><Row id=\\\"2\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nP=0.0000,0.0000;0,0,i0\\nC=0.0000,1.5000;0,0,i3\\nC=1.5000,-0.0000;0,0,i3\\nC=-0.0000,-1.5000;0,0,i3\\nX=-1.5000,0.0000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[trimethylphosphine]]></Cell><Cell id=\\\"3\\\"><![CDATA[P|Me{3}]]></Cell></Row><Row id=\\\"3\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nX=-2.7000,3.9500;0,0,i0\\nC=-1.2000,3.9500;0,0,i0\\nN=-0.3200,2.7400;0,0,i0\\nC=1.1100,3.2000;0,0,i1\\nN=-0.3200,5.1600;0,0,i0\\nC=1.1100,4.7000;0,0,i1\\nC=-0.7853,6.5860;0,0,i3\\nC=-0.7853,1.3140;0,0,i3\\n1-2=2,0\\n4-3=1,0\\n3-2=1,0\\n2-5=1,0\\n5-6=1,0\\n6-4=2,0\\n5-7=1,0\\n3-8=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[imidazolidine]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"4\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-0.9000,0.3500;0,0,i0\\nC=0.6000,0.3500;0,0,e0\\nO=2.1000,0.3500;0,0,i0\\n1-2=0,0\\n2-3=2,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[carbonyl]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"5\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nX=-2.4000,1.9714;0,0,i0\\nO=-0.9000,1.9714;0,0,i0\\nC=-0.1500,3.2705;0,0,i2\\nC=1.3500,3.2705;0,0,i3\\nC=-0.1500,0.6724;0,0,i2\\nC=1.3500,0.6724;0,0,i3\\n1-2=0,0\\n2-3=1,0\\n3-4=1,0\\n2-5=1,0\\n5-6=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[diethylether]]></Cell><Cell id=\\\"3\\\"><![CDATA[O|Et{2}]]></Cell></Row><Row id=\\\"6\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nX=-2.4000,1.9714;0,0,i0\\nO=-0.9000,1.9714;0,0,i0\\nC=-0.0200,0.7614;0,0,i2\\nC=1.4100,1.2214;0,0,i2\\nC=-0.0200,3.1814;0,0,i2\\nC=1.4100,2.7214;0,0,i2\\n1-2=0,0\\n4-3=1,0\\n3-2=1,0\\n2-5=1,0\\n5-6=1,0\\n6-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[tetrahydrofuran]]></Cell><Cell id=\\\"3\\\"><![CDATA[THF]]></Cell></Row><Row id=\\\"7\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,6)\\nX=-1.0000,-0.9143;0,0,i0\\nO=0.5000,-0.9143;0,0,i0\\nC=2.0000,-0.9143;0,0,i0\\nN=2.7500,-2.2133;0,0,i0\\nC=4.2500,-2.2133;0,0,i3\\nC=2.0000,-3.5124;0,0,i3\\nH=2.7500,0.3848;0,0,i0\\n1-2=0,0\\n2-3=2,0\\n3-4=1,0\\n4-5=1,0\\n4-6=1,0\\n3-7=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[dimethylformamide]]></Cell><Cell id=\\\"3\\\"><![CDATA[DMF]]></Cell></Row><Row id=\\\"8\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nX=-1.0000,-0.9143;0,0,i0\\nO=0.5000,-0.9143;0,0,i0\\nS=2.0000,-0.9143;0,0,i0\\nC=2.7500,-2.2133;0,0,i3\\nC=2.7500,0.3848;0,0,i3\\n1-2=0,0\\n2-3=2,0\\n3-4=1,0\\n3-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[dimethylsulfoxide]]></Cell><Cell id=\\\"3\\\"><![CDATA[DMSO]]></Cell></Row><Row id=\\\"9\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nC=6.8500,0.0490;0,0,i1\\nC=5.3500,0.0490;0,0,i1\\nC=7.6000,-1.2500;0,0,i1\\nN=4.6000,-1.2500;0,0,i0\\nC=5.3500,-2.5490;0,0,i1\\nC=6.8500,-2.5490;0,0,i1\\nX=3.1000,-1.2500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n4-7=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[pyridine]]></Cell><Cell id=\\\"3\\\"><![CDATA[Py]]></Cell></Row><Row id=\\\"10\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(22,24)\\nX=0.0000,-0.1997;0,0,i0\\nC=0.0000,1.9965;0,2,i0\\nN=1.2135,2.8782;0,0,i0\\nC=0.7500,4.3048;0,0,i1\\nC=-0.7500,4.3048;0,0,i1\\nN=-1.2135,2.8782;0,0,i0\\nC=-2.7135,2.8782;0,0,i0\\nC=2.7135,2.8782;0,0,i0\\nC=-3.4635,4.1772;0,0,i0\\nC=-4.9635,4.1772;0,0,i1\\nC=-5.7135,2.8782;0,0,i1\\nC=-4.9635,1.5791;0,0,i1\\nC=-3.4635,1.5791;0,0,i0\\nC=3.4635,1.5791;0,0,i0\\nC=4.9635,1.5791;0,0,i1\\nC=5.7135,2.8782;0,0,i1\\nC=4.9635,4.1772;0,0,i1\\nC=3.4635,4.1772;0,0,i0\\n{^i}Pr=-2.7135,0.2801;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n{^i}Pr=2.7135,0.2801;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n{^i}Pr=2.7135,5.4763;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n{^i}Pr=-2.7135,5.4763;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n1-2=0,0\\n2-3=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-2=1,0\\n6-7=1,0\\n3-8=1,0\\n7-9=2,0\\n9-10=1,0\\n10-11=2,0\\n11-12=1,0\\n12-13=2,0\\n13-7=1,0\\n8-14=2,0\\n14-15=1,0\\n15-16=2,0\\n16-17=1,0\\n17-18=2,0\\n18-8=1,0\\n13-19=1,0\\n14-20=1,0\\n18-21=1,0\\n9-22=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[IPr]]></Cell><Cell id=\\\"3\\\"/></Row></Content></DataSheet>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Bidentate Ligands</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"11\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,15)\\nC=2.7915,1.5000;0,0,i1\\nC=4.0905,0.7500;0,0,i1\\nC=1.4925,0.7500;0,0,i1\\nC=4.0905,-0.7500;0,0,i1\\nC=2.7915,-1.5000;0,0,i0\\nN=1.4925,-0.7500;0,0,i0\\nC=2.7915,-3.0000;0,0,i0\\nC=4.0905,-3.7500;0,0,i1\\nN=1.4925,-3.7500;0,0,i0\\nC=4.0905,-5.2500;0,0,i1\\nC=2.7915,-6.0000;0,0,i1\\nC=1.4925,-5.2500;0,0,i1\\nX=-1.1000,-2.2500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n13-9=0,0\\n13-6=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[bipyridine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[bipy]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,15)\\nC=2.7915,1.5000;0,0,i1\\nC=4.0905,0.7500;0,0,i1\\nC=1.4925,0.7500;0,0,i1\\nC=4.0905,-0.7500;0,0,i1\\nC=2.7915,-1.5000;0,0,i0\\nN=1.4925,-0.7500;0,0,i0\\nC=2.7915,-3.0000;0,0,i0\\nC=4.0905,-3.7500;0,0,i1\\nC=1.4925,-3.7500;0,0,i0\\nC=4.0905,-5.2500;0,0,i1\\nC=2.7915,-6.0000;0,0,i1\\nC=1.4925,-5.2500;0,0,i1\\nX=-1.1000,-2.2500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n13-9=1,0\\n13-6=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phenylpyridine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[phpy]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nX=-0.8000,3.2500;0,0,i0\\nO=-0.0500,1.9510;0,0,i0,xRESPATH:1:1\\nC=1.4500,1.9510;0,0,i0,xRESPATH:1:2\\nC=2.2000,3.2499;0,0,i1,xRESPATH:1:3\\nC=1.4500,4.5491;0,0,i0,xRESPATH:1:4\\nO=-0.0500,4.5491;0,0,i0,xRESPATH:1:5\\nC=2.2001,5.8481;0,0,i3\\nC=2.1999,0.6519;0,0,i3\\n2-3=2,0\\n2-1=0,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=1,0\\n5-7=1,0\\n3-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetylacetonate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[acac]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nX=-3.2985,-1.8750;0,0,i0\\nC=0.4506,-1.8500;0,0,i3\\nC=-1.0494,-1.8500;0,0,i0,xRESPATH:1:2\\nO=-1.7995,-3.1491;0,0,i0,xRESPATH:1:1\\nO=-1.7994,-0.5509;0,0,i0,xRESPATH:1:3\\n2-3=1,0\\n3-4=2,0\\n3-5=1,0\\n5-1=1,0\\n4-1=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetate]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,18)\\nC=2.7915,1.5000;0,0,i1\\nC=4.0905,0.7500;0,0,i1\\nC=1.4925,0.7500;0,0,i1\\nC=4.0905,-0.7500;0,0,i0\\nC=2.7915,-1.5000;0,0,i0\\nN=1.4925,-0.7500;0,0,i0\\nC=2.7915,-3.0000;0,0,i0\\nC=4.0905,-3.7500;0,0,i0\\nN=1.4925,-3.7500;0,0,i0\\nC=4.0905,-5.2500;0,0,i1\\nC=2.7915,-6.0000;0,0,i1\\nC=1.4925,-5.2500;0,0,i1\\nX=-1.1000,-2.2500;0,0,i0\\nC=5.3896,-3.0000;0,0,i1\\nC=5.3896,-1.5000;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n13-9=0,0\\n13-6=0,0\\n8-14=1,0\\n14-15=2,0\\n15-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phenanthroline]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[phen]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nX=-1.6500,0.6500;0,0,i0\\nN=0.1300,-0.5600;0,0,i2\\nC=1.5600,-0.1000;0,0,i2\\nN=0.1300,1.8600;0,0,i2\\nC=1.5600,1.4000;0,0,i2\\n3-2=1,0\\n2-1=0,0\\n1-4=0,0\\n4-5=1,0\\n5-3=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ethylenediamine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[en]]></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,14)\\nC=4.1514,2.1507;0,0,i1\\nC=2.8524,2.9007;0,0,i1\\nC=1.5534,2.1507;0,0,i1\\nN=1.5534,0.6507;0,0,i0\\nC=2.8524,-0.0993;0,0,i0\\nC=4.1515,0.6507;0,0,i0\\nC=5.4505,-0.0993;0,0,i1\\nC=2.8524,-1.5993;0,0,i0\\nC=4.1515,-2.3494;0,0,i1\\nC=5.4505,-1.5994;0,0,i1\\nO=1.5534,-2.3493;0,0,i0\\nX=-0.1457,-0.9064;0,0,i0\\n2-3=2,0\\n2-1=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=2,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n8-11=1,0\\n11-12=1,0\\n12-4=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[oxyquinoline]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(29,33)\\nX=-0.3660,-0.1210;0,0,i0\\nP=1.8140,1.0890;0,0,i0\\nC=3.2440,0.6290;0,0,i2\\nP=1.8140,-1.3310;0,0,i0\\nC=3.2440,-0.8710;0,0,i2\\nC=1.0487,2.5150;0,0,i0\\nC=2.8725,2.1519;0,0,i0\\nC=1.0487,-2.7570;0,0,i0\\nC=2.8725,-2.3939;0,0,i0\\nC=4.3221,1.7667;0,0,i1\\nC=2.4812,3.5999;0,0,i1\\nC=5.3806,2.8295;0,0,i1\\nC=4.9894,4.2776;0,0,i1\\nC=3.5397,4.6628;0,0,i1\\nC=1.8387,3.7901;0,0,i1\\nC=-0.4505,2.5616;0,0,i1\\nC=1.1294,5.1118;0,0,i1\\nC=-0.3699,5.1584;0,0,i1\\nC=-1.1598,3.8833;0,0,i1\\nC=-0.4505,-2.8036;0,0,i1\\nC=1.8387,-4.0321;0,0,i1\\nC=-1.1598,-4.1253;0,0,i1\\nC=-0.3699,-5.4004;0,0,i1\\nC=1.1294,-5.3538;0,0,i1\\nC=2.4812,-3.8419;0,0,i1\\nC=4.3221,-2.0087;0,0,i1\\nC=3.5397,-4.9048;0,0,i1\\nC=4.9893,-4.5196;0,0,i1\\nC=5.3806,-3.0716;0,0,i1\\n3-2=1,0\\n2-1=0,0\\n1-4=0,0\\n4-5=1,0\\n5-3=1,0\\n2-6=1,0\\n2-7=1,0\\n4-8=1,0\\n4-9=1,0\\n7-10=1,0\\n7-11=2,0\\n10-12=2,0\\n12-13=1,0\\n13-14=2,0\\n14-11=1,0\\n6-15=1,0\\n6-16=2,0\\n15-17=2,0\\n17-18=1,0\\n18-19=2,0\\n19-16=1,0\\n8-20=1,0\\n8-21=2,0\\n20-22=2,0\\n22-23=1,0\\n23-24=2,0\\n24-21=1,0\\n9-25=1,0\\n9-26=2,0\\n25-27=2,0\\n27-28=1,0\\n28-29=2,0\\n29-26=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ethylene bis(diphenylphosphine)]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[dppe]]></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(28,32)\\nX=-0.3660,-0.1210;0,0,i0\\nP=1.8140,1.0890;0,0,i0\\nP=1.8140,-1.3310;0,0,i0\\nC=1.0487,2.5150;0,0,i0\\nC=2.8725,2.1519;0,0,i0\\nC=1.0487,-2.7570;0,0,i0\\nC=2.8725,-2.3939;0,0,i0\\nC=4.3221,1.7667;0,0,i1\\nC=2.4812,3.5999;0,0,i1\\nC=5.3806,2.8295;0,0,i1\\nC=4.9894,4.2776;0,0,i1\\nC=3.5397,4.6628;0,0,i1\\nC=1.8387,3.7901;0,0,i1\\nC=-0.4505,2.5616;0,0,i1\\nC=1.1294,5.1118;0,0,i1\\nC=-0.3699,5.1584;0,0,i1\\nC=-1.1598,3.8833;0,0,i1\\nC=-0.4505,-2.8036;0,0,i1\\nC=1.8387,-4.0321;0,0,i1\\nC=-1.1598,-4.1253;0,0,i1\\nC=-0.3699,-5.4004;0,0,i1\\nC=1.1294,-5.3538;0,0,i1\\nC=2.4812,-3.8419;0,0,i1\\nC=4.3221,-2.0087;0,0,i1\\nC=3.5397,-4.9048;0,0,i1\\nC=4.9893,-4.5196;0,0,i1\\nC=5.3806,-3.0716;0,0,i1\\nC=3.5430,-0.1210;0,0,i2\\n2-1=0,0\\n1-3=0,0\\n2-4=1,0\\n2-5=1,0\\n3-6=1,0\\n3-7=1,0\\n5-8=1,0\\n5-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n4-13=1,0\\n4-14=2,0\\n13-15=2,0\\n15-16=1,0\\n16-17=2,0\\n17-14=1,0\\n6-18=1,0\\n6-19=2,0\\n18-20=2,0\\n20-21=1,0\\n21-22=2,0\\n22-19=1,0\\n7-23=1,0\\n7-24=2,0\\n23-25=2,0\\n25-26=1,0\\n26-27=2,0\\n27-24=1,0\\n2-28=1,0\\n3-28=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[methylene bis(diphenylphonsphine)]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[dppm]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nX=-3.3500,-0.0500;0,0,i0\\nO=-1.6700,-1.2600;0,0,i0\\nC=-0.2400,-0.8000;0,0,i0\\nO=-1.6700,1.1600;0,0,i0\\nC=-0.2400,0.7000;0,0,i0\\nC=1.0590,1.4499;0,0,i1\\nC=1.0590,-1.5500;0,0,i1\\nC=2.3581,-0.8000;0,0,i1\\nC=2.3581,0.6999;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=2,0\\n3-7=2,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[catecholate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[cat]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,8)\\nX=-2.9010,4.6990;0,0,i0\\nO=-1.4010,4.6990;0,0,i0\\nC=0.0990,4.6990;0,0,i1\\nC=0.8490,5.9981;0,0,i3\\nC=0.8490,3.4000;0,0,i2\\nC=0.0990,2.1010;0,0,i1\\nO=-1.4010,2.1010;0,0,i0\\nC=0.8490,0.8019;0,0,i3\\nX=-2.9010,2.1009;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n3-5=1,0\\n5-6=1,0\\n6-7=1,0\\n6-8=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[bridging acac]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Tridentate Ligands</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"3\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(19,23)\\nC=2.9998,2.0011;0,0,i1\\nC=4.4998,2.0011;0,0,i1\\nC=2.2498,0.7021;0,0,i1\\nC=5.2498,0.7021;0,0,i1\\nC=4.4998,-0.5969;0,0,i0\\nN=2.9998,-0.5969;0,0,i0\\nC=5.2498,-1.8960;0,0,i0\\nC=6.7498,-1.8960;0,0,i1\\nN=4.4998,-3.1950;0,0,i0\\nC=7.4998,-3.1950;0,0,i1\\nC=6.7498,-4.4940;0,0,i1\\nC=5.2498,-4.4940;0,0,i0\\nC=4.4999,-5.7930;0,0,i0\\nN=2.9999,-5.7930;0,0,i0\\nC=5.2499,-7.0921;0,0,i1\\nC=2.2498,-7.0921;0,0,i1\\nC=2.9998,-8.3911;0,0,i1\\nC=4.4998,-8.3912;0,0,i1\\nX=1.4998,-3.1950;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n12-13=1,0\\n13-14=1,0\\n13-15=2,0\\n14-16=2,0\\n16-17=1,0\\n17-18=2,0\\n18-15=1,0\\n6-19=0,0\\n9-19=0,0\\n14-19=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[terpyridine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[terpy]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,5)\\nX=-7.0728,1.0229;0,0,i0,xARENE:1:1\\nC=-5.3624,2.3410;0,0,i2,xARENE:1:2\\nC=-4.5676,1.0688;0,0,i1,xARENE:1:3\\nC=-5.2718,-0.2556;0,0,i2,xARENE:1:4\\n2-3=2,0\\n3-4=1,0\\n1-4=1,0\\n1-3=0,0\\n1-2=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[allyl]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,9)\\nC=3.6861,-1.8600;0,0,i2\\nN=2.1861,-1.8600;0,0,i2\\nC=4.4361,-3.1590;0,0,i2\\nN=3.6861,-4.4580;0,0,i1\\nC=4.4361,-5.7571;0,0,i2\\nC=3.6861,-7.0561;0,0,i2\\nN=2.1862,-7.0561;0,0,i2\\nX=0.6861,-4.4580;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n5-4=1,0\\n5-6=1,0\\n6-7=1,0\\n2-8=0,0\\n4-8=0,0\\n7-8=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[diethylaminetriamine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[dien]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Multidentate Ligands</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"5\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,12)\\nX=3.7990,0.0000;0,0,i0,xARENE:2:1,xARENE:1:1\\nC=5.6500,-0.1000;0,0,i1,xARENE:2:2\\nC=5.1000,-2.3000;0,0,i1,xARENE:1:3\\nC=5.6500,2.4000;0,0,i1,xARENE:2:3\\nC=5.1000,0.2000;0,0,i1,xARENE:1:2\\nC=7.0319,1.5176;0,0,i2\\nC=7.5819,3.0176;0,0,i2\\nC=7.5819,-1.0824;0,0,i2\\nC=7.0319,-2.5824;0,0,i2\\n2-4=2,0\\n3-5=2,0\\n5-6=1,0\\n4-7=1,0\\n2-8=1,0\\n3-9=1,0\\n6-7=1,0\\n9-8=1,0\\n1-3=0,0\\n1-5=0,0\\n1-4=0,0\\n1-2=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclooctadiene]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[COD]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,12)\\nX=3.7990,0.0000;0,0,i0,xARENE:2:1,xARENE:1:1\\nC=5.8000,0.0500;0,0,i1\\nC=7.1000,1.2500;0,0,i1\\nC=4.7000,1.7651;0,0,i1,xARENE:1:2\\nC=6.3000,2.4651;0,0,i1,xARENE:1:3\\nC=5.5500,-2.0000;0,0,i1,xARENE:2:2\\nC=6.8500,-0.8000;0,0,i1,xARENE:2:3\\nC=8.5000,0.6500;0,0,i2\\n2-4=1,0\\n3-5=1,0\\n2-6=1,0\\n3-7=1,0\\n6-7=2,0\\n2-8=1,0\\n8-3=1,0\\n4-5=2,0\\n1-4=0,0\\n1-5=0,0\\n1-6=0,0\\n1-7=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[norbornadiene]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,10)\\nC=0.2150,2.1200;0,0,i1,xARENE:1:2\\nC=-1.0950,3.1700;0,0,i1,xARENE:1:4\\nC=-0.1650,3.6300;0,0,i1,xARENE:1:3\\nC=-0.1650,0.6100;0,0,i1,xARENE:1:6\\nC=-1.0950,1.0700;0,0,i1,xARENE:1:5\\nX=-2.2110,2.0800;0,0,i0,xARENE:1:1\\n2-3=2,0\\n3-1=1,0\\n1-4=1,0\\n4-5=2,0\\n5-2=1,0\\n6-1=1,0\\n3-6=0,0\\n4-6=0,0\\n5-6=0,0\\n2-6=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclopentadienyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cp]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,12)\\nC=0.7490,6.7000;0,0,i1,xARENE:1:2\\nC=0.2000,5.9500;0,0,i1,xARENE:1:3\\nC=1.2981,6.0500;0,0,i1,xARENE:1:7\\nC=0.2000,4.4500;0,0,i1,xARENE:1:4\\nC=0.7490,3.7000;0,0,i1,xARENE:1:5\\nC=1.2981,4.3500;0,0,i1,xARENE:1:6\\nX=-1.3490,5.2000;0,0,i0,xARENE:1:1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n2-7=0,0\\n4-7=0,0\\n7-1=0,0\\n7-5=0,0\\n7-6=0,0\\n7-3=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[arene]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,15)\\nX=0.0000,0.0000;0,0,i0,xARENE:1:1\\nC=2.9263,-0.0154;0,0,i0,xARENE:1:2\\nC=1.5927,-1.0352;0,0,i0,xARENE:1:4\\nC=2.5119,-1.5163;0,0,i0,xARENE:1:3\\nC=2.5809,1.5029;0,0,i0,xARENE:1:6\\nC=1.6407,1.0642;0,0,i0,xARENE:1:5\\nC=3.7728,-0.0348;0,0,i3\\nC=2.8692,2.9749;0,0,i3\\nC=0.9137,2.3762;0,0,i3\\nC=0.8354,-2.3300;0,0,i3\\nC=2.7329,-3.0000;0,0,i3\\n3-4=2,0\\n4-2=1,0\\n2-5=1,0\\n5-6=2,0\\n6-3=1,0\\n1-2=1,0\\n4-1=0,0\\n5-1=0,0\\n6-1=0,0\\n3-1=0,0\\n2-7=1,0\\n5-8=1,0\\n6-9=1,0\\n3-10=1,0\\n4-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[pentamethylcyclopentadienyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cp*]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<DataSheet><Summary><Title>Cage Complexes</Title><Description><![CDATA[]]></Description></Summary><Extension/><Header nrows=\\\"8\\\" ncols=\\\"3\\\"><Column id=\\\"1\\\" name=\\\"Molecule\\\" type=\\\"molecule\\\">Molecular structure</Column><Column id=\\\"2\\\" name=\\\"Name\\\" type=\\\"string\\\">Template name</Column><Column id=\\\"3\\\" name=\\\"Abbrev\\\" type=\\\"string\\\">Optional abbreviation</Column></Header><Content><Row id=\\\"1\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(21,25)\\nM=-0.6000,2.4500;0,0,i0\\nN=-1.3500,3.7490;0,0,i0\\nO=0.1500,1.1510;0,0,i0\\nO=0.9000,2.4500;0,0,i0\\nO=-2.1000,2.4500;0,0,i0\\nO=-1.3500,1.1510;0,0,i0\\nN=0.1500,3.7490;0,0,i0\\nC=-0.9618,5.1979;0,0,i2\\nC=-0.2382,5.1979;0,0,i2\\nC=-2.7989,4.1373;0,0,i2\\nC=-3.3990,3.2000;0,0,i0\\nC=2.1990,3.2000;0,0,i0\\nC=1.5989,4.1373;0,0,i2\\nC=-3.0821,2.1510;0,0,i0\\nC=1.8821,2.1510;0,0,i0\\nC=1.4938,3.5999;0,0,i2\\nC=-2.6938,3.5999;0,0,i2\\nO=3.2679,1.5769;0,0,i0\\nO=3.6975,3.2689;0,0,i0\\nO=-4.4679,1.5769;0,0,i0\\nO=-4.8975,3.2689;0,0,i0\\n1-2=0,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n1-6=1,0\\n1-7=0,0\\n2-8=1,0\\n7-9=1,0\\n8-9=1,0\\n2-10=1,0\\n5-11=1,0\\n4-12=1,0\\n7-13=1,0\\n12-13=1,0\\n11-10=1,0\\n6-14=1,0\\n3-15=1,0\\n15-16=1,0\\n14-17=1,0\\n17-2=1,0\\n16-7=1,0\\n15-18=2,0\\n12-19=2,0\\n14-20=2,0\\n11-21=2,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[EDTA]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"2\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(25,32)\\nM=-0.3000,1.2000;0,0,i0\\nN=-1.7142,2.6142;0,0,i0\\nN=1.1142,2.6142;0,0,i0\\nN=1.1142,-0.2142;0,0,i0\\nN=-1.7142,-0.2142;0,0,i0\\nC=-3.1921,0.0191;0,0,i0\\nC=-3.8780,-1.3173;0,0,i1\\nC=-1.4809,-1.6921;0,0,i0\\nC=-2.8173,-2.3780;0,0,i1\\nC=-1.4809,4.0921;0,0,i0\\nC=-2.8173,4.7780;0,0,i1\\nC=-3.1921,2.3809;0,0,i0\\nC=-3.8780,3.7173;0,0,i1\\nC=2.5921,2.3809;0,0,i0\\nC=3.2780,3.7173;0,0,i1\\nC=0.8809,4.0921;0,0,i0\\nC=2.2173,4.7780;0,0,i1\\nC=0.8809,-1.6921;0,0,i0\\nC=2.2173,-2.3780;0,0,i1\\nC=2.5921,0.0191;0,0,i0\\nC=3.2780,-1.3173;0,0,i1\\nC=-3.8714,1.2000;0,0,i1\\nC=-0.3000,4.7714;0,0,i1\\nC=3.2714,1.2000;0,0,i1\\nC=-0.3000,-2.3714;0,0,i1\\n1-2=1,0\\n1-3=0,0\\n1-4=1,0\\n1-5=0,0\\n7-6=1,0\\n6-5=1,0\\n5-8=2,0\\n8-9=1,0\\n9-7=2,0\\n11-10=2,0\\n10-2=1,0\\n2-12=1,0\\n12-13=2,0\\n13-11=1,0\\n15-14=1,0\\n14-3=2,0\\n3-16=1,0\\n16-17=1,0\\n17-15=2,0\\n19-18=1,0\\n18-4=1,0\\n4-20=1,0\\n20-21=1,0\\n21-19=2,0\\n6-22=2,0\\n10-23=1,0\\n14-24=1,0\\n18-25=2,0\\n22-12=1,0\\n23-16=2,0\\n24-20=2,0\\n25-8=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[porphyrin]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"3\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(25,32)\\nM=1.5000,0.0000;0,0,i0\\nN=2.9117,1.4117;0,0,i0\\nN=0.0882,-1.4117;0,0,i0\\nN=2.9117,-1.4117;0,0,i0\\nN=0.0882,1.4117;0,0,i0\\nC=-2.0755,-2.5147;0,0,i1\\nC=-1.3895,-1.1783;0,0,i0\\nC=0.3215,-2.8895;0,0,i0\\nC=-1.0148,-3.5754;0,0,i1\\nC=5.0755,2.5147;0,0,i1\\nC=4.3895,1.1783;0,0,i0\\nC=2.6784,2.8895;0,0,i0\\nC=4.0148,3.5754;0,0,i1\\nC=-1.0148,3.5754;0,0,i1\\nC=0.3216,2.8895;0,0,i0\\nC=-1.3895,1.1783;0,0,i0\\nC=-2.0754,2.5148;0,0,i1\\nC=4.0148,-3.5754;0,0,i1\\nC=2.6783,-2.8895;0,0,i0\\nC=4.3895,-1.1783;0,0,i0\\nC=5.0754,-2.5148;0,0,i1\\nN=-1.9510,-0.0731;0,0,i0\\nN=1.4268,3.4510;0,0,i0\\nN=4.9510,0.0731;0,0,i0\\nN=1.5731,-3.4510;0,0,i0\\n1-2=0,0\\n1-3=0,0\\n1-4=0,0\\n1-5=0,0\\n6-7=1,0\\n7-3=2,0\\n3-8=1,0\\n8-9=1,0\\n9-6=2,0\\n10-11=1,0\\n11-2=2,0\\n2-12=1,0\\n12-13=1,0\\n13-10=2,0\\n14-15=1,0\\n15-5=2,0\\n5-16=1,0\\n16-17=1,0\\n17-14=2,0\\n18-19=1,0\\n19-4=2,0\\n4-20=1,0\\n20-21=1,0\\n21-18=2,0\\n7-22=1,0\\n15-23=1,0\\n11-24=1,0\\n19-25=1,0\\n8-25=2,0\\n16-22=2,0\\n12-23=2,0\\n20-24=2,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[porphyrinoid]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"4\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,20)\\nM=12.1738,-1.7111;0,0,i0,xARENE:1:1,xARENE:2:1\\nC=13.1284,-0.5301;0,0,i1,xARENE:1:2\\nC=11.2193,-0.5301;0,0,i1,xARENE:1:3\\nC=11.2193,-2.8920;0,0,i1,xARENE:2:2\\nC=13.1284,-2.8920;0,0,i1,xARENE:2:3\\nC=10.8390,-3.7589;0,0,i1,xARENE:2:6\\nC=12.1738,-4.1749;0,0,i1,xARENE:2:5\\nC=13.5087,-3.7589;0,0,i1,xARENE:2:4\\nC=13.5087,0.3368;0,0,i1,xARENE:1:6\\nC=12.1738,0.7528;0,0,i1,xARENE:1:5\\nC=10.8390,0.3368;0,0,i1,xARENE:1:4\\n2-3=1,0\\n4-5=1,0\\n4-6=2,0\\n6-7=1,0\\n7-8=1,0\\n8-5=2,0\\n2-9=2,0\\n9-10=1,0\\n10-11=1,0\\n11-3=2,0\\n10-1=1,0\\n7-1=1,0\\n8-1=0,0\\n5-1=0,0\\n4-1=0,0\\n6-1=0,0\\n3-1=0,0\\n2-1=0,0\\n9-1=0,0\\n11-1=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[metallocene]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"5\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(37,45)\\nM=1.5000,0.0000;0,0,i0\\nC=5.3914,3.7500;0,0,i1\\nC=6.6904,3.0000;0,0,i1\\nC=4.0924,3.0000;0,0,i1\\nC=6.6904,1.5000;0,0,i1\\nC=5.3914,0.7500;0,0,i0\\nN=4.0924,1.5000;0,0,i0\\nC=5.3914,-0.7500;0,0,i0\\nC=6.6904,-1.5000;0,0,i1\\nN=4.0924,-1.5000;0,0,i0\\nC=6.6904,-3.0000;0,0,i1\\nC=5.3914,-3.7500;0,0,i1\\nC=4.0924,-3.0000;0,0,i1\\nC=-3.6940,1.4927;0,0,i1\\nC=-3.6946,2.9927;0,0,i1\\nC=-2.3946,0.7433;0,0,i1\\nC=-2.3959,3.7433;0,0,i1\\nC=-1.0966,2.9939;0,0,i0\\nN=-1.0959,1.4939;0,0,i0\\nC=0.2020,3.7445;0,0,i0\\nC=0.2013,5.2445;0,0,i1\\nN=1.5014,2.9951;0,0,i0\\nC=1.5000,5.9951;0,0,i1\\nC=2.7994,5.2457;0,0,i1\\nC=2.8001,3.7457;0,0,i1\\nC=2.8030,-5.2448;0,0,i1\\nC=1.5041,-5.9951;0,0,i1\\nC=2.8026,-3.7448;0,0,i1\\nC=0.2049,-5.2453;0,0,i1\\nC=0.2046,-3.7454;0,0,i0\\nN=1.5034,-2.9951;0,0,i0\\nC=-1.0945,-2.9957;0,0,i0\\nC=-2.3934,-3.7459;0,0,i1\\nN=-1.0949,-1.4957;0,0,i0\\nC=-3.6926,-2.9962;0,0,i1\\nC=-3.6930,-1.4963;0,0,i1\\nC=-2.3941,-0.7460;0,0,i1\\n2-3=1,0\\n2-4=2,0\\n3-5=2,0\\n5-6=1,0\\n6-7=2,0\\n7-4=1,0\\n6-8=1,0\\n8-9=1,0\\n8-10=2,0\\n9-11=2,0\\n11-12=1,0\\n12-13=2,0\\n13-10=1,0\\n1-10=0,0\\n1-7=0,0\\n14-15=1,0\\n14-16=2,0\\n15-17=2,0\\n17-18=1,0\\n18-19=2,0\\n19-16=1,0\\n18-20=1,0\\n20-21=1,0\\n20-22=2,0\\n21-23=2,0\\n23-24=1,0\\n24-25=2,0\\n25-22=1,0\\n1-22=0,0\\n1-19=0,0\\n26-27=1,0\\n26-28=2,0\\n27-29=2,0\\n29-30=1,0\\n30-31=2,0\\n31-28=1,0\\n30-32=1,0\\n32-33=1,0\\n32-34=2,0\\n33-35=2,0\\n35-36=1,0\\n36-37=2,0\\n37-34=1,0\\n1-34=0,0\\n1-31=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[tris-bipy]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"6\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,18)\\nN=0.0000,0.0000;0,0,i1\\nC=-1.5000,0.0000;0,0,i2\\nC=-2.2500,-1.2990;0,0,i2\\nC=-1.5000,-2.5981;0,0,i2\\nN=-0.0000,-2.5981;0,0,i1\\nC=0.7500,1.2990;0,0,i2\\nC=2.2500,1.2990;0,0,i2\\nN=3.0000,-0.0000;0,0,i1\\nC=4.5000,-0.0000;0,0,i2\\nC=5.2500,-1.2990;0,0,i2\\nC=4.5000,-2.5981;0,0,i2\\nN=3.0000,-2.5981;0,0,i1\\nC=0.7500,-3.8971;0,0,i2\\nC=2.2500,-3.8971;0,0,i2\\nM=1.5000,-1.3000;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n1-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n5-13=1,0\\n12-14=1,0\\n14-13=1,0\\n1-15=0,0\\n15-12=0,0\\n5-15=0,0\\n15-8=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[tren]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"7\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,13)\\nM=1.4999,0.0000;0,0,i0\\nN=1.4999,1.5000;0,0,i2\\nN=1.4999,-1.5000;0,0,i2\\nN=0.2009,0.7500;0,0,i2\\nN=0.2009,-0.7500;0,0,i0\\nC=0.4393,-2.5606;0,0,i2\\nC=-1.2479,-0.3617;0,0,i2\\nC=-0.1872,-2.1988;0,0,i2\\nC=-1.2479,0.3617;0,0,i2\\nC=0.0511,1.8882;0,0,i2\\nC=-0.7973,0.9790;0,0,i2\\n1-2=0,0\\n1-3=0,0\\n1-4=0,0\\n1-5=0,0\\n3-6=1,0\\n5-7=1,0\\n5-8=1,0\\n4-9=1,0\\n7-9=1,0\\n6-8=1,0\\n2-10=1,0\\n5-11=1,0\\n10-11=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[N4]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"8\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(21,27)\\nN=3.2639,-1.3522;0,0,i1\\nC=1.8122,-0.7585;0,0,i2\\nC=1.8056,0.7411;0,0,i2\\nN=3.2521,1.3475;0,0,i1\\nN=5.9520,1.3594;0,0,i1\\nC=7.4037,0.7657;0,0,i2\\nC=7.4103,-0.7339;0,0,i2\\nN=5.9639,-1.3403;0,0,i1\\nC=3.2705,-2.8521;0,0,i2\\nC=5.9705,-2.8402;0,0,i2\\nC=5.9454,2.8594;0,0,i2\\nC=3.2455,2.8475;0,0,i2\\nC=4.6431,3.6036;0,0,i1\\nC=4.5728,-3.5963;0,0,i1\\nM=4.6052,-0.0128;0,0,i0\\nN=4.5994,1.4890;0,0,i1\\nN=4.6133,-1.5126;0,0,i1\\nC=4.1980,2.5347;0,0,i2\\nC=4.2120,-2.5583;0,0,i2\\nC=2.8657,-0.6612;0,0,i2\\nC=2.8489,0.6376;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n1-9=1,0\\n8-10=1,0\\n5-11=1,0\\n4-12=1,0\\n11-13=1,0\\n13-12=1,0\\n9-14=1,0\\n14-10=1,0\\n1-15=0,0\\n4-15=0,0\\n8-15=0,0\\n5-15=0,0\\n15-16=0,0\\n15-17=0,0\\n16-18=1,0\\n13-18=1,0\\n17-19=1,0\\n19-14=1,0\\n17-20=1,0\\n16-21=1,0\\n21-20=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[N6]]></Cell><Cell id=\\\"3\\\"/></Row></Content></DataSheet>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Amino Acids</Title><Description><![CDATA[]]></Description></Summary>\\n<Header nrows=\\\"20\\\" ncols=\\\"4\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n<Column name=\\\"Mnemonic\\\" type=\\\"string\\\" id=\\\"4\\\"></Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,6)\\nC=-6.5731,8.0000;0,0,i0\\nO=-6.5731,9.5000;0,0,i0\\nC=-7.8721,7.2500;0,0,i1\\nX=-5.2741,7.2500;0,0,i0\\nN=-9.1712,8.0000;0,0,i1\\nC=-7.8721,5.7500;0,0,i3\\nX=-10.4702,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n5-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[alanine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ala]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[A]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nC=-6.8514,8.0000;0,0,i0\\nO=-6.8514,9.5000;0,0,i0\\nC=-8.1504,7.2500;0,0,i1\\nX=-5.5524,7.2500;0,0,i0\\nN=-9.4495,8.0000;0,0,i1\\nC=-8.1504,5.7500;0,0,i2\\nS=-6.8515,5.0000;0,0,i1\\nX=-10.7485,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n5-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cysteine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cys]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[C]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i0\\nO=-7.5009,3.5000;-1,0,i0\\nO=-6.2020,5.7499;0,0,i0\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[aspartic acid]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Asp]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[D]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,10)\\nC=-7.3830,8.0000;0,0,i0\\nO=-7.3830,9.5000;0,0,i0\\nC=-8.6820,7.2500;0,0,i1\\nX=-6.0840,7.2500;0,0,i0\\nN=-9.9811,8.0000;0,0,i1\\nC=-8.6820,5.7500;0,0,i2\\nC=-7.3830,5.0000;0,0,i2\\nC=-7.3828,3.5000;0,0,i0\\nO=-6.0838,2.7500;-1,0,i0\\nO=-8.6819,2.7500;0,0,i0\\nX=-11.2801,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n8-10=2,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[glutamic acid]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Glu]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[E]]></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,13)\\nC=-8.8000,8.0000;0,0,i0\\nO=-8.8000,9.5000;0,0,i0\\nC=-10.0990,7.2500;0,0,i1\\nX=-7.5010,7.2500;0,0,i0\\nN=-11.3981,8.0000;0,0,i1\\nC=-10.0990,5.7500;0,0,i2\\nC=-8.8000,5.0000;0,0,i0\\nC=-8.8000,3.5000;0,0,i1\\nC=-7.5010,5.7500;0,0,i1\\nC=-7.5010,2.7500;0,0,i1\\nC=-6.2019,3.5000;0,0,i1\\nC=-6.2019,5.0000;0,0,i1\\nX=-12.6971,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n5-13=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phenylalanine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Phe]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[F]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nC=-6.6349,8.0000;0,0,i0\\nO=-6.6349,9.5000;0,0,i0\\nC=-7.9339,7.2500;0,0,i2\\nX=-5.3359,7.2500;0,0,i0\\nN=-9.2330,8.0000;0,0,i1\\nX=-10.5320,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n5-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[glycine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Gly]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[G]]></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=-8.4232,8.0000;0,0,i0\\nO=-8.4232,9.5000;0,0,i0\\nC=-9.7222,7.2500;0,0,i1\\nX=-7.1242,7.2500;0,0,i0\\nN=-11.0213,8.0000;0,0,i1\\nC=-9.7222,5.7500;0,0,i2\\nC=-8.4232,5.0000;0,0,i0\\nC=-6.0475,4.4955;0,0,i1\\nN=-6.7961,3.2002;0,0,i1\\nC=-8.2664,3.5081;0,0,i1\\nN=-7.0492,5.6069;0,0,i0\\nX=-12.3203,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n10-9=1,0\\n9-8=1,0\\n8-11=2,0\\n11-7=1,0\\n7-10=2,0\\n5-12=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[histidine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[His]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[H]]></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-6.7216,8.0000;0,0,i0\\nO=-6.7216,9.5000;0,0,i0\\nC=-8.0206,7.2500;0,0,i1\\nX=-5.4226,7.2500;0,0,i0\\nN=-9.3197,8.0000;0,0,i1\\nC=-8.0206,5.7500;0,0,i1\\nC=-6.7216,5.0000;0,0,i2\\nC=-9.3196,5.0000;0,0,i3\\nC=-6.7214,3.5000;0,0,i3\\nX=-10.6187,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n6-8=1,0\\n7-9=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[isoleucine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ile]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[I]]></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,10)\\nC=-7.8553,8.0000;0,0,i0\\nO=-7.8553,9.5000;0,0,i0\\nC=-9.1543,7.2500;0,0,i1\\nX=-6.5563,7.2500;0,0,i0\\nN=-10.4534,8.0000;0,0,i1\\nC=-9.1543,5.7500;0,0,i2\\nC=-7.8553,5.0000;0,0,i2\\nC=-7.8552,3.5000;0,0,i2\\nC=-6.5561,2.7500;0,0,i2\\nN=-6.5561,1.2500;1,0,i3\\nX=-11.7524,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[lysine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Lys]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[K]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i1\\nC=-7.5008,3.5000;0,0,i3\\nC=-6.2019,5.7500;0,0,i3\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[leucine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Leu]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[L]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i2\\nS=-7.5008,3.5000;0,0,i0\\nC=-6.2018,2.7500;0,0,i3\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[methionine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Met]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[M]]></Cell>\\n</Row>\\n<Row id=\\\"12\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i0\\nN=-7.5008,3.5000;0,0,i2\\nO=-6.2019,5.7500;0,0,i0\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[asparagine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Asn]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[N]]></Cell>\\n</Row>\\n<Row id=\\\"13\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=-5.7561,8.0000;0,0,i0\\nO=-5.7561,9.5000;0,0,i0\\nC=-7.0551,7.2500;0,0,i1\\nX=-4.4571,7.2500;0,0,i0\\nC=-7.2122,5.7621;0,0,i2\\nC=-8.6806,5.4455;0,0,i2\\nN=-8.4222,7.8579;0,0,i0\\nC=-9.4306,6.7446;0,0,i2\\nX=-8.7323,9.3255;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n6-5=1,0\\n3-5=1,2\\n3-7=1,0\\n7-8=1,0\\n8-6=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[proline]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Pro]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[P]]></Cell>\\n</Row>\\n<Row id=\\\"14\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,10)\\nC=-7.3829,8.0000;0,0,i0\\nO=-7.3829,9.5000;0,0,i0\\nC=-8.6819,7.2500;0,0,i1\\nX=-6.0839,7.2500;0,0,i0\\nN=-9.9810,8.0000;0,0,i1\\nC=-8.6819,5.7500;0,0,i2\\nC=-7.3829,5.0000;0,0,i2\\nC=-7.3828,3.5000;0,0,i0\\nN=-6.0837,2.7500;0,0,i2\\nO=-8.6818,2.7500;0,0,i0\\nX=-11.2800,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n8-10=2,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[glutamine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Gln]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[Q]]></Cell>\\n</Row>\\n<Row id=\\\"15\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,12)\\nC=-11.2850,5.8016;0,0,i0\\nO=-11.2850,7.3016;0,0,i0\\nC=-12.5840,5.0517;0,0,i1\\nX=-9.9860,5.0516;0,0,i0\\nN=-13.8830,5.8017;0,0,i1\\nC=-12.5840,3.5516;0,0,i2\\nC=-11.2849,2.8015;0,0,i2\\nC=-11.2849,1.3015;0,0,i2\\nN=-9.9859,0.5516;0,0,i1\\nC=-9.9859,-0.9483;0,0,i0\\nN=-11.2850,-1.6984;1,0,i2\\nN=-8.6869,-1.6983;0,0,i2\\nX=-15.1821,5.0517;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=2,0\\n10-12=1,0\\n5-13=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[arginine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Arg]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[R]]></Cell>\\n</Row>\\n<Row id=\\\"16\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nC=-6.8514,8.0000;0,0,i0\\nO=-6.8514,9.5000;0,0,i0\\nC=-8.1504,7.2500;0,0,i1\\nX=-5.5525,7.2500;0,0,i0\\nN=-9.4496,8.0000;0,0,i1\\nC=-8.1504,5.7500;0,0,i2\\nO=-6.8514,5.0000;0,0,i1\\nX=-10.7486,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n5-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[serine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ser]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[S]]></Cell>\\n</Row>\\n<Row id=\\\"17\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,8)\\nC=-6.4906,8.0000;0,0,i0\\nO=-6.4906,9.5000;0,0,i0\\nC=-7.7896,7.2500;0,0,i1\\nX=-5.1916,7.2500;0,0,i0\\nN=-9.0887,8.0000;0,0,i1\\nC=-7.7896,5.7500;0,0,i1\\nC=-9.0887,5.0000;0,0,i3\\nO=-6.4906,5.0000;0,0,i1\\nX=-10.3877,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,2\\n3-6=1,0\\n6-7=1,0\\n6-8=1,2\\n5-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[threonine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Thr]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[T]]></Cell>\\n</Row>\\n<Row id=\\\"18\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,14)\\nC=-9.3567,8.0000;0,0,i0\\nO=-9.3567,9.5000;0,0,i0\\nC=-10.6557,7.2500;0,0,i1\\nX=-8.0577,7.2500;0,0,i0\\nN=-11.9548,8.0000;0,0,i1\\nC=-10.6557,5.7500;0,0,i2\\nC=-9.3567,5.0000;0,0,i0\\nC=-9.3567,3.5000;0,0,i1\\nC=-8.0577,5.7500;0,0,i1\\nC=-8.0577,2.7500;0,0,i1\\nC=-6.7586,3.5000;0,0,i0\\nC=-6.7586,5.0000;0,0,i1\\nO=-5.4596,2.7500;0,0,i1\\nX=-13.2538,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n11-13=1,0\\n5-14=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[tyrosine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Tyr]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[Y]]></Cell>\\n</Row>\\n<Row id=\\\"19\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,8)\\nC=-6.4906,8.0000;0,0,i0\\nO=-6.4906,9.5000;0,0,i0\\nC=-7.7896,7.2500;0,0,i1\\nX=-5.1916,7.2500;0,0,i0\\nN=-9.0887,8.0000;0,0,i1\\nC=-7.7896,5.7500;0,0,i1\\nC=-9.0887,5.0000;0,0,i3\\nC=-6.4906,5.0000;0,0,i3\\nX=-10.3877,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n6-8=1,0\\n5-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[valine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Val]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[V]]></Cell>\\n</Row>\\n<Row id=\\\"20\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,17)\\nC=-9.1949,8.0000;0,0,i0\\nO=-9.1949,9.5000;0,0,i0\\nC=-10.4939,7.2500;0,0,i1\\nX=-7.8959,7.2500;0,0,i0\\nN=-11.7930,8.0000;0,0,i1\\nC=-10.4939,5.7500;0,0,i2\\nC=-9.1949,5.0000;0,0,i0\\nC=-9.4755,2.2797;0,0,i1\\nC=-8.7255,0.9806;0,0,i1\\nC=-8.7255,3.5787;0,0,i0\\nC=-7.2255,0.9806;0,0,i1\\nC=-6.4755,2.2797;0,0,i1\\nC=-7.2255,3.5787;0,0,i0\\nC=-7.9866,5.8824;0,0,i1\\nN=-6.7662,5.0065;0,0,i1\\nX=-13.0920,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n8-9=1,0\\n8-10=2,0\\n9-11=2,0\\n11-12=1,0\\n12-13=2,0\\n13-10=1,0\\n10-7=1,0\\n7-14=2,0\\n14-15=1,0\\n15-13=1,0\\n5-16=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[tryptophan]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Trp]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[W]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Biomolecules</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"8\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,12)\\nN=0.7009,1.8000;0,0,i0\\nC=2.0000,2.5500;0,0,i1\\nC=-0.5981,2.5500;0,0,i0\\nN=2.0000,4.0500;0,0,i0\\nC=0.7009,4.8000;0,0,i0\\nC=-0.5981,4.0500;0,0,i0\\nN=-2.0194,2.0806;0,0,i0\\nC=-2.9018,3.2889;0,0,i1\\nN=-2.0260,4.5093;0,0,i0\\nN=0.7009,6.3000;0,0,i2\\nX=-2.4777,0.6523;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n5-10=1,0\\n7-11=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[adenine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,13)\\nN=0.7009,1.8000;0,0,i0\\nC=2.0000,2.5500;0,0,i0\\nC=-0.5981,2.5500;0,0,i0\\nN=2.0000,4.0500;0,0,i1\\nC=0.7009,4.8000;0,0,i0\\nC=-0.5981,4.0500;0,0,i0\\nN=-2.0194,2.0806;0,0,i0\\nC=-2.9018,3.2889;0,0,i1\\nN=-2.0260,4.5093;0,0,i0\\nO=0.7009,6.3000;0,0,i0\\nX=-2.4777,0.6523;0,0,i0\\nN=3.2990,1.8000;0,0,i2\\n1-2=2,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=2,0\\n3-7=1,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n5-10=2,0\\n7-11=1,0\\n2-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[guanine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=-1.7510,2.3500;0,0,i0\\nC=-3.0500,1.6000;0,0,i1\\nN=-0.4519,1.6000;0,0,i0\\nC=-3.0500,0.1000;0,0,i1\\nN=-1.7510,-0.6500;0,0,i0\\nC=-0.4519,0.1000;0,0,i0\\nN=-1.7510,3.8500;0,0,i2\\nO=0.8471,-0.6500;0,0,i0\\nX=-1.7510,-2.1500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n1-7=1,0\\n6-8=2,0\\n5-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cytosine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=-1.7510,2.3500;0,0,i0\\nC=-3.0500,1.6000;0,0,i1\\nN=-0.4519,1.6000;0,0,i1\\nC=-3.0500,0.1000;0,0,i1\\nN=-1.7510,-0.6500;0,0,i0\\nC=-0.4519,0.1000;0,0,i0\\nO=-1.7510,3.8500;0,0,i0\\nO=0.8471,-0.6500;0,0,i0\\nX=-1.7510,-2.1500;0,0,i0\\n1-2=1,0\\n3-1=1,0\\n2-4=2,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n1-7=2,0\\n6-8=2,0\\n5-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[uracil]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,10)\\nC=-1.7510,2.3500;0,0,i0\\nC=-3.0500,1.6000;0,0,i0\\nN=-0.4519,1.6000;0,0,i1\\nC=-3.0500,0.1000;0,0,i1\\nN=-1.7510,-0.6500;0,0,i0\\nC=-0.4519,0.1000;0,0,i0\\nO=-1.7510,3.8500;0,0,i0\\nO=0.8471,-0.6500;0,0,i0\\nX=-1.7510,-2.1500;0,0,i0\\nC=-4.3490,2.3500;0,0,i3\\n1-2=1,0\\n3-1=1,0\\n2-4=2,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n1-7=2,0\\n6-8=2,0\\n5-9=1,0\\n2-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[thymine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(27,29)\\nN=4.6026,-2.2500;0,0,i0\\nC=5.9018,-1.5000;0,0,i1\\nC=3.3036,-1.5000;0,0,i0\\nN=5.9018,0.0000;0,0,i0\\nC=4.6026,0.7500;0,0,i0\\nC=3.3036,0.0000;0,0,i0\\nN=1.8824,-1.9694;0,0,i0\\nC=1.0000,-0.7610;0,0,i1\\nN=1.8756,0.4593;0,0,i0\\nN=4.6026,2.2500;0,0,i2\\nC=1.4240,-3.3975;0,0,i1\\nO=0.0030,-3.8657;0,0,i0\\nC=0.0040,-5.3680;0,0,i1\\nC=2.3071,-4.6051;0,0,i1\\nC=1.4322,-5.8263;0,0,i1\\nO=3.8071,-4.5978;0,0,i1\\nO=1.9031,-7.2505;0,0,i1\\nC=-1.2076,-6.2522;0,0,i2\\nO=-2.5790,-5.6451;0,0,i0\\nP=-3.7905,-6.5296;0,0,i0\\nO=-4.6750,-5.3179;0,0,i0\\nO=-2.9062,-7.7412;0,0,i1\\nO=-5.0022,-7.4140;0,0,i0\\nP=-6.3738,-6.8069;0,0,i0\\nO=-5.7668,-5.4352;0,0,i0\\nO=-6.9808,-8.1786;0,0,i1\\nO=-7.7455,-6.1998;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n5-10=1,0\\n11-7=1,1\\n13-12=1,0\\n12-11=1,0\\n11-14=1,0\\n14-15=1,0\\n15-13=1,0\\n14-16=1,2\\n15-17=1,2\\n13-18=1,1\\n18-19=1,0\\n20-21=2,0\\n20-22=1,0\\n20-23=1,0\\n20-19=1,0\\n24-25=2,0\\n24-26=1,0\\n24-27=1,0\\n24-23=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[ADP]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,19)\\nC=2.2100,1.1549;0,0,i0\\nN=1.0000,0.2749;0,0,i1\\nC=1.4600,-1.1549;0,0,i0\\nN=3.4200,0.2749;0,0,i1\\nC=2.9600,-1.1549;0,0,i0\\nC=3.4282,-2.5763;0,0,i1\\nS=2.2199,-3.4587;0,0,i0\\nC=0.9995,-2.5829;0,0,i2\\nO=2.2100,2.6549;0,0,i0\\nH=4.4599,-1.1497;0,0,i0\\nH=-0.0399,-1.1545;0,0,i0\\nC=4.8563,-3.0352;0,0,i2\\nC=5.9677,-2.0279;0,0,i2\\nC=7.3958,-2.4869;0,0,i2\\nC=8.5073,-1.4796;0,0,i2\\nC=9.9353,-1.9386;0,0,i0\\nO=11.0468,-0.9314;0,0,i0\\nO=10.2519,-3.4048;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-3=1,0\\n1-9=2,0\\n5-10=1,1\\n3-11=1,1\\n6-12=1,2\\n12-13=1,0\\n13-14=1,0\\n14-15=1,0\\n16-17=2,0\\n16-18=1,0\\n16-15=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[biotin]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(24,27)\\nC=-7.1991,2.0500;0,0,i1\\nC=-8.4981,1.3000;0,0,i1\\nC=-8.4981,-0.2000;0,0,i0\\nC=-7.1991,-0.9500;0,0,i1\\nC=-5.9000,-0.2000;0,0,i0\\nC=-5.9000,1.3000;0,0,i0\\nC=-4.6009,-0.9500;0,0,i2\\nC=-3.3019,-0.2000;0,0,i2\\nC=-3.3019,1.3000;0,0,i0\\nC=-4.6009,2.0500;0,0,i0\\nC=-2.0028,2.0500;0,0,i0\\nC=-2.0028,3.5500;0,0,i0\\nC=-3.3018,4.3000;0,0,i2\\nC=-4.6008,3.5501;0,0,i2\\nC=-0.5814,4.0194;0,0,i1\\nC=0.3009,2.8111;0,0,i1\\nC=-0.5749,1.5907;0,0,i2\\nO=-9.7971,-0.9500;0,0,i1\\nH=-4.6009,0.5500;0,0,i0\\nH=-3.3019,2.8000;0,0,i0\\nH=-2.0028,0.5500;0,0,i0\\nC=-2.0028,5.0500;0,0,i3\\nO=-0.1231,5.4476;0,0,i1\\nO=1.8009,2.8174;0,0,i1\\n2-3=2,0\\n2-1=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=2,0\\n8-9=1,0\\n8-7=1,0\\n9-10=1,0\\n10-6=1,0\\n5-7=1,0\\n12-13=1,0\\n12-11=1,0\\n13-14=1,0\\n14-10=1,0\\n9-11=1,0\\n12-15=1,0\\n15-16=1,0\\n16-17=1,0\\n17-11=1,0\\n3-18=1,0\\n10-19=1,2\\n9-20=1,1\\n11-21=1,2\\n12-22=1,1\\n15-23=1,1\\n16-24=1,2\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[estrogen]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Saccharides</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"7\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.0000,0.5911;0,0,i1\\nC=2.2990,0.1911;0,0,i1\\nC=1.7500,-0.7078;0,0,i1\\nO=3.5981,0.9411;0,0,i0\\nC=3.0490,0.0421;0,0,i1\\nC=4.3481,-0.7078;0,0,i1\\nO=-0.2797,-0.1912;0,0,i1\\nO=0.2727,-0.9682;0,0,i1\\nC=1.4079,1.3978;0,0,i2\\nO=2.0074,2.7728;0,0,i1\\nO=3.4372,-1.4066;0,0,i1\\nO=4.5368,-2.1958;0,0,i1\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n1-7=1,0\\n3-8=1,0\\n2-9=1,0\\n9-10=1,0\\n5-11=1,0\\n6-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose alpha]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.0000,0.5910;0,0,i1\\nC=2.2990,0.1911;0,0,i1\\nC=1.7500,-0.7077;0,0,i1\\nO=3.5980,0.9411;0,0,i0\\nC=3.0490,0.0421;0,0,i1\\nC=4.3481,-0.7077;0,0,i1\\nO=-0.2797,-0.1912;0,0,i1\\nO=0.2727,-0.9682;0,0,i1\\nC=1.4078,1.3977;0,0,i2\\nO=2.0074,2.7727;0,0,i1\\nO=3.4372,-1.4065;0,0,i1\\nO=5.6169,0.0920;0,0,i1\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n1-7=1,0\\n3-8=1,0\\n2-9=1,0\\n9-10=1,0\\n5-11=1,0\\n6-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose beta]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,15)\\nC=1.5000,0.0000;0,0,i0\\nC=1.4999,1.5000;0,0,i1\\nC=1.4999,-1.5000;0,0,i0\\nO=3.0000,0.0000;0,0,i1\\nH=0.0000,0.0000;0,0,i0\\nC=1.4999,-3.0000;0,0,i0\\nH=2.9999,-1.5000;0,0,i0\\nO=-0.0000,-1.4999;0,0,i1\\nC=1.4999,-4.5000;0,0,i0\\nO=2.9999,-3.0000;0,0,i1\\nH=-0.0000,-2.9999;0,0,i0\\nC=1.4999,-6.0000;0,0,i2\\nO=2.9999,-4.5000;0,0,i1\\nH=-0.0000,-4.5000;0,0,i0\\nO=2.7990,-6.7500;0,0,i1\\nO=0.2009,2.2499;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n3-6=1,0\\n3-7=1,0\\n3-8=1,0\\n6-9=1,0\\n6-10=1,0\\n6-11=1,0\\n9-12=1,0\\n9-13=1,0\\n9-14=1,0\\n12-15=1,0\\n2-16=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose chain]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.3913,1.2718;0,0,i1\\nC=0.4839,-0.0000;0,0,i1\\nC=1.3913,-1.2718;0,0,i1\\nC=3.2063,-1.2718;0,0,i1\\nC=4.1139,0.0000;0,0,i1\\nO=3.2063,1.2718;0,0,i0\\nC=1.3912,2.7718;0,0,i2\\nO=4.1139,-1.4998;0,0,i1\\nO=3.2128,-2.7718;0,0,i1\\nO=1.3717,0.2280;0,0,i1\\nO=0.4839,-1.5000;0,0,i1\\nO=0.0922,3.5218;0,0,i1\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n1-7=1,1\\n5-8=1,2\\n4-9=1,2\\n3-10=1,1\\n2-11=1,2\\n7-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose alpha]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.3912,1.2718;0,0,i1\\nC=0.4839,-0.0000;0,0,i1\\nC=1.3912,-1.2718;0,0,i1\\nC=3.2063,-1.2718;0,0,i1\\nC=4.1139,0.0000;0,0,i1\\nO=3.2063,1.2718;0,0,i0\\nC=1.3911,2.7718;0,0,i2\\nO=4.1139,1.4997;0,0,i1\\nO=3.2128,-2.7718;0,0,i1\\nO=1.3717,0.2280;0,0,i1\\nO=0.4839,-1.5000;0,0,i1\\nO=0.0922,3.5218;0,0,i1\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n1-7=1,1\\n5-8=1,1\\n4-9=1,2\\n3-10=1,1\\n2-11=1,2\\n7-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose beta]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nO=2.2100,1.1549;0,0,i0\\nC=1.0000,0.2749;0,0,i0\\nC=1.4600,-1.1549;0,0,i1\\nC=3.4200,0.2749;0,0,i1\\nC=2.9600,-1.1549;0,0,i1\\nO=3.8434,-2.3672;0,0,i1\\nC=4.8460,0.7402;0,0,i2\\nO=5.1561,2.2078;0,0,i1\\nC=-0.4260,0.7402;0,0,i2\\nO=-1.5419,-0.2621;0,0,i1\\nO=0.7658,1.7566;0,0,i1\\nO=0.5765,-2.3672;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=1,1\\n4-7=1,2\\n7-8=1,0\\n2-9=1,2\\n9-10=1,0\\n2-11=1,1\\n3-12=1,2\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[fructose alpha]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nO=2.2100,1.1549;0,0,i0\\nC=1.0000,0.2749;0,0,i0\\nC=1.4600,-1.1549;0,0,i1\\nC=3.4200,0.2749;0,0,i1\\nC=2.9600,-1.1549;0,0,i1\\nO=3.8434,-2.3672;0,0,i1\\nC=4.8460,0.7402;0,0,i2\\nO=5.1561,2.2078;0,0,i1\\nO=-0.4260,0.7402;0,0,i1\\nC=0.7658,1.7566;0,0,i2\\nO=0.5765,-2.3672;0,0,i1\\nO=-0.6344,2.2946;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=1,1\\n4-7=1,2\\n7-8=1,0\\n2-9=1,2\\n2-10=1,1\\n3-11=1,2\\n10-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[fructose beta]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","import { Graph } from '../mol/Graph';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { GeomUtil } from '../util/Geom';\nimport { angleDiffPos, DEGRAD, norm2_xy, norm_xy, signum, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport class MetalLigate {\n    constructor(mol, metalAtom, ligandAttach) {\n        this.metalAtom = metalAtom;\n        this.ligandAttach = ligandAttach;\n        this.ligands = [];\n        this.mol = mol.clone();\n    }\n    generate() {\n        const { mol, metalAtom, ligandAttach, ligands } = this;\n        let g = Graph.fromMolecule(mol);\n        g.isolateNode(metalAtom - 1);\n        for (let cc of g.calculateComponentGroups()) {\n            Vec.addTo(cc, 1);\n            let anything = false;\n            for (let a of ligandAttach)\n                if (cc.indexOf(a) >= 0) {\n                    anything = true;\n                    break;\n                }\n            if (!anything)\n                continue;\n            let lig = { atoms: cc, attach: [] };\n            lig.atoms = cc;\n            let anyAttached = false;\n            for (let a of lig.atoms)\n                if (mol.findBond(a, metalAtom) > 0) {\n                    anyAttached = true;\n                    break;\n                }\n            for (let a of lig.atoms) {\n                let bonded = mol.findBond(a, metalAtom) > 0;\n                if (bonded || (!anyAttached && ligandAttach.includes(a)))\n                    lig.attach.push(a);\n            }\n            ligands.push(lig);\n            for (let a of lig.attach)\n                if (mol.findBond(a, metalAtom) == 0)\n                    this.makeLigandBond(a);\n        }\n        if (ligands.length == 0)\n            throw new Error('No ligand atoms');\n        let otherLigands = mol.atomAdjList(metalAtom);\n        for (let lig of ligands)\n            otherLigands = Vec.exclude(otherLigands, lig.attach);\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let otherTheta = new Array(otherLigands.length);\n        for (let n = 0; n < otherLigands.length; n++)\n            otherTheta[n] = Math.atan2(mol.atomY(otherLigands[n]) - my, mol.atomX(otherLigands[n]) - mx);\n        for (let lig of ligands) {\n            if (lig.attach.length == 1) {\n                let a = lig.attach[0];\n                lig.avgTheta = Math.atan2(mol.atomY(a) - my, mol.atomX(a) - mx);\n                this.orientLigand(lig);\n            }\n            else {\n                let theta = new Array(lig.attach.length);\n                for (let n = 0; n < lig.attach.length; n++) {\n                    let a = lig.attach[n];\n                    theta[n] = Math.atan2(mol.atomY(a) - my, mol.atomX(a) - mx);\n                }\n                theta = GeomUtil.sortAngles(theta);\n                let base = theta[0];\n                for (let n = 0; n < theta.length; n++)\n                    theta[n] = angleDiffPos(theta[n], base);\n                lig.avgTheta = base + Vec.sum(theta) / theta.length;\n                this.orientLigand(lig);\n            }\n        }\n        if (otherLigands.length == 0) {\n            ligands.sort((l1, l2) => signum(l1.avgTheta - l2.avgTheta));\n            this.arrangeLigandsFree(ligands);\n        }\n        else if (otherLigands.length == 1) {\n            ligands.sort((l1, l2) => {\n                let diff1 = angleDiffPos(l1.avgTheta, otherTheta[0]);\n                let diff2 = angleDiffPos(l2.avgTheta, otherTheta[0]);\n                return signum(diff1 - diff2);\n            });\n            this.arrangeLigandsRange(ligands, otherTheta[0], TWOPI, true);\n        }\n        else {\n            let otherOrder = Vec.idxSort(otherTheta);\n            for (let n = 0; n < otherOrder.length; n++) {\n                let nn = (n + 1) % otherOrder.length;\n                let theta = otherTheta[otherOrder[n]];\n                let extent = angleDiffPos(otherTheta[otherOrder[nn]], theta);\n                let batch = [];\n                for (let lig of ligands) {\n                    let diff = angleDiffPos(lig.avgTheta, theta);\n                    if (diff < extent)\n                        batch.push(lig);\n                }\n                if (batch.length == 0)\n                    continue;\n                batch.sort((l1, l2) => {\n                    let diff1 = angleDiffPos(l1.avgTheta, theta);\n                    let diff2 = angleDiffPos(l2.avgTheta, theta);\n                    return signum(diff1 - diff2);\n                });\n                this.arrangeLigandsRange(batch, theta, extent, true);\n            }\n        }\n        this.resolveClashes();\n        return mol;\n    }\n    makeLigandBond(ligAtom) {\n        const { mol, metalAtom } = this;\n        let mchg = mol.atomCharge(metalAtom), lchg = mol.atomCharge(ligAtom);\n        if (mchg > 0 && lchg < 0) {\n            mol.setAtomCharge(metalAtom, mchg - 1);\n            mol.setAtomCharge(ligAtom, lchg + 1);\n            mol.addBond(metalAtom, ligAtom, 1);\n            return;\n        }\n        if (mchg < 0 && lchg > 0) {\n            mol.setAtomCharge(metalAtom, mchg + 1);\n            mol.setAtomCharge(ligAtom, lchg - 1);\n            mol.addBond(metalAtom, ligAtom, 1);\n            return;\n        }\n        let order = 0;\n        if (mol.atomHExplicit(ligAtom) == Molecule.HEXPLICIT_UNKNOWN && mol.atomHydrogens(ligAtom) > 0)\n            order = 1;\n        mol.addBond(metalAtom, ligAtom, order);\n    }\n    orientLigand(lig) {\n        const { mol, metalAtom } = this;\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let lsz = lig.atoms.length, asz = lig.attach.length;\n        let idxAttach = new Array(asz);\n        for (let n = 0; n < asz; n++)\n            idxAttach[n] = lig.atoms.indexOf(lig.attach[n]);\n        let lx = new Array(lsz), ly = new Array(lsz);\n        let ax = MolUtil.arrayAtomX(mol), ay = MolUtil.arrayAtomY(mol);\n        let molExtent = Vec.max(ax) - Vec.min(ax) + Vec.max(ay) - Vec.min(ay);\n        let dx = molExtent * Math.cos(lig.avgTheta), dy = molExtent * Math.sin(lig.avgTheta);\n        for (let n = 0; n < lsz; n++) {\n            lx[n] = mol.atomX(lig.atoms[n]) + dx;\n            ly[n] = mol.atomY(lig.atoms[n]) + dy;\n        }\n        let cx = Vec.sum(lx) / lsz, cy = Vec.sum(ly) / lsz;\n        let weight = [];\n        for (let n = 0; n < lsz; n++) {\n            let closest = Number.POSITIVE_INFINITY;\n            for (let idx of idxAttach)\n                closest = Math.min(closest, norm2_xy(lx[n] - lx[idx], ly[n] - ly[idx]));\n            weight.push(1.0 / (1 + Math.sqrt(closest)));\n        }\n        let bestScore = Number.POSITIVE_INFINITY;\n        let bestLX = null, bestLY = null;\n        for (let theta = 0; theta < 360; theta += 15) {\n            let cosTheta = Math.cos(theta * DEGRAD), sinTheta = Math.sin(theta * DEGRAD);\n            let rx = new Array(lsz), ry = new Array(lsz);\n            let score = 0;\n            for (let n = 0; n < lsz; n++) {\n                let x = lx[n] - cx, y = ly[n] - cy;\n                rx[n] = cx + x * cosTheta - y * sinTheta;\n                ry[n] = cy + x * sinTheta + y * cosTheta;\n                let dist = norm_xy(rx[n] - mx, ry[n] - my);\n                if (lig.attach.indexOf(lig.atoms[n]) >= 0)\n                    score += dist;\n                else\n                    score -= dist * weight[n];\n            }\n            if (score < bestScore) {\n                bestScore = score;\n                bestLX = rx;\n                bestLY = ry;\n            }\n        }\n        lx = bestLX;\n        ly = bestLY;\n        if (asz == 1) {\n            dx = Molecule.IDEALBOND * Math.cos(lig.avgTheta);\n            dy = Molecule.IDEALBOND * Math.sin(lig.avgTheta);\n            Vec.addTo(lx, mx + dx - lx[idxAttach[0]]);\n            Vec.addTo(ly, my + dy - ly[idxAttach[0]]);\n        }\n        else {\n            let attTheta = new Array(asz), attDist = Vec.numberArray(0, asz), attDX = Vec.numberArray(0, asz), attDY = Vec.numberArray(0, asz);\n            for (let n = 0; n < asz; n++) {\n                let ox = lx[idxAttach[n]] - mx, oy = ly[idxAttach[n]] - my;\n                attTheta[n] = Math.atan2(oy, ox);\n                if (asz > 2) {\n                    attDist[n] = norm_xy(ox, oy);\n                    attDX[n] = ox / attDist[n];\n                    attDY[n] = oy / attDist[n];\n                }\n            }\n            Vec.addTo(attDist, -Vec.min(attDist));\n            let orderAttach = GeomUtil.idxSortAngles(attTheta);\n            let srcX = new Array(asz), srcY = new Array(asz);\n            let dstX = new Array(asz), dstY = new Array(asz);\n            let dtheta = 45 * DEGRAD / (asz - 1), theta = lig.avgTheta - 0.5 * dtheta;\n            for (let n = 0; n < asz; n++) {\n                srcX[n] = lx[idxAttach[orderAttach[n]]];\n                srcY[n] = ly[idxAttach[orderAttach[n]]];\n                dstX[n] = mx + Molecule.IDEALBOND * Math.cos(theta) + attDist[n] * attDX[n];\n                dstY[n] = my + Molecule.IDEALBOND * Math.sin(theta) + attDist[n] * attDY[n];\n                theta += dtheta / (asz - 1);\n            }\n            let tfm = GeomUtil.superimpose(srcX, srcY, dstX, dstY);\n            for (let n = 0; n < lsz; n++) {\n                let [x, y] = GeomUtil.applyAffine(lx[n], ly[n], tfm);\n                lx[n] = x;\n                ly[n] = y;\n            }\n        }\n        for (let n = 0; n < lsz; n++)\n            mol.setAtomPos(lig.atoms[n], lx[n], ly[n]);\n    }\n    arrangeLigandsFree(batch) {\n        if (batch.length == 1)\n            return;\n        let refTheta = Vec.last(batch).avgTheta;\n        refTheta += 0.5 * angleDiffPos(Vec.first(batch).avgTheta, refTheta);\n        this.arrangeLigandsRange(batch, refTheta, TWOPI, false);\n    }\n    arrangeLigandsRange(batch, refTheta, refSpan, bounded) {\n        const { mol, metalAtom } = this;\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let bsz = batch.length;\n        let thetaMin = new Array(bsz), thetaSpan = new Array(bsz);\n        let ligandSpan = 0;\n        for (let n = 0; n < bsz; n++) {\n            let [theta1, theta2] = this.determineThetaBounds(batch[n]);\n            thetaMin[n] = theta1;\n            thetaSpan[n] = angleDiffPos(theta2, theta1);\n            ligandSpan += thetaSpan[n];\n        }\n        let residual = (refSpan - ligandSpan) / (bsz + (bounded ? 1 : 0));\n        let theta = refTheta + (bounded ? residual : 0.5 * residual);\n        for (let n = 0; n < bsz; n++) {\n            let rotTheta = theta - thetaMin[n];\n            let cosTheta = Math.cos(rotTheta), sinTheta = Math.sin(rotTheta);\n            for (let a of batch[n].atoms) {\n                let x = mol.atomX(a) - mx, y = mol.atomY(a) - my;\n                mol.setAtomPos(a, mx + x * cosTheta - y * sinTheta, my + x * sinTheta + y * cosTheta);\n            }\n            theta += thetaSpan[n] + residual;\n        }\n    }\n    determineThetaBounds(lig) {\n        const { mol, metalAtom } = this;\n        let theta = [];\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        for (let n = 0; n < lig.attach.length; n++) {\n            let x = mol.atomX(lig.attach[n]) - mx;\n            let y = mol.atomY(lig.attach[n]) - my;\n            theta.push(Math.atan2(y, x));\n        }\n        Vec.sort(theta);\n        let bestScore = Number.POSITIVE_INFINITY, bestMin = 0, bestMax = 0;\n        for (let n = 0; n < theta.length; n++) {\n            let score = 0;\n            for (let i = 0; i < theta.length - 1; i++)\n                score += angleDiffPos(theta[i + 1], theta[i]);\n            if (score < bestScore) {\n                bestScore = score;\n                bestMin = Vec.first(theta);\n                bestMax = Vec.last(theta);\n            }\n            theta.push(theta.shift());\n        }\n        return [bestMin, bestMax];\n    }\n    resolveClashes() {\n        const { mol, metalAtom, ligands } = this;\n        const na = mol.numAtoms, nb = mol.numBonds, lsz = this.ligands.length;\n        let ablk = Vec.numberArray(-1, na), bblk = Vec.numberArray(-1, nb);\n        for (let n = 1; n <= na; n++)\n            if (mol.atomConnComp(n) == mol.atomConnComp(metalAtom))\n                ablk[n - 1] = 0;\n        for (let n = 0; n < lsz; n++)\n            for (let a of ligands[n].atoms)\n                ablk[a - 1] = n + 1;\n        for (let n = 1; n <= nb; n++) {\n            let blk1 = ablk[mol.bondFrom(n) - 1], blk2 = ablk[mol.bondTo(n) - 1];\n            if (blk1 < 0 || blk2 < 0) { }\n            else if (blk1 == blk2)\n                bblk[n - 1] = blk1;\n        }\n        let bumpDX = new Array(lsz), bumpDY = new Array(lsz);\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        for (let n = 0; n < lsz; n++) {\n            let lig = ligands[n];\n            let dx = 0, dy = 0;\n            for (let a of lig.attach) {\n                dx += mol.atomX(a) - mx;\n                dy += mol.atomY(a) - my;\n            }\n            dx /= lig.attach.length;\n            dy /= lig.attach.length;\n            let invDist = 1.0 / norm_xy(dx, dy);\n            bumpDX[n] = dx * 0.5 * invDist;\n            bumpDY[n] = dy * 0.5 * invDist;\n        }\n        const CLOSE_SQ = sqr(0.5);\n        for (let count = 0; count < 12; count++) {\n            let tainted = Vec.booleanArray(false, lsz);\n            outer: for (let i = 0; i < na - 1; i++) {\n                if (ablk[i] < 0)\n                    continue;\n                for (let j = i + 1; j < na; j++)\n                    if (ablk[j] >= 0 && ablk[j] != ablk[i]) {\n                        if (norm2_xy(mol.atomX(i + 1) - mol.atomX(j + 1), mol.atomY(i + 1) - mol.atomY(j + 1)) < CLOSE_SQ) {\n                            if (ablk[i] > 0)\n                                tainted[ablk[i] - 1] = true;\n                            if (ablk[j] > 0)\n                                tainted[ablk[j] - 1] = true;\n                        }\n                        if (Vec.allTrue(tainted))\n                            break outer;\n                    }\n            }\n            if (Vec.anyFalse(tainted))\n                outer: for (let i = 0; i < nb - 1; i++) {\n                    if (bblk[i] < 0)\n                        continue;\n                    let x1 = mol.atomX(mol.bondFrom(i + 1)), y1 = mol.atomY(mol.bondFrom(i + 1));\n                    let x2 = mol.atomX(mol.bondTo(i + 1)), y2 = mol.atomY(mol.bondTo(i + 1));\n                    for (let j = i + 1; j < nb; j++)\n                        if (bblk[j] >= 0 && bblk[j] != bblk[i]) {\n                            let x3 = mol.atomX(mol.bondFrom(j + 1)), y3 = mol.atomY(mol.bondFrom(j + 1));\n                            let x4 = mol.atomX(mol.bondTo(j + 1)), y4 = mol.atomY(mol.bondTo(j + 1));\n                            if (GeomUtil.doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4)) {\n                                if (bblk[i] > 0)\n                                    tainted[bblk[i] - 1] = true;\n                                if (bblk[j] > 0)\n                                    tainted[bblk[j] - 1] = true;\n                            }\n                            if (Vec.allTrue(tainted))\n                                break outer;\n                        }\n                }\n            if (Vec.allFalse(tainted))\n                break;\n            for (let n = 0; n < lsz; n++)\n                if (tainted[n]) {\n                    for (let a of ligands[n].atoms) {\n                        mol.setAtomPos(a, mol.atomX(a) + bumpDX[n], mol.atomY(a) + bumpDY[n]);\n                    }\n                }\n        }\n    }\n}\n//# sourceMappingURL=MetalLigate.js.map","import { BondArtifact } from '../mol/BondArtifact';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { Graph } from '../mol/Graph';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock } from '../mol/PolymerBlock';\nimport { SketchUtil } from '../mol/SketchUtil';\nimport { angleDiff, DEGRAD, norm_xy, RADDEG } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport class FusionPermutation {\n    constructor() {\n        this.attdist = 0;\n        this.guided = false;\n        this.bridged = false;\n        this.scoreModifier = 0;\n        this.chainSelect = 0;\n    }\n}\nclass TemplateFusion {\n    constructor(mol, templ, abbrev) {\n        this.mol = mol;\n        this.templ = templ;\n        this.abbrev = abbrev;\n        this.perms = [];\n        this.numAttach = 0;\n        this.withGuideOnly = false;\n        this.guidetempl = null;\n        this.guideidx = [];\n        this.guideadj = [];\n        this.timeLimit = 5.0;\n        let artif1 = new BondArtifact(mol), artif2 = new BondArtifact(templ);\n        artif2.harmoniseNumbering(artif1);\n        artif2.rewriteMolecule();\n        let poly1 = new PolymerBlock(mol), poly2 = new PolymerBlock(templ);\n        poly2.harmoniseNumbering(poly1);\n        poly2.rewriteMolecule();\n        this.huntForGuides();\n    }\n    permuteNone() {\n        let numAttach = 0;\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        if (oldmol.numAtoms > 0) {\n            let oldbox = oldmol.boundary(), newbox = newmol.boundary();\n            let dx = oldbox.maxX() + 1 - newbox.minX();\n            let dy = 0.5 * (oldbox.minY() + oldbox.maxY()) - 0.5 * (newbox.minY() + newbox.maxY());\n            CoordUtil.translateMolecule(newmol, dx, dy);\n        }\n        else {\n            let newbox = newmol.boundary();\n            CoordUtil.translateMolecule(newmol, -newbox.midX(), -newbox.midY());\n        }\n        let oldbox = oldmol.boundary(), newbox = newmol.boundary();\n        let cx = newbox.midX(), cy = newbox.midY();\n        let ROTN = [0, 30, 45, 60, 90, 120, 135, 150, 180, 210, 225, 240, 270, 300, 315, 330];\n        duplicate: for (let n = 0; n < ROTN.length; n++) {\n            let rotmol = newmol.clone();\n            CoordUtil.rotateMolecule(rotmol, -ROTN[n] * DEGRAD, cx, cy);\n            for (let i = 0; i < this.perms.length; i++)\n                if (CoordUtil.sketchEquivalent(rotmol, this.perms[i].display))\n                    continue duplicate;\n            let p = new FusionPermutation();\n            p.mol = oldmol.clone();\n            p.mol.append(rotmol);\n            p.display = rotmol;\n            p.srcidx = this.sourceIndex(p.mol, oldmol);\n            p.attdist = 0;\n            p.guided = false;\n            this.perms.push(p);\n        }\n    }\n    permuteAtom(atom) {\n        this.numAttach = 1;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            for (let n = 0; n < this.guideidx.length; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeGuidedOne(newperms, oldmol, this.guidetempl, atom, this.guideidx[n]);\n                this.composeGuidedOne(newperms, oldmol, fliptempl, atom, this.guideidx[n]);\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numAtoms; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeDirectOne(newperms, oldmol, newmol, atom, n);\n                this.composeDirectOne(newperms, oldmol, flipmol, atom, n);\n                this.composeBridge(newperms, oldmol, newmol, atom, n);\n                this.composeBridge(newperms, oldmol, flipmol, atom, n);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    permuteBond(a1, a2) {\n        this.numAttach = 2;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            for (let i = 0; i < this.guideidx.length; i++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                let g1 = this.guideidx[i];\n                let adj = this.guidetempl.atomAdjList(g1);\n                for (let j = 0; j < adj.length; j++) {\n                    let g2 = adj[j];\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a1, a2, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a2, a1, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a1, a2, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a2, a1, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a1, a2, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a2, a1, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a1, a2, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a2, a1, g1, g2, false);\n                }\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numBonds; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                let nfr = newmol.bondFrom(n), nto = newmol.bondTo(n);\n                this.composeDirectTwo(newperms, oldmol, newmol, a1, a2, nfr, nto);\n                this.composeDirectTwo(newperms, oldmol, flipmol, a1, a2, nfr, nto);\n                this.composeDirectTwo(newperms, oldmol, newmol, a1, a2, nto, nfr);\n                this.composeDirectTwo(newperms, oldmol, flipmol, a1, a2, nto, nfr);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    permuteMulti(atoms) {\n        this.numAttach = atoms.length;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            if (this.guideidx.length == atoms.length) {\n                this.composeGuidedMulti(newperms, oldmol, this.guidetempl, atoms, this.guideidx, true);\n                this.composeGuidedMulti(newperms, oldmol, fliptempl, atoms, this.guideidx, true);\n            }\n            if (this.guideadj.length == atoms.length) {\n                this.composeGuidedMulti(newperms, oldmol, this.guidetempl, atoms, this.guideadj, false);\n                this.composeGuidedMulti(newperms, oldmol, fliptempl, atoms, this.guideadj, false);\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numAtoms; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeDirectMulti(newperms, oldmol, newmol, atoms, n);\n                this.composeDirectMulti(newperms, oldmol, flipmol, atoms, n);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    huntForGuides() {\n        this.guideidx = [];\n        this.guideadj = [];\n        for (let n = 1; n <= this.templ.numAtoms; n++)\n            if (this.templ.atomElement(n) == 'X' && this.templ.atomAdjCount(n) > 0) {\n                this.guideidx.push(n);\n                let adj = this.templ.atomAdjList(n);\n                for (let i = 0; i < adj.length; i++)\n                    if (this.guideadj.indexOf(adj[i]) < 0)\n                        this.guideadj.push(adj[i]);\n            }\n        if (this.guideidx.length > 0) {\n            this.guidetempl = this.templ.clone();\n            for (let n = this.guideidx.length - 1; n >= 0; n--)\n                this.templ.deleteAtomAndBonds(this.guideidx[n]);\n        }\n    }\n    composeDirectOne(list, oldmol, newmol, o1, n1) {\n        let otheta = SketchUtil.primeDirections(oldmol, o1);\n        let ntheta = SketchUtil.primeDirections(newmol, n1);\n        let ocurrent = CoordUtil.atomBondAngles(oldmol, o1);\n        let ncurrent = CoordUtil.atomBondAngles(newmol, n1);\n        let theta1 = [], theta2 = [], scoreMod = [];\n        for (let i = 0; i < ocurrent.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                theta1.push(ocurrent[i]);\n                theta2.push(ntheta[j]);\n                scoreMod.push(-51);\n            }\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ncurrent.length; j++) {\n                theta1.push(otheta[i]);\n                theta2.push(ncurrent[j]);\n                scoreMod.push(0);\n            }\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                theta1.push(otheta[i]);\n                theta2.push(ntheta[j]);\n                scoreMod.push(0);\n            }\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1), nx = newmol.atomX(n1), ny = newmol.atomY(n1);\n        for (let n = 0; n < theta1.length; n++) {\n            let dth = angleDiff(theta1[n], theta2[n]);\n            let frag = newmol.clone();\n            CoordUtil.translateMolecule(frag, ox - nx, oy - ny);\n            CoordUtil.rotateMolecule(frag, dth, ox, oy);\n            let pmol = oldmol.clone();\n            let osz = pmol.numAtoms;\n            pmol.append(frag);\n            let srcidx = this.sourceIndex(pmol, oldmol);\n            SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n            if (pmol.numAtoms == osz)\n                continue;\n            let p = new FusionPermutation();\n            p.mol = pmol;\n            p.display = frag;\n            p.srcidx = srcidx;\n            p.molidx = [o1];\n            p.temidx = [n1];\n            p.attdist = bfs[n1 - 1];\n            p.guided = false;\n            p.scoreModifier = scoreMod[n];\n            this.removeExtraGuides(p, oldmol);\n            list.push(p);\n        }\n    }\n    composeDirectTwo(list, oldmol, newmol, o1, o2, n1, n2) {\n        let oth = Math.atan2(oldmol.atomY(o2) - oldmol.atomY(o1), oldmol.atomX(o2) - oldmol.atomX(o1));\n        let nth = Math.atan2(newmol.atomY(n2) - newmol.atomY(n1), newmol.atomX(n2) - newmol.atomX(n1));\n        let cx = 0.5 * (oldmol.atomX(o1) + oldmol.atomX(o2)), cy = 0.5 * (oldmol.atomY(o1) + oldmol.atomY(o2));\n        let frag = newmol.clone();\n        CoordUtil.translateMolecule(frag, cx - 0.5 * (newmol.atomX(n1) + newmol.atomX(n2)), cy - 0.5 * (newmol.atomY(n1) + newmol.atomY(n2)));\n        CoordUtil.rotateMolecule(frag, oth - nth, cx, cy);\n        frag.setAtomPos(n1, oldmol.atomX(o1), oldmol.atomY(o1));\n        frag.setAtomPos(n2, oldmol.atomX(o2), oldmol.atomY(o2));\n        let pmol = oldmol.clone();\n        let osz = pmol.numAtoms;\n        pmol.append(frag);\n        let srcidx = this.sourceIndex(pmol, oldmol);\n        SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n        if (pmol.numAtoms == osz)\n            return;\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        let p = new FusionPermutation();\n        p.mol = pmol;\n        p.display = frag;\n        p.srcidx = srcidx;\n        p.molidx = [o1, o2];\n        p.temidx = [n1, n2];\n        p.attdist = Math.min(bfs[n1 - 1], bfs[n2 - 1]);\n        p.guided = false;\n        this.removeExtraGuides(p, oldmol);\n        list.push(p);\n    }\n    composeDirectMulti(list, oldmol, newmol, oidx, n1) {\n        let frag = newmol.clone();\n        let x0 = oldmol.atomX(oidx[0]), y0 = oldmol.atomY(oidx[0]);\n        CoordUtil.translateMolecule(frag, x0 - frag.atomX(n1), y0 - frag.atomY(n1));\n        let ox = oldmol.atomX(oidx[1]) - x0, oy = oldmol.atomY(oidx[1]) - y0;\n        let otheta = Math.atan2(oy, ox), orad = norm_xy(ox, oy);\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(1);\n        let nidx = [];\n        for (let n2 = 1; n2 <= frag.numAtoms; n2++)\n            if (n1 != n2) {\n                let nx = frag.atomX(n2) - frag.atomX(n1), ny = frag.atomY(n2) - frag.atomY(n1), nrad = norm_xy(nx, ny);\n                if (Math.abs(nrad - orad) > 0.1)\n                    continue;\n                let ntheta = Math.atan2(ny, nx);\n                CoordUtil.rotateMolecule(frag, otheta - ntheta, x0, y0);\n                nidx = [n1, n2];\n                for (let i = 2; i < oidx.length; i++) {\n                    let hit = false;\n                    for (let j = 1; j <= frag.numAtoms; j++)\n                        if (nidx.indexOf(j) < 0)\n                            if (norm_xy(oldmol.atomX(oidx[i]) - frag.atomX(j), oldmol.atomY(oidx[i]) - frag.atomY(j)) < 0.1 * 0.1) {\n                                hit = true;\n                                nidx.push(j);\n                                break;\n                            }\n                    if (!hit)\n                        break;\n                }\n                if (nidx.length < oidx.length)\n                    continue;\n                let lowbfs = bfs.length;\n                for (let n = 0; n < nidx.length; n++)\n                    lowbfs = Math.min(lowbfs, bfs[nidx[n] - 1]);\n                let dx = 0, dy = 0;\n                for (let n = 0; n < oidx.length; n++) {\n                    dx += oldmol.atomX(oidx[n]) - frag.atomX(nidx[n]);\n                    dy += oldmol.atomY(oidx[n]) - frag.atomY(nidx[n]);\n                }\n                let invsz = 1.0 / oidx.length;\n                dx *= invsz;\n                dy *= invsz;\n                CoordUtil.translateMolecule(frag, dx, dy);\n                let pmol = oldmol.clone();\n                let osz = pmol.numAtoms;\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                for (let n = 0; n < nidx.length; n++) {\n                    let x = pmol.atomX(oidx[n]), y = pmol.atomY(oidx[n]);\n                    pmol.setAtomPos(osz + nidx[n], x, y);\n                }\n                SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n                if (pmol.numAtoms == osz)\n                    continue;\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag.clone();\n                p.srcidx = srcidx;\n                p.molidx = oidx.slice(0);\n                p.temidx = nidx.slice(0);\n                p.attdist = Math.min(bfs[n1 - 1], bfs[n2 - 1]);\n                p.guided = false;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    composeBridge(list, oldmol, newmol, o1, n1) {\n        let busy1 = oldmol.atomRingBlock(o1) != 0 || oldmol.atomAdjCount(o1) >= 3;\n        let busy2 = newmol.atomRingBlock(n1) != 0 || newmol.atomAdjCount(n1) >= 3;\n        if (!busy1 || !busy2)\n            return;\n        let otheta = SketchUtil.primeDirections(oldmol, o1);\n        let ntheta = SketchUtil.primeDirections(newmol, n1);\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1), nx = newmol.atomX(n1), ny = newmol.atomY(n1);\n                let dx = Molecule.IDEALBOND * Math.cos(otheta[i]), dy = Molecule.IDEALBOND * Math.sin(otheta[i]);\n                let dth = angleDiff(otheta[i], Math.PI + ntheta[j]);\n                let frag = newmol.clone();\n                CoordUtil.translateMolecule(frag, ox - nx + dx, oy - ny + dy);\n                CoordUtil.rotateMolecule(frag, dth, ox + dx, oy + dy);\n                let pmol = oldmol.clone();\n                let att = pmol.numAtoms + n1, osz = pmol.numAtoms;\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                pmol.addBond(o1, att, 1);\n                att = frag.addAtom('C', ox, oy);\n                frag.addBond(n1, att, 1);\n                SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n                if (pmol.numAtoms == osz)\n                    continue;\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag;\n                p.srcidx = srcidx;\n                p.molidx = [o1];\n                p.temidx = [att];\n                p.attdist = bfs[n1 - 1];\n                p.bridged = true;\n                p.guided = false;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    composeGuidedOne(list, oldmol, newmol, oidx, gidx) {\n        if (newmol.atomAdjCount(gidx) == 0)\n            return;\n        let otheta = SketchUtil.primeDirections(oldmol, oidx);\n        if (newmol.atomAdjCount(gidx) > 1 && oldmol.atomAdjCount(oidx) > 0) {\n            let ox = 0, oy = 0;\n            let adj = oldmol.atomAdjList(oidx);\n            for (let n = 0; n < adj.length; n++) {\n                ox += oldmol.atomX(adj[n]) - oldmol.atomX(oidx);\n                oy += oldmol.atomY(adj[n]) - oldmol.atomY(oidx);\n            }\n            let ang = Math.atan2(oy, ox);\n            let unique = true;\n            for (let n = 0; n < otheta.length; n++)\n                if (Math.abs(angleDiff(ang, otheta[n])) < 3 * RADDEG) {\n                    unique = false;\n                    break;\n                }\n            if (unique)\n                otheta.push(ang);\n        }\n        let gx = newmol.atomX(gidx), gy = newmol.atomY(gidx);\n        let dx = 0, dy = 0;\n        let adj = newmol.atomAdjList(gidx);\n        for (let n = 0; n < adj.length; n++) {\n            dx += newmol.atomX(adj[n]) - gx;\n            dy += newmol.atomY(adj[n]) - gy;\n        }\n        dx /= adj.length;\n        dy /= adj.length;\n        let ntheta = Math.atan2(dy, dx);\n        let homoPenalty = 0;\n        if (adj.length == 1) {\n            let oel = oldmol.atomElement(oidx), nel = newmol.atomElement(adj[0]);\n            if (oel != 'C' && oel == nel)\n                homoPenalty = 1;\n        }\n        for (let n = 0; n < otheta.length; n++) {\n            let frag = newmol.clone();\n            if (this.guideidx.length == 2) {\n                for (let i = 1; i <= frag.numAtoms; i++)\n                    if (i != gidx && frag.atomElement(i) == 'X') {\n                        frag.setAtomElement(i, TemplateFusion.RESERVED_GUIDESYMBOL);\n                        break;\n                    }\n            }\n            CoordUtil.rotateMolecule(frag, otheta[n] - ntheta, gx, gy);\n            CoordUtil.translateMolecule(frag, oldmol.atomX(oidx) - gx, oldmol.atomY(oidx) - gy);\n            let pmol = oldmol.clone();\n            let osz = pmol.numAtoms;\n            pmol.append(frag);\n            let srcidx = this.sourceIndex(pmol, oldmol);\n            SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n            if (pmol.numAtoms == osz)\n                continue;\n            let sel = 0;\n            for (let i = 1; i <= pmol.numAtoms; i++)\n                if (pmol.atomElement(i) == TemplateFusion.RESERVED_GUIDESYMBOL) {\n                    let padj = pmol.atomAdjList(i);\n                    if (padj.length == 1) {\n                        sel = padj[0];\n                        if (sel > i)\n                            sel--;\n                    }\n                    pmol.deleteAtomAndBonds(i);\n                    srcidx.splice(i - 1, 1);\n                    break;\n                }\n            let p = new FusionPermutation();\n            p.mol = pmol;\n            p.display = frag;\n            p.srcidx = srcidx;\n            p.molidx = [oidx];\n            p.temidx = [gidx];\n            p.attdist = 0;\n            p.guided = true;\n            p.scoreModifier = homoPenalty;\n            p.chainSelect = sel;\n            this.removeExtraGuides(p, oldmol);\n            list.push(p);\n        }\n    }\n    composeGuidedTwo(list, oldmol, newmol, o1, o2, gidx, nidx, snapToGuide) {\n        let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1);\n        let gx = newmol.atomX(gidx), gy = newmol.atomY(gidx);\n        let nx = newmol.atomX(nidx), ny = newmol.atomY(nidx);\n        let otheta = Math.atan2(oldmol.atomY(o2) - oy, oldmol.atomX(o2) - ox);\n        let gtheta = Math.atan2(ny - gy, nx - gx);\n        let isGuideOnTerminal = oldmol.atomAdjCount(o1) == 1;\n        let pmol = oldmol.clone(), frag = newmol.clone();\n        CoordUtil.rotateMolecule(frag, otheta - gtheta, gx, gy);\n        if (snapToGuide) {\n            CoordUtil.translateMolecule(frag, ox - gx, oy - gy);\n            pmol.setAtomPos(o2, frag.atomX(nidx), frag.atomY(nidx));\n        }\n        else {\n            CoordUtil.translateMolecule(frag, oldmol.atomX(o2) - frag.atomX(nidx), oldmol.atomY(o2) - frag.atomY(nidx));\n            frag.setAtomPos(gidx, ox, oy);\n        }\n        let osz = pmol.numAtoms;\n        pmol.append(frag);\n        let srcidx = this.sourceIndex(pmol, oldmol);\n        SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n        if (pmol.numAtoms == osz)\n            return;\n        let p = new FusionPermutation();\n        p.mol = pmol;\n        p.display = frag;\n        p.srcidx = srcidx;\n        p.molidx = [o1, o2];\n        p.temidx = [gidx, nidx];\n        p.attdist = isGuideOnTerminal ? 1 : 0;\n        p.guided = true;\n        this.removeExtraGuides(p, oldmol);\n        list.push(p);\n    }\n    composeGuidedMulti(list, oldmol, newmol, oidx, gidx, nudgenew) {\n        let cx1 = 0, cy1 = 0, cx2 = 0, cy2 = 0;\n        for (let n = 0; n < oidx.length; n++) {\n            cx1 += oldmol.atomX(oidx[n]);\n            cy1 += oldmol.atomY(oidx[n]);\n        }\n        for (let n = 0; n < gidx.length; n++) {\n            cx2 += newmol.atomX(gidx[n]);\n            cy2 += newmol.atomY(gidx[n]);\n        }\n        cx1 /= oidx.length;\n        cy1 /= oidx.length;\n        cx2 /= gidx.length;\n        cy2 /= gidx.length;\n        let osz = oldmol.numAtoms;\n        for (let i = 0; i < oidx.length; i++)\n            for (let j = 0; j < gidx.length; j++) {\n                let pmol = oldmol.clone(), frag = newmol.clone();\n                let th1 = Math.atan2(pmol.atomY(oidx[i]) - cy1, pmol.atomX(oidx[i]) - cx1);\n                let th2 = Math.atan2(frag.atomY(gidx[j]) - cy2, frag.atomX(gidx[j]) - cx2);\n                CoordUtil.rotateMolecule(frag, th1 - th2, cx2, cy2);\n                CoordUtil.translateMolecule(frag, cx1 - cx2, cy1 - cy2);\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                let midx = Vec.numberArray(0, gidx.length), tidx = gidx.slice(0);\n                Vec.sort(tidx);\n                let mask = Vec.booleanArray(false, osz);\n                for (let g = tidx.length - 1; g >= 0; g--) {\n                    let gatom = tidx[g] + osz;\n                    let closest = 0, closeDSQ = 0;\n                    for (let n = 0; n < oidx.length; n++)\n                        if (!mask[oidx[n] - 1]) {\n                            let dx = pmol.atomX(oidx[n]) - pmol.atomX(gatom), dy = pmol.atomY(oidx[n]) - pmol.atomY(gatom);\n                            let dsq = norm_xy(dx, dy);\n                            if (closest == 0 || dsq < closeDSQ) {\n                                closest = oidx[n];\n                                closeDSQ = dsq;\n                            }\n                        }\n                    if (!nudgenew) {\n                        let dsq = norm_xy(pmol.atomX(gatom) - pmol.atomX(closest), pmol.atomY(gatom) - pmol.atomY(closest));\n                        if (dsq > 0.1 * 0.1) {\n                            let num = frag.addAtom('C', pmol.atomX(closest), pmol.atomY(closest));\n                            frag.addBond(num, tidx[g], 0);\n                        }\n                        pmol.setAtomPos(closest, pmol.atomX(gatom), pmol.atomY(gatom));\n                    }\n                    midx[g] = closest;\n                    mask[closest - 1] = true;\n                    let adj = pmol.atomAdjList(gatom);\n                    for (let n = 0; n < adj.length; n++) {\n                        let b = pmol.findBond(gatom, adj[n]);\n                        pmol.addBond(closest, adj[n], pmol.bondOrder(b), pmol.bondType(b));\n                    }\n                    pmol.deleteAtomAndBonds(gatom);\n                    srcidx.splice(gatom - 1, 1);\n                    frag.setAtomPos(tidx[g], pmol.atomX(closest), pmol.atomY(closest));\n                }\n                for (let n = pmol.numAtoms; n > osz; n--)\n                    if (pmol.atomElement(n) == 'X') {\n                        pmol.deleteAtomAndBonds(n);\n                        srcidx.splice(n - 1, 1);\n                        for (let k = 0; k < tidx.length; k++)\n                            if (n < tidx[k])\n                                tidx[k]--;\n                    }\n                for (let n = frag.numAtoms; n >= 1; n--)\n                    if (frag.atomElement(n) == 'X') {\n                        frag.setAtomElement(n, 'C');\n                    }\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag;\n                p.srcidx = srcidx;\n                p.molidx = midx;\n                p.temidx = tidx;\n                p.attdist = 0;\n                p.guided = true;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    affixRawPermutations(list) {\n        let npsz = list.length;\n        if (npsz == 0)\n            return;\n        let umask = Vec.booleanArray(true, npsz);\n        for (let i = 0; i < npsz - 1; i++)\n            if (umask[i]) {\n                let p1 = list[i];\n                for (let j = i + 1; j < npsz; j++)\n                    if (umask[j]) {\n                        let p2 = list[j];\n                        if (CoordUtil.sketchEquivalent(p1.mol, p2.mol)) {\n                            if (p1.scoreModifier + p1.attdist > p2.scoreModifier + p2.attdist) {\n                                list[i] = p2;\n                                list[j] = p1;\n                            }\n                            umask[j] = false;\n                        }\n                    }\n            }\n        let score = Vec.numberArray(0, npsz);\n        let numKeep = 0;\n        for (let n = 0; n < npsz; n++) {\n            if (umask[n]) {\n                score[n] = this.scorePermutation(list[n]);\n                if (score[n] < 1000)\n                    numKeep++;\n            }\n            else\n                score[n] = 0;\n        }\n        if (numKeep > 0)\n            for (let n = 0; n < npsz; n++)\n                if (umask[n] && score[n] >= 1000)\n                    umask[n] = false;\n        let uscore = [], uidx = [];\n        for (let n = 0; n < npsz; n++)\n            if (umask[n]) {\n                uscore.push(score[n]);\n                uidx.push(n);\n            }\n        let sidx = Vec.idxSort(uscore);\n        for (let n = 0; n < sidx.length; n++) {\n            let p = list[uidx[sidx[n]]];\n            if (p.guided) {\n                this.perms.push(p);\n            }\n        }\n        for (let n = 0; n < sidx.length; n++) {\n            let p = list[uidx[sidx[n]]];\n            if (!p.guided) {\n                this.perms.push(p);\n            }\n        }\n    }\n    removeExtraGuides(perm, oldmol) {\n        MolUtil.removeDuplicateBonds(perm.mol);\n        for (let n = perm.temidx.length - 1; n >= 0; n--) {\n            let el = perm.display.atomElement(perm.temidx[n]);\n            if (el != 'X' && el != TemplateFusion.RESERVED_GUIDESYMBOL)\n                continue;\n            perm.molidx.splice(n, 1);\n            perm.temidx.splice(n, 1);\n        }\n        for (let n = perm.display.numAtoms; n >= 1; n--) {\n            let el = perm.display.atomElement(n);\n            if (el != 'X' && el != TemplateFusion.RESERVED_GUIDESYMBOL)\n                continue;\n            let a = CoordUtil.atomAtPoint(oldmol, perm.display.atomX(n), perm.display.atomY(n));\n            if (a > 0)\n                perm.display.setAtomElement(n, 'C');\n            else {\n                perm.display.deleteAtomAndBonds(n);\n                for (let i = 0; i < perm.temidx.length; i++)\n                    if (perm.temidx[i] > n)\n                        perm.temidx[i]--;\n            }\n        }\n    }\n    scorePermutation(perm) {\n        let mol = this.mol, tmol = perm.display, tunion = perm.mol;\n        let score = 0.2 * perm.attdist + perm.scoreModifier;\n        score += CoordUtil.congestionMolecule(tunion, 1e-3);\n        score -= tunion.numAtoms;\n        let sz1 = mol.numAtoms, sz2 = tmol.numAtoms;\n        let mx1 = [], my1 = [], mx2 = [], my2 = [];\n        for (let n = 0; n < sz1; n++) {\n            mx1.push(mol.atomX(n + 1));\n            my1.push(mol.atomY(n + 1));\n        }\n        for (let n = 0; n < sz2; n++) {\n            mx2.push(tmol.atomX(n + 1));\n            my2.push(tmol.atomY(n + 1));\n        }\n        for (let i = 0; i < sz1; i++)\n            for (let j = 0; j < sz2; j++) {\n                if (norm_xy(mx1[i] - mx2[j], my1[i] - my2[j]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                    continue;\n                let contained = false;\n                for (let k = 0; k < perm.molidx.length; k++)\n                    if (perm.molidx[k] == i + 1 && perm.temidx[k] == j + 1) {\n                        contained = true;\n                        break;\n                    }\n                if (contained)\n                    continue;\n                score += 100;\n            }\n        if (!perm.guided)\n            for (let n = 0; n < perm.molidx.length; n++) {\n                let el = mol.atomElement(perm.molidx[n]);\n                if (el == 'C' || el == 'O' || el == 'S' || el == 'N' || el == 'P')\n                    continue;\n                let adj1 = mol.atomAdjList(perm.molidx[n]), adj2 = tmol.atomAdjList(perm.temidx[n]);\n                if (adj1.length + adj2.length >= 4)\n                    continue;\n                for (let i = 0; i < adj1.length; i++)\n                    for (let j = 0; j < adj2.length; j++) {\n                        let ai = adj1[i], aj = adj2[j];\n                        let bo1 = mol.bondOrder(mol.findBond(perm.molidx[n], ai));\n                        let bo2 = tmol.bondOrder(tmol.findBond(perm.temidx[n], aj));\n                        let wantTheta = 0;\n                        if ((bo1 == 1 && bo2 == 1) || (bo1 == 1 && bo2 == 2) || (bo1 == 2 && bo2 == 1))\n                            wantTheta = 120;\n                        else if ((bo1 == 2 && bo2 == 2) || (bo1 == 1 && bo2 == 3) || (bo1 == 3 && bo2 == 1))\n                            wantTheta = 180;\n                        else\n                            continue;\n                        let dx1 = mx1[ai - 1] - mx1[perm.molidx[n] - 1];\n                        let dy1 = my1[ai - 1] - my1[perm.molidx[n] - 1];\n                        let dx2 = mx2[aj - 1] - mx2[perm.temidx[n] - 1];\n                        let dy2 = my2[aj - 1] - my2[perm.temidx[n] - 1];\n                        let theta = Math.abs(angleDiff(Math.atan2(dy1, dx1), Math.atan2(dy2, dx2))) * RADDEG;\n                        if (Math.abs(theta - wantTheta) > 5)\n                            score += 50;\n                    }\n            }\n        for (let n = 1; n <= tunion.numAtoms; n++)\n            if (tunion.atomElement(n) == 'C' || tunion.atomElement(n) == 'N') {\n                let adjb = tunion.atomAdjBonds(n);\n                let totalBO = 0;\n                for (let i = 0; i < adjb.length; i++) {\n                    let bo = tunion.bondOrder(adjb[i]);\n                    totalBO += bo;\n                    if (bo == 0) {\n                        totalBO = 0;\n                        break;\n                    }\n                }\n                if (totalBO > 4)\n                    score += 1000;\n            }\n        if (perm.molidx.length >= 2) {\n            let mmask = Vec.booleanArray(false, sz1);\n            for (let n = 0; n < perm.molidx.length; n++)\n                mmask[perm.molidx[n] - 1] = true;\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n                if (!mmask[bfr - 1] || !mmask[bto - 1])\n                    continue;\n                let tfr = perm.molidx.indexOf(bfr), tto = perm.molidx.indexOf(bto);\n                let tn = tmol.findBond(perm.temidx[tfr], perm.temidx[tto]);\n                if (tn == 0)\n                    continue;\n                if (mol.bondOrder(n) != tmol.bondOrder(tn))\n                    score += 1;\n            }\n        }\n        return score;\n    }\n    sourceIndex(xmol, wmol) {\n        let idx = Vec.numberArray(0, xmol.numAtoms);\n        for (let n = wmol.numAtoms; n >= 1; n--)\n            idx[n - 1] = n;\n        return idx;\n    }\n    asMask(imask) {\n        let ret = Vec.booleanArray(false, imask.length);\n        for (let n = 0; n < imask.length; n++)\n            ret[n] = imask[n] != 0;\n        return ret;\n    }\n}\nTemplateFusion.RESERVED_GUIDESYMBOL = 'XXX';\nexport { TemplateFusion };\n//# sourceMappingURL=TemplateFusion.js.map","import { AbbrevContainer } from '../data/AbbrevContainer';\nimport { BondArtifact } from '../mol/BondArtifact';\nimport { Chemistry } from '../mol/Chemistry';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { Graph } from '../mol/Graph';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock } from '../mol/PolymerBlock';\nimport { QueryTypeAtom, QueryUtil } from '../mol/QueryUtil';\nimport { SketchUtil } from '../mol/SketchUtil';\nimport { angleDiff, angleNorm, DEGRAD, norm2_xy, norm_xy, RADDEG, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { MetalLigate } from './MetalLigate';\nimport { TemplateFusion } from './TemplateFusion';\nexport var ActivityType;\n(function (ActivityType) {\n    ActivityType[ActivityType[\"Delete\"] = 1] = \"Delete\";\n    ActivityType[ActivityType[\"Clear\"] = 2] = \"Clear\";\n    ActivityType[ActivityType[\"Copy\"] = 3] = \"Copy\";\n    ActivityType[ActivityType[\"Cut\"] = 4] = \"Cut\";\n    ActivityType[ActivityType[\"SelectAll\"] = 5] = \"SelectAll\";\n    ActivityType[ActivityType[\"SelectNone\"] = 6] = \"SelectNone\";\n    ActivityType[ActivityType[\"SelectPrevComp\"] = 7] = \"SelectPrevComp\";\n    ActivityType[ActivityType[\"SelectNextComp\"] = 8] = \"SelectNextComp\";\n    ActivityType[ActivityType[\"SelectSide\"] = 9] = \"SelectSide\";\n    ActivityType[ActivityType[\"SelectGrow\"] = 10] = \"SelectGrow\";\n    ActivityType[ActivityType[\"SelectShrink\"] = 11] = \"SelectShrink\";\n    ActivityType[ActivityType[\"SelectChain\"] = 12] = \"SelectChain\";\n    ActivityType[ActivityType[\"SelectSmRing\"] = 13] = \"SelectSmRing\";\n    ActivityType[ActivityType[\"SelectRingBlk\"] = 14] = \"SelectRingBlk\";\n    ActivityType[ActivityType[\"SelectCurElement\"] = 15] = \"SelectCurElement\";\n    ActivityType[ActivityType[\"SelectToggle\"] = 16] = \"SelectToggle\";\n    ActivityType[ActivityType[\"SelectUnCurrent\"] = 17] = \"SelectUnCurrent\";\n    ActivityType[ActivityType[\"Element\"] = 18] = \"Element\";\n    ActivityType[ActivityType[\"AtomPos\"] = 19] = \"AtomPos\";\n    ActivityType[ActivityType[\"Charge\"] = 20] = \"Charge\";\n    ActivityType[ActivityType[\"Connect\"] = 21] = \"Connect\";\n    ActivityType[ActivityType[\"Disconnect\"] = 22] = \"Disconnect\";\n    ActivityType[ActivityType[\"MetalLigate\"] = 23] = \"MetalLigate\";\n    ActivityType[ActivityType[\"BondOrder\"] = 24] = \"BondOrder\";\n    ActivityType[ActivityType[\"BondType\"] = 25] = \"BondType\";\n    ActivityType[ActivityType[\"BondGeom\"] = 26] = \"BondGeom\";\n    ActivityType[ActivityType[\"BondAtom\"] = 27] = \"BondAtom\";\n    ActivityType[ActivityType[\"BondSwitch\"] = 28] = \"BondSwitch\";\n    ActivityType[ActivityType[\"BondRotate\"] = 29] = \"BondRotate\";\n    ActivityType[ActivityType[\"BondAddTwo\"] = 30] = \"BondAddTwo\";\n    ActivityType[ActivityType[\"BondInsert\"] = 31] = \"BondInsert\";\n    ActivityType[ActivityType[\"Join\"] = 32] = \"Join\";\n    ActivityType[ActivityType[\"Nudge\"] = 33] = \"Nudge\";\n    ActivityType[ActivityType[\"NudgeLots\"] = 34] = \"NudgeLots\";\n    ActivityType[ActivityType[\"NudgeFar\"] = 35] = \"NudgeFar\";\n    ActivityType[ActivityType[\"Flip\"] = 36] = \"Flip\";\n    ActivityType[ActivityType[\"Scale\"] = 37] = \"Scale\";\n    ActivityType[ActivityType[\"Rotate\"] = 38] = \"Rotate\";\n    ActivityType[ActivityType[\"BondDist\"] = 39] = \"BondDist\";\n    ActivityType[ActivityType[\"AlignAngle\"] = 40] = \"AlignAngle\";\n    ActivityType[ActivityType[\"AlignRegular\"] = 41] = \"AlignRegular\";\n    ActivityType[ActivityType[\"AdjustTorsion\"] = 42] = \"AdjustTorsion\";\n    ActivityType[ActivityType[\"Move\"] = 43] = \"Move\";\n    ActivityType[ActivityType[\"Ring\"] = 44] = \"Ring\";\n    ActivityType[ActivityType[\"TemplateFusion\"] = 45] = \"TemplateFusion\";\n    ActivityType[ActivityType[\"AbbrevTempl\"] = 46] = \"AbbrevTempl\";\n    ActivityType[ActivityType[\"AbbrevGroup\"] = 47] = \"AbbrevGroup\";\n    ActivityType[ActivityType[\"AbbrevFormula\"] = 48] = \"AbbrevFormula\";\n    ActivityType[ActivityType[\"AbbrevClear\"] = 49] = \"AbbrevClear\";\n    ActivityType[ActivityType[\"AbbrevExpand\"] = 50] = \"AbbrevExpand\";\n    ActivityType[ActivityType[\"BondArtifactPath\"] = 51] = \"BondArtifactPath\";\n    ActivityType[ActivityType[\"BondArtifactRing\"] = 52] = \"BondArtifactRing\";\n    ActivityType[ActivityType[\"BondArtifactArene\"] = 53] = \"BondArtifactArene\";\n    ActivityType[ActivityType[\"BondArtifactClear\"] = 54] = \"BondArtifactClear\";\n    ActivityType[ActivityType[\"PolymerBlock\"] = 55] = \"PolymerBlock\";\n    ActivityType[ActivityType[\"AddHydrogens\"] = 56] = \"AddHydrogens\";\n    ActivityType[ActivityType[\"RemoveHydrogens\"] = 57] = \"RemoveHydrogens\";\n    ActivityType[ActivityType[\"QueryClear\"] = 58] = \"QueryClear\";\n    ActivityType[ActivityType[\"QueryCopy\"] = 59] = \"QueryCopy\";\n    ActivityType[ActivityType[\"QueryPaste\"] = 60] = \"QueryPaste\";\n    ActivityType[ActivityType[\"QuerySetAtom\"] = 61] = \"QuerySetAtom\";\n    ActivityType[ActivityType[\"QuerySetBond\"] = 62] = \"QuerySetBond\";\n    ActivityType[ActivityType[\"QueryBondAny\"] = 63] = \"QueryBondAny\";\n    ActivityType[ActivityType[\"SproutDirection\"] = 64] = \"SproutDirection\";\n})(ActivityType || (ActivityType = {}));\nexport class MoleculeActivity {\n    constructor(input, activity, param, owner) {\n        this.input = input;\n        this.activity = activity;\n        this.param = param;\n        this.owner = owner;\n        this.toClipboard = null;\n        this.output =\n            {\n                mol: null,\n                currentAtom: -1,\n                currentBond: -1,\n                selectedMask: null\n            };\n        let na = this.input.mol.numAtoms;\n        if (this.input.selectedMask == null)\n            this.input.selectedMask = Vec.booleanArray(false, na);\n        while (this.input.selectedMask.length < na)\n            this.input.selectedMask.push(false);\n        this.subjectMask = this.input.selectedMask.slice(0);\n        this.subjectLength = Vec.maskCount(this.subjectMask);\n        this.subjectIndex = [];\n        this.hasSelected = this.subjectLength > 0;\n        if (this.subjectLength == 0) {\n            if (this.input.currentAtom > 0) {\n                this.subjectLength = 1;\n                this.subjectMask[this.input.currentAtom - 1] = true;\n                this.subjectIndex = [this.input.currentAtom];\n            }\n            else if (this.input.currentBond > 0) {\n                let bfr = this.input.mol.bondFrom(this.input.currentBond), bto = this.input.mol.bondTo(this.input.currentBond);\n                let b1 = Math.min(bfr, bto), b2 = Math.max(bfr, bto);\n                this.subjectLength = 2;\n                this.subjectMask[b1 - 1] = true;\n                this.subjectMask[b2 - 1] = true;\n                this.subjectIndex = [b1, b2];\n            }\n        }\n        else {\n            this.subjectIndex = Vec.maskIdx(this.subjectMask);\n            Vec.addTo(this.subjectIndex, 1);\n        }\n    }\n    setOwner(owner) {\n        this.owner = owner;\n    }\n    evaluate() {\n        return true;\n    }\n    execute() {\n        var _a;\n        let param = this.param;\n        if (this.activity == ActivityType.Delete)\n            this.execDelete();\n        else if (this.activity == ActivityType.Clear)\n            this.execClear();\n        else if (this.activity == ActivityType.Copy)\n            this.execCopy(false);\n        else if (this.activity == ActivityType.Cut)\n            this.execCopy(true);\n        else if (this.activity == ActivityType.SelectAll)\n            this.execSelectAll(true);\n        else if (this.activity == ActivityType.SelectNone)\n            this.execSelectAll(false);\n        else if (this.activity == ActivityType.SelectPrevComp)\n            this.execSelectComp(-1);\n        else if (this.activity == ActivityType.SelectNextComp)\n            this.execSelectComp(1);\n        else if (this.activity == ActivityType.SelectSide)\n            this.execSelectSide();\n        else if (this.activity == ActivityType.SelectGrow)\n            this.execSelectGrow();\n        else if (this.activity == ActivityType.SelectShrink)\n            this.execSelectShrink();\n        else if (this.activity == ActivityType.SelectChain)\n            this.execSelectChain();\n        else if (this.activity == ActivityType.SelectSmRing)\n            this.execSelectSmRing();\n        else if (this.activity == ActivityType.SelectRingBlk)\n            this.execSelectRingBlk();\n        else if (this.activity == ActivityType.SelectCurElement)\n            this.execSelectCurElement();\n        else if (this.activity == ActivityType.SelectToggle)\n            this.execSelectToggle();\n        else if (this.activity == ActivityType.SelectUnCurrent)\n            this.execSelectUnCurrent();\n        else if (this.activity == ActivityType.Element)\n            this.execElement(param.element, param.positionX, param.positionY, param.keepAbbrev);\n        else if (this.activity == ActivityType.Charge)\n            this.execCharge(param.delta);\n        else if (this.activity == ActivityType.Connect)\n            this.execConnect(1, Molecule.BONDTYPE_NORMAL);\n        else if (this.activity == ActivityType.Disconnect)\n            this.execDisconnect();\n        else if (this.activity == ActivityType.MetalLigate)\n            this.execMetalLigate();\n        else if (this.activity == ActivityType.BondOrder)\n            this.execBond(param.order, Molecule.BONDTYPE_NORMAL);\n        else if (this.activity == ActivityType.BondType)\n            this.execBond(1, param.type);\n        else if (this.activity == ActivityType.BondGeom)\n            this.execBondGeom(param.geom);\n        else if (this.activity == ActivityType.BondAtom)\n            this.execBondAtom(param.order, param.type, param.element, param.x1, param.y1, param.x2, param.y2);\n        else if (this.activity == ActivityType.BondSwitch)\n            this.execBondSwitch();\n        else if (this.activity == ActivityType.BondRotate)\n            this.execBondRotate();\n        else if (this.activity == ActivityType.BondAddTwo)\n            this.execBondAddTwo();\n        else if (this.activity == ActivityType.BondInsert)\n            this.execBondInsert();\n        else if (this.activity == ActivityType.Join)\n            this.execJoin();\n        else if (this.activity == ActivityType.Nudge)\n            this.execNudge(param.dir, 0.1);\n        else if (this.activity == ActivityType.NudgeLots)\n            this.execNudge(param.dir, 1);\n        else if (this.activity == ActivityType.NudgeFar)\n            this.execNudgeFar(param.dir);\n        else if (this.activity == ActivityType.Flip)\n            this.execFlip(param.axis);\n        else if (this.activity == ActivityType.Scale)\n            this.execScale(param.mag);\n        else if (this.activity == ActivityType.Rotate)\n            this.execRotate(param.theta, param.centreX, param.centreY);\n        else if (this.activity == ActivityType.BondDist)\n            this.execBondDist(param.dist);\n        else if (this.activity == ActivityType.AlignAngle)\n            this.execAlignAngle(param.angle);\n        else if (this.activity == ActivityType.AlignRegular)\n            this.execAlignRegular();\n        else if (this.activity == ActivityType.AdjustTorsion)\n            this.execAdjustTorsion(param.angle);\n        else if (this.activity == ActivityType.Move)\n            this.execMove(param.refAtom, param.deltaX, param.deltaY);\n        else if (this.activity == ActivityType.Ring)\n            this.execRing(param.ringX, param.ringY, param.aromatic);\n        else if (this.activity == ActivityType.TemplateFusion) {\n            this.execTemplateFusion((_a = param.frag) !== null && _a !== void 0 ? _a : Molecule.fromString(param.fragNative));\n            if (this.owner)\n                this.owner.setPermutations(this.output.permutations);\n            return;\n        }\n        else if (this.activity == ActivityType.AbbrevTempl)\n            this.execAbbrevTempl();\n        else if (this.activity == ActivityType.AbbrevGroup)\n            this.execAbbrevGroup();\n        else if (this.activity == ActivityType.AbbrevFormula)\n            this.execAbbrevFormula();\n        else if (this.activity == ActivityType.AbbrevClear)\n            this.execAbbrevClear();\n        else if (this.activity == ActivityType.AbbrevExpand)\n            this.execAbbrevExpand();\n        else if (this.activity == ActivityType.BondArtifactPath || this.activity == ActivityType.BondArtifactRing ||\n            this.activity == ActivityType.BondArtifactArene || this.activity == ActivityType.BondArtifactClear)\n            this.execBondArtifact(this.activity);\n        else if (this.activity == ActivityType.PolymerBlock)\n            this.execPolymerBlock();\n        else if (this.activity == ActivityType.AddHydrogens)\n            this.execAddHydrogens();\n        else if (this.activity == ActivityType.RemoveHydrogens)\n            this.execRemoveHydrogens();\n        else if (this.activity == ActivityType.QueryClear)\n            this.execQueryClear();\n        else if (this.activity == ActivityType.QueryCopy)\n            this.execQueryCopy();\n        else if (this.activity == ActivityType.QueryPaste)\n            this.execQueryPaste();\n        else if (this.activity == ActivityType.QuerySetAtom)\n            this.execQuerySetAtom();\n        else if (this.activity == ActivityType.QuerySetBond)\n            this.execQuerySetBond();\n        else if (this.activity == ActivityType.QueryBondAny)\n            this.execQueryBondAny();\n        else if (this.activity == ActivityType.SproutDirection)\n            this.execSproutDirection(param.deltaX, param.deltaY);\n        this.finish();\n    }\n    finish() {\n        if (!this.owner)\n            return;\n        if (this.output.mol != null || this.output.currentAtom >= 0 || this.output.currentBond >= 0 || this.output.selectedMask != null) {\n            this.owner.setState(this.output, true);\n            if (this.errmsg != null)\n                this.owner.showMessage(this.errmsg, false);\n        }\n        else {\n            if (this.errmsg != null)\n                this.owner.showMessage(this.errmsg, true);\n        }\n    }\n    execDelete() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.mol = mol.clone();\n        this.zapSubject();\n        if (this.input.currentBond > 0 && !this.hasSelected) {\n            this.output.mol.deleteBond(this.input.currentBond);\n            this.output.currentBond = 0;\n            return;\n        }\n        if (this.subjectLength == 1 && this.subjectIndex[0] == this.input.currentAtom) {\n            let adj = mol.atomAdjList(this.input.currentAtom);\n            if (adj.length == 1) {\n                this.output.currentAtom = adj[0];\n                if (this.output.currentAtom > this.input.currentAtom)\n                    this.output.currentAtom--;\n            }\n        }\n        for (let n = this.subjectLength - 1; n >= 0; n--)\n            this.output.mol.deleteAtomAndBonds(this.subjectIndex[n]);\n    }\n    execCopy(withCut) {\n        let mol = this.input.mol;\n        if (this.subjectLength > 0)\n            mol = MolUtil.subgraphWithAttachments(mol, this.subjectMask);\n        if (this.owner)\n            this.owner.performCopy(mol);\n        else\n            this.toClipboard = mol.toString();\n        if (withCut) {\n            this.zapSubject();\n            this.output.mol = MolUtil.subgraphMask(this.input.mol, Vec.notMask(this.subjectMask));\n        }\n    }\n    execClear() {\n        this.output.mol = new Molecule();\n        this.zapSubject();\n    }\n    execSelectAll(all) {\n        let same = true;\n        for (let n = 0; n < this.input.mol.numAtoms; n++)\n            if (this.subjectMask[n] != all) {\n                same = false;\n                break;\n            }\n        if (same) {\n            this.errmsg = all ? 'All atoms already selected.' : 'All atoms already deselected.';\n            return;\n        }\n        this.output.selectedMask = Vec.booleanArray(all, this.input.mol.numAtoms);\n    }\n    execSelectComp(dir) {\n        let cclist = MolUtil.componentList(this.input.mol);\n        if (cclist.length == 1 && this.hasSelected && this.subjectLength == this.input.mol.numAtoms) {\n            this.errmsg = 'All atoms already selected.';\n            return;\n        }\n        let sel = this.pickSelectedGroup(cclist, dir);\n        this.output.selectedMask = Vec.booleanArray(false, this.input.mol.numAtoms);\n        for (let n = 0; n < cclist[sel].length; n++)\n            this.output.selectedMask[cclist[sel][n] - 1] = true;\n    }\n    execSelectSide() {\n        if (!this.requireCurrent())\n            return;\n        let mol = this.input.mol, currentAtom = this.input.currentAtom, currentBond = this.input.currentBond;\n        if (currentAtom > 0 && mol.atomAdjCount(currentAtom) == 0) {\n            this.errmsg = 'Current atom has no neighbours.';\n            return;\n        }\n        if (currentBond > 0 && mol.atomAdjCount(mol.bondFrom(currentBond)) == 1 && mol.atomAdjCount(mol.bondTo(currentBond)) == 1) {\n            this.errmsg = 'Current bond has no neighbours.';\n            return;\n        }\n        let sides = currentAtom > 0 ? MolUtil.getAtomSides(mol, currentAtom) : MolUtil.getBondSides(mol, currentBond);\n        let sel = this.pickSelectedGroup(sides, 1);\n        this.output.selectedMask = Vec.booleanArray(false, mol.numAtoms);\n        for (let n = 0; n < sides[sel].length; n++)\n            this.output.selectedMask[sides[sel][n] - 1] = true;\n    }\n    execSelectGrow() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol, currentAtom = this.input.currentAtom, currentBond = this.input.currentBond;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (!this.hasSelected) {\n            if (currentAtom > 0) {\n                this.output.selectedMask[currentAtom - 1] = true;\n            }\n            else {\n                this.output.selectedMask[mol.bondFrom(currentBond) - 1] = true;\n                this.output.selectedMask[mol.bondTo(currentBond) - 1] = true;\n            }\n        }\n        else {\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n                if (this.input.selectedMask[bfr] && !this.input.selectedMask[bto])\n                    this.output.selectedMask[bto] = true;\n                else if (this.input.selectedMask && !this.input.selectedMask[bfr])\n                    this.output.selectedMask[bfr] = true;\n            }\n        }\n    }\n    execSelectShrink() {\n        if (!this.requireSelected())\n            return;\n        let mol = this.input.mol;\n        let count = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (!this.input.selectedMask[bfr] || !this.input.selectedMask[bto])\n                continue;\n            count[bfr]++;\n            count[bto]++;\n        }\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let n = 0; n < mol.numAtoms; n++)\n            this.output.selectedMask[n] = this.input.selectedMask[n] && count[n] >= 2;\n    }\n    execSelectChain() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (this.input.selectedMask[bfr] && !this.input.selectedMask[bto] && mol.atomRingBlock(bto + 1) == 0)\n                this.output.selectedMask[bto] = true;\n            else if (this.input.selectedMask[bto] && !this.input.selectedMask[bfr] && mol.atomRingBlock(bfr + 1) == 0)\n                this.output.selectedMask[bfr] = true;\n        }\n    }\n    execSelectSmRing() {\n        if (!this.requireSubject())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let r = 3; r <= 8; r++) {\n            let rings = this.input.mol.findRingsOfSize(r);\n            for (let i = 0; i < rings.length; i++) {\n                let any = false;\n                for (let j = 0; j < rings[i].length; j++)\n                    if (this.subjectMask[rings[i][j] - 1]) {\n                        any = true;\n                        break;\n                    }\n                if (any)\n                    for (let j = 0; j < rings[i].length; j++)\n                        this.output.selectedMask[rings[i][j] - 1] = true;\n            }\n        }\n    }\n    execSelectRingBlk() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        let maxRB = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            maxRB = Math.max(maxRB, mol.atomRingBlock(n));\n        if (maxRB == 0)\n            return;\n        let gotRB = Vec.booleanArray(false, maxRB);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let rb = mol.atomRingBlock(n);\n            if (rb > 0 && this.subjectMask[n - 1])\n                gotRB[rb - 1] = true;\n        }\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let rb = mol.atomRingBlock(n);\n            if (rb > 0 && gotRB[rb - 1])\n                this.output.selectedMask[n - 1] = true;\n        }\n    }\n    execSelectCurElement() {\n        if (!this.requireCurrent())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        let el1 = '', el2 = '';\n        if (this.input.currentAtom > 0) {\n            el1 = mol.atomElement(this.input.currentAtom);\n        }\n        else {\n            el1 = mol.atomElement(mol.bondFrom(this.input.currentBond));\n            el2 = mol.atomElement(mol.bondTo(this.input.currentBond));\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomElement(n) == el1 || mol.atomElement(n) == el2)\n                this.output.selectedMask[n - 1] = true;\n    }\n    execSelectToggle() {\n        if (!this.requireCurrent())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (this.input.currentAtom > 0) {\n            this.output.selectedMask[this.input.currentAtom - 1] = !this.output.selectedMask[this.input.currentAtom - 1];\n        }\n        else {\n            let bfr = this.input.mol.bondFrom(this.input.currentBond), bto = this.input.mol.bondTo(this.input.currentBond);\n            let sel = !this.input.selectedMask[bfr - 1] || !this.input.selectedMask[bto - 1];\n            this.output.selectedMask[bfr - 1] = sel;\n            this.output.selectedMask[bto - 1] = sel;\n        }\n    }\n    execSelectUnCurrent() {\n        if (!this.requireCurrent())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (this.input.currentAtom > 0) {\n            this.output.selectedMask[this.input.currentAtom - 1] = false;\n        }\n        else {\n            this.output.selectedMask[this.input.mol.bondFrom(this.input.currentBond) - 1] = false;\n            this.output.selectedMask[this.input.mol.bondTo(this.input.currentBond) - 1] = false;\n        }\n    }\n    execElement(element, positionX, positionY, keepAbbrev) {\n        const QUERY_ELEMENTS = ['A', 'X', 'Y', 'Z', 'Q', 'M', 'T', 'E', 'R'];\n        if (this.subjectLength > 0 && !QUERY_ELEMENTS.includes(element)) {\n            let anyChange = false;\n            for (let n = 0; n < this.subjectLength; n++)\n                if (this.input.mol.atomElement(this.subjectIndex[n]) != element) {\n                    anyChange = true;\n                    break;\n                }\n            if (!anyChange) {\n                this.errmsg = 'Elements not changed.';\n                return;\n            }\n        }\n        let mol = this.output.mol = this.input.mol.clone();\n        let applyQuery = (atom) => {\n            if (element == 'A') {\n                QueryUtil.setQueryAtomElementsNot(mol, atom, ['H']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'X') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['F', 'Cl', 'Br', 'I']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Y') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['O', 'S', 'Se', 'Te']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Z') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['F', 'Cl', 'Br', 'O', 'S']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Q') {\n                QueryUtil.setQueryAtomElementsNot(mol, atom, ['H', 'C']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'M') {\n                const NON_METALS = ['H', 'B', 'C', 'N', 'O', 'F', 'Si', 'P', 'S', 'Cl', 'As', 'Se', 'Br', 'Te', 'I'];\n                QueryUtil.setQueryAtomElementsNot(mol, atom, NON_METALS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'T') {\n                const TRANSITION_METALS = [\n                    'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n                    'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd',\n                    'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg',\n                    'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb', 'Lu',\n                    'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No', 'Lr'\n                ];\n                QueryUtil.setQueryAtomElements(mol, atom, TRANSITION_METALS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'E') {\n                const MAIN_GROUPS = [\n                    'B', 'N', 'O', 'F',\n                    'Al', 'Si', 'P', 'S', 'Cl',\n                    'Zn', 'Ga', 'Se', 'As', 'Se', 'Br',\n                    'Cd', 'In', 'Sn', 'Sb', 'Te', 'I',\n                    'Hg', 'Tl', 'Pb', 'Bi', 'Pb', 'At'\n                ];\n                QueryUtil.setQueryAtomElements(mol, atom, MAIN_GROUPS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'R') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['C', 'N', 'O', 'S', 'P', 'H']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n        };\n        if (mol.numAtoms == 0) {\n            mol.addAtom(element, 0, 0);\n            applyQuery(mol.numAtoms);\n        }\n        else if (this.subjectLength == 0) {\n            if (positionX != null && positionY != null)\n                mol.addAtom(element, positionX, positionY);\n            else\n                SketchUtil.placeNewAtom(mol, element);\n            applyQuery(mol.numAtoms);\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                if (keepAbbrev)\n                    mol.setAtomElement(this.subjectIndex[n], element);\n                else\n                    MolUtil.setAtomElement(mol, this.subjectIndex[n], element);\n                applyQuery(this.subjectIndex[n]);\n            }\n        }\n    }\n    execCharge(delta) {\n        if (!this.requireSubject())\n            return;\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let chg = Math.max(-20, Math.min(20, this.input.mol.atomCharge(this.subjectIndex[n]) + delta));\n            this.output.mol.setAtomCharge(this.subjectIndex[n], chg);\n        }\n    }\n    execConnect(order, type) {\n        if (!this.requireSubject())\n            return;\n        let conn = SketchUtil.pickAtomsToConnect(this.input.mol, this.subjectIndex);\n        if (conn == null) {\n            this.errmsg = 'Subject atoms contain no bonds suitable for connection.';\n            return;\n        }\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < conn.length; n += 2)\n            MolUtil.addBond(this.output.mol, conn[n], conn[n + 1], order, type);\n    }\n    execDisconnect() {\n        let zap = [];\n        let mol = this.input.mol;\n        if (this.hasSelected) {\n            for (let n = 1; n <= mol.numBonds; n++)\n                if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                    zap.push(n);\n        }\n        else if (this.input.currentAtom > 0) {\n            for (let a of mol.atomAdjBonds(this.input.currentAtom))\n                zap.push(a);\n        }\n        else if (this.input.currentBond > 0) {\n            zap.push(this.input.currentBond);\n        }\n        if (zap.length == 0) {\n            this.errmsg = 'Subject atoms contain no bonds suitable for disconnection.';\n            return;\n        }\n        let killmask = Vec.booleanArray(false, mol.numBonds);\n        for (let b of zap)\n            killmask[b - 1] = true;\n        this.output.mol = this.input.mol.clone();\n        for (let n = mol.numBonds; n >= 1; n--)\n            if (killmask[n - 1])\n                this.output.mol.deleteBond(n);\n    }\n    execMetalLigate() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        let ligAtoms = this.subjectIndex.slice(0);\n        let metalAtom = this.input.currentAtom;\n        if (metalAtom == 0) {\n            for (let a of this.subjectIndex) {\n                let atno = mol.atomicNumber(a);\n                if (Chemistry.ELEMENT_BLOCKS[atno] >= 3) {\n                    metalAtom = a;\n                    break;\n                }\n            }\n        }\n        if (metalAtom == 0) {\n            for (let a of this.subjectIndex) {\n                let atno = mol.atomicNumber(a);\n                if (Chemistry.ELEMENT_ROWS[atno] >= 3) {\n                    metalAtom = a;\n                    break;\n                }\n            }\n        }\n        if (metalAtom == 0) {\n            this.errmsg = 'Unsure which is the metal atom: try indicating as current.';\n            return;\n        }\n        let i = ligAtoms.indexOf(metalAtom);\n        if (i >= 0)\n            ligAtoms.splice(i, 1);\n        if (ligAtoms.length == 0)\n            ligAtoms = mol.atomAdjList(metalAtom);\n        if (ligAtoms.length == 0) {\n            this.errmsg = 'Metal centre has no attachments: try selecting atom join-points.';\n            return;\n        }\n        mol = new MetalLigate(mol, metalAtom, ligAtoms).generate();\n        this.output.mol = mol;\n        this.output.currentAtom = metalAtom;\n        this.output.currentBond = -1;\n        this.output.selectedMask = Vec.booleanArray(false, mol.numAtoms);\n        for (let a of ligAtoms)\n            this.output.selectedMask[a - 1] = true;\n    }\n    execBond(order, type) {\n        if (!this.requireSubject())\n            return;\n        if (this.subjectLength == 1) {\n            this.performBondNew(this.subjectIndex[0], order, type);\n            return;\n        }\n        let ccmol = MolUtil.subgraphMask(this.input.mol, this.subjectMask);\n        let oneComp = true;\n        for (let n = ccmol.numAtoms; n >= 1; n--)\n            if (ccmol.atomConnComp(n) != 1) {\n                oneComp = false;\n                break;\n            }\n        if (oneComp)\n            this.performBondChange(order, type);\n        else\n            this.execConnect(order, type);\n    }\n    execBondGeom(geom) {\n        let bond = this.subjectLength == 2 ? this.input.mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) : 0;\n        if (this.subjectLength == 0 || this.subjectLength > 2 || (this.subjectLength == 2 && bond == 0)) {\n            this.errmsg = 'The subject must be a single atom or bond.';\n            return;\n        }\n        if (this.subjectLength == 1)\n            this.performBondGeomAtom(geom, this.subjectIndex[0]);\n        else\n            this.performBondGeomBond(geom, bond);\n    }\n    execBondAtom(order, type, element, x1, y1, x2, y2) {\n        let mol = this.input.mol;\n        let a1 = CoordUtil.atomAtPoint(mol, x1, y1, 0.01), a2 = CoordUtil.atomAtPoint(mol, x2, y2, 0.01);\n        if (a1 > 0 && a1 == a2)\n            return;\n        if (a1 > 0 && a2 > 0 && mol.findBond(a1, a2) > 0)\n            return;\n        this.output.mol = mol.clone();\n        if (a1 == 0)\n            a1 = this.output.mol.addAtom('C', x1, y1);\n        if (a2 == 0)\n            a2 = this.output.mol.addAtom(element, x2, y2);\n        this.output.mol.addBond(a1, a2, order, type);\n    }\n    execBondSwitch() {\n        if (this.input.altmol) {\n            this.output.mol = this.input.altmol;\n            this.output.altmol = this.input.mol;\n            return;\n        }\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        let src = 0, dst = [];\n        if (this.subjectLength == 1) {\n            src = this.subjectIndex[0];\n            let adj = mol.atomAdjList(src);\n            for (let n = 0; n < adj.length; n++)\n                if (mol.atomAdjCount(adj[n]) == 1)\n                    dst.push(adj[n]);\n        }\n        else if (this.subjectLength == 2 && mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) > 0) {\n            let ac1 = mol.atomAdjCount(this.subjectIndex[0]), ac2 = mol.atomAdjCount(this.subjectIndex[1]);\n            if (ac1 > 1 && ac2 == 1) {\n                src = this.subjectIndex[0];\n                dst.push(this.subjectIndex[1]);\n            }\n            else if (ac1 == 1 && ac2 > 1) {\n                src = this.subjectIndex[1];\n                dst.push(this.subjectIndex[0]);\n            }\n        }\n        if (src == 0 || dst.length == 0) {\n            this.errmsg = 'Subject must include a terminal bond.';\n            return;\n        }\n        let geoms = SketchUtil.guessAtomGeometry(mol, src, 1);\n        if (geoms.length == 0) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        this.output.mol = SketchUtil.switchAtomGeometry(mol, src, dst, geoms);\n        if (this.output.mol == null) {\n            this.errmsg = 'No alternative geometries identified.';\n        }\n    }\n    execBondRotate() {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol;\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot rotate a ring-bond.';\n            return;\n        }\n        if (mol.atomAdjCount(mol.bondFrom(bond)) == 1 && mol.atomAdjCount(mol.bondTo(bond)) == 1) {\n            this.errmsg = 'Two-atom components do not rotate.';\n            return;\n        }\n        mol = mol.clone();\n        let [atom1, atom2, side] = this.mobileSide(bond, true);\n        let cx = mol.atomX(atom1), cy = mol.atomY(atom1);\n        let theta = Math.atan2(mol.atomY(atom1) - mol.atomY(atom2), mol.atomX(atom1) - mol.atomX(atom2));\n        for (let a of side)\n            if (a != atom1) {\n                let dx = mol.atomX(a) - cx, dy = mol.atomY(a) - cy, dist = norm_xy(dx, dy);\n                let dtheta = Math.atan2(dy, dx);\n                dtheta = theta - angleDiff(dtheta, theta);\n                mol.setAtomPos(a, cx + dist * Math.cos(dtheta), cy + dist * Math.sin(dtheta));\n            }\n        let mask = Vec.idxMask(Vec.add(side, -1), mol.numAtoms);\n        for (let b = 1; b <= mol.numBonds; b++)\n            if (mask[mol.bondFrom(b) - 1] && mask[mol.bondTo(b) - 1]) {\n                let bt = mol.bondType(b);\n                if (bt == Molecule.BONDTYPE_INCLINED)\n                    mol.setBondType(b, Molecule.BONDTYPE_DECLINED);\n                else if (bt == Molecule.BONDTYPE_DECLINED)\n                    mol.setBondType(b, Molecule.BONDTYPE_INCLINED);\n            }\n        if (CoordUtil.sketchEquivalent(this.input.mol, mol)) {\n            this.errmsg = 'Rotation has no effect.';\n            return;\n        }\n        this.output.mol = mol;\n    }\n    execBondAddTwo() {\n        if (this.subjectLength != 1) {\n            this.errmsg = 'Subject must be a single atom.';\n            return;\n        }\n        let atom = this.subjectIndex[0];\n        if (this.input.mol.atomAdjCount(atom) < 2) {\n            this.errmsg = 'Subject atom must already have at least 2 bonds.';\n            return;\n        }\n        let ang = SketchUtil.calculateNewBondAngles(this.input.mol, atom, 1);\n        if (ang.length == 0)\n            ang = SketchUtil.exitVectors(this.input.mol, atom);\n        if (ang.length == 0) {\n            this.errmsg = 'Could not find a suitable geometry for new substituents.';\n            return;\n        }\n        let baseAng = ang[0];\n        let cx = this.input.mol.atomX(atom), cy = this.input.mol.atomY(atom);\n        if (ang.length > 1) {\n            let best = 0;\n            for (let n = 0; n < ang.length; n++) {\n                let x = cx + Molecule.IDEALBOND * Math.cos(ang[n]);\n                let y = cy + Molecule.IDEALBOND * Math.sin(ang[n]);\n                let score = CoordUtil.congestionPoint(this.input.mol, x, y);\n                if (n == 0 || score < best) {\n                    best = score;\n                    baseAng = ang[n];\n                }\n            }\n        }\n        let ang1 = baseAng - 30.0 * DEGRAD, ang2 = baseAng + 30.0 * DEGRAD;\n        let mol = this.input.mol.clone();\n        let a1 = mol.addAtom('C', cx + Molecule.IDEALBOND * Math.cos(ang1), cy + Molecule.IDEALBOND * Math.sin(ang1));\n        let a2 = mol.addAtom('C', cx + Molecule.IDEALBOND * Math.cos(ang2), cy + Molecule.IDEALBOND * Math.sin(ang2));\n        mol.addBond(atom, a1, 1);\n        mol.addBond(atom, a2, 1);\n        this.output.mol = mol;\n    }\n    execBondInsert() {\n        let mol = this.input.mol, bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot insert into a ring-bond.';\n            return;\n        }\n        let [alink, _, side] = this.mobileSide(bond);\n        mol = mol.clone();\n        mol.setBondOrder(bond, 1);\n        let fragmask = Vec.booleanArray(false, mol.numAtoms);\n        for (let a of side)\n            fragmask[a - 1] = true;\n        let frag = MolUtil.subgraphWithAttachments(mol, fragmask);\n        for (let n = mol.numAtoms; n >= 1; n--)\n            if (fragmask[n - 1] && n != alink) {\n                mol.deleteAtomAndBonds(n);\n                if (n < alink)\n                    alink -= 1;\n            }\n        mol.setAtomElement(alink, 'C');\n        mol.setAtomCharge(alink, 0);\n        mol.setAtomUnpaired(alink, 0);\n        mol.setAtomHExplicit(alink, Molecule.HEXPLICIT_UNKNOWN);\n        mol.setAtomIsotope(alink, Molecule.ISOTOPE_NATURAL);\n        mol.setAtomMapNum(alink, 0);\n        mol.setAtomExtra(alink, []);\n        mol.setAtomTransient(alink, []);\n        let fusion = new TemplateFusion(mol, frag, '');\n        fusion.withGuideOnly = true;\n        fusion.permuteAtom(alink);\n        if (fusion.perms.length == 0) {\n            this.errmsg = 'Unable to insert.';\n            return;\n        }\n        this.output.mol = fusion.perms[0].mol;\n        this.zapSubject();\n        this.output.currentAtom = alink;\n    }\n    execJoin() {\n        if (!this.requireSubject())\n            return;\n        this.output.mol = SketchUtil.joinOverlappingAtoms(this.input.mol, this.subjectMask);\n        if (this.output.mol == null) {\n            this.errmsg = 'Subject contains no overlapping atoms.';\n        }\n        else {\n            this.zapSubject();\n        }\n    }\n    execNudge(dir, extent) {\n        if (!this.requireSubject())\n            return;\n        let dx = extent * (dir == 'left' ? -1 : dir == 'right' ? 1 : 0);\n        let dy = extent * (dir == 'down' ? -1 : dir == 'up' ? 1 : 0);\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let x = this.output.mol.atomX(this.subjectIndex[n]), y = this.output.mol.atomY(this.subjectIndex[n]);\n            this.output.mol.setAtomPos(this.subjectIndex[n], x + dx, y + dy);\n        }\n    }\n    execNudgeFar(dir) {\n        if (!this.requireSubject())\n            return;\n        if (this.subjectLength == this.input.mol.numAtoms) {\n            this.errmsg = 'Cannot apply to entire molecule.';\n            return;\n        }\n        let dx = dir == 'left' ? -1 : dir == 'right' ? 1 : 0;\n        let dy = dir == 'down' ? -1 : dir == 'up' ? 1 : 0;\n        this.output.mol = SketchUtil.moveToEdge(this.input.mol, this.subjectMask, dx, dy);\n        if (this.output.mol == null) {\n            this.execNudge(dir, 1);\n        }\n    }\n    execFlip(axis) {\n        if (this.input.mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        let isVertical = axis == 'ver';\n        let cx = 0, cy = 0;\n        let mask = this.subjectMask, mol = this.input.mol;\n        if (this.input.currentAtom > 0) {\n            cx = mol.atomX(this.input.currentAtom);\n            cy = mol.atomY(this.input.currentAtom);\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(this.input.currentAtom);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.input.currentBond > 0) {\n            let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(bfr);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.subjectLength == 0) {\n            let box = mol.boundary();\n            cx = 0.5 * (box.minX() + box.maxX());\n            cy = 0.5 * (box.minY() + box.maxY());\n            mask = Vec.booleanArray(true, mol.numAtoms);\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                if (!isVertical)\n                    this.output.mol.setAtomX(n, 2 * cx - this.output.mol.atomX(n));\n                else\n                    this.output.mol.setAtomY(n, 2 * cy - this.output.mol.atomY(n));\n            }\n    }\n    execScale(mag) {\n        const { mol, currentAtom, currentBond } = this.input;\n        if (mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        if (currentAtom > 0) {\n            let connAtoms = [];\n            for (let a of this.subjectIndex)\n                if (a != currentAtom && mol.findBond(currentAtom, a) > 0)\n                    connAtoms.push(a);\n            let g = Graph.fromMolecule(mol);\n            g.isolateNode(currentAtom - 1);\n            let anything = false;\n            for (let cc of g.calculateComponentGroups()) {\n                Vec.addTo(cc, 1);\n                let sz = 0, dx = 0, dy = 0;\n                for (let a of cc)\n                    if (connAtoms.includes(a)) {\n                        dx += mol.atomX(a) - mol.atomX(currentAtom);\n                        dy += mol.atomY(a) - mol.atomY(currentAtom);\n                        sz++;\n                    }\n                if (sz == 0)\n                    continue;\n                [dx, dy] = [dx / sz, dy / sz];\n                if (Math.abs(dx) < 0.1 && Math.abs(dy) < 0.1)\n                    continue;\n                [dx, dy] = [dx * (mag - 1), dy * (mag - 1)];\n                if (!this.output.mol)\n                    this.output.mol = mol.clone();\n                for (let a of cc)\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + dx, this.output.mol.atomY(a) + dy);\n                anything = true;\n            }\n            if (anything)\n                return;\n        }\n        let b;\n        if (this.subjectLength == 2 && (b = mol.findBond(this.subjectIndex[0], this.subjectIndex[1])) > 0 && !mol.bondInRing(b)) {\n            let a1 = this.subjectIndex[0], a2 = this.subjectIndex[1];\n            let ccmol = mol.clone();\n            ccmol.deleteBond(b);\n            let idx1 = [], idx2 = [];\n            for (let n = 1; n <= ccmol.numAtoms; n++) {\n                if (ccmol.atomConnComp(n) == ccmol.atomConnComp(a1))\n                    idx1.push(n);\n                else if (ccmol.atomConnComp(n) == ccmol.atomConnComp(a2))\n                    idx2.push(n);\n            }\n            let dx = (mol.atomX(a2) - mol.atomX(a1)) * (mag - 1);\n            let dy = (mol.atomY(a2) - mol.atomY(a1)) * (mag - 1);\n            if (idx1.length == idx2.length) {\n                dx *= 0.5;\n                dy *= 0.5;\n            }\n            this.output.mol = mol.clone();\n            if (idx1.length <= idx2.length)\n                for (let n = 0; n < idx1.length; n++) {\n                    let a = idx1[n];\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) - dx, this.output.mol.atomY(a) - dy);\n                }\n            if (idx2.length <= idx1.length)\n                for (let n = 0; n < idx2.length; n++) {\n                    let a = idx2[n];\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + dx, this.output.mol.atomY(a) + dy);\n                }\n            return;\n        }\n        let cx = 0, cy = 0;\n        if (currentAtom > 0) {\n            cx = mol.atomX(currentAtom);\n            cy = mol.atomY(currentAtom);\n        }\n        else if (currentBond > 0) {\n            let bfr = mol.bondFrom(currentBond), bto = mol.bondTo(currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let x = this.output.mol.atomX(this.subjectIndex[n]);\n            let y = this.output.mol.atomY(this.subjectIndex[n]);\n            this.output.mol.setAtomPos(this.subjectIndex[n], (x - cx) * mag + cx, (y - cy) * mag + cy);\n        }\n    }\n    execRotate(theta, centreX, centreY) {\n        theta *= DEGRAD;\n        let mol = this.input.mol;\n        if (centreX != null && centreY != null) {\n            this.output.mol = mol.clone();\n            let mask = this.subjectLength == 0 ? Vec.booleanArray(true, mol.numAtoms) : this.subjectMask;\n            CoordUtil.rotateAtoms(this.output.mol, mask, centreX, centreY, theta);\n            return;\n        }\n        if (mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        let cx = 0, cy = 0;\n        let mask = this.subjectMask;\n        if (this.input.currentAtom > 0) {\n            cx = mol.atomX(this.input.currentAtom);\n            cy = mol.atomY(this.input.currentAtom);\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(this.input.currentAtom);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n            if (Vec.maskCount(mask) == 1 && mask[this.input.currentAtom - 1]) {\n                this.errmsg = 'Component is isolated.';\n                return;\n            }\n        }\n        else if (this.input.currentBond > 0) {\n            let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(bfr);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.subjectLength == 0) {\n            let box = mol.boundary();\n            cx = 0.5 * (box.minX() + box.maxX());\n            cy = 0.5 * (box.minY() + box.maxY());\n            mask = Vec.booleanArray(true, mol.numAtoms);\n        }\n        else {\n            if (this.subjectLength == 1) {\n                this.errmsg = 'Component is isolated.';\n                return;\n            }\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        CoordUtil.rotateAtoms(this.output.mol, mask, cx, cy, theta);\n    }\n    execBondDist(dist) {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        if (mol.bondInRing(bond)) {\n            let atom1 = mol.bondFrom(bond), atom2 = mol.bondTo(bond);\n            let dx = mol.atomX(atom2) - mol.atomX(atom1), dy = mol.atomY(atom2) - mol.atomY(atom1), curDist = norm_xy(dx, dy), inv = 1.0 / curDist;\n            let sel1 = this.isSelected(atom1), sel2 = this.isSelected(atom2);\n            let ox = dx * (dist - curDist) * inv, oy = dy * (dist - curDist) * inv;\n            if (sel1 && !sel2) {\n                mol.setAtomPos(atom1, mol.atomX(atom1) - ox, mol.atomY(atom1) - oy);\n            }\n            else if (sel2 && !sel1) {\n                mol.setAtomPos(atom2, mol.atomX(atom2) + ox, mol.atomY(atom2) + oy);\n            }\n            else {\n                mol.setAtomPos(atom1, mol.atomX(atom1) - 0.5 * ox, mol.atomY(atom1) - 0.5 * oy);\n                mol.setAtomPos(atom2, mol.atomX(atom2) + 0.5 * ox, mol.atomY(atom2) + 0.5 * oy);\n            }\n        }\n        else {\n            let [atom1, atom2, side] = this.mobileSide(bond);\n            let dx = mol.atomX(atom2) - mol.atomX(atom1), dy = mol.atomY(atom2) - mol.atomY(atom1);\n            let curDist = norm_xy(dx, dy), inv = 1.0 / curDist;\n            let ox = dx * (dist - curDist) * inv, oy = dy * (dist - curDist) * inv;\n            for (let a of side)\n                mol.setAtomPos(a, mol.atomX(a) - ox, mol.atomY(a) - oy);\n        }\n        this.output.mol = mol;\n    }\n    execAlignAngle(angle) {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot align a ring-bond.';\n            return;\n        }\n        let [atom1, atom2, side] = this.mobileSide(bond);\n        let cx = mol.atomX(atom2), cy = mol.atomY(atom2);\n        let delta = angle - Math.atan2(mol.atomY(atom1) - cy, mol.atomX(atom1) - cx);\n        let cosTheta = Math.cos(delta), sinTheta = Math.sin(delta);\n        for (let a of side) {\n            let x = mol.atomX(a) - cx, y = mol.atomY(a) - cy;\n            mol.setAtomPos(a, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n        }\n        this.output.mol = mol;\n    }\n    execAlignRegular() {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n        let theta = Math.atan2(mol.atomY(bto) - mol.atomY(bfr), mol.atomX(bto) - mol.atomX(bfr)) * RADDEG;\n        if (theta < 0)\n            theta += 360;\n        let snap = Math.round(theta / 30) * 30;\n        if (Math.abs(theta - snap) < 0.001)\n            return;\n        let delta = (snap - theta) * DEGRAD;\n        let mask = this.input.selectedMask;\n        if (Vec.allFalse(mask)) {\n            let cc = mol.atomConnComp(bfr);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                mask[n - 1] = cc == mol.atomConnComp(n);\n        }\n        let cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto)), cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let dx = mol.atomX(n) - cx, dy = mol.atomY(n) - cy;\n                let th = Math.atan2(dy, dx) + delta, dist = norm_xy(dx, dy);\n                mol.setAtomPos(n, cx + dist * Math.cos(th), cy + dist * Math.sin(th));\n            }\n        this.output.mol = mol;\n    }\n    execAdjustTorsion(angle) {\n        if (this.input.currentAtom == 0 || Vec.maskCount(this.input.selectedMask) != 3) {\n            this.errmsg = 'Must be 3 selected atoms and a current atom.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        let a1 = this.input.currentAtom;\n        let atoms = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (n != a1 && this.input.selectedMask[n - 1])\n                atoms.push(n);\n        let a2 = mol.findBond(a1, atoms[0]) > 0 ? atoms.shift() :\n            mol.findBond(a1, atoms[1]) > 0 ? atoms.pop() : 0;\n        if (a2 == 0 || mol.findBond(a2, atoms[0]) == 0) {\n            this.errmsg = 'Selected atoms must be consecutive.';\n            return;\n        }\n        let a3 = atoms[0];\n        let cx = mol.atomX(a2), cy = mol.atomY(a2);\n        let theta1 = Math.atan2(mol.atomY(a1) - cy, mol.atomX(a1) - cx);\n        let theta3 = Math.atan2(mol.atomY(a3) - cy, mol.atomX(a3) - cx);\n        let delta = angle - angleDiff(theta3, theta1);\n        let group1 = [], group3 = [];\n        if (mol.atomRingBlock(a1) == 0 || mol.atomRingBlock(a1) != mol.atomRingBlock(a3)) {\n            let g = Graph.fromMolecule(mol);\n            g.removeEdge(a2 - 1, a1 - 1);\n            g.removeEdge(a2 - 1, a3 - 1);\n            let cc = g.calculateComponents();\n            for (let n = 0; n < g.numNodes; n++) {\n                if (cc[n] == cc[a1 - 1])\n                    group1.push(n + 1);\n                else if (cc[n] == cc[a3 - 1])\n                    group3.push(n + 1);\n            }\n        }\n        if (mol.atomRingBlock(a1) > 0 && mol.atomRingBlock(a1) == mol.atomRingBlock(a2))\n            group1 = [a1];\n        if (mol.atomRingBlock(a3) > 0 && mol.atomRingBlock(a3) == mol.atomRingBlock(a2))\n            group3 = [a3];\n        CoordUtil.rotateAtoms(mol, Vec.idxMask(Vec.add(group1, -1), mol.numAtoms), cx, cy, -0.5 * delta);\n        CoordUtil.rotateAtoms(mol, Vec.idxMask(Vec.add(group3, -1), mol.numAtoms), cx, cy, 0.5 * delta);\n        this.output.mol = mol;\n    }\n    execMove(refAtom, deltaX, deltaY) {\n        let subj = this.subjectIndex;\n        if (Vec.len(subj) == 0) {\n            if (refAtom == 0)\n                return;\n            subj = [refAtom];\n        }\n        this.output.mol = this.input.mol.clone();\n        for (let a of subj)\n            this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + deltaX, this.output.mol.atomY(a) + deltaY);\n    }\n    execRing(ringX, ringY, aromatic) {\n        let rsz = ringX.length;\n        let atoms = Vec.numberArray(0, rsz), bonds = Vec.numberArray(0, rsz);\n        let outmol = this.input.mol.clone();\n        for (let n = 0; n < rsz; n++) {\n            atoms[n] = CoordUtil.atomAtPoint(outmol, ringX[n], ringY[n]);\n            if (atoms[n] == 0)\n                atoms[n] = outmol.addAtom('C', ringX[n], ringY[n]);\n        }\n        for (let n = 0; n < rsz; n++) {\n            let nn = n < rsz - 1 ? n + 1 : 0;\n            bonds[n] = outmol.findBond(atoms[n], atoms[nn]);\n            if (bonds[n] == 0)\n                bonds[n] = outmol.addBond(atoms[n], atoms[nn], 1);\n        }\n        if (aromatic) {\n            let valence = Vec.numberArray(0, rsz);\n            let pi = Vec.booleanArray(false, rsz);\n            for (let n = 0; n < rsz; n++) {\n                valence[n] = Chemistry.ELEMENT_BONDING[outmol.atomicNumber(atoms[n])] + outmol.atomCharge(atoms[n]);\n                if (outmol.atomHExplicit(atoms[n]) != Molecule.HEXPLICIT_UNKNOWN)\n                    valence[n] -= outmol.atomHExplicit(atoms[n]);\n                for (let b of outmol.atomAdjBonds(atoms[n]))\n                    valence[n] -= outmol.bondOrder(b);\n                if (outmol.bondOrder(bonds[n]) >= 2) {\n                    pi[n] = true;\n                    if (n < rsz - 1) {\n                        pi[n] = true;\n                        n++;\n                    }\n                    else\n                        pi[0] = true;\n                }\n            }\n            for (let n = 0; n < rsz; n++) {\n                let nn = n < rsz - 1 ? n + 1 : 0;\n                if (pi[n] || pi[nn])\n                    continue;\n                if (valence[n] > 0 && valence[nn] > 0) {\n                    outmol.setBondOrder(bonds[n], 2);\n                    pi[n] = true;\n                    pi[nn] = true;\n                    valence[n]--;\n                    valence[nn]--;\n                }\n            }\n        }\n        this.output.mol = outmol;\n    }\n    execTemplateFusion(frag) {\n        let mol = this.input.mol;\n        let fusion = new TemplateFusion(mol, frag, '');\n        if (this.subjectLength == 0)\n            fusion.permuteNone();\n        else if (this.subjectLength == 1)\n            fusion.permuteAtom(this.subjectIndex[0]);\n        else if (this.subjectLength == 2 && mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) > 0)\n            fusion.permuteBond(this.subjectIndex[0], this.subjectIndex[1]);\n        else\n            fusion.permuteMulti(this.subjectIndex);\n        let permutations = [];\n        for (let perm of fusion.perms) {\n            let obj = {};\n            obj['mol'] = perm.mol.toString();\n            obj['display'] = perm.display.toString();\n            obj['molidx'] = perm.molidx;\n            obj['temidx'] = perm.temidx;\n            obj['srcidx'] = perm.srcidx;\n            permutations.push(obj);\n        }\n        this.output.permutations = permutations;\n    }\n    execAbbrevTempl() {\n    }\n    execAbbrevGroup() {\n        if (!this.requireSubject())\n            return;\n        if (!this.checkAbbreviationReady())\n            return;\n        let mol = MolUtil.convertToAbbrev(this.input.mol, Vec.notMask(this.subjectMask), '?');\n        if (mol == null) {\n            this.errmsg = 'Inline abbreviations must be terminal with exactly one attachment point.';\n            return;\n        }\n        if (AbbrevContainer.main) {\n            AbbrevContainer.main.submitMolecule(mol, true);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomElement(n) == '?' && MolUtil.hasAbbrev(mol, n))\n                    AbbrevContainer.main.substituteAbbrevName(mol, n);\n        }\n        this.output.mol = mol;\n        this.zapSubject();\n        this.output.currentAtom = mol.numAtoms;\n    }\n    execAbbrevFormula() {\n        if (!this.requireSubject())\n            return;\n        if (!this.checkAbbreviationReady())\n            return;\n        let fixed = this.input.mol.clone();\n        for (let n = 1; n <= fixed.numAtoms; n++)\n            fixed.setAtomHExplicit(n, fixed.atomHydrogens(n));\n        let abv = MolUtil.subgraphMask(fixed, this.subjectMask);\n        let formula = MolUtil.molecularFormula(abv, true);\n        let mol = MolUtil.convertToAbbrev(this.input.mol, Vec.notMask(this.subjectMask), formula);\n        if (mol == null) {\n            this.errmsg = 'Inline abbreviations must be terminal with exactly one attachment point.';\n            return;\n        }\n        this.output.mol = mol;\n        this.zapSubject();\n        this.output.currentAtom = mol.numAtoms;\n    }\n    execAbbrevClear() {\n        let idx = [];\n        for (let n of this.subjectIndex)\n            if (MolUtil.hasAbbrev(this.input.mol, n))\n                idx.push(n);\n        if (idx.length == 0) {\n            this.errmsg = 'No abbreviations to clear.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        for (let n of idx)\n            MolUtil.clearAbbrev(mol, n);\n        this.output.mol = mol;\n    }\n    execAbbrevExpand() {\n        let idx = [];\n        for (let n of this.subjectIndex)\n            if (MolUtil.hasAbbrev(this.input.mol, n))\n                idx.push(n);\n        if (idx.length == 0) {\n            this.errmsg = 'No abbreviations to expand.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        for (let n of idx)\n            MolUtil.expandOneAbbrev(mol, n, true);\n        this.output.mol = mol;\n        this.zapSubject();\n    }\n    execBondArtifact(activity) {\n        if (!this.requireAtoms() || !this.requireSubject())\n            return;\n        let artif = new BondArtifact(this.input.mol.clone());\n        let subject = this.subjectIndex.slice(0), curAtom = this.input.currentAtom;\n        if (curAtom > 0 && subject.indexOf(curAtom) < 0)\n            subject.push(curAtom);\n        if (activity == ActivityType.BondArtifactPath) {\n            if (!artif.createPath(subject)) {\n                this.errmsg = 'Path artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactRing) {\n            if (!artif.createRing(subject)) {\n                this.errmsg = 'Ring artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactArene) {\n            if (!artif.createArene(subject)) {\n                this.errmsg = 'Arene artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactClear) {\n            if (!artif.removeArtifact(subject)) {\n                if (this.removePolymerBlock(subject))\n                    return;\n                this.errmsg = 'No artifact removed.';\n                return;\n            }\n        }\n        artif.rewriteMolecule();\n        this.output.mol = artif.mol;\n    }\n    execPolymerBlock() {\n        if (!this.requireAtoms() || !this.requireSubject())\n            return;\n        if (this.owner)\n            this.owner.performPolymerBlock(this.subjectIndex);\n    }\n    execAddHydrogens() {\n        let mol = this.input.mol.clone();\n        if (!this.requireAtoms())\n            return;\n        let atoms = this.subjectIndex;\n        if (atoms.length == 0)\n            atoms = Vec.identity1(mol.numAtoms);\n        for (let a of atoms) {\n            let hc = mol.atomHydrogens(a);\n            if (hc > 0)\n                SketchUtil.placeAdditionalHydrogens(mol, a, hc);\n        }\n        if (mol.numAtoms == this.input.mol.numAtoms) {\n            this.errmsg = 'Nothing needs to be added.';\n            return;\n        }\n        this.output.mol = mol;\n    }\n    execRemoveHydrogens() {\n        if (!this.requireAtoms())\n            return;\n        let mol = this.input.mol;\n        let selmask = this.subjectMask;\n        if (Vec.allFalse(selmask))\n            selmask = Vec.booleanArray(true, mol.numAtoms);\n        let keepmask = Vec.booleanArray(true, mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.boringHydrogen(mol, n)) {\n                let nbr = mol.atomAdjList(n)[0];\n                if (selmask[n - 1] || selmask[nbr - 1])\n                    keepmask[n - 1] = false;\n            }\n        if (Vec.allTrue(keepmask)) {\n            this.errmsg = 'Nothing to be deleted.';\n            return;\n        }\n        this.output.mol = MolUtil.subgraphMask(mol, keepmask);\n    }\n    execQueryClear() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol.clone();\n        const { currentBond } = this.input;\n        if (currentBond > 0 && QueryUtil.hasAnyQueryBond(mol, currentBond)) {\n            QueryUtil.deleteQueryBondAll(mol, currentBond);\n            this.output.mol = mol;\n            return;\n        }\n        let anything = false;\n        for (let a of this.subjectIndex)\n            if (QueryUtil.hasAnyQueryAtom(mol, a)) {\n                QueryUtil.deleteQueryAtomAll(mol, a);\n                anything = true;\n            }\n        for (let b = 1; b <= mol.numBonds; b++)\n            if (this.subjectMask[mol.bondFrom(b) - 1] && this.subjectMask[mol.bondTo(b) - 1] && QueryUtil.hasAnyQueryBond(mol, b)) {\n                QueryUtil.deleteQueryBondAll(mol, b);\n                anything = true;\n            }\n        if (anything)\n            this.output.mol = mol;\n        else\n            this.errmsg = 'No query terms to clear.';\n    }\n    execQueryCopy() {\n        if (!this.requireSubject())\n            return;\n        const { mol, currentBond } = this.input;\n        if (currentBond > 0) {\n            if (!QueryUtil.hasAnyQueryBond(mol, currentBond)) {\n                this.errmsg = 'Bond has no query terms.';\n                return;\n            }\n            let qmol = new Molecule();\n            qmol.addAtom('*', 0, 0);\n            qmol.addAtom('*', Molecule.IDEALBOND, 0);\n            qmol.addBond(1, 2, 1);\n            qmol.setBondExtra(1, mol.bondExtra(currentBond).filter((xtra) => xtra.startsWith('q')));\n            this.toClipboard = qmol.toString();\n        }\n        else if (this.subjectLength == 1) {\n            let atom = this.subjectIndex[0];\n            if (!QueryUtil.hasAnyQueryAtom(mol, atom)) {\n                this.errmsg = 'Atom has no query terms.';\n                return;\n            }\n            let qmol = new Molecule();\n            qmol.addAtom('*', 0, 0);\n            qmol.setAtomExtra(1, mol.atomExtra(atom).filter((xtra) => xtra.startsWith('q')));\n            this.toClipboard = qmol.toString();\n        }\n        else\n            this.errmsg = 'Subject has to be a single atom or bond.';\n    }\n    execQueryPaste() {\n        if (!this.requireSubject())\n            return;\n        let qmol = this.param.qmol;\n        if (!qmol) { }\n        else if (qmol.numAtoms == 1 && qmol.atomElement(1) == '*' && QueryUtil.hasAnyQueryAtom(qmol, 1)) {\n            let mol = this.output.mol = this.input.mol.clone();\n            let qterms = qmol.atomExtra(1).filter((xtra) => xtra.startsWith('q'));\n            for (let a of this.subjectIndex) {\n                let aterms = mol.atomExtra(a).filter((xtra) => xtra.startsWith('q'));\n                mol.setAtomExtra(a, [...aterms, ...qterms]);\n            }\n            return;\n        }\n        else if (qmol.numAtoms == 2 && qmol.atomElement(1) == '*' && qmol.atomElement(2) == '*' &&\n            qmol.numBonds == 1 && QueryUtil.hasAnyQueryBond(qmol, 1)) {\n            let mol = this.output.mol = this.input.mol.clone();\n            let qterms = qmol.bondExtra(1).filter((xtra) => xtra.startsWith('q'));\n            for (let b = 1; b <= mol.numBonds; b++)\n                if (this.subjectMask[mol.bondFrom(b) - 1] && this.subjectMask[mol.bondTo(b) - 1]) {\n                    let bterms = mol.bondExtra(b).filter((xtra) => xtra.startsWith('q'));\n                    mol.setBondExtra(b, [...bterms, ...qterms]);\n                }\n            return;\n        }\n        this.errmsg = 'Unable to paste query terms.';\n    }\n    execQuerySetAtom() {\n    }\n    execQuerySetBond() {\n    }\n    execQueryBondAny() {\n        if (!this.requireSubject())\n            return;\n        const { mol, currentBond } = this.input;\n        let bonds = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                bonds.push(n);\n        if (bonds.length == 0) {\n            this.errmsg = 'Must select at least one bond.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        for (let b of bonds) {\n            this.output.mol.setBondOrder(b, 0);\n            QueryUtil.setQueryBondOrders(this.output.mol, b, [-1, 0, 1, 2, 3, 4]);\n        }\n    }\n    execSproutDirection(deltaX, deltaY) {\n        var _a, _b;\n        if (!this.requireCurrent())\n            return;\n        if (deltaX == 0 && deltaY == 0)\n            return;\n        const { mol, currentAtom } = this.input;\n        let angleOptions;\n        if (mol.atomAdjCount(currentAtom) == 0)\n            angleOptions = Vec.identity0(12).map((n) => n * TWOPI / 12);\n        else\n            angleOptions = (_a = SketchUtil.primeDirections(mol, currentAtom)) !== null && _a !== void 0 ? _a : SketchUtil.exitVectors(mol, currentAtom);\n        if (angleOptions.length == 0)\n            return;\n        let theta = Math.atan2(deltaY, deltaX);\n        let idx = Vec.idxMin(angleOptions.map((look) => Math.abs(angleDiff(theta, look)) + 0.01 * Math.abs(Math.sin(look))));\n        let px = mol.atomX(currentAtom) + Molecule.IDEALBOND * Math.cos(angleOptions[idx]);\n        let py = mol.atomY(currentAtom) + Molecule.IDEALBOND * Math.sin(angleOptions[idx]);\n        this.output.mol = mol.clone();\n        let newAtom = this.output.mol.addAtom('C', px, py);\n        this.output.mol.addBond(currentAtom, newAtom, 1);\n        this.output.mol = (_b = SketchUtil.joinOverlappingAtoms(this.output.mol, Vec.booleanArray(true, this.output.mol.numAtoms))) !== null && _b !== void 0 ? _b : this.output.mol;\n        for (let n = 1; n <= this.output.mol.numAtoms; n++) {\n            let dx = this.output.mol.atomX(n) - px, dy = this.output.mol.atomY(n) - py;\n            if (norm2_xy(dx, dy) < CoordUtil.OVERLAP_THRESHOLD_SQ) {\n                this.output.currentAtom = n;\n                break;\n            }\n        }\n    }\n    requireSubject() {\n        if (this.subjectLength == 0)\n            this.errmsg = 'Subject required: current atom/bond or selected atoms.';\n        return this.subjectLength > 0;\n    }\n    requireAtoms() {\n        if (this.input.mol.numAtoms == 0)\n            this.errmsg = 'There are no atoms.';\n        return this.input.mol.numAtoms > 0;\n    }\n    requireCurrent() {\n        if (this.input.currentAtom == 0 && this.input.currentBond == 0) {\n            this.errmsg = 'There must be a current atom or bond.';\n            return false;\n        }\n        return true;\n    }\n    requireSelected() {\n        if (!this.hasSelected)\n            this.errmsg = 'No atoms are selected.';\n        return this.hasSelected;\n    }\n    pickSelectedGroup(groups, dir) {\n        if (this.subjectLength == 0)\n            return 0;\n        for (let i = 0; i < groups.length; i++) {\n            let g = groups[i];\n            let all = true;\n            for (let j = 0; j < g.length; j++)\n                if (!this.subjectMask[g[j] - 1]) {\n                    all = false;\n                    break;\n                }\n            if (all) {\n                i += dir;\n                return i < 0 ? i + groups.length : i >= groups.length ? i - groups.length : i;\n            }\n        }\n        for (let i = 0; i < groups.length; i++) {\n            let g = groups[i];\n            for (let j = 0; j < g.length; j++)\n                if (this.subjectMask[g[j] - 1])\n                    return i;\n        }\n        return 0;\n    }\n    zapSubject() {\n        this.output.currentAtom = 0;\n        this.output.currentBond = 0;\n        this.output.selectedMask = Vec.booleanArray(false, this.input.mol.numAtoms);\n    }\n    performBondNew(atom, order, type) {\n        let mol = this.input.mol;\n        let ang = SketchUtil.calculateNewBondAngles(mol, atom, order);\n        if (ang.length == 0)\n            ang = SketchUtil.exitVectors(mol, atom);\n        if (ang.length == 0) {\n            this.errmsg = 'Could not find a suitable geometry for a new substituent.';\n            return;\n        }\n        let bx = [], by = [], bscore = [];\n        for (let n = 0; n < ang.length; n++) {\n            let x = mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(ang[n]);\n            let y = mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(ang[n]);\n            let score = CoordUtil.congestionPoint(mol, x, y);\n            if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(atom)] <= 2)\n                score += Math.abs(angleNorm(ang[n])) * 1E-8;\n            else\n                score += Math.abs(angleDiff(0.5 * Math.PI, ang[n])) * 1E-8;\n            bx.push(x);\n            by.push(y);\n            bscore.push(score);\n        }\n        let idx = Vec.idxSort(bscore);\n        this.output.mol = mol.clone();\n        let anum = CoordUtil.atomAtPoint(this.output.mol, bx[idx[0]], by[idx[0]]);\n        if (anum == 0)\n            anum = this.output.mol.addAtom('C', bx[idx[0]], by[idx[0]]);\n        MolUtil.addBond(this.output.mol, atom, anum, order, type);\n        if (idx.length >= 2) {\n            this.output.altmol = mol.clone();\n            anum = CoordUtil.atomAtPoint(this.output.altmol, bx[idx[1]], by[idx[1]]);\n            if (anum == 0)\n                anum = this.output.altmol.addAtom('C', bx[idx[1]], by[idx[1]]);\n            MolUtil.addBond(this.output.altmol, atom, anum, order, type);\n        }\n    }\n    performBondChange(order, type) {\n        let mol = this.input.mol;\n        let bonds = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                bonds.push(n);\n        let switchType = type == Molecule.BONDTYPE_DECLINED || type == Molecule.BONDTYPE_INCLINED;\n        let stereoType = switchType || type == Molecule.BONDTYPE_UNKNOWN;\n        let anyChange = switchType;\n        for (let n = 0; n < bonds.length && !anyChange; n++) {\n            let b = bonds[n];\n            if (mol.bondOrder(b) != order && type == Molecule.BONDTYPE_NORMAL)\n                anyChange = true;\n            else if (mol.bondType(b) != type)\n                anyChange = true;\n        }\n        if (!anyChange) {\n            this.errmsg = 'No bond changes made.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 0; n < bonds.length; n++) {\n            let b = bonds[n], bfr = this.output.mol.bondFrom(b), bto = this.output.mol.bondTo(b);\n            if (switchType && this.output.mol.bondType(b) == type) {\n                this.output.mol.setBondFromTo(b, bto, bfr);\n            }\n            else if (this.output.mol.bondOrder(b) != order || this.output.mol.bondType(b) != type) {\n                if (!stereoType && order != this.output.mol.bondOrder(b))\n                    this.output.mol.setBondOrder(b, order);\n                else\n                    this.output.mol.setBondType(b, type);\n            }\n            else if (switchType) {\n                this.output.mol.setBondFromTo(b, bto, bfr);\n            }\n        }\n    }\n    performBondGeomAtom(geom, atom) {\n        let mol = this.input.mol;\n        let adj = mol.atomAdjList(atom);\n        let asz = adj.length, gsz = SketchUtil.GEOM_ANGLES[geom].length;\n        if (asz > gsz) {\n            this.errmsg = 'The current atom has more bonds than does the selected geometry.';\n            return;\n        }\n        if (asz == 0) {\n            this.performBondNew(atom, 1, Molecule.BONDTYPE_NORMAL);\n            return;\n        }\n        if (asz == gsz) {\n            this.output.mol = SketchUtil.refitAtomGeometry(mol, atom, geom);\n            if (this.output.mol == null)\n                this.errmsg = 'Could not re-fit the atom geometry.';\n            return;\n        }\n        let ang = CoordUtil.atomBondAngles(mol, atom);\n        let newang = SketchUtil.mapAngleSubstituent(geom, ang);\n        if (newang == null) {\n            this.output.mol = SketchUtil.refitAtomGeometry(mol, atom, geom);\n            if (this.output.mol == null)\n                this.errmsg = 'Could not re-fit the atom geometry.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        let theta = SketchUtil.pickNewAtomDirection(mol, atom, newang);\n        let x = this.output.mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(theta);\n        let y = this.output.mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(theta);\n        let anum = CoordUtil.atomAtPoint(this.output.mol, x, y);\n        if (anum == 0)\n            anum = this.output.mol.addAtom('C', x, y);\n        MolUtil.addBond(this.output.mol, atom, anum, 1);\n    }\n    performBondGeomBond(geom, bond) {\n        let mol = this.input.mol;\n        let bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        let ac1 = mol.atomAdjCount(bfr), ac2 = mol.atomAdjCount(bto);\n        if (ac1 > 1 && ac2 == 1) { }\n        else if (ac1 == 1 && ac2 > 1) {\n            let t = ac1;\n            ac1 = ac2;\n            ac2 = t;\n        }\n        else {\n            this.errmsg = 'One end of the bond must be terminal.';\n            return;\n        }\n        let adj = mol.atomAdjList(bfr);\n        let x1 = mol.atomX(bfr), y1 = mol.atomY(bfr);\n        let x2 = mol.atomX(bto), y2 = mol.atomY(bto);\n        let ang = [];\n        for (let n = 0, p = 0; n < adj.length; n++)\n            if (adj[n] != bto) {\n                ang.push(Math.atan2(mol.atomY(adj[n]) - y1, mol.atomX(adj[n]) - x1));\n            }\n        let newang = SketchUtil.mapAngleSubstituent(geom, ang);\n        if (newang == null) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        let bestAng = TWOPI + 1, bestX = 0, bestY = 0;\n        let curth = Math.atan2(y2 - y1, x2 - x1), r = norm_xy(x2 - x1, y2 - y1);\n        for (let n = 0; n < newang.length; n++) {\n            let th = angleDiff(newang[n], curth);\n            if (th < 0)\n                th += TWOPI;\n            if (n > 0 && th > bestAng)\n                continue;\n            let x = x1 + r * Math.cos(th + curth);\n            let y = y1 + r * Math.sin(th + curth);\n            if (CoordUtil.atomAtPoint(mol, x, y) > 0)\n                continue;\n            bestAng = th;\n            bestX = x;\n            bestY = y;\n        }\n        if (bestAng > TWOPI) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        this.output.mol.setAtomPos(bto, bestX, bestY);\n    }\n    checkAbbreviationReady() {\n        let junction = 0;\n        let mol = this.input.mol, subjmask = this.subjectMask;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let b1 = mol.bondFrom(n), b2 = mol.bondTo(n);\n            let atom = 0;\n            if ((subjmask[b1 - 1] && !subjmask[b2 - 1] && MolUtil.hasAbbrev(mol, b1)) ||\n                (subjmask[b2 - 1] && !subjmask[b1 - 1] && MolUtil.hasAbbrev(mol, b2))) {\n                this.errmsg = 'Already an abbreviation.';\n                return false;\n            }\n            if (subjmask[b1 - 1] && !subjmask[b2 - 1])\n                atom = b1;\n            else if (subjmask[b2 - 1] && !subjmask[b1 - 1])\n                atom = b2;\n            if (atom == 0 || atom == junction) { }\n            else if (junction == 0)\n                junction = atom;\n            else {\n                this.errmsg = 'The selected group must be terminal.';\n                return false;\n            }\n        }\n        return true;\n    }\n    mobileSide(bond, disqualTerminal = false) {\n        let { mol } = this.input;\n        let atom1 = mol.bondFrom(bond), atom2 = mol.bondTo(bond);\n        let g = Graph.fromMolecule(mol);\n        g.removeEdge(atom1 - 1, atom2 - 1);\n        let side1 = [], side2 = [];\n        for (let grp of g.calculateComponentGroups()) {\n            if (grp.includes(atom1 - 1))\n                side1 = Vec.add(grp, 1);\n            if (grp.includes(atom2 - 1))\n                side2 = Vec.add(grp, 1);\n        }\n        let weight1 = side1.length * (mol.atomRingBlock(atom1) > 0 ? 2 : 1);\n        let weight2 = side2.length * (mol.atomRingBlock(atom2) > 0 ? 2 : 1);\n        let sel1 = false, sel2 = false;\n        for (let a of side1)\n            if (this.isSelected(a)) {\n                sel1 = true;\n                break;\n            }\n        for (let a of side2)\n            if (this.isSelected(a)) {\n                sel2 = true;\n                break;\n            }\n        if (disqualTerminal && mol.atomAdjCount(atom1) == 1)\n            return [atom2, atom1, side2];\n        else if (disqualTerminal && mol.atomAdjCount(atom2) == 1)\n            return [atom1, atom2, side1];\n        else if (sel1 && !sel2) { }\n        else if ((sel2 && !sel1) || weight2 < weight1)\n            return [atom2, atom1, side2];\n        return [atom1, atom2, side1];\n    }\n    isSelected(atom) {\n        let mask = this.input.selectedMask;\n        return mask ? mask[atom - 1] : false;\n    }\n    removePolymerBlock(atoms) {\n        let polymer = new PolymerBlock(this.input.mol.clone());\n        for (let id of polymer.getIDList()) {\n            let unit = polymer.getUnit(id);\n            for (let atom of atoms)\n                if (unit.atoms.includes(atom)) {\n                    polymer.removeUnit(id);\n                    polymer.rewriteMolecule();\n                    this.output.mol = polymer.mol;\n                    return true;\n                }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=MoleculeActivity.js.map","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Mixture} from './Mixture';\nimport {MoleculeStream} from 'webmolkit/io/MoleculeStream';\nimport {StandardUnits, Units} from './Units';\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {ActivityType, MoleculeActivity, SketchState} from 'webmolkit/sketcher/MoleculeActivity';\nimport {MixfileComponent} from './Mixfile';\n\n/*\n\tMixture normalisation options: recommendations for how to make a mixture more conformant. It is up to the caller\n\tto decide what to do with this information.\n*/\n\nexport interface NormMixtureNote\n{\n\torigin:number[];\n\n\tstereoEnum?:string[]; // if defined, contains stereo-enumerated versions of current\n\n\t// units converted into concentration, if both possible & necessary\n\tconcQuantity?:number | number[]; // a concentration numeric which is associated with the units below (two numbers in case of a range)\n\tconcError?:number; // optional standard error (applies to quantity when it's a scalar)\n\tconcUnits?:string; // units for quantity (e.g. %, mol/L, g, etc.)\n\tconcRelation?:string;\n}\n\nenum AbsType\n{\n\tNone,\n\tMass, // reference scale: g\n\tVolume, // reference scale: L\n\tMoles, // reference scale: mol\n}\n\nexport class NormMixture\n{\n\tpublic notes:NormMixtureNote[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor(private mixture:Mixture)\n\t{\n\t}\n\n\tpublic analyse():void\n\t{\n\t\tlet origins = this.mixture.getOrigins();\n\t\tlet compList = origins.map((origin) => this.mixture.getComponent(origin));\n\n\t\tfor (let n = 0; n < origins.length; n++)\n\t\t{\n\t\t\tlet note:NormMixtureNote = {origin: origins[n]};\n\n\t\t\t// stereocentres get expanded out\n\t\t\tlet comp = compList[n];\n\t\t\tif (comp.molfile && Vec.isBlank(comp.contents))\n\t\t\t{\n\t\t\t\tlet mol = MoleculeStream.readUnknown(comp.molfile);\n\t\t\t\tif (!mol) continue;\n\t\t\t\tlet stereo = this.enumerateStereo(mol);\n\t\t\t\tif (Vec.notBlank(stereo)) note.stereoEnum = stereo.map((mol) => MoleculeStream.writeMDLMOL(mol));\n\t\t\t}\n\n\t\t\tthis.notes.push(note);\n\t\t}\n\n\t\tlet childIndexes:number[][] = [];\n\t\tfor (let n = 0; n < origins.length; n++)\n\t\t{\n\t\t\tchildIndexes[n] = [];\n\t\t\tlet o = origins[n];\n\t\t\tfor (let i = n + 1; i < origins.length; i++)\n\t\t\t\tif (origins[i].length == o.length + 1 && Vec.equals(o, origins[i].slice(0, o.length))) childIndexes[n].push(i);\n\t\t}\n\n\t\t// conversion of \"absolute units\" to concentrations, where possible\n\t\tlet sumType = new Array(origins.length).fill(AbsType.None);\n\t\tlet sumAmount1 = Vec.numberArray(null, origins.length);\n\t\tlet sumAmount2 = Vec.numberArray(null, origins.length);\n\t\tlet sumError = Vec.numberArray(null, origins.length);\n\t\twhile (true)\n\t\t{\n\t\t\tlet modified = false;\n\n\t\t\tfor (let n = 0; n < origins.length; n++)\n\t\t\t{\n\t\t\t\tlet comp = compList[n], note = this.notes[n];\n\n\t\t\t\tif (sumType[n] == AbsType.None)\n\t\t\t\t{\n\t\t\t\t\t[sumType[n], sumAmount1[n], sumAmount2[n], sumError[n]] = this.toAbsoluteUnits(comp);\n\t\t\t\t\tif (sumType[n] != AbsType.None) modified = true;\n\t\t\t\t}\n\n\t\t\t\tif (Vec.isBlank(comp.contents)) continue;\n\n\t\t\t\t// if there's no absolute quantity presently available, see if we can add up the sub-components\n\t\t\t\tif (sumType[n] == AbsType.None)\n\t\t\t\t{\n\t\t\t\t\tlet amount = 0, childType = AbsType.None;\n\t\t\t\t\tfor (let i of childIndexes[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (sumType[i] == AbsType.None || sumAmount2[i] != null ||\n\t\t\t\t\t\t\t(childType != AbsType.None && sumType[i] != childType))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tchildType = AbsType.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchildType = sumType[i];\n\t\t\t\t\t\tamount += sumAmount1[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (childType != AbsType.None)\n\t\t\t\t\t{\n\t\t\t\t\t\tsumType[n] = childType;\n\t\t\t\t\t\tsumAmount1[n] = amount;\n\t\t\t\t\t\tmodified = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if current type is an absolute unit, see if all-but-one of the children have that same type\n\t\t\t\tif (sumType[n] != AbsType.None && childIndexes[n].length >= 2)\n\t\t\t\t{\n\t\t\t\t\tlet idxOne = -1, sum = 0;\n\t\t\t\t\tfor (let i of childIndexes[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (sumType[i] == AbsType.None)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (idxOne >= 0) {idxOne = -1; break;} // only one allowed\n\t\t\t\t\t\t\tidxOne = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (sumType[i] != sumType[n]) {idxOne = -1; break;} // can't be defined-but-different\n\t\t\t\t\t\telse if (sumAmount2[i] != null) {idxOne = -1; break;} // ranges disqualify\n\t\t\t\t\t\telse sum += sumAmount1[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (idxOne >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tsumType[idxOne] = sumType[n];\n\t\t\t\t\t\tsumAmount1[idxOne] = sumAmount1[n] - sum;\n\t\t\t\t\t\tmodified = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!modified) break;\n\t\t}\n\n\t\t// now use derived absolute units to infer concentration-types\n\t\tfor (let n = 0; n < origins.length; n++) if (sumType[n] != AbsType.None)\n\t\t{\n\t\t\tfor (let i of childIndexes[n]) if (sumType[i] != AbsType.None)\n\t\t\t{\n\t\t\t\tlet scale = 0, denom = sumAmount1[n], uri:string = null;\n\t\t\t\tif (sumType[i] == AbsType.Mass)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) [scale, uri] = [100 / denom, StandardUnits.pcWW];\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [100 / denom, StandardUnits.pcWV];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) {}\n\t\t\t\t}\n\t\t\t\telse if (sumType[i] == AbsType.Volume)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) {}\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [100 / denom, StandardUnits.pcVV];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) {}\n\t\t\t\t}\n\t\t\t\telse if (sumType[i] == AbsType.Moles)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) {}\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [1.0 / denom, StandardUnits.mol_L];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) [scale, uri] = [100 / denom, StandardUnits.pcMM];\n\t\t\t\t}\n\n\t\t\t\tif (uri != null)\n\t\t\t\t{\n\t\t\t\t\tif (sumAmount2[i] == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.notes[i].concQuantity = sumAmount1[i] * scale;\n\t\t\t\t\t\tthis.notes[i].concError = sumError[i] == null ? null : sumError[i] * scale;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.notes[i].concQuantity = [sumAmount1[i] * scale, sumAmount2[i] * scale];\n\t\t\t\t\t}\n\t\t\t\t\tthis.notes[i].concUnits = Units.uriToName(uri);\n\t\t\t\t\tthis.notes[i].concRelation = compList[n].relation;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic findNote(origin:number[]):NormMixtureNote\n\t{\n\t\tfor (let note of this.notes) if (Vec.equals(origin, note.origin)) return note;\n\t\treturn null;\n\t}\n\n\t// ------------ private methods ------------\n\n\t// if the given molecule has stereogenic centres (i.e. wavy bonds), enumerate them explicitly\n\tprivate enumerateStereo(mol:Molecule):Molecule[]\n\t{\n\t\tlet splitMolecule = (mol:Molecule):Molecule[] =>\n\t\t{\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++) if (mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN)\n\t\t\t{\n\t\t\t\tlet mol1 = mol.clone(), mol2 = mol.clone();\n\t\t\t\tif (mol.bondOrder(n) == 1)\n\t\t\t\t{\n\t\t\t\t\t// make up & down versions of the bond\n\t\t\t\t\tmol1.setBondType(n, Molecule.BONDTYPE_DECLINED);\n\t\t\t\t\tmol2.setBondType(n, Molecule.BONDTYPE_INCLINED);\n\t\t\t\t\treturn [mol1, mol2];\n\t\t\t\t}\n\t\t\t\telse if (mol.bondOrder(n) == 2)\n\t\t\t\t{\n\t\t\t\t\t// for a cis/trans double bond, use the sketcher algorithm to rotate it; if the rotation is rejected,\n\t\t\t\t\t// it'll just return the input molecule, with the stereolabel removed\n\t\t\t\t\tlet mol1 = mol.clone();\n\t\t\t\t\tmol1.setBondType(n, Molecule.BONDTYPE_NORMAL);\n\n\t\t\t\t\tlet mol2:Molecule = null;\n\t\t\t\t\tif (!mol.bondInRing(n))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet state:SketchState = {mol: mol1, currentAtom: 0, currentBond: n, selectedMask: null};\n\t\t\t\t\t\tlet activ = new MoleculeActivity(state, ActivityType.BondRotate, {});\n\t\t\t\t\t\tactiv.execute();\n\t\t\t\t\t\tif (!activ.errmsg && activ.output.mol) mol2 = activ.output.mol;\n\t\t\t\t\t}\n\t\t\t\t\treturn mol2 ? [mol1, mol2] : [mol1];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tlet list:Molecule[] = [mol];\n\t\tfor (let n = 0; n < list.length; n++)\n\t\t{\n\t\t\tlet emols = splitMolecule(list[n]);\n\t\t\tif (!emols) continue;\n\n\t\t\tlist[n] = emols[0];\n\t\t\tfor (let i = emols.length - 1; i >= 1; i--) list.splice(n + 1, 0, emols[i]);\n\t\t\tn--;\n\t\t}\n\n\t\treturn list.length > 1 ? list : null;\n\t}\n\n\t// converts the units within the component to \"absolute\" form, at a singular scale; return is type followed by\n\t// quantity1, quantity2, error (to capture ranges & errors, where applicable)\n\tprivate toAbsoluteUnits(comp:MixfileComponent):[AbsType, number, number, number]\n\t{\n\t\tif (!comp.units || comp.quantity == null /*|| typeof comp.quantity != 'number'*/) return [AbsType.None, null, null, null];\n\t\tlet uri = Units.nameToURI(comp.units);\n\t\tif (!uri) return [AbsType.None, null, null, null];\n\n\t\tlet scale = 0, type = AbsType.None;\n\n\t\tif (uri == StandardUnits.kg) [scale, type] = [1E3, AbsType.Mass];\n\t\telse if (uri == StandardUnits.g) [scale, type] = [1, AbsType.Mass];\n\t\telse if (uri == StandardUnits.mg) [scale, type] = [1E-3, AbsType.Mass];\n\t\telse if (uri == StandardUnits.ug) [scale, type] = [1E-6, AbsType.Mass];\n\t\telse if (uri == StandardUnits.ng) [scale, type] = [1E-9, AbsType.Mass];\n\t\telse if (uri == StandardUnits.L) [scale, type] = [1, AbsType.Volume];\n\t\telse if (uri == StandardUnits.mL) [scale, type] = [1E-3, AbsType.Volume];\n\t\telse if (uri == StandardUnits.uL) [scale, type] = [1E-6, AbsType.Volume];\n\t\telse if (uri == StandardUnits.nL) [scale, type] = [1E-9, AbsType.Volume];\n\t\telse if (uri == StandardUnits.mol) [scale, type] = [1, AbsType.Moles];\n\t\telse if (uri == StandardUnits.mmol) [scale, type] = [1E-3, AbsType.Moles];\n\t\telse if (uri == StandardUnits.umol) [scale, type] = [1E-6, AbsType.Moles];\n\t\telse if (uri == StandardUnits.nmol) [scale, type] = [1E-9, AbsType.Moles];\n\t\telse return [AbsType.None, null, null, null];\n\n\t\tif (typeof comp.quantity == 'number')\n\t\t{\n\t\t\tlet error = comp.error == null ? null : comp.error * scale;\n\t\t\treturn [type, (comp.quantity as number) * scale, null, error];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet [lo, hi] = comp.quantity as number[];\n\t\t\treturn [type, lo * scale, hi * scale, null];\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {deepClone} from 'webmolkit/util/util';\nimport {Mixfile, MIXFILE_VERSION, MixfileComponent} from './Mixfile';\nimport {Vec} from 'webmolkit/util/Vec';\n\n/*\n\tData container for mixtures: basically wraps the Mixfile interface, with additional functionality.\n\n\tNote that functionality should be assumed to be using shallow pointers to the underlying dictionary, unless\n\tspecified otherwise (e.g. clone).\n*/\n\nexport class Mixture\n{\n\t// ------------ public methods ------------\n\n\tconstructor(public mixfile?:Mixfile)\n\t{\n\t\tif (!mixfile) this.mixfile = {mixfileVersion: MIXFILE_VERSION};\n\t\telse if (!this.mixfile.mixfileVersion) this.mixfile.mixfileVersion = MIXFILE_VERSION;\n\t}\n\n\t// instantiates a new mixture object by casting a component into a root mixfile\n\tpublic static fromComponent(comp:MixfileComponent):Mixture\n\t{\n\t\tlet mixfile = deepClone(comp) as Mixfile;\n\t\tmixfile.mixfileVersion = MIXFILE_VERSION;\n\t\treturn new Mixture(mixfile);\n\t}\n\n\t// returns true if the mixture is blank\n\tpublic isEmpty():boolean\n\t{\n\t\treturn Mixture.isComponentEmpty(this.mixfile);\n\t}\n\tpublic static isComponentEmpty(comp:MixfileComponent):boolean\n\t{\n\t\tconst BITS = ['name', 'description', 'synonyms', 'formula', 'molfile', 'inchi', 'inchiKey', 'smiles',\n\t\t\t\t\t  'ratio', 'quantity', 'units', 'relation', 'identifiers', 'links'];\n\t\tfor (let bit of BITS) if ((comp as any)[bit] != null) return false;\n\t\tif (Vec.arrayLength(comp.contents) > 0) return false;\n\t\treturn true;\n\t}\n\n\t// returns true if there's something to put in the quantity section\n\tpublic static hasQuantity(comp:MixfileComponent):boolean\n\t{\n\t\treturn comp.quantity != null || comp.ratio != null;\n\t}\n\n\t// makes a deep copy of self\n\tpublic clone():Mixture\n\t{\n\t\treturn new Mixture(deepClone(this.mixfile));\n\t}\n\n\t// returns true if the two mixtures are identical at all parts of their branch structure\n\tpublic equals(other:Mixture):boolean\n\t{\n\t\tif (other == null) return false;\n\t\treturn this.recursiveEqual(this.mixfile, other.mixfile);\n\t}\n\n\t// unpacks a string into a mixture; throws an exception if anything went wrong\n\tpublic static deserialise(data:string):Mixture\n\t{\n\t\tlet mixfile = JSON.parse(data);\n\t\treturn new Mixture(mixfile);\n\t}\n\n\t// converts the entire underlying JSON mixfile into a prettyprinted string\n\tpublic serialise():string\n\t{\n\t\treturn Mixture.beautify(this.mixfile);\n\t}\n\n\t// likewise, for a sub-component\n\tpublic static serialiseComponent(comp:MixfileComponent):string\n\t{\n\t\treturn Mixture.beautify(comp);\n\t}\n\n\t// uses the \"origin vector\" to fetch a particular component; this is an array of indices, where [] indicates the root; its first\n\t// component is [0], the second child of its first component is [0,1], etc.\n\tpublic getComponent(origin:number[]):MixfileComponent\n\t{\n\t\tif (origin.length == 0) return this.mixfile;\n\t\tlet find:MixfileComponent = null, look = this.mixfile.contents || [];\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tfind = look[o];\n\t\t\tif (!find) return null;\n\t\t\tlook = find.contents || [];\n\t\t}\n\t\treturn find;\n\t}\n\tpublic getParentComponent(origin:number[]):MixfileComponent\n\t{\n\t\tif (origin.length == 0) return null;\n\t\torigin = origin.slice();\n\t\torigin.pop();\n\t\treturn this.getComponent(origin);\n\t}\n\n\t// returns a flat list of all components, i.e. without any hierarchy; these are all pointers to the originals, so\n\t// modifications can be made directly\n\tpublic getComponents():MixfileComponent[]\n\t{\n\t\tlet list:MixfileComponent[] = [], stack:MixfileComponent[] = [this.mixfile];\n\t\twhile (stack.length > 0)\n\t\t{\n\t\t\tlet comp = stack.shift();\n\t\t\tlist.push(comp);\n\t\t\tif (comp.contents) for (let sub of comp.contents) stack.push(sub);\n\t\t}\n\t\treturn list;\n\t}\n\n\t// returns an array that is equal in size to the number of nodes; each entry contains origin of that node\n\tpublic getOrigins():number[][]\n\t{\n\t\tlet origins:number[][] = [];\n\n\t\tlet nodeEnum = (origin:number[], comp:MixfileComponent):void =>\n\t\t{\n\t\t\torigins.push(origin);\n\t\t\tfor (let n = 0; n < Vec.arrayLength(comp.contents); n++) nodeEnum(Vec.append(origin, n), comp.contents[n]);\n\t\t};\n\n\t\tnodeEnum([], this.mixfile);\n\t\treturn origins;\n\t}\n\n\t// replaces a component at a given position; returns true if the new component was different to the old one\n\tpublic setComponent(origin:number[], comp:MixfileComponent):boolean\n\t{\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\n\t\t// copy over the dictionary entries in 'comp', noting if anything changed\n\t\tlet modified = false;\n\t\tfor (let k in comp)\n\t\t{\n\t\t\tlet v = (comp as any)[k];\n\t\t\tif (v != (find as any)[k])\n\t\t\t{\n\t\t\t\t(find as any)[k] = v;\n\t\t\t\tmodified = true;\n\t\t\t}\n\t\t}\n\n\t\t// cleanup by removing explicit nulls\n\t\tObject.keys(find).forEach((key:string) => {if ((find as any)[key] == null) delete (find as any)[key];});\n\n\t\treturn modified;\n\t}\n\n\t// deletes the indicated component, and collapses any child nodes into its own position (as opposed to just deleting\n\t// them too)\n\tpublic deleteComponent(origin:number[]):void\n\t{\n\t\tif (origin.length == 0) return; // can't delete the whole thing\n\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents, parent = look;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tparent = look;\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\t\tlet idx = origin[origin.length - 1];\n\t\tparent.splice(idx, 1);\n\t\tif (look) for (let c of look) parent.splice(idx++, 0, c);\n\t}\n\n\t// insert a new component \"above\" the existing one, and handle the reparenting\n\tpublic prependBefore(origin:number[], comp:MixfileComponent):void\n\t{\n\t\t// slightly different when prepending before the root element\n\t\tif (origin.length == 0)\n\t\t{\n\t\t\tlet mixfile = this.mixfile;\n\t\t\tlet subcomp:MixfileComponent = {};\n\t\t\tconst SKIP = ['mixfileVersion', 'contents'];\n\t\t\tfor (let key in (mixfile as any)) if (!SKIP.includes(key))\n\t\t\t{\n\t\t\t\t(subcomp as any)[key] = (mixfile as any)[key];\n\t\t\t\tdelete (mixfile as any)[key];\n\t\t\t}\n\t\t\tmixfile.contents = [subcomp];\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents, parent = look;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tparent = look;\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\t\tlet idx = origin[origin.length - 1];\n\t\tparent[idx] = comp;\n\t\tcomp.contents = [find];\n\t}\n\n\t// takes an origin vector and splits it into {parent origin} and {child index}; returns null on both counts if this is the root node\n\tpublic static splitOrigin(origin:number[]):[number[], number]\n\t{\n\t\tif (origin.length == 0) return [null, null];\n\t\tlet parent = origin.slice(0);\n\t\tlet idx = parent.splice(origin.length - 1, 1)[0];\n\t\treturn [parent, idx];\n\t}\n\n\t// makes a JSON object into a nicely formatted string for human readability\n\tpublic static beautify(json:any):string\n\t{\n\t\tlet lines = JSON.stringify(json, null, 4).split('\\n');\n\t\tlet regex = /^(\\s*\\\"\\w+\\\": )([\\[\\{].*)$/, regpad = /^(\\s*)/;\n\t\tfor (let n = 0; n < lines.length; n++)\n\t\t{\n\t\t\tlet match = regex.exec(lines[n]);\n\t\t\tif (!match) continue;\n\t\t\tlet padding = regpad.exec(lines[n]);\n\t\t\tlines[n] = match[1] + '\\n' + padding[1] + match[2];\n\t\t}\n\t\treturn lines.join('\\n');\n\t}\n\n\t// ------------ private methods ------------\n\n\t// returns true if this component, and all sub-components, are equal\n\tprivate recursiveEqual(comp1:MixfileComponent, comp2:MixfileComponent):boolean\n\t{\n\t\tlet dict1:any = comp1, dict2:any = comp2;\n\t\t/*let keys1 = Object.keys(dict1), keys2 = Object.keys(dict2);\n\t\tlet i:number;\n\t\tif ((i = keys1.indexOf('contents')) >= 0) keys1.splice(i, 1);\n\t\tif ((i = keys2.indexOf('contents')) >= 0) keys2.splice(i, 1);*/\n\t\tlet keys1:string[] = [], keys2:string[] = [];\n\t\tfor (let k in dict1) if (k != 'contents' && dict1[k] != null) keys1.push(k);\n\t\tfor (let k in dict2) if (k != 'contents' && dict2[k] != null) keys2.push(k);\n\t\tkeys1.sort();\n\t\tkeys2.sort();\n\t\tif (!Vec.equals(keys1, keys2)) return false; // different keys (less contents) is a dealbreaker\n\t\tfor (let k of keys1)\n\t\t{\n\t\t\tlet v1 = dict1[k], v2 = dict2[k];\n\t\t\tif (Array.isArray(v1) && Array.isArray(v2))\n\t\t\t{\n\t\t\t\tif (!Vec.equals(v1, v2)) return false;\n\t\t\t}\n\t\t\telse // assume scalar\n\t\t\t{\n\t\t\t\tif (v1 != v2) return false;\n\t\t\t}\n\t\t}\n\n\t\tlet len = Vec.arrayLength(comp1.contents);\n\t\tif (len != Vec.arrayLength(comp2.contents)) return false;\n\t\tfor (let n = 0; n < len; n++) if (!this.recursiveEqual(comp1.contents[n], comp2.contents[n])) return false;\n\n\t\treturn true;\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\n/*\n\tThe Mixfile is a raw definition of the contents of a mixture, which maps directly to the JSON datastructure\n\tthat holds the serialised content. For keeping an operable mixture instance, see the Mixture class.\n*/\n\nexport const MIXFILE_VERSION = 1.00; // version number to use for newly created instances\n\nexport type MixfileMetadatum = string | (string | number)[];\n\nexport interface Mixfile extends MixfileComponent\n{\n\tmixfileVersion:number;\n}\n\nexport interface MixfileComponent\n{\n\tname?:string;\n\tdescription?:string;\n\tsynonyms?:string[];\n\n\t// molecular specification: none of them are mandatory, but if more than one is specified, they must refer to the same species, \n\t// to the extent that the format allows; InChI strings are expected to be standard, while SMILES are not\n\tformula?:string;\n\tmolfile?:string;\n\tinchi?:string;\n\tinchiKey?:string;\n\tsmiles?:string;\n\n\t// if the concentration is known, then these fields should be filled out as appropriate; if the concentration is a ratio,\n\t// it is relative to all of the components within the same branch\n\tquantity?:number | number[]; // a concentration numeric which is associated with the units below (two numbers in case of a range)\n\terror?:number; // optional standard error (applies to quantity when it's a scalar)\n\tratio?:number[]; // a ratio, specified as [numerator, denominator]\n\tunits?:string; // units for quantity (e.g. %, mol/L, g, etc.)\n\trelation?:string; // optional modifier when applied to quantity (e.g. >, <, ~)\n\n\t// identifiers that map the substance to external databases (e.g. PubChem, ChemSpider, CAS, etc.); identifiers are ID numbers, and\n\t// the meaning is implied by the context; links should be resolvable URLs, which are an alternative way of locating external\n\t// resources; in some cases where there are multiple identifiers, the value should be specified as an array\n\tidentifiers?:Record<string, string | string[]>;\n\tlinks?:Record<string, string | string[]>;\n\n\t// metadata starts with an IRI that defines the core concept, and then may be followed by scalar data and/or other IRIs; this allows\n\t// discrete facts to be asserted about the component, as well as numeric values such as physical properties and their units\n\tmetadata?:MixfileMetadatum[];\n\n\t// subcomponents: if this is a discrete molecular entity, then there will be none; usually there are either 0 or 2-or-more; in cases\n\t// where there are any subcomponents, any of the properties above apply to all of these subcomponents collectively\n\tcontents?:MixfileComponent[];\n}\n\n// useful for cleaning up external JSON content\nexport const MIXFILE_COMPONENT_FIELDS =\n[\n\t'name', 'description', 'synonyms', 'formula', 'molfile', 'inchi', 'inchiKey', 'smiles',\n\t'ratio', 'quantity', 'units', 'relation', 'identifiers', 'links', 'contents'\n];\nexport const MIXFILE_ROOT_FIELDS =\n[\n\t'mixfileVersion', ...MIXFILE_COMPONENT_FIELDS\n];\n\n/* orignal example of what the format might look like (1st draft):\n{\n\t\"mixture\": \"1.0 M lithium diisopropyl amide in THF/hexanes\",\n\t\"contents\":\n\t[\n\t\t{\n\t\t\t\"name\": \"lithium diisopropylamide\",\n\t\t\t\"synonyms\": [\"LDA\", \"(iPr)2N.Li\"],\n\t\t\t\"formula\": \"C6H14LiN\",\n\t\t\t\"pubchem\": \"2724682\",\n\t\t\t\"chemspider\": \"2006804\",\n\t\t\t\"inchi\": \"InChI=1S/C6H14N.Li/c1-5(2)7-6(3)4;/h5-6H,1-4H3;/q-1;+1\",\n\t\t\t\"smiles\": \"[Li+].CC(C)[N-]C(C)C\",\n\t\t\t\"molfile\": \"\\nOpenMolecule\\n\\n  8  7  0  0  0  0  0  0  0  0999 V2000\\n    0.0000    0.0000    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\\n    1.5000    0.0000    0.0000 Li  0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.7500    1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.7500   -1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.0000    2.5981    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -2.2500    1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n    0.0000   -2.5981    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -2.2500   -1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n  1  2  1  0  0  0  0\\n  1  3  1  0  0  0  0\\n  1  4  1  0  0  0  0\\n  3  5  1  0  0  0  0\\n  3  6  1  0  0  0  0\\n  4  7  1  0  0  0  0\\n  4  8  1  0  0  0  0\\nM  END\\n\",\n\t\t\t\"quantity\": 1.0,\n\t\t\t\"units\": \"mol/L\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"solvent\",\n\t\t\t\"contents\":\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"tetrahydrofuran\",\n\t\t\t\t\t\"synonyms\": [\"THF\"],\n\t\t\t\t\t\"formula\": \"C4H8O\",\n\t\t\t\t\t\"pubchem\": \"8028\",\n\t\t\t\t\t\"chemspider\": \"7737\",\n\t\t\t\t\t\"inchi\": \"InChI=1S/C4H8O/c1-2-4-5-3-1/h1-4H2\",\n\t\t\t\t\t\"smiles\": \"C1CCOC1\",\n\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\"fraction\": [1, 8]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"group\": \"hexanes\",\n\t\t\t\t\t\"fraction\": [7, 8],\n\t\t\t\t\t\"contents\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"n-hexane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"8058\",\n\t\t\t\t\t\t\t\"chemspider\": \"7767\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-3-5-6-4-2/h3-6H2,1-2H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCCCCC\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [50, 70]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"methylcyclopentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7296\",\n\t\t\t\t\t\t\t\"chemspider\": \"7024\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H12/c1-6-4-2-3-5-6/h6H,2-5H2,1H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CC1CCCC1\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [10, 20]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"2-methypentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7892\",\n\t\t\t\t\t\t\t\"chemspider\": \"7604\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-4-5-6(2)3/h6H,4-5H2,1-3H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCCC(C)C\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [1, 5]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"3-methylpentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7282\",\n\t\t\t\t\t\t\t\"chemspider\": \"7010\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-4-6(3)5-2/h6H,4-5H2,1-3H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCC(C)CC\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [1, 5]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"other hexanes\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n*/\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {deepClone} from 'webmolkit/util/util';\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {MoleculeStream} from 'webmolkit/io/MoleculeStream';\nimport {MolUtil} from 'webmolkit/mol/MolUtil';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Mixfile, MixfileComponent} from './Mixfile';\nimport {NormMixture, NormMixtureNote} from './NormMixture';\nimport {Mixture} from './Mixture';\nimport {InChIDelegate} from './InChIDelegate';\nimport {Units} from './Units';\n\n// quick implementation of CRC hash codes\nlet crc_table:number[] = [];\nfunction make_crc_table():void\n{\n\tif (crc_table.length > 0) return;\n\tfor (let n = 0; n < 256; n++)\n\t{\n\t\tlet c = n;\n\t\tfor (let i = 0; i < 8; i++) if ((c & 1) != 0) c = 0xEDB88320 ^ (c >>> 1); else c = (c >>> 1);\n\t\tcrc_table.push(c);\n\t}\n}\nconst BOOT_CRC = 0xFFFFFFFF;\nfunction start_crc():number {return BOOT_CRC;}\nfunction feed_crc(crc:number, byte:number):number\n{\n\tlet idx = (crc ^ byte) & 0xFF;\n\treturn crc_table[idx] ^ (crc >>> 8);\n}\nfunction end_crc(crc:number):number {return crc ^ BOOT_CRC;}\n\n// work-in-progress placeholder for the recursive MInChI assembler\ninterface MInChIBuilder\n{\n\tlayerN:string; // N-layer is the hierarchical form\n\tlayerG:string; // G-layer has the concentrations\n}\n\n// for marking the segments of the outgoing MInChI string according to category\nexport enum MInChISegment\n{\n\tNone = 0,\n\tHeader, // the initial recognition string\n\tComponent, // the components (of which there can be multiple contiguous instances)\n\tHierarchy, // the /n layer\n\tConcentration, // the /g layer\n}\n\n// augmented version of a component used to stash some MInChI-specific derived content\ninterface MInChIComponent extends MixfileComponent\n{\n\tinchiFrag:string;\n\tuseRatio:number;\n\tnote:NormMixtureNote;\n}\n\nconst MINCHI_VERSION = 'MInChI=0.99.1S';\n\n/*\n\tFormulates a MInChI string out of the given mixture.\n*/\n\nexport class ExportMInChI\n{\n\tprivate mixture:Mixture;\n\tprivate norm:NormMixture;\n\tprivate minchi = '?';\n\tprivate segment:MInChISegment[] = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(mixfile:Mixfile, private inchi:InChIDelegate)\n\t{\n\t\tthis.mixture = new Mixture(deepClone(mixfile));\n\t\tthis.norm = new NormMixture(this.mixture);\n\t\tthis.norm.analyse();\n\t}\n\n\t// this should generally be called first: any component that has a structure but not an InChI string gets one calculated,\n\t// which presumes that the external environment has been configured to allow this; returns true if anything was done, i.e.\n\t// the parameter mixture was modified; note that if any components have an InChI that is wrong, this will be believed\n\tpublic async fillInChI():Promise<boolean>\n\t{\n\t\tlet modified = false;\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile || comp.inchi) continue;\n\t\t\tlet mol:Molecule = null;\n\t\t\ttry {mol = MoleculeStream.readUnknown(comp.molfile);}\n\t\t\tcatch (e) {continue;} // silent failure if it's an invalid molecule\n\t\t\tif (MolUtil.isBlank(mol)) continue;\n\t\t\tlet {inchi, inchiKey} = await this.inchi.generate(mol);\n\t\t\tcomp.inchi = inchi;\n\t\t\tcomp.inchiKey = inchiKey;\n\t\t\tmodified = true;\n\t\t}\n\t\treturn modified;\n\t}\n\n\t// assembles the MInChI string: once this has completed, the result is available\n\tpublic formulate():void\n\t{\n\t\tlet modmix = this.mixture.clone();\n\t\t//this.sortContents(sortmix.contents);\n\n\t\tfor (let origin of modmix.getOrigins())\n\t\t{\n\t\t\tlet note = this.norm.findNote(origin);\n\t\t\tif (note) (modmix.getComponent(origin) as MInChIComponent).note = note;\n\t\t}\n\n\t\t// special deal: any component with >2 mixtures that has a consistent ratio definition needs to be marked\n\t\t// at the parent-component level\n\t\tskip: for (let comp of modmix.getComponents()) if (Vec.len(comp.contents) >= 2)\n\t\t{\n\t\t\tif (Vec.len(comp.contents[0].ratio) != 2) continue;\n\t\t\tlet [numer, denom] = comp.contents[0].ratio;\n\t\t\tfor (let n = 1; n < comp.contents.length; n++)\n\t\t\t{\n\t\t\t\tlet ratio = comp.contents[n].ratio;\n\t\t\t\tif (Vec.len(ratio) != 2 || ratio[1] != denom) continue skip;\n\t\t\t\tnumer += ratio[0];\n\t\t\t}\n\t\t\tif (numer != denom) continue;\n\t\t\tfor (let sub of comp.contents) (sub as MInChIComponent).useRatio = sub.ratio[0];\n\t\t}\n\n\t\t// assemble the InChI fragments - which is sorted and unique and devoid of blanks; same for \"placenames\", which are\n\t\t// terminal components that have name and concentration information, but no InChI\n\t\tlet inchiList:string[] = [];\n\t\tconst PFX = 'InChI=1S/'; // if it doesn't start with this, we don't consider it a valid InChI\n\t\tfor (let origin of modmix.getOrigins())\n\t\t{\n\t\t\tlet mcomp = modmix.getComponent(origin) as MInChIComponent;\n\t\t\tif (Vec.len(mcomp.contents) > 0) continue; // leaf nodes only need apply\n\n\t\t\tmcomp.inchiFrag = mcomp.inchi || '';\n\t\t\tif (mcomp.inchiFrag.startsWith(PFX)) mcomp.inchiFrag = mcomp.inchiFrag.substring(PFX.length);\n\t\t\tif (!inchiList.includes(mcomp.inchiFrag)) inchiList.push(mcomp.inchiFrag);\n\t\t}\n\t\tinchiList.sort();\n\n\t\tlet root = modmix.mixfile as any as MInChIComponent;\n\t\tlet builder = this.assembleContents(root, inchiList);\n\n\t\tthis.minchi = '';\n\t\tthis.segment = [];\n\n\t\tlet appendSegment = (str:string, type:MInChISegment):void =>\n\t\t{\n\t\t\tthis.minchi += str;\n\t\t\tfor (let n = 0; n < str.length; n++) this.segment.push(type);\n\t\t};\n\n\t\tappendSegment(MINCHI_VERSION, MInChISegment.Header);\n\t\tappendSegment('/', MInChISegment.None);\n\t\tfor (let n = 0; n < inchiList.length; n++)\n\t\t{\n\t\t\tif (n > 0) appendSegment('&', MInChISegment.None);\n\t\t\tappendSegment(inchiList[n], MInChISegment.Component);\n\t\t}\n\t\tappendSegment('/', MInChISegment.None);\n\t\tappendSegment('n' + builder.layerN, MInChISegment.Hierarchy);\n\t\tappendSegment('/', MInChISegment.None);\n\t\tappendSegment('g' + builder.layerG, MInChISegment.Concentration);\n\t}\n\n\t// returns the MInChI notationstring formulated as above\n\tpublic getResult():string\n\t{\n\t\treturn this.minchi;\n\t}\n\n\t// return the segmentation values that mark the type for each character (corresponding to the notation string)\n\tpublic getSegment():MInChISegment[]\n\t{\n\t\treturn this.segment;\n\t}\n\n\t// prepares a \"hash key\" for the mixture: this is basically a sorted unique list of the InChI keys for the structures; it has no concentration or hierarchy\n\t// information because these things are not canonical\n\tpublic makeLongHashKey():string\n\t{\n\t\tlet bits:string[] = [];\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile) continue;\n\t\t\tif (!comp.inchiKey) throw 'Mixture has InChIKey(s) missing';\n\t\t\tif (!comp.inchiKey.startsWith('InChIKey=')) throw 'Invalid InChI key: ' + comp.inchiKey;\n\t\t\tbits.push(comp.inchiKey.substring(9));\n\t\t}\n\t\tbits = Vec.sortedUnique(bits);\n\t\treturn 'Long-MInChIKey=' + bits.join(';');\n\t}\n\n\t// similar to above except fixed length and quite short\n\tpublic makeShortHashKey():string\n\t{\n\t\tmake_crc_table();\n\t\tconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\t\tconst NCRC = 4;\n\t\tlet crclist:number[] = [], pos = 0;\n\t\tfor (let n = 0; n < NCRC; n++) crclist.push(start_crc());\n\n\t\tlet feedCharacter = (letter:string) =>\n\t\t{\n\t\t\tlet idx = LETTERS.indexOf(letter);\n\t\t\tif (idx < 0) return;\n\t\t\tcrclist[pos] = feed_crc(crclist[pos], idx);\n\t\t\tpos = pos < NCRC - 1 ? pos + 1 : 0;\n\t\t};\n\n\t\tlet bits:string[] = [];\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile) continue;\n\t\t\tif (!comp.inchiKey) throw 'Mixture has InChIKey(s) missing';\n\t\t\tif (!comp.inchiKey.startsWith('InChIKey=')) throw 'Invalid InChI key: ' + comp.inchiKey;\n\t\t\tbits.push(comp.inchiKey.substring(9));\n\t\t}\n\t\tfor (let bit of Vec.sortedUnique(bits)) for (let letter of bit)\n\t\t{\n\t\t\tfeedCharacter(letter);\n\t\t}\n\n\t\tlet key = 'Short-MInChIKey=';\n\n\t\tfor (let crc of crclist)\n\t\t{\n\t\t\tcrc = end_crc(crc) >>> 1; // clear the least significant bit and the sign as well\n\t\t\tfor (let n = 0; n < 7; n++)\n\t\t\t{\n\t\t\t\tlet idx = crc % 26;\n\t\t\t\tkey += LETTERS[idx];\n\t\t\t\tcrc = Math.trunc(crc / 26);\n\t\t\t}\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t// turns a concentration into a suitable precursor string, or null otherwise\n\tpublic static formatConcentration(quantity:number | number[], error:number, useRatio:number, units:string, relation:string):string\n\t{\n\t\tlet mantissa = (value:number, exp:number):string => Math.round(value * Math.pow(10, -exp)).toString();\n\n\t\t// check for special deal: the \"useRatio\" property is defined if everything in this peer group has a ratio with\n\t\t// the same denominator and they add up correctly; when this isn't the case, it will fall through and convert to\n\t\t// a percentage\n\t\tif (useRatio != null)\n\t\t{\n\t\t\tlet exp = this.determineExponent([useRatio], 4);\n\t\t\treturn mantissa(useRatio, exp) + 'rt' + exp;\n\t\t}\n\n\t\t/*if (comp.ratio && comp.ratio.length >= 2)\n\t\t{\n\t\t\tlet numer = comp.ratio[0], denom = comp.ratio[1];\n\t\t\tif (!(denom > 0)) return null;\n\t\t\tlet value = 100 * numer / denom, exp = this.determineExponent([value], 4);\n\t\t\treturn mantissa(value, exp) + 'pp' + exp;\n\t\t}*/\n\n\t\tif (quantity == null || units == null) return null;\n\n\t\t// special deal (maybe temporary): units that are written with common names that map to a URI are converted automatically\n\t\tlet unitURI = units;\n\t\tif (!unitURI.startsWith('http://')) unitURI = Units.nameToURI(unitURI);\n\t\tif (!unitURI) return;\n\n\t\t// TODO: maybe another special deal for absolute weight/volume/mole quantities - convert them into ratios, to the extent that's\n\t\t// possible... maybe approximating where necessary\n\n\t\tlet bits:string[] = [];\n\n\t\tif (relation != null) bits.push(relation);\n\n\t\tlet values:number[] = typeof quantity == 'number' ? [quantity as number] : quantity;\n\t\tif (error != null) values.push(error);\n\n\t\tlet [mnemonic, scaled] = Units.convertToMInChI(unitURI, values);\n\t\tif (!mnemonic) return;\n\n\t\tlet exp = this.determineExponent(scaled, 4);\n\n\t\tbits.push(mantissa(scaled[0], exp));\n\t\tif (scaled.length > 1)\n\t\t{\n\t\t\tif (Array.isArray(quantity)) bits.push(':'); else bits.push('?');\n\t\t\tbits.push(mantissa(scaled[1], exp));\n\t\t}\n\t\tbits.push(mnemonic);\n\t\tbits.push(exp.toString());\n\n\t\treturn bits.join('');\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate assembleContents(mcomp:MInChIComponent, inchiList:string[]):MInChIBuilder\n\t{\n\t\tlet tree:MInChIBuilder = {layerN: '', layerG: ''};\n\t\tlet builder:MInChIBuilder = {layerN: '', layerG: ''};\n\n\t\t// emit sub-contents recursively\n\t\tif (Vec.len(mcomp.contents) > 0)\n\t\t{\n\t\t\tif (mcomp.contents != null) for (let subComp of mcomp.contents)\n\t\t\t{\n\t\t\t\tlet subTree = this.assembleContents(subComp as MInChIComponent, inchiList);\n\t\t\t\t//if (!subTree.layerN && !subTree.layerG) continue;\n\t\t\t\tif (tree.layerN.length > 0 || tree.layerG.length > 0)\n\t\t\t\t{\n\t\t\t\t\ttree.layerN += '&';\n\t\t\t\t\ttree.layerG += '&';\n\t\t\t\t}\n\t\t\t\ttree.layerN += subTree.layerN;\n\t\t\t\ttree.layerG += subTree.layerG;\n\t\t\t}\n\t\t}\n\n\t\t// append the current information\n\t\tlet idx = mcomp.inchiFrag != null ? inchiList.indexOf(mcomp.inchiFrag) + 1 : 0;\n\t\tif (idx > 0) builder.layerN += idx.toString();\n\n\t\tlet conc = ExportMInChI.formatConcentration(mcomp.quantity, mcomp.error, mcomp.useRatio, mcomp.units, mcomp.relation);\n\t\tif (!conc && mcomp.note)\n\t\t{\n\t\t\tlet {concQuantity, concError, concUnits, concRelation} = mcomp.note;\n\t\t\tconc = ExportMInChI.formatConcentration(concQuantity, concError, null, concUnits, concRelation);\n\t\t}\n\t\tif (conc) builder.layerG += conc;\n\n\t\tif (tree.layerN.length > 0 || tree.layerG.length > 0)\n\t\t{\n\t\t\tbuilder.layerN = '{' + tree.layerN + '}' + builder.layerN;\n\t\t\tbuilder.layerG = '{' + tree.layerG + '}' + builder.layerG;\n\t\t\tthis.shaveBeard(builder);\n\t\t}\n\n\t\treturn builder;\n\t}\n\n\t// removes unnecessary nesting stubble\n\tprivate shaveBeard(builder:MInChIBuilder):void\n\t{\n\t\twhile (builder.layerN.startsWith('{{') && builder.layerN.endsWith('}}') &&\n\t\t\t   builder.layerG.startsWith('{{') && builder.layerG.endsWith('}}'))\n\t\t{\n\t\t\tbuilder.layerN = builder.layerN.substring(1, builder.layerN.length - 1);\n\t\t\tbuilder.layerG = builder.layerG.substring(1, builder.layerG.length - 1);\n\t\t}\n\t}\n\n\t// given a positive number, gives out an appropriate exponent to scale it to, such that the mantissa can be an integer that accommodates\n\t// the required number of significant figures\n\tprivate static determineExponent(values:number[], sigfig:number):number\n\t{\n\t\tlet minval = Number.POSITIVE_INFINITY;\n\t\tfor (let v of values) minval = Math.min(minval, Math.abs(v));\n\n\t\tif (!Number.isFinite(minval) || Number.isNaN(minval) || minval <= 0) return 0;\n\n\t\tlet exp = Math.round(Math.log10(minval)) - sigfig;\n\t\t//let man = Math.round(minval * Math.pow(10, -exp));\n\n\t\tlet str:string[] = [];\n\t\tfor (let v of values) str.push(Math.round(v * Math.pow(10, -exp)).toString());\n\n\t\touter: while (true)\n\t\t{\n\t\t\tfor (let n = 0; n < str.length; n++)\n\t\t\t{\n\t\t\t\tif (!str[n].endsWith('0')) break outer;\n\t\t\t\tstr[n] = str[n].substring(0, str[n].length - 1);\n\t\t\t}\n\t\t\texp++;\n\t\t}\n\n\t\treturn exp;\n\t}\n}\n\n","import { FontData } from './FontData';\nexport class OutlineMeasurement {\n    constructor(offsetX, offsetY, pointScale) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.pointScale = pointScale;\n        this.invScale = 1 / pointScale;\n    }\n    scale() { return this.pointScale; }\n    angToX(ax) { return ax * this.pointScale + this.offsetX; }\n    angToY(ay) { return ay * -this.pointScale + this.offsetY; }\n    xToAng(px) { return (px - this.offsetX) * this.invScale; }\n    yToAng(py) { return (py - this.offsetY) * -this.invScale; }\n    yIsUp() { return false; }\n    measureText(str, fontSize) { return FontData.main.measureText(str, fontSize); }\n}\n//# sourceMappingURL=ArrangeMeasurement.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Mixfile} from './Mixfile';\nimport {Mixture} from './Mixture';\n\n/*\n\tCollection of mixtures: convenience methods for handling an array thereof, including serialisation.\n\n\tMost of the methods that fetch or modify the mixture content one item at a time make deep clones, so it is safe to\n\tassume that there are no dangling pointers. Exceptions include the constructor, bulk modifications, and methods marked\n\tas providing direct access.\n*/\n\nexport class MixtureCollection\n{\n\tprivate mixtures:Mixture[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor(mixtures?:Mixture[])\n\t{\n\t\tif (mixtures) this.mixtures = mixtures.slice(0);\n\t}\n\n\tpublic get count():number\n\t{\n\t\treturn this.mixtures.length;\n\t}\n\tpublic getMixture(idx:number):Mixture\n\t{\n\t\treturn this.mixtures[idx].clone();\n\t}\n\tpublic getMixtureDirect(idx:number):Mixture\n\t{\n\t\treturn this.mixtures[idx];\n\t}\n\tpublic setMixture(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures[idx] = mixture.clone();\n\t}\n\tpublic setMixtureDirect(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures[idx] = mixture;\n\t}\n\tpublic deleteMixture(idx:number):void\n\t{\n\t\tthis.mixtures.splice(idx, 1);\n\t}\n\tpublic appendMixture(mixture:Mixture):number\n\t{\n\t\tthis.mixtures.push(mixture.clone());\n\t\treturn this.mixtures.length - 1;\n\t}\n\tpublic appendMixtureDirect(mixture:Mixture):number\n\t{\n\t\tthis.mixtures.push(mixture);\n\t\treturn this.mixtures.length - 1;\n\t}\n\tpublic appendCollection(collection:MixtureCollection):void\n\t{\n\t\tthis.mixtures = this.mixtures.concat(collection.mixtures);\n\t}\n\tpublic insertMixture(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures.splice(idx, 0, mixture.clone());\n\t}\n\tpublic swapMixtures(idx1:number, idx2:number):void\n\t{\n\t\tlet [m1, m2] = [this.mixtures[idx1], this.mixtures[idx2]];\n\t\tthis.mixtures[idx1] = m2;\n\t\tthis.mixtures[idx2] = m1;\n\t}\n\n\t// unpacks a string into a mixture; throws an exception if anything went wrong\n\tpublic static deserialise(data:string):MixtureCollection\n\t{\n\t\tlet list = JSON.parse(data);\n\t\tif (!Array.isArray(list)) throw 'Input content is not a JSON array.';\n\t\tlet mixtures:Mixture[] = [];\n\t\tfor (let mixfile of list) mixtures.push(new Mixture(mixfile));\n\t\treturn new MixtureCollection(mixtures);\n\t}\n\n\t// converts the entire underlying JSON mixfile into a prettyprinted string; note the optional beautification parameter:\n\t// if not specified, small collections will get nice whitespace, whereas large ones will be densely packed for efficiency\n\tpublic serialise(beautify?:boolean):string\n\t{\n\t\tlet list:Mixfile[] = [];\n\t\tfor (let mixture of this.mixtures) list.push(mixture.mixfile);\n\t\t//return beautify || list.length <= 1000 ? Mixture.beautify(list) : JSON.stringify(list);\n\t\tif (beautify || list.length <= 100) return Mixture.beautify(list);\n\t\t\n\t\tlet lines = list.map((mixfile) => JSON.stringify(mixfile));\n\t\treturn '[\\n    ' + lines.join(',\\n    ') + '\\n]\\n';\n\t}\n\n\t// ------------ private methods ------------\n\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {DrawMixture} from '../mixture/DrawMixture';\nimport {ExportMInChI, MInChISegment} from '../mixture/ExportMInChI';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {escapeHTML} from 'webmolkit/util/util';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport {MixtureCollection} from '../mixture/MixtureCollection';\nimport {InChI} from '../nodejs/InChI';\n\n/*\n\tLoads a mixture collection and emits it as visualisable HTML.\n*/\n\nexport class RenderHTML\n{\n\tconstructor(private htmlFile:string, private withMInChI:boolean)\n\t{\n\t}\n\n\tpublic async exec():Promise<void>\n\t{\n\t\tlet content:string;\n\t\ttry {content = fs.readFileSync(this.htmlFile).toString();}\n\t\tcatch (ex) {throw 'Unable to read file ' + this.htmlFile + ': ' + ex;}\n\n\t\tlet mixlist = MixtureCollection.deserialise(content);\n\t\tif (mixlist.count == 0) throw 'Nothing to render';\n\n\t\tlet emitln = (line:string):void => console.log(line);\n\t\tlet emit = (txt:string):void => {process.stdout.write(txt);};\n\n\t\temitln('<html>');\n\t\temitln('<style>');\n\t\temitln('table {border-collapse: collapse;}');\n\t\temitln('td {border: 1px solid black; padding: 0.2em;}');\n\t\temitln('.header {background-color: #FFC0C0;}');\n\t\temitln('.component {background-color: #C0C0FF;}');\n\t\temitln('.hierarchy {background-color: #E0E080;}');\n\t\temitln('.concentration {background-color: #80E080;}');\n\t\temitln('</style>');\n\t\t\n\t\temitln('<body><table>');\n\n\t\tlet policy = RenderPolicy.defaultColourOnWhite(15);\n\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\n\t\tfor (let n = 0; n < mixlist.count; n++)\n\t\t{\n\t\t\tlet mixture = mixlist.getMixtureDirect(n);\n\n\t\t\temitln('<tr>');\n\t\t\temitln(`<td>${n + 1}</td>`);\n\n\t\t\tlet layout = new ArrangeMixture(mixture, measure, policy);\n\t\t\tlayout.arrange();\n\n\t\t\tlet gfx = new MetaVector();\n\t\t\tlet draw = new DrawMixture(layout, gfx);\n\t\t\tdraw.draw();\n\t\t\tgfx.normalise();\n\n\t\t\temitln('<td>');\n\t\t\temitln(gfx.createSVG());\n\t\t\temitln('</td>');\n\n\t\t\tif (this.withMInChI)\n\t\t\t{\n\t\t\t\tlet maker = new ExportMInChI(mixture.mixfile, new InChI());\n\t\t\t\tawait maker.fillInChI();\n\t\t\t\tmaker.formulate();\n\t\t\t\t//let minchi = creator.getResult();\n\t\t\t\t//emitln('<td><pre>' + escapeHTML(minchi) + '</pre></td>');\n\n\t\t\t\temit('<td><pre>');\n\t\t\t\tlet minchi = maker.getResult(), segment = maker.getSegment();\n\t\t\t\tfor (let n = 0; n < minchi.length; n++)\n\t\t\t\t{\n\t\t\t\t\temit('<span');\n\t\t\t\t\tif (segment[n] == MInChISegment.Header) emit(' class=\"header\"');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Component) emit(' class=\"component\"');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Hierarchy) emit(' class=\"hierarchy\"');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Concentration) emit(' class=\"concentration\"');\n\t\t\t\t\temit('>' + escapeHTML(minchi[n]) + '</span>');\n\t\t\t\t}\n\t\t\t\temitln('</pre></td>');\n\t\t\t}\n\n\t\t\temitln('</tr>');\n\t\t}\n\n\t\temitln('</table></body></html>');\n\t}\n\n\t// ------------ private methods ------------\n}\n\n","import { DataSheet } from '../ds/DataSheet';\nimport { Vec } from '../util/Vec';\nclass Aspect {\n    constructor(code, ds, allowModify) {\n        this.code = code;\n        this.allowModify = true;\n        this.ds = ds ? ds : new DataSheet();\n        if (allowModify != null)\n            this.allowModify = allowModify;\n    }\n    isColumnReserved(colName) { return false; }\n    areColumnsReserved(colNames) {\n        let resMask = Vec.booleanArray(false, colNames.length);\n        for (let n = 0; n < colNames.length; n++)\n            resMask[n] = this.isColumnReserved(colNames[n]);\n        return resMask;\n    }\n    rowFirstBlock(row) { return true; }\n    rowBlockCount(row) { return 1; }\n    aspectUnion(other) { }\n    initiateNewRow(row) { }\n    columnEffectivelyBlank(row) { return []; }\n    numTextRenderings(row) { return 0; }\n    produceTextRendering(row, idx) { return null; }\n    numGraphicRenderings(row) { return 0; }\n    produceGraphicRendering(row, idx, policy) { return null; }\n    numHeaderRenderings() { return 0; }\n    produceHeaderRendering(idx) { return null; }\n}\nAspect.TEXT_PLAIN = 0;\nAspect.TEXT_LINK = 1;\nAspect.TEXT_HTML = 2;\nexport { Aspect };\n//# sourceMappingURL=Aspect.js.map","let supportedAspects = {};\nexport function registerAspect(classdef) {\n    let code = classdef.CODE, name = classdef.NAME;\n    supportedAspects[code] = { code, name, classdef };\n}\nexport class AspectList {\n    constructor(ds) {\n        this.ds = ds;\n    }\n    list() {\n        let present = [], absent = [];\n        let codes = new Set();\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            codes.add(this.ds.getExtType(n));\n        for (let code in supportedAspects)\n            if (codes.has(code))\n                present.push(code);\n            else\n                absent.push(code);\n        return [present, absent];\n    }\n    instantiate(code) {\n        let supp = supportedAspects[code];\n        if (supp)\n            return new supp.classdef(this.ds);\n        return null;\n    }\n    enumerate() {\n        let aspects = [];\n        for (let n = 0; n < this.ds.numExtensions; n++) {\n            let code = this.ds.getExtType(n);\n            if (supportedAspects[code])\n                aspects.push(this.instantiate(code));\n        }\n        return aspects;\n    }\n    aspectName(code) {\n        let supp = supportedAspects[code];\n        return supp ? supp.name : null;\n    }\n}\n//# sourceMappingURL=AspectList.js.map","import { MoleculeStream } from '../io/MoleculeStream';\nimport { Aspect } from './Aspect';\nimport { registerAspect } from './AspectList';\nexport class AssayProvenanceHeader {\n    constructor() {\n        this.prefixes = {};\n        this.targetName = '';\n        this.targetURI = '';\n        this.organismName = '';\n        this.organismURI = '';\n        this.targetTypeName = '';\n        this.targetTypeURI = '';\n        this.cellName = '';\n        this.cellURI = '';\n        this.assayTypeName = '';\n        this.assayTypeURI = '';\n        this.assayDescription = '';\n        this.sourceName = '';\n        this.sourceURI = '';\n        this.sourceVersion = '';\n        this.documentName = '';\n        this.documentURI = '';\n        this.measureTypeName = '';\n        this.measureTypeURI = '';\n        this.unitNames = [];\n        this.unitURIs = [];\n    }\n}\nclass AssayProvenance extends Aspect {\n    static isAssayProvenance(ds) {\n        for (let n = 0; n < ds.numExtensions; n++)\n            if (ds.getExtType(n) == AssayProvenance.CODE)\n                return true;\n        return false;\n    }\n    constructor(ds, allowModify) {\n        super(AssayProvenance.CODE, ds, allowModify);\n        this.setup();\n    }\n    getHeader() {\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == AssayProvenance.CODE)\n                return this.parseMetaData(this.ds.getExtData(n));\n        return null;\n    }\n    setHeader(header) {\n        let content = this.formatMetaData(header);\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == AssayProvenance.CODE) {\n                this.ds.setExtData(n, content);\n                return;\n            }\n        this.ds.appendExtension(AssayProvenance.NAME, AssayProvenance.CODE, content);\n    }\n    getMolecule(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_MOLECULE);\n        return col < 0 ? null : this.ds.getMolecule(row, col);\n    }\n    getName(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_NAME);\n        return col < 0 ? null : this.ds.getString(row, col);\n    }\n    getValue(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_VALUE);\n        return col < 0 ? null : this.ds.isNull(row, col) ? Number.NaN : this.ds.getReal(row, col);\n    }\n    getError(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_ERROR);\n        if (col < 0)\n            return null;\n        if (this.ds.isNull(row, col))\n            return Number.NaN;\n        let err = this.ds.getReal(row, col);\n        if (err <= 0)\n            return Number.NaN;\n        return err;\n    }\n    getUnits(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_UNITS);\n        return col < 0 ? null : this.ds.getString(row, col);\n    }\n    getRelation(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_RELATION);\n        return col < 0 ? null : this.ds.getString(row, col);\n    }\n    getSourceURI(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_SOURCEURI);\n        return col < 0 ? null : this.ds.getString(row, col);\n    }\n    setMolecule(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_MOLECULE);\n        if (col >= 0)\n            this.ds.setMolecule(row, col, v);\n    }\n    setName(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_NAME);\n        if (col >= 0)\n            this.ds.setString(row, col, v);\n    }\n    setValue(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_VALUE);\n        if (col < 0) { }\n        else if (Number.isNaN(v))\n            this.ds.setToNull(row, col);\n        else\n            this.ds.setReal(row, col, v);\n    }\n    setError(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_ERROR);\n        if (col < 0) { }\n        else if (Number.isNaN(v))\n            this.ds.setToNull(row, col);\n        else\n            this.ds.setReal(row, col, v);\n    }\n    setUnits(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_UNITS);\n        if (col >= 0)\n            this.ds.setString(row, col, v);\n    }\n    setRelation(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_RELATION);\n        if (col >= 0)\n            this.ds.setString(row, col, v);\n    }\n    setSourceURI(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_SOURCEURI);\n        if (col >= 0)\n            this.ds.setString(row, col, v);\n    }\n    setup() {\n        this.parseAndCorrect();\n    }\n    parseAndCorrect() {\n        let header = new AssayProvenanceHeader();\n        let got = false;\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == AssayProvenance.CODE) {\n                header = this.parseMetaData(this.ds.getExtData(n));\n                got = true;\n                break;\n            }\n        if (this.allowModify) {\n            this.ds.ensureColumn(AssayProvenance.COLNAME_MOLECULE, \"molecule\", 'Molecular structure of compound being measured');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_NAME, \"string\", 'Name of compound');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_VALUE, \"real\", 'Measured value');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_ERROR, \"real\", 'Experimental error of measurement');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_UNITS, \"string\", 'Units of measurement');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_RELATION, \"string\", 'Relation: exact, greater or less');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_SOURCEURI, \"string\", 'Source identifier for activity measurement');\n        }\n        if (!got && this.allowModify) {\n            let content = this.formatMetaData(header);\n            this.ds.appendExtension(AssayProvenance.NAME, AssayProvenance.CODE, content);\n        }\n    }\n    parseMetaData(content) {\n        let header = new AssayProvenanceHeader();\n        for (let line of content.split(/\\r?\\n/)) {\n            let eq = line.indexOf('=');\n            if (eq < 0)\n                continue;\n            if (line.startsWith('pfx:'))\n                header.prefixes[MoleculeStream.skUnescape(line.substring(4, eq))] = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('targetName='))\n                header.targetName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('targetURI='))\n                header.targetURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('organismName='))\n                header.organismName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('organismURI='))\n                header.organismURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('targetTypeName='))\n                header.targetTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('targetTypeURI='))\n                header.targetTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('cellName='))\n                header.cellName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('cellURI='))\n                header.cellURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('assayTypeName='))\n                header.assayTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('assayTypeURI='))\n                header.assayTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('assayDescription='))\n                header.assayDescription = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('sourceName='))\n                header.sourceName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('sourceURI='))\n                header.sourceURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('sourceVersion='))\n                header.sourceVersion = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('documentName='))\n                header.documentName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('documentURI='))\n                header.documentURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('measureTypeName='))\n                header.measureTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('measureTypeURI='))\n                header.measureTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('unit:')) {\n                header.unitNames.push(MoleculeStream.skUnescape(line.substring(5, eq)));\n                header.unitURIs.push(MoleculeStream.skUnescape(line.substring(eq + 1)));\n            }\n        }\n        return header;\n    }\n    formatMetaData(header) {\n        let content = '';\n        for (let pfx in header.prefixes)\n            content += 'pfx:' + MoleculeStream.skEscape(pfx) + '=' + MoleculeStream.skEscape(header.prefixes[pfx]) + '\\n';\n        content += 'targetName=' + MoleculeStream.skEscape(header.targetName) + '\\n';\n        content += 'targetURI=' + MoleculeStream.skEscape(header.targetURI) + '\\n';\n        content += 'organismName=' + MoleculeStream.skEscape(header.organismName) + '\\n';\n        content += 'organismURI=' + MoleculeStream.skEscape(header.organismURI) + '\\n';\n        content += 'targetTypeName=' + MoleculeStream.skEscape(header.targetTypeName) + '\\n';\n        content += 'targetTypeURI=' + MoleculeStream.skEscape(header.targetTypeURI) + '\\n';\n        content += 'cellName=' + MoleculeStream.skEscape(header.cellName) + '\\n';\n        content += 'cellURI=' + MoleculeStream.skEscape(header.cellURI) + '\\n';\n        content += 'assayTypeName=' + MoleculeStream.skEscape(header.assayTypeName) + '\\n';\n        content += 'assayTypeURI=' + MoleculeStream.skEscape(header.assayTypeURI) + '\\n';\n        content += 'assayDescription=' + MoleculeStream.skEscape(header.assayDescription) + '\\n';\n        content += 'sourceName=' + MoleculeStream.skEscape(header.sourceName) + '\\n';\n        content += 'sourceURI=' + MoleculeStream.skEscape(header.sourceURI) + '\\n';\n        content += 'sourceVersion=' + MoleculeStream.skEscape(header.sourceVersion) + '\\n';\n        content += 'documentName=' + MoleculeStream.skEscape(header.documentName) + '\\n';\n        content += 'documentURI=' + MoleculeStream.skEscape(header.documentURI) + '\\n';\n        content += 'measureTypeName=' + MoleculeStream.skEscape(header.measureTypeName) + '\\n';\n        content += 'measureTypeURI=' + MoleculeStream.skEscape(header.measureTypeURI) + '\\n';\n        for (let n = 0, num = Math.min(header.unitNames.length, header.unitURIs.length); n < num; n++)\n            content += 'unit:' + MoleculeStream.skEscape(header.unitNames[n]) + '=' + MoleculeStream.skEscape(header.unitURIs[n]) + '\\n';\n        return content;\n    }\n    plainHeading() { return AssayProvenance.NAME; }\n    isColumnReserved(colName) {\n        return colName == AssayProvenance.COLNAME_VALUE || colName == AssayProvenance.COLNAME_ERROR ||\n            colName == AssayProvenance.COLNAME_UNITS || colName == AssayProvenance.COLNAME_RELATION ||\n            colName == AssayProvenance.COLNAME_SOURCEURI;\n    }\n    numTextRenderings(row) { return 2; }\n    produceTextRendering(row, idx) {\n        let header = this.getHeader();\n        if (idx == 0) {\n            let tr = {\n                name: 'Activity',\n                descr: 'Activity measurement details for this record',\n                text: '',\n                type: Aspect.TEXT_PLAIN\n            };\n            let val = this.getValue(row), error = this.getError(row);\n            let units = this.getUnits(row), rel = this.getRelation(row);\n            tr.text = '';\n            if (!Number.isNaN(val)) {\n                if (rel)\n                    tr.text += rel + ' ';\n                tr.text += val;\n                if (!Number.isNaN(error))\n                    tr.text += ' \\u{00B1} ' + error;\n                if (units)\n                    tr.text += ' ' + units;\n            }\n            return tr;\n        }\n        else if (idx == 1) {\n            let tr = {\n                name: 'Source',\n                descr: 'Origin of the structure and activity measurement',\n                text: '',\n                type: Aspect.TEXT_LINK\n            };\n            let url = this.getSourceURI(row);\n            for (let pfx in header.prefixes)\n                if (url.startsWith(pfx + ':')) {\n                    url = header.prefixes[pfx] + url.substring(pfx.length + 1);\n                    break;\n                }\n            tr.text = url;\n            return tr;\n        }\n        return null;\n    }\n}\nAssayProvenance.CODE = 'org.mmi.aspect.AssayProvenance';\nAssayProvenance.NAME = 'Assay Provenance';\nAssayProvenance.COLNAME_MOLECULE = 'Molecule';\nAssayProvenance.COLNAME_NAME = 'Name';\nAssayProvenance.COLNAME_VALUE = 'Value';\nAssayProvenance.COLNAME_ERROR = 'Error';\nAssayProvenance.COLNAME_UNITS = 'Units';\nAssayProvenance.COLNAME_RELATION = 'Relation';\nAssayProvenance.COLNAME_SOURCEURI = 'SourceURI';\nAssayProvenance.URI_UNIT_M = 'http://purl.obolibrary.org/obo/UO_0000062';\nAssayProvenance.URI_UNIT_mM = 'http://purl.obolibrary.org/obo/UO_0000063';\nAssayProvenance.URI_UNIT_uM = 'http://purl.obolibrary.org/obo/UO_0000064';\nAssayProvenance.URI_UNIT_nM = 'http://purl.obolibrary.org/obo/UO_0000065';\nAssayProvenance.URI_UNIT_pM = 'http://purl.obolibrary.org/obo/UO_0000066';\nAssayProvenance.URI_UNIT_logM = 'http://www.bioassayontology.org/bao#BAO_0000101';\nAssayProvenance.URI_UNIT_perM = 'http://www.bioassayontology.org/bao#BAO_0000102';\nAssayProvenance.URI_UNIT_gL = 'http://purl.obolibrary.org/obo/UO_0000175';\nAssayProvenance.URI_UNIT_mgL = 'http://purl.obolibrary.org/obo/UO_0000273';\nAssayProvenance.URI_UNIT_ugL = 'http://purl.obolibrary.org/obo/UO_0000275';\nAssayProvenance.URI_UNIT_binary = 'http://www.bioassayontology.org/bao#BAO_0080023';\nexport { AssayProvenance };\nregisterAspect(AssayProvenance);\n//# sourceMappingURL=AssayProvenance.js.map","import { MoleculeStream } from '../io/MoleculeStream';\nimport { Vec } from '../util/Vec';\nimport { Aspect } from './Aspect';\nimport { registerAspect } from './AspectList';\nclass MeasurementData extends Aspect {\n    static isMeasurementData(ds) {\n        for (let n = 0; n < ds.numExtensions; n++)\n            if (ds.getExtType(n) == MeasurementData.CODE)\n                return true;\n        return false;\n    }\n    constructor(ds, allowModify) {\n        super(MeasurementData.CODE, ds, allowModify);\n        this.header = { units: [], fields: [] };\n        this.setup();\n    }\n    getHeader() {\n        return this.header;\n    }\n    setHeader(header) {\n        this.header = header;\n        let content = this.formatMetaData(header);\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == MeasurementData.CODE) {\n                this.ds.setExtData(n, content);\n                return;\n            }\n        this.ds.appendExtension(MeasurementData.NAME, MeasurementData.CODE, content);\n    }\n    effectHeader(header) {\n        this.setHeader(header);\n        this.ensureFields();\n    }\n    rename(fldidx, newName) {\n        let oldName = this.header.fields[fldidx].name;\n        if (oldName == newName)\n            return;\n        this.header.fields[fldidx].name = newName;\n        this.setHeader(this.header);\n        for (let sfx of [MeasurementData.SUFFIX_VALUE, MeasurementData.SUFFIX_ERROR, MeasurementData.SUFFIX_UNITS, MeasurementData.SUFFIX_MOD]) {\n            let col = this.ds.findColByName(oldName + sfx);\n            if (col >= 0)\n                this.ds.changeColumnName(col, newName + sfx, this.ds.colDescr(col));\n        }\n    }\n    reservedColumns(fldidx) {\n        let fieldName = this.header.fields[fldidx].name;\n        return [fieldName + MeasurementData.SUFFIX_VALUE, fieldName + MeasurementData.SUFFIX_ERROR,\n            fieldName + MeasurementData.SUFFIX_UNITS, fieldName + MeasurementData.SUFFIX_MOD];\n    }\n    getValue(row, fldidx) {\n        return this.getValueField(row, this.header.fields[fldidx]);\n    }\n    getValueField(row, field) {\n        let value = { value: Number.NaN, error: Number.NaN, units: '', mod: '' };\n        let colValue = this.ds.findColByName(field.name + MeasurementData.SUFFIX_VALUE, \"real\");\n        let colError = this.ds.findColByName(field.name + MeasurementData.SUFFIX_ERROR, \"real\");\n        let colUnits = this.ds.findColByName(field.name + MeasurementData.SUFFIX_UNITS, \"string\");\n        let colMod = this.ds.findColByName(field.name + MeasurementData.SUFFIX_MOD, \"string\");\n        if (colValue >= 0 && this.ds.notNull(row, colValue))\n            value.value = this.ds.getReal(row, colValue);\n        if (colError >= 0 && this.ds.notNull(row, colError))\n            value.error = this.ds.getReal(row, colError);\n        if (colUnits >= 0)\n            value.units = this.ds.getString(row, colUnits);\n        if (colMod >= 0)\n            value.mod = this.ds.getString(row, colMod);\n        return value;\n    }\n    setValue(row, fldidx, value) {\n        let fieldName = this.header.fields[fldidx].name;\n        let colValue = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_VALUE, \"real\");\n        let colError = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_ERROR, \"real\");\n        let colUnits = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_UNITS, \"string\");\n        let colMod = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_MOD, \"string\");\n        if (colValue >= 0)\n            if (isNaN(value.value))\n                this.ds.setToNull(row, colValue);\n            else\n                this.ds.setReal(row, colValue, value.value);\n        if (colError >= 0)\n            if (isNaN(value.error))\n                this.ds.setToNull(row, colError);\n            else\n                this.ds.setReal(row, colError, value.error);\n        if (colUnits >= 0)\n            this.ds.setString(row, colUnits, value.units);\n        if (colMod >= 0)\n            this.ds.setString(row, colMod, value.mod);\n    }\n    clearValue(row, fldidx) {\n        let fieldName = this.header.fields[fldidx].name;\n        let colValue = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_VALUE, \"real\");\n        let colError = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_ERROR, \"real\");\n        let colUnits = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_UNITS, \"string\");\n        let colMod = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_MOD, \"string\");\n        if (colValue >= 0)\n            this.ds.setToNull(row, colValue);\n        if (colError >= 0)\n            this.ds.setToNull(row, colError);\n        if (colUnits >= 0)\n            this.ds.setToNull(row, colUnits);\n        if (colMod >= 0)\n            this.ds.setToNull(row, colMod);\n    }\n    getDescr(row, fldidx) {\n        let col = this.ds.findColByName(this.header.fields[fldidx].name);\n        return col < 0 ? '' : this.ds.colDescr(col);\n    }\n    setDescr(row, fldidx, descr) {\n        let col = this.ds.findColByName(this.header.fields[fldidx].name);\n        if (col >= 0)\n            this.ds.changeColumnName(col, this.ds.colName(col), descr);\n    }\n    setup() {\n        this.parseAndCorrect();\n    }\n    parseAndCorrect() {\n        this.header = { units: [], fields: [] };\n        let got = false;\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == MeasurementData.CODE) {\n                this.header = this.parseMetaData(this.ds.getExtData(n));\n                got = true;\n                break;\n            }\n        this.ensureFields();\n        if (!got && this.allowModify) {\n            let content = this.formatMetaData(this.header);\n            this.ds.appendExtension(MeasurementData.NAME, MeasurementData.CODE, content);\n        }\n    }\n    ensureFields() {\n        for (let f of this.header.fields) {\n            let descr = 'Measurement';\n            let colidx = this.ds.findColByName(f.name);\n            if (colidx >= 0)\n                descr = this.ds.colDescr(colidx);\n            if (this.allowModify) {\n                this.ds.ensureColumn(f.name + MeasurementData.SUFFIX_VALUE, \"real\", descr);\n                this.ds.ensureColumn(f.name + MeasurementData.SUFFIX_ERROR, \"real\", 'Error');\n                this.ds.ensureColumn(f.name + MeasurementData.SUFFIX_UNITS, \"string\", 'Units');\n                this.ds.ensureColumn(f.name + MeasurementData.SUFFIX_MOD, \"string\", 'Modifier');\n            }\n        }\n    }\n    parseMetaData(content) {\n        let header = { units: [], fields: [] };\n        for (let line of content.split(/\\r?\\n/)) {\n            let eq = line.indexOf('=');\n            if (eq < 0)\n                continue;\n            if (line.startsWith('unit=')) {\n                let bits = line.substring(eq + 1).split(',');\n                if (bits.length >= 2)\n                    header.units.push({ name: MoleculeStream.skUnescape(bits[0]), uri: MoleculeStream.skUnescape(bits[1]) });\n            }\n            else if (line.startsWith('field=')) {\n                let bits = line.substring(eq + 1).split(',');\n                let f = { name: MoleculeStream.skUnescape(bits[0]), units: [], defnURI: [] };\n                for (let n = 1; n < bits.length; n++)\n                    f.units.push(MoleculeStream.skUnescape(bits[n]));\n                header.fields.push(f);\n            }\n            else if (line.startsWith('definition=')) {\n                let bits = line.substring(eq + 1).split(',');\n                if (bits.length >= 2) {\n                    let f = header.fields.find((f) => f.name == bits[0]);\n                    if (!f)\n                        continue;\n                    for (let n = 1; n < bits.length; n++)\n                        f.defnURI.push(MoleculeStream.skUnescape(bits[n]));\n                }\n            }\n        }\n        return header;\n    }\n    formatMetaData(header) {\n        let lines = [];\n        for (let u of header.units) {\n            lines.push('unit=' + MoleculeStream.skEscape(u.name) + ',' + MoleculeStream.skEscape(u.uri));\n        }\n        for (let f of header.fields) {\n            let line = 'field=' + MoleculeStream.skEscape(f.name);\n            for (let u of f.units)\n                line += ',' + MoleculeStream.skEscape(u);\n            lines.push(line);\n            if (Vec.notBlank(f.defnURI)) {\n                line = 'definition=' + MoleculeStream.skEscape(f.name);\n                for (let d of f.defnURI)\n                    line += ',' + MoleculeStream.skEscape(d);\n                lines.push(line);\n            }\n        }\n        return lines.join('\\n');\n    }\n    plainHeading() { return MeasurementData.NAME; }\n    isColumnReserved(colName) {\n        return this.areColumnsReserved([colName])[0];\n    }\n    areColumnsReserved(colNames) {\n        let names = new Set();\n        for (let f of this.header.fields) {\n            names.add(f.name + MeasurementData.SUFFIX_VALUE);\n            names.add(f.name + MeasurementData.SUFFIX_ERROR);\n            names.add(f.name + MeasurementData.SUFFIX_UNITS);\n            names.add(f.name + MeasurementData.SUFFIX_MOD);\n        }\n        let resv = [];\n        for (let col of colNames)\n            resv.push(names.has(col));\n        return resv;\n    }\n    numTextRenderings(row) { return this.header.fields.length; }\n    produceTextRendering(row, idx) {\n        let field = this.header.fields[idx];\n        let colField = this.ds.findColByName(field.name);\n        let tr = {\n            name: field.name,\n            descr: colField < 0 ? '' : this.ds.colDescr(colField),\n            text: '',\n            type: Aspect.TEXT_PLAIN\n        };\n        let datum = this.getValue(row, idx);\n        if (!Number.isNaN(datum.value)) {\n            if (datum.mod)\n                tr.text += datum.mod + ' ';\n            tr.text += datum.value;\n            if (!Number.isNaN(datum.error))\n                tr.text += ' \\u{00B1} ' + datum.error;\n            if (datum.units)\n                tr.text += ' ' + datum.units;\n        }\n        return tr;\n    }\n}\nMeasurementData.CODE = 'org.mmi.aspect.MeasurementData';\nMeasurementData.NAME = 'Measurement Data';\nMeasurementData.SUFFIX_VALUE = '';\nMeasurementData.SUFFIX_ERROR = '_error';\nMeasurementData.SUFFIX_UNITS = '_units';\nMeasurementData.SUFFIX_MOD = '_mod';\nexport { MeasurementData };\nregisterAspect(MeasurementData);\n//# sourceMappingURL=MeasurementData.js.map","import { MoleculeStream } from '../io/MoleculeStream';\nimport { Vec } from '../util/Vec';\nimport { Aspect } from './Aspect';\nimport { registerAspect } from './AspectList';\nimport { MeasurementData } from './MeasurementData';\nexport var MixtureAttributeType;\n(function (MixtureAttributeType) {\n    MixtureAttributeType[\"Structure\"] = \"structure\";\n    MixtureAttributeType[\"Name\"] = \"name\";\n    MixtureAttributeType[\"Quantity\"] = \"quantity\";\n    MixtureAttributeType[\"Bound\"] = \"bound\";\n    MixtureAttributeType[\"Error\"] = \"error\";\n    MixtureAttributeType[\"Ratio\"] = \"ratio\";\n    MixtureAttributeType[\"Units\"] = \"units\";\n    MixtureAttributeType[\"Relation\"] = \"relation\";\n    MixtureAttributeType[\"Identifier\"] = \"identifier\";\n    MixtureAttributeType[\"Link\"] = \"link\";\n    MixtureAttributeType[\"Property\"] = \"property\";\n})(MixtureAttributeType || (MixtureAttributeType = {}));\nclass Mixture extends Aspect {\n    static isMixture(ds) {\n        for (let n = 0; n < ds.numExtensions; n++)\n            if (ds.getExtType(n) == Mixture.CODE)\n                return true;\n        return false;\n    }\n    constructor(ds, allowModify) {\n        super(Mixture.CODE, ds, allowModify);\n        this.header = { attributes: [] };\n        this.setup();\n    }\n    getHeader() {\n        return this.header;\n    }\n    setHeader(header) {\n        this.header = header;\n        let content = this.formatMetaData(header);\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == Mixture.CODE) {\n                this.ds.setExtData(n, content);\n                return;\n            }\n        this.ds.appendExtension(Mixture.NAME, Mixture.CODE, content);\n    }\n    setup() {\n        this.parseAndCorrect();\n    }\n    parseAndCorrect() {\n        this.header = { attributes: [] };\n        let got = false;\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == Mixture.CODE) {\n                this.header = this.parseMetaData(this.ds.getExtData(n));\n                got = true;\n                break;\n            }\n        if (!got && this.allowModify) {\n            let content = this.formatMetaData(this.header);\n            this.ds.appendExtension(Mixture.NAME, Mixture.CODE, content);\n        }\n    }\n    parseMetaData(content) {\n        let header = { attributes: [] };\n        for (let line of content.split(/\\r?\\n/)) {\n            let eq = line.indexOf('=');\n            if (eq < 0)\n                continue;\n            if (line.startsWith('attr=')) {\n                let bits = line.substring(eq + 1).split(',');\n                if (bits.length < 3)\n                    continue;\n                let column = MoleculeStream.skUnescape(bits[0]);\n                let position = [];\n                if (bits[1] != '0')\n                    position = bits[1].split('.').map((str) => parseInt(str));\n                let type = bits[2];\n                let info = [];\n                for (let n = 3; n < bits.length; n++)\n                    info.push(MoleculeStream.skUnescape(bits[n]));\n                header.attributes.push({ column, position, type, info });\n            }\n        }\n        return header;\n    }\n    formatMetaData(header) {\n        let lines = [];\n        for (let a of header.attributes) {\n            let bits = [MoleculeStream.skEscape(a.column)];\n            if (Vec.isBlank(a.position))\n                bits.push('0');\n            else\n                bits.push(a.position.join('.'));\n            bits.push(a.type);\n            if (a.info)\n                for (let str of a.info)\n                    bits.push(MoleculeStream.skEscape(str));\n            lines.push('attr=' + bits.join(','));\n        }\n        return lines.join('\\n');\n    }\n    plainHeading() { return MeasurementData.NAME; }\n    isColumnReserved(colName) {\n        return this.areColumnsReserved([colName])[0];\n    }\n    areColumnsReserved(colNames) {\n        let names = new Set();\n        for (let a of this.header.attributes)\n            names.add(a.column);\n        let resv = [];\n        for (let col of colNames)\n            resv.push(names.has(col));\n        return resv;\n    }\n}\nMixture.CODE = 'org.mmi.aspect.Mixture';\nMixture.NAME = 'Mixture';\nMixture.SUFFIX_VALUE = '';\nexport { Mixture };\nregisterAspect(Mixture);\n//# sourceMappingURL=Mixture.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {DataSheet} from 'webmolkit/ds/DataSheet';\nimport {AssayProvenance} from 'webmolkit/aspect/AssayProvenance';\nimport {MeasurementData} from 'webmolkit/aspect/MeasurementData';\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {DataSheetStream} from 'webmolkit/io/DataSheetStream';\nimport {MDLSDFReader} from 'webmolkit/io/MDLReader';\nimport {MDLMOLWriter} from 'webmolkit/io/MDLWriter';\nimport {Mixture as MixtureAspect} from 'webmolkit/aspect/Mixture';\nimport {Vec} from 'webmolkit/util/Vec';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport {MixtureCollection} from '../mixture/MixtureCollection';\nimport {Mixture} from '../mixture/Mixture';\nimport {MixfileComponent} from '../mixture/Mixfile';\n\n/*\n\tTable extraction: create Mixfile instances from tabular data sources, with the help of directions for placing columns into\n\tthe mixture hierarchy.\n*/\n\nexport enum TableExtractType\n{\n\tStructure = 'structure',\n\tName = 'name',\n\tQuantity = 'quantity',\n\tBound = 'bound',\n\tError = 'error',\n\tRatio = 'ratio',\n\tUnits = 'units',\n\tRelation = 'relation',\n\tIdentifier = 'identifier',\n\tLink = 'link',\n\tProperty = 'property',\n}\n\ninterface TableExtractMapping\n{\n\tcolumn:string;\n\torigin:number[];\n\ttype:TableExtractType;\n\tinfo?:string[];\n}\n\nexport class TableExtract\n{\n\tprivate table:DataSheet = null;\n\tprivate aprov:AssayProvenance = null;\n\tprivate mdata:MeasurementData = null;\n\n\tprivate lookup:Map<string, Molecule> = null;\n\tprivate mappings:TableExtractMapping[] = [];\n\n\tconstructor(private tableFile:string, private lookupFile:string, private mappingFile:string, private verbose:boolean)\n\t{\n\t}\n\n\tpublic async exec():Promise<void>\n\t{\n\t\tlet content:string;\n\t\ttry {content = fs.readFileSync(this.tableFile).toString();}\n\t\tcatch (ex) {throw 'Unable to read file ' + this.tableFile + ': ' + ex;}\n\n\t\tif (this.tableFile.endsWith('.ds')) this.table = DataSheetStream.readXML(content);\n\t\telse if (this.tableFile.endsWith('.sdf')) this.table = new MDLSDFReader(content).parse();\n\t\telse if (this.tableFile.endsWith('.csv')) this.table = this.parseLines(',', true);\n\t\telse if (this.tableFile.endsWith('.tsv') || this.tableFile.endsWith('.tab')) this.table = this.parseLines('\\t', false);\n\t\tif (!this.table) throw 'Unable to parse: ' + this.tableFile;\n\n\t\tif (AssayProvenance.isAssayProvenance(this.table)) this.aprov = new AssayProvenance(this.table, false);\n\t\tif (MeasurementData.isMeasurementData(this.table)) this.mdata = new MeasurementData(this.table, false);\n\n\t\tif (this.lookupFile)\n\t\t{\n\t\t\t// TODO\n\t\t}\n\n\t\tthis.initialMapping();\n\t\tif (this.mappingFile)\n\t\t{\n\t\t\tcontent = fs.readFileSync(this.mappingFile).toString();\n\t\t\tthis.customMapping(JSON.parse(content));\n\t\t}\n\n\t\tif (this.mappings.length == 0) throw 'No column mapping information available.';\n\n\t\tlet mixtures = new MixtureCollection();\n\t\tfor (let n = 0; n < this.table.numRows; n++)\n\t\t{\n\t\t\tlet mixture = this.extractMixture(n);\n\t\t\tif (mixture) mixtures.appendMixtureDirect(mixture);\n\t\t}\n\n\t\tconsole.log(mixtures.serialise(true));\n\t}\n\n\t// ------------ private methods ------------\n\n\t// read TSV/CSV file, which is presumed to have column headings, and may include escape sequences\n\tprivate parseLines(sep:string, escaped:boolean):DataSheet\n\t{\n\t\tlet ds = new DataSheet();\n\n\t\t// !! load each line, split into strings, apply columns then rows...\n\t\t// !! anything that's all {int} or {real} gets changed retroactively\n\n\t\treturn ds;\n\t}\n\n\t// extract column-to-mixture information embedded in the initial datasheet, if possible\n\tprivate initialMapping():void\n\t{\n\t\tif (!MixtureAspect.isMixture(this.table)) return;\n\n\t\tlet aspect = new MixtureAspect(this.table, false);\n\t\tfor (let attr of aspect.getHeader().attributes)\n\t\t{\n\t\t\tlet map:TableExtractMapping =\n\t\t\t{\n\t\t\t\t'column': attr.column,\n\t\t\t\t'origin': Vec.add(attr.position, -1),\n\t\t\t\t'type': attr.type as any as TableExtractType, // same enum values\n\t\t\t\t'info': attr.info,\n\t\t\t};\n\t\t\tthis.mappings.push(map);\n\t\t}\n\t}\n\n\t// merge in user-provided mappings\n\tprivate customMapping(custom:TableExtractMapping[]):void\n\t{\n\t\tfor (let map of custom)\n\t\t{\n\t\t\tlet idx = this.mappings.findIndex((look) => look.column == map.column);\n\t\t\tif (idx >= 0) this.mappings[idx] = map; else this.mappings.push(map);\n\t\t}\n\t}\n\n\t// pull out the content from a row in the table and corral them into a mixture\n\tprivate extractMixture(row:number):Mixture\n\t{\n\t\tlet mixture = new Mixture();\n\n\t\tfor (let map of this.mappings)\n\t\t{\n\t\t\tlet comp = mixture.mixfile as MixfileComponent;\n\t\t\tfor (let idx of map.origin)\n\t\t\t{\n\t\t\t\tif (comp.contents == null) comp.contents = [];\n\t\t\t\twhile (idx >= comp.contents.length) comp.contents.push({});\n\t\t\t\tcomp = comp.contents[idx];\n\t\t\t}\n\t\t}\n\n\t\tlet appendQuant = (quantity:number | number[], val:number):number | number[] =>\n\t\t{\n\t\t\tif (isNaN(val)) return quantity;\n\t\t\tif (quantity == null) return val;\n\t\t\telse if (typeof quantity == 'number' && quantity != val) return [Math.min(quantity, val), Math.max(quantity, val)];\n\t\t\telse return quantity;\n\t\t};\n\n\t\tlet stashRatio = new Map<string, number>();\n\t\tlet fields = this.mdata ? this.mdata.getHeader().fields : [];\n\n\t\tfor (let map of this.mappings)\n\t\t{\n\t\t\tlet col = this.table.findColByName(map.column);\n\t\t\tif (col < 0 || this.table.isNull(row, col)) continue;\n\n\t\t\tlet comp = mixture.getComponent(map.origin);\n\n\t\t\tif (map.type == TableExtractType.Structure)\n\t\t\t{\n\t\t\t\tlet mol = this.table.getMolecule(row, col);\n\t\t\t\tcomp.molfile = new MDLMOLWriter(mol).write();\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Name)\n\t\t\t{\n\t\t\t\tcomp.name = this.table.toString(row, col);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Quantity)\n\t\t\t{\n\t\t\t\t// if aspected: can extract more information\n\t\t\t\tif (this.aprov && map.column == AssayProvenance.COLNAME_VALUE)\n\t\t\t\t{\n\t\t\t\t\tcomp.quantity = this.aprov.getValue(row);\n\t\t\t\t\tlet error = this.aprov.getError(row);\n\t\t\t\t\tif (!isNaN(error)) comp.error = error;\n\t\t\t\t\tcomp.units = this.aprov.getUnits(row); // TODO: translate based on URI\n\t\t\t\t\tlet relation = this.aprov.getRelation(row);\n\t\t\t\t\tif (relation && relation != '=') comp.relation = relation;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet field = fields.find((f) => f.name == map.column);\n\t\t\t\tif (field)\n\t\t\t\t{\n\t\t\t\t\tlet value = this.mdata.getValueField(row, field);\n\t\t\t\t\tcomp.quantity = value.value;\n\t\t\t\t\tif (!isNaN(value.error)) comp.error = value.error;\n\t\t\t\t\tcomp.units = value.units;\n\t\t\t\t\tif (value.mod && value.mod != '=') comp.relation = value.mod;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet val = parseFloat(this.table.toString(row, col));\n\t\t\t\tcomp.quantity = appendQuant(comp.quantity, val);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Bound)\n\t\t\t{\n\t\t\t\tlet val = parseFloat(this.table.toString(row, col));\n\t\t\t\tcomp.quantity = appendQuant(comp.quantity, val);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Error)\n\t\t\t{\n\t\t\t\tlet val = parseFloat(this.table.toString(row, col));\n\t\t\t\tif (!isNaN(val)) comp.error = val;\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Ratio)\n\t\t\t{\n\t\t\t\tlet val = parseFloat(this.table.toString(row, col));\n\t\t\t\tif (!isNaN(val)) stashRatio.set(JSON.stringify(map.origin), val);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Units)\n\t\t\t{\n\t\t\t\tlet units = this.table.toString(row, col);\n\t\t\t\t// TODO: correction/mapping...\n\t\t\t\tcomp.units = units;\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Relation)\n\t\t\t{\n\t\t\t\tlet relation = this.table.toString(row, col);\n\t\t\t\t// TODO: correction/mapping...\n\t\t\t\tcomp.relation = relation;\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Identifier)\n\t\t\t{\n\t\t\t\tif (comp.identifiers == null) comp.identifiers = {};\n\t\t\t\tcomp.identifiers[map.column] = this.table.toString(row, col);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Link)\n\t\t\t{\n\t\t\t\tif (comp.links == null) comp.links = {};\n\t\t\t\tcomp.links[map.column] = this.table.toString(row, col);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Property)\n\t\t\t{\n\t\t\t\tconsole.log('TODO: property'); // !! lookup aspects...\n\t\t\t}\n\t\t}\n\n\t\t// fill in any missing ratios\n\t\tfor (let origin of mixture.getOrigins())\n\t\t{\n\t\t\tlet comp = mixture.getComponent(origin);\n\t\t\tif (Vec.isBlank(comp.contents)) continue;\n\t\t\tlet num = 0, total = 0;\n\t\t\tfor (let n = 0; n < comp.contents.length; n++) if (!Mixture.isComponentEmpty(comp.contents[n]))\n\t\t\t{\n\t\t\t\tlet ratio = stashRatio.get(JSON.stringify([...origin, n]));\n\t\t\t\tif (!ratio) {num = 0; break;}\n\t\t\t\tnum++;\n\t\t\t\ttotal += ratio;\n\t\t\t}\n\t\t\tif (num > 0) for (let n = 0; n < comp.contents.length; n++) if (!Mixture.isComponentEmpty(comp.contents[n]))\n\t\t\t{\n\t\t\t\tlet ratio = stashRatio.get(JSON.stringify([...origin, n]));\n\t\t\t\tcomp.contents[n].ratio = [ratio, total];\n\t\t\t}\n\t\t}\n\n\t\t// trim out blank pieces\n\t\tskip: for (let origin of Vec.reverse(mixture.getOrigins()))\n\t\t{\n\t\t\tlet comp = mixture.getComponent(origin);\n\t\t\tif (Mixture.isComponentEmpty(comp))\n\t\t\t{\n\t\t\t\tmixture.deleteComponent(origin);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// may collapse singletons\n\t\t\tif (Vec.arrayLength(comp.contents) != 1) continue;\n\t\t\tfor (let key in comp) if (key != 'contents' && (comp as any)[key]) continue skip;\n\t\t\tlet sub = comp.contents[0];\n\t\t\tcomp.contents = null;\n\t\t\tmixture.setComponent(origin, sub);\n\t\t}\n\n\t\treturn mixture;\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {DataSheet, DataSheetColumn} from 'webmolkit/ds/DataSheet';\nimport {MDLSDFWriter} from 'webmolkit/io/MDLWriter';\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {MDLMOLReader} from 'webmolkit/io/MDLReader';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {ExportMInChI} from './ExportMInChI';\nimport {Mixfile, MixfileComponent} from './Mixfile';\n\n/*\n\tInteroperability with SDfiles: conversion of the Mixfile hierarchy into a flattened SDfile is useful for presenting to\n\tsoftware that can read this format, and is also a waypoint en route to a MInChI string.\n*/\n\nexport class ExportSDFile\n{\n\tprivate ds = new DataSheet();\n\tprivate colMol:number;\n\tprivate colName:number;\n\tprivate colHier:number;\n\tprivate colConc:number;\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t\tthis.colMol = this.ds.appendColumn('Molecule', DataSheetColumn.Molecule, '');\n\t\tthis.colName = this.ds.appendColumn('Name', DataSheetColumn.String, '');\n\t\tthis.colHier = this.ds.appendColumn('MINCHI$N', DataSheetColumn.String, '');\n\t\tthis.colConc = this.ds.appendColumn('MINCHI$C', DataSheetColumn.String, '');\n\t}\n\n\t// can add any number of mixtures, which will be numbered automatically\n\tpublic append(mixfile:Mixfile):void\n\t{\n\t\t// if the root node is something other than a pure placeholder, then add it explicitly\n\t\tif (mixfile.name || mixfile.molfile || mixfile.inchi)\n\t\t{\n\t\t\tthis.appendComponent(mixfile, [1]);\n\t\t\treturn;\n\t\t}\n\n\t\t// otherwise, add all of contents of the root node as a series with incrementing primary indexes\n\t\tif (!mixfile.contents) return;\n\t\tfor (let n = 0; n < mixfile.contents.length; n++) this.appendComponent(mixfile.contents[n], [n + 1]);\n\t}\n\n\t// return the SDF-serialised representation\n\tpublic write():string\n\t{\n\t\treturn new MDLSDFWriter(this.ds).write();\n\t}\n\n\t// ------------ private methods ------------\n\n\t// recursively add a component, and all of its subcomponents\n\tprivate appendComponent(comp:MixfileComponent, seq:number[]):void\n\t{\n\t\tlet row = this.ds.appendRow();\n\n\t\tlet mol:Molecule = null;\n\t\tif (comp.molfile)\n\t\t{\n\t\t\tmol = Molecule.fromString(comp.molfile);\n\t\t\tif (!mol)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tmol = new MDLMOLReader(comp.molfile).parse();\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\t\t\t}\n\t\t}\n\t\tif (!mol) mol = new Molecule();\n\n\t\tthis.ds.setMolecule(row, this.colMol, mol);\n\t\tif (comp.name) this.ds.setString(row, this.colName, comp.name);\n\t\tthis.ds.setString(row, this.colHier, seq.join('.'));\n\t\tthis.ds.setString(row, this.colConc, this.formatConcentration(comp));\n\n\t\tif (comp.contents) for (let n = 0; n < comp.contents.length; n++)\n\t\t{\n\t\t\tlet subseq = seq.slice(0);\n\t\t\tsubseq.push(n + 1);\n\t\t\tthis.appendComponent(comp.contents[n], subseq);\n\t\t}\n\t}\n\n\t// turns a concentration into a suitable precursor string, or null otherwise\n\tprivate formatConcentration(comp:MixfileComponent):string\n\t{\n\t\t/* ... this is a pseudo-MInChI approach ...\n\t\t// TODO: need special deal for ratio without denominator - can sometimes add them up to form an implicit denominator\n\n\t\tif (comp.ratio && comp.ratio.length >= 2)\n\t\t{\n\t\t\tlet numer = comp.ratio[0], denom = comp.ratio[1];\n\t\t\tif (!(denom > 0)) return null;\n\t\t\treturn (100 * numer / denom) + ' pp';\n\t\t}\n\n\t\tif (comp.quantity == null || comp.units == null) return null;\n\n\t\t// special deal (maybe temporary): units that are written with common names that map to a URI are converted automatically\n\t\tlet unitURI = comp.units;\n\t\tif (!unitURI.startsWith('http://')) unitURI = Units.nameToURI(unitURI);\n\t\tif (!unitURI) return;\n\n\t\t// TODO: maybe another special deal for absolute weight/volume/mole quantities - convert them into ratios, to the extent that's\n\t\t// possible... maybe approximating where necessary\n\n\t\tlet bits:string[] = [];\n\n\t\tif (comp.relation != null) bits.push(comp.relation);\n\n\t\tlet values:number[] = typeof comp.quantity == 'number' ? [comp.quantity as number] : comp.quantity;\n\n\t\tlet [mnemonic, scaled] = Units.convertToMInChI(unitURI, values);\n\t\tif (!mnemonic) return;\n\t\tbits.push(scaled[0].toString());\n\t\tif (scaled.length > 1) {bits.push('..'); bits.push(scaled[1].toString());}\n\t\tbits.push(mnemonic);\n\n\t\treturn bits.join(' ');*/\n\n\t\tlet useRatio:number = null;\n\t\tif (Vec.len(comp.ratio) == 2) useRatio = comp.ratio[0]; // mixfile ratios are stored as [numer, denom] where denom is checksum; could verify that this\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// is consistent before deigning to use it, but we're just passing it through\n\t\treturn ExportMInChI.formatConcentration(comp.quantity, comp.error, useRatio, comp.units, comp.relation);\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MDLSDFReader} from 'webmolkit/io/MDLReader';\nimport {DataSheetColumn} from 'webmolkit/ds/DataSheet';\nimport {MDLMOLWriter} from 'webmolkit/io/MDLWriter';\nimport {Mixfile, MixfileComponent} from './Mixfile';\nimport {Mixture} from './Mixture';\nimport {StandardUnits, Units} from './Units';\n\n/*\n\tImporting one or more mixtures from chunks of text that represent an SDfile with special mixture fields.\n*/\n\ninterface ImportComponent\n{\n\tmol:Molecule;\n\tname:string;\n\tconc:string;\n\thier:string;\n}\n\nexport class ImportSDFile\n{\n\tprivate buffer = '';\n\tprivate components:ImportComponent[] = [];\n\tprivate mixfiles:Mixfile[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t}\n\n\t// adds a chunk of text to the buffer, which may cause more SDfile units to be extracted; after calling this, 0-or-more new mixtures will become available\n\t// to be polled\n\tpublic feed(chunk:string):void\n\t{\n\t\tthis.buffer += chunk;\n\t\twhile (true)\n\t\t{\n\t\t\tlet sep = this.buffer.indexOf('$$$$\\n');\n\t\t\tif (sep < 0) break;\n\t\t\tsep += 5;\n\t\t\tthis.processBlock(this.buffer.substring(0, sep));\n\t\t\tthis.buffer = this.buffer.substring(sep);\n\t\t}\n\t}\n\n\t// grab the next assembled mixfile and take it out of the delivery list; if the final flag is true, it means we've reached the end of the input sequence, so\n\t// whatever components remain must be complete\n\tpublic poll(final = false):Mixfile\n\t{\n\t\tif (Vec.notBlank(this.mixfiles)) return this.mixfiles.shift();\n\t\tif (final && Vec.notBlank(this.components))\n\t\t{\n\t\t\tthis.assembleComponents();\n\t\t\treturn this.mixfiles[0];\n\t\t}\n\t\treturn null;\n\t}\n\n\t// ------------ private methods ------------\n\n\t// have identified one SDfile record (ending in $$$$), so carve it up into an upcoming component\n\tprivate processBlock(sdfile:string):void\n\t{\n\t\tlet reader = new MDLSDFReader(sdfile);\n\t\treader.upcastColumns = false;\n\t\tlet ds = reader.parse();\n\t\tif (!ds || ds.numRows == 0) return;\n\t\tlet colMol = ds.firstColOfType(DataSheetColumn.Molecule);\n\t\tlet colName = ds.findColByName('Name');\n\t\tlet colHier = ds.findColByName('MINCHI$N');\n\t\tlet colConc = ds.findColByName('MINCHI$C');\n\t\tif (colHier < 0) return; // not a valid mixture block\n\n\t\tlet mol = colMol < 0 ? null : ds.getMolecule(0, colMol);\n\t\tlet name = colName < 0 ? null : ds.getString(0, colName);\n\t\tlet hier = ds.getString(0, colHier);\n\t\tlet conc = colConc < 0 ? null : ds.getString(0, colConc);\n\t\tif (Vec.notBlank(this.components) && hier == '1') this.assembleComponents();\n\n\t\tthis.components.push({mol, name, hier, conc});\n\t}\n\n\t// turn the current list of components into a mixfile, based on the assumption that we've reached a dividing point\n\tprivate assembleComponents():void\n\t{\n\t\tlet mixture = new Mixture();\n\n\t\tfor (let incomp of this.components)\n\t\t{\n\t\t\tlet molfile = incomp.mol ? new MDLMOLWriter(incomp.mol).write() : undefined;\n\t\t\tlet origin = incomp.hier.split('.').map((str) => parseInt(str) - 1);\n\t\t\tlet idx = origin.pop();\n\t\t\tlet parent = mixture.getComponent(origin);\n\t\t\tif (!parent.contents) parent.contents = [];\n\t\t\tlet comp:MixfileComponent = {name: incomp.name, molfile: molfile, contents: []};\n\t\t\tif (incomp.conc) this.decodeConcentration(incomp.conc, comp);\n\t\t\tparent.contents[idx] = comp;\n\t\t}\n\n\t\tif (mixture.mixfile.contents.length == 1) mixture = new Mixture(mixture.mixfile.contents[0] as Mixfile);\n\n\t\t// ratios are expressed as the numerator; fill in the denominator as well\n\t\tlet finishRatio = (comp:MixfileComponent):void =>\n\t\t{\n\t\t\tif (Vec.isBlank(comp.contents)) return;\n\t\t\tlet denom = 0;\n\t\t\tfor (let child of comp.contents)\n\t\t\t{\n\t\t\t\t if (!child.ratio || Vec.len(child.ratio) != 2)\n\t\t\t\t {\n\t\t\t\t \tdenom = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t }\n\t\t\t\t denom += child.ratio[0];\n\t\t\t}\n\t\t\tfor (let child of comp.contents)\n\t\t\t{\n\t\t\t\tif (denom > 0)\n\t\t\t\t\tchild.ratio = [child.ratio[0], denom];\n\t\t\t\telse\n\t\t\t\t\tchild.ratio = undefined;\n\t\t\t}\n\t\t\tfor (let child of comp.contents) finishRatio(child);\n\t\t};\n\t\tfinishRatio(mixture.mixfile);\n\n\t\tthis.components = [];\n\t\tthis.mixfiles.push(mixture.mixfile);\n\t}\n\n\t// unpacks the MInChI-style concentration from the SDfile into the dictionary-style used by Mixfile components\n\tprivate decodeConcentration(conc:string, comp:MixfileComponent):void\n\t{\n\t\tlet match = conc.match(/^([\\>\\<\\=\\~]*)([-\\d\\.:]+)(\\w\\w)([-\\d]*)$/);\n\t\tif (!match) return; // this is technically an error: fails silently\n\n\t\tlet relation = match[1], qstr = match[2], mnemonic = match[3], mantissa = parseInt(match[4]) || 0;\n\n\t\tlet quant1:number = null, quant2:number = NaN;\n\t\tif ((match = qstr.match(/^([-\\d\\.]+):([-\\d\\.]+)$/)))\n\t\t{\n\t\t\tquant1 = parseFloat(match[1]);\n\t\t\tquant2 = parseFloat(match[2]);\n\t\t\tif (isNaN(quant1) || isNaN(quant2)) return;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tquant1 = parseFloat(qstr);\n\t\t\tif (isNaN(quant1)) return;\n\t\t}\n\n\t\tlet units = '', scale = 1, isRatio = false;\n\t\tif (mnemonic == 'pp') units = StandardUnits.pc;\n\t\telse if (mnemonic == 'wv') [units, scale] = [StandardUnits.pcWV, 100];\n\t\telse if (mnemonic == 'wf') [units, scale] = [StandardUnits.pcWW, 100];\n\t\telse if (mnemonic == 'vf') [units, scale] = [StandardUnits.pcVV, 100];\n\t\telse if (mnemonic == 'mf') [units, scale] = [StandardUnits.pcMM, 100];\n\t\telse if (mnemonic == 'rt') isRatio = true;\n\t\telse if (mnemonic == 'mr') [units, scale] = [StandardUnits.mol_L, 1];\n\t\telse if (mnemonic == 'wv') [units, scale] = [StandardUnits.g_L, 1E3];\n\t\telse if (mnemonic == 'mb') units = StandardUnits.mol_kg;\n\t\telse return; // not recognised\n\n\t\tcomp.relation = relation || undefined;\n\n\t\tif (isRatio) comp.ratio = [quant1, 0];\n\t\telse if (isNaN(quant2))\n\t\t{\n\t\t\tcomp.quantity = quant1 * Math.pow(10, mantissa) * scale;\n\t\t\tcomp.units = Units.uriToName(units);\n\t\t}\n\t\telse // it's a range\n\t\t{\n\t\t\tcomp.quantity = [quant1 * Math.pow(10, mantissa) * scale, quant2 * Math.pow(10, mantissa) * scale];\n\t\t\tcomp.units = Units.uriToName(units);\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {ExportMInChI} from '../mixture/ExportMInChI';\nimport {ExportSDFile} from '../mixture/ExportSDFile';\nimport {ImportSDFile} from '../mixture/ImportSDFile';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {DrawMixture} from '../mixture/DrawMixture';\nimport {Vec} from 'webmolkit/util/Vec';\nimport * as fs from 'fs';\nimport {InChI} from '../nodejs/InChI';\nimport {Mixfile} from '../mixture/Mixfile';\nimport {Mixture} from '../mixture/Mixture';\n\n/*\n\tReads a stream of mixtures and writes it out as a stream, with format transformation as necessary.\n*/\n\nexport enum TransformMixtureFormat\n{\n\tMixfile = 'mixfile', // single mixfile\n\tJSON = 'json', // list of mixtures\n\tSDF = 'sdf', // SDfile with mixture-specific columns\n\tMInChI = 'minchi', // MInChI notation, newline separated\n\tLongMInChIKey = 'longminchikey', // hashed keys of MInChI structure section\n\tShortMInChIKey = 'shortminchikey', // crunched keys of MInChI structure section, fixed length\n\tSVG = 'svg', // graphical rendering\n}\nexport const ALL_TRANSFORMMIXTURE_FORMATS = Object.values(TransformMixtureFormat);\n\nexport class TransformMixtures\n{\n\tprivate process = require('process');\n\n\tprivate inputFormat:TransformMixtureFormat = null;\n\tprivate outputFormat:TransformMixtureFormat = null;\n\n\tprivate instream:any = null;\n\tprivate outstream:any = null;\n\n\tprivate count = 0;\n\n\tprivate nextIndex = 0;\n\tprivate roster:{idx:number; chunk:string}[] = [];\n\n\tconstructor(private inputFile:string, inputFormat:string, private outputFile:string, outputFormat:string)\n\t{\n\t\tif (inputFormat)\n\t\t{\n\t\t\tif (!ALL_TRANSFORMMIXTURE_FORMATS.includes(inputFormat as TransformMixtureFormat)) throw 'Unknown input format: ' + inputFormat;\n\t\t\tthis.inputFormat = inputFormat as TransformMixtureFormat;\n\t\t}\n\t\tif (outputFormat)\n\t\t{\n\t\t\tif (!ALL_TRANSFORMMIXTURE_FORMATS.includes(outputFormat as TransformMixtureFormat)) throw 'Unknown output format: ' + outputFormat;\n\t\t\tthis.outputFormat = outputFormat as TransformMixtureFormat;\n\t\t}\n\t}\n\n\tpublic async exec():Promise<void>\n\t{\n\t\tif (this.inputFile && !this.inputFormat)\n\t\t{\n\t\t\tfor (let fmt of ALL_TRANSFORMMIXTURE_FORMATS) if (this.inputFile.endsWith('.' + fmt))\n\t\t\t{\n\t\t\t\tthis.inputFormat = fmt;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!this.inputFormat) throw 'Unknown input format';\n\t\tif (this.inputFormat == TransformMixtureFormat.MInChI || this.inputFormat == TransformMixtureFormat.SVG ||\n\t\t\tthis.inputFormat == TransformMixtureFormat.LongMInChIKey || this.inputFormat == TransformMixtureFormat.ShortMInChIKey) throw 'Can only write format: ' + this.inputFormat;\n\n\t\tif (this.outputFile && !this.outputFormat)\n\t\t{\n\t\t\tfor (let fmt of ALL_TRANSFORMMIXTURE_FORMATS) if (this.outputFile.endsWith('.' + fmt))\n\t\t\t{\n\t\t\t\tthis.outputFormat = fmt;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!this.outputFormat) throw 'Unknown output format';\n\t\tif ((this.outputFormat == TransformMixtureFormat.MInChI || this.outputFormat == TransformMixtureFormat.LongMInChIKey ||\n\t\t\tthis.outputFormat == TransformMixtureFormat.ShortMInChIKey) && !InChI.hasExecutable()) throw 'For MInChI, must specify InChI executable as command line parameter.';\n\n\t\tthis.instream = this.inputFile ? fs.createReadStream(this.inputFile) : this.process.stdin;\n\t\tthis.outstream = this.outputFile ? fs.createWriteStream(this.outputFile) : this.process.stdout;\n\n\t\tif (this.outputFormat == TransformMixtureFormat.JSON) this.outstream.write('[\\n');\n\n\t\tif (this.inputFormat == TransformMixtureFormat.Mixfile) await this.pipeMixfile();\n\t\telse if (this.inputFormat == TransformMixtureFormat.JSON) await this.pipeJSON();\n\t\telse if (this.inputFormat == TransformMixtureFormat.SDF) await this.pipeSDF();\n\n\t\tthis.flushRoster();\n\n\t\tif (this.outputFormat == TransformMixtureFormat.JSON) this.outstream.write(']\\n');\n\n\t\tthis.outstream.end();\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate async pipeMixfile():Promise<void>\n\t{\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet json = '';\n\t\t\tthis.instream.on('data', (chunk:string) => json += chunk);\n\t\t\tthis.instream.on('end', () =>\n\t\t\t{\n\t\t\t\t// (explicit blocking would be correct but hard to code in this framework; async tasks are ordered though, so is OK)\n\t\t\t\t(async () =>\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet mixfile = JSON.parse(json) as Mixfile;\n\t\t\t\t\t\tawait this.processMixfile(this.count++, mixfile);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ex) {reject(ex);}\n\t\t\t\t})();\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async pipeJSON():Promise<void>\n\t{\n\t\tconst StreamArray = require('stream-json/streamers/StreamArray');\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet array = StreamArray.withParser();\n\t\t\tthis.instream.pipe(array.input);\n\t\t\tlet json:Record<string, any> = {};\n\t\t\tarray.on('data', (keyval:Record<string, any>) =>\n\t\t\t{\n\t\t\t\tlet mixfile = keyval['value'] as Mixfile;\n\t\t\t\t// (explicit blocking would be correct but hard to code in this framework; async tasks are ordered though, so is OK)\n\t\t\t\t(async () =>\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tawait this.processMixfile(this.count++, mixfile);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ex) {reject(ex);}\n\t\t\t\t})();\n\t\t\t});\n\t\t\tarray.on('end', () => resolve());\n\t\t});\n\t}\n\n\tprivate async pipeSDF():Promise<void>\n\t{\n\t\tlet sdfile = new ImportSDFile();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tthis.instream.on('data', (chunk:string) =>\n\t\t\t{\n\t\t\t\tsdfile.feed(chunk);\n\t\t\t\tfor (let mixfile = sdfile.poll(); mixfile; mixfile = sdfile.poll()) this.processMixfile(this.count++, mixfile);\n\t\t\t});\n\t\t\tthis.instream.on('end', () =>\n\t\t\t{\n\t\t\t\t// (explicit blocking would be correct but hard to code in this framework; async tasks are ordered though, so is OK)\n\t\t\t\t(async () =>\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet mixfile = sdfile.poll(true);\n\t\t\t\t\t\tif (mixfile) await this.processMixfile(this.count++, mixfile);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ex) {reject(ex);}\n\t\t\t\t})();\n\t\t\t});\n\t\t});\n\t}\n\n\t// a mixfile has been parsed out from the input stream, so deal with it appropriately: this means that something goes into the output roster\n\t// with the given index\n\tprivate async processMixfile(idx:number, mixfile:Mixfile):Promise<void>\n\t{\n\t\tif (mixfile.mixfileVersion == null) throw 'Invalid mixfile';\n\n\t\tlet chunk:string = null;\n\n\t\tif (this.outputFormat == TransformMixtureFormat.Mixfile)\n\t\t{\n\t\t\tlet json = new Mixture(mixfile).serialise(); // makes it nice\n\t\t\tchunk = json + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.JSON)\n\t\t{\n\t\t\tthis.outstream.write(idx == 0 ? ' ' : ',');\n\t\t\tlet json = JSON.stringify(mixfile); // single line compact\n\t\t\tchunk = json + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.SDF)\n\t\t{\n\t\t\tlet sdfile = new ExportSDFile();\n\t\t\tsdfile.append(mixfile);\n\t\t\tlet record = sdfile.write();\n\t\t\tchunk = record + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.MInChI)\n\t\t{\n\t\t\tif (!InChI.isAvailable()) throw 'InChI unavailable: need to specify executable on command line';\n\t\t\tlet minchi = new ExportMInChI(mixfile, new InChI());\n\t\t\tawait minchi.fillInChI();\n\t\t\tminchi.formulate();\n\t\t\tchunk = minchi.getResult() + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.LongMInChIKey)\n\t\t{\n\t\t\tif (!InChI.isAvailable()) throw 'InChI unavailable: need to specify executable on command line';\n\t\t\tlet minchi = new ExportMInChI(mixfile, new InChI());\n\t\t\tawait minchi.fillInChI();\n\t\t\tlet hashkey = minchi.makeLongHashKey();\n\t\t\tchunk = hashkey + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.ShortMInChIKey)\n\t\t{\n\t\t\tif (!InChI.isAvailable()) throw 'InChI unavailable: need to specify executable on command line';\n\t\t\tlet minchi = new ExportMInChI(mixfile, new InChI());\n\t\t\tawait minchi.fillInChI();\n\t\t\tlet hashkey = minchi.makeShortHashKey();\n\t\t\tchunk = hashkey + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.SVG)\n\t\t{\n\t\t\tlet policy = RenderPolicy.defaultColourOnWhite(20);\n\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\tlet layout = new ArrangeMixture(new Mixture(mixfile), measure, policy);\n\t\t\tlayout.arrange();\n\n\t\t\tlet gfx = new MetaVector();\n\t\t\tnew DrawMixture(layout, gfx).draw();\n\t\t\tgfx.normalise();\n\t\t\tlet svg = gfx.createSVG(false);\n\n\t\t\tchunk = svg + '\\n';\n\t\t}\n\n\t\tthis.roster.push({idx, chunk});\n\t\tthis.flushRoster();\n\t}\n\n\t// checks the output roster for content to write out: will only write chunks if they are consecutive with the last emitted index; this is so because the\n\t// async generation methods do not necessarily come in with the same order\n\tprivate flushRoster():void\n\t{\n\t\tif (this.roster.length > 1) this.roster.sort((r1, r2) => r1.idx - r2.idx);\n\n\t\twhile (this.roster.length > 0 && Vec.first(this.roster).idx == this.nextIndex)\n\t\t{\n\t\t\tlet {chunk} = this.roster.shift();\n\t\t\tif (chunk) this.outstream.write(chunk);\n\t\t\tthis.nextIndex++;\n\t\t}\n\t}\n\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {InChI} from '../nodejs/InChI';\nimport {RenderHTML} from './RenderHTML';\nimport {TableExtract} from './TableExtract';\nimport {ALL_TRANSFORMMIXTURE_FORMATS, TransformMixtures} from './TransformMixtures';\nimport {XML} from 'webmolkit/util/XML';\n\n/*\n\tConsole utilities, to be run from NodeJS with command line arguments.\n*/\n\nexport class Console\n{\n\tprivate inputFile:string = null;\n\tprivate inputFormat:string = null;\n\tprivate outputFile:string = null;\n\tprivate outputFormat:string = null;\n\tprivate tableFile:string = null;\n\tprivate lookupFile:string = null;\n\tprivate mappingFile:string = null;\n\tprivate htmlFile:string = null;\n\tprivate withMInChI = false;\n\tprivate justHelp = false;\n\tprivate verbose = false;\n\n\tconstructor(args:string[])\n\t{\n\t\t// const {DOMParser, XMLSerializer} = require('xmldom/dom-parser.js');\n\t\t// XML.customParser = DOMParser;\n\t\t// XML.customSerial = XMLSerializer;\n\n\t\tfor (let n = 0; n < args.length; n++)\n\t\t{\n\t\t\tif (args[n] == '-i' && n + 1 < args.length) this.inputFile = args[++n];\n\t\t\telse if (args[n] == '-if' && n + 1 < args.length) this.inputFormat = args[++n];\n\t\t\telse if (args[n] == '-o' && n + 1 < args.length) this.outputFile = args[++n];\n\t\t\telse if (args[n] == '-of' && n + 1 < args.length) this.outputFormat = args[++n];\n\t\t\telse if (args[n] == '--table' && n + 1 < args.length) this.tableFile = args[++n];\n\t\t\telse if (args[n] == '--lookup' && n + 1 < args.length) this.lookupFile = args[++n];\n\t\t\telse if (args[n] == '--mapping' && n + 1 < args.length) this.mappingFile = args[++n];\n\t\t\telse if (args[n] == '--html' && n + 1 < args.length) this.htmlFile = args[++n];\n\t\t\telse if (args[n] == '--minchi') this.withMInChI = true;\n\t\t\telse if (args[n] == '--inchi' && n < args.length - 1) InChI.setExecutable(args[++n]);\n\t\t\telse if (args[n] == '-h' || args[n] == '-help' || args[n] == '--help') this.justHelp = true;\n\t\t\telse if (args[n] == '--verbose') this.verbose = true;\n\t\t}\n\t}\n\n\tpublic async run():Promise<void>\n\t{\n\t\tif (this.tableFile) await new TableExtract(this.tableFile, this.lookupFile, this.mappingFile, this.verbose).exec();\n\t\telse if (this.htmlFile) await new RenderHTML(this.htmlFile, this.withMInChI).exec();\n\t\telse if (this.inputFile || this.inputFormat || this.outputFile || this.outputFormat) await new TransformMixtures(this.inputFile, this.inputFormat, this.outputFile, this.outputFormat).exec();\n\t\telse if (this.justHelp) this.printHelp();\n\t\telse\n\t\t{\n\t\t\tthis.log('Nothing to do.');\n\t\t\tthis.printHelp();\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate printHelp():void\n\t{\n\t\tconsole.log('Mixtures console utilities. Arguments:');\n\t\tconsole.log('    -i {fn}          read input file (type guessed from suffix)');\n\t\tconsole.log('    -if {fmt}        specify/override type for input file');\n\t\tconsole.log('    -o {fn}          write output file (type guessed from suffix)');\n\t\tconsole.log('    -of {fmt}        specify/override type for output file');\n\t\tconsole.log('    --table {fn}     convert a tabular datafile to mixfile collection');\n\t\tconsole.log('    --lookup {fn}    (optional) lookup file for name-to-structure');\n\t\tconsole.log('    --mapping {fn}   (optional) JSON-formatted file for column mappings');\n\t\tconsole.log('    --html {fn}      render mixfile collection as an HTML table');\n\t\tconsole.log('    --minchi         (optional) include MInChI notation');\n\t\tconsole.log('    --inchi {fn}     (optional) specify InChI executable location');\n\t\tconsole.log('Mixture formats:');\n\t\tfor (let fmt of ALL_TRANSFORMMIXTURE_FORMATS) console.log('    ' + fmt);\n\t}\n\n\tprivate log(str:string):void\n\t{\n\t\tif (this.verbose) console.log(str);\n\t}\n}\n\n// if being run in NodeJS context, need to export the class\n// if (typeof module == 'object') module.exports['Console'] = Console;\n\n"],"names":["StreamBase","withParser","StreamArray","make","options","constructor","super","this","_level","_counter","_wait","chunk","_","callback","name","Error","_transform","_filter","_push","discard","_assembler","current","length","pop","push","key","value","streamArray","Constructor","module","exports","Transform","Assembler","Counter","initialDepth","depth","startObject","endObject","startArray","endArray","Object","assign","writableObjectMode","readableObjectMode","objectFilter","includeUndecided","encoding","result","_accept","_saved_assembler","dropToLevel","_reject","require","fs","path","pathFile","join","__dirname","executablePath","existsSync","readFileSync","process","env","ELECTRON_OVERRIDE_DIST_PATH","getElectronPath","defineProperty","createFunctionWithReturnValue","getGlobal","getCurrentWebContents","getCurrentWindow","getBuiltin","callbacks_registry_1","type_utils_1","electron_1","module_names_1","get_electron_binding_1","Promise","global","callbacksRegistry","CallbacksRegistry","remoteObjectCache","Map","finalizationRegistry","FinalizationRegistry","id","ref","get","undefined","deref","delete","ipcRenderer","send","contextId","electronIds","WeakMap","isReturnValue","WeakSet","v8Util","getElectronBinding","getHiddenValue","getContextId","on","IS_REMOTE_PROXY","Symbol","wrapArgs","args","visited","Set","valueToMeta","has","type","serialize","Array","isArray","add","meta","Buffer","isSerializableObject","isPromise","then","onFulfilled","onRejected","members","prop","location","getLocation","map","setObjectMembers","object","metaId","member","prototype","hasOwnProperty","call","descriptor","enumerable","remoteMemberFunction","command","metaToValue","sendSync","descriptorFunction","proxyFunctionProperties","set","configurable","writable","setObjectPrototype","proto","setPrototypeOf","loaded","loadRemoteProperties","Proxy","target","property","bind","ownKeys","getOwnPropertyNames","getOwnPropertyDescriptor","deserialize","from","buffer","byteOffset","byteLength","resolve","metaToError","ret","cached","getCachedRemoteObject","remoteFunction","wr","WeakRef","register","setCachedRemoteObject","obj","handleMessage","channel","handler","event","passedContextId","senderId","console","error","enableStacks","argv","includes","getCurrentStack","stack","captureStackTrace","apply","remove","returnValue","func","browserModuleNames","forEach","nextId","callbacks","callbackIds","locationInfo","regexp","stackString","filenameAndLine","match","exec","Utf8Stream","patterns","value1","string","key1","colon","comma","ws","numberStart","numberDigit","numberFraction","numberExponent","numberExpSign","noSticky","RegExp","e","keys","src","source","slice","numberFracStart","numberExpStart","numberFracDigit","numberExpDigit","values","true","false","null","expected","array","codes","b","f","n","r","t","Parser","_packKeys","_packStrings","_packNumbers","_streamKeys","_streamStrings","_streamNumbers","packValues","packKeys","packStrings","packNumbers","streamValues","streamKeys","streamStrings","streamNumbers","_jsonStreaming","jsonStreaming","_done","_expect","_stack","_parent","_open_number","_accumulator","_flush","_processBuffer","index","main","lastIndex","_buffer","charAt","s","String","fromCharCode","parseInt","parser","_linkedBinding","electronBinding","EventEmitter","Ctr","done","connectTo","stream","reviver","stringValue","_saveValue","_saveValueWithReviver","numberAsString","numberValue","emit","i","level","splice","consume","keyValue","parseFloat","nullValue","trueValue","falseValue","StringDecoder","_transformString","_stringDecoder","_transformBuffer","write","toString","_flushInput","end","val","Function","reject","serializableTypes","Boolean","Number","Date","ArrayBuffer","isView","some","objectMap","mapper","targetEntries","entries","fromEntries","image","representations","scaleFactors","getScaleFactors","scaleFactor","size","getSize","toBitmap","dataURL","toDataURL","__ELECTRON_SERIALIZED_NativeImage__","serializeNativeImage","nativeImage","createEmpty","width","height","addRepresentation","rep","deserializeNativeImage","_a","_b","commonModuleNames","concat","features","isDesktopCapturerEnabled","isViewApiEnabled","chain","fn","__createBinding","create","o","m","k","k2","__exportStar","p","Readable","Writable","Duplex","none","for","finalSymbol","manySymbol","wrapFunction","transform","Chain","sanitize","next","async","gen","data","runAsyncGenerator","wrapArray","fns","isFinal","getFinalValue","isReadableNodeStream","pipe","_writableState","_readableState","readable","isWritableNodeStream","streams","filter","convertToTransform","input","output","reduce","_write","_1","_2","_final","pause","_read","resume","skipEvents","isMany","getManyValues","final","many","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","toStringTag","isBlank","arr","notBlank","safeArray","len","arrayLength","anyTrue","v","allTrue","anyFalse","allFalse","iterAnyTrue","iterAllTrue","iterAnyFalse","iterAllFalse","swap","idx1","idx2","duplicate","append","item","prepend","unshift","arr1","arr2","idx","flatten","mtx","vec","transpose","sz1","sz2","anyArray","j","equals","equivalent","len1","compareTo","sz","Math","max","booleanArray","fill","numberArray","stringArray","genericArray","genericBlankArrays","funcArray","first","last","min","MAX_VALUE","MIN_VALUE","idxMin","idxMax","range","lo","hi","reverse","identity0","identity1","identityN","start","notMask","mask","idxGet","maskCount","c","maskIdx","idxMask","maskMap","pos","maskGet","maskEqual","sum","sub","mul","neg","setTo","addTo","mulBy","setToArray","addToArray","subFromArray","mulByArray","divByArray","idxSort","sort","a","v1","v2","sorted","sortedUnique","unique","uniqueUnstable","uniqueStable","maskUnique","idxUnique","exclude","excl","count","indexOf","Permutation","parityPerms","parityIdentity","parityOrder","smallPermutation","PERM1","PERM2","PERM3","PERM4","allPermutations","SMALL_PERMS","PERM_CACHE","MAX_CACHE","nperms","perms","nonunique","Chemistry","ELEMENTS","ELEMENT_GROUPS","ELEMENT_ROWS","ELEMENT_BLOCKS","ELEMENT_VALENCE","ELEMENT_BONDING","ELEMENT_SHELL","NATURAL_ATOMIC_WEIGHTS","ELEMENT_H","ELEMENT_He","ELEMENT_Li","ELEMENT_Be","ELEMENT_B","ELEMENT_C","ELEMENT_N","ELEMENT_O","ELEMENT_F","ELEMENT_Ne","ELEMENT_Na","ELEMENT_Mg","ELEMENT_Al","ELEMENT_Si","ELEMENT_P","ELEMENT_S","ELEMENT_Cl","ELEMENT_Ar","ELEMENT_K","ELEMENT_Ca","ELEMENT_Sc","ELEMENT_Ti","ELEMENT_V","ELEMENT_Cr","ELEMENT_Mn","ELEMENT_Fe","ELEMENT_Co","ELEMENT_Ni","ELEMENT_Cu","ELEMENT_Zn","ELEMENT_Ga","ELEMENT_Ge","ELEMENT_As","ELEMENT_Se","ELEMENT_Br","ELEMENT_Kr","ELEMENT_Rb","ELEMENT_Sr","ELEMENT_Y","ELEMENT_Zr","ELEMENT_Nb","ELEMENT_Mo","ELEMENT_Tc","ELEMENT_Ru","ELEMENT_Rh","ELEMENT_Pd","ELEMENT_Ag","ELEMENT_Cd","ELEMENT_In","ELEMENT_Sn","ELEMENT_Sb","ELEMENT_Te","ELEMENT_I","ELEMENT_Xe","ELEMENT_Cs","ELEMENT_Ba","ELEMENT_La","ELEMENT_Ce","ELEMENT_Pr","ELEMENT_Nd","ELEMENT_Pm","ELEMENT_Sm","ELEMENT_Eu","ELEMENT_Gd","ELEMENT_Tb","ELEMENT_Dy","ELEMENT_Ho","ELEMENT_Er","ELEMENT_Tm","ELEMENT_Yb","ELEMENT_Lu","ELEMENT_Hf","ELEMENT_Ta","ELEMENT_W","ELEMENT_Re","ELEMENT_Os","ELEMENT_Ir","ELEMENT_Pt","ELEMENT_Au","ELEMENT_Hg","ELEMENT_Tl","ELEMENT_Pb","ELEMENT_Bi","ELEMENT_Po","ELEMENT_At","ELEMENT_Rn","ELEMENT_Fr","ELEMENT_Ra","ELEMENT_Ac","ELEMENT_Th","ELEMENT_Pa","ELEMENT_U","ELEMENT_Np","ELEMENT_Pu","ELEMENT_Am","ELEMENT_Cm","ELEMENT_Bk","ELEMENT_Cf","ELEMENT_Es","ELEMENT_Fm","ELEMENT_Md","ELEMENT_No","ELEMENT_Lr","ELEMENT_Rf","ELEMENT_Db","ELEMENT_Sg","ELEMENT_Bh","ELEMENT_Hs","ELEMENT_Mt","ELEMENT_Ds","ELEMENT_Rg","ELEMENT_Cn","Matrix","A","fromArray","clone","numRows","numCols","X","C","norm1","abs","normInf","uminus","plus","B","plusEquals","minus","minusEquals","arrayTimes","arrayTimesEquals","arrayRightDivide","arrayRightDivideEquals","arrayLeftDivide","arrayLeftDivideEquals","scalarTimes","scalarTimesEquals","times","Bcolj","Arowi","rank","SingularValueDecomposition","cond","trace","identity","lines","row","JSON","stringify","nu","U","V","work","nct","nrt","hypot","pp","iter","eps","pow","tiny","kase","ks","cs","sn","scale","sp","spm1","epm1","sk","ek","shift","sqrt","g","getU","getV","getSingularValues","getS","S","norm2","tol","EPSILON","Triangulation2D","px","py","numTriangles","edgeStack","hull","maxTriangles","triangles","halfedges","hashSize","ceil","hullPrev","hullNext","hullTri","hullHash","ids","dists","update","trimConcave","threshold","threshSq","sqr","tri","edge","uniqueEdges","edgeCount","ntri","c1","c2","c3","i1","i2","i3","repTri","repEdge","traceOutline","e1","e2","e3","edgePairs","entry","floor","isz","idxMap","g1","g2","sequence","minX","minY","maxX","maxY","centreX","centreY","i0","minDist","POSITIVE_INFINITY","norm_xy","i0x","i0y","i1x","i1y","minRadius","circumRadius","i2x","i2y","isFinite","quicksort","d0","NEGATIVE_INFINITY","orient","x","y","pickCircumCentre","hullStart","hullSize","hashKey","addTriangle","xp","yp","q","legalise","pseudoAngle","ar","a0","b0","al","bl","p0","pr","pl","p1","inCircle","hbl","link","br","dx","dy","orientIfSure","rx","ry","qx","qy","l","ax","ay","bx","by","cx","cy","ex","ey","fx","fy","bp","cp","cl","left","right","temp","tempDist","median","GeomUtil","pointInPolygon","minArray","maxArray","phase","x1","y1","x2","y2","areLinesParallel","x3","y3","x4","y4","dxa","dya","dxb","dyb","xmajorA","EPS","lineIntersect","u","isPointOnLineSeg","realEqual","pointLineDistance","pointLineSegDistance","doLineSegsIntersect","fltEqual","x1_x3","y1_y3","nx","ny","dn","rectsIntersect","w1","h1","w2","h2","sortAngles","theta","PI","angleDiff","idxSortAngles","uniqueAngles","ang","thetaObtuse","th1","th2","dth","emergentAngle","bottom","behind","delta","TWOPI","dotProduct","crossProduct","affineTranslate","affineMirror","xaxis","yaxis","affineScale","sx","sy","affineRotate","cos","sin","affineCompose","tfm","Acol","Brow","applyAffine","applyAffineArray","isAffineMirror","h","magnitude2","magnitude","dist2","dz","dist","normalise","dsq","inv","normalised","acuteAngle","mag1","mag2","cosTheta","acos","arcControlPoints","rad","t1x","t1y","t2x","t2y","tx","ty","D","createBezierEllipse","rw","rh","nseg","sinTheta","incrAlpha","alpha","cosAlpha","sinAlpha","npt","n1","n2","n3","n4","ctrl","fitCircle","fitEllipse","bestW","bestH","bestScore","shrinkToFit","whs","dmin","invW2","invH2","whsX","whsY","anything","superimpose","thetaA","atan2","rot00","rot01","rot10","rot11","acx","acy","invsz","bcx","bcy","mtxA","mtxB","cov","svd","rotate","convexHull","flatness","algo","QuickHull","hullX","hullY","outlinePolygon","diameter","del","concave","hsz","al1","al2","quickHull","furthestPoint","distance","ux","uy","maxDist","maxPos","Pos","zero","other","scaleBy","mag","offsetBy","withScaleBy","withOffsetBy","w","isZero","fitInto","maxW","maxH","Box","fromBounds","fromSize","fromOval","oval","getPos","setPos","setSize","midX","midY","area","grow","withGrow","intersects","intersection","x5","y5","x6","y6","contains","union","isEmpty","notEmpty","Oval","fromBox","box","setCentre","setRadius","Line","fromPos","pos1","pos2","setPos1","setPos2","XML","parseXML","strXML","xmlDoc","customParser","parseFromString","DOMParser","doc","customSerial","serializeToString","documentElement","XMLSerializer","toPrettyString","xslt","xsltDoc","xsltProc","XSLTProcessor","importStylesheet","resultDoc","transformToDocument","nodeText","el","text","child","childNodes","nodeType","nodeValue","childText","parent","tagName","findElement","appendElement","ownerDocument","createElement","appendChild","appendElementAfter","presib","postsib","nextSibling","parentNode","insertBefore","appendText","isCDATA","createCDATASection","createTextNode","createTextChild","textContent","setText","firstChild","removeChild","node","nodeName","findChildElements","list","childElements","DOM","parse","elHTML","elInput","elCanvas","xhtml","xml","html","outerHTML","template","document","innerHTML","content","find","selector","querySelector","findAll","nodeList","querySelectorAll","domList","parentElement","ancestor","closest","children","tag","firstElementChild","nextElementSibling","toLocaleLowerCase","exists","isVisible","offsetWidth","offsetHeight","getClientRects","appendTo","prependTo","insertAfter","before","empty","getHTML","setHTML","appendHTML","insertAdjacentHTML","getText","getValue","setValue","str","getCSS","style","getPropertyValue","setCSS","setProperty","css","dict","getAttr","hasAttribute","getAttribute","setAttr","setAttribute","attr","addClass","clsnames","cls","split","classList","removeClass","hasClass","clsname","setClass","flag","toggleClass","offset","rect","getBoundingClientRect","win","defaultView","pageXOffset","top","pageYOffset","setBoundaryPixels","setSizePixels","hasFocus","activeElement","grabFocus","delay","setTimeout","focus","removeEvent","removeEventListener","onKeyDown","addEventListener","onKeyUp","onKeyPress","onScroll","onWheel","onClick","onContextMenu","onDblClick","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","onMouseMove","onMouseOver","onChange","onInput","onTouchStart","onTouchMove","onTouchCancel","onTouchEnd","safeInt","def","startsWith","substring","isNaN","formatDouble","sigfig","toPrecision","endsWith","colourCode","col","hex","colourAlpha","transp","ONE_OVER_255","colourCanvas","norm2_xyz","signum","invZ","INV_TWOPI","DEGRAD","RADDEG","th","findNode","findNodes","deepClone","escapeHTML","replace","KeyCode","Graph","edge1","edge2","nbrs","indices","labels","props","nbr","fromMolecule","mol","numAtoms","numBonds","bfr","bondFrom","bto","bondTo","fromMoleculeMask","adj","atomAdjList","fromNeighbours","buff","numNodes","numEdges","getEdge","getEdges","getIndex","setIndex","getLabel","setLabel","lbl","getProperty","prp","addNode","hasEdge","node1","node2","addEdge","removeEdge","isolateNode","keepNodesMask","oldsz","newsz","newmap","newnbrs","keepNodesIndex","removeNodesMask","removeNodesIndex","subgraphIndex","nsz","subgraphMask","calculateComponents","cc","high","calculateComponentGroups","grp","calculateRingBlocks","rblk","plen","numVisited","back","nextID","calculateRingBlockGroups","cap","findRingsOfSize","num","rings","newRings","findRingsOfSizeMask","recursiveRingFind","calculateBFS","curnum","lsz","watermark","calculateGravity","wght","wmod","calculateShortestPath","MAX_SAFE_INTEGER","prev","alt","adjacencyMatrix","distanceMatrix","psize","capacity","fnd","newPath","fp","flip","look","same","ResonanceRemover","resBonds","atomHyd","maxIter","bondOrders","tolerant","bondOrder","perform","atomHExplicit","correctInputMask","processComponent","na","nb","atno","atomicNumber","atomCharge","atomAdjCount","nodes","findBond","optionalH","Molecule","HEXPLICIT_UNKNOWN","atomElement","gravity","bsz","bgrav","bidx","seq","paths","resultCount","definiteMatch","p2","validPath","count1","count2","a1","a2","BONDARTIFACT_EXTRA_RESPATH","BONDARTIFACT_EXTRA_RESRING","BONDARTIFACT_EXTRA_ARENE","BondArtifact","resPaths","resRings","arenes","atomExtra","appendResPath","appendResRing","appendArene","blk","res","atoms","pack","pathify","centre","getPathBlocks","getRingBlocks","getAreneBlocks","getResPaths","getResRings","getArenes","rewriteMolecule","extra","modified","setAtomExtra","ring","arene","atom","harmoniseNumbering","blocks","stashPaths","clear","nextIdentifier","stashRings","stashArenes","createPath","alreadyExists","atomsAsPath","createRing","atomsAsRing","createArene","atomsAsArene","removeArtifact","pick","overlap","removeAll","bits","requireRing","areneAtoms","best","bsum","inkeys","DataSheetColumn","ForeignMoleculeTransient","DataSheet","title","description","colData","rowData","numExtens","extData","withRows","inRow","outRow","cloneMask","colMask","rowMask","inclExtn","outCols","outRows","getData","numExtensions","getExtName","getExtType","getExtData","setExtName","setExtType","setExtData","appendExtension","insertExtension","deleteExtension","colName","colType","colDescr","descr","isNull","findColByName","notNull","ct","getMolecule","getString","getExtend","getObject","datum","fromString","getMoleculeClone","getMoleculeBlank","getInteger","getReal","getBoolean","setToNull","setObject","setMolecule","setString","setInteger","setReal","setBoolean","setExtend","isEqualMolecule","isEqualString","isEqualInteger","isEqualReal","isEqualBoolean","appendColumn","insertColumn","deleteColumn","changeColumnName","changeColumnType","newType","oldType","incompatible","toLowerCase","ensureColumn","reorderColumns","order","appendRow","appendRowFrom","srcDS","insertRow","deleteRow","deleteAllRows","moveRowUp","moveRowDown","swapRows","row1","row2","exciseSingleRow","newData","colIsPrimitive","firstColOfType","copyCell","toRow","toCol","fromDS","fromRow","fromCol","convertType","fromType","toType","ft","tt","safeFloat","round","toInt","toReal","ForeignMolecule","noteAromaticAtoms","atomTransient","AtomAromatic","noteAromaticBonds","bondTransient","BondAromatic","noteZeroDativeBonds","BondZeroDative","noteZeroHydrogenBonds","BondZeroHydrogen","markExplicitValence","valence","trans","tr","AtomExplicitValence","setAtomTransient","noteExplicitValence","markSgroupMultiAttach","keyval","idxHigh","AtomSgroupMultiAttach","payload","hasAnySgroupMultiAttach","noteAllSgroupMultiAttach","eq","sgm","markSgroupMultiRepeat","mult","AtomSgroupMultiRepeat","unit","hasAnySgroupMultiRepeat","noteAllSgroupMultiRepeat","mr","markSgroupData","query","AtomSgroupData","hasAnySgroupData","noteAllSgroupData","sd","POLYMERBLOCK_EXTRA_POLYMER","PolymerBlockConnectivity","QueryTypeAtom","QueryTypeBond","PolymerBlockUnit","connect","bondConn","atomName","bondIncl","bondExcl","dup","PolymerBlock","units","blockAtoms","appendBlock","getIDList","getUnit","getUnits","purgeExtraFields","writeUnit","allKeys","removeUnit","pfx","bondExtra","setBondExtra","createUnit","hasPolymerExtensions","getPolymerExtensions","polext","removePolymerExtensions","nattach","HeadToTail","HeadToHead","Random","hasOuter","subBits","in1","in2","bonds","formatBlockAtom","nbonds","names","formatBlockBond","bond","idxConn","incl","codeAtom","codeBond","QueryUtil","hasAnyQueryAtom","hasAnyQueryBond","hasQueryAtom","hasQueryBond","deleteQueryAtom","deleteQueryBond","deleteQueryAtomAll","xtra","deleteQueryBondAll","queryAtomString","queryAtomStringList","queryBondString","setQueryAtom","setQueryAtomList","setQueryBond","queryAtomCharges","parseIntegers","Charges","queryAtomAromatic","parseBoolean","Aromatic","queryAtomUnsaturated","Unsaturated","queryAtomElements","parseStrings","Elements","queryAtomElementsNot","ElementsNot","queryAtomRingSizes","RingSizes","queryAtomRingSizesNot","RingSizesNot","queryAtomRingBlock","RingBlock","queryAtomNumRings","NumRings","queryAtomRingBonds","RingBonds","queryAtomAdjacency","Adjacency","queryAtomBondSums","BondSums","queryAtomValences","Valences","queryAtomHydrogens","Hydrogens","queryAtomIsotope","Isotopes","queryAtomSubFrags","parseMolecules","SubFrags","queryAtomSubFragsNot","SubFragsNot","queryBondRingSizes","queryBondRingSizesNot","queryBondRingBlock","queryBondNumRings","queryBondOrders","Orders","setQueryAtomCharges","formatIntegers","setQueryAtomAromatic","formatBoolean","setQueryAtomUnsaturated","setQueryAtomElements","formatStrings","setQueryAtomElementsNot","setQueryAtomRingSizes","setQueryAtomRingSizesNot","setQueryAtomRingBlock","setQueryAtomNumRings","setQueryAtomRingBonds","setQueryAtomAdjacency","setQueryAtomBondSums","setQueryAtomValences","setQueryAtomHydrogens","setQueryAtomIsotope","setQueryAtomSubFrags","formatMolecules","setQueryAtomSubFragsNot","setQueryBondRingSizes","setQueryBondRingSizesNot","setQueryBondRingBlock","setQueryBondNumRings","setQueryBondOrders","strlist","intlist","mols","molstr","MolUtil","STEREOGROUP_EXTRA_RACEMIC","STEREOGROUP_EXTRA_RELATIVE","StereoGroup","hasStereoGroups","chiRac","chiRel","atomHasWedge","getRacemicGroups","getRelativeGroups","getRacemicAtoms","getRelativeAtoms","getRacemicGroupAtoms","getRelativeGroupAtoms","groups","stash","createRacemic","createRelative","removeRacemic","removeRelative","is3D","hasWedge","atomAdjBonds","bt","bondType","BONDTYPE_UNKNOWN","BONDTYPE_INCLINED","BONDTYPE_DECLINED","MDLMOL_VALENCE","MDLMOLReader","strData","parseHeader","parseExtended","allowV3000","considerRescale","keepAromatic","keepParity","keepQuery","molName","overallStereoAbsolute","groupAttachAny","groupAttachAll","groupStereoAbsolute","groupStereoRacemic","groupStereoRelative","groupLinkNodes","groupMixtures","scsrTemplates","parseCTAB","nextLine","keepTransient","line","version","parseV3000","trim","z","chg","stereo","hyd","mapnum","addAtom","setAtomZ","setIs3D","setAtomMapNum","AtomChiralMDLOdd","AtomChiralMDLEven","AtomChiralMDLRacemic","BONDTYPE_NORMAL","addBond","appendBondTransient","setBondTransient","superatoms","mixtures","anum","setAtomElement","stype","bracketType","mix","sup","connectType","minRep","maxRep","nbr1","nbr2","logic","elements","setAtomCharge","setAtomUnpaired","setAtomIsotope","setAtomHExplicit","setBondOrder","countRingBonds","countSubstitutions","postFix","artifacts","applyPolymerBlock","applySuperAtom","hasAbbrev","AtomSCSRClass","atomZ","hcount","atomHydrogens","usedValence","unp","atomUnpaired","CoordUtil","normaliseBondDistances","derez","Section","inCTAB","inTemplate","section","lineCounts","lineAtom","lineBond","lineColl","lineSgroup","asdrawnRBC","asdrawnSUB","templateBlocks","ERRPFX","fullLine","Atom","Bond","Coll","SGroup","splitWithQuotes","counts","atomBits","bondBits","parseQueryAtomList","spin","appendAtomTransient","AtomSCSRSeqID","attch","unpackStrings","AtomSCSRAttchOrd","rbc","endpts","attach","dir","setBondType","unpackList","stereoGroup","withoutQuotes","templateClass","natReplace","pts","attachPoints","parseV3000Template","label","not","residual","mod","abvAtom","convertToAbbrevIndex","subsumed","poly","b1","b2","b3","b4","header","mdl","segments","seg","quote","ch","bit","bondInRing","MDLSDFReader","ds","upcastColumns","parseStream","upcastStringColumns","rn","str1","str3","cn","allnull","allreal","allint","allbool","lc","int","VPFX","MDLMOLWriter","includeHeader","includeCounts","includeEnd","enhancedFields","chargeSeparate","abbrevSgroups","polymerBlocks","sgroups","writeCTAB","writeV3000","writeCTAB3000","writeEither","triggered","getResult","hasAnyAbbrev","partialAbbrevExpansion","expandAbbrevs","prepareSgroups","atomList1","atomList2","intrpad","elementAtomicNumber","pad","chgidx","chgval","radidx","radval","isoidx","isoval","rgpidx","rgpval","hydidx","hydval","zboidx","zboval","rbcidx","rbcval","subidx","subval","unsidx","unsval","atomX","atomY","rpad","toFixed","atomMapNum","qhyd","mdlValence","atomIsotope","ISOTOPE_NATURAL","qrbc","qsub","quns","maskArom","qbond","writeMBlockPair","writeMBlockFlat","inSgroup","sg","sidx","encodePolymerBlocks","token","writeMBlockFlatIdxFirst","zeroVal","marked","chgmod","bondSum","nativeVal","optVal","frag","getAbbrev","clearAbbrev","setAbbrev","expandOneAbbrev","ma","dat","bestIdx","bestSize","skip","polymers","fl1","fl2","bcrs","sgroupText","populateV3000Sgroups","qel","isotope","packV3000Strings","maskHBond","collections","racidx","relidx","packV3000List","populateSCSRTemplates","sid","txt","defn","tmdl","molfile","trimEnd","MDLSDFWriter","colMol","wtr","escape","charCodeAt","writeKeyVals","keyvals","multiline","kv","readNextChunk","term","mandatory","escaped","MoleculeStream","readUnknown","jsonStr","readNative","readMDLMOL","readNativeLegacy","MSG_PREMATURE","MSG_UNEXPECTED","parseIntHard","parseFloatHard","applyAtomProperty","appendAtomExtra","applyBondProperty","appendBondExtra","lnum","chunkEl","chunkX","chunkY","chunkFrom","chunkTo","chunkOrder","hdr","skUnescape","frto","writeNative","formatV2Elements","writeNativeLegacy","roundedNumber","iso","typ","charge","unpaired","hy","skEscape","skEncodeExtra","writeMDLMOL","code","toUpperCase","hasZCoord","hasTransient","graph","graphBond","ringID","compID","ring3","ring4","ring5","ring6","ring7","base","trashTransient","getAtom","element","hExplicit","mapNum","transient","getBond","to","bondFromTo","trashGraph","setAtomPos","setAtomX","setAtomY","transi","swapAtoms","setBondFrom","setBondTo","setBondFromTo","deleteAtomAndBonds","deleteBond","HYVALENCE_EL","HYVALENCE_VAL","adjBonds","bondOther","atomExplicit","atomRingBlock","buildGraph","buildRingID","r1","r2","atomConnComp","buildConnComp","boundary","tx1","tx2","getAtomCloned","getBondCloned","setAtom","curr","setBond","modifyAtoms","lambda","modifyAtomsIndices","atomIndices","modifyBonds","modifyBondsIndices","bondIndices","findAtomMatch","findBondMatch","findAllAtoms","findAllBonds","mapAtoms","mapBonds","mapAtomsIndices","mapBondsIndices","comp","IDEALBOND","PREFIX_EXTRA","PREFIX_TRANSIENT","atomAtPoint","tolerance","OVERLAP_THRESHOLD","tolsq","sketchEquivalent","mol1","mol2","DEFAULT_EQUIV_TOLERANCE","box1","box2","mx1","arrayAtomX","my1","arrayAtomY","mx2","my2","bestdsq","j1","j2","sketchMappable","atomBondAngles","bndang","overlapsAtom","overlappingAtomMask","thresh","omask","threshSQ","d1","overlappingAtomList","congestionPoint","approach","score","congestionMolecule","mx","my","translateMolecule","ox","oy","rotateMolecule","rotateBond","rotateAtoms","angleNeighbours","mergeAtoms","oldN","newN","centreMolecule","meanX","meanY","deltaX","deltaY","mirrorImage","alignOrientFlip","x0","y0","deltaA","deltaB","dthA","dthB","scoreA","scoreB","atomIsWeirdLinear","Geometry","OVERLAP_THRESHOLD_SQ","SketchUtil","placeNewAtom","placeNewFragment","dirX","dirY","mbox","fbox","vx","vy","fragPosScore","iscore","rangeX","rangeY","mergeOverlappingAtoms","mergeFragmentsDiv","div","chopmask","remap","div1","div2","exotic","removeDuplicateBonds","mergeFragmentsMask","matchAngleGeometry","geom","GEOM_ANGLES","mtheta","hit","gotall","got","primeDirections","angles","calculateNewBondAngles","exits","exitVectors","nn","guessAtomGeometry","mapAngleSubstituent","atblk","elrow","adjBO","adjAN","pri","allSingle","Linear","Octa1","Octa2","Trigonal","SqPlan","Tetra1","Tetra2","gtheta","asz","gsz","vac","gang","mcount","refitAtomGeometry","inRing","allInRing","bestAng","ww","calculateWalkWeight","newAng","bdiff","diff","ringClash","switchAtomGeometry","dst","geoms","bestAtom","bestX","bestY","curth","pickAtomsToConnect","aidx","AUTO_DSQ","bestDSQ","bestA1","bestA2","conn","pickNewAtomDirection","bestTheta","joinOverlappingAtoms","groupX","groupY","adjb","keepmask","moveToEdge","gotS","gotN","sx1","sy1","sx2","sy2","nx1","ny1","nx2","ny2","SEPTEST","placeAdditionalHydrogens","numH","th3","th4","allViableDirections","proposeNewRing","rsz","snap","positionSimpleRing","proposeAtomRing","thsnap","angs","bestDelta","proposeBondRing","sign","brad","guidelineSprouts","sprouts","ords","sprout","orders","orBlank","attidx","ABBREV_ATTACHMENT","validateAbbrevs","convertToAbbrev","srcmask","abbrevName","molidx","junction","polymerExtra","fragidx","maskmol","maskfrag","nadj","newmol","newatom","alignCoords","expandedAbbrevs","expandOneAbbrevFrag","connBond","connType","vx1","vy1","vx2","vy2","invidx","subgraphWithAttachments","xmask","xmol","boxm","boxf","deleteAtoms","componentList","getAtomSides","oldmap","ccmax","grps","getBondSides","bf","arrayAtomMapNum","molecularFormula","punctuation","puncEnter","puncExit","puncEnterSuper","puncExitSuper","countC","countH","formula","molecularWeight","mw","an","bpri","el1","el2","limit1","limit2","boB1A1","boB1A2","boB2A1","boB2A2","bad1","bad2","exotic1","exotic2","ccsz","wn","totalHydrogens","hc","stripHydrogens","force","boringHydrogen","createHydrogens","position","atomVec3","atomOxidationState","nonMetal","oxstate","bo","chalco","oxidationStateText","absox","TEMPLATE_ATTACHMENT","InChIDelegate","generate","execLocation","inchi","InChI","available","inchiPath","X_OK","hasExecutable","setExecutable","isAvailable","nativeMolfileToInChI","writer","mdlmol","inchiKey","proc","cmd","raw","spawnSync","stdout","log","RenderPolicy","pointScale","resolutionDPI","fontSize","lineSize","bondSep","defaultPadding","foreground","background","atomCols","defaultBlackOnWhite","pixPerAng","policy","defaultWhiteOnBlack","defaultColourOnWhite","defaultColourOnBlack","defaultPrintedPublication","RenderEffects","colAtom","colBond","dottedRectOutline","dottedBondCross","hideAtoms","hideBonds","atomFrameDotSz","atomFrameCol","atomCircleSz","atomCircleCol","atomDecoText","atomDecoCol","atomDecoSize","bondDecoText","bondDecoCol","bondDecoSize","overlapAtoms","RenderMnemonicType","BLineType","PseudoEmbedding","bondMask","crossings","calculateCrossings","maskCross","bond1","bond2","higher","crossRblk","maskComp","connectMaskedComponents","ccgrp","embedComponent","imask","gmol","maskNever","amask","newZ","seedFromInternalWedges","seedFromExternalWedges","seedFromPerspective","seedFromDensity","ucount","normaliseHeights","expandOutward","ncount","cross","updateCrossing","success","avgdist","maxdist","highIdx","highCongest","congest","prevZ","mark","bfr1","bto1","bfr2","bto2","idx3","idx4","x1a","y1a","x1b","y1b","x2a","y2a","x2b","y2b","xy","dx1","dy1","dx2","dy2","ext1","ext2","z1a","z1b","z2a","z1","z2","FitRotatedEllipse","margin","stop","calculate","lookupCache","setupParameters","currentScore","calculateScore","coarseDiscovery","fineImprovement","saveCache","getSpline","cacheMap","cacheVal","psz","invpsz","ptheta","pdist","buffX","buffY","rotatedScore","rtheta","scx","scy","devx","devy","deltaD","deltaR","DELTA_OPTIONS","dw","dh","sanity","bestCX","bestCY","bestRW","bestRH","newCX","newCY","newRW","newRH","newScore","REDUCTION","reduc","dCX","dCY","dRW","dRH","closestDSQ","eth","ii","proxSum","FontData","UNITS_PER_EM","INV_UNITS_PER_EM","PANOSE_1","ASCENT","DESCENT","MISSING_HORZ","MISSING_DATA","ASCENT_FUDGE","UNICODE","HORIZ_ADV_X","GLYPH_DATA","OUTLINE_X","OUTLINE_Y","KERN_C1","KERN_C2","KERN_K","pathCache","pathMissing","ctxReference","getKerning","ch1","ch2","measureText","font","measureWidths","xpos","getRawGlyph","getGlyphPath","Path2D","getMissingPath","getOutlineX","getOutlineY","initNativeFont","ctx","canvas","OffscreenCanvas","getContext","measureTextNative","family","opt","save","bold","italic","metrics","restore","FUDGE","ArrangeMolecule","guestimateSize","FONT_CORRECT","numsym","plusH","aw","ah","measure","effects","points","space","unsplitLines","wantArtifacts","wantCrossings","artifactCharge","artifactUnpaired","artifactFract","getMeasure","getPolicy","getEffects","getScale","setWantArtifacts","want","getArtifacts","setArtifacts","setWantCrossings","arrange","bondSepPix","lineSizePix","fontSizePix","ymul","yIsUp","artmask","setupBondOrders","fsz","angToX","angToY","overCol","wad","PADDING","computeSpacePoint","processLabel","bdbl","xy1","shrinkBond","backOffAtom","xy2","ensureMinimumBondLength","head","qbonds","qtxt","oxy","orthogonalDelta","lx1","ly1","lx2","ly2","bnum","Dotted","computeSpaceLine","rotation","ltype","Normal","Inclined","Declined","Unknown","DotDir","IncDouble","IncTriple","IncQuadruple","invD","orderedRingList","processDoubleBond","priorityDoubleSubstit","placeHydrogen","isostr","placeAdjunct","annotateAtom","annotateBond","spc","createCurvedPath","delocalisedAnnotation","createCircularRing","isRing","alkeneLike","createBondCentroid","emb","resolveLineCrossings","processPolymerUnit","numPoints","getPoint","getPoints","numLines","getLine","getLines","getUnsplitLines","numRings","getRing","getRings","numPaths","getPath","getPaths","numSpace","getSpace","getSpaces","offsetEverything","offsetOrigin","bounds","determineBoundary","scaleEverything","padding","determineBoundaryBox","squeezeInto","bw","bh","downScale","limitBounds","monochromate","spatialCongestion","delocalise","fractional","angdir","zeroBonds","zpt","ext","bestDX","bestDY","angThresh","shorted","DELTA","dang","viol","countPolyViolations","shortCircuit","ibar","ibrace","side","chunks","primary","refchunk","bpos","isPrimary","chunkw","tw","bump","xbump","ybump","active","backOffAtomDelta","d12","d2","invD12","SIZE_ORDER","nring","ringsz","ringbusy","ringscore","ringorder","resbcount","maxbcount","sc","priority","nfr","nto","btheta","countFLeft","countFRight","countTLeft","countTRight","idxFLeft","idxFRight","idxTLeft","idxTRight","noshift","ispri","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","bumpAtomPosition","delta1","delta2","delta3","delta4","adjustBondPosition","lt","fussy","SSFRACT","GLYPH_H","emscale","outlineX","outlineY","firstEMW","emw","chp","extraX","extraY","qh","emdx","emdy","srcWAD","RIGHTLEFT","LEFTRIGHT","UPDOWN","DOWNUP","quad","LEFTIES","allLeft","allRight","allUp","allDown","magPX","magPY","bestExt","anyNoClash","subFsz","nglyphs","norm","spaceSubset","subset","hits","nspc","sr","ssz","nf","nt","sumFrom","sumTo","ta","otherTheta","minExt","stepsz","angsz","limX","limY","subSpace","step","oth","bth","boxOverlaps","pointmask","linemask","wx1","wy1","wx2","wy2","bondHigher","bondLower","TYPES","stashOriginals","linesHigher","linesLower","ix","iy","pt","isRegular","regDist","NaN","FRACT","pb","mdist","fit","extAtom","symbol","EXT","capA","ncross1","ncross2","fr1","fr2","capB","score1","score2","splineInterpolate","qx1","qy1","qx2","qy2","allUnits","processPolymerUnitPair","brackets","bracket","shared","nestings","u1","u2","nestOrder","nestCount","tagidx","isLinear","isOuter","theta1","theta2","ym","bsz1","bsz2","BASE_LINE","BASE_TEXT","fract","invDist","px2","py2","px3","py3","px1","py1","px4","py4","line1","line2","line3","xx","yy","pt1","pt2","ypos","dsq1","drawLine","drawText","xmin","ymin","idxN","idxD2","idxD1","globalInstance","ONTOLOGY_SOURCE","OntologyTree","getOntologyKeys","getOntologyData","roots","mapTerms","alreadyLoaded","init","loadFromString","getRoots","hasTerm","uri","getBranch","getBranchList","root","accumulate","branch","loadContent","termList","debugString","repeat","SquarePackingSpring","ArrangeMixtureLineSource","TextAlign","PrimClass","StandardUnits","SquarePacking","packSize","boxes","hspace","vspace","layout","wantRatio","candidates","cand","idxStart","springs","Weak","hash","processCandidate","hashes","batch","Strong","Medium","outline","placed","placeAbove","spring","segs","newsegs","mergeSegmentAbove","placeBelow","mergeSegmentBelow","hiX","loY","hiY","ratio","merge","seg1","seg2","ArrangeMixture","mixture","components","minBoxSize","showCollapsors","collapsedBranches","packBranches","includeIdentifiers","callbackMoleculeSize","nameFontSize","limitStructW","limitStructH","hardwrapName","softwrapName","createComponents","layoutSubComponents","contractComponents","molLayout","molBox","scaleComponents","modScale","nameBox","collapseBox","findComponent","origin","formatQuantity","mixcomp","prec","quantity","relation","rel","formatNormQuantity","note","findNote","concQuantity","concError","concUnits","concRelation","examineBranch","parentIdx","isCollapsed","contents","subOrigin","mixfile","molsz","nameLines","wrapSplitName","Name","qline","Quantity","identifiers","truncateEllipsis","Identifier","metadata","metaString","Meta","minsz","gap","wh","wholeBranch","branchBlock","branchBox","totalWidth","totalHeight","bound","cbox","sq","allChildren","pidx","boundX","idxInside","idxOutside","ellw","keep","pixelCoord","SpoolSVG","prettyPrint","spool","whole","inc","dec","MetaVector","types","prims","offsetX","offsetY","density","charMissing","lowX","lowY","highX","highY","charMask","primClass","Text","colour","thickness","typeidx","findOrCreateType","updateBounds","drawRect","edgeCol","fillCol","NOCOLOUR","Rect","drawOval","drawPath","xpoints","ypoints","ctrlFlags","isClosed","hardEdge","Path","closed","drawPoly","align","direction","Left","Baseline","Right","Middle","Top","Bottom","mscale","rx1","ry1","rx2","ry2","drawTextNative","fontFamily","TextNative","boundLowX","boundLowY","boundHighX","boundHighY","getBounds","transformPrimitives","transformIntoBox","nw","nh","scaleExtent","maxWidth","maxHeight","sw","sh","swsh","renderInto","domNew","jquery","newElement","renderCanvas","clearFirst","clearRect","window","devicePixelRatio","renderContext","typeObj","setupTypeLine","setupTypeRect","setupTypeOval","setupTypePath","setupTypeText","setupTypeTextNative","renderLine","renderRect","renderOval","renderPath","renderText","renderTextNative","createSVG","withXlink","svg","renderSVG","svgLine1","svgLineN","svgRect1","svgRectN","svgOval1","svgOvalN","svgPath","svgText","svgTextNative","into","beginPath","moveTo","lineTo","strokeStyle","lineWidth","lineCap","stroke","fillStyle","fillRect","strokeRect","ellipse","layer","quadraticCurveTo","bezierCurveTo","closePath","lineJoin","translate","fillText","defineSVGStroke","defineSVGFill","rects","ovals","shape","typeDef","every","DrawMolecule","vg","mnemonics","invScale","getMetaVector","getLayout","draw","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","drawUnderEffects","drawFusedWedge","Artifact","drawBondInclined","drawBondDeclined","drawBondUnknown","drawBondDotted","drawBondIncMulti","fg","bez","Centre","drawOverEffects","wdots","hdots","wspc","hspc","Effect","xdots","ydots","invX","invY","bcount","ixy1","ixy2","inv1","other1","other2","dth1","diff1","dth2","diff2","diff3","terminalPoints","ty1","ty2","outerX","outerY","innerX","innerY","nsteps","invSteps","holdout","radius","nudge","DrawMixture","hoverIndex","activeIndex","selectedIndex","callbackDrawMolecule","callbackDrawNameLine","drawConnection","drawComponent","xm","yd","bg","PAIR_UNIT_NAMES","pc","pcWV","pcWW","pcVV","pcMM","mol_L","mmol_L","umol_L","nmol_L","pmol_L","g_L","mg_L","ug_L","mg_mL","mol_kg","kg","mg","ug","ng","L","mL","uL","nL","mmol","umol","nmol","ppm","ppb","PAIR_UNIT_MINCHI","Units","setup","pair","STANDARD_LIST","COMMON_NAMES","URI_TO_NAME","NAME_TO_URI","URI_TO_MINCHI","standardList","commonNames","uriToName","nameToURI","convertToMInChI","mnemonic","DotPathBond","DotPathCharge","DotPath","maskBlock","getBondOrders","numer","denom","getBondClasses","classes","bcls","getChargeClasses","ccls","getAggregateCharges","total","nonsingle","pibonded","metalbonded","bondsum","blk1","blk2","impliedPi","adjpi","maskMaybe","COULD_BLOCK","ACIDS","BASES","hasMetal","totalHave","totalWant","others","electrons","Stereochemistry","chiralTetra","STEREO_NONE","cistransBond","squarePlanar","isH","buildPriority","buildTetraChirality","buildBondCisTrans","buildPlanarCisTrans","buildOctaChirality","atomPriority","atomTetraChirality","bondSideStereo","atomPlanarStereo","getPriorities","getAtomTetraChiral","getBondSideStereo","rubricTetrahedral","numShort","numWedges","th0","one","two","zz","rubricSquarePlanar","ninc","ndec","v0","v3","v4","d3","d4","MIN_ANGLE","MAX_ANGLE","th12","th23","th34","th41","rubricBipyrimidal","atom2","atom3","atom4","atom5","ANGLE_OPPOSITE","v5","atom1","v45","rubricOctahedral","slots","bestOpposite","axial","bestOrthogonal","bestOrient","rubric","rubricBondSides","adj1","adj2","f1","f2","t1","t2","vfr","vto","vbond","vf1","vt1","THRESHSQ","xf1","xt1","xf1N","keepF1T1","keepF2T1","keepF1T2","keepF2T2","vf2","vt2","xf2","xt2","xf2N","haswedge","skip_atom","STEREO_UNKNOWN","parity","STEREO_NEG","STEREO_POS","ringMask","skip_bond","isBondAromatic","pf1","pf2","cipgr","anyActualH","prigr","cip","sortAndGroup","nextpri","repartitioned","cmp","uset","STEREO_BROKEN","RUBRIC_EQUIV_TETRA","RUBRIC_EQUIV_SIDES","RUBRIC_EQUIV_SQUARE","RUBRIC_EQUIV_BIPY","RUBRIC_EQUIV_OCTA","MetaMolecule","atomArom","bondArom","rubricTetra","rubricSquare","rubricBipy","rubricOcta","rubricSides","heavyHash","uniqueElements","dots","piAtom","calculateStrictAromaticity","nr","ensurePiAtoms","anyChange","phase1","phase2","calculateRelaxedAromaticity","exocyclic","rblk1","rblk2","rng","valid","arom","calculateStereoRubric","adjc","adjc1","hc1","adjc2","hc2","removeHydrogens","atomMask","atomMap","calculateSkeletonHash","skeletonHash","calculateHeavyHash","anyH","getSkeletonHash","hvy","isAtomAromatic","bondOrderArom","getAtomAromaticity","getBondAromaticity","getHeavyHash","getDotPath","getUniqueElements","equivalentTo","timeout","isomorphMatch","uniq1","uniq2","createRubric","createStrict","createStrictRubric","createRelaxed","createRelaxedRubric","crc_table","BOOT_CRC","start_crc","feed_crc","crc","byte","end_crc","CircularFingerprints","kind","hookApplyNewFP","hookConsiderNewFP","resolvedChiral","atomGroup","fplist","atomAdj","bondAdj","make_crc_table","initialIdentityECFP","applyNewFP","hashCode","iteration","centralAtom","niter","newident","circularIterate","growAtoms","considerNewFP","circ","numFP","getFP","getFingerprints","getUniqueHashes","getFoldedHashes","maxBits","andBits","tanimoto","hash1","hash2","nheavy","nhydr","degree","inring","ru","par","newFP","lookFP","CLASS_ECFP0","CLASS_ECFP2","CLASS_ECFP4","CLASS_ECFP6","DataSheetStream","readXML","summary","extRoot","extList","colList","rowidx","colidx","readJSON","json","writeXML","extension","column","cell","txtNode","writeJSON","nrow","ncol","doConvert","TEMPLATE_SOURCE","AbbrevContainer","abbrevs","getTemplateKeys","getTemplateData","needsSetup","setupData","thisArg","_arguments","generator","dsstr","colAbbrev","attcount","firstConn","submitAbbreviation","P","fulfilled","rejected","getAbbrevs","infrag","promote","submitFragment","submitMolecule","inmol","substituteAbbrevName","fragExp","fragMF","fragFP","abbrev","afragExp","afragFP","search","formatAbbrevLabel","abv","nameHTML","nameSearch","pre","mid","post","MetalLigate","metalAtom","ligandAttach","ligands","lig","anyAttached","makeLigandBond","otherLigands","avgTheta","orientLigand","l1","l2","arrangeLigandsFree","arrangeLigandsRange","otherOrder","extent","resolveClashes","ligAtom","mchg","lchg","idxAttach","lx","ly","molExtent","weight","bestLX","bestLY","attTheta","attDist","attDX","attDY","orderAttach","srcX","srcY","dstX","dstY","dtheta","refTheta","refSpan","bounded","thetaMin","thetaSpan","ligandSpan","determineThetaBounds","rotTheta","bestMin","bestMax","ablk","bblk","bumpDX","bumpDY","CLOSE_SQ","tainted","outer","FusionPermutation","attdist","guided","bridged","scoreModifier","chainSelect","TemplateFusion","templ","numAttach","withGuideOnly","guidetempl","guideidx","guideadj","timeLimit","artif1","artif2","poly1","poly2","huntForGuides","permuteNone","oldmol","oldbox","newbox","ROTN","rotmol","display","srcidx","sourceIndex","permuteAtom","timeStart","getTime","newperms","fliptempl","composeGuidedOne","flipmol","composeDirectOne","composeBridge","affixRawPermutations","permuteBond","composeGuidedTwo","composeDirectTwo","permuteMulti","composeGuidedMulti","composeDirectMulti","o1","otheta","ntheta","ocurrent","ncurrent","scoreMod","bfs","pmol","osz","asMask","temidx","removeExtraGuides","o2","nth","oidx","orad","nidx","nrad","lowbfs","busy1","busy2","att","gidx","gx","gy","homoPenalty","oel","nel","RESERVED_GUIDESYMBOL","sel","padj","snapToGuide","isGuideOnTerminal","nudgenew","cx1","cy1","cx2","cy2","midx","tidx","gatom","closeDSQ","npsz","umask","numKeep","scorePermutation","uscore","uidx","perm","tmol","tunion","contained","ai","aj","bo1","bo2","wantTheta","totalBO","mmask","tfr","tto","tn","wmol","ActivityType","AbsType","MoleculeActivity","activity","param","owner","toClipboard","currentAtom","currentBond","selectedMask","subjectMask","subjectLength","subjectIndex","hasSelected","setOwner","evaluate","execute","Delete","execDelete","Clear","execClear","Copy","execCopy","Cut","SelectAll","execSelectAll","SelectNone","SelectPrevComp","execSelectComp","SelectNextComp","SelectSide","execSelectSide","SelectGrow","execSelectGrow","SelectShrink","execSelectShrink","SelectChain","execSelectChain","SelectSmRing","execSelectSmRing","SelectRingBlk","execSelectRingBlk","SelectCurElement","execSelectCurElement","SelectToggle","execSelectToggle","SelectUnCurrent","execSelectUnCurrent","Element","execElement","positionX","positionY","keepAbbrev","Charge","execCharge","Connect","execConnect","Disconnect","execDisconnect","execMetalLigate","BondOrder","execBond","BondType","BondGeom","execBondGeom","BondAtom","execBondAtom","BondSwitch","execBondSwitch","BondRotate","execBondRotate","BondAddTwo","execBondAddTwo","BondInsert","execBondInsert","Join","execJoin","Nudge","execNudge","NudgeLots","NudgeFar","execNudgeFar","Flip","execFlip","axis","Scale","execScale","Rotate","execRotate","BondDist","execBondDist","AlignAngle","execAlignAngle","angle","AlignRegular","execAlignRegular","AdjustTorsion","execAdjustTorsion","Move","execMove","refAtom","Ring","execRing","ringX","ringY","aromatic","execTemplateFusion","fragNative","setPermutations","permutations","AbbrevTempl","execAbbrevTempl","AbbrevGroup","execAbbrevGroup","AbbrevFormula","execAbbrevFormula","AbbrevClear","execAbbrevClear","AbbrevExpand","execAbbrevExpand","BondArtifactPath","BondArtifactRing","BondArtifactArene","BondArtifactClear","execBondArtifact","execPolymerBlock","AddHydrogens","execAddHydrogens","RemoveHydrogens","execRemoveHydrogens","QueryClear","execQueryClear","QueryCopy","execQueryCopy","QueryPaste","execQueryPaste","QuerySetAtom","execQuerySetAtom","QuerySetBond","execQuerySetBond","QueryBondAny","execQueryBondAny","SproutDirection","execSproutDirection","finish","setState","errmsg","showMessage","requireSubject","zapSubject","withCut","performCopy","all","cclist","pickSelectedGroup","requireCurrent","sides","requireSelected","any","maxRB","gotRB","rb","applyQuery","NON_METALS","TRANSITION_METALS","MAIN_GROUPS","zap","killmask","ligAtoms","performBondNew","ccmol","oneComp","performBondChange","performBondGeomAtom","performBondGeomBond","altmol","ac1","ac2","mobileSide","baseAng","ang1","ang2","alink","fragmask","fusion","isVertical","invSz","connAtoms","curDist","sel1","isSelected","sel2","a3","group1","group3","subj","outmol","pi","checkAbbreviationReady","fixed","requireAtoms","artif","subject","curAtom","removePolymerBlock","performPolymerBlock","selmask","qmol","qterms","aterms","bterms","angleOptions","newAtom","bscore","switchType","stereoType","newang","subjmask","disqualTerminal","side1","side2","weight1","weight2","polymer","NormMixture","notes","analyse","origins","getOrigins","compList","getComponent","enumerateStereo","stereoEnum","childIndexes","sumType","None","sumAmount1","sumAmount2","sumError","toAbsoluteUnits","amount","childType","idxOne","Mass","Volume","Moles","splitMolecule","activ","emols","Mixture","mixfileVersion","fromComponent","isComponentEmpty","BITS","hasQuantity","recursiveEqual","deserialise","serialise","beautify","serialiseComponent","getParentComponent","getComponents","nodeEnum","setComponent","deleteComponent","prependBefore","subcomp","SKIP","splitOrigin","regex","regpad","comp1","comp2","dict1","dict2","keys1","keys2","MInChISegment","ExportMInChI","minchi","segment","fillInChI","formulate","modmix","useRatio","inchiList","mcomp","inchiFrag","PFX","builder","assembleContents","appendSegment","Header","Component","layerN","Hierarchy","layerG","Concentration","getSegment","makeLongHashKey","makeShortHashKey","LETTERS","crclist","feedCharacter","letter","NCRC","trunc","formatConcentration","mantissa","exp","determineExponent","unitURI","scaled","tree","subComp","subTree","conc","shaveBeard","minval","log10","OutlineMeasurement","xToAng","yToAng","MixtureCollection","getMixture","getMixtureDirect","setMixture","setMixtureDirect","deleteMixture","appendMixture","appendMixtureDirect","appendCollection","collection","insertMixture","swapMixtures","m1","m2","RenderHTML","htmlFile","withMInChI","mixlist","emitln","gfx","maker","Aspect","allowModify","isColumnReserved","areColumnsReserved","colNames","resMask","rowFirstBlock","rowBlockCount","aspectUnion","initiateNewRow","columnEffectivelyBlank","numTextRenderings","produceTextRendering","numGraphicRenderings","produceGraphicRendering","numHeaderRenderings","produceHeaderRendering","TEXT_PLAIN","TEXT_LINK","TEXT_HTML","supportedAspects","registerAspect","classdef","CODE","NAME","AssayProvenanceHeader","prefixes","targetName","targetURI","organismName","organismURI","targetTypeName","targetTypeURI","cellName","cellURI","assayTypeName","assayTypeURI","assayDescription","sourceName","sourceURI","sourceVersion","documentName","documentURI","measureTypeName","measureTypeURI","unitNames","unitURIs","AssayProvenance","isAssayProvenance","getHeader","parseMetaData","setHeader","formatMetaData","COLNAME_MOLECULE","getName","COLNAME_NAME","COLNAME_VALUE","getError","COLNAME_ERROR","err","COLNAME_UNITS","getRelation","COLNAME_RELATION","getSourceURI","COLNAME_SOURCEURI","setName","setError","setUnits","setRelation","setSourceURI","parseAndCorrect","plainHeading","url","URI_UNIT_M","URI_UNIT_mM","URI_UNIT_uM","URI_UNIT_nM","URI_UNIT_pM","URI_UNIT_logM","URI_UNIT_perM","URI_UNIT_gL","URI_UNIT_mgL","URI_UNIT_ugL","URI_UNIT_binary","MeasurementData","isMeasurementData","fields","effectHeader","ensureFields","rename","fldidx","newName","oldName","sfx","SUFFIX_VALUE","SUFFIX_ERROR","SUFFIX_UNITS","SUFFIX_MOD","reservedColumns","fieldName","getValueField","field","colValue","colError","colUnits","colMod","clearValue","getDescr","setDescr","defnURI","resv","colField","MixtureAttributeType","isMixture","attributes","info","TableExtractType","TableExtract","tableFile","lookupFile","mappingFile","verbose","table","aprov","mdata","lookup","mappings","parseLines","initialMapping","customMapping","extractMixture","sep","aspect","custom","findIndex","appendQuant","stashRatio","Structure","Bound","Ratio","Relation","Link","links","Property","ExportSDFile","colHier","colConc","appendComponent","subseq","ImportSDFile","mixfiles","feed","processBlock","poll","assembleComponents","sdfile","reader","hier","incomp","decodeConcentration","finishRatio","qstr","quant1","quant2","isRatio","TransformMixtureFormat","ALL_TRANSFORMMIXTURE_FORMATS","TransformMixtures","inputFile","inputFormat","outputFile","outputFormat","instream","outstream","nextIndex","roster","fmt","MInChI","SVG","LongMInChIKey","ShortMInChIKey","stdin","Mixfile","pipeMixfile","pipeJSON","SDF","pipeSDF","flushRoster","processMixfile","Console","justHelp","run","printHelp"],"sourceRoot":""}