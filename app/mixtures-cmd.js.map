{"version":3,"file":"mixtures-cmd.js","mappings":"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,KAAM,KAAM,KAAM,KAAM,KAC5I,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5I,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,IAChJ,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,IAAK,KAChJ,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC9I,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5I,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAC5I,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAC7I,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAC9I,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC7I,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE3Ip1E,KAAKq1E,WAAa,CACd,GACA,kEACA,2EACA,kNACA,ofACA,8dACA,8nBACA,uCACA,mMACA,8LACA,iJACA,mEACA,uCACA,8BACA,4BACA,0CACA,iWACA,0GACA,wSACA,2fACA,8FACA,kWACA,qgBACA,0DACA,0gBACA,4eACA,uDACA,kEACA,gEACA,+DACA,gEACA,4RACA,6qBACA,0FACA,yaACA,mZACA,6QACA,oEACA,8DACA,8UACA,mEACA,kEACA,qKACA,iFACA,wCACA,4FACA,uEACA,uWACA,uRACA,ieACA,2QACA,+aACA,sDACA,mQACA,mEACA,oHACA,wGACA,wEACA,qEACA,oDACA,gCACA,kDACA,sDACA,kCACA,+BACA,ybACA,kTACA,0SACA,uRACA,qSACA,8KACA,gbACA,uKACA,0DACA,yLACA,iFACA,8BACA,gWACA,uKACA,wPACA,2SACA,4SACA,wJACA,2bACA,mMACA,4KACA,iEACA,8GACA,4FACA,yEACA,gEACA,8SACA,iCACA,0SACA,uSACA,GACA,uDACA,oSACA,4PACA,0aACA,0GACA,0DACA,0yBACA,2DACA,wdACA,waACA,wHACA,yCACA,8BACA,idACA,qCACA,6NACA,qFACA,0QACA,gZACA,wCACA,6KACA,qGACA,8BACA,uJACA,8FACA,sOACA,sHACA,+LACA,gVACA,+fACA,2RACA,sHACA,+HACA,8IACA,yTACA,mJACA,mTACA,iIACA,2jBACA,gGACA,yGACA,wHACA,6HACA,8FACA,uGACA,qHACA,0HACA,2SACA,sSACA,mYACA,6YACA,2ZACA,skBACA,gaACA,gHACA,6hBACA,+RACA,ySACA,uTACA,4TACA,6GACA,qRACA,sdACA,qdACA,8dACA,4eACA,wpBACA,ifACA,8oBACA,mtBACA,odACA,iUACA,0UACA,wVACA,6VACA,0DACA,mEACA,iFACA,sFACA,+cACA,sYACA,qRACA,8RACA,4SAC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,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KAEtIx1E,KAAKy1E,QAAU,CACX,IAAU,IAAK,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAC5I,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAC7I,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IACvI,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAU,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvI,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAC5I,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAC7I,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAU,IAAK,IAAK,IAAK,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","sources":["webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/get-electron-binding.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/module-names.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/type-utils.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/callbacks-registry.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/index.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/remote.js","webpack://Mixtures/./node_modules/@electron/remote/renderer/index.js","webpack://Mixtures/./node_modules/electron/index.js","webpack://Mixtures/./node_modules/stream-chain/index.js","webpack://Mixtures/./node_modules/stream-json/Assembler.js","webpack://Mixtures/./node_modules/stream-json/Parser.js","webpack://Mixtures/./node_modules/stream-json/streamers/StreamArray.js","webpack://Mixtures/./node_modules/stream-json/streamers/StreamBase.js","webpack://Mixtures/./node_modules/stream-json/utils/Utf8Stream.js","webpack://Mixtures/./node_modules/stream-json/utils/withParser.js","webpack://Mixtures/external node-commonjs \"child_process\"","webpack://Mixtures/external node-commonjs \"events\"","webpack://Mixtures/external node-commonjs \"fs\"","webpack://Mixtures/external node-commonjs \"path\"","webpack://Mixtures/external node-commonjs \"process\"","webpack://Mixtures/external node-commonjs \"stream\"","webpack://Mixtures/external node-commonjs \"string_decoder\"","webpack://Mixtures/webpack/bootstrap","webpack://Mixtures/webpack/runtime/define property getters","webpack://Mixtures/webpack/runtime/hasOwnProperty shorthand","webpack://Mixtures/webpack/runtime/make namespace object","webpack://Mixtures/./node_modules/webmolkit/util/Vec.js","webpack://Mixtures/./node_modules/webmolkit/data/Chemistry.js","webpack://Mixtures/./node_modules/webmolkit/util/Matrix.js","webpack://Mixtures/./node_modules/webmolkit/util/Triangulation2D.js","webpack://Mixtures/./node_modules/webmolkit/util/Geom.js","webpack://Mixtures/./node_modules/webmolkit/util/XML.js","webpack://Mixtures/./node_modules/webmolkit/util/dom.js","webpack://Mixtures/./node_modules/webmolkit/util/util.js","webpack://Mixtures/./node_modules/webmolkit/data/Graph.js","webpack://Mixtures/./node_modules/webmolkit/calc/ResonanceRemover.js","webpack://Mixtures/./node_modules/webmolkit/data/BondArtifact.js","webpack://Mixtures/./node_modules/webmolkit/data/DataSheet.js","webpack://Mixtures/./node_modules/webmolkit/data/ForeignMolecule.js","webpack://Mixtures/./node_modules/webmolkit/data/PolymerBlock.js","webpack://Mixtures/./node_modules/webmolkit/data/QueryUtil.js","webpack://Mixtures/./node_modules/webmolkit/data/StereoGroup.js","webpack://Mixtures/./node_modules/webmolkit/data/MDLReader.js","webpack://Mixtures/./node_modules/webmolkit/data/MDLWriter.js","webpack://Mixtures/./node_modules/webmolkit/data/MoleculeStream.js","webpack://Mixtures/./node_modules/webmolkit/data/Molecule.js","webpack://Mixtures/./node_modules/webmolkit/data/CoordUtil.js","webpack://Mixtures/./node_modules/webmolkit/data/SketchUtil.js","webpack://Mixtures/./node_modules/webmolkit/data/MolUtil.js","webpack://Mixtures/./src/mixture/InChIDelegate.ts","webpack://Mixtures/./src/nodejs/InChI.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/Rendering.js","webpack://Mixtures/./node_modules/webmolkit/gfx/ArrangeMolecule.js","webpack://Mixtures/./node_modules/webmolkit/util/FitRotatedEllipse.js","webpack://Mixtures/./node_modules/webmolkit/gfx/FontData.js","webpack://Mixtures/./node_modules/webmolkit/util/Theme.js","webpack://Mixtures/./node_modules/webmolkit/data/OntologyTree.js","webpack://Mixtures/./src/mixture/SquarePacking.ts","webpack://Mixtures/./src/mixture/ArrangeMixture.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/MetaVector.js","webpack://Mixtures/./src/mixture/Units.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/DrawMolecule.js","webpack://Mixtures/./src/mixture/DrawMixture.ts","webpack://Mixtures/./node_modules/webmolkit/data/DotPath.js","webpack://Mixtures/./node_modules/webmolkit/data/Stereochemistry.js","webpack://Mixtures/./node_modules/webmolkit/data/MetaMolecule.js","webpack://Mixtures/./node_modules/webmolkit/calc/CircularFingerprints.js","webpack://Mixtures/./node_modules/webmolkit/data/DataSheetStream.js","webpack://Mixtures/./node_modules/webmolkit/data/AbbrevContainer.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/MetalLigate.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/TemplateFusion.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/MoleculeActivity.js","webpack://Mixtures/./src/mixture/NormMixture.ts","webpack://Mixtures/./src/mixture/Mixture.ts","webpack://Mixtures/./src/mixture/Mixfile.ts","webpack://Mixtures/./src/mixture/ExportMInChI.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/ArrangeMeasurement.js","webpack://Mixtures/./src/mixture/MixtureCollection.ts","webpack://Mixtures/./src/cmdline/RenderHTML.ts","webpack://Mixtures/./node_modules/webmolkit/aspect/Aspect.js","webpack://Mixtures/./node_modules/webmolkit/aspect/AspectList.js","webpack://Mixtures/./node_modules/webmolkit/aspect/AssayProvenance.js","webpack://Mixtures/./node_modules/webmolkit/aspect/MeasurementData.js","webpack://Mixtures/./node_modules/webmolkit/aspect/Mixture.js","webpack://Mixtures/./src/cmdline/TableExtract.ts","webpack://Mixtures/./src/mixture/ExportSDFile.ts","webpack://Mixtures/./src/mixture/ImportSDFile.ts","webpack://Mixtures/./src/cmdline/TransformMixtures.ts","webpack://Mixtures/./src/cmdline/Console.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getElectronBinding = void 0;\nconst getElectronBinding = (name) => {\n    if (process._linkedBinding) {\n        return process._linkedBinding('electron_common_' + name);\n    }\n    else if (process.electronBinding) {\n        return process.electronBinding(name);\n    }\n    else {\n        return null;\n    }\n};\nexports.getElectronBinding = getElectronBinding;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.browserModuleNames = exports.commonModuleNames = void 0;\nconst get_electron_binding_1 = require(\"./get-electron-binding\");\nexports.commonModuleNames = [\n    'clipboard',\n    'nativeImage',\n    'shell',\n];\nexports.browserModuleNames = [\n    'app',\n    'autoUpdater',\n    'BaseWindow',\n    'BrowserView',\n    'BrowserWindow',\n    'contentTracing',\n    'crashReporter',\n    'dialog',\n    'globalShortcut',\n    'ipcMain',\n    'inAppPurchase',\n    'Menu',\n    'MenuItem',\n    'nativeTheme',\n    'net',\n    'netLog',\n    'MessageChannelMain',\n    'Notification',\n    'powerMonitor',\n    'powerSaveBlocker',\n    'protocol',\n    'pushNotifications',\n    'safeStorage',\n    'screen',\n    'session',\n    'ShareMenu',\n    'systemPreferences',\n    'TopLevelWindow',\n    'TouchBar',\n    'Tray',\n    'utilityProcess',\n    'View',\n    'webContents',\n    'WebContentsView',\n    'webFrameMain',\n].concat(exports.commonModuleNames);\nconst features = get_electron_binding_1.getElectronBinding('features');\nif (!features || !features.isDesktopCapturerEnabled || features.isDesktopCapturerEnabled()) {\n    exports.browserModuleNames.push('desktopCapturer');\n}\nif (!features || features.isViewApiEnabled()) {\n    exports.browserModuleNames.push('ImageView');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserialize = exports.serialize = exports.isSerializableObject = exports.isPromise = void 0;\nconst electron_1 = require(\"electron\");\nfunction isPromise(val) {\n    return (val &&\n        val.then &&\n        val.then instanceof Function &&\n        val.constructor &&\n        val.constructor.reject &&\n        val.constructor.reject instanceof Function &&\n        val.constructor.resolve &&\n        val.constructor.resolve instanceof Function);\n}\nexports.isPromise = isPromise;\nconst serializableTypes = [\n    Boolean,\n    Number,\n    String,\n    Date,\n    Error,\n    RegExp,\n    ArrayBuffer\n];\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm#Supported_types\nfunction isSerializableObject(value) {\n    return value === null || ArrayBuffer.isView(value) || serializableTypes.some(type => value instanceof type);\n}\nexports.isSerializableObject = isSerializableObject;\nconst objectMap = function (source, mapper) {\n    const sourceEntries = Object.entries(source);\n    const targetEntries = sourceEntries.map(([key, val]) => [key, mapper(val)]);\n    return Object.fromEntries(targetEntries);\n};\nfunction serializeNativeImage(image) {\n    const representations = [];\n    const scaleFactors = image.getScaleFactors();\n    // Use Buffer when there's only one representation for better perf.\n    // This avoids compressing to/from PNG where it's not necessary to\n    // ensure uniqueness of dataURLs (since there's only one).\n    if (scaleFactors.length === 1) {\n        const scaleFactor = scaleFactors[0];\n        const size = image.getSize(scaleFactor);\n        const buffer = image.toBitmap({ scaleFactor });\n        representations.push({ scaleFactor, size, buffer });\n    }\n    else {\n        // Construct from dataURLs to ensure that they are not lost in creation.\n        for (const scaleFactor of scaleFactors) {\n            const size = image.getSize(scaleFactor);\n            const dataURL = image.toDataURL({ scaleFactor });\n            representations.push({ scaleFactor, size, dataURL });\n        }\n    }\n    return { __ELECTRON_SERIALIZED_NativeImage__: true, representations };\n}\nfunction deserializeNativeImage(value) {\n    const image = electron_1.nativeImage.createEmpty();\n    // Use Buffer when there's only one representation for better perf.\n    // This avoids compressing to/from PNG where it's not necessary to\n    // ensure uniqueness of dataURLs (since there's only one).\n    if (value.representations.length === 1) {\n        const { buffer, size, scaleFactor } = value.representations[0];\n        const { width, height } = size;\n        image.addRepresentation({ buffer, scaleFactor, width, height });\n    }\n    else {\n        // Construct from dataURLs to ensure that they are not lost in creation.\n        for (const rep of value.representations) {\n            const { dataURL, size, scaleFactor } = rep;\n            const { width, height } = size;\n            image.addRepresentation({ dataURL, scaleFactor, width, height });\n        }\n    }\n    return image;\n}\nfunction serialize(value) {\n    if (value && value.constructor && value.constructor.name === 'NativeImage') {\n        return serializeNativeImage(value);\n    }\n    if (Array.isArray(value)) {\n        return value.map(serialize);\n    }\n    else if (isSerializableObject(value)) {\n        return value;\n    }\n    else if (value instanceof Object) {\n        return objectMap(value, serialize);\n    }\n    else {\n        return value;\n    }\n}\nexports.serialize = serialize;\nfunction deserialize(value) {\n    if (value && value.__ELECTRON_SERIALIZED_NativeImage__) {\n        return deserializeNativeImage(value);\n    }\n    else if (Array.isArray(value)) {\n        return value.map(deserialize);\n    }\n    else if (isSerializableObject(value)) {\n        return value;\n    }\n    else if (value instanceof Object) {\n        return objectMap(value, deserialize);\n    }\n    else {\n        return value;\n    }\n}\nexports.deserialize = deserialize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallbacksRegistry = void 0;\nclass CallbacksRegistry {\n    constructor() {\n        this.nextId = 0;\n        this.callbacks = {};\n        this.callbackIds = new WeakMap();\n        this.locationInfo = new WeakMap();\n    }\n    add(callback) {\n        // The callback is already added.\n        let id = this.callbackIds.get(callback);\n        if (id != null)\n            return id;\n        id = this.nextId += 1;\n        this.callbacks[id] = callback;\n        this.callbackIds.set(callback, id);\n        // Capture the location of the function and put it in the ID string,\n        // so that release errors can be tracked down easily.\n        const regexp = /at (.*)/gi;\n        const stackString = (new Error()).stack;\n        if (!stackString)\n            return id;\n        let filenameAndLine;\n        let match;\n        while ((match = regexp.exec(stackString)) !== null) {\n            const location = match[1];\n            if (location.includes('(native)'))\n                continue;\n            if (location.includes('(<anonymous>)'))\n                continue;\n            if (location.includes('callbacks-registry.js'))\n                continue;\n            if (location.includes('remote.js'))\n                continue;\n            if (location.includes('@electron/remote/dist'))\n                continue;\n            const ref = /([^/^)]*)\\)?$/gi.exec(location);\n            if (ref)\n                filenameAndLine = ref[1];\n            break;\n        }\n        this.locationInfo.set(callback, filenameAndLine);\n        return id;\n    }\n    get(id) {\n        return this.callbacks[id] || function () { };\n    }\n    getLocation(callback) {\n        return this.locationInfo.get(callback);\n    }\n    apply(id, ...args) {\n        return this.get(id).apply(global, ...args);\n    }\n    remove(id) {\n        const callback = this.callbacks[id];\n        if (callback) {\n            this.callbackIds.delete(callback);\n            delete this.callbacks[id];\n        }\n    }\n}\nexports.CallbacksRegistry = CallbacksRegistry;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nif (process.type === 'browser')\n    throw new Error(`\"@electron/remote\" cannot be required in the browser process. Instead require(\"@electron/remote/main\").`);\n__exportStar(require(\"./remote\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createFunctionWithReturnValue = exports.getGlobal = exports.getCurrentWebContents = exports.getCurrentWindow = exports.getBuiltin = void 0;\nconst callbacks_registry_1 = require(\"./callbacks-registry\");\nconst type_utils_1 = require(\"../common/type-utils\");\nconst electron_1 = require(\"electron\");\nconst module_names_1 = require(\"../common/module-names\");\nconst get_electron_binding_1 = require(\"../common/get-electron-binding\");\nconst { Promise } = global;\nconst callbacksRegistry = new callbacks_registry_1.CallbacksRegistry();\nconst remoteObjectCache = new Map();\nconst finalizationRegistry = new FinalizationRegistry((id) => {\n    const ref = remoteObjectCache.get(id);\n    if (ref !== undefined && ref.deref() === undefined) {\n        remoteObjectCache.delete(id);\n        electron_1.ipcRenderer.send(\"REMOTE_BROWSER_DEREFERENCE\" /* BROWSER_DEREFERENCE */, contextId, id, 0);\n    }\n});\nconst electronIds = new WeakMap();\nconst isReturnValue = new WeakSet();\nfunction getCachedRemoteObject(id) {\n    const ref = remoteObjectCache.get(id);\n    if (ref !== undefined) {\n        const deref = ref.deref();\n        if (deref !== undefined)\n            return deref;\n    }\n}\nfunction setCachedRemoteObject(id, value) {\n    const wr = new WeakRef(value);\n    remoteObjectCache.set(id, wr);\n    finalizationRegistry.register(value, id);\n    return value;\n}\nfunction getContextId() {\n    const v8Util = get_electron_binding_1.getElectronBinding('v8_util');\n    if (v8Util) {\n        return v8Util.getHiddenValue(global, 'contextId');\n    }\n    else {\n        throw new Error('Electron >=v13.0.0-beta.6 required to support sandboxed renderers');\n    }\n}\n// An unique ID that can represent current context.\nconst contextId = process.contextId || getContextId();\n// Notify the main process when current context is going to be released.\n// Note that when the renderer process is destroyed, the message may not be\n// sent, we also listen to the \"render-view-deleted\" event in the main process\n// to guard that situation.\nprocess.on('exit', () => {\n    const command = \"REMOTE_BROWSER_CONTEXT_RELEASE\" /* BROWSER_CONTEXT_RELEASE */;\n    electron_1.ipcRenderer.send(command, contextId);\n});\nconst IS_REMOTE_PROXY = Symbol('is-remote-proxy');\n// Convert the arguments object into an array of meta data.\nfunction wrapArgs(args, visited = new Set()) {\n    const valueToMeta = (value) => {\n        // Check for circular reference.\n        if (visited.has(value)) {\n            return {\n                type: 'value',\n                value: null\n            };\n        }\n        if (value && value.constructor && value.constructor.name === 'NativeImage') {\n            return { type: 'nativeimage', value: type_utils_1.serialize(value) };\n        }\n        else if (Array.isArray(value)) {\n            visited.add(value);\n            const meta = {\n                type: 'array',\n                value: wrapArgs(value, visited)\n            };\n            visited.delete(value);\n            return meta;\n        }\n        else if (value instanceof Buffer) {\n            return {\n                type: 'buffer',\n                value\n            };\n        }\n        else if (type_utils_1.isSerializableObject(value)) {\n            return {\n                type: 'value',\n                value\n            };\n        }\n        else if (typeof value === 'object') {\n            if (type_utils_1.isPromise(value)) {\n                return {\n                    type: 'promise',\n                    then: valueToMeta(function (onFulfilled, onRejected) {\n                        value.then(onFulfilled, onRejected);\n                    })\n                };\n            }\n            else if (electronIds.has(value)) {\n                return {\n                    type: 'remote-object',\n                    id: electronIds.get(value)\n                };\n            }\n            const meta = {\n                type: 'object',\n                name: value.constructor ? value.constructor.name : '',\n                members: []\n            };\n            visited.add(value);\n            for (const prop in value) { // eslint-disable-line guard-for-in\n                meta.members.push({\n                    name: prop,\n                    value: valueToMeta(value[prop])\n                });\n            }\n            visited.delete(value);\n            return meta;\n        }\n        else if (typeof value === 'function' && isReturnValue.has(value)) {\n            return {\n                type: 'function-with-return-value',\n                value: valueToMeta(value())\n            };\n        }\n        else if (typeof value === 'function') {\n            return {\n                type: 'function',\n                id: callbacksRegistry.add(value),\n                location: callbacksRegistry.getLocation(value),\n                length: value.length\n            };\n        }\n        else {\n            return {\n                type: 'value',\n                value\n            };\n        }\n    };\n    return args.map(valueToMeta);\n}\n// Populate object's members from descriptors.\n// The |ref| will be kept referenced by |members|.\n// This matches |getObjectMemebers| in rpc-server.\nfunction setObjectMembers(ref, object, metaId, members) {\n    if (!Array.isArray(members))\n        return;\n    for (const member of members) {\n        if (Object.prototype.hasOwnProperty.call(object, member.name))\n            continue;\n        const descriptor = { enumerable: member.enumerable };\n        if (member.type === 'method') {\n            const remoteMemberFunction = function (...args) {\n                let command;\n                if (this && this.constructor === remoteMemberFunction) {\n                    command = \"REMOTE_BROWSER_MEMBER_CONSTRUCTOR\" /* BROWSER_MEMBER_CONSTRUCTOR */;\n                }\n                else {\n                    command = \"REMOTE_BROWSER_MEMBER_CALL\" /* BROWSER_MEMBER_CALL */;\n                }\n                const ret = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name, wrapArgs(args));\n                return metaToValue(ret);\n            };\n            let descriptorFunction = proxyFunctionProperties(remoteMemberFunction, metaId, member.name);\n            descriptor.get = () => {\n                descriptorFunction.ref = ref; // The member should reference its object.\n                return descriptorFunction;\n            };\n            // Enable monkey-patch the method\n            descriptor.set = (value) => {\n                descriptorFunction = value;\n                return value;\n            };\n            descriptor.configurable = true;\n        }\n        else if (member.type === 'get') {\n            descriptor.get = () => {\n                const command = \"REMOTE_BROWSER_MEMBER_GET\" /* BROWSER_MEMBER_GET */;\n                const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name);\n                return metaToValue(meta);\n            };\n            if (member.writable) {\n                descriptor.set = (value) => {\n                    const args = wrapArgs([value]);\n                    const command = \"REMOTE_BROWSER_MEMBER_SET\" /* BROWSER_MEMBER_SET */;\n                    const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name, args);\n                    if (meta != null)\n                        metaToValue(meta);\n                    return value;\n                };\n            }\n        }\n        Object.defineProperty(object, member.name, descriptor);\n    }\n}\n// Populate object's prototype from descriptor.\n// This matches |getObjectPrototype| in rpc-server.\nfunction setObjectPrototype(ref, object, metaId, descriptor) {\n    if (descriptor === null)\n        return;\n    const proto = {};\n    setObjectMembers(ref, proto, metaId, descriptor.members);\n    setObjectPrototype(ref, proto, metaId, descriptor.proto);\n    Object.setPrototypeOf(object, proto);\n}\n// Wrap function in Proxy for accessing remote properties\nfunction proxyFunctionProperties(remoteMemberFunction, metaId, name) {\n    let loaded = false;\n    // Lazily load function properties\n    const loadRemoteProperties = () => {\n        if (loaded)\n            return;\n        loaded = true;\n        const command = \"REMOTE_BROWSER_MEMBER_GET\" /* BROWSER_MEMBER_GET */;\n        const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, name);\n        setObjectMembers(remoteMemberFunction, remoteMemberFunction, meta.id, meta.members);\n    };\n    return new Proxy(remoteMemberFunction, {\n        set: (target, property, value) => {\n            if (property !== 'ref')\n                loadRemoteProperties();\n            target[property] = value;\n            return true;\n        },\n        get: (target, property) => {\n            if (property === IS_REMOTE_PROXY)\n                return true;\n            if (!Object.prototype.hasOwnProperty.call(target, property))\n                loadRemoteProperties();\n            const value = target[property];\n            if (property === 'toString' && typeof value === 'function') {\n                return value.bind(target);\n            }\n            return value;\n        },\n        ownKeys: (target) => {\n            loadRemoteProperties();\n            return Object.getOwnPropertyNames(target);\n        },\n        getOwnPropertyDescriptor: (target, property) => {\n            const descriptor = Object.getOwnPropertyDescriptor(target, property);\n            if (descriptor)\n                return descriptor;\n            loadRemoteProperties();\n            return Object.getOwnPropertyDescriptor(target, property);\n        }\n    });\n}\n// Convert meta data from browser into real value.\nfunction metaToValue(meta) {\n    if (meta.type === 'value') {\n        return meta.value;\n    }\n    else if (meta.type === 'array') {\n        return meta.members.map((member) => metaToValue(member));\n    }\n    else if (meta.type === 'nativeimage') {\n        return type_utils_1.deserialize(meta.value);\n    }\n    else if (meta.type === 'buffer') {\n        return Buffer.from(meta.value.buffer, meta.value.byteOffset, meta.value.byteLength);\n    }\n    else if (meta.type === 'promise') {\n        return Promise.resolve({ then: metaToValue(meta.then) });\n    }\n    else if (meta.type === 'error') {\n        return metaToError(meta);\n    }\n    else if (meta.type === 'exception') {\n        if (meta.value.type === 'error') {\n            throw metaToError(meta.value);\n        }\n        else {\n            throw new Error(`Unexpected value type in exception: ${meta.value.type}`);\n        }\n    }\n    else {\n        let ret;\n        if ('id' in meta) {\n            const cached = getCachedRemoteObject(meta.id);\n            if (cached !== undefined) {\n                return cached;\n            }\n        }\n        // A shadow class to represent the remote function object.\n        if (meta.type === 'function') {\n            const remoteFunction = function (...args) {\n                let command;\n                if (this && this.constructor === remoteFunction) {\n                    command = \"REMOTE_BROWSER_CONSTRUCTOR\" /* BROWSER_CONSTRUCTOR */;\n                }\n                else {\n                    command = \"REMOTE_BROWSER_FUNCTION_CALL\" /* BROWSER_FUNCTION_CALL */;\n                }\n                const obj = electron_1.ipcRenderer.sendSync(command, contextId, meta.id, wrapArgs(args));\n                return metaToValue(obj);\n            };\n            ret = remoteFunction;\n        }\n        else {\n            ret = {};\n        }\n        setObjectMembers(ret, ret, meta.id, meta.members);\n        setObjectPrototype(ret, ret, meta.id, meta.proto);\n        if (ret.constructor && ret.constructor[IS_REMOTE_PROXY]) {\n            Object.defineProperty(ret.constructor, 'name', { value: meta.name });\n        }\n        // Track delegate obj's lifetime & tell browser to clean up when object is GCed.\n        electronIds.set(ret, meta.id);\n        setCachedRemoteObject(meta.id, ret);\n        return ret;\n    }\n}\nfunction metaToError(meta) {\n    const obj = meta.value;\n    for (const { name, value } of meta.members) {\n        obj[name] = metaToValue(value);\n    }\n    return obj;\n}\nfunction handleMessage(channel, handler) {\n    electron_1.ipcRenderer.on(channel, (event, passedContextId, id, ...args) => {\n        if (event.senderId !== 0) {\n            console.error(`Message ${channel} sent by unexpected WebContents (${event.senderId})`);\n            return;\n        }\n        if (passedContextId === contextId) {\n            handler(id, ...args);\n        }\n        else {\n            // Message sent to an un-exist context, notify the error to main process.\n            electron_1.ipcRenderer.send(\"REMOTE_BROWSER_WRONG_CONTEXT_ERROR\" /* BROWSER_WRONG_CONTEXT_ERROR */, contextId, passedContextId, id);\n        }\n    });\n}\nconst enableStacks = process.argv.includes('--enable-api-filtering-logging');\nfunction getCurrentStack() {\n    const target = { stack: undefined };\n    if (enableStacks) {\n        Error.captureStackTrace(target, getCurrentStack);\n    }\n    return target.stack;\n}\n// Browser calls a callback in renderer.\nhandleMessage(\"REMOTE_RENDERER_CALLBACK\" /* RENDERER_CALLBACK */, (id, args) => {\n    callbacksRegistry.apply(id, metaToValue(args));\n});\n// A callback in browser is released.\nhandleMessage(\"REMOTE_RENDERER_RELEASE_CALLBACK\" /* RENDERER_RELEASE_CALLBACK */, (id) => {\n    callbacksRegistry.remove(id);\n});\nexports.require = (module) => {\n    const command = \"REMOTE_BROWSER_REQUIRE\" /* BROWSER_REQUIRE */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, module, getCurrentStack());\n    return metaToValue(meta);\n};\n// Alias to remote.require('electron').xxx.\nfunction getBuiltin(module) {\n    const command = \"REMOTE_BROWSER_GET_BUILTIN\" /* BROWSER_GET_BUILTIN */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, module, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getBuiltin = getBuiltin;\nfunction getCurrentWindow() {\n    const command = \"REMOTE_BROWSER_GET_CURRENT_WINDOW\" /* BROWSER_GET_CURRENT_WINDOW */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getCurrentWindow = getCurrentWindow;\n// Get current WebContents object.\nfunction getCurrentWebContents() {\n    const command = \"REMOTE_BROWSER_GET_CURRENT_WEB_CONTENTS\" /* BROWSER_GET_CURRENT_WEB_CONTENTS */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getCurrentWebContents = getCurrentWebContents;\n// Get a global object in browser.\nfunction getGlobal(name) {\n    const command = \"REMOTE_BROWSER_GET_GLOBAL\" /* BROWSER_GET_GLOBAL */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, name, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getGlobal = getGlobal;\n// Get the process object in browser.\nObject.defineProperty(exports, 'process', {\n    enumerable: true,\n    get: () => exports.getGlobal('process')\n});\n// Create a function that will return the specified value when called in browser.\nfunction createFunctionWithReturnValue(returnValue) {\n    const func = () => returnValue;\n    isReturnValue.add(func);\n    return func;\n}\nexports.createFunctionWithReturnValue = createFunctionWithReturnValue;\nconst addBuiltinProperty = (name) => {\n    Object.defineProperty(exports, name, {\n        enumerable: true,\n        get: () => exports.getBuiltin(name)\n    });\n};\nmodule_names_1.browserModuleNames\n    .forEach(addBuiltinProperty);\n","module.exports = require('../dist/src/renderer')\n","const fs = require('fs');\nconst path = require('path');\n\nconst pathFile = path.join(__dirname, 'path.txt');\n\nfunction getElectronPath () {\n  let executablePath;\n  if (fs.existsSync(pathFile)) {\n    executablePath = fs.readFileSync(pathFile, 'utf-8');\n  }\n  if (process.env.ELECTRON_OVERRIDE_DIST_PATH) {\n    return path.join(process.env.ELECTRON_OVERRIDE_DIST_PATH, executablePath || 'electron');\n  }\n  if (executablePath) {\n    return path.join(__dirname, 'dist', executablePath);\n  } else {\n    throw new Error('Electron failed to install correctly, please delete node_modules/electron and try installing again');\n  }\n}\n\nmodule.exports = getElectronPath();\n","'use strict';\n\nconst {Readable, Writable, Duplex, Transform} = require('stream');\n\nconst none = Symbol.for('object-stream.none');\nconst finalSymbol = Symbol.for('object-stream.final');\nconst manySymbol = Symbol.for('object-stream.many');\n\nconst final = value => ({[finalSymbol]: value});\nconst many = values => ({[manySymbol]: values});\n\nconst isFinal = o => o && typeof o == 'object' && finalSymbol in o;\nconst isMany = o => o && typeof o == 'object' && manySymbol in o;\n\nconst getFinalValue = o => o[finalSymbol];\nconst getManyValues = o => o[manySymbol];\n\nconst runAsyncGenerator = async (gen, stream) => {\n  for (;;) {\n    let data = gen.next();\n    if (data && typeof data.then == 'function') {\n      data = await data;\n    }\n    if (data.done) break;\n    let value = data.value;\n    if (value && typeof value.then == 'function') {\n      value = await value;\n    }\n    Chain.sanitize(value, stream);\n  }\n};\n\nconst wrapFunction = fn =>\n  new Transform({\n    writableObjectMode: true,\n    readableObjectMode: true,\n    transform(chunk, encoding, callback) {\n      try {\n        const result = fn.call(this, chunk, encoding);\n        if (result && typeof result.then == 'function') {\n          // thenable\n          result.then(\n            result => (Chain.sanitize(result, this), callback(null)),\n            error => callback(error)\n          );\n          return;\n        }\n        if (result && typeof result.next == 'function') {\n          // generator\n          runAsyncGenerator(result, this).then(\n            () => callback(null),\n            error => callback(error)\n          );\n          return;\n        }\n        Chain.sanitize(result, this);\n        callback(null);\n      } catch (error) {\n        callback(error);\n      }\n    }\n  });\n\nconst wrapArray = fns =>\n  new Transform({\n    writableObjectMode: true,\n    readableObjectMode: true,\n    transform(chunk, encoding, callback) {\n      try {\n        let value = chunk;\n        for (let i = 0; i < fns.length; ++i) {\n          const result = fns[i].call(this, value, encoding);\n          if (result === Chain.none) {\n            callback(null);\n            return;\n          }\n          if (Chain.isFinal(result)) {\n            value = Chain.getFinalValue(result);\n            break;\n          }\n          value = result;\n        }\n        Chain.sanitize(value, this);\n        callback(null);\n      } catch (error) {\n        callback(error);\n      }\n    }\n  });\n\n// is*NodeStream functions taken from https://github.com/nodejs/node/blob/master/lib/internal/streams/utils.js\nconst isReadableNodeStream = obj =>\n  obj &&\n  typeof obj.pipe === 'function' &&\n  typeof obj.on === 'function' &&\n  (!obj._writableState || (typeof obj._readableState === 'object' ? obj._readableState.readable : null) !== false) && // Duplex\n  (!obj._writableState || obj._readableState); // Writable has .pipe.\n\nconst isWritableNodeStream = obj =>\n  obj &&\n  typeof obj.write === 'function' &&\n  typeof obj.on === 'function' &&\n  (!obj._readableState || (typeof obj._writableState === 'object' ? obj._writableState.writable : null) !== false); // Duplex\n\nconst isDuplexNodeStream = obj =>\n  obj && typeof obj.pipe === 'function' && obj._readableState && typeof obj.on === 'function' && typeof obj.write === 'function';\n\nclass Chain extends Duplex {\n  constructor(fns, options) {\n    super(options || {writableObjectMode: true, readableObjectMode: true});\n\n    if (!(fns instanceof Array) || !fns.length) {\n      throw Error(\"Chain's argument should be a non-empty array.\");\n    }\n\n    this.streams = fns\n      .filter(fn => fn)\n      .map((fn, index, fns) => {\n        if (typeof fn === 'function' || fn instanceof Array) return Chain.convertToTransform(fn);\n        if (isDuplexNodeStream(fn) || (!index && isReadableNodeStream(fn)) || (index === fns.length - 1 && isWritableNodeStream(fn))) {\n          return fn;\n        }\n        throw Error('Arguments should be functions, arrays or streams.');\n      })\n      .filter(s => s);\n    this.input = this.streams[0];\n    this.output = this.streams.reduce((output, stream) => (output && output.pipe(stream)) || stream);\n\n    if (!isWritableNodeStream(this.input)) {\n      this._write = (_1, _2, callback) => callback(null);\n      this._final = callback => callback(null); // unavailable in Node 6\n      this.input.on('end', () => this.end());\n    }\n\n    if (isReadableNodeStream(this.output)) {\n      this.output.on('data', chunk => !this.push(chunk) && this.output.pause());\n      this.output.on('end', () => this.push(null));\n    } else {\n      this._read = () => {}; // nop\n      this.resume();\n      this.output.on('finish', () => this.push(null));\n    }\n\n    // connect events\n    if (!options || !options.skipEvents) {\n      this.streams.forEach(stream => stream.on('error', error => this.emit('error', error)));\n    }\n  }\n  _write(chunk, encoding, callback) {\n    let error = null;\n    try {\n      this.input.write(chunk, encoding, e => callback(e || error));\n    } catch (e) {\n      error = e;\n    }\n  }\n  _final(callback) {\n    let error = null;\n    try {\n      this.input.end(null, null, e => callback(e || error));\n    } catch (e) {\n      error = e;\n    }\n  }\n  _read() {\n    this.output.resume();\n  }\n  static make(fns, options) {\n    return new Chain(fns, options);\n  }\n  static sanitize(result, stream) {\n    if (Chain.isFinal(result)) {\n      result = Chain.getFinalValue(result);\n    } else if (Chain.isMany(result)) {\n      result = Chain.getManyValues(result);\n    }\n    if (result !== undefined && result !== null && result !== Chain.none) {\n      if (result instanceof Array) {\n        result.forEach(value => value !== undefined && value !== null && stream.push(value));\n      } else {\n        stream.push(result);\n      }\n    }\n  }\n  static convertToTransform(fn) {\n    if (typeof fn === 'function') return wrapFunction(fn);\n    if (fn instanceof Array) return fn.length ? wrapArray(fn) : null;\n    return null;\n  }\n}\n\nChain.none = none;\nChain.final = final;\nChain.isFinal = isFinal;\nChain.getFinalValue = getFinalValue;\nChain.many = many;\nChain.isMany = isMany;\nChain.getManyValues = getManyValues;\n\nChain.chain = Chain.make;\nChain.make.Constructor = Chain;\n\nmodule.exports = Chain;\n","'use strict';\n\nconst EventEmitter = require('events');\n\nconst startObject = Ctr =>\n  function () {\n    if (this.done) {\n      this.done = false;\n    } else {\n      this.stack.push(this.current, this.key);\n    }\n    this.current = new Ctr();\n    this.key = null;\n  };\n\nclass Assembler extends EventEmitter {\n  static connectTo(stream, options) {\n    return new Assembler(options).connectTo(stream);\n  }\n\n  constructor(options) {\n    super();\n    this.stack = [];\n    this.current = this.key = null;\n    this.done = true;\n    if (options) {\n      this.reviver = typeof options.reviver == 'function' && options.reviver;\n      if (this.reviver) {\n        this.stringValue = this._saveValue = this._saveValueWithReviver;\n      }\n      if (options.numberAsString) {\n        this.numberValue = this.stringValue;\n      }\n    }\n  }\n\n  connectTo(stream) {\n    stream.on('data', chunk => {\n      if (this[chunk.name]) {\n        this[chunk.name](chunk.value);\n        if (this.done) this.emit('done', this);\n      }\n    });\n    return this;\n  }\n\n  get depth() {\n    return (this.stack.length >> 1) + (this.done ? 0 : 1);\n  }\n\n  get path() {\n    const path = [];\n    for (let i = 0; i < this.stack.length; i += 2) {\n      const key = this.stack[i + 1];\n      path.push(key === null ? this.stack[i].length : key);\n    }\n    return path;\n  }\n\n  dropToLevel(level) {\n    if (level < this.depth) {\n      if (level) {\n        const index = (level - 1) << 1;\n        this.current = this.stack[index];\n        this.key = this.stack[index + 1];\n        this.stack.splice(index);\n      } else {\n        this.stack = [];\n        this.current = this.key = null;\n        this.done = true;\n      }\n    }\n    return this;\n  }\n\n  consume(chunk) {\n    this[chunk.name] && this[chunk.name](chunk.value);\n    return this;\n  }\n\n  keyValue(value) {\n    this.key = value;\n  }\n\n  //stringValue() - aliased below to _saveValue()\n\n  numberValue(value) {\n    this._saveValue(parseFloat(value));\n  }\n  nullValue() {\n    this._saveValue(null);\n  }\n  trueValue() {\n    this._saveValue(true);\n  }\n  falseValue() {\n    this._saveValue(false);\n  }\n\n  //startObject() - assigned below\n\n  endObject() {\n    if (this.stack.length) {\n      const value = this.current;\n      this.key = this.stack.pop();\n      this.current = this.stack.pop();\n      this._saveValue(value);\n    } else {\n      this.done = true;\n    }\n  }\n\n  //startArray() - assigned below\n  //endArray() - aliased below to endObject()\n\n  _saveValue(value) {\n    if (this.done) {\n      this.current = value;\n    } else {\n      if (this.current instanceof Array) {\n        this.current.push(value);\n      } else {\n        this.current[this.key] = value;\n        this.key = null;\n      }\n    }\n  }\n  _saveValueWithReviver(value) {\n    if (this.done) {\n      this.current = this.reviver('', value);\n    } else {\n      if (this.current instanceof Array) {\n        value = this.reviver('' + this.current.length, value);\n        this.current.push(value);\n        if (value === undefined) {\n          delete this.current[this.current.length - 1];\n        }\n      } else {\n        value = this.reviver(this.key, value);\n        if (value !== undefined) {\n          this.current[this.key] = value;\n        }\n        this.key = null;\n      }\n    }\n  }\n}\n\nAssembler.prototype.stringValue = Assembler.prototype._saveValue;\nAssembler.prototype.startObject = startObject(Object);\nAssembler.prototype.startArray = startObject(Array);\nAssembler.prototype.endArray = Assembler.prototype.endObject;\n\nmodule.exports = Assembler;\n","'use strict';\n\nconst Utf8Stream = require('./utils/Utf8Stream');\n\nconst patterns = {\n  value1: /^(?:[\\\"\\{\\[\\]\\-\\d]|true\\b|false\\b|null\\b|\\s{1,256})/,\n  string: /^(?:[^\\\"\\\\]{1,256}|\\\\[bfnrt\\\"\\\\\\/]|\\\\u[\\da-fA-F]{4}|\\\")/,\n  key1: /^(?:[\\\"\\}]|\\s{1,256})/,\n  colon: /^(?:\\:|\\s{1,256})/,\n  comma: /^(?:[\\,\\]\\}]|\\s{1,256})/,\n  ws: /^\\s{1,256}/,\n  numberStart: /^\\d/,\n  numberDigit: /^\\d{0,256}/,\n  numberFraction: /^[\\.eE]/,\n  numberExponent: /^[eE]/,\n  numberExpSign: /^[-+]/\n};\nconst MAX_PATTERN_SIZE = 16;\n\nlet noSticky = true;\ntry {\n  new RegExp('.', 'y');\n  noSticky = false;\n} catch (e) {\n  // suppress\n}\n\n!noSticky &&\n  Object.keys(patterns).forEach(key => {\n    let src = patterns[key].source.slice(1); // lop off ^\n    if (src.slice(0, 3) === '(?:' && src.slice(-1) === ')') {\n      src = src.slice(3, -1);\n    }\n    patterns[key] = new RegExp(src, 'y');\n  });\n\npatterns.numberFracStart = patterns.numberExpStart = patterns.numberStart;\npatterns.numberFracDigit = patterns.numberExpDigit = patterns.numberDigit;\n\nconst values = {true: true, false: false, null: null},\n  expected = {object: 'objectStop', array: 'arrayStop', '': 'done'};\n\n// long hexadecimal codes: \\uXXXX\nconst fromHex = s => String.fromCharCode(parseInt(s.slice(2), 16));\n\n// short codes: \\b \\f \\n \\r \\t \\\" \\\\ \\/\nconst codes = {b: '\\b', f: '\\f', n: '\\n', r: '\\r', t: '\\t', '\"': '\"', '\\\\': '\\\\', '/': '/'};\n\nclass Parser extends Utf8Stream {\n  static make(options) {\n    return new Parser(options);\n  }\n\n  constructor(options) {\n    super(Object.assign({}, options, {readableObjectMode: true}));\n\n    this._packKeys = this._packStrings = this._packNumbers = this._streamKeys = this._streamStrings = this._streamNumbers = true;\n    if (options) {\n      'packValues' in options && (this._packKeys = this._packStrings = this._packNumbers = options.packValues);\n      'packKeys' in options && (this._packKeys = options.packKeys);\n      'packStrings' in options && (this._packStrings = options.packStrings);\n      'packNumbers' in options && (this._packNumbers = options.packNumbers);\n      'streamValues' in options && (this._streamKeys = this._streamStrings = this._streamNumbers = options.streamValues);\n      'streamKeys' in options && (this._streamKeys = options.streamKeys);\n      'streamStrings' in options && (this._streamStrings = options.streamStrings);\n      'streamNumbers' in options && (this._streamNumbers = options.streamNumbers);\n      this._jsonStreaming = options.jsonStreaming;\n    }\n    !this._packKeys && (this._streamKeys = true);\n    !this._packStrings && (this._streamStrings = true);\n    !this._packNumbers && (this._streamNumbers = true);\n\n    this._done = false;\n    this._expect = this._jsonStreaming ? 'done' : 'value';\n    this._stack = [];\n    this._parent = '';\n    this._open_number = false;\n    this._accumulator = '';\n  }\n\n  _flush(callback) {\n    this._done = true;\n    super._flush(error => {\n      if (error) return callback(error);\n      if (this._open_number) {\n        if (this._streamNumbers) {\n          this.push({name: 'endNumber'});\n        }\n        this._open_number = false;\n        if (this._packNumbers) {\n          this.push({name: 'numberValue', value: this._accumulator});\n          this._accumulator = '';\n        }\n      }\n      callback(null);\n    });\n  }\n\n  _processBuffer(callback) {\n    let match,\n      value,\n      index = 0;\n    main: for (;;) {\n      switch (this._expect) {\n        case 'value1':\n        case 'value':\n          patterns.value1.lastIndex = index;\n          match = patterns.value1.exec(this._buffer);\n          if (!match) {\n            if (this._done || index + MAX_PATTERN_SIZE < this._buffer.length) {\n              if (index < this._buffer.length) return callback(new Error('Parser cannot parse input: expected a value'));\n              return callback(new Error('Parser has expected a value'));\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          switch (value) {\n            case '\"':\n              this._streamStrings && this.push({name: 'startString'});\n              this._expect = 'string';\n              break;\n            case '{':\n              this.push({name: 'startObject'});\n              this._stack.push(this._parent);\n              this._parent = 'object';\n              this._expect = 'key1';\n              break;\n            case '[':\n              this.push({name: 'startArray'});\n              this._stack.push(this._parent);\n              this._parent = 'array';\n              this._expect = 'value1';\n              break;\n            case ']':\n              if (this._expect !== 'value1') return callback(new Error(\"Parser cannot parse input: unexpected token ']'\"));\n              if (this._open_number) {\n                this._streamNumbers && this.push({name: 'endNumber'});\n                this._open_number = false;\n                if (this._packNumbers) {\n                  this.push({name: 'numberValue', value: this._accumulator});\n                  this._accumulator = '';\n                }\n              }\n              this.push({name: 'endArray'});\n              this._parent = this._stack.pop();\n              this._expect = expected[this._parent];\n              break;\n            case '-':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: '-'});\n              }\n              this._packNumbers && (this._accumulator = '-');\n              this._expect = 'numberStart';\n              break;\n            case '0':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: '0'});\n              }\n              this._packNumbers && (this._accumulator = '0');\n              this._expect = 'numberFraction';\n              break;\n            case '1':\n            case '2':\n            case '3':\n            case '4':\n            case '5':\n            case '6':\n            case '7':\n            case '8':\n            case '9':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: value});\n              }\n              this._packNumbers && (this._accumulator = value);\n              this._expect = 'numberDigit';\n              break;\n            case 'true':\n            case 'false':\n            case 'null':\n              if (this._buffer.length - index === value.length && !this._done) break main; // wait for more input\n              this.push({name: value + 'Value', value: values[value]});\n              this._expect = expected[this._parent];\n              break;\n            // default: // ws\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'keyVal':\n        case 'string':\n          patterns.string.lastIndex = index;\n          match = patterns.string.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length && (this._done || this._buffer.length - index >= 6))\n              return callback(new Error('Parser cannot parse input: escaped characters'));\n            if (this._done) return callback(new Error('Parser has expected a string value'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value === '\"') {\n            if (this._expect === 'keyVal') {\n              this._streamKeys && this.push({name: 'endKey'});\n              if (this._packKeys) {\n                this.push({name: 'keyValue', value: this._accumulator});\n                this._accumulator = '';\n              }\n              this._expect = 'colon';\n            } else {\n              this._streamStrings && this.push({name: 'endString'});\n              if (this._packStrings) {\n                this.push({name: 'stringValue', value: this._accumulator});\n                this._accumulator = '';\n              }\n              this._expect = expected[this._parent];\n            }\n          } else if (value.length > 1 && value.charAt(0) === '\\\\') {\n            const t = value.length == 2 ? codes[value.charAt(1)] : fromHex(value);\n            if (this._expect === 'keyVal' ? this._streamKeys : this._streamStrings) {\n              this.push({name: 'stringChunk', value: t});\n            }\n            if (this._expect === 'keyVal' ? this._packKeys : this._packStrings) {\n              this._accumulator += t;\n            }\n          } else {\n            if (this._expect === 'keyVal' ? this._streamKeys : this._streamStrings) {\n              this.push({name: 'stringChunk', value: value});\n            }\n            if (this._expect === 'keyVal' ? this._packKeys : this._packStrings) {\n              this._accumulator += value;\n            }\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'key1':\n        case 'key':\n          patterns.key1.lastIndex = index;\n          match = patterns.key1.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected an object key'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value === '\"') {\n            this._streamKeys && this.push({name: 'startKey'});\n            this._expect = 'keyVal';\n          } else if (value === '}') {\n            if (this._expect !== 'key1') return callback(new Error(\"Parser cannot parse input: unexpected token '}'\"));\n            this.push({name: 'endObject'});\n            this._parent = this._stack.pop();\n            this._expect = expected[this._parent];\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'colon':\n          patterns.colon.lastIndex = index;\n          match = patterns.colon.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error(\"Parser cannot parse input: expected ':'\"));\n            break main; // wait for more input\n          }\n          value = match[0];\n          value === ':' && (this._expect = 'value');\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'arrayStop':\n        case 'objectStop':\n          patterns.comma.lastIndex = index;\n          match = patterns.comma.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error(\"Parser cannot parse input: expected ','\"));\n            break main; // wait for more input\n          }\n          if (this._open_number) {\n            this._streamNumbers && this.push({name: 'endNumber'});\n            this._open_number = false;\n            if (this._packNumbers) {\n              this.push({name: 'numberValue', value: this._accumulator});\n              this._accumulator = '';\n            }\n          }\n          value = match[0];\n          if (value === ',') {\n            this._expect = this._expect === 'arrayStop' ? 'value' : 'key';\n          } else if (value === '}' || value === ']') {\n            if (value === '}' ? this._expect === 'arrayStop' : this._expect !== 'arrayStop') {\n              return callback(new Error(\"Parser cannot parse input: expected '\" + (this._expect === 'arrayStop' ? ']' : '}') + \"'\"));\n            }\n            this.push({name: value === '}' ? 'endObject' : 'endArray'});\n            this._parent = this._stack.pop();\n            this._expect = expected[this._parent];\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        // number chunks\n        case 'numberStart': // [0-9]\n          patterns.numberStart.lastIndex = index;\n          match = patterns.numberStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a starting digit'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = value === '0' ? 'numberFraction' : 'numberDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberDigit': // [0-9]*\n          patterns.numberDigit.lastIndex = index;\n          match = patterns.numberDigit.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a digit'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length) {\n              this._expect = 'numberFraction';\n              break;\n            }\n            if (this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'numberFraction': // [\\.eE]?\n          patterns.numberFraction.lastIndex = index;\n          match = patterns.numberFraction.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = value === '.' ? 'numberFracStart' : 'numberExpSign';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberFracStart': // [0-9]\n          patterns.numberFracStart.lastIndex = index;\n          match = patterns.numberFracStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a fractional part of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberFracDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberFracDigit': // [0-9]*\n          patterns.numberFracDigit.lastIndex = index;\n          match = patterns.numberFracDigit.exec(this._buffer);\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length) {\n              this._expect = 'numberExponent';\n              break;\n            }\n            if (this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'numberExponent': // [eE]?\n          patterns.numberExponent.lastIndex = index;\n          match = patterns.numberExponent.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            if (this._done) {\n              this._expect = 'done';\n              break;\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpSign';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpSign': // [-+]?\n          patterns.numberExpSign.lastIndex = index;\n          match = patterns.numberExpSign.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              this._expect = 'numberExpStart';\n              break;\n            }\n            if (this._done) return callback(new Error('Parser has expected an exponent value of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpStart';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpStart': // [0-9]\n          patterns.numberExpStart.lastIndex = index;\n          match = patterns.numberExpStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected an exponent part of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpDigit': // [0-9]*\n          patterns.numberExpDigit.lastIndex = index;\n          match = patterns.numberExpDigit.exec(this._buffer);\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length || this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'done':\n          patterns.ws.lastIndex = index;\n          match = patterns.ws.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              if (this._jsonStreaming) {\n                this._expect = 'value';\n                break;\n              }\n              return callback(new Error('Parser cannot parse input: unexpected characters'));\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (this._open_number) {\n            this._streamNumbers && this.push({name: 'endNumber'});\n            this._open_number = false;\n            if (this._packNumbers) {\n              this.push({name: 'numberValue', value: this._accumulator});\n              this._accumulator = '';\n            }\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n      }\n    }\n    !noSticky && (this._buffer = this._buffer.slice(index));\n    callback(null);\n  }\n}\nParser.parser = Parser.make;\nParser.make.Constructor = Parser;\n\nmodule.exports = Parser;\n","'use strict';\n\nconst StreamBase = require('./StreamBase');\nconst withParser = require('../utils/withParser');\n\nclass StreamArray extends StreamBase {\n  static make(options) {\n    return new StreamArray(options);\n  }\n\n  static withParser(options) {\n    return withParser(StreamArray.make, options);\n  }\n\n  constructor(options) {\n    super(options);\n    this._level = 1;\n    this._counter = 0;\n  }\n\n  _wait(chunk, _, callback) {\n    // first chunk should open an array\n    if (chunk.name !== 'startArray') {\n      return callback(new Error('Top-level object should be an array.'));\n    }\n    this._transform = this._filter;\n    return this._transform(chunk, _, callback);\n  }\n\n  _push(discard) {\n    if (this._assembler.current.length) {\n      if (discard) {\n        ++this._counter;\n        this._assembler.current.pop();\n      } else {\n        this.push({key: this._counter++, value: this._assembler.current.pop()});\n      }\n    }\n  }\n}\nStreamArray.streamArray = StreamArray.make;\nStreamArray.make.Constructor = StreamArray;\n\nmodule.exports = StreamArray;\n","'use strict';\n\nconst {Transform} = require('stream');\nconst Assembler = require('../Assembler');\n\nclass Counter {\n  constructor(initialDepth) {\n    this.depth = initialDepth;\n  }\n  startObject() {\n    ++this.depth;\n  }\n  endObject() {\n    --this.depth;\n  }\n  startArray() {\n    ++this.depth;\n  }\n  endArray() {\n    --this.depth;\n  }\n}\n\nclass StreamBase extends Transform {\n  constructor(options) {\n    super(Object.assign({}, options, {writableObjectMode: true, readableObjectMode: true}));\n    if (options) {\n      this.objectFilter = options.objectFilter;\n      this.includeUndecided = options.includeUndecided;\n    }\n    if (typeof this.objectFilter != 'function') {\n      this._filter = this._transform;\n    }\n    this._transform = this._wait || this._filter;\n    this._assembler = new Assembler(options);\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._push();\n      }\n    }\n    callback(null);\n  }\n\n  _filter(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      const result = this.objectFilter(this._assembler);\n      if (result) {\n        if (this._assembler.depth === this._level) {\n          this._push();\n          this._transform = this._filter;\n        }\n        this._transform = this._accept;\n        return callback(null);\n      }\n      if (result === false) {\n        this._saved_assembler = this._assembler;\n        this._assembler = new Counter(this._saved_assembler.depth);\n        this._saved_assembler.dropToLevel(this._level);\n        if (this._assembler.depth === this._level) {\n          this._assembler = this._saved_assembler;\n          this._transform = this._filter;\n        }\n        this._transform = this._reject;\n        return callback(null);\n      }\n      if (this._assembler.depth === this._level) {\n        this._push(!this.includeUndecided);\n      }\n    }\n    callback(null);\n  }\n\n  _accept(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._push();\n        this._transform = this._filter;\n      }\n    }\n    callback(null);\n  }\n\n  _reject(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._assembler = this._saved_assembler;\n        this._transform = this._filter;\n      }\n    }\n    callback(null);\n  }\n}\n\nmodule.exports = StreamBase;\n","'use strict';\n\nconst {Transform} = require('stream');\nconst {StringDecoder} = require('string_decoder');\n\nclass Utf8Stream extends Transform {\n  constructor(options) {\n    super(Object.assign({}, options, {writableObjectMode: false}));\n    this._buffer = '';\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (typeof chunk == 'string') {\n      this._transform = this._transformString;\n    } else {\n      this._stringDecoder = new StringDecoder();\n      this._transform = this._transformBuffer;\n    }\n    this._transform(chunk, encoding, callback);\n  }\n\n  _transformBuffer(chunk, _, callback) {\n    this._buffer += this._stringDecoder.write(chunk);\n    this._processBuffer(callback);\n  }\n\n  _transformString(chunk, _, callback) {\n    this._buffer += chunk.toString();\n    this._processBuffer(callback);\n  }\n\n  _processBuffer(callback) {\n    if (this._buffer) {\n      this.push(this._buffer, 'utf8');\n      this._buffer = '';\n    }\n    callback(null);\n  }\n\n  _flushInput() {\n    // meant to be called from _flush()\n    if (this._stringDecoder) {\n      this._buffer += this._stringDecoder.end();\n    }\n  }\n\n  _flush(callback) {\n    this._flushInput();\n    this._processBuffer(callback);\n  }\n}\n\nmodule.exports = Utf8Stream;\n","'use strict';\n\nconst Chain = require('stream-chain');\n\nconst Parser = require('../Parser');\n\nconst withParser = (fn, options) =>\n  new Chain([new Parser(options), fn(options)], Object.assign({}, options, {writableObjectMode: false, readableObjectMode: true}));\n\nmodule.exports = withParser;\n","module.exports = require(\"child_process\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"process\");","module.exports = require(\"stream\");","module.exports = require(\"string_decoder\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Vec {\n    static isBlank(arr) { return arr == null || arr.length == 0; }\n    static notBlank(arr) { return arr != null && arr.length > 0; }\n    static safeArray(arr) { return arr == null ? [] : arr; }\n    static len(arr) { return arr == null ? 0 : arr.length; }\n    static arrayLength(arr) { return arr == null ? 0 : arr.length; }\n    static anyTrue(arr) {\n        if (arr == null)\n            return false;\n        for (let v of arr)\n            if (v)\n                return true;\n        return false;\n    }\n    static allTrue(arr) {\n        if (arr == null)\n            return true;\n        for (let v of arr)\n            if (!v)\n                return false;\n        return true;\n    }\n    static anyFalse(arr) {\n        if (arr == null)\n            return false;\n        for (let v of arr)\n            if (!v)\n                return true;\n        return false;\n    }\n    static allFalse(arr) {\n        if (arr == null)\n            return true;\n        for (let v of arr)\n            if (v)\n                return false;\n        return true;\n    }\n    static iterAnyTrue(arr, callback) {\n        for (let v of arr)\n            if (callback(v))\n                return true;\n        return false;\n    }\n    static iterAllTrue(arr, callback) {\n        for (let v of arr)\n            if (!callback(v))\n                return false;\n        return true;\n    }\n    static iterAnyFalse(arr, callback) {\n        for (let v of arr)\n            if (!callback(v))\n                return true;\n        return false;\n    }\n    static iterAllFalse(arr, callback) {\n        for (let v of arr)\n            if (callback(v))\n                return false;\n        return true;\n    }\n    static swap(arr, idx1, idx2) {\n        let v = arr[idx1];\n        arr[idx1] = arr[idx2];\n        arr[idx2] = v;\n    }\n    static duplicate(arr) {\n        return arr == null ? [] : arr.slice(0);\n    }\n    static append(arr, item) {\n        if (arr == null || arr.length == 0)\n            return [item];\n        arr = arr.slice(0);\n        arr.push(item);\n        return arr;\n    }\n    static prepend(arr, item) {\n        if (arr == null || arr.length == 0)\n            return [item];\n        arr = arr.slice(0);\n        arr.unshift(item);\n        return arr;\n    }\n    static concat(arr1, arr2) {\n        if (arr1 == null && arr2 == null)\n            return [];\n        if (arr1 == null)\n            return arr2.slice(0);\n        if (arr2 == null)\n            return arr1.slice(0);\n        return arr1.concat(arr2);\n    }\n    static remove(arr, idx) {\n        arr = arr.slice(0);\n        arr.splice(idx, 1);\n        return arr;\n    }\n    static flatten(mtx) {\n        let ret = [];\n        for (let vec of mtx)\n            ret.push(...vec);\n        return ret;\n    }\n    static transpose(mtx) {\n        let sz1 = mtx.length, sz2 = mtx[0].length;\n        let ret = Vec.anyArray(null, sz2);\n        for (let j = 0; j < sz2; j++) {\n            ret[j] = Vec.anyArray(null, sz1);\n            for (let i = 0; i < sz1; i++)\n                ret[j][i] = mtx[i][j];\n        }\n        return ret;\n    }\n    static equals(arr1, arr2) {\n        if (arr1 == null && arr2 == null)\n            return true;\n        if (arr1 == null || arr2 == null)\n            return false;\n        if (arr1.length != arr2.length)\n            return false;\n        for (let n = 0; n < arr1.length; n++)\n            if (arr1[n] != arr2[n])\n                return false;\n        return true;\n    }\n    static equivalent(arr1, arr2) {\n        const len1 = arr1 == null ? 0 : arr1.length, len2 = arr2 == null ? 0 : arr2.length;\n        if (len1 != len2)\n            return false;\n        for (let n = 0; n < len1; n++)\n            if (arr1[n] != arr2[n])\n                return false;\n        return true;\n    }\n    static compareTo(arr1, arr2) {\n        const sz = Math.max(arr1.length, arr2.length);\n        for (let n = 0; n < sz; n++) {\n            if (arr1[n] < arr2[n])\n                return -1;\n            if (arr1[n] > arr2[n])\n                return 1;\n        }\n        return 0;\n    }\n    static booleanArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static numberArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static stringArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static anyArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static genericArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static genericBlankArrays(sz) {\n        let arr = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            arr[n] = [];\n        return arr;\n    }\n    static funcArray(sz, func) {\n        let arr = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            arr[n] = func(n);\n        return arr;\n    }\n    static first(arr) { return arr == null || arr.length == 0 ? null : arr[0]; }\n    static last(arr) { return arr == null || arr.length == 0 ? null : arr[arr.length - 1]; }\n    static min(arr) {\n        if (arr == null || arr.length == 0)\n            return Number.MAX_VALUE;\n        let v = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            v = Math.min(v, arr[n]);\n        return v;\n    }\n    static max(arr) {\n        if (arr == null || arr.length == 0)\n            return Number.MIN_VALUE;\n        let v = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            v = Math.max(v, arr[n]);\n        return v;\n    }\n    static idxMin(arr) {\n        if (arr == null || arr.length == 0)\n            return -1;\n        let idx = 0;\n        for (let n = 1; n < arr.length; n++)\n            if (arr[n] < arr[idx])\n                idx = n;\n        return idx;\n    }\n    static idxMax(arr) {\n        if (arr == null || arr.length == 0)\n            return -1;\n        let idx = 0;\n        for (let n = 1; n < arr.length; n++)\n            if (arr[n] > arr[idx])\n                idx = n;\n        return idx;\n    }\n    static range(arr) {\n        if (arr == null || arr.length == 0)\n            return 0;\n        let lo = arr[0], hi = arr[0];\n        for (let n = 1; n < arr.length; n++) {\n            if (arr[n] < lo)\n                lo = arr[n];\n            if (arr[n] > hi)\n                hi = arr[n];\n        }\n        return hi - lo;\n    }\n    static reverse(arr) {\n        let ret = [];\n        for (let n = arr.length - 1; n >= 0; n--)\n            ret.push(arr[n]);\n        return ret;\n    }\n    static identity0(sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n;\n        return ret;\n    }\n    static identity1(sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n + 1;\n        return ret;\n    }\n    static identityN(start, sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n + start;\n        return ret;\n    }\n    static notMask(mask) {\n        let ret = new Array(mask.length);\n        for (let n = mask.length - 1; n >= 0; n--)\n            ret[n] = !mask[n];\n        return ret;\n    }\n    static idxGet(arr, idx) {\n        let ret = [];\n        for (let n = 0; n < idx.length; n++)\n            ret.push(arr[idx[n]]);\n        return ret;\n    }\n    static maskCount(mask) {\n        if (!mask)\n            return 0;\n        let c = 0;\n        for (let n = mask.length - 1; n >= 0; n--)\n            if (mask[n])\n                c++;\n        return c;\n    }\n    static maskIdx(mask) {\n        let idx = [];\n        for (let n = 0; n < mask.length; n++)\n            if (mask[n])\n                idx.push(n);\n        return idx;\n    }\n    static idxMask(idx, sz) {\n        let mask = Vec.booleanArray(false, sz);\n        for (let n of idx)\n            mask[n] = true;\n        return mask;\n    }\n    static maskMap(mask) {\n        let ret = [];\n        for (let n = 0, pos = 0; n < mask.length; n++)\n            ret.push(mask[n] ? pos++ : -1);\n        return ret;\n    }\n    static maskGet(arr, mask) {\n        let ret = [];\n        for (let n = 0, p = 0; n < arr.length; n++)\n            if (mask[n])\n                ret.push(arr[n]);\n        return ret;\n    }\n    static maskEqual(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] == arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] == val);\n        }\n        return ret;\n    }\n    static sum(arr) {\n        if (arr == null || arr.length == 0)\n            return 0;\n        let t = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            t += arr[n];\n        return t;\n    }\n    static add(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] + arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] + val);\n        }\n        return ret;\n    }\n    static sub(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] - arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] - val);\n        }\n        return ret;\n    }\n    static mul(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] * arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] * val);\n        }\n        return ret;\n    }\n    static neg(arr) {\n        let ret = arr.slice(0);\n        for (let n = ret.length - 1; n >= 0; n--)\n            ret[n] *= -1;\n        return ret;\n    }\n    static setTo(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] = val; }\n    static addTo(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] += val; }\n    static mulBy(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] *= val; }\n    static addToArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] += val[n]; }\n    static subFromArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] -= val[n]; }\n    static mulByArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] *= val[n]; }\n    static divByArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] /= val[n]; }\n    static idxSort(arr) {\n        let idx = new Array(arr.length);\n        for (let n = 0; n < arr.length; n++)\n            idx[n] = n;\n        idx.sort((a, b) => arr[a] < arr[b] ? -1 : arr[a] > arr[b] ? 1 : 0);\n        return idx;\n    }\n    static sort(arr) {\n        arr.sort((v1, v2) => v1 - v2);\n    }\n    static sorted(arr) {\n        arr = arr.slice(0);\n        this.sort(arr);\n        return arr;\n    }\n    static sortedUnique(arr) {\n        if (arr == null || arr.length == 0)\n            return [];\n        let unique = Vec.uniqueUnstable(arr);\n        if (typeof arr[0] == 'number')\n            this.sort(unique);\n        else\n            unique.sort();\n        return unique;\n    }\n    static uniqueUnstable(arr) {\n        return Array.from(new Set(arr));\n    }\n    static uniqueStable(arr) {\n        let set = new Set(arr), ret = [];\n        for (let v of arr)\n            if (set.has(v)) {\n                ret.push(v);\n                set.delete(v);\n            }\n        return ret;\n    }\n    static maskUnique(arr) {\n        let set = new Set(arr), ret = this.booleanArray(false, arr.length);\n        for (let n = 0; n < arr.length; n++)\n            if (set.has(arr[n])) {\n                ret[n] = true;\n                set.delete(arr[n]);\n            }\n        return ret;\n    }\n    static idxUnique(arr) {\n        let set = new Set(arr), ret = [];\n        for (let n = 0; n < arr.length; n++)\n            if (set.has(arr[n])) {\n                ret.push(n);\n                set.delete(arr[n]);\n            }\n        return ret;\n    }\n    static exclude(arr, excl) {\n        const sz = Vec.len(arr);\n        if (sz == 0)\n            return [];\n        let mask = new Array(sz);\n        let count = 0;\n        for (let n = 0; n < arr.length; n++) {\n            mask[n] = excl.indexOf(arr[n]) < 0;\n            if (mask[n])\n                count++;\n        }\n        if (count == sz)\n            return arr;\n        return Vec.maskGet(arr, mask);\n    }\n}\nexport class Permutation {\n    static parityPerms(idx) {\n        let v = Vec.booleanArray(false, idx.length);\n        let p = 0;\n        for (let i = idx.length - 1; i >= 0; i--) {\n            if (v[i])\n                p++;\n            else {\n                let j = i;\n                do {\n                    j = idx[j];\n                    v[j] = true;\n                } while (j != i);\n            }\n        }\n        return p;\n    }\n    static parityIdentity(idx) {\n        return this.parityPerms(idx) & 1;\n    }\n    static parityOrder(src) {\n        if (src.length <= 1)\n            return 0;\n        else if (src.length == 2)\n            return src[0] < src[1] ? 0 : 1;\n        else if (src.length == 3) {\n            let p = 1;\n            if (src[0] < src[1])\n                p++;\n            if (src[0] < src[2])\n                p++;\n            if (src[1] < src[2])\n                p++;\n            return p & 1;\n        }\n        else if (src.length == 4) {\n            let p = 0;\n            if (src[0] < src[1])\n                p++;\n            if (src[0] < src[2])\n                p++;\n            if (src[0] < src[3])\n                p++;\n            if (src[1] < src[2])\n                p++;\n            if (src[1] < src[3])\n                p++;\n            if (src[2] < src[3])\n                p++;\n            return p & 1;\n        }\n        let idx = [], sorted = src.slice(0);\n        sorted.sort();\n        for (let n = 0; n < src.length; n++)\n            idx.push(sorted.indexOf(src[n]));\n        return this.parityIdentity(idx);\n    }\n    static smallPermutation(sz) {\n        if (sz == 1)\n            return this.PERM1;\n        else if (sz == 2)\n            return this.PERM2;\n        else if (sz == 3)\n            return this.PERM3;\n        else if (sz == 4)\n            return this.PERM4;\n        else\n            return null;\n    }\n    static allPermutations(sz) {\n        if (sz <= this.SMALL_PERMS)\n            return this.smallPermutation(sz);\n        while (this.PERM_CACHE.length < this.MAX_CACHE - this.SMALL_PERMS)\n            this.PERM_CACHE.push(null);\n        if (sz < this.MAX_CACHE && this.PERM_CACHE[sz - this.SMALL_PERMS] != null)\n            return this.PERM_CACHE[sz - this.SMALL_PERMS];\n        let nperms = 1;\n        for (let n = 2; n <= sz; n++)\n            nperms *= n;\n        let perms = [];\n        let idx = Vec.identity0(sz);\n        perms.push(idx.slice(0));\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n < nperms; n++) {\n            nonunique: while (idx[0] < sz) {\n                idx[sz - 1]++;\n                for (let i = sz - 1; i > 0; i--) {\n                    if (idx[i] < sz)\n                        break;\n                    idx[i] = 0;\n                    idx[i - 1]++;\n                }\n                Vec.setTo(mask, false);\n                for (let i of idx) {\n                    if (mask[i])\n                        continue nonunique;\n                    mask[i] = true;\n                }\n                perms[n] = idx.slice(0);\n                break;\n            }\n        }\n        if (sz < this.MAX_CACHE)\n            this.PERM_CACHE[sz - this.SMALL_PERMS] = perms;\n        return perms;\n    }\n}\nPermutation.PERM1 = [[0]];\nPermutation.PERM2 = [[0, 1], [1, 0]];\nPermutation.PERM3 = [[0, 1, 2], [0, 2, 1], [1, 0, 2], [1, 2, 0], [2, 0, 1], [2, 1, 0]];\nPermutation.PERM4 = [\n    [0, 1, 2, 3], [0, 1, 3, 2], [0, 2, 1, 3], [0, 2, 3, 1], [0, 3, 1, 2], [0, 3, 2, 1],\n    [1, 0, 2, 3], [1, 0, 3, 2], [1, 2, 0, 3], [1, 2, 3, 0], [1, 3, 0, 2], [1, 3, 2, 0],\n    [2, 0, 1, 3], [2, 0, 3, 1], [2, 1, 0, 3], [2, 1, 3, 0], [2, 3, 0, 1], [2, 3, 1, 0],\n    [3, 0, 1, 2], [3, 0, 2, 1], [3, 1, 0, 2], [3, 1, 2, 0], [3, 2, 0, 1], [3, 2, 1, 0]\n];\nPermutation.SMALL_PERMS = 4;\nPermutation.MAX_CACHE = 8;\nPermutation.PERM_CACHE = [];\n//# sourceMappingURL=Vec.js.map","export class Chemistry {\n}\nChemistry.ELEMENTS = [\n    null,\n    'H', 'He',\n    'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Ne',\n    'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'Ar',\n    'K', 'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr',\n    'Rb', 'Sr', 'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn', 'Sb', 'Te', 'I', 'Xe',\n    'Cs', 'Ba',\n    'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb',\n    'Lu', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg', 'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn',\n    'Fr', 'Ra',\n    'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No',\n    'Lr', 'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds', 'Rg', 'Cn'\n];\nChemistry.ELEMENT_GROUPS = [\n    0,\n    1, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_ROWS = [\n    0,\n    1, 1,\n    2, 2, 2, 2, 2, 2, 2, 2,\n    3, 3, 3, 3, 3, 3, 3, 3,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n    6, 6,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    7, 7,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7\n];\nChemistry.ELEMENT_BLOCKS = [\n    0,\n    1, 2,\n    1, 1, 2, 2, 2, 2, 2, 2,\n    1, 1, 2, 2, 2, 2, 2, 2,\n    1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3\n];\nChemistry.ELEMENT_VALENCE = [\n    0,\n    1, 2,\n    1, 2, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 2,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_BONDING = [\n    0,\n    1, 0,\n    1, 2, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 2,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_SHELL = [\n    0,\n    2, 2,\n    8, 8, 8, 8, 8, 8, 8, 8,\n    8, 8, 8, 8, 8, 8, 8, 8,\n    8, 8, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 8, 8, 8, 8, 8, 8,\n    8, 8, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 8, 8, 8, 8, 8, 8,\n    8, 8,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    8, 8,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18\n];\nChemistry.NATURAL_ATOMIC_WEIGHTS = [\n    0, 1.00794, 4.002602, 6.941, 9.012182, 10.811, 12.0107, 14.0067, 15.9994, 18.9984032, 20.1797,\n    22.989770, 24.3050, 26.981538, 28.0855, 30.973761, 32.065, 35.453, 39.948, 39.0983, 40.078,\n    44.955910, 47.867, 50.9415, 51.9961, 54.938049, 55.845, 58.933200, 58.6934, 63.546, 65.409,\n    69.723, 72.64, 74.92160, 78.96, 79.904, 83.798, 85.4678, 87.62, 88.90585, 91.224, 92.90638,\n    95.94, 98, 101.07, 102.90550, 106.42, 107.8682, 112.411, 114.818, 118.710, 121.760, 127.60,\n    126.90447, 131.293, 132.90545, 137.327, 138.9055, 140.116, 140.90765, 144.24, 145, 150.36,\n    151.964, 157.25, 158.92534, 162.500, 164.93032, 167.259, 168.93421, 173.04, 174.967, 178.49,\n    180.9479, 183.84, 186.207, 190.23, 192.217, 195.078, 196.96655, 200.59, 204.3833, 207.2, 208.98038,\n    209, 210, 222, 223, 226, 227, 230.0331266, 231.03588, 233.039628, 237, 244, 243, 247, 247, 251, 252, 257,\n    258, 259, 262, 261, 262, 266, 264, 277, 268, 271, 272, 285\n];\nChemistry.ELEMENT_H = 1;\nChemistry.ELEMENT_He = 2;\nChemistry.ELEMENT_Li = 3;\nChemistry.ELEMENT_Be = 4;\nChemistry.ELEMENT_B = 5;\nChemistry.ELEMENT_C = 6;\nChemistry.ELEMENT_N = 7;\nChemistry.ELEMENT_O = 8;\nChemistry.ELEMENT_F = 9;\nChemistry.ELEMENT_Ne = 10;\nChemistry.ELEMENT_Na = 11;\nChemistry.ELEMENT_Mg = 12;\nChemistry.ELEMENT_Al = 13;\nChemistry.ELEMENT_Si = 14;\nChemistry.ELEMENT_P = 15;\nChemistry.ELEMENT_S = 16;\nChemistry.ELEMENT_Cl = 17;\nChemistry.ELEMENT_Ar = 18;\nChemistry.ELEMENT_K = 19;\nChemistry.ELEMENT_Ca = 20;\nChemistry.ELEMENT_Sc = 21;\nChemistry.ELEMENT_Ti = 22;\nChemistry.ELEMENT_V = 23;\nChemistry.ELEMENT_Cr = 24;\nChemistry.ELEMENT_Mn = 25;\nChemistry.ELEMENT_Fe = 26;\nChemistry.ELEMENT_Co = 27;\nChemistry.ELEMENT_Ni = 28;\nChemistry.ELEMENT_Cu = 29;\nChemistry.ELEMENT_Zn = 30;\nChemistry.ELEMENT_Ga = 31;\nChemistry.ELEMENT_Ge = 32;\nChemistry.ELEMENT_As = 33;\nChemistry.ELEMENT_Se = 34;\nChemistry.ELEMENT_Br = 35;\nChemistry.ELEMENT_Kr = 36;\nChemistry.ELEMENT_Rb = 37;\nChemistry.ELEMENT_Sr = 38;\nChemistry.ELEMENT_Y = 39;\nChemistry.ELEMENT_Zr = 40;\nChemistry.ELEMENT_Nb = 41;\nChemistry.ELEMENT_Mo = 42;\nChemistry.ELEMENT_Tc = 43;\nChemistry.ELEMENT_Ru = 44;\nChemistry.ELEMENT_Rh = 45;\nChemistry.ELEMENT_Pd = 46;\nChemistry.ELEMENT_Ag = 47;\nChemistry.ELEMENT_Cd = 48;\nChemistry.ELEMENT_In = 49;\nChemistry.ELEMENT_Sn = 50;\nChemistry.ELEMENT_Sb = 51;\nChemistry.ELEMENT_Te = 52;\nChemistry.ELEMENT_I = 53;\nChemistry.ELEMENT_Xe = 54;\nChemistry.ELEMENT_Cs = 55;\nChemistry.ELEMENT_Ba = 56;\nChemistry.ELEMENT_La = 57;\nChemistry.ELEMENT_Ce = 58;\nChemistry.ELEMENT_Pr = 59;\nChemistry.ELEMENT_Nd = 60;\nChemistry.ELEMENT_Pm = 61;\nChemistry.ELEMENT_Sm = 62;\nChemistry.ELEMENT_Eu = 63;\nChemistry.ELEMENT_Gd = 64;\nChemistry.ELEMENT_Tb = 65;\nChemistry.ELEMENT_Dy = 66;\nChemistry.ELEMENT_Ho = 67;\nChemistry.ELEMENT_Er = 68;\nChemistry.ELEMENT_Tm = 69;\nChemistry.ELEMENT_Yb = 70;\nChemistry.ELEMENT_Lu = 71;\nChemistry.ELEMENT_Hf = 72;\nChemistry.ELEMENT_Ta = 73;\nChemistry.ELEMENT_W = 74;\nChemistry.ELEMENT_Re = 75;\nChemistry.ELEMENT_Os = 76;\nChemistry.ELEMENT_Ir = 77;\nChemistry.ELEMENT_Pt = 78;\nChemistry.ELEMENT_Au = 79;\nChemistry.ELEMENT_Hg = 80;\nChemistry.ELEMENT_Tl = 81;\nChemistry.ELEMENT_Pb = 82;\nChemistry.ELEMENT_Bi = 83;\nChemistry.ELEMENT_Po = 84;\nChemistry.ELEMENT_At = 85;\nChemistry.ELEMENT_Rn = 86;\nChemistry.ELEMENT_Fr = 87;\nChemistry.ELEMENT_Ra = 88;\nChemistry.ELEMENT_Ac = 89;\nChemistry.ELEMENT_Th = 90;\nChemistry.ELEMENT_Pa = 91;\nChemistry.ELEMENT_U = 92;\nChemistry.ELEMENT_Np = 93;\nChemistry.ELEMENT_Pu = 94;\nChemistry.ELEMENT_Am = 95;\nChemistry.ELEMENT_Cm = 96;\nChemistry.ELEMENT_Bk = 97;\nChemistry.ELEMENT_Cf = 98;\nChemistry.ELEMENT_Es = 99;\nChemistry.ELEMENT_Fm = 100;\nChemistry.ELEMENT_Md = 101;\nChemistry.ELEMENT_No = 102;\nChemistry.ELEMENT_Lr = 103;\nChemistry.ELEMENT_Rf = 104;\nChemistry.ELEMENT_Db = 105;\nChemistry.ELEMENT_Sg = 106;\nChemistry.ELEMENT_Bh = 107;\nChemistry.ELEMENT_Hs = 108;\nChemistry.ELEMENT_Mt = 109;\nChemistry.ELEMENT_Ds = 110;\nChemistry.ELEMENT_Rg = 111;\nChemistry.ELEMENT_Cn = 112;\n//# sourceMappingURL=Chemistry.js.map","import { Vec } from './Vec';\nexport class Matrix {\n    constructor(m, n, s = 0) {\n        this.m = m;\n        this.n = n;\n        if (m == 0)\n            return;\n        this.A = new Array(m);\n        for (let i = 0; i < m; i++)\n            this.A[i] = Vec.numberArray(s, n);\n    }\n    static fromArray(A) {\n        let mtx = new Matrix(0, 0);\n        mtx.A = A;\n        mtx.m = A.length;\n        mtx.n = A[0].length;\n        return mtx;\n    }\n    clone() {\n        const { A, m, n } = this;\n        let mtx = new Matrix(m, n);\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                mtx.A[i][j] = A[i][j];\n        return mtx;\n    }\n    get numRows() { return this.m; }\n    get numCols() { return this.n; }\n    get(i, j) { return this.A[i][j]; }\n    set(i, j, v) { this.A[i][j] = v; }\n    transpose() {\n        const { A, m, n } = this;\n        let X = new Matrix(n, m);\n        const C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[j][i] = A[i][j];\n        return X;\n    }\n    norm1() {\n        const { A, m, n } = this;\n        let f = 0;\n        for (let j = 0; j < n; j++) {\n            let s = 0;\n            for (let i = 0; i < m; i++)\n                s += Math.abs(A[i][j]);\n            f = Math.max(f, s);\n        }\n        return f;\n    }\n    normInf() {\n        const { A, m, n } = this;\n        let f = 0;\n        for (let i = 0; i < m; i++) {\n            let s = 0;\n            for (let j = 0; j < n; j++)\n                s += Math.abs(A[i][j]);\n            f = Math.max(f, s);\n        }\n        return f;\n    }\n    uminus() {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = -A[i][j];\n        return X;\n    }\n    plus(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] + B.A[i][j];\n        return X;\n    }\n    plusEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] + B.A[i][j];\n        return this;\n    }\n    minus(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] - B.A[i][j];\n        return X;\n    }\n    minusEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] - B.A[i][j];\n        return this;\n    }\n    arrayTimes(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] * B.A[i][j];\n        return X;\n    }\n    arrayTimesEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] * B.A[i][j];\n        return this;\n    }\n    arrayRightDivide(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] / B.A[i][j];\n        return X;\n    }\n    arrayRightDivideEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] / B.A[i][j];\n        return this;\n    }\n    arrayLeftDivide(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = B.A[i][j] / A[i][j];\n        return X;\n    }\n    arrayLeftDivideEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = B.A[i][j] / A[i][j];\n        return this;\n    }\n    scalarTimes(s) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = s * A[i][j];\n        return X;\n    }\n    scalarTimesEquals(s) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = s * A[i][j];\n        return this;\n    }\n    times(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, B.n);\n        let C = X.A, Bcolj = new Array(n);\n        for (let j = 0; j < B.n; j++) {\n            for (let k = 0; k < n; k++)\n                Bcolj[k] = B.A[k][j];\n            for (let i = 0; i < m; i++) {\n                let Arowi = A[i];\n                let s = 0;\n                for (let k = 0; k < n; k++)\n                    s += Arowi[k] * Bcolj[k];\n                C[i][j] = s;\n            }\n        }\n        return X;\n    }\n    rank() {\n        return new SingularValueDecomposition(this).rank();\n    }\n    cond() {\n        return new SingularValueDecomposition(this).cond();\n    }\n    trace() {\n        const { A, m, n } = this;\n        let t = 0;\n        for (let i = 0; i < Math.min(m, n); i++) {\n            t += A[i][i];\n        }\n        return t;\n    }\n    static identity(m, n) {\n        let mtx = new Matrix(m, n);\n        let A = mtx.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = (i == j ? 1.0 : 0.0);\n        return mtx;\n    }\n    toString() {\n        let lines = ['['];\n        for (let row of this.A)\n            lines.push(JSON.stringify(row));\n        lines.push(']');\n        return lines.join('\\n');\n    }\n}\nexport class SingularValueDecomposition {\n    constructor(mtx) {\n        let A = mtx.A;\n        let m = this.m = mtx.m;\n        let n = this.n = mtx.n;\n        let nu = Math.min(m, n);\n        let s = this.s = new Array(Math.min(m + 1, n));\n        let U = this.U = new Array(m);\n        let V = this.V = new Array(n);\n        for (let i = 0; i < m; i++)\n            U[i] = Vec.numberArray(0, nu);\n        for (let j = 0; j < n; j++)\n            V[j] = Vec.numberArray(0, n);\n        let e = new Array(n);\n        let work = new Array(m);\n        let wantu = true, wantv = true;\n        let nct = Math.min(m - 1, n);\n        let nrt = Math.max(0, Math.min(n - 2, m));\n        for (let k = 0; k < Math.max(nct, nrt); k++) {\n            if (k < nct) {\n                s[k] = 0;\n                for (let i = k; i < m; i++)\n                    s[k] = SingularValueDecomposition.hypot(s[k], A[i][k]);\n                if (s[k] != 0.0) {\n                    if (A[k][k] < 0.0)\n                        s[k] = -s[k];\n                    for (let i = k; i < m; i++)\n                        A[i][k] /= s[k];\n                    A[k][k] += 1.0;\n                }\n                s[k] = -s[k];\n            }\n            for (let j = k + 1; j < n; j++) {\n                if ((k < nct) && (s[k] != 0.0)) {\n                    let t = 0;\n                    for (let i = k; i < m; i++)\n                        t += A[i][k] * A[i][j];\n                    t = -t / A[k][k];\n                    for (let i = k; i < m; i++)\n                        A[i][j] += t * A[i][k];\n                }\n                e[j] = A[k][j];\n            }\n            if (wantu && (k < nct)) {\n                for (let i = k; i < m; i++)\n                    U[i][k] = A[i][k];\n            }\n            if (k < nrt) {\n                e[k] = 0;\n                for (let i = k + 1; i < n; i++)\n                    e[k] = SingularValueDecomposition.hypot(e[k], e[i]);\n                if (e[k] != 0.0) {\n                    if (e[k + 1] < 0.0)\n                        e[k] = -e[k];\n                    for (let i = k + 1; i < n; i++)\n                        e[i] /= e[k];\n                    e[k + 1] += 1.0;\n                }\n                e[k] = -e[k];\n                if ((k + 1 < m) && (e[k] != 0.0)) {\n                    for (let i = k + 1; i < m; i++)\n                        work[i] = 0.0;\n                    for (let j = k + 1; j < n; j++)\n                        for (let i = k + 1; i < m; i++)\n                            work[i] += e[j] * A[i][j];\n                    for (let j = k + 1; j < n; j++) {\n                        let t = -e[j] / e[k + 1];\n                        for (let i = k + 1; i < m; i++)\n                            A[i][j] += t * work[i];\n                    }\n                }\n                if (wantv) {\n                    for (let i = k + 1; i < n; i++)\n                        V[i][k] = e[i];\n                }\n            }\n        }\n        let p = Math.min(n, m + 1);\n        if (nct < n)\n            s[nct] = A[nct][nct];\n        if (m < p)\n            s[p - 1] = 0.0;\n        if (nrt + 1 < p)\n            e[nrt] = A[nrt][p - 1];\n        e[p - 1] = 0.0;\n        if (wantu) {\n            for (let j = nct; j < nu; j++) {\n                for (let i = 0; i < m; i++)\n                    U[i][j] = 0.0;\n                U[j][j] = 1.0;\n            }\n            for (let k = nct - 1; k >= 0; k--) {\n                if (s[k] != 0.0) {\n                    for (let j = k + 1; j < nu; j++) {\n                        let t = 0;\n                        for (let i = k; i < m; i++)\n                            t += U[i][k] * U[i][j];\n                        t = -t / U[k][k];\n                        for (let i = k; i < m; i++)\n                            U[i][j] += t * U[i][k];\n                    }\n                    for (let i = k; i < m; i++)\n                        U[i][k] = -U[i][k];\n                    U[k][k] = 1.0 + U[k][k];\n                    for (let i = 0; i < k - 1; i++)\n                        U[i][k] = 0.0;\n                }\n                else {\n                    for (let i = 0; i < m; i++)\n                        U[i][k] = 0.0;\n                    U[k][k] = 1.0;\n                }\n            }\n        }\n        if (wantv) {\n            for (let k = n - 1; k >= 0; k--) {\n                if ((k < nrt) && (e[k] != 0.0)) {\n                    for (let j = k + 1; j < nu; j++) {\n                        let t = 0;\n                        for (let i = k + 1; i < n; i++)\n                            t += V[i][k] * V[i][j];\n                        t = -t / V[k + 1][k];\n                        for (let i = k + 1; i < n; i++)\n                            V[i][j] += t * V[i][k];\n                    }\n                }\n                for (let i = 0; i < n; i++)\n                    V[i][k] = 0.0;\n                V[k][k] = 1.0;\n            }\n        }\n        let pp = p - 1;\n        let iter = 0;\n        let eps = Math.pow(2.0, -52.0);\n        let tiny = Math.pow(2.0, -966.0);\n        while (p > 0) {\n            let k, kase;\n            for (k = p - 2; k >= -1; k--) {\n                if (k == -1)\n                    break;\n                if (Math.abs(e[k]) <= tiny + eps * (Math.abs(s[k]) + Math.abs(s[k + 1]))) {\n                    e[k] = 0.0;\n                    break;\n                }\n            }\n            if (k == p - 2) {\n                kase = 4;\n            }\n            else {\n                let ks;\n                for (ks = p - 1; ks >= k; ks--) {\n                    if (ks == k)\n                        break;\n                    let t = (ks != p ? Math.abs(e[ks]) : 0.) + (ks != k + 1 ? Math.abs(e[ks - 1]) : 0.);\n                    if (Math.abs(s[ks]) <= tiny + eps * t) {\n                        s[ks] = 0.0;\n                        break;\n                    }\n                }\n                if (ks == k)\n                    kase = 3;\n                else if (ks == p - 1)\n                    kase = 1;\n                else {\n                    kase = 2;\n                    k = ks;\n                }\n            }\n            k++;\n            if (kase == 1) {\n                let f = e[p - 2];\n                e[p - 2] = 0.0;\n                for (let j = p - 2; j >= k; j--) {\n                    let t = SingularValueDecomposition.hypot(s[j], f);\n                    let cs = s[j] / t;\n                    let sn = f / t;\n                    s[j] = t;\n                    if (j != k) {\n                        f = -sn * e[j - 1];\n                        e[j - 1] = cs * e[j - 1];\n                    }\n                    if (wantv) {\n                        for (let i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][p - 1];\n                            V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                            V[i][j] = t;\n                        }\n                    }\n                }\n            }\n            else if (kase == 2) {\n                let f = e[k - 1];\n                e[k - 1] = 0.0;\n                for (let j = k; j < p; j++) {\n                    let t = SingularValueDecomposition.hypot(s[j], f);\n                    let cs = s[j] / t;\n                    let sn = f / t;\n                    s[j] = t;\n                    f = -sn * e[j];\n                    e[j] = cs * e[j];\n                    if (wantu) {\n                        for (let i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][k - 1];\n                            U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n            }\n            else if (kase == 3) {\n                let scale = Math.max(Math.max(Math.max(Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2])), Math.abs(e[p - 2])), Math.abs(s[k])), Math.abs(e[k]));\n                let sp = s[p - 1] / scale;\n                let spm1 = s[p - 2] / scale;\n                let epm1 = e[p - 2] / scale;\n                let sk = s[k] / scale;\n                let ek = e[k] / scale;\n                let b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2.0;\n                let c = (sp * epm1) * (sp * epm1);\n                let shift = 0.0;\n                if ((b != 0.0) || (c != 0.0)) {\n                    shift = Math.sqrt(b * b + c);\n                    if (b < 0.0)\n                        shift = -shift;\n                    shift = c / (b + shift);\n                }\n                let f = (sk + sp) * (sk - sp) + shift;\n                let g = sk * ek;\n                for (let j = k; j < p - 1; j++) {\n                    let t = SingularValueDecomposition.hypot(f, g);\n                    let cs = f / t;\n                    let sn = g / t;\n                    if (j != k)\n                        e[j - 1] = t;\n                    f = cs * s[j] + sn * e[j];\n                    e[j] = cs * e[j] - sn * s[j];\n                    g = sn * s[j + 1];\n                    s[j + 1] = cs * s[j + 1];\n                    if (wantv) {\n                        for (let i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][j + 1];\n                            V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                            V[i][j] = t;\n                        }\n                    }\n                    t = SingularValueDecomposition.hypot(f, g);\n                    cs = f / t;\n                    sn = g / t;\n                    s[j] = t;\n                    f = cs * e[j] + sn * s[j + 1];\n                    s[j + 1] = -sn * e[j] + cs * s[j + 1];\n                    g = sn * e[j + 1];\n                    e[j + 1] = cs * e[j + 1];\n                    if (wantu && (j < m - 1)) {\n                        for (let i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][j + 1];\n                            U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n                e[p - 2] = f;\n                iter = iter + 1;\n            }\n            else if (kase == 4) {\n                if (s[k] <= 0.0) {\n                    s[k] = (s[k] < 0.0 ? -s[k] : 0.0);\n                    if (wantv) {\n                        for (let i = 0; i <= pp; i++)\n                            V[i][k] = -V[i][k];\n                    }\n                }\n                while (k < pp) {\n                    if (s[k] >= s[k + 1])\n                        break;\n                    let t = s[k];\n                    s[k] = s[k + 1];\n                    s[k + 1] = t;\n                    if (wantv && (k < n - 1)) {\n                        for (let i = 0; i < n; i++) {\n                            t = V[i][k + 1];\n                            V[i][k + 1] = V[i][k];\n                            V[i][k] = t;\n                        }\n                    }\n                    if (wantu && (k < m - 1)) {\n                        for (let i = 0; i < m; i++) {\n                            t = U[i][k + 1];\n                            U[i][k + 1] = U[i][k];\n                            U[i][k] = t;\n                        }\n                    }\n                    k++;\n                }\n                iter = 0;\n                p--;\n            }\n        }\n    }\n    getU() {\n        return Matrix.fromArray(this.U);\n    }\n    getV() {\n        return Matrix.fromArray(this.V);\n    }\n    getSingularValues() {\n        return this.s;\n    }\n    getS() {\n        const { n } = this;\n        let X = new Matrix(n, n, 0);\n        let S = X.A;\n        for (let i = 0; i < n; i++)\n            S[i][i] = this.s[i];\n        return X;\n    }\n    norm2() {\n        return this.s[0];\n    }\n    cond() {\n        const { m, n, s } = this;\n        return s[0] / s[Math.min(m, n) - 1];\n    }\n    rank() {\n        const { m, n, s } = this;\n        let eps = Math.pow(2.0, -52.0);\n        let tol = Math.max(m, n) * s[0] * eps;\n        let r = 0;\n        for (let i = 0; i < s.length; i++)\n            if (s[i] > tol)\n                r++;\n        return r;\n    }\n    static hypot(a, b) {\n        let r;\n        if (Math.abs(a) > Math.abs(b)) {\n            r = b / a;\n            r = Math.abs(a) * Math.sqrt(1 + r * r);\n        }\n        else if (b != 0) {\n            r = a / b;\n            r = Math.abs(b) * Math.sqrt(1 + r * r);\n        }\n        else {\n            r = 0.0;\n        }\n        return r;\n    }\n}\n//# sourceMappingURL=Matrix.js.map","import { norm2_xy, norm_xy, sqr } from './util';\nimport { Vec } from './Vec';\nconst EPSILON = Math.pow(2, -52);\nexport class Triangulation2D {\n    constructor(px, py) {\n        this.px = px;\n        this.py = py;\n        this.numTriangles = 0;\n        this.edgeStack = Vec.numberArray(0, 512);\n        this.hull = null;\n        this.px = px;\n        this.py = py;\n        this.sz = px.length;\n        let maxTriangles = Math.max(2 * this.sz - 5, 0);\n        this.triangles = new Array(maxTriangles * 3);\n        this.halfedges = new Array(maxTriangles * 3);\n        this.hashSize = Math.ceil(Math.sqrt(this.sz));\n        this.hullPrev = new Array(this.sz);\n        this.hullNext = new Array(this.sz);\n        this.hullTri = new Array(this.sz);\n        this.hullHash = Vec.numberArray(-1, this.hashSize);\n        this.ids = new Array(this.sz);\n        this.dists = new Array(this.sz);\n        this.update();\n    }\n    trimConcave(threshold) {\n        const threshSq = sqr(threshold);\n        const { sz, px, py } = this;\n        let tri = this.triangles.slice(0);\n        let edge = [];\n        for (let n = 0, i = 0; i < tri.length; n++, i += 3) {\n            edge.push(sz * Math.min(tri[i + 0], tri[i + 1]) + Math.max(tri[i + 0], tri[i + 1]));\n            edge.push(sz * Math.min(tri[i + 0], tri[i + 2]) + Math.max(tri[i + 0], tri[i + 2]));\n            edge.push(sz * Math.min(tri[i + 1], tri[i + 2]) + Math.max(tri[i + 1], tri[i + 2]));\n        }\n        let uniqueEdges = Vec.uniqueUnstable(edge);\n        for (let n = 0; n < edge.length; n++)\n            edge[n] = uniqueEdges.indexOf(edge[n]);\n        let edgeCount = new Array(edge.length);\n        while (true) {\n            const ntri = tri.length / 3;\n            edgeCount.fill(0);\n            for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n                edgeCount[edge[i + 0]]++;\n                edgeCount[edge[i + 1]]++;\n                edgeCount[edge[i + 2]]++;\n            }\n            let mask = Vec.booleanArray(true, ntri);\n            for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n                const c1 = edgeCount[edge[i + 0]];\n                const c2 = edgeCount[edge[i + 1]];\n                const c3 = edgeCount[edge[i + 2]];\n                const i1 = tri[i], i2 = tri[i + 1], i3 = tri[i + 2];\n                if (c1 == 1 && c2 != 1 && c3 != 1)\n                    mask[n] = norm2_xy(px[i1] - px[i2], py[i1] - py[i2]) < threshSq;\n                else if (c1 != 1 && c2 == 1 && c3 != 1)\n                    mask[n] = norm2_xy(px[i1] - px[i3], py[i1] - py[i3]) < threshSq;\n                else if (c1 != 1 && c2 != 1 && c3 == 1)\n                    mask[n] = norm2_xy(px[i2] - px[i3], py[i2] - py[i3]) < threshSq;\n            }\n            if (Vec.allTrue(mask))\n                break;\n            let repTri = new Array(Vec.maskCount(mask) * 3);\n            let repEdge = new Array(Vec.maskCount(mask) * 3);\n            for (let n = 0, i = 0, j = 0, k = 0; n < ntri; n++, i += 3)\n                if (mask[n]) {\n                    repTri[j++] = tri[i];\n                    repTri[j++] = tri[i + 1];\n                    repTri[j++] = tri[i + 2];\n                    repEdge[k++] = edge[i];\n                    repEdge[k++] = edge[i + 1];\n                    repEdge[k++] = edge[i + 2];\n                }\n            tri = repTri;\n            edge = repEdge;\n        }\n        return tri;\n    }\n    traceOutline(tri) {\n        const npt = tri.length, ntri = npt / 3;\n        const { sz, px, py } = this;\n        let edgeCount = new Map();\n        for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n            const e1 = sz * Math.min(tri[i + 0], tri[i + 1]) + Math.max(tri[i + 0], tri[i + 1]);\n            const e2 = sz * Math.min(tri[i + 0], tri[i + 2]) + Math.max(tri[i + 0], tri[i + 2]);\n            const e3 = sz * Math.min(tri[i + 1], tri[i + 2]) + Math.max(tri[i + 1], tri[i + 2]);\n            edgeCount.set(e1, (edgeCount.get(e1) || 0) + 1);\n            edgeCount.set(e2, (edgeCount.get(e2) || 0) + 1);\n            edgeCount.set(e3, (edgeCount.get(e3) || 0) + 1);\n        }\n        let edgePairs = [];\n        for (let entry of edgeCount.entries())\n            if (entry[1] == 1) {\n                const e = entry[0];\n                const i1 = Math.floor(e / sz), i2 = e % sz;\n                edgePairs.push(i1);\n                edgePairs.push(i2);\n            }\n        const idx = Vec.uniqueUnstable(edgePairs);\n        const isz = idx.length;\n        const idxMap = new Map();\n        for (let n = 0; n < isz; n++)\n            idxMap.set(idx[n], n);\n        let g1 = Vec.numberArray(-1, isz), g2 = Vec.numberArray(-1, isz);\n        for (let n = 0; n < edgePairs.length; n += 2) {\n            const i1 = idxMap.get(edgePairs[n]), i2 = idxMap.get(edgePairs[n + 1]);\n            if (g1[i1] < 0)\n                g1[i1] = i2;\n            else\n                g2[i1] = i2;\n            if (g1[i2] < 0)\n                g1[i2] = i1;\n            else\n                g2[i2] = i1;\n        }\n        let mask = Vec.booleanArray(false, isz);\n        let sequence = new Array(isz);\n        sequence[0] = 0;\n        mask[0] = true;\n        for (let n = 1; n < isz; n++) {\n            const i = sequence[n - 1];\n            if (!mask[g1[i]])\n                sequence[n] = g1[i];\n            else\n                sequence[n] = g2[i];\n            mask[sequence[n]] = true;\n        }\n        return Vec.idxGet(idx, sequence);\n    }\n    update() {\n        const sz = this.sz;\n        let { px, py, ids, dists, triangles, halfedges } = this;\n        const minX = Vec.min(px), minY = Vec.min(py);\n        const maxX = Vec.max(px), maxY = Vec.max(py);\n        for (let n = 0; n < sz; n++)\n            ids[n] = n;\n        this.centreX = 0.5 * (minX + maxX);\n        this.centreY = 0.5 * (minY + maxY);\n        let i0 = 0, i1 = 0, i2 = 0;\n        let minDist = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            const d = norm_xy(this.centreX - px[n], this.centreY - py[n]);\n            if (d < minDist) {\n                i0 = n;\n                minDist = d;\n            }\n        }\n        const i0x = px[i0], i0y = py[i0];\n        minDist = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            if (n == i0)\n                continue;\n            const d = norm_xy(i0x - px[n], i0y - py[n]);\n            if (d < minDist && d > 0) {\n                i1 = n;\n                minDist = d;\n            }\n        }\n        let i1x = px[i1], i1y = py[i1];\n        let minRadius = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            if (n == i0 || n == i1)\n                continue;\n            let r = this.circumRadius(i0x, i0y, i1x, i1y, px[n], py[n]);\n            if (r < minRadius) {\n                i2 = n;\n                minRadius = r;\n            }\n        }\n        let i2x = px[i2], i2y = py[i2];\n        if (!Number.isFinite(minRadius)) {\n            for (let n = 0; n < sz; n++) {\n                dists[n] = px[n] - px[0];\n                if (dists[n] == 0)\n                    dists[n] = py[n] - py[0];\n            }\n            this.quicksort(0, sz - 1);\n            let hull = new Array(sz);\n            let j = 0;\n            let d0 = Number.NEGATIVE_INFINITY;\n            for (let n = 0; n < sz; n++) {\n                let id = ids[n];\n                if (dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = dists[id];\n                }\n            }\n            this.hull = hull.slice(0, j);\n            triangles = [];\n            halfedges = [];\n            return;\n        }\n        if (this.orient(i0x, i0y, i1x, i1y, i2x, i2y)) {\n            let i = i1;\n            let x = i1x, y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n        this.pickCircumCentre(i0x, i0y, i1x, i1y, i2x, i2y);\n        for (let n = 0; n < sz; n++)\n            dists[n] = norm_xy(px[n] - this.centreX, py[n] - this.centreY);\n        this.quicksort(0, sz - 1);\n        this.hullStart = i0;\n        let hullSize = 3;\n        const { hullNext, hullPrev, hullTri, hullHash, hashSize } = this;\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n        hullHash.fill(-1);\n        hullHash[this.hashKey(i0x, i0y)] = i0;\n        hullHash[this.hashKey(i1x, i1y)] = i1;\n        hullHash[this.hashKey(i2x, i2y)] = i2;\n        this.numTriangles = 0;\n        this.addTriangle(i0, i1, i2, -1, -1, -1);\n        let xp = 0, yp = 0;\n        for (let k = 0; k < ids.length; k++) {\n            let i = ids[k];\n            let x = px[i], y = py[i];\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON)\n                continue;\n            xp = x;\n            yp = y;\n            if (i == i0 || i == i1 || i == i2)\n                continue;\n            let start = 0;\n            for (let j = 0, key = this.hashKey(x, y); j < hashSize; j++) {\n                start = hullHash[(key + j) % hashSize];\n                if (start >= 0 && start != hullNext[start])\n                    break;\n            }\n            start = hullPrev[start];\n            let e = start, q = hullNext[e];\n            while (!this.orient(x, y, px[e], py[e], px[q], py[q])) {\n                e = q;\n                if (e == start) {\n                    e = -1;\n                    break;\n                }\n                q = hullNext[e];\n            }\n            if (e < 0)\n                continue;\n            let t = this.addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n            hullTri[i] = this.legalise(t + 2);\n            hullTri[e] = t;\n            hullSize++;\n            let n = hullNext[e];\n            q = hullNext[n];\n            while (this.orient(x, y, px[n], py[n], px[q], py[q])) {\n                t = this.addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this.legalise(t + 2);\n                hullNext[n] = n;\n                hullSize--;\n                n = q;\n                q = hullNext[n];\n            }\n            if (e == start) {\n                q = hullPrev[e];\n                while (this.orient(x, y, px[q], py[q], px[e], py[e])) {\n                    t = this.addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this.legalise(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e;\n                    hullSize--;\n                    e = q;\n                    q = hullPrev[e];\n                }\n            }\n            this.hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n            hullHash[this.hashKey(x, y)] = i;\n            hullHash[this.hashKey(px[e], py[e])] = e;\n        }\n        this.hull = new Array(hullSize);\n        for (let n = 0, e = this.hullStart; n < hullSize; n++) {\n            this.hull[n] = e;\n            e = hullNext[e];\n        }\n        this.triangles = triangles.slice(0, this.numTriangles);\n        this.halfedges = halfedges.slice(0, this.numTriangles);\n    }\n    hashKey(x, y) {\n        return Math.floor(this.pseudoAngle(x - this.centreX, y - this.centreY) * this.hashSize) % this.hashSize;\n    }\n    legalise(a) {\n        let i = 0;\n        let ar = 0;\n        while (true) {\n            let b = this.halfedges[a];\n            let a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n            if (b < 0) {\n                if (i == 0)\n                    break;\n                a = this.edgeStack[--i];\n                continue;\n            }\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n            const { px, py, triangles, halfedges } = this;\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n            let illegal = this.inCircle(px[p0], py[p0], px[pr], py[pr], px[pl], py[pl], px[p1], py[p1]);\n            if (illegal) {\n                this.triangles[a] = p1;\n                this.triangles[b] = p0;\n                const hbl = halfedges[bl];\n                if (hbl < 0) {\n                    let e = this.hullStart;\n                    do {\n                        if (this.hullTri[e] == bl) {\n                            this.hullTri[e] = a;\n                            break;\n                        }\n                        e = this.hullPrev[e];\n                    } while (e != this.hullStart);\n                }\n                this.link(a, hbl);\n                this.link(b, halfedges[ar]);\n                this.link(ar, bl);\n                const br = b0 + (b + 1) % 3;\n                if (i < this.edgeStack.length)\n                    this.edgeStack[i++] = br;\n            }\n            else {\n                if (i == 0)\n                    break;\n                a = this.edgeStack[--i];\n            }\n        }\n        return ar;\n    }\n    link(a, b) {\n        this.halfedges[a] = b;\n        if (b >= 0)\n            this.halfedges[b] = a;\n    }\n    addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.numTriangles;\n        this.triangles[t] = i0;\n        this.triangles[t + 1] = i1;\n        this.triangles[t + 2] = i2;\n        this.link(t, a);\n        this.link(t + 1, b);\n        this.link(t + 2, c);\n        this.numTriangles += 3;\n        return t;\n    }\n    pseudoAngle(dx, dy) {\n        const p = dx / (Math.abs(dx) + Math.abs(dy));\n        return (dy > 0 ? 3 - p : 1 + p) / 4;\n    }\n    orientIfSure(px, py, rx, ry, qx, qy) {\n        const l = (ry - py) * (qx - px);\n        const r = (rx - px) * (qy - py);\n        return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n    }\n    orient(rx, ry, qx, qy, px, py) {\n        let o = this.orientIfSure(px, py, rx, ry, qx, qy);\n        if (o != 0)\n            return o < 0;\n        o = this.orientIfSure(rx, ry, qx, qy, px, py);\n        if (o != 0)\n            return o < 0;\n        o = this.orientIfSure(qx, qy, px, py, rx, ry);\n        return o < 0;\n    }\n    inCircle(ax, ay, bx, by, cx, cy, px, py) {\n        const dx = ax - px;\n        const dy = ay - py;\n        const ex = bx - px;\n        const ey = by - py;\n        const fx = cx - px;\n        const fy = cy - py;\n        const ap = dx * dx + dy * dy;\n        const bp = ex * ex + ey * ey;\n        const cp = fx * fx + fy * fy;\n        return dx * (ey * cp - bp * fy) -\n            dy * (ex * cp - bp * fx) +\n            ap * (ex * fy - ey * fx) < 0;\n    }\n    circumRadius(ax, ay, bx, by, cx, cy) {\n        const dx = bx - ax;\n        const dy = by - ay;\n        const ex = cx - ax;\n        const ey = cy - ay;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        const d = 0.5 / (dx * ey - dy * ex);\n        const x = (ey * bl - dy * cl) * d;\n        const y = (dx * cl - ex * bl) * d;\n        return x * x + y * y;\n    }\n    pickCircumCentre(ax, ay, bx, by, cx, cy) {\n        const dx = bx - ax;\n        const dy = by - ay;\n        const ex = cx - ax;\n        const ey = cy - ay;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        const d = 0.5 / (dx * ey - dy * ex);\n        this.centreX = ax + (ey * bl - dy * cl) * d;\n        this.centreY = ay + (dx * cl - ex * bl) * d;\n    }\n    quicksort(left, right) {\n        const { ids, dists } = this;\n        if (right - left <= 20) {\n            for (let i = left + 1; i <= right; i++) {\n                const temp = ids[i];\n                const tempDist = dists[temp];\n                let j = i - 1;\n                while (j >= left && dists[ids[j]] > tempDist)\n                    ids[j + 1] = ids[j--];\n                ids[j + 1] = temp;\n            }\n        }\n        else {\n            let median = (left + right) >> 1;\n            let i = left + 1;\n            let j = right;\n            Vec.swap(ids, median, i);\n            if (dists[ids[left]] > dists[ids[right]])\n                Vec.swap(ids, left, right);\n            if (dists[ids[i]] > dists[ids[right]])\n                Vec.swap(ids, i, right);\n            if (dists[ids[left]] > dists[ids[i]])\n                Vec.swap(ids, left, i);\n            let temp = ids[i];\n            const tempDist = dists[temp];\n            while (true) {\n                do\n                    i++;\n                while (dists[ids[i]] < tempDist);\n                do\n                    j--;\n                while (dists[ids[j]] > tempDist);\n                if (j < i)\n                    break;\n                Vec.swap(ids, i, j);\n            }\n            ids[left + 1] = ids[j];\n            ids[j] = temp;\n            if (right - i + 1 >= j - left) {\n                this.quicksort(i, right);\n                this.quicksort(left, j - 1);\n            }\n            else {\n                this.quicksort(left, j - 1);\n                this.quicksort(i, right);\n            }\n        }\n    }\n}\n//# sourceMappingURL=Triangulation2D.js.map","import { Matrix, SingularValueDecomposition } from './Matrix';\nimport { Triangulation2D } from './Triangulation2D';\nimport { angleDiff, angleDiffPos, angleNorm, maxArray, minArray, norm2_xy, norm_xy, realEqual, sqr, TWOPI } from './util';\nimport { Vec } from './Vec';\nexport class GeomUtil {\n    static pointInPolygon(x, y, px, py) {\n        if (x < minArray(px) || x > maxArray(px) || y < minArray(py) || y > maxArray(py))\n            return false;\n        let sz = px.length;\n        for (let n = 0; n < sz; n++)\n            if (px[n] == x && py[n] == y)\n                return true;\n        let phase = false;\n        for (let n = 0; n < sz; n++) {\n            let x1 = px[n], y1 = py[n], x2 = px[n + 1 < sz ? n + 1 : 0], y2 = py[n + 1 < sz ? n + 1 : 0];\n            if (y > Math.min(y1, y2) && y <= Math.max(y1, y2) && x <= Math.max(x1, x2) && y1 != y2) {\n                let intr = (y - y1) * (x2 - x1) / (y2 - y1) + x1;\n                if (x1 == x2 || x <= intr)\n                    phase = !phase;\n            }\n        }\n        return phase;\n    }\n    static areLinesParallel(x1, y1, x2, y2, x3, y3, x4, y4) {\n        let dxa = x2 - x1, dya = y2 - y1, dxb = x4 - x3, dyb = y4 - y3;\n        let xmajorA = Math.abs(dxa) > Math.abs(dya), xmajorB = Math.abs(dxb) > Math.abs(dyb);\n        if (xmajorA != xmajorB)\n            return false;\n        const EPS = 1E-6;\n        if (xmajorA)\n            return Math.abs(dya / dxa - dyb / dxb) < EPS;\n        else\n            return Math.abs(dxa / dya - dxb / dyb) < EPS;\n    }\n    static lineIntersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        let u = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n        return [x1 + u * (x2 - x1), y1 + u * (y2 - y1)];\n    }\n    static isPointOnLineSeg(px, py, x1, y1, x2, y2) {\n        if (px < Math.min(x1, x2) || px > Math.max(x1, x2) || py < Math.min(y1, y2) || py > Math.max(y1, y2))\n            return false;\n        if ((px == x1 && py == y1) || (px == x2 && py == y2))\n            return true;\n        let dx = x2 - x1, dy = y2 - y1;\n        if (Math.abs(dx) > Math.abs(dy))\n            return realEqual(py, (dy / dx) * (px - x1) + y1);\n        else\n            return realEqual(px, (dx / dy) * (py - y1) + x1);\n    }\n    static pointLineDistance(px, py, x1, y1, x2, y2) {\n        let dx = x2 - x1, dy = y2 - y1;\n        return Math.abs(dy * px - dx * py + x2 * y1 - y2 * x1) / norm_xy(dx, dy);\n    }\n    static pointLineSegDistance(px, py, x1, y1, x2, y2) {\n        let dx = x2 - x1, dy = y2 - y1;\n        let t = ((px - x1) * dx + (py - y1) * dy) / norm2_xy(dx, dy);\n        t = Math.max(0, Math.min(1, t));\n        let tx = x1 + t * dx, ty = y1 + t * dy;\n        return norm_xy(px - tx, py - ty);\n    }\n    static doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (Math.max(x1, x2) < Math.min(x3, x4) || Math.max(y1, y2) < Math.min(y3, y4))\n            return false;\n        if (Math.min(x1, x2) > Math.max(x3, x4) || Math.min(y1, y2) > Math.max(y3, y4))\n            return false;\n        if ((x1 == x3 && y1 == y3) || (x1 == x4 && y1 == y4) || (x2 == x3 && y2 == y3) || (x2 == x4 && y2 == y4))\n            return true;\n        if ((x1 == x2 || x3 == x4) && (x1 == x3 || x1 == x4 || x2 == x3 || x2 == x4))\n            return true;\n        if ((y1 == y2 || y3 == y4) && (y1 == y3 || y1 == y4 || y2 == y3 || y2 == y4))\n            return true;\n        let x4_x3 = x4 - x3, y4_y3 = y4 - y3, x2_x1 = x2 - x1, y2_y1 = y2 - y1, x1_x3 = x1 - x3, y1_y3 = y1 - y3;\n        let nx = x4_x3 * y1_y3 - y4_y3 * x1_x3;\n        let ny = x2_x1 * y1_y3 - y2_y1 * x1_x3;\n        let dn = y4_y3 * x2_x1 - x4_x3 * y2_y1;\n        if (dn == 0)\n            return false;\n        if (dn < 0) {\n            dn = -dn;\n            nx = -nx;\n            ny = -ny;\n        }\n        return nx >= 0 && nx <= dn && ny >= 0 && ny <= dn;\n    }\n    static rectsIntersect(x1, y1, w1, h1, x2, y2, w2, h2) {\n        if (x1 <= x2 && x1 + w1 >= x2 + w2 && y1 <= y2 && y1 + h1 >= y2 + h2)\n            return true;\n        if (x2 <= x1 && x2 + w2 >= x1 + w1 && y2 <= y1 && y2 + h2 >= y1 + h1)\n            return true;\n        if (x1 + w1 < x2 || x2 + w2 < x1 || y1 + h1 < y2 || y2 + h2 < y1)\n            return false;\n        return true;\n    }\n    static sortAngles(theta) {\n        if (theta == null || theta.length < 2)\n            return theta;\n        theta = theta.slice(0);\n        for (let n = 0; n < theta.length; n++)\n            theta[n] = angleNorm(theta[n]);\n        if (theta.length == 2) {\n            if (angleDiffPos(theta[1], theta[0]) > Math.PI)\n                return [theta[1], theta[0]];\n            return theta;\n        }\n        Vec.sort(theta);\n        while (true) {\n            let a = theta[theta.length - 1], b = theta[0], c = theta[1];\n            if (angleDiff(b, a) <= angleDiff(c, b))\n                break;\n            for (let n = theta.length - 1; n > 0; n--)\n                theta[n] = theta[n - 1];\n            theta[0] = a;\n        }\n        return theta;\n    }\n    static idxSortAngles(theta) {\n        const sz = Vec.len(theta);\n        if (theta == null || sz < 2)\n            return Vec.identity0(sz);\n        if (sz == 2) {\n            if (angleDiffPos(theta[1], theta[0]) > Math.PI)\n                return [1, 0];\n            else\n                return [0, 1];\n        }\n        theta = Vec.duplicate(theta);\n        for (let n = 0; n < sz; n++)\n            theta[n] = angleNorm(theta[n]);\n        let idx = Vec.idxSort(theta);\n        while (true) {\n            let a = theta[idx[sz - 1]], b = theta[idx[0]], c = theta[idx[1]];\n            if (angleDiff(b, a) <= angleDiff(c, b))\n                break;\n            let last = idx.pop();\n            idx.unshift(last);\n        }\n        return idx;\n    }\n    static uniqueAngles(theta, threshold) {\n        let ang = GeomUtil.sortAngles(theta), ret = [];\n        ret.push(ang[0]);\n        for (let n = 1; n < ang.length; n++) {\n            if (Math.abs(angleDiff(ang[n], ang[n - 1])) > threshold)\n                ret.push(ang[n]);\n        }\n        return ret;\n    }\n    static thetaObtuse(th1, th2) {\n        let dth = th2 - th1;\n        while (dth < -Math.PI)\n            dth += 2 * Math.PI;\n        while (dth > Math.PI)\n            dth -= 2 * Math.PI;\n        return dth > 0 ? th1 - 0.5 * (2 * Math.PI - dth) : th1 + 0.5 * (2 * Math.PI + dth);\n    }\n    static emergentAngle(theta) {\n        let len = theta.length;\n        if (len == 1)\n            return theta[0];\n        if (len == 2)\n            return 0.5 * (theta[0] + theta[1]);\n        Vec.sort(theta);\n        let bottom = 0;\n        let behind = angleDiffPos(theta[0], theta[len - 1]);\n        for (let n = 1; n < len; n++) {\n            let delta = angleDiffPos(theta[n], theta[n - 1]);\n            if (delta > behind) {\n                bottom = n;\n                behind = delta;\n            }\n        }\n        let sum = 0;\n        for (let n = 0; n < len; n++) {\n            let delta = theta[n] - theta[bottom];\n            if (delta < 0)\n                delta += TWOPI;\n            sum += delta;\n        }\n        return sum / len + theta[bottom];\n    }\n    static dotProduct(v1, v2) {\n        return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\n    }\n    static crossProduct(v1, v2) {\n        const x = v1[1] * v2[2] - v1[2] * v2[1];\n        const y = v1[2] * v2[0] - v1[0] * v2[2];\n        const z = v1[0] * v2[1] - v1[1] * v2[0];\n        return [x, y, z];\n    }\n    static affineTranslate(dx, dy) {\n        return [[1, 0, dx], [0, 1, dy], [0, 0, 1]];\n    }\n    static affineMirror(xaxis, yaxis) {\n        return [[xaxis ? -1 : 1, 0, 0], [0, yaxis ? -1 : 1, 0], [0, 0, 1]];\n    }\n    static affineScale(sx, sy) {\n        return [[sx, 0, 0], [0, sy, 0], [0, 0, 1]];\n    }\n    static affineRotate(theta) {\n        let cos = Math.cos(theta), sin = Math.sin(theta);\n        return [[cos, -sin, 0], [sin, cos, 0], [0, 0, 1]];\n    }\n    static affineCompose(A, B) {\n        let tfm = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n        let Acol = [0, 0, 0];\n        for (let j = 0; j < 3; j++) {\n            for (let k = 0; k < 3; k++)\n                Acol[k] = A[k][j];\n            for (let i = 0; i < 3; i++) {\n                let Brow = B[i];\n                let s = 0;\n                for (let k = 0; k < 3; k++)\n                    s += Acol[k] * Brow[k];\n                tfm[i][j] = s;\n            }\n        }\n        return tfm;\n    }\n    static applyAffine(x, y, tfm) {\n        return [x * tfm[0][0] + y * tfm[0][1] + tfm[0][2], x * tfm[1][0] + y * tfm[1][1] + tfm[1][2]];\n    }\n    static applyAffineArray(x, y, tfm) {\n        for (let n = 0; n < x.length; n++)\n            [x[n], y[n]] = this.applyAffine(x[n], y[n], tfm);\n    }\n    static isAffineMirror(tfm) {\n        let a = tfm[0][0], b = tfm[0][1], c = tfm[0][2];\n        let d = tfm[1][0], e = tfm[1][1], f = tfm[1][2];\n        let g = tfm[2][0], h = tfm[2][1], i = tfm[2][2];\n        return a * e * i + b * f * g + c * d * h - c * e * g - b * d * i - a * f * h < 0;\n    }\n    static magnitude2(v) {\n        return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n    }\n    static magnitude(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n    }\n    static dist2(v1, v2) {\n        let dx = v1[0] - v2[0], dy = v1[1] - v2[1], dz = v1[2] - v2[2];\n        return dx * dx + dy * dy + dz * dz;\n    }\n    static dist(v1, v2) {\n        let dx = v1[0] - v2[0], dy = v1[1] - v2[1], dz = v1[2] - v2[2];\n        return Math.sqrt(dx * dx + dy * dy + dz * dz);\n    }\n    static normalise(v) {\n        const dsq = v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n        if (dsq == 0)\n            return;\n        const inv = 1.0 / Math.sqrt(dsq);\n        v[0] *= inv;\n        v[1] *= inv;\n        v[2] *= inv;\n    }\n    static normalised(v) {\n        let ret = v.slice(0);\n        this.normalise(ret);\n        return ret;\n    }\n    static acuteAngle(v1, v2) {\n        let mag1 = this.magnitude(v1), mag2 = this.magnitude(v2);\n        if (mag1 == 0 || mag2 == 0)\n            return 0;\n        let dot = this.dotProduct(v1, v2);\n        let cosTheta = dot / (mag1 * mag2);\n        cosTheta = Math.max(-1, Math.min(1, cosTheta));\n        return Math.acos(cosTheta);\n    }\n    static arcControlPoints(rad, x1, y1, x2, y2) {\n        let t1x = -y1, t1y = x1;\n        let t2x = y2, t2y = -x2;\n        let dx = 0.5 * (x1 + x2);\n        let dy = 0.5 * (y1 + y2);\n        let tx = 3 / 8 * (t1x + t2x);\n        let ty = 3 / 8 * (t1y + t2y);\n        let a = tx * tx + ty * ty;\n        let b = dx * tx + dy * ty;\n        let c = dx * dx + dy * dy - rad * rad;\n        let D = b * b - a * c;\n        let k = (Math.sqrt(D) - b) / a;\n        return [x1 + k * t1x, y1 + k * t1y, x2 + k * t2x, y2 + k * t2y];\n    }\n    static createBezierEllipse(cx, cy, rw, rh, theta) {\n        let nseg = 24, npt = 2 * nseg + 1;\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        let incrAlpha = TWOPI / nseg;\n        let px = new Array(npt), py = new Array(npt);\n        for (let n = 0; n < nseg; n++) {\n            let alpha = n * incrAlpha;\n            let cosAlpha = Math.cos(alpha), sinAlpha = Math.sin(alpha);\n            px[n * 2] = rw * cosAlpha * cosTheta - rh * sinAlpha * sinTheta + cx;\n            py[n * 2] = rw * cosAlpha * sinTheta + rh * sinAlpha * cosTheta + cy;\n        }\n        px[npt - 1] = px[0];\n        py[npt - 1] = py[0];\n        let smooth = 0.3;\n        for (let n = 0; n < nseg; n++) {\n            let n1 = (n - 1 + nseg) % nseg;\n            let n2 = n;\n            let n3 = (n + 1) % nseg;\n            let n4 = (n + 2) % nseg;\n            let x1 = px[n1 * 2], x2 = px[n2 * 2], x3 = px[n3 * 2], x4 = px[n4 * 2];\n            let y1 = py[n1 * 2], y2 = py[n2 * 2], y3 = py[n3 * 2], y4 = py[n4 * 2];\n            px[n * 2 + 1] = 0.5 * (x2 + x3 + smooth * (x2 - x1 + x3 - x4));\n            py[n * 2 + 1] = 0.5 * (y2 + y3 + smooth * (y2 - y1 + y3 - y4));\n        }\n        let ctrl = new Array(npt);\n        for (let n = 0; n < npt; n++)\n            ctrl[n] = (n & 1) == 1;\n        return { px, py, ctrl };\n    }\n    static fitCircle(x, y) {\n        let dsq = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < x.length; n++)\n            dsq = Math.min(dsq, norm2_xy(x[n], y[n]));\n        return Math.sqrt(dsq);\n    }\n    static fitEllipse(px, py, minX, minY, maxX, maxY) {\n        let bestW = 0.5 * this.fitCircle(px, py), bestH = bestW, bestScore = bestW * bestH;\n        let x = Vec.concat(px, [minX, maxX, 0, 0]);\n        let y = Vec.concat(py, [0, 0, minY, maxY]);\n        const sz = x.length;\n        let shrinkToFit = (whs) => {\n            let dmin = Number.POSITIVE_INFINITY;\n            let invW2 = 1.0 / (whs[0] * whs[0]), invH2 = 1.0 / (whs[1] * whs[1]);\n            for (let n = 0; n < sz; n++)\n                dmin = Math.min(dmin, Math.sqrt(x[n] * x[n] * invW2 + y[n] * y[n] * invH2));\n            if (dmin < 1) {\n                whs[0] *= dmin;\n                whs[1] *= dmin;\n            }\n            whs[2] = whs[0] * whs[1];\n        };\n        let mul = 1;\n        let whsX = [0, 0, 0], whsY = [0, 0, 0];\n        while (mul > 0.001) {\n            whsX[0] = bestW * (1 + mul);\n            whsX[1] = bestH;\n            shrinkToFit(whsX);\n            whsY[0] = bestW;\n            whsY[1] = bestH * (1 + mul);\n            shrinkToFit(whsY);\n            let anything = false;\n            if (whsX[2] > bestScore) {\n                bestW = whsX[0];\n                bestH = whsX[1];\n                bestScore = whsX[2];\n                anything = true;\n            }\n            if (whsY[2] > bestScore) {\n                bestW = whsY[0];\n                bestH = whsY[1];\n                bestScore = whsY[2];\n                anything = true;\n            }\n            if (!anything)\n                mul *= 0.6;\n        }\n        return [bestW, bestH];\n    }\n    static superimpose(ax, ay, bx, by) {\n        let sz = ax.length;\n        if (sz == 1) {\n            let dx = bx[0] - ax[0], dy = by[0] - ay[0];\n            return [[1, 0, dx], [0, 1, dy], [0, 0, 1]];\n        }\n        if (sz == 2) {\n            let thetaA = Math.atan2(ay[1] - ay[0], ax[1] - ax[0]), thetaB = Math.atan2(by[1] - by[0], bx[1] - bx[0]);\n            let delta = angleDiff(thetaB, thetaA), cos = Math.cos(delta), sin = Math.sin(delta);\n            let rot00 = cos, rot01 = -sin;\n            let rot10 = sin, rot11 = cos;\n            let acx = 0.5 * (ax[0] + ax[1]), acy = 0.5 * (ay[0] + ay[1]);\n            let bcx = 0.5 * (bx[0] + bx[1]), bcy = 0.5 * (by[0] + by[1]);\n            let rax = rot00 * acx + rot01 * acy;\n            let ray = rot10 * acx + rot11 * acy;\n            return [[rot00, rot01, bcx - rax], [rot10, rot11, bcy - ray], [0, 0, 1]];\n        }\n        let invsz = 1.0 / sz;\n        let acx = Vec.sum(ax) * invsz, acy = Vec.sum(ay) * invsz;\n        let bcx = Vec.sum(bx) * invsz, bcy = Vec.sum(by) * invsz;\n        let mtxA = new Matrix(3, sz), mtxB = new Matrix(3, sz);\n        for (let n = 0; n < sz; n++) {\n            mtxA.set(0, n, ax[n] - acx);\n            mtxA.set(1, n, ay[n] - acy);\n            mtxA.set(2, n, 0);\n            mtxB.set(0, n, bx[n] - bcx);\n            mtxB.set(1, n, by[n] - bcy);\n            mtxB.set(2, n, 0);\n        }\n        let cov = mtxA.times(mtxB.transpose());\n        let svd = new SingularValueDecomposition(cov);\n        let rotate = svd.getV().times(svd.getU().transpose());\n        let rot00 = rotate.get(0, 0), rot01 = rotate.get(0, 1);\n        let rot10 = rotate.get(1, 0), rot11 = rotate.get(1, 1);\n        let rax = rot00 * acx + rot01 * acy;\n        let ray = rot10 * acx + rot11 * acy;\n        return [[rot00, rot01, bcx - rax], [rot10, rot11, bcy - ray], [0, 0, 1]];\n    }\n    static convexHull(x, y, flatness) {\n        let algo = new QuickHull(x, y, sqr(flatness * 0.1));\n        return [algo.hullX, algo.hullY];\n    }\n    static outlinePolygon(x, y, diameter) {\n        let del = new Triangulation2D(x, y);\n        let concave = del.trimConcave(diameter);\n        let idx = del.traceOutline(concave);\n        return [Vec.idxGet(x, idx), Vec.idxGet(y, idx)];\n    }\n}\nexport class QuickHull {\n    constructor(x, y, threshSq) {\n        this.x = x;\n        this.y = y;\n        this.threshSq = threshSq;\n        this.hsz = 0;\n        this.hullX = [];\n        this.hullY = [];\n        const sz = x.length;\n        let l = 0, r = 0;\n        for (let n = 0; n < sz; n++) {\n            if (x[r] > x[n] || (x[r] == x[n] && y[r] > y[n]))\n                r = n;\n            if (x[l] < x[n] || (x[l] == x[n] && y[l] < y[n]))\n                l = n;\n        }\n        let al1 = [], al2 = [];\n        for (let n = 0; n < sz; n++) {\n            if (n != l && n != r) {\n                if (this.right(r, l, n) > 0)\n                    al1.push(n);\n                else\n                    al2.push(n);\n            }\n        }\n        this.hullX.push(x[r]);\n        this.hullY.push(y[r]);\n        this.quickHull(r, l, al1);\n        this.hullX.push(x[l]);\n        this.hullY.push(y[l]);\n        this.quickHull(l, r, al2);\n        for (let n = 0; n < this.hullX.length - 1;) {\n            if (norm2_xy(this.hullX[n] - this.hullY[n + 1], this.hullY[n] - this.hullY[n + 1]) < threshSq) {\n                this.hullX.splice(n + 1, 1);\n                this.hullY.splice(n + 1, 1);\n            }\n            else\n                n++;\n        }\n    }\n    quickHull(a, b, al) {\n        if (al.length == 0)\n            return;\n        let c = this.furthestPoint(a, b, al);\n        let al1 = [], al2 = [];\n        for (let n = 0; n < al.length; n++) {\n            let p = al[n];\n            if (p == a || p == b)\n                continue;\n            if (this.right(a, c, p) > 0)\n                al1.push(p);\n            else if (this.right(c, b, p) > 0)\n                al2.push(p);\n        }\n        this.quickHull(a, c, al1);\n        this.hullX.push(this.x[c]);\n        this.hullY.push(this.y[c]);\n        this.quickHull(c, b, al2);\n    }\n    right(a, b, p) {\n        const x = this.x, y = this.y;\n        return (x[a] - x[b]) * (y[p] - y[b]) - (x[p] - x[b]) * (y[a] - y[b]);\n    }\n    distance(a, b, p) {\n        const x = this.x, y = this.y;\n        let u = ((x[p] - x[a]) * (x[b] - x[a]) + (y[p] - y[a]) * (y[b] - y[a])) / ((x[b] - x[a]) * (x[b] - x[a]) + (y[b] - y[a]) * (y[b] - y[a]));\n        let ux = x[a] + u * (x[b] - x[a]);\n        let uy = y[a] + u * (y[b] - y[a]);\n        return ((ux - x[p]) * (ux - x[p]) + (uy - y[p]) * (uy - y[p]));\n    }\n    furthestPoint(a, b, al) {\n        let maxDist = -1;\n        let maxPos = -1;\n        for (let n = 0; n < al.length; n++) {\n            let p = al[n];\n            if (p == a || p == b)\n                continue;\n            let dist = this.distance(a, b, p);\n            if (dist > maxDist) {\n                maxDist = dist;\n                maxPos = p;\n            }\n        }\n        return maxPos;\n    }\n}\nexport class RollingBall {\n    constructor(x, y, diameter) {\n        this.x = x;\n        this.y = y;\n        this.sequence = [];\n        const sz = x.length;\n        const threshSq = diameter * diameter;\n        let first = Vec.idxMax(x), latest = first;\n        let direction = 0.0;\n        let visited = Vec.booleanArray(false, sz);\n        this.sequence.push(first);\n        let roll = () => {\n            let bestIdx = -1;\n            let bestDelta = 0, bestTheta = 0;\n            for (let n = 0; n < sz; n++)\n                if (n != latest && !visited[n]) {\n                    let dx = x[n] - x[latest], dy = y[n] - y[latest];\n                    let dsq = norm2_xy(dx, dy);\n                    if (dsq == 0 || dsq > threshSq)\n                        continue;\n                    let theta = Math.atan2(dy, dx), delta = angleDiffPos(theta, direction);\n                    if (bestIdx < 0 || delta < bestDelta) {\n                        bestIdx = n;\n                        bestDelta = delta;\n                        bestTheta = theta;\n                    }\n                }\n            if (bestIdx < 0)\n                return -1;\n            direction = angleNorm(bestTheta - 0.5 * Math.PI);\n            visited[bestIdx] = true;\n            return bestIdx;\n        };\n        while (true) {\n            let next = roll();\n            if (next < 0) {\n                this.sequence = null;\n                return;\n            }\n            if (next == first)\n                break;\n            this.sequence.push(next);\n            latest = next;\n        }\n    }\n    sequencePos() {\n        if (!this.sequence)\n            return null;\n        let posList = [];\n        for (let n of this.sequence)\n            posList.push(new Pos(this.x[n], this.y[n]));\n        return posList;\n    }\n    sequenceXY() {\n        if (!this.sequence)\n            return [null, null];\n        let px = [], py = [];\n        for (let n of this.sequence) {\n            px.push(this.x[n]);\n            py.push(this.y[n]);\n        }\n        return [px, py];\n    }\n}\nexport class Pos {\n    static zero() { return new Pos(); }\n    static fromArray(src) { return new Pos(src[0], src[1]); }\n    constructor(x, y) {\n        this.x = x == null ? 0 : x;\n        this.y = y == null ? 0 : y;\n    }\n    clone() { return new Pos(this.x, this.y); }\n    equals(other) { return this.x == other.x && this.y == other.y; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x *= mag;\n        this.y *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    }\n    withScaleBy(mag) {\n        return new Pos(this.x * mag, this.y * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Pos(this.x + dx, this.y + dy);\n    }\n    toString() { return '[' + this.x + ',' + this.y + ']'; }\n}\nexport class Size {\n    static zero() { return new Size(); }\n    static fromArray(src) { return new Size(src[0], src[1]); }\n    constructor(w, h) {\n        this.w = w == null ? 0 : w;\n        this.h = h == null ? 0 : h;\n    }\n    clone() { return new Size(this.w, this.h); }\n    equals(other) { return this.w == other.w && this.h == other.h; }\n    isZero() { return this.w == 0 && this.h == 0; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.w *= mag;\n        this.h *= mag;\n    }\n    fitInto(maxW, maxH) {\n        let scale = 1;\n        if (this.w > maxW)\n            scale = maxW / this.w;\n        if (this.h > maxH)\n            scale = Math.min(scale, maxH / this.h);\n        if (scale < 1)\n            this.scaleBy(scale);\n    }\n    withScaleBy(mag) {\n        return new Size(this.w * mag, this.h * mag);\n    }\n    toString() { return '[' + this.w + ',' + this.h + ']'; }\n}\nexport class Box {\n    static zero() { return new Box(); }\n    static fromBounds(x1, y1, x2, y2) { return new Box(x1, y1, x2 - x1, y2 - y1); }\n    static fromSize(sz) { return new Box(0, 0, sz.w, sz.h); }\n    static fromOval(oval) { return new Box(oval.cx - oval.rw, oval.cy - oval.rh, 2 * oval.rw, 2 * oval.rh); }\n    static fromArray(src) { return new Box(src[0], src[1], src[2], src[3]); }\n    constructor(x, y, w, h) {\n        this.x = x == null ? 0 : x;\n        this.y = y == null ? 0 : y;\n        this.w = w == null ? 0 : w;\n        this.h = h == null ? 0 : h;\n    }\n    clone() { return new Box(this.x, this.y, this.w, this.h); }\n    equals(other) { return this.x == other.x && this.y == other.y && this.w == other.w && this.h == other.h; }\n    getPos() { return new Pos(this.x, this.y); }\n    setPos(pos) {\n        this.x = pos.x;\n        this.y = pos.y;\n    }\n    getSize() { return new Size(this.w, this.h); }\n    setSize(sz) {\n        this.w = sz.w;\n        this.h = sz.h;\n    }\n    minX() { return this.x; }\n    minY() { return this.y; }\n    midX() { return this.x + 0.5 * this.w; }\n    midY() { return this.y + 0.5 * this.h; }\n    maxX() { return this.x + this.w; }\n    maxY() { return this.y + this.h; }\n    area() { return this.w * this.h; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x *= mag;\n        this.y *= mag;\n        this.w *= mag;\n        this.h *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    }\n    grow(bx, by) {\n        this.x -= bx;\n        this.y -= by;\n        this.w += 2 * bx;\n        this.h += 2 * by;\n    }\n    withScaleBy(mag) {\n        return new Box(this.x * mag, this.y * mag, this.w * mag, this.h * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Box(this.x + dx, this.y + dy, this.w, this.h);\n    }\n    withGrow(bx, by) {\n        return new Box(this.x - bx, this.y - by, this.w + 2 * bx, this.h + 2 * by);\n    }\n    intersects(other) {\n        return GeomUtil.rectsIntersect(this.x, this.y, this.w, this.h, other.x, other.y, other.w, other.h);\n    }\n    intersection(other) {\n        let x1 = this.x, x2 = x1 + this.w, y1 = this.y, y2 = y1 + this.h;\n        let x3 = other.x, x4 = x3 + other.w, y3 = other.y, y4 = y3 + other.h;\n        let x5 = Math.max(x1, x3), y5 = Math.max(y1, y3), x6 = Math.min(x2, x4), y6 = Math.min(y2, y4);\n        return new Box(x5, y5, x6 - x5, y6 - y5);\n    }\n    contains(x, y) {\n        return x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h;\n    }\n    union(other) {\n        let x1 = Math.min(this.x, other.x), x2 = Math.max(this.x + this.w, other.x + other.w);\n        let y1 = Math.min(this.y, other.y), y2 = Math.max(this.y + this.h, other.y + other.h);\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    isZero() { return this.w == 0 && this.h == 0; }\n    isEmpty() { return this.w == 0 && this.h == 0; }\n    notEmpty() { return this.w > 0 || this.h > 0; }\n    toString() { return '[' + this.x + ',' + this.y + ';' + this.w + ',' + this.h + ']'; }\n}\nexport class Oval {\n    static zero() { return new Oval(); }\n    static fromBox(box) { return new Oval(box.x + 0.5 * box.w, box.y + 0.5 * box.h, 0.5 * box.w, 0.5 * box.h); }\n    static fromArray(src) { return new Oval(src[0], src[1], src[2], src[3]); }\n    constructor(cx, cy, rw, rh) {\n        this.cx = cx == null ? 0 : cx;\n        this.cy = cy == null ? 0 : cy;\n        this.rw = rw == null ? 0 : rw;\n        this.rh = rh == null ? 0 : rh;\n    }\n    clone() { return new Oval(this.cx, this.cy, this.rw, this.rh); }\n    setCentre(pos) {\n        this.cx = pos.x;\n        this.cy = pos.y;\n    }\n    setRadius(sz) {\n        this.rw = sz.w;\n        this.rh = sz.h;\n    }\n    minX() { return this.cx - this.rw; }\n    minY() { return this.cy - this.rh; }\n    maxX() { return this.cx + this.rw; }\n    maxY() { return this.cy + this.rh; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.cx *= mag;\n        this.cy *= mag;\n        this.rw *= mag;\n        this.rh *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.cx += dx;\n        this.cy += dy;\n    }\n    withScaleBy(mag) {\n        return new Oval(this.cx * mag, this.cy * mag, this.rw * mag, this.rh * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Oval(this.cx + dx, this.cy + dy, this.rw, this.rh);\n    }\n    contains(x, y) {\n        let dx = x - this.cx, dy = y - this.cy;\n        let a = dx / this.rw, b = dy / this.rh;\n        return a * a + b * b <= 1;\n    }\n    toString() { return '[' + this.cx + ',' + this.cy + ';' + this.rw + ',' + this.rh + ']'; }\n}\nexport class Line {\n    static zero() { return new Line(); }\n    static fromPos(pos1, pos2) { return new Line(pos1.x, pos1.y, pos2.x, pos2.y); }\n    constructor(x1, y1, x2, y2) {\n        this.x1 = x1 == null ? 0 : x1;\n        this.y1 = y1 == null ? 0 : y1;\n        this.x2 = x2 == null ? 0 : x2;\n        this.y2 = y2 == null ? 0 : y2;\n    }\n    clone() { return new Line(this.x1, this.y1, this.x2, this.y2); }\n    setPos1(pos) {\n        this.x1 = pos.x;\n        this.y1 = pos.y;\n    }\n    setPos2(pos) {\n        this.x2 = pos.x;\n        this.y2 = pos.y;\n    }\n    minX() { return Math.min(this.x1, this.x2); }\n    minY() { return Math.min(this.y1, this.y2); }\n    maxX() { return Math.max(this.x1, this.x2); }\n    maxY() { return Math.max(this.y1, this.y2); }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x1 *= mag;\n        this.y1 *= mag;\n        this.x2 *= mag;\n        this.y2 *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x1 += dx;\n        this.y1 += dy;\n        this.x2 += dx;\n        this.y2 += dy;\n    }\n    toString() { return '[' + this.x1 + ',' + this.y1 + ';' + this.x2 + ',' + this.y2 + ']'; }\n}\n//# sourceMappingURL=Geom.js.map","const ELEMENT_NODE = 1;\nconst ATTRIBUTE_NODE = 2;\nconst TEXT_NODE = 3;\nconst CDATA_SECTION_NODE = 4;\nconst ENTITY_REFERENCE_NODE = 5;\nconst ENTITY_NODE = 6;\nconst PROCESSING_INSTRUCTION_NODE = 7;\nconst COMMENT_NODE = 8;\nconst DOCUMENT_NODE = 9;\nconst DOCUMENT_TYPE_NODE = 10;\nconst DOCUMENT_FRAGMENT_NODE = 11;\nconst NOTATION_NODE = 12;\nexport class XML {\n    static parseXML(strXML) {\n        let xmlDoc;\n        if (this.customParser)\n            xmlDoc = new this.customParser().parseFromString(strXML, 'application/xml');\n        else\n            xmlDoc = new DOMParser().parseFromString(strXML, 'application/xml');\n        if (xmlDoc == null)\n            return null;\n        return xmlDoc;\n    }\n    static toString(doc) {\n        if (this.customSerial)\n            return new this.customSerial().serializeToString(doc.documentElement);\n        else\n            return new XMLSerializer().serializeToString(doc.documentElement);\n    }\n    static toPrettyString(doc) {\n        let xslt = [\n            '<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">',\n            '  <xsl:strip-space elements=\"*\"/>',\n            '  <xsl:template match=\"para[content-style][not(text())]\">',\n            '    <xsl:value-of select=\"normalize-space(.)\"/>',\n            '  </xsl:template>',\n            '  <xsl:template match=\"node()|@*\">',\n            '    <xsl:copy><xsl:apply-templates select=\"node()|@*\"/></xsl:copy>',\n            '  </xsl:template>',\n            '  <xsl:output indent=\"yes\"/>',\n            '</xsl:stylesheet>',\n        ].join('\\n');\n        let xsltDoc = this.parseXML(xslt);\n        let xsltProc = new XSLTProcessor();\n        xsltProc.importStylesheet(xsltDoc);\n        let resultDoc = xsltProc.transformToDocument(doc);\n        return new XMLSerializer().serializeToString(resultDoc);\n    }\n    static nodeText(el) {\n        let text = '';\n        for (let child of Array.from(el.childNodes)) {\n            if (child.nodeType == TEXT_NODE || child.nodeType == CDATA_SECTION_NODE)\n                text += child.nodeValue;\n        }\n        return text;\n    }\n    static childText(parent, tagName) {\n        if (parent == null)\n            return null;\n        let el = this.findElement(parent, tagName);\n        if (el == null)\n            return null;\n        return this.nodeText(el);\n    }\n    static appendElement(parent, name) {\n        let el = parent.ownerDocument.createElement(name);\n        parent.appendChild(el);\n        return el;\n    }\n    static appendElementAfter(presib, name) {\n        let el = presib.ownerDocument.createElement(name);\n        let postsib = presib.nextSibling;\n        if (postsib == null)\n            presib.parentNode.appendChild(el);\n        else\n            presib.parentNode.insertBefore(el, postsib);\n        return el;\n    }\n    static appendText(parent, text, isCDATA = false) {\n        if (text == null || text.length == 0)\n            return;\n        if (!isCDATA)\n            parent.appendChild(parent.ownerDocument.createTextNode(text));\n        else\n            parent.appendChild(parent.ownerDocument.createCDATASection(text));\n    }\n    static createTextChild(parent, name, text, isCDATA = false) {\n        let el = parent.ownerDocument.createElement(name);\n        parent.appendChild(el);\n        if (!isCDATA)\n            el.textContent = text;\n        else\n            el.appendChild(parent.ownerDocument.createCDATASection(text));\n    }\n    static setText(parent, text, isCDATA = false) {\n        while (parent.firstChild != null)\n            parent.removeChild(parent.firstChild);\n        this.appendText(parent, text, isCDATA);\n    }\n    static findElement(parent, tagName) {\n        if (parent == null)\n            return null;\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE && node.nodeName == tagName)\n                return node;\n            node = node.nextSibling;\n        }\n        return null;\n    }\n    static findChildElements(parent, tagName) {\n        if (parent == null)\n            return [];\n        let list = [];\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE && node.nodeName === tagName)\n                list.push(node);\n            node = node.nextSibling;\n        }\n        return list;\n    }\n    static childElements(parent) {\n        if (parent == null)\n            return [];\n        let list = [];\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE)\n                list.push(node);\n            node = node.nextSibling;\n        }\n        return list;\n    }\n}\nXML.customParser = null;\nXML.customSerial = null;\n//# sourceMappingURL=XML.js.map","import { Box, Pos, Size } from './Geom';\nimport { XML } from './XML';\nexport function dom(obj) {\n    if (typeof obj == 'string')\n        return DOM.parse(obj);\n    if (obj instanceof DOM)\n        return obj;\n    return new DOM(obj);\n}\nexport function domLegacy(obj) {\n    if (obj == null)\n        return null;\n    if (obj.jquery)\n        return dom(obj[0]);\n    return dom(obj);\n}\nexport class DOM {\n    constructor(el) {\n        this.el = el;\n    }\n    get elHTML() { return this.el; }\n    get elInput() { return this.el; }\n    get elCanvas() { return this.el; }\n    static parse(xhtml) {\n        let xml = XML.parseXML(xhtml);\n        if (xml == null)\n            throw 'Invalid XHTML string: ' + xhtml;\n        let html = xml.documentElement.outerHTML;\n        let template = document.createElement('template');\n        template.innerHTML = html;\n        return new DOM(template.content.firstChild);\n    }\n    static find(selector) {\n        let el = document.querySelector(selector);\n        return el ? new DOM(el) : null;\n    }\n    static findAll(selector) {\n        let nodeList = document.querySelectorAll(selector);\n        let domList = [];\n        for (let n = 0; n < nodeList.length; n++)\n            domList.push(new DOM(nodeList.item(n)));\n        return domList;\n    }\n    parent() {\n        let parent = this.el.parentElement;\n        return parent ? new DOM(parent) : null;\n    }\n    ancestor(selector) {\n        let el = this.el.closest(selector);\n        return el ? new DOM(el) : null;\n    }\n    children(tag) {\n        let domList = [];\n        for (let child = this.el.firstElementChild; child; child = child.nextElementSibling) {\n            if (tag && child.tagName.toLocaleLowerCase() != tag.toLocaleLowerCase())\n                continue;\n            domList.push(new DOM(child));\n        }\n        return domList;\n    }\n    find(selector) {\n        let el = this.el.querySelector(selector);\n        return el ? new DOM(el) : null;\n    }\n    findAll(selector) {\n        let nodeList = this.el.querySelectorAll(selector);\n        let domList = [];\n        for (let n = 0; n < nodeList.length; n++)\n            domList.push(new DOM(nodeList.item(n)));\n        return domList;\n    }\n    exists() {\n        return document.documentElement.contains(this.el);\n    }\n    isVisible() {\n        return this.elHTML.offsetWidth > 0 || this.elHTML.offsetHeight > 0 || this.elHTML.getClientRects().length > 0;\n    }\n    append(child) {\n        this.el.append(child.el);\n    }\n    appendTo(parent) {\n        if (parent instanceof DOM)\n            parent.el.append(this.el);\n        else\n            parent.appendChild(this.el);\n        return this;\n    }\n    prepend(child) {\n        this.el.prepend(child.el);\n    }\n    prependTo(parent) {\n        if (parent instanceof DOM)\n            parent.el.prepend(this.el);\n        else\n            parent.append(this.el);\n        return this;\n    }\n    insertBefore(ref) {\n        ref.el.parentElement.insertBefore(this.el, ref.el);\n        return this;\n    }\n    insertAfter(ref) {\n        let before = ref.el.nextElementSibling;\n        if (before)\n            ref.el.parentElement.insertBefore(this.el, before);\n        else\n            ref.el.parentElement.append(this.el);\n        return this;\n    }\n    remove() {\n        this.el.remove();\n    }\n    empty() {\n        this.el.innerHTML = '';\n    }\n    getHTML() {\n        return this.el.innerHTML;\n    }\n    setHTML(html) {\n        this.el.innerHTML = html;\n    }\n    appendHTML(xhtml) {\n        let xml = XML.parseXML('<z>' + xhtml + '</z>');\n        if (xml == null)\n            throw 'Invalid XHTML string: ' + xhtml;\n        let html = xml.documentElement.innerHTML;\n        this.el.insertAdjacentHTML('beforeend', html);\n    }\n    getText() {\n        return this.el.textContent;\n    }\n    setText(text) {\n        this.el.textContent = text;\n    }\n    appendText(text) {\n        let content = document.createTextNode(text);\n        this.el.appendChild(content);\n    }\n    getValue() {\n        return this.el.value;\n    }\n    setValue(str) {\n        this.el.value = str || '';\n    }\n    getCSS(key) {\n        return this.elHTML.style.getPropertyValue(key);\n    }\n    setCSS(key, value) {\n        this.elHTML.style.setProperty(key, value === null || value === void 0 ? void 0 : value.toString());\n    }\n    css(dict) {\n        for (let key in dict)\n            this.setCSS(key, dict[key].toString());\n        return this;\n    }\n    getAttr(key) {\n        if (!this.el.hasAttribute(key))\n            return null;\n        return this.el.getAttribute(key);\n    }\n    setAttr(key, value) {\n        this.el.setAttribute(key, value);\n    }\n    attr(dict) {\n        for (let key in dict)\n            this.setAttr(key, dict[key].toString());\n        return this;\n    }\n    addClass(clsnames) {\n        for (let cls of clsnames.split(' '))\n            if (cls)\n                this.elHTML.classList.add(cls);\n    }\n    removeClass(clsnames) {\n        for (let cls of clsnames.split(' '))\n            if (cls)\n                this.elHTML.classList.remove(cls);\n    }\n    hasClass(clsname) {\n        return this.elHTML.classList.contains(clsname);\n    }\n    setClass(clsname, flag) {\n        if (flag)\n            this.addClass(clsname);\n        else\n            this.removeClass(clsname);\n    }\n    class(clsname) {\n        this.addClass(clsname);\n        return this;\n    }\n    toggleClass(dict) {\n        for (let key in dict) {\n            if (dict[key])\n                this.elHTML.classList.add(key);\n            else\n                this.elHTML.classList.remove(key);\n        }\n    }\n    width() {\n        return this.elHTML.offsetWidth;\n    }\n    height() {\n        return this.elHTML.offsetHeight;\n    }\n    offset() {\n        let rect = this.el.getBoundingClientRect();\n        let win = this.el.ownerDocument.defaultView;\n        return new Pos(rect.left + win.pageXOffset, rect.top + win.pageYOffset);\n    }\n    size() {\n        return new Size(this.width(), this.height());\n    }\n    area() {\n        let pos = this.offset();\n        return new Box(pos.x, pos.y, this.width(), this.height());\n    }\n    setBoundaryPixels(x, y, w, h) {\n        this.css({ 'left': `${x}px`, 'top': `${y}px`, 'width': `${w}px`, 'height': `${h}px` });\n    }\n    setSizePixels(w, h) {\n        this.css({ 'width': `${w}px`, 'height': `${h}px` });\n    }\n    hasFocus() {\n        return this.el === document.activeElement;\n    }\n    grabFocus(delay = false) {\n        if (delay)\n            setTimeout(() => this.grabFocus(), 10);\n        else\n            this.elHTML.focus();\n    }\n    removeEvent(id, callback) {\n        this.el.removeEventListener(id, callback);\n    }\n    onKeyDown(callback) {\n        this.el.addEventListener('keydown', callback);\n    }\n    onKeyUp(callback) {\n        this.el.addEventListener('keyup', callback);\n    }\n    onKeyPress(callback) {\n        this.el.addEventListener('keypress', callback);\n    }\n    onScroll(callback) {\n        this.el.addEventListener('scroll', callback);\n    }\n    onWheel(callback) {\n        this.el.addEventListener('wheel', callback);\n    }\n    onClick(callback) {\n        this.el.addEventListener('click', callback);\n    }\n    onContextMenu(callback) {\n        this.el.addEventListener('contextmenu', callback);\n    }\n    onDblClick(callback) {\n        this.el.addEventListener('dblclick', callback);\n    }\n    onMouseDown(callback) {\n        this.el.addEventListener('mousedown', callback);\n    }\n    onMouseUp(callback) {\n        this.el.addEventListener('mouseup', callback);\n    }\n    onMouseEnter(callback) {\n        this.el.addEventListener('mouseenter', callback);\n    }\n    onMouseLeave(callback) {\n        this.el.addEventListener('mouseleave', callback);\n    }\n    onMouseMove(callback) {\n        this.el.addEventListener('mousemove', callback);\n    }\n    onMouseOver(callback) {\n        this.el.addEventListener('mouseover', callback);\n    }\n    onChange(callback) {\n        this.el.addEventListener('change', callback);\n    }\n    onInput(callback) {\n        this.el.addEventListener('input', callback);\n    }\n    onTouchStart(callback) {\n        this.el.addEventListener('touchstart', callback);\n    }\n    onTouchMove(callback) {\n        this.el.addEventListener('touchmove', callback);\n    }\n    onTouchCancel(callback) {\n        this.el.addEventListener('touchcancel', callback);\n    }\n    onTouchEnd(callback) {\n        this.el.addEventListener('touchend', callback);\n    }\n}\n//# sourceMappingURL=dom.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { dom, domLegacy } from './dom';\nimport { Size } from './Geom';\nimport { Vec } from './Vec';\nexport function safeInt(str, def = 0) {\n    if (str == null || str.length == 0)\n        return def;\n    let val = str.startsWith('0x') ? parseInt(str.substring(2), 16) :\n        str.startsWith('#') ? parseInt(str.substring(1), 16) : parseInt(str);\n    return isNaN(val) ? def : val;\n}\nexport function safeFloat(str, def = 0) {\n    if (str == null || str.length == 0)\n        return def;\n    let val = parseFloat(str);\n    return isNaN(val) ? def : val;\n}\nexport function newElement(parent, tag, attr) {\n    let domNew = dom(`<${tag}/>`);\n    if (attr)\n        domNew.attr(attr);\n    domLegacy(parent).append(domNew);\n    return domNew.el;\n}\nexport function addText(parent, text) {\n    let el = dom(parent).el;\n    el.appendChild(document.createTextNode(text));\n}\nexport function plural(count) {\n    return count == 1 ? '' : 's';\n}\nexport function formatDouble(value, sigfig) {\n    if (value == null)\n        return '';\n    let str = value.toPrecision(sigfig);\n    if (str.indexOf('.') > 0) {\n        while (str.endsWith('0'))\n            str = str.substring(0, str.length - 1);\n        if (str.endsWith('.'))\n            str = str.substring(0, str.length - 1);\n    }\n    return str;\n}\nexport function htmlToRGB(col) {\n    if (col == null || col.charAt(0) != '#' || col.length != 7)\n        return null;\n    return parseInt(col.substring(1), 16);\n}\nexport function colourCode(col) {\n    let hex = (col & 0xFFFFFF).toString(16);\n    while (hex.length < 6)\n        hex = '0' + hex;\n    return '#' + hex;\n}\nexport function colourAlpha(col) {\n    let transp = (col >>> 24) & 0xFF;\n    return transp == 0 ? 1 : transp == 0xFF ? 0 : 1 - (transp * (1.0 / 255));\n}\nconst ONE_OVER_255 = 1.0 / 255;\nexport function colourCanvas(col) {\n    if (col == 0xFFFFFF)\n        return 'white';\n    if (col == 0x000000)\n        return 'black';\n    if (col == -1)\n        return null;\n    if (col >= 0 && col <= 0xFFFFFF)\n        return colourCode(col);\n    const t = ((col >> 24) & 0xFF) * ONE_OVER_255;\n    const r = ((col >> 16) & 0xFF);\n    const g = ((col >> 8) & 0xFF);\n    const b = (col & 0xFF);\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + (1 - t) + ')';\n}\nexport function blendRGB(fract, rgb1, rgb2, rgb3) {\n    fract = Math.max(0, Math.min(1, fract));\n    let r1 = ((rgb1 >> 16) & 0xFF) * ONE_OVER_255, g1 = ((rgb1 >> 8) & 0xFF) * ONE_OVER_255, b1 = (rgb1 & 0xFF) * ONE_OVER_255;\n    let r2 = ((rgb2 >> 16) & 0xFF) * ONE_OVER_255, g2 = ((rgb2 >> 8) & 0xFF) * ONE_OVER_255, b2 = (rgb2 & 0xFF) * ONE_OVER_255;\n    let R, G, B;\n    if (rgb3 == null) {\n        let f1 = 1 - fract, f2 = fract;\n        R = Math.round(0xFF * (f1 * r1 + f2 * r2));\n        G = Math.round(0xFF * (f1 * g1 + f2 * g2));\n        B = Math.round(0xFF * (f1 * b1 + f2 * b2));\n    }\n    else {\n        let r3 = ((rgb3 >> 16) & 0xFF) * ONE_OVER_255, g3 = ((rgb3 >> 8) & 0xFF) * ONE_OVER_255, b3 = (rgb3 & 0xFF) * ONE_OVER_255;\n        if (fract < 0.5) {\n            let f2 = fract * 2, f1 = 1 - f2;\n            R = Math.round(0xFF * (f1 * r1 + f2 * r2));\n            G = Math.round(0xFF * (f1 * g1 + f2 * g2));\n            B = Math.round(0xFF * (f1 * b1 + f2 * b2));\n        }\n        else {\n            let f2 = (fract - 0.5) * 2, f1 = 1 - f2;\n            R = Math.round(0xFF * (f1 * r2 + f2 * r3));\n            G = Math.round(0xFF * (f1 * g2 + f2 * g3));\n            B = Math.round(0xFF * (f1 * b2 + f2 * b3));\n        }\n    }\n    return (R << 16) | (G << 8) | B;\n}\nexport function formatDate(date) {\n    const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    let day = date.getDate(), mon = date.getMonth(), year = date.getFullYear();\n    return day + '-' + MONTHS[mon] + '-' + year;\n}\nexport function nodeText(node) {\n    let ret = '';\n    if (!node)\n        return '';\n    node = node.firstChild;\n    while (node) {\n        if (node.nodeType == 3 || node.nodeType == 4)\n            ret += node.nodeValue;\n        node = node.nextSibling;\n    }\n    return ret;\n}\nexport function isDef(v) {\n    return !(v === null || typeof v === 'undefined');\n}\nexport function notDef(v) {\n    return v === null || typeof v === 'undefined';\n}\nexport function eventCoords(event, container) {\n    let pos = domLegacy(container).offset();\n    let relX = event.pageX - pos.x;\n    let relY = event.pageY - pos.y;\n    return [relX, relY];\n}\nexport function setBoundaryPixels(dom, x, y, w, h) {\n    dom.css({ 'left': x + 'px', 'top': y + 'px', 'width': w + 'px', 'height': h + 'px' });\n}\nexport function getBoundaryPixelsDOM(dom) {\n    let offset = dom.offset();\n    return [offset.x, offset.y, dom.width(), dom.height()];\n}\nexport function getOffsetPixelsDOM(dom) {\n    return [dom.elHTML.offsetLeft, dom.elHTML.offsetTop, dom.elHTML.offsetWidth, dom.elHTML.offsetHeight];\n}\nexport function norm_xy(dx, dy) {\n    return Math.hypot(dx, dy);\n}\nexport function norm_xyz(dx, dy, dz) {\n    return Math.hypot(dx, dy, dz);\n}\nexport function norm2_xy(dx, dy) {\n    return dx * dx + dy * dy;\n}\nexport function norm2_xyz(dx, dy, dz) {\n    return dx * dx + dy * dy + dz * dz;\n}\nexport function signum(v) {\n    return v < 0 ? -1 : v > 0 ? 1 : 0;\n}\nexport function sqr(v) {\n    return v * v;\n}\nexport function invZ(v) { return v == 0 ? 0 : 1.0 / v; }\nexport function fltEqual(v1, v2) { return v1 == v2 || Math.abs(v1 - v2) <= 1E-7 * Math.max(v1, v2); }\nexport function realEqual(v1, v2) { return v1 == v2 || Math.abs(v1 - v2) <= 1E-14 * Math.max(v1, v2); }\nexport function randomInt(size) {\n    if (size <= 1)\n        return 0;\n    return Math.floor(Math.random() * size);\n}\nexport const TWOPI = 2 * Math.PI;\nexport const INV_TWOPI = 1.0 / TWOPI;\nexport const DEGRAD = Math.PI / 180;\nexport const RADDEG = 180 / Math.PI;\nexport function angleNorm(th) {\n    if (th == -Math.PI)\n        return Math.PI;\n    if (th < -Math.PI) {\n        let mod = Math.ceil((-th - Math.PI) * INV_TWOPI);\n        return th + mod * TWOPI;\n    }\n    if (th > Math.PI) {\n        let mod = Math.ceil((th - Math.PI) * INV_TWOPI);\n        return th - mod * TWOPI;\n    }\n    return th;\n}\nexport function angleDiff(th1, th2) {\n    let theta = angleNorm(th1) - angleNorm(th2);\n    return theta - (theta > Math.PI ? TWOPI : 0) + (theta <= -Math.PI ? TWOPI : 0);\n}\nexport function angleDiffPos(th1, th2) {\n    let theta = angleNorm(th1) - angleNorm(th2);\n    return theta + (theta < 0 ? TWOPI : 0);\n}\nexport function sortAngles(theta) {\n    if (theta == null || theta.length < 2)\n        return theta;\n    theta = theta.slice(0);\n    for (let n = 0; n < theta.length; n++)\n        theta[n] = angleNorm(theta[n]);\n    Vec.sort(theta);\n    while (true) {\n        let a = theta[theta.length - 1], b = theta[0], c = theta[1];\n        if (angleDiff(b, a) <= angleDiff(c, b))\n            break;\n        for (let n = theta.length - 1; n > 0; n--)\n            theta[n] = theta[n - 1];\n        theta[0] = a;\n    }\n    return theta;\n}\nexport function uniqueAngles(theta, threshold) {\n    theta = sortAngles(theta);\n    for (let n = 1; n < theta.length; n++) {\n        if (Math.abs(angleDiff(theta[n], theta[n - 1])) <= threshold) {\n            theta.splice(n, 1);\n            n--;\n        }\n    }\n    return theta;\n}\nexport function minArray(a) {\n    if (a == null || a.length == 0)\n        return 0;\n    let v = a[0];\n    for (let n = 1; n < a.length; n++)\n        v = Math.min(v, a[n]);\n    return v;\n}\nexport function maxArray(a) {\n    if (a == null || a.length == 0)\n        return 0;\n    let v = a[0];\n    for (let n = 1; n < a.length; n++)\n        v = Math.max(v, a[n]);\n    return v;\n}\nexport function findNode(parent, name) {\n    if (parent == null)\n        return null;\n    let node = parent.firstChild;\n    while (node) {\n        if (node.nodeName == name)\n            return node;\n        node = node.nextSibling;\n    }\n    return null;\n}\nexport function findNodes(parent, name) {\n    if (parent == null)\n        return null;\n    let node = parent.firstChild;\n    let list = [];\n    while (node) {\n        if (node.nodeName == name)\n            list.push(node);\n        node = node.nextSibling;\n    }\n    return list;\n}\nexport function pathRoundedRect(x1, y1, x2, y2, rad) {\n    let path = new Path2D();\n    path.moveTo(x2 - rad, y1);\n    path.quadraticCurveTo(x2, y1, x2, y1 + rad);\n    path.lineTo(x2, y2 - rad);\n    path.quadraticCurveTo(x2, y2, x2 - rad, y2);\n    path.lineTo(x1 + rad, y2);\n    path.quadraticCurveTo(x1, y2, x1, y2 - rad);\n    path.lineTo(x1, y1 + rad);\n    path.quadraticCurveTo(x1, y1, x1 + rad, y1);\n    path.closePath();\n    return path;\n}\nexport function coordsRoundedRect(x1, y1, x2, y2, rad) {\n    let px = [x2 - rad, x2, x2, x2, x2, x2 - rad, x1 + rad, x1, x1, x1, x1, x1 + rad];\n    let py = [y1, y1, y1 + rad, y2 - rad, y2, y2, y2, y2, y2 - rad, y1 + rad, y1, y1];\n    let ctrl = [false, true, false, false, true, false, false, true, false, false, true, false];\n    return [px, py, ctrl];\n}\nexport function drawLine(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\nexport const ASCENT_FUDGE = 1.4;\nexport function fontSansSerif(ascent) { return `${ascent * ASCENT_FUDGE}px sans-serif`; }\nexport function pixelDensity() {\n    if ('devicePixelRatio' in window && window.devicePixelRatio > 1)\n        return window.devicePixelRatio;\n    return 1;\n}\nexport function clone(data) {\n    if (data == null)\n        return null;\n    if (Array.isArray(data))\n        return data.slice(0);\n    if (typeof data != 'object')\n        return data;\n    let result = {};\n    for (let key in data)\n        result[key] = data[key];\n    return result;\n}\nexport function deepClone(data) {\n    if (data == null)\n        return null;\n    if (typeof data == 'function')\n        return null;\n    if (typeof data != 'object')\n        return data;\n    let result = Array.isArray(data) ? [] : {};\n    for (let key in data) {\n        let val = data[key];\n        result[key] = typeof val === 'object' ? deepClone(val) : val;\n    }\n    return result;\n}\nexport function escapeHTML(text) {\n    if (!text)\n        return '';\n    const map = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#039;' };\n    return text.replace(/[&<>\"']/g, (m) => map[m]);\n}\nexport function orBlank(str) { return str == null ? '' : str; }\nexport function dictValues(dict) {\n    let list = [];\n    for (let key in dict)\n        list.push(dict[key]);\n    return list;\n}\nexport function zip(u, v) {\n    return u.map((a, i) => [a, v[i]]);\n}\nexport function toUTF8(str) {\n    let data = [], stripe = '';\n    const sz = str.length;\n    for (let n = 0; n < sz; n++) {\n        let charcode = str.charCodeAt(n);\n        if (charcode < 0x80)\n            stripe += str.charAt(n);\n        else if (charcode < 0x800) {\n            stripe += String.fromCharCode(0xc0 | (charcode >> 6));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n            stripe += String.fromCharCode(0xe0 | (charcode >> 12));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3F));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        else {\n            n++;\n            charcode = 0x10000 + (((charcode & 0x3FF) << 10) | (str.charCodeAt(n) & 0x3FF));\n            stripe += String.fromCharCode(0xf0 | (charcode >> 18));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 12) & 0x3F));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3F));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        if (stripe.length > 100) {\n            data.push(stripe);\n            stripe = '';\n        }\n    }\n    data.push(stripe);\n    return data.join('');\n}\nexport function fromUTF8(str) {\n    let data = [], stripe = '';\n    const sz = str.length;\n    for (let n = 0; n < sz; n++) {\n        let value = str.charCodeAt(n);\n        if (value < 0x80)\n            stripe += str.charAt(n);\n        else if (value > 0xBF && value < 0xE0) {\n            stripe += String.fromCharCode((value & 0x1F) << 6 | str.charCodeAt(n + 1) & 0x3F);\n            n++;\n        }\n        else if (value > 0xDF && value < 0xF0) {\n            str += String.fromCharCode((value & 0x0F) << 12 | (str.charCodeAt(n + 1) & 0x3F) << 6 | str.charCodeAt(n + 2) & 0x3F);\n            n += 2;\n        }\n        else {\n            let charCode = ((value & 0x07) << 18 | (str.charCodeAt(n + 1) & 0x3F) << 12 | (str.charCodeAt(n + 2) & 0x3F) << 6 | str.charCodeAt(n + 3) & 0x3F) - 0x010000;\n            stripe += String.fromCharCode(charCode >> 10 | 0xD800, charCode & 0x03FF | 0xDC00);\n            n += 3;\n        }\n        if (stripe.length > 100) {\n            data.push(stripe);\n            stripe = '';\n        }\n    }\n    data.push(stripe);\n    return data.join('');\n}\nexport function jsonPrettyPrint(json) {\n    let lines = JSON.stringify(json, null, 1).split(/\\n/);\n    for (let n = 0; n < lines.length; n++) {\n        lines[n] = lines[n].trim();\n        if (lines[n].length > 1 && (lines[n].endsWith('{') || lines[n].endsWith('['))) {\n            let ch = lines[n].charAt(lines[n].length - 1);\n            lines[n] = lines[n].substring(0, lines[n].length - 1);\n            lines.splice(n + 1, 0, ch);\n            n--;\n        }\n    }\n    let indent = 0;\n    for (let n = 0; n < lines.length; n++) {\n        let orig = lines[n];\n        if (orig == ']' || orig == '}' || orig == '],' || orig == '},')\n            indent--;\n        lines[n] = '\\t'.repeat(indent) + orig;\n        if (orig == '[' || orig == '{')\n            indent++;\n    }\n    return lines.join('\\n');\n}\nexport var KeyCode;\n(function (KeyCode) {\n    KeyCode[\"Backspace\"] = \"Backspace\";\n    KeyCode[\"Tab\"] = \"Tab\";\n    KeyCode[\"Enter\"] = \"Enter\";\n    KeyCode[\"Escape\"] = \"Escape\";\n    KeyCode[\"Space\"] = \" \";\n    KeyCode[\"PageUp\"] = \"PageUp\";\n    KeyCode[\"PageDown\"] = \"PageDown\";\n    KeyCode[\"End\"] = \"End\";\n    KeyCode[\"Home\"] = \"Home\";\n    KeyCode[\"Left\"] = \"ArrowLeft\";\n    KeyCode[\"Right\"] = \"ArrowRight\";\n    KeyCode[\"Up\"] = \"ArrowUp\";\n    KeyCode[\"Down\"] = \"ArrowDown\";\n    KeyCode[\"Delete\"] = \"Delete\";\n    KeyCode[\"Insert\"] = \"Insert\";\n})(KeyCode || (KeyCode = {}));\nexport function readTextURL(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            let request = new XMLHttpRequest();\n            request.open('GET', url.toString(), true);\n            request.responseType = 'text';\n            request.onload = () => resolve(request.response.toString());\n            request.onerror = () => resolve(null);\n            request.send();\n        });\n    });\n}\nexport function postJSONURL(url, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            let request = new XMLHttpRequest();\n            request.open('POST', url.toString(), true);\n            request.responseType = 'text';\n            request.onload = () => {\n                let txt = request.response.toString();\n                try {\n                    resolve(JSON.parse(txt));\n                }\n                catch (ex) {\n                    let snippet = txt.substring(0, Math.min(200, txt.length)) + (txt.length > 200 ? '...etc...' : '');\n                    reject('JSON parsing error on result:' + ex + ' for text: ' + snippet);\n                }\n            };\n            request.onerror = () => reject('Failed to request URL: ' + url);\n            request.send(JSON.stringify(params));\n        });\n    });\n}\nexport function yieldDOM() {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => setTimeout(() => resolve()));\n    });\n}\nexport function pause(seconds) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => setTimeout(() => resolve(), seconds * 1000));\n    });\n}\nlet staticScrollerSize = null;\nexport function empiricalScrollerSize() {\n    if (staticScrollerSize)\n        return staticScrollerSize;\n    let outer = dom('<div/>').css({ 'visibility': 'hidden', 'width': '100px', 'height': '100px', 'overflow': 'scroll' }).appendTo(dom(document.body));\n    let inner = dom('<div/>').css({ 'width': '100%', 'height': '100%' }).appendTo(outer);\n    staticScrollerSize = new Size(100 - inner.elHTML.offsetWidth, 100 - inner.elHTML.offsetHeight);\n    outer.remove();\n    return staticScrollerSize;\n}\nexport function stringSimilarityPermutations(str1, str2) {\n    if (!str1 || !str2)\n        return 0;\n    const ch1 = Array.from(str1), len1 = ch1.length;\n    const ch2 = Array.from(str2), len2 = ch2.length;\n    let levenshteinDistance = (sz1, sz2) => {\n        let dist = [];\n        for (let i = 0; i <= sz1; i++) {\n            dist.push(Vec.numberArray(0, sz2 + 1));\n            dist[i][0] = i;\n        }\n        for (let j = 1; j <= sz2; j++)\n            dist[0][j] = j;\n        for (let j = 1; j <= sz2; j++)\n            for (let i = 1; i <= sz1; i++) {\n                let cost = ch1[i - 1] == ch2[j - 1] ? 0 : 1;\n                dist[i][j] = Math.min(Math.min(dist[i - 1][j] + 1, dist[i][j - 1] + 1), dist[i - 1][j - 1] + cost);\n            }\n        return dist[sz1][sz2];\n    };\n    let cost = ch1[len1 - 1] == ch2[len2 - 1] ? 0 : 1;\n    let lev1 = levenshteinDistance(len1 - 1, len2) + 1;\n    let lev2 = levenshteinDistance(len1, len2 - 1) + 1;\n    let lev3 = levenshteinDistance(len1 - 1, len2 - 1) + cost;\n    return Math.min(Math.min(lev1, lev2), lev3);\n}\n//# sourceMappingURL=util.js.map","import { Vec } from '../util/Vec';\nexport class Graph {\n    constructor(sz, edge1, edge2) {\n        this.nbrs = [];\n        this.indices = null;\n        this.labels = null;\n        this.props = null;\n        if (sz != null)\n            for (let n = 0; n < sz; n++)\n                this.nbrs.push([]);\n        if (edge1 != null && edge2 != null) {\n            for (let n = 0; n < edge1.length; n++) {\n                this.nbrs[edge1[n]].push(edge2[n]);\n                this.nbrs[edge2[n]].push(edge1[n]);\n            }\n        }\n    }\n    clone() {\n        let g = new Graph();\n        for (let nbr of this.nbrs)\n            g.nbrs.push(nbr.slice(0));\n        g.indices = this.indices == null ? null : this.indices.slice(0);\n        g.labels = this.labels == null ? null : this.labels.slice(0);\n        g.props = this.props == null ? null : this.props.slice(0);\n        return g;\n    }\n    static fromMolecule(mol) {\n        let g = new Graph();\n        g.indices = [];\n        for (let n = 0; n < mol.numAtoms; n++) {\n            g.nbrs.push([]);\n            g.indices.push(n + 1);\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            g.nbrs[bfr].push(bto);\n            g.nbrs[bto].push(bfr);\n        }\n        return g;\n    }\n    static fromNeighbours(nbrs) {\n        let g = new Graph();\n        g.nbrs = nbrs;\n        return g;\n    }\n    toString() {\n        let buff = '#nodes=' + this.nbrs.length;\n        for (let n = 0; n < this.nbrs.length; n++) {\n            buff += ' ' + n + ':{' + this.nbrs[n] + '}';\n            if (n < Vec.len(this.indices))\n                buff += '[i=' + this.indices[n] + ']';\n            if (n < Vec.len(this.labels))\n                buff += '[l=' + this.labels[n] + ']';\n        }\n        return buff;\n    }\n    get numNodes() { return this.nbrs.length; }\n    numEdges(node) { return this.nbrs[node].length; }\n    getEdge(node, edge) { return this.nbrs[node][edge]; }\n    getEdges(node) { return this.nbrs[node]; }\n    getIndex(node) { return this.indices == null ? 0 : this.indices[node]; }\n    setIndex(node, idx) {\n        if (this.indices == null)\n            this.indices = Vec.numberArray(0, this.nbrs.length);\n        this.indices[node] = idx;\n    }\n    getLabel(node) { return this.labels == null ? null : this.labels[node]; }\n    setLabel(node, lbl) {\n        if (this.labels == null)\n            this.labels = Vec.stringArray('', this.nbrs.length);\n        this.labels[node] = lbl;\n    }\n    getProperty(node) { return this.props == null ? null : this.props[node]; }\n    setProperty(node, prp) {\n        if (this.props == null)\n            this.props = new Array(this.nbrs.length);\n        this.props[node] = prp;\n    }\n    addNode() {\n        this.nbrs.push([]);\n        if (this.indices != null)\n            this.indices.push(0);\n        if (this.labels != null)\n            this.labels.push('');\n        if (this.props != null)\n            this.props.push(null);\n        return this.nbrs.length - 1;\n    }\n    hasEdge(node1, node2) {\n        if (this.nbrs[node1].length <= this.nbrs[node2].length)\n            return this.nbrs[node1].indexOf(node2) >= 0;\n        else\n            return this.nbrs[node2].indexOf(node1) >= 0;\n    }\n    addEdge(node1, node2) {\n        this.nbrs[node1].push(node2);\n        this.nbrs[node2].push(node1);\n    }\n    removeEdge(node1, node2) {\n        let i1 = this.nbrs[node1].indexOf(node2), i2 = this.nbrs[node2].indexOf(node1);\n        if (i1 >= 0)\n            this.nbrs[node1].splice(i1, 1);\n        if (i2 >= 0)\n            this.nbrs[node2].splice(i2, 1);\n    }\n    isolateNode(node) {\n        for (let o of this.nbrs[node]) {\n            let i = this.nbrs[o].indexOf(node);\n            if (i >= 0)\n                this.nbrs[o].splice(i, 1);\n        }\n        this.nbrs[node] = [];\n    }\n    keepNodesMask(mask) {\n        const oldsz = this.nbrs.length, newsz = Vec.maskCount(mask);\n        if (newsz == oldsz)\n            return;\n        if (newsz == 0) {\n            this.nbrs = [];\n            this.indices = null;\n            this.labels = null;\n            this.props = null;\n            return;\n        }\n        let newmap = Vec.maskMap(mask);\n        let newnbrs = [];\n        for (let n = 0; n < newsz; n++)\n            newnbrs.push([]);\n        for (let n = 0, pos = 0; n < oldsz; n++)\n            if (mask[n]) {\n                for (let i of this.nbrs[n])\n                    if (mask[i])\n                        newnbrs[pos].push(newmap[i]);\n                pos++;\n            }\n        this.nbrs = newnbrs;\n        if (this.indices != null)\n            this.indices = Vec.maskGet(this.indices, mask);\n        if (this.labels != null)\n            this.labels = Vec.maskGet(this.labels, mask);\n        if (this.props != null)\n            this.props = Vec.maskGet(this.props, mask);\n    }\n    keepNodesIndex(idx) { this.keepNodesMask(Vec.idxMask(idx, this.numNodes)); }\n    removeNodesMask(mask) { this.keepNodesMask(Vec.notMask(mask)); }\n    removeNodesIndex(idx) { this.removeNodesMask(Vec.idxMask(idx, this.numNodes)); }\n    subgraphIndex(idx) {\n        const nsz = idx.length;\n        let g = new Graph(nsz);\n        if (this.indices != null || this.labels != null || this.props != null)\n            for (let n = 0; n < nsz; n++) {\n                if (this.indices != null)\n                    g.setIndex(n, this.indices[idx[n]]);\n                if (this.labels != null)\n                    g.setLabel(n, this.labels[idx[n]]);\n                if (this.props != null)\n                    g.setProperty(n, this.props[idx[n]]);\n            }\n        for (let i = 0; i < nsz; i++) {\n            for (let n of this.nbrs[idx[i]]) {\n                let j = idx.indexOf(n);\n                if (j > i)\n                    g.addEdge(i, j);\n            }\n        }\n        return g;\n    }\n    subgraphMask(mask) {\n        let g = this.clone();\n        g.keepNodesMask(mask);\n        return g;\n    }\n    calculateComponents() {\n        const sz = this.nbrs.length;\n        if (sz == 0)\n            return [];\n        let cc = Vec.numberArray(0, sz);\n        cc[0] = 1;\n        let first = 1, high = 1;\n        while (true) {\n            while (first < sz && cc[first] > 0) {\n                first++;\n            }\n            if (first >= sz)\n                break;\n            let anything = false;\n            for (let i = first; i < sz; i++)\n                if (cc[i] == 0) {\n                    for (let j = 0; j < this.nbrs[i].length; j++) {\n                        if (cc[this.nbrs[i][j]] != 0) {\n                            cc[i] = cc[this.nbrs[i][j]];\n                            anything = true;\n                        }\n                    }\n                }\n            if (!anything)\n                cc[first] = ++high;\n        }\n        return cc;\n    }\n    calculateComponentGroups() {\n        if (this.nbrs.length == 0)\n            return [];\n        let cc = this.calculateComponents();\n        let sz = Vec.max(cc);\n        let grp = [];\n        for (let n = 0; n < sz; n++)\n            grp.push([]);\n        for (let n = 0; n < cc.length; n++)\n            grp[cc[n] - 1].push(n);\n        return grp;\n    }\n    calculateRingBlocks() {\n        let sz = this.numNodes, nbrs = this.nbrs;\n        if (sz == 0)\n            return [[], 0];\n        let rblk = new Array(this.numNodes);\n        let visited = Vec.booleanArray(false, sz);\n        Vec.setTo(rblk, 0);\n        let path = new Array(sz + 1);\n        let plen = 0, numVisited = 0;\n        while (true) {\n            let last, current;\n            if (plen == 0) {\n                last = -1;\n                for (current = 0; visited[current]; current++) { }\n            }\n            else {\n                last = path[plen - 1];\n                current = -1;\n                for (let n = 0; n < nbrs[last].length; n++)\n                    if (!visited[nbrs[last][n]]) {\n                        current = nbrs[last][n];\n                        break;\n                    }\n            }\n            if (current >= 0 && plen >= 2) {\n                let back = path[plen - 1];\n                for (let n = 0; n < nbrs[current].length; n++) {\n                    let join = nbrs[current][n];\n                    if (join != back && visited[join]) {\n                        path[plen] = current;\n                        for (let i = plen; i == plen || path[i + 1] != join; i--) {\n                            let id = rblk[path[i]];\n                            if (id == 0)\n                                rblk[path[i]] = last;\n                            else if (id != last) {\n                                for (let j = 0; j < sz; j++)\n                                    if (rblk[j] == id)\n                                        rblk[j] = last;\n                            }\n                        }\n                    }\n                }\n            }\n            if (current >= 0) {\n                visited[current] = true;\n                path[plen++] = current;\n                numVisited++;\n            }\n            else {\n                plen--;\n            }\n            if (numVisited == sz)\n                break;\n        }\n        let nextID = 0;\n        for (let i = 0; i < sz; i++)\n            if (rblk[i] > 0) {\n                nextID--;\n                for (let j = sz - 1; j >= i; j--)\n                    if (rblk[j] == rblk[i])\n                        rblk[j] = nextID;\n            }\n        for (let i = 0; i < sz; i++)\n            rblk[i] = -rblk[i];\n        return [rblk, -nextID];\n    }\n    calculateRingBlockGroups() {\n        let [rblk, sz] = this.calculateRingBlocks();\n        if (sz == 0)\n            return [];\n        let cap = Vec.numberArray(0, sz);\n        for (let n = 0; n < rblk.length; n++)\n            if (rblk[n] > 0)\n                cap[rblk[n] - 1]++;\n        let grp = new Array(sz);\n        for (let n = 0; n < sz; n++) {\n            grp[n] = new Array(cap[n]);\n            cap[n] = 0;\n        }\n        for (let n = 0; n < rblk.length; n++) {\n            let i = rblk[n] - 1;\n            if (i < 0)\n                continue;\n            grp[i][cap[i]++] = n;\n        }\n        return grp;\n    }\n    findRingsOfSize(size) {\n        let [rblk, num] = this.calculateRingBlocks();\n        if (num == 0)\n            return [];\n        let rings = [];\n        let mask = new Array(this.numNodes);\n        for (let r = 1; r <= num; r++) {\n            for (let n = 0; n < this.numNodes; n++)\n                mask[n] = rblk[n] == r;\n            let newRings = this.findRingsOfSizeMask(size, mask);\n            for (let n = 0; n < newRings.length; n++)\n                rings.push(newRings[n]);\n        }\n        return rings;\n    }\n    findRingsOfSizeMask(size, mask) {\n        let rings = [];\n        for (let n = 0; n < this.numNodes; n++)\n            if (mask[n]) {\n                let path = new Array(size);\n                path[0] = n;\n                this.recursiveRingFind(path, 1, size, mask, rings);\n            }\n        return rings;\n    }\n    calculateBFS(idx) {\n        let ret = Vec.numberArray(-1, this.numNodes);\n        ret[idx] = 0;\n        let curnum = 0, lsz = 1, watermark = 0;\n        let list = Vec.numberArray(0, this.numNodes);\n        list[0] = idx;\n        while (true) {\n            let newsz = lsz;\n            for (let n = watermark; n < lsz; n++) {\n                for (let i = 0; i < this.nbrs[list[n]].length; i++) {\n                    let j = this.nbrs[list[n]][i];\n                    if (ret[j] < 0) {\n                        ret[j] = curnum + 1;\n                        list[newsz++] = j;\n                    }\n                }\n            }\n            if (newsz == lsz)\n                break;\n            watermark = lsz;\n            lsz = newsz;\n            curnum++;\n        }\n        return ret;\n    }\n    calculateGravity() {\n        const sz = this.numNodes;\n        const { nbrs } = this;\n        let wght = Vec.numberArray(1, sz), wmod = Vec.numberArray(0, sz);\n        for (let n = 0; n < sz; n++) {\n            Vec.setTo(wmod, wght);\n            for (let i = 0; i < sz; i++)\n                for (let j = nbrs[i].length - 1; j >= 0; j--)\n                    wmod[i] += wght[nbrs[i][j]];\n            Vec.setTo(wght, wmod);\n        }\n        return wght;\n    }\n    recursiveRingFind(path, psize, capacity, mask, rings) {\n        if (psize < capacity) {\n            let last = path[psize - 1];\n            for (let n = 0; n < this.nbrs[last].length; n++) {\n                let adj = this.nbrs[last][n];\n                if (!mask[adj])\n                    continue;\n                let fnd = false;\n                for (let i = 0; i < psize; i++)\n                    if (path[i] == adj) {\n                        fnd = true;\n                        break;\n                    }\n                if (!fnd) {\n                    let newPath = Vec.duplicate(path);\n                    newPath[psize] = adj;\n                    this.recursiveRingFind(newPath, psize + 1, capacity, mask, rings);\n                }\n            }\n            return;\n        }\n        let last = path[psize - 1];\n        let fnd = false;\n        for (let n = 0; n < this.nbrs[last].length; n++)\n            if (this.nbrs[last][n] == path[0]) {\n                fnd = true;\n                break;\n            }\n        if (!fnd)\n            return;\n        for (let n = 0; n < path.length; n++) {\n            let count = 0, p = path[n];\n            for (let i = 0; i < this.nbrs[p].length; i++)\n                if (path.indexOf(this.nbrs[p][i]) >= 0)\n                    count++;\n            if (count != 2)\n                return;\n        }\n        let first = 0;\n        for (let n = 1; n < psize; n++)\n            if (path[n] < path[first])\n                first = n;\n        let fm = (first - 1 + psize) % psize, fp = (first + 1) % psize;\n        let flip = path[fm] < path[fp];\n        if (first != 0 || flip) {\n            let newPath = new Array(psize);\n            for (let n = 0; n < psize; n++)\n                newPath[n] = path[(first + (flip ? psize - n : n)) % psize];\n            path = newPath;\n        }\n        for (let n = 0; n < rings.length; n++) {\n            let look = rings[n];\n            let same = true;\n            for (let i = 0; i < psize; i++)\n                if (look[i] != path[i]) {\n                    same = false;\n                    break;\n                }\n            if (same)\n                return;\n        }\n        rings.push(path);\n    }\n}\n//# sourceMappingURL=Graph.js.map","import { Chemistry } from '../data/Chemistry';\nimport { Graph } from '../data/Graph';\nimport { Molecule } from '../data/Molecule';\nimport { Vec } from '../util/Vec';\nexport class ResonanceRemover {\n    constructor(mol, resBonds, atomHyd = []) {\n        this.mol = mol;\n        this.resBonds = resBonds;\n        this.atomHyd = atomHyd;\n        this.maxIter = 1000;\n        this.bondOrders = [];\n        this.tolerant = false;\n        this.mol = mol;\n        this.resBonds = resBonds;\n        this.atomHyd = atomHyd;\n        for (let n = 1; n <= mol.numBonds; n++)\n            this.bondOrders.push(mol.bondOrder(n));\n    }\n    perform() {\n        const { mol } = this;\n        if (this.atomHyd == null) {\n            this.atomHyd = [];\n            for (let n = 1; n <= mol.numAtoms; n++)\n                this.atomHyd.push(mol.atomHExplicit(n));\n        }\n        this.correctInputMask();\n        let g = new Graph(mol.numAtoms);\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.resBonds[n - 1])\n                g.addEdge(mol.bondFrom(n) - 1, mol.bondTo(n) - 1);\n        let cc = g.calculateComponentGroups();\n        for (let n = 0; n < cc.length; n++)\n            if (cc[n].length >= 2)\n                this.processComponent(cc[n]);\n    }\n    correctInputMask() {\n        const { mol, atomHyd } = this;\n        const na = mol.numAtoms, nb = mol.numBonds;\n        let exclude = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++) {\n            let atno = mol.atomicNumber(n);\n            let val = atno == Chemistry.ELEMENT_C ? 4 :\n                atno == Chemistry.ELEMENT_N || atno == Chemistry.ELEMENT_P || atno == Chemistry.ELEMENT_B ? 3 :\n                    atno == Chemistry.ELEMENT_O || atno == Chemistry.ELEMENT_S ? 2 : -1;\n            if (val < 0) {\n                exclude[n - 1] = true;\n                continue;\n            }\n            val += mol.atomCharge(n);\n            if (atomHyd[n - 1] > 0)\n                val -= atomHyd[n - 1];\n            if (mol.atomAdjCount(n) >= val)\n                exclude[n - 1] = true;\n        }\n        for (let n = 1; n <= nb; n++)\n            if (!this.resBonds[n - 1] && mol.bondOrder(n) != 1) {\n                exclude[mol.bondFrom(n) - 1] = true;\n                exclude[mol.bondTo(n) - 1] = true;\n            }\n        this.resBonds = this.resBonds.slice(0);\n        for (let n = 0; n < nb; n++)\n            if (this.resBonds[n] && (exclude[mol.bondFrom(n + 1) - 1] || exclude[mol.bondTo(n + 1) - 1])) {\n                this.bondOrders[n] = 1;\n                this.resBonds[n] = false;\n            }\n    }\n    processComponent(nodes) {\n        const { mol, resBonds, bondOrders, atomHyd } = this;\n        let sz = nodes.length;\n        if (sz == 2) {\n            let b = mol.findBond(nodes[0] + 1, nodes[1] + 1);\n            bondOrders[b - 1] = 2;\n            return;\n        }\n        let optionalH = Vec.booleanArray(false, sz);\n        for (let n = 0; n < sz; n++) {\n            let i = nodes[n], a = i + 1;\n            optionalH[n] = atomHyd[i] == Molecule.HEXPLICIT_UNKNOWN && mol.atomElement(a) == 'N' && mol.atomAdjCount(a) - mol.atomCharge(a) <= 2;\n        }\n        let g = new Graph(sz);\n        let gravity = g.calculateGravity();\n        let mask = Vec.idxMask(nodes, mol.numAtoms);\n        let bsz = 0;\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (resBonds[n - 1] && mask[mol.bondFrom(n) - 1] && mask[mol.bondTo(n) - 1])\n                bsz++;\n        let bfr = Vec.numberArray(0, bsz), bto = Vec.numberArray(0, bsz), bgrav = Vec.numberArray(0, bsz), bidx = Vec.numberArray(0, bsz);\n        bsz = 0;\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (resBonds[n - 1] && mask[mol.bondFrom(n) - 1] && mask[mol.bondTo(n) - 1]) {\n                let f = nodes.indexOf(mol.bondFrom(n) - 1), t = nodes.indexOf(mol.bondTo(n) - 1);\n                bfr[bsz] = f;\n                bto[bsz] = t;\n                bgrav[bsz] = gravity[f] + gravity[t];\n                bidx[bsz] = n;\n                g.addEdge(f, t);\n                bsz++;\n            }\n        let seq = Vec.numberArray(0, bsz);\n        seq[0] = Vec.idxMax(bgrav);\n        let visited = Vec.booleanArray(false, bsz);\n        visited[seq[0]] = true;\n        for (let i = 1; i < bsz; i++) {\n            let b = -1;\n            for (let j = i - 1; j >= 0; j--) {\n                for (let n = 0; n < bsz; n++) {\n                    if (!visited[n])\n                        if (bfr[n] == bfr[seq[j]] || bfr[n] == bto[seq[j]] || bto[n] == bfr[seq[j]] || bto[n] == bto[seq[j]]) {\n                            if (b < 0 || bgrav[n] > bgrav[b])\n                                b = n;\n                        }\n                }\n                if (b >= 0)\n                    break;\n            }\n            if (b < 0)\n                throw 'Graph walk failed';\n            seq[i] = b;\n            visited[b] = true;\n        }\n        let paths = [];\n        paths.push([true]);\n        paths.push([false]);\n        let result = null;\n        let resultCount = 0;\n        let definiteMatch = Math.ceil(0.5 * bsz);\n        let iter = 0;\n        while (paths.length > 0) {\n            let p = paths[0];\n            let p1 = Vec.append(p, false), p2 = Vec.append(p, true);\n            if (!this.validPath(p1, seq, bfr, bto, g, optionalH))\n                p1 = null;\n            if (!this.validPath(p2, seq, bfr, bto, g, optionalH))\n                p2 = null;\n            if (Vec.len(p1) == bsz) {\n                let c = Vec.maskCount(p1);\n                if (c > resultCount) {\n                    result = p1;\n                    resultCount = c;\n                }\n                p1 = null;\n            }\n            if (Vec.len(p2) == bsz) {\n                let c = Vec.maskCount(p2);\n                if (c > resultCount) {\n                    result = p2;\n                    resultCount = c;\n                }\n                p2 = null;\n            }\n            if (resultCount >= definiteMatch)\n                break;\n            if (p1 == null && p2 == null)\n                paths.shift();\n            else if (p1 != null && p2 != null) {\n                paths[0] = p1;\n                paths.splice(1, 0, p2);\n            }\n            else if (p1 != null)\n                paths[0] = p1;\n            else\n                paths[0] = p2;\n            iter++;\n            if (iter > this.maxIter) {\n                if (result != null)\n                    break;\n                if (this.tolerant)\n                    return;\n                throw 'Resonance localisation exceeded maximum iteration count';\n            }\n        }\n        if (result == null) {\n            if (this.tolerant)\n                return;\n            throw 'Unable to find a solution to the resonance block.';\n        }\n        for (let n = 0; n < bsz; n++)\n            bondOrders[bidx[seq[n]] - 1] = result[n] ? 2 : 1;\n    }\n    validPath(path, seq, bfr, bto, g, optionalH) {\n        let sz = g.numNodes;\n        let count1 = Vec.numberArray(0, sz), count2 = Vec.numberArray(0, sz);\n        for (let n = 0; n < path.length; n++) {\n            let a1 = bfr[seq[n]], a2 = bto[seq[n]];\n            if (path[n]) {\n                count2[a1]++;\n                count2[a2]++;\n            }\n            else {\n                count1[a1]++;\n                count1[a2]++;\n            }\n        }\n        for (let n = 0; n < sz; n++) {\n            if (count2[n] > 1)\n                return false;\n            if (!optionalH[n] && g.numEdges(n) > 1 && count1[n] == g.numEdges(n))\n                return false;\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=ResonanceRemover.js.map","import { safeInt } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Graph } from './Graph';\nexport const BONDARTIFACT_EXTRA_RESPATH = 'xRESPATH:';\nexport const BONDARTIFACT_EXTRA_RESRING = 'xRESRING:';\nexport const BONDARTIFACT_EXTRA_ARENE = 'xARENE:';\nexport class BondArtifact {\n    constructor(mol) {\n        this.mol = mol;\n        this.resPaths = new Map();\n        this.resRings = new Map();\n        this.arenes = new Map();\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            for (let str of this.mol.atomExtra(n)) {\n                if (str.startsWith(BONDARTIFACT_EXTRA_RESPATH))\n                    this.appendResPath(n, str.substring(BONDARTIFACT_EXTRA_RESPATH.length).split(':'));\n                else if (str.startsWith(BONDARTIFACT_EXTRA_RESRING))\n                    this.appendResRing(n, str.substring(BONDARTIFACT_EXTRA_RESRING.length).split(':'));\n                else if (str.startsWith(BONDARTIFACT_EXTRA_ARENE))\n                    this.appendArene(n, str.substring(BONDARTIFACT_EXTRA_ARENE.length).split(':'));\n            }\n        }\n        for (let [blk, res] of this.resPaths.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (!this.pathify(res.atoms, false))\n                this.resPaths.delete(blk);\n        }\n        for (let [blk, res] of this.resRings.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (!this.pathify(res.atoms, true))\n                this.resRings.delete(blk);\n        }\n        for (let [blk, res] of this.arenes.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (res.atoms.length > 1)\n                res.centre = res.atoms.shift();\n            if (!this.pathify(res.atoms, false))\n                this.arenes.delete(blk);\n        }\n    }\n    getPathBlocks() { return Array.from(this.resPaths.keys()); }\n    getRingBlocks() { return Array.from(this.resRings.keys()); }\n    getAreneBlocks() { return Array.from(this.arenes.keys()); }\n    getResPaths() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.resPaths.keys())))\n            list.push(this.resPaths.get(key));\n        return list;\n    }\n    getResRings() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.resRings.keys())))\n            list.push(this.resRings.get(key));\n        return list;\n    }\n    getArenes() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.arenes.keys())))\n            list.push(this.arenes.get(key));\n        return list;\n    }\n    rewriteMolecule() {\n        const mol = this.mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n), modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (extra[i].startsWith(BONDARTIFACT_EXTRA_RESPATH) || extra[i].startsWith(BONDARTIFACT_EXTRA_RESRING) || extra[i].startsWith(BONDARTIFACT_EXTRA_ARENE)) {\n                    extra.splice(i);\n                    modified = true;\n                }\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n        for (let [blk, path] of this.resPaths.entries()) {\n            for (let n = 0; n < path.atoms.length; n++) {\n                let extra = mol.atomExtra(path.atoms[n]);\n                extra.push(BONDARTIFACT_EXTRA_RESPATH + blk + ':' + (n + 1));\n                mol.setAtomExtra(path.atoms[n], extra);\n            }\n        }\n        for (let [blk, ring] of this.resRings.entries()) {\n            for (let n = 0; n < ring.atoms.length; n++) {\n                let extra = mol.atomExtra(ring.atoms[n]);\n                extra.push(BONDARTIFACT_EXTRA_RESRING + blk + ':' + (n + 1));\n                mol.setAtomExtra(ring.atoms[n], extra);\n            }\n        }\n        for (let [blk, arene] of this.arenes.entries()) {\n            for (let n = -1; n < arene.atoms.length; n++) {\n                let atom = n < 0 ? arene.centre : arene.atoms[n];\n                let extra = mol.atomExtra(atom);\n                extra.push(BONDARTIFACT_EXTRA_ARENE + blk + ':' + (n + 2));\n                mol.setAtomExtra(atom, extra);\n            }\n        }\n    }\n    harmoniseNumbering(other) {\n        let blocks = other.getPathBlocks();\n        let stashPaths = this.getResPaths();\n        this.resPaths.clear();\n        for (let path of stashPaths) {\n            let blk = this.nextIdentifier(blocks);\n            this.resPaths.set(blk, path);\n            blocks.push(blk);\n        }\n        blocks = other.getRingBlocks();\n        let stashRings = this.getResRings();\n        this.resRings.clear();\n        for (let ring of stashRings) {\n            let blk = this.nextIdentifier(blocks);\n            this.resRings.set(blk, ring);\n            blocks.push(blk);\n        }\n        blocks = other.getAreneBlocks();\n        let stashArenes = this.getArenes();\n        this.arenes.clear();\n        for (let arene of stashArenes) {\n            let blk = this.nextIdentifier(blocks);\n            this.arenes.set(blk, arene);\n            blocks.push(blk);\n        }\n    }\n    createPath(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let path = this.atomsAsPath(atoms);\n        if (path) {\n            let id = this.nextIdentifier(Array.from(this.resPaths.keys()));\n            this.resPaths.set(id, path);\n            return true;\n        }\n        return false;\n    }\n    createRing(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let ring = this.atomsAsRing(atoms);\n        if (ring) {\n            let id = this.nextIdentifier(Array.from(this.resRings.keys()));\n            this.resRings.set(id, ring);\n            return true;\n        }\n        return false;\n    }\n    createArene(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let arene = this.atomsAsArene(atoms);\n        if (arene) {\n            let id = this.nextIdentifier(Array.from(this.arenes.keys()));\n            this.arenes.set(id, arene);\n            return true;\n        }\n        return false;\n    }\n    removeArtifact(atoms) {\n        let type = 0, pick = 0, overlap = 0;\n        for (let [blk, path] of this.resPaths.entries()) {\n            let count = 0;\n            for (let a of path.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 1;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        for (let [blk, ring] of this.resRings.entries()) {\n            let count = 0;\n            for (let a of ring.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 2;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        for (let [blk, arene] of this.arenes.entries()) {\n            let count = atoms.indexOf(arene.centre) >= 0 ? 1 : 0;\n            for (let a of arene.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 3;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        if (type == 0)\n            return false;\n        else if (type == 1)\n            this.resPaths.delete(pick);\n        else if (type == 2)\n            this.resRings.delete(pick);\n        else if (type == 3)\n            this.arenes.delete(pick);\n        return true;\n    }\n    static removeAll(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (!extra[i].startsWith(BONDARTIFACT_EXTRA_RESPATH) && !extra[i].startsWith(BONDARTIFACT_EXTRA_RESRING) &&\n                    !extra[i].startsWith(BONDARTIFACT_EXTRA_ARENE))\n                    continue;\n                extra = Vec.remove(extra, i);\n                modified = true;\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n    }\n    appendResPath(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.resPaths.get(blk);\n        if (res == null)\n            this.resPaths.set(blk, res = { atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    appendResRing(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.resRings.get(blk);\n        if (res == null)\n            this.resRings.set(blk, res = { atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    appendArene(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.arenes.get(blk);\n        if (res == null)\n            this.arenes.set(blk, res = { centre: 0, atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    pack(arr) {\n        let ret = [];\n        for (let v of arr)\n            if (v != 0)\n                ret.push(v);\n        return ret;\n    }\n    pathify(atoms, requireRing) {\n        let sz = atoms.length;\n        if (sz < 2)\n            return false;\n        let g = Graph.fromMolecule(this.mol);\n        for (let n = 0; n < this.mol.numAtoms; n++)\n            g.setIndex(n, n + 1);\n        g = g.subgraphIndex(Vec.add(atoms, -1));\n        let pos = 0;\n        for (let n = 1; n < sz; n++)\n            if (g.numEdges(n) < g.numEdges(pos))\n                pos = n;\n        Vec.setTo(atoms, -1);\n        for (let n = 0; n < sz; n++) {\n            atoms[n] = pos;\n            if (n == sz - 1) {\n                if (requireRing)\n                    if (g.getEdges(pos).indexOf(atoms[0]) < 0)\n                        return false;\n            }\n            else {\n                let next = sz;\n                for (let i of g.getEdges(pos))\n                    if (atoms.indexOf(i) < 0 && i < next)\n                        next = i;\n                if (next == sz)\n                    return false;\n                pos = next;\n            }\n        }\n        for (let n = 0; n < sz; n++)\n            atoms[n] = g.getIndex(atoms[n]);\n        return true;\n    }\n    alreadyExists(atoms) {\n        atoms = Vec.sorted(atoms);\n        for (let path of this.resPaths.values()) {\n            if (Vec.equals(atoms, Vec.sorted(path.atoms)))\n                return true;\n        }\n        for (let ring of this.resRings.values()) {\n            if (Vec.equals(atoms, Vec.sorted(ring.atoms)))\n                return true;\n        }\n        for (let arene of this.arenes.values()) {\n            let areneAtoms = Vec.append(arene.atoms, arene.centre);\n            if (Vec.equals(atoms, Vec.sorted(areneAtoms)))\n                return true;\n        }\n        return false;\n    }\n    atomsAsPath(atoms) {\n        if (atoms.length < 2)\n            return null;\n        let path = { atoms: atoms };\n        if (!this.pathify(path.atoms, false))\n            return null;\n        return path;\n    }\n    atomsAsRing(atoms) {\n        if (atoms.length < 3)\n            return null;\n        let ring = { atoms: atoms };\n        if (!this.pathify(ring.atoms, true))\n            return null;\n        return ring;\n    }\n    atomsAsArene(atoms) {\n        const sz = atoms.length;\n        if (sz < 3)\n            return null;\n        let g = Graph.fromMolecule(this.mol).subgraphIndex(Vec.add(atoms, -1));\n        let best = 0;\n        if (sz == 3) {\n            let bsum = [0, 0, 0];\n            for (let n = 0; n < sz; n++) {\n                if (g.numEdges(n) != 2)\n                    return null;\n                for (let e of g.getEdges(n))\n                    bsum[n] += this.mol.bondOrder(this.mol.findBond(atoms[n], atoms[e]));\n                best = Vec.idxMin(bsum);\n            }\n        }\n        else {\n            for (let n = 1; n < sz; n++)\n                if (g.numEdges(n) > g.numEdges(best))\n                    best = n;\n        }\n        let arene = { centre: atoms[best], atoms: Vec.remove(atoms, best) };\n        if (!this.pathify(arene.atoms, false))\n            return null;\n        return arene;\n    }\n    nextIdentifier(inkeys) {\n        if (inkeys.length == 0)\n            return 1;\n        let keys = Vec.sorted(inkeys);\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=BondArtifact.js.map","import { deepClone, safeFloat, safeInt } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nexport var DataSheetColumn;\n(function (DataSheetColumn) {\n    DataSheetColumn[\"Molecule\"] = \"molecule\";\n    DataSheetColumn[\"String\"] = \"string\";\n    DataSheetColumn[\"Real\"] = \"real\";\n    DataSheetColumn[\"Integer\"] = \"integer\";\n    DataSheetColumn[\"Boolean\"] = \"boolean\";\n    DataSheetColumn[\"Extend\"] = \"extend\";\n})(DataSheetColumn || (DataSheetColumn = {}));\nexport class DataSheet {\n    constructor(data) {\n        if (!data)\n            data = {};\n        if (!data.title)\n            data.title = '';\n        if (!data.description)\n            data.description = '';\n        if (data.numCols == null)\n            data.numCols = Vec.len(data.colData);\n        if (data.numRows == null)\n            data.numRows = Vec.len(data.rowData);\n        if (data.numExtens == null)\n            data.numExtens = Vec.len(data.extData);\n        if (data.colData == null)\n            data.colData = [];\n        if (data.rowData == null)\n            data.rowData = [];\n        if (data.extData == null)\n            data.extData = [];\n        this.data = data;\n    }\n    clone(withRows = true) {\n        let { numCols, numRows, colData, rowData } = this.data;\n        let data = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: numCols,\n            numRows: withRows ? numRows : 0,\n            numExtens: this.data.numExtens,\n            colData: deepClone(colData),\n            rowData: withRows ? new Array(numRows) : [],\n            extData: deepClone(this.data.extData),\n        };\n        if (withRows)\n            for (let r = 0; r < numRows; r++) {\n                let inRow = rowData[r], outRow = new Array(numCols);\n                for (let c = 0; c < numCols; c++) {\n                    if (inRow[c] != null && colData[c].type == \"molecule\" && inRow[c] instanceof Molecule)\n                        outRow[c] = inRow[c].clone();\n                    else\n                        outRow[c] = inRow[c];\n                }\n                data.rowData[r] = outRow;\n            }\n        return new DataSheet(data);\n    }\n    cloneMask(colMask, rowMask = null, inclExtn = true) {\n        let { numCols, numRows, colData, rowData } = this.data;\n        let data = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: Vec.maskCount(colMask),\n            numRows: rowMask ? Vec.maskCount(rowMask) : 0,\n            numExtens: inclExtn ? this.data.numExtens : 0,\n            colData: deepClone(Vec.maskGet(colData, colMask)),\n            rowData: [],\n            extData: inclExtn ? deepClone(this.data.extData) : [],\n        };\n        if (rowMask)\n            for (let r = 0; r < numRows; r++)\n                if (rowMask[r]) {\n                    let inRow = rowData[r], outRow = Vec.maskGet(inRow, colMask);\n                    data.rowData.push(outRow);\n                }\n        const { colData: outCols, rowData: outRows } = data;\n        for (let c = outCols.length - 1; c >= 0; c--)\n            if (outCols[c].type == \"molecule\") {\n                for (let r = outRows.length - 1; r >= 0; r--)\n                    if (outRows[r][c] != null && outRows[r][c] instanceof Molecule)\n                        outRows[r][c] = outRows[r][c].clone();\n            }\n        return new DataSheet(data);\n    }\n    getData() {\n        return this.data;\n    }\n    get numCols() {\n        return this.data.numCols;\n    }\n    get numRows() {\n        return this.data.numRows;\n    }\n    get title() { return this.data.title; }\n    set title(title) { this.data.title = title; }\n    get description() { return this.data.description; }\n    set description(description) { this.data.description = description; }\n    get numExtensions() {\n        return this.data.numExtens;\n    }\n    getExtName(idx) {\n        return this.data.extData[idx].name;\n    }\n    getExtType(idx) {\n        return this.data.extData[idx].type;\n    }\n    getExtData(idx) {\n        return this.data.extData[idx].data;\n    }\n    setExtName(idx, val) {\n        this.data.extData[idx].name = val;\n    }\n    setExtType(idx, val) {\n        this.data.extData[idx].type = val;\n    }\n    setExtData(idx, val) {\n        this.data.extData[idx].data = val;\n    }\n    appendExtension(name, type, data) {\n        this.data.numExtens++;\n        this.data.extData.push({ name, type, data });\n        return this.data.numExtens - 1;\n    }\n    insertExtension(idx, name, type, data) {\n        this.data.numExtens++;\n        this.data.extData.splice(idx, 0, { name, type, data });\n    }\n    deleteExtension(idx) {\n        this.data.extData.splice(idx, 1);\n        this.data.numExtens--;\n    }\n    colName(col) {\n        return this.data.colData[col].name;\n    }\n    colType(col) {\n        return this.data.colData[col].type;\n    }\n    colDescr(col) {\n        return this.data.colData[col].descr;\n    }\n    isNull(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col] == null;\n    }\n    notNull(row, col) {\n        return !this.isNull(row, col);\n    }\n    isBlank(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col))\n            return true;\n        let ct = this.colType(col);\n        if (ct == \"molecule\")\n            return this.getMolecule(row, col).numAtoms == 0;\n        if (ct == \"string\")\n            return this.getString(row, col).length == 0;\n        if (ct == \"extend\")\n            return this.getExtend(row, col).length == 0;\n        return false;\n    }\n    notBlank(row, col) {\n        return !this.isBlank(row, col);\n    }\n    getObject(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        return this.data.rowData[row][col];\n    }\n    getMolecule(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        let datum = this.data.rowData[row][col];\n        if (datum == null)\n            return null;\n        if (typeof datum === 'string') {\n            datum = Molecule.fromString(datum);\n            this.data.rowData[row][col] = datum;\n        }\n        return datum;\n    }\n    getMoleculeClone(row, col) {\n        let mol = this.getMolecule(row, col);\n        return mol == null ? null : mol.clone();\n    }\n    getMoleculeBlank(row, col) {\n        let mol = this.getMolecule(row, col);\n        return mol ? mol : new Molecule();\n    }\n    getString(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        let str = this.data.rowData[row][col];\n        return str == null ? '' : str;\n    }\n    getInteger(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getReal(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getBoolean(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getExtend(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    setToNull(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = null;\n    }\n    setObject(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setMolecule(row, col, mol) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = mol ? mol.clone() : null;\n    }\n    setString(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setInteger(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setReal(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setBoolean(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setExtend(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    isEqualMolecule(row, col, mol) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (mol == null))\n            return false;\n        if (mol == null)\n            return true;\n        return this.getMolecule(row, col).compareTo(mol) == 0;\n    }\n    isEqualString(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null || val == ''))\n            return false;\n        if (val == null || val == '')\n            return true;\n        return this.getString(row, col) == val;\n    }\n    isEqualInteger(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getInteger(row, col) == val;\n    }\n    isEqualReal(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getReal(row, col) == val;\n    }\n    isEqualBoolean(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getBoolean(row, col) == val;\n    }\n    appendColumn(name, type, descr) {\n        this.data.numCols++;\n        this.data.colData.push({ name, type, descr });\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].push(null);\n        return this.data.numCols - 1;\n    }\n    insertColumn(col, name, type, descr) {\n        this.data.numCols++;\n        this.data.colData.splice(col, 0, { name, type, descr });\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].splice(col, 0, null);\n    }\n    deleteColumn(col) {\n        this.data.numCols--;\n        this.data.colData.splice(col, 1);\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].splice(col, 1);\n    }\n    changeColumnName(col, name, descr) {\n        this.data.colData[col].name = name;\n        this.data.colData[col].descr = descr;\n    }\n    changeColumnType(col, newType) {\n        let oldType = this.colType(col);\n        if (oldType == newType)\n            return;\n        let incompatible = oldType == \"molecule\" || newType == \"molecule\" ||\n            oldType == \"extend\" || newType == \"extend\";\n        for (let n = this.data.rowData.length - 1; n >= 0; n--) {\n            let row = this.data.rowData[n];\n            if (row[col] == null)\n                continue;\n            if (incompatible) {\n                row[col] = null;\n                continue;\n            }\n            let val = '';\n            if (oldType == \"string\")\n                val = row[col];\n            else if (oldType == \"integer\")\n                val = row[col].toString();\n            else if (oldType == \"real\")\n                val = row[col].toString();\n            else if (oldType == \"boolean\")\n                val = row[col] ? 'true' : 'false';\n            row[col] = null;\n            if (newType == \"string\")\n                row[col] = val;\n            else if (newType == \"integer\") {\n                let num = parseInt(val);\n                row[col] = isFinite(num) ? num : null;\n            }\n            else if (newType == \"real\") {\n                let num = parseFloat(val);\n                row[col] = isFinite(num) ? num : null;\n            }\n            else if (newType == \"boolean\")\n                row[col] = val.toLowerCase() == 'true' ? true : false;\n        }\n        this.data.colData[col].type = newType;\n    }\n    ensureColumn(name, type, descr) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].name == name) {\n                if (this.data.colData[n].type != type)\n                    this.changeColumnType(n, type);\n                this.data.colData[n].descr = descr;\n                return n;\n            }\n        return this.appendColumn(name, type, descr);\n    }\n    reorderColumns(order) {\n        let identity = true;\n        for (let n = 0; n < order.length - 1; n++)\n            if (order[n] != order[n + 1] - 1) {\n                identity = false;\n                break;\n            }\n        if (identity)\n            return;\n        this.data.colData = Vec.idxGet(this.data.colData, order);\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n] = Vec.idxGet(this.data.rowData[n], order);\n    }\n    appendRow() {\n        this.data.numRows++;\n        let row = new Array();\n        for (let n = 0; n < this.data.numCols; n++)\n            row.push(null);\n        this.data.rowData.push(row);\n        return this.data.numRows - 1;\n    }\n    appendRowFrom(srcDS, row) {\n        this.data.numRows++;\n        this.data.rowData.push(srcDS.data.rowData[row].slice(0));\n        return this.data.numRows - 1;\n    }\n    insertRow(row) {\n        this.data.numRows++;\n        let data = new Array();\n        for (let n = 0; n < this.data.numCols; n++)\n            data.push(null);\n        this.data.rowData.splice(row, 0, data);\n    }\n    deleteRow(row) {\n        this.data.numRows--;\n        this.data.rowData.splice(row, 1);\n    }\n    deleteAllRows() {\n        this.data.numRows = 0;\n        this.data.rowData = new Array();\n    }\n    moveRowUp(row) {\n        let data = this.data.rowData[row];\n        this.data.rowData[row] = this.data.rowData[row - 1];\n        this.data.rowData[row - 1] = data;\n    }\n    moveRowDown(row) {\n        let data = this.data.rowData[row];\n        this.data.rowData[row] = this.data.rowData[row + 1];\n        this.data.rowData[row + 1] = data;\n    }\n    swapRows(row1, row2) {\n        Vec.swap(this.data.rowData, row1, row2);\n    }\n    exciseSingleRow(row) {\n        let newData = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: this.data.numCols,\n            numRows: 1,\n            numExtens: this.data.numExtens,\n            colData: this.data.colData.slice(0),\n            rowData: [this.data.rowData[row].slice(0)],\n            extData: this.data.extData.slice(0)\n        };\n        return new DataSheet(newData);\n    }\n    colIsPrimitive(col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        let ct = this.data.colData[col].type;\n        return ct == 'string' || ct == 'real' || ct == 'integer' || ct == 'boolean';\n    }\n    findColByName(name, type) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].name == name) {\n                if (type == null || this.data.colData[n].type == type)\n                    return n;\n            }\n        return -1;\n    }\n    firstColOfType(type) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].type == type)\n                return n;\n        return -1;\n    }\n    copyCell(toRow, toCol, fromDS, fromRow, fromCol) {\n        this.setToNull(toRow, toCol);\n        if (fromDS.isNull(fromRow, fromCol))\n            return;\n        let obj = fromDS.getObject(fromRow, fromCol);\n        this.setObject(toRow, toCol, DataSheet.convertType(obj, fromDS.colType(fromCol), this.colType(toCol)));\n    }\n    static convertType(obj, fromType, toType) {\n        const ft = fromType, tt = toType;\n        if (obj == null || ft == tt || (typeof obj == 'string' && obj == ''))\n            return obj;\n        if (tt == \"string\") {\n            if (ft == \"integer\")\n                return obj.toString();\n            else if (ft == \"real\")\n                return obj.toString();\n            else if (ft == \"boolean\")\n                return obj ? 'true' : 'false';\n        }\n        else if (tt == \"real\") {\n            if (ft == \"string\")\n                return safeFloat(obj, null);\n            else if (ft == \"integer\")\n                return obj;\n            else if (ft == \"boolean\")\n                return obj ? 1 : 0;\n        }\n        else if (tt == \"integer\") {\n            if (ft == \"string\")\n                return safeInt(obj, null);\n            else if (ft == \"real\")\n                return Math.round(obj);\n            else if (ft == \"boolean\")\n                return obj ? 1 : 0;\n        }\n        else if (tt == \"boolean\") {\n            if (ft == \"string\")\n                return obj.toLowerCase() == 'true';\n            else if (ft == \"integer\")\n                return obj > 0;\n            else if (ft == \"real\")\n                return obj >= 0.5;\n        }\n        return null;\n    }\n    toString(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : obj.toString();\n    }\n    toInt(row, col) {\n        if (!this.colIsPrimitive(col))\n            return null;\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : parseInt(obj);\n    }\n    toReal(row, col) {\n        if (!this.colIsPrimitive(col))\n            return null;\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : parseFloat(obj);\n    }\n}\n//# sourceMappingURL=DataSheet.js.map","import { Vec } from '../util/Vec';\nexport var ForeignMoleculeTransient;\n(function (ForeignMoleculeTransient) {\n    ForeignMoleculeTransient[\"AtomAromatic\"] = \"yAROMATIC\";\n    ForeignMoleculeTransient[\"BondAromatic\"] = \"yAROMATIC\";\n    ForeignMoleculeTransient[\"BondZeroDative\"] = \"yZERO_DATIVE\";\n    ForeignMoleculeTransient[\"BondZeroHydrogen\"] = \"yZERO_HYDROGEN\";\n    ForeignMoleculeTransient[\"AtomChiralMDLOdd\"] = \"yCHIRAL_MDL_ODD\";\n    ForeignMoleculeTransient[\"AtomChiralMDLEven\"] = \"yCHIRAL_MDL_EVEN\";\n    ForeignMoleculeTransient[\"AtomChiralMDLRacemic\"] = \"yCHIRAL_MDL_RACEMIC\";\n    ForeignMoleculeTransient[\"AtomExplicitValence\"] = \"yMDL_EXPLICIT_VALENCE\";\n    ForeignMoleculeTransient[\"AtomSgroupMultiAttach\"] = \"yMDL_SGROUP_MULTIATTACH\";\n    ForeignMoleculeTransient[\"AtomSgroupMultiRepeat\"] = \"yMDL_SGROUP_MULTIREPEAT\";\n    ForeignMoleculeTransient[\"AtomSgroupData\"] = \"yMDL_SGROUP_DATA\";\n    ForeignMoleculeTransient[\"AtomSCSRClass\"] = \"yMDL_SCSR_CLASS\";\n    ForeignMoleculeTransient[\"AtomSCSRSeqID\"] = \"yMDL_SCSR_SEQID\";\n    ForeignMoleculeTransient[\"AtomSCSRAttchOrd\"] = \"yMDL_SCSR_ATTCHORD\";\n})(ForeignMoleculeTransient || (ForeignMoleculeTransient = {}));\nexport class ForeignMolecule {\n    static noteAromaticAtoms(mol) {\n        const sz = mol.numAtoms;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.atomTransient(n).indexOf(ForeignMoleculeTransient.AtomAromatic) >= 0;\n        return mask;\n    }\n    static noteAromaticBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).indexOf(ForeignMoleculeTransient.BondAromatic) >= 0;\n        return mask;\n    }\n    static noteZeroDativeBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).includes(ForeignMoleculeTransient.BondZeroDative);\n        return mask;\n    }\n    static noteZeroHydrogenBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).includes(ForeignMoleculeTransient.BondZeroHydrogen);\n        return mask;\n    }\n    static markExplicitValence(mol, atom, valence) {\n        let trans = mol.atomTransient(atom).filter((tr) => !tr.startsWith(ForeignMoleculeTransient.AtomExplicitValence + ':'));\n        trans.push(`${ForeignMoleculeTransient.AtomExplicitValence}:${valence}`);\n        mol.setAtomTransient(atom, trans);\n    }\n    static noteExplicitValence(mol, atom) {\n        let trans = mol.atomTransient(atom);\n        for (let tr of trans)\n            if (tr.startsWith(ForeignMoleculeTransient.AtomExplicitValence + ':'))\n                return parseInt(tr.substring(ForeignMoleculeTransient.AtomExplicitValence.length + 1));\n        return null;\n    }\n    static markSgroupMultiAttach(mol, name, atoms, keyval = {}) {\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiAttach.length + 1);\n                    let comma = payload.indexOf(',');\n                    let bits = payload.split(',');\n                    let idx = parseInt(bits[0]);\n                    if (!(idx > 0))\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let tag = `${ForeignMoleculeTransient.AtomSgroupMultiAttach}:${idxHigh + 1},${name}`;\n        for (let [key, val] of Object.entries(keyval))\n            tag += ',' + key + '=' + val;\n        for (let a of atoms)\n            mol.setAtomTransient(a, Vec.append(mol.atomTransient(a), tag));\n    }\n    static hasAnySgroupMultiAttach(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupMultiAttach(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiAttach.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 2)\n                        continue;\n                    let idx = parseInt(bits[0]), name = bits[1];\n                    if (!(idx > 0) || !name)\n                        continue;\n                    let keyval = {};\n                    for (let i = 2; i < bits.length; i++) {\n                        let eq = bits[i].indexOf('=');\n                        if (eq < 0)\n                            continue;\n                        keyval[bits[i].substring(0, eq)] = bits[i].substring(eq + 1);\n                    }\n                    let sgm = map[idx];\n                    if (sgm)\n                        sgm.atoms.push(n);\n                    else\n                        map[idx] = { name, atoms: [n], keyval };\n                }\n        return Object.values(map);\n    }\n    static markSgroupMultiRepeat(mol, mult, atoms) {\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiRepeat.length + 1);\n                    let comma = payload.indexOf(',');\n                    if (comma <= 0)\n                        continue;\n                    let idx = parseInt(payload.substring(0, comma));\n                    if (idx <= 0)\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let unit = atoms.length / mult;\n        let tag = `${ForeignMoleculeTransient.AtomSgroupMultiRepeat}:${idxHigh + 1},${mult},${unit},`;\n        for (let n = 0; n < atoms.length; n++)\n            mol.setAtomTransient(atoms[n], Vec.append(mol.atomTransient(atoms[n]), tag + (n + 1)));\n    }\n    static hasAnySgroupMultiRepeat(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupMultiRepeat(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiRepeat.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 4)\n                        continue;\n                    let idx = parseInt(bits[0]), mult = parseInt(bits[1]), unit = parseInt(bits[2]), pos = parseInt(bits[3]);\n                    if (!(idx > 0) || mult < 2 || unit < 1 || pos < 1 || pos > mult * unit)\n                        continue;\n                    let mr = map[idx];\n                    if (mr == null)\n                        map[idx] = mr = { mult, unit, atoms: Vec.numberArray(0, mult * unit) };\n                    else if (mr.mult != mult || mr.unit != unit)\n                        continue;\n                    mr.atoms[pos - 1] = n;\n                }\n        return Object.values(map);\n    }\n    static markSgroupData(mol, name, value, unit, query, atoms) {\n        var _a;\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupData.length + 1);\n                    let comma = payload.indexOf(',');\n                    if (comma <= 0)\n                        continue;\n                    let idx = parseInt(payload.substring(0, comma));\n                    if (idx <= 0)\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let bits = [(idxHigh + 1).toString(), name, value, unit, query];\n        for (let n = 1; n < bits.length; n++)\n            bits[n] = ((_a = bits[n]) !== null && _a !== void 0 ? _a : '').replace(/\\,/g, '@@');\n        let tag = ForeignMoleculeTransient.AtomSgroupData + ':' + bits.join(',');\n        for (let n = 0; n < atoms.length; n++)\n            mol.setAtomTransient(atoms[n], Vec.append(mol.atomTransient(atoms[n]), tag));\n    }\n    static hasAnySgroupData(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupData(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupData.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 5)\n                        continue;\n                    let idx = parseInt(bits[0]);\n                    for (let i = 1; i < 5; i++)\n                        bits[i] = bits[i].replace(/\\@\\@/g, ',');\n                    if (!(idx > 0))\n                        continue;\n                    let sd = map[idx];\n                    if (sd)\n                        sd.atoms.push(n);\n                    else\n                        map[idx] = { name: bits[1], value: bits[2], unit: bits[3], query: bits[4], atoms: [n] };\n                }\n        return Object.values(map);\n    }\n}\n//# sourceMappingURL=ForeignMolecule.js.map","import { Vec } from '../util/Vec';\nexport const POLYMERBLOCK_EXTRA_POLYMER = 'xPOLYMER:';\nexport const POLYMERBLOCK_SPECIAL_UNCAPPED = '*';\nexport var PolymerBlockConnectivity;\n(function (PolymerBlockConnectivity) {\n    PolymerBlockConnectivity[\"HeadToTail\"] = \"ht\";\n    PolymerBlockConnectivity[\"HeadToHead\"] = \"hh\";\n    PolymerBlockConnectivity[\"Random\"] = \"rnd\";\n})(PolymerBlockConnectivity || (PolymerBlockConnectivity = {}));\nexport class PolymerBlockUnit {\n    constructor(atoms) {\n        this.atoms = atoms;\n        this.connect = null;\n        this.bondConn = null;\n        this.atomName = new Map();\n        this.bondIncl = new Map();\n        this.bondExcl = new Map();\n    }\n    clone() {\n        let dup = new PolymerBlockUnit(this.atoms.slice(0));\n        dup.connect = this.connect;\n        if (this.bondConn)\n            dup.bondConn = this.bondConn.slice(0);\n        for (let [k, v] of this.atomName.entries())\n            dup.atomName.set(k, v.slice(0));\n        for (let [k, v] of this.bondIncl.entries())\n            dup.bondIncl.set(k, v.slice(0));\n        for (let [k, v] of this.bondExcl.entries())\n            dup.bondExcl.set(k, v.slice(0));\n        return dup;\n    }\n}\nexport class PolymerBlock {\n    constructor(mol) {\n        this.mol = mol;\n        this.units = new Map();\n        let blockAtoms = new Map();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            for (let str of extra)\n                if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = str.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    let id = parseInt(bits[0]);\n                    if (id > 0) {\n                        let atoms = blockAtoms.get(id);\n                        if (atoms)\n                            atoms.push(n);\n                        else\n                            atoms = [n];\n                        blockAtoms.set(id, atoms);\n                    }\n                }\n        }\n        for (let key of Vec.sorted(Array.from(blockAtoms.keys())))\n            this.appendBlock(key, blockAtoms.get(key));\n    }\n    getIDList() { return Vec.sorted(Array.from(this.units.keys())); }\n    getUnit(id) { return this.units.get(id); }\n    getUnits() { return Array.from(this.units.values()); }\n    rewriteMolecule() {\n        this.purgeExtraFields();\n        for (let key of Vec.sorted(Array.from(this.units.keys())))\n            this.writeUnit(key, this.units.get(key));\n    }\n    harmoniseNumbering(other) {\n        let allKeys = other.getIDList();\n        for (let key of this.getIDList())\n            if (allKeys.includes(key)) {\n                let unit = this.units.get(key);\n                this.units.delete(key);\n                key = this.nextIdentifier(allKeys);\n                this.units.set(key, unit);\n                allKeys.push(key);\n            }\n    }\n    removeUnit(id) {\n        let unit = this.units.get(id);\n        if (unit == null)\n            return;\n        this.units.delete(id);\n        let pfx = POLYMERBLOCK_EXTRA_POLYMER + id + ':';\n        for (let a of unit.atoms) {\n            let extra = this.mol.atomExtra(a);\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(pfx))\n                    extra = Vec.remove(extra, i);\n            this.mol.setAtomExtra(a, extra);\n        }\n        for (let b = 1; b <= this.mol.numBonds; b++) {\n            let extra = this.mol.bondExtra(b);\n            if (Vec.isBlank(extra))\n                continue;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(pfx))\n                    extra = Vec.remove(extra, i);\n            this.mol.setBondExtra(b, extra);\n        }\n    }\n    removeAll() {\n        this.units.clear();\n        this.purgeExtraFields();\n    }\n    createUnit(unit) {\n        let id = this.nextIdentifier();\n        this.units.set(id, unit.clone());\n        this.writeUnit(id, unit);\n        return id;\n    }\n    static hasPolymerExtensions(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra)\n                    if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n                        return true;\n        }\n        return false;\n    }\n    static getPolymerExtensions(mol, atom) {\n        let extra = mol.atomExtra(atom), polext = null;\n        if (extra == null)\n            return null;\n        for (let str of extra)\n            if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n                polext = Vec.append(polext, str);\n        return polext;\n    }\n    static removePolymerExtensions(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        if (extra == null)\n            return;\n        let modified = false;\n        for (let i = extra.length - 1; i >= 0; i--)\n            if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                extra = Vec.remove(extra, i);\n                modified = true;\n            }\n        if (modified)\n            mol.setAtomExtra(atom, extra);\n    }\n    appendBlock(id, atoms) {\n        const { mol } = this;\n        let nattach = 0;\n        let unit = new PolymerBlockUnit(atoms);\n        for (let atom of atoms)\n            for (let extra of mol.atomExtra(atom))\n                if (extra.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = extra.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    if (bits.length < 2 || parseInt(bits[0]) != id)\n                        continue;\n                    nattach = parseInt(bits[1]);\n                    for (let n = 2; n < bits.length; n++) {\n                        if (bits[n] == PolymerBlockConnectivity.HeadToTail)\n                            unit.connect = PolymerBlockConnectivity.HeadToTail;\n                        else if (bits[n] == PolymerBlockConnectivity.HeadToHead)\n                            unit.connect = PolymerBlockConnectivity.HeadToHead;\n                        else if (bits[n] == PolymerBlockConnectivity.Random)\n                            unit.connect = PolymerBlockConnectivity.Random;\n                        else if (bits[n].startsWith('n')) {\n                            let hasOuter = false;\n                            for (let adj of mol.atomAdjList(atom))\n                                if (!atoms.includes(adj)) {\n                                    hasOuter = true;\n                                    break;\n                                }\n                            if (hasOuter) {\n                                let subBits = bits[n].substring(1).split(',');\n                                unit.atomName.set(atom, subBits.map((str) => parseInt(str)));\n                            }\n                        }\n                    }\n                }\n        if (nattach < 0)\n            return;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let in1 = atoms.indexOf(mol.bondFrom(n)) >= 0, in2 = atoms.indexOf(mol.bondTo(n)) >= 0;\n            if ((in1 && !in2) || (!in1 && in2))\n                nattach--;\n        }\n        if (nattach != 0)\n            return;\n        let bonds = null, order = null;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            for (let extra of mol.bondExtra(n))\n                if (extra.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = extra.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    if (bits.length < 2 || parseInt(bits[0]) != id)\n                        continue;\n                    for (let i = 1; i < bits.length; i++) {\n                        if (bits[i].startsWith('i')) {\n                            let subBits = bits[i].substring(1).split(',');\n                            unit.bondIncl.set(n, subBits.map((str) => parseInt(str)));\n                        }\n                        else if (bits[i].startsWith('e')) {\n                            let subBits = bits[i].substring(1).split(',');\n                            unit.bondExcl.set(n, subBits.map((str) => parseInt(str)));\n                        }\n                        else {\n                            let o = parseInt(bits[i]);\n                            if (o > 0) {\n                                bonds = Vec.append(bonds, n);\n                                order = Vec.append(order, o);\n                            }\n                        }\n                    }\n                }\n        }\n        if (bonds != null) {\n            if (bonds.length % 2 == 1)\n                return;\n            unit.bondConn = Vec.idxGet(bonds, Vec.idxSort(order));\n        }\n        this.units.set(id, unit);\n    }\n    formatBlockAtom(id, unit, atom) {\n        let nbonds = 0;\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let in1 = unit.atoms.indexOf(this.mol.bondFrom(n)) >= 0, in2 = unit.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n            if ((in1 && !in2) || (!in1 && in2))\n                nbonds++;\n        }\n        let str = POLYMERBLOCK_EXTRA_POLYMER + id + ':' + nbonds;\n        if (unit.connect != null)\n            str += ':' + unit.connect;\n        let names = unit.atomName.get(atom);\n        if (Vec.notBlank(names))\n            str += ':n' + names.join(',');\n        return str;\n    }\n    formatBlockBond(id, unit, bond) {\n        let in1 = unit.atoms.includes(this.mol.bondFrom(bond)), in2 = unit.atoms.includes(this.mol.bondTo(bond));\n        let isBoundary = (in1 && !in2) || (in2 && !in1);\n        if (!isBoundary)\n            return null;\n        let idxConn = unit.bondConn ? unit.bondConn.indexOf(bond) : -1;\n        let incl = unit.bondIncl.get(bond), excl = unit.bondExcl.get(bond);\n        if (idxConn < 0 && Vec.isBlank(incl) && Vec.isBlank(excl))\n            return null;\n        let str = POLYMERBLOCK_EXTRA_POLYMER + id;\n        if (idxConn >= 0)\n            str += ':' + (idxConn + 1);\n        if (Vec.notBlank(incl))\n            str += ':i' + incl.join(',');\n        if (Vec.notBlank(excl))\n            str += ':e' + excl.join(',');\n        return str;\n    }\n    purgeExtraFields() {\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let extra = this.mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    extra = Vec.remove(extra, i);\n                    modified = true;\n                }\n            if (modified)\n                this.mol.setAtomExtra(n, extra);\n        }\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let extra = this.mol.bondExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    extra = Vec.remove(extra, i);\n                    modified = true;\n                }\n            if (modified)\n                this.mol.setBondExtra(n, extra);\n        }\n    }\n    writeUnit(id, unit) {\n        const { mol } = this;\n        for (let a of unit.atoms) {\n            let codeAtom = this.formatBlockAtom(id, unit, a);\n            mol.setAtomExtra(a, Vec.append(mol.atomExtra(a), codeAtom));\n        }\n        for (let b = 1; b <= mol.numBonds; b++) {\n            let codeBond = this.formatBlockBond(id, unit, b);\n            if (codeBond)\n                mol.setBondExtra(b, Vec.append(mol.bondExtra(b), codeBond));\n        }\n    }\n    nextIdentifier(keys) {\n        if (!keys)\n            keys = this.getIDList();\n        if (keys.length == 0)\n            return 1;\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=PolymerBlock.js.map","import { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nexport var QueryTypeAtom;\n(function (QueryTypeAtom) {\n    QueryTypeAtom[\"Charges\"] = \"qC:\";\n    QueryTypeAtom[\"Aromatic\"] = \"qA:\";\n    QueryTypeAtom[\"Unsaturated\"] = \"qU:\";\n    QueryTypeAtom[\"Elements\"] = \"qE:\";\n    QueryTypeAtom[\"ElementsNot\"] = \"qE!\";\n    QueryTypeAtom[\"RingSizes\"] = \"qR:\";\n    QueryTypeAtom[\"RingSizesNot\"] = \"qR!\";\n    QueryTypeAtom[\"RingBlock\"] = \"qB:\";\n    QueryTypeAtom[\"NumRings\"] = \"qN:\";\n    QueryTypeAtom[\"RingBonds\"] = \"qG:\";\n    QueryTypeAtom[\"Adjacency\"] = \"qJ:\";\n    QueryTypeAtom[\"BondSums\"] = \"qO:\";\n    QueryTypeAtom[\"Valences\"] = \"qV:\";\n    QueryTypeAtom[\"Hydrogens\"] = \"qH:\";\n    QueryTypeAtom[\"Isotopes\"] = \"qI:\";\n    QueryTypeAtom[\"SubFrags\"] = \"qX:\";\n    QueryTypeAtom[\"SubFragsNot\"] = \"qX!\";\n})(QueryTypeAtom || (QueryTypeAtom = {}));\nexport var QueryTypeBond;\n(function (QueryTypeBond) {\n    QueryTypeBond[\"RingSizes\"] = \"qR:\";\n    QueryTypeBond[\"RingSizesNot\"] = \"qR!\";\n    QueryTypeBond[\"RingBlock\"] = \"qB:\";\n    QueryTypeBond[\"NumRings\"] = \"qN:\";\n    QueryTypeBond[\"Orders\"] = \"qO:\";\n})(QueryTypeBond || (QueryTypeBond = {}));\nexport class QueryUtil {\n    static hasAnyQueryAtom(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith('q'))\n                return true;\n        return false;\n    }\n    static hasAnyQueryBond(mol, bond) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith('q'))\n                return true;\n        return false;\n    }\n    static hasQueryAtom(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return true;\n        return false;\n    }\n    static hasQueryBond(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return true;\n        return false;\n    }\n    static deleteQueryAtom(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        let modified = false;\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type)) {\n                extra.splice(n, 1);\n                modified = true;\n            }\n        if (modified)\n            mol.setAtomExtra(atom, extra);\n    }\n    static deleteQueryBond(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        let modified = false;\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type)) {\n                extra.splice(n, 1);\n                modified = true;\n            }\n        if (modified)\n            mol.setBondExtra(bond, extra);\n    }\n    static deleteQueryAtomAll(mol, atom) {\n        mol.setAtomExtra(atom, mol.atomExtra(atom).filter((xtra) => !xtra.startsWith('q')));\n    }\n    static deleteQueryBondAll(mol, bond) {\n        mol.setBondExtra(bond, mol.bondExtra(bond).filter((xtra) => !xtra.startsWith('q')));\n    }\n    static queryAtomString(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return extra[n].substring(type.length);\n        return null;\n    }\n    static queryAtomStringList(mol, atom, type) {\n        let extra = mol.atomExtra(atom), list = null;\n        if (extra != null)\n            for (let str of extra)\n                if (str.startsWith(type))\n                    list = Vec.append(list, str.substring(type.length));\n        return list;\n    }\n    static queryBondString(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return extra[n].substring(type.length);\n        return null;\n    }\n    static setQueryAtom(mol, atom, type, str) {\n        if (!str) {\n            this.deleteQueryAtom(mol, atom, type);\n            return;\n        }\n        let value = type + str;\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--) {\n            if (extra[n].startsWith(type)) {\n                if (value != null) {\n                    extra[n] = value;\n                    value = null;\n                }\n                else\n                    extra.splice(n, 1);\n            }\n        }\n        if (value != null)\n            extra.push(value);\n        mol.setAtomExtra(atom, extra);\n    }\n    static setQueryAtomList(mol, atom, type, list) {\n        if (Vec.isBlank(list)) {\n            this.deleteQueryAtom(mol, atom, type);\n            return;\n        }\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                extra.splice(n, 1);\n        for (let str of list)\n            extra.push(type + str);\n        mol.setAtomExtra(atom, extra);\n    }\n    static setQueryBond(mol, bond, type, str) {\n        if (!str) {\n            this.deleteQueryBond(mol, bond, type);\n            return;\n        }\n        let value = type + str;\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--) {\n            if (extra[n].startsWith(type)) {\n                if (value != null) {\n                    extra[n] = value;\n                    value = null;\n                }\n                else\n                    extra.splice(n, 1);\n            }\n        }\n        if (value != null)\n            extra.push(value);\n        mol.setBondExtra(bond, extra);\n    }\n    static queryAtomCharges(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Charges)); }\n    static queryAtomAromatic(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.Aromatic)); }\n    static queryAtomUnsaturated(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.Unsaturated)); }\n    static queryAtomElements(mol, atom) { return this.parseStrings(this.queryAtomString(mol, atom, QueryTypeAtom.Elements)); }\n    static queryAtomElementsNot(mol, atom) { return this.parseStrings(this.queryAtomString(mol, atom, QueryTypeAtom.ElementsNot)); }\n    static queryAtomRingSizes(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingSizes)); }\n    static queryAtomRingSizesNot(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingSizesNot)); }\n    static queryAtomRingBlock(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.RingBlock)); }\n    static queryAtomNumRings(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.NumRings)); }\n    static queryAtomRingBonds(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingBonds)); }\n    static queryAtomAdjacency(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Adjacency)); }\n    static queryAtomBondSums(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.BondSums)); }\n    static queryAtomValences(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Valences)); }\n    static queryAtomHydrogens(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Hydrogens)); }\n    static queryAtomIsotope(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Isotopes)); }\n    static queryAtomSubFrags(mol, atom) { return this.parseMolecules(this.queryAtomStringList(mol, atom, QueryTypeAtom.SubFrags)); }\n    static queryAtomSubFragsNot(mol, atom) { return this.parseMolecules(this.queryAtomStringList(mol, atom, QueryTypeAtom.SubFragsNot)); }\n    static queryBondRingSizes(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.RingSizes)); }\n    static queryBondRingSizesNot(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.RingSizesNot)); }\n    static queryBondRingBlock(mol, bond) { return this.parseBoolean(this.queryBondString(mol, bond, QueryTypeBond.RingBlock)); }\n    static queryBondNumRings(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.NumRings)); }\n    static queryBondOrders(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.Orders)); }\n    static setQueryAtomCharges(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Charges, this.formatIntegers(value)); }\n    static setQueryAtomAromatic(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Aromatic, this.formatBoolean(value)); }\n    static setQueryAtomUnsaturated(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Unsaturated, this.formatBoolean(value)); }\n    static setQueryAtomElements(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Elements, this.formatStrings(value)); }\n    static setQueryAtomElementsNot(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.ElementsNot, this.formatStrings(value)); }\n    static setQueryAtomRingSizes(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingSizes, this.formatIntegers(value)); }\n    static setQueryAtomRingSizesNot(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingSizesNot, this.formatIntegers(value)); }\n    static setQueryAtomRingBlock(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingBlock, this.formatBoolean(value)); }\n    static setQueryAtomNumRings(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.NumRings, this.formatIntegers(value)); }\n    static setQueryAtomRingBonds(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingBonds, this.formatIntegers(value)); }\n    static setQueryAtomAdjacency(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Adjacency, this.formatIntegers(value)); }\n    static setQueryAtomBondSums(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.BondSums, this.formatIntegers(value)); }\n    static setQueryAtomValences(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Valences, this.formatIntegers(value)); }\n    static setQueryAtomHydrogens(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Hydrogens, this.formatIntegers(value)); }\n    static setQueryAtomIsotope(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Isotopes, this.formatIntegers(value)); }\n    static setQueryAtomSubFrags(mol, atom, value) { this.setQueryAtomList(mol, atom, QueryTypeAtom.SubFrags, this.formatMolecules(value)); }\n    static setQueryAtomSubFragsNot(mol, atom, value) { this.setQueryAtomList(mol, atom, QueryTypeAtom.SubFragsNot, this.formatMolecules(value)); }\n    static setQueryBondRingSizes(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingSizes, this.formatIntegers(value)); }\n    static setQueryBondRingSizesNot(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingSizesNot, this.formatIntegers(value)); }\n    static setQueryBondRingBlock(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingBlock, this.formatBoolean(value)); }\n    static setQueryBondNumRings(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.NumRings, this.formatIntegers(value)); }\n    static setQueryBondOrders(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.Orders, this.formatIntegers(value)); }\n    static parseIntegers(str) {\n        if (!str)\n            return null;\n        let strlist = str.split(',');\n        let intlist = new Array(strlist.length);\n        for (let n = 0; n < strlist.length; n++)\n            intlist[n] = parseInt(strlist[n]);\n        return intlist;\n    }\n    static parseStrings(str) {\n        if (!str)\n            return null;\n        return str.split(',');\n    }\n    static parseBoolean(str) {\n        return !str ? null : str == 'yes';\n    }\n    static parseMolecules(list) {\n        if (!list)\n            return null;\n        let mols = [];\n        for (let molstr of list) {\n            let mol = Molecule.fromString(molstr);\n            if (MolUtil.notBlank(mol))\n                mols.push(mol);\n        }\n        return mols;\n    }\n    static formatIntegers(list) {\n        if (Vec.isBlank(list))\n            return null;\n        let str = '';\n        for (let n = 0; n < list.length; n++) {\n            if (n > 0)\n                str += ',';\n            str += list[n];\n        }\n        return str;\n    }\n    static formatStrings(list) {\n        if (Vec.isBlank(list))\n            return null;\n        let str = '';\n        for (let n = 0; n < list.length; n++) {\n            if (n > 0)\n                str += ',';\n            str += list[n];\n        }\n        return str;\n    }\n    static formatBoolean(value) {\n        return value ? 'yes' : 'no';\n    }\n    static formatMolecules(mols) {\n        if (Vec.isBlank(mols))\n            return null;\n        let list = [];\n        for (let mol of mols)\n            if (MolUtil.notBlank(mol))\n                list.push(mol.toString());\n        return list;\n    }\n}\n//# sourceMappingURL=QueryUtil.js.map","import { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nexport const STEREOGROUP_EXTRA_RACEMIC = 'xCHIRAC:';\nexport const STEREOGROUP_EXTRA_RELATIVE = 'xCHIREL:';\nexport class StereoGroup {\n    static hasStereoGroups(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra)\n                    if (str.startsWith(STEREOGROUP_EXTRA_RACEMIC) || str.startsWith(STEREOGROUP_EXTRA_RELATIVE))\n                        return true;\n        }\n        return false;\n    }\n    constructor(mol) {\n        this.mol = mol;\n        this.chiRac = new Map();\n        this.chiRel = new Map();\n        this.mol = mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra) {\n                    if (str.startsWith(STEREOGROUP_EXTRA_RACEMIC)) {\n                        let grp = parseInt(str.substring(STEREOGROUP_EXTRA_RACEMIC.length));\n                        if (grp > 0)\n                            this.chiRac.set(grp, Vec.append(this.chiRac.get(grp), n));\n                    }\n                    else if (str.startsWith(STEREOGROUP_EXTRA_RELATIVE)) {\n                        let grp = parseInt(str.substring(STEREOGROUP_EXTRA_RELATIVE.length));\n                        if (grp > 0)\n                            this.chiRel.set(grp, Vec.append(this.chiRel.get(grp), n));\n                    }\n                }\n        }\n        for (let [grp, atoms] of this.chiRac.entries()) {\n            for (let n = atoms.length - 1; n >= 0; n--)\n                if (!this.atomHasWedge(atoms[n]))\n                    atoms.splice(n, 1);\n            if (atoms.length > 0)\n                this.chiRac.set(grp, atoms);\n            else\n                this.chiRac.delete(grp);\n        }\n        for (let [grp, atoms] of this.chiRel.entries()) {\n            for (let n = atoms.length - 1; n >= 0; n--)\n                if (!this.atomHasWedge(atoms[n]))\n                    atoms.splice(n, 1);\n            if (atoms.length > 0)\n                this.chiRel.set(grp, atoms);\n            else\n                this.chiRel.delete(grp);\n        }\n    }\n    getRacemicGroups() { return Array.from(this.chiRac.keys()); }\n    getRelativeGroups() { return Array.from(this.chiRel.keys()); }\n    getRacemicAtoms() { return Array.from(this.chiRac.values()); }\n    getRelativeAtoms() { return Array.from(this.chiRel.values()); }\n    getRacemicGroupAtoms(grp) { return this.chiRac.get(grp); }\n    getRelativeGroupAtoms(grp) { return this.chiRel.get(grp); }\n    rewriteMolecule() {\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let extra = this.mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (extra[i].startsWith(STEREOGROUP_EXTRA_RACEMIC) || extra[i].startsWith(STEREOGROUP_EXTRA_RELATIVE)) {\n                    extra.splice(i, 1);\n                    modified = true;\n                }\n            }\n            if (modified)\n                this.mol.setAtomExtra(n, extra);\n        }\n        for (let [grp, atoms] of this.chiRac.entries()) {\n            for (let a of atoms)\n                this.mol.setAtomExtra(a, [...this.mol.atomExtra(a), STEREOGROUP_EXTRA_RACEMIC + grp]);\n        }\n        for (let [grp, atoms] of this.chiRel.entries()) {\n            for (let a of atoms)\n                this.mol.setAtomExtra(a, [...this.mol.atomExtra(a), STEREOGROUP_EXTRA_RELATIVE + grp]);\n        }\n    }\n    harmoniseNumbering(other) {\n        let groups = other.getRacemicGroups();\n        let stash = this.getRacemicAtoms();\n        this.chiRac.clear();\n        for (let atoms of stash) {\n            let grp = this.nextIdentifier(groups);\n            this.chiRac.set(grp, atoms);\n            groups.push(grp);\n        }\n        groups = other.getRelativeGroups();\n        stash = this.getRelativeAtoms();\n        this.chiRel.clear();\n        for (let atoms of stash) {\n            let grp = this.nextIdentifier(groups);\n            this.chiRel.set(grp, atoms);\n            groups.push(grp);\n        }\n    }\n    createRacemic(atoms) {\n        let grp = this.nextIdentifier(this.getRacemicGroups());\n        this.chiRac.set(grp, atoms);\n        return grp;\n    }\n    createRelative(atoms) {\n        let grp = this.nextIdentifier(this.getRelativeGroups());\n        this.chiRel.set(grp, atoms);\n        return grp;\n    }\n    removeRacemic(grp) {\n        this.chiRac.delete(grp);\n    }\n    removeRelative(grp) {\n        this.chiRel.delete(grp);\n    }\n    static removeAll(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (!extra[i].startsWith(STEREOGROUP_EXTRA_RACEMIC) && !extra[i].startsWith(STEREOGROUP_EXTRA_RELATIVE))\n                    continue;\n                extra.splice(i, 1);\n                modified = true;\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n    }\n    atomHasWedge(atom) {\n        if (this.mol.is3D())\n            return true;\n        let hasWedge = false;\n        for (let b of this.mol.atomAdjBonds(atom)) {\n            let bt = this.mol.bondType(b);\n            if (bt == Molecule.BONDTYPE_UNKNOWN)\n                return false;\n            if (this.mol.bondFrom(b) != atom)\n                continue;\n            if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                hasWedge = true;\n        }\n        return hasWedge;\n    }\n    nextIdentifier(inkeys) {\n        if (inkeys.length == 0)\n            return 1;\n        let keys = Vec.sorted(inkeys);\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=StereoGroup.js.map","import { ResonanceRemover } from '../calc/ResonanceRemover';\nimport { Vec } from '../util/Vec';\nimport { BondArtifact } from './BondArtifact';\nimport { CoordUtil } from './CoordUtil';\nimport { DataSheet } from './DataSheet';\nimport { ForeignMolecule, ForeignMoleculeTransient } from './ForeignMolecule';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity, PolymerBlockUnit } from './PolymerBlock';\nimport { QueryUtil } from './QueryUtil';\nimport { StereoGroup } from './StereoGroup';\nexport const MDLMOL_VALENCE = {\n    'H': [1],\n    'B': [3],\n    'C': [4],\n    'Si': [4],\n    'N': [3],\n    'P': [3, 5],\n    'As': [3, 5],\n    'O': [2],\n    'S': [2, 4, 6],\n    'Se': [2, 4, 6],\n    'Te': [2, 4, 6],\n    'F': [1],\n    'Cl': [1, 3, 5, 7],\n    'Br': [1],\n    'I': [1, 3, 5, 7],\n    'At': [1, 3, 5, 7],\n};\nexport class MDLMOLReader {\n    constructor(strData) {\n        this.parseHeader = true;\n        this.parseExtended = true;\n        this.allowV3000 = true;\n        this.considerRescale = true;\n        this.keepAromatic = false;\n        this.keepParity = false;\n        this.keepQuery = true;\n        this.mol = null;\n        this.molName = '';\n        this.overallStereoAbsolute = true;\n        this.resBonds = null;\n        this.groupAttachAny = new Map();\n        this.groupAttachAll = new Map();\n        this.groupStereoAbsolute = [];\n        this.groupStereoRacemic = [];\n        this.groupStereoRelative = [];\n        this.groupLinkNodes = [];\n        this.groupMixtures = [];\n        this.scsrTemplates = null;\n        this.pos = 0;\n        this.lines = strData.split(/\\r?\\n/);\n    }\n    parse() {\n        if (this.parseHeader) {\n            this.molName = this.lines[0];\n            this.pos = 3;\n        }\n        this.parseCTAB();\n        return this.mol;\n    }\n    nextLine() {\n        if (this.pos >= this.lines.length)\n            throw 'MDL Molfile parser: premature end, at line ' + (this.pos + 1);\n        return this.lines[this.pos++];\n    }\n    parseCTAB() {\n        this.mol = new Molecule();\n        this.mol.keepTransient = true;\n        let line = this.nextLine();\n        let version = line.length >= 39 ? line.substring(34, 39) : '';\n        if (this.allowV3000 && version == 'V3000') {\n            this.parseV3000();\n            this.mol.keepTransient = false;\n            return;\n        }\n        if (version != 'V2000')\n            throw 'Invalid MDL MOL: no Vx000 tag.';\n        let numAtoms = parseInt(line.substring(0, 3).trim());\n        let numBonds = parseInt(line.substring(3, 6).trim());\n        if (line.length >= 15)\n            this.overallStereoAbsolute = parseInt(line.substring(12, 15).trim()) == 1;\n        for (let n = 0; n < numAtoms; n++) {\n            line = this.nextLine();\n            if (line.length < 34)\n                throw 'Invalid MDL MOL: atom line' + (n + 1);\n            let x = parseFloat(line.substring(0, 10).trim());\n            let y = parseFloat(line.substring(10, 20).trim());\n            let z = parseFloat(line.substring(20, 30).trim());\n            let el = line.substring(31, 34).trim();\n            let chg = line.length < 39 ? 0 : parseInt(line.substring(36, 39).trim()), rad = 0;\n            let stereo = line.length < 42 ? 0 : parseInt(line.substring(39, 42).trim());\n            let hyd = line.length < 45 ? 0 : parseInt(line.substring(42, 45).trim());\n            let val = line.length < 51 ? 0 : parseInt(line.substring(48, 51).trim());\n            let mapnum = line.length < 63 ? 0 : parseInt(line.substring(60, 63).trim());\n            if (chg >= 1 && chg <= 3)\n                chg = 4 - chg;\n            else if (chg == 4) {\n                chg = 0;\n                rad = 2;\n            }\n            else if (chg >= 5 && chg <= 7)\n                chg = 4 - chg;\n            else\n                chg = 0;\n            let a = this.mol.addAtom(el, x, y, chg, rad);\n            if (z != 0) {\n                this.mol.setAtomZ(a, z);\n                this.mol.setIs3D(true);\n            }\n            this.mol.setAtomMapNum(a, mapnum);\n            if (hyd > 0)\n                QueryUtil.setQueryAtomHydrogens(this.mol, a, [hyd - 1]);\n            if (stereo > 0 && this.keepParity) {\n                let trans = this.mol.atomTransient(a);\n                if (stereo == 1)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLOdd));\n                else if (stereo == 2)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLEven));\n                else if (stereo == 3)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLRacemic));\n            }\n            if (val != 0)\n                ForeignMolecule.markExplicitValence(this.mol, n + 1, val > 14 ? 0 : val);\n        }\n        for (let n = 0; n < numBonds; n++) {\n            line = this.nextLine();\n            if (line.length >= 9 && line.length < 12)\n                line = line.substring(0, 9) + '  0';\n            if (line.length < 12)\n                throw 'Invalid MDL MOL: bond line' + (n + 1);\n            let bfr = parseInt(line.substring(0, 3).trim()), bto = parseInt(line.substring(3, 6).trim());\n            let type = parseInt(line.substring(6, 9).trim()), stereo = parseInt(line.substring(9, 12).trim());\n            if (bfr == bto || bfr < 1 || bfr > numAtoms || bto < 1 || bto > numAtoms)\n                throw 'Invalid MDL MOL: bond line' + (n + 1);\n            let order = type >= 1 && type <= 3 ? type : type == 8 || type == 9 || type == 10 ? 0 : 1;\n            let style = Molecule.BONDTYPE_NORMAL;\n            if (stereo == 1)\n                style = Molecule.BONDTYPE_INCLINED;\n            else if (stereo == 6)\n                style = Molecule.BONDTYPE_DECLINED;\n            else if (stereo == 3 || stereo == 4)\n                style = Molecule.BONDTYPE_UNKNOWN;\n            let b = this.mol.addBond(bfr, bto, order, style);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroDative);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroHydrogen);\n            if (this.keepQuery) {\n                if (type == 4)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1]);\n                else if (type == 5)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [1, 2]);\n                else if (type == 6)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 1]);\n                else if (type == 7)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 2]);\n                else if (type == 8)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 0, 1, 2, 3]);\n            }\n            else {\n                if (type == 4) {\n                    if (this.keepAromatic)\n                        this.mol.setBondTransient(b, Vec.append(this.mol.bondTransient(b), ForeignMoleculeTransient.BondAromatic));\n                    else {\n                        if (this.resBonds == null)\n                            this.resBonds = Vec.booleanArray(false, numBonds);\n                        this.resBonds[n] = true;\n                    }\n                }\n            }\n        }\n        const MBLK_CHG = 1, MBLK_RAD = 2, MBLK_ISO = 3, MBLK_RGP = 4, MBLK_HYD = 5, MBLK_ZCH = 6, MBLK_ZBO = 7, MBLK_ZPA = 8, MBLK_ZRI = 9, MBLK_ZAR = 10, MBLK_RBC = 11, MBLK_SUB = 12, MBLK_UNS = 13;\n        let resPaths = new Map(), resRings = new Map(), arenes = new Map();\n        let superatoms = new Map(), mixtures = new Map();\n        while (true) {\n            line = this.nextLine();\n            if (line.startsWith('M  END'))\n                break;\n            let type = 0;\n            if (line.startsWith('M  CHG'))\n                type = MBLK_CHG;\n            else if (line.startsWith('M  RAD'))\n                type = MBLK_RAD;\n            else if (line.startsWith('M  ISO'))\n                type = MBLK_ISO;\n            else if (line.startsWith('M  RGP'))\n                type = MBLK_RGP;\n            else if (this.parseExtended && line.startsWith('M  HYD'))\n                type = MBLK_HYD;\n            else if (this.parseExtended && line.startsWith('M  ZCH'))\n                type = MBLK_ZCH;\n            else if (this.parseExtended && line.startsWith('M  ZBO'))\n                type = MBLK_ZBO;\n            else if (this.parseExtended && line.startsWith('M  ZPA'))\n                type = MBLK_ZPA;\n            else if (this.parseExtended && line.startsWith('M  ZRI'))\n                type = MBLK_ZRI;\n            else if (this.parseExtended && line.startsWith('M  ZAR'))\n                type = MBLK_ZAR;\n            else if (this.parseExtended && line.startsWith('M  RBC'))\n                type = MBLK_RBC;\n            else if (this.parseExtended && line.startsWith('M  SUB'))\n                type = MBLK_SUB;\n            else if (this.parseExtended && line.startsWith('M  UNS'))\n                type = MBLK_UNS;\n            else if (line.startsWith('A  ') && line.length >= 6) {\n                let anum = parseInt(line.substring(3, 6).trim());\n                if (anum >= 1 && anum <= this.mol.numAtoms) {\n                    line = this.nextLine();\n                    if (line == null)\n                        break;\n                    this.mol.setAtomElement(anum, line);\n                    continue;\n                }\n            }\n            else if (line.startsWith('M  STY')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let idx = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let stype = line.substring(14 + 8 * n, 17 + 8 * n);\n                    if (stype == 'SUP')\n                        superatoms.set(idx, { atoms: [], name: null });\n                    else if (stype == 'MIX' || stype == 'FOR')\n                        mixtures.set(idx, { index: idx, parent: 0, atoms: [], type: stype });\n                    else if (stype == 'SRU' || stype == 'COP' || stype == 'MUL' || stype == 'DAT')\n                        superatoms.set(idx, { atoms: [], name: null, bracketType: stype });\n                }\n            }\n            else if (line.startsWith('M  SPL')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let child = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let parent = parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim());\n                    let mix = mixtures.get(child);\n                    if (mix != null)\n                        mix.parent = parent;\n                }\n            }\n            else if (line.startsWith('M  SAL')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let atoms = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        atoms[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    sup.atoms = Vec.concat(sup.atoms, atoms);\n                }\n                let mix = mixtures.get(idx);\n                if (mix != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let atoms = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        atoms[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    mix.atoms = Vec.concat(mix.atoms, atoms);\n                }\n            }\n            else if (line.startsWith('M  SBL')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let bonds = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        bonds[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    sup.bonds = Vec.concat(sup.bonds, bonds);\n                }\n            }\n            else if (line.startsWith('M  SMT')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null)\n                    sup.name = line.substring(11).trim();\n            }\n            else if (line.startsWith('M  SDT')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup) {\n                    sup.name = line.substring(11, 41).trim();\n                    sup.unit = line.substring(43, 63).trim();\n                    sup.query = line.substring(63).trim();\n                }\n            }\n            else if (line.startsWith('M  SED')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup)\n                    sup.value = line.substring(11).trim();\n            }\n            else if (line.startsWith('M  SCN')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let idx = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let stype = line.substring(14 + 8 * n, 17 + 8 * n);\n                    let sup = superatoms.get(idx);\n                    if (sup != null)\n                        sup.connectType = stype.trim();\n                }\n            }\n            else if (line.startsWith('M  CRS')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    sup.bondConn = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        sup.bondConn[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                }\n            }\n            else if (line.startsWith('M  LIN')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let node = {\n                        atom: parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim()),\n                        nbrs: [],\n                        minRep: 1,\n                        maxRep: parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim()),\n                    };\n                    let nbr1 = parseInt(line.substring(17 + 8 * n, 21 + 8 * n).trim());\n                    let nbr2 = parseInt(line.substring(21 + 8 * n, 25 + 8 * n).trim());\n                    if (nbr1 > 0)\n                        node.nbrs.push(nbr1);\n                    if (nbr2 > 0)\n                        node.nbrs.push(nbr2);\n                    this.groupLinkNodes.push(node);\n                }\n            }\n            else if (line.startsWith('M  ALS')) {\n                let atom = parseInt(line.substring(7, 10).trim());\n                let len = parseInt(line.substring(10, 13).trim());\n                let logic = line.charAt(14);\n                let elements = [];\n                for (let n = 0; n < len; n++)\n                    elements.push(line.substring(16 + n * 4, 20 + n * 4).trim());\n                this.mol.setAtomElement(atom, '*');\n                if (logic == 'F')\n                    QueryUtil.setQueryAtomElements(this.mol, atom, elements);\n                else if (logic == 'T')\n                    QueryUtil.setQueryAtomElementsNot(this.mol, atom, elements);\n            }\n            if (type == MBLK_ZPA || type == MBLK_ZRI || type == MBLK_ZAR) {\n                let len = parseInt(line.substring(6, 9).trim()), blk = parseInt(line.substring(9, 13).trim());\n                let map = type == MBLK_ZPA ? resPaths : type == MBLK_ZRI ? resRings : arenes;\n                for (let n = 0; n < len; n++) {\n                    let val = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    if (val < 1 || val > numAtoms)\n                        throw 'Invalid MDL MOL: M-block';\n                    let atoms = map.get(blk);\n                    if (!atoms)\n                        map.set(blk, atoms = []);\n                    atoms.push(val);\n                }\n            }\n            else if (type > 0) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let pos = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let val = parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim());\n                    if (pos < 1)\n                        throw 'Invalid MDL MOL: M-block';\n                    if (type == MBLK_CHG)\n                        this.mol.setAtomCharge(pos, val);\n                    else if (type == MBLK_RAD) {\n                        if (val == 1 || val == 3)\n                            this.mol.setAtomUnpaired(pos, 2);\n                        else if (val == 2)\n                            this.mol.setAtomUnpaired(pos, 1);\n                    }\n                    else if (type == MBLK_ISO)\n                        this.mol.setAtomIsotope(pos, val);\n                    else if (type == MBLK_RGP)\n                        this.mol.setAtomElement(pos, 'R' + val);\n                    else if (type == MBLK_HYD)\n                        this.mol.setAtomHExplicit(pos, val);\n                    else if (type == MBLK_ZCH)\n                        this.mol.setAtomCharge(pos, val);\n                    else if (type == MBLK_ZBO)\n                        this.mol.setBondOrder(pos, val);\n                    else if (type == MBLK_RBC && val != 0) {\n                        if (val == -2)\n                            val = this.countRingBonds(pos);\n                        else if (val == -1)\n                            val = 0;\n                        QueryUtil.setQueryAtomRingBonds(this.mol, pos, [val]);\n                    }\n                    else if (type == MBLK_SUB && val != 0) {\n                        if (val == -2)\n                            val = this.countSubstitutions(pos);\n                        else if (val == -1)\n                            val = 0;\n                        QueryUtil.setQueryAtomAdjacency(this.mol, pos, [val]);\n                    }\n                    else if (type == MBLK_UNS) {\n                        if (val == 1)\n                            QueryUtil.setQueryAtomUnsaturated(this.mol, pos, true);\n                    }\n                }\n            }\n        }\n        this.postFix();\n        if (this.parseExtended) {\n            let artifacts = new BondArtifact(this.mol);\n            for (let atoms of resPaths.values())\n                artifacts.createPath(atoms);\n            for (let atoms of resRings.values())\n                artifacts.createRing(atoms);\n            for (let atoms of arenes.values())\n                artifacts.createArene(atoms);\n            artifacts.rewriteMolecule();\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            if (value.bracketType) {\n                superatoms.delete(key);\n                this.applyPolymerBlock(value);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            superatoms.delete(key);\n            this.applySuperAtom(value, Array.from(superatoms.values()));\n        }\n        for (let key of Vec.sorted(Array.from(mixtures.keys())))\n            this.groupMixtures.push(mixtures.get(key));\n        this.mol.keepTransient = false;\n    }\n    postFix() {\n        const mol = this.mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            if (MolUtil.hasAbbrev(mol, n) || mol.atomTransient(n).some((str) => str.startsWith(ForeignMoleculeTransient.AtomSCSRClass)))\n                continue;\n            let el = mol.atomElement(n);\n            if (el == 'D') {\n                mol.setAtomElement(n, 'H');\n                mol.setAtomIsotope(n, 2);\n            }\n            else if (el == 'T') {\n                mol.setAtomElement(n, 'H');\n                mol.setAtomIsotope(n, 3);\n            }\n            if (mol.is3D && mol.atomZ(n) === undefined)\n                mol.setAtomZ(n, 0);\n            let valence = ForeignMolecule.noteExplicitValence(this.mol, n);\n            let options = MDLMOL_VALENCE[el];\n            if (valence != null) {\n                let hcount = valence < 0 || valence > 14 ? 0 : valence;\n                for (let b of mol.atomAdjBonds(n))\n                    hcount -= mol.bondOrder(b);\n                if (hcount != mol.atomHydrogens(n))\n                    mol.setAtomHExplicit(n, Math.max(0, hcount));\n            }\n            else if (options) {\n                let chg = mol.atomCharge(n);\n                let chgmod = (el == 'C' || el == 'H') ? Math.abs(chg) : el == 'B' ? -Math.abs(chg) : -chg;\n                let usedValence = chgmod;\n                let unp = mol.atomUnpaired(n);\n                if (unp > 0 && (el == 'C' || el == 'O' || el == 'S' || el == 'N' || el == 'P'))\n                    usedValence += unp;\n                for (let b of mol.atomAdjBonds(n))\n                    usedValence += mol.bondOrder(b);\n                for (let v of options)\n                    if (usedValence <= v) {\n                        let hcount = v - usedValence;\n                        if (hcount != mol.atomHydrogens(n))\n                            mol.setAtomHExplicit(n, Math.max(0, hcount));\n                        break;\n                    }\n            }\n        }\n        if (this.considerRescale && Vec.isBlank(this.scsrTemplates))\n            CoordUtil.normaliseBondDistances(mol);\n        if (this.resBonds != null) {\n            let derez = new ResonanceRemover(mol, this.resBonds, null);\n            try {\n                derez.perform();\n                for (let n = 0; n < mol.numBonds; n++)\n                    mol.setBondOrder(n + 1, derez.bondOrders[n]);\n            }\n            catch (ex) {\n            }\n        }\n    }\n    parseV3000() {\n        var _a;\n        let Section;\n        (function (Section) {\n            Section[Section[\"Atom\"] = 0] = \"Atom\";\n            Section[Section[\"Bond\"] = 1] = \"Bond\";\n            Section[Section[\"Coll\"] = 2] = \"Coll\";\n            Section[Section[\"SGroup\"] = 3] = \"SGroup\";\n            Section[Section[\"Template\"] = 4] = \"Template\";\n        })(Section || (Section = {}));\n        let inCTAB = false, inTemplate = false;\n        let section = null;\n        let lineCounts = null;\n        let lineAtom = [], lineBond = [], lineColl = [], lineSgroup = [];\n        let asdrawnRBC = [], asdrawnSUB = [];\n        let templateBlocks = [];\n        const ERRPFX = 'Invalid MDL MOL V3000: ';\n        while (true) {\n            let fullLine = this.nextLine();\n            if (fullLine == 'M  END')\n                break;\n            if (!fullLine.startsWith('M  V30 '))\n                continue;\n            let line = fullLine.substring(7);\n            if (line.startsWith('BEGIN TEMPLATE'))\n                inTemplate = true;\n            else if (line.startsWith('END TEMPLATE'))\n                inTemplate = false;\n            else if (line.startsWith('TEMPLATE ') && inTemplate)\n                templateBlocks.push([fullLine]);\n            else if (inTemplate && templateBlocks != null)\n                Vec.last(templateBlocks).push(fullLine);\n            else if (line.startsWith('COUNTS '))\n                lineCounts = line.substring(7);\n            else if (line.startsWith('BEGIN CTAB'))\n                inCTAB = true;\n            else if (line.startsWith('BEGIN ATOM'))\n                section = Section.Atom;\n            else if (line.startsWith('BEGIN BOND'))\n                section = Section.Bond;\n            else if (line.startsWith('BEGIN COLLECTION'))\n                section = Section.Coll;\n            else if (line.startsWith('BEGIN SGROUP'))\n                section = Section.SGroup;\n            else if (line.startsWith('END '))\n                section = null;\n            else if (inCTAB && section == Section.Atom)\n                lineAtom.push(line);\n            else if (inCTAB && section == Section.Bond)\n                lineBond.push(line);\n            else if (inCTAB && section == Section.Coll)\n                lineColl.push(line);\n            else if (inCTAB && section == Section.SGroup)\n                lineSgroup.push(line);\n            else if (inCTAB && section == null) {\n                if (line.startsWith('LINKNODE ')) {\n                    let bits = this.splitWithQuotes(line.substring(9));\n                    let node = {\n                        atom: 0,\n                        nbrs: [],\n                        minRep: parseInt(bits[0]),\n                        maxRep: parseInt(bits[1])\n                    };\n                    let nb = parseInt(bits[2]);\n                    let atoms = [];\n                    for (let n = 0; n < nb * 2; n++)\n                        atoms.push(parseInt(bits[3 + n]));\n                    Vec.sort(atoms);\n                    for (let n = 0; n < atoms.length; n++) {\n                        if (n < atoms.length - 1 && atoms[n] == atoms[n + 1])\n                            node.atom = atoms[n++];\n                        else\n                            node.nbrs.push(atoms[n]);\n                    }\n                    this.groupLinkNodes.push(node);\n                }\n            }\n        }\n        let counts = lineCounts.trim().split(/\\s+/);\n        if (counts.length < 2)\n            throw ERRPFX + 'counts line malformatted';\n        let numAtoms = parseInt(counts[0]), numBonds = parseInt(counts[1]);\n        if (numAtoms < 0 || numAtoms > lineAtom.length)\n            throw ERRPFX + 'unreasonable atom count: ' + numAtoms;\n        if (numBonds < 0 || numBonds > lineBond.length)\n            throw ERRPFX + 'unreasonable bond count: ' + numBonds;\n        let atomBits = [], bondBits = [];\n        for (let n = 0; n < lineAtom.length; n++) {\n            let line = lineAtom[n];\n            while (n < lineAtom.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineAtom[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits.length < 6)\n                throw ERRPFX + 'atom line has too few components: ' + line;\n            let idx = parseInt(bits[0], 0);\n            if (idx < 1 || idx > numAtoms)\n                throw ERRPFX + 'invalid atom index: ' + bits[0];\n            if (atomBits[idx - 1] != null)\n                throw ERRPFX + 'duplicate atom index: ' + idx;\n            atomBits[idx - 1] = bits;\n        }\n        for (let n = 0; n < lineBond.length; n++) {\n            let line = lineBond[n];\n            while (n < lineBond.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineBond[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits.length < 4)\n                throw ERRPFX + 'bond line has too few components: ' + line;\n            let idx = parseInt(bits[0], 0);\n            if (idx < 1 || idx > numBonds)\n                throw ERRPFX + 'invalid bond index: ' + bits[0];\n            if (bondBits[idx - 1] != null)\n                throw ERRPFX + 'duplicate bond index: ' + idx;\n            bondBits[idx - 1] = bits;\n        }\n        for (let a = 1; a <= numAtoms; a++) {\n            let bits = atomBits[a - 1];\n            if (bits == null)\n                throw ERRPFX + 'atom definition missing for #' + a;\n            let type = bits[1];\n            if (type.length > 2 && type.startsWith('\"') && type.endsWith('\"'))\n                type = type.substring(1, type.length - 1);\n            let x = parseFloat(bits[2]), y = parseFloat(bits[3]), z = parseFloat(bits[4]);\n            let map = parseInt(bits[5]);\n            this.mol.addAtom(type, x, y);\n            if (z != 0) {\n                this.mol.setAtomZ(a, z);\n                this.mol.setIs3D(true);\n            }\n            this.mol.setAtomMapNum(a, map);\n            this.parseQueryAtomList(this.mol, a);\n            for (let i = 6; i < bits.length; i++) {\n                let eq = bits[i].indexOf('=');\n                if (eq < 0)\n                    continue;\n                let key = bits[i].substring(0, eq), val = bits[i].substring(eq + 1);\n                if (key == 'CHG')\n                    this.mol.setAtomCharge(a, parseInt(val));\n                else if (key == 'RAD') {\n                    let spin = parseInt(val);\n                    if (spin == 1 || spin == 3)\n                        this.mol.setAtomUnpaired(a, 2);\n                    else if (spin == 2)\n                        this.mol.setAtomUnpaired(a, 1);\n                }\n                else if (key == 'MASS')\n                    this.mol.setAtomIsotope(a, parseInt(val));\n                else if (key == 'CFG') {\n                    let stereo = parseInt(val);\n                    if (stereo > 0 && this.keepParity) {\n                    }\n                }\n                else if (key == 'VAL')\n                    ForeignMolecule.markExplicitValence(this.mol, a, parseInt(val));\n                else if (key == 'CLASS') {\n                    this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRClass + ':' + val);\n                }\n                else if (key == 'SEQID') {\n                    this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRSeqID + ':' + val);\n                }\n                else if (key == 'ATTCHORD') {\n                    let attch = this.unpackStrings(val);\n                    if (attch != null)\n                        this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRAttchOrd + ':' + attch.join(','));\n                }\n                else if (key == 'HCOUNT') {\n                    let hyd = parseInt(val);\n                    if (hyd != 0)\n                        QueryUtil.setQueryAtomHydrogens(this.mol, a, [Math.max(hyd, 0)]);\n                }\n                else if (key == 'RBCNT') {\n                    let rbc = parseInt(val);\n                    if (rbc == -2)\n                        asdrawnRBC.push(a);\n                    else if (rbc != 0)\n                        QueryUtil.setQueryAtomRingBonds(this.mol, a, [Math.max(rbc, 0)]);\n                }\n                else if (key == 'SUBST') {\n                    let sub = parseInt(val);\n                    if (sub == -2)\n                        asdrawnSUB.push(a);\n                    else if (sub != 0)\n                        QueryUtil.setQueryAtomAdjacency(this.mol, a, [Math.max(sub, 0)]);\n                }\n                else if (key == 'UNSAT') {\n                    let uns = parseInt(val);\n                    if (uns == 1)\n                        QueryUtil.setQueryAtomUnsaturated(this.mol, a, true);\n                }\n            }\n        }\n        for (let b = 1; b <= numBonds; b++) {\n            let bits = bondBits[b - 1];\n            if (bits == null)\n                throw ERRPFX + 'bond definition missing for #' + b;\n            let type = parseInt(bits[1]), bfr = parseInt(bits[2]), bto = parseInt(bits[3]);\n            let order = type >= 1 && type <= 3 ? type : type == 9 || type == 10 ? 0 : 1;\n            this.mol.addBond(bfr, bto, order);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroDative);\n            if (type == 10)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroHydrogen);\n            if (this.keepQuery) {\n                if (type == 4)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1]);\n                else if (type == 5)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [1, 2]);\n                else if (type == 6)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 1]);\n                else if (type == 7)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 2]);\n                else if (type == 8)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 0, 1, 2, 3]);\n            }\n            else {\n                if (type == 4) {\n                    if (this.keepAromatic)\n                        this.mol.setBondTransient(b, Vec.append(this.mol.bondTransient(b), ForeignMoleculeTransient.BondAromatic));\n                    else {\n                        if (this.resBonds == null)\n                            this.resBonds = Vec.booleanArray(false, numBonds);\n                        this.resBonds[b - 1] = true;\n                    }\n                }\n            }\n            let endpts = null;\n            let attach = null;\n            for (let i = 4; i < bits.length; i++) {\n                let eq = bits[i].indexOf('=');\n                if (eq < 0)\n                    continue;\n                let key = bits[i].substring(0, eq), val = bits[i].substring(eq + 1);\n                if (key == 'CFG') {\n                    let dir = parseInt(val);\n                    this.mol.setBondType(b, dir == 1 ? Molecule.BONDTYPE_INCLINED :\n                        dir == 2 ? Molecule.BONDTYPE_UNKNOWN :\n                            dir == 3 ? Molecule.BONDTYPE_DECLINED : Molecule.BONDTYPE_NORMAL);\n                }\n                else if (key == 'DISP') {\n                    if (val == 'COORD')\n                        this.mol.setBondOrder(b, 0);\n                }\n                else if (key == 'ENDPTS')\n                    endpts = this.unpackList(val);\n                else if (key == 'ATTACH')\n                    attach = val;\n            }\n            if (attach != null && endpts != null) {\n                if (attach == 'ALL')\n                    this.groupAttachAll.set(b, endpts);\n                else if (attach == 'ANY')\n                    this.groupAttachAny.set(b, endpts);\n            }\n        }\n        for (let atom of asdrawnRBC)\n            QueryUtil.setQueryAtomRingBonds(this.mol, atom, [this.countRingBonds(atom)]);\n        for (let atom of asdrawnSUB)\n            QueryUtil.setQueryAtomAdjacency(this.mol, atom, [this.countSubstitutions(atom)]);\n        this.postFix();\n        for (let n = 0; n < lineColl.length; n++) {\n            let line = lineColl[n];\n            while (n < lineColl.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineColl[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits[0].startsWith('MDLV30/STEABS')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoAbsolute = this.unpackList(bits[1].substring(5));\n            }\n            else if (bits[0].startsWith('MDLV30/STERAC')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoRacemic.push(this.unpackList(bits[1].substring(6)));\n            }\n            else if (bits[0].startsWith('MDLV30/STEREL')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoRelative.push(this.unpackList(bits[1].substring(6)));\n            }\n        }\n        let stereoGroup = new StereoGroup(this.mol);\n        for (let atoms of this.groupStereoRacemic)\n            stereoGroup.createRacemic(atoms);\n        for (let atoms of this.groupStereoRelative)\n            stereoGroup.createRelative(atoms);\n        stereoGroup.rewriteMolecule();\n        let superatoms = new Map();\n        for (let n = 0; n < lineSgroup.length; n++) {\n            let line = lineSgroup[n];\n            while (n < lineSgroup.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineSgroup[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            let idx = parseInt(bits[0]);\n            if (bits.length > 3 && idx > 0 && bits[1] == 'SUP') {\n                let sup = { atoms: [], name: null };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        sup.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('LABEL='))\n                        sup.name = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('XBONDS='))\n                        sup.bonds = this.unpackList(bits[i].substring(7));\n                    else if (bits[i].startsWith('CLASS='))\n                        sup.templateClass = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('NATREPLACE='))\n                        sup.natReplace = this.withoutQuotes(bits[i].substring(11));\n                    else if (bits[i].startsWith('SAP=')) {\n                        const pts = this.unpackStrings(bits[i].substring(4));\n                        sup.attachPoints = [...((_a = sup.attachPoints) !== null && _a !== void 0 ? _a : []), ...pts];\n                    }\n                }\n                superatoms.set(idx, sup);\n            }\n            else if (bits.length > 3 && idx > 0 && (bits[1] == 'MIX' || bits[1] == 'FOR') && parseInt(bits[2]) == idx) {\n                let mix = { index: idx, parent: 0, atoms: null, type: bits[1] };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        mix.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('PARENT='))\n                        mix.parent = parseInt(bits[i].substring(7));\n                }\n                this.groupMixtures.push(mix);\n            }\n            else if (bits.length > 3 && idx > 0 && (bits[1] == 'SRU' || bits[1] == 'COP' || bits[1] == 'MUL' || bits[1] == 'DAT')) {\n                let sup = { atoms: [], name: null, bracketType: bits[1] };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        sup.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('BONDS='))\n                        sup.bonds = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('LABEL='))\n                        sup.name = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('CONNECT='))\n                        sup.connectType = bits[i].substring(8);\n                    else if (bits[i].startsWith('XBCORR='))\n                        sup.bondConn = this.unpackList(bits[i].substring(7));\n                    else if (bits[i].startsWith('MULT='))\n                        sup.name = this.withoutQuotes(bits[i].substring(5));\n                    else if (bits[i].startsWith('FIELDNAME='))\n                        sup.name = this.withoutQuotes(bits[i].substring(10));\n                    else if (bits[i].startsWith('FIELDDATA='))\n                        sup.value = this.withoutQuotes(bits[i].substring(10));\n                }\n                superatoms.set(idx, sup);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            if (value.bracketType) {\n                superatoms.delete(key);\n                this.applyPolymerBlock(value);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            superatoms.delete(key);\n            this.applySuperAtom(value, Array.from(superatoms.values()));\n        }\n        if (templateBlocks.length > 0) {\n            this.scsrTemplates = templateBlocks.map((lines) => this.parseV3000Template(lines));\n        }\n    }\n    parseQueryAtomList(mol, atom) {\n        let label = mol.atomElement(atom);\n        let not = false;\n        if (label.startsWith('NOT ')) {\n            label = label.substring(4);\n            not = true;\n        }\n        if (label.length < 2 || !label.startsWith('[') || !label.endsWith(']'))\n            return;\n        label = label.substring(1, label.length - 1);\n        let elements = label.split(',');\n        mol.setAtomElement(atom, '*');\n        if (!not)\n            QueryUtil.setQueryAtomElements(mol, atom, elements);\n        else\n            QueryUtil.setQueryAtomElementsNot(mol, atom, elements);\n    }\n    applySuperAtom(sup, residual) {\n        if (sup.name == null || Vec.isBlank(sup.atoms))\n            return;\n        let mask = Vec.booleanArray(true, this.mol.numAtoms);\n        for (let a of sup.atoms)\n            mask[a - 1] = false;\n        let name = sup.name;\n        let i;\n        while ((i = name.indexOf('\\\\S')) >= 0)\n            name = name.substring(0, i) + '{^' + name.substring(i + 2);\n        while ((i = name.indexOf('\\\\s')) >= 0)\n            name = name.substring(0, i) + '{' + name.substring(i + 2);\n        while ((i = name.indexOf('\\\\n')) >= 0)\n            name = name.substring(0, i) + '}' + name.substring(i + 2);\n        let [mod, abvAtom] = !sup.templateClass ? MolUtil.convertToAbbrevIndex(this.mol, mask, name) : [null, null];\n        if (mod == null) {\n            let keyval = {};\n            if (sup.bonds)\n                keyval['bonds'] = sup.bonds.join(' ');\n            if (sup.templateClass)\n                keyval['templateClass'] = sup.templateClass;\n            if (sup.natReplace)\n                keyval['natReplace'] = sup.natReplace;\n            if (sup.attachPoints)\n                keyval['attachPoints'] = sup.attachPoints.join(' ');\n            ForeignMolecule.markSgroupMultiAttach(this.mol, name, sup.atoms, keyval);\n            return;\n        }\n        this.mol = mod;\n        let map = Vec.maskMap(mask);\n        for (let res of residual) {\n            let subsumed = false;\n            for (let n = res.atoms.length - 1; n >= 0; n--) {\n                let atom = map[res.atoms[n] - 1] + 1;\n                if (atom == 0) {\n                    res.atoms = Vec.remove(res.atoms, n);\n                    subsumed = true;\n                }\n                else\n                    res.atoms[n] = atom;\n            }\n            if (subsumed)\n                res.atoms = Vec.sorted(Vec.append(res.atoms, abvAtom));\n        }\n    }\n    applyPolymerBlock(sup) {\n        if (sup.bracketType == 'MUL') {\n            let mult = parseInt(sup.name);\n            ForeignMolecule.markSgroupMultiRepeat(this.mol, mult, sup.atoms);\n            return;\n        }\n        if (sup.bracketType == 'DAT') {\n            if (sup.atoms != null)\n                ForeignMolecule.markSgroupData(this.mol, sup.name, sup.value, sup.unit, sup.query, sup.atoms);\n            return;\n        }\n        let poly = new PolymerBlock(this.mol);\n        let connect = null;\n        if (sup.connectType == null) { }\n        else if (sup.connectType == 'HT')\n            connect = PolymerBlockConnectivity.HeadToTail;\n        else if (sup.connectType == 'HH')\n            connect = PolymerBlockConnectivity.HeadToHead;\n        else if (sup.connectType == 'EU')\n            connect = PolymerBlockConnectivity.Random;\n        else\n            return;\n        let bondConn = null;\n        if (Vec.len(sup.bondConn) == 3) {\n            let b1 = sup.bondConn[0], b2 = sup.bondConn[2], b3 = sup.bondConn[1], b4 = 0;\n            for (let n = 1; n <= this.mol.numBonds; n++)\n                if (n != b1 && n != b2 && n != b3) {\n                    let in1 = sup.atoms.indexOf(this.mol.bondFrom(n)) >= 0, in2 = sup.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n                    if ((in1 && !in2) || (!in1 && in2)) {\n                        if (b4 > 0) {\n                            b4 = 0;\n                            break;\n                        }\n                        b4 = n;\n                    }\n                }\n            bondConn = [b1, b2, b3, b4];\n        }\n        else if (Vec.len(sup.bondConn) == 4) {\n            bondConn = sup.bondConn;\n        }\n        let unit = new PolymerBlockUnit(sup.atoms);\n        unit.connect = connect;\n        unit.bondConn = bondConn;\n        poly.createUnit(unit);\n    }\n    parseV3000Template(lines) {\n        let header = lines[0];\n        let bits = this.splitWithQuotes(header.substring('M  V30 TEMPLATE '.length));\n        let name = bits[1], natReplace = null;\n        for (let n = 2; n < bits.length; n++) {\n            if (bits[n].startsWith('NATREPLACE='))\n                natReplace = bits[n].substring(11);\n        }\n        lines[0] = '  0  0  0  0  0  0  0  0  0  0  0 V3000';\n        lines.push('M  END');\n        let mdl = new MDLMOLReader(lines.join('\\n'));\n        mdl.parseHeader = false;\n        mdl.parse();\n        return { name, natReplace, mol: mdl.mol };\n    }\n    withoutQuotes(str) {\n        if (str.length >= 2 && str.startsWith('\"') && str.endsWith('\"'))\n            return str.substring(1, str.length - 1);\n        return str;\n    }\n    splitWithQuotes(line) {\n        let segments = [];\n        let seg = '';\n        let depth = 0, quote = false;\n        for (let n = 0; n < line.length; n++) {\n            let ch = line.charAt(n);\n            if (ch == ' ' && depth == 0 && !quote) {\n                if (seg.length > 0)\n                    segments.push(seg);\n                seg = '';\n            }\n            else {\n                seg += ch;\n                if (ch == '\"')\n                    quote = !quote;\n                else if (ch == '(' || ch == '[')\n                    depth++;\n                else if (ch == ')' || ch == ']')\n                    depth--;\n            }\n        }\n        if (seg.length > 0)\n            segments.push(seg);\n        return segments;\n    }\n    unpackList(str) {\n        if (!str.startsWith('(') || !str.endsWith(')'))\n            return null;\n        str = str.substring(1, str.length - 1);\n        let values = [];\n        for (let bit of str.split(' '))\n            values.push(parseInt(bit));\n        if (values[0] != values.length - 1)\n            return null;\n        return Vec.remove(values, 0);\n    }\n    unpackStrings(str) {\n        if (!str.startsWith('(') || !str.endsWith(')'))\n            return null;\n        str = str.substring(1, str.length - 1);\n        let values = str.split(' ');\n        if (parseInt(values[0]) != values.length - 1)\n            return null;\n        return Vec.remove(values, 0);\n    }\n    countRingBonds(atom) {\n        let count = 0;\n        for (let b of this.mol.atomAdjBonds(atom))\n            if (this.mol.bondInRing(b))\n                count++;\n        return count;\n    }\n    countSubstitutions(atom) {\n        let count = 0;\n        for (let adj of this.mol.atomAdjList(atom))\n            if (this.mol.atomElement(adj) != 'H')\n                count++;\n        return count;\n    }\n}\nexport class MDLSDFReader {\n    constructor(strData) {\n        this.ds = new DataSheet();\n        this.upcastColumns = true;\n        this.pos = 0;\n        this.lines = strData.split(/\\r?\\n/);\n    }\n    parse() {\n        this.parseStream();\n        if (this.upcastColumns)\n            this.upcastStringColumns();\n        return this.ds;\n    }\n    parseStream() {\n        let ds = this.ds;\n        ds.appendColumn('Molecule', \"molecule\", 'Molecular structure');\n        let colName = -1;\n        let entry = [];\n        while (this.pos < this.lines.length) {\n            let line = this.lines[this.pos++];\n            if (!line.startsWith('$$$$')) {\n                entry.push(line);\n                continue;\n            }\n            let rn = ds.appendRow();\n            let molstr = '';\n            let pos = 0;\n            while (pos < entry.length) {\n                line = entry[pos];\n                if (line.startsWith('> '))\n                    break;\n                molstr += line + '\\n';\n                pos++;\n                if (line.startsWith('M\tEND'))\n                    break;\n            }\n            let mol = null, name = null;\n            try {\n                if (molstr.length > 0) {\n                    let mdl = new MDLMOLReader(molstr);\n                    mdl.parse();\n                    mol = mdl.mol;\n                    name = mdl.molName;\n                }\n            }\n            catch (ex) {\n            }\n            if (mol != null)\n                ds.setMolecule(rn, 0, mol);\n            if (name) {\n                if (colName < 0)\n                    colName = ds.appendColumn('Name', \"string\", 'Molecule name');\n                ds.setString(rn, colName, name);\n            }\n            if (rn == 0 && mol != null) {\n                let str1 = entry[0], str3 = entry[2];\n                if (str1.length >= 7 && str1.startsWith('$name=')) {\n                    ds.changeColumnName(0, str1.substring(6), ds.colDescr(0));\n                }\n                if (str3.length >= 8 && str3.startsWith('$title=')) {\n                    ds.title = str3.substring(7);\n                }\n            }\n            for (; pos + 1 < entry.length; pos += 3) {\n                let key = entry[pos], val = entry[pos + 1];\n                if (!key.startsWith('>'))\n                    continue;\n                let z = key.indexOf('<');\n                if (z < 0)\n                    continue;\n                key = key.substring(z + 1);\n                z = key.indexOf('>');\n                if (z < 0)\n                    continue;\n                key = key.substring(0, z);\n                if (key.length == 0)\n                    continue;\n                while (pos + 2 < entry.length && entry[pos + 2].length > 0) {\n                    val += '\\n' + entry[pos + 2];\n                    pos++;\n                }\n                let cn = ds.findColByName(key);\n                if (cn < 0)\n                    cn = ds.appendColumn(key, \"string\", '');\n                if (val.length == 0)\n                    ds.setToNull(rn, cn);\n                else\n                    ds.setString(rn, cn, val);\n            }\n            entry = [];\n        }\n        if (ds.numRows == 0)\n            this.ds = null;\n    }\n    upcastStringColumns() {\n        let ds = this.ds;\n        for (let i = 0; i < ds.numCols; i++)\n            if (ds.colType(i) == \"string\") {\n                let allnull = true, allreal = true, allint = true, allbool = true;\n                for (let j = 0; j < ds.numRows; j++) {\n                    if (!allreal && !allint && !allbool)\n                        break;\n                    if (ds.isNull(j, i))\n                        continue;\n                    allnull = false;\n                    let val = ds.getString(j, i);\n                    if (allbool) {\n                        let lc = val.toLowerCase();\n                        if (lc != 'true' && lc != 'false')\n                            allbool = false;\n                    }\n                    if (allint) {\n                        let int = parseInt(val);\n                        if (!isFinite(int) || int != parseFloat(val))\n                            allint = false;\n                    }\n                    if (allreal) {\n                        if (!isFinite(parseFloat(val)))\n                            allreal = false;\n                    }\n                }\n                if (allnull) { }\n                else if (allint)\n                    ds.changeColumnType(i, \"integer\");\n                else if (allreal)\n                    ds.changeColumnType(i, \"real\");\n                else if (allbool)\n                    ds.changeColumnType(i, \"boolean\");\n            }\n    }\n}\n//# sourceMappingURL=MDLReader.js.map","import { Vec } from '../util/Vec';\nimport { BondArtifact } from './BondArtifact';\nimport { ForeignMolecule, ForeignMoleculeTransient } from './ForeignMolecule';\nimport { MDLMOL_VALENCE } from './MDLReader';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity } from './PolymerBlock';\nimport { QueryUtil } from './QueryUtil';\nimport { StereoGroup } from './StereoGroup';\nconst VPFX = 'M  V30 ';\nexport class MDLMOLWriter {\n    constructor(mol) {\n        this.mol = mol;\n        this.includeHeader = true;\n        this.includeCounts = true;\n        this.includeEnd = true;\n        this.overallStereoAbsolute = true;\n        this.enhancedFields = true;\n        this.chargeSeparate = false;\n        this.abbrevSgroups = true;\n        this.polymerBlocks = true;\n        this.molName = '';\n        this.scsrTemplates = null;\n        this.sgroups = [];\n        this.lines = [];\n    }\n    write() {\n        if (this.includeHeader) {\n            this.lines.push(this.molName);\n            this.lines.push('Generated by WebMolKit');\n            this.lines.push('');\n        }\n        this.writeCTAB();\n        return this.lines.join('\\n');\n    }\n    writeV3000() {\n        if (this.includeHeader) {\n            this.lines.push(this.molName);\n            this.lines.push('Generated by WebMolKit');\n            this.lines.push('');\n        }\n        this.writeCTAB3000();\n        return this.lines.join('\\n');\n    }\n    writeEither() {\n        let triggered = StereoGroup.hasStereoGroups(this.mol) || this.mol.numAtoms >= 1000 || this.mol.numBonds >= 1000 || Vec.notBlank(this.scsrTemplates);\n        if (!triggered)\n            for (let n = 1; n <= this.mol.numBonds; n++)\n                if (this.mol.bondOrder(n) == 0 && QueryUtil.queryBondOrders(this.mol, n) == null) {\n                    triggered = true;\n                    break;\n                }\n        if (triggered)\n            return this.writeV3000();\n        else\n            return this.write();\n    }\n    getResult() {\n        return this.lines.join('\\n');\n    }\n    writeCTAB() {\n        var _a;\n        let mol = this.mol = this.mol.clone();\n        mol.keepTransient = true;\n        if (MolUtil.hasAnyAbbrev(mol) || ForeignMolecule.hasAnySgroupMultiAttach(mol) || ForeignMolecule.hasAnySgroupMultiRepeat(mol) || ForeignMolecule.hasAnySgroupData(mol)) {\n            if (this.abbrevSgroups)\n                this.partialAbbrevExpansion();\n            else\n                MolUtil.expandAbbrevs(mol, true);\n            this.prepareSgroups();\n        }\n        let atomList1 = [], atomList2 = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let elements = null;\n            let logic = 'F';\n            elements = QueryUtil.queryAtomElements(mol, n);\n            if (elements == null) {\n                elements = QueryUtil.queryAtomElementsNot(mol, n);\n                logic = 'T';\n            }\n            if (elements == null)\n                continue;\n            mol.setAtomElement(n, 'L');\n            let line = this.intrpad(n, 3) + ' ' + logic + '  ' + this.intrpad(elements.length, 3);\n            for (let el of elements)\n                line += this.intrpad(Molecule.elementAtomicNumber(el), 4);\n            atomList1.push(line);\n            line = 'M  ALS ' + this.intrpad(n, 3) + this.intrpad(elements.length, 3) + ' ' + logic + ' ';\n            for (let el of elements)\n                line += this.pad(el, 4);\n            atomList2.push(line);\n        }\n        this.lines.push(this.intrpad(mol.numAtoms, 3) + this.intrpad(mol.numBonds, 3) + this.intrpad(atomList1.length, 3) +\n            '  0' + (this.overallStereoAbsolute ? '  1' : '  0') + '  0  0  0  0  0999 V2000');\n        let chgidx = [], chgval = [];\n        let radidx = [], radval = [];\n        let isoidx = [], isoval = [];\n        let rgpidx = [], rgpval = [];\n        let hydidx = [], hydval = [];\n        let zchidx = [], zchval = [];\n        let zboidx = [], zboval = [];\n        let rbcidx = [], rbcval = [];\n        let subidx = [], subval = [];\n        let unsidx = [], unsval = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n), y = mol.atomY(n);\n            let z = mol.is3D() ? mol.atomZ(n) : 0;\n            let line = this.rpad(x.toFixed(4), 10) + this.rpad(y.toFixed(4), 10) + this.rpad(z.toFixed(4), 10);\n            let el = mol.atomElement(n);\n            let str = el;\n            if (str.length > 3)\n                str = str.substring(0, 3);\n            if (str.length > 1 && str.charAt(0) == 'R' && str.charAt(1) >= '0' && str.charAt(1) <= '9') {\n                rgpidx.push(n);\n                rgpval.push(parseInt(str.substring(1)));\n                str = 'R#';\n            }\n            while (str.length < 4)\n                str += ' ';\n            line += ' ' + str + '0';\n            let chg = mol.atomCharge(n), rad = mol.atomUnpaired(n), mapnum = mol.atomMapNum(n);\n            if (chg >= -3 && chg <= -1)\n                chg = 4 - chg;\n            else if (chg == 0 && rad == 2)\n                chg = 4;\n            else if (chg >= 1 && chg <= 3)\n                chg = 4 - chg;\n            else\n                chg = 0;\n            let qhyd = QueryUtil.queryAtomHydrogens(mol, n);\n            let hyd = 0;\n            if (Vec.len(qhyd) == 1)\n                hyd = qhyd[0] + 1;\n            let val = this.mdlValence(mol, n, 15);\n            line += this.intrpad(chg, 3) + '  0' + this.intrpad(hyd, 3) + '  0' + this.intrpad(val, 3) + '  0  0  0' + this.intrpad(mapnum, 3) + '  0  0';\n            this.lines.push(line);\n            if (mol.atomCharge(n) != 0) {\n                chgidx.push(n);\n                chgval.push(mol.atomCharge(n));\n            }\n            if (this.enhancedFields) {\n                if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN) {\n                    hydidx.push(n);\n                    hydval.push(mol.atomHExplicit(n));\n                }\n            }\n            if (rad == 1) {\n                radidx.push(n);\n                radval.push(2);\n            }\n            if (rad == 2) {\n                radidx.push(n);\n                radval.push(1);\n            }\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) {\n                isoidx.push(n);\n                isoval.push(mol.atomIsotope(n));\n            }\n            let qrbc = QueryUtil.queryAtomRingBonds(mol, n), qsub = QueryUtil.queryAtomAdjacency(mol, n);\n            let quns = QueryUtil.queryAtomUnsaturated(mol, n);\n            if (Vec.len(qrbc) == 1) {\n                rbcidx.push(n);\n                rbcval.push(qrbc[0] == 0 ? -1 : qrbc[0]);\n            }\n            if (Vec.len(qsub) == 1) {\n                subidx.push(n);\n                subval.push(qsub[0] == 0 ? -1 : qsub[0]);\n            }\n            if (quns == true) {\n                unsidx.push(n);\n                unsval.push(1);\n            }\n        }\n        let maskArom = ForeignMolecule.noteAromaticBonds(mol);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let order = mol.bondOrder(n), type = order;\n            let qbond = Vec.sorted((_a = QueryUtil.queryBondOrders(mol, n)) !== null && _a !== void 0 ? _a : []);\n            if (maskArom[n - 1] || Vec.equals(qbond, [-1]))\n                type = 4;\n            else if (Vec.equals(qbond, [1, 2]))\n                type = 5;\n            else if (Vec.equals(qbond, [-1, 1]))\n                type = 6;\n            else if (Vec.equals(qbond, [-1, 2]))\n                type = 7;\n            else if (Vec.equals(qbond, [-1, 0, 1, 2, 3]))\n                type = 8;\n            else if (type > 3)\n                type = 3;\n            let stereo = mol.bondType(n);\n            if (stereo == Molecule.BONDTYPE_NORMAL) { }\n            else if (stereo == Molecule.BONDTYPE_INCLINED) {\n                stereo = 1;\n            }\n            else if (stereo == Molecule.BONDTYPE_DECLINED) {\n                stereo = 6;\n            }\n            else if (stereo == Molecule.BONDTYPE_UNKNOWN) {\n                if (type == 1)\n                    stereo = 4;\n                else\n                    stereo = 3;\n            }\n            else\n                stereo = 0;\n            let line = this.intrpad(mol.bondFrom(n), 3) + this.intrpad(mol.bondTo(n), 3) +\n                this.intrpad(type, 3) + this.intrpad(stereo, 3) + '  0  0  0';\n            this.lines.push(line);\n            if (this.enhancedFields) {\n                if ((order < 1 || order > 3) || type != order && Vec.isBlank(qbond)) {\n                    zboidx.push(n);\n                    zboval.push(order);\n                }\n            }\n        }\n        this.lines.push(...atomList1);\n        this.lines.push(...atomList2);\n        this.writeMBlockPair('CHG', chgidx, chgval);\n        this.writeMBlockPair('RAD', radidx, radval);\n        this.writeMBlockPair('ISO', isoidx, isoval);\n        this.writeMBlockPair('RGP', rgpidx, rgpval);\n        this.writeMBlockPair('HYD', hydidx, hydval);\n        this.writeMBlockPair('ZCH', zchidx, zchval);\n        this.writeMBlockPair('ZBO', zboidx, zboval);\n        this.writeMBlockPair('RBC', rbcidx, rbcval);\n        this.writeMBlockPair('SUB', subidx, subval);\n        this.writeMBlockPair('UNS', unsidx, unsval);\n        if (this.enhancedFields) {\n            let artifacts = new BondArtifact(this.mol);\n            let idx = 0;\n            for (let path of artifacts.getResPaths())\n                this.writeMBlockFlat('ZPA', ++idx, path.atoms);\n            for (let ring of artifacts.getResRings())\n                this.writeMBlockFlat('ZRI', ++idx, ring.atoms);\n            for (let arene of artifacts.getArenes())\n                this.writeMBlockFlat('ZAR', ++idx, Vec.prepend(arene.atoms, arene.centre));\n        }\n        let inSgroup = Vec.booleanArray(false, mol.numAtoms);\n        for (let s = 0; s < this.sgroups.length; s++) {\n            let sg = this.sgroups[s];\n            for (let n of sg.atoms)\n                inSgroup[n - 1] = true;\n            let sidx = this.intrpad(s + 1, 4);\n            this.lines.push('M  STY  1' + sidx + ' ' + sg.type);\n            for (let n = 0; n < sg.atoms.length; n += 15) {\n                let sz = Math.min(sg.atoms.length - n, 15);\n                let line = 'M  SAL' + sidx + this.intrpad(sz, 3);\n                for (let i = 0; i < sz; i++)\n                    line += this.intrpad(sg.atoms[n + i], 4);\n                this.lines.push(line);\n            }\n            if (sg.type != 'DAT')\n                this.lines.push('M  SMT' + sidx + ' ' + sg.name);\n            if (sg.type == 'MUL') {\n                let mult = parseInt(sg.name), unit = sg.atoms.length / mult;\n                for (let n = 0; n < unit; n += 15) {\n                    let sz = Math.min(unit - n, 15);\n                    let line = 'M  SPA' + sidx + this.intrpad(sz, 3);\n                    for (let i = 0; i < sz; i++)\n                        line += this.intrpad(sg.atoms[n + i], 4);\n                    this.lines.push(line);\n                }\n                if (sg.parent > 0)\n                    this.lines.push('M  SPL    1' + sidx + this.intrpad(sg.parent, 4));\n            }\n            if (sg.type == 'DAT') {\n                this.lines.push('M  SDT' + sidx + ' ' + this.pad(sg.name, 32) + this.pad(sg.unit, 20) + sg.query);\n                this.lines.push('M  SED' + sidx + ' ' + sg.value);\n            }\n        }\n        if (this.polymerBlocks)\n            this.encodePolymerBlocks(this.sgroups.length);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomElement(n).length > 2) {\n                this.lines.push('A  ' + this.intrpad(n, 3));\n                this.lines.push(mol.atomElement(n));\n            }\n        if (this.includeEnd)\n            this.lines.push('M  END');\n    }\n    writeMBlockPair(token, idx, val) {\n        const sz = idx.length;\n        for (let i = 0; i < sz; i += 8) {\n            let count = Math.min(8, sz - i);\n            let line = 'M  ' + token + this.intrpad(count, 3);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(idx[i + j], 4) + this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    writeMBlockFlat(token, idx, val) {\n        const sz = val.length;\n        for (let i = 0; i < sz; i += 15) {\n            let count = Math.min(15, sz - i);\n            let line = 'M  ' + token + this.intrpad(count, 3) + this.intrpad(idx, 4);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    writeMBlockFlatIdxFirst(token, idx, val) {\n        const sz = val.length;\n        for (let i = 0; i < sz; i += 15) {\n            let count = Math.min(15, sz - i);\n            let line = 'M  ' + token + this.intrpad(idx, 4) + this.intrpad(count, 3);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    intrpad(num, sz) {\n        return this.rpad(num.toString(), sz);\n    }\n    rpad(str, sz) {\n        while (str.length < sz)\n            str = ' ' + str;\n        return str;\n    }\n    pad(str, sz) {\n        while (str.length < sz)\n            str += ' ';\n        return str;\n    }\n    mdlValence(mol, atom, zeroVal) {\n        let marked = ForeignMolecule.noteExplicitValence(mol, atom);\n        if (marked != null)\n            return marked > 0 ? marked : zeroVal;\n        let hyd = mol.atomHydrogens(atom), el = mol.atomElement(atom);\n        let options = MDLMOL_VALENCE[el];\n        if (options == null && hyd == 0)\n            return 0;\n        let chg = mol.atomCharge(atom);\n        let chgmod = (el == 'C' || el == 'H') ? Math.abs(chg) : el == 'B' ? -Math.abs(chg) : -chg;\n        let bondSum = 0;\n        for (let b of mol.atomAdjBonds(atom))\n            bondSum += mol.bondOrder(b);\n        let nativeVal = chgmod + hyd + bondSum;\n        if (options === null || options === void 0 ? void 0 : options.includes(nativeVal))\n            return 0;\n        let val = nativeVal - chgmod;\n        return val <= 0 || val > 14 ? zeroVal : val;\n    }\n    partialAbbrevExpansion() {\n        const { mol } = this;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                let frag = MolUtil.getAbbrev(mol, n);\n                if (frag == null || mol.atomAdjCount(n) != 1) {\n                    MolUtil.clearAbbrev(mol, n);\n                    continue;\n                }\n                if (MolUtil.hasAnyAbbrev(frag)) {\n                    MolUtil.expandAbbrevs(frag, true);\n                    MolUtil.setAbbrev(mol, n, frag);\n                }\n                let order = mol.bondOrder(mol.atomAdjBonds(n)[0]);\n                if (frag.atomAdjCount(1) == 1 && order == frag.bondOrder(frag.atomAdjBonds(1)[0]))\n                    continue;\n                MolUtil.expandOneAbbrev(mol, n, true);\n                n--;\n            }\n    }\n    prepareSgroups() {\n        const { mol } = this;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomMapNum(n) < 0)\n                mol.setAtomMapNum(n, 0);\n        let next = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                this.sgroups.push({ type: 'SUP', name: mol.atomElement(n), atoms: null });\n                let mask = MolUtil.expandOneAbbrev(mol, n, true);\n                if (mask == null)\n                    continue;\n                next--;\n                for (let i = 0; i < mask.length; i++)\n                    if (mask[i])\n                        mol.setAtomMapNum(i + 1, next);\n                n--;\n            }\n        for (let idx = -1, p = 0; idx >= next; idx--, p++) {\n            let atoms = [];\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomMapNum(n) == idx) {\n                    atoms.push(n);\n                    mol.setAtomMapNum(n, 0);\n                }\n            this.sgroups[p].atoms = atoms;\n        }\n        for (let ma of ForeignMolecule.noteAllSgroupMultiAttach(mol)) {\n            let sg = { type: 'SUP', name: ma.name, atoms: ma.atoms };\n            let str = ma.keyval['bonds'];\n            if (str)\n                sg.bonds = str.split(' ').map((v) => parseInt(v));\n            sg.templateClass = ma.keyval['templateClass'];\n            sg.natReplace = ma.keyval['natReplace'];\n            str = ma.keyval['attachPoints'];\n            if (str)\n                sg.attachPoints = str.split(' ');\n            this.sgroups.push(sg);\n        }\n        for (let mr of ForeignMolecule.noteAllSgroupMultiRepeat(mol))\n            this.sgroups.push({ type: 'MUL', name: mr.mult.toString(), atoms: mr.atoms });\n        for (let dat of ForeignMolecule.noteAllSgroupData(mol))\n            this.sgroups.push({ type: 'DAT', name: dat.name, value: dat.value, unit: dat.unit, query: dat.query, atoms: dat.atoms });\n        for (let n = 0; n < this.sgroups.length; n++) {\n            let sg = this.sgroups[n];\n            if (sg.type != 'MUL')\n                continue;\n            let bestIdx = -1, bestSize = Number.MAX_SAFE_INTEGER;\n            skip: for (let i = 0; i < this.sgroups.length; i++)\n                if (i != n) {\n                    let look = this.sgroups[i];\n                    if (look.type != 'MUL' || look.atoms.length >= bestSize)\n                        continue;\n                    for (let a of sg.atoms)\n                        if (!look.atoms.includes(a))\n                            continue skip;\n                    bestIdx = i;\n                    bestSize = look.atoms.length;\n                }\n            if (bestIdx >= 0)\n                sg.parent = bestIdx + 1;\n        }\n    }\n    encodePolymerBlocks(idx) {\n        let polymers = new PolymerBlock(this.mol);\n        for (let id of polymers.getIDList()) {\n            let unit = polymers.getUnit(id);\n            let sidx = this.intrpad(++idx, 4);\n            this.lines.push('M  STY  1' + sidx + ' SRU');\n            if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                this.lines.push('M  SCN  1' + sidx + ' HT ');\n            else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                this.lines.push('M  SCN  1' + sidx + ' HH ');\n            else if (unit.connect == PolymerBlockConnectivity.Random)\n                this.lines.push('M  SCN  1' + sidx + ' EU ');\n            this.writeMBlockFlatIdxFirst('SAL', idx, unit.atoms);\n            let bonds = null;\n            for (let n = 1; n <= this.mol.numBonds; n++) {\n                let fl1 = unit.atoms.indexOf(this.mol.bondFrom(n)) >= 0, fl2 = unit.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n                if ((fl1 && !fl2) || (!fl1 && fl2))\n                    bonds = Vec.append(bonds, n);\n            }\n            if (bonds != null)\n                this.writeMBlockFlatIdxFirst('SBL', idx, bonds);\n            if (Vec.len(unit.bondConn) == 4) {\n                let bcrs = [unit.bondConn[0], unit.bondConn[2], unit.bondConn[1]];\n                this.writeMBlockFlatIdxFirst('CRS', idx, bcrs);\n            }\n            this.lines.push('M  SMT' + sidx + ' n');\n        }\n    }\n    writeCTAB3000() {\n        var _a;\n        let mol = this.mol;\n        if (MolUtil.hasAnyAbbrev(mol) || ForeignMolecule.hasAnySgroupMultiAttach(mol) || ForeignMolecule.hasAnySgroupMultiRepeat(mol) || ForeignMolecule.hasAnySgroupData(mol)) {\n            mol = this.mol = mol.clone();\n            mol.keepTransient = true;\n            if (this.abbrevSgroups)\n                this.partialAbbrevExpansion();\n            else\n                MolUtil.expandAbbrevs(mol, true);\n            this.prepareSgroups();\n        }\n        let sgroupText = this.populateV3000Sgroups();\n        if (this.includeCounts)\n            this.lines.push('  0  0  0     0  0            999 V3000');\n        this.lines.push(VPFX + 'BEGIN CTAB');\n        this.lines.push(VPFX + `COUNTS ${mol.numAtoms} ${mol.numBonds} ${sgroupText.length} 0 ${this.overallStereoAbsolute ? 1 : 0}`);\n        this.lines.push(VPFX + 'BEGIN ATOM');\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let label = mol.atomElement(n);\n            let qel = QueryUtil.queryAtomElements(mol, n);\n            if (qel != null)\n                label = '[' + qel.join(',') + ']';\n            else {\n                qel = QueryUtil.queryAtomElementsNot(mol, n);\n                if (qel != null)\n                    label = 'NOT [' + qel.join(',') + ']';\n            }\n            if (label.includes(' '))\n                label = `\"${label}\"`;\n            let x = mol.atomX(n), y = mol.atomY(n);\n            let z = mol.is3D() ? mol.atomZ(n) : 0;\n            let mapnum = mol.atomMapNum(n), chg = mol.atomCharge(n), unp = mol.atomUnpaired(n);\n            let isotope = mol.atomIsotope(n), val = this.mdlValence(mol, n, -1);\n            let line = `${VPFX}${n} ${label} ${x.toFixed(4)} ${y.toFixed(4)} ${z.toFixed(4)} ${mapnum}`;\n            if (chg != 0)\n                line += ' CHG=' + chg;\n            if (unp == 1)\n                line += ' RAD=2';\n            else if (unp == 2)\n                line += ' RAD=1';\n            if (isotope != 0)\n                line += ' MASS=' + isotope;\n            if (val != 0)\n                line += ' VAL=' + val;\n            let qhyd = QueryUtil.queryAtomHydrogens(mol, n), qrbc = QueryUtil.queryAtomRingBonds(mol, n), qsub = QueryUtil.queryAtomAdjacency(mol, n);\n            let quns = QueryUtil.queryAtomUnsaturated(mol, n);\n            if (Vec.len(qhyd) == 1)\n                line += ' HCOUNT=' + (qhyd[0] == 0 ? -1 : qhyd[0]);\n            if (Vec.len(qrbc) == 1)\n                line += ' RBCNT=' + (qrbc[0] == 0 ? -1 : qrbc[0]);\n            if (Vec.len(qsub) == 1)\n                line += ' SUBST=' + (qsub[0] == 0 ? -1 : qsub[0]);\n            if (quns == true)\n                line += ' UNSAT=1';\n            for (let trans of mol.atomTransient(n)) {\n                if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRClass))\n                    line += ' CLASS=' + trans.substring(ForeignMoleculeTransient.AtomSCSRClass.length + 1);\n                else if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRSeqID))\n                    line += ' SEQID=' + trans.substring(ForeignMoleculeTransient.AtomSCSRSeqID.length + 1);\n                else if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRAttchOrd)) {\n                    let bits = trans.substring(ForeignMoleculeTransient.AtomSCSRAttchOrd.length + 1).split(',');\n                    line += ' ATTCHORD=' + this.packV3000Strings(bits);\n                }\n            }\n            this.lines.push(line);\n        }\n        this.lines.push(VPFX + 'END ATOM');\n        if (mol.numBonds > 0) {\n            this.lines.push(VPFX + 'BEGIN BOND');\n            let maskArom = ForeignMolecule.noteAromaticBonds(mol);\n            let maskHBond = ForeignMolecule.noteZeroHydrogenBonds(mol);\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n                let order = mol.bondOrder(n), type = order;\n                let qbond = Vec.sorted((_a = QueryUtil.queryBondOrders(mol, n)) !== null && _a !== void 0 ? _a : []);\n                if (maskArom[n - 1] || Vec.equals(qbond, [-1]))\n                    type = 4;\n                else if (Vec.equals(qbond, [1, 2]))\n                    type = 5;\n                else if (Vec.equals(qbond, [-1, 1]))\n                    type = 6;\n                else if (Vec.equals(qbond, [-1, 2]))\n                    type = 7;\n                else if (Vec.equals(qbond, [-1, 0, 1, 2, 3]))\n                    type = 8;\n                else if (type == 0) {\n                    if (!maskHBond[n - 1])\n                        type = 9;\n                    else\n                        type = 10;\n                }\n                else if (type > 3)\n                    type = 3;\n                let stereo = mol.bondType(n);\n                let line = `${VPFX}${n} ${type} ${bfr} ${bto}`;\n                if (stereo == Molecule.BONDTYPE_INCLINED)\n                    line += ' CFG=1';\n                else if (stereo == Molecule.BONDTYPE_DECLINED)\n                    line += ' CFG=3';\n                else if (stereo == Molecule.BONDTYPE_UNKNOWN)\n                    line += ' CFG=2';\n                if (order == 0 && !maskHBond[n - 1])\n                    line += ' DISP=COORD';\n                this.lines.push(line);\n            }\n            this.lines.push(VPFX + 'END BOND');\n        }\n        if (sgroupText.length > 0) {\n            this.lines.push(VPFX + 'BEGIN SGROUP');\n            this.lines.push(...sgroupText);\n            this.lines.push(VPFX + 'END SGROUP');\n        }\n        let collections = [];\n        let stereoGroup = new StereoGroup(mol);\n        let racidx = 0, relidx = 0;\n        for (let atoms of stereoGroup.getRacemicAtoms())\n            collections.push(VPFX + 'MDLV30/STERAC' + (++racidx) + ' ATOMS=' + this.packV3000List(atoms));\n        for (let atoms of stereoGroup.getRelativeAtoms())\n            collections.push(VPFX + 'MDLV30/STEREL' + (++relidx) + ' ATOMS=' + this.packV3000List(atoms));\n        if (collections.length > 0) {\n            this.lines.push(VPFX + 'BEGIN COLLECTION');\n            this.lines.push(...collections);\n            this.lines.push(VPFX + 'END COLLECTION');\n        }\n        this.lines.push(VPFX + 'END CTAB');\n        if (Vec.notBlank(this.scsrTemplates))\n            this.populateSCSRTemplates();\n        if (this.includeEnd)\n            this.lines.push('M  END');\n    }\n    populateV3000Sgroups() {\n        let mol = this.mol;\n        let lines = [];\n        for (let s = 0; s < this.sgroups.length; s++) {\n            let sg = this.sgroups[s];\n            let sid = lines.length + 1;\n            let txt = `${VPFX}${sid} ${sg.type} 0`;\n            if (sg.type == 'SUP') {\n                txt += ' LABEL=' + (sg.name.includes(' ') ? `\"${sg.name}\"` : sg.name);\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                if (sg.bonds)\n                    txt += ' XBONDS=' + this.packV3000List(sg.bonds);\n                if (sg.templateClass)\n                    txt += ' CLASS=' + sg.templateClass;\n                if (sg.natReplace)\n                    txt += ' NATREPLACE=' + sg.natReplace;\n                if (sg.attachPoints) {\n                    for (let n = 0; n + 2 < sg.attachPoints.length; n += 3) {\n                        let v1 = sg.attachPoints[n], v2 = sg.attachPoints[n + 1], v3 = sg.attachPoints[n + 2];\n                        txt += ` SAP=(3 ${v1} ${v2} ${v3})`;\n                    }\n                }\n            }\n            else if (sg.type == 'MUL') {\n                let mult = parseInt(sg.name), unit = sg.atoms.length / mult;\n                txt += ' MULT=' + sg.name;\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                txt += ' PATOMS=' + this.packV3000List(sg.atoms.slice(0, unit));\n                if (sg.parent > 0)\n                    txt += ' PARENT=' + sg.parent;\n            }\n            else if (sg.type == 'DAT') {\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                txt += ' FIELDNAME=' + (sg.name.includes(' ') ? `\"${sg.name}\"` : sg.name);\n                txt += ' FIELDDATA=' + (sg.value.includes(' ') ? `\"${sg.value}\"` : sg.value);\n            }\n            lines.push(txt);\n        }\n        if (this.polymerBlocks) {\n            let polymers = new PolymerBlock(mol);\n            for (let id of polymers.getIDList()) {\n                let sid = lines.length + 1;\n                let unit = polymers.getUnit(id);\n                let txt = `${VPFX}${sid} SRU 0`;\n                txt += ' ATOMS=' + this.packV3000List(unit.atoms);\n                if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                    txt += ' CONNECT=HT';\n                else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                    txt += ' CONNECT=HH';\n                else if (unit.connect == PolymerBlockConnectivity.Random)\n                    txt += ' CONNECT=EU';\n                let bonds = [];\n                for (let n = 1; n <= mol.numBonds; n++) {\n                    let fl1 = unit.atoms.includes(mol.bondFrom(n)), fl2 = unit.atoms.includes(mol.bondTo(n));\n                    if ((fl1 && !fl2) || (!fl1 && fl2))\n                        bonds.push(n);\n                }\n                if (bonds.length > 0)\n                    txt += ' BONDS=' + this.packV3000List(bonds);\n                if (unit.bondConn != null)\n                    txt += ' XBCORR=' + this.packV3000List(unit.bondConn);\n                lines.push(txt);\n            }\n        }\n        return lines;\n    }\n    populateSCSRTemplates() {\n        this.lines.push(VPFX + 'BEGIN TEMPLATE');\n        for (let n = 0; n < this.scsrTemplates.length; n++) {\n            var defn = this.scsrTemplates[n];\n            let line = VPFX + 'TEMPLATE ' + (n + 1) + ' ' + defn.name;\n            if (defn.natReplace)\n                line += ' NATREPLACE=' + defn.natReplace;\n            this.lines.push(line);\n            var tmdl = new MDLMOLWriter(defn.mol);\n            tmdl.includeHeader = false;\n            tmdl.includeCounts = false;\n            tmdl.includeEnd = false;\n            let molfile = tmdl.writeV3000();\n            for (line of molfile.trimEnd().split('\\n'))\n                this.lines.push(line);\n        }\n        this.lines.push(VPFX + 'END TEMPLATE');\n    }\n    packV3000List(values) {\n        let str = '(' + values.length;\n        for (let v of values)\n            str += ' ' + v;\n        return str + ')';\n    }\n    packV3000Strings(values) {\n        let str = '(' + values.length;\n        for (let v of values)\n            str += ' ' + v;\n        return str + ')';\n    }\n}\nexport class MDLSDFWriter {\n    constructor(ds) {\n        this.ds = ds;\n        this.enhancedFields = true;\n        this.chargeSeparate = false;\n        this.abbrevSgroups = true;\n        this.lines = [];\n    }\n    write() {\n        let ds = this.ds, lines = this.lines;\n        let colMol = this.ds.firstColOfType(\"molecule\");\n        for (let i = 0; i < ds.numRows; i++) {\n            let mol = colMol < 0 ? null : ds.getMolecule(i, colMol);\n            if (mol != null) {\n                let wtr = new MDLMOLWriter(mol);\n                wtr.enhancedFields = this.enhancedFields;\n                wtr.chargeSeparate = this.chargeSeparate;\n                wtr.abbrevSgroups = this.abbrevSgroups;\n                let molstr = wtr.write();\n                lines.push(molstr);\n            }\n            for (let j = 0; j < ds.numCols; j++)\n                if (j != colMol && ds.notNull(i, j)) {\n                    let ct = ds.colType(j);\n                    let val = '';\n                    if (ct == \"string\")\n                        val = ds.getString(i, j);\n                    else if (ct == \"integer\")\n                        val = ds.getInteger(i, j).toString();\n                    else if (ct == \"real\")\n                        val = ds.getReal(i, j).toString();\n                    else if (ct == \"boolean\")\n                        val = ds.getBoolean(i, j) ? 'true' : 'false';\n                    if (val != '') {\n                        lines.push('> <' + ds.colName(j) + '>');\n                        lines.push(val);\n                        lines.push('');\n                    }\n                }\n            lines.push('$$$$');\n        }\n        return lines.join('\\n');\n    }\n    getResult() {\n        return this.lines.join('\\n');\n    }\n}\n//# sourceMappingURL=MDLWriter.js.map","import { MDLMOLReader } from './MDLReader';\nimport { MDLMOLWriter } from './MDLWriter';\nimport { Molecule } from './Molecule';\nexport class MoleculeStream {\n    static readUnknown(strData) {\n        if (strData.startsWith('\"')) {\n            try {\n                let jsonStr = JSON.parse(strData);\n                let mol = MoleculeStream.readNative(jsonStr);\n                if (mol)\n                    return mol;\n            }\n            catch (ex) { }\n        }\n        let mol = MoleculeStream.readNative(strData);\n        if (mol)\n            return mol;\n        try {\n            mol = MoleculeStream.readMDLMOL(strData);\n        }\n        catch (e) { }\n        return mol;\n    }\n    static readNative(strData) {\n        let mol = new Molecule();\n        mol.keepTransient = true;\n        let lines = strData.split(/\\r?\\n/);\n        if (lines.length < 2)\n            return null;\n        if (!lines[0].startsWith('SketchEl!') && lines.length >= 4 && lines[3].indexOf('V2000') >= 0) {\n            let i = strData.indexOf('SketchEl!');\n            if (i < 0)\n                return null;\n            lines = strData.substring(i).split(/r?\\n/);\n        }\n        let hdr = lines[0].match(/^SketchEl\\!\\((\\d+)\\,(\\d+)\\)/);\n        if (!hdr)\n            return null;\n        let numAtoms = parseInt(hdr[1]), numBonds = parseInt(hdr[2]);\n        if (lines.length < 2 + numAtoms + numBonds)\n            return null;\n        if (!lines[1 + numAtoms + numBonds].match(/^!End/))\n            return null;\n        for (let n = 0; n < numAtoms; n++) {\n            let bits = lines[1 + n].split(/[=,;]/);\n            let num = mol.addAtom(MoleculeStream.skUnescape(bits[0]), parseFloat(bits[1]), parseFloat(bits[2]), parseInt(bits[3]), parseInt(bits[4]));\n            let extra = [], trans = [];\n            for (let i = 5; i < bits.length; i++) {\n                let ch = bits[i].charAt(0);\n                if (bits[i].charAt(0) == 'i') { }\n                else if (bits[i].charAt(0) == 'e')\n                    mol.setAtomHExplicit(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'm')\n                    mol.setAtomIsotope(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'n')\n                    mol.setAtomMapNum(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'x')\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'y')\n                    trans.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'z') {\n                    mol.setAtomZ(num, parseFloat(bits[i].substring(1)));\n                    mol.setIs3D(true);\n                }\n                else\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n            }\n            mol.setAtomExtra(num, extra);\n            mol.setAtomTransient(num, trans);\n        }\n        for (let n = 0; n < numBonds; n++) {\n            let bits = lines[1 + numAtoms + n].split(/[=,]/);\n            let frto = bits[0].split('-');\n            let bfr = parseInt(frto[0].trim()), bto = parseInt(frto[1].trim());\n            if (bfr == bto)\n                continue;\n            let num = mol.addBond(bfr, bto, parseInt(bits[1]), parseInt(bits[2]));\n            let extra = new Array(), trans = new Array();\n            for (let i = 3; i < bits.length; i++) {\n                let ch = bits[i].charAt(0);\n                if (bits[i].charAt(0) == 'x')\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'y')\n                    trans.push(MoleculeStream.skUnescape(bits[i]));\n                else\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n            }\n            mol.setBondExtra(num, extra);\n            mol.setBondTransient(num, trans);\n        }\n        mol.keepTransient = false;\n        return mol;\n    }\n    static writeNative(mol) {\n        let ret = 'SketchEl!(' + mol.numAtoms + ',' + mol.numBonds + ')\\n';\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let el = mol.atomElement(n), x = mol.atomX(n), y = mol.atomY(n), charge = mol.atomCharge(n), unpaired = mol.atomUnpaired(n);\n            let hy = mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN ? ('e' + mol.atomHExplicit(n)) : ('i' + mol.atomHydrogens(n));\n            ret += MoleculeStream.skEscape(el) + '=' + x.toFixed(4) + ',' + y.toFixed(4) + ';' + charge + ',' + unpaired + ',' + hy;\n            if (mol.is3D())\n                ret += ',z' + mol.atomZ(n);\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL)\n                ret += ',m' + mol.atomIsotope(n);\n            if (mol.atomMapNum(n) > 0)\n                ret += ',n' + mol.atomMapNum(n);\n            ret += MoleculeStream.skEncodeExtra(mol.atomExtra(n));\n            ret += MoleculeStream.skEncodeExtra(mol.atomTransient(n));\n            ret += '\\n';\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            ret += mol.bondFrom(n) + '-' + mol.bondTo(n) + '=' + mol.bondOrder(n) + ',' + mol.bondType(n);\n            ret += MoleculeStream.skEncodeExtra(mol.bondExtra(n));\n            ret += MoleculeStream.skEncodeExtra(mol.bondTransient(n));\n            ret += '\\n';\n        }\n        ret += '!End\\n';\n        return ret;\n    }\n    static readMDLMOL(strData) {\n        let src = new MDLMOLReader(strData);\n        src.parseHeader = true;\n        src.parse();\n        return src.mol;\n    }\n    static writeMDLMOL(mol) {\n        return new MDLMOLWriter(mol).write();\n    }\n    static skUnescape(str) {\n        let ret = '', match;\n        while (match = str.match(/^(.*?)\\\\([0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])(.*)/)) {\n            ret += match[1] + String.fromCharCode(parseInt('0x' + match[2]));\n            str = match[3];\n        }\n        return ret + str;\n    }\n    static skEscape(str) {\n        let ret = '';\n        for (let n = 0; n < str.length; n++) {\n            let ch = str.charAt(n), code = str.charCodeAt(n);\n            if (code <= 32 || code > 127 || ch == '\\\\' || ch == ',' || ch == ';' || ch == '=') {\n                let hex = (code & 0xFFFF).toString(16).toUpperCase();\n                ret += '\\\\';\n                for (let i = 4 - hex.length; i > 0; i--)\n                    ret += '0';\n                ret += hex;\n            }\n            else\n                ret += ch;\n        }\n        return ret;\n    }\n    static skEncodeExtra(extra) {\n        let ret = '';\n        for (let n = 0; n < extra.length; n++)\n            ret += ',' + MoleculeStream.skEscape(extra[n]);\n        return ret;\n    }\n}\n//# sourceMappingURL=MoleculeStream.js.map","import { Box } from '../util/Geom';\nimport { deepClone } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { MoleculeStream } from './MoleculeStream';\nclass Atom {\n}\nclass Bond {\n}\nexport class Molecule {\n    constructor() {\n        this.atoms = [];\n        this.bonds = [];\n        this.hasZCoord = false;\n        this.keepTransient = false;\n        this.hasTransient = false;\n        this.graph = null;\n        this.graphBond = null;\n        this.ringID = null;\n        this.compID = null;\n        this.ring3 = null;\n        this.ring4 = null;\n        this.ring5 = null;\n        this.ring6 = null;\n        this.ring7 = null;\n    }\n    clone() {\n        let dup = new Molecule();\n        dup.atoms = deepClone(this.atoms);\n        dup.bonds = deepClone(this.bonds);\n        dup.hasZCoord = this.hasZCoord;\n        dup.keepTransient = this.keepTransient;\n        dup.hasTransient = this.hasTransient;\n        dup.graph = this.graph;\n        dup.graphBond = this.graphBond;\n        dup.ringID = this.ringID;\n        dup.compID = this.compID;\n        dup.ring3 = this.ring3;\n        dup.ring4 = this.ring4;\n        dup.ring5 = this.ring5;\n        dup.ring6 = this.ring6;\n        dup.ring7 = this.ring7;\n        return dup;\n    }\n    static fromString(strData) { return MoleculeStream.readNative(strData); }\n    toString() { return MoleculeStream.writeNative(this); }\n    append(frag) {\n        let base = this.atoms.length;\n        for (let n = 1; n <= frag.numAtoms; n++) {\n            let num = this.addAtom(frag.atomElement(n), frag.atomX(n), frag.atomY(n), frag.atomCharge(n), frag.atomUnpaired(n));\n            this.setAtomIsotope(num, frag.atomIsotope(n));\n            this.setAtomHExplicit(num, frag.atomHExplicit(n));\n            this.setAtomMapNum(num, frag.atomMapNum(n));\n            this.setAtomExtra(num, frag.atomExtra(n));\n            this.setAtomTransient(num, frag.atomTransient(n));\n        }\n        for (let n = 1; n <= frag.numBonds; n++) {\n            let num = this.addBond(frag.bondFrom(n) + base, frag.bondTo(n) + base, frag.bondOrder(n), frag.bondType(n));\n            this.setBondExtra(num, frag.bondExtra(n));\n            this.setBondTransient(num, frag.bondTransient(n));\n        }\n        this.trashTransient();\n    }\n    get numAtoms() { return this.atoms.length; }\n    getAtom(idx) {\n        if (idx < 1 || idx > this.atoms.length)\n            throw new Error(`Molecule.getAtom: index ${idx} out of range (#atoms=${this.atoms.length})`);\n        return this.atoms[idx - 1];\n    }\n    atomElement(idx) { return this.getAtom(idx).element; }\n    atomX(idx) { return this.getAtom(idx).x; }\n    atomY(idx) { return this.getAtom(idx).y; }\n    atomCharge(idx) { return this.getAtom(idx).charge; }\n    atomUnpaired(idx) { return this.getAtom(idx).unpaired; }\n    atomIsotope(idx) { return this.getAtom(idx).isotope; }\n    atomHExplicit(idx) { return this.getAtom(idx).hExplicit; }\n    atomMapNum(idx) { return this.getAtom(idx).mapNum; }\n    atomExtra(idx) { return this.getAtom(idx).extra.slice(0); }\n    atomTransient(idx) { return this.getAtom(idx).transient.slice(0); }\n    get numBonds() { return this.bonds.length; }\n    getBond(idx) {\n        if (idx < 1 || idx > this.bonds.length)\n            throw new Error(`Molecule.getBond: index ${idx} out of range (#bonds=${this.bonds.length})`);\n        return this.bonds[idx - 1];\n    }\n    bondFrom(idx) { return this.getBond(idx).from; }\n    bondTo(idx) { return this.getBond(idx).to; }\n    bondOrder(idx) { return this.getBond(idx).order; }\n    bondType(idx) { return this.getBond(idx).type; }\n    bondExtra(idx) { return this.getBond(idx).extra.slice(0); }\n    bondTransient(idx) { return this.getBond(idx).transient.slice(0); }\n    bondFromTo(idx) { let b = this.getBond(idx); return [b.from, b.to]; }\n    addAtom(element, x, y, charge = 0, unpaired = 0) {\n        let a = new Atom();\n        a.element = element;\n        a.x = x;\n        a.y = y;\n        a.charge = charge;\n        a.unpaired = unpaired;\n        a.isotope = Molecule.ISOTOPE_NATURAL;\n        a.hExplicit = Molecule.HEXPLICIT_UNKNOWN;\n        a.mapNum = 0;\n        a.extra = [];\n        a.transient = [];\n        this.atoms.push(a);\n        this.trashTransient();\n        this.trashGraph();\n        return this.atoms.length;\n    }\n    setAtomElement(idx, element) {\n        this.getAtom(idx).element = element;\n        this.trashTransient();\n    }\n    setAtomPos(idx, x, y, z) {\n        let a = this.getAtom(idx);\n        a.x = x;\n        a.y = y;\n        a.z = z == null ? 0 : z;\n        this.trashTransient();\n    }\n    setAtomX(idx, x) {\n        this.getAtom(idx).x = x;\n        this.trashTransient();\n    }\n    setAtomY(idx, y) {\n        this.getAtom(idx).y = y;\n        this.trashTransient();\n    }\n    setAtomCharge(idx, charge) {\n        this.getAtom(idx).charge = charge;\n        this.trashTransient();\n    }\n    setAtomUnpaired(idx, unpaired) {\n        this.getAtom(idx).unpaired = unpaired;\n        this.trashTransient();\n    }\n    setAtomIsotope(idx, isotope) {\n        this.getAtom(idx).isotope = isotope;\n        this.trashTransient();\n    }\n    setAtomHExplicit(idx, hExplicit) {\n        this.getAtom(idx).hExplicit = hExplicit;\n        this.trashTransient();\n    }\n    setAtomMapNum(idx, mapNum) {\n        this.getAtom(idx).mapNum = mapNum;\n        this.trashTransient();\n    }\n    setAtomExtra(idx, extra) {\n        this.getAtom(idx).extra = extra.slice(0);\n    }\n    setAtomTransient(idx, transi) {\n        this.getAtom(idx).transient = transi.slice(0);\n        if (transi.length > 0)\n            this.hasTransient = true;\n    }\n    swapAtoms(a1, a2) {\n        let a = this.atoms[a1 - 1];\n        this.atoms[a1 - 1] = this.atoms[a2 - 1];\n        this.atoms[a2 - 1] = a;\n        for (let n = 0; n < this.bonds.length; n++) {\n            let b = this.bonds[n];\n            if (b.from == a2)\n                b.from = a1;\n            else if (b.from == a1)\n                b.from = a2;\n            if (b.to == a2)\n                b.to = a1;\n            else if (b.to == a1)\n                b.to = a2;\n        }\n        this.trashGraph();\n    }\n    addBond(from, to, order, type = Molecule.BONDTYPE_NORMAL) {\n        let b = new Bond();\n        b.from = from;\n        b.to = to;\n        b.order = order;\n        b.type = type;\n        b.extra = [];\n        b.transient = [];\n        this.bonds.push(b);\n        this.trashTransient();\n        this.trashGraph();\n        return this.bonds.length;\n    }\n    setBondFrom(idx, bfr) {\n        this.getBond(idx).from = bfr;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondTo(idx, to) {\n        this.getBond(idx).to = to;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondFromTo(idx, bfr, bto) {\n        this.getBond(idx).from = bfr;\n        this.getBond(idx).to = bto;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondOrder(idx, order) {\n        this.getBond(idx).order = order;\n        this.trashTransient();\n    }\n    setBondType(idx, type) {\n        this.getBond(idx).type = type;\n        this.trashTransient();\n    }\n    setBondExtra(idx, extra) {\n        this.getBond(idx).extra = extra.slice(0);\n    }\n    setBondTransient(idx, transi) {\n        this.getBond(idx).transient = transi.slice(0);\n        if (transi.length > 0)\n            this.hasTransient = true;\n    }\n    deleteAtomAndBonds(idx) {\n        for (let n = this.numBonds; n >= 1; n--) {\n            if (this.bondFrom(n) == idx || this.bondTo(n) == idx)\n                this.deleteBond(n);\n            else {\n                if (this.bondFrom(n) > idx)\n                    this.setBondFrom(n, this.bondFrom(n) - 1);\n                if (this.bondTo(n) > idx)\n                    this.setBondTo(n, this.bondTo(n) - 1);\n            }\n        }\n        this.atoms.splice(idx - 1, 1);\n        this.trashTransient();\n        this.trashGraph();\n    }\n    deleteBond(idx) {\n        this.bonds.splice(idx - 1, 1);\n        this.trashTransient();\n        this.trashGraph();\n    }\n    atomHydrogens(idx) {\n        let hy = this.atomHExplicit(idx);\n        if (hy != Molecule.HEXPLICIT_UNKNOWN)\n            return hy;\n        for (let n = 0; n < Molecule.HYVALENCE_EL.length; n++)\n            if (Molecule.HYVALENCE_EL[n] == this.atomElement(idx)) {\n                hy = Molecule.HYVALENCE_VAL[n];\n                break;\n            }\n        if (hy == Molecule.HEXPLICIT_UNKNOWN)\n            return 0;\n        let ch = this.atomCharge(idx);\n        if (this.atomElement(idx) == 'C')\n            ch = -Math.abs(ch);\n        hy += ch - this.atomUnpaired(idx);\n        let adjBonds = this.atomAdjBonds(idx);\n        for (let n = 0; n < adjBonds.length; n++)\n            hy -= this.bondOrder(adjBonds[n]);\n        return hy < 0 ? 0 : hy;\n    }\n    findBond(a1, a2) {\n        for (let n = 1; n <= this.numBonds; n++) {\n            let b1 = this.bondFrom(n), b2 = this.bondTo(n);\n            if ((a1 == b1 && a2 == b2) || (a1 == b2 && a2 == b1))\n                return n;\n        }\n        return 0;\n    }\n    bondOther(idx, ref) {\n        let b1 = this.bondFrom(idx), b2 = this.bondTo(idx);\n        if (b1 == ref)\n            return b2;\n        if (b2 == ref)\n            return b1;\n        return 0;\n    }\n    atomExplicit(idx) {\n        let a = this.atoms[idx - 1];\n        if (a.isotope != Molecule.ISOTOPE_NATURAL)\n            return true;\n        if (a.element != 'C' || a.charge != 0 || a.unpaired != 0)\n            return true;\n        if (this.atomAdjCount(idx) == 0)\n            return true;\n        return false;\n    }\n    atomRingBlock(idx) {\n        if (this.graph == null)\n            this.buildGraph();\n        if (this.ringID == null)\n            this.buildRingID();\n        return this.ringID[idx - 1];\n    }\n    bondInRing(idx) {\n        let r1 = this.atomRingBlock(this.bondFrom(idx)), r2 = this.atomRingBlock(this.bondTo(idx));\n        return r1 > 0 && r1 == r2;\n    }\n    atomConnComp(idx) {\n        if (this.graph == null)\n            this.buildGraph();\n        if (this.compID == null)\n            this.buildConnComp();\n        return this.compID[idx - 1];\n    }\n    atomAdjCount(idx) {\n        this.buildGraph();\n        return this.graph[idx - 1].length;\n    }\n    atomAdjList(idx) {\n        this.buildGraph();\n        let adj = this.graph[idx - 1].slice(0);\n        for (let n = adj.length - 1; n >= 0; n--)\n            adj[n]++;\n        return adj;\n    }\n    atomAdjBonds(idx) {\n        this.buildGraph();\n        return this.graphBond[idx - 1].slice(0);\n    }\n    findRingsOfSize(size) {\n        let rings = null;\n        if (size == 3 && this.ring3 != null)\n            rings = this.ring3;\n        if (size == 4 && this.ring4 != null)\n            rings = this.ring4;\n        if (size == 5 && this.ring5 != null)\n            rings = this.ring5;\n        if (size == 6 && this.ring6 != null)\n            rings = this.ring6;\n        if (size == 7 && this.ring7 != null)\n            rings = this.ring7;\n        if (rings == null) {\n            if (this.graph == null)\n                this.buildGraph();\n            if (this.ringID == null)\n                this.buildRingID();\n            rings = [];\n            for (let n = 1; n <= this.atoms.length; n++) {\n                if (this.ringID[n - 1] > 0) {\n                    let path = Vec.numberArray(0, size);\n                    path[0] = n;\n                    this.recursiveRingFind(path, 1, size, this.ringID[n - 1], rings);\n                }\n            }\n            if (size == 3)\n                this.ring3 = rings;\n            if (size == 4)\n                this.ring4 = rings;\n            if (size == 5)\n                this.ring5 = rings;\n            if (size == 6)\n                this.ring6 = rings;\n            if (size == 7)\n                this.ring7 = rings;\n        }\n        let ret = [];\n        for (let n = 0; n < rings.length; n++)\n            ret.push(rings[n].slice(0));\n        return ret;\n    }\n    boundary() {\n        if (this.atoms.length == 0)\n            return Box.zero();\n        let x1 = this.atoms[0].x, x2 = x1;\n        let y1 = this.atoms[0].y, y2 = y1;\n        for (let n = 1; n < this.atoms.length; n++) {\n            x1 = Math.min(x1, this.atoms[n].x);\n            y1 = Math.min(y1, this.atoms[n].y);\n            x2 = Math.max(x2, this.atoms[n].x);\n            y2 = Math.max(y2, this.atoms[n].y);\n        }\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    atomicNumber(idx) {\n        return Molecule.elementAtomicNumber(this.atomElement(idx));\n    }\n    static elementAtomicNumber(element) {\n        return Math.max(0, Chemistry.ELEMENTS.indexOf(element));\n    }\n    is3D() { return this.hasZCoord; }\n    setIs3D(v) { this.hasZCoord = v; }\n    atomZ(idx) { return this.getAtom(idx).z; }\n    setAtomZ(idx, z) { this.getAtom(idx).z = z; }\n    compareTo(other) {\n        if (other == null || other.numAtoms == 0)\n            return this.numAtoms == 0 ? 0 : 1;\n        if (this.numAtoms < other.numAtoms)\n            return -1;\n        if (this.numAtoms > other.numAtoms)\n            return 1;\n        if (this.numBonds < other.numBonds)\n            return -1;\n        if (this.numBonds > other.numBonds)\n            return 1;\n        for (let n = 1; n <= this.numAtoms; n++) {\n            if (this.atomElement(n) < other.atomElement(n))\n                return -1;\n            if (this.atomElement(n) > other.atomElement(n))\n                return 1;\n            if (this.atomX(n) < other.atomX(n))\n                return -1;\n            if (this.atomX(n) > other.atomX(n))\n                return 1;\n            if (this.atomY(n) < other.atomY(n))\n                return -1;\n            if (this.atomY(n) > other.atomY(n))\n                return 1;\n            if (this.atomCharge(n) < other.atomCharge(n))\n                return -1;\n            if (this.atomCharge(n) > other.atomCharge(n))\n                return 1;\n            if (this.atomUnpaired(n) < other.atomUnpaired(n))\n                return -1;\n            if (this.atomUnpaired(n) > other.atomUnpaired(n))\n                return 1;\n            if (this.atomHExplicit(n) < other.atomHExplicit(n))\n                return -1;\n            if (this.atomHExplicit(n) > other.atomHExplicit(n))\n                return 1;\n            if (this.atomIsotope(n) < other.atomIsotope(n))\n                return -1;\n            if (this.atomIsotope(n) > other.atomIsotope(n))\n                return 1;\n            if (this.atomMapNum(n) < other.atomMapNum(n))\n                return -1;\n            if (this.atomMapNum(n) > other.atomMapNum(n))\n                return 1;\n            let tx1 = this.atomExtra(n), tx2 = other.atomExtra(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n            tx1 = this.atomTransient(n);\n            tx2 = other.atomTransient(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n        }\n        for (let n = 1; n <= this.numBonds; n++) {\n            if (this.bondFrom(n) < other.bondFrom(n))\n                return -1;\n            if (this.bondFrom(n) > other.bondFrom(n))\n                return 1;\n            if (this.bondTo(n) < other.bondTo(n))\n                return -1;\n            if (this.bondTo(n) > other.bondTo(n))\n                return 1;\n            if (this.bondOrder(n) < other.bondOrder(n))\n                return -1;\n            if (this.bondOrder(n) > other.bondOrder(n))\n                return 1;\n            if (this.bondType(n) < other.bondType(n))\n                return -1;\n            if (this.bondType(n) > other.bondType(n))\n                return 1;\n            let tx1 = this.bondExtra(n), tx2 = other.bondExtra(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n            tx1 = this.bondTransient(n);\n            tx2 = other.bondTransient(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n        }\n        return 0;\n    }\n    trashTransient() {\n        if (this.keepTransient || !this.hasTransient)\n            return;\n        for (let a of this.atoms)\n            a.transient = [];\n        for (let b of this.bonds)\n            b.transient = [];\n        this.hasTransient = false;\n    }\n    appendAtomExtra(atom, extra) {\n        this.getAtom(atom).extra.push(extra);\n    }\n    appendAtomTransient(atom, trans) {\n        this.getAtom(atom).transient.push(trans);\n    }\n    appendBondExtra(bond, extra) {\n        this.getBond(bond).extra.push(extra);\n    }\n    appendBondTransient(bond, trans) {\n        this.getBond(bond).transient.push(trans);\n    }\n    trashGraph() {\n        this.graph = null;\n        this.graphBond = null;\n        this.ringID = null;\n        this.compID = null;\n        this.ring3 = null;\n        this.ring4 = null;\n        this.ring5 = null;\n        this.ring6 = null;\n        this.ring7 = null;\n    }\n    buildGraph() {\n        if (this.graph != null && this.graphBond != null)\n            return;\n        let graph = [], graphBond = [];\n        let na = this.numAtoms, nb = this.numBonds;\n        for (let n = 0; n < na; n++) {\n            graph.push([]);\n            graphBond.push([]);\n        }\n        for (let n = 1; n <= nb; n++) {\n            let b = this.getBond(n);\n            graph[b.from - 1].push(b.to - 1);\n            graph[b.to - 1].push(b.from - 1);\n            graphBond[b.from - 1].push(n);\n            graphBond[b.to - 1].push(n);\n        }\n        this.graph = graph;\n        this.graphBond = graphBond;\n    }\n    buildConnComp() {\n        const numAtoms = this.atoms.length;\n        this.compID = Vec.numberArray(0, numAtoms);\n        for (let n = 0; n < numAtoms; n++)\n            this.compID[n] = 0;\n        let comp = 1;\n        this.compID[0] = comp;\n        while (true) {\n            let anything = false;\n            for (let n = 0; n < numAtoms; n++)\n                if (this.compID[n] == comp) {\n                    for (let i = 0; i < this.graph[n].length; i++) {\n                        if (this.compID[this.graph[n][i]] == 0) {\n                            this.compID[this.graph[n][i]] = comp;\n                            anything = true;\n                        }\n                    }\n                }\n            if (!anything) {\n                for (let n = 0; n < numAtoms; n++) {\n                    if (this.compID[n] == 0) {\n                        this.compID[n] = ++comp;\n                        anything = true;\n                        break;\n                    }\n                }\n                if (!anything)\n                    break;\n            }\n        }\n    }\n    buildRingID() {\n        const numAtoms = this.atoms.length;\n        this.ringID = Vec.numberArray(0, numAtoms);\n        if (numAtoms == 0)\n            return;\n        let visited = Vec.booleanArray(false, numAtoms);\n        for (let n = 0; n < numAtoms; n++) {\n            this.ringID[n] = 0;\n            visited[n] = false;\n        }\n        let path = Vec.numberArray(0, numAtoms + 1), plen = 0, numVisited = 0;\n        while (true) {\n            let last, current;\n            if (plen == 0) {\n                last = -1;\n                for (current = 0; visited[current]; current++) { }\n            }\n            else {\n                last = path[plen - 1];\n                current = -1;\n                for (let n = 0; n < this.graph[last].length; n++) {\n                    if (!visited[this.graph[last][n]]) {\n                        current = this.graph[last][n];\n                        break;\n                    }\n                }\n            }\n            if (current >= 0 && plen >= 2) {\n                let back = path[plen - 1];\n                for (let n = 0; n < this.graph[current].length; n++) {\n                    let join = this.graph[current][n];\n                    if (join != back && visited[join]) {\n                        path[plen] = current;\n                        for (let i = plen; i == plen || path[i + 1] != join; i--) {\n                            let id = this.ringID[path[i]];\n                            if (id == 0)\n                                this.ringID[path[i]] = last;\n                            else if (id != last) {\n                                for (let j = 0; j < numAtoms; j++)\n                                    if (this.ringID[j] == id)\n                                        this.ringID[j] = last;\n                            }\n                        }\n                    }\n                }\n            }\n            if (current >= 0) {\n                visited[current] = true;\n                path[plen++] = current;\n                numVisited++;\n            }\n            else {\n                plen--;\n            }\n            if (numVisited == numAtoms)\n                break;\n        }\n        let nextID = 0;\n        for (let i = 0; i < numAtoms; i++) {\n            if (this.ringID[i] > 0) {\n                nextID--;\n                for (let j = numAtoms - 1; j >= i; j--)\n                    if (this.ringID[j] == this.ringID[i])\n                        this.ringID[j] = nextID;\n            }\n        }\n        for (let i = 0; i < numAtoms; i++)\n            this.ringID[i] = -this.ringID[i];\n    }\n    recursiveRingFind(path, psize, capacity, rblk, rings) {\n        const { graph } = this;\n        if (psize < capacity) {\n            let last = path[psize - 1];\n            for (let n = 0; n < graph[last - 1].length; n++) {\n                let adj = graph[last - 1][n] + 1;\n                if (this.ringID[adj - 1] != rblk)\n                    continue;\n                let fnd = false;\n                for (let i = 0; i < psize; i++) {\n                    if (path[i] == adj) {\n                        fnd = true;\n                        break;\n                    }\n                }\n                if (!fnd) {\n                    let newPath = path.slice(0);\n                    newPath[psize] = adj;\n                    this.recursiveRingFind(newPath, psize + 1, capacity, rblk, rings);\n                }\n            }\n            return;\n        }\n        let last = path[psize - 1];\n        let fnd = false;\n        for (let n = 0; n < graph[last - 1].length; n++) {\n            if (graph[last - 1][n] + 1 == path[0]) {\n                fnd = true;\n                break;\n            }\n        }\n        if (!fnd)\n            return;\n        for (let n = 0; n < path.length; n++) {\n            let count = 0, p = path[n] - 1;\n            for (let i = 0; i < graph[p].length; i++)\n                if (path.indexOf(graph[p][i] + 1) >= 0)\n                    count++;\n            if (count != 2)\n                return;\n        }\n        let first = 0;\n        for (let n = 1; n < psize; n++)\n            if (path[n] < path[first])\n                first = n;\n        let fm = (first - 1 + psize) % psize, fp = (first + 1) % psize;\n        let flip = path[fm] < path[fp];\n        if (first != 0 || flip) {\n            let newPath = Vec.numberArray(0, psize);\n            for (let n = 0; n < psize; n++)\n                newPath[n] = path[(first + (flip ? psize - n : n)) % psize];\n            path = newPath;\n        }\n        for (let n = 0; n < rings.length; n++) {\n            let look = rings[n];\n            let same = true;\n            for (let i = 0; i < psize; i++) {\n                if (look[i] != path[i]) {\n                    same = false;\n                    break;\n                }\n            }\n            if (same)\n                return;\n        }\n        rings.push(path);\n    }\n}\nMolecule.IDEALBOND = 1.5;\nMolecule.HEXPLICIT_UNKNOWN = -1;\nMolecule.ISOTOPE_NATURAL = 0;\nMolecule.BONDTYPE_NORMAL = 0;\nMolecule.BONDTYPE_INCLINED = 1;\nMolecule.BONDTYPE_DECLINED = 2;\nMolecule.BONDTYPE_UNKNOWN = 3;\nMolecule.HYVALENCE_EL = ['C', 'N', 'O', 'S', 'P'];\nMolecule.HYVALENCE_VAL = [4, 3, 2, 2, 3];\nMolecule.PREFIX_EXTRA = 'x';\nMolecule.PREFIX_TRANSIENT = 'y';\n//# sourceMappingURL=Molecule.js.map","import { angleDiff, angleNorm, DEGRAD, norm2_xy, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Graph } from './Graph';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nexport class CoordUtil {\n    static atomAtPoint(mol, x, y, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.OVERLAP_THRESHOLD;\n        const tolsq = tolerance * tolerance;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y) < tolsq)\n                return n;\n        return 0;\n    }\n    static sketchEquivalent(mol1, mol2, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.DEFAULT_EQUIV_TOLERANCE;\n        const na = mol1.numAtoms, nb = mol1.numBonds;\n        if (na != mol2.numAtoms || nb != mol2.numBonds)\n            return false;\n        const tolsq = tolerance * tolerance;\n        let box1 = mol1.boundary(), box2 = mol2.boundary();\n        if (Math.abs(box1.minX() - box2.minX()) > tolerance)\n            return false;\n        if (Math.abs(box1.minY() - box2.minY()) > tolerance)\n            return false;\n        if (Math.abs(box1.maxX() - box2.maxX()) > tolerance)\n            return false;\n        if (Math.abs(box1.maxY() - box2.maxY()) > tolerance)\n            return false;\n        let mx1 = MolUtil.arrayAtomX(mol1), my1 = MolUtil.arrayAtomY(mol1);\n        let mx2 = MolUtil.arrayAtomX(mol2), my2 = MolUtil.arrayAtomY(mol2);\n        let map = Vec.numberArray(0, na);\n        let mask = Vec.booleanArray(false, na);\n        for (let i = 0; i < na; i++) {\n            let j = -1;\n            if (norm2_xy(mx1[i] - mx2[i], my1[i] - my2[i]) < tolsq)\n                j = i;\n            if (j < 0) {\n                let bestdsq = Number.MAX_VALUE;\n                for (let n = 0; n < na; n++)\n                    if (!mask[n]) {\n                        let dsq = norm2_xy(mx1[i] - mx2[n], my1[i] - my2[n]);\n                        if (dsq < bestdsq) {\n                            bestdsq = dsq;\n                            j = n;\n                        }\n                    }\n                if (j < 0 || bestdsq > tolsq)\n                    return false;\n            }\n            map[i] = j + 1;\n            mask[j] = true;\n            if (mol1.atomElement(i + 1) != mol2.atomElement(j + 1))\n                return false;\n            if (mol1.atomCharge(i + 1) != mol2.atomCharge(j + 1))\n                return false;\n            if (mol1.atomUnpaired(i + 1) != mol2.atomUnpaired(j + 1))\n                return false;\n            if (mol1.atomHExplicit(i + 1) != mol2.atomHExplicit(j + 1) &&\n                mol1.atomHExplicit(i + 1) != Molecule.HEXPLICIT_UNKNOWN &&\n                mol2.atomHExplicit(j + 1) != Molecule.HEXPLICIT_UNKNOWN)\n                return false;\n        }\n        for (let i = 1; i <= nb; i++) {\n            let i1 = mol1.bondFrom(i), i2 = mol1.bondTo(i), j1 = map[i1 - 1], j2 = map[i2 - 1];\n            let j = mol2.findBond(j1, j2);\n            if (j == 0)\n                return false;\n            if (mol1.bondOrder(i) != mol2.bondOrder(j) || mol1.bondType(i) != mol2.bondType(j))\n                return false;\n            if (mol2.bondFrom(j) == j1 && mol2.bondTo(j) == j2) { }\n            else if (mol2.bondType(j) != Molecule.BONDTYPE_INCLINED &&\n                mol2.bondType(j) != Molecule.BONDTYPE_DECLINED &&\n                mol2.bondFrom(j) == j2 && mol2.bondTo(j) == j1) { }\n            else\n                return false;\n        }\n        return true;\n    }\n    static sketchMappable(mol1, mol2, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.DEFAULT_EQUIV_TOLERANCE;\n        let box1 = mol1.boundary(), box2 = mol2.boundary();\n        let dx = box1.minX() - box2.minX(), dy = box1.minY() - box2.minY();\n        if (Math.abs(dx) > tolerance * 0.1 || Math.abs(dy) > tolerance * 0.1) {\n            mol2 = mol2.clone();\n            for (let n = 1; n <= mol2.numAtoms; n++)\n                mol2.setAtomPos(n, mol2.atomX(n) + dx, mol2.atomY(n) + dy);\n        }\n        return CoordUtil.sketchEquivalent(mol1, mol2, tolerance);\n    }\n    static atomBondAngles(mol, atom, adj) {\n        if (adj == null)\n            adj = mol.atomAdjList(atom);\n        let bndang = [];\n        let cx = mol.atomX(atom), cy = mol.atomY(atom);\n        for (let a of adj)\n            bndang.push(Math.atan2(mol.atomY(a) - cy, mol.atomX(a) - cx));\n        return bndang;\n    }\n    static overlapsAtom(mol, x, y, tol) {\n        const tolsq = tol * tol;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y) < tolsq)\n                return true;\n        return false;\n    }\n    static overlappingAtomMask(mol, thresh) {\n        if (thresh == null)\n            thresh = CoordUtil.OVERLAP_THRESHOLD;\n        const sz = mol.numAtoms;\n        let box = mol.boundary();\n        let p1, p2;\n        if (box.w > box.h) {\n            p1 = MolUtil.arrayAtomX(mol);\n            p2 = MolUtil.arrayAtomY(mol);\n        }\n        else {\n            p1 = MolUtil.arrayAtomY(mol);\n            p2 = MolUtil.arrayAtomX(mol);\n        }\n        let omask = Vec.booleanArray(false, sz);\n        let idx = Vec.idxSort(p1);\n        const threshSQ = thresh * thresh;\n        for (let i = 1; i < sz - 1; i++) {\n            for (let j = i - 1; j >= 0; j--) {\n                let d1 = p1[idx[i]] - p1[idx[j]];\n                if (d1 > thresh)\n                    break;\n                if (norm2_xy(d1, p2[idx[i]] - p2[idx[j]]) < threshSQ) {\n                    omask[idx[i]] = true;\n                    omask[idx[j]] = true;\n                }\n            }\n            for (let j = i + 1; j < sz; j++) {\n                let d1 = p1[idx[j]] - p1[idx[i]];\n                if (d1 > thresh)\n                    break;\n                if (norm2_xy(d1, p2[idx[j]] - p2[idx[i]]) < threshSQ) {\n                    omask[idx[i]] = true;\n                    omask[idx[j]] = true;\n                }\n            }\n        }\n        return omask;\n    }\n    static overlappingAtomList(mol, thresh) {\n        if (thresh == null)\n            thresh = CoordUtil.OVERLAP_THRESHOLD;\n        return Vec.add(Vec.maskIdx(CoordUtil.overlappingAtomMask(mol, thresh)), 1);\n    }\n    static congestionPoint(mol, x, y, approach) {\n        if (approach == null)\n            approach = 1E-5;\n        let score = 0;\n        let na = mol.numAtoms;\n        for (let n = 1; n <= na; n++)\n            score += 1.0 / (approach + norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y));\n        return score;\n    }\n    static congestionMolecule(mol, approach) {\n        if (approach == null)\n            approach = 1E-5;\n        let score = 0;\n        const na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        for (let i = 0; i < na - 1; i++)\n            for (let j = i + 1; j < na; j++)\n                score += 1.0 / (approach + norm2_xy(mx[i] - mx[j], my[i] - my[j]));\n        return score;\n    }\n    static translateMolecule(mol, ox, oy) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            mol.setAtomPos(n, mol.atomX(n) + ox, mol.atomY(n) + oy);\n    }\n    static rotateMolecule(mol, theta, cx, cy) {\n        if (cx == null || cy == null) {\n            let box = mol.boundary();\n            cx = box.midX();\n            cy = box.midY();\n        }\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n            mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n        }\n    }\n    static rotateBond(mol, centre, atom, theta) {\n        theta = angleNorm(theta);\n        if (Math.abs(theta) < 0.1 * DEGRAD)\n            return;\n        let g = Graph.fromMolecule(mol);\n        g.isolateNode(centre - 1);\n        let cc = g.calculateComponents();\n        let cx = mol.atomX(centre), cy = mol.atomY(centre);\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (cc[n - 1] == cc[atom - 1]) {\n                let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n                mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n            }\n    }\n    static rotateAtoms(mol, mask, cx, cy, theta) {\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n                mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n            }\n    }\n    static angleNeighbours(mol, atom) {\n        let adj = mol.atomAdjList(atom);\n        if (adj.length <= 1)\n            return null;\n        let th = [];\n        for (let n = 0; n < adj.length; n++)\n            th.push(Math.atan2(mol.atomY(adj[n]) - mol.atomY(atom), mol.atomX(adj[n]) - mol.atomX(atom)));\n        if (adj.length == 2) {\n            if (angleDiff(th[1], th[0]) > 0)\n                return adj;\n            return [adj[1], adj[0]];\n        }\n        let idx = Vec.idxSort(th);\n        return Vec.idxGet(adj, idx);\n    }\n    static mergeAtoms(mol, oldN, newN) {\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondFrom(n) == oldN)\n                mol.setBondFrom(n, newN);\n            if (mol.bondTo(n) == oldN)\n                mol.setBondTo(n, newN);\n        }\n        mol.deleteAtomAndBonds(oldN);\n    }\n    static normaliseBondDistances(mol) {\n        const nb = mol.numBonds;\n        if (nb == 0)\n            return;\n        let dsq = [];\n        for (let n = 1; n <= nb; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            dsq.push(norm2_xy(mol.atomX(bto) - mol.atomX(bfr), mol.atomY(bto) - mol.atomY(bfr)));\n        }\n        Vec.sort(dsq);\n        let median = (nb & 1) == 1 ? Math.sqrt(dsq[nb >> 1]) : 0.5 * (Math.sqrt(dsq[nb >> 1]) + Math.sqrt(dsq[(nb >> 1) - 1]));\n        if (median < 0.1 || (median > Molecule.IDEALBOND * 0.9 && median < Molecule.IDEALBOND * 1.1))\n            return;\n        let box = mol.boundary();\n        let cx = box.midX(), cy = box.midY();\n        let scale = Molecule.IDEALBOND / median;\n        for (let n = mol.numAtoms; n >= 1; n--) {\n            let x = (mol.atomX(n) - cx) * scale + cx;\n            let y = (mol.atomY(n) - cy) * scale + cy;\n            mol.setAtomPos(n, x, y);\n        }\n    }\n    static centreMolecule(mol) {\n        if (MolUtil.isBlank(mol))\n            return;\n        let x = MolUtil.arrayAtomX(mol), y = MolUtil.arrayAtomY(mol);\n        let sz = x.length;\n        let invsz = 1.0 / sz;\n        let meanX = Vec.sum(x) * invsz, meanY = Vec.sum(y) * invsz;\n        let closest = Number.POSITIVE_INFINITY;\n        let deltaX = 0, deltaY = 0;\n        for (let n = 0; n < sz; n++) {\n            let dsq = norm2_xy(x[n] - meanX, y[n] - meanY);\n            if (dsq < closest) {\n                deltaX = -x[n];\n                deltaY = -y[n];\n                closest = dsq;\n            }\n        }\n        for (let n = 0; n < sz; n++)\n            mol.setAtomPos(n + 1, x[n] + deltaX, y[n] + deltaY);\n    }\n    static mirrorImage(mol) {\n        mol = mol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            mol.setAtomX(n, -mol.atomX(n));\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                mol.setBondType(n, Molecule.BONDTYPE_INCLINED);\n            else if (mol.bondType(n) == Molecule.BONDTYPE_INCLINED)\n                mol.setBondType(n, Molecule.BONDTYPE_DECLINED);\n        }\n        return mol;\n    }\n    static alignOrientFlip(mol1, idx1, mol2, idx2) {\n        if (idx1.length < 2 || idx1.length != idx2.length)\n            throw 'Invalid mapping indices.';\n        let x0 = mol1.atomX(idx1[0]), y0 = mol1.atomY(idx1[0]);\n        CoordUtil.translateMolecule(mol2, x0 - mol2.atomX(idx2[0]), y0 - mol2.atomY(idx2[0]));\n        const sz = idx1.length - 1;\n        let th1 = [], th2 = [];\n        let deltaA = 0, deltaB = 0;\n        for (let n = 0; n < sz; n++) {\n            th1.push(Math.atan2(mol1.atomY(idx1[n + 1]) - y0, mol1.atomX(idx1[n + 1]) - x0));\n            th2.push(Math.atan2(mol2.atomY(idx2[n + 1]) - y0, mol2.atomX(idx2[n + 1]) - x0));\n            let dthA = angleDiff(th1[n], th2[n]), dthB = angleDiff(th1[n], -th2[n]);\n            if (dthA < -175 * DEGRAD && deltaA > 0)\n                dthA += TWOPI;\n            else if (dthA > 175 * DEGRAD && deltaA < 0)\n                dthA -= TWOPI;\n            if (dthB < -175 * DEGRAD && deltaB > 0)\n                dthB += TWOPI;\n            else if (dthB > 175 * DEGRAD && deltaB < 0)\n                dthB -= TWOPI;\n            deltaA += dthA;\n            deltaB += dthB;\n        }\n        if (sz > 1) {\n            let inv = 1.0 / sz;\n            deltaA *= inv;\n            deltaB *= inv;\n        }\n        let scoreA = 0, scoreB = 0;\n        for (let n = 0; n < sz; n++) {\n            scoreA += Math.abs(angleDiff(th1[n], th2[n] + deltaA));\n            scoreB += Math.abs(angleDiff(th1[n], -th2[n] + deltaB));\n        }\n        if (scoreB < scoreA) {\n            for (let n = 1; n <= mol2.numAtoms; n++)\n                mol2.setAtomY(n, 2 * y0 - mol2.atomY(n));\n            for (let n = 1; n <= mol2.numBonds; n++) {\n                if (mol2.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                    mol2.setBondType(n, Molecule.BONDTYPE_INCLINED);\n                else if (mol2.bondType(n) == Molecule.BONDTYPE_INCLINED)\n                    mol2.setBondType(n, Molecule.BONDTYPE_DECLINED);\n            }\n            CoordUtil.rotateMolecule(mol2, x0, y0, deltaB);\n        }\n        else\n            CoordUtil.rotateMolecule(mol2, x0, y0, deltaA);\n    }\n    static atomIsWeirdLinear(mol, idx) {\n        let bonds = mol.atomAdjBonds(idx);\n        if (bonds.length != 2)\n            return false;\n        for (let n = 0; n < bonds.length; n++)\n            if (mol.bondOrder(bonds[n]) == 3)\n                return false;\n        let adj = mol.atomAdjList(idx);\n        let th1 = Math.atan2(mol.atomY(adj[0]) - mol.atomY(idx), mol.atomX(adj[0]) - mol.atomX(idx));\n        let th2 = Math.atan2(mol.atomY(adj[1]) - mol.atomY(idx), mol.atomX(adj[1]) - mol.atomX(idx));\n        return Math.abs(angleDiff(th1, th2)) >= 175 * DEGRAD;\n    }\n}\nCoordUtil.OVERLAP_THRESHOLD = 0.2;\nCoordUtil.OVERLAP_THRESHOLD_SQ = CoordUtil.OVERLAP_THRESHOLD * CoordUtil.OVERLAP_THRESHOLD;\nCoordUtil.DEFAULT_EQUIV_TOLERANCE = 0.2;\n//# sourceMappingURL=CoordUtil.js.map","import { GeomUtil } from '../util/Geom';\nimport { angleDiff, angleDiffPos, angleNorm, DEGRAD, norm2_xy, norm_xy, sortAngles, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { CoordUtil } from './CoordUtil';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nexport var Geometry;\n(function (Geometry) {\n    Geometry[Geometry[\"Linear\"] = 0] = \"Linear\";\n    Geometry[Geometry[\"Bent\"] = 1] = \"Bent\";\n    Geometry[Geometry[\"Trigonal\"] = 2] = \"Trigonal\";\n    Geometry[Geometry[\"Tetra1\"] = 3] = \"Tetra1\";\n    Geometry[Geometry[\"Tetra2\"] = 4] = \"Tetra2\";\n    Geometry[Geometry[\"SqPlan\"] = 5] = \"SqPlan\";\n    Geometry[Geometry[\"BasePyram\"] = 6] = \"BasePyram\";\n    Geometry[Geometry[\"TrigBip\"] = 7] = \"TrigBip\";\n    Geometry[Geometry[\"Octa1\"] = 8] = \"Octa1\";\n    Geometry[Geometry[\"Octa2\"] = 9] = \"Octa2\";\n})(Geometry || (Geometry = {}));\nexport class SketchUtil {\n    static placeNewAtom(mol, el) {\n        let box = mol.boundary();\n        let x = box.maxX() + Molecule.IDEALBOND, y = box.maxY();\n        return mol.addAtom(el, x, y);\n    }\n    static placeNewFragment(mol, frag) {\n        if (frag.numAtoms == 0)\n            return;\n        let dirX = [1, 0, -1, 1, -1, 1, 0, -1], dirY = [1, 1, 1, 0, 0, -1, -1, -1];\n        let dx = Vec.numberArray(0, 8), dy = Vec.numberArray(0, 8), score = Vec.numberArray(0, 8);\n        let mbox = mol.boundary(), fbox = frag.boundary();\n        for (let n = 0; n < 8; n++) {\n            let vx = dirX[n], vy = dirY[n];\n            if (n == 0 || n == 3 || n == 5)\n                dx[n] = mbox.minX() - fbox.maxX();\n            else if (n == 2 || n == 4 || n == 7)\n                dx[n] = mbox.maxX() - fbox.minX();\n            else\n                dx[n] = 0.5 * (mbox.minX() + mbox.maxX() - fbox.minX() - fbox.maxX());\n            if (n == 5 || n == 6 || n == 7)\n                dy[n] = mbox.minY() - fbox.maxY();\n            else if (n == 0 || n == 1 || n == 2)\n                dy[n] = mbox.maxY() - fbox.minY();\n            else\n                dy[n] = 0.5 * (mbox.minY() + mbox.maxY() - fbox.minY() - fbox.maxY());\n            dx[n] -= vx;\n            dy[n] -= vy;\n            score[n] = SketchUtil.fragPosScore(mol, frag, dx[n], dy[n]);\n            vx *= 0.25;\n            vy *= 0.25;\n            for (let iter = 100; iter > 0; iter--) {\n                let iscore = SketchUtil.fragPosScore(mol, frag, dx[n] + vx, dy[n] + vy);\n                if (iscore <= score[n])\n                    break;\n                score[n] = iscore;\n                dx[n] += vx;\n                dy[n] += vy;\n            }\n            for (let iter = 100; iter > 0; iter--)\n                for (let d = 0; d < 8; d++) {\n                    vx = dirX[d] * 0.1;\n                    vy = dirY[d] * 0.1;\n                    let iscore = SketchUtil.fragPosScore(mol, frag, dx[n] + vx, dy[n] + vy);\n                    if (iscore <= score[n])\n                        break;\n                    score[n] = iscore;\n                    dx[n] += vx;\n                    dy[n] += vy;\n                }\n        }\n        let best = 0;\n        for (let n = 1; n < 8; n++)\n            if (score[n] > score[best])\n                best = n;\n        frag = frag.clone();\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomPos(n, frag.atomX(n) + dx[best], frag.atomY(n) + dy[best]);\n        mol.append(frag);\n    }\n    static fragPosScore(mol, frag, dx, dy) {\n        let score = 0;\n        for (let i = 1; i <= mol.numAtoms; i++)\n            for (let j = 1; j <= frag.numAtoms; j++) {\n                let ox = frag.atomX(j) + dx - mol.atomX(i), oy = frag.atomY(j) + dy - mol.atomY(i);\n                let dist2 = ox * ox + oy * oy;\n                if (dist2 < 1)\n                    return 0;\n                score += 1 / dist2;\n            }\n        let mbox = mol.boundary(), fbox = frag.boundary();\n        let minX = Math.min(fbox.minX() + dx, mbox.minX()), maxX = Math.max(fbox.maxX() + dx, mbox.maxX());\n        let minY = Math.min(fbox.minY() + dy, mbox.minY()), maxY = Math.max(fbox.maxY() + dy, mbox.maxY());\n        let rangeX = Math.max(1, maxX - minX), rangeY = Math.max(1, maxY - minY);\n        let ratio = Math.max(rangeX / rangeY, rangeY / rangeX);\n        return score / ratio;\n    }\n    static mergeOverlappingAtoms(mol) {\n        return SketchUtil.mergeFragmentsDiv(mol, 0);\n    }\n    static mergeFragmentsDiv(mol, div) {\n        const na = mol.numAtoms;\n        let omask = CoordUtil.overlappingAtomMask(mol);\n        let chopmask = Vec.booleanArray(false, na);\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        let remap = [];\n        for (let n = 0; n < na; n++)\n            remap.push(n + 1);\n        let div1 = div, div2 = div + 1;\n        if (div == 0)\n            div1 = na;\n        for (let i = 1; i <= div1; i++)\n            if (omask[i - 1] && !chopmask[i - 1]) {\n                if (div == 0)\n                    div2 = i + 1;\n                for (let j = div2; j <= na; j++)\n                    if (omask[j - 1] && !chopmask[j - 1]) {\n                        if (norm2_xy(mx[i - 1] - mx[j - 1], my[i - 1] - my[j - 1]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                            continue;\n                        let oldN = j, newN = i;\n                        let exotic = [0, 0];\n                        for (let k = 0; k < 2; k++) {\n                            let a = k == 0 ? i : j;\n                            exotic[k] = (mol.atomElement(a) == 'C' ? 0 : 1)\n                                + (mol.atomElement(a) == 'X' ? -100 : 0)\n                                + (mol.atomCharge(a) != 0 ? 1 : 0)\n                                + (mol.atomUnpaired(a) != 0 ? 1 : 0)\n                                + (mol.atomIsotope(a) != Molecule.ISOTOPE_NATURAL ? 1 : 0)\n                                + (mol.atomHExplicit(a) != Molecule.HEXPLICIT_UNKNOWN ? 1 : 0)\n                                + (MolUtil.hasAbbrev(mol, a) ? 1000 : 0);\n                        }\n                        if (exotic[1] > exotic[0]) {\n                            oldN = i;\n                            newN = j;\n                        }\n                        for (let n = 1; n <= mol.numBonds; n++) {\n                            if (mol.bondFrom(n) == oldN)\n                                mol.setBondFrom(n, newN);\n                            if (mol.bondTo(n) == oldN)\n                                mol.setBondTo(n, newN);\n                        }\n                        chopmask[oldN - 1] = true;\n                        remap[oldN - 1] = newN;\n                    }\n            }\n        for (let n = na; n >= 1; n--)\n            if (chopmask[n - 1]) {\n                if (n <= div)\n                    div--;\n                mol.deleteAtomAndBonds(n);\n                for (let i = 0; i < na; i++)\n                    if (remap[i] > n)\n                        remap[i]--;\n            }\n        for (let n = mol.numAtoms; n > div; n--)\n            if (mol.atomElement(n) == 'X') {\n                mol.deleteAtomAndBonds(n);\n                for (let i = 0; i < na; i++)\n                    if (remap[i] > n)\n                        remap[i]--;\n            }\n        MolUtil.removeDuplicateBonds(mol);\n        return remap;\n    }\n    static mergeFragmentsMask(mol, mask) {\n        let chopmask = Vec.booleanArray(false, mol.numAtoms);\n        let na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        for (let i = 1; i <= na; i++)\n            if (mask[i - 1])\n                for (let j = 1; j <= na; j++)\n                    if (!mask[j - 1] && !chopmask[j - 1])\n                        if (norm2_xy(mx[i - 1] - mx[j - 1], my[i - 1] - my[j - 1]) < CoordUtil.OVERLAP_THRESHOLD_SQ) {\n                            let oldN = j, newN = i;\n                            if (mol.atomElement(i) == 'C' && mol.atomElement(j) != 'C' && mol.atomElement(j) != 'X')\n                                [oldN, newN] = [i, j];\n                            if (mol.atomHExplicit(newN) == Molecule.HEXPLICIT_UNKNOWN)\n                                mol.setAtomHExplicit(newN, mol.atomHExplicit(oldN));\n                            mol.setAtomUnpaired(newN, mol.atomUnpaired(newN) + mol.atomUnpaired(oldN));\n                            mol.setAtomCharge(newN, mol.atomCharge(newN) + mol.atomCharge(oldN));\n                            mol.setAtomExtra(newN, Vec.concat(mol.atomExtra(oldN), mol.atomExtra(newN)));\n                            for (let n = 1; n <= mol.numBonds; n++) {\n                                if (mol.bondFrom(n) == oldN)\n                                    mol.setBondFrom(n, newN);\n                                if (mol.bondTo(n) == oldN)\n                                    mol.setBondTo(n, newN);\n                            }\n                            chopmask[oldN - 1] = true;\n                        }\n        for (let n = chopmask.length; n >= 1; n--)\n            if (chopmask[n - 1])\n                mol.deleteAtomAndBonds(n);\n        MolUtil.removeDuplicateBonds(mol);\n    }\n    static matchAngleGeometry(geom, theta) {\n        if (theta.length <= 1)\n            return true;\n        let match = SketchUtil.GEOM_ANGLES[geom], mtheta = Vec.numberArray(0, theta.length);\n        let hit = Vec.booleanArray(false, match.length);\n        for (let n = 0; n < theta.length; n++)\n            for (let s = 1; s >= -1; s -= 2) {\n                for (let i = 0; i < theta.length; i++)\n                    mtheta[i] = (theta[i] - theta[0]) * s;\n                Vec.setTo(hit, false);\n                let gotall = true;\n                for (let i = 0; i < mtheta.length; i++) {\n                    let got = false;\n                    for (let j = 0; j < match.length; j++)\n                        if (!hit[j] && Math.abs(angleDiff(mtheta[i], match[j])) < 3 * DEGRAD) {\n                            hit[j] = true;\n                            got = true;\n                            break;\n                        }\n                    if (!got) {\n                        gotall = false;\n                        break;\n                    }\n                }\n                if (gotall)\n                    return true;\n            }\n        return false;\n    }\n    static primeDirections(mol, atom) {\n        let angles = SketchUtil.calculateNewBondAngles(mol, atom, 1);\n        let exits = SketchUtil.exitVectors(mol, atom);\n        return GeomUtil.uniqueAngles(angles.concat(exits), 2 * DEGRAD);\n    }\n    static exitVectors(mol, atom) {\n        let adj = mol.atomAdjList(atom), sz = adj.length;\n        if (sz == 0)\n            return [0, 90 * DEGRAD, 180 * DEGRAD, -90 * DEGRAD];\n        if (sz == 1)\n            return [];\n        let ret = [];\n        let ang = GeomUtil.sortAngles(CoordUtil.atomBondAngles(mol, atom, adj));\n        for (let n = 0; n < sz; n++) {\n            let nn = n < sz - 1 ? n + 1 : 0;\n            ret.push(angleNorm(ang[n] + 0.5 * angleDiffPos(ang[nn], ang[n])));\n        }\n        return ret;\n    }\n    static calculateNewBondAngles(mol, atom, order) {\n        let adj = mol.atomAdjList(atom);\n        const sz = adj.length;\n        if (sz == 0) {\n            let atno = mol.atomicNumber(atom), atblk = Chemistry.ELEMENT_BLOCKS[atno];\n            if (atblk <= 2)\n                return [0, 90 * DEGRAD, 180 * DEGRAD, -90 * DEGRAD];\n            else\n                return [90 * DEGRAD, -90 * DEGRAD, 30 * DEGRAD, 150 * DEGRAD, 210 * DEGRAD, -30 * DEGRAD, 180 * DEGRAD, 0 * DEGRAD];\n        }\n        let geom = SketchUtil.guessAtomGeometry(mol, atom, order);\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        for (let n = 0; n < geom.length; n++) {\n            let ret = SketchUtil.mapAngleSubstituent(geom[n], ang);\n            if (ret != null)\n                return ret;\n        }\n        return [];\n    }\n    static guessAtomGeometry(mol, atom, order) {\n        let adj = mol.atomAdjList(atom);\n        let sz = adj.length, atno = mol.atomicNumber(atom);\n        let atblk = Chemistry.ELEMENT_BLOCKS[atno], elrow = Chemistry.ELEMENT_ROWS[atno];\n        let el = mol.atomElement(atom);\n        let adjBO = [], adjAN = [], pri = [];\n        let allSingle = true;\n        for (let n = 0; n < sz; n++) {\n            adjBO.push(mol.bondOrder(mol.findBond(atom, adj[n])));\n            adjAN.push(mol.atomicNumber(adj[n]));\n            pri.push(adjBO[n] * 200 + adjAN[n]);\n            if (adjBO[n] != 1)\n                allSingle = true;\n        }\n        for (let p = 0; p < sz - 1;) {\n            if (pri[p] > pri[p + 1]) {\n                Vec.swap(adj, p, p + 1);\n                Vec.swap(adjBO, p, p + 1);\n                Vec.swap(adjAN, p, p + 1);\n                Vec.swap(pri, p, p + 1);\n                if (p > 0)\n                    p--;\n            }\n            else\n                p++;\n        }\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        if (sz == 1) {\n            if (el == 'C' || el == 'N') {\n                if (adjBO[0] == 2 && order == 2)\n                    return [Geometry.Linear];\n                if ((adjBO[0] == 3 && order == 1) || (adjBO[0] == 1 && order == 3))\n                    return [Geometry.Linear];\n            }\n            if (atblk > 2)\n                return [Geometry.Octa1, Geometry.Octa2];\n            if (order != 0 && (el == 'C' || el == 'N' || el == 'O'))\n                return [Geometry.Trigonal];\n            return [Geometry.Trigonal, Geometry.Linear];\n        }\n        if (sz == 2 && Math.abs(angleDiff(ang[0], ang[1])) >= 175 * DEGRAD) {\n            if (atblk <= 2)\n                return [Geometry.SqPlan];\n            else\n                return [Geometry.Octa1, Geometry.Octa2];\n        }\n        let geom = [];\n        if (atblk == 0)\n            geom = [Geometry.Trigonal, Geometry.SqPlan];\n        else if (atblk == 1)\n            geom = [Geometry.Trigonal, Geometry.SqPlan, Geometry.Octa1, Geometry.Octa2];\n        else if (atblk == 2) {\n            geom.push(Geometry.Trigonal);\n            if (el == 'C' && allSingle) {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n            }\n            else if (el == 'C' && !allSingle) {\n            }\n            else if (elrow <= 3) {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n            }\n            else {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n                geom.push(Geometry.Octa1);\n                geom.push(Geometry.Octa2);\n            }\n        }\n        else {\n            geom.push(Geometry.Octa1);\n            geom.push(Geometry.Octa2);\n        }\n        for (let n = geom.length - 1; n >= 0; n--) {\n            if (!SketchUtil.matchAngleGeometry(geom[n], ang))\n                geom.splice(n, 1);\n        }\n        return geom;\n    }\n    static mapAngleSubstituent(geom, ang) {\n        let gtheta = SketchUtil.GEOM_ANGLES[geom];\n        const asz = ang.length, gsz = gtheta.length;\n        if (asz >= gsz)\n            return null;\n        if (asz == 0)\n            return gtheta.slice(0);\n        let vac = [];\n        for (let n = 0; n < asz; n++)\n            for (let k = 0; k < gsz; k++)\n                for (let s = 1; s >= -1; s -= 2) {\n                    let gang = [];\n                    for (let i = 0; i < gsz; i++)\n                        gang.push(angleNorm(ang[n] + s * (gtheta[i] - gtheta[k])));\n                    let mask = Vec.booleanArray(false, gsz);\n                    let mcount = 0;\n                    for (let i = 0; i < gsz; i++)\n                        if (!mask[i])\n                            for (let j = 0; j < asz; j++)\n                                if (Math.abs(angleDiff(gang[i], ang[j])) < 3 * DEGRAD) {\n                                    mask[i] = true;\n                                    mcount++;\n                                    break;\n                                }\n                    if (mcount != asz)\n                        continue;\n                    for (let i = 0; i < gsz; i++)\n                        if (!mask[i])\n                            vac.push(gang[i]);\n                }\n        if (vac.length == 0)\n            return null;\n        vac = GeomUtil.sortAngles(vac);\n        for (let n = 0; n < vac.length - 1; n++) {\n            let th1 = vac[n], th2 = vac[n + 1], dth = angleDiff(th2, th1);\n            if (Math.abs(dth) < 5 * DEGRAD) {\n                vac[n] = th1 + 0.5 * dth;\n                vac.splice(n + 1, 1);\n                n--;\n            }\n        }\n        return vac;\n    }\n    static refitAtomGeometry(mol, atom, geom) {\n        let gtheta = SketchUtil.GEOM_ANGLES[geom];\n        let gsz = gtheta.length;\n        let adj = mol.atomAdjList(atom);\n        let asz = adj.length;\n        if (asz <= 1 || asz > gsz)\n            return null;\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        let inRing = Vec.booleanArray(false, asz);\n        let allInRing = true;\n        for (let n = 0; n < asz; n++) {\n            inRing[n] = mol.bondInRing(mol.findBond(atom, adj[n]));\n            if (!inRing[n])\n                allInRing = false;\n        }\n        if (allInRing)\n            return null;\n        let bestAng = null;\n        let bestScore = 0;\n        let ww = MolUtil.calculateWalkWeight(mol, atom);\n        for (let i = 0; i < gsz; i++)\n            for (let j = 0; j < asz; j++)\n                for (let s = 1; s >= -1; s -= 2) {\n                    let newAng = Vec.numberArray(0, asz);\n                    let mask = Vec.booleanArray(false, gsz);\n                    for (let n1 = 0; n1 < asz; n1++) {\n                        let best = -1;\n                        let bdiff = 0;\n                        for (let n2 = 0; n2 < gsz; n2++)\n                            if (!mask[n2]) {\n                                let th = angleNorm(gtheta[n2] * s - gtheta[i] + ang[j]);\n                                let diff = Math.abs(angleDiff(th, ang[n1]));\n                                if (best < 0 || diff < bdiff) {\n                                    best = n2;\n                                    bdiff = diff;\n                                    newAng[n1] = th;\n                                }\n                            }\n                        mask[best] = true;\n                    }\n                    let ringClash = false;\n                    for (let n = 0; n < asz; n++)\n                        if (inRing[n] && Math.abs(angleDiff(newAng[n], ang[n])) > 2 * DEGRAD) {\n                            ringClash = true;\n                            break;\n                        }\n                    if (ringClash)\n                        continue;\n                    let score = 0;\n                    for (let n = 0; n < asz; n++)\n                        score += ww[adj[n] - 1] * Math.abs(angleDiff(newAng[n], ang[n]));\n                    if (bestAng == null || score < bestScore) {\n                        bestAng = newAng;\n                        bestScore = score;\n                    }\n                }\n        if (bestAng == null)\n            return null;\n        let same = true;\n        for (let n = 0; n < asz; n++)\n            if (Math.abs(angleDiff(bestAng[n], ang[n])) > 2 * DEGRAD) {\n                same = false;\n                break;\n            }\n        if (same)\n            return null;\n        mol = mol.clone();\n        for (let n = 0; n < asz; n++)\n            if (!inRing[n])\n                CoordUtil.rotateBond(mol, atom, adj[n], bestAng[n] - ang[n]);\n        return mol;\n    }\n    static switchAtomGeometry(mol, src, dst, geoms) {\n        let bestAtom = 0;\n        let bestAng = 0, bestX = 0, bestY = 0;\n        let adj = mol.atomAdjList(src);\n        let ang = CoordUtil.atomBondAngles(mol, src, adj), theta = Vec.numberArray(0, ang.length - 1);\n        let cx = mol.atomX(src), cy = mol.atomY(src);\n        for (let i = 0; i < dst.length; i++) {\n            let a = adj.indexOf(dst[i]);\n            let curth = ang[a];\n            for (let n = 0, p = 0; n < adj.length; n++)\n                if (n != a)\n                    theta[p++] = ang[n];\n            let r = norm_xy(mol.atomX(dst[i]) - cx, mol.atomY(dst[i]) - cy);\n            for (let j = 0; j < geoms.length; j++) {\n                if (adj.length >= SketchUtil.GEOM_ANGLES[geoms[j]].length)\n                    continue;\n                let newAng = SketchUtil.mapAngleSubstituent(geoms[j], theta);\n                if (newAng != null)\n                    for (let n = 0; n < newAng.length; n++) {\n                        let dth = angleDiff(newAng[n], curth);\n                        if (Math.abs(dth) < 3 * DEGRAD)\n                            continue;\n                        if (dth < 0)\n                            dth += TWOPI;\n                        if (bestAtom == 0 || dth < bestAng - 2 * DEGRAD || (dth < bestAng + 2 * DEGRAD && dst[i] < bestAtom)) {\n                            let x = cx + r * Math.cos(newAng[n]);\n                            let y = cy + r * Math.sin(newAng[n]);\n                            if (CoordUtil.atomAtPoint(mol, x, y) != 0)\n                                continue;\n                            bestAtom = dst[i];\n                            bestAng = dth;\n                            bestX = x;\n                            bestY = y;\n                        }\n                    }\n                break;\n            }\n        }\n        if (bestAtom == 0)\n            return null;\n        mol = mol.clone();\n        mol.setAtomPos(bestAtom, bestX, bestY);\n        return mol;\n    }\n    static pickAtomsToConnect(mol, aidx) {\n        if (aidx.length < 2)\n            return null;\n        if (aidx.length == 2) {\n            if (mol.findBond(aidx[0], aidx[1]) > 0)\n                return null;\n            return aidx;\n        }\n        const AUTO_DSQ = sqr(Molecule.IDEALBOND + 0.1);\n        let bestDSQ = Number.MAX_VALUE;\n        let bestA1 = 0, bestA2 = 0;\n        let conn = [];\n        for (let i = 0; i < aidx.length - 1; i++)\n            for (let j = i + 1; j < aidx.length; j++) {\n                if (mol.findBond(aidx[i], aidx[j]) > 0)\n                    continue;\n                let dsq = norm2_xy(mol.atomX(aidx[i]) - mol.atomX(aidx[j]), mol.atomY(aidx[i]) - mol.atomY(aidx[j]));\n                if (dsq < AUTO_DSQ) {\n                    conn.push(aidx[i]);\n                    conn.push(aidx[j]);\n                }\n                else if (dsq < bestDSQ) {\n                    bestDSQ = dsq;\n                    bestA1 = aidx[i];\n                    bestA2 = aidx[j];\n                }\n            }\n        if (conn.length == 0 && bestA1 != 0) {\n            conn.push(bestA1);\n            conn.push(bestA2);\n        }\n        return conn.length == 0 ? null : conn;\n    }\n    static pickNewAtomDirection(mol, atom, theta) {\n        if (theta.length == 1)\n            return theta[0];\n        let bestTheta = theta[0], bestScore = Number.MAX_VALUE;\n        for (let n = 0; n < theta.length; n++) {\n            let px = mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(theta[n]);\n            let py = mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(theta[n]);\n            let score = CoordUtil.congestionPoint(mol, px, py);\n            if (score > bestScore)\n                continue;\n            if (CoordUtil.overlapsAtom(mol, px, py, 0.2))\n                score += 1E5;\n            if (score < bestScore) {\n                bestTheta = theta[n];\n                bestScore = score;\n            }\n        }\n        return bestTheta;\n    }\n    static joinOverlappingAtoms(mol, mask) {\n        mol = mol.clone();\n        mask = mask.slice(0);\n        const na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        let groups = [];\n        let groupX = [], groupY = [];\n        for (let i = 0; i < na - 1; i++)\n            if (mask[i]) {\n                let g = [i + 1];\n                let x = mx[i], y = my[i];\n                for (let j = i + 1; j < na; j++)\n                    if (mask[j]) {\n                        if (norm2_xy(mx[j] - mx[i], my[j] - my[i]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                            continue;\n                        g.push(j + 1);\n                        x += mx[j];\n                        y += my[j];\n                        let adjb = mol.atomAdjBonds(j + 1);\n                        for (let n = 0; n < adjb.length; n++) {\n                            if (mol.bondFrom(adjb[n]) == j + 1)\n                                mol.setBondFrom(adjb[n], i + 1);\n                            else if (mol.bondTo(adjb[n]) == j + 1)\n                                mol.setBondTo(adjb[n], i + 1);\n                        }\n                    }\n                if (g.length == 1)\n                    continue;\n                groups.push(g);\n                groupX.push(x / g.length);\n                groupY.push(y / g.length);\n            }\n        if (groups.length == 0)\n            return null;\n        let keepmask = Vec.booleanArray(true, na);\n        for (let n = 0; n < groups.length; n++) {\n            let g = groups[n];\n            mol.setAtomPos(g[0], groupX[n], groupY[n]);\n            for (let i = 1; i < g.length; i++)\n                keepmask[g[i] - 1] = false;\n        }\n        mol = MolUtil.subgraphMask(mol, keepmask);\n        MolUtil.removeDuplicateBonds(mol);\n        return mol;\n    }\n    static moveToEdge(mol, mask, dx, dy) {\n        let gotS = false, gotN = false;\n        let sx1 = 0, sy1 = 0, sx2 = 0, sy2 = 0;\n        let nx1 = 0, ny1 = 0, nx2 = 0, ny2 = 0;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n), y = mol.atomY(n);\n            if (mask[n - 1]) {\n                if (!gotS || x < sx1)\n                    sx1 = x;\n                if (!gotS || y < sy1)\n                    sy1 = y;\n                if (!gotS || x > sx2)\n                    sx2 = x;\n                if (!gotS || y > sy2)\n                    sy2 = y;\n                gotS = true;\n            }\n            else {\n                if (!gotN || x < nx1)\n                    nx1 = x;\n                if (!gotN || y < ny1)\n                    ny1 = y;\n                if (!gotN || x > nx2)\n                    nx2 = x;\n                if (!gotN || y > ny2)\n                    ny2 = y;\n                gotN = true;\n            }\n        }\n        const SEPARATE = 1.0, SEPTEST = 0.9;\n        if ((dx < 0 && dy == 0 && sx2 <= nx1 - SEPTEST) ||\n            (dx > 0 && dy == 0 && sx1 >= nx2 + SEPTEST) ||\n            (dx == 0 && dy < 0 && sy2 <= ny1 - SEPTEST) ||\n            (dx == 0 && dy > 0 && sy1 >= ny2 + SEPTEST)) {\n            return null;\n        }\n        mol = mol.clone();\n        let ox = 0, oy = 0;\n        if (dx < 0)\n            ox = nx1 - sx2 - SEPARATE;\n        if (dx > 0)\n            ox = nx2 - sx1 + SEPARATE;\n        if (dy < 0)\n            oy = ny1 - sy2 - SEPARATE;\n        if (dy > 0)\n            oy = ny2 - sy1 + SEPARATE;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1])\n                mol.setAtomPos(n, mol.atomX(n) + ox, mol.atomY(n) + oy);\n        return mol;\n    }\n    static placeAdditionalHydrogens(mol, atom, numH) {\n        let base = mol.numAtoms;\n        const x0 = mol.atomX(atom), y0 = mol.atomY(atom);\n        let adj = mol.atomAdjList(atom);\n        if (adj.length == 2 && numH == 2) {\n            const th1 = Math.atan2(mol.atomY(adj[0]) - y0, mol.atomX(adj[0]) - x0);\n            const th2 = Math.atan2(mol.atomY(adj[1]) - y0, mol.atomX(adj[1]) - x0);\n            if (Math.abs(angleDiff(th1, th2)) < 170 * DEGRAD) {\n                let theta = 0.5 * (th1 + th2) + Math.PI;\n                let th3 = theta - 30 * DEGRAD, th4 = theta + 30 * DEGRAD;\n                mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th3), y0 + Molecule.IDEALBOND * Math.sin(th3));\n                mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th4), y0 + Molecule.IDEALBOND * Math.sin(th4));\n                mol.addBond(atom, base + 1, 1);\n                mol.addBond(atom, base + 2, 1);\n                return;\n            }\n        }\n        if (adj.length == 1 && numH == 3) {\n            let th1 = Math.atan2(mol.atomY(adj[0]) - y0, mol.atomX(adj[0]) - x0);\n            let th2 = th1 + 90 * DEGRAD, th3 = th1 + 180 * DEGRAD, th4 = th1 + 270 * DEGRAD;\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th2), y0 + Molecule.IDEALBOND * Math.sin(th2));\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th3), y0 + Molecule.IDEALBOND * Math.sin(th3));\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th4), y0 + Molecule.IDEALBOND * Math.sin(th4));\n            mol.addBond(atom, base + 1, 1);\n            mol.addBond(atom, base + 2, 1);\n            mol.addBond(atom, base + 3, 1);\n            return;\n        }\n        let theta = SketchUtil.pickNewAtomDirection(mol, atom, SketchUtil.primeDirections(mol, atom));\n        mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(theta), y0 + Molecule.IDEALBOND * Math.sin(theta));\n        mol.addBond(atom, base + 1, 1);\n        if (numH > 1)\n            SketchUtil.placeAdditionalHydrogens(mol, atom, numH - 1);\n    }\n    static allViableDirections(mol, atom, order) {\n        if (mol.atomAdjCount(atom) == 0) {\n            let angles = [];\n            for (let n = 0; n < 12; n++)\n                angles.push(30 * DEGRAD);\n            return angles;\n        }\n        let adj = mol.atomAdjList(atom);\n        let angles = SketchUtil.exitVectors(mol, atom);\n        let geom = SketchUtil.guessAtomGeometry(mol, atom, order);\n        if (adj.length == 1 && geom.indexOf(Geometry.Linear) < 0)\n            geom.push(Geometry.Linear);\n        let bndang = CoordUtil.atomBondAngles(mol, atom, adj);\n        for (let g of geom) {\n            let map = SketchUtil.mapAngleSubstituent(g, bndang);\n            if (map != null)\n                for (let th of map)\n                    angles.push(th);\n        }\n        return GeomUtil.uniqueAngles(angles, 2 * DEGRAD);\n    }\n    static proposeNewRing(mol, rsz, x, y, dx, dy, snap) {\n        let theta = dy == 0 && dx == 0 ? 0.5 * Math.PI : Math.atan2(dy, dx);\n        if (snap) {\n            const chunk = 30 * DEGRAD;\n            theta = Math.round(theta / chunk) * chunk;\n        }\n        return SketchUtil.positionSimpleRing(mol, rsz, x, y, theta);\n    }\n    static proposeAtomRing(mol, rsz, atom, dx, dy) {\n        let thsnap = [];\n        let cx = mol.atomX(atom), cy = mol.atomY(atom);\n        if (mol.atomAdjCount(atom) == 0) {\n            for (let n = 0; n < 12; n++)\n                thsnap.push(TWOPI * n / 12);\n        }\n        else if (mol.atomAdjCount(atom) == 1) {\n            let nbr = mol.atomAdjList(atom)[0];\n            thsnap.push(angleNorm(Math.atan2(mol.atomY(nbr) - cy, mol.atomX(nbr) - cx) + Math.PI));\n        }\n        else {\n            let angs = [];\n            for (let nbr of mol.atomAdjList(atom))\n                angs.push(Math.atan2(mol.atomY(nbr) - cy, mol.atomX(nbr) - cx));\n            angs = sortAngles(angs);\n            for (let n = 0; n < angs.length; n++) {\n                let th1 = angs[n], th2 = angs[n < angs.length - 1 ? n + 1 : 0];\n                thsnap.push(th1 + 0.5 * angleDiffPos(th2, th1));\n            }\n        }\n        let theta = Math.atan2(dy, dx);\n        let bestTheta = 0, bestDelta = Number.MAX_VALUE;\n        for (let th of thsnap) {\n            let delta = Math.abs(angleDiff(th, theta));\n            if (delta < bestDelta) {\n                bestTheta = th;\n                bestDelta = delta;\n            }\n        }\n        return SketchUtil.positionSimpleRing(mol, rsz, mol.atomX(atom), mol.atomY(atom), bestTheta);\n    }\n    static proposeBondRing(mol, rsz, bond, dx, dy) {\n        let bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        let bx = mol.atomX(bto) - mol.atomX(bfr), by = mol.atomY(bto) - mol.atomY(bfr);\n        let sign = dx * by - dy * bx;\n        let delta = sign > 0 ? -90 * DEGRAD : 90 * DEGRAD;\n        let theta = Math.atan2(by, bx) + delta;\n        let dth = TWOPI / rsz;\n        let rad = Molecule.IDEALBOND / (2.0 * Math.sin(0.5 * dth)), brad = rad * Math.cos(0.5 * dth);\n        let cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto)) + brad * Math.cos(theta);\n        let cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto)) + brad * Math.sin(theta);\n        let rx = [], ry = [];\n        for (let n = 0; n < rsz; n++) {\n            let th = theta - Math.PI + (n - 0.5) * dth;\n            rx.push(cx + Math.cos(th) * rad);\n            ry.push(cy + Math.sin(th) * rad);\n        }\n        let [i1, i2] = sign < 0 ? [bfr, bto] : [bto, bfr];\n        rx[0] = mol.atomX(i1);\n        ry[0] = mol.atomY(i1);\n        rx[1] = mol.atomX(i2);\n        ry[1] = mol.atomY(i2);\n        return [rx, ry];\n    }\n    static positionSimpleRing(mol, rsz, x, y, theta) {\n        let dth = TWOPI / rsz;\n        let rad = Molecule.IDEALBOND / (2 * Math.sin(0.5 * dth));\n        let cx = x + rad * Math.cos(theta), cy = y + rad * Math.sin(theta);\n        let rx = [], ry = [];\n        for (let n = 0; n < rsz; n++) {\n            let th = theta - Math.PI + n * dth;\n            rx.push(cx + Math.cos(th) * rad);\n            ry.push(cy + Math.sin(th) * rad);\n        }\n        return [rx, ry];\n    }\n    static guidelineSprouts(mol, atom) {\n        let sprouts = [];\n        let angs = [], ords = [];\n        for (let n = 0; n < 3; n++) {\n            angs.push(SketchUtil.allViableDirections(mol, atom, n + 1));\n            ords.push([n + 1]);\n            for (let i = 0; i < n; i++)\n                if (angs[i] != null && Vec.equals(angs[n], angs[i])) {\n                    angs[n] = null;\n                    ords[i].push(n + 1);\n                }\n        }\n        const cx = mol.atomX(atom), cy = mol.atomY(atom);\n        for (let n = 0; n < 3; n++)\n            if (angs[n] != null) {\n                let sprout = {\n                    atom: atom,\n                    orders: ords[n],\n                    x: [],\n                    y: [],\n                };\n                for (let i = 0; i < angs[n].length; i++) {\n                    sprout.x[i] = cx + Math.cos(angs[n][i]) * Molecule.IDEALBOND;\n                    sprout.y[i] = cy + Math.sin(angs[n][i]) * Molecule.IDEALBOND;\n                }\n                sprouts.push(sprout);\n            }\n        return sprouts;\n    }\n}\nSketchUtil.GEOM_ANGLES = [\n    [0, 180 * DEGRAD],\n    [0, 120 * DEGRAD],\n    [0, 120 * DEGRAD, 240 * DEGRAD],\n    [0, 90 * DEGRAD, 150 * DEGRAD, 240 * DEGRAD],\n    [0, 120 * DEGRAD, 180 * DEGRAD, 240 * DEGRAD],\n    [0, 90 * DEGRAD, 180 * DEGRAD, 270 * DEGRAD],\n    [0, 90 * DEGRAD, 150 * DEGRAD, 210 * DEGRAD, 270 * DEGRAD],\n    [0, 60 * DEGRAD, 90 * DEGRAD, 180 * DEGRAD, 210 * DEGRAD],\n    [0, 60 * DEGRAD, 120 * DEGRAD, 180 * DEGRAD, 240 * DEGRAD, 300 * DEGRAD],\n    [0, 45 * DEGRAD, 90 * DEGRAD, 180 * DEGRAD, 225 * DEGRAD, 270 * DEGRAD]\n];\n//# sourceMappingURL=SketchUtil.js.map","import { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { CoordUtil } from './CoordUtil';\nimport { Graph } from './Graph';\nimport { Molecule } from './Molecule';\nimport { PolymerBlock } from './PolymerBlock';\nimport { SketchUtil } from './SketchUtil';\nexport class MolUtil {\n    static isBlank(mol) {\n        if (mol == null)\n            return true;\n        return mol.numAtoms == 0;\n    }\n    static notBlank(mol) {\n        if (mol == null)\n            return false;\n        return mol.numAtoms > 0;\n    }\n    static orBlank(mol) { return mol == null ? new Molecule() : mol; }\n    static hasAnyAbbrev(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n))\n                return true;\n        return false;\n    }\n    static hasAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra == null ? 0 : extra.length); n++)\n            if (extra[n].startsWith('a'))\n                return true;\n        return false;\n    }\n    static getAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                return Molecule.fromString(extra[n].substring(1));\n            }\n        return null;\n    }\n    static setAbbrev(mol, atom, frag) {\n        let attidx = 0;\n        for (let n = 1; n <= frag.numAtoms; n++)\n            if (frag.atomElement(n) == MolUtil.ABBREV_ATTACHMENT) {\n                attidx = n;\n                break;\n            }\n        if (attidx == 0)\n            throw 'No attachment points indicated.';\n        if (attidx >= 2) {\n            frag = frag.clone();\n            frag.swapAtoms(attidx, 1);\n        }\n        let adj = mol.atomAdjList(atom);\n        if (adj.length > 1)\n            throw 'Setting abbreviation for non-terminal atom.';\n        if (frag.atomAdjCount(1) == 1 && mol.atomAdjCount(atom) > 0) {\n            let b1 = mol.findBond(atom, mol.atomAdjList(atom)[0]);\n            let b2 = frag.findBond(1, frag.atomAdjList(1)[0]);\n            mol.setBondOrder(b1, frag.bondOrder(b2));\n        }\n        let extra = mol.atomExtra(atom);\n        let idx = -1;\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                idx = n;\n                break;\n            }\n        if (idx < 0)\n            idx = extra.push(null) - 1;\n        extra[idx] = 'a' + frag.toString();\n        mol.setAtomExtra(atom, extra);\n    }\n    static validateAbbrevs(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                if (mol.atomAdjCount(n) > 1)\n                    MolUtil.clearAbbrev(mol, n);\n                if (mol.atomCharge(n) != 0)\n                    mol.setAtomCharge(n, 0);\n                if (mol.atomUnpaired(n) != 0)\n                    mol.setAtomUnpaired(n, 0);\n                if (mol.atomIsotope(n) != 0)\n                    mol.setAtomIsotope(n, Molecule.ISOTOPE_NATURAL);\n                if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN)\n                    mol.setAtomHExplicit(n, Molecule.HEXPLICIT_UNKNOWN);\n            }\n    }\n    static convertToAbbrev(mol, srcmask, abbrevName) {\n        let molidx = this.convertToAbbrevIndex(mol, srcmask, abbrevName);\n        return molidx ? molidx[0] : null;\n    }\n    static convertToAbbrevIndex(mol, srcmask, abbrevName) {\n        let junction = 0;\n        let polymerExtra = null;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let b1 = mol.bondFrom(n), b2 = mol.bondTo(n), atom = 0;\n            if (srcmask[b1 - 1] && !srcmask[b2 - 1]) {\n                atom = b1;\n                polymerExtra = PolymerBlock.getPolymerExtensions(mol, b2);\n            }\n            else if (!srcmask[b1 - 1] && srcmask[b2 - 1]) {\n                atom = b2;\n                polymerExtra = PolymerBlock.getPolymerExtensions(mol, b1);\n            }\n            if (atom == 0)\n                continue;\n            if (junction > 0 && atom != junction)\n                return [null, null];\n            junction = atom;\n        }\n        if (junction == 0)\n            return [null, null];\n        let na = mol.numAtoms, molidx = 0, fragidx = 0;\n        let maskmol = Vec.booleanArray(false, na), maskfrag = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++) {\n            maskmol[n] = srcmask[n];\n            maskfrag[n] = !srcmask[n] || n + 1 == junction;\n            if (maskmol[n] && n + 1 <= junction)\n                molidx++;\n            if (maskfrag[n] && n + 1 <= junction)\n                fragidx++;\n        }\n        let bondType = Molecule.BONDTYPE_NORMAL, nadj = 0;\n        for (let a of mol.atomAdjList(junction))\n            if (!srcmask[a - 1]) {\n                if (nadj != 0) {\n                    bondType = Molecule.BONDTYPE_NORMAL;\n                    break;\n                }\n                let b = mol.findBond(junction, a);\n                if (mol.bondFrom(b) == junction)\n                    bondType = mol.bondType(b);\n                nadj++;\n            }\n        let frag = MolUtil.subgraphMask(mol, maskfrag);\n        frag.setAtomElement(fragidx, MolUtil.ABBREV_ATTACHMENT);\n        frag.setAtomCharge(fragidx, 0);\n        frag.setAtomUnpaired(fragidx, 0);\n        frag.setAtomHExplicit(fragidx, Molecule.HEXPLICIT_UNKNOWN);\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomMapNum(n, 0);\n        frag.setAtomExtra(fragidx, []);\n        frag.setAtomTransient(fragidx, []);\n        let adj = frag.atomAdjList(fragidx);\n        let x = 0, y = 0, inv = 1.0 / adj.length;\n        let bondOrder = 1;\n        for (let n = 0; n < adj.length; n++) {\n            x += frag.atomX(adj[n]);\n            y += frag.atomY(adj[n]);\n            let b = frag.findBond(fragidx, adj[n]);\n            if (n == 0)\n                bondOrder = frag.bondOrder(b);\n            else if (bondOrder != frag.bondOrder(b))\n                bondOrder = 1;\n        }\n        x *= inv;\n        y *= inv;\n        if (fragidx > 1)\n            frag.swapAtoms(fragidx, 1);\n        let newmol = MolUtil.subgraphMask(mol, maskmol);\n        let newatom = newmol.addAtom(abbrevName, x, y);\n        newmol.addBond(molidx, newatom, bondOrder, bondType);\n        MolUtil.setAbbrev(newmol, newatom, frag);\n        if (polymerExtra != null)\n            newmol.setAtomExtra(newatom, Vec.concat(newmol.atomExtra(newatom), polymerExtra));\n        return [newmol, newatom];\n    }\n    static expandAbbrevs(mol, alignCoords) {\n        while (true) {\n            let anything = false;\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (MolUtil.hasAbbrev(mol, n)) {\n                    if (MolUtil.expandOneAbbrev(mol, n, alignCoords))\n                        anything = true;\n                    n--;\n                }\n            if (!anything)\n                break;\n        }\n    }\n    static expandedAbbrevs(mol) {\n        if (!this.hasAnyAbbrev(mol))\n            return mol;\n        mol = mol.clone();\n        this.expandAbbrevs(mol, true);\n        return mol;\n    }\n    static expandOneAbbrev(mol, atom, alignCoords) {\n        let frag = MolUtil.getAbbrev(mol, atom);\n        if (frag == null)\n            return null;\n        if (mol.atomAdjCount(atom) != 1 || frag.numAtoms == 0) {\n            MolUtil.clearAbbrev(mol, atom);\n            return null;\n        }\n        let m = mol.atomMapNum(atom);\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomMapNum(n, 0);\n        if (m > 0)\n            for (let n of frag.atomAdjList(1))\n                frag.setAtomMapNum(n, m);\n        return MolUtil.expandOneAbbrevFrag(mol, atom, frag, alignCoords);\n    }\n    static expandOneAbbrevFrag(mol, atom, frag, alignCoords) {\n        let polymerExtra = PolymerBlock.getPolymerExtensions(mol, atom);\n        let nbr = mol.atomAdjCount(atom) == 1 ? mol.atomAdjList(atom)[0] : 0;\n        let connBond = mol.findBond(atom, nbr), connType = Molecule.BONDTYPE_NORMAL;\n        if (connBond > 0) {\n            connType = mol.bondType(connBond);\n            if (mol.bondFrom(connBond) != nbr && (connType == Molecule.BONDTYPE_INCLINED || connType == Molecule.BONDTYPE_DECLINED))\n                connType = Molecule.BONDTYPE_NORMAL;\n        }\n        if (alignCoords) {\n            let vx1 = mol.atomX(atom) - mol.atomX(nbr), vy1 = mol.atomY(atom) - mol.atomY(nbr);\n            let adj = frag.atomAdjList(1);\n            let vx2 = 0, vy2 = 0, inv = 1.0 / adj.length;\n            for (let n = 0; n < adj.length; n++) {\n                vx2 += frag.atomX(adj[n]) - frag.atomX(1);\n                vy2 += frag.atomY(adj[n]) - frag.atomY(1);\n            }\n            vx2 *= inv;\n            vy2 *= inv;\n            let th1 = Math.atan2(vy1, vx1), th2 = Math.atan2(vy2, vx2);\n            CoordUtil.rotateMolecule(frag, th1 - th2);\n            CoordUtil.translateMolecule(frag, mol.atomX(nbr) - frag.atomX(1), mol.atomY(nbr) - frag.atomY(1));\n        }\n        if (polymerExtra != null) {\n            for (let n = 1; n <= frag.numAtoms; n++) {\n                let extra = frag.atomExtra(n);\n                for (let i = extra.length - 1; i >= 0; i--)\n                    if (polymerExtra.indexOf(extra[i]) >= 0)\n                        extra.splice(i, 1);\n                frag.setAtomExtra(n, Vec.concat(extra, polymerExtra));\n            }\n        }\n        let join = mol.numAtoms + 1;\n        mol.append(frag);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondFrom(n) == join) {\n                mol.setBondFrom(n, nbr);\n                mol.setBondType(n, connType);\n            }\n            else if (mol.bondTo(n) == join) {\n                mol.setBondFromTo(n, nbr, mol.bondFrom(n));\n                mol.setBondType(n, connType);\n            }\n        }\n        let mask = Vec.booleanArray(false, mol.numAtoms);\n        for (let n = mask.length - frag.numAtoms; n < mask.length; n++)\n            mask[n] = true;\n        mol.deleteAtomAndBonds(join);\n        mol.deleteAtomAndBonds(atom);\n        mask.splice(join - 1, 1);\n        mask.splice(atom - 1, 1);\n        return mask;\n    }\n    static clearAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                extra.splice(n, 1);\n                mol.setAtomExtra(atom, extra);\n                mol.setAtomElement(atom, 'C');\n                return;\n            }\n    }\n    static setAtomElement(mol, atom, el) {\n        if (mol.atomElement(atom) == el)\n            return;\n        this.clearAbbrev(mol, atom);\n        mol.setAtomElement(atom, el);\n    }\n    static addBond(mol, bfr, bto, order, type) {\n        if (type == null)\n            type = Molecule.BONDTYPE_NORMAL;\n        if (mol.atomAdjCount(bfr) >= 1)\n            this.clearAbbrev(mol, bfr);\n        if (mol.atomAdjCount(bto) >= 1)\n            this.clearAbbrev(mol, bto);\n        let b = mol.findBond(bfr, bto);\n        if (b > 0)\n            mol.deleteBond(b);\n        return mol.addBond(bfr, bto, order, type);\n    }\n    static subgraphMask(mol, mask) {\n        let invidx = [];\n        let sum = 0;\n        for (let n = 0; n < mol.numAtoms; n++) {\n            if (mask[n])\n                invidx.push(++sum);\n            else\n                invidx.push(0);\n        }\n        if (sum == 0)\n            return new Molecule();\n        if (sum == mol.numAtoms)\n            return mol.clone();\n        let frag = new Molecule();\n        frag.keepTransient = true;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let num = frag.addAtom(mol.atomElement(n), mol.atomX(n), mol.atomY(n), mol.atomCharge(n), mol.atomUnpaired(n));\n                frag.setAtomIsotope(num, mol.atomIsotope(n));\n                frag.setAtomHExplicit(num, mol.atomHExplicit(n));\n                frag.setAtomMapNum(num, mol.atomMapNum(n));\n                frag.setAtomExtra(num, mol.atomExtra(n));\n                frag.setAtomTransient(num, mol.atomTransient(n));\n            }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = invidx[mol.bondFrom(n) - 1], bto = invidx[mol.bondTo(n) - 1];\n            if (bfr > 0 && bto > 0) {\n                let num = frag.addBond(bfr, bto, mol.bondOrder(n), mol.bondType(n));\n                frag.setBondExtra(num, mol.bondExtra(n));\n                frag.setBondTransient(num, mol.bondTransient(n));\n            }\n        }\n        frag.keepTransient = mol.keepTransient;\n        return frag;\n    }\n    static subgraphIndex(mol, idx) {\n        let invidx = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 0; n < invidx.length; n++)\n            invidx[n] = 0;\n        for (let n = 0; n < idx.length; n++)\n            invidx[idx[n] - 1] = n + 1;\n        let frag = new Molecule();\n        frag.keepTransient = true;\n        for (let n = 0; n < idx.length; n++) {\n            let num = frag.addAtom(mol.atomElement(idx[n]), mol.atomX(idx[n]), mol.atomY(idx[n]), mol.atomCharge(idx[n]), mol.atomUnpaired(idx[n]));\n            frag.setAtomIsotope(num, mol.atomIsotope(idx[n]));\n            frag.setAtomHExplicit(num, mol.atomHExplicit(idx[n]));\n            frag.setAtomMapNum(num, mol.atomMapNum(idx[n]));\n            frag.setAtomExtra(num, mol.atomExtra(idx[n]));\n            frag.setAtomTransient(num, mol.atomTransient(idx[n]));\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = invidx[mol.bondFrom(n) - 1], bto = invidx[mol.bondTo(n) - 1];\n            if (bfr > 0 && bto > 0) {\n                let num = frag.addBond(bfr, bto, mol.bondOrder(n), mol.bondType(n));\n                frag.setBondExtra(num, mol.bondExtra(n));\n                frag.setBondTransient(num, mol.bondTransient(n));\n            }\n        }\n        frag.keepTransient = mol.keepTransient;\n        return frag;\n    }\n    static subgraphWithAttachments(mol, mask) {\n        let xmask = mask.slice(0);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (mask[bfr] && !mask[bto])\n                xmask[bto] = true;\n            else if (mask[bto] && !mask[bfr])\n                xmask[bfr] = true;\n        }\n        let xmol = mol.clone();\n        for (let n = 1; n <= xmol.numAtoms; n++)\n            if (xmask[n - 1] && !mask[n - 1]) {\n                xmol.setAtomElement(n, 'X');\n                xmol.setAtomCharge(n, 0);\n                xmol.setAtomUnpaired(n, 0);\n                xmol.setAtomHExplicit(n, Molecule.HEXPLICIT_UNKNOWN);\n                xmol.setAtomExtra(n, []);\n            }\n        return MolUtil.subgraphMask(xmol, xmask);\n    }\n    static append(mol, frag) {\n        let boxm = mol.boundary(), boxf = frag.boundary();\n        let dx = boxm.maxX() + Molecule.IDEALBOND - boxf.minX();\n        let dy = 0.5 * (boxm.minY() + boxm.maxY() - boxf.minY() - boxf.maxY());\n        let top = mol.numAtoms;\n        mol.append(frag);\n        for (let n = top + 1; n <= mol.numAtoms; n++)\n            mol.setAtomPos(n, mol.atomX(n) + dx, mol.atomY(n) + dy);\n    }\n    static deleteAtoms(mol, idx) {\n        let mask = Vec.booleanArray(true, mol.numAtoms);\n        for (let n = 0; n < idx.length; n++)\n            mask[idx[n] - 1] = false;\n        return MolUtil.subgraphMask(mol, mask);\n    }\n    static componentList(mol) {\n        let sz = mol.numAtoms;\n        if (sz == 0)\n            return null;\n        let g = Graph.fromMolecule(mol);\n        let groups = g.calculateComponentGroups();\n        for (let grp of groups)\n            Vec.addTo(grp, 1);\n        return groups;\n    }\n    static getAtomSides(mol, atom) {\n        let g = Graph.fromMolecule(mol);\n        let cc = g.calculateComponents();\n        let mask = [];\n        for (let n = 0; n < cc.length; n++)\n            mask.push(cc[n] == cc[atom - 1]);\n        mask[atom - 1] = false;\n        let oldmap = Vec.maskIdx(mask);\n        g.keepNodesMask(mask);\n        cc = g.calculateComponents();\n        let ccmax = Vec.max(cc);\n        let grps = [];\n        for (let n = 0; n < ccmax; n++)\n            grps.push([atom]);\n        for (let n = 0; n < cc.length; n++)\n            grps[cc[n] - 1].push(oldmap[n] + 1);\n        return grps;\n    }\n    static getBondSides(mol, bond) {\n        let bf = mol.bondFrom(bond), bt = mol.bondTo(bond);\n        let inRing = mol.bondInRing(bond);\n        let g = Graph.fromMolecule(mol);\n        let cc = g.calculateComponents();\n        let mask = [];\n        for (let n = 0; n < cc.length; n++)\n            mask.push(cc[n] == cc[bf - 1]);\n        if (!inRing)\n            g.removeEdge(bf - 1, bt - 1);\n        else {\n            mask[bf - 1] = false;\n            mask[bt - 1] = false;\n        }\n        let oldmap = Vec.maskIdx(mask);\n        g.keepNodesMask(mask);\n        cc = g.calculateComponents();\n        let ccmax = Vec.max(cc);\n        let grps = [];\n        for (let n = 0; n < ccmax; n++) {\n            grps[n] = [];\n            if (inRing) {\n                grps[n].push(bf);\n                grps[n].push(bt);\n            }\n        }\n        for (let n = 0; n < cc.length; n++)\n            grps[cc[n] - 1].push(oldmap[n] + 1);\n        return grps;\n    }\n    static arrayAtomX(mol) {\n        let x = Vec.numberArray(0, mol.numAtoms);\n        for (let n = x.length - 1; n >= 0; n--)\n            x[n] = mol.atomX(n + 1);\n        return x;\n    }\n    static arrayAtomY(mol) {\n        let y = Vec.numberArray(0, mol.numAtoms);\n        for (let n = y.length - 1; n >= 0; n--)\n            y[n] = mol.atomY(n + 1);\n        return y;\n    }\n    static arrayAtomMapNum(mol) {\n        let mapnum = Vec.numberArray(0, mol.numAtoms);\n        for (let n = mapnum.length - 1; n >= 0; n--)\n            mapnum[n] = mol.atomMapNum(n + 1);\n        return mapnum;\n    }\n    static molecularFormula(mol, punctuation) {\n        let puncEnter = '', puncExit = '', puncEnterSuper = '', puncExitSuper = '';\n        if (punctuation == true)\n            [puncEnter, puncExit] = ['{', '}', '{^', '}'];\n        else if (punctuation instanceof Array) {\n            puncEnter = punctuation[0];\n            puncExit = punctuation[1];\n            puncEnterSuper = punctuation[2];\n            puncExitSuper = punctuation[3];\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                mol = mol.clone();\n                MolUtil.expandAbbrevs(mol, false);\n                break;\n            }\n        let countC = 0, countH = 0;\n        let elements = Vec.stringArray('', mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            countH += mol.atomHydrogens(n);\n            let el = mol.atomElement(n);\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL)\n                el = puncEnterSuper + mol.atomIsotope(n) + puncExitSuper + el;\n            if (el == 'C')\n                countC++;\n            else if (el == 'H')\n                countH++;\n            else\n                elements[n - 1] = el;\n        }\n        elements.sort();\n        let formula = '';\n        if (countC > 0)\n            formula += 'C';\n        if (countC > 1) {\n            if (punctuation)\n                formula += puncEnter;\n            formula += countC;\n            if (punctuation)\n                formula += puncExit;\n        }\n        if (countH > 0)\n            formula += 'H';\n        if (countH > 1) {\n            if (punctuation)\n                formula += puncEnter;\n            formula += countH;\n            if (punctuation)\n                formula += puncExit;\n        }\n        for (let n = 0; n < elements.length; n++)\n            if (elements[n].length > 0) {\n                let count = 1;\n                for (; n + 1 < elements.length && elements[n] == elements[n + 1]; n++)\n                    count++;\n                formula += elements[n];\n                if (count > 1) {\n                    if (punctuation)\n                        formula += puncEnter;\n                    formula += count;\n                    if (punctuation)\n                        formula += puncExit;\n                }\n            }\n        return formula.toString();\n    }\n    static molecularWeight(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                mol = mol.clone();\n                MolUtil.expandAbbrevs(mol, false);\n                break;\n            }\n        let mw = 0;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            mw += mol.atomHydrogens(n) * Chemistry.NATURAL_ATOMIC_WEIGHTS[1];\n            let iso = mol.atomIsotope(n);\n            if (iso != Molecule.ISOTOPE_NATURAL) {\n                mw += iso;\n                continue;\n            }\n            let an = Molecule.elementAtomicNumber(mol.atomElement(n));\n            if (an > 0 && an < Chemistry.NATURAL_ATOMIC_WEIGHTS.length)\n                mw += Chemistry.NATURAL_ATOMIC_WEIGHTS[an];\n        }\n        return mw;\n    }\n    static removeDuplicateBonds(mol) {\n        let bpri = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let p = Math.min(mol.bondFrom(n), mol.bondTo(n)) * mol.numAtoms + Math.max(mol.bondFrom(n), mol.bondTo(n));\n            bpri.push(p);\n        }\n        let bidx = Vec.idxSort(bpri);\n        let keepmask = Vec.booleanArray(false, bidx.length);\n        let p = 0;\n        while (p < bidx.length) {\n            let sz = 1;\n            while (p + sz < bidx.length && bpri[bidx[p]] == bpri[bidx[p + sz]])\n                sz++;\n            let best = p;\n            for (let n = p + 1; n < p + sz; n++) {\n                let b1 = bidx[best] + 1, b2 = bidx[n] + 1;\n                let a1 = mol.bondFrom(b1), a2 = mol.bondTo(b1);\n                let el1 = mol.atomElement(a1), el2 = mol.atomElement(a2);\n                let limit1 = 0, limit2 = 0;\n                if (el1 == 'C' || el1 == 'N')\n                    limit1 = 4;\n                else if (el1 == 'O')\n                    limit1 = 3;\n                if (el2 == 'C' || el2 == 'N')\n                    limit2 = 4;\n                else if (el2 == 'O')\n                    limit2 = 3;\n                if (limit1 > 0 || limit2 > 0) {\n                    let boB1A1 = 0, boB1A2 = 0, boB2A1 = 0, boB2A2 = 0;\n                    for (let i = 1; i <= mol.numBonds; i++) {\n                        if (i != b2 && (mol.bondFrom(i) == a1 || mol.bondTo(i) == a1))\n                            boB1A1 += mol.bondOrder(i);\n                        if (i != b2 && (mol.bondFrom(i) == a2 || mol.bondTo(i) == a2))\n                            boB1A2 += mol.bondOrder(i);\n                        if (i != b1 && (mol.bondFrom(i) == a1 || mol.bondTo(i) == a1))\n                            boB2A1 += mol.bondOrder(i);\n                        if (i != b1 && (mol.bondFrom(i) == a2 || mol.bondTo(i) == a2))\n                            boB2A2 += mol.bondOrder(i);\n                    }\n                    let bad1 = 0, bad2 = 0;\n                    if (limit1 > 0 && boB1A1 > limit1)\n                        bad1++;\n                    if (limit2 > 0 && boB1A2 > limit2)\n                        bad1++;\n                    if (limit1 > 0 && boB2A1 > limit1)\n                        bad2++;\n                    if (limit2 > 0 && boB2A2 > limit2)\n                        bad2++;\n                    if (bad1 < bad2)\n                        continue;\n                    if (bad1 > bad2) {\n                        best = n;\n                        continue;\n                    }\n                }\n                let exotic1 = 2 * mol.bondOrder(b1), exotic2 = 2 * mol.bondOrder(b2);\n                exotic1 += (exotic1 == 0 ? 4 : 0) + (mol.bondType(b1) != Molecule.BONDTYPE_NORMAL ? 1 : 0);\n                exotic2 += (exotic2 == 0 ? 4 : 0) + (mol.bondType(b2) != Molecule.BONDTYPE_NORMAL ? 1 : 0);\n                if (exotic2 > exotic1)\n                    best = n;\n            }\n            keepmask[bidx[best]] = true;\n            p += sz;\n        }\n        for (let n = mol.numBonds; n >= 1; n--)\n            if (!keepmask[n - 1] || mol.bondFrom(n) == mol.bondTo(n))\n                mol.deleteBond(n);\n    }\n    static calculateWalkWeight(mol, atom) {\n        let ccsz = 0, cc = Graph.fromMolecule(mol).calculateComponents();\n        for (let n = 0; n < cc.length; n++)\n            if (cc[n] == cc[atom - 1])\n                ccsz++;\n        let w = Vec.numberArray(1, mol.numAtoms), wn = Vec.numberArray(0, mol.numAtoms);\n        w[atom - 1] = 0;\n        for (; ccsz > 0; ccsz--) {\n            for (let n = 0; n < mol.numAtoms; n++)\n                wn[n] = w[n];\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let a1 = mol.bondFrom(n) - 1, a2 = mol.bondTo(n) - 1;\n                w[a1] += wn[a2] * 0.1;\n                w[a2] += wn[a1] * 0.1;\n            }\n            w[atom - 1] = 0;\n        }\n        return w;\n    }\n    static totalHydrogens(mol, atom) {\n        let hc = mol.atomHydrogens(atom);\n        let adj = mol.atomAdjList(atom);\n        for (let n = 0; n < adj.length; n++)\n            if (mol.atomElement(adj[n]) == 'H')\n                hc++;\n        return hc;\n    }\n    static stripHydrogens(mol, force = false) {\n        for (let n = mol.numAtoms; n >= 1; n--)\n            if ((force && mol.atomElement(n) == 'H') || this.boringHydrogen(mol, n))\n                mol.deleteAtomAndBonds(n);\n    }\n    static boringHydrogen(mol, atom) {\n        if (mol.atomElement(atom) != 'H')\n            return false;\n        if (mol.atomCharge(atom) != 0 || mol.atomUnpaired(atom) != 0)\n            return false;\n        if (mol.atomIsotope(atom) != Molecule.ISOTOPE_NATURAL)\n            return false;\n        if (Vec.notBlank(mol.atomExtra(atom)) || Vec.notBlank(mol.atomTransient(atom)))\n            return false;\n        if (mol.atomAdjCount(atom) != 1)\n            return false;\n        let other = mol.atomAdjList(atom)[0];\n        if (mol.atomElement(other) == 'H')\n            return false;\n        let bond = mol.atomAdjBonds(atom)[0];\n        if (mol.bondOrder(bond) != 1 || mol.bondType(bond) != Molecule.BONDTYPE_NORMAL)\n            return false;\n        if (mol.atomHExplicit(other) != Molecule.HEXPLICIT_UNKNOWN)\n            return false;\n        if (Molecule.HYVALENCE_EL.indexOf(mol.atomElement(other)) < 0)\n            return false;\n        return true;\n    }\n    static createHydrogens(mol, position) {\n        if (position == null)\n            position = false;\n        let na = mol.numAtoms;\n        for (let n = 1; n <= na; n++) {\n            let hc = mol.atomHydrogens(n);\n            if (hc == 0)\n                continue;\n            if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN)\n                mol.setAtomHExplicit(n, 0);\n            if (!position) {\n                for (; hc > 0; hc--) {\n                    let a = mol.addAtom('H', mol.atomX(n), mol.atomY(n));\n                    mol.addBond(n, a, 1);\n                }\n            }\n            else\n                SketchUtil.placeAdditionalHydrogens(mol, n, hc);\n        }\n        return mol.numAtoms - na;\n    }\n    static atomVec3(mol, atom) {\n        if (mol.is3D())\n            return [mol.atomX(atom), mol.atomY(atom), mol.atomZ(atom)];\n        else\n            return [mol.atomX(atom), mol.atomY(atom), 0];\n    }\n    static atomOxidationState(mol, atom) {\n        if (mol.atomAdjCount(atom) == 0)\n            return null;\n        if (this.hasAbbrev(mol, atom))\n            return null;\n        let atno = mol.atomicNumber(atom);\n        if (atno == 0)\n            return null;\n        let nonMetal = atno == Chemistry.ELEMENT_H || Chemistry.ELEMENT_BLOCKS[atno] == 2;\n        let oxstate = mol.atomHydrogens(atom) + (nonMetal ? -mol.atomCharge(atom) : mol.atomCharge(atom));\n        for (let b of mol.atomAdjBonds(atom)) {\n            let bo = mol.bondOrder(b), other = mol.bondOther(b, atom);\n            let chalco = ['O', 'S', 'Se', 'Te'].includes(mol.atomElement(other));\n            if (nonMetal || chalco)\n                oxstate += bo;\n            else\n                oxstate += bo % 2;\n        }\n        if (atno == Chemistry.ELEMENT_H && oxstate == 1)\n            return null;\n        if (atno == Chemistry.ELEMENT_B && oxstate == 3)\n            return null;\n        if (atno == Chemistry.ELEMENT_C && oxstate == 4)\n            return null;\n        if (atno == Chemistry.ELEMENT_N && oxstate == 3)\n            return null;\n        if (atno == Chemistry.ELEMENT_O && oxstate == 2)\n            return null;\n        if (atno == Chemistry.ELEMENT_S && (oxstate == 2 || oxstate == 4 || oxstate == 6))\n            return null;\n        if (atno == Chemistry.ELEMENT_P && (oxstate == 3 || oxstate == 5))\n            return null;\n        if ((atno == Chemistry.ELEMENT_F || atno == Chemistry.ELEMENT_Cl ||\n            atno == Chemistry.ELEMENT_Br || atno == Chemistry.ELEMENT_I) && oxstate == 1)\n            return null;\n        return oxstate;\n    }\n    static oxidationStateText(oxstate) {\n        if (oxstate == 0)\n            return '0';\n        let str = oxstate < 0 ? '-' : '';\n        let absox = Math.abs(oxstate);\n        if (absox == 1)\n            str += 'I';\n        else if (absox == 2)\n            str += 'II';\n        else if (absox == 3)\n            str += 'III';\n        else if (absox == 4)\n            str += 'IV';\n        else if (absox == 5)\n            str += 'V';\n        else if (absox == 6)\n            str += 'VI';\n        else if (absox == 7)\n            str += 'VII';\n        else if (absox == 8)\n            str += 'VIII';\n        else if (absox == 9)\n            str += 'IX';\n        else if (absox == 10)\n            str += 'X';\n        else if (absox == 11)\n            str += 'XI';\n        else if (absox == 12)\n            str += 'XII';\n        else\n            str = (oxstate > 0 ? '+' : '') + oxstate;\n        return str;\n    }\n}\nMolUtil.TEMPLATE_ATTACHMENT = 'X';\nMolUtil.ABBREV_ATTACHMENT = '*';\n//# sourceMappingURL=MolUtil.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/data/Molecule';\n\nexport interface InChIResult\n{\n\tinchi:string;\n\tinchiKey:string;\n}\n\nexport abstract class InChIDelegate\n{\n\tpublic async generate(mol:Molecule):Promise<InChIResult>\n\t{\n\t\tthrow new Error('InChI not implemented.');\n\t};\n}","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {MolUtil} from 'webmolkit/data/MolUtil';\nimport {MDLMOLWriter} from 'webmolkit/data/MDLWriter';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport {getGlobal} from '@electron/remote';\nimport {InChIDelegate, InChIResult} from '../mixture/InChIDelegate';\n\n/*\n\tInteroperability with InChI technology: the generator program is a native binary, the location of which\n\tneeds to be discovered. Each generation operation involves a trip to the external execution subsystem.\n*/\n\nlet execLocation:string = null;\nlet inchi:InChI = null;\n\nexport class InChI extends InChIDelegate\n{\n\t// optional override: when using the Emscripten-ported version of InChI, set this function to call the\n\t// natively encoded implementation\n\tpublic static nativeMolfileToInChI:(mdlmol:string, options:string) => Promise<string> = null;\n\n\tprivate available = false;\n\tprivate inchiPath = execLocation;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tif (!this.inchiPath)\n\t\t{\n\t\t\tthis.inchiPath = getGlobal('INCHI_EXEC');\n\t\t}\n\n\t\tif (this.inchiPath)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfs.accessSync(this.inchiPath, fs.constants.X_OK);\n\t\t\t\tthis.available = true;\n\t\t\t}\n\t\t\tcatch (ex) {} // not available\n\t\t}\n\t}\n\n\t// specify where the executable file is (overrides the global option)\n\tpublic static hasExecutable():boolean\n\t{\n\t\treturn !!execLocation;\n\t}\n\tpublic static setExecutable(exec:string):void\n\t{\n\t\texecLocation = exec;\n\t}\n\n\t// returns true if we have reason to believe the InChI executable can be run on demand\n\tpublic static isAvailable():boolean\n\t{\n\t\tif (this.nativeMolfileToInChI != null) return true;\n\t\tif (!inchi) inchi = new InChI();\n\t\treturn inchi.available;\n\t}\n\n\t// converts a molecule to an InChI string, if possible; should check the availability first, for graceful\n\t// rejection; failure results in an exception; note that it is executed synchronously: if the executable takes\n\t// a long time to run, this will be a problem for the UI; the return value is [InChI, InChIKey]\n\tpublic async generate(mol:Molecule):Promise<InChIResult>\n\t{\n\t\tmol = mol.clone();\n\t\tMolUtil.expandAbbrevs(mol, true);\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (mol.bondOrder(n) < 1 || mol.bondOrder(n) > 3) mol.setBondOrder(n, 1);\n\n\t\tlet writer = new MDLMOLWriter(mol);\n\t\twriter.enhancedFields = false;\n\t\tlet mdlmol = writer.write();\n\n\t\tif (InChI.nativeMolfileToInChI != null)\n\t\t{\n\t\t\tlet inchi = await InChI.nativeMolfileToInChI(mdlmol, '-AuxNone -NoLabels');\n\t\t\treturn {inchi: inchi, inchiKey: null}; // NOTE: this version doesn't provide a key; address this in the future\n\t\t}\n\n\t\tif (!inchi) inchi = new InChI();\n\t\tif (!inchi.available) throw 'InChI executable is not available.';\n\n\t\tconst proc = require('child_process');\n\n\t\tlet cmd = inchi.inchiPath.replace(/ /g, '\\\\\\ '); // very crude escaping of spaces\n\t\tlet result = proc.spawnSync(cmd, ['-STDIO', '-AuxNone', '-NoLabels', '-Key'], {input: mdlmol});\n\t\tlet raw = result.stdout.toString(), bits = raw.split('\\n');\n\n\t\tif (bits.length < 2 || !bits[0].startsWith('InChI='))\n\t\t{\n\t\t\tconsole.log('InChI command returned result:\\n' + raw);\n\t\t\tconsole.log('Molecule:\\n' + mol);\n\t\t\tconsole.log('MDL Molfile:\\n' + mdlmol);\n\t\t\tthrow 'Invalid returned by InChI generator: ' + raw;\n\t\t}\n\t\treturn {inchi: bits[0], inchiKey: bits[1]};\n\t}\n}\n\n","import { clone } from '../util/util';\nexport class RenderPolicy {\n    constructor(data) {\n        if (!data) {\n            data =\n                {\n                    name: 'default',\n                    pointScale: 20,\n                    resolutionDPI: 100,\n                    fontSize: 0.65,\n                    lineSize: 0.075,\n                    bondSep: 0.2,\n                    defaultPadding: 0.2,\n                    foreground: 0x000000,\n                    background: 0xFFFFFF,\n                    atomCols: new Array(112)\n                };\n            for (let n = 0; n <= 111; n++)\n                data.atomCols[n] = 0x000000;\n            this.data = data;\n        }\n        else {\n            this.data = clone(data);\n        }\n    }\n    clone() { return new RenderPolicy(this.data); }\n    static defaultBlackOnWhite(pixPerAng) {\n        let policy = new RenderPolicy();\n        if (pixPerAng)\n            policy.data.pointScale = pixPerAng;\n        return policy;\n    }\n    static defaultWhiteOnBlack(pixPerAng) {\n        let policy = new RenderPolicy();\n        if (pixPerAng)\n            policy.data.pointScale = pixPerAng;\n        policy.data.foreground = 0xFFFFFF;\n        policy.data.background = 0x000000;\n        for (let n = 0; n <= 111; n++)\n            policy.data.atomCols[n] = 0xFFFFFF;\n        return policy;\n    }\n    static defaultColourOnWhite(pixPerAng) {\n        let policy = RenderPolicy.defaultBlackOnWhite(pixPerAng);\n        policy.data.atomCols[0] = 0x404040;\n        policy.data.atomCols[1] = 0x808080;\n        policy.data.atomCols[6] = 0x000000;\n        policy.data.atomCols[7] = 0x0000FF;\n        policy.data.atomCols[8] = 0xFF0000;\n        policy.data.atomCols[9] = 0xFF8080;\n        policy.data.atomCols[15] = 0xFF8000;\n        policy.data.atomCols[16] = 0x808000;\n        policy.data.atomCols[17] = 0x00C000;\n        policy.data.atomCols[35] = 0xC04000;\n        return policy;\n    }\n    static defaultColourOnBlack(pixPerAng) {\n        let policy = RenderPolicy.defaultWhiteOnBlack(pixPerAng);\n        policy.data.atomCols[0] = 0xA0A0A0;\n        policy.data.atomCols[1] = 0x808080;\n        policy.data.atomCols[6] = 0xFFFFFF;\n        policy.data.atomCols[7] = 0x4040FF;\n        policy.data.atomCols[8] = 0xFF4040;\n        policy.data.atomCols[9] = 0xFF8080;\n        policy.data.atomCols[15] = 0xFF8000;\n        policy.data.atomCols[16] = 0xFFFF00;\n        policy.data.atomCols[17] = 0x40FF40;\n        policy.data.atomCols[35] = 0xFF8040;\n        return policy;\n    }\n    static defaultPrintedPublication() {\n        let policy = RenderPolicy.defaultBlackOnWhite(9.6);\n        policy.data.resolutionDPI = 600;\n        policy.data.fontSize = 0.80;\n        policy.data.bondSep = 0.27;\n        policy.data.lineSize = 0.0625;\n        return policy;\n    }\n}\nexport class RenderEffects {\n    constructor() {\n        this.colAtom = {};\n        this.colBond = {};\n        this.dottedRectOutline = {};\n        this.dottedBondCross = {};\n        this.hideAtoms = new Set();\n        this.hideBonds = new Set();\n        this.atomFrameDotSz = [];\n        this.atomFrameCol = [];\n        this.atomCircleSz = [];\n        this.atomCircleCol = [];\n        this.atomDecoText = [];\n        this.atomDecoCol = [];\n        this.atomDecoSize = [];\n        this.bondDecoText = [];\n        this.bondDecoCol = [];\n        this.bondDecoSize = [];\n        this.overlapAtoms = [];\n    }\n}\nexport var RenderMnemonicType;\n(function (RenderMnemonicType) {\n    RenderMnemonicType[\"Atom\"] = \"A\";\n    RenderMnemonicType[\"Bond\"] = \"B\";\n    RenderMnemonicType[\"Artifact\"] = \"R\";\n    RenderMnemonicType[\"Effect\"] = \"E\";\n})(RenderMnemonicType || (RenderMnemonicType = {}));\nexport class RenderMnemonics {\n    constructor(encoded) {\n        this.items = [];\n        let lines = (encoded || '').split('&');\n        for (let line of lines) {\n            let bits = line.split('|');\n            if (bits.length != 3)\n                continue;\n            let item = {\n                type: bits[0],\n                details: bits[1],\n                coords: bits[2].split(',').map((str) => parseFloat(str)),\n            };\n            this.items.push(item);\n        }\n    }\n    append(type, details, coords) {\n        for (let n = details.length - 1; n >= 0; n--)\n            if (details[n] == '|' || details[n] == '&')\n                details = details.substring(0, n) + details.substring(n + 1);\n        this.items.push({ type, details, coords });\n    }\n    serialise() {\n        var _a;\n        let lines = [];\n        for (let item of this.items) {\n            let coords = ((_a = item.coords) !== null && _a !== void 0 ? _a : []).map((coord) => coord.toFixed(1)).join(',');\n            lines.push(`${item.type}|${item.details}|${coords}`);\n        }\n        return lines.join('&');\n    }\n    packWithCoords() { return this.serialise(); }\n    packWithoutCoords() {\n        return this.items.map((item) => `${item.type}|${item.details}`).join('&');\n    }\n}\n//# sourceMappingURL=Rendering.js.map","import { BondArtifact } from '../data/BondArtifact';\nimport { CoordUtil } from '../data/CoordUtil';\nimport { Molecule } from '../data/Molecule';\nimport { PolymerBlock, PolymerBlockConnectivity } from '../data/PolymerBlock';\nimport { QueryUtil } from '../data/QueryUtil';\nimport { FitRotatedEllipse } from '../util/FitRotatedEllipse';\nimport { Box, GeomUtil, Line, Oval, QuickHull } from '../util/Geom';\nimport { angleDiff, clone, DEGRAD, invZ, norm2_xy, norm_xy, RADDEG, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { FontData } from './FontData';\nimport { RenderEffects } from './Rendering';\nexport var BLineType;\n(function (BLineType) {\n    BLineType[BLineType[\"Normal\"] = 1] = \"Normal\";\n    BLineType[BLineType[\"Inclined\"] = 2] = \"Inclined\";\n    BLineType[BLineType[\"Declined\"] = 3] = \"Declined\";\n    BLineType[BLineType[\"Unknown\"] = 4] = \"Unknown\";\n    BLineType[BLineType[\"Dotted\"] = 5] = \"Dotted\";\n    BLineType[BLineType[\"DotDir\"] = 6] = \"DotDir\";\n    BLineType[BLineType[\"IncDouble\"] = 7] = \"IncDouble\";\n    BLineType[BLineType[\"IncTriple\"] = 8] = \"IncTriple\";\n    BLineType[BLineType[\"IncQuadruple\"] = 9] = \"IncQuadruple\";\n})(BLineType || (BLineType = {}));\nconst MINBOND_LINE = 0.25;\nconst MINBOND_EXOTIC = 0.5;\nexport class ArrangeMolecule {\n    static guestimateSize(mol, policy, maxW, maxH) {\n        let box = mol.boundary();\n        let minX = box.minX(), minY = box.minY(), maxX = box.maxX(), maxY = box.maxY();\n        let fontSize = policy.data.fontSize * this.FONT_CORRECT;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomExplicit(n)) {\n                let numsym = 0;\n                for (let ch of mol.atomElement(n))\n                    if (!'|{}^'.includes(ch))\n                        numsym++;\n                let plusH = mol.atomHydrogens(n) > 0 ? 1 : 0;\n                const aw = 0.5 * 0.7 * fontSize * (numsym + plusH);\n                const ah = 0.75 * fontSize * (1 + 0.2 * plusH);\n                const ax = mol.atomX(n), ay = mol.atomY(n);\n                minX = Math.min(minX, ax - aw);\n                maxX = Math.max(maxX, ax + aw);\n                minY = Math.min(minY, ay - ah);\n                maxY = Math.max(maxY, ay + ah);\n            }\n        let w = Math.max(1, (maxX - minX)) * policy.data.pointScale;\n        let h = Math.max(1, (maxY - minY)) * policy.data.pointScale;\n        if (maxW > 0 && w > maxW) {\n            h *= maxW / w;\n            w = maxW;\n        }\n        if (maxH > 0 && h > maxH) {\n            w *= maxH / h;\n            h = maxH;\n        }\n        return [w, h];\n    }\n    constructor(mol, measure, policy, effects = new RenderEffects()) {\n        this.mol = mol;\n        this.measure = measure;\n        this.policy = policy;\n        this.effects = effects;\n        this.points = [];\n        this.lines = [];\n        this.rings = [];\n        this.paths = [];\n        this.space = [];\n        this.wantArtifacts = true;\n        this.artifacts = null;\n        this.bondOrder = [];\n        this.atomCharge = [];\n        this.atomUnpaired = [];\n        this.artifactCharge = new Map();\n        this.artifactUnpaired = new Map();\n        this.artifactFract = new Map();\n    }\n    getMolecule() { return this.mol; }\n    getMeasure() { return this.measure; }\n    getPolicy() { return this.policy; }\n    getEffects() { return this.effects; }\n    getScale() { return this.scale; }\n    setWantArtifacts(want) { this.wantArtifacts = want; }\n    getArtifacts() { return this.artifacts; }\n    setArtifacts(artifacts) { this.artifacts = artifacts; }\n    arrange() {\n        const { mol, measure, policy, effects } = this;\n        this.scale = measure.scale();\n        this.bondSepPix = policy.data.bondSep * measure.scale();\n        this.lineSizePix = policy.data.lineSize * measure.scale();\n        this.fontSizePix = policy.data.fontSize * measure.scale() * ArrangeMolecule.FONT_CORRECT;\n        this.ymul = measure.yIsUp() ? -1 : 1;\n        let artmask = null;\n        if (this.wantArtifacts && this.artifacts == null) {\n            this.artifacts = new BondArtifact(mol);\n            artmask = Vec.booleanArray(false, mol.numAtoms);\n            for (let path of this.artifacts.getResPaths())\n                for (let a of path.atoms)\n                    artmask[a - 1] = true;\n            for (let ring of this.artifacts.getResRings())\n                for (let a of ring.atoms)\n                    artmask[a - 1] = true;\n            for (let arene of this.artifacts.getArenes()) {\n                artmask[arene.centre - 1] = true;\n                for (let a of arene.atoms)\n                    artmask[a - 1] = true;\n            }\n        }\n        this.setupBondOrders();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            if (mol.atomElement(n).length > 2 && mol.atomHydrogens(n) == 0) {\n                this.points.push(null);\n                this.space.push(null);\n                continue;\n            }\n            let a = {\n                anum: n,\n                text: mol.atomExplicit(n) || CoordUtil.atomIsWeirdLinear(mol, n) ? mol.atomElement(n) : null,\n                fsz: this.fontSizePix,\n                col: this.policy.data.atomCols[mol.atomicNumber(n)],\n                oval: new Oval(this.measure.angToX(mol.atomX(n)), this.measure.angToY(mol.atomY(n)), 0, 0)\n            };\n            let overCol = this.effects.colAtom[n];\n            if (overCol)\n                a.col = overCol;\n            if (artmask && artmask[n - 1] && mol.atomElement(n) == 'C')\n                a.text = null;\n            if (a.text != null) {\n                let wad = this.measure.measureText(a.text, a.fsz);\n                const PADDING = 1.1;\n                a.oval.rw = 0.5 * wad[0] * PADDING;\n                a.oval.rh = 0.5 * wad[1] * PADDING;\n            }\n            this.points.push(a);\n            this.space.push(this.computeSpacePoint(a));\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (this.points[n - 1] == null)\n                this.processLabel(n);\n        let bdbl = Vec.booleanArray(false, mol.numBonds);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let bt = mol.bondType(n), bo = this.bondOrder[n - 1];\n            if (bo < 0)\n                continue;\n            let col = this.effects.colBond[n];\n            if (!col)\n                col = this.policy.data.foreground;\n            bdbl[n - 1] = bo == 2 && (bt == Molecule.BONDTYPE_NORMAL || bt == Molecule.BONDTYPE_UNKNOWN);\n            let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n            let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n            if (Math.abs(x2 - x1) <= 1 && Math.abs(y2 - y1) <= 1) {\n                bdbl[n - 1] = false;\n                continue;\n            }\n            if (bdbl[n - 1])\n                continue;\n            let minDist = (bo == 1 && bt == Molecule.BONDTYPE_NORMAL ? MINBOND_LINE : MINBOND_EXOTIC) * measure.scale();\n            let xy1 = this.shrinkBond(x1, y1, x2, y2, this.backOffAtom(bfr, x1, y1, x2, y2, minDist));\n            let xy2 = this.shrinkBond(x2, y2, x1, y1, this.backOffAtom(bto, x2, y2, x1, y1, minDist));\n            this.ensureMinimumBondLength(xy1, xy2, x1, y1, x2, y2, minDist);\n            let sz = this.lineSizePix, head = 0;\n            let qbonds = QueryUtil.queryBondOrders(mol, n);\n            if (Vec.notBlank(qbonds)) {\n                Vec.sort(qbonds);\n                if (qbonds[0] == -1) {\n                    qbonds.splice(0, 1);\n                    qbonds.push(-1);\n                }\n                let qtxt = Vec.equals(qbonds, [0, 1, 2, 3, -1]) ? '?' : qbonds.map((o) => o == -1 ? 'A' : o.toString()).join('');\n                let oxy = this.orthogonalDelta(xy1[0], xy1[1], xy2[0], xy2[1], 1.3 * this.bondSepPix);\n                let v = -0.5;\n                for (let i = 0; i < 2; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    let b = {\n                        bnum: n,\n                        bfr,\n                        bto,\n                        type: BLineType.Dotted,\n                        line: new Line(lx1, ly1, lx2, ly2),\n                        size: 0.5 * sz,\n                        head,\n                        col: (col & 0xFFFFFF) | 0x80000000,\n                    };\n                    this.lines.push(b);\n                    this.space.push(this.computeSpaceLine(b));\n                }\n                let rotation = Math.atan2(xy2[1] - xy1[1], xy2[0] - xy1[0]) * RADDEG;\n                if (rotation < -90 || rotation > 90)\n                    rotation += 180;\n                let a = {\n                    anum: 0,\n                    text: qtxt,\n                    fsz: 0.35 * this.fontSizePix,\n                    col,\n                    oval: new Oval(0.5 * (xy1[0] + xy2[0]), 0.5 * (xy1[1] + xy2[1]), 0, 0),\n                    rotation\n                };\n                this.points.push(a);\n                this.space.push(this.computeSpacePoint(a));\n                continue;\n            }\n            let ltype = BLineType.Normal;\n            if (bo == 1 && bt == Molecule.BONDTYPE_INCLINED) {\n                ltype = BLineType.Inclined;\n                head = 0.15 * measure.scale();\n            }\n            else if (bo == 1 && bt == Molecule.BONDTYPE_DECLINED) {\n                ltype = BLineType.Declined;\n                head = 0.15 * measure.scale();\n            }\n            else if (bt == Molecule.BONDTYPE_UNKNOWN) {\n                ltype = BLineType.Unknown;\n                head = 0.2 * measure.scale();\n            }\n            else if (bo == 0) {\n                if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                    ltype = BLineType.DotDir;\n                else\n                    ltype = BLineType.Dotted;\n            }\n            else if ((bo == 2 || bo == 3 || bo == 4) && (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)) {\n                ltype = bo == 2 ? BLineType.IncDouble : bo == 3 ? BLineType.IncTriple : BLineType.IncQuadruple;\n                head = (bo == 2 ? 0.20 : 0.25) * measure.scale();\n            }\n            if (bo == 0) {\n                let dx = xy2[0] - xy1[0], dy = xy2[1] - xy1[1];\n                let d = norm_xy(dx, dy), invD = 1 / d;\n                let ox = 0.5 * dx * invD * this.bondSepPix, oy = 0.5 * dy * invD * this.bondSepPix;\n                if (mol.atomAdjCount(bfr) > 1) {\n                    xy1[0] += ox;\n                    xy1[1] += oy;\n                }\n                if (mol.atomAdjCount(bto) > 1) {\n                    xy2[0] -= ox;\n                    xy2[1] -= oy;\n                }\n            }\n            if (bo != 1 && bt == Molecule.BONDTYPE_DECLINED)\n                [xy1, xy2] = [xy2, xy1];\n            if (bo > 1 && (bt == Molecule.BONDTYPE_NORMAL || bt == Molecule.BONDTYPE_UNKNOWN)) {\n                let oxy = this.orthogonalDelta(xy1[0], xy1[1], xy2[0], xy2[1], this.bondSepPix);\n                let ext1 = 1, ext2 = 1;\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    ext1 = Math.min(ext1, this.backOffAtom(bfr, lx1, ly1, lx2, ly2, minDist));\n                }\n                xy1 = this.shrinkBond(xy1[0], xy1[1], xy2[0], xy2[1], ext1);\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    ext2 = Math.min(ext2, this.backOffAtom(bto, lx2, ly2, lx1, ly1, minDist));\n                }\n                xy2 = this.shrinkBond(xy2[0], xy2[1], xy1[0], xy1[1], ext2);\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    let b = {\n                        bnum: n,\n                        bfr,\n                        bto,\n                        type: ltype,\n                        line: new Line(lx1, ly1, lx2, ly2),\n                        size: sz,\n                        head,\n                        col\n                    };\n                    this.lines.push(b);\n                    this.space.push(this.computeSpaceLine(b));\n                }\n            }\n            else {\n                let b = {\n                    bnum: n,\n                    bfr,\n                    bto,\n                    type: ltype,\n                    line: new Line(xy1[0], xy1[1], xy2[0], xy2[1]),\n                    size: sz,\n                    head,\n                    col\n                };\n                this.lines.push(b);\n                this.space.push(this.computeSpaceLine(b));\n            }\n        }\n        let rings = this.orderedRingList();\n        for (let i = 0; i < rings.length; i++) {\n            for (let j = 0; j < rings[i].length; j++) {\n                let k = mol.findBond(rings[i][j], rings[i][j < rings[i].length - 1 ? j + 1 : 0]);\n                if (bdbl[k - 1]) {\n                    this.processDoubleBond(k, rings[i]);\n                    bdbl[k - 1] = false;\n                }\n            }\n        }\n        for (let i = 1; i <= mol.numBonds; i++)\n            if (bdbl[i - 1])\n                this.processDoubleBond(i, this.priorityDoubleSubstit(i));\n        let hcount = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            hcount[n - 1] = this.points[n - 1].text == null ? 0 : mol.atomHydrogens(n);\n        for (let n = 0; n < mol.numAtoms; n++)\n            if (hcount[n] > 0 && this.placeHydrogen(n, hcount[n], true))\n                hcount[n] = 0;\n        for (let n = 0; n < mol.numAtoms; n++)\n            if (hcount[n] > 0)\n                this.placeHydrogen(n, hcount[n], false);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) {\n                let isostr = mol.atomIsotope(n).toString();\n                let col = policy.data.atomCols[mol.atomicNumber(n)];\n                this.placeAdjunct(n, isostr, this.fontSizePix * 0.6, col, 150 * DEGRAD);\n            }\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let str = '';\n            let chg = this.atomCharge[n - 1];\n            if (chg == -1)\n                str = '-';\n            else if (chg == 1)\n                str = '+';\n            else if (chg < -1)\n                str = Math.abs(chg) + '-';\n            else if (chg > 1)\n                str = chg + '+';\n            for (let i = this.atomUnpaired[n - 1]; i > 0; i--)\n                str += '.';\n            if (str.length == 0)\n                continue;\n            let col = policy.data.atomCols[mol.atomicNumber(n)];\n            this.placeAdjunct(n, str, str.length == 1 ? 0.8 * this.fontSizePix : 0.6 * this.fontSizePix, col, 30 * DEGRAD);\n        }\n        for (let n = 0; n < effects.atomDecoText.length; n++) {\n            let txt = effects.atomDecoText[n];\n            if (!txt)\n                continue;\n            this.annotateAtom(n + 1, txt, effects.atomDecoCol[n], effects.atomDecoSize[n] * this.scale * ArrangeMolecule.FONT_CORRECT);\n        }\n        for (let n = 0; n < effects.bondDecoText.length; n++) {\n            let txt = effects.bondDecoText[n];\n            if (!txt)\n                continue;\n            this.annotateBond(n + 1, txt, effects.bondDecoCol[n], effects.bondDecoSize[n] * this.scale * ArrangeMolecule.FONT_CORRECT);\n        }\n        for (let n = 0; n < Math.min(effects.atomCircleSz.length, mol.numAtoms); n++)\n            if (effects.atomCircleSz[n] > 0) {\n                let dw = effects.atomCircleSz[n] * this.scale;\n                let a = this.points[n];\n                let box = new Box(a.oval.cx - dw, a.oval.cy - dw, 2 * dw, 2 * dw);\n                let spc = {\n                    anum: 0,\n                    bnum: 0,\n                    box,\n                    px: [box.minX(), box.maxX(), box.maxX(), box.minX()],\n                    py: [box.minY(), box.minY(), box.maxY(), box.maxY()]\n                };\n                this.space.push(spc);\n            }\n        if (this.artifacts != null) {\n            for (let path of this.artifacts.getResPaths()) {\n                this.createCurvedPath(path.atoms, this.artifactFract.get(path), 0);\n                this.delocalisedAnnotation(path.atoms, this.artifactCharge.get(path), this.artifactUnpaired.get(path));\n            }\n            for (let ring of this.artifacts.getResRings()) {\n                this.createCircularRing(ring.atoms);\n                this.delocalisedAnnotation(ring.atoms, this.artifactCharge.get(ring), this.artifactUnpaired.get(ring));\n            }\n            for (let arene of this.artifacts.getArenes()) {\n                let isRing = arene.atoms.length > 2;\n                if (isRing)\n                    for (let n = 0; n < arene.atoms.length; n++) {\n                        let nn = n < arene.atoms.length - 1 ? n + 1 : 0;\n                        if (mol.findBond(arene.atoms[n], arene.atoms[nn]) == 0) {\n                            isRing = false;\n                            break;\n                        }\n                    }\n                let alkeneLike = arene.atoms.length == 2;\n                this.createBondCentroid(arene.centre, arene.atoms);\n                if (!alkeneLike) {\n                    if (isRing)\n                        this.createCircularRing(arene.atoms);\n                    else\n                        this.createCurvedPath(arene.atoms, false, arene.centre);\n                }\n                this.delocalisedAnnotation(arene.atoms, this.artifactCharge.get(arene), this.artifactUnpaired.get(arene));\n            }\n        }\n        let polymers = new PolymerBlock(mol);\n        for (let id of polymers.getIDList())\n            this.processPolymerUnit(polymers.getUnit(id), polymers.getUnits());\n    }\n    numPoints() { return this.points.length; }\n    getPoint(idx) { return this.points[idx]; }\n    getPoints() { return this.points; }\n    numLines() { return this.lines.length; }\n    getLine(idx) { return this.lines[idx]; }\n    getLines() { return this.lines; }\n    numRings() { return this.rings.length; }\n    getRing(idx) { return this.rings[idx]; }\n    getRings() { return this.rings; }\n    numPaths() { return this.paths.length; }\n    getPath(idx) { return this.paths[idx]; }\n    getPaths() { return this.paths; }\n    numSpace() { return this.space.length; }\n    getSpace(idx) { return this.space[idx]; }\n    getSpaces() { return this.space; }\n    offsetEverything(dx, dy) {\n        for (let a of this.points)\n            a.oval.offsetBy(dx, dy);\n        for (let b of this.lines)\n            b.line.offsetBy(dx, dy);\n        for (let r of this.rings) {\n            r.cx += dx;\n            r.cy += dy;\n        }\n        for (let p of this.paths) {\n            Vec.addTo(p.px, dx);\n            Vec.addTo(p.py, dy);\n        }\n        for (let spc of this.space) {\n            spc.box.offsetBy(dx, dy);\n            Vec.addTo(spc.px, dx);\n            Vec.addTo(spc.py, dy);\n        }\n    }\n    offsetOrigin() {\n        let bounds = this.determineBoundary();\n        if (bounds[0] != 0 || bounds[1] != 0)\n            this.offsetEverything(-bounds[0], -bounds[1]);\n    }\n    scaleEverything(scaleBy) {\n        if (scaleBy == 1)\n            return;\n        this.scale *= scaleBy;\n        for (let a of this.points) {\n            a.oval.scaleBy(scaleBy);\n            a.fsz *= scaleBy;\n        }\n        for (let b of this.lines) {\n            b.line.scaleBy(scaleBy);\n            b.size *= scaleBy;\n            b.head *= scaleBy;\n        }\n        for (let r of this.rings) {\n            r.cx *= scaleBy;\n            r.cy *= scaleBy;\n            r.rw *= scaleBy;\n            r.rh *= scaleBy;\n            r.size *= scaleBy;\n        }\n        for (let p of this.paths) {\n            Vec.mulBy(p.px, scaleBy);\n            Vec.mulBy(p.py, scaleBy);\n            p.size *= scaleBy;\n        }\n        for (let spc of this.space) {\n            spc.box.scaleBy(scaleBy);\n            Vec.mulBy(spc.px, scaleBy);\n            Vec.mulBy(spc.py, scaleBy);\n        }\n    }\n    determineBoundary(padding) {\n        if (padding == null)\n            padding = 0;\n        if (this.space.length == 0)\n            return [0, 0, 2 * padding, 2 * padding];\n        let bounds = Vec.numberArray(0, 4);\n        let spc = this.space[0];\n        bounds[0] = spc.box.x;\n        bounds[1] = spc.box.y;\n        bounds[2] = spc.box.x + spc.box.w;\n        bounds[3] = spc.box.y + spc.box.h;\n        for (let n = this.space.length - 1; n > 0; n--) {\n            spc = this.space[n];\n            bounds[0] = Math.min(bounds[0], spc.box.x);\n            bounds[1] = Math.min(bounds[1], spc.box.y);\n            bounds[2] = Math.max(bounds[2], spc.box.x + spc.box.w);\n            bounds[3] = Math.max(bounds[3], spc.box.y + spc.box.h);\n        }\n        return bounds;\n    }\n    determineBoundaryBox() {\n        let [x1, y1, x2, y2] = this.determineBoundary();\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    squeezeInto(x, y, w, h, padding) {\n        if (padding != null && padding > 0) {\n            x += padding;\n            y += padding;\n            w -= 2 * padding;\n            h -= 2 * padding;\n        }\n        let bounds = this.determineBoundary(0);\n        let bw = bounds[2] - bounds[0], bh = bounds[3] - bounds[1];\n        if (bw > w || bh > h) {\n            let downScale = 1;\n            if (bw > w)\n                downScale = w / bw;\n            if (bh > h)\n                downScale = Math.min(downScale, h / bh);\n            this.scaleEverything(downScale);\n            Vec.mulBy(bounds, downScale);\n        }\n        this.offsetEverything(x - bounds[0] + 0.5 * (w - bounds[2] + bounds[0]), y - bounds[1] + 0.5 * (h - bounds[3] + bounds[1]));\n    }\n    limitBounds(w, h) {\n        let bounds = this.determineBoundary(0);\n        if (bounds[0] == bounds[2] && bounds[1] == bounds[3])\n            return;\n        let scale = Math.min(1, Math.min(w / (bounds[2] - bounds[0]), h / (bounds[3] - bounds[1])));\n        this.offsetEverything(-bounds[0], -bounds[1]);\n        this.scaleEverything(scale);\n    }\n    monochromate(col) {\n        for (let a of this.points)\n            a.col = col;\n        for (let b of this.lines)\n            b.col = col;\n    }\n    spatialCongestion(x, y, thresh) {\n        if (thresh == null)\n            thresh = 0.001;\n        let congest = 0;\n        for (let n = 0; n < this.points.length; n++) {\n            let a = this.points[n];\n            if (a == null)\n                continue;\n            let dx = a.oval.cx - x, dy = a.oval.cy - y;\n            congest += 1 / (dx * dx + dy * dy + thresh);\n        }\n        return congest;\n    }\n    clone() {\n        let dup = new ArrangeMolecule(this.mol, this.measure, this.policy, this.effects);\n        dup.scale = this.scale;\n        dup.bondSepPix = this.bondSepPix;\n        dup.lineSizePix = this.lineSizePix;\n        dup.fontSizePix = this.fontSizePix;\n        dup.ymul = this.ymul;\n        for (let a of this.points)\n            dup.points.push(clone(a));\n        for (let b of this.lines)\n            dup.lines.push(clone(b));\n        for (let s of this.space)\n            dup.space.push(clone(s));\n        return dup;\n    }\n    setupBondOrders() {\n        const mol = this.mol;\n        for (let n = 0; n < mol.numBonds; n++)\n            this.bondOrder[n] = mol.bondOrder(n + 1);\n        for (let n = 0; n < mol.numAtoms; n++) {\n            this.atomCharge[n] = mol.atomCharge(n + 1);\n            this.atomUnpaired[n] = mol.atomUnpaired(n + 1);\n        }\n        let delocalise = (obj, atoms) => {\n            let charge = 0, unpaired = 0;\n            for (let a of atoms) {\n                charge += this.atomCharge[a - 1];\n                unpaired += this.atomUnpaired[a - 1];\n                this.atomCharge[a - 1] = this.atomUnpaired[a - 1] = 0;\n            }\n            this.artifactCharge.set(obj, charge);\n            this.artifactUnpaired.set(obj, unpaired);\n            for (let a1 of atoms)\n                for (let a2 of mol.atomAdjList(a1))\n                    if (!atoms.includes(a2)) {\n                        let b = mol.findBond(a1, a2);\n                        if (this.bondOrder[b - 1] >= 0)\n                            this.bondOrder[b - 1] = 1;\n                    }\n        };\n        if (this.artifacts == null)\n            return;\n        for (let path of this.artifacts.getResPaths()) {\n            let charge = 0, unpaired = 0, orders = 0;\n            for (let n = 0; n < path.atoms.length; n++) {\n                charge += mol.atomCharge(path.atoms[n]);\n                unpaired += mol.atomUnpaired(path.atoms[n]);\n                let b = mol.findBond(path.atoms[n], path.atoms[n < path.atoms.length - 1 ? n + 1 : 0]);\n                if (b > 0)\n                    orders += mol.bondOrder(b);\n            }\n            let fractional = (2 * orders - charge + unpaired) / path.atoms.length < 1;\n            this.artifactFract.set(path, fractional);\n            for (let n = 0; n < path.atoms.length - 1; n++) {\n                let b = mol.findBond(path.atoms[n], path.atoms[n + 1]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = fractional ? -1 : 1;\n            }\n            delocalise(path, path.atoms);\n        }\n        for (let ring of this.artifacts.getResRings()) {\n            for (let n = 0; n < ring.atoms.length; n++) {\n                let b = mol.findBond(ring.atoms[n], ring.atoms[n < ring.atoms.length - 1 ? n + 1 : 0]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = 1;\n            }\n            delocalise(ring, ring.atoms);\n        }\n        for (let arene of this.artifacts.getArenes()) {\n            let alkeneLike = arene.atoms.length == 2;\n            for (let n = 0; n < arene.atoms.length; n++) {\n                if (!alkeneLike) {\n                    let b = mol.findBond(arene.atoms[n], arene.atoms[n < arene.atoms.length - 1 ? n + 1 : 0]);\n                    if (b > 0)\n                        this.bondOrder[b - 1] = 1;\n                }\n                let b = mol.findBond(arene.centre, arene.atoms[n]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = -1;\n            }\n            delocalise(arene, arene.atoms);\n        }\n    }\n    placeAdjunct(atom, str, fsz, col, angdir) {\n        let wad = this.measure.measureText(str, fsz);\n        let a = this.points[atom - 1];\n        let cx = a.oval.cx, cy = a.oval.cy, rw = 0.55 * wad[0], rh = 0.55 * wad[1];\n        if (str == '..') {\n            let zeroBonds = this.mol.atomAdjBonds(atom).filter((b) => this.mol.bondOrder(b) == 0);\n            if (zeroBonds.length == 1) {\n                let zpt = this.getPoint(this.mol.bondOther(zeroBonds[0], atom) - 1);\n                let dx = zpt.oval.cx - cx, dy = zpt.oval.cy - cy, inv = 1 / norm_xy(dx, dy);\n                let r = fsz * 0.15;\n                let ox = dy * inv * 2.5 * r, oy = -dx * inv * 2.5 * r;\n                let ext = 1.2 * (rw + rh) * inv;\n                [dx, dy] = [dx * ext, dy * ext];\n                this.points.push({ anum: 0, text: '.', fsz, col, oval: new Oval(cx + dx + ox, cy + dy + oy, r, r) });\n                this.points.push({ anum: 0, text: '.', fsz, col, oval: new Oval(cx + dx - ox, cy + dy - oy, r, r) });\n                return;\n            }\n        }\n        let bestScore = 0, bestDX = 0, bestDY = 0;\n        let px = Vec.numberArray(0, 4), py = Vec.numberArray(0, 4);\n        let angThresh = 10;\n        let shorted = false;\n        for (let ext = 0.5 * (a.oval.rw + a.oval.rh); !shorted && ext < 1.5 * this.measure.scale(); ext += 0.1 * this.measure.scale()) {\n            const DELTA = 5 * DEGRAD;\n            for (let d = 0; !shorted && d < Math.PI - 0.0001; d += DELTA)\n                for (let s = -1; s <= 1; s += 2) {\n                    let dang = d * s + (s > 0 ? DELTA : 0), ang = angdir + dang;\n                    let dx = ext * Math.cos(ang), dy = ext * Math.sin(ang) * -this.ymul;\n                    let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                    px[0] = x1;\n                    py[0] = y1;\n                    px[1] = x2;\n                    py[1] = y1;\n                    px[2] = x2;\n                    py[2] = y2;\n                    px[3] = x1;\n                    py[3] = y2;\n                    let viol = this.countPolyViolations(px, py, null, false);\n                    let score = 10 * viol + Math.abs(dang) + 10 * ext;\n                    let shortCircuit = viol == 0 && Math.abs(dang) < (angThresh + 1) * DEGRAD;\n                    if (bestScore == 0 || shortCircuit || score < bestScore) {\n                        bestScore = score;\n                        bestDX = dx;\n                        bestDY = dy;\n                    }\n                    if (shortCircuit) {\n                        shorted = true;\n                        break;\n                    }\n                }\n            angThresh += 5;\n        }\n        a =\n            {\n                anum: 0,\n                text: str,\n                fsz,\n                col,\n                oval: new Oval(cx + bestDX, cy + bestDY, rw, rh)\n            };\n        this.points.push(a);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(a.oval.cx - rw, a.oval.cy - rh, 2 * rw, 2 * rh),\n            px: [a.oval.cx - rw, a.oval.cx + rw, a.oval.cx + rw, a.oval.cx - rw],\n            py: [a.oval.cy - rh, a.oval.cy - rh, a.oval.cy + rh, a.oval.cy + rh]\n        };\n        this.space.push(spc);\n    }\n    processLabel(anum) {\n        let ax = this.mol.atomX(anum), ay = this.mol.atomY(anum);\n        let left = 0, right = 0;\n        let adj = this.mol.atomAdjList(anum);\n        for (let n = 0; n < adj.length; n++) {\n            let theta = Math.atan2(this.mol.atomY(adj[n]) - ay, this.mol.atomX(adj[n]) - ax) * RADDEG;\n            if (theta >= -15 && theta <= 15)\n                right += 3;\n            else if (theta >= -85 && theta <= 85)\n                right++;\n            else if (theta > 85 && theta < 95) { }\n            else if (theta < -85 && theta > -95) { }\n            else if (theta > 165 || theta < -165)\n                left += 3;\n            else\n                left++;\n        }\n        let label = this.mol.atomElement(anum);\n        let ibar = label.indexOf('|'), ibrace = label.indexOf('{');\n        let side = 0;\n        if (left == 0 && right == 0 && ibar < 0 && ibrace < 0) { }\n        else if (left < right)\n            side = -1;\n        else if (right < left)\n            side = 1;\n        else {\n            let score1 = CoordUtil.congestionPoint(this.mol, ax - 1, ay);\n            let score2 = CoordUtil.congestionPoint(this.mol, ax + 1, ay);\n            if (score1 < 0.5 * score2)\n                side = -1;\n            else\n                side = 1;\n        }\n        let chunks = null;\n        let position = null;\n        let primary = null;\n        let refchunk = 0;\n        if (ibar < 0 && ibrace < 0) {\n            if (side == 0)\n                chunks = [label];\n            else if (side < 0) {\n                chunks = [label.substring(0, label.length - 1), label.substring(label.length - 1)];\n                refchunk = 1;\n            }\n            else\n                chunks = [label.substring(0, 1), label.substring(1)];\n        }\n        else {\n            let bits = [];\n            let bpos = [];\n            let bpri = [];\n            let blocks = label.split('|');\n            if (side < 0)\n                blocks = Vec.reverse(blocks);\n            let buff = '';\n            for (let i = 0; i < blocks.length; i++) {\n                let isPrimary = (side >= 0 && i == 0) || (side < 0 && i == blocks.length - 1);\n                if (side < 0 && refchunk == 0 && i == blocks.length - 1)\n                    refchunk = bits.length;\n                let pos = 0;\n                buff = '';\n                for (let j = 0; j < blocks[i].length; j++) {\n                    let ch = blocks[i].charAt(j);\n                    if (ch == '{' || ch == '}') {\n                        if (buff.length > 0) {\n                            bits.push(buff.toString());\n                            bpos.push(pos);\n                            bpri.push(isPrimary);\n                        }\n                        buff = '';\n                        pos = ch == '{' ? -1 : 0;\n                    }\n                    else if (ch == '^' && pos == -1 && buff.length == 0)\n                        pos = 1;\n                    else\n                        buff += ch;\n                }\n                if (buff.length > 0) {\n                    bits.push(buff.toString());\n                    bpos.push(pos);\n                    bpri.push(isPrimary);\n                }\n            }\n            chunks = bits;\n            position = bpos;\n            primary = bpri;\n            while (refchunk < chunks.length - 1 && position[refchunk] != 0)\n                refchunk++;\n        }\n        let PADDING = 1.1;\n        let SSFRACT = 0.6;\n        let chunkw = Vec.numberArray(0, chunks.length);\n        let tw = 0;\n        for (let n = 0; n < chunks.length; n++) {\n            chunkw[n] = this.measure.measureText(chunks[n], this.fontSizePix)[0];\n            if (position != null && position[n] != 0)\n                chunkw[n] *= SSFRACT;\n            tw += chunkw[n];\n        }\n        let x = this.measure.angToX(ax), y = this.measure.angToY(ay);\n        for (let n = 0; n < refchunk; n++)\n            x -= chunkw[n];\n        x -= 0.5 * chunkw[refchunk];\n        for (let n = 0; n < chunks.length; n++) {\n            let a = {\n                anum: (n == refchunk || (primary != null && primary[n])) ? anum : 0,\n                text: chunks[n],\n                fsz: this.fontSizePix,\n                col: this.policy.data.atomCols[this.mol.atomicNumber(anum)],\n                oval: new Oval(x + 0.5 * chunkw[n], y, 0.5 * chunkw[n] * PADDING, 0.5 * this.fontSizePix * PADDING)\n            };\n            if (position != null && position[n] != 0) {\n                a.fsz *= SSFRACT;\n                if (position[n] < 0)\n                    a.oval.cy += a.fsz * 0.7 * (this.measure.yIsUp() ? -1 : 1);\n                else\n                    a.oval.cy -= a.fsz * 0.3 * (this.measure.yIsUp() ? -1 : 1);\n            }\n            if (n == refchunk) {\n                this.points[anum - 1] = a;\n                this.space[anum - 1] = this.computeSpacePoint(a);\n            }\n            else {\n                this.points.push(a);\n                this.space.push(this.computeSpacePoint(a));\n            }\n            x += chunkw[n];\n        }\n    }\n    backOffAtom(atom, x, y, fx, fy, minDist) {\n        if (x == fx && y == fy)\n            return 1;\n        let dx = x - fx, dy = y - fy, dist = norm_xy(dx, dy), inv = 1.0 / dist;\n        const bump = 0.1 * this.measure.scale();\n        let xbump = x + 2 * bump * dx * inv, ybump = y + 2 * bump * dy * inv;\n        let ext = dist;\n        let active = false;\n        for (let spc of this.space)\n            if (spc.anum == atom) {\n                const sz = spc.px.length;\n                if (sz == 0)\n                    continue;\n                for (let n = 0; n < sz; n++) {\n                    let nn = n < sz - 1 ? n + 1 : 0;\n                    let x1 = spc.px[n], y1 = spc.py[n], x2 = spc.px[nn], y2 = spc.py[nn];\n                    if (!GeomUtil.doLineSegsIntersect(xbump, ybump, fx, fy, x1, y1, x2, y2))\n                        continue;\n                    let xy = GeomUtil.lineIntersect(x, y, fx, fy, x1, y1, x2, y2);\n                    active = true;\n                    ext = Math.min(ext, norm_xy(xy[0] - fx, xy[1] - fy));\n                }\n            }\n        if (active) {\n            ext = Math.max(minDist, ext - bump);\n            return ext / dist;\n        }\n        else\n            return 1;\n    }\n    backOffAtomDelta(atom, x, y, fx, fy, minDist) {\n        let ext = this.backOffAtom(atom, x, y, fx, fy, minDist);\n        if (ext >= 1)\n            return null;\n        ext = 1 - ext;\n        let dx = (fx - x) * ext, dy = (fy - y) * ext;\n        return [norm2_xy(dx, dy), dx, dy];\n    }\n    shrinkBond(x, y, fx, fy, ext) {\n        if (ext == 1)\n            return [x, y];\n        let dx = x - fx, dy = y - fy;\n        return [fx + ext * dx, fy + ext * dy];\n    }\n    ensureMinimumBondLength(xy1, xy2, x1, y1, x2, y2, minDist) {\n        let dx = xy2[0] - xy1[0], dy = xy2[1] - xy1[1];\n        let dsq = norm2_xy(dx, dy);\n        minDist = Math.min(minDist, norm_xy(x2 - x1, y2 - y1));\n        if (dsq >= sqr(minDist - 0.0001))\n            return;\n        let d12 = Math.sqrt(dsq), d1 = norm_xy(xy1[0] - x1, xy1[1] - y1), d2 = norm_xy(x2 - xy2[0], y2 - xy2[1]);\n        let mag = 1 - minDist / d12, invD12 = 1.0 / (d1 + d2), mag1 = d1 * mag * invD12, mag2 = d2 * mag * invD12;\n        xy1[0] -= dx * mag1;\n        xy1[1] -= dy * mag1;\n        xy2[0] += dx * mag2;\n        xy2[1] += dy * mag2;\n    }\n    orderedRingList() {\n        let rings = [];\n        let SIZE_ORDER = [6, 5, 7, 4, 3];\n        for (let i = 0; i < SIZE_ORDER.length; i++) {\n            let nring = this.mol.findRingsOfSize(SIZE_ORDER[i]);\n            for (let j = 0; j < nring.length; j++)\n                rings.push(nring[j]);\n        }\n        let ringsz = rings.length;\n        let ringbusy = Vec.numberArray(0, this.mol.numAtoms);\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[n];\n            for (let i = 0; i < r.length; i++)\n                ringbusy[r[i] - 1]++;\n        }\n        let ringscore = Vec.numberArray(0, ringsz);\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[n];\n            for (let i = 0; i < r.length; i++)\n                ringscore[n] += ringbusy[r[i] - 1];\n        }\n        let ringorder = Vec.idxSort(ringscore);\n        let resbcount = Vec.numberArray(0, ringsz), maxbcount = 0;\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[ringorder[n]];\n            for (let i = 0; i < r.length; i++) {\n                let j = this.mol.findBond(r[i], r[i + 1 < r.length ? i + 1 : 0]);\n                if (this.mol.bondOrder(j) == 2)\n                    resbcount[n]++;\n            }\n            maxbcount = Math.max(maxbcount, resbcount[n]);\n        }\n        let pos = 0, ret = [];\n        for (let sz = maxbcount; sz >= 0; sz--) {\n            for (let n = 0; n < ringsz; n++)\n                if (resbcount[n] == sz)\n                    ret.push(rings[ringorder[n]]);\n        }\n        return ret;\n    }\n    orthogonalDelta(x1, y1, x2, y2, d) {\n        let ox = y1 - y2, oy = x2 - x1, dsq = norm2_xy(ox, oy);\n        let sc = dsq > 0 ? d / Math.sqrt(dsq) : 1;\n        return [ox * sc, oy * sc];\n    }\n    processDoubleBond(idx, priority) {\n        let bfr = this.mol.bondFrom(idx), bto = this.mol.bondTo(idx);\n        let nfr = this.mol.atomAdjList(bfr), nto = this.mol.atomAdjList(bto);\n        let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n        let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n        let oxy = this.orthogonalDelta(x1, y1, x2, y2, this.bondSepPix);\n        const minDist = MINBOND_EXOTIC * this.measure.scale();\n        let dx = x2 - x1, dy = y2 - y1, btheta = Math.atan2(dy, dx);\n        let countFLeft = 0, countFRight = 0, countTLeft = 0, countTRight = 0;\n        let idxFLeft = 0, idxFRight = 0, idxTLeft = 0, idxTRight = 0;\n        let noshift = false;\n        for (let n = 0; n < nfr.length; n++)\n            if (nfr[n] != bto) {\n                let bo = this.mol.bondOrder(this.mol.findBond(bfr, nfr[n]));\n                if (bo == 0)\n                    continue;\n                if (bo > 1) {\n                    noshift = true;\n                    break;\n                }\n                let ispri = false;\n                for (let i = 0; i < (priority == null ? 0 : priority.length); i++)\n                    if (priority[i] == nfr[n])\n                        ispri = true;\n                let theta = angleDiff(Math.atan2(this.points[nfr[n] - 1].oval.cy - y1, this.points[nfr[n] - 1].oval.cx - x1), btheta);\n                if (Math.abs(theta) * RADDEG > 175) {\n                    noshift = true;\n                    break;\n                }\n                if (theta > 0) {\n                    if (ispri)\n                        countFLeft++;\n                    idxFLeft = nfr[n];\n                }\n                else {\n                    if (ispri)\n                        countFRight++;\n                    idxFRight = nfr[n];\n                }\n            }\n        for (let n = 0; n < nto.length; n++)\n            if (nto[n] != bfr) {\n                let bo = this.mol.bondOrder(this.mol.findBond(bto, nto[n]));\n                if (bo == 0)\n                    continue;\n                if (bo > 1) {\n                    noshift = true;\n                    break;\n                }\n                let ispri = false;\n                for (let i = 0; i < (priority == null ? 0 : priority.length); i++)\n                    if (priority[i] == nto[n])\n                        ispri = true;\n                let theta = angleDiff(Math.atan2(this.points[nto[n] - 1].oval.cy - y2, this.points[nto[n] - 1].oval.cx - x2), btheta);\n                if (Math.abs(theta) * RADDEG > 175) {\n                    noshift = true;\n                    break;\n                }\n                if (theta > 0) {\n                    if (ispri)\n                        countTLeft++;\n                    idxTLeft = nto[n];\n                }\n                else {\n                    if (ispri)\n                        countTRight++;\n                    idxTRight = nto[n];\n                }\n            }\n        let side = 0;\n        if (noshift || countFLeft > 1 || countFRight > 1 || countTLeft > 1 || countTRight > 1) { }\n        else if (countFLeft > 0 && countFRight > 0) { }\n        else if (countTLeft > 0 && countTRight > 0) { }\n        else if (countFLeft > 0 || countTLeft > 0)\n            side = 1;\n        else if (countFRight > 0 || countTRight > 0)\n            side = -1;\n        let sz = this.lineSizePix;\n        let ax1 = x1, ay1 = y1, ax2 = x2, ay2 = y2;\n        let bx1 = 0, by1 = 0, bx2 = 0, by2 = 0;\n        if (side == 0) {\n            ax1 = x1 + 0.5 * oxy[0];\n            ay1 = y1 + 0.5 * oxy[1];\n            ax2 = x2 + 0.5 * oxy[0];\n            ay2 = y2 + 0.5 * oxy[1];\n            bx1 = x1 - 0.5 * oxy[0];\n            by1 = y1 - 0.5 * oxy[1];\n            bx2 = x2 - 0.5 * oxy[0];\n            by2 = y2 - 0.5 * oxy[1];\n        }\n        else if (side > 0) {\n            bx1 = x1 + oxy[0];\n            by1 = y1 + oxy[1];\n            bx2 = x2 + oxy[0];\n            by2 = y2 + oxy[1];\n            if (nfr.length > 1 && this.points[bfr - 1].text == null) {\n                bx1 += oxy[1];\n                by1 -= oxy[0];\n            }\n            if (nto.length > 1 && this.points[bto - 1].text == null) {\n                bx2 -= oxy[1];\n                by2 += oxy[0];\n            }\n        }\n        else if (side < 0) {\n            bx1 = x1 - oxy[0];\n            by1 = y1 - oxy[1];\n            bx2 = x2 - oxy[0];\n            by2 = y2 - oxy[1];\n            if (nfr.length > 1 && this.points[bfr - 1].text == null) {\n                bx1 += oxy[1];\n                by1 -= oxy[0];\n            }\n            if (nto.length > 1 && this.points[bto - 1].text == null) {\n                bx2 -= oxy[1];\n                by2 += oxy[0];\n            }\n        }\n        if (side != 0) {\n            if (this.mol.atomElement(bfr).length <= 2 && this.mol.atomAdjCount(bfr) == 1 && this.points[bfr - 1].text != null) {\n                this.bumpAtomPosition(bfr, 0.5 * oxy[0] * side, 0.5 * oxy[1] * side);\n            }\n            if (this.mol.atomElement(bto).length <= 2 && this.mol.atomAdjCount(bto) == 1 && this.points[bto - 1].text != null) {\n                this.bumpAtomPosition(bto, 0.5 * oxy[0] * side, 0.5 * oxy[1] * side);\n            }\n        }\n        let delta1 = this.backOffAtomDelta(bfr, ax1, ay1, ax2, ay2, minDist), delta2 = this.backOffAtomDelta(bfr, bx1, by1, bx2, by2, minDist);\n        if (delta1 != null || delta2 != null) {\n            let delta = (delta1 == null ? 0 : delta1[0]) > (delta2 == null ? 0 : delta2[0]) ? delta1 : delta2;\n            ax1 += delta[1];\n            ay1 += delta[2];\n            bx1 += delta[1];\n            by1 += delta[2];\n        }\n        let delta3 = this.backOffAtomDelta(bto, ax2, ay2, ax1, ay1, minDist), delta4 = this.backOffAtomDelta(bto, bx2, by2, bx1, by1, minDist);\n        if (delta3 != null || delta4 != null) {\n            let delta = (delta3 == null ? 0 : delta3[0]) > (delta4 == null ? 0 : delta4[0]) ? delta3 : delta4;\n            ax2 += delta[1];\n            ay2 += delta[2];\n            bx2 += delta[1];\n            by2 += delta[2];\n        }\n        if (side == 0 && !noshift) {\n            let xy = null;\n            if (this.points[bfr - 1].text == null && !this.mol.bondInRing(idx)) {\n                xy = this.adjustBondPosition(idxFLeft, bfr, ax1, ay1, ax2, ay2);\n                if (xy != null) {\n                    ax1 = xy[0];\n                    ay1 = xy[1];\n                }\n                xy = this.adjustBondPosition(idxFRight, bfr, bx1, by1, bx2, by2);\n                if (xy != null) {\n                    bx1 = xy[0];\n                    by1 = xy[1];\n                }\n            }\n            if (this.points[bto - 1].text == null && !this.mol.bondInRing(idx)) {\n                xy = this.adjustBondPosition(idxTLeft, bto, ax2, ay2, ax1, ay1);\n                if (xy != null) {\n                    ax2 = xy[0];\n                    ay2 = xy[1];\n                }\n                xy = this.adjustBondPosition(idxTRight, bto, bx2, by2, bx1, by1);\n                if (xy != null) {\n                    bx2 = xy[0];\n                    by2 = xy[1];\n                }\n            }\n        }\n        let lt = this.mol.bondType(idx) == Molecule.BONDTYPE_UNKNOWN ? BLineType.Unknown : BLineType.Normal;\n        let head = lt == BLineType.Unknown ? 0.1 * this.scale : 0;\n        let col = this.effects.colBond[idx];\n        if (!col)\n            col = this.policy.data.foreground;\n        let b1 = {\n            bnum: idx,\n            bfr,\n            bto,\n            type: lt,\n            line: new Line(ax1, ay1, ax2, ay2),\n            size: sz,\n            head,\n            col\n        };\n        let b2 = {\n            bnum: idx,\n            bfr,\n            bto,\n            type: lt,\n            line: new Line(bx1, by1, bx2, by2),\n            size: sz,\n            head,\n            col\n        };\n        this.lines.push(b1);\n        this.lines.push(b2);\n        this.space.push(this.computeSpaceLine(b1));\n        this.space.push(this.computeSpaceLine(b2));\n    }\n    placeHydrogen(idx, hcount, fussy) {\n        let font = FontData.main;\n        const SSFRACT = 0.6;\n        const GLYPH_H = font.getIndex('H');\n        let a = this.points[idx];\n        let emscale = a.fsz * font.INV_UNITS_PER_EM;\n        let sub = hcount >= 2 ? hcount.toString() : '';\n        let outlineX = font.getOutlineX(GLYPH_H), outlineY = font.getOutlineY(GLYPH_H);\n        let firstEMW = font.HORIZ_ADV_X[GLYPH_H], emw = firstEMW;\n        for (let n = 0; n < sub.length; n++) {\n            let ch = sub.charAt(n), g = font.getIndex(ch);\n            if (n == 0) {\n                emw += font.getKerning('H', ch);\n            }\n            else {\n                let chp = sub.charAt(n - 1);\n                emw += font.getKerning(chp, ch) * SSFRACT;\n            }\n            let extraX = font.getOutlineX(g), extraY = font.getOutlineY(g);\n            Vec.addTo(extraX, emw / SSFRACT);\n            Vec.addTo(extraY, (SSFRACT - 1) * font.ASCENT * 1.30);\n            Vec.mulBy(extraX, SSFRACT);\n            Vec.mulBy(extraY, SSFRACT);\n            outlineX = outlineX.concat(extraX);\n            outlineY = outlineY.concat(extraY);\n            emw += font.HORIZ_ADV_X[g] * SSFRACT;\n        }\n        if (sub.length > 0) {\n            let qh = new QuickHull(outlineX, outlineY, 0);\n            outlineX = qh.hullX;\n            outlineY = qh.hullY;\n        }\n        let emdx = -0.5 * firstEMW, emdy = 0.5 * font.ASCENT * font.ASCENT_FUDGE;\n        for (let n = 0; n < outlineX.length; n++) {\n            outlineX[n] = a.oval.cx + (emdx + outlineX[n]) * emscale;\n            outlineY[n] = a.oval.cy + (emdy - outlineY[n]) * emscale * this.ymul;\n        }\n        let dx = 0, dy = 0;\n        let srcWAD = this.measure.measureText(a.text, a.fsz);\n        if (fussy) {\n            let RIGHTLEFT = [0, 1, 2, 3];\n            let LEFTRIGHT = [1, 0, 2, 3];\n            let UPDOWN = [2, 3, 0, 1];\n            let DOWNUP = [3, 2, 0, 1];\n            let quad = RIGHTLEFT, adj = this.mol.atomAdjList(a.anum);\n            if (adj.length == 0) {\n                let LEFTIES = ['O', 'S', 'F', 'Cl', 'Br', 'I'];\n                if (this.mol.atomCharge(a.anum) == 0 && this.mol.atomUnpaired(a.anum) == 0 &&\n                    LEFTIES.indexOf(this.mol.atomElement(a.anum)) >= 0)\n                    quad = LEFTRIGHT;\n                else\n                    quad = RIGHTLEFT;\n            }\n            else {\n                let allLeft = true, allRight = true, allUp = true, allDown = true;\n                const ax = this.mol.atomX(a.anum), ay = this.mol.atomY(a.anum);\n                for (let n = 0; n < adj.length; n++) {\n                    const bx = this.mol.atomX(adj[n]), by = this.mol.atomY(adj[n]);\n                    if (bx > ax + 0.01)\n                        allLeft = false;\n                    if (bx < ax - 0.01)\n                        allRight = false;\n                    if (by < ay - 0.01)\n                        allUp = false;\n                    if (by > ay + 0.01)\n                        allDown = false;\n                }\n                if (allLeft) { }\n                else if (allRight)\n                    quad = LEFTRIGHT;\n                else if (allUp)\n                    quad = DOWNUP;\n                else if (allDown)\n                    quad = UPDOWN;\n            }\n            for (let n = 0; n < 4; n++) {\n                let tx = 0, ty = 0;\n                if (quad[n] == 0)\n                    tx = 0.5 * srcWAD[0] + 0.5 * firstEMW * emscale;\n                else if (quad[n] == 1)\n                    tx = -0.5 * srcWAD[0] - (emw - 0.5 * firstEMW) * emscale;\n                else if (quad[n] == 2)\n                    ty = (1.1 * srcWAD[1] + 0.5 * srcWAD[2]) * -this.ymul;\n                else if (quad[n] == 3)\n                    ty = (1.1 * srcWAD[1] + 0.5 * srcWAD[2]) * this.ymul;\n                Vec.addTo(outlineX, tx);\n                Vec.addTo(outlineY, ty);\n                let viol = this.countPolyViolations(outlineX, outlineY, null, true);\n                Vec.addTo(outlineX, -tx);\n                Vec.addTo(outlineY, -ty);\n                if (viol == 0) {\n                    dx = tx;\n                    dy = ty;\n                    break;\n                }\n            }\n            if (dx == 0 && dy == 0)\n                return false;\n        }\n        else {\n            const mx1 = Vec.min(outlineY), mx2 = Vec.max(outlineX), my1 = Vec.min(outlineY), my2 = Vec.max(outlineY), cx = 0.5 * (mx1 + mx2), cy = 0.5 * (my1 + my2);\n            const mag = 1 + this.measure.scale() * this.policy.data.fontSize * ArrangeMolecule.FONT_CORRECT * 0.1 / Math.max(mx2 - cx, my2 - cy);\n            const psz = outlineX.length;\n            let magPX = outlineX.slice(0), magPY = outlineY.slice(0);\n            for (let n = 0; n < psz; n++) {\n                magPX[n] = (magPX[n] - cx) * mag + cx;\n                magPY[n] = (magPY[n] - cy) * mag + cy;\n            }\n            let bestScore = 0, bestExt = 0, bestAng = 0;\n            for (let ext = 0.5 * (a.oval.rw + a.oval.rh); ext < 1.5 * this.measure.scale(); ext += 0.1 * this.measure.scale()) {\n                let anyNoClash = false;\n                for (let ang = 0; ang < 2 * Math.PI; ang += 5 * DEGRAD) {\n                    let tx = ext * Math.cos(ang), ty = ext * Math.sin(ang);\n                    Vec.addTo(magPX, tx);\n                    Vec.addTo(magPY, ty);\n                    let viol = this.countPolyViolations(magPX, magPY, null, false);\n                    Vec.addTo(magPX, -tx);\n                    Vec.addTo(magPY, -ty);\n                    if (viol == 0)\n                        anyNoClash = true;\n                    let score = 10 * viol + this.spatialCongestion(a.oval.cx + tx, a.oval.cy + ty, 0.5) + 2 * ext;\n                    if (bestScore == 0 || score < bestScore) {\n                        bestScore = score;\n                        bestExt = ext;\n                        bestAng = ang;\n                        dx = tx;\n                        dy = ty;\n                    }\n                }\n                if (anyNoClash)\n                    break;\n            }\n        }\n        let wad = this.measure.measureText('H', a.fsz);\n        const PADDING = 1.1;\n        let ah = {\n            anum: 0,\n            text: 'H',\n            fsz: a.fsz,\n            col: a.col,\n            oval: new Oval(a.oval.cx + dx, a.oval.cy + dy, 0.5 * wad[0] * PADDING, 0.5 * wad[1] * PADDING)\n        };\n        this.points.push(ah);\n        if (sub.length > 0) {\n            const subFsz = SSFRACT * a.fsz;\n            wad = this.measure.measureText(sub, subFsz);\n            let an = {\n                anum: 0,\n                text: sub,\n                fsz: subFsz,\n                col: a.col,\n                oval: new Oval(ah.oval.cx + 0.5 * firstEMW * a.fsz * font.INV_UNITS_PER_EM + 0.5 * wad[0], ah.oval.cy + (1 - SSFRACT) * a.fsz, 0.5 * wad[0] * PADDING, 0.5 * wad[1] * PADDING)\n            };\n            this.points.push(an);\n        }\n        Vec.addTo(outlineX, dx);\n        Vec.addTo(outlineY, dy);\n        let minX = Vec.min(outlineX), minY = Vec.min(outlineY);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(minX, minY, Vec.max(outlineX) - minX, Vec.max(outlineY) - minY),\n            px: outlineX,\n            py: outlineY\n        };\n        this.space.push(spc);\n        return true;\n    }\n    computeSpacePoint(a) {\n        let s = {\n            anum: a.anum,\n            bnum: 0,\n            box: new Box(),\n            px: [],\n            py: []\n        };\n        const font = FontData.main;\n        let outlineX = [], outlineY = [];\n        let emw = 0, nglyphs = 0;\n        if (a.text != null) {\n            for (let n = 0; n < a.text.length; n++) {\n                let ch1 = a.text.charAt(n);\n                let i = font.getIndex(ch1);\n                if (i >= 0) {\n                    if (emw == 0) {\n                        outlineX = font.getOutlineX(i);\n                        outlineY = font.getOutlineY(i);\n                        nglyphs = 1;\n                    }\n                    else {\n                        let extraX = font.getOutlineX(i), extraY = font.getOutlineY(i);\n                        if (extraX.length > 0) {\n                            Vec.addTo(extraX, emw);\n                            outlineX = outlineX.concat(extraX);\n                            outlineY = outlineY.concat(extraY);\n                            nglyphs++;\n                        }\n                    }\n                    emw += font.HORIZ_ADV_X[i];\n                }\n                else\n                    emw += font.MISSING_HORZ;\n                if (n < a.text.length - 1) {\n                    let ch2 = a.text.charAt(n + 1);\n                    emw += font.getKerning(ch1, ch2);\n                }\n            }\n        }\n        if (outlineX.length > 0) {\n            if (nglyphs > 1) {\n                let qh = new QuickHull(outlineX, outlineY, 0);\n                outlineX = qh.hullX;\n                outlineY = qh.hullY;\n            }\n            let emdx = -0.5 * emw, emdy = 0.5 * font.ASCENT * font.ASCENT_FUDGE;\n            let emscale = a.fsz * font.INV_UNITS_PER_EM;\n            for (let n = 0; n < outlineX.length; n++) {\n                outlineX[n] = a.oval.cx + (emdx + outlineX[n]) * emscale;\n                outlineY[n] = a.oval.cy + (emdy - outlineY[n]) * emscale * this.ymul;\n            }\n            s.px = outlineX;\n            s.py = outlineY;\n            let minX = Vec.min(outlineX), minY = Vec.min(outlineY);\n            s.box = new Box(minX, minY, Vec.max(outlineX) - minX, Vec.max(outlineY) - minY);\n        }\n        else {\n            s.box = Box.fromOval(a.oval);\n            if (s.box.w > 0 && s.box.h > 0) {\n                s.px = [s.box.minX(), s.box.maxX(), s.box.maxX(), s.box.minX()];\n                s.py = [s.box.minY(), s.box.minY(), s.box.maxY(), s.box.maxY()];\n            }\n        }\n        return s;\n    }\n    computeSpaceLine(b) {\n        let s = {\n            anum: 0,\n            bnum: b.bnum,\n            box: new Box(),\n            px: [],\n            py: []\n        };\n        if (b.type == BLineType.Normal || b.type == BLineType.Dotted || b.type == BLineType.DotDir) {\n            s.px = [b.line.x1, b.line.x2];\n            s.py = [b.line.y1, b.line.y2];\n        }\n        else {\n            const dx = b.line.x2 - b.line.x1, dy = b.line.y2 - b.line.y1;\n            const norm = b.head / Math.sqrt(dx * dx + dy * dy);\n            const ox = norm * dy, oy = -norm * dx;\n            if (b.type == BLineType.Unknown) {\n                s.px = [b.line.x1 + ox, b.line.x1 - ox, b.line.x2 - ox, b.line.x2 + ox];\n                s.py = [b.line.y1 + oy, b.line.y1 - oy, b.line.y2 - oy, b.line.y2 + oy];\n            }\n            else {\n                s.px = [b.line.x1, b.line.x2 - ox, b.line.x2 + ox];\n                s.py = [b.line.y1, b.line.y2 - oy, b.line.y2 + oy];\n            }\n        }\n        s.box.x = Vec.min(s.px) - b.size;\n        s.box.y = Vec.min(s.py) - b.size;\n        s.box.w = Vec.max(s.px) - s.box.x + b.size;\n        s.box.h = Vec.max(s.py) - s.box.y + b.size;\n        return s;\n    }\n    bumpAtomPosition(atom, dx, dy) {\n        let p = this.points[atom - 1];\n        p.oval.cx += dx;\n        p.oval.cy += dy;\n        for (let n = this.space.length - 1; n >= 0; n--) {\n            let s = this.space[n - 1];\n            if (s == null || s.anum != atom)\n                continue;\n            s.box.x += dx;\n            s.box.y += dy;\n            Vec.addTo(s.px, dx);\n            Vec.addTo(s.py, dy);\n        }\n    }\n    spaceSubset(x, y, w, h) {\n        let subset = [];\n        for (let s of this.space)\n            if (GeomUtil.rectsIntersect(x, y, w, h, s.box.x, s.box.y, s.box.w, s.box.h))\n                subset.push(s);\n        return subset;\n    }\n    countPolyViolations(px, py, space, shortCircuit) {\n        if (space == null)\n            space = this.space;\n        let hits = 0;\n        const psz = px.length, nspc = space.length;\n        let pr = new Box(), sr = new Box();\n        for (let i1 = 0; i1 < psz; i1++) {\n            let i2 = i1 < psz - 1 ? i1 + 1 : 0;\n            pr.x = Math.min(px[i1], px[i2]) - 1;\n            pr.y = Math.min(py[i1], py[i2]) - 1;\n            pr.w = Math.max(px[i1], px[i2]) - pr.x + 2;\n            pr.h = Math.max(py[i1], py[i2]) - pr.y + 2;\n            for (let j = 0; j < nspc; j++) {\n                let spc = space[j];\n                if (spc.px == null)\n                    continue;\n                sr.x = spc.box.x - 1;\n                sr.y = spc.box.y - 1;\n                sr.w = spc.box.w + 1;\n                sr.h = spc.box.h + 1;\n                if (!pr.intersects(sr))\n                    continue;\n                let ssz = spc.px.length;\n                for (let j1 = 0; j1 < ssz; j1++) {\n                    let j2 = j1 < ssz - 1 ? j1 + 1 : 0;\n                    sr.x = Math.min(spc.px[j1], spc.px[j2]) - 1;\n                    sr.y = Math.min(spc.py[j1], spc.py[j2]) - 1;\n                    sr.w = Math.max(spc.px[j1], spc.px[j2]) - sr.x + 2;\n                    sr.h = Math.max(spc.py[j1], spc.py[j2]) - sr.y + 2;\n                    if (!pr.intersects(sr))\n                        continue;\n                    if (GeomUtil.doLineSegsIntersect(px[i1], py[i1], px[i2], py[i2], spc.px[j1], spc.py[j1], spc.px[j2], spc.py[j2])) {\n                        if (shortCircuit)\n                            return 1;\n                        hits++;\n                        break;\n                    }\n                    if (ssz == 1)\n                        break;\n                }\n            }\n        }\n        pr.x = Vec.min(px);\n        pr.y = Vec.min(py);\n        pr.w = Vec.max(px) - pr.x;\n        pr.h = Vec.max(py) - pr.y;\n        for (let n = nspc - 1; n >= 0; n--) {\n            let spc = space[n];\n            sr.x = spc.box.x;\n            sr.y = spc.box.y;\n            sr.w = spc.box.w;\n            sr.h = spc.box.h;\n            if (!pr.intersects(sr))\n                continue;\n            for (let i = spc.px.length - 1; i >= 0; i--)\n                if (GeomUtil.pointInPolygon(spc.px[i], spc.py[i], px, py)) {\n                    if (shortCircuit)\n                        return 1;\n                    hits++;\n                    break;\n                }\n            for (let i = 0; i < psz; i++)\n                if (GeomUtil.pointInPolygon(px[i], py[i], spc.px, spc.py)) {\n                    if (shortCircuit)\n                        return 1;\n                    hits++;\n                    break;\n                }\n        }\n        return hits;\n    }\n    adjustBondPosition(bf, bt, x1, y1, x2, y2) {\n        if (bf == 0 || bt == 0)\n            return null;\n        for (let n = 0; n < this.lines.length; n++) {\n            let b = this.lines[n];\n            if (this.mol.bondOrder(b.bnum) != 1 || this.mol.bondType(b.bnum) != Molecule.BONDTYPE_NORMAL)\n                continue;\n            let alt = false;\n            if (this.mol.bondFrom(b.bnum) == bf && this.mol.bondTo(b.bnum) == bt) { }\n            else if (this.mol.bondFrom(b.bnum) == bt && this.mol.bondTo(b.bnum) == bf)\n                alt = true;\n            else\n                continue;\n            let th = angleDiff(Math.atan2(b.line.y2 - b.line.y1, b.line.x2 - b.line.x1), Math.atan2(y2 - y1, x2 - x1)) * RADDEG;\n            if ((th > -5 && th < 5) || th > 175 || th < -175)\n                continue;\n            let xy = GeomUtil.lineIntersect(b.line.x1, b.line.y1, b.line.x2, b.line.y2, x1, y1, x2, y2);\n            if (this.mol.atomRingBlock(bt) == 0) {\n                if (alt) {\n                    b.line.x1 = xy[0];\n                    b.line.y1 = xy[1];\n                }\n                else {\n                    b.line.x2 = xy[0];\n                    b.line.y2 = xy[1];\n                }\n            }\n            return xy;\n        }\n        return null;\n    }\n    priorityDoubleSubstit(idx) {\n        let bf = this.mol.bondFrom(idx), bt = this.mol.bondTo(idx);\n        let nf = this.mol.atomAdjList(bf), nt = this.mol.atomAdjList(bt);\n        let a1 = this.points[bf - 1], a2 = this.points[bt - 1];\n        let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n        let dx = x2 - x1, dy = y2 - y1, btheta = Math.atan2(dy, dx);\n        let idxFLeft = 0, idxFRight = 0, idxTLeft = 0, idxTRight = 0;\n        for (let n = 0; n < nf.length; n++)\n            if (nf[n] != bt) {\n                let theta = angleDiff(Math.atan2(this.points[nf[n] - 1].oval.cy - y1, this.points[nf[n] - 1].oval.cx - x1), btheta);\n                if (theta > 0) {\n                    if (idxFLeft != 0)\n                        return null;\n                    idxFLeft = nf[n];\n                }\n                else {\n                    if (idxFRight != 0)\n                        return null;\n                    idxFRight = nf[n];\n                }\n            }\n        for (let n = 0; n < nt.length; n++)\n            if (nt[n] != bf) {\n                let theta = angleDiff(Math.atan2(this.points[nt[n] - 1].oval.cy - y2, this.points[nt[n] - 1].oval.cx - x2), btheta);\n                if (theta > 0) {\n                    if (idxTLeft != 0)\n                        return null;\n                    idxTLeft = nt[n];\n                }\n                else {\n                    if (idxTRight != 0)\n                        return null;\n                    idxTRight = nt[n];\n                }\n            }\n        let sumFrom = (idxFLeft > 0 ? 1 : 0) + (idxFRight > 0 ? 1 : 0), sumTo = (idxTLeft > 0 ? 1 : 0) + (idxTRight > 0 ? 1 : 0);\n        if (sumFrom == 1 && sumTo == 0)\n            return [idxFLeft > 0 ? idxFLeft : idxFRight];\n        if (sumFrom == 0 && sumTo == 1)\n            return [idxTLeft > 0 ? idxTLeft : idxTRight];\n        if (sumFrom == 1 && sumTo == 1) {\n            if (idxFLeft > 0 && idxTLeft > 0)\n                return [idxFLeft, idxTLeft];\n            if (idxFRight > 0 && idxTRight > 0)\n                return [idxFRight, idxTRight];\n            let oxy = this.orthogonalDelta(x1, y1, x2, y2, this.bondSepPix);\n            let congestLeft = this.spatialCongestion(0.5 * (x1 + x2) + oxy[0], 0.5 * (y1 + y2) + oxy[1]);\n            let congestRight = this.spatialCongestion(0.5 * (x1 + x2) - oxy[0], 0.5 * (y1 + y2) - oxy[1]);\n            if (congestLeft < congestRight)\n                return [idxFLeft > 0 ? idxFLeft : idxTLeft];\n            else\n                return [idxFRight > 0 ? idxFRight : idxTRight];\n        }\n        if (sumFrom == 2 && sumTo == 1) {\n            if (idxTLeft == 0)\n                return [idxFRight, idxTRight];\n            else\n                return [idxFLeft, idxTLeft];\n        }\n        if (sumFrom == 1 && sumTo == 2) {\n            if (idxFLeft == 0)\n                return [idxFRight, idxTRight];\n            else\n                return [idxFLeft, idxTLeft];\n        }\n        return null;\n    }\n    annotateAtom(atom, text, col, fsz) {\n        let [tw, ta] = this.measure.measureText(text, fsz);\n        let a = this.points[atom - 1];\n        let cx = a.oval.cx, cy = a.oval.cy, rw = 0.6 * tw, rh = 0.6 * ta;\n        let otherTheta = [];\n        for (let a of this.mol.atomAdjList(atom)) {\n            let dx = this.points[a - 1].oval.cx - cx, dy = this.points[a - 1].oval.cy - cy;\n            otherTheta.push(Math.atan2(dy, dx));\n        }\n        let minExt = 0.5 * (a.oval.rw + a.oval.rh), stepsz = 0.1 * this.scale, nsteps = 8;\n        let angsteps = 36, angsz = TWOPI / angsteps;\n        let bestScore = Number.POSITIVE_INFINITY, bestDX = 0, bestDY = 0;\n        let px = [0, 0, 0, 0], py = [0, 0, 0, 0];\n        let limX = rw + minExt + nsteps * stepsz, limY = rh + minExt + nsteps * stepsz;\n        let subSpace = this.spaceSubset(cx - limX, cy - limY, 2 * limX, 2 * limY);\n        for (let step = 0; step < nsteps; step++) {\n            let ext = minExt + step * stepsz;\n            for (let ang = 0; ang < angsteps; ang++) {\n                let th = angsz * ang;\n                let dx = ext * Math.cos(th), dy = ext * Math.sin(th);\n                let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                px[0] = x1;\n                py[0] = y1;\n                px[1] = x2;\n                py[1] = y1;\n                px[2] = x2;\n                py[2] = y2;\n                px[3] = x1;\n                py[3] = y2;\n                let viol = this.countPolyViolations(px, py, subSpace, false);\n                let score = viol * 1000;\n                for (let oth of otherTheta)\n                    score -= Math.abs(angleDiff(th, oth));\n                if (score < bestScore) {\n                    bestScore = score;\n                    bestDX = dx;\n                    bestDY = dy;\n                }\n            }\n            if (bestScore < 500)\n                break;\n        }\n        let x = cx + bestDX, y = cy + bestDY;\n        let an = {\n            anum: 0,\n            text,\n            fsz,\n            col,\n            oval: new Oval(x, y, rw, rh),\n        };\n        this.points.push(an);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(x - rw, y - rh, 2 * rw, 2 * rh),\n            px: [x - rw, x + rw, x + rw, x - rw],\n            py: [y - rh, y - rh, y + rh, y + rh],\n        };\n        this.space.push(spc);\n    }\n    annotateBond(bond, text, col, fsz) {\n        let [tw, ta] = this.measure.measureText(text, fsz);\n        let bfr = this.mol.bondFrom(bond), bto = this.mol.bondTo(bond);\n        let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n        let cx = 0.5 * (a1.oval.cx + a2.oval.cx), cy = 0.5 * (a1.oval.cy + a2.oval.cy), rw = 0.6 * tw, rh = 0.6 * ta;\n        let bth = Math.atan2(a2.oval.cy - a1.oval.cy, a2.oval.cx - a1.oval.cx);\n        let otherTheta = [bth, bth + Math.PI];\n        for (let a of this.mol.atomAdjList(bfr))\n            if (a != bto) {\n                let dx = this.points[a - 1].oval.cx - this.points[bfr - 1].oval.cx, dy = this.points[a - 1].oval.cy - this.points[bfr - 1].oval.cy;\n                otherTheta.push(Math.atan2(dy, dx));\n            }\n        for (let a of this.mol.atomAdjList(bto))\n            if (a != bfr) {\n                let dx = this.points[a - 1].oval.cx - this.points[bto - 1].oval.cx, dy = this.points[a - 1].oval.cy - this.points[bto - 1].oval.cy;\n                otherTheta.push(Math.atan2(dy, dx));\n            }\n        let minExt = 0.2 * this.scale * this.bondOrder[bond - 1], stepsz = 0.1 * this.scale, nsteps = 8;\n        let angsteps = 36, angsz = TWOPI / angsteps;\n        let bestScore = Number.POSITIVE_INFINITY, bestDX = 0, bestDY = 0;\n        let px = [0, 0, 0, 0], py = [0, 0, 0, 0];\n        let limX = rw + minExt + nsteps * stepsz, limY = rh + minExt + nsteps * stepsz;\n        let subSpace = this.spaceSubset(cx - limX, cy - limY, 2 * limX, 2 * limY);\n        for (let step = 0; step < nsteps; step++) {\n            let ext = minExt + step * stepsz;\n            for (let ang = 0; ang < angsteps; ang++) {\n                let th = angsz * ang;\n                let dx = ext * Math.cos(th), dy = ext * Math.sin(th);\n                let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                px[0] = x1;\n                py[0] = y1;\n                px[1] = x2;\n                py[1] = y1;\n                px[2] = x2;\n                py[2] = y2;\n                px[3] = x1;\n                py[3] = y2;\n                let viol = this.countPolyViolations(px, py, subSpace, false);\n                let score = viol * 1000;\n                for (let oth of otherTheta)\n                    score -= Math.abs(angleDiff(th, oth));\n                if (score < bestScore) {\n                    bestScore = score;\n                    bestDX = dx;\n                    bestDY = dy;\n                }\n            }\n            if (bestScore < 500)\n                break;\n        }\n        let x = cx + bestDX, y = cy + bestDY;\n        let an = {\n            anum: 0,\n            text,\n            fsz,\n            col,\n            oval: new Oval(x, y, rw, rh),\n        };\n        this.points.push(an);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(x - rw, y - rh, 2 * rw, 2 * rh),\n            px: [x - rw, x + rw, x + rw, x - rw],\n            py: [y - rh, y - rh, y + rh, y + rh],\n        };\n        this.space.push(spc);\n    }\n    boxOverlaps(x, y, w, h, pointmask, linemask) {\n        let vx1 = x, vy1 = y, vx2 = x + w, vy2 = y + h;\n        for (let n = 0; n < this.points.length; n++) {\n            if (pointmask != null && !pointmask[n])\n                continue;\n            let a = this.points[n];\n            let wx1 = a.oval.cx - a.oval.rw, wy1 = a.oval.cy - a.oval.rh, wx2 = a.oval.cx + a.oval.rw, wy2 = a.oval.cy + a.oval.rh;\n            if (vx2 < wx1 || vx1 > wx2 || vy2 < wy1 || vy1 > wy2)\n                continue;\n            return true;\n        }\n        for (let n = 0; n < this.lines.length; n++) {\n            if (linemask != null && !linemask[n])\n                continue;\n            let b = this.lines[n];\n            let wx1 = b.line.x1, wy1 = b.line.y1, wx2 = b.line.x2, wy2 = b.line.y2;\n            if (vx2 < Math.min(wx1, wx2) || vx1 > Math.max(wx1, wx2) || vy2 < Math.min(wy1, wy2) || vy1 > Math.max(wy1, wy2))\n                continue;\n            if (wx1 >= vx1 && wx1 <= vx2 && wy1 >= vy1 && wy1 <= vy2)\n                return true;\n            if (wx2 >= vx1 && wx2 <= vx2 && wy2 >= vy1 && wy2 <= vy2)\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy1, vx2, vy1))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy2, vx2, vy2))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy1, vx1, vy2))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx2, vy1, vx2, vy2))\n                return true;\n        }\n        return false;\n    }\n    resolveLineCrossings(bondHigher, bondLower) {\n        while (true) {\n            let anything = false;\n            for (let i1 = 0; i1 < this.lines.length; i1++) {\n                let b1 = this.lines[i1];\n                if (b1.bnum != bondHigher)\n                    continue;\n                if (b1.type != BLineType.Normal && b1.type != BLineType.Dotted && b1.type != BLineType.DotDir)\n                    continue;\n                for (let i2 = 0; i2 < this.lines.length; i2++) {\n                    let b2 = this.lines[i2];\n                    if (b2.bnum != bondLower)\n                        continue;\n                    if (b2.type == BLineType.DotDir)\n                        b2.type = BLineType.Dotted;\n                    if (b2.type != BLineType.Normal && b2.type != BLineType.Dotted)\n                        continue;\n                    if (b1.bfr == b2.bfr || b1.bfr == b2.bto || b1.bto == b2.bfr || b1.bto == b2.bto)\n                        continue;\n                    if (!GeomUtil.doLineSegsIntersect(b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2))\n                        continue;\n                    let xy = GeomUtil.lineIntersect(b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2);\n                    let dx = b2.line.x2 - b2.line.x1, dy = b2.line.y2 - b2.line.y1;\n                    let ext = Math.abs(dx) > Math.abs(dy) ? (xy[0] - b2.line.x1) / dx : (xy[1] - b2.line.y1) / dy;\n                    let dist = norm_xy(dx, dy);\n                    let delta = b2.size / dist * (b2.type == BLineType.Normal ? 2 : 4);\n                    if (ext > delta && ext < 1 - delta) {\n                        let b3 = {\n                            bnum: b2.bnum,\n                            bfr: b2.bfr,\n                            bto: b2.bto,\n                            type: b2.type,\n                            line: b2.line.clone(),\n                            size: b2.size,\n                            head: b2.head,\n                            col: b2.col\n                        };\n                        this.lines.push(b3);\n                        b2.line.x2 = b2.line.x1 + dx * (ext - delta);\n                        b2.line.y2 = b2.line.y1 + dy * (ext - delta);\n                        b3.line.x1 = b3.line.x1 + dx * (ext + delta);\n                        b3.line.y1 = b3.line.y1 + dy * (ext + delta);\n                        anything = true;\n                    }\n                    else if (ext > delta) {\n                        b2.line.x2 = b2.line.x1 + dx * (ext - delta);\n                        b2.line.y2 = b2.line.y1 + dy * (ext - delta);\n                        anything = true;\n                    }\n                    else if (ext < 1 - delta) {\n                        b2.line.x1 = b2.line.x1 + dx * (ext + delta);\n                        b2.line.y1 = b2.line.y1 + dy * (ext + delta);\n                        anything = true;\n                    }\n                }\n            }\n            if (!anything)\n                break;\n        }\n    }\n    createCircularRing(atoms) {\n        let px = new Array(atoms.length), py = new Array(atoms.length);\n        for (let n = 0; n < atoms.length; n++) {\n            let pt = this.points[atoms[n] - 1];\n            px[n] = pt.oval.cx;\n            py[n] = pt.oval.cy;\n        }\n        let cx = Vec.sum(px) / atoms.length, cy = Vec.sum(py) / atoms.length;\n        let bx = [], by = [];\n        let isRegular = true;\n        let regDist = Number.NaN;\n        const FRACT = 0.7;\n        for (let a of atoms) {\n            let pt = this.points[a - 1];\n            let x0 = pt.oval.cx - cx, y0 = pt.oval.cy - cy, x1 = x0 - pt.oval.rw, x2 = x0 + pt.oval.rw, y1 = y0 - pt.oval.rh, y2 = y0 + pt.oval.rh;\n            bx.push(x1);\n            by.push(y0);\n            bx.push(x1);\n            by.push(y1);\n            bx.push(x1);\n            by.push(y2);\n            bx.push(x0);\n            by.push(y1);\n            bx.push(x0);\n            by.push(y2);\n            bx.push(x2);\n            by.push(y0);\n            bx.push(x2);\n            by.push(y1);\n            bx.push(x2);\n            by.push(y2);\n            let dist = norm_xy(x0, y0), theta = Math.atan2(y0, x0);\n            bx.push(FRACT * dist * Math.cos(theta));\n            by.push(FRACT * dist * Math.sin(theta));\n            for (let b of this.mol.atomAdjList(a))\n                if (atoms.indexOf(b) >= 0) {\n                    let pb = this.points[b - 1];\n                    let mx = 0.5 * (pt.oval.cx + pb.oval.cx) - cx, my = 0.5 * (pt.oval.cy + pb.oval.cy) - cy;\n                    let mdist = norm_xy(mx, my), mtheta = Math.atan2(my, mx);\n                    bx.push(FRACT * mdist * Math.cos(mtheta));\n                    by.push(FRACT * mdist * Math.sin(mtheta));\n                }\n            if (!isRegular) { }\n            else if (Number.isFinite(regDist)) {\n                if (Math.abs(regDist - dist) > 1)\n                    isRegular = false;\n            }\n            else\n                regDist = dist;\n        }\n        let r = { atoms, cx, cy, rw: 0, rh: 0, theta: 0, size: 0 };\n        if (isRegular) {\n            r.rw = r.rh = GeomUtil.fitCircle(bx, by);\n        }\n        else {\n            let mdist = 0;\n            for (let n = 0; n < atoms.length; n++)\n                mdist += norm_xy(px[n] - cx, py[n] - cy);\n            let margin = mdist / atoms.length * (1 - FRACT);\n            var fit = new FitRotatedEllipse(px, py, margin);\n            fit.calculate();\n            r.cx = fit.cx;\n            r.cy = fit.cy;\n            r.rw = fit.rw;\n            r.rh = fit.rh;\n            r.theta = fit.theta;\n        }\n        r.size = this.lineSizePix;\n        this.rings.push(r);\n    }\n    createCurvedPath(atoms, fractional, extAtom) {\n        const sz = atoms.length, szn = sz - 1;\n        let x = [], y = [], symbol = [];\n        for (let n = 0; n < sz; n++) {\n            let pt = this.points[atoms[n] - 1];\n            x.push(pt.oval.cx);\n            y.push(pt.oval.cy);\n            symbol.push(pt.text != null);\n        }\n        let ox = [], oy = [];\n        const EXT = Molecule.IDEALBOND * 0.25 * this.scale;\n        for (let n = 0; n < sz - 1; n++) {\n            let dx = x[n + 1] - x[n], dy = y[n + 1] - y[n], invD = EXT * invZ(norm_xy(dx, dy));\n            ox.push(dy * invD);\n            oy.push(-dx * invD);\n        }\n        const FAR = 1.2, CLOSE = 0.7;\n        let sx1 = Vec.numberArray(0, sz), sy1 = Vec.numberArray(0, sz), sx2 = Vec.numberArray(0, sz), sy2 = Vec.numberArray(0, sz);\n        const capA = symbol[0] ? FAR : CLOSE;\n        if (!fractional) {\n            sx1[0] = x[0] + ox[0] * capA;\n            sy1[0] = y[0] + oy[0] * capA;\n            sx2[0] = x[0] - ox[0] * capA;\n            sy2[0] = y[0] - oy[0] * capA;\n        }\n        else {\n            const dx = -oy[0], dy = ox[0];\n            sx1[0] = x[0] + dx * capA;\n            sy1[0] = y[0] + dy * capA;\n            sx2[0] = x[0] + dx * capA;\n            sy2[0] = y[0] + dy * capA;\n        }\n        let ncross1 = 0, ncross2 = 0;\n        for (let n = 1; n < sz - 1; n++) {\n            const fr1 = symbol[n] ? FAR : CLOSE, fr2 = fr1;\n            sx1[n] = x[n] + fr1 * (ox[n - 1] + ox[n]);\n            sy1[n] = y[n] + fr1 * (oy[n - 1] + oy[n]);\n            sx2[n] = x[n] - fr2 * (ox[n - 1] + ox[n]);\n            sy2[n] = y[n] - fr2 * (oy[n - 1] + oy[n]);\n            for (let a of this.mol.atomAdjList(atoms[n]))\n                if (atoms.indexOf(a) < 0 && a != extAtom) {\n                    let pt = this.points[a - 1];\n                    let dx = pt.oval.cx - x[n], dy = pt.oval.cy - y[n];\n                    let dot1 = dx * (sx1[n] - x[n]) + dy * (sy1[n] - x[n]);\n                    let dot2 = dy * (sx2[n] - x[n]) + dy * (sy2[n] - x[n]);\n                    if (dot1 > dot2)\n                        ncross1++;\n                    else\n                        ncross2++;\n                }\n        }\n        let nn = sz - 1;\n        let capB = symbol[nn] ? FAR : CLOSE;\n        if (!fractional) {\n            sx1[nn] = x[nn] + ox[nn - 1] * capB;\n            sy1[nn] = y[nn] + oy[nn - 1] * capB;\n            sx2[nn] = x[nn] - ox[nn - 1] * capB;\n            sy2[nn] = y[nn] - oy[nn - 1] * capB;\n        }\n        else {\n            let dx = -oy[nn - 1], dy = ox[nn - 1];\n            sx1[nn] = x[nn] - dx * capB;\n            sy1[nn] = y[nn] - dy * capB;\n            sx2[nn] = x[nn] - dx * capB;\n            sy2[nn] = y[nn] - dy * capB;\n        }\n        let score1 = 0, score2 = 0;\n        for (let n = 0; n < sz - 1; n++) {\n            score1 += norm_xy(sx1[n + 1] - sx1[n], sy1[n + 1] - sy1[n]);\n            score2 += norm_xy(sx2[n + 1] - sx2[n], sy2[n + 1] - sy2[n]);\n        }\n        score1 *= ncross1 + 1;\n        score2 *= ncross2 + 1;\n        let sx = score1 < score2 ? sx1 : sx2;\n        let sy = score1 < score2 ? sy1 : sy2;\n        let p = { atoms, px: null, py: null, ctrl: null, size: this.lineSizePix };\n        this.splineInterpolate(p, sx, sy);\n        this.paths.push(p);\n    }\n    createBondCentroid(from, to) {\n        let pt = this.points[from - 1];\n        let x1 = pt.oval.cx, y1 = pt.oval.cy, x2 = 0, y2 = 0;\n        for (let a of to) {\n            pt = this.points[a - 1];\n            x2 += pt.oval.cx;\n            y2 += pt.oval.cy;\n        }\n        x2 /= to.length;\n        y2 /= to.length;\n        if (to.length <= 2) {\n            x2 -= 0.1 * (x2 - x1);\n            y2 -= 0.1 * (y2 - y1);\n        }\n        const minDist = MINBOND_LINE * this.measure.scale();\n        let xy1 = this.shrinkBond(x1, y1, x2, y2, this.backOffAtom(from, x1, y1, x2, y2, minDist));\n        this.ensureMinimumBondLength(xy1, [x2, y2], x1, y1, x2, y2, minDist);\n        let b = {\n            bnum: 0,\n            bfr: from,\n            bto: 0,\n            type: BLineType.Normal,\n            line: new Line(xy1[0], xy1[1], x2, y2),\n            size: this.lineSizePix,\n            head: 0,\n            col: this.policy.data.foreground\n        };\n        this.lines.push(b);\n        this.space.push(this.computeSpaceLine(b));\n    }\n    splineInterpolate(path, x, y) {\n        const sz = x.length;\n        const scale = 0.25;\n        for (let n = 0; n < sz; n++) {\n            if (n == 0) {\n                let dx = x[n + 1] - x[n], dy = y[n + 1] - y[n];\n                let qx = x[n] + scale * dx, qy = y[n] + scale * dy;\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n                path.px = Vec.append(path.px, qx);\n                path.py = Vec.append(path.py, qy);\n                path.ctrl = Vec.append(path.ctrl, true);\n            }\n            else if (n == sz - 1) {\n                let dx = x[n] - x[n - 1], dy = y[n] - y[n - 1];\n                let qx = x[n] - scale * dx, qy = y[n] - scale * dy;\n                path.px = Vec.append(path.px, qx);\n                path.py = Vec.append(path.py, qy);\n                path.ctrl = Vec.append(path.ctrl, true);\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n            }\n            else {\n                let dx = x[n + 1] - x[n - 1], dy = y[n + 1] - y[n - 1];\n                let invD = invZ(norm_xy(dx, dy));\n                dx *= invD;\n                dy *= invD;\n                let d1 = scale * norm_xy(x[n] - x[n - 1], y[n] - y[n - 1]), d2 = scale * norm_xy(x[n + 1] - x[n], y[n + 1] - y[n]);\n                let qx1 = x[n] - dx * d1, qy1 = y[n] - dy * d1;\n                let qx2 = x[n] + dx * d2, qy2 = y[n] + dy * d2;\n                path.px = Vec.append(path.px, qx1);\n                path.py = Vec.append(path.py, qy1);\n                path.ctrl = Vec.append(path.ctrl, true);\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n                path.px = Vec.append(path.px, qx2);\n                path.py = Vec.append(path.py, qy2);\n                path.ctrl = Vec.append(path.ctrl, true);\n            }\n        }\n    }\n    delocalisedAnnotation(atoms, charge, unpaired) {\n        const mol = this.mol;\n        let str = '';\n        if (charge == -1)\n            str = '-';\n        else if (charge == 1)\n            str = '+';\n        else if (charge < -1)\n            str = Math.abs(charge) + '-';\n        else if (charge > 1)\n            str = charge + '+';\n        if (unpaired > 0)\n            for (let n = 0; n < unpaired; n++)\n                str += '.';\n        if (str.length == 0)\n            return;\n        const sz = atoms.length;\n        let bestX = 0, bestY = 0;\n        for (let a of atoms) {\n            bestX += mol.atomX(a);\n            bestY += mol.atomY(a);\n        }\n        bestX /= sz;\n        bestY /= sz;\n        let bestScore = CoordUtil.congestionPoint(mol, bestX, bestY);\n        for (let n = 1; n < sz - 1; n++) {\n            let x = 0.5 * (mol.atomX(atoms[n - 1]) + mol.atomX(atoms[n + 1])), y = 0.5 * (mol.atomY(atoms[n - 1]) + mol.atomY(atoms[n + 1]));\n            let score = CoordUtil.congestionPoint(mol, x, y);\n            if (score < bestScore) {\n                bestScore = score;\n                bestX = x;\n                bestY = y;\n            }\n        }\n        let fsz = 0.8 * this.fontSizePix;\n        let wad = this.measure.measureText(str, fsz);\n        let rw = 0.55 * wad[0], rh = 0.55 * wad[1];\n        let a = {\n            anum: 0,\n            text: str,\n            fsz,\n            col: this.policy.data.foreground,\n            oval: new Oval(this.measure.angToX(bestX), this.measure.angToY(bestY), rw, rh)\n        };\n        this.points.push(a);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(a.oval.cx - rw, a.oval.cy - rh, 2 * rw, 2 * rh),\n            px: [a.oval.cx - rw, a.oval.cx + rw, a.oval.cx + rw, a.oval.cx - rw],\n            py: [a.oval.cy - rh, a.oval.cy - rh, a.oval.cy + rh, a.oval.cy + rh]\n        };\n        this.space.push(spc);\n    }\n    processPolymerUnit(unit, allUnits) {\n        if (Vec.len(unit.bondConn) == 4) {\n            this.processPolymerUnitPair(unit);\n            return;\n        }\n        let brackets = [];\n        const { mol, measure } = this;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let a1 = mol.bondFrom(n), a2 = mol.bondTo(n);\n            let in1 = unit.atoms.indexOf(a1) >= 0, in2 = unit.atoms.indexOf(a2) >= 0;\n            let bracket = null;\n            if (in1 && !in2)\n                bracket = { a1, a2 };\n            else if (in2 && !in1)\n                bracket = { a1: a2, a2: a1 };\n            else\n                continue;\n            bracket.x1 = mol.atomX(bracket.a1);\n            bracket.y1 = mol.atomY(bracket.a1);\n            bracket.x2 = mol.atomX(bracket.a2);\n            bracket.y2 = mol.atomY(bracket.a2);\n            bracket.shared = false;\n            for (let other of allUnits)\n                if (unit !== other && other.atoms.includes(bracket.a2)) {\n                    bracket.shared = true;\n                    break;\n                }\n            let nestings = allUnits.filter((look) => look === unit || (look.atoms.includes(bracket.a1) && !look.atoms.includes(bracket.a2)));\n            if (nestings.length > 1) {\n                nestings.sort((u1, u2) => u1.atoms.length - u2.atoms.length);\n                for (let i = 0; i < nestings.length; i++)\n                    if (nestings[i] === unit)\n                        bracket.nestOrder = i;\n                bracket.nestCount = nestings.length;\n            }\n            brackets.push(bracket);\n        }\n        let tagidx = 0;\n        let atomX = unit.atoms.map((a) => mol.atomX(a)), atomY = unit.atoms.map((a) => mol.atomY(a));\n        let minX = Vec.min(atomX), minY = Vec.min(atomY);\n        let maxX = Vec.max(atomX), maxY = Vec.max(atomY);\n        for (let n = 1; n < brackets.length; n++) {\n            let b1 = brackets[tagidx], b2 = brackets[n];\n            let score1 = b1.x2 - minX - b1.y2 + minY;\n            let score2 = b2.x2 - minX - b2.y2 + minY;\n            if (score2 > score1)\n                tagidx = n;\n        }\n        let isLinear = false, isOuter = false;\n        if (brackets.length == 2) {\n            let left = brackets[tagidx == 0 ? 1 : 0], right = brackets[tagidx];\n            let theta1 = Math.atan2(left.y2 - left.y1, left.x2 - left.x1);\n            let theta2 = Math.atan2(right.y2 - right.y1, right.x2 - right.x1);\n            isLinear = (theta1 > 145 * DEGRAD || theta1 < -145 * DEGRAD) && theta2 < 35 * DEGRAD && theta2 > -35 * DEGRAD;\n        }\n        else if (brackets.length == 0) {\n            let ym = 0.5 * (minY + maxY);\n            brackets.push({ x1: minX, y1: ym, x2: minX - 1, y2: ym });\n            brackets.push({ x1: maxX, y1: ym, x2: maxX + 1, y2: ym });\n            tagidx = 1;\n            isOuter = true;\n        }\n        let bsz1 = (isOuter ? 0.5 * (maxY - minY + 1) : isLinear ? 1.0 : 0.5) * this.scale, bsz2 = 0.2 * this.scale;\n        const BASE_LINE = { bnum: 0, bfr: 0, bto: 0, type: BLineType.Normal, size: this.lineSizePix, head: 0, col: this.policy.data.foreground };\n        const BASE_TEXT = { anum: 0, fsz: 0.7 * this.fontSizePix, bold: false, col: this.policy.data.foreground };\n        for (let n = 0; n < brackets.length; n++) {\n            let bracket = brackets[n];\n            let x1 = measure.angToX(bracket.x1), y1 = measure.angToY(bracket.y1);\n            let x2 = measure.angToX(bracket.x2), y2 = measure.angToY(bracket.y2);\n            if (bracket.shared) {\n                x2 -= (x2 - x1) * 0.1;\n                y2 -= (y2 - y1) * 0.1;\n            }\n            if (bracket.nestCount > 1) {\n                let dx = x2 - x1, dy = y2 - y1, fract = (bracket.nestOrder + 1) / bracket.nestCount;\n                x2 = x1 + dx * fract;\n                y2 = y1 + dy * fract;\n            }\n            let mx = 0.5 * (x1 + x2), my = 0.5 * (y1 + y2);\n            if (isLinear) {\n                x1 = x2 = mx;\n                y1 = y2 = my;\n                if (n == tagidx) {\n                    x1--;\n                    x2++;\n                }\n                else {\n                    x1++;\n                    x2--;\n                }\n            }\n            let invDist = invZ(norm_xy(x2 - x1, y2 - y1));\n            let dx = (x2 - x1) * invDist, dy = (y2 - y1) * invDist;\n            let ox = dy, oy = -dx;\n            let px2 = mx - bsz1 * ox, py2 = my - bsz1 * oy;\n            let px3 = mx + bsz1 * ox, py3 = my + bsz1 * oy;\n            let px1 = px2 - bsz2 * dx, py1 = py2 - bsz2 * dy;\n            let px4 = px3 - bsz2 * dx, py4 = py3 - bsz2 * dy;\n            let line1 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px1, py1, px2, py2) });\n            let line2 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px2, py2, px3, py3) });\n            let line3 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px3, py3, px4, py4) });\n            this.lines.push(line1);\n            this.lines.push(line2);\n            this.lines.push(line3);\n            this.space.push(this.computeSpaceLine(line1));\n            this.space.push(this.computeSpaceLine(line2));\n            this.space.push(this.computeSpaceLine(line3));\n            if (n == tagidx) {\n                let xx, yy;\n                if (bracket.shared)\n                    [xx, yy] = [px2 - 0.5 * this.scale * ox, py2 - 0.5 * this.scale * oy];\n                else\n                    [xx, yy] = [px2 + bsz2 * 2 * dx, py2 + bsz2 * 2 * dy];\n                let pt1 = Object.assign(Object.assign({}, BASE_TEXT), { 'text': 'n', 'oval': new Oval(xx, yy, 0, 0) });\n                this.points.push(pt1);\n                this.space.push(this.computeSpacePoint(pt1));\n                if (unit.connect != null) {\n                    let text = '?';\n                    if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                        text = 'ht';\n                    else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                        text = 'hh';\n                    else if (unit.connect == PolymerBlockConnectivity.Random)\n                        text = 'eu';\n                    if (bracket.shared)\n                        [xx, yy] = [px3 + 0.5 * this.scale * ox, py3 + 0.5 * this.scale * oy];\n                    else\n                        [xx, yy] = [px3 + bsz2 * 2.5 * dx, py3 + bsz2 * 2.5 * dy];\n                    let pt2 = Object.assign(Object.assign({}, BASE_TEXT), { 'text': text, 'oval': new Oval(xx, yy, 0, 0) });\n                    this.points.push(pt2);\n                    this.space.push(this.computeSpacePoint(pt2));\n                }\n            }\n        }\n    }\n    processPolymerUnitPair(unit) {\n        const { mol, measure } = this;\n        let xpos = [], ypos = [];\n        for (let b of unit.bondConn) {\n            let bfr = mol.bondFrom(b), bto = mol.bondTo(b);\n            xpos.push(measure.angToX(0.5 * (mol.atomX(bfr) + mol.atomX(bto))));\n            ypos.push(measure.angToY(0.5 * (mol.atomY(bfr) + mol.atomY(bto))));\n        }\n        let cx = Vec.sum(xpos) * 0.25, cy = Vec.sum(ypos) * 0.25;\n        let bsz = 0.5 * this.scale;\n        let rx = [], ry = [];\n        for (let [i1, i2] of [[0, 1], [2, 3]]) {\n            let dx = xpos[i2] - xpos[i1], dy = ypos[i2] - ypos[i1], inv = bsz * invZ(norm_xy(dx, dy) + 0.001);\n            [dx, dy] = [dx * inv, dy * inv];\n            xpos[i1] -= 2 * dx;\n            ypos[i1] -= 2 * dy;\n            xpos[i2] += 2 * dx;\n            ypos[i2] += 2 * dy;\n            let ox = dy, oy = -dx;\n            let dsq1 = norm2_xy(0.5 * (xpos[i1] + xpos[i2]) + ox - cx, 0.5 * (ypos[i1] + ypos[i2]) + oy - cy);\n            let dsq2 = norm2_xy(0.5 * (xpos[i1] + xpos[i2]) - ox - cx, 0.5 * (ypos[i1] + ypos[i2]) - oy - cy);\n            if (dsq2 < dsq1)\n                [ox, oy] = [-ox, -oy];\n            rx.push(...[ox, ox]);\n            ry.push(...[oy, oy]);\n        }\n        const BASE_LINE = { bnum: 0, bfr: 0, bto: 0, type: BLineType.Normal, size: this.lineSizePix, head: 0, col: this.policy.data.foreground };\n        const BASE_TEXT = { anum: 0, fsz: 0.7 * this.fontSizePix, bold: false, col: this.policy.data.foreground };\n        let drawLine = (x1, y1, x2, y2) => {\n            let line = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(x1, y1, x2, y2) });\n            this.lines.push(line);\n            this.space.push(this.computeSpaceLine(line));\n        };\n        let drawText = (x, y, txt) => {\n            let pt = Object.assign(Object.assign({}, BASE_TEXT), { 'text': txt, 'oval': new Oval(x, y, 0, 0) });\n            this.points.push(pt);\n            this.space.push(this.computeSpacePoint(pt));\n        };\n        drawLine(xpos[0], ypos[0], xpos[1], ypos[1]);\n        drawLine(xpos[0], ypos[0], xpos[0] + rx[0], ypos[0] + ry[0]);\n        drawLine(xpos[1], ypos[1], xpos[1] + rx[1], ypos[1] + ry[1]);\n        drawLine(xpos[2], ypos[2], xpos[3], ypos[3]);\n        drawLine(xpos[2], ypos[2], xpos[2] + rx[2], ypos[2] + ry[2]);\n        drawLine(xpos[3], ypos[3], xpos[3] + rx[3], ypos[3] + ry[3]);\n        let xmin = Vec.min(xpos), ymin = Vec.min(ypos);\n        let dist = [];\n        for (let n = 0; n < 4; n++)\n            dist.push(xpos[n] - xmin + ypos[n] - ymin);\n        let idxN = Vec.idxMax(dist);\n        drawText(xpos[idxN] - rx[idxN], ypos[idxN] - ry[idxN], 'n');\n        let idxD2 = idxN + (idxN % 2 == 1 ? -1 : 1), idxD1 = (idxD2 + 2) % 4;\n        drawText(xpos[idxD1] - 0.5 * rx[idxD1], ypos[idxD1] - 0.5 * ry[idxD1], '*');\n        drawText(xpos[idxD2] - 0.5 * rx[idxD2], ypos[idxD2] - 0.5 * ry[idxD2], '*');\n    }\n}\nArrangeMolecule.FONT_CORRECT = 1.5;\n//# sourceMappingURL=ArrangeMolecule.js.map","import { GeomUtil } from './Geom';\nimport { DEGRAD, fltEqual, norm2_xy, norm_xy, sqr, TWOPI } from './util';\nimport { Vec } from './Vec';\nconst CACHE_SIZE = 1000;\nexport class FitRotatedEllipse {\n    constructor(px, py, margin) {\n        this.px = px;\n        this.py = py;\n        this.margin = margin;\n        this.theta = 0;\n        this.stop = false;\n        this.hashKey = JSON.stringify([this.px, this.py]);\n    }\n    calculate() {\n        if (this.lookupCache())\n            return;\n        this.setupParameters();\n        if (this.stop)\n            return;\n        this.currentScore = this.calculateScore(this.cx, this.cy, this.rw, this.rh);\n        this.coarseDiscovery();\n        this.fineImprovement();\n        this.theta = -this.theta;\n        this.saveCache();\n    }\n    getSpline() {\n        return GeomUtil.createBezierEllipse(this.cx, this.cy, this.rw, this.rh, this.theta);\n    }\n    lookupCache() {\n        let hashKey = this.hashKey;\n        let look = FitRotatedEllipse.cacheMap.get(hashKey);\n        if (look) {\n            this.cx = look.cx;\n            this.cy = look.cy;\n            this.rw = look.rw;\n            this.rh = look.rh;\n            this.theta = look.theta;\n            const { cacheVal } = FitRotatedEllipse;\n            for (let n = cacheVal.length - 1; n >= 0; n--)\n                if (cacheVal[n].hashKey == hashKey) {\n                    if (n < cacheVal.length - 1) {\n                        cacheVal.push(cacheVal[n]);\n                        cacheVal.splice(n, 1);\n                    }\n                    break;\n                }\n            return true;\n        }\n        return false;\n    }\n    saveCache() {\n        let hashKey = this.hashKey;\n        const { cacheVal, cacheMap } = FitRotatedEllipse;\n        cacheVal.push(this);\n        cacheMap.set(hashKey, this);\n        while (cacheVal.length > CACHE_SIZE) {\n            cacheMap.delete(cacheVal[0].hashKey);\n            cacheVal.splice(0);\n        }\n    }\n    setupParameters() {\n        const psz = this.psz = this.px.length;\n        const invpsz = this.invpsz = 1.0 / psz;\n        this.cx = Vec.sum(this.px) * invpsz;\n        this.cy = Vec.sum(this.py) * invpsz;\n        let ptheta = new Array(psz), pdist = new Array(psz);\n        for (let n = 0; n < psz; n++) {\n            ptheta[n] = Math.atan2(this.py[n] - this.cy, this.px[n] - this.cx);\n            pdist[n] = norm_xy(this.px[n] - this.cx, this.py[n] - this.cy);\n        }\n        let order = Vec.idxSort(ptheta);\n        this.px = Vec.idxGet(this.px, order);\n        this.py = Vec.idxGet(this.py, order);\n        ptheta = Vec.idxGet(ptheta, order);\n        pdist = Vec.idxGet(pdist, order);\n        let buffX = new Array(psz), buffY = new Array(psz);\n        const rotatedScore = (ptheta, pdist, rtheta) => {\n            for (let n = 0; n < psz; n++) {\n                buffX[n] = pdist[n] * Math.cos(ptheta[n] + rtheta);\n                buffY[n] = pdist[n] * Math.sin(ptheta[n] + rtheta);\n            }\n            let scx = Vec.sum(buffX) * invpsz, scy = Vec.sum(buffY) * invpsz;\n            let devx = 0, devy = 0;\n            for (let n = 0; n < psz; n++) {\n                devx += sqr(buffX[n] - scx);\n                devy += Math.abs(buffY[n] - scy);\n            }\n            return devy / (1 + devx);\n        };\n        let bestScore = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < 360; n++) {\n            let th = n * DEGRAD;\n            let score = rotatedScore(ptheta, pdist, th);\n            if (score < bestScore) {\n                this.theta = th;\n                bestScore = score;\n            }\n        }\n        for (let dth = -1; dth <= 1; dth += 0.05) {\n            let th = this.theta + dth * DEGRAD;\n            let score = rotatedScore(ptheta, pdist, th);\n            if (score < bestScore) {\n                this.theta = th;\n                bestScore = score;\n            }\n        }\n        for (let n = 0; n < psz; n++) {\n            this.px[n] = this.cx + pdist[n] * Math.cos(ptheta[n] + this.theta);\n            this.py[n] = this.cy + pdist[n] * Math.sin(ptheta[n] + this.theta);\n        }\n        this.cx = Vec.sum(this.px) * invpsz;\n        this.cy = Vec.sum(this.py) * invpsz;\n        this.rw = this.rh = 1;\n    }\n    coarseDiscovery() {\n        const { margin } = this;\n        let deltaD = 0.1 * margin, deltaR = 0.5 * deltaD;\n        const DELTA_OPTIONS = [\n            { dx: -1, dy: 0, dw: 0, dh: 0 },\n            { dx: 1, dy: 0, dw: 0, dh: 0 },\n            { dx: 0, dy: -1, dw: 0, dh: 0 },\n            { dx: 0, dy: 1, dw: 0, dh: 0 },\n            { dx: 0, dy: 0, dw: -1, dh: 0 },\n            { dx: 0, dy: 0, dw: 1, dh: 0 },\n            { dx: 0, dy: 0, dw: 0, dh: -1 },\n            { dx: 0, dy: 0, dw: 0, dh: 1 },\n        ];\n        for (let sanity = 0; sanity < 1000; sanity++) {\n            let anything = false;\n            let bestScore = this.currentScore;\n            let bestCX = this.cx, bestCY = this.cy, bestRW = this.rw, bestRH = this.rh;\n            for (let delta of DELTA_OPTIONS) {\n                let newCX = this.cx + delta.dx * deltaD;\n                let newCY = this.cy + delta.dy * deltaD;\n                let newRW = this.rw + delta.dw * deltaR;\n                let newRH = this.rh + delta.dh * deltaR;\n                let newScore = this.calculateScore(newCX, newCY, newRW, newRH);\n                if (newScore > bestScore && !fltEqual(newScore, bestScore)) {\n                    anything = true;\n                    bestScore = newScore;\n                    bestCX = newCX;\n                    bestCY = newCY;\n                    bestRW = newRW;\n                    bestRH = newRH;\n                }\n            }\n            if (!anything)\n                break;\n            this.currentScore = bestScore;\n            this.cx = bestCX;\n            this.cy = bestCY;\n            this.rw = bestRW;\n            this.rh = bestRH;\n        }\n    }\n    fineImprovement() {\n        const { margin } = this;\n        let deltaD = 0.1 * margin, deltaR = 0.5 * deltaD;\n        const REDUCTION = 2.0 / 3;\n        const MAX_REDUCTIONS = 20;\n        for (let reduc = 0; reduc < MAX_REDUCTIONS; reduc++) {\n            let anything = false;\n            let bestScore = this.currentScore;\n            let bestCX = this.cx, bestCY = this.cy, bestRW = this.rw, bestRH = this.rh;\n            for (let dCX = -1; dCX <= 1; dCX++) {\n                let newCX = this.cx + dCX * deltaD;\n                for (let dCY = -1; dCY <= 1; dCY++) {\n                    let newCY = this.cy + dCY * deltaD;\n                    for (let dRW = -1; dRW <= 1; dRW++) {\n                        let newRW = this.rw + dRW * deltaR;\n                        for (let dRH = -1; dRH <= 1; dRH++) {\n                            let newRH = this.rh + dRH * deltaR;\n                            if (dCX == 0 && dCY == 0 && dRW == 0 && dRH == 0)\n                                continue;\n                            let newScore = this.calculateScore(newCX, newCY, newRW, newRH);\n                            if (newScore > bestScore && !fltEqual(newScore, bestScore)) {\n                                anything = true;\n                                bestScore = newScore;\n                                bestCX = newCX;\n                                bestCY = newCY;\n                                bestRW = newRW;\n                                bestRH = newRH;\n                            }\n                        }\n                    }\n                }\n            }\n            if (anything) {\n                this.currentScore = bestScore;\n                this.cx = bestCX;\n                this.cy = bestCY;\n                this.rw = bestRW;\n                this.rh = bestRH;\n            }\n            else {\n                reduc++;\n                deltaD *= REDUCTION;\n                deltaR *= REDUCTION;\n            }\n        }\n    }\n    calculateScore(cx, cy, rw, rh) {\n        const { px, py, margin } = this, psz = px.length;\n        const nseg = 24;\n        let cosTheta = 1, sinTheta = 0;\n        let incrAlpha = TWOPI / nseg;\n        let closestDSQ = Vec.numberArray(Number.POSITIVE_INFINITY, psz);\n        for (let n = 0; n < nseg; n++) {\n            let alpha = n * incrAlpha;\n            let cosAlpha = Math.cos(alpha), sinAlpha = Math.sin(alpha);\n            let dx = rw * cosAlpha * cosTheta - rh * sinAlpha * sinTheta;\n            let dy = rw * cosAlpha * sinTheta + rh * sinAlpha * cosTheta;\n            let d = norm_xy(dx, dy) + margin, eth = Math.atan2(dy, dx);\n            let x = cx + d * Math.cos(eth);\n            let y = cy + d * Math.sin(eth);\n            for (let i = 0; i < psz; i++) {\n                let ii = i == psz - 1 ? 0 : i + 1;\n                if (GeomUtil.doLineSegsIntersect(cx, cy, x, y, px[i], py[i], px[ii], py[ii]))\n                    return 0;\n            }\n            for (let i = 0; i < psz; i++)\n                closestDSQ[i] = Math.min(closestDSQ[i], norm2_xy(x - px[i], y - py[i]));\n        }\n        let proxSum = 0;\n        for (let dsq of closestDSQ)\n            proxSum += 1.0 / (1 + Math.sqrt(dsq));\n        return rw * rh + proxSum;\n    }\n}\nFitRotatedEllipse.cacheVal = [];\nFitRotatedEllipse.cacheMap = new Map();\n//# sourceMappingURL=FitRotatedEllipse.js.map","export class FontData {\n    constructor() {\n        this.UNITS_PER_EM = 2048;\n        this.INV_UNITS_PER_EM = 1.0 / this.UNITS_PER_EM;\n        this.PANOSE_1 = '2 11 6 4 3 5 4 4 2 4';\n        this.ASCENT = 1638;\n        this.DESCENT = -410;\n        this.MISSING_HORZ = 2048;\n        this.MISSING_DATA = 'M256 0v1536h1536v-1536h-1536zM384 128h1280v1280h-1280v-1280z';\n        this.ASCENT_FUDGE = 0.9;\n        this.UNICODE = [\n            ' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<',\n            '=', '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n            '[', '\\\\', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\n            'x', 'y', 'z', '{', '|', '}', '~', '\\u00A0', '\\u00A1', '\\u00A2', '\\u00A3', '\\u00A4', '\\u00A5', '\\u00A6', '\\u00A7', '\\u00A8', '\\u00A9', '\\u00AA',\n            '\\u00AB', '\\u00AC', '\\u00AD', '\\u00AE', '\\u00AF', '\\u00B0', '\\u00B1', '\\u00B2', '\\u00B3', '\\u00B4', '\\u00B5', '\\u00B6', '\\u00B7', '\\u00B8', '\\u00B9',\n            '\\u00BA', '\\u00BB', '\\u00BC', '\\u00BD', '\\u00BE', '\\u00BF', '\\u00C0', '\\u00C1', '\\u00C2', '\\u00C3', '\\u00C4', '\\u00C5', '\\u00C6', '\\u00C7', '\\u00C8',\n            '\\u00C9', '\\u00CA', '\\u00CB', '\\u00CC', '\\u00CD', '\\u00CE', '\\u00CF', '\\u00D0', '\\u00D1', '\\u00D2', '\\u00D3', '\\u00D4', '\\u00D5', '\\u00D6', '\\u00D7',\n            '\\u00D8', '\\u00D9', '\\u00DA', '\\u00DB', '\\u00DC', '\\u00DD', '\\u00DE', '\\u00DF', '\\u00E0', '\\u00E1', '\\u00E2', '\\u00E3', '\\u00E4', '\\u00E5', '\\u00E6',\n            '\\u00E7', '\\u00E8', '\\u00E9', '\\u00EA', '\\u00EB', '\\u00EC', '\\u00ED', '\\u00EE', '\\u00EF', '\\u00F0', '\\u00F1', '\\u00F2', '\\u00F3', '\\u00F4', '\\u00F5',\n            '\\u00F6', '\\u00F7', '\\u00F8', '\\u00F9', '\\u00FA', '\\u00FB', '\\u00FC', '\\u00FD', '\\u00FE', '\\u037E', '\\u0384', '\\u0385', '\\u0386', '\\u0387', '\\u0388',\n            '\\u0389', '\\u038A', '\\u038C', '\\u038E', '\\u038F', '\\u0390', '\\u0391', '\\u0392', '\\u0393', '\\u0394', '\\u0395', '\\u0396', '\\u0397', '\\u0398', '\\u0399',\n            '\\u039A', '\\u039B', '\\u039C', '\\u039D', '\\u039E', '\\u039F', '\\u03A0', '\\u03A1', '\\u03A3', '\\u03A4', '\\u03A5', '\\u03A6', '\\u03A7', '\\u03A8', '\\u03A9',\n            '\\u03AA', '\\u03AB', '\\u03AC', '\\u03AD', '\\u03AE', '\\u03AF', '\\u03B0', '\\u03B1', '\\u03B2', '\\u03B3', '\\u03B4', '\\u03B5', '\\u03B6', '\\u03B7', '\\u03B8',\n            '\\u03B9', '\\u03BA', '\\u03BB', '\\u03BC', '\\u03BD', '\\u03BE', '\\u03BF', '\\u03C0', '\\u03C1', '\\u03C2', '\\u03C3', '\\u03C4', '\\u03C5', '\\u03C6', '\\u03C7',\n            '\\u03C8', '\\u03C9', '\\u03CA', '\\u03CB', '\\u03CC', '\\u03CD', '\\u03CE', '\\u2202', '\\u2206', '\\u220F', '\\u2211', '\\u2212', '\\u2215', '\\u2219', '\\u221A',\n            '\\u221E', '\\u222B', '\\u2248', '\\u2260', '\\u2264', '\\u2265'\n        ];\n        this.HORIZ_ADV_X = [\n            720, 806, 940, 1676, 1302, 2204, 1488, 550, 930, 930, 1302, 1676, 745, 930, 745, 930, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302,\n            930, 930, 1676, 1676, 1676, 1117, 2048, 1400, 1404, 1430, 1578, 1295, 1177, 1588, 1539, 862, 931, 1419, 1140, 1726, 1532, 1612, 1235, 1612, 1424,\n            1400, 1262, 1499, 1400, 2025, 1403, 1260, 1403, 930, 930, 930, 1676, 1302, 1302, 1230, 1276, 1067, 1276, 1220, 720, 1276, 1296, 562, 705, 1212, 562,\n            1992, 1296, 1243, 1276, 1276, 874, 1067, 807, 1296, 1212, 1676, 1212, 1212, 1076, 1300, 930, 1300, 1676, 720, 806, 1302, 1302, 1302, 1302, 930, 1302,\n            1302, 2048, 1117, 1320, 1676, 930, 2048, 1302, 1110, 1676, 1110, 1110, 1302, 1314, 1302, 745, 1302, 1110, 1117, 1320, 2048, 2048, 2048, 1117, 1400,\n            1400, 1400, 1400, 1400, 1400, 2016, 1430, 1295, 1295, 1295, 1295, 862, 862, 862, 862, 1588, 1532, 1612, 1612, 1612, 1612, 1612, 1676, 1612, 1499,\n            1499, 1499, 1499, 1260, 1240, 1270, 1230, 1230, 1230, 1230, 1230, 1230, 1956, 1067, 1220, 1220, 1220, 1220, 562, 562, 562, 562, 1253, 1296, 1243,\n            1243, 1243, 1243, 1243, 1676, 1243, 1296, 1296, 1296, 1296, 1212, 1276, 930, 1302, 1302, 1400, 930, 1538, 1782, 1105, 1804, 1543, 1859, 562, 1400,\n            1404, 1160, 1440, 1295, 1403, 1539, 1612, 862, 1419, 1404, 1726, 1532, 1329, 1612, 1539, 1235, 1377, 1262, 1260, 1677, 1403, 1783, 1676, 862, 1260,\n            1276, 1050, 1296, 562, 1293, 1276, 1270, 1212, 1245, 1050, 937, 1296, 1278, 562, 1212, 1212, 1310, 1212, 1030, 1243, 1305, 1280, 1040, 1291, 1016,\n            1293, 1618, 1208, 1683, 1666, 562, 1293, 1243, 1293, 1666, 1302, 1489, 1676, 1489, 1676, 740, 745, 1676, 2048, 1302, 1676, 1676, 1676, 1676\n        ];\n        this.GLYPH_DATA = [\n            '',\n            'M515 1489l-26 -1079h-170l-28 1079h224zM505 0h-204v211h204v-211z',\n            'M772 1556l-43 -579h-132l-43 579h218zM386 1556l-43 -579h-132l-43 579h218z',\n            'M1481 932h-333l-92 -376h308v-135h-343l-104 -421h-129l104 421h-270l-104 -421h-129l104 421h-298v135h333l92 376h-308v135h343l105 422h129l-105 -422h270l105 422h129l-105 -422h298v-135zM1022 934h-274l-94 -380h274z',\n            'M1160 380q0 -155 -121 -257.5t-317 -121.5v-362h-118v357q-132 1 -248 25.5t-201 63.5v198h16q19 -14 68 -40.5t95 -43.5q52 -19 121.5 -35.5t148.5 -19.5v433q-40 8 -74 15.5t-63 15.5q-163 41 -234 123.5t-71 203.5q0 148 116.5 250t325.5 119v272h118v-270 q101 -2 207 -24t178 -51v-196h-14q-75 46 -156.5 81.5t-214.5 44.5v-431q30 -5 65 -13.5t61 -13.5q149 -32 230.5 -110t81.5 -213zM604 747v413q-107 -8 -180 -58.5t-73 -140.5q0 -91 54 -137t199 -77zM971 354q0 94 -58.5 137.5t-190.5 68.5v-414q120 12 184.5 61t64.5 147 z',\n            'M884 1076q0 -224 -94.5 -333t-272.5 -109q-182 0 -275 109t-93 332q0 224 95 333t273 109q181 0 274 -110t93 -331zM1575 1489l-780 -1489h-165l780 1489h165zM2055 413q0 -224 -95 -333t-273 -109q-181 0 -274 110t-93 331q0 224 94.5 333t272.5 109q182 0 275 -109 t93 -332zM706 1076q0 172 -44.5 240t-144.5 68q-102 0 -146 -68t-44 -241t44 -240.5t146 -67.5q100 0 144.5 67.5t44.5 241.5zM1877 413q0 172 -44.5 240t-144.5 68q-102 0 -146 -68t-44 -241t44 -240.5t146 -67.5q100 0 144.5 67.5t44.5 241.5z',\n            'M792 1191q0 95 -56.5 149.5t-144.5 54.5q-92 0 -150 -61.5t-58 -150.5q0 -75 39.5 -133t170.5 -137q98 35 148.5 102.5t50.5 175.5zM986 315l-478 466q-31 -15 -62 -39.5t-62 -66.5q-28 -39 -46 -94t-18 -124q0 -146 85.5 -235.5t242.5 -89.5q93 0 184.5 45.5 t153.5 137.5zM1287 909v-96q0 -96 -25 -216t-85 -229l378 -368h-246l-229 224q-115 -142 -235 -198.5t-247 -56.5q-208 0 -345.5 121.5t-137.5 318.5q0 92 26 159t61 116q35 47 87 88.5t105 72.5q-110 72 -158.5 145t-48.5 184q0 67 26.5 127.5t79.5 110.5q50 48 130.5 78 t177.5 30q173 0 280 -87.5t107 -221.5q0 -44 -12 -99.5t-41 -99.5q-32 -49 -91 -94t-153 -77l371 -362q14 40 21 88t8 100q2 56 1.5 125t-0.5 117h195z',\n            'M386 1556l-43 -579h-136l-43 579h222z',\n            'M783 -412h-229q-177 203 -275 443t-98 541t98 541t275 443h229v-10q-81 -73 -154.5 -168.5t-136.5 -222.5q-60 -123 -97.5 -271t-37.5 -312q0 -171 36.5 -313t98.5 -270q60 -123 137 -222.5t154 -168.5v-10z',\n            'M749 572q0 -301 -98 -541t-275 -443h-229v10q77 69 154.5 168.5t136.5 222.5q62 128 98.5 270t36.5 313q0 164 -37 312t-98 271q-63 127 -136.5 222.5t-154.5 168.5v10h229q177 -203 275 -443t98 -541z',\n            'M1137 887l-64 -110l-362 213l6 -360h-129l5 360l-361 -214l-65 110l381 207l-381 207l65 110l362 -213l-6 359h129l-7 -359l363 212l64 -110l-380 -205z',\n            'M1466 572h-545v-545h-166v545h-545v160h545v545h166v-545h545v-160z',\n            'M575 285l-282 -655h-146l174 655h254z',\n            'M777 561h-624v181h624v-181z',\n            'M492 0h-239v285h239v-285z',\n            'M860 1556l-717 -1860h-173l714 1860h176z',\n            'M1167 745q0 -401 -125.5 -588.5t-389.5 -187.5q-268 0 -391.5 190t-123.5 584q0 397 125 586.5t390 189.5q268 0 391.5 -192.5t123.5 -581.5zM904 291q35 81 47.5 190.5t12.5 263.5q0 152 -12.5 264t-48.5 190q-35 77 -95.5 116t-155.5 39q-94 0 -155.5 -39t-97.5 -118 q-34 -74 -46.5 -193t-12.5 -261q0 -156 11 -261t47 -188q33 -78 93.5 -119t160.5 -41q94 0 156 39t96 118z',\n            'M1084 0h-806v152h310v998h-310v136q63 0 135 10.5t109 30.5q46 25 72.5 63.5t30.5 103.5h155v-1342h304v-152z',\n            'M1169 0h-1008v209q105 90 210.5 180t196.5 179q192 186 263 295.5t71 236.5q0 116 -76.5 181.5t-213.5 65.5q-91 0 -197 -32t-207 -98h-10v210q71 35 189.5 64t229.5 29q229 0 359 -110.5t130 -299.5q0 -85 -21.5 -158.5t-63.5 -139.5q-39 -62 -91.5 -122t-127.5 -133 q-107 -105 -221 -203.5t-213 -182.5h801v-171z',\n            'M1038 717q48 -43 79 -108t31 -168q0 -102 -37 -187t-104 -148q-75 -70 -176.5 -103.5t-222.5 -33.5q-124 0 -244 29.5t-197 64.5v209h15q85 -56 200 -93t222 -37q63 0 134 21t115 62q46 44 68.5 97t22.5 134q0 80 -25.5 132.5t-70.5 82.5q-45 31 -109 42.5t-138 11.5h-90 v166h70q152 0 242.5 63.5t90.5 185.5q0 54 -23 94.5t-64 66.5q-43 26 -92 36t-111 10q-95 0 -202 -34t-202 -96h-10v209q71 35 189.5 64.5t229.5 29.5q109 0 192 -20t150 -64q72 -48 109 -116t37 -159q0 -124 -87.5 -216.5t-206.5 -116.5v-14q48 -8 110 -33.5t105 -63.5z ',\n            'M1203 419h-221v-419h-192v419h-713v230l721 840h184v-910h221v-160zM790 579v672l-577 -672h577z',\n            'M1157 473q0 -104 -38 -199t-104 -160q-72 -70 -171.5 -107.5t-230.5 -37.5q-122 0 -235 25.5t-191 61.5v211h14q82 -52 192 -88.5t216 -36.5q71 0 137.5 20t118.5 70q44 43 66.5 103t22.5 139q0 77 -26.5 130t-73.5 85q-52 38 -126.5 53.5t-166.5 15.5q-88 0 -169.5 -12 t-140.5 -24v767h896v-175h-703v-396q43 4 88 6t78 2q121 0 212 -20.5t167 -72.5q80 -55 124 -142t44 -218z',\n            'M1191 483q0 -227 -149.5 -370.5t-366.5 -143.5q-110 0 -200 34t-159 101q-86 83 -132.5 220t-46.5 330q0 198 42.5 351t135.5 272q88 113 227 176.5t324 63.5q59 0 99 -5t81 -18v-191h-10q-28 15 -84.5 28.5t-115.5 13.5q-215 0 -343 -134.5t-149 -363.5 q84 51 165.5 77.5t188.5 26.5q95 0 167.5 -17.5t148.5 -70.5q88 -61 132.5 -154t44.5 -226zM988 475q0 93 -27.5 154t-90.5 106q-46 32 -102 42t-117 10q-85 0 -158 -20t-150 -62q-2 -22 -3 -42.5t-1 -51.5q0 -158 32.5 -249.5t89.5 -144.5q46 -44 99.5 -64.5t116.5 -20.5 q145 0 228 88.5t83 254.5z',\n            'M1173 1266l-674 -1266h-214l717 1314h-848v175h1019v-223z',\n            'M1180 415q0 -193 -150.5 -321t-378.5 -128q-242 0 -385.5 125t-143.5 320q0 124 72 224.5t203 159.5v6q-120 64 -177.5 140t-57.5 190q0 168 138 280t351 112q223 0 356 -107t133 -272q0 -101 -63 -198.5t-185 -152.5v-6q140 -60 214 -148t74 -224zM943 1142 q0 107 -82.5 170.5t-210.5 63.5q-126 0 -206.5 -60t-80.5 -162q0 -72 40.5 -124.5t122.5 -93.5q37 -18 106.5 -47t135.5 -48q99 66 137 137t38 164zM974 396q0 92 -40.5 147.5t-158.5 111.5q-47 22 -103 41t-149 53q-90 -49 -144.5 -133t-54.5 -190q0 -135 93 -223t236 -88 q146 0 233.5 75t87.5 206z',\n            'M1167 834q0 -195 -44.5 -354t-134.5 -271q-91 -114 -228 -176t-322 -62q-52 0 -98 5.5t-82 17.5v191h10q29 -15 82 -28.5t118 -13.5q221 0 346.5 132.5t145.5 365.5q-93 -56 -175 -80t-179 -24q-92 0 -166.5 18t-149.5 70q-88 61 -132.5 155t-44.5 225q0 228 150 371 t366 143q108 0 200 -33.5t161 -100.5q85 -83 131 -213.5t46 -337.5zM965 877q0 155 -32 249t-88 146q-47 45 -101 64.5t-117 19.5q-144 0 -227.5 -90t-83.5 -253q0 -95 27 -155t91 -105q45 -31 99 -41.5t120 -10.5q78 0 158 21t150 61q1 21 2.5 41.5t1.5 52.5z',\n            'M585 832h-239v285h239v-285zM585 0h-239v285h239v-285z',\n            'M585 832h-239v285h239v-285zM658 285l-282 -655h-146l174 655h254z',\n            'M1408 77l-1154 513v124l1154 513v-180l-910 -395l910 -395v-180z',\n            'M1431 782h-1186v160h1186v-160zM1431 362h-1186v160h1186v-160z',\n            'M1422 590l-1154 -513v180l910 395l-910 395v180l1154 -513v-124z',\n            'M1005 1139q0 -98 -35 -174.5t-92 -135.5q-56 -57 -129 -107t-155 -97v-225h-179v305q65 37 140.5 81t123.5 89q58 52 90 107.5t32 141.5q0 113 -76.5 168.5t-197.5 55.5q-108 0 -204.5 -34t-152.5 -69h-10v204q70 27 177.5 48.5t203.5 21.5q215 0 339.5 -104.5 t124.5 -275.5zM610 0h-204v211h204v-211z',\n            'M1870 663q0 -139 -40.5 -269t-115.5 -237h-440l-27 116q-74 -60 -142 -92t-156 -32q-168 0 -268.5 127t-100.5 355q0 227 123 362t294 135q73 0 129 -16.5t121 -49.5v48h159v-842h243q42 75 63.5 187.5t21.5 201.5q0 164 -45.5 298t-133.5 230t-218 147.5t-295 51.5 q-160 0 -292.5 -58t-227.5 -156q-96 -98 -150.5 -234.5t-54.5 -290.5q0 -165 52 -301.5t147 -233.5q99 -101 232 -152.5t290 -51.5q86 0 177.5 11t175.5 35v-142q-97 -21 -181 -28.5t-173 -7.5q-186 0 -345 63.5t-273 177.5q-115 115 -179 276t-64 356q0 185 67 344.5 t183 276.5t275 184t340 67q196 0 350 -62t260 -174t162.5 -269.5t56.5 -350.5zM1245 408v518q-63 29 -113 41.5t-107 12.5q-129 0 -202 -90t-73 -256q0 -163 58 -246.5t181 -83.5q67 0 134 31t122 73z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523z',\n            'M1323 458q0 -111 -42 -196t-113 -140q-84 -66 -184.5 -94t-255.5 -28h-528v1489h441q163 0 244 -12t155 -50q82 -43 119 -110.5t37 -161.5q0 -106 -54 -180.5t-144 -119.5v-8q151 -31 238 -132.5t87 -256.5zM990 1129q0 54 -18 91t-58 60q-47 27 -114 33.5t-166 6.5h-236 v-430h256q93 0 148 9.5t102 39.5t66.5 77.5t19.5 112.5zM1117 450q0 90 -27 143t-98 90q-48 25 -116.5 32.5t-166.5 7.5h-311v-554h262q130 0 213 13.5t136 49.5q56 39 82 89t26 129z',\n            'M1350 108q-55 -24 -99.5 -45t-116.5 -44q-61 -19 -132.5 -32.5t-157.5 -13.5q-162 0 -294.5 45.5t-230.5 142.5q-96 95 -150 241.5t-54 340.5q0 184 52 329t150 245q95 97 229.5 148t298.5 51q120 0 239.5 -29t265.5 -102v-235h-15q-123 103 -244 150t-259 47 q-113 0 -203.5 -36.5t-161.5 -113.5q-69 -75 -107.5 -189.5t-38.5 -264.5q0 -157 42.5 -270t109.5 -184q70 -74 163.5 -109.5t197.5 -35.5q143 0 268 49t234 147h14v-232z',\n            'M1458 743q0 -203 -88.5 -368t-235.5 -256q-102 -63 -227.5 -91t-330.5 -28h-376v1489h372q218 0 346.5 -31.5t217.5 -86.5q152 -95 237 -253t85 -375zM1251 746q0 175 -61 295t-182 189q-88 50 -187 69.5t-237 19.5h-186v-1149h186q143 0 249.5 21t195.5 78 q111 71 166.5 187t55.5 290z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176z',\n            'M1151 1313h-753v-420h647v-176h-647v-717h-198v1489h951v-176z',\n            'M1442 110q-122 -56 -266.5 -97.5t-279.5 -41.5q-174 0 -319 48t-247 144q-103 97 -159 242.5t-56 340.5q0 357 208.5 563.5t572.5 206.5q127 0 259.5 -30.5t285.5 -103.5v-235h-18q-31 24 -90 63t-116 65q-69 31 -156.5 51.5t-198.5 20.5q-250 0 -395.5 -160.5 t-145.5 -434.5q0 -289 152 -449.5t414 -160.5q96 0 191.5 19t167.5 49v365h-399v174h595v-639z',\n            'M1339 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152z',\n            'M746 387q0 -196 -119.5 -302t-320.5 -106q-48 0 -128 8.5t-134 20.5v185h11q41 -14 101 -29t123 -15q92 0 146.5 21t80.5 60q27 40 34.5 98t7.5 134v869h-315v158h513v-1102z',\n            'M1397 0h-257l-589 663l-148 -158v-505h-198v1489h198v-777l723 777h240l-665 -700z',\n            'M1142 0h-942v1489h198v-1313h744v-176z',\n            'M1526 0h-198v1283l-414 -873h-118l-411 873v-1283h-185v1489h270l397 -829l384 829h275v-1489z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1174 1039q0 -99 -34.5 -183.5t-96.5 -146.5q-77 -77 -182 -115.5t-265 -38.5h-198v-555h-198v1489h404q134 0 227 -22.5t165 -70.5q85 -57 131.5 -142t46.5 -215zM968 1034q0 77 -27 134t-82 93q-48 31 -109.5 44.5t-155.5 13.5h-196v-595h167q120 0 195 21.5t122 68.5 q47 48 66.5 101t19.5 119z',\n            'M1528 -365q-60 -15 -118.5 -21.5t-119.5 -6.5q-174 0 -279.5 95.5t-114.5 273.5q-24 -4 -46.5 -5.5t-43.5 -1.5q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5 q91 -100 139.5 -245t48.5 -329q0 -273 -111.5 -460t-299.5 -262q4 -114 54 -177t182 -63q41 0 97.5 12.5t80.5 22.5h27v-182zM1292 744q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1432 0h-257l-498 592h-279v-592h-198v1489h417q135 0 225 -17.5t162 -62.5q81 -51 126.5 -128.5t45.5 -196.5q0 -161 -81 -269.5t-223 -163.5zM969 1070q0 64 -22.5 113.5t-74.5 83.5q-43 29 -102 40.5t-139 11.5h-233v-562h200q94 0 164 16.5t119 61.5q45 42 66.5 96.5 t21.5 138.5z',\n            'M1282 425q0 -87 -40.5 -172t-113.5 -144q-80 -64 -186.5 -100t-256.5 -36q-161 0 -289.5 30t-261.5 89v248h14q113 -94 261 -145t278 -51q184 0 286.5 69t102.5 184q0 99 -48.5 146t-147.5 73q-75 20 -162.5 33t-185.5 33q-198 42 -293.5 143.5t-95.5 264.5 q0 187 158 306.5t401 119.5q157 0 288 -30t232 -74v-234h-14q-85 72 -223.5 119.5t-283.5 47.5q-159 0 -255.5 -66t-96.5 -170q0 -93 48 -146t169 -81q64 -14 182 -34t200 -41q166 -44 250 -133t84 -249z',\n            'M1262 1313h-532v-1313h-198v1313h-532v176h1262v-176z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891z',\n            'M1374 1489l-542 -1489h-264l-542 1489h212l467 -1310l467 1310h202z',\n            'M1933 1489l-387 -1489h-223l-313 1236l-306 -1236h-218l-394 1489h203l313 -1238l308 1238h201l311 -1250l311 1250h194z',\n            'M1336 1489l-514 -736l513 -753h-229l-406 613l-416 -613h-216l519 744l-507 745h228l401 -605l410 605h217z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211z',\n            'M1288 0h-1162v184l913 1129h-879v176h1106v-179l-922 -1134h944v-176z',\n            'M759 -392h-520v1948h520v-143h-346v-1662h346v-143z',\n            'M960 -304h-173l-717 1860h176z',\n            'M691 -392h-520v143h346v1662h-346v143h520v-1948z',\n            'M1490 684h-198l-455 627l-454 -629h-197l589 807h126z',\n            'M1306 -300h-1310v120h1310v-120z',\n            'M762 1302h-149l-273 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5z',\n            'M1168 567q0 -140 -39.5 -252t-106.5 -188q-71 -79 -156 -118.5t-187 -39.5q-95 0 -166 22.5t-140 60.5l-12 -52h-176v1556h188v-556q79 65 168 106.5t200 41.5q198 0 312.5 -152t114.5 -429zM974 562q0 200 -66 303.5t-213 103.5q-82 0 -166 -35.5t-156 -91.5v-640 q80 -36 137.5 -50t130.5 -14q156 0 244.5 102.5t88.5 321.5z',\n            'M1011 70q-94 -45 -178.5 -70t-179.5 -25q-121 0 -222 35.5t-173 107.5q-73 72 -113 182t-40 257q0 274 150.5 430t397.5 156q96 0 188.5 -27t169.5 -66v-209h-10q-86 67 -177.5 103t-178.5 36q-160 0 -252.5 -107.5t-92.5 -315.5q0 -202 90.5 -310.5t254.5 -108.5 q57 0 116 15t106 39q41 21 77 44.5t57 40.5h10v-207z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -18.5t143 -57.5v484h188v-1556zM903 275v641q-76 34 -136 47t-131 13q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640z',\n            'M786 1374h-10q-31 9 -81 18.5t-88 9.5q-121 0 -175.5 -53.5t-54.5 -193.5v-38h339v-158h-333v-959h-188v959h-127v158h127v37q0 199 99 305.5t286 106.5q63 0 113.5 -6t92.5 -14v-172z',\n            'M1091 127q0 -284 -129 -417t-397 -133q-89 0 -173.5 12.5t-166.5 35.5v192h10q46 -18 146 -44.5t200 -26.5q96 0 159 23t98 64q35 39 50 94t15 123v102q-85 -68 -162.5 -101.5t-197.5 -33.5q-200 0 -317.5 144.5t-117.5 407.5q0 144 40.5 248.5t110.5 180.5 q65 71 158 110.5t185 39.5q97 0 162.5 -19.5t138.5 -59.5l12 48h176v-990zM903 307v609q-75 34 -139.5 48.5t-128.5 14.5q-155 0 -244 -104t-89 -302q0 -188 66 -285t219 -97q82 0 164.5 31.5t151.5 84.5z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1556h188v-563q88 73 182 114t193 41q181 0 276 -109t95 -314v-725z',\n            'M387 1304h-212v195h212v-195zM375 0h-188v1117h188v-1117z',\n            'M533 1304h-212v195h212v-195zM521 -27q0 -196 -100 -296t-268 -100q-40 0 -105.5 8t-109.5 20v179h10q28 -11 75.5 -25t92.5 -14q72 0 116 20t66 60t28.5 96.5t6.5 137.5v900h-233v158h421v-1144z',\n            'M1199 0h-248l-448 489l-122 -116v-373h-188v1556h188v-998l543 559h237l-519 -516z',\n            'M375 0h-188v1556h188v-1556z',\n            'M1815 0h-188v636q0 72 -6.5 139t-27.5 107q-23 43 -66 65t-124 22q-79 0 -158 -39.5t-158 -100.5q3 -23 5 -53.5t2 -60.5v-715h-188v636q0 74 -6.5 140.5t-27.5 106.5q-23 43 -66 64.5t-124 21.5q-77 0 -154.5 -38t-154.5 -97v-834h-188v1117h188v-124q88 73 175.5 114 t186.5 41q114 0 193.5 -48t118.5 -133q114 96 208 138.5t201 42.5q184 0 271.5 -111.5t87.5 -311.5v-725z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-725z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z',\n            'M1168 572q0 -136 -39 -248.5t-110 -190.5q-66 -74 -155.5 -114.5t-189.5 -40.5q-87 0 -157.5 19t-143.5 59v-468h-188v1529h188v-117q75 63 168.5 105.5t199.5 42.5q202 0 314.5 -152.5t112.5 -423.5zM974 567q0 202 -69 302t-212 100q-81 0 -163 -35t-157 -92v-633 q80 -36 137.5 -49t130.5 -13q157 0 245 106t88 314z',\n            'M1091 -412h-188v538q-87 -75 -173 -111.5t-186 -36.5q-199 0 -317.5 153.5t-118.5 423.5q0 144 41.5 254.5t109.5 185.5q66 73 155 113t188 40q90 0 159.5 -20t141.5 -59l12 48h176v-1529zM903 284v632q-78 35 -138 49t-130 14q-163 0 -248 -110.5t-85 -304.5 q0 -196 68.5 -301.5t215.5 -105.5q82 0 164 35.5t153 91.5z',\n            'M882 912h-10q-42 10 -81.5 14.5t-93.5 4.5q-87 0 -168 -38.5t-156 -99.5v-793h-188v1117h188v-165q112 90 197.5 127.5t174.5 37.5q49 0 71 -2.5t66 -9.5v-193z',\n            'M983 322q0 -153 -126.5 -251t-345.5 -98q-124 0 -227.5 29.5t-173.5 64.5v211h10q89 -67 198 -106.5t209 -39.5q124 0 194 40t70 126q0 66 -38 100t-146 58q-40 9 -104.5 21t-117.5 26q-147 39 -208.5 114.5t-61.5 185.5q0 69 28.5 130t86.5 109q56 47 142.5 74.5 t193.5 27.5q100 0 202.5 -24.5t170.5 -59.5v-201h-10q-72 53 -175 89.5t-202 36.5q-103 0 -174 -39.5t-71 -117.5q0 -69 43 -104q42 -35 136 -57q52 -12 116.5 -24t107.5 -22q131 -30 202 -103q71 -74 71 -196z',\n            'M765 10q-53 -14 -115.5 -23t-111.5 -9q-171 0 -260 92t-89 295v594h-127v158h127v321h188v-321h388v-158h-388v-509q0 -88 4 -137.5t28 -92.5q22 -40 60.5 -58.5t117.5 -18.5q46 0 96 13.5t72 22.5h10v-169z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117z',\n            'M1151 1117l-452 -1117h-189l-449 1117h204l346 -889l343 889h197z',\n            'M1590 1117l-291 -1117h-174l-287 861l-285 -861h-173l-294 1117h196l205 -865l279 865h155l286 -865l194 865h189z',\n            'M1152 0h-237l-317 429l-319 -429h-219l436 557l-432 560h237l315 -422l316 422h220l-439 -550z',\n            'M1151 1117l-652 -1529h-201l208 466l-445 1063h204l343 -828l346 828h197z',\n            'M995 0h-902v139l651 821h-637v157h871v-134l-654 -824h671v-159z',\n            'M1113 -392h-150q-179 0 -290.5 99.5t-111.5 287.5v149q0 169 -83 264.5t-254 95.5h-51v156h51q171 0 254 95.5t83 264.5v149q0 188 111.5 287.5t290.5 99.5h150v-138h-114q-136 0 -197.5 -63t-61.5 -203v-175q0 -139 -77 -233.5t-214 -149.5v-24q137 -55 214 -149.5 t77 -233.5v-175q0 -140 61.5 -203t197.5 -63h114v-138z',\n            'M552 -392h-174v1948h174v-1948z',\n            'M1127 504h-51q-171 0 -254 -95.5t-83 -264.5v-149q0 -188 -111.5 -287.5t-290.5 -99.5h-150v138h114q136 0 197.5 63t61.5 203v175q0 139 77 233.5t214 149.5v24q-137 55 -214 149.5t-77 233.5v175q0 140 -61.5 203t-197.5 63h-114v138h150q179 0 290.5 -99.5 t111.5 -287.5v-149q0 -169 83 -264.5t254 -95.5h51v-156z',\n            'M1489 927q-2 -99 -22.5 -195t-65.5 -171q-46 -77 -111 -121t-165 -44q-94 0 -167 39.5t-157 141.5q-102 125 -148 157t-96 32q-94 0 -144 -87.5t-59 -283.5h-167q2 100 22.5 194.5t64.5 171.5q43 74 112 119.5t165 45.5q93 0 166.5 -38.5t158.5 -142.5q80 -98 131 -143.5 t112 -45.5q103 0 151.5 101t51.5 270h167z',\n            '',\n            'M505 1278h-204v211h204v-211zM515 0h-224l26 1079h170z',\n            'M1120 74q-71 -30 -161 -53.5t-194 -26.5v-355h-118v359q-227 21 -357.5 165t-130.5 394q0 242 133.5 391.5t354.5 171.5v355h118v-351q104 -3 197 -25t158 -53v-203h-11q-55 44 -142 85t-202 50v-839q120 10 206.5 52.5t137.5 83.5h11v-201zM647 142v834 q-135 -20 -216 -125t-81 -294q0 -181 76 -286t221 -129z',\n            'M1163 0h-1026v207q118 32 169.5 126.5t51.5 279.5h-176v138h176v310q0 200 126.5 328.5t331.5 128.5q105 0 181 -17t140 -34v-206h-10q-62 42 -138 66t-162 24q-140 0 -209.5 -82.5t-69.5 -226.5v-291h415v-138h-415v-61q0 -126 -62 -219.5t-160 -150.5v-11h837v-171z ',\n            'M1168 257l-110 -110l-236 234q-44 -26 -81 -37t-89 -11q-46 0 -89.5 12.5t-79.5 35.5l-236 -236l-109 113l233 234q-23 37 -35 81.5t-12 87.5q0 52 11 88.5t37 79.5l-234 237l111 110l235 -235q36 23 79.5 35.5t88.5 12.5q44 0 88 -12t81 -35l234 234l113 -109l-235 -237 q24 -38 36 -79.5t12 -89.5q0 -45 -12.5 -89t-35.5 -80zM832 661q0 73 -52.5 129t-127.5 56q-73 0 -126.5 -55t-53.5 -130q0 -74 52.5 -129.5t127.5 -55.5q73 0 126.5 54.5t53.5 130.5z',\n            'M1191 1489l-448 -831v-94h372v-138h-370v-426h-188v426h-370v138h372v73l-451 852h212l332 -659l336 659h203z',\n            'M552 758h-174v798h174v-798zM552 -392h-174v798h174v-798z',\n            'M1128 601q0 -106 -59 -187t-158 -136v-7q97 -46 141 -118.5t44 -162.5q0 -77 -33 -146t-98 -119q-72 -56 -169 -83t-221 -27q-87 0 -170.5 13.5t-175.5 44.5v194h10q79 -37 169 -62t198 -25q134 0 215 48.5t81 135.5q0 56 -19.5 88.5t-64.5 57.5q-41 23 -113 41.5 t-154 38.5q-214 52 -296 133q-83 81 -83 210q0 98 57 182.5t159 141.5v7q-101 48 -143 121t-42 162q0 81 32 146.5t99 117.5q64 50 163.5 79t227.5 29q87 0 171 -14t175 -43v-194h-10q-58 27 -152.5 57t-215.5 30q-127 0 -211.5 -46t-84.5 -133q0 -57 21.5 -92.5t64.5 -58.5 t109 -41.5t157 -39.5q200 -46 290 -125q89 -79 89 -218zM881 399q28 33 43 65.5t15 90.5q0 51 -16.5 86t-45.5 58q-28 24 -67 39.5t-83 27.5q-39 11 -85.5 21.5t-116.5 30.5q-18 -9 -49 -31.5t-53 -46.5q-24 -26 -43 -69t-19 -92q0 -50 15.5 -85t44.5 -59q27 -23 67.5 -39 t84.5 -27q38 -10 86 -22t115 -31q20 11 53 34.5t54 48.5z',\n            'M958 1304h-199v195h199v-195zM545 1304h-199v195h199v-195z',\n            'M1889 655q0 -358 -253.5 -611.5t-611.5 -253.5t-611.5 253.5t-253.5 611.5t253.5 611.5t611.5 253.5t611.5 -253.5t253.5 -611.5zM1773 655q0 310 -219.5 532t-529.5 222t-529.5 -222t-219.5 -532t219.5 -532t529.5 -222t529.5 222t219.5 532zM1375 258 q-86 -39 -165.5 -58.5t-157.5 -19.5q-227 0 -359 123t-132 357q0 225 134.5 354t356.5 129q89 0 175 -24t148 -52v-181h-16q-54 40 -138.5 75t-173.5 35q-142 0 -221.5 -85.5t-79.5 -250.5q0 -159 76.5 -246t224.5 -87q83 0 161.5 29t150.5 81h16v-179z',\n            'M944 554h-170v94q-28 -20 -52.5 -38.5t-68.5 -37.5q-45 -20 -85.5 -30.5t-113.5 -10.5q-128 0 -215.5 85t-87.5 217q0 106 46.5 173.5t123.5 103.5q78 36 197.5 51.5t255.5 21.5v18q0 53 -18 85t-51 51q-34 18 -77.5 23t-91.5 5q-84 0 -168 -24t-123 -38h-14v172 q45 13 137 29t169 16q217 0 312 -84.5t95 -243.5v-638zM774 796v245q-69 -4 -160.5 -12t-145.5 -23q-64 -18 -103 -56.5t-39 -106.5q0 -76 45.5 -114t139.5 -38q82 0 147.5 33.5t115.5 71.5z',\n            'M1146 191l-528 419v85l528 418v-188l-357 -273l357 -273v-188zM716 162l-550 446v89l550 445v-196l-371 -294l371 -294v-196z',\n            'M1456 57h-171v545h-1075v160h1246v-705z',\n            'M777 561h-624v181h624v-181z',\n            'M1889 655q0 -358 -253.5 -611.5t-611.5 -253.5t-611.5 253.5t-253.5 611.5t253.5 611.5t611.5 253.5t611.5 -253.5t253.5 -611.5zM1773 655q0 310 -219.5 532t-529.5 222t-529.5 -222t-219.5 -532t219.5 -532t529.5 -222t529.5 222t219.5 532zM1581 215h-223l-331 355 h-162v-355h-165v915h312q94 0 155 -8t120 -39q63 -34 92.5 -82.5t29.5 -121.5q0 -97 -56.5 -161.5t-155.5 -102.5zM1229 868q0 36 -14 64t-47 46q-31 17 -66 22t-88 5h-149v-309h127q62 0 107 9.5t74 32.5q31 25 43.5 55t12.5 75z',\n            'M1306 1668h-1305l-5 120h1310v-120z',\n            'M956 1116q0 -168 -116 -284t-285 -116t-285 115.5t-116 284.5q0 168 116 284t285 116q170 0 285.5 -116t115.5 -284zM791 1116q0 102 -67 171.5t-169 69.5t-169 -69.5t-67 -171.5q0 -104 68.5 -172.5t167.5 -68.5q102 0 169 70t67 171z',\n            'M1461 179h-1246v158h540v422h-540v158h540v545h166v-545h540v-158h-540v-422h540v-158z',\n            'M967 566h-760v156q100 62 183.5 117t134.5 96q131 103 168 154.5t37 135.5q0 69 -53.5 107t-143.5 38q-89 0 -175 -30.5t-134 -61.5h-13v180q71 26 158.5 43.5t174.5 17.5q180 0 273.5 -78.5t93.5 -203.5q0 -99 -48.5 -174.5t-163.5 -165.5q-55 -43 -132.5 -94 t-143.5 -92h544v-145z',\n            'M956 817q0 -75 -33 -131.5t-89 -90.5q-57 -35 -131 -51.5t-163 -16.5q-94 0 -176.5 15t-156.5 43v179h14q41 -36 138.5 -65.5t190.5 -29.5q100 0 166.5 35.5t66.5 110.5q0 85 -59 115t-171 30h-143v141h128q112 0 165.5 38.5t53.5 106.5q0 61 -49.5 96.5t-153.5 35.5 q-77 0 -174.5 -31t-141.5 -67h-14v178q74 27 160.5 44.5t176.5 17.5q175 0 271.5 -68t96.5 -174q0 -89 -55 -146t-144 -83v-8q95 -17 160.5 -72.5t65.5 -151.5z',\n            'M963 1676l-273 -374h-149l179 374h243z',\n            'M1124 0h-178l-10 118q-59 -65 -123.5 -102t-155.5 -37q-86 0 -149.5 35t-129.5 99v-525h-188v1529h188v-838q32 -39 109.5 -80t168.5 -41q93 0 159.5 33.5t120.5 93.5v832h188v-1117z',\n            'M1106 -363h-148v1722h-214v-1722h-149v956q-206 5 -332 129t-126 328q0 207 130 323t373 116h466v-1852z',\n            'M492 511h-239v283h239v-283z',\n            'M880 -89q0 -162 -91.5 -248t-237.5 -86q-37 0 -95 7t-103 19v160h9q26 -10 70 -23t94 -13q104 0 153 39t49 127q0 29 -3 65.5t-6 61.5h153q2 -19 5 -45t3 -64z',\n            'M914 566h-615v122h234v568h-242v112q45 0 99 6.5t84 18.5q37 16 59 38t25 62h135v-805h221v-122z',\n            'M996 1025q0 -235 -122 -364.5t-315 -129.5q-201 0 -319.5 132.5t-118.5 361.5t118.5 362t319.5 133q193 0 315 -130t122 -365zM814 1025q0 172 -67.5 258t-187.5 86q-122 0 -189 -87t-67 -257t67 -256.5t189 -86.5q120 0 187.5 85.5t67.5 257.5z',\n            'M1154 608l-550 -446v196l371 294l-371 294v196l550 -445v-89zM702 610l-528 -419v188l357 273l-357 273v188l528 -418v-85z',\n            'M545 565h-165v681h-209v117q102 0 165 22t72 108h137v-928zM1410 1489l-780 -1489h-165l780 1489h165zM1857 220h-163v-220h-150v220h-465v185l466 539h149v-591h163v-133zM1548 353v400l-353 -400h353z',\n            'M545 565h-165v681h-209v117q102 0 165 22t72 108h137v-928zM1410 1489l-780 -1489h-165l780 1489h165zM1955 0h-688v148q91 69 158 121t106 89q109 103 141 157.5t32 136.5q0 70 -44 107t-120 37q-70 0 -141.5 -30t-112.5 -62h-15v179q65 27 140.5 44t152.5 17 q157 0 241.5 -79t84.5 -201q0 -93 -41 -167t-147 -168q-49 -43 -119.5 -96t-125.5 -94h498v-139z',\n            'M793 826q0 -71 -30 -127t-78 -90q-53 -37 -114.5 -53t-140.5 -16q-82 0 -153.5 15t-136.5 43v175h17q37 -35 114 -64.5t156 -29.5q84 0 139 36.5t55 108.5q0 83 -50 112.5t-141 29.5h-140v139h125q87 0 134.5 38t47.5 104q0 60 -41 95.5t-128 35.5q-66 0 -142.5 -31 t-113.5 -66h-17v175q64 27 139 44t154 17q152 0 237 -70t85 -168q0 -87 -48.5 -143.5t-125.5 -82.5v-8q80 -16 138.5 -70.5t58.5 -148.5zM1500 1489l-780 -1489h-165l780 1489h165zM1913 220h-163v-220h-150v220h-465v185l466 539h149v-591h163v-133zM1604 353v400 l-353 -400h353z',\n            'M712 1278h-204v211h204v-211zM958 40q-83 -30 -176 -50t-205 -20q-215 0 -339.5 104.5t-124.5 275.5q0 98 34.5 173t93.5 137q58 62 136.5 112.5t146.5 91.5v225h179v-305q-60 -33 -139 -81.5t-125 -88.5q-54 -47 -88 -109t-34 -140q0 -113 76.5 -168.5t197.5 -55.5 q103 0 201.5 33t155.5 70h10v-204z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM862 1675h-149l-273 374h243z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM955 2049l-273 -374h-149l179 374h243z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1033 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1119 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5 t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1005 1677h-199v195h199v-195zM592 1677h-199v195h199v-195z',\n            'M1374 0h-211l-148 415h-640l-148 -415h-201l519 1407q-89 44 -142.5 123.5t-53.5 181.5q0 143 102 240t248 97q147 0 248.5 -97t101.5 -240q0 -100 -52.5 -181.5t-141.5 -123.5zM899 1710q0 86 -57 143.5t-143 57.5t-143 -58t-57 -143q0 -86 57.5 -143.5t142.5 -57.5 q86 0 143 57.5t57 143.5zM953 585l-258 715l-259 -715h517z',\n            'M1901 0h-944v556h-524l-212 -556h-207l594 1489h1293v-176h-749v-408h749v-176h-749v-553h749v-176zM957 723v601h-219l-239 -601h458z',\n            'M1350 108q-55 -24 -99.5 -45t-116.5 -44q-11 -3 -24 -7.5t-31 -7.5q2 -19 3.5 -44.5t1.5 -48.5q0 -162 -93.5 -248t-240.5 -86q-38 0 -97.5 7t-104.5 19v162h9q26 -10 71.5 -24t95.5 -14q106 0 155 40t49 126q0 19 -1 41.5t-3 42.5q-19 -2 -40.5 -3t-39.5 -1 q-162 0 -294.5 45.5t-230.5 142.5q-96 95 -150 241.5t-54 340.5q0 184 52 329t150 245q95 97 229.5 148t298.5 51q120 0 239.5 -29t265.5 -102v-235h-15q-123 103 -244 150t-259 47q-113 0 -203.5 -36.5t-161.5 -113.5q-69 -75 -107.5 -189.5t-38.5 -264.5q0 -157 42.5 -270 t109.5 -184q70 -74 163.5 -109.5t197.5 -35.5q143 0 268 49t234 147h14v-232z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM822 1675h-149l-273 374h243z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM993 2049l-273 -374h-149l179 374h243z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM1031 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM1038 1677h-199v195h199v-195zM625 1677h-199v195h199v-195z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM568 1675h-149l-273 374h243z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM725 2049l-273 -374h-149l179 374h243z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM776 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM738 1677h-199v195h199v-195zM325 1677h-199v195h199v-195z',\n            'M1468 743q0 -203 -88.5 -368t-235.5 -256q-102 -63 -227.5 -91t-330.5 -28h-376v740h-196v143h196v606h372q218 0 347 -31.5t217 -86.5q152 -95 237 -253t85 -375zM1261 746q0 175 -61 295t-182 189q-88 50 -187 69.5t-237 19.5h-188v-436h361v-143h-361v-570h188 q143 0 249.5 21t195.5 78q111 71 166.5 187t55.5 290z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489zM1208 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5 q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM932 1675h-149l-273 374h243z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1083 2049l-273 -374h-149l179 374h243z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1136 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1207 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228 t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1307 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1289 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1108 1677h-199v195h199v-195zM695 1677h-199v195h199v-195z',\n            'M1385 216l-111 -111l-436 440l-436 -440l-111 111l440 436l-440 436l111 111l436 -440l436 440l111 -111l-440 -436z',\n            'M1498 744q0 -184 -49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-115 0 -215.5 29t-179.5 84l-159 -228h-132l205 294q-101 100 -155.5 250t-54.5 346q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q118 0 215 -27.5t179 -82.5l142 201h132 l-188 -268q101 -100 156.5 -248.5t55.5 -350.5zM1097 1260q-57 46 -129 68.5t-161 22.5q-110 0 -200 -38.5t-156 -116.5q-64 -76 -98.5 -190.5t-34.5 -261.5q0 -140 29.5 -252t87.5 -188zM1295 744q0 139 -30 253t-88 189l-664 -957q60 -45 132.5 -68t161.5 -23 q110 0 201.5 40t153.5 116q67 82 100 194.5t33 255.5z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM932 1675h-149l-273 374h243z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1073 2049l-273 -374h-149l179 374h243z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1084 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1056 1677h-199v195h199v-195zM643 1677h-199v195h199v-195z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM935 2049l-273 -374h-149l179 374h243z',\n            'M1174 787q0 -92 -35 -176.5t-95 -141.5q-78 -75 -187.5 -111t-260.5 -36h-198v-322h-198v1489h198v-270h205q133 0 230 -22.5t164 -66.5q83 -53 130 -138t47 -205zM968 782q0 72 -26 125.5t-82 88.5q-48 30 -112 42.5t-154 12.5h-196v-563h167q119 0 195 20.5t123 65.5 q44 41 64.5 92t20.5 116z',\n            'M1165 481q0 -214 -135.5 -359.5t-354.5 -145.5q-44 0 -101.5 7.5t-93.5 20.5v165h10q42 -24 91.5 -33t105.5 -9q74 0 129 29t88 78q35 52 50.5 115.5t15.5 139.5q0 166 -105.5 250.5t-303.5 84.5v150q157 0 234 59.5t77 188.5q0 35 -11 68t-41 64q-27 29 -71 46.5 t-105 17.5q-57 0 -103 -14.5t-86 -53.5q-37 -36 -59.5 -102t-22.5 -161v-1087h-188v1080q0 124 36 215.5t100 153.5q60 58 149.5 87.5t183.5 29.5q183 0 297.5 -87t114.5 -238q0 -112 -71 -201t-184 -121v-9q164 -37 259 -148.5t95 -280.5z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM738 1302h-149l-273 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM934 1676l-273 -374h-149l179 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM961 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM1038 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5 q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM926 1304h-199v195h199v-195zM513 1304h-199v195h199v-195z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM956 1630q0 -143 -102 -242t-248 -99q-144 0 -247 98.5t-103 242.5 q0 143 102 241t248 98q147 0 248.5 -98t101.5 -241zM811 1630q0 86 -58.5 145.5t-146.5 59.5t-146.5 -59t-58.5 -146t59 -146t146 -59q88 0 146.5 59t58.5 146z',\n            'M1855 559h-819q0 -114 30 -195t85 -133q52 -48 123 -70.5t157 -22.5q111 0 217.5 41.5t172.5 93.5h12v-205q-78 -35 -184.5 -64.5t-215.5 -29.5q-166 0 -284.5 52t-194.5 155q-21 -19 -67 -59t-96 -68q-63 -36 -137 -59.5t-189 -23.5q-150 0 -255.5 97t-105.5 249 q0 124 54 200.5t155 118.5q95 39 241 53t308 17v61q0 65 -23 107.5t-64 65.5q-40 23 -96 31.5t-116 8.5q-79 0 -168.5 -21t-179.5 -57h-13v191q55 15 158 34t204 19q159 0 264.5 -46.5t162.5 -137.5q69 82 170 134t226 52q217 0 342.5 -128t125.5 -379v-82zM1673 703 q-5 68 -23.5 119t-50.5 88q-34 39 -88.5 61t-133.5 22q-133 0 -223 -75t-115 -215h634zM894 298q-20 53 -30.5 119t-10.5 141q-105 -3 -201 -7.5t-178 -25.5q-79 -20 -127.5 -65.5t-48.5 -128.5q0 -95 58 -141t176 -46q99 0 195.5 43t166.5 111z',\n            'M1011 70q-33 -15 -71.5 -30.5t-67.5 -24.5q3 -19 5.5 -47.5t2.5 -56.5q0 -162 -91.5 -248t-237.5 -86q-37 0 -95 7t-103 19v160h9q26 -10 70 -23t94 -13q104 0 153 39t49 127q0 22 -1.5 45t-3.5 43q-16 -2 -30.5 -4t-39.5 -2q-121 0 -222 35.5t-173 107.5 q-73 72 -113 182t-40 257q0 274 150.5 430t397.5 156q96 0 188.5 -27t169.5 -66v-209h-10q-86 67 -177.5 103t-178.5 36q-160 0 -252.5 -107.5t-92.5 -315.5q0 -202 90.5 -310.5t254.5 -108.5q57 0 116 15t106 39q41 21 77 44.5t57 40.5h10v-207z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM759 1302h-149l-273 374h243z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM960 1676l-273 -374h-149l179 374h243z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM986 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM951 1304h-199v195h199v-195zM538 1304h-199v195h199v-195z',\n            'M375 0h-188v1117h188v-1117zM401 1302h-149l-273 374h243z',\n            'M375 0h-188v1117h188v-1117zM582 1676l-273 -374h-149l179 374h243z',\n            'M572 1297h-151l-143 267l-142 -267h-147l178 379h227zM375 0h-188v1117h188v-1117z',\n            'M557 1304h-189v195h189v-195zM194 1304h-189v195h189v-195zM375 0h-188v1117h188v-1117z',\n            'M1137 637q0 -324 -142 -496t-383 -172q-229 0 -367.5 135t-138.5 380q0 226 137 358t339 132q108 0 185.5 -26.5t163.5 -79.5q-32 112 -99.5 219t-154.5 181l-264 -162l-66 97l237 142q-84 67 -156 107.5t-165 87.5v16h295q35 -25 84 -58.5t86 -59.5l210 128l66 -97 l-186 -109q153 -147 236 -325.5t83 -397.5zM847 226q49 59 75 143.5t26 234.5q0 32 -1.5 59.5t-3.5 57.5q-75 45 -157.5 66.5t-168.5 21.5q-147 0 -231.5 -87.5t-84.5 -239.5q0 -180 84.5 -267t227.5 -87q66 0 127.5 22t106.5 76z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-725zM1075 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5 t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M732 1302h-149l-273 374h243z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M933 1676l-273 -374h-149l179 374h243z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M963 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M1038 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M928 1304h-199v195h199v-195zM515 1304h-199v195h199v-195z',\n            'M957 1022h-238v275h238v-275zM1466 572h-1256v160h1256v-160zM957 7h-238v275h238v-275z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-84 0 -155.5 21t-130.5 60l-133 -198h-110l171 256q-75 77 -116.5 190t-41.5 260q0 273 139.5 431.5t376.5 158.5q87 0 158 -22t125 -57l116 172h111l-155 -231q76 -76 118 -188t42 -264zM813 930q-37 29 -86.5 43.5t-104.5 14.5 q-155 0 -240 -110t-85 -320q0 -97 17 -171t52 -128zM946 558q0 97 -17.5 173t-51.5 130l-448 -671q39 -31 86.5 -46t106.5 -15q150 0 237 108.5t87 320.5z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM764 1302h-149l-273 374h243z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM945 1676l-273 -374h-149l179 374h243z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM985 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM955 1304h-199v195h199v-195zM542 1304h-199v195h199v-195z',\n            'M1151 1117l-652 -1529h-201l208 466l-445 1063h204l343 -828l346 828h197zM928 1676l-273 -374h-149l179 374h243z',\n            'M1168 572q0 -136 -39 -248.5t-110 -190.5q-66 -74 -155.5 -114.5t-189.5 -40.5q-87 0 -157.5 19t-143.5 59v-468h-188v1968h188v-556q75 63 168.5 105.5t199.5 42.5q202 0 314.5 -152.5t112.5 -423.5zM974 567q0 202 -69 302t-212 100q-81 0 -163 -35t-157 -92v-633 q80 -36 137.5 -49t130.5 -13q157 0 245 106t88 314z',\n            'M585 832h-239v285h239v-285zM658 285l-282 -655h-146l174 655h254z',\n            'M773 1676l-49 -384h-145l-49 384h243z',\n            'M765 1676l-49 -384h-128l-49 384h226zM1048 1304h-191v195h191v-195zM447 1304h-191v195h191v-195z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM250 1489l-49 -384h-145l-49 384h243z',\n            'M585 832h-239v285h239v-285z',\n            'M1424 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1582 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489zM243 1489l-49 -384h-145l-49 384h243z',\n            'M968 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1501 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1483 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1537 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1751 0h-576v387q60 38 119.5 82t103.5 101q45 59 71 138.5t26 185.5q0 206 -127 330.5t-347 124.5t-347 -124.5t-127 -330.5q0 -106 26 -185.5t71 -138.5q45 -57 104 -101t119 -82v-387h-576v174h410v124q-157 90 -258.5 246t-101.5 350q0 276 187.5 451t492.5 175 t492.5 -175t187.5 -451q0 -194 -101.5 -350t-258.5 -246v-124h410v-174zM243 1489l-49 -384h-145l-49 384h243z',\n            'M375 0h-188v1117h188v-1117zM379 1676l-56 -384h-84l-56 384h196zM615 1304h-171v195h171v-195zM118 1304h-171v195h171v-195z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523z',\n            'M1323 458q0 -111 -42 -196t-113 -140q-84 -66 -184.5 -94t-255.5 -28h-528v1489h441q163 0 244 -12t155 -50q82 -43 119 -110.5t37 -161.5q0 -106 -54 -180.5t-144 -119.5v-8q151 -31 238 -132.5t87 -256.5zM990 1129q0 54 -18 91t-58 60q-47 27 -114 33.5t-166 6.5h-236 v-430h256q93 0 148 9.5t102 39.5t66.5 77.5t19.5 112.5zM1117 450q0 90 -27 143t-98 90q-48 25 -116.5 32.5t-166.5 7.5h-311v-554h262q130 0 213 13.5t136 49.5q56 39 82 89t26 129z',\n            'M1162 1313h-764v-1313h-198v1489h962v-176z',\n            'M1414 0h-1388l562 1489h264zM1147 168l-432 1147l-431 -1147h863z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176z',\n            'M1288 0h-1162v184l913 1129h-879v176h1106v-179l-922 -1134h944v-176z',\n            'M1339 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1120 713h-627v179h627v-179z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152z',\n            'M1397 0h-257l-589 663l-148 -158v-505h-198v1489h198v-777l723 777h240l-665 -700z',\n            'M1378 0h-213l-468 1285l-468 -1285h-203l556 1489h240z',\n            'M1526 0h-198v1283l-414 -873h-118l-411 873v-1283h-185v1489h270l397 -829l384 829h275v-1489z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489z',\n            'M1215 1313h-1101v176h1101v-176zM1163 729h-997v176h997v-176zM1215 0h-1101v176h1101v-176z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1339 0h-198v1313h-743v-1313h-198v1489h1139v-1489z',\n            'M1174 1039q0 -99 -34.5 -183.5t-96.5 -146.5q-77 -77 -182 -115.5t-265 -38.5h-198v-555h-198v1489h404q134 0 227 -22.5t165 -70.5q85 -57 131.5 -142t46.5 -215zM968 1034q0 77 -27 134t-82 93q-48 31 -109.5 44.5t-155.5 13.5h-196v-595h167q120 0 195 21.5t122 68.5 q47 48 66.5 101t19.5 119z',\n            'M1280 0h-1162v184l620 600l-600 526v179h1096v-176h-832l586 -506v-26l-630 -605h922v-176z',\n            'M1262 1313h-532v-1313h-198v1313h-532v176h1262v-176z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211z',\n            'M1572 755q0 -140 -44.5 -248.5t-123.5 -181.5q-85 -79 -207 -125.5t-260 -49.5v-166h-197v166q-134 3 -257 48t-210 127q-79 74 -123.5 182t-44.5 248q0 136 43 238t119 178q81 81 202.5 128t270.5 51v155h197v-155q148 -3 271 -52t202 -127q75 -73 118.5 -177t43.5 -239 zM1366 763q0 99 -32 182t-91 140q-58 56 -129 82t-177 28v-890q94 2 171 30.5t127 75.5q65 60 98 147t33 205zM740 305v890q-106 -1 -177 -28t-129 -82t-90.5 -140t-32.5 -182q0 -112 33.5 -203t97.5 -149q49 -45 126.5 -75t171.5 -31z',\n            'M1336 1489l-514 -736l513 -753h-229l-406 613l-416 -613h-216l519 744l-507 745h228l401 -605l410 605h217z',\n            'M1604 910q0 -157 -40.5 -264.5t-117.5 -174.5q-80 -69 -192.5 -104t-263.5 -45v-322h-197v322q-154 11 -267 47t-188 102q-78 69 -118.5 176t-40.5 263v579h198v-602q0 -109 29.5 -180t81.5 -115q53 -45 130 -68.5t175 -30.5v996h197v-996q97 8 175 30.5t131 68.5 q56 49 83 115.5t27 179.5v602h198v-579z',\n            'M1568 0h-576v387q60 38 119.5 82t103.5 101q45 59 71 138.5t26 185.5q0 206 -127 330.5t-347 124.5t-347 -124.5t-127 -330.5q0 -106 26 -185.5t71 -138.5q45 -57 104 -101t119 -82v-387h-576v174h410v124q-157 90 -258.5 246t-101.5 350q0 276 187.5 451t492.5 175 t492.5 -175t187.5 -451q0 -194 -101.5 -350t-258.5 -246v-124h410v-174z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM738 1677h-199v195h199v-195zM325 1677h-199v195h199v-195z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM939 1677h-199v195h199v-195zM526 1677h-199v195h199v-195z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -22t143 -61v52h188v-1117zM903 275v636q-76 34 -136 49.5t-131 15.5q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5zM743 1676l-49 -384h-145l-49 384h243z',\n            'M1006 64q-107 -48 -210 -69t-218 -21q-79 0 -161 16t-152 56q-69 39 -112.5 102.5t-43.5 157.5q0 96 56.5 168t177.5 110v7q-91 24 -145 90t-54 158q0 89 47.5 147.5t112.5 92.5q64 33 145 49t160 16q98 0 180 -16.5t172 -44.5v-207h-13q-66 51 -163.5 79t-197.5 28 q-45 0 -84 -5.5t-81 -25.5q-35 -15 -60.5 -48.5t-25.5 -77.5q0 -61 28 -95t76 -49q45 -14 97 -15.5t105 -1.5h111v-166h-158q-62 0 -112 -4.5t-92 -21.5q-41 -17 -65.5 -54t-24.5 -96q0 -53 26 -90t67 -58q37 -19 87.5 -29t106.5 -10q102 0 218 36t187 98h13v-206zM721 1676 l-49 -384h-145l-49 384h243z',\n            'M1119 -412h-188v1048q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-1137zM802 1676l-49 -384h-145l-49 384h243z',\n            'M375 0h-188v1117h188v-1117zM403 1676l-49 -384h-145l-49 384h243z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM760 1676l-49 -384h-128l-49 384h226zM1043 1304h-191 v195h191v-195zM442 1304h-191v195h191v-195z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -22t143 -61v52h188v-1117zM903 275v636q-76 34 -136 49.5t-131 15.5q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5z',\n            'M1165 444q0 -202 -134.5 -334t-339.5 -132q-79 0 -167 22t-151 64v-476h-188v1490q0 224 126.5 351t349.5 127q90 0 164.5 -21.5t133.5 -67.5q57 -43 91 -112t34 -160q0 -127 -69.5 -221.5t-196.5 -131.5v-17q159 -26 253 -125.5t94 -255.5zM971 449q0 89 -34.5 144.5 t-92.5 86.5q-59 32 -132 43t-146 11h-36v160h36q66 0 131 14.5t104 44.5q46 34 68.5 83t22.5 134q0 112 -69 170t-178 58q-73 0 -125 -26.5t-85 -70.5q-32 -44 -47 -102.5t-15 -120.5v-862q66 -38 141 -53.5t147 -15.5q149 0 229.5 78.5t80.5 223.5z',\n            'M1151 1117l-457 -1061v-468h-188v468l-445 1061h204l343 -828l346 828h197z',\n            'M1139 551q0 -272 -138.5 -427t-376.5 -155q-241 0 -379.5 151.5t-138.5 413.5q0 141 43 239.5t107 162.5q69 72 159 113t182 58q-76 63 -166 130.5t-192 139.5v179h810v-158h-561v-10q68 -46 179 -124t204 -162q150 -136 209 -261.5t59 -289.5zM945 551q0 135 -55 249 t-165 200q-66 -8 -138.5 -32t-138.5 -77q-63 -50 -105.5 -137t-42.5 -214q0 -201 85 -305t241 -104q153 0 236 105.5t83 314.5z',\n            'M1006 64q-107 -48 -210 -69t-218 -21q-79 0 -161 16t-152 56q-69 39 -112.5 102.5t-43.5 157.5q0 96 56.5 168t177.5 110v7q-91 24 -145 90t-54 158q0 89 47.5 147.5t112.5 92.5q64 33 145 49t160 16q98 0 180 -16.5t172 -44.5v-207h-13q-66 51 -163.5 79t-197.5 28 q-45 0 -84 -5.5t-81 -25.5q-35 -15 -60.5 -48.5t-25.5 -77.5q0 -61 28 -95t76 -49q45 -14 97 -15.5t105 -1.5h111v-166h-158q-62 0 -112 -4.5t-92 -21.5q-41 -17 -65.5 -54t-24.5 -96q0 -53 26 -90t67 -58q37 -19 87.5 -29t106.5 -10q102 0 218 36t187 98h13v-206z',\n            'M922 75q32 -40 46 -85.5t14 -85.5q0 -84 -45 -168.5t-112 -147.5h-179v14q90 79 128 138.5t38 128.5q0 57 -30.5 95t-77.5 38h-145q-229 0 -340 116t-111 345q0 140 46 268t124 247q75 112 173.5 214.5t206.5 196.5v9h-460v158h744v-135q-117 -78 -231.5 -181 t-204.5 -223q-89 -117 -146 -257t-57 -283q0 -34 3 -70t15 -76q10 -38 34.5 -75.5t63.5 -61.5q36 -22 96.5 -24.5t116.5 -2.5h86q71 0 122 -26t82 -66z',\n            'M1119 -412h-188v1048q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-1137z',\n            'M1141 768q0 -190 -23 -316.5t-59 -210.5q-58 -135 -163 -203.5t-257 -68.5t-257 68.5t-163 203.5q-37 84 -59.5 210.5t-22.5 316.5q0 174 22.5 305.5t60.5 214.5q57 130 162.5 199t256.5 69t256.5 -69t162.5 -199q37 -84 60 -215t23 -305zM952 858q-4 143 -28.5 250 t-56.5 161q-41 70 -95 98.5t-133 28.5t-133 -28.5t-95 -98.5q-34 -55 -57.5 -161.5t-27.5 -249.5h626zM952 697h-626q0 -142 23 -258.5t59 -178.5q40 -69 96 -100t135 -31t135 31t96 100q36 62 59 178.5t23 258.5z',\n            'M375 0h-188v1117h188v-1117z',\n            'M1192 0h-248l-451 489l-112 -109v-380h-188v1117h188v-550l384 417q72 79 135.5 107t126.5 28q28 0 58 -1t37 -1v-166h-11q-16 2 -39.5 3t-36.5 1q-47 0 -85.5 -23.5t-67.5 -56.5l-251 -271z',\n            'M1151 0h-205l-328 829l-361 -829h-196l465 1056l-215 500h211z',\n            'M1125 0h-186v118q-74 -78 -141.5 -108.5t-145.5 -30.5q-75 0 -135 27t-144 107v-525h-188v1529h188v-838q32 -39 111 -80t170 -41q93 0 161 33.5t122 93.5v832h188v-1117z',\n            'M1151 1117l-452 -1117h-189l-449 1117h204l346 -889l343 889h197z',\n            'M1041 -96q0 -85 -45.5 -169t-111.5 -147h-180v14q92 79 129.5 139t37.5 128q0 55 -29 94t-75 39h-140q-140 0 -232.5 27t-155.5 84q-66 60 -100.5 135.5t-34.5 163.5q0 78 25 144t73 119q44 49 112.5 83.5t144.5 53.5v11q-125 28 -200 110.5t-75 186.5q0 83 43.5 150.5 t133.5 125.5v6h-228v154h824v-158h-256q-68 0 -122.5 -14.5t-102.5 -48.5q-45 -32 -72 -83t-27 -118q0 -79 32.5 -128t83.5 -75q45 -23 104 -34t139 -11h170v-165h-295q-66 0 -118.5 -20t-99.5 -59q-43 -37 -68.5 -90t-25.5 -112q0 -102 37.5 -159t101.5 -82 q63 -25 139.5 -28.5t166.5 -3.5h28q68 0 119.5 -23.5t84.5 -60.5q31 -35 48 -82.5t17 -96.5z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z',\n            'M1120 0h-188v955h-559v-955h-188v1117h935v-1117z',\n            'M1172 577q0 -258 -138.5 -428.5t-360.5 -170.5q-65 0 -146.5 18t-153.5 61v-469h-188v1058q0 123 35.5 215.5t101.5 158.5q62 62 155.5 95t195.5 33q243 0 371 -147t128 -424zM978 565q0 218 -80 320t-226 102q-158 0 -228.5 -96t-70.5 -278v-403q73 -34 132.5 -48.5 t134.5 -14.5q162 0 250 111t88 307z',\n            'M1018 -96q0 -87 -47 -172t-109 -144h-177v14q86 75 124.5 135.5t38.5 131.5q0 54 -30 93.5t-75 39.5h-92q-117 0 -216 30t-174 97q-73 66 -114.5 170t-41.5 250q0 270 155.5 432t414.5 162q84 0 164 -18.5t147 -45.5v-211h-12q-94 62 -172.5 87t-146.5 25 q-166 0 -260.5 -119t-94.5 -312q0 -112 28.5 -183t78.5 -116q50 -44 114.5 -63.5t139.5 -19.5h100q115 0 186 -76.5t71 -186.5z',\n            'M1137 558q0 -281 -140.5 -435t-373.5 -154q-241 0 -379 158t-138 431q0 275 141 432.5t378 157.5q55 0 108 -11t82 -20h480v-165h-288q62 -73 96 -170t34 -224zM943 558q0 215 -82 322t-236 107q-161 0 -243 -112t-82 -317q0 -209 83.5 -318t239.5 -109q152 0 236 107.5 t84 319.5z',\n            'M1006 952h-404v-952h-188v952h-404v165h996v-165z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710z',\n            'M1514 576q0 -259 -171.5 -417t-440.5 -173v-398h-187v398q-130 6 -240.5 46.5t-191.5 109.5q-85 74 -132 172t-47 232q0 159 59 296t192 275h229v-17q-136 -99 -210 -232t-74 -300q0 -189 112.5 -304t301.5 -121v1000q33 2 70.5 2.5t76.5 0.5q304 0 478.5 -149.5 t174.5 -420.5zM1319 586q0 184 -112 293.5t-305 109.5v-846q206 10 311.5 126t105.5 317z',\n            'M1160 -412h-213l-346 619l-350 -619h-203l444 770l-433 759h213l335 -600l339 600h203l-433 -751z',\n            'M1507 446q0 -114 -48 -198t-127 -137q-82 -55 -182 -82.5t-215 -32.5v-408h-187v408q-115 6 -214.5 32t-182.5 83q-80 54 -127.5 137.5t-47.5 197.5v671h188v-612q0 -113 37.5 -180.5t89.5 -102.5q56 -38 123 -53t134 -19v967h187v-967q67 5 134 19t123 53 q59 40 93 101.5t34 181.5v612h188v-671z',\n            'M1553 503q0 -96 -23.5 -192.5t-74.5 -171.5q-55 -80 -133.5 -124.5t-193.5 -44.5q-96 0 -177 49.5t-118 116.5h-6q-39 -68 -113 -117t-176 -49q-113 0 -194.5 46.5t-132.5 122.5t-74.5 171.5t-23.5 192.5q0 170 57 308.5t201 305.5h228v-17q-135 -108 -214.5 -262 t-79.5 -337q0 -66 8 -122.5t38 -119.5q26 -55 72.5 -91.5t117.5 -36.5q51 0 86.5 12.5t55.5 29.5q22 18 36.5 40t20.5 37v584h186v-584q9 -17 23 -39t35 -39q24 -19 52.5 -30t86.5 -11q70 0 117 35.5t74 92.5q25 55 36 116t11 126q0 182 -78.5 336t-215.5 263v17h228 q144 -167 201 -305.5t57 -308.5z',\n            'M557 1304h-189v195h189v-195zM194 1304h-189v195h189v-195zM375 0h-188v1117h188v-1117z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM953 1304h-199v195h199v-195zM540 1304h-199v195h199 v-195z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M743 1676l-49 -384h-145l-49 384h243z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM768 1676l-49 -384h-145l-49 384h243z',\n            'M1553 503q0 -96 -23.5 -192.5t-74.5 -171.5q-55 -80 -133.5 -124.5t-193.5 -44.5q-96 0 -177 49.5t-118 116.5h-6q-39 -68 -113 -117t-176 -49q-113 0 -194.5 46.5t-132.5 122.5t-74.5 171.5t-23.5 192.5q0 170 57 308.5t201 305.5h228v-17q-135 -108 -214.5 -262 t-79.5 -337q0 -66 8 -122.5t38 -119.5q26 -55 72.5 -91.5t117.5 -36.5q51 0 86.5 12.5t55.5 29.5q22 18 36.5 40t20.5 37v584h186v-584q9 -17 23 -39t35 -39q24 -19 52.5 -30t86.5 -11q70 0 117 35.5t74 92.5q25 55 36 116t11 126q0 182 -78.5 336t-215.5 263v17h228 q144 -167 201 -305.5t57 -308.5zM955 1676l-49 -384h-145l-49 384h243z',\n            'M1145 837q0 -164 -39 -344t-121 -303q-85 -124 -186.5 -173t-214.5 -49q-192 0 -313.5 126.5t-121.5 329.5q0 228 134.5 372.5t336.5 144.5q90 0 169.5 -26t158.5 -91q2 26 3 55.5t1 55.5q0 217 -79 318t-231 101q-78 0 -169.5 -31.5t-169.5 -86.5h-11v194 q81 44 181.5 66.5t196.5 22.5q137 0 239.5 -54.5t164.5 -178.5q42 -86 56.5 -189t14.5 -260zM942 678q-60 47 -136 74t-148 27q-141 0 -225 -91t-84 -261q0 -145 67.5 -221.5t179.5 -76.5q128 0 209.5 97t115.5 287q6 33 11.5 73t9.5 92z',\n            'M1438 0h-1388l562 1489h264zM1171 168l-432 1147l-431 -1147h863z',\n            'M1532 1315h-200v-1508h-198v1508h-592v-1508h-198v1508h-200v174h1388v-174z',\n            'M1369 -189h-1182v191l673 668l-663 631v188h1133v-176h-891l648 -601v-72l-666 -653h948v-176z',\n            'M1456 572h-1236v160h1236v-160z',\n            'M843 1489l-780 -1489h-165l780 1489h165z',\n            'M492 511h-239v283h239v-283z',\n            'M1737 1788l-880 -1939h-102l-384 993h-237v139h393l313 -821l730 1628h167z',\n            'M1887 663q0 -239 -122.5 -372.5t-329.5 -133.5q-133 0 -244 76.5t-180 222.5q-79 -151 -184.5 -225t-248.5 -74q-191 0 -304 135.5t-113 349.5q0 238 125 372t327 134q134 0 245 -77t179 -222q79 150 185.5 224.5t247.5 74.5q191 0 304 -135.5t113 -349.5zM967 729 q-63 117 -155 175.5t-188 58.5q-138 0 -216 -83.5t-78 -237.5q0 -133 63.5 -216t182.5 -83q110 0 172 48.5t119 142.5q34 57 52.5 92.5t47.5 102.5zM1718 663q0 134 -64 216.5t-182 82.5q-88 0 -152.5 -35.5t-138.5 -155.5q-30 -48 -55.5 -99.5t-44.5 -95.5 q60 -115 153.5 -174.5t189.5 -59.5q138 0 216 83t78 238z',\n            'M1168 1367h-10q-32 8 -89.5 18.5t-89.5 10.5q-129 0 -181 -61q-53 -61 -53 -210v-1123q0 -206 -104 -315q-105 -110 -293 -110q-52 0 -106.5 5.5t-103.5 15.5v178h10q33 -8 87 -18.5t88 -10.5q129 0 182 61q52 61 52 210v1123q0 204 104 315q104 110 293 110 q58 0 109 -5.5t105 -15.5v-178z',\n            'M1431 1104q-20 -194 -111 -293t-249 -99q-77 0 -147 37.5t-126 82.5q-65 52 -117 79.5t-96 27.5q-75 0 -117 -48t-70 -172h-155q23 182 112.5 280t248.5 98q72 0 143 -37t130 -83q61 -48 114.5 -77.5t98.5 -29.5q76 0 120.5 54.5t63.5 179.5h157zM1432 588 q-25 -184 -112 -281.5t-250 -97.5q-72 0 -144 37.5t-129 82.5q-39 31 -103 69t-110 38q-78 0 -121 -55t-63 -179h-157q19 192 110.5 292t249.5 100q77 0 146 -37t127 -83q35 -28 97 -67.5t116 -39.5q75 0 117 49.5t69 171.5h157z',\n            'M1431 362h-608l-104 -335h-153l104 335h-425v156h474l84 268h-558v156h606l105 335h153l-105 -335h427v-156h-476l-83 -268h559v-156z',\n            'M1408 303l-1154 483v124l1154 483v-183l-889 -362l889 -362v-183zM1408 0h-1154v160h1154v-160z',\n            'M1422 786l-1154 -483v183l889 362l-889 362v183l1154 -483v-124zM1422 0h-1154v160h1154v-160z'\n        ];\n        this.OUTLINE_X = [\n            [], [291, 301, 505, 515], [168, 211, 729, 772, 554], [195, 389, 917, 1364, 1481, 1481, 1288, 760, 312, 195],\n            [155, 604, 722, 1129.8, 1160, 1107, 722, 604, 278.5, 191.1, 162, 155], [149, 172.3, 242, 630, 1687, 1844.3, 1960, 2031.3, 2055, 2031.8, 1962, 1575, 517, 359.8, 244, 172.8],\n            [115, 149.4, 252.5, 407.6, 598, 1555, 1287, 961.3, 881, 757.5, 601, 423.5, 293, 213.5, 187], [164, 207, 343, 386], [181, 205.5, 279, 554, 783, 783, 554, 279, 205.5],\n            [147, 376, 651, 724.5, 749, 724.5, 651, 376, 147], [167, 232, 588, 717, 1073, 1137, 1137, 1073, 717, 588, 232, 167], [210, 755, 921, 1466, 1466, 921, 755, 210],\n            [147, 293, 575, 321], [153, 777, 777, 153], [253, 492, 492, 253], [-30, 143, 860, 684],\n            [137, 167.9, 260.5, 420.1, 652, 881.4, 1041.5, 1135.6, 1167, 1136.1, 1043.5, 883.9, 652, 422, 262, 168.3], [278, 1084, 1084, 780, 625, 278],\n            [161, 1169, 1169, 1106, 1073.5, 976, 821.3, 617, 387.5, 198, 161], [167, 364, 608, 830.5, 1007, 1111, 1148, 1117, 1080, 971, 821, 629, 399.5, 210, 167],\n            [77, 790, 982, 1203, 1203, 982, 798, 77], [187, 378, 613, 843.5, 1015, 1119, 1157, 1147, 251, 187],\n            [137, 183.5, 316, 475, 675, 875.1, 1041.5, 1153.6, 1191, 1046, 965, 866, 542, 315, 179.5], [154, 285, 499, 1173, 1173, 154],\n            [122, 157.9, 265.5, 433.6, 651, 859.6, 1029.5, 1142.4, 1180, 1140, 1106.8, 1007, 851.5, 651, 456.8, 300, 196.5, 162],\n            [113, 258, 340, 438, 760, 988, 1122.5, 1167, 1121, 990, 829, 629, 429.5, 263, 150.5], [346, 585, 585, 346], [230, 376, 658, 585, 346], [254, 1408, 1408, 254],\n            [245, 1431, 1431, 245], [268, 1422, 1422, 268], [160, 406, 610, 970, 1005, 973.9, 880.5, 733.4, 541, 337.5, 160],\n            [176, 240, 419, 692, 1037, 1210, 1391, 1714, 1829.5, 1870, 1813.5, 1651, 1391, 1041, 701, 426, 243], [26, 1374, 832, 568],\n            [200, 728, 983.5, 1168, 1281, 1323, 1196, 1159, 1040, 885, 641, 200], [115, 169, 319, 549.5, 844, 1001.5, 1134, 1250.5, 1350, 1350, 1084.5, 845, 546.5, 317, 167],\n            [200, 576, 906.5, 1134, 1369.5, 1458, 1373, 1136, 918.5, 572, 200], [200, 1181, 1181, 200], [200, 398, 1045, 1151, 1151, 200],\n            [115, 171, 330, 577, 896, 1175.5, 1442, 1442, 1441, 1155.5, 896, 570.9, 323.5, 167.1], [200, 1339, 1339, 200], [137, 725, 725, 137],\n            [44, 178, 306, 486.6, 626.5, 716.1, 746, 746, 233, 44], [205, 1397, 1366, 205], [200, 1142, 1142, 398, 200], [200, 1526, 1526, 200], [200, 1336, 1336, 200],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 398, 1043, 1139.5, 1174, 1127.5, 996, 831, 604, 200],\n            [115, 163.5, 302, 520.5, 1010.5, 1133.1, 1290, 1409.5, 1528, 1528, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 1432, 1130.5, 1004, 842, 617, 200],\n            [134, 395.5, 685, 941.5, 1128, 1241.5, 1282, 1222, 990, 702, 480.3, 301, 182.5, 143, 134], [0, 532, 730, 1262, 1262, 0],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 178], [26, 568, 832, 1374, 238], [92, 486, 1546, 1933, 295], [68, 1335, 1336, 80], [6, 532, 730, 1254, 225],\n            [126, 1288, 1288, 1266, 160, 126], [239, 759, 759, 239], [70, 787, 960, 246], [171, 691, 691, 171], [186, 383, 1490, 901, 775], [-4, 1306, 1306, -4], [340, 613, 762, 583],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 1020, 924, 772.5, 567, 362, 203], [185, 679, 866, 1022, 1128.5, 1168, 1139.4, 1053.5, 918.1, 373, 185],\n            [105, 145, 258, 431, 653, 832.5, 1011, 1011, 841.5, 653, 430.1, 255.5, 142.6], [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 903, 258, 148.5],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 997.5, 849.1, 649, 428.6, 255.5, 143.4], [68, 195, 383, 716, 786, 786, 693.5, 580, 415, 294, 68],\n            [108, 225, 391.5, 565, 798.3, 962, 1058.8, 1091, 1091, 602, 417, 259, 148.5], [185, 1119, 1119, 1095.3, 1024, 373, 185], [175, 187, 375, 387, 387, 175],\n            [-62, 47.5, 153, 304, 421, 496, 521, 533, 533, 321, 100, -62], [193, 1199, 1161, 381, 193], [187, 375, 375, 187], [185, 1815, 1815, 1793.1, 1727.5, 1615.9, 1456, 735, 185],\n            [185, 1119, 1119, 1095.3, 1024, 907.5, 748, 185], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 833.3, 622, 409.4, 245.5, 140.9],\n            [185, 373, 1019, 1129, 1168, 1139.9, 1055.5, 920.6, 741, 185], [108, 137.6, 226.5, 365.1, 903, 1091, 1091, 602, 414, 259, 149.5], [185, 373, 882, 882, 816, 745, 185],\n            [110, 283.5, 511, 706.9, 856.5, 951.4, 983, 939, 768.5, 566, 372.5, 230, 143.5, 115, 110], [62, 211.3, 278, 387.5, 538, 649.5, 765, 765, 377, 189, 62],\n            [177, 201.5, 275, 392.5, 549, 1111, 1111, 177], [61, 510, 699, 1151, 265], [86, 380, 1299, 1590, 766], [60, 1152, 1152, 64], [61, 298, 499, 1151, 265],\n            [93, 995, 995, 978, 107, 93], [173, 588.9, 672.5, 800.9, 963, 1113, 1113, 963, 800.9, 672.5, 588.9, 173], [378, 552, 552, 378],\n            [187, 337, 499.1, 627.5, 711.1, 1127, 1127, 711.1, 627.5, 499.1, 337, 187], [187, 354, 1125, 1290, 1401, 1466.5, 1489, 1322, 551, 386, 274, 209.5], [], [291, 515, 505, 301],\n            [159, 191.6, 289.5, 647, 765, 1120, 1120, 765, 647, 292.5, 192.4], [137, 1163, 1163, 1137, 997, 816, 630.6, 484.5, 389.6, 182, 137],\n            [138, 247, 1058, 1168, 1168, 1055, 249, 138], [108, 187, 557, 745, 1115, 1191, 320], [378, 552, 552, 378],\n            [172, 229, 404.5, 575, 796, 965, 1063, 1096, 1128, 1071, 896, 725, 497.5, 334, 235, 203], [346, 958, 958, 346],\n            [159, 222.4, 412.5, 692.1, 1024, 1355.9, 1635.5, 1825.6, 1889, 1825.6, 1635.5, 1355.9, 1024, 692.1, 412.5, 222.4],\n            [151, 238.5, 454, 944, 944, 920.3, 849, 723.5, 537, 368, 231], [166, 716, 1146, 1146, 716, 166], [210, 1285, 1456, 1456, 210], [153, 777, 777, 153],\n            [159, 222.4, 412.5, 692.1, 1024, 1355.9, 1635.5, 1825.6, 1889, 1825.6, 1635.5, 1355.9, 1024, 692.1, 412.5, 222.4], [-4, 1, 1306, 1306],\n            [154, 183, 270, 399.3, 555, 710.8, 840, 927, 956, 927.1, 840.5, 711.4, 555, 399.3, 270, 183], [215, 1461, 1461, 921, 755, 215],\n            [207, 967, 967, 911, 887.6, 817.5, 544, 369.5, 211, 207], [207, 363.5, 540, 703, 834, 923, 956, 929, 904.9, 832.5, 561, 384.5, 224, 207], [541, 690, 963, 720],\n            [190, 378, 1124, 1124, 190], [137, 168.5, 595, 1106, 1106, 640, 425.3, 267, 169.5], [253, 492, 492, 253], [353, 456, 551, 788.5, 857.1, 880, 877, 872, 719, 353],\n            [291, 299, 914, 914, 693, 558, 291], [121, 150.6, 239.5, 378.6, 559, 734.3, 874, 965.5, 996, 965.5, 874, 734.3, 559, 378.6, 239.5, 150.6], [174, 604, 1154, 1154, 604, 174],\n            [171, 465, 1694, 1857, 1857, 1694, 1410, 545, 408, 171], [171, 465, 1955, 1955, 1890, 1805.5, 1410, 545, 408, 171], [140, 555, 1750, 1913, 1913, 1750, 1500, 448, 294, 155, 140],\n            [113, 144.1, 237.5, 384.6, 577, 782, 958, 958, 712, 508, 147.5], [26, 1374, 862, 683, 440], [26, 1374, 955, 712, 533], [26, 1374, 1033, 805, 578, 350],\n            [26, 1374, 1119, 990, 541, 367, 288], [26, 1374, 1005, 806, 393], [26, 1374, 1049, 1023.6, 947.5, 834.6, 699, 564, 451, 374.5, 349], [14, 1901, 1901, 608],\n            [115, 169, 548, 652.5, 750, 990.5, 1350, 1350, 1084.5, 845, 546.5, 317, 167], [200, 1181, 1181, 643, 400, 200], [200, 1181, 1181, 993, 750, 200],\n            [200, 1181, 1181, 803, 576, 200], [200, 1181, 1181, 1038, 426, 200], [137, 725, 725, 389, 146, 137], [137, 725, 725, 482, 137], [93, 137, 725, 776, 548, 321],\n            [126, 137, 725, 738, 738, 126], [14, 210, 586, 916.5, 1144, 1379.5, 1468, 1383, 1146, 929, 582, 210, 14], [200, 1336, 1336, 1208, 1079, 630, 456, 200],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 753, 510, 163], [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1083, 840, 303, 163],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1136, 908, 681, 453, 163],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1207, 1078, 629, 455, 163],\n            [112, 160.5, 299, 517.5, 803, 1089.5, 1307, 1445.5, 1495, 1446.5, 1108, 909, 496, 160], [291, 402, 1274, 1385, 1385, 1274, 402, 291],\n            [115, 120, 252, 1092.5, 1310, 1448.5, 1498, 1474, 1342, 806, 521.5, 303, 163], [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 753, 510, 178],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 1073, 830, 178], [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 856, 629, 178],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 1056, 444, 178], [6, 532, 730, 1254, 935, 692], [200, 398, 1044, 1139, 1174, 1127, 997, 398, 200],\n            [185, 675, 873.1, 1029.5, 1131.1, 1165, 1066, 1037.4, 951.5, 819.9, 654, 470.5, 321, 221, 185], [104, 130.3, 209, 325.5, 465, 1053, 1053, 1020, 559, 316, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 934, 691, 203], [104, 130.3, 209, 325.5, 465, 1053, 1053, 961, 733, 506, 278, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 1038, 909, 460, 286, 207], [104, 130.3, 209, 325.5, 465, 1053, 1053, 926, 314, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 956, 930.6, 854.5, 741.6, 606, 471, 358, 281.5, 256],\n            [104, 130.4, 209.5, 326.1, 465, 1433, 1648.5, 1833, 1855, 1855, 1823.6, 1729.5, 1581.1, 1387, 564, 360, 202],\n            [105, 145, 353, 456, 551, 788.5, 857.1, 1011, 1011, 841.5, 653, 430.1, 255.5, 142.6], [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 997.5, 580, 337, 143.4],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 960, 717, 255.5, 143.4], [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 986, 758, 531, 303, 143.4],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 951, 339, 143.4], [-21, 187, 375, 401, 222], [160, 187, 375, 582, 339], [-11, 187, 375, 572, 394, 167],\n            [5, 187, 375, 557, 557, 5], [106, 140.6, 244.5, 405.6, 612, 828.3, 995, 1101.5, 1137, 1004, 938, 263], [185, 1119, 1119, 1075, 946, 497, 323, 244, 185],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 553, 310, 140.9], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 933, 690, 245.5, 140.9],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 963, 735, 508, 280, 140.9], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1038, 909, 460, 286, 207],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 928, 729, 316, 140.9], [210, 719, 957, 1466, 1466, 957, 719, 210],\n            [93, 203, 833.3, 997, 1102, 1137, 1132, 1021, 409.4, 245.5, 140.9, 106], [177, 201.5, 275, 392.5, 549, 1111, 1111, 585, 342, 177],\n            [177, 201.5, 275, 392.5, 549, 1111, 1111, 945, 702, 177], [177, 201.5, 275, 392.5, 549, 1111, 1111, 757, 530, 177], [177, 201.5, 275, 392.5, 549, 1111, 1111, 955, 343, 177],\n            [61, 298, 499, 1151, 928, 685], [185, 373, 1019, 1129, 1168, 1139.9, 1055.5, 920.6, 373, 185], [230, 376, 658, 585, 346], [530, 579, 724, 773],\n            [256, 588, 716, 1048, 1048, 765, 539, 256], [7, 26, 1374, 832], [346, 585, 585, 346], [0, 49, 443, 1424, 1424, 443], [0, 49, 443, 1582, 1582, 443], [0, 49, 380, 968, 968, 380],\n            [0, 49, 354.5, 493, 711.5, 997, 1283.5, 1501, 1639.5, 1689, 1640.5, 1501, 1284.5, 997], [0, 49, 815, 1013, 1537, 289],\n            [0, 49, 291, 1751, 1751, 1701, 1654.1, 1513.5, 1296.6, 1021], [-53, 187, 375, 615, 615, 379, 183, -53], [26, 1374, 832, 568],\n            [200, 728, 983.5, 1168, 1281, 1323, 1196, 1159, 1040, 885, 641, 200], [200, 398, 1162, 1162, 200], [26, 1414, 852, 588], [200, 1181, 1181, 200],\n            [126, 1288, 1288, 1266, 160, 126], [200, 1339, 1339, 200], [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163],\n            [137, 725, 725, 137], [205, 1397, 1366, 205], [26, 1378, 822, 582], [200, 1526, 1526, 200], [200, 1336, 1336, 200], [114, 1215, 1215, 114],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 1339, 1339, 200],\n            [200, 398, 1043, 1139.5, 1174, 1127.5, 996, 831, 604, 200], [118, 1280, 1280, 1234, 138, 118], [0, 532, 730, 1262, 1262, 0], [6, 532, 730, 1254, 225],\n            [105, 149.5, 273, 740, 937, 1404, 1527.5, 1572, 1528.5, 1410, 937, 740, 267, 148], [68, 1335, 1336, 80], [179, 219.5, 338, 793, 990, 1446, 1563.5, 1604, 1604, 179],\n            [108, 1568, 1568, 1518, 1471.1, 1330.5, 1113.6, 838, 562.4, 345.5, 204.9, 158, 108], [126, 137, 725, 738, 738, 126], [6, 532, 730, 1254, 939, 740, 327],\n            [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 743, 500, 148.5], [109, 152.5, 265, 417, 578, 796, 1006, 1006, 961, 721, 478, 191.5, 144],\n            [185, 931, 1119, 1119, 1095.3, 802, 559, 185], [160, 187, 375, 403], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 1043, 760, 534, 251, 177],\n            [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 604, 416.5, 258, 148.5], [185, 373, 1030.5, 1131.4, 1165, 1084, 1050, 959, 825.5, 661, 462.1, 311.5, 216.6, 185],\n            [61, 506, 694, 1151, 265], [106, 140.6, 244.5, 408.6, 624, 837.1, 1000.5, 1104.4, 1139, 1049, 239],\n            [109, 152.5, 265, 417, 578, 796, 1006, 1006, 961, 789, 609, 449, 304, 191.5, 144], [108, 135.8, 219, 646, 825, 937, 982, 942, 198],\n            [185, 931, 1119, 1119, 1095.3, 1024, 907.5, 748, 185], [137, 159.5, 219, 382, 639, 896, 1059, 1118, 1141, 1118, 1058, 895.5, 639, 382.5, 220, 159.5], [187, 375, 375, 187],\n            [193, 1192, 1122, 1085, 1027, 193], [61, 1151, 522, 311], [185, 373, 1125, 1125, 185], [61, 510, 699, 1151, 265], [104, 138.5, 239, 704, 884, 995.5, 1041, 957, 133],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 833.3, 622, 409.4, 245.5, 140.9], [185, 1120, 1120, 185],\n            [185, 373, 1033.5, 1137.4, 1172, 1140, 1044, 887.3, 673, 477.5, 322, 220.5, 185], [105, 146.5, 261, 685, 862, 971, 1018, 986, 839, 675, 441.9, 260.5, 143.9],\n            [106, 140.5, 244, 407.8, 623, 832.9, 996.5, 1101.9, 1295, 1295, 625, 412, 247, 141.3], [10, 414, 602, 1006, 1006, 10],\n            [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 177], [104, 151, 283, 715, 902, 1342.5, 1471.1, 1514, 1470.4, 1339.5, 1132.6, 861, 784.5, 714, 355, 163],\n            [48, 1160, 1149, 59], [176, 223.5, 748, 935, 1459, 1507, 1507, 176], [113, 136.5, 211, 343.5, 538, 1128, 1321.5, 1455, 1529.5, 1553, 1496, 1295, 371, 170],\n            [5, 187, 375, 557, 557, 5], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 953, 341, 177],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 743, 500, 140.9], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 768, 525, 177],\n            [113, 136.5, 211, 343.5, 538, 1128, 1321.5, 1455, 1529.5, 1553, 1496, 955, 712, 170],\n            [149, 179.4, 270.5, 409.6, 584, 798.5, 985, 1106, 1145, 1130.5, 1074, 909.5, 670, 473.5, 292], [50, 1438, 876, 612], [144, 344, 1332, 1532, 1532, 144],\n            [187, 1369, 1369, 1330, 197, 187], [220, 1456, 1456, 220], [-102, 63, 843, 678], [253, 492, 492, 253], [134, 755, 857, 1737, 1570, 134],\n            [161, 189.3, 274, 406.5, 578, 1435, 1620.9, 1764.5, 1856.4, 1887, 1858.8, 1774, 1641.5, 1470, 613, 430.3, 286, 192.3],\n            [138, 241.5, 348, 515.3, 641, 719, 1168, 1168, 1063, 954, 786.3, 661, 583, 138], [243, 400, 1070, 1214, 1320, 1432, 1431, 1274, 604, 462.4, 355.5, 243],\n            [245, 566, 719, 1431, 1431, 1109, 956, 245], [254, 1408, 1408, 254], [268, 1422, 1422, 268]\n        ];\n        this.OUTLINE_Y = [\n            [], [1489, 0, 0, 1489], [1556, 977, 977, 1556, 1556], [421, 0, 0, 421, 932, 1067, 1489, 1489, 1067, 556],\n            [85, -361, -361, 238.1, 380, 1231, 1576, 1576, 1185, 1071.5, 935, 283], [1075, 880.5, 743, 0, -29, -1.8, 80, 217.8, 413, 607.5, 745, 1489, 1517, 1489.8, 1408, 1270.3],\n            [409, 230.9, 90.5, -0.6, -31, 0, 909, 1333.4, 1432.5, 1498.1, 1520, 1490, 1412, 1301.5, 1174], [1556, 977, 977, 1556], [572, 286.3, 31, -412, -412, 1556, 1556, 1113, 857.8],\n            [-412, -412, 31, 286.3, 572, 857.8, 1113, 1556, 1556], [886, 776, 630, 630, 777, 887, 1299, 1409, 1556, 1556, 1410, 1300], [572, 27, 27, 572, 732, 1277, 1277, 732],\n            [-370, -370, 285, 285], [561, 561, 742, 742], [0, 0, 285, 285], [-304, -304, 1556, 1556],\n            [743, 400, 159, 16.5, -31, 15.9, 156.5, 397.4, 745, 1084.9, 1326.5, 1470.9, 1519, 1471.6, 1329.5, 1088.1], [0, 0, 152, 1494, 1494, 1286],\n            [0, 0, 171, 1110, 1279.4, 1409.5, 1492.4, 1520, 1491, 1427, 209], [63, -1.5, -31, 2.5, 106, 254, 441, 1161, 1320, 1436, 1500, 1520, 1490.5, 1426, 272],\n            [419, 0, 0, 419, 579, 1489, 1489, 649], [56, -5.5, -31, 6.5, 114, 274, 473, 1489, 1489, 267],\n            [654, 324, 104, 3, -31, 4.9, 112.5, 276.9, 483, 1494, 1512, 1517, 1453.5, 1277, 1005], [1314, 0, 0, 1266, 1489, 1489],\n            [411, 233.5, 91, -2.8, -34, -2, 94, 238.3, 415, 1144, 1294.5, 1416, 1496.3, 1523, 1495, 1411, 1285, 1131],\n            [1005, -6, -23.5, -29, 33, 209, 480, 834, 1171.5, 1385, 1485.5, 1519, 1483.3, 1376, 1211.8], [0, 0, 1117, 1117], [-370, -370, 285, 1117, 1117], [590, 77, 1227, 714],\n            [362, 362, 942, 942], [77, 590, 714, 1227], [1245, 0, 0, 964.5, 1139, 1293.4, 1414.5, 1492.9, 1519, 1497.5, 1449],\n            [647, 291, 15, -162.5, -226, -218.5, -190, 157, 394, 663, 1013.5, 1283, 1457, 1519, 1452, 1268, 991.5], [0, 0, 1489, 1489],\n            [0, 0, 28, 122, 262, 458, 1155, 1316.5, 1427, 1477, 1489, 1489], [743, 402.5, 161, 18.5, -27, -13.5, 19, 63, 108, 1385, 1487, 1516, 1465, 1317, 1072],\n            [0, 0, 28, 119, 375, 743, 1118, 1371, 1457.5, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 717, 1313, 1489, 1489],\n            [746, 405.5, 163, 19, -29, 12.5, 110, 749, 1382, 1485.5, 1516, 1464.4, 1309.5, 1065.4], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [8, -12.5, -21, 5.5, 85, 213.5, 387, 1489, 1489, 193], [0, 0, 1489, 1489], [0, 0, 176, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 709, 855.5, 1039, 1254, 1396, 1466.5, 1489, 1489],\n            [744, 415, 172, 21, -297.5, -369.1, -393, -386.5, -365, -183, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1280.5, 1409, 1471.5, 1489, 1489],\n            [92, 3, -27, 9, 109, 253, 425, 1412, 1486, 1516, 1486.1, 1396.5, 1260.1, 1090, 340], [1313, 0, 0, 1313, 1489, 1489], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 1489],\n            [1489, 0, 0, 1489, 1489], [1489, 0, 0, 1489, 1489], [0, 0, 1489, 1489], [1489, 0, 0, 1489, 1489], [0, 0, 176, 1489, 1489, 184], [-392, -392, 1556, 1556],\n            [1556, -304, -304, 1556], [-392, -392, 1556, 1556], [682, 682, 684, 1489, 1489], [-300, -300, -180, -180], [1676, 1302, 1302, 1676],\n            [324, 182.8, 69, -6, -31, 0, 758, 939, 1058, 1124.5, 1144, 1126, 1093], [0, -31, 8.5, 127, 315, 567, 812.8, 996, 1110, 1556, 1556],\n            [557, 300, 118, 10.5, -25, 0, 70, 1050, 1116, 1143, 1104, 987, 801.5], [550, 306.8, 123, 7.5, -31, 0, 1556, 1556, 992, 803],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1016, 1115, 1148, 1107.8, 987, 797.8], [959, 0, 0, 959, 1374, 1546, 1560, 1566, 1539.4, 1459.5, 1117],\n            [569, -375, -410.5, -423, -389.8, -290, -119.3, 127, 1117, 1148, 1108.5, 998, 817.5], [0, 0, 725, 906, 1039, 1556, 1556], [1304, 0, 0, 1304, 1499, 1499],\n            [-395, -415, -423, -398, -323, -199, -27, 1304, 1499, 1499, 1117, -216], [0, 0, 1117, 1556, 1556], [0, 0, 1556, 1556], [0, 0, 725, 902.9, 1036.5, 1120.1, 1148, 1148, 1117],\n            [0, 0, 725, 906, 1039, 1120.8, 1148, 1117], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1108.4, 1148, 1108.4, 989.5, 802.4],\n            [-412, -412, 133, 323.5, 572, 813.4, 995.5, 1109.9, 1148, 1117], [555, 314.1, 131.5, 16.4, -412, -412, 1117, 1148, 1108, 995, 809.5], [0, 0, 912, 1105, 1114.5, 1117, 1117],\n            [67, 2.5, -27, -2.5, 71, 182.8, 322, 1060, 1119.5, 1144, 1116.5, 1042, 933, 803, 278], [959, 189.8, 70, 1, -22, -13, 10, 1117, 1438, 1438, 1117],\n            [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [0, 0, 1117, 1117], [1117, -412, -412, 1117, 1117],\n            [0, 0, 159, 1117, 1117, 139], [504, -170.9, -292.5, -367.1, -392, -392, 1556, 1556, 1531.1, 1456.5, 1334.9, 660], [-392, -392, 1556, 1556],\n            [-392, -392, -367.1, -292.5, -170.9, 504, 660, 1334.9, 1456.5, 1531.1, 1556, 1556], [395, 395, 396, 440, 561, 732, 927, 927, 926, 880.5, 761, 589.5], [], [0, 0, 1489, 1489],\n            [557, 333.5, 163, -361, -361, 74, 1046, 1475, 1475, 948.5, 775.9], [0, 0, 171, 1467, 1501, 1518, 1485.9, 1389.5, 1243.1, 751, 207],\n            [258, 145, 147, 257, 1067, 1176, 1176, 1066], [1489, 426, 0, 0, 426, 1489, 1489], [-392, -392, 1556, 1556],\n            [533, -327, -371.5, -385, -358, -275, -156, -10, 601, 1462, 1505, 1519, 1490, 1411, 1293.5, 1147], [1304, 1304, 1499, 1499],\n            [655, 323.1, 43.5, -146.6, -210, -146.6, 43.5, 323.1, 655, 986.9, 1266.5, 1456.6, 1520, 1456.6, 1266.5, 986.9],\n            [833, 616, 531, 554, 1192, 1332.4, 1435.5, 1498.9, 1520, 1504, 1475], [608, 162, 191, 1113, 1142, 697], [602, 57, 57, 762, 762], [561, 561, 742, 742],\n            [655, 323.1, 43.5, -146.6, -210, -146.6, 43.5, 323.1, 655, 986.9, 1266.5, 1456.6, 1520, 1456.6, 1266.5, 986.9], [1788, 1668, 1668, 1788],\n            [1116, 960.4, 831.5, 744.9, 716, 745, 832, 961, 1116, 1271, 1400, 1487, 1516, 1487, 1400, 1271], [179, 179, 917, 1462, 1462, 917],\n            [566, 566, 711, 1237, 1350.4, 1440.5, 1519, 1501.5, 1458, 722], [585, 542, 527, 543.5, 595, 685.5, 817, 1278, 1374.5, 1452, 1520, 1502.5, 1458, 764],\n            [1302, 1302, 1676, 1676], [-412, -412, 0, 1117, 1117], [1050, 866, -363, -363, 1489, 1489, 1460, 1373, 1234.3], [511, 511, 794, 794],\n            [-397, -416, -423, -337, -232, -89, -25, 20, 20, -237], [1256, 566, 566, 688, 1493, 1493, 1368],\n            [1025, 820.1, 663.5, 564.1, 531, 563.4, 660.5, 816.4, 1025, 1233.8, 1390, 1487.5, 1520, 1486.8, 1387, 1230], [191, 162, 608, 697, 1142, 1113],\n            [1246, 0, 0, 220, 353, 944, 1489, 1493, 1493, 1363], [1246, 0, 0, 139, 664, 865, 1489, 1493, 1493, 1363], [598, 0, 0, 220, 353, 944, 1489, 1517, 1500, 1456, 773],\n            [350, 195.6, 74.5, -3.9, -30, -10, 40, 244, 1489, 1489, 523], [0, 0, 1675, 2049, 2049], [0, 0, 2049, 2049, 1675], [0, 0, 1670, 2049, 2049, 1670],\n            [0, 0, 1992, 1992, 1987, 1910, 1682], [0, 0, 1872, 1872, 1872], [0, 0, 1712, 1843.5, 1952, 2024.8, 2049, 2024.8, 1952, 1843.5, 1712], [0, 0, 1489, 1489],\n            [743, 402.5, -397, -416, -423, -337, 108, 1385, 1487, 1516, 1465, 1317, 1072], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 1489, 2049, 2049, 1489],\n            [0, 0, 1489, 1872, 1872, 1489], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 2049, 2049, 1489], [1670, 0, 0, 1670, 2049, 2049], [1677, 0, 0, 1677, 1872, 1872],\n            [740, 0, 0, 28, 119, 375, 743, 1118, 1371, 1457.5, 1489, 1489, 883], [0, 0, 1489, 1992, 1992, 1987, 1910, 1489],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 2049, 2049, 1070.5], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 2049, 2049, 1318, 1070.5],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1670, 2049, 2049, 1670, 1070.5], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1992, 1992, 1987, 1910, 1070.5],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1872, 1872, 1872, 1070.5], [216, 105, 105, 216, 1088, 1199, 1199, 1088],\n            [744, -146, -146, 20, 172, 414.5, 744, 1611, 1611, 1520, 1468, 1318, 1070.5], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489],\n            [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489],\n            [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 1872, 1872, 1489], [1489, 0, 0, 1489, 2049, 2049], [0, 0, 469, 610.5, 787, 992, 1130, 1489, 1489],\n            [0, -24, 12.4, 121.5, 284.1, 481, 1241, 1376, 1479, 1544.3, 1566, 1536.5, 1449, 1295.5, 1080], [324, 182.8, 69, -6, -31, 0, 758, 939, 1676, 1676, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1676, 1676, 1093], [324, 182.8, 69, -6, -31, 0, 758, 1297, 1676, 1676, 1297, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1619, 1619, 1614, 1537, 1309], [324, 182.8, 69, -6, -31, 0, 758, 1499, 1499, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1630, 1761.8, 1871, 1944.5, 1969, 1944.5, 1871, 1761.8, 1630],\n            [317, 178.8, 68, -4.8, -29, -26, 3.5, 68, 559, 641, 861.3, 1020, 1116, 1148, 1146, 1127, 1093], [557, 300, -397, -416, -423, -337, -232, 70, 1050, 1116, 1143, 1104, 987, 801.5],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1016, 1676, 1676, 797.8], [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1676, 1676, 987, 797.8],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1297, 1676, 1676, 1297, 797.8], [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1499, 1499, 797.8],\n            [1676, 0, 0, 1302, 1676], [1302, 0, 0, 1676, 1676], [1297, 0, 0, 1297, 1676, 1676], [1304, 0, 0, 1304, 1499, 1499],\n            [484, 266.5, 104, 2.8, -31, 12, 141, 351, 637, 1469, 1566, 1556], [0, 0, 725, 1619, 1619, 1614, 1537, 1309, 1117],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1676, 1676, 802.4], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1676, 1676, 989.5, 802.4],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1297, 1676, 1676, 1297, 802.4], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 1619, 1619, 1614, 1537, 1309],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1499, 1499, 1499, 802.4], [572, 7, 7, 572, 732, 1297, 1297, 732],\n            [-148, -148, 8.5, 127, 313.8, 558, 1241, 1241, 1108.4, 989.5, 802.4, 558], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117],\n            [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1499, 1499, 1117],\n            [1117, -412, -412, 1117, 1676, 1676], [-412, -412, 133, 323.5, 572, 813.4, 995.5, 1109.9, 1556, 1556], [-370, -370, 285, 1117, 1117], [1676, 1292, 1292, 1676],\n            [1304, 1292, 1292, 1304, 1499, 1676, 1676, 1499], [1489, 0, 0, 1489], [832, 832, 1117, 1117], [1489, 1105, 0, 0, 1489, 1489], [1489, 1105, 0, 0, 1489, 1489],\n            [1489, 1105, 0, 0, 1489, 1489], [1489, 1105, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520], [1489, 1105, 0, 0, 1489, 1489],\n            [1489, 1105, 0, 0, 174, 894, 1144.8, 1345, 1476.3, 1520], [1304, 0, 0, 1304, 1499, 1676, 1676, 1499], [0, 0, 1489, 1489],\n            [0, 0, 28, 122, 262, 458, 1155, 1316.5, 1427, 1477, 1489, 1489], [0, 0, 1313, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 176, 1489, 1489, 184],\n            [0, 0, 1489, 1489], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1489, 1489],\n            [0, 0, 709, 855.5, 1039, 1254, 1396, 1466.5, 1489, 1489], [0, 0, 176, 1489, 1489, 184], [1313, 0, 0, 1313, 1489, 1489], [1489, 0, 0, 1489, 1489],\n            [755, 507, 325, -16, -16, 325, 506.5, 755, 994, 1171, 1505, 1505, 1171, 993], [0, 0, 1489, 1489], [910, 647, 471, 0, 0, 471, 645.5, 910, 1489, 1489],\n            [0, 0, 174, 894, 1144.8, 1345, 1476.3, 1520, 1476.3, 1345, 1144.8, 894, 174], [1677, 0, 0, 1677, 1872, 1872], [1489, 0, 0, 1489, 1872, 1872, 1872],\n            [550, 306.8, 123, 7.5, -31, 0, 1117, 1676, 1676, 803], [306, 148.5, 46, -10, -26, -5, 64, 270, 1083, 1676, 1676, 986.5, 839], [0, -412, -412, 725, 906, 1676, 1676, 1117],\n            [1676, 0, 0, 1676], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1499, 1676, 1676, 1499, 1117], [550, 306.8, 123, 7.5, -31, 0, 1117, 1148, 1108, 992, 803],\n            [-412, -412, 110, 259.5, 444, 1195, 1355, 1467, 1534.5, 1556, 1524.3, 1429, 1277.8, 1078], [1117, -412, -412, 1117, 1117],\n            [534, 299.6, 120.5, 6.9, -31, 7.8, 124, 308.3, 551, 1556, 1556], [306, 148.5, 46, -10, -26, -5, 64, 270, 1083, 1127.5, 1144, 1128, 1079, 986.5, 839],\n            [463, 262.3, 118, -412, -412, -264.5, -96, 1556, 1556], [0, -412, -412, 725, 906, 1039, 1120.8, 1148, 1117],\n            [768, 451.5, 241, 37.5, -31, 37.5, 241, 451.5, 768, 1073, 1288, 1487, 1556, 1487, 1288, 1073.5], [0, 0, 1117, 1117], [0, 0, 1117, 1118, 1119, 1117], [0, 0, 1556, 1556],\n            [-412, -412, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [412, 248.5, 113, -412, -412, -265, -96, 1556, 1556],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1108.4, 1148, 1108.4, 989.5, 802.4], [0, 0, 1117, 1117],\n            [-412, -412, 148.5, 340.9, 577, 821.5, 1001, 1111.3, 1148, 1115, 1020, 861.5, 646], [549, 299, 129, -412, -412, -268, -96, 1079, 1124.5, 1143, 1102.5, 981, 792],\n            [558, 313.8, 127, 8.5, -31, 7.5, 123, 308.8, 952, 1117, 1148, 1108.6, 990.5, 803.6], [952, 0, 0, 952, 1117, 1117],\n            [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1117], [546, 314, 142, -412, -412, 159, 342.3, 576, 816.6, 996.5, 1108.6, 1146, 1145.5, 1143, 1117, 842],\n            [-412, -412, 1117, 1117], [446, 248.5, -412, -412, 248, 446, 1117, 1117], [503, 310.5, 139, 16.5, -30, -30, 14.5, 139, 310.5, 503, 811.5, 1117, 1117, 811.5],\n            [1304, 0, 0, 1304, 1499, 1499], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1499, 1499, 1117],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1676, 1676, 802.4], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1676, 1676, 1117],\n            [503, 310.5, 139, 16.5, -30, -30, 14.5, 139, 310.5, 503, 811.5, 1676, 1676, 811.5], [424, 240.1, 94.5, -0.4, -32, 17, 190, 493, 837, 1097, 1286, 1464.5, 1519, 1496.5, 1430],\n            [0, 0, 1489, 1489], [1315, -193, -193, 1315, 1489, 1489], [-189, -189, -13, 1489, 1489, 2], [572, 572, 732, 732], [0, 0, 1489, 1489], [511, 511, 794, 794],\n            [842, -151, -151, 1788, 1788, 981], [642, 447.6, 292.5, 190.9, 157, 157, 190.4, 290.5, 450.4, 663, 857.4, 1012.5, 1114.1, 1148, 1148, 1114.5, 1014, 854],\n            [-402, -417.5, -423, -395.5, -313, -179.8, 1367, 1545, 1560.5, 1566, 1538.5, 1456, 1321.8, -224], [202, 202, 209, 233.4, 306.5, 588, 1104, 1104, 1097, 1072.5, 999, 719],\n            [362, 27, 27, 362, 942, 1277, 1277, 942], [0, 0, 1393, 910], [0, 0, 910, 1393]\n        ];\n        this.KERN_C1 = [\n            '\\'', '\\'', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '.', '.', 'A', 'A', 'A', 'A', 'A', 'A', 'A',\n            'A', 'A', 'A', 'A', 'A', 'B', 'B', 'B', 'B', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F',\n            'I', 'J', 'J', 'J', 'J', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n            'L', 'O', 'O', 'O', 'O', 'O', 'O', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'Q', 'Q', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'S',\n            'S', 'S', 'S', 'S', 'S', 'S', 'S', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T',\n            'T', 'T', 'T', 'T', 'T', 'T', 'U', 'U', 'U', 'U', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'W', 'W', 'W', 'W', 'W', 'W',\n            'W', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y',\n            'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z',\n            'a', 'a', 'a', 'b', 'b', 'b', 'c', 'c', 'e', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'h', 'h', 'h', 'k', 'k', 'k', 'k', 'm', 'm',\n            'm', 'n', 'n', 'n', 'o', 'o', 'o', 'o', 'o', 'p', 'p', 'p', 'r', 'r', 'r', 'r', 'r', 't', 't', 'v', 'v', 'v', 'v', 'v', 'v', 'v', 'v', 'w', 'w', 'w',\n            'w', 'w', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'z', 'z', 'z', 'z', 'z', 'z', 'z',\n            'z', 'z', '\\u00C7', '\\u00E7', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00F8', '\\u00F8', '\\u00F8', '\\u00F8', '\\u00F8'\n        ];\n        this.KERN_C2 = [\n            '\\u00C6', 'A', '\\u00E6', '\\u00C6', 'z', 'y', 'x', 'w', 'v', 'a', 'Z', 'Y', 'X', 'W', 'V', 'T', 'S', 'J', 'I', 'A', '-', ',', 'y', 'w', 'v', 'u', 't',\n            'Y', 'W', 'V', 'U', 'T', 'S', '-', 'T', '.', '-', ',', '-', 'Z', 'Y', 'X', 'W', 'T', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'o', 'e', 'a', 'T', 'A',\n            '?', ';', ':', '.', ',', '-', '\\u00C6', 'A', '.', ',', '\\u00F8', '\\u00E6', '\\u00D8', 'y', 'w', 'v', 'u', 'o', 'e', 'a', 'O', '-', '\\u00D8', '\\u00C7',\n            'y', 'v', 'Y', 'W', 'V', 'T', 'O', 'J', 'G', 'C', '-', '\\'', 'Z', 'Y', 'X', 'T', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'o', 'e', 'a', 'Y', 'A',\n            '.', ',', '.', ',', '\\u00F8', '\\u00E6', 'y', 'u', 'o', 'e', 'a', 'Y', 'T', '-', '\\u00C6', 'y', 'w', 'v', 'S', 'A', '.', ',', '\\u00F8', '\\u00E6',\n            '\\u00D8', '\\u00C6', '\\u00C7', 'z', 'y', 'w', 'v', 'u', 's', 'r', 'o', 'g', 'e', 'c', 'a', 'T', 'S', 'O', 'G', 'C', 'A', '?', ';', ':', '.', '-', ',',\n            '\\u00C6', 'A', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'y', 'u', 'o', 'e', 'a', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'y', 'u',\n            'r', 'o', 'e', 'a', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6', '\\u00D8', '\\u00C7', 'y', 'u', 'o', 'e', 'a', 'O', 'G', 'C', '-', '\\u00F8',\n            '\\u00E6', '\\u00D8', '\\u00C6', 'v', 'u', 's', 'r', 'q', 'p', 'o', 'n', 'm', 'g', 'e', 'd', 'a', 'O', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6',\n            '\\u00D8', '\\u00C7', 'y', 'w', 'o', 'e', 'a', 'Z', 'O', 'G', 'C', '-', 'y', 'w', 'v', 'y', '.', ',', 'T', '-', 'T', '}', 'y', ']', '\\\\', '?', '.',\n            '-', ',', '*', ')', '\\'', '\"', 'y', 'w', 'v', '\\u00F8', 'o', 'e', '-', 'y', 'w', 'v', 'y', 'w', 'v', 'y', 'x', 'v', '.', ',', 'y', '.', ',',\n            '\\u00E6', 'a', '.', '-', ',', 'y', '-', '\\u00F8', '\\u00E6', 'o', 'e', 'a', '.', '-', ',', '\\u00E6', 'a', '.', '-', ',', '\\u00F8', '\\u00E7', 'o', 'g',\n            'e', 'd', 'c', '-', '\\u00F8', '\\u00E6', '\\u00E7', 'q', 'o', 'g', 'e', 'd', 'c', 'a', '.', '-', ',', '\\u00F8', '\\u00E7', 'q', 'o', 'g', 'e', 'd', 'c',\n            '-', '-', '-', 'Z', 'Y', 'X', 'T', '.', ',', 'y', 'x', 'v', '.', ','\n        ];\n        this.KERN_K = [\n            100, 100, 20, 50, 40, 40, 50, 20, 40, 20, 30, 140, 80, 50, 50, 150, 20, 100, 30, 50, 160, 130, 50, 30, 50, 10, 20, 80, 50, 60, 10, 120, 10, 50, 60,\n            20, -10, 20, 50, 20, 20, 10, 20, 50, 50, 50, 50, 100, 110, 50, 50, 100, -30, 100, -60, 60, 60, 300, 300, 30, 10, 10, 20, 20, 70, 60, 20, 80, 70, 80,\n            50, 70, 70, 60, 20, 110, 20, 20, 110, 110, 160, 100, 110, 170, 20, -100, 20, 20, 160, 120, 20, 20, 10, 50, 30, 30, 50, 50, 70, 50, 50, 50, -20, 50,\n            300, 300, 30, 30, 50, 50, 55, 20, 50, 50, 40, 20, 60, 100, 20, 30, 20, 30, 22, 20, 20, 20, 220, 240, 50, 130, 40, 170, 200, 200, 200, 200, 180, 200,\n            220, 210, 220, 220, 240, 70, 12, 50, 40, 40, 120, -60, 200, 200, 290, 150, 290, 20, 10, 20, 20, 100, 100, 70, 65, 60, 100, 100, 100, 60, 80, 80, 290,\n            50, 290, 100, 100, 60, 65, 60, 60, 100, 100, 100, 50, 80, 80, 220, 50, 290, 60, 50, 10, 10, 80, 30, 60, 60, 50, 10, 10, 10, 80, 130, 140, 20, 80,\n            100, 110, 110, 100, 130, 100, 130, 100, 100, 130, 130, 120, 140, 20, 80, 200, 200, 290, 140, 290, 60, 50, 20, 20, 65, 40, 60, 60, 50, 10, 20, 20, 20,\n            60, 16, 10, 16, 5, 20, 30, 60, 20, 140, -100, 10, -100, -100, -110, 120, 50, 130, -50, -100, -60, -60, 20, 10, 20, 20, 20, 20, 100, 20, 10, 20, 20,\n            10, 20, 15, 20, 15, 20, 30, 5, 20, 30, 40, 36, 290, 20, 290, 10, 40, 18, 40, 18, 18, 40, 180, 40, 180, 20, 20, 70, 20, 70, 24, 20, 24, 10, 24, 10,\n            20, 50, 18, 40, 18, 10, 18, 10, 18, 10, 18, 40, 190, 40, 190, 12, 10, 10, 12, 10, 12, 10, 10, 20, 50, 20, 20, 20, 10, 50, 30, 30, 15, 20, 15, 20, 30\n        ];\n        this.pathCache = [];\n        this.pathMissing = null;\n        this.ctxReference = null;\n        for (let n = this.GLYPH_DATA.length - 1; n >= 0; n--)\n            this.pathCache[n] = null;\n    }\n    getKerning(ch1, ch2) {\n        const sz = this.KERN_K.length;\n        for (let n = 0; n < sz; n++)\n            if (this.KERN_C1[n] == ch1 && this.KERN_C2[n] == ch2)\n                return -this.KERN_K[n];\n        return 0;\n    }\n    static measureText(txt, size) { return this.main.measureText(txt, size); }\n    measureText(txt, size) {\n        let font = FontData.main;\n        let scale = size / font.UNITS_PER_EM;\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = this.getIndex(ch);\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                continue;\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n        }\n        return [dx * scale, font.ASCENT * scale * font.ASCENT_FUDGE, -font.DESCENT * scale];\n    }\n    static measureWidths(txt, size) { return this.main.measureWidths(txt, size); }\n    measureWidths(txt, size) {\n        let font = FontData.main;\n        let scale = size / font.UNITS_PER_EM;\n        let xpos = [0];\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = this.getIndex(ch);\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                xpos.push(dx * scale);\n                continue;\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n            xpos.push(dx * scale);\n        }\n        return xpos;\n    }\n    getIndex(ch) {\n        return this.UNICODE.indexOf(ch);\n    }\n    getRawGlyph(idx) {\n        return this.GLYPH_DATA[idx];\n    }\n    getGlyphPath(idx) {\n        let path = this.pathCache[idx];\n        if (path != null)\n            return path;\n        path = new Path2D(this.GLYPH_DATA[idx]);\n        this.pathCache[idx] = path;\n        return path;\n    }\n    getMissingPath() {\n        if (!this.pathMissing)\n            this.pathMissing = new Path2D(this.MISSING_DATA);\n        return this.pathMissing;\n    }\n    getOutlineX(idx) { return this.OUTLINE_X[idx].slice(0); }\n    getOutlineY(idx) { return this.OUTLINE_Y[idx].slice(0); }\n    initNativeFont(ctx) {\n        if (ctx == null && this.ctxReference)\n            return;\n        if (ctx == null) {\n            let canvas = new OffscreenCanvas(256, 256);\n            this.ctxReference = canvas.getContext('2d');\n        }\n        else\n            this.ctxReference = ctx;\n    }\n    static measureTextNative(txt, family, size, opt = {}) {\n        return this.main.measureTextNative(txt, family, size, opt);\n    }\n    measureTextNative(txt, family, size, opt = {}) {\n        if (!this.ctxReference)\n            throw 'Calling measureTextNative without having called initNativeFont first';\n        this.ctxReference.save();\n        let pfx = '';\n        if (opt.bold)\n            pfx += 'bold ';\n        if (opt.italic)\n            pfx += 'italic ';\n        this.ctxReference.font = pfx + size + 'px ' + family;\n        let metrics = this.ctxReference.measureText(txt);\n        this.ctxReference.restore();\n        const FUDGE = this.ASCENT_FUDGE * this.ASCENT / this.UNITS_PER_EM;\n        return [metrics.width, size * FUDGE, size * (-this.DESCENT / this.ASCENT) * FUDGE];\n    }\n}\nFontData.main = new FontData();\n//# sourceMappingURL=FontData.js.map","import { colourCode } from './util';\nexport class Theme {\n}\nTheme.BASE_URL = null;\nTheme.RESOURCE_URL = null;\nTheme.foreground = 0x000000;\nTheme.background = 0xFFFFFF;\nTheme.lowlight = 0x24D0D0;\nTheme.lowlightEdge1 = 0x47D5D2;\nTheme.lowlightEdge2 = 0x008FD1;\nTheme.highlight = 0x00FF00;\nTheme.highlightEdge1 = 0x00CA59;\nTheme.highlightEdge2 = 0x008650;\nTheme.error = 0xFF0000;\nexport function initWebMolKit(resourcePath) {\n    Theme.RESOURCE_URL = resourcePath;\n    try {\n        let _ = document;\n    }\n    catch (e) {\n        return;\n    }\n    if (document)\n        installInlineCSS('main', composeMainCSS());\n}\nlet cssTagsInstalled = new Set();\nexport function hasInlineCSS(tag) { return cssTagsInstalled.has(tag); }\nexport function installInlineCSS(tag, css) {\n    if (cssTagsInstalled.has(tag))\n        return false;\n    let el = document.createElement('style');\n    el.innerHTML = css;\n    document.head.appendChild(el);\n    cssTagsInstalled.add(tag);\n    return true;\n}\nfunction composeMainCSS() {\n    let lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n    let highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n    return `\n\t\t.wmk-button\n\t\t{\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: 6px 12px;\n\t\t\tmargin-bottom: 0;\n\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\tfont-size: 14px;\n\t\t\tfont-weight: normal;\n\t\t\tline-height: 1.42857143;\n\t\t\ttext-align: center;\n\t\t\twhite-space: nowrap;\n\t\t\tvertical-align: middle;\n\t\t\tcursor: pointer;\n\t\t\tbackground-image: none;\n\t\t\tborder: 1px solid transparent;\n\t\t\tborder-radius: 4px;\n\t\t\t-ms-touch-action: manipulation; touch-action: manipulation;\n\t\t\t-webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;\n\t\t}\n\t\t.wmk-button:focus,\n\t\t.wmk-button:active:focus,\n\t\t.wmk-button.active:focus,\n\t\t.wmk-button.focus,\n\t\t.wmk-button:active.focus,\n\t\t.wmk-button.active.focus\n\t\t{\n\t\t\toutline: thin dotted;\n\t\t\toutline: 5px auto -webkit-focus-ring-color;\n\t\t\toutline-offset: -2px;\n\t\t}\n\t\t.wmk-button:hover,\n\t\t.wmk-button:focus,\n\t\t.wmk-button.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\ttext-decoration: none;\n\t\t}\n\t\t.wmk-button:active,\n\t\t.wmk-button.active\n\t\t{\n\t\t\tbackground-image: none;\n\t\t\toutline: 0;\n\t\t\t-webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);\n\t\t\tbox-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);\n\t\t}\n\t\t.wmk-button.disabled,\n\t\t.wmk-button[disabled],\n\t\tfieldset[disabled] .wmk-button\n\t\t{\n\t\t\tcursor: not-allowed;\n\t\t\tfilter: alpha(opacity=65);\n\t\t\t-webkit-box-shadow: none;\n\t\t\tbox-shadow: none;\n\t\t\topacity: .65;\n\t\t}\n\t\ta.wmk-button.disabled,\n\t\tfieldset[disabled] a.wmk-button\n\t\t{\n\t\t\tpointer-events: none;\n\t\t}\n\n\t\t/* shrunken button */\n\n\t\t.wmk-button-small\n\t\t{\n\t\t\tpadding: 2px 4px;\n\t\t\tline-height: 1;\n\t\t\tfont-size: 12px;\n\t\t}\n\n\t\t/* default button */\n\n\t\t.wmk-button-default\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #fff;\n\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\tborder-color: #ccc;\n\t\t}\n\t\t.wmk-button-default:focus,\n\t\t.wmk-button-default.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #8c8c8c;\n\t\t}\n\t\t.wmk-button-default:hover\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #adadad;\n\t\t}\n\t\t.wmk-button-default:active,\n\t\t.wmk-button-default.active,\n\t\t.open > .dropdown-toggle.wmk-button-default\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #adadad;\n\t\t}\n\t\t.wmk-button-default:active:hover,\n\t\t.wmk-button-default.active:hover,\n\t\t.open > .dropdown-toggle.wmk-button-default:hover,\n\t\t.wmk-button-default:active:focus,\n\t\t.wmk-button-default.active:focus,\n\t\t.open > .dropdown-toggle.wmk-button-default:focus,\n\t\t.wmk-button-default:active.focus,\n\t\t.wmk-button-default.active.focus,\n\t\t.open > .dropdown-toggle.wmk-button-default.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #d4d4d4;\n\t\t\tborder-color: #8c8c8c;\n\t\t}\n\t\t.wmk-button-default:active,\n\t\t.wmk-button-default.active,\n\t\t.open > .dropdown-toggle.wmk-button-default\n\t\t{\n\t\t\tbackground-image: none;\n\t\t}\n\t\t.wmk-button-default.disabled:hover,\n\t\t.wmk-button-default[disabled]:hover,\n\t\tfieldset[disabled] .wmk-button-default:hover,\n\t\t.wmk-button-default.disabled:focus,\n\t\t.wmk-button-default[disabled]:focus,\n\t\tfieldset[disabled] .wmk-button-default:focus,\n\t\t.wmk-button-default.disabled.focus,\n\t\t.wmk-button-default[disabled].focus,\n\t\tfieldset[disabled] .wmk-button-default.focus\n\t\t{\n\t\t\tbackground-color: #fff;\n\t\t\tborder-color: #ccc;\n\t\t}\n\t\t.wmk-button-default .badge\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #333;\n\t\t}\n\n\t\t/* primary button */\n\n\t\t.wmk-button-primary\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #008FD2;\n\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\tborder-color: #00C0C0;\n\t\t}\n\t\t.wmk-button-primary:focus,\n\t\t.wmk-button-primary.focus\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: ${lowlight};\n\t\t\tborder-color: #122b40;\n\t\t}\n\t\t.wmk-button-primary:hover\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #286090;\n\t\t\tborder-color: #204d74;\n\t\t}\n\t\t.wmk-button-primary:active,\n\t\t.wmk-button-primary.active,\n\t\t.open > .dropdown-toggle.wmk-button-primary\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #286090;\n\t\t\tborder-color: #20744d;\n\t\t}\n\t\t.wmk-button-primary:active:hover,\n\t\t.wmk-button-primary.active:hover,\n\t\t.open > .dropdown-toggle.wmk-button-primary:hover,\n\t\t.wmk-button-primary:active:focus,\n\t\t.wmk-button-primary.active:focus,\n\t\t.open > .dropdown-toggle.wmk-button-primary:focus,\n\t\t.wmk-button-primary:active.focus,\n\t\t.wmk-button-primary.active.focus,\n\t\t.open > .dropdown-toggle.wmk-button-primary.focus\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: ${highlight};\n\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\tborder-color: #12802b;\n\t\t}\n\t\t.wmk-button-primary:active,\n\t\t.wmk-button-primary.active,\n\t\t.open > .dropdown-toggle.wmk-button-primary\n\t\t{\n\t\t\tbackground-image: none;\n\t\t}\n\t\t.wmk-button-primary.disabled:hover,\n\t\t.wmk-button-primary[disabled]:hover,\n\t\tfieldset[disabled] .wmk-button-primary:hover,\n\t\t.wmk-button-primary.disabled:focus,\n\t\t.wmk-button-primary[disabled]:focus,\n\t\tfieldset[disabled] .wmk-button-primary:focus,\n\t\t.wmk-button-primary.disabled.focus,\n\t\t.wmk-button-primary[disabled].focus,\n\t\tfieldset[disabled] .wmk-button-primary.focus\n\t\t{\n\t\t\tbackground-color: #337ab7;\n\t\t\tborder-color: #2ea46d;\n\t\t}\n\t\t.wmk-button-primary .badge\n\t\t{\n\t\t\tcolor: #337ab7;\n\t\t\tbackground-color: #fff;\n\t\t}\n\t`;\n}\n//# sourceMappingURL=Theme.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Theme } from '../util/Theme';\nimport { readTextURL } from '../util/util';\nimport { Vec } from '../util/Vec';\nlet globalInstance = null;\nconst ONTOLOGY_FILES = [\n    'units'\n];\nexport class OntologyTree {\n    static get main() { return globalInstance; }\n    constructor() {\n        this.roots = [];\n        this.mapTerms = new Map();\n        this.alreadyLoaded = new Set();\n    }\n    static init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (globalInstance)\n                return;\n            globalInstance = new OntologyTree();\n            for (let fn of ONTOLOGY_FILES) {\n                let url = Theme.RESOURCE_URL + '/data/ontology/' + fn + '.onto';\n                globalInstance.loadFromURL(url);\n            }\n        });\n    }\n    getRoots() {\n        return this.roots;\n    }\n    hasTerm(uri) { return this.mapTerms.has(uri); }\n    getBranch(uri) {\n        return this.mapTerms.get(uri);\n    }\n    getBranchList(root) {\n        if (typeof root == 'string') {\n            let look = this.mapTerms.get(root);\n            if (!look)\n                throw `Unknown branch URI: ${root}`;\n            if (look.length > 1)\n                throw `Ambiguous branch URI occurs more than once: ${root}`;\n            root = look[0];\n        }\n        let list = [];\n        let accumulate = (branch) => {\n            list.push(branch);\n            for (let child of Vec.safeArray(branch.children))\n                accumulate(child);\n        };\n        accumulate(root);\n        return list;\n    }\n    loadFromURL(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.alreadyLoaded.has(url))\n                return;\n            this.alreadyLoaded.add(url);\n            let text = yield readTextURL(url);\n            if (!text)\n                throw `Resource not found: ${url}`;\n            this.loadContent(text);\n        });\n    }\n    loadContent(text) {\n        let termList = [];\n        let pos = 0;\n        for (let line of text.split(/\\n/)) {\n            pos++;\n            line = line.trim();\n            if (!line || line.startsWith('#'))\n                continue;\n            let idx = line.indexOf('http');\n            if (idx < 0)\n                throw `Line ${pos} invalid, no URI term: ${line}`;\n            let depth = 0;\n            for (let n = 0; n < idx; n++)\n                if (line.charAt(n) == '-')\n                    depth++;\n            let uri = line.substring(idx);\n            idx = uri.indexOf(' ');\n            if (idx < 0)\n                throw `Line ${pos} invalid, no label: ${line}`;\n            let label = uri.substring(idx + 1);\n            uri = uri.substring(0, idx);\n            let term = null;\n            if (depth == 0)\n                term = this.roots.find((look) => look.uri == uri);\n            if (!term) {\n                term = { uri, label, 'parent': null, 'children': [], depth };\n                if (depth == 0)\n                    this.roots.push(term);\n                else {\n                    for (let n = termList.length - 1; n >= 0; n--)\n                        if (termList[n].depth == depth - 1) {\n                            term.parent = termList[n];\n                            termList[n].children.push(term);\n                            break;\n                        }\n                    if (!term.parent)\n                        throw `Line ${pos} invalid hierarchy, no parent found`;\n                }\n                let list = this.mapTerms.get(uri);\n                if (list)\n                    list.push(term);\n                else\n                    this.mapTerms.set(uri, [term]);\n            }\n            termList.push(term);\n        }\n    }\n    debugString(term) {\n        let lines = [];\n        let emit = (term) => {\n            lines.push('* '.repeat(term.depth) + `<${term.uri}> \"${term.label}\"`);\n            for (let child of term.children)\n                emit(child);\n        };\n        emit(term);\n        return lines.join('\\n');\n    }\n}\n//# sourceMappingURL=OntologyTree.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2021 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {Vec} from 'webmolkit/util/Vec';\n\n/*\n\tTry to arrange a list of boxes into a more rectangular pattern, which has a better ratio than stacking everything vertically.\n*/\n\nenum SquarePackingSpring\n{\n\tStrong = 0,\n\tMedium = 1,\n\tWeak = 2,\n}\n\ninterface SquarePackingCandidate\n{\n\tidxStart:number;\n\tsprings:SquarePackingSpring[];\n\tlayout?:Box[];\n\toutline?:Size;\n\tscore?:number; // lower is better\n\thash?:string;\n}\n\ninterface SquarePackingSegment\n{\n\ty:number;\n\tx1:number;\n\tx2:number;\n}\n\nexport class SquarePacking\n{\n\tpublic outline:Size;\n\tpublic layout:Box[] = null;\n\n\tprivate wantRatio:number;\n\n\t// --------------------- public methods ---------------------\n\n\t// sets up the object with the mandatory information\n\tconstructor(private packSize:Size, private boxes:Box[], private hspace:number, private vspace:number)\n\t{\n\t\tthis.wantRatio = packSize.w / packSize.h;\n\n\t\t/*\n\t\t// !! temporary validation\n\t\tlet segs:SquarePackingSegment[] =\n\t\t[\n\t\t\t{'y': 0, 'x1': 0, 'x2': 1},\n\t\t\t{'y': 2, 'x1': 1, 'x2': 3},\n\t\t\t{'y': 1, 'x1': 3, 'x2': Number.POSITIVE_INFINITY}\n\t\t];\n\t\tthis.mergeSegmentAbove(segs, {'y': 2.5, 'x1': 1.5, 'x2': 2.5});\n\t\t//this.mergeSegmentBelow(segs, {'y': -1.5, 'x1': 2, 'x2': 3.5});\n\t\tfor (let seg of segs) console.log(JSON.stringify(seg));\n\t\tthrow 'blork';*/\n\t}\n\n\t// carries out the arrangement: returns whether it got something good\n\tpublic pack():boolean\n\t{\n\t\tlet candidates:SquarePackingCandidate[] = [];\n\t\tlet num = this.boxes.length;\n\t\tfor (let n = 0; n < num; n++)\n\t\t{\n\t\t\tlet cand:SquarePackingCandidate = {idxStart: n, springs: Vec.anyArray(SquarePackingSpring.Weak, num)};\n\t\t\tcand.hash = cand.idxStart + '/' + cand.springs;\n\t\t\tthis.processCandidate(cand);\n\t\t\tcandidates.push(cand);\n\t\t}\n\n\t\tconst KEEP = 100;\n\t\tcandidates = candidates.sort((c1, c2) => c1.score - c2.score).slice(0, KEEP);\n\n\t\tfor (let sanity = 100; sanity > 0; sanity--)\n\t\t{\n\t\t\tlet hashes = new Set<string>();\n\t\t\tfor (let cand of candidates) hashes.add(cand.hash);\n\n\t\t\tlet batch = candidates.slice(0);\n\t\t\tfor (let cand of candidates) for (let n = 0; n < num; n++) if (n != cand.idxStart)\n\t\t\t{\n\t\t\t\tfor (let sp of [SquarePackingSpring.Strong, SquarePackingSpring.Medium, SquarePackingSpring.Weak]) if (cand.springs[n] != sp)\n\t\t\t\t{\n\t\t\t\t\tlet mod:SquarePackingCandidate = {idxStart: cand.idxStart, springs: cand.springs.slice(0)};\n\t\t\t\t\tmod.springs[n] = sp;\n\t\t\t\t\tmod.hash = mod.idxStart + '/' + mod.springs;\n\t\t\t\t\tif (hashes.has(mod.hash)) continue;\n\t\t\t\t\tthis.processCandidate(mod);\n\t\t\t\t\tbatch.push(mod);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbatch = batch.sort((c1, c2) => c1.score - c2.score).slice(0, KEEP);\n\n\t\t\tlet same = true;\n\t\t\tfor (let n = 0; n < candidates.length && n < batch.length; n++) if (candidates[n].hash != batch[n].hash) {same = false; break;}\n\n\t\t\tif (!same) break;\n\n\t\t\tcandidates = batch;\n\t\t}\n\n\t\tlet best = candidates[0];\n\n\t\tthis.outline = best.outline;\n\t\tthis.layout = best.layout;\n\t\tlet minY = Vec.min(this.layout.map((b) => b.y));\n\t\tfor (let box of this.layout) box.y -= minY;\n\n\t\treturn true;\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\tprivate processCandidate(cand:SquarePackingCandidate):void\n\t{\n\t\tlet len = this.boxes.length;\n\t\tcand.layout = this.boxes.map((box) => new Box(0, 0, box.w, box.h));\n\t\tlet placed = Vec.booleanArray(false, len);\n\t\tplaced[cand.idxStart] = true;\n\n\t\tlet placeAbove = (idx:number, spring:SquarePackingSpring):void =>\n\t\t{\n\t\t\tlet box = cand.layout[idx];\n\t\t\tlet segs:SquarePackingSegment[] = null;\n\t\t\tfor (let n = idx + 1; n < len; n++) if (placed[n])\n\t\t\t{\n\t\t\t\tlet ref = cand.layout[n];\n\t\t\t\tlet newsegs:SquarePackingSegment[] = [];\n\t\t\t\tif (ref.minX() > 0) newsegs.push({y: ref.midY() - this.vspace, x1: 0, x2: ref.minX() - this.hspace});\n\t\t\t\tnewsegs.push({y: ref.minY() - this.vspace, x1: Math.max(0, ref.minX() - this.hspace), x2: ref.maxX() + this.hspace});\n\t\t\t\tnewsegs.push({y: ref.minY() - this.vspace + 0.5 * box.h, x1: ref.maxX() + this.hspace, x2: Number.POSITIVE_INFINITY});\n\t\t\t\tif (segs == null) segs = newsegs;\n\t\t\t\telse for (let nseg of newsegs) this.mergeSegmentAbove(segs, nseg);\n\t\t\t}\n\n\t\t\tlet bestX = 0, bestY = Number.NEGATIVE_INFINITY;\n\t\t\tfor (let n = 0; n < segs.length; n++)\n\t\t\t{\n\t\t\t\tlet x = segs[n].x1, y = Number.POSITIVE_INFINITY;\n\t\t\t\tfor (let i = n; i < segs.length; i++)\n\t\t\t\t{\n\t\t\t\t\ty = Math.min(y, segs[i].y);\n\t\t\t\t\tif (box.w < segs[i].x2 - x) break;\n\t\t\t\t}\n\t\t\t\tif (y > bestY) [bestX, bestY] = [x, y];\n\t\t\t\tif (spring == SquarePackingSpring.Strong) break;\n\t\t\t\tif (spring == SquarePackingSpring.Medium && x > 0.5 * this.packSize.w) break;\n\t\t\t}\n\t\t\tbox.x = bestX;\n\t\t\tbox.y = bestY - box.h;\n\t\t\tplaced[idx] = true;\n\t\t};\n\t\tlet placeBelow = (idx:number, spring:SquarePackingSpring):void =>\n\t\t{\n\t\t\tlet box = cand.layout[idx];\n\t\t\tlet segs:SquarePackingSegment[] = null;\n\t\t\tfor (let n = idx - 1; n >= 0; n--) if (placed[n])\n\t\t\t{\n\t\t\t\tlet ref = cand.layout[n];\n\t\t\t\tlet newsegs:SquarePackingSegment[] = [];\n\t\t\t\tif (ref.minX() > 0) newsegs.push({y: ref.midY() + this.vspace, x1: 0, x2: ref.minX() - this.hspace});\n\t\t\t\tnewsegs.push({y: ref.maxY() + this.vspace, x1: Math.max(0, ref.minX() - this.hspace), x2: ref.maxX() + this.hspace});\n\t\t\t\tnewsegs.push({y: ref.maxY() + this.vspace - 0.5 * box.h, x1: ref.maxX() + this.hspace, x2: Number.POSITIVE_INFINITY});\n\t\t\t\tif (segs == null) segs = newsegs;\n\t\t\t\telse for (let nseg of newsegs) this.mergeSegmentBelow(segs, nseg);\n\t\t\t}\n\n\t\t\tlet bestX = 0, bestY = Number.POSITIVE_INFINITY;\n\t\t\tfor (let n = 0; n < segs.length; n++)\n\t\t\t{\n\t\t\t\tlet x = segs[n].x1, y = Number.NEGATIVE_INFINITY;\n\t\t\t\tfor (let i = n; i < segs.length; i++)\n\t\t\t\t{\n\t\t\t\t\ty = Math.max(y, segs[i].y);\n\t\t\t\t\tif (box.w < segs[i].x2 - x) break;\n\t\t\t\t}\n\t\t\t\tif (y < bestY) [bestX, bestY] = [x, y];\n\t\t\t\tif (spring == SquarePackingSpring.Strong) break;\n\t\t\t\tif (spring == SquarePackingSpring.Medium && x > 0.5 * this.packSize.w) break;\n\t\t\t}\n\t\t\tbox.x = bestX;\n\t\t\tbox.y = bestY;\n\t\t\tplaced[idx] = true;\n\t\t};\n\n\t\tfor (let d = 1; d < len; d++)\n\t\t{\n\t\t\tlet i1 = cand.idxStart - d, i2 = cand.idxStart + d;\n\t\t\tif (i1 >= 0) placeAbove(i1, cand.springs[i1]);\n\t\t\tif (i2 < len) placeBelow(i2, cand.springs[i2]);\n\t\t}\n\n\t\tlet loX = 0, hiX = Vec.max(cand.layout.map((box) => box.maxX()));\n\t\tlet loY = Vec.min(cand.layout.map((box) => box.minY())), hiY = Vec.max(cand.layout.map((box) => box.maxY()));\n\t\tcand.outline = new Size(hiX - loX, hiY - loY);\n\t\tlet ratio = cand.outline.w / cand.outline.h;\n\t\tcand.score = Math.abs(ratio - this.wantRatio) * (cand.outline.w + cand.outline.h);\n\t\tcand.score += Vec.sum((cand.layout.map((box) => box.x)));\n\t\tfor (let n = 0; n < cand.layout.length - 1; n++) cand.score += Math.max(0, cand.layout[n].minY() - cand.layout[n].maxY());\n\t}\n\n\tprivate mergeSegmentAbove(segs:SquarePackingSegment[], merge:SquarePackingSegment):void\n\t{\n\t\tfor (let look of segs)\n\t\t{\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2 && merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) return; // completely buried\n\t\t\t\tsegs.push({y: look.y, x1: merge.x2, x2: look.x2});\n\t\t\t\tlook.x2 = merge.x1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) look.x2 = merge.x1; else merge.x1 = look.x2;\n\t\t\t}\n\t\t\tif (merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) look.x1 = merge.x2; else merge.x2 = look.x1;\n\t\t\t}\n\t\t}\n\t\tfor (let n = segs.length - 1; n >= 0; n--) if (segs[n].x1 >= segs[n].x2) segs.splice(n, 1);\n\t\tif (merge.x1 < merge.x2)\n\t\t{\n\t\t\tsegs.push(merge);\n\t\t\tsegs.sort((seg1, seg2) => seg1.x1 - seg2.x1);\n\t\t}\n\t}\n\tprivate mergeSegmentBelow(segs:SquarePackingSegment[], merge:SquarePackingSegment):void\n\t{\n\t\tfor (let look of segs)\n\t\t{\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2 && merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) return; // completely buried\n\t\t\t\tsegs.push({y: look.y, x1: merge.x2, x2: look.x2});\n\t\t\t\tlook.x2 = merge.x1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) look.x2 = merge.x1; else merge.x1 = look.x2;\n\t\t\t}\n\t\t\tif (merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) look.x1 = merge.x2; else merge.x2 = look.x1;\n\t\t\t}\n\t\t}\n\t\tfor (let n = segs.length - 1; n >= 0; n--) if (segs[n].x1 >= segs[n].x2) segs.splice(n, 1);\n\t\tif (merge.x1 < merge.x2)\n\t\t{\n\t\t\tsegs.push(merge);\n\t\t\tsegs.sort((seg1, seg2) => seg1.x1 - seg2.x1);\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {ArrangeMolecule} from 'webmolkit/gfx/ArrangeMolecule';\nimport {ArrangeMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MoleculeStream} from 'webmolkit/data/MoleculeStream';\nimport {formatDouble} from 'webmolkit/util/util';\nimport {OntologyTree} from 'webmolkit/data/OntologyTree';\nimport {SquarePacking} from './SquarePacking';\nimport {FontData} from 'webmolkit/gfx/FontData';\nimport {MixfileComponent} from './Mixfile';\nimport {NormMixture} from './NormMixture';\nimport {Mixture} from './Mixture';\n\n/*\n\tArranging a Mixfile: will create a tree layout for all of the components, according to parameters.\n*/\n\nexport enum ArrangeMixtureLineSource\n{\n\tName,\n\tQuantity,\n\tIdentifier,\n\tMeta,\n}\n\nexport interface ArrangeMixtureLine\n{\n\ttext:string;\n\tcol:number;\n\tsource:ArrangeMixtureLineSource;\n}\n\nexport interface ArrangeMixtureComponent\n{\n\torigin:number[];\n\tcontent:MixfileComponent;\n\tparentIdx:number;\n\n\tboundary?:Box; // outer boundary (position on canvas)\n\n\tmol?:Molecule;\n\tmolLayout?:ArrangeMolecule;\n\tmolBox?:Box;\n\n\tnameBox?:Box;\n\tnameLines?:ArrangeMixtureLine[];\n\tfontSize?:number;\n\n\toutline?:Box; // inner boundary (surrounds molecule, names, etc.)\n\n\tisCollapsed?:boolean;\n\tcollapseBox?:Box;\n}\n\nconst PADDING = 0.25;\nconst VSPACE = 0.5;\nconst HSPACE = 1;\nconst COLLAPSE_SIZE = 0.3;\nconst COLLAPSE_GAP = 0.05;\n\nexport class ArrangeMixture\n{\n\tpublic norm:NormMixture = null; // optional: contents may be used for additional decoration\n\n\tpublic scale:number;\n\tpublic nameFontSize:number;\n\tpublic width = 0;\n\tpublic height = 0;\n\n\tpublic components:ArrangeMixtureComponent[] = [];\n\n\t// parameters to influence the drawing\n\tpublic limitStructW:number;\n\tpublic limitStructH:number;\n\tpublic minBoxSize:Size = null;\n\tpublic showCollapsors = false; // if true, boxes for [+]/[-] will be created for interactive use\n\tpublic collapsedBranches:number[][] = []; // any origin specified in this list will not display its children\n\tpublic packBranches:Size = null; // if defined, makes an effort to pack branches into the box size\n\tpublic hardwrapName:number; // name width guaranteed not longer than this\n\tpublic softwrapName:number; // name wrapping at selected characters kicks in after this width\n\tpublic includeIdentifiers = true; // if switched off, identifiers won't be included in text\n\n\t// --------------------- public methods ---------------------\n\n\t// sets up the object with the mandatory information\n\tconstructor(public mixture:Mixture, public measure:ArrangeMeasurement, public policy:RenderPolicy)\n\t{\n\t\tthis.scale = policy.data.pointScale;\n\t\tthis.nameFontSize = 0.5 * this.scale;\n\t\tthis.limitStructW = this.limitStructH = this.scale * 10;\n\t\tthis.hardwrapName = 12 * this.scale;\n\t\tthis.softwrapName = 8 * this.scale;\n\t}\n\n\t// carries out the arrangement\n\tpublic arrange():void\n\t{\n\t\tthis.createComponents();\n\t\tthis.layoutSubComponents(0);\n\t\tthis.contractComponents();\n\n\t\t// normalize boundaries\n\t\tlet outline:Box = null;\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tif (outline) outline = outline.union(comp.boundary); else outline = comp.boundary;\n\t\t}\n\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tcomp.boundary.x -= outline.x;\n\t\t\tcomp.boundary.y -= outline.y;\n\n\t\t\tif (comp.molLayout)\n\t\t\t{\n\t\t\t\tlet b1 = comp.boundary, b2 = comp.molBox;\n\t\t\t\tcomp.molLayout.squeezeInto(b1.x + b2.x, b1.y + b2.y, b2.w, b2.h);\n\t\t\t}\n\t\t}\n\t\tthis.width = outline.w;\n\t\tthis.height = outline.h;\n\t}\n\n\t// resize the whole thing\n\tpublic scaleComponents(modScale:number):void\n\t{\n\t\tif (modScale == 1) return;\n\n\t\tthis.scale *= modScale;\n\t\tthis.width *= modScale;\n\t\tthis.height *= modScale;\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tcomp.boundary.scaleBy(modScale);\n\t\t\tcomp.outline.scaleBy(modScale);\n\t\t\tif (comp.molBox)\n\t\t\t{\n\t\t\t\tcomp.molBox.scaleBy(modScale);\n\t\t\t\tif (comp.molLayout)\n\t\t\t\t{\n\t\t\t\t\tlet mx = comp.boundary.x + comp.molBox.x, my = comp.boundary.y + comp.molBox.y;\n\t\t\t\t\tcomp.molLayout.squeezeInto(mx, my, comp.molBox.w, comp.molBox.h);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (comp.nameBox) comp.nameBox.scaleBy(modScale);\n\t\t\tif (comp.collapseBox) comp.collapseBox.scaleBy(modScale);\n\t\t\tcomp.fontSize *= modScale;\n\t\t}\n\t}\n\n\t// returns the index of the indicated origin vector, or -1 if not present\n\tpublic findComponent(origin:number[]):number\n\t{\n\t\tfor (let n = 0; n < this.components.length; n++) if (Vec.equals(this.components[n].origin, origin)) return n;\n\t\treturn -1;\n\t}\n\n\t// turn quantity info into a readable string\n\tpublic static formatQuantity(mixcomp:MixfileComponent):string\n\t{\n\t\tlet prec = (val:number):string =>\n\t\t{\n\t\t\tif (val == null) return '';\n\t\t\tif (val > 10000) return Math.round(val).toString();\n\t\t\tlet str = val.toPrecision(6);\n\t\t\tif (str.indexOf('e') >= 0 || str.indexOf('.') < 0) return str;\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tif (str.endsWith('0')) str = str.substring(0, str.length - 1);\n\t\t\t\telse if (str.endsWith('.')) {str = str.substring(0, str.length - 1); break;}\n\t\t\t\telse break;\n\t\t\t}\n\t\t\treturn str;\n\t\t};\n\n\t\tif (mixcomp.ratio)\n\t\t{\n\t\t\tif (mixcomp.ratio.length == 2) return prec(mixcomp.ratio[0]) + '/' + prec(mixcomp.ratio[1]);\n\t\t\treturn null; // invalid ratio\n\t\t}\n\n\t\tif (mixcomp.quantity == null) return null;\n\n\t\tlet str = '';\n\t\tif (mixcomp.relation && mixcomp.relation != '=')\n\t\t{\n\t\t\tlet rel = mixcomp.relation;\n\t\t\tif (rel == '>=') rel = '\\u{2265}'; else if (rel == '<=') rel = '\\u{2264}';\n\t\t\tstr += rel /*+ ' '*/;\n\t\t}\n\t\tif (mixcomp.quantity instanceof Array)\n\t\t{\n\t\t\tif (mixcomp.quantity.length == 0) return;\n\t\t\tstr += prec(mixcomp.quantity[0]);\n\t\t\tif (mixcomp.quantity.length >= 2) str += ' - ' + prec(mixcomp.quantity[1]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr += prec(mixcomp.quantity); // is presumed to be scalar\n\t\t\tif (mixcomp.error)\n\t\t\t{\n\t\t\t\t// TODO: match the significant figures more carefully\n\t\t\t\tstr += ' \\u{00B1} ' + prec(mixcomp.error);\n\t\t\t}\n\t\t}\n\n\t\tif (mixcomp.units)\n\t\t{\n\t\t\tif (!mixcomp.units.startsWith('%')) str += ' ';\n\t\t\tstr += mixcomp.units;\n\t\t}\n\n\t\treturn str;\n\t}\n\n\t// if the component has a \"standardised\" quantity, format and return\n\tprivate formatNormQuantity(origin:number[]):string\n\t{\n\t\tif (!this.norm) return;\n\t\tlet note = this.norm.findNote(origin);\n\t\tif (!note || !note.concQuantity) return;\n\n\t\tlet comp:MixfileComponent =\n\t\t{\n\t\t\tquantity: note.concQuantity,\n\t\t\terror: note.concError,\n\t\t\tunits: note.concUnits,\n\t\t\trelation: note.concRelation,\n\t\t};\n\t\treturn ArrangeMixture.formatQuantity(comp);\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\t// instantiate each component in the diagram (which includes pluses and arrows)\n\tprivate createComponents():void\n\t{\n\t\t// assemble the components into a flat hierarchy\n\t\tlet examineBranch = (origin:number[], mixcomp:MixfileComponent, idx:number):void =>\n\t\t{\n\t\t\tlet comp:ArrangeMixtureComponent = {origin: origin, content: mixcomp, parentIdx: idx};\n\t\t\tlet parentIdx = this.components.push(comp) - 1;\n\n\t\t\t// see if it's been indicated as collapsed\n\t\t\tcomp.isCollapsed = false;\n\t\t\tfor (let origin of this.collapsedBranches) if (Vec.equals(origin, comp.origin)) comp.isCollapsed = true;\n\n\t\t\tif (mixcomp.contents && !comp.isCollapsed) for (let n = 0; n < mixcomp.contents.length; n++)\n\t\t\t{\n\t\t\t\tlet subOrigin = Vec.append(origin, n);\n\t\t\t\texamineBranch(subOrigin, mixcomp.contents[n], parentIdx);\n\t\t\t}\n\t\t};\n\t\texamineBranch([], this.mixture.mixfile, -1);\n\n\t\tlet padding = PADDING * this.scale;\n\n\t\t// do the sizing for each component\n\t\tfor (let [idx, comp] of this.components.entries())\n\t\t{\n\t\t\tlet mixcomp = comp.content;\n\n\t\t\t// handle molecule, if any\n\t\t\tif (mixcomp.molfile) comp.mol = MoleculeStream.readUnknown(mixcomp.molfile);\n\t\t\tif (comp.mol)\n\t\t\t{\n\t\t\t\tcomp.molLayout = new ArrangeMolecule(comp.mol, this.measure, this.policy);\n\t\t\t\tcomp.molLayout.arrange();\n\t\t\t\tcomp.molLayout.squeezeInto(0, 0, this.limitStructW, this.limitStructH);\n\t\t\t\tlet bounds = comp.molLayout.determineBoundary();\n\t\t\t\tcomp.molBox = new Box(padding, padding, Math.ceil(bounds[2] - bounds[0]), Math.ceil(bounds[3] - bounds[1]));\n\t\t\t}\n\t\t\telse comp.molBox = Box.zero();\n\n\t\t\t// handle name, or other content needing representation\n\t\t\tcomp.nameLines = [];\n\t\t\tif (mixcomp.name) this.wrapSplitName(comp.nameLines, mixcomp.name, 0x000000, ArrangeMixtureLineSource.Name);\n\n\t\t\t// (... synonyms, and linewrapping ...)\n\t\t\tlet qline = ArrangeMixture.formatQuantity(mixcomp);\n\t\t\tif (qline) comp.nameLines.push({text: qline, col: 0x000000, source: ArrangeMixtureLineSource.Quantity});\n\n\t\t\tqline = this.formatNormQuantity(comp.origin);\n\t\t\tif (qline) comp.nameLines.push({text: `(${qline})`, col: 0x808080, source: ArrangeMixtureLineSource.Quantity});\n\n\t\t\tif (this.includeIdentifiers && mixcomp.identifiers) for (let key in mixcomp.identifiers)\n\t\t\t{\n\t\t\t\tlet line = key + ' ';\n\t\t\t\tlet val = mixcomp.identifiers[key];\n\t\t\t\tif (val instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tfor (let n = 0; n < val.length; n++) line += (n == 0 ? '' : ', ') + val[n];\n\t\t\t\t}\n\t\t\t\telse line += val;\n\t\t\t\tcomp.nameLines.push({text: this.truncateEllipsis(line), col: 0x42007E, source: ArrangeMixtureLineSource.Identifier});\n\t\t\t}\n\t\t\tif (mixcomp.metadata) for (let meta of mixcomp.metadata)\n\t\t\t{\n\t\t\t\tlet metaString = (m:string | number):string =>\n\t\t\t\t{\n\t\t\t\t\tif (typeof m == 'number') return formatDouble(m, 4);\n\t\t\t\t\tif (!OntologyTree.main) return m;\n\t\t\t\t\tlet branch = OntologyTree.main.getBranch(m);\n\t\t\t\t\tif (Vec.notBlank(branch)) return branch[0].label;\n\t\t\t\t\treturn m;\n\t\t\t\t};\n\t\t\t\tlet bits:string[] = [];\n\t\t\t\tif (Array.isArray(meta)) bits = meta.map((m) => metaString(m)); else bits = [metaString(meta as string | number)];\n\t\t\t\tcomp.nameLines.push({text: bits.join(' '), col: 0x002B88, source: ArrangeMixtureLineSource.Meta});\n\t\t\t}\n\n\t\t\tcomp.nameBox = new Box(padding, padding);\n\t\t\tcomp.fontSize = this.nameFontSize;\n\t\t\tfor (let n = 0; n < comp.nameLines.length; n++)\n\t\t\t{\n\t\t\t\tlet wad = this.measure.measureText(comp.nameLines[n].text, comp.fontSize);\n\t\t\t\tcomp.nameBox.w = Math.max(comp.nameBox.w, wad[0]);\n\t\t\t\tcomp.nameBox.h += wad[1] + (n > 0 ? wad[2] * 2 : 0);\n\t\t\t}\n\n\t\t\tcomp.outline = Box.zero();\n\t\t\tcomp.outline.w = Math.max(comp.molBox.w, comp.nameBox.w) + 2 * padding;\n\t\t\tcomp.outline.h = comp.molBox.h + comp.nameBox.h + 2 * padding;\n\t\t\tif (comp.molBox.notEmpty() && comp.nameBox.notEmpty())\n\t\t\t{\n\t\t\t\tcomp.outline.h += padding;\n\t\t\t\tcomp.nameBox.y += comp.molBox.h + padding;\n\t\t\t\tcomp.molBox.w = comp.nameBox.w = Math.max(comp.molBox.w, comp.nameBox.w);\n\t\t\t}\n\n\t\t\tif (this.minBoxSize)\n\t\t\t{\n\t\t\t\tlet minsz = this.minBoxSize;\n\t\t\t\tlet dw = minsz.w - comp.outline.w, dh = minsz.h - comp.outline.h;\n\t\t\t\tif (dw > 0)\n\t\t\t\t{\n\t\t\t\t\tcomp.outline.w += dw;\n\t\t\t\t\tcomp.molBox.w += dw;\n\t\t\t\t}\n\t\t\t\tif (dh > 0)\n\t\t\t\t{\n\t\t\t\t\tcomp.outline.h += dh;\n\t\t\t\t\tcomp.molBox.h += dh;\n\t\t\t\t\tcomp.nameBox.y += dh;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcomp.boundary = comp.outline.clone();\n\n\t\t\tif ((this.showCollapsors || comp.isCollapsed) && Vec.notBlank(comp.content.contents))\n\t\t\t{\n\t\t\t\tlet gap = COLLAPSE_GAP * this.scale, wh = COLLAPSE_SIZE * this.scale;\n\t\t\t\tcomp.collapseBox = new Box(comp.boundary.maxX() + gap, comp.boundary.midY() - 0.5 * wh, wh, wh);\n\t\t\t\tcomp.boundary.w += gap + wh;\n\t\t\t}\n\t\t}\n\t}\n\n\t// arranges all of the subcomponents for a given index, positioning them relative to the current position; returns the indices of\n\t// the entire branch, for subsequent touchup\n\tprivate layoutSubComponents(idx:number):number[]\n\t{\n\t\tlet wholeBranch:number[] = [idx];\n\t\tlet branchBlock:number[][] = [];\n\t\tlet branchBox:Box[] = [];\n\n\t\tlet totalWidth = 0, totalHeight = 0;\n\n\t\tfor (let n = idx + 1; n < this.components.length; n++)\n\t\t{\n\t\t\tlet comp = this.components[n];\n\t\t\tif (comp.parentIdx != idx) continue;\n\n\t\t\tlet branch = this.layoutSubComponents(n);\n\t\t\tif (branch.length == 0) continue;\n\n\t\t\tlet box:Box = null;\n\t\t\tfor (let i of branch)\n\t\t\t{\n\t\t\t\twholeBranch.push(i);\n\t\t\t\tlet bound = this.components[i].boundary;\n\t\t\t\tif (box) box = box.union(bound); else box = bound;\n\t\t\t}\n\n\t\t\tbranchBlock.push(branch);\n\t\t\tbranchBox.push(box);\n\n\t\t\ttotalWidth = Math.max(totalWidth, box.w);\n\t\t\ttotalHeight += box.h;\n\t\t}\n\t\tif (branchBlock.length == 0) return wholeBranch;\n\n\t\tlet hspace = HSPACE * this.scale, vspace = VSPACE * this.scale;\n\t\ttotalHeight += vspace * (branchBlock.length - 1);\n\n\t\tlet cbox = this.components[idx].boundary;\n\t\tlet x = cbox.maxX() + hspace;\n\n\t\t// special case: may try to pack the boxes into a smaller area rather than vertically on top of each other\n\t\tif (this.packBranches && branchBlock.length > 2 && totalHeight > this.packBranches.h)\n\t\t{\n\t\t\tlet packSize = this.packBranches.clone();\n\t\t\tfor (let box of branchBox) packSize.h = Math.max(packSize.h, box.h); // if a sub-box is bigger than overall, no need to limit it further\n\n\t\t\tlet sq = new SquarePacking(packSize, branchBox, /*hspace*/ vspace, vspace);\n\t\t\tif (sq.pack())\n\t\t\t{\n\t\t\t\tlet y = cbox.midY() - 0.5 * sq.outline.h;\n\t\t\t\tfor (let n = 0; n < branchBlock.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet box = sq.layout[n];\n\t\t\t\t\tlet dx = x - branchBox[n].x + box.x, dy = y - branchBox[n].y + box.y;\n\t\t\t\t\tfor (let i of branchBlock[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.components[i].boundary.x += dx;\n\t\t\t\t\t\tthis.components[i].boundary.y += dy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn wholeBranch;\n\t\t\t}\n\t\t}\n\n\t\t// !! note: not guaranteed that x is high enough to not interfere with other boxes; will need a post-check of some kind, maybe here,\n\t\t//    maybe further down the line\n\n\t\tlet y = cbox.midY() - 0.5 * totalHeight;\n\t\tfor (let n = 0; n < branchBlock.length; n++)\n\t\t{\n\t\t\tlet dx = x - branchBox[n].x, dy = y - branchBox[n].y;\n\t\t\tfor (let i of branchBlock[n])\n\t\t\t{\n\t\t\t\tthis.components[i].boundary.x += dx;\n\t\t\t\tthis.components[i].boundary.y += dy;\n\t\t\t}\n\t\t\ty += branchBox[n].h + vspace;\n\t\t}\n\n\t\treturn wholeBranch;\n\t}\n\n\t// component layout is done, but may be able to \"reel in\" some of the branches to make it smaller\n\tprivate contractComponents():void\n\t{\n\t\tlet allChildren:number[][] = [];\n\t\tfor (let n = 0; n < this.components.length; n++) \n\t\t{\n\t\t\tallChildren.push([]);\n\t\t\tfor (let idx = this.components[n].parentIdx; idx >= 0; idx = this.components[idx].parentIdx) allChildren[idx].push(n);\n\t\t}\n\n\t\tlet hspace = HSPACE * this.scale, padding = PADDING * this.scale;\n\n\t\twhile (true)\n\t\t{\n\t\t\tlet anything = false;\n\n\t\t\tfor (let n = 1; n < allChildren.length; n++)\n\t\t\t{\n\t\t\t\tlet pidx = this.components[n].parentIdx;\n\t\t\t\tlet boundX = this.components[pidx].boundary.maxX() + hspace;\n\t\t\t\tlet dx = this.components[n].boundary.minX() - boundX; // how far to move to the left\n\t\t\t\tif (dx < 1) continue; // no room to contract\n\n\t\t\t\tlet idxInside = [n, ...allChildren[n]];\n\t\t\t\tlet idxOutside = Vec.identity0(allChildren.length).filter((idx) => !idxInside.includes(idx));\n\n\t\t\t\tfor (let i of idxInside)\n\t\t\t\t{\n\t\t\t\t\tlet box1 = this.components[i].boundary.withGrow(padding, padding);\n\t\t\t\t\tfor (let j of idxOutside)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet box2 = this.components[j].boundary;\n\t\t\t\t\t\tif (box2.minX() > box1.maxX()) continue;\n\t\t\t\t\t\tif (box1.minY() > box2.maxY() || box1.maxY() < box2.minY()) continue;\n\n\t\t\t\t\t\tdx = Math.min(dx, box1.minX() - box2.maxX());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dx > 1)\n\t\t\t\t{\n\t\t\t\t\tfor (let n of idxInside) this.components[n].boundary.x -= dx;\n\t\t\t\t\tanything = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!anything) break;\n\t\t}\n\t}\n\n\t// if the given string is longer than the soft/hard limit, looks to break it up into smaller pieces; each of them is\n\t// appended to the list parameter\n\tprivate wrapSplitName(list:ArrangeMixtureLine[], text:string, col:number, source:ArrangeMixtureLineSource):void\n\t{\n\t\tif (!text) return;\n\t\tlet xpos = FontData.measureWidths(text, this.nameFontSize);\n\t\tif (Vec.last(xpos) <= this.softwrapName)\n\t\t{\n\t\t\tlist.push({text, col, source});\n\t\t\treturn;\n\t\t}\n\n\t\tlet p = 0;\n\t\tfor (; xpos[p] < this.softwrapName; p++) {}\n\t\tfor (; xpos[p] < this.hardwrapName; p++)\n\t\t{\n\t\t\tlet ch = text.charAt(p);\n\t\t\tif (' ,;-/'.includes(ch))\n\t\t\t{\n\t\t\t\tp++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlist.push({text: text.substring(0, p).trim(), col, source});\n\t\tthis.wrapSplitName(list, text.substring(p).trim(), col, source);\n\t}\n\n\t// if the line is longer than the hard wrap limit, just truncate with ellipsis\n\tprivate truncateEllipsis(txt:string):string\n\t{\n\t\tlet xpos = FontData.measureWidths(txt, this.nameFontSize);\n\t\tif (Vec.last(xpos) <= this.hardwrapName) return txt;\n\t\tlet ellipsis = '...', ellw = FontData.measureText(ellipsis, this.nameFontSize)[0];\n\t\tlet keep = 1;\n\t\tfor (; keep < txt.length; keep++) if (xpos[keep] + ellw > this.hardwrapName) break;\n\t\treturn txt.substring(0, keep) + ellipsis;\n\t}\n}\n\n","import { Box } from '../util/Geom';\nimport { colourAlpha, colourCanvas, colourCode, DEGRAD, newElement, pixelDensity } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { FontData } from './FontData';\nexport var TextAlign;\n(function (TextAlign) {\n    TextAlign[TextAlign[\"Centre\"] = 0] = \"Centre\";\n    TextAlign[TextAlign[\"Left\"] = 1] = \"Left\";\n    TextAlign[TextAlign[\"Right\"] = 2] = \"Right\";\n    TextAlign[TextAlign[\"Baseline\"] = 0] = \"Baseline\";\n    TextAlign[TextAlign[\"Middle\"] = 4] = \"Middle\";\n    TextAlign[TextAlign[\"Top\"] = 8] = \"Top\";\n    TextAlign[TextAlign[\"Bottom\"] = 16] = \"Bottom\";\n})(TextAlign || (TextAlign = {}));\nvar PrimClass;\n(function (PrimClass) {\n    PrimClass[PrimClass[\"Line\"] = 1] = \"Line\";\n    PrimClass[PrimClass[\"Rect\"] = 2] = \"Rect\";\n    PrimClass[PrimClass[\"Oval\"] = 3] = \"Oval\";\n    PrimClass[PrimClass[\"Path\"] = 4] = \"Path\";\n    PrimClass[PrimClass[\"Text\"] = 5] = \"Text\";\n    PrimClass[PrimClass[\"TextNative\"] = 6] = \"TextNative\";\n})(PrimClass || (PrimClass = {}));\nclass SpoolSVG {\n    constructor(prettyPrint) {\n        this.prettyPrint = prettyPrint;\n        this.lines = [];\n        this.depth = 0;\n    }\n    spool(str) { if ((str === null || str === void 0 ? void 0 : str.length) > 0)\n        this.lines.push(str); }\n    start(str) {\n        if (this.prettyPrint && this.depth > 0)\n            this.lines.push('  '.repeat(this.depth));\n        this.spool(str);\n    }\n    stop(str) {\n        this.spool(str);\n        if (this.prettyPrint)\n            this.lines.push('\\n');\n    }\n    whole(str) {\n        if (this.prettyPrint && this.depth > 0)\n            this.lines.push('  '.repeat(this.depth));\n        this.spool(str);\n        if (this.prettyPrint)\n            this.lines.push('\\n');\n    }\n    attr(key, val) {\n        var _a;\n        if (typeof val == 'number') {\n            val = val.toFixed(4);\n            let match = (_a = /^(.*\\.\\d*?[1-9]+)0+$/.exec(val)) !== null && _a !== void 0 ? _a : /^(.*)\\.0+$/.exec(val);\n            if (match)\n                val = match[1];\n        }\n        this.spool(` ${key}=\"${val}\"`);\n    }\n    inc() { this.depth++; }\n    dec() { this.depth--; }\n    toString() { return this.lines.join(''); }\n}\nexport class MetaVector {\n    constructor(vec) {\n        this.types = [];\n        this.prims = [];\n        this.width = 0;\n        this.height = 0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.scale = 1;\n        this.density = 1;\n        this.charMissing = false;\n        this.lowX = null;\n        this.lowY = null;\n        this.highX = null;\n        this.highY = null;\n        const font = FontData.main;\n        this.charMask = Vec.booleanArray(false, font.UNICODE.length);\n        if (vec != null) {\n            if (vec.size != null) {\n                this.width = vec.size[0];\n                this.height = vec.size[1];\n            }\n            if (vec.types != null)\n                this.types = vec.types;\n            if (vec.prims != null)\n                this.prims = vec.prims;\n            for (let p of this.prims)\n                if (p.primClass == PrimClass.Text) {\n                    let { txt } = p;\n                    for (let n = 0; n < txt.length; n++) {\n                        let i = font.getIndex(txt.charAt(n));\n                        if (i >= 0)\n                            this.charMask[i] = true;\n                        else\n                            this.charMissing = true;\n                    }\n                }\n        }\n    }\n    drawLine(x1, y1, x2, y2, colour, thickness) {\n        if (thickness == null)\n            thickness = 1;\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Line, thickness, colour });\n        const bump = 0.5 * thickness;\n        this.updateBounds(Math.min(x1, x2) - bump, Math.min(y1, y2) - bump);\n        this.updateBounds(Math.max(x1, x2) + bump, Math.max(y1, y2) + bump);\n        this.prims.push({ primClass: PrimClass.Line, typeidx, x1, y1, x2, y2 });\n    }\n    drawRect(x, y, w, h, edgeCol, thickness, fillCol) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Rect, edgeCol, fillCol, thickness });\n        const bump = 0.5 * thickness;\n        this.updateBounds(x - bump, y - bump);\n        this.updateBounds(x + w + bump, y + h + bump);\n        this.prims.push({ primClass: PrimClass.Rect, typeidx, x, y, w, h });\n    }\n    drawOval(cx, cy, rw, rh, edgeCol, thickness, fillCol) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        const bump = 0.5 * thickness;\n        this.updateBounds(cx - rw - bump, cy - rh - bump);\n        this.updateBounds(cx + rw + bump, cy + rh + bump);\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Oval, edgeCol, fillCol, thickness });\n        this.prims.push({ primClass: PrimClass.Oval, typeidx, cx, cy, rw, rh });\n    }\n    drawPath(xpoints, ypoints, ctrlFlags, isClosed, edgeCol, thickness, fillCol, hardEdge) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        if (hardEdge == null)\n            hardEdge = false;\n        const bump = 0.5 * thickness;\n        for (let n = 0; n < xpoints.length; n++) {\n            this.updateBounds(xpoints[n] - bump, ypoints[n] - bump);\n            if (bump != 0)\n                this.updateBounds(xpoints[n] + bump, ypoints[n] + bump);\n        }\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Path, edgeCol, fillCol, thickness, hardEdge });\n        this.prims.push({ primClass: PrimClass.Path, typeidx, count: xpoints.length,\n            x: Vec.duplicate(xpoints), y: Vec.duplicate(ypoints), ctrl: ctrlFlags && [...ctrlFlags], closed: isClosed });\n    }\n    drawPoly(xpoints, ypoints, edgeCol, thickness, fillCol, hardEdge) {\n        this.drawPath(xpoints, ypoints, null, true, edgeCol, thickness, fillCol, hardEdge);\n    }\n    drawText(x, y, txt, size, colour, align, direction) {\n        if (align == null)\n            align = TextAlign.Left | TextAlign.Baseline;\n        if (direction == null)\n            direction = 0;\n        let cosTheta = 1, sinTheta = 0;\n        if (direction != 0)\n            [cosTheta, sinTheta] = [Math.cos(direction * DEGRAD), Math.sin(direction * DEGRAD)];\n        const font = FontData.main;\n        for (let n = 0; n < txt.length; n++) {\n            let i = font.getIndex(txt.charAt(n));\n            if (i >= 0)\n                this.charMask[i] = true;\n            else\n                this.charMissing = true;\n        }\n        let metrics = font.measureText(txt, size);\n        let bx = 0, by = 0;\n        let dx = 0;\n        if ((align & TextAlign.Left) != 0) { }\n        else if ((align & TextAlign.Right) != 0)\n            dx = -metrics[0];\n        else\n            dx = -0.5 * metrics[0];\n        if (dx != 0) {\n            bx += dx * cosTheta;\n            by += dx * sinTheta;\n        }\n        let dy = 0;\n        if ((align & TextAlign.Middle) != 0)\n            dy = 0.5 * metrics[1];\n        else if ((align & TextAlign.Top) != 0)\n            dy = metrics[1];\n        else if ((align & TextAlign.Bottom) != 0)\n            dy = -metrics[2];\n        if (dy != 0) {\n            bx -= dy * sinTheta;\n            by += dy * cosTheta;\n        }\n        let x1 = 0, y1 = 0, x2 = 0, y2 = 0;\n        let tx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            if (i >= 0) {\n                let outlineX = font.getOutlineX(i), outlineY = font.getOutlineY(i);\n                x1 = Math.min(x1, tx + Vec.min(outlineX));\n                x2 = Math.max(x2, tx + Vec.max(outlineX));\n                y1 = Math.min(y1, -Vec.max(outlineY));\n                y2 = Math.max(y2, -Vec.min(outlineY));\n                tx += font.HORIZ_ADV_X[i];\n                if (n < txt.length - 1)\n                    tx += font.getKerning(ch, txt.charAt(n + 1));\n            }\n            else\n                tx += font.MISSING_HORZ;\n        }\n        const mscale = size * font.INV_UNITS_PER_EM;\n        if (direction == 0) {\n            this.updateBounds(x + bx + x1 * mscale, y + by + y1 * mscale);\n            this.updateBounds(x + bx + x2 * mscale, y + by + y2 * mscale);\n        }\n        else {\n            let rx1 = x1 * mscale, ry1 = y1 * mscale;\n            let rx2 = x2 * mscale, ry2 = y2 * mscale;\n            this.updateBounds(x + bx + rx1 * cosTheta - ry1 * sinTheta, y + by + rx1 * sinTheta + ry1 * cosTheta);\n            this.updateBounds(x + bx + rx2 * cosTheta - ry1 * sinTheta, y + by + rx2 * sinTheta + ry1 * cosTheta);\n            this.updateBounds(x + bx + rx2 * cosTheta - ry2 * sinTheta, y + by + rx2 * sinTheta + ry2 * cosTheta);\n            this.updateBounds(x + bx + rx1 * cosTheta - ry2 * sinTheta, y + by + rx1 * sinTheta + ry2 * cosTheta);\n        }\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Text, size, colour });\n        this.prims.push({ primClass: PrimClass.Text, typeidx, x: x + bx, y: y + by, txt, direction });\n    }\n    drawTextNative(x, y, txt, fontFamily, fontSize, colour, align, opt) {\n        if (!opt)\n            opt = {};\n        if (align == null)\n            align = TextAlign.Left | TextAlign.Baseline;\n        const font = FontData.main;\n        let metrics = font.measureTextNative(txt, fontFamily, fontSize, opt);\n        if ((align & TextAlign.Left) != 0) { }\n        else if ((align & TextAlign.Right) != 0)\n            x -= metrics[0];\n        else\n            x -= 0.5 * metrics[0];\n        if ((align & TextAlign.Middle) != 0)\n            y += 0.5 * metrics[1];\n        else if ((align & TextAlign.Top) != 0)\n            y += metrics[1];\n        else if ((align & TextAlign.Bottom) != 0)\n            y -= metrics[2];\n        this.updateBounds(x, y - metrics[1]);\n        this.updateBounds(x + metrics[0], y + metrics[2]);\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.TextNative, family: fontFamily, size: fontSize, colour, opt });\n        this.prims.push({ primClass: PrimClass.TextNative, typeidx, x, y, txt });\n    }\n    boundLowX() { return this.lowX; }\n    boundLowY() { return this.lowY; }\n    boundHighX() { return this.highX; }\n    boundHighY() { return this.highY; }\n    getBounds() { return new Box(this.lowX, this.lowY, this.highX - this.lowX, this.highY - this.lowY); }\n    measure() {\n        this.width = Math.ceil(this.highX - this.lowX);\n        this.height = Math.ceil(this.highY - this.lowY);\n    }\n    normalise() {\n        if (this.lowX != 0 || this.lowY != 0)\n            this.transformPrimitives(-this.lowX, -this.lowY, 1, 1);\n        this.width = Math.ceil(this.highX - this.lowX);\n        this.height = Math.ceil(this.highY - this.lowY);\n    }\n    setSize(width, height) { this.width = width; this.height = height; }\n    transformIntoBox(box) {\n        this.transformPrimitives(-this.lowX, -this.lowY, 1, 1);\n        let nw = Math.ceil(this.highX - this.lowX), nh = Math.ceil(this.highY - this.lowY);\n        let scale = 1;\n        if (nw > box.w) {\n            let mod = box.w / nw;\n            nw = box.w;\n            nh *= mod;\n            scale *= mod;\n        }\n        if (nh > box.h) {\n            let mod = box.h / nh;\n            nh = box.h;\n            nw *= mod;\n            scale *= mod;\n        }\n        let ox = 0.5 * (box.w - nw), oy = 0.5 * (box.h - nh);\n        this.transformPrimitives(box.x + ox, box.y + oy, scale, scale);\n    }\n    scaleExtent(maxWidth, maxHeight) {\n        let w = this.highX - this.lowX, h = this.highY - this.lowY;\n        if (w <= maxWidth && h <= maxHeight)\n            return;\n        let scale = Math.min(maxWidth / w, maxHeight / h);\n        this.transformPrimitives(0, 0, scale, scale);\n    }\n    transformPrimitives(ox, oy, sw, sh) {\n        if (ox == 0 && oy == 0 && sw == 1 && sh == 1)\n            return;\n        for (let a of this.prims) {\n            const type = a.primClass;\n            if (type == PrimClass.Line) {\n                let line = a;\n                line.x1 = ox + line.x1 * sw;\n                line.y1 = oy + line.y1 * sh;\n                line.x2 = ox + line.x2 * sw;\n                line.y2 = oy + line.y2 * sh;\n            }\n            else if (type == PrimClass.Rect) {\n                let rect = a;\n                rect.x = ox + rect.x * sw;\n                rect.y = oy + rect.y * sh;\n                rect.w = rect.w * sw;\n                rect.h = rect.h * sh;\n            }\n            else if (type == PrimClass.Oval) {\n                let oval = a;\n                oval.cx = ox + oval.cx * sw;\n                oval.cy = oy + oval.cy * sh;\n                oval.rw *= sw;\n                oval.rh *= sh;\n            }\n            else if (type == PrimClass.Path) {\n                let path = a;\n                let sz = path.count, px = path.x, py = path.y;\n                for (let n = 0; n < sz; n++) {\n                    px[n] = ox + px[n] * sw;\n                    py[n] = oy + py[n] * sh;\n                }\n            }\n            else if (type == PrimClass.Text || type == PrimClass.TextNative) {\n                let text = a;\n                text.x = ox + text.x * sw;\n                text.y = oy + text.y * sh;\n            }\n        }\n        let swsh = 0.5 * (sw + sh);\n        if (swsh != 1)\n            for (let t of this.types) {\n                const type = t.primClass;\n                if (type == PrimClass.Line)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Rect)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Oval)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Path)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Text)\n                    t.size *= swsh;\n                else if (type == PrimClass.TextNative)\n                    t.size *= swsh;\n            }\n        this.lowX = ox + this.lowX * sw;\n        this.lowY = oy + this.lowY * sh;\n        this.highX = ox + this.highX * sw;\n        this.highY = oy + this.highY * sh;\n    }\n    renderInto(parent) {\n        let canvas = newElement(parent, 'canvas', { 'width': this.width, 'height': this.height });\n        this.renderCanvas(canvas);\n        return canvas;\n    }\n    renderCanvas(canvas, clearFirst) {\n        let ctx = canvas.getContext('2d');\n        if (clearFirst)\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n        let w = this.width, h = this.height;\n        this.density = pixelDensity();\n        canvas.style.width = w + 'px';\n        canvas.style.height = h + 'px';\n        canvas.width = w * this.density;\n        canvas.height = h * this.density;\n        this.renderContext(ctx);\n    }\n    renderContext(ctx) {\n        ctx.save();\n        ctx.scale(this.density, this.density);\n        this.typeObj = [];\n        for (let n = 0; n < this.types.length; n++) {\n            let t = this.types[n];\n            if (t.primClass == PrimClass.Line)\n                this.typeObj[n] = this.setupTypeLine(t);\n            else if (t.primClass == PrimClass.Rect)\n                this.typeObj[n] = this.setupTypeRect(t);\n            else if (t.primClass == PrimClass.Oval)\n                this.typeObj[n] = this.setupTypeOval(t);\n            else if (t.primClass == PrimClass.Path)\n                this.typeObj[n] = this.setupTypePath(t);\n            else if (t.primClass == PrimClass.Text)\n                this.typeObj[n] = this.setupTypeText(t);\n            else if (t.primClass == PrimClass.TextNative)\n                this.typeObj[n] = this.setupTypeTextNative(t);\n        }\n        for (let n = 0; n < this.prims.length; n++) {\n            let p = this.prims[n];\n            if (p.primClass == PrimClass.Line)\n                this.renderLine(ctx, p);\n            else if (p.primClass == PrimClass.Rect)\n                this.renderRect(ctx, p);\n            else if (p.primClass == PrimClass.Oval)\n                this.renderOval(ctx, p);\n            else if (p.primClass == PrimClass.Path)\n                this.renderPath(ctx, p);\n            else if (p.primClass == PrimClass.Text)\n                this.renderText(ctx, p);\n            else if (p.primClass == PrimClass.TextNative)\n                this.renderTextNative(ctx, p);\n        }\n        ctx.restore();\n    }\n    createSVG(prettyPrint = false, withXlink = false) {\n        let svg = new SpoolSVG(prettyPrint);\n        svg.start('<svg xmlns=\"http://www.w3.org/2000/svg\"');\n        if (withXlink)\n            svg.attr('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n        svg.attr('width', this.width);\n        svg.attr('height', this.height);\n        svg.attr('viewBox', `0 0 ${this.width} ${this.height}`);\n        svg.stop('>');\n        svg.inc();\n        this.renderSVG(svg, withXlink);\n        svg.dec();\n        svg.whole('</svg>');\n        return svg.toString();\n    }\n    renderSVG(svg, withXlink = false) {\n        this.typeObj = [];\n        const font = FontData.main;\n        svg.whole('<defs>');\n        svg.inc();\n        if (this.charMissing) {\n            svg.start('<path');\n            svg.attr('id', 'missing');\n            svg.attr('d', font.MISSING_DATA);\n            svg.attr('edge', 'none');\n            svg.stop('/>');\n        }\n        for (let n = 0; n < font.UNICODE.length; n++)\n            if (this.charMask[n]) {\n                svg.start('<path');\n                svg.attr('id', 'char' + n);\n                svg.attr('d', font.GLYPH_DATA[n]);\n                svg.attr('edge', 'none');\n                svg.stop('/>');\n            }\n        svg.dec();\n        svg.whole('</defs>');\n        for (let n = 0; n < this.types.length; n++) {\n            let t = this.types[n];\n            if (t.primClass == PrimClass.Line)\n                this.typeObj[n] = this.setupTypeLine(t);\n            else if (t.primClass == PrimClass.Rect)\n                this.typeObj[n] = this.setupTypeRect(t);\n            else if (t.primClass == PrimClass.Oval)\n                this.typeObj[n] = this.setupTypeOval(t);\n            else if (t.primClass == PrimClass.Path)\n                this.typeObj[n] = this.setupTypePath(t);\n            else if (t.primClass == PrimClass.Text)\n                this.typeObj[n] = this.setupTypeText(t);\n            else if (t.primClass == PrimClass.TextNative)\n                this.typeObj[n] = this.setupTypeTextNative(t);\n        }\n        for (let n = 0; n < this.prims.length;) {\n            let p = this.prims[n], num = 1;\n            if (p.primClass != PrimClass.Path && p.primClass != PrimClass.Text && p.primClass != PrimClass.TextNative) {\n                for (; n + num < this.prims.length; num++)\n                    if (this.prims[n + num].primClass != p.primClass || this.prims[n + num].typeidx != p.typeidx)\n                        break;\n            }\n            if (p.primClass == PrimClass.Line) {\n                if (num == 1)\n                    this.svgLine1(svg, p);\n                else\n                    this.svgLineN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Rect) {\n                if (num == 1)\n                    this.svgRect1(svg, p);\n                else\n                    this.svgRectN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Oval) {\n                if (num == 1)\n                    this.svgOval1(svg, p);\n                else\n                    this.svgOvalN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Path)\n                this.svgPath(svg, p);\n            else if (p.primClass == PrimClass.Text)\n                this.svgText(svg, p, withXlink);\n            else if (p.primClass == PrimClass.TextNative)\n                this.svgTextNative(svg, p);\n            n += num;\n        }\n    }\n    spool(into) {\n        for (let p of this.prims) {\n            if (p.primClass == PrimClass.Line) {\n                let { typeidx, x1, y1, x2, y2 } = p;\n                let { thickness, colour } = this.types[typeidx];\n                into.drawLine(x1, y1, x2, y2, colour, thickness);\n            }\n            else if (p.primClass == PrimClass.Rect) {\n                let { typeidx, x, y, w, h } = p;\n                let { edgeCol, fillCol, thickness } = this.types[typeidx];\n                into.drawRect(x, y, w, h, edgeCol, thickness, fillCol);\n            }\n            else if (p.primClass == PrimClass.Oval) {\n                let { typeidx, cx, cy, rw, rh } = p;\n                let { edgeCol, fillCol, thickness } = this.types[typeidx];\n                into.drawOval(cx, cy, rw, rh, edgeCol, thickness, fillCol);\n            }\n            else if (p.primClass == PrimClass.Path) {\n                let { typeidx, count, x, y, ctrl, closed } = p;\n                let { edgeCol, fillCol, thickness, hardEdge } = this.types[typeidx];\n                into.drawPath(x, y, ctrl, closed, edgeCol, thickness, fillCol, hardEdge);\n            }\n            else if (p.primClass == PrimClass.Text) {\n                let { typeidx, x, y, txt, direction } = p;\n                let { size, colour } = this.types[typeidx];\n                into.drawText(x, y, txt, size, colour, null, direction);\n            }\n            else if (p.primClass == PrimClass.TextNative) {\n                let { typeidx, x, y, txt } = p;\n                let { family, size, colour } = this.types[typeidx];\n                into.drawTextNative(x, y, txt, family, size, colour);\n            }\n        }\n    }\n    setupTypeLine(t) {\n        let thickness = t.thickness * this.scale;\n        let colour = t.colour;\n        return { primClass: t.primClass, thickness, colour };\n    }\n    setupTypeRect(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness };\n    }\n    setupTypeOval(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness };\n    }\n    setupTypePath(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        let hardEdge = t.hardEdge;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness, hardEdge };\n    }\n    setupTypeText(t) {\n        let size = t.size * this.scale;\n        let colour = t.colour;\n        return { primClass: t.primClass, colour, size };\n    }\n    setupTypeTextNative(t) {\n        let family = t.family;\n        let size = t.size * this.scale;\n        let colour = t.colour;\n        let opt = t.opt;\n        return { primClass: t.primClass, colour, family, size, opt };\n    }\n    renderLine(ctx, line) {\n        let { x1, y1, x2, y2 } = line;\n        let { colour, thickness } = this.typeObj[line.typeidx];\n        x1 = this.offsetX + this.scale * x1;\n        y1 = this.offsetY + this.scale * y1;\n        x2 = this.offsetX + this.scale * x2;\n        y2 = this.offsetY + this.scale * y2;\n        if (colour != null) {\n            ctx.beginPath();\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2);\n            ctx.strokeStyle = colourCanvas(colour);\n            ctx.lineWidth = thickness;\n            ctx.lineCap = 'round';\n            ctx.stroke();\n        }\n    }\n    renderRect(ctx, rect) {\n        let { x, y, w, h } = rect;\n        let { edgeCol, fillCol, thickness } = this.typeObj[rect.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        w *= this.scale;\n        h *= this.scale;\n        if (fillCol != MetaVector.NOCOLOUR) {\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.fillRect(x, y, w, h);\n        }\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            ctx.strokeStyle = colourCanvas(edgeCol);\n            ctx.lineWidth = thickness;\n            ctx.lineCap = 'square';\n            ctx.strokeRect(x, y, w, h);\n        }\n    }\n    renderOval(ctx, oval) {\n        let { cx, cy, rw, rh } = oval;\n        let { edgeCol, fillCol, thickness } = this.typeObj[oval.typeidx];\n        cx = this.offsetX + this.scale * cx;\n        cy = this.offsetY + this.scale * cy;\n        rw *= this.scale;\n        rh *= this.scale;\n        if (fillCol != MetaVector.NOCOLOUR) {\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rw, rh, 0, 0, 2 * Math.PI, true);\n            ctx.fill();\n        }\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            ctx.strokeStyle = colourCanvas(edgeCol);\n            ctx.lineWidth = thickness;\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rw, rh, 0, 0, 2 * Math.PI, true);\n            ctx.stroke();\n        }\n    }\n    renderPath(ctx, path) {\n        let { count, x, y, ctrl, closed } = path;\n        let { edgeCol, fillCol, thickness, hardEdge } = this.typeObj[path.typeidx];\n        x = [...x];\n        y = [...y];\n        for (let n = 0; n < count; n++) {\n            x[n] = this.offsetX + this.scale * x[n];\n            y[n] = this.offsetY + this.scale * y[n];\n        }\n        for (let layer = 1; layer <= 2; layer++) {\n            if (layer == 1 && fillCol == MetaVector.NOCOLOUR)\n                continue;\n            if (layer == 2 && edgeCol == MetaVector.NOCOLOUR)\n                continue;\n            ctx.beginPath();\n            ctx.moveTo(x[0], y[0]);\n            for (let i = 1; i < count; i++) {\n                if (!ctrl || !ctrl[i]) {\n                    ctx.lineTo(x[i], y[i]);\n                }\n                else if (i < count - 1 && !ctrl[i + 1]) {\n                    ctx.quadraticCurveTo(x[i], y[i], x[i + 1], y[i + 1]);\n                    i++;\n                }\n                else if (i < count - 1 && !ctrl[i + 2]) {\n                    ctx.bezierCurveTo(x[i], y[i], x[i + 1], y[i + 1], x[i + 2], y[i + 2]);\n                    i += 2;\n                }\n            }\n            if (closed)\n                ctx.closePath();\n            if (layer == 1) {\n                ctx.fillStyle = colourCanvas(fillCol);\n                ctx.fill();\n            }\n            else {\n                ctx.strokeStyle = colourCanvas(edgeCol);\n                ctx.lineWidth = thickness;\n                ctx.lineCap = hardEdge ? 'square' : 'round';\n                ctx.lineJoin = hardEdge ? 'miter' : 'round';\n                ctx.stroke();\n            }\n        }\n    }\n    renderText(ctx, text) {\n        let { x, y, txt, direction } = text;\n        let { size, colour } = this.typeObj[text.typeidx];\n        let fill = colourCanvas(colour);\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let font = FontData.main;\n        let scale = size * this.scale / font.UNITS_PER_EM;\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            let path = null;\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                path = font.getMissingPath();\n            }\n            else\n                path = font.getGlyphPath(i);\n            if (path) {\n                ctx.save();\n                let theta = direction != 0 ? direction * DEGRAD : 0;\n                if (theta == 0)\n                    ctx.translate(x + dx * scale, y);\n                else\n                    ctx.translate(x + Math.cos(theta) * dx * scale, y + Math.sin(theta) * dx * scale);\n                ctx.scale(scale, -scale);\n                if (theta != 0)\n                    ctx.rotate(-theta);\n                ctx.fillStyle = fill;\n                ctx.fill(path);\n                ctx.restore();\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n        }\n    }\n    renderTextNative(ctx, text) {\n        let { x, y, txt } = text;\n        let { size, colour, family, opt } = this.typeObj[text.typeidx];\n        let fill = colourCanvas(colour);\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        ctx.save();\n        let pfx = '';\n        if (opt.bold)\n            pfx += 'bold ';\n        if (opt.italic)\n            pfx += 'italic ';\n        ctx.font = pfx + (size * this.scale) + 'px ' + family;\n        ctx.fillStyle = fill;\n        ctx.fillText(txt, x, y);\n        ctx.restore();\n    }\n    svgLine1(svg, line) {\n        let { x1, y1, x2, y2 } = line;\n        let { colour, thickness } = this.typeObj[line.typeidx];\n        x1 = this.offsetX + this.scale * x1;\n        y1 = this.offsetY + this.scale * y1;\n        x2 = this.offsetX + this.scale * x2;\n        y2 = this.offsetY + this.scale * y2;\n        if (colour != MetaVector.NOCOLOUR) {\n            svg.start('<line');\n            svg.attr('x1', x1);\n            svg.attr('y1', y1);\n            svg.attr('x2', x2);\n            svg.attr('y2', y2);\n            this.defineSVGStroke(svg, colour);\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'round');\n            svg.stop('/>');\n        }\n    }\n    svgLineN(svg, lines) {\n        let { colour, thickness } = this.typeObj[lines[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, colour);\n        svg.attr('stroke-width', thickness);\n        svg.attr('stroke-linecap', 'round');\n        svg.stop('>');\n        svg.inc();\n        for (let line of lines) {\n            let { x1, y1, x2, y2 } = line;\n            x1 = this.offsetX + this.scale * x1;\n            y1 = this.offsetY + this.scale * y1;\n            x2 = this.offsetX + this.scale * x2;\n            y2 = this.offsetY + this.scale * y2;\n            svg.start('<line');\n            svg.attr('x1', x1);\n            svg.attr('y1', y1);\n            svg.attr('x2', x2);\n            svg.attr('y2', y2);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgRect1(svg, rect) {\n        let { x, y, w, h } = rect;\n        let { edgeCol, fillCol, thickness } = this.typeObj[rect.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        w *= this.scale;\n        h *= this.scale;\n        svg.start('<rect');\n        svg.attr('x', x);\n        svg.attr('y', y);\n        svg.attr('width', w);\n        svg.attr('height', h);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'square');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgRectN(svg, rects) {\n        let { edgeCol, fillCol, thickness } = this.typeObj[rects[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'square');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('>');\n        svg.inc();\n        for (let rect of rects) {\n            let { x, y, w, h } = rect;\n            x = this.offsetX + this.scale * x;\n            y = this.offsetY + this.scale * y;\n            w *= this.scale;\n            h *= this.scale;\n            svg.start('<rect');\n            svg.attr('x', x);\n            svg.attr('y', y);\n            svg.attr('width', w);\n            svg.attr('height', h);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgOval1(svg, oval) {\n        let { cx, cy, rw, rh } = oval;\n        let { edgeCol, fillCol, thickness } = this.typeObj[oval.typeidx];\n        cx = this.offsetX + this.scale * cx;\n        cy = this.offsetY + this.scale * cy;\n        rw *= this.scale;\n        rh *= this.scale;\n        svg.start('<ellipse');\n        svg.attr('cx', cx);\n        svg.attr('cy', cy);\n        svg.attr('rx', rw);\n        svg.attr('ry', rh);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgOvalN(svg, ovals) {\n        let { edgeCol, fillCol, thickness } = this.typeObj[ovals[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('>');\n        svg.inc();\n        for (let oval of ovals) {\n            let { cx, cy, rw, rh } = oval;\n            cx = this.offsetX + this.scale * cx;\n            cy = this.offsetY + this.scale * cy;\n            rw *= this.scale;\n            rh *= this.scale;\n            svg.start('<ellipse');\n            svg.attr('cx', cx);\n            svg.attr('cy', cy);\n            svg.attr('rx', rw);\n            svg.attr('ry', rh);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgPath(svg, path) {\n        let { count, x, y, ctrl, closed } = path;\n        let { edgeCol, fillCol, thickness, hardEdge } = this.typeObj[path.typeidx];\n        x = [...x];\n        y = [...y];\n        for (let n = 0; n < count; n++) {\n            x[n] = this.offsetX + this.scale * x[n];\n            y[n] = this.offsetY + this.scale * y[n];\n        }\n        let shape = 'M ' + x[0] + ' ' + y[0];\n        let n = 1;\n        while (n < count) {\n            if (!ctrl || !ctrl[n]) {\n                shape += ' L ' + x[n] + ' ' + y[n];\n                n++;\n            }\n            else if (ctrl[n] && n < count - 1 && !ctrl[n + 1]) {\n                shape += ' Q ' + x[n] + ' ' + y[n] + ' ' + x[n + 1] + ' ' + y[n + 1];\n                n += 2;\n            }\n            else if (ctrl[n] && n < count - 2 && ctrl[n + 1] && !ctrl[n + 2]) {\n                shape += ' C ' + x[n] + ' ' + y[n] + ' ' + x[n + 1] + ' ' + y[n + 1] + ' ' + x[n + 2] + ' ' + y[n + 2];\n                n += 3;\n            }\n            else\n                n++;\n        }\n        if (closed)\n            shape += ' Z';\n        svg.start('<path');\n        svg.attr('d', shape);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linejoin', hardEdge ? 'miter' : 'round');\n            svg.attr('stroke-linecap', hardEdge ? 'square' : 'round');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgText(svg, text, withXlink = true) {\n        let { x, y, txt, direction } = text;\n        let { size, colour } = this.typeObj[text.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let font = FontData.main;\n        let scale = size * this.scale / font.UNITS_PER_EM;\n        if (direction != 0) {\n            svg.start('<g');\n            svg.attr('transform', `rotate(${direction},${x},${y})`);\n            svg.stop('>');\n            svg.inc();\n        }\n        svg.start('<g');\n        svg.attr('transform', 'translate(' + x + ',' + y + ')');\n        this.defineSVGFill(svg, colour);\n        svg.stop('>');\n        svg.inc();\n        svg.start('<g');\n        svg.attr('transform', 'scale(' + scale + ',' + (-scale) + ')');\n        svg.stop('>');\n        svg.inc();\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            svg.start('<use');\n            let ref = i < 0 ? '#missing' : '#char' + i;\n            if (withXlink)\n                svg.attr('xlink:href', ref);\n            else\n                svg.attr('href', ref);\n            svg.attr('x', dx);\n            svg.stop('/>');\n            if (i >= 0) {\n                dx += font.HORIZ_ADV_X[i];\n                if (n < txt.length - 1)\n                    dx += font.getKerning(ch, txt.charAt(n + 1));\n            }\n            else\n                dx += font.MISSING_HORZ;\n        }\n        svg.dec();\n        svg.whole('</g>');\n        svg.dec();\n        svg.whole('</g>');\n        if (direction != 0) {\n            svg.dec();\n            svg.whole('</g>');\n        }\n    }\n    svgTextNative(svg, text) {\n        let { x, y, txt } = text;\n        let { size, colour, family, opt } = this.typeObj[text.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let fill = colourCanvas(colour);\n        let style = `fill: ${fill}; font-family: ${family}; font-size: ${size * this.scale};`;\n        if (opt.bold)\n            style += ' font-weight: bold;';\n        if (opt.italic)\n            style += ' font-style: italic;';\n        const escapeXML = (str) => {\n            return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\n        };\n        svg.start('<text');\n        svg.attr('xml:space', 'preserve');\n        svg.attr('x', x);\n        svg.attr('y', y);\n        svg.attr('style', style);\n        svg.stop('>' + escapeXML(txt) + '</text>');\n    }\n    defineSVGStroke(svg, col) {\n        if (col == MetaVector.NOCOLOUR) {\n            svg.attr('stroke-opacity', '0');\n            return;\n        }\n        svg.attr('stroke', colourCode(col));\n        let alpha = colourAlpha(col);\n        if (alpha != 1)\n            svg.attr('stroke-opacity', alpha);\n    }\n    defineSVGFill(svg, col) {\n        if (col == MetaVector.NOCOLOUR) {\n            svg.attr('fill-opacity', '0');\n            return;\n        }\n        svg.attr('fill', colourCode(col));\n        let alpha = colourAlpha(col);\n        if (alpha != 1)\n            svg.attr('fill-opacity', alpha);\n    }\n    findOrCreateType(typeDef) {\n        for (let n = 0; n < this.types.length; n++) {\n            if (this.types[n].primClass != typeDef.primClass)\n                continue;\n            let keys = Object.keys(typeDef);\n            let match = keys.every((k) => typeDef[k] == this.types[n][k]);\n            if (match)\n                return n;\n        }\n        this.types.push(typeDef);\n        return this.types.length - 1;\n    }\n    updateBounds(x, y) {\n        if (this.lowX == null) {\n            this.lowX = x;\n            this.lowY = y;\n            this.highX = x;\n            this.highY = y;\n            return;\n        }\n        this.lowX = Math.min(this.lowX, x);\n        this.lowY = Math.min(this.lowY, y);\n        this.highX = Math.max(this.highX, x);\n        this.highY = Math.max(this.highY, y);\n    }\n}\nMetaVector.NOCOLOUR = -1;\n//# sourceMappingURL=MetaVector.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Vec} from 'webmolkit/util/Vec';\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\n\tUnit definitions and conversions. Units are preferentially stored by URI, displayed by common name, and interconverted\n\tas necessary to other schemes, such as MInChI mnemonics.\n*/\n\nexport enum StandardUnits\n{\n\t// concentration units (these are favoured for most purposes)\n\tpc = 'http://purl.obolibrary.org/obo/UO_0000187', // percent (of arbitrary type)\n\tpcWV = 'http://purl.obolibrary.org/obo/UO_0000164', // percent (weight per volume),\n\tpcWW = 'http://purl.obolibrary.org/obo/UO_0000163', // percent (weight per weight),\n\tpcVV = 'http://purl.obolibrary.org/obo/UO_0000205', // percent (volume per volume),\n\tpcMM = 'http://purl.obolibrary.org/obo/UO_0000076', // percent (mole per mole)\n\tratio = 'http://purl.obolibrary.org/obo/UO_0000190', // ratio (numerator only; nominally by volume)\n\tmol_L = 'http://purl.obolibrary.org/obo/UO_0000062', // moles per litre (mol/L)\n\tmmol_L = 'http://purl.obolibrary.org/obo/UO_0000063', // milli-moles per litre\n\tumol_L = 'http://purl.obolibrary.org/obo/UO_0000064', // micro-moles per litre\n\tnmol_L = 'http://purl.obolibrary.org/obo/UO_0000065', // nano-moles per litre\n\tpmol_L = 'http://purl.obolibrary.org/obo/UO_0000066', // pico-moles per litre\n\t/* could be handy to allow these... maybe\n\tlogM = 'http://www.bioassayontology.org/bao#BAO_0000101', // log10 of mol/L\n\tperM = 'http://www.bioassayontology.org/bao#BAO_0000102', // -log10 of mol/L */\n\tg_L = 'http://purl.obolibrary.org/obo/UO_0000175', // grams per litre (g/L)\n\tmg_L = 'http://purl.obolibrary.org/obo/UO_0000273', // milligrams per litre (aka micrograms per mL)\n\tug_L = 'http://purl.obolibrary.org/obo/UO_0000275', // micrograms per litre (aka nanograms per mL)\n\tmol_kg = 'http://purl.obolibrary.org/obo/UO_0000068', // moles per kilogram\n\n\t// absolute units (these are often converted to concentrations when possible)\n\tkg = 'http://purl.obolibrary.org/obo/UO_0000009', // kilogram\n\tg = 'http://purl.obolibrary.org/obo/UO_0000021', // gram\n\tmg = 'http://purl.obolibrary.org/obo/UO_0000022', // milligram\n\tug = 'http://purl.obolibrary.org/obo/UO_0000023', // microgram\n\tng = 'http://purl.obolibrary.org/obo/UO_0000024', // nanogram\n\tL = 'http://purl.obolibrary.org/obo/UO_0000099', // litre\n\tmL = 'http://purl.obolibrary.org/obo/UO_0000098', // millilitre\n\tuL = 'http://purl.obolibrary.org/obo/UO_0000101', // microlitre\n\tnL = 'http://purl.obolibrary.org/obo/UO_0000102', // nanolitre\n\tmol = 'http://purl.obolibrary.org/obo/UO_0000013', // mole\n\tmmol = 'http://purl.obolibrary.org/obo/UO_0000040', // millimole\n\tumol = 'http://purl.obolibrary.org/obo/UO_0000039', // micromole\n\tnmol = 'http://purl.obolibrary.org/obo/UO_0000041', // nanomole\n\n\t// other\n\tppm = 'placeholder1',\n\tppb = 'placeholder2',\n}\n\nconst PAIR_UNIT_NAMES:any[] =\n[\n\t// form: [reference URI, primary display name, ...optional alternative names]\n\n\t[StandardUnits.pc, '%'],\n\t[StandardUnits.pcWV, 'w/v%'],\n\t[StandardUnits.pcWW, 'w/w%'],\n\t[StandardUnits.pcVV, 'v/v%'],\n\t[StandardUnits.pcMM, 'mol/mol%'],\n\t[StandardUnits.ratio, 'ratio'],\n\t[StandardUnits.mol_L, 'mol/L', 'M'],\n\t[StandardUnits.mmol_L, 'mmol/L', 'mM'],\n\t[StandardUnits.umol_L, '\\u{03BC}mol/L', 'umol/L', 'uM'],\n\t[StandardUnits.nmol_L, 'nmol/L', 'nM'],\n\t[StandardUnits.pmol_L, 'pmol/L', 'pM'],\n\t/*[StandardUnits.logM, ''],\n\t[StandardUnits.perM, ''],*/\n\t[StandardUnits.g_L, 'g/L'],\n\t[StandardUnits.mg_L, 'mg/L'],\n\t[StandardUnits.ug_L, '\\u{03BC}g/L', 'ug/L'],\n\t[StandardUnits.mol_kg, 'mol/kg'],\n\n\t[StandardUnits.kg, 'kg'],\n\t[StandardUnits.g, 'g'],\n\t[StandardUnits.mg, 'mg'],\n\t[StandardUnits.ug, '\\u{03BC}g', 'ug'],\n\t[StandardUnits.ng, 'ng'],\n\t[StandardUnits.L, 'L'],\n\t[StandardUnits.mL, 'mL'],\n\t[StandardUnits.uL, '\\u{03BC}L', 'uL'],\n\t[StandardUnits.nL, 'nL'],\n\t[StandardUnits.mol, 'mol'],\n\t[StandardUnits.mmol, 'mmol'],\n\t[StandardUnits.umol, '\\u{03BC}mol', 'umol'],\n\t[StandardUnits.nmol, 'nmol'],\n\n\t[StandardUnits.ppm, 'ppm'],\n\t[StandardUnits.ppb, 'ppb'],\n];\n\nconst PAIR_UNIT_MINCHI:any[] =\n[\n\t// [enum type, MInChI type, scaling] ... scaling factor is for going from standard to MInChI\n\t[StandardUnits.pc, 'pp', 1],\n\t[StandardUnits.pcWV, 'wv', 0.01],\n\t[StandardUnits.pcWW, 'wf', 0.01],\n\t[StandardUnits.pcVV, 'vf', 0.01],\n\t[StandardUnits.pcMM, 'mf', 0.01],\n\t[StandardUnits.ratio, 'rt', 1],\n\t[StandardUnits.mol_L, 'mr', 1],\n\t[StandardUnits.mmol_L, 'mr', 1E-3],\n\t[StandardUnits.umol_L, 'mr', 1E-6],\n\t[StandardUnits.nmol_L, 'mr', 1E-9],\n\t[StandardUnits.pmol_L, 'mr', 1E-12],\n\t/*[StandardUnits.logM, '', ],\n\t[StandardUnits.perM, '', ],*/\n\t[StandardUnits.g_L, 'wv', 1E-3],\n\t[StandardUnits.mg_L, 'wv', 1E-6],\n\t[StandardUnits.ug_L, 'wv', 1E-9],\n\t[StandardUnits.mol_kg, 'mb', 1],\n\t[StandardUnits.ppm, 'pp', 1E-6],\n\t[StandardUnits.ppb, 'pp', 1E-9],\n];\n\nexport class Units\n{\n\tpublic static STANDARD_LIST:string[] = []; // all of the applicable unit URIs\n\tpublic static COMMON_NAMES:string[] = []; // all of the preferred names (same order as above)\n\tpublic static URI_TO_NAME:Record<string, string> = {}; // each URI has one preferred display name\n\tpublic static NAME_TO_URI:Record<string, string> = {}; // multiple unit forms can point to the same URI\n\tpublic static URI_TO_MINCHI:Record<string, [string, number]> = {}; // URI to MInChI, when applicable\n\n\tpublic static setup():void\n\t{\n\t\tfor (let pair of PAIR_UNIT_NAMES)\n\t\t{\n\t\t\tlet uri:string = pair[0], name:string = pair[1];\n\t\t\tthis.STANDARD_LIST.push(uri);\n\t\t\tthis.COMMON_NAMES.push(name);\n\t\t\tthis.URI_TO_NAME[uri] = name;\n\t\t\t\n\t\t\t//this.NAME_TO_URI[name] = uri; (some of them have alternate names)\n\t\t\tfor (let n = 1; n <= pair.length; n++) this.NAME_TO_URI[pair[n]] = uri;\n\t\t}\n\t\tfor (let pair of PAIR_UNIT_MINCHI)\n\t\t{\n\t\t\tlet uri:string = pair[0], name:string = pair[1], scale:number = pair[2];\n\t\t\tthis.URI_TO_MINCHI[uri] = [name, scale];\n\t\t}\n\t\tthis.setup = () => {}; // calling it again is a nop\n\t}\n\n\tpublic static standardList():string[]\n\t{\n\t\tthis.setup();\n\t\treturn this.STANDARD_LIST;\n\t}\n\tpublic static commonNames():string[]\n\t{\n\t\tthis.setup();\n\t\treturn this.COMMON_NAMES;\n\t}\n\tpublic static uriToName(uri:string):string\n\t{\n\t\tthis.setup();\n\t\treturn this.URI_TO_NAME[uri];\n\t}\n\tpublic static nameToURI(name:string):string\n\t{\n\t\tthis.setup();\n\t\treturn this.NAME_TO_URI[name];\n\t}\n\n\t// converts a uri/value pair into mnemonic/value, ready to be exported to MInChI-style units; if the URI is not in the list of\n\t// things that can be converted, returns nulls\n\tpublic static convertToMInChI(uri:string, values:number[]):[string, number[]]\n\t{\n\t\tlet [mnemonic, scale] = this.URI_TO_MINCHI[uri] || [null, null];\n\t\tif (!mnemonic) return [null, null];\n\t\treturn [mnemonic, Vec.mul(values, scale)];\n\t}\n}\n\n","import { Molecule } from '../data/Molecule';\nimport { GeomUtil } from '../util/Geom';\nimport { angleDiff, DEGRAD, invZ, norm2_xy, norm_xy } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { BLineType } from './ArrangeMolecule';\nimport { MetaVector, TextAlign } from './MetaVector';\nimport { RenderMnemonicType } from './Rendering';\nexport class DrawMolecule {\n    constructor(layout, vg) {\n        this.layout = layout;\n        this.vg = vg;\n        this.mnemonics = null;\n        this.mol = layout.getMolecule();\n        this.policy = layout.getPolicy();\n        this.effects = layout.getEffects();\n        this.scale = layout.getScale();\n        this.invScale = 1.0 / this.scale;\n    }\n    getMolecule() { return this.mol; }\n    getMetaVector() { return this.vg; }\n    getLayout() { return this.layout; }\n    getPolicy() { return this.policy; }\n    getEffects() { return this.effects; }\n    draw() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n        let DRAW_SPACE = false;\n        if (DRAW_SPACE) {\n            let bounds = this.layout.determineBoundary();\n            this.vg.drawRect(bounds[0], bounds[1], bounds[2] - bounds[0], bounds[3] - bounds[1], 0xFF0000, 1, MetaVector.NOCOLOUR);\n            for (let n = 0; n < this.layout.numSpace(); n++) {\n                let spc = this.layout.getSpace(n);\n                this.vg.drawRect(spc.box.x, spc.box.y, spc.box.w, spc.box.h, MetaVector.NOCOLOUR, 0, 0xE0E0E0);\n                if (spc.px != null && spc.py != null && spc.px.length > 2)\n                    this.vg.drawPoly(spc.px, spc.py, 0x000000, 1, 0x808080FF, true);\n            }\n        }\n        this.drawUnderEffects();\n        let { mol, layout, effects, policy, vg } = this;\n        let hideBonds = new Set(effects.hideBonds);\n        for (let i = 1; i <= mol.numBonds; i++)\n            if (mol.bondType(i) == Molecule.BONDTYPE_INCLINED && !hideBonds.has(i)) {\n                let atom = mol.bondTo(i);\n                if (layout.getPoint(atom - 1).text)\n                    continue;\n                for (let j of mol.atomAdjBonds(atom))\n                    if (j != i && mol.bondType(j) == Molecule.BONDTYPE_INCLINED && mol.bondTo(j) == atom && !hideBonds.has(j)) {\n                        let b1 = layout.getLines().find((b) => b.bnum == i);\n                        let b2 = layout.getLines().find((b) => b.bnum == j);\n                        let th1 = Math.atan2(b1.line.y1 - b1.line.y2, b1.line.x1 - b1.line.x2);\n                        let th2 = Math.atan2(b2.line.y1 - b2.line.y2, b2.line.x1 - b2.line.x2);\n                        if (Math.abs(angleDiff(th1, th2)) < 170 * DEGRAD) {\n                            this.drawFusedWedge(b1, b2);\n                            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Artifact, 'Fused', [b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2]);\n                            hideBonds.add(i);\n                            hideBonds.add(j);\n                            break;\n                        }\n                    }\n            }\n        for (let n = 0; n < layout.numLines(); n++) {\n            let b = layout.getLine(n);\n            if (hideBonds.has(b.bnum))\n                continue;\n            if (b.type == BLineType.Normal) {\n                vg.drawLine(b.line.x1, b.line.y1, b.line.x2, b.line.y2, b.col, b.size);\n                (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Bond, 'L', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Inclined) {\n                this.drawBondInclined(b);\n                (_c = this.mnemonics) === null || _c === void 0 ? void 0 : _c.append(RenderMnemonicType.Bond, 'I', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Declined) {\n                this.drawBondDeclined(b);\n                (_d = this.mnemonics) === null || _d === void 0 ? void 0 : _d.append(RenderMnemonicType.Bond, 'D', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Unknown) {\n                this.drawBondUnknown(b);\n                (_e = this.mnemonics) === null || _e === void 0 ? void 0 : _e.append(RenderMnemonicType.Bond, 'U', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Dotted || b.type == BLineType.DotDir) {\n                this.drawBondDotted(b);\n                (_f = this.mnemonics) === null || _f === void 0 ? void 0 : _f.append(RenderMnemonicType.Bond, 'O', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.IncDouble || b.type == BLineType.IncTriple || b.type == BLineType.IncQuadruple) {\n                this.drawBondIncMulti(b);\n                (_g = this.mnemonics) === null || _g === void 0 ? void 0 : _g.append(RenderMnemonicType.Bond, 'M', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n        }\n        let fg = policy.data.foreground;\n        for (let r of layout.getRings()) {\n            if (r.theta != 0) {\n                var bez = GeomUtil.createBezierEllipse(r.cx, r.cy, r.rw, r.rh, r.theta);\n                vg.drawPath(bez.px, bez.py, bez.ctrl, true, fg, r.size, MetaVector.NOCOLOUR, false);\n                (_h = this.mnemonics) === null || _h === void 0 ? void 0 : _h.append(RenderMnemonicType.Artifact, 'Ring', [r.cx, r.cy, r.rw, r.rh, r.theta]);\n            }\n            else {\n                vg.drawOval(r.cx, r.cy, r.rw, r.rh, fg, r.size, MetaVector.NOCOLOUR);\n                (_j = this.mnemonics) === null || _j === void 0 ? void 0 : _j.append(RenderMnemonicType.Artifact, 'Ring', [r.cx, r.cy, r.rw, r.rh]);\n            }\n        }\n        for (let p of layout.getPaths()) {\n            vg.drawPath(p.px, p.py, p.ctrl, false, fg, p.size, MetaVector.NOCOLOUR, false);\n            (_k = this.mnemonics) === null || _k === void 0 ? void 0 : _k.append(RenderMnemonicType.Artifact, 'Path', [...p.px, ...p.py]);\n        }\n        for (let n = 0; n < layout.numPoints(); n++) {\n            let p = layout.getPoint(n);\n            if (effects.hideAtoms.has(p.anum))\n                continue;\n            let txt = p.text;\n            let cx = p.oval.cx, cy = p.oval.cy, rw = p.oval.rw;\n            if (txt == null) {\n                (_l = this.mnemonics) === null || _l === void 0 ? void 0 : _l.append(RenderMnemonicType.Atom, '.', [cx, cy]);\n                continue;\n            }\n            let fsz = p.fsz;\n            let col = p.col;\n            while (txt.endsWith('.')) {\n                let dw = rw / txt.length;\n                let r = fsz * 0.15;\n                vg.drawOval(cx + rw - dw, cy, r, r, MetaVector.NOCOLOUR, 0, col);\n                cx -= dw;\n                rw -= dw;\n                txt = txt.substring(0, txt.length - 1);\n            }\n            while (txt.startsWith('+')) {\n                let dw = rw / txt.length;\n                let x = cx - rw + dw, y = cy, r = fsz * 0.18, lsz = fsz * 0.1;\n                vg.drawLine(x - r, y, x + r, y, col, lsz);\n                vg.drawLine(x, y - r, x, y + r, col, lsz);\n                cx += dw;\n                rw -= dw;\n                txt = txt.substring(1, txt.length);\n            }\n            while (txt.startsWith('-')) {\n                let dw = rw / txt.length;\n                let x = cx - rw + dw, y = cy, r = fsz * 0.18, lsz = fsz * 0.1;\n                vg.drawLine(x - r, y, x + r, y, col, lsz);\n                cx += dw;\n                rw -= dw;\n                txt = txt.substring(1, txt.length);\n            }\n            if (txt.length > 0) {\n                vg.drawText(cx, cy, txt, fsz, col, TextAlign.Centre | TextAlign.Middle, p.rotation || 0);\n                (_m = this.mnemonics) === null || _m === void 0 ? void 0 : _m.append(RenderMnemonicType.Atom, txt, [cx, cy]);\n            }\n            else\n                (_o = this.mnemonics) === null || _o === void 0 ? void 0 : _o.append(RenderMnemonicType.Atom, '.', [cx, cy]);\n        }\n        this.drawOverEffects();\n    }\n    drawUnderEffects() {\n        var _a, _b, _c;\n        let mol = this.mol, policy = this.policy, effects = this.effects, layout = this.layout, scale = this.scale, vg = this.vg;\n        for (let n = 0, num = Math.min(effects.atomFrameDotSz.length, mol.numAtoms); n < num; n++) {\n            if (effects.hideAtoms.has(n + 1))\n                continue;\n            let dw = effects.atomFrameDotSz[n] * scale, col = effects.atomFrameCol[n];\n            let a = layout.getPoint(n);\n            let rw = a.oval.rw + 0.1 * scale, rh = a.oval.rh + 0.1 * scale;\n            let wdots = Math.ceil(2 * rw / (3 * dw));\n            let hdots = Math.ceil(2 * rh / (3 * dw));\n            let wspc = 2 * rw / wdots, hspc = 2 * rh / hdots;\n            for (let i = 0; i <= wdots; i++) {\n                let x = a.oval.cx - rw + i * wspc;\n                vg.drawOval(x, a.oval.cy - rh, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(x, a.oval.cy + rh, dw, dw, MetaVector.NOCOLOUR, 0, col);\n            }\n            for (let i = 1; i < hdots; i++) {\n                let y = a.oval.cy - rh + i * hspc;\n                vg.drawOval(a.oval.cx - rw, y, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(a.oval.cx + rw, y, dw, dw, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Effect, 'Dot', [a.oval.cx, a.oval.cy, a.oval.rw, a.oval.rh]);\n        }\n        for (let key in effects.dottedRectOutline) {\n            let atom = parseInt(key), col = effects.dottedRectOutline[key];\n            let a = layout.getPoint(atom - 1);\n            let rw = Math.max(a.oval.rw, 0.2 * scale), rh = Math.max(a.oval.rh, 0.2 * scale);\n            let sz = 0.05 * scale;\n            let xdots = Math.max(1, Math.round(rw / (2 * sz)));\n            let ydots = Math.max(1, Math.round(rh / (2 * sz)));\n            let invX = (2 * rw) / xdots, invY = (2 * rh) / ydots;\n            for (let n = 0; n <= xdots; n++) {\n                let x = a.oval.cx - rw + n * invX;\n                vg.drawOval(x, a.oval.cy - rh, sz, sz, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(x, a.oval.cy + rh, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            for (let n = 1; n < ydots; n++) {\n                let y = a.oval.cy - rh + n * invY;\n                vg.drawOval(a.oval.cx - rw, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(a.oval.cx + rw, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Effect, 'Rect', [a.oval.cx, a.oval.cy, a.oval.rw, a.oval.rh]);\n        }\n        for (let key in effects.dottedBondCross) {\n            let bond = parseInt(key), col = effects.dottedBondCross[key];\n            let x1 = 0, y1 = 0, x2 = 0, y2 = 0, bcount = 0;\n            for (let n = 0; n < layout.numLines(); n++) {\n                let b = layout.getLine(n);\n                if (b.bnum == bond) {\n                    x1 += b.line.x1;\n                    y1 += b.line.y1;\n                    x2 += b.line.x2;\n                    y2 += b.line.y2;\n                    bcount += 1;\n                }\n            }\n            if (bcount > 1) {\n                let inv = 1 / bcount;\n                [x1, y1, x2, y2] = [x1 * inv, y1 * inv, x2 * inv, y2 * inv];\n            }\n            let dx = x2 - x1, dy = y2 - y1;\n            let inv = 0.2 * scale * invZ(norm_xy(dx, dy)), ox = dy * inv, oy = -dx * inv;\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2), sz = 0.05 * scale;\n            for (let p of [-2, -1, 1, 2]) {\n                let x = cx + p * ox, y = cy + p * oy;\n                vg.drawOval(x, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_c = this.mnemonics) === null || _c === void 0 ? void 0 : _c.append(RenderMnemonicType.Effect, 'Crossing', [x1, y1, x2, y2]);\n        }\n    }\n    drawOverEffects() {\n        var _a, _b;\n        let mol = this.mol, policy = this.policy, effects = this.effects, layout = this.layout, scale = this.scale, vg = this.vg;\n        for (let a of effects.overlapAtoms) {\n            let p = layout.getPoint(a - 1);\n            let rad = scale * 0.2;\n            vg.drawLine(p.oval.cx - rad, p.oval.cy - rad, p.oval.cx + rad, p.oval.cy + rad, 0xFF0000, 1);\n            vg.drawLine(p.oval.cx + rad, p.oval.cy - rad, p.oval.cx - rad, p.oval.cy + rad, 0xFF0000, 1);\n            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Effect, 'Overlap', [p.oval.cx, p.oval.cy, p.oval.rw, p.oval.rh]);\n        }\n        for (let n = 0, num = Math.min(effects.atomCircleSz.length, mol.numAtoms); n < num; n++)\n            if (effects.atomCircleSz[n] > 0) {\n                let dw = effects.atomCircleSz[n] * scale, col = effects.atomCircleCol[n];\n                let p = layout.getPoint(n);\n                vg.drawOval(p.oval.cx, p.oval.cy, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Effect, 'Circle', [p.oval.cx, p.oval.cy, p.oval.rw, p.oval.rh]);\n            }\n    }\n    drawBondInclined(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let norm = head / Math.sqrt(dx * dx + dy * dy);\n        let ox = norm * dy, oy = -norm * dx;\n        let px = [x1, x2 - ox, x2 + ox], py = [y1, y2 - oy, y2 + oy];\n        if (this.layout.getPoint(b.bto - 1).text == null && this.mol.atomAdjCount(b.bto) == 2) {\n            let other = null;\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let o = this.layout.getLine(n);\n                if (o.type == BLineType.Normal && (o.bfr == b.bto || o.bto == b.bto)) {\n                    if (other != null) {\n                        other = null;\n                        break;\n                    }\n                    other = o;\n                }\n            }\n            if (other != null) {\n                let th1 = Math.atan2(y1 - y2, x1 - x2);\n                let th2 = Math.atan2(other.line.y1 - other.line.y2, other.line.x1 - other.line.x2);\n                if (b.bto == other.bfr)\n                    th2 += Math.PI;\n                let diff = Math.abs(angleDiff(th1, th2));\n                if (diff > 105 * DEGRAD && diff < 135 * DEGRAD) {\n                    let ixy1 = GeomUtil.lineIntersect(px[0], py[0], px[1], py[1], other.line.x1, other.line.y1, other.line.x2, other.line.y2);\n                    let ixy2 = GeomUtil.lineIntersect(px[0], py[0], px[2], py[2], other.line.x1, other.line.y1, other.line.x2, other.line.y2);\n                    px[1] = ixy1[0];\n                    py[1] = ixy1[1];\n                    px[2] = ixy2[0];\n                    py[2] = ixy2[1];\n                    let dx1 = px[1] - px[0], dy1 = py[1] - py[0], inv1 = 0.5 * other.size / norm_xy(dx1, dy1);\n                    px[1] += dx1 * inv1;\n                    py[1] += dy1 * inv1;\n                    let dx2 = px[2] - px[0], dy2 = py[2] - py[0], inv2 = 0.5 * other.size / norm_xy(dx2, dy2);\n                    px[2] += dx2 * inv1;\n                    py[2] += dy2 * inv1;\n                }\n            }\n        }\n        if (this.layout.getPoint(b.bto - 1).text == null && this.mol.atomAdjCount(b.bto) == 3) {\n            let other1 = null, other2 = null;\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let o = this.layout.getLine(n);\n                if (o.type == BLineType.Normal && (o.bfr == b.bto || o.bto == b.bto)) {\n                    if (other1 == null)\n                        other1 = o;\n                    else if (other2 == null)\n                        other2 = o;\n                    else {\n                        other1 = other2 = null;\n                        break;\n                    }\n                }\n            }\n            if (other1 != null && other2 != null) {\n                let th1 = Math.atan2(y1 - y2, x1 - x2);\n                let th2 = Math.atan2(other1.line.y1 - other1.line.y2, other1.line.x1 - other1.line.x2);\n                let th3 = Math.atan2(other2.line.y1 - other2.line.y2, other2.line.x1 - other2.line.x2);\n                if (b.bto == other1.bfr)\n                    th2 += Math.PI;\n                if (b.bto == other2.bfr)\n                    th3 += Math.PI;\n                let dth1 = angleDiff(th1, th2), diff1 = Math.abs(dth1);\n                let dth2 = angleDiff(th1, th3), diff2 = Math.abs(dth2);\n                let diff3 = Math.abs(angleDiff(th2, th3));\n                if (diff1 > 105 * DEGRAD && diff1 < 135 * DEGRAD ||\n                    diff2 > 105 * DEGRAD && diff2 < 135 * DEGRAD ||\n                    diff3 > 105 * DEGRAD && diff3 < 135 * DEGRAD) {\n                    if (dth1 < 0)\n                        [other1, other2] = [other2, other1];\n                    let ixy1 = GeomUtil.lineIntersect(px[0], py[0], px[1], py[1], other1.line.x1, other1.line.y1, other1.line.x2, other1.line.y2);\n                    let ixy2 = GeomUtil.lineIntersect(px[0], py[0], px[2], py[2], other2.line.x1, other2.line.y1, other2.line.x2, other2.line.y2);\n                    px = [x1, ixy1[0], x2, ixy2[0]];\n                    py = [y1, ixy1[1], y2, ixy2[1]];\n                }\n            }\n        }\n        this.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, col, true);\n    }\n    drawFusedWedge(b1, b2) {\n        const terminalPoints = (b, other) => {\n            let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n            let dx = x2 - x1, dy = y2 - y1;\n            let norm = b.head / Math.sqrt(dx * dx + dy * dy);\n            let ox = norm * dy, oy = -norm * dx;\n            let tx1 = x2 - ox, ty1 = y2 - oy, tx2 = x2 + ox, ty2 = y2 + oy;\n            let dsq1 = norm2_xy(tx1 - other.line.x1, ty1 - other.line.y1);\n            let dsq2 = norm2_xy(tx2 - other.line.x1, ty2 - other.line.y1);\n            if (dsq1 > dsq2)\n                return { outerX: tx1, outerY: ty1, innerX: tx2, innerY: ty2 };\n            else\n                return { outerX: tx2, outerY: ty2, innerX: tx1, innerY: ty1 };\n        };\n        let u = terminalPoints(b1, b2), v = terminalPoints(b2, b1);\n        let [innerX, innerY] = GeomUtil.lineIntersect(b1.line.x1, b1.line.y1, u.innerX, u.innerY, b2.line.x1, b2.line.y1, v.innerX, v.innerY);\n        let px = [b1.line.x1, u.outerX, v.outerX, b2.line.x1, innerX];\n        let py = [b1.line.y1, u.outerY, v.outerY, b2.line.y1, innerY];\n        this.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, b1.col, true);\n    }\n    drawBondDeclined(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let ext = Math.sqrt(dx * dx + dy * dy);\n        let nsteps = Math.ceil(ext * 2.5 * this.invScale);\n        let norm = head / ext;\n        let ox = norm * dy, oy = -norm * dx, invSteps = 1.0 / (nsteps + 1);\n        let holdout = this.mol.atomAdjCount(b.bto) == 1 && this.layout.getPoint(b.bto - 1).text == null ? 1 : 1 - (0.15 * this.scale) / ext;\n        for (let i = 0; i <= nsteps + 1; i++) {\n            let cx = x1 + i * dx * invSteps * holdout, cy = y1 + i * dy * invSteps * holdout;\n            let ix = ox * i * invSteps, iy = oy * i * invSteps;\n            this.vg.drawLine(cx - ix, cy - iy, cx + ix, cy + iy, col, size);\n        }\n    }\n    drawBondUnknown(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let ext = Math.sqrt(dx * dx + dy * dy);\n        let nsteps = Math.ceil(ext * 3.5 * this.invScale);\n        let norm = head / ext;\n        let ox = norm * dy, oy = -norm * dx;\n        let sz = 1 + 3 * (nsteps + 1);\n        let x = Vec.numberArray(0, sz), y = Vec.numberArray(0, sz), ctrl = Vec.booleanArray(false, sz);\n        x[0] = x1;\n        y[0] = y1;\n        ctrl[0] = false;\n        for (let i = 0, j = 1; i <= nsteps; i++, j += 3) {\n            let ax = x1 + i * dx / (nsteps + 1), ay = y1 + i * dy / (nsteps + 1);\n            let cx = x1 + (i + 1) * dx / (nsteps + 1), cy = y1 + (i + 1) * dy / (nsteps + 1);\n            let bx = (ax + cx) / 2, by = (ay + cy) / 2;\n            let sign = i % 2 == 0 ? 1 : -1;\n            x[j] = ax;\n            x[j + 1] = bx + sign * ox;\n            x[j + 2] = cx;\n            y[j] = ay;\n            y[j + 1] = by + sign * oy;\n            y[j + 2] = cy;\n            ctrl[j] = true;\n            ctrl[j + 1] = true;\n            ctrl[j + 2] = false;\n        }\n        this.vg.drawPath(x, y, ctrl, false, col, size, MetaVector.NOCOLOUR, false);\n    }\n    drawBondDotted(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size;\n        let radius = size, dist = norm_xy(dx, dy);\n        if (dist < 0.01)\n            return;\n        let nudge = 0.5 * size / dist;\n        x1 += nudge * dx;\n        y1 += nudge * dy;\n        x2 -= nudge * dx;\n        y2 -= nudge * dy;\n        dx = x2 - x1;\n        dy = y2 - y1;\n        let nsteps = Math.ceil(0.2 * dist / radius);\n        let invSteps = 1.0 / (nsteps + 1);\n        for (let i = 0; i <= nsteps + 1; i++) {\n            let r = radius;\n            if (b.type == BLineType.DotDir)\n                r *= 1 + (i * (1.0 / (nsteps + 2)) - 0.5);\n            let cx = x1 + i * dx * invSteps, cy = y1 + i * dy * invSteps;\n            this.vg.drawOval(cx, cy, r, r, MetaVector.NOCOLOUR, 0, col);\n        }\n    }\n    drawBondIncMulti(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let norm = head / Math.sqrt(dx * dx + dy * dy);\n        let ox = norm * dy, oy = -norm * dx;\n        this.vg.drawPoly([x1, x2 - ox, x2 + ox], [y1, y2 - oy, y2 + oy], col, this.scale * 0.05, MetaVector.NOCOLOUR, true);\n        if (b.type == BLineType.IncDouble) {\n            this.vg.drawLine(x1, y1, x2, y2, col, this.scale * 0.03);\n        }\n        else {\n            this.vg.drawLine(x1, y1, x2 + 0.33 * ox, y2 + 0.33 * oy, col, this.scale * 0.03);\n            this.vg.drawLine(x1, y1, x2 - 0.33 * ox, y2 - 0.33 * oy, col, this.scale * 0.03);\n        }\n    }\n}\n//# sourceMappingURL=DrawMolecule.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {MetaVector, TextAlign} from 'webmolkit/gfx/MetaVector';\nimport {ArrangeMixture, ArrangeMixtureComponent, ArrangeMixtureLine} from './ArrangeMixture';\nimport {Box} from 'webmolkit/util/Geom';\nimport {ArrangeMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {DrawMolecule} from 'webmolkit/gfx/DrawMolecule';\n\n/*\n\tDrawing a Mixfile, which has been rendered.\n*/\n\nexport class DrawMixture\n{\n\tpublic hoverIndex = -1; // component to give a faint tinting to (for hover-over effect)\n\tpublic activeIndex = -1; // component that is actively engaged with UI\n\tpublic selectedIndex = -1; // component that is passively selected\n\n\tpublic callbackDrawNameLine:(comp:ArrangeMixtureComponent, line:ArrangeMixtureLine, gfx:MetaVector, box:Box) => boolean = null;\n\n\tprivate measure:ArrangeMeasurement;\n\tprivate policy:RenderPolicy;\n\n\tprivate scale:number;\n\tprivate invScale:number;\n\n\t// --------------------- public methods ---------------------\n\n\tconstructor(private layout:ArrangeMixture, private vg:MetaVector)\n\t{\n\t\tthis.measure = layout.measure;\n\t\tthis.policy = layout.policy;\n\t\tthis.scale = layout.scale;\n\t\tthis.invScale = 1.0 / this.scale;\n\t}\n\n\t// renders the experiment, one component at a time\n\tpublic draw():void\n\t{\n\t\tfor (let comp of this.layout.components) if (comp.parentIdx >= 0)\n\t\t\tthis.drawConnection(this.layout.components[comp.parentIdx], comp);\n\n\t\tfor (let n = 0; n < this.layout.components.length; n++) this.drawComponent(n);\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\tprivate drawConnection(parent:ArrangeMixtureComponent, child:ArrangeMixtureComponent):void\n\t{\n\t\tlet x1 = parent.boundary.maxX(), x2 = child.boundary.minX();\n\t\tlet y1 = parent.boundary.midY(), y2 = child.boundary.midY();\n\t\t//let xm = 0.5 * (x1 + x2);\n\t\tlet xm = x1 + 0.25 * this.scale;\n\t\tlet ym = 0.5 * (y1 + y2);\n\t\tlet d = 4, xd = d, yd = y1 < y2 - 1 ? -d : y1 > y2 + 1 ? d : 0;\n\n\t\tlet px = [x1, xm - xd, xm, xm, xm, xm, xm + xd, x2];\n\t\tlet py = [y1, y1, y1, y1 - yd, y2 + yd, y2, y2, y2];\n\t\tlet lsz = this.scale * 0.1;\n\t\tthis.vg.drawPath(px, py, [false, false, true, false, false, true, false, false], false, 0x000000, lsz, MetaVector.NOCOLOUR, false);\n\t}\n\n\tprivate drawComponent(idx:number):void\n\t{\n\t\tlet comp = this.layout.components[idx];\n\n\t\tlet box = comp.outline.clone();\n\t\tbox.offsetBy(comp.boundary.x, comp.boundary.y);\n\t\tlet bg = 0xF8F8F8;\n\t\tif (idx == this.activeIndex) bg = 0x8296E4;\n\t\telse if (idx == this.selectedIndex) bg = 0xA9BBFF;\n\t\telse if (idx == this.hoverIndex) bg = 0xE0E0E0;\n\n\t\tthis.vg.drawRect(box.x, box.y, box.w, box.h, 0x808080, 1, bg);\n\n\t\tif (comp.molLayout) new DrawMolecule(comp.molLayout, this.vg).draw();\n\n\t\tif (comp.nameLines.length > 0)\n\t\t{\n\t\t\tlet x = box.x, cx = x + comp.nameBox.midX(), y = box.y + comp.nameBox.y;\n\t\t\tfor (let line of comp.nameLines)\n\t\t\t{\n\t\t\t\tlet wad = this.measure.measureText(line.text, comp.fontSize), h = wad[1] + 2 * wad[2];\n\t\t\t\tlet override = this.callbackDrawNameLine && this.callbackDrawNameLine(comp, line, this.vg, new Box(x, y, box.w, h));\n\t\t\t\tif (!override) this.vg.drawText(cx, y, line.text, comp.fontSize, line.col, TextAlign.Centre | TextAlign.Top);\n\t\t\t\ty += h;\n\t\t\t}\n\t\t}\n\n\t\tif (comp.collapseBox)\n\t\t{\n\t\t\tlet cbox = comp.collapseBox.clone();\n\t\t\tcbox.offsetBy(comp.boundary.x, comp.boundary.y);\n\t\t\tthis.vg.drawRect(cbox.x, cbox.y, cbox.w, cbox.h, 0x808080, 1, 0xF8F8F8);\n\t\t\tlet cx = cbox.midX(), cy = cbox.midY(), d = Math.min(cbox.w, cbox.h) * 0.4, sz = d * 0.2;\n\t\t\tthis.vg.drawLine(cx - d, cy, cx + d, cy, 0x000000, sz);\n\t\t\tif (comp.isCollapsed) this.vg.drawLine(cx, cy - d, cx, cy + d, 0x000000, sz);\n\t\t}\n\t}\n}\n\n","import { fltEqual } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { ForeignMoleculeTransient } from './ForeignMolecule';\nimport { Graph } from './Graph';\nexport var DotPathBond;\n(function (DotPathBond) {\n    DotPathBond[DotPathBond[\"O0\"] = 0] = \"O0\";\n    DotPathBond[DotPathBond[\"O01\"] = 1] = \"O01\";\n    DotPathBond[DotPathBond[\"O1\"] = 2] = \"O1\";\n    DotPathBond[DotPathBond[\"O12\"] = 3] = \"O12\";\n    DotPathBond[DotPathBond[\"O2\"] = 4] = \"O2\";\n    DotPathBond[DotPathBond[\"O23\"] = 5] = \"O23\";\n    DotPathBond[DotPathBond[\"O3\"] = 6] = \"O3\";\n    DotPathBond[DotPathBond[\"O3X\"] = 7] = \"O3X\";\n})(DotPathBond || (DotPathBond = {}));\nexport var DotPathCharge;\n(function (DotPathCharge) {\n    DotPathCharge[DotPathCharge[\"N1X\"] = -3] = \"N1X\";\n    DotPathCharge[DotPathCharge[\"N1\"] = -2] = \"N1\";\n    DotPathCharge[DotPathCharge[\"N01\"] = -1] = \"N01\";\n    DotPathCharge[DotPathCharge[\"Z0\"] = 0] = \"Z0\";\n    DotPathCharge[DotPathCharge[\"P01\"] = 1] = \"P01\";\n    DotPathCharge[DotPathCharge[\"P1\"] = 2] = \"P1\";\n    DotPathCharge[DotPathCharge[\"P1X\"] = 3] = \"P1X\";\n})(DotPathCharge || (DotPathCharge = {}));\nexport class DotPath {\n    constructor(mol) {\n        this.mol = mol;\n        this.paths = [];\n        if (mol)\n            this.calculate();\n    }\n    clone() {\n        let dup = new DotPath(null);\n        dup.mol = this.mol;\n        dup.maskBlock = this.maskBlock;\n        dup.paths = this.paths.slice(0);\n        return dup;\n    }\n    getBondOrders() {\n        const mol = this.mol;\n        let orders = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            orders.push(mol.bondOrder(n));\n        for (let path of this.paths) {\n            let fract = path.numer / path.denom;\n            for (let n = 1; n <= 5; n++)\n                if (fltEqual(fract, n))\n                    fract = n;\n            for (let b of path.bonds)\n                orders[b - 1] = fract;\n        }\n        return orders;\n    }\n    getBondClasses() {\n        const mol = this.mol;\n        let classes = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bo = mol.bondOrder(n);\n            classes.push(bo == 0 ? 0 :\n                bo == 1 ? 2 :\n                    bo == 2 ? 4 :\n                        bo == 3 ? 6 : 7);\n        }\n        for (let path of this.paths) {\n            let fract = path.numer / path.denom;\n            let bcls = fltEqual(fract, 0) ? 0 :\n                fltEqual(fract, 1) ? 2 :\n                    fltEqual(fract, 2) ? 4 :\n                        fltEqual(fract, 3) ? 6 :\n                            fract < 1 ? 1 :\n                                fract < 2 ? 3 :\n                                    fract < 3 ? 5 : 7;\n            for (let b of path.bonds)\n                classes[b - 1] = bcls;\n        }\n        return classes;\n    }\n    getChargeClasses() {\n        const mol = this.mol;\n        let classes = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let chg = mol.atomCharge(n);\n            classes.push(chg == 0 ? 0 :\n                chg == -1 ? -2 :\n                    chg == 1 ? 2 :\n                        chg < -1 ? -3 : 3);\n        }\n        for (let path of this.paths) {\n            let chg = 0;\n            for (let a of path.atoms)\n                chg += mol.atomCharge(a);\n            chg /= path.atoms.length;\n            let ccls = fltEqual(chg, 0) ? 0 :\n                fltEqual(chg, -1) ? -2 :\n                    fltEqual(chg, 1) ? 2 :\n                        chg > -1 && chg < 0 ? -1 :\n                            chg > 0 && chg < 1 ? 1 :\n                                chg < -1 ? -3 : 3;\n            for (let a of path.atoms)\n                classes[a - 1] = ccls;\n        }\n        return classes;\n    }\n    getAggregateCharges() {\n        const mol = this.mol;\n        let chg = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            chg[n - 1] = mol.atomCharge(n);\n        for (let path of this.paths) {\n            let total = 0;\n            for (let a of path.atoms)\n                total += chg[a - 1];\n            for (let a of path.atoms)\n                chg[a - 1] = total;\n        }\n        return chg;\n    }\n    toString() {\n        let str = 'blocking=' + JSON.stringify(this.maskBlock) + '; paths=' + this.paths.length;\n        for (let p of this.paths)\n            str += ' [' + p.numer + '/' + p.denom + ';a=' + JSON.stringify(p.atoms) + ';b=' + JSON.stringify(p.bonds) + ']';\n        return str;\n    }\n    calculate() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let nonsingle = Vec.booleanArray(false, na), pibonded = Vec.booleanArray(false, na), metalbonded = Vec.booleanArray(false, na);\n        let bondsum = Vec.numberArray(0, na);\n        for (let n = 0; n < na; n++)\n            bondsum[n] = mol.atomHydrogens(n + 1);\n        for (let n = 1; n <= nb; n++) {\n            let bo = mol.bondOrder(n), bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            if (bo != 1) {\n                nonsingle[bfr - 1] = true;\n                nonsingle[bto - 1] = true;\n            }\n            if (bo >= 2) {\n                pibonded[bfr - 1] = true;\n                pibonded[bto - 1] = true;\n            }\n            else {\n                let blk1 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bfr)], blk2 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bto)];\n                if (blk1 >= 3 || blk2 >= 3) {\n                    metalbonded[bfr - 1] = true;\n                    metalbonded[bto - 1] = true;\n                }\n            }\n            bondsum[bfr - 1] += bo;\n            bondsum[bto - 1] += bo;\n            if (mol.bondTransient(n).indexOf(ForeignMoleculeTransient.BondAromatic) >= 0) {\n                pibonded[bfr - 1] = true;\n                pibonded[bto - 1] = true;\n            }\n        }\n        let impliedPi = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++)\n            if (!pibonded[n - 1]) {\n                let adjpi = 0;\n                for (let adj of mol.atomAdjList(n))\n                    if (pibonded[adj - 1] || metalbonded[adj - 1])\n                        adjpi++;\n                if (adjpi >= 2)\n                    impliedPi[n - 1] = true;\n            }\n        for (let n = 0; n < na; n++)\n            if (impliedPi[n])\n                pibonded[n] = true;\n        this.maskBlock = Vec.booleanArray(false, na);\n        let maskMaybe = Vec.booleanArray(false, na);\n        const COULD_BLOCK = [\n            Chemistry.ELEMENT_H,\n            Chemistry.ELEMENT_B, Chemistry.ELEMENT_C, Chemistry.ELEMENT_N, Chemistry.ELEMENT_O, Chemistry.ELEMENT_F,\n            Chemistry.ELEMENT_Al, Chemistry.ELEMENT_Si, Chemistry.ELEMENT_P, Chemistry.ELEMENT_S, Chemistry.ELEMENT_Cl,\n            Chemistry.ELEMENT_Ga, Chemistry.ELEMENT_Ge, Chemistry.ELEMENT_As, Chemistry.ELEMENT_Se, Chemistry.ELEMENT_Br,\n            Chemistry.ELEMENT_In, Chemistry.ELEMENT_Sn, Chemistry.ELEMENT_Sb, Chemistry.ELEMENT_Te, Chemistry.ELEMENT_I,\n            Chemistry.ELEMENT_Tl, Chemistry.ELEMENT_Pb, Chemistry.ELEMENT_Bi, Chemistry.ELEMENT_Po, Chemistry.ELEMENT_At,\n        ];\n        const ACIDS = [\n            Chemistry.ELEMENT_B,\n            Chemistry.ELEMENT_Al, Chemistry.ELEMENT_Si,\n            Chemistry.ELEMENT_Ga, Chemistry.ELEMENT_Ge,\n            Chemistry.ELEMENT_In, Chemistry.ELEMENT_Sn,\n            Chemistry.ELEMENT_Tl, Chemistry.ELEMENT_Pb,\n        ];\n        const BASES = [\n            Chemistry.ELEMENT_N, Chemistry.ELEMENT_O, Chemistry.ELEMENT_F,\n            Chemistry.ELEMENT_P, Chemistry.ELEMENT_S, Chemistry.ELEMENT_Cl,\n            Chemistry.ELEMENT_As, Chemistry.ELEMENT_Se, Chemistry.ELEMENT_Br,\n            Chemistry.ELEMENT_Sb, Chemistry.ELEMENT_Te, Chemistry.ELEMENT_I,\n            Chemistry.ELEMENT_Bi, Chemistry.ELEMENT_Po, Chemistry.ELEMENT_At,\n        ];\n        skip: for (let n = 0; n < na; n++) {\n            const a = n + 1;\n            if (nonsingle[n] || pibonded[n])\n                continue;\n            if (mol.atomCharge(a) != 0 || mol.atomUnpaired(a) != 0)\n                continue;\n            const atno = mol.atomicNumber(a);\n            if (atno == 0) {\n                this.maskBlock[n] = true;\n                continue;\n            }\n            if (COULD_BLOCK.indexOf(atno) < 0)\n                continue;\n            if (bondsum[n] != Chemistry.ELEMENT_BONDING[atno])\n                continue;\n            if (ACIDS.indexOf(atno) >= 0) {\n                for (let adj of mol.atomAdjList(a))\n                    if (BASES.indexOf(mol.atomicNumber(adj)) >= 0)\n                        continue skip;\n            }\n            if (BASES.indexOf(atno) >= 0) {\n                for (let adj of mol.atomAdjList(a))\n                    if (ACIDS.indexOf(mol.atomicNumber(adj)) >= 0)\n                        continue skip;\n            }\n            maskMaybe[n] = true;\n            if (atno == Chemistry.ELEMENT_C) {\n                let hasMetal = false;\n                for (let adj of mol.atomAdjList(a))\n                    if (COULD_BLOCK.indexOf(mol.atomicNumber(adj)) < 0)\n                        hasMetal = true;\n                if (!hasMetal)\n                    this.maskBlock[n] = true;\n            }\n            else if (atno == Chemistry.ELEMENT_H) {\n                this.maskBlock[n] = true;\n            }\n        }\n        skip: for (let n = 0; n < na; n++)\n            if (maskMaybe[n] && !this.maskBlock[n]) {\n                for (let a of mol.atomAdjList(n + 1))\n                    if (!maskMaybe[a - 1])\n                        continue skip;\n                this.maskBlock[n] = true;\n            }\n        let g = Graph.fromMolecule(mol);\n        for (let n = 0; n < na; n++)\n            if (this.maskBlock[n])\n                g.isolateNode(n);\n        for (let cc of g.calculateComponentGroups()) {\n            if (cc.length == 1)\n                continue;\n            let amask = Vec.idxMask(cc, na);\n            Vec.addTo(cc, 1);\n            let p = {\n                atoms: cc,\n                bonds: [],\n                numer: 0,\n                denom: 0\n            };\n            for (let n = 1; n <= nb; n++)\n                if (amask[mol.bondFrom(n) - 1] && amask[mol.bondTo(n) - 1])\n                    p.bonds.push(n);\n            let totalHave = 0, totalWant = 0;\n            for (let a of p.atoms) {\n                let others = mol.atomHydrogens(a);\n                for (let o of mol.atomAdjList(a))\n                    if (!amask[o - 1])\n                        others++;\n                let atno = mol.atomicNumber(a);\n                let have = Chemistry.ELEMENT_VALENCE[atno] - mol.atomCharge(a) - others;\n                let want = Chemistry.ELEMENT_SHELL[atno] - Chemistry.ELEMENT_VALENCE[atno] - others;\n                totalHave += have;\n                totalWant += want;\n            }\n            let electrons = Math.min(totalHave, totalWant);\n            p.numer = electrons;\n            p.denom = 2 * p.bonds.length;\n            this.paths.push(p);\n        }\n    }\n}\n//# sourceMappingURL=DotPath.js.map","import { GeomUtil } from '../util/Geom';\nimport { angleDiff, angleDiffPos, DEGRAD, norm2_xyz, norm_xyz } from '../util/util';\nimport { Permutation, Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nexport class Stereochemistry {\n    constructor(meta) {\n        this.meta = meta;\n        this.mol = meta.mol;\n        this.priority = Vec.numberArray(0, this.mol.numAtoms);\n        this.chiralTetra = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n        this.cistransBond = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numBonds);\n        this.squarePlanar = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n    }\n    calculate() {\n        this.isH = Vec.booleanArray(false, this.mol.numAtoms);\n        for (let n = this.mol.numAtoms; n >= 1; n--)\n            this.isH[n - 1] = this.mol.atomElement(n) == 'H';\n        this.buildPriority();\n        this.buildTetraChirality();\n        this.buildBondCisTrans();\n        this.buildPlanarCisTrans();\n        this.buildOctaChirality();\n    }\n    atomPriority(atom) { return this.priority[atom - 1]; }\n    atomTetraChirality(atom) { return this.chiralTetra[atom - 1]; }\n    bondSideStereo(bond) { return this.cistransBond[bond - 1]; }\n    atomPlanarStereo(atom) { return this.squarePlanar[atom - 1]; }\n    getPriorities() { return this.priority.slice(0); }\n    getAtomTetraChiral() { return this.chiralTetra.slice(0); }\n    getBondSideStereo() { return this.cistransBond.slice(0); }\n    static create(meta) {\n        let stereo = new Stereochemistry(meta);\n        stereo.calculate();\n        return stereo;\n    }\n    static rubricTetrahedral(mol, atom) {\n        if (mol.atomAdjCount(atom) < 3 || mol.atomAdjCount(atom) + mol.atomHydrogens(atom) != 4)\n            return null;\n        let adjBonds = mol.atomAdjBonds(atom);\n        let hasWedge = false;\n        for (let n = 0; n < adjBonds.length; n++) {\n            let bt = mol.bondType(adjBonds[n]);\n            if (bt == Molecule.BONDTYPE_UNKNOWN)\n                return null;\n            if (mol.bondFrom(adjBonds[n]) != atom)\n                continue;\n            if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                hasWedge = true;\n        }\n        if (!hasWedge && !mol.is3D())\n            return null;\n        let adj = mol.atomAdjList(atom);\n        let x = [0, 0, 0, 0];\n        let y = [0, 0, 0, 0];\n        let z = [0, 0, 0, 0];\n        let numShort = 0, numWedges = 0;\n        for (let n = 0; n < adjBonds.length; n++) {\n            const bfr = mol.bondFrom(adjBonds[n]), bt = mol.bondType(adjBonds[n]);\n            x[n] = mol.atomX(adj[n]) - mol.atomX(atom);\n            y[n] = mol.atomY(adj[n]) - mol.atomY(atom);\n            if (mol.is3D()) {\n                z[n] = mol.atomZ(adj[n]) - mol.atomZ(atom);\n            }\n            else if (bfr == atom) {\n                if (bt == Molecule.BONDTYPE_INCLINED) {\n                    z[n] = 1;\n                    numWedges++;\n                }\n                else if (bt == Molecule.BONDTYPE_DECLINED) {\n                    z[n] = -1;\n                    numWedges++;\n                }\n            }\n            let dsq = norm_xyz(x[n], y[n], z[n]);\n            if (dsq < 0.01 * 0.01) {\n                numShort++;\n                if (numShort > 1)\n                    return null;\n            }\n        }\n        if (adjBonds.length == 3) {\n            adj.push(0);\n            if (!mol.is3D() && numWedges == 1) {\n                let th0 = Math.atan2(y[0], x[0]), th1 = Math.atan2(y[1], x[1]), th2 = Math.atan2(y[2], x[2]);\n                let i1 = 1, i2 = 2;\n                if (angleDiffPos(th1, th0) > angleDiffPos(th2, th0)) {\n                    i2 = 1;\n                    i1 = 2;\n                }\n                x[0] = 1.5;\n                y[0] = 0;\n                x[1] = -0.75;\n                y[i1] = 1.3;\n                x[2] = -0.75;\n                y[i2] = -1.3;\n            }\n            else {\n                x[3] = -(x[0] + x[1] + x[2]);\n                y[3] = -(y[0] + y[1] + y[2]);\n                z[3] = -(z[0] + z[1] + z[2]);\n                let dsq = norm2_xyz(x[3], y[3], z[3]);\n                if (dsq < 0.01 * 0.01)\n                    return null;\n                let inv = 1.0 / Math.sqrt(dsq);\n                x[3] *= inv;\n                y[3] *= inv;\n                z[3] *= inv;\n            }\n        }\n        let one = 0, two = 0;\n        for (let i = 1; i <= 6; i++) {\n            let a = 0, b = 0;\n            if (i == 1) {\n                a = 1;\n                b = 2;\n            }\n            else if (i == 2) {\n                a = 2;\n                b = 3;\n            }\n            else if (i == 3) {\n                a = 3;\n                b = 1;\n            }\n            else if (i == 4) {\n                a = 2;\n                b = 1;\n            }\n            else if (i == 5) {\n                a = 3;\n                b = 2;\n            }\n            else if (i == 6) {\n                a = 1;\n                b = 3;\n            }\n            let xx = y[a] * z[b] - y[b] * z[a] - x[0];\n            let yy = z[a] * x[b] - z[b] * x[a] - y[0];\n            let zz = x[a] * y[b] - x[b] * y[a] - z[0];\n            if (i <= 3)\n                one += xx * xx + yy * yy + zz * zz;\n            else\n                two += xx * xx + yy * yy + zz * zz;\n        }\n        if (two > one)\n            Vec.swap(adj, 2, 3);\n        return adj;\n    }\n    static rubricSquarePlanar(mol, atom) {\n        if (mol.atomAdjCount(atom) != 4)\n            return null;\n        if (!mol.is3D()) {\n            let ninc = 0, ndec = 0;\n            for (let b of mol.atomAdjBonds(atom)) {\n                let bt = mol.bondType(b);\n                if (bt == Molecule.BONDTYPE_INCLINED)\n                    ninc++;\n                else if (bt == Molecule.BONDTYPE_DECLINED)\n                    ndec++;\n            }\n            if (ninc == 2 && ndec == 2) { }\n            else if (ninc == 2 && ndec == 0) { }\n            else if (ninc == 0 && ndec == 2) { }\n            else\n                return null;\n        }\n        let adj = mol.atomAdjList(atom);\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v1 = Vec.sub(MolUtil.atomVec3(mol, adj[0]), v0);\n        let v2 = Vec.sub(MolUtil.atomVec3(mol, adj[1]), v0);\n        let v3 = Vec.sub(MolUtil.atomVec3(mol, adj[2]), v0);\n        let v4 = Vec.sub(MolUtil.atomVec3(mol, adj[3]), v0);\n        for (let v of [v1, v2, v3, v4]) {\n            let dsq = norm2_xyz(v[0], v[1], v[2]);\n            if (dsq < 0.01 * 0.01)\n                continue;\n            let inv = 1.0 / Math.sqrt(dsq);\n            v[0] *= inv;\n            v[1] *= inv;\n            v[2] *= inv;\n        }\n        let d2 = GeomUtil.dist2(v1, v2), d3 = GeomUtil.dist2(v1, v3), d4 = GeomUtil.dist2(v1, v4);\n        if (d2 > d3 && d2 >= d4) {\n            Vec.swap(adj, 1, 2);\n            [v2, v3] = [v3, v2];\n        }\n        else if (d4 > d3) {\n            Vec.swap(adj, 3, 2);\n            [v3, v4] = [v4, v3];\n        }\n        const MIN_ANGLE = (mol.is3D() ? 80 : 45) * DEGRAD;\n        const MAX_ANGLE = (mol.is3D() ? 100 : 135) * DEGRAD;\n        const th12 = GeomUtil.acuteAngle(v1, v2);\n        if (th12 < MIN_ANGLE || th12 > MAX_ANGLE)\n            return null;\n        const th23 = GeomUtil.acuteAngle(v2, v3);\n        if (th23 < MIN_ANGLE || th23 > MAX_ANGLE)\n            return null;\n        const th34 = GeomUtil.acuteAngle(v3, v4);\n        if (th34 < MIN_ANGLE || th34 > MAX_ANGLE)\n            return null;\n        const th41 = GeomUtil.acuteAngle(v4, v1);\n        if (th41 < MIN_ANGLE || th41 > MAX_ANGLE)\n            return null;\n        return adj;\n    }\n    static rubricBipyrimidal(mol, atom) {\n        const nadj = mol.atomAdjCount(atom);\n        if (nadj != 4 && nadj != 5)\n            return null;\n        let atom2 = 0, atom3 = 0;\n        let adj = mol.atomAdjList(atom), bonds = mol.atomAdjBonds(atom);\n        if (!mol.is3D()) {\n            for (let n = 0; n < adj.length; n++) {\n                if (mol.bondType(bonds[n]) == Molecule.BONDTYPE_INCLINED) {\n                    if (atom2 > 0)\n                        return null;\n                    atom2 = adj[n];\n                }\n                else if (mol.bondType(bonds[n]) == Molecule.BONDTYPE_DECLINED) {\n                    if (atom3 > 0)\n                        return null;\n                    atom3 = adj[n];\n                }\n            }\n            if (atom2 == 0 || atom3 == 0)\n                return null;\n            let th1 = Math.atan2(mol.atomY(atom2) - mol.atomY(atom), mol.atomX(atom2) - mol.atomX(atom));\n            let th2 = Math.atan2(mol.atomY(atom3) - mol.atomY(atom), mol.atomX(atom3) - mol.atomX(atom));\n            if (Math.abs(angleDiff(th1, th2)) > 160 * DEGRAD)\n                return null;\n        }\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v = [[], [], [], [], []];\n        const THRESH = 0.1;\n        for (let n = 0; n < nadj; n++) {\n            v[n] = Vec.sub(MolUtil.atomVec3(mol, adj[n]), v0);\n            const mag = GeomUtil.magnitude(v[n]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[n], 1.0 / mag);\n            if (adj[n] == atom2)\n                v[n][2] += 1;\n            else if (adj[n] == atom3)\n                v[n][2] -= 1;\n        }\n        let atom4 = 0, atom5 = 0;\n        const ANGLE_OPPOSITE = 175 * DEGRAD;\n        for (let i = 0; i < nadj - 1; i++)\n            if (adj[i] != atom2 && adj[i] != atom3) {\n                for (let j = i + 1; j < nadj; j++)\n                    if (adj[j] != atom2 && adj[j] != atom3) {\n                        let theta = GeomUtil.acuteAngle(v[i], v[j]);\n                        if (theta > ANGLE_OPPOSITE) {\n                            if (atom4 != 0)\n                                return null;\n                            atom4 = adj[i];\n                            atom5 = adj[j];\n                        }\n                    }\n            }\n        if (mol.is3D()) {\n            for (let a of adj)\n                if (a != atom4 && a != atom5) {\n                    if (atom2 == 0)\n                        atom2 = a;\n                    else if (atom3 == 0)\n                        atom3 = a;\n                }\n        }\n        if (!atom4 || !atom5)\n            return null;\n        let v1 = null;\n        let v2 = v[adj.indexOf(atom2)];\n        let v3 = v[adj.indexOf(atom3)];\n        let v4 = v[adj.indexOf(atom4)];\n        let v5 = v[adj.indexOf(atom5)];\n        let atom1 = 0;\n        if (nadj == 5) {\n            for (let n = 0; n < nadj; n++)\n                if (adj[n] != atom2 && adj[n] != atom3 && adj[n] != atom4 && adj[n] != atom5) {\n                    atom1 = adj[n];\n                    v1 = v[n];\n                    break;\n                }\n        }\n        else {\n            v1 = [0, 0, 0];\n            v1 = Vec.sub(v1, v2);\n            v1 = Vec.sub(v1, v3);\n            const mag = GeomUtil.magnitude(v1);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v1, 1.0 / mag);\n        }\n        let v45 = Vec.sub(v5, v4);\n        let cross = GeomUtil.crossProduct(v45, v1);\n        let dsq2 = GeomUtil.dist2(cross, v2), dsq3 = GeomUtil.dist2(cross, v3);\n        if (dsq2 < dsq3)\n            return [atom1, atom2, atom3, atom4, atom5];\n        else\n            return [atom1, atom2, atom3, atom5, atom4];\n    }\n    static rubricOctahedral(mol, atom) {\n        const nadj = mol.atomAdjCount(atom);\n        if (nadj != 5 && nadj != 6)\n            return null;\n        let adj = mol.atomAdjList(atom), bonds = mol.atomAdjBonds(atom);\n        if (nadj == 5) {\n            adj.push(0);\n            bonds.push(0);\n        }\n        if (!mol.is3D()) {\n            let numWedges = 0;\n            for (let b of bonds)\n                if (b > 0) {\n                    const bt = mol.bondType(b);\n                    if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                        numWedges++;\n                }\n            if ((nadj == 5 && numWedges < 1) || (nadj == 6 && numWedges < 2))\n                return null;\n        }\n        const THRESH = 0.1;\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v = [[], [], [], [], [], []];\n        for (let n = 0; n < nadj; n++) {\n            v[n] = MolUtil.atomVec3(mol, adj[n]);\n            Vec.subFromArray(v[n], v0);\n            let mag = GeomUtil.magnitude(v[n]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[n], 1 / mag);\n            let bt = mol.bondType(bonds[n]);\n            if (bt == Molecule.BONDTYPE_INCLINED) {\n                if (mol.bondFrom(bonds[n]) == atom)\n                    v[n][2] += 1;\n                else\n                    v[n][2] -= 1;\n            }\n            else if (bt == Molecule.BONDTYPE_DECLINED) {\n                if (mol.bondFrom(bonds[n]) == atom)\n                    v[n][2] -= 1;\n                else\n                    v[n][2] += 1;\n            }\n        }\n        if (nadj == 5) {\n            v[5] = [0, 0, 0];\n            for (let n = 0; n < 5; n++)\n                Vec.subFromArray(v[5], v[n]);\n            let mag = GeomUtil.magnitude(v[5]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[5], 1 / mag);\n        }\n        let slots = [-1, -1, -1, -1, 0, 1];\n        let bestOpposite = GeomUtil.acuteAngle(v[0], v[1]);\n        for (let i = 0; i < 5; i++)\n            for (let j = (i == 0 ? 2 : i + 1); j < 6; j++) {\n                let theta = GeomUtil.acuteAngle(v[i], v[j]);\n                if (theta > bestOpposite) {\n                    slots[4] = i;\n                    slots[5] = j;\n                    bestOpposite = theta;\n                }\n            }\n        let axial = Vec.sub(v[slots[5]], v[slots[4]]);\n        let bestOrthogonal = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < 6; n++)\n            if (n != slots[4] && n != slots[5]) {\n                let delta = Math.abs((90 * DEGRAD) - GeomUtil.acuteAngle(v[n], axial));\n                if (delta < bestOrthogonal) {\n                    slots[0] = n;\n                    bestOrthogonal = delta;\n                }\n            }\n        for (let s = 1; s <= 2; s++) {\n            let cross = GeomUtil.crossProduct(axial, v[slots[s - 1]]);\n            let bestOrient = Number.POSITIVE_INFINITY;\n            for (let n = 0; n < 6; n++) {\n                if (n == slots[4] || n == slots[5] || n == slots[0] || n == slots[1])\n                    continue;\n                let delta = GeomUtil.acuteAngle(v[n], cross);\n                if (delta < bestOrient) {\n                    slots[s] = n;\n                    bestOrient = delta;\n                }\n            }\n        }\n        for (let n = 0; n < 6; n++)\n            if (slots.indexOf(n) < 0) {\n                slots[3] = n;\n                break;\n            }\n        let rubric = [0, 0, 0, 0, 0, 0];\n        for (let n = 0; n < 6; n++)\n            rubric[n] = slots[n] < 0 ? 0 : adj[slots[n]];\n        return rubric;\n    }\n    static rubricBondSides(mol, bond) {\n        const bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        const nfr = mol.atomAdjCount(bfr), nto = mol.atomAdjCount(bto);\n        if (nfr < 2 || nfr > 3 || nto < 2 || nto > 3)\n            return null;\n        let adj1 = mol.atomAdjList(bfr), adj2 = mol.atomAdjList(bto);\n        let f1 = 0, f2 = 0, t1 = 0, t2 = 0;\n        for (let i = 0; i < adj1.length; i++) {\n            if (adj1[i] != bto) {\n                if (f1 == 0)\n                    f1 = adj1[i];\n                else\n                    f2 = adj1[i];\n            }\n        }\n        for (let i = 0; i < adj2.length; i++) {\n            if (adj2[i] != bfr) {\n                if (t1 == 0)\n                    t1 = adj2[i];\n                else\n                    t2 = adj2[i];\n            }\n        }\n        if (f1 > 0 && f2 > 0 && mol.atomElement(f1) == 'H') {\n            let f = f1;\n            f1 = f2;\n            f2 = f;\n        }\n        if (t1 > 0 && t2 > 0 && mol.atomElement(t1) == 'H') {\n            let t = t1;\n            t1 = t2;\n            t2 = t;\n        }\n        let vfr = MolUtil.atomVec3(mol, bfr), vto = MolUtil.atomVec3(mol, bto);\n        let vbond = Vec.sub(vto, vfr);\n        let vf1 = Vec.sub(MolUtil.atomVec3(mol, f1), vfr), vt1 = Vec.sub(MolUtil.atomVec3(mol, t1), vto);\n        const THRESHSQ = 0.1 * 0.1;\n        let xf1 = GeomUtil.crossProduct(vf1, vbond);\n        if (GeomUtil.magnitude2(xf1) < THRESHSQ)\n            return null;\n        let xt1 = GeomUtil.crossProduct(vt1, vbond);\n        if (GeomUtil.magnitude2(xt1) < THRESHSQ)\n            return null;\n        let xf1N = Vec.neg(xf1);\n        let keepF1T1 = GeomUtil.dist2(xf1, xt1) < GeomUtil.dist2(xf1N, xt1);\n        let keepF2T1 = keepF1T1, keepF1T2 = keepF1T1, keepF2T2 = keepF1T1;\n        let vf2 = null, vt2 = null, xf2 = null, xt2 = null, xf2N = null;\n        if (f2 > 0) {\n            vf2 = Vec.sub(MolUtil.atomVec3(mol, f2), vfr);\n            if (GeomUtil.magnitude2(vf2) < THRESHSQ) {\n                if (mol.atomElement(f2) != 'H')\n                    return null;\n            }\n            else {\n                xf2 = GeomUtil.crossProduct(vf2, vbond);\n                if (GeomUtil.magnitude2(xf2) < THRESHSQ)\n                    return null;\n                xf2N = Vec.neg(xf2);\n                keepF2T1 = GeomUtil.dist2(xf2, xt1) > GeomUtil.dist2(xf2N, xt1);\n            }\n        }\n        if (t2 > 0) {\n            vt2 = Vec.sub(MolUtil.atomVec3(mol, t2), vto);\n            if (GeomUtil.magnitude2(vt2) < THRESHSQ) {\n                if (mol.atomElement(t2) != 'H')\n                    return null;\n            }\n            else {\n                xt2 = GeomUtil.crossProduct(vt2, vbond);\n                if (GeomUtil.magnitude2(xt2) < THRESHSQ)\n                    return null;\n                keepF1T2 = GeomUtil.dist2(xf1, xt2) > GeomUtil.dist2(xf1N, xt2);\n            }\n        }\n        if (xf2 != null && xt2 != null) {\n            keepF2T2 = GeomUtil.dist2(xf2, xt2) < GeomUtil.dist2(xf2N, xt2);\n        }\n        if (keepF1T1 && keepF2T1 && keepF1T2 && keepF2T2)\n            return [f1, f2, t1, t2];\n        if (!keepF1T1 && !keepF2T1 && !keepF1T2 && !keepF2T2)\n            return [f1, f2, t2, t1];\n        return null;\n    }\n    buildTetraChirality() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let haswedge = Vec.booleanArray(false, na);\n        for (let n = 1; n <= nb; n++) {\n            if (mol.bondType(n) == Molecule.BONDTYPE_INCLINED || mol.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                haswedge[mol.bondFrom(n) - 1] = true;\n        }\n        skip_atom: for (let n = 1; n <= na; n++) {\n            this.chiralTetra[n - 1] = Stereochemistry.STEREO_NONE;\n            let adj = mol.atomAdjList(n);\n            if (!(adj.length == 4 || (adj.length == 3 && mol.atomHydrogens(n) == 1)))\n                continue;\n            if (adj.length == 3 && (this.isH[adj[0] - 1] || this.isH[adj[1] - 1] || this.isH[adj[2] - 1]))\n                continue;\n            for (let i = 0; i < adj.length - 1; i++) {\n                for (let j = i + 1; j < adj.length; j++) {\n                    if (this.priority[adj[i] - 1] == this.priority[adj[j] - 1])\n                        continue skip_atom;\n                }\n            }\n            if (!haswedge[n - 1] && !mol.is3D()) {\n                this.chiralTetra[n - 1] = Stereochemistry.STEREO_UNKNOWN;\n                continue;\n            }\n            let rubric = Stereochemistry.rubricTetrahedral(mol, n);\n            if (rubric == null)\n                continue;\n            let pri = [\n                rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1],\n                rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1],\n                rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1],\n                rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1]\n            ];\n            pri = Vec.idxSort(pri);\n            let parity = Permutation.parityIdentity(pri);\n            this.chiralTetra[n - 1] = (parity & 1) == 0 ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildBondCisTrans() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let sf = [0, 0], st = [0, 0];\n        let ringMask = Vec.booleanArray(false, nb);\n        for (let rsz = 3; rsz <= 7; rsz++) {\n            for (let r of mol.findRingsOfSize(rsz)) {\n                for (let n = 0; n < r.length; n++) {\n                    let b = mol.findBond(r[n], r[n < r.length - 1 ? n + 1 : 0]);\n                    ringMask[b - 1] = true;\n                }\n            }\n        }\n        skip_bond: for (let n = 1; n <= nb; n++) {\n            this.cistransBond[n - 1] = Stereochemistry.STEREO_NONE;\n            if (mol.bondOrder(n) != 2 || this.meta.isBondAromatic(n) || ringMask[n - 1])\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let adj1 = mol.atomAdjList(bfr), adj2 = mol.atomAdjList(bto);\n            if (adj1.length <= 1 || adj2.length <= 1 || adj1.length > 3 || adj2.length > 3)\n                continue;\n            if (adj1.length == 2 && (this.isH[adj1[0] - 1] || this.isH[adj1[1] - 1]))\n                continue;\n            if (adj2.length == 2 && (this.isH[adj2[0] - 1] || this.isH[adj2[1] - 1]))\n                continue;\n            for (let i = 0; i < adj1.length - 1; i++)\n                if (adj1[i] != bfr)\n                    for (let j = i + 1; j < adj1.length; j++)\n                        if (adj1[j] != bfr)\n                            if (this.priority[adj1[i] - 1] == this.priority[adj1[j] - 1])\n                                continue skip_bond;\n            for (let i = 0; i < adj2.length - 1; i++)\n                if (adj2[i] != bto)\n                    for (let j = i + 1; j < adj2.length; j++)\n                        if (adj2[j] != bto)\n                            if (this.priority[adj2[i] - 1] == this.priority[adj2[j] - 1])\n                                continue skip_bond;\n            if (mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN) {\n                this.cistransBond[n - 1] = Stereochemistry.STEREO_UNKNOWN;\n                continue;\n            }\n            let rubric = Stereochemistry.rubricBondSides(mol, n);\n            if (rubric == null)\n                continue;\n            let pf1 = rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1];\n            let pf2 = rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1];\n            let pt1 = rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1];\n            let pt2 = rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1];\n            this.cistransBond[n - 1] = ((pf1 < pf2) == (pt1 < pt2)) ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildPlanarCisTrans() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        skip_atom: for (let n = 1; n <= na; n++) {\n            this.squarePlanar[n - 1] = Stereochemistry.STEREO_NONE;\n            if (mol.atomAdjCount(n) != 4)\n                continue;\n            if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(n)] < 3)\n                continue;\n            let adj = mol.atomAdjList(n);\n            for (let i = 0; i < adj.length; i++) {\n                let count = 0;\n                for (let j = 0; j < adj.length; j++) {\n                    if (this.priority[adj[i] - 1] == this.priority[adj[j] - 1])\n                        count++;\n                }\n                if (count >= 3)\n                    continue skip_atom;\n            }\n            let rubric = Stereochemistry.rubricSquarePlanar(mol, n);\n            if (rubric == null)\n                continue;\n            let pri = [\n                rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1],\n                rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1],\n                rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1],\n                rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1]\n            ];\n            let parity = Permutation.parityOrder(pri);\n            this.squarePlanar[n - 1] = (parity & 1) == 0 ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildOctaChirality() {\n    }\n    buildPriority() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let cipgr = [];\n        for (let n = 0; n < na; n++)\n            cipgr.push(Vec.numberArray(-1, mol.atomHydrogens(n + 1)));\n        for (let n = 1; n <= nb; n++) {\n            let bf = mol.bondFrom(n) - 1, bt = mol.bondTo(n) - 1, bo = mol.bondOrder(n);\n            if (this.meta.isBondAromatic(n))\n                bo = 2;\n            if (bf != bt)\n                for (let i = 0; i < bo; i++) {\n                    cipgr[bf].push(bt);\n                    cipgr[bt].push(bf);\n                }\n        }\n        this.priority = Vec.numberArray(0, na);\n        let anyActualH = false;\n        for (let n = 0; n < na; n++) {\n            this.priority[n] = mol.atomicNumber(n + 1);\n            if (this.priority[n] == 1)\n                anyActualH = true;\n        }\n        let prigr = [];\n        for (let n = 0; n < na; n++)\n            prigr.push([]);\n        while (true) {\n            for (let n = 0; n < na; n++) {\n                let cip = cipgr[n], pri = [];\n                for (let i = 0; i < cip.length; i++)\n                    pri.push(cip[i] < 0 ? 1 : this.priority[cip[i]]);\n                Vec.sort(pri);\n                prigr[n] = pri;\n            }\n            let groups = this.sortAndGroup(this.priority);\n            let nextpri = anyActualH ? 0 : 1;\n            let repartitioned = false;\n            for (let n = 0; n < groups.length; n++) {\n                let g = groups[n];\n                for (let p = 0; p < g.length - 1;) {\n                    const i1 = g[p], i2 = g[p + 1];\n                    let cmp = 0, sz = Math.max(prigr[i1].length, prigr[i2].length);\n                    for (let i = 0; i < sz; i++) {\n                        let v1 = i < prigr[i1].length ? prigr[i1][i] : 0, v2 = i < prigr[i2].length ? prigr[i2][i] : 0;\n                        if (v1 < v2) {\n                            cmp = -1;\n                            break;\n                        }\n                        if (v1 > v2) {\n                            cmp = 1;\n                            break;\n                        }\n                    }\n                    if (cmp > 0) {\n                        g[p] = i2;\n                        g[p + 1] = i1;\n                        if (p > 0)\n                            p--;\n                    }\n                    else\n                        p++;\n                }\n                for (let i = 0; i < g.length; i++) {\n                    if (i == 0)\n                        nextpri++;\n                    else if (prigr[g[i]].length != prigr[g[i - 1]].length) {\n                        nextpri++;\n                        repartitioned = true;\n                    }\n                    else {\n                        for (let j = 0; j < prigr[g[i]].length; j++)\n                            if (prigr[g[i]][j] != prigr[g[i - 1]][j]) {\n                                nextpri++;\n                                repartitioned = true;\n                                break;\n                            }\n                    }\n                    this.priority[g[i]] = nextpri;\n                }\n            }\n            if (!repartitioned)\n                break;\n        }\n    }\n    sortAndGroup(val) {\n        let uset = new Set();\n        for (let v of val)\n            uset.add(v);\n        let unique = Array.from(uset);\n        Vec.sort(unique);\n        let ret = [];\n        for (let n = 0; n < unique.length; n++)\n            ret.push([]);\n        for (let n = 0; n < val.length; n++) {\n            let grp = unique.indexOf(val[n]);\n            ret[grp].push(n);\n        }\n        return ret;\n    }\n}\nStereochemistry.STEREO_NONE = 0;\nStereochemistry.STEREO_POS = 1;\nStereochemistry.STEREO_NEG = 2;\nStereochemistry.STEREO_UNKNOWN = 3;\nStereochemistry.STEREO_BROKEN = 4;\nStereochemistry.RUBRIC_EQUIV_TETRA = [\n    [0, 1, 2, 3], [0, 2, 3, 1], [0, 3, 1, 2], [1, 0, 3, 2], [1, 2, 0, 3], [1, 3, 2, 0],\n    [2, 0, 1, 3], [2, 1, 3, 0], [2, 3, 0, 1], [3, 0, 2, 1], [3, 1, 0, 2], [3, 2, 1, 0]\n];\nStereochemistry.RUBRIC_EQUIV_SIDES = [\n    [0, 1, 2, 3], [1, 0, 3, 2], [2, 3, 0, 1], [3, 2, 1, 0]\n];\nStereochemistry.RUBRIC_EQUIV_SQUARE = [\n    [0, 1, 2, 3], [0, 3, 2, 1], [1, 2, 3, 0], [1, 0, 3, 2],\n    [2, 1, 0, 3], [2, 3, 0, 1], [3, 2, 1, 0], [3, 0, 1, 2]\n];\nStereochemistry.RUBRIC_EQUIV_BIPY = [\n    [0, 1, 2, 3, 4], [1, 2, 0, 3, 4], [2, 0, 1, 3, 4],\n    [0, 2, 1, 4, 3], [1, 0, 2, 4, 3], [2, 1, 0, 4, 3],\n];\nStereochemistry.RUBRIC_EQUIV_OCTA = [\n    [0, 1, 2, 3, 4, 5], [0, 3, 2, 1, 5, 4], [0, 4, 2, 5, 3, 1], [0, 5, 2, 4, 1, 3],\n    [1, 0, 3, 2, 5, 4], [1, 2, 3, 0, 4, 5], [1, 4, 3, 5, 0, 2], [1, 5, 3, 4, 2, 0],\n    [2, 1, 0, 3, 5, 4], [2, 3, 0, 1, 4, 5], [2, 4, 0, 5, 1, 3], [2, 5, 0, 4, 3, 1],\n    [3, 0, 1, 2, 4, 5], [3, 2, 1, 0, 5, 4], [3, 4, 1, 5, 2, 0], [3, 5, 1, 4, 0, 2],\n    [4, 0, 5, 2, 1, 3], [4, 1, 5, 3, 2, 0], [4, 2, 5, 0, 3, 1], [4, 3, 5, 1, 0, 2],\n    [5, 0, 4, 2, 3, 1], [5, 1, 4, 3, 0, 2], [5, 2, 4, 0, 1, 3], [5, 3, 4, 1, 2, 0]\n];\n//# sourceMappingURL=Stereochemistry.js.map","import { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { DotPath } from './DotPath';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nimport { Stereochemistry } from './Stereochemistry';\nexport class MetaMolecule {\n    constructor(mol) {\n        this.mol = mol;\n        this.atomArom = null;\n        this.bondArom = null;\n        this.rubricTetra = null;\n        this.rubricSquare = null;\n        this.rubricBipy = null;\n        this.rubricOcta = null;\n        this.rubricSides = null;\n        this.hash = null;\n        this.heavyHash = null;\n        this.uniqueElements = null;\n        this.dots = null;\n        this.piAtom = null;\n    }\n    calculateStrictAromaticity() {\n        let mol = this.mol;\n        this.atomArom = Vec.booleanArray(false, mol.numAtoms);\n        this.bondArom = Vec.booleanArray(false, mol.numBonds);\n        let rings = mol.findRingsOfSize(6);\n        const nr = rings.length;\n        if (nr == 0)\n            return;\n        this.ensurePiAtoms();\n        let mask = Vec.booleanArray(false, nr);\n        for (let n = 0; n < nr; n++) {\n            for (let i = 0; i < rings[n].length; i++) {\n                let a = rings[n][i];\n                if (!this.piAtom[a - 1]) {\n                    mask[n] = true;\n                    break;\n                }\n                let b = mol.findBond(a, rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                let bo = mol.bondOrder(b);\n                if (bo != 1 && bo != 2) {\n                    mask[n] = true;\n                    break;\n                }\n            }\n        }\n        while (true) {\n            let anyChange = false;\n            for (let n = 0; n < nr; n++)\n                if (!mask[n]) {\n                    let phase1 = true, phase2 = true;\n                    for (let i = 0; i < rings[n].length; i++) {\n                        let b = mol.findBond(rings[n][i], rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                        if (this.bondArom[b - 1])\n                            continue;\n                        let bo = mol.bondOrder(b);\n                        phase1 = phase1 && bo == (2 - (i & 1));\n                        phase2 = phase2 && bo == (1 + (i & 1));\n                    }\n                    if (!phase1 && !phase2)\n                        continue;\n                    for (let i = 0; i < rings[n].length; i++) {\n                        let b = mol.findBond(rings[n][i], rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                        this.bondArom[b - 1] = true;\n                    }\n                    mask[n] = true;\n                    anyChange = true;\n                }\n            if (!anyChange)\n                break;\n        }\n        for (let n = 0; n < this.bondArom.length; n++)\n            if (this.bondArom[n]) {\n                this.atomArom[mol.bondFrom(n + 1) - 1] = true;\n                this.atomArom[mol.bondTo(n + 1) - 1] = true;\n            }\n    }\n    calculateRelaxedAromaticity() {\n        let mol = this.mol;\n        this.atomArom = Vec.booleanArray(false, mol.numAtoms);\n        this.bondArom = Vec.booleanArray(false, mol.numBonds);\n        this.ensurePiAtoms();\n        const na = mol.numAtoms, nb = mol.numBonds;\n        let electrons = Vec.numberArray(0, na);\n        let exocyclic = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++) {\n            let atno = mol.atomicNumber(n);\n            electrons[n - 1] = (Chemistry.ELEMENT_BLOCKS[atno] == 2 ? Chemistry.ELEMENT_VALENCE[atno] : 0) - mol.atomCharge(n) - mol.atomHydrogens(n)\n                - mol.atomUnpaired(n);\n        }\n        for (let n = 1; n <= nb; n++) {\n            const bfr = mol.bondFrom(n), bto = mol.bondTo(n), bo = mol.bondOrder(n);\n            electrons[bfr - 1] -= bo;\n            electrons[bto - 1] -= bo;\n            if (bo == 2) {\n                const rblk1 = mol.atomRingBlock(bfr), rblk2 = mol.atomRingBlock(bto);\n                if (rblk1 > 0 && rblk1 != rblk2)\n                    exocyclic[bfr - 1] = true;\n                if (rblk2 > 0 && rblk2 != rblk1)\n                    exocyclic[bto - 1] = true;\n            }\n        }\n        let rings = [];\n        for (let rsz = 3; rsz <= 7; rsz++)\n            for (let rng of mol.findRingsOfSize(rsz)) {\n                let valid = true;\n                for (let n = 0; n < rsz; n++) {\n                    const a = rng[n];\n                    if (!this.piAtom[a - 1] && electrons[a - 1] < 2 && !exocyclic[a - 1]) {\n                        valid = false;\n                        break;\n                    }\n                    let b = mol.findBond(a, rng[n < rsz - 1 ? n + 1 : 0]);\n                    let bo = mol.bondOrder(b);\n                    if (bo != 1 && bo != 2) {\n                        valid = false;\n                        break;\n                    }\n                }\n                if (valid)\n                    rings.push(rng);\n            }\n        while (rings.length > 0) {\n            let anyChange = false;\n            for (let n = 0; n < rings.length; n++) {\n                let r = rings[n];\n                let paths = [0];\n                for (let i = 0; i < r.length; i++) {\n                    const a = r[i];\n                    const b1 = mol.findBond(a, r[i < r.length - 1 ? i + 1 : 0]);\n                    const b2 = mol.findBond(a, r[i > 0 ? i - 1 : r.length - 1]);\n                    if (this.bondArom[b1 - 1]) {\n                        for (let j = paths.length - 1; j >= 0; j--) {\n                            const e = paths[j] + 2;\n                            if (paths.indexOf(e) < 0)\n                                paths = Vec.append(paths, e);\n                        }\n                    }\n                    else if (mol.bondOrder(b1) == 2)\n                        Vec.addTo(paths, 2);\n                    else if (electrons[a - 1] >= 2 && mol.bondOrder(b1) == 1 && mol.bondOrder(b2) == 1)\n                        Vec.addTo(paths, 2);\n                }\n                let arom = false;\n                for (let e of paths) {\n                    if (e == 2 && r.length == 3) {\n                        arom = true;\n                        break;\n                    }\n                    if (e == 6) {\n                        arom = true;\n                        break;\n                    }\n                }\n                if (arom) {\n                    for (let i = 0; i < r.length; i++) {\n                        let a = r[i], b = mol.findBond(a, r[i < r.length - 1 ? i + 1 : 0]);\n                        this.atomArom[a - 1] = true;\n                        this.bondArom[b - 1] = true;\n                    }\n                    rings.splice(n, 1);\n                    n--;\n                    anyChange = true;\n                }\n            }\n            if (!anyChange)\n                break;\n        }\n    }\n    calculateStereoRubric() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        this.rubricTetra = new Array(na);\n        this.rubricSquare = new Array(na);\n        this.rubricBipy = new Array(na);\n        this.rubricOcta = new Array(na);\n        this.rubricSides = new Array(nb);\n        for (let n = 1; n <= na; n++) {\n            let blk = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(n)];\n            let adjc = mol.atomAdjCount(n), hc = mol.atomHydrogens(n);\n            let ninc = 0, ndec = 0;\n            for (let b of mol.atomAdjBonds(n)) {\n                if (mol.bondType(b) == Molecule.BONDTYPE_INCLINED && mol.bondFrom(b) == n)\n                    ninc++;\n                else if (mol.bondType(b) == Molecule.BONDTYPE_DECLINED && mol.bondFrom(b) == n)\n                    ndec++;\n            }\n            if (blk == 2 && ((adjc == 3 && hc == 1) || (adjc == 4 && hc == 0))) {\n                this.rubricTetra[n - 1] = Stereochemistry.rubricTetrahedral(mol, n);\n            }\n            else if (blk >= 3 && adjc == 4 && ninc == 1 && ndec == 1) {\n                this.rubricTetra[n - 1] = Stereochemistry.rubricTetrahedral(mol, n);\n            }\n            if (blk >= 3 && adjc == 4 && hc == 0) {\n                this.rubricSquare[n - 1] = Stereochemistry.rubricSquarePlanar(mol, n);\n            }\n            if (blk >= 3 && (adjc == 4 || adjc == 5) && hc == 0) {\n                this.rubricBipy[n - 1] = Stereochemistry.rubricBipyrimidal(mol, n);\n            }\n            if (blk >= 3 && (adjc == 5 || adjc == 6) && hc == 0) {\n                this.rubricOcta[n - 1] = Stereochemistry.rubricOctahedral(mol, n);\n            }\n            else if (blk == 2 && adjc == 6 && hc == 0) {\n                this.rubricOcta[n - 1] = Stereochemistry.rubricOctahedral(mol, n);\n            }\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondOrder(n) != 2 || mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN || this.isBondAromatic(n))\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let blk1 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bfr)];\n            let blk2 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bto)];\n            let adjc1 = mol.atomAdjCount(bfr), hc1 = mol.atomHydrogens(bfr);\n            let adjc2 = mol.atomAdjCount(bto), hc2 = mol.atomHydrogens(bto);\n            if (blk1 == 2 && blk2 == 2 && (adjc1 + hc1 == 3 && hc1 <= 1) && (adjc2 + hc2 == 3 && hc2 <= 1)) {\n                this.rubricSides[n - 1] = Stereochemistry.rubricBondSides(mol, n);\n            }\n        }\n    }\n    removeHydrogens() {\n        let mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let atomMask = Vec.booleanArray(true, na), bondMask = Vec.booleanArray(true, nb);\n        for (let n = 1; n <= na; n++)\n            if (MolUtil.boringHydrogen(mol, n)) {\n                atomMask[n - 1] = false;\n                bondMask[mol.atomAdjBonds(n)[0] - 1] = false;\n            }\n        if (Vec.allTrue(atomMask))\n            return;\n        mol = MolUtil.subgraphMask(mol, atomMask);\n        if (this.atomArom)\n            this.atomArom = Vec.maskGet(this.atomArom, atomMask);\n        if (this.bondArom)\n            this.bondArom = Vec.maskGet(this.bondArom, bondMask);\n        if (this.rubricTetra || this.rubricSquare || this.rubricBipy || this.rubricOcta || this.rubricSides) {\n            if (this.rubricTetra)\n                this.rubricTetra = Vec.maskGet(this.rubricTetra, atomMask);\n            if (this.rubricSquare)\n                this.rubricSquare = Vec.maskGet(this.rubricSquare, atomMask);\n            if (this.rubricBipy)\n                this.rubricBipy = Vec.maskGet(this.rubricBipy, atomMask);\n            if (this.rubricOcta)\n                this.rubricOcta = Vec.maskGet(this.rubricOcta, atomMask);\n            if (this.rubricSides)\n                this.rubricSides = Vec.maskGet(this.rubricSides, bondMask);\n            let atomMap = Vec.prepend(Vec.add(Vec.maskMap(atomMask), 1), 0);\n            for (let n = 0; n < Vec.len(this.rubricTetra); n++)\n                if (this.rubricTetra[n])\n                    this.rubricTetra[n] = Vec.idxGet(atomMap, this.rubricTetra[n]);\n            for (let n = 0; n < Vec.len(this.rubricSquare); n++)\n                if (this.rubricSquare[n])\n                    this.rubricSquare[n] = Vec.idxGet(atomMap, this.rubricSquare[n]);\n            for (let n = 0; n < Vec.len(this.rubricBipy); n++)\n                if (this.rubricBipy[n])\n                    this.rubricBipy[n] = Vec.idxGet(atomMap, this.rubricBipy[n]);\n            for (let n = 0; n < Vec.len(this.rubricOcta); n++)\n                if (this.rubricOcta[n])\n                    this.rubricOcta[n] = Vec.idxGet(atomMap, this.rubricOcta[n]);\n            for (let n = 0; n < Vec.len(this.rubricSides); n++)\n                if (this.rubricSides[n])\n                    this.rubricSides[n] = Vec.idxGet(atomMap, this.rubricSides[n]);\n        }\n    }\n    calculateSkeletonHash() {\n        if (MetaMolecule.skeletonHash == null)\n            throw 'Skeleton hash not available.';\n        this.hash = MetaMolecule.skeletonHash(this.mol);\n    }\n    calculateHeavyHash() {\n        let anyH = false;\n        for (let n = 1; n <= this.mol.numAtoms; n++)\n            if (this.mol.atomElement(n) == 'H') {\n                anyH = true;\n                break;\n            }\n        if (!anyH) {\n            this.heavyHash = this.getSkeletonHash();\n            return;\n        }\n        let hvy = this.mol.clone();\n        for (let n = hvy.numAtoms; n >= 1; n--)\n            if (hvy.atomElement(n) == 'H')\n                hvy.deleteAtomAndBonds(n);\n        this.heavyHash = MetaMolecule.skeletonHash(hvy);\n    }\n    isAtomAromatic(atom) {\n        return this.atomArom == null ? false : this.atomArom[atom - 1];\n    }\n    isBondAromatic(bond) {\n        return this.bondArom == null ? false : this.bondArom[bond - 1];\n    }\n    bondOrderArom(bond) {\n        return this.bondArom != null && this.bondArom[bond - 1] ? -1 : this.mol.bondOrder(bond);\n    }\n    getAtomAromaticity() {\n        return this.atomArom == null ? null : this.atomArom.slice(0);\n    }\n    getBondAromaticity() {\n        return this.bondArom == null ? null : this.bondArom.slice(0);\n    }\n    getSkeletonHash() {\n        if (this.hash == null)\n            this.calculateSkeletonHash();\n        return this.hash;\n    }\n    getHeavyHash() {\n        if (this.heavyHash == null)\n            this.calculateHeavyHash();\n        return this.heavyHash;\n    }\n    getDotPath() {\n        if (this.dots == null)\n            this.dots = new DotPath(this.mol);\n        return this.dots;\n    }\n    getUniqueElements() {\n        if (this.uniqueElements == null) {\n            this.uniqueElements = [];\n            for (let n = 1; n <= this.mol.numAtoms; n++) {\n                let el = this.mol.atomElement(n);\n                if (this.uniqueElements.indexOf(el) < 0)\n                    this.uniqueElements.push(el);\n            }\n        }\n        return this.uniqueElements;\n    }\n    equivalentTo(other, timeout = 1000) {\n        if (MetaMolecule.isomorphMatch == null)\n            throw 'Isomorph search unavailable.';\n        if (this.mol.numAtoms != other.mol.numAtoms || this.mol.numBonds != other.mol.numBonds)\n            return false;\n        if (this.hash == null)\n            this.calculateSkeletonHash();\n        if (other.hash == null)\n            other.calculateSkeletonHash();\n        if (this.hash != other.hash)\n            return false;\n        if (this.mol.compareTo(other.mol) == 0)\n            return true;\n        let uniq1 = this.getUniqueElements(), uniq2 = other.getUniqueElements();\n        for (let n = 0; n < uniq1.length; n++) {\n            if (!uniq2.includes(uniq1[n]))\n                return false;\n        }\n        return MetaMolecule.isomorphMatch(this, other, timeout);\n    }\n    static createRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    static createStrict(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStrictAromaticity();\n        return meta;\n    }\n    static createStrictRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStrictAromaticity();\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    static createRelaxed(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateRelaxedAromaticity();\n        return meta;\n    }\n    static createRelaxedRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateRelaxedAromaticity();\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    ensurePiAtoms() {\n        if (this.piAtom != null)\n            return;\n        this.piAtom = Vec.booleanArray(false, this.mol.numAtoms);\n        for (let n = 1; n <= this.mol.numBonds; n++)\n            if (this.mol.bondOrder(n) == 2) {\n                {\n                    this.piAtom[this.mol.bondFrom(n) - 1] = true;\n                    this.piAtom[this.mol.bondTo(n) - 1] = true;\n                }\n            }\n    }\n}\nMetaMolecule.skeletonHash = null;\nMetaMolecule.isomorphMatch = null;\n//# sourceMappingURL=MetaMolecule.js.map","import { Chemistry } from '../data/Chemistry';\nimport { MetaMolecule } from '../data/MetaMolecule';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { Permutation, Vec } from '../util/Vec';\nlet crc_table = [];\nfunction make_crc_table() {\n    if (crc_table.length > 0)\n        return;\n    for (let n = 0; n < 256; n++) {\n        let c = n;\n        for (let i = 0; i < 8; i++)\n            if ((c & 1) != 0)\n                c = 0xEDB88320 ^ (c >>> 1);\n            else\n                c = (c >>> 1);\n        crc_table.push(c);\n    }\n}\nconst BOOT_CRC = 0xFFFFFFFF;\nfunction start_crc() { return BOOT_CRC; }\nfunction feed_crc(crc, byte) {\n    let idx = (crc ^ byte) & 0xFF;\n    return crc_table[idx] ^ (crc >>> 8);\n}\nfunction end_crc(crc) { return crc ^ BOOT_CRC; }\nexport class CircularFingerprints {\n    constructor(meta, kind) {\n        this.meta = meta;\n        this.kind = kind;\n        this.hookApplyNewFP = null;\n        this.hookConsiderNewFP = null;\n        this.identity = [];\n        this.resolvedChiral = [];\n        this.atomGroup = [];\n        this.fplist = [];\n        this.amask = [];\n        this.atomAdj = [];\n        this.bondAdj = [];\n        make_crc_table();\n    }\n    calculate() {\n        let mol = this.meta.mol, na = mol.numAtoms;\n        this.identity = Vec.numberArray(0, na);\n        this.resolvedChiral = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++)\n            this.atomGroup.push([]);\n        this.amask = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++) {\n            this.amask[n] = mol.atomicNumber(n + 1) >= 2 && !MolUtil.hasAbbrev(mol, n + 1);\n            this.atomAdj.push([]);\n            this.bondAdj.push([]);\n        }\n        for (let n = 0; n < na; n++) {\n            if (!this.amask[n])\n                continue;\n            this.atomAdj[n] = mol.atomAdjList(n + 1);\n            this.bondAdj[n] = mol.atomAdjBonds(n + 1);\n            for (let i = this.atomAdj[n].length - 1; i >= 0; i--)\n                if (!this.amask[this.atomAdj[n][i] - 1]) {\n                    this.atomAdj[n].splice(i, 1);\n                    this.bondAdj[n].splice(i, 1);\n                }\n        }\n        for (let n = 0; n < na; n++)\n            if (this.amask[n]) {\n                this.identity[n] = this.initialIdentityECFP(n + 1);\n                this.atomGroup[n] = [n + 1];\n                this.applyNewFP({ hashCode: this.identity[n], iteration: 0, atoms: this.atomGroup[n], centralAtom: n + 1 });\n            }\n        let niter = this.kind;\n        for (let iter = 1; iter <= niter; iter++) {\n            let newident = Vec.numberArray(0, na);\n            for (let n = 0; n < na; n++)\n                if (this.amask[n])\n                    newident[n] = this.circularIterate(iter, n + 1);\n            this.identity = newident;\n            for (let n = 0; n < na; n++)\n                if (this.amask[n]) {\n                    this.atomGroup[n] = this.growAtoms(this.atomGroup[n]);\n                    this.considerNewFP({ hashCode: this.identity[n], iteration: iter, atoms: this.atomGroup[n], centralAtom: n + 1 });\n                }\n        }\n    }\n    static create(meta, kind) {\n        if (meta instanceof Molecule)\n            meta = MetaMolecule.createStrictRubric(meta);\n        let circ = new CircularFingerprints(meta, kind);\n        circ.calculate();\n        return circ;\n    }\n    getMolecule() { return this.meta.mol; }\n    get numFP() { return this.fplist.length; }\n    getFP(idx) { return this.fplist[idx]; }\n    getFingerprints() { return this.fplist.slice(0); }\n    getUniqueHashes() {\n        let hashes = new Set();\n        for (let fp of this.fplist)\n            hashes.add(fp.hashCode);\n        return Vec.sorted(Array.from(hashes));\n    }\n    getFoldedHashes(maxBits) {\n        let andBits = maxBits - 1;\n        let hashes = new Set();\n        for (let fp of this.fplist)\n            hashes.add(fp.hashCode & andBits);\n        return Vec.sorted(Array.from(hashes));\n    }\n    static tanimoto(hash1, hash2) {\n        let shared = 0, total = 0;\n        let sz1 = hash1.length, sz2 = hash2.length;\n        if (sz1 == 0 && sz2 == 0)\n            return 0;\n        let i1 = 0, i2 = 0;\n        while (i1 < sz1 || i2 < sz2) {\n            if (i1 == sz1) {\n                total += sz2 - i2;\n                break;\n            }\n            if (i2 == sz2) {\n                total += sz1 - i1;\n                break;\n            }\n            let v1 = hash1[i1], v2 = hash2[i2];\n            if (v1 == v2) {\n                shared += 1;\n                i1 += 1;\n                i2 += 1;\n            }\n            else if (v1 < v2)\n                i1 += 1;\n            else\n                i2 += 1;\n            total += 1;\n        }\n        return shared / total;\n    }\n    initialIdentityECFP(atom) {\n        const mol = this.meta.mol;\n        let adj = mol.atomAdjList(atom);\n        let nheavy = 0, nhydr = mol.atomHydrogens(atom);\n        for (let a of adj)\n            if (mol.atomElement(a) == 'H')\n                nhydr++;\n            else\n                nheavy++;\n        let atno = mol.atomicNumber(atom);\n        let degree = Math.max(0, Chemistry.ELEMENT_BONDING[atno] - nhydr);\n        let chg = mol.atomCharge(atom);\n        let inring = mol.atomRingBlock(atom) > 0 ? 1 : 0;\n        let crc = start_crc();\n        crc = feed_crc(crc, (nheavy << 4) | degree);\n        crc = feed_crc(crc, atno);\n        crc = feed_crc(crc, chg + 0x80);\n        crc = feed_crc(crc, (nhydr << 4) | inring);\n        return end_crc(crc);\n    }\n    circularIterate(iter, atom) {\n        let adj = this.atomAdj[atom - 1], adjb = this.bondAdj[atom - 1];\n        let seq = Vec.numberArray(0, 2 + 2 * adj.length);\n        seq[0] = iter;\n        seq[1] = this.identity[atom - 1];\n        for (let n = 0; n < adj.length; n++) {\n            seq[2 * n + 2] = this.meta.isBondAromatic(adjb[n]) ? 0xF : this.meta.mol.bondOrder(adjb[n]);\n            seq[2 * n + 3] = this.identity[adj[n] - 1];\n        }\n        let p = 0;\n        while (p < adj.length - 1) {\n            let i = 2 + 2 * p;\n            if (seq[i] > seq[i + 2] || (seq[i] == seq[i + 2] && seq[i + 1] > seq[i + 3])) {\n                Vec.swap(seq, i, i + 2);\n                Vec.swap(seq, i + 1, i + 3);\n                if (p > 0)\n                    p--;\n            }\n            else\n                p++;\n        }\n        let crc = start_crc();\n        for (let n = 0; n < seq.length; n += 2) {\n            crc = feed_crc(crc, seq[n]);\n            let v = seq[n + 1];\n            crc = feed_crc(crc, v >> 24);\n            crc = feed_crc(crc, (v >> 16) & 0xFF);\n            crc = feed_crc(crc, (v >> 8) & 0xFF);\n            crc = feed_crc(crc, v & 0xFF);\n        }\n        if (!this.resolvedChiral[atom - 1] && Vec.len(this.meta.rubricTetra) > 0 && this.meta.rubricTetra[atom - 1] != null) {\n            let ru = this.meta.rubricTetra[atom - 1];\n            let par = [\n                ru[0] == 0 ? 0 : this.identity[ru[0] - 1],\n                ru[1] == 0 ? 0 : this.identity[ru[1] - 1],\n                ru[2] == 0 ? 0 : this.identity[ru[2] - 1],\n                ru[3] == 0 ? 0 : this.identity[ru[3] - 1]\n            ];\n            if (par[0] != par[1] && par[0] != par[2] && par[0] != par[3] && par[1] != par[2] && par[1] != par[3] && par[2] != par[3]) {\n                crc = feed_crc(crc, Permutation.parityOrder(par) + 1);\n                this.resolvedChiral[atom - 1] = true;\n            }\n        }\n        return end_crc(crc);\n    }\n    growAtoms(atoms) {\n        let mask = Vec.booleanArray(false, this.meta.mol.numAtoms);\n        for (let n = 0; n < atoms.length; n++) {\n            mask[atoms[n] - 1] = true;\n            for (let a of this.atomAdj[atoms[n] - 1])\n                mask[a - 1] = true;\n        }\n        return Vec.add(Vec.maskIdx(mask), 1);\n    }\n    applyNewFP(newFP) {\n        if (this.hookConsiderNewFP)\n            this.hookConsiderNewFP(newFP);\n        if (this.hookApplyNewFP)\n            this.hookApplyNewFP(newFP);\n        this.fplist.push(newFP);\n    }\n    considerNewFP(newFP) {\n        if (this.hookConsiderNewFP)\n            this.hookConsiderNewFP(newFP);\n        let hit = -1;\n        let fp = null;\n        for (let n = 0; n < this.fplist.length; n++) {\n            let lookFP = this.fplist[n];\n            if (Vec.equals(lookFP.atoms, newFP.atoms)) {\n                fp = lookFP;\n                hit = n;\n                break;\n            }\n        }\n        if (hit < 0) {\n            this.fplist.push(newFP);\n            return;\n        }\n        if (fp.iteration < newFP.iteration || fp.hashCode < newFP.hashCode)\n            return;\n        this.fplist[hit] = newFP;\n        if (this.hookApplyNewFP)\n            this.hookApplyNewFP(newFP);\n    }\n}\nCircularFingerprints.CLASS_ECFP0 = 0;\nCircularFingerprints.CLASS_ECFP2 = 1;\nCircularFingerprints.CLASS_ECFP4 = 2;\nCircularFingerprints.CLASS_ECFP6 = 3;\n//# sourceMappingURL=CircularFingerprints.js.map","import { deepClone, findNode, findNodes, nodeText } from '../util/util';\nimport { XML } from '../util/XML';\nimport { DataSheet } from './DataSheet';\nimport { Molecule } from './Molecule';\nimport { MoleculeStream } from './MoleculeStream';\nexport class DataSheetStream {\n    static readXML(strXML) {\n        let xmlDoc;\n        if (XML.customParser)\n            xmlDoc = new XML.customParser().parseFromString(strXML, 'application/xml');\n        else\n            xmlDoc = new DOMParser().parseFromString(strXML, 'application/xml');\n        if (xmlDoc == null)\n            return null;\n        let root = xmlDoc.documentElement;\n        if (root == null)\n            return null;\n        let ds = new DataSheet();\n        let summary = findNode(root, 'Summary');\n        if (summary == null)\n            return null;\n        ds.title = nodeText(findNode(summary, 'Title'));\n        ds.description = nodeText(findNode(summary, 'Description'));\n        let extRoot = findNode(root, 'Extension');\n        if (extRoot != null) {\n            let extList = findNodes(extRoot, 'Ext');\n            for (let n = 0; n < extList.length; n++) {\n                let ext = extList[n];\n                ds.appendExtension(ext.getAttribute('name'), ext.getAttribute('type'), nodeText(ext));\n            }\n        }\n        let header = findNode(root, 'Header');\n        let numCols = parseInt(header.getAttribute('ncols'));\n        let colList = findNodes(header, 'Column');\n        if (colList.length != numCols)\n            return null;\n        for (let n = 0; n < numCols; n++) {\n            let col = colList[n];\n            let id = parseInt(col.getAttribute('id'));\n            if (id != n + 1)\n                return null;\n            ds.appendColumn(col.getAttribute('name'), col.getAttribute('type'), nodeText(col));\n        }\n        let rowidx = 0;\n        for (let row of findNodes(findNode(root, 'Content'), 'Row')) {\n            if (parseInt(row.getAttribute('id')) != rowidx + 1)\n                return null;\n            ds.appendRow();\n            for (let col of findNodes(row, 'Cell')) {\n                let colidx = parseInt(col.getAttribute('id')) - 1;\n                let ct = ds.colType(colidx), val = nodeText(col);\n                if (val == '') { }\n                else if (ct == \"molecule\")\n                    ds.setObject(rowidx, colidx, val);\n                else if (ct == \"string\")\n                    ds.setString(rowidx, colidx, val);\n                else if (ct == \"real\")\n                    ds.setReal(rowidx, colidx, parseFloat(val));\n                else if (ct == \"integer\")\n                    ds.setInteger(rowidx, colidx, parseInt(val));\n                else if (ct == \"boolean\")\n                    ds.setBoolean(rowidx, colidx, val == 'true' ? true : val == 'false' ? false : null);\n                else if (ct == \"extend\")\n                    ds.setExtend(rowidx, colidx, val);\n                col = col.nextElementSibling;\n                colidx++;\n            }\n            row = row.nextElementSibling;\n            rowidx++;\n        }\n        return ds;\n    }\n    static readJSON(json) {\n        if (!json.colData || !json.rowData)\n            throw 'Not a JSON-formatted datasheet.';\n        return new DataSheet(deepClone(json));\n    }\n    static writeXML(ds) {\n        let xml;\n        if (XML.customParser)\n            xml = new XML.customParser().parseFromString('<DataSheet/>', 'application/xml');\n        else\n            xml = new DOMParser().parseFromString('<DataSheet/>', 'application/xml');\n        let summary = xml.createElement('Summary');\n        xml.documentElement.appendChild(summary);\n        let title = xml.createElement('Title'), descr = xml.createElement('Description');\n        summary.appendChild(title);\n        title.appendChild(xml.createTextNode(ds.title));\n        summary.appendChild(descr);\n        descr.appendChild(xml.createCDATASection(ds.description));\n        let extension = xml.createElement('Extension');\n        xml.documentElement.appendChild(extension);\n        for (let n = 0; n < ds.numExtensions; n++) {\n            let ext = xml.createElement('Ext');\n            extension.appendChild(ext);\n            ext.setAttribute('name', ds.getExtName(n));\n            ext.setAttribute('type', ds.getExtType(n));\n            ext.appendChild(xml.createCDATASection(ds.getExtData(n)));\n        }\n        let header = xml.createElement('Header');\n        xml.documentElement.appendChild(header);\n        header.setAttribute('nrows', ds.numRows.toString());\n        header.setAttribute('ncols', ds.numCols.toString());\n        for (let n = 0; n < ds.numCols; n++) {\n            let column = xml.createElement('Column');\n            header.appendChild(column);\n            column.setAttribute('id', (n + 1).toString());\n            column.setAttribute('name', ds.colName(n));\n            column.setAttribute('type', ds.colType(n));\n            column.appendChild(xml.createTextNode(ds.colDescr(n)));\n        }\n        let content = xml.createElement('Content');\n        xml.documentElement.appendChild(content);\n        for (let r = 0; r < ds.numRows; r++) {\n            let row = xml.createElement('Row');\n            row.setAttribute('id', (r + 1).toString());\n            content.appendChild(row);\n            for (let c = 0; c < ds.numCols; c++) {\n                let cell = xml.createElement('Cell');\n                cell.setAttribute('id', (c + 1).toString());\n                row.appendChild(cell);\n                let ct = ds.colType(c);\n                let txtNode = null;\n                if (ds.isNull(r, c)) { }\n                else if (ct == \"molecule\") {\n                    let obj = ds.getObject(r, c);\n                    if (obj instanceof Molecule)\n                        obj = MoleculeStream.writeNative(obj);\n                    txtNode = xml.createCDATASection(obj);\n                }\n                else if (ct == \"string\")\n                    txtNode = xml.createCDATASection(ds.getString(r, c));\n                else if (ct == \"real\")\n                    txtNode = xml.createTextNode(ds.getReal(r, c).toString());\n                else if (ct == \"integer\")\n                    txtNode = xml.createTextNode(ds.getInteger(r, c).toString());\n                else if (ct == \"boolean\")\n                    txtNode = xml.createTextNode(ds.getBoolean(r, c).toString());\n                else if (ct == \"extend\")\n                    txtNode = xml.createCDATASection(ds.getExtend(r, c));\n                if (txtNode != null)\n                    cell.appendChild(txtNode);\n            }\n        }\n        if (XML.customSerial)\n            return new XML.customSerial().serializeToString(xml.documentElement);\n        else\n            return new XMLSerializer().serializeToString(xml.documentElement);\n    }\n    static writeJSON(ds) {\n        let data = ds.data;\n        let nrow = ds.numRows, ncol = ds.numCols;\n        let rowData = new Array(nrow);\n        for (let n = 0; n < nrow; n++)\n            rowData[n] = new Array(ncol);\n        for (let c = 0; c < ncol; c++) {\n            let doConvert = ds.colType(c) == \"molecule\";\n            for (let r = 0; r < nrow; r++) {\n                let val = data.rowData[r][c];\n                if (val != null && doConvert)\n                    val = val.toString();\n                rowData[r][c] = val;\n            }\n        }\n        let json = {\n            title: data.title,\n            description: data.description,\n            colData: deepClone(data.colData),\n            rowData: rowData,\n            extData: deepClone(data.extData),\n        };\n        return json;\n    }\n}\n//# sourceMappingURL=DataSheetStream.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CircularFingerprints } from '../calc/CircularFingerprints';\nimport { Theme } from '../util/Theme';\nimport { DEGRAD, escapeHTML, norm_xy, readTextURL } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { CoordUtil } from './CoordUtil';\nimport { DataSheetStream } from './DataSheetStream';\nimport { MetaMolecule } from './MetaMolecule';\nimport { MolUtil } from './MolUtil';\nexport const TEMPLATE_FILES = [\n    'rings',\n    'termgrp',\n    'funcgrp',\n    'protgrp',\n    'nonplrings',\n    'largerings',\n    'crownethers',\n    'ligmonodent',\n    'ligbident',\n    'ligtrident',\n    'ligmultident',\n    'cagecmplx',\n    'aminoacids',\n    'biomolecules',\n    'saccharides'\n];\nexport class AbbrevContainer {\n    constructor() {\n        this.abbrevs = [];\n    }\n    static needsSetup() { return !this.main; }\n    static setupData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.main)\n                return;\n            if (!Theme.RESOURCE_URL)\n                throw ('RPC resource URL not defined.');\n            this.main = new AbbrevContainer();\n            for (let tfn of TEMPLATE_FILES) {\n                let url = Theme.RESOURCE_URL + '/data/templates/' + tfn + '.ds';\n                let dsstr = yield readTextURL(url);\n                let ds = DataSheetStream.readXML(dsstr);\n                let colMol = ds.firstColOfType(\"molecule\"), colAbbrev = ds.findColByName('Abbrev', \"string\");\n                if (colMol < 0 || colAbbrev < 0)\n                    continue;\n                for (let n = 0; n < ds.numRows; n++) {\n                    let frag = ds.getMoleculeClone(n, colMol), name = ds.getString(n, colAbbrev);\n                    if (!frag || !name)\n                        continue;\n                    let attcount = 0, firstConn = 0;\n                    for (let i = 1; i <= frag.numAtoms; i++)\n                        if (frag.atomElement(i) == MolUtil.TEMPLATE_ATTACHMENT) {\n                            if (firstConn == 0)\n                                firstConn = i;\n                            frag.setAtomElement(i, MolUtil.ABBREV_ATTACHMENT);\n                            attcount++;\n                        }\n                    if (attcount != 1)\n                        continue;\n                    if (firstConn > 1)\n                        frag.swapAtoms(1, firstConn);\n                    this.main.submitAbbreviation(name, frag);\n                }\n            }\n        });\n    }\n    getAbbrevs() {\n        return this.abbrevs.slice(0);\n    }\n    submitAbbreviation(name, infrag, promote = false) {\n        let frag = infrag.clone();\n        this.submitFragment(name, frag, promote);\n    }\n    submitMolecule(inmol, promote = false) {\n        let mol = inmol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let frag = MolUtil.getAbbrev(mol, n);\n            if (!frag)\n                continue;\n            this.submitFragment(mol.atomElement(n), frag, promote);\n        }\n    }\n    substituteAbbrevName(mol, atom) {\n        let frag = MolUtil.getAbbrev(mol, atom);\n        if (!frag)\n            return false;\n        let fragExp = MolUtil.expandedAbbrevs(frag);\n        let fragMF = MolUtil.molecularFormula(fragExp);\n        let fragFP = CircularFingerprints.create(MetaMolecule.createStrictRubric(fragExp), CircularFingerprints.CLASS_ECFP6).getUniqueHashes();\n        for (let abbrev of this.abbrevs)\n            if (abbrev.frag.numAtoms == frag.numAtoms) {\n                let match = CoordUtil.sketchEquivalent(frag, abbrev.frag);\n                if (!match) {\n                    let afragExp = MolUtil.expandedAbbrevs(abbrev.frag);\n                    if (fragMF == MolUtil.molecularFormula(afragExp)) {\n                        let afragFP = CircularFingerprints.create(MetaMolecule.createStrictRubric(afragExp), CircularFingerprints.CLASS_ECFP6).getUniqueHashes();\n                        if (Vec.equals(fragFP, afragFP))\n                            match = true;\n                    }\n                }\n                if (match) {\n                    mol.setAtomElement(atom, abbrev.name);\n                    return true;\n                }\n            }\n        return false;\n    }\n    submitFragment(name, frag, promote) {\n        if (name == '?')\n            return;\n        let vx = 0, vy = 0;\n        let adj = frag.atomAdjList(1);\n        for (let a of adj) {\n            vx += frag.atomX(a) - frag.atomX(1);\n            vy += frag.atomY(a) - frag.atomY(1);\n        }\n        if (adj.length > 1) {\n            let inv = 1.0 / adj.length;\n            vx *= inv;\n            vy *= inv;\n        }\n        if (norm_xy(vx, vy) > 0.1 * 0.1) {\n            let theta = Math.atan2(vy, vx);\n            if (Math.abs(theta) > 2 * DEGRAD)\n                CoordUtil.rotateMolecule(frag, -theta);\n        }\n        let hit = -1;\n        for (let n = 0; n < this.abbrevs.length; n++) {\n            let a = this.abbrevs[n];\n            if (a.name != name)\n                continue;\n            hit = n;\n            break;\n        }\n        let [html, search] = this.formatAbbrevLabel(name);\n        let abv = { name, frag, nameHTML: html, nameSearch: search };\n        if (hit < 0) {\n            if (promote)\n                this.abbrevs.unshift(abv);\n            else\n                this.abbrevs.push(abv);\n        }\n        else {\n            if (promote && hit > 0) {\n                this.abbrevs.splice(hit, 1);\n                this.abbrevs.unshift(abv);\n            }\n            else\n                this.abbrevs[hit] = abv;\n        }\n    }\n    formatAbbrevLabel(name) {\n        let html = '', search = '';\n        let append = (bit, tag) => {\n            if (tag)\n                html += '<' + tag + '>';\n            html += escapeHTML(bit);\n            search += bit;\n            if (tag)\n                html += '</' + tag + '>';\n        };\n        for (let bit of name.split('|')) {\n            while (true) {\n                let match = bit.match(/^(.*?)\\{(.*?)\\}(.*)$/);\n                if (!match)\n                    break;\n                let pre = match[1], mid = match[2], post = match[3];\n                append(pre, null);\n                if (mid.startsWith('^'))\n                    append(mid.substring(1), 'sup');\n                else\n                    append(mid, 'sub');\n                bit = post;\n            }\n            append(bit, null);\n        }\n        return [html, search.toLowerCase()];\n    }\n}\nAbbrevContainer.main = null;\n//# sourceMappingURL=AbbrevContainer.js.map","import { Graph } from '../data/Graph';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { GeomUtil } from '../util/Geom';\nimport { angleDiffPos, DEGRAD, norm2_xy, norm_xy, signum, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport class MetalLigate {\n    constructor(mol, metalAtom, ligandAttach) {\n        this.metalAtom = metalAtom;\n        this.ligandAttach = ligandAttach;\n        this.ligands = [];\n        this.mol = mol.clone();\n    }\n    generate() {\n        const { mol, metalAtom, ligandAttach, ligands } = this;\n        let g = Graph.fromMolecule(mol);\n        g.isolateNode(metalAtom - 1);\n        for (let cc of g.calculateComponentGroups()) {\n            Vec.addTo(cc, 1);\n            let anything = false;\n            for (let a of ligandAttach)\n                if (cc.indexOf(a) >= 0) {\n                    anything = true;\n                    break;\n                }\n            if (!anything)\n                continue;\n            let lig = { atoms: cc, attach: [] };\n            lig.atoms = cc;\n            let anyAttached = false;\n            for (let a of lig.atoms)\n                if (mol.findBond(a, metalAtom) > 0) {\n                    anyAttached = true;\n                    break;\n                }\n            for (let a of lig.atoms) {\n                let bonded = mol.findBond(a, metalAtom) > 0;\n                if (bonded || (!anyAttached && ligandAttach.includes(a)))\n                    lig.attach.push(a);\n            }\n            ligands.push(lig);\n            for (let a of lig.attach)\n                if (mol.findBond(a, metalAtom) == 0)\n                    this.makeLigandBond(a);\n        }\n        if (ligands.length == 0)\n            throw new Error('No ligand atoms');\n        let otherLigands = mol.atomAdjList(metalAtom);\n        for (let lig of ligands)\n            otherLigands = Vec.exclude(otherLigands, lig.attach);\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let otherTheta = new Array(otherLigands.length);\n        for (let n = 0; n < otherLigands.length; n++)\n            otherTheta[n] = Math.atan2(mol.atomY(otherLigands[n]) - my, mol.atomX(otherLigands[n]) - mx);\n        for (let lig of ligands) {\n            if (lig.attach.length == 1) {\n                let a = lig.attach[0];\n                lig.avgTheta = Math.atan2(mol.atomY(a) - my, mol.atomX(a) - mx);\n                this.orientLigand(lig);\n            }\n            else {\n                let theta = new Array(lig.attach.length);\n                for (let n = 0; n < lig.attach.length; n++) {\n                    let a = lig.attach[n];\n                    theta[n] = Math.atan2(mol.atomY(a) - my, mol.atomX(a) - mx);\n                }\n                theta = GeomUtil.sortAngles(theta);\n                let base = theta[0];\n                for (let n = 0; n < theta.length; n++)\n                    theta[n] = angleDiffPos(theta[n], base);\n                lig.avgTheta = base + Vec.sum(theta) / theta.length;\n                this.orientLigand(lig);\n            }\n        }\n        if (otherLigands.length == 0) {\n            ligands.sort((l1, l2) => signum(l1.avgTheta - l2.avgTheta));\n            this.arrangeLigandsFree(ligands);\n        }\n        else if (otherLigands.length == 1) {\n            ligands.sort((l1, l2) => {\n                let diff1 = angleDiffPos(l1.avgTheta, otherTheta[0]);\n                let diff2 = angleDiffPos(l2.avgTheta, otherTheta[0]);\n                return signum(diff1 - diff2);\n            });\n            this.arrangeLigandsRange(ligands, otherTheta[0], TWOPI, true);\n        }\n        else {\n            let otherOrder = Vec.idxSort(otherTheta);\n            for (let n = 0; n < otherOrder.length; n++) {\n                let nn = (n + 1) % otherOrder.length;\n                let theta = otherTheta[otherOrder[n]];\n                let extent = angleDiffPos(otherTheta[otherOrder[nn]], theta);\n                let batch = [];\n                for (let lig of ligands) {\n                    let diff = angleDiffPos(lig.avgTheta, theta);\n                    if (diff < extent)\n                        batch.push(lig);\n                }\n                if (batch.length == 0)\n                    continue;\n                batch.sort((l1, l2) => {\n                    let diff1 = angleDiffPos(l1.avgTheta, theta);\n                    let diff2 = angleDiffPos(l2.avgTheta, theta);\n                    return signum(diff1 - diff2);\n                });\n                this.arrangeLigandsRange(batch, theta, extent, true);\n            }\n        }\n        this.resolveClashes();\n        return mol;\n    }\n    makeLigandBond(ligAtom) {\n        const { mol, metalAtom } = this;\n        let mchg = mol.atomCharge(metalAtom), lchg = mol.atomCharge(ligAtom);\n        if (mchg > 0 && lchg < 0) {\n            mol.setAtomCharge(metalAtom, mchg - 1);\n            mol.setAtomCharge(ligAtom, lchg + 1);\n            mol.addBond(metalAtom, ligAtom, 1);\n            return;\n        }\n        if (mchg < 0 && lchg > 0) {\n            mol.setAtomCharge(metalAtom, mchg + 1);\n            mol.setAtomCharge(ligAtom, lchg - 1);\n            mol.addBond(metalAtom, ligAtom, 1);\n            return;\n        }\n        let order = 0;\n        if (mol.atomHExplicit(ligAtom) == Molecule.HEXPLICIT_UNKNOWN && mol.atomHydrogens(ligAtom) > 0)\n            order = 1;\n        mol.addBond(metalAtom, ligAtom, order);\n    }\n    orientLigand(lig) {\n        const { mol, metalAtom } = this;\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let lsz = lig.atoms.length, asz = lig.attach.length;\n        let idxAttach = new Array(asz);\n        for (let n = 0; n < asz; n++)\n            idxAttach[n] = lig.atoms.indexOf(lig.attach[n]);\n        let lx = new Array(lsz), ly = new Array(lsz);\n        let ax = MolUtil.arrayAtomX(mol), ay = MolUtil.arrayAtomY(mol);\n        let molExtent = Vec.max(ax) - Vec.min(ax) + Vec.max(ay) - Vec.min(ay);\n        let dx = molExtent * Math.cos(lig.avgTheta), dy = molExtent * Math.sin(lig.avgTheta);\n        for (let n = 0; n < lsz; n++) {\n            lx[n] = mol.atomX(lig.atoms[n]) + dx;\n            ly[n] = mol.atomY(lig.atoms[n]) + dy;\n        }\n        let cx = Vec.sum(lx) / lsz, cy = Vec.sum(ly) / lsz;\n        let weight = [];\n        for (let n = 0; n < lsz; n++) {\n            let closest = Number.POSITIVE_INFINITY;\n            for (let idx of idxAttach)\n                closest = Math.min(closest, norm2_xy(lx[n] - lx[idx], ly[n] - ly[idx]));\n            weight.push(1.0 / (1 + Math.sqrt(closest)));\n        }\n        let bestScore = Number.POSITIVE_INFINITY;\n        let bestLX = null, bestLY = null;\n        for (let theta = 0; theta < 360; theta += 15) {\n            let cosTheta = Math.cos(theta * DEGRAD), sinTheta = Math.sin(theta * DEGRAD);\n            let rx = new Array(lsz), ry = new Array(lsz);\n            let score = 0;\n            for (let n = 0; n < lsz; n++) {\n                let x = lx[n] - cx, y = ly[n] - cy;\n                rx[n] = cx + x * cosTheta - y * sinTheta;\n                ry[n] = cy + x * sinTheta + y * cosTheta;\n                let dist = norm_xy(rx[n] - mx, ry[n] - my);\n                if (lig.attach.indexOf(lig.atoms[n]) >= 0)\n                    score += dist;\n                else\n                    score -= dist * weight[n];\n            }\n            if (score < bestScore) {\n                bestScore = score;\n                bestLX = rx;\n                bestLY = ry;\n            }\n        }\n        lx = bestLX;\n        ly = bestLY;\n        if (asz == 1) {\n            dx = Molecule.IDEALBOND * Math.cos(lig.avgTheta);\n            dy = Molecule.IDEALBOND * Math.sin(lig.avgTheta);\n            Vec.addTo(lx, mx + dx - lx[idxAttach[0]]);\n            Vec.addTo(ly, my + dy - ly[idxAttach[0]]);\n        }\n        else {\n            let attTheta = new Array(asz), attDist = Vec.numberArray(0, asz), attDX = Vec.numberArray(0, asz), attDY = Vec.numberArray(0, asz);\n            for (let n = 0; n < asz; n++) {\n                let ox = lx[idxAttach[n]] - mx, oy = ly[idxAttach[n]] - my;\n                attTheta[n] = Math.atan2(oy, ox);\n                if (asz > 2) {\n                    attDist[n] = norm_xy(ox, oy);\n                    attDX[n] = ox / attDist[n];\n                    attDY[n] = oy / attDist[n];\n                }\n            }\n            Vec.addTo(attDist, -Vec.min(attDist));\n            let orderAttach = GeomUtil.idxSortAngles(attTheta);\n            let srcX = new Array(asz), srcY = new Array(asz);\n            let dstX = new Array(asz), dstY = new Array(asz);\n            let dtheta = 45 * DEGRAD / (asz - 1), theta = lig.avgTheta - 0.5 * dtheta;\n            for (let n = 0; n < asz; n++) {\n                srcX[n] = lx[idxAttach[orderAttach[n]]];\n                srcY[n] = ly[idxAttach[orderAttach[n]]];\n                dstX[n] = mx + Molecule.IDEALBOND * Math.cos(theta) + attDist[n] * attDX[n];\n                dstY[n] = my + Molecule.IDEALBOND * Math.sin(theta) + attDist[n] * attDY[n];\n                theta += dtheta / (asz - 1);\n            }\n            let tfm = GeomUtil.superimpose(srcX, srcY, dstX, dstY);\n            for (let n = 0; n < lsz; n++) {\n                let [x, y] = GeomUtil.applyAffine(lx[n], ly[n], tfm);\n                lx[n] = x;\n                ly[n] = y;\n            }\n        }\n        for (let n = 0; n < lsz; n++)\n            mol.setAtomPos(lig.atoms[n], lx[n], ly[n]);\n    }\n    arrangeLigandsFree(batch) {\n        if (batch.length == 1)\n            return;\n        let refTheta = Vec.last(batch).avgTheta;\n        refTheta += 0.5 * angleDiffPos(Vec.first(batch).avgTheta, refTheta);\n        this.arrangeLigandsRange(batch, refTheta, TWOPI, false);\n    }\n    arrangeLigandsRange(batch, refTheta, refSpan, bounded) {\n        const { mol, metalAtom } = this;\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let bsz = batch.length;\n        let thetaMin = new Array(bsz), thetaSpan = new Array(bsz);\n        let ligandSpan = 0;\n        for (let n = 0; n < bsz; n++) {\n            let [theta1, theta2] = this.determineThetaBounds(batch[n]);\n            thetaMin[n] = theta1;\n            thetaSpan[n] = angleDiffPos(theta2, theta1);\n            ligandSpan += thetaSpan[n];\n        }\n        let residual = (refSpan - ligandSpan) / (bsz + (bounded ? 1 : 0));\n        let theta = refTheta + (bounded ? residual : 0.5 * residual);\n        for (let n = 0; n < bsz; n++) {\n            let rotTheta = theta - thetaMin[n];\n            let cosTheta = Math.cos(rotTheta), sinTheta = Math.sin(rotTheta);\n            for (let a of batch[n].atoms) {\n                let x = mol.atomX(a) - mx, y = mol.atomY(a) - my;\n                mol.setAtomPos(a, mx + x * cosTheta - y * sinTheta, my + x * sinTheta + y * cosTheta);\n            }\n            theta += thetaSpan[n] + residual;\n        }\n    }\n    determineThetaBounds(lig) {\n        const { mol, metalAtom } = this;\n        let theta = [];\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        for (let n = 0; n < lig.attach.length; n++) {\n            let x = mol.atomX(lig.attach[n]) - mx;\n            let y = mol.atomY(lig.attach[n]) - my;\n            theta.push(Math.atan2(y, x));\n        }\n        Vec.sort(theta);\n        let bestScore = Number.POSITIVE_INFINITY, bestMin = 0, bestMax = 0;\n        for (let n = 0; n < theta.length; n++) {\n            let score = 0;\n            for (let i = 0; i < theta.length - 1; i++)\n                score += angleDiffPos(theta[i + 1], theta[i]);\n            if (score < bestScore) {\n                bestScore = score;\n                bestMin = Vec.first(theta);\n                bestMax = Vec.last(theta);\n            }\n            theta.push(theta.shift());\n        }\n        return [bestMin, bestMax];\n    }\n    resolveClashes() {\n        const { mol, metalAtom, ligands } = this;\n        const na = mol.numAtoms, nb = mol.numBonds, lsz = this.ligands.length;\n        let ablk = Vec.numberArray(-1, na), bblk = Vec.numberArray(-1, nb);\n        for (let n = 1; n <= na; n++)\n            if (mol.atomConnComp(n) == mol.atomConnComp(metalAtom))\n                ablk[n - 1] = 0;\n        for (let n = 0; n < lsz; n++)\n            for (let a of ligands[n].atoms)\n                ablk[a - 1] = n + 1;\n        for (let n = 1; n <= nb; n++) {\n            let blk1 = ablk[mol.bondFrom(n) - 1], blk2 = ablk[mol.bondTo(n) - 1];\n            if (blk1 < 0 || blk2 < 0) { }\n            else if (blk1 == blk2)\n                bblk[n - 1] = blk1;\n        }\n        let bumpDX = new Array(lsz), bumpDY = new Array(lsz);\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        for (let n = 0; n < lsz; n++) {\n            let lig = ligands[n];\n            let dx = 0, dy = 0;\n            for (let a of lig.attach) {\n                dx += mol.atomX(a) - mx;\n                dy += mol.atomY(a) - my;\n            }\n            dx /= lig.attach.length;\n            dy /= lig.attach.length;\n            let invDist = 1.0 / norm_xy(dx, dy);\n            bumpDX[n] = dx * 0.5 * invDist;\n            bumpDY[n] = dy * 0.5 * invDist;\n        }\n        const CLOSE_SQ = sqr(0.5);\n        for (let count = 0; count < 12; count++) {\n            let tainted = Vec.booleanArray(false, lsz);\n            outer: for (let i = 0; i < na - 1; i++) {\n                if (ablk[i] < 0)\n                    continue;\n                for (let j = i + 1; j < na; j++)\n                    if (ablk[j] >= 0 && ablk[j] != ablk[i]) {\n                        if (norm2_xy(mol.atomX(i + 1) - mol.atomX(j + 1), mol.atomY(i + 1) - mol.atomY(j + 1)) < CLOSE_SQ) {\n                            if (ablk[i] > 0)\n                                tainted[ablk[i] - 1] = true;\n                            if (ablk[j] > 0)\n                                tainted[ablk[j] - 1] = true;\n                        }\n                        if (Vec.allTrue(tainted))\n                            break outer;\n                    }\n            }\n            if (Vec.anyFalse(tainted))\n                outer: for (let i = 0; i < nb - 1; i++) {\n                    if (bblk[i] < 0)\n                        continue;\n                    let x1 = mol.atomX(mol.bondFrom(i + 1)), y1 = mol.atomY(mol.bondFrom(i + 1));\n                    let x2 = mol.atomX(mol.bondTo(i + 1)), y2 = mol.atomY(mol.bondTo(i + 1));\n                    for (let j = i + 1; j < nb; j++)\n                        if (bblk[j] >= 0 && bblk[j] != bblk[i]) {\n                            let x3 = mol.atomX(mol.bondFrom(j + 1)), y3 = mol.atomY(mol.bondFrom(j + 1));\n                            let x4 = mol.atomX(mol.bondTo(j + 1)), y4 = mol.atomY(mol.bondTo(j + 1));\n                            if (GeomUtil.doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4)) {\n                                if (bblk[i] > 0)\n                                    tainted[bblk[i] - 1] = true;\n                                if (bblk[j] > 0)\n                                    tainted[bblk[j] - 1] = true;\n                            }\n                            if (Vec.allTrue(tainted))\n                                break outer;\n                        }\n                }\n            if (Vec.allFalse(tainted))\n                break;\n            for (let n = 0; n < lsz; n++)\n                if (tainted[n]) {\n                    for (let a of ligands[n].atoms) {\n                        mol.setAtomPos(a, mol.atomX(a) + bumpDX[n], mol.atomY(a) + bumpDY[n]);\n                    }\n                }\n        }\n    }\n}\n//# sourceMappingURL=MetalLigate.js.map","import { BondArtifact } from '../data/BondArtifact';\nimport { CoordUtil } from '../data/CoordUtil';\nimport { Graph } from '../data/Graph';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { PolymerBlock } from '../data/PolymerBlock';\nimport { SketchUtil } from '../data/SketchUtil';\nimport { angleDiff, DEGRAD, norm_xy, RADDEG } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport class FusionPermutation {\n    constructor() {\n        this.attdist = 0;\n        this.guided = false;\n        this.bridged = false;\n        this.scoreModifier = 0;\n        this.chainSelect = 0;\n    }\n}\nexport class TemplateFusion {\n    constructor(mol, templ, abbrev) {\n        this.mol = mol;\n        this.templ = templ;\n        this.abbrev = abbrev;\n        this.perms = [];\n        this.numAttach = 0;\n        this.withGuideOnly = false;\n        this.guidetempl = null;\n        this.guideidx = [];\n        this.guideadj = [];\n        this.timeLimit = 5.0;\n        let artif1 = new BondArtifact(mol), artif2 = new BondArtifact(templ);\n        artif2.harmoniseNumbering(artif1);\n        artif2.rewriteMolecule();\n        let poly1 = new PolymerBlock(mol), poly2 = new PolymerBlock(templ);\n        poly2.harmoniseNumbering(poly1);\n        poly2.rewriteMolecule();\n        this.huntForGuides();\n    }\n    permuteNone() {\n        let numAttach = 0;\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        if (oldmol.numAtoms > 0) {\n            let oldbox = oldmol.boundary(), newbox = newmol.boundary();\n            let dx = oldbox.maxX() + 1 - newbox.minX();\n            let dy = 0.5 * (oldbox.minY() + oldbox.maxY()) - 0.5 * (newbox.minY() + newbox.maxY());\n            CoordUtil.translateMolecule(newmol, dx, dy);\n        }\n        else {\n            let newbox = newmol.boundary();\n            CoordUtil.translateMolecule(newmol, -newbox.midX(), -newbox.midY());\n        }\n        let oldbox = oldmol.boundary(), newbox = newmol.boundary();\n        let cx = newbox.midX(), cy = newbox.midY();\n        let ROTN = [0, 30, 45, 60, 90, 120, 135, 150, 180, 210, 225, 240, 270, 300, 315, 330];\n        duplicate: for (let n = 0; n < ROTN.length; n++) {\n            let rotmol = newmol.clone();\n            CoordUtil.rotateMolecule(rotmol, -ROTN[n] * DEGRAD, cx, cy);\n            for (let i = 0; i < this.perms.length; i++)\n                if (CoordUtil.sketchEquivalent(rotmol, this.perms[i].display))\n                    continue duplicate;\n            let p = new FusionPermutation();\n            p.mol = oldmol.clone();\n            p.mol.append(rotmol);\n            p.display = rotmol;\n            p.srcidx = this.sourceIndex(p.mol, oldmol);\n            p.attdist = 0;\n            p.guided = false;\n            this.perms.push(p);\n        }\n    }\n    permuteAtom(atom) {\n        this.numAttach = 1;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            for (let n = 0; n < this.guideidx.length; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeGuidedOne(newperms, oldmol, this.guidetempl, atom, this.guideidx[n]);\n                this.composeGuidedOne(newperms, oldmol, fliptempl, atom, this.guideidx[n]);\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numAtoms; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeDirectOne(newperms, oldmol, newmol, atom, n);\n                this.composeDirectOne(newperms, oldmol, flipmol, atom, n);\n                this.composeBridge(newperms, oldmol, newmol, atom, n);\n                this.composeBridge(newperms, oldmol, flipmol, atom, n);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    permuteBond(a1, a2) {\n        this.numAttach = 2;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            for (let i = 0; i < this.guideidx.length; i++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                let g1 = this.guideidx[i];\n                let adj = this.guidetempl.atomAdjList(g1);\n                for (let j = 0; j < adj.length; j++) {\n                    let g2 = adj[j];\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a1, a2, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a2, a1, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a1, a2, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a2, a1, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a1, a2, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a2, a1, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a1, a2, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a2, a1, g1, g2, false);\n                }\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numBonds; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                let nfr = newmol.bondFrom(n), nto = newmol.bondTo(n);\n                this.composeDirectTwo(newperms, oldmol, newmol, a1, a2, nfr, nto);\n                this.composeDirectTwo(newperms, oldmol, flipmol, a1, a2, nfr, nto);\n                this.composeDirectTwo(newperms, oldmol, newmol, a1, a2, nto, nfr);\n                this.composeDirectTwo(newperms, oldmol, flipmol, a1, a2, nto, nfr);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    permuteMulti(atoms) {\n        this.numAttach = atoms.length;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            if (this.guideidx.length == atoms.length) {\n                this.composeGuidedMulti(newperms, oldmol, this.guidetempl, atoms, this.guideidx, true);\n                this.composeGuidedMulti(newperms, oldmol, fliptempl, atoms, this.guideidx, true);\n            }\n            if (this.guideadj.length == atoms.length) {\n                this.composeGuidedMulti(newperms, oldmol, this.guidetempl, atoms, this.guideadj, false);\n                this.composeGuidedMulti(newperms, oldmol, fliptempl, atoms, this.guideadj, false);\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numAtoms; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeDirectMulti(newperms, oldmol, newmol, atoms, n);\n                this.composeDirectMulti(newperms, oldmol, flipmol, atoms, n);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    huntForGuides() {\n        this.guideidx = [];\n        this.guideadj = [];\n        for (let n = 1; n <= this.templ.numAtoms; n++)\n            if (this.templ.atomElement(n) == 'X' && this.templ.atomAdjCount(n) > 0) {\n                this.guideidx.push(n);\n                let adj = this.templ.atomAdjList(n);\n                for (let i = 0; i < adj.length; i++)\n                    if (this.guideadj.indexOf(adj[i]) < 0)\n                        this.guideadj.push(adj[i]);\n            }\n        if (this.guideidx.length > 0) {\n            this.guidetempl = this.templ.clone();\n            for (let n = this.guideidx.length - 1; n >= 0; n--)\n                this.templ.deleteAtomAndBonds(this.guideidx[n]);\n        }\n    }\n    composeDirectOne(list, oldmol, newmol, o1, n1) {\n        let otheta = SketchUtil.primeDirections(oldmol, o1);\n        let ntheta = SketchUtil.primeDirections(newmol, n1);\n        let ocurrent = CoordUtil.atomBondAngles(oldmol, o1);\n        let ncurrent = CoordUtil.atomBondAngles(newmol, n1);\n        let theta1 = [], theta2 = [], scoreMod = [];\n        for (let i = 0; i < ocurrent.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                theta1.push(ocurrent[i]);\n                theta2.push(ntheta[j]);\n                scoreMod.push(-51);\n            }\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ncurrent.length; j++) {\n                theta1.push(otheta[i]);\n                theta2.push(ncurrent[j]);\n                scoreMod.push(0);\n            }\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                theta1.push(otheta[i]);\n                theta2.push(ntheta[j]);\n                scoreMod.push(0);\n            }\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1), nx = newmol.atomX(n1), ny = newmol.atomY(n1);\n        for (let n = 0; n < theta1.length; n++) {\n            let dth = angleDiff(theta1[n], theta2[n]);\n            let frag = newmol.clone();\n            CoordUtil.translateMolecule(frag, ox - nx, oy - ny);\n            CoordUtil.rotateMolecule(frag, dth, ox, oy);\n            let pmol = oldmol.clone();\n            let osz = pmol.numAtoms;\n            pmol.append(frag);\n            let srcidx = this.sourceIndex(pmol, oldmol);\n            SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n            if (pmol.numAtoms == osz)\n                continue;\n            let p = new FusionPermutation();\n            p.mol = pmol;\n            p.display = frag;\n            p.srcidx = srcidx;\n            p.molidx = [o1];\n            p.temidx = [n1];\n            p.attdist = bfs[n1 - 1];\n            p.guided = false;\n            p.scoreModifier = scoreMod[n];\n            this.removeExtraGuides(p, oldmol);\n            list.push(p);\n        }\n    }\n    composeDirectTwo(list, oldmol, newmol, o1, o2, n1, n2) {\n        let oth = Math.atan2(oldmol.atomY(o2) - oldmol.atomY(o1), oldmol.atomX(o2) - oldmol.atomX(o1));\n        let nth = Math.atan2(newmol.atomY(n2) - newmol.atomY(n1), newmol.atomX(n2) - newmol.atomX(n1));\n        let cx = 0.5 * (oldmol.atomX(o1) + oldmol.atomX(o2)), cy = 0.5 * (oldmol.atomY(o1) + oldmol.atomY(o2));\n        let frag = newmol.clone();\n        CoordUtil.translateMolecule(frag, cx - 0.5 * (newmol.atomX(n1) + newmol.atomX(n2)), cy - 0.5 * (newmol.atomY(n1) + newmol.atomY(n2)));\n        CoordUtil.rotateMolecule(frag, oth - nth, cx, cy);\n        frag.setAtomPos(n1, oldmol.atomX(o1), oldmol.atomY(o1));\n        frag.setAtomPos(n2, oldmol.atomX(o2), oldmol.atomY(o2));\n        let pmol = oldmol.clone();\n        let osz = pmol.numAtoms;\n        pmol.append(frag);\n        let srcidx = this.sourceIndex(pmol, oldmol);\n        SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n        if (pmol.numAtoms == osz)\n            return;\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        let p = new FusionPermutation();\n        p.mol = pmol;\n        p.display = frag;\n        p.srcidx = srcidx;\n        p.molidx = [o1, o2];\n        p.temidx = [n1, n2];\n        p.attdist = Math.min(bfs[n1 - 1], bfs[n2 - 1]);\n        p.guided = false;\n        this.removeExtraGuides(p, oldmol);\n        list.push(p);\n    }\n    composeDirectMulti(list, oldmol, newmol, oidx, n1) {\n        let frag = newmol.clone();\n        let x0 = oldmol.atomX(oidx[0]), y0 = oldmol.atomY(oidx[0]);\n        CoordUtil.translateMolecule(frag, x0 - frag.atomX(n1), y0 - frag.atomY(n1));\n        let ox = oldmol.atomX(oidx[1]) - x0, oy = oldmol.atomY(oidx[1]) - y0;\n        let otheta = Math.atan2(oy, ox), orad = norm_xy(ox, oy);\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(1);\n        let nidx = [];\n        for (let n2 = 1; n2 <= frag.numAtoms; n2++)\n            if (n1 != n2) {\n                let nx = frag.atomX(n2) - frag.atomX(n1), ny = frag.atomY(n2) - frag.atomY(n1), nrad = norm_xy(nx, ny);\n                if (Math.abs(nrad - orad) > 0.1)\n                    continue;\n                let ntheta = Math.atan2(ny, nx);\n                CoordUtil.rotateMolecule(frag, otheta - ntheta, x0, y0);\n                nidx = [n1, n2];\n                for (let i = 2; i < oidx.length; i++) {\n                    let hit = false;\n                    for (let j = 1; j <= frag.numAtoms; j++)\n                        if (nidx.indexOf(j) < 0)\n                            if (norm_xy(oldmol.atomX(oidx[i]) - frag.atomX(j), oldmol.atomY(oidx[i]) - frag.atomY(j)) < 0.1 * 0.1) {\n                                hit = true;\n                                nidx.push(j);\n                                break;\n                            }\n                    if (!hit)\n                        break;\n                }\n                if (nidx.length < oidx.length)\n                    continue;\n                let lowbfs = bfs.length;\n                for (let n = 0; n < nidx.length; n++)\n                    lowbfs = Math.min(lowbfs, bfs[nidx[n] - 1]);\n                let dx = 0, dy = 0;\n                for (let n = 0; n < oidx.length; n++) {\n                    dx += oldmol.atomX(oidx[n]) - frag.atomX(nidx[n]);\n                    dy += oldmol.atomY(oidx[n]) - frag.atomY(nidx[n]);\n                }\n                let invsz = 1.0 / oidx.length;\n                dx *= invsz;\n                dy *= invsz;\n                CoordUtil.translateMolecule(frag, dx, dy);\n                let pmol = oldmol.clone();\n                let osz = pmol.numAtoms;\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                for (let n = 0; n < nidx.length; n++) {\n                    let x = pmol.atomX(oidx[n]), y = pmol.atomY(oidx[n]);\n                    pmol.setAtomPos(osz + nidx[n], x, y);\n                }\n                SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n                if (pmol.numAtoms == osz)\n                    continue;\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag.clone();\n                p.srcidx = srcidx;\n                p.molidx = oidx.slice(0);\n                p.temidx = nidx.slice(0);\n                p.attdist = Math.min(bfs[n1 - 1], bfs[n2 - 1]);\n                p.guided = false;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    composeBridge(list, oldmol, newmol, o1, n1) {\n        let busy1 = oldmol.atomRingBlock(o1) != 0 || oldmol.atomAdjCount(o1) >= 3;\n        let busy2 = newmol.atomRingBlock(n1) != 0 || newmol.atomAdjCount(n1) >= 3;\n        if (!busy1 || !busy2)\n            return;\n        let otheta = SketchUtil.primeDirections(oldmol, o1);\n        let ntheta = SketchUtil.primeDirections(newmol, n1);\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1), nx = newmol.atomX(n1), ny = newmol.atomY(n1);\n                let dx = Molecule.IDEALBOND * Math.cos(otheta[i]), dy = Molecule.IDEALBOND * Math.sin(otheta[i]);\n                let dth = angleDiff(otheta[i], Math.PI + ntheta[j]);\n                let frag = newmol.clone();\n                CoordUtil.translateMolecule(frag, ox - nx + dx, oy - ny + dy);\n                CoordUtil.rotateMolecule(frag, dth, ox + dx, oy + dy);\n                let pmol = oldmol.clone();\n                let att = pmol.numAtoms + n1, osz = pmol.numAtoms;\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                pmol.addBond(o1, att, 1);\n                att = frag.addAtom('C', ox, oy);\n                frag.addBond(n1, att, 1);\n                SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n                if (pmol.numAtoms == osz)\n                    continue;\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag;\n                p.srcidx = srcidx;\n                p.molidx = [o1];\n                p.temidx = [att];\n                p.attdist = bfs[n1 - 1];\n                p.bridged = true;\n                p.guided = false;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    composeGuidedOne(list, oldmol, newmol, oidx, gidx) {\n        if (newmol.atomAdjCount(gidx) == 0)\n            return;\n        let otheta = SketchUtil.primeDirections(oldmol, oidx);\n        if (newmol.atomAdjCount(gidx) > 1 && oldmol.atomAdjCount(oidx) > 0) {\n            let ox = 0, oy = 0;\n            let adj = oldmol.atomAdjList(oidx);\n            for (let n = 0; n < adj.length; n++) {\n                ox += oldmol.atomX(adj[n]) - oldmol.atomX(oidx);\n                oy += oldmol.atomY(adj[n]) - oldmol.atomY(oidx);\n            }\n            let ang = Math.atan2(oy, ox);\n            let unique = true;\n            for (let n = 0; n < otheta.length; n++)\n                if (Math.abs(angleDiff(ang, otheta[n])) < 3 * RADDEG) {\n                    unique = false;\n                    break;\n                }\n            if (unique)\n                otheta.push(ang);\n        }\n        let gx = newmol.atomX(gidx), gy = newmol.atomY(gidx);\n        let dx = 0, dy = 0;\n        let adj = newmol.atomAdjList(gidx);\n        for (let n = 0; n < adj.length; n++) {\n            dx += newmol.atomX(adj[n]) - gx;\n            dy += newmol.atomY(adj[n]) - gy;\n        }\n        dx /= adj.length;\n        dy /= adj.length;\n        let ntheta = Math.atan2(dy, dx);\n        let homoPenalty = 0;\n        if (adj.length == 1) {\n            let oel = oldmol.atomElement(oidx), nel = newmol.atomElement(adj[0]);\n            if (oel != 'C' && oel == nel)\n                homoPenalty = 1;\n        }\n        for (let n = 0; n < otheta.length; n++) {\n            let frag = newmol.clone();\n            if (this.guideidx.length == 2) {\n                for (let i = 1; i <= frag.numAtoms; i++)\n                    if (i != gidx && frag.atomElement(i) == 'X') {\n                        frag.setAtomElement(i, TemplateFusion.RESERVED_GUIDESYMBOL);\n                        break;\n                    }\n            }\n            CoordUtil.rotateMolecule(frag, otheta[n] - ntheta, gx, gy);\n            CoordUtil.translateMolecule(frag, oldmol.atomX(oidx) - gx, oldmol.atomY(oidx) - gy);\n            let pmol = oldmol.clone();\n            let osz = pmol.numAtoms;\n            pmol.append(frag);\n            let srcidx = this.sourceIndex(pmol, oldmol);\n            SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n            if (pmol.numAtoms == osz)\n                continue;\n            let sel = 0;\n            for (let i = 1; i <= pmol.numAtoms; i++)\n                if (pmol.atomElement(i) == TemplateFusion.RESERVED_GUIDESYMBOL) {\n                    let padj = pmol.atomAdjList(i);\n                    if (padj.length == 1) {\n                        sel = padj[0];\n                        if (sel > i)\n                            sel--;\n                    }\n                    pmol.deleteAtomAndBonds(i);\n                    srcidx.splice(i - 1, 1);\n                    break;\n                }\n            let p = new FusionPermutation();\n            p.mol = pmol;\n            p.display = frag;\n            p.srcidx = srcidx;\n            p.molidx = [oidx];\n            p.temidx = [gidx];\n            p.attdist = 0;\n            p.guided = true;\n            p.scoreModifier = homoPenalty;\n            p.chainSelect = sel;\n            this.removeExtraGuides(p, oldmol);\n            list.push(p);\n        }\n    }\n    composeGuidedTwo(list, oldmol, newmol, o1, o2, gidx, nidx, snapToGuide) {\n        let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1);\n        let gx = newmol.atomX(gidx), gy = newmol.atomY(gidx);\n        let nx = newmol.atomX(nidx), ny = newmol.atomY(nidx);\n        let otheta = Math.atan2(oldmol.atomY(o2) - oy, oldmol.atomX(o2) - ox);\n        let gtheta = Math.atan2(ny - gy, nx - gx);\n        let isGuideOnTerminal = oldmol.atomAdjCount(o1) == 1;\n        let pmol = oldmol.clone(), frag = newmol.clone();\n        CoordUtil.rotateMolecule(frag, otheta - gtheta, gx, gy);\n        if (snapToGuide) {\n            CoordUtil.translateMolecule(frag, ox - gx, oy - gy);\n            pmol.setAtomPos(o2, frag.atomX(nidx), frag.atomY(nidx));\n        }\n        else {\n            CoordUtil.translateMolecule(frag, oldmol.atomX(o2) - frag.atomX(nidx), oldmol.atomY(o2) - frag.atomY(nidx));\n            frag.setAtomPos(gidx, ox, oy);\n        }\n        let osz = pmol.numAtoms;\n        pmol.append(frag);\n        let srcidx = this.sourceIndex(pmol, oldmol);\n        SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n        if (pmol.numAtoms == osz)\n            return;\n        let p = new FusionPermutation();\n        p.mol = pmol;\n        p.display = frag;\n        p.srcidx = srcidx;\n        p.molidx = [o1, o2];\n        p.temidx = [gidx, nidx];\n        p.attdist = isGuideOnTerminal ? 1 : 0;\n        p.guided = true;\n        this.removeExtraGuides(p, oldmol);\n        list.push(p);\n    }\n    composeGuidedMulti(list, oldmol, newmol, oidx, gidx, nudgenew) {\n        let cx1 = 0, cy1 = 0, cx2 = 0, cy2 = 0;\n        for (let n = 0; n < oidx.length; n++) {\n            cx1 += oldmol.atomX(oidx[n]);\n            cy1 += oldmol.atomY(oidx[n]);\n        }\n        for (let n = 0; n < gidx.length; n++) {\n            cx2 += newmol.atomX(gidx[n]);\n            cy2 += newmol.atomY(gidx[n]);\n        }\n        cx1 /= oidx.length;\n        cy1 /= oidx.length;\n        cx2 /= gidx.length;\n        cy2 /= gidx.length;\n        let osz = oldmol.numAtoms;\n        for (let i = 0; i < oidx.length; i++)\n            for (let j = 0; j < gidx.length; j++) {\n                let pmol = oldmol.clone(), frag = newmol.clone();\n                let th1 = Math.atan2(pmol.atomY(oidx[i]) - cy1, pmol.atomX(oidx[i]) - cx1);\n                let th2 = Math.atan2(frag.atomY(gidx[j]) - cy2, frag.atomX(gidx[j]) - cx2);\n                CoordUtil.rotateMolecule(frag, th1 - th2, cx2, cy2);\n                CoordUtil.translateMolecule(frag, cx1 - cx2, cy1 - cy2);\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                let midx = Vec.numberArray(0, gidx.length), tidx = gidx.slice(0);\n                Vec.sort(tidx);\n                let mask = Vec.booleanArray(false, osz);\n                for (let g = tidx.length - 1; g >= 0; g--) {\n                    let gatom = tidx[g] + osz;\n                    let closest = 0, closeDSQ = 0;\n                    for (let n = 0; n < oidx.length; n++)\n                        if (!mask[oidx[n] - 1]) {\n                            let dx = pmol.atomX(oidx[n]) - pmol.atomX(gatom), dy = pmol.atomY(oidx[n]) - pmol.atomY(gatom);\n                            let dsq = norm_xy(dx, dy);\n                            if (closest == 0 || dsq < closeDSQ) {\n                                closest = oidx[n];\n                                closeDSQ = dsq;\n                            }\n                        }\n                    if (!nudgenew) {\n                        let dsq = norm_xy(pmol.atomX(gatom) - pmol.atomX(closest), pmol.atomY(gatom) - pmol.atomY(closest));\n                        if (dsq > 0.1 * 0.1) {\n                            let num = frag.addAtom('C', pmol.atomX(closest), pmol.atomY(closest));\n                            frag.addBond(num, tidx[g], 0);\n                        }\n                        pmol.setAtomPos(closest, pmol.atomX(gatom), pmol.atomY(gatom));\n                    }\n                    midx[g] = closest;\n                    mask[closest - 1] = true;\n                    let adj = pmol.atomAdjList(gatom);\n                    for (let n = 0; n < adj.length; n++) {\n                        let b = pmol.findBond(gatom, adj[n]);\n                        pmol.addBond(closest, adj[n], pmol.bondOrder(b), pmol.bondType(b));\n                    }\n                    pmol.deleteAtomAndBonds(gatom);\n                    srcidx.splice(gatom - 1, 1);\n                    frag.setAtomPos(tidx[g], pmol.atomX(closest), pmol.atomY(closest));\n                }\n                for (let n = pmol.numAtoms; n > osz; n--)\n                    if (pmol.atomElement(n) == 'X') {\n                        pmol.deleteAtomAndBonds(n);\n                        srcidx.splice(n - 1, 1);\n                        for (let k = 0; k < tidx.length; k++)\n                            if (n < tidx[k])\n                                tidx[k]--;\n                    }\n                for (let n = frag.numAtoms; n >= 1; n--)\n                    if (frag.atomElement(n) == 'X') {\n                        frag.setAtomElement(n, 'C');\n                    }\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag;\n                p.srcidx = srcidx;\n                p.molidx = midx;\n                p.temidx = tidx;\n                p.attdist = 0;\n                p.guided = true;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    affixRawPermutations(list) {\n        let npsz = list.length;\n        if (npsz == 0)\n            return;\n        let umask = Vec.booleanArray(true, npsz);\n        for (let i = 0; i < npsz - 1; i++)\n            if (umask[i]) {\n                let p1 = list[i];\n                for (let j = i + 1; j < npsz; j++)\n                    if (umask[j]) {\n                        let p2 = list[j];\n                        if (CoordUtil.sketchEquivalent(p1.mol, p2.mol)) {\n                            if (p1.scoreModifier + p1.attdist > p2.scoreModifier + p2.attdist) {\n                                list[i] = p2;\n                                list[j] = p1;\n                            }\n                            umask[j] = false;\n                        }\n                    }\n            }\n        let score = Vec.numberArray(0, npsz);\n        let numKeep = 0;\n        for (let n = 0; n < npsz; n++) {\n            if (umask[n]) {\n                score[n] = this.scorePermutation(list[n]);\n                if (score[n] < 1000)\n                    numKeep++;\n            }\n            else\n                score[n] = 0;\n        }\n        if (numKeep > 0)\n            for (let n = 0; n < npsz; n++)\n                if (umask[n] && score[n] >= 1000)\n                    umask[n] = false;\n        let uscore = [], uidx = [];\n        for (let n = 0; n < npsz; n++)\n            if (umask[n]) {\n                uscore.push(score[n]);\n                uidx.push(n);\n            }\n        let sidx = Vec.idxSort(uscore);\n        for (let n = 0; n < sidx.length; n++) {\n            let p = list[uidx[sidx[n]]];\n            if (p.guided) {\n                this.perms.push(p);\n            }\n        }\n        for (let n = 0; n < sidx.length; n++) {\n            let p = list[uidx[sidx[n]]];\n            if (!p.guided) {\n                this.perms.push(p);\n            }\n        }\n    }\n    removeExtraGuides(perm, oldmol) {\n        MolUtil.removeDuplicateBonds(perm.mol);\n        for (let n = perm.temidx.length - 1; n >= 0; n--) {\n            let el = perm.display.atomElement(perm.temidx[n]);\n            if (el != 'X' && el != TemplateFusion.RESERVED_GUIDESYMBOL)\n                continue;\n            perm.molidx.splice(n, 1);\n            perm.temidx.splice(n, 1);\n        }\n        for (let n = perm.display.numAtoms; n >= 1; n--) {\n            let el = perm.display.atomElement(n);\n            if (el != 'X' && el != TemplateFusion.RESERVED_GUIDESYMBOL)\n                continue;\n            let a = CoordUtil.atomAtPoint(oldmol, perm.display.atomX(n), perm.display.atomY(n));\n            if (a > 0)\n                perm.display.setAtomElement(n, 'C');\n            else {\n                perm.display.deleteAtomAndBonds(n);\n                for (let i = 0; i < perm.temidx.length; i++)\n                    if (perm.temidx[i] > n)\n                        perm.temidx[i]--;\n            }\n        }\n    }\n    scorePermutation(perm) {\n        let mol = this.mol, tmol = perm.display, tunion = perm.mol;\n        let score = 0.2 * perm.attdist + perm.scoreModifier;\n        score += CoordUtil.congestionMolecule(tunion, 1e-3);\n        score -= tunion.numAtoms;\n        let sz1 = mol.numAtoms, sz2 = tmol.numAtoms;\n        let mx1 = [], my1 = [], mx2 = [], my2 = [];\n        for (let n = 0; n < sz1; n++) {\n            mx1.push(mol.atomX(n + 1));\n            my1.push(mol.atomY(n + 1));\n        }\n        for (let n = 0; n < sz2; n++) {\n            mx2.push(tmol.atomX(n + 1));\n            my2.push(tmol.atomY(n + 1));\n        }\n        for (let i = 0; i < sz1; i++)\n            for (let j = 0; j < sz2; j++) {\n                if (norm_xy(mx1[i] - mx2[j], my1[i] - my2[j]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                    continue;\n                let contained = false;\n                for (let k = 0; k < perm.molidx.length; k++)\n                    if (perm.molidx[k] == i + 1 && perm.temidx[k] == j + 1) {\n                        contained = true;\n                        break;\n                    }\n                if (contained)\n                    continue;\n                score += 100;\n            }\n        if (!perm.guided)\n            for (let n = 0; n < perm.molidx.length; n++) {\n                let el = mol.atomElement(perm.molidx[n]);\n                if (el == 'C' || el == 'O' || el == 'S' || el == 'N' || el == 'P')\n                    continue;\n                let adj1 = mol.atomAdjList(perm.molidx[n]), adj2 = tmol.atomAdjList(perm.temidx[n]);\n                if (adj1.length + adj2.length >= 4)\n                    continue;\n                for (let i = 0; i < adj1.length; i++)\n                    for (let j = 0; j < adj2.length; j++) {\n                        let ai = adj1[i], aj = adj2[j];\n                        let bo1 = mol.bondOrder(mol.findBond(perm.molidx[n], ai));\n                        let bo2 = tmol.bondOrder(tmol.findBond(perm.temidx[n], aj));\n                        let wantTheta = 0;\n                        if ((bo1 == 1 && bo2 == 1) || (bo1 == 1 && bo2 == 2) || (bo1 == 2 && bo2 == 1))\n                            wantTheta = 120;\n                        else if ((bo1 == 2 && bo2 == 2) || (bo1 == 1 && bo2 == 3) || (bo1 == 3 && bo2 == 1))\n                            wantTheta = 180;\n                        else\n                            continue;\n                        let dx1 = mx1[ai - 1] - mx1[perm.molidx[n] - 1];\n                        let dy1 = my1[ai - 1] - my1[perm.molidx[n] - 1];\n                        let dx2 = mx2[aj - 1] - mx2[perm.temidx[n] - 1];\n                        let dy2 = my2[aj - 1] - my2[perm.temidx[n] - 1];\n                        let theta = Math.abs(angleDiff(Math.atan2(dy1, dx1), Math.atan2(dy2, dx2))) * RADDEG;\n                        if (Math.abs(theta - wantTheta) > 5)\n                            score += 50;\n                    }\n            }\n        for (let n = 1; n <= tunion.numAtoms; n++)\n            if (tunion.atomElement(n) == 'C' || tunion.atomElement(n) == 'N') {\n                let adjb = tunion.atomAdjBonds(n);\n                let totalBO = 0;\n                for (let i = 0; i < adjb.length; i++) {\n                    let bo = tunion.bondOrder(adjb[i]);\n                    totalBO += bo;\n                    if (bo == 0) {\n                        totalBO = 0;\n                        break;\n                    }\n                }\n                if (totalBO > 4)\n                    score += 1000;\n            }\n        if (perm.molidx.length >= 2) {\n            let mmask = Vec.booleanArray(false, sz1);\n            for (let n = 0; n < perm.molidx.length; n++)\n                mmask[perm.molidx[n] - 1] = true;\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n                if (!mmask[bfr - 1] || !mmask[bto - 1])\n                    continue;\n                let tfr = perm.molidx.indexOf(bfr), tto = perm.molidx.indexOf(bto);\n                let tn = tmol.findBond(perm.temidx[tfr], perm.temidx[tto]);\n                if (tn == 0)\n                    continue;\n                if (mol.bondOrder(n) != tmol.bondOrder(tn))\n                    score += 1;\n            }\n        }\n        return score;\n    }\n    sourceIndex(xmol, wmol) {\n        let idx = Vec.numberArray(0, xmol.numAtoms);\n        for (let n = wmol.numAtoms; n >= 1; n--)\n            idx[n - 1] = n;\n        return idx;\n    }\n    asMask(imask) {\n        let ret = Vec.booleanArray(false, imask.length);\n        for (let n = 0; n < imask.length; n++)\n            ret[n] = imask[n] != 0;\n        return ret;\n    }\n}\nTemplateFusion.RESERVED_GUIDESYMBOL = 'XXX';\n//# sourceMappingURL=TemplateFusion.js.map","import { AbbrevContainer } from '../data/AbbrevContainer';\nimport { BondArtifact } from '../data/BondArtifact';\nimport { Chemistry } from '../data/Chemistry';\nimport { CoordUtil } from '../data/CoordUtil';\nimport { Graph } from '../data/Graph';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { PolymerBlock } from '../data/PolymerBlock';\nimport { QueryTypeAtom, QueryUtil } from '../data/QueryUtil';\nimport { SketchUtil } from '../data/SketchUtil';\nimport { angleDiff, angleNorm, DEGRAD, norm2_xy, norm_xy, RADDEG, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { MetalLigate } from './MetalLigate';\nimport { TemplateFusion } from './TemplateFusion';\nexport var ActivityType;\n(function (ActivityType) {\n    ActivityType[ActivityType[\"Delete\"] = 1] = \"Delete\";\n    ActivityType[ActivityType[\"Clear\"] = 2] = \"Clear\";\n    ActivityType[ActivityType[\"Copy\"] = 3] = \"Copy\";\n    ActivityType[ActivityType[\"Cut\"] = 4] = \"Cut\";\n    ActivityType[ActivityType[\"SelectAll\"] = 5] = \"SelectAll\";\n    ActivityType[ActivityType[\"SelectNone\"] = 6] = \"SelectNone\";\n    ActivityType[ActivityType[\"SelectPrevComp\"] = 7] = \"SelectPrevComp\";\n    ActivityType[ActivityType[\"SelectNextComp\"] = 8] = \"SelectNextComp\";\n    ActivityType[ActivityType[\"SelectSide\"] = 9] = \"SelectSide\";\n    ActivityType[ActivityType[\"SelectGrow\"] = 10] = \"SelectGrow\";\n    ActivityType[ActivityType[\"SelectShrink\"] = 11] = \"SelectShrink\";\n    ActivityType[ActivityType[\"SelectChain\"] = 12] = \"SelectChain\";\n    ActivityType[ActivityType[\"SelectSmRing\"] = 13] = \"SelectSmRing\";\n    ActivityType[ActivityType[\"SelectRingBlk\"] = 14] = \"SelectRingBlk\";\n    ActivityType[ActivityType[\"SelectCurElement\"] = 15] = \"SelectCurElement\";\n    ActivityType[ActivityType[\"SelectToggle\"] = 16] = \"SelectToggle\";\n    ActivityType[ActivityType[\"SelectUnCurrent\"] = 17] = \"SelectUnCurrent\";\n    ActivityType[ActivityType[\"Element\"] = 18] = \"Element\";\n    ActivityType[ActivityType[\"AtomPos\"] = 19] = \"AtomPos\";\n    ActivityType[ActivityType[\"Charge\"] = 20] = \"Charge\";\n    ActivityType[ActivityType[\"Connect\"] = 21] = \"Connect\";\n    ActivityType[ActivityType[\"Disconnect\"] = 22] = \"Disconnect\";\n    ActivityType[ActivityType[\"MetalLigate\"] = 23] = \"MetalLigate\";\n    ActivityType[ActivityType[\"BondOrder\"] = 24] = \"BondOrder\";\n    ActivityType[ActivityType[\"BondType\"] = 25] = \"BondType\";\n    ActivityType[ActivityType[\"BondGeom\"] = 26] = \"BondGeom\";\n    ActivityType[ActivityType[\"BondAtom\"] = 27] = \"BondAtom\";\n    ActivityType[ActivityType[\"BondSwitch\"] = 28] = \"BondSwitch\";\n    ActivityType[ActivityType[\"BondRotate\"] = 29] = \"BondRotate\";\n    ActivityType[ActivityType[\"BondAddTwo\"] = 30] = \"BondAddTwo\";\n    ActivityType[ActivityType[\"BondInsert\"] = 31] = \"BondInsert\";\n    ActivityType[ActivityType[\"Join\"] = 32] = \"Join\";\n    ActivityType[ActivityType[\"Nudge\"] = 33] = \"Nudge\";\n    ActivityType[ActivityType[\"NudgeLots\"] = 34] = \"NudgeLots\";\n    ActivityType[ActivityType[\"NudgeFar\"] = 35] = \"NudgeFar\";\n    ActivityType[ActivityType[\"Flip\"] = 36] = \"Flip\";\n    ActivityType[ActivityType[\"Scale\"] = 37] = \"Scale\";\n    ActivityType[ActivityType[\"Rotate\"] = 38] = \"Rotate\";\n    ActivityType[ActivityType[\"BondDist\"] = 39] = \"BondDist\";\n    ActivityType[ActivityType[\"AlignAngle\"] = 40] = \"AlignAngle\";\n    ActivityType[ActivityType[\"AlignRegular\"] = 41] = \"AlignRegular\";\n    ActivityType[ActivityType[\"AdjustTorsion\"] = 42] = \"AdjustTorsion\";\n    ActivityType[ActivityType[\"Move\"] = 43] = \"Move\";\n    ActivityType[ActivityType[\"Ring\"] = 44] = \"Ring\";\n    ActivityType[ActivityType[\"TemplateFusion\"] = 45] = \"TemplateFusion\";\n    ActivityType[ActivityType[\"AbbrevTempl\"] = 46] = \"AbbrevTempl\";\n    ActivityType[ActivityType[\"AbbrevGroup\"] = 47] = \"AbbrevGroup\";\n    ActivityType[ActivityType[\"AbbrevFormula\"] = 48] = \"AbbrevFormula\";\n    ActivityType[ActivityType[\"AbbrevClear\"] = 49] = \"AbbrevClear\";\n    ActivityType[ActivityType[\"AbbrevExpand\"] = 50] = \"AbbrevExpand\";\n    ActivityType[ActivityType[\"BondArtifactPath\"] = 51] = \"BondArtifactPath\";\n    ActivityType[ActivityType[\"BondArtifactRing\"] = 52] = \"BondArtifactRing\";\n    ActivityType[ActivityType[\"BondArtifactArene\"] = 53] = \"BondArtifactArene\";\n    ActivityType[ActivityType[\"BondArtifactClear\"] = 54] = \"BondArtifactClear\";\n    ActivityType[ActivityType[\"PolymerBlock\"] = 55] = \"PolymerBlock\";\n    ActivityType[ActivityType[\"AddHydrogens\"] = 56] = \"AddHydrogens\";\n    ActivityType[ActivityType[\"RemoveHydrogens\"] = 57] = \"RemoveHydrogens\";\n    ActivityType[ActivityType[\"QueryClear\"] = 58] = \"QueryClear\";\n    ActivityType[ActivityType[\"QueryCopy\"] = 59] = \"QueryCopy\";\n    ActivityType[ActivityType[\"QueryPaste\"] = 60] = \"QueryPaste\";\n    ActivityType[ActivityType[\"QuerySetAtom\"] = 61] = \"QuerySetAtom\";\n    ActivityType[ActivityType[\"QuerySetBond\"] = 62] = \"QuerySetBond\";\n    ActivityType[ActivityType[\"QueryBondAny\"] = 63] = \"QueryBondAny\";\n    ActivityType[ActivityType[\"SproutDirection\"] = 64] = \"SproutDirection\";\n})(ActivityType || (ActivityType = {}));\nexport class MoleculeActivity {\n    constructor(input, activity, param, owner) {\n        this.input = input;\n        this.activity = activity;\n        this.param = param;\n        this.owner = owner;\n        this.toClipboard = null;\n        this.output =\n            {\n                mol: null,\n                currentAtom: -1,\n                currentBond: -1,\n                selectedMask: null\n            };\n        let na = this.input.mol.numAtoms;\n        if (this.input.selectedMask == null)\n            this.input.selectedMask = Vec.booleanArray(false, na);\n        while (this.input.selectedMask.length < na)\n            this.input.selectedMask.push(false);\n        this.subjectMask = this.input.selectedMask.slice(0);\n        this.subjectLength = Vec.maskCount(this.subjectMask);\n        this.subjectIndex = [];\n        this.hasSelected = this.subjectLength > 0;\n        if (this.subjectLength == 0) {\n            if (this.input.currentAtom > 0) {\n                this.subjectLength = 1;\n                this.subjectMask[this.input.currentAtom - 1] = true;\n                this.subjectIndex = [this.input.currentAtom];\n            }\n            else if (this.input.currentBond > 0) {\n                let bfr = this.input.mol.bondFrom(this.input.currentBond), bto = this.input.mol.bondTo(this.input.currentBond);\n                let b1 = Math.min(bfr, bto), b2 = Math.max(bfr, bto);\n                this.subjectLength = 2;\n                this.subjectMask[b1 - 1] = true;\n                this.subjectMask[b2 - 1] = true;\n                this.subjectIndex = [b1, b2];\n            }\n        }\n        else {\n            this.subjectIndex = Vec.maskIdx(this.subjectMask);\n            Vec.addTo(this.subjectIndex, 1);\n        }\n    }\n    setOwner(owner) {\n        this.owner = owner;\n    }\n    evaluate() {\n        return true;\n    }\n    execute() {\n        let param = this.param;\n        if (this.activity == ActivityType.Delete)\n            this.execDelete();\n        else if (this.activity == ActivityType.Clear)\n            this.execClear();\n        else if (this.activity == ActivityType.Copy)\n            this.execCopy(false);\n        else if (this.activity == ActivityType.Cut)\n            this.execCopy(true);\n        else if (this.activity == ActivityType.SelectAll)\n            this.execSelectAll(true);\n        else if (this.activity == ActivityType.SelectNone)\n            this.execSelectAll(false);\n        else if (this.activity == ActivityType.SelectPrevComp)\n            this.execSelectComp(-1);\n        else if (this.activity == ActivityType.SelectNextComp)\n            this.execSelectComp(1);\n        else if (this.activity == ActivityType.SelectSide)\n            this.execSelectSide();\n        else if (this.activity == ActivityType.SelectGrow)\n            this.execSelectGrow();\n        else if (this.activity == ActivityType.SelectShrink)\n            this.execSelectShrink();\n        else if (this.activity == ActivityType.SelectChain)\n            this.execSelectChain();\n        else if (this.activity == ActivityType.SelectSmRing)\n            this.execSelectSmRing();\n        else if (this.activity == ActivityType.SelectRingBlk)\n            this.execSelectRingBlk();\n        else if (this.activity == ActivityType.SelectCurElement)\n            this.execSelectCurElement();\n        else if (this.activity == ActivityType.SelectToggle)\n            this.execSelectToggle();\n        else if (this.activity == ActivityType.SelectUnCurrent)\n            this.execSelectUnCurrent();\n        else if (this.activity == ActivityType.Element)\n            this.execElement(param.element, param.positionX, param.positionY, param.keepAbbrev);\n        else if (this.activity == ActivityType.Charge)\n            this.execCharge(param.delta);\n        else if (this.activity == ActivityType.Connect)\n            this.execConnect(1, Molecule.BONDTYPE_NORMAL);\n        else if (this.activity == ActivityType.Disconnect)\n            this.execDisconnect();\n        else if (this.activity == ActivityType.MetalLigate)\n            this.execMetalLigate();\n        else if (this.activity == ActivityType.BondOrder)\n            this.execBond(param.order, Molecule.BONDTYPE_NORMAL);\n        else if (this.activity == ActivityType.BondType)\n            this.execBond(1, param.type);\n        else if (this.activity == ActivityType.BondGeom)\n            this.execBondGeom(param.geom);\n        else if (this.activity == ActivityType.BondAtom)\n            this.execBondAtom(param.order, param.type, param.element, param.x1, param.y1, param.x2, param.y2);\n        else if (this.activity == ActivityType.BondSwitch)\n            this.execBondSwitch();\n        else if (this.activity == ActivityType.BondRotate)\n            this.execBondRotate();\n        else if (this.activity == ActivityType.BondAddTwo)\n            this.execBondAddTwo();\n        else if (this.activity == ActivityType.BondInsert)\n            this.execBondInsert();\n        else if (this.activity == ActivityType.Join)\n            this.execJoin();\n        else if (this.activity == ActivityType.Nudge)\n            this.execNudge(param.dir, 0.1);\n        else if (this.activity == ActivityType.NudgeLots)\n            this.execNudge(param.dir, 1);\n        else if (this.activity == ActivityType.NudgeFar)\n            this.execNudgeFar(param.dir);\n        else if (this.activity == ActivityType.Flip)\n            this.execFlip(param.axis);\n        else if (this.activity == ActivityType.Scale)\n            this.execScale(param.mag);\n        else if (this.activity == ActivityType.Rotate)\n            this.execRotate(param.theta, param.centreX, param.centreY);\n        else if (this.activity == ActivityType.BondDist)\n            this.execBondDist(param.dist);\n        else if (this.activity == ActivityType.AlignAngle)\n            this.execAlignAngle(param.angle);\n        else if (this.activity == ActivityType.AlignRegular)\n            this.execAlignRegular();\n        else if (this.activity == ActivityType.AdjustTorsion)\n            this.execAdjustTorsion(param.angle);\n        else if (this.activity == ActivityType.Move)\n            this.execMove(param.refAtom, param.deltaX, param.deltaY);\n        else if (this.activity == ActivityType.Ring)\n            this.execRing(param.ringX, param.ringY, param.aromatic);\n        else if (this.activity == ActivityType.TemplateFusion) {\n            this.execTemplateFusion(Molecule.fromString(param.fragNative));\n            if (this.owner)\n                this.owner.setPermutations(this.output.permutations);\n            return;\n        }\n        else if (this.activity == ActivityType.AbbrevTempl)\n            this.execAbbrevTempl();\n        else if (this.activity == ActivityType.AbbrevGroup)\n            this.execAbbrevGroup();\n        else if (this.activity == ActivityType.AbbrevFormula)\n            this.execAbbrevFormula();\n        else if (this.activity == ActivityType.AbbrevClear)\n            this.execAbbrevClear();\n        else if (this.activity == ActivityType.AbbrevExpand)\n            this.execAbbrevExpand();\n        else if (this.activity == ActivityType.BondArtifactPath || this.activity == ActivityType.BondArtifactRing ||\n            this.activity == ActivityType.BondArtifactArene || this.activity == ActivityType.BondArtifactClear)\n            this.execBondArtifact(this.activity);\n        else if (this.activity == ActivityType.PolymerBlock)\n            this.execPolymerBlock();\n        else if (this.activity == ActivityType.AddHydrogens)\n            this.execAddHydrogens();\n        else if (this.activity == ActivityType.RemoveHydrogens)\n            this.execRemoveHydrogens();\n        else if (this.activity == ActivityType.QueryClear)\n            this.execQueryClear();\n        else if (this.activity == ActivityType.QueryCopy)\n            this.execQueryCopy();\n        else if (this.activity == ActivityType.QueryPaste)\n            this.execQueryPaste();\n        else if (this.activity == ActivityType.QuerySetAtom)\n            this.execQuerySetAtom();\n        else if (this.activity == ActivityType.QuerySetBond)\n            this.execQuerySetBond();\n        else if (this.activity == ActivityType.QueryBondAny)\n            this.execQueryBondAny();\n        else if (this.activity == ActivityType.SproutDirection)\n            this.execSproutDirection(param.deltaX, param.deltaY);\n        this.finish();\n    }\n    finish() {\n        if (!this.owner)\n            return;\n        if (this.output.mol != null || this.output.currentAtom >= 0 || this.output.currentBond >= 0 || this.output.selectedMask != null) {\n            this.owner.setState(this.output, true);\n            if (this.errmsg != null)\n                this.owner.showMessage(this.errmsg, false);\n        }\n        else {\n            if (this.errmsg != null)\n                this.owner.showMessage(this.errmsg, true);\n        }\n    }\n    execDelete() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.mol = mol.clone();\n        this.zapSubject();\n        if (this.input.currentBond > 0 && !this.hasSelected) {\n            this.output.mol.deleteBond(this.input.currentBond);\n            this.output.currentBond = 0;\n            return;\n        }\n        if (this.subjectLength == 1 && this.subjectIndex[0] == this.input.currentAtom) {\n            let adj = mol.atomAdjList(this.input.currentAtom);\n            if (adj.length == 1) {\n                this.output.currentAtom = adj[0];\n                if (this.output.currentAtom > this.input.currentAtom)\n                    this.output.currentAtom--;\n            }\n        }\n        for (let n = this.subjectLength - 1; n >= 0; n--)\n            this.output.mol.deleteAtomAndBonds(this.subjectIndex[n]);\n    }\n    execCopy(withCut) {\n        let mol = this.input.mol;\n        if (this.subjectLength > 0)\n            mol = MolUtil.subgraphWithAttachments(mol, this.subjectMask);\n        if (this.owner)\n            this.owner.performCopy(mol);\n        else\n            this.toClipboard = mol.toString();\n        if (withCut) {\n            this.zapSubject();\n            this.output.mol = MolUtil.subgraphMask(this.input.mol, Vec.notMask(this.subjectMask));\n        }\n    }\n    execClear() {\n        this.output.mol = new Molecule();\n        this.zapSubject();\n    }\n    execSelectAll(all) {\n        let same = true;\n        for (let n = 0; n < this.input.mol.numAtoms; n++)\n            if (this.subjectMask[n] != all) {\n                same = false;\n                break;\n            }\n        if (same) {\n            this.errmsg = all ? 'All atoms already selected.' : 'All atoms already deselected.';\n            return;\n        }\n        this.output.selectedMask = Vec.booleanArray(all, this.input.mol.numAtoms);\n    }\n    execSelectComp(dir) {\n        let cclist = MolUtil.componentList(this.input.mol);\n        if (cclist.length == 1 && this.hasSelected && this.subjectLength == this.input.mol.numAtoms) {\n            this.errmsg = 'All atoms already selected.';\n            return;\n        }\n        let sel = this.pickSelectedGroup(cclist, dir);\n        this.output.selectedMask = Vec.booleanArray(false, this.input.mol.numAtoms);\n        for (let n = 0; n < cclist[sel].length; n++)\n            this.output.selectedMask[cclist[sel][n] - 1] = true;\n    }\n    execSelectSide() {\n        if (!this.requireCurrent())\n            return;\n        let mol = this.input.mol, currentAtom = this.input.currentAtom, currentBond = this.input.currentBond;\n        if (currentAtom > 0 && mol.atomAdjCount(currentAtom) == 0) {\n            this.errmsg = 'Current atom has no neighbours.';\n            return;\n        }\n        if (currentBond > 0 && mol.atomAdjCount(mol.bondFrom(currentBond)) == 1 && mol.atomAdjCount(mol.bondTo(currentBond)) == 1) {\n            this.errmsg = 'Current bond has no neighbours.';\n            return;\n        }\n        let sides = currentAtom > 0 ? MolUtil.getAtomSides(mol, currentAtom) : MolUtil.getBondSides(mol, currentBond);\n        let sel = this.pickSelectedGroup(sides, 1);\n        this.output.selectedMask = Vec.booleanArray(false, mol.numAtoms);\n        for (let n = 0; n < sides[sel].length; n++)\n            this.output.selectedMask[sides[sel][n] - 1] = true;\n    }\n    execSelectGrow() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol, currentAtom = this.input.currentAtom, currentBond = this.input.currentBond;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (!this.hasSelected) {\n            if (currentAtom > 0) {\n                this.output.selectedMask[currentAtom - 1] = true;\n            }\n            else {\n                this.output.selectedMask[mol.bondFrom(currentBond) - 1] = true;\n                this.output.selectedMask[mol.bondTo(currentBond) - 1] = true;\n            }\n        }\n        else {\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n                if (this.input.selectedMask[bfr] && !this.input.selectedMask[bto])\n                    this.output.selectedMask[bto] = true;\n                else if (this.input.selectedMask && !this.input.selectedMask[bfr])\n                    this.output.selectedMask[bfr] = true;\n            }\n        }\n    }\n    execSelectShrink() {\n        if (!this.requireSelected())\n            return;\n        let mol = this.input.mol;\n        let count = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (!this.input.selectedMask[bfr] || !this.input.selectedMask[bto])\n                continue;\n            count[bfr]++;\n            count[bto]++;\n        }\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let n = 0; n < mol.numAtoms; n++)\n            this.output.selectedMask[n] = this.input.selectedMask[n] && count[n] >= 2;\n    }\n    execSelectChain() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (this.input.selectedMask[bfr] && !this.input.selectedMask[bto] && mol.atomRingBlock(bto + 1) == 0)\n                this.output.selectedMask[bto] = true;\n            else if (this.input.selectedMask[bto] && !this.input.selectedMask[bfr] && mol.atomRingBlock(bfr + 1) == 0)\n                this.output.selectedMask[bfr] = true;\n        }\n    }\n    execSelectSmRing() {\n        if (!this.requireSubject())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let r = 3; r <= 8; r++) {\n            let rings = this.input.mol.findRingsOfSize(r);\n            for (let i = 0; i < rings.length; i++) {\n                let any = false;\n                for (let j = 0; j < rings[i].length; j++)\n                    if (this.subjectMask[rings[i][j] - 1]) {\n                        any = true;\n                        break;\n                    }\n                if (any)\n                    for (let j = 0; j < rings[i].length; j++)\n                        this.output.selectedMask[rings[i][j] - 1] = true;\n            }\n        }\n    }\n    execSelectRingBlk() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        let maxRB = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            maxRB = Math.max(maxRB, mol.atomRingBlock(n));\n        if (maxRB == 0)\n            return;\n        let gotRB = Vec.booleanArray(false, maxRB);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let rb = mol.atomRingBlock(n);\n            if (rb > 0 && this.subjectMask[n - 1])\n                gotRB[rb - 1] = true;\n        }\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let rb = mol.atomRingBlock(n);\n            if (rb > 0 && gotRB[rb - 1])\n                this.output.selectedMask[n - 1] = true;\n        }\n    }\n    execSelectCurElement() {\n        if (!this.requireCurrent())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        let el1 = '', el2 = '';\n        if (this.input.currentAtom > 0) {\n            el1 = mol.atomElement(this.input.currentAtom);\n        }\n        else {\n            el1 = mol.atomElement(mol.bondFrom(this.input.currentBond));\n            el2 = mol.atomElement(mol.bondTo(this.input.currentBond));\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomElement(n) == el1 || mol.atomElement(n) == el2)\n                this.output.selectedMask[n - 1] = true;\n    }\n    execSelectToggle() {\n        if (!this.requireCurrent())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (this.input.currentAtom > 0) {\n            this.output.selectedMask[this.input.currentAtom - 1] = !this.output.selectedMask[this.input.currentAtom - 1];\n        }\n        else {\n            let bfr = this.input.mol.bondFrom(this.input.currentBond), bto = this.input.mol.bondTo(this.input.currentBond);\n            let sel = !this.input.selectedMask[bfr - 1] || !this.input.selectedMask[bto - 1];\n            this.output.selectedMask[bfr - 1] = sel;\n            this.output.selectedMask[bto - 1] = sel;\n        }\n    }\n    execSelectUnCurrent() {\n        if (!this.requireCurrent())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (this.input.currentAtom > 0) {\n            this.output.selectedMask[this.input.currentAtom - 1] = false;\n        }\n        else {\n            this.output.selectedMask[this.input.mol.bondFrom(this.input.currentBond) - 1] = false;\n            this.output.selectedMask[this.input.mol.bondTo(this.input.currentBond) - 1] = false;\n        }\n    }\n    execElement(element, positionX, positionY, keepAbbrev) {\n        const QUERY_ELEMENTS = ['A', 'X', 'Y', 'Z', 'Q', 'M', 'T', 'E', 'R'];\n        if (this.subjectLength > 0 && !QUERY_ELEMENTS.includes(element)) {\n            let anyChange = false;\n            for (let n = 0; n < this.subjectLength; n++)\n                if (this.input.mol.atomElement(this.subjectIndex[n]) != element) {\n                    anyChange = true;\n                    break;\n                }\n            if (!anyChange) {\n                this.errmsg = 'Elements not changed.';\n                return;\n            }\n        }\n        let mol = this.output.mol = this.input.mol.clone();\n        let applyQuery = (atom) => {\n            if (element == 'A') {\n                QueryUtil.setQueryAtomElementsNot(mol, atom, ['H']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'X') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['F', 'Cl', 'Br', 'I']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Y') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['O', 'S', 'Se', 'Te']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Z') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['F', 'Cl', 'Br', 'O', 'S']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Q') {\n                QueryUtil.setQueryAtomElementsNot(mol, atom, ['H', 'C']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'M') {\n                const NON_METALS = ['H', 'B', 'C', 'N', 'O', 'F', 'Si', 'P', 'S', 'Cl', 'As', 'Se', 'Br', 'Te', 'I'];\n                QueryUtil.setQueryAtomElementsNot(mol, atom, NON_METALS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'T') {\n                const TRANSITION_METALS = [\n                    'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n                    'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd',\n                    'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg',\n                    'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb', 'Lu',\n                    'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No', 'Lr'\n                ];\n                QueryUtil.setQueryAtomElements(mol, atom, TRANSITION_METALS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'E') {\n                const MAIN_GROUPS = [\n                    'B', 'N', 'O', 'F',\n                    'Al', 'Si', 'P', 'S', 'Cl',\n                    'Zn', 'Ga', 'Se', 'As', 'Se', 'Br',\n                    'Cd', 'In', 'Sn', 'Sb', 'Te', 'I',\n                    'Hg', 'Tl', 'Pb', 'Bi', 'Pb', 'At'\n                ];\n                QueryUtil.setQueryAtomElements(mol, atom, MAIN_GROUPS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'R') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['C', 'N', 'O', 'S', 'P', 'H']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n        };\n        if (mol.numAtoms == 0) {\n            mol.addAtom(element, 0, 0);\n            applyQuery(mol.numAtoms);\n        }\n        else if (this.subjectLength == 0) {\n            if (positionX != null && positionY != null)\n                mol.addAtom(element, positionX, positionY);\n            else\n                SketchUtil.placeNewAtom(mol, element);\n            applyQuery(mol.numAtoms);\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                if (keepAbbrev)\n                    mol.setAtomElement(this.subjectIndex[n], element);\n                else\n                    MolUtil.setAtomElement(mol, this.subjectIndex[n], element);\n                applyQuery(this.subjectIndex[n]);\n            }\n        }\n    }\n    execCharge(delta) {\n        if (!this.requireSubject())\n            return;\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let chg = Math.max(-20, Math.min(20, this.input.mol.atomCharge(this.subjectIndex[n]) + delta));\n            this.output.mol.setAtomCharge(this.subjectIndex[n], chg);\n        }\n    }\n    execConnect(order, type) {\n        if (!this.requireSubject())\n            return;\n        let conn = SketchUtil.pickAtomsToConnect(this.input.mol, this.subjectIndex);\n        if (conn == null) {\n            this.errmsg = 'Subject atoms contain no bonds suitable for connection.';\n            return;\n        }\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < conn.length; n += 2)\n            MolUtil.addBond(this.output.mol, conn[n], conn[n + 1], order, type);\n    }\n    execDisconnect() {\n        let zap = [];\n        let mol = this.input.mol;\n        if (this.hasSelected) {\n            for (let n = 1; n <= mol.numBonds; n++)\n                if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                    zap.push(n);\n        }\n        else if (this.input.currentAtom > 0) {\n            for (let a of mol.atomAdjBonds(this.input.currentAtom))\n                zap.push(a);\n        }\n        else if (this.input.currentBond > 0) {\n            zap.push(this.input.currentBond);\n        }\n        if (zap.length == 0) {\n            this.errmsg = 'Subject atoms contain no bonds suitable for disconnection.';\n            return;\n        }\n        let killmask = Vec.booleanArray(false, mol.numBonds);\n        for (let b of zap)\n            killmask[b - 1] = true;\n        this.output.mol = this.input.mol.clone();\n        for (let n = mol.numBonds; n >= 1; n--)\n            if (killmask[n - 1])\n                this.output.mol.deleteBond(n);\n    }\n    execMetalLigate() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        let ligAtoms = this.subjectIndex.slice(0);\n        let metalAtom = this.input.currentAtom;\n        if (metalAtom == 0) {\n            for (let a of this.subjectIndex) {\n                let atno = mol.atomicNumber(a);\n                if (Chemistry.ELEMENT_BLOCKS[atno] >= 3) {\n                    metalAtom = a;\n                    break;\n                }\n            }\n        }\n        if (metalAtom == 0) {\n            for (let a of this.subjectIndex) {\n                let atno = mol.atomicNumber(a);\n                if (Chemistry.ELEMENT_ROWS[atno] >= 3) {\n                    metalAtom = a;\n                    break;\n                }\n            }\n        }\n        if (metalAtom == 0) {\n            this.errmsg = 'Unsure which is the metal atom: try indicating as current.';\n            return;\n        }\n        let i = ligAtoms.indexOf(metalAtom);\n        if (i >= 0)\n            ligAtoms.splice(i, 1);\n        if (ligAtoms.length == 0)\n            ligAtoms = mol.atomAdjList(metalAtom);\n        if (ligAtoms.length == 0) {\n            this.errmsg = 'Metal centre has no attachments: try selecting atom join-points.';\n            return;\n        }\n        mol = new MetalLigate(mol, metalAtom, ligAtoms).generate();\n        this.output.mol = mol;\n        this.output.currentAtom = metalAtom;\n        this.output.currentBond = -1;\n        this.output.selectedMask = Vec.booleanArray(false, mol.numAtoms);\n        for (let a of ligAtoms)\n            this.output.selectedMask[a - 1] = true;\n    }\n    execBond(order, type) {\n        if (!this.requireSubject())\n            return;\n        if (this.subjectLength == 1) {\n            this.performBondNew(this.subjectIndex[0], order, type);\n            return;\n        }\n        let ccmol = MolUtil.subgraphMask(this.input.mol, this.subjectMask);\n        let oneComp = true;\n        for (let n = ccmol.numAtoms; n >= 1; n--)\n            if (ccmol.atomConnComp(n) != 1) {\n                oneComp = false;\n                break;\n            }\n        if (oneComp)\n            this.performBondChange(order, type);\n        else\n            this.execConnect(order, type);\n    }\n    execBondGeom(geom) {\n        let bond = this.subjectLength == 2 ? this.input.mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) : 0;\n        if (this.subjectLength == 0 || this.subjectLength > 2 || (this.subjectLength == 2 && bond == 0)) {\n            this.errmsg = 'The subject must be a single atom or bond.';\n            return;\n        }\n        if (this.subjectLength == 1)\n            this.performBondGeomAtom(geom, this.subjectIndex[0]);\n        else\n            this.performBondGeomBond(geom, bond);\n    }\n    execBondAtom(order, type, element, x1, y1, x2, y2) {\n        let mol = this.input.mol;\n        let a1 = CoordUtil.atomAtPoint(mol, x1, y1, 0.01), a2 = CoordUtil.atomAtPoint(mol, x2, y2, 0.01);\n        if (a1 > 0 && a1 == a2)\n            return;\n        if (a1 > 0 && a2 > 0 && mol.findBond(a1, a2) > 0)\n            return;\n        this.output.mol = mol.clone();\n        if (a1 == 0)\n            a1 = this.output.mol.addAtom('C', x1, y1);\n        if (a2 == 0)\n            a2 = this.output.mol.addAtom(element, x2, y2);\n        this.output.mol.addBond(a1, a2, order, type);\n    }\n    execBondSwitch() {\n        if (this.input.altmol) {\n            this.output.mol = this.input.altmol;\n            this.output.altmol = this.input.mol;\n            return;\n        }\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        let src = 0, dst = [];\n        if (this.subjectLength == 1) {\n            src = this.subjectIndex[0];\n            let adj = mol.atomAdjList(src);\n            for (let n = 0; n < adj.length; n++)\n                if (mol.atomAdjCount(adj[n]) == 1)\n                    dst.push(adj[n]);\n        }\n        else if (this.subjectLength == 2 && mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) > 0) {\n            let ac1 = mol.atomAdjCount(this.subjectIndex[0]), ac2 = mol.atomAdjCount(this.subjectIndex[1]);\n            if (ac1 > 1 && ac2 == 1) {\n                src = this.subjectIndex[0];\n                dst.push(this.subjectIndex[1]);\n            }\n            else if (ac1 == 1 && ac2 > 1) {\n                src = this.subjectIndex[1];\n                dst.push(this.subjectIndex[0]);\n            }\n        }\n        if (src == 0 || dst.length == 0) {\n            this.errmsg = 'Subject must include a terminal bond.';\n            return;\n        }\n        let geoms = SketchUtil.guessAtomGeometry(mol, src, 1);\n        if (geoms.length == 0) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        this.output.mol = SketchUtil.switchAtomGeometry(mol, src, dst, geoms);\n        if (this.output.mol == null) {\n            this.errmsg = 'No alternative geometries identified.';\n        }\n    }\n    execBondRotate() {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol;\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot rotate a ring-bond.';\n            return;\n        }\n        if (mol.atomAdjCount(mol.bondFrom(bond)) == 1 && mol.atomAdjCount(mol.bondTo(bond)) == 1) {\n            this.errmsg = 'Two-atom components do not rotate.';\n            return;\n        }\n        mol = mol.clone();\n        let [atom1, atom2, side] = this.mobileSide(bond, true);\n        let cx = mol.atomX(atom1), cy = mol.atomY(atom1);\n        let theta = Math.atan2(mol.atomY(atom1) - mol.atomY(atom2), mol.atomX(atom1) - mol.atomX(atom2));\n        for (let a of side)\n            if (a != atom1) {\n                let dx = mol.atomX(a) - cx, dy = mol.atomY(a) - cy, dist = norm_xy(dx, dy);\n                let dtheta = Math.atan2(dy, dx);\n                dtheta = theta - angleDiff(dtheta, theta);\n                mol.setAtomPos(a, cx + dist * Math.cos(dtheta), cy + dist * Math.sin(dtheta));\n            }\n        let mask = Vec.idxMask(Vec.add(side, -1), mol.numAtoms);\n        for (let b = 1; b <= mol.numBonds; b++)\n            if (mask[mol.bondFrom(b) - 1] && mask[mol.bondTo(b) - 1]) {\n                let bt = mol.bondType(b);\n                if (bt == Molecule.BONDTYPE_INCLINED)\n                    mol.setBondType(b, Molecule.BONDTYPE_DECLINED);\n                else if (bt == Molecule.BONDTYPE_DECLINED)\n                    mol.setBondType(b, Molecule.BONDTYPE_INCLINED);\n            }\n        if (CoordUtil.sketchEquivalent(this.input.mol, mol)) {\n            this.errmsg = 'Rotation has no effect.';\n            return;\n        }\n        this.output.mol = mol;\n    }\n    execBondAddTwo() {\n        if (this.subjectLength != 1) {\n            this.errmsg = 'Subject must be a single atom.';\n            return;\n        }\n        let atom = this.subjectIndex[0];\n        if (this.input.mol.atomAdjCount(atom) < 2) {\n            this.errmsg = 'Subject atom must already have at least 2 bonds.';\n            return;\n        }\n        let ang = SketchUtil.calculateNewBondAngles(this.input.mol, atom, 1);\n        if (ang.length == 0)\n            ang = SketchUtil.exitVectors(this.input.mol, atom);\n        if (ang.length == 0) {\n            this.errmsg = 'Could not find a suitable geometry for new substituents.';\n            return;\n        }\n        let baseAng = ang[0];\n        let cx = this.input.mol.atomX(atom), cy = this.input.mol.atomY(atom);\n        if (ang.length > 1) {\n            let best = 0;\n            for (let n = 0; n < ang.length; n++) {\n                let x = cx + Molecule.IDEALBOND * Math.cos(ang[n]);\n                let y = cy + Molecule.IDEALBOND * Math.sin(ang[n]);\n                let score = CoordUtil.congestionPoint(this.input.mol, x, y);\n                if (n == 0 || score < best) {\n                    best = score;\n                    baseAng = ang[n];\n                }\n            }\n        }\n        let ang1 = baseAng - 30.0 * DEGRAD, ang2 = baseAng + 30.0 * DEGRAD;\n        let mol = this.input.mol.clone();\n        let a1 = mol.addAtom('C', cx + Molecule.IDEALBOND * Math.cos(ang1), cy + Molecule.IDEALBOND * Math.sin(ang1));\n        let a2 = mol.addAtom('C', cx + Molecule.IDEALBOND * Math.cos(ang2), cy + Molecule.IDEALBOND * Math.sin(ang2));\n        mol.addBond(atom, a1, 1);\n        mol.addBond(atom, a2, 1);\n        this.output.mol = mol;\n    }\n    execBondInsert() {\n        let mol = this.input.mol, bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot insert into a ring-bond.';\n            return;\n        }\n        let [alink, _, side] = this.mobileSide(bond);\n        mol = mol.clone();\n        mol.setBondOrder(bond, 1);\n        let fragmask = Vec.booleanArray(false, mol.numAtoms);\n        for (let a of side)\n            fragmask[a - 1] = true;\n        let frag = MolUtil.subgraphWithAttachments(mol, fragmask);\n        for (let n = mol.numAtoms; n >= 1; n--)\n            if (fragmask[n - 1] && n != alink) {\n                mol.deleteAtomAndBonds(n);\n                if (n < alink)\n                    alink -= 1;\n            }\n        mol.setAtomElement(alink, 'C');\n        mol.setAtomCharge(alink, 0);\n        mol.setAtomUnpaired(alink, 0);\n        mol.setAtomHExplicit(alink, Molecule.HEXPLICIT_UNKNOWN);\n        mol.setAtomIsotope(alink, Molecule.ISOTOPE_NATURAL);\n        mol.setAtomMapNum(alink, 0);\n        mol.setAtomExtra(alink, []);\n        mol.setAtomTransient(alink, []);\n        let fusion = new TemplateFusion(mol, frag, '');\n        fusion.withGuideOnly = true;\n        fusion.permuteAtom(alink);\n        if (fusion.perms.length == 0) {\n            this.errmsg = 'Unable to insert.';\n            return;\n        }\n        this.output.mol = fusion.perms[0].mol;\n        this.zapSubject();\n        this.output.currentAtom = alink;\n    }\n    execJoin() {\n        if (!this.requireSubject())\n            return;\n        this.output.mol = SketchUtil.joinOverlappingAtoms(this.input.mol, this.subjectMask);\n        if (this.output.mol == null) {\n            this.errmsg = 'Subject contains no overlapping atoms.';\n        }\n        else {\n            this.zapSubject();\n        }\n    }\n    execNudge(dir, extent) {\n        if (!this.requireSubject())\n            return;\n        let dx = extent * (dir == 'left' ? -1 : dir == 'right' ? 1 : 0);\n        let dy = extent * (dir == 'down' ? -1 : dir == 'up' ? 1 : 0);\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let x = this.output.mol.atomX(this.subjectIndex[n]), y = this.output.mol.atomY(this.subjectIndex[n]);\n            this.output.mol.setAtomPos(this.subjectIndex[n], x + dx, y + dy);\n        }\n    }\n    execNudgeFar(dir) {\n        if (!this.requireSubject())\n            return;\n        if (this.subjectLength == this.input.mol.numAtoms) {\n            this.errmsg = 'Cannot apply to entire molecule.';\n            return;\n        }\n        let dx = dir == 'left' ? -1 : dir == 'right' ? 1 : 0;\n        let dy = dir == 'down' ? -1 : dir == 'up' ? 1 : 0;\n        this.output.mol = SketchUtil.moveToEdge(this.input.mol, this.subjectMask, dx, dy);\n        if (this.output.mol == null) {\n            this.execNudge(dir, 1);\n        }\n    }\n    execFlip(axis) {\n        if (this.input.mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        let isVertical = axis == 'ver';\n        let cx = 0, cy = 0;\n        let mask = this.subjectMask, mol = this.input.mol;\n        if (this.input.currentAtom > 0) {\n            cx = mol.atomX(this.input.currentAtom);\n            cy = mol.atomY(this.input.currentAtom);\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(this.input.currentAtom);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.input.currentBond > 0) {\n            let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(bfr);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.subjectLength == 0) {\n            let box = mol.boundary();\n            cx = 0.5 * (box.minX() + box.maxX());\n            cy = 0.5 * (box.minY() + box.maxY());\n            mask = Vec.booleanArray(true, mol.numAtoms);\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                if (!isVertical)\n                    this.output.mol.setAtomX(n, 2 * cx - this.output.mol.atomX(n));\n                else\n                    this.output.mol.setAtomY(n, 2 * cy - this.output.mol.atomY(n));\n            }\n    }\n    execScale(mag) {\n        const { mol, currentAtom, currentBond } = this.input;\n        if (mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        if (currentAtom > 0) {\n            let connAtoms = [];\n            for (let a of this.subjectIndex)\n                if (a != currentAtom && mol.findBond(currentAtom, a) > 0)\n                    connAtoms.push(a);\n            let g = Graph.fromMolecule(mol);\n            g.isolateNode(currentAtom - 1);\n            let anything = false;\n            for (let cc of g.calculateComponentGroups()) {\n                Vec.addTo(cc, 1);\n                let sz = 0, dx = 0, dy = 0;\n                for (let a of cc)\n                    if (connAtoms.includes(a)) {\n                        dx += mol.atomX(a) - mol.atomX(currentAtom);\n                        dy += mol.atomY(a) - mol.atomY(currentAtom);\n                        sz++;\n                    }\n                if (sz == 0)\n                    continue;\n                [dx, dy] = [dx / sz, dy / sz];\n                if (Math.abs(dx) < 0.1 && Math.abs(dy) < 0.1)\n                    continue;\n                [dx, dy] = [dx * (mag - 1), dy * (mag - 1)];\n                if (!this.output.mol)\n                    this.output.mol = mol.clone();\n                for (let a of cc)\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + dx, this.output.mol.atomY(a) + dy);\n                anything = true;\n            }\n            if (anything)\n                return;\n        }\n        let b;\n        if (this.subjectLength == 2 && (b = mol.findBond(this.subjectIndex[0], this.subjectIndex[1])) > 0 && !mol.bondInRing(b)) {\n            let a1 = this.subjectIndex[0], a2 = this.subjectIndex[1];\n            let ccmol = mol.clone();\n            ccmol.deleteBond(b);\n            let idx1 = [], idx2 = [];\n            for (let n = 1; n <= ccmol.numAtoms; n++) {\n                if (ccmol.atomConnComp(n) == ccmol.atomConnComp(a1))\n                    idx1.push(n);\n                else if (ccmol.atomConnComp(n) == ccmol.atomConnComp(a2))\n                    idx2.push(n);\n            }\n            let dx = (mol.atomX(a2) - mol.atomX(a1)) * (mag - 1);\n            let dy = (mol.atomY(a2) - mol.atomY(a1)) * (mag - 1);\n            if (idx1.length == idx2.length) {\n                dx *= 0.5;\n                dy *= 0.5;\n            }\n            this.output.mol = mol.clone();\n            if (idx1.length <= idx2.length)\n                for (let n = 0; n < idx1.length; n++) {\n                    let a = idx1[n];\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) - dx, this.output.mol.atomY(a) - dy);\n                }\n            if (idx2.length <= idx1.length)\n                for (let n = 0; n < idx2.length; n++) {\n                    let a = idx2[n];\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + dx, this.output.mol.atomY(a) + dy);\n                }\n            return;\n        }\n        let cx = 0, cy = 0;\n        if (currentAtom > 0) {\n            cx = mol.atomX(currentAtom);\n            cy = mol.atomY(currentAtom);\n        }\n        else if (currentBond > 0) {\n            let bfr = mol.bondFrom(currentBond), bto = mol.bondTo(currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let x = this.output.mol.atomX(this.subjectIndex[n]);\n            let y = this.output.mol.atomY(this.subjectIndex[n]);\n            this.output.mol.setAtomPos(this.subjectIndex[n], (x - cx) * mag + cx, (y - cy) * mag + cy);\n        }\n    }\n    execRotate(theta, centreX, centreY) {\n        theta *= DEGRAD;\n        let mol = this.input.mol;\n        if (centreX != null && centreY != null) {\n            this.output.mol = mol.clone();\n            let mask = this.subjectLength == 0 ? Vec.booleanArray(true, mol.numAtoms) : this.subjectMask;\n            CoordUtil.rotateAtoms(this.output.mol, mask, centreX, centreY, theta);\n            return;\n        }\n        if (mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        let cx = 0, cy = 0;\n        let mask = this.subjectMask;\n        if (this.input.currentAtom > 0) {\n            cx = mol.atomX(this.input.currentAtom);\n            cy = mol.atomY(this.input.currentAtom);\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(this.input.currentAtom);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n            if (Vec.maskCount(mask) == 1 && mask[this.input.currentAtom - 1]) {\n                this.errmsg = 'Component is isolated.';\n                return;\n            }\n        }\n        else if (this.input.currentBond > 0) {\n            let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(bfr);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.subjectLength == 0) {\n            let box = mol.boundary();\n            cx = 0.5 * (box.minX() + box.maxX());\n            cy = 0.5 * (box.minY() + box.maxY());\n            mask = Vec.booleanArray(true, mol.numAtoms);\n        }\n        else {\n            if (this.subjectLength == 1) {\n                this.errmsg = 'Component is isolated.';\n                return;\n            }\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        CoordUtil.rotateAtoms(this.output.mol, mask, cx, cy, theta);\n    }\n    execBondDist(dist) {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        if (mol.bondInRing(bond)) {\n            let atom1 = mol.bondFrom(bond), atom2 = mol.bondTo(bond);\n            let dx = mol.atomX(atom2) - mol.atomX(atom1), dy = mol.atomY(atom2) - mol.atomY(atom1), curDist = norm_xy(dx, dy), inv = 1.0 / curDist;\n            let sel1 = this.isSelected(atom1), sel2 = this.isSelected(atom2);\n            let ox = dx * (dist - curDist) * inv, oy = dy * (dist - curDist) * inv;\n            if (sel1 && !sel2) {\n                mol.setAtomPos(atom1, mol.atomX(atom1) - ox, mol.atomY(atom1) - oy);\n            }\n            else if (sel2 && !sel1) {\n                mol.setAtomPos(atom2, mol.atomX(atom2) + ox, mol.atomY(atom2) + oy);\n            }\n            else {\n                mol.setAtomPos(atom1, mol.atomX(atom1) - 0.5 * ox, mol.atomY(atom1) - 0.5 * oy);\n                mol.setAtomPos(atom2, mol.atomX(atom2) + 0.5 * ox, mol.atomY(atom2) + 0.5 * oy);\n            }\n        }\n        else {\n            let [atom1, atom2, side] = this.mobileSide(bond);\n            let dx = mol.atomX(atom2) - mol.atomX(atom1), dy = mol.atomY(atom2) - mol.atomY(atom1);\n            let curDist = norm_xy(dx, dy), inv = 1.0 / curDist;\n            let ox = dx * (dist - curDist) * inv, oy = dy * (dist - curDist) * inv;\n            for (let a of side)\n                mol.setAtomPos(a, mol.atomX(a) - ox, mol.atomY(a) - oy);\n        }\n        this.output.mol = mol;\n    }\n    execAlignAngle(angle) {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot align a ring-bond.';\n            return;\n        }\n        let [atom1, atom2, side] = this.mobileSide(bond);\n        let cx = mol.atomX(atom2), cy = mol.atomY(atom2);\n        let delta = angle - Math.atan2(mol.atomY(atom1) - cy, mol.atomX(atom1) - cx);\n        let cosTheta = Math.cos(delta), sinTheta = Math.sin(delta);\n        for (let a of side) {\n            let x = mol.atomX(a) - cx, y = mol.atomY(a) - cy;\n            mol.setAtomPos(a, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n        }\n        this.output.mol = mol;\n    }\n    execAlignRegular() {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n        let theta = Math.atan2(mol.atomY(bto) - mol.atomY(bfr), mol.atomX(bto) - mol.atomX(bfr)) * RADDEG;\n        if (theta < 0)\n            theta += 360;\n        let snap = Math.round(theta / 30) * 30;\n        if (Math.abs(theta - snap) < 0.001)\n            return;\n        let delta = (snap - theta) * DEGRAD;\n        let mask = this.input.selectedMask;\n        if (Vec.allFalse(mask)) {\n            let cc = mol.atomConnComp(bfr);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                mask[n - 1] = cc == mol.atomConnComp(n);\n        }\n        let cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto)), cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let dx = mol.atomX(n) - cx, dy = mol.atomY(n) - cy;\n                let th = Math.atan2(dy, dx) + delta, dist = norm_xy(dx, dy);\n                mol.setAtomPos(n, cx + dist * Math.cos(th), cy + dist * Math.sin(th));\n            }\n        this.output.mol = mol;\n    }\n    execAdjustTorsion(angle) {\n        if (this.input.currentAtom == 0 || Vec.maskCount(this.input.selectedMask) != 3) {\n            this.errmsg = 'Must be 3 selected atoms and a current atom.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        let a1 = this.input.currentAtom;\n        let atoms = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (n != a1 && this.input.selectedMask[n - 1])\n                atoms.push(n);\n        let a2 = mol.findBond(a1, atoms[0]) > 0 ? atoms.shift() :\n            mol.findBond(a1, atoms[1]) > 0 ? atoms.pop() : 0;\n        if (a2 == 0 || mol.findBond(a2, atoms[0]) == 0) {\n            this.errmsg = 'Selected atoms must be consecutive.';\n            return;\n        }\n        let a3 = atoms[0];\n        let cx = mol.atomX(a2), cy = mol.atomY(a2);\n        let theta1 = Math.atan2(mol.atomY(a1) - cy, mol.atomX(a1) - cx);\n        let theta3 = Math.atan2(mol.atomY(a3) - cy, mol.atomX(a3) - cx);\n        let delta = angle - angleDiff(theta3, theta1);\n        let group1 = [], group3 = [];\n        if (mol.atomRingBlock(a1) == 0 || mol.atomRingBlock(a1) != mol.atomRingBlock(a3)) {\n            let g = Graph.fromMolecule(mol);\n            g.removeEdge(a2 - 1, a1 - 1);\n            g.removeEdge(a2 - 1, a3 - 1);\n            let cc = g.calculateComponents();\n            for (let n = 0; n < g.numNodes; n++) {\n                if (cc[n] == cc[a1 - 1])\n                    group1.push(n + 1);\n                else if (cc[n] == cc[a3 - 1])\n                    group3.push(n + 1);\n            }\n        }\n        if (mol.atomRingBlock(a1) > 0 && mol.atomRingBlock(a1) == mol.atomRingBlock(a2))\n            group1 = [a1];\n        if (mol.atomRingBlock(a3) > 0 && mol.atomRingBlock(a3) == mol.atomRingBlock(a2))\n            group3 = [a3];\n        CoordUtil.rotateAtoms(mol, Vec.idxMask(Vec.add(group1, -1), mol.numAtoms), cx, cy, -0.5 * delta);\n        CoordUtil.rotateAtoms(mol, Vec.idxMask(Vec.add(group3, -1), mol.numAtoms), cx, cy, 0.5 * delta);\n        this.output.mol = mol;\n    }\n    execMove(refAtom, deltaX, deltaY) {\n        let subj = this.subjectIndex;\n        if (Vec.len(subj) == 0) {\n            if (refAtom == 0)\n                return;\n            subj = [refAtom];\n        }\n        this.output.mol = this.input.mol.clone();\n        for (let a of subj)\n            this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + deltaX, this.output.mol.atomY(a) + deltaY);\n    }\n    execRing(ringX, ringY, aromatic) {\n        let rsz = ringX.length;\n        let atoms = Vec.numberArray(0, rsz), bonds = Vec.numberArray(0, rsz);\n        let outmol = this.input.mol.clone();\n        for (let n = 0; n < rsz; n++) {\n            atoms[n] = CoordUtil.atomAtPoint(outmol, ringX[n], ringY[n]);\n            if (atoms[n] == 0)\n                atoms[n] = outmol.addAtom('C', ringX[n], ringY[n]);\n        }\n        for (let n = 0; n < rsz; n++) {\n            let nn = n < rsz - 1 ? n + 1 : 0;\n            bonds[n] = outmol.findBond(atoms[n], atoms[nn]);\n            if (bonds[n] == 0)\n                bonds[n] = outmol.addBond(atoms[n], atoms[nn], 1);\n        }\n        if (aromatic) {\n            let valence = Vec.numberArray(0, rsz);\n            let pi = Vec.booleanArray(false, rsz);\n            for (let n = 0; n < rsz; n++) {\n                valence[n] = Chemistry.ELEMENT_BONDING[outmol.atomicNumber(atoms[n])] + outmol.atomCharge(atoms[n]);\n                if (outmol.atomHExplicit(atoms[n]) != Molecule.HEXPLICIT_UNKNOWN)\n                    valence[n] -= outmol.atomHExplicit(atoms[n]);\n                for (let b of outmol.atomAdjBonds(atoms[n]))\n                    valence[n] -= outmol.bondOrder(b);\n                if (outmol.bondOrder(bonds[n]) >= 2) {\n                    pi[n] = true;\n                    if (n < rsz - 1) {\n                        pi[n] = true;\n                        n++;\n                    }\n                    else\n                        pi[0] = true;\n                }\n            }\n            for (let n = 0; n < rsz; n++) {\n                let nn = n < rsz - 1 ? n + 1 : 0;\n                if (pi[n] || pi[nn])\n                    continue;\n                if (valence[n] > 0 && valence[nn] > 0) {\n                    outmol.setBondOrder(bonds[n], 2);\n                    pi[n] = true;\n                    pi[nn] = true;\n                    valence[n]--;\n                    valence[nn]--;\n                }\n            }\n        }\n        this.output.mol = outmol;\n    }\n    execTemplateFusion(frag) {\n        let mol = this.input.mol;\n        let fusion = new TemplateFusion(mol, frag, '');\n        if (this.subjectLength == 0)\n            fusion.permuteNone();\n        else if (this.subjectLength == 1)\n            fusion.permuteAtom(this.subjectIndex[0]);\n        else if (this.subjectLength == 2 && mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) > 0)\n            fusion.permuteBond(this.subjectIndex[0], this.subjectIndex[1]);\n        else\n            fusion.permuteMulti(this.subjectIndex);\n        let permutations = [];\n        for (let perm of fusion.perms) {\n            let obj = {};\n            obj['mol'] = perm.mol.toString();\n            obj['display'] = perm.display.toString();\n            obj['molidx'] = perm.molidx;\n            obj['temidx'] = perm.temidx;\n            obj['srcidx'] = perm.srcidx;\n            permutations.push(obj);\n        }\n        this.output.permutations = permutations;\n    }\n    execAbbrevTempl() {\n    }\n    execAbbrevGroup() {\n        if (!this.requireSubject())\n            return;\n        if (!this.checkAbbreviationReady())\n            return;\n        let mol = MolUtil.convertToAbbrev(this.input.mol, Vec.notMask(this.subjectMask), '?');\n        if (mol == null) {\n            this.errmsg = 'Inline abbreviations must be terminal with exactly one attachment point.';\n            return;\n        }\n        if (AbbrevContainer.main) {\n            AbbrevContainer.main.submitMolecule(mol, true);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomElement(n) == '?' && MolUtil.hasAbbrev(mol, n))\n                    AbbrevContainer.main.substituteAbbrevName(mol, n);\n        }\n        this.output.mol = mol;\n        this.zapSubject();\n        this.output.currentAtom = mol.numAtoms;\n    }\n    execAbbrevFormula() {\n        if (!this.requireSubject())\n            return;\n        if (!this.checkAbbreviationReady())\n            return;\n        let fixed = this.input.mol.clone();\n        for (let n = 1; n <= fixed.numAtoms; n++)\n            fixed.setAtomHExplicit(n, fixed.atomHydrogens(n));\n        let abv = MolUtil.subgraphMask(fixed, this.subjectMask);\n        let formula = MolUtil.molecularFormula(abv, true);\n        let mol = MolUtil.convertToAbbrev(this.input.mol, Vec.notMask(this.subjectMask), formula);\n        if (mol == null) {\n            this.errmsg = 'Inline abbreviations must be terminal with exactly one attachment point.';\n            return;\n        }\n        this.output.mol = mol;\n        this.zapSubject();\n        this.output.currentAtom = mol.numAtoms;\n    }\n    execAbbrevClear() {\n        let idx = [];\n        for (let n of this.subjectIndex)\n            if (MolUtil.hasAbbrev(this.input.mol, n))\n                idx.push(n);\n        if (idx.length == 0) {\n            this.errmsg = 'No abbreviations to clear.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        for (let n of idx)\n            MolUtil.clearAbbrev(mol, n);\n        this.output.mol = mol;\n    }\n    execAbbrevExpand() {\n        let idx = [];\n        for (let n of this.subjectIndex)\n            if (MolUtil.hasAbbrev(this.input.mol, n))\n                idx.push(n);\n        if (idx.length == 0) {\n            this.errmsg = 'No abbreviations to expand.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        for (let n of idx)\n            MolUtil.expandOneAbbrev(mol, n, true);\n        this.output.mol = mol;\n        this.zapSubject();\n    }\n    execBondArtifact(activity) {\n        if (!this.requireAtoms() || !this.requireSubject())\n            return;\n        let artif = new BondArtifact(this.input.mol.clone());\n        let subject = this.subjectIndex.slice(0), curAtom = this.input.currentAtom;\n        if (curAtom > 0 && subject.indexOf(curAtom) < 0)\n            subject.push(curAtom);\n        if (activity == ActivityType.BondArtifactPath) {\n            if (!artif.createPath(subject)) {\n                this.errmsg = 'Path artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactRing) {\n            if (!artif.createRing(subject)) {\n                this.errmsg = 'Ring artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactArene) {\n            if (!artif.createArene(subject)) {\n                this.errmsg = 'Arene artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactClear) {\n            if (!artif.removeArtifact(subject)) {\n                if (this.removePolymerBlock(subject))\n                    return;\n                this.errmsg = 'No artifact removed.';\n                return;\n            }\n        }\n        artif.rewriteMolecule();\n        this.output.mol = artif.mol;\n    }\n    execPolymerBlock() {\n        if (!this.requireAtoms() || !this.requireSubject())\n            return;\n        if (this.owner)\n            this.owner.performPolymerBlock(this.subjectIndex);\n    }\n    execAddHydrogens() {\n        let mol = this.input.mol.clone();\n        if (!this.requireAtoms())\n            return;\n        let atoms = this.subjectIndex;\n        if (atoms.length == 0)\n            atoms = Vec.identity1(mol.numAtoms);\n        for (let a of atoms) {\n            let hc = mol.atomHydrogens(a);\n            if (hc > 0)\n                SketchUtil.placeAdditionalHydrogens(mol, a, hc);\n        }\n        if (mol.numAtoms == this.input.mol.numAtoms) {\n            this.errmsg = 'Nothing needs to be added.';\n            return;\n        }\n        this.output.mol = mol;\n    }\n    execRemoveHydrogens() {\n        if (!this.requireAtoms())\n            return;\n        let mol = this.input.mol;\n        let selmask = this.subjectMask;\n        if (Vec.allFalse(selmask))\n            selmask = Vec.booleanArray(true, mol.numAtoms);\n        let keepmask = Vec.booleanArray(true, mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.boringHydrogen(mol, n)) {\n                let nbr = mol.atomAdjList(n)[0];\n                if (selmask[n - 1] || selmask[nbr - 1])\n                    keepmask[n - 1] = false;\n            }\n        if (Vec.allTrue(keepmask)) {\n            this.errmsg = 'Nothing to be deleted.';\n            return;\n        }\n        this.output.mol = MolUtil.subgraphMask(mol, keepmask);\n    }\n    execQueryClear() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol.clone();\n        const { currentBond } = this.input;\n        if (currentBond > 0 && QueryUtil.hasAnyQueryBond(mol, currentBond)) {\n            QueryUtil.deleteQueryBondAll(mol, currentBond);\n            this.output.mol = mol;\n            return;\n        }\n        let anything = false;\n        for (let a of this.subjectIndex)\n            if (QueryUtil.hasAnyQueryAtom(mol, a)) {\n                QueryUtil.deleteQueryAtomAll(mol, a);\n                anything = true;\n            }\n        for (let b = 1; b <= mol.numBonds; b++)\n            if (this.subjectMask[mol.bondFrom(b) - 1] && this.subjectMask[mol.bondTo(b) - 1] && QueryUtil.hasAnyQueryBond(mol, b)) {\n                QueryUtil.deleteQueryBondAll(mol, b);\n                anything = true;\n            }\n        if (anything)\n            this.output.mol = mol;\n        else\n            this.errmsg = 'No query terms to clear.';\n    }\n    execQueryCopy() {\n        if (!this.requireSubject())\n            return;\n        const { mol, currentBond } = this.input;\n        if (currentBond > 0) {\n            if (!QueryUtil.hasAnyQueryBond(mol, currentBond)) {\n                this.errmsg = 'Bond has no query terms.';\n                return;\n            }\n            let qmol = new Molecule();\n            qmol.addAtom('*', 0, 0);\n            qmol.addAtom('*', Molecule.IDEALBOND, 0);\n            qmol.addBond(1, 2, 1);\n            qmol.setBondExtra(1, mol.bondExtra(currentBond).filter((xtra) => xtra.startsWith('q')));\n            this.toClipboard = qmol.toString();\n        }\n        else if (this.subjectLength == 1) {\n            let atom = this.subjectIndex[0];\n            if (!QueryUtil.hasAnyQueryAtom(mol, atom)) {\n                this.errmsg = 'Atom has no query terms.';\n                return;\n            }\n            let qmol = new Molecule();\n            qmol.addAtom('*', 0, 0);\n            qmol.setAtomExtra(1, mol.atomExtra(atom).filter((xtra) => xtra.startsWith('q')));\n            this.toClipboard = qmol.toString();\n        }\n        else\n            this.errmsg = 'Subject has to be a single atom or bond.';\n    }\n    execQueryPaste() {\n        if (!this.requireSubject())\n            return;\n        let qmol = this.param.qmol;\n        if (!qmol) { }\n        else if (qmol.numAtoms == 1 && qmol.atomElement(1) == '*' && QueryUtil.hasAnyQueryAtom(qmol, 1)) {\n            let mol = this.output.mol = this.input.mol.clone();\n            let qterms = qmol.atomExtra(1).filter((xtra) => xtra.startsWith('q'));\n            for (let a of this.subjectIndex) {\n                let aterms = mol.atomExtra(a).filter((xtra) => xtra.startsWith('q'));\n                mol.setAtomExtra(a, [...aterms, ...qterms]);\n            }\n            return;\n        }\n        else if (qmol.numAtoms == 2 && qmol.atomElement(1) == '*' && qmol.atomElement(2) == '*' &&\n            qmol.numBonds == 1 && QueryUtil.hasAnyQueryBond(qmol, 1)) {\n            let mol = this.output.mol = this.input.mol.clone();\n            let qterms = qmol.bondExtra(1).filter((xtra) => xtra.startsWith('q'));\n            for (let b = 1; b <= mol.numBonds; b++)\n                if (this.subjectMask[mol.bondFrom(b) - 1] && this.subjectMask[mol.bondTo(b) - 1]) {\n                    let bterms = mol.bondExtra(b).filter((xtra) => xtra.startsWith('q'));\n                    mol.setBondExtra(b, [...bterms, ...qterms]);\n                }\n            return;\n        }\n        this.errmsg = 'Unable to paste query terms.';\n    }\n    execQuerySetAtom() {\n    }\n    execQuerySetBond() {\n    }\n    execQueryBondAny() {\n        if (!this.requireSubject())\n            return;\n        const { mol, currentBond } = this.input;\n        let bonds = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                bonds.push(n);\n        if (bonds.length == 0) {\n            this.errmsg = 'Must select at least one bond.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        for (let b of bonds) {\n            this.output.mol.setBondOrder(b, 0);\n            QueryUtil.setQueryBondOrders(this.output.mol, b, [-1, 0, 1, 2, 3, 4]);\n        }\n    }\n    execSproutDirection(deltaX, deltaY) {\n        var _a, _b;\n        if (!this.requireCurrent())\n            return;\n        if (deltaX == 0 && deltaY == 0)\n            return;\n        const { mol, currentAtom } = this.input;\n        let angleOptions;\n        if (mol.atomAdjCount(currentAtom) == 0)\n            angleOptions = Vec.identity0(12).map((n) => n * TWOPI / 12);\n        else\n            angleOptions = (_a = SketchUtil.primeDirections(mol, currentAtom)) !== null && _a !== void 0 ? _a : SketchUtil.exitVectors(mol, currentAtom);\n        if (angleOptions.length == 0)\n            return;\n        let theta = Math.atan2(deltaY, deltaX);\n        let idx = Vec.idxMin(angleOptions.map((look) => Math.abs(angleDiff(theta, look)) + 0.01 * Math.abs(Math.sin(look))));\n        let px = mol.atomX(currentAtom) + Molecule.IDEALBOND * Math.cos(angleOptions[idx]);\n        let py = mol.atomY(currentAtom) + Molecule.IDEALBOND * Math.sin(angleOptions[idx]);\n        this.output.mol = mol.clone();\n        let newAtom = this.output.mol.addAtom('C', px, py);\n        this.output.mol.addBond(currentAtom, newAtom, 1);\n        this.output.mol = (_b = SketchUtil.joinOverlappingAtoms(this.output.mol, Vec.booleanArray(true, this.output.mol.numAtoms))) !== null && _b !== void 0 ? _b : this.output.mol;\n        for (let n = 1; n <= this.output.mol.numAtoms; n++) {\n            let dx = this.output.mol.atomX(n) - px, dy = this.output.mol.atomY(n) - py;\n            if (norm2_xy(dx, dy) < CoordUtil.OVERLAP_THRESHOLD_SQ) {\n                this.output.currentAtom = n;\n                break;\n            }\n        }\n    }\n    requireSubject() {\n        if (this.subjectLength == 0)\n            this.errmsg = 'Subject required: current atom/bond or selected atoms.';\n        return this.subjectLength > 0;\n    }\n    requireAtoms() {\n        if (this.input.mol.numAtoms == 0)\n            this.errmsg = 'There are no atoms.';\n        return this.input.mol.numAtoms > 0;\n    }\n    requireCurrent() {\n        if (this.input.currentAtom == 0 && this.input.currentBond == 0) {\n            this.errmsg = 'There must be a current atom or bond.';\n            return false;\n        }\n        return true;\n    }\n    requireSelected() {\n        if (!this.hasSelected)\n            this.errmsg = 'No atoms are selected.';\n        return this.hasSelected;\n    }\n    pickSelectedGroup(groups, dir) {\n        if (this.subjectLength == 0)\n            return 0;\n        for (let i = 0; i < groups.length; i++) {\n            let g = groups[i];\n            let all = true;\n            for (let j = 0; j < g.length; j++)\n                if (!this.subjectMask[g[j] - 1]) {\n                    all = false;\n                    break;\n                }\n            if (all) {\n                i += dir;\n                return i < 0 ? i + groups.length : i >= groups.length ? i - groups.length : i;\n            }\n        }\n        for (let i = 0; i < groups.length; i++) {\n            let g = groups[i];\n            for (let j = 0; j < g.length; j++)\n                if (this.subjectMask[g[j] - 1])\n                    return i;\n        }\n        return 0;\n    }\n    zapSubject() {\n        this.output.currentAtom = 0;\n        this.output.currentBond = 0;\n        this.output.selectedMask = Vec.booleanArray(false, this.input.mol.numAtoms);\n    }\n    performBondNew(atom, order, type) {\n        let mol = this.input.mol;\n        let ang = SketchUtil.calculateNewBondAngles(mol, atom, order);\n        if (ang.length == 0)\n            ang = SketchUtil.exitVectors(mol, atom);\n        if (ang.length == 0) {\n            this.errmsg = 'Could not find a suitable geometry for a new substituent.';\n            return;\n        }\n        let bx = [], by = [], bscore = [];\n        for (let n = 0; n < ang.length; n++) {\n            let x = mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(ang[n]);\n            let y = mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(ang[n]);\n            let score = CoordUtil.congestionPoint(mol, x, y);\n            if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(atom)] <= 2)\n                score += Math.abs(angleNorm(ang[n])) * 1E-8;\n            else\n                score += Math.abs(angleDiff(0.5 * Math.PI, ang[n])) * 1E-8;\n            bx.push(x);\n            by.push(y);\n            bscore.push(score);\n        }\n        let idx = Vec.idxSort(bscore);\n        this.output.mol = mol.clone();\n        let anum = CoordUtil.atomAtPoint(this.output.mol, bx[idx[0]], by[idx[0]]);\n        if (anum == 0)\n            anum = this.output.mol.addAtom('C', bx[idx[0]], by[idx[0]]);\n        MolUtil.addBond(this.output.mol, atom, anum, order, type);\n        if (idx.length >= 2) {\n            this.output.altmol = mol.clone();\n            anum = CoordUtil.atomAtPoint(this.output.altmol, bx[idx[1]], by[idx[1]]);\n            if (anum == 0)\n                anum = this.output.altmol.addAtom('C', bx[idx[1]], by[idx[1]]);\n            MolUtil.addBond(this.output.altmol, atom, anum, order, type);\n        }\n    }\n    performBondChange(order, type) {\n        let mol = this.input.mol;\n        let bonds = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                bonds.push(n);\n        let switchType = type == Molecule.BONDTYPE_DECLINED || type == Molecule.BONDTYPE_INCLINED;\n        let stereoType = switchType || type == Molecule.BONDTYPE_UNKNOWN;\n        let anyChange = switchType;\n        for (let n = 0; n < bonds.length && !anyChange; n++) {\n            let b = bonds[n];\n            if (mol.bondOrder(b) != order && type == Molecule.BONDTYPE_NORMAL)\n                anyChange = true;\n            else if (mol.bondType(b) != type)\n                anyChange = true;\n        }\n        if (!anyChange) {\n            this.errmsg = 'No bond changes made.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 0; n < bonds.length; n++) {\n            let b = bonds[n], bfr = this.output.mol.bondFrom(b), bto = this.output.mol.bondTo(b);\n            if (switchType && this.output.mol.bondType(b) == type) {\n                this.output.mol.setBondFromTo(b, bto, bfr);\n            }\n            else if (this.output.mol.bondOrder(b) != order || this.output.mol.bondType(b) != type) {\n                if (!stereoType && order != this.output.mol.bondOrder(b))\n                    this.output.mol.setBondOrder(b, order);\n                else\n                    this.output.mol.setBondType(b, type);\n            }\n            else if (switchType) {\n                this.output.mol.setBondFromTo(b, bto, bfr);\n            }\n        }\n    }\n    performBondGeomAtom(geom, atom) {\n        let mol = this.input.mol;\n        let adj = mol.atomAdjList(atom);\n        let asz = adj.length, gsz = SketchUtil.GEOM_ANGLES[geom].length;\n        if (asz > gsz) {\n            this.errmsg = 'The current atom has more bonds than does the selected geometry.';\n            return;\n        }\n        if (asz == 0) {\n            this.performBondNew(atom, 1, Molecule.BONDTYPE_NORMAL);\n            return;\n        }\n        if (asz == gsz) {\n            this.output.mol = SketchUtil.refitAtomGeometry(mol, atom, geom);\n            if (this.output.mol == null)\n                this.errmsg = 'Could not re-fit the atom geometry.';\n            return;\n        }\n        let ang = CoordUtil.atomBondAngles(mol, atom);\n        let newang = SketchUtil.mapAngleSubstituent(geom, ang);\n        if (newang == null) {\n            this.output.mol = SketchUtil.refitAtomGeometry(mol, atom, geom);\n            if (this.output.mol == null)\n                this.errmsg = 'Could not re-fit the atom geometry.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        let theta = SketchUtil.pickNewAtomDirection(mol, atom, newang);\n        let x = this.output.mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(theta);\n        let y = this.output.mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(theta);\n        let anum = CoordUtil.atomAtPoint(this.output.mol, x, y);\n        if (anum == 0)\n            anum = this.output.mol.addAtom('C', x, y);\n        MolUtil.addBond(this.output.mol, atom, anum, 1);\n    }\n    performBondGeomBond(geom, bond) {\n        let mol = this.input.mol;\n        let bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        let ac1 = mol.atomAdjCount(bfr), ac2 = mol.atomAdjCount(bto);\n        if (ac1 > 1 && ac2 == 1) { }\n        else if (ac1 == 1 && ac2 > 1) {\n            let t = ac1;\n            ac1 = ac2;\n            ac2 = t;\n        }\n        else {\n            this.errmsg = 'One end of the bond must be terminal.';\n            return;\n        }\n        let adj = mol.atomAdjList(bfr);\n        let x1 = mol.atomX(bfr), y1 = mol.atomY(bfr);\n        let x2 = mol.atomX(bto), y2 = mol.atomY(bto);\n        let ang = [];\n        for (let n = 0, p = 0; n < adj.length; n++)\n            if (adj[n] != bto) {\n                ang.push(Math.atan2(mol.atomY(adj[n]) - y1, mol.atomX(adj[n]) - x1));\n            }\n        let newang = SketchUtil.mapAngleSubstituent(geom, ang);\n        if (newang == null) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        let bestAng = TWOPI + 1, bestX = 0, bestY = 0;\n        let curth = Math.atan2(y2 - y1, x2 - x1), r = norm_xy(x2 - x1, y2 - y1);\n        for (let n = 0; n < newang.length; n++) {\n            let th = angleDiff(newang[n], curth);\n            if (th < 0)\n                th += TWOPI;\n            if (n > 0 && th > bestAng)\n                continue;\n            let x = x1 + r * Math.cos(th + curth);\n            let y = y1 + r * Math.sin(th + curth);\n            if (CoordUtil.atomAtPoint(mol, x, y) > 0)\n                continue;\n            bestAng = th;\n            bestX = x;\n            bestY = y;\n        }\n        if (bestAng > TWOPI) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        this.output.mol.setAtomPos(bto, bestX, bestY);\n    }\n    checkAbbreviationReady() {\n        let junction = 0;\n        let mol = this.input.mol, subjmask = this.subjectMask;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let b1 = mol.bondFrom(n), b2 = mol.bondTo(n);\n            let atom = 0;\n            if ((subjmask[b1 - 1] && !subjmask[b2 - 1] && MolUtil.hasAbbrev(mol, b1)) ||\n                (subjmask[b2 - 1] && !subjmask[b1 - 1] && MolUtil.hasAbbrev(mol, b2))) {\n                this.errmsg = 'Already an abbreviation.';\n                return false;\n            }\n            if (subjmask[b1 - 1] && !subjmask[b2 - 1])\n                atom = b1;\n            else if (subjmask[b2 - 1] && !subjmask[b1 - 1])\n                atom = b2;\n            if (atom == 0 || atom == junction) { }\n            else if (junction == 0)\n                junction = atom;\n            else {\n                this.errmsg = 'The selected group must be terminal.';\n                return false;\n            }\n        }\n        return true;\n    }\n    mobileSide(bond, disqualTerminal = false) {\n        let { mol } = this.input;\n        let atom1 = mol.bondFrom(bond), atom2 = mol.bondTo(bond);\n        let g = Graph.fromMolecule(mol);\n        g.removeEdge(atom1 - 1, atom2 - 1);\n        let side1 = [], side2 = [];\n        for (let grp of g.calculateComponentGroups()) {\n            if (grp.includes(atom1 - 1))\n                side1 = Vec.add(grp, 1);\n            if (grp.includes(atom2 - 1))\n                side2 = Vec.add(grp, 1);\n        }\n        let weight1 = side1.length * (mol.atomRingBlock(atom1) > 0 ? 2 : 1);\n        let weight2 = side2.length * (mol.atomRingBlock(atom2) > 0 ? 2 : 1);\n        let sel1 = false, sel2 = false;\n        for (let a of side1)\n            if (this.isSelected(a)) {\n                sel1 = true;\n                break;\n            }\n        for (let a of side2)\n            if (this.isSelected(a)) {\n                sel2 = true;\n                break;\n            }\n        if (disqualTerminal && mol.atomAdjCount(atom1) == 1)\n            return [atom2, atom1, side2];\n        else if (disqualTerminal && mol.atomAdjCount(atom2) == 1)\n            return [atom1, atom2, side1];\n        else if (sel1 && !sel2) { }\n        else if ((sel2 && !sel1) || weight2 < weight1)\n            return [atom2, atom1, side2];\n        return [atom1, atom2, side1];\n    }\n    isSelected(atom) {\n        let mask = this.input.selectedMask;\n        return mask ? mask[atom - 1] : false;\n    }\n    removePolymerBlock(atoms) {\n        let polymer = new PolymerBlock(this.input.mol.clone());\n        for (let id of polymer.getIDList()) {\n            let unit = polymer.getUnit(id);\n            for (let atom of atoms)\n                if (unit.atoms.includes(atom)) {\n                    polymer.removeUnit(id);\n                    polymer.rewriteMolecule();\n                    this.output.mol = polymer.mol;\n                    return true;\n                }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=MoleculeActivity.js.map","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Mixture} from './Mixture';\nimport {MoleculeStream} from 'webmolkit/data/MoleculeStream';\nimport {StandardUnits, Units} from './Units';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {ActivityType, MoleculeActivity, SketchState} from 'webmolkit/sketcher/MoleculeActivity';\nimport {MixfileComponent} from './Mixfile';\n\n/*\n\tMixture normalisation options: recommendations for how to make a mixture more conformant. It is up to the caller\n\tto decide what to do with this information.\n*/\n\nexport interface NormMixtureNote\n{\n\torigin:number[];\n\n\tstereoEnum?:string[]; // if defined, contains stereo-enumerated versions of current\n\n\t// units converted into concentration, if both possible & necessary\n\tconcQuantity?:number | number[]; // a concentration numeric which is associated with the units below (two numbers in case of a range)\n\tconcError?:number; // optional standard error (applies to quantity when it's a scalar)\n\tconcUnits?:string; // units for quantity (e.g. %, mol/L, g, etc.)\n\tconcRelation?:string;\n}\n\nenum AbsType\n{\n\tNone,\n\tMass, // reference scale: g\n\tVolume, // reference scale: L\n\tMoles, // reference scale: mol\n}\n\nexport class NormMixture\n{\n\tpublic notes:NormMixtureNote[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor(private mixture:Mixture)\n\t{\n\t}\n\n\tpublic analyse():void\n\t{\n\t\tlet origins = this.mixture.getOrigins();\n\t\tlet compList = origins.map((origin) => this.mixture.getComponent(origin));\n\n\t\tfor (let n = 0; n < origins.length; n++)\n\t\t{\n\t\t\tlet note:NormMixtureNote = {origin: origins[n]};\n\n\t\t\t// stereocentres get expanded out\n\t\t\tlet comp = compList[n];\n\t\t\tif (comp.molfile && Vec.isBlank(comp.contents))\n\t\t\t{\n\t\t\t\tlet mol = MoleculeStream.readUnknown(comp.molfile);\n\t\t\t\tif (!mol) continue;\n\t\t\t\tlet stereo = this.enumerateStereo(mol);\n\t\t\t\tif (Vec.notBlank(stereo)) note.stereoEnum = stereo.map((mol) => MoleculeStream.writeMDLMOL(mol));\n\t\t\t}\n\n\t\t\tthis.notes.push(note);\n\t\t}\n\n\t\tlet childIndexes:number[][] = [];\n\t\tfor (let n = 0; n < origins.length; n++)\n\t\t{\n\t\t\tchildIndexes[n] = [];\n\t\t\tlet o = origins[n];\n\t\t\tfor (let i = n + 1; i < origins.length; i++)\n\t\t\t\tif (origins[i].length == o.length + 1 && Vec.equals(o, origins[i].slice(0, o.length))) childIndexes[n].push(i);\n\t\t}\n\n\t\t// conversion of \"absolute units\" to concentrations, where possible\n\t\tlet sumType = new Array(origins.length).fill(AbsType.None);\n\t\tlet sumAmount1 = Vec.numberArray(null, origins.length);\n\t\tlet sumAmount2 = Vec.numberArray(null, origins.length);\n\t\tlet sumError = Vec.numberArray(null, origins.length);\n\t\twhile (true)\n\t\t{\n\t\t\tlet modified = false;\n\n\t\t\tfor (let n = 0; n < origins.length; n++)\n\t\t\t{\n\t\t\t\tlet comp = compList[n], note = this.notes[n];\n\n\t\t\t\tif (sumType[n] == AbsType.None)\n\t\t\t\t{\n\t\t\t\t\t[sumType[n], sumAmount1[n], sumAmount2[n], sumError[n]] = this.toAbsoluteUnits(comp);\n\t\t\t\t\tif (sumType[n] != AbsType.None) modified = true;\n\t\t\t\t}\n\n\t\t\t\tif (Vec.isBlank(comp.contents)) continue;\n\n\t\t\t\t// if there's no absolute quantity presently available, see if we can add up the sub-components\n\t\t\t\tif (sumType[n] == AbsType.None)\n\t\t\t\t{\n\t\t\t\t\tlet amount = 0, childType = AbsType.None;\n\t\t\t\t\tfor (let i of childIndexes[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (sumType[i] == AbsType.None || sumAmount2[i] != null ||\n\t\t\t\t\t\t\t(childType != AbsType.None && sumType[i] != childType))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tchildType = AbsType.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchildType = sumType[i];\n\t\t\t\t\t\tamount += sumAmount1[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (childType != AbsType.None)\n\t\t\t\t\t{\n\t\t\t\t\t\tsumType[n] = childType;\n\t\t\t\t\t\tsumAmount1[n] = amount;\n\t\t\t\t\t\tmodified = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if current type is an absolute unit, see if all-but-one of the children have that same type\n\t\t\t\tif (sumType[n] != AbsType.None && childIndexes[n].length >= 2)\n\t\t\t\t{\n\t\t\t\t\tlet idxOne = -1, sum = 0;\n\t\t\t\t\tfor (let i of childIndexes[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (sumType[i] == AbsType.None)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (idxOne >= 0) {idxOne = -1; break;} // only one allowed\n\t\t\t\t\t\t\tidxOne = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (sumType[i] != sumType[n]) {idxOne = -1; break;} // can't be defined-but-different\n\t\t\t\t\t\telse if (sumAmount2[i] != null) {idxOne = -1; break;} // ranges disqualify\n\t\t\t\t\t\telse sum += sumAmount1[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (idxOne >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tsumType[idxOne] = sumType[n];\n\t\t\t\t\t\tsumAmount1[idxOne] = sumAmount1[n] - sum;\n\t\t\t\t\t\tmodified = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!modified) break;\n\t\t}\n\n\t\t// now use derived absolute units to infer concentration-types\n\t\tfor (let n = 0; n < origins.length; n++) if (sumType[n] != AbsType.None)\n\t\t{\n\t\t\tfor (let i of childIndexes[n]) if (sumType[i] != AbsType.None)\n\t\t\t{\n\t\t\t\tlet scale = 0, denom = sumAmount1[n], uri:string = null;\n\t\t\t\tif (sumType[i] == AbsType.Mass)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) [scale, uri] = [100 / denom, StandardUnits.pcWW];\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [100 / denom, StandardUnits.pcWV];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) {}\n\t\t\t\t}\n\t\t\t\telse if (sumType[i] == AbsType.Volume)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) {}\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [100 / denom, StandardUnits.pcVV];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) {}\n\t\t\t\t}\n\t\t\t\telse if (sumType[i] == AbsType.Moles)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) {}\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [1.0 / denom, StandardUnits.mol_L];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) [scale, uri] = [100 / denom, StandardUnits.pcMM];\n\t\t\t\t}\n\n\t\t\t\tif (uri != null)\n\t\t\t\t{\n\t\t\t\t\tif (sumAmount2[i] == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.notes[i].concQuantity = sumAmount1[i] * scale;\n\t\t\t\t\t\tthis.notes[i].concError = sumError[i] == null ? null : sumError[i] * scale;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.notes[i].concQuantity = [sumAmount1[i] * scale, sumAmount2[i] * scale];\n\t\t\t\t\t}\n\t\t\t\t\tthis.notes[i].concUnits = Units.uriToName(uri);\n\t\t\t\t\tthis.notes[i].concRelation = compList[n].relation;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic findNote(origin:number[]):NormMixtureNote\n\t{\n\t\tfor (let note of this.notes) if (Vec.equals(origin, note.origin)) return note;\n\t\treturn null;\n\t}\n\n\t// ------------ private methods ------------\n\n\t// if the given molecule has stereogenic centres (i.e. wavy bonds), enumerate them explicitly\n\tprivate enumerateStereo(mol:Molecule):Molecule[]\n\t{\n\t\tlet splitMolecule = (mol:Molecule):Molecule[] =>\n\t\t{\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++) if (mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN)\n\t\t\t{\n\t\t\t\tlet mol1 = mol.clone(), mol2 = mol.clone();\n\t\t\t\tif (mol.bondOrder(n) == 1)\n\t\t\t\t{\n\t\t\t\t\t// make up & down versions of the bond\n\t\t\t\t\tmol1.setBondType(n, Molecule.BONDTYPE_DECLINED);\n\t\t\t\t\tmol2.setBondType(n, Molecule.BONDTYPE_INCLINED);\n\t\t\t\t\treturn [mol1, mol2];\n\t\t\t\t}\n\t\t\t\telse if (mol.bondOrder(n) == 2)\n\t\t\t\t{\n\t\t\t\t\t// for a cis/trans double bond, use the sketcher algorithm to rotate it; if the rotation is rejected,\n\t\t\t\t\t// it'll just return the input molecule, with the stereolabel removed\n\t\t\t\t\tlet mol1 = mol.clone();\n\t\t\t\t\tmol1.setBondType(n, Molecule.BONDTYPE_NORMAL);\n\n\t\t\t\t\tlet mol2:Molecule = null;\n\t\t\t\t\tif (!mol.bondInRing(n))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet state:SketchState = {mol: mol1, currentAtom: 0, currentBond: n, selectedMask: null};\n\t\t\t\t\t\tlet activ = new MoleculeActivity(state, ActivityType.BondRotate, {});\n\t\t\t\t\t\tactiv.execute();\n\t\t\t\t\t\tif (!activ.errmsg && activ.output.mol) mol2 = activ.output.mol;\n\t\t\t\t\t}\n\t\t\t\t\treturn mol2 ? [mol1, mol2] : [mol1];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tlet list:Molecule[] = [mol];\n\t\tfor (let n = 0; n < list.length; n++)\n\t\t{\n\t\t\tlet emols = splitMolecule(list[n]);\n\t\t\tif (!emols) continue;\n\n\t\t\tlist[n] = emols[0];\n\t\t\tfor (let i = emols.length - 1; i >= 1; i--) list.splice(n + 1, 0, emols[i]);\n\t\t\tn--;\n\t\t}\n\n\t\treturn list.length > 1 ? list : null;\n\t}\n\n\t// converts the units within the component to \"absolute\" form, at a singular scale; return is type followed by\n\t// quantity1, quantity2, error (to capture ranges & errors, where applicable)\n\tprivate toAbsoluteUnits(comp:MixfileComponent):[AbsType, number, number, number]\n\t{\n\t\tif (!comp.units || comp.quantity == null /*|| typeof comp.quantity != 'number'*/) return [AbsType.None, null, null, null];\n\t\tlet uri = Units.nameToURI(comp.units);\n\t\tif (!uri) return [AbsType.None, null, null, null];\n\n\t\tlet scale = 0, type = AbsType.None;\n\n\t\tif (uri == StandardUnits.kg) [scale, type] = [1E3, AbsType.Mass];\n\t\telse if (uri == StandardUnits.g) [scale, type] = [1, AbsType.Mass];\n\t\telse if (uri == StandardUnits.mg) [scale, type] = [1E-3, AbsType.Mass];\n\t\telse if (uri == StandardUnits.ug) [scale, type] = [1E-6, AbsType.Mass];\n\t\telse if (uri == StandardUnits.ng) [scale, type] = [1E-9, AbsType.Mass];\n\t\telse if (uri == StandardUnits.L) [scale, type] = [1, AbsType.Volume];\n\t\telse if (uri == StandardUnits.mL) [scale, type] = [1E-3, AbsType.Volume];\n\t\telse if (uri == StandardUnits.uL) [scale, type] = [1E-6, AbsType.Volume];\n\t\telse if (uri == StandardUnits.nL) [scale, type] = [1E-9, AbsType.Volume];\n\t\telse if (uri == StandardUnits.mol) [scale, type] = [1, AbsType.Moles];\n\t\telse if (uri == StandardUnits.mmol) [scale, type] = [1E-3, AbsType.Moles];\n\t\telse if (uri == StandardUnits.umol) [scale, type] = [1E-6, AbsType.Moles];\n\t\telse if (uri == StandardUnits.nmol) [scale, type] = [1E-9, AbsType.Moles];\n\t\telse return [AbsType.None, null, null, null];\n\n\t\tif (typeof comp.quantity == 'number')\n\t\t{\n\t\t\tlet error = comp.error == null ? null : comp.error * scale;\n\t\t\treturn [type, (comp.quantity as number) * scale, null, error];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet [lo, hi] = comp.quantity as number[];\n\t\t\treturn [type, lo * scale, hi * scale, null];\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {deepClone} from 'webmolkit/util/util';\nimport {Mixfile, MIXFILE_VERSION, MixfileComponent} from './Mixfile';\nimport {Vec} from 'webmolkit/util/Vec';\n\n/*\n\tData container for mixtures: basically wraps the Mixfile interface, with additional functionality.\n\n\tNote that functionality should be assumed to be using shallow pointers to the underlying dictionary, unless\n\tspecified otherwise (e.g. clone).\n*/\n\nexport class Mixture\n{\n\t// ------------ public methods ------------\n\n\tconstructor(public mixfile?:Mixfile)\n\t{\n\t\tif (!mixfile) this.mixfile = {mixfileVersion: MIXFILE_VERSION};\n\t\telse if (!this.mixfile.mixfileVersion) this.mixfile.mixfileVersion = MIXFILE_VERSION;\n\t}\n\n\t// instantiates a new mixture object by casting a component into a root mixfile\n\tpublic static fromComponent(comp:MixfileComponent):Mixture\n\t{\n\t\tlet mixfile = deepClone(comp) as Mixfile;\n\t\tmixfile.mixfileVersion = MIXFILE_VERSION;\n\t\treturn new Mixture(mixfile);\n\t}\n\n\t// returns true if the mixture is blank\n\tpublic isEmpty():boolean\n\t{\n\t\treturn Mixture.isComponentEmpty(this.mixfile);\n\t}\n\tpublic static isComponentEmpty(comp:MixfileComponent):boolean\n\t{\n\t\tconst BITS = ['name', 'description', 'synonyms', 'formula', 'molfile', 'inchi', 'inchiKey', 'smiles',\n\t\t\t\t\t  'ratio', 'quantity', 'units', 'relation', 'identifiers', 'links'];\n\t\tfor (let bit of BITS) if ((comp as any)[bit] != null) return false;\n\t\tif (Vec.arrayLength(comp.contents) > 0) return false;\n\t\treturn true;\n\t}\n\n\t// returns true if there's something to put in the quantity section\n\tpublic static hasQuantity(comp:MixfileComponent):boolean\n\t{\n\t\treturn comp.quantity != null || comp.ratio != null;\n\t}\n\n\t// makes a deep copy of self\n\tpublic clone():Mixture\n\t{\n\t\treturn new Mixture(deepClone(this.mixfile));\n\t}\n\n\t// returns true if the two mixtures are identical at all parts of their branch structure\n\tpublic equals(other:Mixture):boolean\n\t{\n\t\tif (other == null) return false;\n\t\treturn this.recursiveEqual(this.mixfile, other.mixfile);\n\t}\n\n\t// unpacks a string into a mixture; throws an exception if anything went wrong\n\tpublic static deserialise(data:string):Mixture\n\t{\n\t\tlet mixfile = JSON.parse(data);\n\t\treturn new Mixture(mixfile);\n\t}\n\n\t// converts the entire underlying JSON mixfile into a prettyprinted string\n\tpublic serialise():string\n\t{\n\t\treturn Mixture.beautify(this.mixfile);\n\t}\n\n\t// likewise, for a sub-component\n\tpublic static serialiseComponent(comp:MixfileComponent):string\n\t{\n\t\treturn Mixture.beautify(comp);\n\t}\n\n\t// uses the \"origin vector\" to fetch a particular component; this is an array of indices, where [] indicates the root; its first\n\t// component is [0], the second child of its first component is [0,1], etc.\n\tpublic getComponent(origin:number[]):MixfileComponent\n\t{\n\t\tif (origin.length == 0) return this.mixfile;\n\t\tlet find:MixfileComponent = null, look = this.mixfile.contents || [];\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tfind = look[o];\n\t\t\tif (!find) return null;\n\t\t\tlook = find.contents || [];\n\t\t}\n\t\treturn find;\n\t}\n\tpublic getParentComponent(origin:number[]):MixfileComponent\n\t{\n\t\tif (origin.length == 0) return null;\n\t\torigin = origin.slice();\n\t\torigin.pop();\n\t\treturn this.getComponent(origin);\n\t}\n\n\t// returns a flat list of all components, i.e. without any hierarchy; these are all pointers to the originals, so\n\t// modifications can be made directly\n\tpublic getComponents():MixfileComponent[]\n\t{\n\t\tlet list:MixfileComponent[] = [], stack:MixfileComponent[] = [this.mixfile];\n\t\twhile (stack.length > 0)\n\t\t{\n\t\t\tlet comp = stack.shift();\n\t\t\tlist.push(comp);\n\t\t\tif (comp.contents) for (let sub of comp.contents) stack.push(sub);\n\t\t}\n\t\treturn list;\n\t}\n\n\t// returns an array that is equal in size to the number of nodes; each entry contains origin of that node\n\tpublic getOrigins():number[][]\n\t{\n\t\tlet origins:number[][] = [];\n\n\t\tlet nodeEnum = (origin:number[], comp:MixfileComponent):void =>\n\t\t{\n\t\t\torigins.push(origin);\n\t\t\tfor (let n = 0; n < Vec.arrayLength(comp.contents); n++) nodeEnum(Vec.append(origin, n), comp.contents[n]);\n\t\t};\n\n\t\tnodeEnum([], this.mixfile);\n\t\treturn origins;\n\t}\n\n\t// replaces a component at a given position; returns true if the new component was different to the old one\n\tpublic setComponent(origin:number[], comp:MixfileComponent):boolean\n\t{\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\n\t\t// copy over the dictionary entries in 'comp', noting if anything changed\n\t\tlet modified = false;\n\t\tfor (let k in comp)\n\t\t{\n\t\t\tlet v = (comp as any)[k];\n\t\t\tif (v != (find as any)[k])\n\t\t\t{\n\t\t\t\t(find as any)[k] = v;\n\t\t\t\tmodified = true;\n\t\t\t}\n\t\t}\n\n\t\t// cleanup by removing explicit nulls\n\t\tObject.keys(find).forEach((key:string) => {if ((find as any)[key] == null) delete (find as any)[key];});\n\n\t\treturn modified;\n\t}\n\n\t// deletes the indicated component, and collapses any child nodes into its own position (as opposed to just deleting\n\t// them too)\n\tpublic deleteComponent(origin:number[]):void\n\t{\n\t\tif (origin.length == 0) return; // can't delete the whole thing\n\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents, parent = look;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tparent = look;\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\t\tlet idx = origin[origin.length - 1];\n\t\tparent.splice(idx, 1);\n\t\tif (look) for (let c of look) parent.splice(idx++, 0, c);\n\t}\n\n\t// insert a new component \"above\" the existing one, and handle the reparenting\n\tpublic prependBefore(origin:number[], comp:MixfileComponent):void\n\t{\n\t\t// slightly different when prepending before the root element\n\t\tif (origin.length == 0)\n\t\t{\n\t\t\tlet mixfile = this.mixfile;\n\t\t\tlet subcomp:MixfileComponent = {};\n\t\t\tconst SKIP = ['mixfileVersion', 'contents'];\n\t\t\tfor (let key in (mixfile as any)) if (!SKIP.includes(key))\n\t\t\t{\n\t\t\t\t(subcomp as any)[key] = (mixfile as any)[key];\n\t\t\t\tdelete (mixfile as any)[key];\n\t\t\t}\n\t\t\tmixfile.contents = [subcomp];\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents, parent = look;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tparent = look;\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\t\tlet idx = origin[origin.length - 1];\n\t\tparent[idx] = comp;\n\t\tcomp.contents = [find];\n\t}\n\n\t// takes an origin vector and splits it into {parent origin} and {child index}; returns null on both counts if this is the root node\n\tpublic static splitOrigin(origin:number[]):[number[], number]\n\t{\n\t\tif (origin.length == 0) return [null, null];\n\t\tlet parent = origin.slice(0);\n\t\tlet idx = parent.splice(origin.length - 1, 1)[0];\n\t\treturn [parent, idx];\n\t}\n\n\t// makes a JSON object into a nicely formatted string for human readability\n\tpublic static beautify(json:any):string\n\t{\n\t\tlet lines = JSON.stringify(json, null, 4).split('\\n');\n\t\tlet regex = /^(\\s*\\\"\\w+\\\": )([\\[\\{].*)$/, regpad = /^(\\s*)/;\n\t\tfor (let n = 0; n < lines.length; n++)\n\t\t{\n\t\t\tlet match = regex.exec(lines[n]);\n\t\t\tif (!match) continue;\n\t\t\tlet padding = regpad.exec(lines[n]);\n\t\t\tlines[n] = match[1] + '\\n' + padding[1] + match[2];\n\t\t}\n\t\treturn lines.join('\\n');\n\t}\n\n\t// ------------ private methods ------------\n\n\t// returns true if this component, and all sub-components, are equal\n\tprivate recursiveEqual(comp1:MixfileComponent, comp2:MixfileComponent):boolean\n\t{\n\t\tlet dict1:any = comp1, dict2:any = comp2;\n\t\t/*let keys1 = Object.keys(dict1), keys2 = Object.keys(dict2);\n\t\tlet i:number;\n\t\tif ((i = keys1.indexOf('contents')) >= 0) keys1.splice(i, 1);\n\t\tif ((i = keys2.indexOf('contents')) >= 0) keys2.splice(i, 1);*/\n\t\tlet keys1:string[] = [], keys2:string[] = [];\n\t\tfor (let k in dict1) if (k != 'contents' && dict1[k] != null) keys1.push(k);\n\t\tfor (let k in dict2) if (k != 'contents' && dict2[k] != null) keys2.push(k);\n\t\tkeys1.sort();\n\t\tkeys2.sort();\n\t\tif (!Vec.equals(keys1, keys2)) return false; // different keys (less contents) is a dealbreaker\n\t\tfor (let k of keys1)\n\t\t{\n\t\t\tlet v1 = dict1[k], v2 = dict2[k];\n\t\t\tif (Array.isArray(v1) && Array.isArray(v2))\n\t\t\t{\n\t\t\t\tif (!Vec.equals(v1, v2)) return false;\n\t\t\t}\n\t\t\telse // assume scalar\n\t\t\t{\n\t\t\t\tif (v1 != v2) return false;\n\t\t\t}\n\t\t}\n\n\t\tlet len = Vec.arrayLength(comp1.contents);\n\t\tif (len != Vec.arrayLength(comp2.contents)) return false;\n\t\tfor (let n = 0; n < len; n++) if (!this.recursiveEqual(comp1.contents[n], comp2.contents[n])) return false;\n\n\t\treturn true;\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\n/*\n\tThe Mixfile is a raw definition of the contents of a mixture, which maps directly to the JSON datastructure\n\tthat holds the serialised content. For keeping an operable mixture instance, see the Mixture class.\n*/\n\nexport const MIXFILE_VERSION = 1.00; // version number to use for newly created instances\n\nexport type MixfileMetadatum = string | (string | number)[];\n\nexport interface Mixfile extends MixfileComponent\n{\n\tmixfileVersion:number;\n}\n\nexport interface MixfileComponent\n{\n\tname?:string;\n\tdescription?:string;\n\tsynonyms?:string[];\n\n\t// molecular specification: none of them are mandatory, but if more than one is specified, they must refer to the same species, \n\t// to the extent that the format allows; InChI strings are expected to be standard, while SMILES are not\n\tformula?:string;\n\tmolfile?:string;\n\tinchi?:string;\n\tinchiKey?:string;\n\tsmiles?:string;\n\n\t// if the concentration is known, then these fields should be filled out as appropriate; if the concentration is a ratio,\n\t// it is relative to all of the components within the same branch\n\tquantity?:number | number[]; // a concentration numeric which is associated with the units below (two numbers in case of a range)\n\terror?:number; // optional standard error (applies to quantity when it's a scalar)\n\tratio?:number[]; // a ratio, specified as [numerator, denominator]\n\tunits?:string; // units for quantity (e.g. %, mol/L, g, etc.)\n\trelation?:string; // optional modifier when applied to quantity (e.g. >, <, ~)\n\n\t// identifiers that map the substance to external databases (e.g. PubChem, ChemSpider, CAS, etc.); identifiers are ID numbers, and\n\t// the meaning is implied by the context; links should be resolvable URLs, which are an alternative way of locating external\n\t// resources; in some cases where there are multiple identifiers, the value should be specified as an array\n\tidentifiers?:Record<string, string | string[]>;\n\tlinks?:Record<string, string | string[]>;\n\n\t// metadata starts with an IRI that defines the core concept, and then may be followed by scalar data and/or other IRIs; this allows\n\t// discrete facts to be asserted about the component, as well as numeric values such as physical properties and their units\n\tmetadata?:MixfileMetadatum[];\n\n\t// subcomponents: if this is a discrete molecular entity, then there will be none; usually there are either 0 or 2-or-more; in cases\n\t// where there are any subcomponents, any of the properties above apply to all of these subcomponents collectively\n\tcontents?:MixfileComponent[];\n}\n\n// useful for cleaning up external JSON content\nexport const MIXFILE_COMPONENT_FIELDS =\n[\n\t'name', 'description', 'synonyms', 'formula', 'molfile', 'inchi', 'inchiKey', 'smiles',\n\t'ratio', 'quantity', 'units', 'relation', 'identifiers', 'links', 'contents'\n];\nexport const MIXFILE_ROOT_FIELDS =\n[\n\t'mixfileVersion', ...MIXFILE_COMPONENT_FIELDS\n];\n\n/* orignal example of what the format might look like (1st draft):\n{\n\t\"mixture\": \"1.0 M lithium diisopropyl amide in THF/hexanes\",\n\t\"contents\":\n\t[\n\t\t{\n\t\t\t\"name\": \"lithium diisopropylamide\",\n\t\t\t\"synonyms\": [\"LDA\", \"(iPr)2N.Li\"],\n\t\t\t\"formula\": \"C6H14LiN\",\n\t\t\t\"pubchem\": \"2724682\",\n\t\t\t\"chemspider\": \"2006804\",\n\t\t\t\"inchi\": \"InChI=1S/C6H14N.Li/c1-5(2)7-6(3)4;/h5-6H,1-4H3;/q-1;+1\",\n\t\t\t\"smiles\": \"[Li+].CC(C)[N-]C(C)C\",\n\t\t\t\"molfile\": \"\\nOpenMolecule\\n\\n  8  7  0  0  0  0  0  0  0  0999 V2000\\n    0.0000    0.0000    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\\n    1.5000    0.0000    0.0000 Li  0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.7500    1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.7500   -1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.0000    2.5981    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -2.2500    1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n    0.0000   -2.5981    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -2.2500   -1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n  1  2  1  0  0  0  0\\n  1  3  1  0  0  0  0\\n  1  4  1  0  0  0  0\\n  3  5  1  0  0  0  0\\n  3  6  1  0  0  0  0\\n  4  7  1  0  0  0  0\\n  4  8  1  0  0  0  0\\nM  END\\n\",\n\t\t\t\"quantity\": 1.0,\n\t\t\t\"units\": \"mol/L\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"solvent\",\n\t\t\t\"contents\":\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"tetrahydrofuran\",\n\t\t\t\t\t\"synonyms\": [\"THF\"],\n\t\t\t\t\t\"formula\": \"C4H8O\",\n\t\t\t\t\t\"pubchem\": \"8028\",\n\t\t\t\t\t\"chemspider\": \"7737\",\n\t\t\t\t\t\"inchi\": \"InChI=1S/C4H8O/c1-2-4-5-3-1/h1-4H2\",\n\t\t\t\t\t\"smiles\": \"C1CCOC1\",\n\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\"fraction\": [1, 8]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"group\": \"hexanes\",\n\t\t\t\t\t\"fraction\": [7, 8],\n\t\t\t\t\t\"contents\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"n-hexane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"8058\",\n\t\t\t\t\t\t\t\"chemspider\": \"7767\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-3-5-6-4-2/h3-6H2,1-2H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCCCCC\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [50, 70]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"methylcyclopentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7296\",\n\t\t\t\t\t\t\t\"chemspider\": \"7024\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H12/c1-6-4-2-3-5-6/h6H,2-5H2,1H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CC1CCCC1\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [10, 20]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"2-methypentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7892\",\n\t\t\t\t\t\t\t\"chemspider\": \"7604\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-4-5-6(2)3/h6H,4-5H2,1-3H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCCC(C)C\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [1, 5]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"3-methylpentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7282\",\n\t\t\t\t\t\t\t\"chemspider\": \"7010\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-4-6(3)5-2/h6H,4-5H2,1-3H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCC(C)CC\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [1, 5]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"other hexanes\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n*/\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {deepClone} from 'webmolkit/util/util';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {MoleculeStream} from 'webmolkit/data/MoleculeStream';\nimport {MolUtil} from 'webmolkit/data/MolUtil';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Mixfile, MixfileComponent} from './Mixfile';\nimport {NormMixture, NormMixtureNote} from './NormMixture';\nimport {Mixture} from './Mixture';\nimport {InChIDelegate} from './InChIDelegate';\nimport {Units} from './Units';\n\n// quick implementation of CRC hash codes\nlet crc_table:number[] = [];\nfunction make_crc_table():void\n{\n\tif (crc_table.length > 0) return;\n\tfor (let n = 0; n < 256; n++)\n\t{\n\t\tlet c = n;\n\t\tfor (let i = 0; i < 8; i++) if ((c & 1) != 0) c = 0xEDB88320 ^ (c >>> 1); else c = (c >>> 1);\n\t\tcrc_table.push(c);\n\t}\n}\nconst BOOT_CRC = 0xFFFFFFFF;\nfunction start_crc():number {return BOOT_CRC;}\nfunction feed_crc(crc:number, byte:number):number\n{\n\tlet idx = (crc ^ byte) & 0xFF;\n\treturn crc_table[idx] ^ (crc >>> 8);\n}\nfunction end_crc(crc:number):number {return crc ^ BOOT_CRC;}\n\n// work-in-progress placeholder for the recursive MInChI assembler\ninterface MInChIBuilder\n{\n\tlayerN:string; // N-layer is the hierarchical form\n\tlayerG:string; // G-layer has the concentrations\n}\n\n// for marking the segments of the outgoing MInChI string according to category\nexport enum MInChISegment\n{\n\tNone = 0,\n\tHeader, // the initial recognition string\n\tComponent, // the components (of which there can be multiple contiguous instances)\n\tHierarchy, // the /n layer\n\tConcentration, // the /g layer\n}\n\n// augmented version of a component used to stash some MInChI-specific derived content\ninterface MInChIComponent extends MixfileComponent\n{\n\tinchiFrag:string;\n\tuseRatio:number;\n\tnote:NormMixtureNote;\n}\n\nconst MINCHI_VERSION = 'MInChI=0.99.1S';\n\n/*\n\tFormulates a MInChI string out of the given mixture.\n*/\n\nexport class ExportMInChI\n{\n\tprivate mixture:Mixture;\n\tprivate norm:NormMixture;\n\tprivate minchi = '?';\n\tprivate segment:MInChISegment[] = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(mixfile:Mixfile, private inchi:InChIDelegate)\n\t{\n\t\tthis.mixture = new Mixture(deepClone(mixfile));\n\t\tthis.norm = new NormMixture(this.mixture);\n\t\tthis.norm.analyse();\n\t}\n\n\t// this should generally be called first: any component that has a structure but not an InChI string gets one calculated,\n\t// which presumes that the external environment has been configured to allow this; returns true if anything was done, i.e.\n\t// the parameter mixture was modified; note that if any components have an InChI that is wrong, this will be believed\n\tpublic async fillInChI():Promise<boolean>\n\t{\n\t\tlet modified = false;\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile || comp.inchi) continue;\n\t\t\tlet mol:Molecule = null;\n\t\t\ttry {mol = MoleculeStream.readUnknown(comp.molfile);}\n\t\t\tcatch (e) {continue;} // silent failure if it's an invalid molecule\n\t\t\tif (MolUtil.isBlank(mol)) continue;\n\t\t\tlet {inchi, inchiKey} = await this.inchi.generate(mol);\n\t\t\tcomp.inchi = inchi;\n\t\t\tcomp.inchiKey = inchiKey;\n\t\t\tmodified = true;\n\t\t}\n\t\treturn modified;\n\t}\n\n\t// assembles the MInChI string: once this has completed, the result is available\n\tpublic formulate():void\n\t{\n\t\tlet modmix = this.mixture.clone();\n\t\t//this.sortContents(sortmix.contents);\n\n\t\tfor (let origin of modmix.getOrigins())\n\t\t{\n\t\t\tlet note = this.norm.findNote(origin);\n\t\t\tif (note) (modmix.getComponent(origin) as MInChIComponent).note = note;\n\t\t}\n\n\t\t// special deal: any component with >2 mixtures that has a consistent ratio definition needs to be marked\n\t\t// at the parent-component level\n\t\tskip: for (let comp of modmix.getComponents()) if (Vec.len(comp.contents) >= 2)\n\t\t{\n\t\t\tif (Vec.len(comp.contents[0].ratio) != 2) continue;\n\t\t\tlet [numer, denom] = comp.contents[0].ratio;\n\t\t\tfor (let n = 1; n < comp.contents.length; n++)\n\t\t\t{\n\t\t\t\tlet ratio = comp.contents[n].ratio;\n\t\t\t\tif (Vec.len(ratio) != 2 || ratio[1] != denom) continue skip;\n\t\t\t\tnumer += ratio[0];\n\t\t\t}\n\t\t\tif (numer != denom) continue;\n\t\t\tfor (let sub of comp.contents) (sub as MInChIComponent).useRatio = sub.ratio[0];\n\t\t}\n\n\t\t// assemble the InChI fragments - which is sorted and unique and devoid of blanks; same for \"placenames\", which are\n\t\t// terminal components that have name and concentration information, but no InChI\n\t\tlet inchiList:string[] = [];\n\t\tconst PFX = 'InChI=1S/'; // if it doesn't start with this, we don't consider it a valid InChI\n\t\tfor (let origin of modmix.getOrigins())\n\t\t{\n\t\t\tlet mcomp = modmix.getComponent(origin) as MInChIComponent;\n\t\t\tif (Vec.len(mcomp.contents) > 0) continue; // leaf nodes only need apply\n\n\t\t\tmcomp.inchiFrag = mcomp.inchi || '';\n\t\t\tif (mcomp.inchiFrag.startsWith(PFX)) mcomp.inchiFrag = mcomp.inchiFrag.substring(PFX.length);\n\t\t\tif (!inchiList.includes(mcomp.inchiFrag)) inchiList.push(mcomp.inchiFrag);\n\t\t}\n\t\tinchiList.sort();\n\n\t\tlet root = modmix.mixfile as any as MInChIComponent;\n\t\tlet builder = this.assembleContents(root, inchiList);\n\n\t\tthis.minchi = '';\n\t\tthis.segment = [];\n\n\t\tlet appendSegment = (str:string, type:MInChISegment):void =>\n\t\t{\n\t\t\tthis.minchi += str;\n\t\t\tfor (let n = 0; n < str.length; n++) this.segment.push(type);\n\t\t};\n\n\t\tappendSegment(MINCHI_VERSION, MInChISegment.Header);\n\t\tappendSegment('/', MInChISegment.None);\n\t\tfor (let n = 0; n < inchiList.length; n++)\n\t\t{\n\t\t\tif (n > 0) appendSegment('&', MInChISegment.None);\n\t\t\tappendSegment(inchiList[n], MInChISegment.Component);\n\t\t}\n\t\tappendSegment('/', MInChISegment.None);\n\t\tappendSegment('n' + builder.layerN, MInChISegment.Hierarchy);\n\t\tappendSegment('/', MInChISegment.None);\n\t\tappendSegment('g' + builder.layerG, MInChISegment.Concentration);\n\t}\n\n\t// returns the MInChI notationstring formulated as above\n\tpublic getResult():string\n\t{\n\t\treturn this.minchi;\n\t}\n\n\t// return the segmentation values that mark the type for each character (corresponding to the notation string)\n\tpublic getSegment():MInChISegment[]\n\t{\n\t\treturn this.segment;\n\t}\n\n\t// prepares a \"hash key\" for the mixture: this is basically a sorted unique list of the InChI keys for the structures; it has no concentration or hierarchy\n\t// information because these things are not canonical\n\tpublic makeLongHashKey():string\n\t{\n\t\tlet bits:string[] = [];\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile) continue;\n\t\t\tif (!comp.inchiKey) throw 'Mixture has InChIKey(s) missing';\n\t\t\tif (!comp.inchiKey.startsWith('InChIKey=')) throw 'Invalid InChI key: ' + comp.inchiKey;\n\t\t\tbits.push(comp.inchiKey.substring(9));\n\t\t}\n\t\tbits = Vec.sortedUnique(bits);\n\t\treturn 'Long-MInChIKey=' + bits.join(';');\n\t}\n\n\t// similar to above except fixed length and quite short\n\tpublic makeShortHashKey():string\n\t{\n\t\tmake_crc_table();\n\t\tconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\t\tconst NCRC = 4;\n\t\tlet crclist:number[] = [], pos = 0;\n\t\tfor (let n = 0; n < NCRC; n++) crclist.push(start_crc());\n\n\t\tlet feedCharacter = (letter:string) =>\n\t\t{\n\t\t\tlet idx = LETTERS.indexOf(letter);\n\t\t\tif (idx < 0) return;\n\t\t\tcrclist[pos] = feed_crc(crclist[pos], idx);\n\t\t\tpos = pos < NCRC - 1 ? pos + 1 : 0;\n\t\t};\n\n\t\tlet bits:string[] = [];\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile) continue;\n\t\t\tif (!comp.inchiKey) throw 'Mixture has InChIKey(s) missing';\n\t\t\tif (!comp.inchiKey.startsWith('InChIKey=')) throw 'Invalid InChI key: ' + comp.inchiKey;\n\t\t\tbits.push(comp.inchiKey.substring(9));\n\t\t}\n\t\tfor (let bit of Vec.sortedUnique(bits)) for (let letter of bit)\n\t\t{\n\t\t\tfeedCharacter(letter);\n\t\t}\n\n\t\tlet key = 'Short-MInChIKey=';\n\n\t\tfor (let crc of crclist)\n\t\t{\n\t\t\tcrc = end_crc(crc) >>> 1; // clear the least significant bit and the sign as well\n\t\t\tfor (let n = 0; n < 7; n++)\n\t\t\t{\n\t\t\t\tlet idx = crc % 26;\n\t\t\t\tkey += LETTERS[idx];\n\t\t\t\tcrc = Math.trunc(crc / 26);\n\t\t\t}\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t// turns a concentration into a suitable precursor string, or null otherwise\n\tpublic static formatConcentration(quantity:number | number[], error:number, useRatio:number, units:string, relation:string):string\n\t{\n\t\tlet mantissa = (value:number, exp:number):string => Math.round(value * Math.pow(10, -exp)).toString();\n\n\t\t// check for special deal: the \"useRatio\" property is defined if everything in this peer group has a ratio with\n\t\t// the same denominator and they add up correctly; when this isn't the case, it will fall through and convert to\n\t\t// a percentage\n\t\tif (useRatio != null)\n\t\t{\n\t\t\tlet exp = this.determineExponent([useRatio], 4);\n\t\t\treturn mantissa(useRatio, exp) + 'rt' + exp;\n\t\t}\n\n\t\t/*if (comp.ratio && comp.ratio.length >= 2)\n\t\t{\n\t\t\tlet numer = comp.ratio[0], denom = comp.ratio[1];\n\t\t\tif (!(denom > 0)) return null;\n\t\t\tlet value = 100 * numer / denom, exp = this.determineExponent([value], 4);\n\t\t\treturn mantissa(value, exp) + 'pp' + exp;\n\t\t}*/\n\n\t\tif (quantity == null || units == null) return null;\n\n\t\t// special deal (maybe temporary): units that are written with common names that map to a URI are converted automatically\n\t\tlet unitURI = units;\n\t\tif (!unitURI.startsWith('http://')) unitURI = Units.nameToURI(unitURI);\n\t\tif (!unitURI) return;\n\n\t\t// TODO: maybe another special deal for absolute weight/volume/mole quantities - convert them into ratios, to the extent that's\n\t\t// possible... maybe approximating where necessary\n\n\t\tlet bits:string[] = [];\n\n\t\tif (relation != null) bits.push(relation);\n\n\t\tlet values:number[] = typeof quantity == 'number' ? [quantity as number] : quantity;\n\t\tif (error != null) values.push(error);\n\n\t\tlet [mnemonic, scaled] = Units.convertToMInChI(unitURI, values);\n\t\tif (!mnemonic) return;\n\n\t\tlet exp = this.determineExponent(scaled, 4);\n\n\t\tbits.push(mantissa(scaled[0], exp));\n\t\tif (scaled.length > 1)\n\t\t{\n\t\t\tif (Array.isArray(quantity)) bits.push(':'); else bits.push('?');\n\t\t\tbits.push(mantissa(scaled[1], exp));\n\t\t}\n\t\tbits.push(mnemonic);\n\t\tbits.push(exp.toString());\n\n\t\treturn bits.join('');\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate assembleContents(mcomp:MInChIComponent, inchiList:string[]):MInChIBuilder\n\t{\n\t\tlet tree:MInChIBuilder = {layerN: '', layerG: ''};\n\t\tlet builder:MInChIBuilder = {layerN: '', layerG: ''};\n\n\t\t// emit sub-contents recursively\n\t\tif (Vec.len(mcomp.contents) > 0)\n\t\t{\n\t\t\tif (mcomp.contents != null) for (let subComp of mcomp.contents)\n\t\t\t{\n\t\t\t\tlet subTree = this.assembleContents(subComp as MInChIComponent, inchiList);\n\t\t\t\t//if (!subTree.layerN && !subTree.layerG) continue;\n\t\t\t\tif (tree.layerN.length > 0 || tree.layerG.length > 0)\n\t\t\t\t{\n\t\t\t\t\ttree.layerN += '&';\n\t\t\t\t\ttree.layerG += '&';\n\t\t\t\t}\n\t\t\t\ttree.layerN += subTree.layerN;\n\t\t\t\ttree.layerG += subTree.layerG;\n\t\t\t}\n\t\t}\n\n\t\t// append the current information\n\t\tlet idx = mcomp.inchiFrag != null ? inchiList.indexOf(mcomp.inchiFrag) + 1 : 0;\n\t\tif (idx > 0) builder.layerN += idx.toString();\n\n\t\tlet conc = ExportMInChI.formatConcentration(mcomp.quantity, mcomp.error, mcomp.useRatio, mcomp.units, mcomp.relation);\n\t\tif (!conc && mcomp.note)\n\t\t{\n\t\t\tlet {concQuantity, concError, concUnits, concRelation} = mcomp.note;\n\t\t\tconc = ExportMInChI.formatConcentration(concQuantity, concError, null, concUnits, concRelation);\n\t\t}\n\t\tif (conc) builder.layerG += conc;\n\n\t\tif (tree.layerN.length > 0 || tree.layerG.length > 0)\n\t\t{\n\t\t\tbuilder.layerN = '{' + tree.layerN + '}' + builder.layerN;\n\t\t\tbuilder.layerG = '{' + tree.layerG + '}' + builder.layerG;\n\t\t\tthis.shaveBeard(builder);\n\t\t}\n\n\t\treturn builder;\n\t}\n\n\t// removes unnecessary nesting stubble\n\tprivate shaveBeard(builder:MInChIBuilder):void\n\t{\n\t\twhile (builder.layerN.startsWith('{{') && builder.layerN.endsWith('}}') &&\n\t\t\t   builder.layerG.startsWith('{{') && builder.layerG.endsWith('}}'))\n\t\t{\n\t\t\tbuilder.layerN = builder.layerN.substring(1, builder.layerN.length - 1);\n\t\t\tbuilder.layerG = builder.layerG.substring(1, builder.layerG.length - 1);\n\t\t}\n\t}\n\n\t// given a positive number, gives out an appropriate exponent to scale it to, such that the mantissa can be an integer that accommodates\n\t// the required number of significant figures\n\tprivate static determineExponent(values:number[], sigfig:number):number\n\t{\n\t\tlet minval = Number.POSITIVE_INFINITY;\n\t\tfor (let v of values) minval = Math.min(minval, Math.abs(v));\n\n\t\tif (!Number.isFinite(minval) || Number.isNaN(minval) || minval <= 0) return 0;\n\n\t\tlet exp = Math.round(Math.log10(minval)) - sigfig;\n\t\t//let man = Math.round(minval * Math.pow(10, -exp));\n\n\t\tlet str:string[] = [];\n\t\tfor (let v of values) str.push(Math.round(v * Math.pow(10, -exp)).toString());\n\n\t\touter: while (true)\n\t\t{\n\t\t\tfor (let n = 0; n < str.length; n++)\n\t\t\t{\n\t\t\t\tif (!str[n].endsWith('0')) break outer;\n\t\t\t\tstr[n] = str[n].substring(0, str[n].length - 1);\n\t\t\t}\n\t\t\texp++;\n\t\t}\n\n\t\treturn exp;\n\t}\n}\n\n","import { FontData } from './FontData';\nexport class OutlineMeasurement {\n    constructor(offsetX, offsetY, pointScale) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.pointScale = pointScale;\n        this.invScale = 1 / pointScale;\n    }\n    scale() { return this.pointScale; }\n    angToX(ax) { return ax * this.pointScale + this.offsetX; }\n    angToY(ay) { return ay * -this.pointScale + this.offsetY; }\n    xToAng(px) { return (px - this.offsetX) * this.invScale; }\n    yToAng(py) { return (py - this.offsetY) * -this.invScale; }\n    yIsUp() { return false; }\n    measureText(str, fontSize) { return FontData.main.measureText(str, fontSize); }\n}\n//# sourceMappingURL=ArrangeMeasurement.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Mixfile} from './Mixfile';\nimport {Mixture} from './Mixture';\n\n/*\n\tCollection of mixtures: convenience methods for handling an array thereof, including serialisation.\n\n\tMost of the methods that fetch or modify the mixture content one item at a time make deep clones, so it is safe to\n\tassume that there are no dangling pointers. Exceptions include the constructor, bulk modifications, and methods marked\n\tas providing direct access.\n*/\n\nexport class MixtureCollection\n{\n\tprivate mixtures:Mixture[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor(mixtures?:Mixture[])\n\t{\n\t\tif (mixtures) this.mixtures = mixtures.slice(0);\n\t}\n\n\tpublic get count():number\n\t{\n\t\treturn this.mixtures.length;\n\t}\n\tpublic getMixture(idx:number):Mixture\n\t{\n\t\treturn this.mixtures[idx].clone();\n\t}\n\tpublic getMixtureDirect(idx:number):Mixture\n\t{\n\t\treturn this.mixtures[idx];\n\t}\n\tpublic setMixture(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures[idx] = mixture.clone();\n\t}\n\tpublic setMixtureDirect(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures[idx] = mixture;\n\t}\n\tpublic deleteMixture(idx:number):void\n\t{\n\t\tthis.mixtures.splice(idx, 1);\n\t}\n\tpublic appendMixture(mixture:Mixture):number\n\t{\n\t\tthis.mixtures.push(mixture.clone());\n\t\treturn this.mixtures.length - 1;\n\t}\n\tpublic appendMixtureDirect(mixture:Mixture):number\n\t{\n\t\tthis.mixtures.push(mixture);\n\t\treturn this.mixtures.length - 1;\n\t}\n\tpublic appendCollection(collection:MixtureCollection):void\n\t{\n\t\tthis.mixtures = this.mixtures.concat(collection.mixtures);\n\t}\n\tpublic insertMixture(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures.splice(idx, 0, mixture.clone());\n\t}\n\tpublic swapMixtures(idx1:number, idx2:number):void\n\t{\n\t\tlet [m1, m2] = [this.mixtures[idx1], this.mixtures[idx2]];\n\t\tthis.mixtures[idx1] = m2;\n\t\tthis.mixtures[idx2] = m1;\n\t}\n\n\t// unpacks a string into a mixture; throws an exception if anything went wrong\n\tpublic static deserialise(data:string):MixtureCollection\n\t{\n\t\tlet list = JSON.parse(data);\n\t\tif (!Array.isArray(list)) throw 'Input content is not a JSON array.';\n\t\tlet mixtures:Mixture[] = [];\n\t\tfor (let mixfile of list) mixtures.push(new Mixture(mixfile));\n\t\treturn new MixtureCollection(mixtures);\n\t}\n\n\t// converts the entire underlying JSON mixfile into a prettyprinted string; note the optional beautification parameter:\n\t// if not specified, small collections will get nice whitespace, whereas large ones will be densely packed for efficiency\n\tpublic serialise(beautify?:boolean):string\n\t{\n\t\tlet list:Mixfile[] = [];\n\t\tfor (let mixture of this.mixtures) list.push(mixture.mixfile);\n\t\t//return beautify || list.length <= 1000 ? Mixture.beautify(list) : JSON.stringify(list);\n\t\tif (beautify || list.length <= 100) return Mixture.beautify(list);\n\t\t\n\t\tlet lines = list.map((mixfile) => JSON.stringify(mixfile));\n\t\treturn '[\\n    ' + lines.join(',\\n    ') + '\\n]\\n';\n\t}\n\n\t// ------------ private methods ------------\n\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2021 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {DrawMixture} from '../mixture/DrawMixture';\nimport {ExportMInChI, MInChISegment} from '../mixture/ExportMInChI';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {escapeHTML} from 'webmolkit/util/util';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport {MixtureCollection} from '../mixture/MixtureCollection';\nimport {InChI} from '../nodejs/InChI';\n\n/*\n\tLoads a mixture collection and emits it as visualisable HTML.\n*/\n\nexport class RenderHTML\n{\n\tconstructor(private htmlFile:string, private withMInChI:boolean)\n\t{\n\t}\n\n\tpublic async exec():Promise<void>\n\t{\n\t\tlet content:string;\n\t\ttry {content = fs.readFileSync(this.htmlFile).toString();}\n\t\tcatch (ex) {throw 'Unable to read file ' + this.htmlFile + ': ' + ex;}\n\n\t\tlet mixlist = MixtureCollection.deserialise(content);\n\t\tif (mixlist.count == 0) throw 'Nothing to render';\n\n\t\tlet emitln = (line:string):void => console.log(line);\n\t\tlet emit = (txt:string):void => {process.stdout.write(txt);};\n\n\t\temitln('<html>');\n\t\temitln('<style>');\n\t\temitln('table {border-collapse: collapse;}');\n\t\temitln('td {border: 1px solid black; padding: 0.2em;}');\n\t\temitln('.header {background-color: #FFC0C0;}');\n\t\temitln('.component {background-color: #C0C0FF;}');\n\t\temitln('.hierarchy {background-color: #E0E080;}');\n\t\temitln('.concentration {background-color: #80E080;}');\n\t\temitln('</style>');\n\t\t\n\t\temitln('<body><table>');\n\n\t\tlet policy = RenderPolicy.defaultColourOnWhite(15);\n\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\n\t\tfor (let n = 0; n < mixlist.count; n++)\n\t\t{\n\t\t\tlet mixture = mixlist.getMixtureDirect(n);\n\n\t\t\temitln('<tr>');\n\t\t\temitln(`<td>${n + 1}</td>`);\n\n\t\t\tlet layout = new ArrangeMixture(mixture, measure, policy);\n\t\t\tlayout.arrange();\n\n\t\t\tlet gfx = new MetaVector();\n\t\t\tlet draw = new DrawMixture(layout, gfx);\n\t\t\tdraw.draw();\n\t\t\tgfx.normalise();\n\n\t\t\temitln('<td>');\n\t\t\temitln(gfx.createSVG());\n\t\t\temitln('</td>');\n\n\t\t\tif (this.withMInChI)\n\t\t\t{\n\t\t\t\tlet maker = new ExportMInChI(mixture.mixfile, new InChI());\n\t\t\t\tawait maker.fillInChI();\n\t\t\t\tmaker.formulate();\n\t\t\t\t//let minchi = creator.getResult();\n\t\t\t\t//emitln('<td><pre>' + escapeHTML(minchi) + '</pre></td>');\n\n\t\t\t\temit('<td><pre>');\n\t\t\t\tlet minchi = maker.getResult(), segment = maker.getSegment();\n\t\t\t\tfor (let n = 0; n < minchi.length; n++)\n\t\t\t\t{\n\t\t\t\t\temit('<span');\n\t\t\t\t\tif (segment[n] == MInChISegment.Header) emit(' class=\"header\"');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Component) emit(' class=\"component\"');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Hierarchy) emit(' class=\"hierarchy\"');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Concentration) emit(' class=\"concentration\"');\n\t\t\t\t\temit('>' + escapeHTML(minchi[n]) + '</span>');\n\t\t\t\t}\n\t\t\t\temitln('</pre></td>');\n\t\t\t}\n\n\t\t\temitln('</tr>');\n\t\t}\n\n\t\temitln('</table></body></html>');\n\t}\n\n\t// ------------ private methods ------------\n}\n\n","import { DataSheet } from '../data/DataSheet';\nimport { Vec } from '../util/Vec';\nexport class Aspect {\n    constructor(code, ds, allowModify) {\n        this.code = code;\n        this.allowModify = true;\n        this.ds = ds ? ds : new DataSheet();\n        if (allowModify != null)\n            this.allowModify = allowModify;\n    }\n    isColumnReserved(colName) { return false; }\n    areColumnsReserved(colNames) {\n        let resMask = Vec.booleanArray(false, colNames.length);\n        for (let n = 0; n < colNames.length; n++)\n            resMask[n] = this.isColumnReserved(colNames[n]);\n        return resMask;\n    }\n    rowFirstBlock(row) { return true; }\n    rowBlockCount(row) { return 1; }\n    aspectUnion(other) { }\n    initiateNewRow(row) { }\n    columnEffectivelyBlank(row) { return []; }\n    numTextRenderings(row) { return 0; }\n    produceTextRendering(row, idx) { return null; }\n    numGraphicRenderings(row) { return 0; }\n    produceGraphicRendering(row, idx, policy) { return null; }\n    numHeaderRenderings() { return 0; }\n    produceHeaderRendering(idx) { return null; }\n}\nAspect.TEXT_PLAIN = 0;\nAspect.TEXT_LINK = 1;\nAspect.TEXT_HTML = 2;\n//# sourceMappingURL=Aspect.js.map","let supportedAspects = {};\nexport function registerAspect(classdef) {\n    let code = classdef.CODE, name = classdef.NAME;\n    supportedAspects[code] = { code, name, classdef };\n}\nexport class AspectList {\n    constructor(ds) {\n        this.ds = ds;\n    }\n    list() {\n        let present = [], absent = [];\n        let codes = new Set();\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            codes.add(this.ds.getExtType(n));\n        for (let code in supportedAspects)\n            if (codes.has(code))\n                present.push(code);\n            else\n                absent.push(code);\n        return [present, absent];\n    }\n    instantiate(code) {\n        let supp = supportedAspects[code];\n        if (supp)\n            return new supp.classdef(this.ds);\n        return null;\n    }\n    enumerate() {\n        let aspects = [];\n        for (let n = 0; n < this.ds.numExtensions; n++) {\n            let code = this.ds.getExtType(n);\n            if (supportedAspects[code])\n                aspects.push(this.instantiate(code));\n        }\n        return aspects;\n    }\n    aspectName(code) {\n        let supp = supportedAspects[code];\n        return supp ? supp.name : null;\n    }\n}\n//# sourceMappingURL=AspectList.js.map","import { MoleculeStream } from '../data/MoleculeStream';\nimport { Aspect } from './Aspect';\nimport { registerAspect } from './AspectList';\nexport class AssayProvenanceHeader {\n    constructor() {\n        this.prefixes = {};\n        this.targetName = '';\n        this.targetURI = '';\n        this.organismName = '';\n        this.organismURI = '';\n        this.targetTypeName = '';\n        this.targetTypeURI = '';\n        this.cellName = '';\n        this.cellURI = '';\n        this.assayTypeName = '';\n        this.assayTypeURI = '';\n        this.assayDescription = '';\n        this.sourceName = '';\n        this.sourceURI = '';\n        this.sourceVersion = '';\n        this.documentName = '';\n        this.documentURI = '';\n        this.measureTypeName = '';\n        this.measureTypeURI = '';\n        this.unitNames = [];\n        this.unitURIs = [];\n    }\n}\nexport class AssayProvenance extends Aspect {\n    static isAssayProvenance(ds) {\n        for (let n = 0; n < ds.numExtensions; n++)\n            if (ds.getExtType(n) == AssayProvenance.CODE)\n                return true;\n        return false;\n    }\n    constructor(ds, allowModify) {\n        super(AssayProvenance.CODE, ds, allowModify);\n        this.setup();\n    }\n    getHeader() {\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == AssayProvenance.CODE)\n                return this.parseMetaData(this.ds.getExtData(n));\n        return null;\n    }\n    setHeader(header) {\n        let content = this.formatMetaData(header);\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == AssayProvenance.CODE) {\n                this.ds.setExtData(n, content);\n                return;\n            }\n        this.ds.appendExtension(AssayProvenance.NAME, AssayProvenance.CODE, content);\n    }\n    getMolecule(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_MOLECULE);\n        return col < 0 ? null : this.ds.getMolecule(row, col);\n    }\n    getName(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_NAME);\n        return col < 0 ? null : this.ds.getString(row, col);\n    }\n    getValue(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_VALUE);\n        return col < 0 ? null : this.ds.isNull(row, col) ? Number.NaN : this.ds.getReal(row, col);\n    }\n    getError(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_ERROR);\n        if (col < 0)\n            return null;\n        if (this.ds.isNull(row, col))\n            return Number.NaN;\n        let err = this.ds.getReal(row, col);\n        if (err <= 0)\n            return Number.NaN;\n        return err;\n    }\n    getUnits(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_UNITS);\n        return col < 0 ? null : this.ds.getString(row, col);\n    }\n    getRelation(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_RELATION);\n        return col < 0 ? null : this.ds.getString(row, col);\n    }\n    getSourceURI(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_SOURCEURI);\n        return col < 0 ? null : this.ds.getString(row, col);\n    }\n    setMolecule(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_MOLECULE);\n        if (col >= 0)\n            this.ds.setMolecule(row, col, v);\n    }\n    setName(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_NAME);\n        if (col >= 0)\n            this.ds.setString(row, col, v);\n    }\n    setValue(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_VALUE);\n        if (col < 0) { }\n        else if (Number.isNaN(v))\n            this.ds.setToNull(row, col);\n        else\n            this.ds.setReal(row, col, v);\n    }\n    setError(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_ERROR);\n        if (col < 0) { }\n        else if (Number.isNaN(v))\n            this.ds.setToNull(row, col);\n        else\n            this.ds.setReal(row, col, v);\n    }\n    setUnits(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_UNITS);\n        if (col >= 0)\n            this.ds.setString(row, col, v);\n    }\n    setRelation(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_RELATION);\n        if (col >= 0)\n            this.ds.setString(row, col, v);\n    }\n    setSourceURI(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_SOURCEURI);\n        if (col >= 0)\n            this.ds.setString(row, col, v);\n    }\n    setup() {\n        this.parseAndCorrect();\n    }\n    parseAndCorrect() {\n        let header = new AssayProvenanceHeader();\n        let got = false;\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == AssayProvenance.CODE) {\n                header = this.parseMetaData(this.ds.getExtData(n));\n                got = true;\n                break;\n            }\n        if (this.allowModify) {\n            this.ds.ensureColumn(AssayProvenance.COLNAME_MOLECULE, \"molecule\", 'Molecular structure of compound being measured');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_NAME, \"string\", 'Name of compound');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_VALUE, \"real\", 'Measured value');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_ERROR, \"real\", 'Experimental error of measurement');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_UNITS, \"string\", 'Units of measurement');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_RELATION, \"string\", 'Relation: exact, greater or less');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_SOURCEURI, \"string\", 'Source identifier for activity measurement');\n        }\n        if (!got && this.allowModify) {\n            let content = this.formatMetaData(header);\n            this.ds.appendExtension(AssayProvenance.NAME, AssayProvenance.CODE, content);\n        }\n    }\n    parseMetaData(content) {\n        let header = new AssayProvenanceHeader();\n        for (let line of content.split(/\\r?\\n/)) {\n            let eq = line.indexOf('=');\n            if (eq < 0)\n                continue;\n            if (line.startsWith('pfx:'))\n                header.prefixes[MoleculeStream.skUnescape(line.substring(4, eq))] = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('targetName='))\n                header.targetName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('targetURI='))\n                header.targetURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('organismName='))\n                header.organismName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('organismURI='))\n                header.organismURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('targetTypeName='))\n                header.targetTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('targetTypeURI='))\n                header.targetTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('cellName='))\n                header.cellName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('cellURI='))\n                header.cellURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('assayTypeName='))\n                header.assayTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('assayTypeURI='))\n                header.assayTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('assayDescription='))\n                header.assayDescription = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('sourceName='))\n                header.sourceName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('sourceURI='))\n                header.sourceURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('sourceVersion='))\n                header.sourceVersion = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('documentName='))\n                header.documentName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('documentURI='))\n                header.documentURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('measureTypeName='))\n                header.measureTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('measureTypeURI='))\n                header.measureTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('unit:')) {\n                header.unitNames.push(MoleculeStream.skUnescape(line.substring(5, eq)));\n                header.unitURIs.push(MoleculeStream.skUnescape(line.substring(eq + 1)));\n            }\n        }\n        return header;\n    }\n    formatMetaData(header) {\n        let content = '';\n        for (let pfx in header.prefixes)\n            content += 'pfx:' + MoleculeStream.skEscape(pfx) + '=' + MoleculeStream.skEscape(header.prefixes[pfx]) + '\\n';\n        content += 'targetName=' + MoleculeStream.skEscape(header.targetName) + '\\n';\n        content += 'targetURI=' + MoleculeStream.skEscape(header.targetURI) + '\\n';\n        content += 'organismName=' + MoleculeStream.skEscape(header.organismName) + '\\n';\n        content += 'organismURI=' + MoleculeStream.skEscape(header.organismURI) + '\\n';\n        content += 'targetTypeName=' + MoleculeStream.skEscape(header.targetTypeName) + '\\n';\n        content += 'targetTypeURI=' + MoleculeStream.skEscape(header.targetTypeURI) + '\\n';\n        content += 'cellName=' + MoleculeStream.skEscape(header.cellName) + '\\n';\n        content += 'cellURI=' + MoleculeStream.skEscape(header.cellURI) + '\\n';\n        content += 'assayTypeName=' + MoleculeStream.skEscape(header.assayTypeName) + '\\n';\n        content += 'assayTypeURI=' + MoleculeStream.skEscape(header.assayTypeURI) + '\\n';\n        content += 'assayDescription=' + MoleculeStream.skEscape(header.assayDescription) + '\\n';\n        content += 'sourceName=' + MoleculeStream.skEscape(header.sourceName) + '\\n';\n        content += 'sourceURI=' + MoleculeStream.skEscape(header.sourceURI) + '\\n';\n        content += 'sourceVersion=' + MoleculeStream.skEscape(header.sourceVersion) + '\\n';\n        content += 'documentName=' + MoleculeStream.skEscape(header.documentName) + '\\n';\n        content += 'documentURI=' + MoleculeStream.skEscape(header.documentURI) + '\\n';\n        content += 'measureTypeName=' + MoleculeStream.skEscape(header.measureTypeName) + '\\n';\n        content += 'measureTypeURI=' + MoleculeStream.skEscape(header.measureTypeURI) + '\\n';\n        for (let n = 0, num = Math.min(header.unitNames.length, header.unitURIs.length); n < num; n++)\n            content += 'unit:' + MoleculeStream.skEscape(header.unitNames[n]) + '=' + MoleculeStream.skEscape(header.unitURIs[n]) + '\\n';\n        return content;\n    }\n    plainHeading() { return AssayProvenance.NAME; }\n    isColumnReserved(colName) {\n        return colName == AssayProvenance.COLNAME_VALUE || colName == AssayProvenance.COLNAME_ERROR ||\n            colName == AssayProvenance.COLNAME_UNITS || colName == AssayProvenance.COLNAME_RELATION ||\n            colName == AssayProvenance.COLNAME_SOURCEURI;\n    }\n    numTextRenderings(row) { return 2; }\n    produceTextRendering(row, idx) {\n        let header = this.getHeader();\n        if (idx == 0) {\n            let tr = {\n                name: 'Activity',\n                descr: 'Activity measurement details for this record',\n                text: '',\n                type: Aspect.TEXT_PLAIN\n            };\n            let val = this.getValue(row), error = this.getError(row);\n            let units = this.getUnits(row), rel = this.getRelation(row);\n            tr.text = '';\n            if (!Number.isNaN(val)) {\n                if (rel)\n                    tr.text += rel + ' ';\n                tr.text += val;\n                if (!Number.isNaN(error))\n                    tr.text += ' \\u{00B1} ' + error;\n                if (units)\n                    tr.text += ' ' + units;\n            }\n            return tr;\n        }\n        else if (idx == 1) {\n            let tr = {\n                name: 'Source',\n                descr: 'Origin of the structure and activity measurement',\n                text: '',\n                type: Aspect.TEXT_LINK\n            };\n            let url = this.getSourceURI(row);\n            for (let pfx in header.prefixes)\n                if (url.startsWith(pfx + ':')) {\n                    url = header.prefixes[pfx] + url.substring(pfx.length + 1);\n                    break;\n                }\n            tr.text = url;\n            return tr;\n        }\n        return null;\n    }\n}\nAssayProvenance.CODE = 'org.mmi.aspect.AssayProvenance';\nAssayProvenance.NAME = 'Assay Provenance';\nAssayProvenance.COLNAME_MOLECULE = 'Molecule';\nAssayProvenance.COLNAME_NAME = 'Name';\nAssayProvenance.COLNAME_VALUE = 'Value';\nAssayProvenance.COLNAME_ERROR = 'Error';\nAssayProvenance.COLNAME_UNITS = 'Units';\nAssayProvenance.COLNAME_RELATION = 'Relation';\nAssayProvenance.COLNAME_SOURCEURI = 'SourceURI';\nAssayProvenance.URI_UNIT_M = 'http://purl.obolibrary.org/obo/UO_0000062';\nAssayProvenance.URI_UNIT_mM = 'http://purl.obolibrary.org/obo/UO_0000063';\nAssayProvenance.URI_UNIT_uM = 'http://purl.obolibrary.org/obo/UO_0000064';\nAssayProvenance.URI_UNIT_nM = 'http://purl.obolibrary.org/obo/UO_0000065';\nAssayProvenance.URI_UNIT_pM = 'http://purl.obolibrary.org/obo/UO_0000066';\nAssayProvenance.URI_UNIT_logM = 'http://www.bioassayontology.org/bao#BAO_0000101';\nAssayProvenance.URI_UNIT_perM = 'http://www.bioassayontology.org/bao#BAO_0000102';\nAssayProvenance.URI_UNIT_gL = 'http://purl.obolibrary.org/obo/UO_0000175';\nAssayProvenance.URI_UNIT_mgL = 'http://purl.obolibrary.org/obo/UO_0000273';\nAssayProvenance.URI_UNIT_ugL = 'http://purl.obolibrary.org/obo/UO_0000275';\nAssayProvenance.URI_UNIT_binary = 'http://www.bioassayontology.org/bao#BAO_0080023';\nregisterAspect(AssayProvenance);\n//# sourceMappingURL=AssayProvenance.js.map","import { MoleculeStream } from '../data/MoleculeStream';\nimport { Vec } from '../util/Vec';\nimport { Aspect } from './Aspect';\nimport { registerAspect } from './AspectList';\nexport class MeasurementData extends Aspect {\n    static isMeasurementData(ds) {\n        for (let n = 0; n < ds.numExtensions; n++)\n            if (ds.getExtType(n) == MeasurementData.CODE)\n                return true;\n        return false;\n    }\n    constructor(ds, allowModify) {\n        super(MeasurementData.CODE, ds, allowModify);\n        this.header = { units: [], fields: [] };\n        this.setup();\n    }\n    getHeader() {\n        return this.header;\n    }\n    setHeader(header) {\n        this.header = header;\n        let content = this.formatMetaData(header);\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == MeasurementData.CODE) {\n                this.ds.setExtData(n, content);\n                return;\n            }\n        this.ds.appendExtension(MeasurementData.NAME, MeasurementData.CODE, content);\n    }\n    effectHeader(header) {\n        this.setHeader(header);\n        this.ensureFields();\n    }\n    rename(fldidx, newName) {\n        let oldName = this.header.fields[fldidx].name;\n        if (oldName == newName)\n            return;\n        this.header.fields[fldidx].name = newName;\n        this.setHeader(this.header);\n        for (let sfx of [MeasurementData.SUFFIX_VALUE, MeasurementData.SUFFIX_ERROR, MeasurementData.SUFFIX_UNITS, MeasurementData.SUFFIX_MOD]) {\n            let col = this.ds.findColByName(oldName + sfx);\n            if (col >= 0)\n                this.ds.changeColumnName(col, newName + sfx, this.ds.colDescr(col));\n        }\n    }\n    reservedColumns(fldidx) {\n        let fieldName = this.header.fields[fldidx].name;\n        return [fieldName + MeasurementData.SUFFIX_VALUE, fieldName + MeasurementData.SUFFIX_ERROR,\n            fieldName + MeasurementData.SUFFIX_UNITS, fieldName + MeasurementData.SUFFIX_MOD];\n    }\n    getValue(row, fldidx) {\n        return this.getValueField(row, this.header.fields[fldidx]);\n    }\n    getValueField(row, field) {\n        let value = { value: Number.NaN, error: Number.NaN, units: '', mod: '' };\n        let colValue = this.ds.findColByName(field.name + MeasurementData.SUFFIX_VALUE, \"real\");\n        let colError = this.ds.findColByName(field.name + MeasurementData.SUFFIX_ERROR, \"real\");\n        let colUnits = this.ds.findColByName(field.name + MeasurementData.SUFFIX_UNITS, \"string\");\n        let colMod = this.ds.findColByName(field.name + MeasurementData.SUFFIX_MOD, \"string\");\n        if (colValue >= 0 && this.ds.notNull(row, colValue))\n            value.value = this.ds.getReal(row, colValue);\n        if (colError >= 0 && this.ds.notNull(row, colError))\n            value.error = this.ds.getReal(row, colError);\n        if (colUnits >= 0)\n            value.units = this.ds.getString(row, colUnits);\n        if (colMod >= 0)\n            value.mod = this.ds.getString(row, colMod);\n        return value;\n    }\n    setValue(row, fldidx, value) {\n        let fieldName = this.header.fields[fldidx].name;\n        let colValue = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_VALUE, \"real\");\n        let colError = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_ERROR, \"real\");\n        let colUnits = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_UNITS, \"string\");\n        let colMod = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_MOD, \"string\");\n        if (colValue >= 0)\n            if (isNaN(value.value))\n                this.ds.setToNull(row, colValue);\n            else\n                this.ds.setReal(row, colValue, value.value);\n        if (colError >= 0)\n            if (isNaN(value.error))\n                this.ds.setToNull(row, colError);\n            else\n                this.ds.setReal(row, colError, value.error);\n        if (colUnits >= 0)\n            this.ds.setString(row, colUnits, value.units);\n        if (colMod >= 0)\n            this.ds.setString(row, colMod, value.mod);\n    }\n    clearValue(row, fldidx) {\n        let fieldName = this.header.fields[fldidx].name;\n        let colValue = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_VALUE, \"real\");\n        let colError = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_ERROR, \"real\");\n        let colUnits = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_UNITS, \"string\");\n        let colMod = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_MOD, \"string\");\n        if (colValue >= 0)\n            this.ds.setToNull(row, colValue);\n        if (colError >= 0)\n            this.ds.setToNull(row, colError);\n        if (colUnits >= 0)\n            this.ds.setToNull(row, colUnits);\n        if (colMod >= 0)\n            this.ds.setToNull(row, colMod);\n    }\n    getDescr(row, fldidx) {\n        let col = this.ds.findColByName(this.header.fields[fldidx].name);\n        return col < 0 ? '' : this.ds.colDescr(col);\n    }\n    setDescr(row, fldidx, descr) {\n        let col = this.ds.findColByName(this.header.fields[fldidx].name);\n        if (col >= 0)\n            this.ds.changeColumnName(col, this.ds.colName(col), descr);\n    }\n    setup() {\n        this.parseAndCorrect();\n    }\n    parseAndCorrect() {\n        this.header = { units: [], fields: [] };\n        let got = false;\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == MeasurementData.CODE) {\n                this.header = this.parseMetaData(this.ds.getExtData(n));\n                got = true;\n                break;\n            }\n        this.ensureFields();\n        if (!got && this.allowModify) {\n            let content = this.formatMetaData(this.header);\n            this.ds.appendExtension(MeasurementData.NAME, MeasurementData.CODE, content);\n        }\n    }\n    ensureFields() {\n        for (let f of this.header.fields) {\n            let descr = 'Measurement';\n            let colidx = this.ds.findColByName(f.name);\n            if (colidx >= 0)\n                descr = this.ds.colDescr(colidx);\n            if (this.allowModify) {\n                this.ds.ensureColumn(f.name + MeasurementData.SUFFIX_VALUE, \"real\", descr);\n                this.ds.ensureColumn(f.name + MeasurementData.SUFFIX_ERROR, \"real\", 'Error');\n                this.ds.ensureColumn(f.name + MeasurementData.SUFFIX_UNITS, \"string\", 'Units');\n                this.ds.ensureColumn(f.name + MeasurementData.SUFFIX_MOD, \"string\", 'Modifier');\n            }\n        }\n    }\n    parseMetaData(content) {\n        let header = { units: [], fields: [] };\n        for (let line of content.split(/\\r?\\n/)) {\n            let eq = line.indexOf('=');\n            if (eq < 0)\n                continue;\n            if (line.startsWith('unit=')) {\n                let bits = line.substring(eq + 1).split(',');\n                if (bits.length >= 2)\n                    header.units.push({ name: MoleculeStream.skUnescape(bits[0]), uri: MoleculeStream.skUnescape(bits[1]) });\n            }\n            else if (line.startsWith('field=')) {\n                let bits = line.substring(eq + 1).split(',');\n                let f = { name: MoleculeStream.skUnescape(bits[0]), units: [], defnURI: [] };\n                for (let n = 1; n < bits.length; n++)\n                    f.units.push(MoleculeStream.skUnescape(bits[n]));\n                header.fields.push(f);\n            }\n            else if (line.startsWith('definition=')) {\n                let bits = line.substring(eq + 1).split(',');\n                if (bits.length >= 2) {\n                    let f = header.fields.find((f) => f.name == bits[0]);\n                    if (!f)\n                        continue;\n                    for (let n = 1; n < bits.length; n++)\n                        f.defnURI.push(MoleculeStream.skUnescape(bits[n]));\n                }\n            }\n        }\n        return header;\n    }\n    formatMetaData(header) {\n        let lines = [];\n        for (let u of header.units) {\n            lines.push('unit=' + MoleculeStream.skEscape(u.name) + ',' + MoleculeStream.skEscape(u.uri));\n        }\n        for (let f of header.fields) {\n            let line = 'field=' + MoleculeStream.skEscape(f.name);\n            for (let u of f.units)\n                line += ',' + MoleculeStream.skEscape(u);\n            lines.push(line);\n            if (Vec.notBlank(f.defnURI)) {\n                line = 'definition=' + MoleculeStream.skEscape(f.name);\n                for (let d of f.defnURI)\n                    line += ',' + MoleculeStream.skEscape(d);\n                lines.push(line);\n            }\n        }\n        return lines.join('\\n');\n    }\n    plainHeading() { return MeasurementData.NAME; }\n    isColumnReserved(colName) {\n        return this.areColumnsReserved([colName])[0];\n    }\n    areColumnsReserved(colNames) {\n        let names = new Set();\n        for (let f of this.header.fields) {\n            names.add(f.name + MeasurementData.SUFFIX_VALUE);\n            names.add(f.name + MeasurementData.SUFFIX_ERROR);\n            names.add(f.name + MeasurementData.SUFFIX_UNITS);\n            names.add(f.name + MeasurementData.SUFFIX_MOD);\n        }\n        let resv = [];\n        for (let col of colNames)\n            resv.push(names.has(col));\n        return resv;\n    }\n    numTextRenderings(row) { return this.header.fields.length; }\n    produceTextRendering(row, idx) {\n        let field = this.header.fields[idx];\n        let colField = this.ds.findColByName(field.name);\n        let tr = {\n            name: field.name,\n            descr: colField < 0 ? '' : this.ds.colDescr(colField),\n            text: '',\n            type: Aspect.TEXT_PLAIN\n        };\n        let datum = this.getValue(row, idx);\n        if (!Number.isNaN(datum.value)) {\n            if (datum.mod)\n                tr.text += datum.mod + ' ';\n            tr.text += datum.value;\n            if (!Number.isNaN(datum.error))\n                tr.text += ' \\u{00B1} ' + datum.error;\n            if (datum.units)\n                tr.text += ' ' + datum.units;\n        }\n        return tr;\n    }\n}\nMeasurementData.CODE = 'org.mmi.aspect.MeasurementData';\nMeasurementData.NAME = 'Measurement Data';\nMeasurementData.SUFFIX_VALUE = '';\nMeasurementData.SUFFIX_ERROR = '_error';\nMeasurementData.SUFFIX_UNITS = '_units';\nMeasurementData.SUFFIX_MOD = '_mod';\nregisterAspect(MeasurementData);\n//# sourceMappingURL=MeasurementData.js.map","import { MoleculeStream } from '../data/MoleculeStream';\nimport { Vec } from '../util/Vec';\nimport { Aspect } from './Aspect';\nimport { registerAspect } from './AspectList';\nimport { MeasurementData } from './MeasurementData';\nexport var MixtureAttributeType;\n(function (MixtureAttributeType) {\n    MixtureAttributeType[\"Structure\"] = \"structure\";\n    MixtureAttributeType[\"Name\"] = \"name\";\n    MixtureAttributeType[\"Quantity\"] = \"quantity\";\n    MixtureAttributeType[\"Bound\"] = \"bound\";\n    MixtureAttributeType[\"Error\"] = \"error\";\n    MixtureAttributeType[\"Ratio\"] = \"ratio\";\n    MixtureAttributeType[\"Units\"] = \"units\";\n    MixtureAttributeType[\"Relation\"] = \"relation\";\n    MixtureAttributeType[\"Identifier\"] = \"identifier\";\n    MixtureAttributeType[\"Link\"] = \"link\";\n    MixtureAttributeType[\"Property\"] = \"property\";\n})(MixtureAttributeType || (MixtureAttributeType = {}));\nexport class Mixture extends Aspect {\n    static isMixture(ds) {\n        for (let n = 0; n < ds.numExtensions; n++)\n            if (ds.getExtType(n) == Mixture.CODE)\n                return true;\n        return false;\n    }\n    constructor(ds, allowModify) {\n        super(Mixture.CODE, ds, allowModify);\n        this.header = { attributes: [] };\n        this.setup();\n    }\n    getHeader() {\n        return this.header;\n    }\n    setHeader(header) {\n        this.header = header;\n        let content = this.formatMetaData(header);\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == Mixture.CODE) {\n                this.ds.setExtData(n, content);\n                return;\n            }\n        this.ds.appendExtension(Mixture.NAME, Mixture.CODE, content);\n    }\n    setup() {\n        this.parseAndCorrect();\n    }\n    parseAndCorrect() {\n        this.header = { attributes: [] };\n        let got = false;\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == Mixture.CODE) {\n                this.header = this.parseMetaData(this.ds.getExtData(n));\n                got = true;\n                break;\n            }\n        if (!got && this.allowModify) {\n            let content = this.formatMetaData(this.header);\n            this.ds.appendExtension(Mixture.NAME, Mixture.CODE, content);\n        }\n    }\n    parseMetaData(content) {\n        let header = { attributes: [] };\n        for (let line of content.split(/\\r?\\n/)) {\n            let eq = line.indexOf('=');\n            if (eq < 0)\n                continue;\n            if (line.startsWith('attr=')) {\n                let bits = line.substring(eq + 1).split(',');\n                if (bits.length < 3)\n                    continue;\n                let column = MoleculeStream.skUnescape(bits[0]);\n                let position = [];\n                if (bits[1] != '0')\n                    position = bits[1].split('.').map((str) => parseInt(str));\n                let type = bits[2];\n                let info = [];\n                for (let n = 3; n < bits.length; n++)\n                    info.push(MoleculeStream.skUnescape(bits[n]));\n                header.attributes.push({ column, position, type, info });\n            }\n        }\n        return header;\n    }\n    formatMetaData(header) {\n        let lines = [];\n        for (let a of header.attributes) {\n            let bits = [MoleculeStream.skEscape(a.column)];\n            if (Vec.isBlank(a.position))\n                bits.push('0');\n            else\n                bits.push(a.position.join('.'));\n            bits.push(a.type);\n            if (a.info)\n                for (let str of a.info)\n                    bits.push(MoleculeStream.skEscape(str));\n            lines.push('attr=' + bits.join(','));\n        }\n        return lines.join('\\n');\n    }\n    plainHeading() { return MeasurementData.NAME; }\n    isColumnReserved(colName) {\n        return this.areColumnsReserved([colName])[0];\n    }\n    areColumnsReserved(colNames) {\n        let names = new Set();\n        for (let a of this.header.attributes)\n            names.add(a.column);\n        let resv = [];\n        for (let col of colNames)\n            resv.push(names.has(col));\n        return resv;\n    }\n}\nMixture.CODE = 'org.mmi.aspect.Mixture';\nMixture.NAME = 'Mixture';\nMixture.SUFFIX_VALUE = '';\nregisterAspect(Mixture);\n//# sourceMappingURL=Mixture.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2021 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {DataSheet} from 'webmolkit/data/DataSheet';\nimport {AssayProvenance} from 'webmolkit/aspect/AssayProvenance';\nimport {MeasurementData} from 'webmolkit/aspect/MeasurementData';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {DataSheetStream} from 'webmolkit/data/DataSheetStream';\nimport {MDLSDFReader} from 'webmolkit/data/MDLReader';\nimport {MDLMOLWriter} from 'webmolkit/data/MDLWriter';\nimport {Mixture as MixtureAspect} from 'webmolkit/aspect/Mixture';\nimport {Vec} from 'webmolkit/util/Vec';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport {MixtureCollection} from '../mixture/MixtureCollection';\nimport {Mixture} from '../mixture/Mixture';\nimport {MixfileComponent} from '../mixture/Mixfile';\n\n/*\n\tTable extraction: create Mixfile instances from tabular data sources, with the help of directions for placing columns into\n\tthe mixture hierarchy.\n*/\n\nexport enum TableExtractType\n{\n\tStructure = 'structure',\n\tName = 'name',\n\tQuantity = 'quantity',\n\tBound = 'bound',\n\tError = 'error',\n\tRatio = 'ratio',\n\tUnits = 'units',\n\tRelation = 'relation',\n\tIdentifier = 'identifier',\n\tLink = 'link',\n\tProperty = 'property',\n}\n\ninterface TableExtractMapping\n{\n\tcolumn:string;\n\torigin:number[];\n\ttype:TableExtractType;\n\tinfo?:string[];\n}\n\nexport class TableExtract\n{\n\tprivate table:DataSheet = null;\n\tprivate aprov:AssayProvenance = null;\n\tprivate mdata:MeasurementData = null;\n\n\tprivate lookup:Map<string, Molecule> = null;\n\tprivate mappings:TableExtractMapping[] = [];\n\n\tconstructor(private tableFile:string, private lookupFile:string, private mappingFile:string, private verbose:boolean)\n\t{\n\t}\n\n\tpublic async exec():Promise<void>\n\t{\n\t\tlet content:string;\n\t\ttry {content = fs.readFileSync(this.tableFile).toString();}\n\t\tcatch (ex) {throw 'Unable to read file ' + this.tableFile + ': ' + ex;}\n\n\t\tif (this.tableFile.endsWith('.ds')) this.table = DataSheetStream.readXML(content);\n\t\telse if (this.tableFile.endsWith('.sdf')) this.table = new MDLSDFReader(content).parse();\n\t\telse if (this.tableFile.endsWith('.csv')) this.table = this.parseLines(',', true);\n\t\telse if (this.tableFile.endsWith('.tsv') || this.tableFile.endsWith('.tab')) this.table = this.parseLines('\\t', false);\n\t\tif (!this.table) throw 'Unable to parse: ' + this.tableFile;\n\n\t\tif (AssayProvenance.isAssayProvenance(this.table)) this.aprov = new AssayProvenance(this.table, false);\n\t\tif (MeasurementData.isMeasurementData(this.table)) this.mdata = new MeasurementData(this.table, false);\n\n\t\tif (this.lookupFile)\n\t\t{\n\t\t\t// TODO\n\t\t}\n\n\t\tthis.initialMapping();\n\t\tif (this.mappingFile)\n\t\t{\n\t\t\tcontent = fs.readFileSync(this.mappingFile).toString();\n\t\t\tthis.customMapping(JSON.parse(content));\n\t\t}\n\n\t\tif (this.mappings.length == 0) throw 'No column mapping information available.';\n\n\t\tlet mixtures = new MixtureCollection();\n\t\tfor (let n = 0; n < this.table.numRows; n++)\n\t\t{\n\t\t\tlet mixture = this.extractMixture(n);\n\t\t\tif (mixture) mixtures.appendMixtureDirect(mixture);\n\t\t}\n\n\t\tconsole.log(mixtures.serialise(true));\n\t}\n\n\t// ------------ private methods ------------\n\n\t// read TSV/CSV file, which is presumed to have column headings, and may include escape sequences\n\tprivate parseLines(sep:string, escaped:boolean):DataSheet\n\t{\n\t\tlet ds = new DataSheet();\n\n\t\t// !! load each line, split into strings, apply columns then rows...\n\t\t// !! anything that's all {int} or {real} gets changed retroactively\n\n\t\treturn ds;\n\t}\n\n\t// extract column-to-mixture information embedded in the initial datasheet, if possible\n\tprivate initialMapping():void\n\t{\n\t\tif (!MixtureAspect.isMixture(this.table)) return;\n\n\t\tlet aspect = new MixtureAspect(this.table, false);\n\t\tfor (let attr of aspect.getHeader().attributes)\n\t\t{\n\t\t\tlet map:TableExtractMapping =\n\t\t\t{\n\t\t\t\t'column': attr.column,\n\t\t\t\t'origin': Vec.add(attr.position, -1),\n\t\t\t\t'type': attr.type as any as TableExtractType, // same enum values\n\t\t\t\t'info': attr.info,\n\t\t\t};\n\t\t\tthis.mappings.push(map);\n\t\t}\n\t}\n\n\t// merge in user-provided mappings\n\tprivate customMapping(custom:TableExtractMapping[]):void\n\t{\n\t\tfor (let map of custom)\n\t\t{\n\t\t\tlet idx = this.mappings.findIndex((look) => look.column == map.column);\n\t\t\tif (idx >= 0) this.mappings[idx] = map; else this.mappings.push(map);\n\t\t}\n\t}\n\n\t// pull out the content from a row in the table and corral them into a mixture\n\tprivate extractMixture(row:number):Mixture\n\t{\n\t\tlet mixture = new Mixture();\n\n\t\tfor (let map of this.mappings)\n\t\t{\n\t\t\tlet comp = mixture.mixfile as MixfileComponent;\n\t\t\tfor (let idx of map.origin)\n\t\t\t{\n\t\t\t\tif (comp.contents == null) comp.contents = [];\n\t\t\t\twhile (idx >= comp.contents.length) comp.contents.push({});\n\t\t\t\tcomp = comp.contents[idx];\n\t\t\t}\n\t\t}\n\n\t\tlet appendQuant = (quantity:number | number[], val:number):number | number[] =>\n\t\t{\n\t\t\tif (isNaN(val)) return quantity;\n\t\t\tif (quantity == null) return val;\n\t\t\telse if (typeof quantity == 'number' && quantity != val) return [Math.min(quantity, val), Math.max(quantity, val)];\n\t\t\telse return quantity;\n\t\t};\n\n\t\tlet stashRatio = new Map<string, number>();\n\t\tlet fields = this.mdata ? this.mdata.getHeader().fields : [];\n\n\t\tfor (let map of this.mappings)\n\t\t{\n\t\t\tlet col = this.table.findColByName(map.column);\n\t\t\tif (col < 0 || this.table.isNull(row, col)) continue;\n\n\t\t\tlet comp = mixture.getComponent(map.origin);\n\n\t\t\tif (map.type == TableExtractType.Structure)\n\t\t\t{\n\t\t\t\tlet mol = this.table.getMolecule(row, col);\n\t\t\t\tcomp.molfile = new MDLMOLWriter(mol).write();\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Name)\n\t\t\t{\n\t\t\t\tcomp.name = this.table.toString(row, col);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Quantity)\n\t\t\t{\n\t\t\t\t// if aspected: can extract more information\n\t\t\t\tif (this.aprov && map.column == AssayProvenance.COLNAME_VALUE)\n\t\t\t\t{\n\t\t\t\t\tcomp.quantity = this.aprov.getValue(row);\n\t\t\t\t\tlet error = this.aprov.getError(row);\n\t\t\t\t\tif (!isNaN(error)) comp.error = error;\n\t\t\t\t\tcomp.units = this.aprov.getUnits(row); // TODO: translate based on URI\n\t\t\t\t\tlet relation = this.aprov.getRelation(row);\n\t\t\t\t\tif (relation && relation != '=') comp.relation = relation;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet field = fields.find((f) => f.name == map.column);\n\t\t\t\tif (field)\n\t\t\t\t{\n\t\t\t\t\tlet value = this.mdata.getValueField(row, field);\n\t\t\t\t\tcomp.quantity = value.value;\n\t\t\t\t\tif (!isNaN(value.error)) comp.error = value.error;\n\t\t\t\t\tcomp.units = value.units;\n\t\t\t\t\tif (value.mod && value.mod != '=') comp.relation = value.mod;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet val = parseFloat(this.table.toString(row, col));\n\t\t\t\tcomp.quantity = appendQuant(comp.quantity, val);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Bound)\n\t\t\t{\n\t\t\t\tlet val = parseFloat(this.table.toString(row, col));\n\t\t\t\tcomp.quantity = appendQuant(comp.quantity, val);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Error)\n\t\t\t{\n\t\t\t\tlet val = parseFloat(this.table.toString(row, col));\n\t\t\t\tif (!isNaN(val)) comp.error = val;\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Ratio)\n\t\t\t{\n\t\t\t\tlet val = parseFloat(this.table.toString(row, col));\n\t\t\t\tif (!isNaN(val)) stashRatio.set(JSON.stringify(map.origin), val);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Units)\n\t\t\t{\n\t\t\t\tlet units = this.table.toString(row, col);\n\t\t\t\t// TODO: correction/mapping...\n\t\t\t\tcomp.units = units;\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Relation)\n\t\t\t{\n\t\t\t\tlet relation = this.table.toString(row, col);\n\t\t\t\t// TODO: correction/mapping...\n\t\t\t\tcomp.relation = relation;\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Identifier)\n\t\t\t{\n\t\t\t\tif (comp.identifiers == null) comp.identifiers = {};\n\t\t\t\tcomp.identifiers[map.column] = this.table.toString(row, col);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Link)\n\t\t\t{\n\t\t\t\tif (comp.links == null) comp.links = {};\n\t\t\t\tcomp.links[map.column] = this.table.toString(row, col);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Property)\n\t\t\t{\n\t\t\t\tconsole.log('TODO: property'); // !! lookup aspects...\n\t\t\t}\n\t\t}\n\n\t\t// fill in any missing ratios\n\t\tfor (let origin of mixture.getOrigins())\n\t\t{\n\t\t\tlet comp = mixture.getComponent(origin);\n\t\t\tif (Vec.isBlank(comp.contents)) continue;\n\t\t\tlet num = 0, total = 0;\n\t\t\tfor (let n = 0; n < comp.contents.length; n++) if (!Mixture.isComponentEmpty(comp.contents[n]))\n\t\t\t{\n\t\t\t\tlet ratio = stashRatio.get(JSON.stringify([...origin, n]));\n\t\t\t\tif (!ratio) {num = 0; break;}\n\t\t\t\tnum++;\n\t\t\t\ttotal += ratio;\n\t\t\t}\n\t\t\tif (num > 0) for (let n = 0; n < comp.contents.length; n++) if (!Mixture.isComponentEmpty(comp.contents[n]))\n\t\t\t{\n\t\t\t\tlet ratio = stashRatio.get(JSON.stringify([...origin, n]));\n\t\t\t\tcomp.contents[n].ratio = [ratio, total];\n\t\t\t}\n\t\t}\n\n\t\t// trim out blank pieces\n\t\tskip: for (let origin of Vec.reverse(mixture.getOrigins()))\n\t\t{\n\t\t\tlet comp = mixture.getComponent(origin);\n\t\t\tif (Mixture.isComponentEmpty(comp))\n\t\t\t{\n\t\t\t\tmixture.deleteComponent(origin);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// may collapse singletons\n\t\t\tif (Vec.arrayLength(comp.contents) != 1) continue;\n\t\t\tfor (let key in comp) if (key != 'contents' && (comp as any)[key]) continue skip;\n\t\t\tlet sub = comp.contents[0];\n\t\t\tcomp.contents = null;\n\t\t\tmixture.setComponent(origin, sub);\n\t\t}\n\n\t\treturn mixture;\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {DataSheet, DataSheetColumn} from 'webmolkit/data/DataSheet';\nimport {MDLSDFWriter} from 'webmolkit/data/MDLWriter';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {MDLMOLReader} from 'webmolkit/data/MDLReader';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {ExportMInChI} from './ExportMInChI';\nimport {Mixfile, MixfileComponent} from './Mixfile';\n\n/*\n\tInteroperability with SDfiles: conversion of the Mixfile hierarchy into a flattened SDfile is useful for presenting to\n\tsoftware that can read this format, and is also a waypoint en route to a MInChI string.\n*/\n\nexport class ExportSDFile\n{\n\tprivate ds = new DataSheet();\n\tprivate colMol:number;\n\tprivate colName:number;\n\tprivate colHier:number;\n\tprivate colConc:number;\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t\tthis.colMol = this.ds.appendColumn('Molecule', DataSheetColumn.Molecule, '');\n\t\tthis.colName = this.ds.appendColumn('Name', DataSheetColumn.String, '');\n\t\tthis.colHier = this.ds.appendColumn('MINCHI$N', DataSheetColumn.String, '');\n\t\tthis.colConc = this.ds.appendColumn('MINCHI$C', DataSheetColumn.String, '');\n\t}\n\n\t// can add any number of mixtures, which will be numbered automatically\n\tpublic append(mixfile:Mixfile):void\n\t{\n\t\t// if the root node is something other than a pure placeholder, then add it explicitly\n\t\tif (mixfile.name || mixfile.molfile || mixfile.inchi)\n\t\t{\n\t\t\tthis.appendComponent(mixfile, [1]);\n\t\t\treturn;\n\t\t}\n\n\t\t// otherwise, add all of contents of the root node as a series with incrementing primary indexes\n\t\tif (!mixfile.contents) return;\n\t\tfor (let n = 0; n < mixfile.contents.length; n++) this.appendComponent(mixfile.contents[n], [n + 1]);\n\t}\n\n\t// return the SDF-serialised representation\n\tpublic write():string\n\t{\n\t\treturn new MDLSDFWriter(this.ds).write();\n\t}\n\n\t// ------------ private methods ------------\n\n\t// recursively add a component, and all of its subcomponents\n\tprivate appendComponent(comp:MixfileComponent, seq:number[]):void\n\t{\n\t\tlet row = this.ds.appendRow();\n\n\t\tlet mol:Molecule = null;\n\t\tif (comp.molfile)\n\t\t{\n\t\t\tmol = Molecule.fromString(comp.molfile);\n\t\t\tif (!mol)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tmol = new MDLMOLReader(comp.molfile).parse();\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\t\t\t}\n\t\t}\n\t\tif (!mol) mol = new Molecule();\n\n\t\tthis.ds.setMolecule(row, this.colMol, mol);\n\t\tif (comp.name) this.ds.setString(row, this.colName, comp.name);\n\t\tthis.ds.setString(row, this.colHier, seq.join('.'));\n\t\tthis.ds.setString(row, this.colConc, this.formatConcentration(comp));\n\n\t\tif (comp.contents) for (let n = 0; n < comp.contents.length; n++)\n\t\t{\n\t\t\tlet subseq = seq.slice(0);\n\t\t\tsubseq.push(n + 1);\n\t\t\tthis.appendComponent(comp.contents[n], subseq);\n\t\t}\n\t}\n\n\t// turns a concentration into a suitable precursor string, or null otherwise\n\tprivate formatConcentration(comp:MixfileComponent):string\n\t{\n\t\t/* ... this is a pseudo-MInChI approach ...\n\t\t// TODO: need special deal for ratio without denominator - can sometimes add them up to form an implicit denominator\n\n\t\tif (comp.ratio && comp.ratio.length >= 2)\n\t\t{\n\t\t\tlet numer = comp.ratio[0], denom = comp.ratio[1];\n\t\t\tif (!(denom > 0)) return null;\n\t\t\treturn (100 * numer / denom) + ' pp';\n\t\t}\n\n\t\tif (comp.quantity == null || comp.units == null) return null;\n\n\t\t// special deal (maybe temporary): units that are written with common names that map to a URI are converted automatically\n\t\tlet unitURI = comp.units;\n\t\tif (!unitURI.startsWith('http://')) unitURI = Units.nameToURI(unitURI);\n\t\tif (!unitURI) return;\n\n\t\t// TODO: maybe another special deal for absolute weight/volume/mole quantities - convert them into ratios, to the extent that's\n\t\t// possible... maybe approximating where necessary\n\n\t\tlet bits:string[] = [];\n\n\t\tif (comp.relation != null) bits.push(comp.relation);\n\n\t\tlet values:number[] = typeof comp.quantity == 'number' ? [comp.quantity as number] : comp.quantity;\n\n\t\tlet [mnemonic, scaled] = Units.convertToMInChI(unitURI, values);\n\t\tif (!mnemonic) return;\n\t\tbits.push(scaled[0].toString());\n\t\tif (scaled.length > 1) {bits.push('..'); bits.push(scaled[1].toString());}\n\t\tbits.push(mnemonic);\n\n\t\treturn bits.join(' ');*/\n\n\t\tlet useRatio:number = null;\n\t\tif (Vec.len(comp.ratio) == 2) useRatio = comp.ratio[0]; // mixfile ratios are stored as [numer, denom] where denom is checksum; could verify that this\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// is consistent before deigning to use it, but we're just passing it through\n\t\treturn ExportMInChI.formatConcentration(comp.quantity, comp.error, useRatio, comp.units, comp.relation);\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2021 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MDLSDFReader} from 'webmolkit/data/MDLReader';\nimport {DataSheetColumn} from 'webmolkit/data/DataSheet';\nimport {MDLMOLWriter} from 'webmolkit/data/MDLWriter';\nimport {Mixfile, MixfileComponent} from './Mixfile';\nimport {Mixture} from './Mixture';\nimport {StandardUnits, Units} from './Units';\n\n/*\n\tImporting one or more mixtures from chunks of text that represent an SDfile with special mixture fields.\n*/\n\ninterface ImportComponent\n{\n\tmol:Molecule;\n\tname:string;\n\tconc:string;\n\thier:string;\n}\n\nexport class ImportSDFile\n{\n\tprivate buffer = '';\n\tprivate components:ImportComponent[] = [];\n\tprivate mixfiles:Mixfile[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t}\n\n\t// adds a chunk of text to the buffer, which may cause more SDfile units to be extracted; after calling this, 0-or-more new mixtures will become available\n\t// to be polled\n\tpublic feed(chunk:string):void\n\t{\n\t\tthis.buffer += chunk;\n\t\twhile (true)\n\t\t{\n\t\t\tlet sep = this.buffer.indexOf('$$$$\\n');\n\t\t\tif (sep < 0) break;\n\t\t\tsep += 5;\n\t\t\tthis.processBlock(this.buffer.substring(0, sep));\n\t\t\tthis.buffer = this.buffer.substring(sep);\n\t\t}\n\t}\n\n\t// grab the next assembled mixfile and take it out of the delivery list; if the final flag is true, it means we've reached the end of the input sequence, so\n\t// whatever components remain must be complete\n\tpublic poll(final = false):Mixfile\n\t{\n\t\tif (Vec.notBlank(this.mixfiles)) return this.mixfiles.shift();\n\t\tif (final && Vec.notBlank(this.components))\n\t\t{\n\t\t\tthis.assembleComponents();\n\t\t\treturn this.mixfiles[0];\n\t\t}\n\t\treturn null;\n\t}\n\n\t// ------------ private methods ------------\n\n\t// have identified one SDfile record (ending in $$$$), so carve it up into an upcoming component\n\tprivate processBlock(sdfile:string):void\n\t{\n\t\tlet reader = new MDLSDFReader(sdfile);\n\t\treader.upcastColumns = false;\n\t\tlet ds = reader.parse();\n\t\tif (!ds || ds.numRows == 0) return;\n\t\tlet colMol = ds.firstColOfType(DataSheetColumn.Molecule);\n\t\tlet colName = ds.findColByName('Name');\n\t\tlet colHier = ds.findColByName('MINCHI$N');\n\t\tlet colConc = ds.findColByName('MINCHI$C');\n\t\tif (colHier < 0) return; // not a valid mixture block\n\n\t\tlet mol = colMol < 0 ? null : ds.getMolecule(0, colMol);\n\t\tlet name = colName < 0 ? null : ds.getString(0, colName);\n\t\tlet hier = ds.getString(0, colHier);\n\t\tlet conc = colConc < 0 ? null : ds.getString(0, colConc);\n\t\tif (Vec.notBlank(this.components) && hier == '1') this.assembleComponents();\n\n\t\tthis.components.push({mol, name, hier, conc});\n\t}\n\n\t// turn the current list of components into a mixfile, based on the assumption that we've reached a dividing point\n\tprivate assembleComponents():void\n\t{\n\t\tlet mixture = new Mixture();\n\n\t\tfor (let incomp of this.components)\n\t\t{\n\t\t\tlet molfile = incomp.mol ? new MDLMOLWriter(incomp.mol).write() : undefined;\n\t\t\tlet origin = incomp.hier.split('.').map((str) => parseInt(str) - 1);\n\t\t\tlet idx = origin.pop();\n\t\t\tlet parent = mixture.getComponent(origin);\n\t\t\tif (!parent.contents) parent.contents = [];\n\t\t\tlet comp:MixfileComponent = {name: incomp.name, molfile: molfile, contents: []};\n\t\t\tif (incomp.conc) this.decodeConcentration(incomp.conc, comp);\n\t\t\tparent.contents[idx] = comp;\n\t\t}\n\n\t\tif (mixture.mixfile.contents.length == 1) mixture = new Mixture(mixture.mixfile.contents[0] as Mixfile);\n\n\t\t// ratios are expressed as the numerator; fill in the denominator as well\n\t\tlet finishRatio = (comp:MixfileComponent):void =>\n\t\t{\n\t\t\tif (Vec.isBlank(comp.contents)) return;\n\t\t\tlet denom = 0;\n\t\t\tfor (let child of comp.contents)\n\t\t\t{\n\t\t\t\t if (!child.ratio || Vec.len(child.ratio) != 2)\n\t\t\t\t {\n\t\t\t\t \tdenom = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t }\n\t\t\t\t denom += child.ratio[0];\n\t\t\t}\n\t\t\tfor (let child of comp.contents)\n\t\t\t{\n\t\t\t\tif (denom > 0)\n\t\t\t\t\tchild.ratio = [child.ratio[0], denom];\n\t\t\t\telse\n\t\t\t\t\tchild.ratio = undefined;\n\t\t\t}\n\t\t\tfor (let child of comp.contents) finishRatio(child);\n\t\t};\n\t\tfinishRatio(mixture.mixfile);\n\n\t\tthis.components = [];\n\t\tthis.mixfiles.push(mixture.mixfile);\n\t}\n\n\t// unpacks the MInChI-style concentration from the SDfile into the dictionary-style used by Mixfile components\n\tprivate decodeConcentration(conc:string, comp:MixfileComponent):void\n\t{\n\t\tlet match = conc.match(/^([\\>\\<\\=\\~]*)([-\\d\\.:]+)(\\w\\w)([-\\d]*)$/);\n\t\tif (!match) return; // this is technically an error: fails silently\n\n\t\tlet relation = match[1], qstr = match[2], mnemonic = match[3], mantissa = parseInt(match[4]) || 0;\n\n\t\tlet quant1:number = null, quant2:number = NaN;\n\t\tif ((match = qstr.match(/^([-\\d\\.]+):([-\\d\\.]+)$/)))\n\t\t{\n\t\t\tquant1 = parseFloat(match[1]);\n\t\t\tquant2 = parseFloat(match[2]);\n\t\t\tif (isNaN(quant1) || isNaN(quant2)) return;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tquant1 = parseFloat(qstr);\n\t\t\tif (isNaN(quant1)) return;\n\t\t}\n\n\t\tlet units = '', scale = 1, isRatio = false;\n\t\tif (mnemonic == 'pp') units = StandardUnits.pc;\n\t\telse if (mnemonic == 'wv') [units, scale] = [StandardUnits.pcWV, 100];\n\t\telse if (mnemonic == 'wf') [units, scale] = [StandardUnits.pcWW, 100];\n\t\telse if (mnemonic == 'vf') [units, scale] = [StandardUnits.pcVV, 100];\n\t\telse if (mnemonic == 'mf') [units, scale] = [StandardUnits.pcMM, 100];\n\t\telse if (mnemonic == 'rt') isRatio = true;\n\t\telse if (mnemonic == 'mr') [units, scale] = [StandardUnits.mol_L, 1];\n\t\telse if (mnemonic == 'wv') [units, scale] = [StandardUnits.g_L, 1E3];\n\t\telse if (mnemonic == 'mb') units = StandardUnits.mol_kg;\n\t\telse return; // not recognised\n\n\t\tcomp.relation = relation || undefined;\n\n\t\tif (isRatio) comp.ratio = [quant1, 0];\n\t\telse if (isNaN(quant2))\n\t\t{\n\t\t\tcomp.quantity = quant1 * Math.pow(10, mantissa) * scale;\n\t\t\tcomp.units = Units.uriToName(units);\n\t\t}\n\t\telse // it's a range\n\t\t{\n\t\t\tcomp.quantity = [quant1 * Math.pow(10, mantissa) * scale, quant2 * Math.pow(10, mantissa) * scale];\n\t\t\tcomp.units = Units.uriToName(units);\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2021 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {ExportMInChI} from '../mixture/ExportMInChI';\nimport {ExportSDFile} from '../mixture/ExportSDFile';\nimport {ImportSDFile} from '../mixture/ImportSDFile';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {DrawMixture} from '../mixture/DrawMixture';\nimport {Vec} from 'webmolkit/util/Vec';\nimport * as fs from 'fs';\nimport {InChI} from '../nodejs/InChI';\nimport {Mixfile} from '../mixture/Mixfile';\nimport {Mixture} from '../mixture/Mixture';\n\n/*\n\tReads a stream of mixtures and writes it out as a stream, with format transformation as necessary.\n*/\n\nexport enum TransformMixtureFormat\n{\n\tMixfile = 'mixfile', // single mixfile\n\tJSON = 'json', // list of mixtures\n\tSDF = 'sdf', // SDfile with mixture-specific columns\n\tMInChI = 'minchi', // MInChI notation, newline separated\n\tLongMInChIKey = 'longminchikey', // hashed keys of MInChI structure section\n\tShortMInChIKey = 'shortminchikey', // crunched keys of MInChI structure section, fixed length\n\tSVG = 'svg', // graphical rendering\n}\nexport const ALL_TRANSFORMMIXTURE_FORMATS = Object.values(TransformMixtureFormat);\n\nexport class TransformMixtures\n{\n\tprivate process = require('process');\n\n\tprivate inputFormat:TransformMixtureFormat = null;\n\tprivate outputFormat:TransformMixtureFormat = null;\n\n\tprivate instream:any = null;\n\tprivate outstream:any = null;\n\n\tprivate count = 0;\n\n\tprivate nextIndex = 0;\n\tprivate roster:{idx:number; chunk:string}[] = [];\n\n\tconstructor(private inputFile:string, inputFormat:string, private outputFile:string, outputFormat:string)\n\t{\n\t\tif (inputFormat)\n\t\t{\n\t\t\tif (!ALL_TRANSFORMMIXTURE_FORMATS.includes(inputFormat as TransformMixtureFormat)) throw 'Unknown input format: ' + inputFormat;\n\t\t\tthis.inputFormat = inputFormat as TransformMixtureFormat;\n\t\t}\n\t\tif (outputFormat)\n\t\t{\n\t\t\tif (!ALL_TRANSFORMMIXTURE_FORMATS.includes(outputFormat as TransformMixtureFormat)) throw 'Unknown output format: ' + outputFormat;\n\t\t\tthis.outputFormat = outputFormat as TransformMixtureFormat;\n\t\t}\n\t}\n\n\tpublic async exec():Promise<void>\n\t{\n\t\tif (this.inputFile && !this.inputFormat)\n\t\t{\n\t\t\tfor (let fmt of ALL_TRANSFORMMIXTURE_FORMATS) if (this.inputFile.endsWith('.' + fmt))\n\t\t\t{\n\t\t\t\tthis.inputFormat = fmt;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!this.inputFormat) throw 'Unknown input format';\n\t\tif (this.inputFormat == TransformMixtureFormat.MInChI || this.inputFormat == TransformMixtureFormat.SVG ||\n\t\t\tthis.inputFormat == TransformMixtureFormat.LongMInChIKey || this.inputFormat == TransformMixtureFormat.ShortMInChIKey) throw 'Can only write format: ' + this.inputFormat;\n\n\t\tif (this.outputFile && !this.outputFormat)\n\t\t{\n\t\t\tfor (let fmt of ALL_TRANSFORMMIXTURE_FORMATS) if (this.outputFile.endsWith('.' + fmt))\n\t\t\t{\n\t\t\t\tthis.outputFormat = fmt;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!this.outputFormat) throw 'Unknown output format';\n\t\tif ((this.outputFormat == TransformMixtureFormat.MInChI || this.outputFormat == TransformMixtureFormat.LongMInChIKey ||\n\t\t\tthis.outputFormat == TransformMixtureFormat.ShortMInChIKey) && !InChI.hasExecutable()) throw 'For MInChI, must specify InChI executable as command line parameter.';\n\n\t\tthis.instream = this.inputFile ? fs.createReadStream(this.inputFile) : this.process.stdin;\n\t\tthis.outstream = this.outputFile ? fs.createWriteStream(this.outputFile) : this.process.stdout;\n\n\t\tif (this.outputFormat == TransformMixtureFormat.JSON) this.outstream.write('[\\n');\n\n\t\tif (this.inputFormat == TransformMixtureFormat.Mixfile) await this.pipeMixfile();\n\t\telse if (this.inputFormat == TransformMixtureFormat.JSON) await this.pipeJSON();\n\t\telse if (this.inputFormat == TransformMixtureFormat.SDF) await this.pipeSDF();\n\n\t\tthis.flushRoster();\n\n\t\tif (this.outputFormat == TransformMixtureFormat.JSON) this.outstream.write(']\\n');\n\n\t\tthis.outstream.end();\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate async pipeMixfile():Promise<void>\n\t{\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet json = '';\n\t\t\tthis.instream.on('data', (chunk:string) => json += chunk);\n\t\t\tthis.instream.on('end', () =>\n\t\t\t{\n\t\t\t\t// (explicit blocking would be correct but hard to code in this framework; async tasks are ordered though, so is OK)\n\t\t\t\t(async () =>\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet mixfile = JSON.parse(json) as Mixfile;\n\t\t\t\t\t\tawait this.processMixfile(this.count++, mixfile);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ex) {reject(ex);}\n\t\t\t\t})();\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async pipeJSON():Promise<void>\n\t{\n\t\tconst StreamArray = require('stream-json/streamers/StreamArray');\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet array = StreamArray.withParser();\n\t\t\tthis.instream.pipe(array.input);\n\t\t\tlet json:Record<string, any> = {};\n\t\t\tarray.on('data', (keyval:Record<string, any>) =>\n\t\t\t{\n\t\t\t\tlet mixfile = keyval['value'] as Mixfile;\n\t\t\t\t// (explicit blocking would be correct but hard to code in this framework; async tasks are ordered though, so is OK)\n\t\t\t\t(async () =>\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tawait this.processMixfile(this.count++, mixfile);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ex) {reject(ex);}\n\t\t\t\t})();\n\t\t\t});\n\t\t\tarray.on('end', () => resolve());\n\t\t});\n\t}\n\n\tprivate async pipeSDF():Promise<void>\n\t{\n\t\tlet sdfile = new ImportSDFile();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tthis.instream.on('data', (chunk:string) =>\n\t\t\t{\n\t\t\t\tsdfile.feed(chunk);\n\t\t\t\tfor (let mixfile = sdfile.poll(); mixfile; mixfile = sdfile.poll()) this.processMixfile(this.count++, mixfile);\n\t\t\t});\n\t\t\tthis.instream.on('end', () =>\n\t\t\t{\n\t\t\t\t// (explicit blocking would be correct but hard to code in this framework; async tasks are ordered though, so is OK)\n\t\t\t\t(async () =>\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet mixfile = sdfile.poll(true);\n\t\t\t\t\t\tif (mixfile) await this.processMixfile(this.count++, mixfile);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ex) {reject(ex);}\n\t\t\t\t})();\n\t\t\t});\n\t\t});\n\t}\n\n\t// a mixfile has been parsed out from the input stream, so deal with it appropriately: this means that something goes into the output roster\n\t// with the given index\n\tprivate async processMixfile(idx:number, mixfile:Mixfile):Promise<void>\n\t{\n\t\tif (mixfile.mixfileVersion == null) throw 'Invalid mixfile';\n\n\t\tlet chunk:string = null;\n\n\t\tif (this.outputFormat == TransformMixtureFormat.Mixfile)\n\t\t{\n\t\t\tlet json = new Mixture(mixfile).serialise(); // makes it nice\n\t\t\tchunk = json + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.JSON)\n\t\t{\n\t\t\tthis.outstream.write(idx == 0 ? ' ' : ',');\n\t\t\tlet json = JSON.stringify(mixfile); // single line compact\n\t\t\tchunk = json + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.SDF)\n\t\t{\n\t\t\tlet sdfile = new ExportSDFile();\n\t\t\tsdfile.append(mixfile);\n\t\t\tlet record = sdfile.write();\n\t\t\tchunk = record + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.MInChI)\n\t\t{\n\t\t\tif (!InChI.isAvailable()) throw 'InChI unavailable: need to specify executable on command line';\n\t\t\tlet minchi = new ExportMInChI(mixfile, new InChI());\n\t\t\tawait minchi.fillInChI();\n\t\t\tminchi.formulate();\n\t\t\tchunk = minchi.getResult() + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.LongMInChIKey)\n\t\t{\n\t\t\tif (!InChI.isAvailable()) throw 'InChI unavailable: need to specify executable on command line';\n\t\t\tlet minchi = new ExportMInChI(mixfile, new InChI());\n\t\t\tawait minchi.fillInChI();\n\t\t\tlet hashkey = minchi.makeLongHashKey();\n\t\t\tchunk = hashkey + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.ShortMInChIKey)\n\t\t{\n\t\t\tif (!InChI.isAvailable()) throw 'InChI unavailable: need to specify executable on command line';\n\t\t\tlet minchi = new ExportMInChI(mixfile, new InChI());\n\t\t\tawait minchi.fillInChI();\n\t\t\tlet hashkey = minchi.makeShortHashKey();\n\t\t\tchunk = hashkey + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.SVG)\n\t\t{\n\t\t\tlet policy = RenderPolicy.defaultColourOnWhite(20);\n\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\tlet layout = new ArrangeMixture(new Mixture(mixfile), measure, policy);\n\t\t\tlayout.arrange();\n\n\t\t\tlet gfx = new MetaVector();\n\t\t\tnew DrawMixture(layout, gfx).draw();\n\t\t\tgfx.normalise();\n\t\t\tlet svg = gfx.createSVG(false);\n\n\t\t\tchunk = svg + '\\n';\n\t\t}\n\n\t\tthis.roster.push({idx, chunk});\n\t\tthis.flushRoster();\n\t}\n\n\t// checks the output roster for content to write out: will only write chunks if they are consecutive with the last emitted index; this is so because the\n\t// async generation methods do not necessarily come in with the same order\n\tprivate flushRoster():void\n\t{\n\t\tif (this.roster.length > 1) this.roster.sort((r1, r2) => r1.idx - r2.idx);\n\n\t\twhile (this.roster.length > 0 && Vec.first(this.roster).idx == this.nextIndex)\n\t\t{\n\t\t\tlet {chunk} = this.roster.shift();\n\t\t\tif (chunk) this.outstream.write(chunk);\n\t\t\tthis.nextIndex++;\n\t\t}\n\t}\n\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2021 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {InChI} from '../nodejs/InChI';\nimport {RenderHTML} from './RenderHTML';\nimport {TableExtract} from './TableExtract';\nimport {ALL_TRANSFORMMIXTURE_FORMATS, TransformMixtures} from './TransformMixtures';\nimport {XML} from 'webmolkit/util/XML';\n\n/*\n\tConsole utilities, to be run from NodeJS with command line arguments.\n*/\n\nexport class Console\n{\n\tprivate inputFile:string = null;\n\tprivate inputFormat:string = null;\n\tprivate outputFile:string = null;\n\tprivate outputFormat:string = null;\n\tprivate tableFile:string = null;\n\tprivate lookupFile:string = null;\n\tprivate mappingFile:string = null;\n\tprivate htmlFile:string = null;\n\tprivate withMInChI = false;\n\tprivate justHelp = false;\n\tprivate verbose = false;\n\n\tconstructor(args:string[])\n\t{\n\t\t// const {DOMParser, XMLSerializer} = require('xmldom/dom-parser.js');\n\t\t// XML.customParser = DOMParser;\n\t\t// XML.customSerial = XMLSerializer;\n\n\t\tfor (let n = 0; n < args.length; n++)\n\t\t{\n\t\t\tif (args[n] == '-i' && n + 1 < args.length) this.inputFile = args[++n];\n\t\t\telse if (args[n] == '-if' && n + 1 < args.length) this.inputFormat = args[++n];\n\t\t\telse if (args[n] == '-o' && n + 1 < args.length) this.outputFile = args[++n];\n\t\t\telse if (args[n] == '-of' && n + 1 < args.length) this.outputFormat = args[++n];\n\t\t\telse if (args[n] == '--table' && n + 1 < args.length) this.tableFile = args[++n];\n\t\t\telse if (args[n] == '--lookup' && n + 1 < args.length) this.lookupFile = args[++n];\n\t\t\telse if (args[n] == '--mapping' && n + 1 < args.length) this.mappingFile = args[++n];\n\t\t\telse if (args[n] == '--html' && n + 1 < args.length) this.htmlFile = args[++n];\n\t\t\telse if (args[n] == '--minchi') this.withMInChI = true;\n\t\t\telse if (args[n] == '--inchi' && n < args.length - 1) InChI.setExecutable(args[++n]);\n\t\t\telse if (args[n] == '-h' || args[n] == '-help' || args[n] == '--help') this.justHelp = true;\n\t\t\telse if (args[n] == '--verbose') this.verbose = true;\n\t\t}\n\t}\n\n\tpublic async run():Promise<void>\n\t{\n\t\tif (this.tableFile) await new TableExtract(this.tableFile, this.lookupFile, this.mappingFile, this.verbose).exec();\n\t\telse if (this.htmlFile) await new RenderHTML(this.htmlFile, this.withMInChI).exec();\n\t\telse if (this.inputFile || this.inputFormat || this.outputFile || this.outputFormat) await new TransformMixtures(this.inputFile, this.inputFormat, this.outputFile, this.outputFormat).exec();\n\t\telse if (this.justHelp) this.printHelp();\n\t\telse\n\t\t{\n\t\t\tthis.log('Nothing to do.');\n\t\t\tthis.printHelp();\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate printHelp():void\n\t{\n\t\tconsole.log('Mixtures console utilities. Arguments:');\n\t\tconsole.log('    -i {fn}          read input file (type guessed from suffix)');\n\t\tconsole.log('    -if {fmt}        specify/override type for input file');\n\t\tconsole.log('    -o {fn}          write output file (type guessed from suffix)');\n\t\tconsole.log('    -of {fmt}        specify/override type for output file');\n\t\tconsole.log('    --table {fn}     convert a tabular datafile to mixfile collection');\n\t\tconsole.log('    --lookup {fn}    (optional) lookup file for name-to-structure');\n\t\tconsole.log('    --mapping {fn}   (optional) JSON-formatted file for column mappings');\n\t\tconsole.log('    --html {fn}      render mixfile collection as an HTML table');\n\t\tconsole.log('    --minchi         (optional) include MInChI notation');\n\t\tconsole.log('    --inchi {fn}     (optional) specify InChI executable location');\n\t\tconsole.log('Mixture formats:');\n\t\tfor (let fmt of ALL_TRANSFORMMIXTURE_FORMATS) console.log('    ' + fmt);\n\t}\n\n\tprivate log(str:string):void\n\t{\n\t\tif (this.verbose) console.log(str);\n\t}\n}\n\n// if being run in NodeJS context, need to export the class\n// if (typeof module == 'object') module.exports['Console'] = Console;\n\n"],"names":["Object","defineProperty","exports","value","getElectronBinding","name","process","_linkedBinding","electronBinding","browserModuleNames","commonModuleNames","get_electron_binding_1","concat","features","isDesktopCapturerEnabled","push","isViewApiEnabled","deserialize","serialize","isSerializableObject","isPromise","electron_1","val","then","Function","constructor","reject","resolve","serializableTypes","Boolean","Number","String","Date","Error","RegExp","ArrayBuffer","isView","some","type","objectMap","source","mapper","targetEntries","entries","map","key","fromEntries","image","representations","scaleFactors","getScaleFactors","length","scaleFactor","size","getSize","buffer","toBitmap","dataURL","toDataURL","__ELECTRON_SERIALIZED_NativeImage__","serializeNativeImage","Array","isArray","nativeImage","createEmpty","width","height","addRepresentation","rep","deserializeNativeImage","CallbacksRegistry","this","nextId","callbacks","callbackIds","WeakMap","locationInfo","add","callback","id","get","set","regexp","stackString","stack","filenameAndLine","match","exec","location","includes","ref","getLocation","apply","args","global","remove","delete","__createBinding","create","o","m","k","k2","undefined","enumerable","__exportStar","p","prototype","hasOwnProperty","call","createFunctionWithReturnValue","getGlobal","getCurrentWebContents","getCurrentWindow","getBuiltin","callbacks_registry_1","type_utils_1","module_names_1","Promise","callbacksRegistry","remoteObjectCache","Map","finalizationRegistry","FinalizationRegistry","deref","ipcRenderer","send","contextId","electronIds","isReturnValue","WeakSet","v8Util","getHiddenValue","getContextId","on","IS_REMOTE_PROXY","Symbol","wrapArgs","visited","Set","valueToMeta","has","meta","Buffer","onFulfilled","onRejected","members","prop","setObjectMembers","object","metaId","member","descriptor","remoteMemberFunction","command","metaToValue","sendSync","descriptorFunction","proxyFunctionProperties","configurable","writable","setObjectPrototype","proto","setPrototypeOf","loaded","loadRemoteProperties","Proxy","target","property","bind","ownKeys","getOwnPropertyNames","getOwnPropertyDescriptor","from","byteOffset","byteLength","metaToError","ret","cached","getCachedRemoteObject","remoteFunction","wr","WeakRef","register","setCachedRemoteObject","obj","handleMessage","channel","handler","event","passedContextId","senderId","console","error","enableStacks","argv","getCurrentStack","captureStackTrace","require","module","returnValue","func","forEach","fs","path","pathFile","join","__dirname","executablePath","existsSync","readFileSync","env","ELECTRON_OVERRIDE_DIST_PATH","getElectronPath","Readable","Writable","Duplex","Transform","none","for","finalSymbol","manySymbol","wrapFunction","fn","writableObjectMode","readableObjectMode","transform","chunk","encoding","result","Chain","sanitize","next","async","gen","stream","data","done","runAsyncGenerator","wrapArray","fns","i","isFinal","getFinalValue","isReadableNodeStream","pipe","_writableState","_readableState","readable","isWritableNodeStream","write","options","super","streams","filter","index","convertToTransform","s","input","output","reduce","_write","_1","_2","_final","end","pause","_read","resume","skipEvents","emit","e","make","isMany","getManyValues","final","many","values","chain","Constructor","EventEmitter","startObject","Ctr","current","Assembler","connectTo","reviver","stringValue","_saveValue","_saveValueWithReviver","numberAsString","numberValue","depth","dropToLevel","level","splice","consume","keyValue","parseFloat","nullValue","trueValue","falseValue","endObject","pop","startArray","endArray","Utf8Stream","patterns","value1","string","key1","colon","comma","ws","numberStart","numberDigit","numberFraction","numberExponent","numberExpSign","noSticky","keys","src","slice","numberFracStart","numberExpStart","numberFracDigit","numberExpDigit","true","false","null","expected","array","codes","b","f","n","r","t","Parser","assign","_packKeys","_packStrings","_packNumbers","_streamKeys","_streamStrings","_streamNumbers","packValues","packKeys","packStrings","packNumbers","streamValues","streamKeys","streamStrings","streamNumbers","_jsonStreaming","jsonStreaming","_done","_expect","_stack","_parent","_open_number","_accumulator","_flush","_processBuffer","main","lastIndex","_buffer","charAt","fromCharCode","parseInt","parser","StreamBase","withParser","StreamArray","_level","_counter","_wait","_","_transform","_filter","_push","discard","_assembler","streamArray","Counter","initialDepth","objectFilter","includeUndecided","_accept","_saved_assembler","_reject","StringDecoder","_transformString","_stringDecoder","_transformBuffer","toString","_flushInput","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","toStringTag","isBlank","arr","notBlank","safeArray","len","arrayLength","anyTrue","v","allTrue","anyFalse","allFalse","iterAnyTrue","iterAllTrue","iterAnyFalse","iterAllFalse","swap","idx1","idx2","duplicate","append","item","prepend","unshift","arr1","arr2","idx","flatten","mtx","vec","transpose","sz1","sz2","anyArray","j","equals","equivalent","len1","compareTo","sz","Math","max","booleanArray","fill","numberArray","stringArray","genericArray","genericBlankArrays","funcArray","first","last","min","MAX_VALUE","MIN_VALUE","idxMin","idxMax","range","lo","hi","reverse","identity0","identity1","identityN","start","notMask","mask","idxGet","maskCount","c","maskIdx","idxMask","maskMap","pos","maskGet","maskEqual","sum","sub","mul","neg","setTo","addTo","mulBy","addToArray","subFromArray","mulByArray","divByArray","idxSort","sort","a","v1","v2","sorted","sortedUnique","unique","uniqueUnstable","uniqueStable","maskUnique","idxUnique","exclude","excl","count","indexOf","Permutation","parityPerms","parityIdentity","parityOrder","smallPermutation","PERM1","PERM2","PERM3","PERM4","allPermutations","SMALL_PERMS","PERM_CACHE","MAX_CACHE","nperms","perms","nonunique","Chemistry","ELEMENTS","ELEMENT_GROUPS","ELEMENT_ROWS","ELEMENT_BLOCKS","ELEMENT_VALENCE","ELEMENT_BONDING","ELEMENT_SHELL","NATURAL_ATOMIC_WEIGHTS","ELEMENT_H","ELEMENT_He","ELEMENT_Li","ELEMENT_Be","ELEMENT_B","ELEMENT_C","ELEMENT_N","ELEMENT_O","ELEMENT_F","ELEMENT_Ne","ELEMENT_Na","ELEMENT_Mg","ELEMENT_Al","ELEMENT_Si","ELEMENT_P","ELEMENT_S","ELEMENT_Cl","ELEMENT_Ar","ELEMENT_K","ELEMENT_Ca","ELEMENT_Sc","ELEMENT_Ti","ELEMENT_V","ELEMENT_Cr","ELEMENT_Mn","ELEMENT_Fe","ELEMENT_Co","ELEMENT_Ni","ELEMENT_Cu","ELEMENT_Zn","ELEMENT_Ga","ELEMENT_Ge","ELEMENT_As","ELEMENT_Se","ELEMENT_Br","ELEMENT_Kr","ELEMENT_Rb","ELEMENT_Sr","ELEMENT_Y","ELEMENT_Zr","ELEMENT_Nb","ELEMENT_Mo","ELEMENT_Tc","ELEMENT_Ru","ELEMENT_Rh","ELEMENT_Pd","ELEMENT_Ag","ELEMENT_Cd","ELEMENT_In","ELEMENT_Sn","ELEMENT_Sb","ELEMENT_Te","ELEMENT_I","ELEMENT_Xe","ELEMENT_Cs","ELEMENT_Ba","ELEMENT_La","ELEMENT_Ce","ELEMENT_Pr","ELEMENT_Nd","ELEMENT_Pm","ELEMENT_Sm","ELEMENT_Eu","ELEMENT_Gd","ELEMENT_Tb","ELEMENT_Dy","ELEMENT_Ho","ELEMENT_Er","ELEMENT_Tm","ELEMENT_Yb","ELEMENT_Lu","ELEMENT_Hf","ELEMENT_Ta","ELEMENT_W","ELEMENT_Re","ELEMENT_Os","ELEMENT_Ir","ELEMENT_Pt","ELEMENT_Au","ELEMENT_Hg","ELEMENT_Tl","ELEMENT_Pb","ELEMENT_Bi","ELEMENT_Po","ELEMENT_At","ELEMENT_Rn","ELEMENT_Fr","ELEMENT_Ra","ELEMENT_Ac","ELEMENT_Th","ELEMENT_Pa","ELEMENT_U","ELEMENT_Np","ELEMENT_Pu","ELEMENT_Am","ELEMENT_Cm","ELEMENT_Bk","ELEMENT_Cf","ELEMENT_Es","ELEMENT_Fm","ELEMENT_Md","ELEMENT_No","ELEMENT_Lr","ELEMENT_Rf","ELEMENT_Db","ELEMENT_Sg","ELEMENT_Bh","ELEMENT_Hs","ELEMENT_Mt","ELEMENT_Ds","ELEMENT_Rg","ELEMENT_Cn","Matrix","A","fromArray","clone","numRows","numCols","X","C","norm1","abs","normInf","uminus","plus","B","plusEquals","minus","minusEquals","arrayTimes","arrayTimesEquals","arrayRightDivide","arrayRightDivideEquals","arrayLeftDivide","arrayLeftDivideEquals","scalarTimes","scalarTimesEquals","times","Bcolj","Arowi","rank","SingularValueDecomposition","cond","trace","identity","lines","row","JSON","stringify","nu","U","V","work","nct","nrt","hypot","pp","iter","eps","pow","tiny","kase","ks","cs","sn","scale","sp","spm1","epm1","sk","ek","shift","sqrt","g","getU","getV","getSingularValues","getS","S","norm2","tol","EPSILON","Triangulation2D","px","py","numTriangles","edgeStack","hull","maxTriangles","triangles","halfedges","hashSize","ceil","hullPrev","hullNext","hullTri","hullHash","ids","dists","update","trimConcave","threshold","threshSq","sqr","tri","edge","uniqueEdges","edgeCount","ntri","c1","c2","c3","i1","i2","i3","repTri","repEdge","traceOutline","e1","e2","e3","edgePairs","entry","floor","isz","idxMap","g1","g2","sequence","minX","minY","maxX","maxY","centreX","centreY","i0","minDist","POSITIVE_INFINITY","norm_xy","i0x","i0y","i1x","i1y","minRadius","circumRadius","i2x","i2y","isFinite","quicksort","d0","NEGATIVE_INFINITY","orient","x","y","pickCircumCentre","hullStart","hullSize","hashKey","addTriangle","xp","yp","q","legalise","pseudoAngle","ar","a0","b0","al","bl","p0","pr","pl","p1","inCircle","hbl","link","br","dx","dy","orientIfSure","rx","ry","qx","qy","l","ax","ay","bx","by","cx","cy","ex","ey","fx","fy","bp","cp","cl","left","right","temp","tempDist","median","GeomUtil","pointInPolygon","minArray","maxArray","phase","x1","y1","x2","y2","areLinesParallel","x3","y3","x4","y4","dxa","dya","dxb","dyb","xmajorA","EPS","lineIntersect","u","isPointOnLineSeg","realEqual","pointLineDistance","pointLineSegDistance","doLineSegsIntersect","x4_x3","y4_y3","x2_x1","y2_y1","x1_x3","y1_y3","nx","ny","dn","rectsIntersect","w1","h1","w2","h2","sortAngles","theta","PI","angleDiff","idxSortAngles","uniqueAngles","ang","thetaObtuse","th1","th2","dth","emergentAngle","bottom","behind","delta","TWOPI","dotProduct","crossProduct","affineTranslate","affineMirror","xaxis","yaxis","affineScale","sx","sy","affineRotate","cos","sin","affineCompose","tfm","Acol","Brow","applyAffine","applyAffineArray","isAffineMirror","h","magnitude2","magnitude","dist2","dz","dist","normalise","dsq","inv","normalised","acuteAngle","mag1","mag2","cosTheta","acos","arcControlPoints","rad","t1x","t1y","t2x","t2y","tx","ty","D","createBezierEllipse","rw","rh","nseg","sinTheta","incrAlpha","alpha","cosAlpha","sinAlpha","npt","n1","n2","n3","n4","ctrl","fitCircle","fitEllipse","bestW","bestH","bestScore","shrinkToFit","whs","dmin","invW2","invH2","whsX","whsY","anything","superimpose","thetaA","atan2","rot00","rot01","rot10","rot11","acx","acy","invsz","bcx","bcy","mtxA","mtxB","cov","svd","rotate","convexHull","flatness","algo","QuickHull","hullX","hullY","outlinePolygon","diameter","del","concave","hsz","al1","al2","quickHull","furthestPoint","distance","ux","uy","maxDist","maxPos","Pos","zero","other","scaleBy","mag","offsetBy","withScaleBy","withOffsetBy","w","isZero","fitInto","maxW","maxH","Box","fromBounds","fromSize","fromOval","oval","getPos","setPos","setSize","midX","midY","area","grow","withGrow","intersects","intersection","x5","y5","x6","y6","contains","union","isEmpty","notEmpty","Oval","fromBox","box","setCentre","setRadius","Line","fromPos","pos1","pos2","setPos1","setPos2","XML","parseXML","strXML","xmlDoc","customParser","parseFromString","DOMParser","doc","customSerial","serializeToString","documentElement","XMLSerializer","toPrettyString","xslt","xsltDoc","xsltProc","XSLTProcessor","importStylesheet","resultDoc","transformToDocument","nodeText","el","text","child","childNodes","nodeType","nodeValue","childText","parent","tagName","findElement","appendElement","ownerDocument","createElement","appendChild","appendElementAfter","presib","postsib","nextSibling","parentNode","insertBefore","appendText","isCDATA","createCDATASection","createTextNode","createTextChild","textContent","setText","firstChild","removeChild","node","nodeName","findChildElements","list","childElements","DOM","parse","elHTML","elInput","elCanvas","xhtml","xml","html","outerHTML","template","document","innerHTML","content","find","selector","querySelector","findAll","nodeList","querySelectorAll","domList","parentElement","ancestor","closest","children","tag","firstElementChild","nextElementSibling","toLocaleLowerCase","exists","isVisible","offsetWidth","offsetHeight","getClientRects","appendTo","prependTo","insertAfter","before","empty","getHTML","setHTML","appendHTML","insertAdjacentHTML","getText","getValue","setValue","str","getCSS","style","getPropertyValue","setCSS","setProperty","css","dict","getAttr","hasAttribute","getAttribute","setAttr","setAttribute","attr","addClass","clsnames","cls","split","classList","removeClass","hasClass","clsname","setClass","flag","toggleClass","offset","rect","getBoundingClientRect","win","defaultView","pageXOffset","top","pageYOffset","setBoundaryPixels","setSizePixels","hasFocus","activeElement","grabFocus","delay","setTimeout","focus","removeEvent","removeEventListener","onKeyDown","addEventListener","onKeyUp","onKeyPress","onScroll","onWheel","onClick","onContextMenu","onDblClick","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","onMouseMove","onMouseOver","onChange","onInput","onTouchStart","onTouchMove","onTouchCancel","onTouchEnd","safeInt","def","startsWith","substring","isNaN","formatDouble","sigfig","toPrecision","endsWith","col","hex","colourAlpha","transp","ONE_OVER_255","colourCanvas","norm2_xyz","signum","invZ","fltEqual","INV_TWOPI","DEGRAD","RADDEG","th","findNode","findNodes","deepClone","escapeHTML","replace","KeyCode","readTextURL","url","thisArg","_arguments","generator","request","XMLHttpRequest","open","responseType","onload","response","onerror","P","fulfilled","step","rejected","Graph","edge1","edge2","nbrs","indices","labels","props","nbr","fromMolecule","mol","numAtoms","numBonds","bfr","bondFrom","bto","bondTo","fromNeighbours","buff","numNodes","numEdges","getEdge","getEdges","getIndex","setIndex","getLabel","setLabel","lbl","getProperty","prp","addNode","hasEdge","node1","node2","addEdge","removeEdge","isolateNode","keepNodesMask","oldsz","newsz","newmap","newnbrs","keepNodesIndex","removeNodesMask","removeNodesIndex","subgraphIndex","nsz","subgraphMask","calculateComponents","cc","high","calculateComponentGroups","grp","calculateRingBlocks","rblk","plen","numVisited","back","nextID","calculateRingBlockGroups","cap","findRingsOfSize","num","rings","newRings","findRingsOfSizeMask","recursiveRingFind","calculateBFS","curnum","lsz","watermark","calculateGravity","wght","wmod","psize","capacity","adj","fnd","newPath","fp","flip","look","same","ResonanceRemover","resBonds","atomHyd","maxIter","bondOrders","tolerant","bondOrder","perform","atomHExplicit","correctInputMask","processComponent","na","nb","atno","atomicNumber","atomCharge","atomAdjCount","nodes","findBond","optionalH","Molecule","HEXPLICIT_UNKNOWN","atomElement","gravity","bsz","bgrav","bidx","seq","paths","resultCount","definiteMatch","p2","validPath","count1","count2","a1","a2","BONDARTIFACT_EXTRA_RESPATH","BONDARTIFACT_EXTRA_RESRING","BONDARTIFACT_EXTRA_ARENE","BondArtifact","resPaths","resRings","arenes","atomExtra","appendResPath","appendResRing","appendArene","blk","res","atoms","pack","pathify","centre","getPathBlocks","getRingBlocks","getAreneBlocks","getResPaths","getResRings","getArenes","rewriteMolecule","extra","modified","setAtomExtra","ring","arene","atom","harmoniseNumbering","blocks","stashPaths","clear","nextIdentifier","stashRings","stashArenes","createPath","alreadyExists","atomsAsPath","createRing","atomsAsRing","createArene","atomsAsArene","removeArtifact","pick","overlap","removeAll","bits","requireRing","areneAtoms","best","bsum","inkeys","DataSheetColumn","ForeignMoleculeTransient","DataSheet","title","description","colData","rowData","numExtens","extData","withRows","inRow","outRow","cloneMask","colMask","rowMask","inclExtn","outCols","outRows","getData","numExtensions","getExtName","getExtType","getExtData","setExtName","setExtType","setExtData","appendExtension","insertExtension","deleteExtension","colName","colType","colDescr","descr","isNull","findColByName","notNull","ct","getMolecule","getString","getExtend","getObject","datum","fromString","getMoleculeClone","getMoleculeBlank","getInteger","getReal","getBoolean","setToNull","setObject","setMolecule","setString","setInteger","setReal","setBoolean","setExtend","isEqualMolecule","isEqualString","isEqualInteger","isEqualReal","isEqualBoolean","appendColumn","insertColumn","deleteColumn","changeColumnName","changeColumnType","newType","oldType","incompatible","toLowerCase","ensureColumn","reorderColumns","order","appendRow","appendRowFrom","srcDS","insertRow","deleteRow","deleteAllRows","moveRowUp","moveRowDown","swapRows","row1","row2","exciseSingleRow","newData","colIsPrimitive","firstColOfType","copyCell","toRow","toCol","fromDS","fromRow","fromCol","convertType","fromType","toType","ft","tt","safeFloat","round","toInt","toReal","ForeignMolecule","noteAromaticAtoms","atomTransient","AtomAromatic","noteAromaticBonds","bondTransient","BondAromatic","noteZeroDativeBonds","BondZeroDative","noteZeroHydrogenBonds","BondZeroHydrogen","markExplicitValence","valence","trans","tr","AtomExplicitValence","setAtomTransient","noteExplicitValence","markSgroupMultiAttach","keyval","idxHigh","AtomSgroupMultiAttach","payload","hasAnySgroupMultiAttach","noteAllSgroupMultiAttach","eq","sgm","markSgroupMultiRepeat","mult","AtomSgroupMultiRepeat","unit","hasAnySgroupMultiRepeat","noteAllSgroupMultiRepeat","mr","markSgroupData","query","_a","AtomSgroupData","hasAnySgroupData","noteAllSgroupData","sd","POLYMERBLOCK_EXTRA_POLYMER","PolymerBlockConnectivity","QueryTypeAtom","QueryTypeBond","PolymerBlockUnit","connect","bondConn","atomName","bondIncl","bondExcl","dup","PolymerBlock","units","blockAtoms","appendBlock","getIDList","getUnit","getUnits","purgeExtraFields","writeUnit","allKeys","removeUnit","pfx","bondExtra","setBondExtra","createUnit","hasPolymerExtensions","getPolymerExtensions","polext","removePolymerExtensions","nattach","HeadToTail","HeadToHead","Random","hasOuter","atomAdjList","subBits","in1","in2","bonds","formatBlockAtom","nbonds","names","formatBlockBond","bond","idxConn","incl","codeAtom","codeBond","QueryUtil","hasAnyQueryAtom","hasAnyQueryBond","hasQueryAtom","hasQueryBond","deleteQueryAtom","deleteQueryBond","deleteQueryAtomAll","xtra","deleteQueryBondAll","queryAtomString","queryAtomStringList","queryBondString","setQueryAtom","setQueryAtomList","setQueryBond","queryAtomCharges","parseIntegers","Charges","queryAtomAromatic","parseBoolean","Aromatic","queryAtomUnsaturated","Unsaturated","queryAtomElements","parseStrings","Elements","queryAtomElementsNot","ElementsNot","queryAtomRingSizes","RingSizes","queryAtomRingSizesNot","RingSizesNot","queryAtomRingBlock","RingBlock","queryAtomNumRings","NumRings","queryAtomRingBonds","RingBonds","queryAtomAdjacency","Adjacency","queryAtomBondSums","BondSums","queryAtomValences","Valences","queryAtomHydrogens","Hydrogens","queryAtomIsotope","Isotopes","queryAtomSubFrags","parseMolecules","SubFrags","queryAtomSubFragsNot","SubFragsNot","queryBondRingSizes","queryBondRingSizesNot","queryBondRingBlock","queryBondNumRings","queryBondOrders","Orders","setQueryAtomCharges","formatIntegers","setQueryAtomAromatic","formatBoolean","setQueryAtomUnsaturated","setQueryAtomElements","formatStrings","setQueryAtomElementsNot","setQueryAtomRingSizes","setQueryAtomRingSizesNot","setQueryAtomRingBlock","setQueryAtomNumRings","setQueryAtomRingBonds","setQueryAtomAdjacency","setQueryAtomBondSums","setQueryAtomValences","setQueryAtomHydrogens","setQueryAtomIsotope","setQueryAtomSubFrags","formatMolecules","setQueryAtomSubFragsNot","setQueryBondRingSizes","setQueryBondRingSizesNot","setQueryBondRingBlock","setQueryBondNumRings","setQueryBondOrders","strlist","intlist","mols","molstr","MolUtil","STEREOGROUP_EXTRA_RACEMIC","STEREOGROUP_EXTRA_RELATIVE","StereoGroup","hasStereoGroups","chiRac","chiRel","atomHasWedge","getRacemicGroups","getRelativeGroups","getRacemicAtoms","getRelativeAtoms","getRacemicGroupAtoms","getRelativeGroupAtoms","groups","stash","createRacemic","createRelative","removeRacemic","removeRelative","is3D","hasWedge","atomAdjBonds","bt","bondType","BONDTYPE_UNKNOWN","BONDTYPE_INCLINED","BONDTYPE_DECLINED","MDLMOL_VALENCE","MDLMOLReader","strData","parseHeader","parseExtended","allowV3000","considerRescale","keepAromatic","keepParity","keepQuery","molName","overallStereoAbsolute","groupAttachAny","groupAttachAll","groupStereoAbsolute","groupStereoRacemic","groupStereoRelative","groupLinkNodes","groupMixtures","scsrTemplates","parseCTAB","nextLine","keepTransient","line","version","parseV3000","trim","z","chg","stereo","hyd","mapnum","addAtom","setAtomZ","setIs3D","setAtomMapNum","AtomChiralMDLOdd","AtomChiralMDLEven","AtomChiralMDLRacemic","BONDTYPE_NORMAL","addBond","appendBondTransient","setBondTransient","superatoms","mixtures","anum","setAtomElement","stype","bracketType","mix","sup","connectType","minRep","maxRep","nbr1","nbr2","logic","elements","setAtomCharge","setAtomUnpaired","setAtomIsotope","setAtomHExplicit","setBondOrder","countRingBonds","countSubstitutions","postFix","artifacts","applyPolymerBlock","applySuperAtom","hasAbbrev","AtomSCSRClass","atomZ","hcount","atomHydrogens","usedValence","unp","atomUnpaired","CoordUtil","normaliseBondDistances","derez","Section","inCTAB","inTemplate","section","lineCounts","lineAtom","lineBond","lineColl","lineSgroup","asdrawnRBC","asdrawnSUB","templateBlocks","ERRPFX","fullLine","Atom","Bond","Coll","SGroup","splitWithQuotes","counts","atomBits","bondBits","parseQueryAtomList","spin","appendAtomTransient","AtomSCSRSeqID","attch","unpackStrings","AtomSCSRAttchOrd","rbc","endpts","attach","dir","setBondType","unpackList","stereoGroup","withoutQuotes","templateClass","natReplace","pts","attachPoints","parseV3000Template","label","not","residual","mod","abvAtom","convertToAbbrevIndex","subsumed","poly","b1","b2","b3","b4","header","mdl","segments","seg","quote","ch","bit","bondInRing","MDLSDFReader","ds","upcastColumns","parseStream","upcastStringColumns","rn","str1","str3","cn","allnull","allreal","allint","allbool","lc","int","VPFX","MDLMOLWriter","includeHeader","includeCounts","includeEnd","enhancedFields","chargeSeparate","abbrevSgroups","polymerBlocks","sgroups","writeCTAB","writeV3000","writeCTAB3000","writeEither","triggered","getResult","hasAnyAbbrev","partialAbbrevExpansion","expandAbbrevs","prepareSgroups","atomList1","atomList2","intrpad","elementAtomicNumber","pad","chgidx","chgval","radidx","radval","isoidx","isoval","rgpidx","rgpval","hydidx","hydval","zboidx","zboval","rbcidx","rbcval","subidx","subval","unsidx","unsval","atomX","atomY","rpad","toFixed","atomMapNum","qhyd","mdlValence","atomIsotope","ISOTOPE_NATURAL","qrbc","qsub","quns","maskArom","qbond","writeMBlockPair","writeMBlockFlat","inSgroup","sg","sidx","encodePolymerBlocks","token","writeMBlockFlatIdxFirst","zeroVal","marked","chgmod","bondSum","nativeVal","frag","getAbbrev","clearAbbrev","setAbbrev","expandOneAbbrev","ma","dat","bestIdx","bestSize","MAX_SAFE_INTEGER","skip","polymers","fl1","fl2","bcrs","sgroupText","populateV3000Sgroups","qel","isotope","packV3000Strings","maskHBond","collections","racidx","relidx","packV3000List","populateSCSRTemplates","sid","txt","defn","tmdl","molfile","trimEnd","MDLSDFWriter","colMol","wtr","MoleculeStream","readUnknown","jsonStr","readNative","readMDLMOL","hdr","skUnescape","frto","writeNative","charge","unpaired","hy","skEscape","skEncodeExtra","writeMDLMOL","code","charCodeAt","toUpperCase","hasZCoord","hasTransient","graph","graphBond","ringID","compID","ring3","ring4","ring5","ring6","ring7","base","trashTransient","getAtom","element","hExplicit","mapNum","transient","getBond","to","bondFromTo","trashGraph","setAtomPos","setAtomX","setAtomY","transi","swapAtoms","setBondFrom","setBondTo","setBondFromTo","deleteAtomAndBonds","deleteBond","HYVALENCE_EL","HYVALENCE_VAL","adjBonds","bondOther","atomExplicit","atomRingBlock","buildGraph","buildRingID","r1","r2","atomConnComp","buildConnComp","boundary","tx1","tx2","appendAtomExtra","appendBondExtra","comp","IDEALBOND","PREFIX_EXTRA","PREFIX_TRANSIENT","atomAtPoint","tolerance","OVERLAP_THRESHOLD","tolsq","sketchEquivalent","mol1","mol2","DEFAULT_EQUIV_TOLERANCE","box1","box2","mx1","arrayAtomX","my1","arrayAtomY","mx2","my2","bestdsq","j1","j2","sketchMappable","atomBondAngles","bndang","overlapsAtom","overlappingAtomMask","thresh","omask","threshSQ","d1","overlappingAtomList","congestionPoint","approach","score","congestionMolecule","mx","my","translateMolecule","ox","oy","rotateMolecule","rotateBond","rotateAtoms","angleNeighbours","mergeAtoms","oldN","newN","centreMolecule","meanX","meanY","deltaX","deltaY","mirrorImage","alignOrientFlip","x0","y0","deltaA","deltaB","dthA","dthB","scoreA","scoreB","atomIsWeirdLinear","Geometry","OVERLAP_THRESHOLD_SQ","SketchUtil","placeNewAtom","placeNewFragment","dirX","dirY","mbox","fbox","vx","vy","fragPosScore","iscore","rangeX","rangeY","mergeOverlappingAtoms","mergeFragmentsDiv","div","chopmask","remap","div1","div2","exotic","removeDuplicateBonds","mergeFragmentsMask","matchAngleGeometry","geom","GEOM_ANGLES","mtheta","hit","gotall","got","primeDirections","angles","calculateNewBondAngles","exits","exitVectors","nn","guessAtomGeometry","mapAngleSubstituent","atblk","elrow","adjBO","adjAN","pri","allSingle","Linear","Octa1","Octa2","Trigonal","SqPlan","Tetra1","Tetra2","gtheta","asz","gsz","vac","gang","mcount","refitAtomGeometry","inRing","allInRing","bestAng","ww","calculateWalkWeight","newAng","bdiff","diff","ringClash","switchAtomGeometry","dst","geoms","bestAtom","bestX","bestY","curth","pickAtomsToConnect","aidx","AUTO_DSQ","bestDSQ","bestA1","bestA2","conn","pickNewAtomDirection","bestTheta","joinOverlappingAtoms","groupX","groupY","adjb","keepmask","moveToEdge","gotS","gotN","sx1","sy1","sx2","sy2","nx1","ny1","nx2","ny2","SEPTEST","placeAdditionalHydrogens","numH","th3","th4","allViableDirections","proposeNewRing","rsz","snap","positionSimpleRing","proposeAtomRing","thsnap","angs","bestDelta","proposeBondRing","sign","brad","guidelineSprouts","sprouts","ords","sprout","orders","orBlank","attidx","ABBREV_ATTACHMENT","validateAbbrevs","convertToAbbrev","srcmask","abbrevName","molidx","junction","polymerExtra","fragidx","maskmol","maskfrag","nadj","newmol","newatom","alignCoords","expandedAbbrevs","expandOneAbbrevFrag","connBond","connType","vx1","vy1","vx2","vy2","invidx","subgraphWithAttachments","xmask","xmol","boxm","boxf","deleteAtoms","componentList","getAtomSides","oldmap","ccmax","grps","getBondSides","bf","arrayAtomMapNum","molecularFormula","punctuation","puncEnter","puncExit","puncEnterSuper","puncExitSuper","countC","countH","formula","molecularWeight","mw","iso","an","bpri","el1","el2","limit1","limit2","boB1A1","boB1A2","boB2A1","boB2A2","bad1","bad2","exotic1","exotic2","ccsz","wn","totalHydrogens","hc","stripHydrogens","force","boringHydrogen","createHydrogens","position","atomVec3","atomOxidationState","nonMetal","oxstate","bo","chalco","oxidationStateText","absox","TEMPLATE_ATTACHMENT","InChIDelegate","generate","execLocation","inchi","InChI","available","inchiPath","X_OK","hasExecutable","setExecutable","isAvailable","nativeMolfileToInChI","writer","mdlmol","inchiKey","proc","cmd","raw","spawnSync","stdout","log","RenderPolicy","pointScale","resolutionDPI","fontSize","lineSize","bondSep","defaultPadding","foreground","background","atomCols","defaultBlackOnWhite","pixPerAng","policy","defaultWhiteOnBlack","defaultColourOnWhite","defaultColourOnBlack","defaultPrintedPublication","RenderEffects","colAtom","colBond","dottedRectOutline","dottedBondCross","hideAtoms","hideBonds","atomFrameDotSz","atomFrameCol","atomCircleSz","atomCircleCol","atomDecoText","atomDecoCol","atomDecoSize","bondDecoText","bondDecoCol","bondDecoSize","overlapAtoms","RenderMnemonicType","BLineType","FitRotatedEllipse","margin","stop","calculate","lookupCache","setupParameters","currentScore","calculateScore","coarseDiscovery","fineImprovement","saveCache","getSpline","cacheMap","cacheVal","psz","invpsz","ptheta","pdist","buffX","buffY","rotatedScore","rtheta","scx","scy","devx","devy","deltaD","deltaR","DELTA_OPTIONS","dw","dh","sanity","bestCX","bestCY","bestRW","bestRH","newCX","newCY","newRW","newRH","newScore","REDUCTION","reduc","dCX","dCY","dRW","dRH","closestDSQ","eth","ii","proxSum","FontData","UNITS_PER_EM","INV_UNITS_PER_EM","PANOSE_1","ASCENT","DESCENT","MISSING_HORZ","MISSING_DATA","ASCENT_FUDGE","UNICODE","HORIZ_ADV_X","GLYPH_DATA","OUTLINE_X","OUTLINE_Y","KERN_C1","KERN_C2","KERN_K","pathCache","pathMissing","ctxReference","getKerning","ch1","ch2","measureText","font","measureWidths","xpos","getRawGlyph","getGlyphPath","Path2D","getMissingPath","getOutlineX","getOutlineY","initNativeFont","ctx","canvas","OffscreenCanvas","getContext","measureTextNative","family","opt","save","bold","italic","metrics","restore","FUDGE","ArrangeMolecule","guestimateSize","FONT_CORRECT","numsym","plusH","aw","ah","measure","effects","points","space","wantArtifacts","artifactCharge","artifactUnpaired","artifactFract","getMeasure","getPolicy","getEffects","getScale","setWantArtifacts","want","getArtifacts","setArtifacts","arrange","bondSepPix","lineSizePix","fontSizePix","ymul","yIsUp","artmask","setupBondOrders","fsz","angToX","angToY","overCol","wad","PADDING","computeSpacePoint","processLabel","bdbl","xy1","shrinkBond","backOffAtom","xy2","ensureMinimumBondLength","head","qbonds","qtxt","oxy","orthogonalDelta","lx1","ly1","lx2","ly2","bnum","Dotted","computeSpaceLine","rotation","ltype","Normal","Inclined","Declined","Unknown","DotDir","IncDouble","IncTriple","IncQuadruple","invD","ext1","ext2","orderedRingList","processDoubleBond","priorityDoubleSubstit","placeHydrogen","isostr","placeAdjunct","annotateAtom","annotateBond","spc","createCurvedPath","delocalisedAnnotation","createCircularRing","isRing","alkeneLike","createBondCentroid","processPolymerUnit","numPoints","getPoint","getPoints","numLines","getLine","getLines","numRings","getRing","getRings","numPaths","getPath","getPaths","numSpace","getSpace","getSpaces","offsetEverything","offsetOrigin","bounds","determineBoundary","scaleEverything","padding","determineBoundaryBox","squeezeInto","bw","bh","downScale","limitBounds","monochromate","spatialCongestion","congest","delocalise","fractional","angdir","zeroBonds","zpt","ext","bestDX","bestDY","angThresh","shorted","DELTA","dang","viol","countPolyViolations","shortCircuit","ibar","ibrace","side","chunks","primary","refchunk","bpos","isPrimary","chunkw","tw","bump","xbump","ybump","active","xy","backOffAtomDelta","d12","d2","invD12","SIZE_ORDER","nring","ringsz","ringbusy","ringscore","ringorder","resbcount","maxbcount","sc","priority","nfr","nto","btheta","countFLeft","countFRight","countTLeft","countTRight","idxFLeft","idxFRight","idxTLeft","idxTRight","noshift","ispri","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","bumpAtomPosition","delta1","delta2","delta3","delta4","adjustBondPosition","lt","fussy","SSFRACT","GLYPH_H","emscale","outlineX","outlineY","firstEMW","emw","chp","extraX","extraY","qh","emdx","emdy","srcWAD","RIGHTLEFT","LEFTRIGHT","UPDOWN","DOWNUP","quad","LEFTIES","allLeft","allRight","allUp","allDown","magPX","magPY","bestExt","anyNoClash","subFsz","nglyphs","norm","spaceSubset","subset","hits","nspc","sr","ssz","alt","nf","nt","sumFrom","sumTo","ta","otherTheta","minExt","stepsz","angsz","limX","limY","subSpace","oth","bth","boxOverlaps","pointmask","linemask","wx1","wy1","wx2","wy2","resolveLineCrossings","bondHigher","bondLower","pt","isRegular","regDist","NaN","FRACT","pb","mdist","fit","extAtom","symbol","EXT","capA","ncross1","ncross2","fr1","fr2","capB","score1","score2","splineInterpolate","qx1","qy1","qx2","qy2","allUnits","processPolymerUnitPair","brackets","bracket","shared","nestings","u1","u2","nestOrder","nestCount","tagidx","isLinear","isOuter","theta1","theta2","ym","bsz1","bsz2","BASE_LINE","BASE_TEXT","fract","invDist","px2","py2","px3","py3","px1","py1","px4","py4","line1","line2","line3","xx","yy","pt1","pt2","ypos","dsq1","drawLine","drawText","xmin","ymin","idxN","idxD2","idxD1","Theme","BASE_URL","RESOURCE_URL","lowlight","lowlightEdge1","lowlightEdge2","highlight","highlightEdge1","highlightEdge2","globalInstance","ONTOLOGY_FILES","OntologyTree","roots","mapTerms","alreadyLoaded","init","loadFromURL","getRoots","hasTerm","uri","getBranch","getBranchList","root","accumulate","branch","loadContent","termList","term","debugString","repeat","SquarePackingSpring","ArrangeMixtureLineSource","TextAlign","PrimClass","StandardUnits","SquarePacking","packSize","boxes","hspace","vspace","layout","wantRatio","candidates","cand","idxStart","springs","Weak","hash","processCandidate","hashes","batch","Strong","Medium","outline","placed","placeAbove","spring","segs","newsegs","mergeSegmentAbove","placeBelow","mergeSegmentBelow","hiX","loY","hiY","ratio","merge","seg1","seg2","ArrangeMixture","mixture","components","minBoxSize","showCollapsors","collapsedBranches","packBranches","includeIdentifiers","nameFontSize","limitStructW","limitStructH","hardwrapName","softwrapName","createComponents","layoutSubComponents","contractComponents","molLayout","molBox","scaleComponents","modScale","nameBox","collapseBox","findComponent","origin","formatQuantity","mixcomp","prec","quantity","relation","rel","formatNormQuantity","note","findNote","concQuantity","concError","concUnits","concRelation","examineBranch","parentIdx","isCollapsed","contents","subOrigin","mixfile","nameLines","wrapSplitName","Name","qline","Quantity","identifiers","truncateEllipsis","Identifier","metadata","metaString","Meta","minsz","gap","wh","wholeBranch","branchBlock","branchBox","totalWidth","totalHeight","bound","cbox","sq","allChildren","pidx","boundX","idxInside","idxOutside","ellw","keep","SpoolSVG","prettyPrint","spool","whole","inc","dec","MetaVector","types","prims","offsetX","offsetY","density","charMissing","lowX","lowY","highX","highY","charMask","primClass","Text","colour","thickness","typeidx","findOrCreateType","updateBounds","drawRect","edgeCol","fillCol","NOCOLOUR","Rect","drawOval","drawPath","xpoints","ypoints","ctrlFlags","isClosed","hardEdge","Path","closed","drawPoly","align","direction","Left","Baseline","Right","Middle","Top","Bottom","mscale","rx1","ry1","rx2","ry2","drawTextNative","fontFamily","TextNative","boundLowX","boundLowY","boundHighX","boundHighY","getBounds","transformPrimitives","transformIntoBox","nw","nh","scaleExtent","maxWidth","maxHeight","sw","sh","swsh","renderInto","domNew","jquery","newElement","renderCanvas","clearFirst","clearRect","window","devicePixelRatio","renderContext","typeObj","setupTypeLine","setupTypeRect","setupTypeOval","setupTypePath","setupTypeText","setupTypeTextNative","renderLine","renderRect","renderOval","renderPath","renderText","renderTextNative","createSVG","withXlink","svg","renderSVG","svgLine1","svgLineN","svgRect1","svgRectN","svgOval1","svgOvalN","svgPath","svgText","svgTextNative","into","beginPath","moveTo","lineTo","strokeStyle","lineWidth","lineCap","stroke","fillStyle","fillRect","strokeRect","ellipse","layer","quadraticCurveTo","bezierCurveTo","closePath","lineJoin","translate","fillText","defineSVGStroke","defineSVGFill","rects","ovals","shape","typeDef","every","DrawMolecule","vg","mnemonics","invScale","getMetaVector","getLayout","draw","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","drawUnderEffects","drawFusedWedge","Artifact","drawBondInclined","drawBondDeclined","drawBondUnknown","drawBondDotted","drawBondIncMulti","fg","bez","Centre","drawOverEffects","wdots","hdots","wspc","hspc","Effect","xdots","ydots","invX","invY","bcount","ixy1","ixy2","dx1","dy1","inv1","dx2","dy2","other1","other2","dth1","diff1","dth2","diff2","diff3","terminalPoints","ty1","ty2","outerX","outerY","innerX","innerY","nsteps","invSteps","holdout","ix","iy","radius","nudge","DrawMixture","hoverIndex","activeIndex","selectedIndex","callbackDrawNameLine","drawConnection","drawComponent","xm","yd","bg","PAIR_UNIT_NAMES","pc","pcWV","pcWW","pcVV","pcMM","mol_L","mmol_L","umol_L","nmol_L","pmol_L","g_L","mg_L","ug_L","mol_kg","kg","mg","ug","ng","L","mL","uL","nL","mmol","umol","nmol","ppm","ppb","PAIR_UNIT_MINCHI","Units","setup","pair","STANDARD_LIST","COMMON_NAMES","URI_TO_NAME","NAME_TO_URI","URI_TO_MINCHI","standardList","commonNames","uriToName","nameToURI","convertToMInChI","mnemonic","DotPathBond","DotPathCharge","DotPath","maskBlock","getBondOrders","numer","denom","getBondClasses","classes","bcls","getChargeClasses","ccls","getAggregateCharges","total","nonsingle","pibonded","metalbonded","bondsum","blk1","blk2","impliedPi","adjpi","maskMaybe","COULD_BLOCK","ACIDS","BASES","hasMetal","amask","totalHave","totalWant","others","electrons","Stereochemistry","chiralTetra","STEREO_NONE","cistransBond","squarePlanar","isH","buildPriority","buildTetraChirality","buildBondCisTrans","buildPlanarCisTrans","buildOctaChirality","atomPriority","atomTetraChirality","bondSideStereo","atomPlanarStereo","getPriorities","getAtomTetraChiral","getBondSideStereo","rubricTetrahedral","numShort","numWedges","th0","one","two","zz","rubricSquarePlanar","ninc","ndec","v0","v3","v4","d3","d4","MIN_ANGLE","MAX_ANGLE","th12","th23","th34","th41","rubricBipyrimidal","atom2","atom3","atom4","atom5","ANGLE_OPPOSITE","v5","atom1","v45","cross","rubricOctahedral","slots","bestOpposite","axial","bestOrthogonal","bestOrient","rubric","rubricBondSides","adj1","adj2","f1","f2","t1","t2","vfr","vto","vbond","vf1","vt1","THRESHSQ","xf1","xt1","xf1N","keepF1T1","keepF2T1","keepF1T2","keepF2T2","vf2","vt2","xf2","xt2","xf2N","haswedge","skip_atom","STEREO_UNKNOWN","parity","STEREO_NEG","STEREO_POS","ringMask","skip_bond","isBondAromatic","pf1","pf2","cipgr","anyActualH","prigr","cip","sortAndGroup","nextpri","repartitioned","cmp","uset","STEREO_BROKEN","RUBRIC_EQUIV_TETRA","RUBRIC_EQUIV_SIDES","RUBRIC_EQUIV_SQUARE","RUBRIC_EQUIV_BIPY","RUBRIC_EQUIV_OCTA","MetaMolecule","atomArom","bondArom","rubricTetra","rubricSquare","rubricBipy","rubricOcta","rubricSides","heavyHash","uniqueElements","dots","piAtom","calculateStrictAromaticity","nr","ensurePiAtoms","anyChange","phase1","phase2","calculateRelaxedAromaticity","exocyclic","rblk1","rblk2","rng","valid","arom","calculateStereoRubric","adjc","adjc1","hc1","adjc2","hc2","removeHydrogens","atomMask","bondMask","atomMap","calculateSkeletonHash","skeletonHash","calculateHeavyHash","anyH","getSkeletonHash","hvy","isAtomAromatic","bondOrderArom","getAtomAromaticity","getBondAromaticity","getHeavyHash","getDotPath","getUniqueElements","equivalentTo","timeout","isomorphMatch","uniq1","uniq2","createRubric","createStrict","createStrictRubric","createRelaxed","createRelaxedRubric","crc_table","BOOT_CRC","start_crc","feed_crc","crc","byte","end_crc","CircularFingerprints","kind","hookApplyNewFP","hookConsiderNewFP","resolvedChiral","atomGroup","fplist","atomAdj","bondAdj","make_crc_table","initialIdentityECFP","applyNewFP","hashCode","iteration","centralAtom","niter","newident","circularIterate","growAtoms","considerNewFP","circ","numFP","getFP","getFingerprints","getUniqueHashes","getFoldedHashes","maxBits","andBits","tanimoto","hash1","hash2","nheavy","nhydr","degree","inring","ru","par","newFP","lookFP","CLASS_ECFP0","CLASS_ECFP2","CLASS_ECFP4","CLASS_ECFP6","DataSheetStream","readXML","summary","extRoot","extList","colList","rowidx","colidx","readJSON","json","writeXML","extension","column","cell","txtNode","writeJSON","nrow","ncol","doConvert","TEMPLATE_FILES","AbbrevContainer","abbrevs","needsSetup","setupData","tfn","dsstr","colAbbrev","attcount","firstConn","submitAbbreviation","getAbbrevs","infrag","promote","submitFragment","submitMolecule","inmol","substituteAbbrevName","fragExp","fragMF","fragFP","abbrev","afragExp","afragFP","search","formatAbbrevLabel","abv","nameHTML","nameSearch","pre","mid","post","MetalLigate","metalAtom","ligandAttach","ligands","lig","anyAttached","makeLigandBond","otherLigands","avgTheta","orientLigand","l1","l2","arrangeLigandsFree","arrangeLigandsRange","otherOrder","extent","resolveClashes","ligAtom","mchg","lchg","idxAttach","lx","ly","molExtent","weight","bestLX","bestLY","attTheta","attDist","attDX","attDY","orderAttach","srcX","srcY","dstX","dstY","dtheta","refTheta","refSpan","bounded","thetaMin","thetaSpan","ligandSpan","determineThetaBounds","rotTheta","bestMin","bestMax","ablk","bblk","bumpDX","bumpDY","CLOSE_SQ","tainted","outer","FusionPermutation","attdist","guided","bridged","scoreModifier","chainSelect","TemplateFusion","templ","numAttach","withGuideOnly","guidetempl","guideidx","guideadj","timeLimit","artif1","artif2","poly1","poly2","huntForGuides","permuteNone","oldmol","oldbox","newbox","ROTN","rotmol","display","srcidx","sourceIndex","permuteAtom","timeStart","getTime","newperms","fliptempl","composeGuidedOne","flipmol","composeDirectOne","composeBridge","affixRawPermutations","permuteBond","composeGuidedTwo","composeDirectTwo","permuteMulti","composeGuidedMulti","composeDirectMulti","o1","otheta","ntheta","ocurrent","ncurrent","scoreMod","bfs","pmol","osz","asMask","temidx","removeExtraGuides","o2","nth","oidx","orad","nidx","nrad","lowbfs","busy1","busy2","att","gidx","gx","gy","homoPenalty","oel","nel","RESERVED_GUIDESYMBOL","sel","padj","snapToGuide","isGuideOnTerminal","nudgenew","cx1","cy1","cx2","cy2","midx","tidx","gatom","closeDSQ","npsz","umask","numKeep","scorePermutation","uscore","uidx","perm","tmol","tunion","contained","ai","aj","bo1","bo2","wantTheta","totalBO","mmask","tfr","tto","tn","wmol","imask","ActivityType","AbsType","MoleculeActivity","activity","param","owner","toClipboard","currentAtom","currentBond","selectedMask","subjectMask","subjectLength","subjectIndex","hasSelected","setOwner","evaluate","execute","Delete","execDelete","Clear","execClear","Copy","execCopy","Cut","SelectAll","execSelectAll","SelectNone","SelectPrevComp","execSelectComp","SelectNextComp","SelectSide","execSelectSide","SelectGrow","execSelectGrow","SelectShrink","execSelectShrink","SelectChain","execSelectChain","SelectSmRing","execSelectSmRing","SelectRingBlk","execSelectRingBlk","SelectCurElement","execSelectCurElement","SelectToggle","execSelectToggle","SelectUnCurrent","execSelectUnCurrent","Element","execElement","positionX","positionY","keepAbbrev","Charge","execCharge","Connect","execConnect","Disconnect","execDisconnect","execMetalLigate","BondOrder","execBond","BondType","BondGeom","execBondGeom","BondAtom","execBondAtom","BondSwitch","execBondSwitch","BondRotate","execBondRotate","BondAddTwo","execBondAddTwo","BondInsert","execBondInsert","Join","execJoin","Nudge","execNudge","NudgeLots","NudgeFar","execNudgeFar","Flip","execFlip","axis","Scale","execScale","Rotate","execRotate","BondDist","execBondDist","AlignAngle","execAlignAngle","angle","AlignRegular","execAlignRegular","AdjustTorsion","execAdjustTorsion","Move","execMove","refAtom","Ring","execRing","ringX","ringY","aromatic","execTemplateFusion","fragNative","setPermutations","permutations","AbbrevTempl","execAbbrevTempl","AbbrevGroup","execAbbrevGroup","AbbrevFormula","execAbbrevFormula","AbbrevClear","execAbbrevClear","AbbrevExpand","execAbbrevExpand","BondArtifactPath","BondArtifactRing","BondArtifactArene","BondArtifactClear","execBondArtifact","execPolymerBlock","AddHydrogens","execAddHydrogens","RemoveHydrogens","execRemoveHydrogens","QueryClear","execQueryClear","QueryCopy","execQueryCopy","QueryPaste","execQueryPaste","QuerySetAtom","execQuerySetAtom","QuerySetBond","execQuerySetBond","QueryBondAny","execQueryBondAny","SproutDirection","execSproutDirection","finish","setState","errmsg","showMessage","requireSubject","zapSubject","withCut","performCopy","all","cclist","pickSelectedGroup","requireCurrent","sides","requireSelected","any","maxRB","gotRB","rb","applyQuery","NON_METALS","TRANSITION_METALS","MAIN_GROUPS","zap","killmask","ligAtoms","performBondNew","ccmol","oneComp","performBondChange","performBondGeomAtom","performBondGeomBond","altmol","ac1","ac2","mobileSide","baseAng","ang1","ang2","alink","fragmask","fusion","isVertical","invSz","connAtoms","curDist","sel1","isSelected","sel2","a3","group1","group3","subj","outmol","pi","checkAbbreviationReady","fixed","requireAtoms","artif","subject","curAtom","removePolymerBlock","performPolymerBlock","selmask","qmol","qterms","aterms","bterms","angleOptions","newAtom","bscore","switchType","stereoType","newang","subjmask","disqualTerminal","side1","side2","weight1","weight2","polymer","NormMixture","notes","analyse","origins","getOrigins","compList","getComponent","enumerateStereo","stereoEnum","childIndexes","sumType","None","sumAmount1","sumAmount2","sumError","toAbsoluteUnits","amount","childType","idxOne","Mass","Volume","Moles","splitMolecule","activ","emols","Mixture","mixfileVersion","fromComponent","isComponentEmpty","BITS","hasQuantity","recursiveEqual","deserialise","serialise","beautify","serialiseComponent","getParentComponent","getComponents","nodeEnum","setComponent","deleteComponent","prependBefore","subcomp","SKIP","splitOrigin","regex","regpad","comp1","comp2","dict1","dict2","keys1","keys2","MInChISegment","ExportMInChI","minchi","segment","fillInChI","formulate","modmix","useRatio","inchiList","mcomp","inchiFrag","PFX","builder","assembleContents","appendSegment","Header","Component","layerN","Hierarchy","layerG","Concentration","getSegment","makeLongHashKey","makeShortHashKey","LETTERS","crclist","feedCharacter","letter","NCRC","trunc","formatConcentration","mantissa","exp","determineExponent","unitURI","scaled","tree","subComp","subTree","conc","shaveBeard","minval","log10","OutlineMeasurement","xToAng","yToAng","MixtureCollection","getMixture","getMixtureDirect","setMixture","setMixtureDirect","deleteMixture","appendMixture","appendMixtureDirect","appendCollection","collection","insertMixture","swapMixtures","m1","m2","RenderHTML","htmlFile","withMInChI","mixlist","emitln","gfx","maker","Aspect","allowModify","isColumnReserved","areColumnsReserved","colNames","resMask","rowFirstBlock","rowBlockCount","aspectUnion","initiateNewRow","columnEffectivelyBlank","numTextRenderings","produceTextRendering","numGraphicRenderings","produceGraphicRendering","numHeaderRenderings","produceHeaderRendering","TEXT_PLAIN","TEXT_LINK","TEXT_HTML","supportedAspects","registerAspect","classdef","CODE","NAME","AssayProvenanceHeader","prefixes","targetName","targetURI","organismName","organismURI","targetTypeName","targetTypeURI","cellName","cellURI","assayTypeName","assayTypeURI","assayDescription","sourceName","sourceURI","sourceVersion","documentName","documentURI","measureTypeName","measureTypeURI","unitNames","unitURIs","AssayProvenance","isAssayProvenance","getHeader","parseMetaData","setHeader","formatMetaData","COLNAME_MOLECULE","getName","COLNAME_NAME","COLNAME_VALUE","getError","COLNAME_ERROR","err","COLNAME_UNITS","getRelation","COLNAME_RELATION","getSourceURI","COLNAME_SOURCEURI","setName","setError","setUnits","setRelation","setSourceURI","parseAndCorrect","plainHeading","URI_UNIT_M","URI_UNIT_mM","URI_UNIT_uM","URI_UNIT_nM","URI_UNIT_pM","URI_UNIT_logM","URI_UNIT_perM","URI_UNIT_gL","URI_UNIT_mgL","URI_UNIT_ugL","URI_UNIT_binary","MeasurementData","isMeasurementData","fields","effectHeader","ensureFields","rename","fldidx","newName","oldName","sfx","SUFFIX_VALUE","SUFFIX_ERROR","SUFFIX_UNITS","SUFFIX_MOD","reservedColumns","fieldName","getValueField","field","colValue","colError","colUnits","colMod","clearValue","getDescr","setDescr","defnURI","resv","colField","MixtureAttributeType","isMixture","attributes","info","TableExtractType","TableExtract","tableFile","lookupFile","mappingFile","verbose","table","aprov","mdata","lookup","mappings","parseLines","initialMapping","customMapping","extractMixture","sep","escaped","aspect","custom","findIndex","appendQuant","stashRatio","Structure","Bound","Ratio","Relation","Link","links","Property","ExportSDFile","colHier","colConc","appendComponent","subseq","ImportSDFile","mixfiles","feed","processBlock","poll","assembleComponents","sdfile","reader","hier","incomp","decodeConcentration","finishRatio","qstr","quant1","quant2","isRatio","TransformMixtureFormat","ALL_TRANSFORMMIXTURE_FORMATS","TransformMixtures","inputFile","inputFormat","outputFile","outputFormat","instream","outstream","nextIndex","roster","fmt","MInChI","SVG","LongMInChIKey","ShortMInChIKey","stdin","Mixfile","pipeMixfile","pipeJSON","SDF","pipeSDF","flushRoster","processMixfile","Console","justHelp","run","printHelp"],"sourceRoot":""}