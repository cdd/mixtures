{"version":3,"file":"mixtures.js","mappings":"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M,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAC9I,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC7I,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE3I7pG,KAAK8pG,WAAa,CACd,GACA,kEACA,2EACA,kNACA,ofACA,8dACA,8nBACA,uCACA,mMACA,8LACA,iJACA,mEACA,uCACA,8BACA,4BACA,0CACA,iWACA,0GACA,wSACA,2fACA,8FACA,kWACA,qgBACA,0DACA,0gBACA,4eACA,uDACA,kEACA,gEACA,+DACA,gEACA,4RACA,6qBACA,0FACA,yaACA,mZACA,6QACA,oEACA,8DACA,8UACA,mEACA,kEACA,qKACA,iFACA,wCACA,4FACA,uEACA,uWACA,uRACA,ieACA,2QACA,+aACA,sDACA,mQACA,mEACA,oHACA,wGACA,wEACA,qEACA,oDACA,gCACA,kDACA,sDACA,kCACA,+BACA,ybACA,kTACA,0SACA,uRACA,qSACA,8KACA,gbACA,uKACA,0DACA,yLACA,iFACA,8BACA,gWACA,uKACA,wPACA,2SACA,4SACA,wJACA,2bACA,mMACA,4KACA,iEACA,8GACA,4FACA,yEACA,gEACA,8SACA,iCACA,0SACA,uSACA,GACA,uDACA,oSACA,4PACA,0aACA,0GACA,0DACA,0yBACA,2DACA,wdACA,waACA,wHACA,yCACA,8BACA,idACA,qCACA,6NACA,qFACA,0QACA,gZACA,wCACA,6KACA,qGACA,8BACA,uJACA,8FACA,sOACA,sHACA,+LACA,gVACA,+fACA,2RACA,sHACA,+HACA,8IACA,yTACA,mJACA,mTACA,iIACA,2jBACA,gGACA,yGACA,wHACA,6HACA,8FACA,uGACA,qHACA,0HACA,2SACA,sSACA,mYACA,6YACA,2ZACA,skBACA,gaACA,gHACA,6hBACA,+RACA,ySACA,uTACA,4TACA,6GACA,qRACA,sdACA,qdACA,8dACA,4eACA,wpBACA,ifACA,8oBACA,mtBACA,odACA,iUACA,0UACA,wVACA,6VACA,0DACA,mEACA,iFACA,sFACA,+cACA,sYACA,qRACA,8RACA,4SACA,udACA,iTACA,sFACA,6YACA,wMACA,iNACA,+NACA,oOACA,8GACA,2SACA,kEACA,uCACA,gGACA,8HACA,8BACA,wGACA,uGACA,sGACA,2YACA,4GACA,kWACA,yHACA,0FACA,yaACA,4CACA,iEACA,oEACA,qEACA,mEACA,mYACA,kEACA,iFACA,uDACA,4FACA,uEACA,0FACA,uWACA,qDACA,uRACA,yFACA,sDACA,wEACA,ydACA,wGACA,8RACA,8TACA,0HACA,gIACA,0TACA,ohBACA,gNACA,kEACA,uSACA,sRACA,meACA,0EACA,mXACA,+eACA,iYACA,4KACA,gcACA,8BACA,oLACA,8DACA,kKACA,iEACA,okBACA,wPACA,kDACA,6RACA,uWACA,wQACA,kDACA,yMACA,2UACA,+FACA,uRACA,+gBACA,sFACA,kQACA,6RACA,6OACA,mjBACA,6cACA,iEACA,2EACA,4FACA,iCACA,0CACA,8BACA,0EACA,8hBACA,iRACA,qcACA,gIACA,6FACA,6FAEJ9pG,KAAK+pG,UAAY,CACb,GAAI,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KACvG,CAAC,IAAK,IAAK,IAAK,OAAQ,KAAM,KAAM,IAAK,IAAK,MAAO,MAAO,IAAK,KAAM,CAAC,IAAK,MAAO,IAAK,IAAK,KAAM,OAAQ,KAAM,OAAQ,KAAM,OAAQ,KAAM,KAAM,IAAK,MAAO,IAAK,OACrK,CAAC,IAAK,MAAO,MAAO,MAAO,IAAK,KAAM,KAAM,MAAO,IAAK,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K,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,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","sources":["webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/get-electron-binding.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/module-names.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/type-utils.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/callbacks-registry.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/index.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/remote.js","webpack://Mixtures/./node_modules/@electron/remote/renderer/index.js","webpack://Mixtures/external node-commonjs \"child_process\"","webpack://Mixtures/external node-commonjs \"electron\"","webpack://Mixtures/external node-commonjs \"https\"","webpack://Mixtures/webpack/bootstrap","webpack://Mixtures/webpack/runtime/define property getters","webpack://Mixtures/webpack/runtime/hasOwnProperty shorthand","webpack://Mixtures/webpack/runtime/make namespace object","webpack://Mixtures/./node_modules/webmolkit/util/Vec.js","webpack://Mixtures/./node_modules/webmolkit/util/Matrix.js","webpack://Mixtures/./node_modules/webmolkit/util/util.js","webpack://Mixtures/./node_modules/webmolkit/util/Triangulation2D.js","webpack://Mixtures/./node_modules/webmolkit/util/Geom.js","webpack://Mixtures/./node_modules/webmolkit/util/XML.js","webpack://Mixtures/./node_modules/webmolkit/util/dom.js","webpack://Mixtures/./node_modules/webmolkit/util/Theme.js","webpack://Mixtures/./node_modules/webmolkit/ui/Tooltip.js","webpack://Mixtures/./src/web/MenuBanner.ts","webpack://Mixtures/./node_modules/webmolkit/mol/Chemistry.js","webpack://Mixtures/./node_modules/webmolkit/mol/Graph.js","webpack://Mixtures/./node_modules/webmolkit/calc/ResonanceRemover.js","webpack://Mixtures/./node_modules/webmolkit/mol/BondArtifact.js","webpack://Mixtures/./node_modules/webmolkit/ds/DataSheet.js","webpack://Mixtures/./node_modules/webmolkit/mol/ForeignMolecule.js","webpack://Mixtures/./node_modules/webmolkit/mol/PolymerBlock.js","webpack://Mixtures/./node_modules/webmolkit/mol/QueryUtil.js","webpack://Mixtures/./node_modules/webmolkit/mol/StereoGroup.js","webpack://Mixtures/./node_modules/webmolkit/io/MDLReader.js","webpack://Mixtures/./node_modules/webmolkit/io/MDLWriter.js","webpack://Mixtures/./node_modules/webmolkit/io/MoleculeStream.js","webpack://Mixtures/./node_modules/webmolkit/mol/Molecule.js","webpack://Mixtures/./node_modules/webmolkit/mol/CoordUtil.js","webpack://Mixtures/./node_modules/webmolkit/mol/SketchUtil.js","webpack://Mixtures/./node_modules/webmolkit/mol/MolUtil.js","webpack://Mixtures/external node-commonjs \"fs\"","webpack://Mixtures/./src/mixture/InChIDelegate.ts","webpack://Mixtures/./src/nodejs/InChI.ts","webpack://Mixtures/./src/electron/MainPanel.ts","webpack://Mixtures/./node_modules/webmolkit/ui/ClipboardProxy.js","webpack://Mixtures/./src/mixture/Units.ts","webpack://Mixtures/./node_modules/webmolkit/mol/DotPath.js","webpack://Mixtures/./node_modules/webmolkit/mol/Stereochemistry.js","webpack://Mixtures/./node_modules/webmolkit/mol/MetaMolecule.js","webpack://Mixtures/./node_modules/webmolkit/calc/CircularFingerprints.js","webpack://Mixtures/./node_modules/webmolkit/io/DataSheetStream.js","webpack://Mixtures/./node_modules/webmolkit/data/AbbrevContainer.js","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/rings.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/termgrp.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/funcgrp.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/protgrp.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/nonplrings.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/largerings.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/crownethers.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/ligmonodent.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/ligbident.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/ligtrident.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/ligmultident.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/cagecmplx.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/aminoacids.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/biomolecules.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/saccharides.ds","webpack://Mixtures/./node_modules/webmolkit/sketcher/MetalLigate.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/TemplateFusion.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/MoleculeActivity.js","webpack://Mixtures/./src/mixture/NormMixture.ts","webpack://Mixtures/./src/mixture/Mixture.ts","webpack://Mixtures/./src/mixture/Mixfile.ts","webpack://Mixtures/./src/mixture/ExportMInChI.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/Rendering.js","webpack://Mixtures/./node_modules/webmolkit/gfx/ArrangeMolecule.js","webpack://Mixtures/./src/mixture/ExportSDFile.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/FontData.js","webpack://Mixtures/./node_modules/webmolkit/gfx/ArrangeMeasurement.js","webpack://Mixtures/./node_modules/webmolkit/mol/PseudoEmbedding.js","webpack://Mixtures/./node_modules/webmolkit/util/FitRotatedEllipse.js","webpack://Mixtures/./node_modules/webmolkit/data/OntologyTree.js","webpack://Mixtures/./node_modules/webmolkit/res/data/ontology/units.onto","webpack://Mixtures/./src/mixture/SquarePacking.ts","webpack://Mixtures/./src/mixture/ArrangeMixture.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/MetaVector.js","webpack://Mixtures/./node_modules/webmolkit/gfx/DrawMolecule.js","webpack://Mixtures/./src/mixture/DrawMixture.ts","webpack://Mixtures/./node_modules/webmolkit/dialog/Dialog.js","webpack://Mixtures/external node-commonjs \"path\"","webpack://Mixtures/./node_modules/webmolkit/ui/Widget.js","webpack://Mixtures/./node_modules/webmolkit/ui/ButtonView.js","webpack://Mixtures/./node_modules/webmolkit/ui/ButtonBank.js","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainUndo.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomPlus.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomMinus.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondOne.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondTwo.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondThree.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondZero.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondUp.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondDown.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondSquig.svg","webpack://Mixtures/./node_modules/webmolkit/sketcher/CommandBank.js","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainRedo.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainZoomIn.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainZoomOut.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainZoomFit.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainSelSide.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainSelAll.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainSelNone.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainDelete.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainCut.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainCopy.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainPaste.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainAtom.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainBond.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainSelect.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainMove.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomAbbrev.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomSBlock.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomPBlock.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomDBlock.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomFBlock.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomNoble.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondFour.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondQAny.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondAddTwo.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondInsert.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondSwitch.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondRotate.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondLinear.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondTrigonal.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondTetra1.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondTetra2.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondSqPlan.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondOcta1.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondOcta2.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondMetalLigate.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondArtifactPath.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondArtifactRing.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondArtifactArene.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondArtifactClear.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondPolymer.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/SelectionGrow.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/SelectionShrink.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/SelectionChain.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/SelectionSmRing.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/SelectionRingBlk.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/SelectionCurElement.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainSelPrev.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainSelNext.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/SelectionToggle.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/SelectionUncurrent.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveJoin.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainNew.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomInline.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomFormula.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomExpandAbbrev.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomClearAbbrev.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveUp.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveDown.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveLeft.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRight.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveUpLots.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveDownLots.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveLeftLots.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRightLots.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveUpFar.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveDownFar.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveLeftFar.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRightFar.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRotP01.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRotM01.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRotP05.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRotM05.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRotP15.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRotM15.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRotP30.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRotM30.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveHFlip.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveVFlip.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveShrink.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveGrow.svg","webpack://Mixtures/./node_modules/webmolkit/sketcher/ContextSketch.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/DrawCanvas.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/GeomWidget.js","webpack://Mixtures/./node_modules/webmolkit/ui/OptionList.js","webpack://Mixtures/./node_modules/webmolkit/ui/TabBar.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/ExtraFieldsWidget.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/PeriodicTableWidget.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/QueryFieldsWidget.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/EditAtom.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/EditBond.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/EditPolymer.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/TemplateBank.js","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/GenericAccept.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/TemplatePrev.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/TemplateNext.svg","webpack://Mixtures/./node_modules/webmolkit/sketcher/ToolBank.js","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/ToolSelect.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/ToolRotate.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/ToolPan.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/ToolDrag.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/ToolErasor.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/ToolRing.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/ToolArom.svg","webpack://Mixtures/./node_modules/webmolkit/sketcher/Sketcher.js","webpack://Mixtures/./node_modules/webmolkit/dialog/EditCompound.js","webpack://Mixtures/./node_modules/webmolkit/ui/Popup.js","webpack://Mixtures/./src/web/KeyValueWidget.ts","webpack://Mixtures/./src/electron/MetadataWidget.ts","webpack://Mixtures/./src/web/EditComponent.ts","webpack://Mixtures/./src/electron/PubChemSearch.ts","webpack://Mixtures/./src/electron/LookupCompoundDialog.ts","webpack://Mixtures/./src/mixture/ExtractCTABComponent.ts","webpack://Mixtures/./src/web/EditMixture.ts","webpack://Mixtures/./src/electron/EditMixtureDesktop.ts","webpack://Mixtures/./src/electron/MixturePanel.ts","webpack://Mixtures/./node_modules/webmolkit/ui/MenuProxy.js","webpack://Mixtures/external node-commonjs \"process\"","webpack://Mixtures/./src/mixture/MixtureCollection.ts","webpack://Mixtures/./src/electron/CollectionPanel.ts","webpack://Mixtures/./src/electron/startup.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getElectronBinding = void 0;\nconst getElectronBinding = (name) => {\n    if (process._linkedBinding) {\n        return process._linkedBinding('electron_common_' + name);\n    }\n    else if (process.electronBinding) {\n        return process.electronBinding(name);\n    }\n    else {\n        return null;\n    }\n};\nexports.getElectronBinding = getElectronBinding;\n","\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.browserModuleNames = exports.commonModuleNames = void 0;\nconst get_electron_binding_1 = require(\"./get-electron-binding\");\nexports.commonModuleNames = [\n    'clipboard',\n    'nativeImage',\n    'shell',\n];\nexports.browserModuleNames = [\n    'app',\n    'autoUpdater',\n    'BaseWindow',\n    'BrowserView',\n    'BrowserWindow',\n    'contentTracing',\n    'crashReporter',\n    'dialog',\n    'globalShortcut',\n    'ipcMain',\n    'inAppPurchase',\n    'Menu',\n    'MenuItem',\n    'nativeTheme',\n    'net',\n    'netLog',\n    'MessageChannelMain',\n    'Notification',\n    'powerMonitor',\n    'powerSaveBlocker',\n    'protocol',\n    'pushNotifications',\n    'safeStorage',\n    'screen',\n    'session',\n    'ShareMenu',\n    'systemPreferences',\n    'TopLevelWindow',\n    'TouchBar',\n    'Tray',\n    'utilityProcess',\n    'View',\n    'webContents',\n    'WebContentsView',\n    'webFrameMain',\n].concat(exports.commonModuleNames);\nconst features = get_electron_binding_1.getElectronBinding('features');\nif (((_a = features === null || features === void 0 ? void 0 : features.isDesktopCapturerEnabled) === null || _a === void 0 ? void 0 : _a.call(features)) !== false) {\n    exports.browserModuleNames.push('desktopCapturer');\n}\nif (((_b = features === null || features === void 0 ? void 0 : features.isViewApiEnabled) === null || _b === void 0 ? void 0 : _b.call(features)) !== false) {\n    exports.browserModuleNames.push('ImageView');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserialize = exports.serialize = exports.isSerializableObject = exports.isPromise = void 0;\nconst electron_1 = require(\"electron\");\nfunction isPromise(val) {\n    return (val &&\n        val.then &&\n        val.then instanceof Function &&\n        val.constructor &&\n        val.constructor.reject &&\n        val.constructor.reject instanceof Function &&\n        val.constructor.resolve &&\n        val.constructor.resolve instanceof Function);\n}\nexports.isPromise = isPromise;\nconst serializableTypes = [\n    Boolean,\n    Number,\n    String,\n    Date,\n    Error,\n    RegExp,\n    ArrayBuffer\n];\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm#Supported_types\nfunction isSerializableObject(value) {\n    return value === null || ArrayBuffer.isView(value) || serializableTypes.some(type => value instanceof type);\n}\nexports.isSerializableObject = isSerializableObject;\nconst objectMap = function (source, mapper) {\n    const sourceEntries = Object.entries(source);\n    const targetEntries = sourceEntries.map(([key, val]) => [key, mapper(val)]);\n    return Object.fromEntries(targetEntries);\n};\nfunction serializeNativeImage(image) {\n    const representations = [];\n    const scaleFactors = image.getScaleFactors();\n    // Use Buffer when there's only one representation for better perf.\n    // This avoids compressing to/from PNG where it's not necessary to\n    // ensure uniqueness of dataURLs (since there's only one).\n    if (scaleFactors.length === 1) {\n        const scaleFactor = scaleFactors[0];\n        const size = image.getSize(scaleFactor);\n        const buffer = image.toBitmap({ scaleFactor });\n        representations.push({ scaleFactor, size, buffer });\n    }\n    else {\n        // Construct from dataURLs to ensure that they are not lost in creation.\n        for (const scaleFactor of scaleFactors) {\n            const size = image.getSize(scaleFactor);\n            const dataURL = image.toDataURL({ scaleFactor });\n            representations.push({ scaleFactor, size, dataURL });\n        }\n    }\n    return { __ELECTRON_SERIALIZED_NativeImage__: true, representations };\n}\nfunction deserializeNativeImage(value) {\n    const image = electron_1.nativeImage.createEmpty();\n    // Use Buffer when there's only one representation for better perf.\n    // This avoids compressing to/from PNG where it's not necessary to\n    // ensure uniqueness of dataURLs (since there's only one).\n    if (value.representations.length === 1) {\n        const { buffer, size, scaleFactor } = value.representations[0];\n        const { width, height } = size;\n        image.addRepresentation({ buffer, scaleFactor, width, height });\n    }\n    else {\n        // Construct from dataURLs to ensure that they are not lost in creation.\n        for (const rep of value.representations) {\n            const { dataURL, size, scaleFactor } = rep;\n            const { width, height } = size;\n            image.addRepresentation({ dataURL, scaleFactor, width, height });\n        }\n    }\n    return image;\n}\nfunction serialize(value) {\n    if (value && value.constructor && value.constructor.name === 'NativeImage') {\n        return serializeNativeImage(value);\n    }\n    if (Array.isArray(value)) {\n        return value.map(serialize);\n    }\n    else if (isSerializableObject(value)) {\n        return value;\n    }\n    else if (value instanceof Object) {\n        return objectMap(value, serialize);\n    }\n    else {\n        return value;\n    }\n}\nexports.serialize = serialize;\nfunction deserialize(value) {\n    if (value && value.__ELECTRON_SERIALIZED_NativeImage__) {\n        return deserializeNativeImage(value);\n    }\n    else if (Array.isArray(value)) {\n        return value.map(deserialize);\n    }\n    else if (isSerializableObject(value)) {\n        return value;\n    }\n    else if (value instanceof Object) {\n        return objectMap(value, deserialize);\n    }\n    else {\n        return value;\n    }\n}\nexports.deserialize = deserialize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallbacksRegistry = void 0;\nclass CallbacksRegistry {\n    constructor() {\n        this.nextId = 0;\n        this.callbacks = {};\n        this.callbackIds = new WeakMap();\n        this.locationInfo = new WeakMap();\n    }\n    add(callback) {\n        // The callback is already added.\n        let id = this.callbackIds.get(callback);\n        if (id != null)\n            return id;\n        id = this.nextId += 1;\n        this.callbacks[id] = callback;\n        this.callbackIds.set(callback, id);\n        // Capture the location of the function and put it in the ID string,\n        // so that release errors can be tracked down easily.\n        const regexp = /at (.*)/gi;\n        const stackString = (new Error()).stack;\n        if (!stackString)\n            return id;\n        let filenameAndLine;\n        let match;\n        while ((match = regexp.exec(stackString)) !== null) {\n            const location = match[1];\n            if (location.includes('(native)'))\n                continue;\n            if (location.includes('(<anonymous>)'))\n                continue;\n            if (location.includes('callbacks-registry.js'))\n                continue;\n            if (location.includes('remote.js'))\n                continue;\n            if (location.includes('@electron/remote/dist'))\n                continue;\n            const ref = /([^/^)]*)\\)?$/gi.exec(location);\n            if (ref)\n                filenameAndLine = ref[1];\n            break;\n        }\n        this.locationInfo.set(callback, filenameAndLine);\n        return id;\n    }\n    get(id) {\n        return this.callbacks[id] || function () { };\n    }\n    getLocation(callback) {\n        return this.locationInfo.get(callback);\n    }\n    apply(id, ...args) {\n        return this.get(id).apply(global, ...args);\n    }\n    remove(id) {\n        const callback = this.callbacks[id];\n        if (callback) {\n            this.callbackIds.delete(callback);\n            delete this.callbacks[id];\n        }\n    }\n}\nexports.CallbacksRegistry = CallbacksRegistry;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nif (process.type === 'browser')\n    throw new Error(`\"@electron/remote\" cannot be required in the browser process. Instead require(\"@electron/remote/main\").`);\n__exportStar(require(\"./remote\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createFunctionWithReturnValue = exports.getGlobal = exports.getCurrentWebContents = exports.getCurrentWindow = exports.getBuiltin = void 0;\nconst callbacks_registry_1 = require(\"./callbacks-registry\");\nconst type_utils_1 = require(\"../common/type-utils\");\nconst electron_1 = require(\"electron\");\nconst module_names_1 = require(\"../common/module-names\");\nconst get_electron_binding_1 = require(\"../common/get-electron-binding\");\nconst { Promise } = global;\nconst callbacksRegistry = new callbacks_registry_1.CallbacksRegistry();\nconst remoteObjectCache = new Map();\nconst finalizationRegistry = new FinalizationRegistry((id) => {\n    const ref = remoteObjectCache.get(id);\n    if (ref !== undefined && ref.deref() === undefined) {\n        remoteObjectCache.delete(id);\n        electron_1.ipcRenderer.send(\"REMOTE_BROWSER_DEREFERENCE\" /* BROWSER_DEREFERENCE */, contextId, id, 0);\n    }\n});\nconst electronIds = new WeakMap();\nconst isReturnValue = new WeakSet();\nfunction getCachedRemoteObject(id) {\n    const ref = remoteObjectCache.get(id);\n    if (ref !== undefined) {\n        const deref = ref.deref();\n        if (deref !== undefined)\n            return deref;\n    }\n}\nfunction setCachedRemoteObject(id, value) {\n    const wr = new WeakRef(value);\n    remoteObjectCache.set(id, wr);\n    finalizationRegistry.register(value, id);\n    return value;\n}\nfunction getContextId() {\n    const v8Util = get_electron_binding_1.getElectronBinding('v8_util');\n    if (v8Util) {\n        return v8Util.getHiddenValue(global, 'contextId');\n    }\n    else {\n        throw new Error('Electron >=v13.0.0-beta.6 required to support sandboxed renderers');\n    }\n}\n// An unique ID that can represent current context.\nconst contextId = process.contextId || getContextId();\n// Notify the main process when current context is going to be released.\n// Note that when the renderer process is destroyed, the message may not be\n// sent, we also listen to the \"render-view-deleted\" event in the main process\n// to guard that situation.\nprocess.on('exit', () => {\n    const command = \"REMOTE_BROWSER_CONTEXT_RELEASE\" /* BROWSER_CONTEXT_RELEASE */;\n    electron_1.ipcRenderer.send(command, contextId);\n});\nconst IS_REMOTE_PROXY = Symbol('is-remote-proxy');\n// Convert the arguments object into an array of meta data.\nfunction wrapArgs(args, visited = new Set()) {\n    const valueToMeta = (value) => {\n        // Check for circular reference.\n        if (visited.has(value)) {\n            return {\n                type: 'value',\n                value: null\n            };\n        }\n        if (value && value.constructor && value.constructor.name === 'NativeImage') {\n            return { type: 'nativeimage', value: type_utils_1.serialize(value) };\n        }\n        else if (Array.isArray(value)) {\n            visited.add(value);\n            const meta = {\n                type: 'array',\n                value: wrapArgs(value, visited)\n            };\n            visited.delete(value);\n            return meta;\n        }\n        else if (value instanceof Buffer) {\n            return {\n                type: 'buffer',\n                value\n            };\n        }\n        else if (type_utils_1.isSerializableObject(value)) {\n            return {\n                type: 'value',\n                value\n            };\n        }\n        else if (typeof value === 'object') {\n            if (type_utils_1.isPromise(value)) {\n                return {\n                    type: 'promise',\n                    then: valueToMeta(function (onFulfilled, onRejected) {\n                        value.then(onFulfilled, onRejected);\n                    })\n                };\n            }\n            else if (electronIds.has(value)) {\n                return {\n                    type: 'remote-object',\n                    id: electronIds.get(value)\n                };\n            }\n            const meta = {\n                type: 'object',\n                name: value.constructor ? value.constructor.name : '',\n                members: []\n            };\n            visited.add(value);\n            for (const prop in value) { // eslint-disable-line guard-for-in\n                meta.members.push({\n                    name: prop,\n                    value: valueToMeta(value[prop])\n                });\n            }\n            visited.delete(value);\n            return meta;\n        }\n        else if (typeof value === 'function' && isReturnValue.has(value)) {\n            return {\n                type: 'function-with-return-value',\n                value: valueToMeta(value())\n            };\n        }\n        else if (typeof value === 'function') {\n            return {\n                type: 'function',\n                id: callbacksRegistry.add(value),\n                location: callbacksRegistry.getLocation(value),\n                length: value.length\n            };\n        }\n        else {\n            return {\n                type: 'value',\n                value\n            };\n        }\n    };\n    return args.map(valueToMeta);\n}\n// Populate object's members from descriptors.\n// The |ref| will be kept referenced by |members|.\n// This matches |getObjectMemebers| in rpc-server.\nfunction setObjectMembers(ref, object, metaId, members) {\n    if (!Array.isArray(members))\n        return;\n    for (const member of members) {\n        if (Object.prototype.hasOwnProperty.call(object, member.name))\n            continue;\n        const descriptor = { enumerable: member.enumerable };\n        if (member.type === 'method') {\n            const remoteMemberFunction = function (...args) {\n                let command;\n                if (this && this.constructor === remoteMemberFunction) {\n                    command = \"REMOTE_BROWSER_MEMBER_CONSTRUCTOR\" /* BROWSER_MEMBER_CONSTRUCTOR */;\n                }\n                else {\n                    command = \"REMOTE_BROWSER_MEMBER_CALL\" /* BROWSER_MEMBER_CALL */;\n                }\n                const ret = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name, wrapArgs(args));\n                return metaToValue(ret);\n            };\n            let descriptorFunction = proxyFunctionProperties(remoteMemberFunction, metaId, member.name);\n            descriptor.get = () => {\n                descriptorFunction.ref = ref; // The member should reference its object.\n                return descriptorFunction;\n            };\n            // Enable monkey-patch the method\n            descriptor.set = (value) => {\n                descriptorFunction = value;\n                return value;\n            };\n            descriptor.configurable = true;\n        }\n        else if (member.type === 'get') {\n            descriptor.get = () => {\n                const command = \"REMOTE_BROWSER_MEMBER_GET\" /* BROWSER_MEMBER_GET */;\n                const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name);\n                return metaToValue(meta);\n            };\n            if (member.writable) {\n                descriptor.set = (value) => {\n                    const args = wrapArgs([value]);\n                    const command = \"REMOTE_BROWSER_MEMBER_SET\" /* BROWSER_MEMBER_SET */;\n                    const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name, args);\n                    if (meta != null)\n                        metaToValue(meta);\n                    return value;\n                };\n            }\n        }\n        Object.defineProperty(object, member.name, descriptor);\n    }\n}\n// Populate object's prototype from descriptor.\n// This matches |getObjectPrototype| in rpc-server.\nfunction setObjectPrototype(ref, object, metaId, descriptor) {\n    if (descriptor === null)\n        return;\n    const proto = {};\n    setObjectMembers(ref, proto, metaId, descriptor.members);\n    setObjectPrototype(ref, proto, metaId, descriptor.proto);\n    Object.setPrototypeOf(object, proto);\n}\n// Wrap function in Proxy for accessing remote properties\nfunction proxyFunctionProperties(remoteMemberFunction, metaId, name) {\n    let loaded = false;\n    // Lazily load function properties\n    const loadRemoteProperties = () => {\n        if (loaded)\n            return;\n        loaded = true;\n        const command = \"REMOTE_BROWSER_MEMBER_GET\" /* BROWSER_MEMBER_GET */;\n        const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, name);\n        setObjectMembers(remoteMemberFunction, remoteMemberFunction, meta.id, meta.members);\n    };\n    return new Proxy(remoteMemberFunction, {\n        set: (target, property, value) => {\n            if (property !== 'ref')\n                loadRemoteProperties();\n            target[property] = value;\n            return true;\n        },\n        get: (target, property) => {\n            if (property === IS_REMOTE_PROXY)\n                return true;\n            if (!Object.prototype.hasOwnProperty.call(target, property))\n                loadRemoteProperties();\n            const value = target[property];\n            if (property === 'toString' && typeof value === 'function') {\n                return value.bind(target);\n            }\n            return value;\n        },\n        ownKeys: (target) => {\n            loadRemoteProperties();\n            return Object.getOwnPropertyNames(target);\n        },\n        getOwnPropertyDescriptor: (target, property) => {\n            const descriptor = Object.getOwnPropertyDescriptor(target, property);\n            if (descriptor)\n                return descriptor;\n            loadRemoteProperties();\n            return Object.getOwnPropertyDescriptor(target, property);\n        }\n    });\n}\n// Convert meta data from browser into real value.\nfunction metaToValue(meta) {\n    if (!meta)\n        return {};\n    if (meta.type === 'value') {\n        return meta.value;\n    }\n    else if (meta.type === 'array') {\n        return meta.members.map((member) => metaToValue(member));\n    }\n    else if (meta.type === 'nativeimage') {\n        return type_utils_1.deserialize(meta.value);\n    }\n    else if (meta.type === 'buffer') {\n        return Buffer.from(meta.value.buffer, meta.value.byteOffset, meta.value.byteLength);\n    }\n    else if (meta.type === 'promise') {\n        return Promise.resolve({ then: metaToValue(meta.then) });\n    }\n    else if (meta.type === 'error') {\n        return metaToError(meta);\n    }\n    else if (meta.type === 'exception') {\n        if (meta.value.type === 'error') {\n            throw metaToError(meta.value);\n        }\n        else {\n            throw new Error(`Unexpected value type in exception: ${meta.value.type}`);\n        }\n    }\n    else {\n        let ret;\n        if ('id' in meta) {\n            const cached = getCachedRemoteObject(meta.id);\n            if (cached !== undefined) {\n                return cached;\n            }\n        }\n        // A shadow class to represent the remote function object.\n        if (meta.type === 'function') {\n            const remoteFunction = function (...args) {\n                let command;\n                if (this && this.constructor === remoteFunction) {\n                    command = \"REMOTE_BROWSER_CONSTRUCTOR\" /* BROWSER_CONSTRUCTOR */;\n                }\n                else {\n                    command = \"REMOTE_BROWSER_FUNCTION_CALL\" /* BROWSER_FUNCTION_CALL */;\n                }\n                const obj = electron_1.ipcRenderer.sendSync(command, contextId, meta.id, wrapArgs(args));\n                return metaToValue(obj);\n            };\n            ret = remoteFunction;\n        }\n        else {\n            ret = {};\n        }\n        setObjectMembers(ret, ret, meta.id, meta.members);\n        setObjectPrototype(ret, ret, meta.id, meta.proto);\n        if (ret.constructor && ret.constructor[IS_REMOTE_PROXY]) {\n            Object.defineProperty(ret.constructor, 'name', { value: meta.name });\n        }\n        // Track delegate obj's lifetime & tell browser to clean up when object is GCed.\n        electronIds.set(ret, meta.id);\n        setCachedRemoteObject(meta.id, ret);\n        return ret;\n    }\n}\nfunction metaToError(meta) {\n    const obj = meta.value;\n    for (const { name, value } of meta.members) {\n        obj[name] = metaToValue(value);\n    }\n    return obj;\n}\nfunction hasSenderId(input) {\n    return typeof input.senderId === \"number\";\n}\nfunction handleMessage(channel, handler) {\n    electron_1.ipcRenderer.on(channel, (event, passedContextId, id, ...args) => {\n        if (hasSenderId(event)) {\n            if (event.senderId !== 0 && event.senderId !== undefined) {\n                console.error(`Message ${channel} sent by unexpected WebContents (${event.senderId})`);\n                return;\n            }\n        }\n        if (passedContextId === contextId) {\n            handler(id, ...args);\n        }\n        else {\n            // Message sent to an un-exist context, notify the error to main process.\n            electron_1.ipcRenderer.send(\"REMOTE_BROWSER_WRONG_CONTEXT_ERROR\" /* BROWSER_WRONG_CONTEXT_ERROR */, contextId, passedContextId, id);\n        }\n    });\n}\nconst enableStacks = process.argv.includes('--enable-api-filtering-logging');\nfunction getCurrentStack() {\n    const target = { stack: undefined };\n    if (enableStacks) {\n        Error.captureStackTrace(target, getCurrentStack);\n    }\n    return target.stack;\n}\n// Browser calls a callback in renderer.\nhandleMessage(\"REMOTE_RENDERER_CALLBACK\" /* RENDERER_CALLBACK */, (id, args) => {\n    callbacksRegistry.apply(id, metaToValue(args));\n});\n// A callback in browser is released.\nhandleMessage(\"REMOTE_RENDERER_RELEASE_CALLBACK\" /* RENDERER_RELEASE_CALLBACK */, (id) => {\n    callbacksRegistry.remove(id);\n});\nexports.require = (module) => {\n    const command = \"REMOTE_BROWSER_REQUIRE\" /* BROWSER_REQUIRE */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, module, getCurrentStack());\n    return metaToValue(meta);\n};\n// Alias to remote.require('electron').xxx.\nfunction getBuiltin(module) {\n    const command = \"REMOTE_BROWSER_GET_BUILTIN\" /* BROWSER_GET_BUILTIN */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, module, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getBuiltin = getBuiltin;\nfunction getCurrentWindow() {\n    const command = \"REMOTE_BROWSER_GET_CURRENT_WINDOW\" /* BROWSER_GET_CURRENT_WINDOW */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getCurrentWindow = getCurrentWindow;\n// Get current WebContents object.\nfunction getCurrentWebContents() {\n    const command = \"REMOTE_BROWSER_GET_CURRENT_WEB_CONTENTS\" /* BROWSER_GET_CURRENT_WEB_CONTENTS */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getCurrentWebContents = getCurrentWebContents;\n// Get a global object in browser.\nfunction getGlobal(name) {\n    const command = \"REMOTE_BROWSER_GET_GLOBAL\" /* BROWSER_GET_GLOBAL */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, name, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getGlobal = getGlobal;\n// Get the process object in browser.\nObject.defineProperty(exports, 'process', {\n    enumerable: true,\n    get: () => exports.getGlobal('process')\n});\n// Create a function that will return the specified value when called in browser.\nfunction createFunctionWithReturnValue(returnValue) {\n    const func = () => returnValue;\n    isReturnValue.add(func);\n    return func;\n}\nexports.createFunctionWithReturnValue = createFunctionWithReturnValue;\nconst addBuiltinProperty = (name) => {\n    Object.defineProperty(exports, name, {\n        enumerable: true,\n        get: () => exports.getBuiltin(name)\n    });\n};\nmodule_names_1.browserModuleNames\n    .forEach(addBuiltinProperty);\n","module.exports = require('../dist/src/renderer')\n","module.exports = require(\"child_process\");","module.exports = require(\"electron\");","module.exports = require(\"https\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Vec {\n    static isBlank(arr) { return arr == null || arr.length == 0; }\n    static notBlank(arr) { return arr != null && arr.length > 0; }\n    static safeArray(arr) { return arr == null ? [] : arr; }\n    static len(arr) { return arr == null ? 0 : arr.length; }\n    static arrayLength(arr) { return arr == null ? 0 : arr.length; }\n    static anyTrue(arr) {\n        if (arr == null)\n            return false;\n        for (let v of arr)\n            if (v)\n                return true;\n        return false;\n    }\n    static allTrue(arr) {\n        if (arr == null)\n            return true;\n        for (let v of arr)\n            if (!v)\n                return false;\n        return true;\n    }\n    static anyFalse(arr) {\n        if (arr == null)\n            return false;\n        for (let v of arr)\n            if (!v)\n                return true;\n        return false;\n    }\n    static allFalse(arr) {\n        if (arr == null)\n            return true;\n        for (let v of arr)\n            if (v)\n                return false;\n        return true;\n    }\n    static iterAnyTrue(arr, callback) {\n        for (let v of arr)\n            if (callback(v))\n                return true;\n        return false;\n    }\n    static iterAllTrue(arr, callback) {\n        for (let v of arr)\n            if (!callback(v))\n                return false;\n        return true;\n    }\n    static iterAnyFalse(arr, callback) {\n        for (let v of arr)\n            if (!callback(v))\n                return true;\n        return false;\n    }\n    static iterAllFalse(arr, callback) {\n        for (let v of arr)\n            if (callback(v))\n                return false;\n        return true;\n    }\n    static swap(arr, idx1, idx2) {\n        let v = arr[idx1];\n        arr[idx1] = arr[idx2];\n        arr[idx2] = v;\n    }\n    static duplicate(arr) {\n        return arr == null ? [] : arr.slice(0);\n    }\n    static append(arr, item) {\n        if (arr == null || arr.length == 0)\n            return [item];\n        arr = arr.slice(0);\n        arr.push(item);\n        return arr;\n    }\n    static prepend(arr, item) {\n        if (arr == null || arr.length == 0)\n            return [item];\n        arr = arr.slice(0);\n        arr.unshift(item);\n        return arr;\n    }\n    static concat(arr1, arr2) {\n        if (arr1 == null && arr2 == null)\n            return [];\n        if (arr1 == null)\n            return arr2.slice(0);\n        if (arr2 == null)\n            return arr1.slice(0);\n        return arr1.concat(arr2);\n    }\n    static remove(arr, idx) {\n        arr = arr.slice(0);\n        arr.splice(idx, 1);\n        return arr;\n    }\n    static flatten(mtx) {\n        let ret = [];\n        for (let vec of mtx)\n            ret.push(...vec);\n        return ret;\n    }\n    static transpose(mtx) {\n        let sz1 = mtx.length, sz2 = mtx[0].length;\n        let ret = Vec.anyArray(null, sz2);\n        for (let j = 0; j < sz2; j++) {\n            ret[j] = Vec.anyArray(null, sz1);\n            for (let i = 0; i < sz1; i++)\n                ret[j][i] = mtx[i][j];\n        }\n        return ret;\n    }\n    static equals(arr1, arr2) {\n        if (arr1 == null && arr2 == null)\n            return true;\n        if (arr1 == null || arr2 == null)\n            return false;\n        if (arr1.length != arr2.length)\n            return false;\n        for (let n = 0; n < arr1.length; n++)\n            if (arr1[n] != arr2[n])\n                return false;\n        return true;\n    }\n    static equivalent(arr1, arr2) {\n        const len1 = arr1 == null ? 0 : arr1.length, len2 = arr2 == null ? 0 : arr2.length;\n        if (len1 != len2)\n            return false;\n        for (let n = 0; n < len1; n++)\n            if (arr1[n] != arr2[n])\n                return false;\n        return true;\n    }\n    static compareTo(arr1, arr2) {\n        const sz = Math.max(arr1.length, arr2.length);\n        for (let n = 0; n < sz; n++) {\n            if (arr1[n] < arr2[n])\n                return -1;\n            if (arr1[n] > arr2[n])\n                return 1;\n        }\n        return 0;\n    }\n    static booleanArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static numberArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static stringArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static anyArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static genericArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static genericBlankArrays(sz) {\n        let arr = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            arr[n] = [];\n        return arr;\n    }\n    static funcArray(sz, func) {\n        let arr = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            arr[n] = func(n);\n        return arr;\n    }\n    static first(arr) { return arr == null || arr.length == 0 ? null : arr[0]; }\n    static last(arr) { return arr == null || arr.length == 0 ? null : arr[arr.length - 1]; }\n    static min(arr) {\n        if (arr == null || arr.length == 0)\n            return Number.MAX_VALUE;\n        let v = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            v = Math.min(v, arr[n]);\n        return v;\n    }\n    static max(arr) {\n        if (arr == null || arr.length == 0)\n            return Number.MIN_VALUE;\n        let v = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            v = Math.max(v, arr[n]);\n        return v;\n    }\n    static idxMin(arr) {\n        if (arr == null || arr.length == 0)\n            return -1;\n        let idx = 0;\n        for (let n = 1; n < arr.length; n++)\n            if (arr[n] < arr[idx])\n                idx = n;\n        return idx;\n    }\n    static idxMax(arr) {\n        if (arr == null || arr.length == 0)\n            return -1;\n        let idx = 0;\n        for (let n = 1; n < arr.length; n++)\n            if (arr[n] > arr[idx])\n                idx = n;\n        return idx;\n    }\n    static range(arr) {\n        if (arr == null || arr.length == 0)\n            return 0;\n        let lo = arr[0], hi = arr[0];\n        for (let n = 1; n < arr.length; n++) {\n            if (arr[n] < lo)\n                lo = arr[n];\n            if (arr[n] > hi)\n                hi = arr[n];\n        }\n        return hi - lo;\n    }\n    static reverse(arr) {\n        let ret = [];\n        for (let n = arr.length - 1; n >= 0; n--)\n            ret.push(arr[n]);\n        return ret;\n    }\n    static identity0(sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n;\n        return ret;\n    }\n    static identity1(sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n + 1;\n        return ret;\n    }\n    static identityN(start, sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n + start;\n        return ret;\n    }\n    static notMask(mask) {\n        let ret = new Array(mask.length);\n        for (let n = mask.length - 1; n >= 0; n--)\n            ret[n] = !mask[n];\n        return ret;\n    }\n    static idxGet(arr, idx) {\n        let ret = [];\n        for (let n = 0; n < idx.length; n++)\n            ret.push(arr[idx[n]]);\n        return ret;\n    }\n    static maskCount(mask) {\n        if (!mask)\n            return 0;\n        let c = 0;\n        for (let n = mask.length - 1; n >= 0; n--)\n            if (mask[n])\n                c++;\n        return c;\n    }\n    static maskIdx(mask) {\n        let idx = [];\n        for (let n = 0; n < mask.length; n++)\n            if (mask[n])\n                idx.push(n);\n        return idx;\n    }\n    static idxMask(idx, sz) {\n        let mask = Vec.booleanArray(false, sz);\n        for (let n of idx)\n            mask[n] = true;\n        return mask;\n    }\n    static maskMap(mask) {\n        let ret = [];\n        for (let n = 0, pos = 0; n < mask.length; n++)\n            ret.push(mask[n] ? pos++ : -1);\n        return ret;\n    }\n    static maskGet(arr, mask) {\n        let ret = [];\n        for (let n = 0, p = 0; n < arr.length; n++)\n            if (mask[n])\n                ret.push(arr[n]);\n        return ret;\n    }\n    static maskEqual(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] == arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] == val);\n        }\n        return ret;\n    }\n    static sum(arr) {\n        if (arr == null || arr.length == 0)\n            return 0;\n        let t = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            t += arr[n];\n        return t;\n    }\n    static add(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] + arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] + val);\n        }\n        return ret;\n    }\n    static sub(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] - arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] - val);\n        }\n        return ret;\n    }\n    static mul(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] * arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] * val);\n        }\n        return ret;\n    }\n    static neg(arr) {\n        let ret = arr.slice(0);\n        for (let n = ret.length - 1; n >= 0; n--)\n            ret[n] *= -1;\n        return ret;\n    }\n    static setTo(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] = val; }\n    static addTo(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] += val; }\n    static mulBy(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] *= val; }\n    static addToArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] += val[n]; }\n    static subFromArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] -= val[n]; }\n    static mulByArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] *= val[n]; }\n    static divByArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] /= val[n]; }\n    static idxSort(arr) {\n        let idx = new Array(arr.length);\n        for (let n = 0; n < arr.length; n++)\n            idx[n] = n;\n        idx.sort((a, b) => arr[a] < arr[b] ? -1 : arr[a] > arr[b] ? 1 : 0);\n        return idx;\n    }\n    static sort(arr) {\n        arr.sort((v1, v2) => v1 - v2);\n    }\n    static sorted(arr) {\n        arr = arr.slice(0);\n        this.sort(arr);\n        return arr;\n    }\n    static sortedUnique(arr) {\n        if (arr == null || arr.length == 0)\n            return [];\n        let unique = Vec.uniqueUnstable(arr);\n        if (typeof arr[0] == 'number')\n            this.sort(unique);\n        else\n            unique.sort();\n        return unique;\n    }\n    static uniqueUnstable(arr) {\n        return Array.from(new Set(arr));\n    }\n    static uniqueStable(arr) {\n        let set = new Set(arr), ret = [];\n        for (let v of arr)\n            if (set.has(v)) {\n                ret.push(v);\n                set.delete(v);\n            }\n        return ret;\n    }\n    static maskUnique(arr) {\n        let set = new Set(arr), ret = this.booleanArray(false, arr.length);\n        for (let n = 0; n < arr.length; n++)\n            if (set.has(arr[n])) {\n                ret[n] = true;\n                set.delete(arr[n]);\n            }\n        return ret;\n    }\n    static idxUnique(arr) {\n        let set = new Set(arr), ret = [];\n        for (let n = 0; n < arr.length; n++)\n            if (set.has(arr[n])) {\n                ret.push(n);\n                set.delete(arr[n]);\n            }\n        return ret;\n    }\n    static exclude(arr, excl) {\n        const sz = Vec.len(arr);\n        if (sz == 0)\n            return [];\n        let mask = new Array(sz);\n        let count = 0;\n        for (let n = 0; n < arr.length; n++) {\n            mask[n] = excl.indexOf(arr[n]) < 0;\n            if (mask[n])\n                count++;\n        }\n        if (count == sz)\n            return arr;\n        return Vec.maskGet(arr, mask);\n    }\n}\nclass Permutation {\n    static parityPerms(idx) {\n        let v = Vec.booleanArray(false, idx.length);\n        let p = 0;\n        for (let i = idx.length - 1; i >= 0; i--) {\n            if (v[i])\n                p++;\n            else {\n                let j = i;\n                do {\n                    j = idx[j];\n                    v[j] = true;\n                } while (j != i);\n            }\n        }\n        return p;\n    }\n    static parityIdentity(idx) {\n        return this.parityPerms(idx) & 1;\n    }\n    static parityOrder(src) {\n        if (src.length <= 1)\n            return 0;\n        else if (src.length == 2)\n            return src[0] < src[1] ? 0 : 1;\n        else if (src.length == 3) {\n            let p = 1;\n            if (src[0] < src[1])\n                p++;\n            if (src[0] < src[2])\n                p++;\n            if (src[1] < src[2])\n                p++;\n            return p & 1;\n        }\n        else if (src.length == 4) {\n            let p = 0;\n            if (src[0] < src[1])\n                p++;\n            if (src[0] < src[2])\n                p++;\n            if (src[0] < src[3])\n                p++;\n            if (src[1] < src[2])\n                p++;\n            if (src[1] < src[3])\n                p++;\n            if (src[2] < src[3])\n                p++;\n            return p & 1;\n        }\n        let idx = [], sorted = src.slice(0);\n        sorted.sort();\n        for (let n = 0; n < src.length; n++)\n            idx.push(sorted.indexOf(src[n]));\n        return this.parityIdentity(idx);\n    }\n    static smallPermutation(sz) {\n        if (sz == 1)\n            return this.PERM1;\n        else if (sz == 2)\n            return this.PERM2;\n        else if (sz == 3)\n            return this.PERM3;\n        else if (sz == 4)\n            return this.PERM4;\n        else\n            return null;\n    }\n    static allPermutations(sz) {\n        if (sz <= this.SMALL_PERMS)\n            return this.smallPermutation(sz);\n        while (this.PERM_CACHE.length < this.MAX_CACHE - this.SMALL_PERMS)\n            this.PERM_CACHE.push(null);\n        if (sz < this.MAX_CACHE && this.PERM_CACHE[sz - this.SMALL_PERMS] != null)\n            return this.PERM_CACHE[sz - this.SMALL_PERMS];\n        let nperms = 1;\n        for (let n = 2; n <= sz; n++)\n            nperms *= n;\n        let perms = [];\n        let idx = Vec.identity0(sz);\n        perms.push(idx.slice(0));\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n < nperms; n++) {\n            nonunique: while (idx[0] < sz) {\n                idx[sz - 1]++;\n                for (let i = sz - 1; i > 0; i--) {\n                    if (idx[i] < sz)\n                        break;\n                    idx[i] = 0;\n                    idx[i - 1]++;\n                }\n                Vec.setTo(mask, false);\n                for (let i of idx) {\n                    if (mask[i])\n                        continue nonunique;\n                    mask[i] = true;\n                }\n                perms[n] = idx.slice(0);\n                break;\n            }\n        }\n        if (sz < this.MAX_CACHE)\n            this.PERM_CACHE[sz - this.SMALL_PERMS] = perms;\n        return perms;\n    }\n}\nPermutation.PERM1 = [[0]];\nPermutation.PERM2 = [[0, 1], [1, 0]];\nPermutation.PERM3 = [[0, 1, 2], [0, 2, 1], [1, 0, 2], [1, 2, 0], [2, 0, 1], [2, 1, 0]];\nPermutation.PERM4 = [\n    [0, 1, 2, 3], [0, 1, 3, 2], [0, 2, 1, 3], [0, 2, 3, 1], [0, 3, 1, 2], [0, 3, 2, 1],\n    [1, 0, 2, 3], [1, 0, 3, 2], [1, 2, 0, 3], [1, 2, 3, 0], [1, 3, 0, 2], [1, 3, 2, 0],\n    [2, 0, 1, 3], [2, 0, 3, 1], [2, 1, 0, 3], [2, 1, 3, 0], [2, 3, 0, 1], [2, 3, 1, 0],\n    [3, 0, 1, 2], [3, 0, 2, 1], [3, 1, 0, 2], [3, 1, 2, 0], [3, 2, 0, 1], [3, 2, 1, 0]\n];\nPermutation.SMALL_PERMS = 4;\nPermutation.MAX_CACHE = 8;\nPermutation.PERM_CACHE = [];\nexport { Permutation };\n//# sourceMappingURL=Vec.js.map","import { Vec } from './Vec';\nexport class Matrix {\n    constructor(m, n, s = 0) {\n        this.m = m;\n        this.n = n;\n        if (m == 0)\n            return;\n        this.A = new Array(m);\n        for (let i = 0; i < m; i++)\n            this.A[i] = Vec.numberArray(s, n);\n    }\n    static fromArray(A) {\n        let mtx = new Matrix(0, 0);\n        mtx.A = A;\n        mtx.m = A.length;\n        mtx.n = A[0].length;\n        return mtx;\n    }\n    clone() {\n        const { A, m, n } = this;\n        let mtx = new Matrix(m, n);\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                mtx.A[i][j] = A[i][j];\n        return mtx;\n    }\n    get numRows() { return this.m; }\n    get numCols() { return this.n; }\n    get(i, j) { return this.A[i][j]; }\n    set(i, j, v) { this.A[i][j] = v; }\n    transpose() {\n        const { A, m, n } = this;\n        let X = new Matrix(n, m);\n        const C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[j][i] = A[i][j];\n        return X;\n    }\n    norm1() {\n        const { A, m, n } = this;\n        let f = 0;\n        for (let j = 0; j < n; j++) {\n            let s = 0;\n            for (let i = 0; i < m; i++)\n                s += Math.abs(A[i][j]);\n            f = Math.max(f, s);\n        }\n        return f;\n    }\n    normInf() {\n        const { A, m, n } = this;\n        let f = 0;\n        for (let i = 0; i < m; i++) {\n            let s = 0;\n            for (let j = 0; j < n; j++)\n                s += Math.abs(A[i][j]);\n            f = Math.max(f, s);\n        }\n        return f;\n    }\n    uminus() {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = -A[i][j];\n        return X;\n    }\n    plus(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] + B.A[i][j];\n        return X;\n    }\n    plusEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] + B.A[i][j];\n        return this;\n    }\n    minus(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] - B.A[i][j];\n        return X;\n    }\n    minusEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] - B.A[i][j];\n        return this;\n    }\n    arrayTimes(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] * B.A[i][j];\n        return X;\n    }\n    arrayTimesEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] * B.A[i][j];\n        return this;\n    }\n    arrayRightDivide(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] / B.A[i][j];\n        return X;\n    }\n    arrayRightDivideEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] / B.A[i][j];\n        return this;\n    }\n    arrayLeftDivide(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = B.A[i][j] / A[i][j];\n        return X;\n    }\n    arrayLeftDivideEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = B.A[i][j] / A[i][j];\n        return this;\n    }\n    scalarTimes(s) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = s * A[i][j];\n        return X;\n    }\n    scalarTimesEquals(s) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = s * A[i][j];\n        return this;\n    }\n    times(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, B.n);\n        let C = X.A, Bcolj = new Array(n);\n        for (let j = 0; j < B.n; j++) {\n            for (let k = 0; k < n; k++)\n                Bcolj[k] = B.A[k][j];\n            for (let i = 0; i < m; i++) {\n                let Arowi = A[i];\n                let s = 0;\n                for (let k = 0; k < n; k++)\n                    s += Arowi[k] * Bcolj[k];\n                C[i][j] = s;\n            }\n        }\n        return X;\n    }\n    rank() {\n        return new SingularValueDecomposition(this).rank();\n    }\n    cond() {\n        return new SingularValueDecomposition(this).cond();\n    }\n    trace() {\n        const { A, m, n } = this;\n        let t = 0;\n        for (let i = 0; i < Math.min(m, n); i++) {\n            t += A[i][i];\n        }\n        return t;\n    }\n    static identity(m, n) {\n        let mtx = new Matrix(m, n);\n        let A = mtx.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = (i == j ? 1.0 : 0.0);\n        return mtx;\n    }\n    toString() {\n        let lines = ['['];\n        for (let row of this.A)\n            lines.push(JSON.stringify(row));\n        lines.push(']');\n        return lines.join('\\n');\n    }\n}\nexport class SingularValueDecomposition {\n    constructor(mtx) {\n        let A = mtx.A;\n        let m = this.m = mtx.m;\n        let n = this.n = mtx.n;\n        let nu = Math.min(m, n);\n        let s = this.s = new Array(Math.min(m + 1, n));\n        let U = this.U = new Array(m);\n        let V = this.V = new Array(n);\n        for (let i = 0; i < m; i++)\n            U[i] = Vec.numberArray(0, nu);\n        for (let j = 0; j < n; j++)\n            V[j] = Vec.numberArray(0, n);\n        let e = new Array(n);\n        let work = new Array(m);\n        let wantu = true, wantv = true;\n        let nct = Math.min(m - 1, n);\n        let nrt = Math.max(0, Math.min(n - 2, m));\n        for (let k = 0; k < Math.max(nct, nrt); k++) {\n            if (k < nct) {\n                s[k] = 0;\n                for (let i = k; i < m; i++)\n                    s[k] = SingularValueDecomposition.hypot(s[k], A[i][k]);\n                if (s[k] != 0.0) {\n                    if (A[k][k] < 0.0)\n                        s[k] = -s[k];\n                    for (let i = k; i < m; i++)\n                        A[i][k] /= s[k];\n                    A[k][k] += 1.0;\n                }\n                s[k] = -s[k];\n            }\n            for (let j = k + 1; j < n; j++) {\n                if ((k < nct) && (s[k] != 0.0)) {\n                    let t = 0;\n                    for (let i = k; i < m; i++)\n                        t += A[i][k] * A[i][j];\n                    t = -t / A[k][k];\n                    for (let i = k; i < m; i++)\n                        A[i][j] += t * A[i][k];\n                }\n                e[j] = A[k][j];\n            }\n            if (wantu && (k < nct)) {\n                for (let i = k; i < m; i++)\n                    U[i][k] = A[i][k];\n            }\n            if (k < nrt) {\n                e[k] = 0;\n                for (let i = k + 1; i < n; i++)\n                    e[k] = SingularValueDecomposition.hypot(e[k], e[i]);\n                if (e[k] != 0.0) {\n                    if (e[k + 1] < 0.0)\n                        e[k] = -e[k];\n                    for (let i = k + 1; i < n; i++)\n                        e[i] /= e[k];\n                    e[k + 1] += 1.0;\n                }\n                e[k] = -e[k];\n                if ((k + 1 < m) && (e[k] != 0.0)) {\n                    for (let i = k + 1; i < m; i++)\n                        work[i] = 0.0;\n                    for (let j = k + 1; j < n; j++)\n                        for (let i = k + 1; i < m; i++)\n                            work[i] += e[j] * A[i][j];\n                    for (let j = k + 1; j < n; j++) {\n                        let t = -e[j] / e[k + 1];\n                        for (let i = k + 1; i < m; i++)\n                            A[i][j] += t * work[i];\n                    }\n                }\n                if (wantv) {\n                    for (let i = k + 1; i < n; i++)\n                        V[i][k] = e[i];\n                }\n            }\n        }\n        let p = Math.min(n, m + 1);\n        if (nct < n)\n            s[nct] = A[nct][nct];\n        if (m < p)\n            s[p - 1] = 0.0;\n        if (nrt + 1 < p)\n            e[nrt] = A[nrt][p - 1];\n        e[p - 1] = 0.0;\n        if (wantu) {\n            for (let j = nct; j < nu; j++) {\n                for (let i = 0; i < m; i++)\n                    U[i][j] = 0.0;\n                U[j][j] = 1.0;\n            }\n            for (let k = nct - 1; k >= 0; k--) {\n                if (s[k] != 0.0) {\n                    for (let j = k + 1; j < nu; j++) {\n                        let t = 0;\n                        for (let i = k; i < m; i++)\n                            t += U[i][k] * U[i][j];\n                        t = -t / U[k][k];\n                        for (let i = k; i < m; i++)\n                            U[i][j] += t * U[i][k];\n                    }\n                    for (let i = k; i < m; i++)\n                        U[i][k] = -U[i][k];\n                    U[k][k] = 1.0 + U[k][k];\n                    for (let i = 0; i < k - 1; i++)\n                        U[i][k] = 0.0;\n                }\n                else {\n                    for (let i = 0; i < m; i++)\n                        U[i][k] = 0.0;\n                    U[k][k] = 1.0;\n                }\n            }\n        }\n        if (wantv) {\n            for (let k = n - 1; k >= 0; k--) {\n                if ((k < nrt) && (e[k] != 0.0)) {\n                    for (let j = k + 1; j < nu; j++) {\n                        let t = 0;\n                        for (let i = k + 1; i < n; i++)\n                            t += V[i][k] * V[i][j];\n                        t = -t / V[k + 1][k];\n                        for (let i = k + 1; i < n; i++)\n                            V[i][j] += t * V[i][k];\n                    }\n                }\n                for (let i = 0; i < n; i++)\n                    V[i][k] = 0.0;\n                V[k][k] = 1.0;\n            }\n        }\n        let pp = p - 1;\n        let iter = 0;\n        let eps = Math.pow(2.0, -52.0);\n        let tiny = Math.pow(2.0, -966.0);\n        while (p > 0) {\n            let k, kase;\n            for (k = p - 2; k >= -1; k--) {\n                if (k == -1)\n                    break;\n                if (Math.abs(e[k]) <= tiny + eps * (Math.abs(s[k]) + Math.abs(s[k + 1]))) {\n                    e[k] = 0.0;\n                    break;\n                }\n            }\n            if (k == p - 2) {\n                kase = 4;\n            }\n            else {\n                let ks;\n                for (ks = p - 1; ks >= k; ks--) {\n                    if (ks == k)\n                        break;\n                    let t = (ks != p ? Math.abs(e[ks]) : 0.) + (ks != k + 1 ? Math.abs(e[ks - 1]) : 0.);\n                    if (Math.abs(s[ks]) <= tiny + eps * t) {\n                        s[ks] = 0.0;\n                        break;\n                    }\n                }\n                if (ks == k)\n                    kase = 3;\n                else if (ks == p - 1)\n                    kase = 1;\n                else {\n                    kase = 2;\n                    k = ks;\n                }\n            }\n            k++;\n            if (kase == 1) {\n                let f = e[p - 2];\n                e[p - 2] = 0.0;\n                for (let j = p - 2; j >= k; j--) {\n                    let t = SingularValueDecomposition.hypot(s[j], f);\n                    let cs = s[j] / t;\n                    let sn = f / t;\n                    s[j] = t;\n                    if (j != k) {\n                        f = -sn * e[j - 1];\n                        e[j - 1] = cs * e[j - 1];\n                    }\n                    if (wantv) {\n                        for (let i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][p - 1];\n                            V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                            V[i][j] = t;\n                        }\n                    }\n                }\n            }\n            else if (kase == 2) {\n                let f = e[k - 1];\n                e[k - 1] = 0.0;\n                for (let j = k; j < p; j++) {\n                    let t = SingularValueDecomposition.hypot(s[j], f);\n                    let cs = s[j] / t;\n                    let sn = f / t;\n                    s[j] = t;\n                    f = -sn * e[j];\n                    e[j] = cs * e[j];\n                    if (wantu) {\n                        for (let i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][k - 1];\n                            U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n            }\n            else if (kase == 3) {\n                let scale = Math.max(Math.max(Math.max(Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2])), Math.abs(e[p - 2])), Math.abs(s[k])), Math.abs(e[k]));\n                let sp = s[p - 1] / scale;\n                let spm1 = s[p - 2] / scale;\n                let epm1 = e[p - 2] / scale;\n                let sk = s[k] / scale;\n                let ek = e[k] / scale;\n                let b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2.0;\n                let c = (sp * epm1) * (sp * epm1);\n                let shift = 0.0;\n                if ((b != 0.0) || (c != 0.0)) {\n                    shift = Math.sqrt(b * b + c);\n                    if (b < 0.0)\n                        shift = -shift;\n                    shift = c / (b + shift);\n                }\n                let f = (sk + sp) * (sk - sp) + shift;\n                let g = sk * ek;\n                for (let j = k; j < p - 1; j++) {\n                    let t = SingularValueDecomposition.hypot(f, g);\n                    let cs = f / t;\n                    let sn = g / t;\n                    if (j != k)\n                        e[j - 1] = t;\n                    f = cs * s[j] + sn * e[j];\n                    e[j] = cs * e[j] - sn * s[j];\n                    g = sn * s[j + 1];\n                    s[j + 1] = cs * s[j + 1];\n                    if (wantv) {\n                        for (let i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][j + 1];\n                            V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                            V[i][j] = t;\n                        }\n                    }\n                    t = SingularValueDecomposition.hypot(f, g);\n                    cs = f / t;\n                    sn = g / t;\n                    s[j] = t;\n                    f = cs * e[j] + sn * s[j + 1];\n                    s[j + 1] = -sn * e[j] + cs * s[j + 1];\n                    g = sn * e[j + 1];\n                    e[j + 1] = cs * e[j + 1];\n                    if (wantu && (j < m - 1)) {\n                        for (let i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][j + 1];\n                            U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n                e[p - 2] = f;\n                iter = iter + 1;\n            }\n            else if (kase == 4) {\n                if (s[k] <= 0.0) {\n                    s[k] = (s[k] < 0.0 ? -s[k] : 0.0);\n                    if (wantv) {\n                        for (let i = 0; i <= pp; i++)\n                            V[i][k] = -V[i][k];\n                    }\n                }\n                while (k < pp) {\n                    if (s[k] >= s[k + 1])\n                        break;\n                    let t = s[k];\n                    s[k] = s[k + 1];\n                    s[k + 1] = t;\n                    if (wantv && (k < n - 1)) {\n                        for (let i = 0; i < n; i++) {\n                            t = V[i][k + 1];\n                            V[i][k + 1] = V[i][k];\n                            V[i][k] = t;\n                        }\n                    }\n                    if (wantu && (k < m - 1)) {\n                        for (let i = 0; i < m; i++) {\n                            t = U[i][k + 1];\n                            U[i][k + 1] = U[i][k];\n                            U[i][k] = t;\n                        }\n                    }\n                    k++;\n                }\n                iter = 0;\n                p--;\n            }\n        }\n    }\n    getU() {\n        return Matrix.fromArray(this.U);\n    }\n    getV() {\n        return Matrix.fromArray(this.V);\n    }\n    getSingularValues() {\n        return this.s;\n    }\n    getS() {\n        const { n } = this;\n        let X = new Matrix(n, n, 0);\n        let S = X.A;\n        for (let i = 0; i < n; i++)\n            S[i][i] = this.s[i];\n        return X;\n    }\n    norm2() {\n        return this.s[0];\n    }\n    cond() {\n        const { m, n, s } = this;\n        return s[0] / s[Math.min(m, n) - 1];\n    }\n    rank() {\n        const { m, n, s } = this;\n        let eps = Math.pow(2.0, -52.0);\n        let tol = Math.max(m, n) * s[0] * eps;\n        let r = 0;\n        for (let i = 0; i < s.length; i++)\n            if (s[i] > tol)\n                r++;\n        return r;\n    }\n    static hypot(a, b) {\n        let r;\n        if (Math.abs(a) > Math.abs(b)) {\n            r = b / a;\n            r = Math.abs(a) * Math.sqrt(1 + r * r);\n        }\n        else if (b != 0) {\n            r = a / b;\n            r = Math.abs(b) * Math.sqrt(1 + r * r);\n        }\n        else {\n            r = 0.0;\n        }\n        return r;\n    }\n}\n//# sourceMappingURL=Matrix.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { dom, domLegacy } from './dom';\nimport { Size } from './Geom';\nimport { Vec } from './Vec';\nexport function safeInt(str, def = 0) {\n    if (str == null || str.length == 0)\n        return def;\n    let val = str.startsWith('0x') ? parseInt(str.substring(2), 16) :\n        str.startsWith('#') ? parseInt(str.substring(1), 16) : parseInt(str);\n    return isNaN(val) ? def : val;\n}\nexport function safeFloat(str, def = 0) {\n    if (str == null || str.length == 0)\n        return def;\n    let val = parseFloat(str);\n    return isNaN(val) ? def : val;\n}\nexport function newElement(parent, tag, attr) {\n    let domNew = dom(`<${tag}/>`);\n    if (attr)\n        domNew.attr(attr);\n    domLegacy(parent).append(domNew);\n    return domNew.el;\n}\nexport function addText(parent, text) {\n    let el = dom(parent).el;\n    el.appendChild(document.createTextNode(text));\n}\nexport function plural(count) {\n    return count == 1 ? '' : 's';\n}\nexport function formatDouble(value, sigfig) {\n    if (value == null)\n        return '';\n    let str = value.toPrecision(sigfig);\n    if (str.indexOf('.') > 0) {\n        while (str.endsWith('0'))\n            str = str.substring(0, str.length - 1);\n        if (str.endsWith('.'))\n            str = str.substring(0, str.length - 1);\n    }\n    return str;\n}\nexport function htmlToRGB(col) {\n    if (col == null || col.charAt(0) != '#' || col.length != 7)\n        return null;\n    return parseInt(col.substring(1), 16);\n}\nexport function colourCode(col) {\n    let hex = (col & 0xFFFFFF).toString(16);\n    while (hex.length < 6)\n        hex = '0' + hex;\n    return '#' + hex;\n}\nexport function colourAlpha(col) {\n    let transp = (col >>> 24) & 0xFF;\n    return transp == 0 ? 1 : transp == 0xFF ? 0 : 1 - (transp * (1.0 / 255));\n}\nconst ONE_OVER_255 = 1.0 / 255;\nexport function colourCanvas(col) {\n    if (col == 0xFFFFFF)\n        return 'white';\n    if (col == 0x000000)\n        return 'black';\n    if (col == -1)\n        return null;\n    if (col >= 0 && col <= 0xFFFFFF)\n        return colourCode(col);\n    const t = ((col >> 24) & 0xFF) * ONE_OVER_255;\n    const r = ((col >> 16) & 0xFF);\n    const g = ((col >> 8) & 0xFF);\n    const b = (col & 0xFF);\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + (1 - t) + ')';\n}\nexport function blendRGB(fract, rgb1, rgb2, rgb3) {\n    fract = Math.max(0, Math.min(1, fract));\n    let r1 = ((rgb1 >> 16) & 0xFF) * ONE_OVER_255, g1 = ((rgb1 >> 8) & 0xFF) * ONE_OVER_255, b1 = (rgb1 & 0xFF) * ONE_OVER_255;\n    let r2 = ((rgb2 >> 16) & 0xFF) * ONE_OVER_255, g2 = ((rgb2 >> 8) & 0xFF) * ONE_OVER_255, b2 = (rgb2 & 0xFF) * ONE_OVER_255;\n    let R, G, B;\n    if (rgb3 == null) {\n        let f1 = 1 - fract, f2 = fract;\n        R = Math.round(0xFF * (f1 * r1 + f2 * r2));\n        G = Math.round(0xFF * (f1 * g1 + f2 * g2));\n        B = Math.round(0xFF * (f1 * b1 + f2 * b2));\n    }\n    else {\n        let r3 = ((rgb3 >> 16) & 0xFF) * ONE_OVER_255, g3 = ((rgb3 >> 8) & 0xFF) * ONE_OVER_255, b3 = (rgb3 & 0xFF) * ONE_OVER_255;\n        if (fract < 0.5) {\n            let f2 = fract * 2, f1 = 1 - f2;\n            R = Math.round(0xFF * (f1 * r1 + f2 * r2));\n            G = Math.round(0xFF * (f1 * g1 + f2 * g2));\n            B = Math.round(0xFF * (f1 * b1 + f2 * b2));\n        }\n        else {\n            let f2 = (fract - 0.5) * 2, f1 = 1 - f2;\n            R = Math.round(0xFF * (f1 * r2 + f2 * r3));\n            G = Math.round(0xFF * (f1 * g2 + f2 * g3));\n            B = Math.round(0xFF * (f1 * b2 + f2 * b3));\n        }\n    }\n    return (R << 16) | (G << 8) | B;\n}\nexport function formatDate(date) {\n    const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    let day = date.getDate(), mon = date.getMonth(), year = date.getFullYear();\n    return day + '-' + MONTHS[mon] + '-' + year;\n}\nexport function nodeText(node) {\n    let ret = '';\n    if (!node)\n        return '';\n    node = node.firstChild;\n    while (node) {\n        if (node.nodeType == 3 || node.nodeType == 4)\n            ret += node.nodeValue;\n        node = node.nextSibling;\n    }\n    return ret;\n}\nexport function isDef(v) {\n    return !(v === null || typeof v === 'undefined');\n}\nexport function notDef(v) {\n    return v === null || typeof v === 'undefined';\n}\nexport function eventCoords(event, container) {\n    let pos = domLegacy(container).offset();\n    let relX = event.pageX - pos.x;\n    let relY = event.pageY - pos.y;\n    return [relX, relY];\n}\nexport function setBoundaryPixels(dom, x, y, w, h) {\n    dom.css({ 'left': x + 'px', 'top': y + 'px', 'width': w + 'px', 'height': h + 'px' });\n}\nexport function getBoundaryPixelsDOM(dom) {\n    let offset = dom.offset();\n    return [offset.x, offset.y, dom.width(), dom.height()];\n}\nexport function getOffsetPixelsDOM(dom) {\n    return [dom.elHTML.offsetLeft, dom.elHTML.offsetTop, dom.elHTML.offsetWidth, dom.elHTML.offsetHeight];\n}\nexport function norm_xy(dx, dy) {\n    return Math.hypot(dx, dy);\n}\nexport function norm_xyz(dx, dy, dz) {\n    return Math.hypot(dx, dy, dz);\n}\nexport function norm2_xy(dx, dy) {\n    return dx * dx + dy * dy;\n}\nexport function norm2_xyz(dx, dy, dz) {\n    return dx * dx + dy * dy + dz * dz;\n}\nexport function signum(v) {\n    return v < 0 ? -1 : v > 0 ? 1 : 0;\n}\nexport function sqr(v) {\n    return v * v;\n}\nexport function invZ(v) { return v == 0 ? 0 : 1.0 / v; }\nexport function fltEqual(v1, v2) { return v1 == v2 || Math.abs(v1 - v2) <= 1E-7 * Math.max(v1, v2); }\nexport function realEqual(v1, v2) { return v1 == v2 || Math.abs(v1 - v2) <= 1E-14 * Math.max(v1, v2); }\nexport function randomInt(size) {\n    if (size <= 1)\n        return 0;\n    return Math.floor(Math.random() * size);\n}\nexport const TWOPI = 2 * Math.PI;\nexport const INV_TWOPI = 1.0 / TWOPI;\nexport const DEGRAD = Math.PI / 180;\nexport const RADDEG = 180 / Math.PI;\nexport function angleNorm(th) {\n    if (th == -Math.PI)\n        return Math.PI;\n    if (th < -Math.PI) {\n        let mod = Math.ceil((-th - Math.PI) * INV_TWOPI);\n        return th + mod * TWOPI;\n    }\n    if (th > Math.PI) {\n        let mod = Math.ceil((th - Math.PI) * INV_TWOPI);\n        return th - mod * TWOPI;\n    }\n    return th;\n}\nexport function angleDiff(th1, th2) {\n    let theta = angleNorm(th1) - angleNorm(th2);\n    return theta - (theta > Math.PI ? TWOPI : 0) + (theta <= -Math.PI ? TWOPI : 0);\n}\nexport function angleDiffPos(th1, th2) {\n    let theta = angleNorm(th1) - angleNorm(th2);\n    return theta + (theta < 0 ? TWOPI : 0);\n}\nexport function sortAngles(theta) {\n    if (theta == null || theta.length < 2)\n        return theta;\n    theta = theta.slice(0);\n    for (let n = 0; n < theta.length; n++)\n        theta[n] = angleNorm(theta[n]);\n    Vec.sort(theta);\n    while (true) {\n        let a = theta[theta.length - 1], b = theta[0], c = theta[1];\n        if (angleDiff(b, a) <= angleDiff(c, b))\n            break;\n        for (let n = theta.length - 1; n > 0; n--)\n            theta[n] = theta[n - 1];\n        theta[0] = a;\n    }\n    return theta;\n}\nexport function uniqueAngles(theta, threshold) {\n    theta = sortAngles(theta);\n    for (let n = 1; n < theta.length; n++) {\n        if (Math.abs(angleDiff(theta[n], theta[n - 1])) <= threshold) {\n            theta.splice(n, 1);\n            n--;\n        }\n    }\n    return theta;\n}\nexport function minArray(a) {\n    if (a == null || a.length == 0)\n        return 0;\n    let v = a[0];\n    for (let n = 1; n < a.length; n++)\n        v = Math.min(v, a[n]);\n    return v;\n}\nexport function maxArray(a) {\n    if (a == null || a.length == 0)\n        return 0;\n    let v = a[0];\n    for (let n = 1; n < a.length; n++)\n        v = Math.max(v, a[n]);\n    return v;\n}\nexport function findNode(parent, name) {\n    if (parent == null)\n        return null;\n    let node = parent.firstChild;\n    while (node) {\n        if (node.nodeName == name)\n            return node;\n        node = node.nextSibling;\n    }\n    return null;\n}\nexport function findNodes(parent, name) {\n    if (parent == null)\n        return null;\n    let node = parent.firstChild;\n    let list = [];\n    while (node) {\n        if (node.nodeName == name)\n            list.push(node);\n        node = node.nextSibling;\n    }\n    return list;\n}\nexport function pathRoundedRect(x1, y1, x2, y2, rad) {\n    let path = new Path2D();\n    path.moveTo(x2 - rad, y1);\n    path.quadraticCurveTo(x2, y1, x2, y1 + rad);\n    path.lineTo(x2, y2 - rad);\n    path.quadraticCurveTo(x2, y2, x2 - rad, y2);\n    path.lineTo(x1 + rad, y2);\n    path.quadraticCurveTo(x1, y2, x1, y2 - rad);\n    path.lineTo(x1, y1 + rad);\n    path.quadraticCurveTo(x1, y1, x1 + rad, y1);\n    path.closePath();\n    return path;\n}\nexport function coordsRoundedRect(x1, y1, x2, y2, rad) {\n    let px = [x2 - rad, x2, x2, x2, x2, x2 - rad, x1 + rad, x1, x1, x1, x1, x1 + rad];\n    let py = [y1, y1, y1 + rad, y2 - rad, y2, y2, y2, y2, y2 - rad, y1 + rad, y1, y1];\n    let ctrl = [false, true, false, false, true, false, false, true, false, false, true, false];\n    return [px, py, ctrl];\n}\nexport function drawLine(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\nexport const ASCENT_FUDGE = 1.4;\nexport function fontSansSerif(ascent) { return `${ascent * ASCENT_FUDGE}px sans-serif`; }\nexport function pixelDensity() {\n    if ('devicePixelRatio' in window && window.devicePixelRatio > 1)\n        return window.devicePixelRatio;\n    return 1;\n}\nexport function clone(data) {\n    if (data == null)\n        return null;\n    if (Array.isArray(data))\n        return data.slice(0);\n    if (typeof data != 'object')\n        return data;\n    let result = {};\n    for (let key in data)\n        result[key] = data[key];\n    return result;\n}\nexport function deepClone(data) {\n    if (data == null)\n        return null;\n    if (typeof data == 'function')\n        return null;\n    if (typeof data != 'object')\n        return data;\n    let result = Array.isArray(data) ? [] : {};\n    for (let key in data) {\n        let val = data[key];\n        result[key] = typeof val === 'object' ? deepClone(val) : val;\n    }\n    return result;\n}\nexport function escapeHTML(text) {\n    if (!text)\n        return '';\n    const map = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#039;' };\n    return text.replace(/[&<>\"']/g, (m) => map[m]);\n}\nexport function orBlank(str) { return str == null ? '' : str; }\nexport function dictValues(dict) {\n    let list = [];\n    for (let key in dict)\n        list.push(dict[key]);\n    return list;\n}\nexport function zip(u, v) {\n    return u.map((a, i) => [a, v[i]]);\n}\nexport function toUTF8(str) {\n    let data = [], stripe = '';\n    const sz = str.length;\n    for (let n = 0; n < sz; n++) {\n        let charcode = str.charCodeAt(n);\n        if (charcode < 0x80)\n            stripe += str.charAt(n);\n        else if (charcode < 0x800) {\n            stripe += String.fromCharCode(0xc0 | (charcode >> 6));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n            stripe += String.fromCharCode(0xe0 | (charcode >> 12));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3F));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        else {\n            n++;\n            charcode = 0x10000 + (((charcode & 0x3FF) << 10) | (str.charCodeAt(n) & 0x3FF));\n            stripe += String.fromCharCode(0xf0 | (charcode >> 18));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 12) & 0x3F));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3F));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        if (stripe.length > 100) {\n            data.push(stripe);\n            stripe = '';\n        }\n    }\n    data.push(stripe);\n    return data.join('');\n}\nexport function fromUTF8(str) {\n    let data = [], stripe = '';\n    const sz = str.length;\n    for (let n = 0; n < sz; n++) {\n        let value = str.charCodeAt(n);\n        if (value < 0x80)\n            stripe += str.charAt(n);\n        else if (value > 0xBF && value < 0xE0) {\n            stripe += String.fromCharCode((value & 0x1F) << 6 | str.charCodeAt(n + 1) & 0x3F);\n            n++;\n        }\n        else if (value > 0xDF && value < 0xF0) {\n            str += String.fromCharCode((value & 0x0F) << 12 | (str.charCodeAt(n + 1) & 0x3F) << 6 | str.charCodeAt(n + 2) & 0x3F);\n            n += 2;\n        }\n        else {\n            let charCode = ((value & 0x07) << 18 | (str.charCodeAt(n + 1) & 0x3F) << 12 | (str.charCodeAt(n + 2) & 0x3F) << 6 | str.charCodeAt(n + 3) & 0x3F) - 0x010000;\n            stripe += String.fromCharCode(charCode >> 10 | 0xD800, charCode & 0x03FF | 0xDC00);\n            n += 3;\n        }\n        if (stripe.length > 100) {\n            data.push(stripe);\n            stripe = '';\n        }\n    }\n    data.push(stripe);\n    return data.join('');\n}\nexport function jsonPrettyPrint(json) {\n    let lines = JSON.stringify(json, null, 1).split(/\\n/);\n    for (let n = 0; n < lines.length; n++) {\n        lines[n] = lines[n].trim();\n        if (lines[n].length > 1 && (lines[n].endsWith('{') || lines[n].endsWith('['))) {\n            let ch = lines[n].charAt(lines[n].length - 1);\n            lines[n] = lines[n].substring(0, lines[n].length - 1);\n            lines.splice(n + 1, 0, ch);\n            n--;\n        }\n    }\n    let indent = 0;\n    for (let n = 0; n < lines.length; n++) {\n        let orig = lines[n];\n        if (orig == ']' || orig == '}' || orig == '],' || orig == '},')\n            indent--;\n        lines[n] = '\\t'.repeat(indent) + orig;\n        if (orig == '[' || orig == '{')\n            indent++;\n    }\n    return lines.join('\\n');\n}\nexport var KeyCode;\n(function (KeyCode) {\n    KeyCode[\"Backspace\"] = \"Backspace\";\n    KeyCode[\"Tab\"] = \"Tab\";\n    KeyCode[\"Enter\"] = \"Enter\";\n    KeyCode[\"Escape\"] = \"Escape\";\n    KeyCode[\"Space\"] = \" \";\n    KeyCode[\"PageUp\"] = \"PageUp\";\n    KeyCode[\"PageDown\"] = \"PageDown\";\n    KeyCode[\"End\"] = \"End\";\n    KeyCode[\"Home\"] = \"Home\";\n    KeyCode[\"Left\"] = \"ArrowLeft\";\n    KeyCode[\"Right\"] = \"ArrowRight\";\n    KeyCode[\"Up\"] = \"ArrowUp\";\n    KeyCode[\"Down\"] = \"ArrowDown\";\n    KeyCode[\"Delete\"] = \"Delete\";\n    KeyCode[\"Insert\"] = \"Insert\";\n})(KeyCode || (KeyCode = {}));\nexport function readTextURL(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            let request = new XMLHttpRequest();\n            request.open('GET', url.toString(), true);\n            request.responseType = 'text';\n            request.onload = () => resolve(request.response.toString());\n            request.onerror = () => resolve(null);\n            request.send();\n        });\n    });\n}\nexport function postJSONURL(url, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            let request = new XMLHttpRequest();\n            request.open('POST', url.toString(), true);\n            request.responseType = 'text';\n            request.onload = () => {\n                let txt = request.response.toString();\n                try {\n                    resolve(JSON.parse(txt));\n                }\n                catch (ex) {\n                    let snippet = txt.substring(0, Math.min(200, txt.length)) + (txt.length > 200 ? '...etc...' : '');\n                    reject('JSON parsing error on result:' + ex + ' for text: ' + snippet);\n                }\n            };\n            request.onerror = () => reject('Failed to request URL: ' + url);\n            request.send(JSON.stringify(params));\n        });\n    });\n}\nexport function yieldDOM() {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => setTimeout(() => resolve()));\n    });\n}\nexport function pause(seconds) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => setTimeout(() => resolve(), seconds * 1000));\n    });\n}\nlet staticScrollerSize = null;\nexport function empiricalScrollerSize() {\n    if (staticScrollerSize)\n        return staticScrollerSize;\n    let outer = dom('<div/>').css({ 'visibility': 'hidden', 'width': '100px', 'height': '100px', 'overflow': 'scroll' }).appendTo(dom(document.body));\n    let inner = dom('<div/>').css({ 'width': '100%', 'height': '100%' }).appendTo(outer);\n    staticScrollerSize = new Size(100 - inner.elHTML.offsetWidth, 100 - inner.elHTML.offsetHeight);\n    outer.remove();\n    return staticScrollerSize;\n}\nexport function stringSimilarityPermutations(str1, str2) {\n    if (!str1 || !str2)\n        return 0;\n    const ch1 = Array.from(str1), len1 = ch1.length;\n    const ch2 = Array.from(str2), len2 = ch2.length;\n    let levenshteinDistance = (sz1, sz2) => {\n        let dist = [];\n        for (let i = 0; i <= sz1; i++) {\n            dist.push(Vec.numberArray(0, sz2 + 1));\n            dist[i][0] = i;\n        }\n        for (let j = 1; j <= sz2; j++)\n            dist[0][j] = j;\n        for (let j = 1; j <= sz2; j++)\n            for (let i = 1; i <= sz1; i++) {\n                let cost = ch1[i - 1] == ch2[j - 1] ? 0 : 1;\n                dist[i][j] = Math.min(Math.min(dist[i - 1][j] + 1, dist[i][j - 1] + 1), dist[i - 1][j - 1] + cost);\n            }\n        return dist[sz1][sz2];\n    };\n    let cost = ch1[len1 - 1] == ch2[len2 - 1] ? 0 : 1;\n    let lev1 = levenshteinDistance(len1 - 1, len2) + 1;\n    let lev2 = levenshteinDistance(len1, len2 - 1) + 1;\n    let lev3 = levenshteinDistance(len1 - 1, len2 - 1) + cost;\n    return Math.min(Math.min(lev1, lev2), lev3);\n}\n//# sourceMappingURL=util.js.map","import { norm2_xy, norm_xy, sqr } from './util';\nimport { Vec } from './Vec';\nconst EPSILON = Math.pow(2, -52);\nexport class Triangulation2D {\n    constructor(px, py) {\n        this.px = px;\n        this.py = py;\n        this.numTriangles = 0;\n        this.edgeStack = Vec.numberArray(0, 512);\n        this.hull = null;\n        this.px = px;\n        this.py = py;\n        this.sz = px.length;\n        let maxTriangles = Math.max(2 * this.sz - 5, 0);\n        this.triangles = new Array(maxTriangles * 3);\n        this.halfedges = new Array(maxTriangles * 3);\n        this.hashSize = Math.ceil(Math.sqrt(this.sz));\n        this.hullPrev = new Array(this.sz);\n        this.hullNext = new Array(this.sz);\n        this.hullTri = new Array(this.sz);\n        this.hullHash = Vec.numberArray(-1, this.hashSize);\n        this.ids = new Array(this.sz);\n        this.dists = new Array(this.sz);\n        this.update();\n    }\n    trimConcave(threshold) {\n        const threshSq = sqr(threshold);\n        const { sz, px, py } = this;\n        let tri = this.triangles.slice(0);\n        let edge = [];\n        for (let n = 0, i = 0; i < tri.length; n++, i += 3) {\n            edge.push(sz * Math.min(tri[i + 0], tri[i + 1]) + Math.max(tri[i + 0], tri[i + 1]));\n            edge.push(sz * Math.min(tri[i + 0], tri[i + 2]) + Math.max(tri[i + 0], tri[i + 2]));\n            edge.push(sz * Math.min(tri[i + 1], tri[i + 2]) + Math.max(tri[i + 1], tri[i + 2]));\n        }\n        let uniqueEdges = Vec.uniqueUnstable(edge);\n        for (let n = 0; n < edge.length; n++)\n            edge[n] = uniqueEdges.indexOf(edge[n]);\n        let edgeCount = new Array(edge.length);\n        while (true) {\n            const ntri = tri.length / 3;\n            edgeCount.fill(0);\n            for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n                edgeCount[edge[i + 0]]++;\n                edgeCount[edge[i + 1]]++;\n                edgeCount[edge[i + 2]]++;\n            }\n            let mask = Vec.booleanArray(true, ntri);\n            for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n                const c1 = edgeCount[edge[i + 0]];\n                const c2 = edgeCount[edge[i + 1]];\n                const c3 = edgeCount[edge[i + 2]];\n                const i1 = tri[i], i2 = tri[i + 1], i3 = tri[i + 2];\n                if (c1 == 1 && c2 != 1 && c3 != 1)\n                    mask[n] = norm2_xy(px[i1] - px[i2], py[i1] - py[i2]) < threshSq;\n                else if (c1 != 1 && c2 == 1 && c3 != 1)\n                    mask[n] = norm2_xy(px[i1] - px[i3], py[i1] - py[i3]) < threshSq;\n                else if (c1 != 1 && c2 != 1 && c3 == 1)\n                    mask[n] = norm2_xy(px[i2] - px[i3], py[i2] - py[i3]) < threshSq;\n            }\n            if (Vec.allTrue(mask))\n                break;\n            let repTri = new Array(Vec.maskCount(mask) * 3);\n            let repEdge = new Array(Vec.maskCount(mask) * 3);\n            for (let n = 0, i = 0, j = 0, k = 0; n < ntri; n++, i += 3)\n                if (mask[n]) {\n                    repTri[j++] = tri[i];\n                    repTri[j++] = tri[i + 1];\n                    repTri[j++] = tri[i + 2];\n                    repEdge[k++] = edge[i];\n                    repEdge[k++] = edge[i + 1];\n                    repEdge[k++] = edge[i + 2];\n                }\n            tri = repTri;\n            edge = repEdge;\n        }\n        return tri;\n    }\n    traceOutline(tri) {\n        const npt = tri.length, ntri = npt / 3;\n        const { sz, px, py } = this;\n        let edgeCount = new Map();\n        for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n            const e1 = sz * Math.min(tri[i + 0], tri[i + 1]) + Math.max(tri[i + 0], tri[i + 1]);\n            const e2 = sz * Math.min(tri[i + 0], tri[i + 2]) + Math.max(tri[i + 0], tri[i + 2]);\n            const e3 = sz * Math.min(tri[i + 1], tri[i + 2]) + Math.max(tri[i + 1], tri[i + 2]);\n            edgeCount.set(e1, (edgeCount.get(e1) || 0) + 1);\n            edgeCount.set(e2, (edgeCount.get(e2) || 0) + 1);\n            edgeCount.set(e3, (edgeCount.get(e3) || 0) + 1);\n        }\n        let edgePairs = [];\n        for (let entry of edgeCount.entries())\n            if (entry[1] == 1) {\n                const e = entry[0];\n                const i1 = Math.floor(e / sz), i2 = e % sz;\n                edgePairs.push(i1);\n                edgePairs.push(i2);\n            }\n        const idx = Vec.uniqueUnstable(edgePairs);\n        const isz = idx.length;\n        const idxMap = new Map();\n        for (let n = 0; n < isz; n++)\n            idxMap.set(idx[n], n);\n        let g1 = Vec.numberArray(-1, isz), g2 = Vec.numberArray(-1, isz);\n        for (let n = 0; n < edgePairs.length; n += 2) {\n            const i1 = idxMap.get(edgePairs[n]), i2 = idxMap.get(edgePairs[n + 1]);\n            if (g1[i1] < 0)\n                g1[i1] = i2;\n            else\n                g2[i1] = i2;\n            if (g1[i2] < 0)\n                g1[i2] = i1;\n            else\n                g2[i2] = i1;\n        }\n        let mask = Vec.booleanArray(false, isz);\n        let sequence = new Array(isz);\n        sequence[0] = 0;\n        mask[0] = true;\n        for (let n = 1; n < isz; n++) {\n            const i = sequence[n - 1];\n            if (!mask[g1[i]])\n                sequence[n] = g1[i];\n            else\n                sequence[n] = g2[i];\n            mask[sequence[n]] = true;\n        }\n        return Vec.idxGet(idx, sequence);\n    }\n    update() {\n        const sz = this.sz;\n        let { px, py, ids, dists, triangles, halfedges } = this;\n        const minX = Vec.min(px), minY = Vec.min(py);\n        const maxX = Vec.max(px), maxY = Vec.max(py);\n        for (let n = 0; n < sz; n++)\n            ids[n] = n;\n        this.centreX = 0.5 * (minX + maxX);\n        this.centreY = 0.5 * (minY + maxY);\n        let i0 = 0, i1 = 0, i2 = 0;\n        let minDist = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            const d = norm_xy(this.centreX - px[n], this.centreY - py[n]);\n            if (d < minDist) {\n                i0 = n;\n                minDist = d;\n            }\n        }\n        const i0x = px[i0], i0y = py[i0];\n        minDist = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            if (n == i0)\n                continue;\n            const d = norm_xy(i0x - px[n], i0y - py[n]);\n            if (d < minDist && d > 0) {\n                i1 = n;\n                minDist = d;\n            }\n        }\n        let i1x = px[i1], i1y = py[i1];\n        let minRadius = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            if (n == i0 || n == i1)\n                continue;\n            let r = this.circumRadius(i0x, i0y, i1x, i1y, px[n], py[n]);\n            if (r < minRadius) {\n                i2 = n;\n                minRadius = r;\n            }\n        }\n        let i2x = px[i2], i2y = py[i2];\n        if (!Number.isFinite(minRadius)) {\n            for (let n = 0; n < sz; n++) {\n                dists[n] = px[n] - px[0];\n                if (dists[n] == 0)\n                    dists[n] = py[n] - py[0];\n            }\n            this.quicksort(0, sz - 1);\n            let hull = new Array(sz);\n            let j = 0;\n            let d0 = Number.NEGATIVE_INFINITY;\n            for (let n = 0; n < sz; n++) {\n                let id = ids[n];\n                if (dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = dists[id];\n                }\n            }\n            this.hull = hull.slice(0, j);\n            triangles = [];\n            halfedges = [];\n            return;\n        }\n        if (this.orient(i0x, i0y, i1x, i1y, i2x, i2y)) {\n            let i = i1;\n            let x = i1x, y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n        this.pickCircumCentre(i0x, i0y, i1x, i1y, i2x, i2y);\n        for (let n = 0; n < sz; n++)\n            dists[n] = norm_xy(px[n] - this.centreX, py[n] - this.centreY);\n        this.quicksort(0, sz - 1);\n        this.hullStart = i0;\n        let hullSize = 3;\n        const { hullNext, hullPrev, hullTri, hullHash, hashSize } = this;\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n        hullHash.fill(-1);\n        hullHash[this.hashKey(i0x, i0y)] = i0;\n        hullHash[this.hashKey(i1x, i1y)] = i1;\n        hullHash[this.hashKey(i2x, i2y)] = i2;\n        this.numTriangles = 0;\n        this.addTriangle(i0, i1, i2, -1, -1, -1);\n        let xp = 0, yp = 0;\n        for (let k = 0; k < ids.length; k++) {\n            let i = ids[k];\n            let x = px[i], y = py[i];\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON)\n                continue;\n            xp = x;\n            yp = y;\n            if (i == i0 || i == i1 || i == i2)\n                continue;\n            let start = 0;\n            for (let j = 0, key = this.hashKey(x, y); j < hashSize; j++) {\n                start = hullHash[(key + j) % hashSize];\n                if (start >= 0 && start != hullNext[start])\n                    break;\n            }\n            start = hullPrev[start];\n            let e = start, q = hullNext[e];\n            while (!this.orient(x, y, px[e], py[e], px[q], py[q])) {\n                e = q;\n                if (e == start) {\n                    e = -1;\n                    break;\n                }\n                q = hullNext[e];\n            }\n            if (e < 0)\n                continue;\n            let t = this.addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n            hullTri[i] = this.legalise(t + 2);\n            hullTri[e] = t;\n            hullSize++;\n            let n = hullNext[e];\n            q = hullNext[n];\n            while (this.orient(x, y, px[n], py[n], px[q], py[q])) {\n                t = this.addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this.legalise(t + 2);\n                hullNext[n] = n;\n                hullSize--;\n                n = q;\n                q = hullNext[n];\n            }\n            if (e == start) {\n                q = hullPrev[e];\n                while (this.orient(x, y, px[q], py[q], px[e], py[e])) {\n                    t = this.addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this.legalise(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e;\n                    hullSize--;\n                    e = q;\n                    q = hullPrev[e];\n                }\n            }\n            this.hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n            hullHash[this.hashKey(x, y)] = i;\n            hullHash[this.hashKey(px[e], py[e])] = e;\n        }\n        this.hull = new Array(hullSize);\n        for (let n = 0, e = this.hullStart; n < hullSize; n++) {\n            this.hull[n] = e;\n            e = hullNext[e];\n        }\n        this.triangles = triangles.slice(0, this.numTriangles);\n        this.halfedges = halfedges.slice(0, this.numTriangles);\n    }\n    hashKey(x, y) {\n        return Math.floor(this.pseudoAngle(x - this.centreX, y - this.centreY) * this.hashSize) % this.hashSize;\n    }\n    legalise(a) {\n        let i = 0;\n        let ar = 0;\n        while (true) {\n            let b = this.halfedges[a];\n            let a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n            if (b < 0) {\n                if (i == 0)\n                    break;\n                a = this.edgeStack[--i];\n                continue;\n            }\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n            const { px, py, triangles, halfedges } = this;\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n            let illegal = this.inCircle(px[p0], py[p0], px[pr], py[pr], px[pl], py[pl], px[p1], py[p1]);\n            if (illegal) {\n                this.triangles[a] = p1;\n                this.triangles[b] = p0;\n                const hbl = halfedges[bl];\n                if (hbl < 0) {\n                    let e = this.hullStart;\n                    do {\n                        if (this.hullTri[e] == bl) {\n                            this.hullTri[e] = a;\n                            break;\n                        }\n                        e = this.hullPrev[e];\n                    } while (e != this.hullStart);\n                }\n                this.link(a, hbl);\n                this.link(b, halfedges[ar]);\n                this.link(ar, bl);\n                const br = b0 + (b + 1) % 3;\n                if (i < this.edgeStack.length)\n                    this.edgeStack[i++] = br;\n            }\n            else {\n                if (i == 0)\n                    break;\n                a = this.edgeStack[--i];\n            }\n        }\n        return ar;\n    }\n    link(a, b) {\n        this.halfedges[a] = b;\n        if (b >= 0)\n            this.halfedges[b] = a;\n    }\n    addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.numTriangles;\n        this.triangles[t] = i0;\n        this.triangles[t + 1] = i1;\n        this.triangles[t + 2] = i2;\n        this.link(t, a);\n        this.link(t + 1, b);\n        this.link(t + 2, c);\n        this.numTriangles += 3;\n        return t;\n    }\n    pseudoAngle(dx, dy) {\n        const p = dx / (Math.abs(dx) + Math.abs(dy));\n        return (dy > 0 ? 3 - p : 1 + p) / 4;\n    }\n    orientIfSure(px, py, rx, ry, qx, qy) {\n        const l = (ry - py) * (qx - px);\n        const r = (rx - px) * (qy - py);\n        return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n    }\n    orient(rx, ry, qx, qy, px, py) {\n        let o = this.orientIfSure(px, py, rx, ry, qx, qy);\n        if (o != 0)\n            return o < 0;\n        o = this.orientIfSure(rx, ry, qx, qy, px, py);\n        if (o != 0)\n            return o < 0;\n        o = this.orientIfSure(qx, qy, px, py, rx, ry);\n        return o < 0;\n    }\n    inCircle(ax, ay, bx, by, cx, cy, px, py) {\n        const dx = ax - px;\n        const dy = ay - py;\n        const ex = bx - px;\n        const ey = by - py;\n        const fx = cx - px;\n        const fy = cy - py;\n        const ap = dx * dx + dy * dy;\n        const bp = ex * ex + ey * ey;\n        const cp = fx * fx + fy * fy;\n        return dx * (ey * cp - bp * fy) -\n            dy * (ex * cp - bp * fx) +\n            ap * (ex * fy - ey * fx) < 0;\n    }\n    circumRadius(ax, ay, bx, by, cx, cy) {\n        const dx = bx - ax;\n        const dy = by - ay;\n        const ex = cx - ax;\n        const ey = cy - ay;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        const d = 0.5 / (dx * ey - dy * ex);\n        const x = (ey * bl - dy * cl) * d;\n        const y = (dx * cl - ex * bl) * d;\n        return x * x + y * y;\n    }\n    pickCircumCentre(ax, ay, bx, by, cx, cy) {\n        const dx = bx - ax;\n        const dy = by - ay;\n        const ex = cx - ax;\n        const ey = cy - ay;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        const d = 0.5 / (dx * ey - dy * ex);\n        this.centreX = ax + (ey * bl - dy * cl) * d;\n        this.centreY = ay + (dx * cl - ex * bl) * d;\n    }\n    quicksort(left, right) {\n        const { ids, dists } = this;\n        if (right - left <= 20) {\n            for (let i = left + 1; i <= right; i++) {\n                const temp = ids[i];\n                const tempDist = dists[temp];\n                let j = i - 1;\n                while (j >= left && dists[ids[j]] > tempDist)\n                    ids[j + 1] = ids[j--];\n                ids[j + 1] = temp;\n            }\n        }\n        else {\n            let median = (left + right) >> 1;\n            let i = left + 1;\n            let j = right;\n            Vec.swap(ids, median, i);\n            if (dists[ids[left]] > dists[ids[right]])\n                Vec.swap(ids, left, right);\n            if (dists[ids[i]] > dists[ids[right]])\n                Vec.swap(ids, i, right);\n            if (dists[ids[left]] > dists[ids[i]])\n                Vec.swap(ids, left, i);\n            let temp = ids[i];\n            const tempDist = dists[temp];\n            while (true) {\n                do\n                    i++;\n                while (dists[ids[i]] < tempDist);\n                do\n                    j--;\n                while (dists[ids[j]] > tempDist);\n                if (j < i)\n                    break;\n                Vec.swap(ids, i, j);\n            }\n            ids[left + 1] = ids[j];\n            ids[j] = temp;\n            if (right - i + 1 >= j - left) {\n                this.quicksort(i, right);\n                this.quicksort(left, j - 1);\n            }\n            else {\n                this.quicksort(left, j - 1);\n                this.quicksort(i, right);\n            }\n        }\n    }\n}\n//# sourceMappingURL=Triangulation2D.js.map","import { Matrix, SingularValueDecomposition } from './Matrix';\nimport { Triangulation2D } from './Triangulation2D';\nimport { angleDiff, angleDiffPos, angleNorm, maxArray, minArray, norm2_xy, norm_xy, realEqual, sqr, TWOPI } from './util';\nimport { Vec } from './Vec';\nexport class GeomUtil {\n    static pointInPolygon(x, y, px, py) {\n        if (x < minArray(px) || x > maxArray(px) || y < minArray(py) || y > maxArray(py))\n            return false;\n        let sz = px.length;\n        for (let n = 0; n < sz; n++)\n            if (px[n] == x && py[n] == y)\n                return true;\n        let phase = false;\n        for (let n = 0; n < sz; n++) {\n            let x1 = px[n], y1 = py[n], x2 = px[n + 1 < sz ? n + 1 : 0], y2 = py[n + 1 < sz ? n + 1 : 0];\n            if (y > Math.min(y1, y2) && y <= Math.max(y1, y2) && x <= Math.max(x1, x2) && y1 != y2) {\n                let intr = (y - y1) * (x2 - x1) / (y2 - y1) + x1;\n                if (x1 == x2 || x <= intr)\n                    phase = !phase;\n            }\n        }\n        return phase;\n    }\n    static areLinesParallel(x1, y1, x2, y2, x3, y3, x4, y4) {\n        let dxa = x2 - x1, dya = y2 - y1, dxb = x4 - x3, dyb = y4 - y3;\n        let xmajorA = Math.abs(dxa) > Math.abs(dya), xmajorB = Math.abs(dxb) > Math.abs(dyb);\n        if (xmajorA != xmajorB)\n            return false;\n        const EPS = 1E-6;\n        if (xmajorA)\n            return Math.abs(dya / dxa - dyb / dxb) < EPS;\n        else\n            return Math.abs(dxa / dya - dxb / dyb) < EPS;\n    }\n    static lineIntersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        let u = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n        return [x1 + u * (x2 - x1), y1 + u * (y2 - y1)];\n    }\n    static isPointOnLineSeg(px, py, x1, y1, x2, y2) {\n        if (px < Math.min(x1, x2) || px > Math.max(x1, x2) || py < Math.min(y1, y2) || py > Math.max(y1, y2))\n            return false;\n        if ((px == x1 && py == y1) || (px == x2 && py == y2))\n            return true;\n        let dx = x2 - x1, dy = y2 - y1;\n        if (Math.abs(dx) > Math.abs(dy))\n            return realEqual(py, (dy / dx) * (px - x1) + y1);\n        else\n            return realEqual(px, (dx / dy) * (py - y1) + x1);\n    }\n    static pointLineDistance(px, py, x1, y1, x2, y2) {\n        let dx = x2 - x1, dy = y2 - y1;\n        return Math.abs(dy * px - dx * py + x2 * y1 - y2 * x1) / norm_xy(dx, dy);\n    }\n    static pointLineSegDistance(px, py, x1, y1, x2, y2) {\n        let dx = x2 - x1, dy = y2 - y1;\n        let t = ((px - x1) * dx + (py - y1) * dy) / norm2_xy(dx, dy);\n        t = Math.max(0, Math.min(1, t));\n        let tx = x1 + t * dx, ty = y1 + t * dy;\n        return norm_xy(px - tx, py - ty);\n    }\n    static doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (Math.max(x1, x2) < Math.min(x3, x4) || Math.max(y1, y2) < Math.min(y3, y4))\n            return false;\n        if (Math.min(x1, x2) > Math.max(x3, x4) || Math.min(y1, y2) > Math.max(y3, y4))\n            return false;\n        if ((x1 == x3 && y1 == y3) || (x1 == x4 && y1 == y4) || (x2 == x3 && y2 == y3) || (x2 == x4 && y2 == y4))\n            return true;\n        if ((x1 == x2 || x3 == x4) && (x1 == x3 || x1 == x4 || x2 == x3 || x2 == x4))\n            return true;\n        if ((y1 == y2 || y3 == y4) && (y1 == y3 || y1 == y4 || y2 == y3 || y2 == y4))\n            return true;\n        let x4_x3 = x4 - x3, y4_y3 = y4 - y3, x2_x1 = x2 - x1, y2_y1 = y2 - y1, x1_x3 = x1 - x3, y1_y3 = y1 - y3;\n        let nx = x4_x3 * y1_y3 - y4_y3 * x1_x3;\n        let ny = x2_x1 * y1_y3 - y2_y1 * x1_x3;\n        let dn = y4_y3 * x2_x1 - x4_x3 * y2_y1;\n        if (dn == 0)\n            return false;\n        if (dn < 0) {\n            dn = -dn;\n            nx = -nx;\n            ny = -ny;\n        }\n        return nx >= 0 && nx <= dn && ny >= 0 && ny <= dn;\n    }\n    static rectsIntersect(x1, y1, w1, h1, x2, y2, w2, h2) {\n        if (x1 <= x2 && x1 + w1 >= x2 + w2 && y1 <= y2 && y1 + h1 >= y2 + h2)\n            return true;\n        if (x2 <= x1 && x2 + w2 >= x1 + w1 && y2 <= y1 && y2 + h2 >= y1 + h1)\n            return true;\n        if (x1 + w1 < x2 || x2 + w2 < x1 || y1 + h1 < y2 || y2 + h2 < y1)\n            return false;\n        return true;\n    }\n    static sortAngles(theta) {\n        if (theta == null || theta.length < 2)\n            return theta;\n        theta = theta.slice(0);\n        for (let n = 0; n < theta.length; n++)\n            theta[n] = angleNorm(theta[n]);\n        if (theta.length == 2) {\n            if (angleDiffPos(theta[1], theta[0]) > Math.PI)\n                return [theta[1], theta[0]];\n            return theta;\n        }\n        Vec.sort(theta);\n        while (true) {\n            let a = theta[theta.length - 1], b = theta[0], c = theta[1];\n            if (angleDiff(b, a) <= angleDiff(c, b))\n                break;\n            for (let n = theta.length - 1; n > 0; n--)\n                theta[n] = theta[n - 1];\n            theta[0] = a;\n        }\n        return theta;\n    }\n    static idxSortAngles(theta) {\n        const sz = Vec.len(theta);\n        if (theta == null || sz < 2)\n            return Vec.identity0(sz);\n        if (sz == 2) {\n            if (angleDiffPos(theta[1], theta[0]) > Math.PI)\n                return [1, 0];\n            else\n                return [0, 1];\n        }\n        theta = Vec.duplicate(theta);\n        for (let n = 0; n < sz; n++)\n            theta[n] = angleNorm(theta[n]);\n        let idx = Vec.idxSort(theta);\n        while (true) {\n            let a = theta[idx[sz - 1]], b = theta[idx[0]], c = theta[idx[1]];\n            if (angleDiff(b, a) <= angleDiff(c, b))\n                break;\n            let last = idx.pop();\n            idx.unshift(last);\n        }\n        return idx;\n    }\n    static uniqueAngles(theta, threshold) {\n        let ang = GeomUtil.sortAngles(theta), ret = [];\n        ret.push(ang[0]);\n        for (let n = 1; n < ang.length; n++) {\n            if (Math.abs(angleDiff(ang[n], ang[n - 1])) > threshold)\n                ret.push(ang[n]);\n        }\n        return ret;\n    }\n    static thetaObtuse(th1, th2) {\n        let dth = th2 - th1;\n        while (dth < -Math.PI)\n            dth += 2 * Math.PI;\n        while (dth > Math.PI)\n            dth -= 2 * Math.PI;\n        return dth > 0 ? th1 - 0.5 * (2 * Math.PI - dth) : th1 + 0.5 * (2 * Math.PI + dth);\n    }\n    static emergentAngle(theta) {\n        let len = theta.length;\n        if (len == 1)\n            return theta[0];\n        if (len == 2)\n            return 0.5 * (theta[0] + theta[1]);\n        Vec.sort(theta);\n        let bottom = 0;\n        let behind = angleDiffPos(theta[0], theta[len - 1]);\n        for (let n = 1; n < len; n++) {\n            let delta = angleDiffPos(theta[n], theta[n - 1]);\n            if (delta > behind) {\n                bottom = n;\n                behind = delta;\n            }\n        }\n        let sum = 0;\n        for (let n = 0; n < len; n++) {\n            let delta = theta[n] - theta[bottom];\n            if (delta < 0)\n                delta += TWOPI;\n            sum += delta;\n        }\n        return sum / len + theta[bottom];\n    }\n    static dotProduct(v1, v2) {\n        return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\n    }\n    static crossProduct(v1, v2) {\n        const x = v1[1] * v2[2] - v1[2] * v2[1];\n        const y = v1[2] * v2[0] - v1[0] * v2[2];\n        const z = v1[0] * v2[1] - v1[1] * v2[0];\n        return [x, y, z];\n    }\n    static affineTranslate(dx, dy) {\n        return [[1, 0, dx], [0, 1, dy], [0, 0, 1]];\n    }\n    static affineMirror(xaxis, yaxis) {\n        return [[xaxis ? -1 : 1, 0, 0], [0, yaxis ? -1 : 1, 0], [0, 0, 1]];\n    }\n    static affineScale(sx, sy) {\n        return [[sx, 0, 0], [0, sy, 0], [0, 0, 1]];\n    }\n    static affineRotate(theta) {\n        let cos = Math.cos(theta), sin = Math.sin(theta);\n        return [[cos, -sin, 0], [sin, cos, 0], [0, 0, 1]];\n    }\n    static affineCompose(A, B) {\n        let tfm = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n        let Acol = [0, 0, 0];\n        for (let j = 0; j < 3; j++) {\n            for (let k = 0; k < 3; k++)\n                Acol[k] = A[k][j];\n            for (let i = 0; i < 3; i++) {\n                let Brow = B[i];\n                let s = 0;\n                for (let k = 0; k < 3; k++)\n                    s += Acol[k] * Brow[k];\n                tfm[i][j] = s;\n            }\n        }\n        return tfm;\n    }\n    static applyAffine(x, y, tfm) {\n        return [x * tfm[0][0] + y * tfm[0][1] + tfm[0][2], x * tfm[1][0] + y * tfm[1][1] + tfm[1][2]];\n    }\n    static applyAffineArray(x, y, tfm) {\n        for (let n = 0; n < x.length; n++)\n            [x[n], y[n]] = this.applyAffine(x[n], y[n], tfm);\n    }\n    static isAffineMirror(tfm) {\n        let a = tfm[0][0], b = tfm[0][1], c = tfm[0][2];\n        let d = tfm[1][0], e = tfm[1][1], f = tfm[1][2];\n        let g = tfm[2][0], h = tfm[2][1], i = tfm[2][2];\n        return a * e * i + b * f * g + c * d * h - c * e * g - b * d * i - a * f * h < 0;\n    }\n    static magnitude2(v) {\n        return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n    }\n    static magnitude(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n    }\n    static dist2(v1, v2) {\n        let dx = v1[0] - v2[0], dy = v1[1] - v2[1], dz = v1[2] - v2[2];\n        return dx * dx + dy * dy + dz * dz;\n    }\n    static dist(v1, v2) {\n        let dx = v1[0] - v2[0], dy = v1[1] - v2[1], dz = v1[2] - v2[2];\n        return Math.sqrt(dx * dx + dy * dy + dz * dz);\n    }\n    static normalise(v) {\n        const dsq = v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n        if (dsq == 0)\n            return;\n        const inv = 1.0 / Math.sqrt(dsq);\n        v[0] *= inv;\n        v[1] *= inv;\n        v[2] *= inv;\n    }\n    static normalised(v) {\n        let ret = v.slice(0);\n        this.normalise(ret);\n        return ret;\n    }\n    static acuteAngle(v1, v2) {\n        let mag1 = this.magnitude(v1), mag2 = this.magnitude(v2);\n        if (mag1 == 0 || mag2 == 0)\n            return 0;\n        let dot = this.dotProduct(v1, v2);\n        let cosTheta = dot / (mag1 * mag2);\n        cosTheta = Math.max(-1, Math.min(1, cosTheta));\n        return Math.acos(cosTheta);\n    }\n    static arcControlPoints(rad, x1, y1, x2, y2) {\n        let t1x = -y1, t1y = x1;\n        let t2x = y2, t2y = -x2;\n        let dx = 0.5 * (x1 + x2);\n        let dy = 0.5 * (y1 + y2);\n        let tx = 3 / 8 * (t1x + t2x);\n        let ty = 3 / 8 * (t1y + t2y);\n        let a = tx * tx + ty * ty;\n        let b = dx * tx + dy * ty;\n        let c = dx * dx + dy * dy - rad * rad;\n        let D = b * b - a * c;\n        let k = (Math.sqrt(D) - b) / a;\n        return [x1 + k * t1x, y1 + k * t1y, x2 + k * t2x, y2 + k * t2y];\n    }\n    static createBezierEllipse(cx, cy, rw, rh, theta) {\n        let nseg = 24, npt = 2 * nseg + 1;\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        let incrAlpha = TWOPI / nseg;\n        let px = new Array(npt), py = new Array(npt);\n        for (let n = 0; n < nseg; n++) {\n            let alpha = n * incrAlpha;\n            let cosAlpha = Math.cos(alpha), sinAlpha = Math.sin(alpha);\n            px[n * 2] = rw * cosAlpha * cosTheta - rh * sinAlpha * sinTheta + cx;\n            py[n * 2] = rw * cosAlpha * sinTheta + rh * sinAlpha * cosTheta + cy;\n        }\n        px[npt - 1] = px[0];\n        py[npt - 1] = py[0];\n        let smooth = 0.3;\n        for (let n = 0; n < nseg; n++) {\n            let n1 = (n - 1 + nseg) % nseg;\n            let n2 = n;\n            let n3 = (n + 1) % nseg;\n            let n4 = (n + 2) % nseg;\n            let x1 = px[n1 * 2], x2 = px[n2 * 2], x3 = px[n3 * 2], x4 = px[n4 * 2];\n            let y1 = py[n1 * 2], y2 = py[n2 * 2], y3 = py[n3 * 2], y4 = py[n4 * 2];\n            px[n * 2 + 1] = 0.5 * (x2 + x3 + smooth * (x2 - x1 + x3 - x4));\n            py[n * 2 + 1] = 0.5 * (y2 + y3 + smooth * (y2 - y1 + y3 - y4));\n        }\n        let ctrl = new Array(npt);\n        for (let n = 0; n < npt; n++)\n            ctrl[n] = (n & 1) == 1;\n        return { px, py, ctrl };\n    }\n    static fitCircle(x, y) {\n        let dsq = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < x.length; n++)\n            dsq = Math.min(dsq, norm2_xy(x[n], y[n]));\n        return Math.sqrt(dsq);\n    }\n    static fitEllipse(px, py, minX, minY, maxX, maxY) {\n        let bestW = 0.5 * this.fitCircle(px, py), bestH = bestW, bestScore = bestW * bestH;\n        let x = Vec.concat(px, [minX, maxX, 0, 0]);\n        let y = Vec.concat(py, [0, 0, minY, maxY]);\n        const sz = x.length;\n        let shrinkToFit = (whs) => {\n            let dmin = Number.POSITIVE_INFINITY;\n            let invW2 = 1.0 / (whs[0] * whs[0]), invH2 = 1.0 / (whs[1] * whs[1]);\n            for (let n = 0; n < sz; n++)\n                dmin = Math.min(dmin, Math.sqrt(x[n] * x[n] * invW2 + y[n] * y[n] * invH2));\n            if (dmin < 1) {\n                whs[0] *= dmin;\n                whs[1] *= dmin;\n            }\n            whs[2] = whs[0] * whs[1];\n        };\n        let mul = 1;\n        let whsX = [0, 0, 0], whsY = [0, 0, 0];\n        while (mul > 0.001) {\n            whsX[0] = bestW * (1 + mul);\n            whsX[1] = bestH;\n            shrinkToFit(whsX);\n            whsY[0] = bestW;\n            whsY[1] = bestH * (1 + mul);\n            shrinkToFit(whsY);\n            let anything = false;\n            if (whsX[2] > bestScore) {\n                bestW = whsX[0];\n                bestH = whsX[1];\n                bestScore = whsX[2];\n                anything = true;\n            }\n            if (whsY[2] > bestScore) {\n                bestW = whsY[0];\n                bestH = whsY[1];\n                bestScore = whsY[2];\n                anything = true;\n            }\n            if (!anything)\n                mul *= 0.6;\n        }\n        return [bestW, bestH];\n    }\n    static superimpose(ax, ay, bx, by) {\n        let sz = ax.length;\n        if (sz == 1) {\n            let dx = bx[0] - ax[0], dy = by[0] - ay[0];\n            return [[1, 0, dx], [0, 1, dy], [0, 0, 1]];\n        }\n        if (sz == 2) {\n            let thetaA = Math.atan2(ay[1] - ay[0], ax[1] - ax[0]), thetaB = Math.atan2(by[1] - by[0], bx[1] - bx[0]);\n            let delta = angleDiff(thetaB, thetaA), cos = Math.cos(delta), sin = Math.sin(delta);\n            let rot00 = cos, rot01 = -sin;\n            let rot10 = sin, rot11 = cos;\n            let acx = 0.5 * (ax[0] + ax[1]), acy = 0.5 * (ay[0] + ay[1]);\n            let bcx = 0.5 * (bx[0] + bx[1]), bcy = 0.5 * (by[0] + by[1]);\n            let rax = rot00 * acx + rot01 * acy;\n            let ray = rot10 * acx + rot11 * acy;\n            return [[rot00, rot01, bcx - rax], [rot10, rot11, bcy - ray], [0, 0, 1]];\n        }\n        let invsz = 1.0 / sz;\n        let acx = Vec.sum(ax) * invsz, acy = Vec.sum(ay) * invsz;\n        let bcx = Vec.sum(bx) * invsz, bcy = Vec.sum(by) * invsz;\n        let mtxA = new Matrix(3, sz), mtxB = new Matrix(3, sz);\n        for (let n = 0; n < sz; n++) {\n            mtxA.set(0, n, ax[n] - acx);\n            mtxA.set(1, n, ay[n] - acy);\n            mtxA.set(2, n, 0);\n            mtxB.set(0, n, bx[n] - bcx);\n            mtxB.set(1, n, by[n] - bcy);\n            mtxB.set(2, n, 0);\n        }\n        let cov = mtxA.times(mtxB.transpose());\n        let svd = new SingularValueDecomposition(cov);\n        let rotate = svd.getV().times(svd.getU().transpose());\n        let rot00 = rotate.get(0, 0), rot01 = rotate.get(0, 1);\n        let rot10 = rotate.get(1, 0), rot11 = rotate.get(1, 1);\n        let rax = rot00 * acx + rot01 * acy;\n        let ray = rot10 * acx + rot11 * acy;\n        return [[rot00, rot01, bcx - rax], [rot10, rot11, bcy - ray], [0, 0, 1]];\n    }\n    static convexHull(x, y, flatness) {\n        let algo = new QuickHull(x, y, sqr(flatness * 0.1));\n        return [algo.hullX, algo.hullY];\n    }\n    static outlinePolygon(x, y, diameter) {\n        let del = new Triangulation2D(x, y);\n        let concave = del.trimConcave(diameter);\n        let idx = del.traceOutline(concave);\n        return [Vec.idxGet(x, idx), Vec.idxGet(y, idx)];\n    }\n}\nexport class QuickHull {\n    constructor(x, y, threshSq) {\n        this.x = x;\n        this.y = y;\n        this.threshSq = threshSq;\n        this.hsz = 0;\n        this.hullX = [];\n        this.hullY = [];\n        const sz = x.length;\n        let l = 0, r = 0;\n        for (let n = 0; n < sz; n++) {\n            if (x[r] > x[n] || (x[r] == x[n] && y[r] > y[n]))\n                r = n;\n            if (x[l] < x[n] || (x[l] == x[n] && y[l] < y[n]))\n                l = n;\n        }\n        let al1 = [], al2 = [];\n        for (let n = 0; n < sz; n++) {\n            if (n != l && n != r) {\n                if (this.right(r, l, n) > 0)\n                    al1.push(n);\n                else\n                    al2.push(n);\n            }\n        }\n        this.hullX.push(x[r]);\n        this.hullY.push(y[r]);\n        this.quickHull(r, l, al1);\n        this.hullX.push(x[l]);\n        this.hullY.push(y[l]);\n        this.quickHull(l, r, al2);\n        for (let n = 0; n < this.hullX.length - 1;) {\n            if (norm2_xy(this.hullX[n] - this.hullY[n + 1], this.hullY[n] - this.hullY[n + 1]) < threshSq) {\n                this.hullX.splice(n + 1, 1);\n                this.hullY.splice(n + 1, 1);\n            }\n            else\n                n++;\n        }\n    }\n    quickHull(a, b, al) {\n        if (al.length == 0)\n            return;\n        let c = this.furthestPoint(a, b, al);\n        let al1 = [], al2 = [];\n        for (let n = 0; n < al.length; n++) {\n            let p = al[n];\n            if (p == a || p == b)\n                continue;\n            if (this.right(a, c, p) > 0)\n                al1.push(p);\n            else if (this.right(c, b, p) > 0)\n                al2.push(p);\n        }\n        this.quickHull(a, c, al1);\n        this.hullX.push(this.x[c]);\n        this.hullY.push(this.y[c]);\n        this.quickHull(c, b, al2);\n    }\n    right(a, b, p) {\n        const x = this.x, y = this.y;\n        return (x[a] - x[b]) * (y[p] - y[b]) - (x[p] - x[b]) * (y[a] - y[b]);\n    }\n    distance(a, b, p) {\n        const x = this.x, y = this.y;\n        let u = ((x[p] - x[a]) * (x[b] - x[a]) + (y[p] - y[a]) * (y[b] - y[a])) / ((x[b] - x[a]) * (x[b] - x[a]) + (y[b] - y[a]) * (y[b] - y[a]));\n        let ux = x[a] + u * (x[b] - x[a]);\n        let uy = y[a] + u * (y[b] - y[a]);\n        return ((ux - x[p]) * (ux - x[p]) + (uy - y[p]) * (uy - y[p]));\n    }\n    furthestPoint(a, b, al) {\n        let maxDist = -1;\n        let maxPos = -1;\n        for (let n = 0; n < al.length; n++) {\n            let p = al[n];\n            if (p == a || p == b)\n                continue;\n            let dist = this.distance(a, b, p);\n            if (dist > maxDist) {\n                maxDist = dist;\n                maxPos = p;\n            }\n        }\n        return maxPos;\n    }\n}\nexport class RollingBall {\n    constructor(x, y, diameter) {\n        this.x = x;\n        this.y = y;\n        this.sequence = [];\n        const sz = x.length;\n        const threshSq = diameter * diameter;\n        let first = Vec.idxMax(x), latest = first;\n        let direction = 0.0;\n        let visited = Vec.booleanArray(false, sz);\n        this.sequence.push(first);\n        let roll = () => {\n            let bestIdx = -1;\n            let bestDelta = 0, bestTheta = 0;\n            for (let n = 0; n < sz; n++)\n                if (n != latest && !visited[n]) {\n                    let dx = x[n] - x[latest], dy = y[n] - y[latest];\n                    let dsq = norm2_xy(dx, dy);\n                    if (dsq == 0 || dsq > threshSq)\n                        continue;\n                    let theta = Math.atan2(dy, dx), delta = angleDiffPos(theta, direction);\n                    if (bestIdx < 0 || delta < bestDelta) {\n                        bestIdx = n;\n                        bestDelta = delta;\n                        bestTheta = theta;\n                    }\n                }\n            if (bestIdx < 0)\n                return -1;\n            direction = angleNorm(bestTheta - 0.5 * Math.PI);\n            visited[bestIdx] = true;\n            return bestIdx;\n        };\n        while (true) {\n            let next = roll();\n            if (next < 0) {\n                this.sequence = null;\n                return;\n            }\n            if (next == first)\n                break;\n            this.sequence.push(next);\n            latest = next;\n        }\n    }\n    sequencePos() {\n        if (!this.sequence)\n            return null;\n        let posList = [];\n        for (let n of this.sequence)\n            posList.push(new Pos(this.x[n], this.y[n]));\n        return posList;\n    }\n    sequenceXY() {\n        if (!this.sequence)\n            return [null, null];\n        let px = [], py = [];\n        for (let n of this.sequence) {\n            px.push(this.x[n]);\n            py.push(this.y[n]);\n        }\n        return [px, py];\n    }\n}\nexport class Pos {\n    static zero() { return new Pos(); }\n    static fromArray(src) { return new Pos(src[0], src[1]); }\n    constructor(x, y) {\n        this.x = x == null ? 0 : x;\n        this.y = y == null ? 0 : y;\n    }\n    clone() { return new Pos(this.x, this.y); }\n    equals(other) { return this.x == other.x && this.y == other.y; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x *= mag;\n        this.y *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    }\n    withScaleBy(mag) {\n        return new Pos(this.x * mag, this.y * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Pos(this.x + dx, this.y + dy);\n    }\n    toString() { return '[' + this.x + ',' + this.y + ']'; }\n}\nexport class Size {\n    static zero() { return new Size(); }\n    static fromArray(src) { return new Size(src[0], src[1]); }\n    constructor(w, h) {\n        this.w = w == null ? 0 : w;\n        this.h = h == null ? 0 : h;\n    }\n    clone() { return new Size(this.w, this.h); }\n    equals(other) { return this.w == other.w && this.h == other.h; }\n    isZero() { return this.w == 0 && this.h == 0; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.w *= mag;\n        this.h *= mag;\n    }\n    fitInto(maxW, maxH) {\n        let scale = 1;\n        if (this.w > maxW)\n            scale = maxW / this.w;\n        if (this.h > maxH)\n            scale = Math.min(scale, maxH / this.h);\n        if (scale < 1)\n            this.scaleBy(scale);\n    }\n    withScaleBy(mag) {\n        return new Size(this.w * mag, this.h * mag);\n    }\n    toString() { return '[' + this.w + ',' + this.h + ']'; }\n}\nexport class Box {\n    static zero() { return new Box(); }\n    static fromBounds(x1, y1, x2, y2) { return new Box(x1, y1, x2 - x1, y2 - y1); }\n    static fromSize(sz) { return new Box(0, 0, sz.w, sz.h); }\n    static fromOval(oval) { return new Box(oval.cx - oval.rw, oval.cy - oval.rh, 2 * oval.rw, 2 * oval.rh); }\n    static fromArray(src) { return new Box(src[0], src[1], src[2], src[3]); }\n    constructor(x, y, w, h) {\n        this.x = x == null ? 0 : x;\n        this.y = y == null ? 0 : y;\n        this.w = w == null ? 0 : w;\n        this.h = h == null ? 0 : h;\n    }\n    clone() { return new Box(this.x, this.y, this.w, this.h); }\n    equals(other) { return this.x == other.x && this.y == other.y && this.w == other.w && this.h == other.h; }\n    getPos() { return new Pos(this.x, this.y); }\n    setPos(pos) {\n        this.x = pos.x;\n        this.y = pos.y;\n    }\n    getSize() { return new Size(this.w, this.h); }\n    setSize(sz) {\n        this.w = sz.w;\n        this.h = sz.h;\n    }\n    minX() { return this.x; }\n    minY() { return this.y; }\n    midX() { return this.x + 0.5 * this.w; }\n    midY() { return this.y + 0.5 * this.h; }\n    maxX() { return this.x + this.w; }\n    maxY() { return this.y + this.h; }\n    area() { return this.w * this.h; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x *= mag;\n        this.y *= mag;\n        this.w *= mag;\n        this.h *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    }\n    grow(bx, by) {\n        this.x -= bx;\n        this.y -= by;\n        this.w += 2 * bx;\n        this.h += 2 * by;\n    }\n    withScaleBy(mag) {\n        return new Box(this.x * mag, this.y * mag, this.w * mag, this.h * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Box(this.x + dx, this.y + dy, this.w, this.h);\n    }\n    withGrow(bx, by) {\n        return new Box(this.x - bx, this.y - by, this.w + 2 * bx, this.h + 2 * by);\n    }\n    intersects(other) {\n        return GeomUtil.rectsIntersect(this.x, this.y, this.w, this.h, other.x, other.y, other.w, other.h);\n    }\n    intersection(other) {\n        let x1 = this.x, x2 = x1 + this.w, y1 = this.y, y2 = y1 + this.h;\n        let x3 = other.x, x4 = x3 + other.w, y3 = other.y, y4 = y3 + other.h;\n        let x5 = Math.max(x1, x3), y5 = Math.max(y1, y3), x6 = Math.min(x2, x4), y6 = Math.min(y2, y4);\n        return new Box(x5, y5, x6 - x5, y6 - y5);\n    }\n    contains(x, y) {\n        return x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h;\n    }\n    union(other) {\n        let x1 = Math.min(this.x, other.x), x2 = Math.max(this.x + this.w, other.x + other.w);\n        let y1 = Math.min(this.y, other.y), y2 = Math.max(this.y + this.h, other.y + other.h);\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    isZero() { return this.w == 0 && this.h == 0; }\n    isEmpty() { return this.w == 0 && this.h == 0; }\n    notEmpty() { return this.w > 0 || this.h > 0; }\n    toString() { return '[' + this.x + ',' + this.y + ';' + this.w + ',' + this.h + ']'; }\n}\nexport class Oval {\n    static zero() { return new Oval(); }\n    static fromBox(box) { return new Oval(box.x + 0.5 * box.w, box.y + 0.5 * box.h, 0.5 * box.w, 0.5 * box.h); }\n    static fromArray(src) { return new Oval(src[0], src[1], src[2], src[3]); }\n    constructor(cx, cy, rw, rh) {\n        this.cx = cx == null ? 0 : cx;\n        this.cy = cy == null ? 0 : cy;\n        this.rw = rw == null ? 0 : rw;\n        this.rh = rh == null ? 0 : rh;\n    }\n    clone() { return new Oval(this.cx, this.cy, this.rw, this.rh); }\n    setCentre(pos) {\n        this.cx = pos.x;\n        this.cy = pos.y;\n    }\n    setRadius(sz) {\n        this.rw = sz.w;\n        this.rh = sz.h;\n    }\n    minX() { return this.cx - this.rw; }\n    minY() { return this.cy - this.rh; }\n    maxX() { return this.cx + this.rw; }\n    maxY() { return this.cy + this.rh; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.cx *= mag;\n        this.cy *= mag;\n        this.rw *= mag;\n        this.rh *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.cx += dx;\n        this.cy += dy;\n    }\n    withScaleBy(mag) {\n        return new Oval(this.cx * mag, this.cy * mag, this.rw * mag, this.rh * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Oval(this.cx + dx, this.cy + dy, this.rw, this.rh);\n    }\n    contains(x, y) {\n        let dx = x - this.cx, dy = y - this.cy;\n        let a = dx / this.rw, b = dy / this.rh;\n        return a * a + b * b <= 1;\n    }\n    toString() { return '[' + this.cx + ',' + this.cy + ';' + this.rw + ',' + this.rh + ']'; }\n}\nexport class Line {\n    static zero() { return new Line(); }\n    static fromPos(pos1, pos2) { return new Line(pos1.x, pos1.y, pos2.x, pos2.y); }\n    constructor(x1, y1, x2, y2) {\n        this.x1 = x1 == null ? 0 : x1;\n        this.y1 = y1 == null ? 0 : y1;\n        this.x2 = x2 == null ? 0 : x2;\n        this.y2 = y2 == null ? 0 : y2;\n    }\n    clone() { return new Line(this.x1, this.y1, this.x2, this.y2); }\n    setPos1(pos) {\n        this.x1 = pos.x;\n        this.y1 = pos.y;\n    }\n    setPos2(pos) {\n        this.x2 = pos.x;\n        this.y2 = pos.y;\n    }\n    minX() { return Math.min(this.x1, this.x2); }\n    minY() { return Math.min(this.y1, this.y2); }\n    maxX() { return Math.max(this.x1, this.x2); }\n    maxY() { return Math.max(this.y1, this.y2); }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x1 *= mag;\n        this.y1 *= mag;\n        this.x2 *= mag;\n        this.y2 *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x1 += dx;\n        this.y1 += dy;\n        this.x2 += dx;\n        this.y2 += dy;\n    }\n    toString() { return '[' + this.x1 + ',' + this.y1 + ';' + this.x2 + ',' + this.y2 + ']'; }\n}\n//# sourceMappingURL=Geom.js.map","const ELEMENT_NODE = 1;\nconst ATTRIBUTE_NODE = 2;\nconst TEXT_NODE = 3;\nconst CDATA_SECTION_NODE = 4;\nconst ENTITY_REFERENCE_NODE = 5;\nconst ENTITY_NODE = 6;\nconst PROCESSING_INSTRUCTION_NODE = 7;\nconst COMMENT_NODE = 8;\nconst DOCUMENT_NODE = 9;\nconst DOCUMENT_TYPE_NODE = 10;\nconst DOCUMENT_FRAGMENT_NODE = 11;\nconst NOTATION_NODE = 12;\nclass XML {\n    static parseXML(strXML) {\n        let xmlDoc;\n        if (this.customParser)\n            xmlDoc = new this.customParser().parseFromString(strXML, 'application/xml');\n        else\n            xmlDoc = new DOMParser().parseFromString(strXML, 'application/xml');\n        if (xmlDoc == null)\n            return null;\n        return xmlDoc;\n    }\n    static toString(doc) {\n        if (this.customSerial)\n            return new this.customSerial().serializeToString(doc.documentElement);\n        else\n            return new XMLSerializer().serializeToString(doc.documentElement);\n    }\n    static toPrettyString(doc) {\n        let xslt = [\n            '<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">',\n            '  <xsl:strip-space elements=\"*\"/>',\n            '  <xsl:template match=\"para[content-style][not(text())]\">',\n            '    <xsl:value-of select=\"normalize-space(.)\"/>',\n            '  </xsl:template>',\n            '  <xsl:template match=\"node()|@*\">',\n            '    <xsl:copy><xsl:apply-templates select=\"node()|@*\"/></xsl:copy>',\n            '  </xsl:template>',\n            '  <xsl:output indent=\"yes\"/>',\n            '</xsl:stylesheet>',\n        ].join('\\n');\n        let xsltDoc = this.parseXML(xslt);\n        let xsltProc = new XSLTProcessor();\n        xsltProc.importStylesheet(xsltDoc);\n        let resultDoc = xsltProc.transformToDocument(doc);\n        return new XMLSerializer().serializeToString(resultDoc);\n    }\n    static nodeText(el) {\n        let text = '';\n        for (let child of Array.from(el.childNodes)) {\n            if (child.nodeType == TEXT_NODE || child.nodeType == CDATA_SECTION_NODE)\n                text += child.nodeValue;\n        }\n        return text;\n    }\n    static childText(parent, tagName) {\n        if (parent == null)\n            return null;\n        let el = this.findElement(parent, tagName);\n        if (el == null)\n            return null;\n        return this.nodeText(el);\n    }\n    static appendElement(parent, name) {\n        let el = parent.ownerDocument.createElement(name);\n        parent.appendChild(el);\n        return el;\n    }\n    static appendElementAfter(presib, name) {\n        let el = presib.ownerDocument.createElement(name);\n        let postsib = presib.nextSibling;\n        if (postsib == null)\n            presib.parentNode.appendChild(el);\n        else\n            presib.parentNode.insertBefore(el, postsib);\n        return el;\n    }\n    static appendText(parent, text, isCDATA = false) {\n        if (text == null || text.length == 0)\n            return;\n        if (!isCDATA)\n            parent.appendChild(parent.ownerDocument.createTextNode(text));\n        else\n            parent.appendChild(parent.ownerDocument.createCDATASection(text));\n    }\n    static createTextChild(parent, name, text, isCDATA = false) {\n        let el = parent.ownerDocument.createElement(name);\n        parent.appendChild(el);\n        if (!isCDATA)\n            el.textContent = text;\n        else\n            el.appendChild(parent.ownerDocument.createCDATASection(text));\n    }\n    static setText(parent, text, isCDATA = false) {\n        while (parent.firstChild != null)\n            parent.removeChild(parent.firstChild);\n        this.appendText(parent, text, isCDATA);\n    }\n    static findElement(parent, tagName) {\n        if (parent == null)\n            return null;\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE && node.nodeName == tagName)\n                return node;\n            node = node.nextSibling;\n        }\n        return null;\n    }\n    static findChildElements(parent, tagName) {\n        if (parent == null)\n            return [];\n        let list = [];\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE && node.nodeName === tagName)\n                list.push(node);\n            node = node.nextSibling;\n        }\n        return list;\n    }\n    static childElements(parent) {\n        if (parent == null)\n            return [];\n        let list = [];\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE)\n                list.push(node);\n            node = node.nextSibling;\n        }\n        return list;\n    }\n}\nXML.customParser = null;\nXML.customSerial = null;\nexport { XML };\n//# sourceMappingURL=XML.js.map","import { Box, Pos, Size } from './Geom';\nimport { XML } from './XML';\nexport function dom(obj) {\n    if (typeof obj == 'string')\n        return DOM.parse(obj);\n    if (obj instanceof DOM)\n        return obj;\n    return new DOM(obj);\n}\nexport function domLegacy(obj) {\n    if (obj == null)\n        return null;\n    if (obj.jquery)\n        return dom(obj[0]);\n    return dom(obj);\n}\nexport class DOM {\n    constructor(el) {\n        this.el = el;\n    }\n    get elHTML() { return this.el; }\n    get elInput() { return this.el; }\n    get elCanvas() { return this.el; }\n    static parse(xhtml) {\n        let xml = XML.parseXML(xhtml);\n        if (xml == null)\n            throw 'Invalid XHTML string: ' + xhtml;\n        let html = xml.documentElement.outerHTML;\n        let template = document.createElement('template');\n        template.innerHTML = html;\n        return new DOM(template.content.firstChild);\n    }\n    static find(selector) {\n        let el = document.querySelector(selector);\n        return el ? new DOM(el) : null;\n    }\n    static findAll(selector) {\n        let nodeList = document.querySelectorAll(selector);\n        let domList = [];\n        for (let n = 0; n < nodeList.length; n++)\n            domList.push(new DOM(nodeList.item(n)));\n        return domList;\n    }\n    parent() {\n        let parent = this.el.parentElement;\n        return parent ? new DOM(parent) : null;\n    }\n    ancestor(selector) {\n        let el = this.el.closest(selector);\n        return el ? new DOM(el) : null;\n    }\n    children(tag) {\n        let domList = [];\n        for (let child = this.el.firstElementChild; child; child = child.nextElementSibling) {\n            if (tag && child.tagName.toLocaleLowerCase() != tag.toLocaleLowerCase())\n                continue;\n            domList.push(new DOM(child));\n        }\n        return domList;\n    }\n    find(selector) {\n        let el = this.el.querySelector(selector);\n        return el ? new DOM(el) : null;\n    }\n    findAll(selector) {\n        let nodeList = this.el.querySelectorAll(selector);\n        let domList = [];\n        for (let n = 0; n < nodeList.length; n++)\n            domList.push(new DOM(nodeList.item(n)));\n        return domList;\n    }\n    exists() {\n        return document.documentElement.contains(this.el);\n    }\n    isVisible() {\n        return this.elHTML.offsetWidth > 0 || this.elHTML.offsetHeight > 0 || this.elHTML.getClientRects().length > 0;\n    }\n    append(child) {\n        this.el.append(child.el);\n    }\n    appendTo(parent) {\n        if (parent instanceof DOM)\n            parent.el.append(this.el);\n        else\n            parent.appendChild(this.el);\n        return this;\n    }\n    prepend(child) {\n        this.el.prepend(child.el);\n    }\n    prependTo(parent) {\n        if (parent instanceof DOM)\n            parent.el.prepend(this.el);\n        else\n            parent.append(this.el);\n        return this;\n    }\n    insertBefore(ref) {\n        ref.el.parentElement.insertBefore(this.el, ref.el);\n        return this;\n    }\n    insertAfter(ref) {\n        let before = ref.el.nextElementSibling;\n        if (before)\n            ref.el.parentElement.insertBefore(this.el, before);\n        else\n            ref.el.parentElement.append(this.el);\n        return this;\n    }\n    remove() {\n        this.el.remove();\n    }\n    empty() {\n        this.el.innerHTML = '';\n    }\n    getHTML() {\n        return this.el.innerHTML;\n    }\n    setHTML(html) {\n        this.el.innerHTML = html;\n    }\n    appendHTML(xhtml) {\n        let xml = XML.parseXML('<z>' + xhtml + '</z>');\n        if (xml == null)\n            throw 'Invalid XHTML string: ' + xhtml;\n        let html = xml.documentElement.innerHTML;\n        this.el.insertAdjacentHTML('beforeend', html);\n    }\n    getText() {\n        return this.el.textContent;\n    }\n    setText(text) {\n        this.el.textContent = text;\n    }\n    appendText(text) {\n        let content = document.createTextNode(text);\n        this.el.appendChild(content);\n    }\n    getValue() {\n        return this.el.value;\n    }\n    setValue(str) {\n        this.el.value = str || '';\n    }\n    getCSS(key) {\n        return this.elHTML.style.getPropertyValue(key);\n    }\n    setCSS(key, value) {\n        this.elHTML.style.setProperty(key, value === null || value === void 0 ? void 0 : value.toString());\n    }\n    css(dict) {\n        for (let key in dict)\n            this.setCSS(key, dict[key].toString());\n        return this;\n    }\n    getAttr(key) {\n        if (!this.el.hasAttribute(key))\n            return null;\n        return this.el.getAttribute(key);\n    }\n    setAttr(key, value) {\n        this.el.setAttribute(key, value);\n    }\n    attr(dict) {\n        for (let key in dict)\n            this.setAttr(key, dict[key].toString());\n        return this;\n    }\n    addClass(clsnames) {\n        for (let cls of clsnames.split(' '))\n            if (cls)\n                this.elHTML.classList.add(cls);\n    }\n    removeClass(clsnames) {\n        for (let cls of clsnames.split(' '))\n            if (cls)\n                this.elHTML.classList.remove(cls);\n    }\n    hasClass(clsname) {\n        return this.elHTML.classList.contains(clsname);\n    }\n    setClass(clsname, flag) {\n        if (flag)\n            this.addClass(clsname);\n        else\n            this.removeClass(clsname);\n    }\n    class(clsname) {\n        this.addClass(clsname);\n        return this;\n    }\n    toggleClass(dict) {\n        for (let key in dict) {\n            if (dict[key])\n                this.elHTML.classList.add(key);\n            else\n                this.elHTML.classList.remove(key);\n        }\n    }\n    width() {\n        return this.elHTML.offsetWidth;\n    }\n    height() {\n        return this.elHTML.offsetHeight;\n    }\n    offset() {\n        let rect = this.el.getBoundingClientRect();\n        let win = this.el.ownerDocument.defaultView;\n        return new Pos(rect.left + win.pageXOffset, rect.top + win.pageYOffset);\n    }\n    size() {\n        return new Size(this.width(), this.height());\n    }\n    area() {\n        let pos = this.offset();\n        return new Box(pos.x, pos.y, this.width(), this.height());\n    }\n    setBoundaryPixels(x, y, w, h) {\n        this.css({ 'left': `${x}px`, 'top': `${y}px`, 'width': `${w}px`, 'height': `${h}px` });\n    }\n    setSizePixels(w, h) {\n        this.css({ 'width': `${w}px`, 'height': `${h}px` });\n    }\n    hasFocus() {\n        return this.el === document.activeElement;\n    }\n    grabFocus(delay = false) {\n        if (delay)\n            setTimeout(() => this.grabFocus(), 10);\n        else\n            this.elHTML.focus();\n    }\n    removeEvent(id, callback) {\n        this.el.removeEventListener(id, callback);\n    }\n    onKeyDown(callback) {\n        this.el.addEventListener('keydown', callback);\n    }\n    onKeyUp(callback) {\n        this.el.addEventListener('keyup', callback);\n    }\n    onKeyPress(callback) {\n        this.el.addEventListener('keypress', callback);\n    }\n    onScroll(callback) {\n        this.el.addEventListener('scroll', callback);\n    }\n    onWheel(callback) {\n        this.el.addEventListener('wheel', callback);\n    }\n    onClick(callback) {\n        this.el.addEventListener('click', callback);\n    }\n    onContextMenu(callback) {\n        this.el.addEventListener('contextmenu', callback);\n    }\n    onDblClick(callback) {\n        this.el.addEventListener('dblclick', callback);\n    }\n    onMouseDown(callback) {\n        this.el.addEventListener('mousedown', callback);\n    }\n    onMouseUp(callback) {\n        this.el.addEventListener('mouseup', callback);\n    }\n    onMouseEnter(callback) {\n        this.el.addEventListener('mouseenter', callback);\n    }\n    onMouseLeave(callback) {\n        this.el.addEventListener('mouseleave', callback);\n    }\n    onMouseMove(callback) {\n        this.el.addEventListener('mousemove', callback);\n    }\n    onMouseOver(callback) {\n        this.el.addEventListener('mouseover', callback);\n    }\n    onChange(callback) {\n        this.el.addEventListener('change', callback);\n    }\n    onInput(callback) {\n        this.el.addEventListener('input', callback);\n    }\n    onTouchStart(callback) {\n        this.el.addEventListener('touchstart', callback);\n    }\n    onTouchMove(callback) {\n        this.el.addEventListener('touchmove', callback);\n    }\n    onTouchCancel(callback) {\n        this.el.addEventListener('touchcancel', callback);\n    }\n    onTouchEnd(callback) {\n        this.el.addEventListener('touchend', callback);\n    }\n}\n//# sourceMappingURL=dom.js.map","import { colourCode } from './util';\nclass Theme {\n}\nTheme.BASE_URL = null;\nTheme.RESOURCE_URL = null;\nTheme.foreground = 0x000000;\nTheme.background = 0xFFFFFF;\nTheme.lowlight = 0x24D0D0;\nTheme.lowlightEdge1 = 0x47D5D2;\nTheme.lowlightEdge2 = 0x008FD1;\nTheme.highlight = 0x00FF00;\nTheme.highlightEdge1 = 0x00CA59;\nTheme.highlightEdge2 = 0x008650;\nTheme.error = 0xFF0000;\nexport { Theme };\nexport function initWebMolKit(resourcePath) {\n    Theme.RESOURCE_URL = resourcePath;\n    try {\n        let _ = document;\n    }\n    catch (e) {\n        return;\n    }\n    if (document)\n        installInlineCSS('main', composeMainCSS());\n}\nlet cssTagsInstalled = new Set();\nexport function hasInlineCSS(tag) { return cssTagsInstalled.has(tag); }\nexport function installInlineCSS(tag, css) {\n    if (cssTagsInstalled.has(tag))\n        return false;\n    let el = document.createElement('style');\n    el.innerHTML = css;\n    document.head.appendChild(el);\n    cssTagsInstalled.add(tag);\n    return true;\n}\nfunction composeMainCSS() {\n    let lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n    let highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n    return `\n\t\t.wmk-button\n\t\t{\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: 6px 12px;\n\t\t\tmargin-bottom: 0;\n\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\tfont-size: 14px;\n\t\t\tfont-weight: normal;\n\t\t\tline-height: 1.42857143;\n\t\t\ttext-align: center;\n\t\t\twhite-space: nowrap;\n\t\t\tvertical-align: middle;\n\t\t\tcursor: pointer;\n\t\t\tbackground-image: none;\n\t\t\tborder: 1px solid transparent;\n\t\t\tborder-radius: 4px;\n\t\t\t-ms-touch-action: manipulation; touch-action: manipulation;\n\t\t\t-webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;\n\t\t}\n\t\t.wmk-button:focus,\n\t\t.wmk-button:active:focus,\n\t\t.wmk-button.active:focus,\n\t\t.wmk-button.focus,\n\t\t.wmk-button:active.focus,\n\t\t.wmk-button.active.focus\n\t\t{\n\t\t\toutline: thin dotted;\n\t\t\toutline: 5px auto -webkit-focus-ring-color;\n\t\t\toutline-offset: -2px;\n\t\t}\n\t\t.wmk-button:hover,\n\t\t.wmk-button:focus,\n\t\t.wmk-button.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\ttext-decoration: none;\n\t\t}\n\t\t.wmk-button:active,\n\t\t.wmk-button.active\n\t\t{\n\t\t\tbackground-image: none;\n\t\t\toutline: 0;\n\t\t\t-webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);\n\t\t\tbox-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);\n\t\t}\n\t\t.wmk-button.disabled,\n\t\t.wmk-button[disabled],\n\t\tfieldset[disabled] .wmk-button\n\t\t{\n\t\t\tcursor: not-allowed;\n\t\t\tfilter: alpha(opacity=65);\n\t\t\t-webkit-box-shadow: none;\n\t\t\tbox-shadow: none;\n\t\t\topacity: .65;\n\t\t}\n\t\ta.wmk-button.disabled,\n\t\tfieldset[disabled] a.wmk-button\n\t\t{\n\t\t\tpointer-events: none;\n\t\t}\n\n\t\t/* shrunken button */\n\n\t\t.wmk-button-small\n\t\t{\n\t\t\tpadding: 2px 4px;\n\t\t\tline-height: 1;\n\t\t\tfont-size: 12px;\n\t\t}\n\n\t\t/* default button */\n\n\t\t.wmk-button-default\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #fff;\n\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\tborder-color: #ccc;\n\t\t}\n\t\t.wmk-button-default:focus,\n\t\t.wmk-button-default.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #8c8c8c;\n\t\t}\n\t\t.wmk-button-default:hover\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #adadad;\n\t\t}\n\t\t.wmk-button-default:active,\n\t\t.wmk-button-default.active,\n\t\t.open > .dropdown-toggle.wmk-button-default\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #adadad;\n\t\t}\n\t\t.wmk-button-default:active:hover,\n\t\t.wmk-button-default.active:hover,\n\t\t.open > .dropdown-toggle.wmk-button-default:hover,\n\t\t.wmk-button-default:active:focus,\n\t\t.wmk-button-default.active:focus,\n\t\t.open > .dropdown-toggle.wmk-button-default:focus,\n\t\t.wmk-button-default:active.focus,\n\t\t.wmk-button-default.active.focus,\n\t\t.open > .dropdown-toggle.wmk-button-default.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #d4d4d4;\n\t\t\tborder-color: #8c8c8c;\n\t\t}\n\t\t.wmk-button-default:active,\n\t\t.wmk-button-default.active,\n\t\t.open > .dropdown-toggle.wmk-button-default\n\t\t{\n\t\t\tbackground-image: none;\n\t\t}\n\t\t.wmk-button-default.disabled:hover,\n\t\t.wmk-button-default[disabled]:hover,\n\t\tfieldset[disabled] .wmk-button-default:hover,\n\t\t.wmk-button-default.disabled:focus,\n\t\t.wmk-button-default[disabled]:focus,\n\t\tfieldset[disabled] .wmk-button-default:focus,\n\t\t.wmk-button-default.disabled.focus,\n\t\t.wmk-button-default[disabled].focus,\n\t\tfieldset[disabled] .wmk-button-default.focus\n\t\t{\n\t\t\tbackground-color: #fff;\n\t\t\tborder-color: #ccc;\n\t\t}\n\t\t.wmk-button-default .badge\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #333;\n\t\t}\n\n\t\t/* primary button */\n\n\t\t.wmk-button-primary\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #008FD2;\n\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\tborder-color: #00C0C0;\n\t\t}\n\t\t.wmk-button-primary:focus,\n\t\t.wmk-button-primary.focus\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: ${lowlight};\n\t\t\tborder-color: #122b40;\n\t\t}\n\t\t.wmk-button-primary:hover\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #286090;\n\t\t\tborder-color: #204d74;\n\t\t}\n\t\t.wmk-button-primary:active,\n\t\t.wmk-button-primary.active,\n\t\t.open > .dropdown-toggle.wmk-button-primary\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #286090;\n\t\t\tborder-color: #20744d;\n\t\t}\n\t\t.wmk-button-primary:active:hover,\n\t\t.wmk-button-primary.active:hover,\n\t\t.open > .dropdown-toggle.wmk-button-primary:hover,\n\t\t.wmk-button-primary:active:focus,\n\t\t.wmk-button-primary.active:focus,\n\t\t.open > .dropdown-toggle.wmk-button-primary:focus,\n\t\t.wmk-button-primary:active.focus,\n\t\t.wmk-button-primary.active.focus,\n\t\t.open > .dropdown-toggle.wmk-button-primary.focus\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: ${highlight};\n\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\tborder-color: #12802b;\n\t\t}\n\t\t.wmk-button-primary:active,\n\t\t.wmk-button-primary.active,\n\t\t.open > .dropdown-toggle.wmk-button-primary\n\t\t{\n\t\t\tbackground-image: none;\n\t\t}\n\t\t.wmk-button-primary.disabled:hover,\n\t\t.wmk-button-primary[disabled]:hover,\n\t\tfieldset[disabled] .wmk-button-primary:hover,\n\t\t.wmk-button-primary.disabled:focus,\n\t\t.wmk-button-primary[disabled]:focus,\n\t\tfieldset[disabled] .wmk-button-primary:focus,\n\t\t.wmk-button-primary.disabled.focus,\n\t\t.wmk-button-primary[disabled].focus,\n\t\tfieldset[disabled] .wmk-button-primary.focus\n\t\t{\n\t\t\tbackground-color: #337ab7;\n\t\t\tborder-color: #2ea46d;\n\t\t}\n\t\t.wmk-button-primary .badge\n\t\t{\n\t\t\tcolor: #337ab7;\n\t\t\tbackground-color: #fff;\n\t\t}\n\t`;\n}\n//# sourceMappingURL=Theme.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { dom } from '../util/dom';\nimport { installInlineCSS } from '../util/Theme';\nconst CSS_TOOLTIP = `\n    *.wmk-tooltip-outer\n    {\n\t\tposition: absolute;\n\t\tborder-radius: 4px;\n\t\tborder: 1px solid black;\n\t\tbackground-color: white;\n\t\tpadding: 1px;\n\t\tpointer-events: none;\n        font-family: 'Open Sans', sans-serif;\n\t\tfont-size: 14px;\n    }\n\t*.wmk-tooltip-inner\n\t{\n\t\tcolor: white;\n\t\tborder-radius: 4px;\n\t\tbackground-color: black;\n\t\tpadding: 0.3em;\n\t\tmax-width: calc(min(40em, 50vw));\n\t}\n`;\nlet globalTooltip = null;\nlet globalPopWatermark = 0;\nexport function addTooltip(parent, bodyHTML, titleHTML, delay) {\n    installInlineCSS('tooltip', CSS_TOOLTIP);\n    let widget = dom(parent);\n    let tooltip = new Tooltip(widget, bodyHTML, titleHTML, delay == null ? 1000 : delay);\n    widget.onMouseEnter(() => tooltip.start());\n    widget.onMouseLeave(() => tooltip.stop());\n}\nexport function addTooltipPromise(parent, bodyCallback, titleHTML, delay) {\n    installInlineCSS('tooltip', CSS_TOOLTIP);\n    let widget = dom(parent);\n    let tooltip = new Tooltip(widget, null, titleHTML, delay == null ? 1000 : delay);\n    tooltip.bodyCallback = bodyCallback;\n    widget.onMouseEnter(() => tooltip.start());\n    widget.onMouseLeave(() => tooltip.stop());\n}\nexport function raiseToolTip(parent, avoid, bodyHTML, titleHTML) {\n    installInlineCSS('tooltip', CSS_TOOLTIP);\n    clearTooltip();\n    new Tooltip(dom(parent), bodyHTML, titleHTML, 0).raise(avoid);\n}\nexport function clearTooltip() {\n    if (globalTooltip == null)\n        return;\n    globalPopWatermark++;\n    globalTooltip.stop();\n}\nexport class Tooltip {\n    constructor(widget, bodyHTML, titleHTML, delay) {\n        this.widget = widget;\n        this.bodyHTML = bodyHTML;\n        this.titleHTML = titleHTML;\n        this.delay = delay;\n        this.domTooltip = null;\n    }\n    start() {\n        this.watermark = ++globalPopWatermark;\n        (() => __awaiter(this, void 0, void 0, function* () {\n            if (this.bodyHTML == null && this.bodyCallback)\n                this.bodyHTML = yield this.bodyCallback();\n            window.setTimeout(() => {\n                if (this.watermark == globalPopWatermark)\n                    this.raise();\n            }, this.delay);\n        }))();\n    }\n    stop() {\n        if (this.domTooltip) {\n            this.domTooltip.remove();\n            this.domTooltip = null;\n        }\n        this.watermark = -1;\n    }\n    raise(avoid) {\n        if (!this.widget.exists())\n            return;\n        globalTooltip = this;\n        if (this.domTooltip)\n            return;\n        let pop = this.domTooltip = dom('<div/>').class('wmk-tooltip-outer').css({ 'visibility': 'hidden' }).appendTo(document.body);\n        let sanity = 50;\n        for (let ancestor = this.widget; ancestor; ancestor = ancestor.parent()) {\n            if (--sanity == 0)\n                break;\n            let zindex = parseInt(ancestor.elHTML.style.zIndex);\n            if (zindex > 0) {\n                pop.setCSS('z-index', (zindex + 1000).toString());\n                break;\n            }\n        }\n        let div = dom('<div/>').appendTo(pop).class('wmk-tooltip-inner');\n        let hasTitle = this.titleHTML != null && this.titleHTML.length > 0, hasBody = this.bodyHTML != null && this.bodyHTML.length > 0;\n        if (hasTitle)\n            dom('<div/>').appendTo(div).setHTML('<b>' + this.titleHTML + '</b>');\n        if (hasTitle && hasBody)\n            div.appendHTML('<hr/>');\n        if (hasBody)\n            dom('<div/>').appendTo(div).setHTML(this.bodyHTML);\n        let winW = window.innerWidth, winH = window.innerHeight;\n        const GAP = 2;\n        let boundDiv = this.widget.el.getBoundingClientRect();\n        let wx1 = boundDiv.left, wy1 = boundDiv.top;\n        let wx2 = wx1 + boundDiv.width, wy2 = wy1 + boundDiv.height;\n        if (avoid) {\n            wx1 += avoid.x;\n            wy1 += avoid.y;\n            wx2 = wx1 + avoid.w;\n            wy2 = wy1 + avoid.h;\n        }\n        let setPosition = () => {\n            let popW = pop.width(), popH = pop.height();\n            let posX = 0, posY = 0;\n            if (wx1 + popW < winW)\n                posX = wx1;\n            else if (popW < wx2)\n                posX = wx2 - popW;\n            if (wy2 + GAP + popH < winH)\n                posY = wy2 + GAP;\n            else if (wy1 - GAP - popH > 0)\n                posY = wy1 - GAP - popH;\n            else\n                posY = wy2 + GAP;\n            posX += window.pageXOffset;\n            posY += window.pageYOffset;\n            pop.css({ 'left': `${posX}px`, 'top': `${posY}px`, 'visibility': 'visible' });\n        };\n        pop.css({ 'left': '0px', 'top': '0px' });\n        setTimeout(() => setPosition(), 1);\n        let checkParent = () => {\n            if (this.watermark != globalPopWatermark || !this.widget.isVisible() || !this.widget.exists())\n                this.stop();\n            else\n                setTimeout(checkParent, 100);\n        };\n        setTimeout(checkParent, 100);\n    }\n}\n//# sourceMappingURL=Tooltip.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {Box} from 'webmolkit/util/Geom';\nimport {installInlineCSS, Theme} from 'webmolkit/util/Theme';\nimport {addTooltip} from 'webmolkit/ui/Tooltip';\nimport {escapeHTML} from 'webmolkit/util/util';\n\n/*\n\tA banner that goes along the top of the screen and fills up with clickable icons.\n*/\n\nexport enum MenuBannerCommand\n{\n\tNewMixture = 'newMixture',\n\tNewCollection = 'newCollection',\n\tOpen = 'open',\n\tSave = 'save',\n\tSaveAs = 'saveAs',\n\tEditDetails = 'editDetails',\n\tEditStructure = 'editStructure',\n\tLookup = 'lookup',\n\tExportSVG = 'exportSVG',\n\tExportSDF = 'exportSDF',\n\tCreateMInChI = 'createMInChI',\n\tAppend = 'append',\n\tPrepend = 'prepend',\n\tInsertBefore = 'insertBefore',\n\tInsertAfter = 'insertAfter',\n\tDelete = 'delete',\n\tMoveUp = 'moveUp',\n\tMoveDown = 'moveDown',\n\tUndo = 'undo',\n\tRedo = 'redo',\n\tCopy = 'copy',\n\tCopyBranch = 'copyBranch',\n\tCut = 'cut',\n\tPaste = 'paste',\n\tZoomFull = 'zoomFull',\n\tZoomNormal = 'zoomNormal',\n\tZoomIn = 'zoomIn',\n\tZoomOut = 'zoomOut',\n\tViewDetail = 'viewDetail',\n\tViewCard = 'viewCard',\n\tBack = 'back',\n}\n\nexport interface MenuBannerButton\n{\n\ticon:string; // filename\n\ttip:string; // popup tooltip\n\tcmd:string;\n\twidth?:number; // optional width override\n}\n\nconst CSS_MENUBANNER = `\n\t*.mixtures-menubanner-button:hover\n\t{\n\t\tbackground-color: #D0D0D0;\n\t}\n\t*.mixtures-menubanner-button:active\n\t{\n\t\tbackground-color: #C0C0C0;\n\t}\n`;\nexport class MenuBanner\n{\n\tpublic callbackRefocus:() => void = null;\n\n\tprivate divFlex:DOM;\n\tprivate mapDiv:Record<string, DOM> = {};\n\tprivate mapSVG:Record<string, DOM> = {};\n\tprivate mapActive:Record<string, boolean> = {};\n\tprivate selected = new Set<string>();\n\n\t// ------------ public methods ------------\n\n\tconstructor(private commands:MenuBannerButton[][], private callbackAction:(cmd:string) => void)\n\t{\n\t\tinstallInlineCSS('mixtures-menubanner', CSS_MENUBANNER);\n\t}\n\n\tpublic render(domParent:DOM):void\n\t{\n\t\tdomParent.empty();\n\t\tthis.divFlex = dom('<div/>').appendTo(domParent).css({'display': 'flex', 'width': '100%', 'height': '100%'});\n\t\tthis.divFlex.css({'flex-direction': 'row', 'flex-wrap': 'nowrap', 'justify-content': 'space-around', 'align-items': 'center'});\n\t\t//this.divFlex.css({'linear-gradient': '90deg, #F0F0F0, #808080'});\n\t\tthis.divFlex.css({'background': 'linear-gradient(to bottom, #FFFFFF, #C0C0C0)'});\n\t\tthis.divFlex.css({'user-select': 'none' /*, 'pointer-events': 'none'*/});\n\n\t\t//this.divFlex.click(() => {if (this.callbackRefocus) this.callbackRefocus();});\n\n\t\tfor (let blk of this.commands)\n\t\t{\n\t\t\tlet divBlk = dom('<div/>').appendTo(this.divFlex);\n\t\t\tfor (let btn of blk)\n\t\t\t{\n\t\t\t\tlet [div, svg] = this.createCommand(btn);\n\t\t\t\tdivBlk.append(div);\n\t\t\t\tthis.mapDiv[btn.cmd] = div;\n\t\t\t\tthis.mapSVG[btn.cmd] = svg;\n\t\t\t\tthis.mapActive[btn.cmd] = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t// switch on/off specific buttons\n\tpublic activateButtons(map:Record<string, boolean>):void\n\t{\n\t\tfor (let cmd in map)\n\t\t{\n\t\t\tlet active = this.mapActive[cmd] = map[cmd];\n\t\t\tthis.mapSVG[cmd].css({'opacity': active ? 1 : 0.5});\n\t\t}\n\t}\n\n\t// control over which button(s) are selected\n\tpublic addSelected(cmd:string):void\n\t{\n\t\tif (this.selected.has(cmd)) return;\n\t\tthis.selected.add(cmd);\n\t\tthis.mapDiv[cmd].css({'background-color': '#D0D0D0'});\n\t}\n\tpublic removeSelected(cmd:string):void\n\t{\n\t\tif (!this.selected.has(cmd)) return;\n\t\tthis.selected.delete(cmd);\n\t\tthis.mapDiv[cmd].css({'background-color': 'transparent'});\n\t}\n\n\t// fetch the position of the given icon, relative to the banner overall\n\tpublic iconPosition(cmd:MenuBannerCommand):Box\n\t{\n\t\tlet div = this.mapDiv[cmd];\n\t\tif (!div) return null;\n\t\treturn new Box(div.elHTML.offsetLeft, div.elHTML.offsetTop, div.width(), div.height());\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate createCommand(btn:MenuBannerButton):DOM[]\n\t{\n\t\tlet div = dom('<div/>').css({'display': 'inline-block'});\n\t\tdiv.setAttr('id', 'mixtureEditor_btn_' + btn.icon.substring(0, btn.icon.lastIndexOf('.')));\n\t\tlet width = btn.width ? btn.width : 20;\n\t\tdiv.css({'width': `${width}px`, 'height': '20px', 'margin': '2px', 'padding': '5px'});\n\t\tdiv.css({'border-radius': '4px'});\n\t\tif (this.selected.has(btn.cmd)) div.css({'background-color': '#D0D0D0'});\n\n\t\tlet imgURL = Theme.RESOURCE_URL + '/img/icons/' + btn.icon;\n\t\tlet svg = dom('<img/>').appendTo(div).attr({'src': imgURL});\n\n\t\tdiv.addClass('mixtures-menubanner-button');\n\t\t/*div.onHover(\n\t\t\t() =>\n\t\t\t{\n\t\t\t\tlet col = this.selected.has(btn.cmd) ? '#D0D0D0' : this.mapActive[btn.cmd] ? '#C0C0C0' : 'transparent';\n\t\t\t\tdiv.setCSS('background-color', col);\n\t\t\t},\n\t\t\t() =>\n\t\t\t{\n\t\t\t\tlet col = this.selected.has(btn.cmd) ? '#D0D0D0' : 'transparent';\n\t\t\t\tdiv.setCSS('background-color', col);\n\t\t\t});*/\n\t\tdiv.onClick(() =>\n\t\t{\n\t\t\tif (this.callbackRefocus) this.callbackRefocus();\n\t\t\tif (!this.mapActive[btn.cmd]) return;\n\t\t\tthis.callbackAction(btn.cmd);\n\t\t});\n\t\tif (btn.tip) addTooltip(div, escapeHTML(btn.tip));\n\n\t\treturn [div, svg];\n\t}\n}\n\n","class Chemistry {\n}\nChemistry.ELEMENTS = [\n    null,\n    'H', 'He',\n    'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Ne',\n    'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'Ar',\n    'K', 'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr',\n    'Rb', 'Sr', 'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn', 'Sb', 'Te', 'I', 'Xe',\n    'Cs', 'Ba',\n    'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb',\n    'Lu', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg', 'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn',\n    'Fr', 'Ra',\n    'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No',\n    'Lr', 'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds', 'Rg', 'Cn'\n];\nChemistry.ELEMENT_GROUPS = [\n    0,\n    1, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_ROWS = [\n    0,\n    1, 1,\n    2, 2, 2, 2, 2, 2, 2, 2,\n    3, 3, 3, 3, 3, 3, 3, 3,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n    6, 6,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    7, 7,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7\n];\nChemistry.ELEMENT_BLOCKS = [\n    0,\n    1, 2,\n    1, 1, 2, 2, 2, 2, 2, 2,\n    1, 1, 2, 2, 2, 2, 2, 2,\n    1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3\n];\nChemistry.ELEMENT_VALENCE = [\n    0,\n    1, 2,\n    1, 2, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 2,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_BONDING = [\n    0,\n    1, 0,\n    1, 2, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 2,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_SHELL = [\n    0,\n    2, 2,\n    8, 8, 8, 8, 8, 8, 8, 8,\n    8, 8, 8, 8, 8, 8, 8, 8,\n    8, 8, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 8, 8, 8, 8, 8, 8,\n    8, 8, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 8, 8, 8, 8, 8, 8,\n    8, 8,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    8, 8,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18\n];\nChemistry.NATURAL_ATOMIC_WEIGHTS = [\n    0, 1.00794, 4.002602, 6.941, 9.012182, 10.811, 12.0107, 14.0067, 15.9994, 18.9984032, 20.1797,\n    22.989770, 24.3050, 26.981538, 28.0855, 30.973761, 32.065, 35.453, 39.948, 39.0983, 40.078,\n    44.955910, 47.867, 50.9415, 51.9961, 54.938049, 55.845, 58.933200, 58.6934, 63.546, 65.409,\n    69.723, 72.64, 74.92160, 78.96, 79.904, 83.798, 85.4678, 87.62, 88.90585, 91.224, 92.90638,\n    95.94, 98, 101.07, 102.90550, 106.42, 107.8682, 112.411, 114.818, 118.710, 121.760, 127.60,\n    126.90447, 131.293, 132.90545, 137.327, 138.9055, 140.116, 140.90765, 144.24, 145, 150.36,\n    151.964, 157.25, 158.92534, 162.500, 164.93032, 167.259, 168.93421, 173.04, 174.967, 178.49,\n    180.9479, 183.84, 186.207, 190.23, 192.217, 195.078, 196.96655, 200.59, 204.3833, 207.2, 208.98038,\n    209, 210, 222, 223, 226, 227, 230.0331266, 231.03588, 233.039628, 237, 244, 243, 247, 247, 251, 252, 257,\n    258, 259, 262, 261, 262, 266, 264, 277, 268, 271, 272, 285\n];\nChemistry.ELEMENT_H = 1;\nChemistry.ELEMENT_He = 2;\nChemistry.ELEMENT_Li = 3;\nChemistry.ELEMENT_Be = 4;\nChemistry.ELEMENT_B = 5;\nChemistry.ELEMENT_C = 6;\nChemistry.ELEMENT_N = 7;\nChemistry.ELEMENT_O = 8;\nChemistry.ELEMENT_F = 9;\nChemistry.ELEMENT_Ne = 10;\nChemistry.ELEMENT_Na = 11;\nChemistry.ELEMENT_Mg = 12;\nChemistry.ELEMENT_Al = 13;\nChemistry.ELEMENT_Si = 14;\nChemistry.ELEMENT_P = 15;\nChemistry.ELEMENT_S = 16;\nChemistry.ELEMENT_Cl = 17;\nChemistry.ELEMENT_Ar = 18;\nChemistry.ELEMENT_K = 19;\nChemistry.ELEMENT_Ca = 20;\nChemistry.ELEMENT_Sc = 21;\nChemistry.ELEMENT_Ti = 22;\nChemistry.ELEMENT_V = 23;\nChemistry.ELEMENT_Cr = 24;\nChemistry.ELEMENT_Mn = 25;\nChemistry.ELEMENT_Fe = 26;\nChemistry.ELEMENT_Co = 27;\nChemistry.ELEMENT_Ni = 28;\nChemistry.ELEMENT_Cu = 29;\nChemistry.ELEMENT_Zn = 30;\nChemistry.ELEMENT_Ga = 31;\nChemistry.ELEMENT_Ge = 32;\nChemistry.ELEMENT_As = 33;\nChemistry.ELEMENT_Se = 34;\nChemistry.ELEMENT_Br = 35;\nChemistry.ELEMENT_Kr = 36;\nChemistry.ELEMENT_Rb = 37;\nChemistry.ELEMENT_Sr = 38;\nChemistry.ELEMENT_Y = 39;\nChemistry.ELEMENT_Zr = 40;\nChemistry.ELEMENT_Nb = 41;\nChemistry.ELEMENT_Mo = 42;\nChemistry.ELEMENT_Tc = 43;\nChemistry.ELEMENT_Ru = 44;\nChemistry.ELEMENT_Rh = 45;\nChemistry.ELEMENT_Pd = 46;\nChemistry.ELEMENT_Ag = 47;\nChemistry.ELEMENT_Cd = 48;\nChemistry.ELEMENT_In = 49;\nChemistry.ELEMENT_Sn = 50;\nChemistry.ELEMENT_Sb = 51;\nChemistry.ELEMENT_Te = 52;\nChemistry.ELEMENT_I = 53;\nChemistry.ELEMENT_Xe = 54;\nChemistry.ELEMENT_Cs = 55;\nChemistry.ELEMENT_Ba = 56;\nChemistry.ELEMENT_La = 57;\nChemistry.ELEMENT_Ce = 58;\nChemistry.ELEMENT_Pr = 59;\nChemistry.ELEMENT_Nd = 60;\nChemistry.ELEMENT_Pm = 61;\nChemistry.ELEMENT_Sm = 62;\nChemistry.ELEMENT_Eu = 63;\nChemistry.ELEMENT_Gd = 64;\nChemistry.ELEMENT_Tb = 65;\nChemistry.ELEMENT_Dy = 66;\nChemistry.ELEMENT_Ho = 67;\nChemistry.ELEMENT_Er = 68;\nChemistry.ELEMENT_Tm = 69;\nChemistry.ELEMENT_Yb = 70;\nChemistry.ELEMENT_Lu = 71;\nChemistry.ELEMENT_Hf = 72;\nChemistry.ELEMENT_Ta = 73;\nChemistry.ELEMENT_W = 74;\nChemistry.ELEMENT_Re = 75;\nChemistry.ELEMENT_Os = 76;\nChemistry.ELEMENT_Ir = 77;\nChemistry.ELEMENT_Pt = 78;\nChemistry.ELEMENT_Au = 79;\nChemistry.ELEMENT_Hg = 80;\nChemistry.ELEMENT_Tl = 81;\nChemistry.ELEMENT_Pb = 82;\nChemistry.ELEMENT_Bi = 83;\nChemistry.ELEMENT_Po = 84;\nChemistry.ELEMENT_At = 85;\nChemistry.ELEMENT_Rn = 86;\nChemistry.ELEMENT_Fr = 87;\nChemistry.ELEMENT_Ra = 88;\nChemistry.ELEMENT_Ac = 89;\nChemistry.ELEMENT_Th = 90;\nChemistry.ELEMENT_Pa = 91;\nChemistry.ELEMENT_U = 92;\nChemistry.ELEMENT_Np = 93;\nChemistry.ELEMENT_Pu = 94;\nChemistry.ELEMENT_Am = 95;\nChemistry.ELEMENT_Cm = 96;\nChemistry.ELEMENT_Bk = 97;\nChemistry.ELEMENT_Cf = 98;\nChemistry.ELEMENT_Es = 99;\nChemistry.ELEMENT_Fm = 100;\nChemistry.ELEMENT_Md = 101;\nChemistry.ELEMENT_No = 102;\nChemistry.ELEMENT_Lr = 103;\nChemistry.ELEMENT_Rf = 104;\nChemistry.ELEMENT_Db = 105;\nChemistry.ELEMENT_Sg = 106;\nChemistry.ELEMENT_Bh = 107;\nChemistry.ELEMENT_Hs = 108;\nChemistry.ELEMENT_Mt = 109;\nChemistry.ELEMENT_Ds = 110;\nChemistry.ELEMENT_Rg = 111;\nChemistry.ELEMENT_Cn = 112;\nexport { Chemistry };\n//# sourceMappingURL=Chemistry.js.map","import { Vec } from '../util/Vec';\nexport class Graph {\n    constructor(sz, edge1, edge2) {\n        this.nbrs = [];\n        this.indices = null;\n        this.labels = null;\n        this.props = null;\n        if (sz != null)\n            for (let n = 0; n < sz; n++)\n                this.nbrs.push([]);\n        if (edge1 != null && edge2 != null) {\n            for (let n = 0; n < edge1.length; n++) {\n                this.nbrs[edge1[n]].push(edge2[n]);\n                this.nbrs[edge2[n]].push(edge1[n]);\n            }\n        }\n    }\n    clone() {\n        let g = new Graph();\n        for (let nbr of this.nbrs)\n            g.nbrs.push(nbr.slice(0));\n        g.indices = this.indices == null ? null : this.indices.slice(0);\n        g.labels = this.labels == null ? null : this.labels.slice(0);\n        g.props = this.props == null ? null : this.props.slice(0);\n        return g;\n    }\n    static fromMolecule(mol) {\n        let g = new Graph();\n        g.indices = [];\n        for (let n = 0; n < mol.numAtoms; n++) {\n            g.nbrs.push([]);\n            g.indices.push(n + 1);\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            g.nbrs[bfr].push(bto);\n            g.nbrs[bto].push(bfr);\n        }\n        return g;\n    }\n    static fromMoleculeMask(mol, mask) {\n        let count = Vec.maskCount(mask);\n        let map = Vec.maskMap(mask);\n        let g = new Graph(count);\n        g.indices = Vec.maskIdx(mask);\n        Vec.addTo(g.indices, 1);\n        for (let n = 0; n < count; n++) {\n            let adj = mol.atomAdjList(g.indices[n]);\n            let sz = 0;\n            for (let i = 0; i < adj.length; i++)\n                if (mask[adj[i] - 1])\n                    sz++;\n            g.nbrs[n] = [];\n            for (let i = 0; i < adj.length; i++)\n                if (mask[adj[i] - 1])\n                    g.nbrs[n].push(adj[i] - 1);\n        }\n        return g;\n    }\n    static fromNeighbours(nbrs) {\n        let g = new Graph();\n        g.nbrs = nbrs;\n        return g;\n    }\n    toString() {\n        let buff = '#nodes=' + this.nbrs.length;\n        for (let n = 0; n < this.nbrs.length; n++) {\n            buff += ' ' + n + ':{' + this.nbrs[n] + '}';\n            if (n < Vec.len(this.indices))\n                buff += '[i=' + this.indices[n] + ']';\n            if (n < Vec.len(this.labels))\n                buff += '[l=' + this.labels[n] + ']';\n        }\n        return buff;\n    }\n    get numNodes() { return this.nbrs.length; }\n    numEdges(node) { return this.nbrs[node].length; }\n    getEdge(node, edge) { return this.nbrs[node][edge]; }\n    getEdges(node) { return this.nbrs[node]; }\n    getIndex(node) { return this.indices == null ? 0 : this.indices[node]; }\n    setIndex(node, idx) {\n        if (this.indices == null)\n            this.indices = Vec.numberArray(0, this.nbrs.length);\n        this.indices[node] = idx;\n    }\n    getLabel(node) { return this.labels == null ? null : this.labels[node]; }\n    setLabel(node, lbl) {\n        if (this.labels == null)\n            this.labels = Vec.stringArray('', this.nbrs.length);\n        this.labels[node] = lbl;\n    }\n    getProperty(node) { return this.props == null ? null : this.props[node]; }\n    setProperty(node, prp) {\n        if (this.props == null)\n            this.props = new Array(this.nbrs.length);\n        this.props[node] = prp;\n    }\n    addNode() {\n        this.nbrs.push([]);\n        if (this.indices != null)\n            this.indices.push(0);\n        if (this.labels != null)\n            this.labels.push('');\n        if (this.props != null)\n            this.props.push(null);\n        return this.nbrs.length - 1;\n    }\n    hasEdge(node1, node2) {\n        if (this.nbrs[node1].length <= this.nbrs[node2].length)\n            return this.nbrs[node1].indexOf(node2) >= 0;\n        else\n            return this.nbrs[node2].indexOf(node1) >= 0;\n    }\n    addEdge(node1, node2) {\n        this.nbrs[node1].push(node2);\n        this.nbrs[node2].push(node1);\n    }\n    removeEdge(node1, node2) {\n        let i1 = this.nbrs[node1].indexOf(node2), i2 = this.nbrs[node2].indexOf(node1);\n        if (i1 >= 0)\n            this.nbrs[node1].splice(i1, 1);\n        if (i2 >= 0)\n            this.nbrs[node2].splice(i2, 1);\n    }\n    isolateNode(node) {\n        for (let o of this.nbrs[node]) {\n            let i = this.nbrs[o].indexOf(node);\n            if (i >= 0)\n                this.nbrs[o].splice(i, 1);\n        }\n        this.nbrs[node] = [];\n    }\n    keepNodesMask(mask) {\n        const oldsz = this.nbrs.length, newsz = Vec.maskCount(mask);\n        if (newsz == oldsz)\n            return;\n        if (newsz == 0) {\n            this.nbrs = [];\n            this.indices = null;\n            this.labels = null;\n            this.props = null;\n            return;\n        }\n        let newmap = Vec.maskMap(mask);\n        let newnbrs = [];\n        for (let n = 0; n < newsz; n++)\n            newnbrs.push([]);\n        for (let n = 0, pos = 0; n < oldsz; n++)\n            if (mask[n]) {\n                for (let i of this.nbrs[n])\n                    if (mask[i])\n                        newnbrs[pos].push(newmap[i]);\n                pos++;\n            }\n        this.nbrs = newnbrs;\n        if (this.indices != null)\n            this.indices = Vec.maskGet(this.indices, mask);\n        if (this.labels != null)\n            this.labels = Vec.maskGet(this.labels, mask);\n        if (this.props != null)\n            this.props = Vec.maskGet(this.props, mask);\n    }\n    keepNodesIndex(idx) { this.keepNodesMask(Vec.idxMask(idx, this.numNodes)); }\n    removeNodesMask(mask) { this.keepNodesMask(Vec.notMask(mask)); }\n    removeNodesIndex(idx) { this.removeNodesMask(Vec.idxMask(idx, this.numNodes)); }\n    subgraphIndex(idx) {\n        const nsz = idx.length;\n        let g = new Graph(nsz);\n        if (this.indices != null || this.labels != null || this.props != null)\n            for (let n = 0; n < nsz; n++) {\n                if (this.indices != null)\n                    g.setIndex(n, this.indices[idx[n]]);\n                if (this.labels != null)\n                    g.setLabel(n, this.labels[idx[n]]);\n                if (this.props != null)\n                    g.setProperty(n, this.props[idx[n]]);\n            }\n        for (let i = 0; i < nsz; i++) {\n            for (let n of this.nbrs[idx[i]]) {\n                let j = idx.indexOf(n);\n                if (j > i)\n                    g.addEdge(i, j);\n            }\n        }\n        return g;\n    }\n    subgraphMask(mask) {\n        let g = this.clone();\n        g.keepNodesMask(mask);\n        return g;\n    }\n    calculateComponents() {\n        const sz = this.nbrs.length;\n        if (sz == 0)\n            return [];\n        let cc = Vec.numberArray(0, sz);\n        cc[0] = 1;\n        let first = 1, high = 1;\n        while (true) {\n            while (first < sz && cc[first] > 0) {\n                first++;\n            }\n            if (first >= sz)\n                break;\n            let anything = false;\n            for (let i = first; i < sz; i++)\n                if (cc[i] == 0) {\n                    for (let j = 0; j < this.nbrs[i].length; j++) {\n                        if (cc[this.nbrs[i][j]] != 0) {\n                            cc[i] = cc[this.nbrs[i][j]];\n                            anything = true;\n                        }\n                    }\n                }\n            if (!anything)\n                cc[first] = ++high;\n        }\n        return cc;\n    }\n    calculateComponentGroups() {\n        if (this.nbrs.length == 0)\n            return [];\n        let cc = this.calculateComponents();\n        let sz = Vec.max(cc);\n        let grp = [];\n        for (let n = 0; n < sz; n++)\n            grp.push([]);\n        for (let n = 0; n < cc.length; n++)\n            grp[cc[n] - 1].push(n);\n        return grp;\n    }\n    calculateRingBlocks() {\n        let sz = this.numNodes, nbrs = this.nbrs;\n        if (sz == 0)\n            return [[], 0];\n        let rblk = new Array(this.numNodes);\n        let visited = Vec.booleanArray(false, sz);\n        Vec.setTo(rblk, 0);\n        let path = new Array(sz + 1);\n        let plen = 0, numVisited = 0;\n        while (true) {\n            let last, current;\n            if (plen == 0) {\n                last = -1;\n                for (current = 0; visited[current]; current++) { }\n            }\n            else {\n                last = path[plen - 1];\n                current = -1;\n                for (let n = 0; n < nbrs[last].length; n++)\n                    if (!visited[nbrs[last][n]]) {\n                        current = nbrs[last][n];\n                        break;\n                    }\n            }\n            if (current >= 0 && plen >= 2) {\n                let back = path[plen - 1];\n                for (let n = 0; n < nbrs[current].length; n++) {\n                    let join = nbrs[current][n];\n                    if (join != back && visited[join]) {\n                        path[plen] = current;\n                        for (let i = plen; i == plen || path[i + 1] != join; i--) {\n                            let id = rblk[path[i]];\n                            if (id == 0)\n                                rblk[path[i]] = last;\n                            else if (id != last) {\n                                for (let j = 0; j < sz; j++)\n                                    if (rblk[j] == id)\n                                        rblk[j] = last;\n                            }\n                        }\n                    }\n                }\n            }\n            if (current >= 0) {\n                visited[current] = true;\n                path[plen++] = current;\n                numVisited++;\n            }\n            else {\n                plen--;\n            }\n            if (numVisited == sz)\n                break;\n        }\n        let nextID = 0;\n        for (let i = 0; i < sz; i++)\n            if (rblk[i] > 0) {\n                nextID--;\n                for (let j = sz - 1; j >= i; j--)\n                    if (rblk[j] == rblk[i])\n                        rblk[j] = nextID;\n            }\n        for (let i = 0; i < sz; i++)\n            rblk[i] = -rblk[i];\n        return [rblk, -nextID];\n    }\n    calculateRingBlockGroups() {\n        let [rblk, sz] = this.calculateRingBlocks();\n        if (sz == 0)\n            return [];\n        let cap = Vec.numberArray(0, sz);\n        for (let n = 0; n < rblk.length; n++)\n            if (rblk[n] > 0)\n                cap[rblk[n] - 1]++;\n        let grp = new Array(sz);\n        for (let n = 0; n < sz; n++) {\n            grp[n] = new Array(cap[n]);\n            cap[n] = 0;\n        }\n        for (let n = 0; n < rblk.length; n++) {\n            let i = rblk[n] - 1;\n            if (i < 0)\n                continue;\n            grp[i][cap[i]++] = n;\n        }\n        return grp;\n    }\n    findRingsOfSize(size) {\n        let [rblk, num] = this.calculateRingBlocks();\n        if (num == 0)\n            return [];\n        let rings = [];\n        let mask = new Array(this.numNodes);\n        for (let r = 1; r <= num; r++) {\n            for (let n = 0; n < this.numNodes; n++)\n                mask[n] = rblk[n] == r;\n            let newRings = this.findRingsOfSizeMask(size, mask);\n            for (let n = 0; n < newRings.length; n++)\n                rings.push(newRings[n]);\n        }\n        return rings;\n    }\n    findRingsOfSizeMask(size, mask) {\n        let rings = [];\n        for (let n = 0; n < this.numNodes; n++)\n            if (mask[n]) {\n                let path = new Array(size);\n                path[0] = n;\n                this.recursiveRingFind(path, 1, size, mask, rings);\n            }\n        return rings;\n    }\n    calculateBFS(idx) {\n        let ret = Vec.numberArray(-1, this.numNodes);\n        ret[idx] = 0;\n        let curnum = 0, lsz = 1, watermark = 0;\n        let list = Vec.numberArray(0, this.numNodes);\n        list[0] = idx;\n        while (true) {\n            let newsz = lsz;\n            for (let n = watermark; n < lsz; n++) {\n                for (let i = 0; i < this.nbrs[list[n]].length; i++) {\n                    let j = this.nbrs[list[n]][i];\n                    if (ret[j] < 0) {\n                        ret[j] = curnum + 1;\n                        list[newsz++] = j;\n                    }\n                }\n            }\n            if (newsz == lsz)\n                break;\n            watermark = lsz;\n            lsz = newsz;\n            curnum++;\n        }\n        return ret;\n    }\n    calculateGravity() {\n        const sz = this.numNodes;\n        const { nbrs } = this;\n        let wght = Vec.numberArray(1, sz), wmod = Vec.numberArray(0, sz);\n        for (let n = 0; n < sz; n++) {\n            Vec.setTo(wmod, wght);\n            for (let i = 0; i < sz; i++)\n                for (let j = nbrs[i].length - 1; j >= 0; j--)\n                    wmod[i] += wght[nbrs[i][j]];\n            Vec.setTo(wght, wmod);\n        }\n        return wght;\n    }\n    recursiveRingFind(path, psize, capacity, mask, rings) {\n        if (psize < capacity) {\n            let last = path[psize - 1];\n            for (let n = 0; n < this.nbrs[last].length; n++) {\n                let adj = this.nbrs[last][n];\n                if (!mask[adj])\n                    continue;\n                let fnd = false;\n                for (let i = 0; i < psize; i++)\n                    if (path[i] == adj) {\n                        fnd = true;\n                        break;\n                    }\n                if (!fnd) {\n                    let newPath = Vec.duplicate(path);\n                    newPath[psize] = adj;\n                    this.recursiveRingFind(newPath, psize + 1, capacity, mask, rings);\n                }\n            }\n            return;\n        }\n        let last = path[psize - 1];\n        let fnd = false;\n        for (let n = 0; n < this.nbrs[last].length; n++)\n            if (this.nbrs[last][n] == path[0]) {\n                fnd = true;\n                break;\n            }\n        if (!fnd)\n            return;\n        for (let n = 0; n < path.length; n++) {\n            let count = 0, p = path[n];\n            for (let i = 0; i < this.nbrs[p].length; i++)\n                if (path.indexOf(this.nbrs[p][i]) >= 0)\n                    count++;\n            if (count != 2)\n                return;\n        }\n        let first = 0;\n        for (let n = 1; n < psize; n++)\n            if (path[n] < path[first])\n                first = n;\n        let fm = (first - 1 + psize) % psize, fp = (first + 1) % psize;\n        let flip = path[fm] < path[fp];\n        if (first != 0 || flip) {\n            let newPath = new Array(psize);\n            for (let n = 0; n < psize; n++)\n                newPath[n] = path[(first + (flip ? psize - n : n)) % psize];\n            path = newPath;\n        }\n        for (let n = 0; n < rings.length; n++) {\n            let look = rings[n];\n            let same = true;\n            for (let i = 0; i < psize; i++)\n                if (look[i] != path[i]) {\n                    same = false;\n                    break;\n                }\n            if (same)\n                return;\n        }\n        rings.push(path);\n    }\n}\n//# sourceMappingURL=Graph.js.map","import { Chemistry } from '../mol/Chemistry';\nimport { Graph } from '../mol/Graph';\nimport { Molecule } from '../mol/Molecule';\nimport { Vec } from '../util/Vec';\nexport class ResonanceRemover {\n    constructor(mol, resBonds, atomHyd = []) {\n        this.mol = mol;\n        this.resBonds = resBonds;\n        this.atomHyd = atomHyd;\n        this.maxIter = 1000;\n        this.bondOrders = [];\n        this.tolerant = false;\n        this.mol = mol;\n        this.resBonds = resBonds;\n        this.atomHyd = atomHyd;\n        for (let n = 1; n <= mol.numBonds; n++)\n            this.bondOrders.push(mol.bondOrder(n));\n    }\n    perform() {\n        const { mol } = this;\n        if (this.atomHyd == null) {\n            this.atomHyd = [];\n            for (let n = 1; n <= mol.numAtoms; n++)\n                this.atomHyd.push(mol.atomHExplicit(n));\n        }\n        this.correctInputMask();\n        let g = new Graph(mol.numAtoms);\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.resBonds[n - 1])\n                g.addEdge(mol.bondFrom(n) - 1, mol.bondTo(n) - 1);\n        let cc = g.calculateComponentGroups();\n        for (let n = 0; n < cc.length; n++)\n            if (cc[n].length >= 2)\n                this.processComponent(cc[n]);\n    }\n    correctInputMask() {\n        const { mol, atomHyd } = this;\n        const na = mol.numAtoms, nb = mol.numBonds;\n        let exclude = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++) {\n            let atno = mol.atomicNumber(n);\n            let val = atno == Chemistry.ELEMENT_C ? 4 :\n                atno == Chemistry.ELEMENT_N || atno == Chemistry.ELEMENT_P || atno == Chemistry.ELEMENT_B ? 3 :\n                    atno == Chemistry.ELEMENT_O || atno == Chemistry.ELEMENT_S ? 2 : -1;\n            if (val < 0) {\n                exclude[n - 1] = true;\n                continue;\n            }\n            val += mol.atomCharge(n);\n            if (atomHyd[n - 1] > 0)\n                val -= atomHyd[n - 1];\n            if (mol.atomAdjCount(n) >= val)\n                exclude[n - 1] = true;\n        }\n        for (let n = 1; n <= nb; n++)\n            if (!this.resBonds[n - 1] && mol.bondOrder(n) != 1) {\n                exclude[mol.bondFrom(n) - 1] = true;\n                exclude[mol.bondTo(n) - 1] = true;\n            }\n        this.resBonds = this.resBonds.slice(0);\n        for (let n = 0; n < nb; n++)\n            if (this.resBonds[n] && (exclude[mol.bondFrom(n + 1) - 1] || exclude[mol.bondTo(n + 1) - 1])) {\n                this.bondOrders[n] = 1;\n                this.resBonds[n] = false;\n            }\n    }\n    processComponent(nodes) {\n        const { mol, resBonds, bondOrders, atomHyd } = this;\n        let sz = nodes.length;\n        if (sz == 2) {\n            let b = mol.findBond(nodes[0] + 1, nodes[1] + 1);\n            bondOrders[b - 1] = 2;\n            return;\n        }\n        let optionalH = Vec.booleanArray(false, sz);\n        for (let n = 0; n < sz; n++) {\n            let i = nodes[n], a = i + 1;\n            optionalH[n] = atomHyd[i] == Molecule.HEXPLICIT_UNKNOWN && mol.atomElement(a) == 'N' && mol.atomAdjCount(a) - mol.atomCharge(a) <= 2;\n        }\n        let g = new Graph(sz);\n        let gravity = g.calculateGravity();\n        let mask = Vec.idxMask(nodes, mol.numAtoms);\n        let bsz = 0;\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (resBonds[n - 1] && mask[mol.bondFrom(n) - 1] && mask[mol.bondTo(n) - 1])\n                bsz++;\n        let bfr = Vec.numberArray(0, bsz), bto = Vec.numberArray(0, bsz), bgrav = Vec.numberArray(0, bsz), bidx = Vec.numberArray(0, bsz);\n        bsz = 0;\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (resBonds[n - 1] && mask[mol.bondFrom(n) - 1] && mask[mol.bondTo(n) - 1]) {\n                let f = nodes.indexOf(mol.bondFrom(n) - 1), t = nodes.indexOf(mol.bondTo(n) - 1);\n                bfr[bsz] = f;\n                bto[bsz] = t;\n                bgrav[bsz] = gravity[f] + gravity[t];\n                bidx[bsz] = n;\n                g.addEdge(f, t);\n                bsz++;\n            }\n        let seq = Vec.numberArray(0, bsz);\n        seq[0] = Vec.idxMax(bgrav);\n        let visited = Vec.booleanArray(false, bsz);\n        visited[seq[0]] = true;\n        for (let i = 1; i < bsz; i++) {\n            let b = -1;\n            for (let j = i - 1; j >= 0; j--) {\n                for (let n = 0; n < bsz; n++) {\n                    if (!visited[n])\n                        if (bfr[n] == bfr[seq[j]] || bfr[n] == bto[seq[j]] || bto[n] == bfr[seq[j]] || bto[n] == bto[seq[j]]) {\n                            if (b < 0 || bgrav[n] > bgrav[b])\n                                b = n;\n                        }\n                }\n                if (b >= 0)\n                    break;\n            }\n            if (b < 0)\n                throw 'Graph walk failed';\n            seq[i] = b;\n            visited[b] = true;\n        }\n        let paths = [];\n        paths.push([true]);\n        paths.push([false]);\n        let result = null;\n        let resultCount = 0;\n        let definiteMatch = Math.ceil(0.5 * bsz);\n        let iter = 0;\n        while (paths.length > 0) {\n            let p = paths[0];\n            let p1 = Vec.append(p, false), p2 = Vec.append(p, true);\n            if (!this.validPath(p1, seq, bfr, bto, g, optionalH))\n                p1 = null;\n            if (!this.validPath(p2, seq, bfr, bto, g, optionalH))\n                p2 = null;\n            if (Vec.len(p1) == bsz) {\n                let c = Vec.maskCount(p1);\n                if (c > resultCount) {\n                    result = p1;\n                    resultCount = c;\n                }\n                p1 = null;\n            }\n            if (Vec.len(p2) == bsz) {\n                let c = Vec.maskCount(p2);\n                if (c > resultCount) {\n                    result = p2;\n                    resultCount = c;\n                }\n                p2 = null;\n            }\n            if (resultCount >= definiteMatch)\n                break;\n            if (p1 == null && p2 == null)\n                paths.shift();\n            else if (p1 != null && p2 != null) {\n                paths[0] = p1;\n                paths.splice(1, 0, p2);\n            }\n            else if (p1 != null)\n                paths[0] = p1;\n            else\n                paths[0] = p2;\n            iter++;\n            if (iter > this.maxIter) {\n                if (result != null)\n                    break;\n                if (this.tolerant)\n                    return;\n                throw 'Resonance localisation exceeded maximum iteration count';\n            }\n        }\n        if (result == null) {\n            if (this.tolerant)\n                return;\n            throw 'Unable to find a solution to the resonance block.';\n        }\n        for (let n = 0; n < bsz; n++)\n            bondOrders[bidx[seq[n]] - 1] = result[n] ? 2 : 1;\n    }\n    validPath(path, seq, bfr, bto, g, optionalH) {\n        let sz = g.numNodes;\n        let count1 = Vec.numberArray(0, sz), count2 = Vec.numberArray(0, sz);\n        for (let n = 0; n < path.length; n++) {\n            let a1 = bfr[seq[n]], a2 = bto[seq[n]];\n            if (path[n]) {\n                count2[a1]++;\n                count2[a2]++;\n            }\n            else {\n                count1[a1]++;\n                count1[a2]++;\n            }\n        }\n        for (let n = 0; n < sz; n++) {\n            if (count2[n] > 1)\n                return false;\n            if (!optionalH[n] && g.numEdges(n) > 1 && count1[n] == g.numEdges(n))\n                return false;\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=ResonanceRemover.js.map","import { safeInt } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Graph } from './Graph';\nexport const BONDARTIFACT_EXTRA_RESPATH = 'xRESPATH:';\nexport const BONDARTIFACT_EXTRA_RESRING = 'xRESRING:';\nexport const BONDARTIFACT_EXTRA_ARENE = 'xARENE:';\nexport class BondArtifact {\n    constructor(mol) {\n        this.mol = mol;\n        this.resPaths = new Map();\n        this.resRings = new Map();\n        this.arenes = new Map();\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            for (let str of this.mol.atomExtra(n)) {\n                if (str.startsWith(BONDARTIFACT_EXTRA_RESPATH))\n                    this.appendResPath(n, str.substring(BONDARTIFACT_EXTRA_RESPATH.length).split(':'));\n                else if (str.startsWith(BONDARTIFACT_EXTRA_RESRING))\n                    this.appendResRing(n, str.substring(BONDARTIFACT_EXTRA_RESRING.length).split(':'));\n                else if (str.startsWith(BONDARTIFACT_EXTRA_ARENE))\n                    this.appendArene(n, str.substring(BONDARTIFACT_EXTRA_ARENE.length).split(':'));\n            }\n        }\n        for (let [blk, res] of this.resPaths.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (!this.pathify(res.atoms, false))\n                this.resPaths.delete(blk);\n        }\n        for (let [blk, res] of this.resRings.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (!this.pathify(res.atoms, true))\n                this.resRings.delete(blk);\n        }\n        for (let [blk, res] of this.arenes.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (res.atoms.length > 1)\n                res.centre = res.atoms.shift();\n            if (!this.pathify(res.atoms, false))\n                this.arenes.delete(blk);\n        }\n    }\n    getPathBlocks() { return Array.from(this.resPaths.keys()); }\n    getRingBlocks() { return Array.from(this.resRings.keys()); }\n    getAreneBlocks() { return Array.from(this.arenes.keys()); }\n    getResPaths() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.resPaths.keys())))\n            list.push(this.resPaths.get(key));\n        return list;\n    }\n    getResRings() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.resRings.keys())))\n            list.push(this.resRings.get(key));\n        return list;\n    }\n    getArenes() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.arenes.keys())))\n            list.push(this.arenes.get(key));\n        return list;\n    }\n    rewriteMolecule() {\n        const mol = this.mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n), modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (extra[i].startsWith(BONDARTIFACT_EXTRA_RESPATH) || extra[i].startsWith(BONDARTIFACT_EXTRA_RESRING) || extra[i].startsWith(BONDARTIFACT_EXTRA_ARENE)) {\n                    extra.splice(i);\n                    modified = true;\n                }\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n        for (let [blk, path] of this.resPaths.entries()) {\n            for (let n = 0; n < path.atoms.length; n++) {\n                let extra = mol.atomExtra(path.atoms[n]);\n                extra.push(BONDARTIFACT_EXTRA_RESPATH + blk + ':' + (n + 1));\n                mol.setAtomExtra(path.atoms[n], extra);\n            }\n        }\n        for (let [blk, ring] of this.resRings.entries()) {\n            for (let n = 0; n < ring.atoms.length; n++) {\n                let extra = mol.atomExtra(ring.atoms[n]);\n                extra.push(BONDARTIFACT_EXTRA_RESRING + blk + ':' + (n + 1));\n                mol.setAtomExtra(ring.atoms[n], extra);\n            }\n        }\n        for (let [blk, arene] of this.arenes.entries()) {\n            for (let n = -1; n < arene.atoms.length; n++) {\n                let atom = n < 0 ? arene.centre : arene.atoms[n];\n                let extra = mol.atomExtra(atom);\n                extra.push(BONDARTIFACT_EXTRA_ARENE + blk + ':' + (n + 2));\n                mol.setAtomExtra(atom, extra);\n            }\n        }\n    }\n    harmoniseNumbering(other) {\n        let blocks = other.getPathBlocks();\n        let stashPaths = this.getResPaths();\n        this.resPaths.clear();\n        for (let path of stashPaths) {\n            let blk = this.nextIdentifier(blocks);\n            this.resPaths.set(blk, path);\n            blocks.push(blk);\n        }\n        blocks = other.getRingBlocks();\n        let stashRings = this.getResRings();\n        this.resRings.clear();\n        for (let ring of stashRings) {\n            let blk = this.nextIdentifier(blocks);\n            this.resRings.set(blk, ring);\n            blocks.push(blk);\n        }\n        blocks = other.getAreneBlocks();\n        let stashArenes = this.getArenes();\n        this.arenes.clear();\n        for (let arene of stashArenes) {\n            let blk = this.nextIdentifier(blocks);\n            this.arenes.set(blk, arene);\n            blocks.push(blk);\n        }\n    }\n    createPath(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let path = this.atomsAsPath(atoms);\n        if (path) {\n            let id = this.nextIdentifier(Array.from(this.resPaths.keys()));\n            this.resPaths.set(id, path);\n            return true;\n        }\n        return false;\n    }\n    createRing(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let ring = this.atomsAsRing(atoms);\n        if (ring) {\n            let id = this.nextIdentifier(Array.from(this.resRings.keys()));\n            this.resRings.set(id, ring);\n            return true;\n        }\n        return false;\n    }\n    createArene(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let arene = this.atomsAsArene(atoms);\n        if (arene) {\n            let id = this.nextIdentifier(Array.from(this.arenes.keys()));\n            this.arenes.set(id, arene);\n            return true;\n        }\n        return false;\n    }\n    removeArtifact(atoms) {\n        let type = 0, pick = 0, overlap = 0;\n        for (let [blk, path] of this.resPaths.entries()) {\n            let count = 0;\n            for (let a of path.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 1;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        for (let [blk, ring] of this.resRings.entries()) {\n            let count = 0;\n            for (let a of ring.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 2;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        for (let [blk, arene] of this.arenes.entries()) {\n            let count = atoms.indexOf(arene.centre) >= 0 ? 1 : 0;\n            for (let a of arene.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 3;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        if (type == 0)\n            return false;\n        else if (type == 1)\n            this.resPaths.delete(pick);\n        else if (type == 2)\n            this.resRings.delete(pick);\n        else if (type == 3)\n            this.arenes.delete(pick);\n        return true;\n    }\n    static removeAll(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (!extra[i].startsWith(BONDARTIFACT_EXTRA_RESPATH) && !extra[i].startsWith(BONDARTIFACT_EXTRA_RESRING) &&\n                    !extra[i].startsWith(BONDARTIFACT_EXTRA_ARENE))\n                    continue;\n                extra = Vec.remove(extra, i);\n                modified = true;\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n    }\n    appendResPath(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.resPaths.get(blk);\n        if (res == null)\n            this.resPaths.set(blk, res = { atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    appendResRing(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.resRings.get(blk);\n        if (res == null)\n            this.resRings.set(blk, res = { atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    appendArene(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.arenes.get(blk);\n        if (res == null)\n            this.arenes.set(blk, res = { centre: 0, atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    pack(arr) {\n        let ret = [];\n        for (let v of arr)\n            if (v != 0)\n                ret.push(v);\n        return ret;\n    }\n    pathify(atoms, requireRing) {\n        let sz = atoms.length;\n        if (sz < 2)\n            return false;\n        let g = Graph.fromMolecule(this.mol);\n        for (let n = 0; n < this.mol.numAtoms; n++)\n            g.setIndex(n, n + 1);\n        g = g.subgraphIndex(Vec.add(atoms, -1));\n        let pos = 0;\n        for (let n = 1; n < sz; n++)\n            if (g.numEdges(n) < g.numEdges(pos))\n                pos = n;\n        Vec.setTo(atoms, -1);\n        for (let n = 0; n < sz; n++) {\n            atoms[n] = pos;\n            if (n == sz - 1) {\n                if (requireRing)\n                    if (g.getEdges(pos).indexOf(atoms[0]) < 0)\n                        return false;\n            }\n            else {\n                let next = sz;\n                for (let i of g.getEdges(pos))\n                    if (atoms.indexOf(i) < 0 && i < next)\n                        next = i;\n                if (next == sz)\n                    return false;\n                pos = next;\n            }\n        }\n        for (let n = 0; n < sz; n++)\n            atoms[n] = g.getIndex(atoms[n]);\n        return true;\n    }\n    alreadyExists(atoms) {\n        atoms = Vec.sorted(atoms);\n        for (let path of this.resPaths.values()) {\n            if (Vec.equals(atoms, Vec.sorted(path.atoms)))\n                return true;\n        }\n        for (let ring of this.resRings.values()) {\n            if (Vec.equals(atoms, Vec.sorted(ring.atoms)))\n                return true;\n        }\n        for (let arene of this.arenes.values()) {\n            let areneAtoms = Vec.append(arene.atoms, arene.centre);\n            if (Vec.equals(atoms, Vec.sorted(areneAtoms)))\n                return true;\n        }\n        return false;\n    }\n    atomsAsPath(atoms) {\n        if (atoms.length < 2)\n            return null;\n        let path = { atoms: atoms };\n        if (!this.pathify(path.atoms, false))\n            return null;\n        return path;\n    }\n    atomsAsRing(atoms) {\n        if (atoms.length < 3)\n            return null;\n        let ring = { atoms: atoms };\n        if (!this.pathify(ring.atoms, true))\n            return null;\n        return ring;\n    }\n    atomsAsArene(atoms) {\n        const sz = atoms.length;\n        if (sz < 3)\n            return null;\n        let g = Graph.fromMolecule(this.mol).subgraphIndex(Vec.add(atoms, -1));\n        let best = 0;\n        if (sz == 3) {\n            let bsum = [0, 0, 0];\n            for (let n = 0; n < sz; n++) {\n                if (g.numEdges(n) != 2)\n                    return null;\n                for (let e of g.getEdges(n))\n                    bsum[n] += this.mol.bondOrder(this.mol.findBond(atoms[n], atoms[e]));\n                best = Vec.idxMin(bsum);\n            }\n        }\n        else {\n            for (let n = 1; n < sz; n++)\n                if (g.numEdges(n) > g.numEdges(best))\n                    best = n;\n        }\n        let arene = { centre: atoms[best], atoms: Vec.remove(atoms, best) };\n        if (!this.pathify(arene.atoms, false))\n            return null;\n        return arene;\n    }\n    nextIdentifier(inkeys) {\n        if (inkeys.length == 0)\n            return 1;\n        let keys = Vec.sorted(inkeys);\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=BondArtifact.js.map","import { deepClone, safeFloat, safeInt } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Molecule } from '../mol/Molecule';\nexport var DataSheetColumn;\n(function (DataSheetColumn) {\n    DataSheetColumn[\"Molecule\"] = \"molecule\";\n    DataSheetColumn[\"String\"] = \"string\";\n    DataSheetColumn[\"Real\"] = \"real\";\n    DataSheetColumn[\"Integer\"] = \"integer\";\n    DataSheetColumn[\"Boolean\"] = \"boolean\";\n    DataSheetColumn[\"Extend\"] = \"extend\";\n})(DataSheetColumn || (DataSheetColumn = {}));\nexport class DataSheet {\n    constructor(data) {\n        if (!data)\n            data = {};\n        if (!data.title)\n            data.title = '';\n        if (!data.description)\n            data.description = '';\n        if (data.numCols == null)\n            data.numCols = Vec.len(data.colData);\n        if (data.numRows == null)\n            data.numRows = Vec.len(data.rowData);\n        if (data.numExtens == null)\n            data.numExtens = Vec.len(data.extData);\n        if (data.colData == null)\n            data.colData = [];\n        if (data.rowData == null)\n            data.rowData = [];\n        if (data.extData == null)\n            data.extData = [];\n        this.data = data;\n    }\n    clone(withRows = true) {\n        let { numCols, numRows, colData, rowData } = this.data;\n        let data = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: numCols,\n            numRows: withRows ? numRows : 0,\n            numExtens: this.data.numExtens,\n            colData: deepClone(colData),\n            rowData: withRows ? new Array(numRows) : [],\n            extData: deepClone(this.data.extData),\n        };\n        if (withRows)\n            for (let r = 0; r < numRows; r++) {\n                let inRow = rowData[r], outRow = new Array(numCols);\n                for (let c = 0; c < numCols; c++) {\n                    if (inRow[c] != null && colData[c].type == \"molecule\" && inRow[c] instanceof Molecule)\n                        outRow[c] = inRow[c].clone();\n                    else\n                        outRow[c] = inRow[c];\n                }\n                data.rowData[r] = outRow;\n            }\n        return new DataSheet(data);\n    }\n    cloneMask(colMask, rowMask = null, inclExtn = true) {\n        let { numCols, numRows, colData, rowData } = this.data;\n        let data = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: Vec.maskCount(colMask),\n            numRows: rowMask ? Vec.maskCount(rowMask) : 0,\n            numExtens: inclExtn ? this.data.numExtens : 0,\n            colData: deepClone(Vec.maskGet(colData, colMask)),\n            rowData: [],\n            extData: inclExtn ? deepClone(this.data.extData) : [],\n        };\n        if (rowMask)\n            for (let r = 0; r < numRows; r++)\n                if (rowMask[r]) {\n                    let inRow = rowData[r], outRow = Vec.maskGet(inRow, colMask);\n                    data.rowData.push(outRow);\n                }\n        const { colData: outCols, rowData: outRows } = data;\n        for (let c = outCols.length - 1; c >= 0; c--)\n            if (outCols[c].type == \"molecule\") {\n                for (let r = outRows.length - 1; r >= 0; r--)\n                    if (outRows[r][c] != null && outRows[r][c] instanceof Molecule)\n                        outRows[r][c] = outRows[r][c].clone();\n            }\n        return new DataSheet(data);\n    }\n    getData() {\n        return this.data;\n    }\n    get numCols() {\n        return this.data.numCols;\n    }\n    get numRows() {\n        return this.data.numRows;\n    }\n    get title() { return this.data.title; }\n    set title(title) { this.data.title = title; }\n    get description() { return this.data.description; }\n    set description(description) { this.data.description = description; }\n    get numExtensions() {\n        return this.data.numExtens;\n    }\n    getExtName(idx) {\n        return this.data.extData[idx].name;\n    }\n    getExtType(idx) {\n        return this.data.extData[idx].type;\n    }\n    getExtData(idx) {\n        return this.data.extData[idx].data;\n    }\n    setExtName(idx, val) {\n        this.data.extData[idx].name = val;\n    }\n    setExtType(idx, val) {\n        this.data.extData[idx].type = val;\n    }\n    setExtData(idx, val) {\n        this.data.extData[idx].data = val;\n    }\n    appendExtension(name, type, data) {\n        this.data.numExtens++;\n        this.data.extData.push({ name, type, data });\n        return this.data.numExtens - 1;\n    }\n    insertExtension(idx, name, type, data) {\n        this.data.numExtens++;\n        this.data.extData.splice(idx, 0, { name, type, data });\n    }\n    deleteExtension(idx) {\n        this.data.extData.splice(idx, 1);\n        this.data.numExtens--;\n    }\n    colName(col) {\n        return this.data.colData[col].name;\n    }\n    colType(col) {\n        return this.data.colData[col].type;\n    }\n    colDescr(col) {\n        return this.data.colData[col].descr;\n    }\n    isNull(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col] == null;\n    }\n    notNull(row, col) {\n        return !this.isNull(row, col);\n    }\n    isBlank(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col))\n            return true;\n        let ct = this.colType(col);\n        if (ct == \"molecule\")\n            return this.getMolecule(row, col).numAtoms == 0;\n        if (ct == \"string\")\n            return this.getString(row, col).length == 0;\n        if (ct == \"extend\")\n            return this.getExtend(row, col).length == 0;\n        return false;\n    }\n    notBlank(row, col) {\n        return !this.isBlank(row, col);\n    }\n    getObject(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        return this.data.rowData[row][col];\n    }\n    getMolecule(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        let datum = this.data.rowData[row][col];\n        if (datum == null)\n            return null;\n        if (typeof datum === 'string') {\n            datum = Molecule.fromString(datum);\n            this.data.rowData[row][col] = datum;\n        }\n        return datum;\n    }\n    getMoleculeClone(row, col) {\n        let mol = this.getMolecule(row, col);\n        return mol == null ? null : mol.clone();\n    }\n    getMoleculeBlank(row, col) {\n        let mol = this.getMolecule(row, col);\n        return mol ? mol : new Molecule();\n    }\n    getString(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        let str = this.data.rowData[row][col];\n        return str == null ? '' : str;\n    }\n    getInteger(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getReal(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getBoolean(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getExtend(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    setToNull(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = null;\n    }\n    setObject(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setMolecule(row, col, mol) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = mol ? mol.clone() : null;\n    }\n    setString(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setInteger(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setReal(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setBoolean(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setExtend(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    isEqualMolecule(row, col, mol) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (mol == null))\n            return false;\n        if (mol == null)\n            return true;\n        return this.getMolecule(row, col).compareTo(mol) == 0;\n    }\n    isEqualString(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null || val == ''))\n            return false;\n        if (val == null || val == '')\n            return true;\n        return this.getString(row, col) == val;\n    }\n    isEqualInteger(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getInteger(row, col) == val;\n    }\n    isEqualReal(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getReal(row, col) == val;\n    }\n    isEqualBoolean(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getBoolean(row, col) == val;\n    }\n    appendColumn(name, type, descr) {\n        this.data.numCols++;\n        this.data.colData.push({ name, type, descr });\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].push(null);\n        return this.data.numCols - 1;\n    }\n    insertColumn(col, name, type, descr) {\n        this.data.numCols++;\n        this.data.colData.splice(col, 0, { name, type, descr });\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].splice(col, 0, null);\n    }\n    deleteColumn(col) {\n        this.data.numCols--;\n        this.data.colData.splice(col, 1);\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].splice(col, 1);\n    }\n    changeColumnName(col, name, descr) {\n        this.data.colData[col].name = name;\n        this.data.colData[col].descr = descr;\n    }\n    changeColumnType(col, newType) {\n        let oldType = this.colType(col);\n        if (oldType == newType)\n            return;\n        let incompatible = oldType == \"molecule\" || newType == \"molecule\" ||\n            oldType == \"extend\" || newType == \"extend\";\n        for (let n = this.data.rowData.length - 1; n >= 0; n--) {\n            let row = this.data.rowData[n];\n            if (row[col] == null)\n                continue;\n            if (incompatible) {\n                row[col] = null;\n                continue;\n            }\n            let val = '';\n            if (oldType == \"string\")\n                val = row[col];\n            else if (oldType == \"integer\")\n                val = row[col].toString();\n            else if (oldType == \"real\")\n                val = row[col].toString();\n            else if (oldType == \"boolean\")\n                val = row[col] ? 'true' : 'false';\n            row[col] = null;\n            if (newType == \"string\")\n                row[col] = val;\n            else if (newType == \"integer\") {\n                let num = parseInt(val);\n                row[col] = isFinite(num) ? num : null;\n            }\n            else if (newType == \"real\") {\n                let num = parseFloat(val);\n                row[col] = isFinite(num) ? num : null;\n            }\n            else if (newType == \"boolean\")\n                row[col] = val.toLowerCase() == 'true' ? true : false;\n        }\n        this.data.colData[col].type = newType;\n    }\n    ensureColumn(name, type, descr) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].name == name) {\n                if (this.data.colData[n].type != type)\n                    this.changeColumnType(n, type);\n                this.data.colData[n].descr = descr;\n                return n;\n            }\n        return this.appendColumn(name, type, descr);\n    }\n    reorderColumns(order) {\n        let identity = true;\n        for (let n = 0; n < order.length - 1; n++)\n            if (order[n] != order[n + 1] - 1) {\n                identity = false;\n                break;\n            }\n        if (identity)\n            return;\n        this.data.colData = Vec.idxGet(this.data.colData, order);\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n] = Vec.idxGet(this.data.rowData[n], order);\n    }\n    appendRow() {\n        this.data.numRows++;\n        let row = new Array();\n        for (let n = 0; n < this.data.numCols; n++)\n            row.push(null);\n        this.data.rowData.push(row);\n        return this.data.numRows - 1;\n    }\n    appendRowFrom(srcDS, row) {\n        this.data.numRows++;\n        this.data.rowData.push(srcDS.data.rowData[row].slice(0));\n        return this.data.numRows - 1;\n    }\n    insertRow(row) {\n        this.data.numRows++;\n        let data = new Array();\n        for (let n = 0; n < this.data.numCols; n++)\n            data.push(null);\n        this.data.rowData.splice(row, 0, data);\n    }\n    deleteRow(row) {\n        this.data.numRows--;\n        this.data.rowData.splice(row, 1);\n    }\n    deleteAllRows() {\n        this.data.numRows = 0;\n        this.data.rowData = new Array();\n    }\n    moveRowUp(row) {\n        let data = this.data.rowData[row];\n        this.data.rowData[row] = this.data.rowData[row - 1];\n        this.data.rowData[row - 1] = data;\n    }\n    moveRowDown(row) {\n        let data = this.data.rowData[row];\n        this.data.rowData[row] = this.data.rowData[row + 1];\n        this.data.rowData[row + 1] = data;\n    }\n    swapRows(row1, row2) {\n        Vec.swap(this.data.rowData, row1, row2);\n    }\n    exciseSingleRow(row) {\n        let newData = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: this.data.numCols,\n            numRows: 1,\n            numExtens: this.data.numExtens,\n            colData: this.data.colData.slice(0),\n            rowData: [this.data.rowData[row].slice(0)],\n            extData: this.data.extData.slice(0)\n        };\n        return new DataSheet(newData);\n    }\n    colIsPrimitive(col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        let ct = this.data.colData[col].type;\n        return ct == 'string' || ct == 'real' || ct == 'integer' || ct == 'boolean';\n    }\n    findColByName(name, type) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].name == name) {\n                if (type == null || this.data.colData[n].type == type)\n                    return n;\n            }\n        return -1;\n    }\n    firstColOfType(type) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].type == type)\n                return n;\n        return -1;\n    }\n    copyCell(toRow, toCol, fromDS, fromRow, fromCol) {\n        this.setToNull(toRow, toCol);\n        if (fromDS.isNull(fromRow, fromCol))\n            return;\n        let obj = fromDS.getObject(fromRow, fromCol);\n        this.setObject(toRow, toCol, DataSheet.convertType(obj, fromDS.colType(fromCol), this.colType(toCol)));\n    }\n    static convertType(obj, fromType, toType) {\n        const ft = fromType, tt = toType;\n        if (obj == null || ft == tt || (typeof obj == 'string' && obj == ''))\n            return obj;\n        if (tt == \"string\") {\n            if (ft == \"integer\")\n                return obj.toString();\n            else if (ft == \"real\")\n                return obj.toString();\n            else if (ft == \"boolean\")\n                return obj ? 'true' : 'false';\n        }\n        else if (tt == \"real\") {\n            if (ft == \"string\")\n                return safeFloat(obj, null);\n            else if (ft == \"integer\")\n                return obj;\n            else if (ft == \"boolean\")\n                return obj ? 1 : 0;\n        }\n        else if (tt == \"integer\") {\n            if (ft == \"string\")\n                return safeInt(obj, null);\n            else if (ft == \"real\")\n                return Math.round(obj);\n            else if (ft == \"boolean\")\n                return obj ? 1 : 0;\n        }\n        else if (tt == \"boolean\") {\n            if (ft == \"string\")\n                return obj.toLowerCase() == 'true';\n            else if (ft == \"integer\")\n                return obj > 0;\n            else if (ft == \"real\")\n                return obj >= 0.5;\n        }\n        return null;\n    }\n    toString(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : obj.toString();\n    }\n    toInt(row, col) {\n        if (!this.colIsPrimitive(col))\n            return null;\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : parseInt(obj);\n    }\n    toReal(row, col) {\n        if (!this.colIsPrimitive(col))\n            return null;\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : parseFloat(obj);\n    }\n}\n//# sourceMappingURL=DataSheet.js.map","import { Vec } from '../util/Vec';\nexport var ForeignMoleculeTransient;\n(function (ForeignMoleculeTransient) {\n    ForeignMoleculeTransient[\"AtomAromatic\"] = \"yAROMATIC\";\n    ForeignMoleculeTransient[\"BondAromatic\"] = \"yAROMATIC\";\n    ForeignMoleculeTransient[\"BondZeroDative\"] = \"yZERO_DATIVE\";\n    ForeignMoleculeTransient[\"BondZeroHydrogen\"] = \"yZERO_HYDROGEN\";\n    ForeignMoleculeTransient[\"AtomChiralMDLOdd\"] = \"yCHIRAL_MDL_ODD\";\n    ForeignMoleculeTransient[\"AtomChiralMDLEven\"] = \"yCHIRAL_MDL_EVEN\";\n    ForeignMoleculeTransient[\"AtomChiralMDLRacemic\"] = \"yCHIRAL_MDL_RACEMIC\";\n    ForeignMoleculeTransient[\"AtomExplicitValence\"] = \"yMDL_EXPLICIT_VALENCE\";\n    ForeignMoleculeTransient[\"AtomSgroupMultiAttach\"] = \"yMDL_SGROUP_MULTIATTACH\";\n    ForeignMoleculeTransient[\"AtomSgroupMultiRepeat\"] = \"yMDL_SGROUP_MULTIREPEAT\";\n    ForeignMoleculeTransient[\"AtomSgroupData\"] = \"yMDL_SGROUP_DATA\";\n    ForeignMoleculeTransient[\"AtomSCSRClass\"] = \"yMDL_SCSR_CLASS\";\n    ForeignMoleculeTransient[\"AtomSCSRSeqID\"] = \"yMDL_SCSR_SEQID\";\n    ForeignMoleculeTransient[\"AtomSCSRAttchOrd\"] = \"yMDL_SCSR_ATTCHORD\";\n})(ForeignMoleculeTransient || (ForeignMoleculeTransient = {}));\nexport class ForeignMolecule {\n    static noteAromaticAtoms(mol) {\n        const sz = mol.numAtoms;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.atomTransient(n).indexOf(ForeignMoleculeTransient.AtomAromatic) >= 0;\n        return mask;\n    }\n    static noteAromaticBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).indexOf(ForeignMoleculeTransient.BondAromatic) >= 0;\n        return mask;\n    }\n    static noteZeroDativeBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).includes(ForeignMoleculeTransient.BondZeroDative);\n        return mask;\n    }\n    static noteZeroHydrogenBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).includes(ForeignMoleculeTransient.BondZeroHydrogen);\n        return mask;\n    }\n    static markExplicitValence(mol, atom, valence) {\n        let trans = mol.atomTransient(atom).filter((tr) => !tr.startsWith(ForeignMoleculeTransient.AtomExplicitValence + ':'));\n        trans.push(`${ForeignMoleculeTransient.AtomExplicitValence}:${valence}`);\n        mol.setAtomTransient(atom, trans);\n    }\n    static noteExplicitValence(mol, atom) {\n        let trans = mol.atomTransient(atom);\n        for (let tr of trans)\n            if (tr.startsWith(ForeignMoleculeTransient.AtomExplicitValence + ':'))\n                return parseInt(tr.substring(ForeignMoleculeTransient.AtomExplicitValence.length + 1));\n        return null;\n    }\n    static markSgroupMultiAttach(mol, name, atoms, keyval = {}) {\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiAttach.length + 1);\n                    let comma = payload.indexOf(',');\n                    let bits = payload.split(',');\n                    let idx = parseInt(bits[0]);\n                    if (!(idx > 0))\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let tag = `${ForeignMoleculeTransient.AtomSgroupMultiAttach}:${idxHigh + 1},${name}`;\n        for (let [key, val] of Object.entries(keyval))\n            tag += ',' + key + '=' + val;\n        for (let a of atoms)\n            mol.setAtomTransient(a, Vec.append(mol.atomTransient(a), tag));\n    }\n    static hasAnySgroupMultiAttach(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupMultiAttach(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiAttach.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 2)\n                        continue;\n                    let idx = parseInt(bits[0]), name = bits[1];\n                    if (!(idx > 0) || !name)\n                        continue;\n                    let keyval = {};\n                    for (let i = 2; i < bits.length; i++) {\n                        let eq = bits[i].indexOf('=');\n                        if (eq < 0)\n                            continue;\n                        keyval[bits[i].substring(0, eq)] = bits[i].substring(eq + 1);\n                    }\n                    let sgm = map[idx];\n                    if (sgm)\n                        sgm.atoms.push(n);\n                    else\n                        map[idx] = { name, atoms: [n], keyval };\n                }\n        return Object.values(map);\n    }\n    static markSgroupMultiRepeat(mol, mult, atoms) {\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiRepeat.length + 1);\n                    let comma = payload.indexOf(',');\n                    if (comma <= 0)\n                        continue;\n                    let idx = parseInt(payload.substring(0, comma));\n                    if (idx <= 0)\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let unit = atoms.length / mult;\n        let tag = `${ForeignMoleculeTransient.AtomSgroupMultiRepeat}:${idxHigh + 1},${mult},${unit},`;\n        for (let n = 0; n < atoms.length; n++)\n            mol.setAtomTransient(atoms[n], Vec.append(mol.atomTransient(atoms[n]), tag + (n + 1)));\n    }\n    static hasAnySgroupMultiRepeat(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupMultiRepeat(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiRepeat.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 4)\n                        continue;\n                    let idx = parseInt(bits[0]), mult = parseInt(bits[1]), unit = parseInt(bits[2]), pos = parseInt(bits[3]);\n                    if (!(idx > 0) || mult < 2 || unit < 1 || pos < 1 || pos > mult * unit)\n                        continue;\n                    let mr = map[idx];\n                    if (mr == null)\n                        map[idx] = mr = { mult, unit, atoms: Vec.numberArray(0, mult * unit) };\n                    else if (mr.mult != mult || mr.unit != unit)\n                        continue;\n                    mr.atoms[pos - 1] = n;\n                }\n        return Object.values(map);\n    }\n    static markSgroupData(mol, name, value, unit, query, atoms) {\n        var _a;\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupData.length + 1);\n                    let comma = payload.indexOf(',');\n                    if (comma <= 0)\n                        continue;\n                    let idx = parseInt(payload.substring(0, comma));\n                    if (idx <= 0)\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let bits = [(idxHigh + 1).toString(), name, value, unit, query];\n        for (let n = 1; n < bits.length; n++)\n            bits[n] = ((_a = bits[n]) !== null && _a !== void 0 ? _a : '').replace(/\\,/g, '@@');\n        let tag = ForeignMoleculeTransient.AtomSgroupData + ':' + bits.join(',');\n        for (let n = 0; n < atoms.length; n++)\n            mol.setAtomTransient(atoms[n], Vec.append(mol.atomTransient(atoms[n]), tag));\n    }\n    static hasAnySgroupData(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupData(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupData.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 5)\n                        continue;\n                    let idx = parseInt(bits[0]);\n                    for (let i = 1; i < 5; i++)\n                        bits[i] = bits[i].replace(/\\@\\@/g, ',');\n                    if (!(idx > 0))\n                        continue;\n                    let sd = map[idx];\n                    if (sd)\n                        sd.atoms.push(n);\n                    else\n                        map[idx] = { name: bits[1], value: bits[2], unit: bits[3], query: bits[4], atoms: [n] };\n                }\n        return Object.values(map);\n    }\n}\n//# sourceMappingURL=ForeignMolecule.js.map","import { Vec } from '../util/Vec';\nexport const POLYMERBLOCK_EXTRA_POLYMER = 'xPOLYMER:';\nexport const POLYMERBLOCK_SPECIAL_UNCAPPED = '*';\nexport var PolymerBlockConnectivity;\n(function (PolymerBlockConnectivity) {\n    PolymerBlockConnectivity[\"HeadToTail\"] = \"ht\";\n    PolymerBlockConnectivity[\"HeadToHead\"] = \"hh\";\n    PolymerBlockConnectivity[\"Random\"] = \"rnd\";\n})(PolymerBlockConnectivity || (PolymerBlockConnectivity = {}));\nexport class PolymerBlockUnit {\n    constructor(atoms) {\n        this.atoms = atoms;\n        this.connect = null;\n        this.bondConn = null;\n        this.atomName = new Map();\n        this.bondIncl = new Map();\n        this.bondExcl = new Map();\n    }\n    clone() {\n        let dup = new PolymerBlockUnit(this.atoms.slice(0));\n        dup.connect = this.connect;\n        if (this.bondConn)\n            dup.bondConn = this.bondConn.slice(0);\n        for (let [k, v] of this.atomName.entries())\n            dup.atomName.set(k, v.slice(0));\n        for (let [k, v] of this.bondIncl.entries())\n            dup.bondIncl.set(k, v.slice(0));\n        for (let [k, v] of this.bondExcl.entries())\n            dup.bondExcl.set(k, v.slice(0));\n        return dup;\n    }\n}\nexport class PolymerBlock {\n    constructor(mol) {\n        this.mol = mol;\n        this.units = new Map();\n        let blockAtoms = new Map();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            for (let str of extra)\n                if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = str.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    let id = parseInt(bits[0]);\n                    if (id > 0) {\n                        let atoms = blockAtoms.get(id);\n                        if (atoms)\n                            atoms.push(n);\n                        else\n                            atoms = [n];\n                        blockAtoms.set(id, atoms);\n                    }\n                }\n        }\n        for (let key of Vec.sorted(Array.from(blockAtoms.keys())))\n            this.appendBlock(key, blockAtoms.get(key));\n    }\n    getIDList() { return Vec.sorted(Array.from(this.units.keys())); }\n    getUnit(id) { return this.units.get(id); }\n    getUnits() { return Array.from(this.units.values()); }\n    rewriteMolecule() {\n        this.purgeExtraFields();\n        for (let key of Vec.sorted(Array.from(this.units.keys())))\n            this.writeUnit(key, this.units.get(key));\n    }\n    harmoniseNumbering(other) {\n        let allKeys = other.getIDList();\n        for (let key of this.getIDList())\n            if (allKeys.includes(key)) {\n                let unit = this.units.get(key);\n                this.units.delete(key);\n                key = this.nextIdentifier(allKeys);\n                this.units.set(key, unit);\n                allKeys.push(key);\n            }\n    }\n    removeUnit(id) {\n        let unit = this.units.get(id);\n        if (unit == null)\n            return;\n        this.units.delete(id);\n        let pfx = POLYMERBLOCK_EXTRA_POLYMER + id + ':';\n        for (let a of unit.atoms) {\n            let extra = this.mol.atomExtra(a);\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(pfx))\n                    extra = Vec.remove(extra, i);\n            this.mol.setAtomExtra(a, extra);\n        }\n        for (let b = 1; b <= this.mol.numBonds; b++) {\n            let extra = this.mol.bondExtra(b);\n            if (Vec.isBlank(extra))\n                continue;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(pfx))\n                    extra = Vec.remove(extra, i);\n            this.mol.setBondExtra(b, extra);\n        }\n    }\n    removeAll() {\n        this.units.clear();\n        this.purgeExtraFields();\n    }\n    createUnit(unit) {\n        let id = this.nextIdentifier();\n        this.units.set(id, unit.clone());\n        this.writeUnit(id, unit);\n        return id;\n    }\n    static hasPolymerExtensions(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra)\n                    if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n                        return true;\n        }\n        return false;\n    }\n    static getPolymerExtensions(mol, atom) {\n        let extra = mol.atomExtra(atom), polext = null;\n        if (extra == null)\n            return null;\n        for (let str of extra)\n            if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n                polext = Vec.append(polext, str);\n        return polext;\n    }\n    static removePolymerExtensions(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        if (extra == null)\n            return;\n        let modified = false;\n        for (let i = extra.length - 1; i >= 0; i--)\n            if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                extra = Vec.remove(extra, i);\n                modified = true;\n            }\n        if (modified)\n            mol.setAtomExtra(atom, extra);\n    }\n    appendBlock(id, atoms) {\n        const { mol } = this;\n        let nattach = 0;\n        let unit = new PolymerBlockUnit(atoms);\n        for (let atom of atoms)\n            for (let extra of mol.atomExtra(atom))\n                if (extra.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = extra.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    if (bits.length < 2 || parseInt(bits[0]) != id)\n                        continue;\n                    nattach = parseInt(bits[1]);\n                    for (let n = 2; n < bits.length; n++) {\n                        if (bits[n] == PolymerBlockConnectivity.HeadToTail)\n                            unit.connect = PolymerBlockConnectivity.HeadToTail;\n                        else if (bits[n] == PolymerBlockConnectivity.HeadToHead)\n                            unit.connect = PolymerBlockConnectivity.HeadToHead;\n                        else if (bits[n] == PolymerBlockConnectivity.Random)\n                            unit.connect = PolymerBlockConnectivity.Random;\n                        else if (bits[n].startsWith('n')) {\n                            let hasOuter = false;\n                            for (let adj of mol.atomAdjList(atom))\n                                if (!atoms.includes(adj)) {\n                                    hasOuter = true;\n                                    break;\n                                }\n                            if (hasOuter) {\n                                let subBits = bits[n].substring(1).split(',');\n                                unit.atomName.set(atom, subBits.map((str) => parseInt(str)));\n                            }\n                        }\n                    }\n                }\n        if (nattach < 0)\n            return;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let in1 = atoms.indexOf(mol.bondFrom(n)) >= 0, in2 = atoms.indexOf(mol.bondTo(n)) >= 0;\n            if ((in1 && !in2) || (!in1 && in2))\n                nattach--;\n        }\n        if (nattach != 0)\n            return;\n        let bonds = null, order = null;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            for (let extra of mol.bondExtra(n))\n                if (extra.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = extra.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    if (bits.length < 2 || parseInt(bits[0]) != id)\n                        continue;\n                    for (let i = 1; i < bits.length; i++) {\n                        if (bits[i].startsWith('i')) {\n                            let subBits = bits[i].substring(1).split(',');\n                            unit.bondIncl.set(n, subBits.map((str) => parseInt(str)));\n                        }\n                        else if (bits[i].startsWith('e')) {\n                            let subBits = bits[i].substring(1).split(',');\n                            unit.bondExcl.set(n, subBits.map((str) => parseInt(str)));\n                        }\n                        else {\n                            let o = parseInt(bits[i]);\n                            if (o > 0) {\n                                bonds = Vec.append(bonds, n);\n                                order = Vec.append(order, o);\n                            }\n                        }\n                    }\n                }\n        }\n        if (bonds != null) {\n            if (bonds.length % 2 == 1)\n                return;\n            unit.bondConn = Vec.idxGet(bonds, Vec.idxSort(order));\n        }\n        this.units.set(id, unit);\n    }\n    formatBlockAtom(id, unit, atom) {\n        let nbonds = 0;\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let in1 = unit.atoms.indexOf(this.mol.bondFrom(n)) >= 0, in2 = unit.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n            if ((in1 && !in2) || (!in1 && in2))\n                nbonds++;\n        }\n        let str = POLYMERBLOCK_EXTRA_POLYMER + id + ':' + nbonds;\n        if (unit.connect != null)\n            str += ':' + unit.connect;\n        let names = unit.atomName.get(atom);\n        if (Vec.notBlank(names))\n            str += ':n' + names.join(',');\n        return str;\n    }\n    formatBlockBond(id, unit, bond) {\n        let in1 = unit.atoms.includes(this.mol.bondFrom(bond)), in2 = unit.atoms.includes(this.mol.bondTo(bond));\n        let isBoundary = (in1 && !in2) || (in2 && !in1);\n        if (!isBoundary)\n            return null;\n        let idxConn = unit.bondConn ? unit.bondConn.indexOf(bond) : -1;\n        let incl = unit.bondIncl.get(bond), excl = unit.bondExcl.get(bond);\n        if (idxConn < 0 && Vec.isBlank(incl) && Vec.isBlank(excl))\n            return null;\n        let str = POLYMERBLOCK_EXTRA_POLYMER + id;\n        if (idxConn >= 0)\n            str += ':' + (idxConn + 1);\n        if (Vec.notBlank(incl))\n            str += ':i' + incl.join(',');\n        if (Vec.notBlank(excl))\n            str += ':e' + excl.join(',');\n        return str;\n    }\n    purgeExtraFields() {\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let extra = this.mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    extra = Vec.remove(extra, i);\n                    modified = true;\n                }\n            if (modified)\n                this.mol.setAtomExtra(n, extra);\n        }\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let extra = this.mol.bondExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    extra = Vec.remove(extra, i);\n                    modified = true;\n                }\n            if (modified)\n                this.mol.setBondExtra(n, extra);\n        }\n    }\n    writeUnit(id, unit) {\n        const { mol } = this;\n        for (let a of unit.atoms) {\n            let codeAtom = this.formatBlockAtom(id, unit, a);\n            mol.setAtomExtra(a, Vec.append(mol.atomExtra(a), codeAtom));\n        }\n        for (let b = 1; b <= mol.numBonds; b++) {\n            let codeBond = this.formatBlockBond(id, unit, b);\n            if (codeBond)\n                mol.setBondExtra(b, Vec.append(mol.bondExtra(b), codeBond));\n        }\n    }\n    nextIdentifier(keys) {\n        if (!keys)\n            keys = this.getIDList();\n        if (keys.length == 0)\n            return 1;\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=PolymerBlock.js.map","import { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nexport var QueryTypeAtom;\n(function (QueryTypeAtom) {\n    QueryTypeAtom[\"Charges\"] = \"qC:\";\n    QueryTypeAtom[\"Aromatic\"] = \"qA:\";\n    QueryTypeAtom[\"Unsaturated\"] = \"qU:\";\n    QueryTypeAtom[\"Elements\"] = \"qE:\";\n    QueryTypeAtom[\"ElementsNot\"] = \"qE!\";\n    QueryTypeAtom[\"RingSizes\"] = \"qR:\";\n    QueryTypeAtom[\"RingSizesNot\"] = \"qR!\";\n    QueryTypeAtom[\"RingBlock\"] = \"qB:\";\n    QueryTypeAtom[\"NumRings\"] = \"qN:\";\n    QueryTypeAtom[\"RingBonds\"] = \"qG:\";\n    QueryTypeAtom[\"Adjacency\"] = \"qJ:\";\n    QueryTypeAtom[\"BondSums\"] = \"qO:\";\n    QueryTypeAtom[\"Valences\"] = \"qV:\";\n    QueryTypeAtom[\"Hydrogens\"] = \"qH:\";\n    QueryTypeAtom[\"Isotopes\"] = \"qI:\";\n    QueryTypeAtom[\"SubFrags\"] = \"qX:\";\n    QueryTypeAtom[\"SubFragsNot\"] = \"qX!\";\n})(QueryTypeAtom || (QueryTypeAtom = {}));\nexport var QueryTypeBond;\n(function (QueryTypeBond) {\n    QueryTypeBond[\"RingSizes\"] = \"qR:\";\n    QueryTypeBond[\"RingSizesNot\"] = \"qR!\";\n    QueryTypeBond[\"RingBlock\"] = \"qB:\";\n    QueryTypeBond[\"NumRings\"] = \"qN:\";\n    QueryTypeBond[\"Orders\"] = \"qO:\";\n})(QueryTypeBond || (QueryTypeBond = {}));\nexport class QueryUtil {\n    static hasAnyQueryAtom(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith('q'))\n                return true;\n        return false;\n    }\n    static hasAnyQueryBond(mol, bond) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith('q'))\n                return true;\n        return false;\n    }\n    static hasQueryAtom(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return true;\n        return false;\n    }\n    static hasQueryBond(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return true;\n        return false;\n    }\n    static deleteQueryAtom(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        let modified = false;\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type)) {\n                extra.splice(n, 1);\n                modified = true;\n            }\n        if (modified)\n            mol.setAtomExtra(atom, extra);\n    }\n    static deleteQueryBond(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        let modified = false;\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type)) {\n                extra.splice(n, 1);\n                modified = true;\n            }\n        if (modified)\n            mol.setBondExtra(bond, extra);\n    }\n    static deleteQueryAtomAll(mol, atom) {\n        mol.setAtomExtra(atom, mol.atomExtra(atom).filter((xtra) => !xtra.startsWith('q')));\n    }\n    static deleteQueryBondAll(mol, bond) {\n        mol.setBondExtra(bond, mol.bondExtra(bond).filter((xtra) => !xtra.startsWith('q')));\n    }\n    static queryAtomString(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return extra[n].substring(type.length);\n        return null;\n    }\n    static queryAtomStringList(mol, atom, type) {\n        let extra = mol.atomExtra(atom), list = null;\n        if (extra != null)\n            for (let str of extra)\n                if (str.startsWith(type))\n                    list = Vec.append(list, str.substring(type.length));\n        return list;\n    }\n    static queryBondString(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return extra[n].substring(type.length);\n        return null;\n    }\n    static setQueryAtom(mol, atom, type, str) {\n        if (!str) {\n            this.deleteQueryAtom(mol, atom, type);\n            return;\n        }\n        let value = type + str;\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--) {\n            if (extra[n].startsWith(type)) {\n                if (value != null) {\n                    extra[n] = value;\n                    value = null;\n                }\n                else\n                    extra.splice(n, 1);\n            }\n        }\n        if (value != null)\n            extra.push(value);\n        mol.setAtomExtra(atom, extra);\n    }\n    static setQueryAtomList(mol, atom, type, list) {\n        if (Vec.isBlank(list)) {\n            this.deleteQueryAtom(mol, atom, type);\n            return;\n        }\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                extra.splice(n, 1);\n        for (let str of list)\n            extra.push(type + str);\n        mol.setAtomExtra(atom, extra);\n    }\n    static setQueryBond(mol, bond, type, str) {\n        if (!str) {\n            this.deleteQueryBond(mol, bond, type);\n            return;\n        }\n        let value = type + str;\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--) {\n            if (extra[n].startsWith(type)) {\n                if (value != null) {\n                    extra[n] = value;\n                    value = null;\n                }\n                else\n                    extra.splice(n, 1);\n            }\n        }\n        if (value != null)\n            extra.push(value);\n        mol.setBondExtra(bond, extra);\n    }\n    static queryAtomCharges(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Charges)); }\n    static queryAtomAromatic(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.Aromatic)); }\n    static queryAtomUnsaturated(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.Unsaturated)); }\n    static queryAtomElements(mol, atom) { return this.parseStrings(this.queryAtomString(mol, atom, QueryTypeAtom.Elements)); }\n    static queryAtomElementsNot(mol, atom) { return this.parseStrings(this.queryAtomString(mol, atom, QueryTypeAtom.ElementsNot)); }\n    static queryAtomRingSizes(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingSizes)); }\n    static queryAtomRingSizesNot(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingSizesNot)); }\n    static queryAtomRingBlock(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.RingBlock)); }\n    static queryAtomNumRings(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.NumRings)); }\n    static queryAtomRingBonds(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingBonds)); }\n    static queryAtomAdjacency(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Adjacency)); }\n    static queryAtomBondSums(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.BondSums)); }\n    static queryAtomValences(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Valences)); }\n    static queryAtomHydrogens(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Hydrogens)); }\n    static queryAtomIsotope(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Isotopes)); }\n    static queryAtomSubFrags(mol, atom) { return this.parseMolecules(this.queryAtomStringList(mol, atom, QueryTypeAtom.SubFrags)); }\n    static queryAtomSubFragsNot(mol, atom) { return this.parseMolecules(this.queryAtomStringList(mol, atom, QueryTypeAtom.SubFragsNot)); }\n    static queryBondRingSizes(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.RingSizes)); }\n    static queryBondRingSizesNot(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.RingSizesNot)); }\n    static queryBondRingBlock(mol, bond) { return this.parseBoolean(this.queryBondString(mol, bond, QueryTypeBond.RingBlock)); }\n    static queryBondNumRings(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.NumRings)); }\n    static queryBondOrders(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.Orders)); }\n    static setQueryAtomCharges(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Charges, this.formatIntegers(value)); }\n    static setQueryAtomAromatic(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Aromatic, this.formatBoolean(value)); }\n    static setQueryAtomUnsaturated(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Unsaturated, this.formatBoolean(value)); }\n    static setQueryAtomElements(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Elements, this.formatStrings(value)); }\n    static setQueryAtomElementsNot(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.ElementsNot, this.formatStrings(value)); }\n    static setQueryAtomRingSizes(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingSizes, this.formatIntegers(value)); }\n    static setQueryAtomRingSizesNot(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingSizesNot, this.formatIntegers(value)); }\n    static setQueryAtomRingBlock(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingBlock, this.formatBoolean(value)); }\n    static setQueryAtomNumRings(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.NumRings, this.formatIntegers(value)); }\n    static setQueryAtomRingBonds(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingBonds, this.formatIntegers(value)); }\n    static setQueryAtomAdjacency(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Adjacency, this.formatIntegers(value)); }\n    static setQueryAtomBondSums(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.BondSums, this.formatIntegers(value)); }\n    static setQueryAtomValences(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Valences, this.formatIntegers(value)); }\n    static setQueryAtomHydrogens(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Hydrogens, this.formatIntegers(value)); }\n    static setQueryAtomIsotope(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Isotopes, this.formatIntegers(value)); }\n    static setQueryAtomSubFrags(mol, atom, value) { this.setQueryAtomList(mol, atom, QueryTypeAtom.SubFrags, this.formatMolecules(value)); }\n    static setQueryAtomSubFragsNot(mol, atom, value) { this.setQueryAtomList(mol, atom, QueryTypeAtom.SubFragsNot, this.formatMolecules(value)); }\n    static setQueryBondRingSizes(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingSizes, this.formatIntegers(value)); }\n    static setQueryBondRingSizesNot(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingSizesNot, this.formatIntegers(value)); }\n    static setQueryBondRingBlock(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingBlock, this.formatBoolean(value)); }\n    static setQueryBondNumRings(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.NumRings, this.formatIntegers(value)); }\n    static setQueryBondOrders(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.Orders, this.formatIntegers(value)); }\n    static parseIntegers(str) {\n        if (!str)\n            return null;\n        let strlist = str.split(',');\n        let intlist = new Array(strlist.length);\n        for (let n = 0; n < strlist.length; n++)\n            intlist[n] = parseInt(strlist[n]);\n        return intlist;\n    }\n    static parseStrings(str) {\n        if (!str)\n            return null;\n        return str.split(',');\n    }\n    static parseBoolean(str) {\n        return !str ? null : str == 'yes';\n    }\n    static parseMolecules(list) {\n        if (!list)\n            return null;\n        let mols = [];\n        for (let molstr of list) {\n            let mol = Molecule.fromString(molstr);\n            if (MolUtil.notBlank(mol))\n                mols.push(mol);\n        }\n        return mols;\n    }\n    static formatIntegers(list) {\n        if (Vec.isBlank(list))\n            return null;\n        let str = '';\n        for (let n = 0; n < list.length; n++) {\n            if (n > 0)\n                str += ',';\n            str += list[n];\n        }\n        return str;\n    }\n    static formatStrings(list) {\n        if (Vec.isBlank(list))\n            return null;\n        let str = '';\n        for (let n = 0; n < list.length; n++) {\n            if (n > 0)\n                str += ',';\n            str += list[n];\n        }\n        return str;\n    }\n    static formatBoolean(value) {\n        return value ? 'yes' : 'no';\n    }\n    static formatMolecules(mols) {\n        if (Vec.isBlank(mols))\n            return null;\n        let list = [];\n        for (let mol of mols)\n            if (MolUtil.notBlank(mol))\n                list.push(mol.toString());\n        return list;\n    }\n}\n//# sourceMappingURL=QueryUtil.js.map","import { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nexport const STEREOGROUP_EXTRA_RACEMIC = 'xCHIRAC:';\nexport const STEREOGROUP_EXTRA_RELATIVE = 'xCHIREL:';\nexport class StereoGroup {\n    static hasStereoGroups(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra)\n                    if (str.startsWith(STEREOGROUP_EXTRA_RACEMIC) || str.startsWith(STEREOGROUP_EXTRA_RELATIVE))\n                        return true;\n        }\n        return false;\n    }\n    constructor(mol) {\n        this.mol = mol;\n        this.chiRac = new Map();\n        this.chiRel = new Map();\n        this.mol = mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra) {\n                    if (str.startsWith(STEREOGROUP_EXTRA_RACEMIC)) {\n                        let grp = parseInt(str.substring(STEREOGROUP_EXTRA_RACEMIC.length));\n                        if (grp > 0)\n                            this.chiRac.set(grp, Vec.append(this.chiRac.get(grp), n));\n                    }\n                    else if (str.startsWith(STEREOGROUP_EXTRA_RELATIVE)) {\n                        let grp = parseInt(str.substring(STEREOGROUP_EXTRA_RELATIVE.length));\n                        if (grp > 0)\n                            this.chiRel.set(grp, Vec.append(this.chiRel.get(grp), n));\n                    }\n                }\n        }\n        for (let [grp, atoms] of this.chiRac.entries()) {\n            for (let n = atoms.length - 1; n >= 0; n--)\n                if (!this.atomHasWedge(atoms[n]))\n                    atoms.splice(n, 1);\n            if (atoms.length > 0)\n                this.chiRac.set(grp, atoms);\n            else\n                this.chiRac.delete(grp);\n        }\n        for (let [grp, atoms] of this.chiRel.entries()) {\n            for (let n = atoms.length - 1; n >= 0; n--)\n                if (!this.atomHasWedge(atoms[n]))\n                    atoms.splice(n, 1);\n            if (atoms.length > 0)\n                this.chiRel.set(grp, atoms);\n            else\n                this.chiRel.delete(grp);\n        }\n    }\n    getRacemicGroups() { return Array.from(this.chiRac.keys()); }\n    getRelativeGroups() { return Array.from(this.chiRel.keys()); }\n    getRacemicAtoms() { return Array.from(this.chiRac.values()); }\n    getRelativeAtoms() { return Array.from(this.chiRel.values()); }\n    getRacemicGroupAtoms(grp) { return this.chiRac.get(grp); }\n    getRelativeGroupAtoms(grp) { return this.chiRel.get(grp); }\n    rewriteMolecule() {\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let extra = this.mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (extra[i].startsWith(STEREOGROUP_EXTRA_RACEMIC) || extra[i].startsWith(STEREOGROUP_EXTRA_RELATIVE)) {\n                    extra.splice(i, 1);\n                    modified = true;\n                }\n            }\n            if (modified)\n                this.mol.setAtomExtra(n, extra);\n        }\n        for (let [grp, atoms] of this.chiRac.entries()) {\n            for (let a of atoms)\n                this.mol.setAtomExtra(a, [...this.mol.atomExtra(a), STEREOGROUP_EXTRA_RACEMIC + grp]);\n        }\n        for (let [grp, atoms] of this.chiRel.entries()) {\n            for (let a of atoms)\n                this.mol.setAtomExtra(a, [...this.mol.atomExtra(a), STEREOGROUP_EXTRA_RELATIVE + grp]);\n        }\n    }\n    harmoniseNumbering(other) {\n        let groups = other.getRacemicGroups();\n        let stash = this.getRacemicAtoms();\n        this.chiRac.clear();\n        for (let atoms of stash) {\n            let grp = this.nextIdentifier(groups);\n            this.chiRac.set(grp, atoms);\n            groups.push(grp);\n        }\n        groups = other.getRelativeGroups();\n        stash = this.getRelativeAtoms();\n        this.chiRel.clear();\n        for (let atoms of stash) {\n            let grp = this.nextIdentifier(groups);\n            this.chiRel.set(grp, atoms);\n            groups.push(grp);\n        }\n    }\n    createRacemic(atoms) {\n        let grp = this.nextIdentifier(this.getRacemicGroups());\n        this.chiRac.set(grp, atoms);\n        return grp;\n    }\n    createRelative(atoms) {\n        let grp = this.nextIdentifier(this.getRelativeGroups());\n        this.chiRel.set(grp, atoms);\n        return grp;\n    }\n    removeRacemic(grp) {\n        this.chiRac.delete(grp);\n    }\n    removeRelative(grp) {\n        this.chiRel.delete(grp);\n    }\n    static removeAll(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (!extra[i].startsWith(STEREOGROUP_EXTRA_RACEMIC) && !extra[i].startsWith(STEREOGROUP_EXTRA_RELATIVE))\n                    continue;\n                extra.splice(i, 1);\n                modified = true;\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n    }\n    atomHasWedge(atom) {\n        if (this.mol.is3D())\n            return true;\n        let hasWedge = false;\n        for (let b of this.mol.atomAdjBonds(atom)) {\n            let bt = this.mol.bondType(b);\n            if (bt == Molecule.BONDTYPE_UNKNOWN)\n                return false;\n            if (this.mol.bondFrom(b) != atom)\n                continue;\n            if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                hasWedge = true;\n        }\n        return hasWedge;\n    }\n    nextIdentifier(inkeys) {\n        if (inkeys.length == 0)\n            return 1;\n        let keys = Vec.sorted(inkeys);\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=StereoGroup.js.map","import { ResonanceRemover } from '../calc/ResonanceRemover';\nimport { Vec } from '../util/Vec';\nimport { BondArtifact } from '../mol/BondArtifact';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { DataSheet } from '../ds/DataSheet';\nimport { ForeignMolecule, ForeignMoleculeTransient } from '../mol/ForeignMolecule';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity, PolymerBlockUnit } from '../mol/PolymerBlock';\nimport { QueryUtil } from '../mol/QueryUtil';\nimport { StereoGroup } from '../mol/StereoGroup';\nexport const MDLMOL_VALENCE = {\n    'H': [1],\n    'B': [3],\n    'C': [4],\n    'Si': [4],\n    'N': [3],\n    'P': [3, 5],\n    'As': [3, 5],\n    'O': [2],\n    'S': [2, 4, 6],\n    'Se': [2, 4, 6],\n    'Te': [2, 4, 6],\n    'F': [1],\n    'Cl': [1, 3, 5, 7],\n    'Br': [1],\n    'I': [1, 3, 5, 7],\n    'At': [1, 3, 5, 7],\n};\nexport class MDLMOLReader {\n    constructor(strData) {\n        this.parseHeader = true;\n        this.parseExtended = true;\n        this.allowV3000 = true;\n        this.considerRescale = true;\n        this.keepAromatic = false;\n        this.keepParity = false;\n        this.keepQuery = true;\n        this.mol = null;\n        this.molName = '';\n        this.overallStereoAbsolute = true;\n        this.resBonds = null;\n        this.groupAttachAny = new Map();\n        this.groupAttachAll = new Map();\n        this.groupStereoAbsolute = [];\n        this.groupStereoRacemic = [];\n        this.groupStereoRelative = [];\n        this.groupLinkNodes = [];\n        this.groupMixtures = [];\n        this.scsrTemplates = null;\n        this.pos = 0;\n        this.lines = strData.split(/\\r?\\n/);\n    }\n    parse() {\n        if (this.parseHeader) {\n            this.molName = this.lines[0];\n            this.pos = 3;\n        }\n        this.parseCTAB();\n        return this.mol;\n    }\n    nextLine() {\n        if (this.pos >= this.lines.length)\n            throw 'MDL Molfile parser: premature end, at line ' + (this.pos + 1);\n        return this.lines[this.pos++];\n    }\n    parseCTAB() {\n        this.mol = new Molecule();\n        this.mol.keepTransient = true;\n        let line = this.nextLine();\n        let version = line.length >= 39 ? line.substring(34, 39) : '';\n        if (this.allowV3000 && version == 'V3000') {\n            this.parseV3000();\n            this.mol.keepTransient = false;\n            return;\n        }\n        if (version != 'V2000')\n            throw 'Invalid MDL MOL: no Vx000 tag.';\n        let numAtoms = parseInt(line.substring(0, 3).trim());\n        let numBonds = parseInt(line.substring(3, 6).trim());\n        if (line.length >= 15)\n            this.overallStereoAbsolute = parseInt(line.substring(12, 15).trim()) == 1;\n        for (let n = 0; n < numAtoms; n++) {\n            line = this.nextLine();\n            if (line.length < 34)\n                throw 'Invalid MDL MOL: atom line' + (n + 1);\n            let x = parseFloat(line.substring(0, 10).trim());\n            let y = parseFloat(line.substring(10, 20).trim());\n            let z = parseFloat(line.substring(20, 30).trim());\n            let el = line.substring(31, 34).trim();\n            let chg = line.length < 39 ? 0 : parseInt(line.substring(36, 39).trim()), rad = 0;\n            let stereo = line.length < 42 ? 0 : parseInt(line.substring(39, 42).trim());\n            let hyd = line.length < 45 ? 0 : parseInt(line.substring(42, 45).trim());\n            let val = line.length < 51 ? 0 : parseInt(line.substring(48, 51).trim());\n            let mapnum = line.length < 63 ? 0 : parseInt(line.substring(60, 63).trim());\n            if (chg >= 1 && chg <= 3)\n                chg = 4 - chg;\n            else if (chg == 4) {\n                chg = 0;\n                rad = 2;\n            }\n            else if (chg >= 5 && chg <= 7)\n                chg = 4 - chg;\n            else\n                chg = 0;\n            let a = this.mol.addAtom(el, x, y, chg, rad);\n            if (z != 0) {\n                this.mol.setAtomZ(a, z);\n                this.mol.setIs3D(true);\n            }\n            this.mol.setAtomMapNum(a, mapnum);\n            if (hyd > 0)\n                QueryUtil.setQueryAtomHydrogens(this.mol, a, [hyd - 1]);\n            if (stereo > 0 && this.keepParity) {\n                let trans = this.mol.atomTransient(a);\n                if (stereo == 1)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLOdd));\n                else if (stereo == 2)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLEven));\n                else if (stereo == 3)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLRacemic));\n            }\n            if (val != 0)\n                ForeignMolecule.markExplicitValence(this.mol, n + 1, val > 14 ? 0 : val);\n        }\n        for (let n = 0; n < numBonds; n++) {\n            line = this.nextLine();\n            if (line.length >= 9 && line.length < 12)\n                line = line.substring(0, 9) + '  0';\n            if (line.length < 12)\n                throw 'Invalid MDL MOL: bond line' + (n + 1);\n            let bfr = parseInt(line.substring(0, 3).trim()), bto = parseInt(line.substring(3, 6).trim());\n            let type = parseInt(line.substring(6, 9).trim()), stereo = parseInt(line.substring(9, 12).trim());\n            if (bfr == bto || bfr < 1 || bfr > numAtoms || bto < 1 || bto > numAtoms)\n                throw 'Invalid MDL MOL: bond line' + (n + 1);\n            let order = type >= 1 && type <= 3 ? type : type == 8 || type == 9 || type == 10 ? 0 : 1;\n            let style = Molecule.BONDTYPE_NORMAL;\n            if (stereo == 1)\n                style = Molecule.BONDTYPE_INCLINED;\n            else if (stereo == 6)\n                style = Molecule.BONDTYPE_DECLINED;\n            else if (stereo == 3 || stereo == 4)\n                style = Molecule.BONDTYPE_UNKNOWN;\n            let b = this.mol.addBond(bfr, bto, order, style);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroDative);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroHydrogen);\n            if (this.keepQuery) {\n                if (type == 4)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1]);\n                else if (type == 5)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [1, 2]);\n                else if (type == 6)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 1]);\n                else if (type == 7)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 2]);\n                else if (type == 8)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 0, 1, 2, 3]);\n            }\n            else {\n                if (type == 4) {\n                    if (this.keepAromatic)\n                        this.mol.setBondTransient(b, Vec.append(this.mol.bondTransient(b), ForeignMoleculeTransient.BondAromatic));\n                    else {\n                        if (this.resBonds == null)\n                            this.resBonds = Vec.booleanArray(false, numBonds);\n                        this.resBonds[n] = true;\n                    }\n                }\n            }\n        }\n        const MBLK_CHG = 1, MBLK_RAD = 2, MBLK_ISO = 3, MBLK_RGP = 4, MBLK_HYD = 5, MBLK_ZCH = 6, MBLK_ZBO = 7, MBLK_ZPA = 8, MBLK_ZRI = 9, MBLK_ZAR = 10, MBLK_RBC = 11, MBLK_SUB = 12, MBLK_UNS = 13;\n        let resPaths = new Map(), resRings = new Map(), arenes = new Map();\n        let superatoms = new Map(), mixtures = new Map();\n        while (true) {\n            line = this.nextLine();\n            if (line.startsWith('M  END'))\n                break;\n            let type = 0;\n            if (line.startsWith('M  CHG'))\n                type = MBLK_CHG;\n            else if (line.startsWith('M  RAD'))\n                type = MBLK_RAD;\n            else if (line.startsWith('M  ISO'))\n                type = MBLK_ISO;\n            else if (line.startsWith('M  RGP'))\n                type = MBLK_RGP;\n            else if (this.parseExtended && line.startsWith('M  HYD'))\n                type = MBLK_HYD;\n            else if (this.parseExtended && line.startsWith('M  ZCH'))\n                type = MBLK_ZCH;\n            else if (this.parseExtended && line.startsWith('M  ZBO'))\n                type = MBLK_ZBO;\n            else if (this.parseExtended && line.startsWith('M  ZPA'))\n                type = MBLK_ZPA;\n            else if (this.parseExtended && line.startsWith('M  ZRI'))\n                type = MBLK_ZRI;\n            else if (this.parseExtended && line.startsWith('M  ZAR'))\n                type = MBLK_ZAR;\n            else if (this.parseExtended && line.startsWith('M  RBC'))\n                type = MBLK_RBC;\n            else if (this.parseExtended && line.startsWith('M  SUB'))\n                type = MBLK_SUB;\n            else if (this.parseExtended && line.startsWith('M  UNS'))\n                type = MBLK_UNS;\n            else if (line.startsWith('A  ') && line.length >= 6) {\n                let anum = parseInt(line.substring(3, 6).trim());\n                if (anum >= 1 && anum <= this.mol.numAtoms) {\n                    line = this.nextLine();\n                    if (line == null)\n                        break;\n                    this.mol.setAtomElement(anum, line);\n                    continue;\n                }\n            }\n            else if (line.startsWith('M  STY')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let idx = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let stype = line.substring(14 + 8 * n, 17 + 8 * n);\n                    if (stype == 'SUP')\n                        superatoms.set(idx, { atoms: [], name: null });\n                    else if (stype == 'MIX' || stype == 'FOR')\n                        mixtures.set(idx, { index: idx, parent: 0, atoms: [], type: stype });\n                    else if (stype == 'SRU' || stype == 'COP' || stype == 'MUL' || stype == 'DAT')\n                        superatoms.set(idx, { atoms: [], name: null, bracketType: stype });\n                }\n            }\n            else if (line.startsWith('M  SPL')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let child = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let parent = parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim());\n                    let mix = mixtures.get(child);\n                    if (mix != null)\n                        mix.parent = parent;\n                }\n            }\n            else if (line.startsWith('M  SAL')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let atoms = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        atoms[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    sup.atoms = Vec.concat(sup.atoms, atoms);\n                }\n                let mix = mixtures.get(idx);\n                if (mix != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let atoms = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        atoms[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    mix.atoms = Vec.concat(mix.atoms, atoms);\n                }\n            }\n            else if (line.startsWith('M  SBL')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let bonds = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        bonds[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    sup.bonds = Vec.concat(sup.bonds, bonds);\n                }\n            }\n            else if (line.startsWith('M  SMT')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null)\n                    sup.name = line.substring(11).trim();\n            }\n            else if (line.startsWith('M  SDT')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup) {\n                    sup.name = line.substring(11, 41).trim();\n                    sup.unit = line.substring(43, 63).trim();\n                    sup.query = line.substring(63).trim();\n                }\n            }\n            else if (line.startsWith('M  SED')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup)\n                    sup.value = line.substring(11).trim();\n            }\n            else if (line.startsWith('M  SCN')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let idx = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let stype = line.substring(14 + 8 * n, 17 + 8 * n);\n                    let sup = superatoms.get(idx);\n                    if (sup != null)\n                        sup.connectType = stype.trim();\n                }\n            }\n            else if (line.startsWith('M  CRS')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    sup.bondConn = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        sup.bondConn[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                }\n            }\n            else if (line.startsWith('M  LIN')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let node = {\n                        atom: parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim()),\n                        nbrs: [],\n                        minRep: 1,\n                        maxRep: parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim()),\n                    };\n                    let nbr1 = parseInt(line.substring(17 + 8 * n, 21 + 8 * n).trim());\n                    let nbr2 = parseInt(line.substring(21 + 8 * n, 25 + 8 * n).trim());\n                    if (nbr1 > 0)\n                        node.nbrs.push(nbr1);\n                    if (nbr2 > 0)\n                        node.nbrs.push(nbr2);\n                    this.groupLinkNodes.push(node);\n                }\n            }\n            else if (line.startsWith('M  ALS')) {\n                let atom = parseInt(line.substring(7, 10).trim());\n                let len = parseInt(line.substring(10, 13).trim());\n                let logic = line.charAt(14);\n                let elements = [];\n                for (let n = 0; n < len; n++)\n                    elements.push(line.substring(16 + n * 4, 20 + n * 4).trim());\n                this.mol.setAtomElement(atom, '*');\n                if (logic == 'F')\n                    QueryUtil.setQueryAtomElements(this.mol, atom, elements);\n                else if (logic == 'T')\n                    QueryUtil.setQueryAtomElementsNot(this.mol, atom, elements);\n            }\n            if (type == MBLK_ZPA || type == MBLK_ZRI || type == MBLK_ZAR) {\n                let len = parseInt(line.substring(6, 9).trim()), blk = parseInt(line.substring(9, 13).trim());\n                let map = type == MBLK_ZPA ? resPaths : type == MBLK_ZRI ? resRings : arenes;\n                for (let n = 0; n < len; n++) {\n                    let val = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    if (val < 1 || val > numAtoms)\n                        throw 'Invalid MDL MOL: M-block';\n                    let atoms = map.get(blk);\n                    if (!atoms)\n                        map.set(blk, atoms = []);\n                    atoms.push(val);\n                }\n            }\n            else if (type > 0) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let pos = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let val = parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim());\n                    if (pos < 1)\n                        throw 'Invalid MDL MOL: M-block';\n                    if (type == MBLK_CHG)\n                        this.mol.setAtomCharge(pos, val);\n                    else if (type == MBLK_RAD) {\n                        if (val == 1 || val == 3)\n                            this.mol.setAtomUnpaired(pos, 2);\n                        else if (val == 2)\n                            this.mol.setAtomUnpaired(pos, 1);\n                    }\n                    else if (type == MBLK_ISO)\n                        this.mol.setAtomIsotope(pos, val);\n                    else if (type == MBLK_RGP)\n                        this.mol.setAtomElement(pos, 'R' + val);\n                    else if (type == MBLK_HYD)\n                        this.mol.setAtomHExplicit(pos, val);\n                    else if (type == MBLK_ZCH)\n                        this.mol.setAtomCharge(pos, val);\n                    else if (type == MBLK_ZBO)\n                        this.mol.setBondOrder(pos, val);\n                    else if (type == MBLK_RBC && val != 0) {\n                        if (val == -2)\n                            val = this.countRingBonds(pos);\n                        else if (val == -1)\n                            val = 0;\n                        QueryUtil.setQueryAtomRingBonds(this.mol, pos, [val]);\n                    }\n                    else if (type == MBLK_SUB && val != 0) {\n                        if (val == -2)\n                            val = this.countSubstitutions(pos);\n                        else if (val == -1)\n                            val = 0;\n                        QueryUtil.setQueryAtomAdjacency(this.mol, pos, [val]);\n                    }\n                    else if (type == MBLK_UNS) {\n                        if (val == 1)\n                            QueryUtil.setQueryAtomUnsaturated(this.mol, pos, true);\n                    }\n                }\n            }\n        }\n        this.postFix();\n        if (this.parseExtended) {\n            let artifacts = new BondArtifact(this.mol);\n            for (let atoms of resPaths.values())\n                artifacts.createPath(atoms);\n            for (let atoms of resRings.values())\n                artifacts.createRing(atoms);\n            for (let atoms of arenes.values())\n                artifacts.createArene(atoms);\n            artifacts.rewriteMolecule();\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            if (value.bracketType) {\n                superatoms.delete(key);\n                this.applyPolymerBlock(value);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            superatoms.delete(key);\n            this.applySuperAtom(value, Array.from(superatoms.values()));\n        }\n        for (let key of Vec.sorted(Array.from(mixtures.keys())))\n            this.groupMixtures.push(mixtures.get(key));\n        this.mol.keepTransient = false;\n    }\n    postFix() {\n        const mol = this.mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            if (MolUtil.hasAbbrev(mol, n) || mol.atomTransient(n).some((str) => str.startsWith(ForeignMoleculeTransient.AtomSCSRClass)))\n                continue;\n            let el = mol.atomElement(n);\n            if (el == 'D') {\n                mol.setAtomElement(n, 'H');\n                mol.setAtomIsotope(n, 2);\n            }\n            else if (el == 'T') {\n                mol.setAtomElement(n, 'H');\n                mol.setAtomIsotope(n, 3);\n            }\n            if (mol.is3D && mol.atomZ(n) === undefined)\n                mol.setAtomZ(n, 0);\n            let valence = ForeignMolecule.noteExplicitValence(this.mol, n);\n            let options = MDLMOL_VALENCE[el];\n            if (valence != null) {\n                let hcount = valence < 0 || valence > 14 ? 0 : valence;\n                for (let b of mol.atomAdjBonds(n))\n                    hcount -= mol.bondOrder(b);\n                if (hcount != mol.atomHydrogens(n))\n                    mol.setAtomHExplicit(n, Math.max(0, hcount));\n            }\n            else if (options) {\n                let chg = mol.atomCharge(n);\n                let chgmod = (el == 'C' || el == 'H') ? Math.abs(chg) : el == 'B' ? -Math.abs(chg) : -chg;\n                let usedValence = chgmod;\n                let unp = mol.atomUnpaired(n);\n                if (unp > 0 && (el == 'C' || el == 'O' || el == 'S' || el == 'N' || el == 'P'))\n                    usedValence += unp;\n                for (let b of mol.atomAdjBonds(n))\n                    usedValence += mol.bondOrder(b);\n                for (let v of options)\n                    if (usedValence <= v) {\n                        let hcount = v - usedValence;\n                        if (hcount != mol.atomHydrogens(n))\n                            mol.setAtomHExplicit(n, Math.max(0, hcount));\n                        break;\n                    }\n            }\n        }\n        if (this.considerRescale && Vec.isBlank(this.scsrTemplates))\n            CoordUtil.normaliseBondDistances(mol);\n        if (this.resBonds != null) {\n            let derez = new ResonanceRemover(mol, this.resBonds, null);\n            try {\n                derez.perform();\n                for (let n = 0; n < mol.numBonds; n++)\n                    mol.setBondOrder(n + 1, derez.bondOrders[n]);\n            }\n            catch (ex) {\n            }\n        }\n    }\n    parseV3000() {\n        var _a;\n        let Section;\n        (function (Section) {\n            Section[Section[\"Atom\"] = 0] = \"Atom\";\n            Section[Section[\"Bond\"] = 1] = \"Bond\";\n            Section[Section[\"Coll\"] = 2] = \"Coll\";\n            Section[Section[\"SGroup\"] = 3] = \"SGroup\";\n            Section[Section[\"Template\"] = 4] = \"Template\";\n        })(Section || (Section = {}));\n        let inCTAB = false, inTemplate = false;\n        let section = null;\n        let lineCounts = null;\n        let lineAtom = [], lineBond = [], lineColl = [], lineSgroup = [];\n        let asdrawnRBC = [], asdrawnSUB = [];\n        let templateBlocks = [];\n        const ERRPFX = 'Invalid MDL MOL V3000: ';\n        while (true) {\n            let fullLine = this.nextLine();\n            if (fullLine == 'M  END')\n                break;\n            if (!fullLine.startsWith('M  V30 '))\n                continue;\n            let line = fullLine.substring(7);\n            if (line.startsWith('BEGIN TEMPLATE'))\n                inTemplate = true;\n            else if (line.startsWith('END TEMPLATE'))\n                inTemplate = false;\n            else if (line.startsWith('TEMPLATE ') && inTemplate)\n                templateBlocks.push([fullLine]);\n            else if (inTemplate && templateBlocks != null)\n                Vec.last(templateBlocks).push(fullLine);\n            else if (line.startsWith('COUNTS '))\n                lineCounts = line.substring(7);\n            else if (line.startsWith('BEGIN CTAB'))\n                inCTAB = true;\n            else if (line.startsWith('BEGIN ATOM'))\n                section = Section.Atom;\n            else if (line.startsWith('BEGIN BOND'))\n                section = Section.Bond;\n            else if (line.startsWith('BEGIN COLLECTION'))\n                section = Section.Coll;\n            else if (line.startsWith('BEGIN SGROUP'))\n                section = Section.SGroup;\n            else if (line.startsWith('END '))\n                section = null;\n            else if (inCTAB && section == Section.Atom)\n                lineAtom.push(line);\n            else if (inCTAB && section == Section.Bond)\n                lineBond.push(line);\n            else if (inCTAB && section == Section.Coll)\n                lineColl.push(line);\n            else if (inCTAB && section == Section.SGroup)\n                lineSgroup.push(line);\n            else if (inCTAB && section == null) {\n                if (line.startsWith('LINKNODE ')) {\n                    let bits = this.splitWithQuotes(line.substring(9));\n                    let node = {\n                        atom: 0,\n                        nbrs: [],\n                        minRep: parseInt(bits[0]),\n                        maxRep: parseInt(bits[1])\n                    };\n                    let nb = parseInt(bits[2]);\n                    let atoms = [];\n                    for (let n = 0; n < nb * 2; n++)\n                        atoms.push(parseInt(bits[3 + n]));\n                    Vec.sort(atoms);\n                    for (let n = 0; n < atoms.length; n++) {\n                        if (n < atoms.length - 1 && atoms[n] == atoms[n + 1])\n                            node.atom = atoms[n++];\n                        else\n                            node.nbrs.push(atoms[n]);\n                    }\n                    this.groupLinkNodes.push(node);\n                }\n            }\n        }\n        let counts = lineCounts.trim().split(/\\s+/);\n        if (counts.length < 2)\n            throw ERRPFX + 'counts line malformatted';\n        let numAtoms = parseInt(counts[0]), numBonds = parseInt(counts[1]);\n        if (numAtoms < 0 || numAtoms > lineAtom.length)\n            throw ERRPFX + 'unreasonable atom count: ' + numAtoms;\n        if (numBonds < 0 || numBonds > lineBond.length)\n            throw ERRPFX + 'unreasonable bond count: ' + numBonds;\n        let atomBits = [], bondBits = [];\n        for (let n = 0; n < lineAtom.length; n++) {\n            let line = lineAtom[n];\n            while (n < lineAtom.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineAtom[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits.length < 6)\n                throw ERRPFX + 'atom line has too few components: ' + line;\n            let idx = parseInt(bits[0], 0);\n            if (idx < 1 || idx > numAtoms)\n                throw ERRPFX + 'invalid atom index: ' + bits[0];\n            if (atomBits[idx - 1] != null)\n                throw ERRPFX + 'duplicate atom index: ' + idx;\n            atomBits[idx - 1] = bits;\n        }\n        for (let n = 0; n < lineBond.length; n++) {\n            let line = lineBond[n];\n            while (n < lineBond.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineBond[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits.length < 4)\n                throw ERRPFX + 'bond line has too few components: ' + line;\n            let idx = parseInt(bits[0], 0);\n            if (idx < 1 || idx > numBonds)\n                throw ERRPFX + 'invalid bond index: ' + bits[0];\n            if (bondBits[idx - 1] != null)\n                throw ERRPFX + 'duplicate bond index: ' + idx;\n            bondBits[idx - 1] = bits;\n        }\n        for (let a = 1; a <= numAtoms; a++) {\n            let bits = atomBits[a - 1];\n            if (bits == null)\n                throw ERRPFX + 'atom definition missing for #' + a;\n            let type = bits[1];\n            if (type.length > 2 && type.startsWith('\"') && type.endsWith('\"'))\n                type = type.substring(1, type.length - 1);\n            let x = parseFloat(bits[2]), y = parseFloat(bits[3]), z = parseFloat(bits[4]);\n            let map = parseInt(bits[5]);\n            this.mol.addAtom(type, x, y);\n            if (z != 0) {\n                this.mol.setAtomZ(a, z);\n                this.mol.setIs3D(true);\n            }\n            this.mol.setAtomMapNum(a, map);\n            this.parseQueryAtomList(this.mol, a);\n            for (let i = 6; i < bits.length; i++) {\n                let eq = bits[i].indexOf('=');\n                if (eq < 0)\n                    continue;\n                let key = bits[i].substring(0, eq), val = bits[i].substring(eq + 1);\n                if (key == 'CHG')\n                    this.mol.setAtomCharge(a, parseInt(val));\n                else if (key == 'RAD') {\n                    let spin = parseInt(val);\n                    if (spin == 1 || spin == 3)\n                        this.mol.setAtomUnpaired(a, 2);\n                    else if (spin == 2)\n                        this.mol.setAtomUnpaired(a, 1);\n                }\n                else if (key == 'MASS')\n                    this.mol.setAtomIsotope(a, parseInt(val));\n                else if (key == 'CFG') {\n                    let stereo = parseInt(val);\n                    if (stereo > 0 && this.keepParity) {\n                    }\n                }\n                else if (key == 'VAL')\n                    ForeignMolecule.markExplicitValence(this.mol, a, parseInt(val));\n                else if (key == 'CLASS') {\n                    this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRClass + ':' + val);\n                }\n                else if (key == 'SEQID') {\n                    this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRSeqID + ':' + val);\n                }\n                else if (key == 'ATTCHORD') {\n                    let attch = this.unpackStrings(val);\n                    if (attch != null)\n                        this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRAttchOrd + ':' + attch.join(','));\n                }\n                else if (key == 'HCOUNT') {\n                    let hyd = parseInt(val);\n                    if (hyd != 0)\n                        QueryUtil.setQueryAtomHydrogens(this.mol, a, [Math.max(hyd, 0)]);\n                }\n                else if (key == 'RBCNT') {\n                    let rbc = parseInt(val);\n                    if (rbc == -2)\n                        asdrawnRBC.push(a);\n                    else if (rbc != 0)\n                        QueryUtil.setQueryAtomRingBonds(this.mol, a, [Math.max(rbc, 0)]);\n                }\n                else if (key == 'SUBST') {\n                    let sub = parseInt(val);\n                    if (sub == -2)\n                        asdrawnSUB.push(a);\n                    else if (sub != 0)\n                        QueryUtil.setQueryAtomAdjacency(this.mol, a, [Math.max(sub, 0)]);\n                }\n                else if (key == 'UNSAT') {\n                    let uns = parseInt(val);\n                    if (uns == 1)\n                        QueryUtil.setQueryAtomUnsaturated(this.mol, a, true);\n                }\n            }\n        }\n        for (let b = 1; b <= numBonds; b++) {\n            let bits = bondBits[b - 1];\n            if (bits == null)\n                throw ERRPFX + 'bond definition missing for #' + b;\n            let type = parseInt(bits[1]), bfr = parseInt(bits[2]), bto = parseInt(bits[3]);\n            let order = type >= 1 && type <= 3 ? type : type == 9 || type == 10 ? 0 : 1;\n            this.mol.addBond(bfr, bto, order);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroDative);\n            if (type == 10)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroHydrogen);\n            if (this.keepQuery) {\n                if (type == 4)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1]);\n                else if (type == 5)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [1, 2]);\n                else if (type == 6)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 1]);\n                else if (type == 7)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 2]);\n                else if (type == 8)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 0, 1, 2, 3]);\n            }\n            else {\n                if (type == 4) {\n                    if (this.keepAromatic)\n                        this.mol.setBondTransient(b, Vec.append(this.mol.bondTransient(b), ForeignMoleculeTransient.BondAromatic));\n                    else {\n                        if (this.resBonds == null)\n                            this.resBonds = Vec.booleanArray(false, numBonds);\n                        this.resBonds[b - 1] = true;\n                    }\n                }\n            }\n            let endpts = null;\n            let attach = null;\n            for (let i = 4; i < bits.length; i++) {\n                let eq = bits[i].indexOf('=');\n                if (eq < 0)\n                    continue;\n                let key = bits[i].substring(0, eq), val = bits[i].substring(eq + 1);\n                if (key == 'CFG') {\n                    let dir = parseInt(val);\n                    this.mol.setBondType(b, dir == 1 ? Molecule.BONDTYPE_INCLINED :\n                        dir == 2 ? Molecule.BONDTYPE_UNKNOWN :\n                            dir == 3 ? Molecule.BONDTYPE_DECLINED : Molecule.BONDTYPE_NORMAL);\n                }\n                else if (key == 'DISP') {\n                    if (val == 'COORD')\n                        this.mol.setBondOrder(b, 0);\n                }\n                else if (key == 'ENDPTS')\n                    endpts = this.unpackList(val);\n                else if (key == 'ATTACH')\n                    attach = val;\n            }\n            if (attach != null && endpts != null) {\n                if (attach == 'ALL')\n                    this.groupAttachAll.set(b, endpts);\n                else if (attach == 'ANY')\n                    this.groupAttachAny.set(b, endpts);\n            }\n        }\n        for (let atom of asdrawnRBC)\n            QueryUtil.setQueryAtomRingBonds(this.mol, atom, [this.countRingBonds(atom)]);\n        for (let atom of asdrawnSUB)\n            QueryUtil.setQueryAtomAdjacency(this.mol, atom, [this.countSubstitutions(atom)]);\n        this.postFix();\n        for (let n = 0; n < lineColl.length; n++) {\n            let line = lineColl[n];\n            while (n < lineColl.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineColl[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits[0].startsWith('MDLV30/STEABS')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoAbsolute = this.unpackList(bits[1].substring(5));\n            }\n            else if (bits[0].startsWith('MDLV30/STERAC')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoRacemic.push(this.unpackList(bits[1].substring(6)));\n            }\n            else if (bits[0].startsWith('MDLV30/STEREL')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoRelative.push(this.unpackList(bits[1].substring(6)));\n            }\n        }\n        let stereoGroup = new StereoGroup(this.mol);\n        for (let atoms of this.groupStereoRacemic)\n            stereoGroup.createRacemic(atoms);\n        for (let atoms of this.groupStereoRelative)\n            stereoGroup.createRelative(atoms);\n        stereoGroup.rewriteMolecule();\n        let superatoms = new Map();\n        for (let n = 0; n < lineSgroup.length; n++) {\n            let line = lineSgroup[n];\n            while (n < lineSgroup.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineSgroup[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            let idx = parseInt(bits[0]);\n            if (bits.length > 3 && idx > 0 && bits[1] == 'SUP') {\n                let sup = { atoms: [], name: null };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        sup.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('LABEL='))\n                        sup.name = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('XBONDS='))\n                        sup.bonds = this.unpackList(bits[i].substring(7));\n                    else if (bits[i].startsWith('CLASS='))\n                        sup.templateClass = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('NATREPLACE='))\n                        sup.natReplace = this.withoutQuotes(bits[i].substring(11));\n                    else if (bits[i].startsWith('SAP=')) {\n                        const pts = this.unpackStrings(bits[i].substring(4));\n                        sup.attachPoints = [...((_a = sup.attachPoints) !== null && _a !== void 0 ? _a : []), ...pts];\n                    }\n                }\n                superatoms.set(idx, sup);\n            }\n            else if (bits.length > 3 && idx > 0 && (bits[1] == 'MIX' || bits[1] == 'FOR') && parseInt(bits[2]) == idx) {\n                let mix = { index: idx, parent: 0, atoms: null, type: bits[1] };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        mix.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('PARENT='))\n                        mix.parent = parseInt(bits[i].substring(7));\n                }\n                this.groupMixtures.push(mix);\n            }\n            else if (bits.length > 3 && idx > 0 && (bits[1] == 'SRU' || bits[1] == 'COP' || bits[1] == 'MUL' || bits[1] == 'DAT')) {\n                let sup = { atoms: [], name: null, bracketType: bits[1] };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        sup.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('BONDS='))\n                        sup.bonds = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('LABEL='))\n                        sup.name = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('CONNECT='))\n                        sup.connectType = bits[i].substring(8);\n                    else if (bits[i].startsWith('XBCORR='))\n                        sup.bondConn = this.unpackList(bits[i].substring(7));\n                    else if (bits[i].startsWith('MULT='))\n                        sup.name = this.withoutQuotes(bits[i].substring(5));\n                    else if (bits[i].startsWith('FIELDNAME='))\n                        sup.name = this.withoutQuotes(bits[i].substring(10));\n                    else if (bits[i].startsWith('FIELDDATA='))\n                        sup.value = this.withoutQuotes(bits[i].substring(10));\n                }\n                superatoms.set(idx, sup);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            if (value.bracketType) {\n                superatoms.delete(key);\n                this.applyPolymerBlock(value);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            superatoms.delete(key);\n            this.applySuperAtom(value, Array.from(superatoms.values()));\n        }\n        if (templateBlocks.length > 0) {\n            this.scsrTemplates = templateBlocks.map((lines) => this.parseV3000Template(lines));\n        }\n    }\n    parseQueryAtomList(mol, atom) {\n        let label = mol.atomElement(atom);\n        let not = false;\n        if (label.startsWith('NOT ')) {\n            label = label.substring(4);\n            not = true;\n        }\n        if (label.length < 2 || !label.startsWith('[') || !label.endsWith(']'))\n            return;\n        label = label.substring(1, label.length - 1);\n        let elements = label.split(',');\n        mol.setAtomElement(atom, '*');\n        if (!not)\n            QueryUtil.setQueryAtomElements(mol, atom, elements);\n        else\n            QueryUtil.setQueryAtomElementsNot(mol, atom, elements);\n    }\n    applySuperAtom(sup, residual) {\n        if (sup.name == null || Vec.isBlank(sup.atoms))\n            return;\n        let mask = Vec.booleanArray(true, this.mol.numAtoms);\n        for (let a of sup.atoms)\n            mask[a - 1] = false;\n        let name = sup.name;\n        let i;\n        while ((i = name.indexOf('\\\\S')) >= 0)\n            name = name.substring(0, i) + '{^' + name.substring(i + 2);\n        while ((i = name.indexOf('\\\\s')) >= 0)\n            name = name.substring(0, i) + '{' + name.substring(i + 2);\n        while ((i = name.indexOf('\\\\n')) >= 0)\n            name = name.substring(0, i) + '}' + name.substring(i + 2);\n        let [mod, abvAtom] = !sup.templateClass ? MolUtil.convertToAbbrevIndex(this.mol, mask, name) : [null, null];\n        if (mod == null) {\n            let keyval = {};\n            if (sup.bonds)\n                keyval['bonds'] = sup.bonds.join(' ');\n            if (sup.templateClass)\n                keyval['templateClass'] = sup.templateClass;\n            if (sup.natReplace)\n                keyval['natReplace'] = sup.natReplace;\n            if (sup.attachPoints)\n                keyval['attachPoints'] = sup.attachPoints.join(' ');\n            ForeignMolecule.markSgroupMultiAttach(this.mol, name, sup.atoms, keyval);\n            return;\n        }\n        this.mol = mod;\n        let map = Vec.maskMap(mask);\n        for (let res of residual) {\n            let subsumed = false;\n            for (let n = res.atoms.length - 1; n >= 0; n--) {\n                let atom = map[res.atoms[n] - 1] + 1;\n                if (atom == 0) {\n                    res.atoms = Vec.remove(res.atoms, n);\n                    subsumed = true;\n                }\n                else\n                    res.atoms[n] = atom;\n            }\n            if (subsumed)\n                res.atoms = Vec.sorted(Vec.append(res.atoms, abvAtom));\n        }\n    }\n    applyPolymerBlock(sup) {\n        if (sup.bracketType == 'MUL') {\n            let mult = parseInt(sup.name);\n            ForeignMolecule.markSgroupMultiRepeat(this.mol, mult, sup.atoms);\n            return;\n        }\n        if (sup.bracketType == 'DAT') {\n            if (sup.atoms != null)\n                ForeignMolecule.markSgroupData(this.mol, sup.name, sup.value, sup.unit, sup.query, sup.atoms);\n            return;\n        }\n        let poly = new PolymerBlock(this.mol);\n        let connect = null;\n        if (sup.connectType == null) { }\n        else if (sup.connectType == 'HT')\n            connect = PolymerBlockConnectivity.HeadToTail;\n        else if (sup.connectType == 'HH')\n            connect = PolymerBlockConnectivity.HeadToHead;\n        else if (sup.connectType == 'EU')\n            connect = PolymerBlockConnectivity.Random;\n        else\n            return;\n        let bondConn = null;\n        if (Vec.len(sup.bondConn) == 3) {\n            let b1 = sup.bondConn[0], b2 = sup.bondConn[2], b3 = sup.bondConn[1], b4 = 0;\n            for (let n = 1; n <= this.mol.numBonds; n++)\n                if (n != b1 && n != b2 && n != b3) {\n                    let in1 = sup.atoms.indexOf(this.mol.bondFrom(n)) >= 0, in2 = sup.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n                    if ((in1 && !in2) || (!in1 && in2)) {\n                        if (b4 > 0) {\n                            b4 = 0;\n                            break;\n                        }\n                        b4 = n;\n                    }\n                }\n            bondConn = [b1, b2, b3, b4];\n        }\n        else if (Vec.len(sup.bondConn) == 4) {\n            bondConn = sup.bondConn;\n        }\n        let unit = new PolymerBlockUnit(sup.atoms);\n        unit.connect = connect;\n        unit.bondConn = bondConn;\n        poly.createUnit(unit);\n    }\n    parseV3000Template(lines) {\n        let header = lines[0];\n        let bits = this.splitWithQuotes(header.substring('M  V30 TEMPLATE '.length));\n        let name = bits[1], natReplace = null;\n        for (let n = 2; n < bits.length; n++) {\n            if (bits[n].startsWith('NATREPLACE='))\n                natReplace = bits[n].substring(11);\n        }\n        lines[0] = '  0  0  0  0  0  0  0  0  0  0  0 V3000';\n        lines.push('M  END');\n        let mdl = new MDLMOLReader(lines.join('\\n'));\n        mdl.parseHeader = false;\n        mdl.parse();\n        return { name, natReplace, mol: mdl.mol };\n    }\n    withoutQuotes(str) {\n        if (str.length >= 2 && str.startsWith('\"') && str.endsWith('\"'))\n            return str.substring(1, str.length - 1);\n        return str;\n    }\n    splitWithQuotes(line) {\n        let segments = [];\n        let seg = '';\n        let depth = 0, quote = false;\n        for (let n = 0; n < line.length; n++) {\n            let ch = line.charAt(n);\n            if (ch == ' ' && depth == 0 && !quote) {\n                if (seg.length > 0)\n                    segments.push(seg);\n                seg = '';\n            }\n            else {\n                seg += ch;\n                if (ch == '\"')\n                    quote = !quote;\n                else if (ch == '(' || ch == '[')\n                    depth++;\n                else if (ch == ')' || ch == ']')\n                    depth--;\n            }\n        }\n        if (seg.length > 0)\n            segments.push(seg);\n        return segments;\n    }\n    unpackList(str) {\n        if (!str.startsWith('(') || !str.endsWith(')'))\n            return null;\n        str = str.substring(1, str.length - 1);\n        let values = [];\n        for (let bit of str.split(' '))\n            values.push(parseInt(bit));\n        if (values[0] != values.length - 1)\n            return null;\n        return Vec.remove(values, 0);\n    }\n    unpackStrings(str) {\n        if (!str.startsWith('(') || !str.endsWith(')'))\n            return null;\n        str = str.substring(1, str.length - 1);\n        let values = str.split(' ');\n        if (parseInt(values[0]) != values.length - 1)\n            return null;\n        return Vec.remove(values, 0);\n    }\n    countRingBonds(atom) {\n        let count = 0;\n        for (let b of this.mol.atomAdjBonds(atom))\n            if (this.mol.bondInRing(b))\n                count++;\n        return count;\n    }\n    countSubstitutions(atom) {\n        let count = 0;\n        for (let adj of this.mol.atomAdjList(atom))\n            if (this.mol.atomElement(adj) != 'H')\n                count++;\n        return count;\n    }\n}\nexport class MDLSDFReader {\n    constructor(strData) {\n        this.ds = new DataSheet();\n        this.upcastColumns = true;\n        this.pos = 0;\n        this.lines = strData.split(/\\r?\\n/);\n    }\n    parse() {\n        this.parseStream();\n        if (this.upcastColumns)\n            this.upcastStringColumns();\n        return this.ds;\n    }\n    parseStream() {\n        let ds = this.ds;\n        ds.appendColumn('Molecule', \"molecule\", 'Molecular structure');\n        let colName = -1;\n        let entry = [];\n        while (this.pos < this.lines.length) {\n            let line = this.lines[this.pos++];\n            if (!line.startsWith('$$$$')) {\n                entry.push(line);\n                continue;\n            }\n            let rn = ds.appendRow();\n            let molstr = '';\n            let pos = 0;\n            while (pos < entry.length) {\n                line = entry[pos];\n                if (line.startsWith('> '))\n                    break;\n                molstr += line + '\\n';\n                pos++;\n                if (line.startsWith('M\tEND'))\n                    break;\n            }\n            let mol = null, name = null;\n            try {\n                if (molstr.length > 0) {\n                    let mdl = new MDLMOLReader(molstr);\n                    mdl.parse();\n                    mol = mdl.mol;\n                    name = mdl.molName;\n                }\n            }\n            catch (ex) {\n            }\n            if (mol != null)\n                ds.setMolecule(rn, 0, mol);\n            if (name) {\n                if (colName < 0)\n                    colName = ds.appendColumn('Name', \"string\", 'Molecule name');\n                ds.setString(rn, colName, name);\n            }\n            if (rn == 0 && mol != null) {\n                let str1 = entry[0], str3 = entry[2];\n                if (str1.length >= 7 && str1.startsWith('$name=')) {\n                    ds.changeColumnName(0, str1.substring(6), ds.colDescr(0));\n                }\n                if (str3.length >= 8 && str3.startsWith('$title=')) {\n                    ds.title = str3.substring(7);\n                }\n            }\n            for (; pos + 1 < entry.length; pos += 3) {\n                let key = entry[pos], val = entry[pos + 1];\n                if (!key.startsWith('>'))\n                    continue;\n                let z = key.indexOf('<');\n                if (z < 0)\n                    continue;\n                key = key.substring(z + 1);\n                z = key.indexOf('>');\n                if (z < 0)\n                    continue;\n                key = key.substring(0, z);\n                if (key.length == 0)\n                    continue;\n                while (pos + 2 < entry.length && entry[pos + 2].length > 0) {\n                    val += '\\n' + entry[pos + 2];\n                    pos++;\n                }\n                let cn = ds.findColByName(key);\n                if (cn < 0)\n                    cn = ds.appendColumn(key, \"string\", '');\n                if (val.length == 0)\n                    ds.setToNull(rn, cn);\n                else\n                    ds.setString(rn, cn, val);\n            }\n            entry = [];\n        }\n        if (ds.numRows == 0)\n            this.ds = null;\n    }\n    upcastStringColumns() {\n        let ds = this.ds;\n        for (let i = 0; i < ds.numCols; i++)\n            if (ds.colType(i) == \"string\") {\n                let allnull = true, allreal = true, allint = true, allbool = true;\n                for (let j = 0; j < ds.numRows; j++) {\n                    if (!allreal && !allint && !allbool)\n                        break;\n                    if (ds.isNull(j, i))\n                        continue;\n                    allnull = false;\n                    let val = ds.getString(j, i);\n                    if (allbool) {\n                        let lc = val.toLowerCase();\n                        if (lc != 'true' && lc != 'false')\n                            allbool = false;\n                    }\n                    if (allint) {\n                        let int = parseInt(val);\n                        if (!isFinite(int) || int != parseFloat(val))\n                            allint = false;\n                    }\n                    if (allreal) {\n                        if (!isFinite(parseFloat(val)))\n                            allreal = false;\n                    }\n                }\n                if (allnull) { }\n                else if (allint)\n                    ds.changeColumnType(i, \"integer\");\n                else if (allreal)\n                    ds.changeColumnType(i, \"real\");\n                else if (allbool)\n                    ds.changeColumnType(i, \"boolean\");\n            }\n    }\n}\n//# sourceMappingURL=MDLReader.js.map","import { Vec } from '../util/Vec';\nimport { BondArtifact } from '../mol/BondArtifact';\nimport { ForeignMolecule, ForeignMoleculeTransient } from '../mol/ForeignMolecule';\nimport { MDLMOL_VALENCE } from './MDLReader';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity } from '../mol/PolymerBlock';\nimport { QueryUtil } from '../mol/QueryUtil';\nimport { StereoGroup } from '../mol/StereoGroup';\nconst VPFX = 'M  V30 ';\nexport class MDLMOLWriter {\n    constructor(mol) {\n        this.mol = mol;\n        this.includeHeader = true;\n        this.includeCounts = true;\n        this.includeEnd = true;\n        this.overallStereoAbsolute = true;\n        this.enhancedFields = false;\n        this.chargeSeparate = false;\n        this.abbrevSgroups = true;\n        this.polymerBlocks = true;\n        this.molName = '';\n        this.scsrTemplates = null;\n        this.sgroups = [];\n        this.lines = [];\n    }\n    write() {\n        if (this.includeHeader) {\n            this.lines.push(this.molName);\n            this.lines.push('Generated by WebMolKit');\n            this.lines.push('');\n        }\n        this.writeCTAB();\n        return this.lines.join('\\n');\n    }\n    writeV3000() {\n        if (this.includeHeader) {\n            this.lines.push(this.molName);\n            this.lines.push('Generated by WebMolKit');\n            this.lines.push('');\n        }\n        this.writeCTAB3000();\n        return this.lines.join('\\n');\n    }\n    writeEither() {\n        let triggered = StereoGroup.hasStereoGroups(this.mol) || this.mol.numAtoms >= 1000 || this.mol.numBonds >= 1000 || Vec.notBlank(this.scsrTemplates);\n        if (!triggered)\n            for (let n = 1; n <= this.mol.numBonds; n++)\n                if (this.mol.bondOrder(n) == 0 && QueryUtil.queryBondOrders(this.mol, n) == null) {\n                    triggered = true;\n                    break;\n                }\n        if (triggered)\n            return this.writeV3000();\n        else\n            return this.write();\n    }\n    getResult() {\n        return this.lines.join('\\n');\n    }\n    writeCTAB() {\n        var _a;\n        let mol = this.mol = this.mol.clone();\n        mol.keepTransient = true;\n        if (MolUtil.hasAnyAbbrev(mol) || ForeignMolecule.hasAnySgroupMultiAttach(mol) || ForeignMolecule.hasAnySgroupMultiRepeat(mol) || ForeignMolecule.hasAnySgroupData(mol)) {\n            if (this.abbrevSgroups)\n                this.partialAbbrevExpansion();\n            else\n                MolUtil.expandAbbrevs(mol, true);\n            this.prepareSgroups();\n        }\n        let atomList1 = [], atomList2 = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let elements = null;\n            let logic = 'F';\n            elements = QueryUtil.queryAtomElements(mol, n);\n            if (elements == null) {\n                elements = QueryUtil.queryAtomElementsNot(mol, n);\n                logic = 'T';\n            }\n            if (elements == null)\n                continue;\n            mol.setAtomElement(n, 'L');\n            let line = this.intrpad(n, 3) + ' ' + logic + '  ' + this.intrpad(elements.length, 3);\n            for (let el of elements)\n                line += this.intrpad(Molecule.elementAtomicNumber(el), 4);\n            atomList1.push(line);\n            line = 'M  ALS ' + this.intrpad(n, 3) + this.intrpad(elements.length, 3) + ' ' + logic + ' ';\n            for (let el of elements)\n                line += this.pad(el, 4);\n            atomList2.push(line);\n        }\n        this.lines.push(this.intrpad(mol.numAtoms, 3) + this.intrpad(mol.numBonds, 3) + this.intrpad(atomList1.length, 3) +\n            '  0' + (this.overallStereoAbsolute ? '  1' : '  0') + '  0  0  0  0  0999 V2000');\n        let chgidx = [], chgval = [];\n        let radidx = [], radval = [];\n        let isoidx = [], isoval = [];\n        let rgpidx = [], rgpval = [];\n        let hydidx = [], hydval = [];\n        let zchidx = [], zchval = [];\n        let zboidx = [], zboval = [];\n        let rbcidx = [], rbcval = [];\n        let subidx = [], subval = [];\n        let unsidx = [], unsval = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n), y = mol.atomY(n);\n            let z = mol.is3D() ? mol.atomZ(n) : 0;\n            let line = this.rpad(x.toFixed(4), 10) + this.rpad(y.toFixed(4), 10) + this.rpad(z.toFixed(4), 10);\n            let el = mol.atomElement(n);\n            let str = el;\n            if (str.length > 3)\n                str = str.substring(0, 3);\n            if (str.length > 1 && str.charAt(0) == 'R' && str.charAt(1) >= '0' && str.charAt(1) <= '9') {\n                rgpidx.push(n);\n                rgpval.push(parseInt(str.substring(1)));\n                str = 'R#';\n            }\n            while (str.length < 4)\n                str += ' ';\n            line += ' ' + str + '0';\n            let chg = mol.atomCharge(n), rad = mol.atomUnpaired(n), mapnum = mol.atomMapNum(n);\n            if (chg >= -3 && chg <= -1)\n                chg = 4 - chg;\n            else if (chg == 0 && rad == 2)\n                chg = 4;\n            else if (chg >= 1 && chg <= 3)\n                chg = 4 - chg;\n            else\n                chg = 0;\n            let qhyd = QueryUtil.queryAtomHydrogens(mol, n);\n            let hyd = 0;\n            if (Vec.len(qhyd) == 1)\n                hyd = qhyd[0] + 1;\n            let val = this.mdlValence(mol, n, 15);\n            line += this.intrpad(chg, 3) + '  0' + this.intrpad(hyd, 3) + '  0' + this.intrpad(val, 3) + '  0  0  0' + this.intrpad(mapnum, 3) + '  0  0';\n            this.lines.push(line);\n            if (mol.atomCharge(n) != 0) {\n                chgidx.push(n);\n                chgval.push(mol.atomCharge(n));\n            }\n            if (this.enhancedFields) {\n                if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN) {\n                    hydidx.push(n);\n                    hydval.push(mol.atomHExplicit(n));\n                }\n            }\n            if (rad == 1) {\n                radidx.push(n);\n                radval.push(2);\n            }\n            if (rad == 2) {\n                radidx.push(n);\n                radval.push(1);\n            }\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) {\n                isoidx.push(n);\n                isoval.push(mol.atomIsotope(n));\n            }\n            let qrbc = QueryUtil.queryAtomRingBonds(mol, n), qsub = QueryUtil.queryAtomAdjacency(mol, n);\n            let quns = QueryUtil.queryAtomUnsaturated(mol, n);\n            if (Vec.len(qrbc) == 1) {\n                rbcidx.push(n);\n                rbcval.push(qrbc[0] == 0 ? -1 : qrbc[0]);\n            }\n            if (Vec.len(qsub) == 1) {\n                subidx.push(n);\n                subval.push(qsub[0] == 0 ? -1 : qsub[0]);\n            }\n            if (quns == true) {\n                unsidx.push(n);\n                unsval.push(1);\n            }\n        }\n        let maskArom = ForeignMolecule.noteAromaticBonds(mol);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let order = mol.bondOrder(n), type = order;\n            let qbond = Vec.sorted((_a = QueryUtil.queryBondOrders(mol, n)) !== null && _a !== void 0 ? _a : []);\n            if (maskArom[n - 1] || Vec.equals(qbond, [-1]))\n                type = 4;\n            else if (Vec.equals(qbond, [1, 2]))\n                type = 5;\n            else if (Vec.equals(qbond, [-1, 1]))\n                type = 6;\n            else if (Vec.equals(qbond, [-1, 2]))\n                type = 7;\n            else if (Vec.equals(qbond, [-1, 0, 1, 2, 3]))\n                type = 8;\n            else if (type > 3)\n                type = 3;\n            let stereo = mol.bondType(n);\n            if (stereo == Molecule.BONDTYPE_NORMAL) { }\n            else if (stereo == Molecule.BONDTYPE_INCLINED) {\n                stereo = 1;\n            }\n            else if (stereo == Molecule.BONDTYPE_DECLINED) {\n                stereo = 6;\n            }\n            else if (stereo == Molecule.BONDTYPE_UNKNOWN) {\n                if (type == 1)\n                    stereo = 4;\n                else\n                    stereo = 3;\n            }\n            else\n                stereo = 0;\n            let line = this.intrpad(mol.bondFrom(n), 3) + this.intrpad(mol.bondTo(n), 3) +\n                this.intrpad(type, 3) + this.intrpad(stereo, 3) + '  0  0  0';\n            this.lines.push(line);\n            if (this.enhancedFields) {\n                if ((order < 1 || order > 3) || type != order && Vec.isBlank(qbond)) {\n                    zboidx.push(n);\n                    zboval.push(order);\n                }\n            }\n        }\n        this.lines.push(...atomList1);\n        this.lines.push(...atomList2);\n        this.writeMBlockPair('CHG', chgidx, chgval);\n        this.writeMBlockPair('RAD', radidx, radval);\n        this.writeMBlockPair('ISO', isoidx, isoval);\n        this.writeMBlockPair('RGP', rgpidx, rgpval);\n        this.writeMBlockPair('HYD', hydidx, hydval);\n        this.writeMBlockPair('ZCH', zchidx, zchval);\n        this.writeMBlockPair('ZBO', zboidx, zboval);\n        this.writeMBlockPair('RBC', rbcidx, rbcval);\n        this.writeMBlockPair('SUB', subidx, subval);\n        this.writeMBlockPair('UNS', unsidx, unsval);\n        if (this.enhancedFields) {\n            let artifacts = new BondArtifact(this.mol);\n            let idx = 0;\n            for (let path of artifacts.getResPaths())\n                this.writeMBlockFlat('ZPA', ++idx, path.atoms);\n            for (let ring of artifacts.getResRings())\n                this.writeMBlockFlat('ZRI', ++idx, ring.atoms);\n            for (let arene of artifacts.getArenes())\n                this.writeMBlockFlat('ZAR', ++idx, Vec.prepend(arene.atoms, arene.centre));\n        }\n        let inSgroup = Vec.booleanArray(false, mol.numAtoms);\n        for (let s = 0; s < this.sgroups.length; s++) {\n            let sg = this.sgroups[s];\n            for (let n of sg.atoms)\n                inSgroup[n - 1] = true;\n            let sidx = this.intrpad(s + 1, 4);\n            this.lines.push('M  STY  1' + sidx + ' ' + sg.type);\n            for (let n = 0; n < sg.atoms.length; n += 15) {\n                let sz = Math.min(sg.atoms.length - n, 15);\n                let line = 'M  SAL' + sidx + this.intrpad(sz, 3);\n                for (let i = 0; i < sz; i++)\n                    line += this.intrpad(sg.atoms[n + i], 4);\n                this.lines.push(line);\n            }\n            if (sg.type != 'DAT')\n                this.lines.push('M  SMT' + sidx + ' ' + sg.name);\n            if (sg.type == 'MUL') {\n                let mult = parseInt(sg.name), unit = sg.atoms.length / mult;\n                for (let n = 0; n < unit; n += 15) {\n                    let sz = Math.min(unit - n, 15);\n                    let line = 'M  SPA' + sidx + this.intrpad(sz, 3);\n                    for (let i = 0; i < sz; i++)\n                        line += this.intrpad(sg.atoms[n + i], 4);\n                    this.lines.push(line);\n                }\n                if (sg.parent > 0)\n                    this.lines.push('M  SPL    1' + sidx + this.intrpad(sg.parent, 4));\n            }\n            if (sg.type == 'DAT') {\n                this.lines.push('M  SDT' + sidx + ' ' + this.pad(sg.name, 32) + this.pad(sg.unit, 20) + sg.query);\n                this.lines.push('M  SED' + sidx + ' ' + sg.value);\n            }\n        }\n        if (this.polymerBlocks)\n            this.encodePolymerBlocks(this.sgroups.length);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomElement(n).length > 2) {\n                this.lines.push('A  ' + this.intrpad(n, 3));\n                this.lines.push(mol.atomElement(n));\n            }\n        if (this.includeEnd)\n            this.lines.push('M  END');\n    }\n    writeMBlockPair(token, idx, val) {\n        const sz = idx.length;\n        for (let i = 0; i < sz; i += 8) {\n            let count = Math.min(8, sz - i);\n            let line = 'M  ' + token + this.intrpad(count, 3);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(idx[i + j], 4) + this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    writeMBlockFlat(token, idx, val) {\n        const sz = val.length;\n        for (let i = 0; i < sz; i += 15) {\n            let count = Math.min(15, sz - i);\n            let line = 'M  ' + token + this.intrpad(count, 3) + this.intrpad(idx, 4);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    writeMBlockFlatIdxFirst(token, idx, val) {\n        const sz = val.length;\n        for (let i = 0; i < sz; i += 15) {\n            let count = Math.min(15, sz - i);\n            let line = 'M  ' + token + this.intrpad(idx, 4) + this.intrpad(count, 3);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    intrpad(num, sz) {\n        return this.rpad(num.toString(), sz);\n    }\n    rpad(str, sz) {\n        while (str.length < sz)\n            str = ' ' + str;\n        return str;\n    }\n    pad(str, sz) {\n        while (str.length < sz)\n            str += ' ';\n        return str;\n    }\n    mdlValence(mol, atom, zeroVal) {\n        let marked = ForeignMolecule.noteExplicitValence(mol, atom);\n        if (marked != null)\n            return marked > 0 ? marked : zeroVal;\n        let hyd = mol.atomHydrogens(atom), el = mol.atomElement(atom);\n        let options = MDLMOL_VALENCE[el];\n        if (options == null && hyd == 0)\n            return 0;\n        let chg = mol.atomCharge(atom);\n        let chgmod = (el == 'C' || el == 'H') ? Math.abs(chg) : el == 'B' ? -Math.abs(chg) : -chg;\n        let bondSum = 0;\n        for (let b of mol.atomAdjBonds(atom))\n            bondSum += mol.bondOrder(b);\n        let nativeVal = chgmod + hyd + bondSum;\n        if (options)\n            for (let optVal of options)\n                if (optVal >= chgmod + bondSum) {\n                    if (optVal == nativeVal)\n                        return 0;\n                    break;\n                }\n        let val = nativeVal - chgmod;\n        return val <= 0 || val > 14 ? zeroVal : val;\n    }\n    partialAbbrevExpansion() {\n        const { mol } = this;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                let frag = MolUtil.getAbbrev(mol, n);\n                if (frag == null || mol.atomAdjCount(n) != 1) {\n                    MolUtil.clearAbbrev(mol, n);\n                    continue;\n                }\n                if (MolUtil.hasAnyAbbrev(frag)) {\n                    MolUtil.expandAbbrevs(frag, true);\n                    MolUtil.setAbbrev(mol, n, frag);\n                }\n                let order = mol.bondOrder(mol.atomAdjBonds(n)[0]);\n                if (frag.atomAdjCount(1) == 1 && order == frag.bondOrder(frag.atomAdjBonds(1)[0]))\n                    continue;\n                MolUtil.expandOneAbbrev(mol, n, true);\n                n--;\n            }\n    }\n    prepareSgroups() {\n        const { mol } = this;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomMapNum(n) < 0)\n                mol.setAtomMapNum(n, 0);\n        let next = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                this.sgroups.push({ type: 'SUP', name: mol.atomElement(n), atoms: null });\n                let mask = MolUtil.expandOneAbbrev(mol, n, true);\n                if (mask == null)\n                    continue;\n                next--;\n                for (let i = 0; i < mask.length; i++)\n                    if (mask[i])\n                        mol.setAtomMapNum(i + 1, next);\n                n--;\n            }\n        for (let idx = -1, p = 0; idx >= next; idx--, p++) {\n            let atoms = [];\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomMapNum(n) == idx) {\n                    atoms.push(n);\n                    mol.setAtomMapNum(n, 0);\n                }\n            this.sgroups[p].atoms = atoms;\n        }\n        for (let ma of ForeignMolecule.noteAllSgroupMultiAttach(mol)) {\n            let sg = { type: 'SUP', name: ma.name, atoms: ma.atoms };\n            let str = ma.keyval['bonds'];\n            if (str)\n                sg.bonds = str.split(' ').map((v) => parseInt(v));\n            sg.templateClass = ma.keyval['templateClass'];\n            sg.natReplace = ma.keyval['natReplace'];\n            str = ma.keyval['attachPoints'];\n            if (str)\n                sg.attachPoints = str.split(' ');\n            this.sgroups.push(sg);\n        }\n        for (let mr of ForeignMolecule.noteAllSgroupMultiRepeat(mol))\n            this.sgroups.push({ type: 'MUL', name: mr.mult.toString(), atoms: mr.atoms });\n        for (let dat of ForeignMolecule.noteAllSgroupData(mol))\n            this.sgroups.push({ type: 'DAT', name: dat.name, value: dat.value, unit: dat.unit, query: dat.query, atoms: dat.atoms });\n        for (let n = 0; n < this.sgroups.length; n++) {\n            let sg = this.sgroups[n];\n            if (sg.type != 'MUL')\n                continue;\n            let bestIdx = -1, bestSize = Number.MAX_SAFE_INTEGER;\n            skip: for (let i = 0; i < this.sgroups.length; i++)\n                if (i != n) {\n                    let look = this.sgroups[i];\n                    if (look.type != 'MUL' || look.atoms.length >= bestSize)\n                        continue;\n                    for (let a of sg.atoms)\n                        if (!look.atoms.includes(a))\n                            continue skip;\n                    bestIdx = i;\n                    bestSize = look.atoms.length;\n                }\n            if (bestIdx >= 0)\n                sg.parent = bestIdx + 1;\n        }\n    }\n    encodePolymerBlocks(idx) {\n        let polymers = new PolymerBlock(this.mol);\n        for (let id of polymers.getIDList()) {\n            let unit = polymers.getUnit(id);\n            let sidx = this.intrpad(++idx, 4);\n            this.lines.push('M  STY  1' + sidx + ' SRU');\n            if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                this.lines.push('M  SCN  1' + sidx + ' HT ');\n            else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                this.lines.push('M  SCN  1' + sidx + ' HH ');\n            else if (unit.connect == PolymerBlockConnectivity.Random)\n                this.lines.push('M  SCN  1' + sidx + ' EU ');\n            this.writeMBlockFlatIdxFirst('SAL', idx, unit.atoms);\n            let bonds = null;\n            for (let n = 1; n <= this.mol.numBonds; n++) {\n                let fl1 = unit.atoms.indexOf(this.mol.bondFrom(n)) >= 0, fl2 = unit.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n                if ((fl1 && !fl2) || (!fl1 && fl2))\n                    bonds = Vec.append(bonds, n);\n            }\n            if (bonds != null)\n                this.writeMBlockFlatIdxFirst('SBL', idx, bonds);\n            if (Vec.len(unit.bondConn) == 4) {\n                let bcrs = [unit.bondConn[0], unit.bondConn[2], unit.bondConn[1]];\n                this.writeMBlockFlatIdxFirst('CRS', idx, bcrs);\n            }\n            this.lines.push('M  SMT' + sidx + ' n');\n        }\n    }\n    writeCTAB3000() {\n        var _a;\n        let mol = this.mol;\n        if (MolUtil.hasAnyAbbrev(mol) || ForeignMolecule.hasAnySgroupMultiAttach(mol) || ForeignMolecule.hasAnySgroupMultiRepeat(mol) || ForeignMolecule.hasAnySgroupData(mol)) {\n            mol = this.mol = mol.clone();\n            mol.keepTransient = true;\n            if (this.abbrevSgroups)\n                this.partialAbbrevExpansion();\n            else\n                MolUtil.expandAbbrevs(mol, true);\n            this.prepareSgroups();\n        }\n        let sgroupText = this.populateV3000Sgroups();\n        if (this.includeCounts)\n            this.lines.push('  0  0  0     0  0            999 V3000');\n        this.lines.push(VPFX + 'BEGIN CTAB');\n        this.lines.push(VPFX + `COUNTS ${mol.numAtoms} ${mol.numBonds} ${sgroupText.length} 0 ${this.overallStereoAbsolute ? 1 : 0}`);\n        this.lines.push(VPFX + 'BEGIN ATOM');\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let label = mol.atomElement(n);\n            let qel = QueryUtil.queryAtomElements(mol, n);\n            if (qel != null)\n                label = '[' + qel.join(',') + ']';\n            else {\n                qel = QueryUtil.queryAtomElementsNot(mol, n);\n                if (qel != null)\n                    label = 'NOT [' + qel.join(',') + ']';\n            }\n            if (label.includes(' '))\n                label = `\"${label}\"`;\n            let x = mol.atomX(n), y = mol.atomY(n);\n            let z = mol.is3D() ? mol.atomZ(n) : 0;\n            let mapnum = mol.atomMapNum(n), chg = mol.atomCharge(n), unp = mol.atomUnpaired(n);\n            let isotope = mol.atomIsotope(n), val = this.mdlValence(mol, n, -1);\n            let line = `${VPFX}${n} ${label} ${x.toFixed(4)} ${y.toFixed(4)} ${z.toFixed(4)} ${mapnum}`;\n            if (chg != 0)\n                line += ' CHG=' + chg;\n            if (unp == 1)\n                line += ' RAD=2';\n            else if (unp == 2)\n                line += ' RAD=1';\n            if (isotope != 0)\n                line += ' MASS=' + isotope;\n            if (val != 0)\n                line += ' VAL=' + val;\n            let qhyd = QueryUtil.queryAtomHydrogens(mol, n), qrbc = QueryUtil.queryAtomRingBonds(mol, n), qsub = QueryUtil.queryAtomAdjacency(mol, n);\n            let quns = QueryUtil.queryAtomUnsaturated(mol, n);\n            if (Vec.len(qhyd) == 1)\n                line += ' HCOUNT=' + (qhyd[0] == 0 ? -1 : qhyd[0]);\n            if (Vec.len(qrbc) == 1)\n                line += ' RBCNT=' + (qrbc[0] == 0 ? -1 : qrbc[0]);\n            if (Vec.len(qsub) == 1)\n                line += ' SUBST=' + (qsub[0] == 0 ? -1 : qsub[0]);\n            if (quns == true)\n                line += ' UNSAT=1';\n            for (let trans of mol.atomTransient(n)) {\n                if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRClass))\n                    line += ' CLASS=' + trans.substring(ForeignMoleculeTransient.AtomSCSRClass.length + 1);\n                else if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRSeqID))\n                    line += ' SEQID=' + trans.substring(ForeignMoleculeTransient.AtomSCSRSeqID.length + 1);\n                else if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRAttchOrd)) {\n                    let bits = trans.substring(ForeignMoleculeTransient.AtomSCSRAttchOrd.length + 1).split(',');\n                    line += ' ATTCHORD=' + this.packV3000Strings(bits);\n                }\n            }\n            this.lines.push(line);\n        }\n        this.lines.push(VPFX + 'END ATOM');\n        if (mol.numBonds > 0) {\n            this.lines.push(VPFX + 'BEGIN BOND');\n            let maskArom = ForeignMolecule.noteAromaticBonds(mol);\n            let maskHBond = ForeignMolecule.noteZeroHydrogenBonds(mol);\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n                let order = mol.bondOrder(n), type = order;\n                let qbond = Vec.sorted((_a = QueryUtil.queryBondOrders(mol, n)) !== null && _a !== void 0 ? _a : []);\n                if (maskArom[n - 1] || Vec.equals(qbond, [-1]))\n                    type = 4;\n                else if (Vec.equals(qbond, [1, 2]))\n                    type = 5;\n                else if (Vec.equals(qbond, [-1, 1]))\n                    type = 6;\n                else if (Vec.equals(qbond, [-1, 2]))\n                    type = 7;\n                else if (Vec.equals(qbond, [-1, 0, 1, 2, 3]))\n                    type = 8;\n                else if (type == 0) {\n                    if (!maskHBond[n - 1])\n                        type = 9;\n                    else\n                        type = 10;\n                }\n                else if (type > 3)\n                    type = 3;\n                let stereo = mol.bondType(n);\n                let line = `${VPFX}${n} ${type} ${bfr} ${bto}`;\n                if (stereo == Molecule.BONDTYPE_INCLINED)\n                    line += ' CFG=1';\n                else if (stereo == Molecule.BONDTYPE_DECLINED)\n                    line += ' CFG=3';\n                else if (stereo == Molecule.BONDTYPE_UNKNOWN)\n                    line += ' CFG=2';\n                if (order == 0 && !maskHBond[n - 1])\n                    line += ' DISP=COORD';\n                this.lines.push(line);\n            }\n            this.lines.push(VPFX + 'END BOND');\n        }\n        if (sgroupText.length > 0) {\n            this.lines.push(VPFX + 'BEGIN SGROUP');\n            this.lines.push(...sgroupText);\n            this.lines.push(VPFX + 'END SGROUP');\n        }\n        let collections = [];\n        let stereoGroup = new StereoGroup(mol);\n        let racidx = 0, relidx = 0;\n        for (let atoms of stereoGroup.getRacemicAtoms())\n            collections.push(VPFX + 'MDLV30/STERAC' + (++racidx) + ' ATOMS=' + this.packV3000List(atoms));\n        for (let atoms of stereoGroup.getRelativeAtoms())\n            collections.push(VPFX + 'MDLV30/STEREL' + (++relidx) + ' ATOMS=' + this.packV3000List(atoms));\n        if (collections.length > 0) {\n            this.lines.push(VPFX + 'BEGIN COLLECTION');\n            this.lines.push(...collections);\n            this.lines.push(VPFX + 'END COLLECTION');\n        }\n        this.lines.push(VPFX + 'END CTAB');\n        if (Vec.notBlank(this.scsrTemplates))\n            this.populateSCSRTemplates();\n        if (this.includeEnd)\n            this.lines.push('M  END');\n    }\n    populateV3000Sgroups() {\n        let mol = this.mol;\n        let lines = [];\n        for (let s = 0; s < this.sgroups.length; s++) {\n            let sg = this.sgroups[s];\n            let sid = lines.length + 1;\n            let txt = `${VPFX}${sid} ${sg.type} 0`;\n            if (sg.type == 'SUP') {\n                txt += ' LABEL=' + (sg.name.includes(' ') ? `\"${sg.name}\"` : sg.name);\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                if (sg.bonds)\n                    txt += ' XBONDS=' + this.packV3000List(sg.bonds);\n                if (sg.templateClass)\n                    txt += ' CLASS=' + sg.templateClass;\n                if (sg.natReplace)\n                    txt += ' NATREPLACE=' + sg.natReplace;\n                if (sg.attachPoints) {\n                    for (let n = 0; n + 2 < sg.attachPoints.length; n += 3) {\n                        let v1 = sg.attachPoints[n], v2 = sg.attachPoints[n + 1], v3 = sg.attachPoints[n + 2];\n                        txt += ` SAP=(3 ${v1} ${v2} ${v3})`;\n                    }\n                }\n            }\n            else if (sg.type == 'MUL') {\n                let mult = parseInt(sg.name), unit = sg.atoms.length / mult;\n                txt += ' MULT=' + sg.name;\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                txt += ' PATOMS=' + this.packV3000List(sg.atoms.slice(0, unit));\n                if (sg.parent > 0)\n                    txt += ' PARENT=' + sg.parent;\n            }\n            else if (sg.type == 'DAT') {\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                txt += ' FIELDNAME=' + (sg.name.includes(' ') ? `\"${sg.name}\"` : sg.name);\n                txt += ' FIELDDATA=' + (sg.value.includes(' ') ? `\"${sg.value}\"` : sg.value);\n            }\n            lines.push(txt);\n        }\n        if (this.polymerBlocks) {\n            let polymers = new PolymerBlock(mol);\n            for (let id of polymers.getIDList()) {\n                let sid = lines.length + 1;\n                let unit = polymers.getUnit(id);\n                let txt = `${VPFX}${sid} SRU 0`;\n                txt += ' ATOMS=' + this.packV3000List(unit.atoms);\n                if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                    txt += ' CONNECT=HT';\n                else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                    txt += ' CONNECT=HH';\n                else if (unit.connect == PolymerBlockConnectivity.Random)\n                    txt += ' CONNECT=EU';\n                let bonds = [];\n                for (let n = 1; n <= mol.numBonds; n++) {\n                    let fl1 = unit.atoms.includes(mol.bondFrom(n)), fl2 = unit.atoms.includes(mol.bondTo(n));\n                    if ((fl1 && !fl2) || (!fl1 && fl2))\n                        bonds.push(n);\n                }\n                if (bonds.length > 0)\n                    txt += ' BONDS=' + this.packV3000List(bonds);\n                if (unit.bondConn != null)\n                    txt += ' XBCORR=' + this.packV3000List(unit.bondConn);\n                lines.push(txt);\n            }\n        }\n        return lines;\n    }\n    populateSCSRTemplates() {\n        this.lines.push(VPFX + 'BEGIN TEMPLATE');\n        for (let n = 0; n < this.scsrTemplates.length; n++) {\n            var defn = this.scsrTemplates[n];\n            let line = VPFX + 'TEMPLATE ' + (n + 1) + ' ' + defn.name;\n            if (defn.natReplace)\n                line += ' NATREPLACE=' + defn.natReplace;\n            this.lines.push(line);\n            var tmdl = new MDLMOLWriter(defn.mol);\n            tmdl.includeHeader = false;\n            tmdl.includeCounts = false;\n            tmdl.includeEnd = false;\n            let molfile = tmdl.writeV3000();\n            for (line of molfile.trimEnd().split('\\n'))\n                this.lines.push(line);\n        }\n        this.lines.push(VPFX + 'END TEMPLATE');\n    }\n    packV3000List(values) {\n        let str = '(' + values.length;\n        for (let v of values)\n            str += ' ' + v;\n        return str + ')';\n    }\n    packV3000Strings(values) {\n        let str = '(' + values.length;\n        for (let v of values)\n            str += ' ' + v;\n        return str + ')';\n    }\n}\nexport class MDLSDFWriter {\n    constructor(ds) {\n        this.ds = ds;\n        this.enhancedFields = true;\n        this.chargeSeparate = false;\n        this.abbrevSgroups = true;\n        this.lines = [];\n    }\n    write() {\n        let ds = this.ds, lines = this.lines;\n        let colMol = this.ds.firstColOfType(\"molecule\");\n        for (let i = 0; i < ds.numRows; i++) {\n            let mol = colMol < 0 ? null : ds.getMolecule(i, colMol);\n            if (mol != null) {\n                let wtr = new MDLMOLWriter(mol);\n                wtr.enhancedFields = this.enhancedFields;\n                wtr.chargeSeparate = this.chargeSeparate;\n                wtr.abbrevSgroups = this.abbrevSgroups;\n                let molstr = wtr.write();\n                lines.push(molstr);\n            }\n            for (let j = 0; j < ds.numCols; j++)\n                if (j != colMol && ds.notNull(i, j)) {\n                    let ct = ds.colType(j);\n                    let val = '';\n                    if (ct == \"string\")\n                        val = ds.getString(i, j);\n                    else if (ct == \"integer\")\n                        val = ds.getInteger(i, j).toString();\n                    else if (ct == \"real\")\n                        val = ds.getReal(i, j).toString();\n                    else if (ct == \"boolean\")\n                        val = ds.getBoolean(i, j) ? 'true' : 'false';\n                    if (val != '') {\n                        lines.push('> <' + ds.colName(j) + '>');\n                        lines.push(val);\n                        lines.push('');\n                    }\n                }\n            lines.push('$$$$');\n        }\n        return lines.join('\\n');\n    }\n    getResult() {\n        return this.lines.join('\\n');\n    }\n}\n//# sourceMappingURL=MDLWriter.js.map","import { MDLMOLReader } from './MDLReader';\nimport { MDLMOLWriter } from './MDLWriter';\nimport { Molecule } from '../mol/Molecule';\nconst ESCAPED_CHARS = '\\n\\t\\\\,=';\nfunction escape(str) {\n    let buff = null;\n    for (let n = 0; n < str.length; n++) {\n        let ch = str.charAt(n);\n        let escape = ESCAPED_CHARS.includes(ch), ctrl = ch.charCodeAt(0) < 32;\n        if (buff == null && (escape || ctrl)) {\n            buff = str.substring(0, n);\n        }\n        if (escape) {\n            if (ch == '\\n')\n                buff += '\\\\n';\n            else if (ch == '\\t')\n                buff += '\\\\t';\n            else\n                buff += '\\\\' + ch;\n        }\n        else if (ctrl) { }\n        else if (buff != null)\n            buff += ch;\n    }\n    return buff !== null && buff !== void 0 ? buff : str;\n}\nfunction writeKeyVals(keyvals) {\n    let str = '';\n    let multiline = [];\n    for (let kv of keyvals) {\n        if (!kv.includes('\\n'))\n            str += ',' + escape(kv);\n        else\n            multiline.push(kv);\n    }\n    str += '\\n';\n    for (let kv of multiline) {\n        let lines = kv.trimEnd().split('\\n');\n        for (let n = 0; n < lines.length; n++) {\n            str += `${n == 0 ? '.' : ':'}${lines[n]}\\n`;\n        }\n    }\n    return str;\n}\nfunction readNextChunk(line, pos, term, mandatory) {\n    let end = pos, sz = line.length;\n    if (pos >= sz) {\n        if (mandatory)\n            throw new Error('Molecule missing line fragment');\n        return null;\n    }\n    let escaped = false;\n    while (end < sz) {\n        let ch = line.charAt(end);\n        if (ch == '\\\\') {\n            if (end == sz - 1)\n                throw new Error('Escape character \\\\ at end of line');\n            escaped = true;\n            end += 2;\n        }\n        else if (ch == term)\n            break;\n        else\n            end++;\n    }\n    if (!escaped)\n        return { str: line.substring(pos, end), pos: end };\n    var str = '';\n    for (let n = pos; n < end; n++) {\n        let ch = line.charAt(n);\n        if (ch == '\\\\') {\n            ch = line.charAt(++n);\n            if (ch == 'n')\n                str += '\\n';\n            else if (ch == 't')\n                str += '\\t';\n            else\n                str += ch;\n        }\n        else\n            str += ch;\n    }\n    return { str, pos: end };\n}\nclass MoleculeStream {\n    static readUnknown(strData) {\n        if (strData.startsWith('\"')) {\n            try {\n                let jsonStr = JSON.parse(strData);\n                let mol = MoleculeStream.readNative(jsonStr);\n                if (mol)\n                    return mol;\n            }\n            catch (ex) { }\n        }\n        let mol = MoleculeStream.readNative(strData);\n        if (mol)\n            return mol;\n        try {\n            mol = MoleculeStream.readMDLMOL(strData);\n        }\n        catch (e) { }\n        return mol;\n    }\n    static readNative(strData) {\n        if (strData.startsWith('SketchEl!'))\n            return this.readNativeLegacy(strData);\n        let mol = new Molecule();\n        mol.keepTransient = true;\n        let lines = strData.split(/\\r?\\n/);\n        let match = lines[0].match(/^Elements\\!\\((\\d+),(\\d+)\\)$/);\n        if (!match)\n            return null;\n        let numAtoms = parseInt(match[1]), numBonds = parseInt(match[2]);\n        if (!(numAtoms >= 0))\n            throw new Error(`Invalid atom count: ${match[1]}`);\n        if (!(numBonds >= 0))\n            throw new Error(`Invalid bond count: ${match[2]}`);\n        const MSG_PREMATURE = 'Molecule atom content ends prematurely';\n        const MSG_UNEXPECTED = 'Molecule unexpected end tag';\n        const parseIntHard = (str) => {\n            let v = parseInt(str);\n            if (Number.isNaN(v))\n                throw new Error(`Malformed integer: ${str}`);\n            return v;\n        };\n        const parseFloatHard = (str) => {\n            let v = parseFloat(str);\n            if (Number.isNaN(v))\n                throw new Error(`Malformed float: ${str}`);\n            return v;\n        };\n        const applyAtomProperty = (atom, str) => {\n            if (!str)\n                return;\n            let pfx = str.charAt(0);\n            if (pfx == 'z')\n                mol.setAtomZ(atom, parseFloatHard(str.substring(1)));\n            else if (pfx == 'c')\n                mol.setAtomCharge(atom, parseIntHard(str.substring(1)));\n            else if (pfx == 'u')\n                mol.setAtomUnpaired(atom, parseIntHard(str.substring(1)));\n            else if (pfx == 'h')\n                mol.setAtomHExplicit(atom, parseIntHard(str.substring(1)));\n            else if (pfx == 'i')\n                mol.setAtomIsotope(atom, parseIntHard(str.substring(1)));\n            else if (pfx == 'm')\n                mol.setAtomMapNum(atom, parseIntHard(str.substring(1)));\n            else if (pfx == 'y')\n                mol.appendAtomTransient(atom, str);\n            else\n                mol.appendAtomExtra(atom, str);\n        };\n        const applyBondProperty = (bond, str) => {\n            if (!str)\n                return;\n            let pfx = str.charAt(0);\n            if (pfx == 'i')\n                mol.setBondType(bond, Molecule.BONDTYPE_INCLINED);\n            else if (pfx == 'd')\n                mol.setBondType(bond, Molecule.BONDTYPE_DECLINED);\n            else if (pfx == 'u')\n                mol.setBondType(bond, Molecule.BONDTYPE_UNKNOWN);\n            else if (pfx == 'y')\n                mol.appendBondTransient(bond, str);\n            else\n                mol.appendBondExtra(bond, str);\n        };\n        let lnum = 1;\n        for (let n = 1; n <= numAtoms; n++) {\n            if (!lines[lnum])\n                throw new Error(MSG_PREMATURE);\n            let chunkEl = readNextChunk(lines[lnum], 0, '=', true);\n            let chunkX = readNextChunk(lines[lnum], chunkEl.pos + 1, ',', true);\n            let chunkY = readNextChunk(lines[lnum], chunkX.pos + 1, ',', true);\n            let x = parseFloatHard(chunkX.str), y = parseFloatHard(chunkY.str);\n            mol.addAtom(chunkEl.str, x, y);\n            let pos = chunkY.pos + 1;\n            while (true) {\n                var chunk = readNextChunk(lines[lnum], pos, ',', false);\n                if (chunk == null)\n                    break;\n                applyAtomProperty(n, chunk.str);\n                pos = chunk.pos + 1;\n            }\n            lnum++;\n            while (true) {\n                if (!lines[lnum])\n                    throw new Error(MSG_PREMATURE);\n                if (lines[lnum] == '!End') {\n                    if (n == numAtoms && numBonds == 0)\n                        break;\n                    throw new Error(MSG_UNEXPECTED);\n                }\n                if (!lines[lnum].startsWith('.'))\n                    break;\n                var buff = lines[lnum].substring(1);\n                while (true) {\n                    lnum++;\n                    if (!lines[lnum])\n                        throw new Error(MSG_PREMATURE);\n                    if (!lines[lnum].startsWith(':'))\n                        break;\n                    buff += '\\n' + lines[lnum].substring(1);\n                }\n                applyAtomProperty(n, buff);\n            }\n        }\n        for (let n = 1; n <= numBonds; n++) {\n            if (!lines[lnum])\n                throw new Error(MSG_PREMATURE);\n            var chunkFrom = readNextChunk(lines[lnum], 0, '-', true);\n            var chunkTo = readNextChunk(lines[lnum], chunkFrom.pos + 1, '=', true);\n            var chunkOrder = readNextChunk(lines[lnum], chunkTo.pos + 1, ',', true);\n            let bfr = parseIntHard(chunkFrom.str), bto = parseIntHard(chunkTo.str), order = parseIntHard(chunkOrder.str);\n            if (bfr < 1 || bfr > numAtoms || bto < 1 || bto > numAtoms || order < 0 || order > 4)\n                throw new Error('Invalid bond specification');\n            mol.addBond(bfr, bto, order);\n            let pos = chunkOrder.pos + 1;\n            while (true) {\n                var chunk = readNextChunk(lines[lnum], pos, ',', false);\n                if (chunk == null)\n                    break;\n                applyBondProperty(n, chunk.str);\n                pos = chunk.pos + 1;\n            }\n            lnum++;\n            while (true) {\n                if (!lines[lnum])\n                    throw new Error(MSG_PREMATURE);\n                if (lines[lnum] == '!End') {\n                    if (n == numBonds)\n                        break;\n                    throw new Error(MSG_UNEXPECTED);\n                }\n                if (!lines[lnum].startsWith('.'))\n                    break;\n                let buff = lines[lnum].substring(1);\n                while (true) {\n                    lnum++;\n                    if (!lines[lnum])\n                        throw new Error(MSG_PREMATURE);\n                    if (!lines[lnum].startsWith(':'))\n                        break;\n                    buff += '\\n' + lines[lnum].substring(1);\n                }\n                applyBondProperty(n, buff);\n            }\n        }\n        if (lines[lnum] != '!End')\n            throw new Error('Molecule end tag missing');\n        mol.keepTransient = false;\n        return mol;\n    }\n    static readNativeLegacy(strData) {\n        let mol = new Molecule();\n        mol.keepTransient = true;\n        let lines = strData.split(/\\r?\\n/);\n        if (lines.length < 2)\n            return null;\n        if (!lines[0].startsWith('SketchEl!') && lines.length >= 4 && lines[3].indexOf('V2000') >= 0) {\n            let i = strData.indexOf('SketchEl!');\n            if (i < 0)\n                return null;\n            lines = strData.substring(i).split(/r?\\n/);\n        }\n        let hdr = lines[0].match(/^SketchEl\\!\\((\\d+)\\,(\\d+)\\)/);\n        if (!hdr)\n            return null;\n        let numAtoms = parseInt(hdr[1]), numBonds = parseInt(hdr[2]);\n        if (lines.length < 2 + numAtoms + numBonds)\n            return null;\n        if (!lines[1 + numAtoms + numBonds].match(/^!End/))\n            return null;\n        for (let n = 0; n < numAtoms; n++) {\n            let bits = lines[1 + n].split(/[=,;]/);\n            let num = mol.addAtom(MoleculeStream.skUnescape(bits[0]), parseFloat(bits[1]), parseFloat(bits[2]), parseInt(bits[3]), parseInt(bits[4]));\n            let extra = [], trans = [];\n            for (let i = 5; i < bits.length; i++) {\n                let ch = bits[i].charAt(0);\n                if (bits[i].charAt(0) == 'i') { }\n                else if (bits[i].charAt(0) == 'e')\n                    mol.setAtomHExplicit(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'm')\n                    mol.setAtomIsotope(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'n')\n                    mol.setAtomMapNum(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'x')\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'y')\n                    trans.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'z') {\n                    mol.setAtomZ(num, parseFloat(bits[i].substring(1)));\n                    mol.setIs3D(true);\n                }\n                else\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n            }\n            mol.setAtomExtra(num, extra);\n            mol.setAtomTransient(num, trans);\n        }\n        for (let n = 0; n < numBonds; n++) {\n            let bits = lines[1 + numAtoms + n].split(/[=,]/);\n            let frto = bits[0].split('-');\n            let bfr = parseInt(frto[0].trim()), bto = parseInt(frto[1].trim());\n            if (bfr == bto)\n                continue;\n            let num = mol.addBond(bfr, bto, parseInt(bits[1]), parseInt(bits[2]));\n            let extra = new Array(), trans = new Array();\n            for (let i = 3; i < bits.length; i++) {\n                let ch = bits[i].charAt(0);\n                if (bits[i].charAt(0) == 'x')\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'y')\n                    trans.push(MoleculeStream.skUnescape(bits[i]));\n                else\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n            }\n            mol.setBondExtra(num, extra);\n            mol.setBondTransient(num, trans);\n        }\n        mol.keepTransient = false;\n        return mol;\n    }\n    static writeNative(mol) {\n        if (!this.formatV2Elements)\n            return this.writeNativeLegacy(mol);\n        let bits = [`Elements!(${mol.numAtoms},${mol.numBonds})\\n`];\n        const roundedNumber = (v) => {\n            return (Math.round(v * 1E4) * 1E-4).toFixed(4);\n        };\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let el = mol.atomElement(n), x = roundedNumber(mol.atomX(n)), y = roundedNumber(mol.atomY(n));\n            bits.push(`${escape(el)}=${x},${y}`);\n            let keyvals = [];\n            if (mol.is3D())\n                keyvals.push(`z${roundedNumber(mol.atomZ(n))}`);\n            let chg = mol.atomCharge(n), unp = mol.atomUnpaired(n), hyd = mol.atomHExplicit(n), iso = mol.atomIsotope(n), map = mol.atomMapNum(n);\n            if (chg != 0)\n                keyvals.push(`c${chg}`);\n            if (unp != 0)\n                keyvals.push(`u${unp}`);\n            if (hyd != Molecule.HEXPLICIT_UNKNOWN)\n                keyvals.push(`h${hyd}`);\n            if (iso != Molecule.ISOTOPE_NATURAL)\n                keyvals.push(`i${iso}`);\n            if (map > 0)\n                keyvals.push(`m${map}`);\n            keyvals.push(...mol.atomExtra(n));\n            keyvals.push(...mol.atomTransient(n));\n            bits.push(writeKeyVals(keyvals));\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n), order = mol.bondOrder(n);\n            bits.push(`${bfr}-${bto}=${order}`);\n            let keyvals = [];\n            let typ = mol.bondType(n);\n            if (typ == Molecule.BONDTYPE_INCLINED)\n                keyvals.push('i');\n            else if (typ == Molecule.BONDTYPE_DECLINED)\n                keyvals.push('d');\n            else if (typ == Molecule.BONDTYPE_UNKNOWN)\n                keyvals.push('u');\n            keyvals.push(...mol.bondExtra(n));\n            keyvals.push(...mol.bondTransient(n));\n            bits.push(writeKeyVals(keyvals));\n        }\n        bits.push('!End\\n');\n        return bits.join('');\n    }\n    static writeNativeLegacy(mol) {\n        let ret = 'SketchEl!(' + mol.numAtoms + ',' + mol.numBonds + ')\\n';\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let el = mol.atomElement(n), x = mol.atomX(n), y = mol.atomY(n), charge = mol.atomCharge(n), unpaired = mol.atomUnpaired(n);\n            let hy = mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN ? ('e' + mol.atomHExplicit(n)) : ('i' + mol.atomHydrogens(n));\n            ret += MoleculeStream.skEscape(el) + '=' + x.toFixed(4) + ',' + y.toFixed(4) + ';' + charge + ',' + unpaired + ',' + hy;\n            if (mol.is3D())\n                ret += ',z' + mol.atomZ(n);\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL)\n                ret += ',m' + mol.atomIsotope(n);\n            if (mol.atomMapNum(n) > 0)\n                ret += ',n' + mol.atomMapNum(n);\n            ret += MoleculeStream.skEncodeExtra(mol.atomExtra(n));\n            ret += MoleculeStream.skEncodeExtra(mol.atomTransient(n));\n            ret += '\\n';\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            ret += mol.bondFrom(n) + '-' + mol.bondTo(n) + '=' + mol.bondOrder(n) + ',' + mol.bondType(n);\n            ret += MoleculeStream.skEncodeExtra(mol.bondExtra(n));\n            ret += MoleculeStream.skEncodeExtra(mol.bondTransient(n));\n            ret += '\\n';\n        }\n        ret += '!End\\n';\n        return ret;\n    }\n    static readMDLMOL(strData) {\n        let src = new MDLMOLReader(strData);\n        src.parseHeader = true;\n        src.parse();\n        return src.mol;\n    }\n    static writeMDLMOL(mol) {\n        return new MDLMOLWriter(mol).write();\n    }\n    static skUnescape(str) {\n        let ret = '', match;\n        while (match = str.match(/^(.*?)\\\\([0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])(.*)/)) {\n            ret += match[1] + String.fromCharCode(parseInt('0x' + match[2]));\n            str = match[3];\n        }\n        return ret + str;\n    }\n    static skEscape(str) {\n        let ret = '';\n        for (let n = 0; n < str.length; n++) {\n            let ch = str.charAt(n), code = str.charCodeAt(n);\n            if (code <= 32 || code > 127 || ch == '\\\\' || ch == ',' || ch == ';' || ch == '=') {\n                let hex = (code & 0xFFFF).toString(16).toUpperCase();\n                ret += '\\\\';\n                for (let i = 4 - hex.length; i > 0; i--)\n                    ret += '0';\n                ret += hex;\n            }\n            else\n                ret += ch;\n        }\n        return ret;\n    }\n    static skEncodeExtra(extra) {\n        let ret = '';\n        for (let n = 0; n < extra.length; n++)\n            ret += ',' + MoleculeStream.skEscape(extra[n]);\n        return ret;\n    }\n}\nMoleculeStream.formatV2Elements = false;\nexport { MoleculeStream };\n//# sourceMappingURL=MoleculeStream.js.map","import { Box } from '../util/Geom';\nimport { deepClone } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { MoleculeStream } from '../io/MoleculeStream';\nexport class Atom {\n}\nexport class Bond {\n}\nclass Molecule {\n    constructor() {\n        this.atoms = [];\n        this.bonds = [];\n        this.hasZCoord = false;\n        this.keepTransient = false;\n        this.hasTransient = false;\n        this.graph = null;\n        this.graphBond = null;\n        this.ringID = null;\n        this.compID = null;\n        this.ring3 = null;\n        this.ring4 = null;\n        this.ring5 = null;\n        this.ring6 = null;\n        this.ring7 = null;\n    }\n    clone() {\n        let dup = new Molecule();\n        dup.atoms = deepClone(this.atoms);\n        dup.bonds = deepClone(this.bonds);\n        dup.hasZCoord = this.hasZCoord;\n        dup.keepTransient = this.keepTransient;\n        dup.hasTransient = this.hasTransient;\n        dup.graph = this.graph;\n        dup.graphBond = this.graphBond;\n        dup.ringID = this.ringID;\n        dup.compID = this.compID;\n        dup.ring3 = this.ring3;\n        dup.ring4 = this.ring4;\n        dup.ring5 = this.ring5;\n        dup.ring6 = this.ring6;\n        dup.ring7 = this.ring7;\n        return dup;\n    }\n    static fromString(strData) { return MoleculeStream.readNative(strData); }\n    toString() { return MoleculeStream.writeNative(this); }\n    append(frag) {\n        let base = this.atoms.length;\n        for (let n = 1; n <= frag.numAtoms; n++) {\n            let num = this.addAtom(frag.atomElement(n), frag.atomX(n), frag.atomY(n), frag.atomCharge(n), frag.atomUnpaired(n));\n            this.setAtomIsotope(num, frag.atomIsotope(n));\n            this.setAtomHExplicit(num, frag.atomHExplicit(n));\n            this.setAtomMapNum(num, frag.atomMapNum(n));\n            this.setAtomExtra(num, frag.atomExtra(n));\n            this.setAtomTransient(num, frag.atomTransient(n));\n        }\n        for (let n = 1; n <= frag.numBonds; n++) {\n            let num = this.addBond(frag.bondFrom(n) + base, frag.bondTo(n) + base, frag.bondOrder(n), frag.bondType(n));\n            this.setBondExtra(num, frag.bondExtra(n));\n            this.setBondTransient(num, frag.bondTransient(n));\n        }\n        this.trashTransient();\n    }\n    get numAtoms() { return this.atoms.length; }\n    getAtom(idx) {\n        if (idx < 1 || idx > this.atoms.length)\n            throw new Error(`Molecule.getAtom: index ${idx} out of range (#atoms=${this.atoms.length})`);\n        return this.atoms[idx - 1];\n    }\n    atomElement(idx) { return this.getAtom(idx).element; }\n    atomX(idx) { return this.getAtom(idx).x; }\n    atomY(idx) { return this.getAtom(idx).y; }\n    atomCharge(idx) { return this.getAtom(idx).charge; }\n    atomUnpaired(idx) { return this.getAtom(idx).unpaired; }\n    atomIsotope(idx) { return this.getAtom(idx).isotope; }\n    atomHExplicit(idx) { return this.getAtom(idx).hExplicit; }\n    atomMapNum(idx) { return this.getAtom(idx).mapNum; }\n    atomExtra(idx) { return this.getAtom(idx).extra.slice(0); }\n    atomTransient(idx) { return this.getAtom(idx).transient.slice(0); }\n    get numBonds() { return this.bonds.length; }\n    getBond(idx) {\n        if (idx < 1 || idx > this.bonds.length)\n            throw new Error(`Molecule.getBond: index ${idx} out of range (#bonds=${this.bonds.length})`);\n        return this.bonds[idx - 1];\n    }\n    bondFrom(idx) { return this.getBond(idx).from; }\n    bondTo(idx) { return this.getBond(idx).to; }\n    bondOrder(idx) { return this.getBond(idx).order; }\n    bondType(idx) { return this.getBond(idx).type; }\n    bondExtra(idx) { return this.getBond(idx).extra.slice(0); }\n    bondTransient(idx) { return this.getBond(idx).transient.slice(0); }\n    bondFromTo(idx) { let b = this.getBond(idx); return [b.from, b.to]; }\n    addAtom(element, x, y, charge = 0, unpaired = 0) {\n        let a = new Atom();\n        a.element = element;\n        a.x = x;\n        a.y = y;\n        a.charge = charge;\n        a.unpaired = unpaired;\n        a.isotope = Molecule.ISOTOPE_NATURAL;\n        a.hExplicit = Molecule.HEXPLICIT_UNKNOWN;\n        a.mapNum = 0;\n        a.extra = [];\n        a.transient = [];\n        this.atoms.push(a);\n        this.trashTransient();\n        this.trashGraph();\n        return this.atoms.length;\n    }\n    setAtomElement(idx, element) {\n        this.getAtom(idx).element = element;\n        this.trashTransient();\n    }\n    setAtomPos(idx, x, y, z) {\n        let a = this.getAtom(idx);\n        a.x = x;\n        a.y = y;\n        a.z = z == null ? 0 : z;\n        this.trashTransient();\n    }\n    setAtomX(idx, x) {\n        this.getAtom(idx).x = x;\n        this.trashTransient();\n    }\n    setAtomY(idx, y) {\n        this.getAtom(idx).y = y;\n        this.trashTransient();\n    }\n    setAtomCharge(idx, charge) {\n        this.getAtom(idx).charge = charge;\n        this.trashTransient();\n    }\n    setAtomUnpaired(idx, unpaired) {\n        this.getAtom(idx).unpaired = unpaired;\n        this.trashTransient();\n    }\n    setAtomIsotope(idx, isotope) {\n        this.getAtom(idx).isotope = isotope;\n        this.trashTransient();\n    }\n    setAtomHExplicit(idx, hExplicit) {\n        this.getAtom(idx).hExplicit = hExplicit;\n        this.trashTransient();\n    }\n    setAtomMapNum(idx, mapNum) {\n        this.getAtom(idx).mapNum = mapNum;\n        this.trashTransient();\n    }\n    setAtomExtra(idx, extra) {\n        this.getAtom(idx).extra = extra.slice(0);\n    }\n    setAtomTransient(idx, transi) {\n        this.getAtom(idx).transient = transi.slice(0);\n        if (transi.length > 0)\n            this.hasTransient = true;\n    }\n    swapAtoms(a1, a2) {\n        let a = this.atoms[a1 - 1];\n        this.atoms[a1 - 1] = this.atoms[a2 - 1];\n        this.atoms[a2 - 1] = a;\n        for (let n = 0; n < this.bonds.length; n++) {\n            let b = this.bonds[n];\n            if (b.from == a2)\n                b.from = a1;\n            else if (b.from == a1)\n                b.from = a2;\n            if (b.to == a2)\n                b.to = a1;\n            else if (b.to == a1)\n                b.to = a2;\n        }\n        this.trashGraph();\n    }\n    addBond(from, to, order, type = Molecule.BONDTYPE_NORMAL) {\n        let b = new Bond();\n        b.from = from;\n        b.to = to;\n        b.order = order;\n        b.type = type;\n        b.extra = [];\n        b.transient = [];\n        this.bonds.push(b);\n        this.trashTransient();\n        this.trashGraph();\n        return this.bonds.length;\n    }\n    setBondFrom(idx, bfr) {\n        this.getBond(idx).from = bfr;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondTo(idx, to) {\n        this.getBond(idx).to = to;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondFromTo(idx, bfr, bto) {\n        this.getBond(idx).from = bfr;\n        this.getBond(idx).to = bto;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondOrder(idx, order) {\n        this.getBond(idx).order = order;\n        this.trashTransient();\n    }\n    setBondType(idx, type) {\n        this.getBond(idx).type = type;\n        this.trashTransient();\n    }\n    setBondExtra(idx, extra) {\n        this.getBond(idx).extra = extra.slice(0);\n    }\n    setBondTransient(idx, transi) {\n        this.getBond(idx).transient = transi.slice(0);\n        if (transi.length > 0)\n            this.hasTransient = true;\n    }\n    deleteAtomAndBonds(idx) {\n        for (let n = this.numBonds; n >= 1; n--) {\n            if (this.bondFrom(n) == idx || this.bondTo(n) == idx)\n                this.deleteBond(n);\n            else {\n                if (this.bondFrom(n) > idx)\n                    this.setBondFrom(n, this.bondFrom(n) - 1);\n                if (this.bondTo(n) > idx)\n                    this.setBondTo(n, this.bondTo(n) - 1);\n            }\n        }\n        this.atoms.splice(idx - 1, 1);\n        this.trashTransient();\n        this.trashGraph();\n    }\n    deleteBond(idx) {\n        this.bonds.splice(idx - 1, 1);\n        this.trashTransient();\n        this.trashGraph();\n    }\n    atomHydrogens(idx) {\n        let hy = this.atomHExplicit(idx);\n        if (hy != Molecule.HEXPLICIT_UNKNOWN)\n            return hy;\n        for (let n = 0; n < Molecule.HYVALENCE_EL.length; n++)\n            if (Molecule.HYVALENCE_EL[n] == this.atomElement(idx)) {\n                hy = Molecule.HYVALENCE_VAL[n];\n                break;\n            }\n        if (hy == Molecule.HEXPLICIT_UNKNOWN)\n            return 0;\n        let ch = this.atomCharge(idx);\n        if (this.atomElement(idx) == 'C')\n            ch = -Math.abs(ch);\n        hy += ch - this.atomUnpaired(idx);\n        let adjBonds = this.atomAdjBonds(idx);\n        for (let n = 0; n < adjBonds.length; n++)\n            hy -= this.bondOrder(adjBonds[n]);\n        return hy < 0 ? 0 : hy;\n    }\n    findBond(a1, a2) {\n        for (let n = 1; n <= this.numBonds; n++) {\n            let b1 = this.bondFrom(n), b2 = this.bondTo(n);\n            if ((a1 == b1 && a2 == b2) || (a1 == b2 && a2 == b1))\n                return n;\n        }\n        return 0;\n    }\n    bondOther(idx, ref) {\n        let b1 = this.bondFrom(idx), b2 = this.bondTo(idx);\n        if (b1 == ref)\n            return b2;\n        if (b2 == ref)\n            return b1;\n        return 0;\n    }\n    atomExplicit(idx) {\n        let a = this.atoms[idx - 1];\n        if (a.isotope != Molecule.ISOTOPE_NATURAL)\n            return true;\n        if (a.element != 'C' || a.charge != 0 || a.unpaired != 0)\n            return true;\n        if (this.atomAdjCount(idx) == 0)\n            return true;\n        return false;\n    }\n    atomRingBlock(idx) {\n        if (this.graph == null)\n            this.buildGraph();\n        if (this.ringID == null)\n            this.buildRingID();\n        return this.ringID[idx - 1];\n    }\n    bondInRing(idx) {\n        let r1 = this.atomRingBlock(this.bondFrom(idx)), r2 = this.atomRingBlock(this.bondTo(idx));\n        return r1 > 0 && r1 == r2;\n    }\n    atomConnComp(idx) {\n        if (this.graph == null)\n            this.buildGraph();\n        if (this.compID == null)\n            this.buildConnComp();\n        return this.compID[idx - 1];\n    }\n    atomAdjCount(idx) {\n        this.buildGraph();\n        return this.graph[idx - 1].length;\n    }\n    atomAdjList(idx) {\n        this.buildGraph();\n        let adj = this.graph[idx - 1].slice(0);\n        for (let n = adj.length - 1; n >= 0; n--)\n            adj[n]++;\n        return adj;\n    }\n    atomAdjBonds(idx) {\n        this.buildGraph();\n        return this.graphBond[idx - 1].slice(0);\n    }\n    findRingsOfSize(size) {\n        let rings = null;\n        if (size == 3 && this.ring3 != null)\n            rings = this.ring3;\n        if (size == 4 && this.ring4 != null)\n            rings = this.ring4;\n        if (size == 5 && this.ring5 != null)\n            rings = this.ring5;\n        if (size == 6 && this.ring6 != null)\n            rings = this.ring6;\n        if (size == 7 && this.ring7 != null)\n            rings = this.ring7;\n        if (rings == null) {\n            if (this.graph == null)\n                this.buildGraph();\n            if (this.ringID == null)\n                this.buildRingID();\n            rings = [];\n            for (let n = 1; n <= this.atoms.length; n++) {\n                if (this.ringID[n - 1] > 0) {\n                    let path = Vec.numberArray(0, size);\n                    path[0] = n;\n                    this.recursiveRingFind(path, 1, size, this.ringID[n - 1], rings);\n                }\n            }\n            if (size == 3)\n                this.ring3 = rings;\n            if (size == 4)\n                this.ring4 = rings;\n            if (size == 5)\n                this.ring5 = rings;\n            if (size == 6)\n                this.ring6 = rings;\n            if (size == 7)\n                this.ring7 = rings;\n        }\n        let ret = [];\n        for (let n = 0; n < rings.length; n++)\n            ret.push(rings[n].slice(0));\n        return ret;\n    }\n    boundary() {\n        if (this.atoms.length == 0)\n            return Box.zero();\n        let x1 = this.atoms[0].x, x2 = x1;\n        let y1 = this.atoms[0].y, y2 = y1;\n        for (let n = 1; n < this.atoms.length; n++) {\n            x1 = Math.min(x1, this.atoms[n].x);\n            y1 = Math.min(y1, this.atoms[n].y);\n            x2 = Math.max(x2, this.atoms[n].x);\n            y2 = Math.max(y2, this.atoms[n].y);\n        }\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    atomicNumber(idx) {\n        return Molecule.elementAtomicNumber(this.atomElement(idx));\n    }\n    static elementAtomicNumber(element) {\n        return Math.max(0, Chemistry.ELEMENTS.indexOf(element));\n    }\n    is3D() { return this.hasZCoord; }\n    setIs3D(v) { this.hasZCoord = v; }\n    atomZ(idx) { return this.getAtom(idx).z; }\n    setAtomZ(idx, z) { this.getAtom(idx).z = z; }\n    compareTo(other) {\n        if (other == null || other.numAtoms == 0)\n            return this.numAtoms == 0 ? 0 : 1;\n        if (this.numAtoms < other.numAtoms)\n            return -1;\n        if (this.numAtoms > other.numAtoms)\n            return 1;\n        if (this.numBonds < other.numBonds)\n            return -1;\n        if (this.numBonds > other.numBonds)\n            return 1;\n        for (let n = 1; n <= this.numAtoms; n++) {\n            if (this.atomElement(n) < other.atomElement(n))\n                return -1;\n            if (this.atomElement(n) > other.atomElement(n))\n                return 1;\n            if (this.atomX(n) < other.atomX(n))\n                return -1;\n            if (this.atomX(n) > other.atomX(n))\n                return 1;\n            if (this.atomY(n) < other.atomY(n))\n                return -1;\n            if (this.atomY(n) > other.atomY(n))\n                return 1;\n            if (this.atomCharge(n) < other.atomCharge(n))\n                return -1;\n            if (this.atomCharge(n) > other.atomCharge(n))\n                return 1;\n            if (this.atomUnpaired(n) < other.atomUnpaired(n))\n                return -1;\n            if (this.atomUnpaired(n) > other.atomUnpaired(n))\n                return 1;\n            if (this.atomHExplicit(n) < other.atomHExplicit(n))\n                return -1;\n            if (this.atomHExplicit(n) > other.atomHExplicit(n))\n                return 1;\n            if (this.atomIsotope(n) < other.atomIsotope(n))\n                return -1;\n            if (this.atomIsotope(n) > other.atomIsotope(n))\n                return 1;\n            if (this.atomMapNum(n) < other.atomMapNum(n))\n                return -1;\n            if (this.atomMapNum(n) > other.atomMapNum(n))\n                return 1;\n            let tx1 = this.atomExtra(n).map((v) => v.trimEnd()), tx2 = other.atomExtra(n).map((v) => v.trimEnd());\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n            tx1 = this.atomTransient(n).map((v) => v.trimEnd());\n            tx2 = other.atomTransient(n).map((v) => v.trimEnd());\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n        }\n        for (let n = 1; n <= this.numBonds; n++) {\n            if (this.bondFrom(n) < other.bondFrom(n))\n                return -1;\n            if (this.bondFrom(n) > other.bondFrom(n))\n                return 1;\n            if (this.bondTo(n) < other.bondTo(n))\n                return -1;\n            if (this.bondTo(n) > other.bondTo(n))\n                return 1;\n            if (this.bondOrder(n) < other.bondOrder(n))\n                return -1;\n            if (this.bondOrder(n) > other.bondOrder(n))\n                return 1;\n            if (this.bondType(n) < other.bondType(n))\n                return -1;\n            if (this.bondType(n) > other.bondType(n))\n                return 1;\n            let tx1 = this.bondExtra(n), tx2 = other.bondExtra(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n            tx1 = this.bondTransient(n);\n            tx2 = other.bondTransient(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n        }\n        return 0;\n    }\n    trashTransient() {\n        if (this.keepTransient || !this.hasTransient)\n            return;\n        for (let a of this.atoms)\n            a.transient = [];\n        for (let b of this.bonds)\n            b.transient = [];\n        this.hasTransient = false;\n    }\n    appendAtomExtra(atom, extra) {\n        this.getAtom(atom).extra.push(extra);\n    }\n    appendAtomTransient(atom, trans) {\n        this.getAtom(atom).transient.push(trans);\n    }\n    appendBondExtra(bond, extra) {\n        this.getBond(bond).extra.push(extra);\n    }\n    appendBondTransient(bond, trans) {\n        this.getBond(bond).transient.push(trans);\n    }\n    getAtomCloned(idx) { return deepClone(this.getAtom(idx)); }\n    getBondCloned(idx) { return deepClone(this.getBond(idx)); }\n    setAtom(idx, atom) {\n        if (!atom)\n            return;\n        let curr = this.getAtom(idx);\n        if (atom.element != curr.element)\n            this.setAtomElement(idx, atom.element);\n        if (atom.x != curr.x)\n            this.setAtomX(idx, atom.x);\n        if (atom.y != curr.y)\n            this.setAtomY(idx, atom.y);\n        if (atom.z != curr.z)\n            this.setAtomZ(idx, atom.z);\n        if (atom.charge != curr.charge)\n            this.setAtomCharge(idx, atom.charge);\n        if (atom.unpaired != curr.unpaired)\n            this.setAtomUnpaired(idx, atom.unpaired);\n        if (atom.isotope != curr.isotope)\n            this.setAtomIsotope(idx, atom.isotope);\n        if (atom.hExplicit != curr.hExplicit)\n            this.setAtomHExplicit(idx, atom.hExplicit);\n        if (atom.mapNum != curr.mapNum)\n            this.setAtomMapNum(idx, atom.mapNum);\n        if (!Vec.equals(atom.extra, curr.extra))\n            this.setAtomExtra(idx, atom.extra);\n        if (!Vec.equals(atom.transient, curr.transient))\n            this.setAtomTransient(idx, atom.transient);\n    }\n    setBond(idx, bond) {\n        if (bond == null)\n            return;\n        let curr = this.getBond(idx);\n        if (bond.from != curr.from)\n            this.setBondFrom(idx, bond.from);\n        if (bond.to != curr.to)\n            this.setBondTo(idx, bond.to);\n        if (bond.order != curr.order)\n            this.setBondOrder(idx, bond.order);\n        if (bond.type != curr.type)\n            this.setBondType(idx, bond.type);\n        if (!Vec.equals(bond.extra, curr.extra))\n            this.setBondExtra(idx, bond.extra);\n        if (!Vec.equals(bond.transient, curr.transient))\n            this.setBondTransient(idx, bond.transient);\n    }\n    modifyAtoms(lambda) {\n        for (let n = 1; n <= this.numAtoms; n++) {\n            var mod = lambda(n, this.getAtomCloned(n));\n            if (mod != null)\n                this.setAtom(n, mod);\n        }\n    }\n    modifyAtomsIndices(atomIndices, lambda) {\n        for (let n of atomIndices) {\n            var mod = lambda(n, this.getAtomCloned(n));\n            if (mod != null)\n                this.setAtom(n, mod);\n        }\n    }\n    modifyBonds(lambda) {\n        for (let n = 1; n <= this.numBonds; n++) {\n            var mod = lambda(n, this.getBondCloned(n));\n            if (mod != null)\n                this.setBond(n, mod);\n        }\n    }\n    modifyBondsIndices(bondIndices, lambda) {\n        for (let n of bondIndices) {\n            var mod = lambda(n, this.getBondCloned(n));\n            if (mod != null)\n                this.setBond(n, mod);\n        }\n    }\n    findAtomMatch(lambda) {\n        for (let n = 1; n <= this.numAtoms; n++)\n            if (lambda(this.getAtom(n)))\n                return n;\n        return 0;\n    }\n    findBondMatch(lambda) {\n        for (let n = 1; n <= this.numBonds; n++)\n            if (lambda(this.getBond(n)))\n                return n;\n        return 0;\n    }\n    findAllAtoms(lambda) {\n        let indices = [];\n        for (let n = 1; n <= this.numAtoms; n++)\n            if (lambda(this.getAtom(n)))\n                indices.push(n);\n        return indices;\n    }\n    findAllBonds(lambda) {\n        let indices = [];\n        for (let n = 1; n <= this.numBonds; n++)\n            if (lambda(this.getBond(n)))\n                indices.push(n);\n        return indices;\n    }\n    mapAtoms(lambda) {\n        let ret = new Array(this.numAtoms);\n        for (let n = 1; n <= this.numAtoms; n++)\n            ret[n - 1] = lambda(this.getAtom(n));\n        return ret;\n    }\n    mapBonds(lambda) {\n        let ret = new Array(this.numBonds);\n        for (let n = 1; n <= this.numBonds; n++)\n            ret[n - 1] = lambda(this.getBond(n));\n        return ret;\n    }\n    mapAtomsIndices(atomIndices, lambda) {\n        let ret = new Array(atomIndices.length);\n        let pos = 0;\n        for (let n of atomIndices)\n            ret[pos++] = lambda(this.getAtom(n));\n        return ret;\n    }\n    mapBondsIndices(bondIndices, lambda) {\n        let ret = new Array(bondIndices.length);\n        let pos = 0;\n        for (let n of bondIndices)\n            ret[pos++] = lambda(this.getBond(n));\n        return ret;\n    }\n    trashGraph() {\n        this.graph = null;\n        this.graphBond = null;\n        this.ringID = null;\n        this.compID = null;\n        this.ring3 = null;\n        this.ring4 = null;\n        this.ring5 = null;\n        this.ring6 = null;\n        this.ring7 = null;\n    }\n    buildGraph() {\n        if (this.graph != null && this.graphBond != null)\n            return;\n        let graph = [], graphBond = [];\n        let na = this.numAtoms, nb = this.numBonds;\n        for (let n = 0; n < na; n++) {\n            graph.push([]);\n            graphBond.push([]);\n        }\n        for (let n = 1; n <= nb; n++) {\n            let b = this.getBond(n);\n            graph[b.from - 1].push(b.to - 1);\n            graph[b.to - 1].push(b.from - 1);\n            graphBond[b.from - 1].push(n);\n            graphBond[b.to - 1].push(n);\n        }\n        this.graph = graph;\n        this.graphBond = graphBond;\n    }\n    buildConnComp() {\n        const numAtoms = this.atoms.length;\n        this.compID = Vec.numberArray(0, numAtoms);\n        for (let n = 0; n < numAtoms; n++)\n            this.compID[n] = 0;\n        let comp = 1;\n        this.compID[0] = comp;\n        while (true) {\n            let anything = false;\n            for (let n = 0; n < numAtoms; n++)\n                if (this.compID[n] == comp) {\n                    for (let i = 0; i < this.graph[n].length; i++) {\n                        if (this.compID[this.graph[n][i]] == 0) {\n                            this.compID[this.graph[n][i]] = comp;\n                            anything = true;\n                        }\n                    }\n                }\n            if (!anything) {\n                for (let n = 0; n < numAtoms; n++) {\n                    if (this.compID[n] == 0) {\n                        this.compID[n] = ++comp;\n                        anything = true;\n                        break;\n                    }\n                }\n                if (!anything)\n                    break;\n            }\n        }\n    }\n    buildRingID() {\n        const numAtoms = this.atoms.length;\n        this.ringID = Vec.numberArray(0, numAtoms);\n        if (numAtoms == 0)\n            return;\n        let visited = Vec.booleanArray(false, numAtoms);\n        for (let n = 0; n < numAtoms; n++) {\n            this.ringID[n] = 0;\n            visited[n] = false;\n        }\n        let path = Vec.numberArray(0, numAtoms + 1), plen = 0, numVisited = 0;\n        while (true) {\n            let last, current;\n            if (plen == 0) {\n                last = -1;\n                for (current = 0; visited[current]; current++) { }\n            }\n            else {\n                last = path[plen - 1];\n                current = -1;\n                for (let n = 0; n < this.graph[last].length; n++) {\n                    if (!visited[this.graph[last][n]]) {\n                        current = this.graph[last][n];\n                        break;\n                    }\n                }\n            }\n            if (current >= 0 && plen >= 2) {\n                let back = path[plen - 1];\n                for (let n = 0; n < this.graph[current].length; n++) {\n                    let join = this.graph[current][n];\n                    if (join != back && visited[join]) {\n                        path[plen] = current;\n                        for (let i = plen; i == plen || path[i + 1] != join; i--) {\n                            let id = this.ringID[path[i]];\n                            if (id == 0)\n                                this.ringID[path[i]] = last;\n                            else if (id != last) {\n                                for (let j = 0; j < numAtoms; j++)\n                                    if (this.ringID[j] == id)\n                                        this.ringID[j] = last;\n                            }\n                        }\n                    }\n                }\n            }\n            if (current >= 0) {\n                visited[current] = true;\n                path[plen++] = current;\n                numVisited++;\n            }\n            else {\n                plen--;\n            }\n            if (numVisited == numAtoms)\n                break;\n        }\n        let nextID = 0;\n        for (let i = 0; i < numAtoms; i++) {\n            if (this.ringID[i] > 0) {\n                nextID--;\n                for (let j = numAtoms - 1; j >= i; j--)\n                    if (this.ringID[j] == this.ringID[i])\n                        this.ringID[j] = nextID;\n            }\n        }\n        for (let i = 0; i < numAtoms; i++)\n            this.ringID[i] = -this.ringID[i];\n    }\n    recursiveRingFind(path, psize, capacity, rblk, rings) {\n        const { graph } = this;\n        if (psize < capacity) {\n            let last = path[psize - 1];\n            for (let n = 0; n < graph[last - 1].length; n++) {\n                let adj = graph[last - 1][n] + 1;\n                if (this.ringID[adj - 1] != rblk)\n                    continue;\n                let fnd = false;\n                for (let i = 0; i < psize; i++) {\n                    if (path[i] == adj) {\n                        fnd = true;\n                        break;\n                    }\n                }\n                if (!fnd) {\n                    let newPath = path.slice(0);\n                    newPath[psize] = adj;\n                    this.recursiveRingFind(newPath, psize + 1, capacity, rblk, rings);\n                }\n            }\n            return;\n        }\n        let last = path[psize - 1];\n        let fnd = false;\n        for (let n = 0; n < graph[last - 1].length; n++) {\n            if (graph[last - 1][n] + 1 == path[0]) {\n                fnd = true;\n                break;\n            }\n        }\n        if (!fnd)\n            return;\n        for (let n = 0; n < path.length; n++) {\n            let count = 0, p = path[n] - 1;\n            for (let i = 0; i < graph[p].length; i++)\n                if (path.indexOf(graph[p][i] + 1) >= 0)\n                    count++;\n            if (count != 2)\n                return;\n        }\n        let first = 0;\n        for (let n = 1; n < psize; n++)\n            if (path[n] < path[first])\n                first = n;\n        let fm = (first - 1 + psize) % psize, fp = (first + 1) % psize;\n        let flip = path[fm] < path[fp];\n        if (first != 0 || flip) {\n            let newPath = Vec.numberArray(0, psize);\n            for (let n = 0; n < psize; n++)\n                newPath[n] = path[(first + (flip ? psize - n : n)) % psize];\n            path = newPath;\n        }\n        for (let n = 0; n < rings.length; n++) {\n            let look = rings[n];\n            let same = true;\n            for (let i = 0; i < psize; i++) {\n                if (look[i] != path[i]) {\n                    same = false;\n                    break;\n                }\n            }\n            if (same)\n                return;\n        }\n        rings.push(path);\n    }\n}\nMolecule.IDEALBOND = 1.5;\nMolecule.HEXPLICIT_UNKNOWN = -1;\nMolecule.ISOTOPE_NATURAL = 0;\nMolecule.BONDTYPE_NORMAL = 0;\nMolecule.BONDTYPE_INCLINED = 1;\nMolecule.BONDTYPE_DECLINED = 2;\nMolecule.BONDTYPE_UNKNOWN = 3;\nMolecule.HYVALENCE_EL = ['C', 'N', 'O', 'S', 'P'];\nMolecule.HYVALENCE_VAL = [4, 3, 2, 2, 3];\nMolecule.PREFIX_EXTRA = 'x';\nMolecule.PREFIX_TRANSIENT = 'y';\nexport { Molecule };\n//# sourceMappingURL=Molecule.js.map","import { angleDiff, angleNorm, DEGRAD, norm2_xy, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Graph } from './Graph';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nclass CoordUtil {\n    static atomAtPoint(mol, x, y, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.OVERLAP_THRESHOLD;\n        const tolsq = tolerance * tolerance;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y) < tolsq)\n                return n;\n        return 0;\n    }\n    static sketchEquivalent(mol1, mol2, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.DEFAULT_EQUIV_TOLERANCE;\n        const na = mol1.numAtoms, nb = mol1.numBonds;\n        if (na != mol2.numAtoms || nb != mol2.numBonds)\n            return false;\n        const tolsq = tolerance * tolerance;\n        let box1 = mol1.boundary(), box2 = mol2.boundary();\n        if (Math.abs(box1.minX() - box2.minX()) > tolerance)\n            return false;\n        if (Math.abs(box1.minY() - box2.minY()) > tolerance)\n            return false;\n        if (Math.abs(box1.maxX() - box2.maxX()) > tolerance)\n            return false;\n        if (Math.abs(box1.maxY() - box2.maxY()) > tolerance)\n            return false;\n        let mx1 = MolUtil.arrayAtomX(mol1), my1 = MolUtil.arrayAtomY(mol1);\n        let mx2 = MolUtil.arrayAtomX(mol2), my2 = MolUtil.arrayAtomY(mol2);\n        let map = Vec.numberArray(0, na);\n        let mask = Vec.booleanArray(false, na);\n        for (let i = 0; i < na; i++) {\n            let j = -1;\n            if (norm2_xy(mx1[i] - mx2[i], my1[i] - my2[i]) < tolsq)\n                j = i;\n            if (j < 0) {\n                let bestdsq = Number.MAX_VALUE;\n                for (let n = 0; n < na; n++)\n                    if (!mask[n]) {\n                        let dsq = norm2_xy(mx1[i] - mx2[n], my1[i] - my2[n]);\n                        if (dsq < bestdsq) {\n                            bestdsq = dsq;\n                            j = n;\n                        }\n                    }\n                if (j < 0 || bestdsq > tolsq)\n                    return false;\n            }\n            map[i] = j + 1;\n            mask[j] = true;\n            if (mol1.atomElement(i + 1) != mol2.atomElement(j + 1))\n                return false;\n            if (mol1.atomCharge(i + 1) != mol2.atomCharge(j + 1))\n                return false;\n            if (mol1.atomUnpaired(i + 1) != mol2.atomUnpaired(j + 1))\n                return false;\n            if (mol1.atomHExplicit(i + 1) != mol2.atomHExplicit(j + 1) &&\n                mol1.atomHExplicit(i + 1) != Molecule.HEXPLICIT_UNKNOWN &&\n                mol2.atomHExplicit(j + 1) != Molecule.HEXPLICIT_UNKNOWN)\n                return false;\n        }\n        for (let i = 1; i <= nb; i++) {\n            let i1 = mol1.bondFrom(i), i2 = mol1.bondTo(i), j1 = map[i1 - 1], j2 = map[i2 - 1];\n            let j = mol2.findBond(j1, j2);\n            if (j == 0)\n                return false;\n            if (mol1.bondOrder(i) != mol2.bondOrder(j) || mol1.bondType(i) != mol2.bondType(j))\n                return false;\n            if (mol2.bondFrom(j) == j1 && mol2.bondTo(j) == j2) { }\n            else if (mol2.bondType(j) != Molecule.BONDTYPE_INCLINED &&\n                mol2.bondType(j) != Molecule.BONDTYPE_DECLINED &&\n                mol2.bondFrom(j) == j2 && mol2.bondTo(j) == j1) { }\n            else\n                return false;\n        }\n        return true;\n    }\n    static sketchMappable(mol1, mol2, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.DEFAULT_EQUIV_TOLERANCE;\n        let box1 = mol1.boundary(), box2 = mol2.boundary();\n        let dx = box1.minX() - box2.minX(), dy = box1.minY() - box2.minY();\n        if (Math.abs(dx) > tolerance * 0.1 || Math.abs(dy) > tolerance * 0.1) {\n            mol2 = mol2.clone();\n            for (let n = 1; n <= mol2.numAtoms; n++)\n                mol2.setAtomPos(n, mol2.atomX(n) + dx, mol2.atomY(n) + dy);\n        }\n        return CoordUtil.sketchEquivalent(mol1, mol2, tolerance);\n    }\n    static atomBondAngles(mol, atom, adj) {\n        if (adj == null)\n            adj = mol.atomAdjList(atom);\n        let bndang = [];\n        let cx = mol.atomX(atom), cy = mol.atomY(atom);\n        for (let a of adj)\n            bndang.push(Math.atan2(mol.atomY(a) - cy, mol.atomX(a) - cx));\n        return bndang;\n    }\n    static overlapsAtom(mol, x, y, tol) {\n        const tolsq = tol * tol;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y) < tolsq)\n                return true;\n        return false;\n    }\n    static overlappingAtomMask(mol, thresh) {\n        if (thresh == null)\n            thresh = CoordUtil.OVERLAP_THRESHOLD;\n        const sz = mol.numAtoms;\n        let box = mol.boundary();\n        let p1, p2;\n        if (box.w > box.h) {\n            p1 = MolUtil.arrayAtomX(mol);\n            p2 = MolUtil.arrayAtomY(mol);\n        }\n        else {\n            p1 = MolUtil.arrayAtomY(mol);\n            p2 = MolUtil.arrayAtomX(mol);\n        }\n        let omask = Vec.booleanArray(false, sz);\n        let idx = Vec.idxSort(p1);\n        const threshSQ = thresh * thresh;\n        for (let i = 1; i < sz - 1; i++) {\n            for (let j = i - 1; j >= 0; j--) {\n                let d1 = p1[idx[i]] - p1[idx[j]];\n                if (d1 > thresh)\n                    break;\n                if (norm2_xy(d1, p2[idx[i]] - p2[idx[j]]) < threshSQ) {\n                    omask[idx[i]] = true;\n                    omask[idx[j]] = true;\n                }\n            }\n            for (let j = i + 1; j < sz; j++) {\n                let d1 = p1[idx[j]] - p1[idx[i]];\n                if (d1 > thresh)\n                    break;\n                if (norm2_xy(d1, p2[idx[j]] - p2[idx[i]]) < threshSQ) {\n                    omask[idx[i]] = true;\n                    omask[idx[j]] = true;\n                }\n            }\n        }\n        return omask;\n    }\n    static overlappingAtomList(mol, thresh) {\n        if (thresh == null)\n            thresh = CoordUtil.OVERLAP_THRESHOLD;\n        return Vec.add(Vec.maskIdx(CoordUtil.overlappingAtomMask(mol, thresh)), 1);\n    }\n    static congestionPoint(mol, x, y, approach) {\n        if (approach == null)\n            approach = 1E-5;\n        let score = 0;\n        let na = mol.numAtoms;\n        for (let n = 1; n <= na; n++)\n            score += 1.0 / (approach + norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y));\n        return score;\n    }\n    static congestionMolecule(mol, approach) {\n        if (approach == null)\n            approach = 1E-5;\n        let score = 0;\n        const na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        for (let i = 0; i < na - 1; i++)\n            for (let j = i + 1; j < na; j++)\n                score += 1.0 / (approach + norm2_xy(mx[i] - mx[j], my[i] - my[j]));\n        return score;\n    }\n    static translateMolecule(mol, ox, oy) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            mol.setAtomPos(n, mol.atomX(n) + ox, mol.atomY(n) + oy);\n    }\n    static rotateMolecule(mol, theta, cx, cy) {\n        if (cx == null || cy == null) {\n            let box = mol.boundary();\n            cx = box.midX();\n            cy = box.midY();\n        }\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n            mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n        }\n    }\n    static rotateBond(mol, centre, atom, theta) {\n        theta = angleNorm(theta);\n        if (Math.abs(theta) < 0.1 * DEGRAD)\n            return;\n        let g = Graph.fromMolecule(mol);\n        g.isolateNode(centre - 1);\n        let cc = g.calculateComponents();\n        let cx = mol.atomX(centre), cy = mol.atomY(centre);\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (cc[n - 1] == cc[atom - 1]) {\n                let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n                mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n            }\n    }\n    static rotateAtoms(mol, mask, cx, cy, theta) {\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n                mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n            }\n    }\n    static angleNeighbours(mol, atom) {\n        let adj = mol.atomAdjList(atom);\n        if (adj.length <= 1)\n            return null;\n        let th = [];\n        for (let n = 0; n < adj.length; n++)\n            th.push(Math.atan2(mol.atomY(adj[n]) - mol.atomY(atom), mol.atomX(adj[n]) - mol.atomX(atom)));\n        if (adj.length == 2) {\n            if (angleDiff(th[1], th[0]) > 0)\n                return adj;\n            return [adj[1], adj[0]];\n        }\n        let idx = Vec.idxSort(th);\n        return Vec.idxGet(adj, idx);\n    }\n    static mergeAtoms(mol, oldN, newN) {\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondFrom(n) == oldN)\n                mol.setBondFrom(n, newN);\n            if (mol.bondTo(n) == oldN)\n                mol.setBondTo(n, newN);\n        }\n        mol.deleteAtomAndBonds(oldN);\n    }\n    static normaliseBondDistances(mol) {\n        const nb = mol.numBonds;\n        if (nb == 0)\n            return;\n        let dsq = [];\n        for (let n = 1; n <= nb; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            dsq.push(norm2_xy(mol.atomX(bto) - mol.atomX(bfr), mol.atomY(bto) - mol.atomY(bfr)));\n        }\n        Vec.sort(dsq);\n        let median = (nb & 1) == 1 ? Math.sqrt(dsq[nb >> 1]) : 0.5 * (Math.sqrt(dsq[nb >> 1]) + Math.sqrt(dsq[(nb >> 1) - 1]));\n        if (median < 0.1 || (median > Molecule.IDEALBOND * 0.9 && median < Molecule.IDEALBOND * 1.1))\n            return;\n        let box = mol.boundary();\n        let cx = box.midX(), cy = box.midY();\n        let scale = Molecule.IDEALBOND / median;\n        for (let n = mol.numAtoms; n >= 1; n--) {\n            let x = (mol.atomX(n) - cx) * scale + cx;\n            let y = (mol.atomY(n) - cy) * scale + cy;\n            mol.setAtomPos(n, x, y);\n        }\n    }\n    static centreMolecule(mol) {\n        if (MolUtil.isBlank(mol))\n            return;\n        let x = MolUtil.arrayAtomX(mol), y = MolUtil.arrayAtomY(mol);\n        let sz = x.length;\n        let invsz = 1.0 / sz;\n        let meanX = Vec.sum(x) * invsz, meanY = Vec.sum(y) * invsz;\n        let closest = Number.POSITIVE_INFINITY;\n        let deltaX = 0, deltaY = 0;\n        for (let n = 0; n < sz; n++) {\n            let dsq = norm2_xy(x[n] - meanX, y[n] - meanY);\n            if (dsq < closest) {\n                deltaX = -x[n];\n                deltaY = -y[n];\n                closest = dsq;\n            }\n        }\n        for (let n = 0; n < sz; n++)\n            mol.setAtomPos(n + 1, x[n] + deltaX, y[n] + deltaY);\n    }\n    static mirrorImage(mol) {\n        mol = mol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            mol.setAtomX(n, -mol.atomX(n));\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                mol.setBondType(n, Molecule.BONDTYPE_INCLINED);\n            else if (mol.bondType(n) == Molecule.BONDTYPE_INCLINED)\n                mol.setBondType(n, Molecule.BONDTYPE_DECLINED);\n        }\n        return mol;\n    }\n    static alignOrientFlip(mol1, idx1, mol2, idx2) {\n        if (idx1.length < 2 || idx1.length != idx2.length)\n            throw 'Invalid mapping indices.';\n        let x0 = mol1.atomX(idx1[0]), y0 = mol1.atomY(idx1[0]);\n        CoordUtil.translateMolecule(mol2, x0 - mol2.atomX(idx2[0]), y0 - mol2.atomY(idx2[0]));\n        const sz = idx1.length - 1;\n        let th1 = [], th2 = [];\n        let deltaA = 0, deltaB = 0;\n        for (let n = 0; n < sz; n++) {\n            th1.push(Math.atan2(mol1.atomY(idx1[n + 1]) - y0, mol1.atomX(idx1[n + 1]) - x0));\n            th2.push(Math.atan2(mol2.atomY(idx2[n + 1]) - y0, mol2.atomX(idx2[n + 1]) - x0));\n            let dthA = angleDiff(th1[n], th2[n]), dthB = angleDiff(th1[n], -th2[n]);\n            if (dthA < -175 * DEGRAD && deltaA > 0)\n                dthA += TWOPI;\n            else if (dthA > 175 * DEGRAD && deltaA < 0)\n                dthA -= TWOPI;\n            if (dthB < -175 * DEGRAD && deltaB > 0)\n                dthB += TWOPI;\n            else if (dthB > 175 * DEGRAD && deltaB < 0)\n                dthB -= TWOPI;\n            deltaA += dthA;\n            deltaB += dthB;\n        }\n        if (sz > 1) {\n            let inv = 1.0 / sz;\n            deltaA *= inv;\n            deltaB *= inv;\n        }\n        let scoreA = 0, scoreB = 0;\n        for (let n = 0; n < sz; n++) {\n            scoreA += Math.abs(angleDiff(th1[n], th2[n] + deltaA));\n            scoreB += Math.abs(angleDiff(th1[n], -th2[n] + deltaB));\n        }\n        if (scoreB < scoreA) {\n            for (let n = 1; n <= mol2.numAtoms; n++)\n                mol2.setAtomY(n, 2 * y0 - mol2.atomY(n));\n            for (let n = 1; n <= mol2.numBonds; n++) {\n                if (mol2.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                    mol2.setBondType(n, Molecule.BONDTYPE_INCLINED);\n                else if (mol2.bondType(n) == Molecule.BONDTYPE_INCLINED)\n                    mol2.setBondType(n, Molecule.BONDTYPE_DECLINED);\n            }\n            CoordUtil.rotateMolecule(mol2, x0, y0, deltaB);\n        }\n        else\n            CoordUtil.rotateMolecule(mol2, x0, y0, deltaA);\n    }\n    static atomIsWeirdLinear(mol, idx) {\n        let bonds = mol.atomAdjBonds(idx);\n        if (bonds.length != 2)\n            return false;\n        for (let n = 0; n < bonds.length; n++)\n            if (mol.bondOrder(bonds[n]) == 3)\n                return false;\n        let adj = mol.atomAdjList(idx);\n        let th1 = Math.atan2(mol.atomY(adj[0]) - mol.atomY(idx), mol.atomX(adj[0]) - mol.atomX(idx));\n        let th2 = Math.atan2(mol.atomY(adj[1]) - mol.atomY(idx), mol.atomX(adj[1]) - mol.atomX(idx));\n        return Math.abs(angleDiff(th1, th2)) >= 175 * DEGRAD;\n    }\n}\nCoordUtil.OVERLAP_THRESHOLD = 0.2;\nCoordUtil.OVERLAP_THRESHOLD_SQ = CoordUtil.OVERLAP_THRESHOLD * CoordUtil.OVERLAP_THRESHOLD;\nCoordUtil.DEFAULT_EQUIV_TOLERANCE = 0.2;\nexport { CoordUtil };\n//# sourceMappingURL=CoordUtil.js.map","import { GeomUtil } from '../util/Geom';\nimport { angleDiff, angleDiffPos, angleNorm, DEGRAD, norm2_xy, norm_xy, sortAngles, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { CoordUtil } from './CoordUtil';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nexport var Geometry;\n(function (Geometry) {\n    Geometry[Geometry[\"Linear\"] = 0] = \"Linear\";\n    Geometry[Geometry[\"Bent\"] = 1] = \"Bent\";\n    Geometry[Geometry[\"Trigonal\"] = 2] = \"Trigonal\";\n    Geometry[Geometry[\"Tetra1\"] = 3] = \"Tetra1\";\n    Geometry[Geometry[\"Tetra2\"] = 4] = \"Tetra2\";\n    Geometry[Geometry[\"SqPlan\"] = 5] = \"SqPlan\";\n    Geometry[Geometry[\"BasePyram\"] = 6] = \"BasePyram\";\n    Geometry[Geometry[\"TrigBip\"] = 7] = \"TrigBip\";\n    Geometry[Geometry[\"Octa1\"] = 8] = \"Octa1\";\n    Geometry[Geometry[\"Octa2\"] = 9] = \"Octa2\";\n})(Geometry || (Geometry = {}));\nclass SketchUtil {\n    static placeNewAtom(mol, el) {\n        let box = mol.boundary();\n        let x = box.maxX() + Molecule.IDEALBOND, y = box.maxY();\n        return mol.addAtom(el, x, y);\n    }\n    static placeNewFragment(mol, frag) {\n        if (frag.numAtoms == 0)\n            return;\n        let dirX = [1, 0, -1, 1, -1, 1, 0, -1], dirY = [1, 1, 1, 0, 0, -1, -1, -1];\n        let dx = Vec.numberArray(0, 8), dy = Vec.numberArray(0, 8), score = Vec.numberArray(0, 8);\n        let mbox = mol.boundary(), fbox = frag.boundary();\n        for (let n = 0; n < 8; n++) {\n            let vx = dirX[n], vy = dirY[n];\n            if (n == 0 || n == 3 || n == 5)\n                dx[n] = mbox.minX() - fbox.maxX();\n            else if (n == 2 || n == 4 || n == 7)\n                dx[n] = mbox.maxX() - fbox.minX();\n            else\n                dx[n] = 0.5 * (mbox.minX() + mbox.maxX() - fbox.minX() - fbox.maxX());\n            if (n == 5 || n == 6 || n == 7)\n                dy[n] = mbox.minY() - fbox.maxY();\n            else if (n == 0 || n == 1 || n == 2)\n                dy[n] = mbox.maxY() - fbox.minY();\n            else\n                dy[n] = 0.5 * (mbox.minY() + mbox.maxY() - fbox.minY() - fbox.maxY());\n            dx[n] -= vx;\n            dy[n] -= vy;\n            score[n] = SketchUtil.fragPosScore(mol, frag, dx[n], dy[n]);\n            vx *= 0.25;\n            vy *= 0.25;\n            for (let iter = 100; iter > 0; iter--) {\n                let iscore = SketchUtil.fragPosScore(mol, frag, dx[n] + vx, dy[n] + vy);\n                if (iscore <= score[n])\n                    break;\n                score[n] = iscore;\n                dx[n] += vx;\n                dy[n] += vy;\n            }\n            for (let iter = 100; iter > 0; iter--)\n                for (let d = 0; d < 8; d++) {\n                    vx = dirX[d] * 0.1;\n                    vy = dirY[d] * 0.1;\n                    let iscore = SketchUtil.fragPosScore(mol, frag, dx[n] + vx, dy[n] + vy);\n                    if (iscore <= score[n])\n                        break;\n                    score[n] = iscore;\n                    dx[n] += vx;\n                    dy[n] += vy;\n                }\n        }\n        let best = 0;\n        for (let n = 1; n < 8; n++)\n            if (score[n] > score[best])\n                best = n;\n        frag = frag.clone();\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomPos(n, frag.atomX(n) + dx[best], frag.atomY(n) + dy[best]);\n        mol.append(frag);\n    }\n    static fragPosScore(mol, frag, dx, dy) {\n        let score = 0;\n        for (let i = 1; i <= mol.numAtoms; i++)\n            for (let j = 1; j <= frag.numAtoms; j++) {\n                let ox = frag.atomX(j) + dx - mol.atomX(i), oy = frag.atomY(j) + dy - mol.atomY(i);\n                let dist2 = ox * ox + oy * oy;\n                if (dist2 < 1)\n                    return 0;\n                score += 1 / dist2;\n            }\n        let mbox = mol.boundary(), fbox = frag.boundary();\n        let minX = Math.min(fbox.minX() + dx, mbox.minX()), maxX = Math.max(fbox.maxX() + dx, mbox.maxX());\n        let minY = Math.min(fbox.minY() + dy, mbox.minY()), maxY = Math.max(fbox.maxY() + dy, mbox.maxY());\n        let rangeX = Math.max(1, maxX - minX), rangeY = Math.max(1, maxY - minY);\n        let ratio = Math.max(rangeX / rangeY, rangeY / rangeX);\n        return score / ratio;\n    }\n    static mergeOverlappingAtoms(mol) {\n        return SketchUtil.mergeFragmentsDiv(mol, 0);\n    }\n    static mergeFragmentsDiv(mol, div) {\n        const na = mol.numAtoms;\n        let omask = CoordUtil.overlappingAtomMask(mol);\n        let chopmask = Vec.booleanArray(false, na);\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        let remap = [];\n        for (let n = 0; n < na; n++)\n            remap.push(n + 1);\n        let div1 = div, div2 = div + 1;\n        if (div == 0)\n            div1 = na;\n        for (let i = 1; i <= div1; i++)\n            if (omask[i - 1] && !chopmask[i - 1]) {\n                if (div == 0)\n                    div2 = i + 1;\n                for (let j = div2; j <= na; j++)\n                    if (omask[j - 1] && !chopmask[j - 1]) {\n                        if (norm2_xy(mx[i - 1] - mx[j - 1], my[i - 1] - my[j - 1]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                            continue;\n                        let oldN = j, newN = i;\n                        let exotic = [0, 0];\n                        for (let k = 0; k < 2; k++) {\n                            let a = k == 0 ? i : j;\n                            exotic[k] = (mol.atomElement(a) == 'C' ? 0 : 1)\n                                + (mol.atomElement(a) == 'X' ? -100 : 0)\n                                + (mol.atomCharge(a) != 0 ? 1 : 0)\n                                + (mol.atomUnpaired(a) != 0 ? 1 : 0)\n                                + (mol.atomIsotope(a) != Molecule.ISOTOPE_NATURAL ? 1 : 0)\n                                + (mol.atomHExplicit(a) != Molecule.HEXPLICIT_UNKNOWN ? 1 : 0)\n                                + (MolUtil.hasAbbrev(mol, a) ? 1000 : 0);\n                        }\n                        if (exotic[1] > exotic[0]) {\n                            oldN = i;\n                            newN = j;\n                        }\n                        for (let n = 1; n <= mol.numBonds; n++) {\n                            if (mol.bondFrom(n) == oldN)\n                                mol.setBondFrom(n, newN);\n                            if (mol.bondTo(n) == oldN)\n                                mol.setBondTo(n, newN);\n                        }\n                        chopmask[oldN - 1] = true;\n                        remap[oldN - 1] = newN;\n                    }\n            }\n        for (let n = na; n >= 1; n--)\n            if (chopmask[n - 1]) {\n                if (n <= div)\n                    div--;\n                mol.deleteAtomAndBonds(n);\n                for (let i = 0; i < na; i++)\n                    if (remap[i] > n)\n                        remap[i]--;\n            }\n        for (let n = mol.numAtoms; n > div; n--)\n            if (mol.atomElement(n) == 'X') {\n                mol.deleteAtomAndBonds(n);\n                for (let i = 0; i < na; i++)\n                    if (remap[i] > n)\n                        remap[i]--;\n            }\n        MolUtil.removeDuplicateBonds(mol);\n        return remap;\n    }\n    static mergeFragmentsMask(mol, mask) {\n        let chopmask = Vec.booleanArray(false, mol.numAtoms);\n        let na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        for (let i = 1; i <= na; i++)\n            if (mask[i - 1])\n                for (let j = 1; j <= na; j++)\n                    if (!mask[j - 1] && !chopmask[j - 1])\n                        if (norm2_xy(mx[i - 1] - mx[j - 1], my[i - 1] - my[j - 1]) < CoordUtil.OVERLAP_THRESHOLD_SQ) {\n                            let oldN = j, newN = i;\n                            if (mol.atomElement(i) == 'C' && mol.atomElement(j) != 'C' && mol.atomElement(j) != 'X')\n                                [oldN, newN] = [i, j];\n                            if (mol.atomHExplicit(newN) == Molecule.HEXPLICIT_UNKNOWN)\n                                mol.setAtomHExplicit(newN, mol.atomHExplicit(oldN));\n                            mol.setAtomUnpaired(newN, mol.atomUnpaired(newN) + mol.atomUnpaired(oldN));\n                            mol.setAtomCharge(newN, mol.atomCharge(newN) + mol.atomCharge(oldN));\n                            mol.setAtomExtra(newN, Vec.concat(mol.atomExtra(oldN), mol.atomExtra(newN)));\n                            for (let n = 1; n <= mol.numBonds; n++) {\n                                if (mol.bondFrom(n) == oldN)\n                                    mol.setBondFrom(n, newN);\n                                if (mol.bondTo(n) == oldN)\n                                    mol.setBondTo(n, newN);\n                            }\n                            chopmask[oldN - 1] = true;\n                        }\n        for (let n = chopmask.length; n >= 1; n--)\n            if (chopmask[n - 1])\n                mol.deleteAtomAndBonds(n);\n        MolUtil.removeDuplicateBonds(mol);\n    }\n    static matchAngleGeometry(geom, theta) {\n        if (theta.length <= 1)\n            return true;\n        let match = SketchUtil.GEOM_ANGLES[geom], mtheta = Vec.numberArray(0, theta.length);\n        let hit = Vec.booleanArray(false, match.length);\n        for (let n = 0; n < theta.length; n++)\n            for (let s = 1; s >= -1; s -= 2) {\n                for (let i = 0; i < theta.length; i++)\n                    mtheta[i] = (theta[i] - theta[0]) * s;\n                Vec.setTo(hit, false);\n                let gotall = true;\n                for (let i = 0; i < mtheta.length; i++) {\n                    let got = false;\n                    for (let j = 0; j < match.length; j++)\n                        if (!hit[j] && Math.abs(angleDiff(mtheta[i], match[j])) < 3 * DEGRAD) {\n                            hit[j] = true;\n                            got = true;\n                            break;\n                        }\n                    if (!got) {\n                        gotall = false;\n                        break;\n                    }\n                }\n                if (gotall)\n                    return true;\n            }\n        return false;\n    }\n    static primeDirections(mol, atom) {\n        let angles = SketchUtil.calculateNewBondAngles(mol, atom, 1);\n        let exits = SketchUtil.exitVectors(mol, atom);\n        return GeomUtil.uniqueAngles(angles.concat(exits), 2 * DEGRAD);\n    }\n    static exitVectors(mol, atom) {\n        let adj = mol.atomAdjList(atom), sz = adj.length;\n        if (sz == 0)\n            return [0, 90 * DEGRAD, 180 * DEGRAD, -90 * DEGRAD];\n        if (sz == 1)\n            return [];\n        let ret = [];\n        let ang = GeomUtil.sortAngles(CoordUtil.atomBondAngles(mol, atom, adj));\n        for (let n = 0; n < sz; n++) {\n            let nn = n < sz - 1 ? n + 1 : 0;\n            ret.push(angleNorm(ang[n] + 0.5 * angleDiffPos(ang[nn], ang[n])));\n        }\n        return ret;\n    }\n    static calculateNewBondAngles(mol, atom, order) {\n        let adj = mol.atomAdjList(atom);\n        const sz = adj.length;\n        if (sz == 0) {\n            let atno = mol.atomicNumber(atom), atblk = Chemistry.ELEMENT_BLOCKS[atno];\n            if (atblk <= 2)\n                return [0, 90 * DEGRAD, 180 * DEGRAD, -90 * DEGRAD];\n            else\n                return [90 * DEGRAD, -90 * DEGRAD, 30 * DEGRAD, 150 * DEGRAD, 210 * DEGRAD, -30 * DEGRAD, 180 * DEGRAD, 0 * DEGRAD];\n        }\n        let geom = SketchUtil.guessAtomGeometry(mol, atom, order);\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        for (let n = 0; n < geom.length; n++) {\n            let ret = SketchUtil.mapAngleSubstituent(geom[n], ang);\n            if (ret != null)\n                return ret;\n        }\n        return [];\n    }\n    static guessAtomGeometry(mol, atom, order) {\n        let adj = mol.atomAdjList(atom);\n        let sz = adj.length, atno = mol.atomicNumber(atom);\n        let atblk = Chemistry.ELEMENT_BLOCKS[atno], elrow = Chemistry.ELEMENT_ROWS[atno];\n        let el = mol.atomElement(atom);\n        let adjBO = [], adjAN = [], pri = [];\n        let allSingle = true;\n        for (let n = 0; n < sz; n++) {\n            adjBO.push(mol.bondOrder(mol.findBond(atom, adj[n])));\n            adjAN.push(mol.atomicNumber(adj[n]));\n            pri.push(adjBO[n] * 200 + adjAN[n]);\n            if (adjBO[n] != 1)\n                allSingle = true;\n        }\n        for (let p = 0; p < sz - 1;) {\n            if (pri[p] > pri[p + 1]) {\n                Vec.swap(adj, p, p + 1);\n                Vec.swap(adjBO, p, p + 1);\n                Vec.swap(adjAN, p, p + 1);\n                Vec.swap(pri, p, p + 1);\n                if (p > 0)\n                    p--;\n            }\n            else\n                p++;\n        }\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        if (sz == 1) {\n            if (el == 'C' || el == 'N') {\n                if (adjBO[0] == 2 && order == 2)\n                    return [Geometry.Linear];\n                if ((adjBO[0] == 3 && order == 1) || (adjBO[0] == 1 && order == 3))\n                    return [Geometry.Linear];\n            }\n            if (atblk > 2)\n                return [Geometry.Octa1, Geometry.Octa2];\n            if (order != 0 && (el == 'C' || el == 'N' || el == 'O'))\n                return [Geometry.Trigonal];\n            return [Geometry.Trigonal, Geometry.Linear];\n        }\n        if (sz == 2 && Math.abs(angleDiff(ang[0], ang[1])) >= 175 * DEGRAD) {\n            if (atblk <= 2)\n                return [Geometry.SqPlan];\n            else\n                return [Geometry.Octa1, Geometry.Octa2];\n        }\n        let geom = [];\n        if (atblk == 0)\n            geom = [Geometry.Trigonal, Geometry.SqPlan];\n        else if (atblk == 1)\n            geom = [Geometry.Trigonal, Geometry.SqPlan, Geometry.Octa1, Geometry.Octa2];\n        else if (atblk == 2) {\n            geom.push(Geometry.Trigonal);\n            if (el == 'C' && allSingle) {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n            }\n            else if (el == 'C' && !allSingle) {\n            }\n            else if (elrow <= 3) {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n            }\n            else {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n                geom.push(Geometry.Octa1);\n                geom.push(Geometry.Octa2);\n            }\n        }\n        else {\n            geom.push(Geometry.Octa1);\n            geom.push(Geometry.Octa2);\n        }\n        for (let n = geom.length - 1; n >= 0; n--) {\n            if (!SketchUtil.matchAngleGeometry(geom[n], ang))\n                geom.splice(n, 1);\n        }\n        return geom;\n    }\n    static mapAngleSubstituent(geom, ang) {\n        let gtheta = SketchUtil.GEOM_ANGLES[geom];\n        const asz = ang.length, gsz = gtheta.length;\n        if (asz >= gsz)\n            return null;\n        if (asz == 0)\n            return gtheta.slice(0);\n        let vac = [];\n        for (let n = 0; n < asz; n++)\n            for (let k = 0; k < gsz; k++)\n                for (let s = 1; s >= -1; s -= 2) {\n                    let gang = [];\n                    for (let i = 0; i < gsz; i++)\n                        gang.push(angleNorm(ang[n] + s * (gtheta[i] - gtheta[k])));\n                    let mask = Vec.booleanArray(false, gsz);\n                    let mcount = 0;\n                    for (let i = 0; i < gsz; i++)\n                        if (!mask[i])\n                            for (let j = 0; j < asz; j++)\n                                if (Math.abs(angleDiff(gang[i], ang[j])) < 3 * DEGRAD) {\n                                    mask[i] = true;\n                                    mcount++;\n                                    break;\n                                }\n                    if (mcount != asz)\n                        continue;\n                    for (let i = 0; i < gsz; i++)\n                        if (!mask[i])\n                            vac.push(gang[i]);\n                }\n        if (vac.length == 0)\n            return null;\n        vac = GeomUtil.sortAngles(vac);\n        for (let n = 0; n < vac.length - 1; n++) {\n            let th1 = vac[n], th2 = vac[n + 1], dth = angleDiff(th2, th1);\n            if (Math.abs(dth) < 5 * DEGRAD) {\n                vac[n] = th1 + 0.5 * dth;\n                vac.splice(n + 1, 1);\n                n--;\n            }\n        }\n        return vac;\n    }\n    static refitAtomGeometry(mol, atom, geom) {\n        let gtheta = SketchUtil.GEOM_ANGLES[geom];\n        let gsz = gtheta.length;\n        let adj = mol.atomAdjList(atom);\n        let asz = adj.length;\n        if (asz <= 1 || asz > gsz)\n            return null;\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        let inRing = Vec.booleanArray(false, asz);\n        let allInRing = true;\n        for (let n = 0; n < asz; n++) {\n            inRing[n] = mol.bondInRing(mol.findBond(atom, adj[n]));\n            if (!inRing[n])\n                allInRing = false;\n        }\n        if (allInRing)\n            return null;\n        let bestAng = null;\n        let bestScore = 0;\n        let ww = MolUtil.calculateWalkWeight(mol, atom);\n        for (let i = 0; i < gsz; i++)\n            for (let j = 0; j < asz; j++)\n                for (let s = 1; s >= -1; s -= 2) {\n                    let newAng = Vec.numberArray(0, asz);\n                    let mask = Vec.booleanArray(false, gsz);\n                    for (let n1 = 0; n1 < asz; n1++) {\n                        let best = -1;\n                        let bdiff = 0;\n                        for (let n2 = 0; n2 < gsz; n2++)\n                            if (!mask[n2]) {\n                                let th = angleNorm(gtheta[n2] * s - gtheta[i] + ang[j]);\n                                let diff = Math.abs(angleDiff(th, ang[n1]));\n                                if (best < 0 || diff < bdiff) {\n                                    best = n2;\n                                    bdiff = diff;\n                                    newAng[n1] = th;\n                                }\n                            }\n                        mask[best] = true;\n                    }\n                    let ringClash = false;\n                    for (let n = 0; n < asz; n++)\n                        if (inRing[n] && Math.abs(angleDiff(newAng[n], ang[n])) > 2 * DEGRAD) {\n                            ringClash = true;\n                            break;\n                        }\n                    if (ringClash)\n                        continue;\n                    let score = 0;\n                    for (let n = 0; n < asz; n++)\n                        score += ww[adj[n] - 1] * Math.abs(angleDiff(newAng[n], ang[n]));\n                    if (bestAng == null || score < bestScore) {\n                        bestAng = newAng;\n                        bestScore = score;\n                    }\n                }\n        if (bestAng == null)\n            return null;\n        let same = true;\n        for (let n = 0; n < asz; n++)\n            if (Math.abs(angleDiff(bestAng[n], ang[n])) > 2 * DEGRAD) {\n                same = false;\n                break;\n            }\n        if (same)\n            return null;\n        mol = mol.clone();\n        for (let n = 0; n < asz; n++)\n            if (!inRing[n])\n                CoordUtil.rotateBond(mol, atom, adj[n], bestAng[n] - ang[n]);\n        return mol;\n    }\n    static switchAtomGeometry(mol, src, dst, geoms) {\n        let bestAtom = 0;\n        let bestAng = 0, bestX = 0, bestY = 0;\n        let adj = mol.atomAdjList(src);\n        let ang = CoordUtil.atomBondAngles(mol, src, adj), theta = Vec.numberArray(0, ang.length - 1);\n        let cx = mol.atomX(src), cy = mol.atomY(src);\n        for (let i = 0; i < dst.length; i++) {\n            let a = adj.indexOf(dst[i]);\n            let curth = ang[a];\n            for (let n = 0, p = 0; n < adj.length; n++)\n                if (n != a)\n                    theta[p++] = ang[n];\n            let r = norm_xy(mol.atomX(dst[i]) - cx, mol.atomY(dst[i]) - cy);\n            for (let j = 0; j < geoms.length; j++) {\n                if (adj.length >= SketchUtil.GEOM_ANGLES[geoms[j]].length)\n                    continue;\n                let newAng = SketchUtil.mapAngleSubstituent(geoms[j], theta);\n                if (newAng != null)\n                    for (let n = 0; n < newAng.length; n++) {\n                        let dth = angleDiff(newAng[n], curth);\n                        if (Math.abs(dth) < 3 * DEGRAD)\n                            continue;\n                        if (dth < 0)\n                            dth += TWOPI;\n                        if (bestAtom == 0 || dth < bestAng - 2 * DEGRAD || (dth < bestAng + 2 * DEGRAD && dst[i] < bestAtom)) {\n                            let x = cx + r * Math.cos(newAng[n]);\n                            let y = cy + r * Math.sin(newAng[n]);\n                            if (CoordUtil.atomAtPoint(mol, x, y) != 0)\n                                continue;\n                            bestAtom = dst[i];\n                            bestAng = dth;\n                            bestX = x;\n                            bestY = y;\n                        }\n                    }\n                break;\n            }\n        }\n        if (bestAtom == 0)\n            return null;\n        mol = mol.clone();\n        mol.setAtomPos(bestAtom, bestX, bestY);\n        return mol;\n    }\n    static pickAtomsToConnect(mol, aidx) {\n        if (aidx.length < 2)\n            return null;\n        if (aidx.length == 2) {\n            if (mol.findBond(aidx[0], aidx[1]) > 0)\n                return null;\n            return aidx;\n        }\n        const AUTO_DSQ = sqr(Molecule.IDEALBOND + 0.1);\n        let bestDSQ = Number.MAX_VALUE;\n        let bestA1 = 0, bestA2 = 0;\n        let conn = [];\n        for (let i = 0; i < aidx.length - 1; i++)\n            for (let j = i + 1; j < aidx.length; j++) {\n                if (mol.findBond(aidx[i], aidx[j]) > 0)\n                    continue;\n                let dsq = norm2_xy(mol.atomX(aidx[i]) - mol.atomX(aidx[j]), mol.atomY(aidx[i]) - mol.atomY(aidx[j]));\n                if (dsq < AUTO_DSQ) {\n                    conn.push(aidx[i]);\n                    conn.push(aidx[j]);\n                }\n                else if (dsq < bestDSQ) {\n                    bestDSQ = dsq;\n                    bestA1 = aidx[i];\n                    bestA2 = aidx[j];\n                }\n            }\n        if (conn.length == 0 && bestA1 != 0) {\n            conn.push(bestA1);\n            conn.push(bestA2);\n        }\n        return conn.length == 0 ? null : conn;\n    }\n    static pickNewAtomDirection(mol, atom, theta) {\n        if (theta.length == 1)\n            return theta[0];\n        let bestTheta = theta[0], bestScore = Number.MAX_VALUE;\n        for (let n = 0; n < theta.length; n++) {\n            let px = mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(theta[n]);\n            let py = mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(theta[n]);\n            let score = CoordUtil.congestionPoint(mol, px, py);\n            if (score > bestScore)\n                continue;\n            if (CoordUtil.overlapsAtom(mol, px, py, 0.2))\n                score += 1E5;\n            if (score < bestScore) {\n                bestTheta = theta[n];\n                bestScore = score;\n            }\n        }\n        return bestTheta;\n    }\n    static joinOverlappingAtoms(mol, mask) {\n        mol = mol.clone();\n        mask = mask.slice(0);\n        const na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        let groups = [];\n        let groupX = [], groupY = [];\n        for (let i = 0; i < na - 1; i++)\n            if (mask[i]) {\n                let g = [i + 1];\n                let x = mx[i], y = my[i];\n                for (let j = i + 1; j < na; j++)\n                    if (mask[j]) {\n                        if (norm2_xy(mx[j] - mx[i], my[j] - my[i]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                            continue;\n                        g.push(j + 1);\n                        x += mx[j];\n                        y += my[j];\n                        let adjb = mol.atomAdjBonds(j + 1);\n                        for (let n = 0; n < adjb.length; n++) {\n                            if (mol.bondFrom(adjb[n]) == j + 1)\n                                mol.setBondFrom(adjb[n], i + 1);\n                            else if (mol.bondTo(adjb[n]) == j + 1)\n                                mol.setBondTo(adjb[n], i + 1);\n                        }\n                    }\n                if (g.length == 1)\n                    continue;\n                groups.push(g);\n                groupX.push(x / g.length);\n                groupY.push(y / g.length);\n            }\n        if (groups.length == 0)\n            return null;\n        let keepmask = Vec.booleanArray(true, na);\n        for (let n = 0; n < groups.length; n++) {\n            let g = groups[n];\n            mol.setAtomPos(g[0], groupX[n], groupY[n]);\n            for (let i = 1; i < g.length; i++)\n                keepmask[g[i] - 1] = false;\n        }\n        mol = MolUtil.subgraphMask(mol, keepmask);\n        MolUtil.removeDuplicateBonds(mol);\n        return mol;\n    }\n    static moveToEdge(mol, mask, dx, dy) {\n        let gotS = false, gotN = false;\n        let sx1 = 0, sy1 = 0, sx2 = 0, sy2 = 0;\n        let nx1 = 0, ny1 = 0, nx2 = 0, ny2 = 0;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n), y = mol.atomY(n);\n            if (mask[n - 1]) {\n                if (!gotS || x < sx1)\n                    sx1 = x;\n                if (!gotS || y < sy1)\n                    sy1 = y;\n                if (!gotS || x > sx2)\n                    sx2 = x;\n                if (!gotS || y > sy2)\n                    sy2 = y;\n                gotS = true;\n            }\n            else {\n                if (!gotN || x < nx1)\n                    nx1 = x;\n                if (!gotN || y < ny1)\n                    ny1 = y;\n                if (!gotN || x > nx2)\n                    nx2 = x;\n                if (!gotN || y > ny2)\n                    ny2 = y;\n                gotN = true;\n            }\n        }\n        const SEPARATE = 1.0, SEPTEST = 0.9;\n        if ((dx < 0 && dy == 0 && sx2 <= nx1 - SEPTEST) ||\n            (dx > 0 && dy == 0 && sx1 >= nx2 + SEPTEST) ||\n            (dx == 0 && dy < 0 && sy2 <= ny1 - SEPTEST) ||\n            (dx == 0 && dy > 0 && sy1 >= ny2 + SEPTEST)) {\n            return null;\n        }\n        mol = mol.clone();\n        let ox = 0, oy = 0;\n        if (dx < 0)\n            ox = nx1 - sx2 - SEPARATE;\n        if (dx > 0)\n            ox = nx2 - sx1 + SEPARATE;\n        if (dy < 0)\n            oy = ny1 - sy2 - SEPARATE;\n        if (dy > 0)\n            oy = ny2 - sy1 + SEPARATE;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1])\n                mol.setAtomPos(n, mol.atomX(n) + ox, mol.atomY(n) + oy);\n        return mol;\n    }\n    static placeAdditionalHydrogens(mol, atom, numH) {\n        let base = mol.numAtoms;\n        const x0 = mol.atomX(atom), y0 = mol.atomY(atom);\n        let adj = mol.atomAdjList(atom);\n        if (adj.length == 2 && numH == 2) {\n            const th1 = Math.atan2(mol.atomY(adj[0]) - y0, mol.atomX(adj[0]) - x0);\n            const th2 = Math.atan2(mol.atomY(adj[1]) - y0, mol.atomX(adj[1]) - x0);\n            if (Math.abs(angleDiff(th1, th2)) < 170 * DEGRAD) {\n                let theta = 0.5 * (th1 + th2) + Math.PI;\n                let th3 = theta - 30 * DEGRAD, th4 = theta + 30 * DEGRAD;\n                mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th3), y0 + Molecule.IDEALBOND * Math.sin(th3));\n                mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th4), y0 + Molecule.IDEALBOND * Math.sin(th4));\n                mol.addBond(atom, base + 1, 1);\n                mol.addBond(atom, base + 2, 1);\n                return;\n            }\n        }\n        if (adj.length == 1 && numH == 3) {\n            let th1 = Math.atan2(mol.atomY(adj[0]) - y0, mol.atomX(adj[0]) - x0);\n            let th2 = th1 + 90 * DEGRAD, th3 = th1 + 180 * DEGRAD, th4 = th1 + 270 * DEGRAD;\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th2), y0 + Molecule.IDEALBOND * Math.sin(th2));\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th3), y0 + Molecule.IDEALBOND * Math.sin(th3));\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th4), y0 + Molecule.IDEALBOND * Math.sin(th4));\n            mol.addBond(atom, base + 1, 1);\n            mol.addBond(atom, base + 2, 1);\n            mol.addBond(atom, base + 3, 1);\n            return;\n        }\n        let theta = SketchUtil.pickNewAtomDirection(mol, atom, SketchUtil.primeDirections(mol, atom));\n        mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(theta), y0 + Molecule.IDEALBOND * Math.sin(theta));\n        mol.addBond(atom, base + 1, 1);\n        if (numH > 1)\n            SketchUtil.placeAdditionalHydrogens(mol, atom, numH - 1);\n    }\n    static allViableDirections(mol, atom, order) {\n        if (mol.atomAdjCount(atom) == 0) {\n            let angles = [];\n            for (let n = 0; n < 12; n++)\n                angles.push(30 * DEGRAD);\n            return angles;\n        }\n        let adj = mol.atomAdjList(atom);\n        let angles = SketchUtil.exitVectors(mol, atom);\n        let geom = SketchUtil.guessAtomGeometry(mol, atom, order);\n        if (adj.length == 1 && geom.indexOf(Geometry.Linear) < 0)\n            geom.push(Geometry.Linear);\n        let bndang = CoordUtil.atomBondAngles(mol, atom, adj);\n        for (let g of geom) {\n            let map = SketchUtil.mapAngleSubstituent(g, bndang);\n            if (map != null)\n                for (let th of map)\n                    angles.push(th);\n        }\n        return GeomUtil.uniqueAngles(angles, 2 * DEGRAD);\n    }\n    static proposeNewRing(mol, rsz, x, y, dx, dy, snap) {\n        let theta = dy == 0 && dx == 0 ? 0.5 * Math.PI : Math.atan2(dy, dx);\n        if (snap) {\n            const chunk = 30 * DEGRAD;\n            theta = Math.round(theta / chunk) * chunk;\n        }\n        return SketchUtil.positionSimpleRing(mol, rsz, x, y, theta);\n    }\n    static proposeAtomRing(mol, rsz, atom, dx, dy) {\n        let thsnap = [];\n        let cx = mol.atomX(atom), cy = mol.atomY(atom);\n        if (mol.atomAdjCount(atom) == 0) {\n            for (let n = 0; n < 12; n++)\n                thsnap.push(TWOPI * n / 12);\n        }\n        else if (mol.atomAdjCount(atom) == 1) {\n            let nbr = mol.atomAdjList(atom)[0];\n            thsnap.push(angleNorm(Math.atan2(mol.atomY(nbr) - cy, mol.atomX(nbr) - cx) + Math.PI));\n        }\n        else {\n            let angs = [];\n            for (let nbr of mol.atomAdjList(atom))\n                angs.push(Math.atan2(mol.atomY(nbr) - cy, mol.atomX(nbr) - cx));\n            angs = sortAngles(angs);\n            for (let n = 0; n < angs.length; n++) {\n                let th1 = angs[n], th2 = angs[n < angs.length - 1 ? n + 1 : 0];\n                thsnap.push(th1 + 0.5 * angleDiffPos(th2, th1));\n            }\n        }\n        let theta = Math.atan2(dy, dx);\n        let bestTheta = 0, bestDelta = Number.MAX_VALUE;\n        for (let th of thsnap) {\n            let delta = Math.abs(angleDiff(th, theta));\n            if (delta < bestDelta) {\n                bestTheta = th;\n                bestDelta = delta;\n            }\n        }\n        return SketchUtil.positionSimpleRing(mol, rsz, mol.atomX(atom), mol.atomY(atom), bestTheta);\n    }\n    static proposeBondRing(mol, rsz, bond, dx, dy) {\n        let bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        let bx = mol.atomX(bto) - mol.atomX(bfr), by = mol.atomY(bto) - mol.atomY(bfr);\n        let sign = dx * by - dy * bx;\n        let delta = sign > 0 ? -90 * DEGRAD : 90 * DEGRAD;\n        let theta = Math.atan2(by, bx) + delta;\n        let dth = TWOPI / rsz;\n        let rad = Molecule.IDEALBOND / (2.0 * Math.sin(0.5 * dth)), brad = rad * Math.cos(0.5 * dth);\n        let cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto)) + brad * Math.cos(theta);\n        let cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto)) + brad * Math.sin(theta);\n        let rx = [], ry = [];\n        for (let n = 0; n < rsz; n++) {\n            let th = theta - Math.PI + (n - 0.5) * dth;\n            rx.push(cx + Math.cos(th) * rad);\n            ry.push(cy + Math.sin(th) * rad);\n        }\n        let [i1, i2] = sign < 0 ? [bfr, bto] : [bto, bfr];\n        rx[0] = mol.atomX(i1);\n        ry[0] = mol.atomY(i1);\n        rx[1] = mol.atomX(i2);\n        ry[1] = mol.atomY(i2);\n        return [rx, ry];\n    }\n    static positionSimpleRing(mol, rsz, x, y, theta) {\n        let dth = TWOPI / rsz;\n        let rad = Molecule.IDEALBOND / (2 * Math.sin(0.5 * dth));\n        let cx = x + rad * Math.cos(theta), cy = y + rad * Math.sin(theta);\n        let rx = [], ry = [];\n        for (let n = 0; n < rsz; n++) {\n            let th = theta - Math.PI + n * dth;\n            rx.push(cx + Math.cos(th) * rad);\n            ry.push(cy + Math.sin(th) * rad);\n        }\n        return [rx, ry];\n    }\n    static guidelineSprouts(mol, atom) {\n        let sprouts = [];\n        let angs = [], ords = [];\n        for (let n = 0; n < 3; n++) {\n            angs.push(SketchUtil.allViableDirections(mol, atom, n + 1));\n            ords.push([n + 1]);\n            for (let i = 0; i < n; i++)\n                if (angs[i] != null && Vec.equals(angs[n], angs[i])) {\n                    angs[n] = null;\n                    ords[i].push(n + 1);\n                }\n        }\n        const cx = mol.atomX(atom), cy = mol.atomY(atom);\n        for (let n = 0; n < 3; n++)\n            if (angs[n] != null) {\n                let sprout = {\n                    atom: atom,\n                    orders: ords[n],\n                    x: [],\n                    y: [],\n                };\n                for (let i = 0; i < angs[n].length; i++) {\n                    sprout.x[i] = cx + Math.cos(angs[n][i]) * Molecule.IDEALBOND;\n                    sprout.y[i] = cy + Math.sin(angs[n][i]) * Molecule.IDEALBOND;\n                }\n                sprouts.push(sprout);\n            }\n        return sprouts;\n    }\n}\nSketchUtil.GEOM_ANGLES = [\n    [0, 180 * DEGRAD],\n    [0, 120 * DEGRAD],\n    [0, 120 * DEGRAD, 240 * DEGRAD],\n    [0, 90 * DEGRAD, 150 * DEGRAD, 240 * DEGRAD],\n    [0, 120 * DEGRAD, 180 * DEGRAD, 240 * DEGRAD],\n    [0, 90 * DEGRAD, 180 * DEGRAD, 270 * DEGRAD],\n    [0, 90 * DEGRAD, 150 * DEGRAD, 210 * DEGRAD, 270 * DEGRAD],\n    [0, 60 * DEGRAD, 90 * DEGRAD, 180 * DEGRAD, 210 * DEGRAD],\n    [0, 60 * DEGRAD, 120 * DEGRAD, 180 * DEGRAD, 240 * DEGRAD, 300 * DEGRAD],\n    [0, 45 * DEGRAD, 90 * DEGRAD, 180 * DEGRAD, 225 * DEGRAD, 270 * DEGRAD]\n];\nexport { SketchUtil };\n//# sourceMappingURL=SketchUtil.js.map","import { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { CoordUtil } from './CoordUtil';\nimport { Graph } from './Graph';\nimport { Molecule } from './Molecule';\nimport { PolymerBlock } from '../mol/PolymerBlock';\nimport { SketchUtil } from './SketchUtil';\nclass MolUtil {\n    static isBlank(mol) {\n        if (mol == null)\n            return true;\n        return mol.numAtoms == 0;\n    }\n    static notBlank(mol) {\n        if (mol == null)\n            return false;\n        return mol.numAtoms > 0;\n    }\n    static orBlank(mol) { return mol == null ? new Molecule() : mol; }\n    static hasAnyAbbrev(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n))\n                return true;\n        return false;\n    }\n    static hasAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra == null ? 0 : extra.length); n++)\n            if (extra[n].startsWith('a'))\n                return true;\n        return false;\n    }\n    static getAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                return Molecule.fromString(extra[n].substring(1));\n            }\n        return null;\n    }\n    static setAbbrev(mol, atom, frag) {\n        let attidx = 0;\n        for (let n = 1; n <= frag.numAtoms; n++)\n            if (frag.atomElement(n) == MolUtil.ABBREV_ATTACHMENT) {\n                attidx = n;\n                break;\n            }\n        if (attidx == 0)\n            throw 'No attachment points indicated.';\n        if (attidx >= 2) {\n            frag = frag.clone();\n            frag.swapAtoms(attidx, 1);\n        }\n        let adj = mol.atomAdjList(atom);\n        if (adj.length > 1)\n            throw 'Setting abbreviation for non-terminal atom.';\n        if (frag.atomAdjCount(1) == 1 && mol.atomAdjCount(atom) > 0) {\n            let b1 = mol.findBond(atom, mol.atomAdjList(atom)[0]);\n            let b2 = frag.findBond(1, frag.atomAdjList(1)[0]);\n            mol.setBondOrder(b1, frag.bondOrder(b2));\n        }\n        let extra = mol.atomExtra(atom);\n        let idx = -1;\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                idx = n;\n                break;\n            }\n        if (idx < 0)\n            idx = extra.push(null) - 1;\n        extra[idx] = 'a' + frag.toString();\n        mol.setAtomExtra(atom, extra);\n    }\n    static validateAbbrevs(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                if (mol.atomAdjCount(n) > 1)\n                    MolUtil.clearAbbrev(mol, n);\n                if (mol.atomCharge(n) != 0)\n                    mol.setAtomCharge(n, 0);\n                if (mol.atomUnpaired(n) != 0)\n                    mol.setAtomUnpaired(n, 0);\n                if (mol.atomIsotope(n) != 0)\n                    mol.setAtomIsotope(n, Molecule.ISOTOPE_NATURAL);\n                if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN)\n                    mol.setAtomHExplicit(n, Molecule.HEXPLICIT_UNKNOWN);\n            }\n    }\n    static convertToAbbrev(mol, srcmask, abbrevName) {\n        let molidx = this.convertToAbbrevIndex(mol, srcmask, abbrevName);\n        return molidx ? molidx[0] : null;\n    }\n    static convertToAbbrevIndex(mol, srcmask, abbrevName) {\n        let junction = 0;\n        let polymerExtra = null;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let b1 = mol.bondFrom(n), b2 = mol.bondTo(n), atom = 0;\n            if (srcmask[b1 - 1] && !srcmask[b2 - 1]) {\n                atom = b1;\n                polymerExtra = PolymerBlock.getPolymerExtensions(mol, b2);\n            }\n            else if (!srcmask[b1 - 1] && srcmask[b2 - 1]) {\n                atom = b2;\n                polymerExtra = PolymerBlock.getPolymerExtensions(mol, b1);\n            }\n            if (atom == 0)\n                continue;\n            if (junction > 0 && atom != junction)\n                return [null, null];\n            junction = atom;\n        }\n        if (junction == 0)\n            return [null, null];\n        let na = mol.numAtoms, molidx = 0, fragidx = 0;\n        let maskmol = Vec.booleanArray(false, na), maskfrag = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++) {\n            maskmol[n] = srcmask[n];\n            maskfrag[n] = !srcmask[n] || n + 1 == junction;\n            if (maskmol[n] && n + 1 <= junction)\n                molidx++;\n            if (maskfrag[n] && n + 1 <= junction)\n                fragidx++;\n        }\n        let bondType = Molecule.BONDTYPE_NORMAL, nadj = 0;\n        for (let a of mol.atomAdjList(junction))\n            if (!srcmask[a - 1]) {\n                if (nadj != 0) {\n                    bondType = Molecule.BONDTYPE_NORMAL;\n                    break;\n                }\n                let b = mol.findBond(junction, a);\n                if (mol.bondFrom(b) == junction)\n                    bondType = mol.bondType(b);\n                nadj++;\n            }\n        let frag = MolUtil.subgraphMask(mol, maskfrag);\n        frag.setAtomElement(fragidx, MolUtil.ABBREV_ATTACHMENT);\n        frag.setAtomCharge(fragidx, 0);\n        frag.setAtomUnpaired(fragidx, 0);\n        frag.setAtomHExplicit(fragidx, Molecule.HEXPLICIT_UNKNOWN);\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomMapNum(n, 0);\n        frag.setAtomExtra(fragidx, []);\n        frag.setAtomTransient(fragidx, []);\n        let adj = frag.atomAdjList(fragidx);\n        let x = 0, y = 0, inv = 1.0 / adj.length;\n        let bondOrder = 1;\n        for (let n = 0; n < adj.length; n++) {\n            x += frag.atomX(adj[n]);\n            y += frag.atomY(adj[n]);\n            let b = frag.findBond(fragidx, adj[n]);\n            if (n == 0)\n                bondOrder = frag.bondOrder(b);\n            else if (bondOrder != frag.bondOrder(b))\n                bondOrder = 1;\n        }\n        x *= inv;\n        y *= inv;\n        if (fragidx > 1)\n            frag.swapAtoms(fragidx, 1);\n        let newmol = MolUtil.subgraphMask(mol, maskmol);\n        let newatom = newmol.addAtom(abbrevName, x, y);\n        newmol.addBond(molidx, newatom, bondOrder, bondType);\n        MolUtil.setAbbrev(newmol, newatom, frag);\n        if (polymerExtra != null)\n            newmol.setAtomExtra(newatom, Vec.concat(newmol.atomExtra(newatom), polymerExtra));\n        return [newmol, newatom];\n    }\n    static expandAbbrevs(mol, alignCoords) {\n        while (true) {\n            let anything = false;\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (MolUtil.hasAbbrev(mol, n)) {\n                    if (MolUtil.expandOneAbbrev(mol, n, alignCoords))\n                        anything = true;\n                    n--;\n                }\n            if (!anything)\n                break;\n        }\n    }\n    static expandedAbbrevs(mol) {\n        if (!this.hasAnyAbbrev(mol))\n            return mol;\n        mol = mol.clone();\n        this.expandAbbrevs(mol, true);\n        return mol;\n    }\n    static expandOneAbbrev(mol, atom, alignCoords) {\n        let frag = MolUtil.getAbbrev(mol, atom);\n        if (frag == null)\n            return null;\n        if (mol.atomAdjCount(atom) != 1 || frag.numAtoms == 0) {\n            MolUtil.clearAbbrev(mol, atom);\n            return null;\n        }\n        let m = mol.atomMapNum(atom);\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomMapNum(n, 0);\n        if (m > 0)\n            for (let n of frag.atomAdjList(1))\n                frag.setAtomMapNum(n, m);\n        return MolUtil.expandOneAbbrevFrag(mol, atom, frag, alignCoords);\n    }\n    static expandOneAbbrevFrag(mol, atom, frag, alignCoords) {\n        let polymerExtra = PolymerBlock.getPolymerExtensions(mol, atom);\n        let nbr = mol.atomAdjCount(atom) == 1 ? mol.atomAdjList(atom)[0] : 0;\n        let connBond = mol.findBond(atom, nbr), connType = Molecule.BONDTYPE_NORMAL;\n        if (connBond > 0) {\n            connType = mol.bondType(connBond);\n            if (mol.bondFrom(connBond) != nbr && (connType == Molecule.BONDTYPE_INCLINED || connType == Molecule.BONDTYPE_DECLINED))\n                connType = Molecule.BONDTYPE_NORMAL;\n        }\n        if (alignCoords) {\n            let vx1 = mol.atomX(atom) - mol.atomX(nbr), vy1 = mol.atomY(atom) - mol.atomY(nbr);\n            let adj = frag.atomAdjList(1);\n            let vx2 = 0, vy2 = 0, inv = 1.0 / adj.length;\n            for (let n = 0; n < adj.length; n++) {\n                vx2 += frag.atomX(adj[n]) - frag.atomX(1);\n                vy2 += frag.atomY(adj[n]) - frag.atomY(1);\n            }\n            vx2 *= inv;\n            vy2 *= inv;\n            let th1 = Math.atan2(vy1, vx1), th2 = Math.atan2(vy2, vx2);\n            CoordUtil.rotateMolecule(frag, th1 - th2);\n            CoordUtil.translateMolecule(frag, mol.atomX(nbr) - frag.atomX(1), mol.atomY(nbr) - frag.atomY(1));\n        }\n        if (polymerExtra != null) {\n            for (let n = 1; n <= frag.numAtoms; n++) {\n                let extra = frag.atomExtra(n);\n                for (let i = extra.length - 1; i >= 0; i--)\n                    if (polymerExtra.indexOf(extra[i]) >= 0)\n                        extra.splice(i, 1);\n                frag.setAtomExtra(n, Vec.concat(extra, polymerExtra));\n            }\n        }\n        let join = mol.numAtoms + 1;\n        mol.append(frag);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondFrom(n) == join) {\n                mol.setBondFrom(n, nbr);\n                mol.setBondType(n, connType);\n            }\n            else if (mol.bondTo(n) == join) {\n                mol.setBondFromTo(n, nbr, mol.bondFrom(n));\n                mol.setBondType(n, connType);\n            }\n        }\n        let mask = Vec.booleanArray(false, mol.numAtoms);\n        for (let n = mask.length - frag.numAtoms; n < mask.length; n++)\n            mask[n] = true;\n        mol.deleteAtomAndBonds(join);\n        mol.deleteAtomAndBonds(atom);\n        mask.splice(join - 1, 1);\n        mask.splice(atom - 1, 1);\n        return mask;\n    }\n    static clearAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                extra.splice(n, 1);\n                mol.setAtomExtra(atom, extra);\n                mol.setAtomElement(atom, 'C');\n                return;\n            }\n    }\n    static setAtomElement(mol, atom, el) {\n        if (mol.atomElement(atom) == el)\n            return;\n        this.clearAbbrev(mol, atom);\n        mol.setAtomElement(atom, el);\n    }\n    static addBond(mol, bfr, bto, order, type) {\n        if (type == null)\n            type = Molecule.BONDTYPE_NORMAL;\n        if (mol.atomAdjCount(bfr) >= 1)\n            this.clearAbbrev(mol, bfr);\n        if (mol.atomAdjCount(bto) >= 1)\n            this.clearAbbrev(mol, bto);\n        let b = mol.findBond(bfr, bto);\n        if (b > 0)\n            mol.deleteBond(b);\n        return mol.addBond(bfr, bto, order, type);\n    }\n    static subgraphMask(mol, mask) {\n        let invidx = [];\n        let sum = 0;\n        for (let n = 0; n < mol.numAtoms; n++) {\n            if (mask[n])\n                invidx.push(++sum);\n            else\n                invidx.push(0);\n        }\n        if (sum == 0)\n            return new Molecule();\n        if (sum == mol.numAtoms)\n            return mol.clone();\n        let frag = new Molecule();\n        frag.keepTransient = true;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let num = frag.addAtom(mol.atomElement(n), mol.atomX(n), mol.atomY(n), mol.atomCharge(n), mol.atomUnpaired(n));\n                frag.setAtomIsotope(num, mol.atomIsotope(n));\n                frag.setAtomHExplicit(num, mol.atomHExplicit(n));\n                frag.setAtomMapNum(num, mol.atomMapNum(n));\n                frag.setAtomExtra(num, mol.atomExtra(n));\n                frag.setAtomTransient(num, mol.atomTransient(n));\n            }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = invidx[mol.bondFrom(n) - 1], bto = invidx[mol.bondTo(n) - 1];\n            if (bfr > 0 && bto > 0) {\n                let num = frag.addBond(bfr, bto, mol.bondOrder(n), mol.bondType(n));\n                frag.setBondExtra(num, mol.bondExtra(n));\n                frag.setBondTransient(num, mol.bondTransient(n));\n            }\n        }\n        frag.keepTransient = mol.keepTransient;\n        return frag;\n    }\n    static subgraphIndex(mol, idx) {\n        let invidx = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 0; n < invidx.length; n++)\n            invidx[n] = 0;\n        for (let n = 0; n < idx.length; n++)\n            invidx[idx[n] - 1] = n + 1;\n        let frag = new Molecule();\n        frag.keepTransient = true;\n        for (let n = 0; n < idx.length; n++) {\n            let num = frag.addAtom(mol.atomElement(idx[n]), mol.atomX(idx[n]), mol.atomY(idx[n]), mol.atomCharge(idx[n]), mol.atomUnpaired(idx[n]));\n            frag.setAtomIsotope(num, mol.atomIsotope(idx[n]));\n            frag.setAtomHExplicit(num, mol.atomHExplicit(idx[n]));\n            frag.setAtomMapNum(num, mol.atomMapNum(idx[n]));\n            frag.setAtomExtra(num, mol.atomExtra(idx[n]));\n            frag.setAtomTransient(num, mol.atomTransient(idx[n]));\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = invidx[mol.bondFrom(n) - 1], bto = invidx[mol.bondTo(n) - 1];\n            if (bfr > 0 && bto > 0) {\n                let num = frag.addBond(bfr, bto, mol.bondOrder(n), mol.bondType(n));\n                frag.setBondExtra(num, mol.bondExtra(n));\n                frag.setBondTransient(num, mol.bondTransient(n));\n            }\n        }\n        frag.keepTransient = mol.keepTransient;\n        return frag;\n    }\n    static subgraphWithAttachments(mol, mask) {\n        let xmask = mask.slice(0);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (mask[bfr] && !mask[bto])\n                xmask[bto] = true;\n            else if (mask[bto] && !mask[bfr])\n                xmask[bfr] = true;\n        }\n        let xmol = mol.clone();\n        for (let n = 1; n <= xmol.numAtoms; n++)\n            if (xmask[n - 1] && !mask[n - 1]) {\n                xmol.setAtomElement(n, 'X');\n                xmol.setAtomCharge(n, 0);\n                xmol.setAtomUnpaired(n, 0);\n                xmol.setAtomHExplicit(n, Molecule.HEXPLICIT_UNKNOWN);\n                xmol.setAtomExtra(n, []);\n            }\n        return MolUtil.subgraphMask(xmol, xmask);\n    }\n    static append(mol, frag) {\n        let boxm = mol.boundary(), boxf = frag.boundary();\n        let dx = boxm.maxX() + Molecule.IDEALBOND - boxf.minX();\n        let dy = 0.5 * (boxm.minY() + boxm.maxY() - boxf.minY() - boxf.maxY());\n        let top = mol.numAtoms;\n        mol.append(frag);\n        for (let n = top + 1; n <= mol.numAtoms; n++)\n            mol.setAtomPos(n, mol.atomX(n) + dx, mol.atomY(n) + dy);\n    }\n    static deleteAtoms(mol, idx) {\n        let mask = Vec.booleanArray(true, mol.numAtoms);\n        for (let n = 0; n < idx.length; n++)\n            mask[idx[n] - 1] = false;\n        return MolUtil.subgraphMask(mol, mask);\n    }\n    static componentList(mol) {\n        let sz = mol.numAtoms;\n        if (sz == 0)\n            return null;\n        let g = Graph.fromMolecule(mol);\n        let groups = g.calculateComponentGroups();\n        for (let grp of groups)\n            Vec.addTo(grp, 1);\n        return groups;\n    }\n    static getAtomSides(mol, atom) {\n        let g = Graph.fromMolecule(mol);\n        let cc = g.calculateComponents();\n        let mask = [];\n        for (let n = 0; n < cc.length; n++)\n            mask.push(cc[n] == cc[atom - 1]);\n        mask[atom - 1] = false;\n        let oldmap = Vec.maskIdx(mask);\n        g.keepNodesMask(mask);\n        cc = g.calculateComponents();\n        let ccmax = Vec.max(cc);\n        let grps = [];\n        for (let n = 0; n < ccmax; n++)\n            grps.push([atom]);\n        for (let n = 0; n < cc.length; n++)\n            grps[cc[n] - 1].push(oldmap[n] + 1);\n        return grps;\n    }\n    static getBondSides(mol, bond) {\n        let bf = mol.bondFrom(bond), bt = mol.bondTo(bond);\n        let inRing = mol.bondInRing(bond);\n        let g = Graph.fromMolecule(mol);\n        let cc = g.calculateComponents();\n        let mask = [];\n        for (let n = 0; n < cc.length; n++)\n            mask.push(cc[n] == cc[bf - 1]);\n        if (!inRing)\n            g.removeEdge(bf - 1, bt - 1);\n        else {\n            mask[bf - 1] = false;\n            mask[bt - 1] = false;\n        }\n        let oldmap = Vec.maskIdx(mask);\n        g.keepNodesMask(mask);\n        cc = g.calculateComponents();\n        let ccmax = Vec.max(cc);\n        let grps = [];\n        for (let n = 0; n < ccmax; n++) {\n            grps[n] = [];\n            if (inRing) {\n                grps[n].push(bf);\n                grps[n].push(bt);\n            }\n        }\n        for (let n = 0; n < cc.length; n++)\n            grps[cc[n] - 1].push(oldmap[n] + 1);\n        return grps;\n    }\n    static arrayAtomX(mol) {\n        let x = Vec.numberArray(0, mol.numAtoms);\n        for (let n = x.length - 1; n >= 0; n--)\n            x[n] = mol.atomX(n + 1);\n        return x;\n    }\n    static arrayAtomY(mol) {\n        let y = Vec.numberArray(0, mol.numAtoms);\n        for (let n = y.length - 1; n >= 0; n--)\n            y[n] = mol.atomY(n + 1);\n        return y;\n    }\n    static arrayAtomMapNum(mol) {\n        let mapnum = Vec.numberArray(0, mol.numAtoms);\n        for (let n = mapnum.length - 1; n >= 0; n--)\n            mapnum[n] = mol.atomMapNum(n + 1);\n        return mapnum;\n    }\n    static molecularFormula(mol, punctuation) {\n        let puncEnter = '', puncExit = '', puncEnterSuper = '', puncExitSuper = '';\n        if (punctuation == true)\n            [puncEnter, puncExit] = ['{', '}', '{^', '}'];\n        else if (punctuation instanceof Array) {\n            puncEnter = punctuation[0];\n            puncExit = punctuation[1];\n            puncEnterSuper = punctuation[2];\n            puncExitSuper = punctuation[3];\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                mol = mol.clone();\n                MolUtil.expandAbbrevs(mol, false);\n                break;\n            }\n        let countC = 0, countH = 0;\n        let elements = Vec.stringArray('', mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            countH += mol.atomHydrogens(n);\n            let el = mol.atomElement(n);\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL)\n                el = puncEnterSuper + mol.atomIsotope(n) + puncExitSuper + el;\n            if (el == 'C')\n                countC++;\n            else if (el == 'H')\n                countH++;\n            else\n                elements[n - 1] = el;\n        }\n        elements.sort();\n        let formula = '';\n        if (countC > 0)\n            formula += 'C';\n        if (countC > 1) {\n            if (punctuation)\n                formula += puncEnter;\n            formula += countC;\n            if (punctuation)\n                formula += puncExit;\n        }\n        if (countH > 0)\n            formula += 'H';\n        if (countH > 1) {\n            if (punctuation)\n                formula += puncEnter;\n            formula += countH;\n            if (punctuation)\n                formula += puncExit;\n        }\n        for (let n = 0; n < elements.length; n++)\n            if (elements[n].length > 0) {\n                let count = 1;\n                for (; n + 1 < elements.length && elements[n] == elements[n + 1]; n++)\n                    count++;\n                formula += elements[n];\n                if (count > 1) {\n                    if (punctuation)\n                        formula += puncEnter;\n                    formula += count;\n                    if (punctuation)\n                        formula += puncExit;\n                }\n            }\n        return formula.toString();\n    }\n    static molecularWeight(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                mol = mol.clone();\n                MolUtil.expandAbbrevs(mol, false);\n                break;\n            }\n        let mw = 0;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            mw += mol.atomHydrogens(n) * Chemistry.NATURAL_ATOMIC_WEIGHTS[1];\n            let iso = mol.atomIsotope(n);\n            if (iso != Molecule.ISOTOPE_NATURAL) {\n                mw += iso;\n                continue;\n            }\n            let an = Molecule.elementAtomicNumber(mol.atomElement(n));\n            if (an > 0 && an < Chemistry.NATURAL_ATOMIC_WEIGHTS.length)\n                mw += Chemistry.NATURAL_ATOMIC_WEIGHTS[an];\n        }\n        return mw;\n    }\n    static removeDuplicateBonds(mol) {\n        let bpri = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let p = Math.min(mol.bondFrom(n), mol.bondTo(n)) * mol.numAtoms + Math.max(mol.bondFrom(n), mol.bondTo(n));\n            bpri.push(p);\n        }\n        let bidx = Vec.idxSort(bpri);\n        let keepmask = Vec.booleanArray(false, bidx.length);\n        let p = 0;\n        while (p < bidx.length) {\n            let sz = 1;\n            while (p + sz < bidx.length && bpri[bidx[p]] == bpri[bidx[p + sz]])\n                sz++;\n            let best = p;\n            for (let n = p + 1; n < p + sz; n++) {\n                let b1 = bidx[best] + 1, b2 = bidx[n] + 1;\n                let a1 = mol.bondFrom(b1), a2 = mol.bondTo(b1);\n                let el1 = mol.atomElement(a1), el2 = mol.atomElement(a2);\n                let limit1 = 0, limit2 = 0;\n                if (el1 == 'C' || el1 == 'N')\n                    limit1 = 4;\n                else if (el1 == 'O')\n                    limit1 = 3;\n                if (el2 == 'C' || el2 == 'N')\n                    limit2 = 4;\n                else if (el2 == 'O')\n                    limit2 = 3;\n                if (limit1 > 0 || limit2 > 0) {\n                    let boB1A1 = 0, boB1A2 = 0, boB2A1 = 0, boB2A2 = 0;\n                    for (let i = 1; i <= mol.numBonds; i++) {\n                        if (i != b2 && (mol.bondFrom(i) == a1 || mol.bondTo(i) == a1))\n                            boB1A1 += mol.bondOrder(i);\n                        if (i != b2 && (mol.bondFrom(i) == a2 || mol.bondTo(i) == a2))\n                            boB1A2 += mol.bondOrder(i);\n                        if (i != b1 && (mol.bondFrom(i) == a1 || mol.bondTo(i) == a1))\n                            boB2A1 += mol.bondOrder(i);\n                        if (i != b1 && (mol.bondFrom(i) == a2 || mol.bondTo(i) == a2))\n                            boB2A2 += mol.bondOrder(i);\n                    }\n                    let bad1 = 0, bad2 = 0;\n                    if (limit1 > 0 && boB1A1 > limit1)\n                        bad1++;\n                    if (limit2 > 0 && boB1A2 > limit2)\n                        bad1++;\n                    if (limit1 > 0 && boB2A1 > limit1)\n                        bad2++;\n                    if (limit2 > 0 && boB2A2 > limit2)\n                        bad2++;\n                    if (bad1 < bad2)\n                        continue;\n                    if (bad1 > bad2) {\n                        best = n;\n                        continue;\n                    }\n                }\n                let exotic1 = 2 * mol.bondOrder(b1), exotic2 = 2 * mol.bondOrder(b2);\n                exotic1 += (exotic1 == 0 ? 4 : 0) + (mol.bondType(b1) != Molecule.BONDTYPE_NORMAL ? 1 : 0);\n                exotic2 += (exotic2 == 0 ? 4 : 0) + (mol.bondType(b2) != Molecule.BONDTYPE_NORMAL ? 1 : 0);\n                if (exotic2 > exotic1)\n                    best = n;\n            }\n            keepmask[bidx[best]] = true;\n            p += sz;\n        }\n        for (let n = mol.numBonds; n >= 1; n--)\n            if (!keepmask[n - 1] || mol.bondFrom(n) == mol.bondTo(n))\n                mol.deleteBond(n);\n    }\n    static calculateWalkWeight(mol, atom) {\n        let ccsz = 0, cc = Graph.fromMolecule(mol).calculateComponents();\n        for (let n = 0; n < cc.length; n++)\n            if (cc[n] == cc[atom - 1])\n                ccsz++;\n        let w = Vec.numberArray(1, mol.numAtoms), wn = Vec.numberArray(0, mol.numAtoms);\n        w[atom - 1] = 0;\n        for (; ccsz > 0; ccsz--) {\n            for (let n = 0; n < mol.numAtoms; n++)\n                wn[n] = w[n];\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let a1 = mol.bondFrom(n) - 1, a2 = mol.bondTo(n) - 1;\n                w[a1] += wn[a2] * 0.1;\n                w[a2] += wn[a1] * 0.1;\n            }\n            w[atom - 1] = 0;\n        }\n        return w;\n    }\n    static totalHydrogens(mol, atom) {\n        let hc = mol.atomHydrogens(atom);\n        let adj = mol.atomAdjList(atom);\n        for (let n = 0; n < adj.length; n++)\n            if (mol.atomElement(adj[n]) == 'H')\n                hc++;\n        return hc;\n    }\n    static stripHydrogens(mol, force = false) {\n        for (let n = mol.numAtoms; n >= 1; n--)\n            if ((force && mol.atomElement(n) == 'H') || this.boringHydrogen(mol, n))\n                mol.deleteAtomAndBonds(n);\n    }\n    static boringHydrogen(mol, atom) {\n        if (mol.atomElement(atom) != 'H')\n            return false;\n        if (mol.atomCharge(atom) != 0 || mol.atomUnpaired(atom) != 0)\n            return false;\n        if (mol.atomIsotope(atom) != Molecule.ISOTOPE_NATURAL)\n            return false;\n        if (Vec.notBlank(mol.atomExtra(atom)) || Vec.notBlank(mol.atomTransient(atom)))\n            return false;\n        if (mol.atomAdjCount(atom) != 1)\n            return false;\n        let other = mol.atomAdjList(atom)[0];\n        if (mol.atomElement(other) == 'H')\n            return false;\n        let bond = mol.atomAdjBonds(atom)[0];\n        if (mol.bondOrder(bond) != 1 || mol.bondType(bond) != Molecule.BONDTYPE_NORMAL)\n            return false;\n        if (mol.atomHExplicit(other) != Molecule.HEXPLICIT_UNKNOWN)\n            return false;\n        if (Molecule.HYVALENCE_EL.indexOf(mol.atomElement(other)) < 0)\n            return false;\n        return true;\n    }\n    static createHydrogens(mol, position) {\n        if (position == null)\n            position = false;\n        let na = mol.numAtoms;\n        for (let n = 1; n <= na; n++) {\n            let hc = mol.atomHydrogens(n);\n            if (hc == 0)\n                continue;\n            if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN)\n                mol.setAtomHExplicit(n, 0);\n            if (!position) {\n                for (; hc > 0; hc--) {\n                    let a = mol.addAtom('H', mol.atomX(n), mol.atomY(n));\n                    mol.addBond(n, a, 1);\n                }\n            }\n            else\n                SketchUtil.placeAdditionalHydrogens(mol, n, hc);\n        }\n        return mol.numAtoms - na;\n    }\n    static atomVec3(mol, atom) {\n        if (mol.is3D())\n            return [mol.atomX(atom), mol.atomY(atom), mol.atomZ(atom)];\n        else\n            return [mol.atomX(atom), mol.atomY(atom), 0];\n    }\n    static atomOxidationState(mol, atom) {\n        if (mol.atomAdjCount(atom) == 0)\n            return null;\n        if (this.hasAbbrev(mol, atom))\n            return null;\n        let atno = mol.atomicNumber(atom);\n        if (atno == 0)\n            return null;\n        let nonMetal = atno == Chemistry.ELEMENT_H || Chemistry.ELEMENT_BLOCKS[atno] == 2;\n        let oxstate = mol.atomHydrogens(atom) + (nonMetal ? -mol.atomCharge(atom) : mol.atomCharge(atom));\n        for (let b of mol.atomAdjBonds(atom)) {\n            let bo = mol.bondOrder(b), other = mol.bondOther(b, atom);\n            let chalco = ['O', 'S', 'Se', 'Te'].includes(mol.atomElement(other));\n            if (nonMetal || chalco)\n                oxstate += bo;\n            else\n                oxstate += bo % 2;\n        }\n        if (atno == Chemistry.ELEMENT_H && oxstate == 1)\n            return null;\n        if (atno == Chemistry.ELEMENT_B && oxstate == 3)\n            return null;\n        if (atno == Chemistry.ELEMENT_C && oxstate == 4)\n            return null;\n        if (atno == Chemistry.ELEMENT_N && oxstate == 3)\n            return null;\n        if (atno == Chemistry.ELEMENT_O && oxstate == 2)\n            return null;\n        if (atno == Chemistry.ELEMENT_S && (oxstate == 2 || oxstate == 4 || oxstate == 6))\n            return null;\n        if (atno == Chemistry.ELEMENT_P && (oxstate == 3 || oxstate == 5))\n            return null;\n        if ((atno == Chemistry.ELEMENT_F || atno == Chemistry.ELEMENT_Cl ||\n            atno == Chemistry.ELEMENT_Br || atno == Chemistry.ELEMENT_I) && oxstate == 1)\n            return null;\n        return oxstate;\n    }\n    static oxidationStateText(oxstate) {\n        if (oxstate == 0)\n            return '0';\n        let str = oxstate < 0 ? '-' : '';\n        let absox = Math.abs(oxstate);\n        if (absox == 1)\n            str += 'I';\n        else if (absox == 2)\n            str += 'II';\n        else if (absox == 3)\n            str += 'III';\n        else if (absox == 4)\n            str += 'IV';\n        else if (absox == 5)\n            str += 'V';\n        else if (absox == 6)\n            str += 'VI';\n        else if (absox == 7)\n            str += 'VII';\n        else if (absox == 8)\n            str += 'VIII';\n        else if (absox == 9)\n            str += 'IX';\n        else if (absox == 10)\n            str += 'X';\n        else if (absox == 11)\n            str += 'XI';\n        else if (absox == 12)\n            str += 'XII';\n        else\n            str = (oxstate > 0 ? '+' : '') + oxstate;\n        return str;\n    }\n}\nMolUtil.TEMPLATE_ATTACHMENT = 'X';\nMolUtil.ABBREV_ATTACHMENT = '*';\nexport { MolUtil };\n//# sourceMappingURL=MolUtil.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs\");","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/mol/Molecule';\n\nexport interface InChIResult\n{\n\tinchi:string;\n\tinchiKey:string;\n}\n\nexport abstract class InChIDelegate\n{\n\tpublic async generate(mol:Molecule):Promise<InChIResult>\n\t{\n\t\tthrow new Error('InChI not implemented.');\n\t}\n}","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {MolUtil} from 'webmolkit/mol/MolUtil';\nimport {MDLMOLWriter} from 'webmolkit/io/MDLWriter';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport {getGlobal} from '@electron/remote';\nimport {InChIDelegate, InChIResult} from '../mixture/InChIDelegate';\n\n/*\n\tInteroperability with InChI technology: the generator program is a native binary, the location of which\n\tneeds to be discovered. Each generation operation involves a trip to the external execution subsystem.\n*/\n\nlet execLocation:string = null;\nlet inchi:InChI = null;\n\nexport class InChI extends InChIDelegate\n{\n\t// optional override: when using the Emscripten-ported version of InChI, set this function to call the\n\t// natively encoded implementation\n\tpublic static nativeMolfileToInChI:(mdlmol:string, options:string) => Promise<string> = null;\n\n\tprivate available = false;\n\tprivate inchiPath = execLocation;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tif (!this.inchiPath)\n\t\t{\n\t\t\tthis.inchiPath = getGlobal('INCHI_EXEC');\n\t\t}\n\n\t\tif (this.inchiPath)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfs.accessSync(this.inchiPath, fs.constants.X_OK);\n\t\t\t\tthis.available = true;\n\t\t\t}\n\t\t\tcatch (ex) {} // not available\n\t\t}\n\t}\n\n\t// specify where the executable file is (overrides the global option)\n\tpublic static hasExecutable():boolean\n\t{\n\t\treturn !!execLocation;\n\t}\n\tpublic static setExecutable(exec:string):void\n\t{\n\t\texecLocation = exec;\n\t}\n\n\t// returns true if we have reason to believe the InChI executable can be run on demand\n\tpublic static isAvailable():boolean\n\t{\n\t\tif (this.nativeMolfileToInChI != null) return true;\n\t\tif (!inchi) inchi = new InChI();\n\t\treturn inchi.available;\n\t}\n\n\t// converts a molecule to an InChI string, if possible; should check the availability first, for graceful\n\t// rejection; failure results in an exception; note that it is executed synchronously: if the executable takes\n\t// a long time to run, this will be a problem for the UI; the return value is [InChI, InChIKey]\n\tpublic async generate(mol:Molecule):Promise<InChIResult>\n\t{\n\t\tmol = mol.clone();\n\t\tMolUtil.expandAbbrevs(mol, true);\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (mol.bondOrder(n) < 1 || mol.bondOrder(n) > 3) mol.setBondOrder(n, 1);\n\n\t\tlet writer = new MDLMOLWriter(mol);\n\t\twriter.enhancedFields = false;\n\t\tlet mdlmol = writer.write();\n\n\t\tif (InChI.nativeMolfileToInChI != null)\n\t\t{\n\t\t\tlet inchi = await InChI.nativeMolfileToInChI(mdlmol, '-AuxNone -NoLabels');\n\t\t\treturn {inchi: inchi, inchiKey: null}; // NOTE: this version doesn't provide a key; address this in the future\n\t\t}\n\n\t\tif (!inchi) inchi = new InChI();\n\t\tif (!inchi.available) throw 'InChI executable is not available.';\n\n\t\tconst proc = require('child_process');\n\n\t\tlet cmd = inchi.inchiPath.replace(/ /g, '\\\\\\ '); // very crude escaping of spaces\n\t\tlet result = proc.spawnSync(cmd, ['-STDIO', '-AuxNone', '-NoLabels', '-Key'], {input: mdlmol});\n\t\tlet raw = result.stdout.toString(), bits = raw.split('\\n');\n\n\t\tif (bits.length < 2 || !bits[0].startsWith('InChI='))\n\t\t{\n\t\t\tconsole.log('InChI command returned result:\\n' + raw);\n\t\t\tconsole.log('Molecule:\\n' + mol);\n\t\t\tconsole.log('MDL Molfile:\\n' + mdlmol);\n\t\t\tthrow 'Invalid returned by InChI generator: ' + raw;\n\t\t}\n\t\treturn {inchi: bits[0], inchiKey: bits[1]};\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {MenuBannerCommand} from '../web/MenuBanner';\nimport {openNewWindow} from './startup';\nimport {InChI} from '../nodejs/InChI';\n\n/*\n\tBase class for \"main windows\": an object that takes up the entire browser window document, responds to resizing, etc.\n*/\n\nexport abstract class MainPanel\n{\n\tprotected inchi = new InChI();\n\n\t// ------------ public methods ------------\n\n\tconstructor(public root:DOM)\n\t{\n\t\tdom('body').css({'overflow': 'hidden'});\n\n\t\troot.css({'width': '100%', 'height': document.documentElement.clientHeight + 'px'});\n\t\twindow.addEventListener('resize', () => this.onResize());\n\t\troot.css({'user-select': 'none'});\n\n\t\t(this.root.el as any).addEventListener('menuAction', (event:any, cmd:string) => this.menuAction(cmd as MenuBannerCommand));\n\t}\n\n\t// stub: may be called early on to provide a source file upon which to work\n\tpublic loadFile(filename:string):void\n\t{\n\t}\n\n\t// minimum required functionality for resizing windows; override to capture\n\tprotected onResize():void\n\t{\n\t\tthis.root.css({'height': document.documentElement.clientHeight + 'px'});\n\t}\n\n\t// optionally override this to pre-empt menu actions\n\tpublic menuAction(cmd:string):void\n\t{\n\t\tif (cmd == MenuBannerCommand.NewMixture) openNewWindow('MixturePanel');\n\t\telse if (cmd == MenuBannerCommand.NewCollection) openNewWindow('CollectionPanel');\n\t\telse if (cmd == MenuBannerCommand.Open) this.actionFileOpen();\n\t\telse if (cmd == MenuBannerCommand.Save) this.actionFileSave();\n\t\telse if (cmd == MenuBannerCommand.SaveAs) this.actionFileSaveAs();\n\t\telse this.customMenuAction(cmd);\n\t}\n\n\t// override this to interpret menu non-default menu actions\n\tpublic customMenuAction(cmd:string):void\n\t{\n\t\tconsole.log('MENU:' + cmd);\n\t}\n\n\t// standard actions that must be implemented\n\tprotected abstract actionFileOpen():void;\n\tprotected abstract actionFileSave():void;\n\tprotected abstract actionFileSaveAs():void;\n\n\t// ------------ private methods ------------\n\n}\n\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Vec } from '../util/Vec';\nexport class ClipboardProxyHandler {\n    copyEvent(andCut, proxy) { return false; }\n    pasteEvent(proxy) { return false; }\n}\nexport class ClipboardProxy {\n    constructor() {\n        this.handlers = [new ClipboardProxyHandler()];\n    }\n    pushHandler(handler) {\n        this.handlers.push(handler);\n    }\n    popHandler() {\n        this.handlers.pop();\n    }\n    currentHandler() {\n        return Vec.last(this.handlers);\n    }\n    triggerCopy(andCut) {\n        if (this.currentHandler().copyEvent(andCut, this))\n            return;\n        document.execCommand(andCut ? 'cut' : 'copy');\n    }\n    triggerPaste() {\n        if (this.currentHandler().pasteEvent(this))\n            return;\n        document.execCommand('paste');\n    }\n    getString() { return null; }\n    setString(str) { }\n    setImage(blob) { }\n    canSetHTML() { return false; }\n    setHTML(html) { }\n    canAlwaysGet() { return false; }\n    downloadString(str, fn) { }\n}\nexport class ClipboardProxyWeb extends ClipboardProxy {\n    constructor() {\n        super();\n        this.lastContent = null;\n        this.fakeTextArea = null;\n        this.busy = false;\n        document.addEventListener('copy', (event) => {\n            var _a;\n            if (this.busy)\n                return null;\n            if ((_a = this.currentHandler()) === null || _a === void 0 ? void 0 : _a.copyEvent(false, this)) {\n                event.preventDefault();\n                return false;\n            }\n        });\n        document.addEventListener('cut', (event) => {\n            var _a;\n            if (this.busy)\n                return null;\n            if ((_a = this.currentHandler()) === null || _a === void 0 ? void 0 : _a.copyEvent(true, this)) {\n                event.preventDefault();\n                return false;\n            }\n        });\n        document.addEventListener('paste', (event) => {\n            var _a;\n            let wnd = window;\n            this.lastContent = null;\n            if (wnd.clipboardData && wnd.clipboardData.getData)\n                this.lastContent = wnd.clipboardData.getData('Text');\n            else if (event.clipboardData && event.clipboardData.getData)\n                this.lastContent = event.clipboardData.getData('text/plain');\n            let consumed = (_a = this.currentHandler()) === null || _a === void 0 ? void 0 : _a.pasteEvent(this);\n            this.lastContent = null;\n            if (consumed) {\n                event.preventDefault();\n                return false;\n            }\n            return true;\n        });\n    }\n    getString() {\n        return this.lastContent;\n    }\n    setString(str) {\n        let fallbackWorkaround = () => {\n            if (this.fakeTextArea == null) {\n                this.fakeTextArea = document.createElement('textarea');\n                this.fakeTextArea.style.fontSize = '12pt';\n                this.fakeTextArea.style.border = '0';\n                this.fakeTextArea.style.padding = '0';\n                this.fakeTextArea.style.margin = '0';\n                this.fakeTextArea.style.position = 'fixed';\n                this.fakeTextArea.style['left'] = '-9999px';\n                this.fakeTextArea.style.top = (window.pageYOffset || document.documentElement.scrollTop) + 'px';\n                this.fakeTextArea.setAttribute('readonly', '');\n                document.body.appendChild(this.fakeTextArea);\n            }\n            this.fakeTextArea.value = str;\n            this.fakeTextArea.select();\n            this.busy = true;\n            document.execCommand('copy');\n            this.busy = false;\n        };\n        if (navigator.clipboard) {\n            navigator.clipboard.writeText(str).then(() => { }, fallbackWorkaround);\n        }\n        else\n            fallbackWorkaround();\n    }\n    setImage(blob) {\n        let item = new ClipboardItem({ 'image/png': blob });\n        this.busy = true;\n        (() => __awaiter(this, void 0, void 0, function* () {\n            yield navigator.clipboard.write([item]);\n            this.busy = false;\n        }))();\n    }\n}\n//# sourceMappingURL=ClipboardProxy.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Vec} from 'webmolkit/util/Vec';\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\n\tUnit definitions and conversions. Units are preferentially stored by URI, displayed by common name, and interconverted\n\tas necessary to other schemes, such as MInChI mnemonics.\n*/\n\nexport enum StandardUnits\n{\n\t// concentration units (these are favoured for most purposes)\n\tpc = 'http://purl.obolibrary.org/obo/UO_0000187', // percent (of arbitrary type)\n\tpcWV = 'http://purl.obolibrary.org/obo/UO_0000164', // percent (weight per volume),\n\tpcWW = 'http://purl.obolibrary.org/obo/UO_0000163', // percent (weight per weight),\n\tpcVV = 'http://purl.obolibrary.org/obo/UO_0000205', // percent (volume per volume),\n\tpcMM = 'http://purl.obolibrary.org/obo/UO_0000076', // percent (mole per mole)\n\tratio = 'http://purl.obolibrary.org/obo/UO_0000190', // ratio (numerator only; nominally by volume)\n\tmol_L = 'http://purl.obolibrary.org/obo/UO_0000062', // moles per litre (mol/L)\n\tmmol_L = 'http://purl.obolibrary.org/obo/UO_0000063', // milli-moles per litre\n\tumol_L = 'http://purl.obolibrary.org/obo/UO_0000064', // micro-moles per litre\n\tnmol_L = 'http://purl.obolibrary.org/obo/UO_0000065', // nano-moles per litre\n\tpmol_L = 'http://purl.obolibrary.org/obo/UO_0000066', // pico-moles per litre\n\t/* could be handy to allow these... maybe\n\tlogM = 'http://www.bioassayontology.org/bao#BAO_0000101', // log10 of mol/L\n\tperM = 'http://www.bioassayontology.org/bao#BAO_0000102', // -log10 of mol/L */\n\tg_L = 'http://purl.obolibrary.org/obo/UO_0000175', // grams per litre (g/L)\n\tmg_L = 'http://purl.obolibrary.org/obo/UO_0000273', // milligrams per litre (aka micrograms per mL)\n\tug_L = 'http://purl.obolibrary.org/obo/UO_0000275', // micrograms per litre (aka nanograms per mL)\n\tmol_kg = 'http://purl.obolibrary.org/obo/UO_0000068', // moles per kilogram\n\n\t// absolute units (these are often converted to concentrations when possible)\n\tkg = 'http://purl.obolibrary.org/obo/UO_0000009', // kilogram\n\tg = 'http://purl.obolibrary.org/obo/UO_0000021', // gram\n\tmg = 'http://purl.obolibrary.org/obo/UO_0000022', // milligram\n\tug = 'http://purl.obolibrary.org/obo/UO_0000023', // microgram\n\tng = 'http://purl.obolibrary.org/obo/UO_0000024', // nanogram\n\tL = 'http://purl.obolibrary.org/obo/UO_0000099', // litre\n\tmL = 'http://purl.obolibrary.org/obo/UO_0000098', // millilitre\n\tuL = 'http://purl.obolibrary.org/obo/UO_0000101', // microlitre\n\tnL = 'http://purl.obolibrary.org/obo/UO_0000102', // nanolitre\n\tmol = 'http://purl.obolibrary.org/obo/UO_0000013', // mole\n\tmmol = 'http://purl.obolibrary.org/obo/UO_0000040', // millimole\n\tumol = 'http://purl.obolibrary.org/obo/UO_0000039', // micromole\n\tnmol = 'http://purl.obolibrary.org/obo/UO_0000041', // nanomole\n\n\t// other\n\tppm = 'placeholder1',\n\tppb = 'placeholder2',\n}\n\nconst PAIR_UNIT_NAMES:any[] =\n[\n\t// form: [reference URI, primary display name, ...optional alternative names]\n\n\t[StandardUnits.pc, '%'],\n\t[StandardUnits.pcWV, 'w/v%'],\n\t[StandardUnits.pcWW, 'w/w%'],\n\t[StandardUnits.pcVV, 'v/v%'],\n\t[StandardUnits.pcMM, 'mol/mol%'],\n\t[StandardUnits.ratio, 'ratio'],\n\t[StandardUnits.mol_L, 'mol/L', 'M'],\n\t[StandardUnits.mmol_L, 'mmol/L', 'mM'],\n\t[StandardUnits.umol_L, '\\u{03BC}mol/L', 'umol/L', 'uM'],\n\t[StandardUnits.nmol_L, 'nmol/L', 'nM'],\n\t[StandardUnits.pmol_L, 'pmol/L', 'pM'],\n\t/*[StandardUnits.logM, ''],\n\t[StandardUnits.perM, ''],*/\n\t[StandardUnits.g_L, 'g/L'],\n\t[StandardUnits.mg_L, 'mg/L'],\n\t[StandardUnits.ug_L, '\\u{03BC}g/L', 'ug/L'],\n\t[StandardUnits.mol_kg, 'mol/kg'],\n\n\t[StandardUnits.kg, 'kg'],\n\t[StandardUnits.g, 'g'],\n\t[StandardUnits.mg, 'mg'],\n\t[StandardUnits.ug, '\\u{03BC}g', 'ug'],\n\t[StandardUnits.ng, 'ng'],\n\t[StandardUnits.L, 'L'],\n\t[StandardUnits.mL, 'mL'],\n\t[StandardUnits.uL, '\\u{03BC}L', 'uL'],\n\t[StandardUnits.nL, 'nL'],\n\t[StandardUnits.mol, 'mol'],\n\t[StandardUnits.mmol, 'mmol'],\n\t[StandardUnits.umol, '\\u{03BC}mol', 'umol'],\n\t[StandardUnits.nmol, 'nmol'],\n\n\t[StandardUnits.ppm, 'ppm'],\n\t[StandardUnits.ppb, 'ppb'],\n];\n\nconst PAIR_UNIT_MINCHI:any[] =\n[\n\t// [enum type, MInChI type, scaling] ... scaling factor is for going from standard to MInChI\n\t[StandardUnits.pc, 'pp', 1],\n\t[StandardUnits.pcWV, 'wv', 0.01],\n\t[StandardUnits.pcWW, 'wf', 0.01],\n\t[StandardUnits.pcVV, 'vf', 0.01],\n\t[StandardUnits.pcMM, 'mf', 0.01],\n\t[StandardUnits.ratio, 'rt', 1],\n\t[StandardUnits.mol_L, 'mr', 1],\n\t[StandardUnits.mmol_L, 'mr', 1E-3],\n\t[StandardUnits.umol_L, 'mr', 1E-6],\n\t[StandardUnits.nmol_L, 'mr', 1E-9],\n\t[StandardUnits.pmol_L, 'mr', 1E-12],\n\t/*[StandardUnits.logM, '', ],\n\t[StandardUnits.perM, '', ],*/\n\t[StandardUnits.g_L, 'wv', 1E-3],\n\t[StandardUnits.mg_L, 'wv', 1E-6],\n\t[StandardUnits.ug_L, 'wv', 1E-9],\n\t[StandardUnits.mol_kg, 'mb', 1],\n\t[StandardUnits.ppm, 'pp', 1E-6],\n\t[StandardUnits.ppb, 'pp', 1E-9],\n];\n\nexport class Units\n{\n\tpublic static STANDARD_LIST:string[] = []; // all of the applicable unit URIs\n\tpublic static COMMON_NAMES:string[] = []; // all of the preferred names (same order as above)\n\tpublic static URI_TO_NAME:Record<string, string> = {}; // each URI has one preferred display name\n\tpublic static NAME_TO_URI:Record<string, string> = {}; // multiple unit forms can point to the same URI\n\tpublic static URI_TO_MINCHI:Record<string, [string, number]> = {}; // URI to MInChI, when applicable\n\n\tpublic static setup():void\n\t{\n\t\tfor (let pair of PAIR_UNIT_NAMES)\n\t\t{\n\t\t\tlet uri:string = pair[0], name:string = pair[1];\n\t\t\tthis.STANDARD_LIST.push(uri);\n\t\t\tthis.COMMON_NAMES.push(name);\n\t\t\tthis.URI_TO_NAME[uri] = name;\n\t\t\t\n\t\t\t//this.NAME_TO_URI[name] = uri; (some of them have alternate names)\n\t\t\tfor (let n = 1; n <= pair.length; n++) this.NAME_TO_URI[pair[n]] = uri;\n\t\t}\n\t\tfor (let pair of PAIR_UNIT_MINCHI)\n\t\t{\n\t\t\tlet uri:string = pair[0], name:string = pair[1], scale:number = pair[2];\n\t\t\tthis.URI_TO_MINCHI[uri] = [name, scale];\n\t\t}\n\t\tthis.setup = () => {}; // calling it again is a nop\n\t}\n\n\tpublic static standardList():string[]\n\t{\n\t\tthis.setup();\n\t\treturn this.STANDARD_LIST;\n\t}\n\tpublic static commonNames():string[]\n\t{\n\t\tthis.setup();\n\t\treturn this.COMMON_NAMES;\n\t}\n\tpublic static uriToName(uri:string):string\n\t{\n\t\tthis.setup();\n\t\treturn this.URI_TO_NAME[uri];\n\t}\n\tpublic static nameToURI(name:string):string\n\t{\n\t\tthis.setup();\n\t\treturn this.NAME_TO_URI[name];\n\t}\n\n\t// converts a uri/value pair into mnemonic/value, ready to be exported to MInChI-style units; if the URI is not in the list of\n\t// things that can be converted, returns nulls\n\tpublic static convertToMInChI(uri:string, values:number[]):[string, number[]]\n\t{\n\t\tlet [mnemonic, scale] = this.URI_TO_MINCHI[uri] || [null, null];\n\t\tif (!mnemonic) return [null, null];\n\t\treturn [mnemonic, Vec.mul(values, scale)];\n\t}\n}\n\n","import { fltEqual } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { ForeignMoleculeTransient } from './ForeignMolecule';\nimport { Graph } from './Graph';\nexport var DotPathBond;\n(function (DotPathBond) {\n    DotPathBond[DotPathBond[\"O0\"] = 0] = \"O0\";\n    DotPathBond[DotPathBond[\"O01\"] = 1] = \"O01\";\n    DotPathBond[DotPathBond[\"O1\"] = 2] = \"O1\";\n    DotPathBond[DotPathBond[\"O12\"] = 3] = \"O12\";\n    DotPathBond[DotPathBond[\"O2\"] = 4] = \"O2\";\n    DotPathBond[DotPathBond[\"O23\"] = 5] = \"O23\";\n    DotPathBond[DotPathBond[\"O3\"] = 6] = \"O3\";\n    DotPathBond[DotPathBond[\"O3X\"] = 7] = \"O3X\";\n})(DotPathBond || (DotPathBond = {}));\nexport var DotPathCharge;\n(function (DotPathCharge) {\n    DotPathCharge[DotPathCharge[\"N1X\"] = -3] = \"N1X\";\n    DotPathCharge[DotPathCharge[\"N1\"] = -2] = \"N1\";\n    DotPathCharge[DotPathCharge[\"N01\"] = -1] = \"N01\";\n    DotPathCharge[DotPathCharge[\"Z0\"] = 0] = \"Z0\";\n    DotPathCharge[DotPathCharge[\"P01\"] = 1] = \"P01\";\n    DotPathCharge[DotPathCharge[\"P1\"] = 2] = \"P1\";\n    DotPathCharge[DotPathCharge[\"P1X\"] = 3] = \"P1X\";\n})(DotPathCharge || (DotPathCharge = {}));\nexport class DotPath {\n    constructor(mol) {\n        this.mol = mol;\n        this.paths = [];\n        if (mol)\n            this.calculate();\n    }\n    clone() {\n        let dup = new DotPath(null);\n        dup.mol = this.mol;\n        dup.maskBlock = this.maskBlock;\n        dup.paths = this.paths.slice(0);\n        return dup;\n    }\n    getBondOrders() {\n        const mol = this.mol;\n        let orders = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            orders.push(mol.bondOrder(n));\n        for (let path of this.paths) {\n            let fract = path.numer / path.denom;\n            for (let n = 1; n <= 5; n++)\n                if (fltEqual(fract, n))\n                    fract = n;\n            for (let b of path.bonds)\n                orders[b - 1] = fract;\n        }\n        return orders;\n    }\n    getBondClasses() {\n        const mol = this.mol;\n        let classes = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bo = mol.bondOrder(n);\n            classes.push(bo == 0 ? 0 :\n                bo == 1 ? 2 :\n                    bo == 2 ? 4 :\n                        bo == 3 ? 6 : 7);\n        }\n        for (let path of this.paths) {\n            let fract = path.numer / path.denom;\n            let bcls = fltEqual(fract, 0) ? 0 :\n                fltEqual(fract, 1) ? 2 :\n                    fltEqual(fract, 2) ? 4 :\n                        fltEqual(fract, 3) ? 6 :\n                            fract < 1 ? 1 :\n                                fract < 2 ? 3 :\n                                    fract < 3 ? 5 : 7;\n            for (let b of path.bonds)\n                classes[b - 1] = bcls;\n        }\n        return classes;\n    }\n    getChargeClasses() {\n        const mol = this.mol;\n        let classes = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let chg = mol.atomCharge(n);\n            classes.push(chg == 0 ? 0 :\n                chg == -1 ? -2 :\n                    chg == 1 ? 2 :\n                        chg < -1 ? -3 : 3);\n        }\n        for (let path of this.paths) {\n            let chg = 0;\n            for (let a of path.atoms)\n                chg += mol.atomCharge(a);\n            chg /= path.atoms.length;\n            let ccls = fltEqual(chg, 0) ? 0 :\n                fltEqual(chg, -1) ? -2 :\n                    fltEqual(chg, 1) ? 2 :\n                        chg > -1 && chg < 0 ? -1 :\n                            chg > 0 && chg < 1 ? 1 :\n                                chg < -1 ? -3 : 3;\n            for (let a of path.atoms)\n                classes[a - 1] = ccls;\n        }\n        return classes;\n    }\n    getAggregateCharges() {\n        const mol = this.mol;\n        let chg = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            chg[n - 1] = mol.atomCharge(n);\n        for (let path of this.paths) {\n            let total = 0;\n            for (let a of path.atoms)\n                total += chg[a - 1];\n            for (let a of path.atoms)\n                chg[a - 1] = total;\n        }\n        return chg;\n    }\n    toString() {\n        let str = 'blocking=' + JSON.stringify(this.maskBlock) + '; paths=' + this.paths.length;\n        for (let p of this.paths)\n            str += ' [' + p.numer + '/' + p.denom + ';a=' + JSON.stringify(p.atoms) + ';b=' + JSON.stringify(p.bonds) + ']';\n        return str;\n    }\n    calculate() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let nonsingle = Vec.booleanArray(false, na), pibonded = Vec.booleanArray(false, na), metalbonded = Vec.booleanArray(false, na);\n        let bondsum = Vec.numberArray(0, na);\n        for (let n = 0; n < na; n++)\n            bondsum[n] = mol.atomHydrogens(n + 1);\n        for (let n = 1; n <= nb; n++) {\n            let bo = mol.bondOrder(n), bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            if (bo != 1) {\n                nonsingle[bfr - 1] = true;\n                nonsingle[bto - 1] = true;\n            }\n            if (bo >= 2) {\n                pibonded[bfr - 1] = true;\n                pibonded[bto - 1] = true;\n            }\n            else {\n                let blk1 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bfr)], blk2 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bto)];\n                if (blk1 >= 3 || blk2 >= 3) {\n                    metalbonded[bfr - 1] = true;\n                    metalbonded[bto - 1] = true;\n                }\n            }\n            bondsum[bfr - 1] += bo;\n            bondsum[bto - 1] += bo;\n            if (mol.bondTransient(n).indexOf(ForeignMoleculeTransient.BondAromatic) >= 0) {\n                pibonded[bfr - 1] = true;\n                pibonded[bto - 1] = true;\n            }\n        }\n        let impliedPi = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++)\n            if (!pibonded[n - 1]) {\n                let adjpi = 0;\n                for (let adj of mol.atomAdjList(n))\n                    if (pibonded[adj - 1] || metalbonded[adj - 1])\n                        adjpi++;\n                if (adjpi >= 2)\n                    impliedPi[n - 1] = true;\n            }\n        for (let n = 0; n < na; n++)\n            if (impliedPi[n])\n                pibonded[n] = true;\n        this.maskBlock = Vec.booleanArray(false, na);\n        let maskMaybe = Vec.booleanArray(false, na);\n        const COULD_BLOCK = [\n            Chemistry.ELEMENT_H,\n            Chemistry.ELEMENT_B, Chemistry.ELEMENT_C, Chemistry.ELEMENT_N, Chemistry.ELEMENT_O, Chemistry.ELEMENT_F,\n            Chemistry.ELEMENT_Al, Chemistry.ELEMENT_Si, Chemistry.ELEMENT_P, Chemistry.ELEMENT_S, Chemistry.ELEMENT_Cl,\n            Chemistry.ELEMENT_Ga, Chemistry.ELEMENT_Ge, Chemistry.ELEMENT_As, Chemistry.ELEMENT_Se, Chemistry.ELEMENT_Br,\n            Chemistry.ELEMENT_In, Chemistry.ELEMENT_Sn, Chemistry.ELEMENT_Sb, Chemistry.ELEMENT_Te, Chemistry.ELEMENT_I,\n            Chemistry.ELEMENT_Tl, Chemistry.ELEMENT_Pb, Chemistry.ELEMENT_Bi, Chemistry.ELEMENT_Po, Chemistry.ELEMENT_At,\n        ];\n        const ACIDS = [\n            Chemistry.ELEMENT_B,\n            Chemistry.ELEMENT_Al, Chemistry.ELEMENT_Si,\n            Chemistry.ELEMENT_Ga, Chemistry.ELEMENT_Ge,\n            Chemistry.ELEMENT_In, Chemistry.ELEMENT_Sn,\n            Chemistry.ELEMENT_Tl, Chemistry.ELEMENT_Pb,\n        ];\n        const BASES = [\n            Chemistry.ELEMENT_N, Chemistry.ELEMENT_O, Chemistry.ELEMENT_F,\n            Chemistry.ELEMENT_P, Chemistry.ELEMENT_S, Chemistry.ELEMENT_Cl,\n            Chemistry.ELEMENT_As, Chemistry.ELEMENT_Se, Chemistry.ELEMENT_Br,\n            Chemistry.ELEMENT_Sb, Chemistry.ELEMENT_Te, Chemistry.ELEMENT_I,\n            Chemistry.ELEMENT_Bi, Chemistry.ELEMENT_Po, Chemistry.ELEMENT_At,\n        ];\n        skip: for (let n = 0; n < na; n++) {\n            const a = n + 1;\n            if (nonsingle[n] || pibonded[n])\n                continue;\n            if (mol.atomCharge(a) != 0 || mol.atomUnpaired(a) != 0)\n                continue;\n            const atno = mol.atomicNumber(a);\n            if (atno == 0) {\n                this.maskBlock[n] = true;\n                continue;\n            }\n            if (COULD_BLOCK.indexOf(atno) < 0)\n                continue;\n            if (bondsum[n] != Chemistry.ELEMENT_BONDING[atno])\n                continue;\n            if (ACIDS.indexOf(atno) >= 0) {\n                for (let adj of mol.atomAdjList(a))\n                    if (BASES.indexOf(mol.atomicNumber(adj)) >= 0)\n                        continue skip;\n            }\n            if (BASES.indexOf(atno) >= 0) {\n                for (let adj of mol.atomAdjList(a))\n                    if (ACIDS.indexOf(mol.atomicNumber(adj)) >= 0)\n                        continue skip;\n            }\n            maskMaybe[n] = true;\n            if (atno == Chemistry.ELEMENT_C) {\n                let hasMetal = false;\n                for (let adj of mol.atomAdjList(a))\n                    if (COULD_BLOCK.indexOf(mol.atomicNumber(adj)) < 0)\n                        hasMetal = true;\n                if (!hasMetal)\n                    this.maskBlock[n] = true;\n            }\n            else if (atno == Chemistry.ELEMENT_H) {\n                this.maskBlock[n] = true;\n            }\n        }\n        skip: for (let n = 0; n < na; n++)\n            if (maskMaybe[n] && !this.maskBlock[n]) {\n                for (let a of mol.atomAdjList(n + 1))\n                    if (!maskMaybe[a - 1])\n                        continue skip;\n                this.maskBlock[n] = true;\n            }\n        let g = Graph.fromMolecule(mol);\n        for (let n = 0; n < na; n++)\n            if (this.maskBlock[n])\n                g.isolateNode(n);\n        for (let cc of g.calculateComponentGroups()) {\n            if (cc.length == 1)\n                continue;\n            let amask = Vec.idxMask(cc, na);\n            Vec.addTo(cc, 1);\n            let p = {\n                atoms: cc,\n                bonds: [],\n                numer: 0,\n                denom: 0\n            };\n            for (let n = 1; n <= nb; n++)\n                if (amask[mol.bondFrom(n) - 1] && amask[mol.bondTo(n) - 1])\n                    p.bonds.push(n);\n            let totalHave = 0, totalWant = 0;\n            for (let a of p.atoms) {\n                let others = mol.atomHydrogens(a);\n                for (let o of mol.atomAdjList(a))\n                    if (!amask[o - 1])\n                        others++;\n                let atno = mol.atomicNumber(a);\n                let have = Chemistry.ELEMENT_VALENCE[atno] - mol.atomCharge(a) - others;\n                let want = Chemistry.ELEMENT_SHELL[atno] - Chemistry.ELEMENT_VALENCE[atno] - others;\n                totalHave += have;\n                totalWant += want;\n            }\n            let electrons = Math.min(totalHave, totalWant);\n            p.numer = electrons;\n            p.denom = 2 * p.bonds.length;\n            this.paths.push(p);\n        }\n    }\n}\n//# sourceMappingURL=DotPath.js.map","import { GeomUtil } from '../util/Geom';\nimport { angleDiff, angleDiffPos, DEGRAD, norm2_xyz, norm_xyz } from '../util/util';\nimport { Permutation, Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nclass Stereochemistry {\n    constructor(meta) {\n        this.meta = meta;\n        this.mol = meta.mol;\n        this.priority = Vec.numberArray(0, this.mol.numAtoms);\n        this.chiralTetra = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n        this.cistransBond = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numBonds);\n        this.squarePlanar = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n    }\n    calculate() {\n        this.isH = Vec.booleanArray(false, this.mol.numAtoms);\n        for (let n = this.mol.numAtoms; n >= 1; n--)\n            this.isH[n - 1] = this.mol.atomElement(n) == 'H';\n        this.buildPriority();\n        this.buildTetraChirality();\n        this.buildBondCisTrans();\n        this.buildPlanarCisTrans();\n        this.buildOctaChirality();\n    }\n    atomPriority(atom) { return this.priority[atom - 1]; }\n    atomTetraChirality(atom) { return this.chiralTetra[atom - 1]; }\n    bondSideStereo(bond) { return this.cistransBond[bond - 1]; }\n    atomPlanarStereo(atom) { return this.squarePlanar[atom - 1]; }\n    getPriorities() { return this.priority.slice(0); }\n    getAtomTetraChiral() { return this.chiralTetra.slice(0); }\n    getBondSideStereo() { return this.cistransBond.slice(0); }\n    static create(meta) {\n        let stereo = new Stereochemistry(meta);\n        stereo.calculate();\n        return stereo;\n    }\n    static rubricTetrahedral(mol, atom) {\n        if (mol.atomAdjCount(atom) < 3 || mol.atomAdjCount(atom) + mol.atomHydrogens(atom) != 4)\n            return null;\n        let adjBonds = mol.atomAdjBonds(atom);\n        let hasWedge = false;\n        for (let n = 0; n < adjBonds.length; n++) {\n            let bt = mol.bondType(adjBonds[n]);\n            if (bt == Molecule.BONDTYPE_UNKNOWN)\n                return null;\n            if (mol.bondFrom(adjBonds[n]) != atom)\n                continue;\n            if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                hasWedge = true;\n        }\n        if (!hasWedge && !mol.is3D())\n            return null;\n        let adj = mol.atomAdjList(atom);\n        let x = [0, 0, 0, 0];\n        let y = [0, 0, 0, 0];\n        let z = [0, 0, 0, 0];\n        let numShort = 0, numWedges = 0;\n        for (let n = 0; n < adjBonds.length; n++) {\n            const bfr = mol.bondFrom(adjBonds[n]), bt = mol.bondType(adjBonds[n]);\n            x[n] = mol.atomX(adj[n]) - mol.atomX(atom);\n            y[n] = mol.atomY(adj[n]) - mol.atomY(atom);\n            if (mol.is3D()) {\n                z[n] = mol.atomZ(adj[n]) - mol.atomZ(atom);\n            }\n            else if (bfr == atom) {\n                if (bt == Molecule.BONDTYPE_INCLINED) {\n                    z[n] = 1;\n                    numWedges++;\n                }\n                else if (bt == Molecule.BONDTYPE_DECLINED) {\n                    z[n] = -1;\n                    numWedges++;\n                }\n            }\n            let dsq = norm_xyz(x[n], y[n], z[n]);\n            if (dsq < 0.01 * 0.01) {\n                numShort++;\n                if (numShort > 1)\n                    return null;\n            }\n        }\n        if (adjBonds.length == 3) {\n            adj.push(0);\n            if (!mol.is3D() && numWedges == 1) {\n                let th0 = Math.atan2(y[0], x[0]), th1 = Math.atan2(y[1], x[1]), th2 = Math.atan2(y[2], x[2]);\n                let i1 = 1, i2 = 2;\n                if (angleDiffPos(th1, th0) > angleDiffPos(th2, th0)) {\n                    i2 = 1;\n                    i1 = 2;\n                }\n                x[0] = 1.5;\n                y[0] = 0;\n                x[1] = -0.75;\n                y[i1] = 1.3;\n                x[2] = -0.75;\n                y[i2] = -1.3;\n            }\n            else {\n                x[3] = -(x[0] + x[1] + x[2]);\n                y[3] = -(y[0] + y[1] + y[2]);\n                z[3] = -(z[0] + z[1] + z[2]);\n                let dsq = norm2_xyz(x[3], y[3], z[3]);\n                if (dsq < 0.01 * 0.01)\n                    return null;\n                let inv = 1.0 / Math.sqrt(dsq);\n                x[3] *= inv;\n                y[3] *= inv;\n                z[3] *= inv;\n            }\n        }\n        let one = 0, two = 0;\n        for (let i = 1; i <= 6; i++) {\n            let a = 0, b = 0;\n            if (i == 1) {\n                a = 1;\n                b = 2;\n            }\n            else if (i == 2) {\n                a = 2;\n                b = 3;\n            }\n            else if (i == 3) {\n                a = 3;\n                b = 1;\n            }\n            else if (i == 4) {\n                a = 2;\n                b = 1;\n            }\n            else if (i == 5) {\n                a = 3;\n                b = 2;\n            }\n            else if (i == 6) {\n                a = 1;\n                b = 3;\n            }\n            let xx = y[a] * z[b] - y[b] * z[a] - x[0];\n            let yy = z[a] * x[b] - z[b] * x[a] - y[0];\n            let zz = x[a] * y[b] - x[b] * y[a] - z[0];\n            if (i <= 3)\n                one += xx * xx + yy * yy + zz * zz;\n            else\n                two += xx * xx + yy * yy + zz * zz;\n        }\n        if (two > one)\n            Vec.swap(adj, 2, 3);\n        return adj;\n    }\n    static rubricSquarePlanar(mol, atom) {\n        if (mol.atomAdjCount(atom) != 4)\n            return null;\n        if (!mol.is3D()) {\n            let ninc = 0, ndec = 0;\n            for (let b of mol.atomAdjBonds(atom)) {\n                let bt = mol.bondType(b);\n                if (bt == Molecule.BONDTYPE_INCLINED)\n                    ninc++;\n                else if (bt == Molecule.BONDTYPE_DECLINED)\n                    ndec++;\n            }\n            if (ninc == 2 && ndec == 2) { }\n            else if (ninc == 2 && ndec == 0) { }\n            else if (ninc == 0 && ndec == 2) { }\n            else\n                return null;\n        }\n        let adj = mol.atomAdjList(atom);\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v1 = Vec.sub(MolUtil.atomVec3(mol, adj[0]), v0);\n        let v2 = Vec.sub(MolUtil.atomVec3(mol, adj[1]), v0);\n        let v3 = Vec.sub(MolUtil.atomVec3(mol, adj[2]), v0);\n        let v4 = Vec.sub(MolUtil.atomVec3(mol, adj[3]), v0);\n        for (let v of [v1, v2, v3, v4]) {\n            let dsq = norm2_xyz(v[0], v[1], v[2]);\n            if (dsq < 0.01 * 0.01)\n                continue;\n            let inv = 1.0 / Math.sqrt(dsq);\n            v[0] *= inv;\n            v[1] *= inv;\n            v[2] *= inv;\n        }\n        let d2 = GeomUtil.dist2(v1, v2), d3 = GeomUtil.dist2(v1, v3), d4 = GeomUtil.dist2(v1, v4);\n        if (d2 > d3 && d2 >= d4) {\n            Vec.swap(adj, 1, 2);\n            [v2, v3] = [v3, v2];\n        }\n        else if (d4 > d3) {\n            Vec.swap(adj, 3, 2);\n            [v3, v4] = [v4, v3];\n        }\n        const MIN_ANGLE = (mol.is3D() ? 80 : 45) * DEGRAD;\n        const MAX_ANGLE = (mol.is3D() ? 100 : 135) * DEGRAD;\n        const th12 = GeomUtil.acuteAngle(v1, v2);\n        if (th12 < MIN_ANGLE || th12 > MAX_ANGLE)\n            return null;\n        const th23 = GeomUtil.acuteAngle(v2, v3);\n        if (th23 < MIN_ANGLE || th23 > MAX_ANGLE)\n            return null;\n        const th34 = GeomUtil.acuteAngle(v3, v4);\n        if (th34 < MIN_ANGLE || th34 > MAX_ANGLE)\n            return null;\n        const th41 = GeomUtil.acuteAngle(v4, v1);\n        if (th41 < MIN_ANGLE || th41 > MAX_ANGLE)\n            return null;\n        return adj;\n    }\n    static rubricBipyrimidal(mol, atom) {\n        const nadj = mol.atomAdjCount(atom);\n        if (nadj != 4 && nadj != 5)\n            return null;\n        let atom2 = 0, atom3 = 0;\n        let adj = mol.atomAdjList(atom), bonds = mol.atomAdjBonds(atom);\n        if (!mol.is3D()) {\n            for (let n = 0; n < adj.length; n++) {\n                if (mol.bondType(bonds[n]) == Molecule.BONDTYPE_INCLINED) {\n                    if (atom2 > 0)\n                        return null;\n                    atom2 = adj[n];\n                }\n                else if (mol.bondType(bonds[n]) == Molecule.BONDTYPE_DECLINED) {\n                    if (atom3 > 0)\n                        return null;\n                    atom3 = adj[n];\n                }\n            }\n            if (atom2 == 0 || atom3 == 0)\n                return null;\n            let th1 = Math.atan2(mol.atomY(atom2) - mol.atomY(atom), mol.atomX(atom2) - mol.atomX(atom));\n            let th2 = Math.atan2(mol.atomY(atom3) - mol.atomY(atom), mol.atomX(atom3) - mol.atomX(atom));\n            if (Math.abs(angleDiff(th1, th2)) > 160 * DEGRAD)\n                return null;\n        }\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v = [[], [], [], [], []];\n        const THRESH = 0.1;\n        for (let n = 0; n < nadj; n++) {\n            v[n] = Vec.sub(MolUtil.atomVec3(mol, adj[n]), v0);\n            const mag = GeomUtil.magnitude(v[n]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[n], 1.0 / mag);\n            if (adj[n] == atom2)\n                v[n][2] += 1;\n            else if (adj[n] == atom3)\n                v[n][2] -= 1;\n        }\n        let atom4 = 0, atom5 = 0;\n        const ANGLE_OPPOSITE = 175 * DEGRAD;\n        for (let i = 0; i < nadj - 1; i++)\n            if (adj[i] != atom2 && adj[i] != atom3) {\n                for (let j = i + 1; j < nadj; j++)\n                    if (adj[j] != atom2 && adj[j] != atom3) {\n                        let theta = GeomUtil.acuteAngle(v[i], v[j]);\n                        if (theta > ANGLE_OPPOSITE) {\n                            if (atom4 != 0)\n                                return null;\n                            atom4 = adj[i];\n                            atom5 = adj[j];\n                        }\n                    }\n            }\n        if (mol.is3D()) {\n            for (let a of adj)\n                if (a != atom4 && a != atom5) {\n                    if (atom2 == 0)\n                        atom2 = a;\n                    else if (atom3 == 0)\n                        atom3 = a;\n                }\n        }\n        if (!atom4 || !atom5)\n            return null;\n        let v1 = null;\n        let v2 = v[adj.indexOf(atom2)];\n        let v3 = v[adj.indexOf(atom3)];\n        let v4 = v[adj.indexOf(atom4)];\n        let v5 = v[adj.indexOf(atom5)];\n        let atom1 = 0;\n        if (nadj == 5) {\n            for (let n = 0; n < nadj; n++)\n                if (adj[n] != atom2 && adj[n] != atom3 && adj[n] != atom4 && adj[n] != atom5) {\n                    atom1 = adj[n];\n                    v1 = v[n];\n                    break;\n                }\n        }\n        else {\n            v1 = [0, 0, 0];\n            v1 = Vec.sub(v1, v2);\n            v1 = Vec.sub(v1, v3);\n            const mag = GeomUtil.magnitude(v1);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v1, 1.0 / mag);\n        }\n        let v45 = Vec.sub(v5, v4);\n        let cross = GeomUtil.crossProduct(v45, v1);\n        let dsq2 = GeomUtil.dist2(cross, v2), dsq3 = GeomUtil.dist2(cross, v3);\n        if (dsq2 < dsq3)\n            return [atom1, atom2, atom3, atom4, atom5];\n        else\n            return [atom1, atom2, atom3, atom5, atom4];\n    }\n    static rubricOctahedral(mol, atom) {\n        const nadj = mol.atomAdjCount(atom);\n        if (nadj != 5 && nadj != 6)\n            return null;\n        let adj = mol.atomAdjList(atom), bonds = mol.atomAdjBonds(atom);\n        if (nadj == 5) {\n            adj.push(0);\n            bonds.push(0);\n        }\n        if (!mol.is3D()) {\n            let numWedges = 0;\n            for (let b of bonds)\n                if (b > 0) {\n                    const bt = mol.bondType(b);\n                    if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                        numWedges++;\n                }\n            if ((nadj == 5 && numWedges < 1) || (nadj == 6 && numWedges < 2))\n                return null;\n        }\n        const THRESH = 0.1;\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v = [[], [], [], [], [], []];\n        for (let n = 0; n < nadj; n++) {\n            v[n] = MolUtil.atomVec3(mol, adj[n]);\n            Vec.subFromArray(v[n], v0);\n            let mag = GeomUtil.magnitude(v[n]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[n], 1 / mag);\n            let bt = mol.bondType(bonds[n]);\n            if (bt == Molecule.BONDTYPE_INCLINED) {\n                if (mol.bondFrom(bonds[n]) == atom)\n                    v[n][2] += 1;\n                else\n                    v[n][2] -= 1;\n            }\n            else if (bt == Molecule.BONDTYPE_DECLINED) {\n                if (mol.bondFrom(bonds[n]) == atom)\n                    v[n][2] -= 1;\n                else\n                    v[n][2] += 1;\n            }\n        }\n        if (nadj == 5) {\n            v[5] = [0, 0, 0];\n            for (let n = 0; n < 5; n++)\n                Vec.subFromArray(v[5], v[n]);\n            let mag = GeomUtil.magnitude(v[5]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[5], 1 / mag);\n        }\n        let slots = [-1, -1, -1, -1, 0, 1];\n        let bestOpposite = GeomUtil.acuteAngle(v[0], v[1]);\n        for (let i = 0; i < 5; i++)\n            for (let j = (i == 0 ? 2 : i + 1); j < 6; j++) {\n                let theta = GeomUtil.acuteAngle(v[i], v[j]);\n                if (theta > bestOpposite) {\n                    slots[4] = i;\n                    slots[5] = j;\n                    bestOpposite = theta;\n                }\n            }\n        let axial = Vec.sub(v[slots[5]], v[slots[4]]);\n        let bestOrthogonal = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < 6; n++)\n            if (n != slots[4] && n != slots[5]) {\n                let delta = Math.abs((90 * DEGRAD) - GeomUtil.acuteAngle(v[n], axial));\n                if (delta < bestOrthogonal) {\n                    slots[0] = n;\n                    bestOrthogonal = delta;\n                }\n            }\n        for (let s = 1; s <= 2; s++) {\n            let cross = GeomUtil.crossProduct(axial, v[slots[s - 1]]);\n            let bestOrient = Number.POSITIVE_INFINITY;\n            for (let n = 0; n < 6; n++) {\n                if (n == slots[4] || n == slots[5] || n == slots[0] || n == slots[1])\n                    continue;\n                let delta = GeomUtil.acuteAngle(v[n], cross);\n                if (delta < bestOrient) {\n                    slots[s] = n;\n                    bestOrient = delta;\n                }\n            }\n        }\n        for (let n = 0; n < 6; n++)\n            if (slots.indexOf(n) < 0) {\n                slots[3] = n;\n                break;\n            }\n        let rubric = [0, 0, 0, 0, 0, 0];\n        for (let n = 0; n < 6; n++)\n            rubric[n] = slots[n] < 0 ? 0 : adj[slots[n]];\n        return rubric;\n    }\n    static rubricBondSides(mol, bond) {\n        const bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        const nfr = mol.atomAdjCount(bfr), nto = mol.atomAdjCount(bto);\n        if (nfr < 2 || nfr > 3 || nto < 2 || nto > 3)\n            return null;\n        let adj1 = mol.atomAdjList(bfr), adj2 = mol.atomAdjList(bto);\n        let f1 = 0, f2 = 0, t1 = 0, t2 = 0;\n        for (let i = 0; i < adj1.length; i++) {\n            if (adj1[i] != bto) {\n                if (f1 == 0)\n                    f1 = adj1[i];\n                else\n                    f2 = adj1[i];\n            }\n        }\n        for (let i = 0; i < adj2.length; i++) {\n            if (adj2[i] != bfr) {\n                if (t1 == 0)\n                    t1 = adj2[i];\n                else\n                    t2 = adj2[i];\n            }\n        }\n        if (f1 > 0 && f2 > 0 && mol.atomElement(f1) == 'H') {\n            let f = f1;\n            f1 = f2;\n            f2 = f;\n        }\n        if (t1 > 0 && t2 > 0 && mol.atomElement(t1) == 'H') {\n            let t = t1;\n            t1 = t2;\n            t2 = t;\n        }\n        let vfr = MolUtil.atomVec3(mol, bfr), vto = MolUtil.atomVec3(mol, bto);\n        let vbond = Vec.sub(vto, vfr);\n        let vf1 = Vec.sub(MolUtil.atomVec3(mol, f1), vfr), vt1 = Vec.sub(MolUtil.atomVec3(mol, t1), vto);\n        const THRESHSQ = 0.1 * 0.1;\n        let xf1 = GeomUtil.crossProduct(vf1, vbond);\n        if (GeomUtil.magnitude2(xf1) < THRESHSQ)\n            return null;\n        let xt1 = GeomUtil.crossProduct(vt1, vbond);\n        if (GeomUtil.magnitude2(xt1) < THRESHSQ)\n            return null;\n        let xf1N = Vec.neg(xf1);\n        let keepF1T1 = GeomUtil.dist2(xf1, xt1) < GeomUtil.dist2(xf1N, xt1);\n        let keepF2T1 = keepF1T1, keepF1T2 = keepF1T1, keepF2T2 = keepF1T1;\n        let vf2 = null, vt2 = null, xf2 = null, xt2 = null, xf2N = null;\n        if (f2 > 0) {\n            vf2 = Vec.sub(MolUtil.atomVec3(mol, f2), vfr);\n            if (GeomUtil.magnitude2(vf2) < THRESHSQ) {\n                if (mol.atomElement(f2) != 'H')\n                    return null;\n            }\n            else {\n                xf2 = GeomUtil.crossProduct(vf2, vbond);\n                if (GeomUtil.magnitude2(xf2) < THRESHSQ)\n                    return null;\n                xf2N = Vec.neg(xf2);\n                keepF2T1 = GeomUtil.dist2(xf2, xt1) > GeomUtil.dist2(xf2N, xt1);\n            }\n        }\n        if (t2 > 0) {\n            vt2 = Vec.sub(MolUtil.atomVec3(mol, t2), vto);\n            if (GeomUtil.magnitude2(vt2) < THRESHSQ) {\n                if (mol.atomElement(t2) != 'H')\n                    return null;\n            }\n            else {\n                xt2 = GeomUtil.crossProduct(vt2, vbond);\n                if (GeomUtil.magnitude2(xt2) < THRESHSQ)\n                    return null;\n                keepF1T2 = GeomUtil.dist2(xf1, xt2) > GeomUtil.dist2(xf1N, xt2);\n            }\n        }\n        if (xf2 != null && xt2 != null) {\n            keepF2T2 = GeomUtil.dist2(xf2, xt2) < GeomUtil.dist2(xf2N, xt2);\n        }\n        if (keepF1T1 && keepF2T1 && keepF1T2 && keepF2T2)\n            return [f1, f2, t1, t2];\n        if (!keepF1T1 && !keepF2T1 && !keepF1T2 && !keepF2T2)\n            return [f1, f2, t2, t1];\n        return null;\n    }\n    buildTetraChirality() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let haswedge = Vec.booleanArray(false, na);\n        for (let n = 1; n <= nb; n++) {\n            if (mol.bondType(n) == Molecule.BONDTYPE_INCLINED || mol.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                haswedge[mol.bondFrom(n) - 1] = true;\n        }\n        skip_atom: for (let n = 1; n <= na; n++) {\n            this.chiralTetra[n - 1] = Stereochemistry.STEREO_NONE;\n            let adj = mol.atomAdjList(n);\n            if (!(adj.length == 4 || (adj.length == 3 && mol.atomHydrogens(n) == 1)))\n                continue;\n            if (adj.length == 3 && (this.isH[adj[0] - 1] || this.isH[adj[1] - 1] || this.isH[adj[2] - 1]))\n                continue;\n            for (let i = 0; i < adj.length - 1; i++) {\n                for (let j = i + 1; j < adj.length; j++) {\n                    if (this.priority[adj[i] - 1] == this.priority[adj[j] - 1])\n                        continue skip_atom;\n                }\n            }\n            if (!haswedge[n - 1] && !mol.is3D()) {\n                this.chiralTetra[n - 1] = Stereochemistry.STEREO_UNKNOWN;\n                continue;\n            }\n            let rubric = Stereochemistry.rubricTetrahedral(mol, n);\n            if (rubric == null)\n                continue;\n            let pri = [\n                rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1],\n                rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1],\n                rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1],\n                rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1]\n            ];\n            pri = Vec.idxSort(pri);\n            let parity = Permutation.parityIdentity(pri);\n            this.chiralTetra[n - 1] = (parity & 1) == 0 ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildBondCisTrans() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let sf = [0, 0], st = [0, 0];\n        let ringMask = Vec.booleanArray(false, nb);\n        for (let rsz = 3; rsz <= 7; rsz++) {\n            for (let r of mol.findRingsOfSize(rsz)) {\n                for (let n = 0; n < r.length; n++) {\n                    let b = mol.findBond(r[n], r[n < r.length - 1 ? n + 1 : 0]);\n                    ringMask[b - 1] = true;\n                }\n            }\n        }\n        skip_bond: for (let n = 1; n <= nb; n++) {\n            this.cistransBond[n - 1] = Stereochemistry.STEREO_NONE;\n            if (mol.bondOrder(n) != 2 || this.meta.isBondAromatic(n) || ringMask[n - 1])\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let adj1 = mol.atomAdjList(bfr), adj2 = mol.atomAdjList(bto);\n            if (adj1.length <= 1 || adj2.length <= 1 || adj1.length > 3 || adj2.length > 3)\n                continue;\n            if (adj1.length == 2 && (this.isH[adj1[0] - 1] || this.isH[adj1[1] - 1]))\n                continue;\n            if (adj2.length == 2 && (this.isH[adj2[0] - 1] || this.isH[adj2[1] - 1]))\n                continue;\n            for (let i = 0; i < adj1.length - 1; i++)\n                if (adj1[i] != bfr)\n                    for (let j = i + 1; j < adj1.length; j++)\n                        if (adj1[j] != bfr)\n                            if (this.priority[adj1[i] - 1] == this.priority[adj1[j] - 1])\n                                continue skip_bond;\n            for (let i = 0; i < adj2.length - 1; i++)\n                if (adj2[i] != bto)\n                    for (let j = i + 1; j < adj2.length; j++)\n                        if (adj2[j] != bto)\n                            if (this.priority[adj2[i] - 1] == this.priority[adj2[j] - 1])\n                                continue skip_bond;\n            if (mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN) {\n                this.cistransBond[n - 1] = Stereochemistry.STEREO_UNKNOWN;\n                continue;\n            }\n            let rubric = Stereochemistry.rubricBondSides(mol, n);\n            if (rubric == null)\n                continue;\n            let pf1 = rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1];\n            let pf2 = rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1];\n            let pt1 = rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1];\n            let pt2 = rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1];\n            this.cistransBond[n - 1] = ((pf1 < pf2) == (pt1 < pt2)) ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildPlanarCisTrans() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        skip_atom: for (let n = 1; n <= na; n++) {\n            this.squarePlanar[n - 1] = Stereochemistry.STEREO_NONE;\n            if (mol.atomAdjCount(n) != 4)\n                continue;\n            if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(n)] < 3)\n                continue;\n            let adj = mol.atomAdjList(n);\n            for (let i = 0; i < adj.length; i++) {\n                let count = 0;\n                for (let j = 0; j < adj.length; j++) {\n                    if (this.priority[adj[i] - 1] == this.priority[adj[j] - 1])\n                        count++;\n                }\n                if (count >= 3)\n                    continue skip_atom;\n            }\n            let rubric = Stereochemistry.rubricSquarePlanar(mol, n);\n            if (rubric == null)\n                continue;\n            let pri = [\n                rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1],\n                rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1],\n                rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1],\n                rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1]\n            ];\n            let parity = Permutation.parityOrder(pri);\n            this.squarePlanar[n - 1] = (parity & 1) == 0 ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildOctaChirality() {\n    }\n    buildPriority() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let cipgr = [];\n        for (let n = 0; n < na; n++)\n            cipgr.push(Vec.numberArray(-1, mol.atomHydrogens(n + 1)));\n        for (let n = 1; n <= nb; n++) {\n            let bf = mol.bondFrom(n) - 1, bt = mol.bondTo(n) - 1, bo = mol.bondOrder(n);\n            if (this.meta.isBondAromatic(n))\n                bo = 2;\n            if (bf != bt)\n                for (let i = 0; i < bo; i++) {\n                    cipgr[bf].push(bt);\n                    cipgr[bt].push(bf);\n                }\n        }\n        this.priority = Vec.numberArray(0, na);\n        let anyActualH = false;\n        for (let n = 0; n < na; n++) {\n            this.priority[n] = mol.atomicNumber(n + 1);\n            if (this.priority[n] == 1)\n                anyActualH = true;\n        }\n        let prigr = [];\n        for (let n = 0; n < na; n++)\n            prigr.push([]);\n        while (true) {\n            for (let n = 0; n < na; n++) {\n                let cip = cipgr[n], pri = [];\n                for (let i = 0; i < cip.length; i++)\n                    pri.push(cip[i] < 0 ? 1 : this.priority[cip[i]]);\n                Vec.sort(pri);\n                prigr[n] = pri;\n            }\n            let groups = this.sortAndGroup(this.priority);\n            let nextpri = anyActualH ? 0 : 1;\n            let repartitioned = false;\n            for (let n = 0; n < groups.length; n++) {\n                let g = groups[n];\n                for (let p = 0; p < g.length - 1;) {\n                    const i1 = g[p], i2 = g[p + 1];\n                    let cmp = 0, sz = Math.max(prigr[i1].length, prigr[i2].length);\n                    for (let i = 0; i < sz; i++) {\n                        let v1 = i < prigr[i1].length ? prigr[i1][i] : 0, v2 = i < prigr[i2].length ? prigr[i2][i] : 0;\n                        if (v1 < v2) {\n                            cmp = -1;\n                            break;\n                        }\n                        if (v1 > v2) {\n                            cmp = 1;\n                            break;\n                        }\n                    }\n                    if (cmp > 0) {\n                        g[p] = i2;\n                        g[p + 1] = i1;\n                        if (p > 0)\n                            p--;\n                    }\n                    else\n                        p++;\n                }\n                for (let i = 0; i < g.length; i++) {\n                    if (i == 0)\n                        nextpri++;\n                    else if (prigr[g[i]].length != prigr[g[i - 1]].length) {\n                        nextpri++;\n                        repartitioned = true;\n                    }\n                    else {\n                        for (let j = 0; j < prigr[g[i]].length; j++)\n                            if (prigr[g[i]][j] != prigr[g[i - 1]][j]) {\n                                nextpri++;\n                                repartitioned = true;\n                                break;\n                            }\n                    }\n                    this.priority[g[i]] = nextpri;\n                }\n            }\n            if (!repartitioned)\n                break;\n        }\n    }\n    sortAndGroup(val) {\n        let uset = new Set();\n        for (let v of val)\n            uset.add(v);\n        let unique = Array.from(uset);\n        Vec.sort(unique);\n        let ret = [];\n        for (let n = 0; n < unique.length; n++)\n            ret.push([]);\n        for (let n = 0; n < val.length; n++) {\n            let grp = unique.indexOf(val[n]);\n            ret[grp].push(n);\n        }\n        return ret;\n    }\n}\nStereochemistry.STEREO_NONE = 0;\nStereochemistry.STEREO_POS = 1;\nStereochemistry.STEREO_NEG = 2;\nStereochemistry.STEREO_UNKNOWN = 3;\nStereochemistry.STEREO_BROKEN = 4;\nStereochemistry.RUBRIC_EQUIV_TETRA = [\n    [0, 1, 2, 3], [0, 2, 3, 1], [0, 3, 1, 2], [1, 0, 3, 2], [1, 2, 0, 3], [1, 3, 2, 0],\n    [2, 0, 1, 3], [2, 1, 3, 0], [2, 3, 0, 1], [3, 0, 2, 1], [3, 1, 0, 2], [3, 2, 1, 0]\n];\nStereochemistry.RUBRIC_EQUIV_SIDES = [\n    [0, 1, 2, 3], [1, 0, 3, 2], [2, 3, 0, 1], [3, 2, 1, 0]\n];\nStereochemistry.RUBRIC_EQUIV_SQUARE = [\n    [0, 1, 2, 3], [0, 3, 2, 1], [1, 2, 3, 0], [1, 0, 3, 2],\n    [2, 1, 0, 3], [2, 3, 0, 1], [3, 2, 1, 0], [3, 0, 1, 2]\n];\nStereochemistry.RUBRIC_EQUIV_BIPY = [\n    [0, 1, 2, 3, 4], [1, 2, 0, 3, 4], [2, 0, 1, 3, 4],\n    [0, 2, 1, 4, 3], [1, 0, 2, 4, 3], [2, 1, 0, 4, 3],\n];\nStereochemistry.RUBRIC_EQUIV_OCTA = [\n    [0, 1, 2, 3, 4, 5], [0, 3, 2, 1, 5, 4], [0, 4, 2, 5, 3, 1], [0, 5, 2, 4, 1, 3],\n    [1, 0, 3, 2, 5, 4], [1, 2, 3, 0, 4, 5], [1, 4, 3, 5, 0, 2], [1, 5, 3, 4, 2, 0],\n    [2, 1, 0, 3, 5, 4], [2, 3, 0, 1, 4, 5], [2, 4, 0, 5, 1, 3], [2, 5, 0, 4, 3, 1],\n    [3, 0, 1, 2, 4, 5], [3, 2, 1, 0, 5, 4], [3, 4, 1, 5, 2, 0], [3, 5, 1, 4, 0, 2],\n    [4, 0, 5, 2, 1, 3], [4, 1, 5, 3, 2, 0], [4, 2, 5, 0, 3, 1], [4, 3, 5, 1, 0, 2],\n    [5, 0, 4, 2, 3, 1], [5, 1, 4, 3, 0, 2], [5, 2, 4, 0, 1, 3], [5, 3, 4, 1, 2, 0]\n];\nexport { Stereochemistry };\n//# sourceMappingURL=Stereochemistry.js.map","import { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { DotPath } from '../mol/DotPath';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nimport { Stereochemistry } from '../mol/Stereochemistry';\nclass MetaMolecule {\n    constructor(mol) {\n        this.mol = mol;\n        this.atomArom = null;\n        this.bondArom = null;\n        this.rubricTetra = null;\n        this.rubricSquare = null;\n        this.rubricBipy = null;\n        this.rubricOcta = null;\n        this.rubricSides = null;\n        this.hash = null;\n        this.heavyHash = null;\n        this.uniqueElements = null;\n        this.dots = null;\n        this.piAtom = null;\n    }\n    calculateStrictAromaticity() {\n        let mol = this.mol;\n        this.atomArom = Vec.booleanArray(false, mol.numAtoms);\n        this.bondArom = Vec.booleanArray(false, mol.numBonds);\n        let rings = mol.findRingsOfSize(6);\n        const nr = rings.length;\n        if (nr == 0)\n            return;\n        this.ensurePiAtoms();\n        let mask = Vec.booleanArray(false, nr);\n        for (let n = 0; n < nr; n++) {\n            for (let i = 0; i < rings[n].length; i++) {\n                let a = rings[n][i];\n                if (!this.piAtom[a - 1]) {\n                    mask[n] = true;\n                    break;\n                }\n                let b = mol.findBond(a, rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                let bo = mol.bondOrder(b);\n                if (bo != 1 && bo != 2) {\n                    mask[n] = true;\n                    break;\n                }\n            }\n        }\n        while (true) {\n            let anyChange = false;\n            for (let n = 0; n < nr; n++)\n                if (!mask[n]) {\n                    let phase1 = true, phase2 = true;\n                    for (let i = 0; i < rings[n].length; i++) {\n                        let b = mol.findBond(rings[n][i], rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                        if (this.bondArom[b - 1])\n                            continue;\n                        let bo = mol.bondOrder(b);\n                        phase1 = phase1 && bo == (2 - (i & 1));\n                        phase2 = phase2 && bo == (1 + (i & 1));\n                    }\n                    if (!phase1 && !phase2)\n                        continue;\n                    for (let i = 0; i < rings[n].length; i++) {\n                        let b = mol.findBond(rings[n][i], rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                        this.bondArom[b - 1] = true;\n                    }\n                    mask[n] = true;\n                    anyChange = true;\n                }\n            if (!anyChange)\n                break;\n        }\n        for (let n = 0; n < this.bondArom.length; n++)\n            if (this.bondArom[n]) {\n                this.atomArom[mol.bondFrom(n + 1) - 1] = true;\n                this.atomArom[mol.bondTo(n + 1) - 1] = true;\n            }\n    }\n    calculateRelaxedAromaticity() {\n        let mol = this.mol;\n        this.atomArom = Vec.booleanArray(false, mol.numAtoms);\n        this.bondArom = Vec.booleanArray(false, mol.numBonds);\n        this.ensurePiAtoms();\n        const na = mol.numAtoms, nb = mol.numBonds;\n        let electrons = Vec.numberArray(0, na);\n        let exocyclic = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++) {\n            let atno = mol.atomicNumber(n);\n            electrons[n - 1] = (Chemistry.ELEMENT_BLOCKS[atno] == 2 ? Chemistry.ELEMENT_VALENCE[atno] : 0) - mol.atomCharge(n) - mol.atomHydrogens(n)\n                - mol.atomUnpaired(n);\n        }\n        for (let n = 1; n <= nb; n++) {\n            const bfr = mol.bondFrom(n), bto = mol.bondTo(n), bo = mol.bondOrder(n);\n            electrons[bfr - 1] -= bo;\n            electrons[bto - 1] -= bo;\n            if (bo == 2) {\n                const rblk1 = mol.atomRingBlock(bfr), rblk2 = mol.atomRingBlock(bto);\n                if (rblk1 > 0 && rblk1 != rblk2)\n                    exocyclic[bfr - 1] = true;\n                if (rblk2 > 0 && rblk2 != rblk1)\n                    exocyclic[bto - 1] = true;\n            }\n        }\n        let rings = [];\n        for (let rsz = 3; rsz <= 7; rsz++)\n            for (let rng of mol.findRingsOfSize(rsz)) {\n                let valid = true;\n                for (let n = 0; n < rsz; n++) {\n                    const a = rng[n];\n                    if (!this.piAtom[a - 1] && electrons[a - 1] < 2 && !exocyclic[a - 1]) {\n                        valid = false;\n                        break;\n                    }\n                    let b = mol.findBond(a, rng[n < rsz - 1 ? n + 1 : 0]);\n                    let bo = mol.bondOrder(b);\n                    if (bo != 1 && bo != 2) {\n                        valid = false;\n                        break;\n                    }\n                }\n                if (valid)\n                    rings.push(rng);\n            }\n        while (rings.length > 0) {\n            let anyChange = false;\n            for (let n = 0; n < rings.length; n++) {\n                let r = rings[n];\n                let paths = [0];\n                for (let i = 0; i < r.length; i++) {\n                    const a = r[i];\n                    const b1 = mol.findBond(a, r[i < r.length - 1 ? i + 1 : 0]);\n                    const b2 = mol.findBond(a, r[i > 0 ? i - 1 : r.length - 1]);\n                    if (this.bondArom[b1 - 1]) {\n                        for (let j = paths.length - 1; j >= 0; j--) {\n                            const e = paths[j] + 2;\n                            if (paths.indexOf(e) < 0)\n                                paths = Vec.append(paths, e);\n                        }\n                    }\n                    else if (mol.bondOrder(b1) == 2)\n                        Vec.addTo(paths, 2);\n                    else if (electrons[a - 1] >= 2 && mol.bondOrder(b1) == 1 && mol.bondOrder(b2) == 1)\n                        Vec.addTo(paths, 2);\n                }\n                let arom = false;\n                for (let e of paths) {\n                    if (e == 2 && r.length == 3) {\n                        arom = true;\n                        break;\n                    }\n                    if (e == 6) {\n                        arom = true;\n                        break;\n                    }\n                }\n                if (arom) {\n                    for (let i = 0; i < r.length; i++) {\n                        let a = r[i], b = mol.findBond(a, r[i < r.length - 1 ? i + 1 : 0]);\n                        this.atomArom[a - 1] = true;\n                        this.bondArom[b - 1] = true;\n                    }\n                    rings.splice(n, 1);\n                    n--;\n                    anyChange = true;\n                }\n            }\n            if (!anyChange)\n                break;\n        }\n    }\n    calculateStereoRubric() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        this.rubricTetra = new Array(na);\n        this.rubricSquare = new Array(na);\n        this.rubricBipy = new Array(na);\n        this.rubricOcta = new Array(na);\n        this.rubricSides = new Array(nb);\n        for (let n = 1; n <= na; n++) {\n            let blk = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(n)];\n            let adjc = mol.atomAdjCount(n), hc = mol.atomHydrogens(n);\n            let ninc = 0, ndec = 0;\n            for (let b of mol.atomAdjBonds(n)) {\n                if (mol.bondType(b) == Molecule.BONDTYPE_INCLINED && mol.bondFrom(b) == n)\n                    ninc++;\n                else if (mol.bondType(b) == Molecule.BONDTYPE_DECLINED && mol.bondFrom(b) == n)\n                    ndec++;\n            }\n            if (blk == 2 && ((adjc == 3 && hc == 1) || (adjc == 4 && hc == 0))) {\n                this.rubricTetra[n - 1] = Stereochemistry.rubricTetrahedral(mol, n);\n            }\n            else if (blk >= 3 && adjc == 4 && ninc == 1 && ndec == 1) {\n                this.rubricTetra[n - 1] = Stereochemistry.rubricTetrahedral(mol, n);\n            }\n            if (blk >= 3 && adjc == 4 && hc == 0) {\n                this.rubricSquare[n - 1] = Stereochemistry.rubricSquarePlanar(mol, n);\n            }\n            if (blk >= 3 && (adjc == 4 || adjc == 5) && hc == 0) {\n                this.rubricBipy[n - 1] = Stereochemistry.rubricBipyrimidal(mol, n);\n            }\n            if (blk >= 3 && (adjc == 5 || adjc == 6) && hc == 0) {\n                this.rubricOcta[n - 1] = Stereochemistry.rubricOctahedral(mol, n);\n            }\n            else if (blk == 2 && adjc == 6 && hc == 0) {\n                this.rubricOcta[n - 1] = Stereochemistry.rubricOctahedral(mol, n);\n            }\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondOrder(n) != 2 || mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN || this.isBondAromatic(n))\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let blk1 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bfr)];\n            let blk2 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bto)];\n            let adjc1 = mol.atomAdjCount(bfr), hc1 = mol.atomHydrogens(bfr);\n            let adjc2 = mol.atomAdjCount(bto), hc2 = mol.atomHydrogens(bto);\n            if (blk1 == 2 && blk2 == 2 && (adjc1 + hc1 == 3 && hc1 <= 1) && (adjc2 + hc2 == 3 && hc2 <= 1)) {\n                this.rubricSides[n - 1] = Stereochemistry.rubricBondSides(mol, n);\n            }\n        }\n    }\n    removeHydrogens() {\n        let mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let atomMask = Vec.booleanArray(true, na), bondMask = Vec.booleanArray(true, nb);\n        for (let n = 1; n <= na; n++)\n            if (MolUtil.boringHydrogen(mol, n)) {\n                atomMask[n - 1] = false;\n                bondMask[mol.atomAdjBonds(n)[0] - 1] = false;\n            }\n        if (Vec.allTrue(atomMask))\n            return;\n        mol = MolUtil.subgraphMask(mol, atomMask);\n        if (this.atomArom)\n            this.atomArom = Vec.maskGet(this.atomArom, atomMask);\n        if (this.bondArom)\n            this.bondArom = Vec.maskGet(this.bondArom, bondMask);\n        if (this.rubricTetra || this.rubricSquare || this.rubricBipy || this.rubricOcta || this.rubricSides) {\n            if (this.rubricTetra)\n                this.rubricTetra = Vec.maskGet(this.rubricTetra, atomMask);\n            if (this.rubricSquare)\n                this.rubricSquare = Vec.maskGet(this.rubricSquare, atomMask);\n            if (this.rubricBipy)\n                this.rubricBipy = Vec.maskGet(this.rubricBipy, atomMask);\n            if (this.rubricOcta)\n                this.rubricOcta = Vec.maskGet(this.rubricOcta, atomMask);\n            if (this.rubricSides)\n                this.rubricSides = Vec.maskGet(this.rubricSides, bondMask);\n            let atomMap = Vec.prepend(Vec.add(Vec.maskMap(atomMask), 1), 0);\n            for (let n = 0; n < Vec.len(this.rubricTetra); n++)\n                if (this.rubricTetra[n])\n                    this.rubricTetra[n] = Vec.idxGet(atomMap, this.rubricTetra[n]);\n            for (let n = 0; n < Vec.len(this.rubricSquare); n++)\n                if (this.rubricSquare[n])\n                    this.rubricSquare[n] = Vec.idxGet(atomMap, this.rubricSquare[n]);\n            for (let n = 0; n < Vec.len(this.rubricBipy); n++)\n                if (this.rubricBipy[n])\n                    this.rubricBipy[n] = Vec.idxGet(atomMap, this.rubricBipy[n]);\n            for (let n = 0; n < Vec.len(this.rubricOcta); n++)\n                if (this.rubricOcta[n])\n                    this.rubricOcta[n] = Vec.idxGet(atomMap, this.rubricOcta[n]);\n            for (let n = 0; n < Vec.len(this.rubricSides); n++)\n                if (this.rubricSides[n])\n                    this.rubricSides[n] = Vec.idxGet(atomMap, this.rubricSides[n]);\n        }\n    }\n    calculateSkeletonHash() {\n        if (MetaMolecule.skeletonHash == null)\n            throw 'Skeleton hash not available.';\n        this.hash = MetaMolecule.skeletonHash(this.mol);\n    }\n    calculateHeavyHash() {\n        let anyH = false;\n        for (let n = 1; n <= this.mol.numAtoms; n++)\n            if (this.mol.atomElement(n) == 'H') {\n                anyH = true;\n                break;\n            }\n        if (!anyH) {\n            this.heavyHash = this.getSkeletonHash();\n            return;\n        }\n        let hvy = this.mol.clone();\n        for (let n = hvy.numAtoms; n >= 1; n--)\n            if (hvy.atomElement(n) == 'H')\n                hvy.deleteAtomAndBonds(n);\n        this.heavyHash = MetaMolecule.skeletonHash(hvy);\n    }\n    isAtomAromatic(atom) {\n        return this.atomArom == null ? false : this.atomArom[atom - 1];\n    }\n    isBondAromatic(bond) {\n        return this.bondArom == null ? false : this.bondArom[bond - 1];\n    }\n    bondOrderArom(bond) {\n        return this.bondArom != null && this.bondArom[bond - 1] ? -1 : this.mol.bondOrder(bond);\n    }\n    getAtomAromaticity() {\n        return this.atomArom == null ? null : this.atomArom.slice(0);\n    }\n    getBondAromaticity() {\n        return this.bondArom == null ? null : this.bondArom.slice(0);\n    }\n    getSkeletonHash() {\n        if (this.hash == null)\n            this.calculateSkeletonHash();\n        return this.hash;\n    }\n    getHeavyHash() {\n        if (this.heavyHash == null)\n            this.calculateHeavyHash();\n        return this.heavyHash;\n    }\n    getDotPath() {\n        if (this.dots == null)\n            this.dots = new DotPath(this.mol);\n        return this.dots;\n    }\n    getUniqueElements() {\n        if (this.uniqueElements == null) {\n            this.uniqueElements = [];\n            for (let n = 1; n <= this.mol.numAtoms; n++) {\n                let el = this.mol.atomElement(n);\n                if (this.uniqueElements.indexOf(el) < 0)\n                    this.uniqueElements.push(el);\n            }\n        }\n        return this.uniqueElements;\n    }\n    equivalentTo(other, timeout = 1000) {\n        if (MetaMolecule.isomorphMatch == null)\n            throw 'Isomorph search unavailable.';\n        if (this.mol.numAtoms != other.mol.numAtoms || this.mol.numBonds != other.mol.numBonds)\n            return false;\n        if (this.hash == null)\n            this.calculateSkeletonHash();\n        if (other.hash == null)\n            other.calculateSkeletonHash();\n        if (this.hash != other.hash)\n            return false;\n        if (this.mol.compareTo(other.mol) == 0)\n            return true;\n        let uniq1 = this.getUniqueElements(), uniq2 = other.getUniqueElements();\n        for (let n = 0; n < uniq1.length; n++) {\n            if (!uniq2.includes(uniq1[n]))\n                return false;\n        }\n        return MetaMolecule.isomorphMatch(this, other, timeout);\n    }\n    static createRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    static createStrict(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStrictAromaticity();\n        return meta;\n    }\n    static createStrictRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStrictAromaticity();\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    static createRelaxed(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateRelaxedAromaticity();\n        return meta;\n    }\n    static createRelaxedRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateRelaxedAromaticity();\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    ensurePiAtoms() {\n        if (this.piAtom != null)\n            return;\n        this.piAtom = Vec.booleanArray(false, this.mol.numAtoms);\n        for (let n = 1; n <= this.mol.numBonds; n++)\n            if (this.mol.bondOrder(n) == 2) {\n                {\n                    this.piAtom[this.mol.bondFrom(n) - 1] = true;\n                    this.piAtom[this.mol.bondTo(n) - 1] = true;\n                }\n            }\n    }\n}\nMetaMolecule.skeletonHash = null;\nMetaMolecule.isomorphMatch = null;\nexport { MetaMolecule };\n//# sourceMappingURL=MetaMolecule.js.map","import { Chemistry } from '../mol/Chemistry';\nimport { MetaMolecule } from '../mol/MetaMolecule';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { Permutation, Vec } from '../util/Vec';\nlet crc_table = [];\nfunction make_crc_table() {\n    if (crc_table.length > 0)\n        return;\n    for (let n = 0; n < 256; n++) {\n        let c = n;\n        for (let i = 0; i < 8; i++)\n            if ((c & 1) != 0)\n                c = 0xEDB88320 ^ (c >>> 1);\n            else\n                c = (c >>> 1);\n        crc_table.push(c);\n    }\n}\nconst BOOT_CRC = 0xFFFFFFFF;\nfunction start_crc() { return BOOT_CRC; }\nfunction feed_crc(crc, byte) {\n    let idx = (crc ^ byte) & 0xFF;\n    return crc_table[idx] ^ (crc >>> 8);\n}\nfunction end_crc(crc) { return crc ^ BOOT_CRC; }\nclass CircularFingerprints {\n    constructor(meta, kind) {\n        this.meta = meta;\n        this.kind = kind;\n        this.hookApplyNewFP = null;\n        this.hookConsiderNewFP = null;\n        this.identity = [];\n        this.resolvedChiral = [];\n        this.atomGroup = [];\n        this.fplist = [];\n        this.amask = [];\n        this.atomAdj = [];\n        this.bondAdj = [];\n        make_crc_table();\n    }\n    calculate() {\n        let mol = this.meta.mol, na = mol.numAtoms;\n        this.identity = Vec.numberArray(0, na);\n        this.resolvedChiral = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++)\n            this.atomGroup.push([]);\n        this.amask = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++) {\n            this.amask[n] = mol.atomicNumber(n + 1) >= 2 && !MolUtil.hasAbbrev(mol, n + 1);\n            this.atomAdj.push([]);\n            this.bondAdj.push([]);\n        }\n        for (let n = 0; n < na; n++) {\n            if (!this.amask[n])\n                continue;\n            this.atomAdj[n] = mol.atomAdjList(n + 1);\n            this.bondAdj[n] = mol.atomAdjBonds(n + 1);\n            for (let i = this.atomAdj[n].length - 1; i >= 0; i--)\n                if (!this.amask[this.atomAdj[n][i] - 1]) {\n                    this.atomAdj[n].splice(i, 1);\n                    this.bondAdj[n].splice(i, 1);\n                }\n        }\n        for (let n = 0; n < na; n++)\n            if (this.amask[n]) {\n                this.identity[n] = this.initialIdentityECFP(n + 1);\n                this.atomGroup[n] = [n + 1];\n                this.applyNewFP({ hashCode: this.identity[n], iteration: 0, atoms: this.atomGroup[n], centralAtom: n + 1 });\n            }\n        let niter = this.kind;\n        for (let iter = 1; iter <= niter; iter++) {\n            let newident = Vec.numberArray(0, na);\n            for (let n = 0; n < na; n++)\n                if (this.amask[n])\n                    newident[n] = this.circularIterate(iter, n + 1);\n            this.identity = newident;\n            for (let n = 0; n < na; n++)\n                if (this.amask[n]) {\n                    this.atomGroup[n] = this.growAtoms(this.atomGroup[n]);\n                    this.considerNewFP({ hashCode: this.identity[n], iteration: iter, atoms: this.atomGroup[n], centralAtom: n + 1 });\n                }\n        }\n    }\n    static create(meta, kind) {\n        if (meta instanceof Molecule)\n            meta = MetaMolecule.createStrictRubric(meta);\n        let circ = new CircularFingerprints(meta, kind);\n        circ.calculate();\n        return circ;\n    }\n    getMolecule() { return this.meta.mol; }\n    get numFP() { return this.fplist.length; }\n    getFP(idx) { return this.fplist[idx]; }\n    getFingerprints() { return this.fplist.slice(0); }\n    getUniqueHashes() {\n        let hashes = new Set();\n        for (let fp of this.fplist)\n            hashes.add(fp.hashCode);\n        return Vec.sorted(Array.from(hashes));\n    }\n    getFoldedHashes(maxBits) {\n        let andBits = maxBits - 1;\n        let hashes = new Set();\n        for (let fp of this.fplist)\n            hashes.add(fp.hashCode & andBits);\n        return Vec.sorted(Array.from(hashes));\n    }\n    static tanimoto(hash1, hash2) {\n        let shared = 0, total = 0;\n        let sz1 = hash1.length, sz2 = hash2.length;\n        if (sz1 == 0 && sz2 == 0)\n            return 0;\n        let i1 = 0, i2 = 0;\n        while (i1 < sz1 || i2 < sz2) {\n            if (i1 == sz1) {\n                total += sz2 - i2;\n                break;\n            }\n            if (i2 == sz2) {\n                total += sz1 - i1;\n                break;\n            }\n            let v1 = hash1[i1], v2 = hash2[i2];\n            if (v1 == v2) {\n                shared += 1;\n                i1 += 1;\n                i2 += 1;\n            }\n            else if (v1 < v2)\n                i1 += 1;\n            else\n                i2 += 1;\n            total += 1;\n        }\n        return shared / total;\n    }\n    initialIdentityECFP(atom) {\n        const mol = this.meta.mol;\n        let adj = mol.atomAdjList(atom);\n        let nheavy = 0, nhydr = mol.atomHydrogens(atom);\n        for (let a of adj)\n            if (mol.atomElement(a) == 'H')\n                nhydr++;\n            else\n                nheavy++;\n        let atno = mol.atomicNumber(atom);\n        let degree = Math.max(0, Chemistry.ELEMENT_BONDING[atno] - nhydr);\n        let chg = mol.atomCharge(atom);\n        let inring = mol.atomRingBlock(atom) > 0 ? 1 : 0;\n        let crc = start_crc();\n        crc = feed_crc(crc, (nheavy << 4) | degree);\n        crc = feed_crc(crc, atno);\n        crc = feed_crc(crc, chg + 0x80);\n        crc = feed_crc(crc, (nhydr << 4) | inring);\n        return end_crc(crc);\n    }\n    circularIterate(iter, atom) {\n        let adj = this.atomAdj[atom - 1], adjb = this.bondAdj[atom - 1];\n        let seq = Vec.numberArray(0, 2 + 2 * adj.length);\n        seq[0] = iter;\n        seq[1] = this.identity[atom - 1];\n        for (let n = 0; n < adj.length; n++) {\n            seq[2 * n + 2] = this.meta.isBondAromatic(adjb[n]) ? 0xF : this.meta.mol.bondOrder(adjb[n]);\n            seq[2 * n + 3] = this.identity[adj[n] - 1];\n        }\n        let p = 0;\n        while (p < adj.length - 1) {\n            let i = 2 + 2 * p;\n            if (seq[i] > seq[i + 2] || (seq[i] == seq[i + 2] && seq[i + 1] > seq[i + 3])) {\n                Vec.swap(seq, i, i + 2);\n                Vec.swap(seq, i + 1, i + 3);\n                if (p > 0)\n                    p--;\n            }\n            else\n                p++;\n        }\n        let crc = start_crc();\n        for (let n = 0; n < seq.length; n += 2) {\n            crc = feed_crc(crc, seq[n]);\n            let v = seq[n + 1];\n            crc = feed_crc(crc, v >> 24);\n            crc = feed_crc(crc, (v >> 16) & 0xFF);\n            crc = feed_crc(crc, (v >> 8) & 0xFF);\n            crc = feed_crc(crc, v & 0xFF);\n        }\n        if (!this.resolvedChiral[atom - 1] && Vec.len(this.meta.rubricTetra) > 0 && this.meta.rubricTetra[atom - 1] != null) {\n            let ru = this.meta.rubricTetra[atom - 1];\n            let par = [\n                ru[0] == 0 ? 0 : this.identity[ru[0] - 1],\n                ru[1] == 0 ? 0 : this.identity[ru[1] - 1],\n                ru[2] == 0 ? 0 : this.identity[ru[2] - 1],\n                ru[3] == 0 ? 0 : this.identity[ru[3] - 1]\n            ];\n            if (par[0] != par[1] && par[0] != par[2] && par[0] != par[3] && par[1] != par[2] && par[1] != par[3] && par[2] != par[3]) {\n                crc = feed_crc(crc, Permutation.parityOrder(par) + 1);\n                this.resolvedChiral[atom - 1] = true;\n            }\n        }\n        return end_crc(crc);\n    }\n    growAtoms(atoms) {\n        let mask = Vec.booleanArray(false, this.meta.mol.numAtoms);\n        for (let n = 0; n < atoms.length; n++) {\n            mask[atoms[n] - 1] = true;\n            for (let a of this.atomAdj[atoms[n] - 1])\n                mask[a - 1] = true;\n        }\n        return Vec.add(Vec.maskIdx(mask), 1);\n    }\n    applyNewFP(newFP) {\n        if (this.hookConsiderNewFP)\n            this.hookConsiderNewFP(newFP);\n        if (this.hookApplyNewFP)\n            this.hookApplyNewFP(newFP);\n        this.fplist.push(newFP);\n    }\n    considerNewFP(newFP) {\n        if (this.hookConsiderNewFP)\n            this.hookConsiderNewFP(newFP);\n        let hit = -1;\n        let fp = null;\n        for (let n = 0; n < this.fplist.length; n++) {\n            let lookFP = this.fplist[n];\n            if (Vec.equals(lookFP.atoms, newFP.atoms)) {\n                fp = lookFP;\n                hit = n;\n                break;\n            }\n        }\n        if (hit < 0) {\n            this.fplist.push(newFP);\n            return;\n        }\n        if (fp.iteration < newFP.iteration || fp.hashCode < newFP.hashCode)\n            return;\n        this.fplist[hit] = newFP;\n        if (this.hookApplyNewFP)\n            this.hookApplyNewFP(newFP);\n    }\n}\nCircularFingerprints.CLASS_ECFP0 = 0;\nCircularFingerprints.CLASS_ECFP2 = 1;\nCircularFingerprints.CLASS_ECFP4 = 2;\nCircularFingerprints.CLASS_ECFP6 = 3;\nexport { CircularFingerprints };\n//# sourceMappingURL=CircularFingerprints.js.map","import { deepClone, findNode, findNodes, nodeText } from '../util/util';\nimport { XML } from '../util/XML';\nimport { DataSheet } from '../ds/DataSheet';\nimport { Molecule } from '../mol/Molecule';\nimport { MoleculeStream } from './MoleculeStream';\nexport class DataSheetStream {\n    static readXML(strXML) {\n        let xmlDoc;\n        if (XML.customParser)\n            xmlDoc = new XML.customParser().parseFromString(strXML, 'application/xml');\n        else\n            xmlDoc = new DOMParser().parseFromString(strXML, 'application/xml');\n        if (xmlDoc == null)\n            return null;\n        let root = xmlDoc.documentElement;\n        if (root == null)\n            return null;\n        let ds = new DataSheet();\n        let summary = findNode(root, 'Summary');\n        if (summary == null)\n            return null;\n        ds.title = nodeText(findNode(summary, 'Title'));\n        ds.description = nodeText(findNode(summary, 'Description'));\n        let extRoot = findNode(root, 'Extension');\n        if (extRoot != null) {\n            let extList = findNodes(extRoot, 'Ext');\n            for (let n = 0; n < extList.length; n++) {\n                let ext = extList[n];\n                ds.appendExtension(ext.getAttribute('name'), ext.getAttribute('type'), nodeText(ext));\n            }\n        }\n        let header = findNode(root, 'Header');\n        let numCols = parseInt(header.getAttribute('ncols'));\n        let colList = findNodes(header, 'Column');\n        if (colList.length != numCols)\n            return null;\n        for (let n = 0; n < numCols; n++) {\n            let col = colList[n];\n            let id = parseInt(col.getAttribute('id'));\n            if (id != n + 1)\n                return null;\n            ds.appendColumn(col.getAttribute('name'), col.getAttribute('type'), nodeText(col));\n        }\n        let rowidx = 0;\n        for (let row of findNodes(findNode(root, 'Content'), 'Row')) {\n            if (parseInt(row.getAttribute('id')) != rowidx + 1)\n                return null;\n            ds.appendRow();\n            for (let col of findNodes(row, 'Cell')) {\n                let colidx = parseInt(col.getAttribute('id')) - 1;\n                let ct = ds.colType(colidx), val = nodeText(col);\n                if (val == '') { }\n                else if (ct == \"molecule\")\n                    ds.setObject(rowidx, colidx, val);\n                else if (ct == \"string\")\n                    ds.setString(rowidx, colidx, val);\n                else if (ct == \"real\")\n                    ds.setReal(rowidx, colidx, parseFloat(val));\n                else if (ct == \"integer\")\n                    ds.setInteger(rowidx, colidx, parseInt(val));\n                else if (ct == \"boolean\")\n                    ds.setBoolean(rowidx, colidx, val == 'true' ? true : val == 'false' ? false : null);\n                else if (ct == \"extend\")\n                    ds.setExtend(rowidx, colidx, val);\n                col = col.nextElementSibling;\n                colidx++;\n            }\n            row = row.nextElementSibling;\n            rowidx++;\n        }\n        return ds;\n    }\n    static readJSON(json) {\n        if (!json.colData || !json.rowData)\n            throw 'Not a JSON-formatted datasheet.';\n        return new DataSheet(deepClone(json));\n    }\n    static writeXML(ds) {\n        let xml;\n        if (XML.customParser)\n            xml = new XML.customParser().parseFromString('<DataSheet/>', 'application/xml');\n        else\n            xml = new DOMParser().parseFromString('<DataSheet/>', 'application/xml');\n        let summary = xml.createElement('Summary');\n        xml.documentElement.appendChild(summary);\n        let title = xml.createElement('Title'), descr = xml.createElement('Description');\n        summary.appendChild(title);\n        title.appendChild(xml.createTextNode(ds.title));\n        summary.appendChild(descr);\n        descr.appendChild(xml.createCDATASection(ds.description));\n        let extension = xml.createElement('Extension');\n        xml.documentElement.appendChild(extension);\n        for (let n = 0; n < ds.numExtensions; n++) {\n            let ext = xml.createElement('Ext');\n            extension.appendChild(ext);\n            ext.setAttribute('name', ds.getExtName(n));\n            ext.setAttribute('type', ds.getExtType(n));\n            ext.appendChild(xml.createCDATASection(ds.getExtData(n)));\n        }\n        let header = xml.createElement('Header');\n        xml.documentElement.appendChild(header);\n        header.setAttribute('nrows', ds.numRows.toString());\n        header.setAttribute('ncols', ds.numCols.toString());\n        for (let n = 0; n < ds.numCols; n++) {\n            let column = xml.createElement('Column');\n            header.appendChild(column);\n            column.setAttribute('id', (n + 1).toString());\n            column.setAttribute('name', ds.colName(n));\n            column.setAttribute('type', ds.colType(n));\n            column.appendChild(xml.createTextNode(ds.colDescr(n)));\n        }\n        let content = xml.createElement('Content');\n        xml.documentElement.appendChild(content);\n        for (let r = 0; r < ds.numRows; r++) {\n            let row = xml.createElement('Row');\n            row.setAttribute('id', (r + 1).toString());\n            content.appendChild(row);\n            for (let c = 0; c < ds.numCols; c++) {\n                let cell = xml.createElement('Cell');\n                cell.setAttribute('id', (c + 1).toString());\n                row.appendChild(cell);\n                let ct = ds.colType(c);\n                let txtNode = null;\n                if (ds.isNull(r, c)) { }\n                else if (ct == \"molecule\") {\n                    let obj = ds.getObject(r, c);\n                    if (obj instanceof Molecule)\n                        obj = MoleculeStream.writeNative(obj);\n                    txtNode = xml.createCDATASection(obj);\n                }\n                else if (ct == \"string\")\n                    txtNode = xml.createCDATASection(ds.getString(r, c));\n                else if (ct == \"real\")\n                    txtNode = xml.createTextNode(ds.getReal(r, c).toString());\n                else if (ct == \"integer\")\n                    txtNode = xml.createTextNode(ds.getInteger(r, c).toString());\n                else if (ct == \"boolean\")\n                    txtNode = xml.createTextNode(ds.getBoolean(r, c).toString());\n                else if (ct == \"extend\")\n                    txtNode = xml.createCDATASection(ds.getExtend(r, c));\n                if (txtNode != null)\n                    cell.appendChild(txtNode);\n            }\n        }\n        if (XML.customSerial)\n            return new XML.customSerial().serializeToString(xml.documentElement);\n        else\n            return new XMLSerializer().serializeToString(xml.documentElement);\n    }\n    static writeJSON(ds) {\n        let data = ds.data;\n        let nrow = ds.numRows, ncol = ds.numCols;\n        let rowData = new Array(nrow);\n        for (let n = 0; n < nrow; n++)\n            rowData[n] = new Array(ncol);\n        for (let c = 0; c < ncol; c++) {\n            let doConvert = ds.colType(c) == \"molecule\";\n            for (let r = 0; r < nrow; r++) {\n                let val = data.rowData[r][c];\n                if (val != null && doConvert)\n                    val = val.toString();\n                rowData[r][c] = val;\n            }\n        }\n        let json = {\n            title: data.title,\n            description: data.description,\n            colData: deepClone(data.colData),\n            rowData: rowData,\n            extData: deepClone(data.extData),\n        };\n        return json;\n    }\n}\n//# sourceMappingURL=DataSheetStream.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CircularFingerprints } from '../calc/CircularFingerprints';\nimport { DEGRAD, escapeHTML, norm_xy } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { DataSheetStream } from '../io/DataSheetStream';\nimport { MetaMolecule } from '../mol/MetaMolecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport dsRings from '../res/data/templates/rings.ds';\nimport dsTermGrp from '../res/data/templates/termgrp.ds';\nimport dsFuncGrp from '../res/data/templates/funcgrp.ds';\nimport dsProtGrp from '../res/data/templates/protgrp.ds';\nimport dsNonPlRings from '../res/data/templates/nonplrings.ds';\nimport dsLargeRings from '../res/data/templates/largerings.ds';\nimport dsCrownEthers from '../res/data/templates/crownethers.ds';\nimport dsLigMonodent from '../res/data/templates/ligmonodent.ds';\nimport dsLigBident from '../res/data/templates/ligbident.ds';\nimport dsLigTrident from '../res/data/templates/ligtrident.ds';\nimport dsLigMultident from '../res/data/templates/ligmultident.ds';\nimport dsCageCmplx from '../res/data/templates/cagecmplx.ds';\nimport dsAminoAcids from '../res/data/templates/aminoacids.ds';\nimport dsBiomolecules from '../res/data/templates/biomolecules.ds';\nimport dsSaccharides from '../res/data/templates/saccharides.ds';\nconst TEMPLATE_SOURCE = {\n    'rings': dsRings,\n    'termgrp': dsTermGrp,\n    'funcgrp': dsFuncGrp,\n    'protgrp': dsProtGrp,\n    'nonplrings': dsNonPlRings,\n    'largerings': dsLargeRings,\n    'crownethers': dsCrownEthers,\n    'ligmonodent': dsLigMonodent,\n    'ligbident': dsLigBident,\n    'ligtrident': dsLigTrident,\n    'ligmultident': dsLigMultident,\n    'cagecmplx': dsCageCmplx,\n    'aminoacids': dsAminoAcids,\n    'biomolecules': dsBiomolecules,\n    'saccharides': dsSaccharides,\n};\nclass AbbrevContainer {\n    constructor() {\n        this.abbrevs = [];\n    }\n    static getTemplateKeys() { return Object.keys(TEMPLATE_SOURCE); }\n    static getTemplateData(key) { return TEMPLATE_SOURCE[key]; }\n    static needsSetup() { return !this.main; }\n    static setupData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.main)\n                return;\n            this.main = new AbbrevContainer();\n            for (let key of this.getTemplateKeys()) {\n                let dsstr = this.getTemplateData(key);\n                let ds = DataSheetStream.readXML(dsstr);\n                let colMol = ds.firstColOfType(\"molecule\"), colAbbrev = ds.findColByName('Abbrev', \"string\");\n                if (colMol < 0 || colAbbrev < 0)\n                    continue;\n                for (let n = 0; n < ds.numRows; n++) {\n                    let frag = ds.getMoleculeClone(n, colMol), name = ds.getString(n, colAbbrev);\n                    if (!frag || !name)\n                        continue;\n                    let attcount = 0, firstConn = 0;\n                    for (let i = 1; i <= frag.numAtoms; i++)\n                        if (frag.atomElement(i) == MolUtil.TEMPLATE_ATTACHMENT) {\n                            if (firstConn == 0)\n                                firstConn = i;\n                            frag.setAtomElement(i, MolUtil.ABBREV_ATTACHMENT);\n                            attcount++;\n                        }\n                    if (attcount != 1)\n                        continue;\n                    if (firstConn > 1)\n                        frag.swapAtoms(1, firstConn);\n                    this.main.submitAbbreviation(name, frag);\n                }\n            }\n        });\n    }\n    getAbbrevs() {\n        return this.abbrevs.slice(0);\n    }\n    submitAbbreviation(name, infrag, promote = false) {\n        let frag = infrag.clone();\n        this.submitFragment(name, frag, promote);\n    }\n    submitMolecule(inmol, promote = false) {\n        let mol = inmol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let frag = MolUtil.getAbbrev(mol, n);\n            if (!frag)\n                continue;\n            this.submitFragment(mol.atomElement(n), frag, promote);\n        }\n    }\n    substituteAbbrevName(mol, atom) {\n        let frag = MolUtil.getAbbrev(mol, atom);\n        if (!frag)\n            return false;\n        let fragExp = MolUtil.expandedAbbrevs(frag);\n        let fragMF = MolUtil.molecularFormula(fragExp);\n        let fragFP = CircularFingerprints.create(MetaMolecule.createStrictRubric(fragExp), CircularFingerprints.CLASS_ECFP6).getUniqueHashes();\n        for (let abbrev of this.abbrevs)\n            if (abbrev.frag.numAtoms == frag.numAtoms) {\n                let match = CoordUtil.sketchEquivalent(frag, abbrev.frag);\n                if (!match) {\n                    let afragExp = MolUtil.expandedAbbrevs(abbrev.frag);\n                    if (fragMF == MolUtil.molecularFormula(afragExp)) {\n                        let afragFP = CircularFingerprints.create(MetaMolecule.createStrictRubric(afragExp), CircularFingerprints.CLASS_ECFP6).getUniqueHashes();\n                        if (Vec.equals(fragFP, afragFP))\n                            match = true;\n                    }\n                }\n                if (match) {\n                    mol.setAtomElement(atom, abbrev.name);\n                    return true;\n                }\n            }\n        return false;\n    }\n    submitFragment(name, frag, promote) {\n        if (name == '?')\n            return;\n        let vx = 0, vy = 0;\n        let adj = frag.atomAdjList(1);\n        for (let a of adj) {\n            vx += frag.atomX(a) - frag.atomX(1);\n            vy += frag.atomY(a) - frag.atomY(1);\n        }\n        if (adj.length > 1) {\n            let inv = 1.0 / adj.length;\n            vx *= inv;\n            vy *= inv;\n        }\n        if (norm_xy(vx, vy) > 0.1 * 0.1) {\n            let theta = Math.atan2(vy, vx);\n            if (Math.abs(theta) > 2 * DEGRAD)\n                CoordUtil.rotateMolecule(frag, -theta);\n        }\n        let hit = -1;\n        for (let n = 0; n < this.abbrevs.length; n++) {\n            let a = this.abbrevs[n];\n            if (a.name != name)\n                continue;\n            hit = n;\n            break;\n        }\n        let [html, search] = this.formatAbbrevLabel(name);\n        let abv = { name, frag, nameHTML: html, nameSearch: search };\n        if (hit < 0) {\n            if (promote)\n                this.abbrevs.unshift(abv);\n            else\n                this.abbrevs.push(abv);\n        }\n        else {\n            if (promote && hit > 0) {\n                this.abbrevs.splice(hit, 1);\n                this.abbrevs.unshift(abv);\n            }\n            else\n                this.abbrevs[hit] = abv;\n        }\n    }\n    formatAbbrevLabel(name) {\n        let html = '', search = '';\n        let append = (bit, tag) => {\n            if (tag)\n                html += '<' + tag + '>';\n            html += escapeHTML(bit);\n            search += bit;\n            if (tag)\n                html += '</' + tag + '>';\n        };\n        for (let bit of name.split('|')) {\n            while (true) {\n                let match = bit.match(/^(.*?)\\{(.*?)\\}(.*)$/);\n                if (!match)\n                    break;\n                let pre = match[1], mid = match[2], post = match[3];\n                append(pre, null);\n                if (mid.startsWith('^'))\n                    append(mid.substring(1), 'sup');\n                else\n                    append(mid, 'sub');\n                bit = post;\n            }\n            append(bit, null);\n        }\n        return [html, search.toLowerCase()];\n    }\n}\nAbbrevContainer.main = null;\nexport { AbbrevContainer };\n//# sourceMappingURL=AbbrevContainer.js.map","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Small Rings</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"24\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template Name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation Code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,3)\\nC=1.7500,-6.1500;0,0,i2\\nC=2.5000,-7.4490;0,0,i2\\nC=1.0000,-7.4490;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclopropane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,4)\\nC=3.6500,-0.9500;0,0,i2\\nC=3.6500,-2.4500;0,0,i2\\nC=5.1500,-2.4500;0,0,i2\\nC=5.1500,-0.9500;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclobutane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=0.7500,2.3100;0,0,i2\\nC=-0.4600,1.4300;0,0,i2\\nC=0.0000,0.0000;0,0,i2\\nC=1.9600,1.4300;0,0,i2\\nC=1.5000,0.0000;0,0,i2\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclopentane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=4.3700,-7.8550;0,0,i2\\nC=3.6200,-10.1650;0,0,i1\\nC=3.1600,-8.7350;0,0,i1\\nC=5.5800,-8.7350;0,0,i1\\nC=5.1200,-10.1650;0,0,i1\\n2-3=2,0\\n3-1=1,0\\n1-4=1,0\\n4-5=2,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclopentadiene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=3.9490,-2.3000;0,0,i2\\nC=2.6500,-3.0500;0,0,i2\\nC=2.6500,-4.5500;0,0,i2\\nC=3.9490,-5.3000;0,0,i2\\nC=5.2481,-4.5500;0,0,i2\\nC=5.2481,-3.0500;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclohexane1]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[Cy]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=1.5000,-3.6500;0,0,i2\\nC=2.7990,-3.2500;0,0,i2\\nC=2.2500,-2.3510;0,0,i2\\nC=4.0981,-4.0000;0,0,i2\\nC=3.5490,-3.1010;0,0,i2\\nC=4.8481,-2.3510;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclohexane2]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=-0.2500,-2.1490;0,0,i2\\nC=0.6000,-1.2500;0,0,i2\\nC=2.1500,-1.2500;0,0,i2\\nC=3.0000,-2.1490;0,0,i2\\nC=2.2500,-0.4990;0,0,i2\\nC=0.4500,-0.4990;0,0,i2\\n1-2=1,0\\n3-2=1,0\\n3-4=1,0\\n4-5=1,0\\n1-6=1,0\\n6-5=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclohexane3]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=6.1000,0.2500;0,0,i1\\nC=4.8010,-0.5000;0,0,i1\\nC=7.3990,-0.5000;0,0,i1\\nC=4.8010,-2.0000;0,0,i1\\nC=6.1000,-2.7500;0,0,i1\\nC=7.3990,-2.0000;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[benzene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[Ph]]></Cell>\\n  </Row>\\n  <Row id=\\\"9\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nC=0.7400,3.2800;0,0,i2\\nC=0.0000,0.0000;0,0,i2\\nC=-0.9400,1.1700;0,0,i2\\nC=-0.6100,2.6300;0,0,i2\\nC=2.0900,2.6300;0,0,i2\\nC=2.4200,1.1700;0,0,i2\\nC=1.4800,0.0000;0,0,i2\\n3-2=1,0\\n3-4=1,0\\n4-1=1,0\\n5-1=1,0\\n5-6=1,0\\n6-7=1,0\\n7-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cycloheptane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"10\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nC=0.0000,3.6200;0,0,i2\\nC=0.0000,0.0000;0,0,i2\\nC=-1.0600,1.0600;0,0,i2\\nC=-1.0600,2.5600;0,0,i2\\nC=1.5000,3.6200;0,0,i2\\nC=2.5600,2.5600;0,0,i2\\nC=2.5600,1.0600;0,0,i2\\nC=1.5000,0.0000;0,0,i2\\n2-3=1,0\\n3-4=1,0\\n4-1=1,0\\n1-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclooctane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"11\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nC=1.2510,-1.4500;0,0,i1\\nC=-0.0481,-2.2000;0,0,i1\\nC=2.5500,-2.2000;0,0,i0\\nC=-0.0481,-3.7000;0,0,i1\\nC=1.2510,-4.4500;0,0,i1\\nC=2.5500,-3.7000;0,0,i0\\nC=3.9713,-1.7306;0,0,i2\\nC=4.8537,-2.9389;0,0,i2\\nC=3.9779,-4.1593;0,0,i2\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-6=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[dihydroindene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"12\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,11)\\nC=2.5990,-2.5500;0,0,i1\\nC=1.3000,-3.3000;0,0,i1\\nC=1.3000,-4.8000;0,0,i1\\nC=2.5990,-5.5500;0,0,i1\\nC=3.8981,-4.8000;0,0,i0\\nC=3.8981,-3.3000;0,0,i0\\nC=5.1971,-2.5500;0,0,i1\\nC=5.1971,-5.5500;0,0,i1\\nC=6.4962,-4.8000;0,0,i1\\nC=6.4962,-3.3000;0,0,i1\\n2-3=2,0\\n2-1=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=2,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[napthalene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"13\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,15)\\nC=-0.1824,-4.7254;0,0,i1\\nC=-1.2065,-5.8214;0,0,i1\\nC=1.2788,-5.0643;0,0,i0\\nC=-0.7693,-7.2563;0,0,i1\\nC=0.6919,-7.5952;0,0,i1\\nC=1.7160,-6.4992;0,0,i0\\nC=2.5017,-4.2011;0,0,i2\\nC=3.6979,-5.0997;0,0,i0\\nC=3.2158,-6.5224;0,0,i0\\nC=5.1689,-4.8063;0,0,i1\\nC=6.1585,-5.9336;0,0,i1\\nC=4.2061,-7.6477;0,0,i1\\nC=5.6772,-7.3542;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-6=1,0\\n10-11=1,0\\n10-8=2,0\\n9-12=2,0\\n12-13=1,0\\n13-11=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[fluoroscene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"14\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,16)\\nC=2.5990,-2.5500;0,0,i1\\nC=1.3000,-3.3000;0,0,i1\\nC=1.3000,-4.8000;0,0,i1\\nC=2.5990,-5.5500;0,0,i1\\nC=3.8981,-4.8000;0,0,i0\\nC=3.8981,-3.3000;0,0,i0\\nC=5.1971,-2.5500;0,0,i1\\nC=5.1971,-5.5500;0,0,i1\\nC=6.4962,-4.8000;0,0,i0\\nC=6.4962,-3.3000;0,0,i0\\nC=7.7952,-2.5500;0,0,i1\\nC=7.7952,-5.5500;0,0,i1\\nC=9.0943,-4.8000;0,0,i1\\nC=9.0943,-3.3000;0,0,i1\\n2-3=1,0\\n2-1=2,0\\n3-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-1=1,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n10-11=1,0\\n9-12=1,0\\n12-13=2,0\\n13-14=1,0\\n14-11=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[anthracene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"15\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,16)\\nC=5.4911,-0.2789;0,0,i1\\nC=4.7411,-1.5780;0,0,i1\\nC=6.9910,-0.2789;0,0,i1\\nC=5.4910,-2.8770;0,0,i1\\nC=6.9911,-2.8770;0,0,i0\\nC=7.7411,-1.5780;0,0,i0\\nC=9.2410,-1.5780;0,0,i0\\nC=7.7410,-4.1760;0,0,i1\\nC=9.2411,-4.1761;0,0,i1\\nC=9.9911,-2.8770;0,0,i0\\nC=9.9910,-0.2789;0,0,i1\\nC=11.4911,-2.8770;0,0,i1\\nC=12.2411,-1.5780;0,0,i1\\nC=11.4911,-0.2790;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n7-11=1,0\\n10-12=1,0\\n12-13=2,0\\n13-14=1,0\\n14-11=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[phenanthrene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"16\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nN=3.3300,-1.7050;0,0,i1\\nC=2.5800,-4.0150;0,0,i2\\nC=2.1200,-2.5850;0,0,i2\\nC=4.5400,-2.5850;0,0,i2\\nC=4.0800,-4.0150;0,0,i2\\n2-3=1,0\\n3-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[pyrrolidine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"17\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=1.3200,-2.2350;0,0,i2\\nC=1.7800,-3.6650;0,0,i2\\nO=2.5300,-1.3550;0,0,i0\\nC=3.7400,-2.2350;0,0,i2\\nC=3.2800,-3.6650;0,0,i2\\n2-1=1,0\\n1-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[tetrahydrofuran]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"18\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=1.3200,-2.2350;0,0,i1\\nC=1.7800,-3.6650;0,0,i1\\nO=2.5300,-1.3550;0,0,i0\\nC=3.7400,-2.2350;0,0,i1\\nC=3.2800,-3.6650;0,0,i1\\n2-1=2,0\\n1-3=1,0\\n3-4=1,0\\n4-5=2,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[furan]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"19\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=1.3200,-2.2350;0,0,i1\\nC=1.7800,-3.6650;0,0,i1\\nS=2.5300,-1.3550;0,0,i0\\nC=3.7400,-2.2350;0,0,i1\\nC=3.2800,-3.6650;0,0,i1\\n2-1=2,0\\n1-3=1,0\\n3-4=1,0\\n4-5=2,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[thiofuran]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"20\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=1.6000,-3.0000;0,0,i1\\nN=2.8990,-2.2500;0,0,i0\\nC=4.1981,-3.0000;0,0,i1\\nC=1.6000,-4.5000;0,0,i1\\nC=2.8990,-5.2500;0,0,i1\\nC=4.1981,-4.5000;0,0,i1\\n2-1=1,0\\n2-3=2,0\\n1-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[pyridine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"21\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=0.7019,-2.1000;0,0,i2\\nC=0.7019,-3.6000;0,0,i2\\nO=2.0009,-1.3500;0,0,i0\\nO=2.0009,-4.3500;0,0,i0\\nC=3.3000,-3.6000;0,0,i2\\nC=3.3000,-2.1000;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[dioxane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"22\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=2.1519,-2.1000;0,0,i2\\nC=2.1519,-3.6000;0,0,i2\\nO=3.4509,-1.3500;0,0,i0\\nN=3.4509,-4.3500;0,0,i1\\nC=4.7500,-3.6000;0,0,i2\\nC=4.7500,-2.1000;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[morpholine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"23\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nN=2.6490,-2.3000;0,0,i1\\nC=1.3500,-3.0500;0,0,i2\\nC=1.3500,-4.5500;0,0,i2\\nC=2.6490,-5.3000;0,0,i2\\nC=3.9481,-4.5500;0,0,i2\\nC=3.9481,-3.0500;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[piperidine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"24\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=1.3500,-3.0500;0,0,i2\\nC=1.3500,-4.5500;0,0,i2\\nO=2.6490,-2.3000;0,0,i0\\nC=2.6490,-5.3000;0,0,i2\\nC=3.9481,-4.5500;0,0,i2\\nC=3.9481,-3.0500;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[pyran]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<DataSheet><Summary><Title>Terminal Groups</Title><Description><![CDATA[]]></Description></Summary><Extension/><Header nrows=\\\"11\\\" ncols=\\\"3\\\"><Column id=\\\"1\\\" name=\\\"Molecule\\\" type=\\\"molecule\\\">Molecular structure</Column><Column id=\\\"2\\\" name=\\\"Name\\\" type=\\\"string\\\">Template name</Column><Column id=\\\"3\\\" name=\\\"Abbrev\\\" type=\\\"string\\\">Optional abbreviation</Column></Header><Content><Row id=\\\"1\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-0.6500,-1.4000;0,0,i0\\nC=0.6490,-0.6500;0,0,i2\\nC=1.9481,-1.4000;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[ethyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Et]]></Cell></Row><Row id=\\\"2\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-5.1000,3.4000;0,0,i2\\nC=-3.8010,4.1500;0,0,i2\\nC=-2.5019,3.4000;0,0,i3\\nX=-6.3990,4.1500;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[n-propyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Pr]]></Cell></Row><Row id=\\\"3\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-4.9450,2.0214;0,0,i1\\nC=-4.1950,3.3204;0,0,i3\\nC=-4.1950,0.7224;0,0,i3\\nX=-6.4450,2.0214;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[i-propyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[{^i}Pr]]></Cell></Row><Row id=\\\"4\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=-4.6500,2.9000;0,0,i2\\nC=-3.3510,3.6500;0,0,i2\\nC=-2.0519,2.9000;0,0,i2\\nC=-0.7529,3.6500;0,0,i3\\nX=-5.9490,3.6500;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[n-butyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Bu]]></Cell></Row><Row id=\\\"5\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=-3.2000,0.9000;0,0,i0\\nC=-3.2000,2.4000;0,0,i3\\nC=-3.2000,-0.6000;0,0,i3\\nC=-1.7000,0.9000;0,0,i3\\nX=-4.7000,0.9000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[t-butyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[{^t}Bu]]></Cell></Row><Row id=\\\"6\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-7.4188,-4.7944;0,0,i0\\nO=-6.1198,-4.0444;0,0,i0\\nC=-4.8207,-4.7944;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[methoxy]]></Cell><Cell id=\\\"3\\\"><![CDATA[O|Me]]></Cell></Row><Row id=\\\"7\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nX=-7.4188,-4.7944;0,0,i0\\nO=-6.1198,-4.0444;0,0,i0\\nC=-4.8207,-4.7944;0,0,i2\\nC=-3.5217,-4.0444;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[ethoxy]]></Cell><Cell id=\\\"3\\\"><![CDATA[O|Et]]></Cell></Row><Row id=\\\"8\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nX=-6.5500,1.6000;0,0,i0\\nC=-5.0500,1.6000;0,0,i0\\nC=-4.3000,2.8990;0,0,i1\\nC=-2.8000,2.8990;0,0,i1\\nC=-4.3000,0.3010;0,0,i1\\nC=-2.8000,0.3010;0,0,i1\\nC=-2.0500,1.6000;0,0,i1\\n1-2=1,0\\n3-2=1,0\\n3-4=2,0\\n2-5=2,0\\n5-6=1,0\\n6-7=2,0\\n7-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[phenyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Ph]]></Cell></Row><Row id=\\\"9\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nX=-6.5500,1.6000;0,0,i0\\nC=-5.0500,1.6000;0,0,i1\\nC=-4.3000,2.8990;0,0,i2\\nC=-2.8000,2.8990;0,0,i2\\nC=-4.3000,0.3010;0,0,i2\\nC=-2.8000,0.3010;0,0,i2\\nC=-2.0500,1.6000;0,0,i2\\n1-2=1,0\\n3-2=1,0\\n3-4=1,0\\n2-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[cyclopentyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Cy]]></Cell></Row><Row id=\\\"10\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nX=0.0500,2.9500;0,0,i0\\nC=1.3490,3.7000;0,0,i2\\nC=2.6481,2.9500;0,0,i0\\nC=2.6481,1.4500;0,0,i1\\nC=3.9471,3.7000;0,0,i1\\nC=3.9471,0.7000;0,0,i1\\nC=5.2461,1.4500;0,0,i1\\nC=5.2461,2.9500;0,0,i1\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n3-5=2,0\\n4-6=2,0\\n6-7=1,0\\n7-8=2,0\\n8-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[benzyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Bz]]></Cell></Row><Row id=\\\"11\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,10)\\nX=-1.6000,1.6571;0,0,i0\\nC=-0.1000,1.6571;0,0,i0\\nC=0.6500,0.3581;0,0,i0\\nC=0.6500,2.9561;0,0,i0\\nC=2.1500,0.3581;0,0,i1\\nC=2.9000,1.6571;0,0,i0\\nC=2.1500,2.9561;0,0,i1\\nC=-0.1000,4.2551;0,0,i3\\nC=4.4000,1.6571;0,0,i3\\nC=-0.1000,-0.9409;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n2-4=2,0\\n3-5=2,0\\n5-6=1,0\\n6-7=2,0\\n7-4=1,0\\n4-8=1,0\\n6-9=1,0\\n3-10=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[mesityl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Mes]]></Cell></Row></Content></DataSheet>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Functional Groups</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"18\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nN=-6.6000,4.4000;1,0,i0\\nO=-5.8500,5.6990;0,0,i0\\nO=-5.8500,3.1010;-1,0,i0\\nX=-8.1000,4.4000;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[nitro]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[N|O{2}]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nO=-7.0500,1.9510;0,0,i1\\nX=-9.3000,3.2500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[carboxyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O{2}|H]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nO=-7.0500,1.9510;0,0,i0\\nX=-9.3000,3.2500;0,0,i0\\nC=-5.5500,1.9510;0,0,i3\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[methyl carboxylate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O{2}|Me]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nO=-7.0500,1.9510;0,0,i0\\nX=-9.3000,3.2500;0,0,i0\\nC=-5.5500,1.9510;0,0,i2\\nC=-4.8000,0.6520;0,0,i3\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n5-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ethyl carboxylate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O{2}|Et]]></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nN=-7.0500,1.9510;0,0,i2\\nX=-9.3000,3.2500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[amide]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O|NH{2}]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nC=-7.0500,1.9510;0,0,i3\\nX=-9.3000,3.2500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ac]]></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nO=-8.0010,2.5000;0,0,i0\\nC=-6.7019,3.2500;0,0,i0\\nX=-9.3000,3.2500;0,0,i0\\nC=-5.4029,2.5000;0,0,i3\\nO=-6.7019,4.7500;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n2-5=2,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetoxy]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[O|Ac]]></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-5.9500,5.0500;0,0,i0\\nC=-4.4500,5.0500;0,0,i0\\nN=-2.9500,5.0500;0,0,i0\\n1-2=1,0\\n2-3=3,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyano]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|N]]></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=0.0000,0.0000;0,0,i0\\nF=0.0000,1.5000;0,0,i0\\nF=-0.0000,-1.5000;0,0,i0\\nF=1.5000,-0.0000;0,0,i0\\nX=-1.5000,0.0000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[trifluoromethyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|F{3}]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nO=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nF=3.0000,0.0000;0,0,i0\\nF=1.5000,-1.5000;0,0,i0\\nF=1.5000,1.5000;0,0,i0\\nX=-0.7500,1.2990;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n2-4=1,0\\n2-5=1,0\\n1-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[trifluoromethoxy]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[O|CF{3}]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nP=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i1\\nO=0.2500,0.8500;0,0,i1\\nX=-2.7500,0.8500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phosphoric]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[P|O{3}|H{2}]]></Cell>\\n</Row>\\n<Row id=\\\"12\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nO=-2.7500,0.8500;0,0,i0\\nP=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i1\\nO=0.2500,0.8500;0,0,i1\\nX=-3.5000,2.1490;0,0,i0\\n2-3=2,0\\n2-4=1,0\\n2-5=1,0\\n2-1=1,0\\n1-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phosphoric]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[P|O{4}|H{2}]]></Cell>\\n</Row>\\n<Row id=\\\"13\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nS=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i0\\nX=-2.7500,0.8500;0,0,i0\\n1-2=2,0\\n1-3=2,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[sulphonyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[S|O{2}|H]]></Cell>\\n</Row>\\n<Row id=\\\"14\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nS=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i0\\nO=0.2500,0.8500;0,0,i1\\nX=-2.7500,0.8500;0,0,i0\\n1-2=2,0\\n1-3=2,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[sulphonic]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[S|O{3}|H]]></Cell>\\n</Row>\\n<Row id=\\\"15\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nO=-2.7500,0.8500;0,0,i0\\nS=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i0\\nO=0.2500,0.8500;0,0,i1\\nX=-3.5000,2.1490;0,0,i0\\n2-3=2,0\\n2-4=2,0\\n2-5=1,0\\n2-1=1,0\\n1-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[sulphonic]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[S|O{4}|H]]></Cell>\\n</Row>\\n<Row id=\\\"16\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nX=0.0000,0.0000;0,0,i0\\nSi=1.5000,0.0000;0,0,i0\\nC=3.0000,0.0000;0,0,i3\\nC=1.5000,-1.5000;0,0,i3\\nC=1.5000,1.5000;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n2-4=1,0\\n2-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[trimethylsilane]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[TMS]]></Cell>\\n</Row>\\n<Row id=\\\"17\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,22)\\nC=5.6600,-2.2950;0,0,i1\\nC=4.6100,-3.9050;0,0,i1\\nC=4.1500,-2.6750;0,0,i1\\nC=7.1700,-2.6750;0,0,i1\\nC=6.7100,-3.9050;0,0,i1\\nC=5.6300,-0.5870;0,0,i1\\nC=4.5800,0.7230;0,0,i1\\nC=4.1200,-0.2070;0,0,i0\\nC=7.1400,-0.2070;0,0,i1\\nC=6.6800,0.7230;0,0,i1\\nFe=5.6700,-1.6610;0,0,i0\\nX=2.6200,-0.2137;0,0,i0\\n2-3=2,0\\n3-1=1,0\\n1-4=1,0\\n4-5=2,0\\n5-2=1,0\\n7-8=2,0\\n8-6=1,0\\n6-9=1,0\\n9-10=2,0\\n10-7=1,0\\n11-6=1,0\\n11-1=1,0\\n3-11=0,0\\n4-11=0,0\\n2-11=0,0\\n5-11=0,0\\n8-11=0,0\\n9-11=0,0\\n10-11=0,0\\n7-11=0,0\\n9-9=1,0\\n8-12=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ferrocenyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Fc]]></Cell>\\n</Row>\\n<Row id=\\\"18\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,15)\\nX=-1.8965,0.7175;0,0,i0\\nFe=0.1000,0.7175;0,0,i0\\nC=0.3931,1.7515;0,0,i1\\nC=1.7233,2.7758;0,0,i1\\nC=1.9501,1.7633;0,0,i1\\nC=-0.9841,2.4781;0,0,i1\\nC=-0.3171,3.2728;0,0,i1\\nC=0.1000,-0.7825;0,0,e0\\nO=0.1000,-2.2825;0,0,i0\\nC=1.5289,-0.1075;0,0,e0\\nO=2.8280,-0.8575;0,0,i0\\n1-2=1,0\\n4-5=2,0\\n5-3=1,0\\n3-6=1,0\\n6-7=2,0\\n7-4=1,0\\n2-3=1,0\\n5-2=0,0\\n6-2=0,0\\n7-2=0,0\\n4-2=0,0\\n2-8=0,0\\n8-9=2,0\\n2-10=0,0\\n10-11=2,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[bis(carbonyl)cyclopentadienyl iron]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Fp]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Functional Groups</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"11\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nX=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nO=2.2500,1.2990;0,0,i0\\nO=2.2500,-1.2990;0,0,i0\\nC=3.7500,1.2990;0,0,i0\\nC=5.2500,1.2990;0,0,i3\\nC=3.7500,2.7990;0,0,i3\\nC=3.7500,-0.2010;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n2-4=2,0\\n3-5=1,0\\n5-6=1,0\\n5-7=1,0\\n5-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Boc]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,11)\\nS=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nO=-0.0000,1.5000;0,0,i0\\nO=0.0000,-1.5000;0,0,i0\\nC=2.2500,-1.2990;0,0,i1\\nC=3.7500,-1.2990;0,0,i1\\nC=4.5000,-0.0000;0,0,i0\\nC=3.7500,1.2990;0,0,i1\\nC=2.2500,1.2990;0,0,i1\\nC=6.0000,-0.0000;0,0,i3\\n1-2=1,0\\n1-3=1,0\\n1-4=2,0\\n1-5=2,0\\n2-6=2,0\\n6-7=1,0\\n7-8=2,0\\n8-9=1,0\\n9-10=2,0\\n10-2=1,0\\n8-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Tos]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nS=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nO=-0.0000,1.5000;0,0,i0\\nO=0.0000,-1.5000;0,0,i0\\nF=3.0000,-0.0000;0,0,i0\\nF=1.5000,1.5000;0,0,i0\\nF=1.5000,-1.5000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=2,0\\n1-5=2,0\\n2-6=1,0\\n2-7=1,0\\n2-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Tf]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nSi=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nPh=-0.0000,1.5000;0,0,i0,aSketchEl!(7\\\\002C7)\\\\000A*\\\\003D-6.5500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-5.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.3000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-4.3000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci1\\\\000A1-2\\\\003D1\\\\002C0\\\\000A3-2\\\\003D1\\\\002C0\\\\000A3-4\\\\003D2\\\\002C0\\\\000A2-5\\\\003D2\\\\002C0\\\\000A5-6\\\\003D1\\\\002C0\\\\000A6-7\\\\003D2\\\\002C0\\\\000A7-4\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\nPh=0.0000,-1.5000;0,0,i0,aSketchEl!(7\\\\002C7)\\\\000A*\\\\003D-6.5500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-5.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.3000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-4.3000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci1\\\\000A1-2\\\\003D1\\\\002C0\\\\000A3-2\\\\003D1\\\\002C0\\\\000A3-4\\\\003D2\\\\002C0\\\\000A2-5\\\\003D2\\\\002C0\\\\000A5-6\\\\003D1\\\\002C0\\\\000A6-7\\\\003D2\\\\002C0\\\\000A7-4\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\nC=3.0000,-0.0000;0,0,i3\\nC=1.5000,1.5000;0,0,i3\\nC=1.5000,-1.5000;0,0,i3\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n2-6=1,0\\n2-7=1,0\\n2-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[TBDPS]]></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nSi=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nC=-0.0000,1.5000;0,0,i3\\nC=0.0000,-1.5000;0,0,i3\\nC=3.0000,-0.0000;0,0,i3\\nC=1.5000,1.5000;0,0,i3\\nC=1.5000,-1.5000;0,0,i3\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n2-6=1,0\\n2-7=1,0\\n2-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[TBDMS]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nX=1.0000,0.0000;0,0,i0\\nO=1.8817,-1.2135;0,0,i0\\nC=3.3083,-0.7500;0,0,i2\\nC=3.3083,0.7500;0,0,i2\\nO=1.8817,1.2135;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nX=0.0000,0.0000;0,0,i0\\nO=0.7500,-1.2990;0,0,i0\\nC=2.2500,-1.2990;0,0,i2\\nC=3.0000,0.0000;0,0,i2\\nC=2.2500,1.2990;0,0,i2\\nO=0.7500,1.2990;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[1,3-dioxane]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nX=0.0000,0.0000;0,0,i0\\nS=0.7500,-1.2990;0,0,i0\\nC=2.2500,-1.2990;0,0,i2\\nC=3.0000,0.0000;0,0,i2\\nC=2.2500,1.2990;0,0,i2\\nS=0.7500,1.2990;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[1,3-dithiane]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,6)\\nX=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nO=2.2500,1.2990;0,0,i0\\nC=2.2500,-1.2990;0,0,i0\\nC=3.0000,-2.5981;0,0,i3\\nC=3.5490,-0.5490;0,0,i3\\nC=0.9510,-2.0490;0,0,i3\\n1-2=1,0\\n2-3=2,0\\n2-4=1,0\\n4-5=1,0\\n4-6=1,0\\n4-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Piv]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,11)\\nC=8.5563,4.7294;0,0,i1\\nC=9.8554,3.9794;0,0,i1\\nC=9.8554,2.4794;0,0,i1\\nC=8.5563,1.7294;0,0,i1\\nC=7.2573,2.4794;0,0,i1\\nC=7.2573,3.9794;0,0,i0\\nC=5.9582,4.7294;0,0,i2\\nO=4.6592,3.9794;0,0,i0\\nC=3.3602,4.7294;0,0,i0\\nX=2.0611,3.9794;0,0,i0\\nO=3.3602,6.2294;0,0,i0\\n1-2=2,0\\n2-3=1,0\\n3-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-1=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n9-11=2,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cbz]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,20)\\nC=7.2573,3.9794;0,0,i1\\nC=5.9582,4.7294;0,0,i2\\nO=4.6592,3.9794;0,0,i0\\nC=3.3602,4.7294;0,0,i0\\nX=2.0611,3.9794;0,0,i0\\nO=3.3602,6.2294;0,0,i0\\nC=7.4141,2.4876;0,0,i0\\nC=8.8814,2.1758;0,0,i0\\nC=9.6313,3.4748;0,0,i0\\nC=8.6276,4.5895;0,0,i0\\nC=11.0985,3.7867;0,0,i1\\nC=11.5620,5.2133;0,0,i1\\nC=10.5583,6.3280;0,0,i1\\nC=9.0911,6.0161;0,0,i1\\nC=6.4105,1.3729;0,0,i1\\nC=6.8740,-0.0537;0,0,i1\\nC=8.3412,-0.3655;0,0,i1\\nC=9.3449,0.7492;0,0,i1\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n4-6=2,0\\n1-7=1,0\\n7-8=2,0\\n8-9=1,0\\n9-10=2,0\\n10-1=1,0\\n9-11=1,0\\n11-12=2,0\\n12-13=1,0\\n13-14=2,0\\n14-10=1,0\\n7-15=1,0\\n15-16=2,0\\n16-17=1,0\\n17-18=2,0\\n18-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[FMOC]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Non-planar Rings</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"12\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,7)\\nC=-6.0428,5.1152;0,0,i1\\nC=-5.8360,7.2412;0,0,i2\\nC=-4.9821,6.1759;0,0,i1\\nC=-3.5332,5.7877;0,0,i2\\nC=-4.3230,4.4890;0,0,i2\\nC=-7.3398,5.1300;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-5=1,0\\n5-4=1,0\\n1-6=1,0\\n3-6=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[5-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,8)\\nC=-6.1000,5.0000;0,0,i2\\nC=-4.8010,5.7500;0,0,i1\\nC=-6.1000,3.5000;0,0,i2\\nC=-4.8010,4.2500;0,0,i1\\nC=-3.5019,5.0000;0,0,i2\\nC=-3.5019,3.5000;0,0,i2\\nC=-4.0510,6.8490;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n6-5=1,0\\n4-7=1,0\\n2-7=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[6-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,9)\\nC=-6.1000,5.0000;0,0,i2\\nC=-4.8010,5.7500;0,0,i1\\nC=-6.1000,3.5000;0,0,i2\\nC=-4.8010,4.2500;0,0,i1\\nC=-3.5019,5.0000;0,0,i2\\nC=-3.5019,3.5000;0,0,i2\\nC=-4.5010,6.7990;0,0,i2\\nC=-3.8510,5.7490;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n6-5=1,0\\n2-7=1,0\\n4-8=1,0\\n7-8=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[6-bridge-2]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,9)\\nC=-6.1177,3.0660;0,0,i2\\nC=-5.3677,4.3650;0,0,i1\\nC=-5.3677,1.7670;0,0,i2\\nC=-4.6177,3.0660;0,0,i1\\nC=-3.4177,4.2651;0,0,i2\\nC=-3.6177,3.0660;0,0,i2\\nC=-5.2677,5.6918;0,0,i2\\nC=-2.3186,2.3160;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n4-7=1,0\\n2-7=1,0\\n6-8=1,0\\n8-5=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[7-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nC=-6.1177,3.0660;0,0,i2\\nC=-5.3677,4.3650;0,0,i1\\nC=-5.3677,1.7670;0,0,i2\\nC=-4.6177,3.0660;0,0,i1\\nC=-3.4177,4.2651;0,0,i2\\nC=-3.6177,3.0660;0,0,i2\\nC=-5.6177,5.8418;0,0,i2\\nC=-2.3186,2.3160;0,0,i2\\nC=-4.9000,5.5000;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n2-7=1,0\\n6-8=1,0\\n8-5=1,0\\n4-9=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[7-bridge-2]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nC=-2.7481,2.7510;0,0,i2\\nC=-1.4491,3.1510;0,0,i2\\nC=-1.9981,4.0500;0,0,i2\\nC=-0.1500,2.4010;0,0,i1\\nC=-0.6991,3.3000;0,0,i1\\nC=0.6000,4.0500;0,0,i2\\nC=-0.4491,1.1500;0,0,i2\\nC=0.3078,0.9726;0,0,i2\\nC=-1.1922,-0.1265;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n5-7=1,0\\n4-8=1,0\\n8-9=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[6-bridge-3]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,11)\\nC=-2.8297,-3.0097;0,0,i2\\nC=-2.5266,-1.6847;0,0,i2\\nC=-3.5797,-1.7107;0,0,i2\\nC=-1.2275,-0.9347;0,0,i1\\nC=-2.2806,-0.9607;0,0,i1\\nC=-2.2806,0.5394;0,0,i2\\nC=-0.2937,-1.8192;0,0,i2\\nC=0.4384,-1.1524;0,0,i2\\nC=0.4402,-3.1010;0,0,i2\\nC=1.1902,-1.8019;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n5-7=1,0\\n4-8=1,0\\n7-9=1,0\\n9-10=1,0\\n10-8=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[7-bridge-3]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,11)\\nC=-5.9491,0.8000;0,0,i2\\nC=-7.2481,0.0500;0,0,i2\\nC=-7.2481,-1.4500;0,0,i2\\nC=-5.9491,-2.2000;0,0,i2\\nC=-4.6500,-1.4500;0,0,i1\\nC=-4.6500,0.0500;0,0,i1\\nC=-3.2287,0.5194;0,0,i2\\nC=-2.3463,-0.6889;0,0,i2\\nC=-3.2221,-1.9093;0,0,i2\\nC=-3.9000,1.3490;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-5=1,0\\n6-10=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[9-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"9\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,12)\\nC=-4.9010,5.1000;0,0,i2\\nC=-6.2000,4.3500;0,0,i2\\nC=-6.2000,2.8500;0,0,i2\\nC=-4.9010,2.1000;0,0,i2\\nC=-3.6019,2.8500;0,0,i1\\nC=-3.6019,4.3500;0,0,i1\\nC=-2.3029,5.1000;0,0,i2\\nC=-2.3029,2.1000;0,0,i2\\nC=-1.0038,2.8500;0,0,i2\\nC=-1.0038,4.3500;0,0,i2\\nC=-2.8519,5.6490;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n6-7=1,0\\n5-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-7=1,0\\n6-11=1,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[10-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"10\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,13)\\nC=-5.1991,3.1000;0,0,i2\\nC=-6.4981,2.3500;0,0,i2\\nC=-6.4981,0.8500;0,0,i2\\nC=-5.1991,0.1000;0,0,i2\\nC=-3.9000,0.8500;0,0,i1\\nC=-3.9000,2.3500;0,0,i1\\nC=-2.7265,3.2785;0,0,i2\\nC=-2.7252,-0.0840;0,0,i2\\nC=-1.2664,2.9421;0,0,i2\\nC=-0.6227,1.5908;0,0,i2\\nC=-1.2816,0.2423;0,0,i2\\nC=-4.6500,3.6490;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n5-8=1,0\\n6-7=1,0\\n9-7=1,0\\n9-10=1,0\\n10-11=1,0\\n11-8=1,0\\n6-12=1,0\\n5-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[11-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"11\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,12)\\nC=-4.3500,3.6500;0,0,i1\\nC=-4.3500,2.1500;0,0,i1\\nC=-2.8500,2.1500;0,0,i1\\nC=-2.8500,3.6500;0,0,i1\\nC=-3.5510,4.2000;0,0,i1\\nC=-2.0510,4.2000;0,0,i1\\nC=-2.0510,2.7000;0,0,i1\\nC=-3.5510,2.7000;0,0,i1\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-4=1,0\\n1-5=1,0\\n4-6=1,0\\n3-7=1,0\\n2-8=1,0\\n8-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cubane]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"12\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,12)\\nC=-5.1000,-1.5490;0,0,i2\\nC=-3.8010,-1.1490;0,0,i1\\nC=-4.3500,-0.2500;0,0,i1\\nC=-2.5019,-1.8990;0,0,i2\\nC=-3.0510,-1.0000;0,0,i2\\nC=-1.7519,-0.2500;0,0,i1\\nC=-4.3500,1.2500;0,0,i2\\nC=-3.8010,0.3510;0,0,i2\\nC=-1.7519,1.2500;0,0,i2\\nC=-3.0510,2.0000;0,0,i1\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n3-7=1,0\\n2-8=1,0\\n6-9=1,0\\n7-10=1,0\\n9-10=1,0\\n8-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[adamantane]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Large Rings</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"11\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=2.0428,-18.6516;0,0,i2\\nC=1.7880,-17.1633;0,0,i2\\nC=2.5387,-15.8790;0,0,i2\\nC=3.1939,-19.6177;0,0,i2\\nC=4.7060,-19.6177;0,0,i2\\nC=5.8535,-18.6576;0,0,i2\\nC=6.1088,-17.1863;0,0,i2\\nC=3.9528,-15.3740;0,0,i2\\nC=5.3645,-15.8923;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n1-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n8-3=1,0\\n8-9=1,0\\n9-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-9]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,10)\\nC=-3.5491,5.1000;0,0,i2\\nC=-4.8481,4.3500;0,0,i2\\nC=-4.8481,2.8500;0,0,i2\\nC=-3.5491,2.1000;0,0,i2\\nC=-2.2500,2.8500;0,0,i2\\nC=-2.2500,4.3500;0,0,i2\\nC=-0.9509,2.1000;0,0,i2\\nC=0.3481,2.8500;0,0,i2\\nC=0.3481,4.3500;0,0,i2\\nC=-0.9509,5.1000;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n8-9=1,0\\n8-7=1,0\\n9-10=1,0\\n10-6=1,0\\n5-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-10]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,11)\\nC=-7.7858,2.5448;0,0,i2\\nC=-7.8013,1.1000;0,0,i2\\nC=-6.4244,0.8579;0,0,i2\\nC=-5.3288,-0.5811;0,0,i2\\nC=-4.3565,0.8361;0,0,i2\\nC=-2.9104,1.0882;0,0,i2\\nC=-2.8964,2.5470;0,0,i2\\nC=-4.2864,2.8806;0,0,i2\\nC=-4.6033,4.2815;0,0,i2\\nC=-6.0450,4.2766;0,0,i2\\nC=-6.3710,2.8699;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-1=1,0\\n4-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-11]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.1614,6.9975;0,0,i2\\nC=2.4604,6.2475;0,0,i2\\nC=-0.1376,6.2475;0,0,i2\\nC=-0.1376,4.7475;0,0,i2\\nC=-1.4367,3.9975;0,0,i2\\nC=-1.4367,2.4975;0,0,i2\\nC=-0.1376,1.7475;0,0,i2\\nC=1.1614,2.4975;0,0,i2\\nC=2.4604,1.7475;0,0,i2\\nC=3.7595,2.4975;0,0,i2\\nC=3.7595,3.9975;0,0,i2\\nC=2.4604,4.7475;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n12-2=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-12]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=0.2503,-1.0236;0,0,i2\\nC=1.7491,-1.0236;0,0,i2\\nC=2.0788,0.4428;0,0,i2\\nC=3.5325,0.7862;0,0,i2\\nC=3.5274,2.2829;0,0,i2\\nC=2.0508,2.6151;0,0,i2\\nC=1.7054,4.0671;0,0,i2\\nC=0.1996,4.0655;0,0,i2\\nC=-0.1373,2.6137;0,0,i2\\nC=-1.5850,2.2710;0,0,i2\\nC=-1.5640,0.7758;0,0,i2\\nC=-0.0938,0.4547;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n12-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-12]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,13)\\nC=-9.0085,1.2181;0,0,i2\\nC=-8.4085,2.6671;0,0,i2\\nC=-6.9085,2.6671;0,0,i2\\nC=-6.3085,1.2181;0,0,i2\\nC=-4.8595,0.6181;0,0,i2\\nC=-4.8595,-0.8819;0,0,i2\\nC=-6.3085,-1.4819;0,0,i2\\nC=-9.0085,-1.4819;0,0,i2\\nC=-10.4575,-0.8819;0,0,i2\\nC=-10.4575,0.6181;0,0,i2\\nC=-9.0085,-2.9819;0,0,i2\\nC=-6.3085,-2.9819;0,0,i2\\nC=-7.7095,-3.7319;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n8-9=1,0\\n9-10=1,0\\n10-1=1,0\\n8-11=1,0\\n7-12=1,0\\n11-13=1,0\\n13-12=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-13]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,14)\\nC=6.9101,-5.9857;0,0,i2\\nC=7.5101,-4.5367;0,0,i2\\nC=9.0101,-4.5367;0,0,i2\\nC=9.6101,-5.9857;0,0,i2\\nC=9.6101,-8.6857;0,0,i2\\nC=9.0101,-10.1347;0,0,i2\\nC=7.5101,-10.1347;0,0,i2\\nC=6.9101,-8.6857;0,0,i2\\nC=5.4101,-5.9857;0,0,i2\\nC=5.4101,-8.6857;0,0,i2\\nC=11.1101,-8.6857;0,0,i2\\nC=11.1101,-5.9857;0,0,i2\\nC=11.8601,-7.3867;0,0,i2\\nC=4.6601,-7.2847;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n1-9=1,0\\n8-10=1,0\\n5-11=1,0\\n4-12=1,0\\n11-13=1,0\\n13-12=1,0\\n9-14=1,0\\n14-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-14]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,15)\\nC=22.1615,-1.5864;0,0,i2\\nC=23.3877,-0.7311;0,0,i2\\nC=20.9592,-0.7218;0,0,i2\\nC=22.9828,0.6878;0,0,i2\\nC=19.7379,-1.5763;0,0,i2\\nC=24.1796,1.5700;0,0,i2\\nC=18.5357,-0.7167;0,0,i2\\nC=23.7246,3.0381;0,0,i2\\nC=18.9534,0.7033;0,0,i2\\nC=22.2021,3.0764;0,0,i2\\nC=17.7398,1.6155;0,0,i2\\nC=21.7384,4.5021;0,0,i2\\nC=18.2148,3.0479;0,0,i2\\nC=20.2213,4.5021;0,0,i2\\nC=19.7018,3.0711;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-15=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-15]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,16)\\nC=-2.3295,-6.3508;0,0,i2\\nC=-2.3295,-7.8765;0,0,i2\\nC=-1.0175,-8.6353;0,0,i2\\nC=0.3099,-7.8765;0,0,i2\\nC=2.9416,-6.3508;0,0,i2\\nC=2.9416,-7.8765;0,0,i2\\nC=1.6218,-8.6353;0,0,i2\\nC=-1.0150,-4.2041;0,0,i2\\nC=0.2910,-3.4545;0,0,i2\\nC=1.6173,-4.2041;0,0,i2\\nC=-2.3088,-3.4429;0,0,i2\\nC=-3.6056,-4.1961;0,0,i2\\nC=-3.6212,-5.5973;0,0,i2\\nC=2.9184,-3.4366;0,0,i2\\nC=4.2222,-4.1763;0,0,i2\\nC=4.2483,-5.5976;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-4=1,0\\n8-9=1,0\\n9-10=1,0\\n11-12=1,0\\n8-11=1,0\\n1-13=1,0\\n12-13=1,0\\n14-15=1,0\\n10-14=1,0\\n5-16=1,0\\n15-16=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-16]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,18)\\nC=14.0401,-6.5516;0,0,i2\\nC=14.7839,-7.8398;0,0,i2\\nC=13.8355,-9.0080;0,0,i2\\nC=14.6732,-10.2249;0,0,i2\\nC=13.8569,-11.4861;0,0,i2\\nC=12.3571,-11.2554;0,0,i2\\nC=11.7609,-12.6417;0,0,i2\\nC=10.2552,-12.6811;0,0,i2\\nC=9.6255,-11.3345;0,0,i2\\nC=8.1419,-11.5631;0,0,i2\\nC=7.3964,-10.2751;0,0,i2\\nC=8.3448,-9.1199;0,0,i2\\nC=7.5032,-7.8976;0,0,i2\\nC=8.3106,-6.6466;0,0,i2\\nC=9.8063,-6.8716;0,0,i2\\nC=10.4049,-5.4658;0,0,i2\\nC=11.9207,-5.4290;0,0,i2\\nC=12.5403,-6.7723;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n3-4=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n7-8=1,0\\n12-13=1,0\\n13-14=1,0\\n14-15=1,0\\n11-12=1,0\\n16-17=1,0\\n17-18=1,0\\n15-16=1,0\\n1-18=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-18]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(20,20)\\nC=23.0039,-8.7037;0,0,i2\\nC=21.6788,-9.4637;0,0,i2\\nC=21.6617,-10.9743;0,0,i2\\nC=22.9767,-11.7478;0,0,i2\\nC=24.2738,-14.0464;0,0,i2\\nC=22.9667,-13.2731;0,0,i2\\nC=28.1300,-11.8325;0,0,i2\\nC=28.1300,-13.3322;0,0,i2\\nC=26.8927,-14.0616;0,0,i2\\nC=28.1261,-8.8196;0,0,i2\\nC=29.4195,-9.5784;0,0,i2\\nC=29.4306,-11.0859;0,0,i2\\nC=26.8898,-15.5611;0,0,i2\\nC=25.5812,-16.3118;0,0,i2\\nC=24.2488,-15.5459;0,0,i2\\nC=25.5520,-7.2815;0,0,i2\\nC=26.8533,-6.5619;0,0,i2\\nC=28.1325,-7.3250;0,0,i2\\nC=24.2475,-6.5288;0,0,i2\\nC=22.9549,-7.2639;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-4=1,0\\n7-8=1,0\\n8-9=1,0\\n10-11=1,0\\n7-12=1,0\\n11-12=1,0\\n13-14=1,0\\n9-13=1,0\\n5-15=1,0\\n15-14=1,0\\n16-17=1,0\\n10-18=1,0\\n17-18=1,0\\n19-20=1,0\\n16-19=1,0\\n20-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-20]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Crown Ethers</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"10\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nO=-3.3500,6.9000;0,0,i0\\nC=-2.7500,8.3490;0,0,i2\\nC=-1.2500,8.3490;0,0,i2\\nO=-0.6500,6.9000;0,0,i0\\nC=0.7990,6.3000;0,0,i2\\nC=0.7990,4.8000;0,0,i2\\nO=-0.6500,4.2000;0,0,i0\\nC=-1.2500,2.7510;0,0,i2\\nC=-2.7500,2.7510;0,0,i2\\nO=-3.3500,4.2000;0,0,i0\\nC=-4.7990,4.8000;0,0,i2\\nC=-4.7990,6.3000;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n12-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[12-crown-4]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,13)\\nO=-9.0085,1.2181;0,0,i0\\nC=-8.4085,2.6671;0,0,i2\\nC=-6.9085,2.6671;0,0,i2\\nO=-6.3085,1.2181;0,0,i0\\nC=-4.8595,0.6181;0,0,i2\\nC=-4.8595,-0.8819;0,0,i2\\nO=-6.3085,-1.4819;0,0,i0\\nO=-9.0085,-1.4819;0,0,i0\\nC=-10.4575,-0.8819;0,0,i2\\nC=-10.4575,0.6181;0,0,i2\\nC=-9.0085,-2.9819;0,0,i2\\nC=-6.3085,-2.9819;0,0,i2\\nC=-7.7095,-3.7319;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n8-9=1,0\\n9-10=1,0\\n10-1=1,0\\n8-11=1,0\\n7-12=1,0\\n11-13=1,0\\n13-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[13-crown-4]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,14)\\nO=6.9101,-5.9857;0,0,i0\\nC=7.5101,-4.5367;0,0,i2\\nC=9.0101,-4.5367;0,0,i2\\nO=9.6101,-5.9857;0,0,i0\\nO=9.6101,-8.6857;0,0,i0\\nC=9.0101,-10.1347;0,0,i2\\nC=7.5101,-10.1347;0,0,i2\\nO=6.9101,-8.6857;0,0,i0\\nC=5.4101,-5.9857;0,0,i2\\nC=5.4101,-8.6857;0,0,i2\\nC=11.1101,-8.6857;0,0,i2\\nC=11.1101,-5.9857;0,0,i2\\nC=11.8601,-7.3867;0,0,i2\\nC=4.6601,-7.2847;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n1-9=1,0\\n8-10=1,0\\n5-11=1,0\\n4-12=1,0\\n11-13=1,0\\n13-12=1,0\\n9-14=1,0\\n14-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[14-crown-4]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,15)\\nC=22.1615,-1.5864;0,0,i2\\nC=23.3877,-0.7311;0,0,i2\\nO=20.9592,-0.7218;0,0,i0\\nO=22.9828,0.6878;0,0,i0\\nC=19.7379,-1.5763;0,0,i2\\nC=24.1796,1.5700;0,0,i2\\nC=18.5357,-0.7167;0,0,i2\\nC=23.7246,3.0381;0,0,i2\\nO=18.9534,0.7033;0,0,i0\\nO=22.2021,3.0764;0,0,i0\\nC=17.7398,1.6155;0,0,i2\\nC=21.7384,4.5021;0,0,i2\\nC=18.2148,3.0479;0,0,i2\\nC=20.2213,4.5021;0,0,i2\\nO=19.7018,3.0711;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-15=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[15-crown-5]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,16)\\nC=-3.2703,-7.3624;0,0,i2\\nC=-4.4642,-6.4905;0,0,i2\\nO=-3.7283,-8.7862;0,0,i0\\nO=-5.6803,-7.3450;0,0,i0\\nC=-2.5315,-9.6420;0,0,i2\\nC=-6.8842,-6.4872;0,0,i2\\nC=-2.8996,-11.0971;0,0,i2\\nC=-8.0816,-7.3361;0,0,i2\\nO=-4.4208,-11.4135;0,0,i0\\nO=-7.6748,-8.7819;0,0,i0\\nC=-4.4492,-12.9087;0,0,i2\\nC=-8.9100,-9.5864;0,0,i2\\nC=-5.8087,-13.6602;0,0,i2\\nC=-8.6136,-11.0608;0,0,i2\\nC=-7.1438,-12.8902;0,0,i2\\nO=-7.1341,-11.4135;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-16=1,0\\n15-16=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[16-crown-5]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(17,17)\\nC=11.3913,-8.5218;0,0,i2\\nO=9.9653,-8.8821;0,0,i0\\nC=8.6597,-11.0126;0,0,i2\\nO=7.4967,-10.0548;0,0,i0\\nC=6.3270,-10.9800;0,0,i2\\nC=5.0002,-10.3582;0,0,i2\\nO=4.9982,-8.8783;0,0,i0\\nC=3.5605,-8.5538;0,0,i2\\nC=3.2430,-7.1220;0,0,i2\\nC=4.4248,-6.1867;0,0,i2\\nO=5.8590,-6.7660;0,0,i0\\nC=6.6561,-5.4870;0,0,i2\\nC=8.2017,-5.4870;0,0,i2\\nO=9.0164,-6.7596;0,0,i0\\nC=10.4452,-6.1465;0,0,i2\\nC=11.6565,-7.0603;0,0,i2\\nC=9.9960,-10.3691;0,0,i2\\n5-6=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n6-7=1,0\\n11-12=1,0\\n12-13=1,0\\n13-14=1,0\\n10-11=1,0\\n15-16=1,0\\n14-15=1,0\\n16-1=1,0\\n2-17=1,0\\n17-3=1,0\\n1-2=1,0\\n3-4=1,0\\n4-5=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[17-crown-5]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,18)\\nC=25.7638,-7.1614;0,0,i2\\nC=25.0080,-8.4698;0,0,i2\\nO=23.5267,-8.2690;0,0,i0\\nC=22.8858,-9.6176;0,0,i2\\nC=21.3709,-9.5699;0,0,i2\\nO=20.7705,-8.1782;0,0,i0\\nC=19.2614,-8.3591;0,0,i2\\nC=18.4799,-7.0636;0,0,i2\\nO=19.3514,-5.8621;0,0,i0\\nC=18.4463,-4.6854;0,0,i2\\nC=19.2046,-3.3933;0,0,i2\\nO=20.6839,-3.5899;0,0,i0\\nC=21.3018,-2.2555;0,0,i2\\nC=22.7925,-2.2628;0,0,i2\\nO=23.3883,-3.6550;0,0,i0\\nC=24.8877,-3.4674;0,0,i2\\nC=25.6817,-4.7676;0,0,i2\\nO=24.8469,-5.9802;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n3-4=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n7-8=1,0\\n12-13=1,0\\n13-14=1,0\\n14-15=1,0\\n11-12=1,0\\n16-17=1,0\\n17-18=1,0\\n15-16=1,0\\n1-18=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[18-crown-6]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(20,20)\\nC=-3.4089,-21.0677;0,0,i2\\nC=-4.1767,-22.3338;0,0,i2\\nC=-4.1760,-19.7823;0,0,i2\\nO=-5.6753,-22.3687;0,0,i0\\nO=-5.6837,-19.8385;0,0,i0\\nC=-5.9548,-23.7442;0,0,i2\\nC=-5.9813,-18.3858;0,0,i2\\nC=-7.3810,-24.2230;0,0,i2\\nC=-7.4086,-17.9180;0,0,i2\\nO=-8.5195,-23.2256;0,0,i0\\nO=-8.5335,-18.9110;0,0,i0\\nC=-9.6750,-17.9220;0,0,i2\\nC=-11.0728,-23.7403;0,0,i2\\nC=-11.1043,-18.4009;0,0,i2\\nO=-11.3732,-22.3272;0,0,i0\\nO=-11.3858,-19.8551;0,0,i0\\nC=-12.8889,-22.3529;0,0,i2\\nC=-12.9024,-19.8027;0,0,i2\\nC=-13.6729,-21.0850;0,0,i2\\nC=-9.6554,-24.2077;0,0,i2\\n1-2=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n11-12=1,0\\n13-15=1,0\\n14-16=1,0\\n15-17=1,0\\n16-18=1,0\\n17-19=1,0\\n18-19=1,0\\n12-14=1,0\\n13-20=1,0\\n10-20=1,0\\n3-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[20-crown-6]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"9\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(21,21)\\nC=5.3181,-17.4804;0,0,i2\\nC=3.8183,-17.4647;0,0,i2\\nO=3.1475,-18.8055;0,0,i0\\nC=1.6753,-18.4404;0,0,i2\\nC=0.7284,-19.5857;0,0,i2\\nO=1.3610,-20.9456;0,0,i0\\nC=0.1741,-21.8748;0,0,i2\\nC=0.5101,-23.3287;0,0,i2\\nO=1.9785,-23.6452;0,0,i0\\nC=1.9855,-25.1429;0,0,i2\\nC=3.3325,-25.7906;0,0,i2\\nO=4.5146,-24.8501;0,0,i0\\nC=5.6870,-25.8137;0,0,i2\\nC=7.0359,-25.1826;0,0,i2\\nC=8.3693,-19.6515;0,0,i2\\nC=7.4283,-18.4879;0,0,i2\\nO=5.9620,-18.8325;0,0,i0\\nO=7.0819,-23.6850;0,0,i0\\nO=7.7239,-20.9997;0,0,i0\\nC=8.5502,-23.3847;0,0,i2\\nC=8.9031,-21.9421;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n3-4=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n7-8=1,0\\n12-13=1,0\\n13-14=1,0\\n11-12=1,0\\n15-16=1,0\\n16-17=1,0\\n1-17=1,0\\n14-18=1,0\\n19-15=1,0\\n18-20=1,0\\n19-21=1,0\\n20-21=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[21-crown-7]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"10\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(24,24)\\nC=20.7446,-27.4663;0,0,i2\\nO=21.4914,-26.1584;0,0,i0\\nC=19.2274,-27.4663;0,0,i2\\nC=22.9335,-26.6476;0,0,i2\\nO=18.5013,-26.1469;0,0,i0\\nC=24.0269,-25.6099;0,0,i2\\nC=17.0704,-26.6026;0,0,i2\\nO=23.6289,-24.1676;0,0,i0\\nC=15.9870,-25.5356;0,0,i2\\nC=24.9576,-23.4669;0,0,i2\\nO=16.4266,-24.0844;0,0,i0\\nC=24.9616,-21.9609;0,0,i2\\nC=15.1053,-23.3507;0,0,i2\\nO=23.6462,-21.2624;0,0,i0\\nC=15.1453,-21.8561;0,0,i2\\nC=24.0717,-19.8181;0,0,i2\\nO=16.4802,-21.1978;0,0,i0\\nC=22.9846,-18.8108;0,0,i2\\nC=16.0898,-19.7657;0,0,i2\\nO=21.5453,-19.2991;0,0,i0\\nC=17.1862,-18.7823;0,0,i2\\nC=20.8284,-18.0103;0,0,i2\\nO=18.5947,-19.2887;0,0,i0\\nC=19.3270,-18.0074;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-16=1,0\\n15-17=1,0\\n16-18=1,0\\n17-19=1,0\\n18-20=1,0\\n19-21=1,0\\n20-22=1,0\\n21-23=1,0\\n22-24=1,0\\n23-24=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[24-crown-8]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<DataSheet><Summary><Title>Monodentate Ligands</Title><Description><![CDATA[]]></Description></Summary><Extension/><Header nrows=\\\"10\\\" ncols=\\\"3\\\"><Column id=\\\"1\\\" name=\\\"Molecule\\\" type=\\\"molecule\\\">Molecular structure</Column><Column id=\\\"2\\\" name=\\\"Name\\\" type=\\\"string\\\">Template name</Column><Column id=\\\"3\\\" name=\\\"Abbrev\\\" type=\\\"string\\\">Optional abbreviation</Column></Header><Content><Row id=\\\"1\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(20,22)\\nP=0.0000,0.0000;0,0,i0\\nC=0.0000,2.0000;0,0,i0\\nC=2.0000,-0.0000;0,0,i0\\nC=-0.0000,-2.0000;0,0,i0\\nC=-1.2990,2.7500;0,0,i1\\nC=1.2990,2.7500;0,0,i1\\nC=-1.2990,4.2500;0,0,i1\\nC=0.0000,5.0000;0,0,i1\\nC=1.2990,4.2500;0,0,i1\\nC=2.7500,1.2990;0,0,i1\\nC=2.7500,-1.2990;0,0,i1\\nC=4.2500,1.2990;0,0,i1\\nC=5.0000,-0.0000;0,0,i1\\nC=4.2500,-1.2990;0,0,i1\\nC=1.2990,-2.7500;0,0,i1\\nC=-1.2990,-2.7500;0,0,i1\\nC=1.2990,-4.2500;0,0,i1\\nC=-0.0000,-5.0000;0,0,i1\\nC=-1.2990,-4.2500;0,0,i1\\nX=-2.0000,0.0000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n2-5=1,0\\n2-6=2,0\\n5-7=2,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n3-10=1,0\\n3-11=2,0\\n10-12=2,0\\n12-13=1,0\\n13-14=2,0\\n14-11=1,0\\n4-15=1,0\\n4-16=2,0\\n15-17=2,0\\n17-18=1,0\\n18-19=2,0\\n19-16=1,0\\n1-20=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[triphenylphosphine]]></Cell><Cell id=\\\"3\\\"><![CDATA[P|Ph{3}]]></Cell></Row><Row id=\\\"2\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nP=0.0000,0.0000;0,0,i0\\nC=0.0000,1.5000;0,0,i3\\nC=1.5000,-0.0000;0,0,i3\\nC=-0.0000,-1.5000;0,0,i3\\nX=-1.5000,0.0000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[trimethylphosphine]]></Cell><Cell id=\\\"3\\\"><![CDATA[P|Me{3}]]></Cell></Row><Row id=\\\"3\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nX=-2.7000,3.9500;0,0,i0\\nC=-1.2000,3.9500;0,0,i0\\nN=-0.3200,2.7400;0,0,i0\\nC=1.1100,3.2000;0,0,i1\\nN=-0.3200,5.1600;0,0,i0\\nC=1.1100,4.7000;0,0,i1\\nC=-0.7853,6.5860;0,0,i3\\nC=-0.7853,1.3140;0,0,i3\\n1-2=2,0\\n4-3=1,0\\n3-2=1,0\\n2-5=1,0\\n5-6=1,0\\n6-4=2,0\\n5-7=1,0\\n3-8=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[imidazolidine]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"4\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-0.9000,0.3500;0,0,i0\\nC=0.6000,0.3500;0,0,e0\\nO=2.1000,0.3500;0,0,i0\\n1-2=0,0\\n2-3=2,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[carbonyl]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"5\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nX=-2.4000,1.9714;0,0,i0\\nO=-0.9000,1.9714;0,0,i0\\nC=-0.1500,3.2705;0,0,i2\\nC=1.3500,3.2705;0,0,i3\\nC=-0.1500,0.6724;0,0,i2\\nC=1.3500,0.6724;0,0,i3\\n1-2=0,0\\n2-3=1,0\\n3-4=1,0\\n2-5=1,0\\n5-6=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[diethylether]]></Cell><Cell id=\\\"3\\\"><![CDATA[O|Et{2}]]></Cell></Row><Row id=\\\"6\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nX=-2.4000,1.9714;0,0,i0\\nO=-0.9000,1.9714;0,0,i0\\nC=-0.0200,0.7614;0,0,i2\\nC=1.4100,1.2214;0,0,i2\\nC=-0.0200,3.1814;0,0,i2\\nC=1.4100,2.7214;0,0,i2\\n1-2=0,0\\n4-3=1,0\\n3-2=1,0\\n2-5=1,0\\n5-6=1,0\\n6-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[tetrahydrofuran]]></Cell><Cell id=\\\"3\\\"><![CDATA[THF]]></Cell></Row><Row id=\\\"7\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,6)\\nX=-1.0000,-0.9143;0,0,i0\\nO=0.5000,-0.9143;0,0,i0\\nC=2.0000,-0.9143;0,0,i0\\nN=2.7500,-2.2133;0,0,i0\\nC=4.2500,-2.2133;0,0,i3\\nC=2.0000,-3.5124;0,0,i3\\nH=2.7500,0.3848;0,0,i0\\n1-2=0,0\\n2-3=2,0\\n3-4=1,0\\n4-5=1,0\\n4-6=1,0\\n3-7=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[dimethylformamide]]></Cell><Cell id=\\\"3\\\"><![CDATA[DMF]]></Cell></Row><Row id=\\\"8\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nX=-1.0000,-0.9143;0,0,i0\\nO=0.5000,-0.9143;0,0,i0\\nS=2.0000,-0.9143;0,0,i0\\nC=2.7500,-2.2133;0,0,i3\\nC=2.7500,0.3848;0,0,i3\\n1-2=0,0\\n2-3=2,0\\n3-4=1,0\\n3-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[dimethylsulfoxide]]></Cell><Cell id=\\\"3\\\"><![CDATA[DMSO]]></Cell></Row><Row id=\\\"9\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nC=6.8500,0.0490;0,0,i1\\nC=5.3500,0.0490;0,0,i1\\nC=7.6000,-1.2500;0,0,i1\\nN=4.6000,-1.2500;0,0,i0\\nC=5.3500,-2.5490;0,0,i1\\nC=6.8500,-2.5490;0,0,i1\\nX=3.1000,-1.2500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n4-7=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[pyridine]]></Cell><Cell id=\\\"3\\\"><![CDATA[Py]]></Cell></Row><Row id=\\\"10\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(22,24)\\nX=0.0000,-0.1997;0,0,i0\\nC=0.0000,1.9965;0,2,i0\\nN=1.2135,2.8782;0,0,i0\\nC=0.7500,4.3048;0,0,i1\\nC=-0.7500,4.3048;0,0,i1\\nN=-1.2135,2.8782;0,0,i0\\nC=-2.7135,2.8782;0,0,i0\\nC=2.7135,2.8782;0,0,i0\\nC=-3.4635,4.1772;0,0,i0\\nC=-4.9635,4.1772;0,0,i1\\nC=-5.7135,2.8782;0,0,i1\\nC=-4.9635,1.5791;0,0,i1\\nC=-3.4635,1.5791;0,0,i0\\nC=3.4635,1.5791;0,0,i0\\nC=4.9635,1.5791;0,0,i1\\nC=5.7135,2.8782;0,0,i1\\nC=4.9635,4.1772;0,0,i1\\nC=3.4635,4.1772;0,0,i0\\n{^i}Pr=-2.7135,0.2801;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n{^i}Pr=2.7135,0.2801;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n{^i}Pr=2.7135,5.4763;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n{^i}Pr=-2.7135,5.4763;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n1-2=0,0\\n2-3=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-2=1,0\\n6-7=1,0\\n3-8=1,0\\n7-9=2,0\\n9-10=1,0\\n10-11=2,0\\n11-12=1,0\\n12-13=2,0\\n13-7=1,0\\n8-14=2,0\\n14-15=1,0\\n15-16=2,0\\n16-17=1,0\\n17-18=2,0\\n18-8=1,0\\n13-19=1,0\\n14-20=1,0\\n18-21=1,0\\n9-22=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[IPr]]></Cell><Cell id=\\\"3\\\"/></Row></Content></DataSheet>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Bidentate Ligands</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"11\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,15)\\nC=2.7915,1.5000;0,0,i1\\nC=4.0905,0.7500;0,0,i1\\nC=1.4925,0.7500;0,0,i1\\nC=4.0905,-0.7500;0,0,i1\\nC=2.7915,-1.5000;0,0,i0\\nN=1.4925,-0.7500;0,0,i0\\nC=2.7915,-3.0000;0,0,i0\\nC=4.0905,-3.7500;0,0,i1\\nN=1.4925,-3.7500;0,0,i0\\nC=4.0905,-5.2500;0,0,i1\\nC=2.7915,-6.0000;0,0,i1\\nC=1.4925,-5.2500;0,0,i1\\nX=-1.1000,-2.2500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n13-9=0,0\\n13-6=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[bipyridine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[bipy]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,15)\\nC=2.7915,1.5000;0,0,i1\\nC=4.0905,0.7500;0,0,i1\\nC=1.4925,0.7500;0,0,i1\\nC=4.0905,-0.7500;0,0,i1\\nC=2.7915,-1.5000;0,0,i0\\nN=1.4925,-0.7500;0,0,i0\\nC=2.7915,-3.0000;0,0,i0\\nC=4.0905,-3.7500;0,0,i1\\nC=1.4925,-3.7500;0,0,i0\\nC=4.0905,-5.2500;0,0,i1\\nC=2.7915,-6.0000;0,0,i1\\nC=1.4925,-5.2500;0,0,i1\\nX=-1.1000,-2.2500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n13-9=1,0\\n13-6=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phenylpyridine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[phpy]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nX=-0.8000,3.2500;0,0,i0\\nO=-0.0500,1.9510;0,0,i0,xRESPATH:1:1\\nC=1.4500,1.9510;0,0,i0,xRESPATH:1:2\\nC=2.2000,3.2499;0,0,i1,xRESPATH:1:3\\nC=1.4500,4.5491;0,0,i0,xRESPATH:1:4\\nO=-0.0500,4.5491;0,0,i0,xRESPATH:1:5\\nC=2.2001,5.8481;0,0,i3\\nC=2.1999,0.6519;0,0,i3\\n2-3=2,0\\n2-1=0,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=1,0\\n5-7=1,0\\n3-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetylacetonate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[acac]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nX=-3.2985,-1.8750;0,0,i0\\nC=0.4506,-1.8500;0,0,i3\\nC=-1.0494,-1.8500;0,0,i0,xRESPATH:1:2\\nO=-1.7995,-3.1491;0,0,i0,xRESPATH:1:1\\nO=-1.7994,-0.5509;0,0,i0,xRESPATH:1:3\\n2-3=1,0\\n3-4=2,0\\n3-5=1,0\\n5-1=1,0\\n4-1=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetate]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,18)\\nC=2.7915,1.5000;0,0,i1\\nC=4.0905,0.7500;0,0,i1\\nC=1.4925,0.7500;0,0,i1\\nC=4.0905,-0.7500;0,0,i0\\nC=2.7915,-1.5000;0,0,i0\\nN=1.4925,-0.7500;0,0,i0\\nC=2.7915,-3.0000;0,0,i0\\nC=4.0905,-3.7500;0,0,i0\\nN=1.4925,-3.7500;0,0,i0\\nC=4.0905,-5.2500;0,0,i1\\nC=2.7915,-6.0000;0,0,i1\\nC=1.4925,-5.2500;0,0,i1\\nX=-1.1000,-2.2500;0,0,i0\\nC=5.3896,-3.0000;0,0,i1\\nC=5.3896,-1.5000;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n13-9=0,0\\n13-6=0,0\\n8-14=1,0\\n14-15=2,0\\n15-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phenanthroline]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[phen]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nX=-1.6500,0.6500;0,0,i0\\nN=0.1300,-0.5600;0,0,i2\\nC=1.5600,-0.1000;0,0,i2\\nN=0.1300,1.8600;0,0,i2\\nC=1.5600,1.4000;0,0,i2\\n3-2=1,0\\n2-1=0,0\\n1-4=0,0\\n4-5=1,0\\n5-3=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ethylenediamine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[en]]></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,14)\\nC=4.1514,2.1507;0,0,i1\\nC=2.8524,2.9007;0,0,i1\\nC=1.5534,2.1507;0,0,i1\\nN=1.5534,0.6507;0,0,i0\\nC=2.8524,-0.0993;0,0,i0\\nC=4.1515,0.6507;0,0,i0\\nC=5.4505,-0.0993;0,0,i1\\nC=2.8524,-1.5993;0,0,i0\\nC=4.1515,-2.3494;0,0,i1\\nC=5.4505,-1.5994;0,0,i1\\nO=1.5534,-2.3493;0,0,i0\\nX=-0.1457,-0.9064;0,0,i0\\n2-3=2,0\\n2-1=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=2,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n8-11=1,0\\n11-12=1,0\\n12-4=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[oxyquinoline]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(29,33)\\nX=-0.3660,-0.1210;0,0,i0\\nP=1.8140,1.0890;0,0,i0\\nC=3.2440,0.6290;0,0,i2\\nP=1.8140,-1.3310;0,0,i0\\nC=3.2440,-0.8710;0,0,i2\\nC=1.0487,2.5150;0,0,i0\\nC=2.8725,2.1519;0,0,i0\\nC=1.0487,-2.7570;0,0,i0\\nC=2.8725,-2.3939;0,0,i0\\nC=4.3221,1.7667;0,0,i1\\nC=2.4812,3.5999;0,0,i1\\nC=5.3806,2.8295;0,0,i1\\nC=4.9894,4.2776;0,0,i1\\nC=3.5397,4.6628;0,0,i1\\nC=1.8387,3.7901;0,0,i1\\nC=-0.4505,2.5616;0,0,i1\\nC=1.1294,5.1118;0,0,i1\\nC=-0.3699,5.1584;0,0,i1\\nC=-1.1598,3.8833;0,0,i1\\nC=-0.4505,-2.8036;0,0,i1\\nC=1.8387,-4.0321;0,0,i1\\nC=-1.1598,-4.1253;0,0,i1\\nC=-0.3699,-5.4004;0,0,i1\\nC=1.1294,-5.3538;0,0,i1\\nC=2.4812,-3.8419;0,0,i1\\nC=4.3221,-2.0087;0,0,i1\\nC=3.5397,-4.9048;0,0,i1\\nC=4.9893,-4.5196;0,0,i1\\nC=5.3806,-3.0716;0,0,i1\\n3-2=1,0\\n2-1=0,0\\n1-4=0,0\\n4-5=1,0\\n5-3=1,0\\n2-6=1,0\\n2-7=1,0\\n4-8=1,0\\n4-9=1,0\\n7-10=1,0\\n7-11=2,0\\n10-12=2,0\\n12-13=1,0\\n13-14=2,0\\n14-11=1,0\\n6-15=1,0\\n6-16=2,0\\n15-17=2,0\\n17-18=1,0\\n18-19=2,0\\n19-16=1,0\\n8-20=1,0\\n8-21=2,0\\n20-22=2,0\\n22-23=1,0\\n23-24=2,0\\n24-21=1,0\\n9-25=1,0\\n9-26=2,0\\n25-27=2,0\\n27-28=1,0\\n28-29=2,0\\n29-26=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ethylene bis(diphenylphosphine)]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[dppe]]></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(28,32)\\nX=-0.3660,-0.1210;0,0,i0\\nP=1.8140,1.0890;0,0,i0\\nP=1.8140,-1.3310;0,0,i0\\nC=1.0487,2.5150;0,0,i0\\nC=2.8725,2.1519;0,0,i0\\nC=1.0487,-2.7570;0,0,i0\\nC=2.8725,-2.3939;0,0,i0\\nC=4.3221,1.7667;0,0,i1\\nC=2.4812,3.5999;0,0,i1\\nC=5.3806,2.8295;0,0,i1\\nC=4.9894,4.2776;0,0,i1\\nC=3.5397,4.6628;0,0,i1\\nC=1.8387,3.7901;0,0,i1\\nC=-0.4505,2.5616;0,0,i1\\nC=1.1294,5.1118;0,0,i1\\nC=-0.3699,5.1584;0,0,i1\\nC=-1.1598,3.8833;0,0,i1\\nC=-0.4505,-2.8036;0,0,i1\\nC=1.8387,-4.0321;0,0,i1\\nC=-1.1598,-4.1253;0,0,i1\\nC=-0.3699,-5.4004;0,0,i1\\nC=1.1294,-5.3538;0,0,i1\\nC=2.4812,-3.8419;0,0,i1\\nC=4.3221,-2.0087;0,0,i1\\nC=3.5397,-4.9048;0,0,i1\\nC=4.9893,-4.5196;0,0,i1\\nC=5.3806,-3.0716;0,0,i1\\nC=3.5430,-0.1210;0,0,i2\\n2-1=0,0\\n1-3=0,0\\n2-4=1,0\\n2-5=1,0\\n3-6=1,0\\n3-7=1,0\\n5-8=1,0\\n5-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n4-13=1,0\\n4-14=2,0\\n13-15=2,0\\n15-16=1,0\\n16-17=2,0\\n17-14=1,0\\n6-18=1,0\\n6-19=2,0\\n18-20=2,0\\n20-21=1,0\\n21-22=2,0\\n22-19=1,0\\n7-23=1,0\\n7-24=2,0\\n23-25=2,0\\n25-26=1,0\\n26-27=2,0\\n27-24=1,0\\n2-28=1,0\\n3-28=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[methylene bis(diphenylphonsphine)]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[dppm]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nX=-3.3500,-0.0500;0,0,i0\\nO=-1.6700,-1.2600;0,0,i0\\nC=-0.2400,-0.8000;0,0,i0\\nO=-1.6700,1.1600;0,0,i0\\nC=-0.2400,0.7000;0,0,i0\\nC=1.0590,1.4499;0,0,i1\\nC=1.0590,-1.5500;0,0,i1\\nC=2.3581,-0.8000;0,0,i1\\nC=2.3581,0.6999;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=2,0\\n3-7=2,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[catecholate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[cat]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,8)\\nX=-2.9010,4.6990;0,0,i0\\nO=-1.4010,4.6990;0,0,i0\\nC=0.0990,4.6990;0,0,i1\\nC=0.8490,5.9981;0,0,i3\\nC=0.8490,3.4000;0,0,i2\\nC=0.0990,2.1010;0,0,i1\\nO=-1.4010,2.1010;0,0,i0\\nC=0.8490,0.8019;0,0,i3\\nX=-2.9010,2.1009;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n3-5=1,0\\n5-6=1,0\\n6-7=1,0\\n6-8=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[bridging acac]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Tridentate Ligands</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"3\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(19,23)\\nC=2.9998,2.0011;0,0,i1\\nC=4.4998,2.0011;0,0,i1\\nC=2.2498,0.7021;0,0,i1\\nC=5.2498,0.7021;0,0,i1\\nC=4.4998,-0.5969;0,0,i0\\nN=2.9998,-0.5969;0,0,i0\\nC=5.2498,-1.8960;0,0,i0\\nC=6.7498,-1.8960;0,0,i1\\nN=4.4998,-3.1950;0,0,i0\\nC=7.4998,-3.1950;0,0,i1\\nC=6.7498,-4.4940;0,0,i1\\nC=5.2498,-4.4940;0,0,i0\\nC=4.4999,-5.7930;0,0,i0\\nN=2.9999,-5.7930;0,0,i0\\nC=5.2499,-7.0921;0,0,i1\\nC=2.2498,-7.0921;0,0,i1\\nC=2.9998,-8.3911;0,0,i1\\nC=4.4998,-8.3912;0,0,i1\\nX=1.4998,-3.1950;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n12-13=1,0\\n13-14=1,0\\n13-15=2,0\\n14-16=2,0\\n16-17=1,0\\n17-18=2,0\\n18-15=1,0\\n6-19=0,0\\n9-19=0,0\\n14-19=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[terpyridine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[terpy]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,5)\\nX=-7.0728,1.0229;0,0,i0,xARENE:1:1\\nC=-5.3624,2.3410;0,0,i2,xARENE:1:2\\nC=-4.5676,1.0688;0,0,i1,xARENE:1:3\\nC=-5.2718,-0.2556;0,0,i2,xARENE:1:4\\n2-3=2,0\\n3-4=1,0\\n1-4=1,0\\n1-3=0,0\\n1-2=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[allyl]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,9)\\nC=3.6861,-1.8600;0,0,i2\\nN=2.1861,-1.8600;0,0,i2\\nC=4.4361,-3.1590;0,0,i2\\nN=3.6861,-4.4580;0,0,i1\\nC=4.4361,-5.7571;0,0,i2\\nC=3.6861,-7.0561;0,0,i2\\nN=2.1862,-7.0561;0,0,i2\\nX=0.6861,-4.4580;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n5-4=1,0\\n5-6=1,0\\n6-7=1,0\\n2-8=0,0\\n4-8=0,0\\n7-8=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[diethylaminetriamine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[dien]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Multidentate Ligands</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"5\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,12)\\nX=3.7990,0.0000;0,0,i0,xARENE:2:1,xARENE:1:1\\nC=5.6500,-0.1000;0,0,i1,xARENE:2:2\\nC=5.1000,-2.3000;0,0,i1,xARENE:1:3\\nC=5.6500,2.4000;0,0,i1,xARENE:2:3\\nC=5.1000,0.2000;0,0,i1,xARENE:1:2\\nC=7.0319,1.5176;0,0,i2\\nC=7.5819,3.0176;0,0,i2\\nC=7.5819,-1.0824;0,0,i2\\nC=7.0319,-2.5824;0,0,i2\\n2-4=2,0\\n3-5=2,0\\n5-6=1,0\\n4-7=1,0\\n2-8=1,0\\n3-9=1,0\\n6-7=1,0\\n9-8=1,0\\n1-3=0,0\\n1-5=0,0\\n1-4=0,0\\n1-2=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclooctadiene]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[COD]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,12)\\nX=3.7990,0.0000;0,0,i0,xARENE:2:1,xARENE:1:1\\nC=5.8000,0.0500;0,0,i1\\nC=7.1000,1.2500;0,0,i1\\nC=4.7000,1.7651;0,0,i1,xARENE:1:2\\nC=6.3000,2.4651;0,0,i1,xARENE:1:3\\nC=5.5500,-2.0000;0,0,i1,xARENE:2:2\\nC=6.8500,-0.8000;0,0,i1,xARENE:2:3\\nC=8.5000,0.6500;0,0,i2\\n2-4=1,0\\n3-5=1,0\\n2-6=1,0\\n3-7=1,0\\n6-7=2,0\\n2-8=1,0\\n8-3=1,0\\n4-5=2,0\\n1-4=0,0\\n1-5=0,0\\n1-6=0,0\\n1-7=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[norbornadiene]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,10)\\nC=0.2150,2.1200;0,0,i1,xARENE:1:2\\nC=-1.0950,3.1700;0,0,i1,xARENE:1:4\\nC=-0.1650,3.6300;0,0,i1,xARENE:1:3\\nC=-0.1650,0.6100;0,0,i1,xARENE:1:6\\nC=-1.0950,1.0700;0,0,i1,xARENE:1:5\\nX=-2.2110,2.0800;0,0,i0,xARENE:1:1\\n2-3=2,0\\n3-1=1,0\\n1-4=1,0\\n4-5=2,0\\n5-2=1,0\\n6-1=1,0\\n3-6=0,0\\n4-6=0,0\\n5-6=0,0\\n2-6=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclopentadienyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cp]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,12)\\nC=0.7490,6.7000;0,0,i1,xARENE:1:2\\nC=0.2000,5.9500;0,0,i1,xARENE:1:3\\nC=1.2981,6.0500;0,0,i1,xARENE:1:7\\nC=0.2000,4.4500;0,0,i1,xARENE:1:4\\nC=0.7490,3.7000;0,0,i1,xARENE:1:5\\nC=1.2981,4.3500;0,0,i1,xARENE:1:6\\nX=-1.3490,5.2000;0,0,i0,xARENE:1:1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n2-7=0,0\\n4-7=0,0\\n7-1=0,0\\n7-5=0,0\\n7-6=0,0\\n7-3=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[arene]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,15)\\nX=0.0000,0.0000;0,0,i0,xARENE:1:1\\nC=2.9263,-0.0154;0,0,i0,xARENE:1:2\\nC=1.5927,-1.0352;0,0,i0,xARENE:1:4\\nC=2.5119,-1.5163;0,0,i0,xARENE:1:3\\nC=2.5809,1.5029;0,0,i0,xARENE:1:6\\nC=1.6407,1.0642;0,0,i0,xARENE:1:5\\nC=3.7728,-0.0348;0,0,i3\\nC=2.8692,2.9749;0,0,i3\\nC=0.9137,2.3762;0,0,i3\\nC=0.8354,-2.3300;0,0,i3\\nC=2.7329,-3.0000;0,0,i3\\n3-4=2,0\\n4-2=1,0\\n2-5=1,0\\n5-6=2,0\\n6-3=1,0\\n1-2=1,0\\n4-1=0,0\\n5-1=0,0\\n6-1=0,0\\n3-1=0,0\\n2-7=1,0\\n5-8=1,0\\n6-9=1,0\\n3-10=1,0\\n4-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[pentamethylcyclopentadienyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cp*]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<DataSheet><Summary><Title>Cage Complexes</Title><Description><![CDATA[]]></Description></Summary><Extension/><Header nrows=\\\"8\\\" ncols=\\\"3\\\"><Column id=\\\"1\\\" name=\\\"Molecule\\\" type=\\\"molecule\\\">Molecular structure</Column><Column id=\\\"2\\\" name=\\\"Name\\\" type=\\\"string\\\">Template name</Column><Column id=\\\"3\\\" name=\\\"Abbrev\\\" type=\\\"string\\\">Optional abbreviation</Column></Header><Content><Row id=\\\"1\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(21,25)\\nM=-0.6000,2.4500;0,0,i0\\nN=-1.3500,3.7490;0,0,i0\\nO=0.1500,1.1510;0,0,i0\\nO=0.9000,2.4500;0,0,i0\\nO=-2.1000,2.4500;0,0,i0\\nO=-1.3500,1.1510;0,0,i0\\nN=0.1500,3.7490;0,0,i0\\nC=-0.9618,5.1979;0,0,i2\\nC=-0.2382,5.1979;0,0,i2\\nC=-2.7989,4.1373;0,0,i2\\nC=-3.3990,3.2000;0,0,i0\\nC=2.1990,3.2000;0,0,i0\\nC=1.5989,4.1373;0,0,i2\\nC=-3.0821,2.1510;0,0,i0\\nC=1.8821,2.1510;0,0,i0\\nC=1.4938,3.5999;0,0,i2\\nC=-2.6938,3.5999;0,0,i2\\nO=3.2679,1.5769;0,0,i0\\nO=3.6975,3.2689;0,0,i0\\nO=-4.4679,1.5769;0,0,i0\\nO=-4.8975,3.2689;0,0,i0\\n1-2=0,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n1-6=1,0\\n1-7=0,0\\n2-8=1,0\\n7-9=1,0\\n8-9=1,0\\n2-10=1,0\\n5-11=1,0\\n4-12=1,0\\n7-13=1,0\\n12-13=1,0\\n11-10=1,0\\n6-14=1,0\\n3-15=1,0\\n15-16=1,0\\n14-17=1,0\\n17-2=1,0\\n16-7=1,0\\n15-18=2,0\\n12-19=2,0\\n14-20=2,0\\n11-21=2,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[EDTA]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"2\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(25,32)\\nM=-0.3000,1.2000;0,0,i0\\nN=-1.7142,2.6142;0,0,i0\\nN=1.1142,2.6142;0,0,i0\\nN=1.1142,-0.2142;0,0,i0\\nN=-1.7142,-0.2142;0,0,i0\\nC=-3.1921,0.0191;0,0,i0\\nC=-3.8780,-1.3173;0,0,i1\\nC=-1.4809,-1.6921;0,0,i0\\nC=-2.8173,-2.3780;0,0,i1\\nC=-1.4809,4.0921;0,0,i0\\nC=-2.8173,4.7780;0,0,i1\\nC=-3.1921,2.3809;0,0,i0\\nC=-3.8780,3.7173;0,0,i1\\nC=2.5921,2.3809;0,0,i0\\nC=3.2780,3.7173;0,0,i1\\nC=0.8809,4.0921;0,0,i0\\nC=2.2173,4.7780;0,0,i1\\nC=0.8809,-1.6921;0,0,i0\\nC=2.2173,-2.3780;0,0,i1\\nC=2.5921,0.0191;0,0,i0\\nC=3.2780,-1.3173;0,0,i1\\nC=-3.8714,1.2000;0,0,i1\\nC=-0.3000,4.7714;0,0,i1\\nC=3.2714,1.2000;0,0,i1\\nC=-0.3000,-2.3714;0,0,i1\\n1-2=1,0\\n1-3=0,0\\n1-4=1,0\\n1-5=0,0\\n7-6=1,0\\n6-5=1,0\\n5-8=2,0\\n8-9=1,0\\n9-7=2,0\\n11-10=2,0\\n10-2=1,0\\n2-12=1,0\\n12-13=2,0\\n13-11=1,0\\n15-14=1,0\\n14-3=2,0\\n3-16=1,0\\n16-17=1,0\\n17-15=2,0\\n19-18=1,0\\n18-4=1,0\\n4-20=1,0\\n20-21=1,0\\n21-19=2,0\\n6-22=2,0\\n10-23=1,0\\n14-24=1,0\\n18-25=2,0\\n22-12=1,0\\n23-16=2,0\\n24-20=2,0\\n25-8=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[porphyrin]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"3\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(25,32)\\nM=1.5000,0.0000;0,0,i0\\nN=2.9117,1.4117;0,0,i0\\nN=0.0882,-1.4117;0,0,i0\\nN=2.9117,-1.4117;0,0,i0\\nN=0.0882,1.4117;0,0,i0\\nC=-2.0755,-2.5147;0,0,i1\\nC=-1.3895,-1.1783;0,0,i0\\nC=0.3215,-2.8895;0,0,i0\\nC=-1.0148,-3.5754;0,0,i1\\nC=5.0755,2.5147;0,0,i1\\nC=4.3895,1.1783;0,0,i0\\nC=2.6784,2.8895;0,0,i0\\nC=4.0148,3.5754;0,0,i1\\nC=-1.0148,3.5754;0,0,i1\\nC=0.3216,2.8895;0,0,i0\\nC=-1.3895,1.1783;0,0,i0\\nC=-2.0754,2.5148;0,0,i1\\nC=4.0148,-3.5754;0,0,i1\\nC=2.6783,-2.8895;0,0,i0\\nC=4.3895,-1.1783;0,0,i0\\nC=5.0754,-2.5148;0,0,i1\\nN=-1.9510,-0.0731;0,0,i0\\nN=1.4268,3.4510;0,0,i0\\nN=4.9510,0.0731;0,0,i0\\nN=1.5731,-3.4510;0,0,i0\\n1-2=0,0\\n1-3=0,0\\n1-4=0,0\\n1-5=0,0\\n6-7=1,0\\n7-3=2,0\\n3-8=1,0\\n8-9=1,0\\n9-6=2,0\\n10-11=1,0\\n11-2=2,0\\n2-12=1,0\\n12-13=1,0\\n13-10=2,0\\n14-15=1,0\\n15-5=2,0\\n5-16=1,0\\n16-17=1,0\\n17-14=2,0\\n18-19=1,0\\n19-4=2,0\\n4-20=1,0\\n20-21=1,0\\n21-18=2,0\\n7-22=1,0\\n15-23=1,0\\n11-24=1,0\\n19-25=1,0\\n8-25=2,0\\n16-22=2,0\\n12-23=2,0\\n20-24=2,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[porphyrinoid]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"4\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,20)\\nM=12.1738,-1.7111;0,0,i0,xARENE:1:1,xARENE:2:1\\nC=13.1284,-0.5301;0,0,i1,xARENE:1:2\\nC=11.2193,-0.5301;0,0,i1,xARENE:1:3\\nC=11.2193,-2.8920;0,0,i1,xARENE:2:2\\nC=13.1284,-2.8920;0,0,i1,xARENE:2:3\\nC=10.8390,-3.7589;0,0,i1,xARENE:2:6\\nC=12.1738,-4.1749;0,0,i1,xARENE:2:5\\nC=13.5087,-3.7589;0,0,i1,xARENE:2:4\\nC=13.5087,0.3368;0,0,i1,xARENE:1:6\\nC=12.1738,0.7528;0,0,i1,xARENE:1:5\\nC=10.8390,0.3368;0,0,i1,xARENE:1:4\\n2-3=1,0\\n4-5=1,0\\n4-6=2,0\\n6-7=1,0\\n7-8=1,0\\n8-5=2,0\\n2-9=2,0\\n9-10=1,0\\n10-11=1,0\\n11-3=2,0\\n10-1=1,0\\n7-1=1,0\\n8-1=0,0\\n5-1=0,0\\n4-1=0,0\\n6-1=0,0\\n3-1=0,0\\n2-1=0,0\\n9-1=0,0\\n11-1=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[metallocene]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"5\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(37,45)\\nM=1.5000,0.0000;0,0,i0\\nC=5.3914,3.7500;0,0,i1\\nC=6.6904,3.0000;0,0,i1\\nC=4.0924,3.0000;0,0,i1\\nC=6.6904,1.5000;0,0,i1\\nC=5.3914,0.7500;0,0,i0\\nN=4.0924,1.5000;0,0,i0\\nC=5.3914,-0.7500;0,0,i0\\nC=6.6904,-1.5000;0,0,i1\\nN=4.0924,-1.5000;0,0,i0\\nC=6.6904,-3.0000;0,0,i1\\nC=5.3914,-3.7500;0,0,i1\\nC=4.0924,-3.0000;0,0,i1\\nC=-3.6940,1.4927;0,0,i1\\nC=-3.6946,2.9927;0,0,i1\\nC=-2.3946,0.7433;0,0,i1\\nC=-2.3959,3.7433;0,0,i1\\nC=-1.0966,2.9939;0,0,i0\\nN=-1.0959,1.4939;0,0,i0\\nC=0.2020,3.7445;0,0,i0\\nC=0.2013,5.2445;0,0,i1\\nN=1.5014,2.9951;0,0,i0\\nC=1.5000,5.9951;0,0,i1\\nC=2.7994,5.2457;0,0,i1\\nC=2.8001,3.7457;0,0,i1\\nC=2.8030,-5.2448;0,0,i1\\nC=1.5041,-5.9951;0,0,i1\\nC=2.8026,-3.7448;0,0,i1\\nC=0.2049,-5.2453;0,0,i1\\nC=0.2046,-3.7454;0,0,i0\\nN=1.5034,-2.9951;0,0,i0\\nC=-1.0945,-2.9957;0,0,i0\\nC=-2.3934,-3.7459;0,0,i1\\nN=-1.0949,-1.4957;0,0,i0\\nC=-3.6926,-2.9962;0,0,i1\\nC=-3.6930,-1.4963;0,0,i1\\nC=-2.3941,-0.7460;0,0,i1\\n2-3=1,0\\n2-4=2,0\\n3-5=2,0\\n5-6=1,0\\n6-7=2,0\\n7-4=1,0\\n6-8=1,0\\n8-9=1,0\\n8-10=2,0\\n9-11=2,0\\n11-12=1,0\\n12-13=2,0\\n13-10=1,0\\n1-10=0,0\\n1-7=0,0\\n14-15=1,0\\n14-16=2,0\\n15-17=2,0\\n17-18=1,0\\n18-19=2,0\\n19-16=1,0\\n18-20=1,0\\n20-21=1,0\\n20-22=2,0\\n21-23=2,0\\n23-24=1,0\\n24-25=2,0\\n25-22=1,0\\n1-22=0,0\\n1-19=0,0\\n26-27=1,0\\n26-28=2,0\\n27-29=2,0\\n29-30=1,0\\n30-31=2,0\\n31-28=1,0\\n30-32=1,0\\n32-33=1,0\\n32-34=2,0\\n33-35=2,0\\n35-36=1,0\\n36-37=2,0\\n37-34=1,0\\n1-34=0,0\\n1-31=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[tris-bipy]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"6\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,18)\\nN=0.0000,0.0000;0,0,i1\\nC=-1.5000,0.0000;0,0,i2\\nC=-2.2500,-1.2990;0,0,i2\\nC=-1.5000,-2.5981;0,0,i2\\nN=-0.0000,-2.5981;0,0,i1\\nC=0.7500,1.2990;0,0,i2\\nC=2.2500,1.2990;0,0,i2\\nN=3.0000,-0.0000;0,0,i1\\nC=4.5000,-0.0000;0,0,i2\\nC=5.2500,-1.2990;0,0,i2\\nC=4.5000,-2.5981;0,0,i2\\nN=3.0000,-2.5981;0,0,i1\\nC=0.7500,-3.8971;0,0,i2\\nC=2.2500,-3.8971;0,0,i2\\nM=1.5000,-1.3000;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n1-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n5-13=1,0\\n12-14=1,0\\n14-13=1,0\\n1-15=0,0\\n15-12=0,0\\n5-15=0,0\\n15-8=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[tren]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"7\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,13)\\nM=1.4999,0.0000;0,0,i0\\nN=1.4999,1.5000;0,0,i2\\nN=1.4999,-1.5000;0,0,i2\\nN=0.2009,0.7500;0,0,i2\\nN=0.2009,-0.7500;0,0,i0\\nC=0.4393,-2.5606;0,0,i2\\nC=-1.2479,-0.3617;0,0,i2\\nC=-0.1872,-2.1988;0,0,i2\\nC=-1.2479,0.3617;0,0,i2\\nC=0.0511,1.8882;0,0,i2\\nC=-0.7973,0.9790;0,0,i2\\n1-2=0,0\\n1-3=0,0\\n1-4=0,0\\n1-5=0,0\\n3-6=1,0\\n5-7=1,0\\n5-8=1,0\\n4-9=1,0\\n7-9=1,0\\n6-8=1,0\\n2-10=1,0\\n5-11=1,0\\n10-11=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[N4]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"8\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(21,27)\\nN=3.2639,-1.3522;0,0,i1\\nC=1.8122,-0.7585;0,0,i2\\nC=1.8056,0.7411;0,0,i2\\nN=3.2521,1.3475;0,0,i1\\nN=5.9520,1.3594;0,0,i1\\nC=7.4037,0.7657;0,0,i2\\nC=7.4103,-0.7339;0,0,i2\\nN=5.9639,-1.3403;0,0,i1\\nC=3.2705,-2.8521;0,0,i2\\nC=5.9705,-2.8402;0,0,i2\\nC=5.9454,2.8594;0,0,i2\\nC=3.2455,2.8475;0,0,i2\\nC=4.6431,3.6036;0,0,i1\\nC=4.5728,-3.5963;0,0,i1\\nM=4.6052,-0.0128;0,0,i0\\nN=4.5994,1.4890;0,0,i1\\nN=4.6133,-1.5126;0,0,i1\\nC=4.1980,2.5347;0,0,i2\\nC=4.2120,-2.5583;0,0,i2\\nC=2.8657,-0.6612;0,0,i2\\nC=2.8489,0.6376;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n1-9=1,0\\n8-10=1,0\\n5-11=1,0\\n4-12=1,0\\n11-13=1,0\\n13-12=1,0\\n9-14=1,0\\n14-10=1,0\\n1-15=0,0\\n4-15=0,0\\n8-15=0,0\\n5-15=0,0\\n15-16=0,0\\n15-17=0,0\\n16-18=1,0\\n13-18=1,0\\n17-19=1,0\\n19-14=1,0\\n17-20=1,0\\n16-21=1,0\\n21-20=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[N6]]></Cell><Cell id=\\\"3\\\"/></Row></Content></DataSheet>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Amino Acids</Title><Description><![CDATA[]]></Description></Summary>\\n<Header nrows=\\\"20\\\" ncols=\\\"4\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n<Column name=\\\"Mnemonic\\\" type=\\\"string\\\" id=\\\"4\\\"></Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,6)\\nC=-6.5731,8.0000;0,0,i0\\nO=-6.5731,9.5000;0,0,i0\\nC=-7.8721,7.2500;0,0,i1\\nX=-5.2741,7.2500;0,0,i0\\nN=-9.1712,8.0000;0,0,i1\\nC=-7.8721,5.7500;0,0,i3\\nX=-10.4702,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n5-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[alanine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ala]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[A]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nC=-6.8514,8.0000;0,0,i0\\nO=-6.8514,9.5000;0,0,i0\\nC=-8.1504,7.2500;0,0,i1\\nX=-5.5524,7.2500;0,0,i0\\nN=-9.4495,8.0000;0,0,i1\\nC=-8.1504,5.7500;0,0,i2\\nS=-6.8515,5.0000;0,0,i1\\nX=-10.7485,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n5-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cysteine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cys]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[C]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i0\\nO=-7.5009,3.5000;-1,0,i0\\nO=-6.2020,5.7499;0,0,i0\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[aspartic acid]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Asp]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[D]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,10)\\nC=-7.3830,8.0000;0,0,i0\\nO=-7.3830,9.5000;0,0,i0\\nC=-8.6820,7.2500;0,0,i1\\nX=-6.0840,7.2500;0,0,i0\\nN=-9.9811,8.0000;0,0,i1\\nC=-8.6820,5.7500;0,0,i2\\nC=-7.3830,5.0000;0,0,i2\\nC=-7.3828,3.5000;0,0,i0\\nO=-6.0838,2.7500;-1,0,i0\\nO=-8.6819,2.7500;0,0,i0\\nX=-11.2801,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n8-10=2,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[glutamic acid]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Glu]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[E]]></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,13)\\nC=-8.8000,8.0000;0,0,i0\\nO=-8.8000,9.5000;0,0,i0\\nC=-10.0990,7.2500;0,0,i1\\nX=-7.5010,7.2500;0,0,i0\\nN=-11.3981,8.0000;0,0,i1\\nC=-10.0990,5.7500;0,0,i2\\nC=-8.8000,5.0000;0,0,i0\\nC=-8.8000,3.5000;0,0,i1\\nC=-7.5010,5.7500;0,0,i1\\nC=-7.5010,2.7500;0,0,i1\\nC=-6.2019,3.5000;0,0,i1\\nC=-6.2019,5.0000;0,0,i1\\nX=-12.6971,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n5-13=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phenylalanine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Phe]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[F]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nC=-6.6349,8.0000;0,0,i0\\nO=-6.6349,9.5000;0,0,i0\\nC=-7.9339,7.2500;0,0,i2\\nX=-5.3359,7.2500;0,0,i0\\nN=-9.2330,8.0000;0,0,i1\\nX=-10.5320,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n5-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[glycine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Gly]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[G]]></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=-8.4232,8.0000;0,0,i0\\nO=-8.4232,9.5000;0,0,i0\\nC=-9.7222,7.2500;0,0,i1\\nX=-7.1242,7.2500;0,0,i0\\nN=-11.0213,8.0000;0,0,i1\\nC=-9.7222,5.7500;0,0,i2\\nC=-8.4232,5.0000;0,0,i0\\nC=-6.0475,4.4955;0,0,i1\\nN=-6.7961,3.2002;0,0,i1\\nC=-8.2664,3.5081;0,0,i1\\nN=-7.0492,5.6069;0,0,i0\\nX=-12.3203,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n10-9=1,0\\n9-8=1,0\\n8-11=2,0\\n11-7=1,0\\n7-10=2,0\\n5-12=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[histidine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[His]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[H]]></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-6.7216,8.0000;0,0,i0\\nO=-6.7216,9.5000;0,0,i0\\nC=-8.0206,7.2500;0,0,i1\\nX=-5.4226,7.2500;0,0,i0\\nN=-9.3197,8.0000;0,0,i1\\nC=-8.0206,5.7500;0,0,i1\\nC=-6.7216,5.0000;0,0,i2\\nC=-9.3196,5.0000;0,0,i3\\nC=-6.7214,3.5000;0,0,i3\\nX=-10.6187,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n6-8=1,0\\n7-9=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[isoleucine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ile]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[I]]></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,10)\\nC=-7.8553,8.0000;0,0,i0\\nO=-7.8553,9.5000;0,0,i0\\nC=-9.1543,7.2500;0,0,i1\\nX=-6.5563,7.2500;0,0,i0\\nN=-10.4534,8.0000;0,0,i1\\nC=-9.1543,5.7500;0,0,i2\\nC=-7.8553,5.0000;0,0,i2\\nC=-7.8552,3.5000;0,0,i2\\nC=-6.5561,2.7500;0,0,i2\\nN=-6.5561,1.2500;1,0,i3\\nX=-11.7524,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[lysine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Lys]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[K]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i1\\nC=-7.5008,3.5000;0,0,i3\\nC=-6.2019,5.7500;0,0,i3\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[leucine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Leu]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[L]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i2\\nS=-7.5008,3.5000;0,0,i0\\nC=-6.2018,2.7500;0,0,i3\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[methionine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Met]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[M]]></Cell>\\n</Row>\\n<Row id=\\\"12\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i0\\nN=-7.5008,3.5000;0,0,i2\\nO=-6.2019,5.7500;0,0,i0\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[asparagine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Asn]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[N]]></Cell>\\n</Row>\\n<Row id=\\\"13\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=-5.7561,8.0000;0,0,i0\\nO=-5.7561,9.5000;0,0,i0\\nC=-7.0551,7.2500;0,0,i1\\nX=-4.4571,7.2500;0,0,i0\\nC=-7.2122,5.7621;0,0,i2\\nC=-8.6806,5.4455;0,0,i2\\nN=-8.4222,7.8579;0,0,i0\\nC=-9.4306,6.7446;0,0,i2\\nX=-8.7323,9.3255;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n6-5=1,0\\n3-5=1,2\\n3-7=1,0\\n7-8=1,0\\n8-6=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[proline]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Pro]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[P]]></Cell>\\n</Row>\\n<Row id=\\\"14\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,10)\\nC=-7.3829,8.0000;0,0,i0\\nO=-7.3829,9.5000;0,0,i0\\nC=-8.6819,7.2500;0,0,i1\\nX=-6.0839,7.2500;0,0,i0\\nN=-9.9810,8.0000;0,0,i1\\nC=-8.6819,5.7500;0,0,i2\\nC=-7.3829,5.0000;0,0,i2\\nC=-7.3828,3.5000;0,0,i0\\nN=-6.0837,2.7500;0,0,i2\\nO=-8.6818,2.7500;0,0,i0\\nX=-11.2800,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n8-10=2,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[glutamine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Gln]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[Q]]></Cell>\\n</Row>\\n<Row id=\\\"15\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,12)\\nC=-11.2850,5.8016;0,0,i0\\nO=-11.2850,7.3016;0,0,i0\\nC=-12.5840,5.0517;0,0,i1\\nX=-9.9860,5.0516;0,0,i0\\nN=-13.8830,5.8017;0,0,i1\\nC=-12.5840,3.5516;0,0,i2\\nC=-11.2849,2.8015;0,0,i2\\nC=-11.2849,1.3015;0,0,i2\\nN=-9.9859,0.5516;0,0,i1\\nC=-9.9859,-0.9483;0,0,i0\\nN=-11.2850,-1.6984;1,0,i2\\nN=-8.6869,-1.6983;0,0,i2\\nX=-15.1821,5.0517;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=2,0\\n10-12=1,0\\n5-13=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[arginine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Arg]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[R]]></Cell>\\n</Row>\\n<Row id=\\\"16\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nC=-6.8514,8.0000;0,0,i0\\nO=-6.8514,9.5000;0,0,i0\\nC=-8.1504,7.2500;0,0,i1\\nX=-5.5525,7.2500;0,0,i0\\nN=-9.4496,8.0000;0,0,i1\\nC=-8.1504,5.7500;0,0,i2\\nO=-6.8514,5.0000;0,0,i1\\nX=-10.7486,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n5-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[serine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ser]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[S]]></Cell>\\n</Row>\\n<Row id=\\\"17\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,8)\\nC=-6.4906,8.0000;0,0,i0\\nO=-6.4906,9.5000;0,0,i0\\nC=-7.7896,7.2500;0,0,i1\\nX=-5.1916,7.2500;0,0,i0\\nN=-9.0887,8.0000;0,0,i1\\nC=-7.7896,5.7500;0,0,i1\\nC=-9.0887,5.0000;0,0,i3\\nO=-6.4906,5.0000;0,0,i1\\nX=-10.3877,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,2\\n3-6=1,0\\n6-7=1,0\\n6-8=1,2\\n5-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[threonine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Thr]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[T]]></Cell>\\n</Row>\\n<Row id=\\\"18\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,14)\\nC=-9.3567,8.0000;0,0,i0\\nO=-9.3567,9.5000;0,0,i0\\nC=-10.6557,7.2500;0,0,i1\\nX=-8.0577,7.2500;0,0,i0\\nN=-11.9548,8.0000;0,0,i1\\nC=-10.6557,5.7500;0,0,i2\\nC=-9.3567,5.0000;0,0,i0\\nC=-9.3567,3.5000;0,0,i1\\nC=-8.0577,5.7500;0,0,i1\\nC=-8.0577,2.7500;0,0,i1\\nC=-6.7586,3.5000;0,0,i0\\nC=-6.7586,5.0000;0,0,i1\\nO=-5.4596,2.7500;0,0,i1\\nX=-13.2538,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n11-13=1,0\\n5-14=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[tyrosine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Tyr]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[Y]]></Cell>\\n</Row>\\n<Row id=\\\"19\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,8)\\nC=-6.4906,8.0000;0,0,i0\\nO=-6.4906,9.5000;0,0,i0\\nC=-7.7896,7.2500;0,0,i1\\nX=-5.1916,7.2500;0,0,i0\\nN=-9.0887,8.0000;0,0,i1\\nC=-7.7896,5.7500;0,0,i1\\nC=-9.0887,5.0000;0,0,i3\\nC=-6.4906,5.0000;0,0,i3\\nX=-10.3877,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n6-8=1,0\\n5-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[valine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Val]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[V]]></Cell>\\n</Row>\\n<Row id=\\\"20\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,17)\\nC=-9.1949,8.0000;0,0,i0\\nO=-9.1949,9.5000;0,0,i0\\nC=-10.4939,7.2500;0,0,i1\\nX=-7.8959,7.2500;0,0,i0\\nN=-11.7930,8.0000;0,0,i1\\nC=-10.4939,5.7500;0,0,i2\\nC=-9.1949,5.0000;0,0,i0\\nC=-9.4755,2.2797;0,0,i1\\nC=-8.7255,0.9806;0,0,i1\\nC=-8.7255,3.5787;0,0,i0\\nC=-7.2255,0.9806;0,0,i1\\nC=-6.4755,2.2797;0,0,i1\\nC=-7.2255,3.5787;0,0,i0\\nC=-7.9866,5.8824;0,0,i1\\nN=-6.7662,5.0065;0,0,i1\\nX=-13.0920,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n8-9=1,0\\n8-10=2,0\\n9-11=2,0\\n11-12=1,0\\n12-13=2,0\\n13-10=1,0\\n10-7=1,0\\n7-14=2,0\\n14-15=1,0\\n15-13=1,0\\n5-16=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[tryptophan]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Trp]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[W]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Biomolecules</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"8\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,12)\\nN=0.7009,1.8000;0,0,i0\\nC=2.0000,2.5500;0,0,i1\\nC=-0.5981,2.5500;0,0,i0\\nN=2.0000,4.0500;0,0,i0\\nC=0.7009,4.8000;0,0,i0\\nC=-0.5981,4.0500;0,0,i0\\nN=-2.0194,2.0806;0,0,i0\\nC=-2.9018,3.2889;0,0,i1\\nN=-2.0260,4.5093;0,0,i0\\nN=0.7009,6.3000;0,0,i2\\nX=-2.4777,0.6523;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n5-10=1,0\\n7-11=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[adenine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,13)\\nN=0.7009,1.8000;0,0,i0\\nC=2.0000,2.5500;0,0,i0\\nC=-0.5981,2.5500;0,0,i0\\nN=2.0000,4.0500;0,0,i1\\nC=0.7009,4.8000;0,0,i0\\nC=-0.5981,4.0500;0,0,i0\\nN=-2.0194,2.0806;0,0,i0\\nC=-2.9018,3.2889;0,0,i1\\nN=-2.0260,4.5093;0,0,i0\\nO=0.7009,6.3000;0,0,i0\\nX=-2.4777,0.6523;0,0,i0\\nN=3.2990,1.8000;0,0,i2\\n1-2=2,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=2,0\\n3-7=1,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n5-10=2,0\\n7-11=1,0\\n2-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[guanine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=-1.7510,2.3500;0,0,i0\\nC=-3.0500,1.6000;0,0,i1\\nN=-0.4519,1.6000;0,0,i0\\nC=-3.0500,0.1000;0,0,i1\\nN=-1.7510,-0.6500;0,0,i0\\nC=-0.4519,0.1000;0,0,i0\\nN=-1.7510,3.8500;0,0,i2\\nO=0.8471,-0.6500;0,0,i0\\nX=-1.7510,-2.1500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n1-7=1,0\\n6-8=2,0\\n5-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cytosine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=-1.7510,2.3500;0,0,i0\\nC=-3.0500,1.6000;0,0,i1\\nN=-0.4519,1.6000;0,0,i1\\nC=-3.0500,0.1000;0,0,i1\\nN=-1.7510,-0.6500;0,0,i0\\nC=-0.4519,0.1000;0,0,i0\\nO=-1.7510,3.8500;0,0,i0\\nO=0.8471,-0.6500;0,0,i0\\nX=-1.7510,-2.1500;0,0,i0\\n1-2=1,0\\n3-1=1,0\\n2-4=2,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n1-7=2,0\\n6-8=2,0\\n5-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[uracil]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,10)\\nC=-1.7510,2.3500;0,0,i0\\nC=-3.0500,1.6000;0,0,i0\\nN=-0.4519,1.6000;0,0,i1\\nC=-3.0500,0.1000;0,0,i1\\nN=-1.7510,-0.6500;0,0,i0\\nC=-0.4519,0.1000;0,0,i0\\nO=-1.7510,3.8500;0,0,i0\\nO=0.8471,-0.6500;0,0,i0\\nX=-1.7510,-2.1500;0,0,i0\\nC=-4.3490,2.3500;0,0,i3\\n1-2=1,0\\n3-1=1,0\\n2-4=2,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n1-7=2,0\\n6-8=2,0\\n5-9=1,0\\n2-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[thymine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(27,29)\\nN=4.6026,-2.2500;0,0,i0\\nC=5.9018,-1.5000;0,0,i1\\nC=3.3036,-1.5000;0,0,i0\\nN=5.9018,0.0000;0,0,i0\\nC=4.6026,0.7500;0,0,i0\\nC=3.3036,0.0000;0,0,i0\\nN=1.8824,-1.9694;0,0,i0\\nC=1.0000,-0.7610;0,0,i1\\nN=1.8756,0.4593;0,0,i0\\nN=4.6026,2.2500;0,0,i2\\nC=1.4240,-3.3975;0,0,i1\\nO=0.0030,-3.8657;0,0,i0\\nC=0.0040,-5.3680;0,0,i1\\nC=2.3071,-4.6051;0,0,i1\\nC=1.4322,-5.8263;0,0,i1\\nO=3.8071,-4.5978;0,0,i1\\nO=1.9031,-7.2505;0,0,i1\\nC=-1.2076,-6.2522;0,0,i2\\nO=-2.5790,-5.6451;0,0,i0\\nP=-3.7905,-6.5296;0,0,i0\\nO=-4.6750,-5.3179;0,0,i0\\nO=-2.9062,-7.7412;0,0,i1\\nO=-5.0022,-7.4140;0,0,i0\\nP=-6.3738,-6.8069;0,0,i0\\nO=-5.7668,-5.4352;0,0,i0\\nO=-6.9808,-8.1786;0,0,i1\\nO=-7.7455,-6.1998;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n5-10=1,0\\n11-7=1,1\\n13-12=1,0\\n12-11=1,0\\n11-14=1,0\\n14-15=1,0\\n15-13=1,0\\n14-16=1,2\\n15-17=1,2\\n13-18=1,1\\n18-19=1,0\\n20-21=2,0\\n20-22=1,0\\n20-23=1,0\\n20-19=1,0\\n24-25=2,0\\n24-26=1,0\\n24-27=1,0\\n24-23=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[ADP]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,19)\\nC=2.2100,1.1549;0,0,i0\\nN=1.0000,0.2749;0,0,i1\\nC=1.4600,-1.1549;0,0,i0\\nN=3.4200,0.2749;0,0,i1\\nC=2.9600,-1.1549;0,0,i0\\nC=3.4282,-2.5763;0,0,i1\\nS=2.2199,-3.4587;0,0,i0\\nC=0.9995,-2.5829;0,0,i2\\nO=2.2100,2.6549;0,0,i0\\nH=4.4599,-1.1497;0,0,i0\\nH=-0.0399,-1.1545;0,0,i0\\nC=4.8563,-3.0352;0,0,i2\\nC=5.9677,-2.0279;0,0,i2\\nC=7.3958,-2.4869;0,0,i2\\nC=8.5073,-1.4796;0,0,i2\\nC=9.9353,-1.9386;0,0,i0\\nO=11.0468,-0.9314;0,0,i0\\nO=10.2519,-3.4048;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-3=1,0\\n1-9=2,0\\n5-10=1,1\\n3-11=1,1\\n6-12=1,2\\n12-13=1,0\\n13-14=1,0\\n14-15=1,0\\n16-17=2,0\\n16-18=1,0\\n16-15=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[biotin]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(24,27)\\nC=-7.1991,2.0500;0,0,i1\\nC=-8.4981,1.3000;0,0,i1\\nC=-8.4981,-0.2000;0,0,i0\\nC=-7.1991,-0.9500;0,0,i1\\nC=-5.9000,-0.2000;0,0,i0\\nC=-5.9000,1.3000;0,0,i0\\nC=-4.6009,-0.9500;0,0,i2\\nC=-3.3019,-0.2000;0,0,i2\\nC=-3.3019,1.3000;0,0,i0\\nC=-4.6009,2.0500;0,0,i0\\nC=-2.0028,2.0500;0,0,i0\\nC=-2.0028,3.5500;0,0,i0\\nC=-3.3018,4.3000;0,0,i2\\nC=-4.6008,3.5501;0,0,i2\\nC=-0.5814,4.0194;0,0,i1\\nC=0.3009,2.8111;0,0,i1\\nC=-0.5749,1.5907;0,0,i2\\nO=-9.7971,-0.9500;0,0,i1\\nH=-4.6009,0.5500;0,0,i0\\nH=-3.3019,2.8000;0,0,i0\\nH=-2.0028,0.5500;0,0,i0\\nC=-2.0028,5.0500;0,0,i3\\nO=-0.1231,5.4476;0,0,i1\\nO=1.8009,2.8174;0,0,i1\\n2-3=2,0\\n2-1=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=2,0\\n8-9=1,0\\n8-7=1,0\\n9-10=1,0\\n10-6=1,0\\n5-7=1,0\\n12-13=1,0\\n12-11=1,0\\n13-14=1,0\\n14-10=1,0\\n9-11=1,0\\n12-15=1,0\\n15-16=1,0\\n16-17=1,0\\n17-11=1,0\\n3-18=1,0\\n10-19=1,2\\n9-20=1,1\\n11-21=1,2\\n12-22=1,1\\n15-23=1,1\\n16-24=1,2\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[estrogen]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Saccharides</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"7\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.0000,0.5911;0,0,i1\\nC=2.2990,0.1911;0,0,i1\\nC=1.7500,-0.7078;0,0,i1\\nO=3.5981,0.9411;0,0,i0\\nC=3.0490,0.0421;0,0,i1\\nC=4.3481,-0.7078;0,0,i1\\nO=-0.2797,-0.1912;0,0,i1\\nO=0.2727,-0.9682;0,0,i1\\nC=1.4079,1.3978;0,0,i2\\nO=2.0074,2.7728;0,0,i1\\nO=3.4372,-1.4066;0,0,i1\\nO=4.5368,-2.1958;0,0,i1\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n1-7=1,0\\n3-8=1,0\\n2-9=1,0\\n9-10=1,0\\n5-11=1,0\\n6-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose alpha]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.0000,0.5910;0,0,i1\\nC=2.2990,0.1911;0,0,i1\\nC=1.7500,-0.7077;0,0,i1\\nO=3.5980,0.9411;0,0,i0\\nC=3.0490,0.0421;0,0,i1\\nC=4.3481,-0.7077;0,0,i1\\nO=-0.2797,-0.1912;0,0,i1\\nO=0.2727,-0.9682;0,0,i1\\nC=1.4078,1.3977;0,0,i2\\nO=2.0074,2.7727;0,0,i1\\nO=3.4372,-1.4065;0,0,i1\\nO=5.6169,0.0920;0,0,i1\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n1-7=1,0\\n3-8=1,0\\n2-9=1,0\\n9-10=1,0\\n5-11=1,0\\n6-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose beta]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,15)\\nC=1.5000,0.0000;0,0,i0\\nC=1.4999,1.5000;0,0,i1\\nC=1.4999,-1.5000;0,0,i0\\nO=3.0000,0.0000;0,0,i1\\nH=0.0000,0.0000;0,0,i0\\nC=1.4999,-3.0000;0,0,i0\\nH=2.9999,-1.5000;0,0,i0\\nO=-0.0000,-1.4999;0,0,i1\\nC=1.4999,-4.5000;0,0,i0\\nO=2.9999,-3.0000;0,0,i1\\nH=-0.0000,-2.9999;0,0,i0\\nC=1.4999,-6.0000;0,0,i2\\nO=2.9999,-4.5000;0,0,i1\\nH=-0.0000,-4.5000;0,0,i0\\nO=2.7990,-6.7500;0,0,i1\\nO=0.2009,2.2499;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n3-6=1,0\\n3-7=1,0\\n3-8=1,0\\n6-9=1,0\\n6-10=1,0\\n6-11=1,0\\n9-12=1,0\\n9-13=1,0\\n9-14=1,0\\n12-15=1,0\\n2-16=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose chain]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.3913,1.2718;0,0,i1\\nC=0.4839,-0.0000;0,0,i1\\nC=1.3913,-1.2718;0,0,i1\\nC=3.2063,-1.2718;0,0,i1\\nC=4.1139,0.0000;0,0,i1\\nO=3.2063,1.2718;0,0,i0\\nC=1.3912,2.7718;0,0,i2\\nO=4.1139,-1.4998;0,0,i1\\nO=3.2128,-2.7718;0,0,i1\\nO=1.3717,0.2280;0,0,i1\\nO=0.4839,-1.5000;0,0,i1\\nO=0.0922,3.5218;0,0,i1\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n1-7=1,1\\n5-8=1,2\\n4-9=1,2\\n3-10=1,1\\n2-11=1,2\\n7-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose alpha]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.3912,1.2718;0,0,i1\\nC=0.4839,-0.0000;0,0,i1\\nC=1.3912,-1.2718;0,0,i1\\nC=3.2063,-1.2718;0,0,i1\\nC=4.1139,0.0000;0,0,i1\\nO=3.2063,1.2718;0,0,i0\\nC=1.3911,2.7718;0,0,i2\\nO=4.1139,1.4997;0,0,i1\\nO=3.2128,-2.7718;0,0,i1\\nO=1.3717,0.2280;0,0,i1\\nO=0.4839,-1.5000;0,0,i1\\nO=0.0922,3.5218;0,0,i1\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n1-7=1,1\\n5-8=1,1\\n4-9=1,2\\n3-10=1,1\\n2-11=1,2\\n7-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose beta]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nO=2.2100,1.1549;0,0,i0\\nC=1.0000,0.2749;0,0,i0\\nC=1.4600,-1.1549;0,0,i1\\nC=3.4200,0.2749;0,0,i1\\nC=2.9600,-1.1549;0,0,i1\\nO=3.8434,-2.3672;0,0,i1\\nC=4.8460,0.7402;0,0,i2\\nO=5.1561,2.2078;0,0,i1\\nC=-0.4260,0.7402;0,0,i2\\nO=-1.5419,-0.2621;0,0,i1\\nO=0.7658,1.7566;0,0,i1\\nO=0.5765,-2.3672;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=1,1\\n4-7=1,2\\n7-8=1,0\\n2-9=1,2\\n9-10=1,0\\n2-11=1,1\\n3-12=1,2\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[fructose alpha]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nO=2.2100,1.1549;0,0,i0\\nC=1.0000,0.2749;0,0,i0\\nC=1.4600,-1.1549;0,0,i1\\nC=3.4200,0.2749;0,0,i1\\nC=2.9600,-1.1549;0,0,i1\\nO=3.8434,-2.3672;0,0,i1\\nC=4.8460,0.7402;0,0,i2\\nO=5.1561,2.2078;0,0,i1\\nO=-0.4260,0.7402;0,0,i1\\nC=0.7658,1.7566;0,0,i2\\nO=0.5765,-2.3672;0,0,i1\\nO=-0.6344,2.2946;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=1,1\\n4-7=1,2\\n7-8=1,0\\n2-9=1,2\\n2-10=1,1\\n3-11=1,2\\n10-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[fructose beta]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","import { Graph } from '../mol/Graph';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { GeomUtil } from '../util/Geom';\nimport { angleDiffPos, DEGRAD, norm2_xy, norm_xy, signum, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport class MetalLigate {\n    constructor(mol, metalAtom, ligandAttach) {\n        this.metalAtom = metalAtom;\n        this.ligandAttach = ligandAttach;\n        this.ligands = [];\n        this.mol = mol.clone();\n    }\n    generate() {\n        const { mol, metalAtom, ligandAttach, ligands } = this;\n        let g = Graph.fromMolecule(mol);\n        g.isolateNode(metalAtom - 1);\n        for (let cc of g.calculateComponentGroups()) {\n            Vec.addTo(cc, 1);\n            let anything = false;\n            for (let a of ligandAttach)\n                if (cc.indexOf(a) >= 0) {\n                    anything = true;\n                    break;\n                }\n            if (!anything)\n                continue;\n            let lig = { atoms: cc, attach: [] };\n            lig.atoms = cc;\n            let anyAttached = false;\n            for (let a of lig.atoms)\n                if (mol.findBond(a, metalAtom) > 0) {\n                    anyAttached = true;\n                    break;\n                }\n            for (let a of lig.atoms) {\n                let bonded = mol.findBond(a, metalAtom) > 0;\n                if (bonded || (!anyAttached && ligandAttach.includes(a)))\n                    lig.attach.push(a);\n            }\n            ligands.push(lig);\n            for (let a of lig.attach)\n                if (mol.findBond(a, metalAtom) == 0)\n                    this.makeLigandBond(a);\n        }\n        if (ligands.length == 0)\n            throw new Error('No ligand atoms');\n        let otherLigands = mol.atomAdjList(metalAtom);\n        for (let lig of ligands)\n            otherLigands = Vec.exclude(otherLigands, lig.attach);\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let otherTheta = new Array(otherLigands.length);\n        for (let n = 0; n < otherLigands.length; n++)\n            otherTheta[n] = Math.atan2(mol.atomY(otherLigands[n]) - my, mol.atomX(otherLigands[n]) - mx);\n        for (let lig of ligands) {\n            if (lig.attach.length == 1) {\n                let a = lig.attach[0];\n                lig.avgTheta = Math.atan2(mol.atomY(a) - my, mol.atomX(a) - mx);\n                this.orientLigand(lig);\n            }\n            else {\n                let theta = new Array(lig.attach.length);\n                for (let n = 0; n < lig.attach.length; n++) {\n                    let a = lig.attach[n];\n                    theta[n] = Math.atan2(mol.atomY(a) - my, mol.atomX(a) - mx);\n                }\n                theta = GeomUtil.sortAngles(theta);\n                let base = theta[0];\n                for (let n = 0; n < theta.length; n++)\n                    theta[n] = angleDiffPos(theta[n], base);\n                lig.avgTheta = base + Vec.sum(theta) / theta.length;\n                this.orientLigand(lig);\n            }\n        }\n        if (otherLigands.length == 0) {\n            ligands.sort((l1, l2) => signum(l1.avgTheta - l2.avgTheta));\n            this.arrangeLigandsFree(ligands);\n        }\n        else if (otherLigands.length == 1) {\n            ligands.sort((l1, l2) => {\n                let diff1 = angleDiffPos(l1.avgTheta, otherTheta[0]);\n                let diff2 = angleDiffPos(l2.avgTheta, otherTheta[0]);\n                return signum(diff1 - diff2);\n            });\n            this.arrangeLigandsRange(ligands, otherTheta[0], TWOPI, true);\n        }\n        else {\n            let otherOrder = Vec.idxSort(otherTheta);\n            for (let n = 0; n < otherOrder.length; n++) {\n                let nn = (n + 1) % otherOrder.length;\n                let theta = otherTheta[otherOrder[n]];\n                let extent = angleDiffPos(otherTheta[otherOrder[nn]], theta);\n                let batch = [];\n                for (let lig of ligands) {\n                    let diff = angleDiffPos(lig.avgTheta, theta);\n                    if (diff < extent)\n                        batch.push(lig);\n                }\n                if (batch.length == 0)\n                    continue;\n                batch.sort((l1, l2) => {\n                    let diff1 = angleDiffPos(l1.avgTheta, theta);\n                    let diff2 = angleDiffPos(l2.avgTheta, theta);\n                    return signum(diff1 - diff2);\n                });\n                this.arrangeLigandsRange(batch, theta, extent, true);\n            }\n        }\n        this.resolveClashes();\n        return mol;\n    }\n    makeLigandBond(ligAtom) {\n        const { mol, metalAtom } = this;\n        let mchg = mol.atomCharge(metalAtom), lchg = mol.atomCharge(ligAtom);\n        if (mchg > 0 && lchg < 0) {\n            mol.setAtomCharge(metalAtom, mchg - 1);\n            mol.setAtomCharge(ligAtom, lchg + 1);\n            mol.addBond(metalAtom, ligAtom, 1);\n            return;\n        }\n        if (mchg < 0 && lchg > 0) {\n            mol.setAtomCharge(metalAtom, mchg + 1);\n            mol.setAtomCharge(ligAtom, lchg - 1);\n            mol.addBond(metalAtom, ligAtom, 1);\n            return;\n        }\n        let order = 0;\n        if (mol.atomHExplicit(ligAtom) == Molecule.HEXPLICIT_UNKNOWN && mol.atomHydrogens(ligAtom) > 0)\n            order = 1;\n        mol.addBond(metalAtom, ligAtom, order);\n    }\n    orientLigand(lig) {\n        const { mol, metalAtom } = this;\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let lsz = lig.atoms.length, asz = lig.attach.length;\n        let idxAttach = new Array(asz);\n        for (let n = 0; n < asz; n++)\n            idxAttach[n] = lig.atoms.indexOf(lig.attach[n]);\n        let lx = new Array(lsz), ly = new Array(lsz);\n        let ax = MolUtil.arrayAtomX(mol), ay = MolUtil.arrayAtomY(mol);\n        let molExtent = Vec.max(ax) - Vec.min(ax) + Vec.max(ay) - Vec.min(ay);\n        let dx = molExtent * Math.cos(lig.avgTheta), dy = molExtent * Math.sin(lig.avgTheta);\n        for (let n = 0; n < lsz; n++) {\n            lx[n] = mol.atomX(lig.atoms[n]) + dx;\n            ly[n] = mol.atomY(lig.atoms[n]) + dy;\n        }\n        let cx = Vec.sum(lx) / lsz, cy = Vec.sum(ly) / lsz;\n        let weight = [];\n        for (let n = 0; n < lsz; n++) {\n            let closest = Number.POSITIVE_INFINITY;\n            for (let idx of idxAttach)\n                closest = Math.min(closest, norm2_xy(lx[n] - lx[idx], ly[n] - ly[idx]));\n            weight.push(1.0 / (1 + Math.sqrt(closest)));\n        }\n        let bestScore = Number.POSITIVE_INFINITY;\n        let bestLX = null, bestLY = null;\n        for (let theta = 0; theta < 360; theta += 15) {\n            let cosTheta = Math.cos(theta * DEGRAD), sinTheta = Math.sin(theta * DEGRAD);\n            let rx = new Array(lsz), ry = new Array(lsz);\n            let score = 0;\n            for (let n = 0; n < lsz; n++) {\n                let x = lx[n] - cx, y = ly[n] - cy;\n                rx[n] = cx + x * cosTheta - y * sinTheta;\n                ry[n] = cy + x * sinTheta + y * cosTheta;\n                let dist = norm_xy(rx[n] - mx, ry[n] - my);\n                if (lig.attach.indexOf(lig.atoms[n]) >= 0)\n                    score += dist;\n                else\n                    score -= dist * weight[n];\n            }\n            if (score < bestScore) {\n                bestScore = score;\n                bestLX = rx;\n                bestLY = ry;\n            }\n        }\n        lx = bestLX;\n        ly = bestLY;\n        if (asz == 1) {\n            dx = Molecule.IDEALBOND * Math.cos(lig.avgTheta);\n            dy = Molecule.IDEALBOND * Math.sin(lig.avgTheta);\n            Vec.addTo(lx, mx + dx - lx[idxAttach[0]]);\n            Vec.addTo(ly, my + dy - ly[idxAttach[0]]);\n        }\n        else {\n            let attTheta = new Array(asz), attDist = Vec.numberArray(0, asz), attDX = Vec.numberArray(0, asz), attDY = Vec.numberArray(0, asz);\n            for (let n = 0; n < asz; n++) {\n                let ox = lx[idxAttach[n]] - mx, oy = ly[idxAttach[n]] - my;\n                attTheta[n] = Math.atan2(oy, ox);\n                if (asz > 2) {\n                    attDist[n] = norm_xy(ox, oy);\n                    attDX[n] = ox / attDist[n];\n                    attDY[n] = oy / attDist[n];\n                }\n            }\n            Vec.addTo(attDist, -Vec.min(attDist));\n            let orderAttach = GeomUtil.idxSortAngles(attTheta);\n            let srcX = new Array(asz), srcY = new Array(asz);\n            let dstX = new Array(asz), dstY = new Array(asz);\n            let dtheta = 45 * DEGRAD / (asz - 1), theta = lig.avgTheta - 0.5 * dtheta;\n            for (let n = 0; n < asz; n++) {\n                srcX[n] = lx[idxAttach[orderAttach[n]]];\n                srcY[n] = ly[idxAttach[orderAttach[n]]];\n                dstX[n] = mx + Molecule.IDEALBOND * Math.cos(theta) + attDist[n] * attDX[n];\n                dstY[n] = my + Molecule.IDEALBOND * Math.sin(theta) + attDist[n] * attDY[n];\n                theta += dtheta / (asz - 1);\n            }\n            let tfm = GeomUtil.superimpose(srcX, srcY, dstX, dstY);\n            for (let n = 0; n < lsz; n++) {\n                let [x, y] = GeomUtil.applyAffine(lx[n], ly[n], tfm);\n                lx[n] = x;\n                ly[n] = y;\n            }\n        }\n        for (let n = 0; n < lsz; n++)\n            mol.setAtomPos(lig.atoms[n], lx[n], ly[n]);\n    }\n    arrangeLigandsFree(batch) {\n        if (batch.length == 1)\n            return;\n        let refTheta = Vec.last(batch).avgTheta;\n        refTheta += 0.5 * angleDiffPos(Vec.first(batch).avgTheta, refTheta);\n        this.arrangeLigandsRange(batch, refTheta, TWOPI, false);\n    }\n    arrangeLigandsRange(batch, refTheta, refSpan, bounded) {\n        const { mol, metalAtom } = this;\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let bsz = batch.length;\n        let thetaMin = new Array(bsz), thetaSpan = new Array(bsz);\n        let ligandSpan = 0;\n        for (let n = 0; n < bsz; n++) {\n            let [theta1, theta2] = this.determineThetaBounds(batch[n]);\n            thetaMin[n] = theta1;\n            thetaSpan[n] = angleDiffPos(theta2, theta1);\n            ligandSpan += thetaSpan[n];\n        }\n        let residual = (refSpan - ligandSpan) / (bsz + (bounded ? 1 : 0));\n        let theta = refTheta + (bounded ? residual : 0.5 * residual);\n        for (let n = 0; n < bsz; n++) {\n            let rotTheta = theta - thetaMin[n];\n            let cosTheta = Math.cos(rotTheta), sinTheta = Math.sin(rotTheta);\n            for (let a of batch[n].atoms) {\n                let x = mol.atomX(a) - mx, y = mol.atomY(a) - my;\n                mol.setAtomPos(a, mx + x * cosTheta - y * sinTheta, my + x * sinTheta + y * cosTheta);\n            }\n            theta += thetaSpan[n] + residual;\n        }\n    }\n    determineThetaBounds(lig) {\n        const { mol, metalAtom } = this;\n        let theta = [];\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        for (let n = 0; n < lig.attach.length; n++) {\n            let x = mol.atomX(lig.attach[n]) - mx;\n            let y = mol.atomY(lig.attach[n]) - my;\n            theta.push(Math.atan2(y, x));\n        }\n        Vec.sort(theta);\n        let bestScore = Number.POSITIVE_INFINITY, bestMin = 0, bestMax = 0;\n        for (let n = 0; n < theta.length; n++) {\n            let score = 0;\n            for (let i = 0; i < theta.length - 1; i++)\n                score += angleDiffPos(theta[i + 1], theta[i]);\n            if (score < bestScore) {\n                bestScore = score;\n                bestMin = Vec.first(theta);\n                bestMax = Vec.last(theta);\n            }\n            theta.push(theta.shift());\n        }\n        return [bestMin, bestMax];\n    }\n    resolveClashes() {\n        const { mol, metalAtom, ligands } = this;\n        const na = mol.numAtoms, nb = mol.numBonds, lsz = this.ligands.length;\n        let ablk = Vec.numberArray(-1, na), bblk = Vec.numberArray(-1, nb);\n        for (let n = 1; n <= na; n++)\n            if (mol.atomConnComp(n) == mol.atomConnComp(metalAtom))\n                ablk[n - 1] = 0;\n        for (let n = 0; n < lsz; n++)\n            for (let a of ligands[n].atoms)\n                ablk[a - 1] = n + 1;\n        for (let n = 1; n <= nb; n++) {\n            let blk1 = ablk[mol.bondFrom(n) - 1], blk2 = ablk[mol.bondTo(n) - 1];\n            if (blk1 < 0 || blk2 < 0) { }\n            else if (blk1 == blk2)\n                bblk[n - 1] = blk1;\n        }\n        let bumpDX = new Array(lsz), bumpDY = new Array(lsz);\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        for (let n = 0; n < lsz; n++) {\n            let lig = ligands[n];\n            let dx = 0, dy = 0;\n            for (let a of lig.attach) {\n                dx += mol.atomX(a) - mx;\n                dy += mol.atomY(a) - my;\n            }\n            dx /= lig.attach.length;\n            dy /= lig.attach.length;\n            let invDist = 1.0 / norm_xy(dx, dy);\n            bumpDX[n] = dx * 0.5 * invDist;\n            bumpDY[n] = dy * 0.5 * invDist;\n        }\n        const CLOSE_SQ = sqr(0.5);\n        for (let count = 0; count < 12; count++) {\n            let tainted = Vec.booleanArray(false, lsz);\n            outer: for (let i = 0; i < na - 1; i++) {\n                if (ablk[i] < 0)\n                    continue;\n                for (let j = i + 1; j < na; j++)\n                    if (ablk[j] >= 0 && ablk[j] != ablk[i]) {\n                        if (norm2_xy(mol.atomX(i + 1) - mol.atomX(j + 1), mol.atomY(i + 1) - mol.atomY(j + 1)) < CLOSE_SQ) {\n                            if (ablk[i] > 0)\n                                tainted[ablk[i] - 1] = true;\n                            if (ablk[j] > 0)\n                                tainted[ablk[j] - 1] = true;\n                        }\n                        if (Vec.allTrue(tainted))\n                            break outer;\n                    }\n            }\n            if (Vec.anyFalse(tainted))\n                outer: for (let i = 0; i < nb - 1; i++) {\n                    if (bblk[i] < 0)\n                        continue;\n                    let x1 = mol.atomX(mol.bondFrom(i + 1)), y1 = mol.atomY(mol.bondFrom(i + 1));\n                    let x2 = mol.atomX(mol.bondTo(i + 1)), y2 = mol.atomY(mol.bondTo(i + 1));\n                    for (let j = i + 1; j < nb; j++)\n                        if (bblk[j] >= 0 && bblk[j] != bblk[i]) {\n                            let x3 = mol.atomX(mol.bondFrom(j + 1)), y3 = mol.atomY(mol.bondFrom(j + 1));\n                            let x4 = mol.atomX(mol.bondTo(j + 1)), y4 = mol.atomY(mol.bondTo(j + 1));\n                            if (GeomUtil.doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4)) {\n                                if (bblk[i] > 0)\n                                    tainted[bblk[i] - 1] = true;\n                                if (bblk[j] > 0)\n                                    tainted[bblk[j] - 1] = true;\n                            }\n                            if (Vec.allTrue(tainted))\n                                break outer;\n                        }\n                }\n            if (Vec.allFalse(tainted))\n                break;\n            for (let n = 0; n < lsz; n++)\n                if (tainted[n]) {\n                    for (let a of ligands[n].atoms) {\n                        mol.setAtomPos(a, mol.atomX(a) + bumpDX[n], mol.atomY(a) + bumpDY[n]);\n                    }\n                }\n        }\n    }\n}\n//# sourceMappingURL=MetalLigate.js.map","import { BondArtifact } from '../mol/BondArtifact';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { Graph } from '../mol/Graph';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock } from '../mol/PolymerBlock';\nimport { SketchUtil } from '../mol/SketchUtil';\nimport { angleDiff, DEGRAD, norm_xy, RADDEG } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport class FusionPermutation {\n    constructor() {\n        this.attdist = 0;\n        this.guided = false;\n        this.bridged = false;\n        this.scoreModifier = 0;\n        this.chainSelect = 0;\n    }\n}\nclass TemplateFusion {\n    constructor(mol, templ, abbrev) {\n        this.mol = mol;\n        this.templ = templ;\n        this.abbrev = abbrev;\n        this.perms = [];\n        this.numAttach = 0;\n        this.withGuideOnly = false;\n        this.guidetempl = null;\n        this.guideidx = [];\n        this.guideadj = [];\n        this.timeLimit = 5.0;\n        let artif1 = new BondArtifact(mol), artif2 = new BondArtifact(templ);\n        artif2.harmoniseNumbering(artif1);\n        artif2.rewriteMolecule();\n        let poly1 = new PolymerBlock(mol), poly2 = new PolymerBlock(templ);\n        poly2.harmoniseNumbering(poly1);\n        poly2.rewriteMolecule();\n        this.huntForGuides();\n    }\n    permuteNone() {\n        let numAttach = 0;\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        if (oldmol.numAtoms > 0) {\n            let oldbox = oldmol.boundary(), newbox = newmol.boundary();\n            let dx = oldbox.maxX() + 1 - newbox.minX();\n            let dy = 0.5 * (oldbox.minY() + oldbox.maxY()) - 0.5 * (newbox.minY() + newbox.maxY());\n            CoordUtil.translateMolecule(newmol, dx, dy);\n        }\n        else {\n            let newbox = newmol.boundary();\n            CoordUtil.translateMolecule(newmol, -newbox.midX(), -newbox.midY());\n        }\n        let oldbox = oldmol.boundary(), newbox = newmol.boundary();\n        let cx = newbox.midX(), cy = newbox.midY();\n        let ROTN = [0, 30, 45, 60, 90, 120, 135, 150, 180, 210, 225, 240, 270, 300, 315, 330];\n        duplicate: for (let n = 0; n < ROTN.length; n++) {\n            let rotmol = newmol.clone();\n            CoordUtil.rotateMolecule(rotmol, -ROTN[n] * DEGRAD, cx, cy);\n            for (let i = 0; i < this.perms.length; i++)\n                if (CoordUtil.sketchEquivalent(rotmol, this.perms[i].display))\n                    continue duplicate;\n            let p = new FusionPermutation();\n            p.mol = oldmol.clone();\n            p.mol.append(rotmol);\n            p.display = rotmol;\n            p.srcidx = this.sourceIndex(p.mol, oldmol);\n            p.attdist = 0;\n            p.guided = false;\n            this.perms.push(p);\n        }\n    }\n    permuteAtom(atom) {\n        this.numAttach = 1;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            for (let n = 0; n < this.guideidx.length; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeGuidedOne(newperms, oldmol, this.guidetempl, atom, this.guideidx[n]);\n                this.composeGuidedOne(newperms, oldmol, fliptempl, atom, this.guideidx[n]);\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numAtoms; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeDirectOne(newperms, oldmol, newmol, atom, n);\n                this.composeDirectOne(newperms, oldmol, flipmol, atom, n);\n                this.composeBridge(newperms, oldmol, newmol, atom, n);\n                this.composeBridge(newperms, oldmol, flipmol, atom, n);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    permuteBond(a1, a2) {\n        this.numAttach = 2;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            for (let i = 0; i < this.guideidx.length; i++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                let g1 = this.guideidx[i];\n                let adj = this.guidetempl.atomAdjList(g1);\n                for (let j = 0; j < adj.length; j++) {\n                    let g2 = adj[j];\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a1, a2, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a2, a1, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a1, a2, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a2, a1, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a1, a2, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a2, a1, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a1, a2, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a2, a1, g1, g2, false);\n                }\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numBonds; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                let nfr = newmol.bondFrom(n), nto = newmol.bondTo(n);\n                this.composeDirectTwo(newperms, oldmol, newmol, a1, a2, nfr, nto);\n                this.composeDirectTwo(newperms, oldmol, flipmol, a1, a2, nfr, nto);\n                this.composeDirectTwo(newperms, oldmol, newmol, a1, a2, nto, nfr);\n                this.composeDirectTwo(newperms, oldmol, flipmol, a1, a2, nto, nfr);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    permuteMulti(atoms) {\n        this.numAttach = atoms.length;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            if (this.guideidx.length == atoms.length) {\n                this.composeGuidedMulti(newperms, oldmol, this.guidetempl, atoms, this.guideidx, true);\n                this.composeGuidedMulti(newperms, oldmol, fliptempl, atoms, this.guideidx, true);\n            }\n            if (this.guideadj.length == atoms.length) {\n                this.composeGuidedMulti(newperms, oldmol, this.guidetempl, atoms, this.guideadj, false);\n                this.composeGuidedMulti(newperms, oldmol, fliptempl, atoms, this.guideadj, false);\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numAtoms; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeDirectMulti(newperms, oldmol, newmol, atoms, n);\n                this.composeDirectMulti(newperms, oldmol, flipmol, atoms, n);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    huntForGuides() {\n        this.guideidx = [];\n        this.guideadj = [];\n        for (let n = 1; n <= this.templ.numAtoms; n++)\n            if (this.templ.atomElement(n) == 'X' && this.templ.atomAdjCount(n) > 0) {\n                this.guideidx.push(n);\n                let adj = this.templ.atomAdjList(n);\n                for (let i = 0; i < adj.length; i++)\n                    if (this.guideadj.indexOf(adj[i]) < 0)\n                        this.guideadj.push(adj[i]);\n            }\n        if (this.guideidx.length > 0) {\n            this.guidetempl = this.templ.clone();\n            for (let n = this.guideidx.length - 1; n >= 0; n--)\n                this.templ.deleteAtomAndBonds(this.guideidx[n]);\n        }\n    }\n    composeDirectOne(list, oldmol, newmol, o1, n1) {\n        let otheta = SketchUtil.primeDirections(oldmol, o1);\n        let ntheta = SketchUtil.primeDirections(newmol, n1);\n        let ocurrent = CoordUtil.atomBondAngles(oldmol, o1);\n        let ncurrent = CoordUtil.atomBondAngles(newmol, n1);\n        let theta1 = [], theta2 = [], scoreMod = [];\n        for (let i = 0; i < ocurrent.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                theta1.push(ocurrent[i]);\n                theta2.push(ntheta[j]);\n                scoreMod.push(-51);\n            }\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ncurrent.length; j++) {\n                theta1.push(otheta[i]);\n                theta2.push(ncurrent[j]);\n                scoreMod.push(0);\n            }\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                theta1.push(otheta[i]);\n                theta2.push(ntheta[j]);\n                scoreMod.push(0);\n            }\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1), nx = newmol.atomX(n1), ny = newmol.atomY(n1);\n        for (let n = 0; n < theta1.length; n++) {\n            let dth = angleDiff(theta1[n], theta2[n]);\n            let frag = newmol.clone();\n            CoordUtil.translateMolecule(frag, ox - nx, oy - ny);\n            CoordUtil.rotateMolecule(frag, dth, ox, oy);\n            let pmol = oldmol.clone();\n            let osz = pmol.numAtoms;\n            pmol.append(frag);\n            let srcidx = this.sourceIndex(pmol, oldmol);\n            SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n            if (pmol.numAtoms == osz)\n                continue;\n            let p = new FusionPermutation();\n            p.mol = pmol;\n            p.display = frag;\n            p.srcidx = srcidx;\n            p.molidx = [o1];\n            p.temidx = [n1];\n            p.attdist = bfs[n1 - 1];\n            p.guided = false;\n            p.scoreModifier = scoreMod[n];\n            this.removeExtraGuides(p, oldmol);\n            list.push(p);\n        }\n    }\n    composeDirectTwo(list, oldmol, newmol, o1, o2, n1, n2) {\n        let oth = Math.atan2(oldmol.atomY(o2) - oldmol.atomY(o1), oldmol.atomX(o2) - oldmol.atomX(o1));\n        let nth = Math.atan2(newmol.atomY(n2) - newmol.atomY(n1), newmol.atomX(n2) - newmol.atomX(n1));\n        let cx = 0.5 * (oldmol.atomX(o1) + oldmol.atomX(o2)), cy = 0.5 * (oldmol.atomY(o1) + oldmol.atomY(o2));\n        let frag = newmol.clone();\n        CoordUtil.translateMolecule(frag, cx - 0.5 * (newmol.atomX(n1) + newmol.atomX(n2)), cy - 0.5 * (newmol.atomY(n1) + newmol.atomY(n2)));\n        CoordUtil.rotateMolecule(frag, oth - nth, cx, cy);\n        frag.setAtomPos(n1, oldmol.atomX(o1), oldmol.atomY(o1));\n        frag.setAtomPos(n2, oldmol.atomX(o2), oldmol.atomY(o2));\n        let pmol = oldmol.clone();\n        let osz = pmol.numAtoms;\n        pmol.append(frag);\n        let srcidx = this.sourceIndex(pmol, oldmol);\n        SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n        if (pmol.numAtoms == osz)\n            return;\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        let p = new FusionPermutation();\n        p.mol = pmol;\n        p.display = frag;\n        p.srcidx = srcidx;\n        p.molidx = [o1, o2];\n        p.temidx = [n1, n2];\n        p.attdist = Math.min(bfs[n1 - 1], bfs[n2 - 1]);\n        p.guided = false;\n        this.removeExtraGuides(p, oldmol);\n        list.push(p);\n    }\n    composeDirectMulti(list, oldmol, newmol, oidx, n1) {\n        let frag = newmol.clone();\n        let x0 = oldmol.atomX(oidx[0]), y0 = oldmol.atomY(oidx[0]);\n        CoordUtil.translateMolecule(frag, x0 - frag.atomX(n1), y0 - frag.atomY(n1));\n        let ox = oldmol.atomX(oidx[1]) - x0, oy = oldmol.atomY(oidx[1]) - y0;\n        let otheta = Math.atan2(oy, ox), orad = norm_xy(ox, oy);\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(1);\n        let nidx = [];\n        for (let n2 = 1; n2 <= frag.numAtoms; n2++)\n            if (n1 != n2) {\n                let nx = frag.atomX(n2) - frag.atomX(n1), ny = frag.atomY(n2) - frag.atomY(n1), nrad = norm_xy(nx, ny);\n                if (Math.abs(nrad - orad) > 0.1)\n                    continue;\n                let ntheta = Math.atan2(ny, nx);\n                CoordUtil.rotateMolecule(frag, otheta - ntheta, x0, y0);\n                nidx = [n1, n2];\n                for (let i = 2; i < oidx.length; i++) {\n                    let hit = false;\n                    for (let j = 1; j <= frag.numAtoms; j++)\n                        if (nidx.indexOf(j) < 0)\n                            if (norm_xy(oldmol.atomX(oidx[i]) - frag.atomX(j), oldmol.atomY(oidx[i]) - frag.atomY(j)) < 0.1 * 0.1) {\n                                hit = true;\n                                nidx.push(j);\n                                break;\n                            }\n                    if (!hit)\n                        break;\n                }\n                if (nidx.length < oidx.length)\n                    continue;\n                let lowbfs = bfs.length;\n                for (let n = 0; n < nidx.length; n++)\n                    lowbfs = Math.min(lowbfs, bfs[nidx[n] - 1]);\n                let dx = 0, dy = 0;\n                for (let n = 0; n < oidx.length; n++) {\n                    dx += oldmol.atomX(oidx[n]) - frag.atomX(nidx[n]);\n                    dy += oldmol.atomY(oidx[n]) - frag.atomY(nidx[n]);\n                }\n                let invsz = 1.0 / oidx.length;\n                dx *= invsz;\n                dy *= invsz;\n                CoordUtil.translateMolecule(frag, dx, dy);\n                let pmol = oldmol.clone();\n                let osz = pmol.numAtoms;\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                for (let n = 0; n < nidx.length; n++) {\n                    let x = pmol.atomX(oidx[n]), y = pmol.atomY(oidx[n]);\n                    pmol.setAtomPos(osz + nidx[n], x, y);\n                }\n                SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n                if (pmol.numAtoms == osz)\n                    continue;\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag.clone();\n                p.srcidx = srcidx;\n                p.molidx = oidx.slice(0);\n                p.temidx = nidx.slice(0);\n                p.attdist = Math.min(bfs[n1 - 1], bfs[n2 - 1]);\n                p.guided = false;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    composeBridge(list, oldmol, newmol, o1, n1) {\n        let busy1 = oldmol.atomRingBlock(o1) != 0 || oldmol.atomAdjCount(o1) >= 3;\n        let busy2 = newmol.atomRingBlock(n1) != 0 || newmol.atomAdjCount(n1) >= 3;\n        if (!busy1 || !busy2)\n            return;\n        let otheta = SketchUtil.primeDirections(oldmol, o1);\n        let ntheta = SketchUtil.primeDirections(newmol, n1);\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1), nx = newmol.atomX(n1), ny = newmol.atomY(n1);\n                let dx = Molecule.IDEALBOND * Math.cos(otheta[i]), dy = Molecule.IDEALBOND * Math.sin(otheta[i]);\n                let dth = angleDiff(otheta[i], Math.PI + ntheta[j]);\n                let frag = newmol.clone();\n                CoordUtil.translateMolecule(frag, ox - nx + dx, oy - ny + dy);\n                CoordUtil.rotateMolecule(frag, dth, ox + dx, oy + dy);\n                let pmol = oldmol.clone();\n                let att = pmol.numAtoms + n1, osz = pmol.numAtoms;\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                pmol.addBond(o1, att, 1);\n                att = frag.addAtom('C', ox, oy);\n                frag.addBond(n1, att, 1);\n                SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n                if (pmol.numAtoms == osz)\n                    continue;\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag;\n                p.srcidx = srcidx;\n                p.molidx = [o1];\n                p.temidx = [att];\n                p.attdist = bfs[n1 - 1];\n                p.bridged = true;\n                p.guided = false;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    composeGuidedOne(list, oldmol, newmol, oidx, gidx) {\n        if (newmol.atomAdjCount(gidx) == 0)\n            return;\n        let otheta = SketchUtil.primeDirections(oldmol, oidx);\n        if (newmol.atomAdjCount(gidx) > 1 && oldmol.atomAdjCount(oidx) > 0) {\n            let ox = 0, oy = 0;\n            let adj = oldmol.atomAdjList(oidx);\n            for (let n = 0; n < adj.length; n++) {\n                ox += oldmol.atomX(adj[n]) - oldmol.atomX(oidx);\n                oy += oldmol.atomY(adj[n]) - oldmol.atomY(oidx);\n            }\n            let ang = Math.atan2(oy, ox);\n            let unique = true;\n            for (let n = 0; n < otheta.length; n++)\n                if (Math.abs(angleDiff(ang, otheta[n])) < 3 * RADDEG) {\n                    unique = false;\n                    break;\n                }\n            if (unique)\n                otheta.push(ang);\n        }\n        let gx = newmol.atomX(gidx), gy = newmol.atomY(gidx);\n        let dx = 0, dy = 0;\n        let adj = newmol.atomAdjList(gidx);\n        for (let n = 0; n < adj.length; n++) {\n            dx += newmol.atomX(adj[n]) - gx;\n            dy += newmol.atomY(adj[n]) - gy;\n        }\n        dx /= adj.length;\n        dy /= adj.length;\n        let ntheta = Math.atan2(dy, dx);\n        let homoPenalty = 0;\n        if (adj.length == 1) {\n            let oel = oldmol.atomElement(oidx), nel = newmol.atomElement(adj[0]);\n            if (oel != 'C' && oel == nel)\n                homoPenalty = 1;\n        }\n        for (let n = 0; n < otheta.length; n++) {\n            let frag = newmol.clone();\n            if (this.guideidx.length == 2) {\n                for (let i = 1; i <= frag.numAtoms; i++)\n                    if (i != gidx && frag.atomElement(i) == 'X') {\n                        frag.setAtomElement(i, TemplateFusion.RESERVED_GUIDESYMBOL);\n                        break;\n                    }\n            }\n            CoordUtil.rotateMolecule(frag, otheta[n] - ntheta, gx, gy);\n            CoordUtil.translateMolecule(frag, oldmol.atomX(oidx) - gx, oldmol.atomY(oidx) - gy);\n            let pmol = oldmol.clone();\n            let osz = pmol.numAtoms;\n            pmol.append(frag);\n            let srcidx = this.sourceIndex(pmol, oldmol);\n            SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n            if (pmol.numAtoms == osz)\n                continue;\n            let sel = 0;\n            for (let i = 1; i <= pmol.numAtoms; i++)\n                if (pmol.atomElement(i) == TemplateFusion.RESERVED_GUIDESYMBOL) {\n                    let padj = pmol.atomAdjList(i);\n                    if (padj.length == 1) {\n                        sel = padj[0];\n                        if (sel > i)\n                            sel--;\n                    }\n                    pmol.deleteAtomAndBonds(i);\n                    srcidx.splice(i - 1, 1);\n                    break;\n                }\n            let p = new FusionPermutation();\n            p.mol = pmol;\n            p.display = frag;\n            p.srcidx = srcidx;\n            p.molidx = [oidx];\n            p.temidx = [gidx];\n            p.attdist = 0;\n            p.guided = true;\n            p.scoreModifier = homoPenalty;\n            p.chainSelect = sel;\n            this.removeExtraGuides(p, oldmol);\n            list.push(p);\n        }\n    }\n    composeGuidedTwo(list, oldmol, newmol, o1, o2, gidx, nidx, snapToGuide) {\n        let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1);\n        let gx = newmol.atomX(gidx), gy = newmol.atomY(gidx);\n        let nx = newmol.atomX(nidx), ny = newmol.atomY(nidx);\n        let otheta = Math.atan2(oldmol.atomY(o2) - oy, oldmol.atomX(o2) - ox);\n        let gtheta = Math.atan2(ny - gy, nx - gx);\n        let isGuideOnTerminal = oldmol.atomAdjCount(o1) == 1;\n        let pmol = oldmol.clone(), frag = newmol.clone();\n        CoordUtil.rotateMolecule(frag, otheta - gtheta, gx, gy);\n        if (snapToGuide) {\n            CoordUtil.translateMolecule(frag, ox - gx, oy - gy);\n            pmol.setAtomPos(o2, frag.atomX(nidx), frag.atomY(nidx));\n        }\n        else {\n            CoordUtil.translateMolecule(frag, oldmol.atomX(o2) - frag.atomX(nidx), oldmol.atomY(o2) - frag.atomY(nidx));\n            frag.setAtomPos(gidx, ox, oy);\n        }\n        let osz = pmol.numAtoms;\n        pmol.append(frag);\n        let srcidx = this.sourceIndex(pmol, oldmol);\n        SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n        if (pmol.numAtoms == osz)\n            return;\n        let p = new FusionPermutation();\n        p.mol = pmol;\n        p.display = frag;\n        p.srcidx = srcidx;\n        p.molidx = [o1, o2];\n        p.temidx = [gidx, nidx];\n        p.attdist = isGuideOnTerminal ? 1 : 0;\n        p.guided = true;\n        this.removeExtraGuides(p, oldmol);\n        list.push(p);\n    }\n    composeGuidedMulti(list, oldmol, newmol, oidx, gidx, nudgenew) {\n        let cx1 = 0, cy1 = 0, cx2 = 0, cy2 = 0;\n        for (let n = 0; n < oidx.length; n++) {\n            cx1 += oldmol.atomX(oidx[n]);\n            cy1 += oldmol.atomY(oidx[n]);\n        }\n        for (let n = 0; n < gidx.length; n++) {\n            cx2 += newmol.atomX(gidx[n]);\n            cy2 += newmol.atomY(gidx[n]);\n        }\n        cx1 /= oidx.length;\n        cy1 /= oidx.length;\n        cx2 /= gidx.length;\n        cy2 /= gidx.length;\n        let osz = oldmol.numAtoms;\n        for (let i = 0; i < oidx.length; i++)\n            for (let j = 0; j < gidx.length; j++) {\n                let pmol = oldmol.clone(), frag = newmol.clone();\n                let th1 = Math.atan2(pmol.atomY(oidx[i]) - cy1, pmol.atomX(oidx[i]) - cx1);\n                let th2 = Math.atan2(frag.atomY(gidx[j]) - cy2, frag.atomX(gidx[j]) - cx2);\n                CoordUtil.rotateMolecule(frag, th1 - th2, cx2, cy2);\n                CoordUtil.translateMolecule(frag, cx1 - cx2, cy1 - cy2);\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                let midx = Vec.numberArray(0, gidx.length), tidx = gidx.slice(0);\n                Vec.sort(tidx);\n                let mask = Vec.booleanArray(false, osz);\n                for (let g = tidx.length - 1; g >= 0; g--) {\n                    let gatom = tidx[g] + osz;\n                    let closest = 0, closeDSQ = 0;\n                    for (let n = 0; n < oidx.length; n++)\n                        if (!mask[oidx[n] - 1]) {\n                            let dx = pmol.atomX(oidx[n]) - pmol.atomX(gatom), dy = pmol.atomY(oidx[n]) - pmol.atomY(gatom);\n                            let dsq = norm_xy(dx, dy);\n                            if (closest == 0 || dsq < closeDSQ) {\n                                closest = oidx[n];\n                                closeDSQ = dsq;\n                            }\n                        }\n                    if (!nudgenew) {\n                        let dsq = norm_xy(pmol.atomX(gatom) - pmol.atomX(closest), pmol.atomY(gatom) - pmol.atomY(closest));\n                        if (dsq > 0.1 * 0.1) {\n                            let num = frag.addAtom('C', pmol.atomX(closest), pmol.atomY(closest));\n                            frag.addBond(num, tidx[g], 0);\n                        }\n                        pmol.setAtomPos(closest, pmol.atomX(gatom), pmol.atomY(gatom));\n                    }\n                    midx[g] = closest;\n                    mask[closest - 1] = true;\n                    let adj = pmol.atomAdjList(gatom);\n                    for (let n = 0; n < adj.length; n++) {\n                        let b = pmol.findBond(gatom, adj[n]);\n                        pmol.addBond(closest, adj[n], pmol.bondOrder(b), pmol.bondType(b));\n                    }\n                    pmol.deleteAtomAndBonds(gatom);\n                    srcidx.splice(gatom - 1, 1);\n                    frag.setAtomPos(tidx[g], pmol.atomX(closest), pmol.atomY(closest));\n                }\n                for (let n = pmol.numAtoms; n > osz; n--)\n                    if (pmol.atomElement(n) == 'X') {\n                        pmol.deleteAtomAndBonds(n);\n                        srcidx.splice(n - 1, 1);\n                        for (let k = 0; k < tidx.length; k++)\n                            if (n < tidx[k])\n                                tidx[k]--;\n                    }\n                for (let n = frag.numAtoms; n >= 1; n--)\n                    if (frag.atomElement(n) == 'X') {\n                        frag.setAtomElement(n, 'C');\n                    }\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag;\n                p.srcidx = srcidx;\n                p.molidx = midx;\n                p.temidx = tidx;\n                p.attdist = 0;\n                p.guided = true;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    affixRawPermutations(list) {\n        let npsz = list.length;\n        if (npsz == 0)\n            return;\n        let umask = Vec.booleanArray(true, npsz);\n        for (let i = 0; i < npsz - 1; i++)\n            if (umask[i]) {\n                let p1 = list[i];\n                for (let j = i + 1; j < npsz; j++)\n                    if (umask[j]) {\n                        let p2 = list[j];\n                        if (CoordUtil.sketchEquivalent(p1.mol, p2.mol)) {\n                            if (p1.scoreModifier + p1.attdist > p2.scoreModifier + p2.attdist) {\n                                list[i] = p2;\n                                list[j] = p1;\n                            }\n                            umask[j] = false;\n                        }\n                    }\n            }\n        let score = Vec.numberArray(0, npsz);\n        let numKeep = 0;\n        for (let n = 0; n < npsz; n++) {\n            if (umask[n]) {\n                score[n] = this.scorePermutation(list[n]);\n                if (score[n] < 1000)\n                    numKeep++;\n            }\n            else\n                score[n] = 0;\n        }\n        if (numKeep > 0)\n            for (let n = 0; n < npsz; n++)\n                if (umask[n] && score[n] >= 1000)\n                    umask[n] = false;\n        let uscore = [], uidx = [];\n        for (let n = 0; n < npsz; n++)\n            if (umask[n]) {\n                uscore.push(score[n]);\n                uidx.push(n);\n            }\n        let sidx = Vec.idxSort(uscore);\n        for (let n = 0; n < sidx.length; n++) {\n            let p = list[uidx[sidx[n]]];\n            if (p.guided) {\n                this.perms.push(p);\n            }\n        }\n        for (let n = 0; n < sidx.length; n++) {\n            let p = list[uidx[sidx[n]]];\n            if (!p.guided) {\n                this.perms.push(p);\n            }\n        }\n    }\n    removeExtraGuides(perm, oldmol) {\n        MolUtil.removeDuplicateBonds(perm.mol);\n        for (let n = perm.temidx.length - 1; n >= 0; n--) {\n            let el = perm.display.atomElement(perm.temidx[n]);\n            if (el != 'X' && el != TemplateFusion.RESERVED_GUIDESYMBOL)\n                continue;\n            perm.molidx.splice(n, 1);\n            perm.temidx.splice(n, 1);\n        }\n        for (let n = perm.display.numAtoms; n >= 1; n--) {\n            let el = perm.display.atomElement(n);\n            if (el != 'X' && el != TemplateFusion.RESERVED_GUIDESYMBOL)\n                continue;\n            let a = CoordUtil.atomAtPoint(oldmol, perm.display.atomX(n), perm.display.atomY(n));\n            if (a > 0)\n                perm.display.setAtomElement(n, 'C');\n            else {\n                perm.display.deleteAtomAndBonds(n);\n                for (let i = 0; i < perm.temidx.length; i++)\n                    if (perm.temidx[i] > n)\n                        perm.temidx[i]--;\n            }\n        }\n    }\n    scorePermutation(perm) {\n        let mol = this.mol, tmol = perm.display, tunion = perm.mol;\n        let score = 0.2 * perm.attdist + perm.scoreModifier;\n        score += CoordUtil.congestionMolecule(tunion, 1e-3);\n        score -= tunion.numAtoms;\n        let sz1 = mol.numAtoms, sz2 = tmol.numAtoms;\n        let mx1 = [], my1 = [], mx2 = [], my2 = [];\n        for (let n = 0; n < sz1; n++) {\n            mx1.push(mol.atomX(n + 1));\n            my1.push(mol.atomY(n + 1));\n        }\n        for (let n = 0; n < sz2; n++) {\n            mx2.push(tmol.atomX(n + 1));\n            my2.push(tmol.atomY(n + 1));\n        }\n        for (let i = 0; i < sz1; i++)\n            for (let j = 0; j < sz2; j++) {\n                if (norm_xy(mx1[i] - mx2[j], my1[i] - my2[j]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                    continue;\n                let contained = false;\n                for (let k = 0; k < perm.molidx.length; k++)\n                    if (perm.molidx[k] == i + 1 && perm.temidx[k] == j + 1) {\n                        contained = true;\n                        break;\n                    }\n                if (contained)\n                    continue;\n                score += 100;\n            }\n        if (!perm.guided)\n            for (let n = 0; n < perm.molidx.length; n++) {\n                let el = mol.atomElement(perm.molidx[n]);\n                if (el == 'C' || el == 'O' || el == 'S' || el == 'N' || el == 'P')\n                    continue;\n                let adj1 = mol.atomAdjList(perm.molidx[n]), adj2 = tmol.atomAdjList(perm.temidx[n]);\n                if (adj1.length + adj2.length >= 4)\n                    continue;\n                for (let i = 0; i < adj1.length; i++)\n                    for (let j = 0; j < adj2.length; j++) {\n                        let ai = adj1[i], aj = adj2[j];\n                        let bo1 = mol.bondOrder(mol.findBond(perm.molidx[n], ai));\n                        let bo2 = tmol.bondOrder(tmol.findBond(perm.temidx[n], aj));\n                        let wantTheta = 0;\n                        if ((bo1 == 1 && bo2 == 1) || (bo1 == 1 && bo2 == 2) || (bo1 == 2 && bo2 == 1))\n                            wantTheta = 120;\n                        else if ((bo1 == 2 && bo2 == 2) || (bo1 == 1 && bo2 == 3) || (bo1 == 3 && bo2 == 1))\n                            wantTheta = 180;\n                        else\n                            continue;\n                        let dx1 = mx1[ai - 1] - mx1[perm.molidx[n] - 1];\n                        let dy1 = my1[ai - 1] - my1[perm.molidx[n] - 1];\n                        let dx2 = mx2[aj - 1] - mx2[perm.temidx[n] - 1];\n                        let dy2 = my2[aj - 1] - my2[perm.temidx[n] - 1];\n                        let theta = Math.abs(angleDiff(Math.atan2(dy1, dx1), Math.atan2(dy2, dx2))) * RADDEG;\n                        if (Math.abs(theta - wantTheta) > 5)\n                            score += 50;\n                    }\n            }\n        for (let n = 1; n <= tunion.numAtoms; n++)\n            if (tunion.atomElement(n) == 'C' || tunion.atomElement(n) == 'N') {\n                let adjb = tunion.atomAdjBonds(n);\n                let totalBO = 0;\n                for (let i = 0; i < adjb.length; i++) {\n                    let bo = tunion.bondOrder(adjb[i]);\n                    totalBO += bo;\n                    if (bo == 0) {\n                        totalBO = 0;\n                        break;\n                    }\n                }\n                if (totalBO > 4)\n                    score += 1000;\n            }\n        if (perm.molidx.length >= 2) {\n            let mmask = Vec.booleanArray(false, sz1);\n            for (let n = 0; n < perm.molidx.length; n++)\n                mmask[perm.molidx[n] - 1] = true;\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n                if (!mmask[bfr - 1] || !mmask[bto - 1])\n                    continue;\n                let tfr = perm.molidx.indexOf(bfr), tto = perm.molidx.indexOf(bto);\n                let tn = tmol.findBond(perm.temidx[tfr], perm.temidx[tto]);\n                if (tn == 0)\n                    continue;\n                if (mol.bondOrder(n) != tmol.bondOrder(tn))\n                    score += 1;\n            }\n        }\n        return score;\n    }\n    sourceIndex(xmol, wmol) {\n        let idx = Vec.numberArray(0, xmol.numAtoms);\n        for (let n = wmol.numAtoms; n >= 1; n--)\n            idx[n - 1] = n;\n        return idx;\n    }\n    asMask(imask) {\n        let ret = Vec.booleanArray(false, imask.length);\n        for (let n = 0; n < imask.length; n++)\n            ret[n] = imask[n] != 0;\n        return ret;\n    }\n}\nTemplateFusion.RESERVED_GUIDESYMBOL = 'XXX';\nexport { TemplateFusion };\n//# sourceMappingURL=TemplateFusion.js.map","import { AbbrevContainer } from '../data/AbbrevContainer';\nimport { BondArtifact } from '../mol/BondArtifact';\nimport { Chemistry } from '../mol/Chemistry';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { Graph } from '../mol/Graph';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock } from '../mol/PolymerBlock';\nimport { QueryTypeAtom, QueryUtil } from '../mol/QueryUtil';\nimport { SketchUtil } from '../mol/SketchUtil';\nimport { angleDiff, angleNorm, DEGRAD, norm2_xy, norm_xy, RADDEG, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { MetalLigate } from './MetalLigate';\nimport { TemplateFusion } from './TemplateFusion';\nexport var ActivityType;\n(function (ActivityType) {\n    ActivityType[ActivityType[\"Delete\"] = 1] = \"Delete\";\n    ActivityType[ActivityType[\"Clear\"] = 2] = \"Clear\";\n    ActivityType[ActivityType[\"Copy\"] = 3] = \"Copy\";\n    ActivityType[ActivityType[\"Cut\"] = 4] = \"Cut\";\n    ActivityType[ActivityType[\"SelectAll\"] = 5] = \"SelectAll\";\n    ActivityType[ActivityType[\"SelectNone\"] = 6] = \"SelectNone\";\n    ActivityType[ActivityType[\"SelectPrevComp\"] = 7] = \"SelectPrevComp\";\n    ActivityType[ActivityType[\"SelectNextComp\"] = 8] = \"SelectNextComp\";\n    ActivityType[ActivityType[\"SelectSide\"] = 9] = \"SelectSide\";\n    ActivityType[ActivityType[\"SelectGrow\"] = 10] = \"SelectGrow\";\n    ActivityType[ActivityType[\"SelectShrink\"] = 11] = \"SelectShrink\";\n    ActivityType[ActivityType[\"SelectChain\"] = 12] = \"SelectChain\";\n    ActivityType[ActivityType[\"SelectSmRing\"] = 13] = \"SelectSmRing\";\n    ActivityType[ActivityType[\"SelectRingBlk\"] = 14] = \"SelectRingBlk\";\n    ActivityType[ActivityType[\"SelectCurElement\"] = 15] = \"SelectCurElement\";\n    ActivityType[ActivityType[\"SelectToggle\"] = 16] = \"SelectToggle\";\n    ActivityType[ActivityType[\"SelectUnCurrent\"] = 17] = \"SelectUnCurrent\";\n    ActivityType[ActivityType[\"Element\"] = 18] = \"Element\";\n    ActivityType[ActivityType[\"AtomPos\"] = 19] = \"AtomPos\";\n    ActivityType[ActivityType[\"Charge\"] = 20] = \"Charge\";\n    ActivityType[ActivityType[\"Connect\"] = 21] = \"Connect\";\n    ActivityType[ActivityType[\"Disconnect\"] = 22] = \"Disconnect\";\n    ActivityType[ActivityType[\"MetalLigate\"] = 23] = \"MetalLigate\";\n    ActivityType[ActivityType[\"BondOrder\"] = 24] = \"BondOrder\";\n    ActivityType[ActivityType[\"BondType\"] = 25] = \"BondType\";\n    ActivityType[ActivityType[\"BondGeom\"] = 26] = \"BondGeom\";\n    ActivityType[ActivityType[\"BondAtom\"] = 27] = \"BondAtom\";\n    ActivityType[ActivityType[\"BondSwitch\"] = 28] = \"BondSwitch\";\n    ActivityType[ActivityType[\"BondRotate\"] = 29] = \"BondRotate\";\n    ActivityType[ActivityType[\"BondAddTwo\"] = 30] = \"BondAddTwo\";\n    ActivityType[ActivityType[\"BondInsert\"] = 31] = \"BondInsert\";\n    ActivityType[ActivityType[\"Join\"] = 32] = \"Join\";\n    ActivityType[ActivityType[\"Nudge\"] = 33] = \"Nudge\";\n    ActivityType[ActivityType[\"NudgeLots\"] = 34] = \"NudgeLots\";\n    ActivityType[ActivityType[\"NudgeFar\"] = 35] = \"NudgeFar\";\n    ActivityType[ActivityType[\"Flip\"] = 36] = \"Flip\";\n    ActivityType[ActivityType[\"Scale\"] = 37] = \"Scale\";\n    ActivityType[ActivityType[\"Rotate\"] = 38] = \"Rotate\";\n    ActivityType[ActivityType[\"BondDist\"] = 39] = \"BondDist\";\n    ActivityType[ActivityType[\"AlignAngle\"] = 40] = \"AlignAngle\";\n    ActivityType[ActivityType[\"AlignRegular\"] = 41] = \"AlignRegular\";\n    ActivityType[ActivityType[\"AdjustTorsion\"] = 42] = \"AdjustTorsion\";\n    ActivityType[ActivityType[\"Move\"] = 43] = \"Move\";\n    ActivityType[ActivityType[\"Ring\"] = 44] = \"Ring\";\n    ActivityType[ActivityType[\"TemplateFusion\"] = 45] = \"TemplateFusion\";\n    ActivityType[ActivityType[\"AbbrevTempl\"] = 46] = \"AbbrevTempl\";\n    ActivityType[ActivityType[\"AbbrevGroup\"] = 47] = \"AbbrevGroup\";\n    ActivityType[ActivityType[\"AbbrevFormula\"] = 48] = \"AbbrevFormula\";\n    ActivityType[ActivityType[\"AbbrevClear\"] = 49] = \"AbbrevClear\";\n    ActivityType[ActivityType[\"AbbrevExpand\"] = 50] = \"AbbrevExpand\";\n    ActivityType[ActivityType[\"BondArtifactPath\"] = 51] = \"BondArtifactPath\";\n    ActivityType[ActivityType[\"BondArtifactRing\"] = 52] = \"BondArtifactRing\";\n    ActivityType[ActivityType[\"BondArtifactArene\"] = 53] = \"BondArtifactArene\";\n    ActivityType[ActivityType[\"BondArtifactClear\"] = 54] = \"BondArtifactClear\";\n    ActivityType[ActivityType[\"PolymerBlock\"] = 55] = \"PolymerBlock\";\n    ActivityType[ActivityType[\"AddHydrogens\"] = 56] = \"AddHydrogens\";\n    ActivityType[ActivityType[\"RemoveHydrogens\"] = 57] = \"RemoveHydrogens\";\n    ActivityType[ActivityType[\"QueryClear\"] = 58] = \"QueryClear\";\n    ActivityType[ActivityType[\"QueryCopy\"] = 59] = \"QueryCopy\";\n    ActivityType[ActivityType[\"QueryPaste\"] = 60] = \"QueryPaste\";\n    ActivityType[ActivityType[\"QuerySetAtom\"] = 61] = \"QuerySetAtom\";\n    ActivityType[ActivityType[\"QuerySetBond\"] = 62] = \"QuerySetBond\";\n    ActivityType[ActivityType[\"QueryBondAny\"] = 63] = \"QueryBondAny\";\n    ActivityType[ActivityType[\"SproutDirection\"] = 64] = \"SproutDirection\";\n})(ActivityType || (ActivityType = {}));\nexport class MoleculeActivity {\n    constructor(input, activity, param, owner) {\n        this.input = input;\n        this.activity = activity;\n        this.param = param;\n        this.owner = owner;\n        this.toClipboard = null;\n        this.output =\n            {\n                mol: null,\n                currentAtom: -1,\n                currentBond: -1,\n                selectedMask: null\n            };\n        let na = this.input.mol.numAtoms;\n        if (this.input.selectedMask == null)\n            this.input.selectedMask = Vec.booleanArray(false, na);\n        while (this.input.selectedMask.length < na)\n            this.input.selectedMask.push(false);\n        this.subjectMask = this.input.selectedMask.slice(0);\n        this.subjectLength = Vec.maskCount(this.subjectMask);\n        this.subjectIndex = [];\n        this.hasSelected = this.subjectLength > 0;\n        if (this.subjectLength == 0) {\n            if (this.input.currentAtom > 0) {\n                this.subjectLength = 1;\n                this.subjectMask[this.input.currentAtom - 1] = true;\n                this.subjectIndex = [this.input.currentAtom];\n            }\n            else if (this.input.currentBond > 0) {\n                let bfr = this.input.mol.bondFrom(this.input.currentBond), bto = this.input.mol.bondTo(this.input.currentBond);\n                let b1 = Math.min(bfr, bto), b2 = Math.max(bfr, bto);\n                this.subjectLength = 2;\n                this.subjectMask[b1 - 1] = true;\n                this.subjectMask[b2 - 1] = true;\n                this.subjectIndex = [b1, b2];\n            }\n        }\n        else {\n            this.subjectIndex = Vec.maskIdx(this.subjectMask);\n            Vec.addTo(this.subjectIndex, 1);\n        }\n    }\n    setOwner(owner) {\n        this.owner = owner;\n    }\n    evaluate() {\n        return true;\n    }\n    execute() {\n        var _a;\n        let param = this.param;\n        if (this.activity == ActivityType.Delete)\n            this.execDelete();\n        else if (this.activity == ActivityType.Clear)\n            this.execClear();\n        else if (this.activity == ActivityType.Copy)\n            this.execCopy(false);\n        else if (this.activity == ActivityType.Cut)\n            this.execCopy(true);\n        else if (this.activity == ActivityType.SelectAll)\n            this.execSelectAll(true);\n        else if (this.activity == ActivityType.SelectNone)\n            this.execSelectAll(false);\n        else if (this.activity == ActivityType.SelectPrevComp)\n            this.execSelectComp(-1);\n        else if (this.activity == ActivityType.SelectNextComp)\n            this.execSelectComp(1);\n        else if (this.activity == ActivityType.SelectSide)\n            this.execSelectSide();\n        else if (this.activity == ActivityType.SelectGrow)\n            this.execSelectGrow();\n        else if (this.activity == ActivityType.SelectShrink)\n            this.execSelectShrink();\n        else if (this.activity == ActivityType.SelectChain)\n            this.execSelectChain();\n        else if (this.activity == ActivityType.SelectSmRing)\n            this.execSelectSmRing();\n        else if (this.activity == ActivityType.SelectRingBlk)\n            this.execSelectRingBlk();\n        else if (this.activity == ActivityType.SelectCurElement)\n            this.execSelectCurElement();\n        else if (this.activity == ActivityType.SelectToggle)\n            this.execSelectToggle();\n        else if (this.activity == ActivityType.SelectUnCurrent)\n            this.execSelectUnCurrent();\n        else if (this.activity == ActivityType.Element)\n            this.execElement(param.element, param.positionX, param.positionY, param.keepAbbrev);\n        else if (this.activity == ActivityType.Charge)\n            this.execCharge(param.delta);\n        else if (this.activity == ActivityType.Connect)\n            this.execConnect(1, Molecule.BONDTYPE_NORMAL);\n        else if (this.activity == ActivityType.Disconnect)\n            this.execDisconnect();\n        else if (this.activity == ActivityType.MetalLigate)\n            this.execMetalLigate();\n        else if (this.activity == ActivityType.BondOrder)\n            this.execBond(param.order, Molecule.BONDTYPE_NORMAL);\n        else if (this.activity == ActivityType.BondType)\n            this.execBond(1, param.type);\n        else if (this.activity == ActivityType.BondGeom)\n            this.execBondGeom(param.geom);\n        else if (this.activity == ActivityType.BondAtom)\n            this.execBondAtom(param.order, param.type, param.element, param.x1, param.y1, param.x2, param.y2);\n        else if (this.activity == ActivityType.BondSwitch)\n            this.execBondSwitch();\n        else if (this.activity == ActivityType.BondRotate)\n            this.execBondRotate();\n        else if (this.activity == ActivityType.BondAddTwo)\n            this.execBondAddTwo();\n        else if (this.activity == ActivityType.BondInsert)\n            this.execBondInsert();\n        else if (this.activity == ActivityType.Join)\n            this.execJoin();\n        else if (this.activity == ActivityType.Nudge)\n            this.execNudge(param.dir, 0.1);\n        else if (this.activity == ActivityType.NudgeLots)\n            this.execNudge(param.dir, 1);\n        else if (this.activity == ActivityType.NudgeFar)\n            this.execNudgeFar(param.dir);\n        else if (this.activity == ActivityType.Flip)\n            this.execFlip(param.axis);\n        else if (this.activity == ActivityType.Scale)\n            this.execScale(param.mag);\n        else if (this.activity == ActivityType.Rotate)\n            this.execRotate(param.theta, param.centreX, param.centreY);\n        else if (this.activity == ActivityType.BondDist)\n            this.execBondDist(param.dist);\n        else if (this.activity == ActivityType.AlignAngle)\n            this.execAlignAngle(param.angle);\n        else if (this.activity == ActivityType.AlignRegular)\n            this.execAlignRegular();\n        else if (this.activity == ActivityType.AdjustTorsion)\n            this.execAdjustTorsion(param.angle);\n        else if (this.activity == ActivityType.Move)\n            this.execMove(param.refAtom, param.deltaX, param.deltaY);\n        else if (this.activity == ActivityType.Ring)\n            this.execRing(param.ringX, param.ringY, param.aromatic);\n        else if (this.activity == ActivityType.TemplateFusion) {\n            this.execTemplateFusion((_a = param.frag) !== null && _a !== void 0 ? _a : Molecule.fromString(param.fragNative));\n            if (this.owner)\n                this.owner.setPermutations(this.output.permutations);\n            return;\n        }\n        else if (this.activity == ActivityType.AbbrevTempl)\n            this.execAbbrevTempl();\n        else if (this.activity == ActivityType.AbbrevGroup)\n            this.execAbbrevGroup();\n        else if (this.activity == ActivityType.AbbrevFormula)\n            this.execAbbrevFormula();\n        else if (this.activity == ActivityType.AbbrevClear)\n            this.execAbbrevClear();\n        else if (this.activity == ActivityType.AbbrevExpand)\n            this.execAbbrevExpand();\n        else if (this.activity == ActivityType.BondArtifactPath || this.activity == ActivityType.BondArtifactRing ||\n            this.activity == ActivityType.BondArtifactArene || this.activity == ActivityType.BondArtifactClear)\n            this.execBondArtifact(this.activity);\n        else if (this.activity == ActivityType.PolymerBlock)\n            this.execPolymerBlock();\n        else if (this.activity == ActivityType.AddHydrogens)\n            this.execAddHydrogens();\n        else if (this.activity == ActivityType.RemoveHydrogens)\n            this.execRemoveHydrogens();\n        else if (this.activity == ActivityType.QueryClear)\n            this.execQueryClear();\n        else if (this.activity == ActivityType.QueryCopy)\n            this.execQueryCopy();\n        else if (this.activity == ActivityType.QueryPaste)\n            this.execQueryPaste();\n        else if (this.activity == ActivityType.QuerySetAtom)\n            this.execQuerySetAtom();\n        else if (this.activity == ActivityType.QuerySetBond)\n            this.execQuerySetBond();\n        else if (this.activity == ActivityType.QueryBondAny)\n            this.execQueryBondAny();\n        else if (this.activity == ActivityType.SproutDirection)\n            this.execSproutDirection(param.deltaX, param.deltaY);\n        this.finish();\n    }\n    finish() {\n        if (!this.owner)\n            return;\n        if (this.output.mol != null || this.output.currentAtom >= 0 || this.output.currentBond >= 0 || this.output.selectedMask != null) {\n            this.owner.setState(this.output, true);\n            if (this.errmsg != null)\n                this.owner.showMessage(this.errmsg, false);\n        }\n        else {\n            if (this.errmsg != null)\n                this.owner.showMessage(this.errmsg, true);\n        }\n    }\n    execDelete() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.mol = mol.clone();\n        this.zapSubject();\n        if (this.input.currentBond > 0 && !this.hasSelected) {\n            this.output.mol.deleteBond(this.input.currentBond);\n            this.output.currentBond = 0;\n            return;\n        }\n        if (this.subjectLength == 1 && this.subjectIndex[0] == this.input.currentAtom) {\n            let adj = mol.atomAdjList(this.input.currentAtom);\n            if (adj.length == 1) {\n                this.output.currentAtom = adj[0];\n                if (this.output.currentAtom > this.input.currentAtom)\n                    this.output.currentAtom--;\n            }\n        }\n        for (let n = this.subjectLength - 1; n >= 0; n--)\n            this.output.mol.deleteAtomAndBonds(this.subjectIndex[n]);\n    }\n    execCopy(withCut) {\n        let mol = this.input.mol;\n        if (this.subjectLength > 0)\n            mol = MolUtil.subgraphWithAttachments(mol, this.subjectMask);\n        if (this.owner)\n            this.owner.performCopy(mol);\n        else\n            this.toClipboard = mol.toString();\n        if (withCut) {\n            this.zapSubject();\n            this.output.mol = MolUtil.subgraphMask(this.input.mol, Vec.notMask(this.subjectMask));\n        }\n    }\n    execClear() {\n        this.output.mol = new Molecule();\n        this.zapSubject();\n    }\n    execSelectAll(all) {\n        let same = true;\n        for (let n = 0; n < this.input.mol.numAtoms; n++)\n            if (this.subjectMask[n] != all) {\n                same = false;\n                break;\n            }\n        if (same) {\n            this.errmsg = all ? 'All atoms already selected.' : 'All atoms already deselected.';\n            return;\n        }\n        this.output.selectedMask = Vec.booleanArray(all, this.input.mol.numAtoms);\n    }\n    execSelectComp(dir) {\n        let cclist = MolUtil.componentList(this.input.mol);\n        if (cclist.length == 1 && this.hasSelected && this.subjectLength == this.input.mol.numAtoms) {\n            this.errmsg = 'All atoms already selected.';\n            return;\n        }\n        let sel = this.pickSelectedGroup(cclist, dir);\n        this.output.selectedMask = Vec.booleanArray(false, this.input.mol.numAtoms);\n        for (let n = 0; n < cclist[sel].length; n++)\n            this.output.selectedMask[cclist[sel][n] - 1] = true;\n    }\n    execSelectSide() {\n        if (!this.requireCurrent())\n            return;\n        let mol = this.input.mol, currentAtom = this.input.currentAtom, currentBond = this.input.currentBond;\n        if (currentAtom > 0 && mol.atomAdjCount(currentAtom) == 0) {\n            this.errmsg = 'Current atom has no neighbours.';\n            return;\n        }\n        if (currentBond > 0 && mol.atomAdjCount(mol.bondFrom(currentBond)) == 1 && mol.atomAdjCount(mol.bondTo(currentBond)) == 1) {\n            this.errmsg = 'Current bond has no neighbours.';\n            return;\n        }\n        let sides = currentAtom > 0 ? MolUtil.getAtomSides(mol, currentAtom) : MolUtil.getBondSides(mol, currentBond);\n        let sel = this.pickSelectedGroup(sides, 1);\n        this.output.selectedMask = Vec.booleanArray(false, mol.numAtoms);\n        for (let n = 0; n < sides[sel].length; n++)\n            this.output.selectedMask[sides[sel][n] - 1] = true;\n    }\n    execSelectGrow() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol, currentAtom = this.input.currentAtom, currentBond = this.input.currentBond;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (!this.hasSelected) {\n            if (currentAtom > 0) {\n                this.output.selectedMask[currentAtom - 1] = true;\n            }\n            else {\n                this.output.selectedMask[mol.bondFrom(currentBond) - 1] = true;\n                this.output.selectedMask[mol.bondTo(currentBond) - 1] = true;\n            }\n        }\n        else {\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n                if (this.input.selectedMask[bfr] && !this.input.selectedMask[bto])\n                    this.output.selectedMask[bto] = true;\n                else if (this.input.selectedMask && !this.input.selectedMask[bfr])\n                    this.output.selectedMask[bfr] = true;\n            }\n        }\n    }\n    execSelectShrink() {\n        if (!this.requireSelected())\n            return;\n        let mol = this.input.mol;\n        let count = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (!this.input.selectedMask[bfr] || !this.input.selectedMask[bto])\n                continue;\n            count[bfr]++;\n            count[bto]++;\n        }\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let n = 0; n < mol.numAtoms; n++)\n            this.output.selectedMask[n] = this.input.selectedMask[n] && count[n] >= 2;\n    }\n    execSelectChain() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (this.input.selectedMask[bfr] && !this.input.selectedMask[bto] && mol.atomRingBlock(bto + 1) == 0)\n                this.output.selectedMask[bto] = true;\n            else if (this.input.selectedMask[bto] && !this.input.selectedMask[bfr] && mol.atomRingBlock(bfr + 1) == 0)\n                this.output.selectedMask[bfr] = true;\n        }\n    }\n    execSelectSmRing() {\n        if (!this.requireSubject())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let r = 3; r <= 8; r++) {\n            let rings = this.input.mol.findRingsOfSize(r);\n            for (let i = 0; i < rings.length; i++) {\n                let any = false;\n                for (let j = 0; j < rings[i].length; j++)\n                    if (this.subjectMask[rings[i][j] - 1]) {\n                        any = true;\n                        break;\n                    }\n                if (any)\n                    for (let j = 0; j < rings[i].length; j++)\n                        this.output.selectedMask[rings[i][j] - 1] = true;\n            }\n        }\n    }\n    execSelectRingBlk() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        let maxRB = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            maxRB = Math.max(maxRB, mol.atomRingBlock(n));\n        if (maxRB == 0)\n            return;\n        let gotRB = Vec.booleanArray(false, maxRB);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let rb = mol.atomRingBlock(n);\n            if (rb > 0 && this.subjectMask[n - 1])\n                gotRB[rb - 1] = true;\n        }\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let rb = mol.atomRingBlock(n);\n            if (rb > 0 && gotRB[rb - 1])\n                this.output.selectedMask[n - 1] = true;\n        }\n    }\n    execSelectCurElement() {\n        if (!this.requireCurrent())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        let el1 = '', el2 = '';\n        if (this.input.currentAtom > 0) {\n            el1 = mol.atomElement(this.input.currentAtom);\n        }\n        else {\n            el1 = mol.atomElement(mol.bondFrom(this.input.currentBond));\n            el2 = mol.atomElement(mol.bondTo(this.input.currentBond));\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomElement(n) == el1 || mol.atomElement(n) == el2)\n                this.output.selectedMask[n - 1] = true;\n    }\n    execSelectToggle() {\n        if (!this.requireCurrent())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (this.input.currentAtom > 0) {\n            this.output.selectedMask[this.input.currentAtom - 1] = !this.output.selectedMask[this.input.currentAtom - 1];\n        }\n        else {\n            let bfr = this.input.mol.bondFrom(this.input.currentBond), bto = this.input.mol.bondTo(this.input.currentBond);\n            let sel = !this.input.selectedMask[bfr - 1] || !this.input.selectedMask[bto - 1];\n            this.output.selectedMask[bfr - 1] = sel;\n            this.output.selectedMask[bto - 1] = sel;\n        }\n    }\n    execSelectUnCurrent() {\n        if (!this.requireCurrent())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (this.input.currentAtom > 0) {\n            this.output.selectedMask[this.input.currentAtom - 1] = false;\n        }\n        else {\n            this.output.selectedMask[this.input.mol.bondFrom(this.input.currentBond) - 1] = false;\n            this.output.selectedMask[this.input.mol.bondTo(this.input.currentBond) - 1] = false;\n        }\n    }\n    execElement(element, positionX, positionY, keepAbbrev) {\n        const QUERY_ELEMENTS = ['A', 'X', 'Y', 'Z', 'Q', 'M', 'T', 'E', 'R'];\n        if (this.subjectLength > 0 && !QUERY_ELEMENTS.includes(element)) {\n            let anyChange = false;\n            for (let n = 0; n < this.subjectLength; n++)\n                if (this.input.mol.atomElement(this.subjectIndex[n]) != element) {\n                    anyChange = true;\n                    break;\n                }\n            if (!anyChange) {\n                this.errmsg = 'Elements not changed.';\n                return;\n            }\n        }\n        let mol = this.output.mol = this.input.mol.clone();\n        let applyQuery = (atom) => {\n            if (element == 'A') {\n                QueryUtil.setQueryAtomElementsNot(mol, atom, ['H']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'X') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['F', 'Cl', 'Br', 'I']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Y') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['O', 'S', 'Se', 'Te']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Z') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['F', 'Cl', 'Br', 'O', 'S']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Q') {\n                QueryUtil.setQueryAtomElementsNot(mol, atom, ['H', 'C']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'M') {\n                const NON_METALS = ['H', 'B', 'C', 'N', 'O', 'F', 'Si', 'P', 'S', 'Cl', 'As', 'Se', 'Br', 'Te', 'I'];\n                QueryUtil.setQueryAtomElementsNot(mol, atom, NON_METALS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'T') {\n                const TRANSITION_METALS = [\n                    'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n                    'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd',\n                    'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg',\n                    'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb', 'Lu',\n                    'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No', 'Lr'\n                ];\n                QueryUtil.setQueryAtomElements(mol, atom, TRANSITION_METALS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'E') {\n                const MAIN_GROUPS = [\n                    'B', 'N', 'O', 'F',\n                    'Al', 'Si', 'P', 'S', 'Cl',\n                    'Zn', 'Ga', 'Se', 'As', 'Se', 'Br',\n                    'Cd', 'In', 'Sn', 'Sb', 'Te', 'I',\n                    'Hg', 'Tl', 'Pb', 'Bi', 'Pb', 'At'\n                ];\n                QueryUtil.setQueryAtomElements(mol, atom, MAIN_GROUPS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'R') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['C', 'N', 'O', 'S', 'P', 'H']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n        };\n        if (mol.numAtoms == 0) {\n            mol.addAtom(element, 0, 0);\n            applyQuery(mol.numAtoms);\n        }\n        else if (this.subjectLength == 0) {\n            if (positionX != null && positionY != null)\n                mol.addAtom(element, positionX, positionY);\n            else\n                SketchUtil.placeNewAtom(mol, element);\n            applyQuery(mol.numAtoms);\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                if (keepAbbrev)\n                    mol.setAtomElement(this.subjectIndex[n], element);\n                else\n                    MolUtil.setAtomElement(mol, this.subjectIndex[n], element);\n                applyQuery(this.subjectIndex[n]);\n            }\n        }\n    }\n    execCharge(delta) {\n        if (!this.requireSubject())\n            return;\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let chg = Math.max(-20, Math.min(20, this.input.mol.atomCharge(this.subjectIndex[n]) + delta));\n            this.output.mol.setAtomCharge(this.subjectIndex[n], chg);\n        }\n    }\n    execConnect(order, type) {\n        if (!this.requireSubject())\n            return;\n        let conn = SketchUtil.pickAtomsToConnect(this.input.mol, this.subjectIndex);\n        if (conn == null) {\n            this.errmsg = 'Subject atoms contain no bonds suitable for connection.';\n            return;\n        }\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < conn.length; n += 2)\n            MolUtil.addBond(this.output.mol, conn[n], conn[n + 1], order, type);\n    }\n    execDisconnect() {\n        let zap = [];\n        let mol = this.input.mol;\n        if (this.hasSelected) {\n            for (let n = 1; n <= mol.numBonds; n++)\n                if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                    zap.push(n);\n        }\n        else if (this.input.currentAtom > 0) {\n            for (let a of mol.atomAdjBonds(this.input.currentAtom))\n                zap.push(a);\n        }\n        else if (this.input.currentBond > 0) {\n            zap.push(this.input.currentBond);\n        }\n        if (zap.length == 0) {\n            this.errmsg = 'Subject atoms contain no bonds suitable for disconnection.';\n            return;\n        }\n        let killmask = Vec.booleanArray(false, mol.numBonds);\n        for (let b of zap)\n            killmask[b - 1] = true;\n        this.output.mol = this.input.mol.clone();\n        for (let n = mol.numBonds; n >= 1; n--)\n            if (killmask[n - 1])\n                this.output.mol.deleteBond(n);\n    }\n    execMetalLigate() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        let ligAtoms = this.subjectIndex.slice(0);\n        let metalAtom = this.input.currentAtom;\n        if (metalAtom == 0) {\n            for (let a of this.subjectIndex) {\n                let atno = mol.atomicNumber(a);\n                if (Chemistry.ELEMENT_BLOCKS[atno] >= 3) {\n                    metalAtom = a;\n                    break;\n                }\n            }\n        }\n        if (metalAtom == 0) {\n            for (let a of this.subjectIndex) {\n                let atno = mol.atomicNumber(a);\n                if (Chemistry.ELEMENT_ROWS[atno] >= 3) {\n                    metalAtom = a;\n                    break;\n                }\n            }\n        }\n        if (metalAtom == 0) {\n            this.errmsg = 'Unsure which is the metal atom: try indicating as current.';\n            return;\n        }\n        let i = ligAtoms.indexOf(metalAtom);\n        if (i >= 0)\n            ligAtoms.splice(i, 1);\n        if (ligAtoms.length == 0)\n            ligAtoms = mol.atomAdjList(metalAtom);\n        if (ligAtoms.length == 0) {\n            this.errmsg = 'Metal centre has no attachments: try selecting atom join-points.';\n            return;\n        }\n        mol = new MetalLigate(mol, metalAtom, ligAtoms).generate();\n        this.output.mol = mol;\n        this.output.currentAtom = metalAtom;\n        this.output.currentBond = -1;\n        this.output.selectedMask = Vec.booleanArray(false, mol.numAtoms);\n        for (let a of ligAtoms)\n            this.output.selectedMask[a - 1] = true;\n    }\n    execBond(order, type) {\n        if (!this.requireSubject())\n            return;\n        if (this.subjectLength == 1) {\n            this.performBondNew(this.subjectIndex[0], order, type);\n            return;\n        }\n        let ccmol = MolUtil.subgraphMask(this.input.mol, this.subjectMask);\n        let oneComp = true;\n        for (let n = ccmol.numAtoms; n >= 1; n--)\n            if (ccmol.atomConnComp(n) != 1) {\n                oneComp = false;\n                break;\n            }\n        if (oneComp)\n            this.performBondChange(order, type);\n        else\n            this.execConnect(order, type);\n    }\n    execBondGeom(geom) {\n        let bond = this.subjectLength == 2 ? this.input.mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) : 0;\n        if (this.subjectLength == 0 || this.subjectLength > 2 || (this.subjectLength == 2 && bond == 0)) {\n            this.errmsg = 'The subject must be a single atom or bond.';\n            return;\n        }\n        if (this.subjectLength == 1)\n            this.performBondGeomAtom(geom, this.subjectIndex[0]);\n        else\n            this.performBondGeomBond(geom, bond);\n    }\n    execBondAtom(order, type, element, x1, y1, x2, y2) {\n        let mol = this.input.mol;\n        let a1 = CoordUtil.atomAtPoint(mol, x1, y1, 0.01), a2 = CoordUtil.atomAtPoint(mol, x2, y2, 0.01);\n        if (a1 > 0 && a1 == a2)\n            return;\n        if (a1 > 0 && a2 > 0 && mol.findBond(a1, a2) > 0)\n            return;\n        this.output.mol = mol.clone();\n        if (a1 == 0)\n            a1 = this.output.mol.addAtom('C', x1, y1);\n        if (a2 == 0)\n            a2 = this.output.mol.addAtom(element, x2, y2);\n        this.output.mol.addBond(a1, a2, order, type);\n    }\n    execBondSwitch() {\n        if (this.input.altmol) {\n            this.output.mol = this.input.altmol;\n            this.output.altmol = this.input.mol;\n            return;\n        }\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        let src = 0, dst = [];\n        if (this.subjectLength == 1) {\n            src = this.subjectIndex[0];\n            let adj = mol.atomAdjList(src);\n            for (let n = 0; n < adj.length; n++)\n                if (mol.atomAdjCount(adj[n]) == 1)\n                    dst.push(adj[n]);\n        }\n        else if (this.subjectLength == 2 && mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) > 0) {\n            let ac1 = mol.atomAdjCount(this.subjectIndex[0]), ac2 = mol.atomAdjCount(this.subjectIndex[1]);\n            if (ac1 > 1 && ac2 == 1) {\n                src = this.subjectIndex[0];\n                dst.push(this.subjectIndex[1]);\n            }\n            else if (ac1 == 1 && ac2 > 1) {\n                src = this.subjectIndex[1];\n                dst.push(this.subjectIndex[0]);\n            }\n        }\n        if (src == 0 || dst.length == 0) {\n            this.errmsg = 'Subject must include a terminal bond.';\n            return;\n        }\n        let geoms = SketchUtil.guessAtomGeometry(mol, src, 1);\n        if (geoms.length == 0) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        this.output.mol = SketchUtil.switchAtomGeometry(mol, src, dst, geoms);\n        if (this.output.mol == null) {\n            this.errmsg = 'No alternative geometries identified.';\n        }\n    }\n    execBondRotate() {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol;\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot rotate a ring-bond.';\n            return;\n        }\n        if (mol.atomAdjCount(mol.bondFrom(bond)) == 1 && mol.atomAdjCount(mol.bondTo(bond)) == 1) {\n            this.errmsg = 'Two-atom components do not rotate.';\n            return;\n        }\n        mol = mol.clone();\n        let [atom1, atom2, side] = this.mobileSide(bond, true);\n        let cx = mol.atomX(atom1), cy = mol.atomY(atom1);\n        let theta = Math.atan2(mol.atomY(atom1) - mol.atomY(atom2), mol.atomX(atom1) - mol.atomX(atom2));\n        for (let a of side)\n            if (a != atom1) {\n                let dx = mol.atomX(a) - cx, dy = mol.atomY(a) - cy, dist = norm_xy(dx, dy);\n                let dtheta = Math.atan2(dy, dx);\n                dtheta = theta - angleDiff(dtheta, theta);\n                mol.setAtomPos(a, cx + dist * Math.cos(dtheta), cy + dist * Math.sin(dtheta));\n            }\n        let mask = Vec.idxMask(Vec.add(side, -1), mol.numAtoms);\n        for (let b = 1; b <= mol.numBonds; b++)\n            if (mask[mol.bondFrom(b) - 1] && mask[mol.bondTo(b) - 1]) {\n                let bt = mol.bondType(b);\n                if (bt == Molecule.BONDTYPE_INCLINED)\n                    mol.setBondType(b, Molecule.BONDTYPE_DECLINED);\n                else if (bt == Molecule.BONDTYPE_DECLINED)\n                    mol.setBondType(b, Molecule.BONDTYPE_INCLINED);\n            }\n        if (CoordUtil.sketchEquivalent(this.input.mol, mol)) {\n            this.errmsg = 'Rotation has no effect.';\n            return;\n        }\n        this.output.mol = mol;\n    }\n    execBondAddTwo() {\n        if (this.subjectLength != 1) {\n            this.errmsg = 'Subject must be a single atom.';\n            return;\n        }\n        let atom = this.subjectIndex[0];\n        if (this.input.mol.atomAdjCount(atom) < 2) {\n            this.errmsg = 'Subject atom must already have at least 2 bonds.';\n            return;\n        }\n        let ang = SketchUtil.calculateNewBondAngles(this.input.mol, atom, 1);\n        if (ang.length == 0)\n            ang = SketchUtil.exitVectors(this.input.mol, atom);\n        if (ang.length == 0) {\n            this.errmsg = 'Could not find a suitable geometry for new substituents.';\n            return;\n        }\n        let baseAng = ang[0];\n        let cx = this.input.mol.atomX(atom), cy = this.input.mol.atomY(atom);\n        if (ang.length > 1) {\n            let best = 0;\n            for (let n = 0; n < ang.length; n++) {\n                let x = cx + Molecule.IDEALBOND * Math.cos(ang[n]);\n                let y = cy + Molecule.IDEALBOND * Math.sin(ang[n]);\n                let score = CoordUtil.congestionPoint(this.input.mol, x, y);\n                if (n == 0 || score < best) {\n                    best = score;\n                    baseAng = ang[n];\n                }\n            }\n        }\n        let ang1 = baseAng - 30.0 * DEGRAD, ang2 = baseAng + 30.0 * DEGRAD;\n        let mol = this.input.mol.clone();\n        let a1 = mol.addAtom('C', cx + Molecule.IDEALBOND * Math.cos(ang1), cy + Molecule.IDEALBOND * Math.sin(ang1));\n        let a2 = mol.addAtom('C', cx + Molecule.IDEALBOND * Math.cos(ang2), cy + Molecule.IDEALBOND * Math.sin(ang2));\n        mol.addBond(atom, a1, 1);\n        mol.addBond(atom, a2, 1);\n        this.output.mol = mol;\n    }\n    execBondInsert() {\n        let mol = this.input.mol, bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot insert into a ring-bond.';\n            return;\n        }\n        let [alink, _, side] = this.mobileSide(bond);\n        mol = mol.clone();\n        mol.setBondOrder(bond, 1);\n        let fragmask = Vec.booleanArray(false, mol.numAtoms);\n        for (let a of side)\n            fragmask[a - 1] = true;\n        let frag = MolUtil.subgraphWithAttachments(mol, fragmask);\n        for (let n = mol.numAtoms; n >= 1; n--)\n            if (fragmask[n - 1] && n != alink) {\n                mol.deleteAtomAndBonds(n);\n                if (n < alink)\n                    alink -= 1;\n            }\n        mol.setAtomElement(alink, 'C');\n        mol.setAtomCharge(alink, 0);\n        mol.setAtomUnpaired(alink, 0);\n        mol.setAtomHExplicit(alink, Molecule.HEXPLICIT_UNKNOWN);\n        mol.setAtomIsotope(alink, Molecule.ISOTOPE_NATURAL);\n        mol.setAtomMapNum(alink, 0);\n        mol.setAtomExtra(alink, []);\n        mol.setAtomTransient(alink, []);\n        let fusion = new TemplateFusion(mol, frag, '');\n        fusion.withGuideOnly = true;\n        fusion.permuteAtom(alink);\n        if (fusion.perms.length == 0) {\n            this.errmsg = 'Unable to insert.';\n            return;\n        }\n        this.output.mol = fusion.perms[0].mol;\n        this.zapSubject();\n        this.output.currentAtom = alink;\n    }\n    execJoin() {\n        if (!this.requireSubject())\n            return;\n        this.output.mol = SketchUtil.joinOverlappingAtoms(this.input.mol, this.subjectMask);\n        if (this.output.mol == null) {\n            this.errmsg = 'Subject contains no overlapping atoms.';\n        }\n        else {\n            this.zapSubject();\n        }\n    }\n    execNudge(dir, extent) {\n        if (!this.requireSubject())\n            return;\n        let dx = extent * (dir == 'left' ? -1 : dir == 'right' ? 1 : 0);\n        let dy = extent * (dir == 'down' ? -1 : dir == 'up' ? 1 : 0);\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let x = this.output.mol.atomX(this.subjectIndex[n]), y = this.output.mol.atomY(this.subjectIndex[n]);\n            this.output.mol.setAtomPos(this.subjectIndex[n], x + dx, y + dy);\n        }\n    }\n    execNudgeFar(dir) {\n        if (!this.requireSubject())\n            return;\n        if (this.subjectLength == this.input.mol.numAtoms) {\n            this.errmsg = 'Cannot apply to entire molecule.';\n            return;\n        }\n        let dx = dir == 'left' ? -1 : dir == 'right' ? 1 : 0;\n        let dy = dir == 'down' ? -1 : dir == 'up' ? 1 : 0;\n        this.output.mol = SketchUtil.moveToEdge(this.input.mol, this.subjectMask, dx, dy);\n        if (this.output.mol == null) {\n            this.execNudge(dir, 1);\n        }\n    }\n    execFlip(axis) {\n        if (this.input.mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        let isVertical = axis == 'ver';\n        let cx = 0, cy = 0;\n        let mask = this.subjectMask, mol = this.input.mol;\n        if (this.input.currentAtom > 0) {\n            cx = mol.atomX(this.input.currentAtom);\n            cy = mol.atomY(this.input.currentAtom);\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(this.input.currentAtom);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.input.currentBond > 0) {\n            let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(bfr);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.subjectLength == 0) {\n            let box = mol.boundary();\n            cx = 0.5 * (box.minX() + box.maxX());\n            cy = 0.5 * (box.minY() + box.maxY());\n            mask = Vec.booleanArray(true, mol.numAtoms);\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                if (!isVertical)\n                    this.output.mol.setAtomX(n, 2 * cx - this.output.mol.atomX(n));\n                else\n                    this.output.mol.setAtomY(n, 2 * cy - this.output.mol.atomY(n));\n            }\n    }\n    execScale(mag) {\n        const { mol, currentAtom, currentBond } = this.input;\n        if (mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        if (currentAtom > 0) {\n            let connAtoms = [];\n            for (let a of this.subjectIndex)\n                if (a != currentAtom && mol.findBond(currentAtom, a) > 0)\n                    connAtoms.push(a);\n            let g = Graph.fromMolecule(mol);\n            g.isolateNode(currentAtom - 1);\n            let anything = false;\n            for (let cc of g.calculateComponentGroups()) {\n                Vec.addTo(cc, 1);\n                let sz = 0, dx = 0, dy = 0;\n                for (let a of cc)\n                    if (connAtoms.includes(a)) {\n                        dx += mol.atomX(a) - mol.atomX(currentAtom);\n                        dy += mol.atomY(a) - mol.atomY(currentAtom);\n                        sz++;\n                    }\n                if (sz == 0)\n                    continue;\n                [dx, dy] = [dx / sz, dy / sz];\n                if (Math.abs(dx) < 0.1 && Math.abs(dy) < 0.1)\n                    continue;\n                [dx, dy] = [dx * (mag - 1), dy * (mag - 1)];\n                if (!this.output.mol)\n                    this.output.mol = mol.clone();\n                for (let a of cc)\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + dx, this.output.mol.atomY(a) + dy);\n                anything = true;\n            }\n            if (anything)\n                return;\n        }\n        let b;\n        if (this.subjectLength == 2 && (b = mol.findBond(this.subjectIndex[0], this.subjectIndex[1])) > 0 && !mol.bondInRing(b)) {\n            let a1 = this.subjectIndex[0], a2 = this.subjectIndex[1];\n            let ccmol = mol.clone();\n            ccmol.deleteBond(b);\n            let idx1 = [], idx2 = [];\n            for (let n = 1; n <= ccmol.numAtoms; n++) {\n                if (ccmol.atomConnComp(n) == ccmol.atomConnComp(a1))\n                    idx1.push(n);\n                else if (ccmol.atomConnComp(n) == ccmol.atomConnComp(a2))\n                    idx2.push(n);\n            }\n            let dx = (mol.atomX(a2) - mol.atomX(a1)) * (mag - 1);\n            let dy = (mol.atomY(a2) - mol.atomY(a1)) * (mag - 1);\n            if (idx1.length == idx2.length) {\n                dx *= 0.5;\n                dy *= 0.5;\n            }\n            this.output.mol = mol.clone();\n            if (idx1.length <= idx2.length)\n                for (let n = 0; n < idx1.length; n++) {\n                    let a = idx1[n];\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) - dx, this.output.mol.atomY(a) - dy);\n                }\n            if (idx2.length <= idx1.length)\n                for (let n = 0; n < idx2.length; n++) {\n                    let a = idx2[n];\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + dx, this.output.mol.atomY(a) + dy);\n                }\n            return;\n        }\n        let cx = 0, cy = 0;\n        if (currentAtom > 0) {\n            cx = mol.atomX(currentAtom);\n            cy = mol.atomY(currentAtom);\n        }\n        else if (currentBond > 0) {\n            let bfr = mol.bondFrom(currentBond), bto = mol.bondTo(currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let x = this.output.mol.atomX(this.subjectIndex[n]);\n            let y = this.output.mol.atomY(this.subjectIndex[n]);\n            this.output.mol.setAtomPos(this.subjectIndex[n], (x - cx) * mag + cx, (y - cy) * mag + cy);\n        }\n    }\n    execRotate(theta, centreX, centreY) {\n        theta *= DEGRAD;\n        let mol = this.input.mol;\n        if (centreX != null && centreY != null) {\n            this.output.mol = mol.clone();\n            let mask = this.subjectLength == 0 ? Vec.booleanArray(true, mol.numAtoms) : this.subjectMask;\n            CoordUtil.rotateAtoms(this.output.mol, mask, centreX, centreY, theta);\n            return;\n        }\n        if (mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        let cx = 0, cy = 0;\n        let mask = this.subjectMask;\n        if (this.input.currentAtom > 0) {\n            cx = mol.atomX(this.input.currentAtom);\n            cy = mol.atomY(this.input.currentAtom);\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(this.input.currentAtom);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n            if (Vec.maskCount(mask) == 1 && mask[this.input.currentAtom - 1]) {\n                this.errmsg = 'Component is isolated.';\n                return;\n            }\n        }\n        else if (this.input.currentBond > 0) {\n            let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(bfr);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.subjectLength == 0) {\n            let box = mol.boundary();\n            cx = 0.5 * (box.minX() + box.maxX());\n            cy = 0.5 * (box.minY() + box.maxY());\n            mask = Vec.booleanArray(true, mol.numAtoms);\n        }\n        else {\n            if (this.subjectLength == 1) {\n                this.errmsg = 'Component is isolated.';\n                return;\n            }\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        CoordUtil.rotateAtoms(this.output.mol, mask, cx, cy, theta);\n    }\n    execBondDist(dist) {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        if (mol.bondInRing(bond)) {\n            let atom1 = mol.bondFrom(bond), atom2 = mol.bondTo(bond);\n            let dx = mol.atomX(atom2) - mol.atomX(atom1), dy = mol.atomY(atom2) - mol.atomY(atom1), curDist = norm_xy(dx, dy), inv = 1.0 / curDist;\n            let sel1 = this.isSelected(atom1), sel2 = this.isSelected(atom2);\n            let ox = dx * (dist - curDist) * inv, oy = dy * (dist - curDist) * inv;\n            if (sel1 && !sel2) {\n                mol.setAtomPos(atom1, mol.atomX(atom1) - ox, mol.atomY(atom1) - oy);\n            }\n            else if (sel2 && !sel1) {\n                mol.setAtomPos(atom2, mol.atomX(atom2) + ox, mol.atomY(atom2) + oy);\n            }\n            else {\n                mol.setAtomPos(atom1, mol.atomX(atom1) - 0.5 * ox, mol.atomY(atom1) - 0.5 * oy);\n                mol.setAtomPos(atom2, mol.atomX(atom2) + 0.5 * ox, mol.atomY(atom2) + 0.5 * oy);\n            }\n        }\n        else {\n            let [atom1, atom2, side] = this.mobileSide(bond);\n            let dx = mol.atomX(atom2) - mol.atomX(atom1), dy = mol.atomY(atom2) - mol.atomY(atom1);\n            let curDist = norm_xy(dx, dy), inv = 1.0 / curDist;\n            let ox = dx * (dist - curDist) * inv, oy = dy * (dist - curDist) * inv;\n            for (let a of side)\n                mol.setAtomPos(a, mol.atomX(a) - ox, mol.atomY(a) - oy);\n        }\n        this.output.mol = mol;\n    }\n    execAlignAngle(angle) {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot align a ring-bond.';\n            return;\n        }\n        let [atom1, atom2, side] = this.mobileSide(bond);\n        let cx = mol.atomX(atom2), cy = mol.atomY(atom2);\n        let delta = angle - Math.atan2(mol.atomY(atom1) - cy, mol.atomX(atom1) - cx);\n        let cosTheta = Math.cos(delta), sinTheta = Math.sin(delta);\n        for (let a of side) {\n            let x = mol.atomX(a) - cx, y = mol.atomY(a) - cy;\n            mol.setAtomPos(a, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n        }\n        this.output.mol = mol;\n    }\n    execAlignRegular() {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n        let theta = Math.atan2(mol.atomY(bto) - mol.atomY(bfr), mol.atomX(bto) - mol.atomX(bfr)) * RADDEG;\n        if (theta < 0)\n            theta += 360;\n        let snap = Math.round(theta / 30) * 30;\n        if (Math.abs(theta - snap) < 0.001)\n            return;\n        let delta = (snap - theta) * DEGRAD;\n        let mask = this.input.selectedMask;\n        if (Vec.allFalse(mask)) {\n            let cc = mol.atomConnComp(bfr);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                mask[n - 1] = cc == mol.atomConnComp(n);\n        }\n        let cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto)), cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let dx = mol.atomX(n) - cx, dy = mol.atomY(n) - cy;\n                let th = Math.atan2(dy, dx) + delta, dist = norm_xy(dx, dy);\n                mol.setAtomPos(n, cx + dist * Math.cos(th), cy + dist * Math.sin(th));\n            }\n        this.output.mol = mol;\n    }\n    execAdjustTorsion(angle) {\n        if (this.input.currentAtom == 0 || Vec.maskCount(this.input.selectedMask) != 3) {\n            this.errmsg = 'Must be 3 selected atoms and a current atom.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        let a1 = this.input.currentAtom;\n        let atoms = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (n != a1 && this.input.selectedMask[n - 1])\n                atoms.push(n);\n        let a2 = mol.findBond(a1, atoms[0]) > 0 ? atoms.shift() :\n            mol.findBond(a1, atoms[1]) > 0 ? atoms.pop() : 0;\n        if (a2 == 0 || mol.findBond(a2, atoms[0]) == 0) {\n            this.errmsg = 'Selected atoms must be consecutive.';\n            return;\n        }\n        let a3 = atoms[0];\n        let cx = mol.atomX(a2), cy = mol.atomY(a2);\n        let theta1 = Math.atan2(mol.atomY(a1) - cy, mol.atomX(a1) - cx);\n        let theta3 = Math.atan2(mol.atomY(a3) - cy, mol.atomX(a3) - cx);\n        let delta = angle - angleDiff(theta3, theta1);\n        let group1 = [], group3 = [];\n        if (mol.atomRingBlock(a1) == 0 || mol.atomRingBlock(a1) != mol.atomRingBlock(a3)) {\n            let g = Graph.fromMolecule(mol);\n            g.removeEdge(a2 - 1, a1 - 1);\n            g.removeEdge(a2 - 1, a3 - 1);\n            let cc = g.calculateComponents();\n            for (let n = 0; n < g.numNodes; n++) {\n                if (cc[n] == cc[a1 - 1])\n                    group1.push(n + 1);\n                else if (cc[n] == cc[a3 - 1])\n                    group3.push(n + 1);\n            }\n        }\n        if (mol.atomRingBlock(a1) > 0 && mol.atomRingBlock(a1) == mol.atomRingBlock(a2))\n            group1 = [a1];\n        if (mol.atomRingBlock(a3) > 0 && mol.atomRingBlock(a3) == mol.atomRingBlock(a2))\n            group3 = [a3];\n        CoordUtil.rotateAtoms(mol, Vec.idxMask(Vec.add(group1, -1), mol.numAtoms), cx, cy, -0.5 * delta);\n        CoordUtil.rotateAtoms(mol, Vec.idxMask(Vec.add(group3, -1), mol.numAtoms), cx, cy, 0.5 * delta);\n        this.output.mol = mol;\n    }\n    execMove(refAtom, deltaX, deltaY) {\n        let subj = this.subjectIndex;\n        if (Vec.len(subj) == 0) {\n            if (refAtom == 0)\n                return;\n            subj = [refAtom];\n        }\n        this.output.mol = this.input.mol.clone();\n        for (let a of subj)\n            this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + deltaX, this.output.mol.atomY(a) + deltaY);\n    }\n    execRing(ringX, ringY, aromatic) {\n        let rsz = ringX.length;\n        let atoms = Vec.numberArray(0, rsz), bonds = Vec.numberArray(0, rsz);\n        let outmol = this.input.mol.clone();\n        for (let n = 0; n < rsz; n++) {\n            atoms[n] = CoordUtil.atomAtPoint(outmol, ringX[n], ringY[n]);\n            if (atoms[n] == 0)\n                atoms[n] = outmol.addAtom('C', ringX[n], ringY[n]);\n        }\n        for (let n = 0; n < rsz; n++) {\n            let nn = n < rsz - 1 ? n + 1 : 0;\n            bonds[n] = outmol.findBond(atoms[n], atoms[nn]);\n            if (bonds[n] == 0)\n                bonds[n] = outmol.addBond(atoms[n], atoms[nn], 1);\n        }\n        if (aromatic) {\n            let valence = Vec.numberArray(0, rsz);\n            let pi = Vec.booleanArray(false, rsz);\n            for (let n = 0; n < rsz; n++) {\n                valence[n] = Chemistry.ELEMENT_BONDING[outmol.atomicNumber(atoms[n])] + outmol.atomCharge(atoms[n]);\n                if (outmol.atomHExplicit(atoms[n]) != Molecule.HEXPLICIT_UNKNOWN)\n                    valence[n] -= outmol.atomHExplicit(atoms[n]);\n                for (let b of outmol.atomAdjBonds(atoms[n]))\n                    valence[n] -= outmol.bondOrder(b);\n                if (outmol.bondOrder(bonds[n]) >= 2) {\n                    pi[n] = true;\n                    if (n < rsz - 1) {\n                        pi[n] = true;\n                        n++;\n                    }\n                    else\n                        pi[0] = true;\n                }\n            }\n            for (let n = 0; n < rsz; n++) {\n                let nn = n < rsz - 1 ? n + 1 : 0;\n                if (pi[n] || pi[nn])\n                    continue;\n                if (valence[n] > 0 && valence[nn] > 0) {\n                    outmol.setBondOrder(bonds[n], 2);\n                    pi[n] = true;\n                    pi[nn] = true;\n                    valence[n]--;\n                    valence[nn]--;\n                }\n            }\n        }\n        this.output.mol = outmol;\n    }\n    execTemplateFusion(frag) {\n        let mol = this.input.mol;\n        let fusion = new TemplateFusion(mol, frag, '');\n        if (this.subjectLength == 0)\n            fusion.permuteNone();\n        else if (this.subjectLength == 1)\n            fusion.permuteAtom(this.subjectIndex[0]);\n        else if (this.subjectLength == 2 && mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) > 0)\n            fusion.permuteBond(this.subjectIndex[0], this.subjectIndex[1]);\n        else\n            fusion.permuteMulti(this.subjectIndex);\n        let permutations = [];\n        for (let perm of fusion.perms) {\n            let obj = {};\n            obj['mol'] = perm.mol.toString();\n            obj['display'] = perm.display.toString();\n            obj['molidx'] = perm.molidx;\n            obj['temidx'] = perm.temidx;\n            obj['srcidx'] = perm.srcidx;\n            permutations.push(obj);\n        }\n        this.output.permutations = permutations;\n    }\n    execAbbrevTempl() {\n    }\n    execAbbrevGroup() {\n        if (!this.requireSubject())\n            return;\n        if (!this.checkAbbreviationReady())\n            return;\n        let mol = MolUtil.convertToAbbrev(this.input.mol, Vec.notMask(this.subjectMask), '?');\n        if (mol == null) {\n            this.errmsg = 'Inline abbreviations must be terminal with exactly one attachment point.';\n            return;\n        }\n        if (AbbrevContainer.main) {\n            AbbrevContainer.main.submitMolecule(mol, true);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomElement(n) == '?' && MolUtil.hasAbbrev(mol, n))\n                    AbbrevContainer.main.substituteAbbrevName(mol, n);\n        }\n        this.output.mol = mol;\n        this.zapSubject();\n        this.output.currentAtom = mol.numAtoms;\n    }\n    execAbbrevFormula() {\n        if (!this.requireSubject())\n            return;\n        if (!this.checkAbbreviationReady())\n            return;\n        let fixed = this.input.mol.clone();\n        for (let n = 1; n <= fixed.numAtoms; n++)\n            fixed.setAtomHExplicit(n, fixed.atomHydrogens(n));\n        let abv = MolUtil.subgraphMask(fixed, this.subjectMask);\n        let formula = MolUtil.molecularFormula(abv, true);\n        let mol = MolUtil.convertToAbbrev(this.input.mol, Vec.notMask(this.subjectMask), formula);\n        if (mol == null) {\n            this.errmsg = 'Inline abbreviations must be terminal with exactly one attachment point.';\n            return;\n        }\n        this.output.mol = mol;\n        this.zapSubject();\n        this.output.currentAtom = mol.numAtoms;\n    }\n    execAbbrevClear() {\n        let idx = [];\n        for (let n of this.subjectIndex)\n            if (MolUtil.hasAbbrev(this.input.mol, n))\n                idx.push(n);\n        if (idx.length == 0) {\n            this.errmsg = 'No abbreviations to clear.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        for (let n of idx)\n            MolUtil.clearAbbrev(mol, n);\n        this.output.mol = mol;\n    }\n    execAbbrevExpand() {\n        let idx = [];\n        for (let n of this.subjectIndex)\n            if (MolUtil.hasAbbrev(this.input.mol, n))\n                idx.push(n);\n        if (idx.length == 0) {\n            this.errmsg = 'No abbreviations to expand.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        for (let n of idx)\n            MolUtil.expandOneAbbrev(mol, n, true);\n        this.output.mol = mol;\n        this.zapSubject();\n    }\n    execBondArtifact(activity) {\n        if (!this.requireAtoms() || !this.requireSubject())\n            return;\n        let artif = new BondArtifact(this.input.mol.clone());\n        let subject = this.subjectIndex.slice(0), curAtom = this.input.currentAtom;\n        if (curAtom > 0 && subject.indexOf(curAtom) < 0)\n            subject.push(curAtom);\n        if (activity == ActivityType.BondArtifactPath) {\n            if (!artif.createPath(subject)) {\n                this.errmsg = 'Path artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactRing) {\n            if (!artif.createRing(subject)) {\n                this.errmsg = 'Ring artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactArene) {\n            if (!artif.createArene(subject)) {\n                this.errmsg = 'Arene artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactClear) {\n            if (!artif.removeArtifact(subject)) {\n                if (this.removePolymerBlock(subject))\n                    return;\n                this.errmsg = 'No artifact removed.';\n                return;\n            }\n        }\n        artif.rewriteMolecule();\n        this.output.mol = artif.mol;\n    }\n    execPolymerBlock() {\n        if (!this.requireAtoms() || !this.requireSubject())\n            return;\n        if (this.owner)\n            this.owner.performPolymerBlock(this.subjectIndex);\n    }\n    execAddHydrogens() {\n        let mol = this.input.mol.clone();\n        if (!this.requireAtoms())\n            return;\n        let atoms = this.subjectIndex;\n        if (atoms.length == 0)\n            atoms = Vec.identity1(mol.numAtoms);\n        for (let a of atoms) {\n            let hc = mol.atomHydrogens(a);\n            if (hc > 0)\n                SketchUtil.placeAdditionalHydrogens(mol, a, hc);\n        }\n        if (mol.numAtoms == this.input.mol.numAtoms) {\n            this.errmsg = 'Nothing needs to be added.';\n            return;\n        }\n        this.output.mol = mol;\n    }\n    execRemoveHydrogens() {\n        if (!this.requireAtoms())\n            return;\n        let mol = this.input.mol;\n        let selmask = this.subjectMask;\n        if (Vec.allFalse(selmask))\n            selmask = Vec.booleanArray(true, mol.numAtoms);\n        let keepmask = Vec.booleanArray(true, mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.boringHydrogen(mol, n)) {\n                let nbr = mol.atomAdjList(n)[0];\n                if (selmask[n - 1] || selmask[nbr - 1])\n                    keepmask[n - 1] = false;\n            }\n        if (Vec.allTrue(keepmask)) {\n            this.errmsg = 'Nothing to be deleted.';\n            return;\n        }\n        this.output.mol = MolUtil.subgraphMask(mol, keepmask);\n    }\n    execQueryClear() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol.clone();\n        const { currentBond } = this.input;\n        if (currentBond > 0 && QueryUtil.hasAnyQueryBond(mol, currentBond)) {\n            QueryUtil.deleteQueryBondAll(mol, currentBond);\n            this.output.mol = mol;\n            return;\n        }\n        let anything = false;\n        for (let a of this.subjectIndex)\n            if (QueryUtil.hasAnyQueryAtom(mol, a)) {\n                QueryUtil.deleteQueryAtomAll(mol, a);\n                anything = true;\n            }\n        for (let b = 1; b <= mol.numBonds; b++)\n            if (this.subjectMask[mol.bondFrom(b) - 1] && this.subjectMask[mol.bondTo(b) - 1] && QueryUtil.hasAnyQueryBond(mol, b)) {\n                QueryUtil.deleteQueryBondAll(mol, b);\n                anything = true;\n            }\n        if (anything)\n            this.output.mol = mol;\n        else\n            this.errmsg = 'No query terms to clear.';\n    }\n    execQueryCopy() {\n        if (!this.requireSubject())\n            return;\n        const { mol, currentBond } = this.input;\n        if (currentBond > 0) {\n            if (!QueryUtil.hasAnyQueryBond(mol, currentBond)) {\n                this.errmsg = 'Bond has no query terms.';\n                return;\n            }\n            let qmol = new Molecule();\n            qmol.addAtom('*', 0, 0);\n            qmol.addAtom('*', Molecule.IDEALBOND, 0);\n            qmol.addBond(1, 2, 1);\n            qmol.setBondExtra(1, mol.bondExtra(currentBond).filter((xtra) => xtra.startsWith('q')));\n            this.toClipboard = qmol.toString();\n        }\n        else if (this.subjectLength == 1) {\n            let atom = this.subjectIndex[0];\n            if (!QueryUtil.hasAnyQueryAtom(mol, atom)) {\n                this.errmsg = 'Atom has no query terms.';\n                return;\n            }\n            let qmol = new Molecule();\n            qmol.addAtom('*', 0, 0);\n            qmol.setAtomExtra(1, mol.atomExtra(atom).filter((xtra) => xtra.startsWith('q')));\n            this.toClipboard = qmol.toString();\n        }\n        else\n            this.errmsg = 'Subject has to be a single atom or bond.';\n    }\n    execQueryPaste() {\n        if (!this.requireSubject())\n            return;\n        let qmol = this.param.qmol;\n        if (!qmol) { }\n        else if (qmol.numAtoms == 1 && qmol.atomElement(1) == '*' && QueryUtil.hasAnyQueryAtom(qmol, 1)) {\n            let mol = this.output.mol = this.input.mol.clone();\n            let qterms = qmol.atomExtra(1).filter((xtra) => xtra.startsWith('q'));\n            for (let a of this.subjectIndex) {\n                let aterms = mol.atomExtra(a).filter((xtra) => xtra.startsWith('q'));\n                mol.setAtomExtra(a, [...aterms, ...qterms]);\n            }\n            return;\n        }\n        else if (qmol.numAtoms == 2 && qmol.atomElement(1) == '*' && qmol.atomElement(2) == '*' &&\n            qmol.numBonds == 1 && QueryUtil.hasAnyQueryBond(qmol, 1)) {\n            let mol = this.output.mol = this.input.mol.clone();\n            let qterms = qmol.bondExtra(1).filter((xtra) => xtra.startsWith('q'));\n            for (let b = 1; b <= mol.numBonds; b++)\n                if (this.subjectMask[mol.bondFrom(b) - 1] && this.subjectMask[mol.bondTo(b) - 1]) {\n                    let bterms = mol.bondExtra(b).filter((xtra) => xtra.startsWith('q'));\n                    mol.setBondExtra(b, [...bterms, ...qterms]);\n                }\n            return;\n        }\n        this.errmsg = 'Unable to paste query terms.';\n    }\n    execQuerySetAtom() {\n    }\n    execQuerySetBond() {\n    }\n    execQueryBondAny() {\n        if (!this.requireSubject())\n            return;\n        const { mol, currentBond } = this.input;\n        let bonds = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                bonds.push(n);\n        if (bonds.length == 0) {\n            this.errmsg = 'Must select at least one bond.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        for (let b of bonds) {\n            this.output.mol.setBondOrder(b, 0);\n            QueryUtil.setQueryBondOrders(this.output.mol, b, [-1, 0, 1, 2, 3, 4]);\n        }\n    }\n    execSproutDirection(deltaX, deltaY) {\n        var _a, _b;\n        if (!this.requireCurrent())\n            return;\n        if (deltaX == 0 && deltaY == 0)\n            return;\n        const { mol, currentAtom } = this.input;\n        let angleOptions;\n        if (mol.atomAdjCount(currentAtom) == 0)\n            angleOptions = Vec.identity0(12).map((n) => n * TWOPI / 12);\n        else\n            angleOptions = (_a = SketchUtil.primeDirections(mol, currentAtom)) !== null && _a !== void 0 ? _a : SketchUtil.exitVectors(mol, currentAtom);\n        if (angleOptions.length == 0)\n            return;\n        let theta = Math.atan2(deltaY, deltaX);\n        let idx = Vec.idxMin(angleOptions.map((look) => Math.abs(angleDiff(theta, look)) + 0.01 * Math.abs(Math.sin(look))));\n        let px = mol.atomX(currentAtom) + Molecule.IDEALBOND * Math.cos(angleOptions[idx]);\n        let py = mol.atomY(currentAtom) + Molecule.IDEALBOND * Math.sin(angleOptions[idx]);\n        this.output.mol = mol.clone();\n        let newAtom = this.output.mol.addAtom('C', px, py);\n        this.output.mol.addBond(currentAtom, newAtom, 1);\n        this.output.mol = (_b = SketchUtil.joinOverlappingAtoms(this.output.mol, Vec.booleanArray(true, this.output.mol.numAtoms))) !== null && _b !== void 0 ? _b : this.output.mol;\n        for (let n = 1; n <= this.output.mol.numAtoms; n++) {\n            let dx = this.output.mol.atomX(n) - px, dy = this.output.mol.atomY(n) - py;\n            if (norm2_xy(dx, dy) < CoordUtil.OVERLAP_THRESHOLD_SQ) {\n                this.output.currentAtom = n;\n                break;\n            }\n        }\n    }\n    requireSubject() {\n        if (this.subjectLength == 0)\n            this.errmsg = 'Subject required: current atom/bond or selected atoms.';\n        return this.subjectLength > 0;\n    }\n    requireAtoms() {\n        if (this.input.mol.numAtoms == 0)\n            this.errmsg = 'There are no atoms.';\n        return this.input.mol.numAtoms > 0;\n    }\n    requireCurrent() {\n        if (this.input.currentAtom == 0 && this.input.currentBond == 0) {\n            this.errmsg = 'There must be a current atom or bond.';\n            return false;\n        }\n        return true;\n    }\n    requireSelected() {\n        if (!this.hasSelected)\n            this.errmsg = 'No atoms are selected.';\n        return this.hasSelected;\n    }\n    pickSelectedGroup(groups, dir) {\n        if (this.subjectLength == 0)\n            return 0;\n        for (let i = 0; i < groups.length; i++) {\n            let g = groups[i];\n            let all = true;\n            for (let j = 0; j < g.length; j++)\n                if (!this.subjectMask[g[j] - 1]) {\n                    all = false;\n                    break;\n                }\n            if (all) {\n                i += dir;\n                return i < 0 ? i + groups.length : i >= groups.length ? i - groups.length : i;\n            }\n        }\n        for (let i = 0; i < groups.length; i++) {\n            let g = groups[i];\n            for (let j = 0; j < g.length; j++)\n                if (this.subjectMask[g[j] - 1])\n                    return i;\n        }\n        return 0;\n    }\n    zapSubject() {\n        this.output.currentAtom = 0;\n        this.output.currentBond = 0;\n        this.output.selectedMask = Vec.booleanArray(false, this.input.mol.numAtoms);\n    }\n    performBondNew(atom, order, type) {\n        let mol = this.input.mol;\n        let ang = SketchUtil.calculateNewBondAngles(mol, atom, order);\n        if (ang.length == 0)\n            ang = SketchUtil.exitVectors(mol, atom);\n        if (ang.length == 0) {\n            this.errmsg = 'Could not find a suitable geometry for a new substituent.';\n            return;\n        }\n        let bx = [], by = [], bscore = [];\n        for (let n = 0; n < ang.length; n++) {\n            let x = mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(ang[n]);\n            let y = mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(ang[n]);\n            let score = CoordUtil.congestionPoint(mol, x, y);\n            if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(atom)] <= 2)\n                score += Math.abs(angleNorm(ang[n])) * 1E-8;\n            else\n                score += Math.abs(angleDiff(0.5 * Math.PI, ang[n])) * 1E-8;\n            bx.push(x);\n            by.push(y);\n            bscore.push(score);\n        }\n        let idx = Vec.idxSort(bscore);\n        this.output.mol = mol.clone();\n        let anum = CoordUtil.atomAtPoint(this.output.mol, bx[idx[0]], by[idx[0]]);\n        if (anum == 0)\n            anum = this.output.mol.addAtom('C', bx[idx[0]], by[idx[0]]);\n        MolUtil.addBond(this.output.mol, atom, anum, order, type);\n        if (idx.length >= 2) {\n            this.output.altmol = mol.clone();\n            anum = CoordUtil.atomAtPoint(this.output.altmol, bx[idx[1]], by[idx[1]]);\n            if (anum == 0)\n                anum = this.output.altmol.addAtom('C', bx[idx[1]], by[idx[1]]);\n            MolUtil.addBond(this.output.altmol, atom, anum, order, type);\n        }\n    }\n    performBondChange(order, type) {\n        let mol = this.input.mol;\n        let bonds = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                bonds.push(n);\n        let switchType = type == Molecule.BONDTYPE_DECLINED || type == Molecule.BONDTYPE_INCLINED;\n        let stereoType = switchType || type == Molecule.BONDTYPE_UNKNOWN;\n        let anyChange = switchType;\n        for (let n = 0; n < bonds.length && !anyChange; n++) {\n            let b = bonds[n];\n            if (mol.bondOrder(b) != order && type == Molecule.BONDTYPE_NORMAL)\n                anyChange = true;\n            else if (mol.bondType(b) != type)\n                anyChange = true;\n        }\n        if (!anyChange) {\n            this.errmsg = 'No bond changes made.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 0; n < bonds.length; n++) {\n            let b = bonds[n], bfr = this.output.mol.bondFrom(b), bto = this.output.mol.bondTo(b);\n            if (switchType && this.output.mol.bondType(b) == type) {\n                this.output.mol.setBondFromTo(b, bto, bfr);\n            }\n            else if (this.output.mol.bondOrder(b) != order || this.output.mol.bondType(b) != type) {\n                if (!stereoType && order != this.output.mol.bondOrder(b))\n                    this.output.mol.setBondOrder(b, order);\n                else\n                    this.output.mol.setBondType(b, type);\n            }\n            else if (switchType) {\n                this.output.mol.setBondFromTo(b, bto, bfr);\n            }\n        }\n    }\n    performBondGeomAtom(geom, atom) {\n        let mol = this.input.mol;\n        let adj = mol.atomAdjList(atom);\n        let asz = adj.length, gsz = SketchUtil.GEOM_ANGLES[geom].length;\n        if (asz > gsz) {\n            this.errmsg = 'The current atom has more bonds than does the selected geometry.';\n            return;\n        }\n        if (asz == 0) {\n            this.performBondNew(atom, 1, Molecule.BONDTYPE_NORMAL);\n            return;\n        }\n        if (asz == gsz) {\n            this.output.mol = SketchUtil.refitAtomGeometry(mol, atom, geom);\n            if (this.output.mol == null)\n                this.errmsg = 'Could not re-fit the atom geometry.';\n            return;\n        }\n        let ang = CoordUtil.atomBondAngles(mol, atom);\n        let newang = SketchUtil.mapAngleSubstituent(geom, ang);\n        if (newang == null) {\n            this.output.mol = SketchUtil.refitAtomGeometry(mol, atom, geom);\n            if (this.output.mol == null)\n                this.errmsg = 'Could not re-fit the atom geometry.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        let theta = SketchUtil.pickNewAtomDirection(mol, atom, newang);\n        let x = this.output.mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(theta);\n        let y = this.output.mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(theta);\n        let anum = CoordUtil.atomAtPoint(this.output.mol, x, y);\n        if (anum == 0)\n            anum = this.output.mol.addAtom('C', x, y);\n        MolUtil.addBond(this.output.mol, atom, anum, 1);\n    }\n    performBondGeomBond(geom, bond) {\n        let mol = this.input.mol;\n        let bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        let ac1 = mol.atomAdjCount(bfr), ac2 = mol.atomAdjCount(bto);\n        if (ac1 > 1 && ac2 == 1) { }\n        else if (ac1 == 1 && ac2 > 1) {\n            let t = ac1;\n            ac1 = ac2;\n            ac2 = t;\n        }\n        else {\n            this.errmsg = 'One end of the bond must be terminal.';\n            return;\n        }\n        let adj = mol.atomAdjList(bfr);\n        let x1 = mol.atomX(bfr), y1 = mol.atomY(bfr);\n        let x2 = mol.atomX(bto), y2 = mol.atomY(bto);\n        let ang = [];\n        for (let n = 0, p = 0; n < adj.length; n++)\n            if (adj[n] != bto) {\n                ang.push(Math.atan2(mol.atomY(adj[n]) - y1, mol.atomX(adj[n]) - x1));\n            }\n        let newang = SketchUtil.mapAngleSubstituent(geom, ang);\n        if (newang == null) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        let bestAng = TWOPI + 1, bestX = 0, bestY = 0;\n        let curth = Math.atan2(y2 - y1, x2 - x1), r = norm_xy(x2 - x1, y2 - y1);\n        for (let n = 0; n < newang.length; n++) {\n            let th = angleDiff(newang[n], curth);\n            if (th < 0)\n                th += TWOPI;\n            if (n > 0 && th > bestAng)\n                continue;\n            let x = x1 + r * Math.cos(th + curth);\n            let y = y1 + r * Math.sin(th + curth);\n            if (CoordUtil.atomAtPoint(mol, x, y) > 0)\n                continue;\n            bestAng = th;\n            bestX = x;\n            bestY = y;\n        }\n        if (bestAng > TWOPI) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        this.output.mol.setAtomPos(bto, bestX, bestY);\n    }\n    checkAbbreviationReady() {\n        let junction = 0;\n        let mol = this.input.mol, subjmask = this.subjectMask;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let b1 = mol.bondFrom(n), b2 = mol.bondTo(n);\n            let atom = 0;\n            if ((subjmask[b1 - 1] && !subjmask[b2 - 1] && MolUtil.hasAbbrev(mol, b1)) ||\n                (subjmask[b2 - 1] && !subjmask[b1 - 1] && MolUtil.hasAbbrev(mol, b2))) {\n                this.errmsg = 'Already an abbreviation.';\n                return false;\n            }\n            if (subjmask[b1 - 1] && !subjmask[b2 - 1])\n                atom = b1;\n            else if (subjmask[b2 - 1] && !subjmask[b1 - 1])\n                atom = b2;\n            if (atom == 0 || atom == junction) { }\n            else if (junction == 0)\n                junction = atom;\n            else {\n                this.errmsg = 'The selected group must be terminal.';\n                return false;\n            }\n        }\n        return true;\n    }\n    mobileSide(bond, disqualTerminal = false) {\n        let { mol } = this.input;\n        let atom1 = mol.bondFrom(bond), atom2 = mol.bondTo(bond);\n        let g = Graph.fromMolecule(mol);\n        g.removeEdge(atom1 - 1, atom2 - 1);\n        let side1 = [], side2 = [];\n        for (let grp of g.calculateComponentGroups()) {\n            if (grp.includes(atom1 - 1))\n                side1 = Vec.add(grp, 1);\n            if (grp.includes(atom2 - 1))\n                side2 = Vec.add(grp, 1);\n        }\n        let weight1 = side1.length * (mol.atomRingBlock(atom1) > 0 ? 2 : 1);\n        let weight2 = side2.length * (mol.atomRingBlock(atom2) > 0 ? 2 : 1);\n        let sel1 = false, sel2 = false;\n        for (let a of side1)\n            if (this.isSelected(a)) {\n                sel1 = true;\n                break;\n            }\n        for (let a of side2)\n            if (this.isSelected(a)) {\n                sel2 = true;\n                break;\n            }\n        if (disqualTerminal && mol.atomAdjCount(atom1) == 1)\n            return [atom2, atom1, side2];\n        else if (disqualTerminal && mol.atomAdjCount(atom2) == 1)\n            return [atom1, atom2, side1];\n        else if (sel1 && !sel2) { }\n        else if ((sel2 && !sel1) || weight2 < weight1)\n            return [atom2, atom1, side2];\n        return [atom1, atom2, side1];\n    }\n    isSelected(atom) {\n        let mask = this.input.selectedMask;\n        return mask ? mask[atom - 1] : false;\n    }\n    removePolymerBlock(atoms) {\n        let polymer = new PolymerBlock(this.input.mol.clone());\n        for (let id of polymer.getIDList()) {\n            let unit = polymer.getUnit(id);\n            for (let atom of atoms)\n                if (unit.atoms.includes(atom)) {\n                    polymer.removeUnit(id);\n                    polymer.rewriteMolecule();\n                    this.output.mol = polymer.mol;\n                    return true;\n                }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=MoleculeActivity.js.map","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Mixture} from './Mixture';\nimport {MoleculeStream} from 'webmolkit/io/MoleculeStream';\nimport {StandardUnits, Units} from './Units';\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {ActivityType, MoleculeActivity, SketchState} from 'webmolkit/sketcher/MoleculeActivity';\nimport {MixfileComponent} from './Mixfile';\n\n/*\n\tMixture normalisation options: recommendations for how to make a mixture more conformant. It is up to the caller\n\tto decide what to do with this information.\n*/\n\nexport interface NormMixtureNote\n{\n\torigin:number[];\n\n\tstereoEnum?:string[]; // if defined, contains stereo-enumerated versions of current\n\n\t// units converted into concentration, if both possible & necessary\n\tconcQuantity?:number | number[]; // a concentration numeric which is associated with the units below (two numbers in case of a range)\n\tconcError?:number; // optional standard error (applies to quantity when it's a scalar)\n\tconcUnits?:string; // units for quantity (e.g. %, mol/L, g, etc.)\n\tconcRelation?:string;\n}\n\nenum AbsType\n{\n\tNone,\n\tMass, // reference scale: g\n\tVolume, // reference scale: L\n\tMoles, // reference scale: mol\n}\n\nexport class NormMixture\n{\n\tpublic notes:NormMixtureNote[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor(private mixture:Mixture)\n\t{\n\t}\n\n\tpublic analyse():void\n\t{\n\t\tlet origins = this.mixture.getOrigins();\n\t\tlet compList = origins.map((origin) => this.mixture.getComponent(origin));\n\n\t\tfor (let n = 0; n < origins.length; n++)\n\t\t{\n\t\t\tlet note:NormMixtureNote = {origin: origins[n]};\n\n\t\t\t// stereocentres get expanded out\n\t\t\tlet comp = compList[n];\n\t\t\tif (comp.molfile && Vec.isBlank(comp.contents))\n\t\t\t{\n\t\t\t\tlet mol = MoleculeStream.readUnknown(comp.molfile);\n\t\t\t\tif (!mol) continue;\n\t\t\t\tlet stereo = this.enumerateStereo(mol);\n\t\t\t\tif (Vec.notBlank(stereo)) note.stereoEnum = stereo.map((mol) => MoleculeStream.writeMDLMOL(mol));\n\t\t\t}\n\n\t\t\tthis.notes.push(note);\n\t\t}\n\n\t\tlet childIndexes:number[][] = [];\n\t\tfor (let n = 0; n < origins.length; n++)\n\t\t{\n\t\t\tchildIndexes[n] = [];\n\t\t\tlet o = origins[n];\n\t\t\tfor (let i = n + 1; i < origins.length; i++)\n\t\t\t\tif (origins[i].length == o.length + 1 && Vec.equals(o, origins[i].slice(0, o.length))) childIndexes[n].push(i);\n\t\t}\n\n\t\t// conversion of \"absolute units\" to concentrations, where possible\n\t\tlet sumType = new Array(origins.length).fill(AbsType.None);\n\t\tlet sumAmount1 = Vec.numberArray(null, origins.length);\n\t\tlet sumAmount2 = Vec.numberArray(null, origins.length);\n\t\tlet sumError = Vec.numberArray(null, origins.length);\n\t\twhile (true)\n\t\t{\n\t\t\tlet modified = false;\n\n\t\t\tfor (let n = 0; n < origins.length; n++)\n\t\t\t{\n\t\t\t\tlet comp = compList[n], note = this.notes[n];\n\n\t\t\t\tif (sumType[n] == AbsType.None)\n\t\t\t\t{\n\t\t\t\t\t[sumType[n], sumAmount1[n], sumAmount2[n], sumError[n]] = this.toAbsoluteUnits(comp);\n\t\t\t\t\tif (sumType[n] != AbsType.None) modified = true;\n\t\t\t\t}\n\n\t\t\t\tif (Vec.isBlank(comp.contents)) continue;\n\n\t\t\t\t// if there's no absolute quantity presently available, see if we can add up the sub-components\n\t\t\t\tif (sumType[n] == AbsType.None)\n\t\t\t\t{\n\t\t\t\t\tlet amount = 0, childType = AbsType.None;\n\t\t\t\t\tfor (let i of childIndexes[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (sumType[i] == AbsType.None || sumAmount2[i] != null ||\n\t\t\t\t\t\t\t(childType != AbsType.None && sumType[i] != childType))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tchildType = AbsType.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchildType = sumType[i];\n\t\t\t\t\t\tamount += sumAmount1[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (childType != AbsType.None)\n\t\t\t\t\t{\n\t\t\t\t\t\tsumType[n] = childType;\n\t\t\t\t\t\tsumAmount1[n] = amount;\n\t\t\t\t\t\tmodified = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if current type is an absolute unit, see if all-but-one of the children have that same type\n\t\t\t\tif (sumType[n] != AbsType.None && childIndexes[n].length >= 2)\n\t\t\t\t{\n\t\t\t\t\tlet idxOne = -1, sum = 0;\n\t\t\t\t\tfor (let i of childIndexes[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (sumType[i] == AbsType.None)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (idxOne >= 0) {idxOne = -1; break;} // only one allowed\n\t\t\t\t\t\t\tidxOne = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (sumType[i] != sumType[n]) {idxOne = -1; break;} // can't be defined-but-different\n\t\t\t\t\t\telse if (sumAmount2[i] != null) {idxOne = -1; break;} // ranges disqualify\n\t\t\t\t\t\telse sum += sumAmount1[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (idxOne >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tsumType[idxOne] = sumType[n];\n\t\t\t\t\t\tsumAmount1[idxOne] = sumAmount1[n] - sum;\n\t\t\t\t\t\tmodified = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!modified) break;\n\t\t}\n\n\t\t// now use derived absolute units to infer concentration-types\n\t\tfor (let n = 0; n < origins.length; n++) if (sumType[n] != AbsType.None)\n\t\t{\n\t\t\tfor (let i of childIndexes[n]) if (sumType[i] != AbsType.None)\n\t\t\t{\n\t\t\t\tlet scale = 0, denom = sumAmount1[n], uri:string = null;\n\t\t\t\tif (sumType[i] == AbsType.Mass)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) [scale, uri] = [100 / denom, StandardUnits.pcWW];\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [100 / denom, StandardUnits.pcWV];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) {}\n\t\t\t\t}\n\t\t\t\telse if (sumType[i] == AbsType.Volume)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) {}\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [100 / denom, StandardUnits.pcVV];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) {}\n\t\t\t\t}\n\t\t\t\telse if (sumType[i] == AbsType.Moles)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) {}\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [1.0 / denom, StandardUnits.mol_L];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) [scale, uri] = [100 / denom, StandardUnits.pcMM];\n\t\t\t\t}\n\n\t\t\t\tif (uri != null)\n\t\t\t\t{\n\t\t\t\t\tif (sumAmount2[i] == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.notes[i].concQuantity = sumAmount1[i] * scale;\n\t\t\t\t\t\tthis.notes[i].concError = sumError[i] == null ? null : sumError[i] * scale;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.notes[i].concQuantity = [sumAmount1[i] * scale, sumAmount2[i] * scale];\n\t\t\t\t\t}\n\t\t\t\t\tthis.notes[i].concUnits = Units.uriToName(uri);\n\t\t\t\t\tthis.notes[i].concRelation = compList[n].relation;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic findNote(origin:number[]):NormMixtureNote\n\t{\n\t\tfor (let note of this.notes) if (Vec.equals(origin, note.origin)) return note;\n\t\treturn null;\n\t}\n\n\t// ------------ private methods ------------\n\n\t// if the given molecule has stereogenic centres (i.e. wavy bonds), enumerate them explicitly\n\tprivate enumerateStereo(mol:Molecule):Molecule[]\n\t{\n\t\tlet splitMolecule = (mol:Molecule):Molecule[] =>\n\t\t{\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++) if (mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN)\n\t\t\t{\n\t\t\t\tlet mol1 = mol.clone(), mol2 = mol.clone();\n\t\t\t\tif (mol.bondOrder(n) == 1)\n\t\t\t\t{\n\t\t\t\t\t// make up & down versions of the bond\n\t\t\t\t\tmol1.setBondType(n, Molecule.BONDTYPE_DECLINED);\n\t\t\t\t\tmol2.setBondType(n, Molecule.BONDTYPE_INCLINED);\n\t\t\t\t\treturn [mol1, mol2];\n\t\t\t\t}\n\t\t\t\telse if (mol.bondOrder(n) == 2)\n\t\t\t\t{\n\t\t\t\t\t// for a cis/trans double bond, use the sketcher algorithm to rotate it; if the rotation is rejected,\n\t\t\t\t\t// it'll just return the input molecule, with the stereolabel removed\n\t\t\t\t\tlet mol1 = mol.clone();\n\t\t\t\t\tmol1.setBondType(n, Molecule.BONDTYPE_NORMAL);\n\n\t\t\t\t\tlet mol2:Molecule = null;\n\t\t\t\t\tif (!mol.bondInRing(n))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet state:SketchState = {mol: mol1, currentAtom: 0, currentBond: n, selectedMask: null};\n\t\t\t\t\t\tlet activ = new MoleculeActivity(state, ActivityType.BondRotate, {});\n\t\t\t\t\t\tactiv.execute();\n\t\t\t\t\t\tif (!activ.errmsg && activ.output.mol) mol2 = activ.output.mol;\n\t\t\t\t\t}\n\t\t\t\t\treturn mol2 ? [mol1, mol2] : [mol1];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tlet list:Molecule[] = [mol];\n\t\tfor (let n = 0; n < list.length; n++)\n\t\t{\n\t\t\tlet emols = splitMolecule(list[n]);\n\t\t\tif (!emols) continue;\n\n\t\t\tlist[n] = emols[0];\n\t\t\tfor (let i = emols.length - 1; i >= 1; i--) list.splice(n + 1, 0, emols[i]);\n\t\t\tn--;\n\t\t}\n\n\t\treturn list.length > 1 ? list : null;\n\t}\n\n\t// converts the units within the component to \"absolute\" form, at a singular scale; return is type followed by\n\t// quantity1, quantity2, error (to capture ranges & errors, where applicable)\n\tprivate toAbsoluteUnits(comp:MixfileComponent):[AbsType, number, number, number]\n\t{\n\t\tif (!comp.units || comp.quantity == null /*|| typeof comp.quantity != 'number'*/) return [AbsType.None, null, null, null];\n\t\tlet uri = Units.nameToURI(comp.units);\n\t\tif (!uri) return [AbsType.None, null, null, null];\n\n\t\tlet scale = 0, type = AbsType.None;\n\n\t\tif (uri == StandardUnits.kg) [scale, type] = [1E3, AbsType.Mass];\n\t\telse if (uri == StandardUnits.g) [scale, type] = [1, AbsType.Mass];\n\t\telse if (uri == StandardUnits.mg) [scale, type] = [1E-3, AbsType.Mass];\n\t\telse if (uri == StandardUnits.ug) [scale, type] = [1E-6, AbsType.Mass];\n\t\telse if (uri == StandardUnits.ng) [scale, type] = [1E-9, AbsType.Mass];\n\t\telse if (uri == StandardUnits.L) [scale, type] = [1, AbsType.Volume];\n\t\telse if (uri == StandardUnits.mL) [scale, type] = [1E-3, AbsType.Volume];\n\t\telse if (uri == StandardUnits.uL) [scale, type] = [1E-6, AbsType.Volume];\n\t\telse if (uri == StandardUnits.nL) [scale, type] = [1E-9, AbsType.Volume];\n\t\telse if (uri == StandardUnits.mol) [scale, type] = [1, AbsType.Moles];\n\t\telse if (uri == StandardUnits.mmol) [scale, type] = [1E-3, AbsType.Moles];\n\t\telse if (uri == StandardUnits.umol) [scale, type] = [1E-6, AbsType.Moles];\n\t\telse if (uri == StandardUnits.nmol) [scale, type] = [1E-9, AbsType.Moles];\n\t\telse return [AbsType.None, null, null, null];\n\n\t\tif (typeof comp.quantity == 'number')\n\t\t{\n\t\t\tlet error = comp.error == null ? null : comp.error * scale;\n\t\t\treturn [type, (comp.quantity as number) * scale, null, error];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet [lo, hi] = comp.quantity as number[];\n\t\t\treturn [type, lo * scale, hi * scale, null];\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {deepClone} from 'webmolkit/util/util';\nimport {Mixfile, MIXFILE_VERSION, MixfileComponent} from './Mixfile';\nimport {Vec} from 'webmolkit/util/Vec';\n\n/*\n\tData container for mixtures: basically wraps the Mixfile interface, with additional functionality.\n\n\tNote that functionality should be assumed to be using shallow pointers to the underlying dictionary, unless\n\tspecified otherwise (e.g. clone).\n*/\n\nexport class Mixture\n{\n\t// ------------ public methods ------------\n\n\tconstructor(public mixfile?:Mixfile)\n\t{\n\t\tif (!mixfile) this.mixfile = {mixfileVersion: MIXFILE_VERSION};\n\t\telse if (!this.mixfile.mixfileVersion) this.mixfile.mixfileVersion = MIXFILE_VERSION;\n\t}\n\n\t// instantiates a new mixture object by casting a component into a root mixfile\n\tpublic static fromComponent(comp:MixfileComponent):Mixture\n\t{\n\t\tlet mixfile = deepClone(comp) as Mixfile;\n\t\tmixfile.mixfileVersion = MIXFILE_VERSION;\n\t\treturn new Mixture(mixfile);\n\t}\n\n\t// returns true if the mixture is blank\n\tpublic isEmpty():boolean\n\t{\n\t\treturn Mixture.isComponentEmpty(this.mixfile);\n\t}\n\tpublic static isComponentEmpty(comp:MixfileComponent):boolean\n\t{\n\t\tconst BITS = ['name', 'description', 'synonyms', 'formula', 'molfile', 'inchi', 'inchiKey', 'smiles',\n\t\t\t\t\t  'ratio', 'quantity', 'units', 'relation', 'identifiers', 'links'];\n\t\tfor (let bit of BITS) if ((comp as any)[bit] != null) return false;\n\t\tif (Vec.arrayLength(comp.contents) > 0) return false;\n\t\treturn true;\n\t}\n\n\t// returns true if there's something to put in the quantity section\n\tpublic static hasQuantity(comp:MixfileComponent):boolean\n\t{\n\t\treturn comp.quantity != null || comp.ratio != null;\n\t}\n\n\t// makes a deep copy of self\n\tpublic clone():Mixture\n\t{\n\t\treturn new Mixture(deepClone(this.mixfile));\n\t}\n\n\t// returns true if the two mixtures are identical at all parts of their branch structure\n\tpublic equals(other:Mixture):boolean\n\t{\n\t\tif (other == null) return false;\n\t\treturn this.recursiveEqual(this.mixfile, other.mixfile);\n\t}\n\n\t// unpacks a string into a mixture; throws an exception if anything went wrong\n\tpublic static deserialise(data:string):Mixture\n\t{\n\t\tlet mixfile = JSON.parse(data);\n\t\treturn new Mixture(mixfile);\n\t}\n\n\t// converts the entire underlying JSON mixfile into a prettyprinted string\n\tpublic serialise():string\n\t{\n\t\treturn Mixture.beautify(this.mixfile);\n\t}\n\n\t// likewise, for a sub-component\n\tpublic static serialiseComponent(comp:MixfileComponent):string\n\t{\n\t\treturn Mixture.beautify(comp);\n\t}\n\n\t// uses the \"origin vector\" to fetch a particular component; this is an array of indices, where [] indicates the root; its first\n\t// component is [0], the second child of its first component is [0,1], etc.\n\tpublic getComponent(origin:number[]):MixfileComponent\n\t{\n\t\tif (origin.length == 0) return this.mixfile;\n\t\tlet find:MixfileComponent = null, look = this.mixfile.contents || [];\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tfind = look[o];\n\t\t\tif (!find) return null;\n\t\t\tlook = find.contents || [];\n\t\t}\n\t\treturn find;\n\t}\n\tpublic getParentComponent(origin:number[]):MixfileComponent\n\t{\n\t\tif (origin.length == 0) return null;\n\t\torigin = origin.slice();\n\t\torigin.pop();\n\t\treturn this.getComponent(origin);\n\t}\n\n\t// returns a flat list of all components, i.e. without any hierarchy; these are all pointers to the originals, so\n\t// modifications can be made directly\n\tpublic getComponents():MixfileComponent[]\n\t{\n\t\tlet list:MixfileComponent[] = [], stack:MixfileComponent[] = [this.mixfile];\n\t\twhile (stack.length > 0)\n\t\t{\n\t\t\tlet comp = stack.shift();\n\t\t\tlist.push(comp);\n\t\t\tif (comp.contents) for (let sub of comp.contents) stack.push(sub);\n\t\t}\n\t\treturn list;\n\t}\n\n\t// returns an array that is equal in size to the number of nodes; each entry contains origin of that node\n\tpublic getOrigins():number[][]\n\t{\n\t\tlet origins:number[][] = [];\n\n\t\tlet nodeEnum = (origin:number[], comp:MixfileComponent):void =>\n\t\t{\n\t\t\torigins.push(origin);\n\t\t\tfor (let n = 0; n < Vec.arrayLength(comp.contents); n++) nodeEnum(Vec.append(origin, n), comp.contents[n]);\n\t\t};\n\n\t\tnodeEnum([], this.mixfile);\n\t\treturn origins;\n\t}\n\n\t// replaces a component at a given position; returns true if the new component was different to the old one\n\tpublic setComponent(origin:number[], comp:MixfileComponent):boolean\n\t{\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\n\t\t// copy over the dictionary entries in 'comp', noting if anything changed\n\t\tlet modified = false;\n\t\tfor (let k in comp)\n\t\t{\n\t\t\tlet v = (comp as any)[k];\n\t\t\tif (v != (find as any)[k])\n\t\t\t{\n\t\t\t\t(find as any)[k] = v;\n\t\t\t\tmodified = true;\n\t\t\t}\n\t\t}\n\n\t\t// cleanup by removing explicit nulls\n\t\tObject.keys(find).forEach((key:string) => {if ((find as any)[key] == null) delete (find as any)[key];});\n\n\t\treturn modified;\n\t}\n\n\t// deletes the indicated component, and collapses any child nodes into its own position (as opposed to just deleting\n\t// them too)\n\tpublic deleteComponent(origin:number[]):void\n\t{\n\t\tif (origin.length == 0) return; // can't delete the whole thing\n\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents, parent = look;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tparent = look;\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\t\tlet idx = origin[origin.length - 1];\n\t\tparent.splice(idx, 1);\n\t\tif (look) for (let c of look) parent.splice(idx++, 0, c);\n\t}\n\n\t// insert a new component \"above\" the existing one, and handle the reparenting\n\tpublic prependBefore(origin:number[], comp:MixfileComponent):void\n\t{\n\t\t// slightly different when prepending before the root element\n\t\tif (origin.length == 0)\n\t\t{\n\t\t\tlet mixfile = this.mixfile;\n\t\t\tlet subcomp:MixfileComponent = {};\n\t\t\tconst SKIP = ['mixfileVersion', 'contents'];\n\t\t\tfor (let key in (mixfile as any)) if (!SKIP.includes(key))\n\t\t\t{\n\t\t\t\t(subcomp as any)[key] = (mixfile as any)[key];\n\t\t\t\tdelete (mixfile as any)[key];\n\t\t\t}\n\t\t\tmixfile.contents = [subcomp];\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents, parent = look;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tparent = look;\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\t\tlet idx = origin[origin.length - 1];\n\t\tparent[idx] = comp;\n\t\tcomp.contents = [find];\n\t}\n\n\t// takes an origin vector and splits it into {parent origin} and {child index}; returns null on both counts if this is the root node\n\tpublic static splitOrigin(origin:number[]):[number[], number]\n\t{\n\t\tif (origin.length == 0) return [null, null];\n\t\tlet parent = origin.slice(0);\n\t\tlet idx = parent.splice(origin.length - 1, 1)[0];\n\t\treturn [parent, idx];\n\t}\n\n\t// makes a JSON object into a nicely formatted string for human readability\n\tpublic static beautify(json:any):string\n\t{\n\t\tlet lines = JSON.stringify(json, null, 4).split('\\n');\n\t\tlet regex = /^(\\s*\\\"\\w+\\\": )([\\[\\{].*)$/, regpad = /^(\\s*)/;\n\t\tfor (let n = 0; n < lines.length; n++)\n\t\t{\n\t\t\tlet match = regex.exec(lines[n]);\n\t\t\tif (!match) continue;\n\t\t\tlet padding = regpad.exec(lines[n]);\n\t\t\tlines[n] = match[1] + '\\n' + padding[1] + match[2];\n\t\t}\n\t\treturn lines.join('\\n');\n\t}\n\n\t// ------------ private methods ------------\n\n\t// returns true if this component, and all sub-components, are equal\n\tprivate recursiveEqual(comp1:MixfileComponent, comp2:MixfileComponent):boolean\n\t{\n\t\tlet dict1:any = comp1, dict2:any = comp2;\n\t\t/*let keys1 = Object.keys(dict1), keys2 = Object.keys(dict2);\n\t\tlet i:number;\n\t\tif ((i = keys1.indexOf('contents')) >= 0) keys1.splice(i, 1);\n\t\tif ((i = keys2.indexOf('contents')) >= 0) keys2.splice(i, 1);*/\n\t\tlet keys1:string[] = [], keys2:string[] = [];\n\t\tfor (let k in dict1) if (k != 'contents' && dict1[k] != null) keys1.push(k);\n\t\tfor (let k in dict2) if (k != 'contents' && dict2[k] != null) keys2.push(k);\n\t\tkeys1.sort();\n\t\tkeys2.sort();\n\t\tif (!Vec.equals(keys1, keys2)) return false; // different keys (less contents) is a dealbreaker\n\t\tfor (let k of keys1)\n\t\t{\n\t\t\tlet v1 = dict1[k], v2 = dict2[k];\n\t\t\tif (Array.isArray(v1) && Array.isArray(v2))\n\t\t\t{\n\t\t\t\tif (!Vec.equals(v1, v2)) return false;\n\t\t\t}\n\t\t\telse // assume scalar\n\t\t\t{\n\t\t\t\tif (v1 != v2) return false;\n\t\t\t}\n\t\t}\n\n\t\tlet len = Vec.arrayLength(comp1.contents);\n\t\tif (len != Vec.arrayLength(comp2.contents)) return false;\n\t\tfor (let n = 0; n < len; n++) if (!this.recursiveEqual(comp1.contents[n], comp2.contents[n])) return false;\n\n\t\treturn true;\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\n/*\n\tThe Mixfile is a raw definition of the contents of a mixture, which maps directly to the JSON datastructure\n\tthat holds the serialised content. For keeping an operable mixture instance, see the Mixture class.\n*/\n\nexport const MIXFILE_VERSION = 1.00; // version number to use for newly created instances\n\nexport type MixfileMetadatum = string | (string | number)[];\n\nexport interface Mixfile extends MixfileComponent\n{\n\tmixfileVersion:number;\n}\n\nexport interface MixfileComponent\n{\n\tname?:string;\n\tdescription?:string;\n\tsynonyms?:string[];\n\n\t// molecular specification: none of them are mandatory, but if more than one is specified, they must refer to the same species, \n\t// to the extent that the format allows; InChI strings are expected to be standard, while SMILES are not\n\tformula?:string;\n\tmolfile?:string;\n\tinchi?:string;\n\tinchiKey?:string;\n\tsmiles?:string;\n\n\t// if the concentration is known, then these fields should be filled out as appropriate; if the concentration is a ratio,\n\t// it is relative to all of the components within the same branch\n\tquantity?:number | number[]; // a concentration numeric which is associated with the units below (two numbers in case of a range)\n\terror?:number; // optional standard error (applies to quantity when it's a scalar)\n\tratio?:number[]; // a ratio, specified as [numerator, denominator]\n\tunits?:string; // units for quantity (e.g. %, mol/L, g, etc.)\n\trelation?:string; // optional modifier when applied to quantity (e.g. >, <, ~)\n\n\t// identifiers that map the substance to external databases (e.g. PubChem, ChemSpider, CAS, etc.); identifiers are ID numbers, and\n\t// the meaning is implied by the context; links should be resolvable URLs, which are an alternative way of locating external\n\t// resources; in some cases where there are multiple identifiers, the value should be specified as an array\n\tidentifiers?:Record<string, string | string[]>;\n\tlinks?:Record<string, string | string[]>;\n\n\t// metadata starts with an IRI that defines the core concept, and then may be followed by scalar data and/or other IRIs; this allows\n\t// discrete facts to be asserted about the component, as well as numeric values such as physical properties and their units\n\tmetadata?:MixfileMetadatum[];\n\n\t// subcomponents: if this is a discrete molecular entity, then there will be none; usually there are either 0 or 2-or-more; in cases\n\t// where there are any subcomponents, any of the properties above apply to all of these subcomponents collectively\n\tcontents?:MixfileComponent[];\n}\n\n// useful for cleaning up external JSON content\nexport const MIXFILE_COMPONENT_FIELDS =\n[\n\t'name', 'description', 'synonyms', 'formula', 'molfile', 'inchi', 'inchiKey', 'smiles',\n\t'ratio', 'quantity', 'units', 'relation', 'identifiers', 'links', 'contents'\n];\nexport const MIXFILE_ROOT_FIELDS =\n[\n\t'mixfileVersion', ...MIXFILE_COMPONENT_FIELDS\n];\n\n/* orignal example of what the format might look like (1st draft):\n{\n\t\"mixture\": \"1.0 M lithium diisopropyl amide in THF/hexanes\",\n\t\"contents\":\n\t[\n\t\t{\n\t\t\t\"name\": \"lithium diisopropylamide\",\n\t\t\t\"synonyms\": [\"LDA\", \"(iPr)2N.Li\"],\n\t\t\t\"formula\": \"C6H14LiN\",\n\t\t\t\"pubchem\": \"2724682\",\n\t\t\t\"chemspider\": \"2006804\",\n\t\t\t\"inchi\": \"InChI=1S/C6H14N.Li/c1-5(2)7-6(3)4;/h5-6H,1-4H3;/q-1;+1\",\n\t\t\t\"smiles\": \"[Li+].CC(C)[N-]C(C)C\",\n\t\t\t\"molfile\": \"\\nOpenMolecule\\n\\n  8  7  0  0  0  0  0  0  0  0999 V2000\\n    0.0000    0.0000    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\\n    1.5000    0.0000    0.0000 Li  0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.7500    1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.7500   -1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.0000    2.5981    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -2.2500    1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n    0.0000   -2.5981    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -2.2500   -1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n  1  2  1  0  0  0  0\\n  1  3  1  0  0  0  0\\n  1  4  1  0  0  0  0\\n  3  5  1  0  0  0  0\\n  3  6  1  0  0  0  0\\n  4  7  1  0  0  0  0\\n  4  8  1  0  0  0  0\\nM  END\\n\",\n\t\t\t\"quantity\": 1.0,\n\t\t\t\"units\": \"mol/L\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"solvent\",\n\t\t\t\"contents\":\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"tetrahydrofuran\",\n\t\t\t\t\t\"synonyms\": [\"THF\"],\n\t\t\t\t\t\"formula\": \"C4H8O\",\n\t\t\t\t\t\"pubchem\": \"8028\",\n\t\t\t\t\t\"chemspider\": \"7737\",\n\t\t\t\t\t\"inchi\": \"InChI=1S/C4H8O/c1-2-4-5-3-1/h1-4H2\",\n\t\t\t\t\t\"smiles\": \"C1CCOC1\",\n\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\"fraction\": [1, 8]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"group\": \"hexanes\",\n\t\t\t\t\t\"fraction\": [7, 8],\n\t\t\t\t\t\"contents\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"n-hexane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"8058\",\n\t\t\t\t\t\t\t\"chemspider\": \"7767\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-3-5-6-4-2/h3-6H2,1-2H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCCCCC\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [50, 70]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"methylcyclopentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7296\",\n\t\t\t\t\t\t\t\"chemspider\": \"7024\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H12/c1-6-4-2-3-5-6/h6H,2-5H2,1H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CC1CCCC1\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [10, 20]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"2-methypentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7892\",\n\t\t\t\t\t\t\t\"chemspider\": \"7604\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-4-5-6(2)3/h6H,4-5H2,1-3H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCCC(C)C\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [1, 5]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"3-methylpentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7282\",\n\t\t\t\t\t\t\t\"chemspider\": \"7010\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-4-6(3)5-2/h6H,4-5H2,1-3H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCC(C)CC\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [1, 5]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"other hexanes\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n*/\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {deepClone} from 'webmolkit/util/util';\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {MoleculeStream} from 'webmolkit/io/MoleculeStream';\nimport {MolUtil} from 'webmolkit/mol/MolUtil';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Mixfile, MixfileComponent} from './Mixfile';\nimport {NormMixture, NormMixtureNote} from './NormMixture';\nimport {Mixture} from './Mixture';\nimport {InChIDelegate} from './InChIDelegate';\nimport {Units} from './Units';\n\n// quick implementation of CRC hash codes\nlet crc_table:number[] = [];\nfunction make_crc_table():void\n{\n\tif (crc_table.length > 0) return;\n\tfor (let n = 0; n < 256; n++)\n\t{\n\t\tlet c = n;\n\t\tfor (let i = 0; i < 8; i++) if ((c & 1) != 0) c = 0xEDB88320 ^ (c >>> 1); else c = (c >>> 1);\n\t\tcrc_table.push(c);\n\t}\n}\nconst BOOT_CRC = 0xFFFFFFFF;\nfunction start_crc():number {return BOOT_CRC;}\nfunction feed_crc(crc:number, byte:number):number\n{\n\tlet idx = (crc ^ byte) & 0xFF;\n\treturn crc_table[idx] ^ (crc >>> 8);\n}\nfunction end_crc(crc:number):number {return crc ^ BOOT_CRC;}\n\n// work-in-progress placeholder for the recursive MInChI assembler\ninterface MInChIBuilder\n{\n\tlayerN:string; // N-layer is the hierarchical form\n\tlayerG:string; // G-layer has the concentrations\n}\n\n// for marking the segments of the outgoing MInChI string according to category\nexport enum MInChISegment\n{\n\tNone = 0,\n\tHeader, // the initial recognition string\n\tComponent, // the components (of which there can be multiple contiguous instances)\n\tHierarchy, // the /n layer\n\tConcentration, // the /g layer\n}\n\n// augmented version of a component used to stash some MInChI-specific derived content\ninterface MInChIComponent extends MixfileComponent\n{\n\tinchiFrag:string;\n\tuseRatio:number;\n\tnote:NormMixtureNote;\n}\n\nconst MINCHI_VERSION = 'MInChI=0.99.1S';\n\n/*\n\tFormulates a MInChI string out of the given mixture.\n*/\n\nexport class ExportMInChI\n{\n\tprivate mixture:Mixture;\n\tprivate norm:NormMixture;\n\tprivate minchi = '?';\n\tprivate segment:MInChISegment[] = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(mixfile:Mixfile, private inchi:InChIDelegate)\n\t{\n\t\tthis.mixture = new Mixture(deepClone(mixfile));\n\t\tthis.norm = new NormMixture(this.mixture);\n\t\tthis.norm.analyse();\n\t}\n\n\t// this should generally be called first: any component that has a structure but not an InChI string gets one calculated,\n\t// which presumes that the external environment has been configured to allow this; returns true if anything was done, i.e.\n\t// the parameter mixture was modified; note that if any components have an InChI that is wrong, this will be believed\n\tpublic async fillInChI():Promise<boolean>\n\t{\n\t\tlet modified = false;\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile || comp.inchi) continue;\n\t\t\tlet mol:Molecule = null;\n\t\t\ttry {mol = MoleculeStream.readUnknown(comp.molfile);}\n\t\t\tcatch (e) {continue;} // silent failure if it's an invalid molecule\n\t\t\tif (MolUtil.isBlank(mol)) continue;\n\t\t\tlet {inchi, inchiKey} = await this.inchi.generate(mol);\n\t\t\tcomp.inchi = inchi;\n\t\t\tcomp.inchiKey = inchiKey;\n\t\t\tmodified = true;\n\t\t}\n\t\treturn modified;\n\t}\n\n\t// assembles the MInChI string: once this has completed, the result is available\n\tpublic formulate():void\n\t{\n\t\tlet modmix = this.mixture.clone();\n\t\t//this.sortContents(sortmix.contents);\n\n\t\tfor (let origin of modmix.getOrigins())\n\t\t{\n\t\t\tlet note = this.norm.findNote(origin);\n\t\t\tif (note) (modmix.getComponent(origin) as MInChIComponent).note = note;\n\t\t}\n\n\t\t// special deal: any component with >2 mixtures that has a consistent ratio definition needs to be marked\n\t\t// at the parent-component level\n\t\tskip: for (let comp of modmix.getComponents()) if (Vec.len(comp.contents) >= 2)\n\t\t{\n\t\t\tif (Vec.len(comp.contents[0].ratio) != 2) continue;\n\t\t\tlet [numer, denom] = comp.contents[0].ratio;\n\t\t\tfor (let n = 1; n < comp.contents.length; n++)\n\t\t\t{\n\t\t\t\tlet ratio = comp.contents[n].ratio;\n\t\t\t\tif (Vec.len(ratio) != 2 || ratio[1] != denom) continue skip;\n\t\t\t\tnumer += ratio[0];\n\t\t\t}\n\t\t\tif (numer != denom) continue;\n\t\t\tfor (let sub of comp.contents) (sub as MInChIComponent).useRatio = sub.ratio[0];\n\t\t}\n\n\t\t// assemble the InChI fragments - which is sorted and unique and devoid of blanks; same for \"placenames\", which are\n\t\t// terminal components that have name and concentration information, but no InChI\n\t\tlet inchiList:string[] = [];\n\t\tconst PFX = 'InChI=1S/'; // if it doesn't start with this, we don't consider it a valid InChI\n\t\tfor (let origin of modmix.getOrigins())\n\t\t{\n\t\t\tlet mcomp = modmix.getComponent(origin) as MInChIComponent;\n\t\t\tif (Vec.len(mcomp.contents) > 0) continue; // leaf nodes only need apply\n\n\t\t\tmcomp.inchiFrag = mcomp.inchi || '';\n\t\t\tif (mcomp.inchiFrag.startsWith(PFX)) mcomp.inchiFrag = mcomp.inchiFrag.substring(PFX.length);\n\t\t\tif (!inchiList.includes(mcomp.inchiFrag)) inchiList.push(mcomp.inchiFrag);\n\t\t}\n\t\tinchiList.sort();\n\n\t\tlet root = modmix.mixfile as any as MInChIComponent;\n\t\tlet builder = this.assembleContents(root, inchiList);\n\n\t\tthis.minchi = '';\n\t\tthis.segment = [];\n\n\t\tlet appendSegment = (str:string, type:MInChISegment):void =>\n\t\t{\n\t\t\tthis.minchi += str;\n\t\t\tfor (let n = 0; n < str.length; n++) this.segment.push(type);\n\t\t};\n\n\t\tappendSegment(MINCHI_VERSION, MInChISegment.Header);\n\t\tappendSegment('/', MInChISegment.None);\n\t\tfor (let n = 0; n < inchiList.length; n++)\n\t\t{\n\t\t\tif (n > 0) appendSegment('&', MInChISegment.None);\n\t\t\tappendSegment(inchiList[n], MInChISegment.Component);\n\t\t}\n\t\tappendSegment('/', MInChISegment.None);\n\t\tappendSegment('n' + builder.layerN, MInChISegment.Hierarchy);\n\t\tappendSegment('/', MInChISegment.None);\n\t\tappendSegment('g' + builder.layerG, MInChISegment.Concentration);\n\t}\n\n\t// returns the MInChI notationstring formulated as above\n\tpublic getResult():string\n\t{\n\t\treturn this.minchi;\n\t}\n\n\t// return the segmentation values that mark the type for each character (corresponding to the notation string)\n\tpublic getSegment():MInChISegment[]\n\t{\n\t\treturn this.segment;\n\t}\n\n\t// prepares a \"hash key\" for the mixture: this is basically a sorted unique list of the InChI keys for the structures; it has no concentration or hierarchy\n\t// information because these things are not canonical\n\tpublic makeLongHashKey():string\n\t{\n\t\tlet bits:string[] = [];\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile) continue;\n\t\t\tif (!comp.inchiKey) throw 'Mixture has InChIKey(s) missing';\n\t\t\tif (!comp.inchiKey.startsWith('InChIKey=')) throw 'Invalid InChI key: ' + comp.inchiKey;\n\t\t\tbits.push(comp.inchiKey.substring(9));\n\t\t}\n\t\tbits = Vec.sortedUnique(bits);\n\t\treturn 'Long-MInChIKey=' + bits.join(';');\n\t}\n\n\t// similar to above except fixed length and quite short\n\tpublic makeShortHashKey():string\n\t{\n\t\tmake_crc_table();\n\t\tconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\t\tconst NCRC = 4;\n\t\tlet crclist:number[] = [], pos = 0;\n\t\tfor (let n = 0; n < NCRC; n++) crclist.push(start_crc());\n\n\t\tlet feedCharacter = (letter:string) =>\n\t\t{\n\t\t\tlet idx = LETTERS.indexOf(letter);\n\t\t\tif (idx < 0) return;\n\t\t\tcrclist[pos] = feed_crc(crclist[pos], idx);\n\t\t\tpos = pos < NCRC - 1 ? pos + 1 : 0;\n\t\t};\n\n\t\tlet bits:string[] = [];\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile) continue;\n\t\t\tif (!comp.inchiKey) throw 'Mixture has InChIKey(s) missing';\n\t\t\tif (!comp.inchiKey.startsWith('InChIKey=')) throw 'Invalid InChI key: ' + comp.inchiKey;\n\t\t\tbits.push(comp.inchiKey.substring(9));\n\t\t}\n\t\tfor (let bit of Vec.sortedUnique(bits)) for (let letter of bit)\n\t\t{\n\t\t\tfeedCharacter(letter);\n\t\t}\n\n\t\tlet key = 'Short-MInChIKey=';\n\n\t\tfor (let crc of crclist)\n\t\t{\n\t\t\tcrc = end_crc(crc) >>> 1; // clear the least significant bit and the sign as well\n\t\t\tfor (let n = 0; n < 7; n++)\n\t\t\t{\n\t\t\t\tlet idx = crc % 26;\n\t\t\t\tkey += LETTERS[idx];\n\t\t\t\tcrc = Math.trunc(crc / 26);\n\t\t\t}\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t// turns a concentration into a suitable precursor string, or null otherwise\n\tpublic static formatConcentration(quantity:number | number[], error:number, useRatio:number, units:string, relation:string):string\n\t{\n\t\tlet mantissa = (value:number, exp:number):string => Math.round(value * Math.pow(10, -exp)).toString();\n\n\t\t// check for special deal: the \"useRatio\" property is defined if everything in this peer group has a ratio with\n\t\t// the same denominator and they add up correctly; when this isn't the case, it will fall through and convert to\n\t\t// a percentage\n\t\tif (useRatio != null)\n\t\t{\n\t\t\tlet exp = this.determineExponent([useRatio], 4);\n\t\t\treturn mantissa(useRatio, exp) + 'rt' + exp;\n\t\t}\n\n\t\t/*if (comp.ratio && comp.ratio.length >= 2)\n\t\t{\n\t\t\tlet numer = comp.ratio[0], denom = comp.ratio[1];\n\t\t\tif (!(denom > 0)) return null;\n\t\t\tlet value = 100 * numer / denom, exp = this.determineExponent([value], 4);\n\t\t\treturn mantissa(value, exp) + 'pp' + exp;\n\t\t}*/\n\n\t\tif (quantity == null || units == null) return null;\n\n\t\t// special deal (maybe temporary): units that are written with common names that map to a URI are converted automatically\n\t\tlet unitURI = units;\n\t\tif (!unitURI.startsWith('http://')) unitURI = Units.nameToURI(unitURI);\n\t\tif (!unitURI) return;\n\n\t\t// TODO: maybe another special deal for absolute weight/volume/mole quantities - convert them into ratios, to the extent that's\n\t\t// possible... maybe approximating where necessary\n\n\t\tlet bits:string[] = [];\n\n\t\tif (relation != null) bits.push(relation);\n\n\t\tlet values:number[] = typeof quantity == 'number' ? [quantity as number] : quantity;\n\t\tif (error != null) values.push(error);\n\n\t\tlet [mnemonic, scaled] = Units.convertToMInChI(unitURI, values);\n\t\tif (!mnemonic) return;\n\n\t\tlet exp = this.determineExponent(scaled, 4);\n\n\t\tbits.push(mantissa(scaled[0], exp));\n\t\tif (scaled.length > 1)\n\t\t{\n\t\t\tif (Array.isArray(quantity)) bits.push(':'); else bits.push('?');\n\t\t\tbits.push(mantissa(scaled[1], exp));\n\t\t}\n\t\tbits.push(mnemonic);\n\t\tbits.push(exp.toString());\n\n\t\treturn bits.join('');\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate assembleContents(mcomp:MInChIComponent, inchiList:string[]):MInChIBuilder\n\t{\n\t\tlet tree:MInChIBuilder = {layerN: '', layerG: ''};\n\t\tlet builder:MInChIBuilder = {layerN: '', layerG: ''};\n\n\t\t// emit sub-contents recursively\n\t\tif (Vec.len(mcomp.contents) > 0)\n\t\t{\n\t\t\tif (mcomp.contents != null) for (let subComp of mcomp.contents)\n\t\t\t{\n\t\t\t\tlet subTree = this.assembleContents(subComp as MInChIComponent, inchiList);\n\t\t\t\t//if (!subTree.layerN && !subTree.layerG) continue;\n\t\t\t\tif (tree.layerN.length > 0 || tree.layerG.length > 0)\n\t\t\t\t{\n\t\t\t\t\ttree.layerN += '&';\n\t\t\t\t\ttree.layerG += '&';\n\t\t\t\t}\n\t\t\t\ttree.layerN += subTree.layerN;\n\t\t\t\ttree.layerG += subTree.layerG;\n\t\t\t}\n\t\t}\n\n\t\t// append the current information\n\t\tlet idx = mcomp.inchiFrag != null ? inchiList.indexOf(mcomp.inchiFrag) + 1 : 0;\n\t\tif (idx > 0) builder.layerN += idx.toString();\n\n\t\tlet conc = ExportMInChI.formatConcentration(mcomp.quantity, mcomp.error, mcomp.useRatio, mcomp.units, mcomp.relation);\n\t\tif (!conc && mcomp.note)\n\t\t{\n\t\t\tlet {concQuantity, concError, concUnits, concRelation} = mcomp.note;\n\t\t\tconc = ExportMInChI.formatConcentration(concQuantity, concError, null, concUnits, concRelation);\n\t\t}\n\t\tif (conc) builder.layerG += conc;\n\n\t\tif (tree.layerN.length > 0 || tree.layerG.length > 0)\n\t\t{\n\t\t\tbuilder.layerN = '{' + tree.layerN + '}' + builder.layerN;\n\t\t\tbuilder.layerG = '{' + tree.layerG + '}' + builder.layerG;\n\t\t\tthis.shaveBeard(builder);\n\t\t}\n\n\t\treturn builder;\n\t}\n\n\t// removes unnecessary nesting stubble\n\tprivate shaveBeard(builder:MInChIBuilder):void\n\t{\n\t\twhile (builder.layerN.startsWith('{{') && builder.layerN.endsWith('}}') &&\n\t\t\t   builder.layerG.startsWith('{{') && builder.layerG.endsWith('}}'))\n\t\t{\n\t\t\tbuilder.layerN = builder.layerN.substring(1, builder.layerN.length - 1);\n\t\t\tbuilder.layerG = builder.layerG.substring(1, builder.layerG.length - 1);\n\t\t}\n\t}\n\n\t// given a positive number, gives out an appropriate exponent to scale it to, such that the mantissa can be an integer that accommodates\n\t// the required number of significant figures\n\tprivate static determineExponent(values:number[], sigfig:number):number\n\t{\n\t\tlet minval = Number.POSITIVE_INFINITY;\n\t\tfor (let v of values) minval = Math.min(minval, Math.abs(v));\n\n\t\tif (!Number.isFinite(minval) || Number.isNaN(minval) || minval <= 0) return 0;\n\n\t\tlet exp = Math.round(Math.log10(minval)) - sigfig;\n\t\t//let man = Math.round(minval * Math.pow(10, -exp));\n\n\t\tlet str:string[] = [];\n\t\tfor (let v of values) str.push(Math.round(v * Math.pow(10, -exp)).toString());\n\n\t\touter: while (true)\n\t\t{\n\t\t\tfor (let n = 0; n < str.length; n++)\n\t\t\t{\n\t\t\t\tif (!str[n].endsWith('0')) break outer;\n\t\t\t\tstr[n] = str[n].substring(0, str[n].length - 1);\n\t\t\t}\n\t\t\texp++;\n\t\t}\n\n\t\treturn exp;\n\t}\n}\n\n","import { clone } from '../util/util';\nexport class RenderPolicy {\n    constructor(data) {\n        if (!data) {\n            data =\n                {\n                    name: 'default',\n                    pointScale: 20,\n                    resolutionDPI: 100,\n                    fontSize: 0.65,\n                    lineSize: 0.075,\n                    bondSep: 0.2,\n                    defaultPadding: 0.2,\n                    foreground: 0x000000,\n                    background: 0xFFFFFF,\n                    atomCols: new Array(112)\n                };\n            for (let n = 0; n <= 111; n++)\n                data.atomCols[n] = 0x000000;\n            this.data = data;\n        }\n        else {\n            this.data = clone(data);\n        }\n    }\n    clone() { return new RenderPolicy(this.data); }\n    static defaultBlackOnWhite(pixPerAng) {\n        let policy = new RenderPolicy();\n        if (pixPerAng)\n            policy.data.pointScale = pixPerAng;\n        return policy;\n    }\n    static defaultWhiteOnBlack(pixPerAng) {\n        let policy = new RenderPolicy();\n        if (pixPerAng)\n            policy.data.pointScale = pixPerAng;\n        policy.data.foreground = 0xFFFFFF;\n        policy.data.background = 0x000000;\n        for (let n = 0; n <= 111; n++)\n            policy.data.atomCols[n] = 0xFFFFFF;\n        return policy;\n    }\n    static defaultColourOnWhite(pixPerAng) {\n        let policy = RenderPolicy.defaultBlackOnWhite(pixPerAng);\n        policy.data.atomCols[0] = 0x404040;\n        policy.data.atomCols[1] = 0x808080;\n        policy.data.atomCols[6] = 0x000000;\n        policy.data.atomCols[7] = 0x0000FF;\n        policy.data.atomCols[8] = 0xFF0000;\n        policy.data.atomCols[9] = 0xFF8080;\n        policy.data.atomCols[15] = 0xFF8000;\n        policy.data.atomCols[16] = 0x808000;\n        policy.data.atomCols[17] = 0x00C000;\n        policy.data.atomCols[35] = 0xC04000;\n        return policy;\n    }\n    static defaultColourOnBlack(pixPerAng) {\n        let policy = RenderPolicy.defaultWhiteOnBlack(pixPerAng);\n        policy.data.atomCols[0] = 0xA0A0A0;\n        policy.data.atomCols[1] = 0x808080;\n        policy.data.atomCols[6] = 0xFFFFFF;\n        policy.data.atomCols[7] = 0x4040FF;\n        policy.data.atomCols[8] = 0xFF4040;\n        policy.data.atomCols[9] = 0xFF8080;\n        policy.data.atomCols[15] = 0xFF8000;\n        policy.data.atomCols[16] = 0xFFFF00;\n        policy.data.atomCols[17] = 0x40FF40;\n        policy.data.atomCols[35] = 0xFF8040;\n        return policy;\n    }\n    static defaultPrintedPublication() {\n        let policy = RenderPolicy.defaultBlackOnWhite(9.6);\n        policy.data.resolutionDPI = 600;\n        policy.data.fontSize = 0.80;\n        policy.data.bondSep = 0.27;\n        policy.data.lineSize = 0.0625;\n        return policy;\n    }\n}\nexport class RenderEffects {\n    constructor() {\n        this.colAtom = {};\n        this.colBond = {};\n        this.dottedRectOutline = {};\n        this.dottedBondCross = {};\n        this.hideAtoms = new Set();\n        this.hideBonds = new Set();\n        this.atomFrameDotSz = [];\n        this.atomFrameCol = [];\n        this.atomCircleSz = [];\n        this.atomCircleCol = [];\n        this.atomDecoText = [];\n        this.atomDecoCol = [];\n        this.atomDecoSize = [];\n        this.bondDecoText = [];\n        this.bondDecoCol = [];\n        this.bondDecoSize = [];\n        this.overlapAtoms = [];\n    }\n}\nexport var RenderMnemonicType;\n(function (RenderMnemonicType) {\n    RenderMnemonicType[\"Atom\"] = \"A\";\n    RenderMnemonicType[\"Bond\"] = \"B\";\n    RenderMnemonicType[\"Artifact\"] = \"R\";\n    RenderMnemonicType[\"Effect\"] = \"E\";\n})(RenderMnemonicType || (RenderMnemonicType = {}));\nexport class RenderMnemonics {\n    constructor(encoded) {\n        this.items = [];\n        let lines = (encoded || '').split('&');\n        for (let line of lines) {\n            let bits = line.split('|');\n            if (bits.length != 3)\n                continue;\n            let item = {\n                type: bits[0],\n                details: bits[1],\n                coords: bits[2].split(',').map((str) => parseFloat(str)),\n            };\n            this.items.push(item);\n        }\n    }\n    append(type, details, coords) {\n        for (let n = details.length - 1; n >= 0; n--)\n            if (details[n] == '|' || details[n] == '&')\n                details = details.substring(0, n) + details.substring(n + 1);\n        this.items.push({ type, details, coords });\n    }\n    serialise() {\n        var _a;\n        let lines = [];\n        for (let item of this.items) {\n            let coords = ((_a = item.coords) !== null && _a !== void 0 ? _a : []).map((coord) => coord.toFixed(1)).join(',');\n            lines.push(`${item.type}|${item.details}|${coords}`);\n        }\n        return lines.join('&');\n    }\n    packWithCoords() { return this.serialise(); }\n    packWithoutCoords() {\n        return this.items.map((item) => `${item.type}|${item.details}`).join('&');\n    }\n}\n//# sourceMappingURL=Rendering.js.map","import { PseudoEmbedding } from '../mol/PseudoEmbedding';\nimport { BondArtifact } from '../mol/BondArtifact';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { Molecule } from '../mol/Molecule';\nimport { PolymerBlock, PolymerBlockConnectivity } from '../mol/PolymerBlock';\nimport { QueryUtil } from '../mol/QueryUtil';\nimport { FitRotatedEllipse } from '../util/FitRotatedEllipse';\nimport { Box, GeomUtil, Line, Oval, QuickHull } from '../util/Geom';\nimport { angleDiff, clone, DEGRAD, invZ, norm2_xy, norm_xy, RADDEG, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { FontData } from './FontData';\nimport { RenderEffects } from './Rendering';\nexport var BLineType;\n(function (BLineType) {\n    BLineType[BLineType[\"Normal\"] = 1] = \"Normal\";\n    BLineType[BLineType[\"Inclined\"] = 2] = \"Inclined\";\n    BLineType[BLineType[\"Declined\"] = 3] = \"Declined\";\n    BLineType[BLineType[\"Unknown\"] = 4] = \"Unknown\";\n    BLineType[BLineType[\"Dotted\"] = 5] = \"Dotted\";\n    BLineType[BLineType[\"DotDir\"] = 6] = \"DotDir\";\n    BLineType[BLineType[\"IncDouble\"] = 7] = \"IncDouble\";\n    BLineType[BLineType[\"IncTriple\"] = 8] = \"IncTriple\";\n    BLineType[BLineType[\"IncQuadruple\"] = 9] = \"IncQuadruple\";\n})(BLineType || (BLineType = {}));\nconst MINBOND_LINE = 0.25;\nconst MINBOND_EXOTIC = 0.5;\nclass ArrangeMolecule {\n    static guestimateSize(mol, policy, maxW, maxH) {\n        let box = mol.boundary();\n        let minX = box.minX(), minY = box.minY(), maxX = box.maxX(), maxY = box.maxY();\n        let fontSize = policy.data.fontSize * this.FONT_CORRECT;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomExplicit(n)) {\n                let numsym = 0;\n                for (let ch of mol.atomElement(n))\n                    if (!'|{}^'.includes(ch))\n                        numsym++;\n                let plusH = mol.atomHydrogens(n) > 0 ? 1 : 0;\n                const aw = 0.5 * 0.7 * fontSize * (numsym + plusH);\n                const ah = 0.75 * fontSize * (1 + 0.2 * plusH);\n                const ax = mol.atomX(n), ay = mol.atomY(n);\n                minX = Math.min(minX, ax - aw);\n                maxX = Math.max(maxX, ax + aw);\n                minY = Math.min(minY, ay - ah);\n                maxY = Math.max(maxY, ay + ah);\n            }\n        let w = Math.max(1, (maxX - minX)) * policy.data.pointScale;\n        let h = Math.max(1, (maxY - minY)) * policy.data.pointScale;\n        if (maxW > 0 && w > maxW) {\n            h *= maxW / w;\n            w = maxW;\n        }\n        if (maxH > 0 && h > maxH) {\n            w *= maxH / h;\n            h = maxH;\n        }\n        return [w, h];\n    }\n    constructor(mol, measure, policy, effects = new RenderEffects()) {\n        this.mol = mol;\n        this.measure = measure;\n        this.policy = policy;\n        this.effects = effects;\n        this.points = [];\n        this.lines = [];\n        this.rings = [];\n        this.paths = [];\n        this.space = [];\n        this.unsplitLines = null;\n        this.wantArtifacts = true;\n        this.wantCrossings = true;\n        this.artifacts = null;\n        this.bondOrder = [];\n        this.atomCharge = [];\n        this.atomUnpaired = [];\n        this.artifactCharge = new Map();\n        this.artifactUnpaired = new Map();\n        this.artifactFract = new Map();\n    }\n    getMolecule() { return this.mol; }\n    getMeasure() { return this.measure; }\n    getPolicy() { return this.policy; }\n    getEffects() { return this.effects; }\n    getScale() { return this.scale; }\n    setWantArtifacts(want) { this.wantArtifacts = want; }\n    getArtifacts() { return this.artifacts; }\n    setArtifacts(artifacts) { this.artifacts = artifacts; }\n    setWantCrossings(want) { this.wantCrossings = want; }\n    arrange() {\n        const { mol, measure, policy, effects } = this;\n        this.scale = measure.scale();\n        this.bondSepPix = policy.data.bondSep * measure.scale();\n        this.lineSizePix = policy.data.lineSize * measure.scale();\n        this.fontSizePix = policy.data.fontSize * measure.scale() * ArrangeMolecule.FONT_CORRECT;\n        this.ymul = measure.yIsUp() ? -1 : 1;\n        let artmask = null;\n        if (this.wantArtifacts && this.artifacts == null) {\n            this.artifacts = new BondArtifact(mol);\n            artmask = Vec.booleanArray(false, mol.numAtoms);\n            for (let path of this.artifacts.getResPaths())\n                for (let a of path.atoms)\n                    artmask[a - 1] = true;\n            for (let ring of this.artifacts.getResRings())\n                for (let a of ring.atoms)\n                    artmask[a - 1] = true;\n            for (let arene of this.artifacts.getArenes()) {\n                artmask[arene.centre - 1] = true;\n                for (let a of arene.atoms)\n                    artmask[a - 1] = true;\n            }\n        }\n        this.setupBondOrders();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            if (mol.atomElement(n).length > 2 && mol.atomHydrogens(n) == 0) {\n                this.points.push(null);\n                this.space.push(null);\n                continue;\n            }\n            let a = {\n                anum: n,\n                text: mol.atomExplicit(n) || CoordUtil.atomIsWeirdLinear(mol, n) ? mol.atomElement(n) : null,\n                fsz: this.fontSizePix,\n                col: this.policy.data.atomCols[mol.atomicNumber(n)],\n                oval: new Oval(this.measure.angToX(mol.atomX(n)), this.measure.angToY(mol.atomY(n)), 0, 0)\n            };\n            let overCol = this.effects.colAtom[n];\n            if (overCol)\n                a.col = overCol;\n            if (artmask && artmask[n - 1] && mol.atomElement(n) == 'C')\n                a.text = null;\n            if (a.text != null) {\n                let wad = this.measure.measureText(a.text, a.fsz);\n                const PADDING = 1.1;\n                a.oval.rw = 0.5 * wad[0] * PADDING;\n                a.oval.rh = 0.5 * wad[1] * PADDING;\n            }\n            this.points.push(a);\n            this.space.push(this.computeSpacePoint(a));\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (this.points[n - 1] == null)\n                this.processLabel(n);\n        let bdbl = Vec.booleanArray(false, mol.numBonds);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let bt = mol.bondType(n), bo = this.bondOrder[n - 1];\n            if (bo < 0)\n                continue;\n            let col = this.effects.colBond[n];\n            if (!col)\n                col = this.policy.data.foreground;\n            bdbl[n - 1] = bo == 2 && (bt == Molecule.BONDTYPE_NORMAL || bt == Molecule.BONDTYPE_UNKNOWN);\n            let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n            let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n            if (Math.abs(x2 - x1) <= 1 && Math.abs(y2 - y1) <= 1) {\n                bdbl[n - 1] = false;\n                continue;\n            }\n            if (bdbl[n - 1])\n                continue;\n            let minDist = (bo == 1 && bt == Molecule.BONDTYPE_NORMAL ? MINBOND_LINE : MINBOND_EXOTIC) * measure.scale();\n            let xy1 = this.shrinkBond(x1, y1, x2, y2, this.backOffAtom(bfr, x1, y1, x2, y2, minDist));\n            let xy2 = this.shrinkBond(x2, y2, x1, y1, this.backOffAtom(bto, x2, y2, x1, y1, minDist));\n            this.ensureMinimumBondLength(xy1, xy2, x1, y1, x2, y2, minDist);\n            let sz = this.lineSizePix, head = 0;\n            let qbonds = QueryUtil.queryBondOrders(mol, n);\n            if (Vec.notBlank(qbonds)) {\n                Vec.sort(qbonds);\n                if (qbonds[0] == -1) {\n                    qbonds.splice(0, 1);\n                    qbonds.push(-1);\n                }\n                let qtxt = Vec.equals(qbonds, [0, 1, 2, 3, -1]) ? '?' : qbonds.map((o) => o == -1 ? 'A' : o.toString()).join('');\n                let oxy = this.orthogonalDelta(xy1[0], xy1[1], xy2[0], xy2[1], 1.3 * this.bondSepPix);\n                let v = -0.5;\n                for (let i = 0; i < 2; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    let b = {\n                        bnum: n,\n                        bfr,\n                        bto,\n                        type: BLineType.Dotted,\n                        line: new Line(lx1, ly1, lx2, ly2),\n                        size: 0.5 * sz,\n                        head,\n                        col: (col & 0xFFFFFF) | 0x80000000,\n                    };\n                    this.lines.push(b);\n                    this.space.push(this.computeSpaceLine(b));\n                }\n                let rotation = Math.atan2(xy2[1] - xy1[1], xy2[0] - xy1[0]) * RADDEG;\n                if (rotation < -90 || rotation > 90)\n                    rotation += 180;\n                let a = {\n                    anum: 0,\n                    text: qtxt,\n                    fsz: 0.35 * this.fontSizePix,\n                    col,\n                    oval: new Oval(0.5 * (xy1[0] + xy2[0]), 0.5 * (xy1[1] + xy2[1]), 0, 0),\n                    rotation\n                };\n                this.points.push(a);\n                this.space.push(this.computeSpacePoint(a));\n                continue;\n            }\n            let ltype = BLineType.Normal;\n            if (bo == 1 && bt == Molecule.BONDTYPE_INCLINED) {\n                ltype = BLineType.Inclined;\n                head = 0.15 * measure.scale();\n            }\n            else if (bo == 1 && bt == Molecule.BONDTYPE_DECLINED) {\n                ltype = BLineType.Declined;\n                head = 0.15 * measure.scale();\n            }\n            else if (bt == Molecule.BONDTYPE_UNKNOWN) {\n                ltype = BLineType.Unknown;\n                head = 0.2 * measure.scale();\n            }\n            else if (bo == 0) {\n                if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                    ltype = BLineType.DotDir;\n                else\n                    ltype = BLineType.Dotted;\n            }\n            else if ((bo == 2 || bo == 3 || bo == 4) && (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)) {\n                ltype = bo == 2 ? BLineType.IncDouble : bo == 3 ? BLineType.IncTriple : BLineType.IncQuadruple;\n                head = (bo == 2 ? 0.20 : 0.25) * measure.scale();\n            }\n            if (bo == 0) {\n                let dx = xy2[0] - xy1[0], dy = xy2[1] - xy1[1];\n                let d = norm_xy(dx, dy), invD = 1 / d;\n                let ox = 0.5 * dx * invD * this.bondSepPix, oy = 0.5 * dy * invD * this.bondSepPix;\n                if (mol.atomAdjCount(bfr) > 1) {\n                    xy1[0] += ox;\n                    xy1[1] += oy;\n                }\n                if (mol.atomAdjCount(bto) > 1) {\n                    xy2[0] -= ox;\n                    xy2[1] -= oy;\n                }\n            }\n            if (bo != 1 && bt == Molecule.BONDTYPE_DECLINED)\n                [xy1, xy2] = [xy2, xy1];\n            if (bo > 1 && (bt == Molecule.BONDTYPE_NORMAL || bt == Molecule.BONDTYPE_UNKNOWN)) {\n                let oxy = this.orthogonalDelta(xy1[0], xy1[1], xy2[0], xy2[1], this.bondSepPix);\n                let ext1 = 1, ext2 = 1;\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    ext1 = Math.min(ext1, this.backOffAtom(bfr, lx1, ly1, lx2, ly2, minDist));\n                }\n                xy1 = this.shrinkBond(xy1[0], xy1[1], xy2[0], xy2[1], ext1);\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    ext2 = Math.min(ext2, this.backOffAtom(bto, lx2, ly2, lx1, ly1, minDist));\n                }\n                xy2 = this.shrinkBond(xy2[0], xy2[1], xy1[0], xy1[1], ext2);\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    let b = {\n                        bnum: n,\n                        bfr,\n                        bto,\n                        type: ltype,\n                        line: new Line(lx1, ly1, lx2, ly2),\n                        size: sz,\n                        head,\n                        col\n                    };\n                    this.lines.push(b);\n                    this.space.push(this.computeSpaceLine(b));\n                }\n            }\n            else {\n                let b = {\n                    bnum: n,\n                    bfr,\n                    bto,\n                    type: ltype,\n                    line: new Line(xy1[0], xy1[1], xy2[0], xy2[1]),\n                    size: sz,\n                    head,\n                    col\n                };\n                this.lines.push(b);\n                this.space.push(this.computeSpaceLine(b));\n            }\n        }\n        let rings = this.orderedRingList();\n        for (let i = 0; i < rings.length; i++) {\n            for (let j = 0; j < rings[i].length; j++) {\n                let k = mol.findBond(rings[i][j], rings[i][j < rings[i].length - 1 ? j + 1 : 0]);\n                if (bdbl[k - 1]) {\n                    this.processDoubleBond(k, rings[i]);\n                    bdbl[k - 1] = false;\n                }\n            }\n        }\n        for (let i = 1; i <= mol.numBonds; i++)\n            if (bdbl[i - 1])\n                this.processDoubleBond(i, this.priorityDoubleSubstit(i));\n        let hcount = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            hcount[n - 1] = this.points[n - 1].text == null ? 0 : mol.atomHydrogens(n);\n        for (let n = 0; n < mol.numAtoms; n++)\n            if (hcount[n] > 0 && this.placeHydrogen(n, hcount[n], true))\n                hcount[n] = 0;\n        for (let n = 0; n < mol.numAtoms; n++)\n            if (hcount[n] > 0)\n                this.placeHydrogen(n, hcount[n], false);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) {\n                let isostr = mol.atomIsotope(n).toString();\n                let col = policy.data.atomCols[mol.atomicNumber(n)];\n                this.placeAdjunct(n, isostr, this.fontSizePix * 0.6, col, 150 * DEGRAD);\n            }\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let str = '';\n            let chg = this.atomCharge[n - 1];\n            if (chg == -1)\n                str = '-';\n            else if (chg == 1)\n                str = '+';\n            else if (chg < -1)\n                str = Math.abs(chg) + '-';\n            else if (chg > 1)\n                str = chg + '+';\n            for (let i = this.atomUnpaired[n - 1]; i > 0; i--)\n                str += '.';\n            if (str.length == 0)\n                continue;\n            let col = policy.data.atomCols[mol.atomicNumber(n)];\n            this.placeAdjunct(n, str, str.length == 1 ? 0.8 * this.fontSizePix : 0.6 * this.fontSizePix, col, 30 * DEGRAD);\n        }\n        for (let n = 0; n < effects.atomDecoText.length; n++) {\n            let txt = effects.atomDecoText[n];\n            if (!txt)\n                continue;\n            this.annotateAtom(n + 1, txt, effects.atomDecoCol[n], effects.atomDecoSize[n] * this.scale * ArrangeMolecule.FONT_CORRECT);\n        }\n        for (let n = 0; n < effects.bondDecoText.length; n++) {\n            let txt = effects.bondDecoText[n];\n            if (!txt)\n                continue;\n            this.annotateBond(n + 1, txt, effects.bondDecoCol[n], effects.bondDecoSize[n] * this.scale * ArrangeMolecule.FONT_CORRECT);\n        }\n        for (let n = 0; n < Math.min(effects.atomCircleSz.length, mol.numAtoms); n++)\n            if (effects.atomCircleSz[n] > 0) {\n                let dw = effects.atomCircleSz[n] * this.scale;\n                let a = this.points[n];\n                let box = new Box(a.oval.cx - dw, a.oval.cy - dw, 2 * dw, 2 * dw);\n                let spc = {\n                    anum: 0,\n                    bnum: 0,\n                    box,\n                    px: [box.minX(), box.maxX(), box.maxX(), box.minX()],\n                    py: [box.minY(), box.minY(), box.maxY(), box.maxY()]\n                };\n                this.space.push(spc);\n            }\n        if (this.artifacts != null) {\n            for (let path of this.artifacts.getResPaths()) {\n                this.createCurvedPath(path.atoms, this.artifactFract.get(path), 0);\n                this.delocalisedAnnotation(path.atoms, this.artifactCharge.get(path), this.artifactUnpaired.get(path));\n            }\n            for (let ring of this.artifacts.getResRings()) {\n                this.createCircularRing(ring.atoms);\n                this.delocalisedAnnotation(ring.atoms, this.artifactCharge.get(ring), this.artifactUnpaired.get(ring));\n            }\n            for (let arene of this.artifacts.getArenes()) {\n                let isRing = arene.atoms.length > 2;\n                if (isRing)\n                    for (let n = 0; n < arene.atoms.length; n++) {\n                        let nn = n < arene.atoms.length - 1 ? n + 1 : 0;\n                        if (mol.findBond(arene.atoms[n], arene.atoms[nn]) == 0) {\n                            isRing = false;\n                            break;\n                        }\n                    }\n                let alkeneLike = arene.atoms.length == 2;\n                this.createBondCentroid(arene.centre, arene.atoms);\n                if (!alkeneLike) {\n                    if (isRing)\n                        this.createCircularRing(arene.atoms);\n                    else\n                        this.createCurvedPath(arene.atoms, false, arene.centre);\n                }\n                this.delocalisedAnnotation(arene.atoms, this.artifactCharge.get(arene), this.artifactUnpaired.get(arene));\n            }\n        }\n        if (this.wantCrossings) {\n            let emb = new PseudoEmbedding(mol);\n            emb.calculateCrossings();\n            for (let cross of emb.crossings) {\n                if (cross.higher == 1)\n                    this.resolveLineCrossings(cross.bond1, cross.bond2);\n                else if (cross.higher == 2)\n                    this.resolveLineCrossings(cross.bond2, cross.bond1);\n            }\n        }\n        let polymers = new PolymerBlock(mol);\n        for (let id of polymers.getIDList())\n            this.processPolymerUnit(polymers.getUnit(id), polymers.getUnits());\n    }\n    numPoints() { return this.points.length; }\n    getPoint(idx) { return this.points[idx]; }\n    getPoints() { return this.points; }\n    numLines() { return this.lines.length; }\n    getLine(idx) { return this.lines[idx]; }\n    getLines() { return this.lines; }\n    getUnsplitLines() { return this.unsplitLines; }\n    numRings() { return this.rings.length; }\n    getRing(idx) { return this.rings[idx]; }\n    getRings() { return this.rings; }\n    numPaths() { return this.paths.length; }\n    getPath(idx) { return this.paths[idx]; }\n    getPaths() { return this.paths; }\n    numSpace() { return this.space.length; }\n    getSpace(idx) { return this.space[idx]; }\n    getSpaces() { return this.space; }\n    offsetEverything(dx, dy) {\n        var _a;\n        for (let a of this.points)\n            a.oval.offsetBy(dx, dy);\n        for (let b of [...this.lines, ...((_a = this.unsplitLines) !== null && _a !== void 0 ? _a : [])])\n            b.line.offsetBy(dx, dy);\n        for (let r of this.rings) {\n            r.cx += dx;\n            r.cy += dy;\n        }\n        for (let p of this.paths) {\n            Vec.addTo(p.px, dx);\n            Vec.addTo(p.py, dy);\n        }\n        for (let spc of this.space) {\n            spc.box.offsetBy(dx, dy);\n            Vec.addTo(spc.px, dx);\n            Vec.addTo(spc.py, dy);\n        }\n    }\n    offsetOrigin() {\n        let bounds = this.determineBoundary();\n        if (bounds[0] != 0 || bounds[1] != 0)\n            this.offsetEverything(-bounds[0], -bounds[1]);\n    }\n    scaleEverything(scaleBy) {\n        var _a;\n        if (scaleBy == 1)\n            return;\n        this.scale *= scaleBy;\n        for (let a of this.points) {\n            a.oval.scaleBy(scaleBy);\n            a.fsz *= scaleBy;\n        }\n        for (let b of [...this.lines, ...((_a = this.unsplitLines) !== null && _a !== void 0 ? _a : [])]) {\n            b.line.scaleBy(scaleBy);\n            b.size *= scaleBy;\n            b.head *= scaleBy;\n        }\n        for (let r of this.rings) {\n            r.cx *= scaleBy;\n            r.cy *= scaleBy;\n            r.rw *= scaleBy;\n            r.rh *= scaleBy;\n            r.size *= scaleBy;\n        }\n        for (let p of this.paths) {\n            Vec.mulBy(p.px, scaleBy);\n            Vec.mulBy(p.py, scaleBy);\n            p.size *= scaleBy;\n        }\n        for (let spc of this.space) {\n            spc.box.scaleBy(scaleBy);\n            Vec.mulBy(spc.px, scaleBy);\n            Vec.mulBy(spc.py, scaleBy);\n        }\n    }\n    determineBoundary(padding) {\n        if (padding == null)\n            padding = 0;\n        if (this.space.length == 0)\n            return [0, 0, 2 * padding, 2 * padding];\n        let bounds = Vec.numberArray(0, 4);\n        let spc = this.space[0];\n        bounds[0] = spc.box.x;\n        bounds[1] = spc.box.y;\n        bounds[2] = spc.box.x + spc.box.w;\n        bounds[3] = spc.box.y + spc.box.h;\n        for (let n = this.space.length - 1; n > 0; n--) {\n            spc = this.space[n];\n            bounds[0] = Math.min(bounds[0], spc.box.x);\n            bounds[1] = Math.min(bounds[1], spc.box.y);\n            bounds[2] = Math.max(bounds[2], spc.box.x + spc.box.w);\n            bounds[3] = Math.max(bounds[3], spc.box.y + spc.box.h);\n        }\n        return bounds;\n    }\n    determineBoundaryBox() {\n        let [x1, y1, x2, y2] = this.determineBoundary();\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    squeezeInto(x, y, w, h, padding) {\n        if (padding != null && padding > 0) {\n            x += padding;\n            y += padding;\n            w -= 2 * padding;\n            h -= 2 * padding;\n        }\n        let bounds = this.determineBoundary(0);\n        let bw = bounds[2] - bounds[0], bh = bounds[3] - bounds[1];\n        if (bw > w || bh > h) {\n            let downScale = 1;\n            if (bw > w)\n                downScale = w / bw;\n            if (bh > h)\n                downScale = Math.min(downScale, h / bh);\n            this.scaleEverything(downScale);\n            Vec.mulBy(bounds, downScale);\n        }\n        this.offsetEverything(x - bounds[0] + 0.5 * (w - bounds[2] + bounds[0]), y - bounds[1] + 0.5 * (h - bounds[3] + bounds[1]));\n    }\n    limitBounds(w, h) {\n        let bounds = this.determineBoundary(0);\n        if (bounds[0] == bounds[2] && bounds[1] == bounds[3])\n            return;\n        let scale = Math.min(1, Math.min(w / (bounds[2] - bounds[0]), h / (bounds[3] - bounds[1])));\n        this.offsetEverything(-bounds[0], -bounds[1]);\n        this.scaleEverything(scale);\n    }\n    monochromate(col) {\n        for (let a of this.points)\n            a.col = col;\n        for (let b of this.lines)\n            b.col = col;\n    }\n    spatialCongestion(x, y, thresh) {\n        if (thresh == null)\n            thresh = 0.001;\n        let congest = 0;\n        for (let n = 0; n < this.points.length; n++) {\n            let a = this.points[n];\n            if (a == null)\n                continue;\n            let dx = a.oval.cx - x, dy = a.oval.cy - y;\n            congest += 1 / (dx * dx + dy * dy + thresh);\n        }\n        return congest;\n    }\n    clone() {\n        let dup = new ArrangeMolecule(this.mol, this.measure, this.policy, this.effects);\n        dup.scale = this.scale;\n        dup.bondSepPix = this.bondSepPix;\n        dup.lineSizePix = this.lineSizePix;\n        dup.fontSizePix = this.fontSizePix;\n        dup.ymul = this.ymul;\n        for (let a of this.points)\n            dup.points.push(clone(a));\n        for (let b of this.lines)\n            dup.lines.push(clone(b));\n        for (let s of this.space)\n            dup.space.push(clone(s));\n        return dup;\n    }\n    setupBondOrders() {\n        const mol = this.mol;\n        for (let n = 0; n < mol.numBonds; n++)\n            this.bondOrder[n] = mol.bondOrder(n + 1);\n        for (let n = 0; n < mol.numAtoms; n++) {\n            this.atomCharge[n] = mol.atomCharge(n + 1);\n            this.atomUnpaired[n] = mol.atomUnpaired(n + 1);\n        }\n        let delocalise = (obj, atoms) => {\n            let charge = 0, unpaired = 0;\n            for (let a of atoms) {\n                charge += this.atomCharge[a - 1];\n                unpaired += this.atomUnpaired[a - 1];\n                this.atomCharge[a - 1] = this.atomUnpaired[a - 1] = 0;\n            }\n            this.artifactCharge.set(obj, charge);\n            this.artifactUnpaired.set(obj, unpaired);\n            for (let a1 of atoms)\n                for (let a2 of mol.atomAdjList(a1))\n                    if (!atoms.includes(a2)) {\n                        let b = mol.findBond(a1, a2);\n                        if (this.bondOrder[b - 1] >= 0)\n                            this.bondOrder[b - 1] = 1;\n                    }\n        };\n        if (this.artifacts == null)\n            return;\n        for (let path of this.artifacts.getResPaths()) {\n            let charge = 0, unpaired = 0, orders = 0;\n            for (let n = 0; n < path.atoms.length; n++) {\n                charge += mol.atomCharge(path.atoms[n]);\n                unpaired += mol.atomUnpaired(path.atoms[n]);\n                let b = mol.findBond(path.atoms[n], path.atoms[n < path.atoms.length - 1 ? n + 1 : 0]);\n                if (b > 0)\n                    orders += mol.bondOrder(b);\n            }\n            let fractional = (2 * orders - charge + unpaired) / path.atoms.length < 1;\n            this.artifactFract.set(path, fractional);\n            for (let n = 0; n < path.atoms.length - 1; n++) {\n                let b = mol.findBond(path.atoms[n], path.atoms[n + 1]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = fractional ? -1 : 1;\n            }\n            delocalise(path, path.atoms);\n        }\n        for (let ring of this.artifacts.getResRings()) {\n            for (let n = 0; n < ring.atoms.length; n++) {\n                let b = mol.findBond(ring.atoms[n], ring.atoms[n < ring.atoms.length - 1 ? n + 1 : 0]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = 1;\n            }\n            delocalise(ring, ring.atoms);\n        }\n        for (let arene of this.artifacts.getArenes()) {\n            let alkeneLike = arene.atoms.length == 2;\n            for (let n = 0; n < arene.atoms.length; n++) {\n                if (!alkeneLike) {\n                    let b = mol.findBond(arene.atoms[n], arene.atoms[n < arene.atoms.length - 1 ? n + 1 : 0]);\n                    if (b > 0)\n                        this.bondOrder[b - 1] = 1;\n                }\n                let b = mol.findBond(arene.centre, arene.atoms[n]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = -1;\n            }\n            delocalise(arene, arene.atoms);\n        }\n    }\n    placeAdjunct(atom, str, fsz, col, angdir) {\n        let wad = this.measure.measureText(str, fsz);\n        let a = this.points[atom - 1];\n        let cx = a.oval.cx, cy = a.oval.cy, rw = 0.55 * wad[0], rh = 0.55 * wad[1];\n        if (str == '..') {\n            let zeroBonds = this.mol.atomAdjBonds(atom).filter((b) => this.mol.bondOrder(b) == 0);\n            if (zeroBonds.length == 1) {\n                let zpt = this.getPoint(this.mol.bondOther(zeroBonds[0], atom) - 1);\n                let dx = zpt.oval.cx - cx, dy = zpt.oval.cy - cy, inv = 1 / norm_xy(dx, dy);\n                let r = fsz * 0.15;\n                let ox = dy * inv * 2.5 * r, oy = -dx * inv * 2.5 * r;\n                let ext = 1.2 * (rw + rh) * inv;\n                [dx, dy] = [dx * ext, dy * ext];\n                this.points.push({ anum: 0, text: '.', fsz, col, oval: new Oval(cx + dx + ox, cy + dy + oy, r, r) });\n                this.points.push({ anum: 0, text: '.', fsz, col, oval: new Oval(cx + dx - ox, cy + dy - oy, r, r) });\n                return;\n            }\n        }\n        let bestScore = 0, bestDX = 0, bestDY = 0;\n        let px = Vec.numberArray(0, 4), py = Vec.numberArray(0, 4);\n        let angThresh = 10;\n        let shorted = false;\n        for (let ext = 0.5 * (a.oval.rw + a.oval.rh); !shorted && ext < 1.5 * this.measure.scale(); ext += 0.1 * this.measure.scale()) {\n            const DELTA = 5 * DEGRAD;\n            for (let d = 0; !shorted && d < Math.PI - 0.0001; d += DELTA)\n                for (let s = -1; s <= 1; s += 2) {\n                    let dang = d * s + (s > 0 ? DELTA : 0), ang = angdir + dang;\n                    let dx = ext * Math.cos(ang), dy = ext * Math.sin(ang) * -this.ymul;\n                    let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                    px[0] = x1;\n                    py[0] = y1;\n                    px[1] = x2;\n                    py[1] = y1;\n                    px[2] = x2;\n                    py[2] = y2;\n                    px[3] = x1;\n                    py[3] = y2;\n                    let viol = this.countPolyViolations(px, py, null, false);\n                    let score = 10 * viol + Math.abs(dang) + 10 * ext;\n                    let shortCircuit = viol == 0 && Math.abs(dang) < (angThresh + 1) * DEGRAD;\n                    if (bestScore == 0 || shortCircuit || score < bestScore) {\n                        bestScore = score;\n                        bestDX = dx;\n                        bestDY = dy;\n                    }\n                    if (shortCircuit) {\n                        shorted = true;\n                        break;\n                    }\n                }\n            angThresh += 5;\n        }\n        a =\n            {\n                anum: 0,\n                text: str,\n                fsz,\n                col,\n                oval: new Oval(cx + bestDX, cy + bestDY, rw, rh)\n            };\n        this.points.push(a);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(a.oval.cx - rw, a.oval.cy - rh, 2 * rw, 2 * rh),\n            px: [a.oval.cx - rw, a.oval.cx + rw, a.oval.cx + rw, a.oval.cx - rw],\n            py: [a.oval.cy - rh, a.oval.cy - rh, a.oval.cy + rh, a.oval.cy + rh]\n        };\n        this.space.push(spc);\n    }\n    processLabel(anum) {\n        let ax = this.mol.atomX(anum), ay = this.mol.atomY(anum);\n        let left = 0, right = 0;\n        let adj = this.mol.atomAdjList(anum);\n        for (let n = 0; n < adj.length; n++) {\n            let theta = Math.atan2(this.mol.atomY(adj[n]) - ay, this.mol.atomX(adj[n]) - ax) * RADDEG;\n            if (theta >= -15 && theta <= 15)\n                right += 3;\n            else if (theta >= -85 && theta <= 85)\n                right++;\n            else if (theta > 85 && theta < 95) { }\n            else if (theta < -85 && theta > -95) { }\n            else if (theta > 165 || theta < -165)\n                left += 3;\n            else\n                left++;\n        }\n        let label = this.mol.atomElement(anum);\n        let ibar = label.indexOf('|'), ibrace = label.indexOf('{');\n        let side = 0;\n        if (left == 0 && right == 0 && ibar < 0 && ibrace < 0) { }\n        else if (left < right)\n            side = -1;\n        else if (right < left)\n            side = 1;\n        else {\n            let score1 = CoordUtil.congestionPoint(this.mol, ax - 1, ay);\n            let score2 = CoordUtil.congestionPoint(this.mol, ax + 1, ay);\n            if (score1 < 0.5 * score2)\n                side = -1;\n            else\n                side = 1;\n        }\n        let chunks = null;\n        let position = null;\n        let primary = null;\n        let refchunk = 0;\n        if (ibar < 0 && ibrace < 0) {\n            if (side == 0)\n                chunks = [label];\n            else if (side < 0) {\n                chunks = [label.substring(0, label.length - 1), label.substring(label.length - 1)];\n                refchunk = 1;\n            }\n            else\n                chunks = [label.substring(0, 1), label.substring(1)];\n        }\n        else {\n            let bits = [];\n            let bpos = [];\n            let bpri = [];\n            let blocks = label.split('|');\n            if (side < 0)\n                blocks = Vec.reverse(blocks);\n            let buff = '';\n            for (let i = 0; i < blocks.length; i++) {\n                let isPrimary = (side >= 0 && i == 0) || (side < 0 && i == blocks.length - 1);\n                if (side < 0 && refchunk == 0 && i == blocks.length - 1)\n                    refchunk = bits.length;\n                let pos = 0;\n                buff = '';\n                for (let j = 0; j < blocks[i].length; j++) {\n                    let ch = blocks[i].charAt(j);\n                    if (ch == '{' || ch == '}') {\n                        if (buff.length > 0) {\n                            bits.push(buff.toString());\n                            bpos.push(pos);\n                            bpri.push(isPrimary);\n                        }\n                        buff = '';\n                        pos = ch == '{' ? -1 : 0;\n                    }\n                    else if (ch == '^' && pos == -1 && buff.length == 0)\n                        pos = 1;\n                    else\n                        buff += ch;\n                }\n                if (buff.length > 0) {\n                    bits.push(buff.toString());\n                    bpos.push(pos);\n                    bpri.push(isPrimary);\n                }\n            }\n            chunks = bits;\n            position = bpos;\n            primary = bpri;\n            while (refchunk < chunks.length - 1 && position[refchunk] != 0)\n                refchunk++;\n        }\n        let PADDING = 1.1;\n        let SSFRACT = 0.6;\n        let chunkw = Vec.numberArray(0, chunks.length);\n        let tw = 0;\n        for (let n = 0; n < chunks.length; n++) {\n            chunkw[n] = this.measure.measureText(chunks[n], this.fontSizePix)[0];\n            if (position != null && position[n] != 0)\n                chunkw[n] *= SSFRACT;\n            tw += chunkw[n];\n        }\n        let x = this.measure.angToX(ax), y = this.measure.angToY(ay);\n        for (let n = 0; n < refchunk; n++)\n            x -= chunkw[n];\n        x -= 0.5 * chunkw[refchunk];\n        for (let n = 0; n < chunks.length; n++) {\n            let a = {\n                anum: (n == refchunk || (primary != null && primary[n])) ? anum : 0,\n                text: chunks[n],\n                fsz: this.fontSizePix,\n                col: this.policy.data.atomCols[this.mol.atomicNumber(anum)],\n                oval: new Oval(x + 0.5 * chunkw[n], y, 0.5 * chunkw[n] * PADDING, 0.5 * this.fontSizePix * PADDING)\n            };\n            if (position != null && position[n] != 0) {\n                a.fsz *= SSFRACT;\n                if (position[n] < 0)\n                    a.oval.cy += a.fsz * 0.7 * (this.measure.yIsUp() ? -1 : 1);\n                else\n                    a.oval.cy -= a.fsz * 0.3 * (this.measure.yIsUp() ? -1 : 1);\n            }\n            if (n == refchunk) {\n                this.points[anum - 1] = a;\n                this.space[anum - 1] = this.computeSpacePoint(a);\n            }\n            else {\n                this.points.push(a);\n                this.space.push(this.computeSpacePoint(a));\n            }\n            x += chunkw[n];\n        }\n    }\n    backOffAtom(atom, x, y, fx, fy, minDist) {\n        if (x == fx && y == fy)\n            return 1;\n        let dx = x - fx, dy = y - fy, dist = norm_xy(dx, dy), inv = 1.0 / dist;\n        const bump = 0.1 * this.measure.scale();\n        let xbump = x + 2 * bump * dx * inv, ybump = y + 2 * bump * dy * inv;\n        let ext = dist;\n        let active = false;\n        for (let spc of this.space)\n            if (spc.anum == atom) {\n                const sz = spc.px.length;\n                if (sz == 0)\n                    continue;\n                for (let n = 0; n < sz; n++) {\n                    let nn = n < sz - 1 ? n + 1 : 0;\n                    let x1 = spc.px[n], y1 = spc.py[n], x2 = spc.px[nn], y2 = spc.py[nn];\n                    if (!GeomUtil.doLineSegsIntersect(xbump, ybump, fx, fy, x1, y1, x2, y2))\n                        continue;\n                    let xy = GeomUtil.lineIntersect(x, y, fx, fy, x1, y1, x2, y2);\n                    active = true;\n                    ext = Math.min(ext, norm_xy(xy[0] - fx, xy[1] - fy));\n                }\n            }\n        if (active) {\n            ext = Math.max(minDist, ext - bump);\n            return ext / dist;\n        }\n        else\n            return 1;\n    }\n    backOffAtomDelta(atom, x, y, fx, fy, minDist) {\n        let ext = this.backOffAtom(atom, x, y, fx, fy, minDist);\n        if (ext >= 1)\n            return null;\n        ext = 1 - ext;\n        let dx = (fx - x) * ext, dy = (fy - y) * ext;\n        return [norm2_xy(dx, dy), dx, dy];\n    }\n    shrinkBond(x, y, fx, fy, ext) {\n        if (ext == 1)\n            return [x, y];\n        let dx = x - fx, dy = y - fy;\n        return [fx + ext * dx, fy + ext * dy];\n    }\n    ensureMinimumBondLength(xy1, xy2, x1, y1, x2, y2, minDist) {\n        let dx = xy2[0] - xy1[0], dy = xy2[1] - xy1[1];\n        let dsq = norm2_xy(dx, dy);\n        minDist = Math.min(minDist, norm_xy(x2 - x1, y2 - y1));\n        if (dsq >= sqr(minDist - 0.0001))\n            return;\n        let d12 = Math.sqrt(dsq), d1 = norm_xy(xy1[0] - x1, xy1[1] - y1), d2 = norm_xy(x2 - xy2[0], y2 - xy2[1]);\n        let mag = 1 - minDist / d12, invD12 = 1.0 / (d1 + d2), mag1 = d1 * mag * invD12, mag2 = d2 * mag * invD12;\n        xy1[0] -= dx * mag1;\n        xy1[1] -= dy * mag1;\n        xy2[0] += dx * mag2;\n        xy2[1] += dy * mag2;\n    }\n    orderedRingList() {\n        let rings = [];\n        let SIZE_ORDER = [6, 5, 7, 4, 3];\n        for (let i = 0; i < SIZE_ORDER.length; i++) {\n            let nring = this.mol.findRingsOfSize(SIZE_ORDER[i]);\n            for (let j = 0; j < nring.length; j++)\n                rings.push(nring[j]);\n        }\n        let ringsz = rings.length;\n        let ringbusy = Vec.numberArray(0, this.mol.numAtoms);\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[n];\n            for (let i = 0; i < r.length; i++)\n                ringbusy[r[i] - 1]++;\n        }\n        let ringscore = Vec.numberArray(0, ringsz);\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[n];\n            for (let i = 0; i < r.length; i++)\n                ringscore[n] += ringbusy[r[i] - 1];\n        }\n        let ringorder = Vec.idxSort(ringscore);\n        let resbcount = Vec.numberArray(0, ringsz), maxbcount = 0;\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[ringorder[n]];\n            for (let i = 0; i < r.length; i++) {\n                let j = this.mol.findBond(r[i], r[i + 1 < r.length ? i + 1 : 0]);\n                if (this.mol.bondOrder(j) == 2)\n                    resbcount[n]++;\n            }\n            maxbcount = Math.max(maxbcount, resbcount[n]);\n        }\n        let pos = 0, ret = [];\n        for (let sz = maxbcount; sz >= 0; sz--) {\n            for (let n = 0; n < ringsz; n++)\n                if (resbcount[n] == sz)\n                    ret.push(rings[ringorder[n]]);\n        }\n        return ret;\n    }\n    orthogonalDelta(x1, y1, x2, y2, d) {\n        let ox = y1 - y2, oy = x2 - x1, dsq = norm2_xy(ox, oy);\n        let sc = dsq > 0 ? d / Math.sqrt(dsq) : 1;\n        return [ox * sc, oy * sc];\n    }\n    processDoubleBond(idx, priority) {\n        let bfr = this.mol.bondFrom(idx), bto = this.mol.bondTo(idx);\n        let nfr = this.mol.atomAdjList(bfr), nto = this.mol.atomAdjList(bto);\n        let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n        let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n        let oxy = this.orthogonalDelta(x1, y1, x2, y2, this.bondSepPix);\n        const minDist = MINBOND_EXOTIC * this.measure.scale();\n        let dx = x2 - x1, dy = y2 - y1, btheta = Math.atan2(dy, dx);\n        let countFLeft = 0, countFRight = 0, countTLeft = 0, countTRight = 0;\n        let idxFLeft = 0, idxFRight = 0, idxTLeft = 0, idxTRight = 0;\n        let noshift = false;\n        for (let n = 0; n < nfr.length; n++)\n            if (nfr[n] != bto) {\n                let bo = this.mol.bondOrder(this.mol.findBond(bfr, nfr[n]));\n                if (bo == 0)\n                    continue;\n                if (bo > 1) {\n                    noshift = true;\n                    break;\n                }\n                let ispri = false;\n                for (let i = 0; i < (priority == null ? 0 : priority.length); i++)\n                    if (priority[i] == nfr[n])\n                        ispri = true;\n                let theta = angleDiff(Math.atan2(this.points[nfr[n] - 1].oval.cy - y1, this.points[nfr[n] - 1].oval.cx - x1), btheta);\n                if (Math.abs(theta) * RADDEG > 175) {\n                    noshift = true;\n                    break;\n                }\n                if (theta > 0) {\n                    if (ispri)\n                        countFLeft++;\n                    idxFLeft = nfr[n];\n                }\n                else {\n                    if (ispri)\n                        countFRight++;\n                    idxFRight = nfr[n];\n                }\n            }\n        for (let n = 0; n < nto.length; n++)\n            if (nto[n] != bfr) {\n                let bo = this.mol.bondOrder(this.mol.findBond(bto, nto[n]));\n                if (bo == 0)\n                    continue;\n                if (bo > 1) {\n                    noshift = true;\n                    break;\n                }\n                let ispri = false;\n                for (let i = 0; i < (priority == null ? 0 : priority.length); i++)\n                    if (priority[i] == nto[n])\n                        ispri = true;\n                let theta = angleDiff(Math.atan2(this.points[nto[n] - 1].oval.cy - y2, this.points[nto[n] - 1].oval.cx - x2), btheta);\n                if (Math.abs(theta) * RADDEG > 175) {\n                    noshift = true;\n                    break;\n                }\n                if (theta > 0) {\n                    if (ispri)\n                        countTLeft++;\n                    idxTLeft = nto[n];\n                }\n                else {\n                    if (ispri)\n                        countTRight++;\n                    idxTRight = nto[n];\n                }\n            }\n        let side = 0;\n        if (noshift || countFLeft > 1 || countFRight > 1 || countTLeft > 1 || countTRight > 1) { }\n        else if (countFLeft > 0 && countFRight > 0) { }\n        else if (countTLeft > 0 && countTRight > 0) { }\n        else if (countFLeft > 0 || countTLeft > 0)\n            side = 1;\n        else if (countFRight > 0 || countTRight > 0)\n            side = -1;\n        let sz = this.lineSizePix;\n        let ax1 = x1, ay1 = y1, ax2 = x2, ay2 = y2;\n        let bx1 = 0, by1 = 0, bx2 = 0, by2 = 0;\n        if (side == 0) {\n            ax1 = x1 + 0.5 * oxy[0];\n            ay1 = y1 + 0.5 * oxy[1];\n            ax2 = x2 + 0.5 * oxy[0];\n            ay2 = y2 + 0.5 * oxy[1];\n            bx1 = x1 - 0.5 * oxy[0];\n            by1 = y1 - 0.5 * oxy[1];\n            bx2 = x2 - 0.5 * oxy[0];\n            by2 = y2 - 0.5 * oxy[1];\n        }\n        else if (side > 0) {\n            bx1 = x1 + oxy[0];\n            by1 = y1 + oxy[1];\n            bx2 = x2 + oxy[0];\n            by2 = y2 + oxy[1];\n            if (nfr.length > 1 && this.points[bfr - 1].text == null) {\n                bx1 += oxy[1];\n                by1 -= oxy[0];\n            }\n            if (nto.length > 1 && this.points[bto - 1].text == null) {\n                bx2 -= oxy[1];\n                by2 += oxy[0];\n            }\n        }\n        else if (side < 0) {\n            bx1 = x1 - oxy[0];\n            by1 = y1 - oxy[1];\n            bx2 = x2 - oxy[0];\n            by2 = y2 - oxy[1];\n            if (nfr.length > 1 && this.points[bfr - 1].text == null) {\n                bx1 += oxy[1];\n                by1 -= oxy[0];\n            }\n            if (nto.length > 1 && this.points[bto - 1].text == null) {\n                bx2 -= oxy[1];\n                by2 += oxy[0];\n            }\n        }\n        if (side != 0) {\n            if (this.mol.atomElement(bfr).length <= 2 && this.mol.atomAdjCount(bfr) == 1 && this.points[bfr - 1].text != null) {\n                this.bumpAtomPosition(bfr, 0.5 * oxy[0] * side, 0.5 * oxy[1] * side);\n            }\n            if (this.mol.atomElement(bto).length <= 2 && this.mol.atomAdjCount(bto) == 1 && this.points[bto - 1].text != null) {\n                this.bumpAtomPosition(bto, 0.5 * oxy[0] * side, 0.5 * oxy[1] * side);\n            }\n        }\n        let delta1 = this.backOffAtomDelta(bfr, ax1, ay1, ax2, ay2, minDist), delta2 = this.backOffAtomDelta(bfr, bx1, by1, bx2, by2, minDist);\n        if (delta1 != null || delta2 != null) {\n            let delta = (delta1 == null ? 0 : delta1[0]) > (delta2 == null ? 0 : delta2[0]) ? delta1 : delta2;\n            ax1 += delta[1];\n            ay1 += delta[2];\n            bx1 += delta[1];\n            by1 += delta[2];\n        }\n        let delta3 = this.backOffAtomDelta(bto, ax2, ay2, ax1, ay1, minDist), delta4 = this.backOffAtomDelta(bto, bx2, by2, bx1, by1, minDist);\n        if (delta3 != null || delta4 != null) {\n            let delta = (delta3 == null ? 0 : delta3[0]) > (delta4 == null ? 0 : delta4[0]) ? delta3 : delta4;\n            ax2 += delta[1];\n            ay2 += delta[2];\n            bx2 += delta[1];\n            by2 += delta[2];\n        }\n        if (side == 0 && !noshift) {\n            let xy = null;\n            if (this.points[bfr - 1].text == null && !this.mol.bondInRing(idx)) {\n                xy = this.adjustBondPosition(idxFLeft, bfr, ax1, ay1, ax2, ay2);\n                if (xy != null) {\n                    ax1 = xy[0];\n                    ay1 = xy[1];\n                }\n                xy = this.adjustBondPosition(idxFRight, bfr, bx1, by1, bx2, by2);\n                if (xy != null) {\n                    bx1 = xy[0];\n                    by1 = xy[1];\n                }\n            }\n            if (this.points[bto - 1].text == null && !this.mol.bondInRing(idx)) {\n                xy = this.adjustBondPosition(idxTLeft, bto, ax2, ay2, ax1, ay1);\n                if (xy != null) {\n                    ax2 = xy[0];\n                    ay2 = xy[1];\n                }\n                xy = this.adjustBondPosition(idxTRight, bto, bx2, by2, bx1, by1);\n                if (xy != null) {\n                    bx2 = xy[0];\n                    by2 = xy[1];\n                }\n            }\n        }\n        let lt = this.mol.bondType(idx) == Molecule.BONDTYPE_UNKNOWN ? BLineType.Unknown : BLineType.Normal;\n        let head = lt == BLineType.Unknown ? 0.1 * this.scale : 0;\n        let col = this.effects.colBond[idx];\n        if (!col)\n            col = this.policy.data.foreground;\n        let b1 = {\n            bnum: idx,\n            bfr,\n            bto,\n            type: lt,\n            line: new Line(ax1, ay1, ax2, ay2),\n            size: sz,\n            head,\n            col\n        };\n        let b2 = {\n            bnum: idx,\n            bfr,\n            bto,\n            type: lt,\n            line: new Line(bx1, by1, bx2, by2),\n            size: sz,\n            head,\n            col\n        };\n        this.lines.push(b1);\n        this.lines.push(b2);\n        this.space.push(this.computeSpaceLine(b1));\n        this.space.push(this.computeSpaceLine(b2));\n    }\n    placeHydrogen(idx, hcount, fussy) {\n        let font = FontData.main;\n        const SSFRACT = 0.6;\n        const GLYPH_H = font.getIndex('H');\n        let a = this.points[idx];\n        let emscale = a.fsz * font.INV_UNITS_PER_EM;\n        let sub = hcount >= 2 ? hcount.toString() : '';\n        let outlineX = font.getOutlineX(GLYPH_H), outlineY = font.getOutlineY(GLYPH_H);\n        let firstEMW = font.HORIZ_ADV_X[GLYPH_H], emw = firstEMW;\n        for (let n = 0; n < sub.length; n++) {\n            let ch = sub.charAt(n), g = font.getIndex(ch);\n            if (n == 0) {\n                emw += font.getKerning('H', ch);\n            }\n            else {\n                let chp = sub.charAt(n - 1);\n                emw += font.getKerning(chp, ch) * SSFRACT;\n            }\n            let extraX = font.getOutlineX(g), extraY = font.getOutlineY(g);\n            Vec.addTo(extraX, emw / SSFRACT);\n            Vec.addTo(extraY, (SSFRACT - 1) * font.ASCENT * 1.30);\n            Vec.mulBy(extraX, SSFRACT);\n            Vec.mulBy(extraY, SSFRACT);\n            outlineX = outlineX.concat(extraX);\n            outlineY = outlineY.concat(extraY);\n            emw += font.HORIZ_ADV_X[g] * SSFRACT;\n        }\n        if (sub.length > 0) {\n            let qh = new QuickHull(outlineX, outlineY, 0);\n            outlineX = qh.hullX;\n            outlineY = qh.hullY;\n        }\n        let emdx = -0.5 * firstEMW, emdy = 0.5 * font.ASCENT * font.ASCENT_FUDGE;\n        for (let n = 0; n < outlineX.length; n++) {\n            outlineX[n] = a.oval.cx + (emdx + outlineX[n]) * emscale;\n            outlineY[n] = a.oval.cy + (emdy - outlineY[n]) * emscale * this.ymul;\n        }\n        let dx = 0, dy = 0;\n        let srcWAD = this.measure.measureText(a.text, a.fsz);\n        if (fussy) {\n            let RIGHTLEFT = [0, 1, 2, 3];\n            let LEFTRIGHT = [1, 0, 2, 3];\n            let UPDOWN = [2, 3, 0, 1];\n            let DOWNUP = [3, 2, 0, 1];\n            let quad = RIGHTLEFT, adj = this.mol.atomAdjList(a.anum);\n            if (adj.length == 0) {\n                let LEFTIES = ['O', 'S', 'F', 'Cl', 'Br', 'I'];\n                if (this.mol.atomCharge(a.anum) == 0 && this.mol.atomUnpaired(a.anum) == 0 &&\n                    LEFTIES.indexOf(this.mol.atomElement(a.anum)) >= 0)\n                    quad = LEFTRIGHT;\n                else\n                    quad = RIGHTLEFT;\n            }\n            else {\n                let allLeft = true, allRight = true, allUp = true, allDown = true;\n                const ax = this.mol.atomX(a.anum), ay = this.mol.atomY(a.anum);\n                for (let n = 0; n < adj.length; n++) {\n                    const bx = this.mol.atomX(adj[n]), by = this.mol.atomY(adj[n]);\n                    if (bx > ax + 0.01)\n                        allLeft = false;\n                    if (bx < ax - 0.01)\n                        allRight = false;\n                    if (by < ay - 0.01)\n                        allUp = false;\n                    if (by > ay + 0.01)\n                        allDown = false;\n                }\n                if (allLeft) { }\n                else if (allRight)\n                    quad = LEFTRIGHT;\n                else if (allUp)\n                    quad = DOWNUP;\n                else if (allDown)\n                    quad = UPDOWN;\n            }\n            for (let n = 0; n < 4; n++) {\n                let tx = 0, ty = 0;\n                if (quad[n] == 0)\n                    tx = 0.5 * srcWAD[0] + 0.5 * firstEMW * emscale;\n                else if (quad[n] == 1)\n                    tx = -0.5 * srcWAD[0] - (emw - 0.5 * firstEMW) * emscale;\n                else if (quad[n] == 2)\n                    ty = (1.1 * srcWAD[1] + 0.5 * srcWAD[2]) * -this.ymul;\n                else if (quad[n] == 3)\n                    ty = (1.1 * srcWAD[1] + 0.5 * srcWAD[2]) * this.ymul;\n                Vec.addTo(outlineX, tx);\n                Vec.addTo(outlineY, ty);\n                let viol = this.countPolyViolations(outlineX, outlineY, null, true);\n                Vec.addTo(outlineX, -tx);\n                Vec.addTo(outlineY, -ty);\n                if (viol == 0) {\n                    dx = tx;\n                    dy = ty;\n                    break;\n                }\n            }\n            if (dx == 0 && dy == 0)\n                return false;\n        }\n        else {\n            const mx1 = Vec.min(outlineY), mx2 = Vec.max(outlineX), my1 = Vec.min(outlineY), my2 = Vec.max(outlineY), cx = 0.5 * (mx1 + mx2), cy = 0.5 * (my1 + my2);\n            const mag = 1 + this.measure.scale() * this.policy.data.fontSize * ArrangeMolecule.FONT_CORRECT * 0.1 / Math.max(mx2 - cx, my2 - cy);\n            const psz = outlineX.length;\n            let magPX = outlineX.slice(0), magPY = outlineY.slice(0);\n            for (let n = 0; n < psz; n++) {\n                magPX[n] = (magPX[n] - cx) * mag + cx;\n                magPY[n] = (magPY[n] - cy) * mag + cy;\n            }\n            let bestScore = 0, bestExt = 0, bestAng = 0;\n            for (let ext = 0.5 * (a.oval.rw + a.oval.rh); ext < 1.5 * this.measure.scale(); ext += 0.1 * this.measure.scale()) {\n                let anyNoClash = false;\n                for (let ang = 0; ang < 2 * Math.PI; ang += 5 * DEGRAD) {\n                    let tx = ext * Math.cos(ang), ty = ext * Math.sin(ang);\n                    Vec.addTo(magPX, tx);\n                    Vec.addTo(magPY, ty);\n                    let viol = this.countPolyViolations(magPX, magPY, null, false);\n                    Vec.addTo(magPX, -tx);\n                    Vec.addTo(magPY, -ty);\n                    if (viol == 0)\n                        anyNoClash = true;\n                    let score = 10 * viol + this.spatialCongestion(a.oval.cx + tx, a.oval.cy + ty, 0.5) + 2 * ext;\n                    if (bestScore == 0 || score < bestScore) {\n                        bestScore = score;\n                        bestExt = ext;\n                        bestAng = ang;\n                        dx = tx;\n                        dy = ty;\n                    }\n                }\n                if (anyNoClash)\n                    break;\n            }\n        }\n        let wad = this.measure.measureText('H', a.fsz);\n        const PADDING = 1.1;\n        let ah = {\n            anum: 0,\n            text: 'H',\n            fsz: a.fsz,\n            col: a.col,\n            oval: new Oval(a.oval.cx + dx, a.oval.cy + dy, 0.5 * wad[0] * PADDING, 0.5 * wad[1] * PADDING)\n        };\n        this.points.push(ah);\n        if (sub.length > 0) {\n            const subFsz = SSFRACT * a.fsz;\n            wad = this.measure.measureText(sub, subFsz);\n            let an = {\n                anum: 0,\n                text: sub,\n                fsz: subFsz,\n                col: a.col,\n                oval: new Oval(ah.oval.cx + 0.5 * firstEMW * a.fsz * font.INV_UNITS_PER_EM + 0.5 * wad[0], ah.oval.cy + (1 - SSFRACT) * a.fsz, 0.5 * wad[0] * PADDING, 0.5 * wad[1] * PADDING)\n            };\n            this.points.push(an);\n        }\n        Vec.addTo(outlineX, dx);\n        Vec.addTo(outlineY, dy);\n        let minX = Vec.min(outlineX), minY = Vec.min(outlineY);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(minX, minY, Vec.max(outlineX) - minX, Vec.max(outlineY) - minY),\n            px: outlineX,\n            py: outlineY\n        };\n        this.space.push(spc);\n        return true;\n    }\n    computeSpacePoint(a) {\n        let s = {\n            anum: a.anum,\n            bnum: 0,\n            box: new Box(),\n            px: [],\n            py: []\n        };\n        const font = FontData.main;\n        let outlineX = [], outlineY = [];\n        let emw = 0, nglyphs = 0;\n        if (a.text != null) {\n            for (let n = 0; n < a.text.length; n++) {\n                let ch1 = a.text.charAt(n);\n                let i = font.getIndex(ch1);\n                if (i >= 0) {\n                    if (emw == 0) {\n                        outlineX = font.getOutlineX(i);\n                        outlineY = font.getOutlineY(i);\n                        nglyphs = 1;\n                    }\n                    else {\n                        let extraX = font.getOutlineX(i), extraY = font.getOutlineY(i);\n                        if (extraX.length > 0) {\n                            Vec.addTo(extraX, emw);\n                            outlineX = outlineX.concat(extraX);\n                            outlineY = outlineY.concat(extraY);\n                            nglyphs++;\n                        }\n                    }\n                    emw += font.HORIZ_ADV_X[i];\n                }\n                else\n                    emw += font.MISSING_HORZ;\n                if (n < a.text.length - 1) {\n                    let ch2 = a.text.charAt(n + 1);\n                    emw += font.getKerning(ch1, ch2);\n                }\n            }\n        }\n        if (outlineX.length > 0) {\n            if (nglyphs > 1) {\n                let qh = new QuickHull(outlineX, outlineY, 0);\n                outlineX = qh.hullX;\n                outlineY = qh.hullY;\n            }\n            let emdx = -0.5 * emw, emdy = 0.5 * font.ASCENT * font.ASCENT_FUDGE;\n            let emscale = a.fsz * font.INV_UNITS_PER_EM;\n            for (let n = 0; n < outlineX.length; n++) {\n                outlineX[n] = a.oval.cx + (emdx + outlineX[n]) * emscale;\n                outlineY[n] = a.oval.cy + (emdy - outlineY[n]) * emscale * this.ymul;\n            }\n            s.px = outlineX;\n            s.py = outlineY;\n            let minX = Vec.min(outlineX), minY = Vec.min(outlineY);\n            s.box = new Box(minX, minY, Vec.max(outlineX) - minX, Vec.max(outlineY) - minY);\n        }\n        else {\n            s.box = Box.fromOval(a.oval);\n            if (s.box.w > 0 && s.box.h > 0) {\n                s.px = [s.box.minX(), s.box.maxX(), s.box.maxX(), s.box.minX()];\n                s.py = [s.box.minY(), s.box.minY(), s.box.maxY(), s.box.maxY()];\n            }\n        }\n        return s;\n    }\n    computeSpaceLine(b) {\n        let s = {\n            anum: 0,\n            bnum: b.bnum,\n            box: new Box(),\n            px: [],\n            py: []\n        };\n        if (b.type == BLineType.Normal || b.type == BLineType.Dotted || b.type == BLineType.DotDir) {\n            s.px = [b.line.x1, b.line.x2];\n            s.py = [b.line.y1, b.line.y2];\n        }\n        else {\n            const dx = b.line.x2 - b.line.x1, dy = b.line.y2 - b.line.y1;\n            const norm = b.head / Math.sqrt(dx * dx + dy * dy);\n            const ox = norm * dy, oy = -norm * dx;\n            if (b.type == BLineType.Unknown) {\n                s.px = [b.line.x1 + ox, b.line.x1 - ox, b.line.x2 - ox, b.line.x2 + ox];\n                s.py = [b.line.y1 + oy, b.line.y1 - oy, b.line.y2 - oy, b.line.y2 + oy];\n            }\n            else {\n                s.px = [b.line.x1, b.line.x2 - ox, b.line.x2 + ox];\n                s.py = [b.line.y1, b.line.y2 - oy, b.line.y2 + oy];\n            }\n        }\n        s.box.x = Vec.min(s.px) - b.size;\n        s.box.y = Vec.min(s.py) - b.size;\n        s.box.w = Vec.max(s.px) - s.box.x + b.size;\n        s.box.h = Vec.max(s.py) - s.box.y + b.size;\n        return s;\n    }\n    bumpAtomPosition(atom, dx, dy) {\n        let p = this.points[atom - 1];\n        p.oval.cx += dx;\n        p.oval.cy += dy;\n        for (let n = this.space.length - 1; n >= 0; n--) {\n            let s = this.space[n - 1];\n            if (s == null || s.anum != atom)\n                continue;\n            s.box.x += dx;\n            s.box.y += dy;\n            Vec.addTo(s.px, dx);\n            Vec.addTo(s.py, dy);\n        }\n    }\n    spaceSubset(x, y, w, h) {\n        let subset = [];\n        for (let s of this.space)\n            if (GeomUtil.rectsIntersect(x, y, w, h, s.box.x, s.box.y, s.box.w, s.box.h))\n                subset.push(s);\n        return subset;\n    }\n    countPolyViolations(px, py, space, shortCircuit) {\n        if (space == null)\n            space = this.space;\n        let hits = 0;\n        const psz = px.length, nspc = space.length;\n        let pr = new Box(), sr = new Box();\n        for (let i1 = 0; i1 < psz; i1++) {\n            let i2 = i1 < psz - 1 ? i1 + 1 : 0;\n            pr.x = Math.min(px[i1], px[i2]) - 1;\n            pr.y = Math.min(py[i1], py[i2]) - 1;\n            pr.w = Math.max(px[i1], px[i2]) - pr.x + 2;\n            pr.h = Math.max(py[i1], py[i2]) - pr.y + 2;\n            for (let j = 0; j < nspc; j++) {\n                let spc = space[j];\n                if (spc.px == null)\n                    continue;\n                sr.x = spc.box.x - 1;\n                sr.y = spc.box.y - 1;\n                sr.w = spc.box.w + 1;\n                sr.h = spc.box.h + 1;\n                if (!pr.intersects(sr))\n                    continue;\n                let ssz = spc.px.length;\n                for (let j1 = 0; j1 < ssz; j1++) {\n                    let j2 = j1 < ssz - 1 ? j1 + 1 : 0;\n                    sr.x = Math.min(spc.px[j1], spc.px[j2]) - 1;\n                    sr.y = Math.min(spc.py[j1], spc.py[j2]) - 1;\n                    sr.w = Math.max(spc.px[j1], spc.px[j2]) - sr.x + 2;\n                    sr.h = Math.max(spc.py[j1], spc.py[j2]) - sr.y + 2;\n                    if (!pr.intersects(sr))\n                        continue;\n                    if (GeomUtil.doLineSegsIntersect(px[i1], py[i1], px[i2], py[i2], spc.px[j1], spc.py[j1], spc.px[j2], spc.py[j2])) {\n                        if (shortCircuit)\n                            return 1;\n                        hits++;\n                        break;\n                    }\n                    if (ssz == 1)\n                        break;\n                }\n            }\n        }\n        pr.x = Vec.min(px);\n        pr.y = Vec.min(py);\n        pr.w = Vec.max(px) - pr.x;\n        pr.h = Vec.max(py) - pr.y;\n        for (let n = nspc - 1; n >= 0; n--) {\n            let spc = space[n];\n            sr.x = spc.box.x;\n            sr.y = spc.box.y;\n            sr.w = spc.box.w;\n            sr.h = spc.box.h;\n            if (!pr.intersects(sr))\n                continue;\n            for (let i = spc.px.length - 1; i >= 0; i--)\n                if (GeomUtil.pointInPolygon(spc.px[i], spc.py[i], px, py)) {\n                    if (shortCircuit)\n                        return 1;\n                    hits++;\n                    break;\n                }\n            for (let i = 0; i < psz; i++)\n                if (GeomUtil.pointInPolygon(px[i], py[i], spc.px, spc.py)) {\n                    if (shortCircuit)\n                        return 1;\n                    hits++;\n                    break;\n                }\n        }\n        return hits;\n    }\n    adjustBondPosition(bf, bt, x1, y1, x2, y2) {\n        if (bf == 0 || bt == 0)\n            return null;\n        for (let n = 0; n < this.lines.length; n++) {\n            let b = this.lines[n];\n            if (this.mol.bondOrder(b.bnum) != 1 || this.mol.bondType(b.bnum) != Molecule.BONDTYPE_NORMAL)\n                continue;\n            let alt = false;\n            if (this.mol.bondFrom(b.bnum) == bf && this.mol.bondTo(b.bnum) == bt) { }\n            else if (this.mol.bondFrom(b.bnum) == bt && this.mol.bondTo(b.bnum) == bf)\n                alt = true;\n            else\n                continue;\n            let th = angleDiff(Math.atan2(b.line.y2 - b.line.y1, b.line.x2 - b.line.x1), Math.atan2(y2 - y1, x2 - x1)) * RADDEG;\n            if ((th > -5 && th < 5) || th > 175 || th < -175)\n                continue;\n            let xy = GeomUtil.lineIntersect(b.line.x1, b.line.y1, b.line.x2, b.line.y2, x1, y1, x2, y2);\n            if (this.mol.atomRingBlock(bt) == 0) {\n                if (alt) {\n                    b.line.x1 = xy[0];\n                    b.line.y1 = xy[1];\n                }\n                else {\n                    b.line.x2 = xy[0];\n                    b.line.y2 = xy[1];\n                }\n            }\n            return xy;\n        }\n        return null;\n    }\n    priorityDoubleSubstit(idx) {\n        let bf = this.mol.bondFrom(idx), bt = this.mol.bondTo(idx);\n        let nf = this.mol.atomAdjList(bf), nt = this.mol.atomAdjList(bt);\n        let a1 = this.points[bf - 1], a2 = this.points[bt - 1];\n        let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n        let dx = x2 - x1, dy = y2 - y1, btheta = Math.atan2(dy, dx);\n        let idxFLeft = 0, idxFRight = 0, idxTLeft = 0, idxTRight = 0;\n        for (let n = 0; n < nf.length; n++)\n            if (nf[n] != bt) {\n                let theta = angleDiff(Math.atan2(this.points[nf[n] - 1].oval.cy - y1, this.points[nf[n] - 1].oval.cx - x1), btheta);\n                if (theta > 0) {\n                    if (idxFLeft != 0)\n                        return null;\n                    idxFLeft = nf[n];\n                }\n                else {\n                    if (idxFRight != 0)\n                        return null;\n                    idxFRight = nf[n];\n                }\n            }\n        for (let n = 0; n < nt.length; n++)\n            if (nt[n] != bf) {\n                let theta = angleDiff(Math.atan2(this.points[nt[n] - 1].oval.cy - y2, this.points[nt[n] - 1].oval.cx - x2), btheta);\n                if (theta > 0) {\n                    if (idxTLeft != 0)\n                        return null;\n                    idxTLeft = nt[n];\n                }\n                else {\n                    if (idxTRight != 0)\n                        return null;\n                    idxTRight = nt[n];\n                }\n            }\n        let sumFrom = (idxFLeft > 0 ? 1 : 0) + (idxFRight > 0 ? 1 : 0), sumTo = (idxTLeft > 0 ? 1 : 0) + (idxTRight > 0 ? 1 : 0);\n        if (sumFrom == 1 && sumTo == 0)\n            return [idxFLeft > 0 ? idxFLeft : idxFRight];\n        if (sumFrom == 0 && sumTo == 1)\n            return [idxTLeft > 0 ? idxTLeft : idxTRight];\n        if (sumFrom == 1 && sumTo == 1) {\n            if (idxFLeft > 0 && idxTLeft > 0)\n                return [idxFLeft, idxTLeft];\n            if (idxFRight > 0 && idxTRight > 0)\n                return [idxFRight, idxTRight];\n            let oxy = this.orthogonalDelta(x1, y1, x2, y2, this.bondSepPix);\n            let congestLeft = this.spatialCongestion(0.5 * (x1 + x2) + oxy[0], 0.5 * (y1 + y2) + oxy[1]);\n            let congestRight = this.spatialCongestion(0.5 * (x1 + x2) - oxy[0], 0.5 * (y1 + y2) - oxy[1]);\n            if (congestLeft < congestRight)\n                return [idxFLeft > 0 ? idxFLeft : idxTLeft];\n            else\n                return [idxFRight > 0 ? idxFRight : idxTRight];\n        }\n        if (sumFrom == 2 && sumTo == 1) {\n            if (idxTLeft == 0)\n                return [idxFRight, idxTRight];\n            else\n                return [idxFLeft, idxTLeft];\n        }\n        if (sumFrom == 1 && sumTo == 2) {\n            if (idxFLeft == 0)\n                return [idxFRight, idxTRight];\n            else\n                return [idxFLeft, idxTLeft];\n        }\n        return null;\n    }\n    annotateAtom(atom, text, col, fsz) {\n        let [tw, ta] = this.measure.measureText(text, fsz);\n        let a = this.points[atom - 1];\n        let cx = a.oval.cx, cy = a.oval.cy, rw = 0.6 * tw, rh = 0.6 * ta;\n        let otherTheta = [];\n        for (let a of this.mol.atomAdjList(atom)) {\n            let dx = this.points[a - 1].oval.cx - cx, dy = this.points[a - 1].oval.cy - cy;\n            otherTheta.push(Math.atan2(dy, dx));\n        }\n        let minExt = 0.5 * (a.oval.rw + a.oval.rh), stepsz = 0.1 * this.scale, nsteps = 8;\n        let angsteps = 36, angsz = TWOPI / angsteps;\n        let bestScore = Number.POSITIVE_INFINITY, bestDX = 0, bestDY = 0;\n        let px = [0, 0, 0, 0], py = [0, 0, 0, 0];\n        let limX = rw + minExt + nsteps * stepsz, limY = rh + minExt + nsteps * stepsz;\n        let subSpace = this.spaceSubset(cx - limX, cy - limY, 2 * limX, 2 * limY);\n        for (let step = 0; step < nsteps; step++) {\n            let ext = minExt + step * stepsz;\n            for (let ang = 0; ang < angsteps; ang++) {\n                let th = angsz * ang;\n                let dx = ext * Math.cos(th), dy = ext * Math.sin(th);\n                let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                px[0] = x1;\n                py[0] = y1;\n                px[1] = x2;\n                py[1] = y1;\n                px[2] = x2;\n                py[2] = y2;\n                px[3] = x1;\n                py[3] = y2;\n                let viol = this.countPolyViolations(px, py, subSpace, false);\n                let score = viol * 1000;\n                for (let oth of otherTheta)\n                    score -= Math.abs(angleDiff(th, oth));\n                if (score < bestScore) {\n                    bestScore = score;\n                    bestDX = dx;\n                    bestDY = dy;\n                }\n            }\n            if (bestScore < 500)\n                break;\n        }\n        let x = cx + bestDX, y = cy + bestDY;\n        let an = {\n            anum: 0,\n            text,\n            fsz,\n            col,\n            oval: new Oval(x, y, rw, rh),\n        };\n        this.points.push(an);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(x - rw, y - rh, 2 * rw, 2 * rh),\n            px: [x - rw, x + rw, x + rw, x - rw],\n            py: [y - rh, y - rh, y + rh, y + rh],\n        };\n        this.space.push(spc);\n    }\n    annotateBond(bond, text, col, fsz) {\n        let [tw, ta] = this.measure.measureText(text, fsz);\n        let bfr = this.mol.bondFrom(bond), bto = this.mol.bondTo(bond);\n        let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n        let cx = 0.5 * (a1.oval.cx + a2.oval.cx), cy = 0.5 * (a1.oval.cy + a2.oval.cy), rw = 0.6 * tw, rh = 0.6 * ta;\n        let bth = Math.atan2(a2.oval.cy - a1.oval.cy, a2.oval.cx - a1.oval.cx);\n        let otherTheta = [bth, bth + Math.PI];\n        for (let a of this.mol.atomAdjList(bfr))\n            if (a != bto) {\n                let dx = this.points[a - 1].oval.cx - this.points[bfr - 1].oval.cx, dy = this.points[a - 1].oval.cy - this.points[bfr - 1].oval.cy;\n                otherTheta.push(Math.atan2(dy, dx));\n            }\n        for (let a of this.mol.atomAdjList(bto))\n            if (a != bfr) {\n                let dx = this.points[a - 1].oval.cx - this.points[bto - 1].oval.cx, dy = this.points[a - 1].oval.cy - this.points[bto - 1].oval.cy;\n                otherTheta.push(Math.atan2(dy, dx));\n            }\n        let minExt = 0.2 * this.scale * this.bondOrder[bond - 1], stepsz = 0.1 * this.scale, nsteps = 8;\n        let angsteps = 36, angsz = TWOPI / angsteps;\n        let bestScore = Number.POSITIVE_INFINITY, bestDX = 0, bestDY = 0;\n        let px = [0, 0, 0, 0], py = [0, 0, 0, 0];\n        let limX = rw + minExt + nsteps * stepsz, limY = rh + minExt + nsteps * stepsz;\n        let subSpace = this.spaceSubset(cx - limX, cy - limY, 2 * limX, 2 * limY);\n        for (let step = 0; step < nsteps; step++) {\n            let ext = minExt + step * stepsz;\n            for (let ang = 0; ang < angsteps; ang++) {\n                let th = angsz * ang;\n                let dx = ext * Math.cos(th), dy = ext * Math.sin(th);\n                let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                px[0] = x1;\n                py[0] = y1;\n                px[1] = x2;\n                py[1] = y1;\n                px[2] = x2;\n                py[2] = y2;\n                px[3] = x1;\n                py[3] = y2;\n                let viol = this.countPolyViolations(px, py, subSpace, false);\n                let score = viol * 1000;\n                for (let oth of otherTheta)\n                    score -= Math.abs(angleDiff(th, oth));\n                if (score < bestScore) {\n                    bestScore = score;\n                    bestDX = dx;\n                    bestDY = dy;\n                }\n            }\n            if (bestScore < 500)\n                break;\n        }\n        let x = cx + bestDX, y = cy + bestDY;\n        let an = {\n            anum: 0,\n            text,\n            fsz,\n            col,\n            oval: new Oval(x, y, rw, rh),\n        };\n        this.points.push(an);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(x - rw, y - rh, 2 * rw, 2 * rh),\n            px: [x - rw, x + rw, x + rw, x - rw],\n            py: [y - rh, y - rh, y + rh, y + rh],\n        };\n        this.space.push(spc);\n    }\n    boxOverlaps(x, y, w, h, pointmask, linemask) {\n        let vx1 = x, vy1 = y, vx2 = x + w, vy2 = y + h;\n        for (let n = 0; n < this.points.length; n++) {\n            if (pointmask != null && !pointmask[n])\n                continue;\n            let a = this.points[n];\n            let wx1 = a.oval.cx - a.oval.rw, wy1 = a.oval.cy - a.oval.rh, wx2 = a.oval.cx + a.oval.rw, wy2 = a.oval.cy + a.oval.rh;\n            if (vx2 < wx1 || vx1 > wx2 || vy2 < wy1 || vy1 > wy2)\n                continue;\n            return true;\n        }\n        for (let n = 0; n < this.lines.length; n++) {\n            if (linemask != null && !linemask[n])\n                continue;\n            let b = this.lines[n];\n            let wx1 = b.line.x1, wy1 = b.line.y1, wx2 = b.line.x2, wy2 = b.line.y2;\n            if (vx2 < Math.min(wx1, wx2) || vx1 > Math.max(wx1, wx2) || vy2 < Math.min(wy1, wy2) || vy1 > Math.max(wy1, wy2))\n                continue;\n            if (wx1 >= vx1 && wx1 <= vx2 && wy1 >= vy1 && wy1 <= vy2)\n                return true;\n            if (wx2 >= vx1 && wx2 <= vx2 && wy2 >= vy1 && wy2 <= vy2)\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy1, vx2, vy1))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy2, vx2, vy2))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy1, vx1, vy2))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx2, vy1, vx2, vy2))\n                return true;\n        }\n        return false;\n    }\n    resolveLineCrossings(bondHigher, bondLower) {\n        const TYPES = [BLineType.Normal, BLineType.Dotted, BLineType.DotDir];\n        const stashOriginals = () => {\n            if (!this.unsplitLines)\n                this.unsplitLines = this.lines.map((b) => {\n                    return Object.assign(Object.assign({}, b), { line: b.line.clone() });\n                });\n        };\n        while (true) {\n            let anything = false;\n            let linesHigher = this.lines.filter((b) => b.bnum == bondHigher && TYPES.includes(b.type));\n            let linesLower = this.lines.filter((b) => b.bnum == bondLower && TYPES.includes(b.type));\n            for (let b1 of linesHigher) {\n                for (let b2 of linesLower) {\n                    if (b1.bfr == b2.bfr || b1.bfr == b2.bto || b1.bto == b2.bfr || b1.bto == b2.bto)\n                        continue;\n                    if (b2.type == BLineType.DotDir)\n                        b2.type = BLineType.Dotted;\n                    if (!GeomUtil.doLineSegsIntersect(b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2))\n                        continue;\n                    let xy = GeomUtil.lineIntersect(b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2);\n                    let dx = b2.line.x2 - b2.line.x1, dy = b2.line.y2 - b2.line.y1;\n                    let ext = Math.abs(dx) > Math.abs(dy) ? (xy[0] - b2.line.x1) / dx : (xy[1] - b2.line.y1) / dy;\n                    let dist = norm_xy(dx, dy);\n                    let delta = b2.size / dist * (b2.type == BLineType.Normal ? 2 : 4);\n                    if (ext > delta && ext < 1 - delta) {\n                        stashOriginals();\n                        let b3 = {\n                            bnum: b2.bnum,\n                            bfr: b2.bfr,\n                            bto: b2.bto,\n                            type: b2.type,\n                            line: b2.line.clone(),\n                            size: b2.size,\n                            head: b2.head,\n                            col: b2.col\n                        };\n                        this.lines.push(b3);\n                        b2.line.x2 = b2.line.x1 + dx * (ext - delta);\n                        b2.line.y2 = b2.line.y1 + dy * (ext - delta);\n                        b3.line.x1 = b3.line.x1 + dx * (ext + delta);\n                        b3.line.y1 = b3.line.y1 + dy * (ext + delta);\n                        anything = true;\n                    }\n                    else if (ext > delta) {\n                        stashOriginals();\n                        b2.line.x2 = b2.line.x1 + dx * (ext - delta);\n                        b2.line.y2 = b2.line.y1 + dy * (ext - delta);\n                        anything = true;\n                    }\n                    else if (ext < 1 - delta) {\n                        stashOriginals();\n                        b2.line.x1 = b2.line.x1 + dx * (ext + delta);\n                        b2.line.y1 = b2.line.y1 + dy * (ext + delta);\n                        anything = true;\n                    }\n                }\n            }\n            if (!anything)\n                break;\n        }\n    }\n    createCircularRing(atoms) {\n        let px = new Array(atoms.length), py = new Array(atoms.length);\n        for (let n = 0; n < atoms.length; n++) {\n            let pt = this.points[atoms[n] - 1];\n            px[n] = pt.oval.cx;\n            py[n] = pt.oval.cy;\n        }\n        let cx = Vec.sum(px) / atoms.length, cy = Vec.sum(py) / atoms.length;\n        let bx = [], by = [];\n        let isRegular = true;\n        let regDist = Number.NaN;\n        const FRACT = 0.7;\n        for (let a of atoms) {\n            let pt = this.points[a - 1];\n            let x0 = pt.oval.cx - cx, y0 = pt.oval.cy - cy, x1 = x0 - pt.oval.rw, x2 = x0 + pt.oval.rw, y1 = y0 - pt.oval.rh, y2 = y0 + pt.oval.rh;\n            bx.push(x1);\n            by.push(y0);\n            bx.push(x1);\n            by.push(y1);\n            bx.push(x1);\n            by.push(y2);\n            bx.push(x0);\n            by.push(y1);\n            bx.push(x0);\n            by.push(y2);\n            bx.push(x2);\n            by.push(y0);\n            bx.push(x2);\n            by.push(y1);\n            bx.push(x2);\n            by.push(y2);\n            let dist = norm_xy(x0, y0), theta = Math.atan2(y0, x0);\n            bx.push(FRACT * dist * Math.cos(theta));\n            by.push(FRACT * dist * Math.sin(theta));\n            for (let b of this.mol.atomAdjList(a))\n                if (atoms.indexOf(b) >= 0) {\n                    let pb = this.points[b - 1];\n                    let mx = 0.5 * (pt.oval.cx + pb.oval.cx) - cx, my = 0.5 * (pt.oval.cy + pb.oval.cy) - cy;\n                    let mdist = norm_xy(mx, my), mtheta = Math.atan2(my, mx);\n                    bx.push(FRACT * mdist * Math.cos(mtheta));\n                    by.push(FRACT * mdist * Math.sin(mtheta));\n                }\n            if (!isRegular) { }\n            else if (Number.isFinite(regDist)) {\n                if (Math.abs(regDist - dist) > 1)\n                    isRegular = false;\n            }\n            else\n                regDist = dist;\n        }\n        let r = { atoms, cx, cy, rw: 0, rh: 0, theta: 0, size: 0 };\n        if (isRegular) {\n            r.rw = r.rh = GeomUtil.fitCircle(bx, by);\n        }\n        else {\n            let mdist = 0;\n            for (let n = 0; n < atoms.length; n++)\n                mdist += norm_xy(px[n] - cx, py[n] - cy);\n            let margin = mdist / atoms.length * (1 - FRACT);\n            var fit = new FitRotatedEllipse(px, py, margin);\n            fit.calculate();\n            r.cx = fit.cx;\n            r.cy = fit.cy;\n            r.rw = fit.rw;\n            r.rh = fit.rh;\n            r.theta = fit.theta;\n        }\n        r.size = this.lineSizePix;\n        this.rings.push(r);\n    }\n    createCurvedPath(atoms, fractional, extAtom) {\n        const sz = atoms.length, szn = sz - 1;\n        let x = [], y = [], symbol = [];\n        for (let n = 0; n < sz; n++) {\n            let pt = this.points[atoms[n] - 1];\n            x.push(pt.oval.cx);\n            y.push(pt.oval.cy);\n            symbol.push(pt.text != null);\n        }\n        let ox = [], oy = [];\n        const EXT = Molecule.IDEALBOND * 0.25 * this.scale;\n        for (let n = 0; n < sz - 1; n++) {\n            let dx = x[n + 1] - x[n], dy = y[n + 1] - y[n], invD = EXT * invZ(norm_xy(dx, dy));\n            ox.push(dy * invD);\n            oy.push(-dx * invD);\n        }\n        const FAR = 1.2, CLOSE = 0.7;\n        let sx1 = Vec.numberArray(0, sz), sy1 = Vec.numberArray(0, sz), sx2 = Vec.numberArray(0, sz), sy2 = Vec.numberArray(0, sz);\n        const capA = symbol[0] ? FAR : CLOSE;\n        if (!fractional) {\n            sx1[0] = x[0] + ox[0] * capA;\n            sy1[0] = y[0] + oy[0] * capA;\n            sx2[0] = x[0] - ox[0] * capA;\n            sy2[0] = y[0] - oy[0] * capA;\n        }\n        else {\n            const dx = -oy[0], dy = ox[0];\n            sx1[0] = x[0] + dx * capA;\n            sy1[0] = y[0] + dy * capA;\n            sx2[0] = x[0] + dx * capA;\n            sy2[0] = y[0] + dy * capA;\n        }\n        let ncross1 = 0, ncross2 = 0;\n        for (let n = 1; n < sz - 1; n++) {\n            const fr1 = symbol[n] ? FAR : CLOSE, fr2 = fr1;\n            sx1[n] = x[n] + fr1 * (ox[n - 1] + ox[n]);\n            sy1[n] = y[n] + fr1 * (oy[n - 1] + oy[n]);\n            sx2[n] = x[n] - fr2 * (ox[n - 1] + ox[n]);\n            sy2[n] = y[n] - fr2 * (oy[n - 1] + oy[n]);\n            for (let a of this.mol.atomAdjList(atoms[n]))\n                if (atoms.indexOf(a) < 0 && a != extAtom) {\n                    let pt = this.points[a - 1];\n                    let dx = pt.oval.cx - x[n], dy = pt.oval.cy - y[n];\n                    let dot1 = dx * (sx1[n] - x[n]) + dy * (sy1[n] - x[n]);\n                    let dot2 = dy * (sx2[n] - x[n]) + dy * (sy2[n] - x[n]);\n                    if (dot1 > dot2)\n                        ncross1++;\n                    else\n                        ncross2++;\n                }\n        }\n        let nn = sz - 1;\n        let capB = symbol[nn] ? FAR : CLOSE;\n        if (!fractional) {\n            sx1[nn] = x[nn] + ox[nn - 1] * capB;\n            sy1[nn] = y[nn] + oy[nn - 1] * capB;\n            sx2[nn] = x[nn] - ox[nn - 1] * capB;\n            sy2[nn] = y[nn] - oy[nn - 1] * capB;\n        }\n        else {\n            let dx = -oy[nn - 1], dy = ox[nn - 1];\n            sx1[nn] = x[nn] - dx * capB;\n            sy1[nn] = y[nn] - dy * capB;\n            sx2[nn] = x[nn] - dx * capB;\n            sy2[nn] = y[nn] - dy * capB;\n        }\n        let score1 = 0, score2 = 0;\n        for (let n = 0; n < sz - 1; n++) {\n            score1 += norm_xy(sx1[n + 1] - sx1[n], sy1[n + 1] - sy1[n]);\n            score2 += norm_xy(sx2[n + 1] - sx2[n], sy2[n + 1] - sy2[n]);\n        }\n        score1 *= ncross1 + 1;\n        score2 *= ncross2 + 1;\n        let sx = score1 < score2 ? sx1 : sx2;\n        let sy = score1 < score2 ? sy1 : sy2;\n        let p = { atoms, px: null, py: null, ctrl: null, size: this.lineSizePix };\n        this.splineInterpolate(p, sx, sy);\n        this.paths.push(p);\n    }\n    createBondCentroid(from, to) {\n        let pt = this.points[from - 1];\n        let x1 = pt.oval.cx, y1 = pt.oval.cy, x2 = 0, y2 = 0;\n        for (let a of to) {\n            pt = this.points[a - 1];\n            x2 += pt.oval.cx;\n            y2 += pt.oval.cy;\n        }\n        x2 /= to.length;\n        y2 /= to.length;\n        if (to.length <= 2) {\n            x2 -= 0.1 * (x2 - x1);\n            y2 -= 0.1 * (y2 - y1);\n        }\n        const minDist = MINBOND_LINE * this.measure.scale();\n        let xy1 = this.shrinkBond(x1, y1, x2, y2, this.backOffAtom(from, x1, y1, x2, y2, minDist));\n        this.ensureMinimumBondLength(xy1, [x2, y2], x1, y1, x2, y2, minDist);\n        let b = {\n            bnum: 0,\n            bfr: from,\n            bto: 0,\n            type: BLineType.Normal,\n            line: new Line(xy1[0], xy1[1], x2, y2),\n            size: this.lineSizePix,\n            head: 0,\n            col: this.policy.data.foreground\n        };\n        this.lines.push(b);\n        this.space.push(this.computeSpaceLine(b));\n    }\n    splineInterpolate(path, x, y) {\n        const sz = x.length;\n        const scale = 0.25;\n        for (let n = 0; n < sz; n++) {\n            if (n == 0) {\n                let dx = x[n + 1] - x[n], dy = y[n + 1] - y[n];\n                let qx = x[n] + scale * dx, qy = y[n] + scale * dy;\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n                path.px = Vec.append(path.px, qx);\n                path.py = Vec.append(path.py, qy);\n                path.ctrl = Vec.append(path.ctrl, true);\n            }\n            else if (n == sz - 1) {\n                let dx = x[n] - x[n - 1], dy = y[n] - y[n - 1];\n                let qx = x[n] - scale * dx, qy = y[n] - scale * dy;\n                path.px = Vec.append(path.px, qx);\n                path.py = Vec.append(path.py, qy);\n                path.ctrl = Vec.append(path.ctrl, true);\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n            }\n            else {\n                let dx = x[n + 1] - x[n - 1], dy = y[n + 1] - y[n - 1];\n                let invD = invZ(norm_xy(dx, dy));\n                dx *= invD;\n                dy *= invD;\n                let d1 = scale * norm_xy(x[n] - x[n - 1], y[n] - y[n - 1]), d2 = scale * norm_xy(x[n + 1] - x[n], y[n + 1] - y[n]);\n                let qx1 = x[n] - dx * d1, qy1 = y[n] - dy * d1;\n                let qx2 = x[n] + dx * d2, qy2 = y[n] + dy * d2;\n                path.px = Vec.append(path.px, qx1);\n                path.py = Vec.append(path.py, qy1);\n                path.ctrl = Vec.append(path.ctrl, true);\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n                path.px = Vec.append(path.px, qx2);\n                path.py = Vec.append(path.py, qy2);\n                path.ctrl = Vec.append(path.ctrl, true);\n            }\n        }\n    }\n    delocalisedAnnotation(atoms, charge, unpaired) {\n        const mol = this.mol;\n        let str = '';\n        if (charge == -1)\n            str = '-';\n        else if (charge == 1)\n            str = '+';\n        else if (charge < -1)\n            str = Math.abs(charge) + '-';\n        else if (charge > 1)\n            str = charge + '+';\n        if (unpaired > 0)\n            for (let n = 0; n < unpaired; n++)\n                str += '.';\n        if (str.length == 0)\n            return;\n        const sz = atoms.length;\n        let bestX = 0, bestY = 0;\n        for (let a of atoms) {\n            bestX += mol.atomX(a);\n            bestY += mol.atomY(a);\n        }\n        bestX /= sz;\n        bestY /= sz;\n        let bestScore = CoordUtil.congestionPoint(mol, bestX, bestY);\n        for (let n = 1; n < sz - 1; n++) {\n            let x = 0.5 * (mol.atomX(atoms[n - 1]) + mol.atomX(atoms[n + 1])), y = 0.5 * (mol.atomY(atoms[n - 1]) + mol.atomY(atoms[n + 1]));\n            let score = CoordUtil.congestionPoint(mol, x, y);\n            if (score < bestScore) {\n                bestScore = score;\n                bestX = x;\n                bestY = y;\n            }\n        }\n        let fsz = 0.8 * this.fontSizePix;\n        let wad = this.measure.measureText(str, fsz);\n        let rw = 0.55 * wad[0], rh = 0.55 * wad[1];\n        let a = {\n            anum: 0,\n            text: str,\n            fsz,\n            col: this.policy.data.foreground,\n            oval: new Oval(this.measure.angToX(bestX), this.measure.angToY(bestY), rw, rh)\n        };\n        this.points.push(a);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(a.oval.cx - rw, a.oval.cy - rh, 2 * rw, 2 * rh),\n            px: [a.oval.cx - rw, a.oval.cx + rw, a.oval.cx + rw, a.oval.cx - rw],\n            py: [a.oval.cy - rh, a.oval.cy - rh, a.oval.cy + rh, a.oval.cy + rh]\n        };\n        this.space.push(spc);\n    }\n    processPolymerUnit(unit, allUnits) {\n        if (Vec.len(unit.bondConn) == 4) {\n            this.processPolymerUnitPair(unit);\n            return;\n        }\n        let brackets = [];\n        const { mol, measure } = this;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let a1 = mol.bondFrom(n), a2 = mol.bondTo(n);\n            let in1 = unit.atoms.indexOf(a1) >= 0, in2 = unit.atoms.indexOf(a2) >= 0;\n            let bracket = null;\n            if (in1 && !in2)\n                bracket = { a1, a2 };\n            else if (in2 && !in1)\n                bracket = { a1: a2, a2: a1 };\n            else\n                continue;\n            bracket.x1 = mol.atomX(bracket.a1);\n            bracket.y1 = mol.atomY(bracket.a1);\n            bracket.x2 = mol.atomX(bracket.a2);\n            bracket.y2 = mol.atomY(bracket.a2);\n            bracket.shared = false;\n            for (let other of allUnits)\n                if (unit !== other && other.atoms.includes(bracket.a2)) {\n                    bracket.shared = true;\n                    break;\n                }\n            let nestings = allUnits.filter((look) => look === unit || (look.atoms.includes(bracket.a1) && !look.atoms.includes(bracket.a2)));\n            if (nestings.length > 1) {\n                nestings.sort((u1, u2) => u1.atoms.length - u2.atoms.length);\n                for (let i = 0; i < nestings.length; i++)\n                    if (nestings[i] === unit)\n                        bracket.nestOrder = i;\n                bracket.nestCount = nestings.length;\n            }\n            brackets.push(bracket);\n        }\n        let tagidx = 0;\n        let atomX = unit.atoms.map((a) => mol.atomX(a)), atomY = unit.atoms.map((a) => mol.atomY(a));\n        let minX = Vec.min(atomX), minY = Vec.min(atomY);\n        let maxX = Vec.max(atomX), maxY = Vec.max(atomY);\n        for (let n = 1; n < brackets.length; n++) {\n            let b1 = brackets[tagidx], b2 = brackets[n];\n            let score1 = b1.x2 - minX - b1.y2 + minY;\n            let score2 = b2.x2 - minX - b2.y2 + minY;\n            if (score2 > score1)\n                tagidx = n;\n        }\n        let isLinear = false, isOuter = false;\n        if (brackets.length == 2) {\n            let left = brackets[tagidx == 0 ? 1 : 0], right = brackets[tagidx];\n            let theta1 = Math.atan2(left.y2 - left.y1, left.x2 - left.x1);\n            let theta2 = Math.atan2(right.y2 - right.y1, right.x2 - right.x1);\n            isLinear = (theta1 > 145 * DEGRAD || theta1 < -145 * DEGRAD) && theta2 < 35 * DEGRAD && theta2 > -35 * DEGRAD;\n        }\n        else if (brackets.length == 0) {\n            let ym = 0.5 * (minY + maxY);\n            brackets.push({ x1: minX, y1: ym, x2: minX - 1, y2: ym });\n            brackets.push({ x1: maxX, y1: ym, x2: maxX + 1, y2: ym });\n            tagidx = 1;\n            isOuter = true;\n        }\n        let bsz1 = (isOuter ? 0.5 * (maxY - minY + 1) : isLinear ? 1.0 : 0.5) * this.scale, bsz2 = 0.2 * this.scale;\n        const BASE_LINE = { bnum: 0, bfr: 0, bto: 0, type: BLineType.Normal, size: this.lineSizePix, head: 0, col: this.policy.data.foreground };\n        const BASE_TEXT = { anum: 0, fsz: 0.7 * this.fontSizePix, bold: false, col: this.policy.data.foreground };\n        for (let n = 0; n < brackets.length; n++) {\n            let bracket = brackets[n];\n            let x1 = measure.angToX(bracket.x1), y1 = measure.angToY(bracket.y1);\n            let x2 = measure.angToX(bracket.x2), y2 = measure.angToY(bracket.y2);\n            if (bracket.shared) {\n                x2 -= (x2 - x1) * 0.1;\n                y2 -= (y2 - y1) * 0.1;\n            }\n            if (bracket.nestCount > 1) {\n                let dx = x2 - x1, dy = y2 - y1, fract = (bracket.nestOrder + 1) / bracket.nestCount;\n                x2 = x1 + dx * fract;\n                y2 = y1 + dy * fract;\n            }\n            let mx = 0.5 * (x1 + x2), my = 0.5 * (y1 + y2);\n            if (isLinear) {\n                x1 = x2 = mx;\n                y1 = y2 = my;\n                if (n == tagidx) {\n                    x1--;\n                    x2++;\n                }\n                else {\n                    x1++;\n                    x2--;\n                }\n            }\n            let invDist = invZ(norm_xy(x2 - x1, y2 - y1));\n            let dx = (x2 - x1) * invDist, dy = (y2 - y1) * invDist;\n            let ox = dy, oy = -dx;\n            let px2 = mx - bsz1 * ox, py2 = my - bsz1 * oy;\n            let px3 = mx + bsz1 * ox, py3 = my + bsz1 * oy;\n            let px1 = px2 - bsz2 * dx, py1 = py2 - bsz2 * dy;\n            let px4 = px3 - bsz2 * dx, py4 = py3 - bsz2 * dy;\n            let line1 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px1, py1, px2, py2) });\n            let line2 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px2, py2, px3, py3) });\n            let line3 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px3, py3, px4, py4) });\n            this.lines.push(line1);\n            this.lines.push(line2);\n            this.lines.push(line3);\n            this.space.push(this.computeSpaceLine(line1));\n            this.space.push(this.computeSpaceLine(line2));\n            this.space.push(this.computeSpaceLine(line3));\n            if (n == tagidx) {\n                let xx, yy;\n                if (bracket.shared)\n                    [xx, yy] = [px2 - 0.5 * this.scale * ox, py2 - 0.5 * this.scale * oy];\n                else\n                    [xx, yy] = [px2 + bsz2 * 2 * dx, py2 + bsz2 * 2 * dy];\n                let pt1 = Object.assign(Object.assign({}, BASE_TEXT), { 'text': 'n', 'oval': new Oval(xx, yy, 0, 0) });\n                this.points.push(pt1);\n                this.space.push(this.computeSpacePoint(pt1));\n                if (unit.connect != null) {\n                    let text = '?';\n                    if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                        text = 'ht';\n                    else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                        text = 'hh';\n                    else if (unit.connect == PolymerBlockConnectivity.Random)\n                        text = 'eu';\n                    if (bracket.shared)\n                        [xx, yy] = [px3 + 0.5 * this.scale * ox, py3 + 0.5 * this.scale * oy];\n                    else\n                        [xx, yy] = [px3 + bsz2 * 2.5 * dx, py3 + bsz2 * 2.5 * dy];\n                    let pt2 = Object.assign(Object.assign({}, BASE_TEXT), { 'text': text, 'oval': new Oval(xx, yy, 0, 0) });\n                    this.points.push(pt2);\n                    this.space.push(this.computeSpacePoint(pt2));\n                }\n            }\n        }\n    }\n    processPolymerUnitPair(unit) {\n        const { mol, measure } = this;\n        let xpos = [], ypos = [];\n        for (let b of unit.bondConn) {\n            let bfr = mol.bondFrom(b), bto = mol.bondTo(b);\n            xpos.push(measure.angToX(0.5 * (mol.atomX(bfr) + mol.atomX(bto))));\n            ypos.push(measure.angToY(0.5 * (mol.atomY(bfr) + mol.atomY(bto))));\n        }\n        let cx = Vec.sum(xpos) * 0.25, cy = Vec.sum(ypos) * 0.25;\n        let bsz = 0.5 * this.scale;\n        let rx = [], ry = [];\n        for (let [i1, i2] of [[0, 1], [2, 3]]) {\n            let dx = xpos[i2] - xpos[i1], dy = ypos[i2] - ypos[i1], inv = bsz * invZ(norm_xy(dx, dy) + 0.001);\n            [dx, dy] = [dx * inv, dy * inv];\n            xpos[i1] -= 2 * dx;\n            ypos[i1] -= 2 * dy;\n            xpos[i2] += 2 * dx;\n            ypos[i2] += 2 * dy;\n            let ox = dy, oy = -dx;\n            let dsq1 = norm2_xy(0.5 * (xpos[i1] + xpos[i2]) + ox - cx, 0.5 * (ypos[i1] + ypos[i2]) + oy - cy);\n            let dsq2 = norm2_xy(0.5 * (xpos[i1] + xpos[i2]) - ox - cx, 0.5 * (ypos[i1] + ypos[i2]) - oy - cy);\n            if (dsq2 < dsq1)\n                [ox, oy] = [-ox, -oy];\n            rx.push(...[ox, ox]);\n            ry.push(...[oy, oy]);\n        }\n        const BASE_LINE = { bnum: 0, bfr: 0, bto: 0, type: BLineType.Normal, size: this.lineSizePix, head: 0, col: this.policy.data.foreground };\n        const BASE_TEXT = { anum: 0, fsz: 0.7 * this.fontSizePix, bold: false, col: this.policy.data.foreground };\n        let drawLine = (x1, y1, x2, y2) => {\n            let line = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(x1, y1, x2, y2) });\n            this.lines.push(line);\n            this.space.push(this.computeSpaceLine(line));\n        };\n        let drawText = (x, y, txt) => {\n            let pt = Object.assign(Object.assign({}, BASE_TEXT), { 'text': txt, 'oval': new Oval(x, y, 0, 0) });\n            this.points.push(pt);\n            this.space.push(this.computeSpacePoint(pt));\n        };\n        drawLine(xpos[0], ypos[0], xpos[1], ypos[1]);\n        drawLine(xpos[0], ypos[0], xpos[0] + rx[0], ypos[0] + ry[0]);\n        drawLine(xpos[1], ypos[1], xpos[1] + rx[1], ypos[1] + ry[1]);\n        drawLine(xpos[2], ypos[2], xpos[3], ypos[3]);\n        drawLine(xpos[2], ypos[2], xpos[2] + rx[2], ypos[2] + ry[2]);\n        drawLine(xpos[3], ypos[3], xpos[3] + rx[3], ypos[3] + ry[3]);\n        let xmin = Vec.min(xpos), ymin = Vec.min(ypos);\n        let dist = [];\n        for (let n = 0; n < 4; n++)\n            dist.push(xpos[n] - xmin + ypos[n] - ymin);\n        let idxN = Vec.idxMax(dist);\n        drawText(xpos[idxN] - rx[idxN], ypos[idxN] - ry[idxN], 'n');\n        let idxD2 = idxN + (idxN % 2 == 1 ? -1 : 1), idxD1 = (idxD2 + 2) % 4;\n        drawText(xpos[idxD1] - 0.5 * rx[idxD1], ypos[idxD1] - 0.5 * ry[idxD1], '*');\n        drawText(xpos[idxD2] - 0.5 * rx[idxD2], ypos[idxD2] - 0.5 * ry[idxD2], '*');\n    }\n}\nArrangeMolecule.FONT_CORRECT = 1.5;\nexport { ArrangeMolecule };\n//# sourceMappingURL=ArrangeMolecule.js.map","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {DataSheet, DataSheetColumn} from 'webmolkit/ds/DataSheet';\nimport {MDLSDFWriter} from 'webmolkit/io/MDLWriter';\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {MDLMOLReader} from 'webmolkit/io/MDLReader';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {ExportMInChI} from './ExportMInChI';\nimport {Mixfile, MixfileComponent} from './Mixfile';\n\n/*\n\tInteroperability with SDfiles: conversion of the Mixfile hierarchy into a flattened SDfile is useful for presenting to\n\tsoftware that can read this format, and is also a waypoint en route to a MInChI string.\n*/\n\nexport class ExportSDFile\n{\n\tprivate ds = new DataSheet();\n\tprivate colMol:number;\n\tprivate colName:number;\n\tprivate colHier:number;\n\tprivate colConc:number;\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t\tthis.colMol = this.ds.appendColumn('Molecule', DataSheetColumn.Molecule, '');\n\t\tthis.colName = this.ds.appendColumn('Name', DataSheetColumn.String, '');\n\t\tthis.colHier = this.ds.appendColumn('MINCHI$N', DataSheetColumn.String, '');\n\t\tthis.colConc = this.ds.appendColumn('MINCHI$C', DataSheetColumn.String, '');\n\t}\n\n\t// can add any number of mixtures, which will be numbered automatically\n\tpublic append(mixfile:Mixfile):void\n\t{\n\t\t// if the root node is something other than a pure placeholder, then add it explicitly\n\t\tif (mixfile.name || mixfile.molfile || mixfile.inchi)\n\t\t{\n\t\t\tthis.appendComponent(mixfile, [1]);\n\t\t\treturn;\n\t\t}\n\n\t\t// otherwise, add all of contents of the root node as a series with incrementing primary indexes\n\t\tif (!mixfile.contents) return;\n\t\tfor (let n = 0; n < mixfile.contents.length; n++) this.appendComponent(mixfile.contents[n], [n + 1]);\n\t}\n\n\t// return the SDF-serialised representation\n\tpublic write():string\n\t{\n\t\treturn new MDLSDFWriter(this.ds).write();\n\t}\n\n\t// ------------ private methods ------------\n\n\t// recursively add a component, and all of its subcomponents\n\tprivate appendComponent(comp:MixfileComponent, seq:number[]):void\n\t{\n\t\tlet row = this.ds.appendRow();\n\n\t\tlet mol:Molecule = null;\n\t\tif (comp.molfile)\n\t\t{\n\t\t\tmol = Molecule.fromString(comp.molfile);\n\t\t\tif (!mol)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tmol = new MDLMOLReader(comp.molfile).parse();\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\t\t\t}\n\t\t}\n\t\tif (!mol) mol = new Molecule();\n\n\t\tthis.ds.setMolecule(row, this.colMol, mol);\n\t\tif (comp.name) this.ds.setString(row, this.colName, comp.name);\n\t\tthis.ds.setString(row, this.colHier, seq.join('.'));\n\t\tthis.ds.setString(row, this.colConc, this.formatConcentration(comp));\n\n\t\tif (comp.contents) for (let n = 0; n < comp.contents.length; n++)\n\t\t{\n\t\t\tlet subseq = seq.slice(0);\n\t\t\tsubseq.push(n + 1);\n\t\t\tthis.appendComponent(comp.contents[n], subseq);\n\t\t}\n\t}\n\n\t// turns a concentration into a suitable precursor string, or null otherwise\n\tprivate formatConcentration(comp:MixfileComponent):string\n\t{\n\t\t/* ... this is a pseudo-MInChI approach ...\n\t\t// TODO: need special deal for ratio without denominator - can sometimes add them up to form an implicit denominator\n\n\t\tif (comp.ratio && comp.ratio.length >= 2)\n\t\t{\n\t\t\tlet numer = comp.ratio[0], denom = comp.ratio[1];\n\t\t\tif (!(denom > 0)) return null;\n\t\t\treturn (100 * numer / denom) + ' pp';\n\t\t}\n\n\t\tif (comp.quantity == null || comp.units == null) return null;\n\n\t\t// special deal (maybe temporary): units that are written with common names that map to a URI are converted automatically\n\t\tlet unitURI = comp.units;\n\t\tif (!unitURI.startsWith('http://')) unitURI = Units.nameToURI(unitURI);\n\t\tif (!unitURI) return;\n\n\t\t// TODO: maybe another special deal for absolute weight/volume/mole quantities - convert them into ratios, to the extent that's\n\t\t// possible... maybe approximating where necessary\n\n\t\tlet bits:string[] = [];\n\n\t\tif (comp.relation != null) bits.push(comp.relation);\n\n\t\tlet values:number[] = typeof comp.quantity == 'number' ? [comp.quantity as number] : comp.quantity;\n\n\t\tlet [mnemonic, scaled] = Units.convertToMInChI(unitURI, values);\n\t\tif (!mnemonic) return;\n\t\tbits.push(scaled[0].toString());\n\t\tif (scaled.length > 1) {bits.push('..'); bits.push(scaled[1].toString());}\n\t\tbits.push(mnemonic);\n\n\t\treturn bits.join(' ');*/\n\n\t\tlet useRatio:number = null;\n\t\tif (Vec.len(comp.ratio) == 2) useRatio = comp.ratio[0]; // mixfile ratios are stored as [numer, denom] where denom is checksum; could verify that this\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// is consistent before deigning to use it, but we're just passing it through\n\t\treturn ExportMInChI.formatConcentration(comp.quantity, comp.error, useRatio, comp.units, comp.relation);\n\t}\n}\n\n","class FontData {\n    constructor() {\n        this.UNITS_PER_EM = 2048;\n        this.INV_UNITS_PER_EM = 1.0 / this.UNITS_PER_EM;\n        this.PANOSE_1 = '2 11 6 4 3 5 4 4 2 4';\n        this.ASCENT = 1638;\n        this.DESCENT = -410;\n        this.MISSING_HORZ = 2048;\n        this.MISSING_DATA = 'M256 0v1536h1536v-1536h-1536zM384 128h1280v1280h-1280v-1280z';\n        this.ASCENT_FUDGE = 0.9;\n        this.UNICODE = [\n            ' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<',\n            '=', '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n            '[', '\\\\', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\n            'x', 'y', 'z', '{', '|', '}', '~', '\\u00A0', '\\u00A1', '\\u00A2', '\\u00A3', '\\u00A4', '\\u00A5', '\\u00A6', '\\u00A7', '\\u00A8', '\\u00A9', '\\u00AA',\n            '\\u00AB', '\\u00AC', '\\u00AD', '\\u00AE', '\\u00AF', '\\u00B0', '\\u00B1', '\\u00B2', '\\u00B3', '\\u00B4', '\\u00B5', '\\u00B6', '\\u00B7', '\\u00B8', '\\u00B9',\n            '\\u00BA', '\\u00BB', '\\u00BC', '\\u00BD', '\\u00BE', '\\u00BF', '\\u00C0', '\\u00C1', '\\u00C2', '\\u00C3', '\\u00C4', '\\u00C5', '\\u00C6', '\\u00C7', '\\u00C8',\n            '\\u00C9', '\\u00CA', '\\u00CB', '\\u00CC', '\\u00CD', '\\u00CE', '\\u00CF', '\\u00D0', '\\u00D1', '\\u00D2', '\\u00D3', '\\u00D4', '\\u00D5', '\\u00D6', '\\u00D7',\n            '\\u00D8', '\\u00D9', '\\u00DA', '\\u00DB', '\\u00DC', '\\u00DD', '\\u00DE', '\\u00DF', '\\u00E0', '\\u00E1', '\\u00E2', '\\u00E3', '\\u00E4', '\\u00E5', '\\u00E6',\n            '\\u00E7', '\\u00E8', '\\u00E9', '\\u00EA', '\\u00EB', '\\u00EC', '\\u00ED', '\\u00EE', '\\u00EF', '\\u00F0', '\\u00F1', '\\u00F2', '\\u00F3', '\\u00F4', '\\u00F5',\n            '\\u00F6', '\\u00F7', '\\u00F8', '\\u00F9', '\\u00FA', '\\u00FB', '\\u00FC', '\\u00FD', '\\u00FE', '\\u037E', '\\u0384', '\\u0385', '\\u0386', '\\u0387', '\\u0388',\n            '\\u0389', '\\u038A', '\\u038C', '\\u038E', '\\u038F', '\\u0390', '\\u0391', '\\u0392', '\\u0393', '\\u0394', '\\u0395', '\\u0396', '\\u0397', '\\u0398', '\\u0399',\n            '\\u039A', '\\u039B', '\\u039C', '\\u039D', '\\u039E', '\\u039F', '\\u03A0', '\\u03A1', '\\u03A3', '\\u03A4', '\\u03A5', '\\u03A6', '\\u03A7', '\\u03A8', '\\u03A9',\n            '\\u03AA', '\\u03AB', '\\u03AC', '\\u03AD', '\\u03AE', '\\u03AF', '\\u03B0', '\\u03B1', '\\u03B2', '\\u03B3', '\\u03B4', '\\u03B5', '\\u03B6', '\\u03B7', '\\u03B8',\n            '\\u03B9', '\\u03BA', '\\u03BB', '\\u03BC', '\\u03BD', '\\u03BE', '\\u03BF', '\\u03C0', '\\u03C1', '\\u03C2', '\\u03C3', '\\u03C4', '\\u03C5', '\\u03C6', '\\u03C7',\n            '\\u03C8', '\\u03C9', '\\u03CA', '\\u03CB', '\\u03CC', '\\u03CD', '\\u03CE', '\\u2202', '\\u2206', '\\u220F', '\\u2211', '\\u2212', '\\u2215', '\\u2219', '\\u221A',\n            '\\u221E', '\\u222B', '\\u2248', '\\u2260', '\\u2264', '\\u2265'\n        ];\n        this.HORIZ_ADV_X = [\n            720, 806, 940, 1676, 1302, 2204, 1488, 550, 930, 930, 1302, 1676, 745, 930, 745, 930, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302,\n            930, 930, 1676, 1676, 1676, 1117, 2048, 1400, 1404, 1430, 1578, 1295, 1177, 1588, 1539, 862, 931, 1419, 1140, 1726, 1532, 1612, 1235, 1612, 1424,\n            1400, 1262, 1499, 1400, 2025, 1403, 1260, 1403, 930, 930, 930, 1676, 1302, 1302, 1230, 1276, 1067, 1276, 1220, 720, 1276, 1296, 562, 705, 1212, 562,\n            1992, 1296, 1243, 1276, 1276, 874, 1067, 807, 1296, 1212, 1676, 1212, 1212, 1076, 1300, 930, 1300, 1676, 720, 806, 1302, 1302, 1302, 1302, 930, 1302,\n            1302, 2048, 1117, 1320, 1676, 930, 2048, 1302, 1110, 1676, 1110, 1110, 1302, 1314, 1302, 745, 1302, 1110, 1117, 1320, 2048, 2048, 2048, 1117, 1400,\n            1400, 1400, 1400, 1400, 1400, 2016, 1430, 1295, 1295, 1295, 1295, 862, 862, 862, 862, 1588, 1532, 1612, 1612, 1612, 1612, 1612, 1676, 1612, 1499,\n            1499, 1499, 1499, 1260, 1240, 1270, 1230, 1230, 1230, 1230, 1230, 1230, 1956, 1067, 1220, 1220, 1220, 1220, 562, 562, 562, 562, 1253, 1296, 1243,\n            1243, 1243, 1243, 1243, 1676, 1243, 1296, 1296, 1296, 1296, 1212, 1276, 930, 1302, 1302, 1400, 930, 1538, 1782, 1105, 1804, 1543, 1859, 562, 1400,\n            1404, 1160, 1440, 1295, 1403, 1539, 1612, 862, 1419, 1404, 1726, 1532, 1329, 1612, 1539, 1235, 1377, 1262, 1260, 1677, 1403, 1783, 1676, 862, 1260,\n            1276, 1050, 1296, 562, 1293, 1276, 1270, 1212, 1245, 1050, 937, 1296, 1278, 562, 1212, 1212, 1310, 1212, 1030, 1243, 1305, 1280, 1040, 1291, 1016,\n            1293, 1618, 1208, 1683, 1666, 562, 1293, 1243, 1293, 1666, 1302, 1489, 1676, 1489, 1676, 740, 745, 1676, 2048, 1302, 1676, 1676, 1676, 1676\n        ];\n        this.GLYPH_DATA = [\n            '',\n            'M515 1489l-26 -1079h-170l-28 1079h224zM505 0h-204v211h204v-211z',\n            'M772 1556l-43 -579h-132l-43 579h218zM386 1556l-43 -579h-132l-43 579h218z',\n            'M1481 932h-333l-92 -376h308v-135h-343l-104 -421h-129l104 421h-270l-104 -421h-129l104 421h-298v135h333l92 376h-308v135h343l105 422h129l-105 -422h270l105 422h129l-105 -422h298v-135zM1022 934h-274l-94 -380h274z',\n            'M1160 380q0 -155 -121 -257.5t-317 -121.5v-362h-118v357q-132 1 -248 25.5t-201 63.5v198h16q19 -14 68 -40.5t95 -43.5q52 -19 121.5 -35.5t148.5 -19.5v433q-40 8 -74 15.5t-63 15.5q-163 41 -234 123.5t-71 203.5q0 148 116.5 250t325.5 119v272h118v-270 q101 -2 207 -24t178 -51v-196h-14q-75 46 -156.5 81.5t-214.5 44.5v-431q30 -5 65 -13.5t61 -13.5q149 -32 230.5 -110t81.5 -213zM604 747v413q-107 -8 -180 -58.5t-73 -140.5q0 -91 54 -137t199 -77zM971 354q0 94 -58.5 137.5t-190.5 68.5v-414q120 12 184.5 61t64.5 147 z',\n            'M884 1076q0 -224 -94.5 -333t-272.5 -109q-182 0 -275 109t-93 332q0 224 95 333t273 109q181 0 274 -110t93 -331zM1575 1489l-780 -1489h-165l780 1489h165zM2055 413q0 -224 -95 -333t-273 -109q-181 0 -274 110t-93 331q0 224 94.5 333t272.5 109q182 0 275 -109 t93 -332zM706 1076q0 172 -44.5 240t-144.5 68q-102 0 -146 -68t-44 -241t44 -240.5t146 -67.5q100 0 144.5 67.5t44.5 241.5zM1877 413q0 172 -44.5 240t-144.5 68q-102 0 -146 -68t-44 -241t44 -240.5t146 -67.5q100 0 144.5 67.5t44.5 241.5z',\n            'M792 1191q0 95 -56.5 149.5t-144.5 54.5q-92 0 -150 -61.5t-58 -150.5q0 -75 39.5 -133t170.5 -137q98 35 148.5 102.5t50.5 175.5zM986 315l-478 466q-31 -15 -62 -39.5t-62 -66.5q-28 -39 -46 -94t-18 -124q0 -146 85.5 -235.5t242.5 -89.5q93 0 184.5 45.5 t153.5 137.5zM1287 909v-96q0 -96 -25 -216t-85 -229l378 -368h-246l-229 224q-115 -142 -235 -198.5t-247 -56.5q-208 0 -345.5 121.5t-137.5 318.5q0 92 26 159t61 116q35 47 87 88.5t105 72.5q-110 72 -158.5 145t-48.5 184q0 67 26.5 127.5t79.5 110.5q50 48 130.5 78 t177.5 30q173 0 280 -87.5t107 -221.5q0 -44 -12 -99.5t-41 -99.5q-32 -49 -91 -94t-153 -77l371 -362q14 40 21 88t8 100q2 56 1.5 125t-0.5 117h195z',\n            'M386 1556l-43 -579h-136l-43 579h222z',\n            'M783 -412h-229q-177 203 -275 443t-98 541t98 541t275 443h229v-10q-81 -73 -154.5 -168.5t-136.5 -222.5q-60 -123 -97.5 -271t-37.5 -312q0 -171 36.5 -313t98.5 -270q60 -123 137 -222.5t154 -168.5v-10z',\n            'M749 572q0 -301 -98 -541t-275 -443h-229v10q77 69 154.5 168.5t136.5 222.5q62 128 98.5 270t36.5 313q0 164 -37 312t-98 271q-63 127 -136.5 222.5t-154.5 168.5v10h229q177 -203 275 -443t98 -541z',\n            'M1137 887l-64 -110l-362 213l6 -360h-129l5 360l-361 -214l-65 110l381 207l-381 207l65 110l362 -213l-6 359h129l-7 -359l363 212l64 -110l-380 -205z',\n            'M1466 572h-545v-545h-166v545h-545v160h545v545h166v-545h545v-160z',\n            'M575 285l-282 -655h-146l174 655h254z',\n            'M777 561h-624v181h624v-181z',\n            'M492 0h-239v285h239v-285z',\n            'M860 1556l-717 -1860h-173l714 1860h176z',\n            'M1167 745q0 -401 -125.5 -588.5t-389.5 -187.5q-268 0 -391.5 190t-123.5 584q0 397 125 586.5t390 189.5q268 0 391.5 -192.5t123.5 -581.5zM904 291q35 81 47.5 190.5t12.5 263.5q0 152 -12.5 264t-48.5 190q-35 77 -95.5 116t-155.5 39q-94 0 -155.5 -39t-97.5 -118 q-34 -74 -46.5 -193t-12.5 -261q0 -156 11 -261t47 -188q33 -78 93.5 -119t160.5 -41q94 0 156 39t96 118z',\n            'M1084 0h-806v152h310v998h-310v136q63 0 135 10.5t109 30.5q46 25 72.5 63.5t30.5 103.5h155v-1342h304v-152z',\n            'M1169 0h-1008v209q105 90 210.5 180t196.5 179q192 186 263 295.5t71 236.5q0 116 -76.5 181.5t-213.5 65.5q-91 0 -197 -32t-207 -98h-10v210q71 35 189.5 64t229.5 29q229 0 359 -110.5t130 -299.5q0 -85 -21.5 -158.5t-63.5 -139.5q-39 -62 -91.5 -122t-127.5 -133 q-107 -105 -221 -203.5t-213 -182.5h801v-171z',\n            'M1038 717q48 -43 79 -108t31 -168q0 -102 -37 -187t-104 -148q-75 -70 -176.5 -103.5t-222.5 -33.5q-124 0 -244 29.5t-197 64.5v209h15q85 -56 200 -93t222 -37q63 0 134 21t115 62q46 44 68.5 97t22.5 134q0 80 -25.5 132.5t-70.5 82.5q-45 31 -109 42.5t-138 11.5h-90 v166h70q152 0 242.5 63.5t90.5 185.5q0 54 -23 94.5t-64 66.5q-43 26 -92 36t-111 10q-95 0 -202 -34t-202 -96h-10v209q71 35 189.5 64.5t229.5 29.5q109 0 192 -20t150 -64q72 -48 109 -116t37 -159q0 -124 -87.5 -216.5t-206.5 -116.5v-14q48 -8 110 -33.5t105 -63.5z ',\n            'M1203 419h-221v-419h-192v419h-713v230l721 840h184v-910h221v-160zM790 579v672l-577 -672h577z',\n            'M1157 473q0 -104 -38 -199t-104 -160q-72 -70 -171.5 -107.5t-230.5 -37.5q-122 0 -235 25.5t-191 61.5v211h14q82 -52 192 -88.5t216 -36.5q71 0 137.5 20t118.5 70q44 43 66.5 103t22.5 139q0 77 -26.5 130t-73.5 85q-52 38 -126.5 53.5t-166.5 15.5q-88 0 -169.5 -12 t-140.5 -24v767h896v-175h-703v-396q43 4 88 6t78 2q121 0 212 -20.5t167 -72.5q80 -55 124 -142t44 -218z',\n            'M1191 483q0 -227 -149.5 -370.5t-366.5 -143.5q-110 0 -200 34t-159 101q-86 83 -132.5 220t-46.5 330q0 198 42.5 351t135.5 272q88 113 227 176.5t324 63.5q59 0 99 -5t81 -18v-191h-10q-28 15 -84.5 28.5t-115.5 13.5q-215 0 -343 -134.5t-149 -363.5 q84 51 165.5 77.5t188.5 26.5q95 0 167.5 -17.5t148.5 -70.5q88 -61 132.5 -154t44.5 -226zM988 475q0 93 -27.5 154t-90.5 106q-46 32 -102 42t-117 10q-85 0 -158 -20t-150 -62q-2 -22 -3 -42.5t-1 -51.5q0 -158 32.5 -249.5t89.5 -144.5q46 -44 99.5 -64.5t116.5 -20.5 q145 0 228 88.5t83 254.5z',\n            'M1173 1266l-674 -1266h-214l717 1314h-848v175h1019v-223z',\n            'M1180 415q0 -193 -150.5 -321t-378.5 -128q-242 0 -385.5 125t-143.5 320q0 124 72 224.5t203 159.5v6q-120 64 -177.5 140t-57.5 190q0 168 138 280t351 112q223 0 356 -107t133 -272q0 -101 -63 -198.5t-185 -152.5v-6q140 -60 214 -148t74 -224zM943 1142 q0 107 -82.5 170.5t-210.5 63.5q-126 0 -206.5 -60t-80.5 -162q0 -72 40.5 -124.5t122.5 -93.5q37 -18 106.5 -47t135.5 -48q99 66 137 137t38 164zM974 396q0 92 -40.5 147.5t-158.5 111.5q-47 22 -103 41t-149 53q-90 -49 -144.5 -133t-54.5 -190q0 -135 93 -223t236 -88 q146 0 233.5 75t87.5 206z',\n            'M1167 834q0 -195 -44.5 -354t-134.5 -271q-91 -114 -228 -176t-322 -62q-52 0 -98 5.5t-82 17.5v191h10q29 -15 82 -28.5t118 -13.5q221 0 346.5 132.5t145.5 365.5q-93 -56 -175 -80t-179 -24q-92 0 -166.5 18t-149.5 70q-88 61 -132.5 155t-44.5 225q0 228 150 371 t366 143q108 0 200 -33.5t161 -100.5q85 -83 131 -213.5t46 -337.5zM965 877q0 155 -32 249t-88 146q-47 45 -101 64.5t-117 19.5q-144 0 -227.5 -90t-83.5 -253q0 -95 27 -155t91 -105q45 -31 99 -41.5t120 -10.5q78 0 158 21t150 61q1 21 2.5 41.5t1.5 52.5z',\n            'M585 832h-239v285h239v-285zM585 0h-239v285h239v-285z',\n            'M585 832h-239v285h239v-285zM658 285l-282 -655h-146l174 655h254z',\n            'M1408 77l-1154 513v124l1154 513v-180l-910 -395l910 -395v-180z',\n            'M1431 782h-1186v160h1186v-160zM1431 362h-1186v160h1186v-160z',\n            'M1422 590l-1154 -513v180l910 395l-910 395v180l1154 -513v-124z',\n            'M1005 1139q0 -98 -35 -174.5t-92 -135.5q-56 -57 -129 -107t-155 -97v-225h-179v305q65 37 140.5 81t123.5 89q58 52 90 107.5t32 141.5q0 113 -76.5 168.5t-197.5 55.5q-108 0 -204.5 -34t-152.5 -69h-10v204q70 27 177.5 48.5t203.5 21.5q215 0 339.5 -104.5 t124.5 -275.5zM610 0h-204v211h204v-211z',\n            'M1870 663q0 -139 -40.5 -269t-115.5 -237h-440l-27 116q-74 -60 -142 -92t-156 -32q-168 0 -268.5 127t-100.5 355q0 227 123 362t294 135q73 0 129 -16.5t121 -49.5v48h159v-842h243q42 75 63.5 187.5t21.5 201.5q0 164 -45.5 298t-133.5 230t-218 147.5t-295 51.5 q-160 0 -292.5 -58t-227.5 -156q-96 -98 -150.5 -234.5t-54.5 -290.5q0 -165 52 -301.5t147 -233.5q99 -101 232 -152.5t290 -51.5q86 0 177.5 11t175.5 35v-142q-97 -21 -181 -28.5t-173 -7.5q-186 0 -345 63.5t-273 177.5q-115 115 -179 276t-64 356q0 185 67 344.5 t183 276.5t275 184t340 67q196 0 350 -62t260 -174t162.5 -269.5t56.5 -350.5zM1245 408v518q-63 29 -113 41.5t-107 12.5q-129 0 -202 -90t-73 -256q0 -163 58 -246.5t181 -83.5q67 0 134 31t122 73z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523z',\n            'M1323 458q0 -111 -42 -196t-113 -140q-84 -66 -184.5 -94t-255.5 -28h-528v1489h441q163 0 244 -12t155 -50q82 -43 119 -110.5t37 -161.5q0 -106 -54 -180.5t-144 -119.5v-8q151 -31 238 -132.5t87 -256.5zM990 1129q0 54 -18 91t-58 60q-47 27 -114 33.5t-166 6.5h-236 v-430h256q93 0 148 9.5t102 39.5t66.5 77.5t19.5 112.5zM1117 450q0 90 -27 143t-98 90q-48 25 -116.5 32.5t-166.5 7.5h-311v-554h262q130 0 213 13.5t136 49.5q56 39 82 89t26 129z',\n            'M1350 108q-55 -24 -99.5 -45t-116.5 -44q-61 -19 -132.5 -32.5t-157.5 -13.5q-162 0 -294.5 45.5t-230.5 142.5q-96 95 -150 241.5t-54 340.5q0 184 52 329t150 245q95 97 229.5 148t298.5 51q120 0 239.5 -29t265.5 -102v-235h-15q-123 103 -244 150t-259 47 q-113 0 -203.5 -36.5t-161.5 -113.5q-69 -75 -107.5 -189.5t-38.5 -264.5q0 -157 42.5 -270t109.5 -184q70 -74 163.5 -109.5t197.5 -35.5q143 0 268 49t234 147h14v-232z',\n            'M1458 743q0 -203 -88.5 -368t-235.5 -256q-102 -63 -227.5 -91t-330.5 -28h-376v1489h372q218 0 346.5 -31.5t217.5 -86.5q152 -95 237 -253t85 -375zM1251 746q0 175 -61 295t-182 189q-88 50 -187 69.5t-237 19.5h-186v-1149h186q143 0 249.5 21t195.5 78 q111 71 166.5 187t55.5 290z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176z',\n            'M1151 1313h-753v-420h647v-176h-647v-717h-198v1489h951v-176z',\n            'M1442 110q-122 -56 -266.5 -97.5t-279.5 -41.5q-174 0 -319 48t-247 144q-103 97 -159 242.5t-56 340.5q0 357 208.5 563.5t572.5 206.5q127 0 259.5 -30.5t285.5 -103.5v-235h-18q-31 24 -90 63t-116 65q-69 31 -156.5 51.5t-198.5 20.5q-250 0 -395.5 -160.5 t-145.5 -434.5q0 -289 152 -449.5t414 -160.5q96 0 191.5 19t167.5 49v365h-399v174h595v-639z',\n            'M1339 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152z',\n            'M746 387q0 -196 -119.5 -302t-320.5 -106q-48 0 -128 8.5t-134 20.5v185h11q41 -14 101 -29t123 -15q92 0 146.5 21t80.5 60q27 40 34.5 98t7.5 134v869h-315v158h513v-1102z',\n            'M1397 0h-257l-589 663l-148 -158v-505h-198v1489h198v-777l723 777h240l-665 -700z',\n            'M1142 0h-942v1489h198v-1313h744v-176z',\n            'M1526 0h-198v1283l-414 -873h-118l-411 873v-1283h-185v1489h270l397 -829l384 829h275v-1489z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1174 1039q0 -99 -34.5 -183.5t-96.5 -146.5q-77 -77 -182 -115.5t-265 -38.5h-198v-555h-198v1489h404q134 0 227 -22.5t165 -70.5q85 -57 131.5 -142t46.5 -215zM968 1034q0 77 -27 134t-82 93q-48 31 -109.5 44.5t-155.5 13.5h-196v-595h167q120 0 195 21.5t122 68.5 q47 48 66.5 101t19.5 119z',\n            'M1528 -365q-60 -15 -118.5 -21.5t-119.5 -6.5q-174 0 -279.5 95.5t-114.5 273.5q-24 -4 -46.5 -5.5t-43.5 -1.5q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5 q91 -100 139.5 -245t48.5 -329q0 -273 -111.5 -460t-299.5 -262q4 -114 54 -177t182 -63q41 0 97.5 12.5t80.5 22.5h27v-182zM1292 744q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1432 0h-257l-498 592h-279v-592h-198v1489h417q135 0 225 -17.5t162 -62.5q81 -51 126.5 -128.5t45.5 -196.5q0 -161 -81 -269.5t-223 -163.5zM969 1070q0 64 -22.5 113.5t-74.5 83.5q-43 29 -102 40.5t-139 11.5h-233v-562h200q94 0 164 16.5t119 61.5q45 42 66.5 96.5 t21.5 138.5z',\n            'M1282 425q0 -87 -40.5 -172t-113.5 -144q-80 -64 -186.5 -100t-256.5 -36q-161 0 -289.5 30t-261.5 89v248h14q113 -94 261 -145t278 -51q184 0 286.5 69t102.5 184q0 99 -48.5 146t-147.5 73q-75 20 -162.5 33t-185.5 33q-198 42 -293.5 143.5t-95.5 264.5 q0 187 158 306.5t401 119.5q157 0 288 -30t232 -74v-234h-14q-85 72 -223.5 119.5t-283.5 47.5q-159 0 -255.5 -66t-96.5 -170q0 -93 48 -146t169 -81q64 -14 182 -34t200 -41q166 -44 250 -133t84 -249z',\n            'M1262 1313h-532v-1313h-198v1313h-532v176h1262v-176z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891z',\n            'M1374 1489l-542 -1489h-264l-542 1489h212l467 -1310l467 1310h202z',\n            'M1933 1489l-387 -1489h-223l-313 1236l-306 -1236h-218l-394 1489h203l313 -1238l308 1238h201l311 -1250l311 1250h194z',\n            'M1336 1489l-514 -736l513 -753h-229l-406 613l-416 -613h-216l519 744l-507 745h228l401 -605l410 605h217z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211z',\n            'M1288 0h-1162v184l913 1129h-879v176h1106v-179l-922 -1134h944v-176z',\n            'M759 -392h-520v1948h520v-143h-346v-1662h346v-143z',\n            'M960 -304h-173l-717 1860h176z',\n            'M691 -392h-520v143h346v1662h-346v143h520v-1948z',\n            'M1490 684h-198l-455 627l-454 -629h-197l589 807h126z',\n            'M1306 -300h-1310v120h1310v-120z',\n            'M762 1302h-149l-273 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5z',\n            'M1168 567q0 -140 -39.5 -252t-106.5 -188q-71 -79 -156 -118.5t-187 -39.5q-95 0 -166 22.5t-140 60.5l-12 -52h-176v1556h188v-556q79 65 168 106.5t200 41.5q198 0 312.5 -152t114.5 -429zM974 562q0 200 -66 303.5t-213 103.5q-82 0 -166 -35.5t-156 -91.5v-640 q80 -36 137.5 -50t130.5 -14q156 0 244.5 102.5t88.5 321.5z',\n            'M1011 70q-94 -45 -178.5 -70t-179.5 -25q-121 0 -222 35.5t-173 107.5q-73 72 -113 182t-40 257q0 274 150.5 430t397.5 156q96 0 188.5 -27t169.5 -66v-209h-10q-86 67 -177.5 103t-178.5 36q-160 0 -252.5 -107.5t-92.5 -315.5q0 -202 90.5 -310.5t254.5 -108.5 q57 0 116 15t106 39q41 21 77 44.5t57 40.5h10v-207z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -18.5t143 -57.5v484h188v-1556zM903 275v641q-76 34 -136 47t-131 13q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640z',\n            'M786 1374h-10q-31 9 -81 18.5t-88 9.5q-121 0 -175.5 -53.5t-54.5 -193.5v-38h339v-158h-333v-959h-188v959h-127v158h127v37q0 199 99 305.5t286 106.5q63 0 113.5 -6t92.5 -14v-172z',\n            'M1091 127q0 -284 -129 -417t-397 -133q-89 0 -173.5 12.5t-166.5 35.5v192h10q46 -18 146 -44.5t200 -26.5q96 0 159 23t98 64q35 39 50 94t15 123v102q-85 -68 -162.5 -101.5t-197.5 -33.5q-200 0 -317.5 144.5t-117.5 407.5q0 144 40.5 248.5t110.5 180.5 q65 71 158 110.5t185 39.5q97 0 162.5 -19.5t138.5 -59.5l12 48h176v-990zM903 307v609q-75 34 -139.5 48.5t-128.5 14.5q-155 0 -244 -104t-89 -302q0 -188 66 -285t219 -97q82 0 164.5 31.5t151.5 84.5z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1556h188v-563q88 73 182 114t193 41q181 0 276 -109t95 -314v-725z',\n            'M387 1304h-212v195h212v-195zM375 0h-188v1117h188v-1117z',\n            'M533 1304h-212v195h212v-195zM521 -27q0 -196 -100 -296t-268 -100q-40 0 -105.5 8t-109.5 20v179h10q28 -11 75.5 -25t92.5 -14q72 0 116 20t66 60t28.5 96.5t6.5 137.5v900h-233v158h421v-1144z',\n            'M1199 0h-248l-448 489l-122 -116v-373h-188v1556h188v-998l543 559h237l-519 -516z',\n            'M375 0h-188v1556h188v-1556z',\n            'M1815 0h-188v636q0 72 -6.5 139t-27.5 107q-23 43 -66 65t-124 22q-79 0 -158 -39.5t-158 -100.5q3 -23 5 -53.5t2 -60.5v-715h-188v636q0 74 -6.5 140.5t-27.5 106.5q-23 43 -66 64.5t-124 21.5q-77 0 -154.5 -38t-154.5 -97v-834h-188v1117h188v-124q88 73 175.5 114 t186.5 41q114 0 193.5 -48t118.5 -133q114 96 208 138.5t201 42.5q184 0 271.5 -111.5t87.5 -311.5v-725z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-725z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z',\n            'M1168 572q0 -136 -39 -248.5t-110 -190.5q-66 -74 -155.5 -114.5t-189.5 -40.5q-87 0 -157.5 19t-143.5 59v-468h-188v1529h188v-117q75 63 168.5 105.5t199.5 42.5q202 0 314.5 -152.5t112.5 -423.5zM974 567q0 202 -69 302t-212 100q-81 0 -163 -35t-157 -92v-633 q80 -36 137.5 -49t130.5 -13q157 0 245 106t88 314z',\n            'M1091 -412h-188v538q-87 -75 -173 -111.5t-186 -36.5q-199 0 -317.5 153.5t-118.5 423.5q0 144 41.5 254.5t109.5 185.5q66 73 155 113t188 40q90 0 159.5 -20t141.5 -59l12 48h176v-1529zM903 284v632q-78 35 -138 49t-130 14q-163 0 -248 -110.5t-85 -304.5 q0 -196 68.5 -301.5t215.5 -105.5q82 0 164 35.5t153 91.5z',\n            'M882 912h-10q-42 10 -81.5 14.5t-93.5 4.5q-87 0 -168 -38.5t-156 -99.5v-793h-188v1117h188v-165q112 90 197.5 127.5t174.5 37.5q49 0 71 -2.5t66 -9.5v-193z',\n            'M983 322q0 -153 -126.5 -251t-345.5 -98q-124 0 -227.5 29.5t-173.5 64.5v211h10q89 -67 198 -106.5t209 -39.5q124 0 194 40t70 126q0 66 -38 100t-146 58q-40 9 -104.5 21t-117.5 26q-147 39 -208.5 114.5t-61.5 185.5q0 69 28.5 130t86.5 109q56 47 142.5 74.5 t193.5 27.5q100 0 202.5 -24.5t170.5 -59.5v-201h-10q-72 53 -175 89.5t-202 36.5q-103 0 -174 -39.5t-71 -117.5q0 -69 43 -104q42 -35 136 -57q52 -12 116.5 -24t107.5 -22q131 -30 202 -103q71 -74 71 -196z',\n            'M765 10q-53 -14 -115.5 -23t-111.5 -9q-171 0 -260 92t-89 295v594h-127v158h127v321h188v-321h388v-158h-388v-509q0 -88 4 -137.5t28 -92.5q22 -40 60.5 -58.5t117.5 -18.5q46 0 96 13.5t72 22.5h10v-169z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117z',\n            'M1151 1117l-452 -1117h-189l-449 1117h204l346 -889l343 889h197z',\n            'M1590 1117l-291 -1117h-174l-287 861l-285 -861h-173l-294 1117h196l205 -865l279 865h155l286 -865l194 865h189z',\n            'M1152 0h-237l-317 429l-319 -429h-219l436 557l-432 560h237l315 -422l316 422h220l-439 -550z',\n            'M1151 1117l-652 -1529h-201l208 466l-445 1063h204l343 -828l346 828h197z',\n            'M995 0h-902v139l651 821h-637v157h871v-134l-654 -824h671v-159z',\n            'M1113 -392h-150q-179 0 -290.5 99.5t-111.5 287.5v149q0 169 -83 264.5t-254 95.5h-51v156h51q171 0 254 95.5t83 264.5v149q0 188 111.5 287.5t290.5 99.5h150v-138h-114q-136 0 -197.5 -63t-61.5 -203v-175q0 -139 -77 -233.5t-214 -149.5v-24q137 -55 214 -149.5 t77 -233.5v-175q0 -140 61.5 -203t197.5 -63h114v-138z',\n            'M552 -392h-174v1948h174v-1948z',\n            'M1127 504h-51q-171 0 -254 -95.5t-83 -264.5v-149q0 -188 -111.5 -287.5t-290.5 -99.5h-150v138h114q136 0 197.5 63t61.5 203v175q0 139 77 233.5t214 149.5v24q-137 55 -214 149.5t-77 233.5v175q0 140 -61.5 203t-197.5 63h-114v138h150q179 0 290.5 -99.5 t111.5 -287.5v-149q0 -169 83 -264.5t254 -95.5h51v-156z',\n            'M1489 927q-2 -99 -22.5 -195t-65.5 -171q-46 -77 -111 -121t-165 -44q-94 0 -167 39.5t-157 141.5q-102 125 -148 157t-96 32q-94 0 -144 -87.5t-59 -283.5h-167q2 100 22.5 194.5t64.5 171.5q43 74 112 119.5t165 45.5q93 0 166.5 -38.5t158.5 -142.5q80 -98 131 -143.5 t112 -45.5q103 0 151.5 101t51.5 270h167z',\n            '',\n            'M505 1278h-204v211h204v-211zM515 0h-224l26 1079h170z',\n            'M1120 74q-71 -30 -161 -53.5t-194 -26.5v-355h-118v359q-227 21 -357.5 165t-130.5 394q0 242 133.5 391.5t354.5 171.5v355h118v-351q104 -3 197 -25t158 -53v-203h-11q-55 44 -142 85t-202 50v-839q120 10 206.5 52.5t137.5 83.5h11v-201zM647 142v834 q-135 -20 -216 -125t-81 -294q0 -181 76 -286t221 -129z',\n            'M1163 0h-1026v207q118 32 169.5 126.5t51.5 279.5h-176v138h176v310q0 200 126.5 328.5t331.5 128.5q105 0 181 -17t140 -34v-206h-10q-62 42 -138 66t-162 24q-140 0 -209.5 -82.5t-69.5 -226.5v-291h415v-138h-415v-61q0 -126 -62 -219.5t-160 -150.5v-11h837v-171z ',\n            'M1168 257l-110 -110l-236 234q-44 -26 -81 -37t-89 -11q-46 0 -89.5 12.5t-79.5 35.5l-236 -236l-109 113l233 234q-23 37 -35 81.5t-12 87.5q0 52 11 88.5t37 79.5l-234 237l111 110l235 -235q36 23 79.5 35.5t88.5 12.5q44 0 88 -12t81 -35l234 234l113 -109l-235 -237 q24 -38 36 -79.5t12 -89.5q0 -45 -12.5 -89t-35.5 -80zM832 661q0 73 -52.5 129t-127.5 56q-73 0 -126.5 -55t-53.5 -130q0 -74 52.5 -129.5t127.5 -55.5q73 0 126.5 54.5t53.5 130.5z',\n            'M1191 1489l-448 -831v-94h372v-138h-370v-426h-188v426h-370v138h372v73l-451 852h212l332 -659l336 659h203z',\n            'M552 758h-174v798h174v-798zM552 -392h-174v798h174v-798z',\n            'M1128 601q0 -106 -59 -187t-158 -136v-7q97 -46 141 -118.5t44 -162.5q0 -77 -33 -146t-98 -119q-72 -56 -169 -83t-221 -27q-87 0 -170.5 13.5t-175.5 44.5v194h10q79 -37 169 -62t198 -25q134 0 215 48.5t81 135.5q0 56 -19.5 88.5t-64.5 57.5q-41 23 -113 41.5 t-154 38.5q-214 52 -296 133q-83 81 -83 210q0 98 57 182.5t159 141.5v7q-101 48 -143 121t-42 162q0 81 32 146.5t99 117.5q64 50 163.5 79t227.5 29q87 0 171 -14t175 -43v-194h-10q-58 27 -152.5 57t-215.5 30q-127 0 -211.5 -46t-84.5 -133q0 -57 21.5 -92.5t64.5 -58.5 t109 -41.5t157 -39.5q200 -46 290 -125q89 -79 89 -218zM881 399q28 33 43 65.5t15 90.5q0 51 -16.5 86t-45.5 58q-28 24 -67 39.5t-83 27.5q-39 11 -85.5 21.5t-116.5 30.5q-18 -9 -49 -31.5t-53 -46.5q-24 -26 -43 -69t-19 -92q0 -50 15.5 -85t44.5 -59q27 -23 67.5 -39 t84.5 -27q38 -10 86 -22t115 -31q20 11 53 34.5t54 48.5z',\n            'M958 1304h-199v195h199v-195zM545 1304h-199v195h199v-195z',\n            'M1889 655q0 -358 -253.5 -611.5t-611.5 -253.5t-611.5 253.5t-253.5 611.5t253.5 611.5t611.5 253.5t611.5 -253.5t253.5 -611.5zM1773 655q0 310 -219.5 532t-529.5 222t-529.5 -222t-219.5 -532t219.5 -532t529.5 -222t529.5 222t219.5 532zM1375 258 q-86 -39 -165.5 -58.5t-157.5 -19.5q-227 0 -359 123t-132 357q0 225 134.5 354t356.5 129q89 0 175 -24t148 -52v-181h-16q-54 40 -138.5 75t-173.5 35q-142 0 -221.5 -85.5t-79.5 -250.5q0 -159 76.5 -246t224.5 -87q83 0 161.5 29t150.5 81h16v-179z',\n            'M944 554h-170v94q-28 -20 -52.5 -38.5t-68.5 -37.5q-45 -20 -85.5 -30.5t-113.5 -10.5q-128 0 -215.5 85t-87.5 217q0 106 46.5 173.5t123.5 103.5q78 36 197.5 51.5t255.5 21.5v18q0 53 -18 85t-51 51q-34 18 -77.5 23t-91.5 5q-84 0 -168 -24t-123 -38h-14v172 q45 13 137 29t169 16q217 0 312 -84.5t95 -243.5v-638zM774 796v245q-69 -4 -160.5 -12t-145.5 -23q-64 -18 -103 -56.5t-39 -106.5q0 -76 45.5 -114t139.5 -38q82 0 147.5 33.5t115.5 71.5z',\n            'M1146 191l-528 419v85l528 418v-188l-357 -273l357 -273v-188zM716 162l-550 446v89l550 445v-196l-371 -294l371 -294v-196z',\n            'M1456 57h-171v545h-1075v160h1246v-705z',\n            'M777 561h-624v181h624v-181z',\n            'M1889 655q0 -358 -253.5 -611.5t-611.5 -253.5t-611.5 253.5t-253.5 611.5t253.5 611.5t611.5 253.5t611.5 -253.5t253.5 -611.5zM1773 655q0 310 -219.5 532t-529.5 222t-529.5 -222t-219.5 -532t219.5 -532t529.5 -222t529.5 222t219.5 532zM1581 215h-223l-331 355 h-162v-355h-165v915h312q94 0 155 -8t120 -39q63 -34 92.5 -82.5t29.5 -121.5q0 -97 -56.5 -161.5t-155.5 -102.5zM1229 868q0 36 -14 64t-47 46q-31 17 -66 22t-88 5h-149v-309h127q62 0 107 9.5t74 32.5q31 25 43.5 55t12.5 75z',\n            'M1306 1668h-1305l-5 120h1310v-120z',\n            'M956 1116q0 -168 -116 -284t-285 -116t-285 115.5t-116 284.5q0 168 116 284t285 116q170 0 285.5 -116t115.5 -284zM791 1116q0 102 -67 171.5t-169 69.5t-169 -69.5t-67 -171.5q0 -104 68.5 -172.5t167.5 -68.5q102 0 169 70t67 171z',\n            'M1461 179h-1246v158h540v422h-540v158h540v545h166v-545h540v-158h-540v-422h540v-158z',\n            'M967 566h-760v156q100 62 183.5 117t134.5 96q131 103 168 154.5t37 135.5q0 69 -53.5 107t-143.5 38q-89 0 -175 -30.5t-134 -61.5h-13v180q71 26 158.5 43.5t174.5 17.5q180 0 273.5 -78.5t93.5 -203.5q0 -99 -48.5 -174.5t-163.5 -165.5q-55 -43 -132.5 -94 t-143.5 -92h544v-145z',\n            'M956 817q0 -75 -33 -131.5t-89 -90.5q-57 -35 -131 -51.5t-163 -16.5q-94 0 -176.5 15t-156.5 43v179h14q41 -36 138.5 -65.5t190.5 -29.5q100 0 166.5 35.5t66.5 110.5q0 85 -59 115t-171 30h-143v141h128q112 0 165.5 38.5t53.5 106.5q0 61 -49.5 96.5t-153.5 35.5 q-77 0 -174.5 -31t-141.5 -67h-14v178q74 27 160.5 44.5t176.5 17.5q175 0 271.5 -68t96.5 -174q0 -89 -55 -146t-144 -83v-8q95 -17 160.5 -72.5t65.5 -151.5z',\n            'M963 1676l-273 -374h-149l179 374h243z',\n            'M1124 0h-178l-10 118q-59 -65 -123.5 -102t-155.5 -37q-86 0 -149.5 35t-129.5 99v-525h-188v1529h188v-838q32 -39 109.5 -80t168.5 -41q93 0 159.5 33.5t120.5 93.5v832h188v-1117z',\n            'M1106 -363h-148v1722h-214v-1722h-149v956q-206 5 -332 129t-126 328q0 207 130 323t373 116h466v-1852z',\n            'M492 511h-239v283h239v-283z',\n            'M880 -89q0 -162 -91.5 -248t-237.5 -86q-37 0 -95 7t-103 19v160h9q26 -10 70 -23t94 -13q104 0 153 39t49 127q0 29 -3 65.5t-6 61.5h153q2 -19 5 -45t3 -64z',\n            'M914 566h-615v122h234v568h-242v112q45 0 99 6.5t84 18.5q37 16 59 38t25 62h135v-805h221v-122z',\n            'M996 1025q0 -235 -122 -364.5t-315 -129.5q-201 0 -319.5 132.5t-118.5 361.5t118.5 362t319.5 133q193 0 315 -130t122 -365zM814 1025q0 172 -67.5 258t-187.5 86q-122 0 -189 -87t-67 -257t67 -256.5t189 -86.5q120 0 187.5 85.5t67.5 257.5z',\n            'M1154 608l-550 -446v196l371 294l-371 294v196l550 -445v-89zM702 610l-528 -419v188l357 273l-357 273v188l528 -418v-85z',\n            'M545 565h-165v681h-209v117q102 0 165 22t72 108h137v-928zM1410 1489l-780 -1489h-165l780 1489h165zM1857 220h-163v-220h-150v220h-465v185l466 539h149v-591h163v-133zM1548 353v400l-353 -400h353z',\n            'M545 565h-165v681h-209v117q102 0 165 22t72 108h137v-928zM1410 1489l-780 -1489h-165l780 1489h165zM1955 0h-688v148q91 69 158 121t106 89q109 103 141 157.5t32 136.5q0 70 -44 107t-120 37q-70 0 -141.5 -30t-112.5 -62h-15v179q65 27 140.5 44t152.5 17 q157 0 241.5 -79t84.5 -201q0 -93 -41 -167t-147 -168q-49 -43 -119.5 -96t-125.5 -94h498v-139z',\n            'M793 826q0 -71 -30 -127t-78 -90q-53 -37 -114.5 -53t-140.5 -16q-82 0 -153.5 15t-136.5 43v175h17q37 -35 114 -64.5t156 -29.5q84 0 139 36.5t55 108.5q0 83 -50 112.5t-141 29.5h-140v139h125q87 0 134.5 38t47.5 104q0 60 -41 95.5t-128 35.5q-66 0 -142.5 -31 t-113.5 -66h-17v175q64 27 139 44t154 17q152 0 237 -70t85 -168q0 -87 -48.5 -143.5t-125.5 -82.5v-8q80 -16 138.5 -70.5t58.5 -148.5zM1500 1489l-780 -1489h-165l780 1489h165zM1913 220h-163v-220h-150v220h-465v185l466 539h149v-591h163v-133zM1604 353v400 l-353 -400h353z',\n            'M712 1278h-204v211h204v-211zM958 40q-83 -30 -176 -50t-205 -20q-215 0 -339.5 104.5t-124.5 275.5q0 98 34.5 173t93.5 137q58 62 136.5 112.5t146.5 91.5v225h179v-305q-60 -33 -139 -81.5t-125 -88.5q-54 -47 -88 -109t-34 -140q0 -113 76.5 -168.5t197.5 -55.5 q103 0 201.5 33t155.5 70h10v-204z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM862 1675h-149l-273 374h243z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM955 2049l-273 -374h-149l179 374h243z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1033 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1119 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5 t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1005 1677h-199v195h199v-195zM592 1677h-199v195h199v-195z',\n            'M1374 0h-211l-148 415h-640l-148 -415h-201l519 1407q-89 44 -142.5 123.5t-53.5 181.5q0 143 102 240t248 97q147 0 248.5 -97t101.5 -240q0 -100 -52.5 -181.5t-141.5 -123.5zM899 1710q0 86 -57 143.5t-143 57.5t-143 -58t-57 -143q0 -86 57.5 -143.5t142.5 -57.5 q86 0 143 57.5t57 143.5zM953 585l-258 715l-259 -715h517z',\n            'M1901 0h-944v556h-524l-212 -556h-207l594 1489h1293v-176h-749v-408h749v-176h-749v-553h749v-176zM957 723v601h-219l-239 -601h458z',\n            'M1350 108q-55 -24 -99.5 -45t-116.5 -44q-11 -3 -24 -7.5t-31 -7.5q2 -19 3.5 -44.5t1.5 -48.5q0 -162 -93.5 -248t-240.5 -86q-38 0 -97.5 7t-104.5 19v162h9q26 -10 71.5 -24t95.5 -14q106 0 155 40t49 126q0 19 -1 41.5t-3 42.5q-19 -2 -40.5 -3t-39.5 -1 q-162 0 -294.5 45.5t-230.5 142.5q-96 95 -150 241.5t-54 340.5q0 184 52 329t150 245q95 97 229.5 148t298.5 51q120 0 239.5 -29t265.5 -102v-235h-15q-123 103 -244 150t-259 47q-113 0 -203.5 -36.5t-161.5 -113.5q-69 -75 -107.5 -189.5t-38.5 -264.5q0 -157 42.5 -270 t109.5 -184q70 -74 163.5 -109.5t197.5 -35.5q143 0 268 49t234 147h14v-232z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM822 1675h-149l-273 374h243z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM993 2049l-273 -374h-149l179 374h243z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM1031 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM1038 1677h-199v195h199v-195zM625 1677h-199v195h199v-195z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM568 1675h-149l-273 374h243z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM725 2049l-273 -374h-149l179 374h243z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM776 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM738 1677h-199v195h199v-195zM325 1677h-199v195h199v-195z',\n            'M1468 743q0 -203 -88.5 -368t-235.5 -256q-102 -63 -227.5 -91t-330.5 -28h-376v740h-196v143h196v606h372q218 0 347 -31.5t217 -86.5q152 -95 237 -253t85 -375zM1261 746q0 175 -61 295t-182 189q-88 50 -187 69.5t-237 19.5h-188v-436h361v-143h-361v-570h188 q143 0 249.5 21t195.5 78q111 71 166.5 187t55.5 290z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489zM1208 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5 q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM932 1675h-149l-273 374h243z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1083 2049l-273 -374h-149l179 374h243z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1136 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1207 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228 t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1307 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1289 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1108 1677h-199v195h199v-195zM695 1677h-199v195h199v-195z',\n            'M1385 216l-111 -111l-436 440l-436 -440l-111 111l440 436l-440 436l111 111l436 -440l436 440l111 -111l-440 -436z',\n            'M1498 744q0 -184 -49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-115 0 -215.5 29t-179.5 84l-159 -228h-132l205 294q-101 100 -155.5 250t-54.5 346q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q118 0 215 -27.5t179 -82.5l142 201h132 l-188 -268q101 -100 156.5 -248.5t55.5 -350.5zM1097 1260q-57 46 -129 68.5t-161 22.5q-110 0 -200 -38.5t-156 -116.5q-64 -76 -98.5 -190.5t-34.5 -261.5q0 -140 29.5 -252t87.5 -188zM1295 744q0 139 -30 253t-88 189l-664 -957q60 -45 132.5 -68t161.5 -23 q110 0 201.5 40t153.5 116q67 82 100 194.5t33 255.5z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM932 1675h-149l-273 374h243z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1073 2049l-273 -374h-149l179 374h243z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1084 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1056 1677h-199v195h199v-195zM643 1677h-199v195h199v-195z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM935 2049l-273 -374h-149l179 374h243z',\n            'M1174 787q0 -92 -35 -176.5t-95 -141.5q-78 -75 -187.5 -111t-260.5 -36h-198v-322h-198v1489h198v-270h205q133 0 230 -22.5t164 -66.5q83 -53 130 -138t47 -205zM968 782q0 72 -26 125.5t-82 88.5q-48 30 -112 42.5t-154 12.5h-196v-563h167q119 0 195 20.5t123 65.5 q44 41 64.5 92t20.5 116z',\n            'M1165 481q0 -214 -135.5 -359.5t-354.5 -145.5q-44 0 -101.5 7.5t-93.5 20.5v165h10q42 -24 91.5 -33t105.5 -9q74 0 129 29t88 78q35 52 50.5 115.5t15.5 139.5q0 166 -105.5 250.5t-303.5 84.5v150q157 0 234 59.5t77 188.5q0 35 -11 68t-41 64q-27 29 -71 46.5 t-105 17.5q-57 0 -103 -14.5t-86 -53.5q-37 -36 -59.5 -102t-22.5 -161v-1087h-188v1080q0 124 36 215.5t100 153.5q60 58 149.5 87.5t183.5 29.5q183 0 297.5 -87t114.5 -238q0 -112 -71 -201t-184 -121v-9q164 -37 259 -148.5t95 -280.5z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM738 1302h-149l-273 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM934 1676l-273 -374h-149l179 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM961 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM1038 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5 q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM926 1304h-199v195h199v-195zM513 1304h-199v195h199v-195z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM956 1630q0 -143 -102 -242t-248 -99q-144 0 -247 98.5t-103 242.5 q0 143 102 241t248 98q147 0 248.5 -98t101.5 -241zM811 1630q0 86 -58.5 145.5t-146.5 59.5t-146.5 -59t-58.5 -146t59 -146t146 -59q88 0 146.5 59t58.5 146z',\n            'M1855 559h-819q0 -114 30 -195t85 -133q52 -48 123 -70.5t157 -22.5q111 0 217.5 41.5t172.5 93.5h12v-205q-78 -35 -184.5 -64.5t-215.5 -29.5q-166 0 -284.5 52t-194.5 155q-21 -19 -67 -59t-96 -68q-63 -36 -137 -59.5t-189 -23.5q-150 0 -255.5 97t-105.5 249 q0 124 54 200.5t155 118.5q95 39 241 53t308 17v61q0 65 -23 107.5t-64 65.5q-40 23 -96 31.5t-116 8.5q-79 0 -168.5 -21t-179.5 -57h-13v191q55 15 158 34t204 19q159 0 264.5 -46.5t162.5 -137.5q69 82 170 134t226 52q217 0 342.5 -128t125.5 -379v-82zM1673 703 q-5 68 -23.5 119t-50.5 88q-34 39 -88.5 61t-133.5 22q-133 0 -223 -75t-115 -215h634zM894 298q-20 53 -30.5 119t-10.5 141q-105 -3 -201 -7.5t-178 -25.5q-79 -20 -127.5 -65.5t-48.5 -128.5q0 -95 58 -141t176 -46q99 0 195.5 43t166.5 111z',\n            'M1011 70q-33 -15 -71.5 -30.5t-67.5 -24.5q3 -19 5.5 -47.5t2.5 -56.5q0 -162 -91.5 -248t-237.5 -86q-37 0 -95 7t-103 19v160h9q26 -10 70 -23t94 -13q104 0 153 39t49 127q0 22 -1.5 45t-3.5 43q-16 -2 -30.5 -4t-39.5 -2q-121 0 -222 35.5t-173 107.5 q-73 72 -113 182t-40 257q0 274 150.5 430t397.5 156q96 0 188.5 -27t169.5 -66v-209h-10q-86 67 -177.5 103t-178.5 36q-160 0 -252.5 -107.5t-92.5 -315.5q0 -202 90.5 -310.5t254.5 -108.5q57 0 116 15t106 39q41 21 77 44.5t57 40.5h10v-207z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM759 1302h-149l-273 374h243z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM960 1676l-273 -374h-149l179 374h243z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM986 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM951 1304h-199v195h199v-195zM538 1304h-199v195h199v-195z',\n            'M375 0h-188v1117h188v-1117zM401 1302h-149l-273 374h243z',\n            'M375 0h-188v1117h188v-1117zM582 1676l-273 -374h-149l179 374h243z',\n            'M572 1297h-151l-143 267l-142 -267h-147l178 379h227zM375 0h-188v1117h188v-1117z',\n            'M557 1304h-189v195h189v-195zM194 1304h-189v195h189v-195zM375 0h-188v1117h188v-1117z',\n            'M1137 637q0 -324 -142 -496t-383 -172q-229 0 -367.5 135t-138.5 380q0 226 137 358t339 132q108 0 185.5 -26.5t163.5 -79.5q-32 112 -99.5 219t-154.5 181l-264 -162l-66 97l237 142q-84 67 -156 107.5t-165 87.5v16h295q35 -25 84 -58.5t86 -59.5l210 128l66 -97 l-186 -109q153 -147 236 -325.5t83 -397.5zM847 226q49 59 75 143.5t26 234.5q0 32 -1.5 59.5t-3.5 57.5q-75 45 -157.5 66.5t-168.5 21.5q-147 0 -231.5 -87.5t-84.5 -239.5q0 -180 84.5 -267t227.5 -87q66 0 127.5 22t106.5 76z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-725zM1075 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5 t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M732 1302h-149l-273 374h243z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M933 1676l-273 -374h-149l179 374h243z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M963 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M1038 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M928 1304h-199v195h199v-195zM515 1304h-199v195h199v-195z',\n            'M957 1022h-238v275h238v-275zM1466 572h-1256v160h1256v-160zM957 7h-238v275h238v-275z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-84 0 -155.5 21t-130.5 60l-133 -198h-110l171 256q-75 77 -116.5 190t-41.5 260q0 273 139.5 431.5t376.5 158.5q87 0 158 -22t125 -57l116 172h111l-155 -231q76 -76 118 -188t42 -264zM813 930q-37 29 -86.5 43.5t-104.5 14.5 q-155 0 -240 -110t-85 -320q0 -97 17 -171t52 -128zM946 558q0 97 -17.5 173t-51.5 130l-448 -671q39 -31 86.5 -46t106.5 -15q150 0 237 108.5t87 320.5z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM764 1302h-149l-273 374h243z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM945 1676l-273 -374h-149l179 374h243z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM985 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM955 1304h-199v195h199v-195zM542 1304h-199v195h199v-195z',\n            'M1151 1117l-652 -1529h-201l208 466l-445 1063h204l343 -828l346 828h197zM928 1676l-273 -374h-149l179 374h243z',\n            'M1168 572q0 -136 -39 -248.5t-110 -190.5q-66 -74 -155.5 -114.5t-189.5 -40.5q-87 0 -157.5 19t-143.5 59v-468h-188v1968h188v-556q75 63 168.5 105.5t199.5 42.5q202 0 314.5 -152.5t112.5 -423.5zM974 567q0 202 -69 302t-212 100q-81 0 -163 -35t-157 -92v-633 q80 -36 137.5 -49t130.5 -13q157 0 245 106t88 314z',\n            'M585 832h-239v285h239v-285zM658 285l-282 -655h-146l174 655h254z',\n            'M773 1676l-49 -384h-145l-49 384h243z',\n            'M765 1676l-49 -384h-128l-49 384h226zM1048 1304h-191v195h191v-195zM447 1304h-191v195h191v-195z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM250 1489l-49 -384h-145l-49 384h243z',\n            'M585 832h-239v285h239v-285z',\n            'M1424 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1582 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489zM243 1489l-49 -384h-145l-49 384h243z',\n            'M968 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1501 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1483 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1537 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1751 0h-576v387q60 38 119.5 82t103.5 101q45 59 71 138.5t26 185.5q0 206 -127 330.5t-347 124.5t-347 -124.5t-127 -330.5q0 -106 26 -185.5t71 -138.5q45 -57 104 -101t119 -82v-387h-576v174h410v124q-157 90 -258.5 246t-101.5 350q0 276 187.5 451t492.5 175 t492.5 -175t187.5 -451q0 -194 -101.5 -350t-258.5 -246v-124h410v-174zM243 1489l-49 -384h-145l-49 384h243z',\n            'M375 0h-188v1117h188v-1117zM379 1676l-56 -384h-84l-56 384h196zM615 1304h-171v195h171v-195zM118 1304h-171v195h171v-195z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523z',\n            'M1323 458q0 -111 -42 -196t-113 -140q-84 -66 -184.5 -94t-255.5 -28h-528v1489h441q163 0 244 -12t155 -50q82 -43 119 -110.5t37 -161.5q0 -106 -54 -180.5t-144 -119.5v-8q151 -31 238 -132.5t87 -256.5zM990 1129q0 54 -18 91t-58 60q-47 27 -114 33.5t-166 6.5h-236 v-430h256q93 0 148 9.5t102 39.5t66.5 77.5t19.5 112.5zM1117 450q0 90 -27 143t-98 90q-48 25 -116.5 32.5t-166.5 7.5h-311v-554h262q130 0 213 13.5t136 49.5q56 39 82 89t26 129z',\n            'M1162 1313h-764v-1313h-198v1489h962v-176z',\n            'M1414 0h-1388l562 1489h264zM1147 168l-432 1147l-431 -1147h863z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176z',\n            'M1288 0h-1162v184l913 1129h-879v176h1106v-179l-922 -1134h944v-176z',\n            'M1339 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1120 713h-627v179h627v-179z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152z',\n            'M1397 0h-257l-589 663l-148 -158v-505h-198v1489h198v-777l723 777h240l-665 -700z',\n            'M1378 0h-213l-468 1285l-468 -1285h-203l556 1489h240z',\n            'M1526 0h-198v1283l-414 -873h-118l-411 873v-1283h-185v1489h270l397 -829l384 829h275v-1489z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489z',\n            'M1215 1313h-1101v176h1101v-176zM1163 729h-997v176h997v-176zM1215 0h-1101v176h1101v-176z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1339 0h-198v1313h-743v-1313h-198v1489h1139v-1489z',\n            'M1174 1039q0 -99 -34.5 -183.5t-96.5 -146.5q-77 -77 -182 -115.5t-265 -38.5h-198v-555h-198v1489h404q134 0 227 -22.5t165 -70.5q85 -57 131.5 -142t46.5 -215zM968 1034q0 77 -27 134t-82 93q-48 31 -109.5 44.5t-155.5 13.5h-196v-595h167q120 0 195 21.5t122 68.5 q47 48 66.5 101t19.5 119z',\n            'M1280 0h-1162v184l620 600l-600 526v179h1096v-176h-832l586 -506v-26l-630 -605h922v-176z',\n            'M1262 1313h-532v-1313h-198v1313h-532v176h1262v-176z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211z',\n            'M1572 755q0 -140 -44.5 -248.5t-123.5 -181.5q-85 -79 -207 -125.5t-260 -49.5v-166h-197v166q-134 3 -257 48t-210 127q-79 74 -123.5 182t-44.5 248q0 136 43 238t119 178q81 81 202.5 128t270.5 51v155h197v-155q148 -3 271 -52t202 -127q75 -73 118.5 -177t43.5 -239 zM1366 763q0 99 -32 182t-91 140q-58 56 -129 82t-177 28v-890q94 2 171 30.5t127 75.5q65 60 98 147t33 205zM740 305v890q-106 -1 -177 -28t-129 -82t-90.5 -140t-32.5 -182q0 -112 33.5 -203t97.5 -149q49 -45 126.5 -75t171.5 -31z',\n            'M1336 1489l-514 -736l513 -753h-229l-406 613l-416 -613h-216l519 744l-507 745h228l401 -605l410 605h217z',\n            'M1604 910q0 -157 -40.5 -264.5t-117.5 -174.5q-80 -69 -192.5 -104t-263.5 -45v-322h-197v322q-154 11 -267 47t-188 102q-78 69 -118.5 176t-40.5 263v579h198v-602q0 -109 29.5 -180t81.5 -115q53 -45 130 -68.5t175 -30.5v996h197v-996q97 8 175 30.5t131 68.5 q56 49 83 115.5t27 179.5v602h198v-579z',\n            'M1568 0h-576v387q60 38 119.5 82t103.5 101q45 59 71 138.5t26 185.5q0 206 -127 330.5t-347 124.5t-347 -124.5t-127 -330.5q0 -106 26 -185.5t71 -138.5q45 -57 104 -101t119 -82v-387h-576v174h410v124q-157 90 -258.5 246t-101.5 350q0 276 187.5 451t492.5 175 t492.5 -175t187.5 -451q0 -194 -101.5 -350t-258.5 -246v-124h410v-174z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM738 1677h-199v195h199v-195zM325 1677h-199v195h199v-195z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM939 1677h-199v195h199v-195zM526 1677h-199v195h199v-195z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -22t143 -61v52h188v-1117zM903 275v636q-76 34 -136 49.5t-131 15.5q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5zM743 1676l-49 -384h-145l-49 384h243z',\n            'M1006 64q-107 -48 -210 -69t-218 -21q-79 0 -161 16t-152 56q-69 39 -112.5 102.5t-43.5 157.5q0 96 56.5 168t177.5 110v7q-91 24 -145 90t-54 158q0 89 47.5 147.5t112.5 92.5q64 33 145 49t160 16q98 0 180 -16.5t172 -44.5v-207h-13q-66 51 -163.5 79t-197.5 28 q-45 0 -84 -5.5t-81 -25.5q-35 -15 -60.5 -48.5t-25.5 -77.5q0 -61 28 -95t76 -49q45 -14 97 -15.5t105 -1.5h111v-166h-158q-62 0 -112 -4.5t-92 -21.5q-41 -17 -65.5 -54t-24.5 -96q0 -53 26 -90t67 -58q37 -19 87.5 -29t106.5 -10q102 0 218 36t187 98h13v-206zM721 1676 l-49 -384h-145l-49 384h243z',\n            'M1119 -412h-188v1048q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-1137zM802 1676l-49 -384h-145l-49 384h243z',\n            'M375 0h-188v1117h188v-1117zM403 1676l-49 -384h-145l-49 384h243z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM760 1676l-49 -384h-128l-49 384h226zM1043 1304h-191 v195h191v-195zM442 1304h-191v195h191v-195z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -22t143 -61v52h188v-1117zM903 275v636q-76 34 -136 49.5t-131 15.5q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5z',\n            'M1165 444q0 -202 -134.5 -334t-339.5 -132q-79 0 -167 22t-151 64v-476h-188v1490q0 224 126.5 351t349.5 127q90 0 164.5 -21.5t133.5 -67.5q57 -43 91 -112t34 -160q0 -127 -69.5 -221.5t-196.5 -131.5v-17q159 -26 253 -125.5t94 -255.5zM971 449q0 89 -34.5 144.5 t-92.5 86.5q-59 32 -132 43t-146 11h-36v160h36q66 0 131 14.5t104 44.5q46 34 68.5 83t22.5 134q0 112 -69 170t-178 58q-73 0 -125 -26.5t-85 -70.5q-32 -44 -47 -102.5t-15 -120.5v-862q66 -38 141 -53.5t147 -15.5q149 0 229.5 78.5t80.5 223.5z',\n            'M1151 1117l-457 -1061v-468h-188v468l-445 1061h204l343 -828l346 828h197z',\n            'M1139 551q0 -272 -138.5 -427t-376.5 -155q-241 0 -379.5 151.5t-138.5 413.5q0 141 43 239.5t107 162.5q69 72 159 113t182 58q-76 63 -166 130.5t-192 139.5v179h810v-158h-561v-10q68 -46 179 -124t204 -162q150 -136 209 -261.5t59 -289.5zM945 551q0 135 -55 249 t-165 200q-66 -8 -138.5 -32t-138.5 -77q-63 -50 -105.5 -137t-42.5 -214q0 -201 85 -305t241 -104q153 0 236 105.5t83 314.5z',\n            'M1006 64q-107 -48 -210 -69t-218 -21q-79 0 -161 16t-152 56q-69 39 -112.5 102.5t-43.5 157.5q0 96 56.5 168t177.5 110v7q-91 24 -145 90t-54 158q0 89 47.5 147.5t112.5 92.5q64 33 145 49t160 16q98 0 180 -16.5t172 -44.5v-207h-13q-66 51 -163.5 79t-197.5 28 q-45 0 -84 -5.5t-81 -25.5q-35 -15 -60.5 -48.5t-25.5 -77.5q0 -61 28 -95t76 -49q45 -14 97 -15.5t105 -1.5h111v-166h-158q-62 0 -112 -4.5t-92 -21.5q-41 -17 -65.5 -54t-24.5 -96q0 -53 26 -90t67 -58q37 -19 87.5 -29t106.5 -10q102 0 218 36t187 98h13v-206z',\n            'M922 75q32 -40 46 -85.5t14 -85.5q0 -84 -45 -168.5t-112 -147.5h-179v14q90 79 128 138.5t38 128.5q0 57 -30.5 95t-77.5 38h-145q-229 0 -340 116t-111 345q0 140 46 268t124 247q75 112 173.5 214.5t206.5 196.5v9h-460v158h744v-135q-117 -78 -231.5 -181 t-204.5 -223q-89 -117 -146 -257t-57 -283q0 -34 3 -70t15 -76q10 -38 34.5 -75.5t63.5 -61.5q36 -22 96.5 -24.5t116.5 -2.5h86q71 0 122 -26t82 -66z',\n            'M1119 -412h-188v1048q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-1137z',\n            'M1141 768q0 -190 -23 -316.5t-59 -210.5q-58 -135 -163 -203.5t-257 -68.5t-257 68.5t-163 203.5q-37 84 -59.5 210.5t-22.5 316.5q0 174 22.5 305.5t60.5 214.5q57 130 162.5 199t256.5 69t256.5 -69t162.5 -199q37 -84 60 -215t23 -305zM952 858q-4 143 -28.5 250 t-56.5 161q-41 70 -95 98.5t-133 28.5t-133 -28.5t-95 -98.5q-34 -55 -57.5 -161.5t-27.5 -249.5h626zM952 697h-626q0 -142 23 -258.5t59 -178.5q40 -69 96 -100t135 -31t135 31t96 100q36 62 59 178.5t23 258.5z',\n            'M375 0h-188v1117h188v-1117z',\n            'M1192 0h-248l-451 489l-112 -109v-380h-188v1117h188v-550l384 417q72 79 135.5 107t126.5 28q28 0 58 -1t37 -1v-166h-11q-16 2 -39.5 3t-36.5 1q-47 0 -85.5 -23.5t-67.5 -56.5l-251 -271z',\n            'M1151 0h-205l-328 829l-361 -829h-196l465 1056l-215 500h211z',\n            'M1125 0h-186v118q-74 -78 -141.5 -108.5t-145.5 -30.5q-75 0 -135 27t-144 107v-525h-188v1529h188v-838q32 -39 111 -80t170 -41q93 0 161 33.5t122 93.5v832h188v-1117z',\n            'M1151 1117l-452 -1117h-189l-449 1117h204l346 -889l343 889h197z',\n            'M1041 -96q0 -85 -45.5 -169t-111.5 -147h-180v14q92 79 129.5 139t37.5 128q0 55 -29 94t-75 39h-140q-140 0 -232.5 27t-155.5 84q-66 60 -100.5 135.5t-34.5 163.5q0 78 25 144t73 119q44 49 112.5 83.5t144.5 53.5v11q-125 28 -200 110.5t-75 186.5q0 83 43.5 150.5 t133.5 125.5v6h-228v154h824v-158h-256q-68 0 -122.5 -14.5t-102.5 -48.5q-45 -32 -72 -83t-27 -118q0 -79 32.5 -128t83.5 -75q45 -23 104 -34t139 -11h170v-165h-295q-66 0 -118.5 -20t-99.5 -59q-43 -37 -68.5 -90t-25.5 -112q0 -102 37.5 -159t101.5 -82 q63 -25 139.5 -28.5t166.5 -3.5h28q68 0 119.5 -23.5t84.5 -60.5q31 -35 48 -82.5t17 -96.5z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z',\n            'M1120 0h-188v955h-559v-955h-188v1117h935v-1117z',\n            'M1172 577q0 -258 -138.5 -428.5t-360.5 -170.5q-65 0 -146.5 18t-153.5 61v-469h-188v1058q0 123 35.5 215.5t101.5 158.5q62 62 155.5 95t195.5 33q243 0 371 -147t128 -424zM978 565q0 218 -80 320t-226 102q-158 0 -228.5 -96t-70.5 -278v-403q73 -34 132.5 -48.5 t134.5 -14.5q162 0 250 111t88 307z',\n            'M1018 -96q0 -87 -47 -172t-109 -144h-177v14q86 75 124.5 135.5t38.5 131.5q0 54 -30 93.5t-75 39.5h-92q-117 0 -216 30t-174 97q-73 66 -114.5 170t-41.5 250q0 270 155.5 432t414.5 162q84 0 164 -18.5t147 -45.5v-211h-12q-94 62 -172.5 87t-146.5 25 q-166 0 -260.5 -119t-94.5 -312q0 -112 28.5 -183t78.5 -116q50 -44 114.5 -63.5t139.5 -19.5h100q115 0 186 -76.5t71 -186.5z',\n            'M1137 558q0 -281 -140.5 -435t-373.5 -154q-241 0 -379 158t-138 431q0 275 141 432.5t378 157.5q55 0 108 -11t82 -20h480v-165h-288q62 -73 96 -170t34 -224zM943 558q0 215 -82 322t-236 107q-161 0 -243 -112t-82 -317q0 -209 83.5 -318t239.5 -109q152 0 236 107.5 t84 319.5z',\n            'M1006 952h-404v-952h-188v952h-404v165h996v-165z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710z',\n            'M1514 576q0 -259 -171.5 -417t-440.5 -173v-398h-187v398q-130 6 -240.5 46.5t-191.5 109.5q-85 74 -132 172t-47 232q0 159 59 296t192 275h229v-17q-136 -99 -210 -232t-74 -300q0 -189 112.5 -304t301.5 -121v1000q33 2 70.5 2.5t76.5 0.5q304 0 478.5 -149.5 t174.5 -420.5zM1319 586q0 184 -112 293.5t-305 109.5v-846q206 10 311.5 126t105.5 317z',\n            'M1160 -412h-213l-346 619l-350 -619h-203l444 770l-433 759h213l335 -600l339 600h203l-433 -751z',\n            'M1507 446q0 -114 -48 -198t-127 -137q-82 -55 -182 -82.5t-215 -32.5v-408h-187v408q-115 6 -214.5 32t-182.5 83q-80 54 -127.5 137.5t-47.5 197.5v671h188v-612q0 -113 37.5 -180.5t89.5 -102.5q56 -38 123 -53t134 -19v967h187v-967q67 5 134 19t123 53 q59 40 93 101.5t34 181.5v612h188v-671z',\n            'M1553 503q0 -96 -23.5 -192.5t-74.5 -171.5q-55 -80 -133.5 -124.5t-193.5 -44.5q-96 0 -177 49.5t-118 116.5h-6q-39 -68 -113 -117t-176 -49q-113 0 -194.5 46.5t-132.5 122.5t-74.5 171.5t-23.5 192.5q0 170 57 308.5t201 305.5h228v-17q-135 -108 -214.5 -262 t-79.5 -337q0 -66 8 -122.5t38 -119.5q26 -55 72.5 -91.5t117.5 -36.5q51 0 86.5 12.5t55.5 29.5q22 18 36.5 40t20.5 37v584h186v-584q9 -17 23 -39t35 -39q24 -19 52.5 -30t86.5 -11q70 0 117 35.5t74 92.5q25 55 36 116t11 126q0 182 -78.5 336t-215.5 263v17h228 q144 -167 201 -305.5t57 -308.5z',\n            'M557 1304h-189v195h189v-195zM194 1304h-189v195h189v-195zM375 0h-188v1117h188v-1117z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM953 1304h-199v195h199v-195zM540 1304h-199v195h199 v-195z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M743 1676l-49 -384h-145l-49 384h243z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM768 1676l-49 -384h-145l-49 384h243z',\n            'M1553 503q0 -96 -23.5 -192.5t-74.5 -171.5q-55 -80 -133.5 -124.5t-193.5 -44.5q-96 0 -177 49.5t-118 116.5h-6q-39 -68 -113 -117t-176 -49q-113 0 -194.5 46.5t-132.5 122.5t-74.5 171.5t-23.5 192.5q0 170 57 308.5t201 305.5h228v-17q-135 -108 -214.5 -262 t-79.5 -337q0 -66 8 -122.5t38 -119.5q26 -55 72.5 -91.5t117.5 -36.5q51 0 86.5 12.5t55.5 29.5q22 18 36.5 40t20.5 37v584h186v-584q9 -17 23 -39t35 -39q24 -19 52.5 -30t86.5 -11q70 0 117 35.5t74 92.5q25 55 36 116t11 126q0 182 -78.5 336t-215.5 263v17h228 q144 -167 201 -305.5t57 -308.5zM955 1676l-49 -384h-145l-49 384h243z',\n            'M1145 837q0 -164 -39 -344t-121 -303q-85 -124 -186.5 -173t-214.5 -49q-192 0 -313.5 126.5t-121.5 329.5q0 228 134.5 372.5t336.5 144.5q90 0 169.5 -26t158.5 -91q2 26 3 55.5t1 55.5q0 217 -79 318t-231 101q-78 0 -169.5 -31.5t-169.5 -86.5h-11v194 q81 44 181.5 66.5t196.5 22.5q137 0 239.5 -54.5t164.5 -178.5q42 -86 56.5 -189t14.5 -260zM942 678q-60 47 -136 74t-148 27q-141 0 -225 -91t-84 -261q0 -145 67.5 -221.5t179.5 -76.5q128 0 209.5 97t115.5 287q6 33 11.5 73t9.5 92z',\n            'M1438 0h-1388l562 1489h264zM1171 168l-432 1147l-431 -1147h863z',\n            'M1532 1315h-200v-1508h-198v1508h-592v-1508h-198v1508h-200v174h1388v-174z',\n            'M1369 -189h-1182v191l673 668l-663 631v188h1133v-176h-891l648 -601v-72l-666 -653h948v-176z',\n            'M1456 572h-1236v160h1236v-160z',\n            'M843 1489l-780 -1489h-165l780 1489h165z',\n            'M492 511h-239v283h239v-283z',\n            'M1737 1788l-880 -1939h-102l-384 993h-237v139h393l313 -821l730 1628h167z',\n            'M1887 663q0 -239 -122.5 -372.5t-329.5 -133.5q-133 0 -244 76.5t-180 222.5q-79 -151 -184.5 -225t-248.5 -74q-191 0 -304 135.5t-113 349.5q0 238 125 372t327 134q134 0 245 -77t179 -222q79 150 185.5 224.5t247.5 74.5q191 0 304 -135.5t113 -349.5zM967 729 q-63 117 -155 175.5t-188 58.5q-138 0 -216 -83.5t-78 -237.5q0 -133 63.5 -216t182.5 -83q110 0 172 48.5t119 142.5q34 57 52.5 92.5t47.5 102.5zM1718 663q0 134 -64 216.5t-182 82.5q-88 0 -152.5 -35.5t-138.5 -155.5q-30 -48 -55.5 -99.5t-44.5 -95.5 q60 -115 153.5 -174.5t189.5 -59.5q138 0 216 83t78 238z',\n            'M1168 1367h-10q-32 8 -89.5 18.5t-89.5 10.5q-129 0 -181 -61q-53 -61 -53 -210v-1123q0 -206 -104 -315q-105 -110 -293 -110q-52 0 -106.5 5.5t-103.5 15.5v178h10q33 -8 87 -18.5t88 -10.5q129 0 182 61q52 61 52 210v1123q0 204 104 315q104 110 293 110 q58 0 109 -5.5t105 -15.5v-178z',\n            'M1431 1104q-20 -194 -111 -293t-249 -99q-77 0 -147 37.5t-126 82.5q-65 52 -117 79.5t-96 27.5q-75 0 -117 -48t-70 -172h-155q23 182 112.5 280t248.5 98q72 0 143 -37t130 -83q61 -48 114.5 -77.5t98.5 -29.5q76 0 120.5 54.5t63.5 179.5h157zM1432 588 q-25 -184 -112 -281.5t-250 -97.5q-72 0 -144 37.5t-129 82.5q-39 31 -103 69t-110 38q-78 0 -121 -55t-63 -179h-157q19 192 110.5 292t249.5 100q77 0 146 -37t127 -83q35 -28 97 -67.5t116 -39.5q75 0 117 49.5t69 171.5h157z',\n            'M1431 362h-608l-104 -335h-153l104 335h-425v156h474l84 268h-558v156h606l105 335h153l-105 -335h427v-156h-476l-83 -268h559v-156z',\n            'M1408 303l-1154 483v124l1154 483v-183l-889 -362l889 -362v-183zM1408 0h-1154v160h1154v-160z',\n            'M1422 786l-1154 -483v183l889 362l-889 362v183l1154 -483v-124zM1422 0h-1154v160h1154v-160z'\n        ];\n        this.OUTLINE_X = [\n            [], [291, 301, 505, 515], [168, 211, 729, 772, 554], [195, 389, 917, 1364, 1481, 1481, 1288, 760, 312, 195],\n            [155, 604, 722, 1129.8, 1160, 1107, 722, 604, 278.5, 191.1, 162, 155], [149, 172.3, 242, 630, 1687, 1844.3, 1960, 2031.3, 2055, 2031.8, 1962, 1575, 517, 359.8, 244, 172.8],\n            [115, 149.4, 252.5, 407.6, 598, 1555, 1287, 961.3, 881, 757.5, 601, 423.5, 293, 213.5, 187], [164, 207, 343, 386], [181, 205.5, 279, 554, 783, 783, 554, 279, 205.5],\n            [147, 376, 651, 724.5, 749, 724.5, 651, 376, 147], [167, 232, 588, 717, 1073, 1137, 1137, 1073, 717, 588, 232, 167], [210, 755, 921, 1466, 1466, 921, 755, 210],\n            [147, 293, 575, 321], [153, 777, 777, 153], [253, 492, 492, 253], [-30, 143, 860, 684],\n            [137, 167.9, 260.5, 420.1, 652, 881.4, 1041.5, 1135.6, 1167, 1136.1, 1043.5, 883.9, 652, 422, 262, 168.3], [278, 1084, 1084, 780, 625, 278],\n            [161, 1169, 1169, 1106, 1073.5, 976, 821.3, 617, 387.5, 198, 161], [167, 364, 608, 830.5, 1007, 1111, 1148, 1117, 1080, 971, 821, 629, 399.5, 210, 167],\n            [77, 790, 982, 1203, 1203, 982, 798, 77], [187, 378, 613, 843.5, 1015, 1119, 1157, 1147, 251, 187],\n            [137, 183.5, 316, 475, 675, 875.1, 1041.5, 1153.6, 1191, 1046, 965, 866, 542, 315, 179.5], [154, 285, 499, 1173, 1173, 154],\n            [122, 157.9, 265.5, 433.6, 651, 859.6, 1029.5, 1142.4, 1180, 1140, 1106.8, 1007, 851.5, 651, 456.8, 300, 196.5, 162],\n            [113, 258, 340, 438, 760, 988, 1122.5, 1167, 1121, 990, 829, 629, 429.5, 263, 150.5], [346, 585, 585, 346], [230, 376, 658, 585, 346], [254, 1408, 1408, 254],\n            [245, 1431, 1431, 245], [268, 1422, 1422, 268], [160, 406, 610, 970, 1005, 973.9, 880.5, 733.4, 541, 337.5, 160],\n            [176, 240, 419, 692, 1037, 1210, 1391, 1714, 1829.5, 1870, 1813.5, 1651, 1391, 1041, 701, 426, 243], [26, 1374, 832, 568],\n            [200, 728, 983.5, 1168, 1281, 1323, 1196, 1159, 1040, 885, 641, 200], [115, 169, 319, 549.5, 844, 1001.5, 1134, 1250.5, 1350, 1350, 1084.5, 845, 546.5, 317, 167],\n            [200, 576, 906.5, 1134, 1369.5, 1458, 1373, 1136, 918.5, 572, 200], [200, 1181, 1181, 200], [200, 398, 1045, 1151, 1151, 200],\n            [115, 171, 330, 577, 896, 1175.5, 1442, 1442, 1441, 1155.5, 896, 570.9, 323.5, 167.1], [200, 1339, 1339, 200], [137, 725, 725, 137],\n            [44, 178, 306, 486.6, 626.5, 716.1, 746, 746, 233, 44], [205, 1397, 1366, 205], [200, 1142, 1142, 398, 200], [200, 1526, 1526, 200], [200, 1336, 1336, 200],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 398, 1043, 1139.5, 1174, 1127.5, 996, 831, 604, 200],\n            [115, 163.5, 302, 520.5, 1010.5, 1133.1, 1290, 1409.5, 1528, 1528, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 1432, 1130.5, 1004, 842, 617, 200],\n            [134, 395.5, 685, 941.5, 1128, 1241.5, 1282, 1222, 990, 702, 480.3, 301, 182.5, 143, 134], [0, 532, 730, 1262, 1262, 0],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 178], [26, 568, 832, 1374, 238], [92, 486, 1546, 1933, 295], [68, 1335, 1336, 80], [6, 532, 730, 1254, 225],\n            [126, 1288, 1288, 1266, 160, 126], [239, 759, 759, 239], [70, 787, 960, 246], [171, 691, 691, 171], [186, 383, 1490, 901, 775], [-4, 1306, 1306, -4], [340, 613, 762, 583],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 1020, 924, 772.5, 567, 362, 203], [185, 679, 866, 1022, 1128.5, 1168, 1139.4, 1053.5, 918.1, 373, 185],\n            [105, 145, 258, 431, 653, 832.5, 1011, 1011, 841.5, 653, 430.1, 255.5, 142.6], [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 903, 258, 148.5],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 997.5, 849.1, 649, 428.6, 255.5, 143.4], [68, 195, 383, 716, 786, 786, 693.5, 580, 415, 294, 68],\n            [108, 225, 391.5, 565, 798.3, 962, 1058.8, 1091, 1091, 602, 417, 259, 148.5], [185, 1119, 1119, 1095.3, 1024, 373, 185], [175, 187, 375, 387, 387, 175],\n            [-62, 47.5, 153, 304, 421, 496, 521, 533, 533, 321, 100, -62], [193, 1199, 1161, 381, 193], [187, 375, 375, 187], [185, 1815, 1815, 1793.1, 1727.5, 1615.9, 1456, 735, 185],\n            [185, 1119, 1119, 1095.3, 1024, 907.5, 748, 185], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 833.3, 622, 409.4, 245.5, 140.9],\n            [185, 373, 1019, 1129, 1168, 1139.9, 1055.5, 920.6, 741, 185], [108, 137.6, 226.5, 365.1, 903, 1091, 1091, 602, 414, 259, 149.5], [185, 373, 882, 882, 816, 745, 185],\n            [110, 283.5, 511, 706.9, 856.5, 951.4, 983, 939, 768.5, 566, 372.5, 230, 143.5, 115, 110], [62, 211.3, 278, 387.5, 538, 649.5, 765, 765, 377, 189, 62],\n            [177, 201.5, 275, 392.5, 549, 1111, 1111, 177], [61, 510, 699, 1151, 265], [86, 380, 1299, 1590, 766], [60, 1152, 1152, 64], [61, 298, 499, 1151, 265],\n            [93, 995, 995, 978, 107, 93], [173, 588.9, 672.5, 800.9, 963, 1113, 1113, 963, 800.9, 672.5, 588.9, 173], [378, 552, 552, 378],\n            [187, 337, 499.1, 627.5, 711.1, 1127, 1127, 711.1, 627.5, 499.1, 337, 187], [187, 354, 1125, 1290, 1401, 1466.5, 1489, 1322, 551, 386, 274, 209.5], [], [291, 515, 505, 301],\n            [159, 191.6, 289.5, 647, 765, 1120, 1120, 765, 647, 292.5, 192.4], [137, 1163, 1163, 1137, 997, 816, 630.6, 484.5, 389.6, 182, 137],\n            [138, 247, 1058, 1168, 1168, 1055, 249, 138], [108, 187, 557, 745, 1115, 1191, 320], [378, 552, 552, 378],\n            [172, 229, 404.5, 575, 796, 965, 1063, 1096, 1128, 1071, 896, 725, 497.5, 334, 235, 203], [346, 958, 958, 346],\n            [159, 222.4, 412.5, 692.1, 1024, 1355.9, 1635.5, 1825.6, 1889, 1825.6, 1635.5, 1355.9, 1024, 692.1, 412.5, 222.4],\n            [151, 238.5, 454, 944, 944, 920.3, 849, 723.5, 537, 368, 231], [166, 716, 1146, 1146, 716, 166], [210, 1285, 1456, 1456, 210], [153, 777, 777, 153],\n            [159, 222.4, 412.5, 692.1, 1024, 1355.9, 1635.5, 1825.6, 1889, 1825.6, 1635.5, 1355.9, 1024, 692.1, 412.5, 222.4], [-4, 1, 1306, 1306],\n            [154, 183, 270, 399.3, 555, 710.8, 840, 927, 956, 927.1, 840.5, 711.4, 555, 399.3, 270, 183], [215, 1461, 1461, 921, 755, 215],\n            [207, 967, 967, 911, 887.6, 817.5, 544, 369.5, 211, 207], [207, 363.5, 540, 703, 834, 923, 956, 929, 904.9, 832.5, 561, 384.5, 224, 207], [541, 690, 963, 720],\n            [190, 378, 1124, 1124, 190], [137, 168.5, 595, 1106, 1106, 640, 425.3, 267, 169.5], [253, 492, 492, 253], [353, 456, 551, 788.5, 857.1, 880, 877, 872, 719, 353],\n            [291, 299, 914, 914, 693, 558, 291], [121, 150.6, 239.5, 378.6, 559, 734.3, 874, 965.5, 996, 965.5, 874, 734.3, 559, 378.6, 239.5, 150.6], [174, 604, 1154, 1154, 604, 174],\n            [171, 465, 1694, 1857, 1857, 1694, 1410, 545, 408, 171], [171, 465, 1955, 1955, 1890, 1805.5, 1410, 545, 408, 171], [140, 555, 1750, 1913, 1913, 1750, 1500, 448, 294, 155, 140],\n            [113, 144.1, 237.5, 384.6, 577, 782, 958, 958, 712, 508, 147.5], [26, 1374, 862, 683, 440], [26, 1374, 955, 712, 533], [26, 1374, 1033, 805, 578, 350],\n            [26, 1374, 1119, 990, 541, 367, 288], [26, 1374, 1005, 806, 393], [26, 1374, 1049, 1023.6, 947.5, 834.6, 699, 564, 451, 374.5, 349], [14, 1901, 1901, 608],\n            [115, 169, 548, 652.5, 750, 990.5, 1350, 1350, 1084.5, 845, 546.5, 317, 167], [200, 1181, 1181, 643, 400, 200], [200, 1181, 1181, 993, 750, 200],\n            [200, 1181, 1181, 803, 576, 200], [200, 1181, 1181, 1038, 426, 200], [137, 725, 725, 389, 146, 137], [137, 725, 725, 482, 137], [93, 137, 725, 776, 548, 321],\n            [126, 137, 725, 738, 738, 126], [14, 210, 586, 916.5, 1144, 1379.5, 1468, 1383, 1146, 929, 582, 210, 14], [200, 1336, 1336, 1208, 1079, 630, 456, 200],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 753, 510, 163], [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1083, 840, 303, 163],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1136, 908, 681, 453, 163],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1207, 1078, 629, 455, 163],\n            [112, 160.5, 299, 517.5, 803, 1089.5, 1307, 1445.5, 1495, 1446.5, 1108, 909, 496, 160], [291, 402, 1274, 1385, 1385, 1274, 402, 291],\n            [115, 120, 252, 1092.5, 1310, 1448.5, 1498, 1474, 1342, 806, 521.5, 303, 163], [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 753, 510, 178],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 1073, 830, 178], [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 856, 629, 178],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 1056, 444, 178], [6, 532, 730, 1254, 935, 692], [200, 398, 1044, 1139, 1174, 1127, 997, 398, 200],\n            [185, 675, 873.1, 1029.5, 1131.1, 1165, 1066, 1037.4, 951.5, 819.9, 654, 470.5, 321, 221, 185], [104, 130.3, 209, 325.5, 465, 1053, 1053, 1020, 559, 316, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 934, 691, 203], [104, 130.3, 209, 325.5, 465, 1053, 1053, 961, 733, 506, 278, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 1038, 909, 460, 286, 207], [104, 130.3, 209, 325.5, 465, 1053, 1053, 926, 314, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 956, 930.6, 854.5, 741.6, 606, 471, 358, 281.5, 256],\n            [104, 130.4, 209.5, 326.1, 465, 1433, 1648.5, 1833, 1855, 1855, 1823.6, 1729.5, 1581.1, 1387, 564, 360, 202],\n            [105, 145, 353, 456, 551, 788.5, 857.1, 1011, 1011, 841.5, 653, 430.1, 255.5, 142.6], [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 997.5, 580, 337, 143.4],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 960, 717, 255.5, 143.4], [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 986, 758, 531, 303, 143.4],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 951, 339, 143.4], [-21, 187, 375, 401, 222], [160, 187, 375, 582, 339], [-11, 187, 375, 572, 394, 167],\n            [5, 187, 375, 557, 557, 5], [106, 140.6, 244.5, 405.6, 612, 828.3, 995, 1101.5, 1137, 1004, 938, 263], [185, 1119, 1119, 1075, 946, 497, 323, 244, 185],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 553, 310, 140.9], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 933, 690, 245.5, 140.9],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 963, 735, 508, 280, 140.9], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1038, 909, 460, 286, 207],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 928, 729, 316, 140.9], [210, 719, 957, 1466, 1466, 957, 719, 210],\n            [93, 203, 833.3, 997, 1102, 1137, 1132, 1021, 409.4, 245.5, 140.9, 106], [177, 201.5, 275, 392.5, 549, 1111, 1111, 585, 342, 177],\n            [177, 201.5, 275, 392.5, 549, 1111, 1111, 945, 702, 177], [177, 201.5, 275, 392.5, 549, 1111, 1111, 757, 530, 177], [177, 201.5, 275, 392.5, 549, 1111, 1111, 955, 343, 177],\n            [61, 298, 499, 1151, 928, 685], [185, 373, 1019, 1129, 1168, 1139.9, 1055.5, 920.6, 373, 185], [230, 376, 658, 585, 346], [530, 579, 724, 773],\n            [256, 588, 716, 1048, 1048, 765, 539, 256], [7, 26, 1374, 832], [346, 585, 585, 346], [0, 49, 443, 1424, 1424, 443], [0, 49, 443, 1582, 1582, 443], [0, 49, 380, 968, 968, 380],\n            [0, 49, 354.5, 493, 711.5, 997, 1283.5, 1501, 1639.5, 1689, 1640.5, 1501, 1284.5, 997], [0, 49, 815, 1013, 1537, 289],\n            [0, 49, 291, 1751, 1751, 1701, 1654.1, 1513.5, 1296.6, 1021], [-53, 187, 375, 615, 615, 379, 183, -53], [26, 1374, 832, 568],\n            [200, 728, 983.5, 1168, 1281, 1323, 1196, 1159, 1040, 885, 641, 200], [200, 398, 1162, 1162, 200], [26, 1414, 852, 588], [200, 1181, 1181, 200],\n            [126, 1288, 1288, 1266, 160, 126], [200, 1339, 1339, 200], [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163],\n            [137, 725, 725, 137], [205, 1397, 1366, 205], [26, 1378, 822, 582], [200, 1526, 1526, 200], [200, 1336, 1336, 200], [114, 1215, 1215, 114],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 1339, 1339, 200],\n            [200, 398, 1043, 1139.5, 1174, 1127.5, 996, 831, 604, 200], [118, 1280, 1280, 1234, 138, 118], [0, 532, 730, 1262, 1262, 0], [6, 532, 730, 1254, 225],\n            [105, 149.5, 273, 740, 937, 1404, 1527.5, 1572, 1528.5, 1410, 937, 740, 267, 148], [68, 1335, 1336, 80], [179, 219.5, 338, 793, 990, 1446, 1563.5, 1604, 1604, 179],\n            [108, 1568, 1568, 1518, 1471.1, 1330.5, 1113.6, 838, 562.4, 345.5, 204.9, 158, 108], [126, 137, 725, 738, 738, 126], [6, 532, 730, 1254, 939, 740, 327],\n            [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 743, 500, 148.5], [109, 152.5, 265, 417, 578, 796, 1006, 1006, 961, 721, 478, 191.5, 144],\n            [185, 931, 1119, 1119, 1095.3, 802, 559, 185], [160, 187, 375, 403], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 1043, 760, 534, 251, 177],\n            [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 604, 416.5, 258, 148.5], [185, 373, 1030.5, 1131.4, 1165, 1084, 1050, 959, 825.5, 661, 462.1, 311.5, 216.6, 185],\n            [61, 506, 694, 1151, 265], [106, 140.6, 244.5, 408.6, 624, 837.1, 1000.5, 1104.4, 1139, 1049, 239],\n            [109, 152.5, 265, 417, 578, 796, 1006, 1006, 961, 789, 609, 449, 304, 191.5, 144], [108, 135.8, 219, 646, 825, 937, 982, 942, 198],\n            [185, 931, 1119, 1119, 1095.3, 1024, 907.5, 748, 185], [137, 159.5, 219, 382, 639, 896, 1059, 1118, 1141, 1118, 1058, 895.5, 639, 382.5, 220, 159.5], [187, 375, 375, 187],\n            [193, 1192, 1122, 1085, 1027, 193], [61, 1151, 522, 311], [185, 373, 1125, 1125, 185], [61, 510, 699, 1151, 265], [104, 138.5, 239, 704, 884, 995.5, 1041, 957, 133],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 833.3, 622, 409.4, 245.5, 140.9], [185, 1120, 1120, 185],\n            [185, 373, 1033.5, 1137.4, 1172, 1140, 1044, 887.3, 673, 477.5, 322, 220.5, 185], [105, 146.5, 261, 685, 862, 971, 1018, 986, 839, 675, 441.9, 260.5, 143.9],\n            [106, 140.5, 244, 407.8, 623, 832.9, 996.5, 1101.9, 1295, 1295, 625, 412, 247, 141.3], [10, 414, 602, 1006, 1006, 10],\n            [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 177], [104, 151, 283, 715, 902, 1342.5, 1471.1, 1514, 1470.4, 1339.5, 1132.6, 861, 784.5, 714, 355, 163],\n            [48, 1160, 1149, 59], [176, 223.5, 748, 935, 1459, 1507, 1507, 176], [113, 136.5, 211, 343.5, 538, 1128, 1321.5, 1455, 1529.5, 1553, 1496, 1295, 371, 170],\n            [5, 187, 375, 557, 557, 5], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 953, 341, 177],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 743, 500, 140.9], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 768, 525, 177],\n            [113, 136.5, 211, 343.5, 538, 1128, 1321.5, 1455, 1529.5, 1553, 1496, 955, 712, 170],\n            [149, 179.4, 270.5, 409.6, 584, 798.5, 985, 1106, 1145, 1130.5, 1074, 909.5, 670, 473.5, 292], [50, 1438, 876, 612], [144, 344, 1332, 1532, 1532, 144],\n            [187, 1369, 1369, 1330, 197, 187], [220, 1456, 1456, 220], [-102, 63, 843, 678], [253, 492, 492, 253], [134, 755, 857, 1737, 1570, 134],\n            [161, 189.3, 274, 406.5, 578, 1435, 1620.9, 1764.5, 1856.4, 1887, 1858.8, 1774, 1641.5, 1470, 613, 430.3, 286, 192.3],\n            [138, 241.5, 348, 515.3, 641, 719, 1168, 1168, 1063, 954, 786.3, 661, 583, 138], [243, 400, 1070, 1214, 1320, 1432, 1431, 1274, 604, 462.4, 355.5, 243],\n            [245, 566, 719, 1431, 1431, 1109, 956, 245], [254, 1408, 1408, 254], [268, 1422, 1422, 268]\n        ];\n        this.OUTLINE_Y = [\n            [], [1489, 0, 0, 1489], [1556, 977, 977, 1556, 1556], [421, 0, 0, 421, 932, 1067, 1489, 1489, 1067, 556],\n            [85, -361, -361, 238.1, 380, 1231, 1576, 1576, 1185, 1071.5, 935, 283], [1075, 880.5, 743, 0, -29, -1.8, 80, 217.8, 413, 607.5, 745, 1489, 1517, 1489.8, 1408, 1270.3],\n            [409, 230.9, 90.5, -0.6, -31, 0, 909, 1333.4, 1432.5, 1498.1, 1520, 1490, 1412, 1301.5, 1174], [1556, 977, 977, 1556], [572, 286.3, 31, -412, -412, 1556, 1556, 1113, 857.8],\n            [-412, -412, 31, 286.3, 572, 857.8, 1113, 1556, 1556], [886, 776, 630, 630, 777, 887, 1299, 1409, 1556, 1556, 1410, 1300], [572, 27, 27, 572, 732, 1277, 1277, 732],\n            [-370, -370, 285, 285], [561, 561, 742, 742], [0, 0, 285, 285], [-304, -304, 1556, 1556],\n            [743, 400, 159, 16.5, -31, 15.9, 156.5, 397.4, 745, 1084.9, 1326.5, 1470.9, 1519, 1471.6, 1329.5, 1088.1], [0, 0, 152, 1494, 1494, 1286],\n            [0, 0, 171, 1110, 1279.4, 1409.5, 1492.4, 1520, 1491, 1427, 209], [63, -1.5, -31, 2.5, 106, 254, 441, 1161, 1320, 1436, 1500, 1520, 1490.5, 1426, 272],\n            [419, 0, 0, 419, 579, 1489, 1489, 649], [56, -5.5, -31, 6.5, 114, 274, 473, 1489, 1489, 267],\n            [654, 324, 104, 3, -31, 4.9, 112.5, 276.9, 483, 1494, 1512, 1517, 1453.5, 1277, 1005], [1314, 0, 0, 1266, 1489, 1489],\n            [411, 233.5, 91, -2.8, -34, -2, 94, 238.3, 415, 1144, 1294.5, 1416, 1496.3, 1523, 1495, 1411, 1285, 1131],\n            [1005, -6, -23.5, -29, 33, 209, 480, 834, 1171.5, 1385, 1485.5, 1519, 1483.3, 1376, 1211.8], [0, 0, 1117, 1117], [-370, -370, 285, 1117, 1117], [590, 77, 1227, 714],\n            [362, 362, 942, 942], [77, 590, 714, 1227], [1245, 0, 0, 964.5, 1139, 1293.4, 1414.5, 1492.9, 1519, 1497.5, 1449],\n            [647, 291, 15, -162.5, -226, -218.5, -190, 157, 394, 663, 1013.5, 1283, 1457, 1519, 1452, 1268, 991.5], [0, 0, 1489, 1489],\n            [0, 0, 28, 122, 262, 458, 1155, 1316.5, 1427, 1477, 1489, 1489], [743, 402.5, 161, 18.5, -27, -13.5, 19, 63, 108, 1385, 1487, 1516, 1465, 1317, 1072],\n            [0, 0, 28, 119, 375, 743, 1118, 1371, 1457.5, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 717, 1313, 1489, 1489],\n            [746, 405.5, 163, 19, -29, 12.5, 110, 749, 1382, 1485.5, 1516, 1464.4, 1309.5, 1065.4], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [8, -12.5, -21, 5.5, 85, 213.5, 387, 1489, 1489, 193], [0, 0, 1489, 1489], [0, 0, 176, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 709, 855.5, 1039, 1254, 1396, 1466.5, 1489, 1489],\n            [744, 415, 172, 21, -297.5, -369.1, -393, -386.5, -365, -183, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1280.5, 1409, 1471.5, 1489, 1489],\n            [92, 3, -27, 9, 109, 253, 425, 1412, 1486, 1516, 1486.1, 1396.5, 1260.1, 1090, 340], [1313, 0, 0, 1313, 1489, 1489], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 1489],\n            [1489, 0, 0, 1489, 1489], [1489, 0, 0, 1489, 1489], [0, 0, 1489, 1489], [1489, 0, 0, 1489, 1489], [0, 0, 176, 1489, 1489, 184], [-392, -392, 1556, 1556],\n            [1556, -304, -304, 1556], [-392, -392, 1556, 1556], [682, 682, 684, 1489, 1489], [-300, -300, -180, -180], [1676, 1302, 1302, 1676],\n            [324, 182.8, 69, -6, -31, 0, 758, 939, 1058, 1124.5, 1144, 1126, 1093], [0, -31, 8.5, 127, 315, 567, 812.8, 996, 1110, 1556, 1556],\n            [557, 300, 118, 10.5, -25, 0, 70, 1050, 1116, 1143, 1104, 987, 801.5], [550, 306.8, 123, 7.5, -31, 0, 1556, 1556, 992, 803],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1016, 1115, 1148, 1107.8, 987, 797.8], [959, 0, 0, 959, 1374, 1546, 1560, 1566, 1539.4, 1459.5, 1117],\n            [569, -375, -410.5, -423, -389.8, -290, -119.3, 127, 1117, 1148, 1108.5, 998, 817.5], [0, 0, 725, 906, 1039, 1556, 1556], [1304, 0, 0, 1304, 1499, 1499],\n            [-395, -415, -423, -398, -323, -199, -27, 1304, 1499, 1499, 1117, -216], [0, 0, 1117, 1556, 1556], [0, 0, 1556, 1556], [0, 0, 725, 902.9, 1036.5, 1120.1, 1148, 1148, 1117],\n            [0, 0, 725, 906, 1039, 1120.8, 1148, 1117], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1108.4, 1148, 1108.4, 989.5, 802.4],\n            [-412, -412, 133, 323.5, 572, 813.4, 995.5, 1109.9, 1148, 1117], [555, 314.1, 131.5, 16.4, -412, -412, 1117, 1148, 1108, 995, 809.5], [0, 0, 912, 1105, 1114.5, 1117, 1117],\n            [67, 2.5, -27, -2.5, 71, 182.8, 322, 1060, 1119.5, 1144, 1116.5, 1042, 933, 803, 278], [959, 189.8, 70, 1, -22, -13, 10, 1117, 1438, 1438, 1117],\n            [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [0, 0, 1117, 1117], [1117, -412, -412, 1117, 1117],\n            [0, 0, 159, 1117, 1117, 139], [504, -170.9, -292.5, -367.1, -392, -392, 1556, 1556, 1531.1, 1456.5, 1334.9, 660], [-392, -392, 1556, 1556],\n            [-392, -392, -367.1, -292.5, -170.9, 504, 660, 1334.9, 1456.5, 1531.1, 1556, 1556], [395, 395, 396, 440, 561, 732, 927, 927, 926, 880.5, 761, 589.5], [], [0, 0, 1489, 1489],\n            [557, 333.5, 163, -361, -361, 74, 1046, 1475, 1475, 948.5, 775.9], [0, 0, 171, 1467, 1501, 1518, 1485.9, 1389.5, 1243.1, 751, 207],\n            [258, 145, 147, 257, 1067, 1176, 1176, 1066], [1489, 426, 0, 0, 426, 1489, 1489], [-392, -392, 1556, 1556],\n            [533, -327, -371.5, -385, -358, -275, -156, -10, 601, 1462, 1505, 1519, 1490, 1411, 1293.5, 1147], [1304, 1304, 1499, 1499],\n            [655, 323.1, 43.5, -146.6, -210, -146.6, 43.5, 323.1, 655, 986.9, 1266.5, 1456.6, 1520, 1456.6, 1266.5, 986.9],\n            [833, 616, 531, 554, 1192, 1332.4, 1435.5, 1498.9, 1520, 1504, 1475], [608, 162, 191, 1113, 1142, 697], [602, 57, 57, 762, 762], [561, 561, 742, 742],\n            [655, 323.1, 43.5, -146.6, -210, -146.6, 43.5, 323.1, 655, 986.9, 1266.5, 1456.6, 1520, 1456.6, 1266.5, 986.9], [1788, 1668, 1668, 1788],\n            [1116, 960.4, 831.5, 744.9, 716, 745, 832, 961, 1116, 1271, 1400, 1487, 1516, 1487, 1400, 1271], [179, 179, 917, 1462, 1462, 917],\n            [566, 566, 711, 1237, 1350.4, 1440.5, 1519, 1501.5, 1458, 722], [585, 542, 527, 543.5, 595, 685.5, 817, 1278, 1374.5, 1452, 1520, 1502.5, 1458, 764],\n            [1302, 1302, 1676, 1676], [-412, -412, 0, 1117, 1117], [1050, 866, -363, -363, 1489, 1489, 1460, 1373, 1234.3], [511, 511, 794, 794],\n            [-397, -416, -423, -337, -232, -89, -25, 20, 20, -237], [1256, 566, 566, 688, 1493, 1493, 1368],\n            [1025, 820.1, 663.5, 564.1, 531, 563.4, 660.5, 816.4, 1025, 1233.8, 1390, 1487.5, 1520, 1486.8, 1387, 1230], [191, 162, 608, 697, 1142, 1113],\n            [1246, 0, 0, 220, 353, 944, 1489, 1493, 1493, 1363], [1246, 0, 0, 139, 664, 865, 1489, 1493, 1493, 1363], [598, 0, 0, 220, 353, 944, 1489, 1517, 1500, 1456, 773],\n            [350, 195.6, 74.5, -3.9, -30, -10, 40, 244, 1489, 1489, 523], [0, 0, 1675, 2049, 2049], [0, 0, 2049, 2049, 1675], [0, 0, 1670, 2049, 2049, 1670],\n            [0, 0, 1992, 1992, 1987, 1910, 1682], [0, 0, 1872, 1872, 1872], [0, 0, 1712, 1843.5, 1952, 2024.8, 2049, 2024.8, 1952, 1843.5, 1712], [0, 0, 1489, 1489],\n            [743, 402.5, -397, -416, -423, -337, 108, 1385, 1487, 1516, 1465, 1317, 1072], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 1489, 2049, 2049, 1489],\n            [0, 0, 1489, 1872, 1872, 1489], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 2049, 2049, 1489], [1670, 0, 0, 1670, 2049, 2049], [1677, 0, 0, 1677, 1872, 1872],\n            [740, 0, 0, 28, 119, 375, 743, 1118, 1371, 1457.5, 1489, 1489, 883], [0, 0, 1489, 1992, 1992, 1987, 1910, 1489],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 2049, 2049, 1070.5], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 2049, 2049, 1318, 1070.5],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1670, 2049, 2049, 1670, 1070.5], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1992, 1992, 1987, 1910, 1070.5],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1872, 1872, 1872, 1070.5], [216, 105, 105, 216, 1088, 1199, 1199, 1088],\n            [744, -146, -146, 20, 172, 414.5, 744, 1611, 1611, 1520, 1468, 1318, 1070.5], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489],\n            [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489],\n            [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 1872, 1872, 1489], [1489, 0, 0, 1489, 2049, 2049], [0, 0, 469, 610.5, 787, 992, 1130, 1489, 1489],\n            [0, -24, 12.4, 121.5, 284.1, 481, 1241, 1376, 1479, 1544.3, 1566, 1536.5, 1449, 1295.5, 1080], [324, 182.8, 69, -6, -31, 0, 758, 939, 1676, 1676, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1676, 1676, 1093], [324, 182.8, 69, -6, -31, 0, 758, 1297, 1676, 1676, 1297, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1619, 1619, 1614, 1537, 1309], [324, 182.8, 69, -6, -31, 0, 758, 1499, 1499, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1630, 1761.8, 1871, 1944.5, 1969, 1944.5, 1871, 1761.8, 1630],\n            [317, 178.8, 68, -4.8, -29, -26, 3.5, 68, 559, 641, 861.3, 1020, 1116, 1148, 1146, 1127, 1093], [557, 300, -397, -416, -423, -337, -232, 70, 1050, 1116, 1143, 1104, 987, 801.5],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1016, 1676, 1676, 797.8], [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1676, 1676, 987, 797.8],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1297, 1676, 1676, 1297, 797.8], [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1499, 1499, 797.8],\n            [1676, 0, 0, 1302, 1676], [1302, 0, 0, 1676, 1676], [1297, 0, 0, 1297, 1676, 1676], [1304, 0, 0, 1304, 1499, 1499],\n            [484, 266.5, 104, 2.8, -31, 12, 141, 351, 637, 1469, 1566, 1556], [0, 0, 725, 1619, 1619, 1614, 1537, 1309, 1117],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1676, 1676, 802.4], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1676, 1676, 989.5, 802.4],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1297, 1676, 1676, 1297, 802.4], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 1619, 1619, 1614, 1537, 1309],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1499, 1499, 1499, 802.4], [572, 7, 7, 572, 732, 1297, 1297, 732],\n            [-148, -148, 8.5, 127, 313.8, 558, 1241, 1241, 1108.4, 989.5, 802.4, 558], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117],\n            [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1499, 1499, 1117],\n            [1117, -412, -412, 1117, 1676, 1676], [-412, -412, 133, 323.5, 572, 813.4, 995.5, 1109.9, 1556, 1556], [-370, -370, 285, 1117, 1117], [1676, 1292, 1292, 1676],\n            [1304, 1292, 1292, 1304, 1499, 1676, 1676, 1499], [1489, 0, 0, 1489], [832, 832, 1117, 1117], [1489, 1105, 0, 0, 1489, 1489], [1489, 1105, 0, 0, 1489, 1489],\n            [1489, 1105, 0, 0, 1489, 1489], [1489, 1105, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520], [1489, 1105, 0, 0, 1489, 1489],\n            [1489, 1105, 0, 0, 174, 894, 1144.8, 1345, 1476.3, 1520], [1304, 0, 0, 1304, 1499, 1676, 1676, 1499], [0, 0, 1489, 1489],\n            [0, 0, 28, 122, 262, 458, 1155, 1316.5, 1427, 1477, 1489, 1489], [0, 0, 1313, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 176, 1489, 1489, 184],\n            [0, 0, 1489, 1489], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1489, 1489],\n            [0, 0, 709, 855.5, 1039, 1254, 1396, 1466.5, 1489, 1489], [0, 0, 176, 1489, 1489, 184], [1313, 0, 0, 1313, 1489, 1489], [1489, 0, 0, 1489, 1489],\n            [755, 507, 325, -16, -16, 325, 506.5, 755, 994, 1171, 1505, 1505, 1171, 993], [0, 0, 1489, 1489], [910, 647, 471, 0, 0, 471, 645.5, 910, 1489, 1489],\n            [0, 0, 174, 894, 1144.8, 1345, 1476.3, 1520, 1476.3, 1345, 1144.8, 894, 174], [1677, 0, 0, 1677, 1872, 1872], [1489, 0, 0, 1489, 1872, 1872, 1872],\n            [550, 306.8, 123, 7.5, -31, 0, 1117, 1676, 1676, 803], [306, 148.5, 46, -10, -26, -5, 64, 270, 1083, 1676, 1676, 986.5, 839], [0, -412, -412, 725, 906, 1676, 1676, 1117],\n            [1676, 0, 0, 1676], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1499, 1676, 1676, 1499, 1117], [550, 306.8, 123, 7.5, -31, 0, 1117, 1148, 1108, 992, 803],\n            [-412, -412, 110, 259.5, 444, 1195, 1355, 1467, 1534.5, 1556, 1524.3, 1429, 1277.8, 1078], [1117, -412, -412, 1117, 1117],\n            [534, 299.6, 120.5, 6.9, -31, 7.8, 124, 308.3, 551, 1556, 1556], [306, 148.5, 46, -10, -26, -5, 64, 270, 1083, 1127.5, 1144, 1128, 1079, 986.5, 839],\n            [463, 262.3, 118, -412, -412, -264.5, -96, 1556, 1556], [0, -412, -412, 725, 906, 1039, 1120.8, 1148, 1117],\n            [768, 451.5, 241, 37.5, -31, 37.5, 241, 451.5, 768, 1073, 1288, 1487, 1556, 1487, 1288, 1073.5], [0, 0, 1117, 1117], [0, 0, 1117, 1118, 1119, 1117], [0, 0, 1556, 1556],\n            [-412, -412, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [412, 248.5, 113, -412, -412, -265, -96, 1556, 1556],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1108.4, 1148, 1108.4, 989.5, 802.4], [0, 0, 1117, 1117],\n            [-412, -412, 148.5, 340.9, 577, 821.5, 1001, 1111.3, 1148, 1115, 1020, 861.5, 646], [549, 299, 129, -412, -412, -268, -96, 1079, 1124.5, 1143, 1102.5, 981, 792],\n            [558, 313.8, 127, 8.5, -31, 7.5, 123, 308.8, 952, 1117, 1148, 1108.6, 990.5, 803.6], [952, 0, 0, 952, 1117, 1117],\n            [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1117], [546, 314, 142, -412, -412, 159, 342.3, 576, 816.6, 996.5, 1108.6, 1146, 1145.5, 1143, 1117, 842],\n            [-412, -412, 1117, 1117], [446, 248.5, -412, -412, 248, 446, 1117, 1117], [503, 310.5, 139, 16.5, -30, -30, 14.5, 139, 310.5, 503, 811.5, 1117, 1117, 811.5],\n            [1304, 0, 0, 1304, 1499, 1499], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1499, 1499, 1117],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1676, 1676, 802.4], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1676, 1676, 1117],\n            [503, 310.5, 139, 16.5, -30, -30, 14.5, 139, 310.5, 503, 811.5, 1676, 1676, 811.5], [424, 240.1, 94.5, -0.4, -32, 17, 190, 493, 837, 1097, 1286, 1464.5, 1519, 1496.5, 1430],\n            [0, 0, 1489, 1489], [1315, -193, -193, 1315, 1489, 1489], [-189, -189, -13, 1489, 1489, 2], [572, 572, 732, 732], [0, 0, 1489, 1489], [511, 511, 794, 794],\n            [842, -151, -151, 1788, 1788, 981], [642, 447.6, 292.5, 190.9, 157, 157, 190.4, 290.5, 450.4, 663, 857.4, 1012.5, 1114.1, 1148, 1148, 1114.5, 1014, 854],\n            [-402, -417.5, -423, -395.5, -313, -179.8, 1367, 1545, 1560.5, 1566, 1538.5, 1456, 1321.8, -224], [202, 202, 209, 233.4, 306.5, 588, 1104, 1104, 1097, 1072.5, 999, 719],\n            [362, 27, 27, 362, 942, 1277, 1277, 942], [0, 0, 1393, 910], [0, 0, 910, 1393]\n        ];\n        this.KERN_C1 = [\n            '\\'', '\\'', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '.', '.', 'A', 'A', 'A', 'A', 'A', 'A', 'A',\n            'A', 'A', 'A', 'A', 'A', 'B', 'B', 'B', 'B', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F',\n            'I', 'J', 'J', 'J', 'J', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n            'L', 'O', 'O', 'O', 'O', 'O', 'O', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'Q', 'Q', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'S',\n            'S', 'S', 'S', 'S', 'S', 'S', 'S', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T',\n            'T', 'T', 'T', 'T', 'T', 'T', 'U', 'U', 'U', 'U', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'W', 'W', 'W', 'W', 'W', 'W',\n            'W', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y',\n            'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z',\n            'a', 'a', 'a', 'b', 'b', 'b', 'c', 'c', 'e', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'h', 'h', 'h', 'k', 'k', 'k', 'k', 'm', 'm',\n            'm', 'n', 'n', 'n', 'o', 'o', 'o', 'o', 'o', 'p', 'p', 'p', 'r', 'r', 'r', 'r', 'r', 't', 't', 'v', 'v', 'v', 'v', 'v', 'v', 'v', 'v', 'w', 'w', 'w',\n            'w', 'w', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'z', 'z', 'z', 'z', 'z', 'z', 'z',\n            'z', 'z', '\\u00C7', '\\u00E7', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00F8', '\\u00F8', '\\u00F8', '\\u00F8', '\\u00F8'\n        ];\n        this.KERN_C2 = [\n            '\\u00C6', 'A', '\\u00E6', '\\u00C6', 'z', 'y', 'x', 'w', 'v', 'a', 'Z', 'Y', 'X', 'W', 'V', 'T', 'S', 'J', 'I', 'A', '-', ',', 'y', 'w', 'v', 'u', 't',\n            'Y', 'W', 'V', 'U', 'T', 'S', '-', 'T', '.', '-', ',', '-', 'Z', 'Y', 'X', 'W', 'T', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'o', 'e', 'a', 'T', 'A',\n            '?', ';', ':', '.', ',', '-', '\\u00C6', 'A', '.', ',', '\\u00F8', '\\u00E6', '\\u00D8', 'y', 'w', 'v', 'u', 'o', 'e', 'a', 'O', '-', '\\u00D8', '\\u00C7',\n            'y', 'v', 'Y', 'W', 'V', 'T', 'O', 'J', 'G', 'C', '-', '\\'', 'Z', 'Y', 'X', 'T', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'o', 'e', 'a', 'Y', 'A',\n            '.', ',', '.', ',', '\\u00F8', '\\u00E6', 'y', 'u', 'o', 'e', 'a', 'Y', 'T', '-', '\\u00C6', 'y', 'w', 'v', 'S', 'A', '.', ',', '\\u00F8', '\\u00E6',\n            '\\u00D8', '\\u00C6', '\\u00C7', 'z', 'y', 'w', 'v', 'u', 's', 'r', 'o', 'g', 'e', 'c', 'a', 'T', 'S', 'O', 'G', 'C', 'A', '?', ';', ':', '.', '-', ',',\n            '\\u00C6', 'A', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'y', 'u', 'o', 'e', 'a', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'y', 'u',\n            'r', 'o', 'e', 'a', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6', '\\u00D8', '\\u00C7', 'y', 'u', 'o', 'e', 'a', 'O', 'G', 'C', '-', '\\u00F8',\n            '\\u00E6', '\\u00D8', '\\u00C6', 'v', 'u', 's', 'r', 'q', 'p', 'o', 'n', 'm', 'g', 'e', 'd', 'a', 'O', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6',\n            '\\u00D8', '\\u00C7', 'y', 'w', 'o', 'e', 'a', 'Z', 'O', 'G', 'C', '-', 'y', 'w', 'v', 'y', '.', ',', 'T', '-', 'T', '}', 'y', ']', '\\\\', '?', '.',\n            '-', ',', '*', ')', '\\'', '\"', 'y', 'w', 'v', '\\u00F8', 'o', 'e', '-', 'y', 'w', 'v', 'y', 'w', 'v', 'y', 'x', 'v', '.', ',', 'y', '.', ',',\n            '\\u00E6', 'a', '.', '-', ',', 'y', '-', '\\u00F8', '\\u00E6', 'o', 'e', 'a', '.', '-', ',', '\\u00E6', 'a', '.', '-', ',', '\\u00F8', '\\u00E7', 'o', 'g',\n            'e', 'd', 'c', '-', '\\u00F8', '\\u00E6', '\\u00E7', 'q', 'o', 'g', 'e', 'd', 'c', 'a', '.', '-', ',', '\\u00F8', '\\u00E7', 'q', 'o', 'g', 'e', 'd', 'c',\n            '-', '-', '-', 'Z', 'Y', 'X', 'T', '.', ',', 'y', 'x', 'v', '.', ','\n        ];\n        this.KERN_K = [\n            100, 100, 20, 50, 40, 40, 50, 20, 40, 20, 30, 140, 80, 50, 50, 150, 20, 100, 30, 50, 160, 130, 50, 30, 50, 10, 20, 80, 50, 60, 10, 120, 10, 50, 60,\n            20, -10, 20, 50, 20, 20, 10, 20, 50, 50, 50, 50, 100, 110, 50, 50, 100, -30, 100, -60, 60, 60, 300, 300, 30, 10, 10, 20, 20, 70, 60, 20, 80, 70, 80,\n            50, 70, 70, 60, 20, 110, 20, 20, 110, 110, 160, 100, 110, 170, 20, -100, 20, 20, 160, 120, 20, 20, 10, 50, 30, 30, 50, 50, 70, 50, 50, 50, -20, 50,\n            300, 300, 30, 30, 50, 50, 55, 20, 50, 50, 40, 20, 60, 100, 20, 30, 20, 30, 22, 20, 20, 20, 220, 240, 50, 130, 40, 170, 200, 200, 200, 200, 180, 200,\n            220, 210, 220, 220, 240, 70, 12, 50, 40, 40, 120, -60, 200, 200, 290, 150, 290, 20, 10, 20, 20, 100, 100, 70, 65, 60, 100, 100, 100, 60, 80, 80, 290,\n            50, 290, 100, 100, 60, 65, 60, 60, 100, 100, 100, 50, 80, 80, 220, 50, 290, 60, 50, 10, 10, 80, 30, 60, 60, 50, 10, 10, 10, 80, 130, 140, 20, 80,\n            100, 110, 110, 100, 130, 100, 130, 100, 100, 130, 130, 120, 140, 20, 80, 200, 200, 290, 140, 290, 60, 50, 20, 20, 65, 40, 60, 60, 50, 10, 20, 20, 20,\n            60, 16, 10, 16, 5, 20, 30, 60, 20, 140, -100, 10, -100, -100, -110, 120, 50, 130, -50, -100, -60, -60, 20, 10, 20, 20, 20, 20, 100, 20, 10, 20, 20,\n            10, 20, 15, 20, 15, 20, 30, 5, 20, 30, 40, 36, 290, 20, 290, 10, 40, 18, 40, 18, 18, 40, 180, 40, 180, 20, 20, 70, 20, 70, 24, 20, 24, 10, 24, 10,\n            20, 50, 18, 40, 18, 10, 18, 10, 18, 10, 18, 40, 190, 40, 190, 12, 10, 10, 12, 10, 12, 10, 10, 20, 50, 20, 20, 20, 10, 50, 30, 30, 15, 20, 15, 20, 30\n        ];\n        this.pathCache = [];\n        this.pathMissing = null;\n        this.ctxReference = null;\n        for (let n = this.GLYPH_DATA.length - 1; n >= 0; n--)\n            this.pathCache[n] = null;\n    }\n    getKerning(ch1, ch2) {\n        const sz = this.KERN_K.length;\n        for (let n = 0; n < sz; n++)\n            if (this.KERN_C1[n] == ch1 && this.KERN_C2[n] == ch2)\n                return -this.KERN_K[n];\n        return 0;\n    }\n    static measureText(txt, size) { return this.main.measureText(txt, size); }\n    measureText(txt, size) {\n        let font = FontData.main;\n        let scale = size / font.UNITS_PER_EM;\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = this.getIndex(ch);\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                continue;\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n        }\n        return [dx * scale, font.ASCENT * scale * font.ASCENT_FUDGE, -font.DESCENT * scale];\n    }\n    static measureWidths(txt, size) { return this.main.measureWidths(txt, size); }\n    measureWidths(txt, size) {\n        let font = FontData.main;\n        let scale = size / font.UNITS_PER_EM;\n        let xpos = [0];\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = this.getIndex(ch);\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                xpos.push(dx * scale);\n                continue;\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n            xpos.push(dx * scale);\n        }\n        return xpos;\n    }\n    getIndex(ch) {\n        return this.UNICODE.indexOf(ch);\n    }\n    getRawGlyph(idx) {\n        return this.GLYPH_DATA[idx];\n    }\n    getGlyphPath(idx) {\n        let path = this.pathCache[idx];\n        if (path != null)\n            return path;\n        path = new Path2D(this.GLYPH_DATA[idx]);\n        this.pathCache[idx] = path;\n        return path;\n    }\n    getMissingPath() {\n        if (!this.pathMissing)\n            this.pathMissing = new Path2D(this.MISSING_DATA);\n        return this.pathMissing;\n    }\n    getOutlineX(idx) { return this.OUTLINE_X[idx].slice(0); }\n    getOutlineY(idx) { return this.OUTLINE_Y[idx].slice(0); }\n    initNativeFont(ctx) {\n        if (ctx == null && this.ctxReference)\n            return;\n        if (ctx == null) {\n            let canvas = new OffscreenCanvas(256, 256);\n            this.ctxReference = canvas.getContext('2d');\n        }\n        else\n            this.ctxReference = ctx;\n    }\n    static measureTextNative(txt, family, size, opt = {}) {\n        return this.main.measureTextNative(txt, family, size, opt);\n    }\n    measureTextNative(txt, family, size, opt = {}) {\n        if (!this.ctxReference)\n            throw 'Calling measureTextNative without having called initNativeFont first';\n        this.ctxReference.save();\n        let pfx = '';\n        if (opt.bold)\n            pfx += 'bold ';\n        if (opt.italic)\n            pfx += 'italic ';\n        this.ctxReference.font = pfx + size + 'px ' + family;\n        let metrics = this.ctxReference.measureText(txt);\n        this.ctxReference.restore();\n        const FUDGE = this.ASCENT_FUDGE * this.ASCENT / this.UNITS_PER_EM;\n        return [metrics.width, size * FUDGE, size * (-this.DESCENT / this.ASCENT) * FUDGE];\n    }\n}\nFontData.main = new FontData();\nexport { FontData };\n//# sourceMappingURL=FontData.js.map","import { FontData } from './FontData';\nexport class OutlineMeasurement {\n    constructor(offsetX, offsetY, pointScale) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.pointScale = pointScale;\n        this.invScale = 1 / pointScale;\n    }\n    scale() { return this.pointScale; }\n    angToX(ax) { return ax * this.pointScale + this.offsetX; }\n    angToY(ay) { return ay * -this.pointScale + this.offsetY; }\n    xToAng(px) { return (px - this.offsetX) * this.invScale; }\n    yToAng(py) { return (py - this.offsetY) * -this.invScale; }\n    yIsUp() { return false; }\n    measureText(str, fontSize) { return FontData.main.measureText(str, fontSize); }\n}\n//# sourceMappingURL=ArrangeMeasurement.js.map","import { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nimport { Graph } from './Graph';\nimport { GeomUtil } from '../util/Geom';\nimport { norm2_xy, norm_xy } from '../util/util';\nexport class PseudoEmbedding {\n    constructor(mol) {\n        this.mol = mol;\n        this.bondMask = null;\n        this.crossings = [];\n    }\n    calculateCrossings() {\n        const { mol, bondMask, crossings } = this;\n        let na = mol.numAtoms, nb = mol.numBonds;\n        let maskCross = Vec.booleanArray(false, na);\n        for (let i = 1; i < nb; i++) {\n            if (bondMask && !bondMask[i - 1])\n                continue;\n            let x1 = mol.atomX(mol.bondFrom(i)), y1 = mol.atomY(mol.bondFrom(i));\n            let x2 = mol.atomX(mol.bondTo(i)), y2 = mol.atomY(mol.bondTo(i));\n            let dx = x2 - x1, dy = y2 - y1;\n            x1 += dx * 0.001;\n            y1 += dy * 0.001;\n            x2 -= dx * 0.001;\n            y2 -= dy * 0.001;\n            for (let j = i + 1; j <= nb; j++) {\n                if (bondMask && !bondMask[j - 1])\n                    continue;\n                let x3 = mol.atomX(mol.bondFrom(j)), y3 = mol.atomY(mol.bondFrom(j));\n                let x4 = mol.atomX(mol.bondTo(j)), y4 = mol.atomY(mol.bondTo(j));\n                dx = x4 - x3;\n                dy = y4 - y3;\n                x3 += dx * 0.001;\n                y3 += dy * 0.001;\n                x4 -= dx * 0.001;\n                y4 -= dy * 0.001;\n                if (GeomUtil.doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4)) {\n                    crossings.push({ bond1: i, bond2: j, higher: 0 });\n                    maskCross[mol.bondFrom(i) - 1] = true;\n                    maskCross[mol.bondTo(i) - 1] = true;\n                    maskCross[mol.bondFrom(j) - 1] = true;\n                    maskCross[mol.bondTo(j) - 1] = true;\n                }\n            }\n        }\n        if (crossings.length == 0)\n            return;\n        let crossRblk = new Set();\n        for (let n = 1; n <= na; n++) {\n            let rblk = mol.atomRingBlock(n);\n            if (rblk > 0)\n                crossRblk.add(rblk);\n        }\n        for (let n = 1; n <= na; n++)\n            if (!maskCross[n - 1]) {\n                let rblk = mol.atomRingBlock(n);\n                if (rblk > 0 && crossRblk.has(rblk))\n                    maskCross[n - 1] = true;\n            }\n        let maskComp = this.connectMaskedComponents(maskCross);\n        let g = Graph.fromMoleculeMask(mol, maskComp);\n        let ccgrp = g.calculateComponentGroups();\n        for (let n = 0; n < ccgrp.length; n++) {\n            for (let i = 0; i < ccgrp[n].length; i++)\n                ccgrp[n][i] = g.getIndex(ccgrp[n][i]);\n            this.embedComponent(ccgrp[n]);\n        }\n    }\n    connectMaskedComponents(imask) {\n        const { mol } = this;\n        let omask = Vec.duplicate(imask);\n        let gmol = Graph.fromMolecule(mol);\n        let na = mol.numAtoms, nb = mol.numBonds;\n        let maskNever = Vec.booleanArray(false, na);\n        while (true) {\n            let anything = false;\n            for (let n = 1; n <= nb; n++) {\n                let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n                let aidx = 0;\n                if (omask[bfr - 1] && !omask[bto - 1])\n                    aidx = bto;\n                else if (omask[bto - 1] && !omask[bfr - 1])\n                    aidx = bfr;\n                else\n                    continue;\n                if (maskNever[aidx - 1])\n                    continue;\n                let g = gmol.clone();\n                g.removeEdge(bfr - 1, bto - 1);\n                let cc = g.calculateComponents();\n                let hit = false;\n                for (let i = 0; i < na; i++)\n                    if (omask[i] && cc[i] == cc[aidx - 1]) {\n                        hit = true;\n                        break;\n                    }\n                if (hit) {\n                    omask[aidx - 1] = true;\n                    anything = true;\n                }\n                else\n                    maskNever[aidx - 1] = true;\n            }\n            if (!anything)\n                break;\n        }\n        return omask;\n    }\n    embedComponent(atoms) {\n        const { mol, crossings } = this;\n        let na = mol.numAtoms, gsz = atoms.length;\n        let amask = Vec.booleanArray(false, na);\n        for (let n = 0; n < gsz; n++)\n            amask[atoms[n] - 1] = true;\n        let z = Vec.numberArray(0, gsz), newZ = new Array(gsz);\n        if (this.seedFromInternalWedges(atoms, amask, z)) { }\n        else if (this.seedFromExternalWedges(atoms, amask, z)) { }\n        else if (this.seedFromPerspective(atoms, amask, z)) { }\n        else if (this.seedFromDensity(atoms, amask, z)) { }\n        else\n            return;\n        let ucount = this.normaliseHeights(z);\n        while (ucount < gsz) {\n            this.expandOutward(z, newZ, atoms, amask);\n            let ncount = this.normaliseHeights(newZ);\n            if (ncount == ucount)\n                break;\n            for (let n = 0; n < gsz; n++)\n                z[n] = newZ[n];\n            ucount = ncount;\n        }\n        for (let cross of crossings) {\n            if (amask[mol.bondFrom(cross.bond1) - 1])\n                this.updateCrossing(cross, atoms, z);\n        }\n    }\n    seedFromInternalWedges(atoms, amask, z) {\n        const { mol } = this;\n        let nb = mol.numBonds;\n        let success = false;\n        for (let n = 1; n <= nb; n++) {\n            let bt = mol.bondType(n);\n            if (bt != Molecule.BONDTYPE_INCLINED && bt != Molecule.BONDTYPE_DECLINED)\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            if (!amask[bfr - 1] || !amask[bto - 1])\n                continue;\n            if (bt == Molecule.BONDTYPE_INCLINED) {\n                z[atoms.indexOf(bfr)] -= 0.5;\n                z[atoms.indexOf(bto)] += 0.5;\n            }\n            else {\n                z[atoms.indexOf(bfr)] += 0.5;\n                z[atoms.indexOf(bto)] -= 0.5;\n            }\n            success = true;\n        }\n        return success;\n    }\n    seedFromExternalWedges(atoms, amask, z) {\n        const { mol } = this;\n        let nb = mol.numBonds;\n        let success = false;\n        for (let n = 1; n <= nb; n++) {\n            let bt = mol.bondType(n);\n            if (bt != Molecule.BONDTYPE_INCLINED && bt != Molecule.BONDTYPE_DECLINED)\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            if (amask[bfr - 1]) {\n                z[atoms.indexOf(bfr)] += bt == Molecule.BONDTYPE_INCLINED ? 1 : -1;\n                success = true;\n            }\n            else if (amask[bto - 1]) {\n                z[atoms.indexOf(bto)] += bt == Molecule.BONDTYPE_INCLINED ? -1 : 1;\n                success = true;\n            }\n        }\n        return success;\n    }\n    seedFromPerspective(atoms, amask, z) {\n        const { mol } = this;\n        let nb = mol.numBonds;\n        let avgdist = 0, maxdist = 0;\n        let count = 0, bidx = 0;\n        for (let n = 1; n <= nb; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            if (!amask[bfr - 1] || !amask[bto - 1])\n                continue;\n            let d = norm_xy(mol.atomX(bfr) - mol.atomX(bto), mol.atomY(bfr) - mol.atomY(bto));\n            avgdist += d;\n            count++;\n            if (d > maxdist) {\n                maxdist = d;\n                bidx = n;\n            }\n        }\n        if (count == 0 || bidx == 0)\n            return false;\n        avgdist /= count;\n        if (maxdist < avgdist * 1.02)\n            return false;\n        z[atoms.indexOf(mol.bondFrom(bidx))] = 1;\n        z[atoms.indexOf(mol.bondTo(bidx))] = 1;\n        return true;\n    }\n    seedFromDensity(atoms, amask, z) {\n        const { mol } = this;\n        let highIdx = 0;\n        let highCongest = 0;\n        for (let i = 0; i < atoms.length; i++) {\n            let x1 = mol.atomX(atoms[i]), y1 = mol.atomY(atoms[i]);\n            let congest = 0;\n            for (let j = 0; j < atoms.length; j++)\n                if (i != j)\n                    congest += 1.0 / (0.001 + norm2_xy(mol.atomX(atoms[j]) - x1, mol.atomY(atoms[j]) - y1));\n            if (congest > highCongest) {\n                highIdx = atoms[i];\n                highCongest = congest;\n            }\n        }\n        if (highIdx == 0)\n            return false;\n        z[atoms.indexOf(highIdx)] = 1;\n        return true;\n    }\n    normaliseHeights(z) {\n        Vec.addTo(z, -Vec.min(z));\n        let eps = Vec.max(z) * 1E-6;\n        let idx = Vec.idxSort(z);\n        let prevZ = -1;\n        let mark = 0;\n        for (let n = 0; n < idx.length; n++) {\n            if (prevZ < 0 || Math.abs(prevZ - z[idx[n]]) > eps)\n                mark++;\n            prevZ = z[idx[n]];\n            z[idx[n]] = mark;\n        }\n        Vec.addTo(z, -0.5 * (1 + Vec.max(z)));\n        return mark;\n    }\n    expandOutward(z, newZ, atoms, amask) {\n        const { mol } = this;\n        let gsz = atoms.length;\n        for (let n = 0; n < gsz; n++)\n            newZ[n] = z[n];\n        for (let n = 0; n < gsz; n++) {\n            let adj = mol.atomAdjList(atoms[n]);\n            for (let i = 0; i < adj.length; i++)\n                if (amask[adj[i] - 1])\n                    newZ[atoms.indexOf(adj[i])] += 0.1 * z[n];\n        }\n    }\n    updateCrossing(cross, atoms, z) {\n        const { mol } = this;\n        let bfr1 = mol.bondFrom(cross.bond1), bto1 = mol.bondTo(cross.bond1);\n        let bfr2 = mol.bondFrom(cross.bond2), bto2 = mol.bondTo(cross.bond2);\n        let idx1 = atoms.indexOf(bfr1), idx2 = atoms.indexOf(bto1);\n        let idx3 = atoms.indexOf(bfr2), idx4 = atoms.indexOf(bto2);\n        if (idx1 < 0 || idx2 < 0 || idx3 < 0 || idx4 < 0)\n            return;\n        let x1a = mol.atomX(bfr1), y1a = mol.atomY(bfr1), x1b = mol.atomX(bto1), y1b = mol.atomY(bto1);\n        let x2a = mol.atomX(bfr2), y2a = mol.atomY(bfr2), x2b = mol.atomX(bto2), y2b = mol.atomY(bto2);\n        let xy = GeomUtil.lineIntersect(x1a, y1a, x1b, y1b, x2a, y2a, x2b, y2b);\n        let dx1 = x1b - x1a, dy1 = y1b - y1a, dx2 = x2b - x2a, dy2 = y2b - y2a;\n        let ext1 = Math.abs(dx1) > Math.abs(dy1) ? (xy[0] - x1a) / dx1 : (xy[1] - y1a) / dy1;\n        let ext2 = Math.abs(dx2) > Math.abs(dy2) ? (xy[0] - x2a) / dx2 : (xy[1] - y2a) / dy2;\n        if (ext1 < 0 || ext1 > 1 || ext2 < 0 || ext2 > 1)\n            return;\n        let z1a = z[idx1], z1b = z[idx2], z2a = z[idx3], z2b = z[idx4];\n        let z1 = z1a + ext1 * (z1b - z1a), z2 = z2a + ext2 * (z2b - z2a);\n        cross.higher = z1 > z2 ? 1 : 2;\n    }\n}\n//# sourceMappingURL=PseudoEmbedding.js.map","import { GeomUtil } from './Geom';\nimport { DEGRAD, fltEqual, norm2_xy, norm_xy, sqr, TWOPI } from './util';\nimport { Vec } from './Vec';\nconst CACHE_SIZE = 1000;\nclass FitRotatedEllipse {\n    constructor(px, py, margin) {\n        this.px = px;\n        this.py = py;\n        this.margin = margin;\n        this.theta = 0;\n        this.stop = false;\n        this.hashKey = JSON.stringify([this.px, this.py]);\n    }\n    calculate() {\n        if (this.lookupCache())\n            return;\n        this.setupParameters();\n        if (this.stop)\n            return;\n        this.currentScore = this.calculateScore(this.cx, this.cy, this.rw, this.rh);\n        this.coarseDiscovery();\n        this.fineImprovement();\n        this.theta = -this.theta;\n        this.saveCache();\n    }\n    getSpline() {\n        return GeomUtil.createBezierEllipse(this.cx, this.cy, this.rw, this.rh, this.theta);\n    }\n    lookupCache() {\n        let hashKey = this.hashKey;\n        let look = FitRotatedEllipse.cacheMap.get(hashKey);\n        if (look) {\n            this.cx = look.cx;\n            this.cy = look.cy;\n            this.rw = look.rw;\n            this.rh = look.rh;\n            this.theta = look.theta;\n            const { cacheVal } = FitRotatedEllipse;\n            for (let n = cacheVal.length - 1; n >= 0; n--)\n                if (cacheVal[n].hashKey == hashKey) {\n                    if (n < cacheVal.length - 1) {\n                        cacheVal.push(cacheVal[n]);\n                        cacheVal.splice(n, 1);\n                    }\n                    break;\n                }\n            return true;\n        }\n        return false;\n    }\n    saveCache() {\n        let hashKey = this.hashKey;\n        const { cacheVal, cacheMap } = FitRotatedEllipse;\n        cacheVal.push(this);\n        cacheMap.set(hashKey, this);\n        while (cacheVal.length > CACHE_SIZE) {\n            cacheMap.delete(cacheVal[0].hashKey);\n            cacheVal.splice(0);\n        }\n    }\n    setupParameters() {\n        const psz = this.psz = this.px.length;\n        const invpsz = this.invpsz = 1.0 / psz;\n        this.cx = Vec.sum(this.px) * invpsz;\n        this.cy = Vec.sum(this.py) * invpsz;\n        let ptheta = new Array(psz), pdist = new Array(psz);\n        for (let n = 0; n < psz; n++) {\n            ptheta[n] = Math.atan2(this.py[n] - this.cy, this.px[n] - this.cx);\n            pdist[n] = norm_xy(this.px[n] - this.cx, this.py[n] - this.cy);\n        }\n        let order = Vec.idxSort(ptheta);\n        this.px = Vec.idxGet(this.px, order);\n        this.py = Vec.idxGet(this.py, order);\n        ptheta = Vec.idxGet(ptheta, order);\n        pdist = Vec.idxGet(pdist, order);\n        let buffX = new Array(psz), buffY = new Array(psz);\n        const rotatedScore = (ptheta, pdist, rtheta) => {\n            for (let n = 0; n < psz; n++) {\n                buffX[n] = pdist[n] * Math.cos(ptheta[n] + rtheta);\n                buffY[n] = pdist[n] * Math.sin(ptheta[n] + rtheta);\n            }\n            let scx = Vec.sum(buffX) * invpsz, scy = Vec.sum(buffY) * invpsz;\n            let devx = 0, devy = 0;\n            for (let n = 0; n < psz; n++) {\n                devx += sqr(buffX[n] - scx);\n                devy += Math.abs(buffY[n] - scy);\n            }\n            return devy / (1 + devx);\n        };\n        let bestScore = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < 360; n++) {\n            let th = n * DEGRAD;\n            let score = rotatedScore(ptheta, pdist, th);\n            if (score < bestScore) {\n                this.theta = th;\n                bestScore = score;\n            }\n        }\n        for (let dth = -1; dth <= 1; dth += 0.05) {\n            let th = this.theta + dth * DEGRAD;\n            let score = rotatedScore(ptheta, pdist, th);\n            if (score < bestScore) {\n                this.theta = th;\n                bestScore = score;\n            }\n        }\n        for (let n = 0; n < psz; n++) {\n            this.px[n] = this.cx + pdist[n] * Math.cos(ptheta[n] + this.theta);\n            this.py[n] = this.cy + pdist[n] * Math.sin(ptheta[n] + this.theta);\n        }\n        this.cx = Vec.sum(this.px) * invpsz;\n        this.cy = Vec.sum(this.py) * invpsz;\n        this.rw = this.rh = 1;\n    }\n    coarseDiscovery() {\n        const { margin } = this;\n        let deltaD = 0.1 * margin, deltaR = 0.5 * deltaD;\n        const DELTA_OPTIONS = [\n            { dx: -1, dy: 0, dw: 0, dh: 0 },\n            { dx: 1, dy: 0, dw: 0, dh: 0 },\n            { dx: 0, dy: -1, dw: 0, dh: 0 },\n            { dx: 0, dy: 1, dw: 0, dh: 0 },\n            { dx: 0, dy: 0, dw: -1, dh: 0 },\n            { dx: 0, dy: 0, dw: 1, dh: 0 },\n            { dx: 0, dy: 0, dw: 0, dh: -1 },\n            { dx: 0, dy: 0, dw: 0, dh: 1 },\n        ];\n        for (let sanity = 0; sanity < 1000; sanity++) {\n            let anything = false;\n            let bestScore = this.currentScore;\n            let bestCX = this.cx, bestCY = this.cy, bestRW = this.rw, bestRH = this.rh;\n            for (let delta of DELTA_OPTIONS) {\n                let newCX = this.cx + delta.dx * deltaD;\n                let newCY = this.cy + delta.dy * deltaD;\n                let newRW = this.rw + delta.dw * deltaR;\n                let newRH = this.rh + delta.dh * deltaR;\n                let newScore = this.calculateScore(newCX, newCY, newRW, newRH);\n                if (newScore > bestScore && !fltEqual(newScore, bestScore)) {\n                    anything = true;\n                    bestScore = newScore;\n                    bestCX = newCX;\n                    bestCY = newCY;\n                    bestRW = newRW;\n                    bestRH = newRH;\n                }\n            }\n            if (!anything)\n                break;\n            this.currentScore = bestScore;\n            this.cx = bestCX;\n            this.cy = bestCY;\n            this.rw = bestRW;\n            this.rh = bestRH;\n        }\n    }\n    fineImprovement() {\n        const { margin } = this;\n        let deltaD = 0.1 * margin, deltaR = 0.5 * deltaD;\n        const REDUCTION = 2.0 / 3;\n        const MAX_REDUCTIONS = 20;\n        for (let reduc = 0; reduc < MAX_REDUCTIONS; reduc++) {\n            let anything = false;\n            let bestScore = this.currentScore;\n            let bestCX = this.cx, bestCY = this.cy, bestRW = this.rw, bestRH = this.rh;\n            for (let dCX = -1; dCX <= 1; dCX++) {\n                let newCX = this.cx + dCX * deltaD;\n                for (let dCY = -1; dCY <= 1; dCY++) {\n                    let newCY = this.cy + dCY * deltaD;\n                    for (let dRW = -1; dRW <= 1; dRW++) {\n                        let newRW = this.rw + dRW * deltaR;\n                        for (let dRH = -1; dRH <= 1; dRH++) {\n                            let newRH = this.rh + dRH * deltaR;\n                            if (dCX == 0 && dCY == 0 && dRW == 0 && dRH == 0)\n                                continue;\n                            let newScore = this.calculateScore(newCX, newCY, newRW, newRH);\n                            if (newScore > bestScore && !fltEqual(newScore, bestScore)) {\n                                anything = true;\n                                bestScore = newScore;\n                                bestCX = newCX;\n                                bestCY = newCY;\n                                bestRW = newRW;\n                                bestRH = newRH;\n                            }\n                        }\n                    }\n                }\n            }\n            if (anything) {\n                this.currentScore = bestScore;\n                this.cx = bestCX;\n                this.cy = bestCY;\n                this.rw = bestRW;\n                this.rh = bestRH;\n            }\n            else {\n                reduc++;\n                deltaD *= REDUCTION;\n                deltaR *= REDUCTION;\n            }\n        }\n    }\n    calculateScore(cx, cy, rw, rh) {\n        const { px, py, margin } = this, psz = px.length;\n        const nseg = 24;\n        let cosTheta = 1, sinTheta = 0;\n        let incrAlpha = TWOPI / nseg;\n        let closestDSQ = Vec.numberArray(Number.POSITIVE_INFINITY, psz);\n        for (let n = 0; n < nseg; n++) {\n            let alpha = n * incrAlpha;\n            let cosAlpha = Math.cos(alpha), sinAlpha = Math.sin(alpha);\n            let dx = rw * cosAlpha * cosTheta - rh * sinAlpha * sinTheta;\n            let dy = rw * cosAlpha * sinTheta + rh * sinAlpha * cosTheta;\n            let d = norm_xy(dx, dy) + margin, eth = Math.atan2(dy, dx);\n            let x = cx + d * Math.cos(eth);\n            let y = cy + d * Math.sin(eth);\n            for (let i = 0; i < psz; i++) {\n                let ii = i == psz - 1 ? 0 : i + 1;\n                if (GeomUtil.doLineSegsIntersect(cx, cy, x, y, px[i], py[i], px[ii], py[ii]))\n                    return 0;\n            }\n            for (let i = 0; i < psz; i++)\n                closestDSQ[i] = Math.min(closestDSQ[i], norm2_xy(x - px[i], y - py[i]));\n        }\n        let proxSum = 0;\n        for (let dsq of closestDSQ)\n            proxSum += 1.0 / (1 + Math.sqrt(dsq));\n        return rw * rh + proxSum;\n    }\n}\nFitRotatedEllipse.cacheVal = [];\nFitRotatedEllipse.cacheMap = new Map();\nexport { FitRotatedEllipse };\n//# sourceMappingURL=FitRotatedEllipse.js.map","import { Vec } from '../util/Vec';\nlet globalInstance = null;\nimport ontoUnits from '../res/data/ontology/units.onto';\nconst ONTOLOGY_SOURCE = {\n    'units': ontoUnits,\n};\nexport class OntologyTree {\n    static get main() { return globalInstance; }\n    static getOntologyKeys() { return Object.keys(ONTOLOGY_SOURCE); }\n    static getOntologyData(key) { return ONTOLOGY_SOURCE[key]; }\n    constructor() {\n        this.roots = [];\n        this.mapTerms = new Map();\n        this.alreadyLoaded = new Set();\n    }\n    static init() {\n        if (globalInstance)\n            return;\n        globalInstance = new OntologyTree();\n        for (let key of this.getOntologyKeys()) {\n            globalInstance.loadFromString(key, this.getOntologyData(key));\n        }\n    }\n    getRoots() {\n        return this.roots;\n    }\n    hasTerm(uri) { return this.mapTerms.has(uri); }\n    getBranch(uri) {\n        return this.mapTerms.get(uri);\n    }\n    getBranchList(root) {\n        if (typeof root == 'string') {\n            let look = this.mapTerms.get(root);\n            if (!look)\n                throw `Unknown branch URI: ${root}`;\n            if (look.length > 1)\n                throw `Ambiguous branch URI occurs more than once: ${root}`;\n            root = look[0];\n        }\n        let list = [];\n        let accumulate = (branch) => {\n            list.push(branch);\n            for (let child of Vec.safeArray(branch.children))\n                accumulate(child);\n        };\n        accumulate(root);\n        return list;\n    }\n    loadFromString(key, text) {\n        if (this.alreadyLoaded.has(key))\n            return;\n        this.alreadyLoaded.add(key);\n        this.loadContent(text);\n    }\n    loadContent(text) {\n        let termList = [];\n        let pos = 0;\n        for (let line of text.split(/\\n/)) {\n            pos++;\n            line = line.trim();\n            if (!line || line.startsWith('#'))\n                continue;\n            let idx = line.indexOf('http');\n            if (idx < 0)\n                throw `Line ${pos} invalid, no URI term: ${line}`;\n            let depth = 0;\n            for (let n = 0; n < idx; n++)\n                if (line.charAt(n) == '-')\n                    depth++;\n            let uri = line.substring(idx);\n            idx = uri.indexOf(' ');\n            if (idx < 0)\n                throw `Line ${pos} invalid, no label: ${line}`;\n            let label = uri.substring(idx + 1);\n            uri = uri.substring(0, idx);\n            let term = null;\n            if (depth == 0)\n                term = this.roots.find((look) => look.uri == uri);\n            if (!term) {\n                term = { uri, label, 'parent': null, 'children': [], depth };\n                if (depth == 0)\n                    this.roots.push(term);\n                else {\n                    for (let n = termList.length - 1; n >= 0; n--)\n                        if (termList[n].depth == depth - 1) {\n                            term.parent = termList[n];\n                            termList[n].children.push(term);\n                            break;\n                        }\n                    if (!term.parent)\n                        throw `Line ${pos} invalid hierarchy, no parent found`;\n                }\n                let list = this.mapTerms.get(uri);\n                if (list)\n                    list.push(term);\n                else\n                    this.mapTerms.set(uri, [term]);\n            }\n            termList.push(term);\n        }\n    }\n    debugString(term) {\n        let lines = [];\n        let emit = (term) => {\n            lines.push('* '.repeat(term.depth) + `<${term.uri}> \"${term.label}\"`);\n            for (let child of term.children)\n                emit(child);\n        };\n        emit(term);\n        return lines.join('\\n');\n    }\n}\n//# sourceMappingURL=OntologyTree.js.map","export default \"http://purl.obolibrary.org/obo/UO_0000000 units\\n- http://purl.obolibrary.org/obo/UO_0000051 concentration units\\n- - http://www.bioassayontology.org/bao#BAO_0000102 -log10[mol/L]\\n- - http://purl.obolibrary.org/obo/UO_0000175 grams per litre (g/L)\\n- - http://www.bioassayontology.org/bao#BAO_0000101 log10[mol/L]\\n- - http://purl.obolibrary.org/obo/UO_0000275 micrograms per litre (ug/L)\\n- - http://purl.obolibrary.org/obo/UO_0000064 micromoles per litre (umol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000273 milligrams per litre (mg/L)\\n- - http://purl.obolibrary.org/obo/UO_0000063 millimoles per litre (mmol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000062 moles per litre (mol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000065 nanomoles per litre (nmol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000066 picomoles per litre (pmol/L)\\n- http://purl.obolibrary.org/obo/UO_0000186 dimensionless unit\\n- - http://www.bioassayontology.org/bao#BAO_0080023 binary (true/false)\\n- - http://purl.obolibrary.org/obo/UO_0000187 percent\";","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {Vec} from 'webmolkit/util/Vec';\n\n/*\n\tTry to arrange a list of boxes into a more rectangular pattern, which has a better ratio than stacking everything vertically.\n*/\n\nenum SquarePackingSpring\n{\n\tStrong = 0,\n\tMedium = 1,\n\tWeak = 2,\n}\n\ninterface SquarePackingCandidate\n{\n\tidxStart:number;\n\tsprings:SquarePackingSpring[];\n\tlayout?:Box[];\n\toutline?:Size;\n\tscore?:number; // lower is better\n\thash?:string;\n}\n\ninterface SquarePackingSegment\n{\n\ty:number;\n\tx1:number;\n\tx2:number;\n}\n\nexport class SquarePacking\n{\n\tpublic outline:Size;\n\tpublic layout:Box[] = null;\n\n\tprivate wantRatio:number;\n\n\t// --------------------- public methods ---------------------\n\n\t// sets up the object with the mandatory information\n\tconstructor(private packSize:Size, private boxes:Box[], private hspace:number, private vspace:number)\n\t{\n\t\tthis.wantRatio = packSize.w / packSize.h;\n\n\t\t/*\n\t\t// !! temporary validation\n\t\tlet segs:SquarePackingSegment[] =\n\t\t[\n\t\t\t{'y': 0, 'x1': 0, 'x2': 1},\n\t\t\t{'y': 2, 'x1': 1, 'x2': 3},\n\t\t\t{'y': 1, 'x1': 3, 'x2': Number.POSITIVE_INFINITY}\n\t\t];\n\t\tthis.mergeSegmentAbove(segs, {'y': 2.5, 'x1': 1.5, 'x2': 2.5});\n\t\t//this.mergeSegmentBelow(segs, {'y': -1.5, 'x1': 2, 'x2': 3.5});\n\t\tfor (let seg of segs) console.log(JSON.stringify(seg));\n\t\tthrow 'blork';*/\n\t}\n\n\t// carries out the arrangement: returns whether it got something good\n\tpublic pack():boolean\n\t{\n\t\tlet candidates:SquarePackingCandidate[] = [];\n\t\tlet num = this.boxes.length;\n\t\tfor (let n = 0; n < num; n++)\n\t\t{\n\t\t\tlet cand:SquarePackingCandidate = {idxStart: n, springs: Vec.anyArray(SquarePackingSpring.Weak, num)};\n\t\t\tcand.hash = cand.idxStart + '/' + cand.springs;\n\t\t\tthis.processCandidate(cand);\n\t\t\tcandidates.push(cand);\n\t\t}\n\n\t\tconst KEEP = 100;\n\t\tcandidates = candidates.sort((c1, c2) => c1.score - c2.score).slice(0, KEEP);\n\n\t\tfor (let sanity = 100; sanity > 0; sanity--)\n\t\t{\n\t\t\tlet hashes = new Set<string>();\n\t\t\tfor (let cand of candidates) hashes.add(cand.hash);\n\n\t\t\tlet batch = candidates.slice(0);\n\t\t\tfor (let cand of candidates) for (let n = 0; n < num; n++) if (n != cand.idxStart)\n\t\t\t{\n\t\t\t\tfor (let sp of [SquarePackingSpring.Strong, SquarePackingSpring.Medium, SquarePackingSpring.Weak]) if (cand.springs[n] != sp)\n\t\t\t\t{\n\t\t\t\t\tlet mod:SquarePackingCandidate = {idxStart: cand.idxStart, springs: cand.springs.slice(0)};\n\t\t\t\t\tmod.springs[n] = sp;\n\t\t\t\t\tmod.hash = mod.idxStart + '/' + mod.springs;\n\t\t\t\t\tif (hashes.has(mod.hash)) continue;\n\t\t\t\t\tthis.processCandidate(mod);\n\t\t\t\t\tbatch.push(mod);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbatch = batch.sort((c1, c2) => c1.score - c2.score).slice(0, KEEP);\n\n\t\t\tlet same = true;\n\t\t\tfor (let n = 0; n < candidates.length && n < batch.length; n++) if (candidates[n].hash != batch[n].hash) {same = false; break;}\n\n\t\t\tif (!same) break;\n\n\t\t\tcandidates = batch;\n\t\t}\n\n\t\tlet best = candidates[0];\n\n\t\tthis.outline = best.outline;\n\t\tthis.layout = best.layout;\n\t\tlet minY = Vec.min(this.layout.map((b) => b.y));\n\t\tfor (let box of this.layout) box.y -= minY;\n\n\t\treturn true;\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\tprivate processCandidate(cand:SquarePackingCandidate):void\n\t{\n\t\tlet len = this.boxes.length;\n\t\tcand.layout = this.boxes.map((box) => new Box(0, 0, box.w, box.h));\n\t\tlet placed = Vec.booleanArray(false, len);\n\t\tplaced[cand.idxStart] = true;\n\n\t\tlet placeAbove = (idx:number, spring:SquarePackingSpring):void =>\n\t\t{\n\t\t\tlet box = cand.layout[idx];\n\t\t\tlet segs:SquarePackingSegment[] = null;\n\t\t\tfor (let n = idx + 1; n < len; n++) if (placed[n])\n\t\t\t{\n\t\t\t\tlet ref = cand.layout[n];\n\t\t\t\tlet newsegs:SquarePackingSegment[] = [];\n\t\t\t\tif (ref.minX() > 0) newsegs.push({y: ref.midY() - this.vspace, x1: 0, x2: ref.minX() - this.hspace});\n\t\t\t\tnewsegs.push({y: ref.minY() - this.vspace, x1: Math.max(0, ref.minX() - this.hspace), x2: ref.maxX() + this.hspace});\n\t\t\t\tnewsegs.push({y: ref.minY() - this.vspace + 0.5 * box.h, x1: ref.maxX() + this.hspace, x2: Number.POSITIVE_INFINITY});\n\t\t\t\tif (segs == null) segs = newsegs;\n\t\t\t\telse for (let nseg of newsegs) this.mergeSegmentAbove(segs, nseg);\n\t\t\t}\n\n\t\t\tlet bestX = 0, bestY = Number.NEGATIVE_INFINITY;\n\t\t\tfor (let n = 0; n < segs.length; n++)\n\t\t\t{\n\t\t\t\tlet x = segs[n].x1, y = Number.POSITIVE_INFINITY;\n\t\t\t\tfor (let i = n; i < segs.length; i++)\n\t\t\t\t{\n\t\t\t\t\ty = Math.min(y, segs[i].y);\n\t\t\t\t\tif (box.w < segs[i].x2 - x) break;\n\t\t\t\t}\n\t\t\t\tif (y > bestY) [bestX, bestY] = [x, y];\n\t\t\t\tif (spring == SquarePackingSpring.Strong) break;\n\t\t\t\tif (spring == SquarePackingSpring.Medium && x > 0.5 * this.packSize.w) break;\n\t\t\t}\n\t\t\tbox.x = bestX;\n\t\t\tbox.y = bestY - box.h;\n\t\t\tplaced[idx] = true;\n\t\t};\n\t\tlet placeBelow = (idx:number, spring:SquarePackingSpring):void =>\n\t\t{\n\t\t\tlet box = cand.layout[idx];\n\t\t\tlet segs:SquarePackingSegment[] = null;\n\t\t\tfor (let n = idx - 1; n >= 0; n--) if (placed[n])\n\t\t\t{\n\t\t\t\tlet ref = cand.layout[n];\n\t\t\t\tlet newsegs:SquarePackingSegment[] = [];\n\t\t\t\tif (ref.minX() > 0) newsegs.push({y: ref.midY() + this.vspace, x1: 0, x2: ref.minX() - this.hspace});\n\t\t\t\tnewsegs.push({y: ref.maxY() + this.vspace, x1: Math.max(0, ref.minX() - this.hspace), x2: ref.maxX() + this.hspace});\n\t\t\t\tnewsegs.push({y: ref.maxY() + this.vspace - 0.5 * box.h, x1: ref.maxX() + this.hspace, x2: Number.POSITIVE_INFINITY});\n\t\t\t\tif (segs == null) segs = newsegs;\n\t\t\t\telse for (let nseg of newsegs) this.mergeSegmentBelow(segs, nseg);\n\t\t\t}\n\n\t\t\tlet bestX = 0, bestY = Number.POSITIVE_INFINITY;\n\t\t\tfor (let n = 0; n < segs.length; n++)\n\t\t\t{\n\t\t\t\tlet x = segs[n].x1, y = Number.NEGATIVE_INFINITY;\n\t\t\t\tfor (let i = n; i < segs.length; i++)\n\t\t\t\t{\n\t\t\t\t\ty = Math.max(y, segs[i].y);\n\t\t\t\t\tif (box.w < segs[i].x2 - x) break;\n\t\t\t\t}\n\t\t\t\tif (y < bestY) [bestX, bestY] = [x, y];\n\t\t\t\tif (spring == SquarePackingSpring.Strong) break;\n\t\t\t\tif (spring == SquarePackingSpring.Medium && x > 0.5 * this.packSize.w) break;\n\t\t\t}\n\t\t\tbox.x = bestX;\n\t\t\tbox.y = bestY;\n\t\t\tplaced[idx] = true;\n\t\t};\n\n\t\tfor (let d = 1; d < len; d++)\n\t\t{\n\t\t\tlet i1 = cand.idxStart - d, i2 = cand.idxStart + d;\n\t\t\tif (i1 >= 0) placeAbove(i1, cand.springs[i1]);\n\t\t\tif (i2 < len) placeBelow(i2, cand.springs[i2]);\n\t\t}\n\n\t\tlet loX = 0, hiX = Vec.max(cand.layout.map((box) => box.maxX()));\n\t\tlet loY = Vec.min(cand.layout.map((box) => box.minY())), hiY = Vec.max(cand.layout.map((box) => box.maxY()));\n\t\tcand.outline = new Size(hiX - loX, hiY - loY);\n\t\tlet ratio = cand.outline.w / cand.outline.h;\n\t\tcand.score = Math.abs(ratio - this.wantRatio) * (cand.outline.w + cand.outline.h);\n\t\tcand.score += Vec.sum((cand.layout.map((box) => box.x)));\n\t\tfor (let n = 0; n < cand.layout.length - 1; n++) cand.score += Math.max(0, cand.layout[n].minY() - cand.layout[n].maxY());\n\t}\n\n\tprivate mergeSegmentAbove(segs:SquarePackingSegment[], merge:SquarePackingSegment):void\n\t{\n\t\tfor (let look of segs)\n\t\t{\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2 && merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) return; // completely buried\n\t\t\t\tsegs.push({y: look.y, x1: merge.x2, x2: look.x2});\n\t\t\t\tlook.x2 = merge.x1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) look.x2 = merge.x1; else merge.x1 = look.x2;\n\t\t\t}\n\t\t\tif (merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) look.x1 = merge.x2; else merge.x2 = look.x1;\n\t\t\t}\n\t\t}\n\t\tfor (let n = segs.length - 1; n >= 0; n--) if (segs[n].x1 >= segs[n].x2) segs.splice(n, 1);\n\t\tif (merge.x1 < merge.x2)\n\t\t{\n\t\t\tsegs.push(merge);\n\t\t\tsegs.sort((seg1, seg2) => seg1.x1 - seg2.x1);\n\t\t}\n\t}\n\tprivate mergeSegmentBelow(segs:SquarePackingSegment[], merge:SquarePackingSegment):void\n\t{\n\t\tfor (let look of segs)\n\t\t{\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2 && merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) return; // completely buried\n\t\t\t\tsegs.push({y: look.y, x1: merge.x2, x2: look.x2});\n\t\t\t\tlook.x2 = merge.x1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) look.x2 = merge.x1; else merge.x1 = look.x2;\n\t\t\t}\n\t\t\tif (merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) look.x1 = merge.x2; else merge.x2 = look.x1;\n\t\t\t}\n\t\t}\n\t\tfor (let n = segs.length - 1; n >= 0; n--) if (segs[n].x1 >= segs[n].x2) segs.splice(n, 1);\n\t\tif (merge.x1 < merge.x2)\n\t\t{\n\t\t\tsegs.push(merge);\n\t\t\tsegs.sort((seg1, seg2) => seg1.x1 - seg2.x1);\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {ArrangeMolecule} from 'webmolkit/gfx/ArrangeMolecule';\nimport {ArrangeMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MoleculeStream} from 'webmolkit/io/MoleculeStream';\nimport {formatDouble} from 'webmolkit/util/util';\nimport {OntologyTree} from 'webmolkit/data/OntologyTree';\nimport {SquarePacking} from './SquarePacking';\nimport {FontData} from 'webmolkit/gfx/FontData';\nimport {MixfileComponent} from './Mixfile';\nimport {NormMixture} from './NormMixture';\nimport {Mixture} from './Mixture';\n\n/*\n\tArranging a Mixfile: will create a tree layout for all of the components, according to parameters.\n*/\n\nexport enum ArrangeMixtureLineSource\n{\n\tName,\n\tQuantity,\n\tIdentifier,\n\tMeta,\n}\n\nexport interface ArrangeMixtureLine\n{\n\ttext:string;\n\tcol:number;\n\tsource:ArrangeMixtureLineSource;\n}\n\nexport interface ArrangeMixtureComponent\n{\n\torigin:number[];\n\tcontent:MixfileComponent;\n\tparentIdx:number;\n\n\tboundary?:Box; // outer boundary (position on canvas)\n\n\tmol?:Molecule;\n\tmolLayout?:ArrangeMolecule;\n\tmolBox?:Box;\n\n\tnameBox?:Box;\n\tnameLines?:ArrangeMixtureLine[];\n\tfontSize?:number;\n\n\toutline?:Box; // inner boundary (surrounds molecule, names, etc.)\n\n\tisCollapsed?:boolean;\n\tcollapseBox?:Box;\n}\n\nconst PADDING = 0.25;\nconst VSPACE = 0.5;\nconst HSPACE = 1;\nconst COLLAPSE_SIZE = 0.3;\nconst COLLAPSE_GAP = 0.05;\n\nexport class ArrangeMixture\n{\n\tpublic norm:NormMixture = null; // optional: contents may be used for additional decoration\n\n\tpublic scale:number;\n\tpublic nameFontSize:number;\n\tpublic width = 0;\n\tpublic height = 0;\n\n\tpublic components:ArrangeMixtureComponent[] = [];\n\n\t// parameters to influence the drawing\n\tpublic limitStructW:number;\n\tpublic limitStructH:number;\n\tpublic minBoxSize:Size = null;\n\tpublic showCollapsors = false; // if true, boxes for [+]/[-] will be created for interactive use\n\tpublic collapsedBranches:number[][] = []; // any origin specified in this list will not display its children\n\tpublic packBranches:Size = null; // if defined, makes an effort to pack branches into the box size\n\tpublic hardwrapName:number; // name width guaranteed not longer than this\n\tpublic softwrapName:number; // name wrapping at selected characters kicks in after this width\n\tpublic includeIdentifiers = true; // if switched off, identifiers won't be included in text\n\n\t// --------------------- public methods ---------------------\n\n\t// sets up the object with the mandatory information\n\tconstructor(public mixture:Mixture, public measure:ArrangeMeasurement, public policy:RenderPolicy)\n\t{\n\t\tthis.scale = policy.data.pointScale;\n\t\tthis.nameFontSize = 0.5 * this.scale;\n\t\tthis.limitStructW = this.limitStructH = this.scale * 10;\n\t\tthis.hardwrapName = 12 * this.scale;\n\t\tthis.softwrapName = 8 * this.scale;\n\t}\n\n\t// carries out the arrangement\n\tpublic arrange():void\n\t{\n\t\tthis.createComponents();\n\t\tthis.layoutSubComponents(0);\n\t\tthis.contractComponents();\n\n\t\t// normalize boundaries\n\t\tlet outline:Box = null;\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tif (outline) outline = outline.union(comp.boundary); else outline = comp.boundary;\n\t\t}\n\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tcomp.boundary.x -= outline.x;\n\t\t\tcomp.boundary.y -= outline.y;\n\n\t\t\tif (comp.molLayout)\n\t\t\t{\n\t\t\t\tlet b1 = comp.boundary, b2 = comp.molBox;\n\t\t\t\tcomp.molLayout.squeezeInto(b1.x + b2.x, b1.y + b2.y, b2.w, b2.h);\n\t\t\t}\n\t\t}\n\t\tthis.width = outline.w;\n\t\tthis.height = outline.h;\n\t}\n\n\t// resize the whole thing\n\tpublic scaleComponents(modScale:number):void\n\t{\n\t\tif (modScale == 1) return;\n\n\t\tthis.scale *= modScale;\n\t\tthis.width *= modScale;\n\t\tthis.height *= modScale;\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tcomp.boundary.scaleBy(modScale);\n\t\t\tcomp.outline.scaleBy(modScale);\n\t\t\tif (comp.molBox)\n\t\t\t{\n\t\t\t\tcomp.molBox.scaleBy(modScale);\n\t\t\t\tif (comp.molLayout)\n\t\t\t\t{\n\t\t\t\t\tlet mx = comp.boundary.x + comp.molBox.x, my = comp.boundary.y + comp.molBox.y;\n\t\t\t\t\tcomp.molLayout.squeezeInto(mx, my, comp.molBox.w, comp.molBox.h);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (comp.nameBox) comp.nameBox.scaleBy(modScale);\n\t\t\tif (comp.collapseBox) comp.collapseBox.scaleBy(modScale);\n\t\t\tcomp.fontSize *= modScale;\n\t\t}\n\t}\n\n\t// returns the index of the indicated origin vector, or -1 if not present\n\tpublic findComponent(origin:number[]):number\n\t{\n\t\tfor (let n = 0; n < this.components.length; n++) if (Vec.equals(this.components[n].origin, origin)) return n;\n\t\treturn -1;\n\t}\n\n\t// turn quantity info into a readable string\n\tpublic static formatQuantity(mixcomp:MixfileComponent):string\n\t{\n\t\tlet prec = (val:number):string =>\n\t\t{\n\t\t\tif (val == null) return '';\n\t\t\tif (val > 10000) return Math.round(val).toString();\n\t\t\tlet str = val.toPrecision(6);\n\t\t\tif (str.indexOf('e') >= 0 || str.indexOf('.') < 0) return str;\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tif (str.endsWith('0')) str = str.substring(0, str.length - 1);\n\t\t\t\telse if (str.endsWith('.')) {str = str.substring(0, str.length - 1); break;}\n\t\t\t\telse break;\n\t\t\t}\n\t\t\treturn str;\n\t\t};\n\n\t\tif (mixcomp.ratio)\n\t\t{\n\t\t\tif (mixcomp.ratio.length == 2) return prec(mixcomp.ratio[0]) + '/' + prec(mixcomp.ratio[1]);\n\t\t\treturn null; // invalid ratio\n\t\t}\n\n\t\tif (mixcomp.quantity == null) return null;\n\n\t\tlet str = '';\n\t\tif (mixcomp.relation && mixcomp.relation != '=')\n\t\t{\n\t\t\tlet rel = mixcomp.relation;\n\t\t\tif (rel == '>=') rel = '\\u{2265}'; else if (rel == '<=') rel = '\\u{2264}';\n\t\t\tstr += rel /*+ ' '*/;\n\t\t}\n\t\tif (mixcomp.quantity instanceof Array)\n\t\t{\n\t\t\tif (mixcomp.quantity.length == 0) return;\n\t\t\tstr += prec(mixcomp.quantity[0]);\n\t\t\tif (mixcomp.quantity.length >= 2) str += ' - ' + prec(mixcomp.quantity[1]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr += prec(mixcomp.quantity); // is presumed to be scalar\n\t\t\tif (mixcomp.error)\n\t\t\t{\n\t\t\t\t// TODO: match the significant figures more carefully\n\t\t\t\tstr += ' \\u{00B1} ' + prec(mixcomp.error);\n\t\t\t}\n\t\t}\n\n\t\tif (mixcomp.units)\n\t\t{\n\t\t\tif (!mixcomp.units.startsWith('%')) str += ' ';\n\t\t\tstr += mixcomp.units;\n\t\t}\n\n\t\treturn str;\n\t}\n\n\t// if the component has a \"standardised\" quantity, format and return\n\tprivate formatNormQuantity(origin:number[]):string\n\t{\n\t\tif (!this.norm) return;\n\t\tlet note = this.norm.findNote(origin);\n\t\tif (!note || !note.concQuantity) return;\n\n\t\tlet comp:MixfileComponent =\n\t\t{\n\t\t\tquantity: note.concQuantity,\n\t\t\terror: note.concError,\n\t\t\tunits: note.concUnits,\n\t\t\trelation: note.concRelation,\n\t\t};\n\t\treturn ArrangeMixture.formatQuantity(comp);\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\t// instantiate each component in the diagram (which includes pluses and arrows)\n\tprivate createComponents():void\n\t{\n\t\t// assemble the components into a flat hierarchy\n\t\tlet examineBranch = (origin:number[], mixcomp:MixfileComponent, idx:number):void =>\n\t\t{\n\t\t\tlet comp:ArrangeMixtureComponent = {origin: origin, content: mixcomp, parentIdx: idx};\n\t\t\tlet parentIdx = this.components.push(comp) - 1;\n\n\t\t\t// see if it's been indicated as collapsed\n\t\t\tcomp.isCollapsed = false;\n\t\t\tfor (let origin of this.collapsedBranches) if (Vec.equals(origin, comp.origin)) comp.isCollapsed = true;\n\n\t\t\tif (mixcomp.contents && !comp.isCollapsed) for (let n = 0; n < mixcomp.contents.length; n++)\n\t\t\t{\n\t\t\t\tlet subOrigin = Vec.append(origin, n);\n\t\t\t\texamineBranch(subOrigin, mixcomp.contents[n], parentIdx);\n\t\t\t}\n\t\t};\n\t\texamineBranch([], this.mixture.mixfile, -1);\n\n\t\tlet padding = PADDING * this.scale;\n\n\t\t// do the sizing for each component\n\t\tfor (let [idx, comp] of this.components.entries())\n\t\t{\n\t\t\tlet mixcomp = comp.content;\n\n\t\t\t// handle molecule, if any\n\t\t\tif (mixcomp.molfile) comp.mol = MoleculeStream.readUnknown(mixcomp.molfile);\n\t\t\tif (comp.mol)\n\t\t\t{\n\t\t\t\tcomp.molLayout = new ArrangeMolecule(comp.mol, this.measure, this.policy);\n\t\t\t\tcomp.molLayout.arrange();\n\t\t\t\tcomp.molLayout.squeezeInto(0, 0, this.limitStructW, this.limitStructH);\n\t\t\t\tlet bounds = comp.molLayout.determineBoundary();\n\t\t\t\tcomp.molBox = new Box(padding, padding, Math.ceil(bounds[2] - bounds[0]), Math.ceil(bounds[3] - bounds[1]));\n\t\t\t}\n\t\t\telse comp.molBox = Box.zero();\n\n\t\t\t// handle name, or other content needing representation\n\t\t\tcomp.nameLines = [];\n\t\t\tif (mixcomp.name) this.wrapSplitName(comp.nameLines, mixcomp.name, 0x000000, ArrangeMixtureLineSource.Name);\n\n\t\t\t// (... synonyms, and linewrapping ...)\n\t\t\tlet qline = ArrangeMixture.formatQuantity(mixcomp);\n\t\t\tif (qline) comp.nameLines.push({text: qline, col: 0x000000, source: ArrangeMixtureLineSource.Quantity});\n\n\t\t\tqline = this.formatNormQuantity(comp.origin);\n\t\t\tif (qline) comp.nameLines.push({text: `(${qline})`, col: 0x808080, source: ArrangeMixtureLineSource.Quantity});\n\n\t\t\tif (this.includeIdentifiers && mixcomp.identifiers) for (let key in mixcomp.identifiers)\n\t\t\t{\n\t\t\t\tlet line = key + ' ';\n\t\t\t\tlet val = mixcomp.identifiers[key];\n\t\t\t\tif (val instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tfor (let n = 0; n < val.length; n++) line += (n == 0 ? '' : ', ') + val[n];\n\t\t\t\t}\n\t\t\t\telse line += val;\n\t\t\t\tcomp.nameLines.push({text: this.truncateEllipsis(line), col: 0x42007E, source: ArrangeMixtureLineSource.Identifier});\n\t\t\t}\n\t\t\tif (mixcomp.metadata) for (let meta of mixcomp.metadata)\n\t\t\t{\n\t\t\t\tlet metaString = (m:string | number):string =>\n\t\t\t\t{\n\t\t\t\t\tif (typeof m == 'number') return formatDouble(m, 4);\n\t\t\t\t\tif (!OntologyTree.main) return m;\n\t\t\t\t\tlet branch = OntologyTree.main.getBranch(m);\n\t\t\t\t\tif (Vec.notBlank(branch)) return branch[0].label;\n\t\t\t\t\treturn m;\n\t\t\t\t};\n\t\t\t\tlet bits:string[] = [];\n\t\t\t\tif (Array.isArray(meta)) bits = meta.map((m) => metaString(m)); else bits = [metaString(meta as string | number)];\n\t\t\t\tcomp.nameLines.push({text: bits.join(' '), col: 0x002B88, source: ArrangeMixtureLineSource.Meta});\n\t\t\t}\n\n\t\t\tcomp.nameBox = new Box(padding, padding);\n\t\t\tcomp.fontSize = this.nameFontSize;\n\t\t\tfor (let n = 0; n < comp.nameLines.length; n++)\n\t\t\t{\n\t\t\t\tlet wad = this.measure.measureText(comp.nameLines[n].text, comp.fontSize);\n\t\t\t\tcomp.nameBox.w = Math.max(comp.nameBox.w, wad[0]);\n\t\t\t\tcomp.nameBox.h += wad[1] + (n > 0 ? wad[2] * 2 : 0);\n\t\t\t}\n\n\t\t\tcomp.outline = Box.zero();\n\t\t\tcomp.outline.w = Math.max(comp.molBox.w, comp.nameBox.w) + 2 * padding;\n\t\t\tcomp.outline.h = comp.molBox.h + comp.nameBox.h + 2 * padding;\n\t\t\tif (comp.molBox.notEmpty() && comp.nameBox.notEmpty())\n\t\t\t{\n\t\t\t\tcomp.outline.h += padding;\n\t\t\t\tcomp.nameBox.y += comp.molBox.h + padding;\n\t\t\t\tcomp.molBox.w = comp.nameBox.w = Math.max(comp.molBox.w, comp.nameBox.w);\n\t\t\t}\n\n\t\t\tif (this.minBoxSize)\n\t\t\t{\n\t\t\t\tlet minsz = this.minBoxSize;\n\t\t\t\tlet dw = minsz.w - comp.outline.w, dh = minsz.h - comp.outline.h;\n\t\t\t\tif (dw > 0)\n\t\t\t\t{\n\t\t\t\t\tcomp.outline.w += dw;\n\t\t\t\t\tcomp.molBox.w += dw;\n\t\t\t\t}\n\t\t\t\tif (dh > 0)\n\t\t\t\t{\n\t\t\t\t\tcomp.outline.h += dh;\n\t\t\t\t\tcomp.molBox.h += dh;\n\t\t\t\t\tcomp.nameBox.y += dh;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcomp.boundary = comp.outline.clone();\n\n\t\t\tif ((this.showCollapsors || comp.isCollapsed) && Vec.notBlank(comp.content.contents))\n\t\t\t{\n\t\t\t\tlet gap = COLLAPSE_GAP * this.scale, wh = COLLAPSE_SIZE * this.scale;\n\t\t\t\tcomp.collapseBox = new Box(comp.boundary.maxX() + gap, comp.boundary.midY() - 0.5 * wh, wh, wh);\n\t\t\t\tcomp.boundary.w += gap + wh;\n\t\t\t}\n\t\t}\n\t}\n\n\t// arranges all of the subcomponents for a given index, positioning them relative to the current position; returns the indices of\n\t// the entire branch, for subsequent touchup\n\tprivate layoutSubComponents(idx:number):number[]\n\t{\n\t\tlet wholeBranch:number[] = [idx];\n\t\tlet branchBlock:number[][] = [];\n\t\tlet branchBox:Box[] = [];\n\n\t\tlet totalWidth = 0, totalHeight = 0;\n\n\t\tfor (let n = idx + 1; n < this.components.length; n++)\n\t\t{\n\t\t\tlet comp = this.components[n];\n\t\t\tif (comp.parentIdx != idx) continue;\n\n\t\t\tlet branch = this.layoutSubComponents(n);\n\t\t\tif (branch.length == 0) continue;\n\n\t\t\tlet box:Box = null;\n\t\t\tfor (let i of branch)\n\t\t\t{\n\t\t\t\twholeBranch.push(i);\n\t\t\t\tlet bound = this.components[i].boundary;\n\t\t\t\tif (box) box = box.union(bound); else box = bound;\n\t\t\t}\n\n\t\t\tbranchBlock.push(branch);\n\t\t\tbranchBox.push(box);\n\n\t\t\ttotalWidth = Math.max(totalWidth, box.w);\n\t\t\ttotalHeight += box.h;\n\t\t}\n\t\tif (branchBlock.length == 0) return wholeBranch;\n\n\t\tlet hspace = HSPACE * this.scale, vspace = VSPACE * this.scale;\n\t\ttotalHeight += vspace * (branchBlock.length - 1);\n\n\t\tlet cbox = this.components[idx].boundary;\n\t\tlet x = cbox.maxX() + hspace;\n\n\t\t// special case: may try to pack the boxes into a smaller area rather than vertically on top of each other\n\t\tif (this.packBranches && branchBlock.length > 2 && totalHeight > this.packBranches.h)\n\t\t{\n\t\t\tlet packSize = this.packBranches.clone();\n\t\t\tfor (let box of branchBox) packSize.h = Math.max(packSize.h, box.h); // if a sub-box is bigger than overall, no need to limit it further\n\n\t\t\tlet sq = new SquarePacking(packSize, branchBox, /*hspace*/ vspace, vspace);\n\t\t\tif (sq.pack())\n\t\t\t{\n\t\t\t\tlet y = cbox.midY() - 0.5 * sq.outline.h;\n\t\t\t\tfor (let n = 0; n < branchBlock.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet box = sq.layout[n];\n\t\t\t\t\tlet dx = x - branchBox[n].x + box.x, dy = y - branchBox[n].y + box.y;\n\t\t\t\t\tfor (let i of branchBlock[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.components[i].boundary.x += dx;\n\t\t\t\t\t\tthis.components[i].boundary.y += dy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn wholeBranch;\n\t\t\t}\n\t\t}\n\n\t\t// !! note: not guaranteed that x is high enough to not interfere with other boxes; will need a post-check of some kind, maybe here,\n\t\t//    maybe further down the line\n\n\t\tlet y = cbox.midY() - 0.5 * totalHeight;\n\t\tfor (let n = 0; n < branchBlock.length; n++)\n\t\t{\n\t\t\tlet dx = x - branchBox[n].x, dy = y - branchBox[n].y;\n\t\t\tfor (let i of branchBlock[n])\n\t\t\t{\n\t\t\t\tthis.components[i].boundary.x += dx;\n\t\t\t\tthis.components[i].boundary.y += dy;\n\t\t\t}\n\t\t\ty += branchBox[n].h + vspace;\n\t\t}\n\n\t\treturn wholeBranch;\n\t}\n\n\t// component layout is done, but may be able to \"reel in\" some of the branches to make it smaller\n\tprivate contractComponents():void\n\t{\n\t\tlet allChildren:number[][] = [];\n\t\tfor (let n = 0; n < this.components.length; n++)\n\t\t{\n\t\t\tallChildren.push([]);\n\t\t\tfor (let idx = this.components[n].parentIdx; idx >= 0; idx = this.components[idx].parentIdx) allChildren[idx].push(n);\n\t\t}\n\n\t\tlet hspace = HSPACE * this.scale, padding = PADDING * this.scale;\n\n\t\twhile (true)\n\t\t{\n\t\t\tlet anything = false;\n\n\t\t\tfor (let n = 1; n < allChildren.length; n++)\n\t\t\t{\n\t\t\t\tlet pidx = this.components[n].parentIdx;\n\t\t\t\tlet boundX = this.components[pidx].boundary.maxX() + hspace;\n\t\t\t\tlet dx = this.components[n].boundary.minX() - boundX; // how far to move to the left\n\t\t\t\tif (dx < 1) continue; // no room to contract\n\n\t\t\t\tlet idxInside = [n, ...allChildren[n]];\n\t\t\t\tlet idxOutside = Vec.identity0(allChildren.length).filter((idx) => !idxInside.includes(idx));\n\n\t\t\t\tfor (let i of idxInside)\n\t\t\t\t{\n\t\t\t\t\tlet box1 = this.components[i].boundary.withGrow(padding, padding);\n\t\t\t\t\tfor (let j of idxOutside)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet box2 = this.components[j].boundary;\n\t\t\t\t\t\tif (box2.minX() > box1.maxX()) continue;\n\t\t\t\t\t\tif (box1.minY() > box2.maxY() || box1.maxY() < box2.minY()) continue;\n\n\t\t\t\t\t\tdx = Math.min(dx, box1.minX() - box2.maxX());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dx > 1)\n\t\t\t\t{\n\t\t\t\t\tfor (let n of idxInside) this.components[n].boundary.x -= dx;\n\t\t\t\t\tanything = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!anything) break;\n\t\t}\n\t}\n\n\t// if the given string is longer than the soft/hard limit, looks to break it up into smaller pieces; each of them is\n\t// appended to the list parameter\n\tprivate wrapSplitName(list:ArrangeMixtureLine[], text:string, col:number, source:ArrangeMixtureLineSource):void\n\t{\n\t\tif (!text) return;\n\t\tlet xpos = FontData.measureWidths(text, this.nameFontSize);\n\t\tif (Vec.last(xpos) <= this.softwrapName)\n\t\t{\n\t\t\tlist.push({text, col, source});\n\t\t\treturn;\n\t\t}\n\n\t\tlet p = 0;\n\t\tfor (; xpos[p] < this.softwrapName; p++) {}\n\t\tfor (; xpos[p] < this.hardwrapName; p++)\n\t\t{\n\t\t\tlet ch = text.charAt(p);\n\t\t\tif (' ,;-/'.includes(ch))\n\t\t\t{\n\t\t\t\tp++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlist.push({text: text.substring(0, p).trim(), col, source});\n\t\tthis.wrapSplitName(list, text.substring(p).trim(), col, source);\n\t}\n\n\t// if the line is longer than the hard wrap limit, just truncate with ellipsis\n\tprivate truncateEllipsis(txt:string):string\n\t{\n\t\tlet xpos = FontData.measureWidths(txt, this.nameFontSize);\n\t\tif (Vec.last(xpos) <= this.hardwrapName) return txt;\n\t\tlet ellipsis = '...', ellw = FontData.measureText(ellipsis, this.nameFontSize)[0];\n\t\tlet keep = 1;\n\t\tfor (; keep < txt.length; keep++) if (xpos[keep] + ellw > this.hardwrapName) break;\n\t\treturn txt.substring(0, keep) + ellipsis;\n\t}\n}\n\n","import { Box } from '../util/Geom';\nimport { colourAlpha, colourCanvas, colourCode, DEGRAD, newElement, pixelDensity } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { FontData } from './FontData';\nexport var TextAlign;\n(function (TextAlign) {\n    TextAlign[TextAlign[\"Centre\"] = 0] = \"Centre\";\n    TextAlign[TextAlign[\"Left\"] = 1] = \"Left\";\n    TextAlign[TextAlign[\"Right\"] = 2] = \"Right\";\n    TextAlign[TextAlign[\"Baseline\"] = 0] = \"Baseline\";\n    TextAlign[TextAlign[\"Middle\"] = 4] = \"Middle\";\n    TextAlign[TextAlign[\"Top\"] = 8] = \"Top\";\n    TextAlign[TextAlign[\"Bottom\"] = 16] = \"Bottom\";\n})(TextAlign || (TextAlign = {}));\nvar PrimClass;\n(function (PrimClass) {\n    PrimClass[PrimClass[\"Line\"] = 1] = \"Line\";\n    PrimClass[PrimClass[\"Rect\"] = 2] = \"Rect\";\n    PrimClass[PrimClass[\"Oval\"] = 3] = \"Oval\";\n    PrimClass[PrimClass[\"Path\"] = 4] = \"Path\";\n    PrimClass[PrimClass[\"Text\"] = 5] = \"Text\";\n    PrimClass[PrimClass[\"TextNative\"] = 6] = \"TextNative\";\n})(PrimClass || (PrimClass = {}));\nclass SpoolSVG {\n    constructor(prettyPrint) {\n        this.prettyPrint = prettyPrint;\n        this.lines = [];\n        this.depth = 0;\n    }\n    spool(str) { if ((str === null || str === void 0 ? void 0 : str.length) > 0)\n        this.lines.push(str); }\n    start(str) {\n        if (this.prettyPrint && this.depth > 0)\n            this.lines.push('  '.repeat(this.depth));\n        this.spool(str);\n    }\n    stop(str) {\n        this.spool(str);\n        if (this.prettyPrint)\n            this.lines.push('\\n');\n    }\n    whole(str) {\n        if (this.prettyPrint && this.depth > 0)\n            this.lines.push('  '.repeat(this.depth));\n        this.spool(str);\n        if (this.prettyPrint)\n            this.lines.push('\\n');\n    }\n    attr(key, val) {\n        var _a;\n        if (typeof val == 'number') {\n            val = val.toFixed(4);\n            let match = (_a = /^(.*\\.\\d*?[1-9]+)0+$/.exec(val)) !== null && _a !== void 0 ? _a : /^(.*)\\.0+$/.exec(val);\n            if (match)\n                val = match[1];\n        }\n        this.spool(` ${key}=\"${val}\"`);\n    }\n    inc() { this.depth++; }\n    dec() { this.depth--; }\n    toString() { return this.lines.join(''); }\n}\nclass MetaVector {\n    constructor(vec) {\n        this.types = [];\n        this.prims = [];\n        this.width = 0;\n        this.height = 0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.scale = 1;\n        this.density = 1;\n        this.charMissing = false;\n        this.lowX = null;\n        this.lowY = null;\n        this.highX = null;\n        this.highY = null;\n        const font = FontData.main;\n        this.charMask = Vec.booleanArray(false, font.UNICODE.length);\n        if (vec != null) {\n            if (vec.size != null) {\n                this.width = vec.size[0];\n                this.height = vec.size[1];\n            }\n            if (vec.types != null)\n                this.types = vec.types;\n            if (vec.prims != null)\n                this.prims = vec.prims;\n            for (let p of this.prims)\n                if (p.primClass == PrimClass.Text) {\n                    let { txt } = p;\n                    for (let n = 0; n < txt.length; n++) {\n                        let i = font.getIndex(txt.charAt(n));\n                        if (i >= 0)\n                            this.charMask[i] = true;\n                        else\n                            this.charMissing = true;\n                    }\n                }\n        }\n    }\n    drawLine(x1, y1, x2, y2, colour, thickness) {\n        if (thickness == null)\n            thickness = 1;\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Line, thickness, colour });\n        const bump = 0.5 * thickness;\n        this.updateBounds(Math.min(x1, x2) - bump, Math.min(y1, y2) - bump);\n        this.updateBounds(Math.max(x1, x2) + bump, Math.max(y1, y2) + bump);\n        this.prims.push({ primClass: PrimClass.Line, typeidx, x1, y1, x2, y2 });\n    }\n    drawRect(x, y, w, h, edgeCol, thickness, fillCol) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Rect, edgeCol, fillCol, thickness });\n        const bump = 0.5 * thickness;\n        this.updateBounds(x - bump, y - bump);\n        this.updateBounds(x + w + bump, y + h + bump);\n        this.prims.push({ primClass: PrimClass.Rect, typeidx, x, y, w, h });\n    }\n    drawOval(cx, cy, rw, rh, edgeCol, thickness, fillCol) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        const bump = 0.5 * thickness;\n        this.updateBounds(cx - rw - bump, cy - rh - bump);\n        this.updateBounds(cx + rw + bump, cy + rh + bump);\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Oval, edgeCol, fillCol, thickness });\n        this.prims.push({ primClass: PrimClass.Oval, typeidx, cx, cy, rw, rh });\n    }\n    drawPath(xpoints, ypoints, ctrlFlags, isClosed, edgeCol, thickness, fillCol, hardEdge) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        if (hardEdge == null)\n            hardEdge = false;\n        const bump = 0.5 * thickness;\n        for (let n = 0; n < xpoints.length; n++) {\n            this.updateBounds(xpoints[n] - bump, ypoints[n] - bump);\n            if (bump != 0)\n                this.updateBounds(xpoints[n] + bump, ypoints[n] + bump);\n        }\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Path, edgeCol, fillCol, thickness, hardEdge });\n        this.prims.push({ primClass: PrimClass.Path, typeidx, count: xpoints.length,\n            x: Vec.duplicate(xpoints), y: Vec.duplicate(ypoints), ctrl: ctrlFlags && [...ctrlFlags], closed: isClosed });\n    }\n    drawPoly(xpoints, ypoints, edgeCol, thickness, fillCol, hardEdge) {\n        this.drawPath(xpoints, ypoints, null, true, edgeCol, thickness, fillCol, hardEdge);\n    }\n    drawText(x, y, txt, size, colour, align, direction) {\n        if (align == null)\n            align = TextAlign.Left | TextAlign.Baseline;\n        if (direction == null)\n            direction = 0;\n        let cosTheta = 1, sinTheta = 0;\n        if (direction != 0)\n            [cosTheta, sinTheta] = [Math.cos(direction * DEGRAD), Math.sin(direction * DEGRAD)];\n        const font = FontData.main;\n        for (let n = 0; n < txt.length; n++) {\n            let i = font.getIndex(txt.charAt(n));\n            if (i >= 0)\n                this.charMask[i] = true;\n            else\n                this.charMissing = true;\n        }\n        let metrics = font.measureText(txt, size);\n        let bx = 0, by = 0;\n        let dx = 0;\n        if ((align & TextAlign.Left) != 0) { }\n        else if ((align & TextAlign.Right) != 0)\n            dx = -metrics[0];\n        else\n            dx = -0.5 * metrics[0];\n        if (dx != 0) {\n            bx += dx * cosTheta;\n            by += dx * sinTheta;\n        }\n        let dy = 0;\n        if ((align & TextAlign.Middle) != 0)\n            dy = 0.5 * metrics[1];\n        else if ((align & TextAlign.Top) != 0)\n            dy = metrics[1];\n        else if ((align & TextAlign.Bottom) != 0)\n            dy = -metrics[2];\n        if (dy != 0) {\n            bx -= dy * sinTheta;\n            by += dy * cosTheta;\n        }\n        let x1 = 0, y1 = 0, x2 = 0, y2 = 0;\n        let tx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            if (i >= 0) {\n                let outlineX = font.getOutlineX(i), outlineY = font.getOutlineY(i);\n                x1 = Math.min(x1, tx + Vec.min(outlineX));\n                x2 = Math.max(x2, tx + Vec.max(outlineX));\n                y1 = Math.min(y1, -Vec.max(outlineY));\n                y2 = Math.max(y2, -Vec.min(outlineY));\n                tx += font.HORIZ_ADV_X[i];\n                if (n < txt.length - 1)\n                    tx += font.getKerning(ch, txt.charAt(n + 1));\n            }\n            else\n                tx += font.MISSING_HORZ;\n        }\n        const mscale = size * font.INV_UNITS_PER_EM;\n        if (direction == 0) {\n            this.updateBounds(x + bx + x1 * mscale, y + by + y1 * mscale);\n            this.updateBounds(x + bx + x2 * mscale, y + by + y2 * mscale);\n        }\n        else {\n            let rx1 = x1 * mscale, ry1 = y1 * mscale;\n            let rx2 = x2 * mscale, ry2 = y2 * mscale;\n            this.updateBounds(x + bx + rx1 * cosTheta - ry1 * sinTheta, y + by + rx1 * sinTheta + ry1 * cosTheta);\n            this.updateBounds(x + bx + rx2 * cosTheta - ry1 * sinTheta, y + by + rx2 * sinTheta + ry1 * cosTheta);\n            this.updateBounds(x + bx + rx2 * cosTheta - ry2 * sinTheta, y + by + rx2 * sinTheta + ry2 * cosTheta);\n            this.updateBounds(x + bx + rx1 * cosTheta - ry2 * sinTheta, y + by + rx1 * sinTheta + ry2 * cosTheta);\n        }\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Text, size, colour });\n        this.prims.push({ primClass: PrimClass.Text, typeidx, x: x + bx, y: y + by, txt, direction });\n    }\n    drawTextNative(x, y, txt, fontFamily, fontSize, colour, align, opt) {\n        if (!opt)\n            opt = {};\n        if (align == null)\n            align = TextAlign.Left | TextAlign.Baseline;\n        const font = FontData.main;\n        let metrics = font.measureTextNative(txt, fontFamily, fontSize, opt);\n        if ((align & TextAlign.Left) != 0) { }\n        else if ((align & TextAlign.Right) != 0)\n            x -= metrics[0];\n        else\n            x -= 0.5 * metrics[0];\n        if ((align & TextAlign.Middle) != 0)\n            y += 0.5 * metrics[1];\n        else if ((align & TextAlign.Top) != 0)\n            y += metrics[1];\n        else if ((align & TextAlign.Bottom) != 0)\n            y -= metrics[2];\n        this.updateBounds(x, y - metrics[1]);\n        this.updateBounds(x + metrics[0], y + metrics[2]);\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.TextNative, family: fontFamily, size: fontSize, colour, opt });\n        this.prims.push({ primClass: PrimClass.TextNative, typeidx, x, y, txt });\n    }\n    boundLowX() { return this.lowX; }\n    boundLowY() { return this.lowY; }\n    boundHighX() { return this.highX; }\n    boundHighY() { return this.highY; }\n    getBounds() { return new Box(this.lowX, this.lowY, this.highX - this.lowX, this.highY - this.lowY); }\n    measure() {\n        this.width = Math.ceil(this.highX - this.lowX);\n        this.height = Math.ceil(this.highY - this.lowY);\n    }\n    normalise() {\n        if (this.lowX != 0 || this.lowY != 0)\n            this.transformPrimitives(-this.lowX, -this.lowY, 1, 1);\n        this.width = Math.ceil(this.highX - this.lowX);\n        this.height = Math.ceil(this.highY - this.lowY);\n    }\n    setSize(width, height) { this.width = width; this.height = height; }\n    transformIntoBox(box) {\n        this.transformPrimitives(-this.lowX, -this.lowY, 1, 1);\n        let nw = Math.ceil(this.highX - this.lowX), nh = Math.ceil(this.highY - this.lowY);\n        let scale = 1;\n        if (nw > box.w) {\n            let mod = box.w / nw;\n            nw = box.w;\n            nh *= mod;\n            scale *= mod;\n        }\n        if (nh > box.h) {\n            let mod = box.h / nh;\n            nh = box.h;\n            nw *= mod;\n            scale *= mod;\n        }\n        let ox = 0.5 * (box.w - nw), oy = 0.5 * (box.h - nh);\n        this.transformPrimitives(box.x + ox, box.y + oy, scale, scale);\n    }\n    scaleExtent(maxWidth, maxHeight) {\n        let w = this.highX - this.lowX, h = this.highY - this.lowY;\n        if (w <= maxWidth && h <= maxHeight)\n            return;\n        let scale = Math.min(maxWidth / w, maxHeight / h);\n        this.transformPrimitives(0, 0, scale, scale);\n    }\n    transformPrimitives(ox, oy, sw, sh) {\n        if (ox == 0 && oy == 0 && sw == 1 && sh == 1)\n            return;\n        for (let a of this.prims) {\n            const type = a.primClass;\n            if (type == PrimClass.Line) {\n                let line = a;\n                line.x1 = ox + line.x1 * sw;\n                line.y1 = oy + line.y1 * sh;\n                line.x2 = ox + line.x2 * sw;\n                line.y2 = oy + line.y2 * sh;\n            }\n            else if (type == PrimClass.Rect) {\n                let rect = a;\n                rect.x = ox + rect.x * sw;\n                rect.y = oy + rect.y * sh;\n                rect.w = rect.w * sw;\n                rect.h = rect.h * sh;\n            }\n            else if (type == PrimClass.Oval) {\n                let oval = a;\n                oval.cx = ox + oval.cx * sw;\n                oval.cy = oy + oval.cy * sh;\n                oval.rw *= sw;\n                oval.rh *= sh;\n            }\n            else if (type == PrimClass.Path) {\n                let path = a;\n                let sz = path.count, px = path.x, py = path.y;\n                for (let n = 0; n < sz; n++) {\n                    px[n] = ox + px[n] * sw;\n                    py[n] = oy + py[n] * sh;\n                }\n            }\n            else if (type == PrimClass.Text || type == PrimClass.TextNative) {\n                let text = a;\n                text.x = ox + text.x * sw;\n                text.y = oy + text.y * sh;\n            }\n        }\n        let swsh = 0.5 * (sw + sh);\n        if (swsh != 1)\n            for (let t of this.types) {\n                const type = t.primClass;\n                if (type == PrimClass.Line)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Rect)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Oval)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Path)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Text)\n                    t.size *= swsh;\n                else if (type == PrimClass.TextNative)\n                    t.size *= swsh;\n            }\n        this.lowX = ox + this.lowX * sw;\n        this.lowY = oy + this.lowY * sh;\n        this.highX = ox + this.highX * sw;\n        this.highY = oy + this.highY * sh;\n    }\n    renderInto(parent) {\n        let canvas = newElement(parent, 'canvas', { 'width': this.width, 'height': this.height });\n        this.renderCanvas(canvas);\n        return canvas;\n    }\n    renderCanvas(canvas, clearFirst) {\n        let ctx = canvas.getContext('2d');\n        if (clearFirst)\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n        let w = this.width, h = this.height;\n        this.density = pixelDensity();\n        canvas.style.width = w + 'px';\n        canvas.style.height = h + 'px';\n        canvas.width = w * this.density;\n        canvas.height = h * this.density;\n        this.renderContext(ctx);\n    }\n    renderContext(ctx) {\n        ctx.save();\n        ctx.scale(this.density, this.density);\n        this.typeObj = [];\n        for (let n = 0; n < this.types.length; n++) {\n            let t = this.types[n];\n            if (t.primClass == PrimClass.Line)\n                this.typeObj[n] = this.setupTypeLine(t);\n            else if (t.primClass == PrimClass.Rect)\n                this.typeObj[n] = this.setupTypeRect(t);\n            else if (t.primClass == PrimClass.Oval)\n                this.typeObj[n] = this.setupTypeOval(t);\n            else if (t.primClass == PrimClass.Path)\n                this.typeObj[n] = this.setupTypePath(t);\n            else if (t.primClass == PrimClass.Text)\n                this.typeObj[n] = this.setupTypeText(t);\n            else if (t.primClass == PrimClass.TextNative)\n                this.typeObj[n] = this.setupTypeTextNative(t);\n        }\n        for (let n = 0; n < this.prims.length; n++) {\n            let p = this.prims[n];\n            if (p.primClass == PrimClass.Line)\n                this.renderLine(ctx, p);\n            else if (p.primClass == PrimClass.Rect)\n                this.renderRect(ctx, p);\n            else if (p.primClass == PrimClass.Oval)\n                this.renderOval(ctx, p);\n            else if (p.primClass == PrimClass.Path)\n                this.renderPath(ctx, p);\n            else if (p.primClass == PrimClass.Text)\n                this.renderText(ctx, p);\n            else if (p.primClass == PrimClass.TextNative)\n                this.renderTextNative(ctx, p);\n        }\n        ctx.restore();\n    }\n    createSVG(prettyPrint = false, withXlink = false) {\n        let svg = new SpoolSVG(prettyPrint);\n        svg.start('<svg xmlns=\"http://www.w3.org/2000/svg\"');\n        if (withXlink)\n            svg.attr('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n        svg.attr('width', this.width);\n        svg.attr('height', this.height);\n        svg.attr('viewBox', `0 0 ${this.width} ${this.height}`);\n        svg.stop('>');\n        svg.inc();\n        this.renderSVG(svg, withXlink);\n        svg.dec();\n        svg.whole('</svg>');\n        return svg.toString();\n    }\n    renderSVG(svg, withXlink = false) {\n        this.typeObj = [];\n        const font = FontData.main;\n        svg.whole('<defs>');\n        svg.inc();\n        if (this.charMissing) {\n            svg.start('<path');\n            svg.attr('id', 'missing');\n            svg.attr('d', font.MISSING_DATA);\n            svg.attr('edge', 'none');\n            svg.stop('/>');\n        }\n        for (let n = 0; n < font.UNICODE.length; n++)\n            if (this.charMask[n]) {\n                svg.start('<path');\n                svg.attr('id', 'char' + n);\n                svg.attr('d', font.GLYPH_DATA[n]);\n                svg.attr('edge', 'none');\n                svg.stop('/>');\n            }\n        svg.dec();\n        svg.whole('</defs>');\n        for (let n = 0; n < this.types.length; n++) {\n            let t = this.types[n];\n            if (t.primClass == PrimClass.Line)\n                this.typeObj[n] = this.setupTypeLine(t);\n            else if (t.primClass == PrimClass.Rect)\n                this.typeObj[n] = this.setupTypeRect(t);\n            else if (t.primClass == PrimClass.Oval)\n                this.typeObj[n] = this.setupTypeOval(t);\n            else if (t.primClass == PrimClass.Path)\n                this.typeObj[n] = this.setupTypePath(t);\n            else if (t.primClass == PrimClass.Text)\n                this.typeObj[n] = this.setupTypeText(t);\n            else if (t.primClass == PrimClass.TextNative)\n                this.typeObj[n] = this.setupTypeTextNative(t);\n        }\n        for (let n = 0; n < this.prims.length;) {\n            let p = this.prims[n], num = 1;\n            if (p.primClass != PrimClass.Path && p.primClass != PrimClass.Text && p.primClass != PrimClass.TextNative) {\n                for (; n + num < this.prims.length; num++)\n                    if (this.prims[n + num].primClass != p.primClass || this.prims[n + num].typeidx != p.typeidx)\n                        break;\n            }\n            if (p.primClass == PrimClass.Line) {\n                if (num == 1)\n                    this.svgLine1(svg, p);\n                else\n                    this.svgLineN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Rect) {\n                if (num == 1)\n                    this.svgRect1(svg, p);\n                else\n                    this.svgRectN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Oval) {\n                if (num == 1)\n                    this.svgOval1(svg, p);\n                else\n                    this.svgOvalN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Path)\n                this.svgPath(svg, p);\n            else if (p.primClass == PrimClass.Text)\n                this.svgText(svg, p, withXlink);\n            else if (p.primClass == PrimClass.TextNative)\n                this.svgTextNative(svg, p);\n            n += num;\n        }\n    }\n    spool(into) {\n        for (let p of this.prims) {\n            if (p.primClass == PrimClass.Line) {\n                let { typeidx, x1, y1, x2, y2 } = p;\n                let { thickness, colour } = this.types[typeidx];\n                into.drawLine(x1, y1, x2, y2, colour, thickness);\n            }\n            else if (p.primClass == PrimClass.Rect) {\n                let { typeidx, x, y, w, h } = p;\n                let { edgeCol, fillCol, thickness } = this.types[typeidx];\n                into.drawRect(x, y, w, h, edgeCol, thickness, fillCol);\n            }\n            else if (p.primClass == PrimClass.Oval) {\n                let { typeidx, cx, cy, rw, rh } = p;\n                let { edgeCol, fillCol, thickness } = this.types[typeidx];\n                into.drawOval(cx, cy, rw, rh, edgeCol, thickness, fillCol);\n            }\n            else if (p.primClass == PrimClass.Path) {\n                let { typeidx, count, x, y, ctrl, closed } = p;\n                let { edgeCol, fillCol, thickness, hardEdge } = this.types[typeidx];\n                into.drawPath(x, y, ctrl, closed, edgeCol, thickness, fillCol, hardEdge);\n            }\n            else if (p.primClass == PrimClass.Text) {\n                let { typeidx, x, y, txt, direction } = p;\n                let { size, colour } = this.types[typeidx];\n                into.drawText(x, y, txt, size, colour, null, direction);\n            }\n            else if (p.primClass == PrimClass.TextNative) {\n                let { typeidx, x, y, txt } = p;\n                let { family, size, colour } = this.types[typeidx];\n                into.drawTextNative(x, y, txt, family, size, colour);\n            }\n        }\n    }\n    setupTypeLine(t) {\n        let thickness = t.thickness * this.scale;\n        let colour = t.colour;\n        return { primClass: t.primClass, thickness, colour };\n    }\n    setupTypeRect(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness };\n    }\n    setupTypeOval(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness };\n    }\n    setupTypePath(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        let hardEdge = t.hardEdge;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness, hardEdge };\n    }\n    setupTypeText(t) {\n        let size = t.size * this.scale;\n        let colour = t.colour;\n        return { primClass: t.primClass, colour, size };\n    }\n    setupTypeTextNative(t) {\n        let family = t.family;\n        let size = t.size * this.scale;\n        let colour = t.colour;\n        let opt = t.opt;\n        return { primClass: t.primClass, colour, family, size, opt };\n    }\n    renderLine(ctx, line) {\n        let { x1, y1, x2, y2 } = line;\n        let { colour, thickness } = this.typeObj[line.typeidx];\n        x1 = this.offsetX + this.scale * x1;\n        y1 = this.offsetY + this.scale * y1;\n        x2 = this.offsetX + this.scale * x2;\n        y2 = this.offsetY + this.scale * y2;\n        if (colour != null) {\n            ctx.beginPath();\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2);\n            ctx.strokeStyle = colourCanvas(colour);\n            ctx.lineWidth = thickness;\n            ctx.lineCap = 'round';\n            ctx.stroke();\n        }\n    }\n    renderRect(ctx, rect) {\n        let { x, y, w, h } = rect;\n        let { edgeCol, fillCol, thickness } = this.typeObj[rect.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        w *= this.scale;\n        h *= this.scale;\n        if (fillCol != MetaVector.NOCOLOUR) {\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.fillRect(x, y, w, h);\n        }\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            ctx.strokeStyle = colourCanvas(edgeCol);\n            ctx.lineWidth = thickness;\n            ctx.lineCap = 'square';\n            ctx.strokeRect(x, y, w, h);\n        }\n    }\n    renderOval(ctx, oval) {\n        let { cx, cy, rw, rh } = oval;\n        let { edgeCol, fillCol, thickness } = this.typeObj[oval.typeidx];\n        cx = this.offsetX + this.scale * cx;\n        cy = this.offsetY + this.scale * cy;\n        rw *= this.scale;\n        rh *= this.scale;\n        if (fillCol != MetaVector.NOCOLOUR) {\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rw, rh, 0, 0, 2 * Math.PI, true);\n            ctx.fill();\n        }\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            ctx.strokeStyle = colourCanvas(edgeCol);\n            ctx.lineWidth = thickness;\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rw, rh, 0, 0, 2 * Math.PI, true);\n            ctx.stroke();\n        }\n    }\n    renderPath(ctx, path) {\n        let { count, x, y, ctrl, closed } = path;\n        let { edgeCol, fillCol, thickness, hardEdge } = this.typeObj[path.typeidx];\n        x = [...x];\n        y = [...y];\n        for (let n = 0; n < count; n++) {\n            x[n] = this.offsetX + this.scale * x[n];\n            y[n] = this.offsetY + this.scale * y[n];\n        }\n        for (let layer = 1; layer <= 2; layer++) {\n            if (layer == 1 && fillCol == MetaVector.NOCOLOUR)\n                continue;\n            if (layer == 2 && edgeCol == MetaVector.NOCOLOUR)\n                continue;\n            ctx.beginPath();\n            ctx.moveTo(x[0], y[0]);\n            for (let i = 1; i < count; i++) {\n                if (!ctrl || !ctrl[i]) {\n                    ctx.lineTo(x[i], y[i]);\n                }\n                else if (i < count - 1 && !ctrl[i + 1]) {\n                    ctx.quadraticCurveTo(x[i], y[i], x[i + 1], y[i + 1]);\n                    i++;\n                }\n                else if (i < count - 1 && !ctrl[i + 2]) {\n                    ctx.bezierCurveTo(x[i], y[i], x[i + 1], y[i + 1], x[i + 2], y[i + 2]);\n                    i += 2;\n                }\n            }\n            if (closed)\n                ctx.closePath();\n            if (layer == 1) {\n                ctx.fillStyle = colourCanvas(fillCol);\n                ctx.fill();\n            }\n            else {\n                ctx.strokeStyle = colourCanvas(edgeCol);\n                ctx.lineWidth = thickness;\n                ctx.lineCap = hardEdge ? 'square' : 'round';\n                ctx.lineJoin = hardEdge ? 'miter' : 'round';\n                ctx.stroke();\n            }\n        }\n    }\n    renderText(ctx, text) {\n        let { x, y, txt, direction } = text;\n        let { size, colour } = this.typeObj[text.typeidx];\n        let fill = colourCanvas(colour);\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let font = FontData.main;\n        let scale = size * this.scale / font.UNITS_PER_EM;\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            let path = null;\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                path = font.getMissingPath();\n            }\n            else\n                path = font.getGlyphPath(i);\n            if (path) {\n                ctx.save();\n                let theta = direction != 0 ? direction * DEGRAD : 0;\n                if (theta == 0)\n                    ctx.translate(x + dx * scale, y);\n                else\n                    ctx.translate(x + Math.cos(theta) * dx * scale, y + Math.sin(theta) * dx * scale);\n                ctx.scale(scale, -scale);\n                if (theta != 0)\n                    ctx.rotate(-theta);\n                ctx.fillStyle = fill;\n                ctx.fill(path);\n                ctx.restore();\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n        }\n    }\n    renderTextNative(ctx, text) {\n        let { x, y, txt } = text;\n        let { size, colour, family, opt } = this.typeObj[text.typeidx];\n        let fill = colourCanvas(colour);\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        ctx.save();\n        let pfx = '';\n        if (opt.bold)\n            pfx += 'bold ';\n        if (opt.italic)\n            pfx += 'italic ';\n        ctx.font = pfx + (size * this.scale) + 'px ' + family;\n        ctx.fillStyle = fill;\n        ctx.fillText(txt, x, y);\n        ctx.restore();\n    }\n    svgLine1(svg, line) {\n        let { x1, y1, x2, y2 } = line;\n        let { colour, thickness } = this.typeObj[line.typeidx];\n        x1 = this.offsetX + this.scale * x1;\n        y1 = this.offsetY + this.scale * y1;\n        x2 = this.offsetX + this.scale * x2;\n        y2 = this.offsetY + this.scale * y2;\n        if (colour != MetaVector.NOCOLOUR) {\n            svg.start('<line');\n            svg.attr('x1', x1);\n            svg.attr('y1', y1);\n            svg.attr('x2', x2);\n            svg.attr('y2', y2);\n            this.defineSVGStroke(svg, colour);\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'round');\n            svg.stop('/>');\n        }\n    }\n    svgLineN(svg, lines) {\n        let { colour, thickness } = this.typeObj[lines[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, colour);\n        svg.attr('stroke-width', thickness);\n        svg.attr('stroke-linecap', 'round');\n        svg.stop('>');\n        svg.inc();\n        for (let line of lines) {\n            let { x1, y1, x2, y2 } = line;\n            x1 = this.offsetX + this.scale * x1;\n            y1 = this.offsetY + this.scale * y1;\n            x2 = this.offsetX + this.scale * x2;\n            y2 = this.offsetY + this.scale * y2;\n            svg.start('<line');\n            svg.attr('x1', x1);\n            svg.attr('y1', y1);\n            svg.attr('x2', x2);\n            svg.attr('y2', y2);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgRect1(svg, rect) {\n        let { x, y, w, h } = rect;\n        let { edgeCol, fillCol, thickness } = this.typeObj[rect.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        w *= this.scale;\n        h *= this.scale;\n        svg.start('<rect');\n        svg.attr('x', x);\n        svg.attr('y', y);\n        svg.attr('width', w);\n        svg.attr('height', h);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'square');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgRectN(svg, rects) {\n        let { edgeCol, fillCol, thickness } = this.typeObj[rects[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'square');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('>');\n        svg.inc();\n        for (let rect of rects) {\n            let { x, y, w, h } = rect;\n            x = this.offsetX + this.scale * x;\n            y = this.offsetY + this.scale * y;\n            w *= this.scale;\n            h *= this.scale;\n            svg.start('<rect');\n            svg.attr('x', x);\n            svg.attr('y', y);\n            svg.attr('width', w);\n            svg.attr('height', h);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgOval1(svg, oval) {\n        let { cx, cy, rw, rh } = oval;\n        let { edgeCol, fillCol, thickness } = this.typeObj[oval.typeidx];\n        cx = this.offsetX + this.scale * cx;\n        cy = this.offsetY + this.scale * cy;\n        rw *= this.scale;\n        rh *= this.scale;\n        svg.start('<ellipse');\n        svg.attr('cx', cx);\n        svg.attr('cy', cy);\n        svg.attr('rx', rw);\n        svg.attr('ry', rh);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgOvalN(svg, ovals) {\n        let { edgeCol, fillCol, thickness } = this.typeObj[ovals[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('>');\n        svg.inc();\n        for (let oval of ovals) {\n            let { cx, cy, rw, rh } = oval;\n            cx = this.offsetX + this.scale * cx;\n            cy = this.offsetY + this.scale * cy;\n            rw *= this.scale;\n            rh *= this.scale;\n            svg.start('<ellipse');\n            svg.attr('cx', cx);\n            svg.attr('cy', cy);\n            svg.attr('rx', rw);\n            svg.attr('ry', rh);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgPath(svg, path) {\n        let { count, x, y, ctrl, closed } = path;\n        let { edgeCol, fillCol, thickness, hardEdge } = this.typeObj[path.typeidx];\n        x = [...x];\n        y = [...y];\n        for (let n = 0; n < count; n++) {\n            x[n] = this.offsetX + this.scale * x[n];\n            y[n] = this.offsetY + this.scale * y[n];\n        }\n        let shape = 'M ' + x[0] + ' ' + y[0];\n        let n = 1;\n        while (n < count) {\n            if (!ctrl || !ctrl[n]) {\n                shape += ' L ' + x[n] + ' ' + y[n];\n                n++;\n            }\n            else if (ctrl[n] && n < count - 1 && !ctrl[n + 1]) {\n                shape += ' Q ' + x[n] + ' ' + y[n] + ' ' + x[n + 1] + ' ' + y[n + 1];\n                n += 2;\n            }\n            else if (ctrl[n] && n < count - 2 && ctrl[n + 1] && !ctrl[n + 2]) {\n                shape += ' C ' + x[n] + ' ' + y[n] + ' ' + x[n + 1] + ' ' + y[n + 1] + ' ' + x[n + 2] + ' ' + y[n + 2];\n                n += 3;\n            }\n            else\n                n++;\n        }\n        if (closed)\n            shape += ' Z';\n        svg.start('<path');\n        svg.attr('d', shape);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linejoin', hardEdge ? 'miter' : 'round');\n            svg.attr('stroke-linecap', hardEdge ? 'square' : 'round');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgText(svg, text, withXlink = true) {\n        let { x, y, txt, direction } = text;\n        let { size, colour } = this.typeObj[text.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let font = FontData.main;\n        let scale = size * this.scale / font.UNITS_PER_EM;\n        if (direction != 0) {\n            svg.start('<g');\n            svg.attr('transform', `rotate(${direction},${x},${y})`);\n            svg.stop('>');\n            svg.inc();\n        }\n        svg.start('<g');\n        svg.attr('transform', 'translate(' + x + ',' + y + ')');\n        this.defineSVGFill(svg, colour);\n        svg.stop('>');\n        svg.inc();\n        svg.start('<g');\n        svg.attr('transform', 'scale(' + scale + ',' + (-scale) + ')');\n        svg.stop('>');\n        svg.inc();\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            svg.start('<use');\n            let ref = i < 0 ? '#missing' : '#char' + i;\n            if (withXlink)\n                svg.attr('xlink:href', ref);\n            else\n                svg.attr('href', ref);\n            svg.attr('x', dx);\n            svg.stop('/>');\n            if (i >= 0) {\n                dx += font.HORIZ_ADV_X[i];\n                if (n < txt.length - 1)\n                    dx += font.getKerning(ch, txt.charAt(n + 1));\n            }\n            else\n                dx += font.MISSING_HORZ;\n        }\n        svg.dec();\n        svg.whole('</g>');\n        svg.dec();\n        svg.whole('</g>');\n        if (direction != 0) {\n            svg.dec();\n            svg.whole('</g>');\n        }\n    }\n    svgTextNative(svg, text) {\n        let { x, y, txt } = text;\n        let { size, colour, family, opt } = this.typeObj[text.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let fill = colourCanvas(colour);\n        let style = `fill: ${fill}; font-family: ${family}; font-size: ${size * this.scale};`;\n        if (opt.bold)\n            style += ' font-weight: bold;';\n        if (opt.italic)\n            style += ' font-style: italic;';\n        const escapeXML = (str) => {\n            return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\n        };\n        svg.start('<text');\n        svg.attr('xml:space', 'preserve');\n        svg.attr('x', x);\n        svg.attr('y', y);\n        svg.attr('style', style);\n        svg.stop('>' + escapeXML(txt) + '</text>');\n    }\n    defineSVGStroke(svg, col) {\n        if (col == MetaVector.NOCOLOUR) {\n            svg.attr('stroke-opacity', '0');\n            return;\n        }\n        svg.attr('stroke', colourCode(col));\n        let alpha = colourAlpha(col);\n        if (alpha != 1)\n            svg.attr('stroke-opacity', alpha);\n    }\n    defineSVGFill(svg, col) {\n        if (col == MetaVector.NOCOLOUR) {\n            svg.attr('fill-opacity', '0');\n            return;\n        }\n        svg.attr('fill', colourCode(col));\n        let alpha = colourAlpha(col);\n        if (alpha != 1)\n            svg.attr('fill-opacity', alpha);\n    }\n    findOrCreateType(typeDef) {\n        for (let n = 0; n < this.types.length; n++) {\n            if (this.types[n].primClass != typeDef.primClass)\n                continue;\n            let keys = Object.keys(typeDef);\n            let match = keys.every((k) => typeDef[k] == this.types[n][k]);\n            if (match)\n                return n;\n        }\n        this.types.push(typeDef);\n        return this.types.length - 1;\n    }\n    updateBounds(x, y) {\n        if (this.lowX == null) {\n            this.lowX = x;\n            this.lowY = y;\n            this.highX = x;\n            this.highY = y;\n            return;\n        }\n        this.lowX = Math.min(this.lowX, x);\n        this.lowY = Math.min(this.lowY, y);\n        this.highX = Math.max(this.highX, x);\n        this.highY = Math.max(this.highY, y);\n    }\n}\nMetaVector.NOCOLOUR = -1;\nexport { MetaVector };\n//# sourceMappingURL=MetaVector.js.map","import { Molecule } from '../mol/Molecule';\nimport { GeomUtil } from '../util/Geom';\nimport { angleDiff, DEGRAD, invZ, norm2_xy, norm_xy } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { BLineType } from './ArrangeMolecule';\nimport { MetaVector, TextAlign } from './MetaVector';\nimport { RenderMnemonicType } from './Rendering';\nexport class DrawMolecule {\n    constructor(layout, vg) {\n        this.layout = layout;\n        this.vg = vg;\n        this.mnemonics = null;\n        this.mol = layout.getMolecule();\n        this.policy = layout.getPolicy();\n        this.effects = layout.getEffects();\n        this.scale = layout.getScale();\n        this.invScale = 1.0 / this.scale;\n    }\n    getMolecule() { return this.mol; }\n    getMetaVector() { return this.vg; }\n    getLayout() { return this.layout; }\n    getPolicy() { return this.policy; }\n    getEffects() { return this.effects; }\n    draw() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n        let DRAW_SPACE = false;\n        if (DRAW_SPACE) {\n            let bounds = this.layout.determineBoundary();\n            this.vg.drawRect(bounds[0], bounds[1], bounds[2] - bounds[0], bounds[3] - bounds[1], 0xFF0000, 1, MetaVector.NOCOLOUR);\n            for (let n = 0; n < this.layout.numSpace(); n++) {\n                let spc = this.layout.getSpace(n);\n                this.vg.drawRect(spc.box.x, spc.box.y, spc.box.w, spc.box.h, MetaVector.NOCOLOUR, 0, 0xE0E0E0);\n                if (spc.px != null && spc.py != null && spc.px.length > 2)\n                    this.vg.drawPoly(spc.px, spc.py, 0x000000, 1, 0x808080FF, true);\n            }\n        }\n        this.drawUnderEffects();\n        let { mol, layout, effects, policy, vg } = this;\n        let hideBonds = new Set(effects.hideBonds);\n        for (let i = 1; i <= mol.numBonds; i++)\n            if (mol.bondType(i) == Molecule.BONDTYPE_INCLINED && !hideBonds.has(i)) {\n                let atom = mol.bondTo(i);\n                if (layout.getPoint(atom - 1).text)\n                    continue;\n                for (let j of mol.atomAdjBonds(atom))\n                    if (j != i && mol.bondType(j) == Molecule.BONDTYPE_INCLINED && mol.bondTo(j) == atom && !hideBonds.has(j)) {\n                        let b1 = layout.getLines().find((b) => b.bnum == i);\n                        let b2 = layout.getLines().find((b) => b.bnum == j);\n                        let th1 = Math.atan2(b1.line.y1 - b1.line.y2, b1.line.x1 - b1.line.x2);\n                        let th2 = Math.atan2(b2.line.y1 - b2.line.y2, b2.line.x1 - b2.line.x2);\n                        if (Math.abs(angleDiff(th1, th2)) < 170 * DEGRAD) {\n                            this.drawFusedWedge(b1, b2);\n                            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Artifact, 'Fused', [b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2]);\n                            hideBonds.add(i);\n                            hideBonds.add(j);\n                            break;\n                        }\n                    }\n            }\n        for (let n = 0; n < layout.numLines(); n++) {\n            let b = layout.getLine(n);\n            if (hideBonds.has(b.bnum))\n                continue;\n            if (b.type == BLineType.Normal) {\n                vg.drawLine(b.line.x1, b.line.y1, b.line.x2, b.line.y2, b.col, b.size);\n                (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Bond, 'L', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Inclined) {\n                this.drawBondInclined(b);\n                (_c = this.mnemonics) === null || _c === void 0 ? void 0 : _c.append(RenderMnemonicType.Bond, 'I', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Declined) {\n                this.drawBondDeclined(b);\n                (_d = this.mnemonics) === null || _d === void 0 ? void 0 : _d.append(RenderMnemonicType.Bond, 'D', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Unknown) {\n                this.drawBondUnknown(b);\n                (_e = this.mnemonics) === null || _e === void 0 ? void 0 : _e.append(RenderMnemonicType.Bond, 'U', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Dotted || b.type == BLineType.DotDir) {\n                this.drawBondDotted(b);\n                (_f = this.mnemonics) === null || _f === void 0 ? void 0 : _f.append(RenderMnemonicType.Bond, 'O', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.IncDouble || b.type == BLineType.IncTriple || b.type == BLineType.IncQuadruple) {\n                this.drawBondIncMulti(b);\n                (_g = this.mnemonics) === null || _g === void 0 ? void 0 : _g.append(RenderMnemonicType.Bond, 'M', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n        }\n        let fg = policy.data.foreground;\n        for (let r of layout.getRings()) {\n            if (r.theta != 0) {\n                var bez = GeomUtil.createBezierEllipse(r.cx, r.cy, r.rw, r.rh, r.theta);\n                vg.drawPath(bez.px, bez.py, bez.ctrl, true, fg, r.size, MetaVector.NOCOLOUR, false);\n                (_h = this.mnemonics) === null || _h === void 0 ? void 0 : _h.append(RenderMnemonicType.Artifact, 'Ring', [r.cx, r.cy, r.rw, r.rh, r.theta]);\n            }\n            else {\n                vg.drawOval(r.cx, r.cy, r.rw, r.rh, fg, r.size, MetaVector.NOCOLOUR);\n                (_j = this.mnemonics) === null || _j === void 0 ? void 0 : _j.append(RenderMnemonicType.Artifact, 'Ring', [r.cx, r.cy, r.rw, r.rh]);\n            }\n        }\n        for (let p of layout.getPaths()) {\n            vg.drawPath(p.px, p.py, p.ctrl, false, fg, p.size, MetaVector.NOCOLOUR, false);\n            (_k = this.mnemonics) === null || _k === void 0 ? void 0 : _k.append(RenderMnemonicType.Artifact, 'Path', [...p.px, ...p.py]);\n        }\n        for (let n = 0; n < layout.numPoints(); n++) {\n            let p = layout.getPoint(n);\n            if (effects.hideAtoms.has(p.anum))\n                continue;\n            let txt = p.text;\n            let cx = p.oval.cx, cy = p.oval.cy, rw = p.oval.rw;\n            if (txt == null) {\n                (_l = this.mnemonics) === null || _l === void 0 ? void 0 : _l.append(RenderMnemonicType.Atom, '.', [cx, cy]);\n                continue;\n            }\n            let fsz = p.fsz;\n            let col = p.col;\n            while (txt.endsWith('.')) {\n                let dw = rw / txt.length;\n                let r = fsz * 0.15;\n                vg.drawOval(cx + rw - dw, cy, r, r, MetaVector.NOCOLOUR, 0, col);\n                cx -= dw;\n                rw -= dw;\n                txt = txt.substring(0, txt.length - 1);\n            }\n            while (txt.startsWith('+')) {\n                let dw = rw / txt.length;\n                let x = cx - rw + dw, y = cy, r = fsz * 0.18, lsz = fsz * 0.1;\n                vg.drawLine(x - r, y, x + r, y, col, lsz);\n                vg.drawLine(x, y - r, x, y + r, col, lsz);\n                cx += dw;\n                rw -= dw;\n                txt = txt.substring(1, txt.length);\n            }\n            while (txt.startsWith('-')) {\n                let dw = rw / txt.length;\n                let x = cx - rw + dw, y = cy, r = fsz * 0.18, lsz = fsz * 0.1;\n                vg.drawLine(x - r, y, x + r, y, col, lsz);\n                cx += dw;\n                rw -= dw;\n                txt = txt.substring(1, txt.length);\n            }\n            if (txt.length > 0) {\n                vg.drawText(cx, cy, txt, fsz, col, TextAlign.Centre | TextAlign.Middle, p.rotation || 0);\n                (_m = this.mnemonics) === null || _m === void 0 ? void 0 : _m.append(RenderMnemonicType.Atom, txt, [cx, cy]);\n            }\n            else\n                (_o = this.mnemonics) === null || _o === void 0 ? void 0 : _o.append(RenderMnemonicType.Atom, '.', [cx, cy]);\n        }\n        this.drawOverEffects();\n    }\n    drawUnderEffects() {\n        var _a, _b, _c;\n        let mol = this.mol, policy = this.policy, effects = this.effects, layout = this.layout, scale = this.scale, vg = this.vg;\n        for (let n = 0, num = Math.min(effects.atomFrameDotSz.length, mol.numAtoms); n < num; n++) {\n            if (effects.hideAtoms.has(n + 1))\n                continue;\n            let dw = effects.atomFrameDotSz[n] * scale, col = effects.atomFrameCol[n];\n            let a = layout.getPoint(n);\n            let rw = a.oval.rw + 0.1 * scale, rh = a.oval.rh + 0.1 * scale;\n            let wdots = Math.ceil(2 * rw / (3 * dw));\n            let hdots = Math.ceil(2 * rh / (3 * dw));\n            let wspc = 2 * rw / wdots, hspc = 2 * rh / hdots;\n            for (let i = 0; i <= wdots; i++) {\n                let x = a.oval.cx - rw + i * wspc;\n                vg.drawOval(x, a.oval.cy - rh, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(x, a.oval.cy + rh, dw, dw, MetaVector.NOCOLOUR, 0, col);\n            }\n            for (let i = 1; i < hdots; i++) {\n                let y = a.oval.cy - rh + i * hspc;\n                vg.drawOval(a.oval.cx - rw, y, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(a.oval.cx + rw, y, dw, dw, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Effect, 'Dot', [a.oval.cx, a.oval.cy, a.oval.rw, a.oval.rh]);\n        }\n        for (let key in effects.dottedRectOutline) {\n            let atom = parseInt(key), col = effects.dottedRectOutline[key];\n            let a = layout.getPoint(atom - 1);\n            let rw = Math.max(a.oval.rw, 0.2 * scale), rh = Math.max(a.oval.rh, 0.2 * scale);\n            let sz = 0.05 * scale;\n            let xdots = Math.max(1, Math.round(rw / (2 * sz)));\n            let ydots = Math.max(1, Math.round(rh / (2 * sz)));\n            let invX = (2 * rw) / xdots, invY = (2 * rh) / ydots;\n            for (let n = 0; n <= xdots; n++) {\n                let x = a.oval.cx - rw + n * invX;\n                vg.drawOval(x, a.oval.cy - rh, sz, sz, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(x, a.oval.cy + rh, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            for (let n = 1; n < ydots; n++) {\n                let y = a.oval.cy - rh + n * invY;\n                vg.drawOval(a.oval.cx - rw, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(a.oval.cx + rw, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Effect, 'Rect', [a.oval.cx, a.oval.cy, a.oval.rw, a.oval.rh]);\n        }\n        for (let key in effects.dottedBondCross) {\n            let bond = parseInt(key), col = effects.dottedBondCross[key];\n            let x1 = 0, y1 = 0, x2 = 0, y2 = 0, bcount = 0;\n            for (let n = 0; n < layout.numLines(); n++) {\n                let b = layout.getLine(n);\n                if (b.bnum == bond) {\n                    x1 += b.line.x1;\n                    y1 += b.line.y1;\n                    x2 += b.line.x2;\n                    y2 += b.line.y2;\n                    bcount += 1;\n                }\n            }\n            if (bcount > 1) {\n                let inv = 1 / bcount;\n                [x1, y1, x2, y2] = [x1 * inv, y1 * inv, x2 * inv, y2 * inv];\n            }\n            let dx = x2 - x1, dy = y2 - y1;\n            let inv = 0.2 * scale * invZ(norm_xy(dx, dy)), ox = dy * inv, oy = -dx * inv;\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2), sz = 0.05 * scale;\n            for (let p of [-2, -1, 1, 2]) {\n                let x = cx + p * ox, y = cy + p * oy;\n                vg.drawOval(x, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_c = this.mnemonics) === null || _c === void 0 ? void 0 : _c.append(RenderMnemonicType.Effect, 'Crossing', [x1, y1, x2, y2]);\n        }\n    }\n    drawOverEffects() {\n        var _a, _b;\n        let mol = this.mol, policy = this.policy, effects = this.effects, layout = this.layout, scale = this.scale, vg = this.vg;\n        for (let a of effects.overlapAtoms) {\n            let p = layout.getPoint(a - 1);\n            let rad = scale * 0.2;\n            vg.drawLine(p.oval.cx - rad, p.oval.cy - rad, p.oval.cx + rad, p.oval.cy + rad, 0xFF0000, 1);\n            vg.drawLine(p.oval.cx + rad, p.oval.cy - rad, p.oval.cx - rad, p.oval.cy + rad, 0xFF0000, 1);\n            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Effect, 'Overlap', [p.oval.cx, p.oval.cy, p.oval.rw, p.oval.rh]);\n        }\n        for (let n = 0, num = Math.min(effects.atomCircleSz.length, mol.numAtoms); n < num; n++)\n            if (effects.atomCircleSz[n] > 0) {\n                let dw = effects.atomCircleSz[n] * scale, col = effects.atomCircleCol[n];\n                let p = layout.getPoint(n);\n                vg.drawOval(p.oval.cx, p.oval.cy, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Effect, 'Circle', [p.oval.cx, p.oval.cy, p.oval.rw, p.oval.rh]);\n            }\n    }\n    drawBondInclined(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let norm = head / Math.sqrt(dx * dx + dy * dy);\n        let ox = norm * dy, oy = -norm * dx;\n        let px = [x1, x2 - ox, x2 + ox], py = [y1, y2 - oy, y2 + oy];\n        if (this.layout.getPoint(b.bto - 1).text == null && this.mol.atomAdjCount(b.bto) == 2) {\n            let other = null;\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let o = this.layout.getLine(n);\n                if (o.type == BLineType.Normal && (o.bfr == b.bto || o.bto == b.bto)) {\n                    if (other != null) {\n                        other = null;\n                        break;\n                    }\n                    other = o;\n                }\n            }\n            if (other != null) {\n                let th1 = Math.atan2(y1 - y2, x1 - x2);\n                let th2 = Math.atan2(other.line.y1 - other.line.y2, other.line.x1 - other.line.x2);\n                if (b.bto == other.bfr)\n                    th2 += Math.PI;\n                let diff = Math.abs(angleDiff(th1, th2));\n                if (diff > 105 * DEGRAD && diff < 135 * DEGRAD) {\n                    let ixy1 = GeomUtil.lineIntersect(px[0], py[0], px[1], py[1], other.line.x1, other.line.y1, other.line.x2, other.line.y2);\n                    let ixy2 = GeomUtil.lineIntersect(px[0], py[0], px[2], py[2], other.line.x1, other.line.y1, other.line.x2, other.line.y2);\n                    px[1] = ixy1[0];\n                    py[1] = ixy1[1];\n                    px[2] = ixy2[0];\n                    py[2] = ixy2[1];\n                    let dx1 = px[1] - px[0], dy1 = py[1] - py[0], inv1 = 0.5 * other.size / norm_xy(dx1, dy1);\n                    px[1] += dx1 * inv1;\n                    py[1] += dy1 * inv1;\n                    let dx2 = px[2] - px[0], dy2 = py[2] - py[0], inv2 = 0.5 * other.size / norm_xy(dx2, dy2);\n                    px[2] += dx2 * inv1;\n                    py[2] += dy2 * inv1;\n                }\n            }\n        }\n        if (this.layout.getPoint(b.bto - 1).text == null && this.mol.atomAdjCount(b.bto) == 3) {\n            let other1 = null, other2 = null;\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let o = this.layout.getLine(n);\n                if (o.type == BLineType.Normal && (o.bfr == b.bto || o.bto == b.bto)) {\n                    if (other1 == null)\n                        other1 = o;\n                    else if (other2 == null)\n                        other2 = o;\n                    else {\n                        other1 = other2 = null;\n                        break;\n                    }\n                }\n            }\n            if (other1 != null && other2 != null) {\n                let th1 = Math.atan2(y1 - y2, x1 - x2);\n                let th2 = Math.atan2(other1.line.y1 - other1.line.y2, other1.line.x1 - other1.line.x2);\n                let th3 = Math.atan2(other2.line.y1 - other2.line.y2, other2.line.x1 - other2.line.x2);\n                if (b.bto == other1.bfr)\n                    th2 += Math.PI;\n                if (b.bto == other2.bfr)\n                    th3 += Math.PI;\n                let dth1 = angleDiff(th1, th2), diff1 = Math.abs(dth1);\n                let dth2 = angleDiff(th1, th3), diff2 = Math.abs(dth2);\n                let diff3 = Math.abs(angleDiff(th2, th3));\n                if (diff1 > 105 * DEGRAD && diff1 < 135 * DEGRAD ||\n                    diff2 > 105 * DEGRAD && diff2 < 135 * DEGRAD ||\n                    diff3 > 105 * DEGRAD && diff3 < 135 * DEGRAD) {\n                    if (dth1 < 0)\n                        [other1, other2] = [other2, other1];\n                    let ixy1 = GeomUtil.lineIntersect(px[0], py[0], px[1], py[1], other1.line.x1, other1.line.y1, other1.line.x2, other1.line.y2);\n                    let ixy2 = GeomUtil.lineIntersect(px[0], py[0], px[2], py[2], other2.line.x1, other2.line.y1, other2.line.x2, other2.line.y2);\n                    px = [x1, ixy1[0], x2, ixy2[0]];\n                    py = [y1, ixy1[1], y2, ixy2[1]];\n                }\n            }\n        }\n        this.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, col, true);\n    }\n    drawFusedWedge(b1, b2) {\n        const terminalPoints = (b, other) => {\n            let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n            let dx = x2 - x1, dy = y2 - y1;\n            let norm = b.head / Math.sqrt(dx * dx + dy * dy);\n            let ox = norm * dy, oy = -norm * dx;\n            let tx1 = x2 - ox, ty1 = y2 - oy, tx2 = x2 + ox, ty2 = y2 + oy;\n            let dsq1 = norm2_xy(tx1 - other.line.x1, ty1 - other.line.y1);\n            let dsq2 = norm2_xy(tx2 - other.line.x1, ty2 - other.line.y1);\n            if (dsq1 > dsq2)\n                return { outerX: tx1, outerY: ty1, innerX: tx2, innerY: ty2 };\n            else\n                return { outerX: tx2, outerY: ty2, innerX: tx1, innerY: ty1 };\n        };\n        let u = terminalPoints(b1, b2), v = terminalPoints(b2, b1);\n        let [innerX, innerY] = GeomUtil.lineIntersect(b1.line.x1, b1.line.y1, u.innerX, u.innerY, b2.line.x1, b2.line.y1, v.innerX, v.innerY);\n        let px = [b1.line.x1, u.outerX, v.outerX, b2.line.x1, innerX];\n        let py = [b1.line.y1, u.outerY, v.outerY, b2.line.y1, innerY];\n        this.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, b1.col, true);\n    }\n    drawBondDeclined(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let ext = Math.sqrt(dx * dx + dy * dy);\n        let nsteps = Math.ceil(ext * 2.5 * this.invScale);\n        let norm = head / ext;\n        let ox = norm * dy, oy = -norm * dx, invSteps = 1.0 / (nsteps + 1);\n        let holdout = this.mol.atomAdjCount(b.bto) == 1 && this.layout.getPoint(b.bto - 1).text == null ? 1 : 1 - (0.15 * this.scale) / ext;\n        for (let i = 0; i <= nsteps + 1; i++) {\n            let cx = x1 + i * dx * invSteps * holdout, cy = y1 + i * dy * invSteps * holdout;\n            let ix = ox * i * invSteps, iy = oy * i * invSteps;\n            this.vg.drawLine(cx - ix, cy - iy, cx + ix, cy + iy, col, size);\n        }\n    }\n    drawBondUnknown(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let ext = Math.sqrt(dx * dx + dy * dy);\n        let nsteps = Math.ceil(ext * 3.5 * this.invScale);\n        let norm = head / ext;\n        let ox = norm * dy, oy = -norm * dx;\n        let sz = 1 + 3 * (nsteps + 1);\n        let x = Vec.numberArray(0, sz), y = Vec.numberArray(0, sz), ctrl = Vec.booleanArray(false, sz);\n        x[0] = x1;\n        y[0] = y1;\n        ctrl[0] = false;\n        for (let i = 0, j = 1; i <= nsteps; i++, j += 3) {\n            let ax = x1 + i * dx / (nsteps + 1), ay = y1 + i * dy / (nsteps + 1);\n            let cx = x1 + (i + 1) * dx / (nsteps + 1), cy = y1 + (i + 1) * dy / (nsteps + 1);\n            let bx = (ax + cx) / 2, by = (ay + cy) / 2;\n            let sign = i % 2 == 0 ? 1 : -1;\n            x[j] = ax;\n            x[j + 1] = bx + sign * ox;\n            x[j + 2] = cx;\n            y[j] = ay;\n            y[j + 1] = by + sign * oy;\n            y[j + 2] = cy;\n            ctrl[j] = true;\n            ctrl[j + 1] = true;\n            ctrl[j + 2] = false;\n        }\n        this.vg.drawPath(x, y, ctrl, false, col, size, MetaVector.NOCOLOUR, false);\n    }\n    drawBondDotted(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size;\n        let radius = size, dist = norm_xy(dx, dy);\n        if (dist < 0.01)\n            return;\n        let nudge = 0.5 * size / dist;\n        x1 += nudge * dx;\n        y1 += nudge * dy;\n        x2 -= nudge * dx;\n        y2 -= nudge * dy;\n        dx = x2 - x1;\n        dy = y2 - y1;\n        let nsteps = Math.ceil(0.2 * dist / radius);\n        let invSteps = 1.0 / (nsteps + 1);\n        for (let i = 0; i <= nsteps + 1; i++) {\n            let r = radius;\n            if (b.type == BLineType.DotDir)\n                r *= 1 + (i * (1.0 / (nsteps + 2)) - 0.5);\n            let cx = x1 + i * dx * invSteps, cy = y1 + i * dy * invSteps;\n            this.vg.drawOval(cx, cy, r, r, MetaVector.NOCOLOUR, 0, col);\n        }\n    }\n    drawBondIncMulti(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let norm = head / Math.sqrt(dx * dx + dy * dy);\n        let ox = norm * dy, oy = -norm * dx;\n        this.vg.drawPoly([x1, x2 - ox, x2 + ox], [y1, y2 - oy, y2 + oy], col, this.scale * 0.05, MetaVector.NOCOLOUR, true);\n        if (b.type == BLineType.IncDouble) {\n            this.vg.drawLine(x1, y1, x2, y2, col, this.scale * 0.03);\n        }\n        else {\n            this.vg.drawLine(x1, y1, x2 + 0.33 * ox, y2 + 0.33 * oy, col, this.scale * 0.03);\n            this.vg.drawLine(x1, y1, x2 - 0.33 * ox, y2 - 0.33 * oy, col, this.scale * 0.03);\n        }\n    }\n}\n//# sourceMappingURL=DrawMolecule.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {MetaVector, TextAlign} from 'webmolkit/gfx/MetaVector';\nimport {ArrangeMixture, ArrangeMixtureComponent, ArrangeMixtureLine} from './ArrangeMixture';\nimport {Box} from 'webmolkit/util/Geom';\nimport {ArrangeMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {DrawMolecule} from 'webmolkit/gfx/DrawMolecule';\n\n/*\n\tDrawing a Mixfile, which has been rendered.\n*/\n\nexport class DrawMixture\n{\n\tpublic hoverIndex = -1; // component to give a faint tinting to (for hover-over effect)\n\tpublic activeIndex = -1; // component that is actively engaged with UI\n\tpublic selectedIndex = -1; // component that is passively selected\n\n\tpublic callbackDrawNameLine:(comp:ArrangeMixtureComponent, line:ArrangeMixtureLine, gfx:MetaVector, box:Box) => boolean = null;\n\n\tprivate measure:ArrangeMeasurement;\n\tprivate policy:RenderPolicy;\n\n\tprivate scale:number;\n\tprivate invScale:number;\n\n\t// --------------------- public methods ---------------------\n\n\tconstructor(private layout:ArrangeMixture, private vg:MetaVector)\n\t{\n\t\tthis.measure = layout.measure;\n\t\tthis.policy = layout.policy;\n\t\tthis.scale = layout.scale;\n\t\tthis.invScale = 1.0 / this.scale;\n\t}\n\n\t// renders the experiment, one component at a time\n\tpublic draw():void\n\t{\n\t\tfor (let comp of this.layout.components) if (comp.parentIdx >= 0)\n\t\t\tthis.drawConnection(this.layout.components[comp.parentIdx], comp);\n\n\t\tfor (let n = 0; n < this.layout.components.length; n++) this.drawComponent(n);\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\tprivate drawConnection(parent:ArrangeMixtureComponent, child:ArrangeMixtureComponent):void\n\t{\n\t\tlet x1 = parent.boundary.maxX(), x2 = child.boundary.minX();\n\t\tlet y1 = parent.boundary.midY(), y2 = child.boundary.midY();\n\t\t//let xm = 0.5 * (x1 + x2);\n\t\tlet xm = x1 + 0.25 * this.scale;\n\t\tlet ym = 0.5 * (y1 + y2);\n\t\tlet d = 4, xd = d, yd = y1 < y2 - 1 ? -d : y1 > y2 + 1 ? d : 0;\n\n\t\tlet px = [x1, xm - xd, xm, xm, xm, xm, xm + xd, x2];\n\t\tlet py = [y1, y1, y1, y1 - yd, y2 + yd, y2, y2, y2];\n\t\tlet lsz = this.scale * 0.1;\n\t\tthis.vg.drawPath(px, py, [false, false, true, false, false, true, false, false], false, 0x000000, lsz, MetaVector.NOCOLOUR, false);\n\t}\n\n\tprivate drawComponent(idx:number):void\n\t{\n\t\tlet comp = this.layout.components[idx];\n\n\t\tlet box = comp.outline.clone();\n\t\tbox.offsetBy(comp.boundary.x, comp.boundary.y);\n\t\tlet bg = 0xF8F8F8;\n\t\tif (idx == this.activeIndex) bg = 0x8296E4;\n\t\telse if (idx == this.selectedIndex) bg = 0xA9BBFF;\n\t\telse if (idx == this.hoverIndex) bg = 0xE0E0E0;\n\n\t\tthis.vg.drawRect(box.x, box.y, box.w, box.h, 0x808080, 1, bg);\n\n\t\tif (comp.molLayout) new DrawMolecule(comp.molLayout, this.vg).draw();\n\n\t\tif (comp.nameLines.length > 0)\n\t\t{\n\t\t\tlet x = box.x, cx = x + comp.nameBox.midX(), y = box.y + comp.nameBox.y;\n\t\t\tfor (let line of comp.nameLines)\n\t\t\t{\n\t\t\t\tlet wad = this.measure.measureText(line.text, comp.fontSize), h = wad[1] + 2 * wad[2];\n\t\t\t\tlet override = this.callbackDrawNameLine && this.callbackDrawNameLine(comp, line, this.vg, new Box(x, y, box.w, h));\n\t\t\t\tif (!override) this.vg.drawText(cx, y, line.text, comp.fontSize, line.col, TextAlign.Centre | TextAlign.Top);\n\t\t\t\ty += h;\n\t\t\t}\n\t\t}\n\n\t\tif (comp.collapseBox)\n\t\t{\n\t\t\tlet cbox = comp.collapseBox.clone();\n\t\t\tcbox.offsetBy(comp.boundary.x, comp.boundary.y);\n\t\t\tthis.vg.drawRect(cbox.x, cbox.y, cbox.w, cbox.h, 0x808080, 1, 0xF8F8F8);\n\t\t\tlet cx = cbox.midX(), cy = cbox.midY(), d = Math.min(cbox.w, cbox.h) * 0.4, sz = d * 0.2;\n\t\t\tthis.vg.drawLine(cx - d, cy, cx + d, cy, 0x000000, sz);\n\t\t\tif (comp.isCollapsed) this.vg.drawLine(cx, cy - d, cx, cy + d, 0x000000, sz);\n\t\t}\n\t}\n}\n\n","import { clearTooltip } from '../ui/Tooltip';\nimport { dom, domLegacy } from '../util/dom';\nimport { installInlineCSS } from '../util/Theme';\nconst CSS_DIALOG = `\n    *.wmk-dialog\n    {\n        font-family: 'Open Sans', sans-serif;\n\t\tfont-size: 16px;\n\t\tcolor: black;\n\t\tuser-select: none;\n    }\n\t*.wmk-noscroll\n\t{\n\t\toverflow: hidden;\n\t}\n`;\nexport class Dialog {\n    constructor(parent = null) {\n        this.minPortionWidth = 80;\n        this.maxPortionWidth = 80;\n        this.maximumWidth = 0;\n        this.maximumHeight = 0;\n        this.minPortionHeight = 20;\n        this.maxPortionHeight = 0;\n        this.topMargin = 50;\n        this.title = 'Dialog';\n        this.allowScroller = true;\n        this.zindex = null;\n        this.callbackClose = null;\n        this.callbackShown = null;\n        this.parent = domLegacy(parent);\n        installInlineCSS('dialog', CSS_DIALOG);\n    }\n    onClose(callback) {\n        this.callbackClose = callback;\n    }\n    onShown(callback) {\n        this.callbackShown = callback;\n    }\n    open() {\n        clearTooltip();\n        let body = this.parent || dom(document.body);\n        body.addClass('wmk-noscroll');\n        let bg = this.domObscureBackground = dom('<div/>').appendTo(body);\n        bg.css({ 'position': 'fixed' });\n        bg.css({ 'left': '0', 'right': '0', 'top': '0', 'bottom': '0' });\n        bg.css({ 'background-color': 'black', 'opacity': 0.8 });\n        bg.onClick(() => this.close());\n        let fg = this.domObscureForeground = dom('<div/>').appendTo(body);\n        fg.css({ 'position': 'fixed' });\n        fg.css({ 'left': '0', 'right': '0', 'top': '0', 'bottom': '0' });\n        if (this.zindex > 0) {\n            bg.setCSS('z-index', this.zindex);\n            fg.setCSS('z-index', this.zindex + 1);\n        }\n        let pb = this.domPanelBoundary = dom('<div class=\"wmk-dialog\"/>').appendTo(fg);\n        pb.css({ 'min-width': this.minPortionWidth + '%' });\n        if (this.maximumWidth > 0)\n            pb.css({ 'max-width': this.maximumWidth + 'px' });\n        else if (this.maxPortionWidth != null)\n            pb.css({ 'max-width': this.maxPortionWidth + '%' });\n        if (this.maximumHeight > 0)\n            pb.css({ 'max-height': this.maximumHeight + 'px' });\n        else if (this.maxPortionHeight > 0)\n            pb.css({ 'max-height': this.maxPortionHeight + 'vh' });\n        pb.css({ 'background-color': 'white', 'border-radius': '6px', 'border': '1px solid black' });\n        pb.css({ 'position': 'absolute' });\n        pb.css({ 'left': (50 - 0.5 * this.minPortionWidth) + '%' });\n        pb.css({ 'top': this.topMargin + 'px' });\n        pb.css({ 'min-height': this.minPortionHeight + '%' });\n        let divOuter = dom('<div/>').appendTo(pb).css({ 'display': 'flex' });\n        divOuter.css({ 'flex-direction': 'column', 'align-items': 'stretch' });\n        if (this.maximumHeight > 0)\n            divOuter.css({ 'max-height': this.maximumHeight + 'px' });\n        else if (this.maxPortionHeight > 0)\n            divOuter.css({ 'max-height': this.maxPortionHeight + 'vh' });\n        let tdiv = this.domTitle = dom('<div/>').appendTo(divOuter);\n        tdiv.css({ 'flex-shrink': '0', 'flex-grow': '0' });\n        tdiv.css({ 'margin': '0', 'padding': '0' });\n        tdiv.css({ 'background-color': '#F0F0F0' });\n        tdiv.css({ 'background-image': 'linear-gradient(to right bottom, #FFFFFF, #E0E0E0)' });\n        tdiv.css({ 'border-bottom': '1px solid #C0C0C0' });\n        tdiv.css({ 'border-radius': '6px 6px 0 0' });\n        let bdiv = dom('<div/>').appendTo(divOuter).css({ 'width': '100%' });\n        bdiv.css({ 'flex-shrink': '1', 'flex-grow': '0' });\n        if (this.allowScroller)\n            bdiv.css({ 'overflow-y': 'auto' });\n        this.domBody = dom('<div/>').appendTo(bdiv).css({ 'padding': '0.5em' });\n        let ttlTable = dom('<table/>').appendTo(tdiv), tr = dom('<tr/>').appendTo(ttlTable);\n        ttlTable.attr({ 'width': '100%' });\n        let tdTitle = dom('<td valign=\"center\"/>').appendTo(tr).css({ 'padding': '0.5em' });\n        let ttl = dom('<font/>').appendTo(tdTitle).css({ 'font-size': '1.5em', 'font-weight': '600' });\n        ttl.setText(this.title);\n        let tdButtons = this.domTitleButtons = dom('<td align=\"right\" valign=\"center\"/>').appendTo(tr).css({ 'padding': '0.5em' });\n        this.domClose = dom('<button class=\"wmk-button wmk-button-default\">Close</button>').appendTo(tdButtons);\n        this.domClose.onClick(() => this.close());\n        this.populate();\n        this.repositionSize();\n        if (this.callbackShown)\n            this.callbackShown(this);\n    }\n    close() {\n        clearTooltip();\n        this.domObscureBackground.remove();\n        this.domObscureForeground.remove();\n        let body = this.parent || dom(document.body);\n        body.removeClass('wmk-noscroll');\n        if (this.callbackClose)\n            this.callbackClose(this);\n    }\n    bump() {\n        this.repositionSize();\n    }\n    bodyDOM() { return this.domBody; }\n    buttonsDOM() { return this.domTitleButtons; }\n    populate() {\n        this.bodyDOM().setText('Empty dialog box.');\n    }\n    repositionSize() {\n        let docW = window.innerWidth, dlgW = this.domPanelBoundary.width();\n        this.domPanelBoundary.css({ 'left': (0.5 * (docW - dlgW)) + 'px' });\n    }\n}\n//# sourceMappingURL=Dialog.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"path\");","import { dom } from '../util/dom';\nimport { addTooltip } from './Tooltip';\nexport class Widget {\n    get contentDOM() { return this.domContent; }\n    constructor() {\n        this.tagType = 'div';\n        this.domContent = null;\n    }\n    render(parent) {\n        let tag = this.tagType;\n        this.domContent = dom(`<${tag}/>`).appendTo(parent);\n    }\n    remove() {\n        if (this.domContent)\n            this.domContent.remove();\n        this.domContent = null;\n    }\n    addTooltip(bodyHTML, titleHTML) {\n        addTooltip(this.contentDOM, bodyHTML, titleHTML);\n    }\n    grabFocus() {\n        this.domContent.grabFocus();\n    }\n}\n//# sourceMappingURL=Widget.js.map","import { FontData } from '../gfx/FontData';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { dom } from '../util/dom';\nimport { Theme } from '../util/Theme';\nimport { colourCanvas, eventCoords, newElement, pathRoundedRect, pixelDensity, setBoundaryPixels } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { addTooltip } from './Tooltip';\nimport { Widget } from './Widget';\nexport var ButtonViewPosition;\n(function (ButtonViewPosition) {\n    ButtonViewPosition[ButtonViewPosition[\"Left\"] = 0] = \"Left\";\n    ButtonViewPosition[ButtonViewPosition[\"Right\"] = 1] = \"Right\";\n    ButtonViewPosition[ButtonViewPosition[\"Top\"] = 2] = \"Top\";\n    ButtonViewPosition[ButtonViewPosition[\"Bottom\"] = 3] = \"Bottom\";\n    ButtonViewPosition[ButtonViewPosition[\"Centre\"] = 4] = \"Centre\";\n})(ButtonViewPosition || (ButtonViewPosition = {}));\nexport class ButtonView extends Widget {\n    constructor(position, parentX, parentY, parentWidth, parentHeight) {\n        super();\n        this.position = position;\n        this.parentX = parentX;\n        this.parentY = parentY;\n        this.parentWidth = parentWidth;\n        this.parentHeight = parentHeight;\n        this.idealSize = 50;\n        this.width = 0;\n        this.height = 0;\n        this.selectedButton = null;\n        this.highlightButton = null;\n        this.maxButtonColumns = 0;\n        this.maxButtonRows = 0;\n        this.border = 0x808080;\n        this.background = 0xFFFFFF;\n        this.buttonColNorm1 = 0x47D5D2;\n        this.buttonColNorm2 = 0x008FD1;\n        this.buttonColActv1 = 0x30FF69;\n        this.buttonColActv2 = 0x008650;\n        this.buttonColSel1 = 0xFFFFFF;\n        this.buttonColSel2 = 0xE0E0E0;\n        this.canvas = null;\n        this.stack = [];\n        this.display = [];\n        this.hasBigButtons = true;\n        this.prefabImgSize = 44;\n        this.gripHeight = 30;\n        this.gripWidth = 50;\n        this.isRaised = true;\n        this.outPadding = 2;\n        this.inPadding = 2;\n        this.x = 0;\n        this.y = 0;\n        this.isMacLike = false;\n        this.isMacLike = !!navigator.platform.match(/(Mac|iPhone|iPod|iPad)/i);\n    }\n    setParentSize(width, height) {\n        this.parentWidth = width;\n        this.parentHeight = height;\n        if (this.contentDOM) {\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    get topBank() {\n        return this.stack.length > 0 ? this.stack[this.stack.length - 1] : null;\n    }\n    get stackSize() { return this.stack.length; }\n    render(parent) {\n        super.render(parent);\n        this.contentDOM.css({ 'position': 'absolute', 'width': `${this.width}px`, 'height': `${this.height}px` });\n        this.contentDOM.addClass('no_selection');\n        this.layoutButtons();\n        let canvasStyle = 'position: absolute; left: 0; top: 0;';\n        canvasStyle += 'pointer-events: none;';\n        this.canvas = newElement(this.contentDOM.el, 'canvas', { 'width': this.width, 'height': this.height, 'style': canvasStyle });\n        this.canvas.style.width = this.width + 'px';\n        this.canvas.style.height = this.height + 'px';\n        this.applyOffset();\n        this.redraw();\n        this.contentDOM.onClick((event) => this.mouseClick(event));\n        this.contentDOM.onDblClick((event) => this.mouseDoubleClick(event));\n        this.contentDOM.onMouseDown((event) => { event.preventDefault(); this.mouseDown(event); });\n        this.contentDOM.onMouseUp((event) => this.mouseUp(event));\n        this.contentDOM.onMouseOver((event) => this.mouseOver(event));\n        this.contentDOM.onMouseLeave((event) => this.mouseOut(event));\n        this.contentDOM.onMouseMove((event) => this.mouseMove(event));\n    }\n    pushBank(bank) {\n        bank.buttonView = this;\n        bank.isSubLevel = this.stack.length > 0;\n        bank.init();\n        this.stack.push(bank);\n        if (this.canvas != null) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    popBank() {\n        if (this.stack.length == 0)\n            return;\n        Vec.last(this.stack).bankClosed();\n        this.stack.length--;\n        if (this.canvas != null) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    refreshBank() {\n        if (this.canvas != null) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    getSelectedButton() {\n        return this.selectedButton;\n    }\n    setSelectedButton(id) {\n        if (id != this.selectedButton) {\n            this.selectedButton = id;\n            this.redraw();\n        }\n    }\n    cycleSelected(dir) {\n        let sorted = this.display.filter((s) => s.id != '*');\n        sorted.sort((d1, d2) => (d1.y * 10000 + d1.x) - (d2.y * 10000 + d2.x));\n        let idx = 0, sz = sorted.length;\n        for (let n = 0; n < sz; n++)\n            if (sorted[n].id == this.selectedButton) {\n                idx = n;\n                break;\n            }\n        this.selectedButton = sorted[(idx + dir + sz) % sz].id;\n        this.redraw();\n    }\n    raiseBank() {\n        if (this.isRaised)\n            return;\n        this.isRaised = true;\n        if (this.contentDOM) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    lowerBank() {\n        if (!this.isRaised)\n            return;\n        this.isRaised = false;\n        if (this.contentDOM) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    getHasBigButtons() {\n        return this.hasBigButtons;\n    }\n    setHasBigButtons(flag) {\n        this.hasBigButtons = flag;\n        this.prefabImgSize = flag ? 44 : 36;\n        this.idealSize = flag ? 50 : 40;\n    }\n    withinOutline(x, y) {\n        let w = this.width, h = this.height;\n        if (x < 0 || x > w || y < 0 || y > h)\n            return false;\n        if (this.position == ButtonViewPosition.Centre || this.stack.length == 0)\n            return true;\n        if (this.position == ButtonViewPosition.Left) {\n            let my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n            return x < w - gw || (y > my - hg && y < my + hg);\n        }\n        else if (this.position == ButtonViewPosition.Right) {\n            let my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n            return x > gw || (y > my - hg && y < my + hg);\n        }\n        else if (this.position == ButtonViewPosition.Top) {\n            let mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n            return y < h - gh || (x > mx - hg && x < mx + hg);\n        }\n        else if (this.position == ButtonViewPosition.Bottom) {\n            let mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n            return y > gh || (x > mx - hg && x < mx + hg);\n        }\n        return true;\n    }\n    gripSize() {\n        return this.gripHeight;\n    }\n    sizeForButtons(nbtn) {\n        return this.idealSize * nbtn + this.inPadding * (nbtn - 1) + 2 * this.outPadding;\n    }\n    layoutButtons() {\n        if (this.contentDOM == null)\n            return;\n        let outPadding = this.outPadding, inPadding = this.inPadding;\n        this.removeDisplayButtons();\n        if (this.stack.length == 0) {\n            this.width = 10;\n            this.height = 10;\n            if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n                this.height = this.parentHeight;\n            else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n                this.width = this.parentWidth;\n            return;\n        }\n        if (!this.isRaised) {\n            if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) {\n                this.width = this.gripHeight;\n                this.height = this.gripWidth + 2 * outPadding;\n            }\n            else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) {\n                this.width = this.gripWidth + 2 * outPadding;\n                this.height = this.gripHeight;\n            }\n            this.addGripButton();\n            return;\n        }\n        let bank = this.stack[this.stack.length - 1];\n        bank.buttons = [];\n        bank.update();\n        let popWidth = 0, popHeight = 0;\n        if (this.stack.length == 1) { }\n        else if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n            popHeight = this.gripHeight + inPadding;\n        else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n            popWidth = this.gripHeight + inPadding;\n        let bestLayout = null, bestScore = null;\n        if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) {\n            let maxSlotHeight = Math.floor((this.parentHeight - 2 * outPadding - inPadding) / (this.idealSize + inPadding));\n            let minSlotHeight = Math.ceil(0.5 * maxSlotHeight);\n            for (let i = maxSlotHeight; i >= minSlotHeight; i--) {\n                let slotWidth = Math.ceil(bank.buttons.length / i);\n                for (let j = slotWidth; j <= slotWidth + 1; j++) {\n                    let layout = this.layoutMaxHeight(bank, i, j);\n                    let score = this.scoreLayout(layout) + 1 * layout[0].length;\n                    if (bestLayout == null || score < bestScore) {\n                        bestLayout = layout;\n                        bestScore = score;\n                    }\n                }\n            }\n        }\n        else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) {\n            let maxSlotWidth = Math.floor((this.parentWidth - 2 * outPadding - inPadding - popWidth) / (this.idealSize + inPadding));\n            let minSlotWidth = Math.ceil(0.5 * maxSlotWidth);\n            for (let n = maxSlotWidth; n >= minSlotWidth; n--) {\n                let layout = this.layoutMaxWidth(bank, n);\n                let score = this.scoreLayout(layout) + 1 * layout.length;\n                if (bestLayout == null || score < bestScore) {\n                    bestLayout = layout;\n                    bestScore = score;\n                }\n            }\n        }\n        else {\n        }\n        let ncols = bestLayout[0].length, nrows = bestLayout.length;\n        this.width = 2 * outPadding + inPadding + (this.idealSize + inPadding) * ncols + popWidth;\n        this.height = 2 * outPadding + inPadding + (this.idealSize + inPadding) * nrows + popHeight;\n        if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n            this.width += this.gripHeight;\n        else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n            this.height += this.gripHeight;\n        this.addGripButton();\n        if (popWidth > 0 || popHeight > 0) {\n            let d = {\n                id: '!',\n                x: outPadding + inPadding,\n                y: outPadding + inPadding,\n                width: popWidth - inPadding,\n                height: popHeight - inPadding\n            };\n            if (this.position == ButtonViewPosition.Right)\n                d.x += this.gripHeight;\n            else if (this.position == ButtonViewPosition.Bottom)\n                d.y += this.gripHeight;\n            if (popWidth == 0)\n                d.width = ncols * this.idealSize + inPadding * (ncols - 1);\n            if (popHeight == 0)\n                d.height = nrows * this.idealSize + inPadding * (nrows - 1);\n            this.display.push(d);\n        }\n        for (let y = 0; y < nrows; y++)\n            for (let x = 0; x < ncols; x++) {\n                for (let n = 0; n < bank.buttons.length; n++)\n                    if (bestLayout[y][x] == bank.buttons[n].id) {\n                        let b = bank.buttons[n], d = { id: b.id };\n                        d.x = outPadding + inPadding + popWidth + (this.idealSize + inPadding) * x;\n                        d.y = outPadding + inPadding + popHeight + (this.idealSize + inPadding) * y;\n                        if (this.position == ButtonViewPosition.Right)\n                            d.x += this.gripHeight;\n                        else if (this.position == ButtonViewPosition.Bottom)\n                            d.y += this.gripHeight;\n                        d.width = this.idealSize;\n                        d.height = this.idealSize;\n                        this.display.push(d);\n                    }\n            }\n    }\n    addGripButton() {\n        if (this.position == ButtonViewPosition.Centre)\n            return;\n        let d = { id: '*' }, spc = 3;\n        if (this.position == ButtonViewPosition.Left) {\n            d.width = this.gripHeight - spc;\n            d.height = this.gripWidth - 2 * spc;\n            d.x = this.width - d.width - spc - 1;\n            d.y = 0.5 * (this.height - d.height);\n        }\n        else if (this.position == ButtonViewPosition.Right) {\n            d.width = this.gripHeight - spc;\n            d.height = this.gripWidth - 2 * spc;\n            d.x = spc + 1;\n            d.y = 0.5 * (this.height - d.height);\n        }\n        else if (this.position == ButtonViewPosition.Top) {\n            d.width = this.gripWidth - 2 * spc;\n            d.height = this.gripHeight - spc;\n            d.x = 0.5 * (this.width - d.width);\n            d.y = this.height - d.height - spc - 1;\n        }\n        else if (this.position == ButtonViewPosition.Bottom) {\n            d.width = this.gripWidth - 2 * spc;\n            d.height = this.gripHeight - spc;\n            d.x = 0.5 * (this.width - d.width);\n            d.y = spc + 1;\n        }\n        this.display.push(d);\n    }\n    replaceCanvas() {\n        this.contentDOM.empty();\n        for (let n = 0; n < this.display.length; n++) {\n            this.display[n].imgDOM = null;\n            this.display[n].helpSpan = null;\n        }\n        let canvasStyle = 'position: absolute; left: 0; top: 0;';\n        canvasStyle += 'pointer-events: none;';\n        this.canvas = newElement(this.contentDOM.el, 'canvas', { 'width': this.width, 'height': this.height, 'style': canvasStyle });\n    }\n    removeDisplayButtons() {\n        this.contentDOM.empty();\n        this.display = [];\n    }\n    applyOffset() {\n        let x, y;\n        if (this.position == ButtonViewPosition.Left) {\n            x = 0;\n            y = 0.5 * (this.parentHeight - this.height);\n        }\n        else if (this.position == ButtonViewPosition.Right) {\n            x = this.parentWidth - this.width;\n            y = 0.5 * (this.parentHeight - this.height);\n        }\n        else if (this.position == ButtonViewPosition.Top) {\n            x = 0.5 * (this.parentWidth - this.width);\n            y = 0;\n        }\n        else if (this.position == ButtonViewPosition.Bottom) {\n            x = 0.5 * (this.parentWidth - this.width);\n            y = this.parentHeight - this.height;\n        }\n        else {\n            x = 0.5 * (this.parentWidth - this.width);\n            y = 0.5 * (this.parentHeight - this.height);\n        }\n        this.x = this.parentX + x;\n        this.y = this.parentY + y;\n        this.contentDOM.css({ 'position': 'absolute' });\n        setBoundaryPixels(this.contentDOM, this.x, this.y, this.width, this.height);\n    }\n    redraw() {\n        if (!this.contentDOM || !this.canvas)\n            return;\n        let density = pixelDensity();\n        this.canvas.width = this.width * density;\n        this.canvas.height = this.height * density;\n        this.canvas.style.width = this.width + 'px';\n        this.canvas.style.height = this.height + 'px';\n        let ctx = this.canvas.getContext('2d');\n        ctx.save();\n        ctx.scale(density, density);\n        ctx.clearRect(0, 0, this.width, this.height);\n        let path = this.traceOutline();\n        ctx.fillStyle = colourCanvas(this.background);\n        ctx.fill(path);\n        ctx.strokeStyle = colourCanvas(this.border);\n        ctx.lineWidth = 1;\n        ctx.stroke(path);\n        let bank = this.stack.length > 0 ? this.stack[this.stack.length - 1] : null;\n        this.contentDOM.css({ 'width': this.width + 'px', 'height': this.height + 'px' });\n        for (let n = 0; n < this.display.length; n++) {\n            const d = this.display[n], b = this.buttonFromID(d.id);\n            let col1, col2;\n            if (this.highlightButton != null && d.id == this.highlightButton) {\n                col1 = this.buttonColActv1;\n                col2 = this.buttonColActv2;\n            }\n            else if (this.selectedButton != null && d.id == this.selectedButton) {\n                col1 = this.buttonColSel1;\n                col2 = this.buttonColSel2;\n            }\n            else {\n                col1 = this.buttonColNorm1;\n                col2 = this.buttonColNorm2;\n            }\n            ctx.save();\n            path = pathRoundedRect(d.x + 0.5, d.y + 0.5, d.x + d.width - 1, d.y + d.height - 1, 5);\n            if (col2 != null) {\n                let grad = ctx.createLinearGradient(d.x, d.y, d.x + d.width, d.y + d.height);\n                grad.addColorStop(0, colourCanvas(col1));\n                grad.addColorStop(1, colourCanvas(col2));\n                ctx.fillStyle = grad;\n            }\n            else\n                ctx.fillStyle = colourCanvas(col1);\n            ctx.fill(path);\n            ctx.strokeStyle = colourCanvas(this.border);\n            ctx.lineWidth = 0.5;\n            ctx.stroke(path);\n            ctx.restore();\n            if (d.imgDOM != null) {\n                d.imgDOM.remove();\n                d.imgDOM = null;\n            }\n            if (b != null) {\n                if (d.helpSpan == null) {\n                    d.helpSpan = dom('<span style=\"position: absolute;\"/>').appendTo(this.contentDOM);\n                    let txt = b.helpText;\n                    if (b.mnemonic) {\n                        while (txt.endsWith('.'))\n                            txt = txt.substring(0, txt.length - 1);\n                        let keyText = b.mnemonic;\n                        let match = keyText.match(/^(.*)CmdOrCtrl(.*)$/);\n                        if (match)\n                            keyText = match[1] + (this.isMacLike ? 'Cmd' : 'Ctrl') + match[2];\n                        txt += ' [' + keyText + ']';\n                    }\n                    addTooltip(d.helpSpan, txt);\n                }\n                setBoundaryPixels(d.helpSpan, d.x, d.y, d.width, d.height);\n            }\n            if (b == null) { }\n            else if (b.imageFN != null && d.imgDOM == null) {\n                d.imgDOM = dom('<img/>').appendTo(this.contentDOM).css({ 'position': 'absolute', 'pointer-events': 'none' });\n                d.imgDOM.setAttr('src', Theme.RESOURCE_URL + '/img/actions/' + b.imageFN + '.svg');\n                const sz = this.prefabImgSize;\n                const bx = d.x + Math.floor(0.5 * (d.width - sz));\n                const by = d.y + Math.floor(0.5 * (d.height - sz));\n                setBoundaryPixels(d.imgDOM, bx, by, sz, sz);\n            }\n            else if (b.svg != null) {\n                d.imgDOM = dom('<div/>').appendTo(this.contentDOM).css({ 'display': 'block', 'position': 'absolute', 'pointer-events': 'none' });\n                const sz = this.prefabImgSize;\n                const bx = d.x + Math.floor(0.5 * (d.width - sz));\n                const by = d.y + Math.floor(0.5 * (d.height - sz));\n                setBoundaryPixels(d.imgDOM, bx, by, sz, sz);\n                let svg = dom(b.svg.substring(b.svg.indexOf('<svg'))).appendTo(d.imgDOM);\n                let oldWidth = svg.getAttr('width'), oldHeight = svg.getAttr('height');\n                svg.attr({ 'viewBox': `0 0 ${oldWidth} ${oldHeight}`, 'width': `${sz}`, 'height': `${sz}` });\n                svg.css({ 'width': `${sz}px`, 'height': `${sz}px`, 'pointer-events': 'none' });\n                dom(svg).appendTo(d.imgDOM);\n            }\n            else if (b.metavec != null) {\n                let draw = b.metavec instanceof MetaVector ? b.metavec : new MetaVector(b.metavec);\n                draw.offsetX = d.x + Math.floor(0.5 * (d.width - draw.width));\n                draw.offsetY = d.y + Math.floor(0.5 * (d.height - draw.height));\n                draw.renderContext(ctx);\n            }\n            else if (b.text != null) {\n                let sz = this.idealSize;\n                let draw = new MetaVector({ 'size': [sz, sz] });\n                let fsz = sz * 0.6;\n                let wad = FontData.main.measureText(b.text, fsz);\n                if (wad[1] + wad[2] > sz) {\n                    fsz *= sz / (wad[1] + wad[2]);\n                    wad = FontData.main.measureText(b.text, fsz);\n                }\n                if (wad[0] > sz) {\n                    fsz *= sz / wad[0];\n                    wad = FontData.main.measureText(b.text, fsz);\n                }\n                let x = 0.5 * (sz - wad[0]), y = 0.5 * (sz + wad[1]);\n                draw.drawText(x - 1, y, b.text, fsz, 0x000000);\n                draw.drawText(x + 1, y, b.text, fsz, 0x000000);\n                draw.drawText(x, y - 1, b.text, fsz, 0x000000);\n                draw.drawText(x, y + 1, b.text, fsz, 0x000000);\n                draw.drawText(x, y, b.text, fsz, 0xFFFFFF);\n                draw.offsetX = d.x + Math.floor(0.5 * (d.width - draw.width));\n                draw.offsetY = d.y + Math.floor(0.5 * (d.height - draw.height));\n                draw.renderContext(ctx);\n            }\n            if (b != null && b.isSubMenu) {\n                ctx.save();\n                let sx = d.x + d.width - 3, sy = d.y + d.height - 3;\n                ctx.beginPath();\n                ctx.moveTo(sx, sy);\n                ctx.lineTo(sx - 6, sy);\n                ctx.lineTo(sx, sy - 6);\n                ctx.closePath();\n                ctx.fillStyle = 'black';\n                ctx.fill();\n                ctx.restore();\n            }\n            if (d.id == '*') {\n                ctx.save();\n                path = new Path2D();\n                let px, py, flip = this.isRaised;\n                if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) {\n                    px = [0.2, 0.7, 0.7];\n                    py = [0.5, 0.3, 0.7];\n                    if (this.position == ButtonViewPosition.Left)\n                        flip = !flip;\n                }\n                else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) {\n                    px = [0.5, 0.3, 0.7];\n                    py = [0.2, 0.7, 0.7];\n                    if (this.position == ButtonViewPosition.Top)\n                        flip = !flip;\n                }\n                if (flip) {\n                    px = [1 - px[0], 1 - px[1], 1 - px[2]];\n                    py = [1 - py[0], 1 - py[1], 1 - py[2]];\n                }\n                path.moveTo(d.x + d.width * px[0], d.y + d.height * py[0]);\n                path.lineTo(d.x + d.width * px[1], d.y + d.height * py[1]);\n                path.lineTo(d.x + d.width * px[2], d.y + d.height * py[2]);\n                path.closePath();\n                ctx.fillStyle = 'white';\n                ctx.strokeStyle = 'black';\n                ctx.lineWidth = 0;\n                ctx.fill(path);\n                ctx.stroke(path);\n                ctx.restore();\n            }\n            else if (d.id == '!') {\n                ctx.save();\n                let path1 = new Path2D(), path2 = new Path2D();\n                let inset = 5;\n                let w = d.width - inset * 2, h = d.height - inset * 2;\n                for (let z = 5; z < w + h - 1; z += 12) {\n                    let x1 = 0, y1 = z, x2 = z, y2 = 0;\n                    if (y1 > h) {\n                        let delta = y1 - h;\n                        x1 += delta;\n                        y1 -= delta;\n                    }\n                    if (x2 > w) {\n                        let delta = x2 - w;\n                        x2 -= delta;\n                        y2 += delta;\n                    }\n                    path1.moveTo(d.x + inset + x1, d.y + inset + y1);\n                    path1.lineTo(d.x + inset + x2, d.y + inset + y2);\n                    path2.moveTo(d.x + inset + x1 + 1, d.y + inset + y1);\n                    path2.lineTo(d.x + inset + x2 + 1, d.y + inset + y2);\n                }\n                ctx.lineWidth = 1;\n                ctx.strokeStyle = '#404040';\n                ctx.stroke(path1);\n                ctx.strokeStyle = 'white';\n                ctx.stroke(path2);\n                ctx.restore();\n            }\n        }\n        ctx.restore();\n    }\n    delayedRedraw() {\n        window.setTimeout(() => this.redraw(), 100);\n    }\n    buttonFromID(id) {\n        let bank = this.stack[this.stack.length - 1];\n        for (let n = 0; n < bank.buttons.length; n++)\n            if (bank.buttons[n].id == id)\n                return bank.buttons[n];\n        return null;\n    }\n    displayFromID(id) {\n        for (let n = 0; n < this.display.length; n++)\n            if (this.display[n].id == id)\n                return this.display[n];\n        return null;\n    }\n    traceOutline() {\n        let w = this.width, h = this.height, uw = w - 1, uh = h - 1, r = 8;\n        if (this.position == ButtonViewPosition.Centre || this.stack.length == 0)\n            return pathRoundedRect(0.5, 0.5, w - 0.5, h - 0.5, r);\n        let path = new Path2D();\n        if (this.position == ButtonViewPosition.Left) {\n            let my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n            path.moveTo(0.5, 0.5);\n            path.lineTo(0.5 + uw - gw - r, 0.5);\n            path.bezierCurveTo(0.5 + uw - gw, 0.5, 0.5 + uw - gw, 0.5, 0.5 + uw - gw, 0.5 + r);\n            path.lineTo(0.5 + uw - gw, 0.5 + my - hg);\n            path.lineTo(0.5 + uw - r, 0.5 + my - hg);\n            path.bezierCurveTo(0.5 + uw, 0.5 + my - hg, 0.5 + uw, 0.5 + my - hg, 0.5 + uw, 0.5 + my - hg + r);\n            path.lineTo(0.5 + uw, 0.5 + my + hg - r);\n            path.bezierCurveTo(0.5 + uw, 0.5 + my + hg, 0.5 + uw, 0.5 + my + hg, 0.5 + uw - r, 0.5 + my + hg);\n            path.lineTo(0.5 + uw - gw, 0.5 + my + hg);\n            path.lineTo(0.5 + uw - gw, 0.5 + uh - r);\n            path.bezierCurveTo(0.5 + uw - gw, 0.5 + uh, 0.5 + uw - gw, 0.5 + uh, 0.5 + uw - gw - r, 0.5 + uh);\n            path.lineTo(0.5, 0.5 + uh);\n        }\n        else if (this.position == ButtonViewPosition.Right) {\n            let my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n            path.moveTo(w - 0.5, 0.5);\n            path.lineTo(w - (0.5 + uw - gw - r), 0.5);\n            path.bezierCurveTo(w - (0.5 + uw - gw), 0.5, w - (0.5 + uw - gw), 0.5, w - (0.5 + uw - gw), 0.5 + r);\n            path.lineTo(w - (0.5 + uw - gw), 0.5 + my - hg);\n            path.lineTo(w - (0.5 + uw - r), 0.5 + my - hg);\n            path.bezierCurveTo(w - (0.5 + uw), 0.5 + my - hg, w - (0.5 + uw), 0.5 + my - hg, w - (0.5 + uw), 0.5 + my - hg + r);\n            path.lineTo(w - (0.5 + uw), 0.5 + my + hg - r);\n            path.bezierCurveTo(w - (0.5 + uw), 0.5 + my + hg, w - (0.5 + uw), 0.5 + my + hg, w - (0.5 + uw - r), 0.5 + my + hg);\n            path.lineTo(w - (0.5 + uw - gw), 0.5 + my + hg);\n            path.lineTo(w - (0.5 + uw - gw), 0.5 + uh - r);\n            path.bezierCurveTo(w - (0.5 + uw - gw), 0.5 + uh, w - (0.5 + uw - gw), 0.5 + uh, w - (0.5 + uw - gw - r), 0.5 + uh);\n            path.lineTo(w - 0.5, 0.5 + uh);\n        }\n        else if (this.position == ButtonViewPosition.Top) {\n            let mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n            path.moveTo(0.5, h - (0.5 + uh));\n            path.lineTo(0.5, h - (0.5 + gh + r));\n            path.bezierCurveTo(0.5, h - (0.5 + gh), 0.5, h - (0.5 + gh), 0.5 + r, h - (0.5 + gh));\n            path.lineTo(0.5 + mx - hg, h - (0.5 + gh));\n            path.lineTo(0.5 + mx - hg, h - (0.5 + r));\n            path.bezierCurveTo(0.5 + mx - hg, h - 0.5, 0.5 + mx - hg, h - 0.5, 0.5 + mx - hg + r, h - 0.5);\n            path.lineTo(0.5 + mx + hg - r, h - 0.5);\n            path.bezierCurveTo(0.5 + mx + hg, h - 0.5, 0.5 + mx + hg, h - 0.5, 0.5 + mx + hg, h - (0.5 + r));\n            path.lineTo(0.5 + mx + hg, h - (0.5 + gh));\n            path.lineTo(0.5 + uw - r, h - (0.5 + gh));\n            path.bezierCurveTo(0.5 + uw, h - (0.5 + gh), 0.5 + uw, h - (0.5 + gh), 0.5 + uw, h - (0.5 + gh + r));\n            path.lineTo(0.5 + uw, h - (0.5 + uh));\n        }\n        else if (this.position == ButtonViewPosition.Bottom) {\n            let mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n            path.moveTo(0.5, 0.5 + uh);\n            path.lineTo(0.5, 0.5 + gh + r);\n            path.bezierCurveTo(0.5, 0.5 + gh, 0.5, 0.5 + gh, 0.5 + r, 0.5 + gh);\n            path.lineTo(0.5 + mx - hg, 0.5 + gh);\n            path.lineTo(0.5 + mx - hg, 0.5 + r);\n            path.bezierCurveTo(0.5 + mx - hg, 0.5, 0.5 + mx - hg, 0.5, 0.5 + mx - hg + r, 0.5);\n            path.lineTo(0.5 + mx + hg - r, 0.5);\n            path.bezierCurveTo(0.5 + mx + hg, 0.5, 0.5 + mx + hg, 0.5, 0.5 + mx + hg, 0.5 + r);\n            path.lineTo(0.5 + mx + hg, 0.5 + gh);\n            path.lineTo(0.5 + uw - r, 0.5 + gh);\n            path.bezierCurveTo(0.5 + uw, 0.5 + gh, 0.5 + uw, 0.5 + gh, 0.5 + uw, 0.5 + gh + r);\n            path.lineTo(0.5 + uw, 0.5 + uh);\n        }\n        return path;\n    }\n    layoutMaxWidth(bank, slotWidth) {\n        if (bank.buttons.length == 0)\n            return [[null]];\n        let bx = new Array(bank.buttons.length), by = new Array(bank.buttons.length);\n        let x = 0, y = 0, w = 0, h = 0;\n        for (let n = 0; n < bank.buttons.length; n++) {\n            w = Math.max(x + 1, w);\n            h = Math.max(y + 1, h);\n            bx[n] = x;\n            by[n] = y;\n            x++;\n            if (x >= slotWidth) {\n                x = 0;\n                y++;\n            }\n        }\n        let slot = new Array(h);\n        for (let n = 0; n < h; n++)\n            slot[n] = new Array(w);\n        for (let n = 0; n < bank.buttons.length; n++) {\n            slot[by[n]][bx[n]] = bank.buttons[n].id;\n        }\n        return slot;\n    }\n    layoutMaxHeight(bank, slotHeight, slotWidth) {\n        if (bank.buttons.length == 0)\n            return [[null]];\n        let bx = new Array(bank.buttons.length), by = new Array(bank.buttons.length);\n        let x = 0, y = 0, w = 0, h = 0;\n        for (let n = 0; n < bank.buttons.length; n++) {\n            w = Math.max(x + 1, w);\n            h = Math.max(y + 1, h);\n            bx[n] = x;\n            by[n] = y;\n            x++;\n            if (x >= slotWidth) {\n                x = 0;\n                y++;\n            }\n        }\n        let slot = new Array(h);\n        for (let n = 0; n < h; n++)\n            slot[n] = new Array(w);\n        for (let n = 0; n < bank.buttons.length; n++) {\n            slot[by[n]][bx[n]] = bank.buttons[n].id;\n        }\n        return slot;\n    }\n    scoreLayout(slots) {\n        let score = 0;\n        let nrows = slots.length, ncols = slots[0].length;\n        for (let y = 0; y < nrows; y++)\n            for (let x = 0; x < ncols; x++) {\n                if (slots[y][x] == null)\n                    score++;\n            }\n        if (this.maxButtonRows > 0 && nrows > this.maxButtonRows)\n            score += (nrows - this.maxButtonRows) * 100;\n        if (this.maxButtonColumns > 0 && ncols > this.maxButtonColumns)\n            score += (ncols - this.maxButtonColumns) * 100;\n        return score;\n    }\n    pickButtonIndex(x, y) {\n        for (let n = 0; n < this.display.length; n++) {\n            let d = this.display[n];\n            if (x >= d.x && y >= d.y && x < d.x + d.width && y < d.y + d.height)\n                return n;\n        }\n        return -1;\n    }\n    pickButtonID(x, y) {\n        let idx = this.pickButtonIndex(x, y);\n        if (idx < 0)\n            return undefined;\n        return this.display[idx].id;\n    }\n    triggerButton(id) {\n        if (id == '*') {\n            if (this.isRaised)\n                this.lowerBank();\n            else\n                this.raiseBank();\n            return;\n        }\n        else if (id == '!') {\n            this.popBank();\n            return;\n        }\n        let bank = this.stack[this.stack.length - 1];\n        bank.hitButton(id);\n    }\n    mouseClick(event) {\n    }\n    mouseDoubleClick(event) {\n        event.stopImmediatePropagation();\n    }\n    mouseDown(event) {\n        this.contentDOM.parent().grabFocus();\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1]))\n            return;\n        let id = this.pickButtonID(xy[0], xy[1]);\n        if (id != this.highlightButton) {\n            this.highlightButton = id;\n            this.redraw();\n        }\n        event.stopPropagation();\n    }\n    mouseUp(event) {\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1]))\n            return;\n        let id = this.pickButtonID(xy[0], xy[1]);\n        if (id != null && this.highlightButton == id) {\n            this.highlightButton = undefined;\n            this.triggerButton(id);\n            this.delayedRedraw();\n        }\n        else {\n            this.highlightButton = undefined;\n            this.delayedRedraw();\n        }\n        event.stopPropagation();\n    }\n    mouseOver(event) {\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1]))\n            return;\n        event.stopPropagation();\n    }\n    mouseOut(event) {\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1])) {\n            if (this.highlightButton != null) {\n                this.highlightButton = null;\n                this.delayedRedraw();\n            }\n            return;\n        }\n        if (this.highlightButton != null) {\n            let xy = eventCoords(event, this.contentDOM);\n            let id = this.pickButtonID(xy[0], xy[1]);\n            if (id != this.highlightButton) {\n                this.highlightButton = null;\n                this.delayedRedraw();\n            }\n        }\n        event.stopPropagation();\n    }\n    mouseMove(event) {\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1]))\n            return;\n    }\n}\n//# sourceMappingURL=ButtonView.js.map","export class ButtonBank {\n    constructor() {\n        this.isSubLevel = false;\n        this.buttons = [];\n    }\n    init() { }\n    claimKey(event) { return false; }\n    bankClosed() { }\n    static matchKey(event, mnemonic, key) {\n        if (mnemonic == null || mnemonic == '')\n            return false;\n        let mshift = false, mctrl = false, malt = false, mmeta = false, mkey = mnemonic;\n        while (true) {\n            if (mkey.startsWith('Shift+')) {\n                mshift = true;\n                mkey = mkey.substring(6);\n            }\n            else if (mkey.startsWith('Ctrl+')) {\n                mctrl = true;\n                mkey = mkey.substring(5);\n            }\n            else if (mkey.startsWith('Alt+')) {\n                malt = true;\n                mkey = mkey.substring(4);\n            }\n            else if (mkey.startsWith('Cmd+')) {\n                mmeta = true;\n                mkey = mkey.substring(4);\n            }\n            else\n                break;\n        }\n        if (mshift != event.shiftKey)\n            return false;\n        if (mctrl != event.ctrlKey)\n            return false;\n        if (malt != event.altKey)\n            return false;\n        if (mmeta != event.metaKey)\n            return false;\n        if (key)\n            mkey = key;\n        return mkey.toLowerCase() == event.key.toLowerCase();\n    }\n}\n//# sourceMappingURL=ButtonBank.js.map","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainUndo.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainExport.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3604\\\">\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.25098041;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3606\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.1254902;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3608\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective23\\\" />\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(0,0)\\\"\\n       id=\\\"pattern5043\\\">\\n      <rect\\n         id=\\\"rect5041\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <path\\n         id=\\\"path5039\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5037\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5035\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5033\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    </pattern>\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(18.5,-71.5)\\\"\\n       id=\\\"pattern5062\\\">\\n      <path\\n         id=\\\"path5060\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5058\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5056\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5054\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5052\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <rect\\n         id=\\\"rect5050\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n      <path\\n         id=\\\"path5000\\\"\\n         d=\\\"M 1.5,11.5 L 11.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5030\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n    </pattern>\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3604\\\"\\n       id=\\\"radialGradient3610\\\"\\n       cx=\\\"210\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"210\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"152.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(1.0491803,-0.78688524,0.78096126,1.0412817,-119.66246,159.46646)\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.2586836\\\"\\n     inkscape:cx=\\\"163.14968\\\"\\n     inkscape:cy=\\\"164.16609\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1716\\\"\\n     inkscape:window-height=\\\"1116\\\"\\n     inkscape:window-x=\\\"144\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3600\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:url(#radialGradient3610);fill-opacity:1;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       id=\\\"path3602\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"160\\\"\\n       sodipodi:rx=\\\"150\\\"\\n       sodipodi:ry=\\\"150\\\"\\n       d=\\\"m 310,160 a 150,150 0 1 1 -300,0 150,150 0 1 1 300,0 z\\\"\\n       transform=\\\"matrix(0.93333333,0,0,0.93333333,10.666666,10.666666)\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 196.07064,12.690252 -90,50 90,49.999998 0,-12.8125 c 20.29664,12.07637 33.75,34.2109 33.75,59.78125 0,38.68907 -30.81093,69.5 -69.5,69.5 -38.68907,0 -69.531254,-30.81093 -69.531254,-69.5 0.0934,-6.60391 -2.559001,-13.20451 -7.195999,-17.90755 -4.636997,-4.70304 -11.199433,-7.4485 -17.804001,-7.4485 -6.604568,0 -13.167004,2.74546 -17.804001,7.4485 -4.636998,4.70304 -7.289395,11.30364 -7.195999,17.90755 0,65.71107 53.82018,119.5 119.531254,119.5 65.71107,0 119.5,-53.78892 119.5,-119.5 0,-53.27576 -35.34828,-98.733461 -83.75,-114.031248 l 0,-32.9375 z\\\"\\n       id=\\\"path3612\\\"\\n       sodipodi:nodetypes=\\\"ccccsscssscsscc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomPlus.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomPlus.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective10\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"-64.472045\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2818\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:8.13591309000000070\\\"\\n       id=\\\"path3758\\\"\\n       sodipodi:cx=\\\"161.07143\\\"\\n       sodipodi:cy=\\\"160.35715\\\"\\n       sodipodi:rx=\\\"149.64285\\\"\\n       sodipodi:ry=\\\"149.64285\\\"\\n       d=\\\"m 310.71428,160.35715 a 149.64285,149.64285 0 1 1 -299.285706,0 149.64285,149.64285 0 1 1 299.285706,0 z\\\"\\n       transform=\\\"matrix(0.60145026,0,0,0.6014321,63.123549,63.556079)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:14.75459385;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 91.367971,160.26223 230.74482,159.73468\\\"\\n       id=\\\"path3754\\\"\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:14.75459385;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"m 160.52478,90.246356 0.53163,138.246984\\\"\\n       id=\\\"path3756\\\"\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomMinus.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomMinus.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective9\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"59.813669\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"467\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2815\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:8.13591309000000070\\\"\\n       id=\\\"path3758\\\"\\n       sodipodi:cx=\\\"161.07143\\\"\\n       sodipodi:cy=\\\"160.35715\\\"\\n       sodipodi:rx=\\\"149.64285\\\"\\n       sodipodi:ry=\\\"149.64285\\\"\\n       d=\\\"m 310.71428,160.35715 a 149.64285,149.64285 0 1 1 -299.285706,0 149.64285,149.64285 0 1 1 299.285706,0 z\\\"\\n       transform=\\\"matrix(0.60591986,0,0,0.60381033,62.403623,63.530598)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:12.95214939;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 96.131868,160.58706 129.596922,-0.4623\\\"\\n       id=\\\"path3754\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondOne.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.0389,160 L 39.961095,160\\\"\\n       id=\\\"path3152\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondTwo.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondOne.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.0389,140 L 39.961095,140\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,179.98053 L 39.941666,179.98053\\\"\\n       id=\\\"path3574\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondThree.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTwo.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.0389,160 L 39.961095,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,199.98053 L 39.941666,199.98053\\\"\\n       id=\\\"path3574\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,119.98053 L 39.941663,119.98053\\\"\\n       id=\\\"path3576\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondZero.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2966\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4517786\\\"\\n     inkscape:cx=\\\"160\\\"\\n     inkscape:cy=\\\"160\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1390\\\"\\n     inkscape:window-height=\\\"1119\\\"\\n     inkscape:window-x=\\\"422\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2968\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"path3742\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       transform=\\\"matrix(1.25,0,0,1.25,132.5,-8.75)\\\" />\\n    <path\\n       transform=\\\"matrix(1.25,0,0,1.25,-17.5,-8.75)\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       id=\\\"path3744\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       sodipodi:type=\\\"arc\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"path3746\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       transform=\\\"matrix(1.25,0,0,1.25,32.5,-8.75)\\\" />\\n    <path\\n       transform=\\\"matrix(1.25,0,0,1.25,82.5,-8.75)\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       id=\\\"path3748\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       sodipodi:type=\\\"arc\\\" />\\n    <path\\n       transform=\\\"matrix(1.25,0,0,1.25,232.5,-8.75)\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       id=\\\"path3750\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       sodipodi:type=\\\"arc\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"path3752\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       transform=\\\"matrix(1.25,0,0,1.25,182.5,-8.75)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondUp.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#000000;fill-rule:evenodd;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 10,160 L 300,100 L 300,220.71429 L 10,160 z \\\"\\n       id=\\\"path3610\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondDown.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 40.382649,165.00403 L 40.382649,155.19597\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 100,174.2408 L 100,144.59666\\\"\\n       id=\\\"path3712\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160,184.32705 L 160,134.74379\\\"\\n       id=\\\"path3714\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280,204.78908 L 280,115.08664\\\"\\n       id=\\\"path3716\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 220,195.22384 L 220,125.64966\\\"\\n       id=\\\"path3718\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondSquig.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondSquig.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.70939255;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 13.854696,160 C 23.404427,145.60525 31.644659,120.73451 42.883757,119.8547 C 52.560111,118.19483 66.522178,143.90673 71.912818,160 C 82.300825,178.10026 83.522733,199.152 100.94188,200.1453 C 119.40219,200.81786 121.80479,177.7981 129.97094,160 C 137.74367,142.33593 144.46966,118.67452 159,119.8547 C 175.82856,118.93206 179.97706,143.36954 188.02906,160 C 196.14175,177.45474 205.82635,200.76232 217.05812,200.1453 C 231.09125,199.83385 237.2755,175.9758 246.08718,160 C 254.09821,142.34457 263.95628,119.88399 275.11624,119.8547 C 289.09333,120.33425 295.4277,143.74196 304.1453,160 L 304.1453,160 L 304.1453,160\\\"\\n       id=\\\"path3749\\\"\\n       sodipodi:nodetypes=\\\"ccccccccccccc\\\" />\\n  </g>\\n</svg>\\n\";","import { Molecule } from '../mol/Molecule';\nimport { Geometry } from '../mol/SketchUtil';\nimport { ButtonBank } from '../ui/ButtonBank';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nconst ELEMENTS_NOBLE = [\n    'He', 'Ar', 'Kr', 'Xe', 'Rn'\n];\nconst ELEMENTS_S_BLOCK = [\n    'Li', 'Na', 'K', 'Rb', 'Cs', 'Fr', 'Sc',\n    'Be', 'Mg', 'Ca', 'Sr', 'Ba', 'Ra', 'Y'\n];\nconst ELEMENTS_P_BLOCK = [\n    'B', 'Al', 'Si', 'Ga', 'Ge', 'As', 'Se',\n    'In', 'Sn', 'Sb', 'Te', 'Tl', 'Pb', 'Bi', 'Po', 'At'\n];\nconst ELEMENTS_D_BLOCK = [\n    'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n    'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd',\n    'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg'\n];\nconst ELEMENTS_F_BLOCK = [\n    'La', 'Ce', 'Pr', 'Nd', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy',\n    'Ho', 'Er', 'Tm', 'Yb', 'Lu', 'Ac', 'Th', 'Pa', 'U'\n];\nconst ELEMENTS_ABBREV = [\n    '*', 'A', 'X', 'Y', 'Z', 'Q', 'M', 'T', 'E', 'L', 'R',\n    'R0', 'R1', 'R2', 'R3', 'R4', 'R5', 'R6', 'R7', 'R8'\n];\nvar CommandType;\n(function (CommandType) {\n    CommandType[CommandType[\"Main\"] = 0] = \"Main\";\n    CommandType[CommandType[\"Atom\"] = 1] = \"Atom\";\n    CommandType[CommandType[\"Bond\"] = 2] = \"Bond\";\n    CommandType[CommandType[\"Select\"] = 3] = \"Select\";\n    CommandType[CommandType[\"Move\"] = 4] = \"Move\";\n    CommandType[CommandType[\"Abbrev\"] = 5] = \"Abbrev\";\n    CommandType[CommandType[\"SBlock\"] = 6] = \"SBlock\";\n    CommandType[CommandType[\"PBlock\"] = 7] = \"PBlock\";\n    CommandType[CommandType[\"DBlock\"] = 8] = \"DBlock\";\n    CommandType[CommandType[\"FBlock\"] = 9] = \"FBlock\";\n    CommandType[CommandType[\"Noble\"] = 10] = \"Noble\";\n})(CommandType || (CommandType = {}));\nimport svgMainUndo from '../res/img/actions/MainUndo.svg';\nimport svgMainRedo from '../res/img/actions/MainRedo.svg';\nimport svgMainZoomIn from '../res/img/actions/MainZoomIn.svg';\nimport svgMainZoomOut from '../res/img/actions/MainZoomOut.svg';\nimport svgMainZoomFit from '../res/img/actions/MainZoomFit.svg';\nimport svgMainSelSide from '../res/img/actions/MainSelSide.svg';\nimport svgMainSelAll from '../res/img/actions/MainSelAll.svg';\nimport svgMainSelNone from '../res/img/actions/MainSelNone.svg';\nimport svgMainDelete from '../res/img/actions/MainDelete.svg';\nimport svgMainCut from '../res/img/actions/MainCut.svg';\nimport svgMainCopy from '../res/img/actions/MainCopy.svg';\nimport svgMainPaste from '../res/img/actions/MainPaste.svg';\nimport svgMainAtom from '../res/img/actions/MainAtom.svg';\nimport svgMainBond from '../res/img/actions/MainBond.svg';\nimport svgMainSelect from '../res/img/actions/MainSelect.svg';\nimport svgMainMove from '../res/img/actions/MainMove.svg';\nconst COMMANDS_MAIN = [\n    { id: 'undo', svg: svgMainUndo, helpText: 'Undo last change.', mnemonic: 'CmdOrCtrl+Z' },\n    { id: 'redo', svg: svgMainRedo, helpText: 'Cancel last undo.', mnemonic: 'CmdOrCtrl+Shift+Z' },\n    { id: 'zoomin', svg: svgMainZoomIn, helpText: 'Zoom in.', mnemonic: '=' },\n    { id: 'zoomout', svg: svgMainZoomOut, helpText: 'Zoom out.', mnemonic: '-' },\n    { id: 'zoomfit', svg: svgMainZoomFit, helpText: 'Show whole diagram onscreen.', mnemonic: '' },\n    { id: 'selside', svg: svgMainSelSide, helpText: 'Select alternate side of current atom or bond.', mnemonic: 'E' },\n    { id: 'selall', svg: svgMainSelAll, helpText: 'Select all atoms.', mnemonic: 'Shift+A' },\n    { id: 'selnone', svg: svgMainSelNone, helpText: 'Clear selection.', mnemonic: 'Shift+Q' },\n    { id: 'delete', svg: svgMainDelete, helpText: 'Delete selected atoms and bonds.', mnemonic: 'D' },\n    { id: 'cut', svg: svgMainCut, helpText: 'Copy selection to clipboard, and remove.', mnemonic: 'CmdOrCtrl+X' },\n    { id: 'copy', svg: svgMainCopy, helpText: 'Copy selection to clipboard.', mnemonic: 'CmdOrCtrl+C' },\n    { id: 'paste', svg: svgMainPaste, helpText: 'Paste clipboard contents.' },\n    { id: 'atom', svg: svgMainAtom, helpText: 'Open the Atom submenu.', isSubMenu: true, mnemonic: 'A' },\n    { id: 'bond', svg: svgMainBond, helpText: 'Open the Bond submenu.', isSubMenu: true, mnemonic: 'B' },\n    { id: 'select', svg: svgMainSelect, helpText: 'Open the Selection submenu.', isSubMenu: true, mnemonic: 'S' },\n    { id: 'move', svg: svgMainMove, helpText: 'Open the Move submenu.', isSubMenu: true, mnemonic: 'M' },\n];\nimport svgAtomPlus from '../res/img/actions/AtomPlus.svg';\nimport svgAtomMinus from '../res/img/actions/AtomMinus.svg';\nimport svgAtomAbbrev from '../res/img/actions/AtomAbbrev.svg';\nimport svgAtomSBlock from '../res/img/actions/AtomSBlock.svg';\nimport svgAtomPBlock from '../res/img/actions/AtomPBlock.svg';\nimport svgAtomDBlock from '../res/img/actions/AtomDBlock.svg';\nimport svgAtomFBlock from '../res/img/actions/AtomFBlock.svg';\nimport svgAtomNoble from '../res/img/actions/AtomNoble.svg';\nconst COMMANDS_ATOM = [\n    { id: 'element:C', text: 'C', helpText: 'Change elements to Carbon.', mnemonic: 'Shift+C' },\n    { id: 'element:N', text: 'N', helpText: 'Change elements to Nitrogen.', mnemonic: 'Shift+N' },\n    { id: 'element:O', text: 'O', helpText: 'Change elements to Oxygen.', mnemonic: 'Shift+O' },\n    { id: 'element:S', text: 'S', helpText: 'Change elements to Sulfur.', mnemonic: 'Shift+S' },\n    { id: 'element:P', text: 'P', helpText: 'Change elements to Phosphorus.', mnemonic: 'Shift+P' },\n    { id: 'element:H', text: 'H', helpText: 'Change elements to Hydrogen.', mnemonic: 'Shift+H' },\n    { id: 'element:F', text: 'F', helpText: 'Change elements to Fluorine.', mnemonic: 'Shift+F' },\n    { id: 'element:Cl', text: 'Cl', helpText: 'Change elements to Chlorine.', mnemonic: 'Shift+L' },\n    { id: 'element:Br', text: 'Br', helpText: 'Change elements to Bromine.', mnemonic: 'Shift+B' },\n    { id: 'element:I', text: 'I', helpText: 'Change elements to Iodine.', mnemonic: 'Shift+I' },\n    { id: 'plus', svg: svgAtomPlus, helpText: 'Increase the atom charge.', mnemonic: 'Shift+=', key: '+' },\n    { id: 'minus', svg: svgAtomMinus, helpText: 'Decrease the atom charge.', mnemonic: 'Shift+-', key: '_' },\n    { id: 'abbrev', svg: svgAtomAbbrev, helpText: 'Open list of common labels.', isSubMenu: true, mnemonic: '' },\n    { id: 'sblock', svg: svgAtomSBlock, helpText: 'Open list of s-block elements.', isSubMenu: true, mnemonic: '' },\n    { id: 'pblock', svg: svgAtomPBlock, helpText: 'Open list of p-block elements.', isSubMenu: true, mnemonic: '' },\n    { id: 'dblock', svg: svgAtomDBlock, helpText: 'Open list of d-block elements.', isSubMenu: true, mnemonic: '' },\n    { id: 'fblock', svg: svgAtomFBlock, helpText: 'Open list of f-block elements.', isSubMenu: true, mnemonic: '' },\n    { id: 'noble', svg: svgAtomNoble, helpText: 'Open list of noble elements.', isSubMenu: true, mnemonic: '' },\n];\nimport svgBondOne from '../res/img/actions/BondOne.svg';\nimport svgBondTwo from '../res/img/actions/BondTwo.svg';\nimport svgBondThree from '../res/img/actions/BondThree.svg';\nimport svgBondFour from '../res/img/actions/BondFour.svg';\nimport svgBondZero from '../res/img/actions/BondZero.svg';\nimport svgBondUp from '../res/img/actions/BondUp.svg';\nimport svgBondDown from '../res/img/actions/BondDown.svg';\nimport svgBondSquig from '../res/img/actions/BondSquig.svg';\nimport svgBondQAny from '../res/img/actions/BondQAny.svg';\nimport svgBondAddTwo from '../res/img/actions/BondAddTwo.svg';\nimport svgBondInsert from '../res/img/actions/BondInsert.svg';\nimport svgBondSwitch from '../res/img/actions/BondSwitch.svg';\nimport svgBondRotate from '../res/img/actions/BondRotate.svg';\nimport svgBondLinear from '../res/img/actions/BondLinear.svg';\nimport svgBondTrigonal from '../res/img/actions/BondTrigonal.svg';\nimport svgBondTetra1 from '../res/img/actions/BondTetra1.svg';\nimport svgBondTetra2 from '../res/img/actions/BondTetra2.svg';\nimport svgBondSqPlan from '../res/img/actions/BondSqPlan.svg';\nimport svgBondOcta1 from '../res/img/actions/BondOcta1.svg';\nimport svgBondOcta2 from '../res/img/actions/BondOcta2.svg';\nimport svgBondMetalLigate from '../res/img/actions/BondMetalLigate.svg';\nimport svgBondArtifactPath from '../res/img/actions/BondArtifactPath.svg';\nimport svgBondArtifactRing from '../res/img/actions/BondArtifactRing.svg';\nimport svgBondArtifactArene from '../res/img/actions/BondArtifactArene.svg';\nimport svgBondArtifactClear from '../res/img/actions/BondArtifactClear.svg';\nimport svgBondPolymer from '../res/img/actions/BondPolymer.svg';\nconst COMMANDS_BOND = [\n    { id: 'one', svg: svgBondOne, helpText: 'Create or set bonds to single.', mnemonic: '1' },\n    { id: 'two', svg: svgBondTwo, helpText: 'Create or set bonds to double.', mnemonic: '2' },\n    { id: 'three', svg: svgBondThree, helpText: 'Create or set bonds to triple.', mnemonic: '3' },\n    { id: 'four', svg: svgBondFour, helpText: 'Create or set bonds to quadruple.', mnemonic: '' },\n    { id: 'zero', svg: svgBondZero, helpText: 'Create or set bonds to zero-order.', mnemonic: '0' },\n    { id: 'inclined', svg: svgBondUp, helpText: 'Create or set bonds to inclined.', mnemonic: '5' },\n    { id: 'declined', svg: svgBondDown, helpText: 'Create or set bonds to declined.', mnemonic: '6' },\n    { id: 'squig', svg: svgBondSquig, helpText: 'Create or set bonds to unknown stereochemistry.', mnemonic: '4' },\n    { id: 'bondQAny', svg: svgBondQAny, helpText: 'Query bond that matches anything.' },\n    { id: 'addtwo', svg: svgBondAddTwo, helpText: 'Add two new bonds to the subject atom.', mnemonic: 'Shift+D' },\n    { id: 'insert', svg: svgBondInsert, helpText: 'Insert a methylene into the subject bond.', mnemonic: '' },\n    { id: 'switch', svg: svgBondSwitch, helpText: 'Cycle through likely bond geometries.', mnemonic: '\\'' },\n    { id: 'rotate', svg: svgBondRotate, helpText: 'Rotate bond to invert substituent orientation.', mnemonic: '' },\n    { id: 'linear', svg: svgBondLinear, helpText: 'Apply linear geometry.', mnemonic: 'Shift+V' },\n    { id: 'trigonal', svg: svgBondTrigonal, helpText: 'Apply trigonal geometry.', mnemonic: 'Shift+W' },\n    { id: 'tetra1', svg: svgBondTetra1, helpText: 'Apply tetrahedral geometry #1.', mnemonic: 'Shift+E' },\n    { id: 'tetra2', svg: svgBondTetra2, helpText: 'Apply tetrahedral geometry #2.', mnemonic: 'Shift+R' },\n    { id: 'sqplan', svg: svgBondSqPlan, helpText: 'Apply square planar geometry.', mnemonic: 'Shift+T' },\n    { id: 'octa1', svg: svgBondOcta1, helpText: 'Apply octahedral geometry #1.', mnemonic: 'Shift+Y' },\n    { id: 'octa2', svg: svgBondOcta2, helpText: 'Apply octahedral geometry #2.', mnemonic: 'Shift+U' },\n    { id: 'metalligate', svg: svgBondMetalLigate, helpText: 'Arrange ligands around metal centre.', mnemonic: '' },\n    { id: 'artifactpath', svg: svgBondArtifactPath, helpText: 'Add a path bond artifact.', mnemonic: '' },\n    { id: 'artifactring', svg: svgBondArtifactRing, helpText: 'Add a ring bond artifact.', mnemonic: '' },\n    { id: 'artifactarene', svg: svgBondArtifactArene, helpText: 'Add an arene bond artifact.', mnemonic: '' },\n    { id: 'artifactclear', svg: svgBondArtifactClear, helpText: 'Remove a bond artifact.', mnemonic: '' },\n    { id: 'polymer', svg: svgBondPolymer, helpText: 'Create a polymer block.', mnemonic: '' },\n];\nimport svgSelectionGrow from '../res/img/actions/SelectionGrow.svg';\nimport svgSelectionShrink from '../res/img/actions/SelectionShrink.svg';\nimport svgSelectionChain from '../res/img/actions/SelectionChain.svg';\nimport svgSelectionSmRing from '../res/img/actions/SelectionSmRing.svg';\nimport svgSelectionRingBlk from '../res/img/actions/SelectionRingBlk.svg';\nimport svgSelectionCurElement from '../res/img/actions/SelectionCurElement.svg';\nimport svgMainSelPrev from '../res/img/actions/MainSelPrev.svg';\nimport svgMainSelNext from '../res/img/actions/MainSelNext.svg';\nimport svgSelectionToggle from '../res/img/actions/SelectionToggle.svg';\nimport svgSelectionUncurrent from '../res/img/actions/SelectionUncurrent.svg';\nimport svgMoveJoin from '../res/img/actions/MoveJoin.svg';\nimport svgMainNew from '../res/img/actions/MainNew.svg';\nimport svgAtomInline from '../res/img/actions/AtomInline.svg';\nimport svgAtomFormula from '../res/img/actions/AtomFormula.svg';\nimport svgAtomExpandAbbrev from '../res/img/actions/AtomExpandAbbrev.svg';\nimport svgAtomClearAbbrev from '../res/img/actions/AtomClearAbbrev.svg';\nconst COMMANDS_SELECT = [\n    { id: 'selgrow', svg: svgSelectionGrow, helpText: 'Add adjacent atoms to selection.', mnemonic: '' },\n    { id: 'selshrink', svg: svgSelectionShrink, helpText: 'Unselect exterior atoms.', mnemonic: '' },\n    { id: 'selchain', svg: svgSelectionChain, helpText: 'Extend selection to non-ring atoms.', mnemonic: '' },\n    { id: 'smallring', svg: svgSelectionSmRing, helpText: 'Extend selection to small rings.', mnemonic: '' },\n    { id: 'ringblock', svg: svgSelectionRingBlk, helpText: 'Extend selection to ring blocks.', mnemonic: '' },\n    { id: 'curelement', svg: svgSelectionCurElement, helpText: 'Select all atoms of current element type.', mnemonic: '' },\n    { id: 'selprev', svg: svgMainSelPrev, helpText: 'Select previous connected component.', mnemonic: '[' },\n    { id: 'selnext', svg: svgMainSelNext, helpText: 'Select next connected component.', mnemonic: ']' },\n    { id: 'toggle', svg: svgSelectionToggle, helpText: 'Toggle selection of current.', mnemonic: ',' },\n    { id: 'uncurrent', svg: svgSelectionUncurrent, helpText: 'Undefine current object.', mnemonic: '.' },\n    { id: 'join', svg: svgMoveJoin, helpText: 'Overlapping atoms will be joined as one.', mnemonic: '' },\n    { id: 'new', svg: svgMainNew, helpText: 'Clear the molecular structure.', mnemonic: '' },\n    { id: 'inline', svg: svgAtomInline, helpText: 'Make selected atoms into an inline abbreviation.', mnemonic: '/' },\n    { id: 'formula', svg: svgAtomFormula, helpText: 'Make selected atoms into their molecule formula.', mnemonic: '\\\\' },\n    { id: 'expandabbrev', svg: svgAtomExpandAbbrev, helpText: 'Expand out the inline abbreviation.', mnemonic: 'Shift+/', key: '?' },\n    { id: 'clearabbrev', svg: svgAtomClearAbbrev, helpText: 'Remove inline abbreviation.', mnemonic: 'Shift+\\\\', key: '|' },\n];\nimport svgMoveUp from '../res/img/actions/MoveUp.svg';\nimport svgMoveDown from '../res/img/actions/MoveDown.svg';\nimport svgMoveLeft from '../res/img/actions/MoveLeft.svg';\nimport svgMoveRight from '../res/img/actions/MoveRight.svg';\nimport svgMoveUpLots from '../res/img/actions/MoveUpLots.svg';\nimport svgMoveDownLots from '../res/img/actions/MoveDownLots.svg';\nimport svgMoveLeftLots from '../res/img/actions/MoveLeftLots.svg';\nimport svgMoveRightLots from '../res/img/actions/MoveRightLots.svg';\nimport svgMoveUpFar from '../res/img/actions/MoveUpFar.svg';\nimport svgMoveDownFar from '../res/img/actions/MoveDownFar.svg';\nimport svgMoveLeftFar from '../res/img/actions/MoveLeftFar.svg';\nimport svgMoveRightFar from '../res/img/actions/MoveRightFar.svg';\nimport svgMoveRotP01 from '../res/img/actions/MoveRotP01.svg';\nimport svgMoveRotM01 from '../res/img/actions/MoveRotM01.svg';\nimport svgMoveRotP05 from '../res/img/actions/MoveRotP05.svg';\nimport svgMoveRotM05 from '../res/img/actions/MoveRotM05.svg';\nimport svgMoveRotP15 from '../res/img/actions/MoveRotP15.svg';\nimport svgMoveRotM15 from '../res/img/actions/MoveRotM15.svg';\nimport svgMoveRotP30 from '../res/img/actions/MoveRotP30.svg';\nimport svgMoveRotM30 from '../res/img/actions/MoveRotM30.svg';\nimport svgMoveHFlip from '../res/img/actions/MoveHFlip.svg';\nimport svgMoveVFlip from '../res/img/actions/MoveVFlip.svg';\nimport svgMoveShrink from '../res/img/actions/MoveShrink.svg';\nimport svgMoveGrow from '../res/img/actions/MoveGrow.svg';\nconst COMMANDS_MOVE = [\n    { id: 'up', svg: svgMoveUp, helpText: 'Move subject atoms up slightly.', mnemonic: 'Shift+Up', key: \"ArrowUp\" },\n    { id: 'down', svg: svgMoveDown, helpText: 'Move subject atoms down slightly.', mnemonic: 'Shift+Down', key: \"ArrowDown\" },\n    { id: 'left', svg: svgMoveLeft, helpText: 'Move subject atoms slightly to the left.', mnemonic: 'Shift+Left', key: \"ArrowLeft\" },\n    { id: 'right', svg: svgMoveRight, helpText: 'Move subject atoms slightly to the right.', mnemonic: 'Shift+Right', key: \"ArrowRight\" },\n    { id: 'uplots', svg: svgMoveUpLots, helpText: 'Move subject atoms up somewhat.', mnemonic: '' },\n    { id: 'downlots', svg: svgMoveDownLots, helpText: 'Move subject atoms down somewhat.', mnemonic: '' },\n    { id: 'leftlots', svg: svgMoveLeftLots, helpText: 'Move subject atoms somewhat to the left.', mnemonic: '' },\n    { id: 'rightlots', svg: svgMoveRightLots, helpText: 'Move subject atoms somewhat to the right.', mnemonic: '' },\n    { id: 'upfar', svg: svgMoveUpFar, helpText: 'Move subject atoms far up.', mnemonic: '' },\n    { id: 'downfar', svg: svgMoveDownFar, helpText: 'Move subject atoms far down.', mnemonic: '' },\n    { id: 'leftfar', svg: svgMoveLeftFar, helpText: 'Move subject atoms far to the left.', mnemonic: '' },\n    { id: 'rightfar', svg: svgMoveRightFar, helpText: 'Move subject atoms far to the right.', mnemonic: '' },\n    { id: 'rotp01', svg: svgMoveRotP01, helpText: 'Rotate 1\\u00B0 counter-clockwise.', mnemonic: '' },\n    { id: 'rotm01', svg: svgMoveRotM01, helpText: 'Rotate 1\\u00B0 clockwise.', mnemonic: '' },\n    { id: 'rotp05', svg: svgMoveRotP05, helpText: 'Rotate 5\\u00B0 counter-clockwise.', mnemonic: '' },\n    { id: 'rotm05', svg: svgMoveRotM05, helpText: 'Rotate 5\\u00B0 clockwise.', mnemonic: '' },\n    { id: 'rotp15', svg: svgMoveRotP15, helpText: 'Rotate 15\\u00B0 counter-clockwise.', mnemonic: '' },\n    { id: 'rotm15', svg: svgMoveRotM15, helpText: 'Rotate 15\\u00B0 clockwise.', mnemonic: '' },\n    { id: 'rotp30', svg: svgMoveRotP30, helpText: 'Rotate 30\\u00B0 counter-clockwise.', mnemonic: 'Shift+[', key: '{' },\n    { id: 'rotm30', svg: svgMoveRotM30, helpText: 'Rotate 30\\u00B0 clockwise.', mnemonic: 'Shift+]', key: '}' },\n    { id: 'hflip', svg: svgMoveHFlip, helpText: 'Flip subject atoms horizontally.', mnemonic: 'Shift+,', key: '<' },\n    { id: 'vflip', svg: svgMoveVFlip, helpText: 'Flip subject atoms vertically.', mnemonic: 'Shift+.', key: '>' },\n    { id: 'shrink', svg: svgMoveShrink, helpText: 'Decrease subject bond distances.', mnemonic: 'Shift+Z' },\n    { id: 'grow', svg: svgMoveGrow, helpText: 'Increase subject bond distances.', mnemonic: 'Shift+X' },\n];\nexport class CommandBank extends ButtonBank {\n    constructor(owner, cmdType = CommandType.Main) {\n        super();\n        this.owner = owner;\n        this.cmdType = cmdType;\n    }\n    update() {\n        if (this.cmdType == CommandType.Main)\n            for (let btn of COMMANDS_MAIN)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Atom)\n            for (let btn of COMMANDS_ATOM)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Bond)\n            for (let btn of COMMANDS_BOND)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Select)\n            for (let btn of COMMANDS_SELECT)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Move)\n            for (let btn of COMMANDS_MOVE)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Abbrev)\n            this.populateElements(ELEMENTS_ABBREV);\n        else if (this.cmdType == CommandType.SBlock)\n            this.populateElements(ELEMENTS_S_BLOCK);\n        else if (this.cmdType == CommandType.PBlock)\n            this.populateElements(ELEMENTS_P_BLOCK);\n        else if (this.cmdType == CommandType.DBlock)\n            this.populateElements(ELEMENTS_D_BLOCK);\n        else if (this.cmdType == CommandType.FBlock)\n            this.populateElements(ELEMENTS_F_BLOCK);\n        else if (this.cmdType == CommandType.Noble)\n            this.populateElements(ELEMENTS_NOBLE);\n    }\n    populateElements(elements) {\n        for (let el of elements) {\n            this.buttons.push({ id: `element:${el}`, text: el, helpText: `Change elements to ${el}.` });\n        }\n    }\n    hitButton(id) {\n        let actv = 0, param = null;\n        if (id.startsWith('element:')) {\n            let el = id.substring(8);\n            actv = ActivityType.Element;\n            param = { element: el };\n        }\n        else if (id == 'delete')\n            actv = ActivityType.Delete;\n        else if (id == 'undo') {\n            if (this.owner.canUndo())\n                this.owner.performUndo();\n            else\n                this.owner.showMessage('Nothing to undo.');\n        }\n        else if (id == 'redo') {\n            if (this.owner.canRedo())\n                this.owner.performRedo();\n            else\n                this.owner.showMessage('Nothing to redo.');\n        }\n        else if (id == 'cut')\n            actv = ActivityType.Cut;\n        else if (id == 'copy')\n            actv = ActivityType.Copy;\n        else if (id == 'paste')\n            this.owner.performPaste();\n        else if (id == 'new')\n            actv = ActivityType.Clear;\n        else if (id == 'zoomfit')\n            this.owner.autoScale();\n        else if (id == 'zoomout')\n            this.owner.zoom(0.8);\n        else if (id == 'zoomin')\n            this.owner.zoom(1.25);\n        else if (id == 'selall')\n            actv = ActivityType.SelectAll;\n        else if (id == 'selnone')\n            actv = ActivityType.SelectNone;\n        else if (id == 'selprev')\n            actv = ActivityType.SelectPrevComp;\n        else if (id == 'selnext')\n            actv = ActivityType.SelectNextComp;\n        else if (id == 'selside')\n            actv = ActivityType.SelectSide;\n        else if (id == 'plus') {\n            actv = ActivityType.Charge;\n            param = { delta: 1 };\n        }\n        else if (id == 'minus') {\n            actv = ActivityType.Charge;\n            param = { delta: -1 };\n        }\n        else if (id == 'one') {\n            actv = ActivityType.BondOrder;\n            param = { order: 1 };\n        }\n        else if (id == 'two') {\n            actv = ActivityType.BondOrder;\n            param = { order: 2 };\n        }\n        else if (id == 'three') {\n            actv = ActivityType.BondOrder;\n            param = { order: 3 };\n        }\n        else if (id == 'four') {\n            actv = ActivityType.BondOrder;\n            param = { order: 4 };\n        }\n        else if (id == 'zero') {\n            actv = ActivityType.BondOrder;\n            param = { order: 0 };\n        }\n        else if (id == 'inclined') {\n            actv = ActivityType.BondType;\n            param = { type: Molecule.BONDTYPE_INCLINED };\n        }\n        else if (id == 'declined') {\n            actv = ActivityType.BondType;\n            param = { type: Molecule.BONDTYPE_DECLINED };\n        }\n        else if (id == 'squig') {\n            actv = ActivityType.BondType;\n            param = { type: Molecule.BONDTYPE_UNKNOWN };\n        }\n        else if (id == 'linear') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Linear };\n        }\n        else if (id == 'trigonal') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Trigonal };\n        }\n        else if (id == 'tetra1') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Tetra1 };\n        }\n        else if (id == 'tetra2') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Tetra2 };\n        }\n        else if (id == 'sqplan') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.SqPlan };\n        }\n        else if (id == 'octa1') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Octa1 };\n        }\n        else if (id == 'octa2') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Octa2 };\n        }\n        else if (id == 'switch')\n            actv = ActivityType.BondSwitch;\n        else if (id == 'rotate')\n            actv = ActivityType.BondRotate;\n        else if (id == 'connect')\n            actv = ActivityType.Connect;\n        else if (id == 'disconnect')\n            actv = ActivityType.Disconnect;\n        else if (id == 'metalligate')\n            actv = ActivityType.MetalLigate;\n        else if (id == 'artifactpath')\n            actv = ActivityType.BondArtifactPath;\n        else if (id == 'artifactring')\n            actv = ActivityType.BondArtifactRing;\n        else if (id == 'artifactarene')\n            actv = ActivityType.BondArtifactArene;\n        else if (id == 'artifactclear')\n            actv = ActivityType.BondArtifactClear;\n        else if (id == 'polymer')\n            actv = ActivityType.PolymerBlock;\n        else if (id == 'addtwo')\n            actv = ActivityType.BondAddTwo;\n        else if (id == 'insert')\n            actv = ActivityType.BondInsert;\n        else if (id == 'curelement')\n            actv = ActivityType.SelectCurElement;\n        else if (id == 'selgrow')\n            actv = ActivityType.SelectGrow;\n        else if (id == 'selshrink')\n            actv = ActivityType.SelectShrink;\n        else if (id == 'selprev')\n            actv = ActivityType.SelectPrevComp;\n        else if (id == 'selnext')\n            actv = ActivityType.SelectNextComp;\n        else if (id == 'selchain')\n            actv = ActivityType.SelectChain;\n        else if (id == 'smallring')\n            actv = ActivityType.SelectSmRing;\n        else if (id == 'ringblock')\n            actv = ActivityType.SelectRingBlk;\n        else if (id == 'toggle')\n            actv = ActivityType.SelectToggle;\n        else if (id == 'uncurrent')\n            actv = ActivityType.SelectUnCurrent;\n        else if (id == 'join')\n            actv = ActivityType.Join;\n        else if (id == 'inline')\n            actv = ActivityType.AbbrevGroup;\n        else if (id == 'formula')\n            actv = ActivityType.AbbrevFormula;\n        else if (id == 'clearabbrev')\n            actv = ActivityType.AbbrevClear;\n        else if (id == 'expandabbrev')\n            actv = ActivityType.AbbrevExpand;\n        else if (id == 'up') {\n            actv = ActivityType.Nudge;\n            param = { dir: 'up' };\n        }\n        else if (id == 'down') {\n            actv = ActivityType.Nudge;\n            param = { dir: 'down' };\n        }\n        else if (id == 'left') {\n            actv = ActivityType.Nudge;\n            param = { dir: 'left' };\n        }\n        else if (id == 'right') {\n            actv = ActivityType.Nudge;\n            param = { dir: 'right' };\n        }\n        else if (id == 'uplots') {\n            actv = ActivityType.NudgeLots;\n            param = { dir: 'up' };\n        }\n        else if (id == 'downlots') {\n            actv = ActivityType.NudgeLots;\n            param = { dir: 'down' };\n        }\n        else if (id == 'leftlots') {\n            actv = ActivityType.NudgeLots;\n            param = { dir: 'left' };\n        }\n        else if (id == 'rightlots') {\n            actv = ActivityType.NudgeLots;\n            param = { dir: 'right' };\n        }\n        else if (id == 'upfar') {\n            actv = ActivityType.NudgeFar;\n            param = { dir: 'up' };\n        }\n        else if (id == 'downfar') {\n            actv = ActivityType.NudgeFar;\n            param = { dir: 'down' };\n        }\n        else if (id == 'leftfar') {\n            actv = ActivityType.NudgeFar;\n            param = { dir: 'left' };\n        }\n        else if (id == 'rightfar') {\n            actv = ActivityType.NudgeFar;\n            param = { dir: 'right' };\n        }\n        else if (id == 'rotp01') {\n            actv = ActivityType.Rotate;\n            param = { theta: 1 };\n        }\n        else if (id == 'rotm01') {\n            actv = ActivityType.Rotate;\n            param = { theta: -1 };\n        }\n        else if (id == 'rotp05') {\n            actv = ActivityType.Rotate;\n            param = { theta: 5 };\n        }\n        else if (id == 'rotm05') {\n            actv = ActivityType.Rotate;\n            param = { theta: -5 };\n        }\n        else if (id == 'rotp15') {\n            actv = ActivityType.Rotate;\n            param = { theta: 15 };\n        }\n        else if (id == 'rotm15') {\n            actv = ActivityType.Rotate;\n            param = { theta: -15 };\n        }\n        else if (id == 'rotp30') {\n            actv = ActivityType.Rotate;\n            param = { theta: 30 };\n        }\n        else if (id == 'rotm30') {\n            actv = ActivityType.Rotate;\n            param = { theta: -30 };\n        }\n        else if (id == 'hflip') {\n            actv = ActivityType.Flip;\n            param = { axis: 'hor' };\n        }\n        else if (id == 'vflip') {\n            actv = ActivityType.Flip;\n            param = { axis: 'ver' };\n        }\n        else if (id == 'shrink') {\n            actv = ActivityType.Scale;\n            param = { mag: 1 / 1.1 };\n        }\n        else if (id == 'grow') {\n            actv = ActivityType.Scale;\n            param = { mag: 1.1 };\n        }\n        else if (id == 'bondQAny')\n            actv = ActivityType.QueryBondAny;\n        else if (id == 'atom')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Atom));\n        else if (id == 'bond')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Bond));\n        else if (id == 'select')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Select));\n        else if (id == 'move')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Move));\n        else if (id == 'abbrev')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Abbrev));\n        else if (id == 'sblock')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.SBlock));\n        else if (id == 'pblock')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.PBlock));\n        else if (id == 'dblock')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.DBlock));\n        else if (id == 'fblock')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.FBlock));\n        else if (id == 'noble')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Noble));\n        else\n            alert('Unhandled command: \"' + id + '\"');\n        if (actv > 0) {\n            new MoleculeActivity(this.owner.getState(), actv, param, this.owner).execute();\n        }\n    }\n    claimKey(event) {\n        for (let listItems of [COMMANDS_MAIN, COMMANDS_ATOM, COMMANDS_BOND, COMMANDS_SELECT, COMMANDS_MOVE])\n            for (let item of listItems) {\n                if (ButtonBank.matchKey(event, item.mnemonic, item.key)) {\n                    this.hitButton(item.id);\n                    return true;\n                }\n            }\n        return false;\n    }\n}\n//# sourceMappingURL=CommandBank.js.map","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainRedo.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainExport.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3604\\\">\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.25098041;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3606\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.1254902;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3608\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective23\\\" />\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(0,0)\\\"\\n       id=\\\"pattern5043\\\">\\n      <rect\\n         id=\\\"rect5041\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <path\\n         id=\\\"path5039\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5037\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5035\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5033\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    </pattern>\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(18.5,-71.5)\\\"\\n       id=\\\"pattern5062\\\">\\n      <path\\n         id=\\\"path5060\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5058\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5056\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5054\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5052\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <rect\\n         id=\\\"rect5050\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n      <path\\n         id=\\\"path5000\\\"\\n         d=\\\"M 1.5,11.5 L 11.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5030\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n    </pattern>\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3604\\\"\\n       id=\\\"radialGradient3610\\\"\\n       cx=\\\"210\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"210\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"152.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(1.0491803,-0.78688524,0.78096126,1.0412817,-119.66246,159.46646)\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.2586836\\\"\\n     inkscape:cx=\\\"16.170725\\\"\\n     inkscape:cy=\\\"164.16609\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1716\\\"\\n     inkscape:window-height=\\\"1116\\\"\\n     inkscape:window-x=\\\"144\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3600\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:url(#radialGradient3610);fill-opacity:1;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       id=\\\"path3602\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"160\\\"\\n       sodipodi:rx=\\\"150\\\"\\n       sodipodi:ry=\\\"150\\\"\\n       d=\\\"m 310,160 a 150,150 0 1 1 -300,0 150,150 0 1 1 300,0 z\\\"\\n       transform=\\\"matrix(0.93333333,0,0,0.93333333,10.666666,10.666666)\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 124.537,12.690252 90,50 -90,49.999998 0,-12.8125 c -20.29664,12.07637 -33.75,34.2109 -33.75,59.78125 0,38.68907 30.81093,69.5 69.5,69.5 38.68907,0 69.53125,-30.81093 69.53125,-69.5 -0.0934,-6.60391 2.559,-13.20451 7.196,-17.90755 4.637,-4.70304 11.19944,-7.4485 17.804,-7.4485 6.60457,0 13.16701,2.74546 17.804,7.4485 4.637,4.70304 7.2894,11.30364 7.196,17.90755 0,65.71107 -53.82018,119.5 -119.53125,119.5 -65.71107,0 -119.5,-53.78892 -119.5,-119.5 0,-53.27576 35.34828,-98.733461 83.75,-114.031248 l 0,-32.9375 z\\\"\\n       id=\\\"path3612\\\"\\n       sodipodi:nodetypes=\\\"ccccsscssscsscc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainZoomIn.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"C:\\\\work\\\\eclipse\\\\MMDS\\\\scratch\\\\msk\\\\MainZoomIn.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective3766\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"184.61711\\\"\\n     inkscape:cy=\\\"128.35938\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3768\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       transform=\\\"translate(62.703026,241.98783)\\\"\\n       id=\\\"g3444\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3446\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char51\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3448\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(92.31631,241.98783)\\\"\\n       id=\\\"g3450\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3452\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char46\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3454\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,211.98783)\\\"\\n       id=\\\"g3456\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3458\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3460\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,271.98783)\\\"\\n       id=\\\"g3462\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3464\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3466\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(243.63564,271.98783)\\\"\\n       id=\\\"g3468\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3470\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char38\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3472\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n        <use\\n           xlink:href=\\\"#char69\\\"\\n           x=\\\"1227\\\"\\n           id=\\\"use3474\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(208.2958,247.96859)\\\"\\n       id=\\\"g3476\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3478\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3480\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(215.2958,204.00707)\\\"\\n       id=\\\"g3482\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3484\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3486\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(275.2958,204.00707)\\\"\\n       id=\\\"g3488\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3490\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3492\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(283.2958,243.96859)\\\"\\n       id=\\\"g3494\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3496\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3498\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(102.68629,241.50525)\\\"\\n       id=\\\"g3500\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3502\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3504\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(112.65748,242.7117)\\\"\\n       id=\\\"g3506\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(2.9296875e-3,-2.9296875e-3)\\\"\\n         id=\\\"g3508\\\"\\n         style=\\\"stroke-width:1635.328;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char18\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3510\\\"\\n           style=\\\"fill:#000000;stroke-width:1635.328;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:4.791;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 159.9337,7.3957969 c -1.22836,0.017783 -2.44251,0.5361707 -3.31003,1.4132395 L 127.99649,37.675208 c -1.32116,1.336065 -1.7593,3.488685 -1.0437,5.231992 0.71562,1.743309 2.54225,2.973143 4.41336,2.976825 l 23.85599,0 0,32.594718 c -19.03094,1.043649 -36.29578,8.792862 -49.59062,20.927974 L 81.596615,75.50192 98.593999,58.603182 c 1.337912,-1.329214 1.784181,-3.508978 1.073521,-5.262062 -0.710656,-1.753085 -2.535151,-2.973199 -4.413356,-2.976825 l -40.46571,-0.270619 c -0.158907,-0.0079 -0.318211,-0.0079 -0.477119,0 -2.335535,0.221972 -4.319354,2.415492 -4.323896,4.780958 l -0.298201,40.803535 c -0.01994,1.896771 1.188724,3.743885 2.922358,4.480271 1.733635,0.73639 3.886482,0.31711 5.218495,-1.022343 L 74.797659,82.237359 98.922018,106.26244 c -11.630556,13.42652 -19.014244,30.73454 -19.949562,49.73401 l -33.487834,0 0,-24.05515 c 9.54e-4,-2.56989 -2.372929,-4.89108 -4.920297,-4.81103 -1.198278,0.0406 -2.374437,0.55669 -3.220558,1.41324 L 8.7165889,157.40968 c -1.7614043,1.78077 -1.7614043,5.01481 0,6.79558 l 28.6271781,28.86618 c 1.325004,1.33218 3.4598,1.77398 5.188676,1.0524 1.728876,-0.72158 2.948527,-2.56345 2.952179,-4.4502 l 0,-24.05515 33.607114,0 c 1.240981,18.80865 8.766006,35.88989 20.486319,49.10257 L 76.169379,238.65594 59.171991,221.75718 c -1.335156,-1.31903 -3.467046,-1.72624 -5.188676,-0.99227 -1.72163,0.73398 -2.930541,2.56544 -2.922358,4.4502 l 0.26838,40.83362 c 0.01573,2.5291 2.322811,4.81236 4.830836,4.78095 l 40.465711,-0.30069 c 1.873236,-0.0154 3.680176,-1.25616 4.383526,-3.00689 0.70337,-1.75074 0.26095,-3.90631 -1.073508,-5.232 L 82.968334,245.39136 106.3472,221.48657 c 13.35681,11.91347 30.59938,19.44988 49.56079,20.32659 l 0,32.38424 -23.85597,0 c -1.87113,0.004 -3.69775,1.23352 -4.41337,2.97683 -0.71561,1.7433 -0.27746,3.89593 1.0437,5.23198 l 28.62718,28.86618 c 1.76603,1.7761 4.97329,1.7761 6.73932,0 l 28.62718,-28.86618 c 1.32117,-1.33605 1.75932,-3.48868 1.0437,-5.23198 -0.71562,-1.74331 -2.54224,-2.97314 -4.41336,-2.97683 l -23.85599,0 0,-32.50452 c 18.91988,-1.36942 36.01699,-9.38124 49.11351,-21.70975 l 23.67706,25.97954 -16.99739,16.89874 c -1.33789,1.32921 -1.78418,3.50897 -1.07351,5.26207 0.71065,1.75307 2.53515,2.97319 4.41336,2.97682 l 40.4657,0.27062 c 2.49814,0.0155 4.7852,-2.26196 4.80102,-4.78097 l 0.29821,-40.80352 c 0.009,-1.88477 -1.20074,-3.71624 -2.92237,-4.45021 -1.72162,-0.73397 -3.85353,-0.32678 -5.18866,0.99227 l -16.9974,16.89875 -23.8858,-26.19004 c 11.5936,-13.79235 18.76194,-31.49959 19.23388,-50.87663 l 34.11406,0 0,24.05514 c -0.008,1.89176 1.19113,3.72124 2.92236,4.45021 1.73125,0.72896 3.88998,0.31342 5.21849,-1.02234 l 28.62718,-28.86617 c 1.77918,-1.78291 1.77918,-5.04275 0,-6.82565 L 282.6429,125.08559 c -0.90259,-0.91262 -2.1811,-1.43496 -3.45912,-1.41325 -2.46815,0.047 -4.68191,2.32184 -4.68173,4.81103 l 0,24.05515 -34.44207,0 c -1.6396,-17.98221 -9.04936,-34.27895 -20.33723,-46.99774 l 23.40868,-24.536247 16.99739,16.898738 c 1.33515,1.319049 3.46704,1.726245 5.18867,0.992274 1.72162,-0.73397 2.93055,-2.565432 2.92236,-4.4502 L 267.97148,53.61174 c -0.0313,-2.519034 -2.33266,-4.782323 -4.83084,-4.750891 l -40.46571,0.270621 c -1.87323,0.01535 -3.68017,1.256162 -4.38354,3.006893 -0.70337,1.750731 -0.26095,3.906314 1.07352,5.231992 L 236.36229,74.269093 212.95361,98.7452 C 199.918,87.125675 183.17867,79.683488 164.76453,78.508812 l 0,-32.624787 23.85598,0 c 1.87112,-0.0037 3.69774,-1.233516 4.41336,-2.976825 0.71561,-1.743307 0.27747,-3.895927 -1.0437,-5.231992 L 163.36299,8.8090364 C 162.46736,7.9036606 161.20183,7.3821292 159.9337,7.3957969 z m -0.29821,90.1767151 c 37.68702,2.849578 62.29024,31.065418 61.69754,62.543368 -0.66052,35.07958 -25.42255,62.86092 -61.69754,62.54337 -33.68472,-0.29486 -64.464992,-23.49428 -63.576187,-62.54337 0.890095,-39.10566 27.382967,-61.739358 63.576187,-62.543368 z\\\"\\n       id=\\\"path4847\\\"\\n       sodipodi:nodetypes=\\\"cccsccccccscccccsccccccsccccsccccccsccccsccccccsccccsccccccsccccsccccccsccccsccccccsccccsccccccsccccsssc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainZoomOut.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"C:\\\\work\\\\eclipse\\\\MMDS\\\\scratch\\\\msk\\\\MainZoomOut.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective3832\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"154.5481\\\"\\n     inkscape:cy=\\\"146.35603\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3854\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       transform=\\\"translate(62.703026,241.98783)\\\"\\n       id=\\\"g3444\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3446\\\">\\n        <use\\n           xlink:href=\\\"#char51\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3448\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(92.31631,241.98783)\\\"\\n       id=\\\"g3450\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3452\\\">\\n        <use\\n           xlink:href=\\\"#char46\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3454\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,211.98783)\\\"\\n       id=\\\"g3456\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3458\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3460\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,271.98783)\\\"\\n       id=\\\"g3462\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3464\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3466\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(243.63564,271.98783)\\\"\\n       id=\\\"g3468\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3470\\\">\\n        <use\\n           xlink:href=\\\"#char38\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3472\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n        <use\\n           xlink:href=\\\"#char69\\\"\\n           x=\\\"1227\\\"\\n           id=\\\"use3474\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(208.2958,247.96859)\\\"\\n       id=\\\"g3476\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3478\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3480\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(215.2958,204.00707)\\\"\\n       id=\\\"g3482\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3484\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3486\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(275.2958,204.00707)\\\"\\n       id=\\\"g3488\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3490\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3492\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(283.2958,243.96859)\\\"\\n       id=\\\"g3494\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3496\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3498\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(102.68629,241.50525)\\\"\\n       id=\\\"g3500\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3502\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3504\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(112.65748,242.7117)\\\"\\n       id=\\\"g3506\\\">\\n      <g\\n         transform=\\\"scale(2.9296875e-3,-2.9296875e-3)\\\"\\n         id=\\\"g3508\\\">\\n        <use\\n           xlink:href=\\\"#char18\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3510\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:5;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 159.25 10 C 77.278938 10 10.71875 76.943918 10.71875 159.21875 C 10.71875 241.49357 77.278938 308.40625 159.25 308.40625 C 241.22106 308.40625 307.84375 241.49357 307.84375 159.21875 C 307.84375 76.943918 241.22106 10 159.25 10 z M 155.875 27.59375 C 155.91666 27.592693 155.95833 27.594768 156 27.59375 L 156 61.4375 L 131 61.4375 C 129.03915 61.4413 127.12493 62.719466 126.375 64.53125 C 125.62507 66.343035 126.08423 68.580206 127.46875 69.96875 L 157.46875 99.96875 C 159.32168 101.83325 162.70957 101.83325 164.5625 99.96875 L 194.5625 69.96875 C 195.95072 68.576522 196.3826 66.314253 195.625 64.5 C 194.8674 62.685746 192.96606 61.429035 191 61.4375 L 166 61.4375 L 166 27.71875 C 233.43435 31.142779 287.33666 85.620853 290.1875 153.5625 L 258.4375 153.5625 L 258.4375 128.5625 C 258.4385 125.89168 255.95078 123.47931 253.28125 123.5625 C 252.02551 123.6047 250.79295 124.14106 249.90625 125.03125 L 219.90625 155.03125 C 218.06038 156.88197 218.06038 160.24303 219.90625 162.09375 L 249.90625 192.09375 C 251.29479 193.47827 253.53196 193.93743 255.34375 193.1875 C 257.15553 192.43757 258.43367 190.52335 258.4375 188.5625 L 258.4375 163.5625 L 290.25 163.5625 C 288.03607 232.42829 233.36911 287.73364 165.0625 290.71875 L 165.0625 260 L 190.0625 260 C 192.03598 260.009 193.96634 258.73069 194.71875 256.90625 C 195.47117 255.08181 194.99955 252.82257 193.59375 251.4375 L 163.59375 221.4375 C 162.64999 220.50778 161.3246 219.97762 160 220 C 158.71699 220.0103 157.44542 220.53722 156.53125 221.4375 L 126.53125 251.4375 C 125.12545 252.82257 124.65383 255.08181 125.40625 256.90625 C 126.15866 258.73069 128.08902 260.00857 130.0625 260 L 155.0625 260 L 155.0625 290.78125 C 86.483864 288.62253 31.34883 233.7369 28.40625 165 L 62.15625 165 L 62.15625 190 C 62.16005 191.96085 63.438216 193.84382 65.25 194.59375 C 67.061785 195.34368 69.298956 194.91577 70.6875 193.53125 L 100.6875 163.53125 C 102.53337 161.68053 102.53337 158.31947 100.6875 156.46875 L 70.6875 126.46875 C 69.741627 125.52028 68.401813 124.97743 67.0625 125 C 64.475993 125.0488 62.156049 127.41303 62.15625 130 L 62.15625 155 L 28.34375 155 C 30.519811 85.260706 86.399976 29.356768 155.875 27.59375 z \\\"\\n       id=\\\"path4847\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainZoomFit.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"C:\\\\work\\\\eclipse\\\\MMDS\\\\scratch\\\\msk\\\\MainZoomFit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective60\\\" />\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(0,0)\\\"\\n       id=\\\"pattern5043\\\">\\n      <rect\\n         id=\\\"rect5041\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <path\\n         id=\\\"path5039\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5037\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5035\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5033\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    </pattern>\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(18.5,-71.5)\\\"\\n       id=\\\"pattern5062\\\">\\n      <path\\n         id=\\\"path5060\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5058\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5056\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5054\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5052\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <rect\\n         id=\\\"rect5050\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n      <path\\n         id=\\\"path5000\\\"\\n         d=\\\"M 1.5,11.5 L 11.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5030\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n    </pattern>\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"282.47425\\\"\\n     inkscape:cy=\\\"140.55244\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1478\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"166\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       transform=\\\"translate(62.703026,241.98783)\\\"\\n       id=\\\"g3444\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3446\\\">\\n        <use\\n           xlink:href=\\\"#char51\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3448\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(92.31631,241.98783)\\\"\\n       id=\\\"g3450\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3452\\\">\\n        <use\\n           xlink:href=\\\"#char46\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3454\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,211.98783)\\\"\\n       id=\\\"g3456\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3458\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3460\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,271.98783)\\\"\\n       id=\\\"g3462\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3464\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3466\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(243.63564,271.98783)\\\"\\n       id=\\\"g3468\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3470\\\">\\n        <use\\n           xlink:href=\\\"#char38\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3472\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n        <use\\n           xlink:href=\\\"#char69\\\"\\n           x=\\\"1227\\\"\\n           id=\\\"use3474\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(208.2958,247.96859)\\\"\\n       id=\\\"g3476\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3478\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3480\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(215.2958,204.00707)\\\"\\n       id=\\\"g3482\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3484\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3486\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(275.2958,204.00707)\\\"\\n       id=\\\"g3488\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3490\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3492\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(283.2958,243.96859)\\\"\\n       id=\\\"g3494\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3496\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3498\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(102.68629,241.50525)\\\"\\n       id=\\\"g3500\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3502\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3504\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(112.65748,242.7117)\\\"\\n       id=\\\"g3506\\\">\\n      <g\\n         transform=\\\"scale(2.9296875e-3,-2.9296875e-3)\\\"\\n         id=\\\"g3508\\\">\\n        <use\\n           xlink:href=\\\"#char18\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3510\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#dddddd;fill-opacity:0.5;stroke:#000000;stroke-width:10.00008255000000000;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path4971\\\"\\n       sodipodi:cx=\\\"157.5\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"148.21428\\\"\\n       sodipodi:ry=\\\"147.5\\\"\\n       d=\\\"M 305.71428 158.92857 A 148.21428 147.5 0 1 1  9.2857208,158.92857 A 148.21428 147.5 0 1 1  305.71428 158.92857 z\\\"\\n       transform=\\\"matrix(0.8709386,0,0,0.8950109,23.61288,16.185766)\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:10.44176006px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       id=\\\"text4835\\\">\\n      <path\\n         d=\\\"m 70.985713,183.23596 11.216734,0 0,-38.71472 L 70,146.96852 l 0,-6.25418 12.134467,-2.44728 6.866001,0 0,44.9689 11.216732,0 0,5.77832 -29.231487,0 0,-5.77832 z\\\"\\n         style=\\\"font-size:69.61173248px\\\"\\n         id=\\\"path4188\\\" />\\n      <path\\n         d=\\\"m 128.80288,142.78774 q -5.30246,0 -7.98768,5.23448 -2.65123,5.20048 -2.65123,15.66943 0,10.43497 2.65123,15.66944 2.68522,5.20049 7.98768,5.20049 5.33644,0 7.98767,-5.20049 2.68522,-5.23447 2.68522,-15.66944 0,-10.46895 -2.68522,-15.66943 -2.65123,-5.23448 -7.98767,-5.23448 z m 0,-5.43842 q 8.53151,0 13.01821,6.76404 4.52068,6.73004 4.52068,19.57829 0,12.81427 -4.52068,19.5783 Q 137.33439,190 128.80288,190 q -8.53152,0 -13.0522,-6.73005 -4.4867,-6.76403 -4.4867,-19.5783 0,-12.84825 4.4867,-19.57829 4.52068,-6.76404 13.0522,-6.76404 z\\\"\\n         style=\\\"font-size:69.61173248px\\\"\\n         id=\\\"path4190\\\" />\\n      <path\\n         d=\\\"m 173.12597,142.78774 q -5.30246,0 -7.98767,5.23448 -2.65123,5.20048 -2.65123,15.66943 0,10.43497 2.65123,15.66944 2.68521,5.20049 7.98767,5.20049 5.33645,0 7.98768,-5.20049 2.68521,-5.23447 2.68521,-15.66944 0,-10.46895 -2.68521,-15.66943 -2.65123,-5.23448 -7.98768,-5.23448 z m 0,-5.43842 q 8.53152,0 13.01821,6.76404 4.52068,6.73004 4.52068,19.57829 0,12.81427 -4.52068,19.5783 Q 181.65749,190 173.12597,190 q -8.53152,0 -13.0522,-6.73005 -4.48669,-6.76403 -4.48669,-19.5783 0,-12.84825 4.48669,-19.57829 4.52068,-6.76404 13.0522,-6.76404 z\\\"\\n         style=\\\"font-size:69.61173248px\\\"\\n         id=\\\"path4192\\\" />\\n      <path\\n         d=\\\"m 245.93277,166.68278 q -2.95713,0 -4.65664,2.51527 -1.66551,2.51527 -1.66551,7.00196 0,4.41872 1.66551,6.96797 1.69951,2.51527 4.65664,2.51527 2.88916,0 4.55468,-2.51527 1.6995,-2.54925 1.6995,-6.96797 0,-4.4527 -1.6995,-6.96797 -1.66552,-2.54926 -4.55468,-2.54926 z m 0,-4.31674 q 5.37044,0 8.53152,3.73891 3.16108,3.73891 3.16108,10.09506 0,6.35615 -3.19507,10.09506 Q 251.26922,190 245.93277,190 q -5.43841,0 -8.59949,-3.70493 -3.16108,-3.73891 -3.16108,-10.09506 0,-6.39014 3.16108,-10.09506 3.19507,-3.73891 8.59949,-3.73891 z m -35.07778,-20.69997 q -2.92315,0 -4.62266,2.54926 -1.66551,2.51526 -1.66551,6.93398 0,4.48669 1.66551,7.00196 1.66552,2.51527 4.62266,2.51527 2.95714,0 4.62265,-2.51527 1.69951,-2.51527 1.69951,-7.00196 0,-4.38473 -1.69951,-6.93398 -1.6995,-2.54926 -4.62265,-2.54926 z m 30.69306,-4.31675 5.43842,0 L 215.23971,190 l -5.43842,0 31.74676,-52.65068 z m -30.69306,0 q 5.37043,0 8.5655,3.73892 3.19507,3.70492 3.19507,10.06107 0,6.42413 -3.19507,10.12905 -3.16108,3.70492 -8.5655,3.70492 -5.40443,0 -8.56551,-3.70492 -3.12709,-3.73891 -3.12709,-10.12905 0,-6.32216 3.16108,-10.06107 3.16108,-3.73892 8.53152,-3.73892 z\\\"\\n         style=\\\"font-size:69.61173248px\\\"\\n         id=\\\"path4194\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path4967\\\"\\n       sodipodi:cx=\\\"157.5\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"148.21428\\\"\\n       sodipodi:ry=\\\"147.5\\\"\\n       d=\\\"M 305.71428 158.92857 A 148.21428 147.5 0 1 1  9.2857208,158.92857 A 148.21428 147.5 0 1 1  305.71428 158.92857 z\\\"\\n       transform=\\\"matrix(0.981039,0,0,1.0003176,5.8435029,-5.0472616e-2)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"SelectionSide.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"199.96541\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 48.664209,245.16396 L 108.91547,160.16396 L 50.664209,75.163966\\\"\\n       id=\\\"path3273\\\"\\n       sodipodi:nodetypes=\\\"ccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:15;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 108.7868,160.70711 L 226.16295,161.41421\\\"\\n       id=\\\"path2170\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 283.22481,77.213358 L 226.68065,159.21336 L 284.22481,241.21336\\\"\\n       id=\\\"path3271\\\"\\n       sodipodi:nodetypes=\\\"ccc\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,165.10228,132.56626)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3243\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.2656501,-1.2656501,0.9968499,0.9968499,-343.98648,267.653)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,-69.132419,130.55198)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,164.75661,294.92979)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3247\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.2656501,-1.2656501,0.9968499,0.9968499,-341.57497,437.10883)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,-69.803983,299.05197)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3245\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.2656501,-1.2656501,0.9968499,0.9968499,-283.31663,352.18587)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,107.42818,214.60137)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,-10.218211,214.29461)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainSelAll.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"189.90735\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 76.36753,113.52483 L 77.074637,213.93399 L 167.5843,264.84567 L 255.97265,210.39845 L 254.55843,117.06036 L 165.46298,53.420751 L 76.36753,113.52483 z \\\"\\n       id=\\\"path3251\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3241\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-248.04603,-85.05335)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,42.797336,11.621703)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3171\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-337.35469,-26.947524)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-46.092499,68.688162)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3243\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-159.19783,-25.889527)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,132.0984,71.516592)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3249\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-336.95273,70.72442)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-45.385389,166.73337)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3247\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-246.2033,123.92331)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,43.58874,218.47348)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3245\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-158.39386,69.713238)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,132.21973,165.31915)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainSelNone.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective14\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"189.90735\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"m 76.36753,113.52483 0.707107,100.40916 88.509663,50.91168 90.38835,-54.44722 -1.41422,-93.33809 -89.09545,-59.639609 -89.09545,56.104079 z\\\"\\n       id=\\\"path3251\\\"\\n       sodipodi:nodetypes=\\\"ccccccc\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,42.797336,11.621703)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-46.092499,68.688162)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,132.0984,71.516592)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-45.385389,166.73337)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,43.58874,218.47348)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,132.21973,165.31915)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MainDelete.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainQuit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"159.5736\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"21\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"opacity:1;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       d=\\\"M 159.65625 30.71875 C 88.093395 30.71875 30 88.487677 30 159.65625 C 30 230.82482 88.093395 288.56252 159.65625 288.5625 C 231.2191 288.5625 289.28125 230.82482 289.28125 159.65625 C 289.28125 88.487677 231.2191 30.71875 159.65625 30.71875 z M 157.84375 72 C 158.59438 71.985792 159.33922 71.994392 160.09375 72 C 176.61399 72.122789 194.05818 77.018142 211.4375 88.5625 L 86.4375 213.5625 C 60.537368 184.56234 69.685666 120.89857 96.4375 96.4375 C 113.21391 82.331272 134.57422 72.440433 157.84375 72 z M 235.53125 110.625 C 261.43138 139.62516 252.28307 203.32017 225.53125 227.78125 C 196.3648 252.30549 153.31112 264.04188 110.53125 235.625 L 235.53125 110.625 z \\\"\\n       id=\\\"path3281\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainCut.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective13\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"2.8284272\\\"\\n     inkscape:cx=\\\"170.6097\\\"\\n     inkscape:cy=\\\"215.55961\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:4.93447638;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 159.84431,4.0536087 c -0.29508,0.00449 -0.58207,0.030042 -0.87522,0.060857 -0.0514,-0.00404 -0.10482,0.00322 -0.15629,0 -0.26793,-0.016729 -0.54407,-0.036361 -0.8127,-0.030428 -2.52061,0.055258 -5.00989,1.1162381 -6.75172,2.8907158 -1.74182,1.7744777 -2.71473,4.2405775 -2.65692,6.6942895 L 149.90429,134.04453 47.472011,85.328366 45.346471,83.624365 c -1.676342,-1.065683 -3.687289,-1.624994 -5.688946,-1.582287 -0.143902,0.003 -0.294356,0.02089 -0.437611,0.03043 -0.397202,-0.03723 -0.78889,-0.04182 -1.187802,-0.03043 -4.295438,0.112766 -8.28419,3.359535 -9.158577,7.455004 -0.874388,4.09547 1.451553,8.636997 5.345108,10.406581 l 0.562644,0.273857 109.840403,68.03832 c 1.67488,1.03918 3.67355,1.56833 5.6577,1.52143 l 0.46886,43.99973 c 0.005,0.64693 0.10661,1.28576 0.25007,1.91701 -8.81541,5.38078 -15.33495,12.77739 -19.41119,21.75644 -5.08278,11.19622 -6.52603,24.62804 -5.15756,39.98316 0.0144,0.14281 0.0352,0.28499 0.0625,0.426 1.83482,10.3447 4.15972,19.71772 9.34612,26.95973 5.16099,7.20651 13.78411,11.64917 24.97511,11.13687 l 0,0.0304 c 18.09365,-0.39567 30.45126,-6.60038 37.25946,-16.7053 6.80821,-10.10493 8.17398,-23.08912 7.65819,-37.0316 -0.007,-0.1017 -0.0175,-0.20319 -0.0312,-0.30428 -1.7739,-18.11192 -9.59128,-28.87305 -18.53596,-35.54059 -6.03478,-4.49844 -12.34072,-7.3741 -17.56696,-10.01101 0.27934,-0.90435 0.41844,-1.85482 0.40635,-2.79942 l -0.53139,-49.32475 46.69938,22.21288 c 0.083,0.0395 0.16586,0.0847 0.25006,0.1217 -3.31001,17.14209 2.79839,30.23586 11.78424,40.2266 0.34773,0.39526 0.76108,0.73572 1.21906,1.00414 11.30221,6.4521 20.79655,6.99911 28.38221,4.41215 7.58567,-2.58696 13.73725,-4.92629 18.81728,-10.68044 6.76902,-5.94633 9.04203,-16.49269 9.90878,-25.01229 0.11784,-10.04709 -5.59112,-21.3058 -20.88032,-28.75502 -0.45188,-0.22178 -0.93854,-0.37626 -1.43786,-0.45643 -6.30082,-1.02286 -12.65323,-2.0926 -18.97357,-1.94743 -2.10678,0.0484 -4.22421,0.23694 -6.3141,0.60857 -4.21959,0.75035 -8.31043,2.4329 -12.00305,5.17287 -0.69153,-0.62747 -1.46297,-1.14863 -2.3131,-1.55187 l -42.94844,-20.41753 c 1.1306,-1.8011 1.65144,-3.95307 1.43786,-6.05529 L 169.94063,12.999613 c -0.20349,-2.429755 -1.39886,-4.7794669 -3.25082,-6.4204317 -1.85197,-1.6409647 -4.34143,-2.5562438 -6.8455,-2.5255726 z m -9.59618,163.9492313 0,0 z m 111.55959,12.82428 c 8.34066,2.98048 12.80146,8.83371 12.7225,15.56559 -0.52192,14.16651 -10.39975,21.02728 -20.03685,22.62502 -4.93943,1.6845 -12.73755,-0.57732 -17.22364,-5.22544 -4.30437,-5.36245 -8.22528,-12.25024 -4.56467,-27.41058 6.00237,-10.50581 21.04796,-10.76963 29.10266,-5.55459 z m -101.33825,50.22103 c 9.69468,-0.0714 19.13216,5.11216 24.59899,13.04553 8.86571,10.18835 10.08761,40.94213 0.62719,47.7922 -10.21171,9.37645 -27.6858,12.97759 -37.42521,3.78947 -3.54224,-4.94619 -6.12245,-9.52873 -7.86958,-19.28591 -2.56041,-21.47176 7.13036,-43.01402 20.06861,-45.34129 z\\\"\\n       id=\\\"path3256\\\"\\n       sodipodi:nodetypes=\\\"cssssccccssssccccccsccsccsccscccccccscccssscccccsccccccccccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainCopy.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective26\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3630\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1\\\"\\n     inkscape:cx=\\\"103.77793\\\"\\n     inkscape:cy=\\\"88.169551\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2832\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:0.5;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 47.647496,250.03858 46.764383,-103.11546 0,-29.46156 -62.352511,0 0,-29.46156 L 110,88 C 94.411879,88 85.058997,73.26922 85.058997,58.538439 c 0,-14.73078 9.352882,-29.46156 24.941003,-29.46156 l 15.58814,0 c 15.58811,0 24.94098,14.73078 24.94098,29.46156 C 150.52912,73.26922 141.17625,88 125.58814,88 l 77.94063,0 0,29.46156 -62.35252,0 0,29.46156 46.76439,103.11546 -37.41152,0 -31.17624,-73.65389 -34.293883,73.65389 -37.411501,0 z\\\"\\n       id=\\\"path3606-1\\\"\\n       sodipodi:nodetypes=\\\"cccccccccccccccccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 148.05936,290.03859 46.76439,-103.11546 0,-29.46157 -62.35252,0 0,-29.46156 77.94063,0 c -15.58811,0 -24.941,-14.73077 -24.941,-29.46156 0,-14.73078 9.35289,-29.46156 24.941,-29.46156 l 15.58814,0 c 15.58811,0 24.941,14.73078 24.941,29.46156 C 250.941,113.26923 241.58811,128 226,128 l 77.94063,0 0,29.46156 -62.35252,0 0,29.46157 46.76439,103.11546 -37.4115,0 -31.17626,-73.6539 -34.29388,73.6539 -37.4115,0 z\\\"\\n       id=\\\"path3606\\\"\\n       sodipodi:nodetypes=\\\"cccccccccccccccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"SelectionPaste.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"174.19811\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#646169;fill-rule:evenodd;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 49.497473,254.94617 C 47.825874,262.83305 36.201583,261.20579 30.405591,265.55278 C 28.322858,267.11483 31.539377,271.49006 29.698484,273.33095 C 26.809794,276.21964 14.54002,280.60096 21.213203,283.93756 C 25.917942,286.28992 18.777684,290.61571 16.970562,292.42284 C 16.407185,292.98621 11.862619,303.34583 10.606601,305.85786 C 8.8718742,309.32732 0.66378058,311.62811 -1.4142135,312.22183 C -5.3815501,313.35535 -6.7727732,317.67427 -2.1213203,320 C 4.7353319,323.42833 10.071931,322.29954 16.970562,320 C 21.596201,318.45812 26.669572,317.77844 31.112698,320 C 36.578588,322.73295 50.364949,320 56.568541,320 C 62.249059,320 67.612413,321.41421 73.539103,321.41421 C 78.147222,321.41421 83.161272,321.90643 86.974132,320 C 87.233912,319.87011 86.176512,316.99055 84.852811,314.34315 C 84.737012,314.11155 86.869217,308.51143 84.852811,305.15076 C 82.266966,300.84102 73.174191,304.07874 70.003569,300.90812 C 68.147372,299.05192 69.987876,293.16133 71.417783,290.30152 C 71.59232,289.95244 65.401454,280.15842 65.053822,279.69491 C 63.028881,276.99499 57.766096,271.20963 63.639609,271.20963 C 66.398433,271.20963 65.234252,265.89903 66.468036,263.43146 C 68.386098,259.59534 68.589356,257.469 68.589356,252.82486 C 68.589356,252.05846 63.356113,251.15582 62.225395,250.70354 C 60.461018,249.99779 62.861998,252.89536 61.518288,254.23907 C 60.546463,255.2109 50.675985,254.23907 49.497473,254.94617 z \\\"\\n       id=\\\"path3196\\\"\\n       sodipodi:nodetypes=\\\"cssssssssssssssssssssssc\\\" />\\n    <path\\n       style=\\\"fill:#c5c2c2;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 53.8295,185.43081 C 48.117551,230.16693 94.90917,267.3379 133.61555,268.32077 C 162.93137,153.99105 110.3127,171.17033 53.8295,185.43081 z \\\"\\n       id=\\\"path3188\\\"\\n       sodipodi:nodetypes=\\\"ccc\\\" />\\n    <path\\n       style=\\\"fill:#fcfbff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 182.96729,2.557079 L 54.035294,186.04372 C 85.905043,179.15842 144.16417,242.05257 133.15455,268.24096 L 321.426,146.40224 C 302.97323,72.703226 258.08103,23.582864 182.96729,2.557079 z \\\"\\n       id=\\\"path3184\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#fcfbff;fill-opacity:1;fill-rule:evenodd;stroke:#030303;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 86.523375,220.41621 L 50.5,255.09065 C 61.048111,255.62428 64.617354,261.18692 64.369775,269.5 L 100.39315,234.82557 C 100.05192,225.90076 96.35526,220.20575 86.523375,220.41621 z \\\"\\n       id=\\\"path3190\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 141.76067,103.45156 L 152.49269,163.67952 L 212.07438,184.96328 L 259.56663,143.19171 L 249.13583,87.282865 L 189.09687,58.210192 L 141.76067,103.45156 z \\\"\\n       id=\\\"path3251\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3277\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,110.7288,43.297737)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,63.614871,89.09596)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,170.91744,72.502614)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,74.104227,147.90424)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,132.84879,169.84315)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,180.61948,128.82311)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainAtom.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainAtom.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2848\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"48.145029\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"597\\\"\\n     inkscape:window-y=\\\"53\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:0.99991798;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path2173\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(3.9083767,0,0,4.4541355,-191.02317,-104.15694)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3146\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(4.1274211,0,0,4.7037667,-170.63132,-160.28246)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3148\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(3.9083767,0,0,4.4541355,-123.67417,-89.452119)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3150\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(4.1274211,0,0,4.7037667,-189.79433,-79.64646)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.5817451;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3152\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(0.5559432,-0.9629219,0.8671851,0.5006696,-82.679852,232.98137)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.58174519;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3160\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(-0.5559432,-0.962922,0.8671851,-0.5006694,98.56249,410.307)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3166\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,177.55034,-16.166303)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3168\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,147.55034,143.8337)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MainBond.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainAtom.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"159.5736\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"479\\\"\\n     inkscape:window-y=\\\"21\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g3182\\\"\\n       transform=\\\"translate(11.909887,59.760501)\\\">\\n      <path\\n         transform=\\\"matrix(2.0292346,0,0,2.3125933,-112.32262,-38.207236)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path2173\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(2.1429628,0,0,2.4422022,-101.73514,-67.347684)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(2.0292346,0,0,2.3125933,-77.354923,-30.572473)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3148\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(2.1429628,0,0,2.4422022,-111.6846,-25.481361)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3150\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3188\\\"\\n       transform=\\\"translate(-15.161547,-19.009179)\\\">\\n      <path\\n         transform=\\\"matrix(-2.0292346,0,0,2.3125933,428.39405,40.562444)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3174\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(-2.1429628,0,0,2.4422022,417.80657,11.421996)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3176\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(-2.0292346,0,0,2.3125933,393.42635,48.197207)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3178\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(-2.1429628,0,0,2.4422022,427.75603,53.288319)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3180\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.58174515;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3152\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(-1.3630223e-8,-1.1150628,0.8671872,4.2624012e-8,9.4810906,343.88434)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.58174515;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3195\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(0.8308212,-1.0223571e-8,-3.1758687e-8,0.6504479,-60.492046,52.100836)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.58174515;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3197\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(0.8308212,-1.0223571e-8,-3.1758687e-8,0.6504479,107.50794,52.100828)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3168\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,89.896893,-11.387448)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3200\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,-12.449661,159.8337)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3202\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,-74.103107,22.612552)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3204\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,179.55034,179.8337)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MainSelect.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"159.5736\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"21\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:1.89162562, 18.91625616;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       d=\\\"M 30.44335,26.729064 L 30.44335,291.55665 L 295.27094,291.55665 L 295.27094,26.729064 L 30.44335,26.729064 z \\\"\\n       id=\\\"path3343\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;fill-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 89.051436,52.692713 L 80.264142,218.75776 L 136.18329,186.31714 L 190.50474,269.73586 L 246.42389,237.29525 L 192.10243,153.87653 L 248.02157,121.43591 L 89.051436,52.692713 z \\\"\\n       id=\\\"path3345\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MainMove.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainMove.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"198.18854\\\"\\n     inkscape:cy=\\\"129.1885\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"166\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       transform=\\\"translate(62.703026,241.98783)\\\"\\n       id=\\\"g3444\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3446\\\">\\n        <use\\n           xlink:href=\\\"#char51\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3448\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(92.31631,241.98783)\\\"\\n       id=\\\"g3450\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3452\\\">\\n        <use\\n           xlink:href=\\\"#char46\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3454\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,211.98783)\\\"\\n       id=\\\"g3456\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3458\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3460\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,271.98783)\\\"\\n       id=\\\"g3462\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3464\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3466\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(243.63564,271.98783)\\\"\\n       id=\\\"g3468\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3470\\\">\\n        <use\\n           xlink:href=\\\"#char38\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3472\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n        <use\\n           xlink:href=\\\"#char69\\\"\\n           x=\\\"1227\\\"\\n           id=\\\"use3474\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(208.2958,247.96859)\\\"\\n       id=\\\"g3476\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3478\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3480\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(215.2958,204.00707)\\\"\\n       id=\\\"g3482\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3484\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3486\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(275.2958,204.00707)\\\"\\n       id=\\\"g3488\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3490\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3492\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(283.2958,243.96859)\\\"\\n       id=\\\"g3494\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3496\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3498\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(102.68629,241.50525)\\\"\\n       id=\\\"g3500\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3502\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3504\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(112.65748,242.7117)\\\"\\n       id=\\\"g3506\\\">\\n      <g\\n         transform=\\\"scale(2.9296875e-3,-2.9296875e-3)\\\"\\n         id=\\\"g3508\\\">\\n        <use\\n           xlink:href=\\\"#char18\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3510\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;fill-opacity:1\\\"\\n       d=\\\"M 130,130 L 70,130 L 70,100 L 10,160 L 70,220 L 70,190 L 130,190 L 130,250 L 100,250 L 160,310 L 220,250 L 190,250 L 190,190 L 250,190 L 250,220 L 310,160 L 250,100 L 250,130 L 190,130 L 190,70 L 220,70 L 160,10 L 100,70 L 130,70 L 130,130 z \\\"\\n       id=\\\"path4831\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomAbbrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 70,181.11523 13.227539,0 16.743164,44.64844 16.831057,-44.64844 13.22754,0 0,65.61036 -8.65723,0 0,-57.61231 -16.91894,45 -8.920903,0 -16.918946,-45 0,57.61231 -8.613281,0 0,-65.61036 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7008\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 109.11328,107.96387 q 2.85645,0.96679 5.53711,4.13086 2.72461,3.16406 5.44922,8.70117 l 9.00879,17.92969 -9.53613,0 -8.39356,-16.83106 q -3.25195,-6.5918 -6.32812,-8.74512 -3.03223,-2.15332 -8.305668,-2.15332 l -9.667969,0 0,27.7295 -8.876953,0 0,-65.610356 20.039062,0 q 11.249998,0 16.787108,4.702149 5.53711,4.702148 5.53711,14.194336 0,6.196289 -2.90039,10.283201 -2.85644,4.08692 -8.34961,5.66895 z m -22.236327,-27.553714 0,23.291014 11.162109,0 q 6.416018,0 9.667968,-2.94433 3.2959,-2.988285 3.2959,-8.745121 0,-5.756836 -3.2959,-8.657227 -3.25195,-2.944336 -9.667968,-2.944336 l -11.162109,0 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7017\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 191.65039,72 9.53613,0 16.30371,24.389648 L 233.88184,72 l 9.53613,0 -21.09375,31.50879 22.5,34.10156 -9.53613,0 -18.45704,-27.90527 -18.58886,27.90527 -9.58008,0 23.42285,-35.02441 L 191.65039,72 Z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7014\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 200,180.38965 8.87695,0 0,58.13965 31.94825,0 0,7.4707 -40.8252,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7011\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomSBlock.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"98.625641\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1447\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 52.876953,215.39258 0,24.03808 14.238281,0 q 7.163086,0 10.590821,-2.94433 3.471679,-2.98828 3.471679,-9.09668 0,-6.15235 -3.471679,-9.05274 -3.427735,-2.94433 -10.590821,-2.94433 l -14.238281,0 z m 0,-26.98242 0,19.77539 13.139649,0 q 6.503906,0 9.667968,-2.417 3.208008,-2.46093 3.208008,-7.4707 0,-4.96582 -3.208008,-7.42676 -3.164062,-2.46093 -9.667968,-2.46093 l -13.139649,0 z M 44,181.11523 l 22.675781,0 q 10.151367,0 15.644531,4.21875 5.493165,4.21875 5.493165,11.99707 0,6.02051 -2.8125,9.58008 -2.8125,3.55957 -8.261719,4.43848 6.547851,1.40625 10.151367,5.88867 3.647461,4.43848 3.647461,11.11817 0,8.78906 -5.976563,13.5791 -5.976562,4.79004 -17.006836,4.79004 l -23.554687,0 0,-65.61036 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6940\\\" />\\n      <path\\n         d=\\\"m 147.44727,220.09473 0,3.95507 -37.17774,0 q 0.52735,8.34961 5.00977,12.74415 4.52636,4.35058 12.56836,4.35058 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42773 l 0,7.64648 q -4.35059,1.84571 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77735,0 -18.67676,-6.85547 -6.85547,-6.85547 -6.85547,-18.54492 0,-12.08496 6.50391,-19.16016 6.54785,-7.11914 17.62207,-7.11914 9.93164,0 15.68847,6.41602 5.80079,6.37207 5.80079,17.3584 z m -8.08594,-2.37305 q -0.0879,-6.63574 -3.73535,-10.59082 -3.60352,-3.95508 -9.58008,-3.95508 -6.76758,0 -10.85449,3.82324 -4.04297,3.82325 -4.65821,10.7666 l 28.82813,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6942\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 64,73.115234 8.876953,0 0,58.139646 31.948247,0 0,7.47071 -40.8252,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6945\\\" />\\n      <path\\n         d=\\\"m 113.74609,89.506836 8.08594,0 0,49.218754 -8.08594,0 0,-49.218754 z m 0,-19.160156 8.08594,0 0,10.239257 -8.08594,0 0,-10.239257 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6947\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 178.81445,72 11.95313,0 29.09179,54.8877 0,-54.8877 8.61329,0 0,65.61035 -11.95313,0 -29.0918,-54.887694 0,54.887694 -8.61328,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6932\\\" />\\n      <path\\n         d=\\\"m 268.15527,112.86914 q -9.7998,0 -13.5791,2.24121 -3.7793,2.24121 -3.7793,7.64649 0,4.30664 2.8125,6.85546 2.85645,2.50489 7.73438,2.50489 6.72363,0 10.7666,-4.7461 4.08692,-4.79004 4.08692,-12.70019 l 0,-1.80176 -8.042,0 z m 16.12793,-3.33984 0,28.08105 -8.08593,0 0,-7.4707 q -2.76856,4.48242 -6.89942,6.63574 -4.13086,2.10938 -10.10742,2.10938 -7.55859,0 -12.04102,-4.21875 -4.43847,-4.2627 -4.43847,-11.38184 0,-8.30566 5.53711,-12.52441 5.58105,-4.21875 16.61132,-4.21875 l 11.3379,0 0,-0.79102 q 0,-5.58105 -3.69141,-8.613281 -3.64746,-3.076172 -10.2832,-3.076172 -4.21875,0 -8.21778,1.010742 -3.99902,1.010742 -7.69043,3.032227 l 0,-7.470704 q 4.43848,-1.713867 8.61328,-2.548828 4.17481,-0.878906 8.12989,-0.878906 10.67871,0 15.95215,5.537109 5.27343,5.53711 5.27343,16.787113 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6934\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 174,184.38965 13.22754,0 16.74316,44.64844 16.83106,-44.64844 13.22754,0 0,65.61035 -8.65723,0 0,-57.6123 -16.91895,45 -8.92089,0 -16.91895,-45 0,57.6123 -8.61328,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6937\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text2248\\\">\\n      <path\\n         d=\\\"m 275.90332,226.09863 q 0,-8.78906 -3.64746,-13.62304 -3.60352,-4.83399 -10.15137,-4.83399 -6.5039,0 -10.15137,4.83399 -3.60351,4.83398 -3.60351,13.62304 0,8.74512 3.60351,13.5791 3.64747,4.83399 10.15137,4.83399 6.54785,0 10.15137,-4.83399 3.64746,-4.83398 3.64746,-13.5791 z m 8.08594,19.07227 q 0,12.56836 -5.58106,18.67676 Q 272.82715,270 261.31348,270 q -4.2627,0 -8.042,-0.65918 -3.77929,-0.61523 -7.33886,-1.93359 l 0,-7.86621 q 3.55957,1.93359 7.03125,2.85644 3.47168,0.92285 7.07519,0.92285 7.9541,0 11.90918,-4.1748 3.95508,-4.13086 3.95508,-12.52442 l 0,-3.99902 q -2.50488,4.35059 -6.41602,6.50391 -3.91113,2.15332 -9.36035,2.15332 -9.05273,0 -14.58984,-6.89942 Q 240,237.48047 240,226.09863 q 0,-11.42578 5.53711,-18.32519 5.53711,-6.89942 14.58984,-6.89942 5.44922,0 9.36035,2.15332 3.91114,2.15332 6.41602,6.50391 l 0,-7.4707 8.08594,0 0,43.11035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6929\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomPBlock.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective18\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 107.33105,183.26855 0,8.65723 q -5.05371,-2.41699 -9.536128,-3.60351 -4.482422,-1.18653 -8.657227,-1.18653 -7.250976,0 -11.206054,2.8125 -3.911133,2.8125 -3.911133,7.99805 0,4.35058 2.592773,6.5918 2.636719,2.19726 9.931641,3.55957 l 5.361328,1.09863 q 9.93164,1.88965 14.63379,6.67969 4.74609,4.74609 4.74609,12.74414 0,9.53613 -6.41601,14.458 Q 98.498047,248 86.149414,248 q -4.658203,0 -9.931641,-1.05469 -5.229492,-1.05469 -10.854492,-3.12011 l 0,-9.14063 q 5.405274,3.03223 10.590821,4.57031 5.185546,1.53809 10.195312,1.53809 7.602539,0 11.733398,-2.98828 4.130858,-2.98828 4.130858,-8.52539 0,-4.83399 -2.988279,-7.5586 -2.944336,-2.72461 -9.711914,-4.08691 l -5.405274,-1.05469 q -9.931641,-1.97754 -14.370117,-6.19629 -4.438477,-4.21875 -4.438477,-11.7334 0,-8.70117 6.108399,-13.71093 6.152344,-5.00977 16.918945,-5.00977 4.614258,0 9.404297,0.83496 4.79004,0.83496 9.7998,2.50488 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6942\\\" />\\n      <path\\n         d=\\\"m 124.77734,197.50684 8.08594,0 0,49.21875 -8.08594,0 0,-49.21875 z m 0,-19.16016 8.08594,0 0,10.23926 -8.08594,0 0,-10.23926 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6944\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 84.876953,107.39258 0,24.03808 14.238281,0 q 7.163086,0 10.590816,-2.94433 3.47168,-2.98828 3.47168,-9.09668 0,-6.15235 -3.47168,-9.05274 -3.42773,-2.94433 -10.590816,-2.94433 l -14.238281,0 z m 0,-26.982424 0,19.775394 13.139649,0 q 6.503908,0 9.667968,-2.416995 3.20801,-2.460938 3.20801,-7.470703 0,-4.965821 -3.20801,-7.426758 -3.16406,-2.460938 -9.667968,-2.460938 l -13.139649,0 z M 76,73.115234 l 22.675781,0 q 10.151369,0 15.644529,4.21875 5.49317,4.21875 5.49317,11.997071 0,6.020507 -2.8125,9.580078 -2.8125,3.559567 -8.26172,4.438477 6.54785,1.40625 10.15137,5.88867 3.64746,4.43848 3.64746,11.11817 0,8.78906 -5.97657,13.5791 -5.97656,4.79004 -17.006833,4.79004 l -23.554687,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6947\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 210.74316,80.745117 -12.04101,32.651363 24.12597,0 -12.08496,-32.651363 z M 205.7334,72 l 10.06347,0 25.00489,65.61035 -9.22852,0 -5.97656,-16.83105 -29.5752,0 -5.97656,16.83105 -9.36035,0 L 205.7334,72 Z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6932\\\" />\\n      <path\\n         d=\\\"m 281.36328,89.841797 0,7.646484 q -3.42773,-1.757812 -7.11914,-2.636719 -3.69141,-0.878906 -7.64648,-0.878906 -6.02051,0 -9.05274,1.845703 -2.98828,1.845703 -2.98828,5.537111 0,2.8125 2.15332,4.43848 2.15332,1.58203 8.65723,3.03222 l 2.76855,0.61524 q 8.61328,1.8457 12.2168,5.22949 3.64746,3.33984 3.64746,9.36035 0,6.85547 -5.44922,10.85449 -5.40527,3.99903 -14.89746,3.99903 -3.95508,0 -8.26172,-0.79102 -4.26269,-0.74707 -9.00879,-2.28516 l 0,-8.34961 q 4.48242,2.32911 8.83301,3.51563 4.35059,1.14258 8.61328,1.14258 5.71289,0 8.78906,-1.9336 3.07618,-1.97754 3.07618,-5.53711 0,-3.29589 -2.24122,-5.05371 -2.19726,-1.75781 -9.71191,-3.38379 l -2.8125,-0.65918 q -7.51465,-1.58203 -10.85449,-4.83398 -3.33985,-3.2959 -3.33985,-9.00879 0,-6.943358 4.92188,-10.722655 4.92187,-3.779297 13.97461,-3.779297 4.48242,0 8.4375,0.65918 3.95508,0.659179 7.29492,1.977539 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6934\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 190.87695,189.68457 0,24.65332 11.16211,0 q 6.19629,0 9.58008,-3.20801 3.38379,-3.20801 3.38379,-9.14062 0,-5.88867 -3.38379,-9.09668 -3.38379,-3.20801 -9.58008,-3.20801 l -11.16211,0 z M 182,182.38965 l 20.03906,0 q 11.03028,0 16.65528,5.00976 5.66894,4.96582 5.66894,14.58985 0,9.71191 -5.66894,14.67773 -5.625,4.96582 -16.65528,4.96582 l -11.16211,0 0,26.36719 -8.87695,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6937\\\" />\\n      <path\\n         d=\\\"m 271.29687,223.43457 q 0,-8.9209 -3.6914,-13.97461 -3.64746,-5.09766 -10.06348,-5.09766 -6.41601,0 -10.10742,5.09766 -3.64746,5.05371 -3.64746,13.97461 0,8.9209 3.64746,14.01855 3.69141,5.05372 10.10742,5.05372 6.41602,0 10.06348,-5.05372 3.6914,-5.09765 3.6914,-14.01855 z m -27.50976,-17.18262 q 2.54883,-4.39453 6.41601,-6.5039 3.91114,-2.15332 9.31641,-2.15332 8.96484,0 14.5459,7.11914 5.625,7.11914 5.625,18.7207 0,11.60156 -5.625,18.7207 -5.58106,7.11914 -14.5459,7.11914 -5.40527,0 -9.31641,-2.10937 -3.86718,-2.15332 -6.41601,-6.54785 l 0,7.38281 -8.12988,0 0,-68.37891 8.12988,0 0,26.63086 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6939\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomDBlock.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 73.413235,217.96387 q 2.856445,0.96679 5.537109,4.13086 2.724609,3.16406 5.449219,8.70117 l 9.008789,17.92969 -9.536133,0 -8.393555,-16.83106 q -3.251953,-6.5918 -6.328125,-8.74512 -3.032226,-2.15332 -8.305664,-2.15332 l -9.667968,0 0,27.7295 -8.876954,0 0,-65.61036 20.039063,0 q 11.25,0 16.787109,4.70215 5.53711,4.70215 5.53711,14.19434 0,6.19629 -2.900391,10.2832 -2.856445,4.08692 -8.349609,5.66895 z m -22.236328,-27.55371 0,23.29101 11.162109,0 q 6.416016,0 9.667969,-2.94433 3.295898,-2.98829 3.295898,-8.74512 0,-5.75684 -3.295898,-8.65723 -3.251953,-2.94433 -9.667969,-2.94433 l -11.162109,0 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6988\\\" />\\n      <path\\n         d=\\\"m 99.648586,229.30176 0,-29.79492 8.085934,0 0,29.4873 q 0,6.98731 2.72461,10.50293 2.72461,3.47168 8.17383,3.47168 6.54785,0 10.32715,-4.1748 3.82324,-4.17481 3.82324,-11.38184 l 0,-27.90527 8.08594,0 0,49.21875 -8.08594,0 0,-7.5586 q -2.94433,4.48242 -6.85547,6.67969 Q 122.0607,250 116.91909,250 q -8.48144,0 -12.87597,-5.27344 -4.394534,-5.27344 -4.394534,-15.4248 z m 20.346684,-30.98145 0,0 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6990\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 48,73.115234 37.705078,0 0,7.470703 -28.828125,0 0,19.335938 26.015625,0 0,7.470705 -26.015625,0 0,31.33301 -8.876953,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7003\\\" />\\n      <path\\n         d=\\\"m 136.68164,112.09473 0,3.95507 -37.177734,0 q 0.527344,8.34961 5.009764,12.74415 4.52637,4.35058 12.56836,4.35058 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42773 l 0,7.64648 q -4.35058,1.84571 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77734,0 -18.676755,-6.85547 -6.855469,-6.85547 -6.855469,-18.54492 0,-12.08496 6.503906,-19.160157 6.547848,-7.119141 17.622068,-7.119141 9.93164,0 15.68848,6.416016 5.80078,6.372072 5.80078,17.358402 z m -8.08594,-2.37305 q -0.0879,-6.63574 -3.73535,-10.590821 -3.60351,-3.955078 -9.58008,-3.955078 -6.76757,0 -10.85449,3.823242 -4.04297,3.823247 -4.658202,10.766607 l 28.828122,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7005\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 229.94531,77.053711 0,9.360351 q -4.48242,-4.174804 -9.58008,-6.240234 -5.05371,-2.06543 -10.7666,-2.06543 -11.25,0 -17.22656,6.899414 -5.97656,6.855469 -5.97656,19.863278 0,12.96387 5.97656,19.86329 5.97656,6.85546 17.22656,6.85546 5.71289,0 10.7666,-2.06543 5.09766,-2.06543 9.58008,-6.24023 l 0,9.27246 q -4.6582,3.16406 -9.88769,4.74609 -5.18555,1.58204 -10.98633,1.58204 -14.89746,0 -23.4668,-9.09668 -8.56933,-9.14063 -8.56933,-24.917 0,-15.820309 8.56933,-24.916988 8.56934,-9.140625 23.4668,-9.140625 5.88867,0 11.07422,1.582031 5.22949,1.538086 9.7998,4.658203 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6998\\\" />\\n      <path\\n         d=\\\"m 262.46484,94.060547 q -6.5039,0 -10.2832,5.097656 -3.7793,5.053707 -3.7793,13.886717 0,8.83301 3.73536,13.93067 3.77929,5.05371 10.32714,5.05371 6.45996,0 10.23926,-5.09766 3.7793,-5.09766 3.7793,-13.88672 0,-8.74512 -3.7793,-13.842772 -3.7793,-5.141601 -10.23926,-5.141601 z m 0,-6.855469 q 10.54688,0 16.56739,6.855469 6.0205,6.855473 6.0205,18.984373 0,12.08496 -6.0205,18.98438 -6.02051,6.85547 -16.56739,6.85547 -10.59082,0 -16.61132,-6.85547 -5.97657,-6.89942 -5.97657,-18.98438 0,-12.1289 5.97657,-18.984373 6.0205,-6.855469 16.61132,-6.855469 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7000\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 211.11328,219.23828 q 2.85645,0.9668 5.53711,4.13086 2.72461,3.16406 5.44922,8.70117 L 231.1084,250 l -9.53613,0 -8.39356,-16.83105 q -3.25195,-6.5918 -6.32812,-8.74512 -3.03223,-2.15332 -8.30567,-2.15332 l -9.66797,0 0,27.72949 -8.87695,0 0,-65.61035 20.03906,0 q 11.25,0 16.78711,4.70215 5.53711,4.70215 5.53711,14.19433 0,6.19629 -2.90039,10.28321 -2.85644,4.08691 -8.34961,5.66894 z m -22.23633,-27.55371 0,23.29102 11.16211,0 q 6.41602,0 9.66797,-2.94434 3.2959,-2.98828 3.2959,-8.74512 0,-5.75683 -3.2959,-8.65722 -3.25195,-2.94434 -9.66797,-2.94434 l -11.16211,0 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6993\\\" />\\n      <path\\n         d=\\\"m 283.13965,220.29297 0,29.70703 -8.08594,0 0,-29.44336 q 0,-6.9873 -2.72461,-10.45898 -2.72461,-3.47168 -8.17383,-3.47168 -6.54785,0 -10.32715,4.1748 -3.77929,4.17481 -3.77929,11.38184 l 0,27.81738 -8.12988,0 0,-68.37891 8.12988,0 0,26.80664 q 2.90039,-4.43847 6.81152,-6.63574 3.95508,-2.19726 9.09668,-2.19726 8.48145,0 12.83203,5.27343 4.35059,5.2295 4.35059,15.42481 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6995\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomFBlock.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective18\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"81.839927\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1680\\\"\\n     inkscape:window-height=\\\"974\\\"\\n     inkscape:window-x=\\\"96\\\"\\n     inkscape:window-y=\\\"14\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 68.82914,189.86035 -12.041016,32.65137 24.125977,0 -12.084961,-32.65137 z m -5.009766,-8.74512 10.063477,0 25.004882,65.61036 -9.228515,0 -5.976563,-16.83106 -29.575195,0 -5.976562,16.83106 -9.360352,0 25.048828,-65.61036 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6970\\\" />\\n      <path\\n         d=\\\"m 141.91019,199.39648 0,7.5586 q -3.42773,-1.88965 -6.89941,-2.8125 -3.42773,-0.9668 -6.94336,-0.9668 -7.86621,0 -12.2168,5.00977 -4.35058,4.96582 -4.35058,13.97461 0,9.00879 4.35058,14.01855 4.35059,4.96582 12.2168,4.96582 3.51563,0 6.94336,-0.92285 3.47168,-0.9668 6.89941,-2.85645 l 0,7.47071 q -3.38378,1.58203 -7.03125,2.37304 Q 131.27543,248 127.18851,248 q -11.11816,0 -17.66601,-6.9873 -6.54785,-6.98731 -6.54785,-18.85254 0,-12.04102 6.59179,-18.94043 6.63575,-6.89942 18.14942,-6.89942 3.73535,0 7.29492,0.79102 3.55957,0.74707 6.89941,2.28515 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6972\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 50,73.115234 8.876953,0 0,58.139646 31.948242,0 0,7.47071 -40.825195,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6983\\\" />\\n      <path\\n         d=\\\"m 122.11426,113.98438 q -9.79981,0 -13.5791,2.24121 -3.7793,2.24121 -3.7793,7.64648 0,4.30664 2.8125,6.85547 2.85644,2.50488 7.73437,2.50488 6.72364,0 10.76661,-4.74609 4.08691,-4.79004 4.08691,-12.7002 l 0,-1.80175 -8.04199,0 z m 16.12793,-3.33985 0,28.08106 -8.08594,0 0,-7.47071 q -2.76855,4.48242 -6.89941,6.63574 Q 119.12598,140 113.14941,140 q -7.55859,0 -12.04101,-4.21875 -4.438478,-4.2627 -4.438478,-11.38184 0,-8.30566 5.537108,-12.52441 5.58106,-4.21875 16.61133,-4.21875 l 11.33789,0 0,-0.79102 q 0,-5.58105 -3.69141,-8.613277 -3.64746,-3.076172 -10.2832,-3.076172 -4.21875,0 -8.21777,1.010742 -3.99903,1.010743 -7.69043,3.032227 l 0,-7.470703 q 4.43847,-1.713867 8.61328,-2.548828 4.1748,-0.878907 8.12988,-0.878907 10.67871,0 15.95215,5.53711 5.27344,5.537109 5.27344,16.787108 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6985\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 233.94531,77.053711 0,9.360351 q -4.48242,-4.174804 -9.58008,-6.240234 -5.05371,-2.06543 -10.7666,-2.06543 -11.25,0 -17.22656,6.899414 -5.97656,6.855469 -5.97656,19.863278 0,12.96387 5.97656,19.86329 5.97656,6.85546 17.22656,6.85546 5.71289,0 10.7666,-2.06543 5.09766,-2.06543 9.58008,-6.24023 l 0,9.27246 q -4.6582,3.16406 -9.88769,4.74609 -5.18555,1.58204 -10.98633,1.58204 -14.89746,0 -23.4668,-9.09668 -8.56933,-9.14063 -8.56933,-24.917 0,-15.820309 8.56933,-24.916988 8.56934,-9.140625 23.4668,-9.140625 5.88867,0 11.07422,1.582031 5.22949,1.538086 9.7998,4.658203 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6978\\\" />\\n      <path\\n         d=\\\"m 289.49219,110.97949 0,3.95508 -37.17774,0 q 0.52735,8.34961 5.00977,12.74414 4.52637,4.35059 12.56836,4.35059 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42774 l 0,7.64649 q -4.35059,1.8457 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77734,0 -18.67676,-6.85547 -6.85547,-6.85547 -6.85547,-18.54492 0,-12.08497 6.50391,-19.160161 6.54785,-7.119141 17.62207,-7.119141 9.93164,0 15.68848,6.416016 5.80078,6.37207 5.80078,17.358396 z m -8.08594,-2.37304 q -0.0879,-6.63575 -3.73535,-10.590825 -3.60352,-3.955078 -9.58008,-3.955078 -6.76758,0 -10.85449,3.823242 -4.04297,3.823241 -4.65821,10.766601 l 28.82813,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6980\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 194.98926,184.38965 8.9209,0 0,39.8584 q 0,10.54687 3.82324,15.20507 3.82324,4.61426 12.39258,4.61426 8.52539,0 12.34863,-4.61426 3.82324,-4.6582 3.82324,-15.20507 l 0,-39.8584 8.9209,0 0,40.95703 q 0,12.83203 -6.37207,19.37988 -6.32813,6.54785 -18.7207,6.54785 -12.43653,0 -18.8086,-6.54785 -6.32812,-6.54785 -6.32812,-19.37988 l 0,-40.95703 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6975\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomNoble.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 71.928711,191.86035 -12.041016,32.65137 24.125977,0 -12.084961,-32.65137 z m -5.009766,-8.74512 10.063477,0 25.004878,65.61036 -9.228511,0 -5.976562,-16.83106 -29.575196,0 -5.976562,16.83106 -9.360352,0 25.048828,-65.61036 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6950\\\" />\\n      <path\\n         d=\\\"m 139.69238,207.06543 q -1.3623,-0.79102 -2.98828,-1.14258 -1.58203,-0.39551 -3.51562,-0.39551 -6.85547,0 -10.54688,4.48243 -3.64746,4.43847 -3.64746,12.78808 l 0,25.92774 -8.12988,0 0,-49.21875 8.12988,0 0,7.64648 q 2.54883,-4.48242 6.63574,-6.63574 4.08692,-2.19727 9.93164,-2.19727 0.83496,0 1.84571,0.13184 1.01074,0.0879 2.24121,0.30762 l 0.0439,8.30566 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6952\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 40,73.115234 8.876953,0 0,26.894536 32.255859,0 0,-26.894536 8.876954,0 0,65.610356 -8.876954,0 0,-31.24512 -32.255859,0 0,31.24512 -8.876953,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6965\\\" />\\n      <path\\n         d=\\\"m 149.42383,112.09473 0,3.95507 -37.17774,0 q 0.52735,8.34961 5.00977,12.74415 4.52637,4.35058 12.56836,4.35058 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42773 l 0,7.64648 q -4.35059,1.84571 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77734,0 -18.67676,-6.85547 -6.85547,-6.85547 -6.85547,-18.54492 0,-12.08496 6.50391,-19.160157 6.54785,-7.119141 17.62207,-7.119141 9.93164,0 15.68848,6.416016 5.80078,6.372072 5.80078,17.358402 z m -8.08594,-2.37305 q -0.0879,-6.63574 -3.73535,-10.590821 -3.60352,-3.955078 -9.58008,-3.955078 -6.76758,0 -10.85449,3.823242 -4.04297,3.823247 -4.6582,10.766607 l 28.82812,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6967\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 184.81445,72 11.95313,0 29.09179,54.8877 0,-54.8877 8.61329,0 0,65.61035 -11.95313,0 -29.0918,-54.887694 0,54.887694 -8.61328,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6960\\\" />\\n      <path\\n         d=\\\"m 293.88672,110.97949 0,3.95508 -37.17774,0 q 0.52735,8.34961 5.00977,12.74414 4.52637,4.35059 12.56836,4.35059 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42774 l 0,7.64649 q -4.35059,1.8457 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77734,0 -18.67676,-6.85547 -6.85547,-6.85547 -6.85547,-18.54492 0,-12.08497 6.50391,-19.160161 6.54785,-7.119141 17.62207,-7.119141 9.93164,0 15.68848,6.416016 5.80078,6.37207 5.80078,17.358396 z m -8.08594,-2.37304 q -0.0879,-6.63575 -3.73535,-10.590825 -3.60352,-3.955078 -9.58008,-3.955078 -6.76758,0 -10.85449,3.823242 -4.04297,3.823241 -4.6582,10.766601 l 28.82812,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6962\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 180,184.38965 8.87695,0 0,27.72949 29.44336,-27.72949 11.42578,0 -32.56347,30.58594 L 232.0752,250 l -11.68946,0 -31.50879,-31.59668 0,31.59668 -8.87695,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6955\\\" />\\n      <path\\n         d=\\\"m 267.23145,208.33984 q -1.36231,-0.79101 -2.98829,-1.14257 -1.58203,-0.39551 -3.51562,-0.39551 -6.85547,0 -10.54688,4.48242 -3.64746,4.43848 -3.64746,12.78809 l 0,25.92773 -8.12988,0 0,-49.21875 8.12988,0 0,7.64648 q 2.54883,-4.48242 6.63575,-6.63574 4.08691,-2.19726 9.93164,-2.19726 0.83496,0 1.8457,0.13183 1.01074,0.0879 2.24121,0.30762 l 0.0439,8.30566 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6957\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondFour.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondFour.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.0389,180 L 39.961095,180\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,219.98053 L 39.941666,219.98053\\\"\\n       id=\\\"path3574\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,139.98053 L 39.941663,139.98053\\\"\\n       id=\\\"path3576\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,99.980529 L 39.941665,99.980529\\\"\\n       id=\\\"path3578\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"1.0.2 (1.0.2+r75+1)\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondAny.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2966\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.36294465\\\"\\n     inkscape:cx=\\\"-23.567935\\\"\\n     inkscape:cy=\\\"160\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1023\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:document-rotation=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2968\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <circle\\n       id=\\\"path3744\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25\\\"\\n       cx=\\\"20.5\\\"\\n       cy=\\\"160\\\"\\n       r=\\\"12.5\\\" />\\n    <circle\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25\\\"\\n       id=\\\"path3746\\\"\\n       cx=\\\"60.5\\\"\\n       cy=\\\"160\\\"\\n       r=\\\"12.5\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 150,160 H 100\\\"\\n       id=\\\"path838\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 230,140 H 180\\\"\\n       id=\\\"path840\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 230,180 H 180\\\"\\n       id=\\\"path842\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 310,120 H 260\\\"\\n       id=\\\"path844\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 310,160 H 260\\\"\\n       id=\\\"path846\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 310,200 H 260\\\"\\n       id=\\\"path848\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondAddTwo.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2948\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"39.099383\\\"\\n     inkscape:cy=\\\"92.512755\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1421\\\"\\n     inkscape:window-height=\\\"893\\\"\\n     inkscape:window-x=\\\"278\\\"\\n     inkscape:window-y=\\\"110\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:4.1221571;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:2.00970001\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"m 140.71429,135 a 8.9285717,9.2857141 0 1 1 -17.85714,0 8.9285717,9.2857141 0 1 1 17.85714,0 z\\\"\\n       transform=\\\"matrix(0,1.9791656,-1.9030439,0,400.81202,-104.81214)\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 126.24182,130.35436 51.64564,35.560356\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:0.75294118;fill-rule:nonzero;stroke:#000000;stroke-width:8;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 176.5625,165.59375 a 9.6254627,9.6254627 0 0 0 -3.875,18.3125 L 280,237 a 9.6254627,9.6254627 0 1 0 8.53125,-17.25 l -107.3125,-53.09375 a 9.6254627,9.6254627 0 0 0 -4.65625,-1.0625 z\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 126.24182,181.56035 51.64564,276.35436\\\"\\n       id=\\\"path3162\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:0.75294118;fill-rule:nonzero;stroke:#000000;stroke-width:8;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 283.65625,72.625 a 9.6254627,9.6254627 0 0 0 -4.34375,1.0625 l -107.34375,53.125 a 9.6254627,9.6254627 0 1 0 8.53125,17.25 l 107.34375,-53.125 a 9.6254627,9.6254627 0 0 0 -4.1875,-18.3125 z\\\"\\n       id=\\\"path3164\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondInsert.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2958\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"103.22259\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1204\\\"\\n     inkscape:window-height=\\\"925\\\"\\n     inkscape:window-x=\\\"508\\\"\\n     inkscape:window-y=\\\"54\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4800\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 113.39098,158.69004 53.078266,263.15473\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 299.98723,58.483019 240.10753,162.19765\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:0.75294118;stroke:#000000;stroke-width:8;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"M 116.5625 151.3125 A 9.6254923 9.6254923 0 0 0 111.09375 152.90625 A 9.6254923 9.6254923 0 0 0 116.53125 170.53125 L 159.75 170.5625 C 158.10087 167.65453 157.15625 164.30057 157.15625 160.71875 C 157.15625 157.31663 158.0016 154.11729 159.5 151.3125 L 116.5625 151.3125 z M 194.78125 151.3125 C 196.27965 154.11729 197.15625 157.31663 197.15625 160.71875 C 197.15625 164.30057 196.18038 167.65453 194.53125 170.5625 L 236.28125 170.59375 A 9.6321508 9.6321508 0 0 0 236.28125 151.3125 L 194.78125 151.3125 z \\\"\\n       id=\\\"path4284\\\" />\\n    <path\\n       transform=\\\"translate(157.71429,141.42857)\\\"\\n       d=\\\"M 40,20 A 20,20 0 1 1 0,20 20,20 0 1 1 40,20 z\\\"\\n       sodipodi:ry=\\\"20\\\"\\n       sodipodi:rx=\\\"20\\\"\\n       sodipodi:cy=\\\"20\\\"\\n       sodipodi:cx=\\\"20\\\"\\n       id=\\\"path3660\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:9;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       sodipodi:type=\\\"arc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondSwitch.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective4871\\\" />\\n    <marker\\n       inkscape:stockid=\\\"Arrow2Send\\\"\\n       orient=\\\"auto\\\"\\n       refY=\\\"0.0\\\"\\n       refX=\\\"0.0\\\"\\n       id=\\\"Arrow2Send\\\"\\n       style=\\\"overflow:visible;\\\">\\n      <path\\n         id=\\\"path3178\\\"\\n         style=\\\"font-size:12px;fill:#8b8b8b;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\\\"\\n         d=\\\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \\\"\\n         transform=\\\"matrix(-0.3,0,0,-0.3,0.69,0)\\\" />\\n    </marker>\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"39.099383\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1215\\\"\\n     inkscape:window-height=\\\"839\\\"\\n     inkscape:window-x=\\\"145\\\"\\n     inkscape:window-y=\\\"105\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:0.75294119;stroke:#000000;stroke-width:8;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"m 225.375,15.59375 a 9.6254923,9.6254923 0 0 0 -8.125,5.5 l -60.28125,123.0625 a 9.6295647,9.6295647 0 1 0 17.3125,8.4375 l 60.25,-123.03125 A 9.6254923,9.6254923 0 0 0 225.375,15.59375 z\\\"\\n       id=\\\"path3132\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:4.1221571;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-104.82577,-96.910927)\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:15.49904156;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 141.61589,160 L 63.973265,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 225.41813,293.9522 L 165.1533,170.90493\\\"\\n       id=\\\"path3158\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#8b8b8b;stroke-width:6.58357668;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow2Send)\\\"\\n       d=\\\"M 197.79178,142.41668 C 208.33227,154.9762 208.33227,166.6984 197.79178,177.58331\\\"\\n       id=\\\"path3134\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#8b8b8b;stroke-width:6.58357668;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow2Send)\\\"\\n       d=\\\"M 213.88997,98.458413 C 237.84561,141.99804 237.84561,183.02576 213.88997,221.54158\\\"\\n       id=\\\"path3136\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#8b8b8b;stroke-width:6.584;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow2Send);fill-opacity:1\\\"\\n       d=\\\"M 238.03726,63.291789 C 275.40805,126.92663 275.40805,191.39877 238.03726,256.70821\\\"\\n       id=\\\"path3140\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondRotate.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective4871\\\" />\\n    <marker\\n       inkscape:stockid=\\\"Arrow2Send\\\"\\n       orient=\\\"auto\\\"\\n       refY=\\\"0.0\\\"\\n       refX=\\\"0.0\\\"\\n       id=\\\"Arrow2Send\\\"\\n       style=\\\"overflow:visible;\\\">\\n      <path\\n         id=\\\"path3178\\\"\\n         style=\\\"font-size:12px;fill:#8b8b8b;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\\\"\\n         d=\\\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \\\"\\n         transform=\\\"matrix(-0.3,0,0,-0.3,0.69,0)\\\" />\\n    </marker>\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#4a8be0\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"229.81367\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1859\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"61\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4149\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4477\\\"\\n       transform=\\\"translate(-6.9348763,2.361824)\\\">\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3132\\\"\\n         d=\\\"m 285.375,15.59375 a 9.6254923,9.6254923 0 0 0 -8.125,5.5 l -60.28125,123.0625 a 9.6295647,9.6295647 0 1 0 17.3125,8.4375 l 60.25,-123.03125 A 9.6254923,9.6254923 0 0 0 285.375,15.59375 Z\\\"\\n         style=\\\"color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:'Bitstream Vera Sans';-inkscape-font-specification:'Bitstream Vera Sans';text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;display:inline;overflow:visible;visibility:visible;fill:#ffffff;fill-opacity:0.75294118;stroke:#000000;stroke-width:8;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker:none;enable-background:accumulate\\\" />\\n      <circle\\n         r=\\\"17.671122\\\"\\n         cy=\\\"160\\\"\\n         cx=\\\"216\\\"\\n         inkscape:export-ydpi=\\\"9\\\"\\n         inkscape:export-xdpi=\\\"9\\\"\\n         id=\\\"path2160\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970006;stroke-opacity:1\\\" />\\n      <path\\n         sodipodi:nodetypes=\\\"cc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3152\\\"\\n         d=\\\"M 201.61589,160 63.97327,160\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:15.49904156;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         sodipodi:nodetypes=\\\"cc\\\"\\n         id=\\\"path3158\\\"\\n         d=\\\"M 285.41813,293.9522 225.1533,170.90493\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <circle\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970006;stroke-opacity:1\\\"\\n         id=\\\"circle4151\\\"\\n         inkscape:export-xdpi=\\\"9\\\"\\n         inkscape:export-ydpi=\\\"9\\\"\\n         cx=\\\"56\\\"\\n         cy=\\\"160\\\"\\n         r=\\\"17.671122\\\" />\\n      <path\\n         sodipodi:nodetypes=\\\"ccccc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path4155\\\"\\n         d=\\\"m 110,140 c 0,-30 10,-80 36,-80 24,0 34,60 34,100 0,40 -10.12741,99.49035 -34,100 -26,0 -36,-48.6 -36,-78.6\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#ffffff;stroke-width:8;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         sodipodi:nodetypes=\\\"cccc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path4475\\\"\\n         d=\\\"m 110,175 -15,25 30,0 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondLinear.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 130.66986,160 L 10.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 309.02255,160 L 189.26316,160\\\"\\n       id=\\\"path3154\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondTrigonal.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"743\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.1221571;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-82.82577,-96.910927)\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 148.66986,160 L 28.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 248.37547,27.62453 L 195.2535,134.95751\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 247.41813,293.9522 L 194.29616,186.61922\\\"\\n       id=\\\"path3158\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondTetra1.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"148.55302\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"743\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.1221571;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-96.82577,-80.910927)\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 138.34073,193.65927 L 43.546726,268.25545\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 236.37547,43.62453 L 183.2535,150.95751\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 189.54672,193.65927 L 284.34073,268.25545\\\"\\n       id=\\\"path3162\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 90.29616,44.33351 L 143.41813,151.66649\\\"\\n       id=\\\"path3164\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondTetra2.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTetra2.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"146.11708\\\"\\n     inkscape:cy=\\\"127.88711\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 130.66986,160 L 10.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 309.02255,160 L 189.26316,160\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 256.37547,43.62453 L 176.82086,133.14201\\\"\\n       id=\\\"path2233\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 255.17914,276.37547 L 175.62453,186.85799\\\"\\n       id=\\\"path2235\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondSqPlan.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondSqPlan.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 130.66986,160 L 10.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 309.02255,160 L 189.26316,160\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 159.62453,130.37547 L 159.62453,10.616072\\\"\\n       id=\\\"path2271\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160.37547,309.38392 L 160.37547,189.62453\\\"\\n       id=\\\"path2273\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondOcta1.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondOcta2.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 159.62453,130.37547 L 159.62453,10.616072\\\"\\n       id=\\\"path2271\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160.37547,309.38392 L 160.37547,189.62453\\\"\\n       id=\\\"path2273\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 26.905712,230.35583 L 132.37547,173.62453\\\"\\n       id=\\\"path2305\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 188.12226,146.50851 L 293.59202,89.777207\\\"\\n       id=\\\"path2505\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 26.905714,89.62453 L 132.37547,146.35583\\\"\\n       id=\\\"path2507\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 188.55084,173.92006 L 294.02059,230.65136\\\"\\n       id=\\\"path2509\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondOcta2.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondSqPlan.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 130.66986,160 L 10.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 309.02255,160 L 189.26316,160\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 159.62453,130.37547 L 159.62453,10.616072\\\"\\n       id=\\\"path2271\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160.37547,309.38392 L 160.37547,189.62453\\\"\\n       id=\\\"path2273\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 182.07157,136.65434 L 268.37547,53.62453\\\"\\n       id=\\\"path2303\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 52.07157,264.65433 L 138.37547,181.62453\\\"\\n       id=\\\"path2305\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   inkscape:export-ydpi=\\\"9\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   sodipodi:docname=\\\"BondMetalLigate.svg\\\"\\n   version=\\\"1.0\\\"\\n   inkscape:version=\\\"1.0 (4035a4f, 2020-05-01)\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   id=\\\"svg2\\\"\\n   height=\\\"320\\\"\\n   width=\\\"320\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <path\\n       id=\\\"char45\\\"\\n       d=\\\"M1526 0H1328V1283L914 410H796L385 1283V0H200V1489H470L867 660L1251 1489H1526V0Z\\\"\\n       edge=\\\"none\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     inkscape:document-rotation=\\\"0\\\"\\n     inkscape:object-paths=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-y=\\\"23\\\"\\n     inkscape:window-x=\\\"53\\\"\\n     inkscape:window-height=\\\"943\\\"\\n     inkscape:window-width=\\\"1650\\\"\\n     showborder=\\\"true\\\"\\n     height=\\\"320px\\\"\\n     width=\\\"320px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:cy=\\\"146.31871\\\"\\n     inkscape:cx=\\\"74.452978\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     objecttolerance=\\\"10\\\"\\n     guidetolerance=\\\"10\\\"\\n     gridtolerance=\\\"10000\\\"\\n     borderopacity=\\\"1.0\\\"\\n     bordercolor=\\\"#666666\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     id=\\\"base\\\">\\n    <inkscape:grid\\n       id=\\\"grid4135\\\"\\n       type=\\\"xygrid\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     id=\\\"layer1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     inkscape:label=\\\"Layer 1\\\">\\n    <use\\n       transform=\\\"matrix(0.03709198,0,0,-0.03709198,127.98962,187.61498)\\\"\\n       id=\\\"use4287\\\"\\n       x=\\\"0\\\"\\n       xlink:href=\\\"#char45\\\"\\n       style=\\\"fill:#000000;fill-opacity:1\\\"\\n       y=\\\"0\\\"\\n       width=\\\"100%\\\"\\n       height=\\\"100%\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       id=\\\"path850\\\"\\n       d=\\\"M 160,110 V 20\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160,300 V 210\\\"\\n       id=\\\"path852\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 205,135 282.94228,90\\\"\\n       id=\\\"path854\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       id=\\\"path856\\\"\\n       d=\\\"m 205,185 77.94228,45\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 37.05772,90 115,135\\\"\\n       id=\\\"path858\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       id=\\\"path860\\\"\\n       d=\\\"M 37.05772,230 115,185\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondArtifactPath.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"161.66868\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1394\\\"\\n     inkscape:window-height=\\\"855\\\"\\n     inkscape:window-x=\\\"46\\\"\\n     inkscape:window-y=\\\"1\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4206\\\"\\n       transform=\\\"matrix(1.1572994,0,0,1.1572994,-14.188294,6.2718173)\\\"\\n       style=\\\"stroke-width:6.91264508;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <line\\n         x1=\\\"150.51276\\\"\\n         y1=\\\"99.510551\\\"\\n         x2=\\\"35.082012\\\"\\n         y2=\\\"166.15654\\\"\\n         id=\\\"line4180\\\"\\n         style=\\\"stroke:#000000;stroke-width:6.91264508;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"150.51276\\\"\\n         y1=\\\"99.510551\\\"\\n         x2=\\\"265.94345\\\"\\n         y2=\\\"166.15654\\\"\\n         id=\\\"line4182\\\"\\n         style=\\\"stroke:#000000;stroke-width:6.91264508;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n    </g>\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:15;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:15,30;stroke-dashoffset:6\\\"\\n       d=\\\"m 60,210 c 90,-70 110,-70 200,0\\\"\\n       id=\\\"path4210\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondArtifactRing.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"14.186408\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1394\\\"\\n     inkscape:window-height=\\\"855\\\"\\n     inkscape:window-x=\\\"46\\\"\\n     inkscape:window-y=\\\"1\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4271\\\"\\n       style=\\\"stroke-width:8;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       transform=\\\"translate(27.870353,1.568337)\\\">\\n      <line\\n         x1=\\\"132.12965\\\"\\n         y1=\\\"38.988956\\\"\\n         x2=\\\"17.069948\\\"\\n         y2=\\\"122.58849\\\"\\n         id=\\\"line4215\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"17.069948\\\"\\n         y1=\\\"122.58849\\\"\\n         x2=\\\"61.017296\\\"\\n         y2=\\\"257.85382\\\"\\n         id=\\\"line4217\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"61.017296\\\"\\n         y1=\\\"257.85382\\\"\\n         x2=\\\"203.24199\\\"\\n         y2=\\\"257.85382\\\"\\n         id=\\\"line4219\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"247.18935\\\"\\n         y1=\\\"122.58849\\\"\\n         x2=\\\"203.24199\\\"\\n         y2=\\\"257.85382\\\"\\n         id=\\\"line4221\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"247.18935\\\"\\n         y1=\\\"122.58849\\\"\\n         x2=\\\"132.12965\\\"\\n         y2=\\\"38.988956\\\"\\n         id=\\\"line4223\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n    </g>\\n    <circle\\n       style=\\\"fill:none;stroke:#000000;stroke-width:15;stroke-miterlimit:4;stroke-dasharray:15,30;stroke-dashoffset:24;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"ellipse4231\\\"\\n       cy=\\\"160\\\"\\n       cx=\\\"160\\\"\\n       r=\\\"66.571121\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondArtifactArene.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <path\\n       edge=\\\"none\\\"\\n       d=\\\"M1526 0H1328V1283L914 410H796L385 1283V0H200V1489H470L867 660L1251 1489H1526V0Z\\\"\\n       id=\\\"char45\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"-12.077558\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1394\\\"\\n     inkscape:window-height=\\\"855\\\"\\n     inkscape:window-x=\\\"46\\\"\\n     inkscape:window-y=\\\"1\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"false\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4369\\\"\\n       style=\\\"stroke-width:8;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <line\\n         x1=\\\"79.874969\\\"\\n         y1=\\\"53.341728\\\"\\n         x2=\\\"42.383801\\\"\\n         y2=\\\"124.96636\\\"\\n         id=\\\"line4253\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"42.383801\\\"\\n         y1=\\\"124.96636\\\"\\n         x2=\\\"159.32974\\\"\\n         y2=\\\"157.25311\\\"\\n         id=\\\"line4255\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"159.32974\\\"\\n         y1=\\\"157.25311\\\"\\n         x2=\\\"277.61575\\\"\\n         y2=\\\"130.34207\\\"\\n         id=\\\"line4257\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"277.61575\\\"\\n         y1=\\\"130.34207\\\"\\n         x2=\\\"243.44348\\\"\\n         y2=\\\"57.081509\\\"\\n         id=\\\"line4259\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"243.44348\\\"\\n         y1=\\\"57.081509\\\"\\n         x2=\\\"79.874969\\\"\\n         y2=\\\"53.341728\\\"\\n         id=\\\"line4261\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n    </g>\\n    <line\\n       style=\\\"stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       id=\\\"line4275\\\"\\n       y2=\\\"104.59695\\\"\\n       x2=\\\"160.5295\\\"\\n       y1=\\\"208.16769\\\"\\n       x1=\\\"160.5295\\\" />\\n    <ellipse\\n       style=\\\"fill:none;stroke:#000000;stroke-width:15;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:15,30;stroke-dashoffset:39\\\"\\n       id=\\\"ellipse4281\\\"\\n       ry=\\\"28.668024\\\"\\n       rx=\\\"69.736992\\\"\\n       cy=\\\"100.79803\\\"\\n       cx=\\\"160\\\" />\\n    <use\\n       height=\\\"100%\\\"\\n       width=\\\"100%\\\"\\n       y=\\\"0\\\"\\n       style=\\\"fill:#000000;fill-opacity:1\\\"\\n       xlink:href=\\\"#char45\\\"\\n       x=\\\"0\\\"\\n       id=\\\"use4287\\\"\\n       transform=\\\"matrix(0.03709198,0,0,-0.03709198,128.5194,269.61687)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondArtifactClear.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.7\\\"\\n     inkscape:cx=\\\"109.54685\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1394\\\"\\n     inkscape:window-height=\\\"855\\\"\\n     inkscape:window-x=\\\"46\\\"\\n     inkscape:window-y=\\\"1\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <circle\\n       style=\\\"fill:none;stroke:#000000;stroke-width:15;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:15,30;stroke-dashoffset:13.15014392\\\"\\n       id=\\\"ellipse4231\\\"\\n       cy=\\\"160\\\"\\n       cx=\\\"160\\\"\\n       r=\\\"121.49729\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"m 131.71573,131.71573 56.56854,56.56854\\\"\\n       id=\\\"path4142\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"m 188.28427,131.71573 -56.56854,56.56854\\\"\\n       id=\\\"path4144\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   inkscape:export-ydpi=\\\"9\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   sodipodi:docname=\\\"BondPolymer.svg\\\"\\n   version=\\\"1.0\\\"\\n   inkscape:version=\\\"1.0 (4035a4f, 2020-05-01)\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   id=\\\"svg2\\\"\\n   height=\\\"320\\\"\\n   width=\\\"320\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <path\\n       id=\\\"char45\\\"\\n       d=\\\"M1526 0H1328V1283L914 410H796L385 1283V0H200V1489H470L867 660L1251 1489H1526V0Z\\\"\\n       edge=\\\"none\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     inkscape:document-rotation=\\\"0\\\"\\n     inkscape:object-paths=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-global=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-y=\\\"23\\\"\\n     inkscape:window-x=\\\"56\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-width=\\\"1864\\\"\\n     showborder=\\\"true\\\"\\n     height=\\\"320px\\\"\\n     width=\\\"320px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:cy=\\\"163.33901\\\"\\n     inkscape:cx=\\\"23.277781\\\"\\n     inkscape:zoom=\\\"0.35\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     objecttolerance=\\\"10\\\"\\n     guidetolerance=\\\"10\\\"\\n     gridtolerance=\\\"10000\\\"\\n     borderopacity=\\\"1.0\\\"\\n     bordercolor=\\\"#666666\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     id=\\\"base\\\">\\n    <inkscape:grid\\n       id=\\\"grid4135\\\"\\n       type=\\\"xygrid\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     id=\\\"layer1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     inkscape:label=\\\"Layer 1\\\">\\n    <text\\n       id=\\\"text844\\\"\\n       y=\\\"296.98486\\\"\\n       x=\\\"241.67216\\\"\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:97.5637px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#000000;fill-opacity:1;stroke:none;stroke-width:2.43909\\\"\\n       xml:space=\\\"preserve\\\"><tspan\\n         style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:97.5637px;font-family:sans-serif;-inkscape-font-specification:'sans-serif, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;stroke-width:2.43909\\\"\\n         y=\\\"296.98486\\\"\\n         x=\\\"241.67216\\\"\\n         id=\\\"tspan842\\\"\\n         sodipodi:role=\\\"line\\\">n</tspan></text>\\n    <path\\n       sodipodi:nodetypes=\\\"cccc\\\"\\n       id=\\\"path846\\\"\\n       d=\\\"M 110,30 H 50 v 260 h 60\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:12;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cccc\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:12;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"m 164,30 h 60 v 260 h -60\\\"\\n       id=\\\"path848\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionGrow.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"90.708135\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g2858\\\"\\n       style=\\\"stroke:#000000;stroke-width:1.5;stroke-linecap:round\\\"\\n       transform=\\\"matrix(2.9600019,0,0,2.9600019,0.86338889,59.519971)\\\">\\n      <line\\n         id=\\\"line2860\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"54\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2862\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"28.019238\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2864\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"79.980759\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2866\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"79.980759\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"79.980759\\\" />\\n      <line\\n         id=\\\"line2868\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"105.96152\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"79.980759\\\" />\\n      <line\\n         id=\\\"line2870\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"2.0384758\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"28.019238\\\" />\\n      <line\\n         id=\\\"line2872\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"28.019238\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"28.019238\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75000000000000000;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-114.54779,78.005469)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,133.10042,159.32054)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75000000000000000;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1-8\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-268.45509,78.218145)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7-8\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,-20.806885,159.53322)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3171\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-191.89451,34.331302)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,55.753684,115.64637)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75000000000000000;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1-4\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-193.01077,-55.760055)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7-0\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,54.637436,25.555021)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionShrink.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"201.01679\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g2858\\\"\\n       style=\\\"stroke:#000000;stroke-width:1.5;stroke-linecap:round\\\"\\n       transform=\\\"matrix(2.9600019,0,0,2.9600019,0.86338889,59.519971)\\\">\\n      <line\\n         id=\\\"line2860\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"54\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2862\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"28.019238\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2864\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"79.980759\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2866\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"79.980759\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"79.980759\\\" />\\n      <line\\n         id=\\\"line2868\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"105.96152\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"79.980759\\\" />\\n      <line\\n         id=\\\"line2870\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"2.0384758\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"28.019238\\\" />\\n      <line\\n         id=\\\"line2872\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"28.019238\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"28.019238\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-114.54779,78.005469)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,133.10042,159.32054)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1-8\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-268.45509,78.218145)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7-8\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,-20.806885,159.53322)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3171\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-191.89451,34.331302)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,55.753684,115.64637)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1-4\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-193.01077,-55.760055)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7-0\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,54.637436,25.555021)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionChain.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3832\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"201.01679\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g3810\\\"\\n       style=\\\"stroke:#000000;stroke-width:1.5;stroke-linecap:round\\\"\\n       transform=\\\"matrix(2.621464,0,0,2.621464,4.540555,48.791192)\\\">\\n      <line\\n         id=\\\"line3812\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"2\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3814\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3816\\\"\\n         y2=\\\"92\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3818\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"53.962002\\\"\\n         y1=\\\"92\\\"\\n         x1=\\\"27.98\\\" />\\n      <line\\n         id=\\\"line3820\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"53.962002\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3822\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3824\\\"\\n         y2=\\\"31.999731\\\"\\n         x2=\\\"79.942604\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3826\\\"\\n         y2=\\\"46.999462\\\"\\n         x2=\\\"105.92352\\\"\\n         y1=\\\"31.999731\\\"\\n         x1=\\\"79.942604\\\" />\\n      <line\\n         id=\\\"line3828\\\"\\n         y2=\\\"1.999732\\\"\\n         x2=\\\"79.942299\\\"\\n         y1=\\\"31.999731\\\"\\n         x1=\\\"79.942604\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3885\\\"\\n       transform=\\\"matrix(0.8900413,0,0,0.8900413,-171.09202,33.69748)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,158.10549,34.777218)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,405.75369,116.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3889\\\"\\n       transform=\\\"matrix(0.8900413,0,0,0.8900413,-141.7775,-40.634342)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,48.105487,74.777215)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-1\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,295.75368,156.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-7\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881\\\"\\n       transform=\\\"matrix(0.8900413,0,0,0.8900413,-196.12626,-147.6538)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionSmRing.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3832\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3967\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-7\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-9\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-3\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-42\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-8\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4170\\\"\\n       inkscape:persp3d-origin=\\\"54 : 21.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 32 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 32 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4190\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4190-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4190-0\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4190-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4190-3\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"201.01679\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4150\\\"\\n       style=\\\"stroke:#000000;stroke-width:1.5;stroke-linecap:round\\\"\\n       transform=\\\"matrix(2.9029405,0,0,2.9029405,4.6189711,81.382589)\\\">\\n      <line\\n         id=\\\"line4152\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"28\\\"\\n         y1=\\\"17\\\"\\n         x1=\\\"28\\\" />\\n      <line\\n         id=\\\"line4154\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"53.98\\\"\\n         y1=\\\"17\\\"\\n         x1=\\\"28\\\" />\\n      <line\\n         id=\\\"line4156\\\"\\n         y2=\\\"62\\\"\\n         x2=\\\"53.98\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"28\\\" />\\n      <line\\n         id=\\\"line4158\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"79.961998\\\"\\n         y1=\\\"62\\\"\\n         x1=\\\"53.98\\\" />\\n      <line\\n         id=\\\"line4160\\\"\\n         y2=\\\"17\\\"\\n         x2=\\\"79.961998\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"79.961998\\\" />\\n      <line\\n         id=\\\"line4162\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"53.98\\\"\\n         y1=\\\"17\\\"\\n         x1=\\\"79.961998\\\" />\\n      <line\\n         id=\\\"line4164\\\"\\n         y2=\\\"2.000165\\\"\\n         x2=\\\"2.0191426\\\"\\n         y1=\\\"17\\\"\\n         x1=\\\"28\\\" />\\n      <line\\n         id=\\\"line4166\\\"\\n         y2=\\\"1.999732\\\"\\n         x2=\\\"105.9426\\\"\\n         y1=\\\"17\\\"\\n         x1=\\\"79.961998\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-255.281,-36.286753)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65-6\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-179.98369,-79.76244)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0-0\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28-2\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65-8\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-103.88435,-36.613327)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0-6\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28-5\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65-9\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-104.66888,51.903875)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0-00\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28-6\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65-3\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-179.98369,92.833999)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0-8\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28-9\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65-4\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-254.51397,52.038479)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0-4\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28-60\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionRingBlk.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3832\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3967\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-7\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-9\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-3\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-42\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-8\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"201.01679\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g3937\\\"\\n       style=\\\"stroke:#000000;stroke-width:1.5;stroke-linecap:round\\\"\\n       transform=\\\"matrix(2.4899701,0,0,2.4899701,26.948713,30.700421)\\\">\\n      <line\\n         id=\\\"line3939\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"2\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3941\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3943\\\"\\n         y2=\\\"92\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3945\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"53.962002\\\"\\n         y1=\\\"92\\\"\\n         x1=\\\"27.98\\\" />\\n      <line\\n         id=\\\"line3947\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"53.962002\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3949\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3951\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"79.942001\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3953\\\"\\n         y2=\\\"92\\\"\\n         x2=\\\"79.942001\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3955\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"105.924\\\"\\n         y1=\\\"92\\\"\\n         x1=\\\"79.942001\\\" />\\n      <line\\n         id=\\\"line3957\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"105.924\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"105.924\\\" />\\n      <line\\n         id=\\\"line3959\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"79.942001\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"105.924\\\" />\\n      <line\\n         id=\\\"line3961\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"27.9795\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"27.98\\\" />\\n      <line\\n         id=\\\"line3963\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"79.941498\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"79.942001\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-81.933097,-38.115125)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-7\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-210.7766,109.10718)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-6\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-1\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-2\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-276.17313,72.504683)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-3\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-2\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-1\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-276.17314,-1.722748)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-68\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-5\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-6\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-210.77659,-38.895518)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-1\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-8\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-27\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-146.06844,-3.787902)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-9\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-54\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-12\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-146.75682,71.934407)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-33\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-4\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-13\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-82.048668,108.41879)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-8\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-7\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-77\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-18.028899,71.246022)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-93\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-19\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-17.340514,-3.217626)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionCurElement.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2915\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2915-8\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"-30.914228\\\"\\n     inkscape:cy=\\\"168.99852\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <ellipse\\n       ry=\\\"45.784992\\\"\\n       rx=\\\"47.872509\\\"\\n       cy=\\\"170\\\"\\n       cx=\\\"160.1275\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:5.40349102;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4;stroke-opacity:1\\\"\\n       id=\\\"path3171\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:79.51308441px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2841\\\"\\n       transform=\\\"translate(-1.19968,0)\\\">\\n      <path\\n         d=\\\"m 162.0258,144.65547 -10.63798,28.84679 21.31479,0 -10.67681,-28.84679 z m -4.42602,-7.72612 8.89087,0 22.09128,57.96535 -8.1532,0 -5.28016,-14.86988 -26.12906,0 -5.28016,14.86988 -8.26967,0 22.1301,-57.96535 z\\\"\\n         id=\\\"path4196\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n    <ellipse\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:10.16818333;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:10.16818342, 30.50455026;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path3171-1-4\\\"\\n       cx=\\\"255.71176\\\"\\n       cy=\\\"259.69077\\\"\\n       rx=\\\"47.872509\\\"\\n       ry=\\\"45.784992\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:79.51308441px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2841-1\\\">\\n      <path\\n         d=\\\"m 257.17732,233.76078 -10.63798,28.84678 21.31479,0 -10.67681,-28.84678 z m -4.42602,-7.72613 8.89087,0 22.09128,57.96535 -8.1532,0 -5.28016,-14.86988 -26.12906,0 -5.28016,14.86988 -8.26967,0 22.1301,-57.96535 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4190\\\" />\\n    </g>\\n    <ellipse\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:10.16818333;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:10.16818342, 30.50455026;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path3171-1-4-9\\\"\\n       cx=\\\"62.127495\\\"\\n       cy=\\\"260\\\"\\n       rx=\\\"47.872509\\\"\\n       ry=\\\"45.784992\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:79.51308441px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2841-1-4\\\">\\n      <path\\n         d=\\\"m 63.593049,234.07001 -10.637981,28.84679 21.314787,0 -10.676806,-28.84679 z m -4.426021,-7.72612 8.890868,0 22.091281,57.96534 -8.153197,0 -5.280166,-14.86987 -26.129055,0 -5.280166,14.86987 -8.269671,0 22.130106,-57.96534 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4187\\\" />\\n    </g>\\n    <ellipse\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:10.16818333;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:10.16818342, 30.50455026;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path3171-1-4-5\\\"\\n       cx=\\\"160.1275\\\"\\n       cy=\\\"60\\\"\\n       rx=\\\"47.872509\\\"\\n       ry=\\\"45.784992\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:79.51308441px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2841-1-5\\\"\\n       transform=\\\"translate(-1.49992,0)\\\">\\n      <path\\n         d=\\\"m 161.59305,34.070018 -10.63798,28.846788 21.31479,0 -10.67681,-28.846788 z m -4.42602,-7.726125 8.89087,0 22.09128,57.965349 -8.1532,0 -5.28017,-14.869878 -26.12905,0 -5.28017,14.869878 -8.26967,0 22.13011,-57.965349 z\\\"\\n         id=\\\"path4193\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"SelectionPrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"189.90735\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"false\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 144.95689,266.25988 L 265.16504,266.25988 L 266.57925,147.46595 L 144.95689,266.25988 z \\\"\\n       id=\\\"path3273\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 55.861434,55.542071 L 56.568541,172.21469 L 171.82694,55.542071 L 55.861434,55.542071 z \\\"\\n       id=\\\"path3271\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3241\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-241.68207,-85.517816)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,49.161297,11.157237)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3171\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-357.86079,-84.223172)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-66.598595,11.412514)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,142.705,101.92218)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3249\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-357.45883,29.712228)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-65.891485,125.72117)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,23.082644,220.5948)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,142.11922,219.76637)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"SelectionNext.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"189.90735\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"false\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 144.95689,266.25988 L 265.16504,266.25988 L 266.57925,147.46595 L 144.95689,266.25988 z \\\"\\n       id=\\\"path3273\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 55.861434,55.542071 L 56.568541,172.21469 L 171.82694,55.542071 L 55.861434,55.542071 z \\\"\\n       id=\\\"path3271\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,49.161297,11.157237)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-66.598595,11.412514)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3243\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-148.59123,4.5160638)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,142.705,101.92218)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-65.891485,125.72117)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3247\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-266.7094,126.04463)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,23.082644,220.5948)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3245\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-148.49437,124.16046)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,142.11922,219.76637)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionToggle.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3832\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3967\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-7\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-9\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-3\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-42\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-8\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2885\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2908\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"90.708135\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:0.75294118;stroke:#000000;stroke-width:4.25;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       d=\\\"m 160,244 c -46.9442,0 -85,-38.0558 -85,-85 0,-46.9442 38.0558,-85 85,-85 l 0,170 z\\\"\\n       id=\\\"path2875-1\\\"\\n       sodipodi:nodetypes=\\\"cscc\\\" />\\n    <path\\n       style=\\\"fill:#000000;fill-opacity:0.75294118;stroke:#000000;stroke-width:4.25;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       d=\\\"m 160,244 c 46.9442,0 85,-38.0558 85,-85 0,-46.9442 -38.0558,-85 -85,-85 l 0,170 z\\\"\\n       id=\\\"path2875-1-7\\\"\\n       sodipodi:nodetypes=\\\"cscc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionUncurrent.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3832\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3967\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-7\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-9\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-3\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-42\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-8\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2885\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2908\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"-40.106616\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1850\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"70\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:0.75294118;stroke:#000000;stroke-width:4.25;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       d=\\\"M 160 74 C 113.0558 74 75 112.0558 75 159 C 75 205.9442 113.0558 244 160 244 C 206.9442 244 245 205.9442 245 159 C 245 112.0558 206.9442 74 160 74 z \\\"\\n       id=\\\"path2875-1\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MoveJoin.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM01.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"204.69707\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 10,160 L 310,160\\\"\\n       id=\\\"path2161\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1\\\"\\n       id=\\\"path2163\\\"\\n       sodipodi:cx=\\\"160.35715\\\"\\n       sodipodi:cy=\\\"160.71428\\\"\\n       sodipodi:rx=\\\"10.357142\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       d=\\\"M 170.71429 160.71428 A 10.357142 10 0 1 1  150,160.71428 A 10.357142 10 0 1 1  170.71429 160.71428 z\\\"\\n       transform=\\\"matrix(1.9310346,0,0,2,-149.65519,-161.42855)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:10.5;stroke-miterlimit:4;stroke-dasharray:10.5, 21;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path3136\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"159.64285\\\"\\n       sodipodi:rx=\\\"40\\\"\\n       sodipodi:ry=\\\"39.642857\\\"\\n       d=\\\"M 200 159.64285 A 40 39.642857 0 1 1  120,159.64285 A 40 39.642857 0 1 1  200 159.64285 z\\\"\\n       transform=\\\"matrix(0.8835172,0,0,0.8914768,18.63725,17.682092)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainNew.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainNew.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3748\\\">\\n      <stop\\n         id=\\\"stop3750\\\"\\n         offset=\\\"0\\\"\\n         style=\\\"stop-color:#b1b1b1;stop-opacity:1;\\\" />\\n      <stop\\n         id=\\\"stop3752\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#f8f8f8;stop-opacity:1;\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3732\\\">\\n      <stop\\n         style=\\\"stop-color:#2c2c2c;stop-opacity:0.75294119;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3734\\\" />\\n      <stop\\n         style=\\\"stop-color:#aaaaaa;stop-opacity:0.75294119;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3736\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3724\\\">\\n      <stop\\n         style=\\\"stop-color:#888888;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3726\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3728\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective14\\\" />\\n    <linearGradient\\n       id=\\\"linearGradient3302\\\">\\n      <stop\\n         style=\\\"stop-color:#9d9d9d;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3304\\\" />\\n      <stop\\n         style=\\\"stop-color:#dfdfdf;stop-opacity:1;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3306\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       id=\\\"perspective2858\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2858-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2858-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2919\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3732\\\"\\n       id=\\\"radialGradient3738\\\"\\n       cx=\\\"162.18814\\\"\\n       cy=\\\"173.88938\\\"\\n       fx=\\\"162.18814\\\"\\n       fy=\\\"173.88938\\\"\\n       r=\\\"121.40368\\\"\\n       gradientTransform=\\\"matrix(1,0,0,0.99372304,0,1.0914969)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3748\\\"\\n       id=\\\"radialGradient3746\\\"\\n       cx=\\\"159.69394\\\"\\n       cy=\\\"159.28571\\\"\\n       fx=\\\"159.69394\\\"\\n       fy=\\\"159.28571\\\"\\n       r=\\\"155.90823\\\"\\n       gradientTransform=\\\"matrix(1,0,0,1.0019631,0,-0.31268812)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"51.002171\\\"\\n     inkscape:cy=\\\"165.43111\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1283\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"23\\\"\\n     inkscape:window-y=\\\"14\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:url(#radialGradient3738);stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;opacity:1\\\"\\n       d=\\\"M 70.323695,204.27689 C 41.841631,206.80461 27.43488,166.54249 59.305446,137.55529 49.873891,113.58226 39.63241,89.128318 90.523819,87.361033 106.27301,49.269942 126.50785,43.380107 172.54857,70.221535 c 24.08035,-4.949896 54.09769,-38.514586 71.00648,30.606245 42.5116,9.78214 51.34305,33.15299 23.87288,77.12773 16.04417,28.54308 14.43112,49.54596 -18.36375,56.92763 0.70405,25.67554 0.0649,50.80591 -47.13361,31.8305 -27.699,35.95486 -57.19689,38.30078 -88.146,-3.67275 -34.966493,0.38164 -56.960187,2.40605 -43.460875,-58.764 z\\\"\\n       id=\\\"path2948\\\"\\n       sodipodi:nodetypes=\\\"cccccccccc\\\" />\\n    <path\\n       style=\\\"fill:url(#radialGradient3746);stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;opacity:1\\\"\\n       d=\\\"M 77.05707,182.24039 C 63.933812,160.98392 31.572476,151.75124 4.2142019,139.39165 30.679923,141.54169 57.327987,144.60344 81.954069,137.55529 72.559539,108.605 63.929901,79.569724 37.881073,52.469912 c 24.509908,20.813833 50.021015,38.957802 80.188367,44.68512 4.8179,-29.638769 8.20842,-60.229129 7.3455,-93.6551159 7.91156,33.7919259 24.82706,63.0818819 44.073,91.2066169 18.18443,-22.393883 31.73946,-46.639529 40.40025,-72.842869 -3.97926,28.157749 -6.10209,56.315497 1.22425,84.473246 30.1815,-5.53135 54.99364,-18.221839 79.57624,-31.218376 -21.4992,23.026775 -42.89749,46.093916 -55.09124,72.842866 25.48741,8.04662 52.18744,10.03009 79.57624,8.56974 -29.54737,11.57525 -58.76632,23.25998 -77.12774,38.56388 12.53395,26.2048 32.69325,46.69059 52.64274,67.33374 -25.06648,-10.42451 -44.73179,-24.08972 -78.35199,-29.38199 -3.69624,29.59544 5.33453,54.10007 10.40613,80.18837 -17.43375,-21.93842 -27.4327,-46.35509 -60.60037,-63.04887 -35.09654,11.6295 -42.37898,40.95888 -58.15188,64.88524 4.3981,-26.75973 7.48188,-53.95757 0.61212,-84.47325 -28.70497,-0.76993 -55.11896,14.49699 -82.02474,26.32138 19.90929,-22.09375 43.397129,-38.46182 54.47912,-74.67925 z\\\"\\n       id=\\\"path2950\\\"\\n       sodipodi:nodetypes=\\\"ccccccccccccccccccccc\\\" />\\n    <g\\n       id=\\\"g2933\\\"\\n       transform=\\\"matrix(0.66308916,0,0,0.66308916,51.085812,66.604893)\\\">\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-168.76512,-87.437593)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146-8-5\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-170.1158,-189.26245)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3150-9\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-231.66709,-98.469883)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-99.709926,-156.21097)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3148\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-189.70992,-49.068112)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3148-0\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-133.68722,-145.69101)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3150-4\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-209.20179,-147.34435)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path2173\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-148.68722,-55.691026)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3150\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-198.80993,-119.18415)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146-8\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-93.487486,-110.91579)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path2173-7\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-152.05893,-154.48722)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path2173-8\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-144.70993,-87.639533)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3148-2\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-104.52421,-89.184173)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146-4\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomInline.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/iMMDS/res/actions/GenericBack.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3690\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.75294119;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3692\\\" />\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.25098041;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3694\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2906\\\" />\\n    <linearGradient\\n       id=\\\"linearGradient3136\\\">\\n      <stop\\n         style=\\\"stop-color:#b2a5a5;stop-opacity:0.50196081;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3138\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.19607843;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3140\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3136\\\"\\n       id=\\\"linearGradient3142\\\"\\n       x1=\\\"301.78571\\\"\\n       y1=\\\"158.57143\\\"\\n       x2=\\\"6.0714264\\\"\\n       y2=\\\"158.57143\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(0.8629045,0,0,0.8712017,23.773609,21.988053)\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3696\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3704\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#00faff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98125\\\"\\n     inkscape:cx=\\\"72.356688\\\"\\n     inkscape:cy=\\\"160\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1213\\\"\\n     inkscape:window-height=\\\"876\\\"\\n     inkscape:window-x=\\\"161\\\"\\n     inkscape:window-y=\\\"103\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2908\\\"\\n       empspacing=\\\"5\\\"\\n       visible=\\\"true\\\"\\n       enabled=\\\"true\\\"\\n       snapvisiblegridlinesonly=\\\"true\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:url(#radialGradient3704);fill-opacity:1;stroke:#000000;stroke-width:10.24196363;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2910\\\"\\n       sodipodi:cx=\\\"140\\\"\\n       sodipodi:cy=\\\"140\\\"\\n       sodipodi:rx=\\\"140\\\"\\n       sodipodi:ry=\\\"140\\\"\\n       d=\\\"m 280,140 a 140,140 0 1 1 -280,0 140,140 0 1 1 280,0 z\\\"\\n       transform=\\\"matrix(0.97637527,0,0,0.97637527,39.246505,23.488986)\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:124.49204254px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2912\\\">\\n      <path\\n         d=\\\"m 136.41046,198 -6.20029,-21.88337 -26.74634,0 L 97.263545,198 l -14.710486,0 25.591381,-85.64907 17.32433,0 25.5306,85.64907 -14.58891,0 z m -16.41253,-59.9969 q 0,0 -1.21574,-4.31588 -0.54709,-2.12755 -0.9726,-3.89038 l -0.72944,-2.97857 q -0.24315,-1.15495 -0.24315,-1.27653 -0.0608,0.18236 -0.30393,1.33732 -0.24315,1.15495 -0.66866,2.91778 -0.42551,1.76283 -0.9726,3.89038 l -1.21574,4.31588 -6.92973,24.61879 20.18132,0 -6.92973,-24.61879 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4152\\\" />\\n      <path\\n         d=\\\"m 211.84729,164.87101 q 0,7.47682 -1.21575,13.79868 -1.21574,6.26108 -3.7688,10.8809 -2.55306,4.55903 -6.50422,7.11209 -3.89038,2.55306 -9.17886,2.55306 -2.3707,0 -4.80218,-0.60787 -2.3707,-0.60787 -4.55904,-2.00597 -2.12754,-1.39811 -3.95116,-3.64723 -1.76283,-2.24913 -3.03936,-5.53163 l -0.12157,0 q 0,1.27653 -0.0608,2.91778 -0.0608,1.64125 -0.18236,3.22172 -0.12157,1.51968 -0.24315,2.73542 -0.12157,1.21574 -0.18236,1.70204 l -13.61631,0 q 0.12157,-2.12755 0.24314,-6.01793 0.12158,-3.95116 0.12158,-8.99649 l 0,-75.19368 14.04182,0 0,25.16587 q 0,1.94519 -0.0608,3.82959 0,1.82361 -0.0608,3.40408 -0.0608,1.82361 -0.12157,3.46487 l 0.24314,0 q 2.55306,-6.80816 6.99052,-9.72595 4.43747,-2.91778 10.27303,-2.91778 5.16691,0 8.87492,2.55306 3.7688,2.49227 6.1395,7.05131 2.43149,4.49825 3.58644,10.69853 1.15496,6.20029 1.15496,13.55553 z m -14.58891,0 q 0,-11.18483 -2.73542,-16.59488 -2.67464,-5.41006 -8.26705,-5.41006 -2.12755,0 -4.2551,1.03338 -2.12755,1.03339 -3.76881,3.64723 -1.64125,2.55306 -2.67463,6.92973 -0.97259,4.31589 -0.97259,10.94169 0,6.44343 0.97259,10.69853 1.03338,4.2551 2.61385,6.80816 1.64125,2.55306 3.70801,3.58644 2.12755,1.03338 4.2551,1.03338 5.34927,0 8.20626,-5.34926 2.91779,-5.41006 2.91779,-17.32434 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4154\\\" />\\n      <path\\n         d=\\\"m 252.57467,198 -16.71646,0 -19.26952,-65.77167 14.77127,0 9.42201,36.77621 q 0,0 0.9118,3.82959 0.54709,2.06676 0.9726,4.07274 l 0.9118,3.89037 q 0.42551,1.8844 0.72945,3.40408 0.30393,-1.45889 0.79023,-3.34329 l 0.91181,-3.82959 1.03338,-4.01195 0.97259,-3.82959 9.84752,-36.95857 14.6497,0 L 252.57467,198 Z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4156\\\" />\\n    </g>\\n    <path\\n       style=\\\"color:#000000;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34259796;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate\\\"\\n       d=\\\"m 8.105653,160.47283 23.562761,0\\\"\\n       id=\\\"path2916\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomFormula.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/iMMDS/res/actions/GenericBack.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3690\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.75294119;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3692\\\" />\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.25098041;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3694\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2906\\\" />\\n    <linearGradient\\n       id=\\\"linearGradient3136\\\">\\n      <stop\\n         style=\\\"stop-color:#b2a5a5;stop-opacity:0.50196081;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3138\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.19607843;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3140\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3136\\\"\\n       id=\\\"linearGradient3142\\\"\\n       x1=\\\"301.78571\\\"\\n       y1=\\\"158.57143\\\"\\n       x2=\\\"6.0714264\\\"\\n       y2=\\\"158.57143\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(0.8629045,0,0,0.8712017,23.773609,21.988053)\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3696\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3704\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3645\\\"\\n       cx=\\\"165\\\"\\n       cy=\\\"160\\\"\\n       fx=\\\"165\\\"\\n       fy=\\\"160\\\"\\n       r=\\\"130\\\"\\n       gradientTransform=\\\"matrix(1,0,0,0.80769231,0,30.769231)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#00faff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.1503782\\\"\\n     inkscape:cx=\\\"147.23233\\\"\\n     inkscape:cy=\\\"155.47208\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1213\\\"\\n     inkscape:window-height=\\\"876\\\"\\n     inkscape:window-x=\\\"161\\\"\\n     inkscape:window-y=\\\"103\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2908\\\"\\n       empspacing=\\\"5\\\"\\n       visible=\\\"true\\\"\\n       enabled=\\\"true\\\"\\n       snapvisiblegridlinesonly=\\\"true\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <rect\\n       style=\\\"fill:url(#radialGradient3645);fill-opacity:1.0;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       id=\\\"rect2865\\\"\\n       width=\\\"250\\\"\\n       height=\\\"200\\\"\\n       x=\\\"40\\\"\\n       y=\\\"60\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:124.49204254px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2912\\\">\\n      <path\\n         d=\\\"m 103.57242,189.11313 q 4.13353,0 7.17288,-1.39811 3.03936,-1.45889 5.2277,-3.7688 2.24912,-2.30991 3.70801,-5.22769 1.45889,-2.91778 2.43149,-5.89635 l 12.76529,5.89635 q -1.51967,4.61982 -4.01195,9.05728 -2.49227,4.43746 -6.26107,7.84154 -3.70802,3.40408 -8.87492,5.53163 -5.16691,2.06676 -12.15743,2.06676 -9.118068,0 -15.804652,-3.2825 -6.625797,-3.34329 -11.002471,-9.23965 -4.376673,-5.95713 -6.504223,-14.10261 -2.066762,-8.14548 -2.066762,-17.81063 0,-10.02988 2.066762,-18.11456 2.12755,-8.08469 6.382649,-13.7379 4.315886,-5.71399 10.880896,-8.75334 6.56501,-3.10015 15.439931,-3.10015 6.86895,0 12.03585,1.76283 5.16691,1.76283 8.87492,4.98455 3.76881,3.16093 6.20029,7.5376 2.49227,4.31589 3.89038,9.54358 l -12.94766,4.31589 q -0.66866,-2.73543 -2.12755,-5.2277 -1.45889,-2.55306 -3.70802,-4.49825 -2.18833,-1.94518 -5.1669,-3.10014 -2.97857,-1.21574 -6.74737,-1.21574 -5.349271,0 -9.178861,2.12755 -3.829589,2.06676 -6.321861,5.95714 -2.431485,3.89037 -3.647228,9.36121 -1.154955,5.41006 -1.154955,12.15743 0,6.68658 1.154955,12.279 1.215743,5.53163 3.708015,9.54358 2.492272,4.01195 6.382649,6.26107 3.890376,2.24913 9.361216,2.24913 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4157\\\" />\\n      <path\\n         d=\\\"m 218.21695,202 0,-36.71543 -30.57592,0 0,36.71543 -14.71049,0 0,-85.64907 14.71049,0 0,34.10158 30.57592,0 0,-34.10158 14.71049,0 0,85.64907 -14.71049,0 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4159\\\" />\\n    </g>\\n    <path\\n       style=\\\"color:#000000;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34259796;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate\\\"\\n       d=\\\"m 8.105653,160.47283 23.562761,0\\\"\\n       id=\\\"path2916\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:87.69158173px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2857\\\">\\n      <path\\n         d=\\\"m 162.47581,218.36884 -8.86336,-16.78472 -8.90617,16.78472 -10.53327,0 13.9159,-23.93535 -13.23081,-22.3939 10.66172,0 8.09263,15.15763 8.09263,-15.15763 10.70454,0 -13.23081,22.26544 14.00154,24.06381 -10.70454,0 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4162\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:87.69158173px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2861\\\">\\n      <path\\n         d=\\\"m 260.83842,220.80946 q -1.37018,4.06772 -2.78318,7.02217 -1.41299,2.95446 -3.12572,4.88127 -1.66991,1.96964 -3.81082,2.91164 -2.09809,0.942 -4.92408,0.942 -1.54146,0 -3.16855,-0.12846 -1.58427,-0.12845 -3.04009,-0.42818 l 0,-8.56363 q 0.68509,0.12845 1.66991,0.21409 1.02764,0.12845 1.71273,0.12845 1.45581,0 2.56909,-0.38536 1.15609,-0.38536 2.05527,-1.28454 0.89918,-0.89918 1.66991,-2.39782 0.81354,-1.49864 1.54145,-3.768 l 0.64227,-2.05527 -15.02917,-45.85824 10.44763,0 5.95172,21.7088 q 0,0 0.42818,1.58427 l 0.68509,2.56909 0.77073,2.99727 0.72791,2.99727 q 0.34255,1.45582 0.55664,2.56909 0.25691,1.11328 0.38536,1.58427 0.0856,-0.47099 0.29973,-1.58427 l 0.55663,-2.48345 0.64227,-2.91163 0.6851,-2.95446 0.55663,-2.52627 q 0.25691,-1.15609 0.42818,-1.66991 l 5.60918,-21.88007 10.31918,0 -15.02918,48.76988 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4165\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomExpandAbbrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/iMMDS/res/actions/GenericBack.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3690\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.75294119;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3692\\\" />\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.25098041;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3694\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2906\\\" />\\n    <linearGradient\\n       id=\\\"linearGradient3136\\\">\\n      <stop\\n         style=\\\"stop-color:#b2a5a5;stop-opacity:0.50196081;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3138\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.19607843;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3140\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3136\\\"\\n       id=\\\"linearGradient3142\\\"\\n       x1=\\\"301.78571\\\"\\n       y1=\\\"158.57143\\\"\\n       x2=\\\"6.0714264\\\"\\n       y2=\\\"158.57143\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(0.8629045,0,0,0.8712017,23.773609,21.988053)\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3696\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#00faff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.9625\\\"\\n     inkscape:cx=\\\"167.64331\\\"\\n     inkscape:cy=\\\"160\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-midpoints=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2908\\\"\\n       empspacing=\\\"5\\\"\\n       visible=\\\"true\\\"\\n       enabled=\\\"true\\\"\\n       snapvisiblegridlinesonly=\\\"true\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:124.49204254px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#929292;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2912\\\">\\n      <path\\n         d=\\\"m 136.41046,202 -6.20029,-21.88337 -26.74634,0 L 97.263545,202 l -14.710486,0 25.591381,-85.64907 17.32433,0 25.5306,85.64907 -14.58891,0 z m -16.41253,-59.9969 q 0,0 -1.21574,-4.31588 -0.54709,-2.12755 -0.9726,-3.89038 l -0.72944,-2.97857 q -0.24315,-1.15495 -0.24315,-1.27653 -0.0608,0.18236 -0.30393,1.33732 -0.24315,1.15495 -0.66866,2.91778 -0.42551,1.76283 -0.9726,3.89038 l -1.21574,4.31588 -6.92973,24.61879 20.18132,0 -6.92973,-24.61879 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4723\\\" />\\n      <path\\n         d=\\\"m 211.84729,168.87101 q 0,7.47682 -1.21575,13.79868 -1.21574,6.26108 -3.7688,10.8809 -2.55306,4.55903 -6.50422,7.11209 -3.89038,2.55306 -9.17886,2.55306 -2.3707,0 -4.80218,-0.60787 -2.3707,-0.60787 -4.55904,-2.00597 -2.12754,-1.39811 -3.95116,-3.64723 -1.76283,-2.24913 -3.03936,-5.53163 l -0.12157,0 q 0,1.27653 -0.0608,2.91778 -0.0608,1.64125 -0.18236,3.22172 -0.12157,1.51968 -0.24315,2.73542 -0.12157,1.21574 -0.18236,1.70204 l -13.61631,0 q 0.12157,-2.12755 0.24314,-6.01793 0.12158,-3.95116 0.12158,-8.99649 l 0,-75.19368 14.04182,0 0,25.16587 q 0,1.94519 -0.0608,3.82959 0,1.82361 -0.0608,3.40408 -0.0608,1.82361 -0.12157,3.46487 l 0.24314,0 q 2.55306,-6.80816 6.99052,-9.72595 4.43747,-2.91778 10.27303,-2.91778 5.16691,0 8.87492,2.55306 3.7688,2.49227 6.1395,7.05131 2.43149,4.49825 3.58644,10.69853 1.15496,6.20029 1.15496,13.55553 z m -14.58891,0 q 0,-11.18483 -2.73542,-16.59488 -2.67464,-5.41006 -8.26705,-5.41006 -2.12755,0 -4.2551,1.03338 -2.12755,1.03339 -3.76881,3.64723 -1.64125,2.55306 -2.67463,6.92973 -0.97259,4.31589 -0.97259,10.94169 0,6.44343 0.97259,10.69853 1.03338,4.2551 2.61385,6.80816 1.64125,2.55306 3.70801,3.58644 2.12755,1.03338 4.2551,1.03338 5.34927,0 8.20626,-5.34926 2.91779,-5.41006 2.91779,-17.32434 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4725\\\" />\\n      <path\\n         d=\\\"m 252.57467,202 -16.71646,0 -19.26952,-65.77167 14.77127,0 9.42201,36.77621 q 0,0 0.9118,3.82959 0.54709,2.06676 0.9726,4.07274 l 0.9118,3.89037 q 0.42551,1.8844 0.72945,3.40408 0.30393,-1.45889 0.79023,-3.34329 l 0.91181,-3.82959 1.03338,-4.01195 0.97259,-3.82959 9.84752,-36.95857 14.6497,0 L 252.57467,202 Z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4727\\\" />\\n    </g>\\n    <path\\n       style=\\\"color:#000000;display:inline;overflow:visible;visibility:visible;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34300041;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;marker:none;enable-background:accumulate\\\"\\n       d=\\\"m 8.105653,164.47283 63.562761,0\\\"\\n       id=\\\"path2916\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       id=\\\"path4449\\\"\\n       d=\\\"M 209.1153,300.40828 165.33392,216.00234\\\"\\n       style=\\\"color:#000000;display:inline;overflow:visible;visibility:visible;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34300041;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;marker:none;enable-background:accumulate\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"color:#000000;display:inline;overflow:visible;visibility:visible;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34300041;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;marker:none;enable-background:accumulate\\\"\\n       d=\\\"M 165.33392,98.40828 209.1153,14.00234\\\"\\n       id=\\\"path4451\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomClearAbbrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/iMMDS/res/actions/GenericBack.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3690\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.75294119;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3692\\\" />\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.25098041;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3694\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2906\\\" />\\n    <linearGradient\\n       id=\\\"linearGradient3136\\\">\\n      <stop\\n         style=\\\"stop-color:#b2a5a5;stop-opacity:0.50196081;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3138\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.19607843;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3140\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3136\\\"\\n       id=\\\"linearGradient3142\\\"\\n       x1=\\\"301.78571\\\"\\n       y1=\\\"158.57143\\\"\\n       x2=\\\"6.0714264\\\"\\n       y2=\\\"158.57143\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(0.8629045,0,0,0.8712017,23.773609,21.988053)\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3696\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3704\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#00faff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98125\\\"\\n     inkscape:cx=\\\"80.025296\\\"\\n     inkscape:cy=\\\"157.96178\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2908\\\"\\n       empspacing=\\\"5\\\"\\n       visible=\\\"true\\\"\\n       enabled=\\\"true\\\"\\n       snapvisiblegridlinesonly=\\\"true\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:124.49204254px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2912\\\">\\n      <path\\n         d=\\\"m 136.41046,198 -6.20029,-21.88337 -26.74634,0 L 97.263545,198 l -14.710486,0 25.591381,-85.64907 17.32433,0 25.5306,85.64907 -14.58891,0 z m -16.41253,-59.9969 q 0,0 -1.21574,-4.31588 -0.54709,-2.12755 -0.9726,-3.89038 l -0.72944,-2.97857 q -0.24315,-1.15495 -0.24315,-1.27653 -0.0608,0.18236 -0.30393,1.33732 -0.24315,1.15495 -0.66866,2.91778 -0.42551,1.76283 -0.9726,3.89038 l -1.21574,4.31588 -6.92973,24.61879 20.18132,0 -6.92973,-24.61879 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4716\\\" />\\n      <path\\n         d=\\\"m 211.84729,164.87101 q 0,7.47682 -1.21575,13.79868 -1.21574,6.26108 -3.7688,10.8809 -2.55306,4.55903 -6.50422,7.11209 -3.89038,2.55306 -9.17886,2.55306 -2.3707,0 -4.80218,-0.60787 -2.3707,-0.60787 -4.55904,-2.00597 -2.12754,-1.39811 -3.95116,-3.64723 -1.76283,-2.24913 -3.03936,-5.53163 l -0.12157,0 q 0,1.27653 -0.0608,2.91778 -0.0608,1.64125 -0.18236,3.22172 -0.12157,1.51968 -0.24315,2.73542 -0.12157,1.21574 -0.18236,1.70204 l -13.61631,0 q 0.12157,-2.12755 0.24314,-6.01793 0.12158,-3.95116 0.12158,-8.99649 l 0,-75.19368 14.04182,0 0,25.16587 q 0,1.94519 -0.0608,3.82959 0,1.82361 -0.0608,3.40408 -0.0608,1.82361 -0.12157,3.46487 l 0.24314,0 q 2.55306,-6.80816 6.99052,-9.72595 4.43747,-2.91778 10.27303,-2.91778 5.16691,0 8.87492,2.55306 3.7688,2.49227 6.1395,7.05131 2.43149,4.49825 3.58644,10.69853 1.15496,6.20029 1.15496,13.55553 z m -14.58891,0 q 0,-11.18483 -2.73542,-16.59488 -2.67464,-5.41006 -8.26705,-5.41006 -2.12755,0 -4.2551,1.03338 -2.12755,1.03339 -3.76881,3.64723 -1.64125,2.55306 -2.67463,6.92973 -0.97259,4.31589 -0.97259,10.94169 0,6.44343 0.97259,10.69853 1.03338,4.2551 2.61385,6.80816 1.64125,2.55306 3.70801,3.58644 2.12755,1.03338 4.2551,1.03338 5.34927,0 8.20626,-5.34926 2.91779,-5.41006 2.91779,-17.32434 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4718\\\" />\\n      <path\\n         d=\\\"m 252.57467,198 -16.71646,0 -19.26952,-65.77167 14.77127,0 9.42201,36.77621 q 0,0 0.9118,3.82959 0.54709,2.06676 0.9726,4.07274 l 0.9118,3.89037 q 0.42551,1.8844 0.72945,3.40408 0.30393,-1.45889 0.79023,-3.34329 l 0.91181,-3.82959 1.03338,-4.01195 0.97259,-3.82959 9.84752,-36.95857 14.6497,0 L 252.57467,198 Z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4720\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:url(#radialGradient3704);fill-opacity:1;stroke:#000000;stroke-width:10.24196363;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2910\\\"\\n       sodipodi:cx=\\\"140\\\"\\n       sodipodi:cy=\\\"140\\\"\\n       sodipodi:rx=\\\"140\\\"\\n       sodipodi:ry=\\\"140\\\"\\n       d=\\\"m 280,140 a 140,140 0 1 1 -280,0 140,140 0 1 1 280,0 z\\\"\\n       transform=\\\"matrix(0.97637527,0,0,0.97637527,39.246505,23.488986)\\\" />\\n    <path\\n       style=\\\"color:#000000;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34259796;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate\\\"\\n       d=\\\"m 8.105653,160.47283 23.562761,0\\\"\\n       id=\\\"path2916\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 80,255 265,55\\\"\\n       id=\\\"path4714\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveUp.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 159.78571,43.691929 L 57.691929,148.05551 L 114.0424,148.05551 L 114.0424,275.02236 L 205.58038,275.05896 L 206.19198,148.7332 L 261.8795,148.05551 L 159.78571,43.691929 z \\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveDown.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"75\\\"\\n     inkscape:window-y=\\\"20\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 159.78571,275.05896 L 57.691929,170.69538 L 114.0424,170.69538 L 114.0424,43.728529 L 205.58038,43.691929 L 206.19198,170.01769 L 261.8795,170.69538 L 159.78571,275.05896 z \\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveLeft.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveDown.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 44.102199,159.37544 L 148.46578,57.281659 L 148.46578,113.63213 L 275.43263,113.63213 L 275.46923,205.17011 L 149.14347,205.78171 L 148.46578,261.46923 L 44.102199,159.37544 z \\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRight.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveLeft.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 275.46923,159.37544 L 171.10565,57.281659 L 171.10565,113.63213 L 44.138799,113.63213 L 44.102199,205.17011 L 170.42796,205.78171 L 171.10565,261.46923 L 275.46923,159.37544 z \\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveUpFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2833\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 160,26 102.09379,104.36358 -204.18757,0 L 160,26 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 159.78571,61.691929 57.691929,166.05551 l 56.350471,0 0,126.96685 91.53798,0.0366 0.6116,-126.32576 55.68752,-0.67769 L 159.78571,61.691929 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveDownFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2846\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 159.90621,296.36358 262,192 57.812425,192 159.90621,296.36358 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 159.78571,257.05896 57.691929,152.69538 l 56.350471,0 0,-126.966851 91.53798,-0.0366 0.6116,126.325761 55.68752,0.67769 -102.09379,104.36358 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveLeftFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveDown.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2824\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 25.63642,160.09378 130,58 130,262.18757 25.63642,160.09378 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 64.102199,159.37544 168.46578,57.281659 l 0,56.350471 126.96685,0 0.0366,91.53798 -126.32576,0.6116 -0.67769,55.68752 L 64.102199,159.37544 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRightFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveLeft.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2846\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 296,160 191.63642,57.90622 l 0,204.18757 L 296,160 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 257.46923,159.37544 153.10565,57.281659 l 0,56.350471 -126.966851,0 -0.0366,91.53798 126.325761,0.6116 0.67769,55.68752 104.36358,-102.09379 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveUpFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2833\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2838\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:7.45996714;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 261.25104,24.788943 c 30.31102,5.508007 30.31102,22.032027 0,27.540034 l -202.073498,0 c -30.311025,-5.508007 -30.311025,-22.032027 0,-27.540034 l 202.073498,0 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 160,64 -102.093781,104.36358 56.350471,0 0,126.96685 91.53798,0.0366 0.6116,-126.32576 55.68752,-0.67769 L 160,64 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveDownFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2846\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"585\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:7.45996714;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 261.03675,297.27002 c 30.31102,-5.50801 30.31102,-22.03203 0,-27.54004 l -202.073498,0 c -30.311025,5.50801 -30.311025,22.03203 0,27.54004 l 202.073498,0 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 159.78571,257.05896 57.691929,152.69538 l 56.350471,0 0,-126.966851 91.53798,-0.0366 0.6116,126.325761 55.68752,0.67769 -102.09379,104.36358 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveLeftFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveDown.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2824\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2838\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:7.42203379;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 24.849388,259.83188 c 5.515594,29.96228 22.062373,29.96228 27.577967,0 l 0,-199.748559 c -5.515594,-29.962283 -22.062373,-29.962283 -27.577967,0 l 0,199.748559 z\\\"\\n       id=\\\"path3982-1-1\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 63.63642,159.74331 168,57.64953 168,114 l 126.96685,0 0.0366,91.53798 -126.32576,0.6116 L 168,261.8371 63.63642,159.74331 z\\\"\\n       id=\\\"path3982-7\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRightFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveLeft.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2846\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2839\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:7.45996714;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 295.57464,260.99435 c -5.50801,30.31102 -22.03203,30.31102 -27.54004,0 l 0,-202.073498 c 5.50801,-30.311025 22.03203,-30.311025 27.54004,0 l 0,202.073498 z\\\"\\n       id=\\\"path3982-1-1\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 256.36358,159.74331 152,57.64953 152,114 l -126.96685,0 -0.0366,91.53798 126.32576,0.6116 L 152,261.8371 256.36358,159.74331 z\\\"\\n       id=\\\"path3982-7\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotP01.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM01.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2850\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"-2.4457843\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1468\\\"\\n     inkscape:window-height=\\\"892\\\"\\n     inkscape:window-x=\\\"267\\\"\\n     inkscape:window-y=\\\"87\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2840\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g8189\\\"\\n       transform=\\\"matrix(0.82715321,0,0,0.82715321,58.222329,-1.8743271)\\\">\\n      <path\\n         d=\\\"m 210.48975,15.472333 0,15.230468 15.23046,0 0,4.648438 -15.23046,0 0,15.230469 -4.59375,0 0,-15.230469 -15.23047,0 0,-4.648438 15.23047,0 0,-15.230468 4.59375,0 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:56px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8057\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 241.75504,55.953626 13.12364,0 0,-45.296451 -14.27693,2.86334 0,-7.3174247 14.19739,-2.8633402 8.03326,0 0,52.6138759 13.12364,0 0,6.760665 -34.201,0 0,-6.760665 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8059\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 303.87362,7.3961487 q -3.18149,0 -5.36877,2.2270424 -2.18727,2.1872739 -2.18727,5.3687629 0,3.14172 2.18727,5.328994 2.18728,2.147505 5.36877,2.147505 3.18148,0 5.36876,-2.147505 2.18727,-2.187274 2.18727,-5.328994 0,-3.141721 -2.22704,-5.3687629 -2.18727,-2.2270424 -5.32899,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89153,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82936,1.7895877 2.74404,4.0563982 0.91468,2.266811 0.91468,4.89154 0,5.249457 -3.69849,8.908169 -3.65871,3.618944 -8.9877,3.618944 -5.36876,0 -8.94794,-3.579175 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289943 3.65872,-9.0274754 3.65871,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8061\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"translate(35,58)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"m 287,181.00001 -250,0\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 159,298.65435 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 159,179.00001 101.14286,74.71429\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"m 159,179.00001 -110,-60\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 158.42857,180.57143 152,20 l 7,-1 -0.57143,161.57143 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotM01.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM01.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2850\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1644\\\"\\n     inkscape:window-height=\\\"898\\\"\\n     inkscape:window-x=\\\"154\\\"\\n     inkscape:window-y=\\\"90\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2840\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:19.54706955px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text3988\\\"\\n       transform=\\\"matrix(0.82715322,0,0,0.82715322,1.6734456,-2.9378058)\\\">\\n      <path\\n         d=\\\"m -2.0231386,38.428781 21.4352826,0 0,6.522053 -21.4352826,0 0,-6.522053 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8041\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 33.530002,57.239336 13.123642,0 0,-45.296452 -14.276932,2.863341 0,-7.3174253 14.197395,-2.8633402 8.03326,0 0,52.6138765 13.123643,0 0,6.760664 -34.201008,0 0,-6.760664 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8043\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 95.648579,8.6818581 q -3.181489,0 -5.368763,2.2270419 -2.187274,2.187274 -2.187274,5.368763 0,3.141721 2.187274,5.328995 2.187274,2.147505 5.368763,2.147505 3.181489,0 5.368761,-2.147505 2.18728,-2.187274 2.18728,-5.328995 0,-3.14172 -2.22705,-5.368763 -2.187271,-2.2270419 -5.328991,-2.2270419 z m 0,-5.1301512 q 2.545191,0 4.891541,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82935,1.7895877 2.74403,4.0563988 0.91468,2.266811 0.91468,4.891539 0,5.249457 -3.69848,8.90817 -3.65871,3.618944 -8.987709,3.618944 -5.368762,0 -8.947938,-3.579176 -3.579175,-3.579175 -3.579175,-8.947938 0,-5.328994 3.658713,-9.027475 3.658712,-3.6984811 8.947938,-3.6984811 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8045\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"matrix(-1,0,0,1,286,58)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"m 34,181.00001 250,0\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 162,298.65435 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 162,179.00001 219.85714,74.71429\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"m 162,179.00001 110,-60\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 162.57143,180.57143 169,20 l -7,-1 0.57143,161.57143 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotP05.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM05.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3631\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"63.2685\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2817\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g8172\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,63.934934,-1.0275628)\\\">\\n      <path\\n         d=\\\"m 209.48975,15.04897 0,15.230469 15.23046,0 0,4.648437 -15.23046,0 0,15.230469 -4.59375,0 0,-15.230469 -15.23047,0 0,-4.648437 15.23047,0 0,-15.230469 4.59375,0 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:56px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8080\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 239.44267,2.3397425 31.53651,0 0,6.7606643 -24.17931,0 0,14.5553132 q 1.74981,-0.59653 3.49963,-0.87491 1.74982,-0.318149 3.49964,-0.318149 9.94216,0 15.74837,5.4483 5.80622,5.4483 5.80622,14.754156 0,9.584236 -5.96529,14.91323 -5.96529,5.289226 -16.82213,5.289226 -3.73824,0 -7.63557,-0.636298 -3.85755,-0.636298 -7.99349,-1.908893 l 0,-8.073029 q 3.57917,1.948662 7.39696,2.903109 3.81779,0.954446 8.07303,0.954446 6.87997,0 10.8966,-3.618943 4.01663,-3.618944 4.01663,-9.822848 0,-6.203904 -4.01663,-9.822848 -4.01663,-3.618944 -10.8966,-3.618944 -3.22126,0 -6.44252,0.715836 -3.18148,0.715835 -6.52205,2.227042 l 0,-29.8264605 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8082\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 302.87362,6.3961411 q -3.18149,0 -5.36877,2.2270424 -2.18727,2.1872735 -2.18727,5.3687625 0,3.141721 2.18727,5.328995 2.18728,2.147505 5.36877,2.147505 3.18148,0 5.36876,-2.147505 2.18727,-2.187274 2.18727,-5.328995 0,-3.14172 -2.22704,-5.3687625 -2.18727,-2.2270424 -5.32899,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89153,0.9942153 2.34635,0.9544468 4.0564,2.783803 1.82936,1.7895876 2.74404,4.0563986 0.91468,2.2668112 0.91468,4.8915392 0,5.249457 -3.69849,8.90817 -3.65871,3.618944 -8.9877,3.618944 -5.36876,0 -8.94794,-3.579176 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289939 3.65872,-9.027475 3.65871,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8084\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"translate(36,58.999997)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"M 288,182 38,182\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 160,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 160,180 102.14286,75.714283\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 160,180 50,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 159.42857,181.57142 142.14286,22.142854 160,19.999997 159.42857,181.57142 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotM05.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM05.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3631\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"-138.16008\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2817\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:19.54706955px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text3988\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,1.6421157,-1.25947)\\\">\\n      <path\\n         d=\\\"m -2.0231386,36.428781 21.4352826,0 0,6.522053 -21.4352826,0 0,-6.522053 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8064\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 32.217638,2.6254595 31.53651,0 0,6.7606643 -24.179317,0 0,14.5553132 q 1.749819,-0.59653 3.499638,-0.87491 1.749819,-0.318149 3.499638,-0.318149 9.942154,0 15.748371,5.4483 5.806218,5.4483 5.806218,14.754156 0,9.584236 -5.965292,14.91323 -5.965292,5.289226 -16.822124,5.289226 -3.73825,0 -7.635574,-0.636298 -3.857555,-0.636298 -7.993491,-1.908893 l 0,-8.073029 q 3.579175,1.948662 7.396962,2.903109 3.817787,0.954446 8.073029,0.954446 6.87997,0 10.8966,-3.618943 4.01663,-3.618944 4.01663,-9.822848 0,-6.203904 -4.01663,-9.822848 -4.01663,-3.618944 -10.8966,-3.618944 -3.221258,0 -6.442516,0.715836 -3.181489,0.715835 -6.522052,2.227042 l 0,-29.8264605 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8066\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 95.648579,6.6818581 q -3.181489,0 -5.368763,2.2270424 -2.187274,2.1872735 -2.187274,5.3687625 0,3.141721 2.187274,5.328995 2.187274,2.147505 5.368763,2.147505 3.181489,0 5.368761,-2.147505 2.18728,-2.187274 2.18728,-5.328995 0,-3.14172 -2.22705,-5.3687625 -2.187271,-2.2270424 -5.328991,-2.2270424 z m 0,-5.1301512 q 2.545191,0 4.891541,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82935,1.7895877 2.74403,4.0563986 0.91468,2.2668112 0.91468,4.8915392 0,5.249457 -3.69848,8.90817 -3.65871,3.618944 -8.987709,3.618944 -5.368762,0 -8.947938,-3.579176 -3.579175,-3.579175 -3.579175,-8.947938 0,-5.3289939 3.658713,-9.027475 3.658712,-3.6984811 8.947938,-3.6984811 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8068\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"matrix(-1,0,0,1,287,58.999997)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"m 35,182 250,0\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 163,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180 220.85714,75.714283\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180 273,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163.57143,181.57142 180.85714,22.142854 163,19.999997 163.57143,181.57142 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotP15.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM15.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3631\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3653\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"108.98279\\\"\\n     inkscape:cy=\\\"152.56698\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     showguides=\\\"false\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2849\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"translate(36,59)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"M 288,182 38,182\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 160,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 160,180 102.14286,75.714286\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 160,180 50,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 159.42857,181.57142 120.71429,24.285714 160,20 159.42857,181.57142 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <g\\n       id=\\\"g8177\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,64.049971,-1.0275659)\\\">\\n      <path\\n         d=\\\"m 157.48975,14.472329 0,15.230469 15.23046,0 0,4.648437 -15.23046,0 0,15.230469 -4.59375,0 0,-15.230469 -15.23047,0 0,-4.648437 15.23047,0 0,-15.230469 4.59375,0 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:56px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8087\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 188.75504,54.953622 13.12364,0 0,-45.2964508 -14.27693,2.8633398 0,-7.3174245 14.19739,-2.8633402 8.03326,0 0,52.6138757 13.12364,0 0,6.760665 -34.201,0 0,-6.760665 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8089\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 239.30095,2.3397463 31.53651,0 0,6.7606643 -24.17932,0 0,14.5553124 q 1.74982,-0.596529 3.49964,-0.874909 1.74982,-0.318149 3.49964,-0.318149 9.94215,0 15.74837,5.4483 5.80622,5.4483 5.80622,14.754156 0,9.584236 -5.9653,14.91323 -5.96529,5.289226 -16.82212,5.289226 -3.73825,0 -7.63557,-0.636298 -3.85756,-0.636298 -7.99349,-1.908894 l 0,-8.073028 q 3.57917,1.948662 7.39696,2.903109 3.81779,0.954446 8.07303,0.954446 6.87997,0 10.8966,-3.618944 4.01663,-3.618943 4.01663,-9.822847 0,-6.203904 -4.01663,-9.822848 -4.01663,-3.618944 -10.8966,-3.618944 -3.22126,0 -6.44252,0.715835 -3.18149,0.715835 -6.52205,2.227043 l 0,-29.8264607 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8091\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 302.73189,6.3961449 q -3.18149,0 -5.36876,2.2270424 -2.18728,2.1872737 -2.18728,5.3687627 0,3.141721 2.18728,5.328994 2.18727,2.147506 5.36876,2.147506 3.18149,0 5.36876,-2.147506 2.18728,-2.187273 2.18728,-5.328994 0,-3.14172 -2.22704,-5.3687627 -2.18728,-2.2270424 -5.329,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89154,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82936,1.7895877 2.74403,4.0563986 0.91468,2.2668114 0.91468,4.8915394 0,5.249457 -3.69848,8.90817 -3.65871,3.618944 -8.98771,3.618944 -5.36876,0 -8.94793,-3.579176 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289941 3.65871,-9.0274752 3.65872,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8093\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotM15.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM15.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3631\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3653\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"-133.16007\\\"\\n     inkscape:cy=\\\"148.99555\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2849\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"matrix(-1,0,0,1,287,59)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"m 35,182 250,0\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 163,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180 220.85714,75.714286\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180 273,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163.57143,181.57142 202.28571,24.285714 163,20 l 0.57143,161.57142 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:19.54706955px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text3988\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,1.6421157,-1.25947)\\\">\\n      <path\\n         d=\\\"m -2.0231386,36.428781 21.4352826,0 0,6.522053 -21.4352826,0 0,-6.522053 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8071\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 33.530002,55.239336 13.123642,0 0,-45.2964516 -14.276932,2.8633406 0,-7.3174253 14.197395,-2.8633402 8.03326,0 0,52.6138765 13.123643,0 0,6.760664 -34.201008,0 0,-6.760664 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8073\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 84.075912,2.6254595 31.536508,0 0,6.7606643 -24.179314,0 0,14.5553132 q 1.749819,-0.59653 3.499638,-0.87491 1.749819,-0.318149 3.499638,-0.318149 9.942158,0 15.748368,5.4483 5.80622,5.4483 5.80622,14.754156 0,9.584236 -5.96529,14.91323 -5.96529,5.289226 -16.822125,5.289226 -3.73825,0 -7.635574,-0.636298 -3.857556,-0.636298 -7.993492,-1.908893 l 0,-8.073029 q 3.579176,1.948662 7.396963,2.903109 3.817786,0.954446 8.073028,0.954446 6.87997,0 10.8966,-3.618943 4.01663,-3.618944 4.01663,-9.822848 0,-6.203904 -4.01663,-9.822848 -4.01663,-3.618944 -10.8966,-3.618944 -3.221258,0 -6.442515,0.715836 -3.181489,0.715835 -6.522053,2.227042 l 0,-29.8264605 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8075\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 147.50686,6.6818581 q -3.18149,0 -5.36877,2.2270424 -2.18727,2.1872735 -2.18727,5.3687625 0,3.141721 2.18727,5.328995 2.18728,2.147505 5.36877,2.147505 3.18148,0 5.36876,-2.147505 2.18727,-2.187274 2.18727,-5.328995 0,-3.14172 -2.22704,-5.3687625 -2.18727,-2.2270424 -5.32899,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89153,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82936,1.7895877 2.74404,4.0563986 0.91468,2.2668112 0.91468,4.8915392 0,5.249457 -3.69849,8.90817 -3.65871,3.618944 -8.9877,3.618944 -5.36877,0 -8.94794,-3.579176 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289939 3.65872,-9.027475 3.65871,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8077\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotP30.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM30.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3603\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"12.554216\\\"\\n     inkscape:cy=\\\"162.54324\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2817\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"translate(36,59)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:3,9;stroke-dashoffset:0\\\"\\n       d=\\\"M 288,182 38,182\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 160,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 160,180 50,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 160,180.71428 78.571427,33.571428 160,16 l 0,164.71428 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <g\\n       id=\\\"g8183\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,63.136667,-0.79565869)\\\">\\n      <path\\n         d=\\\"m 158.61496,14.226381 0,15.230469 15.23047,0 0,4.648437 -15.23047,0 0,15.230469 -4.59375,0 0,-15.230469 -15.23047,0 0,-4.648437 15.23047,0 0,-15.230469 4.59375,0 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:56px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8096\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 212.82674,29.414836 q 5.76645,1.232827 8.98771,5.130151 3.26102,3.897324 3.26102,9.624004 0,8.788864 -6.04483,13.600866 -6.04483,4.812003 -17.18004,4.812003 -3.73825,0 -7.71511,-0.755604 -3.93709,-0.715835 -8.15256,-2.187274 l 0,-7.75488 q 3.34056,1.948663 7.31742,2.942878 3.97686,0.994215 8.31164,0.994215 7.55604,0 11.49313,-2.982646 3.97686,-2.982646 3.97686,-8.669558 0,-5.249457 -3.69848,-8.192334 -3.65871,-2.982646 -10.22053,-2.982646 l -6.91974,0 0,-6.60159 7.23789,0 q 5.92552,0 9.06724,-2.346348 3.14172,-2.386117 3.14172,-6.840202 0,-4.57339 -3.26103,-6.999276 -3.22125,-2.4656539 -9.26608,-2.4656539 -3.3008,0 -7.07882,0.715835 -3.77801,0.7158351 -8.31164,2.2270419 l 0,-7.15835 q 4.57339,-1.2725957 8.55026,-1.9088935 4.01663,-0.6362978 7.55603,-0.6362978 9.14678,0 14.47578,4.1757045 5.32899,4.1359358 5.32899,11.2147488 0,4.931308 -2.82357,8.351409 -2.82357,3.380332 -8.03326,4.692697 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8098\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 257.52667,7.3432549 q -6.20391,0 -9.34563,6.1243661 -3.10195,6.084598 -3.10195,18.333331 0,12.208965 3.10195,18.333331 3.14172,6.084598 9.34563,6.084598 6.24367,0 9.34562,-6.084598 3.14172,-6.124366 3.14172,-18.333331 0,-12.248733 -3.14172,-18.333331 -3.10195,-6.1243661 -9.34562,-6.1243661 z m 0,-6.3629782 q 9.98192,0 15.23138,7.9139542 5.28922,7.8741851 5.28922,22.9067211 0,14.992768 -5.28922,22.906722 -5.24946,7.874186 -15.23138,7.874186 -9.98193,0 -15.27115,-7.874186 -5.24946,-7.913954 -5.24946,-22.906722 0,-15.032536 5.24946,-22.9067211 5.28922,-7.9139542 15.27115,-7.9139542 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8100\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 303.85711,6.1104279 q -3.18149,0 -5.36877,2.2270424 -2.18727,2.1872737 -2.18727,5.3687627 0,3.141721 2.18727,5.328994 2.18728,2.147506 5.36877,2.147506 3.18148,0 5.36876,-2.147506 2.18727,-2.187273 2.18727,-5.328994 0,-3.14172 -2.22704,-5.3687627 -2.18727,-2.2270424 -5.32899,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89153,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82936,1.7895876 2.74404,4.0563986 0.91468,2.2668114 0.91468,4.8915394 0,5.249457 -3.69849,8.90817 -3.65871,3.618944 -8.9877,3.618944 -5.36876,0 -8.94794,-3.579176 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289941 3.65872,-9.0274752 3.65871,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8102\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotM30.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM30.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3603\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"152.55422\\\"\\n     inkscape:cy=\\\"163.97182\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2817\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"matrix(-1,0,0,1,287,59)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"m 35,182 250,0\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 163,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180 273,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180.71428 244.42857,33.571428 163,16 l 0,164.71428 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:19.54706955px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text3988\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,1.6421157,-1.25947)\\\">\\n      <path\\n         d=\\\"m -2.0231386,36.428781 21.4352826,0 0,6.522053 -21.4352826,0 0,-6.522053 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8048\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 56.476492,29.986266 q 5.766449,1.232827 8.987707,5.130151 3.261026,3.897324 3.261026,9.624005 0,8.788863 -6.044829,13.600866 -6.04483,4.812002 -17.180041,4.812002 -3.73825,0 -7.715112,-0.755604 -3.937092,-0.715835 -8.152565,-2.187274 l 0,-7.754879 q 3.340563,1.948662 7.317425,2.942877 3.976861,0.994215 8.31164,0.994215 7.556037,0 11.493129,-2.982646 3.976862,-2.982646 3.976862,-8.669557 0,-5.249457 -3.698481,-8.192335 -3.658713,-2.982646 -10.220534,-2.982646 l -6.919739,0 0,-6.60159 7.237888,0 q 5.925523,0 9.067244,-2.346348 3.14172,-2.386117 3.14172,-6.840202 0,-4.57339 -3.261026,-6.999276 -3.221258,-2.4656537 -9.266087,-2.4656537 -3.300795,0 -7.078813,0.715835 -3.778019,0.7158351 -8.311641,2.2270427 l 0,-7.1583508 q 4.573391,-1.2725956 8.550252,-1.9088935 4.01663,-0.6362978 7.556037,-0.6362978 9.146781,0 14.475775,4.1757045 5.328995,4.1359358 5.328995,11.2147486 0,4.931309 -2.823572,8.351409 -2.823572,3.380333 -8.03326,4.692697 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8050\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 101.17642,7.9146851 q -6.203908,0 -9.345628,6.1243669 -3.101952,6.084598 -3.101952,18.333331 0,12.208964 3.101952,18.333331 3.14172,6.084598 9.345628,6.084598 6.24367,0 9.34562,-6.084598 3.14172,-6.124367 3.14172,-18.333331 0,-12.248733 -3.14172,-18.333331 -3.10195,-6.1243669 -9.34562,-6.1243669 z m 0,-6.3629782 q 9.98192,0 15.23138,7.9139542 5.28922,7.8741859 5.28922,22.9067219 0,14.992767 -5.28922,22.906721 -5.24946,7.874186 -15.23138,7.874186 -9.981926,0 -15.271152,-7.874186 -5.249457,-7.913954 -5.249457,-22.906721 0,-15.032536 5.249457,-22.9067219 5.289226,-7.9139542 15.271152,-7.9139542 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8052\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 147.50686,6.6818581 q -3.18149,0 -5.36877,2.2270424 -2.18727,2.1872735 -2.18727,5.3687625 0,3.141721 2.18727,5.328995 2.18728,2.147505 5.36877,2.147505 3.18148,0 5.36876,-2.147505 2.18727,-2.187274 2.18727,-5.328995 0,-3.14172 -2.22704,-5.3687625 -2.18727,-2.2270424 -5.32899,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89153,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82936,1.7895877 2.74404,4.0563986 0.91468,2.2668112 0.91468,4.8915392 0,5.249457 -3.69849,8.90817 -3.65871,3.618944 -8.9877,3.618944 -5.36877,0 -8.94794,-3.579176 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289939 3.65872,-9.027475 3.65871,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8054\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MoveHFlip.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveDown.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"204.69707\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;fill-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 10,160 L 100,70 L 100,130 L 220,130 L 220,70 L 310,160 L 220,250 L 220,190 L 100,190 L 100,250 L 10,160 z \\\"\\n       id=\\\"path3274\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MoveVFlip.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveDown.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"204.69707\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160,10 L 250,100 L 190,100 L 190,220 L 250,220 L 160,310 L 70,220 L 130,220 L 130,100 L 70,100 L 160,10 z \\\"\\n       id=\\\"path3274\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MoveShrink.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3204\\\"\\n       id=\\\"radialGradient3210\\\"\\n       cx=\\\"97.784004\\\"\\n       cy=\\\"119.01254\\\"\\n       fx=\\\"97.784004\\\"\\n       fy=\\\"119.01254\\\"\\n       r=\\\"150.23499\\\"\\n       gradientTransform=\\\"matrix(1.0943065,0.3182308,-0.3235039,0.6950983,44.992262,22.609241)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3204\\\"\\n       id=\\\"radialGradient3222\\\"\\n       cx=\\\"156.07143\\\"\\n       cy=\\\"300.35715\\\"\\n       fx=\\\"156.07143\\\"\\n       fy=\\\"300.35715\\\"\\n       r=\\\"40.35714\\\"\\n       gradientTransform=\\\"matrix(1.0080384,0,0,0.4019374,14.926879,158.58684)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"204.69707\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:url(#radialGradient3210);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:8.96230125;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 169.01275,265.3672 C 93.306764,264.91973 184.09594,254.28496 171.89287,196.49891 C 136.81751,116.90916 48.312987,78.904811 130.8513,57.624012 C 173.1434,48.101242 249.69276,67.159794 188.4535,112.26331 C 168.91776,123.45431 278.69027,247.58954 169.01275,265.3672 z \\\"\\n       id=\\\"path3200\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\"\\n       inkscape:transform-center-x=\\\"55.442114\\\" />\\n    <path\\n       style=\\\"fill:url(#radialGradient3222);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:8.42706966;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 166.08095,266.83675 C 151.36577,272.95804 139.47952,280.37536 136.31052,291.78647 L 208.19524,290.28949 C 196.71794,282.11994 186.82775,273.73226 166.08095,266.83675 z \\\"\\n       id=\\\"path3202\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 110,226 L 83.571429,243.85714\\\"\\n       id=\\\"path3224\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 90,176 L 57.857143,183.14286\\\"\\n       id=\\\"path3226\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 80,116 L 50,116\\\"\\n       id=\\\"path3228\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 80,56 L 50,36\\\"\\n       id=\\\"path3230\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 230,56 L 260,46\\\"\\n       id=\\\"path3232\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 230,116 L 265.71429,116\\\"\\n       id=\\\"path3234\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 240,166 L 275,171\\\"\\n       id=\\\"path3236\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 240,226 L 270,246\\\"\\n       id=\\\"path3238\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 120,36 L 110,6\\\"\\n       id=\\\"path3240\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 180,36 L 190,6\\\"\\n       id=\\\"path3242\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MoveGrow.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3204\\\"\\n       id=\\\"radialGradient3210\\\"\\n       cx=\\\"97.784004\\\"\\n       cy=\\\"119.01254\\\"\\n       fx=\\\"97.784004\\\"\\n       fy=\\\"119.01254\\\"\\n       r=\\\"150.23499\\\"\\n       gradientTransform=\\\"matrix(1.0855802,0.3993744,-0.3209242,0.8723369,29.825633,-21.800103)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3204\\\"\\n       id=\\\"radialGradient3222\\\"\\n       cx=\\\"156.07143\\\"\\n       cy=\\\"300.35715\\\"\\n       fx=\\\"156.07143\\\"\\n       fy=\\\"300.35715\\\"\\n       r=\\\"40.35714\\\"\\n       gradientTransform=\\\"matrix(1,0,0,0.5044248,0,148.84954)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"204.69707\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:url(#radialGradient3210);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 152.85714,282.85714 C 77.754858,282.29557 25.677197,216.09197 13.571429,143.57143 C 7.347206,39.401886 96.731177,13.499887 162.85714,13.571429 C 250.16174,20.445262 307.17949,64.110107 303.57143,149.28571 C 297.04861,249.7588 215.23148,282.68932 152.85714,282.85714 z \\\"\\n       id=\\\"path3200\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\"\\n       inkscape:transform-center-x=\\\"55\\\" />\\n    <path\\n       style=\\\"fill:url(#radialGradient3222);fill-rule:evenodd;stroke:#000000;stroke-width:9.40279675;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1.0\\\"\\n       d=\\\"M 149.94872,284.7014 C 135.35088,292.38351 123.55941,301.69213 120.41569,316.01289 L 191.72717,314.1342 C 180.3414,303.88155 170.53007,293.35515 149.94872,284.7014 z \\\"\\n       id=\\\"path3202\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","import { Molecule } from '../mol/Molecule';\nimport { PolymerBlock } from '../mol/PolymerBlock';\nimport { Vec } from '../util/Vec';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nexport class ContextSketch {\n    constructor(state, sketcher, proxyClip) {\n        this.state = state;\n        this.sketcher = sketcher;\n        this.proxyClip = proxyClip;\n    }\n    populate() {\n        const { state, sketcher } = this;\n        let menu = [];\n        if (sketcher.canUndo() || sketcher.canRedo()) {\n            if (sketcher.canUndo())\n                menu.push({ label: 'Undo', accelerator: 'CmdOrCtrl+Z', click: () => sketcher.performUndo() });\n            if (sketcher.canRedo())\n                menu.push({ label: 'Redo', accelerator: 'CmdOrCtrl+Shift+Z', click: () => sketcher.performRedo() });\n            menu.push(null);\n        }\n        if (state.currentAtom > 0 || state.currentBond > 0)\n            menu.push({ label: 'Edit', 'accelerator': 'Enter', click: () => sketcher.editCurrent() });\n        this.maybeAppend(menu, 'Delete', 'D', ActivityType.Delete);\n        this.maybeAppend(menu, 'Cut', 'CmdOrCtrl+X', ActivityType.Cut);\n        this.maybeAppend(menu, 'Copy', 'CmdOrCtrl+C', ActivityType.Copy);\n        if (this.proxyClip.canAlwaysGet())\n            menu.push({ label: 'Paste', 'accelerator': 'CmdOrCtrl+V', click: () => sketcher.performPaste() });\n        this.maybeAppend(menu, 'Charge +', 'Shift+=', ActivityType.Charge, { delta: 1 });\n        this.maybeAppend(menu, 'Charge -', 'Shift+-', ActivityType.Charge, { delta: -1 });\n        this.maybeAppend(menu, 'Bond Order 0', '0', ActivityType.BondOrder, { order: 0 });\n        this.maybeAppend(menu, 'Bond Order 1', '1', ActivityType.BondOrder, { order: 1 });\n        this.maybeAppend(menu, 'Bond Order 2', '2', ActivityType.BondOrder, { order: 2 });\n        this.maybeAppend(menu, 'Bond Order 3', '3', ActivityType.BondOrder, { order: 3 });\n        this.maybeAppend(menu, 'Bond Order 4', null, ActivityType.BondOrder, { order: 4 });\n        this.maybeAppend(menu, 'Unknown Stereochemistry', '4', ActivityType.BondType, { type: Molecule.BONDTYPE_UNKNOWN });\n        this.maybeAppend(menu, 'Bond Wedge Up', '5', ActivityType.BondType, { type: Molecule.BONDTYPE_INCLINED });\n        this.maybeAppend(menu, 'Bond Wedge Down', '6', ActivityType.BondType, { type: Molecule.BONDTYPE_DECLINED });\n        this.maybeAppend(menu, 'Switch Geometry', null, ActivityType.BondSwitch);\n        this.maybeAppend(menu, 'Add Two Bonds', 'Shift+D', ActivityType.BondAddTwo);\n        this.maybeAppend(menu, 'Insert Atom', null, ActivityType.BondInsert);\n        this.maybeAppend(menu, 'Join Atoms', null, ActivityType.Join);\n        this.maybeAppend(menu, 'Abbreviate Group', '/', ActivityType.AbbrevGroup);\n        this.maybeAppend(menu, 'Abbreviate Formula', '\\\\', ActivityType.AbbrevFormula);\n        this.maybeAppend(menu, 'Clear Abbreviation', 'Shift+\\\\', ActivityType.AbbrevClear);\n        this.maybeAppend(menu, 'Expand Abbreviation', 'Shift+/', ActivityType.AbbrevExpand);\n        let rotateSub = this.rotateSubMenu();\n        if (Vec.notBlank(rotateSub))\n            menu.push({ label: 'Rotate', subMenu: rotateSub });\n        let querySub = this.querySubMenu();\n        if (Vec.notBlank(querySub))\n            menu.push({ label: 'Query', subMenu: querySub });\n        let poly = new PolymerBlock(state.mol);\n        for (let units of poly.getUnits()) {\n            let a1 = state.currentAtom, a2 = 0;\n            if (state.currentBond > 0)\n                [a1, a2] = state.mol.bondFromTo(state.currentBond);\n            if (units.atoms.includes(a1) || units.atoms.includes(a2)) {\n                let label = 'Polymer Block (' + units.atoms.length + ' atom' + (units.atoms.length == 1 ? '' : 's') + ')';\n                menu.push({ label: label, click: () => sketcher.performPolymerBlock(units.atoms) });\n            }\n        }\n        if (menu.length > 0)\n            menu.push(null);\n        menu.push({ label: 'Scale to Fit', click: () => sketcher.autoScale() });\n        menu.push({ label: 'Zoom In', 'accelerator': '=', click: () => sketcher.zoom(1.25) });\n        menu.push({ label: 'Zoom Out', 'accelerator': '-', click: () => sketcher.zoom(0.8) });\n        return menu;\n    }\n    maybeAppend(menu, title, accelerator, activ, param = null) {\n        let molact = new MoleculeActivity(this.state, activ, param);\n        molact.execute();\n        if (!molact.output.mol && !molact.toClipboard)\n            return;\n        menu.push({ label: title, 'accelerator': accelerator, click: () => {\n                this.sketcher.setState(molact.output, true);\n                if (molact.toClipboard)\n                    this.proxyClip.setString(molact.toClipboard);\n            } });\n    }\n    rotateSubMenu() {\n        let menu = [];\n        this.maybeAppend(menu, 'Bond', null, ActivityType.BondRotate);\n        this.maybeAppend(menu, '+1 \\u{00B0}', null, ActivityType.Rotate, { theta: 1 });\n        this.maybeAppend(menu, '-1 \\u{00B0}', null, ActivityType.Rotate, { theta: -1 });\n        this.maybeAppend(menu, '+5 \\u{00B0}', null, ActivityType.Rotate, { theta: 5 });\n        this.maybeAppend(menu, '-5 \\u{00B0}', null, ActivityType.Rotate, { theta: -5 });\n        this.maybeAppend(menu, '+15 \\u{00B0}', null, ActivityType.Rotate, { theta: 15 });\n        this.maybeAppend(menu, '-15 \\u{00B0}', null, ActivityType.Rotate, { theta: -15 });\n        this.maybeAppend(menu, '+30 \\u{00B0}', 'Shift+[', ActivityType.Rotate, { theta: 30 });\n        this.maybeAppend(menu, '-30 \\u{00B0}', 'Shift+]', ActivityType.Rotate, { theta: -30 });\n        this.maybeAppend(menu, 'H-Flip', 'Shift+,', ActivityType.Flip, { axis: 'hor' });\n        this.maybeAppend(menu, 'V-Flip', 'Shift+.', ActivityType.Flip, { axis: 'ver' });\n        this.maybeAppend(menu, 'Align', null, ActivityType.AlignRegular);\n        return menu;\n    }\n    querySubMenu() {\n        let menu = [];\n        this.maybeAppend(menu, 'Clear', null, ActivityType.QueryClear);\n        this.maybeAppend(menu, 'Copy', null, ActivityType.QueryCopy);\n        return menu;\n    }\n}\n//# sourceMappingURL=ContextSketch.js.map","import { Chemistry } from '../mol/Chemistry';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { MetaMolecule } from '../mol/MetaMolecule';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock, POLYMERBLOCK_SPECIAL_UNCAPPED, PolymerBlockConnectivity } from '../mol/PolymerBlock';\nimport { QueryTypeBond, QueryUtil } from '../mol/QueryUtil';\nimport { SketchUtil } from '../mol/SketchUtil';\nimport { Stereochemistry } from '../mol/Stereochemistry';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { FontData } from '../gfx/FontData';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nimport { GeomUtil } from '../util/Geom';\nimport { Theme } from '../util/Theme';\nimport { colourCanvas, drawLine, fontSansSerif, invZ, norm2_xy, norm_xy, pixelDensity, setBoundaryPixels, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport var DraggingTool;\n(function (DraggingTool) {\n    DraggingTool[DraggingTool[\"None\"] = 0] = \"None\";\n    DraggingTool[DraggingTool[\"Press\"] = 1] = \"Press\";\n    DraggingTool[DraggingTool[\"Lasso\"] = 2] = \"Lasso\";\n    DraggingTool[DraggingTool[\"Pan\"] = 3] = \"Pan\";\n    DraggingTool[DraggingTool[\"Zoom\"] = 4] = \"Zoom\";\n    DraggingTool[DraggingTool[\"Rotate\"] = 5] = \"Rotate\";\n    DraggingTool[DraggingTool[\"Move\"] = 6] = \"Move\";\n    DraggingTool[DraggingTool[\"Erasor\"] = 7] = \"Erasor\";\n    DraggingTool[DraggingTool[\"Atom\"] = 8] = \"Atom\";\n    DraggingTool[DraggingTool[\"Bond\"] = 9] = \"Bond\";\n    DraggingTool[DraggingTool[\"Charge\"] = 10] = \"Charge\";\n    DraggingTool[DraggingTool[\"Ring\"] = 11] = \"Ring\";\n})(DraggingTool || (DraggingTool = {}));\nexport var DrawCanvasDecoration;\n(function (DrawCanvasDecoration) {\n    DrawCanvasDecoration[DrawCanvasDecoration[\"None\"] = 0] = \"None\";\n    DrawCanvasDecoration[DrawCanvasDecoration[\"Stereochemistry\"] = 1] = \"Stereochemistry\";\n    DrawCanvasDecoration[DrawCanvasDecoration[\"MappingNumber\"] = 2] = \"MappingNumber\";\n    DrawCanvasDecoration[DrawCanvasDecoration[\"AtomIndex\"] = 3] = \"AtomIndex\";\n})(DrawCanvasDecoration || (DrawCanvasDecoration = {}));\nexport class DrawCanvas extends Widget {\n    constructor() {\n        super();\n        this.mol = null;\n        this.policy = null;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.pointScale = 1;\n        this.viewOpt = {\n            decoration: DrawCanvasDecoration.Stereochemistry,\n            showOxState: true,\n            showQuery: true,\n            showArtifacts: true,\n        };\n        this.width = 0;\n        this.height = 0;\n        this.border = 0x808080;\n        this.borderRadius = 4;\n        this.background = 0xF8F8F8;\n        this.canvasUnder = null;\n        this.canvasMolecule = null;\n        this.canvasOver = null;\n        this.divMessage = null;\n        this.layout = null;\n        this.metavec = null;\n        this.stereo = null;\n        this.guidelines = null;\n        this.filthy = false;\n        this.dragType = DraggingTool.None;\n        this.currentAtom = 0;\n        this.currentBond = 0;\n        this.hoverAtom = 0;\n        this.hoverBond = 0;\n        this.selectedMask = null;\n        this.opAtom = 0;\n        this.opBond = 0;\n        this.opBudged = false;\n        this.opShift = false;\n        this.opCtrl = false;\n        this.opAlt = false;\n        this.lassoX = null;\n        this.lassoY = null;\n        this.lassoMask = null;\n        this.clickX = 0;\n        this.clickY = 0;\n        this.mouseX = 0;\n        this.mouseY = 0;\n        this.dragGuides = null;\n        this.templatePerms = null;\n        this.currentPerm = 0;\n        this.fusionBank = null;\n        this.cursorWatermark = 0;\n        this.cursorDX = 0;\n        this.cursorDY = 0;\n        this.toolAtomSymbol = '';\n        this.toolBondOrder = 0;\n        this.toolBondType = 0;\n        this.toolChargeDelta = 0;\n        this.toolRingArom = false;\n        this.toolRingFreeform = false;\n        this.toolRotateIncr = 0;\n        this.redrawCacheKey = '';\n        this.abbrevPolicy = RenderPolicy.defaultBlackOnWhite();\n        this.abbrevPolicy.data.foreground = 0xD0D0D0;\n        this.abbrevPolicy.data.atomCols = Vec.numberArray(0xD0D0D0, this.abbrevPolicy.data.atomCols.length);\n    }\n    render(parent) {\n        if (!this.width || !this.height)\n            throw 'Sketcher.render called without width and height';\n        super.render(parent);\n        this.container = dom('<div/>').appendTo(this.contentDOM);\n        this.container.css({ 'position': 'relative', 'width': this.width + 'px', 'height': this.height + 'px' });\n        this.container.css({ 'background-color': colourCanvas(this.background) });\n        if (this.border != MetaVector.NOCOLOUR) {\n            this.container.css({ 'border': '1px solid ' + colourCanvas(this.border) });\n            this.container.css({ 'border-radius': this.borderRadius + 'px' });\n        }\n        this.container.css({ 'outline': 'none' });\n        this.container.attr({ 'tabindex': '0' });\n        let canvasStyle = { 'position': 'absolute', 'left': '0', 'top': '0', 'width': `${this.width}px`, 'height': `${this.height}`, 'pointer-events': 'none' };\n        this.divInfo = dom('<div/>').appendTo(this.container).css({ 'position': 'absolute', 'left': '0', 'top': '0', 'pointer-events': 'none' });\n        this.canvasUnder = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n        this.canvasMolecule = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n        this.canvasOver = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n        this.divMessage = dom('<div/>').appendTo(this.container).css(canvasStyle);\n        this.divMessage.css({ 'text-align': 'center', 'vertical-align': 'middle', 'font-weight': 'bold', 'font-size': '120%' });\n    }\n    getState() {\n        let state = {\n            mol: this.mol.clone(),\n            currentAtom: this.currentAtom,\n            currentBond: this.currentBond,\n            selectedMask: this.selectedMask == null ? null : this.selectedMask.slice(0)\n        };\n        return state;\n    }\n    getSelected(atom) {\n        if (this.selectedMask == null || atom > this.selectedMask.length)\n            return false;\n        return this.selectedMask[atom - 1];\n    }\n    getLassoed(atom) {\n        if (this.lassoMask == null || atom > this.lassoMask.length)\n            return false;\n        return this.lassoMask[atom - 1];\n    }\n    scale() { return this.pointScale; }\n    angToX(ax) {\n        return ax * this.pointScale + this.offsetX;\n    }\n    angToY(ay) {\n        return ay * -this.pointScale + this.offsetY;\n    }\n    xToAng(px) {\n        return (px - this.offsetX) / this.pointScale;\n    }\n    yToAng(py) {\n        return (py - this.offsetY) / -this.pointScale;\n    }\n    scaleToAng(scale) { return scale / this.pointScale; }\n    angToScale(ang) { return ang * this.pointScale; }\n    yIsUp() { return false; }\n    measureText(str, fontSize) { return FontData.main.measureText(str, fontSize); }\n    delayedRedraw() {\n        if (this.canvasMolecule == null)\n            return;\n        this.filthy = true;\n        window.setTimeout(() => { if (this.filthy)\n            this.redraw(); }, 10);\n    }\n    layoutMolecule() {\n        let mol = this.mol;\n        if (this.hoverAtom > 0 && MolUtil.hasAbbrev(mol, this.hoverAtom)) {\n            mol = mol.clone();\n            mol.setAtomElement(this.hoverAtom, '');\n            mol.setAtomCharge(this.hoverAtom, 0);\n            mol.setAtomUnpaired(this.hoverAtom, 0);\n            MolUtil.clearAbbrev(mol, this.hoverAtom);\n        }\n        let effects = this.sketchEffects(mol);\n        this.layout = new ArrangeMolecule(mol, this, this.policy, effects);\n        this.layout.setWantArtifacts(this.viewOpt.showArtifacts);\n        this.layout.arrange();\n    }\n    redrawMetaVector() {\n        this.metavec = new MetaVector();\n        new DrawMolecule(this.layout, this.metavec).draw();\n        if (this.hoverAtom > 0 && MolUtil.hasAbbrev(this.mol, this.hoverAtom)) {\n            let abbrevMol = MolUtil.getAbbrev(this.mol, this.hoverAtom);\n            this.orientAbbreviation(this.hoverAtom, abbrevMol);\n            this.abbrevPolicy.data.pointScale = this.policy.data.pointScale;\n            let layout = new ArrangeMolecule(abbrevMol, this, this.abbrevPolicy, new RenderEffects());\n            layout.arrange();\n            new DrawMolecule(layout, this.metavec).draw();\n        }\n    }\n    redraw() {\n        this.filthy = false;\n        this.redrawInfo();\n        this.redrawUnder();\n        this.redrawMolecule();\n        this.redrawOver();\n    }\n    redrawInfo() {\n        let cacheKey = JSON.stringify([this.width, this.height, this.mol.toString()]);\n        if (cacheKey == this.redrawCacheKey)\n            return;\n        this.redrawCacheKey = cacheKey;\n        this.divInfo.empty();\n        this.divInfo.css({ 'visibility': 'hidden', 'left': '0', 'top': '0' });\n        if (this.mol.numAtoms == 0)\n            return;\n        let divText = dom('<div/>').appendTo(this.divInfo);\n        divText.css({ 'display': 'inline-block', 'text-align': 'right', 'font-family': 'sans-serif', 'font-size': '80%', 'color': '#C0C0C0' });\n        let html = MolUtil.molecularFormula(this.mol, ['<sub>', '</sub>', '<sup>', '</sup>']);\n        let chg = 0;\n        for (let n = 1; n <= this.mol.numAtoms; n++)\n            chg += this.mol.atomCharge(n);\n        if (chg == -1)\n            html += '<sup>-</sup>';\n        else if (chg < -1)\n            html += `<sup>${chg}</sup>`;\n        else if (chg == 1)\n            html += '<sup>+</sup>';\n        else if (chg > 1)\n            html += `<sup>+${chg}</sup>`;\n        html += '<br>' + MolUtil.molecularWeight(this.mol).toFixed(2);\n        divText.setHTML(html);\n        setTimeout(() => {\n            let w = divText.width(), h = divText.height();\n            setBoundaryPixels(this.divInfo, this.width - w - 1, 1, w, h);\n            this.divInfo.css({ 'visibility': 'visible' });\n        }, 1);\n    }\n    redrawUnder() {\n        let HOVER_COL = 0xE0E0E0;\n        let CURRENT_COL = 0xA0A0A0, CURRENT_BORD = 0x808080;\n        let SELECT_COL = 0xC0C0C0;\n        let LASSO_COL = 0xD0D0D0;\n        let density = pixelDensity();\n        this.canvasUnder.elCanvas.width = this.width * density;\n        this.canvasUnder.elCanvas.height = this.height * density;\n        this.canvasUnder.css({ 'width': `${this.width}px`, 'height': `${this.height}px` });\n        let ctx = this.canvasUnder.elCanvas.getContext('2d');\n        ctx.save();\n        ctx.scale(density, density);\n        ctx.clearRect(0, 0, this.width, this.height);\n        if (this.hoverAtom > 0) {\n            let units = new PolymerBlock(this.mol).getUnits();\n            for (let unit of units)\n                if (unit.atoms.includes(this.hoverAtom))\n                    this.drawPolymerUnit(ctx, unit, units);\n            let sz = 0;\n            if (this.hoverAtom == this.currentAtom)\n                sz += 0.1;\n            if (this.getSelected(this.hoverAtom))\n                sz += 0.1;\n            if (this.currentBond > 0 && (this.mol.bondFrom(this.currentBond) == this.hoverAtom || this.mol.bondTo(this.currentBond) == this.hoverAtom))\n                sz += 0.1;\n            this.drawAtomShade(ctx, this.hoverAtom, HOVER_COL, -1, sz);\n        }\n        if (this.hoverBond > 0) {\n            let bfr = this.mol.bondFrom(this.hoverBond), bto = this.mol.bondTo(this.hoverBond);\n            let units = new PolymerBlock(this.mol).getUnits();\n            for (let unit of units)\n                if (unit.atoms.includes(bfr) && unit.atoms.includes(bto))\n                    this.drawPolymerUnit(ctx, unit, units);\n            let sz = 0;\n            if (this.hoverBond == this.currentBond)\n                sz += 0.1;\n            if (this.getSelected(bfr) && this.getSelected(bto))\n                sz += 0.1;\n            this.drawBondShade(ctx, this.hoverBond, HOVER_COL, -1, sz);\n        }\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let sz = n == this.currentBond ? 0.1 : 0;\n            let bfr = this.mol.bondFrom(n), bto = this.mol.bondTo(n);\n            let sfr = this.getSelected(bfr), sto = this.getSelected(bto), lfr = this.getLassoed(bfr), lto = this.getLassoed(bto);\n            if (sfr && sto)\n                this.drawBondShade(ctx, n, SELECT_COL, -1, sz);\n            else if ((sfr || lfr) && (sto || lto))\n                this.drawBondShade(ctx, n, LASSO_COL, -1, sz);\n        }\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let sz = this.currentAtom == n ? 0.1 : 0;\n            if (this.getSelected(n))\n                this.drawAtomShade(ctx, n, SELECT_COL, -1, sz);\n            else if (this.getLassoed(n))\n                this.drawAtomShade(ctx, n, LASSO_COL, -1, sz);\n        }\n        if (this.currentAtom > 0) {\n            this.drawAtomShade(ctx, this.currentAtom, CURRENT_COL, CURRENT_BORD, 0);\n        }\n        if (this.currentBond > 0) {\n            this.drawBondShade(ctx, this.currentBond, CURRENT_COL, CURRENT_BORD, 0);\n        }\n        if (this.dragType == DraggingTool.Move || (this.dragType == DraggingTool.Atom && this.opAtom > 0) || this.dragType == DraggingTool.Bond) {\n            if (this.dragGuides != null && this.dragGuides.length > 0) {\n                for (let g of this.dragGuides)\n                    for (let n = 0; n < g.x.length; n++) {\n                        let lw = this.policy.data.lineSize * this.pointScale;\n                        ctx.strokeStyle = '#C0C0C0';\n                        ctx.lineWidth = lw;\n                        drawLine(ctx, g.sourceX, g.sourceY, g.destX[n], g.destY[n]);\n                        ctx.beginPath();\n                        ctx.ellipse(g.destX[n], g.destY[n], 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n                        ctx.fillStyle = '#C0C0C0';\n                        ctx.fill();\n                    }\n            }\n        }\n        if (this.dragType == DraggingTool.Ring) {\n            let [ringX, ringY] = this.determineFauxRing();\n            let rsz = ringX == null ? 0 : ringX.length;\n            if (rsz > 0) {\n                let scale = this.pointScale;\n                let lw = this.policy.data.lineSize * scale;\n                ctx.strokeStyle = '#C0C0C0';\n                ctx.lineWidth = lw;\n                for (let n = 0; n < rsz; n++) {\n                    let nn = n < rsz - 1 ? n + 1 : 0;\n                    let x1 = this.angToX(ringX[n]), y1 = this.angToY(ringY[n]);\n                    let x2 = this.angToX(ringX[nn]), y2 = this.angToY(ringY[nn]);\n                    drawLine(ctx, x1, y1, x2, y2);\n                }\n                if (this.toolRingArom) {\n                    let cx = 0, cy = 0;\n                    for (let n = 0; n < rsz; n++) {\n                        cx += ringX[n];\n                        cy += ringY[n];\n                    }\n                    cx /= rsz;\n                    cy /= rsz;\n                    let rad = 0;\n                    for (let n = 0; n < rsz; n++)\n                        rad += norm_xy(ringX[n] - cx, ringY[n] - cy);\n                    rad = this.angToScale(rad * 0.5 / rsz);\n                    ctx.beginPath();\n                    ctx.ellipse(this.angToX(cx), this.angToY(cy), rad, rad, 0, 0, TWOPI, false);\n                    ctx.stroke();\n                }\n            }\n        }\n        ctx.restore();\n    }\n    redrawMolecule() {\n        let density = pixelDensity();\n        this.canvasMolecule.elCanvas.width = this.width * density;\n        this.canvasMolecule.elCanvas.height = this.height * density;\n        this.canvasMolecule.css({ 'width': `${this.width}px`, 'height': `${this.height}px` });\n        let ctx = this.canvasMolecule.elCanvas.getContext('2d');\n        ctx.save();\n        ctx.scale(density, density);\n        ctx.clearRect(0, 0, this.width, this.height);\n        if (this.metavec != null)\n            this.metavec.renderContext(ctx);\n        if (this.templatePerms != null) {\n            let perm = this.templatePerms[this.currentPerm];\n            if (perm.metavec != null)\n                perm.metavec.renderContext(ctx);\n        }\n        ctx.restore();\n    }\n    redrawOver() {\n        let density = pixelDensity();\n        this.canvasOver.elCanvas.width = this.width * density;\n        this.canvasOver.elCanvas.height = this.height * density;\n        this.canvasOver.css({ 'width': `${this.width}px`, 'height': `${this.height}px` });\n        let ctx = this.canvasOver.elCanvas.getContext('2d');\n        ctx.save();\n        ctx.scale(density, density);\n        ctx.clearRect(0, 0, this.width, this.height);\n        if ((this.dragType == DraggingTool.Lasso || this.dragType == DraggingTool.Erasor) && this.lassoX.length > 1) {\n            let erasing = this.dragType == DraggingTool.Erasor;\n            let path = new Path2D();\n            path.moveTo(this.lassoX[0], this.lassoY[0]);\n            for (let n = 1; n < this.lassoX.length; n++)\n                path.lineTo(this.lassoX[n], this.lassoY[n]);\n            path.closePath();\n            ctx.fillStyle = colourCanvas(erasing ? 0xD0FF0000 : 0xF0000000);\n            ctx.fill(path);\n            ctx.strokeStyle = erasing ? '#804040' : '#808080';\n            ctx.lineWidth = 0.5;\n            ctx.stroke(path);\n        }\n        if (this.dragType == DraggingTool.Rotate) {\n            let [x0, y0, theta, magnitude] = this.determineDragTheta();\n            let scale = this.pointScale;\n            let lw = this.policy.data.lineSize * scale;\n            ctx.strokeStyle = '#E0E0E0';\n            ctx.lineWidth = 0.5 * lw;\n            drawLine(ctx, x0, y0, x0 + magnitude, y0);\n            ctx.strokeStyle = '#808080';\n            ctx.lineWidth = lw;\n            drawLine(ctx, x0, y0, x0 + magnitude * Math.cos(theta), y0 + magnitude * Math.sin(theta));\n            ctx.beginPath();\n            ctx.ellipse(x0, y0, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n            ctx.fillStyle = '#808080';\n            ctx.fill();\n            for (let atom of this.subjectAtoms(true, false)) {\n                let ax = this.angToX(this.mol.atomX(atom)), ay = this.angToY(this.mol.atomY(atom));\n                let ang = Math.atan2(ay - y0, ax - x0), dist = norm_xy(ax - x0, ay - y0);\n                let nx = x0 + dist * Math.cos(ang + theta), ny = y0 + dist * Math.sin(ang + theta);\n                ctx.beginPath();\n                ctx.ellipse(nx, ny, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n                ctx.strokeStyle = 'black';\n                ctx.lineWidth = 0.5;\n                ctx.stroke();\n            }\n        }\n        if (this.dragType == DraggingTool.Move) {\n            let [dx, dy] = this.determineMoveDelta();\n            let scale = this.pointScale;\n            let lw = this.policy.data.lineSize * scale;\n            for (let atom of this.subjectAtoms(false, true)) {\n                let ax = this.angToX(this.mol.atomX(atom)), ay = this.angToY(this.mol.atomY(atom));\n                ctx.beginPath();\n                ctx.ellipse(ax + dx, ay + dy, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n                ctx.strokeStyle = 'black';\n                ctx.lineWidth = 0.5;\n                ctx.stroke();\n            }\n        }\n        if ((this.dragType == DraggingTool.Atom && this.opAtom > 0) || this.dragType == DraggingTool.Bond) {\n            let element = this.dragType == DraggingTool.Atom ? this.toolAtomSymbol : 'C';\n            let order = this.dragType == DraggingTool.Bond ? this.toolBondOrder : 1;\n            let type = this.dragType == DraggingTool.Bond ? this.toolBondType : Molecule.BONDTYPE_NORMAL;\n            this.drawOriginatingBond(ctx, element, order, type);\n        }\n        if (this.viewOpt.showQuery)\n            this.drawQueryFeatures(ctx);\n        ctx.restore();\n    }\n    subjectAtoms(allIfNone = false, useOpAtom = false) {\n        let atoms = [];\n        if (this.selectedMask != null) {\n            for (let n = 0; n < this.selectedMask.length; n++)\n                if (this.selectedMask[n])\n                    atoms.push(n + 1);\n            if (atoms.length > 0)\n                return atoms;\n        }\n        if (this.currentAtom > 0)\n            atoms.push(this.currentAtom);\n        else if (this.currentBond > 0) {\n            atoms.push(this.mol.bondFrom(this.currentBond));\n            atoms.push(this.mol.bondTo(this.currentBond));\n        }\n        if (useOpAtom && atoms.length == 0 && this.opAtom > 0)\n            atoms.push(this.opAtom);\n        if (allIfNone && atoms.length == 0) {\n            for (let n = 1; n <= this.mol.numAtoms; n++)\n                atoms.push(n);\n        }\n        return atoms;\n    }\n    updateLasso(x, y) {\n        if (this.dragType != DraggingTool.Lasso && this.dragType != DraggingTool.Erasor)\n            return;\n        if (x < 0 || y < 0 || x > this.width || y > this.height) {\n            this.dragType = DraggingTool.None;\n            this.lassoX = null;\n            this.lassoY = null;\n            this.lassoMask = null;\n            this.delayedRedraw();\n        }\n        let len = Vec.len(this.lassoX);\n        if (len > 0 && this.lassoX[len - 1] == x && this.lassoY[len - 1] == y)\n            return;\n        this.lassoX.push(x);\n        this.lassoY.push(y);\n        this.calculateLassoMask();\n        this.delayedRedraw();\n    }\n    calculateLassoMask() {\n        this.lassoMask = new Array(this.mol.numAtoms);\n        for (let n = 0; n < this.mol.numAtoms; n++)\n            this.lassoMask[n] = false;\n        for (let n = 0; n < this.layout.numPoints(); n++) {\n            let p = this.layout.getPoint(n);\n            if (p.anum == 0)\n                continue;\n            this.lassoMask[p.anum - 1] = GeomUtil.pointInPolygon(p.oval.cx, p.oval.cy, this.lassoX, this.lassoY);\n        }\n    }\n    drawAtomShade(ctx, atom, fillCol, borderCol, anghalo) {\n        if (this.layout == null)\n            return;\n        let p = null;\n        for (let n = 0; n < this.layout.numPoints(); n++)\n            if (this.layout.getPoint(n).anum == atom) {\n                p = this.layout.getPoint(n);\n                break;\n            }\n        if (p == null)\n            return;\n        let minRad = 0.2 * this.pointScale, minRadSq = sqr(minRad);\n        let cx = p.oval.cx, cy = p.oval.cy;\n        let rad = Math.max(minRad, Math.max(p.oval.rw, p.oval.rh)) + (0.1 + anghalo) * this.pointScale;\n        if (fillCol != -1) {\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rad, rad, 0, 0, TWOPI, true);\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.fill();\n        }\n        if (borderCol != -1) {\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rad, rad, 0, 0, TWOPI, true);\n            ctx.strokeStyle = colourCanvas(borderCol);\n            ctx.lineWidth = 1;\n            ctx.stroke();\n        }\n    }\n    drawBondShade(ctx, bond, fillCol, borderCol, anghalo) {\n        var _a;\n        if (this.layout == null)\n            return;\n        let x1 = 0, y1 = 0, x2 = 0, y2 = 0, nb = 0, sz = 0;\n        for (let l of (_a = this.layout.getUnsplitLines()) !== null && _a !== void 0 ? _a : this.layout.getLines()) {\n            if (l.bnum != bond)\n                continue;\n            x1 += l.line.x1;\n            y1 += l.line.y1;\n            x2 += l.line.x2;\n            y2 += l.line.y2;\n            nb++;\n            sz += l.size + (0.2 + anghalo) * this.pointScale;\n        }\n        if (nb == 0)\n            return;\n        let invNB = 1 / nb;\n        sz *= invNB;\n        x1 *= invNB;\n        y1 *= invNB;\n        x2 *= invNB;\n        y2 *= invNB;\n        let dx = x2 - x1, dy = y2 - y1, invDist = 1 / norm_xy(dx, dy);\n        dx *= invDist;\n        dy *= invDist;\n        let ox = dy, oy = -dx;\n        let path = new Path2D(), mx, my, CIRC = 0.8;\n        path.moveTo(x1 + ox * sz, y1 + oy * sz);\n        mx = x1 + (ox * sz - dx * sz) * CIRC;\n        my = y1 + (oy * sz - dy * sz) * CIRC;\n        path.quadraticCurveTo(mx, my, x1 - dx * sz, y1 - dy * sz);\n        mx = x1 + (-ox * sz - dx * sz) * CIRC;\n        my = y1 + (-oy * sz - dy * sz) * CIRC;\n        path.quadraticCurveTo(mx, my, x1 - ox * sz, y1 - oy * sz);\n        path.lineTo(x2 - ox * sz, y2 - oy * sz);\n        mx = x2 + (-ox * sz + dx * sz) * CIRC;\n        my = y2 + (-oy * sz + dy * sz) * CIRC;\n        path.quadraticCurveTo(mx, my, x2 + dx * sz, y2 + dy * sz);\n        mx = x2 + (ox * sz + dx * sz) * CIRC;\n        my = y2 + (oy * sz + dy * sz) * CIRC;\n        path.quadraticCurveTo(mx, my, x2 + ox * sz, y2 + oy * sz);\n        path.closePath();\n        if (fillCol != -1) {\n            ctx.beginPath();\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.fill(path);\n        }\n        if (borderCol != -1) {\n            ctx.beginPath();\n            ctx.strokeStyle = colourCanvas(borderCol);\n            ctx.lineWidth = 1;\n            ctx.stroke(path);\n        }\n    }\n    drawOriginatingBond(ctx, element, order, type) {\n        let x1 = this.clickX, y1 = this.clickY;\n        if (this.opAtom > 0) {\n            x1 = this.angToX(this.mol.atomX(this.opAtom));\n            y1 = this.angToY(this.mol.atomY(this.opAtom));\n        }\n        else if (this.opBond > 0) {\n            let [bfr, bto] = this.mol.bondFromTo(this.opBond);\n            x1 = this.angToX(0.5 * (this.mol.atomX(bfr) + this.mol.atomX(bto)));\n            y1 = this.angToY(0.5 * (this.mol.atomY(bfr) + this.mol.atomY(bto)));\n        }\n        let x2 = this.mouseX, y2 = this.mouseY;\n        let snapTo = this.snapToGuide(x2, y2), snapAtom = false;\n        if (snapTo)\n            [x2, y2, snapAtom] = snapTo;\n        let scale = this.pointScale;\n        ctx.strokeStyle = snapAtom ? '#4040FF' : '#808080';\n        ctx.lineWidth = this.policy.data.lineSize * scale * (snapAtom ? 1.5 : 1);\n        drawLine(ctx, x1, y1, x2, y2);\n        if (element != 'C') {\n            let fh = this.policy.data.fontSize * scale;\n            ctx.font = fontSansSerif(fh);\n            let metrics = ctx.measureText(element);\n            ctx.fillStyle = '#808080';\n            ctx.fillText(element, x2 - 0.5 * metrics.width, y2 + 0.5 * fh);\n        }\n    }\n    drawQueryFeatures(ctx) {\n        const { layout, mol } = this;\n        let annots = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (QueryUtil.hasAnyQueryAtom(mol, n)) {\n                let bits = [];\n                for (let xtra of mol.atomExtra(n))\n                    if (xtra.startsWith('q'))\n                        bits.push(xtra);\n                let ap = layout.getPoint(n - 1);\n                annots.push({ txt: bits.join(','), x: ap.oval.cx + ap.oval.rw, y: ap.oval.cy });\n            }\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (QueryUtil.hasAnyQueryBond(mol, n)) {\n                let bits = [];\n                for (let xtra of mol.bondExtra(n))\n                    if (xtra.startsWith('q') && !xtra.startsWith(QueryTypeBond.Orders))\n                        bits.push(xtra);\n                let num = 0, cx = 0, cy = 0;\n                for (let bl of layout.getLines())\n                    if (bl.bnum == n) {\n                        num += 2;\n                        cx += bl.line.x1 + bl.line.x2;\n                        cy += bl.line.y1 + bl.line.y2;\n                    }\n                annots.push({ txt: bits.join(','), x: cx / num, y: cy / num });\n            }\n        let fh = 0.7 * this.policy.data.fontSize * this.pointScale;\n        for (let annot of annots) {\n            ctx.font = fontSansSerif(fh);\n            ctx.fillStyle = '#FF40C0';\n            ctx.fillText(annot.txt, annot.x, annot.y);\n        }\n    }\n    drawPolymerUnit(ctx, unit, allUnits) {\n        const { mol, layout } = this;\n        let x = [], y = [];\n        let scale = this.pointScale;\n        for (let a of unit.atoms) {\n            let pt = layout.getPoint(a - 1);\n            let rad = Math.max(0.5 * scale, Math.max(pt.oval.rw, pt.oval.rh));\n            const NPT = 36, THPT = TWOPI / NPT;\n            for (let n = 0; n < NPT; n++) {\n                let th = n * THPT;\n                x.push(pt.oval.cx + rad * Math.cos(th));\n                y.push(pt.oval.cy + rad * Math.sin(th));\n            }\n        }\n        let extBonds = [], inAtoms = [], outAtoms = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let flag1 = unit.atoms.includes(bfr), flag2 = unit.atoms.includes(bto);\n            if (!flag1 && !flag2)\n                continue;\n            if (!flag2) {\n                extBonds.push(n);\n                inAtoms.push(bfr);\n                outAtoms.push(bto);\n            }\n            else if (!flag1) {\n                extBonds.push(n);\n                inAtoms.push(bto);\n                outAtoms.push(bfr);\n            }\n            let pt1 = layout.getPoint(bfr - 1), pt2 = layout.getPoint(bto - 1);\n            let x1 = pt1.oval.cx, y1 = pt1.oval.cy, x2 = pt2.oval.cx, y2 = pt2.oval.cy;\n            if (!flag1)\n                [x1, y1] = [0.5 * (x1 + x2), 0.5 * (y1 + y2)];\n            else if (!flag2)\n                [x2, y2] = [0.5 * (x1 + x2), 0.5 * (y1 + y2)];\n            let dx = x2 - x1, dy = y2 - y1, d = norm_xy(dx, dy), invD = invZ(d);\n            let ox = dy * invD * 0.3 * scale, oy = -dx * invD * 0.3 * scale;\n            let npWidth = Math.ceil(2 * d / scale) + 1, npHeight = Math.ceil(2 * norm_xy(ox, oy) / scale) + 1;\n            for (let n = 0; n <= npWidth; n++) {\n                x.push(x1 - ox + dx * n / npWidth);\n                y.push(y1 - oy + dy * n / npWidth);\n                x.push(x1 + ox + dx * n / npWidth);\n                y.push(y1 + oy + dy * n / npWidth);\n            }\n            for (let n = 1; n < npHeight; n++) {\n                x.push(x1 - ox + 2 * ox * n / npHeight);\n                y.push(y1 - oy + 2 * oy * n / npHeight);\n                x.push(x2 - ox + 2 * ox * n / npHeight);\n                y.push(y2 - oy + 2 * oy * n / npHeight);\n            }\n        }\n        let [px, py] = GeomUtil.outlinePolygon(x, y, 0.5 * scale);\n        let path = new Path2D();\n        path.moveTo(px[0], py[0]);\n        for (let n = 1; n < px.length; n++)\n            path.lineTo(px[n], py[n]);\n        path.closePath();\n        ctx.save();\n        ctx.fillStyle = '#F9EFFF';\n        ctx.fill(path);\n        ctx.strokeStyle = '#C0C0C0';\n        ctx.lineWidth = 1;\n        ctx.stroke(path);\n        ctx.restore();\n        let selfLinks = [];\n        let innerLinks = [];\n        let outerLinks = [];\n        if (Vec.len(unit.bondConn) == 4) {\n            innerLinks.push([inAtoms[extBonds.indexOf(unit.bondConn[0])], inAtoms[extBonds.indexOf(unit.bondConn[2])]]);\n            innerLinks.push([inAtoms[extBonds.indexOf(unit.bondConn[1])], inAtoms[extBonds.indexOf(unit.bondConn[3])]]);\n        }\n        else if (Vec.len(extBonds) == 2 && unit.connect != null) {\n            if (unit.connect == PolymerBlockConnectivity.HeadToTail || unit.connect == PolymerBlockConnectivity.Random) {\n                innerLinks.push([inAtoms[0], inAtoms[1]]);\n            }\n            if (unit.connect == PolymerBlockConnectivity.HeadToHead || unit.connect == PolymerBlockConnectivity.Random) {\n                selfLinks.push(inAtoms[0]);\n                selfLinks.push(inAtoms[1]);\n            }\n        }\n        else {\n            for (let b of extBonds) {\n                let a1 = mol.bondFrom(b), a2 = mol.bondTo(b);\n                if (unit.atoms.includes(a2))\n                    [a1, a2] = [a2, a1];\n                let incl = unit.bondIncl.get(b), excl = unit.bondExcl.get(b);\n                let isCapped = mol.atomElement(a2) != POLYMERBLOCK_SPECIAL_UNCAPPED;\n                for (let look of (isCapped ? [unit] : allUnits))\n                    for (let a of look.atoms) {\n                        let isExt = false;\n                        for (let adj of mol.atomAdjList(a))\n                            if (!look.atoms.includes(adj)) {\n                                isExt = true;\n                                break;\n                            }\n                        if (!isExt)\n                            continue;\n                        if (Vec.notBlank(incl)) {\n                            let anames = look.atomName.get(a), any = false;\n                            if (anames)\n                                for (let an of anames)\n                                    any = any || incl.includes(an);\n                            if (!any)\n                                continue;\n                        }\n                        if (Vec.notBlank(excl)) {\n                            let anames = look.atomName.get(a), any = false;\n                            if (anames)\n                                for (let an of anames)\n                                    any = any || excl.includes(an);\n                            if (any)\n                                continue;\n                        }\n                        if (a == a1)\n                            selfLinks.push(a1);\n                        else if (unit === look)\n                            innerLinks.push([a1, a]);\n                        else\n                            outerLinks.push([a1, a]);\n                    }\n            }\n        }\n        selfLinks = Vec.uniqueStable(selfLinks);\n        innerLinks = Vec.maskGet(innerLinks, Vec.maskUnique(innerLinks.map((pair) => Vec.min(pair) * mol.numAtoms + Vec.max(pair))));\n        outerLinks = Vec.maskGet(outerLinks, Vec.maskUnique(outerLinks.map((pair) => Vec.min(pair) * mol.numAtoms + Vec.max(pair))));\n        ctx.save();\n        ctx.strokeStyle = '#6329C1';\n        ctx.lineWidth = 2;\n        ctx.setLineDash([1, 1]);\n        ctx.beginPath();\n        for (let a of selfLinks) {\n            let p1 = layout.getPoint(a - 1), x1 = p1.oval.cx, y1 = p1.oval.cy;\n            let x2 = 0, y2 = 0, num = 0;\n            for (let n = 0; n < extBonds.length; n++)\n                if (inAtoms[n] == a) {\n                    let p2 = layout.getPoint(outAtoms[n] - 1);\n                    x2 += p2.oval.cx;\n                    y2 += p2.oval.cy;\n                    num++;\n                }\n            if (num > 1) {\n                x2 /= num;\n                y2 /= num;\n            }\n            x2 = x1 + 0.5 * (x2 - x1);\n            y2 = y1 + 0.5 * (y2 - y1);\n            let dx = x2 - x1, dy = y2 - y1, invD = invZ(norm_xy(dx, dy)), ox = dy * invD, oy = -dx * invD;\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2);\n            const EXT = 2 * scale;\n            ctx.moveTo(x1, y1);\n            ctx.quadraticCurveTo(cx + ox * EXT, cy + oy * EXT, x2, y2);\n            ctx.quadraticCurveTo(cx - ox * EXT, cy - oy * EXT, x1, y1);\n        }\n        for (let [a1, a2] of innerLinks) {\n            let x1 = mol.atomX(a1), y1 = mol.atomY(a1), x2 = mol.atomX(a2), y2 = mol.atomY(a2);\n            let dx = x2 - x1, dy = y2 - y1, invD = invZ(norm_xy(dx, dy)), ox = dy * invD, oy = -dx * invD;\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2);\n            const EXT = 5;\n            let px1 = cx + ox * EXT, py1 = cy + oy * EXT, px2 = cx - ox * EXT, py2 = cy - oy * EXT;\n            let [px, py] = CoordUtil.congestionPoint(mol, px1, py1) < CoordUtil.congestionPoint(mol, px2, py2) ? [px1, py1] : [px2, py2];\n            ctx.moveTo(this.angToX(x1), this.angToY(y1));\n            ctx.quadraticCurveTo(this.angToX(px), this.angToY(py), this.angToX(x2), this.angToY(y2));\n        }\n        for (let [a1, a2] of outerLinks) {\n            let p1 = layout.getPoint(a1 - 1), p2 = layout.getPoint(a2 - 1);\n            ctx.moveTo(p1.oval.cx, p1.oval.cy);\n            ctx.lineTo(p2.oval.cx, p2.oval.cy);\n        }\n        ctx.stroke();\n        ctx.restore();\n    }\n    determineFauxRing() {\n        let atom = this.opAtom, bond = this.opBond, mol = this.mol;\n        let x1 = atom > 0 ? mol.atomX(atom) : bond > 0 ? 0.5 * (mol.atomX(mol.bondFrom(bond)) + mol.atomX(mol.bondTo(bond))) : this.xToAng(this.clickX);\n        let y1 = atom > 0 ? mol.atomY(atom) : bond > 0 ? 0.5 * (mol.atomY(mol.bondFrom(bond)) + mol.atomY(mol.bondTo(bond))) : this.yToAng(this.clickY);\n        let x2 = this.xToAng(this.mouseX), y2 = this.yToAng(this.mouseY), dx = x2 - x1, dy = y2 - y1;\n        let rsz = Math.min(9, Math.round(norm_xy(dx, dy) * 2 / Molecule.IDEALBOND) + 2);\n        if (rsz < 3) { }\n        else if (bond > 0)\n            return SketchUtil.proposeBondRing(mol, rsz, bond, dx, dy);\n        else if (atom > 0 && mol.atomAdjCount(atom) > 0 && !this.toolRingFreeform)\n            return SketchUtil.proposeAtomRing(mol, rsz, atom, dx, dy);\n        else\n            return SketchUtil.proposeNewRing(mol, rsz, x1, y1, dx, dy, !this.toolRingFreeform);\n        return [null, null];\n    }\n    determineDragTheta() {\n        let x0 = this.clickX, y0 = this.clickY;\n        let snap = this.snapToGuide(x0, y0);\n        if (snap != null) {\n            x0 = snap[0];\n            y0 = snap[1];\n        }\n        let theta = Math.atan2(this.mouseY - y0, this.mouseX - x0), magnitude = norm_xy(this.mouseX - x0, this.mouseY - y0);\n        if (this.toolRotateIncr > 0)\n            theta = Math.round(theta / this.toolRotateIncr) * this.toolRotateIncr;\n        return [x0, y0, theta, magnitude];\n    }\n    determineMoveDelta() {\n        let x1 = this.clickX, y1 = this.clickY, x2 = this.mouseX, y2 = this.mouseY;\n        if (this.opAtom > 0) {\n            x1 = this.angToX(this.mol.atomX(this.opAtom));\n            y1 = this.angToY(this.mol.atomY(this.opAtom));\n            let snap = this.snapToGuide(x2, y2);\n            if (snap != null) {\n                x2 = snap[0];\n                y2 = snap[1];\n            }\n        }\n        return [x2 - x1, y2 - y1];\n    }\n    snapToGuide(x, y) {\n        if (this.opBond > 0) {\n            let obj = this.pickObject(x, y);\n            if (obj < 0) {\n                let [bfr, bto] = this.mol.bondFromTo(-obj);\n                let px = this.angToX(0.5 * (this.mol.atomX(bfr) + this.mol.atomX(bto)));\n                let py = this.angToY(0.5 * (this.mol.atomY(bfr) + this.mol.atomY(bto)));\n                return [px, py, false];\n            }\n            return null;\n        }\n        let bestDSQ = Number.POSITIVE_INFINITY, bestX = 0, bestY = 0, bestAtom = false;\n        const APPROACH = sqr(0.5 * this.pointScale);\n        if (this.dragGuides != null)\n            for (let i = 0; i < this.dragGuides.length; i++)\n                for (let j = 0; j < this.dragGuides[i].x.length; j++) {\n                    let px = this.dragGuides[i].destX[j], py = this.dragGuides[i].destY[j];\n                    let dsq = norm2_xy(px - x, py - y);\n                    if (dsq < APPROACH && dsq < bestDSQ)\n                        [bestDSQ, bestX, bestY, bestAtom] = [dsq, px, py, false];\n                }\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let px = this.angToX(this.mol.atomX(n)), py = this.angToY(this.mol.atomY(n));\n            let dsq = norm2_xy(px - x, py - y);\n            if (dsq < APPROACH && dsq < bestDSQ)\n                [bestDSQ, bestX, bestY, bestAtom] = [dsq, px, py, true];\n        }\n        if (isFinite(bestDSQ))\n            return [bestX, bestY, bestAtom];\n        return null;\n    }\n    pickObjectCanvas(x, y, opt = {}) {\n        let limitDist = 0.5 * this.pointScale;\n        let bestItem = 0, bestScore = Number.POSITIVE_INFINITY;\n        if (!opt.noAtoms)\n            for (let n = 0; n < this.layout.numPoints(); n++) {\n                let p = this.layout.getPoint(n);\n                if (p.anum == 0)\n                    continue;\n                let dx = Math.abs(x - p.oval.cx), dy = Math.abs(y - p.oval.cy);\n                let dsq = norm2_xy(dx, dy);\n                let limitDSQ = sqr(Math.max(limitDist, Math.max(p.oval.rw, p.oval.rh)));\n                if (dsq > limitDSQ)\n                    continue;\n                if (dsq < bestScore) {\n                    bestItem = p.anum;\n                    bestScore = dsq;\n                }\n            }\n        if (bestItem != 0)\n            return bestItem;\n        if (!opt.noBonds)\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let l = this.layout.getLine(n);\n                if (l.bnum == 0)\n                    continue;\n                let x1 = l.line.x1, y1 = l.line.y1;\n                let x2 = l.line.x2, y2 = l.line.y2;\n                if (x < Math.min(x1, x2) - limitDist || y < Math.min(y1, y2) - limitDist ||\n                    x > Math.max(x1, x2) + limitDist || y > Math.max(y1, y2) + limitDist)\n                    continue;\n                let dist = GeomUtil.pointLineSegDistance(x, y, x1, y1, x2, y2);\n                if (dist > limitDist)\n                    continue;\n                if (dist < bestScore) {\n                    bestItem = -l.bnum;\n                    bestScore = dist;\n                }\n            }\n        return bestItem;\n    }\n    pickObject(x, y, opt = {}) {\n        return this.pickObjectCanvas(x, y, opt) || 0;\n    }\n    sketchEffects(mol) {\n        let effects = new RenderEffects();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n) && n != this.hoverAtom)\n                effects.dottedRectOutline[n] = 0x808080;\n        effects.overlapAtoms = CoordUtil.overlappingAtomList(mol, 0.2);\n        effects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n        effects.atomDecoCol = Vec.numberArray(Theme.foreground, mol.numAtoms);\n        effects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n        effects.bondDecoText = Vec.stringArray('', mol.numBonds);\n        effects.bondDecoCol = Vec.numberArray(Theme.foreground, mol.numBonds);\n        effects.bondDecoSize = Vec.numberArray(0.3, mol.numBonds);\n        if (this.viewOpt.showOxState) {\n            for (let n = 1; n <= mol.numAtoms; n++) {\n                let ox = MolUtil.atomOxidationState(mol, n);\n                if (ox != null) {\n                    effects.atomDecoText[n - 1] = MolUtil.oxidationStateText(ox);\n                    effects.atomDecoCol[n - 1] = 0xFF8080;\n                }\n            }\n        }\n        if (this.viewOpt.decoration == DrawCanvasDecoration.Stereochemistry) {\n            if (!this.stereo)\n                this.stereo = Stereochemistry.create(MetaMolecule.createStrict(mol));\n            skip: for (let n = 1; n <= mol.numAtoms; n++) {\n                let chi = this.stereo.atomTetraChirality(n);\n                if (chi == Stereochemistry.STEREO_NONE)\n                    continue;\n                for (let adjb of mol.atomAdjBonds(n))\n                    if (mol.bondOrder(adjb) != 1)\n                        continue skip;\n                if (chi == Stereochemistry.STEREO_UNKNOWN) {\n                    for (let adj of mol.atomAdjList(n))\n                        if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(adj)] >= 3)\n                            continue skip;\n                }\n                effects.atomDecoText[n - 1] = chi == Stereochemistry.STEREO_POS ? 'R' :\n                    chi == Stereochemistry.STEREO_NEG ? 'S' :\n                        chi == Stereochemistry.STEREO_UNKNOWN ? 'R/S' : '?';\n                effects.atomDecoCol[n - 1] = 0x00A000;\n            }\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let side = this.stereo.bondSideStereo(n);\n                if (side == Stereochemistry.STEREO_NONE)\n                    continue;\n                effects.bondDecoText[n - 1] = side == Stereochemistry.STEREO_POS ? 'Z' :\n                    side == Stereochemistry.STEREO_NEG ? 'E' :\n                        side == Stereochemistry.STEREO_UNKNOWN ? 'Z/E' : '?';\n                effects.bondDecoCol[n - 1] = 0x00A000;\n            }\n        }\n        else if (this.viewOpt.decoration == DrawCanvasDecoration.MappingNumber) {\n            effects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n            effects.atomDecoCol = Vec.numberArray(0x8000FF, mol.numAtoms);\n            effects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomMapNum(n) > 0)\n                    effects.atomDecoText[n - 1] = mol.atomMapNum(n).toString();\n        }\n        else if (this.viewOpt.decoration == DrawCanvasDecoration.AtomIndex) {\n            effects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n            effects.atomDecoCol = Vec.numberArray(0x8000FF, mol.numAtoms);\n            effects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                effects.atomDecoText[n - 1] = n.toString();\n        }\n        return effects;\n    }\n    orientAbbreviation(abbrevAtom, abbrevMol) {\n        const { mol } = this;\n        if (MolUtil.isBlank(abbrevMol))\n            return;\n        if (this.mol.atomAdjCount(abbrevAtom) != 1)\n            return;\n        let nbr = mol.atomAdjList(abbrevAtom)[0];\n        let vx1 = mol.atomX(abbrevAtom) - mol.atomX(nbr), vy1 = mol.atomY(abbrevAtom) - mol.atomY(nbr);\n        let adj = abbrevMol.atomAdjList(1);\n        let vx2 = 0, vy2 = 0, inv = invZ(adj.length);\n        for (let a of adj) {\n            vx2 += abbrevMol.atomX(a) - abbrevMol.atomX(1);\n            vy2 += abbrevMol.atomY(a) - abbrevMol.atomY(1);\n        }\n        vx2 *= inv;\n        vy2 *= inv;\n        let th1 = Math.atan2(vy1, vx1), th2 = Math.atan2(vy2, vx2);\n        CoordUtil.rotateMolecule(abbrevMol, th1 - th2);\n        if (adj.length == 1) {\n            CoordUtil.translateMolecule(abbrevMol, mol.atomX(abbrevAtom) - abbrevMol.atomX(adj[0]), mol.atomY(abbrevAtom) - abbrevMol.atomY(adj[0]));\n            abbrevMol.setAtomPos(1, mol.atomX(nbr), mol.atomY(nbr));\n        }\n        else {\n            CoordUtil.translateMolecule(abbrevMol, mol.atomX(nbr) - abbrevMol.atomX(1), mol.atomY(nbr) - abbrevMol.atomY(1));\n        }\n        for (let b of abbrevMol.atomAdjBonds(1)) {\n            let a = abbrevMol.bondOther(b, 1);\n            if (abbrevMol.atomHExplicit(a) != Molecule.HEXPLICIT_UNKNOWN)\n                continue;\n            abbrevMol.setAtomHExplicit(a, Math.max(0, abbrevMol.atomHydrogens(a)));\n        }\n        abbrevMol.deleteAtomAndBonds(1);\n    }\n}\n//# sourceMappingURL=DrawCanvas.js.map","import { MetaVector } from '../gfx/MetaVector';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nimport { GeomUtil } from '../util/Geom';\nimport { Theme } from '../util/Theme';\nimport { angleDiff, DEGRAD, eventCoords, norm_xy, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport var GeomWidgetType;\n(function (GeomWidgetType) {\n    GeomWidgetType[GeomWidgetType[\"Atom\"] = 0] = \"Atom\";\n    GeomWidgetType[GeomWidgetType[\"Bond\"] = 1] = \"Bond\";\n})(GeomWidgetType || (GeomWidgetType = {}));\nexport var GeomWidgetSelType;\n(function (GeomWidgetSelType) {\n    GeomWidgetSelType[GeomWidgetSelType[\"Position\"] = 0] = \"Position\";\n    GeomWidgetSelType[GeomWidgetSelType[\"Link\"] = 1] = \"Link\";\n    GeomWidgetSelType[GeomWidgetSelType[\"Torsion\"] = 2] = \"Torsion\";\n})(GeomWidgetSelType || (GeomWidgetSelType = {}));\nexport class GeomWidget extends Widget {\n    constructor(type, mol, idx) {\n        super();\n        this.type = type;\n        this.mol = mol;\n        this.idx = idx;\n        this.posX = [];\n        this.posY = [];\n        this.linkA = [];\n        this.linkB = [];\n        this.torsA = [];\n        this.torsB = [];\n        this.hovered = null;\n        if (type == GeomWidgetType.Atom) {\n            const atom = idx;\n            let adj = mol.atomAdjList(atom);\n            this.atomSubset = [atom, ...adj];\n            for (let b of mol.atomAdjBonds(atom)) {\n                this.linkA.push(0);\n                this.linkB.push(this.atomSubset.indexOf(mol.bondOther(b, atom)));\n            }\n            let theta = [];\n            for (let a of adj)\n                theta.push(Math.atan2(-(mol.atomY(a) - mol.atomY(atom)), mol.atomX(a) - mol.atomX(atom)));\n            let order = Vec.idxSort(theta);\n            for (let n = 0; n < order.length; n++) {\n                this.torsA.push(order[n] + 1);\n                this.torsB.push(order[n < order.length - 1 ? n + 1 : 0] + 1);\n            }\n            this.selected = { type: GeomWidgetSelType.Position, idx: 0 };\n        }\n        else {\n            const bond = idx;\n            let a1 = mol.bondFrom(bond), a2 = mol.bondTo(bond);\n            this.atomSubset = [...mol.atomAdjList(a1), ...mol.atomAdjList(a2)];\n            let link = (a1, a2) => {\n                this.linkA.push(this.atomSubset.indexOf(a1));\n                this.linkB.push(this.atomSubset.indexOf(a2));\n            };\n            link(a1, a2);\n            for (let a of mol.atomAdjList(a1))\n                if (a != a2)\n                    link(a1, a);\n            for (let a of mol.atomAdjList(a2))\n                if (a != a1)\n                    link(a2, a);\n            this.selected = { type: GeomWidgetSelType.Link, idx: 0 };\n        }\n    }\n    render(parent) {\n        super.render(parent);\n        let divOuter = dom('<div/>').appendTo(this.contentDOM).css({ 'text-align': 'center' });\n        this.divDiagram = dom('<div/>').appendTo(divOuter).css({ 'display': 'inline-block' });\n        this.contentDOM.onClick((event) => this.mouseClick(eventCoords(event, this.divDiagram)));\n        this.contentDOM.onMouseMove((event) => this.mouseMove(eventCoords(event, this.divDiagram)));\n        this.redraw();\n    }\n    selectionAtoms(sel) {\n        const atoms = this.atomSubset;\n        if (sel.type == GeomWidgetSelType.Position)\n            return [atoms[sel.idx]];\n        if (sel.type == GeomWidgetSelType.Link)\n            return [atoms[this.linkA[sel.idx]], atoms[this.linkB[sel.idx]]];\n        if (sel.type == GeomWidgetSelType.Torsion)\n            return [atoms[0], atoms[this.torsA[sel.idx]], atoms[this.torsB[sel.idx]]];\n        return null;\n    }\n    redraw() {\n        this.divDiagram.empty();\n        let w = 250, h = 250;\n        this.posX = [];\n        this.posY = [];\n        const ANG_RAD = 0.25;\n        for (let a of this.atomSubset) {\n            this.posX.push(this.mol.atomX(a));\n            this.posY.push(this.mol.atomY(a));\n        }\n        let loX = Vec.min(this.posX) - ANG_RAD, hiX = Vec.max(this.posX) + ANG_RAD;\n        let loY = Vec.min(this.posY) - ANG_RAD, hiY = Vec.max(this.posY) + ANG_RAD;\n        this.scale = Math.min(40, Math.min((w - 4) / (hiX - loX), (h - 4) / (hiY - loY)));\n        let dx = 0.5 * (w - (hiX - loX) * this.scale), dy = 0.5 * (h - (hiY - loY) * this.scale);\n        for (let n = 0; n < this.atomSubset.length; n++) {\n            this.posX[n] = dx + (this.posX[n] - loX) * this.scale;\n            this.posY[n] = h - (dy + (this.posY[n] - loY) * this.scale);\n        }\n        this.posRad = ANG_RAD * this.scale;\n        let gfx = new MetaVector();\n        gfx.setSize(w, h);\n        let fg = Theme.foreground, bg = Theme.background, outerSel = 0x008FD1, innerSel = 0x47D5D2;\n        for (let n = 0; n < this.atomSubset.length; n++) {\n            if (this.hovered && this.hovered.type == GeomWidgetSelType.Position && this.hovered.idx == n)\n                gfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, fg, 1, bg);\n            else if (this.selected && this.selected.type == GeomWidgetSelType.Position && this.selected.idx == n)\n                gfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, outerSel, 1, innerSel);\n            else\n                gfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, MetaVector.NOCOLOUR, 0, fg);\n        }\n        for (let showsel of [1, 2, 3])\n            for (let n = 0; n < this.linkA.length; n++) {\n                let x1 = this.posX[this.linkA[n]], y1 = this.posY[this.linkA[n]];\n                let x2 = this.posX[this.linkB[n]], y2 = this.posY[this.linkB[n]];\n                if (this.hovered && this.hovered.type == GeomWidgetSelType.Link && this.hovered.idx == n) {\n                    if (showsel == 3) {\n                        gfx.drawLine(x1, y1, x2, y2, fg, this.scale * 0.1 + 2);\n                        gfx.drawLine(x1, y1, x2, y2, bg, this.scale * 0.1);\n                    }\n                }\n                else if (this.selected && this.selected.type == GeomWidgetSelType.Link && this.selected.idx == n) {\n                    if (showsel == 2) {\n                        gfx.drawLine(x1, y1, x2, y2, outerSel, this.scale * 0.1 + 2);\n                        gfx.drawLine(x1, y1, x2, y2, innerSel, this.scale * 0.1);\n                    }\n                }\n                else {\n                    if (showsel == 1)\n                        gfx.drawLine(x1, y1, x2, y2, fg, this.scale * 0.1);\n                }\n            }\n        for (let n = 0; n < this.torsA.length; n++) {\n            let cx = this.posX[0], cy = this.posY[0];\n            let dx1 = 0.5 * (this.posX[this.torsA[n]] - cx), dy1 = 0.5 * (this.posY[this.torsA[n]] - cy);\n            let dx2 = 0.5 * (this.posX[this.torsB[n]] - cx), dy2 = 0.5 * (this.posY[this.torsB[n]] - cy);\n            let rad = 0.5 * (norm_xy(dx1, dy1) + norm_xy(dx2, dy2));\n            let theta1 = Math.atan2(dy1, dx1) + 10 * DEGRAD, theta2 = Math.atan2(dy2, dx2) - 10 * DEGRAD, dtheta = angleDiff(theta2, theta1);\n            let ox1 = rad * Math.cos(theta1), oy1 = rad * Math.sin(theta1), ox2 = rad * Math.cos(theta2), oy2 = rad * Math.sin(theta2);\n            let px, py, pf;\n            if (dtheta > 0) {\n                let [ax1, ay1, ax2, ay2] = GeomUtil.arcControlPoints(rad, ox1, oy1, ox2, oy2);\n                px = Vec.add([ox1, ax1, ax2, ox2], cx);\n                py = Vec.add([oy1, ay1, ay2, oy2], cy);\n                pf = [false, true, true, false];\n            }\n            else {\n                let thetaM = theta1 + 0.5 * (dtheta + TWOPI);\n                let oxM = rad * Math.cos(thetaM), oyM = rad * Math.sin(thetaM);\n                let [ax1, ay1, ax2, ay2] = GeomUtil.arcControlPoints(rad, ox1, oy1, oxM, oyM);\n                let [ax3, ay3, ax4, ay4] = GeomUtil.arcControlPoints(rad, oxM, oyM, ox2, oy2);\n                px = Vec.add([ox1, ax1, ax2, oxM, ax3, ax4, ox2], cx);\n                py = Vec.add([oy1, ay1, ay2, oyM, ay3, ay4, oy2], cy);\n                pf = [false, true, true, false, true, true, false];\n            }\n            if (this.hovered && this.hovered.type == GeomWidgetSelType.Torsion && this.hovered.idx == n) {\n                gfx.drawPath(px, py, pf, false, fg, this.scale * 0.1 + 2, MetaVector.NOCOLOUR, false);\n                gfx.drawPath(px, py, pf, false, bg, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n            }\n            else if (this.selected && this.selected.type == GeomWidgetSelType.Torsion && this.selected.idx == n) {\n                gfx.drawPath(px, py, pf, false, outerSel, this.scale * 0.1 + 2, MetaVector.NOCOLOUR, false);\n                gfx.drawPath(px, py, pf, false, innerSel, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n            }\n            else\n                gfx.drawPath(px, py, pf, false, fg, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n        }\n        this.divDiagram.empty();\n        let svg = dom(gfx.createSVG()).appendTo(this.divDiagram).css({ 'pointer-events': 'none' });\n    }\n    mouseClick(xy) {\n        event.stopPropagation();\n        if (this.type == GeomWidgetType.Bond)\n            return;\n        let which = this.whichSelection(xy[0], xy[1]);\n        if (!which)\n            return;\n        if (!this.sameSelection(this.selected, which)) {\n            this.selected = which;\n            this.hovered = null;\n            this.redraw();\n            this.callbackSelect(which);\n        }\n    }\n    mouseMove(xy) {\n        if (this.type == GeomWidgetType.Bond)\n            return;\n        let which = this.whichSelection(xy[0], xy[1]);\n        if (which && this.sameSelection(which, this.selected))\n            which = null;\n        if (!this.sameSelection(this.hovered, which)) {\n            this.hovered = which;\n            this.redraw();\n        }\n    }\n    whichSelection(x, y) {\n        let cx = this.posX[0], cy = this.posY[0];\n        if (norm_xy(x - cx, y - cy) <= this.posRad)\n            return { type: GeomWidgetSelType.Position, idx: 0 };\n        let maxRad = 0;\n        for (let n = 1; n < this.atomSubset.length; n++)\n            maxRad = Math.max(maxRad, norm_xy(this.posX[n] - cx, this.posY[n] - cy) + this.posRad);\n        if (norm_xy(x - cx, y - cy) > maxRad)\n            return null;\n        let theta = Math.atan2(y - cy, x - cx);\n        let closeSel = null, closeDelta = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < this.linkB.length; n++) {\n            let delta = Math.abs(angleDiff(Math.atan2(this.posY[this.linkB[n]] - cy, this.posX[this.linkB[n]] - cx), theta));\n            if (delta < 10 * DEGRAD && delta < closeDelta) {\n                closeSel = { type: GeomWidgetSelType.Link, idx: n };\n                closeDelta = delta;\n            }\n        }\n        for (let n = 0; n < this.torsA.length; n++) {\n            let theta1 = Math.atan2(this.posY[this.torsA[n]] - cy, this.posX[this.torsA[n]] - cx);\n            let theta2 = Math.atan2(this.posY[this.torsB[n]] - cy, this.posX[this.torsB[n]] - cx);\n            let midtheta = theta1 + 0.5 * (angleDiff(theta2, theta1));\n            let delta = Math.abs(angleDiff(midtheta, theta));\n            if (delta < closeDelta) {\n                closeSel = { type: GeomWidgetSelType.Torsion, idx: n };\n                closeDelta = delta;\n            }\n        }\n        return closeSel;\n    }\n    sameSelection(sel1, sel2) {\n        if (sel1 == null && sel2 == null)\n            return true;\n        if (sel1 == null || sel2 == null)\n            return false;\n        return sel1.type == sel2.type && sel1.idx == sel2.idx;\n    }\n}\n//# sourceMappingURL=GeomWidget.js.map","import { dom } from '../util/dom';\nimport { hasInlineCSS, installInlineCSS, Theme } from '../util/Theme';\nimport { colourCode } from '../util/util';\nimport { Widget } from './Widget';\nexport class OptionList extends Widget {\n    constructor(options, isVertical = false) {\n        super();\n        this.options = options;\n        this.isVertical = isVertical;\n        this.padding = 6;\n        this.htmlLabels = false;\n        this.numCols = 0;\n        this.selidx = 0;\n        this.buttonDiv = [];\n        this.auxCell = [];\n        this.callbackSelect = null;\n        if (options.length == 0)\n            throw 'molsync.ui.OptionList: must provide a list of option labels.';\n        if (!hasInlineCSS('option'))\n            installInlineCSS('option', this.composeCSS());\n    }\n    getSelectedIndex() {\n        return this.selidx;\n    }\n    getSelectedValue() {\n        return this.options[this.selidx];\n    }\n    getAuxiliaryCell(idx) {\n        return this.auxCell[idx].el;\n    }\n    onSelect(callback) {\n        this.callbackSelect = callback;\n    }\n    render(parent) {\n        super.render(parent);\n        this.contentDOM.css({ 'display': 'block', 'baseline-shift': '1.5em' });\n        this.buttonDiv = [];\n        this.auxCell = [];\n        let table = dom('<table class=\"wmk-option-table\"/>').appendTo(this.contentDOM);\n        let tr = this.isVertical ? null : dom('<tr/>').appendTo(table);\n        for (let n = 0; n < this.options.length; n++) {\n            if (this.isVertical || (this.numCols > 0 && n > 0 && n % this.numCols == 0))\n                tr = dom('<tr/>').appendTo(table);\n            let td = dom('<td class=\"wmk-option-cell\"/>').appendTo(tr);\n            let div = dom('<div class=\"wmk-option\"/>').appendTo(td);\n            div.css({ 'padding': `${this.padding}px` });\n            div.onClick(() => this.clickButton(n));\n            this.buttonDiv.push(div);\n            if (this.isVertical) {\n                td = dom('<td style=\"vertical-align: middle;\"/>').appendTo(tr);\n                this.auxCell.push(td);\n            }\n        }\n        this.updateButtons();\n    }\n    clickButton(idx) {\n        if (idx == this.selidx)\n            return;\n        this.setSelectedIndex(idx);\n        if (this.callbackSelect)\n            this.callbackSelect(idx, this);\n    }\n    setSelectedIndex(idx) {\n        if (this.selidx == idx)\n            return;\n        this.selidx = idx;\n        this.updateButtons();\n    }\n    setSelectedValue(val) {\n        let idx = this.options.indexOf(val);\n        if (idx >= 0)\n            this.setSelectedIndex(idx);\n    }\n    updateButtons() {\n        for (let n = 0; n < this.options.length && n < this.buttonDiv.length; n++) {\n            let div = this.buttonDiv[n];\n            let txt = this.options[n];\n            if (txt.length == 0 && n == this.selidx)\n                div.setText('\\u00A0\\u2716\\u00A0');\n            else if (txt.length == 0)\n                div.setText('\\u00A0\\u00A0\\u00A0');\n            else if (this.htmlLabels)\n                div.setHTML(txt);\n            else\n                div.setText(txt);\n            div.removeClass('wmk-option-unselected wmk-option-selected');\n            if (n != this.selidx)\n                div.addClass('wmk-option-unselected');\n            else\n                div.addClass('wmk-option-selected');\n        }\n    }\n    composeCSS() {\n        let lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n        let highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n        return `\n\t\t\t.wmk-option\n\t\t\t{\n\t\t\t\tmargin-bottom: 0;\n\t\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tfont-weight: normal;\n\t\t\t\ttext-align: center;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\tline-height: 1.2em;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t.wmk-option-selected\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #008FD2;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\t}\n\t\t\t.wmk-option-unselected\n\t\t\t{\n\t\t\t\tcolor: #333;\n\t\t\t\tbackground-color: white;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\t}\n\t\t\t.wmk-option-unselected:hover\n\t\t\t{\n\t\t\t\tbackground-color: #808080;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #F0F0F0, #D0D0D0);\n\t\t\t}\n\t\t\t.wmk-option-unselected:active\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #00C000;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\t}\n\t\t\t.wmk-option-table\n\t\t\t{\n\t\t\t\tmargin: 1px;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-collapse: collapse;\n\t\t\t}\n\t\t\t.wmk-option-cell\n\t\t\t{\n\t\t\t\tmargin: 0;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-width: 1px;\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-color: #808080;\n\t\t\t}\n\t\t`;\n    }\n}\n//# sourceMappingURL=OptionList.js.map","import { dom } from '../util/dom';\nimport { hasInlineCSS, installInlineCSS, Theme } from '../util/Theme';\nimport { colourCode } from '../util/util';\nimport { Widget } from './Widget';\nexport class TabBar extends Widget {\n    constructor(options) {\n        super();\n        this.options = options;\n        this.unionHeight = false;\n        this.selidx = 0;\n        this.buttonDiv = [];\n        this.panelDiv = [];\n        this.padding = 6;\n        this.callbackSelect = null;\n        if (!hasInlineCSS('tabbar'))\n            installInlineCSS('tabbar', this.composeCSS());\n    }\n    onSelect(callback) {\n        this.callbackSelect = callback;\n    }\n    getSelectedIndex() {\n        return this.selidx;\n    }\n    getSelectedValue() {\n        return this.options[this.selidx];\n    }\n    getPanelDOM(idxOrName) {\n        let idx = typeof idxOrName == 'number' ? idxOrName : this.options.indexOf(idxOrName);\n        if (idx < 0)\n            return null;\n        return this.panelDiv[idx];\n    }\n    render(parent) {\n        super.render(parent);\n        let grid = dom('<div/>').appendTo(this.contentDOM).css({ 'display': 'grid' });\n        grid.css({ 'align-items': 'center', 'justify-content': 'start', 'grid-row-gap': '0.5em' });\n        let columns = '[start] 1fr ';\n        for (let n = 0; n < this.options.length; n++)\n            columns += '[btn' + n + '] auto ';\n        columns += '[btnX] 1fr [end]';\n        grid.css({ 'grid-template-columns': columns });\n        let underline = dom('<div/>').appendTo(grid);\n        underline.css({ 'grid-column': 'start / end', 'grid-row': '1', 'height': '100%' });\n        underline.css({ 'border-bottom': '1px solid #C0C0C0' });\n        for (let n = 0; n < this.options.length; n++) {\n            let outline = dom('<div class=\"wmk-tabbar-cell\"/>').appendTo(grid);\n            outline.css({ 'grid-column': 'btn' + n, 'grid-row': '1' });\n            let btn = dom('<div class=\"wmk-tabbar\"/>').appendTo(outline);\n            btn.css({ 'padding': `${this.padding}px` });\n            btn.onClick(() => this.clickButton(n));\n            this.buttonDiv.push(btn);\n            let panel = dom('<div/>').appendTo(grid);\n            panel.css({ 'grid-column': 'start / end', 'grid-row': '2' });\n            panel.css({ 'align-self': 'start', 'justify-self': 'center', 'width': '100%' });\n            this.panelDiv.push(panel);\n        }\n        this.updateButtons();\n    }\n    clickButton(idx) {\n        if (idx == this.selidx)\n            return;\n        this.setSelectedIndex(idx);\n        if (this.callbackSelect)\n            this.callbackSelect(idx, this);\n    }\n    setSelectedIndex(idx) {\n        if (this.selidx == idx)\n            return;\n        this.selidx = idx;\n        let dom = this.contentDOM;\n        dom.setCSS('min-width', `${dom.width()}px`);\n        this.updateButtons();\n    }\n    setSelectedValue(val) {\n        let idx = this.options.indexOf(val);\n        if (idx >= 0)\n            this.setSelectedIndex(idx);\n    }\n    rotateSelected(dir) {\n        this.setSelectedIndex((this.selidx + dir + this.options.length) % this.options.length);\n    }\n    updateButtons() {\n        for (let n = 0; n < this.options.length && n < this.buttonDiv.length; n++) {\n            let div = this.buttonDiv[n];\n            let txt = this.options[n];\n            if (txt.length == 0 && n == this.selidx)\n                div.setText('\\u00A0\\u2716\\u00A0');\n            else if (txt.length == 0)\n                div.setText('\\u00A0\\u00A0\\u00A0');\n            else\n                div.setText(txt);\n            div.removeClass('wmk-tabbar-unselected wmk-tabbar-selected');\n            if (n != this.selidx)\n                div.addClass('wmk-tabbar-unselected');\n            else\n                div.addClass('wmk-tabbar-selected');\n            if (this.unionHeight)\n                this.panelDiv[n].setCSS('visibility', n == this.selidx ? 'visible' : 'hidden');\n            else\n                this.panelDiv[n].setCSS('display', n == this.selidx ? 'block' : 'none');\n        }\n    }\n    composeCSS() {\n        let lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n        let highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n        return `\n\t\t\t.wmk-tabbar\n\t\t\t{\n\t\t\t\tmargin-bottom: 0;\n\t\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tfont-weight: normal;\n\t\t\t\ttext-align: center;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\tvertical-align: middle;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t.wmk-tabbar-selected\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #008FD2;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected\n\t\t\t{\n\t\t\t\tcolor: #333;\n\t\t\t\tbackground-color: white;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected:hover\n\t\t\t{\n\t\t\t\tbackground-color: #808080;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #F0F0F0, #D0D0D0);\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected:active\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #00C000;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\t}\n\t\t\t.wmk-tabbar-table\n\t\t\t{\n\t\t\t\tmargin: 1px;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-collapse: collapse;\n\t\t\t}\n\t\t\t.wmk-tabbar-cell\n\t\t\t{\n\t\t\t\tmargin: 0 -1px -1px 0;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-width: 1px;\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-color: #808080;\n\t\t\t}\n\t\t`;\n    }\n}\n//# sourceMappingURL=TabBar.js.map","import { Molecule } from '../mol/Molecule';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nexport class ExtraFieldsWidget extends Widget {\n    constructor(fields) {\n        super();\n        this.fields = fields;\n    }\n    render(parent) {\n        super.render(parent);\n        this.divFields = dom('<div/>').appendTo(this.contentDOM);\n        this.fillTable();\n        let divButtons = dom('<div/>').appendTo(this.contentDOM).css({ 'text-align': 'center' });\n        let btnExtra = dom('<button class=\"wmk-button wmk-button-default\">Extra</button>').appendTo(divButtons);\n        btnExtra.onClick(() => {\n            this.fields.push(Molecule.PREFIX_EXTRA);\n            this.fillTable();\n        });\n        let btnTransient = dom('<button class=\"wmk-button wmk-button-default\">Transient</button>').appendTo(divButtons).css({ 'margin-left': '0.5em' });\n        btnTransient.onClick(() => {\n            this.fields.push(Molecule.PREFIX_TRANSIENT);\n            this.fillTable();\n        });\n    }\n    getExtraFields() {\n        let extra = [];\n        for (let field of this.fields)\n            if (!field.startsWith(Molecule.PREFIX_TRANSIENT) && field.length > 1)\n                extra.push(field);\n        return extra;\n    }\n    getTransientFields() {\n        let transient = [];\n        for (let field of this.fields)\n            if (field.startsWith(Molecule.PREFIX_TRANSIENT) && field.length > 1)\n                transient.push(field);\n        return transient;\n    }\n    fillTable() {\n        this.divFields.empty();\n        if (this.fields.length == 0)\n            return;\n        let table = dom('<table/>').appendTo(this.divFields).css({ 'width': '100%' });\n        let tr = dom('<tr/>').appendTo(table);\n        dom('<td/>').appendTo(tr).css({ 'text-align': 'right', 'font-weight': 'bold', 'text-decoration': 'underline' }).setText('Type');\n        dom('<td/>').appendTo(tr).css({ 'font-weight': 'bold', 'text-decoration': 'underline' }).setText('Value');\n        for (let n = 0; n < this.fields.length; n++) {\n            let strType = '?', strValue = '';\n            if (this.fields[n].length > 0) {\n                strType = this.fields[n].charAt(0);\n                strValue = this.fields[n].substring(1);\n            }\n            tr = dom('<tr/>').appendTo(table);\n            let tdType = dom('<td/>').appendTo(tr).css({ 'text-align': 'right' }), tdValue = dom('<td/>').appendTo(tr), tdButton = dom('<td/>').appendTo(tr);\n            dom('<span/>').appendTo(tdType).css({ 'padding': '0.2em', 'border': '1px solid black', 'background-color': '#C0C0C0' }).setText(strType);\n            let input = dom('<input size=\"20\"/>').appendTo(tdValue).css({ 'width': '100%', 'font': 'inherit' });\n            input.setValue(strValue);\n            input.onInput(() => { this.fields[n] = strType + input.getValue(); });\n            let btnDelete = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\">\\u{2716}</button>').appendTo(tdButton).css({ 'margin-left': '0.5em' });\n            btnDelete.onClick(() => {\n                this.fields.splice(n, 1);\n                this.fillTable();\n            });\n        }\n    }\n}\n//# sourceMappingURL=ExtraFieldsWidget.js.map","import { Chemistry } from '../mol/Chemistry';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nimport { installInlineCSS } from '../util/Theme';\nconst POSITION_TABLE_Y = [\n    1, 1,\n    2, 2, 2, 2, 2, 2, 2, 2,\n    3, 3, 3, 3, 3, 3, 3, 3,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n    6, 6,\n    8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    7, 7,\n    9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7\n];\nconst POSITION_TABLE_X = [\n    1, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nconst CSS_PERIODICTABLE = `\n\t*.wmk-periodictable-element\n\t{\n\t\tborder: 1px solid black;\n\t\tborder-radius: 2px;\n\t\tmargin: 0;\n\t\tmin-width: 2em;\n\t\tpadding: 0.4em 0 0.3em 0;\n\t\ttext-align: center;\n\t\tcolor: #FFFFFF;\n\t\tcursor: pointer;\n\t}\n\t*.wmk-periodictable-block1\n\t{\n\t\tbackground-color: #313062;\n\t}\n\t*.wmk-periodictable-block1:hover\n\t{\n\t\tbackground-color: #414072;\n\t}\n\t*.wmk-periodictable-block2\n\t{\n\t\tbackground-color: #205224;\n\t}\n\t*.wmk-periodictable-block2:hover\n\t{\n\t\tbackground-color: #306234;\n\t}\n\t*.wmk-periodictable-block3\n\t{\n\t\tbackground-color: #522818;\n\t}\n\t*.wmk-periodictable-block3:hover\n\t{\n\t\tbackground-color: #623828;\n\t}\n\t*.wmk-periodictable-block4\n\t{\n\t\tbackground-color: #575212;\n\t}\n\t*.wmk-periodictable-block4:block\n\t{\n\t\tbackground-color: #676222;\n\t}\n\t*.wmk-periodictable-selected\n\t{\n\t\tbackground-color: #FFFFFF !important;\n\t\tcolor: #000000 !important;\n\t\tcursor: default;\n\t}\n`;\nexport class PeriodicTableWidget extends Widget {\n    constructor() {\n        super();\n        this.divList = [];\n        this.selectedAtno = [];\n        installInlineCSS('periodictable', CSS_PERIODICTABLE);\n    }\n    render(parent) {\n        super.render(parent);\n        let grid = dom('<div/>').appendTo(this.contentDOM).css({ 'display': 'grid' });\n        grid.css({ 'align-items': 'center', 'justify-content': 'start', 'gap': '1px' });\n        let row = POSITION_TABLE_Y.map((y) => Math.round(2 * y) + 1);\n        let col = POSITION_TABLE_X.map((x) => Math.round(2 * x) + 1);\n        let num = row.length;\n        for (let n = 0; n < num; n++) {\n            let div = dom('<div/>').appendTo(grid);\n            div.css({ 'grid-row': `${row[n]} / span 2`, 'grid-column': `${col[n]} / span 2` });\n            div.addClass('wmk-periodictable-element');\n            let blk = Chemistry.ELEMENT_BLOCKS[n + 1];\n            if (blk == 1)\n                div.addClass('wmk-periodictable-block1');\n            else if (blk == 2)\n                div.addClass('wmk-periodictable-block2');\n            else if (blk == 3)\n                div.addClass('wmk-periodictable-block3');\n            else if (blk == 4)\n                div.addClass('wmk-periodictable-block4');\n            let el = Chemistry.ELEMENTS[n + 1];\n            div.setText(el);\n            this.divList.push(div);\n            div.onClick(() => {\n                this.changeElement(el);\n                this.callbackSelect(el);\n            });\n            div.onDblClick((event) => {\n                this.callbackDoubleClick();\n                event.preventDefault();\n                event.stopPropagation();\n            });\n        }\n    }\n    onSelect(callback) {\n        this.callbackSelect = callback;\n    }\n    onDoubleClick(callback) {\n        this.callbackDoubleClick = callback;\n    }\n    changeElement(element) {\n        let atno = Chemistry.ELEMENTS.indexOf(element);\n        this.selectedAtno = [atno];\n        this.updateSelected();\n    }\n    setSelectedElements(elementList) {\n        this.selectedAtno = elementList.map((el) => Chemistry.ELEMENTS.indexOf(el)).filter((atno) => atno > 0);\n        this.updateSelected();\n    }\n    updateSelected() {\n        for (let n = 1; n <= this.divList.length; n++) {\n            if (this.selectedAtno.includes(n))\n                this.divList[n - 1].addClass('wmk-periodictable-selected');\n            else\n                this.divList[n - 1].removeClass('wmk-periodictable-selected');\n        }\n    }\n}\n//# sourceMappingURL=PeriodicTableWidget.js.map","import { QueryUtil } from '../mol/QueryUtil';\nimport { OptionList } from '../ui/OptionList';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nimport { Vec } from '../util/Vec';\nexport class QueryFieldsWidget extends Widget {\n    constructor(mol, atom, bond) {\n        super();\n        this.mol = mol;\n        this.atom = atom;\n        this.bond = bond;\n    }\n    render(parent) {\n        super.render(parent);\n        let grid = dom('<div/>').appendTo(this.contentDOM);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[title] auto [value] auto [end]' });\n        let row = 0;\n        let makeInput = () => {\n            let input = dom('<input size=\"20\"/>').appendTo(grid).css({ 'grid-area': `${row} / value` });\n            return input;\n        };\n        let makeToggleInput = () => {\n            let div = dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value`, 'dispkay': 'flex' });\n            let lbl = dom('<label/>').appendTo(div).css({ 'margin-right': '0.5em' });\n            let chk = dom('<input type=\"checkbox\"/>').appendTo(lbl);\n            lbl.appendText('Not');\n            let input = dom('<input size=\"20\"/>').appendTo(div).css({ 'flex-grow': '1' });\n            return [chk, input];\n        };\n        if (this.atom > 0) {\n            dom('<div>Charges</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputCharges = makeInput();\n            dom('<div>Aromatic</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.optAromatic = new OptionList(['Maybe', 'Yes', 'No']);\n            this.optAromatic.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value` }));\n            dom('<div>Unsaturated</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.optUnsaturated = new OptionList(['Maybe', 'Yes', 'No']);\n            this.optUnsaturated.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value` }));\n            dom('<div>Elements</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            [this.chkNotElements, this.inputElements] = makeToggleInput();\n            dom('<div>Ring Sizes</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            [this.chkNotRingSizes, this.inputRingSizes] = makeToggleInput();\n            dom('<div>Ring Block</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.optRingBlock = new OptionList(['Maybe', 'Yes', 'No']);\n            this.optRingBlock.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value` }));\n            dom('<div># Small Rings</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputNumRings = makeInput();\n            dom('<div># Ring Bonds</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputRingBonds = makeInput();\n            dom('<div>Adjacency</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputAdjacency = makeInput();\n            dom('<div>Bond Sums</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputBondSums = makeInput();\n            dom('<div>Valences</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputValences = makeInput();\n            dom('<div>Hydrogens</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputHydrogens = makeInput();\n            dom('<div>Isotopes</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputIsotopes = makeInput();\n            this.setupAtom();\n        }\n        else {\n            dom('<div>Ring Sizes</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            [this.chkNotRingSizes, this.inputRingSizes] = makeToggleInput();\n            dom('<div>Ring Block</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.optRingBlock = new OptionList(['Maybe', 'Yes', 'No']);\n            this.optRingBlock.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value` }));\n            dom('<div># Small Rings</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputNumRings = makeInput();\n            dom('<div>Bond Orders</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputOrders = makeInput();\n            this.setupBond();\n        }\n    }\n    updateAtom() {\n        const { mol, atom } = this;\n        QueryUtil.deleteQueryAtomAll(mol, atom);\n        let chg = this.splitNumbers(this.inputCharges.getValue());\n        if (chg)\n            QueryUtil.setQueryAtomCharges(mol, atom, chg);\n        let arom = this.optAromatic.getSelectedIndex();\n        if (arom > 0)\n            QueryUtil.setQueryAtomAromatic(mol, atom, arom == 1);\n        let unsat = this.optUnsaturated.getSelectedIndex();\n        if (unsat > 0)\n            QueryUtil.setQueryAtomUnsaturated(mol, atom, unsat == 1);\n        let elem = this.splitStrings(this.inputElements.getValue());\n        if (elem) {\n            if (!this.chkNotElements.elInput.checked)\n                QueryUtil.setQueryAtomElements(mol, atom, elem);\n            else\n                QueryUtil.setQueryAtomElementsNot(mol, atom, elem);\n        }\n        let ringsz = this.splitNumbers(this.inputRingSizes.getValue());\n        if (ringsz) {\n            if (!this.chkNotRingSizes.elInput.checked)\n                QueryUtil.setQueryAtomRingSizes(mol, atom, ringsz);\n            else\n                QueryUtil.setQueryAtomRingSizesNot(mol, atom, ringsz);\n        }\n        let ringblk = this.optRingBlock.getSelectedIndex();\n        if (ringblk > 0)\n            QueryUtil.setQueryAtomRingBlock(mol, atom, ringblk == 1);\n        let nring = this.splitNumbers(this.inputNumRings.getValue());\n        if (nring)\n            QueryUtil.setQueryAtomNumRings(mol, atom, nring);\n        let rbc = this.splitNumbers(this.inputRingBonds.getValue());\n        if (rbc)\n            QueryUtil.setQueryAtomRingBonds(mol, atom, rbc);\n        let adj = this.splitNumbers(this.inputAdjacency.getValue());\n        if (adj)\n            QueryUtil.setQueryAtomAdjacency(mol, atom, adj);\n        let bond = this.splitNumbers(this.inputBondSums.getValue());\n        if (bond)\n            QueryUtil.setQueryAtomBondSums(mol, atom, bond);\n        let val = this.splitNumbers(this.inputValences.getValue());\n        if (val)\n            QueryUtil.setQueryAtomValences(mol, atom, val);\n        let hyd = this.splitNumbers(this.inputHydrogens.getValue());\n        if (hyd)\n            QueryUtil.setQueryAtomHydrogens(mol, atom, hyd);\n        let iso = this.splitNumbers(this.inputIsotopes.getValue());\n        if (iso)\n            QueryUtil.setQueryAtomIsotope(mol, atom, iso);\n    }\n    updateBond() {\n        const { mol, bond } = this;\n        QueryUtil.deleteQueryBondAll(mol, bond);\n        let ringsz = this.splitNumbers(this.inputRingSizes.getValue());\n        if (ringsz) {\n            if (!this.chkNotRingSizes.elInput.checked)\n                QueryUtil.setQueryBondRingSizes(mol, bond, ringsz);\n            else\n                QueryUtil.setQueryBondRingSizesNot(mol, bond, ringsz);\n        }\n        let ringblk = this.optRingBlock.getSelectedIndex();\n        if (ringblk > 0)\n            QueryUtil.setQueryBondRingBlock(mol, bond, ringblk == 1);\n        let nring = this.splitNumbers(this.inputNumRings.getValue());\n        if (nring)\n            QueryUtil.setQueryBondNumRings(mol, bond, nring);\n        let order = this.splitNumbers(this.inputOrders.getValue());\n        if (order)\n            QueryUtil.setQueryBondOrders(mol, bond, order);\n    }\n    setupAtom() {\n        const { mol, atom } = this;\n        let chg = QueryUtil.queryAtomCharges(mol, atom);\n        let arom = QueryUtil.queryAtomAromatic(mol, atom);\n        let unsat = QueryUtil.queryAtomUnsaturated(mol, atom);\n        let elem = QueryUtil.queryAtomElements(mol, atom);\n        let elemNot = QueryUtil.queryAtomElementsNot(mol, atom);\n        let ringsz = QueryUtil.queryAtomRingSizes(mol, atom);\n        let ringszNot = QueryUtil.queryAtomRingSizesNot(mol, atom);\n        let ringblk = QueryUtil.queryAtomRingBlock(mol, atom);\n        let nring = QueryUtil.queryAtomNumRings(mol, atom);\n        let rbc = QueryUtil.queryAtomRingBonds(mol, atom);\n        let adj = QueryUtil.queryAtomAdjacency(mol, atom);\n        let bond = QueryUtil.queryAtomBondSums(mol, atom);\n        let val = QueryUtil.queryAtomValences(mol, atom);\n        let hyd = QueryUtil.queryAtomHydrogens(mol, atom);\n        let iso = QueryUtil.queryAtomIsotope(mol, atom);\n        let frag = QueryUtil.queryAtomSubFrags(mol, atom);\n        let fragNot = QueryUtil.queryAtomSubFragsNot(mol, atom);\n        this.inputCharges.setValue(Vec.notBlank(chg) ? chg.join(',') : '');\n        this.optAromatic.setSelectedIndex(arom == null ? 0 : arom ? 1 : 2);\n        this.optUnsaturated.setSelectedIndex(unsat == null ? 0 : unsat ? 1 : 2);\n        this.chkNotElements.elInput.checked = Vec.isBlank(elem) && Vec.notBlank(elemNot);\n        this.inputElements.setValue(Vec.notBlank(elem) ? elem.join(',') : Vec.notBlank(elemNot) ? elemNot.join(',') : '');\n        this.chkNotRingSizes.elInput.checked = Vec.isBlank(ringsz) && Vec.notBlank(ringszNot);\n        this.inputRingSizes.setValue(Vec.notBlank(ringsz) ? ringsz.join(',') : Vec.notBlank(ringszNot) ? ringszNot.join(',') : '');\n        this.optRingBlock.setSelectedIndex(ringblk == null ? 0 : ringblk ? 1 : 2);\n        this.inputNumRings.setValue(Vec.notBlank(nring) ? nring.join(',') : '');\n        this.inputRingBonds.setValue(Vec.notBlank(rbc) ? rbc.join(',') : '');\n        this.inputAdjacency.setValue(Vec.notBlank(adj) ? adj.join(',') : '');\n        this.inputBondSums.setValue(Vec.notBlank(bond) ? bond.join(',') : '');\n        this.inputValences.setValue(Vec.notBlank(val) ? val.join(',') : '');\n        this.inputHydrogens.setValue(Vec.notBlank(hyd) ? hyd.join(',') : '');\n        this.inputIsotopes.setValue(Vec.notBlank(iso) ? iso.join(',') : '');\n    }\n    setupBond() {\n        const { mol, bond } = this;\n        let ringsz = QueryUtil.queryBondRingSizes(mol, bond);\n        let ringszNot = QueryUtil.queryBondRingSizesNot(mol, bond);\n        let ringblk = QueryUtil.queryBondRingBlock(mol, bond);\n        let nring = QueryUtil.queryBondNumRings(mol, bond);\n        let order = QueryUtil.queryBondOrders(mol, bond);\n        this.chkNotRingSizes.elInput.checked = Vec.isBlank(ringsz) && Vec.notBlank(ringszNot);\n        this.inputRingSizes.setValue(Vec.notBlank(ringsz) ? ringsz.join(',') : Vec.notBlank(ringszNot) ? ringszNot.join(',') : '');\n        this.optRingBlock.setSelectedIndex(ringblk == null ? 0 : ringblk ? 1 : 2);\n        this.inputNumRings.setValue(Vec.notBlank(nring) ? nring.join(',') : '');\n        this.inputOrders.setValue(Vec.notBlank(order) ? order.join(',') : '');\n    }\n    splitStrings(str) {\n        let list = [];\n        if (str)\n            for (let bit of str.split(/[\\s\\,\\;]+/))\n                if (bit)\n                    list.push(bit);\n        return list.length ? list : null;\n    }\n    splitNumbers(str) {\n        let list = [];\n        if (str)\n            for (let bit of str.split(/[\\s\\,\\;]+/)) {\n                if (bit.startsWith('+'))\n                    bit = bit.substring(1);\n                let num = parseInt(bit);\n                if (!isNaN(num))\n                    list.push(num);\n            }\n        return list.length ? list : null;\n    }\n}\n//# sourceMappingURL=QueryFieldsWidget.js.map","import { AbbrevContainer } from '../data/AbbrevContainer';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { Dialog } from '../dialog/Dialog';\nimport { OutlineMeasurement } from '../gfx/ArrangeMeasurement';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { ClipboardProxyHandler } from '../ui/ClipboardProxy';\nimport { OptionList } from '../ui/OptionList';\nimport { TabBar } from '../ui/TabBar';\nimport { dom } from '../util/dom';\nimport { Theme } from '../util/Theme';\nimport { angleDiffPos, colourCode, DEGRAD, norm_xy, RADDEG } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { ExtraFieldsWidget } from './ExtraFieldsWidget';\nimport { GeomWidget, GeomWidgetSelType, GeomWidgetType } from './GeomWidget';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nimport { PeriodicTableWidget } from './PeriodicTableWidget';\nimport { QueryFieldsWidget } from './QueryFieldsWidget';\nexport class EditAtom extends Dialog {\n    constructor(mol, atom, proxyClip, callbackApply) {\n        super();\n        this.atom = atom;\n        this.proxyClip = proxyClip;\n        this.callbackApply = callbackApply;\n        this.newX = 0;\n        this.newY = 0;\n        this.tabs = null;\n        this.abbrevList = null;\n        this.svgAbbrev = null;\n        this.abbrevIndices = [];\n        this.currentAbbrev = -1;\n        this.initMol = mol;\n        this.mol = mol.clone();\n        this.title = 'Edit Atom';\n        this.minPortionWidth = 20;\n        this.maxPortionWidth = 95;\n    }\n    populate() {\n        this.proxyClip.pushHandler(new ClipboardProxyHandler());\n        let buttons = this.buttonsDOM(), body = this.bodyDOM();\n        this.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnApply.onClick(() => this.applyChanges());\n        if (this.atom > 0) {\n            this.tabs = new TabBar(['Atom', 'Abbreviation', 'Geometry', 'Query', 'Extra']);\n            this.tabs.render(body);\n            this.tabs.onSelect((idx) => this.selectedTab(idx));\n            this.populateAtom(this.tabs.getPanelDOM('Atom'));\n            this.populateAbbreviation(this.tabs.getPanelDOM('Abbreviation'));\n            if (this.atom > 0)\n                this.populateGeometry(this.tabs.getPanelDOM('Geometry'));\n            this.populateQuery(this.tabs.getPanelDOM('Query'));\n            this.populateExtra(this.tabs.getPanelDOM('Extra'));\n        }\n        else {\n            this.populateAtom(body);\n        }\n        let focusable = body.findAll('input,textarea');\n        if (focusable.length > 0)\n            focusable[0].grabFocus(true);\n        for (let dom of focusable) {\n            dom.css({ 'font': 'inherit' });\n            dom.onKeyDown((event) => {\n                if (event.key == \"Enter\")\n                    this.applyChanges();\n                else if (event.key == \"Escape\")\n                    this.close();\n                else if (event.key == \"PageUp\") {\n                    this.tabs.rotateSelected(-1);\n                    this.selectedTab(this.tabs.getSelectedIndex());\n                    event.preventDefault();\n                }\n                else if (event.key == \"PageDown\") {\n                    this.tabs.rotateSelected(1);\n                    this.selectedTab(this.tabs.getSelectedIndex());\n                    event.preventDefault();\n                }\n                event.stopPropagation();\n            });\n        }\n    }\n    close() {\n        this.proxyClip.popHandler();\n        super.close();\n    }\n    applyChanges() {\n        this.mol.keepTransient = true;\n        this.updateMolecule();\n        let selTab = this.tabs ? this.tabs.getSelectedValue() : null;\n        if (selTab == 'Abbreviation')\n            this.updateAbbrev();\n        if (selTab == 'Geometry')\n            this.updateGeometry();\n        if (selTab == 'Query')\n            this.updateQuery();\n        if (selTab == 'Extra')\n            this.updateExtra();\n        this.mol.keepTransient = false;\n        if (this.callbackApply)\n            this.callbackApply(this);\n    }\n    populateAtom(panel) {\n        let grid = dom('<div/>').appendTo(panel);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]' });\n        grid.appendHTML('<div style=\"grid-area: 1 / col0;\">Symbol</div>');\n        this.inputSymbol = dom('<input size=\"20\"/>').appendTo(grid);\n        this.inputSymbol.css({ 'grid-area': '1 / col1 / auto / col4}' });\n        this.inputSymbol.onInput(() => this.periodicWidget.changeElement(this.inputSymbol.getValue()));\n        grid.appendHTML('<div style=\"grid-area: 2 / col0;\">Charge</div>');\n        this.inputCharge = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n        this.inputCharge.css({ 'grid-area': '2 / col1' });\n        grid.appendHTML('<div style=\"grid-area: 2 / col2;\">Unpaired</div>');\n        this.inputUnpaired = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n        this.inputUnpaired.css({ 'grid-area': '2 / col3' });\n        grid.appendHTML('<div style=\"grid-area: 3 / col0;\">Hydrogens</div>');\n        this.optionHydrogen = new OptionList(['Auto', 'None', '1', '2', '3', '4', 'Other']);\n        this.optionHydrogen.render(dom('<div style=\"grid-area: 3 / col1 / auto / col3\"/>').appendTo(grid));\n        this.optionHydrogen.onSelect((idx) => this.inputHydrogen.elInput.disabled = idx != 6);\n        this.inputHydrogen = dom('<input type=\"number\" size=\"4\"/>').appendTo(grid);\n        this.inputHydrogen.css({ 'grid-area': '3 / col3' });\n        this.inputHydrogen.elInput.disabled = true;\n        grid.appendHTML('<div style=\"grid-area: 4 / col0;\">Isotope</div>');\n        this.optionIsotope = new OptionList(['Natural', 'Enriched']);\n        this.optionIsotope.render(dom('<div style=\"grid-area: 4 / col1 / auto / col3\"/>').appendTo(grid));\n        this.optionIsotope.onSelect((idx) => this.inputIsotope.elInput.disabled = idx == 0);\n        this.inputIsotope = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n        this.inputIsotope.css({ 'grid-area': '4 / col3' });\n        this.inputIsotope.elInput.disabled = true;\n        grid.appendHTML('<div style=\"grid-area: 5 / col0;\">Mapping</div>');\n        this.inputMapping = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n        this.inputMapping.css({ 'grid-area': '5 / col1' });\n        grid.appendHTML('<div style=\"grid-area: 5 / col2;\">Index</div>');\n        this.inputIndex = dom('<input type=\"number\" size=\"6\" readonly=\"readonly\"/>').appendTo(grid);\n        this.inputIndex.css({ 'grid-area': '5 / col3' });\n        let divPeriodic = dom('<div/>').appendTo(grid).css({ 'grid-area': '6 / start / 6 / end' });\n        this.periodicWidget = new PeriodicTableWidget();\n        this.periodicWidget.onSelect((element) => this.inputSymbol.setValue(element));\n        this.periodicWidget.onDoubleClick(() => this.applyChanges());\n        this.periodicWidget.render(divPeriodic);\n        const mol = this.mol, atom = this.atom;\n        if (atom > 0) {\n            this.inputSymbol.setValue(mol.atomElement(atom));\n            this.inputCharge.setValue(mol.atomCharge(atom).toString());\n            this.inputUnpaired.setValue(mol.atomUnpaired(atom).toString());\n            let hc = mol.atomHExplicit(atom);\n            if (hc == Molecule.HEXPLICIT_UNKNOWN) {\n                this.optionHydrogen.setSelectedIndex(0);\n                this.inputHydrogen.setValue(mol.atomHydrogens(atom).toString());\n                this.inputHydrogen.elInput.disabled = true;\n            }\n            else if (hc <= 4) {\n                this.optionHydrogen.setSelectedIndex(hc + 1);\n                this.inputHydrogen.setValue(hc.toString());\n                this.inputHydrogen.elInput.disabled = true;\n            }\n            else {\n                this.optionHydrogen.setSelectedIndex(6);\n                this.inputHydrogen.setValue(hc.toString());\n                this.inputHydrogen.elInput.disabled = false;\n            }\n            this.optionIsotope.setSelectedIndex(mol.atomIsotope(atom) == Molecule.ISOTOPE_NATURAL ? 0 : 1);\n            if (mol.atomIsotope(atom) != Molecule.ISOTOPE_NATURAL)\n                this.inputIsotope.setValue(mol.atomIsotope(atom).toString());\n            this.inputIsotope.elInput.disabled = mol.atomIsotope(atom) == Molecule.ISOTOPE_NATURAL;\n            this.inputMapping.setValue(mol.atomMapNum(atom).toString());\n            this.inputIndex.setValue(atom.toString());\n            this.periodicWidget.changeElement(mol.atomElement(atom));\n        }\n    }\n    populateAbbreviation(panel) {\n        let divFlex = dom('<div/>').appendTo(panel).css({ 'display': 'flex', 'align-items': 'flex-start' });\n        divFlex.css({ 'max-width': '60vw', 'max-height': '50vh', 'overflow-y': 'scroll' });\n        let spanSearch = dom('<div/>').appendTo(divFlex).css({ 'margin-right': '0.5em', 'flex': '0 0' });\n        let spanList = dom('<div/>').appendTo(divFlex).css({ 'flex': '1 1 100%' });\n        this.inputAbbrevSearch = dom('<input size=\"10\"/>').appendTo(spanSearch);\n        this.inputAbbrevSearch.setAttr('placeholder', 'Search');\n        let lastSearch = '';\n        this.inputAbbrevSearch.onKeyDown((event) => {\n            if (event.key == \"ArrowUp\")\n                this.cycleAbbreviation(-1);\n            else if (event.key == \"ArrowDown\")\n                this.cycleAbbreviation(1);\n        });\n        this.inputAbbrevSearch.onInput(() => {\n            let search = this.inputAbbrevSearch.getValue();\n            if (search == lastSearch)\n                return;\n            lastSearch = search;\n            this.fillAbbreviations();\n        });\n        let divButtons = dom('<div/>').appendTo(spanSearch).css({ 'margin-top': '0.5em' });\n        let btnClear = dom('<button class=\"wmk-button wmk-button-default\">Clear</button>').appendTo(divButtons);\n        btnClear.onClick(() => {\n            this.selectAbbreviation(-1);\n            if (this.atom > 0 && MolUtil.hasAbbrev(this.mol, this.atom))\n                this.applyChanges();\n        });\n        this.tableAbbrev = dom('<table/>').appendTo(spanList).css({ 'border-collapse': 'collapse', 'width': '100%' });\n        this.fillAbbreviations();\n    }\n    populateGeometry(panel) {\n        const { mol, atom } = this;\n        let divContainer1 = dom('<div/>').appendTo(panel).css({ 'text-align': 'center' });\n        let divContainer2 = dom('<div/>').appendTo(divContainer1).css({ 'display': 'inline-block' });\n        let grid = dom('<div/>').appendTo(divContainer2);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]' });\n        this.geomWidget = new GeomWidget(GeomWidgetType.Atom, mol, atom);\n        this.geomWidget.render(dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col0 / auto / col4', 'text-align': 'center' }));\n        let label1 = dom('<div/>').appendTo(grid).css({ 'grid-area': '2 / col0' });\n        this.inputGeom1 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({ 'grid-area': '2 / col1' });\n        let label2 = dom('<div/>').appendTo(grid).css({ 'grid-area': '2 / col2' });\n        this.inputGeom2 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({ 'grid-area': '2 / col3' });\n        this.geomWidget.callbackSelect = (sel) => {\n            let atoms = this.geomWidget.selectionAtoms(sel);\n            if (sel.type == GeomWidgetSelType.Position) {\n                label1.setText('Position X');\n                label2.setText('Y');\n                this.inputGeom1.setValue(this.refGeom1 = mol.atomX(atoms[0]).toFixed(3));\n                this.inputGeom2.setValue(this.refGeom2 = mol.atomY(atoms[0]).toFixed(3));\n            }\n            else if (sel.type == GeomWidgetSelType.Link) {\n                let dx = mol.atomX(atoms[1]) - mol.atomX(atoms[0]), dy = mol.atomY(atoms[1]) - mol.atomY(atoms[0]);\n                label1.setText('Distance');\n                label2.setText('Angle');\n                this.inputGeom1.setValue(this.refGeom1 = norm_xy(dx, dy).toFixed(3));\n                this.inputGeom2.setValue(this.refGeom2 = (Math.atan2(dy, dx) * RADDEG).toFixed(1));\n            }\n            else if (sel.type == GeomWidgetSelType.Torsion) {\n                let cx = mol.atomX(atoms[0]), cy = mol.atomY(atoms[0]);\n                let th2 = Math.atan2(mol.atomY(atoms[1]) - cy, mol.atomX(atoms[1]) - cx);\n                let th1 = Math.atan2(mol.atomY(atoms[2]) - cy, mol.atomX(atoms[2]) - cx);\n                label1.setText('Angle');\n                label2.setText('');\n                this.inputGeom1.setValue(this.refGeom1 = (angleDiffPos(th2, th1) * RADDEG).toFixed(1));\n                this.inputGeom2.setValue(this.refGeom2 = '');\n            }\n            label2.setCSS('display', sel.type == GeomWidgetSelType.Torsion ? 'none' : 'block');\n            this.inputGeom2.setCSS('display', sel.type == GeomWidgetSelType.Torsion ? 'none' : 'block');\n        };\n        this.geomWidget.callbackSelect(this.geomWidget.selected);\n    }\n    populateQuery(panel) {\n        this.queryWidget = new QueryFieldsWidget(this.mol, this.atom, 0);\n        this.queryWidget.render(panel);\n    }\n    populateExtra(panel) {\n        let fields = [...this.mol.atomExtra(this.atom), ...this.mol.atomTransient(this.atom)];\n        this.fieldsWidget = new ExtraFieldsWidget(fields);\n        this.fieldsWidget.render(panel);\n    }\n    updateMolecule() {\n        let { mol, atom } = this;\n        if (atom == 0)\n            atom = this.atom = mol.addAtom('C', this.newX, this.newY);\n        let sym = this.inputSymbol.getValue();\n        if (sym != '')\n            mol.setAtomElement(atom, sym);\n        let chg = parseInt(this.inputCharge.getValue());\n        if (chg > -20 && chg < 20)\n            mol.setAtomCharge(atom, chg);\n        let unp = parseInt(this.inputUnpaired.getValue());\n        if (unp >= 0 && unp < 20)\n            mol.setAtomUnpaired(atom, unp);\n        let hcidx = this.optionHydrogen.getSelectedIndex();\n        if (hcidx == 0)\n            mol.setAtomHExplicit(atom, Molecule.HEXPLICIT_UNKNOWN);\n        else if (hcidx <= 5)\n            mol.setAtomHExplicit(atom, hcidx - 1);\n        else {\n            let hyd = parseInt(this.inputHydrogen.getValue());\n            if (hyd >= 0 && hyd < 20)\n                mol.setAtomHExplicit(atom, hyd);\n        }\n        if (this.optionIsotope.getSelectedIndex() == 1) {\n            let iso = parseInt(this.inputIsotope.getValue());\n            if (iso >= 0 && iso < 300)\n                mol.setAtomIsotope(atom, iso);\n        }\n        else\n            mol.setAtomIsotope(atom, Molecule.ISOTOPE_NATURAL);\n        let map = parseInt(this.inputMapping.getValue());\n        if (!isNaN(map))\n            mol.setAtomMapNum(atom, map);\n    }\n    updateAbbrev() {\n        const { mol, atom } = this;\n        if (this.currentAbbrev < 0) {\n            let el = mol.atomElement(atom);\n            MolUtil.clearAbbrev(mol, atom);\n            mol.setAtomElement(atom, el);\n        }\n        else {\n            let abbrev = this.abbrevList[this.currentAbbrev];\n            mol.setAtomElement(atom, abbrev.name);\n            MolUtil.setAbbrev(mol, atom, abbrev.frag);\n        }\n    }\n    updateGeometry() {\n        let strval1 = this.inputGeom1.getValue(), strval2 = this.inputGeom2.getValue();\n        if (this.refGeom1 == strval1 && this.refGeom2 == strval2)\n            return;\n        const { mol } = this;\n        let sel = this.geomWidget.selected, atoms = this.geomWidget.selectionAtoms(sel);\n        if (sel.type == GeomWidgetSelType.Position) {\n            let x = parseFloat(strval1), y = parseFloat(strval2);\n            if (isNaN(x) || isNaN(y) || Math.abs(x) > 1E6 || Math.abs(y) > 1E6)\n                return;\n            mol.setAtomPos(atoms[0], x, y);\n        }\n        else if (sel.type == GeomWidgetSelType.Link) {\n            if (this.refGeom1 != strval1) {\n                let dist = parseFloat(strval1);\n                if (isNaN(dist) || Math.abs(dist) > 100)\n                    return;\n                let mask = Vec.booleanArray(false, mol.numAtoms);\n                mask[atoms[1] - 1] = true;\n                let instate = { mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), 'selectedMask': mask };\n                let molact = new MoleculeActivity(instate, ActivityType.BondDist, { dist });\n                molact.execute();\n                if (molact.output.mol)\n                    this.mol = molact.output.mol;\n                return;\n            }\n            else if (this.refGeom2 != strval2) {\n                let angle = parseFloat(strval2);\n                if (isNaN(angle))\n                    return;\n                let mask = Vec.booleanArray(false, mol.numAtoms);\n                mask[atoms[1] - 1] = true;\n                let instate = { mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), selectedMask: mask };\n                let molact = new MoleculeActivity(instate, ActivityType.AlignAngle, { angle: angle * DEGRAD });\n                molact.execute();\n                if (molact.output.mol)\n                    this.mol = molact.output.mol;\n                return;\n            }\n        }\n        else if (sel.type == GeomWidgetSelType.Torsion) {\n            let angle = parseFloat(strval1);\n            if (isNaN(angle))\n                return;\n            let mask = Vec.booleanArray(false, mol.numAtoms);\n            for (let a of atoms)\n                mask[a - 1] = true;\n            let instate = { mol, currentAtom: atoms[2], currentBond: 0, selectedMask: mask };\n            let molact = new MoleculeActivity(instate, ActivityType.AdjustTorsion, { angle: angle * DEGRAD });\n            molact.execute();\n            if (molact.output.mol)\n                this.mol = molact.output.mol;\n            return;\n        }\n    }\n    updateQuery() {\n        this.queryWidget.updateAtom();\n    }\n    updateExtra() {\n        this.mol.setAtomExtra(this.atom, this.fieldsWidget.getExtraFields());\n        this.mol.setAtomTransient(this.atom, this.fieldsWidget.getTransientFields());\n    }\n    fillAbbreviations() {\n        if (AbbrevContainer.needsSetup()) {\n            setTimeout(() => AbbrevContainer.setupData().then(() => this.fillAbbreviations()), 1);\n            return;\n        }\n        this.tableAbbrev.empty();\n        AbbrevContainer.main.submitMolecule(this.mol, true);\n        this.abbrevList = AbbrevContainer.main.getAbbrevs();\n        if (!this.svgAbbrev) {\n            this.svgAbbrev = [];\n            let policy = RenderPolicy.defaultColourOnWhite(10);\n            let measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n            for (let abbrev of this.abbrevList) {\n                let effects = new RenderEffects();\n                let mol = abbrev.frag.clone();\n                effects.atomCircleSz = Vec.numberArray(0, mol.numAtoms);\n                effects.atomCircleCol = Vec.numberArray(0, mol.numAtoms);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    if (mol.atomElement(n) == MolUtil.ABBREV_ATTACHMENT) {\n                        mol.setAtomElement(n, 'C');\n                        effects.atomCircleSz[n - 1] = 0.2;\n                        effects.atomCircleCol[n - 1] = 0x00C000;\n                    }\n                let layout = new ArrangeMolecule(mol, measure, policy, effects);\n                layout.arrange();\n                let gfx = new MetaVector();\n                new DrawMolecule(layout, gfx).draw();\n                gfx.normalise();\n                this.svgAbbrev.push(gfx.createSVG());\n            }\n            const { mol, atom } = this;\n            if (atom > 0 && MolUtil.hasAbbrev(mol, atom)) {\n                let name = mol.atomElement(atom), mf = MolUtil.molecularFormula(MolUtil.getAbbrev(mol, atom));\n                for (let n = 0; n < this.abbrevList.length; n++)\n                    if (name == this.abbrevList[n].name) {\n                        if (mf == MolUtil.molecularFormula(this.abbrevList[n].frag))\n                            this.currentAbbrev = n;\n                        break;\n                    }\n            }\n        }\n        let tr = dom('<tr/>').appendTo(this.tableAbbrev);\n        tr.appendHTML('<td><u>Label</u></td>');\n        tr.appendHTML('<td><u>Structure</u></td>');\n        this.abbrevEntries = [];\n        this.abbrevIndices = [];\n        let search = this.inputAbbrevSearch.getValue().toLowerCase();\n        for (let n = 0; n < this.abbrevList.length; n++) {\n            if (this.currentAbbrev != n && !this.abbrevList[n].nameSearch.includes(search))\n                continue;\n            let entry = {\n                tr: dom('<tr/>').appendTo(this.tableAbbrev),\n                idx: n,\n                bgcol: this.abbrevEntries.length % 2 == 0 ? '#FFFFFF' : '#F8F8F8'\n            };\n            entry.tr.setCSS('background-color', this.currentAbbrev == entry.idx ? colourCode(Theme.lowlight) : entry.bgcol);\n            let tdLabel = dom('<td/>').appendTo(entry.tr), tdStruct = dom('<td/>').appendTo(entry.tr);\n            tdLabel.setHTML(this.abbrevList[n].nameHTML);\n            dom(this.svgAbbrev[n]).appendTo(tdStruct).css({ 'display': 'block', 'pointer-events': 'none' });\n            entry.tr.css({ 'cursor': 'pointer' });\n            entry.tr.onClick(() => this.selectAbbreviation(n));\n            entry.tr.onDblClick((event) => this.applyChanges());\n            this.abbrevEntries.push(entry);\n            this.abbrevIndices.push(n);\n        }\n    }\n    selectAbbreviation(idx) {\n        if (this.currentAbbrev == idx)\n            return;\n        this.currentAbbrev = idx;\n        for (let entry of this.abbrevEntries) {\n            entry.tr.setCSS('background-color', this.currentAbbrev == entry.idx ? colourCode(Theme.lowlight) : entry.bgcol);\n            if (this.currentAbbrev == entry.idx)\n                entry.tr.el.scrollIntoView({ 'block': 'nearest' });\n        }\n    }\n    cycleAbbreviation(dir) {\n        let sz = this.abbrevIndices.length;\n        if (sz == 0)\n            return;\n        let idx = this.abbrevIndices.indexOf(this.currentAbbrev);\n        if (idx < 0) {\n            if (dir < 0)\n                idx = sz - 1;\n            else\n                idx = 0;\n        }\n        else\n            idx = (idx + sz + dir) % sz;\n        this.selectAbbreviation(this.abbrevIndices[idx]);\n    }\n    selectedTab(idx) {\n        if (idx == 0)\n            this.inputSymbol.grabFocus();\n        else if (idx == 1)\n            this.inputAbbrevSearch.grabFocus();\n        else if (idx == 2)\n            this.inputGeom1.grabFocus();\n    }\n}\n//# sourceMappingURL=EditAtom.js.map","import { Dialog } from '../dialog/Dialog';\nimport { ClipboardProxyHandler } from '../ui/ClipboardProxy';\nimport { OptionList } from '../ui/OptionList';\nimport { TabBar } from '../ui/TabBar';\nimport { dom } from '../util/dom';\nimport { norm_xy } from '../util/util';\nimport { ExtraFieldsWidget } from './ExtraFieldsWidget';\nimport { GeomWidget, GeomWidgetSelType, GeomWidgetType } from './GeomWidget';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nimport { QueryFieldsWidget } from './QueryFieldsWidget';\nexport class EditBond extends Dialog {\n    constructor(mol, bond, proxyClip, callbackApply) {\n        super();\n        this.bond = bond;\n        this.proxyClip = proxyClip;\n        this.callbackApply = callbackApply;\n        this.initMol = mol;\n        this.mol = mol.clone();\n        this.title = 'Edit Bond';\n        this.minPortionWidth = 20;\n        this.maxPortionWidth = 95;\n    }\n    populate() {\n        this.proxyClip.pushHandler(new ClipboardProxyHandler());\n        let buttons = this.buttonsDOM(), body = this.bodyDOM();\n        this.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnApply.onClick(() => this.applyChanges());\n        this.tabs = new TabBar(['Bond', 'Geometry', 'Query', 'Extra']);\n        this.tabs.render(body);\n        this.tabs.onSelect((idx) => this.selectedTab(idx));\n        this.populateBond(this.tabs.getPanelDOM('Bond'));\n        this.populateGeometry(this.tabs.getPanelDOM('Geometry'));\n        this.populateQuery(this.tabs.getPanelDOM('Query'));\n        this.populateExtra(this.tabs.getPanelDOM('Extra'));\n        let focusable = body.findAll('input,textarea');\n        if (focusable.length > 0)\n            focusable[0].grabFocus(true);\n        for (let dom of focusable) {\n            dom.css({ 'font': 'inherit' });\n            dom.onKeyDown((event) => {\n                if (event.key == \"Enter\")\n                    this.applyChanges();\n                else if (event.key == \"Escape\")\n                    this.close();\n                else if (event.key == \"PageUp\") {\n                    this.tabs.rotateSelected(-1);\n                    this.selectedTab(this.tabs.getSelectedIndex());\n                    event.preventDefault();\n                }\n                else if (event.key == \"PageDown\") {\n                    this.tabs.rotateSelected(1);\n                    this.selectedTab(this.tabs.getSelectedIndex());\n                    event.preventDefault();\n                }\n                event.stopPropagation();\n            });\n        }\n    }\n    close() {\n        this.proxyClip.popHandler();\n        super.close();\n    }\n    applyChanges() {\n        this.mol.keepTransient = true;\n        this.updateMolecule();\n        if (this.tabs.getSelectedValue() == 'Geometry')\n            this.updateGeometry();\n        if (this.tabs.getSelectedValue() == 'Query')\n            this.updateQuery();\n        if (this.tabs.getSelectedValue() == 'Extra')\n            this.updateExtra();\n        this.mol.keepTransient = false;\n        if (this.callbackApply)\n            this.callbackApply(this);\n    }\n    populateBond(panel) {\n        const { mol, bond } = this;\n        let grid = dom('<div/>').appendTo(panel);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]' });\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col0' }).setText('Order');\n        let ordersHTML = [];\n        for (let o = 0; o <= 4; o++)\n            ordersHTML.push(`&nbsp;&nbsp;${o}&nbsp;&nbsp;`);\n        this.optionOrder = new OptionList(ordersHTML);\n        this.optionOrder.htmlLabels = true;\n        this.optionOrder.setSelectedIndex(mol.bondOrder(bond));\n        this.optionOrder.render(dom('<div/>').appendTo(grid).css({ 'grid-column': 'col1 / col4', 'grid-row': '1' }));\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '2 / col0' }).setText('Stereo');\n        this.optionStereo = new OptionList(['None', 'Up', 'Down', 'Unknown']);\n        this.optionStereo.setSelectedIndex(mol.bondType(bond));\n        this.optionStereo.render(dom('<div/>').appendTo(grid).css({ 'grid-column': 'col1 / col4', 'grid-row': '2' }));\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '3 / col0' }).setText('From');\n        this.inputFrom = dom('<input size=\"6\"/>').appendTo(grid).css({ 'grid-area': '3 / col1', 'font': 'inherit' });\n        this.inputFrom.elInput.readOnly = true;\n        this.inputFrom.setValue(mol.bondFrom(bond).toString());\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '3 / col2' }).setText('To');\n        this.inputTo = dom('<input size=\"6\"/>').appendTo(grid).css({ 'grid-area': '3 / col3', 'font': 'inherit' });\n        this.inputTo.elInput.readOnly = true;\n        this.inputTo.setValue(mol.bondTo(bond).toString());\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '4 / col2' }).setText('Index');\n        this.inputIndex = dom('<input size=\"6\"/>').appendTo(grid).css({ 'grid-area': '4 / col3', 'font': 'inherit' });\n        this.inputIndex.elInput.readOnly = true;\n        this.inputIndex.setValue(bond.toString());\n    }\n    populateGeometry(panel) {\n        const { mol, bond } = this;\n        let divContainer1 = dom('<div/>').appendTo(panel).css({ 'text-align': 'center' });\n        let divContainer2 = dom('<div/>').appendTo(divContainer1).css({ 'display': 'inline-block' });\n        let grid = dom('<div/>').appendTo(divContainer2);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2]' });\n        this.geomWidget = new GeomWidget(GeomWidgetType.Bond, mol, bond);\n        this.geomWidget.render(dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col0 / auto / col2', 'text-align': 'center' }));\n        let label1 = dom('<div/>').appendTo(grid).css({ 'grid-area': '2 / col0' });\n        this.inputGeom1 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({ 'grid-area': '2 / col1' });\n        this.geomWidget.callbackSelect = (sel) => {\n            if (sel.type == GeomWidgetSelType.Link) {\n                let a1 = mol.bondFrom(bond), a2 = mol.bondTo(bond);\n                let dx = mol.atomX(a2) - mol.atomX(a1), dy = mol.atomY(a2) - mol.atomY(a1);\n                label1.setText('Distance');\n                this.inputGeom1.setValue(this.refGeom1 = norm_xy(dx, dy).toFixed(3));\n            }\n        };\n        this.geomWidget.callbackSelect(this.geomWidget.selected);\n    }\n    populateQuery(panel) {\n        this.queryWidget = new QueryFieldsWidget(this.mol, 0, this.bond);\n        this.queryWidget.render(panel);\n    }\n    populateExtra(panel) {\n        let fields = [...this.mol.bondExtra(this.bond), ...this.mol.bondTransient(this.bond)];\n        this.fieldsWidget = new ExtraFieldsWidget(fields);\n        this.fieldsWidget.render(panel);\n    }\n    updateMolecule() {\n        let { mol, bond } = this;\n        mol.setBondOrder(bond, this.optionOrder.getSelectedIndex());\n        mol.setBondType(bond, this.optionStereo.getSelectedIndex());\n    }\n    updateGeometry() {\n        let strval1 = this.inputGeom1.getValue();\n        if (this.refGeom1 == strval1)\n            return;\n        const { mol } = this;\n        let sel = this.geomWidget.selected, atoms = this.geomWidget.selectionAtoms(sel);\n        if (sel.type == GeomWidgetSelType.Link) {\n            if (this.refGeom1 != strval1) {\n                let dist = parseFloat(strval1);\n                if (isNaN(dist) || Math.abs(dist) > 100)\n                    return;\n                let instate = { mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), selectedMask: null };\n                let molact = new MoleculeActivity(instate, ActivityType.BondDist, { dist });\n                molact.execute();\n                this.mol = molact.output.mol;\n                return;\n            }\n        }\n    }\n    updateQuery() {\n        this.queryWidget.updateBond();\n    }\n    updateExtra() {\n        this.mol.setBondExtra(this.bond, this.fieldsWidget.getExtraFields());\n        this.mol.setBondTransient(this.bond, this.fieldsWidget.getTransientFields());\n    }\n    selectedTab(idx) {\n        if (idx == 0)\n            this.inputFrom.grabFocus();\n        else if (idx == 1)\n            this.inputGeom1.grabFocus();\n    }\n}\n//# sourceMappingURL=EditBond.js.map","import { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity, PolymerBlockUnit } from '../mol/PolymerBlock';\nimport { Dialog } from '../dialog/Dialog';\nimport { OutlineMeasurement } from '../gfx/ArrangeMeasurement';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { ClipboardProxyHandler } from '../ui/ClipboardProxy';\nimport { OptionList } from '../ui/OptionList';\nimport { dom } from '../util/dom';\nimport { Vec } from '../util/Vec';\nconst CHAR_LOW_A = 'a'.charCodeAt(0), CHAR_UP_A = 'A'.charCodeAt(0);\nfunction indexToAtomLabel(idx) { return String.fromCharCode(CHAR_UP_A + Math.min(26, Math.max(0, idx)) - 1); }\nfunction indexToBondLabel(idx) { return String.fromCharCode(CHAR_LOW_A + Math.min(26, Math.max(0, idx)) - 1); }\nexport class EditPolymer extends Dialog {\n    constructor(mol, atoms, proxyClip, callbackApply) {\n        super();\n        this.atoms = atoms;\n        this.proxyClip = proxyClip;\n        this.callbackApply = callbackApply;\n        this.optionConnect = null;\n        this.optionBondConn = null;\n        this.currentID = 0;\n        this.unit = null;\n        this.borderAtoms = [];\n        this.outBonds = [];\n        this.outAtoms = [];\n        this.initMol = mol;\n        this.mol = mol.clone();\n        this.title = 'Polymer Block';\n        this.minPortionWidth = 20;\n        this.maxPortionWidth = 95;\n        this.polymer = new PolymerBlock(this.mol);\n        atoms = Vec.sorted(atoms);\n        for (let id of this.polymer.getIDList()) {\n            let look = this.polymer.getUnit(id);\n            if (Vec.equals(atoms, look.atoms)) {\n                this.currentID = id;\n                this.unit = look;\n                break;\n            }\n        }\n        if (!this.unit)\n            this.unit = new PolymerBlockUnit(atoms);\n        let umol = this.umol = this.mol.clone();\n        let mask = Vec.booleanArray(false, this.umol.numAtoms);\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let bfr = this.mol.bondFrom(n), bto = this.mol.bondTo(n);\n            let in1 = this.atoms.includes(bfr), in2 = this.atoms.includes(bto);\n            if (in1 || in2)\n                mask[bfr - 1] = mask[bto - 1] = true;\n            if (in1 && !in2) {\n                this.borderAtoms.push(bfr);\n                this.outBonds.push(n);\n                this.outAtoms.push(bto);\n            }\n            if (in2 && !in1) {\n                this.borderAtoms.push(bto);\n                this.outBonds.push(n);\n                this.outAtoms.push(bfr);\n            }\n        }\n        this.borderAtoms = Vec.sortedUnique(this.borderAtoms);\n        this.umap = Vec.maskMap(mask);\n        this.umol = MolUtil.subgraphMask(this.umol, mask);\n        new PolymerBlock(this.umol).removeAll();\n    }\n    populate() {\n        this.proxyClip.pushHandler(new ClipboardProxyHandler());\n        let buttons = this.buttonsDOM(), body = this.bodyDOM();\n        this.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        if (this.currentID == 0)\n            this.btnApply.setText('Create');\n        this.btnApply.onClick(() => this.applyChanges());\n        if (this.currentID > 0) {\n            this.btnRemove = dom('<button class=\"wmk-button wmk-button-default\">Remove</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n            this.btnRemove.onClick(() => this.applyRemove());\n        }\n        let grid = dom('<div/>').appendTo(body);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4] auto [end]' });\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col0' }).setText('# Atoms');\n        let inputNAtoms = dom('<input size=\"5\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col1' }));\n        inputNAtoms.elInput.readOnly = true;\n        inputNAtoms.setValue(this.unit.atoms.length.toString());\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col2' }).setText('Out-bonds');\n        let inputNBond = dom('<input size=\"5\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col3' }));\n        inputNBond.elInput.readOnly = true;\n        inputNBond.setValue(this.outBonds.length.toString());\n        let row = 1;\n        if (this.outBonds.length == 2) {\n            row++;\n            dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0` }).setText('Connectivity');\n            this.optionConnect = new OptionList(['Unknown', 'Head-to-Tail', 'Head-to-Head', 'Random']);\n            this.optionConnect.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col1 / auto / col4` }));\n            if (this.unit.connect == PolymerBlockConnectivity.HeadToTail)\n                this.optionConnect.setSelectedIndex(1);\n            else if (this.unit.connect == PolymerBlockConnectivity.HeadToHead)\n                this.optionConnect.setSelectedIndex(2);\n            else if (this.unit.connect == PolymerBlockConnectivity.Random)\n                this.optionConnect.setSelectedIndex(3);\n        }\n        if (this.outBonds.length == 4 && Vec.uniqueUnstable(this.outAtoms).length == 4) {\n            row++;\n            dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0` }).setText('2x2 Connectivity');\n            this.populate2x2Conn(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col1 / auto / end` }));\n        }\n        let getList = (str) => {\n            if (!str)\n                return null;\n            let list = [];\n            for (let bit of str.split(',')) {\n                let v = parseInt(bit);\n                if (v > 0)\n                    list.push(v);\n                else\n                    return undefined;\n            }\n            return list;\n        };\n        for (let n = 0; n < this.borderAtoms.length; n++) {\n            row++;\n            let domLabel = dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0`, 'text-align': 'right', 'padding-right': '0.5em' });\n            if (n == 0)\n                domLabel.setText('Name ');\n            dom('<span/>').appendTo(domLabel).css({ 'color': '#008000' }).setText(indexToAtomLabel(n + 1));\n            let input = dom('<input size=\"20\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col1 / auto / end`, 'width': '100%' }));\n            let atom = this.borderAtoms[n];\n            let nvals = this.unit.atomName.get(atom);\n            if (nvals)\n                input.setValue(nvals.join(','));\n            input.onInput(() => {\n                let list = getList(input.getValue());\n                if (list !== undefined)\n                    this.unit.atomName.set(atom, list);\n            });\n        }\n        for (let n = 0; n < this.outAtoms.length; n++) {\n            row++;\n            let domLabel = dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0`, 'text-align': 'right', 'padding-right': '0.5em' });\n            if (n == 0)\n                domLabel.setText('Link ');\n            dom('<span/>').appendTo(domLabel).css({ 'color': '#800080' }).setText(indexToBondLabel(n + 1));\n            dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col1` }).setText('Include');\n            let inputIncl = dom('<input size=\"10\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col2`, 'width': '100%' }));\n            dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col3` }).setText('Exclude');\n            let inputExcl = dom('<input size=\"10\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col4`, 'width': '100%' }));\n            let bond = this.outBonds[n];\n            let ivals = this.unit.bondIncl.get(bond), evals = this.unit.bondExcl.get(bond);\n            if (ivals)\n                inputIncl.setValue(ivals.join(','));\n            if (evals)\n                inputExcl.setValue(evals.join(','));\n            inputIncl.onInput(() => {\n                let list = getList(inputIncl.getValue());\n                if (list !== undefined)\n                    this.unit.bondIncl.set(bond, list);\n            });\n            inputExcl.onInput(() => {\n                let list = getList(inputExcl.getValue());\n                if (list !== undefined)\n                    this.unit.bondExcl.set(bond, list);\n            });\n        }\n        row++;\n        this.populateUncap(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0 / auto / col4`, 'text-align': 'center' }));\n        row++;\n        this.divPreview = dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0 / auto / col4`, 'text-align': 'center' });\n        this.renderUnit();\n        let focusable = body.findAll('input,textarea');\n        if (focusable.length > 0)\n            focusable[0].grabFocus(true);\n        for (let dom of focusable) {\n            dom.css({ 'font': 'inherit' });\n            dom.onKeyDown((event) => {\n                let keyCode = event.keyCode || event.which;\n                if (keyCode == 13)\n                    this.applyChanges();\n                if (keyCode == 27)\n                    this.close();\n            });\n        }\n    }\n    close() {\n        this.proxyClip.popHandler();\n        super.close();\n    }\n    populate2x2Conn(div) {\n        const perms = [[0, 1, 2, 3], [0, 1, 3, 2], [0, 2, 1, 3], [0, 2, 3, 1], [0, 3, 1, 2], [0, 3, 2, 1]];\n        let bondConnOptions = [null];\n        let optionList = ['None'];\n        let selidx = 0;\n        for (let perm of perms) {\n            let bonds = Vec.idxGet(this.outBonds, perm);\n            if (Vec.equals(bonds, this.unit.bondConn))\n                selidx = optionList.length;\n            bondConnOptions.push(bonds);\n            optionList.push(`${perm[0] + 1},${perm[1] + 1}:${perm[2] + 1},${perm[3] + 1}`);\n        }\n        this.optionBondConn = new OptionList(optionList);\n        this.optionBondConn.setSelectedIndex(selidx);\n        this.optionBondConn.render(div);\n        this.optionBondConn.onSelect((idx) => {\n            this.unit.bondConn = bondConnOptions[idx];\n            this.renderUnit();\n        });\n    }\n    populateUncap(div) {\n        let uncapAtoms = [];\n        skip: for (let a of this.outAtoms)\n            if (this.mol.atomAdjCount(a) == 1 && this.mol.atomElement(a) != '*') {\n                for (let unit of this.polymer.getUnits())\n                    if (unit.atoms.includes(a))\n                        continue skip;\n                uncapAtoms.push(a);\n            }\n        if (uncapAtoms.length == 0)\n            return;\n        let btnUncap = dom('<button class=\"wmk-button wmk-button-default\">Uncap Exterior</button>').appendTo(div);\n        btnUncap.onClick(() => {\n            btnUncap.elInput.disabled = true;\n            for (let a of uncapAtoms)\n                this.mol.setAtomElement(a, '*');\n        });\n    }\n    applyChanges() {\n        if (this.optionConnect) {\n            let sel = this.optionConnect.getSelectedIndex();\n            if (sel == 0)\n                this.unit.connect = null;\n            else if (sel == 1)\n                this.unit.connect = PolymerBlockConnectivity.HeadToTail;\n            else if (sel == 2)\n                this.unit.connect = PolymerBlockConnectivity.HeadToHead;\n            else if (sel == 3)\n                this.unit.connect = PolymerBlockConnectivity.Random;\n        }\n        if (this.currentID)\n            this.polymer.removeUnit(this.currentID);\n        this.currentID = this.polymer.createUnit(this.unit.clone());\n        this.polymer.rewriteMolecule();\n        this.callbackApply(this);\n    }\n    applyRemove() {\n        if (this.currentID)\n            this.polymer.removeUnit(this.currentID);\n        this.callbackApply(this);\n    }\n    renderUnit() {\n        let umol = this.umol.clone();\n        let policy = RenderPolicy.defaultColourOnWhite(20);\n        let measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n        let effects = new RenderEffects();\n        effects.atomCircleSz = Vec.numberArray(0, umol.numAtoms);\n        effects.atomCircleCol = Vec.numberArray(0, umol.numAtoms);\n        effects.atomDecoText = Vec.stringArray(null, umol.numAtoms);\n        effects.atomDecoCol = Vec.numberArray(null, umol.numAtoms);\n        effects.atomDecoSize = Vec.numberArray(null, umol.numAtoms);\n        let borderAtoms = this.borderAtoms.map((atom) => this.umap[atom - 1] + 1);\n        let outAtoms = this.outAtoms.map((atom) => this.umap[atom - 1] + 1);\n        for (let n = 1; n <= umol.numAtoms; n++) {\n            let bidx = borderAtoms.indexOf(n), oidx = outAtoms.indexOf(n);\n            if (bidx >= 0) {\n                effects.atomDecoText[n - 1] = indexToAtomLabel(bidx + 1);\n                effects.atomDecoCol[n - 1] = 0x008000;\n                effects.atomDecoSize[n - 1] = 0.5;\n            }\n            if (oidx >= 0) {\n                umol.setAtomCharge(n, 0);\n                umol.setAtomUnpaired(n, 0);\n                umol.setAtomIsotope(n, 0);\n                effects.atomCircleSz[n - 1] = 0.1;\n                effects.atomCircleCol[n - 1] = 0xFF00FF;\n                effects.atomDecoText[n - 1] = indexToBondLabel(oidx + 1);\n                effects.atomDecoCol[n - 1] = 0x800080;\n                effects.atomDecoSize[n - 1] = 0.5;\n                umol.setAtomElement(n, 'C');\n            }\n        }\n        let layout = new ArrangeMolecule(umol, measure, policy, effects);\n        layout.arrange();\n        layout.squeezeInto(0, 0, 300, 300);\n        let gfx = new MetaVector();\n        if (this.unit.bondConn) {\n            const LINES = [\n                [0, 1, 0xC86D08, 2, false], [2, 3, 0xC86D08, 2, false],\n                [0, 2, 0xC0C86D08, 1, true], [1, 3, 0xC0C86D08, 1, true]\n            ];\n            for (let [i1, i2, col, sz, circle] of LINES) {\n                let a1 = this.outAtoms[this.outBonds.indexOf(this.unit.bondConn[i1])];\n                let a2 = this.outAtoms[this.outBonds.indexOf(this.unit.bondConn[i2])];\n                let p1 = layout.getPoint(a1 - 1), p2 = layout.getPoint(a2 - 1);\n                gfx.drawLine(p1.oval.cx, p1.oval.cy, p2.oval.cx, p2.oval.cy, col, sz);\n                if (circle) {\n                    for (let f of [0.2, 0.4, 0.6, 0.8]) {\n                        let mx = p1.oval.cx + f * (p2.oval.cx - p1.oval.cx), my = p1.oval.cy + f * (p2.oval.cy - p1.oval.cy);\n                        gfx.drawOval(mx, my, 2, 2, col, sz, null);\n                    }\n                }\n            }\n        }\n        new DrawMolecule(layout, gfx).draw();\n        gfx.normalise();\n        this.divPreview.empty();\n        dom(gfx.createSVG()).appendTo(this.divPreview).css({ 'pointer-events': 'none' });\n    }\n}\n//# sourceMappingURL=EditPolymer.js.map","import { AbbrevContainer } from '../data/AbbrevContainer';\nimport { DataSheetStream } from '../io/DataSheetStream';\nimport { MolUtil } from '../mol/MolUtil';\nimport { OutlineMeasurement } from '../gfx/ArrangeMeasurement';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { ButtonBank } from '../ui/ButtonBank';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nclass TemplateBank extends ButtonBank {\n    constructor(owner, group) {\n        super();\n        this.owner = owner;\n        this.group = group;\n        this.subgroups = null;\n        this.templates = null;\n    }\n    init() {\n        let policy = RenderPolicy.defaultBlackOnWhite();\n        policy.data.pointScale = 10;\n        policy.data.lineSize *= 1.5;\n        policy.data.bondSep *= 1.5;\n        if (TemplateBank.resourceData.length == 0)\n            this.loadResourceData();\n        if (this.group == null)\n            this.prepareSubGroups();\n        else\n            this.prepareTemplates();\n    }\n    update() {\n        if (this.subgroups == null && this.templates == null)\n            return;\n        this.buttons = [];\n        if (this.group == null)\n            this.populateGroups();\n        else\n            this.populateTemplates();\n    }\n    populateGroups() {\n        let groups = this.subgroups.groups, titles = this.subgroups.titles, preview = this.subgroups.preview;\n        for (let n = 0; n < groups.length; n++) {\n            this.buttons.push({ id: groups[n], metavec: preview[n], helpText: titles[n] });\n        }\n    }\n    populateTemplates() {\n        let names = this.templates.names, abbrev = this.templates.abbrev, mnemonic = this.templates.mnemonic, preview = this.templates.preview;\n        for (let n = 0; n < names.length; n++) {\n            this.buttons.push({ id: n.toString(), metavec: preview[n], helpText: names[n] });\n        }\n    }\n    hitButton(id) {\n        if (this.group == null) {\n            this.buttonView.pushBank(new TemplateBank(this.owner, id));\n        }\n        else {\n            let idx = parseInt(id);\n            let param = { fragNative: this.templates.molecules[idx] };\n            new MoleculeActivity(this.owner.getState(), ActivityType.TemplateFusion, param, this.owner).execute();\n        }\n    }\n    loadResourceData() {\n        for (let key of AbbrevContainer.getTemplateKeys()) {\n            let dsstr = AbbrevContainer.getTemplateData(key);\n            TemplateBank.resourceList.push(key);\n            TemplateBank.resourceData.push(DataSheetStream.readXML(dsstr));\n        }\n    }\n    prepareSubGroups() {\n        this.subgroups = { groups: TemplateBank.resourceList, titles: [], preview: [] };\n        let sz = this.buttonView.idealSize, msz = 0.5 * (sz - 2);\n        let policy = RenderPolicy.defaultBlackOnWhite();\n        policy.data.pointScale = 10;\n        let effects = new RenderEffects();\n        let measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n        for (let ds of TemplateBank.resourceData) {\n            this.subgroups.titles.push(ds.title);\n            let colMol = ds.firstColOfType(\"molecule\");\n            let metavec = new MetaVector();\n            for (let n = 0, idx = 0; idx < 4 && n < ds.numRows; n++) {\n                let mol = ds.getMolecule(n, colMol);\n                if (MolUtil.isBlank(mol))\n                    continue;\n                let layout = new ArrangeMolecule(mol, measure, policy, effects);\n                layout.arrange();\n                let col = (idx % 2), row = Math.floor(idx / 2);\n                layout.squeezeInto(1 + col * msz, 1 + row * msz, msz, msz, 1);\n                new DrawMolecule(layout, metavec).draw();\n                idx++;\n            }\n            metavec.width = sz;\n            metavec.height = sz;\n            this.subgroups.preview.push(metavec);\n        }\n        this.buttonView.refreshBank();\n    }\n    prepareTemplates() {\n        let idx = TemplateBank.resourceList.indexOf(this.group);\n        let ds = TemplateBank.resourceData[idx];\n        this.templates = { molecules: [], names: [], abbrev: [], mnemonic: [], preview: [] };\n        let sz = this.buttonView.idealSize;\n        let policy = RenderPolicy.defaultBlackOnWhite();\n        policy.data.pointScale = 12;\n        let effects = new RenderEffects();\n        let measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n        let colMol = ds.findColByName('Molecule');\n        let colName = ds.findColByName('Name');\n        let colAbbrev = ds.findColByName('Abbrev');\n        let colMnemonic = ds.findColByName('Mnemonic');\n        for (let n = 0; n < ds.numRows; n++) {\n            let mol = ds.getMolecule(n, colMol);\n            this.templates.molecules.push(mol.toString());\n            this.templates.names.push(ds.getString(n, colName));\n            this.templates.abbrev.push(ds.getString(n, colAbbrev));\n            this.templates.mnemonic.push(ds.getString(n, colMnemonic));\n            let layout = new ArrangeMolecule(mol, measure, policy, effects);\n            layout.arrange();\n            layout.squeezeInto(0, 0, sz, sz, 2);\n            let metavec = new MetaVector();\n            new DrawMolecule(layout, metavec).draw();\n            metavec.width = sz;\n            metavec.height = sz;\n            this.templates.preview.push(metavec);\n        }\n        this.buttonView.refreshBank();\n    }\n}\nTemplateBank.resourceList = [];\nTemplateBank.resourceData = [];\nexport { TemplateBank };\nimport svgGenericAccept from '../res/img/actions/GenericAccept.svg';\nimport svgTemplatePrev from '../res/img/actions/TemplatePrev.svg';\nimport svgTemplateNext from '../res/img/actions/TemplateNext.svg';\nexport class FusionBank extends ButtonBank {\n    constructor(owner) {\n        super();\n        this.owner = owner;\n    }\n    update() {\n        this.buttons = [];\n        this.buttons.push({ id: 'accept', svg: svgGenericAccept, helpText: 'Apply this template.' });\n        this.buttons.push({ id: 'prev', svg: svgTemplatePrev, helpText: 'Show previous fusion option.' });\n        this.buttons.push({ id: 'next', svg: svgTemplateNext, helpText: 'Show next fusion option.' });\n    }\n    hitButton(id) {\n        if (id == 'accept')\n            this.owner.templateAccept();\n        else if (id == 'prev')\n            this.owner.templateRotate(-1);\n        else if (id == 'next')\n            this.owner.templateRotate(1);\n    }\n    claimKey(event) {\n        if (event.key == \"Enter\") {\n            this.owner.templateAccept();\n            return true;\n        }\n        else if (event.key == \"ArrowLeft\" || event.key == \"ArrowUp\") {\n            this.owner.templateRotate(-1);\n            return true;\n        }\n        else if (event.key == \"ArrowRight\" || event.key == \"ArrowDown\") {\n            this.owner.templateRotate(1);\n            return true;\n        }\n        return false;\n    }\n    bankClosed() {\n        this.owner.clearPermutations();\n    }\n}\n//# sourceMappingURL=TemplateBank.js.map","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"GenericAccept.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainQuit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"159.5736\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"21\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;fill-opacity:1\\\"\\n       d=\\\"M 300.71429,39.285714 C 221.40032,73.699762 164.28823,126.10076 120,210 C 82.667331,182.4368 64.188257,170.57196 8.5714286,174.28571 C 88.702873,232.3286 116.45809,273.89571 131.42857,295 C 138.61324,305.12842 189.62059,127.77256 300.71429,39.285714 z \\\"\\n       id=\\\"path3211\\\"\\n       sodipodi:nodetypes=\\\"cccsc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"TemplatePrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/TemplatePrev.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#fffbfb;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;fill-opacity:1\\\"\\n       d=\\\"M 10,160 L 130,40 L 130,110 L 310,110 L 310,210 L 130,210 C 130,210 130,280 130,280 L 10,160 z \\\"\\n       id=\\\"path2161\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"TemplateNext.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/TemplateNext.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#fffbfb;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 310,160 L 190,40 L 190,110 L 10,110 L 10,210 L 190,210 C 190,210 190,280 190,280 L 310,160 z \\\"\\n       id=\\\"path2161\\\" />\\n  </g>\\n</svg>\\n\";","import { ButtonBank } from '../ui/ButtonBank';\nexport var ToolBankItem;\n(function (ToolBankItem) {\n    ToolBankItem[\"Arrow\"] = \"arrow\";\n    ToolBankItem[\"Rotate\"] = \"rotate\";\n    ToolBankItem[\"Pan\"] = \"pan\";\n    ToolBankItem[\"Drag\"] = \"drag\";\n    ToolBankItem[\"Erasor\"] = \"erasor\";\n    ToolBankItem[\"BondOrder0\"] = \"bond:Order0\";\n    ToolBankItem[\"BondOrder1\"] = \"bond:Order1\";\n    ToolBankItem[\"BondOrder2\"] = \"bond:Order2\";\n    ToolBankItem[\"BondOrder3\"] = \"bond:Order3\";\n    ToolBankItem[\"BondUnknown\"] = \"bond:Unknown\";\n    ToolBankItem[\"BondInclined\"] = \"bond:Inclined\";\n    ToolBankItem[\"BondDeclined\"] = \"bond:Declined\";\n    ToolBankItem[\"RingAliph\"] = \"ringAliph\";\n    ToolBankItem[\"RingArom\"] = \"ringArom\";\n    ToolBankItem[\"AtomPlus\"] = \"atomPlus\";\n    ToolBankItem[\"AtomMinus\"] = \"atomMinus\";\n    ToolBankItem[\"BondPfx\"] = \"bond:\";\n    ToolBankItem[\"ElementPfx\"] = \"element:\";\n})(ToolBankItem || (ToolBankItem = {}));\nimport svgToolSelect from '../res/img/actions/ToolSelect.svg';\nimport svgToolRotate from '../res/img/actions/ToolRotate.svg';\nimport svgToolPan from '../res/img/actions/ToolPan.svg';\nimport svgToolDrag from '../res/img/actions/ToolDrag.svg';\nimport svgToolErasor from '../res/img/actions/ToolErasor.svg';\nimport svgBondZero from '../res/img/actions/BondZero.svg';\nimport svgBondOne from '../res/img/actions/BondOne.svg';\nimport svgBondTwo from '../res/img/actions/BondTwo.svg';\nimport svgBondThree from '../res/img/actions/BondThree.svg';\nimport svgBondSquig from '../res/img/actions/BondSquig.svg';\nimport svgBondUp from '../res/img/actions/BondUp.svg';\nimport svgBondDown from '../res/img/actions/BondDown.svg';\nimport svgToolRing from '../res/img/actions/ToolRing.svg';\nimport svgToolArom from '../res/img/actions/ToolArom.svg';\nimport svgAtomPlus from '../res/img/actions/AtomPlus.svg';\nimport svgAtomMinus from '../res/img/actions/AtomMinus.svg';\nconst TOOLS_MAIN = [\n    { id: ToolBankItem.Arrow, svg: svgToolSelect, helpText: 'Selection tool.', mnemonic: 'Escape' },\n    { id: ToolBankItem.Rotate, svg: svgToolRotate, helpText: 'Rotate subject atoms.', mnemonic: '' },\n    { id: ToolBankItem.Pan, svg: svgToolPan, helpText: 'Pan the viewport around the screen.', mnemonic: '' },\n    { id: ToolBankItem.Drag, svg: svgToolDrag, helpText: 'Drag selected atoms to new positions.', mnemonic: '' },\n    { id: ToolBankItem.Erasor, svg: svgToolErasor, helpText: 'Delete atoms or bonds by selecting.', mnemonic: 'Delete' },\n    { id: ToolBankItem.BondOrder0, svg: svgBondZero, helpText: 'Create or change a bond to zero order.', mnemonic: 'Shift+0', 'key': ')' },\n    { id: ToolBankItem.BondOrder1, svg: svgBondOne, helpText: 'Create or change a bond to single.', mnemonic: 'Shift+1', 'key': '!' },\n    { id: ToolBankItem.BondOrder2, svg: svgBondTwo, helpText: 'Create or change a bond to double.', mnemonic: 'Shift+2', 'key': '@' },\n    { id: ToolBankItem.BondOrder3, svg: svgBondThree, helpText: 'Create or change a bond to triple.', mnemonic: 'Shift+3', 'key': '#' },\n    { id: ToolBankItem.BondUnknown, svg: svgBondSquig, helpText: 'Create or change a bond to unknown stereochemistry.', mnemonic: 'Shift+4', 'key': '$' },\n    { id: ToolBankItem.BondInclined, svg: svgBondUp, helpText: 'Create or change a bond to up-wedge.', mnemonic: 'Shift+5', 'key': '%' },\n    { id: ToolBankItem.BondDeclined, svg: svgBondDown, helpText: 'Create or change a bond to down-wedge.', mnemonic: 'Shift+6', 'key': '^' },\n    { id: ToolBankItem.RingAliph, svg: svgToolRing, helpText: 'Create plain ring.', mnemonic: 'Shift+7', 'key': '&' },\n    { id: ToolBankItem.RingArom, svg: svgToolArom, helpText: 'Create aromatic ring.', mnemonic: 'Shift+8', 'key': '*' },\n    { id: ToolBankItem.AtomPlus, svg: svgAtomPlus, helpText: 'Increase charge on atom.', mnemonic: '' },\n    { id: ToolBankItem.AtomMinus, svg: svgAtomMinus, helpText: 'Decrease charge on atom.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'C', text: 'C', helpText: 'Change elements to Carbon.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'N', text: 'N', helpText: 'Change elements to Nitrogen.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'O', text: 'O', helpText: 'Change elements to Oxygen.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'S', text: 'S', helpText: 'Change elements to Sulfur.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'P', text: 'P', helpText: 'Change elements to Phosphorus.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'H', text: 'H', helpText: 'Change elements to Hydrogen.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'F', text: 'F', helpText: 'Change elements to Fluorine.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'Cl', text: 'Cl', helpText: 'Change elements to Chlorine.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'Br', text: 'Br', helpText: 'Change elements to Bromine.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'A', text: 'A', helpText: 'Pick other element.', mnemonic: '' }\n];\nexport class ToolBank extends ButtonBank {\n    constructor(owner) {\n        super();\n        this.owner = owner;\n    }\n    update() {\n        for (let btn of TOOLS_MAIN)\n            this.buttons.push(btn);\n        this.buttonView.setSelectedButton('arrow');\n    }\n    hitButton(id) {\n        this.buttonView.setSelectedButton(id);\n    }\n    claimKey(event) {\n        for (let item of TOOLS_MAIN) {\n            if (ButtonBank.matchKey(event, item.mnemonic, item.key)) {\n                this.hitButton(item.id);\n                return true;\n            }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=ToolBank.js.map","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"50\\\"\\n   height=\\\"50\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolSelect.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#d3e5ff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"8.64\\\"\\n     inkscape:cx=\\\"22.280093\\\"\\n     inkscape:cy=\\\"25\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(0,-270)\\\">\\n    <g\\n       transform=\\\"matrix(2.2470395,0,0,2.2470395,1.4827876,-402.18041)\\\"\\n       id=\\\"layer1-1\\\"\\n       inkscape:label=\\\"Layer 1\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke-width:0.77823228;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <path\\n         sodipodi:nodetypes=\\\"cccccccc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path4141\\\"\\n         d=\\\"m 3.994178,302.40331 0.011839,13.60146 4.8493426,-3.53325 4.1221284,5.65757 3.232895,-2.3555 -4.122128,-5.65757 4.849343,-3.53325 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.77823228;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolRotate.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#d3e5ff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"-140.47866\\\"\\n     inkscape:cy=\\\"198.69435\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"61\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:4.55773544;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 68.562496,210.12948 A 34.671101,35.243633 0 0 0 33.890833,245.37285 34.671101,35.243633 0 0 0 68.562496,280.6189 34.671101,35.243633 0 0 0 103.23417,245.37285 34.671101,35.243633 0 0 0 68.562496,210.12948 Z m 0.09935,11.02044 A 23.336319,23.721675 0 0 1 91.999068,244.87094 23.336319,23.721675 0 0 1 68.66185,268.59197 23.336319,23.721675 0 0 1 45.324633,244.87094 23.336319,23.721675 0 0 1 68.66185,221.14992 Z\\\"\\n       id=\\\"path4237\\\" />\\n    <path\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10.40872955;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:10.40872949, 20.81745898;stroke-dashoffset:2.00970006;stroke-opacity:1\\\"\\n       d=\\\"M 177.52863,34.919161 68.562276,246.38095 l 224.866844,0\\\"\\n       id=\\\"path5210\\\" />\\n    <path\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:6.99123812px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"m 128.10545,149.71269 c 28.70161,15.31171 49.84665,42.14544 57.45499,89.61956\\\"\\n       id=\\\"path5212\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:129.6784668px;line-height:125%;font-family:Sans;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       id=\\\"text4750\\\">\\n      <path\\n         d=\\\"m 230.101,96.949874 q 4.93893,0 8.7381,2.026226 3.79918,1.96291 6.33196,5.76208 2.53278,3.79917 3.79917,9.3713 1.32971,5.5088 1.32971,12.60059 0,8.16822 -1.83626,18.48931 -3.92582,22.35181 -12.41064,33.05281 -8.4215,10.63769 -21.08541,10.63769 -4.81229,0 -8.42151,-1.89959 -3.54589,-1.9629 -5.88871,-5.63544 -2.34283,-3.73585 -3.5459,-9.0547 -1.13975,-5.31884 -1.13975,-12.09403 0,-4.49569 0.44323,-9.49794 0.50656,-5.00224 1.51967,-10.57436 3.92582,-22.22517 12.03072,-32.6729 8.16822,-10.511046 20.13562,-10.511046 z m -0.44323,5.065566 q -4.1791,0 -7.21843,2.53278 -2.97602,2.53278 -5.31885,7.40839 -2.2795,4.87561 -4.05245,11.9674 -1.70963,7.09179 -3.29262,16.20981 l 27.67065,0 q 0.88648,-5.69876 1.39303,-10.70101 0.50656,-5.06556 0.50656,-9.3713 0,-4.17909 -0.56988,-7.53502 -0.50655,-3.35594 -1.64631,-5.63544 -1.13975,-2.34283 -2.97602,-3.60922 -1.83626,-1.26639 -4.49568,-1.26639 z m -20.83214,43.6905 q -1.01311,6.142 -1.58299,11.6508 -0.56988,5.44548 -0.56988,10.06781 0,3.73585 0.44324,6.77519 0.44324,3.03934 1.45635,5.19221 1.01311,2.15286 2.65942,3.35593 1.64631,1.13976 3.98913,1.13976 4.11578,0 7.34507,-2.59611 3.29262,-2.5961 5.8254,-7.47171 2.59611,-4.93892 4.55901,-12.03071 1.96291,-7.09179 3.5459,-16.08317 l -27.67065,0 z\\\"\\n         style=\\\"font-style:italic;font-variant:normal;font-weight:normal;font-stretch:normal;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman,  Italic'\\\"\\n         id=\\\"path4147\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolPan.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"-33.40249\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4759\\\"\\n       transform=\\\"matrix(1.1035479,0,0,1.1035479,259.85038,18.296497)\\\">\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path4753\\\"\\n         d=\\\"m -92.02537,30.740234 c 2.45111,0 4.90206,1.015331 6.93164,3.044922 l 3.06836,3.06836 0,41.93164 0,41.931644 4.95508,0 4.95508,0 0.35742,-12.1875 0.35742,-12.187503 3.375,-0.390625 c 1.85662,-0.214261 4.5285,0.22835 5.9375,0.982422 2.3433,1.254098 2.5625,2.539225 2.5625,15.076176 l 0,13.70703 4.375,0 4.375,0 0,-7.5 0,-7.5 3.80664,0 c 2.37515,0 4.96071,1.15407 6.875,3.06836 l 3.06836,3.06836 0,27.27148 c 0,29.8793 -0.11379,30.57518 -9.17774,55.85742 -2.44343,6.81549 -4.81894,15.39361 -5.27734,19.0625 l -0.83398,6.67188 -34.67188,0 -34.67187,0 -0.78321,-9.25977 c -1.01374,-11.99243 -4.78475,-21.87779 -11.15039,-29.22656 -2.80546,-3.23874 -6.72177,-9.54492 -8.70117,-14.01367 -6.77955,-15.30563 -9.7463,-20.68795 -14.73633,-26.72657 -5.60352,-6.78105 -6.13962,-9.6299 -2.49609,-13.27343 6.23629,-6.23629 15.622,-0.97085 29.00391,16.27148 l 3.3789,4.35352 0.0586,-50.99414 0.0586,-50.994144 3.14648,-3.146485 c 2.32477,-2.324778 4.20069,-3.044178 7.1875,-2.755859 l 4.04102,0.390625 0.33203,37.1875 0.33008,37.187503 4.98242,0 4.98047,0 0,-41.931644 0,-41.93164 3.06836,-3.06836 c 2.02959,-2.029591 4.48053,-3.044922 6.93164,-3.044922 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1\\\" />\\n      <path\\n         id=\\\"path4746\\\"\\n         d=\\\"m -92.042969,21.097656 c -4.169447,0.0083 -8.343911,1.22813 -11.527341,3.65625 -2.46099,1.877091 -5.19972,5.050631 -6.08594,7.052735 -1.43274,3.23679 -2.35022,3.702655 -8.29102,4.195312 -7.08275,0.587357 -11.48476,3.067017 -15.875,8.943359 -2.45502,3.286042 -2.59594,5.308607 -2.9414,42.654297 l -0.36133,39.205081 -6.51367,-3.03125 c -3.58178,-1.66763 -8.07753,-3.03792 -9.99024,-3.04492 -5.12526,-0.018 -11.35175,2.95887 -14.46289,6.91406 -5.99633,7.62309 -5.04663,14.71933 3.375,25.21289 3.63938,4.53475 8.11406,12.47823 11.34571,20.13672 3.20064,7.58499 7.30372,14.88134 10.25,18.22851 7.87832,8.95023 10.19097,15.56933 10.84765,31.0586 l 0.56836,13.4375 44.839846,0 44.839843,0 0,-7.83985 c 0,-8.54888 2.179562,-17.0333 9.544922,-37.16015 l 4.802735,-13.125 0.429687,-29.375 c 0.27731,-18.93033 -0.05681,-31.00119 -0.939453,-33.94727 -1.80016,-6.00858 -8.806804,-12.06842 -15.121094,-13.07812 -2.73207,-0.43687 -4.966797,-1.437874 -4.966797,-2.224613 0,-0.78674 -1.694735,-3.485705 -3.765625,-5.998047 -4.1349,-5.016353 -10.661225,-7.804379 -16.328125,-6.972656 l -3.65625,0.537109 0,-24.90625 c 0,-27.98198 -0.682675,-30.943484 -8.515625,-36.917969 -3.16682,-2.415449 -7.332505,-3.619648 -11.501953,-3.611328 z m 0.01758,9.642578 c 2.451114,0 4.902056,1.015331 6.931641,3.044922 l 3.068359,3.06836 0,41.93164 0,41.931644 4.955079,0 4.955078,0 0.357422,-12.1875 0.357421,-12.187503 3.375,-0.390625 c 1.85662,-0.214261 4.5285,0.22835 5.9375,0.982422 2.3433,1.254098 2.5625,2.539225 2.5625,15.076176 l 0,13.70703 4.375,0 4.375,0 0,-7.5 0,-7.5 3.806641,0 c 2.37515,0 4.96071,1.15407 6.875,3.06836 l 3.068359,3.06836 0,27.27148 c 0,29.8793 -0.113784,30.57518 -9.177734,55.85742 -2.44343,6.81549 -4.818944,15.39361 -5.277344,19.0625 l -0.833984,6.67188 -34.671875,0 -34.671874,0 -0.78321,-9.25977 c -1.01374,-11.99243 -4.78475,-21.87779 -11.15039,-29.22656 -2.80546,-3.23874 -6.72177,-9.54492 -8.70117,-14.01367 -6.77955,-15.30563 -9.7463,-20.68795 -14.73633,-26.72657 -5.60352,-6.78105 -6.13962,-9.6299 -2.49609,-13.27343 6.23629,-6.23629 15.622,-0.97085 29.00391,16.27148 l 3.3789,4.35352 0.0586,-50.99414 0.0586,-50.994144 3.14648,-3.146485 c 2.32477,-2.324778 4.20069,-3.044178 7.1875,-2.755859 l 4.04102,0.390625 0.33203,37.1875 0.33008,37.187503 4.98242,0 4.98047,0 0,-41.931644 0,-41.93164 3.068361,-3.06836 c 2.02959,-2.029591 4.480527,-3.044922 6.93164,-3.044922 z\\\"\\n         style=\\\"fill:#000000\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolDrag.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd5ff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"-114.21469\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1\\\"\\n       d=\\\"m 198.5848,262.7811 c 4.20633,-2.11828 10.6979,-6.53843 14.56602,-9.91813 8.37261,-7.31539 14.45656,-16.75062 17.0571,-26.45281 l 1.0485,-3.91179 0.13152,-78.9888 c 0.12928,-77.644351 0.1161,-79.01901 -0.77415,-80.764052 -2.61434,-5.124548 -8.31784,-6.963729 -13.48206,-4.347502 -2.71923,1.377593 -4.29692,3.30956 -5.08124,6.222338 -0.33279,1.235895 -0.3825,12.683532 -0.15789,36.363226 0.35259,37.17213 0.35694,37.08732 -1.99451,38.93698 -2.32354,1.82769 -6.12039,0.96658 -7.48256,-1.69703 -0.35868,-0.70137 -0.51673,-7.58938 -0.51673,-22.52069 0,-12.1911 -0.18698,-22.002082 -0.43159,-22.645446 -0.70246,-1.847607 -3.35617,-4.55936 -5.34669,-5.463631 -3.93544,-1.787837 -9.4322,-0.378546 -12.0852,3.098452 l -1.3336,1.747828 -0.23129,22.471767 c -0.17337,16.84505 -0.37697,22.72645 -0.8131,23.48887 -1.93589,3.38424 -7.07829,3.28127 -8.84694,-0.17715 -0.35869,-0.70137 -0.51672,-7.58938 -0.51672,-22.52069 0,-12.1911 -0.18699,-22.002082 -0.4316,-22.645446 -0.70246,-1.847607 -3.35618,-4.55936 -5.34668,-5.463631 -3.87387,-1.759857 -9.43517,-0.375283 -12.00019,2.987634 -1.8744,2.457453 -2.09288,5.31676 -2.10318,27.525053 l -0.009,20.04219 -1.35216,1.35214 c -1.88621,1.88622 -4.51033,1.88728 -6.62005,0.002 l -1.51068,-1.34958 -0.12936,-20.85437 -0.12937,-20.854377 -11.43597,0 -11.43598,0 -20.3527,13.451137 c -11.19399,7.39813 -20.84853,13.90316 -21.45454,14.45564 -2.60452,2.37443 -3.5731,7.35066 -2.11169,10.84917 1.53903,3.68433 5.1482,6.08608 9.17291,6.10418 2.01671,0.009 3.87187,-0.81214 17.31315,-7.66383 16.39457,-8.35714 16.58526,-8.4167 19.05356,-5.95088 l 1.15645,1.15528 0.23129,23.23462 c 0.12721,12.77904 0.0755,23.87456 -0.11494,24.65671 -0.41334,1.69773 -1.9511,3.20054 -3.69745,3.61342 -1.85784,0.43924 -3.99966,-0.6541 -6.33249,-3.23254 -1.12735,-1.24605 -6.56281,-6.87577 -12.0788,-12.51049 -9.75771,-9.96772 -10.09659,-10.26003 -12.52407,-10.80327 -5.52754,-1.23701 -10.96573,2.29848 -11.76838,7.6509 -0.47382,3.15968 0.52816,6.22712 3.57739,10.95165 3.38012,5.23721 8.36183,15.07942 15.73019,31.07758 7.08217,15.37679 13.71422,28.52253 18.13559,35.94749 8.19423,13.76091 16.10953,22.0795 23.08269,24.25878 1.51837,0.47453 8.21528,0.61604 30.29388,0.64015 l 28.34459,0.0309 3.13903,-1.58079 z\\\"\\n       id=\\\"path4722\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       style=\\\"fill:#000000\\\"\\n       d=\\\"m 134.82466,273.41608 c -5.80862,-1.6108 -10.46095,-4.72519 -16.43545,-11.00231 -4.85695,-5.10295 -8.32243,-9.82569 -13.32153,-18.15452 -3.8183,-6.36155 -13.189163,-25.03627 -18.811557,-37.48861 -5.584843,-12.36919 -11.331247,-23.79278 -14.54321,-28.91127 -3.912906,-6.23548 -4.932004,-8.94395 -5.221532,-13.87741 -0.19007,-3.23866 -0.05317,-4.45531 0.776431,-6.90035 1.08983,-3.21196 2.809606,-5.97011 5.039937,-8.08297 l 1.411555,-1.3372 -2.283176,-2.05276 c -1.524641,-1.37079 -2.855587,-3.21098 -4.00614,-5.53896 -1.531867,-3.09952 -1.7437,-3.96029 -1.90992,-7.76077 -0.22887,-5.23296 0.550666,-8.26182 3.113499,-12.09739 2.180307,-3.26308 0.464333,-2.01174 26.409189,-19.25824 l 21.047404,-13.990971 14.57128,-0.138947 14.57127,-0.138934 1.29094,-1.811486 c 1.75423,-2.461626 4.69929,-4.797698 7.99299,-6.340171 2.47779,-1.160367 3.23542,-1.284647 7.83155,-1.284647 4.7443,0 5.29556,0.09812 8.15223,1.451665 1.68511,0.79842 3.88953,2.197638 4.8987,3.109366 l 1.83486,1.65768 1.34612,-1.406005 c 0.74038,-0.773306 2.8792,-2.163939 4.75294,-3.0903 3.00627,-1.486274 3.90363,-1.705716 7.63257,-1.866503 4.07983,-0.175908 6.07109,0.212155 10.12368,1.972955 0.75135,0.326463 0.80951,-0.165369 0.80951,-6.844982 0,-3.9582 0.2308,-8.299812 0.51286,-9.648026 1.20526,-5.76068 5.29243,-10.78836 10.94834,-13.467677 2.9094,-1.37824 3.43841,-1.473312 8.19847,-1.473312 4.76549,0 5.28676,0.09403 8.21474,1.48093 4.15609,1.968702 7.82558,5.494965 9.71781,9.338492 l 1.49582,3.038319 0.12085,79.570454 c 0.13305,87.59899 0.26376,83.15726 -2.70887,92.04841 -3.74053,11.18789 -11.68774,21.81638 -22.64435,30.2842 -4.65481,3.59747 -11.28374,7.68197 -15.47744,9.53662 l -2.56783,1.13562 -30.40146,-0.0414 c -22.76429,-0.031 -30.92439,-0.18638 -32.48308,-0.61863 z M 198.5848,262.7811 c 4.20633,-2.11828 10.6979,-6.53843 14.56602,-9.91813 8.37261,-7.31539 14.45656,-16.75062 17.0571,-26.45281 l 1.0485,-3.91179 0.13152,-78.9888 c 0.12928,-77.644351 0.1161,-79.01901 -0.77415,-80.764052 -2.61434,-5.124548 -8.31784,-6.963729 -13.48206,-4.347502 -2.71923,1.377593 -4.29692,3.30956 -5.08124,6.222338 -0.33279,1.235895 -0.3825,12.683532 -0.15789,36.363226 0.35259,37.17213 0.35694,37.08732 -1.99451,38.93698 -2.32354,1.82769 -6.12039,0.96658 -7.48256,-1.69703 -0.35868,-0.70137 -0.51673,-7.58938 -0.51673,-22.52069 0,-12.1911 -0.18698,-22.002082 -0.43159,-22.645446 -0.70246,-1.847607 -3.35617,-4.55936 -5.34669,-5.463631 -3.93544,-1.787837 -9.4322,-0.378546 -12.0852,3.098452 l -1.3336,1.747828 -0.23129,22.471767 c -0.17337,16.84505 -0.37697,22.72645 -0.8131,23.48887 -1.93589,3.38424 -7.07829,3.28127 -8.84694,-0.17715 -0.35869,-0.70137 -0.51672,-7.58938 -0.51672,-22.52069 0,-12.1911 -0.18699,-22.002082 -0.4316,-22.645446 -0.70246,-1.847607 -3.35618,-4.55936 -5.34668,-5.463631 -3.87387,-1.759857 -9.43517,-0.375283 -12.00019,2.987634 -1.8744,2.457453 -2.09288,5.31676 -2.10318,27.525053 l -0.009,20.04219 -1.35216,1.35214 c -1.88621,1.88622 -4.51033,1.88728 -6.62005,0.002 l -1.51068,-1.34958 -0.12936,-20.85437 -0.12937,-20.854377 -11.43597,0 -11.43598,0 -20.3527,13.451137 c -11.193992,7.39813 -20.848528,13.90316 -21.454536,14.45564 -2.604526,2.37443 -3.573104,7.35066 -2.111693,10.84917 1.539032,3.68433 5.148195,6.08608 9.172907,6.10418 2.016712,0.009 3.871872,-0.81214 17.313152,-7.66383 16.39457,-8.35714 16.58526,-8.4167 19.05356,-5.95088 l 1.15645,1.15528 0.23129,23.23462 c 0.12721,12.77904 0.0755,23.87456 -0.11494,24.65671 -0.41334,1.69773 -1.9511,3.20054 -3.69745,3.61342 -1.85784,0.43924 -3.99966,-0.6541 -6.33249,-3.23254 -1.12735,-1.24605 -6.56281,-6.87577 -12.0788,-12.51049 -9.757714,-9.96772 -10.096591,-10.26003 -12.524074,-10.80327 -5.527533,-1.23701 -10.965729,2.29848 -11.768371,7.6509 -0.473825,3.15968 0.52816,6.22712 3.577384,10.95165 3.380116,5.23721 8.361832,15.07942 15.730189,31.07758 7.082172,15.37679 13.714222,28.52253 18.135592,35.94749 8.19423,13.76091 16.10953,22.0795 23.08269,24.25878 1.51837,0.47453 8.21528,0.61604 30.29388,0.64015 l 28.34459,0.0309 3.13903,-1.58079 z M 112.90759,139.5978 c -0.21058,-0.21058 -4.68064,1.97376 -11.17695,5.46172 l -4.182758,2.24578 7.652108,7.94148 7.65211,7.94149 0.12373,-11.69925 c 0.0681,-6.43459 0.0373,-11.78563 -0.0682,-11.89122 z\\\"\\n       id=\\\"path4716\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"RetroErasor.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective16\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"101.20996\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1387\\\"\\n     inkscape:window-height=\\\"856\\\"\\n     inkscape:window-x=\\\"53\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2983\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g3805\\\"\\n       transform=\\\"matrix(0.95048511,0,0,0.95048511,-7.209769,-44.503179)\\\">\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3021\\\"\\n         d=\\\"m 30,220 0,80 130,0 0,-80 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:0.50196078;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\" />\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3029\\\"\\n         d=\\\"m 30,220 60,-30 130,0 -60,30 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:0.50196078;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\" />\\n      <path\\n         sodipodi:nodetypes=\\\"cccc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3031\\\"\\n         d=\\\"m 90,190 120,-60 120,0 -110,60\\\"\\n         style=\\\"fill:#000000;fill-opacity:0.50196078;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\" />\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3033\\\"\\n         d=\\\"m 160,220 60,-30 0,80 -60,30 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:0.50196078;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\" />\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3035\\\"\\n         d=\\\"m 220,190 0,80 110,-60 0,-80\\\"\\n         style=\\\"fill:#000000;fill-opacity:0.50196078;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolRing.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"195.90214\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"star\\\"\\n       style=\\\"opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path4140\\\"\\n       sodipodi:sides=\\\"6\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"160\\\"\\n       sodipodi:r1=\\\"134.46693\\\"\\n       sodipodi:r2=\\\"116.45179\\\"\\n       sodipodi:arg1=\\\"1.5707963\\\"\\n       sodipodi:arg2=\\\"2.0943951\\\"\\n       inkscape:flatsided=\\\"true\\\"\\n       inkscape:rounded=\\\"0\\\"\\n       inkscape:randomized=\\\"0\\\"\\n       d=\\\"M 160,294.46693 43.548221,227.23347 43.548217,92.766536 160,25.533066 276.45178,92.76653 l 0,134.46693 z\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolArom.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.7\\\"\\n     inkscape:cx=\\\"19.717178\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"star\\\"\\n       style=\\\"opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path4140\\\"\\n       sodipodi:sides=\\\"6\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"160\\\"\\n       sodipodi:r1=\\\"134.46693\\\"\\n       sodipodi:r2=\\\"116.45179\\\"\\n       sodipodi:arg1=\\\"1.5707963\\\"\\n       sodipodi:arg2=\\\"2.0943951\\\"\\n       inkscape:flatsided=\\\"true\\\"\\n       inkscape:rounded=\\\"0\\\"\\n       inkscape:randomized=\\\"0\\\"\\n       d=\\\"M 160,294.46693 43.548221,227.23347 43.548217,92.766536 160,25.533066 276.45178,92.76653 l 0,134.46693 z\\\" />\\n    <circle\\n       style=\\\"opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path4138\\\"\\n       cx=\\\"160\\\"\\n       cy=\\\"160\\\"\\n       r=\\\"73.650795\\\" />\\n  </g>\\n</svg>\\n\";","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { DataSheetStream } from '../io/DataSheetStream';\nimport { Molecule } from '../mol/Molecule';\nimport { MoleculeStream } from '../io/MoleculeStream';\nimport { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock } from '../mol/PolymerBlock';\nimport { SketchUtil } from '../mol/SketchUtil';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { ButtonView, ButtonViewPosition } from '../ui/ButtonView';\nimport { angleDiff, clone, DEGRAD, eventCoords, norm2_xy, norm_xy, RADDEG, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { CommandBank } from './CommandBank';\nimport { ContextSketch } from './ContextSketch';\nimport { DraggingTool, DrawCanvas } from './DrawCanvas';\nimport { EditAtom } from './EditAtom';\nimport { EditBond } from './EditBond';\nimport { EditPolymer } from './EditPolymer';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nimport { FusionBank, TemplateBank } from './TemplateBank';\nimport { ToolBank, ToolBankItem } from './ToolBank';\nclass Sketcher extends DrawCanvas {\n    constructor() {\n        super();\n        this.plugins = {};\n        this.inDialog = false;\n        this.initialFocus = true;\n        this.useToolBank = true;\n        this.lowerToolBank = false;\n        this.useCommandBank = true;\n        this.lowerCommandBank = false;\n        this.useTemplateBank = true;\n        this.lowerTemplateBank = false;\n        this.debugOutput = undefined;\n        this.beenSetup = false;\n        this.undoStack = [];\n        this.redoStack = [];\n        this.fadeWatermark = 0;\n        this.toolView = null;\n        this.commandView = null;\n        this.templateView = null;\n        this.proxyClip = null;\n        this.proxyMenu = null;\n    }\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    defineMolecule(mol, withAutoScale = true, withStashUndo = false, keepSelect = false) {\n        if (mol.compareTo(this.mol) == 0)\n            return;\n        if (withStashUndo)\n            this.stashUndo();\n        this.stopTemplateFusion();\n        this.mol = mol.clone();\n        if (this.callbackChangeMolecule)\n            this.callbackChangeMolecule(this.mol);\n        this.guidelines = [];\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            for (let sprout of SketchUtil.guidelineSprouts(this.mol, n))\n                this.guidelines.push(sprout);\n        }\n        if (!this.beenSetup)\n            return;\n        if (!keepSelect) {\n            this.currentAtom = this.currentBond = 0;\n            this.selectedMask = null;\n        }\n        this.stereo = null;\n        this.hoverAtom = 0;\n        this.hoverBond = 0;\n        if (!withAutoScale)\n            this.renderMolecule();\n        else\n            this.autoScale();\n    }\n    defineClipboard(proxy) {\n        this.proxyClip = proxy;\n    }\n    defineContext(proxy) {\n        this.proxyMenu = proxy;\n    }\n    defineMoleculeString(molsk, withAutoScale, withStashUndo) {\n        this.defineMolecule(Molecule.fromString(molsk), withAutoScale, withStashUndo);\n    }\n    defineRenderPolicy(policy) {\n        this.policy = policy;\n        this.pointScale = policy.data.pointScale;\n    }\n    defineBackground(borderCol, borderRad, bgCol) {\n        if (borderCol != null)\n            this.border = borderCol;\n        if (borderRad != null)\n            this.borderRadius = borderRad;\n        if (bgCol != null)\n            this.background = bgCol;\n    }\n    clearMolecule() { this.defineMolecule(new Molecule(), true, true); }\n    getMolecule() { return this.mol.clone(); }\n    setup(callback) {\n        this.beenSetup = true;\n        if (this.mol == null)\n            this.mol = new Molecule();\n        if (this.policy == null) {\n            this.policy = RenderPolicy.defaultColourOnWhite();\n            this.pointScale = this.policy.data.pointScale;\n        }\n        this.layoutMolecule();\n        this.centreAndShrink();\n        this.redrawMetaVector();\n        if (callback)\n            callback();\n    }\n    setupAsync() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => this.setup(() => resolve()));\n        });\n    }\n    render(parent) {\n        super.render(parent);\n        this.centreAndShrink();\n        this.redraw();\n        let reserveHeight = 0;\n        if (this.useCommandBank) {\n            this.commandView = new ButtonView(ButtonViewPosition.Bottom, 0, 0, this.width, this.height);\n            if (this.lowerCommandBank)\n                this.commandView.lowerBank();\n            this.commandView.setHasBigButtons(false);\n            this.commandView.pushBank(new CommandBank(this));\n            this.commandView.render(this.container);\n            reserveHeight = this.commandView.height;\n        }\n        if (this.useToolBank) {\n            this.toolView = new ButtonView(ButtonViewPosition.Left, 0, 0, this.width, this.height - reserveHeight);\n            if (this.lowerToolBank)\n                this.toolView.lowerBank();\n            this.toolView.setHasBigButtons(false);\n            this.toolView.pushBank(new ToolBank(this));\n            this.toolView.render(this.container);\n        }\n        if (this.useTemplateBank) {\n            this.templateView = new ButtonView(ButtonViewPosition.Right, 0, 0, this.width, this.height - reserveHeight);\n            if (this.lowerTemplateBank)\n                this.templateView.lowerBank();\n            this.templateView.setHasBigButtons(true);\n            this.templateView.pushBank(new TemplateBank(this, null));\n            this.templateView.render(this.container);\n        }\n        this.container.onClick((event) => this.mouseClick(event));\n        this.container.onDblClick((event) => this.mouseDoubleClick(event));\n        this.container.onMouseDown((event) => this.mouseDown(event));\n        this.container.onMouseUp((event) => this.mouseUp(event));\n        this.container.onMouseOver((event) => this.mouseOver(event));\n        this.container.onMouseLeave((event) => this.mouseOut(event));\n        this.container.onMouseMove((event) => this.mouseMove(event));\n        this.container.onKeyPress((event) => this.keyPressed(event));\n        this.container.onKeyDown((event) => this.keyDown(event));\n        this.container.onKeyUp((event) => this.keyUp(event));\n        this.container.onTouchStart((event) => this.touchStart(event));\n        this.container.onTouchMove((event) => this.touchMove(event));\n        this.container.onTouchCancel((event) => this.touchCancel(event));\n        this.container.onTouchEnd((event) => this.touchEnd(event));\n        this.contentDOM.onContextMenu((event) => this.contextMenu(event));\n        this.container.el.addEventListener('dragover', (event) => {\n            event.stopPropagation();\n            event.preventDefault();\n            event.dataTransfer.dropEffect = 'copy';\n        });\n        this.container.el.addEventListener('drop', (event) => {\n            event.stopPropagation();\n            event.preventDefault();\n            this.dropInto(event.dataTransfer);\n        });\n        if (this.initialFocus)\n            this.grabFocus();\n    }\n    get decoration() { return this.viewOpt.decoration; }\n    set decoration(decoration) { if (this.viewOpt.decoration != decoration) {\n        this.viewOpt.decoration = decoration;\n        this.renderMolecule();\n    } }\n    get showOxState() { return this.viewOpt.showOxState; }\n    set showOxState(showOxState) { if (this.viewOpt.showOxState != showOxState) {\n        this.viewOpt.showOxState = showOxState;\n        this.renderMolecule();\n    } }\n    get showQuery() { return this.viewOpt.showQuery; }\n    set showQuery(showQuery) { if (this.viewOpt.showQuery != showQuery) {\n        this.viewOpt.showQuery = showQuery;\n        this.renderMolecule();\n    } }\n    get showArtifacts() { return this.viewOpt.showArtifacts; }\n    set showArtifacts(showArtifacts) { if (this.viewOpt.showArtifacts != showArtifacts) {\n        this.viewOpt.showArtifacts = showArtifacts;\n        this.renderMolecule();\n    } }\n    changeSize(width, height) {\n        if (width == this.width && height == this.height)\n            return;\n        this.width = width;\n        this.height = height;\n        for (let widget of [this.container, this.canvasUnder, this.canvasMolecule, this.canvasOver]) {\n            widget.css({ 'width': `${width}px`, 'height': `${height}px` });\n        }\n        for (let btnv of [this.commandView, this.toolView, this.templateView])\n            if (btnv) {\n                btnv.setParentSize(width, height);\n                btnv.refreshBank();\n            }\n        this.autoScale();\n    }\n    showMessage(msg, isError = false) {\n        let watermark = ++this.fadeWatermark;\n        this.divMessage.css({ 'color': isError ? '#FF0000' : '#008000' });\n        this.divMessage.setText(msg);\n        let szLeft = (this.toolView == null ? 0 : this.toolView.width) + 2;\n        let szRight = (this.templateView == null ? 0 : this.templateView.width) + 2;\n        let szBottom = (this.commandView == null ? 0 : this.commandView.height) + 2;\n        this.divMessage.css({ 'left': szLeft + 'px' });\n        this.divMessage.css({ 'width': (this.width - szLeft - szRight) + 'px' });\n        this.divMessage.css({ 'height': (this.height - szBottom) + 'px' });\n        window.setTimeout(() => {\n            if (watermark == this.fadeWatermark)\n                this.divMessage.setText('');\n        }, 5000);\n    }\n    clearMessage() {\n        if (this.divMessage.getText() == '')\n            return;\n        this.fadeWatermark++;\n        this.divMessage.setText('');\n    }\n    autoScale() {\n        this.pointScale = this.policy.data.pointScale;\n        this.layoutMolecule();\n        this.centreAndShrink();\n        this.redrawMetaVector();\n        this.layoutTemplatePerm();\n        this.delayedRedraw();\n    }\n    anySelected() {\n        if (this.selectedMask == null)\n            return false;\n        for (let n = 0; n < this.selectedMask.length; n++)\n            if (this.selectedMask[n])\n                return true;\n        return false;\n    }\n    setSelected(atom, sel) {\n        if (this.selectedMask == null) {\n            this.selectedMask = new Array(this.mol.numAtoms);\n            for (let n = this.selectedMask.length - 1; n >= 0; n--)\n                this.selectedMask[n] = false;\n        }\n        while (this.selectedMask.length < this.mol.numAtoms) {\n            this.selectedMask.push(false);\n        }\n        this.selectedMask[atom - 1] = sel;\n        this.delayedRedraw();\n    }\n    changeCurrentAtom(atom) {\n        if (this.currentAtom == atom)\n            return;\n        this.currentAtom = atom;\n        this.currentBond = 0;\n        this.delayedRedraw();\n    }\n    changeCurrentBond(bond) {\n        if (this.currentBond == bond)\n            return;\n        this.currentBond = bond;\n        this.currentAtom = 0;\n        this.delayedRedraw();\n    }\n    clearSubject() {\n        if (this.currentAtom == 0 && this.currentBond == 0 && Vec.allFalse(this.selectedMask))\n            return;\n        this.currentAtom = 0;\n        this.currentBond = 0;\n        this.selectedMask = Vec.booleanArray(false, this.mol.numAtoms);\n        this.delayedRedraw();\n    }\n    setState(state, withStashUndo = true) {\n        this.stopTemplateFusion();\n        if (state.mol != null)\n            this.defineMolecule(state.mol.clone(), false, withStashUndo, true);\n        if (state.currentAtom >= 0)\n            this.currentAtom = state.currentAtom;\n        if (state.currentBond >= 0)\n            this.currentBond = state.currentBond;\n        if (state.selectedMask != null)\n            this.selectedMask = state.selectedMask == null ? null : state.selectedMask.slice(0);\n        this.delayedRedraw();\n    }\n    stashUndo() {\n        let state = this.getState();\n        this.undoStack.push(state);\n        while (this.undoStack.length > Sketcher.UNDO_SIZE) {\n            this.undoStack.splice(0, 1);\n        }\n        this.redoStack = [];\n    }\n    setPermutations(perms) {\n        this.templatePerms = perms;\n        this.pickTemplatePermutation(0);\n        this.fusionBank = new FusionBank(this);\n        this.templateView.pushBank(this.fusionBank);\n        if (this.mol.numAtoms == 0)\n            this.centreAndShrink();\n    }\n    stopTemplateFusion() {\n        if (this.fusionBank != null)\n            this.templateView.popBank();\n    }\n    clearPermutations() {\n        if (this.templatePerms == null)\n            return;\n        this.templatePerms = null;\n        this.delayedRedraw();\n        this.fusionBank = null;\n    }\n    templateAccept() {\n        let mol = Molecule.fromString(this.templatePerms[this.currentPerm].mol);\n        this.templateView.popBank();\n        this.defineMolecule(mol, false, true, false);\n    }\n    templateRotate(dir) {\n        let idx = (this.currentPerm + dir) % this.templatePerms.length;\n        if (idx < 0)\n            idx += this.templatePerms.length;\n        this.pickTemplatePermutation(idx);\n    }\n    canUndo() { return this.undoStack.length > 0; }\n    canRedo() { return this.redoStack.length > 0; }\n    performUndo() {\n        if (this.undoStack.length == 0)\n            return;\n        let state = this.getState();\n        this.redoStack.push(state);\n        this.setState(this.undoStack.pop(), false);\n    }\n    performRedo() {\n        if (this.redoStack.length == 0)\n            return;\n        let state = this.getState();\n        this.undoStack.push(state);\n        this.setState(this.redoStack.pop(), false);\n    }\n    performCopy(mol) {\n        if (!mol)\n            mol = this.getMolecule();\n        if (this.proxyClip)\n            this.proxyClip.setString(mol.toString());\n    }\n    performCopySelection(andCut) {\n        new MoleculeActivity(this.getState(), andCut ? ActivityType.Cut : ActivityType.Copy, {}, this).execute();\n    }\n    performPaste() {\n        if (this.proxyClip && this.proxyClip.canAlwaysGet()) {\n            let txt = this.proxyClip.getString();\n            this.pasteText(txt);\n        }\n    }\n    performActivity(activity, param = {}) {\n        new MoleculeActivity(this.getState(), activity, param, this).execute();\n    }\n    zoom(mag) {\n        let cx = 0.5 * this.width, cy = 0.5 * this.height;\n        let newScale = Math.min(10 * this.policy.data.pointScale, Math.max(0.1 * this.policy.data.pointScale, this.pointScale * mag));\n        if (newScale == this.pointScale)\n            return;\n        this.offsetX = cx - (newScale / this.pointScale) * (cx - this.offsetX);\n        this.offsetY = cy - (newScale / this.pointScale) * (cy - this.offsetY);\n        this.pointScale = newScale;\n        this.layoutMolecule();\n        this.redrawMetaVector();\n        this.layoutTemplatePerm();\n        this.delayedRedraw();\n    }\n    editCurrent() {\n        if (this.currentBond > 0)\n            this.editBond(this.currentBond);\n        else\n            this.editAtom(this.currentAtom);\n    }\n    pasteText(str) {\n        const pasteLocal = () => {\n            let mol = MoleculeStream.readUnknown(str);\n            if (!mol) {\n                let ds = DataSheetStream.readXML(str);\n                if (ds) {\n                    outer: for (let r = 0; r < ds.numRows; r++)\n                        for (let c = 0; c < ds.numCols; c++)\n                            if (ds.colType(c) == \"molecule\" && ds.notNull(r, c)) {\n                                mol = ds.getMolecule(r, c);\n                                break outer;\n                            }\n                }\n            }\n            if (mol != null)\n                this.pasteMolecule(mol);\n            else\n                alert('Text from clipboard is not a valid molecule.');\n        };\n        if (this.plugins.callbackSpecialPaste) {\n            (() => __awaiter(this, void 0, void 0, function* () {\n                let mol = yield this.plugins.callbackSpecialPaste(str);\n                if (mol)\n                    this.pasteMolecule(mol);\n                else\n                    pasteLocal();\n            }))();\n        }\n        else\n            pasteLocal();\n    }\n    pasteMolecule(mol) {\n        if (this.mol.numAtoms == 0) {\n            this.defineMolecule(mol, true, true, true);\n            return;\n        }\n        let molact = new MoleculeActivity(this.getState(), ActivityType.QueryPaste, { qmol: mol });\n        molact.execute();\n        if (molact.output.mol) {\n            this.defineMolecule(molact.output.mol, false, true, true);\n            return;\n        }\n        let param = { fragNative: mol.toString() };\n        new MoleculeActivity(this.getState(), ActivityType.TemplateFusion, param, this).execute();\n    }\n    pickTemplatePermutation(idx) {\n        let perm = this.templatePerms[idx];\n        this.currentPerm = idx;\n        this.layoutTemplatePerm();\n        this.delayedRedraw();\n    }\n    performPolymerBlock(atoms) {\n        let dlg = new EditPolymer(this.mol, atoms, this.proxyClip, () => {\n            if (this.mol.compareTo(dlg.mol) != 0)\n                this.defineMolecule(dlg.mol, false, true, true);\n            dlg.close();\n        });\n        dlg.callbackClose = () => {\n            this.inDialog = false;\n            this.grabFocus();\n        };\n        this.inDialog = true;\n        dlg.open();\n    }\n    grabFocus() {\n        this.container.grabFocus();\n    }\n    hasFocus() {\n        return this.container.hasFocus();\n    }\n    centreAndShrink() {\n        if (this.mol.numAtoms == 0 || this.layout == null) {\n            this.offsetX = 0.5 * this.width;\n            this.offsetY = 0.5 * this.height;\n            this.pointScale = this.policy.data.pointScale;\n            return;\n        }\n        let bounds = this.layout.determineBoundary(0);\n        let limW = this.width - 6, limH = this.height - 6;\n        let natW = bounds[2] - bounds[0], natH = bounds[3] - bounds[1];\n        let scale = 1;\n        if (natW > limW) {\n            let down = limW / natW;\n            scale *= down;\n            natW *= down;\n            natH *= down;\n        }\n        if (natH > limH) {\n            let down = limH / natH;\n            scale *= down;\n            natW *= down;\n            natH *= down;\n        }\n        if (scale < 1) {\n            this.pointScale *= scale;\n            this.layout.offsetEverything(this.offsetX * scale, this.offsetY * scale);\n            this.layout.scaleEverything(scale);\n            bounds = this.layout.determineBoundary(0);\n        }\n        let dx = 0.5 * (limW - natW) - bounds[0], dy = 0.5 * (limH - natH) - bounds[1];\n        this.offsetX += dx;\n        this.offsetY += dy;\n        this.layout.offsetEverything(dx, dy);\n    }\n    layoutTemplatePerm() {\n        if (this.currentPerm < 0 || this.templatePerms == null)\n            return;\n        let perm = this.templatePerms[this.currentPerm];\n        let tpolicy = new RenderPolicy(this.policy.data);\n        tpolicy.data.foreground = 0x808080;\n        tpolicy.data.atomCols = tpolicy.data.atomCols.slice(0);\n        for (let n in tpolicy.data.atomCols)\n            tpolicy.data.atomCols[n] = 0x808080;\n        let effects = new RenderEffects();\n        let layout = new ArrangeMolecule(Molecule.fromString(perm.display), this, tpolicy, effects);\n        layout.arrange();\n        perm.metavec = new MetaVector();\n        new DrawMolecule(layout, perm.metavec).draw();\n    }\n    renderMolecule() {\n        this.layoutMolecule();\n        this.redrawMetaVector();\n        this.delayedRedraw();\n    }\n    pickObjectCanvas(x, y) {\n        if (this.layout == null)\n            return 0;\n        if (this.toolView != null) {\n            let pos1 = this.container.offset(), pos2 = this.toolView.contentDOM.offset();\n            if (this.toolView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y))\n                return null;\n        }\n        if (this.commandView != null) {\n            let pos1 = this.container.offset(), pos2 = this.commandView.contentDOM.offset();\n            if (this.commandView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y))\n                return null;\n        }\n        if (this.templateView != null) {\n            let pos1 = this.container.offset(), pos2 = this.templateView.contentDOM.offset();\n            if (this.templateView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y))\n                return null;\n        }\n        return super.pickObjectCanvas(x, y);\n    }\n    updateHoverCursor(x, y) {\n        let tool = this.toolView ? this.toolView.selectedButton : '';\n        let toolApplies = tool && tool != ToolBankItem.Pan && tool != ToolBankItem.Rotate;\n        let mouseObj = 0;\n        if (this.dragType == DraggingTool.None && toolApplies) {\n            mouseObj = this.pickObject(x, y);\n        }\n        let mouseAtom = mouseObj > 0 ? mouseObj : 0, mouseBond = mouseObj < 0 ? -mouseObj : 0;\n        let abbrevThen = this.hoverAtom > 0 && MolUtil.hasAbbrev(this.mol, this.hoverAtom) ? this.hoverAtom : 0;\n        let abbrevNow = mouseAtom > 0 && MolUtil.hasAbbrev(this.mol, mouseAtom) ? mouseAtom : 0;\n        if (mouseAtom != this.hoverAtom || mouseBond != this.hoverBond) {\n            this.hoverAtom = mouseAtom;\n            this.hoverBond = mouseBond;\n            if (abbrevThen != abbrevNow) {\n                this.layoutMolecule();\n                this.redrawMetaVector();\n            }\n            this.delayedRedraw();\n        }\n    }\n    determineDragGuide(order) {\n        if (this.opAtom == 0 || this.mol.atomAdjCount(this.opAtom) == 0) {\n            let g = {\n                atom: this.opAtom,\n                orders: [order],\n                x: [],\n                y: [],\n                sourceX: this.opAtom == 0 ? this.clickX : this.angToX(this.mol.atomX(this.opAtom)),\n                sourceY: this.opAtom == 0 ? this.clickY : this.angToY(this.mol.atomY(this.opAtom)),\n                destX: [],\n                destY: []\n            };\n            let mx = this.opAtom == 0 ? this.xToAng(this.clickX) : this.mol.atomX(this.opAtom);\n            let my = this.opAtom == 0 ? this.yToAng(this.clickY) : this.mol.atomY(this.opAtom);\n            for (let n = 0; n < 12; n++) {\n                let theta = TWOPI * n / 12;\n                let dx = Molecule.IDEALBOND * Math.cos(theta), dy = Molecule.IDEALBOND * Math.sin(theta);\n                g.x.push(mx + dx);\n                g.y.push(my + dy);\n                g.destX.push(g.sourceX + dx * this.pointScale);\n                g.destY.push(g.sourceY - dy * this.pointScale);\n            }\n            return [g];\n        }\n        if (this.guidelines == null)\n            return null;\n        let best = null, single = null;\n        for (let n = 0; n < this.guidelines.length; n++) {\n            let g = this.guidelines[n];\n            if (g.atom != this.opAtom)\n                continue;\n            if (g.orders.indexOf(order) >= 0) {\n                best = g;\n                break;\n            }\n            if (g.orders.indexOf(1) >= 0)\n                single = g;\n        }\n        if (best == null)\n            best = single;\n        if (best == null)\n            return [];\n        let g = clone(best);\n        g.sourceX = this.angToX(this.mol.atomX(g.atom));\n        g.sourceY = this.angToY(this.mol.atomY(g.atom));\n        g.destX = [];\n        g.destY = [];\n        for (let n = 0; n < g.x.length; n++) {\n            g.destX.push(this.angToX(g.x[n]));\n            g.destY.push(this.angToY(g.y[n]));\n        }\n        return [g];\n    }\n    determineMoveGuide() {\n        let subj = this.subjectAtoms(false, true);\n        if (subj.length == 0 || subj.length == this.mol.numAtoms)\n            return null;\n        let guides = [];\n        for (let n = 0; n < this.guidelines.length; n++) {\n            let g = this.guidelines[n];\n            if (g.orders.indexOf(1) < 0 || subj.indexOf(g.atom) >= 0)\n                continue;\n            g = clone(g);\n            g.sourceX = this.angToX(this.mol.atomX(g.atom));\n            g.sourceY = this.angToY(this.mol.atomY(g.atom));\n            g.destX = [];\n            g.destY = [];\n            for (let i = 0; i < g.x.length; i++) {\n                g.destX.push(this.angToX(g.x[i]));\n                g.destY.push(this.angToY(g.y[i]));\n            }\n            guides.push(g);\n        }\n        return guides;\n    }\n    editAtom(atom) {\n        let dlg = new EditAtom(this.mol, atom, this.proxyClip, () => {\n            if (this.mol.compareTo(dlg.mol) != 0)\n                this.defineMolecule(dlg.mol, false, true, true);\n            dlg.close();\n        });\n        dlg.callbackClose = () => {\n            this.inDialog = false;\n            this.grabFocus();\n        };\n        if (atom == 0 && this.mol.numAtoms > 0) {\n            let box = this.mol.boundary();\n            dlg.newX = box.maxX() + Molecule.IDEALBOND;\n            dlg.newY = box.midY();\n        }\n        this.inDialog = true;\n        dlg.open();\n    }\n    editBond(bond) {\n        if (bond == 0)\n            return;\n        let dlg = new EditBond(this.mol, bond, this.proxyClip, () => {\n            if (this.mol.compareTo(dlg.mol) != 0)\n                this.defineMolecule(dlg.mol, false, true, true);\n            dlg.close();\n        });\n        dlg.callbackClose = () => {\n            this.inDialog = false;\n            this.grabFocus();\n        };\n        this.inDialog = true;\n        dlg.open();\n    }\n    hitArrowKey(dx, dy) {\n        let watermark = ++this.cursorWatermark;\n        this.cursorDX += dx;\n        this.cursorDY += dy;\n        setTimeout(() => {\n            if (watermark == this.cursorWatermark)\n                this.cursorJumpDirection();\n        }, 100);\n    }\n    cursorJumpDirection() {\n        let theta = Math.atan2(this.cursorDY, this.cursorDX);\n        if (this.currentAtom > 0)\n            this.jumpFromCurrentAtom(theta);\n        else if (this.currentBond > 0)\n            this.jumpFromCurrentBond(theta);\n        else\n            this.jumpFromNowhere(theta);\n        this.cursorDX = 0;\n        this.cursorDY = 0;\n        this.cursorWatermark = 0;\n    }\n    jumpFromCurrentAtom(theta) {\n        let adj = this.mol.atomAdjList(this.currentAtom);\n        let closest = 0, closestDelta = Number.MAX_VALUE;\n        for (let a of adj) {\n            let dx = this.mol.atomX(a) - this.mol.atomX(this.currentAtom), dy = this.mol.atomY(a) - this.mol.atomY(this.currentAtom);\n            let adjTheta = Math.atan2(dy, dx), delta = Math.abs(angleDiff(adjTheta, theta));\n            if (delta < 35.0 * DEGRAD && delta < closestDelta)\n                [closest, closestDelta] = [a, delta];\n        }\n        if (closest > 0) {\n            this.changeCurrentBond(this.mol.findBond(this.currentAtom, closest));\n            return;\n        }\n        let best = 0, bestScore = Number.MIN_VALUE;\n        for (let n = 1; n <= this.mol.numAtoms; n++)\n            if (n != this.currentAtom && adj.indexOf(n) < 0) {\n                let dx = this.mol.atomX(n) - this.mol.atomX(this.currentAtom), dy = this.mol.atomY(n) - this.mol.atomY(this.currentAtom);\n                let adjTheta = Math.atan2(dy, dx), delta = Math.abs(angleDiff(adjTheta, theta));\n                if (delta > 45.0 * DEGRAD)\n                    continue;\n                let cosdelta = Math.cos(delta);\n                let score = Math.pow(cosdelta, 2) / (norm2_xy(dx, dy) + 0.001);\n                if (score > bestScore)\n                    [best, bestScore] = [n, score];\n            }\n        if (best > 0)\n            this.changeCurrentAtom(best);\n    }\n    jumpFromCurrentBond(theta) {\n        let [bfr, bto] = this.mol.bondFromTo(this.currentBond);\n        let bondTheta = Math.atan2(this.mol.atomY(bto) - this.mol.atomY(bfr), this.mol.atomX(bto) - this.mol.atomX(bfr));\n        if (Math.abs(angleDiff(theta, bondTheta)) < 50.0 * DEGRAD)\n            this.changeCurrentAtom(bto);\n        if (Math.abs(angleDiff(theta, bondTheta + Math.PI)) < 50.0 * DEGRAD)\n            this.changeCurrentAtom(bfr);\n    }\n    jumpFromNowhere(theta) {\n        if (this.mol.numAtoms == 0)\n            return;\n        if (this.mol.numAtoms == 1) {\n            this.changeCurrentAtom(1);\n            return;\n        }\n        let cx = 0, cy = 0;\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            cx += this.mol.atomX(n);\n            cy += this.mol.atomY(n);\n        }\n        let inv = 1.0 / this.mol.numAtoms;\n        cx *= inv;\n        cy *= inv;\n        let best = 0, bestScore = Number.MIN_VALUE;\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let dx = this.mol.atomX(n) - cx, dy = this.mol.atomY(n) - cy, atheta = Math.atan2(dy, dx);\n            let cosdelta = Math.cos(Math.abs(angleDiff(theta + Math.PI, atheta)));\n            let score = cosdelta * norm_xy(dx, dy);\n            if (score > bestScore)\n                [best, bestScore] = [n, score];\n        }\n        if (best > 0)\n            this.changeCurrentAtom(best);\n    }\n    createRing(rsz, aromatic) {\n        const { mol } = this;\n        let rx = null, ry = null;\n        if (this.currentAtom > 0) {\n            let dx = 0, dy = 0, adj = mol.atomAdjList(this.currentAtom);\n            let x0 = mol.atomX(this.currentAtom), y0 = mol.atomY(this.currentAtom);\n            for (let a of adj) {\n                dx -= mol.atomX(a) - x0;\n                dy -= mol.atomY(a) - y0;\n            }\n            if (Math.abs(dx) < 0.001 && Math.abs(dy) < 0.001) {\n                if (adj.length >= 2) {\n                    let theta = adj.map((a) => Math.atan2(mol.atomY(a) - x0, mol.atomX(a) - y0));\n                    Vec.sort(theta);\n                    let best = Number.POSITIVE_INFINITY;\n                    for (let n = 0; n < theta.length; n++) {\n                        let th = angleDiff(theta[(n + 1) % theta.length], theta[n]);\n                        let lx = Math.cos(th), ly = Math.sin(th), score = CoordUtil.congestionPoint(mol, x0 + lx, y0 + ly);\n                        if (score < best)\n                            [best, dx, dy] = [score, lx, ly];\n                    }\n                }\n                else\n                    [dx, dy] = [1, 0];\n            }\n            [rx, ry] = SketchUtil.proposeAtomRing(this.mol, rsz, this.currentAtom, dx, dy);\n        }\n        else if (this.currentBond > 0) {\n            let a1 = mol.bondFrom(this.currentBond), a2 = mol.bondTo(this.currentBond);\n            let x1 = mol.atomX(a1), y1 = mol.atomY(a1), x2 = mol.atomX(a2), y2 = mol.atomY(a2);\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2), ox = y1 - y2, oy = x2 - x1;\n            let [dx, dy] = CoordUtil.congestionPoint(mol, cx - ox, cy - oy) < CoordUtil.congestionPoint(mol, cx + ox, cy + oy) ? [-ox, -oy] : [ox, oy];\n            [rx, ry] = SketchUtil.proposeBondRing(this.mol, rsz, this.currentBond, dx, dy);\n        }\n        else {\n            let x = 0, y = 0;\n            if (mol.numAtoms > 0) {\n                let bound = mol.boundary();\n                [x, y] = [bound.maxX() + Molecule.IDEALBOND, bound.midY()];\n            }\n            [rx, ry] = SketchUtil.proposeNewRing(this.mol, rsz, x, y, 0, -1, false);\n        }\n        if (!rx)\n            return;\n        let param = {\n            ringX: rx,\n            ringY: ry,\n            aromatic: aromatic\n        };\n        let molact = new MoleculeActivity(this.getState(), ActivityType.Ring, param, this);\n        molact.execute();\n    }\n    ctrlArrowKey(dx, dy) {\n        let watermark = ++this.cursorWatermark;\n        this.cursorDX += dx;\n        this.cursorDY += dy;\n        setTimeout(() => {\n            if (watermark == this.cursorWatermark) {\n                this.sproutDirection(this.cursorDX, this.cursorDY);\n                this.cursorDX = this.cursorDY = 0;\n            }\n        }, 100);\n    }\n    sproutDirection(deltaX, deltaY) {\n        new MoleculeActivity(this.getState(), ActivityType.SproutDirection, { deltaX, deltaY }, this).execute();\n    }\n    launchComposeFragment() {\n        const { callbackComposeFragment } = this.plugins;\n        if (!callbackComposeFragment || this.inDialog)\n            return;\n        callbackComposeFragment(this);\n    }\n    mouseClick(event) {\n        event.stopPropagation();\n        this.grabFocus();\n        return false;\n    }\n    mouseDoubleClick(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        if (this.toolView.selectedButton != ToolBankItem.Arrow)\n            return;\n        let xy = eventCoords(event, this.container);\n        let clickObj = this.pickObject(xy[0], xy[1]);\n        if (clickObj > 0) {\n            let atom = clickObj;\n            this.editAtom(atom);\n        }\n        else {\n            let bond = -clickObj;\n            this.editBond(bond);\n        }\n        return false;\n    }\n    mouseDown(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.clearMessage();\n        if (event.ctrlKey && !event.shiftKey && !event.altKey) {\n            this.contextMenu(event);\n            return;\n        }\n        let [x, y] = eventCoords(event, this.container);\n        this.interactStart(x, y, event.shiftKey, event.ctrlKey, event.altKey);\n        return false;\n    }\n    mouseUp(event) {\n        event.stopPropagation();\n        let [x, y] = eventCoords(event, this.container);\n        this.interactEnd(x, y);\n        return false;\n    }\n    mouseOver(event) {\n        event.stopPropagation();\n        let [x, y] = eventCoords(event, this.container);\n        this.updateHoverCursor(x, y);\n        this.updateLasso(x, y);\n        return false;\n    }\n    mouseOut(event) {\n        event.stopPropagation();\n        let [x, y] = eventCoords(event, this.container);\n        this.updateHoverCursor(x, y);\n        this.updateLasso(x, y);\n        return false;\n    }\n    mouseMove(event) {\n        event.stopPropagation();\n        let [x, y] = eventCoords(event, this.container);\n        this.updateHoverCursor(x, y);\n        if (this.dragType == DraggingTool.None)\n            return;\n        this.interactDrag(x, y);\n        return false;\n    }\n    keyPressed(event) {\n    }\n    keyDown(event) {\n        let key = event.key;\n        if (key == \"Escape\") {\n            for (let view of [this.templateView, this.commandView, this.toolView])\n                if (view != null && view.stackSize > 1) {\n                    view.popBank();\n                    event.preventDefault();\n                    event.stopPropagation();\n                    return;\n                }\n        }\n        let mod = (event.shiftKey ? 'S' : '') + (event.ctrlKey || event.metaKey ? 'C' : '') + (event.altKey ? 'A' : '');\n        let nomod = !event.shiftKey && !event.ctrlKey && !event.altKey && !event.metaKey;\n        if (this.toolView != null && this.toolView.topBank.claimKey(event)) { }\n        else if (this.commandView != null && this.commandView.topBank.claimKey(event)) { }\n        else if (this.templateView != null && this.templateView.topBank.claimKey(event)) { }\n        else if (key == \"Enter\")\n            this.editCurrent();\n        else if (key == \"ArrowLeft\" && nomod)\n            this.hitArrowKey(-1, 0);\n        else if (key == \"ArrowRight\" && nomod)\n            this.hitArrowKey(1, 0);\n        else if (key == \"ArrowUp\" && nomod)\n            this.hitArrowKey(0, 1);\n        else if (key == \"ArrowDown\" && nomod)\n            this.hitArrowKey(0, -1);\n        else if (key == 'z' && mod == 'C')\n            this.performUndo();\n        else if (key == 'Z' && mod == 'SC')\n            this.performRedo();\n        else if (key == 'z' && nomod)\n            this.toolView.cycleSelected(-1);\n        else if (key == 'x' && nomod)\n            this.toolView.cycleSelected(1);\n        else if (key == '#' && mod == 'SC')\n            this.createRing(3, false);\n        else if (key == '$' && mod == 'SC')\n            this.createRing(4, false);\n        else if (key == '%' && mod == 'SC')\n            this.createRing(5, false);\n        else if (key == '^' && mod == 'SC')\n            this.createRing(6, false);\n        else if (key == '&' && mod == 'SC')\n            this.createRing(7, false);\n        else if (key == '3' && mod == 'CA')\n            this.createRing(3, true);\n        else if (key == '4' && mod == 'CA')\n            this.createRing(4, true);\n        else if (key == '5' && mod == 'CA')\n            this.createRing(5, true);\n        else if (key == '6' && mod == 'CA')\n            this.createRing(6, true);\n        else if (key == '7' && mod == 'CA')\n            this.createRing(7, true);\n        else if (key == 'c' && mod == 'C' && this.proxyClip)\n            this.proxyClip.triggerCopy(false);\n        else if (key == 'x' && mod == 'C' && this.proxyClip)\n            this.proxyClip.triggerCopy(true);\n        else if (key == 'v' && mod == 'C' && this.proxyClip && this.proxyClip.canAlwaysGet())\n            this.proxyClip.triggerPaste();\n        else if (key == \"ArrowLeft\" && mod == 'C')\n            this.ctrlArrowKey(-1, 0);\n        else if (key == \"ArrowRight\" && mod == 'C')\n            this.ctrlArrowKey(1, 0);\n        else if (key == \"ArrowUp\" && mod == 'C')\n            this.ctrlArrowKey(0, 1);\n        else if (key == \"ArrowDown\" && mod == 'C')\n            this.ctrlArrowKey(0, -1);\n        else if (key == '1' && mod == 'C')\n            this.sproutDirection(-1, -1);\n        else if (key == '2' && mod == 'C')\n            this.sproutDirection(0, -1);\n        else if (key == '3' && mod == 'C')\n            this.sproutDirection(1, -1);\n        else if (key == '4' && mod == 'C')\n            this.sproutDirection(-1, 0);\n        else if (key == '6' && mod == 'C')\n            this.sproutDirection(1, 0);\n        else if (key == '7' && mod == 'C')\n            this.sproutDirection(-1, 1);\n        else if (key == '8' && mod == 'C')\n            this.sproutDirection(0, 1);\n        else if (key == '9' && mod == 'C')\n            this.sproutDirection(1, 1);\n        else if (key == '`' && nomod)\n            this.launchComposeFragment();\n        else\n            return;\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    keyUp(event) {\n    }\n    touchStart(event) {\n        let [x, y] = eventCoords(event.touches[0], this.container);\n        if (this.pickObjectCanvas(x, y) == null)\n            return;\n        this.interactStart(x, y, event.shiftKey, event.ctrlKey, event.altKey);\n        event.preventDefault();\n    }\n    touchMove(event) {\n        if (this.dragType != DraggingTool.None) {\n            let [x, y] = eventCoords(event.touches[0], this.container);\n            this.interactDrag(x, y);\n        }\n        event.preventDefault();\n    }\n    touchCancel(event) {\n    }\n    touchEnd(event) {\n        if (this.dragType != DraggingTool.None) {\n            let [x, y] = [this.mouseX, this.mouseY];\n            this.interactEnd(x, y);\n            event.preventDefault();\n        }\n    }\n    mouseWheel(event) {\n    }\n    contextMenu(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.dragType = DraggingTool.None;\n        if (!this.proxyMenu)\n            return;\n        let [x, y] = eventCoords(event, this.container);\n        let clickObj = this.pickObject(x, y);\n        if (clickObj > 0)\n            this.changeCurrentAtom(clickObj);\n        else if (clickObj < 0)\n            this.changeCurrentBond(-clickObj);\n        let state = this.getState();\n        let ctx = new ContextSketch(state, this, this.proxyClip);\n        let menu = ctx.populate();\n        this.proxyMenu.openContextMenu(menu, event);\n    }\n    interactStart(x, y, shiftKey, ctrlKey, altKey) {\n        this.dragType = DraggingTool.Press;\n        this.opBudged = false;\n        this.dragGuides = null;\n        this.mouseX = x;\n        this.mouseY = y;\n        this.clickX = x;\n        this.clickY = y;\n        let clickObj = this.pickObject(x, y);\n        this.opAtom = clickObj > 0 ? clickObj : 0;\n        this.opBond = clickObj < 0 ? -clickObj : 0;\n        this.opShift = shiftKey;\n        this.opCtrl = ctrlKey;\n        this.opAlt = altKey;\n        let tool = '';\n        if (this.toolView != null)\n            tool = this.toolView.selectedButton;\n        if (tool == ToolBankItem.Arrow) {\n            if (!this.opShift && !this.opCtrl && !this.opAlt) {\n                this.dragType = DraggingTool.Press;\n            }\n            else if (!this.opShift && !this.opCtrl && this.opAlt) {\n                this.dragType = DraggingTool.Pan;\n            }\n            else if (!this.opShift && this.opCtrl && this.opAlt) {\n                this.dragType = DraggingTool.Zoom;\n            }\n        }\n        else if (tool == ToolBankItem.Rotate) {\n            this.dragType = DraggingTool.Rotate;\n            this.toolRotateIncr = this.opShift ? 0 : 15 * DEGRAD;\n        }\n        else if (tool == ToolBankItem.Pan) {\n            this.dragType = DraggingTool.Pan;\n        }\n        else if (tool == ToolBankItem.Drag) {\n            this.dragType = DraggingTool.Move;\n            if (this.opAtom > 0)\n                this.dragGuides = this.determineMoveGuide();\n            this.delayedRedraw();\n        }\n        else if (tool == ToolBankItem.Erasor) {\n            this.dragType = DraggingTool.Erasor;\n            this.lassoX = [x];\n            this.lassoY = [y];\n            this.lassoMask = [];\n        }\n        else if (tool == ToolBankItem.RingAliph) {\n            this.dragType = DraggingTool.Ring;\n            this.toolRingArom = false;\n            this.toolRingFreeform = this.opShift;\n        }\n        else if (tool == ToolBankItem.RingArom) {\n            this.dragType = DraggingTool.Ring;\n            this.toolRingArom = true;\n            this.toolRingFreeform = this.opShift;\n        }\n        else if (tool == ToolBankItem.AtomPlus) {\n            this.dragType = DraggingTool.Charge;\n            this.toolChargeDelta = 1;\n        }\n        else if (tool == ToolBankItem.AtomMinus) {\n            this.dragType = DraggingTool.Charge;\n            this.toolChargeDelta = -1;\n        }\n        else if (tool.startsWith(ToolBankItem.BondPfx)) {\n            this.dragType = DraggingTool.Bond;\n            this.toolBondOrder = 1;\n            this.toolBondType = Molecule.BONDTYPE_NORMAL;\n            if (tool == ToolBankItem.BondOrder0)\n                this.toolBondOrder = 0;\n            else if (tool == ToolBankItem.BondOrder2)\n                this.toolBondOrder = 2;\n            else if (tool == ToolBankItem.BondOrder3)\n                this.toolBondOrder = 3;\n            else if (tool == ToolBankItem.BondUnknown)\n                this.toolBondType = Molecule.BONDTYPE_UNKNOWN;\n            else if (tool == ToolBankItem.BondInclined)\n                this.toolBondType = Molecule.BONDTYPE_INCLINED;\n            else if (tool == ToolBankItem.BondDeclined)\n                this.toolBondType = Molecule.BONDTYPE_DECLINED;\n            if (this.opBond > 0) {\n                let [bfr, bto] = this.mol.bondFromTo(this.opBond), inPoly = false;\n                for (let poly of new PolymerBlock(this.mol).getUnits()) {\n                    let in1 = poly.atoms.includes(bfr), in2 = poly.atoms.includes(bto);\n                    if ((in1 && !in2) || (in2 && !in1)) {\n                        inPoly = true;\n                        break;\n                    }\n                }\n                if (inPoly) {\n                    this.toolBondOrder = 0;\n                    this.toolBondType = Molecule.BONDTYPE_NORMAL;\n                }\n            }\n            if (this.opBond == 0)\n                this.dragGuides = this.determineDragGuide(this.toolBondOrder);\n        }\n        else if (tool.startsWith(ToolBankItem.ElementPfx)) {\n            this.dragType = DraggingTool.Atom;\n            this.toolAtomSymbol = tool.substring(ToolBankItem.ElementPfx.length);\n            this.dragGuides = this.determineDragGuide(1);\n        }\n    }\n    interactDrag(x, y) {\n        if (!this.opBudged) {\n            let dx = x - this.clickX, dy = y - this.clickY;\n            if (dx * dx + dy * dy > 2 * 2)\n                this.opBudged = true;\n        }\n        if (this.dragType == DraggingTool.Press && this.opAtom == 0 && this.opBond == 0 && this.opBudged) {\n            this.dragType = DraggingTool.Lasso;\n            this.lassoX = [x];\n            this.lassoY = [y];\n            this.lassoMask = [];\n        }\n        if (this.dragType == DraggingTool.Lasso || this.dragType == DraggingTool.Erasor) {\n            this.updateLasso(x, y);\n        }\n        else if (this.dragType == DraggingTool.Pan) {\n            let dx = x - this.mouseX, dy = y - this.mouseY;\n            if (dx != 0 || dy != 0) {\n                this.offsetX += dx;\n                this.offsetY += dy;\n                this.layout.offsetEverything(dx, dy);\n                this.metavec.transformPrimitives(dx, dy, 1, 1);\n                if (this.currentPerm >= 0 && this.templatePerms != null) {\n                    let perm = this.templatePerms[this.currentPerm];\n                    perm.metavec.transformPrimitives(dx, dy, 1, 1);\n                }\n                this.delayedRedraw();\n            }\n            this.mouseX = x;\n            this.mouseY = y;\n        }\n        else if (this.dragType == DraggingTool.Zoom) {\n            let dy = y - this.mouseY;\n            if (dy != 0) {\n                dy = Math.min(50, Math.max(-50, dy));\n                let newScale = this.pointScale * (1 - dy * 0.01);\n                newScale = Math.min(10, Math.max(0.1, newScale));\n                let newOX = this.clickX - (newScale / this.pointScale) * (this.clickX - this.offsetX);\n                let newOY = this.clickY - (newScale / this.pointScale) * (this.clickY - this.offsetY);\n                this.pointScale = newScale;\n                this.offsetX = newOX;\n                this.offsetY = newOY;\n                this.delayedRedraw();\n            }\n            this.mouseX = x;\n            this.mouseY = y;\n        }\n        else if (this.dragType == DraggingTool.Rotate ||\n            this.dragType == DraggingTool.Move ||\n            this.dragType == DraggingTool.Atom ||\n            this.dragType == DraggingTool.Bond ||\n            this.dragType == DraggingTool.Ring) {\n            this.mouseX = x;\n            this.mouseY = y;\n            this.delayedRedraw();\n        }\n    }\n    interactEnd(x, y) {\n        if (this.opBudged)\n            this.interactEndDrag(x, y);\n        else\n            this.interactEndClick(x, y);\n        this.dragType = DraggingTool.None;\n        this.lassoX = null;\n        this.lassoY = null;\n        this.lassoMask = null;\n        this.dragGuides = null;\n        this.delayedRedraw();\n    }\n    interactEndClick(x, y) {\n        let clickObj = this.pickObject(x, y);\n        let clickAtom = clickObj > 0 ? clickObj : 0, clickBond = clickObj < 0 ? -clickObj : 0;\n        if (this.dragType == DraggingTool.Press) {\n            if (!this.opShift && !this.opCtrl && !this.opAlt) {\n                if (clickAtom == 0 && clickBond == 0) {\n                    if (Vec.anyTrue(this.selectedMask))\n                        this.selectedMask = null;\n                    else if (this.currentAtom > 0)\n                        this.currentAtom = 0;\n                    else if (this.currentBond > 0)\n                        this.currentBond = 0;\n                }\n                else if (clickAtom != this.currentAtom || clickBond != this.currentBond) {\n                    this.currentAtom = clickAtom;\n                    this.currentBond = clickBond;\n                }\n                else if (clickAtom == 0 && clickBond == 0 && this.anySelected()) {\n                    this.selectedMask = null;\n                }\n            }\n            else if (this.opShift && !this.opCtrl && !this.opAlt) {\n                if (clickAtom > 0)\n                    this.setSelected(clickAtom, !this.getSelected(clickAtom));\n            }\n        }\n        else if (this.dragType == DraggingTool.Move) {\n            if (clickObj == 0) {\n                if (Vec.anyTrue(this.selectedMask))\n                    this.selectedMask = null;\n                else if (this.currentAtom > 0)\n                    this.currentAtom = 0;\n                else if (this.currentBond > 0)\n                    this.currentBond = 0;\n            }\n        }\n        else if (this.dragType == DraggingTool.Erasor) {\n            if (this.opAtom > 0 || this.opBond > 0) {\n                let state = Object.assign(Object.assign({}, this.getState()), { 'currentAtom': this.opAtom, 'currentBond': this.opBond, 'selectedMask': [] });\n                let molact = new MoleculeActivity(state, ActivityType.Delete, {}, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Atom) {\n            let element = this.toolAtomSymbol;\n            if (element == 'A') {\n                let dlg = new EditAtom(this.mol, this.opAtom, this.proxyClip, () => {\n                    let autoscale = this.mol.numAtoms == 0;\n                    if (this.mol.compareTo(dlg.mol) != 0)\n                        this.defineMolecule(dlg.mol, autoscale, true);\n                    dlg.close();\n                });\n                if (this.opAtom == 0) {\n                    dlg.newX = this.xToAng(this.clickX);\n                    dlg.newY = this.yToAng(this.clickY);\n                }\n                dlg.callbackClose = () => {\n                    this.inDialog = false;\n                    this.grabFocus();\n                };\n                this.inDialog = true;\n                dlg.open();\n            }\n            else if (element) {\n                let param = { element, keepAbbrev: true };\n                if (this.opAtom == 0) {\n                    let x = this.xToAng(this.clickX), y = this.yToAng(this.clickY);\n                    if (this.mol.numAtoms == 0) {\n                        this.offsetX = this.clickX;\n                        this.offsetY = this.clickY;\n                        x = 0;\n                        y = 0;\n                    }\n                    param.positionX = x;\n                    param.positionY = y;\n                }\n                let state = Object.assign(Object.assign({}, this.getState()), { currentAtom: this.opAtom, currentBond: 0, selectedMask: null });\n                let molact = new MoleculeActivity(state, ActivityType.Element, param, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Charge) {\n            if (this.opAtom > 0 || this.opBond > 0) {\n                let state = Object.assign(Object.assign({}, this.getState()), { currentAtom: this.opAtom, currentBond: this.opBond, selectedMask: null });\n                let molact = new MoleculeActivity(state, ActivityType.Charge, { delta: this.toolChargeDelta }, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Bond) {\n            let state = Object.assign(Object.assign({}, this.getState()), { currentAtom: this.opAtom, currentBond: this.opBond, selectedMask: null });\n            let molact;\n            if (this.toolBondType == Molecule.BONDTYPE_NORMAL)\n                molact = new MoleculeActivity(state, ActivityType.BondOrder, { order: this.toolBondOrder }, this);\n            else\n                molact = new MoleculeActivity(state, ActivityType.BondType, { type: this.toolBondType }, this);\n            molact.execute();\n        }\n    }\n    interactEndDrag(x, y) {\n        if (this.dragType == DraggingTool.Lasso) {\n            if (this.lassoX.length >= 2) {\n                this.calculateLassoMask();\n                for (let n = 1; n <= this.mol.numAtoms; n++)\n                    if (this.getLassoed(n) && !this.getSelected(n))\n                        this.setSelected(n, true);\n            }\n            this.lassoX = null;\n            this.lassoY = null;\n            this.lassoMask = null;\n            this.delayedRedraw();\n        }\n        else if (this.dragType == DraggingTool.Erasor) {\n            let any = false;\n            for (let n = 0; n < this.lassoMask.length; n++)\n                if (this.lassoMask[n]) {\n                    any = true;\n                    break;\n                }\n            if (any) {\n                let state = Object.assign(Object.assign({}, this.getState()), { currentAtom: 0, currentBond: 0, selectedMask: this.lassoMask });\n                let molact = new MoleculeActivity(state, ActivityType.Delete, {}, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Rotate) {\n            let [x0, y0, theta, magnitude] = this.determineDragTheta();\n            let degrees = -theta * RADDEG;\n            let mx = this.xToAng(x0), my = this.yToAng(y0);\n            let molact = new MoleculeActivity(this.getState(), ActivityType.Rotate, { theta: degrees, centreX: mx, centreY: my }, this);\n            molact.execute();\n        }\n        else if (this.dragType == DraggingTool.Move) {\n            let [dx, dy] = this.determineMoveDelta();\n            let scale = this.pointScale;\n            let molact = new MoleculeActivity(this.getState(), ActivityType.Move, { refAtom: this.opAtom, deltaX: dx / scale, deltaY: -dy / scale }, this);\n            molact.execute();\n        }\n        else if (this.dragType == DraggingTool.Ring) {\n            let [ringX, ringY] = this.determineFauxRing();\n            if (ringX != null) {\n                let param = {\n                    ringX: ringX,\n                    ringY: ringY,\n                    aromatic: this.toolRingArom\n                };\n                let molact = new MoleculeActivity(this.getState(), ActivityType.Ring, param, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Atom && this.opAtom > 0) {\n            let x2 = this.mouseX, y2 = this.mouseY;\n            let snapTo = this.snapToGuide(x2, y2);\n            if (snapTo != null)\n                [x2, y2] = snapTo;\n            let param = {\n                order: 1,\n                type: Molecule.BONDTYPE_NORMAL,\n                element: this.toolAtomSymbol,\n                x1: this.mol.atomX(this.opAtom),\n                y1: this.mol.atomY(this.opAtom),\n                x2: this.xToAng(x2),\n                y2: this.yToAng(y2)\n            };\n            if (this.toolAtomSymbol == 'A')\n                param.element = window.prompt('Enter element symbol:', '');\n            if (param.element != '') {\n                let molact = new MoleculeActivity(this.getState(), ActivityType.BondAtom, param, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Bond) {\n            let x2 = this.mouseX, y2 = this.mouseY;\n            let snapTo = this.snapToGuide(x2, y2);\n            if (snapTo != null) {\n                [x2, y2] = snapTo;\n                if (this.opBond > 0) {\n                    let toObj = this.pickObject(x2, y2, { noAtoms: true });\n                    if (toObj < 0) {\n                        this.connectPolymerBlock(this.opBond, -toObj);\n                        return;\n                    }\n                }\n            }\n            let param = {\n                order: this.toolBondOrder,\n                type: this.toolBondType,\n                element: 'C',\n                x1: this.opAtom == 0 ? this.xToAng(this.clickX) : this.mol.atomX(this.opAtom),\n                y1: this.opAtom == 0 ? this.yToAng(this.clickY) : this.mol.atomY(this.opAtom),\n                x2: this.xToAng(x2),\n                y2: this.yToAng(y2)\n            };\n            let molact = new MoleculeActivity(this.getState(), ActivityType.BondAtom, param, this);\n            molact.execute();\n        }\n    }\n    dropInto(transfer) {\n        let items = transfer.items, files = transfer.files;\n        const SUFFIXES = ['.el', '.mol'];\n        const MIMES = ['text/plain', 'chemical/x-sketchel', 'x-mdl-molfile'];\n        for (let n = 0; n < items.length; n++) {\n            if (items[n].kind == 'string' && MIMES.indexOf(items[n].type) >= 0) {\n                items[n].getAsString((str) => {\n                    let mol = Molecule.fromString(str);\n                    if (mol != null) {\n                        this.defineMolecule(mol, true, true, true);\n                    }\n                    else\n                        console.log('Dragged data is not a SketchEl molecule: ' + str);\n                });\n                return;\n            }\n        }\n        for (let n = 0; n < files.length; n++) {\n            for (let sfx of SUFFIXES)\n                if (files[n].name.endsWith(sfx)) {\n                    let reader = new FileReader();\n                    reader.onload = (event) => {\n                        let str = reader.result;\n                        let mol = MoleculeStream.readUnknown(str.toString());\n                        if (mol != null) {\n                            this.defineMolecule(mol, true, true);\n                        }\n                        else\n                            console.log('Dragged file is not a recognised molecule: ' + str);\n                    };\n                    reader.readAsText(files[n]);\n                    return;\n                }\n        }\n    }\n    connectPolymerBlock(bond1, bond2) {\n        let [atomIn1, atomOut1] = this.mol.bondFromTo(bond1), [atomIn2, atomOut2] = this.mol.bondFromTo(bond2);\n        let state = this.getState();\n        let polymer = new PolymerBlock(state.mol);\n        let poly1 = null, poly2 = null;\n        let highName = 0;\n        for (let poly of polymer.getUnits()) {\n            if (!poly1 || poly.atoms.length < poly1.atoms.length) {\n                let ina = poly.atoms.includes(atomIn1), inb = poly.atoms.includes(atomOut1);\n                if (ina && !inb)\n                    poly1 = poly;\n                else if (inb && !ina)\n                    [poly1, atomIn1, atomOut1] = [poly, atomOut1, atomIn1];\n            }\n            if (!poly2 || poly.atoms.length < poly2.atoms.length) {\n                let ina = poly.atoms.includes(atomIn2), inb = poly.atoms.includes(atomOut2);\n                if (ina && !inb)\n                    poly2 = poly;\n                else if (inb && !ina)\n                    [poly2, atomIn2, atomOut2] = [poly, atomOut2, atomIn2];\n            }\n            for (let nameList of poly.atomName.values())\n                highName = Math.max(highName, Vec.max(nameList));\n        }\n        if (!poly1 || !poly2)\n            return false;\n        let name1 = Vec.first(poly1.atomName.get(atomIn1));\n        if (!name1) {\n            name1 = ++highName;\n            poly1.atomName.set(atomIn1, [name1]);\n        }\n        let name2 = Vec.first(poly2.atomName.get(atomIn2));\n        if (!name2) {\n            name2 = ++highName;\n            poly2.atomName.set(atomIn2, [name2]);\n        }\n        poly1.bondIncl.set(bond1, Vec.append(poly1.bondIncl.get(bond1), name2));\n        poly2.bondIncl.set(bond2, Vec.append(poly2.bondIncl.get(bond2), name1));\n        polymer.rewriteMolecule();\n        this.setState(state);\n    }\n}\nSketcher.UNDO_SIZE = 20;\nexport { Sketcher };\n//# sourceMappingURL=Sketcher.js.map","import { Sketcher } from '../sketcher/Sketcher';\nimport { ClipboardProxyHandler } from '../ui/ClipboardProxy';\nimport { dom } from '../util/dom';\nimport { Dialog } from './Dialog';\nexport class EditCompound extends Dialog {\n    constructor(mol, parent = null) {\n        super(parent);\n        this.mol = mol;\n        this.sketcher = new Sketcher();\n        this.proxyClip = null;\n        this.proxyMenu = null;\n        this.callbackSave = null;\n        this.title = 'Edit Compound';\n        this.minPortionWidth = 20;\n        this.maxPortionWidth = 95;\n    }\n    onSave(callback) {\n        this.callbackSave = callback;\n    }\n    getMolecule() { return this.sketcher.getMolecule(); }\n    getSketcher() { return this.sketcher; }\n    defineClipboard(proxy) {\n        this.proxyClip = proxy;\n        let handler = new ClipboardProxyHandler();\n        handler.copyEvent = (andCut, proxy) => {\n            this.sketcher.performCopySelection(andCut);\n            return true;\n        };\n        handler.pasteEvent = (proxy) => {\n            this.sketcher.pasteText(proxy.getString());\n            return true;\n        };\n        proxy.pushHandler(handler);\n        this.sketcher.defineClipboard(proxy);\n    }\n    defineContext(proxy) {\n        this.proxyMenu = proxy;\n        this.sketcher.defineContext(this.proxyMenu);\n    }\n    close() {\n        if (this.proxyClip)\n            this.proxyClip.popHandler();\n        super.close();\n    }\n    populate() {\n        let buttons = this.buttonsDOM(), body = this.bodyDOM();\n        this.btnClear = dom('<button class=\"wmk-button wmk-button-default\">Clear</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnClear.onClick(() => this.sketcher.clearMolecule());\n        this.btnCopy = dom('<button class=\"wmk-button wmk-button-default\">Copy</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnCopy.onClick(() => this.actionCopy());\n        buttons.append(this.domClose);\n        this.domClose.css({ 'margin-left': '0.5em' });\n        this.btnSave = dom('<button class=\"wmk-button wmk-button-primary\">Save</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnSave.onClick(() => { if (this.callbackSave)\n            this.callbackSave(this); });\n        let skw = 800, skh = 650;\n        let skdiv = dom('<div/>').appendTo(body).css({ 'width': `${skw}px`, 'height': `${skh}px` });\n        this.sketcher.setSize(skw, skh);\n        this.sketcher.defineMolecule(this.mol);\n        this.sketcher.setup(() => this.sketcher.render(skdiv));\n    }\n    actionCopy() {\n        this.sketcher.performCopySelection(false);\n    }\n    actionCut() {\n        this.sketcher.performCopySelection(true);\n    }\n    actionPaste() {\n        this.sketcher.performPaste();\n    }\n    actionUndo() {\n        this.sketcher.performUndo();\n    }\n    actionRedo() {\n        this.sketcher.performRedo();\n    }\n}\n//# sourceMappingURL=EditCompound.js.map","import { dom, domLegacy } from '../util/dom';\nimport { installInlineCSS } from '../util/Theme';\nimport { empiricalScrollerSize, setBoundaryPixels } from '../util/util';\nimport { clearTooltip } from './Tooltip';\nconst CSS_POPUP = `\n\t*.wmk-popup\n\t{\n\t\tfont-family: 'Open Sans', sans-serif;\n\t}\n`;\nexport class Popup {\n    constructor(parent) {\n        this.popupBackground = 'white';\n        this.obscureOpacity = 0.2;\n        this.zindex = null;\n        this.callbackClose = null;\n        this.callbackPopulate = null;\n        this.parent = domLegacy(parent);\n        installInlineCSS('popup', CSS_POPUP);\n    }\n    onClose(callback) {\n        this.callbackClose = callback;\n    }\n    open() {\n        clearTooltip();\n        let body = dom(document.body);\n        let bg = this.domObscureBackground = dom('<div/>').appendTo(body);\n        bg.css({ 'position': 'fixed' });\n        bg.css({ 'left': '0', 'right': '0', 'top': '0', 'bottom': '0' });\n        bg.css({ 'background-color': 'black', 'opacity': this.obscureOpacity });\n        let fg = this.domObscureForeground = dom('<div/>').appendTo(body);\n        fg.css({ 'position': 'fixed' });\n        fg.css({ 'left': '0', 'right': '0', 'top': '0', 'bottom': '0' });\n        fg.onClick(() => this.close());\n        if (this.zindex > 0) {\n            bg.setCSS('z-index', this.zindex);\n            fg.setCSS('z-index', this.zindex + 1);\n        }\n        let pb = this.domPanelBoundary = dom('<div class=\"wmk-popup\"/>').appendTo(fg).css({ 'visibility': 'hidden' });\n        pb.onClick((event) => event.stopPropagation());\n        pb.css({ 'background-color': this.popupBackground, 'border': '1px solid black' });\n        pb.css({ 'position': 'absolute', 'overflow': 'auto' });\n        this.domBody = dom('<div/>').appendTo(pb).css({ 'padding': '5px' });\n        this.populate();\n        this.positionAndShow();\n    }\n    close() {\n        clearTooltip();\n        this.domPanelBoundary.remove();\n        this.domObscureBackground.remove();\n        this.domObscureForeground.remove();\n        if (this.callbackClose)\n            this.callbackClose(this);\n        clearTooltip();\n    }\n    bump() {\n        this.positionAndShow();\n    }\n    bodyDOM() { return this.domBody; }\n    populate() {\n        if (this.callbackPopulate)\n            this.callbackPopulate(this);\n        else\n            this.bodyDOM().setText('Empty popup.');\n    }\n    positionAndShow() {\n        clearTooltip();\n        let winW = window.innerWidth, winH = window.innerHeight;\n        const GAP = 2;\n        let client = this.parent.el.getBoundingClientRect();\n        let wx1 = client.left, wy1 = client.top, wx2 = client.right, wy2 = client.bottom;\n        let pb = this.domPanelBoundary;\n        let maxW = Math.max(wx1, winW - wx2) - 4;\n        pb.css({ 'max-width': maxW + 'px' });\n        let scrollSize = empiricalScrollerSize();\n        let setPosition = () => {\n            let popW = this.domBody.width(), popH = this.domBody.height();\n            let posX = 0, posY = 0;\n            if (wy2 + GAP + popH < winH)\n                posY = wy2 + GAP;\n            else if (wy1 - GAP - popH > 0)\n                posY = wy1 - GAP - popH;\n            else if (winH - wy2 > wy1) {\n                posY = wy2 + GAP;\n                popH = winH - posY - GAP;\n            }\n            else {\n                posY = GAP;\n                popH = wy1 - posY - GAP;\n            }\n            if (pb.height() > popH)\n                popW += scrollSize.w + 10;\n            if (wx1 + popW < winW)\n                posX = wx1;\n            else if (popW < wx2)\n                posX = wx2 - popW;\n            setBoundaryPixels(pb, posX, posY, popW, popH);\n            pb.css({ 'visibility': 'visible' });\n        };\n        setTimeout(() => setPosition());\n    }\n}\n//# sourceMappingURL=Popup.js.map","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Widget} from 'webmolkit/ui/Widget';\nimport {dom, DOM} from 'webmolkit/util/dom';\n\n/*\n\tWidget for editing a key/value pattern, whereby key/value pairs can be added and edited individually.\n*/\n\ninterface KeyValueWidgetLine\n{\n\tkey:string;\n\tvalue:string;\n\tinputKey?:DOM;\n\tinputValue?:DOM;\n}\n\nexport class KeyValueWidget extends Widget\n{\n\tprivate lines:KeyValueWidgetLine[] = [];\n\n\tprivate divGrid:DOM;\n\n\t// ------------ public methods ------------\n\n\tconstructor(dict:Record<string, string | string[]>, private callbackChange:(dict:Record<string, string | string[]>) => void)\n\t{\n\t\tsuper();\n\n\t\tfor (let key in dict)\n\t\t{\n\t\t\tlet value = dict[key];\n\t\t\tif (typeof value == 'string') this.lines.push({key, value});\n\t\t\telse if (Array.isArray(value)) for (let v of value) this.lines.push({key, 'value': v});\n\t\t}\n\t}\n\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\t\t\n\t\tthis.divGrid = dom('<div/>').appendTo(this.contentDOM).css({'display': 'grid', 'width': '100%', 'margin': '0'});\n\t\tthis.divGrid.css({'align-items': 'baseline', 'justify-content': 'start'});\n\t\tthis.divGrid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\tthis.divGrid.css({'grid-template-columns': '[start key] 1fr [value] 1fr [button] auto [end]'});\n\n\t\tthis.rebuildGrid();\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate rebuildGrid():void\n\t{\n\t\tthis.divGrid.empty();\n\n\t\tlet row = 0;\n\n\t\tfor (let n = 0; n < this.lines.length; n++)\n\t\t{\n\t\t\tlet line = this.lines[n];\n\n\t\t\trow++;\n\t\t\tlet divKey = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / key`});\n\t\t\tlet divValue = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / value`});\n\t\t\tlet divButton = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / button`});\n\n\t\t\tline.inputKey = dom('<input/>').appendTo(divKey).css({'width': '100%', 'padding': '0', 'font': 'inherit'});\n\t\t\tline.inputKey.setValue(line.key);\n\t\t\tline.inputKey.onInput(() => this.scrapeData());\n\n\t\t\tline.inputValue = dom('<input/>').appendTo(divValue).css({'width': '100%', 'padding': '0', 'font': 'inherit'});\n\t\t\tline.inputValue.setValue(line.value);\n\t\t\tline.inputValue.onInput(() => this.scrapeData());\n\n\t\t\tlet btnDelete = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divButton);\n\t\t\tbtnDelete.setText('\\u{2716}');\n\t\t\tbtnDelete.onClick(() =>\n\t\t\t{\n\t\t\t\tthis.lines.splice(n, 1);\n\t\t\t\tthis.rebuildGrid();\n\t\t\t\tthis.scrapeData();\n\t\t\t});\n\t\t}\n\n\t\trow++;\n\t\tlet divAdd = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / start / ${row} / end`, 'text-align': this.lines.length > 0 ? 'center' : 'left'});\n\t\tlet btnAdd = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divAdd);\n\t\tbtnAdd.setText('\\u{271A}');\n\t\tbtnAdd.onClick(() =>\n\t\t{\n\t\t\tthis.lines.push({key: '', value: ''});\n\t\t\tthis.rebuildGrid();\n\t\t\tthis.scrapeData();\n\t\t});\n\t}\n\n\tprivate scrapeData():void\n\t{\n\t\tlet dict:Record<string, string | string[]> = {};\n\t\tfor (let line of this.lines)\n\t\t{\n\t\t\tline.key = line.inputKey.getValue();\n\t\t\tline.value = line.inputValue.getValue();\n\t\t\tif (!line.key || !line.value) continue;\n\n\t\t\tlet dval = dict[line.key];\n\t\t\tif (!dval) dict[line.key] = line.value;\n\t\t\telse if (typeof dval == 'string') dict[line.key] = [dval, line.value];\n\t\t\telse if (Array.isArray(dval)) dval.push(line.value);\n\t\t}\n\t\t\n\t\tthis.callbackChange(dict);\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Widget} from 'webmolkit/ui/Widget';\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {installInlineCSS} from 'webmolkit/util/Theme';\nimport {OntologyTree, OntologyTreeTerm} from 'webmolkit/data/OntologyTree';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {addTooltip, clearTooltip} from 'webmolkit/ui/Tooltip';\nimport {escapeHTML} from 'webmolkit/util/util';\nimport {Popup} from 'webmolkit/ui/Popup';\nimport {MixfileMetadatum} from '../mixture/Mixfile';\n\n/*\n\tWidget for editing a list of metadata items.\n*/\n\nconst CSS_METADATAWIDGET = `\n\t*.wmk-metadataitem:hover\n\t{\n\t\tbackground-color: #C0C0FF;\n\t\tcursor: pointer;\n\t}\n`;\n\ninterface MetadataWidgetLine\n{\n\tdatum:MixfileMetadatum;\n}\n\nexport class MetadataWidget extends Widget\n{\n\tprivate lines:MetadataWidgetLine[] = [];\n\n\tprivate divGrid:DOM;\n\n\t// ------------ public methods ------------\n\n\tconstructor(metadata:MixfileMetadatum[], private callbackChange:(metadata:MixfileMetadatum[]) => void)\n\t{\n\t\tsuper();\n\n\t\tif (metadata) for (let datum of metadata) this.lines.push({'datum': datum});\n\n\t\tinstallInlineCSS('metadatawidget', CSS_METADATAWIDGET);\n\t}\n\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\n\t\tthis.divGrid = dom('<div/>').appendTo(this.contentDOM).css({'display': 'grid', 'width': '100%', 'margin': '0'});\n\t\tthis.divGrid.css({'align-items': 'baseline', 'justify-content': 'start'});\n\t\tthis.divGrid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\tthis.divGrid.css({'grid-template-columns': '[start content] 1fr [button] auto [end]'});\n\n\t\tthis.rebuildGrid();\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate rebuildGrid():void\n\t{\n\t\tthis.divGrid.empty();\n\n\t\tlet renderTerm = (parent:DOM, item:number | string, line:MetadataWidgetLine, idx:number):void =>\n\t\t{\n\t\t\tlet div = dom('<div/>').appendTo(parent);\n\t\t\tdiv.css({'padding': '0.2em', 'margin-right': '0.5em'});\n\t\t\tif (typeof item == 'string')\n\t\t\t{\n\t\t\t\tdiv.css({'background-color': idx == 0 ? '#D0D0D0' : '#D0D0FF', 'border-radius': '3px'});\n\t\t\t\tlet branch = OntologyTree.main.getBranch(item);\n\t\t\t\tif (Vec.notBlank(branch))\n\t\t\t\t{\n\t\t\t\t\tdiv.setText(branch[0].label);\n\t\t\t\t\taddTooltip(div, escapeHTML(branch[0].uri), null, 1000);\n\t\t\t\t}\n\t\t\t\telse div.setText(item);\n\t\t\t}\n\t\t\telse // number (or null, which is a pre-number)\n\t\t\t{\n\t\t\t\tlet input = dom('<input type=\"number\"/>').appendTo(div).css({'width': '5em', 'padding': '0', 'font': 'inherit'});\n\t\t\t\tif (item != null)\n\t\t\t\t{\n\t\t\t\t\tinput.css({'width': Math.max(5, item.toString().length) + 'em'});\n\t\t\t\t\tinput.setValue(item.toString());\n\t\t\t\t}\n\t\t\t\tinput.onInput(() =>\n\t\t\t\t{\n\t\t\t\t\tlet num = parseFloat(input.getValue());\n\t\t\t\t\tif (!isNaN(num)) (line.datum as number[])[idx] = num;\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tlet row = 0;\n\n\t\tfor (let n = 0; n < this.lines.length; n++)\n\t\t{\n\t\t\tlet line = this.lines[n];\n\n\t\t\trow++;\n\t\t\tlet divContent = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / content`});\n\t\t\tlet divButton = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / button`});\n\n\t\t\tdivContent.css({'display': 'flex', 'flex-wrap': 'wrap', 'justify-content': 'flex-start', 'align-items': 'baseline'});\n\t\t\tif (Array.isArray(line.datum))\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < line.datum.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet item = line.datum[i];\n\t\t\t\t\trenderTerm(divContent, item, line, i);\n\t\t\t\t}\n\n\t\t\t\tif (line.datum.length > 1)\n\t\t\t\t{\n\t\t\t\t\tlet btnBack = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divContent);\n\t\t\t\t\tbtnBack.setText('\\u{21E6}');\n\t\t\t\t\tbtnBack.css({'margin-right': '0.5em'});\n\t\t\t\t\tbtnBack.onClick(() =>\n\t\t\t\t\t{\n\t\t\t\t\t\tlet list = line.datum as any[];\n\t\t\t\t\t\tlist.splice(list.length - 1, 1);\n\t\t\t\t\t\tif (typeof Vec.last(list) != 'string') list.splice(list.length - 1, 1);\n\t\t\t\t\t\tthis.rebuildGrid();\n\t\t\t\t\t\tthis.triggerModified();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse renderTerm(divContent, line.datum, line, 0);\n\n\t\t\tlet btnAssert = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divContent);\n\t\t\tbtnAssert.setText('\\u{21E9}');\n\t\t\tbtnAssert.css({'margin-right': '0.5em'});\n\t\t\tbtnAssert.onClick(() => this.pickExtraTerm(btnAssert, line, false));\n\t\t\tlet btnProp = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divContent);\n\t\t\tbtnProp.setText('\\u{21E8}');\n\t\t\tbtnProp.css({'margin-right': '0.5em'});\n\t\t\tbtnProp.onClick(() => this.pickExtraTerm(btnProp, line, true));\n\n\t\t\tlet btnDelete = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divButton);\n\t\t\tbtnDelete.setText('\\u{2716}');\n\t\t\tbtnDelete.onClick(() =>\n\t\t\t{\n\t\t\t\tthis.lines.splice(n, 1);\n\t\t\t\tthis.rebuildGrid();\n\t\t\t\tthis.triggerModified();\n\t\t\t});\n\t\t}\n\n\t\trow++;\n\t\tlet divAdd = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / start / ${row} / end`, 'text-align': this.lines.length > 0 ? 'center' : 'left'});\n\t\tlet btnAdd = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divAdd);\n\t\tbtnAdd.setText('\\u{271A}');\n\t\tbtnAdd.onClick(() => this.pickNewTerm(btnAdd));\n\t}\n\n\tprivate triggerModified():void\n\t{\n\t\tlet metadata = this.lines.map((line) => line.datum);\n\t\tthis.callbackChange(metadata);\n\t}\n\n\tprivate pickNewTerm(divParent:DOM):void\n\t{\n\t\tlet branchList:OntologyTreeTerm[] = [];\n\t\tconst ROOTS = ['http://mixtures.io/rdf#MixtureMetadata'];\n\t\tfor (let rootURI of ROOTS) branchList.push(...OntologyTree.main.getBranchList(rootURI));\n\t\tlet popup = new Popup(divParent);\n\t\tpopup.callbackPopulate = () =>\n\t\t{\n\t\t\tthis.populateBranch(popup, branchList, (term) =>\n\t\t\t{\n\t\t\t\tthis.lines.push({datum: term.uri});\n\t\t\t\tthis.rebuildGrid();\n\t\t\t\tthis.triggerModified();\n\t\t\t});\n\t\t};\n\t\tpopup.open();\n\t}\n\n\tprivate pickExtraTerm(divParent:DOM, line:MetadataWidgetLine, isProperty:boolean):void\n\t{\n\t\tlet branchList:OntologyTreeTerm[] = [];\n\t\tconst ROOTS_ASSERT = ['http://mixtures.io/rdf#MixtureMetadata'];\n\t\tconst ROOTS_PROP = ['http://purl.obolibrary.org/obo/UO_0000000'];\n\t\tfor (let rootURI of (isProperty ? ROOTS_PROP : ROOTS_ASSERT)) branchList.push(...OntologyTree.main.getBranchList(rootURI));\n\t\tlet popup = new Popup(divParent);\n\t\tpopup.callbackPopulate = () =>\n\t\t{\n\t\t\tthis.populateBranch(popup, branchList, (term) =>\n\t\t\t{\n\t\t\t\tif (typeof line.datum == 'string') line.datum = [line.datum];\n\t\t\t\tif (isProperty) line.datum.push(null);\n\t\t\t\tline.datum.push(term.uri);\n\t\t\t\tthis.rebuildGrid();\n\t\t\t\tthis.triggerModified();\n\t\t\t});\n\t\t};\n\t\tpopup.open();\n\t}\n\n\t// enumerates a list of clickable ontology tree items\n\tprivate populateBranch(popup:Popup, branchList:OntologyTreeTerm[], callbackClicked:(term:OntologyTreeTerm) => void):void\n\t{\n\t\tlet body = popup.bodyDOM();\n\n\t\tfor (let term of branchList)\n\t\t{\n\t\t\tlet div = dom('<div/>').appendTo(body);\n\t\t\tif (term.depth > 0)\n\t\t\t{\n\t\t\t\tdiv.css({'margin-left': (term.depth - 0.5) + 'em'});\n\t\t\t\tdom('<span>\\u{279E}</span>').appendTo(div).css({'color': '#A0A0A0', 'margin-right': '0.5em'});\n\t\t\t}\n\t\t\tlet span = dom('<span/>').appendTo(div).class('wmk-metadataitem');\n\t\t\tspan.setText(term.label);\n\t\t\taddTooltip(span, escapeHTML(term.uri), null, 2000);\n\t\t\tspan.onClick(() =>\n\t\t\t{\n\t\t\t\tclearTooltip();\n\t\t\t\tpopup.close();\n\t\t\t\tcallbackClicked(term);\n\t\t\t});\n\t\t}\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Dialog} from 'webmolkit/dialog/Dialog';\nimport {ClipboardProxy, ClipboardProxyHandler} from 'webmolkit/ui/ClipboardProxy';\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {OptionList} from 'webmolkit/ui/OptionList';\nimport {deepClone} from 'webmolkit/util/util';\nimport {installInlineCSS} from 'webmolkit/util/Theme';\nimport {OntologyTree} from 'webmolkit/data/OntologyTree';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Popup} from 'webmolkit/ui/Popup';\nimport {MoleculeStream} from 'webmolkit/io/MoleculeStream';\nimport {MolUtil} from 'webmolkit/mol/MolUtil';\nimport {Chemistry} from 'webmolkit/mol/Chemistry';\nimport {MixfileComponent} from '../mixture/Mixfile';\nimport {InChI} from '../nodejs/InChI';\nimport {Mixture} from '../mixture/Mixture';\nimport {Units} from '../mixture/Units';\nimport {InChIDelegate} from '../mixture/InChIDelegate';\nimport {KeyValueWidget} from './KeyValueWidget';\nimport {MetadataWidget} from '../electron/MetadataWidget';\n\n/*\n\tHigh level widget for the editing area for a mixture.\n*/\n\nconst CSS_EDITCOMPONENT = `\n\t*.wmk-editcomponent-input\n\t{\n\t}\n\t*.wmk-editcomponent-input::placeholder\n\t{\n\t\tfont-size: 70%;\n\t\tcolor: #D0D0D0;\n\t}\n\t*.wmk-editcomponent-units\n\t{\n\t\tcursor: pointer;\n\t}\n\t*.wmk-editcomponent-units:hover\n\t{\n\t\tbackground-color: #C0C0FF;\n\t\tcursor: pointer;\n\t}\n`;\n\nenum QuantityType\n{\n\tValue = 'Value',\n\tRange = 'Range',\n\tRatio = 'Ratio'\n}\nconst RELATION_VALUES:string[] = ['=', '~', '<', '<=', '>', '>='];\nconst RELATION_LABELS:string[] = ['=', '~', '&lt;', '&le;', '&gt;', '&ge;'];\n\nexport class EditComponent extends Dialog\n{\n\tpublic proxyClip:ClipboardProxy = null;\n\n\tprivate component:MixfileComponent;\n\n\tprivate btnSketch:DOM;\n\tprivate btnSave:DOM;\n\n\tprivate lineName:DOM;\n\tprivate optQuantType:OptionList;\n\tprivate dropQuantRel:DOM;\n\tprivate lineQuantVal1:DOM;\n\tprivate lineQuantVal2:DOM;\n\tprivate lineQuantUnits:DOM;\n\tprivate btnQuantUnits:DOM;\n\tprivate areaDescr:DOM = null;\n\tprivate areaSyn:DOM = null;\n\tprivate lineFormula:DOM;\n\tprivate divWeight:DOM;\n\tprivate lineInChI:DOM;\n\tprivate lineSMILES:DOM;\n\n\tprivate callbackSave:(source?:EditComponent) => void = null;\n\tprivate callbackSketch:(source?:EditComponent) => void = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(component:MixfileComponent, private inchi:InChIDelegate, private parentSize:[number, number], parent:DOM = null)\n\t{\n\t\tsuper(parent);\n\n\t\tthis.component = deepClone(component);\n\n\t\tthis.title = 'Edit Component';\n\t\tthis.minPortionWidth = 20;\n\t\tthis.maxPortionWidth = 95;\n\t\t//this.maximumWidth = parentSize[0];\n\t\t//this.maximumHeight = parentSize[1];\n\n\t\tinstallInlineCSS('editcomponent', CSS_EDITCOMPONENT);\n\t}\n\n\tpublic onSave(callback:(source?:EditComponent) => void):void\n\t{\n\t\tthis.callbackSave = callback;\n\t}\n\tpublic onSketch(callback:(source?:EditComponent) => void):void\n\t{\n\t\tthis.callbackSketch = callback;\n\t}\n\n\tpublic getComponent():MixfileComponent {return this.component;}\n\n\t// builds the dialog content\n\tprotected populate():void\n\t{\n\t\tif (this.proxyClip) this.proxyClip.pushHandler(new ClipboardProxyHandler());\n\n\t\tlet buttons = this.buttonsDOM(), body = this.bodyDOM();\n\n\t\t// top section\n\n\t\tif (this.callbackSketch)\n\t\t{\n\t\t\tthis.btnSketch = dom('<button class=\"wmk-button wmk-button-default\">Sketch</button>').appendTo(buttons);\n\t\t\tthis.btnSketch.onClick(() => this.invokeSketcher());\n\t\t}\n\n\t\tbuttons.appendText(' ');\n\t\tbuttons.append(this.domClose); // easy way to reorder\n\n\t\tbuttons.appendText(' ');\n\t\tthis.btnSave = dom('<button class=\"wmk-button wmk-button-primary\">Save</button>').appendTo(buttons);\n\t\tthis.btnSave.onClick(() => this.saveAndClose());\n\n\t\t// main section\n\n\t\tbody.css({'padding': '0 0 0 1em'});\n\t\tlet vertical = dom('<div/>').appendTo(body);\n\t\tvertical.css({'overflow-y': 'scroll', 'height': '100%'});\n\t\tvertical.css({'max-height': this.parentSize[1] + 'px'});\n\t\tvertical.css({'padding-right': '18px', 'padding-bottom': '10px'});\n\n\t\t// first batch of fields\n\n\t\tlet grid1 = this.fieldGrid().appendTo(vertical);\n\n\t\tthis.createFieldName(grid1, 1, 'Name', false);\n\t\tthis.lineName = this.createValueLine(grid1, 1);\n\t\tthis.lineName.setValue(this.component.name);\n\n\t\tthis.createFieldName(grid1, 2, 'Quantity', false);\n\t\tlet divQuant = dom('<div/>').appendTo(grid1);\n\t\tdivQuant.css({'grid-column': 'value', 'grid-row': '2'});\n\t\tthis.createQuantity(divQuant);\n\n\t\tthis.createFieldName(grid1, 3, 'Description', true);\n\t\tthis.areaDescr = this.createValueMultiline(grid1, 3);\n\n\t\tthis.createFieldName(grid1, 4, 'Synonyms', true);\n\t\tthis.areaSyn = this.createValueMultiline(grid1, 4);\n\n\t\tthis.areaDescr.setValue(this.component.description);\n\t\tif (this.component.synonyms) this.areaSyn.setValue(this.component.synonyms.join('\\n'));\n\n\t\t// second batch of fields\n\n\t\tlet grid2 = this.fieldGrid().appendTo(vertical);\n\t\tlet row = 0;\n\n\t\t//this.createFieldName(grid2, ++row, 'Formula', false);\n\t\trow++;\n\t\tthis.createFieldName(grid2, ++row, 'Formula', false);\n\t\tlet divFormula = this.createDiv(grid2, row).css({'display': 'flex', 'align-items': 'center'});\n\t\tthis.lineFormula = dom('<input/>').appendTo(divFormula).css({'flex-grow': '1', 'font': 'inherit'});\n\t\tthis.lineFormula.setValue(this.component.formula);\n\t\tthis.lineFormula.elInput.placeholder = this.calculateFormula();\n\t\tthis.lineFormula.onInput(() => this.calculateWeight());\n\t\tthis.divWeight = dom('<div/>').appendTo(divFormula).css({'flex-grow': '0'});\n\t\tthis.calculateWeight();\n\n\t\tthis.createFieldName(grid2, ++row, 'InChI', false);\n\t\tthis.lineInChI = this.createValueLine(grid2, row);\n\t\tthis.lineInChI.setValue(this.component.inchi);\n\n\t\tif (InChI.isAvailable() && this.component.molfile)\n\t\t{\n\t\t\tlet div = this.createDiv(grid2, ++row);\n\t\t\tlet btn = dom('<button class=\"wmk-button wmk-button-default\">Calculate from Structure</button>').appendTo(div);\n\t\t\tbtn.onClick(() => {this.calculateInChI().then();});\n\t\t}\n\n\t\tthis.createFieldName(grid2, ++row, 'SMILES', false);\n\t\tthis.lineSMILES = this.createValueLine(grid2, row);\n\t\tthis.lineSMILES.setValue(this.component.smiles);\n\n\t\tthis.createFieldName(grid2, ++row, 'Identifiers', true);\n\t\tlet editIdentifiers = new KeyValueWidget(this.component.identifiers, (dict) =>\n\t\t{\n\t\t\tthis.component.identifiers = dict;\n\t\t});\n\t\teditIdentifiers.render(dom('<div/>').appendTo(grid2).css({'grid-area': `${row} / value`}));\n\n\t\tthis.createFieldName(grid2, ++row, 'Links', true);\n\t\tlet editLinks = new KeyValueWidget(this.component.links, (dict) =>\n\t\t{\n\t\t\tthis.component.links = dict;\n\t\t});\n\t\teditLinks.render(dom('<div/>').appendTo(grid2).css({'grid-area': `${row} / value`}));\n\n\t\tif (OntologyTree.main && OntologyTree.main.getRoots().length > 0)\n\t\t{\n\t\t\tthis.createFieldName(grid2, ++row, 'Metadata', true);\n\t\t\tlet editMetadata = new MetadataWidget(this.component.metadata, (metadata) =>\n\t\t\t{\n\t\t\t\tthis.component.metadata = Vec.notBlank(metadata) ? metadata : undefined;\n\t\t\t});\n\t\t\teditMetadata.render(dom('<div/>').appendTo(grid2).css({'grid-area': `${row} / value`}));\n\t\t}\n\n\t\tthis.lineName.grabFocus();\n\n\t\tfor (let dom of body.findAll('input')) dom.onKeyDown((event) => this.trapEscape(event, true));\n\t\tfor (let dom of body.findAll('textarea')) dom.onKeyDown((event) => this.trapEscape(event, false));\n\t\tfor (let dom of body.findAll('input,textarea')) dom.elInput.spellcheck = false;\n\t}\n\n\tpublic close():void\n\t{\n\t\tif (this.proxyClip) this.proxyClip.popHandler();\n\t\tsuper.close();\n\t}\n\n\t// ------------ private methods ------------\n\n\t// assuming that something is different, refreshes the current component information and closes\n\tprivate saveAndClose():void\n\t{\n\t\tlet nullifyBlank = (str:string):string => str === '' ? null : str;\n\t\tlet splitLines = (str:string):string[] =>\n\t\t{\n\t\t\tlet lines = str.split('\\n').filter((line) => line.length > 0);\n\t\t\treturn lines.length > 0 ? lines : null;\n\t\t};\n\t\tlet splitKeys = (str:string):Record<string, any> =>\n\t\t{\n\t\t\tlet dict:Record<string, any> = null;\n\t\t\tfor (let line of str.split('\\n'))\n\t\t\t{\n\t\t\t\tlet eq = line.indexOf('=');\n\t\t\t\tif (eq < 0) continue;\n\t\t\t\tif (dict == null) dict = {};\n\t\t\t\tdict[line.substring(0, eq)] = line.substring(eq + 1);\n\t\t\t}\n\t\t\treturn dict;\n\t\t};\n\n\t\tthis.component.name = nullifyBlank(this.lineName.getValue());\n\n\t\tlet qtype = this.optQuantType.getSelectedValue();\n\t\t[this.component.ratio, this.component.quantity, this.component.error] = [null, null, null];\n\t\tlet strQuant1 = this.lineQuantVal1.getValue().trim(), strQuant2 = this.lineQuantVal2.getValue().trim();\n\t\tif (qtype == QuantityType.Value)\n\t\t{\n\t\t\tif (strQuant1) this.component.quantity = parseFloat(strQuant1);\n\t\t\tif (strQuant2) this.component.error = parseFloat(strQuant2);\n\t\t\tthis.component.units = this.lineQuantUnits.getValue().trim();\n\t\t}\n\t\telse if (qtype == QuantityType.Range)\n\t\t{\n\t\t\tthis.component.quantity = [parseFloat(strQuant1), parseFloat(strQuant2)];\n\t\t\tthis.component.relation = null;\n\t\t\tthis.component.units = this.lineQuantUnits.getValue().trim();\n\t\t}\n\t\telse if (qtype == QuantityType.Ratio)\n\t\t{\n\t\t\tthis.component.ratio = [parseFloat(strQuant1), parseFloat(strQuant2)];\n\t\t\tthis.component.relation = null;\n\t\t\tthis.component.units = null;\n\t\t}\n\n\t\tif (!Mixture.hasQuantity(this.component))\n\t\t{\n\t\t\tthis.component.quantity = null;\n\t\t\tthis.component.error = null;\n\t\t\tthis.component.ratio = null;\n\t\t\tthis.component.units = null;\n\t\t\tthis.component.relation = null;\n\t\t}\n\n\t\tif (this.areaDescr) this.component.description = nullifyBlank(this.areaDescr.getValue());\n\n\t\tthis.component.synonyms = splitLines(this.areaSyn.getValue());\n\n\t\tthis.component.formula = nullifyBlank(this.lineFormula.getValue());\n\t\tthis.component.inchi = nullifyBlank(this.lineInChI.getValue());\n\t\tthis.component.smiles = nullifyBlank(this.lineSMILES.getValue());\n\n\t\t// remove explicit nulls, for clarity\n\t\t//Object.keys(this.component).forEach((key:string) => {if ((<any>this.component)[key] == null) delete (<any>this.component)[key];});\n\n\t\t//console.log(JSON.stringify(this.component));\n\t\tthis.callbackSave(this);\n\t}\n\n\t// change to sketch mode: close this dialog, save everything, then tell the parent to sketch instead\n\tprivate invokeSketcher():void\n\t{\n\t\tthis.saveAndClose();\n\t\tthis.callbackSketch(this);\n\t}\n\n\t// creates a 2-column grid for field/value entry\n\tprivate fieldGrid():DOM\n\t{\n\t\tlet div = dom('<div/>').css({'display': 'grid', 'width': '100%', 'margin': '1em 0 1em 0'});\n\t\tdiv.css({'align-items': 'center'}); // would be 'baseline', but breaks with textarea\n\t\tdiv.css({'justify-content': 'start', 'grid-row-gap': '0.5em'});\n\t\tdiv.css({'grid-template-columns': '[start field] max-content [value] 1fr [end]'});\n\t\treturn div;\n\t}\n\n\t// creates a field name for inclusion in the grid\n\tprivate createFieldName(parent:DOM, row:number, text:string, topAlign:boolean):DOM\n\t{\n\t\tlet div = dom('<div/>').appendTo(parent);\n\t\tdiv.css({'grid-column': 'field', 'grid-row': row.toString(), 'align-self': topAlign ? 'baseline' : 'center'});\n\t\tif (topAlign) div.css({'padding-top': '0.2em'}); // baseline fudge\n\t\tdiv.css({'padding-right': '0.5em', 'font-weight': 'bold'});\n\t\tdiv.setText(text);\n\t\treturn div;\n\t}\n\n\t// returns single/multi-line editors\n\tprivate createValueLine(parent:DOM, row:number):DOM\n\t{\n\t\tlet div = dom('<div/>').appendTo(parent).css({'grid-area': `${row} / value`});\n\t\tlet input = dom('<input/>').appendTo(div);\n\t\tinput.css({'width': 'calc(100% - 4px)', 'padding': '0', 'font': 'inherit'});\n\t\treturn input;\n\t}\n\tprivate createValueMultiline(parent:DOM, row:number):DOM\n\t{\n\t\tlet div = dom('<div/>').appendTo(parent).css({'grid-area': `${row} / value`});\n\t\tlet area = dom('<textarea/>').appendTo(div);\n\t\tarea.attr({'rows': '5'});\n\t\tarea.css({'width': 'calc(100% - 4px)', 'padding': '0', 'font': 'inherit'});\n\t\treturn area;\n\t}\n\n\tprivate createDiv(parent:DOM, row:number):DOM\n\t{\n\t\tlet div = dom('<div/>').appendTo(parent);\n\t\tdiv.css({'grid-column': 'value', 'grid-row': row.toString()});\n\t\treturn div;\n\t}\n\n\t// make it so that line/text entry boxes trap the escape key to close the dialog box\n\tprivate trapEscape(event:KeyboardEvent, andEnter:boolean):void\n\t{\n\t\tif (event.keyCode == 27)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.close();\n\t\t}\n\t\telse if (andEnter && event.keyCode == 13)\n\t\t{\n\t\t\tif (this.interpretQuantString()) return;\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.saveAndClose();\n\t\t}\n\t}\n\n\t// creates the quantity data entry objects, which are somewhat fiddly and multistate\n\tprivate createQuantity(parent:DOM):void\n\t{\n\t\tlet flex = dom('<div/>').appendTo(parent);\n\t\tflex.css({'display': 'flex', 'align-items': 'center'});\n\t\tlet box = ():DOM => dom('<div style=\"padding-left: 0.5em;\"/>').appendTo(flex);\n\n\t\tthis.optQuantType = new OptionList([QuantityType.Value, QuantityType.Range, QuantityType.Ratio]);\n\t\tthis.optQuantType.render(flex);\n\n\t\tthis.dropQuantRel = this.makeDropdownGroup(box(), this.component.relation, RELATION_VALUES, RELATION_LABELS,\n\t\t\t\t\t\t\t\t\t(value:string, label:string) => {this.component.relation = value;});\n\n\t\tthis.lineQuantVal1 = dom('<input/>').appendTo(box()).class('wmk-editcomponent-input');\n\t\tthis.lineQuantVal1.attr({'size': '10'});\n\t\tthis.lineQuantVal1.onChange(() => this.interpretQuantString());\n\n\t\tlet spanGap = dom('<span/>').appendTo(flex).css({'padding': '0 0.5em 0 0.5em'});\n\n\t\tthis.lineQuantVal2 = dom('<input/>').appendTo(box()).class('wmk-editcomponent-input');\n\t\tthis.lineQuantVal2.attr({'size': '10'});\n\n\t\tlet qubox = box();\n\t\tthis.lineQuantUnits = dom('<input/>').appendTo(qubox).class('wmk-editcomponent-input');\n\t\tthis.lineQuantUnits.attr({'size': '10', 'placeholder': 'units'});\n\t\tthis.btnQuantUnits = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(qubox).css({'margin-left': '0.2em'});\n\t\tthis.btnQuantUnits.setText('\\u{25BC}');\n\t\tthis.btnQuantUnits.onClick(() => this.selectDropUnits());\n\n\t\tlet changeToValue = ():void =>\n\t\t{\n\t\t\tthis.dropQuantRel.setCSS('display', 'block');\n\t\t\tspanGap.setHTML('&plusmn;');\n\t\t\tthis.lineQuantUnits.setCSS('display', 'inline-block');\n\t\t\tthis.btnQuantUnits.setCSS('display', 'inline-block');\n\t\t};\n\t\tlet changeToRange = ():void =>\n\t\t{\n\t\t\tthis.dropQuantRel.setCSS('display', 'none');\n\t\t\tspanGap.setHTML('to');\n\t\t\tthis.lineQuantUnits.setCSS('display', 'inline-block');\n\t\t\tthis.btnQuantUnits.setCSS('display', 'inline-block');\n\t\t};\n\t\tlet changeToRatio = ():void =>\n\t\t{\n\t\t\tthis.dropQuantRel.setCSS('display', 'none');\n\t\t\tspanGap.setHTML('/');\n\t\t\tthis.lineQuantUnits.setCSS('display', 'none');\n\t\t\tthis.btnQuantUnits.setCSS('display', 'none');\n\t\t};\n\n\t\tif (this.component.ratio != null)\n\t\t{\n\t\t\tthis.optQuantType.setSelectedValue(QuantityType.Ratio);\n\t\t\tif (this.component.ratio)\n\t\t\t{\n\t\t\t\tlet [numer, denom] = this.component.ratio;\n\t\t\t\tthis.lineQuantVal1.setValue(numer.toString());\n\t\t\t\tthis.lineQuantVal2.setValue(denom.toString());\n\t\t\t}\n\t\t\tchangeToRatio();\n\t\t}\n\t\telse if (Array.isArray(this.component.quantity))\n\t\t{\n\t\t\tthis.optQuantType.setSelectedValue(QuantityType.Range);\n\t\t\tlet [low, high] = this.component.quantity;\n\t\t\tif (low != null) this.lineQuantVal1.setValue(low.toString());\n\t\t\tif (high != null) this.lineQuantVal2.setValue(high.toString());\n\t\t\tthis.lineQuantUnits.setValue(this.component.units);\n\t\t\tchangeToRange();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.optQuantType.setSelectedValue(QuantityType.Value);\n\t\t\tif (this.component.quantity != null) this.lineQuantVal1.setValue(this.component.quantity.toString());\n\t\t\tif (this.component.error != null) this.lineQuantVal2.setValue(this.component.error.toString());\n\t\t\tthis.lineQuantUnits.setValue(this.component.units);\n\t\t\tchangeToValue();\n\t\t}\n\n\t\tthis.optQuantType.callbackSelect = (idx:number) =>\n\t\t{\n\t\t\tif (idx == 0) changeToValue();\n\t\t\telse if (idx == 1) changeToRange();\n\t\t\telse if (idx == 2) changeToRatio();\n\t\t};\n\t}\n\n\t// creates a dropdown list with a prescribed list of choices; the first one will be selected if current matches nothing\n\tprivate makeDropdownGroup(parent:DOM, current:string, values:string[], labels:string[], changeFunc:(value:string, label:string) => void):DOM\n\t{\n\t\tlet drop = dom('<select/>').appendTo(parent);\n\t\tdrop.css({'height': '2.3em'});\n\t\tfor (let n = 0; n < values.length; n++)\n\t\t{\n\t\t\tlet opt = dom('<option/>').appendTo(drop);\n\t\t\topt.setAttr('value', n.toString());\n\t\t\topt.setHTML(labels[n]);\n\t\t\tif (current == values[n] || current == labels[n]) opt.setAttr('selected', 'true');\n\t\t}\n\t\tdrop.onChange(() => {let idx = parseInt(drop.getValue()); changeFunc(values[idx], labels[idx]);});\n\t\treturn drop;\n\t}\n\n\tprivate selectDropUnits():void\n\t{\n\t\tlet popup = new Popup(this.btnQuantUnits);\n\t\tpopup.callbackPopulate = () =>\n\t\t{\n\t\t\tlet body = popup.bodyDOM();\n\t\t\tfor (let label of Units.commonNames())\n\t\t\t{\n\t\t\t\tlet div = dom('<div/>').appendTo(body).class('wmk-editcomponent-units');\n\t\t\t\tdiv.setText(label);\n\t\t\t\tdiv.onClick(() =>\n\t\t\t\t{\n\t\t\t\t\tthis.lineQuantUnits.setValue(label);\n\t\t\t\t\tpopup.close();\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\tpopup.open();\n\t}\n\n\t// special deal: when typing in extended content to the regular value entry box, optionally break up strings that contain\n\t// a more complete description, e.g. quantity *and* units; returns true if it did something interesting\n\tprivate interpretQuantString():boolean\n\t{\n\t\tlet qstr = this.lineQuantVal1.getValue().trim();\n\n\t\t// scrape out any \"relation\" properties from the beginning first of all\n\t\tlet rel = '';\n\t\tfor (let pfx of RELATION_VALUES) if (qstr.startsWith(pfx) && pfx.length > rel.length) rel = pfx;\n\t\tif (rel) qstr = qstr.substring(rel.length);\n\t\telse if (qstr.startsWith('\\u{2264}')) [rel, qstr] = ['<=', qstr.substring(1)];\n\t\telse if (qstr.startsWith('\\u{2265}')) [rel, qstr] = ['>=', qstr.substring(1)];\n\n\t\t// scrape off units from the end\n\t\tlet units = '';\n\t\tfor (let [name, uri] of Object.entries(Units.NAME_TO_URI))\n\t\t{\n\t\t\tlet regname = name.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // regexify the unit name\n\t\t\tlet regex = new RegExp(`^(.*[\\\\d\\\\s\\)])(${regname})$`);\n\t\t\tlet match = regex.exec(qstr);\n\t\t\tif (!match) continue;\n\t\t\tqstr = match[1];\n\t\t\tunits = Units.URI_TO_NAME[uri];\n\t\t\tbreak;\n\t\t}\n\n\t\tlet isNum = (str:string):boolean =>\n\t\t{\n\t\t\tif (str.startsWith('.')) str = '0' + str;\n\t\t\tif (!/^-?[0-9]+\\.?[0-9eE]*$/.test(str)) return false;\n\t\t\treturn !isNaN(parseFloat(str));\n\t\t};\n\n\t\tqstr = qstr.trim();\n\t\tlet qtype:QuantityType = null;\n\t\tlet qnum1 = '', qnum2 = '';\n\t\tlet match = /^([0-9\\-\\.eE]+)-([0-9\\-\\.eE]+)$/.exec(qstr); // A-B\n\t\tif (match)\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Range, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2) || !units) return false;\n\t\t}\n\t\telse if (match = /^([0-9\\-\\.eE]+)\\.\\.([0-9\\-\\.eE]+)$/.exec(qstr)) // A..B\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Range, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2) || !units) return false;\n\t\t}\n\t\telse if (match = /^([0-9\\-\\.eE]+)\\(([0-9\\-\\.eE]+)\\)$/.exec(qstr)) // A(B)\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Value, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2) || !units) return false;\n\t\t}\n\t\telse if (match = /^([0-9\\-\\.eE]+)\\:([0-9\\-\\.eE]+)$/.exec(qstr)) // A:B\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Ratio, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2)) return false;\n\t\t}\n\t\telse if (match = /^([0-9\\-\\.eE]+)\\/([0-9\\-\\.eE]+)$/.exec(qstr)) // A/B\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Ratio, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2)) return false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (!isNum(qstr) || !units) return false;\n\t\t\t[qtype, qnum1] = [QuantityType.Value, qstr];\n\t\t}\n\n\t\tthis.optQuantType.setSelectedValue(qtype);\n\t\tthis.dropQuantRel.setValue(Math.max(0, RELATION_VALUES.indexOf(rel)).toString());\n\t\tthis.lineQuantVal1.setValue(qnum1);\n\t\tthis.lineQuantVal2.setValue(qnum2);\n\t\tthis.lineQuantUnits.setValue(units);\n\t\tthis.component.units = units;\n\t\treturn true;\n\t}\n\n\t// uses the structure (if any) to calculate the InChI, and fill in the field value\n\tprivate async calculateInChI():Promise<void>\n\t{\n\t\tif (!InChI.isAvailable()) return;\n\t\t//let mol = this.sketcher.getMolecule();\n\t\tlet mol = MoleculeStream.readUnknown(this.component.molfile);\n\t\tif (MolUtil.isBlank(mol))\n\t\t{\n\t\t\t//alert('Draw a molecule first, then calculate the InChI.');\n\t\t\treturn;\n\t\t}\n\n\t\ttry\n\t\t{\n\t\t\tlet {inchi} = await this.inchi.generate(mol);\n\t\t\tthis.lineInChI.setValue(inchi);\n\t\t}\n\t\tcatch (ex) {alert('InChI generation failed: ' + ex);}\n\t}\n\n\t// if there is a structure, calculate MF\n\tprivate calculateFormula():string\n\t{\n\t\tif (!this.component.molfile) return '';\n\t\tlet mol = MoleculeStream.readUnknown(this.component.molfile);\n\t\tif (MolUtil.isBlank(mol)) return '';\n\t\tfor (let n = mol.numAtoms; n >= 1; n--) if (mol.atomicNumber(n) == 0) mol.deleteAtomAndBonds(n);\n\t\treturn MolUtil.molecularFormula(mol);\n\t}\n\n\t// derive from MF field, if any\n\tprivate calculateWeight():void\n\t{\n\t\tlet mw = 0;\n\n\t\tlet mf = this.lineFormula.getValue();\n\t\tif (!mf) mf = this.lineFormula.elInput.placeholder;\n\n\t\twhile (mf)\n\t\t{\n\t\t\tlet match = mf.match(/^([A-Z][a-z]?)(\\d*)(.*?)$/);\n\t\t\tif (!match) {mw = 0; break;}\n\t\t\tlet atno = Chemistry.ELEMENTS.indexOf(match[1]);\n\t\t\tif (atno <= 0) {mw = 0; break;}\n\t\t\tlet num = 1;\n\t\t\tif (match[2])\n\t\t\t{\n\t\t\t\tnum = parseInt(match[2]);\n\t\t\t\tif (num <= 0) {mw = 0; break;}\n\t\t\t}\n\t\t\tmw += Chemistry.NATURAL_ATOMIC_WEIGHTS[atno] * num;\n\t\t\tmf = match[3];\n\t\t}\n\n\t\tif (mw > 0)\n\t\t{\n\t\t\tthis.divWeight.css({'padding-left': '0.5em'});\n\t\t\tthis.divWeight.setText(mw.toFixed(3) + ' g/mol');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.divWeight.css({'padding-left': '0'});\n\t\t\tthis.divWeight.setText('');\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {DataSheet} from 'webmolkit/ds/DataSheet';\nimport {MDLSDFReader} from 'webmolkit/io/MDLReader';\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {MolUtil} from 'webmolkit/mol/MolUtil';\nimport {CoordUtil} from 'webmolkit/mol/CoordUtil';\n\n/*\n\tSearching PubChem via the REST API, using names to track down other information, primarily structure.\n*/\n\nconst BASE_COMPOUND = 'https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound';\n\nexport interface PubChemSearchResult\n{\n\tmol:Molecule;\n\tnames:string[];\n\tformula:string;\n\tinchi:string;\n\tinchiKey:string;\n}\n\nexport class PubChemSearch\n{\n\tprivate stopped = false;\n\tprivate cidList:number[] = [];\n\n\t// ------------ public methods ------------\n\n\tpublic static async find(searchText:string):Promise<PubChemSearchResult[]>\n\t{\n\t\treturn new Promise<PubChemSearchResult[]>((resolve, reject) =>\n\t\t{\n\t\t\tlet results:PubChemSearchResult[] = [];\n\t\t\tlet callbackResult = (result:PubChemSearchResult):void =>\n\t\t\t{\n\t\t\t\tresults.push(result);\n\t\t\t};\n\t\t\tlet callbackFinished = (err?:string):void =>\n\t\t\t{\n\t\t\t\tif (err) reject(err); else resolve(results);\n\t\t\t};\n\t\t\tnew PubChemSearch(searchText, callbackResult, callbackFinished).start();\n\t\t});\n\t}\n\n\tconstructor(private searchText:string, private callbackResult:(result:PubChemSearchResult) => void, private callbackFinished:(err?:string) => void)\n\t{\n\t}\n\n\t// initiates the search: callback results are to be expected afterward\n\tpublic start():void\n\t{\n\t\tlet url = BASE_COMPOUND + '/name/' + encodeURIComponent(this.searchText) + '/cids/JSON';\n\n\t\tconst https = require('https');\n\t\thttps.get(url, (resp:any) =>\n\t\t{\n\t\t\tlet data = '';\n\t\t\tresp.on('data', (chunk:string) => data += chunk);\n\t\t\tresp.on('end', () => this.receivedList(data));\n\t\t}).on('error', (err:any) => {if (!this.stopped) this.callbackFinished(err.toString());});\n\t}\n\n\t// premature cessation: action ceases, no more callbacks\n\tpublic stop():void\n\t{\n\t\tthis.stopped = true;\n\t}\n\n\t// ------------ private methods ------------\n\n\t// obtained the list of compounds, so proceed from there\n\tprivate receivedList(data:string):void\n\t{\n\t\tif (this.stopped) return;\n\n\t\tlet obj = null;\n\t\ttry\n\t\t{\n\t\t\tobj = JSON.parse(data);\n\t\t}\n\t\tcatch (ex)\n\t\t{\n\t\t\tconsole.log('Received unparseable result: ' + data);\n\t\t\tthis.callbackFinished('Unparseable result from name query: ' + ex.toString());\n\t\t}\n\n\t\tif (!obj.IdentifierList)\n\t\t{\n\t\t\t// found nothing\n\t\t\tthis.callbackFinished();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cidList = obj.IdentifierList.CID;\n\t\tthis.fetchNext();\n\t}\n\n\tprivate fetchNext():void\n\t{\n\t\tif (this.stopped) return;\n\t\tif (this.cidList.length == 0)\n\t\t{\n\t\t\tthis.callbackFinished();\n\t\t\treturn;\n\t\t}\n\n\t\tlet cid = this.cidList.shift();\n\t\tlet url = BASE_COMPOUND + '/cid/' + cid + '/SDF';\n\n\t\tconst https = require('https');\n\t\thttps.get(url, (resp:any) =>\n\t\t{\n\t\t\tlet data = '';\n\t\t\tresp.on('data', (chunk:string) => data += chunk);\n\t\t\tresp.on('end', () => this.receivedCompound(data));\n\t\t}).on('error', (err:any) => {if (!this.stopped) this.callbackFinished(err.toString());});\n\t}\n\n\tprivate receivedCompound(data:string):void\n\t{\n\t\tif (this.stopped) return;\n\n\t\tlet ds = new MDLSDFReader(data).parse();\n\t\tfor (let n = 0; n < ds.numRows; n++) this.unpackCompound(ds, n);\n\n\t\tthis.fetchNext();\n\t}\n\n\tprivate unpackCompound(ds:DataSheet, row:number):void\n\t{\n\t\tlet result:PubChemSearchResult =\n\t\t{\n\t\t\t'mol': ds.getMolecule(row, 'Molecule'),\n\t\t\t'names': [],\n\t\t\t'formula': ds.getString(row, 'PUBCHEM_MOLECULAR_FORMULA'),\n\t\t\t'inchi': ds.getString(row, 'PUBCHEM_IUPAC_INCHI'),\n\t\t\t'inchiKey': ds.getString(row, 'PUBCHEM_IUPAC_INCHIKEY'),\n\t\t};\n\n\t\tif (result.mol)\n\t\t{\n\t\t\tMolUtil.stripHydrogens(result.mol);\n\t\t\tCoordUtil.normaliseBondDistances(result.mol);\n\t\t}\n\n\t\tconst NAMECOLS = ['PUBCHEM_IUPAC_TRADITIONAL_NAME', 'PUBCHEM_IUPAC_SYSTEMATIC_NAME',\n\t\t\t\t\t\t  'PUBCHEM_IUPAC_OPENEYE_NAME', 'PUBCHEM_IUPAC_CAS_NAME', 'PUBCHEM_IUPAC_NAME'];\n\t\tfor (let colName of NAMECOLS)\n\t\t{\n\t\t\tlet names = ds.getString(row, colName);\n\t\t\tif (!names || typeof names != 'string') continue;\n\t\t\tfor (let name of names.split('\\n')) if (name && result.names.indexOf(name) < 0) result.names.push(name);\n\t\t}\n\n\t\tthis.callbackResult(result);\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Dialog} from 'webmolkit/dialog/Dialog';\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {hasInlineCSS, installInlineCSS} from 'webmolkit/util/Theme';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {ArrangeMolecule} from 'webmolkit/gfx/ArrangeMolecule';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {DrawMolecule} from 'webmolkit/gfx/DrawMolecule';\nimport {PubChemSearch, PubChemSearchResult} from './PubChemSearch';\n\n/*\n\tDialog for finding a compound by name using remote webservices.\n*/\n\nexport class LookupCompoundDialog extends Dialog\n{\n\tprivate spanStatus:DOM;\n\tprivate btnSearch:DOM;\n\tprivate btnApply:DOM;\n\tprivate vertical:DOM;\n\tprivate searchInput:DOM;\n\tprivate resultArea:DOM;\n\n\tprivate pubchem:PubChemSearch = null;\n\tprivate resultList:PubChemSearchResult[] = [];\n\n\tprivate nameSelected = -1;\n\tprivate nameList:string[] = [];\n\tprivate nameDOM:DOM[] = [];\n\tprivate molSelected = -1;\n\tprivate molList:Molecule[] = [];\n\tprivate molDOM:DOM[] = [];\n\n\tprivate callbackSelect:(source?:LookupCompoundDialog) => void = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(private searchText:string, private parentSize:[number, number])\n\t{\n\t\tsuper();\n\n\t\tif (!hasInlineCSS('mixtures-lookupcompound')) installInlineCSS('mixtures-lookupcompound', this.composeCSS());\n\n\t\tthis.title = 'Lookup Compound';\n\t\tthis.minPortionWidth = 95;\n\t\tthis.maxPortionWidth = 95;\n\t\tthis.maximumHeight = parentSize[1];\n\t}\n\n\tpublic onSelect(callback:(source?:LookupCompoundDialog) => void):void\n\t{\n\t\tthis.callbackSelect = callback;\n\t}\n\n\t// builds the dialog content\n\tprotected populate():void\n\t{\n\t\tlet buttons = this.buttonsDOM(), body = this.bodyDOM();\n\n\t\t// top section\n\n\t\tthis.spanStatus = dom('<span/>').appendTo(buttons);\n\t\tbuttons.appendText(' ');\n\n\t\tbuttons.append(this.domClose);\n\n\t\tbuttons.appendText(' ');\n\n\t\tthis.btnSearch = dom('<button class=\"wmk-button wmk-button-primary\">Search</button>').appendTo(buttons);\n\t\tthis.btnSearch.onClick(() => this.runSearch());\n\n\t\tbuttons.appendText(' ');\n\n\t\tthis.btnApply = dom('<button class=\"wmk-button wmk-button-default\">Apply</button>').appendTo(buttons);\n\t\tthis.btnApply.onClick(() => this.applyResult());\n\t\tthis.btnApply.elInput.disabled = true;\n\n\t\t// main section\n\n\t\tbody.css({'padding': '0 0 0 0.5em'});\n\t\tthis.vertical = dom('<div/>').appendTo(body);\n\t\tthis.vertical.css({'overflow-y': 'scroll', 'height': '100%'});\n\t\tthis.vertical.css({'max-height': (this.parentSize[1] - 200) + 'px'});\n\t\tthis.vertical.css({'padding-right': '18px', 'padding-bottom': '10px'});\n\n\t\tthis.populateSearchEntry();\n\n\t\tthis.resultArea = dom('<div/>').appendTo(this.vertical);\n\n\t\tif (this.searchText) this.runSearch(); // auto-start\n\t}\n\n\tpublic close():void\n\t{\n\t\tif (this.pubchem) this.pubchem.stop();\n\t\tsuper.close();\n\t}\n\n\t// access to selected results: null = nothing selected\n\tpublic getName():string\n\t{\n\t\treturn this.nameSelected < 0 ? null : this.nameList[this.nameSelected];\n\t}\n\tpublic getMolecule():Molecule\n\t{\n\t\treturn this.molSelected < 0 ? null : this.molList[this.molSelected];\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate populateSearchEntry():void\n\t{\n\t\tlet grid = dom('<div/>').appendTo(this.vertical).css({'display': 'grid'});\n\t\tgrid.css({'width': '100%', 'margin': '0.5em 0 0.5em 0'});\n\t\tgrid.css({'align-items': 'center', 'justify-content': 'start', 'grid-row-gap': '0.5em'});\n\t\tgrid.css({'grid-template-columns': '[start field] max-content [value] 1fr [end]'});\n\n\t\tlet divLabel = dom('<div/>').appendTo(grid).css({'grid-column': 'field', 'grid-row': '1', 'padding-right': '0.5em'});\n\t\tdivLabel.setText('Name:');\n\n\t\tlet divInput = dom('<div/>').appendTo(grid).css({'grid-column': 'value', 'grid-row': '1'});\n\t\tthis.searchInput = dom('<input/>').appendTo(divInput).css({'width': '100%', 'font': 'inherit'});\n\t\tthis.searchInput.setValue(this.searchText);\n\t\tthis.searchInput.onKeyDown((event) => this.trapKeys(event));\n\n\t\tthis.searchInput.grabFocus();\n\t}\n\n\tprivate runSearch():void\n\t{\n\t\tif (this.pubchem) this.pubchem.stop();\n\t\tthis.resultArea.empty();\n\t\tthis.resultList = [];\n\n\t\tthis.spanStatus.setText('Searching...');\n\n\t\tlet text = this.searchInput.getValue();\n\t\tif (!text) return;\n\t\tthis.pubchem = new PubChemSearch(text,\n\t\t\t(result:PubChemSearchResult):void => this.gotResult(result),\n\t\t\t(err:string):void => this.finishedSearch(err));\n\t\tthis.pubchem.start();\n\t}\n\n\tprivate applyResult():void\n\t{\n\t\tthis.callbackSelect(this);\n\t\tthis.close();\n\t}\n\n\tprivate gotResult(result:PubChemSearchResult):void\n\t{\n\t\tthis.resultList.push(result);\n\n\t\tlet grid = dom('<div/>').appendTo(this.resultArea).css({'display': 'grid'});\n\t\tgrid.css({'width': '100%', 'margin': '0.5em 0 0.5em 0', 'align-items': 'top', 'justify-content': 'start'});\n\t\tgrid.css({'grid-row-gap': '0.5em'});\n\t\tgrid.css({'grid-template-columns': '[start molecule] max-content [names] 1fr [end]'});\n\n\t\tlet divMol = dom('<div/>').appendTo(grid).css({'grid-column': 'molecule', 'grid-row': '1', 'padding-right': '0.5em'});\n\n\t\tif (result.mol)\n\t\t{\n\t\t\tlet policy = RenderPolicy.defaultColourOnWhite();\n\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\tlet layout = new ArrangeMolecule(result.mol, measure, policy);\n\t\t\tlayout.arrange();\n\t\t\tlayout.squeezeInto(0, 0, 300, 300);\n\t\t\tlet gfx = new MetaVector();\n\t\t\tnew DrawMolecule(layout, gfx).draw();\n\t\t\tgfx.normalise();\n\n\t\t\tlet svg = dom(gfx.createSVG()).appendTo(divMol).css({'display': 'inline-block'});\n\t\t\tsvg.addClass('mixtures-lookupcompound-unselected');\n\n\t\t\tconst idx = this.molList.length;\n\t\t\tsvg.onClick(() => this.selectMolecule(idx));\n\n\t\t\tthis.molList.push(result.mol);\n\t\t\tthis.molDOM.push(svg);\n\t\t}\n\t\telse divMol.setText('(no structure)');\n\n\t\tlet divName = dom('<div/>').appendTo(grid).css({'grid-column': 'names', 'grid-row': '1', 'padding-right': '0.5em'});\n\n\t\tif (result.names.length == 0) divName.setText('(no names)');\n\t\telse for (let name of result.names)\n\t\t{\n\t\t\tlet div = dom('<div/>').appendTo(divName);\n\t\t\tlet span = dom('<span/>').appendTo(div);\n\t\t\tspan.addClass('mixtures-lookupcompound-unselected');\n\t\t\tspan.setText(name);\n\n\t\t\tconst idx = this.nameList.length;\n\t\t\tdiv.onClick(() => this.selectName(idx));\n\n\t\t\tthis.nameList.push(name);\n\t\t\tthis.nameDOM.push(span);\n\t\t}\n\t}\n\n\tprivate finishedSearch(err:string):void\n\t{\n\t\tthis.spanStatus.setText('');\n\n\t\tif (err) alert('Search failed: ' + err);\n\t\telse if (this.resultList.length == 0)\n\t\t{\n\t\t\tthis.resultArea.empty();\n\t\t\tthis.resultArea.setText('Nothing found.');\n\t\t}\n\t}\n\n\tprivate trapKeys(event:KeyboardEvent):void\n\t{\n\t\tif (event.keyCode == 27)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tthis.close();\n\t\t}\n\t\telse if (event.keyCode == 13)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tthis.runSearch();\n\t\t}\n\t}\n\n\tprivate selectName(idx:number):void\n\t{\n\t\tlet prev = this.nameSelected;\n\t\tif (prev == idx) idx = -1;\n\n\t\tif (prev >= 0) this.nameDOM[prev].removeClass('mixtures-lookupcompound-selected');\n\t\tif (idx >= 0) this.nameDOM[idx].addClass('mixtures-lookupcompound-selected');\n\t\tthis.nameSelected = idx;\n\n\t\tthis.btnApply.elInput.disabled = this.nameSelected < 0 && this.molSelected < 0;\n\t}\n\n\tprivate selectMolecule(idx:number):void\n\t{\n\t\tlet prev = this.molSelected;\n\t\tif (prev == idx) idx = -1;\n\n\t\tif (prev >= 0) this.molDOM[prev].removeClass('mixtures-lookupcompound-selected');\n\t\tif (idx >= 0) this.molDOM[idx].addClass('mixtures-lookupcompound-selected');\n\t\tthis.molSelected = idx;\n\n\t\tthis.btnApply.elInput.disabled = this.nameSelected < 0 && this.molSelected < 0;\n\t}\n\n\t// one-time instantiation of necessary styles\n\tprivate composeCSS():string\n\t{\n\t\treturn `\n\t\t\t.mixtures-lookupcompound-unselected\n\t\t\t{\n\t\t\t\tcursor: pointer;\n\t\t\t\tbackground-color: transparent;\n\t\t\t\tborder: 1px solid transparent;\n\t\t\t\tpadding: 3px;\n\t\t\t\tborder-radius: 4px;\n\t\t\t}\n\t\t\t.mixtures-lookupcompound-selected\n\t\t\t{\n\t\t\t\tcursor: default;\n\t\t\t\tbackground-color: #E0E0E0;\n\t\t\t\tborder: 1px solid #808080;\n\t\t\t}\n\t\t`;\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MDLMOLWriter} from 'webmolkit/io/MDLWriter';\nimport {MDLMOLReader, MDLReaderGroupMixture, MDLReaderLinkNode} from 'webmolkit/io/MDLReader';\nimport {MolUtil} from 'webmolkit/mol/MolUtil';\nimport {deepClone} from 'webmolkit/util/util';\nimport {MixfileComponent} from './Mixfile';\n\n/*\n\tChecks the supplied string to see if it is a CTAB (V2000/V3000) with features that make enumerable. If so,\n\treturns a list of molecules.\n*/\n\ninterface ProtoMolecule\n{\n\tmol:Molecule;\n\tchildren:ProtoMolecule[];\n\tattachAny:Map<number, number[]>; // bond -> list of atom indices\n\tstereoRacemic:number[][]; // blocks of atoms which are racemic\n\tstereoRelative:number[][]; // blocks of atoms which exist in their drawn configuration OR the opposite\n\tlinkNodes:MDLReaderLinkNode[]; // so-called link nodes, aka repeating atom\n\tmixtures:MDLReaderGroupMixture[]; // mixture collections, which may overlap\n}\n\nexport class ExtractCTABComponent\n{\n\t// ------------ public methods ------------\n\n\tconstructor(private text:string)\n\t{\n\t}\n\n\t// returns a component instance if and only when the underlying CTAB has something mixture-esque; if it's not a molecule,\n\t// or is just a plain ordinary single molecule, returns null\n\tpublic extract():MixfileComponent\n\t{\n\t\tlet ctab = new MDLMOLReader(this.text);\n\t\ttry {ctab.parse();}\n\t\tcatch (ex) {return null;}\n\n\t\tif (!ctab.mol) return null;\n\n\t\tlet seed:Partial<ProtoMolecule> = {mol: ctab.mol};\n\t\tif (ctab.groupAttachAny.size > 0) seed.attachAny = ctab.groupAttachAny;\n\t\tif (ctab.groupStereoRacemic.length > 0) seed.stereoRacemic = ctab.groupStereoRacemic;\n\t\tif (ctab.groupStereoRelative.length > 0) seed.stereoRelative = ctab.groupStereoRelative;\n\t\tif (ctab.groupLinkNodes.length > 0) seed.linkNodes = ctab.groupLinkNodes;\n\t\tif (ctab.groupMixtures.length > 0) seed.mixtures = ctab.groupMixtures;\n\n\t\tif (!seed.attachAny && !seed.stereoRacemic && !seed.stereoRelative &&\n\t\t\t!seed.linkNodes && !seed.mixtures) return null;\n\n\t\tconst SANITY = 100; // stop enumerating after this many\n\n\t\tlet prototypes:ProtoMolecule[] = [seed as ProtoMolecule];\n\t\tfor (let n = 0; n < prototypes.length;)\n\t\t{\n\t\t\tlet proto = prototypes[n];\n\t\t\tlet list:ProtoMolecule[] = this.enumerateAttachAny(proto);\n\t\t\tif (!list) list = this.enumerateStereoRacemic(proto);\n\t\t\tif (!list) list = this.enumerateStereoRelative(proto);\n\t\t\tif (!list) list = this.enumerateLinkNodes(proto);\n\t\t\tif (!list) list = this.enumerateMixtures(proto);\n\n\t\t\tif (list)\n\t\t\t{\n\t\t\t\tprototypes[n] = list[0];\n\t\t\t\tfor (let i = 1; i < list.length; i++) prototypes.splice(n + i, 0, list[i]);\n\t\t\t}\n\t\t\telse n++;\n\n\t\t\tif (prototypes.length > SANITY) break;\n\t\t}\n\n\t\tif (prototypes.length == 0) return null;\n\t\tif (prototypes.length == 1 && Vec.isBlank(prototypes[0].children)) return null;\n\n\t\tlet emit = (comp:MixfileComponent, proto:ProtoMolecule):void =>\n\t\t{\n\t\t\tlet subComp:MixfileComponent = {};\n\t\t\tif (proto.mol) subComp.molfile = new MDLMOLWriter(proto.mol).write();\n\t\t\tcomp.contents.push(subComp);\n\t\t\tif (proto.children)\n\t\t\t{\n\t\t\t\tsubComp.contents = [];\n\t\t\t\tfor (let child of proto.children) emit(subComp, child);\n\t\t\t}\n\t\t};\n\n\t\tlet comp:MixfileComponent = {contents: []};\n\t\tif (ctab.molName) comp.name = ctab.molName;\n\t\tfor (let proto of prototypes) emit(comp, proto);\n\n\t\treturn comp;\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate enumerateAttachAny(proto:ProtoMolecule):ProtoMolecule[]\n\t{\n\t\tif (!proto.attachAny) return null;\n\t\tlet bond:number = null;\n\t\tfor (let look of proto.attachAny.keys()) {bond = look; break;}\n\t\tif (bond == null) return null;\n\t\tlet atoms = proto.attachAny.get(bond);\n\t\tproto.attachAny.delete(bond);\n\t\tif (Vec.isBlank(atoms)) return null;\n\n\t\tlet mol = proto.mol;\n\t\tlet atomKeep = mol.bondFrom(bond), atomChop = mol.bondTo(bond);\n\t\tif (mol.atomElement(atomChop) == '*') {}\n\t\telse if (mol.atomElement(atomKeep) == '*') [atomKeep, atomChop] = [atomChop, atomKeep];\n\t\telse if (mol.atomAdjCount(atomKeep) < mol.atomAdjCount(atomChop)) [atomKeep, atomChop] = [atomChop, atomKeep];\n\n\t\t// update the baseline prototype in lieu of the atom sacrificial atom getting deleted\n\t\tfor (let look of proto.attachAny.keys()) this.removeAtom(proto.attachAny.get(look), atomChop);\n\t\tif (proto.stereoRelative) for (let look of proto.stereoRelative) this.removeAtom(look, atomChop);\n\t\tif (proto.stereoRacemic) for (let look of proto.stereoRacemic) this.removeAtom(look, atomChop);\n\t\tif (proto.linkNodes) for (let n = proto.linkNodes.length - 1; n >= 0; n--)\n\t\t{\n\t\t\tif (proto.linkNodes[n].atom == atomChop) {proto.linkNodes.splice(n, 1); continue;}\n\t\t\tif (proto.linkNodes[n].atom > atomChop) proto.linkNodes[n].atom--;\n\t\t\tthis.removeAtom(proto.linkNodes[n].nbrs, atomChop);\n\t\t}\n\t\tif (proto.mixtures) for (let look of proto.mixtures) this.removeAtom(look.atoms, atomChop);\n\n\t\tlet list:ProtoMolecule[] = [];\n\t\tfor (let connAtom of atoms)\n\t\t{\n\t\t\tlet cmol = mol.clone();\n\t\t\tif (atomChop == cmol.bondFrom(bond)) cmol.setBondFrom(bond, connAtom); else cmol.setBondTo(bond, connAtom);\n\t\t\tcmol.deleteAtomAndBonds(atomChop);\n\t\t\t// TODO: ideally a little redepiction of the connecting bond would be in order, but the connectivity is right, and\n\t\t\t// in most cases it will be possible to see what it is\n\t\t\tlist.push(this.protoClone(proto, cmol));\n\t\t}\n\n\t\treturn list;\n\t}\n\n\t// groups of racemic stereocentres: enumerate all combinations (2^group size)\n\tprivate enumerateStereoRacemic(proto:ProtoMolecule):ProtoMolecule[]\n\t{\n\t\tif (Vec.isBlank(proto.stereoRacemic)) return null;\n\n\t\tlet blk = proto.stereoRacemic.shift();\n\t\tlet mol = proto.mol;\n\n\t\tlet affected = new Set<number>();\n\t\tfor (let atom of blk) affected.add(atom);\n\t\tlet bonds:number[] = [];\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (affected.has(mol.bondFrom(n)) || affected.has(mol.bondTo(n)))\n\t\t{\n\t\t\tlet bt = mol.bondType(n);\n\t\t\tif (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED) bonds.push(n);\n\t\t}\n\n\t\tlet nperm = Math.min(256, 1 << bonds.length);\n\t\tlet list = [this.protoClone(proto, mol)];\n\t\tfor (let n = 1; n < nperm; n++)\n\t\t{\n\t\t\tlet rmol = mol.clone();\n\t\t\tfor (let i = 0, bitand = 1; i < bonds.length; i++)\n\t\t\t{\n\t\t\t\tif (n & bitand)\n\t\t\t\t{\n\t\t\t\t\tlet bt = rmol.bondType(bonds[i]);\n\t\t\t\t\tbt = bt == Molecule.BONDTYPE_INCLINED ? Molecule.BONDTYPE_DECLINED : Molecule.BONDTYPE_INCLINED;\n\t\t\t\t\trmol.setBondType(bonds[i], bt);\n\t\t\t\t}\n\t\t\t\tbitand = bitand << 1;\n\t\t\t}\n\t\t\tlist.push(this.protoClone(proto, rmol));\n\t\t}\n\n\t\treturn list;\n\t}\n\n\t// relative stereocentres: add the original + the inversion for that group\n\tprivate enumerateStereoRelative(proto:ProtoMolecule):ProtoMolecule[]\n\t{\n\t\tif (Vec.isBlank(proto.stereoRelative)) return null;\n\n\t\tlet blk = proto.stereoRelative.shift();\n\t\tlet affected = new Set<number>();\n\t\tfor (let atom of blk) affected.add(atom);\n\n\t\tlet molinv = proto.mol.clone();\n\t\tfor (let n = 1; n <= molinv.numBonds; n++) if (affected.has(molinv.bondFrom(n)) || affected.has(molinv.bondTo(n)))\n\t\t{\n\t\t\tlet bt = molinv.bondType(n);\n\t\t\tif (bt == Molecule.BONDTYPE_INCLINED) molinv.setBondType(n, Molecule.BONDTYPE_DECLINED);\n\t\t\telse if (bt == Molecule.BONDTYPE_DECLINED) molinv.setBondType(n, Molecule.BONDTYPE_INCLINED);\n\t\t}\n\n\t\treturn [proto, this.protoClone(proto, molinv)];\n\t}\n\tprivate enumerateLinkNodes(proto:ProtoMolecule):ProtoMolecule[]\n\t{\n\t\tif (Vec.isBlank(proto.linkNodes)) return null;\n\n\t\tlet link = proto.linkNodes.shift();\n\n\t\tlet mol = proto.mol, a1 = link.atom;\n\t\tlet nbr1 = link.nbrs.length >= 1 ? link.nbrs[0] : 0;\n\n\t\tlet list:ProtoMolecule[] = [];\n\t\tfor (let n = link.minRep; n <= link.maxRep; n++)\n\t\t{\n\t\t\tif (n == 1)\n\t\t\t{\n\t\t\t\tlist.push(this.protoClone(proto, mol));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet rmol = mol.clone();\n\t\t\tlet addedAtoms:number[] = [];\n\t\t\tfor (let i = 2; i <= n; i++)\n\t\t\t{\n\t\t\t\tlet a2 = rmol.addAtom(rmol.atomElement(a1), rmol.atomX(a1), rmol.atomY(a1));\n\t\t\t\trmol.setAtomCharge(a2, rmol.atomCharge(a1));\n\t\t\t\trmol.setAtomUnpaired(a2, rmol.atomUnpaired(a2));\n\t\t\t\trmol.addBond(a1, a2, 1);\n\t\t\t\tif (nbr1 > 0)\n\t\t\t\t{\n\t\t\t\t\tlet a3 = 0;\n\t\t\t\t\tfor (let adj of rmol.atomAdjList(a1)) if (adj != a2 && adj != nbr1) {a3 = adj; break;}\n\t\t\t\t\tif (a3 > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet b = rmol.findBond(a1, a3);\n\t\t\t\t\t\tif (rmol.bondFrom(b) == a1) rmol.setBondFrom(b, a2); else rmol.setBondTo(b, a2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\taddedAtoms.push(a1);\n\t\t\t}\n\t\t\t// TODO: depiction would be nice; the atoms are just overlayed on top of each other\n\n\t\t\tlet rproto = this.protoClone(proto, rmol);\n\t\t\tif (rproto.mixtures) for (let mix of rproto.mixtures)\n\t\t\t{\n\t\t\t\tif (mix.atoms.includes(a1)) mix.atoms.push(...addedAtoms);\n\t\t\t}\n\t\t\tlist.push(rproto);\n\t\t}\n\n\t\treturn list;\n\t}\n\tprivate enumerateMixtures(proto:ProtoMolecule):ProtoMolecule[]\n\t{\n\t\tif (Vec.isBlank(proto.mixtures)) return null;\n\n\t\t// NOTE: currently assuming that this enumeration step happens last, and is done in one fell swoop; the protomolecule hierarchy\n\t\t// that gets returned discards any remaining enumeration materials\n\n\t\tlet mol = proto.mol, mixtures = proto.mixtures;\n\n\t\tlet identity = mixtures.map((mix) => mix.index);\n\t\tlet leafmask = Vec.booleanArray(true, mixtures.length);\n\t\tfor (let mix of mixtures) if (mix.parent > 0)\n\t\t{\n\t\t\tlet i = identity.indexOf(mix.parent);\n\t\t\tif (i >= 0) leafmask[i] = false;\n\t\t}\n\n\t\tlet root = {children: []} as ProtoMolecule;\n\t\tlet mapTree = new Map<number, ProtoMolecule>();\n\t\tmapTree.set(0, root);\n\t\twhile (true)\n\t\t{\n\t\t\tlet anything = false;\n\t\t\tfor (let n = 0; n < mixtures.length; n++) if (!leafmask[n] && !mapTree.has(mixtures[n].index))\n\t\t\t{\n\t\t\t\tlet parent = mapTree.get(mixtures[n].parent);\n\t\t\t\tif (!parent) continue;\n\t\t\t\tlet node = {children: []} as ProtoMolecule;\n\t\t\t\tparent.children.push(node);\n\t\t\t\tmapTree.set(mixtures[n].index, node);\n\t\t\t\tanything = true;\n\t\t\t}\n\t\t\tif (!anything) break;\n\t\t}\n\n\t\tlet nonemask = Vec.booleanArray(true, mol.numAtoms); // atoms not mentioned in any mixture block\n\t\tfor (let mix of mixtures) for (let a of mix.atoms) nonemask[a - 1] = false;\n\n\t\tfor (let n = 0; n < mixtures.length; n++) if (leafmask[n])\n\t\t{\n\t\t\tlet atommask = nonemask.slice(0);\n\t\t\tfor (let a of mixtures[n].atoms) atommask[a - 1] = true;\n\n\t\t\tlet mixmol = MolUtil.subgraphMask(mol, atommask);\n\t\t\tlet node = {mol: mixmol} as ProtoMolecule;\n\t\t\tmapTree.get(mixtures[n].parent).children.push(node);\n\t\t}\n\n\t\tif (root.children.length == 1) root = root.children[0];\n\t\treturn root.children;\n\t}\n\n\t// makes a copy of the prototype's fields, and copies over the replacement molecule\n\tprivate protoClone(proto:ProtoMolecule, mol:Molecule):ProtoMolecule\n\t{\n\t\tlet dup:ProtoMolecule =\n\t\t{\n\t\t\t'mol': mol,\n\t\t\t'children': [],\n\t\t\t'attachAny': proto.attachAny ? new Map(proto.attachAny) : null,\n\t\t\t'stereoRacemic': deepClone(proto.stereoRacemic),\n\t\t\t'stereoRelative': deepClone(proto.stereoRelative),\n\t\t\t'linkNodes': deepClone(proto.linkNodes),\n\t\t\t'mixtures': deepClone(proto.mixtures),\n\t\t};\n\t\treturn dup;\n\t}\n\n\t// updates a list given that a certain atom has been deleted: decrements or removes any atoms that are affected\n\tprivate removeAtom(list:number[], atom:number):void\n\t{\n\t\tfor (let n = list.length - 1; n >= 0; n--)\n\t\t{\n\t\t\tif (list[n] == atom) list.splice(n, 1);\n\t\t\telse if (list[n] > atom) list[n]--;\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Widget} from 'webmolkit/ui/Widget';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {ClipboardProxy} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy} from 'webmolkit/ui/MenuProxy';\nimport {deepClone, eventCoords, newElement, pixelDensity} from 'webmolkit/util/util';\nimport {EditCompound} from 'webmolkit/dialog/EditCompound';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MoleculeStream} from 'webmolkit/io/MoleculeStream';\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {EditComponent} from './EditComponent';\nimport {MDLMOLWriter} from 'webmolkit/io/MDLWriter';\nimport {MolUtil} from 'webmolkit/mol/MolUtil';\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {CoordUtil} from 'webmolkit/mol/CoordUtil';\nimport {Mixture} from '../mixture/Mixture';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {MixfileComponent} from '../mixture/Mixfile';\nimport {LookupCompoundDialog} from '../electron/LookupCompoundDialog';\nimport {InChIDelegate} from '../mixture/InChIDelegate';\nimport {ExtractCTABComponent} from '../mixture/ExtractCTABComponent';\nimport {NormMixture} from '../mixture/NormMixture';\nimport {DrawMixture} from '../mixture/DrawMixture';\n\n/*\n\tHigh level widget for the editing area for a mixture.\n*/\n\nconst DEFAULT_SCALE = 25;\nconst UNDO_SIZE = 10;\n\nenum DragReason\n{\n\tNone,\n\tAny,\n\tPan,\n}\n\nexport class EditMixture extends Widget\n{\n\tpublic callbackUpdateTitle:() => void = null;\n\tpublic callbackInteraction:() => void = null;\n\n\tpublic monochrome = false;\n\n\tprotected mixture = new Mixture();\n\tprotected policy:RenderPolicy = null\n\tprotected canvasMixture:HTMLCanvasElement;\n\tprotected canvasOver:HTMLCanvasElement;\n\n\tprotected undoStack:Mixture[] = [];\n\tprotected redoStack:Mixture[] = [];\n\n\tprotected offsetX = 0;\n\tprotected offsetY = 0;\n\tprotected pointScale = DEFAULT_SCALE;\n\tprotected filthy = true; // filthy: screen is out of date, needs to be redrawn\n\tprotected dirty = false; // dirty: data has changed since last save\n\tprotected layout:ArrangeMixture = null;\n\tprotected collapsedBranches:number[][] = [];\n\tprotected hoverIndex = -1; // component over which the mouse is hovering\n\tprotected activeIndex = -1; // component that is currently being clicked upon\n\tprotected selectedIndex = 0; // selected component (having been previously clicked)\n\tprotected delayedSelect:number[] = null; // if set to an origin vector: to rederive selectedIndex next time the layout is evaluated\n\n\tprotected dragReason = DragReason.None;\n\tprotected dragIndex = -1;\n\tprotected dragX = 0;\n\tprotected dragY = 0;\n\tprotected isEditing = false;\n\tprotected dlgCompound:EditCompound = null;\n\n\tprotected structureIntegrity:Record<string, string> = {}; // metadata key -> name for those which are sensitive to changes to structure\n\n\t// ------------ public methods ------------\n\n\tconstructor(protected inchi:InChIDelegate, protected proxyClip:ClipboardProxy, protected proxyMenu:MenuProxy)\n\t{\n\t\tsuper();\n\t}\n\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\n\t\tlet content = this.contentDOM;\n\n\t\tcontent.css({'width': '100%', 'height': '100%'});\n\t\tcontent.css({'background-color': '#F0F0F0'});\n\t\tcontent.css({'position': 'relative', 'outline-width': '0'});\n\n\t\tlet canvasStyle = 'position: absolute; left: 0; top: 0; pointer-events: none;';\n\t\tthis.canvasMixture = newElement(content, 'canvas', {style: canvasStyle}) as HTMLCanvasElement;\n\t\tthis.canvasOver = newElement(content, 'canvas', {style: canvasStyle}) as HTMLCanvasElement;\n\n\t\t//content.onResize(() => this.redraw());\n\n\t\t// setup all the interactive events\n\t\tcontent.onClick((event) => this.mouseClick(event));\n\t\tcontent.onDblClick((event) => this.mouseDoubleClick(event));\n\t\tcontent.onMouseDown((event) => this.mouseDown(event));\n\t\tcontent.onMouseUp((event) => this.mouseUp(event));\n\t\tcontent.onMouseOver((event) => this.mouseOver(event));\n\t\tcontent.onMouseLeave((event) => this.mouseOut(event));\n\t\tcontent.onMouseMove((event) => this.mouseMove(event));\n\t\t// (maybe have mousewheel as an option: in Electron mode it makes some sense, but embedded\n\t\t// on a web page it' not good...)\n\t\t//content.on('mousewheel', (event:JQueryEventObject) => this.mouseWheel(event));\n\t\tcontent.onKeyPress((event) => this.keyPressed(event));\n\t\tcontent.onKeyDown((event) => this.keyDown(event));\n\t\tcontent.onKeyUp((event) => this.keyUp(event));\n\t\tcontent.onContextMenu((event) => this.contextMenu(event));\n\n\t\tcontent.attr({'id': 'mixtureEditor_main', 'tabindex': '0'});\n\t\tthis.refocus();\n\t\tthis.redraw(true, false);\n\t}\n\n\t// whether or not menu commands are being received; no means that it's in dialog/editing mode\n\tpublic isReceivingCommands():boolean {return !this.isEditing;}\n\tpublic setEditing(isEditing:boolean):void {this.isEditing = isEditing;}\n\tpublic compoundEditor():EditCompound {return this.dlgCompound;}\n\n\t// add a metadata key that can potentially stop being valid when the structure is changed\n\tpublic addStructureIntegrityKey(key:string, description:string):void\n\t{\n\t\tthis.structureIntegrity[key] = description;\n\t}\n\n\t// access to current state\n\tpublic getMixture():Mixture {return this.mixture;}\n\tpublic setMixture(mixture:Mixture, withAutoScale:boolean = false, withStashUndo:boolean = true):void\n\t{\n\t\t// NOTE: the \"withAutoScale\" parameter is currently not very meaningful since the modified mixture gets a re-layout\n\t\twithAutoScale = true;\n\n\t\tif (this.delayedSelect == null && this.selectedIndex >= 0 && this.layout != null) this.delayedSelect = this.layout.components[this.selectedIndex].origin;\n\n\t\tif (withStashUndo) this.stashUndo();\n\t\tthis.mixture = mixture;\n\n\t\tthis.offsetX = 0;\n\t\tthis.offsetY = 0;\n\t\tthis.pointScale = this.policy.data.pointScale;\n\t\tthis.filthy = true;\n\t\tthis.layout = null;\n\t\tthis.hoverIndex = -1;\n\t\tthis.activeIndex = -1;\n\t\tthis.selectedIndex = -1;\n\t\tthis.redraw(withAutoScale);\n\n\t\tthis.dirty = true;\n\t\tif (this.callbackUpdateTitle) this.callbackUpdateTitle();\n\t}\n\n\t// returns the selected origin indices & component, or null if nothing selected\n\tpublic getSelected():[number[], MixfileComponent]\n\t{\n\t\tif (this.selectedIndex < 0 || this.layout == null) return [null, null];\n\t\tlet comp = this.layout.components[this.selectedIndex];\n\t\treturn [comp.origin, comp.content];\n\t}\n\n\tpublic getCollapsedBranches():number[][] {return this.collapsedBranches;}\n\n\t// wipes the undo & redo stacks\n\tpublic clearHistory():void\n\t{\n\t\tthis.undoStack = [];\n\t\tthis.redoStack = [];\n\t}\n\n\t// appends the current state to the undo-stack\n\tpublic stashUndo():void\n\t{\n\t\t//if (this.undoStack.length == 0 && this.mixture.isEmpty()) return; // don't put empty stuff at the beginning\n\t\tthis.undoStack.push(this.mixture.clone());\n\t\twhile (this.undoStack.length > UNDO_SIZE) this.undoStack.splice(0, 1);\n\t\tthis.redoStack = [];\n\t}\n\n\t// reports on the state of the undo/redo buffers\n\tpublic canUndo():boolean {return this.undoStack.length > 0;}\n\tpublic canRedo():boolean {return this.redoStack.length > 0;}\n\n\t// actually does the undo/redo operation\n\tpublic performUndo():void\n\t{\n\t\tif (this.undoStack.length == 0) return;\n\t\tthis.redoStack.push(this.mixture.clone());\n\t\tthis.setMixture(this.undoStack.pop(), false, false);\n\t}\n\tpublic performRedo():void\n\t{\n\t\tif (this.redoStack.length == 0) return;\n\t\tthis.undoStack.push(this.mixture.clone());\n\t\tthis.setMixture(this.redoStack.pop(), false, false);\n\t}\n\n\t// need-save status\n\tpublic isDirty():boolean {return this.dirty;}\n\tpublic setDirty(dirty:boolean):void {this.dirty = dirty;}\n\n\t// returns true if the mixture content is empty\n\tpublic isBlank():boolean {return this.mixture.isEmpty();}\n\n\t// makes sure the content gets redrawn imminently; calling many times is not a performance issue\n\tpublic delayedRedraw():void\n\t{\n\t\tthis.filthy = true;\n\t\twindow.setTimeout(() => {if (this.filthy) this.redraw();}, 10);\n\t}\n\n\t// alter zoom level by a factor\n\tpublic zoom(scale:number):void\n\t{\n\t\tthis.pointScale *= scale;\n\t\tthis.layout = null;\n\t\tthis.redraw();\n\t}\n\n\t// rescale to fit & recentre\n\tpublic zoomFull():void\n\t{\n\t\tthis.layout = null;\n\t\tthis.pointScale = DEFAULT_SCALE;\n\t\tthis.redraw(true, true);\n\t}\n\n\t// rescale to fit & recentre/with a limit to the size\n\tpublic zoomNormal():void\n\t{\n\t\tthis.layout = null;\n\t\tthis.pointScale = DEFAULT_SCALE;\n\t\tthis.redraw(true, false);\n\t}\n\n\t// select the given component index (programmatically)\n\tpublic selectComponent(idx:number):void\n\t{\n\t\tif (this.selectedIndex == idx) return;\n\t\tthis.selectedIndex = idx;\n\t\tthis.activeIndex = -1;\n\t\tthis.delayedRedraw();\n\t}\n\n\t// convenient overload for selecting whichever numbered component matches the origin sequence\n\tpublic selectOrigin(origin:number[]):void\n\t{\n\t\tlet complist = this.layout.components;\n\t\tfor (let n = 0; n < complist.length; n++) if (Vec.equals(complist[n].origin, origin))\n\t\t{\n\t\t\tthis.selectComponent(n);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// bring up the structure-editing panel, which uses the generic sketching dialog\n\tpublic editStructure():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet comp = this.mixture.getComponent(origin);\n\n\t\tlet mol = comp.molfile ? MoleculeStream.readUnknown(comp.molfile) : null;\n\n\t\tthis.dlgCompound = new EditCompound(mol ? mol : new Molecule(), this.contentDOM);\n\t\tthis.dlgCompound.onSave(() =>\n\t\t{\n\t\t\tlet mol = this.dlgCompound.getMolecule();\n\t\t\tcomp = deepClone(comp);\n\t\t\tthis.checkStructureIntegrity(comp, mol);\n\n\t\t\tlet molfile = MoleculeStream.writeMDLMOL(mol);\n\t\t\tif (!molfile) molfile = null;\n\n\t\t\tcomp.molfile = molfile;\n\t\t\tlet modmix = this.mixture.clone();\n\t\t\tif (modmix.setComponent(origin, comp))\n\t\t\t{\n\t\t\t\tthis.setMixture(modmix);\n\t\t\t\tthis.selectOrigin(origin);\n\t\t\t}\n\n\t\t\tthis.dlgCompound.close();\n\t\t});\n\t\tthis.dlgCompound.onClose(() =>\n\t\t{\n\t\t\tthis.isEditing = false;\n\t\t\tthis.dlgCompound = null;\n\t\t\tthis.refocus();\n\t\t});\n\t\tthis.dlgCompound.defineClipboard(this.proxyClip);\n\t\tthis.dlgCompound.defineContext(this.proxyMenu);\n\t\tthis.isEditing = true;\n\t\tthis.dlgCompound.open();\n\t}\n\n\t// invoke the editor dialog for the current component - basically everything except the structure\n\tpublic editDetails():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet comp = this.mixture.getComponent(origin);\n\n\t\tlet w = window.innerWidth * 0.8, h = window.innerHeight * 0.8;\n\n\t\tlet dlg = new EditComponent(deepClone(comp), this.inchi, [w, h], this.contentDOM);\n\t\tdlg.proxyClip = this.proxyClip;\n\t\tdlg.onSave(() =>\n\t\t{\n\t\t\tlet modmix = this.mixture.clone();\n\t\t\tif (modmix.setComponent(origin, dlg.getComponent()))\n\t\t\t{\n\t\t\t\tthis.setMixture(modmix);\n\t\t\t\tthis.selectOrigin(origin);\n\t\t\t}\n\t\t\tdlg.close();\n\t\t});\n\t\tdlg.onSketch(() =>\n\t\t{\n\t\t\tthis.selectOrigin(origin);\n\t\t\tthis.editStructure();\n\t\t});\n\t\tdlg.onClose(() =>\n\t\t{\n\t\t\tthis.isEditing = false;\n\t\t\tthis.refocus();\n\t\t});\n\t\tthis.isEditing = true;\n\t\tdlg.open();\n\t}\n\n\t// lookup: searches for compound information based on name, prespecified or otherwise\n\tpublic lookupCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet comp = this.mixture.getComponent(origin);\n\t\tlet curX = this.contentDOM.width(), curY = this.contentDOM.height();\n\t\tlet dlg = new LookupCompoundDialog(comp.name, [curX, curY]);\n\t\tdlg.onSelect(() =>\n\t\t{\n\t\t\tlet modmix = this.mixture.clone();\n\t\t\tcomp = deepClone(modmix.getComponent(origin));\n\t\t\tlet name = dlg.getName(), mol = dlg.getMolecule();\n\t\t\tif (name != null) comp.name = name;\n\t\t\tif (mol != null) comp.molfile = new MDLMOLWriter(mol).write();\n\t\t\tif (modmix.setComponent(origin, comp))\n\t\t\t{\n\t\t\t\tthis.setMixture(modmix);\n\t\t\t\tthis.selectOrigin(origin);\n\t\t\t}\n\t\t\tdlg.close();\n\t\t});\n\t\tdlg.onClose(() =>\n\t\t{\n\t\t\tthis.isEditing = false;\n\t\t\tthis.refocus();\n\t\t});\n\t\tdlg.open();\n\t}\n\n\t// deletes selected component, if any\n\tpublic deleteCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tif (origin.length == 0) return;\n\n\t\tlet modmix = this.mixture.clone();\n\t\tmodmix.deleteComponent(origin);\n\t\tthis.delayedSelect = null;\n\t\tthis.setMixture(modmix);\n\n\t\torigin = origin.slice(0);\n\t\tif (modmix.getComponent(origin)) {}\n\t\telse if (Vec.last(origin) > 0) origin[origin.length - 1]--;\n\t\telse origin.pop();\n\t\tthis.selectOrigin(origin);\n\t}\n\n\t// append a new sub-item to the end of the current component's list\n\tpublic appendToCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet modmix = this.mixture.clone();\n\t\tlet comp = modmix.getComponent(origin);\n\t\tif (!comp.contents) comp.contents = [];\n\t\tcomp.contents.push({});\n\t\tthis.delayedSelect = Vec.concat(origin, [comp.contents.length - 1]);\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// inserts an empty component before the current one\n\tpublic prependBeforeCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet modmix = this.mixture.clone();\n\t\tmodmix.prependBefore(origin, {});\n\t\tthis.delayedSelect = origin;\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// insert above/below the current component\n\tpublic insertBeforeCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tif (Vec.isBlank(origin)) return;\n\t\tlet modmix = this.mixture.clone();\n\t\tlet pos = origin.pop();\n\t\tlet parent = modmix.getComponent(origin);\n\t\tparent.contents.splice(pos, 0, {});\n\t\torigin.push(pos);\n\t\tthis.delayedSelect = origin;\n\t\tthis.setMixture(modmix);\n\t}\n\tpublic insertAfterCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tif (Vec.isBlank(origin)) return;\n\t\tlet modmix = this.mixture.clone();\n\t\tlet pos = origin.pop();\n\t\tlet parent = modmix.getComponent(origin);\n\t\tparent.contents.splice(pos + 1, 0, {});\n\t\torigin.push(pos + 1);\n\t\tthis.delayedSelect = origin;\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// move the current component up or down the hierarchy\n\tpublic reorderCurrent(dir:number):void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tif (origin.length == 0) return;\n\n\t\tlet modmix = this.mixture.clone();\n\t\tlet [parent, idx] = Mixture.splitOrigin(origin);\n\t\tlet comp = modmix.getComponent(parent);\n\t\tif (idx + dir < 0 || idx + dir >= comp.contents.length) return;\n\t\tVec.swap(comp.contents, idx, idx + dir);\n\t\tthis.delayedSelect = Vec.concat(parent, [idx + dir]);\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// copy current to clipboard, and optionally excise it\n\tpublic clipboardCopy(andCut:boolean, wholeBranch:boolean = false):void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\n\t\tlet comp = deepClone(this.mixture.getComponent(origin));\n\t\tdelete (comp as any).mixfileVersion;\n\t\tif (!wholeBranch) comp.contents = [];\n\t\tlet str = Mixture.serialiseComponent(comp);\n\n\t\t/*let clipboard = require('electron').clipboard;\n\t\tclipboard.writeText(str);*/\n\t\tthis.proxyClip.setString(str);\n\n\t\tif (origin.length > 0 && andCut) this.deleteCurrent();\n\t}\n\n\t// paste from clipboard, if possible\n\tpublic clipboardPaste():void\n\t{\n\t\t/*let clipboard = require('electron').clipboard;\n\t\tlet str = clipboard.readText();*/\n\t\tlet str = this.proxyClip.getString();\n\n\t\tlet json:any = null;\n\t\ttry {json = JSON.parse(str);}\n\t\tcatch (e) {} // silent failure\n\n\t\tlet origin:number[] = [];\n\t\tif (this.selectedIndex >= 0) origin = this.layout.components[this.selectedIndex].origin;\n\n\t\t// see if it's a Molfile CTAB that has enumeration flags set (stays null if nothing component-ish)\n\t\tif (!json) json = new ExtractCTABComponent(str).extract();\n\n\t\t// see if it's just a regular singular molecule\n\t\tif (!json)\n\t\t{\n\t\t\tlet mol = MoleculeStream.readUnknown(str);\n\t\t\tif (MolUtil.notBlank(mol))\n\t\t\t{\n\t\t\t\tlet modmix = this.mixture.clone();\n\t\t\t\tlet comp = modmix.getComponent(origin);\n\t\t\t\tif (comp)\n\t\t\t\t{\n\t\t\t\t\tcomp.molfile = new MDLMOLWriter(mol).write();\n\t\t\t\t\tthis.setMixture(modmix);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse alert('Clipboard does not contain a mixture component.');\n\t\t\treturn;\n\t\t}\n\n\t\tif (!json.name && !json.molfile && !json.quantity && Vec.isBlank(json.contents))\n\t\t{\n\t\t\talert('Clipboard content is either not a component, or has no interesting content.');\n\t\t\treturn;\n\t\t}\n\n\t\t// special deal when pasting into nothing: just replace it\n\t\tif (this.selectedIndex < 0 && this.mixture.isEmpty())\n\t\t{\n\t\t\tlet modmix = new Mixture(json);\n\t\t\tthis.delayedSelect = [];\n\t\t\tthis.setMixture(modmix);\n\t\t\treturn;\n\t\t}\n\n\t\t// append to or replace some piece, preferably selected\n\t\tlet modmix = this.mixture.clone();\n\t\tlet comp = modmix.getComponent(origin);\n\t\tif (Mixture.isComponentEmpty(comp))\n\t\t{\n\t\t\tObject.keys(comp).forEach((key:string) => delete (comp as any)[key]);\n\t\t\tObject.keys(json).forEach((key:string) => (comp as any)[key] = json[key]);\n\t\t\tthis.delayedSelect = origin;\n\t\t}\n\t\telse // append\n\t\t{\n\t\t\tif (!comp.contents) comp.contents = [];\n\t\t\tcomp.contents.push(json);\n\t\t\tthis.delayedSelect = Vec.concat(origin, [comp.contents.length - 1]);\n\t\t}\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// call this anytime the focus could have wandered\n\tpublic refocus():void\n\t{\n\t\tthis.contentDOM.grabFocus();\n\t}\n\n\t// return the layout around onscreen for an indicated component\n\tpublic getComponentPosition(origin:number[]):Box\n\t{\n\t\tfor (let comp of this.layout.components) if (Vec.equals(origin, comp.origin))\n\t\t{\n\t\t\tlet box = comp.boundary.clone();\n\t\t\tbox.x += this.offsetX;\n\t\t\tbox.y += this.offsetY;\n\t\t\treturn box;\n\t\t}\n\t\treturn null;\n\t}\n\n\t// ------------ private methods ------------\n\n\tprotected redraw(rescale = false, fit = false):void\n\t{\n\t\tthis.filthy = false;\n\n\t\tlet width = this.contentDOM.width(), height = this.contentDOM.height();\n\t\tlet density = pixelDensity();\n\n\t\tfor (let canvas of [this.canvasMixture, this.canvasOver])\n\t\t{\n\t\t\tcanvas.width = width * density;\n\t\t\tcanvas.height = height * density;\n\t\t\tcanvas.style.width = width + 'px';\n\t\t\tcanvas.style.height = height + 'px';\n\t\t}\n\n\t\tif (!this.layout)\n\t\t{\n\t\t\tlet measure = new OutlineMeasurement(0, 0, this.pointScale);\n\t\t\tthis.policy = this.monochrome ? RenderPolicy.defaultBlackOnWhite(this.pointScale) : RenderPolicy.defaultColourOnWhite(this.pointScale);\n\t\t\tthis.layout = new ArrangeMixture(this.mixture, measure, this.policy);\n\t\t\tthis.layout.showCollapsors = true;\n\t\t\tthis.layout.collapsedBranches = this.collapsedBranches;\n\t\t\tthis.layout.packBranches = new Size(0.8 * this.contentDOM.width(), 0.8 * this.contentDOM.height());\n\t\t\tthis.layout.norm = new NormMixture(this.mixture);\n\t\t\tthis.layout.norm.analyse();\n\t\t\tthis.layout.arrange();\n\t\t\tif (rescale) this.scaleToFit(fit);\n\t\t}\n\n\t\tif (this.delayedSelect)\n\t\t{\n\t\t\tfor (let n = 0; n < this.layout.components.length; n++) if (Vec.equals(this.delayedSelect, this.layout.components[n].origin))\n\t\t\t{\n\t\t\t\tthis.selectedIndex = n;\n\t\t\t\tthis.ensureComponentVisible(n);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.delayedSelect = null;\n\t\t}\n\n\t\tlet gfx = new MetaVector();\n\t\tlet draw = new DrawMixture(this.layout, gfx);\n\t\tdraw.hoverIndex = this.hoverIndex;\n\t\tdraw.activeIndex = this.activeIndex;\n\t\tdraw.selectedIndex = this.selectedIndex;\n\t\tdraw.draw();\n\n\t\tgfx.offsetX = this.offsetX;\n\t\tgfx.offsetY = this.offsetY;\n\t\tgfx.setSize(width, height);\n\t\tgfx.renderCanvas(this.canvasMixture, true);\n\t}\n\n\t// assuming that layout is already defined, modifies the offset/scale so that\n\tprotected scaleToFit(mustFit:boolean):void\n\t{\n\t\tlet width = this.contentDOM.width(), height = this.contentDOM.height(), pad = 4;\n\t\tif (mustFit)\n\t\t{\n\t\t\tif (this.layout.width > width - pad || this.layout.height > height - pad)\n\t\t\t{\n\t\t\t\tlet scale = Math.min((width - pad) / this.layout.width, (height - pad) / this.layout.height);\n\t\t\t\tthis.pointScale *= scale;\n\t\t\t\tthis.layout.scaleComponents(scale);\n\t\t\t}\n\t\t\tthis.offsetX = 0.5 * (width - this.layout.width);\n\t\t\tthis.offsetY = 0.5 * (height - this.layout.height);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.offsetX = Math.max(pad, 0.5 * (width - this.layout.width));\n\t\t\tthis.offsetY = 0.5 * (height - this.layout.height);\n\t\t}\n\t}\n\n\t// make sure the indicated component is fully visible onscreen\n\tprivate ensureComponentVisible(idx:number):void\n\t{\n\t\tlet width = this.contentDOM.width(), height = this.contentDOM.height(), pad = 4;\n\t\tlet comp = this.layout.components[idx];\n\t\tlet box = comp.boundary.withOffsetBy(this.offsetX, this.offsetY);\n\n\t\tif (box.minX() < pad) this.offsetX -= box.minX() - pad;\n\t\telse if (box.maxX() > width - pad) this.offsetX += width - pad - box.maxX();\n\n\t\tif (box.minY() < pad) this.offsetY -= box.minY() - pad;\n\t\telse if (box.maxY() > height - pad) this.offsetY += height - pad - box.maxY();\n\t}\n\n\t// mouse has moved: see if we need to update the hover\n\tprotected updateHoverCursor(event:MouseEvent):void\n\t{\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet idx = this.activeIndex >= 0 ? -1 : this.pickComponent(x, y);\n\t\tif (idx != this.hoverIndex)\n\t\t{\n\t\t\tthis.hoverIndex = idx;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t}\n\n\t// finds the index of a component at a given position, or -1 if none\n\tprotected pickComponent(x:number, y:number):number\n\t{\n\t\tlet pick = this.pickComponentSection(x, y);\n\t\treturn pick == null || pick[1] ? -1 : pick[0];\n\t}\n\n\t// more detailed pick: nothing = null, something = [compidx, collapsebox]\n\tprotected pickComponentSection(x:number, y:number):[number, boolean]\n\t{\n\t\tif (!this.layout) return null;\n\t\tfor (let n = 0; n < this.layout.components.length; n++)\n\t\t{\n\t\t\tlet comp = this.layout.components[n];\n\t\t\tlet ux = x - this.offsetX - comp.boundary.x, uy = y - this.offsetY - comp.boundary.y;\n\t\t\tif (comp.outline.contains(ux, uy)) return [n, false];\n\t\t\tif (comp.collapseBox && comp.collapseBox.contains(ux, uy)) return [n, true];\n\t\t}\n\t\treturn null;\n\t}\n\n\t// cursor key wandering\n\tprotected navigateDirection(dir:string):void\n\t{\n\t\tlet newIndex = -1;\n\t\tif (this.selectedIndex < 0) newIndex = 0;\n\t\telse\n\t\t{\n\t\t\tlet origin = this.layout.components[this.selectedIndex].origin.slice(0);\n\n\t\t\tif (dir == 'tab')\n\t\t\t{\n\t\t\t\tif (Vec.isBlank(origin))\n\t\t\t\t{\n\t\t\t\t\tlet comp = this.mixture.getComponent(origin);\n\t\t\t\t\tif (Vec.isBlank(comp.contents))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.delayedSelect = [0];\n\t\t\t\t\t\tthis.appendToCurrent();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdir = 'right';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet parent = this.mixture.getComponent(origin.slice(0, origin.length - 1)), pos = Vec.last(origin);\n\t\t\t\t\tif (pos == parent.contents.length - 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.insertAfterCurrent();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdir = 'down';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dir == 'left')\n\t\t\t{\n\t\t\t\tif (origin.length == 0) return;\n\t\t\t\torigin.pop();\n\t\t\t\tnewIndex = this.layout.findComponent(origin);\n\t\t\t}\n\t\t\telse if (dir == 'right')\n\t\t\t{\n\t\t\t\torigin.push(0);\n\t\t\t\tnewIndex = this.layout.findComponent(origin);\n\t\t\t}\n\t\t\telse if (dir == 'up')\n\t\t\t{\n\t\t\t\tif (origin.length == 0 || origin[origin.length - 1] == 0) return;\n\t\t\t\torigin[origin.length - 1]--;\n\t\t\t\tnewIndex = this.layout.findComponent(origin);\n\t\t\t}\n\t\t\telse if (dir == 'down')\n\t\t\t{\n\t\t\t\tif (origin.length == 0) return;\n\t\t\t\torigin[origin.length - 1]++;\n\t\t\t\tnewIndex = this.layout.findComponent(origin);\n\t\t\t}\n\t\t}\n\n\t\tif (newIndex >= 0 && newIndex < this.layout.components.length)\n\t\t{\n\t\t\tthis.delayedSelect = this.layout.components[newIndex].origin;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t}\n\n\t// collapses or un-collapses the indicated position\n\tprotected toggleCollapsed(idx:number):void\n\t{\n\t\tlet origin = this.layout.components[idx].origin;\n\t\tlet got = false;\n\t\tfor (let n = 0; n < this.collapsedBranches.length; n++) if (Vec.equals(origin, this.collapsedBranches[n]))\n\t\t{\n\t\t\tthis.collapsedBranches.splice(n, 1);\n\t\t\tgot = true;\n\t\t\tbreak;\n\t\t}\n\t\tif (!got) this.collapsedBranches.push(origin);\n\t\tthis.layout = null;\n\t\tthis.redraw();\n\t}\n\n\t// interactivity\n\tprotected mouseClick(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tif (event.ctrlKey)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet picked = this.pickComponentSection(x, y);\n\t\tif (picked && picked[1]) this.toggleCollapsed(picked[0]);\n\t}\n\tprotected mouseDoubleClick(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tevent.stopImmediatePropagation();\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet idx = this.pickComponent(x, y);\n\t\tif (idx >= 0)\n\t\t{\n\t\t\tthis.hoverIndex = -1;\n\t\t\tthis.activeIndex = -1;\n\t\t\tthis.selectedIndex = idx;\n\t\t\tthis.delayedRedraw();\n\t\t\tthis.editDetails();\n\t\t}\n\t}\n\tprotected mouseDown(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tif (this.callbackInteraction) this.callbackInteraction();\n\t\t//event.preventDefault();\n\n\t\tif (event.which != 1) return;\n\t\tif (event.ctrlKey)\n\t\t{\n\t\t\t//this.contextMenu(event);\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet idx = this.pickComponent(x, y);\n\n\t\tthis.dragReason = DragReason.Any;\n\t\tthis.dragIndex = idx;\n\t\tthis.dragX = x;\n\t\tthis.dragY = y;\n\n\t\tif (idx != this.activeIndex)\n\t\t{\n\t\t\tthis.activeIndex = idx;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t}\n\tprotected mouseUp(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tif (event.ctrlKey)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.dragReason != DragReason.Pan)\n\t\t{\n\t\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\t\tlet idx = this.pickComponent(x, y);\n\t\t\tif (idx == this.activeIndex) this.selectedIndex = idx;\n\t\t\tthis.activeIndex = -1;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\n\t\tthis.dragReason = DragReason.None;\n\t}\n\tprotected mouseOver(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tthis.updateHoverCursor(event);\n\t}\n\tprotected mouseOut(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tthis.updateHoverCursor(event);\n\t\tthis.dragReason = DragReason.None;\n\t}\n\tprotected mouseMove(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tthis.updateHoverCursor(event);\n\n\t\tif (this.dragReason == DragReason.Any && this.dragIndex < 0)\n\t\t{\n\t\t\tthis.dragReason = DragReason.Pan;\n\t\t}\n\n\t\tif (this.dragReason == DragReason.Pan)\n\t\t{\n\t\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\t\tlet dx = x - this.dragX, dy = y - this.dragY;\n\t\t\tif (dx != 0 && dy != 0)\n\t\t\t{\n\t\t\t\tthis.offsetX += dx;\n\t\t\t\tthis.offsetY += dy;\n\t\t\t\tthis.delayedRedraw();\n\t\t\t\t[this.dragX, this.dragY] = [x, y];\n\t\t\t}\n\t\t}\n\t}\n\tprotected keyPressed(event:KeyboardEvent):void\n\t{\n\t\t//let ch = String.fromCharCode(event.keyCode || event.charCode);\n\t\t//console.log('PRESSED['+ch+'] key='+event.keyCode+' chcode='+event.charCode);\n\t}\n\tprotected keyDown(event:KeyboardEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tif (this.callbackInteraction) this.callbackInteraction();\n\n\t\tif (!this.isReceivingCommands()) return;\n\n\t\tlet key = event.key;\n\t\t//console.log('DOWN: key='+key);\n\n\t\tif (!event.shiftKey && !event.ctrlKey && !event.altKey && !event.metaKey)\n\t\t{\n\t\t\tif (key == 'Enter')\n\t\t\t{\n\t\t\t\tif (this.selectedIndex >= 0) this.editDetails();\n\t\t\t}\n\t\t\telse if (key == 'Escape') {} // escape\n\t\t\telse if (key == 'ArrowLeft') this.navigateDirection('left');\n\t\t\telse if (key == 'ArrowRight') this.navigateDirection('right');\n\t\t\telse if (key == 'ArrowUp') this.navigateDirection('up');\n\t\t\telse if (key == 'ArrowDown') this.navigateDirection('down');\n\t\t\telse if (key == 'Tab') this.navigateDirection('tab');\n\t\t\telse return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t}\n\tprotected keyUp(event:KeyboardEvent):void\n\t{\n\t\t// !!\n\t}\n\tprotected mouseWheel(event:WheelEvent):void\n\t{\n\t\tif (this.callbackInteraction) this.callbackInteraction();\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet delta = Math.abs(event.deltaX) > Math.abs(event.deltaY) ? event.deltaX : event.deltaY;\n\t\tlet scale = 1 + Math.abs(delta) * 0.05;\n\t\tif (delta < 0) scale = 1.0 / scale;\n\n\t\tlet newScale = this.pointScale * scale;\n\t\tthis.offsetX = x - (newScale / this.pointScale) * (x - this.offsetX);\n\t\tthis.offsetY = y - (newScale / this.pointScale) * (y - this.offsetY);\n\t\t//if (this.layout) this.layout.scaleComponents(newScale / this.pointScale);\n\t\tthis.pointScale = newScale;\n\n\t\tthis.layout = null;\n\t\tthis.delayedRedraw();\n\t\tevent.preventDefault();\n\t}\n\tprotected contextMenu(event:MouseEvent):void\n\t{\n\t\t// nop\n\t}\n\n\t// given that the structure may have changed, see if any metadata is potentially invalidated - and ask the user; the component parameter\n\t// may be modified\n\tprotected checkStructureIntegrity(comp:MixfileComponent, newMol:Molecule):void\n\t{\n\t\tlet integKeys = Object.keys(this.structureIntegrity).filter((key) => (comp.identifiers && comp.identifiers[key]) || (comp.links && comp.links[key]));\n\t\tif (integKeys.length == 0) return;\n\n\t\tlet oldMol = comp.molfile ? MoleculeStream.readUnknown(comp.molfile) : null;\n\t\tif (MolUtil.isBlank(oldMol) && MolUtil.isBlank(newMol)) return;\n\t\tif (oldMol && newMol && CoordUtil.sketchMappable(oldMol, newMol)) return;\n\n\t\tlet msg = MolUtil.isBlank(newMol) ? 'Structure has been removed.' : 'Structure has changed.';\n\t\tmsg += `\\nThe following reference${integKeys.length == 1 ? '' : 's'} may have become stale:`;\n\t\tfor (let key of integKeys) msg += '\\n    ' + this.structureIntegrity[key];\n\t\tmsg += integKeys.length == 1 ? '\\nRemove this reference?' : '\\nRemove these references?';\n\t\tif (!confirm(msg)) return;\n\n\t\tfor (let key of integKeys)\n\t\t{\n\t\t\tif (comp.identifiers) delete comp.identifiers[key];\n\t\t\tif (comp.links) delete comp.links[key];\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {ClipboardProxy} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy} from 'webmolkit/ui/MenuProxy';\nimport {eventCoords} from 'webmolkit/util/util';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Menu as ElectronMenu, MenuItem as ElectronMenuItem, getCurrentWindow} from '@electron/remote';\nimport {InChIDelegate} from '../mixture/InChIDelegate';\nimport {EditMixture} from '../web/EditMixture';\n\n/*\n\tSpecialisation of the EditMixture class that tasks advantage of desktop (Electron) capabilities.\n*/\n\nexport class EditMixtureDesktop extends EditMixture\n{\n\tconstructor(inchi:InChIDelegate, proxyClip:ClipboardProxy, proxyMenu:MenuProxy)\n\t{\n\t\tsuper(inchi, proxyClip, proxyMenu);\n\t}\n\n\tprotected contextMenu(event:MouseEvent):void\n\t{\n\t\tif (this.callbackInteraction) this.callbackInteraction();\n\n\t\tevent.preventDefault();\n\t\tif (!this.isReceivingCommands()) return;\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet idx = this.pickComponent(x, y);\n\n\t\tthis.selectedIndex = idx;\n\t\tthis.activeIndex = -1;\n\t\tthis.delayedRedraw();\n\n\t\tlet menu = new ElectronMenu();\n\t\tif (idx >= 0)\n\t\t{\n\t\t\tlet comp = this.layout.components[idx].content, origin = this.layout.components[idx].origin;\n\t\t\tlet sel = ():void => this.selectComponent(idx);\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Edit Structure', click: () => {sel(); this.editStructure();}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Edit Details', click: () => {sel(); this.editDetails();}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Lookup Name', click: () => {sel(); this.lookupCurrent();}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Append', click: () => {sel(); this.appendToCurrent();}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Prepend', click: () => {sel(); this.prependBeforeCurrent();}}));\n\t\t\tif (origin.length > 0)\n\t\t\t{\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Insert Before', click: () => {sel(); this.insertBeforeCurrent();}}));\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Insert After', click: () => {sel(); this.insertAfterCurrent();}}));\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Delete', click: () => {this.selectComponent(idx); this.deleteCurrent();}}));\n\n\t\t\t\tif (origin[origin.length - 1] > 0)\n\t\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Move Up', click: () => {sel(); this.reorderCurrent(-1);}}));\n\t\t\t\tif (origin[origin.length - 1] < Vec.arrayLength(this.mixture.getParentComponent(origin).contents) - 1)\n\t\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Move Down', click: () => {sel(); this.reorderCurrent(1);}}));\n\t\t\t}\n\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Copy', click: () => {sel(); this.clipboardCopy(false);}}));\n\t\t\tif (Vec.arrayLength(comp.contents) > 0)\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Copy Branch', click: () => {sel(); this.clipboardCopy(false, true);}}));\n\t\t\tif (origin.length > 0)\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Cut', click: () => {sel(); this.clipboardCopy(true);}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Paste', click: () => {sel(); this.clipboardPaste();}}));\n\n\t\t\tif (Vec.notBlank(comp.contents))\n\t\t\t{\n\t\t\t\tlet label = this.layout.components[idx].isCollapsed ? 'Expand Branch' : 'Collapse Branch';\n\t\t\t\tmenu.append(new ElectronMenuItem({label: label, click: () => this.toggleCollapsed(idx)}));\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Zoom In', click: () => this.zoom(1.25)}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Zoom Out', click: () => this.zoom(0.8)}));\n\t\t}\n\n\t\tmenu.popup({window: getCurrentWindow()});\n\t}\n\n}\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {MainPanel} from './MainPanel';\nimport {MenuBanner, MenuBannerButton, MenuBannerCommand} from '../web/MenuBanner';\nimport {ClipboardProxy, ClipboardProxyHandler} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy} from 'webmolkit/ui/MenuProxy';\nimport {ExportSDFile} from '../mixture/ExportSDFile';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {Size} from 'webmolkit/util/Geom';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {DrawMixture} from '../mixture/DrawMixture';\nimport {ExportMInChI, MInChISegment} from '../mixture/ExportMInChI';\nimport {Dialog} from 'webmolkit/dialog/Dialog';\nimport {yieldDOM} from 'webmolkit/util/util';\nimport {Dialog as ElectronDialog, OpenDialogOptions, SaveDialogOptions, clipboard as electronClipboard, ipcRenderer} from 'electron';\nimport {dialog as electronDialog, getCurrentWindow} from '@electron/remote';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport {Mixture} from '../mixture/Mixture';\nimport {MIXFILE_VERSION} from '../mixture/Mixfile';\nimport {openNewWindow} from './startup';\nimport {InChI} from '../nodejs/InChI';\nimport {InChIDelegate} from '../mixture/InChIDelegate';\nimport {EditMixtureDesktop} from './EditMixtureDesktop';\n\n/*\n\tViewing/editing window: dedicated entirely to the sketching of a mixture.\n*/\n\nconst BANNER:MenuBannerButton[][] =\n[\n\t[\n\t\t{icon: 'CommandSave.svg', tip: 'Save', cmd: MenuBannerCommand.Save},\n\t],\n\t[\n\t\t{icon: 'CommandEdit.svg', tip: 'Edit component', cmd: MenuBannerCommand.EditDetails},\n\t\t{icon: 'CommandStructure.svg', tip: 'Edit structure', cmd: MenuBannerCommand.EditStructure},\n\t\t{icon: 'CommandLookup.svg', tip: 'Lookup compound', cmd: MenuBannerCommand.Lookup},\n\t\t{icon: 'CommandPicture.svg', tip: 'Export graphics', cmd: MenuBannerCommand.ExportSVG},\n\t],\n\t[\n\t\t{icon: 'CommandAppend.svg', tip: 'Append component to the right', cmd: MenuBannerCommand.Append},\n\t\t{icon: 'CommandPrepend.svg', tip: 'Prepend component to the left', cmd: MenuBannerCommand.Prepend},\n\t\t{icon: 'CommandInsertBefore.svg', tip: 'Insert component above', cmd: MenuBannerCommand.InsertBefore},\n\t\t{icon: 'CommandInsertAfter.svg', tip: 'Append component below', cmd: MenuBannerCommand.InsertAfter},\n\t\t{icon: 'CommandDelete.svg', tip: 'Delete', cmd: MenuBannerCommand.Delete},\n\t\t{icon: 'CommandMoveUp.svg', tip: 'Move Up', cmd: MenuBannerCommand.MoveUp},\n\t\t{icon: 'CommandMoveDown.svg', tip: 'Move Down', cmd: MenuBannerCommand.MoveDown},\n\t],\n\t[\n\t\t{icon: 'CommandUndo.svg', tip: 'Undo', cmd: MenuBannerCommand.Undo},\n\t\t{icon: 'CommandRedo.svg', tip: 'Redo', cmd: MenuBannerCommand.Redo},\n\t],\n\t[\n\t\t{icon: 'CommandCopy.svg', tip: 'Copy', cmd: MenuBannerCommand.Copy},\n\t\t{icon: 'CommandCut.svg', tip: 'Cut', cmd: MenuBannerCommand.Cut},\n\t\t{icon: 'CommandPaste.svg', tip: 'Paste', cmd: MenuBannerCommand.Paste},\n\t],\n\t[\n\t\t{icon: 'CommandZoomNormal.svg', tip: 'Zoom full', cmd: MenuBannerCommand.ZoomFull},\n\t\t{icon: 'CommandZoomIn.svg', tip: 'Zoom in', cmd: MenuBannerCommand.ZoomIn},\n\t\t{icon: 'CommandZoomOut.svg', tip: 'Zoom out', cmd: MenuBannerCommand.ZoomOut},\n\t],\n];\n\nexport class MixturePanel extends MainPanel\n{\n\tprivate filename:string = null;\n\tprivate banner:MenuBanner;\n\tprivate editor:EditMixtureDesktop;\n\n\t// ------------ public methods ------------\n\n\tconstructor(root:DOM, private proxyClip:ClipboardProxy, private proxyMenu:MenuProxy)\n\t{\n\t\tsuper(root);\n\n\t\tthis.banner = new MenuBanner(BANNER, (cmd:MenuBannerCommand) => this.menuAction(cmd));\n\n\t\tthis.editor = new EditMixtureDesktop(this.inchi, this.proxyClip, this.proxyMenu);\n\t\tthis.editor.callbackUpdateTitle = () => this.updateTitle();\n\n\t\tlet divFlex = dom('<div/>').appendTo(root).css({'display': 'flex'});\n\t\tdivFlex.css({'flex-direction': 'column', 'width': '100%', 'height': '100%'});\n\t\tlet divBanner = dom('<div/>').appendTo(divFlex).css({'flex-grow': '0'});\n\t\tlet divEditor = dom('<div/>').appendTo(divFlex).css({'flex-grow': '1'});\n\n\t\tthis.banner.render(divBanner);\n\t\tthis.editor.render(divEditor);\n\n\t\tthis.banner.callbackRefocus = () => this.editor.refocus();\n\t}\n\n\tpublic setMixture(mixture:Mixture):void\n\t{\n\t\tthis.editor.clearHistory();\n\t\tthis.editor.setMixture(mixture, true, false);\n\t\tthis.editor.setDirty(false);\n\t}\n\n\tpublic loadFile(filename:string):void\n\t{\n\t\tif (!filename)\n\t\t{\n\t\t\tthis.editor.clearHistory();\n\t\t\tthis.editor.setMixture(new Mixture(), true, true);\n\t\t\tthis.updateTitle();\n\t\t\tthis.filename = null;\n\t\t\treturn;\n\t\t}\n\n\t\tfs.readFile(filename, 'utf-8', (err:any, data:string):void =>\n\t\t{\n\t\t\tif (err) throw err;\n\n\t\t\tlet mixture:Mixture;\n\t\t\ttry {mixture = Mixture.deserialise(data);}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tconsole.log('Invalid mixture file: ' + e + '\\n' + data);\n\t\t\t\talert('Not a valid mixture file.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmixture.mixfile.mixfileVersion = MIXFILE_VERSION; // as good a time as any to set latest version\n\n\t\t\tthis.editor.clearHistory();\n\t\t\tthis.editor.setMixture(mixture, true, false);\n\t\t\tthis.editor.setDirty(false);\n\t\t\tthis.filename = filename;\n\t\t\tthis.updateTitle();\n\t\t});\n\t}\n\n\tpublic saveFile(filename:string):void\n\t{\n\t\tlet mixture = this.editor.getMixture();\n\t\tlet content = mixture.serialise();\n\n\t\tfs.writeFile(filename, content, (err:any):void =>\n\t\t{\n\t\t\tif (err) alert('Unable to save: ' + err);\n\t\t});\n\t}\n\n\tprotected onResize():void\n\t{\n\t\tsuper.onResize();\n\t\tthis.editor.delayedRedraw();\n\n\t\t//let w = document.documentElement.clientWidth, h = document.documentElement.clientHeight;\n\t\t//this.sketcher.changeSize(w, h); // force a re-layout to match the new size\n\t}\n\n\tpublic menuAction(cmd:MenuBannerCommand):void\n\t{\n\t\tlet dlg = this.editor.compoundEditor();\n\t\tif (dlg)\n\t\t{\n\t\t\tif (cmd == MenuBannerCommand.Cut) dlg.actionCut();\n\t\t\telse if (cmd == MenuBannerCommand.Copy) dlg.actionCopy();\n\t\t\telse if (cmd == MenuBannerCommand.Paste) dlg.actionPaste();\n\t\t\telse if (cmd == MenuBannerCommand.Undo) dlg.actionUndo();\n\t\t\telse if (cmd == MenuBannerCommand.Redo) dlg.actionRedo();\n\t\t\treturn;\n\t\t}\n\t\tif (!this.editor.isReceivingCommands())\n\t\t{\n\t\t\t// certain common menu/shortcut commands are passed through to standard behaviour, the rest are stopped\n\t\t\tif ([MenuBannerCommand.Cut, MenuBannerCommand.Copy, MenuBannerCommand.Paste,\n\t\t\t\t MenuBannerCommand.Undo, MenuBannerCommand.Redo].indexOf(cmd) >= 0) document.execCommand(cmd);\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.menuAction(cmd);\n\t}\n\n\tpublic customMenuAction(cmd:MenuBannerCommand):void\n\t{\n\t\tif (cmd == MenuBannerCommand.ExportSDF) this.actionExportSDF();\n\t\telse if (cmd == MenuBannerCommand.ExportSVG) this.actionFileExportSVG();\n\t\telse if (cmd == MenuBannerCommand.CreateMInChI) this.actionFileCreateMInChI();\n\t\telse if (cmd == MenuBannerCommand.Undo) this.editor.performUndo();\n\t\telse if (cmd == MenuBannerCommand.Redo) this.editor.performRedo();\n\t\telse if (cmd == MenuBannerCommand.Cut) this.editor.clipboardCopy(true);\n\t\telse if (cmd == MenuBannerCommand.Copy) this.editor.clipboardCopy(false);\n\t\telse if (cmd == MenuBannerCommand.CopyBranch) this.editor.clipboardCopy(false, true);\n\t\telse if (cmd == MenuBannerCommand.Paste) this.editor.clipboardPaste();\n\t\telse if (cmd == MenuBannerCommand.EditStructure) this.editor.editStructure();\n\t\telse if (cmd == MenuBannerCommand.EditDetails) this.editor.editDetails();\n\t\telse if (cmd == MenuBannerCommand.Lookup) this.editor.lookupCurrent();\n\t\telse if (cmd == MenuBannerCommand.Delete) this.editor.deleteCurrent();\n\t\telse if (cmd == MenuBannerCommand.Append) this.editor.appendToCurrent();\n\t\telse if (cmd == MenuBannerCommand.Prepend) this.editor.prependBeforeCurrent();\n\t\telse if (cmd == MenuBannerCommand.InsertBefore) this.editor.insertBeforeCurrent();\n\t\telse if (cmd == MenuBannerCommand.InsertAfter) this.editor.insertAfterCurrent();\n\t\telse if (cmd == MenuBannerCommand.MoveUp) this.editor.reorderCurrent(-1);\n\t\telse if (cmd == MenuBannerCommand.MoveDown) this.editor.reorderCurrent(1);\n\t\telse if (cmd == MenuBannerCommand.ZoomFull) this.editor.zoomFull();\n\t\telse if (cmd == MenuBannerCommand.ZoomNormal) this.editor.zoomNormal();\n\t\telse if (cmd == MenuBannerCommand.ZoomIn) this.editor.zoom(1.25);\n\t\telse if (cmd == MenuBannerCommand.ZoomOut) this.editor.zoom(0.8);\n\t\telse super.customMenuAction(cmd);\n\t}\n\n\t// ------------ private methods ------------\n\n\tprotected actionFileOpen():void\n\t{\n\t\tlet filedir = this.filename && this.filename.indexOf(path.sep) ? this.filename.substring(0, this.filename.lastIndexOf(path.sep)) : undefined;\n\t\tlet params:OpenDialogOptions =\n\t\t{\n\t\t\ttitle: 'Open Mixture',\n\t\t\tproperties: ['openFile'],\n\t\t\tdefaultPath: filedir,\n\t\t\tfilters:\n\t\t\t[\n\t\t\t\t{name: 'Mixfile', extensions: ['mixfile']},\n\t\t\t\t{name: 'Mixfile Collection', extensions: ['json']},\n\t\t\t]\n\t\t};\n\t\telectronDialog.showOpenDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tlet inPlace = this.editor.getMixture().isEmpty();\n\t\t\tfor (let fn of value.filePaths)\n\t\t\t{\n\t\t\t\tif (inPlace && fn.endsWith('.mixfile'))\n\t\t\t\t{\n\t\t\t\t\tthis.loadFile(fn);\n\t\t\t\t\tinPlace = false;\n\t\t\t\t}\n\t\t\t\telse if (fn.endsWith('.json'))\n\t\t\t\t\topenNewWindow('CollectionPanel', fn);\n\t\t\t\telse\n\t\t\t\t\topenNewWindow('MixturePanel', fn);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected actionFileSave():void\n\t{\n\t\tif (this.editor.isBlank()) return;\n\t\tif (!this.filename) {this.actionFileSaveAs(); return;}\n\n\t\tthis.saveFile(this.filename);\n\t\tthis.editor.setDirty(false);\n\t\tthis.updateTitle();\n\t}\n\n\tprotected actionFileSaveAs():void\n\t{\n\t\tif (this.editor.isBlank()) return;\n\n\t\tlet params:SaveDialogOptions =\n\t\t{\n\t\t\ttitle: 'Save Mixfile',\n\t\t\t//defaultPath...\n\t\t\tfilters:\n\t\t\t[\n\t\t\t\t{name: 'Mixfile', extensions: ['mixfile']}\n\t\t\t]\n\t\t};\n\t\telectronDialog.showSaveDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tthis.saveFile(value.filePath);\n\t\t\tthis.filename = value.filePath;\n\t\t\tthis.editor.setDirty(false);\n\t\t\tthis.updateTitle();\n\t\t});\n\t}\n\n\tprivate actionExportSDF():void\n\t{\n\t\tlet mixture = this.editor.getMixture();\n\t\tif (mixture.isEmpty()) return;\n\n\t\tlet exportSDF = new ExportSDFile();\n\t\texportSDF.append(mixture.mixfile);\n\t\tlet sdfile = exportSDF.write();\n\n\t\tlet defPath = this.filename;\n\t\tif (defPath)\n\t\t{\n\t\t\tlet lastDot = defPath.lastIndexOf('.');\n\t\t\tif (lastDot > 0 && lastDot > defPath.lastIndexOf('/') && lastDot > defPath.lastIndexOf('\\\\')) defPath = defPath.substring(0, lastDot);\n\t\t\tdefPath += '.sdf';\n\t\t}\n\t\telse defPath = undefined;\n\n\t\tlet params:SaveDialogOptions =\n\t\t{\n\t\t\ttitle: 'Export as SDfile',\n\t\t\tdefaultPath: defPath,\n\t\t\tfilters:\n\t\t\t[\n\t\t\t\t{name: 'SDfile', extensions: ['sdf']}\n\t\t\t]\n\t\t};\n\t\tif (this.filename && this.filename.endsWith('.mixfile'))\n\t\t\tparams.defaultPath = (this.filename.substring(0, this.filename.length - 8) + '.sdf').split(/[\\/\\\\]/).pop();\n\n\t\telectronDialog.showSaveDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tfs.writeFile(value.filePath, sdfile, (err:any):void =>\n\t\t\t{\n\t\t\t\tif (err) alert('Unable to save: ' + err);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate actionFileExportSVG():void\n\t{\n\t\tlet defPath = this.filename;\n\t\tif (defPath)\n\t\t{\n\t\t\tlet lastDot = defPath.lastIndexOf('.');\n\t\t\tif (lastDot > 0 && lastDot > defPath.lastIndexOf('/') && lastDot > defPath.lastIndexOf('\\\\')) defPath = defPath.substring(0, lastDot);\n\t\t\tdefPath += '.svg';\n\t\t}\n\t\telse defPath = undefined;\n\n\t\tlet params:SaveDialogOptions =\n\t\t{\n\t\t\t'title': 'Save SVG Diagram',\n\t\t\t'defaultPath': defPath,\n\t\t\t'filters':\n\t\t\t[\n\t\t\t\t{'name': 'Scalable Vector Graphics', 'extensions': ['svg']}\n\t\t\t]\n\t\t};\n\t\telectronDialog.showSaveDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tlet policy = RenderPolicy.defaultColourOnWhite();\n\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\tlet layout = new ArrangeMixture(this.editor.getMixture(), measure, policy);\n\t\t\tlayout.collapsedBranches = this.editor.getCollapsedBranches();\n\t\t\t// TODO: decide whether to pack the branches...\n\t\t\tlayout.packBranches = new Size(0.8 * this.editor.contentDOM.width(), 0.8 * this.editor.contentDOM.height());\n\t\t\tlayout.arrange();\n\n\t\t\tlet gfx = new MetaVector();\n\t\t\tnew DrawMixture(layout, gfx).draw();\n\t\t\tgfx.normalise();\n\t\t\tlet svg = gfx.createSVG(true, true);\n\n\t\t\tfs.writeFile(value.filePath, svg, (err:any):void =>\n\t\t\t{\n\t\t\t\tif (err) alert('Unable to save: ' + err);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate actionFileCreateMInChI():void\n\t{\n\t\tif (!InChI.isAvailable())\n\t\t{\n\t\t\talert('InChI executable has not been configured. Specify with --inchi parameter.');\n\t\t\treturn;\n\t\t}\n\n\t\tlet maker = new ExportMInChI(this.editor.getMixture().mixfile, this.inchi);\n\t\tlet self = this;\n\t\tclass MInChIDialog extends Dialog\n\t\t{\n\t\t\tconstructor()\n\t\t\t{\n\t\t\t\tsuper();\n\t\t\t\tthis.title = 'MInChI';\n\t\t\t}\n\t\t\tprotected populate():void\n\t\t\t{\n\t\t\t\tself.proxyClip.pushHandler(new ClipboardProxyHandler());\n\t\t\t\tthis.bodyDOM().setText('Calculating...');\n\t\t\t\t(async () => await this.renderResult())();\n\t\t\t}\n\t\t\tpublic close():void\n\t\t\t{\n\t\t\t\tself.proxyClip.popHandler();\n\t\t\t\tsuper.close();\n\t\t\t}\n\t\t\tprivate async renderResult():Promise<void>\n\t\t\t{\n\t\t\t\tawait yieldDOM();\n\t\t\t\tawait maker.fillInChI();\n\t\t\t\tmaker.formulate();\n\n\t\t\t\tlet body = this.bodyDOM();\n\t\t\t\tbody.empty();\n\n\t\t\t\tlet divOuter = dom('<div/>').appendTo(body);\n\t\t\t\tlet pre = dom('<span/>').appendTo(divOuter).css({'font-family': 'monospace', 'padding-top': '0.5em', 'word-break': 'break-all'});\n\t\t\t\tlet minchi = maker.getResult(), segment = maker.getSegment();\n\t\t\t\tfor (let n = 0; n < minchi.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet span = dom('<span/>').appendTo(pre);\n\t\t\t\t\tspan.setText(minchi[n]);\n\t\t\t\t\tif (segment[n] == MInChISegment.Header) span.setCSS('background-color', '#FFC0C0');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Component) span.setCSS('background-color', '#C0C0FF');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Hierarchy) span.setCSS('background-color', '#E0E080');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Concentration) span.setCSS('background-color', '#80E080');\n\t\t\t\t\tpre.appendHTML('<wbr/>');\n\t\t\t\t}\n\n\t\t\t\tlet btnCopy = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\">Copy</button>').appendTo(divOuter).css({'margin-left': '0.5em'});\n\t\t\t\tbtnCopy.onClick(() => self.proxyClip.setString(minchi));\n\t\t\t}\n\t\t}\n\t\tnew MInChIDialog().open();\n\t}\n\n\tprivate updateTitle():void\n\t{\n\t\tif (this.filename == null) {document.title = 'Mixtures'; return;}\n\n\t\tlet slash = Math.max(this.filename.lastIndexOf('/'), this.filename.lastIndexOf('\\\\'));\n\t\tlet title = 'Mixtures - ' + this.filename.substring(slash + 1);\n\t\tif (this.editor.isDirty() && !this.editor.isBlank()) title += '*';\n\t\tdocument.title = title;\n\t}\n}\n\n","import { dom } from '../util/dom';\nimport { eventCoords, setBoundaryPixels } from '../util/util';\nimport { Popup } from './Popup';\nexport class MenuProxy {\n    hasContextMenu() { return false; }\n    openContextMenu(menuItems, event, opt) { }\n}\nexport class MenuProxyWeb extends MenuProxy {\n    hasContextMenu() { return true; }\n    openContextMenu(menuItems, event, opt) {\n        let [x, y] = eventCoords(event, document.body);\n        let divCursor = dom('<div/>').appendTo(document.body).css({ 'position': 'absolute', 'user-select': 'none' });\n        setBoundaryPixels(divCursor, x - 5, y - 5, 10, 10);\n        let currentFocus = dom(document.activeElement);\n        let popup = new Popup(divCursor);\n        if ((opt === null || opt === void 0 ? void 0 : opt.overrideObscureOpacity) != null)\n            popup.obscureOpacity = opt === null || opt === void 0 ? void 0 : opt.overrideObscureOpacity;\n        popup.callbackPopulate = () => {\n            popup.bodyDOM().css({ 'user-select': 'none', 'font-size': '16px' });\n            for (let menuItem of menuItems) {\n                let div = dom('<div/>').appendTo(popup.bodyDOM());\n                if (menuItem == null) {\n                    div.appendHTML('<hr/>');\n                }\n                else if (menuItem.subMenu) {\n                    div.setText(menuItem.label + ' \\u{25B8}');\n                    div.css({ 'cursor': 'pointer' });\n                    let fcn = (event) => {\n                        event.preventDefault();\n                        popup.close();\n                        this.openContextMenu(menuItem.subMenu, event);\n                    };\n                    div.onClick(fcn);\n                    div.onContextMenu(fcn);\n                }\n                else if (menuItem.click) {\n                    div.setText(menuItem.label);\n                    div.onMouseEnter(() => { div.css({ 'background-color': '#D0D0D0' }); });\n                    div.onMouseLeave(() => { div.css({ 'background-color': 'transparent' }); });\n                    div.css({ 'cursor': 'pointer' });\n                    div.onClick(() => {\n                        popup.close();\n                        menuItem.click();\n                    });\n                }\n                else {\n                    div.css({ 'color': '#808080' });\n                    div.setText(menuItem.label);\n                }\n            }\n        };\n        popup.callbackClose = () => {\n            divCursor.remove();\n            currentFocus.grabFocus();\n            if (opt === null || opt === void 0 ? void 0 : opt.callbackClose)\n                opt === null || opt === void 0 ? void 0 : opt.callbackClose();\n        };\n        popup.open();\n    }\n}\n//# sourceMappingURL=MenuProxy.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"process\");","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Mixfile} from './Mixfile';\nimport {Mixture} from './Mixture';\n\n/*\n\tCollection of mixtures: convenience methods for handling an array thereof, including serialisation.\n\n\tMost of the methods that fetch or modify the mixture content one item at a time make deep clones, so it is safe to\n\tassume that there are no dangling pointers. Exceptions include the constructor, bulk modifications, and methods marked\n\tas providing direct access.\n*/\n\nexport class MixtureCollection\n{\n\tprivate mixtures:Mixture[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor(mixtures?:Mixture[])\n\t{\n\t\tif (mixtures) this.mixtures = mixtures.slice(0);\n\t}\n\n\tpublic get count():number\n\t{\n\t\treturn this.mixtures.length;\n\t}\n\tpublic getMixture(idx:number):Mixture\n\t{\n\t\treturn this.mixtures[idx].clone();\n\t}\n\tpublic getMixtureDirect(idx:number):Mixture\n\t{\n\t\treturn this.mixtures[idx];\n\t}\n\tpublic setMixture(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures[idx] = mixture.clone();\n\t}\n\tpublic setMixtureDirect(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures[idx] = mixture;\n\t}\n\tpublic deleteMixture(idx:number):void\n\t{\n\t\tthis.mixtures.splice(idx, 1);\n\t}\n\tpublic appendMixture(mixture:Mixture):number\n\t{\n\t\tthis.mixtures.push(mixture.clone());\n\t\treturn this.mixtures.length - 1;\n\t}\n\tpublic appendMixtureDirect(mixture:Mixture):number\n\t{\n\t\tthis.mixtures.push(mixture);\n\t\treturn this.mixtures.length - 1;\n\t}\n\tpublic appendCollection(collection:MixtureCollection):void\n\t{\n\t\tthis.mixtures = this.mixtures.concat(collection.mixtures);\n\t}\n\tpublic insertMixture(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures.splice(idx, 0, mixture.clone());\n\t}\n\tpublic swapMixtures(idx1:number, idx2:number):void\n\t{\n\t\tlet [m1, m2] = [this.mixtures[idx1], this.mixtures[idx2]];\n\t\tthis.mixtures[idx1] = m2;\n\t\tthis.mixtures[idx2] = m1;\n\t}\n\n\t// unpacks a string into a mixture; throws an exception if anything went wrong\n\tpublic static deserialise(data:string):MixtureCollection\n\t{\n\t\tlet list = JSON.parse(data);\n\t\tif (!Array.isArray(list)) throw 'Input content is not a JSON array.';\n\t\tlet mixtures:Mixture[] = [];\n\t\tfor (let mixfile of list) mixtures.push(new Mixture(mixfile));\n\t\treturn new MixtureCollection(mixtures);\n\t}\n\n\t// converts the entire underlying JSON mixfile into a prettyprinted string; note the optional beautification parameter:\n\t// if not specified, small collections will get nice whitespace, whereas large ones will be densely packed for efficiency\n\tpublic serialise(beautify?:boolean):string\n\t{\n\t\tlet list:Mixfile[] = [];\n\t\tfor (let mixture of this.mixtures) list.push(mixture.mixfile);\n\t\t//return beautify || list.length <= 1000 ? Mixture.beautify(list) : JSON.stringify(list);\n\t\tif (beautify || list.length <= 100) return Mixture.beautify(list);\n\t\t\n\t\tlet lines = list.map((mixfile) => JSON.stringify(mixfile));\n\t\treturn '[\\n    ' + lines.join(',\\n    ') + '\\n]\\n';\n\t}\n\n\t// ------------ private methods ------------\n\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {MenuBanner, MenuBannerButton, MenuBannerCommand} from '../web/MenuBanner';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {ClipboardProxy} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy} from 'webmolkit/ui/MenuProxy';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {MetaVector, TextAlign} from 'webmolkit/gfx/MetaVector';\nimport {DrawMixture} from '../mixture/DrawMixture';\nimport {FontData} from 'webmolkit/gfx/FontData';\nimport * as fs from 'fs';\nimport {OpenDialogOptions, SaveDialogOptions} from 'electron';\nimport {dialog as electronDialog} from '@electron/remote';\nimport {MixtureCollection} from '../mixture/MixtureCollection';\nimport {Mixture} from '../mixture/Mixture';\nimport {MainPanel} from './MainPanel';\nimport {openNewWindow} from './startup';\nimport {EditMixtureDesktop} from './EditMixtureDesktop';\n\n/*\n\tBrowsing/editing a collection of mixtures.\n*/\n\nconst BANNER:MenuBannerButton[][] =\n[\n\t[\n\t\t{icon: 'CommandSave.svg', tip: 'Save', cmd: MenuBannerCommand.Save},\n\t],\n\t[\n\t\t{icon: 'CommandEdit.svg', tip: 'Edit component', cmd: MenuBannerCommand.EditDetails},\n\t\t{icon: 'CommandStructure.svg', tip: 'Edit structure', cmd: MenuBannerCommand.EditStructure},\n\t\t{icon: 'CommandLookup.svg', tip: 'Lookup compound', cmd: MenuBannerCommand.Lookup},\n\t\t{icon: 'CommandPicture.svg', tip: 'Export graphics', cmd: MenuBannerCommand.ExportSVG},\n\t],\n\t[\n\t\t{icon: 'CommandAppend.svg', tip: 'Append component', cmd: MenuBannerCommand.Append},\n\t\t{icon: 'CommandPrepend.svg', tip: 'Prepend component', cmd: MenuBannerCommand.Prepend},\n\t\t{icon: 'CommandDelete.svg', tip: 'Delete', cmd: MenuBannerCommand.Delete},\n\t\t{icon: 'CommandMoveUp.svg', tip: 'Move Up', cmd: MenuBannerCommand.MoveUp},\n\t\t{icon: 'CommandMoveDown.svg', tip: 'Move Down', cmd: MenuBannerCommand.MoveDown},\n\t],\n\t[\n\t\t{icon: 'CommandUndo.svg', tip: 'Undo', cmd: MenuBannerCommand.Undo},\n\t\t{icon: 'CommandRedo.svg', tip: 'Redo', cmd: MenuBannerCommand.Redo},\n\t],\n\t[\n\t\t{icon: 'CommandCopy.svg', tip: 'Copy', cmd: MenuBannerCommand.Copy},\n\t\t{icon: 'CommandCut.svg', tip: 'Cut', cmd: MenuBannerCommand.Cut},\n\t\t{icon: 'CommandPaste.svg', tip: 'Paste', cmd: MenuBannerCommand.Paste},\n\t],\n\t[\n\t\t{icon: 'CommandViewDetail.svg', tip: 'Detail', cmd: MenuBannerCommand.ViewDetail},\n\t\t{icon: 'CommandViewCard.svg', tip: 'Cards', cmd: MenuBannerCommand.ViewCard},\n\t\t{icon: 'CommandZoomNormal.svg', tip: 'Zoom full', cmd: MenuBannerCommand.ZoomFull},\n\t\t{icon: 'CommandZoomIn.svg', tip: 'Zoom in', cmd: MenuBannerCommand.ZoomIn},\n\t\t{icon: 'CommandZoomOut.svg', tip: 'Zoom out', cmd: MenuBannerCommand.ZoomOut},\n\t],\n];\n\nenum CollectionPanelView\n{\n\tDetail,\n\tCard,\n}\n\nconst BG_NORMAL = '#E0E0E0';\nconst BG_SELECTED = '#B9CBFF';\nconst PAGE_SIZE = 100;\n\nexport class CollectionPanel extends MainPanel\n{\n\tprivate filename:string = null;\n\tprivate collection = new MixtureCollection();\n\tprivate curPage = 0;\n\tprivate pageBlock:number[][] = [];\n\tprivate isDirty = false;\n\n\tprivate banner:MenuBanner;\n\tprivate divMain:DOM;\n\tprivate divFooter:DOM;\n\tprivate policy = RenderPolicy.defaultColourOnWhite(20);\n\tprivate viewType = CollectionPanelView.Detail;\n\n\tprivate selected = -1;\n\tprivate mapMixDiv = new Map<number, DOM>(); // index-in-collection to rendered div\n\tprivate editor:EditMixtureDesktop = null; // when defined, refers to collection{selected}\n\n\t// ------------ public methods ------------\n\n\tconstructor(root:DOM, private proxyClip:ClipboardProxy, private proxyMenu:MenuProxy)\n\t{\n\t\tsuper(root);\n\n\t\tthis.banner = new MenuBanner(BANNER, (cmd:MenuBannerCommand) => this.menuAction(cmd));\n\n\t\tlet divFlex = dom('<div/>').appendTo(root).css({'display': 'flex'});\n\t\tdivFlex.css({'flex-direction': 'column', 'width': '100%', 'height': '100%'});\n\t\tlet divBanner = dom('<div/>').appendTo(divFlex).css({'flex-grow': '0'});\n\t\tthis.divMain = dom('<div/>').appendTo(divFlex).css({'flex-grow': '1', 'overflow-y': 'scroll'});\n\t\tthis.divFooter = dom('<div/>').appendTo(divFlex).css({'flex-grow': '0'});\n\n\t\tthis.banner.render(divBanner);\n\t\tthis.dividePages();\n\t\tthis.renderMain();\n\n\t\tthis.updateBanner();\n\t}\n\n\tpublic setCollection(collection:MixtureCollection):void\n\t{\n\t\tthis.collection = collection;\n\t\tthis.dividePages();\n\t\tthis.renderMain();\n\t}\n\n\tpublic loadFile(filename:string):void\n\t{\n\t\tif (!filename)\n\t\t{\n\t\t\tthis.setCollection(new MixtureCollection());\n\t\t\treturn;\n\t\t}\n\t\t/*if (!filename)\n\t\t{\n\t\t\tthis.editor.clearHistory();\n\t\t\tthis.editor.setMixture(new Mixture(), true, true);\n\t\t\tthis.updateTitle();\n\t\t\tthis.filename = null;\n\t\t\tthis.isDirty = false;\n\t\t\treturn;\n\t\t}*/\n\n\t\tfs.readFile(filename, 'utf-8', (err:any, data:string):void =>\n\t\t{\n\t\t\tif (err) throw err;\n\n\t\t\tlet collection:MixtureCollection;\n\t\t\ttry {collection = MixtureCollection.deserialise(data);}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tconsole.log('Invalid mixture collection file: ' + e + '\\n' + data);\n\t\t\t\talert('Not a valid mixture collection file.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.setCollection(collection);\n\t\t\tthis.filename = filename;\n\t\t\tthis.isDirty = false;\n\t\t\tthis.updateTitle();\n\t\t});\n\t}\n\n\tpublic menuAction(cmd:MenuBannerCommand):void\n\t{\n\t\tif (this.editor)\n\t\t{\n\t\t\tlet dlg = this.editor.compoundEditor();\n\t\t\tif (dlg)\n\t\t\t{\n\t\t\t\tif (cmd == MenuBannerCommand.Cut) dlg.actionCut();\n\t\t\t\telse if (cmd == MenuBannerCommand.Copy) dlg.actionCopy();\n\t\t\t\telse if (cmd == MenuBannerCommand.Paste) dlg.actionPaste();\n\t\t\t\telse if (cmd == MenuBannerCommand.Undo) dlg.actionUndo();\n\t\t\t\telse if (cmd == MenuBannerCommand.Redo) dlg.actionRedo();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this.editor.isReceivingCommands())\n\t\t\t{\n\t\t\t\t// certain common menu/shortcut commands are passed through to standard behaviour, the rest are stopped\n\t\t\t\tif ([MenuBannerCommand.Cut, MenuBannerCommand.Copy, MenuBannerCommand.Paste,\n\t\t\t\t\tMenuBannerCommand.Undo, MenuBannerCommand.Redo].indexOf(cmd) >= 0) document.execCommand(cmd);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tsuper.menuAction(cmd);\n\t}\n\n\tpublic customMenuAction(cmd:MenuBannerCommand):void\n\t{\n\t\tif (this.editor)\n\t\t{\n\t\t\t/* !! if (cmd == MenuBannerCommand.ExportSDF) this.actionExportSDF();\n\t\t\telse if (cmd == MenuBannerCommand.ExportSVG) this.actionFileExportSVG();\n\t\t\telse if (cmd == MenuBannerCommand.CreateMInChI) this.actionFileCreateMInChI();\n\t\t\telse*/ if (cmd == MenuBannerCommand.Undo) this.editor.performUndo();\n\t\t\telse if (cmd == MenuBannerCommand.Redo) this.editor.performRedo();\n\t\t\telse if (cmd == MenuBannerCommand.Cut) this.editor.clipboardCopy(true);\n\t\t\telse if (cmd == MenuBannerCommand.Copy) this.editor.clipboardCopy(false);\n\t\t\telse if (cmd == MenuBannerCommand.CopyBranch) this.editor.clipboardCopy(false, true);\n\t\t\telse if (cmd == MenuBannerCommand.Paste) this.editor.clipboardPaste();\n\t\t\telse if (cmd == MenuBannerCommand.EditStructure) this.editor.editStructure();\n\t\t\telse if (cmd == MenuBannerCommand.EditDetails) this.editor.editDetails();\n\t\t\telse if (cmd == MenuBannerCommand.Lookup) this.editor.lookupCurrent();\n\t\t\telse if (cmd == MenuBannerCommand.Delete) this.editor.deleteCurrent();\n\t\t\telse if (cmd == MenuBannerCommand.Append) this.editor.appendToCurrent();\n\t\t\telse if (cmd == MenuBannerCommand.Prepend) this.editor.prependBeforeCurrent();\n\t\t\telse if (cmd == MenuBannerCommand.MoveUp) this.editor.reorderCurrent(-1);\n\t\t\telse if (cmd == MenuBannerCommand.MoveDown) this.editor.reorderCurrent(1);\n\t\t\telse if (cmd == MenuBannerCommand.ZoomFull) this.editor.zoomFull();\n\t\t\telse if (cmd == MenuBannerCommand.ZoomNormal) this.editor.zoomFull(); // (same as full)\n\t\t\telse if (cmd == MenuBannerCommand.ZoomIn) this.editor.zoom(1.25);\n\t\t\telse if (cmd == MenuBannerCommand.ZoomOut) this.editor.zoom(0.8);\n\t\t\telse super.customMenuAction(cmd);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/*if (cmd == MenuBannerCommand.ExportSDF) this.actionExportSDF();\n\t\t\telse if (cmd == MenuBannerCommand.ExportSVG) this.actionFileExportSVG();\n\t\t\telse if (cmd == MenuBannerCommand.CreateMInChI) this.actionFileCreateMInChI();\n\t\t\telse*/ if (cmd == MenuBannerCommand.Cut) this.clipboardCopy(true);\n\t\t\telse if (cmd == MenuBannerCommand.Copy) this.clipboardCopy(false);\n\t\t\telse if (cmd == MenuBannerCommand.Paste) this.clipboardPaste();\n\t\t\telse if (cmd == MenuBannerCommand.EditDetails) this.editMixture();\n\t\t\telse if (cmd == MenuBannerCommand.Delete) this.deleteMixture();\n\t\t\telse if (cmd == MenuBannerCommand.Append) this.appendMixture();\n\t\t\telse if (cmd == MenuBannerCommand.Prepend) this.prependMixture();\n\t\t\telse if (cmd == MenuBannerCommand.MoveUp) this.reorderCurrent(-1);\n\t\t\telse if (cmd == MenuBannerCommand.MoveDown) this.reorderCurrent(1);\n\t\t\telse if (cmd == MenuBannerCommand.ZoomFull) this.zoomScale();\n\t\t\telse if (cmd == MenuBannerCommand.ZoomIn) this.zoomScale(1.25);\n\t\t\telse if (cmd == MenuBannerCommand.ZoomOut) this.zoomScale(0.8);\n\t\t\telse if (cmd == MenuBannerCommand.ViewDetail) this.changeView(cmd);\n\t\t\telse if (cmd == MenuBannerCommand.ViewCard) this.changeView(cmd);\n\t\t\telse super.customMenuAction(cmd);\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate renderMain():void\n\t{\n\t\tthis.divMain.empty();\n\t\tthis.divFooter.empty();\n\n\t\tthis.selected = -1;\n\t\tthis.mapMixDiv.clear();\n\n\t\tlet divContent = dom('<div/>').appendTo(this.divMain);\n\n\t\tif (this.viewType == CollectionPanelView.Card)\n\t\t{\n\t\t\tdivContent.css({'display': 'flex', 'flex-wrap': 'wrap'});\n\t\t\tdivContent.css({'justify-content': 'flex-start', 'align-items': 'flex-start'});\n\t\t}\n\n\t\t//for (let n = 0; n < this.collection.count; n++)\n\t\tfor (let idx of this.pageBlock[this.curPage])\n\t\t{\n\t\t\tlet div = this.createMixture(idx, this.collection.getMixture(idx)).appendTo(divContent);\n\t\t\tdiv.onClick(() => this.changeSelection(idx));\n\t\t\tdiv.onDblClick(() => this.editMixture());\n\t\t\tthis.mapMixDiv.set(idx, div);\n\t\t}\n\n\t\tlet npage = this.pageBlock.length;\n\t\tif (npage > 1)\n\t\t{\n\t\t\tthis.divFooter.css({'text-align': 'center', 'border-top': '1px solid #808080', 'background-color': 'white'});\n\n\t\t\tif (this.curPage > 0)\n\t\t\t{\n\t\t\t\tlet ahref = dom('<a/>').appendTo(this.divFooter).attr({'href': '#'});\n\t\t\t\tahref.setText('Previous');\n\t\t\t\tahref.onClick((event) =>\n\t\t\t\t{\n\t\t\t\t\tthis.curPage--;\n\t\t\t\t\tthis.renderMain();\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet showPages:number[] = [];\n\t\t\tfor (let n = Math.max(0, this.curPage - 5); n <= Math.min(npage - 1, this.curPage + 5); n++) showPages.push(n);\n\t\t\tif (Vec.first(showPages) != 0) showPages.unshift(0);\n\t\t\tif (Vec.last(showPages) != npage - 1) showPages.push(npage - 1);\n\n\t\t\tfor (let n = 0; n < showPages.length; n++)\n\t\t\t{\n\t\t\t\tlet page = showPages[n];\n\t\t\t\tif (n > 0 && page != showPages[n - 1] + 1) this.divFooter.appendText('...');\n\t\t\t\tif (page != this.curPage)\n\t\t\t\t{\n\t\t\t\t\tlet ahref = dom('<a/>').appendTo(this.divFooter).attr({'href': '#'});\n\t\t\t\t\tahref.setText(`${page + 1}`);\n\t\t\t\t\tahref.onClick((event) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.curPage = page;\n\t\t\t\t\t\tthis.renderMain();\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse this.divFooter.appendHTML(`<span>${page + 1}</span>`);\n\t\t\t}\n\n\t\t\tif (this.curPage < npage - 1)\n\t\t\t{\n\t\t\t\tlet ahref = dom('<a/>').appendTo(this.divFooter).attr({'href': '#'});\n\t\t\t\tahref.setText('Next');\n\t\t\t\tahref.onClick((event) =>\n\t\t\t\t{\n\t\t\t\t\tthis.curPage++;\n\t\t\t\t\tthis.renderMain();\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//this.divFooter.find('a,span').css({'margin-left': '0.25em', 'margin-right': '0.25em'});\n\t\t\tfor (let dom of this.divFooter.findAll('a,span')) dom.css({'margin-left': '0.25em', 'margin-right': '0.25em'});\n\n\t\t\tthis.divFooter.appendText(` (${this.collection.count})`);\n\t\t}\n\t}\n\n\tprivate dividePages():void\n\t{\n\t\tlet sz = this.collection.count;\n\t\tif (sz == 0)\n\t\t{\n\t\t\tthis.pageBlock = [[]];\n\t\t\tthis.curPage = 0;\n\t\t\treturn;\n\t\t}\n\n\t\tlet blk:number[] = [];\n\t\tthis.pageBlock = [blk];\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tif (blk.length >= PAGE_SIZE) this.pageBlock.push(blk = []);\n\t\t\tblk.push(n);\n\t\t}\n\n\t\tthis.curPage = Math.min(this.curPage, this.pageBlock.length - 1);\n\t}\n\n\tprivate createMixture(idx:number, mixture:Mixture):DOM\n\t{\n\t\tlet divOuter = dom('<div/>');\n\t\tif (this.viewType == CollectionPanelView.Detail)\n\t\t{\n\t\t\tdivOuter.css({'display': 'block'});\n\t\t}\n\t\telse // == CollectionPanelView.Card\n\t\t{\n\t\t\tdivOuter.css({'display': 'inline-block'});\n\t\t}\n\n\t\tlet divInner = dom('<div/>').appendTo(divOuter).css({'display': 'flex'});\n\t\tdivInner.css({'margin': '2px', 'padding': '2px', 'border-radius': '4px'});\n\t\tdivInner.css({'background-color': BG_NORMAL, 'border': '1px solid #808080'});\n\n\t\tlet measure = new OutlineMeasurement(0, 0, this.policy.data.pointScale);\n\t\tlet layout = new ArrangeMixture(mixture, measure, this.policy);\n\t\tlayout.arrange();\n\n\t\tlet gfx = new MetaVector();\n\t\tlet draw = new DrawMixture(layout, gfx);\n\t\tdraw.draw();\n\n\t\tlet tag = (idx + 1).toString(), fsz = 10, tpad = 2;\n\t\tlet wad = FontData.measureText(tag, fsz);\n\t\tgfx.drawRect(0, 0, wad[0] + 2 * tpad, wad[1] + 2 * tpad, MetaVector.NOCOLOUR, 0, 0x000000);\n\t\tgfx.drawText(0 + tpad, tpad, tag, fsz, 0xFFFFFF, TextAlign.Top | TextAlign.Left);\n\n\t\tgfx.normalise();\n\t\tlet wrapSVG = dom('<div/>').appendTo(divInner).css({'display': 'inline-block'});\n\t\tdom(gfx.createSVG()).appendTo(wrapSVG).css({'display': 'block'});\n\n\t\tif (this.viewType == CollectionPanelView.Detail) this.displayFields(dom('<div/>').appendTo(divInner), mixture);\n\n\t\treturn divInner;\n\t}\n\n\tprivate changeView(cmd:MenuBannerCommand):void\n\t{\n\t\tif (cmd == MenuBannerCommand.ViewDetail) this.viewType = CollectionPanelView.Detail;\n\t\telse if (cmd == MenuBannerCommand.ViewCard) this.viewType = CollectionPanelView.Card;\n\t\tthis.renderMain();\n\t}\n\n\tprivate changeSelection(idx:number):void\n\t{\n\t\tif (this.selected >= 0)\n\t\t{\n\t\t\tlet div = this.mapMixDiv.get(this.selected);\n\t\t\tif (div) div.css({'background-color': BG_NORMAL});\n\t\t}\n\t\tthis.selected = idx;\n\t\tif (idx >= 0)\n\t\t{\n\t\t\tlet div = this.mapMixDiv.get(idx);\n\t\t\tif (div) div.css({'background-color': BG_SELECTED});\n\t\t}\n\t}\n\n\tprotected actionFileOpen():void\n\t{\n\t\tlet params:OpenDialogOptions =\n\t\t{\n\t\t\t'title': 'Open Mixtures',\n\t\t\t'properties': ['openFile'],\n\t\t\t'filters':\n\t\t\t[\n\t\t\t\t{'name': 'Mixfile Collection', 'extensions': ['json']},\n\t\t\t\t{'name': 'Mixfile', 'extensions': ['mixfile']},\n\t\t\t]\n\t\t};\n\t\telectronDialog.showOpenDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tfor (let fn of value.filePaths)\n\t\t\t{\n\t\t\t\tif (fn.endsWith('.mixfile'))\n\t\t\t\t\topenNewWindow('MixturePanel', fn);\n\t\t\t\telse\n\t\t\t\t\topenNewWindow('CollectionPanel', fn);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected actionFileSave():void\n\t{\n\t\tif (this.editor)\n\t\t{\n\t\t\tthis.stopEdit();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.filename) {this.actionFileSaveAs(); return;}\n\n\t\tthis.saveFile(this.filename);\n\t\tthis.isDirty = false;\n\t\tthis.updateTitle();\n\t}\n\n\tprotected actionFileSaveAs():void\n\t{\n\t\tlet params:SaveDialogOptions =\n\t\t{\n\t\t\ttitle: 'Save Mixfile Collection',\n\t\t\t//defaultPath...\n\t\t\tfilters:\n\t\t\t[\n\t\t\t\t{name: 'Mixfile Collection', extensions: ['json']}\n\t\t\t]\n\t\t};\n\t\telectronDialog.showSaveDialog({}).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tthis.saveFile(value.filePath);\n\t\t\tthis.filename = value.filePath;\n\t\t\tthis.isDirty = false;\n\t\t\tthis.updateTitle();\n\t\t});\n\t}\n\n\tpublic saveFile(filename:string):void\n\t{\n\t\tlet content = this.collection.serialise();\n\n\t\tfs.writeFile(filename, content, (err:any):void =>\n\t\t{\n\t\t\tif (err) alert('Unable to save: ' + err);\n\t\t});\n\t}\n\n\tprivate updateTitle():void\n\t{\n\t\tif (this.filename == null) {document.title = 'Mixture Collection'; return;}\n\n\t\tlet slash = Math.max(this.filename.lastIndexOf('/'), this.filename.lastIndexOf('\\\\'));\n\t\tlet title = 'Mixture Collection - ' + this.filename.substring(slash + 1);\n\t\tif (this.isDirty) title += '*';\n\t\tdocument.title = title;\n\t}\n\n\tprivate updateBanner():void\n\t{\n\t\tlet isEditing = this.editor != null;\n\n\t\tthis.banner.activateButtons(\n\t\t{\n\t\t\t[MenuBannerCommand.EditStructure]: isEditing,\n\t\t\t[MenuBannerCommand.Lookup]: isEditing,\n\t\t\t[MenuBannerCommand.ExportSVG]: isEditing,\n\t\t\t[MenuBannerCommand.Undo]: isEditing,\n\t\t\t[MenuBannerCommand.Redo]: isEditing,\n\t\t\t[MenuBannerCommand.ViewDetail]: !isEditing,\n\t\t\t[MenuBannerCommand.ViewCard]: !isEditing,\n\t\t});\n\t}\n\n\tprivate scrollToIndex(idx:number):void\n\t{\n\t\tif (idx < 0) return;\n\t\tlet div = this.mapMixDiv.get(idx);\n\t\tif (div) this.divMain.el.scrollTop = div.offset().y - this.divMain.offset().y + this.divMain.el.scrollTop;\n\t}\n\n\tprivate editMixture():void\n\t{\n\t\tif (this.selected < 0) return;\n\n\t\tthis.editor = new EditMixtureDesktop(this.inchi, this.proxyClip, this.proxyMenu);\n\n\t\tthis.divMain.empty();\n\t\tthis.editor.render(this.divMain);\n\n\t\tthis.editor.setMixture(this.collection.getMixture(this.selected));\n\t\tthis.editor.setDirty(false);\n\t\tthis.updateBanner();\n\t}\n\n\tprivate stopEdit():void\n\t{\n\t\tif (!this.editor) return;\n\n\t\tlet idx = this.selected;\n\t\tif (this.editor.isDirty())\n\t\t{\n\t\t\tthis.collection.setMixture(idx, this.editor.getMixture());\n\t\t\tthis.isDirty = true;\n\t\t}\n\n\t\tthis.editor = null;\n\t\tthis.renderMain();\n\t\tthis.changeSelection(idx);\n\t\tthis.scrollToIndex(idx);\n\t\tthis.updateBanner();\n\t\tthis.updateTitle();\n\t}\n\n\tprivate clipboardCopy(withCut:boolean):void\n\t{\n\t\tlet idx = this.selected;\n\t\tif (idx < 0 || this.editor) return;\n\n\t\tlet str = this.collection.getMixture(idx).serialise();\n\t\tthis.proxyClip.setString(str);\n\n\t\tif (withCut)\n\t\t{\n\t\t\tthis.collection.deleteMixture(idx);\n\t\t\tthis.isDirty = true;\n\n\t\t\tlet top = this.divMain.el.scrollTop;\n\t\t\tthis.renderMain();\n\t\t\tthis.divMain.el.scrollTop = top;\n\t\t\tthis.updateBanner();\n\t\t\tthis.updateTitle();\n\t\t}\n\t}\n\n\tprivate clipboardPaste():void\n\t{\n\t\tlet mixture = Mixture.deserialise(this.proxyClip.getString());\n\t\tif (!mixture)\n\t\t{\n\t\t\talert('No mixture on clipboard.');\n\t\t\treturn;\n\t\t}\n\t\tthis.appendMixture(mixture);\n\t}\n\n\tprivate deleteMixture():void\n\t{\n\t\tlet idx = this.selected;\n\t\tif (idx < 0 || this.editor) return;\n\t\tthis.collection.deleteMixture(idx);\n\t\tthis.renderMain();\n\t\tif (idx < this.collection.count) this.scrollToIndex(idx);\n\n\t\tthis.isDirty = true;\n\t\tthis.updateTitle();\n\t}\n\n\tprivate appendMixture(mixture?:Mixture):void\n\t{\n\t\tif (!mixture) mixture = new Mixture();\n\n\t\tif (this.editor) return;\n\t\tlet idx:number;\n\t\tif (this.selected < 0)\n\t\t{\n\t\t\tidx = this.collection.appendMixture(mixture);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tidx = this.selected + 1;\n\t\t\tthis.collection.insertMixture(idx, mixture);\n\t\t}\n\t\tthis.dividePages();\n\t\tthis.renderMain();\n\t\tthis.changeSelection(idx);\n\t\tthis.scrollToIndex(idx);\n\n\t\tthis.isDirty = true;\n\t\tthis.updateTitle();\n\t}\n\n\tprivate prependMixture():void\n\t{\n\t\tif (this.editor) return;\n\t\tlet idx = Math.max(0, this.selected);\n\t\tthis.collection.insertMixture(idx, new Mixture());\n\t\tlet top = this.divMain.el.scrollTop;\n\t\tthis.renderMain();\n\t\tthis.changeSelection(idx);\n\t\tthis.divMain.el.scrollTop = top;\n\n\t\tthis.isDirty = true;\n\t\tthis.updateTitle();\n\t}\n\n\tprivate reorderCurrent(dir:number):void\n\t{\n\t\tlet idx = this.selected;\n\t\tif (idx < 0 || idx + dir < 0 || idx + dir >= this.collection.count || this.editor) return;\n\t\tthis.collection.swapMixtures(idx, idx + dir);\n\t\tlet top = this.divMain.el.scrollTop;\n\t\tthis.renderMain();\n\t\tthis.changeSelection(idx + dir);\n\t\tthis.divMain.el.scrollTop = top;\n\n\t\tthis.isDirty = true;\n\t\tthis.updateTitle();\n\t}\n\n\t// alter zoom level by a factor, or reset (null)\n\tpublic zoomScale(scale?:number):void\n\t{\n\t\t// TODO\n\t}\n\n\t// render other fields that are encoded into the root branch of the mixture\n\tprivate displayFields(domParent:DOM, mixture:Mixture):void\n\t{\n\t\tlet items:[string, string][] = [];\n\t\tlet root = mixture.mixfile as Record<string, any>;\n\t\tconst SKIP = ['name', 'molfile', 'quantity', 'ratio', 'units', 'relation', 'mixfileVersion'];\n\t\tfor (let key in root) if (!SKIP.includes(key))\n\t\t{\n\t\t\tlet val = root[key];\n\t\t\tif (typeof val != 'string' && typeof val != 'number') continue;\n\t\t\titems.push([key, val.toString()]);\n\t\t}\n\n\t\tif (items.length == 0) return;\n\n\t\titems.sort((i1, i2) => i1[0].localeCompare(i2[0]));\n\n\t\tdomParent.css({'padding-left': '0.5em'});\n\n\t\tlet flex = dom('<div/>').appendTo(domParent).css({'display': 'flex'});\n\t\tflex.css({'flex-direction': 'row', 'flex-wrap': 'wrap', 'justify-content': 'flex-start', 'align-items': 'flex-start'});\n\n\t\tfor (let [title, label] of items)\n\t\t{\n\t\t\tlet div = dom('<div/>').appendTo(flex).css({'white-space': 'nowrap', 'margin': '0 0.2em 0.2em 0'});\n\t\t\tlet divTitle = dom('<div/>').appendTo(div).css({'display': 'inline-block', 'padding': '0.2em', 'background-color': '#C0C0C0', 'border': '1px solid black'});\n\t\t\tlet divLabel = dom('<div/>').appendTo(div).css({'display': 'inline-block', 'padding': '0.2em', 'background-color': '#F8F8F8', 'border': '1px solid black'});\n\n\t\t\tdivTitle.css({'border-right': 'none'});\n\t\t\tdivTitle.css({'border-radius': '0.2em 0 0 0.2em'});\n\t\t\tdivLabel.css({'border-radius': '0 0.2em 0.2em 0'});\n\n\t\t\tdivTitle.setText(title);\n\t\t\tdivLabel.setText(label);\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {MainPanel} from './MainPanel';\nimport {MixturePanel} from './MixturePanel';\nimport {DOM} from 'webmolkit/util/dom';\nimport {initWebMolKit, Theme} from 'webmolkit/util/Theme';\nimport {OntologyTree} from 'webmolkit/data/OntologyTree';\nimport {ClipboardProxy} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy, MenuProxyContext} from 'webmolkit/ui/MenuProxy';\nimport * as path from 'path';\nimport * as process from 'process';\nimport {ipcRenderer} from 'electron';\nimport {Menu as ElectronMenu, MenuItem as ElectronMenuItem, clipboard as electronClipboard, getCurrentWindow} from '@electron/remote';\nimport {CollectionPanel} from './CollectionPanel';\nimport {readTextURL} from 'webmolkit/util/util';\n\nexport let ON_DESKTOP = false; // by default assume it's running in a regular web page; switch to true if it's the locally\n\t\t\t\t\t\t\t   // executed window version\nexport function setOnDesktop(onDesktop:boolean):void {ON_DESKTOP = onDesktop;}\n\n/*\n\tStartup: gets the ball rolling, and provide some high level window handling.\n*/\n\nexport async function runMixfileEditor(resURL:string, rootID:string):Promise<void>\n{\n\tlet root = DOM.find('#' + rootID);\n\n\tON_DESKTOP = true;\n\tinitWebMolKit(resURL);\n\tawait OntologyTree.init();\n\tlet metacategory = await readTextURL(resURL + '/data/ontology/metacategory.onto');\n\tOntologyTree.main.loadFromString('metacategory', metacategory);\n\n\tprocess.env['ELECTRON_DISABLE_SECURITY_WARNINGS'] = 'true';\n\n\tlet url = window.location.href.substring(0, window.location.href.lastIndexOf('/'));\n\tTheme.RESOURCE_URL = path.normalize(url + '/res');\n\n\t// unpack web params: if present, they determine where to go from here\n \tlet params = window.location.search.substring(1).split('&');\n\tlet panelClass:string = null; // default is straight to molecule editing\n\tlet filename:string = null;\n\tfor (let p of params)\n\t{\n\t\tlet eq = p.indexOf('=');\n\t\tif (eq < 0) continue;\n\t\tlet key = p.substring(0, eq), val = decodeURIComponent(p.substring(eq + 1));\n\t\tif (key == 'panel') panelClass = val;\n\t\telse if (key == 'fn') filename = val;\n\t}\n\n\tif (!panelClass && filename && filename.endsWith('.json')) panelClass = 'CollectionPanel';\n\n\tlet proxyClip = new ClipboardProxy();\n\tproxyClip.getString = ():string => electronClipboard.readText();\n\tproxyClip.setString = (str:string):void => electronClipboard.writeText(str);\n\tproxyClip.setHTML = (html:string):void => electronClipboard.writeHTML(html);\n\tproxyClip.canSetHTML = ():boolean => true;\n\tproxyClip.canAlwaysGet = ():boolean => true;\n\n\tlet proxyMenu = new MenuProxy();\n\tproxyMenu.hasContextMenu = () => true;\n\tproxyMenu.openContextMenu = (menuItems:MenuProxyContext[], event:MouseEvent) =>\n\t{\n\t\tlet populate = (emenu:Electron.Menu, itemList:MenuProxyContext[]):void =>\n\t\t{\n\t\t\tfor (let item of itemList)\n\t\t\t{\n\t\t\t\tif (!item || !item.label) emenu.append(new ElectronMenuItem({type: 'separator'}));\n\t\t\t\telse if (item.click) emenu.append(new ElectronMenuItem(item));\n\t\t\t\telse if (item.subMenu)\n\t\t\t\t{\n\t\t\t\t\tlet subMenu = new ElectronMenu();\n\t\t\t\t\tpopulate(subMenu, item.subMenu);\n\t\t\t\t\temenu.append(new ElectronMenuItem({label: item.label, submenu: subMenu}));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tlet menu = new ElectronMenu();\n\t\tpopulate(menu, menuItems);\n\n\t\tmenu.popup({window: getCurrentWindow()});\n\t};\n\n\tlet main:MainPanel;\n\tif (!panelClass || panelClass == 'MixturePanel')\n\t{\n\t\tmain = new MixturePanel(root, proxyClip, proxyMenu);\n\t}\n\telse if (panelClass == 'CollectionPanel')\n\t{\n\t\tmain = new CollectionPanel(root, proxyClip, proxyMenu);\n\t}\n\n\tmain.loadFile(filename);\n\n\tipcRenderer.on('menuAction', (event, args) => main.menuAction(args));\n}\n\nexport function openNewWindow(panelClass:string, filename?:string, options:Record<string, string> = {}):void\n{\n\tlet args:Record<string, string> = {...options};\n\tif (panelClass) args['panelClass'] = panelClass;\n\tif (filename) args['filename'] = filename;\n\tipcRenderer.send('openWindow', args);\n}\n"],"names":["Object","defineProperty","exports","value","getElectronBinding","name","process","_linkedBinding","electronBinding","_a","_b","browserModuleNames","commonModuleNames","get_electron_binding_1","concat","features","isDesktopCapturerEnabled","call","push","isViewApiEnabled","deserialize","serialize","isSerializableObject","isPromise","electron_1","val","then","Function","constructor","reject","resolve","serializableTypes","Boolean","Number","String","Date","Error","RegExp","ArrayBuffer","isView","some","type","objectMap","source","mapper","targetEntries","entries","map","key","fromEntries","image","representations","scaleFactors","getScaleFactors","length","scaleFactor","size","getSize","buffer","toBitmap","dataURL","toDataURL","__ELECTRON_SERIALIZED_NativeImage__","serializeNativeImage","Array","isArray","nativeImage","createEmpty","width","height","addRepresentation","rep","deserializeNativeImage","CallbacksRegistry","this","nextId","callbacks","callbackIds","WeakMap","locationInfo","add","callback","id","get","set","regexp","stackString","stack","filenameAndLine","match","exec","location","includes","ref","getLocation","apply","args","global","remove","delete","__createBinding","create","o","m","k","k2","undefined","enumerable","__exportStar","p","prototype","hasOwnProperty","createFunctionWithReturnValue","getGlobal","getCurrentWebContents","getCurrentWindow","getBuiltin","callbacks_registry_1","type_utils_1","module_names_1","Promise","callbacksRegistry","remoteObjectCache","Map","finalizationRegistry","FinalizationRegistry","deref","ipcRenderer","send","contextId","electronIds","isReturnValue","WeakSet","v8Util","getHiddenValue","getContextId","on","IS_REMOTE_PROXY","Symbol","wrapArgs","visited","Set","valueToMeta","has","meta","Buffer","onFulfilled","onRejected","members","prop","setObjectMembers","object","metaId","member","descriptor","remoteMemberFunction","command","metaToValue","sendSync","descriptorFunction","proxyFunctionProperties","configurable","writable","setObjectPrototype","proto","setPrototypeOf","loaded","loadRemoteProperties","Proxy","target","property","bind","ownKeys","getOwnPropertyNames","getOwnPropertyDescriptor","from","byteOffset","byteLength","metaToError","ret","cached","getCachedRemoteObject","remoteFunction","wr","WeakRef","register","setCachedRemoteObject","obj","handleMessage","channel","handler","event","passedContextId","senderId","console","error","enableStacks","argv","getCurrentStack","captureStackTrace","require","module","returnValue","func","forEach","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","r","toStringTag","isBlank","arr","notBlank","safeArray","len","arrayLength","anyTrue","v","allTrue","anyFalse","allFalse","iterAnyTrue","iterAllTrue","iterAnyFalse","iterAllFalse","swap","idx1","idx2","duplicate","slice","append","item","prepend","unshift","arr1","arr2","idx","splice","flatten","mtx","vec","transpose","sz1","sz2","anyArray","j","i","equals","n","equivalent","len1","compareTo","sz","Math","max","booleanArray","fill","numberArray","stringArray","genericArray","genericBlankArrays","funcArray","first","last","min","MAX_VALUE","MIN_VALUE","idxMin","idxMax","range","lo","hi","reverse","identity0","identity1","identityN","start","notMask","mask","idxGet","maskCount","c","maskIdx","idxMask","maskMap","pos","maskGet","maskEqual","sum","t","sub","mul","neg","setTo","addTo","mulBy","addToArray","subFromArray","mulByArray","divByArray","idxSort","sort","a","b","v1","v2","sorted","sortedUnique","unique","uniqueUnstable","uniqueStable","maskUnique","idxUnique","exclude","excl","count","indexOf","Permutation","parityPerms","parityIdentity","parityOrder","src","smallPermutation","PERM1","PERM2","PERM3","PERM4","allPermutations","SMALL_PERMS","PERM_CACHE","MAX_CACHE","nperms","perms","nonunique","Matrix","s","A","fromArray","clone","numRows","numCols","X","C","norm1","f","abs","normInf","uminus","plus","B","plusEquals","minus","minusEquals","arrayTimes","arrayTimesEquals","arrayRightDivide","arrayRightDivideEquals","arrayLeftDivide","arrayLeftDivideEquals","scalarTimes","scalarTimesEquals","times","Bcolj","Arowi","rank","SingularValueDecomposition","cond","trace","identity","toString","lines","row","JSON","stringify","join","nu","U","V","e","work","nct","nrt","hypot","pp","iter","eps","pow","tiny","kase","ks","cs","sn","scale","sp","spm1","epm1","sk","ek","shift","sqrt","g","getU","getV","getSingularValues","getS","S","norm2","tol","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","result","done","safeInt","str","def","startsWith","parseInt","substring","isNaN","newElement","parent","tag","attr","domNew","domLegacy","el","formatDouble","sigfig","toPrecision","endsWith","colourCode","col","hex","colourAlpha","transp","ONE_OVER_255","colourCanvas","nodeText","node","firstChild","nodeType","nodeValue","nextSibling","container","offset","pageX","x","pageY","y","dom","w","h","css","norm_xy","dx","dy","norm2_xyz","dz","signum","sqr","invZ","fltEqual","realEqual","TWOPI","PI","INV_TWOPI","DEGRAD","RADDEG","th","ceil","angleDiff","th1","th2","theta","minArray","maxArray","findNode","nodeName","findNodes","list","pathRoundedRect","x1","y1","x2","y2","rad","path","Path2D","moveTo","quadraticCurveTo","lineTo","closePath","drawLine","ctx","beginPath","stroke","fontSansSerif","ascent","pixelDensity","window","devicePixelRatio","data","deepClone","escapeHTML","text","replace","KeyCode","staticScrollerSize","EPSILON","Triangulation2D","px","py","numTriangles","edgeStack","hull","maxTriangles","triangles","halfedges","hashSize","hullPrev","hullNext","hullTri","hullHash","ids","dists","update","trimConcave","threshold","threshSq","tri","edge","uniqueEdges","edgeCount","ntri","c1","c2","c3","i1","i2","i3","repTri","repEdge","traceOutline","e1","e2","e3","edgePairs","entry","floor","isz","idxMap","g1","g2","sequence","minX","minY","maxX","maxY","centreX","centreY","i0","minDist","POSITIVE_INFINITY","i0x","i0y","i1x","i1y","minRadius","circumRadius","i2x","i2y","isFinite","quicksort","d0","NEGATIVE_INFINITY","orient","pickCircumCentre","hullStart","hullSize","hashKey","addTriangle","xp","yp","q","legalise","pseudoAngle","ar","a0","b0","al","bl","p0","pr","pl","p1","inCircle","hbl","link","br","orientIfSure","rx","ry","qx","qy","l","ax","ay","bx","by","cx","cy","ex","ey","fx","fy","bp","cp","cl","left","right","temp","tempDist","median","GeomUtil","pointInPolygon","phase","areLinesParallel","x3","y3","x4","y4","dxa","dya","dxb","dyb","xmajorA","EPS","lineIntersect","u","isPointOnLineSeg","pointLineDistance","pointLineSegDistance","doLineSegsIntersect","x4_x3","y4_y3","x2_x1","y2_y1","x1_x3","y1_y3","nx","ny","dn","rectsIntersect","w1","h1","w2","h2","sortAngles","idxSortAngles","pop","uniqueAngles","ang","thetaObtuse","dth","emergentAngle","bottom","behind","delta","dotProduct","crossProduct","affineTranslate","affineMirror","xaxis","yaxis","affineScale","sx","sy","affineRotate","cos","sin","affineCompose","tfm","Acol","Brow","applyAffine","applyAffineArray","isAffineMirror","magnitude2","magnitude","dist2","dist","normalise","dsq","inv","normalised","acuteAngle","mag1","mag2","cosTheta","acos","arcControlPoints","t1x","t1y","t2x","t2y","tx","ty","D","createBezierEllipse","rw","rh","nseg","sinTheta","incrAlpha","alpha","cosAlpha","sinAlpha","npt","n1","n2","n3","n4","ctrl","fitCircle","fitEllipse","bestW","bestH","bestScore","shrinkToFit","whs","dmin","invW2","invH2","whsX","whsY","anything","superimpose","thetaA","atan2","rot00","rot01","rot10","rot11","acx","acy","invsz","bcx","bcy","mtxA","mtxB","cov","svd","rotate","convexHull","flatness","algo","QuickHull","hullX","hullY","outlinePolygon","diameter","del","concave","hsz","al1","al2","quickHull","furthestPoint","distance","ux","uy","maxDist","maxPos","Pos","zero","other","scaleBy","mag","offsetBy","withScaleBy","withOffsetBy","Size","isZero","fitInto","maxW","maxH","Box","fromBounds","fromSize","fromOval","oval","getPos","setPos","setSize","midX","midY","area","grow","withGrow","intersects","intersection","x5","y5","x6","y6","contains","union","isEmpty","notEmpty","Oval","fromBox","box","setCentre","setRadius","Line","fromPos","pos1","pos2","setPos1","setPos2","XML","parseXML","strXML","xmlDoc","customParser","parseFromString","DOMParser","doc","customSerial","serializeToString","documentElement","XMLSerializer","toPrettyString","xslt","xsltDoc","xsltProc","XSLTProcessor","importStylesheet","resultDoc","transformToDocument","child","childNodes","childText","tagName","findElement","appendElement","ownerDocument","createElement","appendChild","appendElementAfter","presib","postsib","parentNode","insertBefore","appendText","isCDATA","createCDATASection","createTextNode","createTextChild","textContent","setText","removeChild","findChildElements","childElements","DOM","parse","jquery","elHTML","elInput","elCanvas","xhtml","xml","html","outerHTML","template","document","innerHTML","content","find","selector","querySelector","findAll","nodeList","querySelectorAll","domList","parentElement","ancestor","closest","children","firstElementChild","nextElementSibling","toLocaleLowerCase","exists","isVisible","offsetWidth","offsetHeight","getClientRects","appendTo","prependTo","insertAfter","before","empty","getHTML","setHTML","appendHTML","insertAdjacentHTML","getText","getValue","setValue","getCSS","style","getPropertyValue","setCSS","setProperty","dict","getAttr","hasAttribute","getAttribute","setAttr","setAttribute","addClass","clsnames","cls","split","classList","removeClass","hasClass","clsname","setClass","flag","toggleClass","rect","getBoundingClientRect","win","defaultView","pageXOffset","top","pageYOffset","setBoundaryPixels","setSizePixels","hasFocus","activeElement","grabFocus","delay","setTimeout","focus","removeEvent","removeEventListener","onKeyDown","addEventListener","onKeyUp","onKeyPress","onScroll","onWheel","onClick","onContextMenu","onDblClick","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","onMouseMove","onMouseOver","onChange","onInput","onTouchStart","onTouchMove","onTouchCancel","onTouchEnd","Theme","BASE_URL","RESOURCE_URL","foreground","background","lowlight","lowlightEdge1","lowlightEdge2","highlight","highlightEdge1","highlightEdge2","cssTagsInstalled","hasInlineCSS","head","globalTooltip","globalPopWatermark","addTooltip","bodyHTML","titleHTML","widget","tooltip","Tooltip","stop","clearTooltip","domTooltip","watermark","bodyCallback","raise","avoid","class","body","sanity","zindex","zIndex","div","hasTitle","hasBody","winW","innerWidth","winH","innerHeight","boundDiv","wx1","wy1","wx2","wy2","popW","popH","posX","posY","setPosition","checkParent","MenuBannerCommand","MenuBanner","commands","callbackAction","callbackRefocus","mapDiv","mapSVG","mapActive","selected","render","domParent","divFlex","blk","divBlk","btn","svg","createCommand","cmd","activateButtons","active","addSelected","removeSelected","iconPosition","offsetLeft","offsetTop","icon","lastIndexOf","imgURL","tip","Chemistry","ELEMENTS","ELEMENT_GROUPS","ELEMENT_ROWS","ELEMENT_BLOCKS","ELEMENT_VALENCE","ELEMENT_BONDING","ELEMENT_SHELL","NATURAL_ATOMIC_WEIGHTS","ELEMENT_H","ELEMENT_He","ELEMENT_Li","ELEMENT_Be","ELEMENT_B","ELEMENT_C","ELEMENT_N","ELEMENT_O","ELEMENT_F","ELEMENT_Ne","ELEMENT_Na","ELEMENT_Mg","ELEMENT_Al","ELEMENT_Si","ELEMENT_P","ELEMENT_S","ELEMENT_Cl","ELEMENT_Ar","ELEMENT_K","ELEMENT_Ca","ELEMENT_Sc","ELEMENT_Ti","ELEMENT_V","ELEMENT_Cr","ELEMENT_Mn","ELEMENT_Fe","ELEMENT_Co","ELEMENT_Ni","ELEMENT_Cu","ELEMENT_Zn","ELEMENT_Ga","ELEMENT_Ge","ELEMENT_As","ELEMENT_Se","ELEMENT_Br","ELEMENT_Kr","ELEMENT_Rb","ELEMENT_Sr","ELEMENT_Y","ELEMENT_Zr","ELEMENT_Nb","ELEMENT_Mo","ELEMENT_Tc","ELEMENT_Ru","ELEMENT_Rh","ELEMENT_Pd","ELEMENT_Ag","ELEMENT_Cd","ELEMENT_In","ELEMENT_Sn","ELEMENT_Sb","ELEMENT_Te","ELEMENT_I","ELEMENT_Xe","ELEMENT_Cs","ELEMENT_Ba","ELEMENT_La","ELEMENT_Ce","ELEMENT_Pr","ELEMENT_Nd","ELEMENT_Pm","ELEMENT_Sm","ELEMENT_Eu","ELEMENT_Gd","ELEMENT_Tb","ELEMENT_Dy","ELEMENT_Ho","ELEMENT_Er","ELEMENT_Tm","ELEMENT_Yb","ELEMENT_Lu","ELEMENT_Hf","ELEMENT_Ta","ELEMENT_W","ELEMENT_Re","ELEMENT_Os","ELEMENT_Ir","ELEMENT_Pt","ELEMENT_Au","ELEMENT_Hg","ELEMENT_Tl","ELEMENT_Pb","ELEMENT_Bi","ELEMENT_Po","ELEMENT_At","ELEMENT_Rn","ELEMENT_Fr","ELEMENT_Ra","ELEMENT_Ac","ELEMENT_Th","ELEMENT_Pa","ELEMENT_U","ELEMENT_Np","ELEMENT_Pu","ELEMENT_Am","ELEMENT_Cm","ELEMENT_Bk","ELEMENT_Cf","ELEMENT_Es","ELEMENT_Fm","ELEMENT_Md","ELEMENT_No","ELEMENT_Lr","ELEMENT_Rf","ELEMENT_Db","ELEMENT_Sg","ELEMENT_Bh","ELEMENT_Hs","ELEMENT_Mt","ELEMENT_Ds","ELEMENT_Rg","ELEMENT_Cn","Graph","edge1","edge2","nbrs","indices","labels","props","nbr","fromMolecule","mol","numAtoms","numBonds","bfr","bondFrom","bto","bondTo","fromMoleculeMask","adj","atomAdjList","fromNeighbours","buff","numNodes","numEdges","getEdge","getEdges","getIndex","setIndex","getLabel","setLabel","lbl","getProperty","prp","addNode","hasEdge","node1","node2","addEdge","removeEdge","isolateNode","keepNodesMask","oldsz","newsz","newmap","newnbrs","keepNodesIndex","removeNodesMask","removeNodesIndex","subgraphIndex","nsz","subgraphMask","calculateComponents","cc","high","calculateComponentGroups","grp","calculateRingBlocks","rblk","plen","numVisited","current","back","nextID","calculateRingBlockGroups","cap","findRingsOfSize","num","rings","newRings","findRingsOfSizeMask","recursiveRingFind","calculateBFS","curnum","lsz","calculateGravity","wght","wmod","psize","capacity","fnd","newPath","fp","flip","look","same","ResonanceRemover","resBonds","atomHyd","maxIter","bondOrders","tolerant","bondOrder","perform","atomHExplicit","correctInputMask","processComponent","na","nb","atno","atomicNumber","atomCharge","atomAdjCount","nodes","findBond","optionalH","Molecule","HEXPLICIT_UNKNOWN","atomElement","gravity","bsz","bgrav","bidx","seq","paths","resultCount","definiteMatch","p2","validPath","count1","count2","a1","a2","BONDARTIFACT_EXTRA_RESPATH","BONDARTIFACT_EXTRA_RESRING","BONDARTIFACT_EXTRA_ARENE","BondArtifact","resPaths","resRings","arenes","atomExtra","appendResPath","appendResRing","appendArene","res","atoms","pack","pathify","centre","getPathBlocks","keys","getRingBlocks","getAreneBlocks","getResPaths","getResRings","getArenes","rewriteMolecule","extra","modified","setAtomExtra","ring","arene","atom","harmoniseNumbering","blocks","stashPaths","clear","nextIdentifier","stashRings","stashArenes","createPath","alreadyExists","atomsAsPath","createRing","atomsAsRing","createArene","atomsAsArene","removeArtifact","pick","overlap","removeAll","bits","requireRing","values","areneAtoms","best","bsum","inkeys","DataSheetColumn","ForeignMoleculeTransient","DataSheet","title","description","colData","rowData","numExtens","extData","withRows","inRow","outRow","cloneMask","colMask","rowMask","inclExtn","outCols","outRows","getData","numExtensions","getExtName","getExtType","getExtData","setExtName","setExtType","setExtData","appendExtension","insertExtension","deleteExtension","colName","colType","colDescr","descr","isNull","findColByName","notNull","ct","getMolecule","getString","getExtend","getObject","datum","fromString","getMoleculeClone","getMoleculeBlank","getInteger","getReal","getBoolean","setToNull","setObject","setMolecule","setString","setInteger","setReal","setBoolean","setExtend","isEqualMolecule","isEqualString","isEqualInteger","isEqualReal","isEqualBoolean","appendColumn","insertColumn","deleteColumn","changeColumnName","changeColumnType","newType","oldType","incompatible","parseFloat","toLowerCase","ensureColumn","reorderColumns","order","appendRow","appendRowFrom","srcDS","insertRow","deleteRow","deleteAllRows","moveRowUp","moveRowDown","swapRows","row1","row2","exciseSingleRow","newData","colIsPrimitive","firstColOfType","copyCell","toRow","toCol","fromDS","fromRow","fromCol","convertType","fromType","toType","ft","tt","safeFloat","round","toInt","toReal","ForeignMolecule","noteAromaticAtoms","atomTransient","AtomAromatic","noteAromaticBonds","bondTransient","BondAromatic","noteZeroDativeBonds","BondZeroDative","noteZeroHydrogenBonds","BondZeroHydrogen","markExplicitValence","valence","trans","filter","tr","AtomExplicitValence","setAtomTransient","noteExplicitValence","markSgroupMultiAttach","keyval","idxHigh","AtomSgroupMultiAttach","payload","hasAnySgroupMultiAttach","noteAllSgroupMultiAttach","eq","sgm","markSgroupMultiRepeat","mult","AtomSgroupMultiRepeat","comma","unit","hasAnySgroupMultiRepeat","noteAllSgroupMultiRepeat","mr","markSgroupData","query","AtomSgroupData","hasAnySgroupData","noteAllSgroupData","sd","POLYMERBLOCK_EXTRA_POLYMER","PolymerBlockConnectivity","QueryTypeAtom","QueryTypeBond","PolymerBlockUnit","connect","bondConn","atomName","bondIncl","bondExcl","dup","PolymerBlock","units","blockAtoms","appendBlock","getIDList","getUnit","getUnits","purgeExtraFields","writeUnit","allKeys","removeUnit","pfx","bondExtra","setBondExtra","createUnit","hasPolymerExtensions","getPolymerExtensions","polext","removePolymerExtensions","nattach","HeadToTail","HeadToHead","Random","hasOuter","subBits","in1","in2","bonds","formatBlockAtom","nbonds","names","formatBlockBond","bond","idxConn","incl","codeAtom","codeBond","QueryUtil","hasAnyQueryAtom","hasAnyQueryBond","hasQueryAtom","hasQueryBond","deleteQueryAtom","deleteQueryBond","deleteQueryAtomAll","xtra","deleteQueryBondAll","queryAtomString","queryAtomStringList","queryBondString","setQueryAtom","setQueryAtomList","setQueryBond","queryAtomCharges","parseIntegers","Charges","queryAtomAromatic","parseBoolean","Aromatic","queryAtomUnsaturated","Unsaturated","queryAtomElements","parseStrings","Elements","queryAtomElementsNot","ElementsNot","queryAtomRingSizes","RingSizes","queryAtomRingSizesNot","RingSizesNot","queryAtomRingBlock","RingBlock","queryAtomNumRings","NumRings","queryAtomRingBonds","RingBonds","queryAtomAdjacency","Adjacency","queryAtomBondSums","BondSums","queryAtomValences","Valences","queryAtomHydrogens","Hydrogens","queryAtomIsotope","Isotopes","queryAtomSubFrags","parseMolecules","SubFrags","queryAtomSubFragsNot","SubFragsNot","queryBondRingSizes","queryBondRingSizesNot","queryBondRingBlock","queryBondNumRings","queryBondOrders","Orders","setQueryAtomCharges","formatIntegers","setQueryAtomAromatic","formatBoolean","setQueryAtomUnsaturated","setQueryAtomElements","formatStrings","setQueryAtomElementsNot","setQueryAtomRingSizes","setQueryAtomRingSizesNot","setQueryAtomRingBlock","setQueryAtomNumRings","setQueryAtomRingBonds","setQueryAtomAdjacency","setQueryAtomBondSums","setQueryAtomValences","setQueryAtomHydrogens","setQueryAtomIsotope","setQueryAtomSubFrags","formatMolecules","setQueryAtomSubFragsNot","setQueryBondRingSizes","setQueryBondRingSizesNot","setQueryBondRingBlock","setQueryBondNumRings","setQueryBondOrders","strlist","intlist","mols","molstr","MolUtil","STEREOGROUP_EXTRA_RACEMIC","STEREOGROUP_EXTRA_RELATIVE","StereoGroup","hasStereoGroups","chiRac","chiRel","atomHasWedge","getRacemicGroups","getRelativeGroups","getRacemicAtoms","getRelativeAtoms","getRacemicGroupAtoms","getRelativeGroupAtoms","groups","stash","createRacemic","createRelative","removeRacemic","removeRelative","is3D","hasWedge","atomAdjBonds","bt","bondType","BONDTYPE_UNKNOWN","BONDTYPE_INCLINED","BONDTYPE_DECLINED","MDLMOL_VALENCE","MDLMOLReader","strData","parseHeader","parseExtended","allowV3000","considerRescale","keepAromatic","keepParity","keepQuery","molName","overallStereoAbsolute","groupAttachAny","groupAttachAll","groupStereoAbsolute","groupStereoRacemic","groupStereoRelative","groupLinkNodes","groupMixtures","scsrTemplates","parseCTAB","nextLine","keepTransient","line","version","parseV3000","trim","z","chg","stereo","hyd","mapnum","addAtom","setAtomZ","setIs3D","setAtomMapNum","AtomChiralMDLOdd","AtomChiralMDLEven","AtomChiralMDLRacemic","BONDTYPE_NORMAL","addBond","appendBondTransient","setBondTransient","superatoms","mixtures","anum","setAtomElement","stype","index","bracketType","mix","sup","connectType","minRep","maxRep","nbr1","nbr2","logic","charAt","elements","setAtomCharge","setAtomUnpaired","setAtomIsotope","setAtomHExplicit","setBondOrder","countRingBonds","countSubstitutions","postFix","artifacts","applyPolymerBlock","applySuperAtom","hasAbbrev","AtomSCSRClass","atomZ","options","hcount","atomHydrogens","usedValence","unp","atomUnpaired","CoordUtil","normaliseBondDistances","derez","Section","inCTAB","inTemplate","section","lineCounts","lineAtom","lineBond","lineColl","lineSgroup","asdrawnRBC","asdrawnSUB","templateBlocks","ERRPFX","fullLine","Atom","Bond","Coll","SGroup","splitWithQuotes","counts","atomBits","bondBits","parseQueryAtomList","spin","appendAtomTransient","AtomSCSRSeqID","attch","unpackStrings","AtomSCSRAttchOrd","rbc","endpts","attach","dir","setBondType","unpackList","stereoGroup","withoutQuotes","templateClass","natReplace","pts","attachPoints","parseV3000Template","label","not","residual","mod","abvAtom","convertToAbbrevIndex","subsumed","poly","b1","b2","b3","b4","header","mdl","segments","seg","depth","quote","ch","bit","bondInRing","MDLSDFReader","ds","upcastColumns","parseStream","upcastStringColumns","rn","str1","str3","cn","allnull","allreal","allint","allbool","lc","int","VPFX","MDLMOLWriter","includeHeader","includeCounts","includeEnd","enhancedFields","chargeSeparate","abbrevSgroups","polymerBlocks","sgroups","write","writeCTAB","writeV3000","writeCTAB3000","writeEither","triggered","getResult","hasAnyAbbrev","partialAbbrevExpansion","expandAbbrevs","prepareSgroups","atomList1","atomList2","intrpad","elementAtomicNumber","pad","chgidx","chgval","radidx","radval","isoidx","isoval","rgpidx","rgpval","hydidx","hydval","zboidx","zboval","rbcidx","rbcval","subidx","subval","unsidx","unsval","atomX","atomY","rpad","toFixed","atomMapNum","qhyd","mdlValence","atomIsotope","ISOTOPE_NATURAL","qrbc","qsub","quns","maskArom","qbond","writeMBlockPair","writeMBlockFlat","inSgroup","sg","sidx","encodePolymerBlocks","token","writeMBlockFlatIdxFirst","zeroVal","marked","chgmod","bondSum","nativeVal","optVal","frag","getAbbrev","clearAbbrev","setAbbrev","expandOneAbbrev","ma","dat","bestIdx","bestSize","MAX_SAFE_INTEGER","skip","polymers","fl1","fl2","bcrs","sgroupText","populateV3000Sgroups","qel","isotope","packV3000Strings","maskHBond","collections","racidx","relidx","packV3000List","populateSCSRTemplates","sid","txt","defn","tmdl","molfile","trimEnd","MDLSDFWriter","colMol","wtr","escape","charCodeAt","writeKeyVals","keyvals","multiline","kv","readNextChunk","term","mandatory","end","escaped","MoleculeStream","readUnknown","jsonStr","readNative","readMDLMOL","readNativeLegacy","MSG_PREMATURE","MSG_UNEXPECTED","parseIntHard","parseFloatHard","applyAtomProperty","appendAtomExtra","applyBondProperty","appendBondExtra","lnum","chunkEl","chunkX","chunkY","chunk","chunkFrom","chunkTo","chunkOrder","hdr","skUnescape","frto","writeNative","formatV2Elements","writeNativeLegacy","roundedNumber","iso","typ","charge","unpaired","hy","skEscape","skEncodeExtra","writeMDLMOL","fromCharCode","code","toUpperCase","hasZCoord","hasTransient","graph","graphBond","ringID","compID","ring3","ring4","ring5","ring6","ring7","base","trashTransient","getAtom","element","hExplicit","mapNum","transient","getBond","to","bondFromTo","trashGraph","setAtomPos","setAtomX","setAtomY","transi","swapAtoms","setBondFrom","setBondTo","setBondFromTo","deleteAtomAndBonds","deleteBond","HYVALENCE_EL","HYVALENCE_VAL","adjBonds","bondOther","atomExplicit","atomRingBlock","buildGraph","buildRingID","r1","r2","atomConnComp","buildConnComp","boundary","tx1","tx2","getAtomCloned","getBondCloned","setAtom","curr","setBond","modifyAtoms","lambda","modifyAtomsIndices","atomIndices","modifyBonds","modifyBondsIndices","bondIndices","findAtomMatch","findBondMatch","findAllAtoms","findAllBonds","mapAtoms","mapBonds","mapAtomsIndices","mapBondsIndices","comp","IDEALBOND","PREFIX_EXTRA","PREFIX_TRANSIENT","atomAtPoint","tolerance","OVERLAP_THRESHOLD","tolsq","sketchEquivalent","mol1","mol2","DEFAULT_EQUIV_TOLERANCE","box1","box2","mx1","arrayAtomX","my1","arrayAtomY","mx2","my2","bestdsq","j1","j2","sketchMappable","atomBondAngles","bndang","overlapsAtom","overlappingAtomMask","thresh","omask","threshSQ","d1","overlappingAtomList","congestionPoint","approach","score","congestionMolecule","mx","my","translateMolecule","ox","oy","rotateMolecule","rotateBond","rotateAtoms","angleNeighbours","mergeAtoms","oldN","newN","centreMolecule","meanX","meanY","deltaX","deltaY","mirrorImage","alignOrientFlip","x0","y0","deltaA","deltaB","dthA","dthB","scoreA","scoreB","atomIsWeirdLinear","Geometry","OVERLAP_THRESHOLD_SQ","SketchUtil","placeNewAtom","placeNewFragment","dirX","dirY","mbox","fbox","vx","vy","fragPosScore","iscore","rangeX","rangeY","mergeOverlappingAtoms","mergeFragmentsDiv","chopmask","remap","div1","div2","exotic","removeDuplicateBonds","mergeFragmentsMask","matchAngleGeometry","geom","GEOM_ANGLES","mtheta","hit","gotall","got","primeDirections","angles","calculateNewBondAngles","exits","exitVectors","nn","guessAtomGeometry","mapAngleSubstituent","atblk","elrow","adjBO","adjAN","pri","allSingle","Linear","Octa1","Octa2","Trigonal","SqPlan","Tetra1","Tetra2","gtheta","asz","gsz","vac","gang","mcount","refitAtomGeometry","inRing","allInRing","bestAng","ww","calculateWalkWeight","newAng","bdiff","diff","ringClash","switchAtomGeometry","dst","geoms","bestAtom","bestX","bestY","curth","pickAtomsToConnect","aidx","AUTO_DSQ","bestDSQ","bestA1","bestA2","conn","pickNewAtomDirection","bestTheta","joinOverlappingAtoms","groupX","groupY","adjb","keepmask","moveToEdge","gotS","gotN","sx1","sy1","sx2","sy2","nx1","ny1","nx2","ny2","SEPTEST","placeAdditionalHydrogens","numH","th3","th4","allViableDirections","proposeNewRing","rsz","snap","positionSimpleRing","proposeAtomRing","thsnap","angs","bestDelta","proposeBondRing","sign","brad","guidelineSprouts","sprouts","ords","sprout","orders","orBlank","attidx","ABBREV_ATTACHMENT","validateAbbrevs","convertToAbbrev","srcmask","abbrevName","molidx","junction","polymerExtra","fragidx","maskmol","maskfrag","nadj","newmol","newatom","alignCoords","expandedAbbrevs","expandOneAbbrevFrag","connBond","connType","vx1","vy1","vx2","vy2","invidx","subgraphWithAttachments","xmask","xmol","boxm","boxf","deleteAtoms","componentList","getAtomSides","oldmap","ccmax","grps","getBondSides","bf","arrayAtomMapNum","molecularFormula","punctuation","puncEnter","puncExit","puncEnterSuper","puncExitSuper","countC","countH","formula","molecularWeight","mw","an","bpri","el1","el2","limit1","limit2","boB1A1","boB1A2","boB2A1","boB2A2","bad1","bad2","exotic1","exotic2","ccsz","wn","totalHydrogens","hc","stripHydrogens","force","boringHydrogen","createHydrogens","position","atomVec3","atomOxidationState","nonMetal","oxstate","bo","chalco","oxidationStateText","absox","TEMPLATE_ATTACHMENT","InChIDelegate","generate","execLocation","inchi","InChI","super","available","inchiPath","X_OK","hasExecutable","setExecutable","isAvailable","nativeMolfileToInChI","writer","mdlmol","inchiKey","proc","raw","spawnSync","input","stdout","log","MainPanel","root","clientHeight","onResize","menuAction","loadFile","filename","NewMixture","openNewWindow","NewCollection","Open","actionFileOpen","Save","actionFileSave","SaveAs","actionFileSaveAs","customMenuAction","StandardUnits","ClipboardProxyHandler","copyEvent","andCut","proxy","pasteEvent","ClipboardProxy","handlers","pushHandler","popHandler","currentHandler","triggerCopy","execCommand","triggerPaste","setImage","blob","canSetHTML","canAlwaysGet","downloadString","fn","PAIR_UNIT_NAMES","pc","pcWV","pcWW","pcVV","pcMM","ratio","mol_L","mmol_L","umol_L","nmol_L","pmol_L","g_L","mg_L","ug_L","mol_kg","kg","mg","ug","ng","L","mL","uL","nL","mmol","umol","nmol","ppm","ppb","PAIR_UNIT_MINCHI","Units","setup","pair","uri","STANDARD_LIST","COMMON_NAMES","URI_TO_NAME","NAME_TO_URI","URI_TO_MINCHI","standardList","commonNames","uriToName","nameToURI","convertToMInChI","mnemonic","DotPathBond","DotPathCharge","DotPath","calculate","maskBlock","getBondOrders","fract","numer","denom","getBondClasses","classes","bcls","getChargeClasses","ccls","getAggregateCharges","total","nonsingle","pibonded","metalbonded","bondsum","blk1","blk2","impliedPi","adjpi","maskMaybe","COULD_BLOCK","ACIDS","BASES","hasMetal","amask","totalHave","totalWant","others","electrons","Stereochemistry","priority","chiralTetra","STEREO_NONE","cistransBond","squarePlanar","isH","buildPriority","buildTetraChirality","buildBondCisTrans","buildPlanarCisTrans","buildOctaChirality","atomPriority","atomTetraChirality","bondSideStereo","atomPlanarStereo","getPriorities","getAtomTetraChiral","getBondSideStereo","rubricTetrahedral","numShort","numWedges","th0","one","two","xx","yy","zz","rubricSquarePlanar","ninc","ndec","v0","v3","v4","d2","d3","d4","MIN_ANGLE","MAX_ANGLE","th12","th23","th34","th41","rubricBipyrimidal","atom2","atom3","atom4","atom5","ANGLE_OPPOSITE","v5","atom1","v45","cross","rubricOctahedral","slots","bestOpposite","axial","bestOrthogonal","bestOrient","rubric","rubricBondSides","nfr","nto","adj1","adj2","f1","f2","t1","t2","vfr","vto","vbond","vf1","vt1","THRESHSQ","xf1","xt1","xf1N","keepF1T1","keepF2T1","keepF1T2","keepF2T2","vf2","vt2","xf2","xt2","xf2N","haswedge","skip_atom","STEREO_UNKNOWN","parity","STEREO_NEG","STEREO_POS","ringMask","skip_bond","isBondAromatic","pf1","pf2","pt1","pt2","cipgr","anyActualH","prigr","cip","sortAndGroup","nextpri","repartitioned","cmp","uset","STEREO_BROKEN","RUBRIC_EQUIV_TETRA","RUBRIC_EQUIV_SIDES","RUBRIC_EQUIV_SQUARE","RUBRIC_EQUIV_BIPY","RUBRIC_EQUIV_OCTA","MetaMolecule","atomArom","bondArom","rubricTetra","rubricSquare","rubricBipy","rubricOcta","rubricSides","hash","heavyHash","uniqueElements","dots","piAtom","calculateStrictAromaticity","nr","ensurePiAtoms","anyChange","phase1","phase2","calculateRelaxedAromaticity","exocyclic","rblk1","rblk2","rng","valid","arom","calculateStereoRubric","adjc","adjc1","hc1","adjc2","hc2","removeHydrogens","atomMask","bondMask","atomMap","calculateSkeletonHash","skeletonHash","calculateHeavyHash","anyH","getSkeletonHash","hvy","isAtomAromatic","bondOrderArom","getAtomAromaticity","getBondAromaticity","getHeavyHash","getDotPath","getUniqueElements","equivalentTo","timeout","isomorphMatch","uniq1","uniq2","createRubric","createStrict","createStrictRubric","createRelaxed","createRelaxedRubric","crc_table","BOOT_CRC","start_crc","feed_crc","crc","byte","end_crc","CircularFingerprints","kind","hookApplyNewFP","hookConsiderNewFP","resolvedChiral","atomGroup","fplist","atomAdj","bondAdj","make_crc_table","initialIdentityECFP","applyNewFP","hashCode","iteration","centralAtom","niter","newident","circularIterate","growAtoms","considerNewFP","circ","numFP","getFP","getFingerprints","getUniqueHashes","hashes","getFoldedHashes","maxBits","andBits","tanimoto","hash1","hash2","shared","nheavy","nhydr","degree","inring","ru","par","newFP","lookFP","CLASS_ECFP0","CLASS_ECFP2","CLASS_ECFP4","CLASS_ECFP6","DataSheetStream","readXML","summary","extRoot","extList","ext","colList","rowidx","colidx","readJSON","json","writeXML","extension","column","cell","txtNode","writeJSON","nrow","ncol","doConvert","TEMPLATE_SOURCE","AbbrevContainer","abbrevs","getTemplateKeys","getTemplateData","needsSetup","main","setupData","dsstr","colAbbrev","attcount","firstConn","submitAbbreviation","getAbbrevs","infrag","promote","submitFragment","submitMolecule","inmol","substituteAbbrevName","fragExp","fragMF","fragFP","abbrev","afragExp","afragFP","search","formatAbbrevLabel","abv","nameHTML","nameSearch","pre","mid","post","MetalLigate","metalAtom","ligandAttach","ligands","lig","anyAttached","makeLigandBond","otherLigands","otherTheta","avgTheta","orientLigand","l1","l2","arrangeLigandsFree","arrangeLigandsRange","otherOrder","extent","batch","resolveClashes","ligAtom","mchg","lchg","idxAttach","lx","ly","molExtent","weight","bestLX","bestLY","attTheta","attDist","attDX","attDY","orderAttach","srcX","srcY","dstX","dstY","dtheta","refTheta","refSpan","bounded","thetaMin","thetaSpan","ligandSpan","theta1","theta2","determineThetaBounds","rotTheta","bestMin","bestMax","ablk","bblk","bumpDX","bumpDY","invDist","CLOSE_SQ","tainted","outer","FusionPermutation","attdist","guided","bridged","scoreModifier","chainSelect","TemplateFusion","templ","numAttach","withGuideOnly","guidetempl","guideidx","guideadj","timeLimit","artif1","artif2","poly1","poly2","huntForGuides","permuteNone","oldmol","oldbox","newbox","ROTN","rotmol","display","srcidx","sourceIndex","permuteAtom","timeStart","getTime","newperms","fliptempl","composeGuidedOne","flipmol","composeDirectOne","composeBridge","affixRawPermutations","permuteBond","composeGuidedTwo","composeDirectTwo","permuteMulti","composeGuidedMulti","composeDirectMulti","o1","otheta","ntheta","ocurrent","ncurrent","scoreMod","bfs","pmol","osz","asMask","temidx","removeExtraGuides","o2","oth","nth","oidx","orad","nidx","nrad","lowbfs","busy1","busy2","att","gidx","gx","gy","homoPenalty","oel","nel","RESERVED_GUIDESYMBOL","sel","padj","snapToGuide","isGuideOnTerminal","nudgenew","cx1","cy1","cx2","cy2","midx","tidx","gatom","closeDSQ","npsz","umask","numKeep","scorePermutation","uscore","uidx","perm","tmol","tunion","contained","ai","aj","bo1","bo2","wantTheta","dx1","dy1","dx2","dy2","totalBO","mmask","tfr","tto","tn","wmol","imask","ActivityType","AbsType","MoleculeActivity","activity","param","owner","toClipboard","output","currentAtom","currentBond","selectedMask","subjectMask","subjectLength","subjectIndex","hasSelected","setOwner","evaluate","execute","Delete","execDelete","Clear","execClear","Copy","execCopy","Cut","SelectAll","execSelectAll","SelectNone","SelectPrevComp","execSelectComp","SelectNextComp","SelectSide","execSelectSide","SelectGrow","execSelectGrow","SelectShrink","execSelectShrink","SelectChain","execSelectChain","SelectSmRing","execSelectSmRing","SelectRingBlk","execSelectRingBlk","SelectCurElement","execSelectCurElement","SelectToggle","execSelectToggle","SelectUnCurrent","execSelectUnCurrent","Element","execElement","positionX","positionY","keepAbbrev","Charge","execCharge","Connect","execConnect","Disconnect","execDisconnect","execMetalLigate","BondOrder","execBond","BondType","BondGeom","execBondGeom","BondAtom","execBondAtom","BondSwitch","execBondSwitch","BondRotate","execBondRotate","BondAddTwo","execBondAddTwo","BondInsert","execBondInsert","Join","execJoin","Nudge","execNudge","NudgeLots","NudgeFar","execNudgeFar","Flip","execFlip","axis","Scale","execScale","Rotate","execRotate","BondDist","execBondDist","AlignAngle","execAlignAngle","angle","AlignRegular","execAlignRegular","AdjustTorsion","execAdjustTorsion","Move","execMove","refAtom","Ring","execRing","ringX","ringY","aromatic","execTemplateFusion","fragNative","setPermutations","permutations","AbbrevTempl","execAbbrevTempl","AbbrevGroup","execAbbrevGroup","AbbrevFormula","execAbbrevFormula","AbbrevClear","execAbbrevClear","AbbrevExpand","execAbbrevExpand","BondArtifactPath","BondArtifactRing","BondArtifactArene","BondArtifactClear","execBondArtifact","execPolymerBlock","AddHydrogens","execAddHydrogens","RemoveHydrogens","execRemoveHydrogens","QueryClear","execQueryClear","QueryCopy","execQueryCopy","QueryPaste","execQueryPaste","QuerySetAtom","execQuerySetAtom","QuerySetBond","execQuerySetBond","QueryBondAny","execQueryBondAny","SproutDirection","execSproutDirection","finish","setState","errmsg","showMessage","requireSubject","zapSubject","withCut","performCopy","all","cclist","pickSelectedGroup","requireCurrent","sides","requireSelected","any","maxRB","gotRB","rb","applyQuery","NON_METALS","TRANSITION_METALS","MAIN_GROUPS","zap","killmask","ligAtoms","performBondNew","ccmol","oneComp","performBondChange","performBondGeomAtom","performBondGeomBond","altmol","ac1","ac2","side","mobileSide","baseAng","ang1","ang2","alink","_","fragmask","fusion","isVertical","invSz","connAtoms","curDist","sel1","isSelected","sel2","a3","group1","group3","subj","outmol","pi","checkAbbreviationReady","fixed","requireAtoms","artif","subject","curAtom","removePolymerBlock","performPolymerBlock","selmask","qmol","qterms","aterms","bterms","angleOptions","newAtom","bscore","switchType","stereoType","newang","subjmask","disqualTerminal","side1","side2","weight1","weight2","polymer","NormMixture","mixture","notes","analyse","origins","getOrigins","compList","origin","getComponent","note","contents","enumerateStereo","stereoEnum","childIndexes","sumType","None","sumAmount1","sumAmount2","sumError","toAbsoluteUnits","amount","childType","idxOne","Mass","Volume","Moles","concQuantity","concError","concUnits","concRelation","relation","findNote","splitMolecule","activ","emols","quantity","Mixture","mixfile","mixfileVersion","fromComponent","isComponentEmpty","BITS","hasQuantity","recursiveEqual","deserialise","serialise","beautify","serialiseComponent","getParentComponent","getComponents","nodeEnum","setComponent","deleteComponent","prependBefore","subcomp","SKIP","splitOrigin","regex","regpad","padding","comp1","comp2","dict1","dict2","keys1","keys2","MInChISegment","RenderMnemonicType","BLineType","ExportMInChI","minchi","segment","norm","fillInChI","formulate","modmix","useRatio","inchiList","mcomp","inchiFrag","PFX","builder","assembleContents","appendSegment","Header","Component","layerN","Hierarchy","layerG","Concentration","getSegment","makeLongHashKey","makeShortHashKey","LETTERS","crclist","feedCharacter","letter","NCRC","trunc","formatConcentration","mantissa","exp","determineExponent","unitURI","scaled","tree","subComp","subTree","conc","shaveBeard","minval","log10","ExportSDFile","colHier","colConc","appendComponent","subseq","RenderPolicy","pointScale","resolutionDPI","fontSize","lineSize","bondSep","defaultPadding","atomCols","defaultBlackOnWhite","pixPerAng","policy","defaultWhiteOnBlack","defaultColourOnWhite","defaultColourOnBlack","defaultPrintedPublication","RenderEffects","colAtom","colBond","dottedRectOutline","dottedBondCross","hideAtoms","hideBonds","atomFrameDotSz","atomFrameCol","atomCircleSz","atomCircleCol","atomDecoText","atomDecoCol","atomDecoSize","bondDecoText","bondDecoCol","bondDecoSize","overlapAtoms","FontData","UNITS_PER_EM","INV_UNITS_PER_EM","PANOSE_1","ASCENT","DESCENT","MISSING_HORZ","MISSING_DATA","ASCENT_FUDGE","UNICODE","HORIZ_ADV_X","GLYPH_DATA","OUTLINE_X","OUTLINE_Y","KERN_C1","KERN_C2","KERN_K","pathCache","pathMissing","ctxReference","getKerning","ch1","ch2","measureText","font","measureWidths","xpos","getRawGlyph","getGlyphPath","getMissingPath","getOutlineX","getOutlineY","initNativeFont","canvas","OffscreenCanvas","getContext","measureTextNative","family","opt","save","bold","italic","metrics","restore","FUDGE","OutlineMeasurement","offsetX","offsetY","invScale","angToX","angToY","xToAng","yToAng","yIsUp","PseudoEmbedding","crossings","calculateCrossings","maskCross","bond1","bond2","higher","crossRblk","maskComp","connectMaskedComponents","ccgrp","embedComponent","gmol","maskNever","newZ","seedFromInternalWedges","seedFromExternalWedges","seedFromPerspective","seedFromDensity","ucount","normaliseHeights","expandOutward","ncount","updateCrossing","success","avgdist","maxdist","highIdx","highCongest","congest","prevZ","mark","bfr1","bto1","bfr2","bto2","idx3","idx4","x1a","y1a","x1b","y1b","x2a","y2a","x2b","y2b","xy","ext1","ext2","z1a","z1b","z2a","z1","z2","FitRotatedEllipse","margin","lookupCache","setupParameters","currentScore","calculateScore","coarseDiscovery","fineImprovement","saveCache","getSpline","cacheMap","cacheVal","psz","invpsz","ptheta","pdist","buffX","buffY","rotatedScore","rtheta","scx","scy","devx","devy","deltaD","deltaR","DELTA_OPTIONS","dw","dh","bestCX","bestCY","bestRW","bestRH","newCX","newCY","newRW","newRH","newScore","REDUCTION","reduc","dCX","dCY","dRW","dRH","closestDSQ","eth","ii","proxSum","ArrangeMolecule","guestimateSize","FONT_CORRECT","numsym","plusH","aw","ah","measure","effects","points","space","unsplitLines","wantArtifacts","wantCrossings","artifactCharge","artifactUnpaired","artifactFract","getMeasure","getPolicy","getEffects","getScale","setWantArtifacts","want","getArtifacts","setArtifacts","setWantCrossings","arrange","bondSepPix","lineSizePix","fontSizePix","ymul","artmask","setupBondOrders","fsz","overCol","wad","PADDING","computeSpacePoint","processLabel","bdbl","xy1","shrinkBond","backOffAtom","xy2","ensureMinimumBondLength","qbonds","qtxt","oxy","orthogonalDelta","lx1","ly1","lx2","ly2","bnum","Dotted","computeSpaceLine","rotation","ltype","Normal","Inclined","Declined","Unknown","DotDir","IncDouble","IncTriple","IncQuadruple","invD","orderedRingList","processDoubleBond","priorityDoubleSubstit","placeHydrogen","isostr","placeAdjunct","annotateAtom","annotateBond","spc","createCurvedPath","delocalisedAnnotation","createCircularRing","isRing","alkeneLike","createBondCentroid","emb","resolveLineCrossings","processPolymerUnit","numPoints","getPoint","getPoints","numLines","getLine","getLines","getUnsplitLines","numRings","getRing","getRings","numPaths","getPath","getPaths","numSpace","getSpace","getSpaces","offsetEverything","offsetOrigin","bounds","determineBoundary","scaleEverything","determineBoundaryBox","squeezeInto","bw","bh","downScale","limitBounds","monochromate","spatialCongestion","delocalise","fractional","angdir","zeroBonds","zpt","bestDX","bestDY","angThresh","shorted","DELTA","dang","viol","countPolyViolations","shortCircuit","ibar","ibrace","chunks","primary","refchunk","bpos","isPrimary","chunkw","tw","bump","xbump","ybump","backOffAtomDelta","d12","invD12","SIZE_ORDER","nring","ringsz","ringbusy","ringscore","ringorder","resbcount","maxbcount","sc","btheta","countFLeft","countFRight","countTLeft","countTRight","idxFLeft","idxFRight","idxTLeft","idxTRight","noshift","ispri","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","bumpAtomPosition","delta1","delta2","delta3","delta4","adjustBondPosition","lt","fussy","SSFRACT","GLYPH_H","emscale","outlineX","outlineY","firstEMW","emw","chp","extraX","extraY","qh","emdx","emdy","srcWAD","RIGHTLEFT","LEFTRIGHT","UPDOWN","DOWNUP","quad","LEFTIES","allLeft","allRight","allUp","allDown","magPX","magPY","bestExt","anyNoClash","subFsz","nglyphs","spaceSubset","subset","hits","nspc","sr","ssz","alt","nf","nt","sumFrom","sumTo","ta","minExt","stepsz","angsz","limX","limY","subSpace","bth","boxOverlaps","pointmask","linemask","bondHigher","bondLower","TYPES","stashOriginals","assign","linesHigher","linesLower","pt","isRegular","regDist","NaN","FRACT","pb","mdist","fit","extAtom","symbol","EXT","capA","ncross1","ncross2","fr1","fr2","capB","score1","score2","splineInterpolate","qx1","qy1","qx2","qy2","allUnits","processPolymerUnitPair","brackets","bracket","nestings","u1","u2","nestOrder","nestCount","tagidx","isLinear","isOuter","ym","bsz1","bsz2","BASE_LINE","BASE_TEXT","px2","py2","px3","py3","px1","py1","px4","py4","line1","line2","line3","ypos","dsq1","drawText","xmin","ymin","idxN","idxD2","idxD1","globalInstance","ONTOLOGY_SOURCE","OntologyTree","getOntologyKeys","getOntologyData","roots","mapTerms","alreadyLoaded","init","loadFromString","getRoots","hasTerm","getBranch","getBranchList","accumulate","branch","loadContent","termList","debugString","emit","repeat","SquarePackingSpring","ArrangeMixtureLineSource","TextAlign","PrimClass","SquarePacking","packSize","boxes","hspace","vspace","layout","wantRatio","candidates","cand","idxStart","springs","Weak","processCandidate","Strong","Medium","outline","placed","placeAbove","spring","segs","newsegs","mergeSegmentAbove","placeBelow","mergeSegmentBelow","hiX","loY","hiY","merge","seg1","seg2","ArrangeMixture","components","minBoxSize","showCollapsors","collapsedBranches","packBranches","includeIdentifiers","nameFontSize","limitStructW","limitStructH","hardwrapName","softwrapName","createComponents","layoutSubComponents","contractComponents","molLayout","molBox","scaleComponents","modScale","nameBox","collapseBox","findComponent","formatQuantity","mixcomp","prec","rel","formatNormQuantity","examineBranch","parentIdx","isCollapsed","subOrigin","nameLines","wrapSplitName","Name","qline","Quantity","identifiers","truncateEllipsis","Identifier","metadata","metaString","Meta","minsz","gap","wh","wholeBranch","branchBlock","branchBox","totalWidth","totalHeight","bound","cbox","sq","allChildren","pidx","boundX","idxInside","idxOutside","ellw","keep","SpoolSVG","prettyPrint","spool","whole","inc","dec","MetaVector","types","prims","density","charMissing","lowX","lowY","highX","highY","charMask","primClass","Text","colour","thickness","typeidx","findOrCreateType","updateBounds","drawRect","edgeCol","fillCol","NOCOLOUR","Rect","drawOval","drawPath","xpoints","ypoints","ctrlFlags","isClosed","hardEdge","Path","closed","drawPoly","align","direction","Left","Baseline","Right","Middle","Top","Bottom","mscale","rx1","ry1","rx2","ry2","drawTextNative","fontFamily","TextNative","boundLowX","boundLowY","boundHighX","boundHighY","getBounds","transformPrimitives","transformIntoBox","nw","nh","scaleExtent","maxWidth","maxHeight","sw","sh","swsh","renderInto","renderCanvas","clearFirst","clearRect","renderContext","typeObj","setupTypeLine","setupTypeRect","setupTypeOval","setupTypePath","setupTypeText","setupTypeTextNative","renderLine","renderRect","renderOval","renderPath","renderText","renderTextNative","createSVG","withXlink","renderSVG","svgLine1","svgLineN","svgRect1","svgRectN","svgOval1","svgOvalN","svgPath","svgText","svgTextNative","into","strokeStyle","lineWidth","lineCap","fillStyle","fillRect","strokeRect","ellipse","layer","bezierCurveTo","lineJoin","translate","fillText","defineSVGStroke","defineSVGFill","rects","ovals","shape","typeDef","every","DrawMolecule","vg","mnemonics","getMetaVector","getLayout","draw","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","drawUnderEffects","drawFusedWedge","Artifact","drawBondInclined","drawBondDeclined","drawBondUnknown","drawBondDotted","drawBondIncMulti","fg","bez","Centre","drawOverEffects","wdots","hdots","wspc","hspc","Effect","xdots","ydots","invX","invY","bcount","ixy1","ixy2","inv1","other1","other2","dth1","diff1","dth2","diff2","diff3","terminalPoints","ty1","ty2","outerX","outerY","innerX","innerY","nsteps","invSteps","holdout","ix","iy","radius","nudge","DrawMixture","hoverIndex","activeIndex","selectedIndex","callbackDrawNameLine","drawConnection","drawComponent","xm","yd","bg","Dialog","minPortionWidth","maxPortionWidth","maximumWidth","maximumHeight","minPortionHeight","maxPortionHeight","topMargin","allowScroller","callbackClose","callbackShown","onClose","onShown","open","domObscureBackground","close","domObscureForeground","domPanelBoundary","divOuter","tdiv","domTitle","bdiv","domBody","ttlTable","tdTitle","tdButtons","domTitleButtons","domClose","populate","repositionSize","bodyDOM","buttonsDOM","docW","dlgW","Widget","contentDOM","domContent","tagType","ButtonViewPosition","ButtonView","parentX","parentY","parentWidth","parentHeight","idealSize","selectedButton","highlightButton","maxButtonColumns","maxButtonRows","border","buttonColNorm1","buttonColNorm2","buttonColActv1","buttonColActv2","buttonColSel1","buttonColSel2","hasBigButtons","prefabImgSize","gripHeight","gripWidth","isRaised","outPadding","inPadding","isMacLike","navigator","platform","setParentSize","applyOffset","redraw","topBank","stackSize","layoutButtons","canvasStyle","mouseClick","mouseDoubleClick","preventDefault","mouseDown","mouseUp","mouseOver","mouseOut","mouseMove","pushBank","bank","buttonView","isSubLevel","replaceCanvas","popBank","bankClosed","refreshBank","getSelectedButton","setSelectedButton","cycleSelected","raiseBank","lowerBank","getHasBigButtons","setHasBigButtons","withinOutline","gw","hg","gh","gripSize","sizeForButtons","nbtn","removeDisplayButtons","addGripButton","buttons","popWidth","popHeight","bestLayout","maxSlotHeight","minSlotHeight","slotWidth","layoutMaxHeight","scoreLayout","maxSlotWidth","minSlotWidth","layoutMaxWidth","ncols","nrows","imgDOM","helpSpan","buttonFromID","col1","col2","grad","createLinearGradient","addColorStop","helpText","keyText","imageFN","oldWidth","oldHeight","metavec","isSubMenu","path1","path2","inset","delayedRedraw","displayFromID","uw","uh","slot","slotHeight","pickButtonIndex","pickButtonID","triggerButton","hitButton","stopImmediatePropagation","stopPropagation","ButtonBank","claimKey","matchKey","mshift","mctrl","malt","mmeta","mkey","shiftKey","ctrlKey","altKey","metaKey","ELEMENTS_NOBLE","ELEMENTS_S_BLOCK","ELEMENTS_P_BLOCK","ELEMENTS_D_BLOCK","ELEMENTS_F_BLOCK","ELEMENTS_ABBREV","CommandType","COMMANDS_MAIN","COMMANDS_ATOM","COMMANDS_BOND","COMMANDS_SELECT","COMMANDS_MOVE","CommandBank","cmdType","Main","Select","Abbrev","populateElements","SBlock","PBlock","DBlock","FBlock","Noble","actv","canUndo","performUndo","canRedo","performRedo","performPaste","autoScale","zoom","alert","getState","listItems","ContextSketch","state","sketcher","proxyClip","menu","accelerator","click","editCurrent","maybeAppend","rotateSub","rotateSubMenu","subMenu","querySub","querySubMenu","molact","DraggingTool","DrawCanvasDecoration","GeomWidgetType","GeomWidgetSelType","DrawCanvas","viewOpt","decoration","showOxState","showQuery","showArtifacts","borderRadius","canvasUnder","canvasMolecule","canvasOver","divMessage","guidelines","filthy","dragType","hoverAtom","hoverBond","opAtom","opBond","opBudged","opShift","opCtrl","opAlt","lassoX","lassoY","lassoMask","clickX","clickY","mouseX","mouseY","dragGuides","templatePerms","currentPerm","fusionBank","cursorWatermark","cursorDX","cursorDY","toolAtomSymbol","toolBondOrder","toolBondType","toolChargeDelta","toolRingArom","toolRingFreeform","toolRotateIncr","redrawCacheKey","abbrevPolicy","divInfo","getSelected","getLassoed","scaleToAng","angToScale","layoutMolecule","sketchEffects","redrawMetaVector","abbrevMol","orientAbbreviation","redrawInfo","redrawUnder","redrawMolecule","redrawOver","cacheKey","divText","HOVER_COL","CURRENT_COL","CURRENT_BORD","SELECT_COL","LASSO_COL","drawPolymerUnit","drawAtomShade","drawBondShade","sfr","sto","lfr","lto","lw","sourceX","sourceY","destX","destY","determineFauxRing","Lasso","Erasor","erasing","determineDragTheta","subjectAtoms","determineMoveDelta","drawOriginatingBond","drawQueryFeatures","allIfNone","useOpAtom","updateLasso","calculateLassoMask","borderCol","anghalo","minRad","invNB","CIRC","snapTo","snapAtom","fh","annots","ap","annot","NPT","THPT","extBonds","inAtoms","outAtoms","flag1","flag2","npWidth","npHeight","selfLinks","innerLinks","outerLinks","isCapped","isExt","anames","setLineDash","pickObject","APPROACH","pickObjectCanvas","limitDist","bestItem","noAtoms","noBonds","chi","MappingNumber","AtomIndex","abbrevAtom","OptionList","htmlLabels","selidx","buttonDiv","auxCell","callbackSelect","composeCSS","getSelectedIndex","getSelectedValue","getAuxiliaryCell","onSelect","table","td","clickButton","updateButtons","setSelectedIndex","setSelectedValue","TabBar","unionHeight","panelDiv","getPanelDOM","idxOrName","grid","columns","underline","panel","rotateSelected","ExtraFieldsWidget","fields","divFields","fillTable","divButtons","getExtraFields","field","getTransientFields","strType","strValue","tdType","tdValue","tdButton","GeomWidget","linkA","linkB","torsA","torsB","hovered","atomSubset","Position","Link","divDiagram","selectionAtoms","Torsion","ANG_RAD","loX","posRad","gfx","outerSel","innerSel","showsel","pf","ox1","oy1","ox2","oy2","thetaM","oxM","oyM","ax3","ay3","ax4","ay4","which","whichSelection","sameSelection","maxRad","closeSel","closeDelta","midtheta","POSITION_TABLE_Y","POSITION_TABLE_X","PeriodicTableWidget","divList","selectedAtno","changeElement","callbackDoubleClick","onDoubleClick","updateSelected","setSelectedElements","elementList","QueryFieldsWidget","makeInput","makeToggleInput","chk","inputCharges","optAromatic","optUnsaturated","chkNotElements","inputElements","chkNotRingSizes","inputRingSizes","optRingBlock","inputNumRings","inputRingBonds","inputAdjacency","inputBondSums","inputValences","inputHydrogens","inputIsotopes","setupAtom","inputOrders","setupBond","updateAtom","splitNumbers","unsat","elem","splitStrings","checked","ringblk","updateBond","elemNot","ringszNot","EditAtom","callbackApply","newX","newY","tabs","abbrevList","svgAbbrev","abbrevIndices","currentAbbrev","initMol","btnApply","applyChanges","selectedTab","populateAtom","populateAbbreviation","populateGeometry","populateQuery","populateExtra","focusable","updateMolecule","selTab","updateAbbrev","updateGeometry","updateQuery","updateExtra","inputSymbol","periodicWidget","inputCharge","inputUnpaired","optionHydrogen","inputHydrogen","disabled","optionIsotope","inputIsotope","inputMapping","inputIndex","divPeriodic","spanSearch","spanList","inputAbbrevSearch","lastSearch","cycleAbbreviation","fillAbbreviations","selectAbbreviation","tableAbbrev","divContainer1","divContainer2","geomWidget","label1","inputGeom1","label2","inputGeom2","refGeom1","refGeom2","queryWidget","fieldsWidget","sym","hcidx","strval1","strval2","instate","mf","abbrevEntries","bgcol","tdLabel","tdStruct","scrollIntoView","EditBond","populateBond","ordersHTML","optionOrder","optionStereo","inputFrom","readOnly","inputTo","CHAR_LOW_A","CHAR_UP_A","indexToAtomLabel","indexToBondLabel","EditPolymer","optionConnect","optionBondConn","currentID","borderAtoms","outBonds","umap","btnRemove","applyRemove","inputNAtoms","inputNBond","populate2x2Conn","getList","domLabel","nvals","inputIncl","inputExcl","ivals","evals","populateUncap","divPreview","renderUnit","keyCode","bondConnOptions","optionList","uncapAtoms","btnUncap","LINES","circle","TemplateBank","group","subgroups","templates","resourceData","loadResourceData","prepareSubGroups","prepareTemplates","populateGroups","populateTemplates","titles","preview","molecules","resourceList","msz","colMnemonic","FusionBank","templateAccept","templateRotate","clearPermutations","ToolBankItem","TOOLS_MAIN","Arrow","Pan","Drag","BondOrder0","BondOrder1","BondOrder2","BondOrder3","BondUnknown","BondInclined","BondDeclined","RingAliph","RingArom","AtomPlus","AtomMinus","ElementPfx","ToolBank","Sketcher","plugins","inDialog","initialFocus","useToolBank","lowerToolBank","useCommandBank","lowerCommandBank","useTemplateBank","lowerTemplateBank","debugOutput","beenSetup","undoStack","redoStack","fadeWatermark","toolView","commandView","templateView","proxyMenu","defineMolecule","withAutoScale","withStashUndo","keepSelect","stashUndo","stopTemplateFusion","callbackChangeMolecule","renderMolecule","defineClipboard","defineContext","defineMoleculeString","molsk","defineRenderPolicy","defineBackground","borderRad","bgCol","clearMolecule","centreAndShrink","setupAsync","reserveHeight","keyPressed","keyDown","keyUp","touchStart","touchMove","touchCancel","touchEnd","contextMenu","dataTransfer","dropEffect","dropInto","changeSize","btnv","msg","isError","szLeft","szRight","szBottom","clearMessage","layoutTemplatePerm","anySelected","setSelected","changeCurrentAtom","changeCurrentBond","clearSubject","UNDO_SIZE","pickTemplatePermutation","performCopySelection","pasteText","performActivity","newScale","editBond","editAtom","pasteLocal","pasteMolecule","callbackSpecialPaste","dlg","limW","limH","natW","natH","down","tpolicy","updateHoverCursor","tool","toolApplies","mouseObj","mouseAtom","mouseBond","abbrevThen","abbrevNow","determineDragGuide","single","determineMoveGuide","guides","hitArrowKey","cursorJumpDirection","jumpFromCurrentAtom","jumpFromCurrentBond","jumpFromNowhere","closestDelta","adjTheta","cosdelta","bondTheta","atheta","ctrlArrowKey","sproutDirection","launchComposeFragment","callbackComposeFragment","clickObj","interactStart","interactEnd","interactDrag","view","nomod","touches","mouseWheel","openContextMenu","Press","Zoom","BondPfx","inPoly","newOX","newOY","interactEndDrag","interactEndClick","clickAtom","clickBond","autoscale","degrees","prompt","toObj","connectPolymerBlock","transfer","items","files","SUFFIXES","MIMES","getAsString","sfx","reader","FileReader","onload","readAsText","atomIn1","atomOut1","atomIn2","atomOut2","highName","ina","inb","nameList","name1","name2","EditCompound","callbackSave","onSave","getSketcher","btnClear","btnCopy","actionCopy","btnSave","skdiv","actionCut","actionPaste","actionUndo","actionRedo","popupBackground","obscureOpacity","callbackPopulate","positionAndShow","client","scrollSize","inner","empiricalScrollerSize","KeyValueWidget","callbackChange","divGrid","rebuildGrid","divKey","divValue","divButton","inputKey","scrapeData","inputValue","btnDelete","divAdd","btnAdd","dval","MetadataWidget","renderTerm","divContent","btnBack","triggerModified","btnAssert","pickExtraTerm","btnProp","pickNewTerm","divParent","branchList","ROOTS","rootURI","popup","populateBranch","isProperty","ROOTS_ASSERT","ROOTS_PROP","callbackClicked","span","QuantityType","RELATION_VALUES","RELATION_LABELS","EditComponent","component","parentSize","areaDescr","areaSyn","callbackSketch","onSketch","btnSketch","invokeSketcher","saveAndClose","vertical","grid1","fieldGrid","createFieldName","lineName","createValueLine","divQuant","createQuantity","createValueMultiline","synonyms","grid2","divFormula","createDiv","lineFormula","placeholder","calculateFormula","calculateWeight","divWeight","lineInChI","calculateInChI","lineSMILES","smiles","links","trapEscape","spellcheck","nullifyBlank","qtype","optQuantType","strQuant1","lineQuantVal1","strQuant2","lineQuantVal2","Value","lineQuantUnits","Range","Ratio","splitLines","topAlign","andEnter","interpretQuantString","flex","dropQuantRel","makeDropdownGroup","spanGap","qubox","btnQuantUnits","selectDropUnits","changeToValue","changeToRange","changeToRatio","low","changeFunc","drop","qstr","regname","isNum","test","qnum1","qnum2","BASE_COMPOUND","PubChemSearch","searchText","results","err","callbackResult","callbackFinished","stopped","cidList","url","encodeURIComponent","resp","receivedList","IdentifierList","CID","fetchNext","cid","receivedCompound","unpackCompound","NAMECOLS","LookupCompoundDialog","pubchem","resultList","nameSelected","nameDOM","molSelected","molList","molDOM","spanStatus","btnSearch","runSearch","applyResult","populateSearchEntry","resultArea","getName","divInput","searchInput","trapKeys","gotResult","finishedSearch","divMol","selectMolecule","divName","selectName","prev","ExtractCTABComponent","extract","ctab","seed","attachAny","stereoRacemic","stereoRelative","linkNodes","prototypes","enumerateAttachAny","enumerateStereoRacemic","enumerateStereoRelative","enumerateLinkNodes","enumerateMixtures","atomKeep","atomChop","removeAtom","connAtom","cmol","protoClone","affected","nperm","rmol","bitand","molinv","addedAtoms","rproto","leafmask","mapTree","nonemask","atommask","DragReason","EditMixture","callbackUpdateTitle","callbackInteraction","monochrome","dirty","delayedSelect","dragReason","dragIndex","dragX","dragY","isEditing","dlgCompound","structureIntegrity","canvasMixture","refocus","isReceivingCommands","setEditing","compoundEditor","addStructureIntegrityKey","getMixture","setMixture","getCollapsedBranches","clearHistory","isDirty","setDirty","zoomFull","zoomNormal","selectComponent","selectOrigin","complist","editStructure","checkStructureIntegrity","editDetails","lookupCurrent","curX","curY","deleteCurrent","appendToCurrent","prependBeforeCurrent","insertBeforeCurrent","insertAfterCurrent","reorderCurrent","clipboardCopy","clipboardPaste","getComponentPosition","rescale","scaleToFit","ensureComponentVisible","mustFit","pickComponent","pickComponentSection","navigateDirection","newIndex","toggleCollapsed","picked","Any","newMol","integKeys","oldMol","confirm","EditMixtureDesktop","BANNER","EditDetails","EditStructure","Lookup","ExportSVG","Append","Prepend","InsertBefore","InsertAfter","MoveUp","MoveDown","Undo","Redo","Paste","ZoomFull","ZoomIn","ZoomOut","MixturePanel","banner","editor","updateTitle","divBanner","divEditor","saveFile","ExportSDF","actionExportSDF","actionFileExportSVG","CreateMInChI","actionFileCreateMInChI","CopyBranch","ZoomNormal","params","properties","defaultPath","filters","extensions","showOpenDialog","canceled","inPlace","filePaths","showSaveDialog","filePath","exportSDF","sdfile","defPath","lastDot","maker","self","renderResult","yieldDOM","slash","MenuProxy","hasContextMenu","menuItems","MixtureCollection","getMixtureDirect","setMixtureDirect","deleteMixture","appendMixture","appendMixtureDirect","appendCollection","collection","insertMixture","swapMixtures","m1","m2","ViewDetail","ViewCard","CollectionPanelView","BG_NORMAL","CollectionPanel","curPage","pageBlock","viewType","Detail","mapMixDiv","divMain","divFooter","dividePages","renderMain","updateBanner","setCollection","editMixture","prependMixture","zoomScale","changeView","Card","createMixture","changeSelection","npage","ahref","showPages","page","divInner","wrapSVG","displayFields","stopEdit","scrollToIndex","scrollTop","localeCompare","divTitle","divLabel","ON_DESKTOP","setOnDesktop","onDesktop","runMixfileEditor","resURL","rootID","resourcePath","composeMainCSS","initWebMolKit","metacategory","request","XMLHttpRequest","responseType","response","onerror","readTextURL","href","panelClass","decodeURIComponent","readText","writeText","writeHTML","emenu","itemList","submenu"],"sourceRoot":""}