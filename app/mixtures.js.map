{"version":3,"file":"mixtures.js","mappings":"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M,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5I,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,IAChJ,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,IAAK,KAChJ,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC9I,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5I,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAC5I,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAC7I,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAC9I,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC7I,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE3ItnG,KAAKunG,WAAa,CACd,GACA,kEACA,2EACA,kNACA,ofACA,8dACA,8nBACA,uCACA,mMACA,8LACA,iJACA,mEACA,uCACA,8BACA,4BACA,0CACA,iWACA,0GACA,wSACA,2fACA,8FACA,kWACA,qgBACA,0DACA,0gBACA,4eACA,uDACA,kEACA,gEACA,+DACA,gEACA,4RACA,6qBACA,0FACA,yaACA,mZACA,6QACA,oEACA,8DACA,8UACA,mEACA,kEACA,qKACA,iFACA,wCACA,4FACA,uEACA,uWACA,uRACA,ieACA,2QACA,+aACA,sDACA,mQACA,mEACA,oHACA,wGACA,wEACA,qEACA,oDACA,gCACA,kDACA,sDACA,kCACA,+BACA,ybACA,kTACA,0SACA,uRACA,qSACA,8KACA,gbACA,uKACA,0DACA,yLACA,iFACA,8BACA,gWACA,uKACA,wPACA,2SACA,4SACA,wJACA,2bACA,mMACA,4KACA,iEACA,8GACA,4FACA,yEACA,gEACA,8SACA,iCACA,0SACA,uSACA,GACA,uDACA,oSACA,4PACA,0aACA,0GACA,0DACA,0yBACA,2DACA,wdACA,waACA,wHACA,yCACA,8BACA,idACA,qCACA,6NACA,qFACA,0QACA,gZACA,wCACA,6KACA,qGACA,8BACA,uJACA,8FACA,sOACA,sHACA,+LACA,gVACA,+fACA,2RACA,sHACA,+HACA,8IACA,yTACA,mJACA,mTACA,iIACA,2jBACA,gGACA,yGACA,wHACA,6HACA,8FACA,uGACA,qHACA,0HACA,2SACA,sSACA,mYACA,6YACA,2ZACA,skBACA,gaACA,gHACA,6hBACA,+RACA,ySACA,uTACA,4TACA,6GACA,qRACA,sdACA,qdACA,8dACA,4eACA,wpBACA,ifACA,8oBACA,mtBACA,odACA,iUACA,0UACA,wVACA,6VACA,0DACA,mEACA,iFACA,sFACA,+cACA,sYACA,qRACA,8RACA,4SACA,udACA,iTACA,sFACA,6YACA,wMACA,iNACA,+NACA,oOACA,8GACA,2SACA,kEACA,uCACA,g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K,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KAEtI1nG,KAAK2nG,QAAU,CACX,IAAU,IAAK,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAC5I,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAC7I,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IACvI,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAU,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvI,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAC5I,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAC7I,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxI,IAAU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","sources":["webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/get-electron-binding.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/module-names.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/type-utils.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/callbacks-registry.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/index.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/remote.js","webpack://Mixtures/./node_modules/@electron/remote/renderer/index.js","webpack://Mixtures/external node-commonjs \"child_process\"","webpack://Mixtures/external node-commonjs \"electron\"","webpack://Mixtures/external node-commonjs \"https\"","webpack://Mixtures/webpack/bootstrap","webpack://Mixtures/webpack/runtime/define property getters","webpack://Mixtures/webpack/runtime/hasOwnProperty shorthand","webpack://Mixtures/webpack/runtime/make namespace object","webpack://Mixtures/./node_modules/webmolkit/util/Vec.js","webpack://Mixtures/./node_modules/webmolkit/util/Matrix.js","webpack://Mixtures/./node_modules/webmolkit/util/util.js","webpack://Mixtures/./node_modules/webmolkit/util/Triangulation2D.js","webpack://Mixtures/./node_modules/webmolkit/util/Geom.js","webpack://Mixtures/./node_modules/webmolkit/util/XML.js","webpack://Mixtures/./node_modules/webmolkit/util/dom.js","webpack://Mixtures/./node_modules/webmolkit/util/Theme.js","webpack://Mixtures/./node_modules/webmolkit/ui/Tooltip.js","webpack://Mixtures/./src/web/MenuBanner.ts","webpack://Mixtures/./node_modules/webmolkit/data/Chemistry.js","webpack://Mixtures/./node_modules/webmolkit/data/Graph.js","webpack://Mixtures/./node_modules/webmolkit/calc/ResonanceRemover.js","webpack://Mixtures/./node_modules/webmolkit/data/BondArtifact.js","webpack://Mixtures/./node_modules/webmolkit/data/DataSheet.js","webpack://Mixtures/./node_modules/webmolkit/data/ForeignMolecule.js","webpack://Mixtures/./node_modules/webmolkit/data/PolymerBlock.js","webpack://Mixtures/./node_modules/webmolkit/data/QueryUtil.js","webpack://Mixtures/./node_modules/webmolkit/data/StereoGroup.js","webpack://Mixtures/./node_modules/webmolkit/data/MDLReader.js","webpack://Mixtures/./node_modules/webmolkit/data/MDLWriter.js","webpack://Mixtures/./node_modules/webmolkit/data/MoleculeStream.js","webpack://Mixtures/./node_modules/webmolkit/data/Molecule.js","webpack://Mixtures/./node_modules/webmolkit/data/CoordUtil.js","webpack://Mixtures/./node_modules/webmolkit/data/SketchUtil.js","webpack://Mixtures/./node_modules/webmolkit/data/MolUtil.js","webpack://Mixtures/external node-commonjs \"fs\"","webpack://Mixtures/./src/mixture/InChIDelegate.ts","webpack://Mixtures/./src/nodejs/InChI.ts","webpack://Mixtures/./src/electron/MainPanel.ts","webpack://Mixtures/./node_modules/webmolkit/ui/ClipboardProxy.js","webpack://Mixtures/./src/mixture/Units.ts","webpack://Mixtures/./node_modules/webmolkit/data/DotPath.js","webpack://Mixtures/./node_modules/webmolkit/data/Stereochemistry.js","webpack://Mixtures/./node_modules/webmolkit/data/MetaMolecule.js","webpack://Mixtures/./node_modules/webmolkit/calc/CircularFingerprints.js","webpack://Mixtures/./node_modules/webmolkit/data/DataSheetStream.js","webpack://Mixtures/./node_modules/webmolkit/data/AbbrevContainer.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/MetalLigate.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/TemplateFusion.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/MoleculeActivity.js","webpack://Mixtures/./src/mixture/NormMixture.ts","webpack://Mixtures/./src/mixture/Mixture.ts","webpack://Mixtures/./src/mixture/Mixfile.ts","webpack://Mixtures/./src/mixture/ExportMInChI.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/Rendering.js","webpack://Mixtures/./node_modules/webmolkit/gfx/ArrangeMolecule.js","webpack://Mixtures/./src/mixture/ExportSDFile.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/FontData.js","webpack://Mixtures/./node_modules/webmolkit/gfx/ArrangeMeasurement.js","webpack://Mixtures/./node_modules/webmolkit/util/FitRotatedEllipse.js","webpack://Mixtures/./node_modules/webmolkit/data/OntologyTree.js","webpack://Mixtures/./src/mixture/SquarePacking.ts","webpack://Mixtures/./src/mixture/ArrangeMixture.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/MetaVector.js","webpack://Mixtures/./node_modules/webmolkit/gfx/DrawMolecule.js","webpack://Mixtures/./src/mixture/DrawMixture.ts","webpack://Mixtures/./node_modules/webmolkit/dialog/Dialog.js","webpack://Mixtures/external node-commonjs \"path\"","webpack://Mixtures/./node_modules/webmolkit/ui/Widget.js","webpack://Mixtures/./node_modules/webmolkit/ui/ButtonView.js","webpack://Mixtures/./node_modules/webmolkit/ui/ButtonBank.js","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainUndo.svg","webpack://Mixtures/./node_modules/webmolkit/sketcher/CommandBank.js","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainRedo.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainZoomIn.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainZoomOut.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainZoomFit.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainSelSide.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainSelAll.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainSelNone.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainDelete.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainCut.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainCopy.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainPaste.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainAtom.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainBond.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainSelect.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainMove.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomPlus.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomMinus.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomAbbrev.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomSBlock.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomPBlock.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomDBlock.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomFBlock.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomNoble.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondOne.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondTwo.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondThree.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondFour.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondZero.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondUp.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondDown.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondSquig.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondQAny.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondAddTwo.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondInsert.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondSwitch.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondRotate.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondLinear.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondTrigonal.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondTetra1.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondTetra2.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondSqPlan.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondOcta1.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondOcta2.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondMetalLigate.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondArtifactPath.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondArtifactRing.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondArtifactArene.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondArtifactClear.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondPolymer.svg","webpack://Mixtures/./node_modules/webmolkit/sketcher/ContextSketch.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/DrawCanvas.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/GeomWidget.js","webpack://Mixtures/./node_modules/webmolkit/ui/OptionList.js","webpack://Mixtures/./node_modules/webmolkit/ui/TabBar.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/ExtraFieldsWidget.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/PeriodicTableWidget.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/QueryFieldsWidget.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/EditAtom.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/EditBond.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/EditPolymer.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/TemplateBank.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/ToolBank.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/Sketcher.js","webpack://Mixtures/./node_modules/webmolkit/dialog/EditCompound.js","webpack://Mixtures/./node_modules/webmolkit/ui/Popup.js","webpack://Mixtures/./src/web/KeyValueWidget.ts","webpack://Mixtures/./src/electron/MetadataWidget.ts","webpack://Mixtures/./src/web/EditComponent.ts","webpack://Mixtures/./src/electron/PubChemSearch.ts","webpack://Mixtures/./src/electron/LookupCompoundDialog.ts","webpack://Mixtures/./src/mixture/ExtractCTABComponent.ts","webpack://Mixtures/./src/web/EditMixture.ts","webpack://Mixtures/./src/electron/EditMixtureDesktop.ts","webpack://Mixtures/./src/electron/MixturePanel.ts","webpack://Mixtures/./node_modules/webmolkit/ui/MenuProxy.js","webpack://Mixtures/external node-commonjs \"process\"","webpack://Mixtures/./src/mixture/MixtureCollection.ts","webpack://Mixtures/./src/electron/CollectionPanel.ts","webpack://Mixtures/./src/electron/startup.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getElectronBinding = void 0;\nconst getElectronBinding = (name) => {\n    if (process._linkedBinding) {\n        return process._linkedBinding('electron_common_' + name);\n    }\n    else if (process.electronBinding) {\n        return process.electronBinding(name);\n    }\n    else {\n        return null;\n    }\n};\nexports.getElectronBinding = getElectronBinding;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.browserModuleNames = exports.commonModuleNames = void 0;\nconst get_electron_binding_1 = require(\"./get-electron-binding\");\nexports.commonModuleNames = [\n    'clipboard',\n    'nativeImage',\n    'shell',\n];\nexports.browserModuleNames = [\n    'app',\n    'autoUpdater',\n    'BaseWindow',\n    'BrowserView',\n    'BrowserWindow',\n    'contentTracing',\n    'crashReporter',\n    'dialog',\n    'globalShortcut',\n    'ipcMain',\n    'inAppPurchase',\n    'Menu',\n    'MenuItem',\n    'nativeTheme',\n    'net',\n    'netLog',\n    'MessageChannelMain',\n    'Notification',\n    'powerMonitor',\n    'powerSaveBlocker',\n    'protocol',\n    'pushNotifications',\n    'safeStorage',\n    'screen',\n    'session',\n    'ShareMenu',\n    'systemPreferences',\n    'TopLevelWindow',\n    'TouchBar',\n    'Tray',\n    'utilityProcess',\n    'View',\n    'webContents',\n    'WebContentsView',\n    'webFrameMain',\n].concat(exports.commonModuleNames);\nconst features = get_electron_binding_1.getElectronBinding('features');\nif (!features || !features.isDesktopCapturerEnabled || features.isDesktopCapturerEnabled()) {\n    exports.browserModuleNames.push('desktopCapturer');\n}\nif (!features || features.isViewApiEnabled()) {\n    exports.browserModuleNames.push('ImageView');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserialize = exports.serialize = exports.isSerializableObject = exports.isPromise = void 0;\nconst electron_1 = require(\"electron\");\nfunction isPromise(val) {\n    return (val &&\n        val.then &&\n        val.then instanceof Function &&\n        val.constructor &&\n        val.constructor.reject &&\n        val.constructor.reject instanceof Function &&\n        val.constructor.resolve &&\n        val.constructor.resolve instanceof Function);\n}\nexports.isPromise = isPromise;\nconst serializableTypes = [\n    Boolean,\n    Number,\n    String,\n    Date,\n    Error,\n    RegExp,\n    ArrayBuffer\n];\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm#Supported_types\nfunction isSerializableObject(value) {\n    return value === null || ArrayBuffer.isView(value) || serializableTypes.some(type => value instanceof type);\n}\nexports.isSerializableObject = isSerializableObject;\nconst objectMap = function (source, mapper) {\n    const sourceEntries = Object.entries(source);\n    const targetEntries = sourceEntries.map(([key, val]) => [key, mapper(val)]);\n    return Object.fromEntries(targetEntries);\n};\nfunction serializeNativeImage(image) {\n    const representations = [];\n    const scaleFactors = image.getScaleFactors();\n    // Use Buffer when there's only one representation for better perf.\n    // This avoids compressing to/from PNG where it's not necessary to\n    // ensure uniqueness of dataURLs (since there's only one).\n    if (scaleFactors.length === 1) {\n        const scaleFactor = scaleFactors[0];\n        const size = image.getSize(scaleFactor);\n        const buffer = image.toBitmap({ scaleFactor });\n        representations.push({ scaleFactor, size, buffer });\n    }\n    else {\n        // Construct from dataURLs to ensure that they are not lost in creation.\n        for (const scaleFactor of scaleFactors) {\n            const size = image.getSize(scaleFactor);\n            const dataURL = image.toDataURL({ scaleFactor });\n            representations.push({ scaleFactor, size, dataURL });\n        }\n    }\n    return { __ELECTRON_SERIALIZED_NativeImage__: true, representations };\n}\nfunction deserializeNativeImage(value) {\n    const image = electron_1.nativeImage.createEmpty();\n    // Use Buffer when there's only one representation for better perf.\n    // This avoids compressing to/from PNG where it's not necessary to\n    // ensure uniqueness of dataURLs (since there's only one).\n    if (value.representations.length === 1) {\n        const { buffer, size, scaleFactor } = value.representations[0];\n        const { width, height } = size;\n        image.addRepresentation({ buffer, scaleFactor, width, height });\n    }\n    else {\n        // Construct from dataURLs to ensure that they are not lost in creation.\n        for (const rep of value.representations) {\n            const { dataURL, size, scaleFactor } = rep;\n            const { width, height } = size;\n            image.addRepresentation({ dataURL, scaleFactor, width, height });\n        }\n    }\n    return image;\n}\nfunction serialize(value) {\n    if (value && value.constructor && value.constructor.name === 'NativeImage') {\n        return serializeNativeImage(value);\n    }\n    if (Array.isArray(value)) {\n        return value.map(serialize);\n    }\n    else if (isSerializableObject(value)) {\n        return value;\n    }\n    else if (value instanceof Object) {\n        return objectMap(value, serialize);\n    }\n    else {\n        return value;\n    }\n}\nexports.serialize = serialize;\nfunction deserialize(value) {\n    if (value && value.__ELECTRON_SERIALIZED_NativeImage__) {\n        return deserializeNativeImage(value);\n    }\n    else if (Array.isArray(value)) {\n        return value.map(deserialize);\n    }\n    else if (isSerializableObject(value)) {\n        return value;\n    }\n    else if (value instanceof Object) {\n        return objectMap(value, deserialize);\n    }\n    else {\n        return value;\n    }\n}\nexports.deserialize = deserialize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallbacksRegistry = void 0;\nclass CallbacksRegistry {\n    constructor() {\n        this.nextId = 0;\n        this.callbacks = {};\n        this.callbackIds = new WeakMap();\n        this.locationInfo = new WeakMap();\n    }\n    add(callback) {\n        // The callback is already added.\n        let id = this.callbackIds.get(callback);\n        if (id != null)\n            return id;\n        id = this.nextId += 1;\n        this.callbacks[id] = callback;\n        this.callbackIds.set(callback, id);\n        // Capture the location of the function and put it in the ID string,\n        // so that release errors can be tracked down easily.\n        const regexp = /at (.*)/gi;\n        const stackString = (new Error()).stack;\n        if (!stackString)\n            return id;\n        let filenameAndLine;\n        let match;\n        while ((match = regexp.exec(stackString)) !== null) {\n            const location = match[1];\n            if (location.includes('(native)'))\n                continue;\n            if (location.includes('(<anonymous>)'))\n                continue;\n            if (location.includes('callbacks-registry.js'))\n                continue;\n            if (location.includes('remote.js'))\n                continue;\n            if (location.includes('@electron/remote/dist'))\n                continue;\n            const ref = /([^/^)]*)\\)?$/gi.exec(location);\n            if (ref)\n                filenameAndLine = ref[1];\n            break;\n        }\n        this.locationInfo.set(callback, filenameAndLine);\n        return id;\n    }\n    get(id) {\n        return this.callbacks[id] || function () { };\n    }\n    getLocation(callback) {\n        return this.locationInfo.get(callback);\n    }\n    apply(id, ...args) {\n        return this.get(id).apply(global, ...args);\n    }\n    remove(id) {\n        const callback = this.callbacks[id];\n        if (callback) {\n            this.callbackIds.delete(callback);\n            delete this.callbacks[id];\n        }\n    }\n}\nexports.CallbacksRegistry = CallbacksRegistry;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nif (process.type === 'browser')\n    throw new Error(`\"@electron/remote\" cannot be required in the browser process. Instead require(\"@electron/remote/main\").`);\n__exportStar(require(\"./remote\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createFunctionWithReturnValue = exports.getGlobal = exports.getCurrentWebContents = exports.getCurrentWindow = exports.getBuiltin = void 0;\nconst callbacks_registry_1 = require(\"./callbacks-registry\");\nconst type_utils_1 = require(\"../common/type-utils\");\nconst electron_1 = require(\"electron\");\nconst module_names_1 = require(\"../common/module-names\");\nconst get_electron_binding_1 = require(\"../common/get-electron-binding\");\nconst { Promise } = global;\nconst callbacksRegistry = new callbacks_registry_1.CallbacksRegistry();\nconst remoteObjectCache = new Map();\nconst finalizationRegistry = new FinalizationRegistry((id) => {\n    const ref = remoteObjectCache.get(id);\n    if (ref !== undefined && ref.deref() === undefined) {\n        remoteObjectCache.delete(id);\n        electron_1.ipcRenderer.send(\"REMOTE_BROWSER_DEREFERENCE\" /* BROWSER_DEREFERENCE */, contextId, id, 0);\n    }\n});\nconst electronIds = new WeakMap();\nconst isReturnValue = new WeakSet();\nfunction getCachedRemoteObject(id) {\n    const ref = remoteObjectCache.get(id);\n    if (ref !== undefined) {\n        const deref = ref.deref();\n        if (deref !== undefined)\n            return deref;\n    }\n}\nfunction setCachedRemoteObject(id, value) {\n    const wr = new WeakRef(value);\n    remoteObjectCache.set(id, wr);\n    finalizationRegistry.register(value, id);\n    return value;\n}\nfunction getContextId() {\n    const v8Util = get_electron_binding_1.getElectronBinding('v8_util');\n    if (v8Util) {\n        return v8Util.getHiddenValue(global, 'contextId');\n    }\n    else {\n        throw new Error('Electron >=v13.0.0-beta.6 required to support sandboxed renderers');\n    }\n}\n// An unique ID that can represent current context.\nconst contextId = process.contextId || getContextId();\n// Notify the main process when current context is going to be released.\n// Note that when the renderer process is destroyed, the message may not be\n// sent, we also listen to the \"render-view-deleted\" event in the main process\n// to guard that situation.\nprocess.on('exit', () => {\n    const command = \"REMOTE_BROWSER_CONTEXT_RELEASE\" /* BROWSER_CONTEXT_RELEASE */;\n    electron_1.ipcRenderer.send(command, contextId);\n});\nconst IS_REMOTE_PROXY = Symbol('is-remote-proxy');\n// Convert the arguments object into an array of meta data.\nfunction wrapArgs(args, visited = new Set()) {\n    const valueToMeta = (value) => {\n        // Check for circular reference.\n        if (visited.has(value)) {\n            return {\n                type: 'value',\n                value: null\n            };\n        }\n        if (value && value.constructor && value.constructor.name === 'NativeImage') {\n            return { type: 'nativeimage', value: type_utils_1.serialize(value) };\n        }\n        else if (Array.isArray(value)) {\n            visited.add(value);\n            const meta = {\n                type: 'array',\n                value: wrapArgs(value, visited)\n            };\n            visited.delete(value);\n            return meta;\n        }\n        else if (value instanceof Buffer) {\n            return {\n                type: 'buffer',\n                value\n            };\n        }\n        else if (type_utils_1.isSerializableObject(value)) {\n            return {\n                type: 'value',\n                value\n            };\n        }\n        else if (typeof value === 'object') {\n            if (type_utils_1.isPromise(value)) {\n                return {\n                    type: 'promise',\n                    then: valueToMeta(function (onFulfilled, onRejected) {\n                        value.then(onFulfilled, onRejected);\n                    })\n                };\n            }\n            else if (electronIds.has(value)) {\n                return {\n                    type: 'remote-object',\n                    id: electronIds.get(value)\n                };\n            }\n            const meta = {\n                type: 'object',\n                name: value.constructor ? value.constructor.name : '',\n                members: []\n            };\n            visited.add(value);\n            for (const prop in value) { // eslint-disable-line guard-for-in\n                meta.members.push({\n                    name: prop,\n                    value: valueToMeta(value[prop])\n                });\n            }\n            visited.delete(value);\n            return meta;\n        }\n        else if (typeof value === 'function' && isReturnValue.has(value)) {\n            return {\n                type: 'function-with-return-value',\n                value: valueToMeta(value())\n            };\n        }\n        else if (typeof value === 'function') {\n            return {\n                type: 'function',\n                id: callbacksRegistry.add(value),\n                location: callbacksRegistry.getLocation(value),\n                length: value.length\n            };\n        }\n        else {\n            return {\n                type: 'value',\n                value\n            };\n        }\n    };\n    return args.map(valueToMeta);\n}\n// Populate object's members from descriptors.\n// The |ref| will be kept referenced by |members|.\n// This matches |getObjectMemebers| in rpc-server.\nfunction setObjectMembers(ref, object, metaId, members) {\n    if (!Array.isArray(members))\n        return;\n    for (const member of members) {\n        if (Object.prototype.hasOwnProperty.call(object, member.name))\n            continue;\n        const descriptor = { enumerable: member.enumerable };\n        if (member.type === 'method') {\n            const remoteMemberFunction = function (...args) {\n                let command;\n                if (this && this.constructor === remoteMemberFunction) {\n                    command = \"REMOTE_BROWSER_MEMBER_CONSTRUCTOR\" /* BROWSER_MEMBER_CONSTRUCTOR */;\n                }\n                else {\n                    command = \"REMOTE_BROWSER_MEMBER_CALL\" /* BROWSER_MEMBER_CALL */;\n                }\n                const ret = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name, wrapArgs(args));\n                return metaToValue(ret);\n            };\n            let descriptorFunction = proxyFunctionProperties(remoteMemberFunction, metaId, member.name);\n            descriptor.get = () => {\n                descriptorFunction.ref = ref; // The member should reference its object.\n                return descriptorFunction;\n            };\n            // Enable monkey-patch the method\n            descriptor.set = (value) => {\n                descriptorFunction = value;\n                return value;\n            };\n            descriptor.configurable = true;\n        }\n        else if (member.type === 'get') {\n            descriptor.get = () => {\n                const command = \"REMOTE_BROWSER_MEMBER_GET\" /* BROWSER_MEMBER_GET */;\n                const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name);\n                return metaToValue(meta);\n            };\n            if (member.writable) {\n                descriptor.set = (value) => {\n                    const args = wrapArgs([value]);\n                    const command = \"REMOTE_BROWSER_MEMBER_SET\" /* BROWSER_MEMBER_SET */;\n                    const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name, args);\n                    if (meta != null)\n                        metaToValue(meta);\n                    return value;\n                };\n            }\n        }\n        Object.defineProperty(object, member.name, descriptor);\n    }\n}\n// Populate object's prototype from descriptor.\n// This matches |getObjectPrototype| in rpc-server.\nfunction setObjectPrototype(ref, object, metaId, descriptor) {\n    if (descriptor === null)\n        return;\n    const proto = {};\n    setObjectMembers(ref, proto, metaId, descriptor.members);\n    setObjectPrototype(ref, proto, metaId, descriptor.proto);\n    Object.setPrototypeOf(object, proto);\n}\n// Wrap function in Proxy for accessing remote properties\nfunction proxyFunctionProperties(remoteMemberFunction, metaId, name) {\n    let loaded = false;\n    // Lazily load function properties\n    const loadRemoteProperties = () => {\n        if (loaded)\n            return;\n        loaded = true;\n        const command = \"REMOTE_BROWSER_MEMBER_GET\" /* BROWSER_MEMBER_GET */;\n        const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, name);\n        setObjectMembers(remoteMemberFunction, remoteMemberFunction, meta.id, meta.members);\n    };\n    return new Proxy(remoteMemberFunction, {\n        set: (target, property, value) => {\n            if (property !== 'ref')\n                loadRemoteProperties();\n            target[property] = value;\n            return true;\n        },\n        get: (target, property) => {\n            if (property === IS_REMOTE_PROXY)\n                return true;\n            if (!Object.prototype.hasOwnProperty.call(target, property))\n                loadRemoteProperties();\n            const value = target[property];\n            if (property === 'toString' && typeof value === 'function') {\n                return value.bind(target);\n            }\n            return value;\n        },\n        ownKeys: (target) => {\n            loadRemoteProperties();\n            return Object.getOwnPropertyNames(target);\n        },\n        getOwnPropertyDescriptor: (target, property) => {\n            const descriptor = Object.getOwnPropertyDescriptor(target, property);\n            if (descriptor)\n                return descriptor;\n            loadRemoteProperties();\n            return Object.getOwnPropertyDescriptor(target, property);\n        }\n    });\n}\n// Convert meta data from browser into real value.\nfunction metaToValue(meta) {\n    if (meta.type === 'value') {\n        return meta.value;\n    }\n    else if (meta.type === 'array') {\n        return meta.members.map((member) => metaToValue(member));\n    }\n    else if (meta.type === 'nativeimage') {\n        return type_utils_1.deserialize(meta.value);\n    }\n    else if (meta.type === 'buffer') {\n        return Buffer.from(meta.value.buffer, meta.value.byteOffset, meta.value.byteLength);\n    }\n    else if (meta.type === 'promise') {\n        return Promise.resolve({ then: metaToValue(meta.then) });\n    }\n    else if (meta.type === 'error') {\n        return metaToError(meta);\n    }\n    else if (meta.type === 'exception') {\n        if (meta.value.type === 'error') {\n            throw metaToError(meta.value);\n        }\n        else {\n            throw new Error(`Unexpected value type in exception: ${meta.value.type}`);\n        }\n    }\n    else {\n        let ret;\n        if ('id' in meta) {\n            const cached = getCachedRemoteObject(meta.id);\n            if (cached !== undefined) {\n                return cached;\n            }\n        }\n        // A shadow class to represent the remote function object.\n        if (meta.type === 'function') {\n            const remoteFunction = function (...args) {\n                let command;\n                if (this && this.constructor === remoteFunction) {\n                    command = \"REMOTE_BROWSER_CONSTRUCTOR\" /* BROWSER_CONSTRUCTOR */;\n                }\n                else {\n                    command = \"REMOTE_BROWSER_FUNCTION_CALL\" /* BROWSER_FUNCTION_CALL */;\n                }\n                const obj = electron_1.ipcRenderer.sendSync(command, contextId, meta.id, wrapArgs(args));\n                return metaToValue(obj);\n            };\n            ret = remoteFunction;\n        }\n        else {\n            ret = {};\n        }\n        setObjectMembers(ret, ret, meta.id, meta.members);\n        setObjectPrototype(ret, ret, meta.id, meta.proto);\n        if (ret.constructor && ret.constructor[IS_REMOTE_PROXY]) {\n            Object.defineProperty(ret.constructor, 'name', { value: meta.name });\n        }\n        // Track delegate obj's lifetime & tell browser to clean up when object is GCed.\n        electronIds.set(ret, meta.id);\n        setCachedRemoteObject(meta.id, ret);\n        return ret;\n    }\n}\nfunction metaToError(meta) {\n    const obj = meta.value;\n    for (const { name, value } of meta.members) {\n        obj[name] = metaToValue(value);\n    }\n    return obj;\n}\nfunction handleMessage(channel, handler) {\n    electron_1.ipcRenderer.on(channel, (event, passedContextId, id, ...args) => {\n        if (event.senderId !== 0) {\n            console.error(`Message ${channel} sent by unexpected WebContents (${event.senderId})`);\n            return;\n        }\n        if (passedContextId === contextId) {\n            handler(id, ...args);\n        }\n        else {\n            // Message sent to an un-exist context, notify the error to main process.\n            electron_1.ipcRenderer.send(\"REMOTE_BROWSER_WRONG_CONTEXT_ERROR\" /* BROWSER_WRONG_CONTEXT_ERROR */, contextId, passedContextId, id);\n        }\n    });\n}\nconst enableStacks = process.argv.includes('--enable-api-filtering-logging');\nfunction getCurrentStack() {\n    const target = { stack: undefined };\n    if (enableStacks) {\n        Error.captureStackTrace(target, getCurrentStack);\n    }\n    return target.stack;\n}\n// Browser calls a callback in renderer.\nhandleMessage(\"REMOTE_RENDERER_CALLBACK\" /* RENDERER_CALLBACK */, (id, args) => {\n    callbacksRegistry.apply(id, metaToValue(args));\n});\n// A callback in browser is released.\nhandleMessage(\"REMOTE_RENDERER_RELEASE_CALLBACK\" /* RENDERER_RELEASE_CALLBACK */, (id) => {\n    callbacksRegistry.remove(id);\n});\nexports.require = (module) => {\n    const command = \"REMOTE_BROWSER_REQUIRE\" /* BROWSER_REQUIRE */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, module, getCurrentStack());\n    return metaToValue(meta);\n};\n// Alias to remote.require('electron').xxx.\nfunction getBuiltin(module) {\n    const command = \"REMOTE_BROWSER_GET_BUILTIN\" /* BROWSER_GET_BUILTIN */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, module, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getBuiltin = getBuiltin;\nfunction getCurrentWindow() {\n    const command = \"REMOTE_BROWSER_GET_CURRENT_WINDOW\" /* BROWSER_GET_CURRENT_WINDOW */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getCurrentWindow = getCurrentWindow;\n// Get current WebContents object.\nfunction getCurrentWebContents() {\n    const command = \"REMOTE_BROWSER_GET_CURRENT_WEB_CONTENTS\" /* BROWSER_GET_CURRENT_WEB_CONTENTS */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getCurrentWebContents = getCurrentWebContents;\n// Get a global object in browser.\nfunction getGlobal(name) {\n    const command = \"REMOTE_BROWSER_GET_GLOBAL\" /* BROWSER_GET_GLOBAL */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, name, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getGlobal = getGlobal;\n// Get the process object in browser.\nObject.defineProperty(exports, 'process', {\n    enumerable: true,\n    get: () => exports.getGlobal('process')\n});\n// Create a function that will return the specified value when called in browser.\nfunction createFunctionWithReturnValue(returnValue) {\n    const func = () => returnValue;\n    isReturnValue.add(func);\n    return func;\n}\nexports.createFunctionWithReturnValue = createFunctionWithReturnValue;\nconst addBuiltinProperty = (name) => {\n    Object.defineProperty(exports, name, {\n        enumerable: true,\n        get: () => exports.getBuiltin(name)\n    });\n};\nmodule_names_1.browserModuleNames\n    .forEach(addBuiltinProperty);\n","module.exports = require('../dist/src/renderer')\n","module.exports = require(\"child_process\");","module.exports = require(\"electron\");","module.exports = require(\"https\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Vec {\n    static isBlank(arr) { return arr == null || arr.length == 0; }\n    static notBlank(arr) { return arr != null && arr.length > 0; }\n    static safeArray(arr) { return arr == null ? [] : arr; }\n    static len(arr) { return arr == null ? 0 : arr.length; }\n    static arrayLength(arr) { return arr == null ? 0 : arr.length; }\n    static anyTrue(arr) {\n        if (arr == null)\n            return false;\n        for (let v of arr)\n            if (v)\n                return true;\n        return false;\n    }\n    static allTrue(arr) {\n        if (arr == null)\n            return true;\n        for (let v of arr)\n            if (!v)\n                return false;\n        return true;\n    }\n    static anyFalse(arr) {\n        if (arr == null)\n            return false;\n        for (let v of arr)\n            if (!v)\n                return true;\n        return false;\n    }\n    static allFalse(arr) {\n        if (arr == null)\n            return true;\n        for (let v of arr)\n            if (v)\n                return false;\n        return true;\n    }\n    static iterAnyTrue(arr, callback) {\n        for (let v of arr)\n            if (callback(v))\n                return true;\n        return false;\n    }\n    static iterAllTrue(arr, callback) {\n        for (let v of arr)\n            if (!callback(v))\n                return false;\n        return true;\n    }\n    static iterAnyFalse(arr, callback) {\n        for (let v of arr)\n            if (!callback(v))\n                return true;\n        return false;\n    }\n    static iterAllFalse(arr, callback) {\n        for (let v of arr)\n            if (callback(v))\n                return false;\n        return true;\n    }\n    static swap(arr, idx1, idx2) {\n        let v = arr[idx1];\n        arr[idx1] = arr[idx2];\n        arr[idx2] = v;\n    }\n    static duplicate(arr) {\n        return arr == null ? [] : arr.slice(0);\n    }\n    static append(arr, item) {\n        if (arr == null || arr.length == 0)\n            return [item];\n        arr = arr.slice(0);\n        arr.push(item);\n        return arr;\n    }\n    static prepend(arr, item) {\n        if (arr == null || arr.length == 0)\n            return [item];\n        arr = arr.slice(0);\n        arr.unshift(item);\n        return arr;\n    }\n    static concat(arr1, arr2) {\n        if (arr1 == null && arr2 == null)\n            return [];\n        if (arr1 == null)\n            return arr2.slice(0);\n        if (arr2 == null)\n            return arr1.slice(0);\n        return arr1.concat(arr2);\n    }\n    static remove(arr, idx) {\n        arr = arr.slice(0);\n        arr.splice(idx, 1);\n        return arr;\n    }\n    static flatten(mtx) {\n        let ret = [];\n        for (let vec of mtx)\n            ret.push(...vec);\n        return ret;\n    }\n    static transpose(mtx) {\n        let sz1 = mtx.length, sz2 = mtx[0].length;\n        let ret = Vec.anyArray(null, sz2);\n        for (let j = 0; j < sz2; j++) {\n            ret[j] = Vec.anyArray(null, sz1);\n            for (let i = 0; i < sz1; i++)\n                ret[j][i] = mtx[i][j];\n        }\n        return ret;\n    }\n    static equals(arr1, arr2) {\n        if (arr1 == null && arr2 == null)\n            return true;\n        if (arr1 == null || arr2 == null)\n            return false;\n        if (arr1.length != arr2.length)\n            return false;\n        for (let n = 0; n < arr1.length; n++)\n            if (arr1[n] != arr2[n])\n                return false;\n        return true;\n    }\n    static equivalent(arr1, arr2) {\n        const len1 = arr1 == null ? 0 : arr1.length, len2 = arr2 == null ? 0 : arr2.length;\n        if (len1 != len2)\n            return false;\n        for (let n = 0; n < len1; n++)\n            if (arr1[n] != arr2[n])\n                return false;\n        return true;\n    }\n    static compareTo(arr1, arr2) {\n        const sz = Math.max(arr1.length, arr2.length);\n        for (let n = 0; n < sz; n++) {\n            if (arr1[n] < arr2[n])\n                return -1;\n            if (arr1[n] > arr2[n])\n                return 1;\n        }\n        return 0;\n    }\n    static booleanArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static numberArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static stringArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static anyArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static genericArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static genericBlankArrays(sz) {\n        let arr = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            arr[n] = [];\n        return arr;\n    }\n    static funcArray(sz, func) {\n        let arr = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            arr[n] = func(n);\n        return arr;\n    }\n    static first(arr) { return arr == null || arr.length == 0 ? null : arr[0]; }\n    static last(arr) { return arr == null || arr.length == 0 ? null : arr[arr.length - 1]; }\n    static min(arr) {\n        if (arr == null || arr.length == 0)\n            return Number.MAX_VALUE;\n        let v = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            v = Math.min(v, arr[n]);\n        return v;\n    }\n    static max(arr) {\n        if (arr == null || arr.length == 0)\n            return Number.MIN_VALUE;\n        let v = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            v = Math.max(v, arr[n]);\n        return v;\n    }\n    static idxMin(arr) {\n        if (arr == null || arr.length == 0)\n            return -1;\n        let idx = 0;\n        for (let n = 1; n < arr.length; n++)\n            if (arr[n] < arr[idx])\n                idx = n;\n        return idx;\n    }\n    static idxMax(arr) {\n        if (arr == null || arr.length == 0)\n            return -1;\n        let idx = 0;\n        for (let n = 1; n < arr.length; n++)\n            if (arr[n] > arr[idx])\n                idx = n;\n        return idx;\n    }\n    static range(arr) {\n        if (arr == null || arr.length == 0)\n            return 0;\n        let lo = arr[0], hi = arr[0];\n        for (let n = 1; n < arr.length; n++) {\n            if (arr[n] < lo)\n                lo = arr[n];\n            if (arr[n] > hi)\n                hi = arr[n];\n        }\n        return hi - lo;\n    }\n    static reverse(arr) {\n        let ret = [];\n        for (let n = arr.length - 1; n >= 0; n--)\n            ret.push(arr[n]);\n        return ret;\n    }\n    static identity0(sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n;\n        return ret;\n    }\n    static identity1(sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n + 1;\n        return ret;\n    }\n    static identityN(start, sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n + start;\n        return ret;\n    }\n    static notMask(mask) {\n        let ret = new Array(mask.length);\n        for (let n = mask.length - 1; n >= 0; n--)\n            ret[n] = !mask[n];\n        return ret;\n    }\n    static idxGet(arr, idx) {\n        let ret = [];\n        for (let n = 0; n < idx.length; n++)\n            ret.push(arr[idx[n]]);\n        return ret;\n    }\n    static maskCount(mask) {\n        if (!mask)\n            return 0;\n        let c = 0;\n        for (let n = mask.length - 1; n >= 0; n--)\n            if (mask[n])\n                c++;\n        return c;\n    }\n    static maskIdx(mask) {\n        let idx = [];\n        for (let n = 0; n < mask.length; n++)\n            if (mask[n])\n                idx.push(n);\n        return idx;\n    }\n    static idxMask(idx, sz) {\n        let mask = Vec.booleanArray(false, sz);\n        for (let n of idx)\n            mask[n] = true;\n        return mask;\n    }\n    static maskMap(mask) {\n        let ret = [];\n        for (let n = 0, pos = 0; n < mask.length; n++)\n            ret.push(mask[n] ? pos++ : -1);\n        return ret;\n    }\n    static maskGet(arr, mask) {\n        let ret = [];\n        for (let n = 0, p = 0; n < arr.length; n++)\n            if (mask[n])\n                ret.push(arr[n]);\n        return ret;\n    }\n    static maskEqual(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] == arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] == val);\n        }\n        return ret;\n    }\n    static sum(arr) {\n        if (arr == null || arr.length == 0)\n            return 0;\n        let t = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            t += arr[n];\n        return t;\n    }\n    static add(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] + arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] + val);\n        }\n        return ret;\n    }\n    static sub(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] - arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] - val);\n        }\n        return ret;\n    }\n    static mul(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] * arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] * val);\n        }\n        return ret;\n    }\n    static neg(arr) {\n        let ret = arr.slice(0);\n        for (let n = ret.length - 1; n >= 0; n--)\n            ret[n] *= -1;\n        return ret;\n    }\n    static setTo(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] = val; }\n    static addTo(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] += val; }\n    static mulBy(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] *= val; }\n    static addToArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] += val[n]; }\n    static subFromArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] -= val[n]; }\n    static mulByArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] *= val[n]; }\n    static divByArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] /= val[n]; }\n    static idxSort(arr) {\n        let idx = new Array(arr.length);\n        for (let n = 0; n < arr.length; n++)\n            idx[n] = n;\n        idx.sort((a, b) => arr[a] < arr[b] ? -1 : arr[a] > arr[b] ? 1 : 0);\n        return idx;\n    }\n    static sort(arr) {\n        arr.sort((v1, v2) => v1 - v2);\n    }\n    static sorted(arr) {\n        arr = arr.slice(0);\n        this.sort(arr);\n        return arr;\n    }\n    static sortedUnique(arr) {\n        if (arr == null || arr.length == 0)\n            return [];\n        let unique = Vec.uniqueUnstable(arr);\n        if (typeof arr[0] == 'number')\n            this.sort(unique);\n        else\n            unique.sort();\n        return unique;\n    }\n    static uniqueUnstable(arr) {\n        return Array.from(new Set(arr));\n    }\n    static uniqueStable(arr) {\n        let set = new Set(arr), ret = [];\n        for (let v of arr)\n            if (set.has(v)) {\n                ret.push(v);\n                set.delete(v);\n            }\n        return ret;\n    }\n    static maskUnique(arr) {\n        let set = new Set(arr), ret = this.booleanArray(false, arr.length);\n        for (let n = 0; n < arr.length; n++)\n            if (set.has(arr[n])) {\n                ret[n] = true;\n                set.delete(arr[n]);\n            }\n        return ret;\n    }\n    static idxUnique(arr) {\n        let set = new Set(arr), ret = [];\n        for (let n = 0; n < arr.length; n++)\n            if (set.has(arr[n])) {\n                ret.push(n);\n                set.delete(arr[n]);\n            }\n        return ret;\n    }\n    static exclude(arr, excl) {\n        const sz = Vec.len(arr);\n        if (sz == 0)\n            return [];\n        let mask = new Array(sz);\n        let count = 0;\n        for (let n = 0; n < arr.length; n++) {\n            mask[n] = excl.indexOf(arr[n]) < 0;\n            if (mask[n])\n                count++;\n        }\n        if (count == sz)\n            return arr;\n        return Vec.maskGet(arr, mask);\n    }\n}\nexport class Permutation {\n    static parityPerms(idx) {\n        let v = Vec.booleanArray(false, idx.length);\n        let p = 0;\n        for (let i = idx.length - 1; i >= 0; i--) {\n            if (v[i])\n                p++;\n            else {\n                let j = i;\n                do {\n                    j = idx[j];\n                    v[j] = true;\n                } while (j != i);\n            }\n        }\n        return p;\n    }\n    static parityIdentity(idx) {\n        return this.parityPerms(idx) & 1;\n    }\n    static parityOrder(src) {\n        if (src.length <= 1)\n            return 0;\n        else if (src.length == 2)\n            return src[0] < src[1] ? 0 : 1;\n        else if (src.length == 3) {\n            let p = 1;\n            if (src[0] < src[1])\n                p++;\n            if (src[0] < src[2])\n                p++;\n            if (src[1] < src[2])\n                p++;\n            return p & 1;\n        }\n        else if (src.length == 4) {\n            let p = 0;\n            if (src[0] < src[1])\n                p++;\n            if (src[0] < src[2])\n                p++;\n            if (src[0] < src[3])\n                p++;\n            if (src[1] < src[2])\n                p++;\n            if (src[1] < src[3])\n                p++;\n            if (src[2] < src[3])\n                p++;\n            return p & 1;\n        }\n        let idx = [], sorted = src.slice(0);\n        sorted.sort();\n        for (let n = 0; n < src.length; n++)\n            idx.push(sorted.indexOf(src[n]));\n        return this.parityIdentity(idx);\n    }\n    static smallPermutation(sz) {\n        if (sz == 1)\n            return this.PERM1;\n        else if (sz == 2)\n            return this.PERM2;\n        else if (sz == 3)\n            return this.PERM3;\n        else if (sz == 4)\n            return this.PERM4;\n        else\n            return null;\n    }\n    static allPermutations(sz) {\n        if (sz <= this.SMALL_PERMS)\n            return this.smallPermutation(sz);\n        while (this.PERM_CACHE.length < this.MAX_CACHE - this.SMALL_PERMS)\n            this.PERM_CACHE.push(null);\n        if (sz < this.MAX_CACHE && this.PERM_CACHE[sz - this.SMALL_PERMS] != null)\n            return this.PERM_CACHE[sz - this.SMALL_PERMS];\n        let nperms = 1;\n        for (let n = 2; n <= sz; n++)\n            nperms *= n;\n        let perms = [];\n        let idx = Vec.identity0(sz);\n        perms.push(idx.slice(0));\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n < nperms; n++) {\n            nonunique: while (idx[0] < sz) {\n                idx[sz - 1]++;\n                for (let i = sz - 1; i > 0; i--) {\n                    if (idx[i] < sz)\n                        break;\n                    idx[i] = 0;\n                    idx[i - 1]++;\n                }\n                Vec.setTo(mask, false);\n                for (let i of idx) {\n                    if (mask[i])\n                        continue nonunique;\n                    mask[i] = true;\n                }\n                perms[n] = idx.slice(0);\n                break;\n            }\n        }\n        if (sz < this.MAX_CACHE)\n            this.PERM_CACHE[sz - this.SMALL_PERMS] = perms;\n        return perms;\n    }\n}\nPermutation.PERM1 = [[0]];\nPermutation.PERM2 = [[0, 1], [1, 0]];\nPermutation.PERM3 = [[0, 1, 2], [0, 2, 1], [1, 0, 2], [1, 2, 0], [2, 0, 1], [2, 1, 0]];\nPermutation.PERM4 = [\n    [0, 1, 2, 3], [0, 1, 3, 2], [0, 2, 1, 3], [0, 2, 3, 1], [0, 3, 1, 2], [0, 3, 2, 1],\n    [1, 0, 2, 3], [1, 0, 3, 2], [1, 2, 0, 3], [1, 2, 3, 0], [1, 3, 0, 2], [1, 3, 2, 0],\n    [2, 0, 1, 3], [2, 0, 3, 1], [2, 1, 0, 3], [2, 1, 3, 0], [2, 3, 0, 1], [2, 3, 1, 0],\n    [3, 0, 1, 2], [3, 0, 2, 1], [3, 1, 0, 2], [3, 1, 2, 0], [3, 2, 0, 1], [3, 2, 1, 0]\n];\nPermutation.SMALL_PERMS = 4;\nPermutation.MAX_CACHE = 8;\nPermutation.PERM_CACHE = [];\n//# sourceMappingURL=Vec.js.map","import { Vec } from './Vec';\nexport class Matrix {\n    constructor(m, n, s = 0) {\n        this.m = m;\n        this.n = n;\n        if (m == 0)\n            return;\n        this.A = new Array(m);\n        for (let i = 0; i < m; i++)\n            this.A[i] = Vec.numberArray(s, n);\n    }\n    static fromArray(A) {\n        let mtx = new Matrix(0, 0);\n        mtx.A = A;\n        mtx.m = A.length;\n        mtx.n = A[0].length;\n        return mtx;\n    }\n    clone() {\n        const { A, m, n } = this;\n        let mtx = new Matrix(m, n);\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                mtx.A[i][j] = A[i][j];\n        return mtx;\n    }\n    get numRows() { return this.m; }\n    get numCols() { return this.n; }\n    get(i, j) { return this.A[i][j]; }\n    set(i, j, v) { this.A[i][j] = v; }\n    transpose() {\n        const { A, m, n } = this;\n        let X = new Matrix(n, m);\n        const C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[j][i] = A[i][j];\n        return X;\n    }\n    norm1() {\n        const { A, m, n } = this;\n        let f = 0;\n        for (let j = 0; j < n; j++) {\n            let s = 0;\n            for (let i = 0; i < m; i++)\n                s += Math.abs(A[i][j]);\n            f = Math.max(f, s);\n        }\n        return f;\n    }\n    normInf() {\n        const { A, m, n } = this;\n        let f = 0;\n        for (let i = 0; i < m; i++) {\n            let s = 0;\n            for (let j = 0; j < n; j++)\n                s += Math.abs(A[i][j]);\n            f = Math.max(f, s);\n        }\n        return f;\n    }\n    uminus() {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = -A[i][j];\n        return X;\n    }\n    plus(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] + B.A[i][j];\n        return X;\n    }\n    plusEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] + B.A[i][j];\n        return this;\n    }\n    minus(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] - B.A[i][j];\n        return X;\n    }\n    minusEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] - B.A[i][j];\n        return this;\n    }\n    arrayTimes(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] * B.A[i][j];\n        return X;\n    }\n    arrayTimesEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] * B.A[i][j];\n        return this;\n    }\n    arrayRightDivide(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] / B.A[i][j];\n        return X;\n    }\n    arrayRightDivideEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] / B.A[i][j];\n        return this;\n    }\n    arrayLeftDivide(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = B.A[i][j] / A[i][j];\n        return X;\n    }\n    arrayLeftDivideEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = B.A[i][j] / A[i][j];\n        return this;\n    }\n    scalarTimes(s) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = s * A[i][j];\n        return X;\n    }\n    scalarTimesEquals(s) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = s * A[i][j];\n        return this;\n    }\n    times(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, B.n);\n        let C = X.A, Bcolj = new Array(n);\n        for (let j = 0; j < B.n; j++) {\n            for (let k = 0; k < n; k++)\n                Bcolj[k] = B.A[k][j];\n            for (let i = 0; i < m; i++) {\n                let Arowi = A[i];\n                let s = 0;\n                for (let k = 0; k < n; k++)\n                    s += Arowi[k] * Bcolj[k];\n                C[i][j] = s;\n            }\n        }\n        return X;\n    }\n    rank() {\n        return new SingularValueDecomposition(this).rank();\n    }\n    cond() {\n        return new SingularValueDecomposition(this).cond();\n    }\n    trace() {\n        const { A, m, n } = this;\n        let t = 0;\n        for (let i = 0; i < Math.min(m, n); i++) {\n            t += A[i][i];\n        }\n        return t;\n    }\n    static identity(m, n) {\n        let mtx = new Matrix(m, n);\n        let A = mtx.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = (i == j ? 1.0 : 0.0);\n        return mtx;\n    }\n    toString() {\n        let lines = ['['];\n        for (let row of this.A)\n            lines.push(JSON.stringify(row));\n        lines.push(']');\n        return lines.join('\\n');\n    }\n}\nexport class SingularValueDecomposition {\n    constructor(mtx) {\n        let A = mtx.A;\n        let m = this.m = mtx.m;\n        let n = this.n = mtx.n;\n        let nu = Math.min(m, n);\n        let s = this.s = new Array(Math.min(m + 1, n));\n        let U = this.U = new Array(m);\n        let V = this.V = new Array(n);\n        for (let i = 0; i < m; i++)\n            U[i] = Vec.numberArray(0, nu);\n        for (let j = 0; j < n; j++)\n            V[j] = Vec.numberArray(0, n);\n        let e = new Array(n);\n        let work = new Array(m);\n        let wantu = true, wantv = true;\n        let nct = Math.min(m - 1, n);\n        let nrt = Math.max(0, Math.min(n - 2, m));\n        for (let k = 0; k < Math.max(nct, nrt); k++) {\n            if (k < nct) {\n                s[k] = 0;\n                for (let i = k; i < m; i++)\n                    s[k] = SingularValueDecomposition.hypot(s[k], A[i][k]);\n                if (s[k] != 0.0) {\n                    if (A[k][k] < 0.0)\n                        s[k] = -s[k];\n                    for (let i = k; i < m; i++)\n                        A[i][k] /= s[k];\n                    A[k][k] += 1.0;\n                }\n                s[k] = -s[k];\n            }\n            for (let j = k + 1; j < n; j++) {\n                if ((k < nct) && (s[k] != 0.0)) {\n                    let t = 0;\n                    for (let i = k; i < m; i++)\n                        t += A[i][k] * A[i][j];\n                    t = -t / A[k][k];\n                    for (let i = k; i < m; i++)\n                        A[i][j] += t * A[i][k];\n                }\n                e[j] = A[k][j];\n            }\n            if (wantu && (k < nct)) {\n                for (let i = k; i < m; i++)\n                    U[i][k] = A[i][k];\n            }\n            if (k < nrt) {\n                e[k] = 0;\n                for (let i = k + 1; i < n; i++)\n                    e[k] = SingularValueDecomposition.hypot(e[k], e[i]);\n                if (e[k] != 0.0) {\n                    if (e[k + 1] < 0.0)\n                        e[k] = -e[k];\n                    for (let i = k + 1; i < n; i++)\n                        e[i] /= e[k];\n                    e[k + 1] += 1.0;\n                }\n                e[k] = -e[k];\n                if ((k + 1 < m) && (e[k] != 0.0)) {\n                    for (let i = k + 1; i < m; i++)\n                        work[i] = 0.0;\n                    for (let j = k + 1; j < n; j++)\n                        for (let i = k + 1; i < m; i++)\n                            work[i] += e[j] * A[i][j];\n                    for (let j = k + 1; j < n; j++) {\n                        let t = -e[j] / e[k + 1];\n                        for (let i = k + 1; i < m; i++)\n                            A[i][j] += t * work[i];\n                    }\n                }\n                if (wantv) {\n                    for (let i = k + 1; i < n; i++)\n                        V[i][k] = e[i];\n                }\n            }\n        }\n        let p = Math.min(n, m + 1);\n        if (nct < n)\n            s[nct] = A[nct][nct];\n        if (m < p)\n            s[p - 1] = 0.0;\n        if (nrt + 1 < p)\n            e[nrt] = A[nrt][p - 1];\n        e[p - 1] = 0.0;\n        if (wantu) {\n            for (let j = nct; j < nu; j++) {\n                for (let i = 0; i < m; i++)\n                    U[i][j] = 0.0;\n                U[j][j] = 1.0;\n            }\n            for (let k = nct - 1; k >= 0; k--) {\n                if (s[k] != 0.0) {\n                    for (let j = k + 1; j < nu; j++) {\n                        let t = 0;\n                        for (let i = k; i < m; i++)\n                            t += U[i][k] * U[i][j];\n                        t = -t / U[k][k];\n                        for (let i = k; i < m; i++)\n                            U[i][j] += t * U[i][k];\n                    }\n                    for (let i = k; i < m; i++)\n                        U[i][k] = -U[i][k];\n                    U[k][k] = 1.0 + U[k][k];\n                    for (let i = 0; i < k - 1; i++)\n                        U[i][k] = 0.0;\n                }\n                else {\n                    for (let i = 0; i < m; i++)\n                        U[i][k] = 0.0;\n                    U[k][k] = 1.0;\n                }\n            }\n        }\n        if (wantv) {\n            for (let k = n - 1; k >= 0; k--) {\n                if ((k < nrt) && (e[k] != 0.0)) {\n                    for (let j = k + 1; j < nu; j++) {\n                        let t = 0;\n                        for (let i = k + 1; i < n; i++)\n                            t += V[i][k] * V[i][j];\n                        t = -t / V[k + 1][k];\n                        for (let i = k + 1; i < n; i++)\n                            V[i][j] += t * V[i][k];\n                    }\n                }\n                for (let i = 0; i < n; i++)\n                    V[i][k] = 0.0;\n                V[k][k] = 1.0;\n            }\n        }\n        let pp = p - 1;\n        let iter = 0;\n        let eps = Math.pow(2.0, -52.0);\n        let tiny = Math.pow(2.0, -966.0);\n        while (p > 0) {\n            let k, kase;\n            for (k = p - 2; k >= -1; k--) {\n                if (k == -1)\n                    break;\n                if (Math.abs(e[k]) <= tiny + eps * (Math.abs(s[k]) + Math.abs(s[k + 1]))) {\n                    e[k] = 0.0;\n                    break;\n                }\n            }\n            if (k == p - 2) {\n                kase = 4;\n            }\n            else {\n                let ks;\n                for (ks = p - 1; ks >= k; ks--) {\n                    if (ks == k)\n                        break;\n                    let t = (ks != p ? Math.abs(e[ks]) : 0.) + (ks != k + 1 ? Math.abs(e[ks - 1]) : 0.);\n                    if (Math.abs(s[ks]) <= tiny + eps * t) {\n                        s[ks] = 0.0;\n                        break;\n                    }\n                }\n                if (ks == k)\n                    kase = 3;\n                else if (ks == p - 1)\n                    kase = 1;\n                else {\n                    kase = 2;\n                    k = ks;\n                }\n            }\n            k++;\n            if (kase == 1) {\n                let f = e[p - 2];\n                e[p - 2] = 0.0;\n                for (let j = p - 2; j >= k; j--) {\n                    let t = SingularValueDecomposition.hypot(s[j], f);\n                    let cs = s[j] / t;\n                    let sn = f / t;\n                    s[j] = t;\n                    if (j != k) {\n                        f = -sn * e[j - 1];\n                        e[j - 1] = cs * e[j - 1];\n                    }\n                    if (wantv) {\n                        for (let i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][p - 1];\n                            V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                            V[i][j] = t;\n                        }\n                    }\n                }\n            }\n            else if (kase == 2) {\n                let f = e[k - 1];\n                e[k - 1] = 0.0;\n                for (let j = k; j < p; j++) {\n                    let t = SingularValueDecomposition.hypot(s[j], f);\n                    let cs = s[j] / t;\n                    let sn = f / t;\n                    s[j] = t;\n                    f = -sn * e[j];\n                    e[j] = cs * e[j];\n                    if (wantu) {\n                        for (let i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][k - 1];\n                            U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n            }\n            else if (kase == 3) {\n                let scale = Math.max(Math.max(Math.max(Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2])), Math.abs(e[p - 2])), Math.abs(s[k])), Math.abs(e[k]));\n                let sp = s[p - 1] / scale;\n                let spm1 = s[p - 2] / scale;\n                let epm1 = e[p - 2] / scale;\n                let sk = s[k] / scale;\n                let ek = e[k] / scale;\n                let b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2.0;\n                let c = (sp * epm1) * (sp * epm1);\n                let shift = 0.0;\n                if ((b != 0.0) || (c != 0.0)) {\n                    shift = Math.sqrt(b * b + c);\n                    if (b < 0.0)\n                        shift = -shift;\n                    shift = c / (b + shift);\n                }\n                let f = (sk + sp) * (sk - sp) + shift;\n                let g = sk * ek;\n                for (let j = k; j < p - 1; j++) {\n                    let t = SingularValueDecomposition.hypot(f, g);\n                    let cs = f / t;\n                    let sn = g / t;\n                    if (j != k)\n                        e[j - 1] = t;\n                    f = cs * s[j] + sn * e[j];\n                    e[j] = cs * e[j] - sn * s[j];\n                    g = sn * s[j + 1];\n                    s[j + 1] = cs * s[j + 1];\n                    if (wantv) {\n                        for (let i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][j + 1];\n                            V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                            V[i][j] = t;\n                        }\n                    }\n                    t = SingularValueDecomposition.hypot(f, g);\n                    cs = f / t;\n                    sn = g / t;\n                    s[j] = t;\n                    f = cs * e[j] + sn * s[j + 1];\n                    s[j + 1] = -sn * e[j] + cs * s[j + 1];\n                    g = sn * e[j + 1];\n                    e[j + 1] = cs * e[j + 1];\n                    if (wantu && (j < m - 1)) {\n                        for (let i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][j + 1];\n                            U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n                e[p - 2] = f;\n                iter = iter + 1;\n            }\n            else if (kase == 4) {\n                if (s[k] <= 0.0) {\n                    s[k] = (s[k] < 0.0 ? -s[k] : 0.0);\n                    if (wantv) {\n                        for (let i = 0; i <= pp; i++)\n                            V[i][k] = -V[i][k];\n                    }\n                }\n                while (k < pp) {\n                    if (s[k] >= s[k + 1])\n                        break;\n                    let t = s[k];\n                    s[k] = s[k + 1];\n                    s[k + 1] = t;\n                    if (wantv && (k < n - 1)) {\n                        for (let i = 0; i < n; i++) {\n                            t = V[i][k + 1];\n                            V[i][k + 1] = V[i][k];\n                            V[i][k] = t;\n                        }\n                    }\n                    if (wantu && (k < m - 1)) {\n                        for (let i = 0; i < m; i++) {\n                            t = U[i][k + 1];\n                            U[i][k + 1] = U[i][k];\n                            U[i][k] = t;\n                        }\n                    }\n                    k++;\n                }\n                iter = 0;\n                p--;\n            }\n        }\n    }\n    getU() {\n        return Matrix.fromArray(this.U);\n    }\n    getV() {\n        return Matrix.fromArray(this.V);\n    }\n    getSingularValues() {\n        return this.s;\n    }\n    getS() {\n        const { n } = this;\n        let X = new Matrix(n, n, 0);\n        let S = X.A;\n        for (let i = 0; i < n; i++)\n            S[i][i] = this.s[i];\n        return X;\n    }\n    norm2() {\n        return this.s[0];\n    }\n    cond() {\n        const { m, n, s } = this;\n        return s[0] / s[Math.min(m, n) - 1];\n    }\n    rank() {\n        const { m, n, s } = this;\n        let eps = Math.pow(2.0, -52.0);\n        let tol = Math.max(m, n) * s[0] * eps;\n        let r = 0;\n        for (let i = 0; i < s.length; i++)\n            if (s[i] > tol)\n                r++;\n        return r;\n    }\n    static hypot(a, b) {\n        let r;\n        if (Math.abs(a) > Math.abs(b)) {\n            r = b / a;\n            r = Math.abs(a) * Math.sqrt(1 + r * r);\n        }\n        else if (b != 0) {\n            r = a / b;\n            r = Math.abs(b) * Math.sqrt(1 + r * r);\n        }\n        else {\n            r = 0.0;\n        }\n        return r;\n    }\n}\n//# sourceMappingURL=Matrix.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { dom, domLegacy } from './dom';\nimport { Size } from './Geom';\nimport { Vec } from './Vec';\nexport function safeInt(str, def = 0) {\n    if (str == null || str.length == 0)\n        return def;\n    let val = str.startsWith('0x') ? parseInt(str.substring(2), 16) :\n        str.startsWith('#') ? parseInt(str.substring(1), 16) : parseInt(str);\n    return isNaN(val) ? def : val;\n}\nexport function safeFloat(str, def = 0) {\n    if (str == null || str.length == 0)\n        return def;\n    let val = parseFloat(str);\n    return isNaN(val) ? def : val;\n}\nexport function newElement(parent, tag, attr) {\n    let domNew = dom(`<${tag}/>`);\n    if (attr)\n        domNew.attr(attr);\n    domLegacy(parent).append(domNew);\n    return domNew.el;\n}\nexport function addText(parent, text) {\n    let el = dom(parent).el;\n    el.appendChild(document.createTextNode(text));\n}\nexport function plural(count) {\n    return count == 1 ? '' : 's';\n}\nexport function formatDouble(value, sigfig) {\n    if (value == null)\n        return '';\n    let str = value.toPrecision(sigfig);\n    if (str.indexOf('.') > 0) {\n        while (str.endsWith('0'))\n            str = str.substring(0, str.length - 1);\n        if (str.endsWith('.'))\n            str = str.substring(0, str.length - 1);\n    }\n    return str;\n}\nexport function htmlToRGB(col) {\n    if (col == null || col.charAt(0) != '#' || col.length != 7)\n        return null;\n    return parseInt(col.substring(1), 16);\n}\nexport function colourCode(col) {\n    let hex = (col & 0xFFFFFF).toString(16);\n    while (hex.length < 6)\n        hex = '0' + hex;\n    return '#' + hex;\n}\nexport function colourAlpha(col) {\n    let transp = (col >>> 24) & 0xFF;\n    return transp == 0 ? 1 : transp == 0xFF ? 0 : 1 - (transp * (1.0 / 255));\n}\nconst ONE_OVER_255 = 1.0 / 255;\nexport function colourCanvas(col) {\n    if (col == 0xFFFFFF)\n        return 'white';\n    if (col == 0x000000)\n        return 'black';\n    if (col == -1)\n        return null;\n    if (col >= 0 && col <= 0xFFFFFF)\n        return colourCode(col);\n    const t = ((col >> 24) & 0xFF) * ONE_OVER_255;\n    const r = ((col >> 16) & 0xFF);\n    const g = ((col >> 8) & 0xFF);\n    const b = (col & 0xFF);\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + (1 - t) + ')';\n}\nexport function blendRGB(fract, rgb1, rgb2, rgb3) {\n    fract = Math.max(0, Math.min(1, fract));\n    let r1 = ((rgb1 >> 16) & 0xFF) * ONE_OVER_255, g1 = ((rgb1 >> 8) & 0xFF) * ONE_OVER_255, b1 = (rgb1 & 0xFF) * ONE_OVER_255;\n    let r2 = ((rgb2 >> 16) & 0xFF) * ONE_OVER_255, g2 = ((rgb2 >> 8) & 0xFF) * ONE_OVER_255, b2 = (rgb2 & 0xFF) * ONE_OVER_255;\n    let R, G, B;\n    if (rgb3 == null) {\n        let f1 = 1 - fract, f2 = fract;\n        R = Math.round(0xFF * (f1 * r1 + f2 * r2));\n        G = Math.round(0xFF * (f1 * g1 + f2 * g2));\n        B = Math.round(0xFF * (f1 * b1 + f2 * b2));\n    }\n    else {\n        let r3 = ((rgb3 >> 16) & 0xFF) * ONE_OVER_255, g3 = ((rgb3 >> 8) & 0xFF) * ONE_OVER_255, b3 = (rgb3 & 0xFF) * ONE_OVER_255;\n        if (fract < 0.5) {\n            let f2 = fract * 2, f1 = 1 - f2;\n            R = Math.round(0xFF * (f1 * r1 + f2 * r2));\n            G = Math.round(0xFF * (f1 * g1 + f2 * g2));\n            B = Math.round(0xFF * (f1 * b1 + f2 * b2));\n        }\n        else {\n            let f2 = (fract - 0.5) * 2, f1 = 1 - f2;\n            R = Math.round(0xFF * (f1 * r2 + f2 * r3));\n            G = Math.round(0xFF * (f1 * g2 + f2 * g3));\n            B = Math.round(0xFF * (f1 * b2 + f2 * b3));\n        }\n    }\n    return (R << 16) | (G << 8) | B;\n}\nexport function formatDate(date) {\n    const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    let day = date.getDate(), mon = date.getMonth(), year = date.getFullYear();\n    return day + '-' + MONTHS[mon] + '-' + year;\n}\nexport function nodeText(node) {\n    let ret = '';\n    if (!node)\n        return '';\n    node = node.firstChild;\n    while (node) {\n        if (node.nodeType == 3 || node.nodeType == 4)\n            ret += node.nodeValue;\n        node = node.nextSibling;\n    }\n    return ret;\n}\nexport function isDef(v) {\n    return !(v === null || typeof v === 'undefined');\n}\nexport function notDef(v) {\n    return v === null || typeof v === 'undefined';\n}\nexport function eventCoords(event, container) {\n    let pos = domLegacy(container).offset();\n    let relX = event.pageX - pos.x;\n    let relY = event.pageY - pos.y;\n    return [relX, relY];\n}\nexport function setBoundaryPixels(dom, x, y, w, h) {\n    dom.css({ 'left': x + 'px', 'top': y + 'px', 'width': w + 'px', 'height': h + 'px' });\n}\nexport function getBoundaryPixelsDOM(dom) {\n    let offset = dom.offset();\n    return [offset.x, offset.y, dom.width(), dom.height()];\n}\nexport function getOffsetPixelsDOM(dom) {\n    return [dom.elHTML.offsetLeft, dom.elHTML.offsetTop, dom.elHTML.offsetWidth, dom.elHTML.offsetHeight];\n}\nexport function norm_xy(dx, dy) {\n    return Math.hypot(dx, dy);\n}\nexport function norm_xyz(dx, dy, dz) {\n    return Math.hypot(dx, dy, dz);\n}\nexport function norm2_xy(dx, dy) {\n    return dx * dx + dy * dy;\n}\nexport function norm2_xyz(dx, dy, dz) {\n    return dx * dx + dy * dy + dz * dz;\n}\nexport function signum(v) {\n    return v < 0 ? -1 : v > 0 ? 1 : 0;\n}\nexport function sqr(v) {\n    return v * v;\n}\nexport function invZ(v) { return v == 0 ? 0 : 1.0 / v; }\nexport function fltEqual(v1, v2) { return v1 == v2 || Math.abs(v1 - v2) <= 1E-7 * Math.max(v1, v2); }\nexport function realEqual(v1, v2) { return v1 == v2 || Math.abs(v1 - v2) <= 1E-14 * Math.max(v1, v2); }\nexport function randomInt(size) {\n    if (size <= 1)\n        return 0;\n    return Math.floor(Math.random() * size);\n}\nexport const TWOPI = 2 * Math.PI;\nexport const INV_TWOPI = 1.0 / TWOPI;\nexport const DEGRAD = Math.PI / 180;\nexport const RADDEG = 180 / Math.PI;\nexport function angleNorm(th) {\n    if (th == -Math.PI)\n        return Math.PI;\n    if (th < -Math.PI) {\n        let mod = Math.ceil((-th - Math.PI) * INV_TWOPI);\n        return th + mod * TWOPI;\n    }\n    if (th > Math.PI) {\n        let mod = Math.ceil((th - Math.PI) * INV_TWOPI);\n        return th - mod * TWOPI;\n    }\n    return th;\n}\nexport function angleDiff(th1, th2) {\n    let theta = angleNorm(th1) - angleNorm(th2);\n    return theta - (theta > Math.PI ? TWOPI : 0) + (theta <= -Math.PI ? TWOPI : 0);\n}\nexport function angleDiffPos(th1, th2) {\n    let theta = angleNorm(th1) - angleNorm(th2);\n    return theta + (theta < 0 ? TWOPI : 0);\n}\nexport function sortAngles(theta) {\n    if (theta == null || theta.length < 2)\n        return theta;\n    theta = theta.slice(0);\n    for (let n = 0; n < theta.length; n++)\n        theta[n] = angleNorm(theta[n]);\n    Vec.sort(theta);\n    while (true) {\n        let a = theta[theta.length - 1], b = theta[0], c = theta[1];\n        if (angleDiff(b, a) <= angleDiff(c, b))\n            break;\n        for (let n = theta.length - 1; n > 0; n--)\n            theta[n] = theta[n - 1];\n        theta[0] = a;\n    }\n    return theta;\n}\nexport function uniqueAngles(theta, threshold) {\n    theta = sortAngles(theta);\n    for (let n = 1; n < theta.length; n++) {\n        if (Math.abs(angleDiff(theta[n], theta[n - 1])) <= threshold) {\n            theta.splice(n, 1);\n            n--;\n        }\n    }\n    return theta;\n}\nexport function minArray(a) {\n    if (a == null || a.length == 0)\n        return 0;\n    let v = a[0];\n    for (let n = 1; n < a.length; n++)\n        v = Math.min(v, a[n]);\n    return v;\n}\nexport function maxArray(a) {\n    if (a == null || a.length == 0)\n        return 0;\n    let v = a[0];\n    for (let n = 1; n < a.length; n++)\n        v = Math.max(v, a[n]);\n    return v;\n}\nexport function findNode(parent, name) {\n    if (parent == null)\n        return null;\n    let node = parent.firstChild;\n    while (node) {\n        if (node.nodeName == name)\n            return node;\n        node = node.nextSibling;\n    }\n    return null;\n}\nexport function findNodes(parent, name) {\n    if (parent == null)\n        return null;\n    let node = parent.firstChild;\n    let list = [];\n    while (node) {\n        if (node.nodeName == name)\n            list.push(node);\n        node = node.nextSibling;\n    }\n    return list;\n}\nexport function pathRoundedRect(x1, y1, x2, y2, rad) {\n    let path = new Path2D();\n    path.moveTo(x2 - rad, y1);\n    path.quadraticCurveTo(x2, y1, x2, y1 + rad);\n    path.lineTo(x2, y2 - rad);\n    path.quadraticCurveTo(x2, y2, x2 - rad, y2);\n    path.lineTo(x1 + rad, y2);\n    path.quadraticCurveTo(x1, y2, x1, y2 - rad);\n    path.lineTo(x1, y1 + rad);\n    path.quadraticCurveTo(x1, y1, x1 + rad, y1);\n    path.closePath();\n    return path;\n}\nexport function coordsRoundedRect(x1, y1, x2, y2, rad) {\n    let px = [x2 - rad, x2, x2, x2, x2, x2 - rad, x1 + rad, x1, x1, x1, x1, x1 + rad];\n    let py = [y1, y1, y1 + rad, y2 - rad, y2, y2, y2, y2, y2 - rad, y1 + rad, y1, y1];\n    let ctrl = [false, true, false, false, true, false, false, true, false, false, true, false];\n    return [px, py, ctrl];\n}\nexport function drawLine(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\nexport const ASCENT_FUDGE = 1.4;\nexport function fontSansSerif(ascent) { return `${ascent * ASCENT_FUDGE}px sans-serif`; }\nexport function pixelDensity() {\n    if ('devicePixelRatio' in window && window.devicePixelRatio > 1)\n        return window.devicePixelRatio;\n    return 1;\n}\nexport function clone(data) {\n    if (data == null)\n        return null;\n    if (Array.isArray(data))\n        return data.slice(0);\n    if (typeof data != 'object')\n        return data;\n    let result = {};\n    for (let key in data)\n        result[key] = data[key];\n    return result;\n}\nexport function deepClone(data) {\n    if (data == null)\n        return null;\n    if (typeof data == 'function')\n        return null;\n    if (typeof data != 'object')\n        return data;\n    let result = Array.isArray(data) ? [] : {};\n    for (let key in data) {\n        let val = data[key];\n        result[key] = typeof val === 'object' ? deepClone(val) : val;\n    }\n    return result;\n}\nexport function escapeHTML(text) {\n    if (!text)\n        return '';\n    const map = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#039;' };\n    return text.replace(/[&<>\"']/g, (m) => map[m]);\n}\nexport function orBlank(str) { return str == null ? '' : str; }\nexport function dictValues(dict) {\n    let list = [];\n    for (let key in dict)\n        list.push(dict[key]);\n    return list;\n}\nexport function zip(u, v) {\n    return u.map((a, i) => [a, v[i]]);\n}\nexport function toUTF8(str) {\n    let data = [], stripe = '';\n    const sz = str.length;\n    for (let n = 0; n < sz; n++) {\n        let charcode = str.charCodeAt(n);\n        if (charcode < 0x80)\n            stripe += str.charAt(n);\n        else if (charcode < 0x800) {\n            stripe += String.fromCharCode(0xc0 | (charcode >> 6));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n            stripe += String.fromCharCode(0xe0 | (charcode >> 12));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3F));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        else {\n            n++;\n            charcode = 0x10000 + (((charcode & 0x3FF) << 10) | (str.charCodeAt(n) & 0x3FF));\n            stripe += String.fromCharCode(0xf0 | (charcode >> 18));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 12) & 0x3F));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3F));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        if (stripe.length > 100) {\n            data.push(stripe);\n            stripe = '';\n        }\n    }\n    data.push(stripe);\n    return data.join('');\n}\nexport function fromUTF8(str) {\n    let data = [], stripe = '';\n    const sz = str.length;\n    for (let n = 0; n < sz; n++) {\n        let value = str.charCodeAt(n);\n        if (value < 0x80)\n            stripe += str.charAt(n);\n        else if (value > 0xBF && value < 0xE0) {\n            stripe += String.fromCharCode((value & 0x1F) << 6 | str.charCodeAt(n + 1) & 0x3F);\n            n++;\n        }\n        else if (value > 0xDF && value < 0xF0) {\n            str += String.fromCharCode((value & 0x0F) << 12 | (str.charCodeAt(n + 1) & 0x3F) << 6 | str.charCodeAt(n + 2) & 0x3F);\n            n += 2;\n        }\n        else {\n            let charCode = ((value & 0x07) << 18 | (str.charCodeAt(n + 1) & 0x3F) << 12 | (str.charCodeAt(n + 2) & 0x3F) << 6 | str.charCodeAt(n + 3) & 0x3F) - 0x010000;\n            stripe += String.fromCharCode(charCode >> 10 | 0xD800, charCode & 0x03FF | 0xDC00);\n            n += 3;\n        }\n        if (stripe.length > 100) {\n            data.push(stripe);\n            stripe = '';\n        }\n    }\n    data.push(stripe);\n    return data.join('');\n}\nexport function jsonPrettyPrint(json) {\n    let lines = JSON.stringify(json, null, 1).split(/\\n/);\n    for (let n = 0; n < lines.length; n++) {\n        lines[n] = lines[n].trim();\n        if (lines[n].length > 1 && (lines[n].endsWith('{') || lines[n].endsWith('['))) {\n            let ch = lines[n].charAt(lines[n].length - 1);\n            lines[n] = lines[n].substring(0, lines[n].length - 1);\n            lines.splice(n + 1, 0, ch);\n            n--;\n        }\n    }\n    let indent = 0;\n    for (let n = 0; n < lines.length; n++) {\n        let orig = lines[n];\n        if (orig == ']' || orig == '}' || orig == '],' || orig == '},')\n            indent--;\n        lines[n] = '\\t'.repeat(indent) + orig;\n        if (orig == '[' || orig == '{')\n            indent++;\n    }\n    return lines.join('\\n');\n}\nexport var KeyCode;\n(function (KeyCode) {\n    KeyCode[\"Backspace\"] = \"Backspace\";\n    KeyCode[\"Tab\"] = \"Tab\";\n    KeyCode[\"Enter\"] = \"Enter\";\n    KeyCode[\"Escape\"] = \"Escape\";\n    KeyCode[\"Space\"] = \" \";\n    KeyCode[\"PageUp\"] = \"PageUp\";\n    KeyCode[\"PageDown\"] = \"PageDown\";\n    KeyCode[\"End\"] = \"End\";\n    KeyCode[\"Home\"] = \"Home\";\n    KeyCode[\"Left\"] = \"ArrowLeft\";\n    KeyCode[\"Right\"] = \"ArrowRight\";\n    KeyCode[\"Up\"] = \"ArrowUp\";\n    KeyCode[\"Down\"] = \"ArrowDown\";\n    KeyCode[\"Delete\"] = \"Delete\";\n    KeyCode[\"Insert\"] = \"Insert\";\n})(KeyCode || (KeyCode = {}));\nexport function readTextURL(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            let request = new XMLHttpRequest();\n            request.open('GET', url.toString(), true);\n            request.responseType = 'text';\n            request.onload = () => resolve(request.response.toString());\n            request.onerror = () => resolve(null);\n            request.send();\n        });\n    });\n}\nexport function postJSONURL(url, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            let request = new XMLHttpRequest();\n            request.open('POST', url.toString(), true);\n            request.responseType = 'text';\n            request.onload = () => {\n                let txt = request.response.toString();\n                try {\n                    resolve(JSON.parse(txt));\n                }\n                catch (ex) {\n                    let snippet = txt.substring(0, Math.min(200, txt.length)) + (txt.length > 200 ? '...etc...' : '');\n                    reject('JSON parsing error on result:' + ex + ' for text: ' + snippet);\n                }\n            };\n            request.onerror = () => reject('Failed to request URL: ' + url);\n            request.send(JSON.stringify(params));\n        });\n    });\n}\nexport function yieldDOM() {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => setTimeout(() => resolve()));\n    });\n}\nexport function pause(seconds) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => setTimeout(() => resolve(), seconds * 1000));\n    });\n}\nlet staticScrollerSize = null;\nexport function empiricalScrollerSize() {\n    if (staticScrollerSize)\n        return staticScrollerSize;\n    let outer = dom('<div/>').css({ 'visibility': 'hidden', 'width': '100px', 'height': '100px', 'overflow': 'scroll' }).appendTo(dom(document.body));\n    let inner = dom('<div/>').css({ 'width': '100%', 'height': '100%' }).appendTo(outer);\n    staticScrollerSize = new Size(100 - inner.elHTML.offsetWidth, 100 - inner.elHTML.offsetHeight);\n    outer.remove();\n    return staticScrollerSize;\n}\nexport function stringSimilarityPermutations(str1, str2) {\n    if (!str1 || !str2)\n        return 0;\n    const ch1 = Array.from(str1), len1 = ch1.length;\n    const ch2 = Array.from(str2), len2 = ch2.length;\n    let levenshteinDistance = (sz1, sz2) => {\n        let dist = [];\n        for (let i = 0; i <= sz1; i++) {\n            dist.push(Vec.numberArray(0, sz2 + 1));\n            dist[i][0] = i;\n        }\n        for (let j = 1; j <= sz2; j++)\n            dist[0][j] = j;\n        for (let j = 1; j <= sz2; j++)\n            for (let i = 1; i <= sz1; i++) {\n                let cost = ch1[i - 1] == ch2[j - 1] ? 0 : 1;\n                dist[i][j] = Math.min(Math.min(dist[i - 1][j] + 1, dist[i][j - 1] + 1), dist[i - 1][j - 1] + cost);\n            }\n        return dist[sz1][sz2];\n    };\n    let cost = ch1[len1 - 1] == ch2[len2 - 1] ? 0 : 1;\n    let lev1 = levenshteinDistance(len1 - 1, len2) + 1;\n    let lev2 = levenshteinDistance(len1, len2 - 1) + 1;\n    let lev3 = levenshteinDistance(len1 - 1, len2 - 1) + cost;\n    return Math.min(Math.min(lev1, lev2), lev3);\n}\n//# sourceMappingURL=util.js.map","import { norm2_xy, norm_xy, sqr } from './util';\nimport { Vec } from './Vec';\nconst EPSILON = Math.pow(2, -52);\nexport class Triangulation2D {\n    constructor(px, py) {\n        this.px = px;\n        this.py = py;\n        this.numTriangles = 0;\n        this.edgeStack = Vec.numberArray(0, 512);\n        this.hull = null;\n        this.px = px;\n        this.py = py;\n        this.sz = px.length;\n        let maxTriangles = Math.max(2 * this.sz - 5, 0);\n        this.triangles = new Array(maxTriangles * 3);\n        this.halfedges = new Array(maxTriangles * 3);\n        this.hashSize = Math.ceil(Math.sqrt(this.sz));\n        this.hullPrev = new Array(this.sz);\n        this.hullNext = new Array(this.sz);\n        this.hullTri = new Array(this.sz);\n        this.hullHash = Vec.numberArray(-1, this.hashSize);\n        this.ids = new Array(this.sz);\n        this.dists = new Array(this.sz);\n        this.update();\n    }\n    trimConcave(threshold) {\n        const threshSq = sqr(threshold);\n        const { sz, px, py } = this;\n        let tri = this.triangles.slice(0);\n        let edge = [];\n        for (let n = 0, i = 0; i < tri.length; n++, i += 3) {\n            edge.push(sz * Math.min(tri[i + 0], tri[i + 1]) + Math.max(tri[i + 0], tri[i + 1]));\n            edge.push(sz * Math.min(tri[i + 0], tri[i + 2]) + Math.max(tri[i + 0], tri[i + 2]));\n            edge.push(sz * Math.min(tri[i + 1], tri[i + 2]) + Math.max(tri[i + 1], tri[i + 2]));\n        }\n        let uniqueEdges = Vec.uniqueUnstable(edge);\n        for (let n = 0; n < edge.length; n++)\n            edge[n] = uniqueEdges.indexOf(edge[n]);\n        let edgeCount = new Array(edge.length);\n        while (true) {\n            const ntri = tri.length / 3;\n            edgeCount.fill(0);\n            for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n                edgeCount[edge[i + 0]]++;\n                edgeCount[edge[i + 1]]++;\n                edgeCount[edge[i + 2]]++;\n            }\n            let mask = Vec.booleanArray(true, ntri);\n            for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n                const c1 = edgeCount[edge[i + 0]];\n                const c2 = edgeCount[edge[i + 1]];\n                const c3 = edgeCount[edge[i + 2]];\n                const i1 = tri[i], i2 = tri[i + 1], i3 = tri[i + 2];\n                if (c1 == 1 && c2 != 1 && c3 != 1)\n                    mask[n] = norm2_xy(px[i1] - px[i2], py[i1] - py[i2]) < threshSq;\n                else if (c1 != 1 && c2 == 1 && c3 != 1)\n                    mask[n] = norm2_xy(px[i1] - px[i3], py[i1] - py[i3]) < threshSq;\n                else if (c1 != 1 && c2 != 1 && c3 == 1)\n                    mask[n] = norm2_xy(px[i2] - px[i3], py[i2] - py[i3]) < threshSq;\n            }\n            if (Vec.allTrue(mask))\n                break;\n            let repTri = new Array(Vec.maskCount(mask) * 3);\n            let repEdge = new Array(Vec.maskCount(mask) * 3);\n            for (let n = 0, i = 0, j = 0, k = 0; n < ntri; n++, i += 3)\n                if (mask[n]) {\n                    repTri[j++] = tri[i];\n                    repTri[j++] = tri[i + 1];\n                    repTri[j++] = tri[i + 2];\n                    repEdge[k++] = edge[i];\n                    repEdge[k++] = edge[i + 1];\n                    repEdge[k++] = edge[i + 2];\n                }\n            tri = repTri;\n            edge = repEdge;\n        }\n        return tri;\n    }\n    traceOutline(tri) {\n        const npt = tri.length, ntri = npt / 3;\n        const { sz, px, py } = this;\n        let edgeCount = new Map();\n        for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n            const e1 = sz * Math.min(tri[i + 0], tri[i + 1]) + Math.max(tri[i + 0], tri[i + 1]);\n            const e2 = sz * Math.min(tri[i + 0], tri[i + 2]) + Math.max(tri[i + 0], tri[i + 2]);\n            const e3 = sz * Math.min(tri[i + 1], tri[i + 2]) + Math.max(tri[i + 1], tri[i + 2]);\n            edgeCount.set(e1, (edgeCount.get(e1) || 0) + 1);\n            edgeCount.set(e2, (edgeCount.get(e2) || 0) + 1);\n            edgeCount.set(e3, (edgeCount.get(e3) || 0) + 1);\n        }\n        let edgePairs = [];\n        for (let entry of edgeCount.entries())\n            if (entry[1] == 1) {\n                const e = entry[0];\n                const i1 = Math.floor(e / sz), i2 = e % sz;\n                edgePairs.push(i1);\n                edgePairs.push(i2);\n            }\n        const idx = Vec.uniqueUnstable(edgePairs);\n        const isz = idx.length;\n        const idxMap = new Map();\n        for (let n = 0; n < isz; n++)\n            idxMap.set(idx[n], n);\n        let g1 = Vec.numberArray(-1, isz), g2 = Vec.numberArray(-1, isz);\n        for (let n = 0; n < edgePairs.length; n += 2) {\n            const i1 = idxMap.get(edgePairs[n]), i2 = idxMap.get(edgePairs[n + 1]);\n            if (g1[i1] < 0)\n                g1[i1] = i2;\n            else\n                g2[i1] = i2;\n            if (g1[i2] < 0)\n                g1[i2] = i1;\n            else\n                g2[i2] = i1;\n        }\n        let mask = Vec.booleanArray(false, isz);\n        let sequence = new Array(isz);\n        sequence[0] = 0;\n        mask[0] = true;\n        for (let n = 1; n < isz; n++) {\n            const i = sequence[n - 1];\n            if (!mask[g1[i]])\n                sequence[n] = g1[i];\n            else\n                sequence[n] = g2[i];\n            mask[sequence[n]] = true;\n        }\n        return Vec.idxGet(idx, sequence);\n    }\n    update() {\n        const sz = this.sz;\n        let { px, py, ids, dists, triangles, halfedges } = this;\n        const minX = Vec.min(px), minY = Vec.min(py);\n        const maxX = Vec.max(px), maxY = Vec.max(py);\n        for (let n = 0; n < sz; n++)\n            ids[n] = n;\n        this.centreX = 0.5 * (minX + maxX);\n        this.centreY = 0.5 * (minY + maxY);\n        let i0 = 0, i1 = 0, i2 = 0;\n        let minDist = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            const d = norm_xy(this.centreX - px[n], this.centreY - py[n]);\n            if (d < minDist) {\n                i0 = n;\n                minDist = d;\n            }\n        }\n        const i0x = px[i0], i0y = py[i0];\n        minDist = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            if (n == i0)\n                continue;\n            const d = norm_xy(i0x - px[n], i0y - py[n]);\n            if (d < minDist && d > 0) {\n                i1 = n;\n                minDist = d;\n            }\n        }\n        let i1x = px[i1], i1y = py[i1];\n        let minRadius = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            if (n == i0 || n == i1)\n                continue;\n            let r = this.circumRadius(i0x, i0y, i1x, i1y, px[n], py[n]);\n            if (r < minRadius) {\n                i2 = n;\n                minRadius = r;\n            }\n        }\n        let i2x = px[i2], i2y = py[i2];\n        if (!Number.isFinite(minRadius)) {\n            for (let n = 0; n < sz; n++) {\n                dists[n] = px[n] - px[0];\n                if (dists[n] == 0)\n                    dists[n] = py[n] - py[0];\n            }\n            this.quicksort(0, sz - 1);\n            let hull = new Array(sz);\n            let j = 0;\n            let d0 = Number.NEGATIVE_INFINITY;\n            for (let n = 0; n < sz; n++) {\n                let id = ids[n];\n                if (dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = dists[id];\n                }\n            }\n            this.hull = hull.slice(0, j);\n            triangles = [];\n            halfedges = [];\n            return;\n        }\n        if (this.orient(i0x, i0y, i1x, i1y, i2x, i2y)) {\n            let i = i1;\n            let x = i1x, y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n        this.pickCircumCentre(i0x, i0y, i1x, i1y, i2x, i2y);\n        for (let n = 0; n < sz; n++)\n            dists[n] = norm_xy(px[n] - this.centreX, py[n] - this.centreY);\n        this.quicksort(0, sz - 1);\n        this.hullStart = i0;\n        let hullSize = 3;\n        const { hullNext, hullPrev, hullTri, hullHash, hashSize } = this;\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n        hullHash.fill(-1);\n        hullHash[this.hashKey(i0x, i0y)] = i0;\n        hullHash[this.hashKey(i1x, i1y)] = i1;\n        hullHash[this.hashKey(i2x, i2y)] = i2;\n        this.numTriangles = 0;\n        this.addTriangle(i0, i1, i2, -1, -1, -1);\n        let xp = 0, yp = 0;\n        for (let k = 0; k < ids.length; k++) {\n            let i = ids[k];\n            let x = px[i], y = py[i];\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON)\n                continue;\n            xp = x;\n            yp = y;\n            if (i == i0 || i == i1 || i == i2)\n                continue;\n            let start = 0;\n            for (let j = 0, key = this.hashKey(x, y); j < hashSize; j++) {\n                start = hullHash[(key + j) % hashSize];\n                if (start >= 0 && start != hullNext[start])\n                    break;\n            }\n            start = hullPrev[start];\n            let e = start, q = hullNext[e];\n            while (!this.orient(x, y, px[e], py[e], px[q], py[q])) {\n                e = q;\n                if (e == start) {\n                    e = -1;\n                    break;\n                }\n                q = hullNext[e];\n            }\n            if (e < 0)\n                continue;\n            let t = this.addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n            hullTri[i] = this.legalise(t + 2);\n            hullTri[e] = t;\n            hullSize++;\n            let n = hullNext[e];\n            q = hullNext[n];\n            while (this.orient(x, y, px[n], py[n], px[q], py[q])) {\n                t = this.addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this.legalise(t + 2);\n                hullNext[n] = n;\n                hullSize--;\n                n = q;\n                q = hullNext[n];\n            }\n            if (e == start) {\n                q = hullPrev[e];\n                while (this.orient(x, y, px[q], py[q], px[e], py[e])) {\n                    t = this.addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this.legalise(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e;\n                    hullSize--;\n                    e = q;\n                    q = hullPrev[e];\n                }\n            }\n            this.hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n            hullHash[this.hashKey(x, y)] = i;\n            hullHash[this.hashKey(px[e], py[e])] = e;\n        }\n        this.hull = new Array(hullSize);\n        for (let n = 0, e = this.hullStart; n < hullSize; n++) {\n            this.hull[n] = e;\n            e = hullNext[e];\n        }\n        this.triangles = triangles.slice(0, this.numTriangles);\n        this.halfedges = halfedges.slice(0, this.numTriangles);\n    }\n    hashKey(x, y) {\n        return Math.floor(this.pseudoAngle(x - this.centreX, y - this.centreY) * this.hashSize) % this.hashSize;\n    }\n    legalise(a) {\n        let i = 0;\n        let ar = 0;\n        while (true) {\n            let b = this.halfedges[a];\n            let a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n            if (b < 0) {\n                if (i == 0)\n                    break;\n                a = this.edgeStack[--i];\n                continue;\n            }\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n            const { px, py, triangles, halfedges } = this;\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n            let illegal = this.inCircle(px[p0], py[p0], px[pr], py[pr], px[pl], py[pl], px[p1], py[p1]);\n            if (illegal) {\n                this.triangles[a] = p1;\n                this.triangles[b] = p0;\n                const hbl = halfedges[bl];\n                if (hbl < 0) {\n                    let e = this.hullStart;\n                    do {\n                        if (this.hullTri[e] == bl) {\n                            this.hullTri[e] = a;\n                            break;\n                        }\n                        e = this.hullPrev[e];\n                    } while (e != this.hullStart);\n                }\n                this.link(a, hbl);\n                this.link(b, halfedges[ar]);\n                this.link(ar, bl);\n                const br = b0 + (b + 1) % 3;\n                if (i < this.edgeStack.length)\n                    this.edgeStack[i++] = br;\n            }\n            else {\n                if (i == 0)\n                    break;\n                a = this.edgeStack[--i];\n            }\n        }\n        return ar;\n    }\n    link(a, b) {\n        this.halfedges[a] = b;\n        if (b >= 0)\n            this.halfedges[b] = a;\n    }\n    addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.numTriangles;\n        this.triangles[t] = i0;\n        this.triangles[t + 1] = i1;\n        this.triangles[t + 2] = i2;\n        this.link(t, a);\n        this.link(t + 1, b);\n        this.link(t + 2, c);\n        this.numTriangles += 3;\n        return t;\n    }\n    pseudoAngle(dx, dy) {\n        const p = dx / (Math.abs(dx) + Math.abs(dy));\n        return (dy > 0 ? 3 - p : 1 + p) / 4;\n    }\n    orientIfSure(px, py, rx, ry, qx, qy) {\n        const l = (ry - py) * (qx - px);\n        const r = (rx - px) * (qy - py);\n        return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n    }\n    orient(rx, ry, qx, qy, px, py) {\n        let o = this.orientIfSure(px, py, rx, ry, qx, qy);\n        if (o != 0)\n            return o < 0;\n        o = this.orientIfSure(rx, ry, qx, qy, px, py);\n        if (o != 0)\n            return o < 0;\n        o = this.orientIfSure(qx, qy, px, py, rx, ry);\n        return o < 0;\n    }\n    inCircle(ax, ay, bx, by, cx, cy, px, py) {\n        const dx = ax - px;\n        const dy = ay - py;\n        const ex = bx - px;\n        const ey = by - py;\n        const fx = cx - px;\n        const fy = cy - py;\n        const ap = dx * dx + dy * dy;\n        const bp = ex * ex + ey * ey;\n        const cp = fx * fx + fy * fy;\n        return dx * (ey * cp - bp * fy) -\n            dy * (ex * cp - bp * fx) +\n            ap * (ex * fy - ey * fx) < 0;\n    }\n    circumRadius(ax, ay, bx, by, cx, cy) {\n        const dx = bx - ax;\n        const dy = by - ay;\n        const ex = cx - ax;\n        const ey = cy - ay;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        const d = 0.5 / (dx * ey - dy * ex);\n        const x = (ey * bl - dy * cl) * d;\n        const y = (dx * cl - ex * bl) * d;\n        return x * x + y * y;\n    }\n    pickCircumCentre(ax, ay, bx, by, cx, cy) {\n        const dx = bx - ax;\n        const dy = by - ay;\n        const ex = cx - ax;\n        const ey = cy - ay;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        const d = 0.5 / (dx * ey - dy * ex);\n        this.centreX = ax + (ey * bl - dy * cl) * d;\n        this.centreY = ay + (dx * cl - ex * bl) * d;\n    }\n    quicksort(left, right) {\n        const { ids, dists } = this;\n        if (right - left <= 20) {\n            for (let i = left + 1; i <= right; i++) {\n                const temp = ids[i];\n                const tempDist = dists[temp];\n                let j = i - 1;\n                while (j >= left && dists[ids[j]] > tempDist)\n                    ids[j + 1] = ids[j--];\n                ids[j + 1] = temp;\n            }\n        }\n        else {\n            let median = (left + right) >> 1;\n            let i = left + 1;\n            let j = right;\n            Vec.swap(ids, median, i);\n            if (dists[ids[left]] > dists[ids[right]])\n                Vec.swap(ids, left, right);\n            if (dists[ids[i]] > dists[ids[right]])\n                Vec.swap(ids, i, right);\n            if (dists[ids[left]] > dists[ids[i]])\n                Vec.swap(ids, left, i);\n            let temp = ids[i];\n            const tempDist = dists[temp];\n            while (true) {\n                do\n                    i++;\n                while (dists[ids[i]] < tempDist);\n                do\n                    j--;\n                while (dists[ids[j]] > tempDist);\n                if (j < i)\n                    break;\n                Vec.swap(ids, i, j);\n            }\n            ids[left + 1] = ids[j];\n            ids[j] = temp;\n            if (right - i + 1 >= j - left) {\n                this.quicksort(i, right);\n                this.quicksort(left, j - 1);\n            }\n            else {\n                this.quicksort(left, j - 1);\n                this.quicksort(i, right);\n            }\n        }\n    }\n}\n//# sourceMappingURL=Triangulation2D.js.map","import { Matrix, SingularValueDecomposition } from './Matrix';\nimport { Triangulation2D } from './Triangulation2D';\nimport { angleDiff, angleDiffPos, angleNorm, maxArray, minArray, norm2_xy, norm_xy, realEqual, sqr, TWOPI } from './util';\nimport { Vec } from './Vec';\nexport class GeomUtil {\n    static pointInPolygon(x, y, px, py) {\n        if (x < minArray(px) || x > maxArray(px) || y < minArray(py) || y > maxArray(py))\n            return false;\n        let sz = px.length;\n        for (let n = 0; n < sz; n++)\n            if (px[n] == x && py[n] == y)\n                return true;\n        let phase = false;\n        for (let n = 0; n < sz; n++) {\n            let x1 = px[n], y1 = py[n], x2 = px[n + 1 < sz ? n + 1 : 0], y2 = py[n + 1 < sz ? n + 1 : 0];\n            if (y > Math.min(y1, y2) && y <= Math.max(y1, y2) && x <= Math.max(x1, x2) && y1 != y2) {\n                let intr = (y - y1) * (x2 - x1) / (y2 - y1) + x1;\n                if (x1 == x2 || x <= intr)\n                    phase = !phase;\n            }\n        }\n        return phase;\n    }\n    static areLinesParallel(x1, y1, x2, y2, x3, y3, x4, y4) {\n        let dxa = x2 - x1, dya = y2 - y1, dxb = x4 - x3, dyb = y4 - y3;\n        let xmajorA = Math.abs(dxa) > Math.abs(dya), xmajorB = Math.abs(dxb) > Math.abs(dyb);\n        if (xmajorA != xmajorB)\n            return false;\n        const EPS = 1E-6;\n        if (xmajorA)\n            return Math.abs(dya / dxa - dyb / dxb) < EPS;\n        else\n            return Math.abs(dxa / dya - dxb / dyb) < EPS;\n    }\n    static lineIntersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        let u = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n        return [x1 + u * (x2 - x1), y1 + u * (y2 - y1)];\n    }\n    static isPointOnLineSeg(px, py, x1, y1, x2, y2) {\n        if (px < Math.min(x1, x2) || px > Math.max(x1, x2) || py < Math.min(y1, y2) || py > Math.max(y1, y2))\n            return false;\n        if ((px == x1 && py == y1) || (px == x2 && py == y2))\n            return true;\n        let dx = x2 - x1, dy = y2 - y1;\n        if (Math.abs(dx) > Math.abs(dy))\n            return realEqual(py, (dy / dx) * (px - x1) + y1);\n        else\n            return realEqual(px, (dx / dy) * (py - y1) + x1);\n    }\n    static pointLineDistance(px, py, x1, y1, x2, y2) {\n        let dx = x2 - x1, dy = y2 - y1;\n        return Math.abs(dy * px - dx * py + x2 * y1 - y2 * x1) / norm_xy(dx, dy);\n    }\n    static pointLineSegDistance(px, py, x1, y1, x2, y2) {\n        let dx = x2 - x1, dy = y2 - y1;\n        let t = ((px - x1) * dx + (py - y1) * dy) / norm2_xy(dx, dy);\n        t = Math.max(0, Math.min(1, t));\n        let tx = x1 + t * dx, ty = y1 + t * dy;\n        return norm_xy(px - tx, py - ty);\n    }\n    static doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (Math.max(x1, x2) < Math.min(x3, x4) || Math.max(y1, y2) < Math.min(y3, y4))\n            return false;\n        if (Math.min(x1, x2) > Math.max(x3, x4) || Math.min(y1, y2) > Math.max(y3, y4))\n            return false;\n        if ((x1 == x3 && y1 == y3) || (x1 == x4 && y1 == y4) || (x2 == x3 && y2 == y3) || (x2 == x4 && y2 == y4))\n            return true;\n        if ((x1 == x2 || x3 == x4) && (x1 == x3 || x1 == x4 || x2 == x3 || x2 == x4))\n            return true;\n        if ((y1 == y2 || y3 == y4) && (y1 == y3 || y1 == y4 || y2 == y3 || y2 == y4))\n            return true;\n        let x4_x3 = x4 - x3, y4_y3 = y4 - y3, x2_x1 = x2 - x1, y2_y1 = y2 - y1, x1_x3 = x1 - x3, y1_y3 = y1 - y3;\n        let nx = x4_x3 * y1_y3 - y4_y3 * x1_x3;\n        let ny = x2_x1 * y1_y3 - y2_y1 * x1_x3;\n        let dn = y4_y3 * x2_x1 - x4_x3 * y2_y1;\n        if (dn == 0)\n            return false;\n        if (dn < 0) {\n            dn = -dn;\n            nx = -nx;\n            ny = -ny;\n        }\n        return nx >= 0 && nx <= dn && ny >= 0 && ny <= dn;\n    }\n    static rectsIntersect(x1, y1, w1, h1, x2, y2, w2, h2) {\n        if (x1 <= x2 && x1 + w1 >= x2 + w2 && y1 <= y2 && y1 + h1 >= y2 + h2)\n            return true;\n        if (x2 <= x1 && x2 + w2 >= x1 + w1 && y2 <= y1 && y2 + h2 >= y1 + h1)\n            return true;\n        if (x1 + w1 < x2 || x2 + w2 < x1 || y1 + h1 < y2 || y2 + h2 < y1)\n            return false;\n        return true;\n    }\n    static sortAngles(theta) {\n        if (theta == null || theta.length < 2)\n            return theta;\n        theta = theta.slice(0);\n        for (let n = 0; n < theta.length; n++)\n            theta[n] = angleNorm(theta[n]);\n        if (theta.length == 2) {\n            if (angleDiffPos(theta[1], theta[0]) > Math.PI)\n                return [theta[1], theta[0]];\n            return theta;\n        }\n        Vec.sort(theta);\n        while (true) {\n            let a = theta[theta.length - 1], b = theta[0], c = theta[1];\n            if (angleDiff(b, a) <= angleDiff(c, b))\n                break;\n            for (let n = theta.length - 1; n > 0; n--)\n                theta[n] = theta[n - 1];\n            theta[0] = a;\n        }\n        return theta;\n    }\n    static idxSortAngles(theta) {\n        const sz = Vec.len(theta);\n        if (theta == null || sz < 2)\n            return Vec.identity0(sz);\n        if (sz == 2) {\n            if (angleDiffPos(theta[1], theta[0]) > Math.PI)\n                return [1, 0];\n            else\n                return [0, 1];\n        }\n        theta = Vec.duplicate(theta);\n        for (let n = 0; n < sz; n++)\n            theta[n] = angleNorm(theta[n]);\n        let idx = Vec.idxSort(theta);\n        while (true) {\n            let a = theta[idx[sz - 1]], b = theta[idx[0]], c = theta[idx[1]];\n            if (angleDiff(b, a) <= angleDiff(c, b))\n                break;\n            let last = idx.pop();\n            idx.unshift(last);\n        }\n        return idx;\n    }\n    static uniqueAngles(theta, threshold) {\n        let ang = GeomUtil.sortAngles(theta), ret = [];\n        ret.push(ang[0]);\n        for (let n = 1; n < ang.length; n++) {\n            if (Math.abs(angleDiff(ang[n], ang[n - 1])) > threshold)\n                ret.push(ang[n]);\n        }\n        return ret;\n    }\n    static thetaObtuse(th1, th2) {\n        let dth = th2 - th1;\n        while (dth < -Math.PI)\n            dth += 2 * Math.PI;\n        while (dth > Math.PI)\n            dth -= 2 * Math.PI;\n        return dth > 0 ? th1 - 0.5 * (2 * Math.PI - dth) : th1 + 0.5 * (2 * Math.PI + dth);\n    }\n    static emergentAngle(theta) {\n        let len = theta.length;\n        if (len == 1)\n            return theta[0];\n        if (len == 2)\n            return 0.5 * (theta[0] + theta[1]);\n        Vec.sort(theta);\n        let bottom = 0;\n        let behind = angleDiffPos(theta[0], theta[len - 1]);\n        for (let n = 1; n < len; n++) {\n            let delta = angleDiffPos(theta[n], theta[n - 1]);\n            if (delta > behind) {\n                bottom = n;\n                behind = delta;\n            }\n        }\n        let sum = 0;\n        for (let n = 0; n < len; n++) {\n            let delta = theta[n] - theta[bottom];\n            if (delta < 0)\n                delta += TWOPI;\n            sum += delta;\n        }\n        return sum / len + theta[bottom];\n    }\n    static dotProduct(v1, v2) {\n        return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\n    }\n    static crossProduct(v1, v2) {\n        const x = v1[1] * v2[2] - v1[2] * v2[1];\n        const y = v1[2] * v2[0] - v1[0] * v2[2];\n        const z = v1[0] * v2[1] - v1[1] * v2[0];\n        return [x, y, z];\n    }\n    static affineTranslate(dx, dy) {\n        return [[1, 0, dx], [0, 1, dy], [0, 0, 1]];\n    }\n    static affineMirror(xaxis, yaxis) {\n        return [[xaxis ? -1 : 1, 0, 0], [0, yaxis ? -1 : 1, 0], [0, 0, 1]];\n    }\n    static affineScale(sx, sy) {\n        return [[sx, 0, 0], [0, sy, 0], [0, 0, 1]];\n    }\n    static affineRotate(theta) {\n        let cos = Math.cos(theta), sin = Math.sin(theta);\n        return [[cos, -sin, 0], [sin, cos, 0], [0, 0, 1]];\n    }\n    static affineCompose(A, B) {\n        let tfm = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n        let Acol = [0, 0, 0];\n        for (let j = 0; j < 3; j++) {\n            for (let k = 0; k < 3; k++)\n                Acol[k] = A[k][j];\n            for (let i = 0; i < 3; i++) {\n                let Brow = B[i];\n                let s = 0;\n                for (let k = 0; k < 3; k++)\n                    s += Acol[k] * Brow[k];\n                tfm[i][j] = s;\n            }\n        }\n        return tfm;\n    }\n    static applyAffine(x, y, tfm) {\n        return [x * tfm[0][0] + y * tfm[0][1] + tfm[0][2], x * tfm[1][0] + y * tfm[1][1] + tfm[1][2]];\n    }\n    static applyAffineArray(x, y, tfm) {\n        for (let n = 0; n < x.length; n++)\n            [x[n], y[n]] = this.applyAffine(x[n], y[n], tfm);\n    }\n    static isAffineMirror(tfm) {\n        let a = tfm[0][0], b = tfm[0][1], c = tfm[0][2];\n        let d = tfm[1][0], e = tfm[1][1], f = tfm[1][2];\n        let g = tfm[2][0], h = tfm[2][1], i = tfm[2][2];\n        return a * e * i + b * f * g + c * d * h - c * e * g - b * d * i - a * f * h < 0;\n    }\n    static magnitude2(v) {\n        return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n    }\n    static magnitude(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n    }\n    static dist2(v1, v2) {\n        let dx = v1[0] - v2[0], dy = v1[1] - v2[1], dz = v1[2] - v2[2];\n        return dx * dx + dy * dy + dz * dz;\n    }\n    static dist(v1, v2) {\n        let dx = v1[0] - v2[0], dy = v1[1] - v2[1], dz = v1[2] - v2[2];\n        return Math.sqrt(dx * dx + dy * dy + dz * dz);\n    }\n    static normalise(v) {\n        const dsq = v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n        if (dsq == 0)\n            return;\n        const inv = 1.0 / Math.sqrt(dsq);\n        v[0] *= inv;\n        v[1] *= inv;\n        v[2] *= inv;\n    }\n    static normalised(v) {\n        let ret = v.slice(0);\n        this.normalise(ret);\n        return ret;\n    }\n    static acuteAngle(v1, v2) {\n        let mag1 = this.magnitude(v1), mag2 = this.magnitude(v2);\n        if (mag1 == 0 || mag2 == 0)\n            return 0;\n        let dot = this.dotProduct(v1, v2);\n        let cosTheta = dot / (mag1 * mag2);\n        cosTheta = Math.max(-1, Math.min(1, cosTheta));\n        return Math.acos(cosTheta);\n    }\n    static arcControlPoints(rad, x1, y1, x2, y2) {\n        let t1x = -y1, t1y = x1;\n        let t2x = y2, t2y = -x2;\n        let dx = 0.5 * (x1 + x2);\n        let dy = 0.5 * (y1 + y2);\n        let tx = 3 / 8 * (t1x + t2x);\n        let ty = 3 / 8 * (t1y + t2y);\n        let a = tx * tx + ty * ty;\n        let b = dx * tx + dy * ty;\n        let c = dx * dx + dy * dy - rad * rad;\n        let D = b * b - a * c;\n        let k = (Math.sqrt(D) - b) / a;\n        return [x1 + k * t1x, y1 + k * t1y, x2 + k * t2x, y2 + k * t2y];\n    }\n    static createBezierEllipse(cx, cy, rw, rh, theta) {\n        let nseg = 24, npt = 2 * nseg + 1;\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        let incrAlpha = TWOPI / nseg;\n        let px = new Array(npt), py = new Array(npt);\n        for (let n = 0; n < nseg; n++) {\n            let alpha = n * incrAlpha;\n            let cosAlpha = Math.cos(alpha), sinAlpha = Math.sin(alpha);\n            px[n * 2] = rw * cosAlpha * cosTheta - rh * sinAlpha * sinTheta + cx;\n            py[n * 2] = rw * cosAlpha * sinTheta + rh * sinAlpha * cosTheta + cy;\n        }\n        px[npt - 1] = px[0];\n        py[npt - 1] = py[0];\n        let smooth = 0.3;\n        for (let n = 0; n < nseg; n++) {\n            let n1 = (n - 1 + nseg) % nseg;\n            let n2 = n;\n            let n3 = (n + 1) % nseg;\n            let n4 = (n + 2) % nseg;\n            let x1 = px[n1 * 2], x2 = px[n2 * 2], x3 = px[n3 * 2], x4 = px[n4 * 2];\n            let y1 = py[n1 * 2], y2 = py[n2 * 2], y3 = py[n3 * 2], y4 = py[n4 * 2];\n            px[n * 2 + 1] = 0.5 * (x2 + x3 + smooth * (x2 - x1 + x3 - x4));\n            py[n * 2 + 1] = 0.5 * (y2 + y3 + smooth * (y2 - y1 + y3 - y4));\n        }\n        let ctrl = new Array(npt);\n        for (let n = 0; n < npt; n++)\n            ctrl[n] = (n & 1) == 1;\n        return { px, py, ctrl };\n    }\n    static fitCircle(x, y) {\n        let dsq = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < x.length; n++)\n            dsq = Math.min(dsq, norm2_xy(x[n], y[n]));\n        return Math.sqrt(dsq);\n    }\n    static fitEllipse(px, py, minX, minY, maxX, maxY) {\n        let bestW = 0.5 * this.fitCircle(px, py), bestH = bestW, bestScore = bestW * bestH;\n        let x = Vec.concat(px, [minX, maxX, 0, 0]);\n        let y = Vec.concat(py, [0, 0, minY, maxY]);\n        const sz = x.length;\n        let shrinkToFit = (whs) => {\n            let dmin = Number.POSITIVE_INFINITY;\n            let invW2 = 1.0 / (whs[0] * whs[0]), invH2 = 1.0 / (whs[1] * whs[1]);\n            for (let n = 0; n < sz; n++)\n                dmin = Math.min(dmin, Math.sqrt(x[n] * x[n] * invW2 + y[n] * y[n] * invH2));\n            if (dmin < 1) {\n                whs[0] *= dmin;\n                whs[1] *= dmin;\n            }\n            whs[2] = whs[0] * whs[1];\n        };\n        let mul = 1;\n        let whsX = [0, 0, 0], whsY = [0, 0, 0];\n        while (mul > 0.001) {\n            whsX[0] = bestW * (1 + mul);\n            whsX[1] = bestH;\n            shrinkToFit(whsX);\n            whsY[0] = bestW;\n            whsY[1] = bestH * (1 + mul);\n            shrinkToFit(whsY);\n            let anything = false;\n            if (whsX[2] > bestScore) {\n                bestW = whsX[0];\n                bestH = whsX[1];\n                bestScore = whsX[2];\n                anything = true;\n            }\n            if (whsY[2] > bestScore) {\n                bestW = whsY[0];\n                bestH = whsY[1];\n                bestScore = whsY[2];\n                anything = true;\n            }\n            if (!anything)\n                mul *= 0.6;\n        }\n        return [bestW, bestH];\n    }\n    static superimpose(ax, ay, bx, by) {\n        let sz = ax.length;\n        if (sz == 1) {\n            let dx = bx[0] - ax[0], dy = by[0] - ay[0];\n            return [[1, 0, dx], [0, 1, dy], [0, 0, 1]];\n        }\n        if (sz == 2) {\n            let thetaA = Math.atan2(ay[1] - ay[0], ax[1] - ax[0]), thetaB = Math.atan2(by[1] - by[0], bx[1] - bx[0]);\n            let delta = angleDiff(thetaB, thetaA), cos = Math.cos(delta), sin = Math.sin(delta);\n            let rot00 = cos, rot01 = -sin;\n            let rot10 = sin, rot11 = cos;\n            let acx = 0.5 * (ax[0] + ax[1]), acy = 0.5 * (ay[0] + ay[1]);\n            let bcx = 0.5 * (bx[0] + bx[1]), bcy = 0.5 * (by[0] + by[1]);\n            let rax = rot00 * acx + rot01 * acy;\n            let ray = rot10 * acx + rot11 * acy;\n            return [[rot00, rot01, bcx - rax], [rot10, rot11, bcy - ray], [0, 0, 1]];\n        }\n        let invsz = 1.0 / sz;\n        let acx = Vec.sum(ax) * invsz, acy = Vec.sum(ay) * invsz;\n        let bcx = Vec.sum(bx) * invsz, bcy = Vec.sum(by) * invsz;\n        let mtxA = new Matrix(3, sz), mtxB = new Matrix(3, sz);\n        for (let n = 0; n < sz; n++) {\n            mtxA.set(0, n, ax[n] - acx);\n            mtxA.set(1, n, ay[n] - acy);\n            mtxA.set(2, n, 0);\n            mtxB.set(0, n, bx[n] - bcx);\n            mtxB.set(1, n, by[n] - bcy);\n            mtxB.set(2, n, 0);\n        }\n        let cov = mtxA.times(mtxB.transpose());\n        let svd = new SingularValueDecomposition(cov);\n        let rotate = svd.getV().times(svd.getU().transpose());\n        let rot00 = rotate.get(0, 0), rot01 = rotate.get(0, 1);\n        let rot10 = rotate.get(1, 0), rot11 = rotate.get(1, 1);\n        let rax = rot00 * acx + rot01 * acy;\n        let ray = rot10 * acx + rot11 * acy;\n        return [[rot00, rot01, bcx - rax], [rot10, rot11, bcy - ray], [0, 0, 1]];\n    }\n    static convexHull(x, y, flatness) {\n        let algo = new QuickHull(x, y, sqr(flatness * 0.1));\n        return [algo.hullX, algo.hullY];\n    }\n    static outlinePolygon(x, y, diameter) {\n        let del = new Triangulation2D(x, y);\n        let concave = del.trimConcave(diameter);\n        let idx = del.traceOutline(concave);\n        return [Vec.idxGet(x, idx), Vec.idxGet(y, idx)];\n    }\n}\nexport class QuickHull {\n    constructor(x, y, threshSq) {\n        this.x = x;\n        this.y = y;\n        this.threshSq = threshSq;\n        this.hsz = 0;\n        this.hullX = [];\n        this.hullY = [];\n        const sz = x.length;\n        let l = 0, r = 0;\n        for (let n = 0; n < sz; n++) {\n            if (x[r] > x[n] || (x[r] == x[n] && y[r] > y[n]))\n                r = n;\n            if (x[l] < x[n] || (x[l] == x[n] && y[l] < y[n]))\n                l = n;\n        }\n        let al1 = [], al2 = [];\n        for (let n = 0; n < sz; n++) {\n            if (n != l && n != r) {\n                if (this.right(r, l, n) > 0)\n                    al1.push(n);\n                else\n                    al2.push(n);\n            }\n        }\n        this.hullX.push(x[r]);\n        this.hullY.push(y[r]);\n        this.quickHull(r, l, al1);\n        this.hullX.push(x[l]);\n        this.hullY.push(y[l]);\n        this.quickHull(l, r, al2);\n        for (let n = 0; n < this.hullX.length - 1;) {\n            if (norm2_xy(this.hullX[n] - this.hullY[n + 1], this.hullY[n] - this.hullY[n + 1]) < threshSq) {\n                this.hullX.splice(n + 1, 1);\n                this.hullY.splice(n + 1, 1);\n            }\n            else\n                n++;\n        }\n    }\n    quickHull(a, b, al) {\n        if (al.length == 0)\n            return;\n        let c = this.furthestPoint(a, b, al);\n        let al1 = [], al2 = [];\n        for (let n = 0; n < al.length; n++) {\n            let p = al[n];\n            if (p == a || p == b)\n                continue;\n            if (this.right(a, c, p) > 0)\n                al1.push(p);\n            else if (this.right(c, b, p) > 0)\n                al2.push(p);\n        }\n        this.quickHull(a, c, al1);\n        this.hullX.push(this.x[c]);\n        this.hullY.push(this.y[c]);\n        this.quickHull(c, b, al2);\n    }\n    right(a, b, p) {\n        const x = this.x, y = this.y;\n        return (x[a] - x[b]) * (y[p] - y[b]) - (x[p] - x[b]) * (y[a] - y[b]);\n    }\n    distance(a, b, p) {\n        const x = this.x, y = this.y;\n        let u = ((x[p] - x[a]) * (x[b] - x[a]) + (y[p] - y[a]) * (y[b] - y[a])) / ((x[b] - x[a]) * (x[b] - x[a]) + (y[b] - y[a]) * (y[b] - y[a]));\n        let ux = x[a] + u * (x[b] - x[a]);\n        let uy = y[a] + u * (y[b] - y[a]);\n        return ((ux - x[p]) * (ux - x[p]) + (uy - y[p]) * (uy - y[p]));\n    }\n    furthestPoint(a, b, al) {\n        let maxDist = -1;\n        let maxPos = -1;\n        for (let n = 0; n < al.length; n++) {\n            let p = al[n];\n            if (p == a || p == b)\n                continue;\n            let dist = this.distance(a, b, p);\n            if (dist > maxDist) {\n                maxDist = dist;\n                maxPos = p;\n            }\n        }\n        return maxPos;\n    }\n}\nexport class RollingBall {\n    constructor(x, y, diameter) {\n        this.x = x;\n        this.y = y;\n        this.sequence = [];\n        const sz = x.length;\n        const threshSq = diameter * diameter;\n        let first = Vec.idxMax(x), latest = first;\n        let direction = 0.0;\n        let visited = Vec.booleanArray(false, sz);\n        this.sequence.push(first);\n        let roll = () => {\n            let bestIdx = -1;\n            let bestDelta = 0, bestTheta = 0;\n            for (let n = 0; n < sz; n++)\n                if (n != latest && !visited[n]) {\n                    let dx = x[n] - x[latest], dy = y[n] - y[latest];\n                    let dsq = norm2_xy(dx, dy);\n                    if (dsq == 0 || dsq > threshSq)\n                        continue;\n                    let theta = Math.atan2(dy, dx), delta = angleDiffPos(theta, direction);\n                    if (bestIdx < 0 || delta < bestDelta) {\n                        bestIdx = n;\n                        bestDelta = delta;\n                        bestTheta = theta;\n                    }\n                }\n            if (bestIdx < 0)\n                return -1;\n            direction = angleNorm(bestTheta - 0.5 * Math.PI);\n            visited[bestIdx] = true;\n            return bestIdx;\n        };\n        while (true) {\n            let next = roll();\n            if (next < 0) {\n                this.sequence = null;\n                return;\n            }\n            if (next == first)\n                break;\n            this.sequence.push(next);\n            latest = next;\n        }\n    }\n    sequencePos() {\n        if (!this.sequence)\n            return null;\n        let posList = [];\n        for (let n of this.sequence)\n            posList.push(new Pos(this.x[n], this.y[n]));\n        return posList;\n    }\n    sequenceXY() {\n        if (!this.sequence)\n            return [null, null];\n        let px = [], py = [];\n        for (let n of this.sequence) {\n            px.push(this.x[n]);\n            py.push(this.y[n]);\n        }\n        return [px, py];\n    }\n}\nexport class Pos {\n    static zero() { return new Pos(); }\n    static fromArray(src) { return new Pos(src[0], src[1]); }\n    constructor(x, y) {\n        this.x = x == null ? 0 : x;\n        this.y = y == null ? 0 : y;\n    }\n    clone() { return new Pos(this.x, this.y); }\n    equals(other) { return this.x == other.x && this.y == other.y; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x *= mag;\n        this.y *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    }\n    withScaleBy(mag) {\n        return new Pos(this.x * mag, this.y * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Pos(this.x + dx, this.y + dy);\n    }\n    toString() { return '[' + this.x + ',' + this.y + ']'; }\n}\nexport class Size {\n    static zero() { return new Size(); }\n    static fromArray(src) { return new Size(src[0], src[1]); }\n    constructor(w, h) {\n        this.w = w == null ? 0 : w;\n        this.h = h == null ? 0 : h;\n    }\n    clone() { return new Size(this.w, this.h); }\n    equals(other) { return this.w == other.w && this.h == other.h; }\n    isZero() { return this.w == 0 && this.h == 0; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.w *= mag;\n        this.h *= mag;\n    }\n    fitInto(maxW, maxH) {\n        let scale = 1;\n        if (this.w > maxW)\n            scale = maxW / this.w;\n        if (this.h > maxH)\n            scale = Math.min(scale, maxH / this.h);\n        if (scale < 1)\n            this.scaleBy(scale);\n    }\n    withScaleBy(mag) {\n        return new Size(this.w * mag, this.h * mag);\n    }\n    toString() { return '[' + this.w + ',' + this.h + ']'; }\n}\nexport class Box {\n    static zero() { return new Box(); }\n    static fromBounds(x1, y1, x2, y2) { return new Box(x1, y1, x2 - x1, y2 - y1); }\n    static fromSize(sz) { return new Box(0, 0, sz.w, sz.h); }\n    static fromOval(oval) { return new Box(oval.cx - oval.rw, oval.cy - oval.rh, 2 * oval.rw, 2 * oval.rh); }\n    static fromArray(src) { return new Box(src[0], src[1], src[2], src[3]); }\n    constructor(x, y, w, h) {\n        this.x = x == null ? 0 : x;\n        this.y = y == null ? 0 : y;\n        this.w = w == null ? 0 : w;\n        this.h = h == null ? 0 : h;\n    }\n    clone() { return new Box(this.x, this.y, this.w, this.h); }\n    equals(other) { return this.x == other.x && this.y == other.y && this.w == other.w && this.h == other.h; }\n    getPos() { return new Pos(this.x, this.y); }\n    setPos(pos) {\n        this.x = pos.x;\n        this.y = pos.y;\n    }\n    getSize() { return new Size(this.w, this.h); }\n    setSize(sz) {\n        this.w = sz.w;\n        this.h = sz.h;\n    }\n    minX() { return this.x; }\n    minY() { return this.y; }\n    midX() { return this.x + 0.5 * this.w; }\n    midY() { return this.y + 0.5 * this.h; }\n    maxX() { return this.x + this.w; }\n    maxY() { return this.y + this.h; }\n    area() { return this.w * this.h; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x *= mag;\n        this.y *= mag;\n        this.w *= mag;\n        this.h *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    }\n    grow(bx, by) {\n        this.x -= bx;\n        this.y -= by;\n        this.w += 2 * bx;\n        this.h += 2 * by;\n    }\n    withScaleBy(mag) {\n        return new Box(this.x * mag, this.y * mag, this.w * mag, this.h * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Box(this.x + dx, this.y + dy, this.w, this.h);\n    }\n    withGrow(bx, by) {\n        return new Box(this.x - bx, this.y - by, this.w + 2 * bx, this.h + 2 * by);\n    }\n    intersects(other) {\n        return GeomUtil.rectsIntersect(this.x, this.y, this.w, this.h, other.x, other.y, other.w, other.h);\n    }\n    intersection(other) {\n        let x1 = this.x, x2 = x1 + this.w, y1 = this.y, y2 = y1 + this.h;\n        let x3 = other.x, x4 = x3 + other.w, y3 = other.y, y4 = y3 + other.h;\n        let x5 = Math.max(x1, x3), y5 = Math.max(y1, y3), x6 = Math.min(x2, x4), y6 = Math.min(y2, y4);\n        return new Box(x5, y5, x6 - x5, y6 - y5);\n    }\n    contains(x, y) {\n        return x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h;\n    }\n    union(other) {\n        let x1 = Math.min(this.x, other.x), x2 = Math.max(this.x + this.w, other.x + other.w);\n        let y1 = Math.min(this.y, other.y), y2 = Math.max(this.y + this.h, other.y + other.h);\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    isZero() { return this.w == 0 && this.h == 0; }\n    isEmpty() { return this.w == 0 && this.h == 0; }\n    notEmpty() { return this.w > 0 || this.h > 0; }\n    toString() { return '[' + this.x + ',' + this.y + ';' + this.w + ',' + this.h + ']'; }\n}\nexport class Oval {\n    static zero() { return new Oval(); }\n    static fromBox(box) { return new Oval(box.x + 0.5 * box.w, box.y + 0.5 * box.h, 0.5 * box.w, 0.5 * box.h); }\n    static fromArray(src) { return new Oval(src[0], src[1], src[2], src[3]); }\n    constructor(cx, cy, rw, rh) {\n        this.cx = cx == null ? 0 : cx;\n        this.cy = cy == null ? 0 : cy;\n        this.rw = rw == null ? 0 : rw;\n        this.rh = rh == null ? 0 : rh;\n    }\n    clone() { return new Oval(this.cx, this.cy, this.rw, this.rh); }\n    setCentre(pos) {\n        this.cx = pos.x;\n        this.cy = pos.y;\n    }\n    setRadius(sz) {\n        this.rw = sz.w;\n        this.rh = sz.h;\n    }\n    minX() { return this.cx - this.rw; }\n    minY() { return this.cy - this.rh; }\n    maxX() { return this.cx + this.rw; }\n    maxY() { return this.cy + this.rh; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.cx *= mag;\n        this.cy *= mag;\n        this.rw *= mag;\n        this.rh *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.cx += dx;\n        this.cy += dy;\n    }\n    withScaleBy(mag) {\n        return new Oval(this.cx * mag, this.cy * mag, this.rw * mag, this.rh * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Oval(this.cx + dx, this.cy + dy, this.rw, this.rh);\n    }\n    contains(x, y) {\n        let dx = x - this.cx, dy = y - this.cy;\n        let a = dx / this.rw, b = dy / this.rh;\n        return a * a + b * b <= 1;\n    }\n    toString() { return '[' + this.cx + ',' + this.cy + ';' + this.rw + ',' + this.rh + ']'; }\n}\nexport class Line {\n    static zero() { return new Line(); }\n    static fromPos(pos1, pos2) { return new Line(pos1.x, pos1.y, pos2.x, pos2.y); }\n    constructor(x1, y1, x2, y2) {\n        this.x1 = x1 == null ? 0 : x1;\n        this.y1 = y1 == null ? 0 : y1;\n        this.x2 = x2 == null ? 0 : x2;\n        this.y2 = y2 == null ? 0 : y2;\n    }\n    clone() { return new Line(this.x1, this.y1, this.x2, this.y2); }\n    setPos1(pos) {\n        this.x1 = pos.x;\n        this.y1 = pos.y;\n    }\n    setPos2(pos) {\n        this.x2 = pos.x;\n        this.y2 = pos.y;\n    }\n    minX() { return Math.min(this.x1, this.x2); }\n    minY() { return Math.min(this.y1, this.y2); }\n    maxX() { return Math.max(this.x1, this.x2); }\n    maxY() { return Math.max(this.y1, this.y2); }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x1 *= mag;\n        this.y1 *= mag;\n        this.x2 *= mag;\n        this.y2 *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x1 += dx;\n        this.y1 += dy;\n        this.x2 += dx;\n        this.y2 += dy;\n    }\n    toString() { return '[' + this.x1 + ',' + this.y1 + ';' + this.x2 + ',' + this.y2 + ']'; }\n}\n//# sourceMappingURL=Geom.js.map","const ELEMENT_NODE = 1;\nconst ATTRIBUTE_NODE = 2;\nconst TEXT_NODE = 3;\nconst CDATA_SECTION_NODE = 4;\nconst ENTITY_REFERENCE_NODE = 5;\nconst ENTITY_NODE = 6;\nconst PROCESSING_INSTRUCTION_NODE = 7;\nconst COMMENT_NODE = 8;\nconst DOCUMENT_NODE = 9;\nconst DOCUMENT_TYPE_NODE = 10;\nconst DOCUMENT_FRAGMENT_NODE = 11;\nconst NOTATION_NODE = 12;\nexport class XML {\n    static parseXML(strXML) {\n        let xmlDoc;\n        if (this.customParser)\n            xmlDoc = new this.customParser().parseFromString(strXML, 'application/xml');\n        else\n            xmlDoc = new DOMParser().parseFromString(strXML, 'application/xml');\n        if (xmlDoc == null)\n            return null;\n        return xmlDoc;\n    }\n    static toString(doc) {\n        if (this.customSerial)\n            return new this.customSerial().serializeToString(doc.documentElement);\n        else\n            return new XMLSerializer().serializeToString(doc.documentElement);\n    }\n    static toPrettyString(doc) {\n        let xslt = [\n            '<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">',\n            '  <xsl:strip-space elements=\"*\"/>',\n            '  <xsl:template match=\"para[content-style][not(text())]\">',\n            '    <xsl:value-of select=\"normalize-space(.)\"/>',\n            '  </xsl:template>',\n            '  <xsl:template match=\"node()|@*\">',\n            '    <xsl:copy><xsl:apply-templates select=\"node()|@*\"/></xsl:copy>',\n            '  </xsl:template>',\n            '  <xsl:output indent=\"yes\"/>',\n            '</xsl:stylesheet>',\n        ].join('\\n');\n        let xsltDoc = this.parseXML(xslt);\n        let xsltProc = new XSLTProcessor();\n        xsltProc.importStylesheet(xsltDoc);\n        let resultDoc = xsltProc.transformToDocument(doc);\n        return new XMLSerializer().serializeToString(resultDoc);\n    }\n    static nodeText(el) {\n        let text = '';\n        for (let child of Array.from(el.childNodes)) {\n            if (child.nodeType == TEXT_NODE || child.nodeType == CDATA_SECTION_NODE)\n                text += child.nodeValue;\n        }\n        return text;\n    }\n    static childText(parent, tagName) {\n        if (parent == null)\n            return null;\n        let el = this.findElement(parent, tagName);\n        if (el == null)\n            return null;\n        return this.nodeText(el);\n    }\n    static appendElement(parent, name) {\n        let el = parent.ownerDocument.createElement(name);\n        parent.appendChild(el);\n        return el;\n    }\n    static appendElementAfter(presib, name) {\n        let el = presib.ownerDocument.createElement(name);\n        let postsib = presib.nextSibling;\n        if (postsib == null)\n            presib.parentNode.appendChild(el);\n        else\n            presib.parentNode.insertBefore(el, postsib);\n        return el;\n    }\n    static appendText(parent, text, isCDATA = false) {\n        if (text == null || text.length == 0)\n            return;\n        if (!isCDATA)\n            parent.appendChild(parent.ownerDocument.createTextNode(text));\n        else\n            parent.appendChild(parent.ownerDocument.createCDATASection(text));\n    }\n    static createTextChild(parent, name, text, isCDATA = false) {\n        let el = parent.ownerDocument.createElement(name);\n        parent.appendChild(el);\n        if (!isCDATA)\n            el.textContent = text;\n        else\n            el.appendChild(parent.ownerDocument.createCDATASection(text));\n    }\n    static setText(parent, text, isCDATA = false) {\n        while (parent.firstChild != null)\n            parent.removeChild(parent.firstChild);\n        this.appendText(parent, text, isCDATA);\n    }\n    static findElement(parent, tagName) {\n        if (parent == null)\n            return null;\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE && node.nodeName == tagName)\n                return node;\n            node = node.nextSibling;\n        }\n        return null;\n    }\n    static findChildElements(parent, tagName) {\n        if (parent == null)\n            return [];\n        let list = [];\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE && node.nodeName === tagName)\n                list.push(node);\n            node = node.nextSibling;\n        }\n        return list;\n    }\n    static childElements(parent) {\n        if (parent == null)\n            return [];\n        let list = [];\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE)\n                list.push(node);\n            node = node.nextSibling;\n        }\n        return list;\n    }\n}\nXML.customParser = null;\nXML.customSerial = null;\n//# sourceMappingURL=XML.js.map","import { Box, Pos, Size } from './Geom';\nimport { XML } from './XML';\nexport function dom(obj) {\n    if (typeof obj == 'string')\n        return DOM.parse(obj);\n    if (obj instanceof DOM)\n        return obj;\n    return new DOM(obj);\n}\nexport function domLegacy(obj) {\n    if (obj == null)\n        return null;\n    if (obj.jquery)\n        return dom(obj[0]);\n    return dom(obj);\n}\nexport class DOM {\n    constructor(el) {\n        this.el = el;\n    }\n    get elHTML() { return this.el; }\n    get elInput() { return this.el; }\n    get elCanvas() { return this.el; }\n    static parse(xhtml) {\n        let xml = XML.parseXML(xhtml);\n        if (xml == null)\n            throw 'Invalid XHTML string: ' + xhtml;\n        let html = xml.documentElement.outerHTML;\n        let template = document.createElement('template');\n        template.innerHTML = html;\n        return new DOM(template.content.firstChild);\n    }\n    static find(selector) {\n        let el = document.querySelector(selector);\n        return el ? new DOM(el) : null;\n    }\n    static findAll(selector) {\n        let nodeList = document.querySelectorAll(selector);\n        let domList = [];\n        for (let n = 0; n < nodeList.length; n++)\n            domList.push(new DOM(nodeList.item(n)));\n        return domList;\n    }\n    parent() {\n        let parent = this.el.parentElement;\n        return parent ? new DOM(parent) : null;\n    }\n    ancestor(selector) {\n        let el = this.el.closest(selector);\n        return el ? new DOM(el) : null;\n    }\n    children(tag) {\n        let domList = [];\n        for (let child = this.el.firstElementChild; child; child = child.nextElementSibling) {\n            if (tag && child.tagName.toLocaleLowerCase() != tag.toLocaleLowerCase())\n                continue;\n            domList.push(new DOM(child));\n        }\n        return domList;\n    }\n    find(selector) {\n        let el = this.el.querySelector(selector);\n        return el ? new DOM(el) : null;\n    }\n    findAll(selector) {\n        let nodeList = this.el.querySelectorAll(selector);\n        let domList = [];\n        for (let n = 0; n < nodeList.length; n++)\n            domList.push(new DOM(nodeList.item(n)));\n        return domList;\n    }\n    exists() {\n        return document.documentElement.contains(this.el);\n    }\n    isVisible() {\n        return this.elHTML.offsetWidth > 0 || this.elHTML.offsetHeight > 0 || this.elHTML.getClientRects().length > 0;\n    }\n    append(child) {\n        this.el.append(child.el);\n    }\n    appendTo(parent) {\n        if (parent instanceof DOM)\n            parent.el.append(this.el);\n        else\n            parent.appendChild(this.el);\n        return this;\n    }\n    prepend(child) {\n        this.el.prepend(child.el);\n    }\n    prependTo(parent) {\n        if (parent instanceof DOM)\n            parent.el.prepend(this.el);\n        else\n            parent.append(this.el);\n        return this;\n    }\n    insertBefore(ref) {\n        ref.el.parentElement.insertBefore(this.el, ref.el);\n        return this;\n    }\n    insertAfter(ref) {\n        let before = ref.el.nextElementSibling;\n        if (before)\n            ref.el.parentElement.insertBefore(this.el, before);\n        else\n            ref.el.parentElement.append(this.el);\n        return this;\n    }\n    remove() {\n        this.el.remove();\n    }\n    empty() {\n        this.el.innerHTML = '';\n    }\n    getHTML() {\n        return this.el.innerHTML;\n    }\n    setHTML(html) {\n        this.el.innerHTML = html;\n    }\n    appendHTML(xhtml) {\n        let xml = XML.parseXML('<z>' + xhtml + '</z>');\n        if (xml == null)\n            throw 'Invalid XHTML string: ' + xhtml;\n        let html = xml.documentElement.innerHTML;\n        this.el.insertAdjacentHTML('beforeend', html);\n    }\n    getText() {\n        return this.el.textContent;\n    }\n    setText(text) {\n        this.el.textContent = text;\n    }\n    appendText(text) {\n        let content = document.createTextNode(text);\n        this.el.appendChild(content);\n    }\n    getValue() {\n        return this.el.value;\n    }\n    setValue(str) {\n        this.el.value = str || '';\n    }\n    getCSS(key) {\n        return this.elHTML.style.getPropertyValue(key);\n    }\n    setCSS(key, value) {\n        this.elHTML.style.setProperty(key, value === null || value === void 0 ? void 0 : value.toString());\n    }\n    css(dict) {\n        for (let key in dict)\n            this.setCSS(key, dict[key].toString());\n        return this;\n    }\n    getAttr(key) {\n        if (!this.el.hasAttribute(key))\n            return null;\n        return this.el.getAttribute(key);\n    }\n    setAttr(key, value) {\n        this.el.setAttribute(key, value);\n    }\n    attr(dict) {\n        for (let key in dict)\n            this.setAttr(key, dict[key].toString());\n        return this;\n    }\n    addClass(clsnames) {\n        for (let cls of clsnames.split(' '))\n            if (cls)\n                this.elHTML.classList.add(cls);\n    }\n    removeClass(clsnames) {\n        for (let cls of clsnames.split(' '))\n            if (cls)\n                this.elHTML.classList.remove(cls);\n    }\n    hasClass(clsname) {\n        return this.elHTML.classList.contains(clsname);\n    }\n    setClass(clsname, flag) {\n        if (flag)\n            this.addClass(clsname);\n        else\n            this.removeClass(clsname);\n    }\n    class(clsname) {\n        this.addClass(clsname);\n        return this;\n    }\n    toggleClass(dict) {\n        for (let key in dict) {\n            if (dict[key])\n                this.elHTML.classList.add(key);\n            else\n                this.elHTML.classList.remove(key);\n        }\n    }\n    width() {\n        return this.elHTML.offsetWidth;\n    }\n    height() {\n        return this.elHTML.offsetHeight;\n    }\n    offset() {\n        let rect = this.el.getBoundingClientRect();\n        let win = this.el.ownerDocument.defaultView;\n        return new Pos(rect.left + win.pageXOffset, rect.top + win.pageYOffset);\n    }\n    size() {\n        return new Size(this.width(), this.height());\n    }\n    area() {\n        let pos = this.offset();\n        return new Box(pos.x, pos.y, this.width(), this.height());\n    }\n    setBoundaryPixels(x, y, w, h) {\n        this.css({ 'left': `${x}px`, 'top': `${y}px`, 'width': `${w}px`, 'height': `${h}px` });\n    }\n    setSizePixels(w, h) {\n        this.css({ 'width': `${w}px`, 'height': `${h}px` });\n    }\n    hasFocus() {\n        return this.el === document.activeElement;\n    }\n    grabFocus(delay = false) {\n        if (delay)\n            setTimeout(() => this.grabFocus(), 10);\n        else\n            this.elHTML.focus();\n    }\n    removeEvent(id, callback) {\n        this.el.removeEventListener(id, callback);\n    }\n    onKeyDown(callback) {\n        this.el.addEventListener('keydown', callback);\n    }\n    onKeyUp(callback) {\n        this.el.addEventListener('keyup', callback);\n    }\n    onKeyPress(callback) {\n        this.el.addEventListener('keypress', callback);\n    }\n    onScroll(callback) {\n        this.el.addEventListener('scroll', callback);\n    }\n    onWheel(callback) {\n        this.el.addEventListener('wheel', callback);\n    }\n    onClick(callback) {\n        this.el.addEventListener('click', callback);\n    }\n    onContextMenu(callback) {\n        this.el.addEventListener('contextmenu', callback);\n    }\n    onDblClick(callback) {\n        this.el.addEventListener('dblclick', callback);\n    }\n    onMouseDown(callback) {\n        this.el.addEventListener('mousedown', callback);\n    }\n    onMouseUp(callback) {\n        this.el.addEventListener('mouseup', callback);\n    }\n    onMouseEnter(callback) {\n        this.el.addEventListener('mouseenter', callback);\n    }\n    onMouseLeave(callback) {\n        this.el.addEventListener('mouseleave', callback);\n    }\n    onMouseMove(callback) {\n        this.el.addEventListener('mousemove', callback);\n    }\n    onMouseOver(callback) {\n        this.el.addEventListener('mouseover', callback);\n    }\n    onChange(callback) {\n        this.el.addEventListener('change', callback);\n    }\n    onInput(callback) {\n        this.el.addEventListener('input', callback);\n    }\n    onTouchStart(callback) {\n        this.el.addEventListener('touchstart', callback);\n    }\n    onTouchMove(callback) {\n        this.el.addEventListener('touchmove', callback);\n    }\n    onTouchCancel(callback) {\n        this.el.addEventListener('touchcancel', callback);\n    }\n    onTouchEnd(callback) {\n        this.el.addEventListener('touchend', callback);\n    }\n}\n//# sourceMappingURL=dom.js.map","import { colourCode } from './util';\nexport class Theme {\n}\nTheme.BASE_URL = null;\nTheme.RESOURCE_URL = null;\nTheme.foreground = 0x000000;\nTheme.background = 0xFFFFFF;\nTheme.lowlight = 0x24D0D0;\nTheme.lowlightEdge1 = 0x47D5D2;\nTheme.lowlightEdge2 = 0x008FD1;\nTheme.highlight = 0x00FF00;\nTheme.highlightEdge1 = 0x00CA59;\nTheme.highlightEdge2 = 0x008650;\nTheme.error = 0xFF0000;\nexport function initWebMolKit(resourcePath) {\n    Theme.RESOURCE_URL = resourcePath;\n    try {\n        let _ = document;\n    }\n    catch (e) {\n        return;\n    }\n    if (document)\n        installInlineCSS('main', composeMainCSS());\n}\nlet cssTagsInstalled = new Set();\nexport function hasInlineCSS(tag) { return cssTagsInstalled.has(tag); }\nexport function installInlineCSS(tag, css) {\n    if (cssTagsInstalled.has(tag))\n        return false;\n    let el = document.createElement('style');\n    el.innerHTML = css;\n    document.head.appendChild(el);\n    cssTagsInstalled.add(tag);\n    return true;\n}\nfunction composeMainCSS() {\n    let lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n    let highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n    return `\n\t\t.wmk-button\n\t\t{\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: 6px 12px;\n\t\t\tmargin-bottom: 0;\n\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\tfont-size: 14px;\n\t\t\tfont-weight: normal;\n\t\t\tline-height: 1.42857143;\n\t\t\ttext-align: center;\n\t\t\twhite-space: nowrap;\n\t\t\tvertical-align: middle;\n\t\t\tcursor: pointer;\n\t\t\tbackground-image: none;\n\t\t\tborder: 1px solid transparent;\n\t\t\tborder-radius: 4px;\n\t\t\t-ms-touch-action: manipulation; touch-action: manipulation;\n\t\t\t-webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;\n\t\t}\n\t\t.wmk-button:focus,\n\t\t.wmk-button:active:focus,\n\t\t.wmk-button.active:focus,\n\t\t.wmk-button.focus,\n\t\t.wmk-button:active.focus,\n\t\t.wmk-button.active.focus\n\t\t{\n\t\t\toutline: thin dotted;\n\t\t\toutline: 5px auto -webkit-focus-ring-color;\n\t\t\toutline-offset: -2px;\n\t\t}\n\t\t.wmk-button:hover,\n\t\t.wmk-button:focus,\n\t\t.wmk-button.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\ttext-decoration: none;\n\t\t}\n\t\t.wmk-button:active,\n\t\t.wmk-button.active\n\t\t{\n\t\t\tbackground-image: none;\n\t\t\toutline: 0;\n\t\t\t-webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);\n\t\t\tbox-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);\n\t\t}\n\t\t.wmk-button.disabled,\n\t\t.wmk-button[disabled],\n\t\tfieldset[disabled] .wmk-button\n\t\t{\n\t\t\tcursor: not-allowed;\n\t\t\tfilter: alpha(opacity=65);\n\t\t\t-webkit-box-shadow: none;\n\t\t\tbox-shadow: none;\n\t\t\topacity: .65;\n\t\t}\n\t\ta.wmk-button.disabled,\n\t\tfieldset[disabled] a.wmk-button\n\t\t{\n\t\t\tpointer-events: none;\n\t\t}\n\n\t\t/* shrunken button */\n\n\t\t.wmk-button-small\n\t\t{\n\t\t\tpadding: 2px 4px;\n\t\t\tline-height: 1;\n\t\t\tfont-size: 12px;\n\t\t}\n\n\t\t/* default button */\n\n\t\t.wmk-button-default\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #fff;\n\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\tborder-color: #ccc;\n\t\t}\n\t\t.wmk-button-default:focus,\n\t\t.wmk-button-default.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #8c8c8c;\n\t\t}\n\t\t.wmk-button-default:hover\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #adadad;\n\t\t}\n\t\t.wmk-button-default:active,\n\t\t.wmk-button-default.active,\n\t\t.open > .dropdown-toggle.wmk-button-default\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #adadad;\n\t\t}\n\t\t.wmk-button-default:active:hover,\n\t\t.wmk-button-default.active:hover,\n\t\t.open > .dropdown-toggle.wmk-button-default:hover,\n\t\t.wmk-button-default:active:focus,\n\t\t.wmk-button-default.active:focus,\n\t\t.open > .dropdown-toggle.wmk-button-default:focus,\n\t\t.wmk-button-default:active.focus,\n\t\t.wmk-button-default.active.focus,\n\t\t.open > .dropdown-toggle.wmk-button-default.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #d4d4d4;\n\t\t\tborder-color: #8c8c8c;\n\t\t}\n\t\t.wmk-button-default:active,\n\t\t.wmk-button-default.active,\n\t\t.open > .dropdown-toggle.wmk-button-default\n\t\t{\n\t\t\tbackground-image: none;\n\t\t}\n\t\t.wmk-button-default.disabled:hover,\n\t\t.wmk-button-default[disabled]:hover,\n\t\tfieldset[disabled] .wmk-button-default:hover,\n\t\t.wmk-button-default.disabled:focus,\n\t\t.wmk-button-default[disabled]:focus,\n\t\tfieldset[disabled] .wmk-button-default:focus,\n\t\t.wmk-button-default.disabled.focus,\n\t\t.wmk-button-default[disabled].focus,\n\t\tfieldset[disabled] .wmk-button-default.focus\n\t\t{\n\t\t\tbackground-color: #fff;\n\t\t\tborder-color: #ccc;\n\t\t}\n\t\t.wmk-button-default .badge\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #333;\n\t\t}\n\n\t\t/* primary button */\n\n\t\t.wmk-button-primary\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #008FD2;\n\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\tborder-color: #00C0C0;\n\t\t}\n\t\t.wmk-button-primary:focus,\n\t\t.wmk-button-primary.focus\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: ${lowlight};\n\t\t\tborder-color: #122b40;\n\t\t}\n\t\t.wmk-button-primary:hover\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #286090;\n\t\t\tborder-color: #204d74;\n\t\t}\n\t\t.wmk-button-primary:active,\n\t\t.wmk-button-primary.active,\n\t\t.open > .dropdown-toggle.wmk-button-primary\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #286090;\n\t\t\tborder-color: #20744d;\n\t\t}\n\t\t.wmk-button-primary:active:hover,\n\t\t.wmk-button-primary.active:hover,\n\t\t.open > .dropdown-toggle.wmk-button-primary:hover,\n\t\t.wmk-button-primary:active:focus,\n\t\t.wmk-button-primary.active:focus,\n\t\t.open > .dropdown-toggle.wmk-button-primary:focus,\n\t\t.wmk-button-primary:active.focus,\n\t\t.wmk-button-primary.active.focus,\n\t\t.open > .dropdown-toggle.wmk-button-primary.focus\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: ${highlight};\n\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\tborder-color: #12802b;\n\t\t}\n\t\t.wmk-button-primary:active,\n\t\t.wmk-button-primary.active,\n\t\t.open > .dropdown-toggle.wmk-button-primary\n\t\t{\n\t\t\tbackground-image: none;\n\t\t}\n\t\t.wmk-button-primary.disabled:hover,\n\t\t.wmk-button-primary[disabled]:hover,\n\t\tfieldset[disabled] .wmk-button-primary:hover,\n\t\t.wmk-button-primary.disabled:focus,\n\t\t.wmk-button-primary[disabled]:focus,\n\t\tfieldset[disabled] .wmk-button-primary:focus,\n\t\t.wmk-button-primary.disabled.focus,\n\t\t.wmk-button-primary[disabled].focus,\n\t\tfieldset[disabled] .wmk-button-primary.focus\n\t\t{\n\t\t\tbackground-color: #337ab7;\n\t\t\tborder-color: #2ea46d;\n\t\t}\n\t\t.wmk-button-primary .badge\n\t\t{\n\t\t\tcolor: #337ab7;\n\t\t\tbackground-color: #fff;\n\t\t}\n\t`;\n}\n//# sourceMappingURL=Theme.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { dom } from '../util/dom';\nimport { installInlineCSS } from '../util/Theme';\nconst CSS_TOOLTIP = `\n    *.wmk-tooltip-outer\n    {\n\t\tposition: absolute;\n\t\tborder-radius: 4px;\n\t\tborder: 1px solid black;\n\t\tbackground-color: white;\n\t\tpadding: 1px;\n\t\tpointer-events: none;\n        font-family: 'Open Sans', sans-serif;\n\t\tfont-size: 14px;\n    }\n\t*.wmk-tooltip-inner\n\t{\n\t\tcolor: white;\n\t\tborder-radius: 4px;\n\t\tbackground-color: black;\n\t\tpadding: 0.3em;\n\t\tmax-width: calc(min(40em, 50vw));\n\t}\n`;\nlet globalTooltip = null;\nlet globalPopWatermark = 0;\nexport function addTooltip(parent, bodyHTML, titleHTML, delay) {\n    installInlineCSS('tooltip', CSS_TOOLTIP);\n    let widget = dom(parent);\n    let tooltip = new Tooltip(widget, bodyHTML, titleHTML, delay == null ? 1000 : delay);\n    widget.onMouseEnter(() => tooltip.start());\n    widget.onMouseLeave(() => tooltip.stop());\n}\nexport function addTooltipPromise(parent, bodyCallback, titleHTML, delay) {\n    installInlineCSS('tooltip', CSS_TOOLTIP);\n    let widget = dom(parent);\n    let tooltip = new Tooltip(widget, null, titleHTML, delay == null ? 1000 : delay);\n    tooltip.bodyCallback = bodyCallback;\n    widget.onMouseEnter(() => tooltip.start());\n    widget.onMouseLeave(() => tooltip.stop());\n}\nexport function raiseToolTip(parent, avoid, bodyHTML, titleHTML) {\n    installInlineCSS('tooltip', CSS_TOOLTIP);\n    clearTooltip();\n    new Tooltip(dom(parent), bodyHTML, titleHTML, 0).raise(avoid);\n}\nexport function clearTooltip() {\n    if (globalTooltip == null)\n        return;\n    globalPopWatermark++;\n    globalTooltip.stop();\n}\nexport class Tooltip {\n    constructor(widget, bodyHTML, titleHTML, delay) {\n        this.widget = widget;\n        this.bodyHTML = bodyHTML;\n        this.titleHTML = titleHTML;\n        this.delay = delay;\n        this.domTooltip = null;\n    }\n    start() {\n        this.watermark = ++globalPopWatermark;\n        (() => __awaiter(this, void 0, void 0, function* () {\n            if (this.bodyHTML == null && this.bodyCallback)\n                this.bodyHTML = yield this.bodyCallback();\n            window.setTimeout(() => {\n                if (this.watermark == globalPopWatermark)\n                    this.raise();\n            }, this.delay);\n        }))();\n    }\n    stop() {\n        if (this.domTooltip) {\n            this.domTooltip.remove();\n            this.domTooltip = null;\n        }\n        this.watermark = -1;\n    }\n    raise(avoid) {\n        if (!this.widget.exists())\n            return;\n        globalTooltip = this;\n        if (this.domTooltip)\n            return;\n        let pop = this.domTooltip = dom('<div/>').class('wmk-tooltip-outer').css({ 'visibility': 'hidden' }).appendTo(document.body);\n        let sanity = 50;\n        for (let ancestor = this.widget; ancestor; ancestor = ancestor.parent()) {\n            if (--sanity == 0)\n                break;\n            let zindex = parseInt(ancestor.elHTML.style.zIndex);\n            if (zindex > 0) {\n                pop.setCSS('z-index', (zindex + 1000).toString());\n                break;\n            }\n        }\n        let div = dom('<div/>').appendTo(pop).class('wmk-tooltip-inner');\n        let hasTitle = this.titleHTML != null && this.titleHTML.length > 0, hasBody = this.bodyHTML != null && this.bodyHTML.length > 0;\n        if (hasTitle)\n            dom('<div/>').appendTo(div).setHTML('<b>' + this.titleHTML + '</b>');\n        if (hasTitle && hasBody)\n            div.appendHTML('<hr/>');\n        if (hasBody)\n            dom('<div/>').appendTo(div).setHTML(this.bodyHTML);\n        let winW = window.innerWidth, winH = window.innerHeight;\n        const GAP = 2;\n        let boundDiv = this.widget.el.getBoundingClientRect();\n        let wx1 = boundDiv.left, wy1 = boundDiv.top;\n        let wx2 = wx1 + boundDiv.width, wy2 = wy1 + boundDiv.height;\n        if (avoid) {\n            wx1 += avoid.x;\n            wy1 += avoid.y;\n            wx2 = wx1 + avoid.w;\n            wy2 = wy1 + avoid.h;\n        }\n        let setPosition = () => {\n            let popW = pop.width(), popH = pop.height();\n            let posX = 0, posY = 0;\n            if (wx1 + popW < winW)\n                posX = wx1;\n            else if (popW < wx2)\n                posX = wx2 - popW;\n            if (wy2 + GAP + popH < winH)\n                posY = wy2 + GAP;\n            else if (wy1 - GAP - popH > 0)\n                posY = wy1 - GAP - popH;\n            else\n                posY = wy2 + GAP;\n            posX += window.pageXOffset;\n            posY += window.pageYOffset;\n            pop.css({ 'left': `${posX}px`, 'top': `${posY}px`, 'visibility': 'visible' });\n        };\n        pop.css({ 'left': '0px', 'top': '0px' });\n        setTimeout(() => setPosition(), 1);\n        let checkParent = () => {\n            if (this.watermark != globalPopWatermark || !this.widget.isVisible() || !this.widget.exists())\n                this.stop();\n            else\n                setTimeout(checkParent, 100);\n        };\n        setTimeout(checkParent, 100);\n    }\n}\n//# sourceMappingURL=Tooltip.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {Box} from 'webmolkit/util/Geom';\nimport {installInlineCSS, Theme} from 'webmolkit/util/Theme';\nimport {addTooltip} from 'webmolkit/ui/Tooltip';\nimport {escapeHTML} from 'webmolkit/util/util';\n\n/*\n\tA banner that goes along the top of the screen and fills up with clickable icons.\n*/\n\nexport enum MenuBannerCommand\n{\n\tNewMixture = 'newMixture',\n\tNewCollection = 'newCollection',\n\tOpen = 'open',\n\tSave = 'save',\n\tSaveAs = 'saveAs',\n\tEditDetails = 'editDetails',\n\tEditStructure = 'editStructure',\n\tLookup = 'lookup',\n\tExportSVG = 'exportSVG',\n\tExportSDF = 'exportSDF',\n\tCreateMInChI = 'createMInChI',\n\tAppend = 'append',\n\tPrepend = 'prepend',\n\tInsertBefore = 'insertBefore',\n\tInsertAfter = 'insertAfter',\n\tDelete = 'delete',\n\tMoveUp = 'moveUp',\n\tMoveDown = 'moveDown',\n\tUndo = 'undo',\n\tRedo = 'redo',\n\tCopy = 'copy',\n\tCopyBranch = 'copyBranch',\n\tCut = 'cut',\n\tPaste = 'paste',\n\tZoomFull = 'zoomFull',\n\tZoomNormal = 'zoomNormal',\n\tZoomIn = 'zoomIn',\n\tZoomOut = 'zoomOut',\n\tViewDetail = 'viewDetail',\n\tViewCard = 'viewCard',\n\tBack = 'back',\n}\n\nexport interface MenuBannerButton\n{\n\ticon:string; // filename\n\ttip:string; // popup tooltip\n\tcmd:string;\n\twidth?:number; // optional width override\n}\n\nconst CSS_MENUBANNER = `\n\t*.mixtures-menubanner-button:hover\n\t{\n\t\tbackground-color: #D0D0D0;\n\t}\n\t*.mixtures-menubanner-button:active\n\t{\n\t\tbackground-color: #C0C0C0;\n\t}\n`;\nexport class MenuBanner\n{\n\tpublic callbackRefocus:() => void = null;\n\n\tprivate divFlex:DOM;\n\tprivate mapDiv:Record<string, DOM> = {};\n\tprivate mapSVG:Record<string, DOM> = {};\n\tprivate mapActive:Record<string, boolean> = {};\n\tprivate selected = new Set<string>();\n\n\t// ------------ public methods ------------\n\n\tconstructor(private commands:MenuBannerButton[][], private callbackAction:(cmd:string) => void)\n\t{\n\t\tinstallInlineCSS('mixtures-menubanner', CSS_MENUBANNER);\n\t}\n\n\tpublic render(domParent:DOM):void\n\t{\n\t\tdomParent.empty();\n\t\tthis.divFlex = dom('<div/>').appendTo(domParent).css({'display': 'flex', 'width': '100%', 'height': '100%'});\n\t\tthis.divFlex.css({'flex-direction': 'row', 'flex-wrap': 'nowrap', 'justify-content': 'space-around', 'align-items': 'center'});\n\t\t//this.divFlex.css({'linear-gradient': '90deg, #F0F0F0, #808080'});\n\t\tthis.divFlex.css({'background': 'linear-gradient(to bottom, #FFFFFF, #C0C0C0)'});\n\t\tthis.divFlex.css({'user-select': 'none' /*, 'pointer-events': 'none'*/});\n\n\t\t//this.divFlex.click(() => {if (this.callbackRefocus) this.callbackRefocus();});\n\n\t\tfor (let blk of this.commands)\n\t\t{\n\t\t\tlet divBlk = dom('<div/>').appendTo(this.divFlex);\n\t\t\tfor (let btn of blk)\n\t\t\t{\n\t\t\t\tlet [div, svg] = this.createCommand(btn);\n\t\t\t\tdivBlk.append(div);\n\t\t\t\tthis.mapDiv[btn.cmd] = div;\n\t\t\t\tthis.mapSVG[btn.cmd] = svg;\n\t\t\t\tthis.mapActive[btn.cmd] = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t// switch on/off specific buttons\n\tpublic activateButtons(map:Record<string, boolean>):void\n\t{\n\t\tfor (let cmd in map)\n\t\t{\n\t\t\tlet active = this.mapActive[cmd] = map[cmd];\n\t\t\tthis.mapSVG[cmd].css({'opacity': active ? 1 : 0.5});\n\t\t}\n\t}\n\n\t// control over which button(s) are selected\n\tpublic addSelected(cmd:string):void\n\t{\n\t\tif (this.selected.has(cmd)) return;\n\t\tthis.selected.add(cmd);\n\t\tthis.mapDiv[cmd].css({'background-color': '#D0D0D0'});\n\t}\n\tpublic removeSelected(cmd:string):void\n\t{\n\t\tif (!this.selected.has(cmd)) return;\n\t\tthis.selected.delete(cmd);\n\t\tthis.mapDiv[cmd].css({'background-color': 'transparent'});\n\t}\n\n\t// fetch the position of the given icon, relative to the banner overall\n\tpublic iconPosition(cmd:MenuBannerCommand):Box\n\t{\n\t\tlet div = this.mapDiv[cmd];\n\t\tif (!div) return null;\n\t\treturn new Box(div.elHTML.offsetLeft, div.elHTML.offsetTop, div.width(), div.height());\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate createCommand(btn:MenuBannerButton):DOM[]\n\t{\n\t\tlet div = dom('<div/>').css({'display': 'inline-block'});\n\t\tdiv.setAttr('id', 'mixtureEditor_btn_' + btn.icon.substring(0, btn.icon.lastIndexOf('.')));\n\t\tlet width = btn.width ? btn.width : 20;\n\t\tdiv.css({'width': `${width}px`, 'height': '20px', 'margin': '2px', 'padding': '5px'});\n\t\tdiv.css({'border-radius': '4px'});\n\t\tif (this.selected.has(btn.cmd)) div.css({'background-color': '#D0D0D0'});\n\n\t\tlet imgURL = Theme.RESOURCE_URL + '/img/icons/' + btn.icon;\n\t\tlet svg = dom('<img/>').appendTo(div).attr({'src': imgURL});\n\n\t\tdiv.addClass('mixtures-menubanner-button');\n\t\t/*div.onHover(\n\t\t\t() =>\n\t\t\t{\n\t\t\t\tlet col = this.selected.has(btn.cmd) ? '#D0D0D0' : this.mapActive[btn.cmd] ? '#C0C0C0' : 'transparent';\n\t\t\t\tdiv.setCSS('background-color', col);\n\t\t\t},\n\t\t\t() =>\n\t\t\t{\n\t\t\t\tlet col = this.selected.has(btn.cmd) ? '#D0D0D0' : 'transparent';\n\t\t\t\tdiv.setCSS('background-color', col);\n\t\t\t});*/\n\t\tdiv.onClick(() =>\n\t\t{\n\t\t\tif (this.callbackRefocus) this.callbackRefocus();\n\t\t\tif (!this.mapActive[btn.cmd]) return;\n\t\t\tthis.callbackAction(btn.cmd);\n\t\t});\n\t\tif (btn.tip) addTooltip(div, escapeHTML(btn.tip));\n\n\t\treturn [div, svg];\n\t}\n}\n\n","export class Chemistry {\n}\nChemistry.ELEMENTS = [\n    null,\n    'H', 'He',\n    'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Ne',\n    'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'Ar',\n    'K', 'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr',\n    'Rb', 'Sr', 'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn', 'Sb', 'Te', 'I', 'Xe',\n    'Cs', 'Ba',\n    'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb',\n    'Lu', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg', 'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn',\n    'Fr', 'Ra',\n    'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No',\n    'Lr', 'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds', 'Rg', 'Cn'\n];\nChemistry.ELEMENT_GROUPS = [\n    0,\n    1, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_ROWS = [\n    0,\n    1, 1,\n    2, 2, 2, 2, 2, 2, 2, 2,\n    3, 3, 3, 3, 3, 3, 3, 3,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n    6, 6,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    7, 7,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7\n];\nChemistry.ELEMENT_BLOCKS = [\n    0,\n    1, 2,\n    1, 1, 2, 2, 2, 2, 2, 2,\n    1, 1, 2, 2, 2, 2, 2, 2,\n    1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3\n];\nChemistry.ELEMENT_VALENCE = [\n    0,\n    1, 2,\n    1, 2, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 2,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_BONDING = [\n    0,\n    1, 0,\n    1, 2, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 2,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_SHELL = [\n    0,\n    2, 2,\n    8, 8, 8, 8, 8, 8, 8, 8,\n    8, 8, 8, 8, 8, 8, 8, 8,\n    8, 8, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 8, 8, 8, 8, 8, 8,\n    8, 8, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 8, 8, 8, 8, 8, 8,\n    8, 8,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    8, 8,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18\n];\nChemistry.NATURAL_ATOMIC_WEIGHTS = [\n    0, 1.00794, 4.002602, 6.941, 9.012182, 10.811, 12.0107, 14.0067, 15.9994, 18.9984032, 20.1797,\n    22.989770, 24.3050, 26.981538, 28.0855, 30.973761, 32.065, 35.453, 39.948, 39.0983, 40.078,\n    44.955910, 47.867, 50.9415, 51.9961, 54.938049, 55.845, 58.933200, 58.6934, 63.546, 65.409,\n    69.723, 72.64, 74.92160, 78.96, 79.904, 83.798, 85.4678, 87.62, 88.90585, 91.224, 92.90638,\n    95.94, 98, 101.07, 102.90550, 106.42, 107.8682, 112.411, 114.818, 118.710, 121.760, 127.60,\n    126.90447, 131.293, 132.90545, 137.327, 138.9055, 140.116, 140.90765, 144.24, 145, 150.36,\n    151.964, 157.25, 158.92534, 162.500, 164.93032, 167.259, 168.93421, 173.04, 174.967, 178.49,\n    180.9479, 183.84, 186.207, 190.23, 192.217, 195.078, 196.96655, 200.59, 204.3833, 207.2, 208.98038,\n    209, 210, 222, 223, 226, 227, 230.0331266, 231.03588, 233.039628, 237, 244, 243, 247, 247, 251, 252, 257,\n    258, 259, 262, 261, 262, 266, 264, 277, 268, 271, 272, 285\n];\nChemistry.ELEMENT_H = 1;\nChemistry.ELEMENT_He = 2;\nChemistry.ELEMENT_Li = 3;\nChemistry.ELEMENT_Be = 4;\nChemistry.ELEMENT_B = 5;\nChemistry.ELEMENT_C = 6;\nChemistry.ELEMENT_N = 7;\nChemistry.ELEMENT_O = 8;\nChemistry.ELEMENT_F = 9;\nChemistry.ELEMENT_Ne = 10;\nChemistry.ELEMENT_Na = 11;\nChemistry.ELEMENT_Mg = 12;\nChemistry.ELEMENT_Al = 13;\nChemistry.ELEMENT_Si = 14;\nChemistry.ELEMENT_P = 15;\nChemistry.ELEMENT_S = 16;\nChemistry.ELEMENT_Cl = 17;\nChemistry.ELEMENT_Ar = 18;\nChemistry.ELEMENT_K = 19;\nChemistry.ELEMENT_Ca = 20;\nChemistry.ELEMENT_Sc = 21;\nChemistry.ELEMENT_Ti = 22;\nChemistry.ELEMENT_V = 23;\nChemistry.ELEMENT_Cr = 24;\nChemistry.ELEMENT_Mn = 25;\nChemistry.ELEMENT_Fe = 26;\nChemistry.ELEMENT_Co = 27;\nChemistry.ELEMENT_Ni = 28;\nChemistry.ELEMENT_Cu = 29;\nChemistry.ELEMENT_Zn = 30;\nChemistry.ELEMENT_Ga = 31;\nChemistry.ELEMENT_Ge = 32;\nChemistry.ELEMENT_As = 33;\nChemistry.ELEMENT_Se = 34;\nChemistry.ELEMENT_Br = 35;\nChemistry.ELEMENT_Kr = 36;\nChemistry.ELEMENT_Rb = 37;\nChemistry.ELEMENT_Sr = 38;\nChemistry.ELEMENT_Y = 39;\nChemistry.ELEMENT_Zr = 40;\nChemistry.ELEMENT_Nb = 41;\nChemistry.ELEMENT_Mo = 42;\nChemistry.ELEMENT_Tc = 43;\nChemistry.ELEMENT_Ru = 44;\nChemistry.ELEMENT_Rh = 45;\nChemistry.ELEMENT_Pd = 46;\nChemistry.ELEMENT_Ag = 47;\nChemistry.ELEMENT_Cd = 48;\nChemistry.ELEMENT_In = 49;\nChemistry.ELEMENT_Sn = 50;\nChemistry.ELEMENT_Sb = 51;\nChemistry.ELEMENT_Te = 52;\nChemistry.ELEMENT_I = 53;\nChemistry.ELEMENT_Xe = 54;\nChemistry.ELEMENT_Cs = 55;\nChemistry.ELEMENT_Ba = 56;\nChemistry.ELEMENT_La = 57;\nChemistry.ELEMENT_Ce = 58;\nChemistry.ELEMENT_Pr = 59;\nChemistry.ELEMENT_Nd = 60;\nChemistry.ELEMENT_Pm = 61;\nChemistry.ELEMENT_Sm = 62;\nChemistry.ELEMENT_Eu = 63;\nChemistry.ELEMENT_Gd = 64;\nChemistry.ELEMENT_Tb = 65;\nChemistry.ELEMENT_Dy = 66;\nChemistry.ELEMENT_Ho = 67;\nChemistry.ELEMENT_Er = 68;\nChemistry.ELEMENT_Tm = 69;\nChemistry.ELEMENT_Yb = 70;\nChemistry.ELEMENT_Lu = 71;\nChemistry.ELEMENT_Hf = 72;\nChemistry.ELEMENT_Ta = 73;\nChemistry.ELEMENT_W = 74;\nChemistry.ELEMENT_Re = 75;\nChemistry.ELEMENT_Os = 76;\nChemistry.ELEMENT_Ir = 77;\nChemistry.ELEMENT_Pt = 78;\nChemistry.ELEMENT_Au = 79;\nChemistry.ELEMENT_Hg = 80;\nChemistry.ELEMENT_Tl = 81;\nChemistry.ELEMENT_Pb = 82;\nChemistry.ELEMENT_Bi = 83;\nChemistry.ELEMENT_Po = 84;\nChemistry.ELEMENT_At = 85;\nChemistry.ELEMENT_Rn = 86;\nChemistry.ELEMENT_Fr = 87;\nChemistry.ELEMENT_Ra = 88;\nChemistry.ELEMENT_Ac = 89;\nChemistry.ELEMENT_Th = 90;\nChemistry.ELEMENT_Pa = 91;\nChemistry.ELEMENT_U = 92;\nChemistry.ELEMENT_Np = 93;\nChemistry.ELEMENT_Pu = 94;\nChemistry.ELEMENT_Am = 95;\nChemistry.ELEMENT_Cm = 96;\nChemistry.ELEMENT_Bk = 97;\nChemistry.ELEMENT_Cf = 98;\nChemistry.ELEMENT_Es = 99;\nChemistry.ELEMENT_Fm = 100;\nChemistry.ELEMENT_Md = 101;\nChemistry.ELEMENT_No = 102;\nChemistry.ELEMENT_Lr = 103;\nChemistry.ELEMENT_Rf = 104;\nChemistry.ELEMENT_Db = 105;\nChemistry.ELEMENT_Sg = 106;\nChemistry.ELEMENT_Bh = 107;\nChemistry.ELEMENT_Hs = 108;\nChemistry.ELEMENT_Mt = 109;\nChemistry.ELEMENT_Ds = 110;\nChemistry.ELEMENT_Rg = 111;\nChemistry.ELEMENT_Cn = 112;\n//# sourceMappingURL=Chemistry.js.map","import { Vec } from '../util/Vec';\nexport class Graph {\n    constructor(sz, edge1, edge2) {\n        this.nbrs = [];\n        this.indices = null;\n        this.labels = null;\n        this.props = null;\n        if (sz != null)\n            for (let n = 0; n < sz; n++)\n                this.nbrs.push([]);\n        if (edge1 != null && edge2 != null) {\n            for (let n = 0; n < edge1.length; n++) {\n                this.nbrs[edge1[n]].push(edge2[n]);\n                this.nbrs[edge2[n]].push(edge1[n]);\n            }\n        }\n    }\n    clone() {\n        let g = new Graph();\n        for (let nbr of this.nbrs)\n            g.nbrs.push(nbr.slice(0));\n        g.indices = this.indices == null ? null : this.indices.slice(0);\n        g.labels = this.labels == null ? null : this.labels.slice(0);\n        g.props = this.props == null ? null : this.props.slice(0);\n        return g;\n    }\n    static fromMolecule(mol) {\n        let g = new Graph();\n        g.indices = [];\n        for (let n = 0; n < mol.numAtoms; n++) {\n            g.nbrs.push([]);\n            g.indices.push(n + 1);\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            g.nbrs[bfr].push(bto);\n            g.nbrs[bto].push(bfr);\n        }\n        return g;\n    }\n    static fromNeighbours(nbrs) {\n        let g = new Graph();\n        g.nbrs = nbrs;\n        return g;\n    }\n    toString() {\n        let buff = '#nodes=' + this.nbrs.length;\n        for (let n = 0; n < this.nbrs.length; n++) {\n            buff += ' ' + n + ':{' + this.nbrs[n] + '}';\n            if (n < Vec.len(this.indices))\n                buff += '[i=' + this.indices[n] + ']';\n            if (n < Vec.len(this.labels))\n                buff += '[l=' + this.labels[n] + ']';\n        }\n        return buff;\n    }\n    get numNodes() { return this.nbrs.length; }\n    numEdges(node) { return this.nbrs[node].length; }\n    getEdge(node, edge) { return this.nbrs[node][edge]; }\n    getEdges(node) { return this.nbrs[node]; }\n    getIndex(node) { return this.indices == null ? 0 : this.indices[node]; }\n    setIndex(node, idx) {\n        if (this.indices == null)\n            this.indices = Vec.numberArray(0, this.nbrs.length);\n        this.indices[node] = idx;\n    }\n    getLabel(node) { return this.labels == null ? null : this.labels[node]; }\n    setLabel(node, lbl) {\n        if (this.labels == null)\n            this.labels = Vec.stringArray('', this.nbrs.length);\n        this.labels[node] = lbl;\n    }\n    getProperty(node) { return this.props == null ? null : this.props[node]; }\n    setProperty(node, prp) {\n        if (this.props == null)\n            this.props = new Array(this.nbrs.length);\n        this.props[node] = prp;\n    }\n    addNode() {\n        this.nbrs.push([]);\n        if (this.indices != null)\n            this.indices.push(0);\n        if (this.labels != null)\n            this.labels.push('');\n        if (this.props != null)\n            this.props.push(null);\n        return this.nbrs.length - 1;\n    }\n    hasEdge(node1, node2) {\n        if (this.nbrs[node1].length <= this.nbrs[node2].length)\n            return this.nbrs[node1].indexOf(node2) >= 0;\n        else\n            return this.nbrs[node2].indexOf(node1) >= 0;\n    }\n    addEdge(node1, node2) {\n        this.nbrs[node1].push(node2);\n        this.nbrs[node2].push(node1);\n    }\n    removeEdge(node1, node2) {\n        let i1 = this.nbrs[node1].indexOf(node2), i2 = this.nbrs[node2].indexOf(node1);\n        if (i1 >= 0)\n            this.nbrs[node1].splice(i1, 1);\n        if (i2 >= 0)\n            this.nbrs[node2].splice(i2, 1);\n    }\n    isolateNode(node) {\n        for (let o of this.nbrs[node]) {\n            let i = this.nbrs[o].indexOf(node);\n            if (i >= 0)\n                this.nbrs[o].splice(i, 1);\n        }\n        this.nbrs[node] = [];\n    }\n    keepNodesMask(mask) {\n        const oldsz = this.nbrs.length, newsz = Vec.maskCount(mask);\n        if (newsz == oldsz)\n            return;\n        if (newsz == 0) {\n            this.nbrs = [];\n            this.indices = null;\n            this.labels = null;\n            this.props = null;\n            return;\n        }\n        let newmap = Vec.maskMap(mask);\n        let newnbrs = [];\n        for (let n = 0; n < newsz; n++)\n            newnbrs.push([]);\n        for (let n = 0, pos = 0; n < oldsz; n++)\n            if (mask[n]) {\n                for (let i of this.nbrs[n])\n                    if (mask[i])\n                        newnbrs[pos].push(newmap[i]);\n                pos++;\n            }\n        this.nbrs = newnbrs;\n        if (this.indices != null)\n            this.indices = Vec.maskGet(this.indices, mask);\n        if (this.labels != null)\n            this.labels = Vec.maskGet(this.labels, mask);\n        if (this.props != null)\n            this.props = Vec.maskGet(this.props, mask);\n    }\n    keepNodesIndex(idx) { this.keepNodesMask(Vec.idxMask(idx, this.numNodes)); }\n    removeNodesMask(mask) { this.keepNodesMask(Vec.notMask(mask)); }\n    removeNodesIndex(idx) { this.removeNodesMask(Vec.idxMask(idx, this.numNodes)); }\n    subgraphIndex(idx) {\n        const nsz = idx.length;\n        let g = new Graph(nsz);\n        if (this.indices != null || this.labels != null || this.props != null)\n            for (let n = 0; n < nsz; n++) {\n                if (this.indices != null)\n                    g.setIndex(n, this.indices[idx[n]]);\n                if (this.labels != null)\n                    g.setLabel(n, this.labels[idx[n]]);\n                if (this.props != null)\n                    g.setProperty(n, this.props[idx[n]]);\n            }\n        for (let i = 0; i < nsz; i++) {\n            for (let n of this.nbrs[idx[i]]) {\n                let j = idx.indexOf(n);\n                if (j > i)\n                    g.addEdge(i, j);\n            }\n        }\n        return g;\n    }\n    subgraphMask(mask) {\n        let g = this.clone();\n        g.keepNodesMask(mask);\n        return g;\n    }\n    calculateComponents() {\n        const sz = this.nbrs.length;\n        if (sz == 0)\n            return [];\n        let cc = Vec.numberArray(0, sz);\n        cc[0] = 1;\n        let first = 1, high = 1;\n        while (true) {\n            while (first < sz && cc[first] > 0) {\n                first++;\n            }\n            if (first >= sz)\n                break;\n            let anything = false;\n            for (let i = first; i < sz; i++)\n                if (cc[i] == 0) {\n                    for (let j = 0; j < this.nbrs[i].length; j++) {\n                        if (cc[this.nbrs[i][j]] != 0) {\n                            cc[i] = cc[this.nbrs[i][j]];\n                            anything = true;\n                        }\n                    }\n                }\n            if (!anything)\n                cc[first] = ++high;\n        }\n        return cc;\n    }\n    calculateComponentGroups() {\n        if (this.nbrs.length == 0)\n            return [];\n        let cc = this.calculateComponents();\n        let sz = Vec.max(cc);\n        let grp = [];\n        for (let n = 0; n < sz; n++)\n            grp.push([]);\n        for (let n = 0; n < cc.length; n++)\n            grp[cc[n] - 1].push(n);\n        return grp;\n    }\n    calculateRingBlocks() {\n        let sz = this.numNodes, nbrs = this.nbrs;\n        if (sz == 0)\n            return [[], 0];\n        let rblk = new Array(this.numNodes);\n        let visited = Vec.booleanArray(false, sz);\n        Vec.setTo(rblk, 0);\n        let path = new Array(sz + 1);\n        let plen = 0, numVisited = 0;\n        while (true) {\n            let last, current;\n            if (plen == 0) {\n                last = -1;\n                for (current = 0; visited[current]; current++) { }\n            }\n            else {\n                last = path[plen - 1];\n                current = -1;\n                for (let n = 0; n < nbrs[last].length; n++)\n                    if (!visited[nbrs[last][n]]) {\n                        current = nbrs[last][n];\n                        break;\n                    }\n            }\n            if (current >= 0 && plen >= 2) {\n                let back = path[plen - 1];\n                for (let n = 0; n < nbrs[current].length; n++) {\n                    let join = nbrs[current][n];\n                    if (join != back && visited[join]) {\n                        path[plen] = current;\n                        for (let i = plen; i == plen || path[i + 1] != join; i--) {\n                            let id = rblk[path[i]];\n                            if (id == 0)\n                                rblk[path[i]] = last;\n                            else if (id != last) {\n                                for (let j = 0; j < sz; j++)\n                                    if (rblk[j] == id)\n                                        rblk[j] = last;\n                            }\n                        }\n                    }\n                }\n            }\n            if (current >= 0) {\n                visited[current] = true;\n                path[plen++] = current;\n                numVisited++;\n            }\n            else {\n                plen--;\n            }\n            if (numVisited == sz)\n                break;\n        }\n        let nextID = 0;\n        for (let i = 0; i < sz; i++)\n            if (rblk[i] > 0) {\n                nextID--;\n                for (let j = sz - 1; j >= i; j--)\n                    if (rblk[j] == rblk[i])\n                        rblk[j] = nextID;\n            }\n        for (let i = 0; i < sz; i++)\n            rblk[i] = -rblk[i];\n        return [rblk, -nextID];\n    }\n    calculateRingBlockGroups() {\n        let [rblk, sz] = this.calculateRingBlocks();\n        if (sz == 0)\n            return [];\n        let cap = Vec.numberArray(0, sz);\n        for (let n = 0; n < rblk.length; n++)\n            if (rblk[n] > 0)\n                cap[rblk[n] - 1]++;\n        let grp = new Array(sz);\n        for (let n = 0; n < sz; n++) {\n            grp[n] = new Array(cap[n]);\n            cap[n] = 0;\n        }\n        for (let n = 0; n < rblk.length; n++) {\n            let i = rblk[n] - 1;\n            if (i < 0)\n                continue;\n            grp[i][cap[i]++] = n;\n        }\n        return grp;\n    }\n    findRingsOfSize(size) {\n        let [rblk, num] = this.calculateRingBlocks();\n        if (num == 0)\n            return [];\n        let rings = [];\n        let mask = new Array(this.numNodes);\n        for (let r = 1; r <= num; r++) {\n            for (let n = 0; n < this.numNodes; n++)\n                mask[n] = rblk[n] == r;\n            let newRings = this.findRingsOfSizeMask(size, mask);\n            for (let n = 0; n < newRings.length; n++)\n                rings.push(newRings[n]);\n        }\n        return rings;\n    }\n    findRingsOfSizeMask(size, mask) {\n        let rings = [];\n        for (let n = 0; n < this.numNodes; n++)\n            if (mask[n]) {\n                let path = new Array(size);\n                path[0] = n;\n                this.recursiveRingFind(path, 1, size, mask, rings);\n            }\n        return rings;\n    }\n    calculateBFS(idx) {\n        let ret = Vec.numberArray(-1, this.numNodes);\n        ret[idx] = 0;\n        let curnum = 0, lsz = 1, watermark = 0;\n        let list = Vec.numberArray(0, this.numNodes);\n        list[0] = idx;\n        while (true) {\n            let newsz = lsz;\n            for (let n = watermark; n < lsz; n++) {\n                for (let i = 0; i < this.nbrs[list[n]].length; i++) {\n                    let j = this.nbrs[list[n]][i];\n                    if (ret[j] < 0) {\n                        ret[j] = curnum + 1;\n                        list[newsz++] = j;\n                    }\n                }\n            }\n            if (newsz == lsz)\n                break;\n            watermark = lsz;\n            lsz = newsz;\n            curnum++;\n        }\n        return ret;\n    }\n    calculateGravity() {\n        const sz = this.numNodes;\n        const { nbrs } = this;\n        let wght = Vec.numberArray(1, sz), wmod = Vec.numberArray(0, sz);\n        for (let n = 0; n < sz; n++) {\n            Vec.setTo(wmod, wght);\n            for (let i = 0; i < sz; i++)\n                for (let j = nbrs[i].length - 1; j >= 0; j--)\n                    wmod[i] += wght[nbrs[i][j]];\n            Vec.setTo(wght, wmod);\n        }\n        return wght;\n    }\n    recursiveRingFind(path, psize, capacity, mask, rings) {\n        if (psize < capacity) {\n            let last = path[psize - 1];\n            for (let n = 0; n < this.nbrs[last].length; n++) {\n                let adj = this.nbrs[last][n];\n                if (!mask[adj])\n                    continue;\n                let fnd = false;\n                for (let i = 0; i < psize; i++)\n                    if (path[i] == adj) {\n                        fnd = true;\n                        break;\n                    }\n                if (!fnd) {\n                    let newPath = Vec.duplicate(path);\n                    newPath[psize] = adj;\n                    this.recursiveRingFind(newPath, psize + 1, capacity, mask, rings);\n                }\n            }\n            return;\n        }\n        let last = path[psize - 1];\n        let fnd = false;\n        for (let n = 0; n < this.nbrs[last].length; n++)\n            if (this.nbrs[last][n] == path[0]) {\n                fnd = true;\n                break;\n            }\n        if (!fnd)\n            return;\n        for (let n = 0; n < path.length; n++) {\n            let count = 0, p = path[n];\n            for (let i = 0; i < this.nbrs[p].length; i++)\n                if (path.indexOf(this.nbrs[p][i]) >= 0)\n                    count++;\n            if (count != 2)\n                return;\n        }\n        let first = 0;\n        for (let n = 1; n < psize; n++)\n            if (path[n] < path[first])\n                first = n;\n        let fm = (first - 1 + psize) % psize, fp = (first + 1) % psize;\n        let flip = path[fm] < path[fp];\n        if (first != 0 || flip) {\n            let newPath = new Array(psize);\n            for (let n = 0; n < psize; n++)\n                newPath[n] = path[(first + (flip ? psize - n : n)) % psize];\n            path = newPath;\n        }\n        for (let n = 0; n < rings.length; n++) {\n            let look = rings[n];\n            let same = true;\n            for (let i = 0; i < psize; i++)\n                if (look[i] != path[i]) {\n                    same = false;\n                    break;\n                }\n            if (same)\n                return;\n        }\n        rings.push(path);\n    }\n}\n//# sourceMappingURL=Graph.js.map","import { Chemistry } from '../data/Chemistry';\nimport { Graph } from '../data/Graph';\nimport { Molecule } from '../data/Molecule';\nimport { Vec } from '../util/Vec';\nexport class ResonanceRemover {\n    constructor(mol, resBonds, atomHyd = []) {\n        this.mol = mol;\n        this.resBonds = resBonds;\n        this.atomHyd = atomHyd;\n        this.maxIter = 1000;\n        this.bondOrders = [];\n        this.tolerant = false;\n        this.mol = mol;\n        this.resBonds = resBonds;\n        this.atomHyd = atomHyd;\n        for (let n = 1; n <= mol.numBonds; n++)\n            this.bondOrders.push(mol.bondOrder(n));\n    }\n    perform() {\n        const { mol } = this;\n        if (this.atomHyd == null) {\n            this.atomHyd = [];\n            for (let n = 1; n <= mol.numAtoms; n++)\n                this.atomHyd.push(mol.atomHExplicit(n));\n        }\n        this.correctInputMask();\n        let g = new Graph(mol.numAtoms);\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.resBonds[n - 1])\n                g.addEdge(mol.bondFrom(n) - 1, mol.bondTo(n) - 1);\n        let cc = g.calculateComponentGroups();\n        for (let n = 0; n < cc.length; n++)\n            if (cc[n].length >= 2)\n                this.processComponent(cc[n]);\n    }\n    correctInputMask() {\n        const { mol, atomHyd } = this;\n        const na = mol.numAtoms, nb = mol.numBonds;\n        let exclude = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++) {\n            let atno = mol.atomicNumber(n);\n            let val = atno == Chemistry.ELEMENT_C ? 4 :\n                atno == Chemistry.ELEMENT_N || atno == Chemistry.ELEMENT_P || atno == Chemistry.ELEMENT_B ? 3 :\n                    atno == Chemistry.ELEMENT_O || atno == Chemistry.ELEMENT_S ? 2 : -1;\n            if (val < 0) {\n                exclude[n - 1] = true;\n                continue;\n            }\n            val += mol.atomCharge(n);\n            if (atomHyd[n - 1] > 0)\n                val -= atomHyd[n - 1];\n            if (mol.atomAdjCount(n) >= val)\n                exclude[n - 1] = true;\n        }\n        for (let n = 1; n <= nb; n++)\n            if (!this.resBonds[n - 1] && mol.bondOrder(n) != 1) {\n                exclude[mol.bondFrom(n) - 1] = true;\n                exclude[mol.bondTo(n) - 1] = true;\n            }\n        this.resBonds = this.resBonds.slice(0);\n        for (let n = 0; n < nb; n++)\n            if (this.resBonds[n] && (exclude[mol.bondFrom(n + 1) - 1] || exclude[mol.bondTo(n + 1) - 1])) {\n                this.bondOrders[n] = 1;\n                this.resBonds[n] = false;\n            }\n    }\n    processComponent(nodes) {\n        const { mol, resBonds, bondOrders, atomHyd } = this;\n        let sz = nodes.length;\n        if (sz == 2) {\n            let b = mol.findBond(nodes[0] + 1, nodes[1] + 1);\n            bondOrders[b - 1] = 2;\n            return;\n        }\n        let optionalH = Vec.booleanArray(false, sz);\n        for (let n = 0; n < sz; n++) {\n            let i = nodes[n], a = i + 1;\n            optionalH[n] = atomHyd[i] == Molecule.HEXPLICIT_UNKNOWN && mol.atomElement(a) == 'N' && mol.atomAdjCount(a) - mol.atomCharge(a) <= 2;\n        }\n        let g = new Graph(sz);\n        let gravity = g.calculateGravity();\n        let mask = Vec.idxMask(nodes, mol.numAtoms);\n        let bsz = 0;\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (resBonds[n - 1] && mask[mol.bondFrom(n) - 1] && mask[mol.bondTo(n) - 1])\n                bsz++;\n        let bfr = Vec.numberArray(0, bsz), bto = Vec.numberArray(0, bsz), bgrav = Vec.numberArray(0, bsz), bidx = Vec.numberArray(0, bsz);\n        bsz = 0;\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (resBonds[n - 1] && mask[mol.bondFrom(n) - 1] && mask[mol.bondTo(n) - 1]) {\n                let f = nodes.indexOf(mol.bondFrom(n) - 1), t = nodes.indexOf(mol.bondTo(n) - 1);\n                bfr[bsz] = f;\n                bto[bsz] = t;\n                bgrav[bsz] = gravity[f] + gravity[t];\n                bidx[bsz] = n;\n                g.addEdge(f, t);\n                bsz++;\n            }\n        let seq = Vec.numberArray(0, bsz);\n        seq[0] = Vec.idxMax(bgrav);\n        let visited = Vec.booleanArray(false, bsz);\n        visited[seq[0]] = true;\n        for (let i = 1; i < bsz; i++) {\n            let b = -1;\n            for (let j = i - 1; j >= 0; j--) {\n                for (let n = 0; n < bsz; n++) {\n                    if (!visited[n])\n                        if (bfr[n] == bfr[seq[j]] || bfr[n] == bto[seq[j]] || bto[n] == bfr[seq[j]] || bto[n] == bto[seq[j]]) {\n                            if (b < 0 || bgrav[n] > bgrav[b])\n                                b = n;\n                        }\n                }\n                if (b >= 0)\n                    break;\n            }\n            if (b < 0)\n                throw 'Graph walk failed';\n            seq[i] = b;\n            visited[b] = true;\n        }\n        let paths = [];\n        paths.push([true]);\n        paths.push([false]);\n        let result = null;\n        let resultCount = 0;\n        let definiteMatch = Math.ceil(0.5 * bsz);\n        let iter = 0;\n        while (paths.length > 0) {\n            let p = paths[0];\n            let p1 = Vec.append(p, false), p2 = Vec.append(p, true);\n            if (!this.validPath(p1, seq, bfr, bto, g, optionalH))\n                p1 = null;\n            if (!this.validPath(p2, seq, bfr, bto, g, optionalH))\n                p2 = null;\n            if (Vec.len(p1) == bsz) {\n                let c = Vec.maskCount(p1);\n                if (c > resultCount) {\n                    result = p1;\n                    resultCount = c;\n                }\n                p1 = null;\n            }\n            if (Vec.len(p2) == bsz) {\n                let c = Vec.maskCount(p2);\n                if (c > resultCount) {\n                    result = p2;\n                    resultCount = c;\n                }\n                p2 = null;\n            }\n            if (resultCount >= definiteMatch)\n                break;\n            if (p1 == null && p2 == null)\n                paths.shift();\n            else if (p1 != null && p2 != null) {\n                paths[0] = p1;\n                paths.splice(1, 0, p2);\n            }\n            else if (p1 != null)\n                paths[0] = p1;\n            else\n                paths[0] = p2;\n            iter++;\n            if (iter > this.maxIter) {\n                if (result != null)\n                    break;\n                if (this.tolerant)\n                    return;\n                throw 'Resonance localisation exceeded maximum iteration count';\n            }\n        }\n        if (result == null) {\n            if (this.tolerant)\n                return;\n            throw 'Unable to find a solution to the resonance block.';\n        }\n        for (let n = 0; n < bsz; n++)\n            bondOrders[bidx[seq[n]] - 1] = result[n] ? 2 : 1;\n    }\n    validPath(path, seq, bfr, bto, g, optionalH) {\n        let sz = g.numNodes;\n        let count1 = Vec.numberArray(0, sz), count2 = Vec.numberArray(0, sz);\n        for (let n = 0; n < path.length; n++) {\n            let a1 = bfr[seq[n]], a2 = bto[seq[n]];\n            if (path[n]) {\n                count2[a1]++;\n                count2[a2]++;\n            }\n            else {\n                count1[a1]++;\n                count1[a2]++;\n            }\n        }\n        for (let n = 0; n < sz; n++) {\n            if (count2[n] > 1)\n                return false;\n            if (!optionalH[n] && g.numEdges(n) > 1 && count1[n] == g.numEdges(n))\n                return false;\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=ResonanceRemover.js.map","import { safeInt } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Graph } from './Graph';\nexport const BONDARTIFACT_EXTRA_RESPATH = 'xRESPATH:';\nexport const BONDARTIFACT_EXTRA_RESRING = 'xRESRING:';\nexport const BONDARTIFACT_EXTRA_ARENE = 'xARENE:';\nexport class BondArtifact {\n    constructor(mol) {\n        this.mol = mol;\n        this.resPaths = new Map();\n        this.resRings = new Map();\n        this.arenes = new Map();\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            for (let str of this.mol.atomExtra(n)) {\n                if (str.startsWith(BONDARTIFACT_EXTRA_RESPATH))\n                    this.appendResPath(n, str.substring(BONDARTIFACT_EXTRA_RESPATH.length).split(':'));\n                else if (str.startsWith(BONDARTIFACT_EXTRA_RESRING))\n                    this.appendResRing(n, str.substring(BONDARTIFACT_EXTRA_RESRING.length).split(':'));\n                else if (str.startsWith(BONDARTIFACT_EXTRA_ARENE))\n                    this.appendArene(n, str.substring(BONDARTIFACT_EXTRA_ARENE.length).split(':'));\n            }\n        }\n        for (let [blk, res] of this.resPaths.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (!this.pathify(res.atoms, false))\n                this.resPaths.delete(blk);\n        }\n        for (let [blk, res] of this.resRings.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (!this.pathify(res.atoms, true))\n                this.resRings.delete(blk);\n        }\n        for (let [blk, res] of this.arenes.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (res.atoms.length > 1)\n                res.centre = res.atoms.shift();\n            if (!this.pathify(res.atoms, false))\n                this.arenes.delete(blk);\n        }\n    }\n    getPathBlocks() { return Array.from(this.resPaths.keys()); }\n    getRingBlocks() { return Array.from(this.resRings.keys()); }\n    getAreneBlocks() { return Array.from(this.arenes.keys()); }\n    getResPaths() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.resPaths.keys())))\n            list.push(this.resPaths.get(key));\n        return list;\n    }\n    getResRings() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.resRings.keys())))\n            list.push(this.resRings.get(key));\n        return list;\n    }\n    getArenes() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.arenes.keys())))\n            list.push(this.arenes.get(key));\n        return list;\n    }\n    rewriteMolecule() {\n        const mol = this.mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n), modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (extra[i].startsWith(BONDARTIFACT_EXTRA_RESPATH) || extra[i].startsWith(BONDARTIFACT_EXTRA_RESRING) || extra[i].startsWith(BONDARTIFACT_EXTRA_ARENE)) {\n                    extra.splice(i);\n                    modified = true;\n                }\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n        for (let [blk, path] of this.resPaths.entries()) {\n            for (let n = 0; n < path.atoms.length; n++) {\n                let extra = mol.atomExtra(path.atoms[n]);\n                extra.push(BONDARTIFACT_EXTRA_RESPATH + blk + ':' + (n + 1));\n                mol.setAtomExtra(path.atoms[n], extra);\n            }\n        }\n        for (let [blk, ring] of this.resRings.entries()) {\n            for (let n = 0; n < ring.atoms.length; n++) {\n                let extra = mol.atomExtra(ring.atoms[n]);\n                extra.push(BONDARTIFACT_EXTRA_RESRING + blk + ':' + (n + 1));\n                mol.setAtomExtra(ring.atoms[n], extra);\n            }\n        }\n        for (let [blk, arene] of this.arenes.entries()) {\n            for (let n = -1; n < arene.atoms.length; n++) {\n                let atom = n < 0 ? arene.centre : arene.atoms[n];\n                let extra = mol.atomExtra(atom);\n                extra.push(BONDARTIFACT_EXTRA_ARENE + blk + ':' + (n + 2));\n                mol.setAtomExtra(atom, extra);\n            }\n        }\n    }\n    harmoniseNumbering(other) {\n        let blocks = other.getPathBlocks();\n        let stashPaths = this.getResPaths();\n        this.resPaths.clear();\n        for (let path of stashPaths) {\n            let blk = this.nextIdentifier(blocks);\n            this.resPaths.set(blk, path);\n            blocks.push(blk);\n        }\n        blocks = other.getRingBlocks();\n        let stashRings = this.getResRings();\n        this.resRings.clear();\n        for (let ring of stashRings) {\n            let blk = this.nextIdentifier(blocks);\n            this.resRings.set(blk, ring);\n            blocks.push(blk);\n        }\n        blocks = other.getAreneBlocks();\n        let stashArenes = this.getArenes();\n        this.arenes.clear();\n        for (let arene of stashArenes) {\n            let blk = this.nextIdentifier(blocks);\n            this.arenes.set(blk, arene);\n            blocks.push(blk);\n        }\n    }\n    createPath(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let path = this.atomsAsPath(atoms);\n        if (path) {\n            let id = this.nextIdentifier(Array.from(this.resPaths.keys()));\n            this.resPaths.set(id, path);\n            return true;\n        }\n        return false;\n    }\n    createRing(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let ring = this.atomsAsRing(atoms);\n        if (ring) {\n            let id = this.nextIdentifier(Array.from(this.resRings.keys()));\n            this.resRings.set(id, ring);\n            return true;\n        }\n        return false;\n    }\n    createArene(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let arene = this.atomsAsArene(atoms);\n        if (arene) {\n            let id = this.nextIdentifier(Array.from(this.arenes.keys()));\n            this.arenes.set(id, arene);\n            return true;\n        }\n        return false;\n    }\n    removeArtifact(atoms) {\n        let type = 0, pick = 0, overlap = 0;\n        for (let [blk, path] of this.resPaths.entries()) {\n            let count = 0;\n            for (let a of path.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 1;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        for (let [blk, ring] of this.resRings.entries()) {\n            let count = 0;\n            for (let a of ring.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 2;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        for (let [blk, arene] of this.arenes.entries()) {\n            let count = atoms.indexOf(arene.centre) >= 0 ? 1 : 0;\n            for (let a of arene.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 3;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        if (type == 0)\n            return false;\n        else if (type == 1)\n            this.resPaths.delete(pick);\n        else if (type == 2)\n            this.resRings.delete(pick);\n        else if (type == 3)\n            this.arenes.delete(pick);\n        return true;\n    }\n    static removeAll(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (!extra[i].startsWith(BONDARTIFACT_EXTRA_RESPATH) && !extra[i].startsWith(BONDARTIFACT_EXTRA_RESRING) &&\n                    !extra[i].startsWith(BONDARTIFACT_EXTRA_ARENE))\n                    continue;\n                extra = Vec.remove(extra, i);\n                modified = true;\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n    }\n    appendResPath(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.resPaths.get(blk);\n        if (res == null)\n            this.resPaths.set(blk, res = { atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    appendResRing(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.resRings.get(blk);\n        if (res == null)\n            this.resRings.set(blk, res = { atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    appendArene(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.arenes.get(blk);\n        if (res == null)\n            this.arenes.set(blk, res = { centre: 0, atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    pack(arr) {\n        let ret = [];\n        for (let v of arr)\n            if (v != 0)\n                ret.push(v);\n        return ret;\n    }\n    pathify(atoms, requireRing) {\n        let sz = atoms.length;\n        if (sz < 2)\n            return false;\n        let g = Graph.fromMolecule(this.mol);\n        for (let n = 0; n < this.mol.numAtoms; n++)\n            g.setIndex(n, n + 1);\n        g = g.subgraphIndex(Vec.add(atoms, -1));\n        let pos = 0;\n        for (let n = 1; n < sz; n++)\n            if (g.numEdges(n) < g.numEdges(pos))\n                pos = n;\n        Vec.setTo(atoms, -1);\n        for (let n = 0; n < sz; n++) {\n            atoms[n] = pos;\n            if (n == sz - 1) {\n                if (requireRing)\n                    if (g.getEdges(pos).indexOf(atoms[0]) < 0)\n                        return false;\n            }\n            else {\n                let next = sz;\n                for (let i of g.getEdges(pos))\n                    if (atoms.indexOf(i) < 0 && i < next)\n                        next = i;\n                if (next == sz)\n                    return false;\n                pos = next;\n            }\n        }\n        for (let n = 0; n < sz; n++)\n            atoms[n] = g.getIndex(atoms[n]);\n        return true;\n    }\n    alreadyExists(atoms) {\n        atoms = Vec.sorted(atoms);\n        for (let path of this.resPaths.values()) {\n            if (Vec.equals(atoms, Vec.sorted(path.atoms)))\n                return true;\n        }\n        for (let ring of this.resRings.values()) {\n            if (Vec.equals(atoms, Vec.sorted(ring.atoms)))\n                return true;\n        }\n        for (let arene of this.arenes.values()) {\n            let areneAtoms = Vec.append(arene.atoms, arene.centre);\n            if (Vec.equals(atoms, Vec.sorted(areneAtoms)))\n                return true;\n        }\n        return false;\n    }\n    atomsAsPath(atoms) {\n        if (atoms.length < 2)\n            return null;\n        let path = { atoms: atoms };\n        if (!this.pathify(path.atoms, false))\n            return null;\n        return path;\n    }\n    atomsAsRing(atoms) {\n        if (atoms.length < 3)\n            return null;\n        let ring = { atoms: atoms };\n        if (!this.pathify(ring.atoms, true))\n            return null;\n        return ring;\n    }\n    atomsAsArene(atoms) {\n        const sz = atoms.length;\n        if (sz < 3)\n            return null;\n        let g = Graph.fromMolecule(this.mol).subgraphIndex(Vec.add(atoms, -1));\n        let best = 0;\n        if (sz == 3) {\n            let bsum = [0, 0, 0];\n            for (let n = 0; n < sz; n++) {\n                if (g.numEdges(n) != 2)\n                    return null;\n                for (let e of g.getEdges(n))\n                    bsum[n] += this.mol.bondOrder(this.mol.findBond(atoms[n], atoms[e]));\n                best = Vec.idxMin(bsum);\n            }\n        }\n        else {\n            for (let n = 1; n < sz; n++)\n                if (g.numEdges(n) > g.numEdges(best))\n                    best = n;\n        }\n        let arene = { centre: atoms[best], atoms: Vec.remove(atoms, best) };\n        if (!this.pathify(arene.atoms, false))\n            return null;\n        return arene;\n    }\n    nextIdentifier(inkeys) {\n        if (inkeys.length == 0)\n            return 1;\n        let keys = Vec.sorted(inkeys);\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=BondArtifact.js.map","import { deepClone, safeFloat, safeInt } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nexport var DataSheetColumn;\n(function (DataSheetColumn) {\n    DataSheetColumn[\"Molecule\"] = \"molecule\";\n    DataSheetColumn[\"String\"] = \"string\";\n    DataSheetColumn[\"Real\"] = \"real\";\n    DataSheetColumn[\"Integer\"] = \"integer\";\n    DataSheetColumn[\"Boolean\"] = \"boolean\";\n    DataSheetColumn[\"Extend\"] = \"extend\";\n})(DataSheetColumn || (DataSheetColumn = {}));\nexport class DataSheet {\n    constructor(data) {\n        if (!data)\n            data = {};\n        if (!data.title)\n            data.title = '';\n        if (!data.description)\n            data.description = '';\n        if (data.numCols == null)\n            data.numCols = Vec.len(data.colData);\n        if (data.numRows == null)\n            data.numRows = Vec.len(data.rowData);\n        if (data.numExtens == null)\n            data.numExtens = Vec.len(data.extData);\n        if (data.colData == null)\n            data.colData = [];\n        if (data.rowData == null)\n            data.rowData = [];\n        if (data.extData == null)\n            data.extData = [];\n        this.data = data;\n    }\n    clone(withRows = true) {\n        let { numCols, numRows, colData, rowData } = this.data;\n        let data = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: numCols,\n            numRows: withRows ? numRows : 0,\n            numExtens: this.data.numExtens,\n            colData: deepClone(colData),\n            rowData: withRows ? new Array(numRows) : [],\n            extData: deepClone(this.data.extData),\n        };\n        if (withRows)\n            for (let r = 0; r < numRows; r++) {\n                let inRow = rowData[r], outRow = new Array(numCols);\n                for (let c = 0; c < numCols; c++) {\n                    if (inRow[c] != null && colData[c].type == \"molecule\" && inRow[c] instanceof Molecule)\n                        outRow[c] = inRow[c].clone();\n                    else\n                        outRow[c] = inRow[c];\n                }\n                data.rowData[r] = outRow;\n            }\n        return new DataSheet(data);\n    }\n    cloneMask(colMask, rowMask = null, inclExtn = true) {\n        let { numCols, numRows, colData, rowData } = this.data;\n        let data = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: Vec.maskCount(colMask),\n            numRows: rowMask ? Vec.maskCount(rowMask) : 0,\n            numExtens: inclExtn ? this.data.numExtens : 0,\n            colData: deepClone(Vec.maskGet(colData, colMask)),\n            rowData: [],\n            extData: inclExtn ? deepClone(this.data.extData) : [],\n        };\n        if (rowMask)\n            for (let r = 0; r < numRows; r++)\n                if (rowMask[r]) {\n                    let inRow = rowData[r], outRow = Vec.maskGet(inRow, colMask);\n                    data.rowData.push(outRow);\n                }\n        const { colData: outCols, rowData: outRows } = data;\n        for (let c = outCols.length - 1; c >= 0; c--)\n            if (outCols[c].type == \"molecule\") {\n                for (let r = outRows.length - 1; r >= 0; r--)\n                    if (outRows[r][c] != null && outRows[r][c] instanceof Molecule)\n                        outRows[r][c] = outRows[r][c].clone();\n            }\n        return new DataSheet(data);\n    }\n    getData() {\n        return this.data;\n    }\n    get numCols() {\n        return this.data.numCols;\n    }\n    get numRows() {\n        return this.data.numRows;\n    }\n    get title() { return this.data.title; }\n    set title(title) { this.data.title = title; }\n    get description() { return this.data.description; }\n    set description(description) { this.data.description = description; }\n    get numExtensions() {\n        return this.data.numExtens;\n    }\n    getExtName(idx) {\n        return this.data.extData[idx].name;\n    }\n    getExtType(idx) {\n        return this.data.extData[idx].type;\n    }\n    getExtData(idx) {\n        return this.data.extData[idx].data;\n    }\n    setExtName(idx, val) {\n        this.data.extData[idx].name = val;\n    }\n    setExtType(idx, val) {\n        this.data.extData[idx].type = val;\n    }\n    setExtData(idx, val) {\n        this.data.extData[idx].data = val;\n    }\n    appendExtension(name, type, data) {\n        this.data.numExtens++;\n        this.data.extData.push({ name, type, data });\n        return this.data.numExtens - 1;\n    }\n    insertExtension(idx, name, type, data) {\n        this.data.numExtens++;\n        this.data.extData.splice(idx, 0, { name, type, data });\n    }\n    deleteExtension(idx) {\n        this.data.extData.splice(idx, 1);\n        this.data.numExtens--;\n    }\n    colName(col) {\n        return this.data.colData[col].name;\n    }\n    colType(col) {\n        return this.data.colData[col].type;\n    }\n    colDescr(col) {\n        return this.data.colData[col].descr;\n    }\n    isNull(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col] == null;\n    }\n    notNull(row, col) {\n        return !this.isNull(row, col);\n    }\n    isBlank(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col))\n            return true;\n        let ct = this.colType(col);\n        if (ct == \"molecule\")\n            return this.getMolecule(row, col).numAtoms == 0;\n        if (ct == \"string\")\n            return this.getString(row, col).length == 0;\n        if (ct == \"extend\")\n            return this.getExtend(row, col).length == 0;\n        return false;\n    }\n    notBlank(row, col) {\n        return !this.isBlank(row, col);\n    }\n    getObject(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        return this.data.rowData[row][col];\n    }\n    getMolecule(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        let datum = this.data.rowData[row][col];\n        if (datum == null)\n            return null;\n        if (typeof datum === 'string') {\n            datum = Molecule.fromString(datum);\n            this.data.rowData[row][col] = datum;\n        }\n        return datum;\n    }\n    getMoleculeClone(row, col) {\n        let mol = this.getMolecule(row, col);\n        return mol == null ? null : mol.clone();\n    }\n    getMoleculeBlank(row, col) {\n        let mol = this.getMolecule(row, col);\n        return mol ? mol : new Molecule();\n    }\n    getString(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        let str = this.data.rowData[row][col];\n        return str == null ? '' : str;\n    }\n    getInteger(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getReal(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getBoolean(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getExtend(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    setToNull(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = null;\n    }\n    setObject(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setMolecule(row, col, mol) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = mol ? mol.clone() : null;\n    }\n    setString(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setInteger(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setReal(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setBoolean(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setExtend(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    isEqualMolecule(row, col, mol) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (mol == null))\n            return false;\n        if (mol == null)\n            return true;\n        return this.getMolecule(row, col).compareTo(mol) == 0;\n    }\n    isEqualString(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null || val == ''))\n            return false;\n        if (val == null || val == '')\n            return true;\n        return this.getString(row, col) == val;\n    }\n    isEqualInteger(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getInteger(row, col) == val;\n    }\n    isEqualReal(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getReal(row, col) == val;\n    }\n    isEqualBoolean(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getBoolean(row, col) == val;\n    }\n    appendColumn(name, type, descr) {\n        this.data.numCols++;\n        this.data.colData.push({ name, type, descr });\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].push(null);\n        return this.data.numCols - 1;\n    }\n    insertColumn(col, name, type, descr) {\n        this.data.numCols++;\n        this.data.colData.splice(col, 0, { name, type, descr });\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].splice(col, 0, null);\n    }\n    deleteColumn(col) {\n        this.data.numCols--;\n        this.data.colData.splice(col, 1);\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].splice(col, 1);\n    }\n    changeColumnName(col, name, descr) {\n        this.data.colData[col].name = name;\n        this.data.colData[col].descr = descr;\n    }\n    changeColumnType(col, newType) {\n        let oldType = this.colType(col);\n        if (oldType == newType)\n            return;\n        let incompatible = oldType == \"molecule\" || newType == \"molecule\" ||\n            oldType == \"extend\" || newType == \"extend\";\n        for (let n = this.data.rowData.length - 1; n >= 0; n--) {\n            let row = this.data.rowData[n];\n            if (row[col] == null)\n                continue;\n            if (incompatible) {\n                row[col] = null;\n                continue;\n            }\n            let val = '';\n            if (oldType == \"string\")\n                val = row[col];\n            else if (oldType == \"integer\")\n                val = row[col].toString();\n            else if (oldType == \"real\")\n                val = row[col].toString();\n            else if (oldType == \"boolean\")\n                val = row[col] ? 'true' : 'false';\n            row[col] = null;\n            if (newType == \"string\")\n                row[col] = val;\n            else if (newType == \"integer\") {\n                let num = parseInt(val);\n                row[col] = isFinite(num) ? num : null;\n            }\n            else if (newType == \"real\") {\n                let num = parseFloat(val);\n                row[col] = isFinite(num) ? num : null;\n            }\n            else if (newType == \"boolean\")\n                row[col] = val.toLowerCase() == 'true' ? true : false;\n        }\n        this.data.colData[col].type = newType;\n    }\n    ensureColumn(name, type, descr) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].name == name) {\n                if (this.data.colData[n].type != type)\n                    this.changeColumnType(n, type);\n                this.data.colData[n].descr = descr;\n                return n;\n            }\n        return this.appendColumn(name, type, descr);\n    }\n    reorderColumns(order) {\n        let identity = true;\n        for (let n = 0; n < order.length - 1; n++)\n            if (order[n] != order[n + 1] - 1) {\n                identity = false;\n                break;\n            }\n        if (identity)\n            return;\n        this.data.colData = Vec.idxGet(this.data.colData, order);\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n] = Vec.idxGet(this.data.rowData[n], order);\n    }\n    appendRow() {\n        this.data.numRows++;\n        let row = new Array();\n        for (let n = 0; n < this.data.numCols; n++)\n            row.push(null);\n        this.data.rowData.push(row);\n        return this.data.numRows - 1;\n    }\n    appendRowFrom(srcDS, row) {\n        this.data.numRows++;\n        this.data.rowData.push(srcDS.data.rowData[row].slice(0));\n        return this.data.numRows - 1;\n    }\n    insertRow(row) {\n        this.data.numRows++;\n        let data = new Array();\n        for (let n = 0; n < this.data.numCols; n++)\n            data.push(null);\n        this.data.rowData.splice(row, 0, data);\n    }\n    deleteRow(row) {\n        this.data.numRows--;\n        this.data.rowData.splice(row, 1);\n    }\n    deleteAllRows() {\n        this.data.numRows = 0;\n        this.data.rowData = new Array();\n    }\n    moveRowUp(row) {\n        let data = this.data.rowData[row];\n        this.data.rowData[row] = this.data.rowData[row - 1];\n        this.data.rowData[row - 1] = data;\n    }\n    moveRowDown(row) {\n        let data = this.data.rowData[row];\n        this.data.rowData[row] = this.data.rowData[row + 1];\n        this.data.rowData[row + 1] = data;\n    }\n    swapRows(row1, row2) {\n        Vec.swap(this.data.rowData, row1, row2);\n    }\n    exciseSingleRow(row) {\n        let newData = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: this.data.numCols,\n            numRows: 1,\n            numExtens: this.data.numExtens,\n            colData: this.data.colData.slice(0),\n            rowData: [this.data.rowData[row].slice(0)],\n            extData: this.data.extData.slice(0)\n        };\n        return new DataSheet(newData);\n    }\n    colIsPrimitive(col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        let ct = this.data.colData[col].type;\n        return ct == 'string' || ct == 'real' || ct == 'integer' || ct == 'boolean';\n    }\n    findColByName(name, type) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].name == name) {\n                if (type == null || this.data.colData[n].type == type)\n                    return n;\n            }\n        return -1;\n    }\n    firstColOfType(type) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].type == type)\n                return n;\n        return -1;\n    }\n    copyCell(toRow, toCol, fromDS, fromRow, fromCol) {\n        this.setToNull(toRow, toCol);\n        if (fromDS.isNull(fromRow, fromCol))\n            return;\n        let obj = fromDS.getObject(fromRow, fromCol);\n        this.setObject(toRow, toCol, DataSheet.convertType(obj, fromDS.colType(fromCol), this.colType(toCol)));\n    }\n    static convertType(obj, fromType, toType) {\n        const ft = fromType, tt = toType;\n        if (obj == null || ft == tt || (typeof obj == 'string' && obj == ''))\n            return obj;\n        if (tt == \"string\") {\n            if (ft == \"integer\")\n                return obj.toString();\n            else if (ft == \"real\")\n                return obj.toString();\n            else if (ft == \"boolean\")\n                return obj ? 'true' : 'false';\n        }\n        else if (tt == \"real\") {\n            if (ft == \"string\")\n                return safeFloat(obj, null);\n            else if (ft == \"integer\")\n                return obj;\n            else if (ft == \"boolean\")\n                return obj ? 1 : 0;\n        }\n        else if (tt == \"integer\") {\n            if (ft == \"string\")\n                return safeInt(obj, null);\n            else if (ft == \"real\")\n                return Math.round(obj);\n            else if (ft == \"boolean\")\n                return obj ? 1 : 0;\n        }\n        else if (tt == \"boolean\") {\n            if (ft == \"string\")\n                return obj.toLowerCase() == 'true';\n            else if (ft == \"integer\")\n                return obj > 0;\n            else if (ft == \"real\")\n                return obj >= 0.5;\n        }\n        return null;\n    }\n    toString(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : obj.toString();\n    }\n    toInt(row, col) {\n        if (!this.colIsPrimitive(col))\n            return null;\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : parseInt(obj);\n    }\n    toReal(row, col) {\n        if (!this.colIsPrimitive(col))\n            return null;\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : parseFloat(obj);\n    }\n}\n//# sourceMappingURL=DataSheet.js.map","import { Vec } from '../util/Vec';\nexport var ForeignMoleculeTransient;\n(function (ForeignMoleculeTransient) {\n    ForeignMoleculeTransient[\"AtomAromatic\"] = \"yAROMATIC\";\n    ForeignMoleculeTransient[\"BondAromatic\"] = \"yAROMATIC\";\n    ForeignMoleculeTransient[\"BondZeroDative\"] = \"yZERO_DATIVE\";\n    ForeignMoleculeTransient[\"BondZeroHydrogen\"] = \"yZERO_HYDROGEN\";\n    ForeignMoleculeTransient[\"AtomChiralMDLOdd\"] = \"yCHIRAL_MDL_ODD\";\n    ForeignMoleculeTransient[\"AtomChiralMDLEven\"] = \"yCHIRAL_MDL_EVEN\";\n    ForeignMoleculeTransient[\"AtomChiralMDLRacemic\"] = \"yCHIRAL_MDL_RACEMIC\";\n    ForeignMoleculeTransient[\"AtomExplicitValence\"] = \"yMDL_EXPLICIT_VALENCE\";\n    ForeignMoleculeTransient[\"AtomSgroupMultiAttach\"] = \"yMDL_SGROUP_MULTIATTACH\";\n    ForeignMoleculeTransient[\"AtomSgroupMultiRepeat\"] = \"yMDL_SGROUP_MULTIREPEAT\";\n    ForeignMoleculeTransient[\"AtomSgroupData\"] = \"yMDL_SGROUP_DATA\";\n    ForeignMoleculeTransient[\"AtomSCSRClass\"] = \"yMDL_SCSR_CLASS\";\n    ForeignMoleculeTransient[\"AtomSCSRSeqID\"] = \"yMDL_SCSR_SEQID\";\n    ForeignMoleculeTransient[\"AtomSCSRAttchOrd\"] = \"yMDL_SCSR_ATTCHORD\";\n})(ForeignMoleculeTransient || (ForeignMoleculeTransient = {}));\nexport class ForeignMolecule {\n    static noteAromaticAtoms(mol) {\n        const sz = mol.numAtoms;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.atomTransient(n).indexOf(ForeignMoleculeTransient.AtomAromatic) >= 0;\n        return mask;\n    }\n    static noteAromaticBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).indexOf(ForeignMoleculeTransient.BondAromatic) >= 0;\n        return mask;\n    }\n    static noteZeroDativeBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).includes(ForeignMoleculeTransient.BondZeroDative);\n        return mask;\n    }\n    static noteZeroHydrogenBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).includes(ForeignMoleculeTransient.BondZeroHydrogen);\n        return mask;\n    }\n    static markExplicitValence(mol, atom, valence) {\n        let trans = mol.atomTransient(atom).filter((tr) => !tr.startsWith(ForeignMoleculeTransient.AtomExplicitValence + ':'));\n        trans.push(`${ForeignMoleculeTransient.AtomExplicitValence}:${valence}`);\n        mol.setAtomTransient(atom, trans);\n    }\n    static noteExplicitValence(mol, atom) {\n        let trans = mol.atomTransient(atom);\n        for (let tr of trans)\n            if (tr.startsWith(ForeignMoleculeTransient.AtomExplicitValence + ':'))\n                return parseInt(tr.substring(ForeignMoleculeTransient.AtomExplicitValence.length + 1));\n        return null;\n    }\n    static markSgroupMultiAttach(mol, name, atoms, keyval = {}) {\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiAttach.length + 1);\n                    let comma = payload.indexOf(',');\n                    let bits = payload.split(',');\n                    let idx = parseInt(bits[0]);\n                    if (!(idx > 0))\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let tag = `${ForeignMoleculeTransient.AtomSgroupMultiAttach}:${idxHigh + 1},${name}`;\n        for (let [key, val] of Object.entries(keyval))\n            tag += ',' + key + '=' + val;\n        for (let a of atoms)\n            mol.setAtomTransient(a, Vec.append(mol.atomTransient(a), tag));\n    }\n    static hasAnySgroupMultiAttach(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupMultiAttach(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiAttach.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 2)\n                        continue;\n                    let idx = parseInt(bits[0]), name = bits[1];\n                    if (!(idx > 0) || !name)\n                        continue;\n                    let keyval = {};\n                    for (let i = 2; i < bits.length; i++) {\n                        let eq = bits[i].indexOf('=');\n                        if (eq < 0)\n                            continue;\n                        keyval[bits[i].substring(0, eq)] = bits[i].substring(eq + 1);\n                    }\n                    let sgm = map[idx];\n                    if (sgm)\n                        sgm.atoms.push(n);\n                    else\n                        map[idx] = { name, atoms: [n], keyval };\n                }\n        return Object.values(map);\n    }\n    static markSgroupMultiRepeat(mol, mult, atoms) {\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiRepeat.length + 1);\n                    let comma = payload.indexOf(',');\n                    if (comma <= 0)\n                        continue;\n                    let idx = parseInt(payload.substring(0, comma));\n                    if (idx <= 0)\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let unit = atoms.length / mult;\n        let tag = `${ForeignMoleculeTransient.AtomSgroupMultiRepeat}:${idxHigh + 1},${mult},${unit},`;\n        for (let n = 0; n < atoms.length; n++)\n            mol.setAtomTransient(atoms[n], Vec.append(mol.atomTransient(atoms[n]), tag + (n + 1)));\n    }\n    static hasAnySgroupMultiRepeat(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupMultiRepeat(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiRepeat.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 4)\n                        continue;\n                    let idx = parseInt(bits[0]), mult = parseInt(bits[1]), unit = parseInt(bits[2]), pos = parseInt(bits[3]);\n                    if (!(idx > 0) || mult < 2 || unit < 1 || pos < 1 || pos > mult * unit)\n                        continue;\n                    let mr = map[idx];\n                    if (mr == null)\n                        map[idx] = mr = { mult, unit, atoms: Vec.numberArray(0, mult * unit) };\n                    else if (mr.mult != mult || mr.unit != unit)\n                        continue;\n                    mr.atoms[pos - 1] = n;\n                }\n        return Object.values(map);\n    }\n    static markSgroupData(mol, name, value, unit, query, atoms) {\n        var _a;\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupData.length + 1);\n                    let comma = payload.indexOf(',');\n                    if (comma <= 0)\n                        continue;\n                    let idx = parseInt(payload.substring(0, comma));\n                    if (idx <= 0)\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let bits = [(idxHigh + 1).toString(), name, value, unit, query];\n        for (let n = 1; n < bits.length; n++)\n            bits[n] = ((_a = bits[n]) !== null && _a !== void 0 ? _a : '').replace(/\\,/g, '@@');\n        let tag = ForeignMoleculeTransient.AtomSgroupData + ':' + bits.join(',');\n        for (let n = 0; n < atoms.length; n++)\n            mol.setAtomTransient(atoms[n], Vec.append(mol.atomTransient(atoms[n]), tag));\n    }\n    static hasAnySgroupData(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupData(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupData.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 5)\n                        continue;\n                    let idx = parseInt(bits[0]);\n                    for (let i = 1; i < 5; i++)\n                        bits[i] = bits[i].replace(/\\@\\@/g, ',');\n                    if (!(idx > 0))\n                        continue;\n                    let sd = map[idx];\n                    if (sd)\n                        sd.atoms.push(n);\n                    else\n                        map[idx] = { name: bits[1], value: bits[2], unit: bits[3], query: bits[4], atoms: [n] };\n                }\n        return Object.values(map);\n    }\n}\n//# sourceMappingURL=ForeignMolecule.js.map","import { Vec } from '../util/Vec';\nexport const POLYMERBLOCK_EXTRA_POLYMER = 'xPOLYMER:';\nexport const POLYMERBLOCK_SPECIAL_UNCAPPED = '*';\nexport var PolymerBlockConnectivity;\n(function (PolymerBlockConnectivity) {\n    PolymerBlockConnectivity[\"HeadToTail\"] = \"ht\";\n    PolymerBlockConnectivity[\"HeadToHead\"] = \"hh\";\n    PolymerBlockConnectivity[\"Random\"] = \"rnd\";\n})(PolymerBlockConnectivity || (PolymerBlockConnectivity = {}));\nexport class PolymerBlockUnit {\n    constructor(atoms) {\n        this.atoms = atoms;\n        this.connect = null;\n        this.bondConn = null;\n        this.atomName = new Map();\n        this.bondIncl = new Map();\n        this.bondExcl = new Map();\n    }\n    clone() {\n        let dup = new PolymerBlockUnit(this.atoms.slice(0));\n        dup.connect = this.connect;\n        if (this.bondConn)\n            dup.bondConn = this.bondConn.slice(0);\n        for (let [k, v] of this.atomName.entries())\n            dup.atomName.set(k, v.slice(0));\n        for (let [k, v] of this.bondIncl.entries())\n            dup.bondIncl.set(k, v.slice(0));\n        for (let [k, v] of this.bondExcl.entries())\n            dup.bondExcl.set(k, v.slice(0));\n        return dup;\n    }\n}\nexport class PolymerBlock {\n    constructor(mol) {\n        this.mol = mol;\n        this.units = new Map();\n        let blockAtoms = new Map();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            for (let str of extra)\n                if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = str.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    let id = parseInt(bits[0]);\n                    if (id > 0) {\n                        let atoms = blockAtoms.get(id);\n                        if (atoms)\n                            atoms.push(n);\n                        else\n                            atoms = [n];\n                        blockAtoms.set(id, atoms);\n                    }\n                }\n        }\n        for (let key of Vec.sorted(Array.from(blockAtoms.keys())))\n            this.appendBlock(key, blockAtoms.get(key));\n    }\n    getIDList() { return Vec.sorted(Array.from(this.units.keys())); }\n    getUnit(id) { return this.units.get(id); }\n    getUnits() { return Array.from(this.units.values()); }\n    rewriteMolecule() {\n        this.purgeExtraFields();\n        for (let key of Vec.sorted(Array.from(this.units.keys())))\n            this.writeUnit(key, this.units.get(key));\n    }\n    harmoniseNumbering(other) {\n        let allKeys = other.getIDList();\n        for (let key of this.getIDList())\n            if (allKeys.includes(key)) {\n                let unit = this.units.get(key);\n                this.units.delete(key);\n                key = this.nextIdentifier(allKeys);\n                this.units.set(key, unit);\n                allKeys.push(key);\n            }\n    }\n    removeUnit(id) {\n        let unit = this.units.get(id);\n        if (unit == null)\n            return;\n        this.units.delete(id);\n        let pfx = POLYMERBLOCK_EXTRA_POLYMER + id + ':';\n        for (let a of unit.atoms) {\n            let extra = this.mol.atomExtra(a);\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(pfx))\n                    extra = Vec.remove(extra, i);\n            this.mol.setAtomExtra(a, extra);\n        }\n        for (let b = 1; b <= this.mol.numBonds; b++) {\n            let extra = this.mol.bondExtra(b);\n            if (Vec.isBlank(extra))\n                continue;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(pfx))\n                    extra = Vec.remove(extra, i);\n            this.mol.setBondExtra(b, extra);\n        }\n    }\n    removeAll() {\n        this.units.clear();\n        this.purgeExtraFields();\n    }\n    createUnit(unit) {\n        let id = this.nextIdentifier();\n        this.units.set(id, unit.clone());\n        this.writeUnit(id, unit);\n        return id;\n    }\n    static hasPolymerExtensions(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra)\n                    if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n                        return true;\n        }\n        return false;\n    }\n    static getPolymerExtensions(mol, atom) {\n        let extra = mol.atomExtra(atom), polext = null;\n        if (extra == null)\n            return null;\n        for (let str of extra)\n            if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n                polext = Vec.append(polext, str);\n        return polext;\n    }\n    static removePolymerExtensions(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        if (extra == null)\n            return;\n        let modified = false;\n        for (let i = extra.length - 1; i >= 0; i--)\n            if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                extra = Vec.remove(extra, i);\n                modified = true;\n            }\n        if (modified)\n            mol.setAtomExtra(atom, extra);\n    }\n    appendBlock(id, atoms) {\n        const { mol } = this;\n        let nattach = 0;\n        let unit = new PolymerBlockUnit(atoms);\n        for (let atom of atoms)\n            for (let extra of mol.atomExtra(atom))\n                if (extra.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = extra.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    if (bits.length < 2 || parseInt(bits[0]) != id)\n                        continue;\n                    nattach = parseInt(bits[1]);\n                    for (let n = 2; n < bits.length; n++) {\n                        if (bits[n] == PolymerBlockConnectivity.HeadToTail)\n                            unit.connect = PolymerBlockConnectivity.HeadToTail;\n                        else if (bits[n] == PolymerBlockConnectivity.HeadToHead)\n                            unit.connect = PolymerBlockConnectivity.HeadToHead;\n                        else if (bits[n] == PolymerBlockConnectivity.Random)\n                            unit.connect = PolymerBlockConnectivity.Random;\n                        else if (bits[n].startsWith('n')) {\n                            let hasOuter = false;\n                            for (let adj of mol.atomAdjList(atom))\n                                if (!atoms.includes(adj)) {\n                                    hasOuter = true;\n                                    break;\n                                }\n                            if (hasOuter) {\n                                let subBits = bits[n].substring(1).split(',');\n                                unit.atomName.set(atom, subBits.map((str) => parseInt(str)));\n                            }\n                        }\n                    }\n                }\n        if (nattach < 0)\n            return;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let in1 = atoms.indexOf(mol.bondFrom(n)) >= 0, in2 = atoms.indexOf(mol.bondTo(n)) >= 0;\n            if ((in1 && !in2) || (!in1 && in2))\n                nattach--;\n        }\n        if (nattach != 0)\n            return;\n        let bonds = null, order = null;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            for (let extra of mol.bondExtra(n))\n                if (extra.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = extra.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    if (bits.length < 2 || parseInt(bits[0]) != id)\n                        continue;\n                    for (let i = 1; i < bits.length; i++) {\n                        if (bits[i].startsWith('i')) {\n                            let subBits = bits[i].substring(1).split(',');\n                            unit.bondIncl.set(n, subBits.map((str) => parseInt(str)));\n                        }\n                        else if (bits[i].startsWith('e')) {\n                            let subBits = bits[i].substring(1).split(',');\n                            unit.bondExcl.set(n, subBits.map((str) => parseInt(str)));\n                        }\n                        else {\n                            let o = parseInt(bits[i]);\n                            if (o > 0) {\n                                bonds = Vec.append(bonds, n);\n                                order = Vec.append(order, o);\n                            }\n                        }\n                    }\n                }\n        }\n        if (bonds != null) {\n            if (bonds.length % 2 == 1)\n                return;\n            unit.bondConn = Vec.idxGet(bonds, Vec.idxSort(order));\n        }\n        this.units.set(id, unit);\n    }\n    formatBlockAtom(id, unit, atom) {\n        let nbonds = 0;\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let in1 = unit.atoms.indexOf(this.mol.bondFrom(n)) >= 0, in2 = unit.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n            if ((in1 && !in2) || (!in1 && in2))\n                nbonds++;\n        }\n        let str = POLYMERBLOCK_EXTRA_POLYMER + id + ':' + nbonds;\n        if (unit.connect != null)\n            str += ':' + unit.connect;\n        let names = unit.atomName.get(atom);\n        if (Vec.notBlank(names))\n            str += ':n' + names.join(',');\n        return str;\n    }\n    formatBlockBond(id, unit, bond) {\n        let in1 = unit.atoms.includes(this.mol.bondFrom(bond)), in2 = unit.atoms.includes(this.mol.bondTo(bond));\n        let isBoundary = (in1 && !in2) || (in2 && !in1);\n        if (!isBoundary)\n            return null;\n        let idxConn = unit.bondConn ? unit.bondConn.indexOf(bond) : -1;\n        let incl = unit.bondIncl.get(bond), excl = unit.bondExcl.get(bond);\n        if (idxConn < 0 && Vec.isBlank(incl) && Vec.isBlank(excl))\n            return null;\n        let str = POLYMERBLOCK_EXTRA_POLYMER + id;\n        if (idxConn >= 0)\n            str += ':' + (idxConn + 1);\n        if (Vec.notBlank(incl))\n            str += ':i' + incl.join(',');\n        if (Vec.notBlank(excl))\n            str += ':e' + excl.join(',');\n        return str;\n    }\n    purgeExtraFields() {\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let extra = this.mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    extra = Vec.remove(extra, i);\n                    modified = true;\n                }\n            if (modified)\n                this.mol.setAtomExtra(n, extra);\n        }\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let extra = this.mol.bondExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    extra = Vec.remove(extra, i);\n                    modified = true;\n                }\n            if (modified)\n                this.mol.setBondExtra(n, extra);\n        }\n    }\n    writeUnit(id, unit) {\n        const { mol } = this;\n        for (let a of unit.atoms) {\n            let codeAtom = this.formatBlockAtom(id, unit, a);\n            mol.setAtomExtra(a, Vec.append(mol.atomExtra(a), codeAtom));\n        }\n        for (let b = 1; b <= mol.numBonds; b++) {\n            let codeBond = this.formatBlockBond(id, unit, b);\n            if (codeBond)\n                mol.setBondExtra(b, Vec.append(mol.bondExtra(b), codeBond));\n        }\n    }\n    nextIdentifier(keys) {\n        if (!keys)\n            keys = this.getIDList();\n        if (keys.length == 0)\n            return 1;\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=PolymerBlock.js.map","import { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nexport var QueryTypeAtom;\n(function (QueryTypeAtom) {\n    QueryTypeAtom[\"Charges\"] = \"qC:\";\n    QueryTypeAtom[\"Aromatic\"] = \"qA:\";\n    QueryTypeAtom[\"Unsaturated\"] = \"qU:\";\n    QueryTypeAtom[\"Elements\"] = \"qE:\";\n    QueryTypeAtom[\"ElementsNot\"] = \"qE!\";\n    QueryTypeAtom[\"RingSizes\"] = \"qR:\";\n    QueryTypeAtom[\"RingSizesNot\"] = \"qR!\";\n    QueryTypeAtom[\"RingBlock\"] = \"qB:\";\n    QueryTypeAtom[\"NumRings\"] = \"qN:\";\n    QueryTypeAtom[\"RingBonds\"] = \"qG:\";\n    QueryTypeAtom[\"Adjacency\"] = \"qJ:\";\n    QueryTypeAtom[\"BondSums\"] = \"qO:\";\n    QueryTypeAtom[\"Valences\"] = \"qV:\";\n    QueryTypeAtom[\"Hydrogens\"] = \"qH:\";\n    QueryTypeAtom[\"Isotopes\"] = \"qI:\";\n    QueryTypeAtom[\"SubFrags\"] = \"qX:\";\n    QueryTypeAtom[\"SubFragsNot\"] = \"qX!\";\n})(QueryTypeAtom || (QueryTypeAtom = {}));\nexport var QueryTypeBond;\n(function (QueryTypeBond) {\n    QueryTypeBond[\"RingSizes\"] = \"qR:\";\n    QueryTypeBond[\"RingSizesNot\"] = \"qR!\";\n    QueryTypeBond[\"RingBlock\"] = \"qB:\";\n    QueryTypeBond[\"NumRings\"] = \"qN:\";\n    QueryTypeBond[\"Orders\"] = \"qO:\";\n})(QueryTypeBond || (QueryTypeBond = {}));\nexport class QueryUtil {\n    static hasAnyQueryAtom(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith('q'))\n                return true;\n        return false;\n    }\n    static hasAnyQueryBond(mol, bond) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith('q'))\n                return true;\n        return false;\n    }\n    static hasQueryAtom(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return true;\n        return false;\n    }\n    static hasQueryBond(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return true;\n        return false;\n    }\n    static deleteQueryAtom(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        let modified = false;\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type)) {\n                extra.splice(n, 1);\n                modified = true;\n            }\n        if (modified)\n            mol.setAtomExtra(atom, extra);\n    }\n    static deleteQueryBond(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        let modified = false;\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type)) {\n                extra.splice(n, 1);\n                modified = true;\n            }\n        if (modified)\n            mol.setBondExtra(bond, extra);\n    }\n    static deleteQueryAtomAll(mol, atom) {\n        mol.setAtomExtra(atom, mol.atomExtra(atom).filter((xtra) => !xtra.startsWith('q')));\n    }\n    static deleteQueryBondAll(mol, bond) {\n        mol.setBondExtra(bond, mol.bondExtra(bond).filter((xtra) => !xtra.startsWith('q')));\n    }\n    static queryAtomString(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return extra[n].substring(type.length);\n        return null;\n    }\n    static queryAtomStringList(mol, atom, type) {\n        let extra = mol.atomExtra(atom), list = null;\n        if (extra != null)\n            for (let str of extra)\n                if (str.startsWith(type))\n                    list = Vec.append(list, str.substring(type.length));\n        return list;\n    }\n    static queryBondString(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return extra[n].substring(type.length);\n        return null;\n    }\n    static setQueryAtom(mol, atom, type, str) {\n        if (!str) {\n            this.deleteQueryAtom(mol, atom, type);\n            return;\n        }\n        let value = type + str;\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--) {\n            if (extra[n].startsWith(type)) {\n                if (value != null) {\n                    extra[n] = value;\n                    value = null;\n                }\n                else\n                    extra.splice(n, 1);\n            }\n        }\n        if (value != null)\n            extra.push(value);\n        mol.setAtomExtra(atom, extra);\n    }\n    static setQueryAtomList(mol, atom, type, list) {\n        if (Vec.isBlank(list)) {\n            this.deleteQueryAtom(mol, atom, type);\n            return;\n        }\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                extra.splice(n, 1);\n        for (let str of list)\n            extra.push(type + str);\n        mol.setAtomExtra(atom, extra);\n    }\n    static setQueryBond(mol, bond, type, str) {\n        if (!str) {\n            this.deleteQueryBond(mol, bond, type);\n            return;\n        }\n        let value = type + str;\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--) {\n            if (extra[n].startsWith(type)) {\n                if (value != null) {\n                    extra[n] = value;\n                    value = null;\n                }\n                else\n                    extra.splice(n, 1);\n            }\n        }\n        if (value != null)\n            extra.push(value);\n        mol.setBondExtra(bond, extra);\n    }\n    static queryAtomCharges(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Charges)); }\n    static queryAtomAromatic(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.Aromatic)); }\n    static queryAtomUnsaturated(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.Unsaturated)); }\n    static queryAtomElements(mol, atom) { return this.parseStrings(this.queryAtomString(mol, atom, QueryTypeAtom.Elements)); }\n    static queryAtomElementsNot(mol, atom) { return this.parseStrings(this.queryAtomString(mol, atom, QueryTypeAtom.ElementsNot)); }\n    static queryAtomRingSizes(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingSizes)); }\n    static queryAtomRingSizesNot(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingSizesNot)); }\n    static queryAtomRingBlock(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.RingBlock)); }\n    static queryAtomNumRings(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.NumRings)); }\n    static queryAtomRingBonds(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingBonds)); }\n    static queryAtomAdjacency(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Adjacency)); }\n    static queryAtomBondSums(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.BondSums)); }\n    static queryAtomValences(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Valences)); }\n    static queryAtomHydrogens(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Hydrogens)); }\n    static queryAtomIsotope(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Isotopes)); }\n    static queryAtomSubFrags(mol, atom) { return this.parseMolecules(this.queryAtomStringList(mol, atom, QueryTypeAtom.SubFrags)); }\n    static queryAtomSubFragsNot(mol, atom) { return this.parseMolecules(this.queryAtomStringList(mol, atom, QueryTypeAtom.SubFragsNot)); }\n    static queryBondRingSizes(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.RingSizes)); }\n    static queryBondRingSizesNot(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.RingSizesNot)); }\n    static queryBondRingBlock(mol, bond) { return this.parseBoolean(this.queryBondString(mol, bond, QueryTypeBond.RingBlock)); }\n    static queryBondNumRings(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.NumRings)); }\n    static queryBondOrders(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.Orders)); }\n    static setQueryAtomCharges(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Charges, this.formatIntegers(value)); }\n    static setQueryAtomAromatic(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Aromatic, this.formatBoolean(value)); }\n    static setQueryAtomUnsaturated(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Unsaturated, this.formatBoolean(value)); }\n    static setQueryAtomElements(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Elements, this.formatStrings(value)); }\n    static setQueryAtomElementsNot(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.ElementsNot, this.formatStrings(value)); }\n    static setQueryAtomRingSizes(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingSizes, this.formatIntegers(value)); }\n    static setQueryAtomRingSizesNot(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingSizesNot, this.formatIntegers(value)); }\n    static setQueryAtomRingBlock(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingBlock, this.formatBoolean(value)); }\n    static setQueryAtomNumRings(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.NumRings, this.formatIntegers(value)); }\n    static setQueryAtomRingBonds(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingBonds, this.formatIntegers(value)); }\n    static setQueryAtomAdjacency(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Adjacency, this.formatIntegers(value)); }\n    static setQueryAtomBondSums(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.BondSums, this.formatIntegers(value)); }\n    static setQueryAtomValences(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Valences, this.formatIntegers(value)); }\n    static setQueryAtomHydrogens(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Hydrogens, this.formatIntegers(value)); }\n    static setQueryAtomIsotope(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Isotopes, this.formatIntegers(value)); }\n    static setQueryAtomSubFrags(mol, atom, value) { this.setQueryAtomList(mol, atom, QueryTypeAtom.SubFrags, this.formatMolecules(value)); }\n    static setQueryAtomSubFragsNot(mol, atom, value) { this.setQueryAtomList(mol, atom, QueryTypeAtom.SubFragsNot, this.formatMolecules(value)); }\n    static setQueryBondRingSizes(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingSizes, this.formatIntegers(value)); }\n    static setQueryBondRingSizesNot(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingSizesNot, this.formatIntegers(value)); }\n    static setQueryBondRingBlock(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingBlock, this.formatBoolean(value)); }\n    static setQueryBondNumRings(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.NumRings, this.formatIntegers(value)); }\n    static setQueryBondOrders(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.Orders, this.formatIntegers(value)); }\n    static parseIntegers(str) {\n        if (!str)\n            return null;\n        let strlist = str.split(',');\n        let intlist = new Array(strlist.length);\n        for (let n = 0; n < strlist.length; n++)\n            intlist[n] = parseInt(strlist[n]);\n        return intlist;\n    }\n    static parseStrings(str) {\n        if (!str)\n            return null;\n        return str.split(',');\n    }\n    static parseBoolean(str) {\n        return !str ? null : str == 'yes';\n    }\n    static parseMolecules(list) {\n        if (!list)\n            return null;\n        let mols = [];\n        for (let molstr of list) {\n            let mol = Molecule.fromString(molstr);\n            if (MolUtil.notBlank(mol))\n                mols.push(mol);\n        }\n        return mols;\n    }\n    static formatIntegers(list) {\n        if (Vec.isBlank(list))\n            return null;\n        let str = '';\n        for (let n = 0; n < list.length; n++) {\n            if (n > 0)\n                str += ',';\n            str += list[n];\n        }\n        return str;\n    }\n    static formatStrings(list) {\n        if (Vec.isBlank(list))\n            return null;\n        let str = '';\n        for (let n = 0; n < list.length; n++) {\n            if (n > 0)\n                str += ',';\n            str += list[n];\n        }\n        return str;\n    }\n    static formatBoolean(value) {\n        return value ? 'yes' : 'no';\n    }\n    static formatMolecules(mols) {\n        if (Vec.isBlank(mols))\n            return null;\n        let list = [];\n        for (let mol of mols)\n            if (MolUtil.notBlank(mol))\n                list.push(mol.toString());\n        return list;\n    }\n}\n//# sourceMappingURL=QueryUtil.js.map","import { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nexport const STEREOGROUP_EXTRA_RACEMIC = 'xCHIRAC:';\nexport const STEREOGROUP_EXTRA_RELATIVE = 'xCHIREL:';\nexport class StereoGroup {\n    static hasStereoGroups(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra)\n                    if (str.startsWith(STEREOGROUP_EXTRA_RACEMIC) || str.startsWith(STEREOGROUP_EXTRA_RELATIVE))\n                        return true;\n        }\n        return false;\n    }\n    constructor(mol) {\n        this.mol = mol;\n        this.chiRac = new Map();\n        this.chiRel = new Map();\n        this.mol = mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra) {\n                    if (str.startsWith(STEREOGROUP_EXTRA_RACEMIC)) {\n                        let grp = parseInt(str.substring(STEREOGROUP_EXTRA_RACEMIC.length));\n                        if (grp > 0)\n                            this.chiRac.set(grp, Vec.append(this.chiRac.get(grp), n));\n                    }\n                    else if (str.startsWith(STEREOGROUP_EXTRA_RELATIVE)) {\n                        let grp = parseInt(str.substring(STEREOGROUP_EXTRA_RELATIVE.length));\n                        if (grp > 0)\n                            this.chiRel.set(grp, Vec.append(this.chiRel.get(grp), n));\n                    }\n                }\n        }\n        for (let [grp, atoms] of this.chiRac.entries()) {\n            for (let n = atoms.length - 1; n >= 0; n--)\n                if (!this.atomHasWedge(atoms[n]))\n                    atoms.splice(n, 1);\n            if (atoms.length > 0)\n                this.chiRac.set(grp, atoms);\n            else\n                this.chiRac.delete(grp);\n        }\n        for (let [grp, atoms] of this.chiRel.entries()) {\n            for (let n = atoms.length - 1; n >= 0; n--)\n                if (!this.atomHasWedge(atoms[n]))\n                    atoms.splice(n, 1);\n            if (atoms.length > 0)\n                this.chiRel.set(grp, atoms);\n            else\n                this.chiRel.delete(grp);\n        }\n    }\n    getRacemicGroups() { return Array.from(this.chiRac.keys()); }\n    getRelativeGroups() { return Array.from(this.chiRel.keys()); }\n    getRacemicAtoms() { return Array.from(this.chiRac.values()); }\n    getRelativeAtoms() { return Array.from(this.chiRel.values()); }\n    getRacemicGroupAtoms(grp) { return this.chiRac.get(grp); }\n    getRelativeGroupAtoms(grp) { return this.chiRel.get(grp); }\n    rewriteMolecule() {\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let extra = this.mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (extra[i].startsWith(STEREOGROUP_EXTRA_RACEMIC) || extra[i].startsWith(STEREOGROUP_EXTRA_RELATIVE)) {\n                    extra.splice(i, 1);\n                    modified = true;\n                }\n            }\n            if (modified)\n                this.mol.setAtomExtra(n, extra);\n        }\n        for (let [grp, atoms] of this.chiRac.entries()) {\n            for (let a of atoms)\n                this.mol.setAtomExtra(a, [...this.mol.atomExtra(a), STEREOGROUP_EXTRA_RACEMIC + grp]);\n        }\n        for (let [grp, atoms] of this.chiRel.entries()) {\n            for (let a of atoms)\n                this.mol.setAtomExtra(a, [...this.mol.atomExtra(a), STEREOGROUP_EXTRA_RELATIVE + grp]);\n        }\n    }\n    harmoniseNumbering(other) {\n        let groups = other.getRacemicGroups();\n        let stash = this.getRacemicAtoms();\n        this.chiRac.clear();\n        for (let atoms of stash) {\n            let grp = this.nextIdentifier(groups);\n            this.chiRac.set(grp, atoms);\n            groups.push(grp);\n        }\n        groups = other.getRelativeGroups();\n        stash = this.getRelativeAtoms();\n        this.chiRel.clear();\n        for (let atoms of stash) {\n            let grp = this.nextIdentifier(groups);\n            this.chiRel.set(grp, atoms);\n            groups.push(grp);\n        }\n    }\n    createRacemic(atoms) {\n        let grp = this.nextIdentifier(this.getRacemicGroups());\n        this.chiRac.set(grp, atoms);\n        return grp;\n    }\n    createRelative(atoms) {\n        let grp = this.nextIdentifier(this.getRelativeGroups());\n        this.chiRel.set(grp, atoms);\n        return grp;\n    }\n    removeRacemic(grp) {\n        this.chiRac.delete(grp);\n    }\n    removeRelative(grp) {\n        this.chiRel.delete(grp);\n    }\n    static removeAll(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (!extra[i].startsWith(STEREOGROUP_EXTRA_RACEMIC) && !extra[i].startsWith(STEREOGROUP_EXTRA_RELATIVE))\n                    continue;\n                extra.splice(i, 1);\n                modified = true;\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n    }\n    atomHasWedge(atom) {\n        if (this.mol.is3D())\n            return true;\n        let hasWedge = false;\n        for (let b of this.mol.atomAdjBonds(atom)) {\n            let bt = this.mol.bondType(b);\n            if (bt == Molecule.BONDTYPE_UNKNOWN)\n                return false;\n            if (this.mol.bondFrom(b) != atom)\n                continue;\n            if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                hasWedge = true;\n        }\n        return hasWedge;\n    }\n    nextIdentifier(inkeys) {\n        if (inkeys.length == 0)\n            return 1;\n        let keys = Vec.sorted(inkeys);\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=StereoGroup.js.map","import { ResonanceRemover } from '../calc/ResonanceRemover';\nimport { Vec } from '../util/Vec';\nimport { BondArtifact } from './BondArtifact';\nimport { CoordUtil } from './CoordUtil';\nimport { DataSheet } from './DataSheet';\nimport { ForeignMolecule, ForeignMoleculeTransient } from './ForeignMolecule';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity, PolymerBlockUnit } from './PolymerBlock';\nimport { QueryUtil } from './QueryUtil';\nimport { StereoGroup } from './StereoGroup';\nexport const MDLMOL_VALENCE = {\n    'H': [1],\n    'B': [3],\n    'C': [4],\n    'Si': [4],\n    'N': [3],\n    'P': [3, 5],\n    'As': [3, 5],\n    'O': [2],\n    'S': [2, 4, 6],\n    'Se': [2, 4, 6],\n    'Te': [2, 4, 6],\n    'F': [1],\n    'Cl': [1, 3, 5, 7],\n    'Br': [1],\n    'I': [1, 3, 5, 7],\n    'At': [1, 3, 5, 7],\n};\nexport class MDLMOLReader {\n    constructor(strData) {\n        this.parseHeader = true;\n        this.parseExtended = true;\n        this.allowV3000 = true;\n        this.considerRescale = true;\n        this.keepAromatic = false;\n        this.keepParity = false;\n        this.keepQuery = true;\n        this.mol = null;\n        this.molName = '';\n        this.overallStereoAbsolute = true;\n        this.resBonds = null;\n        this.groupAttachAny = new Map();\n        this.groupAttachAll = new Map();\n        this.groupStereoAbsolute = [];\n        this.groupStereoRacemic = [];\n        this.groupStereoRelative = [];\n        this.groupLinkNodes = [];\n        this.groupMixtures = [];\n        this.scsrTemplates = null;\n        this.pos = 0;\n        this.lines = strData.split(/\\r?\\n/);\n    }\n    parse() {\n        if (this.parseHeader) {\n            this.molName = this.lines[0];\n            this.pos = 3;\n        }\n        this.parseCTAB();\n        return this.mol;\n    }\n    nextLine() {\n        if (this.pos >= this.lines.length)\n            throw 'MDL Molfile parser: premature end, at line ' + (this.pos + 1);\n        return this.lines[this.pos++];\n    }\n    parseCTAB() {\n        this.mol = new Molecule();\n        this.mol.keepTransient = true;\n        let line = this.nextLine();\n        let version = line.length >= 39 ? line.substring(34, 39) : '';\n        if (this.allowV3000 && version == 'V3000') {\n            this.parseV3000();\n            this.mol.keepTransient = false;\n            return;\n        }\n        if (version != 'V2000')\n            throw 'Invalid MDL MOL: no Vx000 tag.';\n        let numAtoms = parseInt(line.substring(0, 3).trim());\n        let numBonds = parseInt(line.substring(3, 6).trim());\n        if (line.length >= 15)\n            this.overallStereoAbsolute = parseInt(line.substring(12, 15).trim()) == 1;\n        for (let n = 0; n < numAtoms; n++) {\n            line = this.nextLine();\n            if (line.length < 34)\n                throw 'Invalid MDL MOL: atom line' + (n + 1);\n            let x = parseFloat(line.substring(0, 10).trim());\n            let y = parseFloat(line.substring(10, 20).trim());\n            let z = parseFloat(line.substring(20, 30).trim());\n            let el = line.substring(31, 34).trim();\n            let chg = line.length < 39 ? 0 : parseInt(line.substring(36, 39).trim()), rad = 0;\n            let stereo = line.length < 42 ? 0 : parseInt(line.substring(39, 42).trim());\n            let hyd = line.length < 45 ? 0 : parseInt(line.substring(42, 45).trim());\n            let val = line.length < 51 ? 0 : parseInt(line.substring(48, 51).trim());\n            let mapnum = line.length < 63 ? 0 : parseInt(line.substring(60, 63).trim());\n            if (chg >= 1 && chg <= 3)\n                chg = 4 - chg;\n            else if (chg == 4) {\n                chg = 0;\n                rad = 2;\n            }\n            else if (chg >= 5 && chg <= 7)\n                chg = 4 - chg;\n            else\n                chg = 0;\n            let a = this.mol.addAtom(el, x, y, chg, rad);\n            if (z != 0) {\n                this.mol.setAtomZ(a, z);\n                this.mol.setIs3D(true);\n            }\n            this.mol.setAtomMapNum(a, mapnum);\n            if (hyd > 0)\n                QueryUtil.setQueryAtomHydrogens(this.mol, a, [hyd - 1]);\n            if (stereo > 0 && this.keepParity) {\n                let trans = this.mol.atomTransient(a);\n                if (stereo == 1)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLOdd));\n                else if (stereo == 2)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLEven));\n                else if (stereo == 3)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLRacemic));\n            }\n            if (val != 0)\n                ForeignMolecule.markExplicitValence(this.mol, n + 1, val > 14 ? 0 : val);\n        }\n        for (let n = 0; n < numBonds; n++) {\n            line = this.nextLine();\n            if (line.length >= 9 && line.length < 12)\n                line = line.substring(0, 9) + '  0';\n            if (line.length < 12)\n                throw 'Invalid MDL MOL: bond line' + (n + 1);\n            let bfr = parseInt(line.substring(0, 3).trim()), bto = parseInt(line.substring(3, 6).trim());\n            let type = parseInt(line.substring(6, 9).trim()), stereo = parseInt(line.substring(9, 12).trim());\n            if (bfr == bto || bfr < 1 || bfr > numAtoms || bto < 1 || bto > numAtoms)\n                throw 'Invalid MDL MOL: bond line' + (n + 1);\n            let order = type >= 1 && type <= 3 ? type : type == 8 || type == 9 || type == 10 ? 0 : 1;\n            let style = Molecule.BONDTYPE_NORMAL;\n            if (stereo == 1)\n                style = Molecule.BONDTYPE_INCLINED;\n            else if (stereo == 6)\n                style = Molecule.BONDTYPE_DECLINED;\n            else if (stereo == 3 || stereo == 4)\n                style = Molecule.BONDTYPE_UNKNOWN;\n            let b = this.mol.addBond(bfr, bto, order, style);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroDative);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroHydrogen);\n            if (this.keepQuery) {\n                if (type == 4)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1]);\n                else if (type == 5)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [1, 2]);\n                else if (type == 6)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 1]);\n                else if (type == 7)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 2]);\n                else if (type == 8)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 0, 1, 2, 3]);\n            }\n            else {\n                if (type == 4) {\n                    if (this.keepAromatic)\n                        this.mol.setBondTransient(b, Vec.append(this.mol.bondTransient(b), ForeignMoleculeTransient.BondAromatic));\n                    else {\n                        if (this.resBonds == null)\n                            this.resBonds = Vec.booleanArray(false, numBonds);\n                        this.resBonds[n] = true;\n                    }\n                }\n            }\n        }\n        const MBLK_CHG = 1, MBLK_RAD = 2, MBLK_ISO = 3, MBLK_RGP = 4, MBLK_HYD = 5, MBLK_ZCH = 6, MBLK_ZBO = 7, MBLK_ZPA = 8, MBLK_ZRI = 9, MBLK_ZAR = 10, MBLK_RBC = 11, MBLK_SUB = 12, MBLK_UNS = 13;\n        let resPaths = new Map(), resRings = new Map(), arenes = new Map();\n        let superatoms = new Map(), mixtures = new Map();\n        while (true) {\n            line = this.nextLine();\n            if (line.startsWith('M  END'))\n                break;\n            let type = 0;\n            if (line.startsWith('M  CHG'))\n                type = MBLK_CHG;\n            else if (line.startsWith('M  RAD'))\n                type = MBLK_RAD;\n            else if (line.startsWith('M  ISO'))\n                type = MBLK_ISO;\n            else if (line.startsWith('M  RGP'))\n                type = MBLK_RGP;\n            else if (this.parseExtended && line.startsWith('M  HYD'))\n                type = MBLK_HYD;\n            else if (this.parseExtended && line.startsWith('M  ZCH'))\n                type = MBLK_ZCH;\n            else if (this.parseExtended && line.startsWith('M  ZBO'))\n                type = MBLK_ZBO;\n            else if (this.parseExtended && line.startsWith('M  ZPA'))\n                type = MBLK_ZPA;\n            else if (this.parseExtended && line.startsWith('M  ZRI'))\n                type = MBLK_ZRI;\n            else if (this.parseExtended && line.startsWith('M  ZAR'))\n                type = MBLK_ZAR;\n            else if (this.parseExtended && line.startsWith('M  RBC'))\n                type = MBLK_RBC;\n            else if (this.parseExtended && line.startsWith('M  SUB'))\n                type = MBLK_SUB;\n            else if (this.parseExtended && line.startsWith('M  UNS'))\n                type = MBLK_UNS;\n            else if (line.startsWith('A  ') && line.length >= 6) {\n                let anum = parseInt(line.substring(3, 6).trim());\n                if (anum >= 1 && anum <= this.mol.numAtoms) {\n                    line = this.nextLine();\n                    if (line == null)\n                        break;\n                    this.mol.setAtomElement(anum, line);\n                    continue;\n                }\n            }\n            else if (line.startsWith('M  STY')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let idx = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let stype = line.substring(14 + 8 * n, 17 + 8 * n);\n                    if (stype == 'SUP')\n                        superatoms.set(idx, { atoms: [], name: null });\n                    else if (stype == 'MIX' || stype == 'FOR')\n                        mixtures.set(idx, { index: idx, parent: 0, atoms: [], type: stype });\n                    else if (stype == 'SRU' || stype == 'COP' || stype == 'MUL' || stype == 'DAT')\n                        superatoms.set(idx, { atoms: [], name: null, bracketType: stype });\n                }\n            }\n            else if (line.startsWith('M  SPL')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let child = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let parent = parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim());\n                    let mix = mixtures.get(child);\n                    if (mix != null)\n                        mix.parent = parent;\n                }\n            }\n            else if (line.startsWith('M  SAL')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let atoms = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        atoms[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    sup.atoms = Vec.concat(sup.atoms, atoms);\n                }\n                let mix = mixtures.get(idx);\n                if (mix != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let atoms = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        atoms[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    mix.atoms = Vec.concat(mix.atoms, atoms);\n                }\n            }\n            else if (line.startsWith('M  SBL')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let bonds = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        bonds[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    sup.bonds = Vec.concat(sup.bonds, bonds);\n                }\n            }\n            else if (line.startsWith('M  SMT')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null)\n                    sup.name = line.substring(11).trim();\n            }\n            else if (line.startsWith('M  SDT')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup) {\n                    sup.name = line.substring(11, 41).trim();\n                    sup.unit = line.substring(43, 63).trim();\n                    sup.query = line.substring(63).trim();\n                }\n            }\n            else if (line.startsWith('M  SED')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup)\n                    sup.value = line.substring(11).trim();\n            }\n            else if (line.startsWith('M  SCN')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let idx = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let stype = line.substring(14 + 8 * n, 17 + 8 * n);\n                    let sup = superatoms.get(idx);\n                    if (sup != null)\n                        sup.connectType = stype.trim();\n                }\n            }\n            else if (line.startsWith('M  CRS')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    sup.bondConn = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        sup.bondConn[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                }\n            }\n            else if (line.startsWith('M  LIN')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let node = {\n                        atom: parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim()),\n                        nbrs: [],\n                        minRep: 1,\n                        maxRep: parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim()),\n                    };\n                    let nbr1 = parseInt(line.substring(17 + 8 * n, 21 + 8 * n).trim());\n                    let nbr2 = parseInt(line.substring(21 + 8 * n, 25 + 8 * n).trim());\n                    if (nbr1 > 0)\n                        node.nbrs.push(nbr1);\n                    if (nbr2 > 0)\n                        node.nbrs.push(nbr2);\n                    this.groupLinkNodes.push(node);\n                }\n            }\n            else if (line.startsWith('M  ALS')) {\n                let atom = parseInt(line.substring(7, 10).trim());\n                let len = parseInt(line.substring(10, 13).trim());\n                let logic = line.charAt(14);\n                let elements = [];\n                for (let n = 0; n < len; n++)\n                    elements.push(line.substring(16 + n * 4, 20 + n * 4).trim());\n                this.mol.setAtomElement(atom, '*');\n                if (logic == 'F')\n                    QueryUtil.setQueryAtomElements(this.mol, atom, elements);\n                else if (logic == 'T')\n                    QueryUtil.setQueryAtomElementsNot(this.mol, atom, elements);\n            }\n            if (type == MBLK_ZPA || type == MBLK_ZRI || type == MBLK_ZAR) {\n                let len = parseInt(line.substring(6, 9).trim()), blk = parseInt(line.substring(9, 13).trim());\n                let map = type == MBLK_ZPA ? resPaths : type == MBLK_ZRI ? resRings : arenes;\n                for (let n = 0; n < len; n++) {\n                    let val = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    if (val < 1 || val > numAtoms)\n                        throw 'Invalid MDL MOL: M-block';\n                    let atoms = map.get(blk);\n                    if (!atoms)\n                        map.set(blk, atoms = []);\n                    atoms.push(val);\n                }\n            }\n            else if (type > 0) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let pos = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let val = parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim());\n                    if (pos < 1)\n                        throw 'Invalid MDL MOL: M-block';\n                    if (type == MBLK_CHG)\n                        this.mol.setAtomCharge(pos, val);\n                    else if (type == MBLK_RAD) {\n                        if (val == 1 || val == 3)\n                            this.mol.setAtomUnpaired(pos, 2);\n                        else if (val == 2)\n                            this.mol.setAtomUnpaired(pos, 1);\n                    }\n                    else if (type == MBLK_ISO)\n                        this.mol.setAtomIsotope(pos, val);\n                    else if (type == MBLK_RGP)\n                        this.mol.setAtomElement(pos, 'R' + val);\n                    else if (type == MBLK_HYD)\n                        this.mol.setAtomHExplicit(pos, val);\n                    else if (type == MBLK_ZCH)\n                        this.mol.setAtomCharge(pos, val);\n                    else if (type == MBLK_ZBO)\n                        this.mol.setBondOrder(pos, val);\n                    else if (type == MBLK_RBC && val != 0) {\n                        if (val == -2)\n                            val = this.countRingBonds(pos);\n                        else if (val == -1)\n                            val = 0;\n                        QueryUtil.setQueryAtomRingBonds(this.mol, pos, [val]);\n                    }\n                    else if (type == MBLK_SUB && val != 0) {\n                        if (val == -2)\n                            val = this.countSubstitutions(pos);\n                        else if (val == -1)\n                            val = 0;\n                        QueryUtil.setQueryAtomAdjacency(this.mol, pos, [val]);\n                    }\n                    else if (type == MBLK_UNS) {\n                        if (val == 1)\n                            QueryUtil.setQueryAtomUnsaturated(this.mol, pos, true);\n                    }\n                }\n            }\n        }\n        this.postFix();\n        if (this.parseExtended) {\n            let artifacts = new BondArtifact(this.mol);\n            for (let atoms of resPaths.values())\n                artifacts.createPath(atoms);\n            for (let atoms of resRings.values())\n                artifacts.createRing(atoms);\n            for (let atoms of arenes.values())\n                artifacts.createArene(atoms);\n            artifacts.rewriteMolecule();\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            if (value.bracketType) {\n                superatoms.delete(key);\n                this.applyPolymerBlock(value);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            superatoms.delete(key);\n            this.applySuperAtom(value, Array.from(superatoms.values()));\n        }\n        for (let key of Vec.sorted(Array.from(mixtures.keys())))\n            this.groupMixtures.push(mixtures.get(key));\n        this.mol.keepTransient = false;\n    }\n    postFix() {\n        const mol = this.mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            if (MolUtil.hasAbbrev(mol, n) || mol.atomTransient(n).some((str) => str.startsWith(ForeignMoleculeTransient.AtomSCSRClass)))\n                continue;\n            let el = mol.atomElement(n);\n            if (el == 'D') {\n                mol.setAtomElement(n, 'H');\n                mol.setAtomIsotope(n, 2);\n            }\n            else if (el == 'T') {\n                mol.setAtomElement(n, 'H');\n                mol.setAtomIsotope(n, 3);\n            }\n            if (mol.is3D && mol.atomZ(n) === undefined)\n                mol.setAtomZ(n, 0);\n            let valence = ForeignMolecule.noteExplicitValence(this.mol, n);\n            let options = MDLMOL_VALENCE[el];\n            if (valence != null) {\n                let hcount = valence < 0 || valence > 14 ? 0 : valence;\n                for (let b of mol.atomAdjBonds(n))\n                    hcount -= mol.bondOrder(b);\n                if (hcount != mol.atomHydrogens(n))\n                    mol.setAtomHExplicit(n, Math.max(0, hcount));\n            }\n            else if (options) {\n                let chg = mol.atomCharge(n);\n                let chgmod = (el == 'C' || el == 'H') ? Math.abs(chg) : el == 'B' ? -Math.abs(chg) : -chg;\n                let usedValence = chgmod;\n                let unp = mol.atomUnpaired(n);\n                if (unp > 0 && (el == 'C' || el == 'O' || el == 'S' || el == 'N' || el == 'P'))\n                    usedValence += unp;\n                for (let b of mol.atomAdjBonds(n))\n                    usedValence += mol.bondOrder(b);\n                for (let v of options)\n                    if (usedValence <= v) {\n                        let hcount = v - usedValence;\n                        if (hcount != mol.atomHydrogens(n))\n                            mol.setAtomHExplicit(n, Math.max(0, hcount));\n                        break;\n                    }\n            }\n        }\n        if (this.considerRescale && Vec.isBlank(this.scsrTemplates))\n            CoordUtil.normaliseBondDistances(mol);\n        if (this.resBonds != null) {\n            let derez = new ResonanceRemover(mol, this.resBonds, null);\n            try {\n                derez.perform();\n                for (let n = 0; n < mol.numBonds; n++)\n                    mol.setBondOrder(n + 1, derez.bondOrders[n]);\n            }\n            catch (ex) {\n            }\n        }\n    }\n    parseV3000() {\n        var _a;\n        let Section;\n        (function (Section) {\n            Section[Section[\"Atom\"] = 0] = \"Atom\";\n            Section[Section[\"Bond\"] = 1] = \"Bond\";\n            Section[Section[\"Coll\"] = 2] = \"Coll\";\n            Section[Section[\"SGroup\"] = 3] = \"SGroup\";\n            Section[Section[\"Template\"] = 4] = \"Template\";\n        })(Section || (Section = {}));\n        let inCTAB = false, inTemplate = false;\n        let section = null;\n        let lineCounts = null;\n        let lineAtom = [], lineBond = [], lineColl = [], lineSgroup = [];\n        let asdrawnRBC = [], asdrawnSUB = [];\n        let templateBlocks = [];\n        const ERRPFX = 'Invalid MDL MOL V3000: ';\n        while (true) {\n            let fullLine = this.nextLine();\n            if (fullLine == 'M  END')\n                break;\n            if (!fullLine.startsWith('M  V30 '))\n                continue;\n            let line = fullLine.substring(7);\n            if (line.startsWith('BEGIN TEMPLATE'))\n                inTemplate = true;\n            else if (line.startsWith('END TEMPLATE'))\n                inTemplate = false;\n            else if (line.startsWith('TEMPLATE ') && inTemplate)\n                templateBlocks.push([fullLine]);\n            else if (inTemplate && templateBlocks != null)\n                Vec.last(templateBlocks).push(fullLine);\n            else if (line.startsWith('COUNTS '))\n                lineCounts = line.substring(7);\n            else if (line.startsWith('BEGIN CTAB'))\n                inCTAB = true;\n            else if (line.startsWith('BEGIN ATOM'))\n                section = Section.Atom;\n            else if (line.startsWith('BEGIN BOND'))\n                section = Section.Bond;\n            else if (line.startsWith('BEGIN COLLECTION'))\n                section = Section.Coll;\n            else if (line.startsWith('BEGIN SGROUP'))\n                section = Section.SGroup;\n            else if (line.startsWith('END '))\n                section = null;\n            else if (inCTAB && section == Section.Atom)\n                lineAtom.push(line);\n            else if (inCTAB && section == Section.Bond)\n                lineBond.push(line);\n            else if (inCTAB && section == Section.Coll)\n                lineColl.push(line);\n            else if (inCTAB && section == Section.SGroup)\n                lineSgroup.push(line);\n            else if (inCTAB && section == null) {\n                if (line.startsWith('LINKNODE ')) {\n                    let bits = this.splitWithQuotes(line.substring(9));\n                    let node = {\n                        atom: 0,\n                        nbrs: [],\n                        minRep: parseInt(bits[0]),\n                        maxRep: parseInt(bits[1])\n                    };\n                    let nb = parseInt(bits[2]);\n                    let atoms = [];\n                    for (let n = 0; n < nb * 2; n++)\n                        atoms.push(parseInt(bits[3 + n]));\n                    Vec.sort(atoms);\n                    for (let n = 0; n < atoms.length; n++) {\n                        if (n < atoms.length - 1 && atoms[n] == atoms[n + 1])\n                            node.atom = atoms[n++];\n                        else\n                            node.nbrs.push(atoms[n]);\n                    }\n                    this.groupLinkNodes.push(node);\n                }\n            }\n        }\n        let counts = lineCounts.trim().split(/\\s+/);\n        if (counts.length < 2)\n            throw ERRPFX + 'counts line malformatted';\n        let numAtoms = parseInt(counts[0]), numBonds = parseInt(counts[1]);\n        if (numAtoms < 0 || numAtoms > lineAtom.length)\n            throw ERRPFX + 'unreasonable atom count: ' + numAtoms;\n        if (numBonds < 0 || numBonds > lineBond.length)\n            throw ERRPFX + 'unreasonable bond count: ' + numBonds;\n        let atomBits = [], bondBits = [];\n        for (let n = 0; n < lineAtom.length; n++) {\n            let line = lineAtom[n];\n            while (n < lineAtom.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineAtom[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits.length < 6)\n                throw ERRPFX + 'atom line has too few components: ' + line;\n            let idx = parseInt(bits[0], 0);\n            if (idx < 1 || idx > numAtoms)\n                throw ERRPFX + 'invalid atom index: ' + bits[0];\n            if (atomBits[idx - 1] != null)\n                throw ERRPFX + 'duplicate atom index: ' + idx;\n            atomBits[idx - 1] = bits;\n        }\n        for (let n = 0; n < lineBond.length; n++) {\n            let line = lineBond[n];\n            while (n < lineBond.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineBond[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits.length < 4)\n                throw ERRPFX + 'bond line has too few components: ' + line;\n            let idx = parseInt(bits[0], 0);\n            if (idx < 1 || idx > numBonds)\n                throw ERRPFX + 'invalid bond index: ' + bits[0];\n            if (bondBits[idx - 1] != null)\n                throw ERRPFX + 'duplicate bond index: ' + idx;\n            bondBits[idx - 1] = bits;\n        }\n        for (let a = 1; a <= numAtoms; a++) {\n            let bits = atomBits[a - 1];\n            if (bits == null)\n                throw ERRPFX + 'atom definition missing for #' + a;\n            let type = bits[1];\n            if (type.length > 2 && type.startsWith('\"') && type.endsWith('\"'))\n                type = type.substring(1, type.length - 1);\n            let x = parseFloat(bits[2]), y = parseFloat(bits[3]), z = parseFloat(bits[4]);\n            let map = parseInt(bits[5]);\n            this.mol.addAtom(type, x, y);\n            if (z != 0) {\n                this.mol.setAtomZ(a, z);\n                this.mol.setIs3D(true);\n            }\n            this.mol.setAtomMapNum(a, map);\n            this.parseQueryAtomList(this.mol, a);\n            for (let i = 6; i < bits.length; i++) {\n                let eq = bits[i].indexOf('=');\n                if (eq < 0)\n                    continue;\n                let key = bits[i].substring(0, eq), val = bits[i].substring(eq + 1);\n                if (key == 'CHG')\n                    this.mol.setAtomCharge(a, parseInt(val));\n                else if (key == 'RAD') {\n                    let spin = parseInt(val);\n                    if (spin == 1 || spin == 3)\n                        this.mol.setAtomUnpaired(a, 2);\n                    else if (spin == 2)\n                        this.mol.setAtomUnpaired(a, 1);\n                }\n                else if (key == 'MASS')\n                    this.mol.setAtomIsotope(a, parseInt(val));\n                else if (key == 'CFG') {\n                    let stereo = parseInt(val);\n                    if (stereo > 0 && this.keepParity) {\n                    }\n                }\n                else if (key == 'VAL')\n                    ForeignMolecule.markExplicitValence(this.mol, a, parseInt(val));\n                else if (key == 'CLASS') {\n                    this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRClass + ':' + val);\n                }\n                else if (key == 'SEQID') {\n                    this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRSeqID + ':' + val);\n                }\n                else if (key == 'ATTCHORD') {\n                    let attch = this.unpackStrings(val);\n                    if (attch != null)\n                        this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRAttchOrd + ':' + attch.join(','));\n                }\n                else if (key == 'HCOUNT') {\n                    let hyd = parseInt(val);\n                    if (hyd != 0)\n                        QueryUtil.setQueryAtomHydrogens(this.mol, a, [Math.max(hyd, 0)]);\n                }\n                else if (key == 'RBCNT') {\n                    let rbc = parseInt(val);\n                    if (rbc == -2)\n                        asdrawnRBC.push(a);\n                    else if (rbc != 0)\n                        QueryUtil.setQueryAtomRingBonds(this.mol, a, [Math.max(rbc, 0)]);\n                }\n                else if (key == 'SUBST') {\n                    let sub = parseInt(val);\n                    if (sub == -2)\n                        asdrawnSUB.push(a);\n                    else if (sub != 0)\n                        QueryUtil.setQueryAtomAdjacency(this.mol, a, [Math.max(sub, 0)]);\n                }\n                else if (key == 'UNSAT') {\n                    let uns = parseInt(val);\n                    if (uns == 1)\n                        QueryUtil.setQueryAtomUnsaturated(this.mol, a, true);\n                }\n            }\n        }\n        for (let b = 1; b <= numBonds; b++) {\n            let bits = bondBits[b - 1];\n            if (bits == null)\n                throw ERRPFX + 'bond definition missing for #' + b;\n            let type = parseInt(bits[1]), bfr = parseInt(bits[2]), bto = parseInt(bits[3]);\n            let order = type >= 1 && type <= 3 ? type : type == 9 || type == 10 ? 0 : 1;\n            this.mol.addBond(bfr, bto, order);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroDative);\n            if (type == 10)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroHydrogen);\n            if (this.keepQuery) {\n                if (type == 4)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1]);\n                else if (type == 5)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [1, 2]);\n                else if (type == 6)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 1]);\n                else if (type == 7)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 2]);\n                else if (type == 8)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 0, 1, 2, 3]);\n            }\n            else {\n                if (type == 4) {\n                    if (this.keepAromatic)\n                        this.mol.setBondTransient(b, Vec.append(this.mol.bondTransient(b), ForeignMoleculeTransient.BondAromatic));\n                    else {\n                        if (this.resBonds == null)\n                            this.resBonds = Vec.booleanArray(false, numBonds);\n                        this.resBonds[b - 1] = true;\n                    }\n                }\n            }\n            let endpts = null;\n            let attach = null;\n            for (let i = 4; i < bits.length; i++) {\n                let eq = bits[i].indexOf('=');\n                if (eq < 0)\n                    continue;\n                let key = bits[i].substring(0, eq), val = bits[i].substring(eq + 1);\n                if (key == 'CFG') {\n                    let dir = parseInt(val);\n                    this.mol.setBondType(b, dir == 1 ? Molecule.BONDTYPE_INCLINED :\n                        dir == 2 ? Molecule.BONDTYPE_UNKNOWN :\n                            dir == 3 ? Molecule.BONDTYPE_DECLINED : Molecule.BONDTYPE_NORMAL);\n                }\n                else if (key == 'DISP') {\n                    if (val == 'COORD')\n                        this.mol.setBondOrder(b, 0);\n                }\n                else if (key == 'ENDPTS')\n                    endpts = this.unpackList(val);\n                else if (key == 'ATTACH')\n                    attach = val;\n            }\n            if (attach != null && endpts != null) {\n                if (attach == 'ALL')\n                    this.groupAttachAll.set(b, endpts);\n                else if (attach == 'ANY')\n                    this.groupAttachAny.set(b, endpts);\n            }\n        }\n        for (let atom of asdrawnRBC)\n            QueryUtil.setQueryAtomRingBonds(this.mol, atom, [this.countRingBonds(atom)]);\n        for (let atom of asdrawnSUB)\n            QueryUtil.setQueryAtomAdjacency(this.mol, atom, [this.countSubstitutions(atom)]);\n        this.postFix();\n        for (let n = 0; n < lineColl.length; n++) {\n            let line = lineColl[n];\n            while (n < lineColl.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineColl[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits[0].startsWith('MDLV30/STEABS')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoAbsolute = this.unpackList(bits[1].substring(5));\n            }\n            else if (bits[0].startsWith('MDLV30/STERAC')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoRacemic.push(this.unpackList(bits[1].substring(6)));\n            }\n            else if (bits[0].startsWith('MDLV30/STEREL')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoRelative.push(this.unpackList(bits[1].substring(6)));\n            }\n        }\n        let stereoGroup = new StereoGroup(this.mol);\n        for (let atoms of this.groupStereoRacemic)\n            stereoGroup.createRacemic(atoms);\n        for (let atoms of this.groupStereoRelative)\n            stereoGroup.createRelative(atoms);\n        stereoGroup.rewriteMolecule();\n        let superatoms = new Map();\n        for (let n = 0; n < lineSgroup.length; n++) {\n            let line = lineSgroup[n];\n            while (n < lineSgroup.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineSgroup[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            let idx = parseInt(bits[0]);\n            if (bits.length > 3 && idx > 0 && bits[1] == 'SUP') {\n                let sup = { atoms: [], name: null };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        sup.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('LABEL='))\n                        sup.name = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('XBONDS='))\n                        sup.bonds = this.unpackList(bits[i].substring(7));\n                    else if (bits[i].startsWith('CLASS='))\n                        sup.templateClass = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('NATREPLACE='))\n                        sup.natReplace = this.withoutQuotes(bits[i].substring(11));\n                    else if (bits[i].startsWith('SAP=')) {\n                        const pts = this.unpackStrings(bits[i].substring(4));\n                        sup.attachPoints = [...((_a = sup.attachPoints) !== null && _a !== void 0 ? _a : []), ...pts];\n                    }\n                }\n                superatoms.set(idx, sup);\n            }\n            else if (bits.length > 3 && idx > 0 && (bits[1] == 'MIX' || bits[1] == 'FOR') && parseInt(bits[2]) == idx) {\n                let mix = { index: idx, parent: 0, atoms: null, type: bits[1] };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        mix.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('PARENT='))\n                        mix.parent = parseInt(bits[i].substring(7));\n                }\n                this.groupMixtures.push(mix);\n            }\n            else if (bits.length > 3 && idx > 0 && (bits[1] == 'SRU' || bits[1] == 'COP' || bits[1] == 'MUL' || bits[1] == 'DAT')) {\n                let sup = { atoms: [], name: null, bracketType: bits[1] };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        sup.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('BONDS='))\n                        sup.bonds = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('LABEL='))\n                        sup.name = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('CONNECT='))\n                        sup.connectType = bits[i].substring(8);\n                    else if (bits[i].startsWith('XBCORR='))\n                        sup.bondConn = this.unpackList(bits[i].substring(7));\n                    else if (bits[i].startsWith('MULT='))\n                        sup.name = this.withoutQuotes(bits[i].substring(5));\n                    else if (bits[i].startsWith('FIELDNAME='))\n                        sup.name = this.withoutQuotes(bits[i].substring(10));\n                    else if (bits[i].startsWith('FIELDDATA='))\n                        sup.value = this.withoutQuotes(bits[i].substring(10));\n                }\n                superatoms.set(idx, sup);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            if (value.bracketType) {\n                superatoms.delete(key);\n                this.applyPolymerBlock(value);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            superatoms.delete(key);\n            this.applySuperAtom(value, Array.from(superatoms.values()));\n        }\n        if (templateBlocks.length > 0) {\n            this.scsrTemplates = templateBlocks.map((lines) => this.parseV3000Template(lines));\n        }\n    }\n    parseQueryAtomList(mol, atom) {\n        let label = mol.atomElement(atom);\n        let not = false;\n        if (label.startsWith('NOT ')) {\n            label = label.substring(4);\n            not = true;\n        }\n        if (label.length < 2 || !label.startsWith('[') || !label.endsWith(']'))\n            return;\n        label = label.substring(1, label.length - 1);\n        let elements = label.split(',');\n        mol.setAtomElement(atom, '*');\n        if (!not)\n            QueryUtil.setQueryAtomElements(mol, atom, elements);\n        else\n            QueryUtil.setQueryAtomElementsNot(mol, atom, elements);\n    }\n    applySuperAtom(sup, residual) {\n        if (sup.name == null || Vec.isBlank(sup.atoms))\n            return;\n        let mask = Vec.booleanArray(true, this.mol.numAtoms);\n        for (let a of sup.atoms)\n            mask[a - 1] = false;\n        let name = sup.name;\n        let i;\n        while ((i = name.indexOf('\\\\S')) >= 0)\n            name = name.substring(0, i) + '{^' + name.substring(i + 2);\n        while ((i = name.indexOf('\\\\s')) >= 0)\n            name = name.substring(0, i) + '{' + name.substring(i + 2);\n        while ((i = name.indexOf('\\\\n')) >= 0)\n            name = name.substring(0, i) + '}' + name.substring(i + 2);\n        let [mod, abvAtom] = !sup.templateClass ? MolUtil.convertToAbbrevIndex(this.mol, mask, name) : [null, null];\n        if (mod == null) {\n            let keyval = {};\n            if (sup.bonds)\n                keyval['bonds'] = sup.bonds.join(' ');\n            if (sup.templateClass)\n                keyval['templateClass'] = sup.templateClass;\n            if (sup.natReplace)\n                keyval['natReplace'] = sup.natReplace;\n            if (sup.attachPoints)\n                keyval['attachPoints'] = sup.attachPoints.join(' ');\n            ForeignMolecule.markSgroupMultiAttach(this.mol, name, sup.atoms, keyval);\n            return;\n        }\n        this.mol = mod;\n        let map = Vec.maskMap(mask);\n        for (let res of residual) {\n            let subsumed = false;\n            for (let n = res.atoms.length - 1; n >= 0; n--) {\n                let atom = map[res.atoms[n] - 1] + 1;\n                if (atom == 0) {\n                    res.atoms = Vec.remove(res.atoms, n);\n                    subsumed = true;\n                }\n                else\n                    res.atoms[n] = atom;\n            }\n            if (subsumed)\n                res.atoms = Vec.sorted(Vec.append(res.atoms, abvAtom));\n        }\n    }\n    applyPolymerBlock(sup) {\n        if (sup.bracketType == 'MUL') {\n            let mult = parseInt(sup.name);\n            ForeignMolecule.markSgroupMultiRepeat(this.mol, mult, sup.atoms);\n            return;\n        }\n        if (sup.bracketType == 'DAT') {\n            if (sup.atoms != null)\n                ForeignMolecule.markSgroupData(this.mol, sup.name, sup.value, sup.unit, sup.query, sup.atoms);\n            return;\n        }\n        let poly = new PolymerBlock(this.mol);\n        let connect = null;\n        if (sup.connectType == null) { }\n        else if (sup.connectType == 'HT')\n            connect = PolymerBlockConnectivity.HeadToTail;\n        else if (sup.connectType == 'HH')\n            connect = PolymerBlockConnectivity.HeadToHead;\n        else if (sup.connectType == 'EU')\n            connect = PolymerBlockConnectivity.Random;\n        else\n            return;\n        let bondConn = null;\n        if (Vec.len(sup.bondConn) == 3) {\n            let b1 = sup.bondConn[0], b2 = sup.bondConn[2], b3 = sup.bondConn[1], b4 = 0;\n            for (let n = 1; n <= this.mol.numBonds; n++)\n                if (n != b1 && n != b2 && n != b3) {\n                    let in1 = sup.atoms.indexOf(this.mol.bondFrom(n)) >= 0, in2 = sup.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n                    if ((in1 && !in2) || (!in1 && in2)) {\n                        if (b4 > 0) {\n                            b4 = 0;\n                            break;\n                        }\n                        b4 = n;\n                    }\n                }\n            bondConn = [b1, b2, b3, b4];\n        }\n        else if (Vec.len(sup.bondConn) == 4) {\n            bondConn = sup.bondConn;\n        }\n        let unit = new PolymerBlockUnit(sup.atoms);\n        unit.connect = connect;\n        unit.bondConn = bondConn;\n        poly.createUnit(unit);\n    }\n    parseV3000Template(lines) {\n        let header = lines[0];\n        let bits = this.splitWithQuotes(header.substring('M  V30 TEMPLATE '.length));\n        let name = bits[1], natReplace = null;\n        for (let n = 2; n < bits.length; n++) {\n            if (bits[n].startsWith('NATREPLACE='))\n                natReplace = bits[n].substring(11);\n        }\n        lines[0] = '  0  0  0  0  0  0  0  0  0  0  0 V3000';\n        lines.push('M  END');\n        let mdl = new MDLMOLReader(lines.join('\\n'));\n        mdl.parseHeader = false;\n        mdl.parse();\n        return { name, natReplace, mol: mdl.mol };\n    }\n    withoutQuotes(str) {\n        if (str.length >= 2 && str.startsWith('\"') && str.endsWith('\"'))\n            return str.substring(1, str.length - 1);\n        return str;\n    }\n    splitWithQuotes(line) {\n        let segments = [];\n        let seg = '';\n        let depth = 0, quote = false;\n        for (let n = 0; n < line.length; n++) {\n            let ch = line.charAt(n);\n            if (ch == ' ' && depth == 0 && !quote) {\n                if (seg.length > 0)\n                    segments.push(seg);\n                seg = '';\n            }\n            else {\n                seg += ch;\n                if (ch == '\"')\n                    quote = !quote;\n                else if (ch == '(' || ch == '[')\n                    depth++;\n                else if (ch == ')' || ch == ']')\n                    depth--;\n            }\n        }\n        if (seg.length > 0)\n            segments.push(seg);\n        return segments;\n    }\n    unpackList(str) {\n        if (!str.startsWith('(') || !str.endsWith(')'))\n            return null;\n        str = str.substring(1, str.length - 1);\n        let values = [];\n        for (let bit of str.split(' '))\n            values.push(parseInt(bit));\n        if (values[0] != values.length - 1)\n            return null;\n        return Vec.remove(values, 0);\n    }\n    unpackStrings(str) {\n        if (!str.startsWith('(') || !str.endsWith(')'))\n            return null;\n        str = str.substring(1, str.length - 1);\n        let values = str.split(' ');\n        if (parseInt(values[0]) != values.length - 1)\n            return null;\n        return Vec.remove(values, 0);\n    }\n    countRingBonds(atom) {\n        let count = 0;\n        for (let b of this.mol.atomAdjBonds(atom))\n            if (this.mol.bondInRing(b))\n                count++;\n        return count;\n    }\n    countSubstitutions(atom) {\n        let count = 0;\n        for (let adj of this.mol.atomAdjList(atom))\n            if (this.mol.atomElement(adj) != 'H')\n                count++;\n        return count;\n    }\n}\nexport class MDLSDFReader {\n    constructor(strData) {\n        this.ds = new DataSheet();\n        this.upcastColumns = true;\n        this.pos = 0;\n        this.lines = strData.split(/\\r?\\n/);\n    }\n    parse() {\n        this.parseStream();\n        if (this.upcastColumns)\n            this.upcastStringColumns();\n        return this.ds;\n    }\n    parseStream() {\n        let ds = this.ds;\n        ds.appendColumn('Molecule', \"molecule\", 'Molecular structure');\n        let colName = -1;\n        let entry = [];\n        while (this.pos < this.lines.length) {\n            let line = this.lines[this.pos++];\n            if (!line.startsWith('$$$$')) {\n                entry.push(line);\n                continue;\n            }\n            let rn = ds.appendRow();\n            let molstr = '';\n            let pos = 0;\n            while (pos < entry.length) {\n                line = entry[pos];\n                if (line.startsWith('> '))\n                    break;\n                molstr += line + '\\n';\n                pos++;\n                if (line.startsWith('M\tEND'))\n                    break;\n            }\n            let mol = null, name = null;\n            try {\n                if (molstr.length > 0) {\n                    let mdl = new MDLMOLReader(molstr);\n                    mdl.parse();\n                    mol = mdl.mol;\n                    name = mdl.molName;\n                }\n            }\n            catch (ex) {\n            }\n            if (mol != null)\n                ds.setMolecule(rn, 0, mol);\n            if (name) {\n                if (colName < 0)\n                    colName = ds.appendColumn('Name', \"string\", 'Molecule name');\n                ds.setString(rn, colName, name);\n            }\n            if (rn == 0 && mol != null) {\n                let str1 = entry[0], str3 = entry[2];\n                if (str1.length >= 7 && str1.startsWith('$name=')) {\n                    ds.changeColumnName(0, str1.substring(6), ds.colDescr(0));\n                }\n                if (str3.length >= 8 && str3.startsWith('$title=')) {\n                    ds.title = str3.substring(7);\n                }\n            }\n            for (; pos + 1 < entry.length; pos += 3) {\n                let key = entry[pos], val = entry[pos + 1];\n                if (!key.startsWith('>'))\n                    continue;\n                let z = key.indexOf('<');\n                if (z < 0)\n                    continue;\n                key = key.substring(z + 1);\n                z = key.indexOf('>');\n                if (z < 0)\n                    continue;\n                key = key.substring(0, z);\n                if (key.length == 0)\n                    continue;\n                while (pos + 2 < entry.length && entry[pos + 2].length > 0) {\n                    val += '\\n' + entry[pos + 2];\n                    pos++;\n                }\n                let cn = ds.findColByName(key);\n                if (cn < 0)\n                    cn = ds.appendColumn(key, \"string\", '');\n                if (val.length == 0)\n                    ds.setToNull(rn, cn);\n                else\n                    ds.setString(rn, cn, val);\n            }\n            entry = [];\n        }\n        if (ds.numRows == 0)\n            this.ds = null;\n    }\n    upcastStringColumns() {\n        let ds = this.ds;\n        for (let i = 0; i < ds.numCols; i++)\n            if (ds.colType(i) == \"string\") {\n                let allnull = true, allreal = true, allint = true, allbool = true;\n                for (let j = 0; j < ds.numRows; j++) {\n                    if (!allreal && !allint && !allbool)\n                        break;\n                    if (ds.isNull(j, i))\n                        continue;\n                    allnull = false;\n                    let val = ds.getString(j, i);\n                    if (allbool) {\n                        let lc = val.toLowerCase();\n                        if (lc != 'true' && lc != 'false')\n                            allbool = false;\n                    }\n                    if (allint) {\n                        let int = parseInt(val);\n                        if (!isFinite(int) || int != parseFloat(val))\n                            allint = false;\n                    }\n                    if (allreal) {\n                        if (!isFinite(parseFloat(val)))\n                            allreal = false;\n                    }\n                }\n                if (allnull) { }\n                else if (allint)\n                    ds.changeColumnType(i, \"integer\");\n                else if (allreal)\n                    ds.changeColumnType(i, \"real\");\n                else if (allbool)\n                    ds.changeColumnType(i, \"boolean\");\n            }\n    }\n}\n//# sourceMappingURL=MDLReader.js.map","import { Vec } from '../util/Vec';\nimport { BondArtifact } from './BondArtifact';\nimport { ForeignMolecule, ForeignMoleculeTransient } from './ForeignMolecule';\nimport { MDLMOL_VALENCE } from './MDLReader';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity } from './PolymerBlock';\nimport { QueryUtil } from './QueryUtil';\nimport { StereoGroup } from './StereoGroup';\nconst VPFX = 'M  V30 ';\nexport class MDLMOLWriter {\n    constructor(mol) {\n        this.mol = mol;\n        this.includeHeader = true;\n        this.includeCounts = true;\n        this.includeEnd = true;\n        this.overallStereoAbsolute = true;\n        this.enhancedFields = true;\n        this.chargeSeparate = false;\n        this.abbrevSgroups = true;\n        this.polymerBlocks = true;\n        this.molName = '';\n        this.scsrTemplates = null;\n        this.sgroups = [];\n        this.lines = [];\n    }\n    write() {\n        if (this.includeHeader) {\n            this.lines.push(this.molName);\n            this.lines.push('Generated by WebMolKit');\n            this.lines.push('');\n        }\n        this.writeCTAB();\n        return this.lines.join('\\n');\n    }\n    writeV3000() {\n        if (this.includeHeader) {\n            this.lines.push(this.molName);\n            this.lines.push('Generated by WebMolKit');\n            this.lines.push('');\n        }\n        this.writeCTAB3000();\n        return this.lines.join('\\n');\n    }\n    writeEither() {\n        let triggered = StereoGroup.hasStereoGroups(this.mol) || this.mol.numAtoms >= 1000 || this.mol.numBonds >= 1000 || Vec.notBlank(this.scsrTemplates);\n        if (!triggered)\n            for (let n = 1; n <= this.mol.numBonds; n++)\n                if (this.mol.bondOrder(n) == 0 && QueryUtil.queryBondOrders(this.mol, n) == null) {\n                    triggered = true;\n                    break;\n                }\n        if (triggered)\n            return this.writeV3000();\n        else\n            return this.write();\n    }\n    getResult() {\n        return this.lines.join('\\n');\n    }\n    writeCTAB() {\n        var _a;\n        let mol = this.mol = this.mol.clone();\n        mol.keepTransient = true;\n        if (MolUtil.hasAnyAbbrev(mol) || ForeignMolecule.hasAnySgroupMultiAttach(mol) || ForeignMolecule.hasAnySgroupMultiRepeat(mol) || ForeignMolecule.hasAnySgroupData(mol)) {\n            if (this.abbrevSgroups)\n                this.partialAbbrevExpansion();\n            else\n                MolUtil.expandAbbrevs(mol, true);\n            this.prepareSgroups();\n        }\n        let atomList1 = [], atomList2 = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let elements = null;\n            let logic = 'F';\n            elements = QueryUtil.queryAtomElements(mol, n);\n            if (elements == null) {\n                elements = QueryUtil.queryAtomElementsNot(mol, n);\n                logic = 'T';\n            }\n            if (elements == null)\n                continue;\n            mol.setAtomElement(n, 'L');\n            let line = this.intrpad(n, 3) + ' ' + logic + '  ' + this.intrpad(elements.length, 3);\n            for (let el of elements)\n                line += this.intrpad(Molecule.elementAtomicNumber(el), 4);\n            atomList1.push(line);\n            line = 'M  ALS ' + this.intrpad(n, 3) + this.intrpad(elements.length, 3) + ' ' + logic + ' ';\n            for (let el of elements)\n                line += this.pad(el, 4);\n            atomList2.push(line);\n        }\n        this.lines.push(this.intrpad(mol.numAtoms, 3) + this.intrpad(mol.numBonds, 3) + this.intrpad(atomList1.length, 3) +\n            '  0' + (this.overallStereoAbsolute ? '  1' : '  0') + '  0  0  0  0  0999 V2000');\n        let chgidx = [], chgval = [];\n        let radidx = [], radval = [];\n        let isoidx = [], isoval = [];\n        let rgpidx = [], rgpval = [];\n        let hydidx = [], hydval = [];\n        let zchidx = [], zchval = [];\n        let zboidx = [], zboval = [];\n        let rbcidx = [], rbcval = [];\n        let subidx = [], subval = [];\n        let unsidx = [], unsval = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n), y = mol.atomY(n);\n            let z = mol.is3D() ? mol.atomZ(n) : 0;\n            let line = this.rpad(x.toFixed(4), 10) + this.rpad(y.toFixed(4), 10) + this.rpad(z.toFixed(4), 10);\n            let el = mol.atomElement(n);\n            let str = el;\n            if (str.length > 3)\n                str = str.substring(0, 3);\n            if (str.length > 1 && str.charAt(0) == 'R' && str.charAt(1) >= '0' && str.charAt(1) <= '9') {\n                rgpidx.push(n);\n                rgpval.push(parseInt(str.substring(1)));\n                str = 'R#';\n            }\n            while (str.length < 4)\n                str += ' ';\n            line += ' ' + str + '0';\n            let chg = mol.atomCharge(n), rad = mol.atomUnpaired(n), mapnum = mol.atomMapNum(n);\n            if (chg >= -3 && chg <= -1)\n                chg = 4 - chg;\n            else if (chg == 0 && rad == 2)\n                chg = 4;\n            else if (chg >= 1 && chg <= 3)\n                chg = 4 - chg;\n            else\n                chg = 0;\n            let qhyd = QueryUtil.queryAtomHydrogens(mol, n);\n            let hyd = 0;\n            if (Vec.len(qhyd) == 1)\n                hyd = qhyd[0] + 1;\n            let val = this.mdlValence(mol, n, 15);\n            line += this.intrpad(chg, 3) + '  0' + this.intrpad(hyd, 3) + '  0' + this.intrpad(val, 3) + '  0  0  0' + this.intrpad(mapnum, 3) + '  0  0';\n            this.lines.push(line);\n            if (mol.atomCharge(n) != 0) {\n                chgidx.push(n);\n                chgval.push(mol.atomCharge(n));\n            }\n            if (this.enhancedFields) {\n                if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN) {\n                    hydidx.push(n);\n                    hydval.push(mol.atomHExplicit(n));\n                }\n            }\n            if (rad == 1) {\n                radidx.push(n);\n                radval.push(2);\n            }\n            if (rad == 2) {\n                radidx.push(n);\n                radval.push(1);\n            }\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) {\n                isoidx.push(n);\n                isoval.push(mol.atomIsotope(n));\n            }\n            let qrbc = QueryUtil.queryAtomRingBonds(mol, n), qsub = QueryUtil.queryAtomAdjacency(mol, n);\n            let quns = QueryUtil.queryAtomUnsaturated(mol, n);\n            if (Vec.len(qrbc) == 1) {\n                rbcidx.push(n);\n                rbcval.push(qrbc[0] == 0 ? -1 : qrbc[0]);\n            }\n            if (Vec.len(qsub) == 1) {\n                subidx.push(n);\n                subval.push(qsub[0] == 0 ? -1 : qsub[0]);\n            }\n            if (quns == true) {\n                unsidx.push(n);\n                unsval.push(1);\n            }\n        }\n        let maskArom = ForeignMolecule.noteAromaticBonds(mol);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let order = mol.bondOrder(n), type = order;\n            let qbond = Vec.sorted((_a = QueryUtil.queryBondOrders(mol, n)) !== null && _a !== void 0 ? _a : []);\n            if (maskArom[n - 1] || Vec.equals(qbond, [-1]))\n                type = 4;\n            else if (Vec.equals(qbond, [1, 2]))\n                type = 5;\n            else if (Vec.equals(qbond, [-1, 1]))\n                type = 6;\n            else if (Vec.equals(qbond, [-1, 2]))\n                type = 7;\n            else if (Vec.equals(qbond, [-1, 0, 1, 2, 3]))\n                type = 8;\n            else if (type > 3)\n                type = 3;\n            let stereo = mol.bondType(n);\n            if (stereo == Molecule.BONDTYPE_NORMAL) { }\n            else if (stereo == Molecule.BONDTYPE_INCLINED) {\n                stereo = 1;\n            }\n            else if (stereo == Molecule.BONDTYPE_DECLINED) {\n                stereo = 6;\n            }\n            else if (stereo == Molecule.BONDTYPE_UNKNOWN) {\n                if (type == 1)\n                    stereo = 4;\n                else\n                    stereo = 3;\n            }\n            else\n                stereo = 0;\n            let line = this.intrpad(mol.bondFrom(n), 3) + this.intrpad(mol.bondTo(n), 3) +\n                this.intrpad(type, 3) + this.intrpad(stereo, 3) + '  0  0  0';\n            this.lines.push(line);\n            if (this.enhancedFields) {\n                if ((order < 1 || order > 3) || type != order && Vec.isBlank(qbond)) {\n                    zboidx.push(n);\n                    zboval.push(order);\n                }\n            }\n        }\n        this.lines.push(...atomList1);\n        this.lines.push(...atomList2);\n        this.writeMBlockPair('CHG', chgidx, chgval);\n        this.writeMBlockPair('RAD', radidx, radval);\n        this.writeMBlockPair('ISO', isoidx, isoval);\n        this.writeMBlockPair('RGP', rgpidx, rgpval);\n        this.writeMBlockPair('HYD', hydidx, hydval);\n        this.writeMBlockPair('ZCH', zchidx, zchval);\n        this.writeMBlockPair('ZBO', zboidx, zboval);\n        this.writeMBlockPair('RBC', rbcidx, rbcval);\n        this.writeMBlockPair('SUB', subidx, subval);\n        this.writeMBlockPair('UNS', unsidx, unsval);\n        if (this.enhancedFields) {\n            let artifacts = new BondArtifact(this.mol);\n            let idx = 0;\n            for (let path of artifacts.getResPaths())\n                this.writeMBlockFlat('ZPA', ++idx, path.atoms);\n            for (let ring of artifacts.getResRings())\n                this.writeMBlockFlat('ZRI', ++idx, ring.atoms);\n            for (let arene of artifacts.getArenes())\n                this.writeMBlockFlat('ZAR', ++idx, Vec.prepend(arene.atoms, arene.centre));\n        }\n        let inSgroup = Vec.booleanArray(false, mol.numAtoms);\n        for (let s = 0; s < this.sgroups.length; s++) {\n            let sg = this.sgroups[s];\n            for (let n of sg.atoms)\n                inSgroup[n - 1] = true;\n            let sidx = this.intrpad(s + 1, 4);\n            this.lines.push('M  STY  1' + sidx + ' ' + sg.type);\n            for (let n = 0; n < sg.atoms.length; n += 15) {\n                let sz = Math.min(sg.atoms.length - n, 15);\n                let line = 'M  SAL' + sidx + this.intrpad(sz, 3);\n                for (let i = 0; i < sz; i++)\n                    line += this.intrpad(sg.atoms[n + i], 4);\n                this.lines.push(line);\n            }\n            if (sg.type != 'DAT')\n                this.lines.push('M  SMT' + sidx + ' ' + sg.name);\n            if (sg.type == 'MUL') {\n                let mult = parseInt(sg.name), unit = sg.atoms.length / mult;\n                for (let n = 0; n < unit; n += 15) {\n                    let sz = Math.min(unit - n, 15);\n                    let line = 'M  SPA' + sidx + this.intrpad(sz, 3);\n                    for (let i = 0; i < sz; i++)\n                        line += this.intrpad(sg.atoms[n + i], 4);\n                    this.lines.push(line);\n                }\n                if (sg.parent > 0)\n                    this.lines.push('M  SPL    1' + sidx + this.intrpad(sg.parent, 4));\n            }\n            if (sg.type == 'DAT') {\n                this.lines.push('M  SDT' + sidx + ' ' + this.pad(sg.name, 32) + this.pad(sg.unit, 20) + sg.query);\n                this.lines.push('M  SED' + sidx + ' ' + sg.value);\n            }\n        }\n        if (this.polymerBlocks)\n            this.encodePolymerBlocks(this.sgroups.length);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomElement(n).length > 2) {\n                this.lines.push('A  ' + this.intrpad(n, 3));\n                this.lines.push(mol.atomElement(n));\n            }\n        if (this.includeEnd)\n            this.lines.push('M  END');\n    }\n    writeMBlockPair(token, idx, val) {\n        const sz = idx.length;\n        for (let i = 0; i < sz; i += 8) {\n            let count = Math.min(8, sz - i);\n            let line = 'M  ' + token + this.intrpad(count, 3);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(idx[i + j], 4) + this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    writeMBlockFlat(token, idx, val) {\n        const sz = val.length;\n        for (let i = 0; i < sz; i += 15) {\n            let count = Math.min(15, sz - i);\n            let line = 'M  ' + token + this.intrpad(count, 3) + this.intrpad(idx, 4);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    writeMBlockFlatIdxFirst(token, idx, val) {\n        const sz = val.length;\n        for (let i = 0; i < sz; i += 15) {\n            let count = Math.min(15, sz - i);\n            let line = 'M  ' + token + this.intrpad(idx, 4) + this.intrpad(count, 3);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    intrpad(num, sz) {\n        return this.rpad(num.toString(), sz);\n    }\n    rpad(str, sz) {\n        while (str.length < sz)\n            str = ' ' + str;\n        return str;\n    }\n    pad(str, sz) {\n        while (str.length < sz)\n            str += ' ';\n        return str;\n    }\n    mdlValence(mol, atom, zeroVal) {\n        let marked = ForeignMolecule.noteExplicitValence(mol, atom);\n        if (marked != null)\n            return marked > 0 ? marked : zeroVal;\n        let hyd = mol.atomHydrogens(atom), el = mol.atomElement(atom);\n        let options = MDLMOL_VALENCE[el];\n        if (options == null && hyd == 0)\n            return 0;\n        let chg = mol.atomCharge(atom);\n        let chgmod = (el == 'C' || el == 'H') ? Math.abs(chg) : el == 'B' ? -Math.abs(chg) : -chg;\n        let bondSum = 0;\n        for (let b of mol.atomAdjBonds(atom))\n            bondSum += mol.bondOrder(b);\n        let nativeVal = chgmod + hyd + bondSum;\n        if (options === null || options === void 0 ? void 0 : options.includes(nativeVal))\n            return 0;\n        let val = nativeVal - chgmod;\n        return val <= 0 || val > 14 ? zeroVal : val;\n    }\n    partialAbbrevExpansion() {\n        const { mol } = this;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                let frag = MolUtil.getAbbrev(mol, n);\n                if (frag == null || mol.atomAdjCount(n) != 1) {\n                    MolUtil.clearAbbrev(mol, n);\n                    continue;\n                }\n                if (MolUtil.hasAnyAbbrev(frag)) {\n                    MolUtil.expandAbbrevs(frag, true);\n                    MolUtil.setAbbrev(mol, n, frag);\n                }\n                let order = mol.bondOrder(mol.atomAdjBonds(n)[0]);\n                if (frag.atomAdjCount(1) == 1 && order == frag.bondOrder(frag.atomAdjBonds(1)[0]))\n                    continue;\n                MolUtil.expandOneAbbrev(mol, n, true);\n                n--;\n            }\n    }\n    prepareSgroups() {\n        const { mol } = this;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomMapNum(n) < 0)\n                mol.setAtomMapNum(n, 0);\n        let next = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                this.sgroups.push({ type: 'SUP', name: mol.atomElement(n), atoms: null });\n                let mask = MolUtil.expandOneAbbrev(mol, n, true);\n                if (mask == null)\n                    continue;\n                next--;\n                for (let i = 0; i < mask.length; i++)\n                    if (mask[i])\n                        mol.setAtomMapNum(i + 1, next);\n                n--;\n            }\n        for (let idx = -1, p = 0; idx >= next; idx--, p++) {\n            let atoms = [];\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomMapNum(n) == idx) {\n                    atoms.push(n);\n                    mol.setAtomMapNum(n, 0);\n                }\n            this.sgroups[p].atoms = atoms;\n        }\n        for (let ma of ForeignMolecule.noteAllSgroupMultiAttach(mol)) {\n            let sg = { type: 'SUP', name: ma.name, atoms: ma.atoms };\n            let str = ma.keyval['bonds'];\n            if (str)\n                sg.bonds = str.split(' ').map((v) => parseInt(v));\n            sg.templateClass = ma.keyval['templateClass'];\n            sg.natReplace = ma.keyval['natReplace'];\n            str = ma.keyval['attachPoints'];\n            if (str)\n                sg.attachPoints = str.split(' ');\n            this.sgroups.push(sg);\n        }\n        for (let mr of ForeignMolecule.noteAllSgroupMultiRepeat(mol))\n            this.sgroups.push({ type: 'MUL', name: mr.mult.toString(), atoms: mr.atoms });\n        for (let dat of ForeignMolecule.noteAllSgroupData(mol))\n            this.sgroups.push({ type: 'DAT', name: dat.name, value: dat.value, unit: dat.unit, query: dat.query, atoms: dat.atoms });\n        for (let n = 0; n < this.sgroups.length; n++) {\n            let sg = this.sgroups[n];\n            if (sg.type != 'MUL')\n                continue;\n            let bestIdx = -1, bestSize = Number.MAX_SAFE_INTEGER;\n            skip: for (let i = 0; i < this.sgroups.length; i++)\n                if (i != n) {\n                    let look = this.sgroups[i];\n                    if (look.type != 'MUL' || look.atoms.length >= bestSize)\n                        continue;\n                    for (let a of sg.atoms)\n                        if (!look.atoms.includes(a))\n                            continue skip;\n                    bestIdx = i;\n                    bestSize = look.atoms.length;\n                }\n            if (bestIdx >= 0)\n                sg.parent = bestIdx + 1;\n        }\n    }\n    encodePolymerBlocks(idx) {\n        let polymers = new PolymerBlock(this.mol);\n        for (let id of polymers.getIDList()) {\n            let unit = polymers.getUnit(id);\n            let sidx = this.intrpad(++idx, 4);\n            this.lines.push('M  STY  1' + sidx + ' SRU');\n            if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                this.lines.push('M  SCN  1' + sidx + ' HT ');\n            else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                this.lines.push('M  SCN  1' + sidx + ' HH ');\n            else if (unit.connect == PolymerBlockConnectivity.Random)\n                this.lines.push('M  SCN  1' + sidx + ' EU ');\n            this.writeMBlockFlatIdxFirst('SAL', idx, unit.atoms);\n            let bonds = null;\n            for (let n = 1; n <= this.mol.numBonds; n++) {\n                let fl1 = unit.atoms.indexOf(this.mol.bondFrom(n)) >= 0, fl2 = unit.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n                if ((fl1 && !fl2) || (!fl1 && fl2))\n                    bonds = Vec.append(bonds, n);\n            }\n            if (bonds != null)\n                this.writeMBlockFlatIdxFirst('SBL', idx, bonds);\n            if (Vec.len(unit.bondConn) == 4) {\n                let bcrs = [unit.bondConn[0], unit.bondConn[2], unit.bondConn[1]];\n                this.writeMBlockFlatIdxFirst('CRS', idx, bcrs);\n            }\n            this.lines.push('M  SMT' + sidx + ' n');\n        }\n    }\n    writeCTAB3000() {\n        var _a;\n        let mol = this.mol;\n        if (MolUtil.hasAnyAbbrev(mol) || ForeignMolecule.hasAnySgroupMultiAttach(mol) || ForeignMolecule.hasAnySgroupMultiRepeat(mol) || ForeignMolecule.hasAnySgroupData(mol)) {\n            mol = this.mol = mol.clone();\n            mol.keepTransient = true;\n            if (this.abbrevSgroups)\n                this.partialAbbrevExpansion();\n            else\n                MolUtil.expandAbbrevs(mol, true);\n            this.prepareSgroups();\n        }\n        let sgroupText = this.populateV3000Sgroups();\n        if (this.includeCounts)\n            this.lines.push('  0  0  0     0  0            999 V3000');\n        this.lines.push(VPFX + 'BEGIN CTAB');\n        this.lines.push(VPFX + `COUNTS ${mol.numAtoms} ${mol.numBonds} ${sgroupText.length} 0 ${this.overallStereoAbsolute ? 1 : 0}`);\n        this.lines.push(VPFX + 'BEGIN ATOM');\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let label = mol.atomElement(n);\n            let qel = QueryUtil.queryAtomElements(mol, n);\n            if (qel != null)\n                label = '[' + qel.join(',') + ']';\n            else {\n                qel = QueryUtil.queryAtomElementsNot(mol, n);\n                if (qel != null)\n                    label = 'NOT [' + qel.join(',') + ']';\n            }\n            if (label.includes(' '))\n                label = `\"${label}\"`;\n            let x = mol.atomX(n), y = mol.atomY(n);\n            let z = mol.is3D() ? mol.atomZ(n) : 0;\n            let mapnum = mol.atomMapNum(n), chg = mol.atomCharge(n), unp = mol.atomUnpaired(n);\n            let isotope = mol.atomIsotope(n), val = this.mdlValence(mol, n, -1);\n            let line = `${VPFX}${n} ${label} ${x.toFixed(4)} ${y.toFixed(4)} ${z.toFixed(4)} ${mapnum}`;\n            if (chg != 0)\n                line += ' CHG=' + chg;\n            if (unp == 1)\n                line += ' RAD=2';\n            else if (unp == 2)\n                line += ' RAD=1';\n            if (isotope != 0)\n                line += ' MASS=' + isotope;\n            if (val != 0)\n                line += ' VAL=' + val;\n            let qhyd = QueryUtil.queryAtomHydrogens(mol, n), qrbc = QueryUtil.queryAtomRingBonds(mol, n), qsub = QueryUtil.queryAtomAdjacency(mol, n);\n            let quns = QueryUtil.queryAtomUnsaturated(mol, n);\n            if (Vec.len(qhyd) == 1)\n                line += ' HCOUNT=' + (qhyd[0] == 0 ? -1 : qhyd[0]);\n            if (Vec.len(qrbc) == 1)\n                line += ' RBCNT=' + (qrbc[0] == 0 ? -1 : qrbc[0]);\n            if (Vec.len(qsub) == 1)\n                line += ' SUBST=' + (qsub[0] == 0 ? -1 : qsub[0]);\n            if (quns == true)\n                line += ' UNSAT=1';\n            for (let trans of mol.atomTransient(n)) {\n                if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRClass))\n                    line += ' CLASS=' + trans.substring(ForeignMoleculeTransient.AtomSCSRClass.length + 1);\n                else if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRSeqID))\n                    line += ' SEQID=' + trans.substring(ForeignMoleculeTransient.AtomSCSRSeqID.length + 1);\n                else if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRAttchOrd)) {\n                    let bits = trans.substring(ForeignMoleculeTransient.AtomSCSRAttchOrd.length + 1).split(',');\n                    line += ' ATTCHORD=' + this.packV3000Strings(bits);\n                }\n            }\n            this.lines.push(line);\n        }\n        this.lines.push(VPFX + 'END ATOM');\n        if (mol.numBonds > 0) {\n            this.lines.push(VPFX + 'BEGIN BOND');\n            let maskArom = ForeignMolecule.noteAromaticBonds(mol);\n            let maskHBond = ForeignMolecule.noteZeroHydrogenBonds(mol);\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n                let order = mol.bondOrder(n), type = order;\n                let qbond = Vec.sorted((_a = QueryUtil.queryBondOrders(mol, n)) !== null && _a !== void 0 ? _a : []);\n                if (maskArom[n - 1] || Vec.equals(qbond, [-1]))\n                    type = 4;\n                else if (Vec.equals(qbond, [1, 2]))\n                    type = 5;\n                else if (Vec.equals(qbond, [-1, 1]))\n                    type = 6;\n                else if (Vec.equals(qbond, [-1, 2]))\n                    type = 7;\n                else if (Vec.equals(qbond, [-1, 0, 1, 2, 3]))\n                    type = 8;\n                else if (type == 0) {\n                    if (!maskHBond[n - 1])\n                        type = 9;\n                    else\n                        type = 10;\n                }\n                else if (type > 3)\n                    type = 3;\n                let stereo = mol.bondType(n);\n                let line = `${VPFX}${n} ${type} ${bfr} ${bto}`;\n                if (stereo == Molecule.BONDTYPE_INCLINED)\n                    line += ' CFG=1';\n                else if (stereo == Molecule.BONDTYPE_DECLINED)\n                    line += ' CFG=3';\n                else if (stereo == Molecule.BONDTYPE_UNKNOWN)\n                    line += ' CFG=2';\n                if (order == 0 && !maskHBond[n - 1])\n                    line += ' DISP=COORD';\n                this.lines.push(line);\n            }\n            this.lines.push(VPFX + 'END BOND');\n        }\n        if (sgroupText.length > 0) {\n            this.lines.push(VPFX + 'BEGIN SGROUP');\n            this.lines.push(...sgroupText);\n            this.lines.push(VPFX + 'END SGROUP');\n        }\n        let collections = [];\n        let stereoGroup = new StereoGroup(mol);\n        let racidx = 0, relidx = 0;\n        for (let atoms of stereoGroup.getRacemicAtoms())\n            collections.push(VPFX + 'MDLV30/STERAC' + (++racidx) + ' ATOMS=' + this.packV3000List(atoms));\n        for (let atoms of stereoGroup.getRelativeAtoms())\n            collections.push(VPFX + 'MDLV30/STEREL' + (++relidx) + ' ATOMS=' + this.packV3000List(atoms));\n        if (collections.length > 0) {\n            this.lines.push(VPFX + 'BEGIN COLLECTION');\n            this.lines.push(...collections);\n            this.lines.push(VPFX + 'END COLLECTION');\n        }\n        this.lines.push(VPFX + 'END CTAB');\n        if (Vec.notBlank(this.scsrTemplates))\n            this.populateSCSRTemplates();\n        if (this.includeEnd)\n            this.lines.push('M  END');\n    }\n    populateV3000Sgroups() {\n        let mol = this.mol;\n        let lines = [];\n        for (let s = 0; s < this.sgroups.length; s++) {\n            let sg = this.sgroups[s];\n            let sid = lines.length + 1;\n            let txt = `${VPFX}${sid} ${sg.type} 0`;\n            if (sg.type == 'SUP') {\n                txt += ' LABEL=' + (sg.name.includes(' ') ? `\"${sg.name}\"` : sg.name);\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                if (sg.bonds)\n                    txt += ' XBONDS=' + this.packV3000List(sg.bonds);\n                if (sg.templateClass)\n                    txt += ' CLASS=' + sg.templateClass;\n                if (sg.natReplace)\n                    txt += ' NATREPLACE=' + sg.natReplace;\n                if (sg.attachPoints) {\n                    for (let n = 0; n + 2 < sg.attachPoints.length; n += 3) {\n                        let v1 = sg.attachPoints[n], v2 = sg.attachPoints[n + 1], v3 = sg.attachPoints[n + 2];\n                        txt += ` SAP=(3 ${v1} ${v2} ${v3})`;\n                    }\n                }\n            }\n            else if (sg.type == 'MUL') {\n                let mult = parseInt(sg.name), unit = sg.atoms.length / mult;\n                txt += ' MULT=' + sg.name;\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                txt += ' PATOMS=' + this.packV3000List(sg.atoms.slice(0, unit));\n                if (sg.parent > 0)\n                    txt += ' PARENT=' + sg.parent;\n            }\n            else if (sg.type == 'DAT') {\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                txt += ' FIELDNAME=' + (sg.name.includes(' ') ? `\"${sg.name}\"` : sg.name);\n                txt += ' FIELDDATA=' + (sg.value.includes(' ') ? `\"${sg.value}\"` : sg.value);\n            }\n            lines.push(txt);\n        }\n        if (this.polymerBlocks) {\n            let polymers = new PolymerBlock(mol);\n            for (let id of polymers.getIDList()) {\n                let sid = lines.length + 1;\n                let unit = polymers.getUnit(id);\n                let txt = `${VPFX}${sid} SRU 0`;\n                txt += ' ATOMS=' + this.packV3000List(unit.atoms);\n                if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                    txt += ' CONNECT=HT';\n                else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                    txt += ' CONNECT=HH';\n                else if (unit.connect == PolymerBlockConnectivity.Random)\n                    txt += ' CONNECT=EU';\n                let bonds = [];\n                for (let n = 1; n <= mol.numBonds; n++) {\n                    let fl1 = unit.atoms.includes(mol.bondFrom(n)), fl2 = unit.atoms.includes(mol.bondTo(n));\n                    if ((fl1 && !fl2) || (!fl1 && fl2))\n                        bonds.push(n);\n                }\n                if (bonds.length > 0)\n                    txt += ' BONDS=' + this.packV3000List(bonds);\n                if (unit.bondConn != null)\n                    txt += ' XBCORR=' + this.packV3000List(unit.bondConn);\n                lines.push(txt);\n            }\n        }\n        return lines;\n    }\n    populateSCSRTemplates() {\n        this.lines.push(VPFX + 'BEGIN TEMPLATE');\n        for (let n = 0; n < this.scsrTemplates.length; n++) {\n            var defn = this.scsrTemplates[n];\n            let line = VPFX + 'TEMPLATE ' + (n + 1) + ' ' + defn.name;\n            if (defn.natReplace)\n                line += ' NATREPLACE=' + defn.natReplace;\n            this.lines.push(line);\n            var tmdl = new MDLMOLWriter(defn.mol);\n            tmdl.includeHeader = false;\n            tmdl.includeCounts = false;\n            tmdl.includeEnd = false;\n            let molfile = tmdl.writeV3000();\n            for (line of molfile.trimEnd().split('\\n'))\n                this.lines.push(line);\n        }\n        this.lines.push(VPFX + 'END TEMPLATE');\n    }\n    packV3000List(values) {\n        let str = '(' + values.length;\n        for (let v of values)\n            str += ' ' + v;\n        return str + ')';\n    }\n    packV3000Strings(values) {\n        let str = '(' + values.length;\n        for (let v of values)\n            str += ' ' + v;\n        return str + ')';\n    }\n}\nexport class MDLSDFWriter {\n    constructor(ds) {\n        this.ds = ds;\n        this.enhancedFields = true;\n        this.chargeSeparate = false;\n        this.abbrevSgroups = true;\n        this.lines = [];\n    }\n    write() {\n        let ds = this.ds, lines = this.lines;\n        let colMol = this.ds.firstColOfType(\"molecule\");\n        for (let i = 0; i < ds.numRows; i++) {\n            let mol = colMol < 0 ? null : ds.getMolecule(i, colMol);\n            if (mol != null) {\n                let wtr = new MDLMOLWriter(mol);\n                wtr.enhancedFields = this.enhancedFields;\n                wtr.chargeSeparate = this.chargeSeparate;\n                wtr.abbrevSgroups = this.abbrevSgroups;\n                let molstr = wtr.write();\n                lines.push(molstr);\n            }\n            for (let j = 0; j < ds.numCols; j++)\n                if (j != colMol && ds.notNull(i, j)) {\n                    let ct = ds.colType(j);\n                    let val = '';\n                    if (ct == \"string\")\n                        val = ds.getString(i, j);\n                    else if (ct == \"integer\")\n                        val = ds.getInteger(i, j).toString();\n                    else if (ct == \"real\")\n                        val = ds.getReal(i, j).toString();\n                    else if (ct == \"boolean\")\n                        val = ds.getBoolean(i, j) ? 'true' : 'false';\n                    if (val != '') {\n                        lines.push('> <' + ds.colName(j) + '>');\n                        lines.push(val);\n                        lines.push('');\n                    }\n                }\n            lines.push('$$$$');\n        }\n        return lines.join('\\n');\n    }\n    getResult() {\n        return this.lines.join('\\n');\n    }\n}\n//# sourceMappingURL=MDLWriter.js.map","import { MDLMOLReader } from './MDLReader';\nimport { MDLMOLWriter } from './MDLWriter';\nimport { Molecule } from './Molecule';\nexport class MoleculeStream {\n    static readUnknown(strData) {\n        if (strData.startsWith('\"')) {\n            try {\n                let jsonStr = JSON.parse(strData);\n                let mol = MoleculeStream.readNative(jsonStr);\n                if (mol)\n                    return mol;\n            }\n            catch (ex) { }\n        }\n        let mol = MoleculeStream.readNative(strData);\n        if (mol)\n            return mol;\n        try {\n            mol = MoleculeStream.readMDLMOL(strData);\n        }\n        catch (e) { }\n        return mol;\n    }\n    static readNative(strData) {\n        let mol = new Molecule();\n        mol.keepTransient = true;\n        let lines = strData.split(/\\r?\\n/);\n        if (lines.length < 2)\n            return null;\n        if (!lines[0].startsWith('SketchEl!') && lines.length >= 4 && lines[3].indexOf('V2000') >= 0) {\n            let i = strData.indexOf('SketchEl!');\n            if (i < 0)\n                return null;\n            lines = strData.substring(i).split(/r?\\n/);\n        }\n        let hdr = lines[0].match(/^SketchEl\\!\\((\\d+)\\,(\\d+)\\)/);\n        if (!hdr)\n            return null;\n        let numAtoms = parseInt(hdr[1]), numBonds = parseInt(hdr[2]);\n        if (lines.length < 2 + numAtoms + numBonds)\n            return null;\n        if (!lines[1 + numAtoms + numBonds].match(/^!End/))\n            return null;\n        for (let n = 0; n < numAtoms; n++) {\n            let bits = lines[1 + n].split(/[=,;]/);\n            let num = mol.addAtom(MoleculeStream.skUnescape(bits[0]), parseFloat(bits[1]), parseFloat(bits[2]), parseInt(bits[3]), parseInt(bits[4]));\n            let extra = [], trans = [];\n            for (let i = 5; i < bits.length; i++) {\n                let ch = bits[i].charAt(0);\n                if (bits[i].charAt(0) == 'i') { }\n                else if (bits[i].charAt(0) == 'e')\n                    mol.setAtomHExplicit(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'm')\n                    mol.setAtomIsotope(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'n')\n                    mol.setAtomMapNum(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'x')\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'y')\n                    trans.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'z') {\n                    mol.setAtomZ(num, parseFloat(bits[i].substring(1)));\n                    mol.setIs3D(true);\n                }\n                else\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n            }\n            mol.setAtomExtra(num, extra);\n            mol.setAtomTransient(num, trans);\n        }\n        for (let n = 0; n < numBonds; n++) {\n            let bits = lines[1 + numAtoms + n].split(/[=,]/);\n            let frto = bits[0].split('-');\n            let bfr = parseInt(frto[0].trim()), bto = parseInt(frto[1].trim());\n            if (bfr == bto)\n                continue;\n            let num = mol.addBond(bfr, bto, parseInt(bits[1]), parseInt(bits[2]));\n            let extra = new Array(), trans = new Array();\n            for (let i = 3; i < bits.length; i++) {\n                let ch = bits[i].charAt(0);\n                if (bits[i].charAt(0) == 'x')\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'y')\n                    trans.push(MoleculeStream.skUnescape(bits[i]));\n                else\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n            }\n            mol.setBondExtra(num, extra);\n            mol.setBondTransient(num, trans);\n        }\n        mol.keepTransient = false;\n        return mol;\n    }\n    static writeNative(mol) {\n        let ret = 'SketchEl!(' + mol.numAtoms + ',' + mol.numBonds + ')\\n';\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let el = mol.atomElement(n), x = mol.atomX(n), y = mol.atomY(n), charge = mol.atomCharge(n), unpaired = mol.atomUnpaired(n);\n            let hy = mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN ? ('e' + mol.atomHExplicit(n)) : ('i' + mol.atomHydrogens(n));\n            ret += MoleculeStream.skEscape(el) + '=' + x.toFixed(4) + ',' + y.toFixed(4) + ';' + charge + ',' + unpaired + ',' + hy;\n            if (mol.is3D())\n                ret += ',z' + mol.atomZ(n);\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL)\n                ret += ',m' + mol.atomIsotope(n);\n            if (mol.atomMapNum(n) > 0)\n                ret += ',n' + mol.atomMapNum(n);\n            ret += MoleculeStream.skEncodeExtra(mol.atomExtra(n));\n            ret += MoleculeStream.skEncodeExtra(mol.atomTransient(n));\n            ret += '\\n';\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            ret += mol.bondFrom(n) + '-' + mol.bondTo(n) + '=' + mol.bondOrder(n) + ',' + mol.bondType(n);\n            ret += MoleculeStream.skEncodeExtra(mol.bondExtra(n));\n            ret += MoleculeStream.skEncodeExtra(mol.bondTransient(n));\n            ret += '\\n';\n        }\n        ret += '!End\\n';\n        return ret;\n    }\n    static readMDLMOL(strData) {\n        let src = new MDLMOLReader(strData);\n        src.parseHeader = true;\n        src.parse();\n        return src.mol;\n    }\n    static writeMDLMOL(mol) {\n        return new MDLMOLWriter(mol).write();\n    }\n    static skUnescape(str) {\n        let ret = '', match;\n        while (match = str.match(/^(.*?)\\\\([0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])(.*)/)) {\n            ret += match[1] + String.fromCharCode(parseInt('0x' + match[2]));\n            str = match[3];\n        }\n        return ret + str;\n    }\n    static skEscape(str) {\n        let ret = '';\n        for (let n = 0; n < str.length; n++) {\n            let ch = str.charAt(n), code = str.charCodeAt(n);\n            if (code <= 32 || code > 127 || ch == '\\\\' || ch == ',' || ch == ';' || ch == '=') {\n                let hex = (code & 0xFFFF).toString(16).toUpperCase();\n                ret += '\\\\';\n                for (let i = 4 - hex.length; i > 0; i--)\n                    ret += '0';\n                ret += hex;\n            }\n            else\n                ret += ch;\n        }\n        return ret;\n    }\n    static skEncodeExtra(extra) {\n        let ret = '';\n        for (let n = 0; n < extra.length; n++)\n            ret += ',' + MoleculeStream.skEscape(extra[n]);\n        return ret;\n    }\n}\n//# sourceMappingURL=MoleculeStream.js.map","import { Box } from '../util/Geom';\nimport { deepClone } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { MoleculeStream } from './MoleculeStream';\nclass Atom {\n}\nclass Bond {\n}\nexport class Molecule {\n    constructor() {\n        this.atoms = [];\n        this.bonds = [];\n        this.hasZCoord = false;\n        this.keepTransient = false;\n        this.hasTransient = false;\n        this.graph = null;\n        this.graphBond = null;\n        this.ringID = null;\n        this.compID = null;\n        this.ring3 = null;\n        this.ring4 = null;\n        this.ring5 = null;\n        this.ring6 = null;\n        this.ring7 = null;\n    }\n    clone() {\n        let dup = new Molecule();\n        dup.atoms = deepClone(this.atoms);\n        dup.bonds = deepClone(this.bonds);\n        dup.hasZCoord = this.hasZCoord;\n        dup.keepTransient = this.keepTransient;\n        dup.hasTransient = this.hasTransient;\n        dup.graph = this.graph;\n        dup.graphBond = this.graphBond;\n        dup.ringID = this.ringID;\n        dup.compID = this.compID;\n        dup.ring3 = this.ring3;\n        dup.ring4 = this.ring4;\n        dup.ring5 = this.ring5;\n        dup.ring6 = this.ring6;\n        dup.ring7 = this.ring7;\n        return dup;\n    }\n    static fromString(strData) { return MoleculeStream.readNative(strData); }\n    toString() { return MoleculeStream.writeNative(this); }\n    append(frag) {\n        let base = this.atoms.length;\n        for (let n = 1; n <= frag.numAtoms; n++) {\n            let num = this.addAtom(frag.atomElement(n), frag.atomX(n), frag.atomY(n), frag.atomCharge(n), frag.atomUnpaired(n));\n            this.setAtomIsotope(num, frag.atomIsotope(n));\n            this.setAtomHExplicit(num, frag.atomHExplicit(n));\n            this.setAtomMapNum(num, frag.atomMapNum(n));\n            this.setAtomExtra(num, frag.atomExtra(n));\n            this.setAtomTransient(num, frag.atomTransient(n));\n        }\n        for (let n = 1; n <= frag.numBonds; n++) {\n            let num = this.addBond(frag.bondFrom(n) + base, frag.bondTo(n) + base, frag.bondOrder(n), frag.bondType(n));\n            this.setBondExtra(num, frag.bondExtra(n));\n            this.setBondTransient(num, frag.bondTransient(n));\n        }\n        this.trashTransient();\n    }\n    get numAtoms() { return this.atoms.length; }\n    getAtom(idx) {\n        if (idx < 1 || idx > this.atoms.length)\n            throw new Error(`Molecule.getAtom: index ${idx} out of range (#atoms=${this.atoms.length})`);\n        return this.atoms[idx - 1];\n    }\n    atomElement(idx) { return this.getAtom(idx).element; }\n    atomX(idx) { return this.getAtom(idx).x; }\n    atomY(idx) { return this.getAtom(idx).y; }\n    atomCharge(idx) { return this.getAtom(idx).charge; }\n    atomUnpaired(idx) { return this.getAtom(idx).unpaired; }\n    atomIsotope(idx) { return this.getAtom(idx).isotope; }\n    atomHExplicit(idx) { return this.getAtom(idx).hExplicit; }\n    atomMapNum(idx) { return this.getAtom(idx).mapNum; }\n    atomExtra(idx) { return this.getAtom(idx).extra.slice(0); }\n    atomTransient(idx) { return this.getAtom(idx).transient.slice(0); }\n    get numBonds() { return this.bonds.length; }\n    getBond(idx) {\n        if (idx < 1 || idx > this.bonds.length)\n            throw new Error(`Molecule.getBond: index ${idx} out of range (#bonds=${this.bonds.length})`);\n        return this.bonds[idx - 1];\n    }\n    bondFrom(idx) { return this.getBond(idx).from; }\n    bondTo(idx) { return this.getBond(idx).to; }\n    bondOrder(idx) { return this.getBond(idx).order; }\n    bondType(idx) { return this.getBond(idx).type; }\n    bondExtra(idx) { return this.getBond(idx).extra.slice(0); }\n    bondTransient(idx) { return this.getBond(idx).transient.slice(0); }\n    bondFromTo(idx) { let b = this.getBond(idx); return [b.from, b.to]; }\n    addAtom(element, x, y, charge = 0, unpaired = 0) {\n        let a = new Atom();\n        a.element = element;\n        a.x = x;\n        a.y = y;\n        a.charge = charge;\n        a.unpaired = unpaired;\n        a.isotope = Molecule.ISOTOPE_NATURAL;\n        a.hExplicit = Molecule.HEXPLICIT_UNKNOWN;\n        a.mapNum = 0;\n        a.extra = [];\n        a.transient = [];\n        this.atoms.push(a);\n        this.trashTransient();\n        this.trashGraph();\n        return this.atoms.length;\n    }\n    setAtomElement(idx, element) {\n        this.getAtom(idx).element = element;\n        this.trashTransient();\n    }\n    setAtomPos(idx, x, y, z) {\n        let a = this.getAtom(idx);\n        a.x = x;\n        a.y = y;\n        a.z = z == null ? 0 : z;\n        this.trashTransient();\n    }\n    setAtomX(idx, x) {\n        this.getAtom(idx).x = x;\n        this.trashTransient();\n    }\n    setAtomY(idx, y) {\n        this.getAtom(idx).y = y;\n        this.trashTransient();\n    }\n    setAtomCharge(idx, charge) {\n        this.getAtom(idx).charge = charge;\n        this.trashTransient();\n    }\n    setAtomUnpaired(idx, unpaired) {\n        this.getAtom(idx).unpaired = unpaired;\n        this.trashTransient();\n    }\n    setAtomIsotope(idx, isotope) {\n        this.getAtom(idx).isotope = isotope;\n        this.trashTransient();\n    }\n    setAtomHExplicit(idx, hExplicit) {\n        this.getAtom(idx).hExplicit = hExplicit;\n        this.trashTransient();\n    }\n    setAtomMapNum(idx, mapNum) {\n        this.getAtom(idx).mapNum = mapNum;\n        this.trashTransient();\n    }\n    setAtomExtra(idx, extra) {\n        this.getAtom(idx).extra = extra.slice(0);\n    }\n    setAtomTransient(idx, transi) {\n        this.getAtom(idx).transient = transi.slice(0);\n        if (transi.length > 0)\n            this.hasTransient = true;\n    }\n    swapAtoms(a1, a2) {\n        let a = this.atoms[a1 - 1];\n        this.atoms[a1 - 1] = this.atoms[a2 - 1];\n        this.atoms[a2 - 1] = a;\n        for (let n = 0; n < this.bonds.length; n++) {\n            let b = this.bonds[n];\n            if (b.from == a2)\n                b.from = a1;\n            else if (b.from == a1)\n                b.from = a2;\n            if (b.to == a2)\n                b.to = a1;\n            else if (b.to == a1)\n                b.to = a2;\n        }\n        this.trashGraph();\n    }\n    addBond(from, to, order, type = Molecule.BONDTYPE_NORMAL) {\n        let b = new Bond();\n        b.from = from;\n        b.to = to;\n        b.order = order;\n        b.type = type;\n        b.extra = [];\n        b.transient = [];\n        this.bonds.push(b);\n        this.trashTransient();\n        this.trashGraph();\n        return this.bonds.length;\n    }\n    setBondFrom(idx, bfr) {\n        this.getBond(idx).from = bfr;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondTo(idx, to) {\n        this.getBond(idx).to = to;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondFromTo(idx, bfr, bto) {\n        this.getBond(idx).from = bfr;\n        this.getBond(idx).to = bto;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondOrder(idx, order) {\n        this.getBond(idx).order = order;\n        this.trashTransient();\n    }\n    setBondType(idx, type) {\n        this.getBond(idx).type = type;\n        this.trashTransient();\n    }\n    setBondExtra(idx, extra) {\n        this.getBond(idx).extra = extra.slice(0);\n    }\n    setBondTransient(idx, transi) {\n        this.getBond(idx).transient = transi.slice(0);\n        if (transi.length > 0)\n            this.hasTransient = true;\n    }\n    deleteAtomAndBonds(idx) {\n        for (let n = this.numBonds; n >= 1; n--) {\n            if (this.bondFrom(n) == idx || this.bondTo(n) == idx)\n                this.deleteBond(n);\n            else {\n                if (this.bondFrom(n) > idx)\n                    this.setBondFrom(n, this.bondFrom(n) - 1);\n                if (this.bondTo(n) > idx)\n                    this.setBondTo(n, this.bondTo(n) - 1);\n            }\n        }\n        this.atoms.splice(idx - 1, 1);\n        this.trashTransient();\n        this.trashGraph();\n    }\n    deleteBond(idx) {\n        this.bonds.splice(idx - 1, 1);\n        this.trashTransient();\n        this.trashGraph();\n    }\n    atomHydrogens(idx) {\n        let hy = this.atomHExplicit(idx);\n        if (hy != Molecule.HEXPLICIT_UNKNOWN)\n            return hy;\n        for (let n = 0; n < Molecule.HYVALENCE_EL.length; n++)\n            if (Molecule.HYVALENCE_EL[n] == this.atomElement(idx)) {\n                hy = Molecule.HYVALENCE_VAL[n];\n                break;\n            }\n        if (hy == Molecule.HEXPLICIT_UNKNOWN)\n            return 0;\n        let ch = this.atomCharge(idx);\n        if (this.atomElement(idx) == 'C')\n            ch = -Math.abs(ch);\n        hy += ch - this.atomUnpaired(idx);\n        let adjBonds = this.atomAdjBonds(idx);\n        for (let n = 0; n < adjBonds.length; n++)\n            hy -= this.bondOrder(adjBonds[n]);\n        return hy < 0 ? 0 : hy;\n    }\n    findBond(a1, a2) {\n        for (let n = 1; n <= this.numBonds; n++) {\n            let b1 = this.bondFrom(n), b2 = this.bondTo(n);\n            if ((a1 == b1 && a2 == b2) || (a1 == b2 && a2 == b1))\n                return n;\n        }\n        return 0;\n    }\n    bondOther(idx, ref) {\n        let b1 = this.bondFrom(idx), b2 = this.bondTo(idx);\n        if (b1 == ref)\n            return b2;\n        if (b2 == ref)\n            return b1;\n        return 0;\n    }\n    atomExplicit(idx) {\n        let a = this.atoms[idx - 1];\n        if (a.isotope != Molecule.ISOTOPE_NATURAL)\n            return true;\n        if (a.element != 'C' || a.charge != 0 || a.unpaired != 0)\n            return true;\n        if (this.atomAdjCount(idx) == 0)\n            return true;\n        return false;\n    }\n    atomRingBlock(idx) {\n        if (this.graph == null)\n            this.buildGraph();\n        if (this.ringID == null)\n            this.buildRingID();\n        return this.ringID[idx - 1];\n    }\n    bondInRing(idx) {\n        let r1 = this.atomRingBlock(this.bondFrom(idx)), r2 = this.atomRingBlock(this.bondTo(idx));\n        return r1 > 0 && r1 == r2;\n    }\n    atomConnComp(idx) {\n        if (this.graph == null)\n            this.buildGraph();\n        if (this.compID == null)\n            this.buildConnComp();\n        return this.compID[idx - 1];\n    }\n    atomAdjCount(idx) {\n        this.buildGraph();\n        return this.graph[idx - 1].length;\n    }\n    atomAdjList(idx) {\n        this.buildGraph();\n        let adj = this.graph[idx - 1].slice(0);\n        for (let n = adj.length - 1; n >= 0; n--)\n            adj[n]++;\n        return adj;\n    }\n    atomAdjBonds(idx) {\n        this.buildGraph();\n        return this.graphBond[idx - 1].slice(0);\n    }\n    findRingsOfSize(size) {\n        let rings = null;\n        if (size == 3 && this.ring3 != null)\n            rings = this.ring3;\n        if (size == 4 && this.ring4 != null)\n            rings = this.ring4;\n        if (size == 5 && this.ring5 != null)\n            rings = this.ring5;\n        if (size == 6 && this.ring6 != null)\n            rings = this.ring6;\n        if (size == 7 && this.ring7 != null)\n            rings = this.ring7;\n        if (rings == null) {\n            if (this.graph == null)\n                this.buildGraph();\n            if (this.ringID == null)\n                this.buildRingID();\n            rings = [];\n            for (let n = 1; n <= this.atoms.length; n++) {\n                if (this.ringID[n - 1] > 0) {\n                    let path = Vec.numberArray(0, size);\n                    path[0] = n;\n                    this.recursiveRingFind(path, 1, size, this.ringID[n - 1], rings);\n                }\n            }\n            if (size == 3)\n                this.ring3 = rings;\n            if (size == 4)\n                this.ring4 = rings;\n            if (size == 5)\n                this.ring5 = rings;\n            if (size == 6)\n                this.ring6 = rings;\n            if (size == 7)\n                this.ring7 = rings;\n        }\n        let ret = [];\n        for (let n = 0; n < rings.length; n++)\n            ret.push(rings[n].slice(0));\n        return ret;\n    }\n    boundary() {\n        if (this.atoms.length == 0)\n            return Box.zero();\n        let x1 = this.atoms[0].x, x2 = x1;\n        let y1 = this.atoms[0].y, y2 = y1;\n        for (let n = 1; n < this.atoms.length; n++) {\n            x1 = Math.min(x1, this.atoms[n].x);\n            y1 = Math.min(y1, this.atoms[n].y);\n            x2 = Math.max(x2, this.atoms[n].x);\n            y2 = Math.max(y2, this.atoms[n].y);\n        }\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    atomicNumber(idx) {\n        return Molecule.elementAtomicNumber(this.atomElement(idx));\n    }\n    static elementAtomicNumber(element) {\n        return Math.max(0, Chemistry.ELEMENTS.indexOf(element));\n    }\n    is3D() { return this.hasZCoord; }\n    setIs3D(v) { this.hasZCoord = v; }\n    atomZ(idx) { return this.getAtom(idx).z; }\n    setAtomZ(idx, z) { this.getAtom(idx).z = z; }\n    compareTo(other) {\n        if (other == null || other.numAtoms == 0)\n            return this.numAtoms == 0 ? 0 : 1;\n        if (this.numAtoms < other.numAtoms)\n            return -1;\n        if (this.numAtoms > other.numAtoms)\n            return 1;\n        if (this.numBonds < other.numBonds)\n            return -1;\n        if (this.numBonds > other.numBonds)\n            return 1;\n        for (let n = 1; n <= this.numAtoms; n++) {\n            if (this.atomElement(n) < other.atomElement(n))\n                return -1;\n            if (this.atomElement(n) > other.atomElement(n))\n                return 1;\n            if (this.atomX(n) < other.atomX(n))\n                return -1;\n            if (this.atomX(n) > other.atomX(n))\n                return 1;\n            if (this.atomY(n) < other.atomY(n))\n                return -1;\n            if (this.atomY(n) > other.atomY(n))\n                return 1;\n            if (this.atomCharge(n) < other.atomCharge(n))\n                return -1;\n            if (this.atomCharge(n) > other.atomCharge(n))\n                return 1;\n            if (this.atomUnpaired(n) < other.atomUnpaired(n))\n                return -1;\n            if (this.atomUnpaired(n) > other.atomUnpaired(n))\n                return 1;\n            if (this.atomHExplicit(n) < other.atomHExplicit(n))\n                return -1;\n            if (this.atomHExplicit(n) > other.atomHExplicit(n))\n                return 1;\n            if (this.atomIsotope(n) < other.atomIsotope(n))\n                return -1;\n            if (this.atomIsotope(n) > other.atomIsotope(n))\n                return 1;\n            if (this.atomMapNum(n) < other.atomMapNum(n))\n                return -1;\n            if (this.atomMapNum(n) > other.atomMapNum(n))\n                return 1;\n            let tx1 = this.atomExtra(n), tx2 = other.atomExtra(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n            tx1 = this.atomTransient(n);\n            tx2 = other.atomTransient(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n        }\n        for (let n = 1; n <= this.numBonds; n++) {\n            if (this.bondFrom(n) < other.bondFrom(n))\n                return -1;\n            if (this.bondFrom(n) > other.bondFrom(n))\n                return 1;\n            if (this.bondTo(n) < other.bondTo(n))\n                return -1;\n            if (this.bondTo(n) > other.bondTo(n))\n                return 1;\n            if (this.bondOrder(n) < other.bondOrder(n))\n                return -1;\n            if (this.bondOrder(n) > other.bondOrder(n))\n                return 1;\n            if (this.bondType(n) < other.bondType(n))\n                return -1;\n            if (this.bondType(n) > other.bondType(n))\n                return 1;\n            let tx1 = this.bondExtra(n), tx2 = other.bondExtra(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n            tx1 = this.bondTransient(n);\n            tx2 = other.bondTransient(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n        }\n        return 0;\n    }\n    trashTransient() {\n        if (this.keepTransient || !this.hasTransient)\n            return;\n        for (let a of this.atoms)\n            a.transient = [];\n        for (let b of this.bonds)\n            b.transient = [];\n        this.hasTransient = false;\n    }\n    appendAtomExtra(atom, extra) {\n        this.getAtom(atom).extra.push(extra);\n    }\n    appendAtomTransient(atom, trans) {\n        this.getAtom(atom).transient.push(trans);\n    }\n    appendBondExtra(bond, extra) {\n        this.getBond(bond).extra.push(extra);\n    }\n    appendBondTransient(bond, trans) {\n        this.getBond(bond).transient.push(trans);\n    }\n    trashGraph() {\n        this.graph = null;\n        this.graphBond = null;\n        this.ringID = null;\n        this.compID = null;\n        this.ring3 = null;\n        this.ring4 = null;\n        this.ring5 = null;\n        this.ring6 = null;\n        this.ring7 = null;\n    }\n    buildGraph() {\n        if (this.graph != null && this.graphBond != null)\n            return;\n        let graph = [], graphBond = [];\n        let na = this.numAtoms, nb = this.numBonds;\n        for (let n = 0; n < na; n++) {\n            graph.push([]);\n            graphBond.push([]);\n        }\n        for (let n = 1; n <= nb; n++) {\n            let b = this.getBond(n);\n            graph[b.from - 1].push(b.to - 1);\n            graph[b.to - 1].push(b.from - 1);\n            graphBond[b.from - 1].push(n);\n            graphBond[b.to - 1].push(n);\n        }\n        this.graph = graph;\n        this.graphBond = graphBond;\n    }\n    buildConnComp() {\n        const numAtoms = this.atoms.length;\n        this.compID = Vec.numberArray(0, numAtoms);\n        for (let n = 0; n < numAtoms; n++)\n            this.compID[n] = 0;\n        let comp = 1;\n        this.compID[0] = comp;\n        while (true) {\n            let anything = false;\n            for (let n = 0; n < numAtoms; n++)\n                if (this.compID[n] == comp) {\n                    for (let i = 0; i < this.graph[n].length; i++) {\n                        if (this.compID[this.graph[n][i]] == 0) {\n                            this.compID[this.graph[n][i]] = comp;\n                            anything = true;\n                        }\n                    }\n                }\n            if (!anything) {\n                for (let n = 0; n < numAtoms; n++) {\n                    if (this.compID[n] == 0) {\n                        this.compID[n] = ++comp;\n                        anything = true;\n                        break;\n                    }\n                }\n                if (!anything)\n                    break;\n            }\n        }\n    }\n    buildRingID() {\n        const numAtoms = this.atoms.length;\n        this.ringID = Vec.numberArray(0, numAtoms);\n        if (numAtoms == 0)\n            return;\n        let visited = Vec.booleanArray(false, numAtoms);\n        for (let n = 0; n < numAtoms; n++) {\n            this.ringID[n] = 0;\n            visited[n] = false;\n        }\n        let path = Vec.numberArray(0, numAtoms + 1), plen = 0, numVisited = 0;\n        while (true) {\n            let last, current;\n            if (plen == 0) {\n                last = -1;\n                for (current = 0; visited[current]; current++) { }\n            }\n            else {\n                last = path[plen - 1];\n                current = -1;\n                for (let n = 0; n < this.graph[last].length; n++) {\n                    if (!visited[this.graph[last][n]]) {\n                        current = this.graph[last][n];\n                        break;\n                    }\n                }\n            }\n            if (current >= 0 && plen >= 2) {\n                let back = path[plen - 1];\n                for (let n = 0; n < this.graph[current].length; n++) {\n                    let join = this.graph[current][n];\n                    if (join != back && visited[join]) {\n                        path[plen] = current;\n                        for (let i = plen; i == plen || path[i + 1] != join; i--) {\n                            let id = this.ringID[path[i]];\n                            if (id == 0)\n                                this.ringID[path[i]] = last;\n                            else if (id != last) {\n                                for (let j = 0; j < numAtoms; j++)\n                                    if (this.ringID[j] == id)\n                                        this.ringID[j] = last;\n                            }\n                        }\n                    }\n                }\n            }\n            if (current >= 0) {\n                visited[current] = true;\n                path[plen++] = current;\n                numVisited++;\n            }\n            else {\n                plen--;\n            }\n            if (numVisited == numAtoms)\n                break;\n        }\n        let nextID = 0;\n        for (let i = 0; i < numAtoms; i++) {\n            if (this.ringID[i] > 0) {\n                nextID--;\n                for (let j = numAtoms - 1; j >= i; j--)\n                    if (this.ringID[j] == this.ringID[i])\n                        this.ringID[j] = nextID;\n            }\n        }\n        for (let i = 0; i < numAtoms; i++)\n            this.ringID[i] = -this.ringID[i];\n    }\n    recursiveRingFind(path, psize, capacity, rblk, rings) {\n        const { graph } = this;\n        if (psize < capacity) {\n            let last = path[psize - 1];\n            for (let n = 0; n < graph[last - 1].length; n++) {\n                let adj = graph[last - 1][n] + 1;\n                if (this.ringID[adj - 1] != rblk)\n                    continue;\n                let fnd = false;\n                for (let i = 0; i < psize; i++) {\n                    if (path[i] == adj) {\n                        fnd = true;\n                        break;\n                    }\n                }\n                if (!fnd) {\n                    let newPath = path.slice(0);\n                    newPath[psize] = adj;\n                    this.recursiveRingFind(newPath, psize + 1, capacity, rblk, rings);\n                }\n            }\n            return;\n        }\n        let last = path[psize - 1];\n        let fnd = false;\n        for (let n = 0; n < graph[last - 1].length; n++) {\n            if (graph[last - 1][n] + 1 == path[0]) {\n                fnd = true;\n                break;\n            }\n        }\n        if (!fnd)\n            return;\n        for (let n = 0; n < path.length; n++) {\n            let count = 0, p = path[n] - 1;\n            for (let i = 0; i < graph[p].length; i++)\n                if (path.indexOf(graph[p][i] + 1) >= 0)\n                    count++;\n            if (count != 2)\n                return;\n        }\n        let first = 0;\n        for (let n = 1; n < psize; n++)\n            if (path[n] < path[first])\n                first = n;\n        let fm = (first - 1 + psize) % psize, fp = (first + 1) % psize;\n        let flip = path[fm] < path[fp];\n        if (first != 0 || flip) {\n            let newPath = Vec.numberArray(0, psize);\n            for (let n = 0; n < psize; n++)\n                newPath[n] = path[(first + (flip ? psize - n : n)) % psize];\n            path = newPath;\n        }\n        for (let n = 0; n < rings.length; n++) {\n            let look = rings[n];\n            let same = true;\n            for (let i = 0; i < psize; i++) {\n                if (look[i] != path[i]) {\n                    same = false;\n                    break;\n                }\n            }\n            if (same)\n                return;\n        }\n        rings.push(path);\n    }\n}\nMolecule.IDEALBOND = 1.5;\nMolecule.HEXPLICIT_UNKNOWN = -1;\nMolecule.ISOTOPE_NATURAL = 0;\nMolecule.BONDTYPE_NORMAL = 0;\nMolecule.BONDTYPE_INCLINED = 1;\nMolecule.BONDTYPE_DECLINED = 2;\nMolecule.BONDTYPE_UNKNOWN = 3;\nMolecule.HYVALENCE_EL = ['C', 'N', 'O', 'S', 'P'];\nMolecule.HYVALENCE_VAL = [4, 3, 2, 2, 3];\nMolecule.PREFIX_EXTRA = 'x';\nMolecule.PREFIX_TRANSIENT = 'y';\n//# sourceMappingURL=Molecule.js.map","import { angleDiff, angleNorm, DEGRAD, norm2_xy, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Graph } from './Graph';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nexport class CoordUtil {\n    static atomAtPoint(mol, x, y, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.OVERLAP_THRESHOLD;\n        const tolsq = tolerance * tolerance;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y) < tolsq)\n                return n;\n        return 0;\n    }\n    static sketchEquivalent(mol1, mol2, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.DEFAULT_EQUIV_TOLERANCE;\n        const na = mol1.numAtoms, nb = mol1.numBonds;\n        if (na != mol2.numAtoms || nb != mol2.numBonds)\n            return false;\n        const tolsq = tolerance * tolerance;\n        let box1 = mol1.boundary(), box2 = mol2.boundary();\n        if (Math.abs(box1.minX() - box2.minX()) > tolerance)\n            return false;\n        if (Math.abs(box1.minY() - box2.minY()) > tolerance)\n            return false;\n        if (Math.abs(box1.maxX() - box2.maxX()) > tolerance)\n            return false;\n        if (Math.abs(box1.maxY() - box2.maxY()) > tolerance)\n            return false;\n        let mx1 = MolUtil.arrayAtomX(mol1), my1 = MolUtil.arrayAtomY(mol1);\n        let mx2 = MolUtil.arrayAtomX(mol2), my2 = MolUtil.arrayAtomY(mol2);\n        let map = Vec.numberArray(0, na);\n        let mask = Vec.booleanArray(false, na);\n        for (let i = 0; i < na; i++) {\n            let j = -1;\n            if (norm2_xy(mx1[i] - mx2[i], my1[i] - my2[i]) < tolsq)\n                j = i;\n            if (j < 0) {\n                let bestdsq = Number.MAX_VALUE;\n                for (let n = 0; n < na; n++)\n                    if (!mask[n]) {\n                        let dsq = norm2_xy(mx1[i] - mx2[n], my1[i] - my2[n]);\n                        if (dsq < bestdsq) {\n                            bestdsq = dsq;\n                            j = n;\n                        }\n                    }\n                if (j < 0 || bestdsq > tolsq)\n                    return false;\n            }\n            map[i] = j + 1;\n            mask[j] = true;\n            if (mol1.atomElement(i + 1) != mol2.atomElement(j + 1))\n                return false;\n            if (mol1.atomCharge(i + 1) != mol2.atomCharge(j + 1))\n                return false;\n            if (mol1.atomUnpaired(i + 1) != mol2.atomUnpaired(j + 1))\n                return false;\n            if (mol1.atomHExplicit(i + 1) != mol2.atomHExplicit(j + 1) &&\n                mol1.atomHExplicit(i + 1) != Molecule.HEXPLICIT_UNKNOWN &&\n                mol2.atomHExplicit(j + 1) != Molecule.HEXPLICIT_UNKNOWN)\n                return false;\n        }\n        for (let i = 1; i <= nb; i++) {\n            let i1 = mol1.bondFrom(i), i2 = mol1.bondTo(i), j1 = map[i1 - 1], j2 = map[i2 - 1];\n            let j = mol2.findBond(j1, j2);\n            if (j == 0)\n                return false;\n            if (mol1.bondOrder(i) != mol2.bondOrder(j) || mol1.bondType(i) != mol2.bondType(j))\n                return false;\n            if (mol2.bondFrom(j) == j1 && mol2.bondTo(j) == j2) { }\n            else if (mol2.bondType(j) != Molecule.BONDTYPE_INCLINED &&\n                mol2.bondType(j) != Molecule.BONDTYPE_DECLINED &&\n                mol2.bondFrom(j) == j2 && mol2.bondTo(j) == j1) { }\n            else\n                return false;\n        }\n        return true;\n    }\n    static sketchMappable(mol1, mol2, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.DEFAULT_EQUIV_TOLERANCE;\n        let box1 = mol1.boundary(), box2 = mol2.boundary();\n        let dx = box1.minX() - box2.minX(), dy = box1.minY() - box2.minY();\n        if (Math.abs(dx) > tolerance * 0.1 || Math.abs(dy) > tolerance * 0.1) {\n            mol2 = mol2.clone();\n            for (let n = 1; n <= mol2.numAtoms; n++)\n                mol2.setAtomPos(n, mol2.atomX(n) + dx, mol2.atomY(n) + dy);\n        }\n        return CoordUtil.sketchEquivalent(mol1, mol2, tolerance);\n    }\n    static atomBondAngles(mol, atom, adj) {\n        if (adj == null)\n            adj = mol.atomAdjList(atom);\n        let bndang = [];\n        let cx = mol.atomX(atom), cy = mol.atomY(atom);\n        for (let a of adj)\n            bndang.push(Math.atan2(mol.atomY(a) - cy, mol.atomX(a) - cx));\n        return bndang;\n    }\n    static overlapsAtom(mol, x, y, tol) {\n        const tolsq = tol * tol;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y) < tolsq)\n                return true;\n        return false;\n    }\n    static overlappingAtomMask(mol, thresh) {\n        if (thresh == null)\n            thresh = CoordUtil.OVERLAP_THRESHOLD;\n        const sz = mol.numAtoms;\n        let box = mol.boundary();\n        let p1, p2;\n        if (box.w > box.h) {\n            p1 = MolUtil.arrayAtomX(mol);\n            p2 = MolUtil.arrayAtomY(mol);\n        }\n        else {\n            p1 = MolUtil.arrayAtomY(mol);\n            p2 = MolUtil.arrayAtomX(mol);\n        }\n        let omask = Vec.booleanArray(false, sz);\n        let idx = Vec.idxSort(p1);\n        const threshSQ = thresh * thresh;\n        for (let i = 1; i < sz - 1; i++) {\n            for (let j = i - 1; j >= 0; j--) {\n                let d1 = p1[idx[i]] - p1[idx[j]];\n                if (d1 > thresh)\n                    break;\n                if (norm2_xy(d1, p2[idx[i]] - p2[idx[j]]) < threshSQ) {\n                    omask[idx[i]] = true;\n                    omask[idx[j]] = true;\n                }\n            }\n            for (let j = i + 1; j < sz; j++) {\n                let d1 = p1[idx[j]] - p1[idx[i]];\n                if (d1 > thresh)\n                    break;\n                if (norm2_xy(d1, p2[idx[j]] - p2[idx[i]]) < threshSQ) {\n                    omask[idx[i]] = true;\n                    omask[idx[j]] = true;\n                }\n            }\n        }\n        return omask;\n    }\n    static overlappingAtomList(mol, thresh) {\n        if (thresh == null)\n            thresh = CoordUtil.OVERLAP_THRESHOLD;\n        return Vec.add(Vec.maskIdx(CoordUtil.overlappingAtomMask(mol, thresh)), 1);\n    }\n    static congestionPoint(mol, x, y, approach) {\n        if (approach == null)\n            approach = 1E-5;\n        let score = 0;\n        let na = mol.numAtoms;\n        for (let n = 1; n <= na; n++)\n            score += 1.0 / (approach + norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y));\n        return score;\n    }\n    static congestionMolecule(mol, approach) {\n        if (approach == null)\n            approach = 1E-5;\n        let score = 0;\n        const na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        for (let i = 0; i < na - 1; i++)\n            for (let j = i + 1; j < na; j++)\n                score += 1.0 / (approach + norm2_xy(mx[i] - mx[j], my[i] - my[j]));\n        return score;\n    }\n    static translateMolecule(mol, ox, oy) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            mol.setAtomPos(n, mol.atomX(n) + ox, mol.atomY(n) + oy);\n    }\n    static rotateMolecule(mol, theta, cx, cy) {\n        if (cx == null || cy == null) {\n            let box = mol.boundary();\n            cx = box.midX();\n            cy = box.midY();\n        }\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n            mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n        }\n    }\n    static rotateBond(mol, centre, atom, theta) {\n        theta = angleNorm(theta);\n        if (Math.abs(theta) < 0.1 * DEGRAD)\n            return;\n        let g = Graph.fromMolecule(mol);\n        g.isolateNode(centre - 1);\n        let cc = g.calculateComponents();\n        let cx = mol.atomX(centre), cy = mol.atomY(centre);\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (cc[n - 1] == cc[atom - 1]) {\n                let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n                mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n            }\n    }\n    static rotateAtoms(mol, mask, cx, cy, theta) {\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n                mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n            }\n    }\n    static angleNeighbours(mol, atom) {\n        let adj = mol.atomAdjList(atom);\n        if (adj.length <= 1)\n            return null;\n        let th = [];\n        for (let n = 0; n < adj.length; n++)\n            th.push(Math.atan2(mol.atomY(adj[n]) - mol.atomY(atom), mol.atomX(adj[n]) - mol.atomX(atom)));\n        if (adj.length == 2) {\n            if (angleDiff(th[1], th[0]) > 0)\n                return adj;\n            return [adj[1], adj[0]];\n        }\n        let idx = Vec.idxSort(th);\n        return Vec.idxGet(adj, idx);\n    }\n    static mergeAtoms(mol, oldN, newN) {\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondFrom(n) == oldN)\n                mol.setBondFrom(n, newN);\n            if (mol.bondTo(n) == oldN)\n                mol.setBondTo(n, newN);\n        }\n        mol.deleteAtomAndBonds(oldN);\n    }\n    static normaliseBondDistances(mol) {\n        const nb = mol.numBonds;\n        if (nb == 0)\n            return;\n        let dsq = [];\n        for (let n = 1; n <= nb; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            dsq.push(norm2_xy(mol.atomX(bto) - mol.atomX(bfr), mol.atomY(bto) - mol.atomY(bfr)));\n        }\n        Vec.sort(dsq);\n        let median = (nb & 1) == 1 ? Math.sqrt(dsq[nb >> 1]) : 0.5 * (Math.sqrt(dsq[nb >> 1]) + Math.sqrt(dsq[(nb >> 1) - 1]));\n        if (median < 0.1 || (median > Molecule.IDEALBOND * 0.9 && median < Molecule.IDEALBOND * 1.1))\n            return;\n        let box = mol.boundary();\n        let cx = box.midX(), cy = box.midY();\n        let scale = Molecule.IDEALBOND / median;\n        for (let n = mol.numAtoms; n >= 1; n--) {\n            let x = (mol.atomX(n) - cx) * scale + cx;\n            let y = (mol.atomY(n) - cy) * scale + cy;\n            mol.setAtomPos(n, x, y);\n        }\n    }\n    static centreMolecule(mol) {\n        if (MolUtil.isBlank(mol))\n            return;\n        let x = MolUtil.arrayAtomX(mol), y = MolUtil.arrayAtomY(mol);\n        let sz = x.length;\n        let invsz = 1.0 / sz;\n        let meanX = Vec.sum(x) * invsz, meanY = Vec.sum(y) * invsz;\n        let closest = Number.POSITIVE_INFINITY;\n        let deltaX = 0, deltaY = 0;\n        for (let n = 0; n < sz; n++) {\n            let dsq = norm2_xy(x[n] - meanX, y[n] - meanY);\n            if (dsq < closest) {\n                deltaX = -x[n];\n                deltaY = -y[n];\n                closest = dsq;\n            }\n        }\n        for (let n = 0; n < sz; n++)\n            mol.setAtomPos(n + 1, x[n] + deltaX, y[n] + deltaY);\n    }\n    static mirrorImage(mol) {\n        mol = mol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            mol.setAtomX(n, -mol.atomX(n));\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                mol.setBondType(n, Molecule.BONDTYPE_INCLINED);\n            else if (mol.bondType(n) == Molecule.BONDTYPE_INCLINED)\n                mol.setBondType(n, Molecule.BONDTYPE_DECLINED);\n        }\n        return mol;\n    }\n    static alignOrientFlip(mol1, idx1, mol2, idx2) {\n        if (idx1.length < 2 || idx1.length != idx2.length)\n            throw 'Invalid mapping indices.';\n        let x0 = mol1.atomX(idx1[0]), y0 = mol1.atomY(idx1[0]);\n        CoordUtil.translateMolecule(mol2, x0 - mol2.atomX(idx2[0]), y0 - mol2.atomY(idx2[0]));\n        const sz = idx1.length - 1;\n        let th1 = [], th2 = [];\n        let deltaA = 0, deltaB = 0;\n        for (let n = 0; n < sz; n++) {\n            th1.push(Math.atan2(mol1.atomY(idx1[n + 1]) - y0, mol1.atomX(idx1[n + 1]) - x0));\n            th2.push(Math.atan2(mol2.atomY(idx2[n + 1]) - y0, mol2.atomX(idx2[n + 1]) - x0));\n            let dthA = angleDiff(th1[n], th2[n]), dthB = angleDiff(th1[n], -th2[n]);\n            if (dthA < -175 * DEGRAD && deltaA > 0)\n                dthA += TWOPI;\n            else if (dthA > 175 * DEGRAD && deltaA < 0)\n                dthA -= TWOPI;\n            if (dthB < -175 * DEGRAD && deltaB > 0)\n                dthB += TWOPI;\n            else if (dthB > 175 * DEGRAD && deltaB < 0)\n                dthB -= TWOPI;\n            deltaA += dthA;\n            deltaB += dthB;\n        }\n        if (sz > 1) {\n            let inv = 1.0 / sz;\n            deltaA *= inv;\n            deltaB *= inv;\n        }\n        let scoreA = 0, scoreB = 0;\n        for (let n = 0; n < sz; n++) {\n            scoreA += Math.abs(angleDiff(th1[n], th2[n] + deltaA));\n            scoreB += Math.abs(angleDiff(th1[n], -th2[n] + deltaB));\n        }\n        if (scoreB < scoreA) {\n            for (let n = 1; n <= mol2.numAtoms; n++)\n                mol2.setAtomY(n, 2 * y0 - mol2.atomY(n));\n            for (let n = 1; n <= mol2.numBonds; n++) {\n                if (mol2.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                    mol2.setBondType(n, Molecule.BONDTYPE_INCLINED);\n                else if (mol2.bondType(n) == Molecule.BONDTYPE_INCLINED)\n                    mol2.setBondType(n, Molecule.BONDTYPE_DECLINED);\n            }\n            CoordUtil.rotateMolecule(mol2, x0, y0, deltaB);\n        }\n        else\n            CoordUtil.rotateMolecule(mol2, x0, y0, deltaA);\n    }\n    static atomIsWeirdLinear(mol, idx) {\n        let bonds = mol.atomAdjBonds(idx);\n        if (bonds.length != 2)\n            return false;\n        for (let n = 0; n < bonds.length; n++)\n            if (mol.bondOrder(bonds[n]) == 3)\n                return false;\n        let adj = mol.atomAdjList(idx);\n        let th1 = Math.atan2(mol.atomY(adj[0]) - mol.atomY(idx), mol.atomX(adj[0]) - mol.atomX(idx));\n        let th2 = Math.atan2(mol.atomY(adj[1]) - mol.atomY(idx), mol.atomX(adj[1]) - mol.atomX(idx));\n        return Math.abs(angleDiff(th1, th2)) >= 175 * DEGRAD;\n    }\n}\nCoordUtil.OVERLAP_THRESHOLD = 0.2;\nCoordUtil.OVERLAP_THRESHOLD_SQ = CoordUtil.OVERLAP_THRESHOLD * CoordUtil.OVERLAP_THRESHOLD;\nCoordUtil.DEFAULT_EQUIV_TOLERANCE = 0.2;\n//# sourceMappingURL=CoordUtil.js.map","import { GeomUtil } from '../util/Geom';\nimport { angleDiff, angleDiffPos, angleNorm, DEGRAD, norm2_xy, norm_xy, sortAngles, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { CoordUtil } from './CoordUtil';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nexport var Geometry;\n(function (Geometry) {\n    Geometry[Geometry[\"Linear\"] = 0] = \"Linear\";\n    Geometry[Geometry[\"Bent\"] = 1] = \"Bent\";\n    Geometry[Geometry[\"Trigonal\"] = 2] = \"Trigonal\";\n    Geometry[Geometry[\"Tetra1\"] = 3] = \"Tetra1\";\n    Geometry[Geometry[\"Tetra2\"] = 4] = \"Tetra2\";\n    Geometry[Geometry[\"SqPlan\"] = 5] = \"SqPlan\";\n    Geometry[Geometry[\"BasePyram\"] = 6] = \"BasePyram\";\n    Geometry[Geometry[\"TrigBip\"] = 7] = \"TrigBip\";\n    Geometry[Geometry[\"Octa1\"] = 8] = \"Octa1\";\n    Geometry[Geometry[\"Octa2\"] = 9] = \"Octa2\";\n})(Geometry || (Geometry = {}));\nexport class SketchUtil {\n    static placeNewAtom(mol, el) {\n        let box = mol.boundary();\n        let x = box.maxX() + Molecule.IDEALBOND, y = box.maxY();\n        return mol.addAtom(el, x, y);\n    }\n    static placeNewFragment(mol, frag) {\n        if (frag.numAtoms == 0)\n            return;\n        let dirX = [1, 0, -1, 1, -1, 1, 0, -1], dirY = [1, 1, 1, 0, 0, -1, -1, -1];\n        let dx = Vec.numberArray(0, 8), dy = Vec.numberArray(0, 8), score = Vec.numberArray(0, 8);\n        let mbox = mol.boundary(), fbox = frag.boundary();\n        for (let n = 0; n < 8; n++) {\n            let vx = dirX[n], vy = dirY[n];\n            if (n == 0 || n == 3 || n == 5)\n                dx[n] = mbox.minX() - fbox.maxX();\n            else if (n == 2 || n == 4 || n == 7)\n                dx[n] = mbox.maxX() - fbox.minX();\n            else\n                dx[n] = 0.5 * (mbox.minX() + mbox.maxX() - fbox.minX() - fbox.maxX());\n            if (n == 5 || n == 6 || n == 7)\n                dy[n] = mbox.minY() - fbox.maxY();\n            else if (n == 0 || n == 1 || n == 2)\n                dy[n] = mbox.maxY() - fbox.minY();\n            else\n                dy[n] = 0.5 * (mbox.minY() + mbox.maxY() - fbox.minY() - fbox.maxY());\n            dx[n] -= vx;\n            dy[n] -= vy;\n            score[n] = SketchUtil.fragPosScore(mol, frag, dx[n], dy[n]);\n            vx *= 0.25;\n            vy *= 0.25;\n            for (let iter = 100; iter > 0; iter--) {\n                let iscore = SketchUtil.fragPosScore(mol, frag, dx[n] + vx, dy[n] + vy);\n                if (iscore <= score[n])\n                    break;\n                score[n] = iscore;\n                dx[n] += vx;\n                dy[n] += vy;\n            }\n            for (let iter = 100; iter > 0; iter--)\n                for (let d = 0; d < 8; d++) {\n                    vx = dirX[d] * 0.1;\n                    vy = dirY[d] * 0.1;\n                    let iscore = SketchUtil.fragPosScore(mol, frag, dx[n] + vx, dy[n] + vy);\n                    if (iscore <= score[n])\n                        break;\n                    score[n] = iscore;\n                    dx[n] += vx;\n                    dy[n] += vy;\n                }\n        }\n        let best = 0;\n        for (let n = 1; n < 8; n++)\n            if (score[n] > score[best])\n                best = n;\n        frag = frag.clone();\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomPos(n, frag.atomX(n) + dx[best], frag.atomY(n) + dy[best]);\n        mol.append(frag);\n    }\n    static fragPosScore(mol, frag, dx, dy) {\n        let score = 0;\n        for (let i = 1; i <= mol.numAtoms; i++)\n            for (let j = 1; j <= frag.numAtoms; j++) {\n                let ox = frag.atomX(j) + dx - mol.atomX(i), oy = frag.atomY(j) + dy - mol.atomY(i);\n                let dist2 = ox * ox + oy * oy;\n                if (dist2 < 1)\n                    return 0;\n                score += 1 / dist2;\n            }\n        let mbox = mol.boundary(), fbox = frag.boundary();\n        let minX = Math.min(fbox.minX() + dx, mbox.minX()), maxX = Math.max(fbox.maxX() + dx, mbox.maxX());\n        let minY = Math.min(fbox.minY() + dy, mbox.minY()), maxY = Math.max(fbox.maxY() + dy, mbox.maxY());\n        let rangeX = Math.max(1, maxX - minX), rangeY = Math.max(1, maxY - minY);\n        let ratio = Math.max(rangeX / rangeY, rangeY / rangeX);\n        return score / ratio;\n    }\n    static mergeOverlappingAtoms(mol) {\n        return SketchUtil.mergeFragmentsDiv(mol, 0);\n    }\n    static mergeFragmentsDiv(mol, div) {\n        const na = mol.numAtoms;\n        let omask = CoordUtil.overlappingAtomMask(mol);\n        let chopmask = Vec.booleanArray(false, na);\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        let remap = [];\n        for (let n = 0; n < na; n++)\n            remap.push(n + 1);\n        let div1 = div, div2 = div + 1;\n        if (div == 0)\n            div1 = na;\n        for (let i = 1; i <= div1; i++)\n            if (omask[i - 1] && !chopmask[i - 1]) {\n                if (div == 0)\n                    div2 = i + 1;\n                for (let j = div2; j <= na; j++)\n                    if (omask[j - 1] && !chopmask[j - 1]) {\n                        if (norm2_xy(mx[i - 1] - mx[j - 1], my[i - 1] - my[j - 1]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                            continue;\n                        let oldN = j, newN = i;\n                        let exotic = [0, 0];\n                        for (let k = 0; k < 2; k++) {\n                            let a = k == 0 ? i : j;\n                            exotic[k] = (mol.atomElement(a) == 'C' ? 0 : 1)\n                                + (mol.atomElement(a) == 'X' ? -100 : 0)\n                                + (mol.atomCharge(a) != 0 ? 1 : 0)\n                                + (mol.atomUnpaired(a) != 0 ? 1 : 0)\n                                + (mol.atomIsotope(a) != Molecule.ISOTOPE_NATURAL ? 1 : 0)\n                                + (mol.atomHExplicit(a) != Molecule.HEXPLICIT_UNKNOWN ? 1 : 0)\n                                + (MolUtil.hasAbbrev(mol, a) ? 1000 : 0);\n                        }\n                        if (exotic[1] > exotic[0]) {\n                            oldN = i;\n                            newN = j;\n                        }\n                        for (let n = 1; n <= mol.numBonds; n++) {\n                            if (mol.bondFrom(n) == oldN)\n                                mol.setBondFrom(n, newN);\n                            if (mol.bondTo(n) == oldN)\n                                mol.setBondTo(n, newN);\n                        }\n                        chopmask[oldN - 1] = true;\n                        remap[oldN - 1] = newN;\n                    }\n            }\n        for (let n = na; n >= 1; n--)\n            if (chopmask[n - 1]) {\n                if (n <= div)\n                    div--;\n                mol.deleteAtomAndBonds(n);\n                for (let i = 0; i < na; i++)\n                    if (remap[i] > n)\n                        remap[i]--;\n            }\n        for (let n = mol.numAtoms; n > div; n--)\n            if (mol.atomElement(n) == 'X') {\n                mol.deleteAtomAndBonds(n);\n                for (let i = 0; i < na; i++)\n                    if (remap[i] > n)\n                        remap[i]--;\n            }\n        MolUtil.removeDuplicateBonds(mol);\n        return remap;\n    }\n    static mergeFragmentsMask(mol, mask) {\n        let chopmask = Vec.booleanArray(false, mol.numAtoms);\n        let na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        for (let i = 1; i <= na; i++)\n            if (mask[i - 1])\n                for (let j = 1; j <= na; j++)\n                    if (!mask[j - 1] && !chopmask[j - 1])\n                        if (norm2_xy(mx[i - 1] - mx[j - 1], my[i - 1] - my[j - 1]) < CoordUtil.OVERLAP_THRESHOLD_SQ) {\n                            let oldN = j, newN = i;\n                            if (mol.atomElement(i) == 'C' && mol.atomElement(j) != 'C' && mol.atomElement(j) != 'X')\n                                [oldN, newN] = [i, j];\n                            if (mol.atomHExplicit(newN) == Molecule.HEXPLICIT_UNKNOWN)\n                                mol.setAtomHExplicit(newN, mol.atomHExplicit(oldN));\n                            mol.setAtomUnpaired(newN, mol.atomUnpaired(newN) + mol.atomUnpaired(oldN));\n                            mol.setAtomCharge(newN, mol.atomCharge(newN) + mol.atomCharge(oldN));\n                            mol.setAtomExtra(newN, Vec.concat(mol.atomExtra(oldN), mol.atomExtra(newN)));\n                            for (let n = 1; n <= mol.numBonds; n++) {\n                                if (mol.bondFrom(n) == oldN)\n                                    mol.setBondFrom(n, newN);\n                                if (mol.bondTo(n) == oldN)\n                                    mol.setBondTo(n, newN);\n                            }\n                            chopmask[oldN - 1] = true;\n                        }\n        for (let n = chopmask.length; n >= 1; n--)\n            if (chopmask[n - 1])\n                mol.deleteAtomAndBonds(n);\n        MolUtil.removeDuplicateBonds(mol);\n    }\n    static matchAngleGeometry(geom, theta) {\n        if (theta.length <= 1)\n            return true;\n        let match = SketchUtil.GEOM_ANGLES[geom], mtheta = Vec.numberArray(0, theta.length);\n        let hit = Vec.booleanArray(false, match.length);\n        for (let n = 0; n < theta.length; n++)\n            for (let s = 1; s >= -1; s -= 2) {\n                for (let i = 0; i < theta.length; i++)\n                    mtheta[i] = (theta[i] - theta[0]) * s;\n                Vec.setTo(hit, false);\n                let gotall = true;\n                for (let i = 0; i < mtheta.length; i++) {\n                    let got = false;\n                    for (let j = 0; j < match.length; j++)\n                        if (!hit[j] && Math.abs(angleDiff(mtheta[i], match[j])) < 3 * DEGRAD) {\n                            hit[j] = true;\n                            got = true;\n                            break;\n                        }\n                    if (!got) {\n                        gotall = false;\n                        break;\n                    }\n                }\n                if (gotall)\n                    return true;\n            }\n        return false;\n    }\n    static primeDirections(mol, atom) {\n        let angles = SketchUtil.calculateNewBondAngles(mol, atom, 1);\n        let exits = SketchUtil.exitVectors(mol, atom);\n        return GeomUtil.uniqueAngles(angles.concat(exits), 2 * DEGRAD);\n    }\n    static exitVectors(mol, atom) {\n        let adj = mol.atomAdjList(atom), sz = adj.length;\n        if (sz == 0)\n            return [0, 90 * DEGRAD, 180 * DEGRAD, -90 * DEGRAD];\n        if (sz == 1)\n            return [];\n        let ret = [];\n        let ang = GeomUtil.sortAngles(CoordUtil.atomBondAngles(mol, atom, adj));\n        for (let n = 0; n < sz; n++) {\n            let nn = n < sz - 1 ? n + 1 : 0;\n            ret.push(angleNorm(ang[n] + 0.5 * angleDiffPos(ang[nn], ang[n])));\n        }\n        return ret;\n    }\n    static calculateNewBondAngles(mol, atom, order) {\n        let adj = mol.atomAdjList(atom);\n        const sz = adj.length;\n        if (sz == 0) {\n            let atno = mol.atomicNumber(atom), atblk = Chemistry.ELEMENT_BLOCKS[atno];\n            if (atblk <= 2)\n                return [0, 90 * DEGRAD, 180 * DEGRAD, -90 * DEGRAD];\n            else\n                return [90 * DEGRAD, -90 * DEGRAD, 30 * DEGRAD, 150 * DEGRAD, 210 * DEGRAD, -30 * DEGRAD, 180 * DEGRAD, 0 * DEGRAD];\n        }\n        let geom = SketchUtil.guessAtomGeometry(mol, atom, order);\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        for (let n = 0; n < geom.length; n++) {\n            let ret = SketchUtil.mapAngleSubstituent(geom[n], ang);\n            if (ret != null)\n                return ret;\n        }\n        return [];\n    }\n    static guessAtomGeometry(mol, atom, order) {\n        let adj = mol.atomAdjList(atom);\n        let sz = adj.length, atno = mol.atomicNumber(atom);\n        let atblk = Chemistry.ELEMENT_BLOCKS[atno], elrow = Chemistry.ELEMENT_ROWS[atno];\n        let el = mol.atomElement(atom);\n        let adjBO = [], adjAN = [], pri = [];\n        let allSingle = true;\n        for (let n = 0; n < sz; n++) {\n            adjBO.push(mol.bondOrder(mol.findBond(atom, adj[n])));\n            adjAN.push(mol.atomicNumber(adj[n]));\n            pri.push(adjBO[n] * 200 + adjAN[n]);\n            if (adjBO[n] != 1)\n                allSingle = true;\n        }\n        for (let p = 0; p < sz - 1;) {\n            if (pri[p] > pri[p + 1]) {\n                Vec.swap(adj, p, p + 1);\n                Vec.swap(adjBO, p, p + 1);\n                Vec.swap(adjAN, p, p + 1);\n                Vec.swap(pri, p, p + 1);\n                if (p > 0)\n                    p--;\n            }\n            else\n                p++;\n        }\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        if (sz == 1) {\n            if (el == 'C' || el == 'N') {\n                if (adjBO[0] == 2 && order == 2)\n                    return [Geometry.Linear];\n                if ((adjBO[0] == 3 && order == 1) || (adjBO[0] == 1 && order == 3))\n                    return [Geometry.Linear];\n            }\n            if (atblk > 2)\n                return [Geometry.Octa1, Geometry.Octa2];\n            if (order != 0 && (el == 'C' || el == 'N' || el == 'O'))\n                return [Geometry.Trigonal];\n            return [Geometry.Trigonal, Geometry.Linear];\n        }\n        if (sz == 2 && Math.abs(angleDiff(ang[0], ang[1])) >= 175 * DEGRAD) {\n            if (atblk <= 2)\n                return [Geometry.SqPlan];\n            else\n                return [Geometry.Octa1, Geometry.Octa2];\n        }\n        let geom = [];\n        if (atblk == 0)\n            geom = [Geometry.Trigonal, Geometry.SqPlan];\n        else if (atblk == 1)\n            geom = [Geometry.Trigonal, Geometry.SqPlan, Geometry.Octa1, Geometry.Octa2];\n        else if (atblk == 2) {\n            geom.push(Geometry.Trigonal);\n            if (el == 'C' && allSingle) {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n            }\n            else if (el == 'C' && !allSingle) {\n            }\n            else if (elrow <= 3) {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n            }\n            else {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n                geom.push(Geometry.Octa1);\n                geom.push(Geometry.Octa2);\n            }\n        }\n        else {\n            geom.push(Geometry.Octa1);\n            geom.push(Geometry.Octa2);\n        }\n        for (let n = geom.length - 1; n >= 0; n--) {\n            if (!SketchUtil.matchAngleGeometry(geom[n], ang))\n                geom.splice(n, 1);\n        }\n        return geom;\n    }\n    static mapAngleSubstituent(geom, ang) {\n        let gtheta = SketchUtil.GEOM_ANGLES[geom];\n        const asz = ang.length, gsz = gtheta.length;\n        if (asz >= gsz)\n            return null;\n        if (asz == 0)\n            return gtheta.slice(0);\n        let vac = [];\n        for (let n = 0; n < asz; n++)\n            for (let k = 0; k < gsz; k++)\n                for (let s = 1; s >= -1; s -= 2) {\n                    let gang = [];\n                    for (let i = 0; i < gsz; i++)\n                        gang.push(angleNorm(ang[n] + s * (gtheta[i] - gtheta[k])));\n                    let mask = Vec.booleanArray(false, gsz);\n                    let mcount = 0;\n                    for (let i = 0; i < gsz; i++)\n                        if (!mask[i])\n                            for (let j = 0; j < asz; j++)\n                                if (Math.abs(angleDiff(gang[i], ang[j])) < 3 * DEGRAD) {\n                                    mask[i] = true;\n                                    mcount++;\n                                    break;\n                                }\n                    if (mcount != asz)\n                        continue;\n                    for (let i = 0; i < gsz; i++)\n                        if (!mask[i])\n                            vac.push(gang[i]);\n                }\n        if (vac.length == 0)\n            return null;\n        vac = GeomUtil.sortAngles(vac);\n        for (let n = 0; n < vac.length - 1; n++) {\n            let th1 = vac[n], th2 = vac[n + 1], dth = angleDiff(th2, th1);\n            if (Math.abs(dth) < 5 * DEGRAD) {\n                vac[n] = th1 + 0.5 * dth;\n                vac.splice(n + 1, 1);\n                n--;\n            }\n        }\n        return vac;\n    }\n    static refitAtomGeometry(mol, atom, geom) {\n        let gtheta = SketchUtil.GEOM_ANGLES[geom];\n        let gsz = gtheta.length;\n        let adj = mol.atomAdjList(atom);\n        let asz = adj.length;\n        if (asz <= 1 || asz > gsz)\n            return null;\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        let inRing = Vec.booleanArray(false, asz);\n        let allInRing = true;\n        for (let n = 0; n < asz; n++) {\n            inRing[n] = mol.bondInRing(mol.findBond(atom, adj[n]));\n            if (!inRing[n])\n                allInRing = false;\n        }\n        if (allInRing)\n            return null;\n        let bestAng = null;\n        let bestScore = 0;\n        let ww = MolUtil.calculateWalkWeight(mol, atom);\n        for (let i = 0; i < gsz; i++)\n            for (let j = 0; j < asz; j++)\n                for (let s = 1; s >= -1; s -= 2) {\n                    let newAng = Vec.numberArray(0, asz);\n                    let mask = Vec.booleanArray(false, gsz);\n                    for (let n1 = 0; n1 < asz; n1++) {\n                        let best = -1;\n                        let bdiff = 0;\n                        for (let n2 = 0; n2 < gsz; n2++)\n                            if (!mask[n2]) {\n                                let th = angleNorm(gtheta[n2] * s - gtheta[i] + ang[j]);\n                                let diff = Math.abs(angleDiff(th, ang[n1]));\n                                if (best < 0 || diff < bdiff) {\n                                    best = n2;\n                                    bdiff = diff;\n                                    newAng[n1] = th;\n                                }\n                            }\n                        mask[best] = true;\n                    }\n                    let ringClash = false;\n                    for (let n = 0; n < asz; n++)\n                        if (inRing[n] && Math.abs(angleDiff(newAng[n], ang[n])) > 2 * DEGRAD) {\n                            ringClash = true;\n                            break;\n                        }\n                    if (ringClash)\n                        continue;\n                    let score = 0;\n                    for (let n = 0; n < asz; n++)\n                        score += ww[adj[n] - 1] * Math.abs(angleDiff(newAng[n], ang[n]));\n                    if (bestAng == null || score < bestScore) {\n                        bestAng = newAng;\n                        bestScore = score;\n                    }\n                }\n        if (bestAng == null)\n            return null;\n        let same = true;\n        for (let n = 0; n < asz; n++)\n            if (Math.abs(angleDiff(bestAng[n], ang[n])) > 2 * DEGRAD) {\n                same = false;\n                break;\n            }\n        if (same)\n            return null;\n        mol = mol.clone();\n        for (let n = 0; n < asz; n++)\n            if (!inRing[n])\n                CoordUtil.rotateBond(mol, atom, adj[n], bestAng[n] - ang[n]);\n        return mol;\n    }\n    static switchAtomGeometry(mol, src, dst, geoms) {\n        let bestAtom = 0;\n        let bestAng = 0, bestX = 0, bestY = 0;\n        let adj = mol.atomAdjList(src);\n        let ang = CoordUtil.atomBondAngles(mol, src, adj), theta = Vec.numberArray(0, ang.length - 1);\n        let cx = mol.atomX(src), cy = mol.atomY(src);\n        for (let i = 0; i < dst.length; i++) {\n            let a = adj.indexOf(dst[i]);\n            let curth = ang[a];\n            for (let n = 0, p = 0; n < adj.length; n++)\n                if (n != a)\n                    theta[p++] = ang[n];\n            let r = norm_xy(mol.atomX(dst[i]) - cx, mol.atomY(dst[i]) - cy);\n            for (let j = 0; j < geoms.length; j++) {\n                if (adj.length >= SketchUtil.GEOM_ANGLES[geoms[j]].length)\n                    continue;\n                let newAng = SketchUtil.mapAngleSubstituent(geoms[j], theta);\n                if (newAng != null)\n                    for (let n = 0; n < newAng.length; n++) {\n                        let dth = angleDiff(newAng[n], curth);\n                        if (Math.abs(dth) < 3 * DEGRAD)\n                            continue;\n                        if (dth < 0)\n                            dth += TWOPI;\n                        if (bestAtom == 0 || dth < bestAng - 2 * DEGRAD || (dth < bestAng + 2 * DEGRAD && dst[i] < bestAtom)) {\n                            let x = cx + r * Math.cos(newAng[n]);\n                            let y = cy + r * Math.sin(newAng[n]);\n                            if (CoordUtil.atomAtPoint(mol, x, y) != 0)\n                                continue;\n                            bestAtom = dst[i];\n                            bestAng = dth;\n                            bestX = x;\n                            bestY = y;\n                        }\n                    }\n                break;\n            }\n        }\n        if (bestAtom == 0)\n            return null;\n        mol = mol.clone();\n        mol.setAtomPos(bestAtom, bestX, bestY);\n        return mol;\n    }\n    static pickAtomsToConnect(mol, aidx) {\n        if (aidx.length < 2)\n            return null;\n        if (aidx.length == 2) {\n            if (mol.findBond(aidx[0], aidx[1]) > 0)\n                return null;\n            return aidx;\n        }\n        const AUTO_DSQ = sqr(Molecule.IDEALBOND + 0.1);\n        let bestDSQ = Number.MAX_VALUE;\n        let bestA1 = 0, bestA2 = 0;\n        let conn = [];\n        for (let i = 0; i < aidx.length - 1; i++)\n            for (let j = i + 1; j < aidx.length; j++) {\n                if (mol.findBond(aidx[i], aidx[j]) > 0)\n                    continue;\n                let dsq = norm2_xy(mol.atomX(aidx[i]) - mol.atomX(aidx[j]), mol.atomY(aidx[i]) - mol.atomY(aidx[j]));\n                if (dsq < AUTO_DSQ) {\n                    conn.push(aidx[i]);\n                    conn.push(aidx[j]);\n                }\n                else if (dsq < bestDSQ) {\n                    bestDSQ = dsq;\n                    bestA1 = aidx[i];\n                    bestA2 = aidx[j];\n                }\n            }\n        if (conn.length == 0 && bestA1 != 0) {\n            conn.push(bestA1);\n            conn.push(bestA2);\n        }\n        return conn.length == 0 ? null : conn;\n    }\n    static pickNewAtomDirection(mol, atom, theta) {\n        if (theta.length == 1)\n            return theta[0];\n        let bestTheta = theta[0], bestScore = Number.MAX_VALUE;\n        for (let n = 0; n < theta.length; n++) {\n            let px = mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(theta[n]);\n            let py = mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(theta[n]);\n            let score = CoordUtil.congestionPoint(mol, px, py);\n            if (score > bestScore)\n                continue;\n            if (CoordUtil.overlapsAtom(mol, px, py, 0.2))\n                score += 1E5;\n            if (score < bestScore) {\n                bestTheta = theta[n];\n                bestScore = score;\n            }\n        }\n        return bestTheta;\n    }\n    static joinOverlappingAtoms(mol, mask) {\n        mol = mol.clone();\n        mask = mask.slice(0);\n        const na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        let groups = [];\n        let groupX = [], groupY = [];\n        for (let i = 0; i < na - 1; i++)\n            if (mask[i]) {\n                let g = [i + 1];\n                let x = mx[i], y = my[i];\n                for (let j = i + 1; j < na; j++)\n                    if (mask[j]) {\n                        if (norm2_xy(mx[j] - mx[i], my[j] - my[i]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                            continue;\n                        g.push(j + 1);\n                        x += mx[j];\n                        y += my[j];\n                        let adjb = mol.atomAdjBonds(j + 1);\n                        for (let n = 0; n < adjb.length; n++) {\n                            if (mol.bondFrom(adjb[n]) == j + 1)\n                                mol.setBondFrom(adjb[n], i + 1);\n                            else if (mol.bondTo(adjb[n]) == j + 1)\n                                mol.setBondTo(adjb[n], i + 1);\n                        }\n                    }\n                if (g.length == 1)\n                    continue;\n                groups.push(g);\n                groupX.push(x / g.length);\n                groupY.push(y / g.length);\n            }\n        if (groups.length == 0)\n            return null;\n        let keepmask = Vec.booleanArray(true, na);\n        for (let n = 0; n < groups.length; n++) {\n            let g = groups[n];\n            mol.setAtomPos(g[0], groupX[n], groupY[n]);\n            for (let i = 1; i < g.length; i++)\n                keepmask[g[i] - 1] = false;\n        }\n        mol = MolUtil.subgraphMask(mol, keepmask);\n        MolUtil.removeDuplicateBonds(mol);\n        return mol;\n    }\n    static moveToEdge(mol, mask, dx, dy) {\n        let gotS = false, gotN = false;\n        let sx1 = 0, sy1 = 0, sx2 = 0, sy2 = 0;\n        let nx1 = 0, ny1 = 0, nx2 = 0, ny2 = 0;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n), y = mol.atomY(n);\n            if (mask[n - 1]) {\n                if (!gotS || x < sx1)\n                    sx1 = x;\n                if (!gotS || y < sy1)\n                    sy1 = y;\n                if (!gotS || x > sx2)\n                    sx2 = x;\n                if (!gotS || y > sy2)\n                    sy2 = y;\n                gotS = true;\n            }\n            else {\n                if (!gotN || x < nx1)\n                    nx1 = x;\n                if (!gotN || y < ny1)\n                    ny1 = y;\n                if (!gotN || x > nx2)\n                    nx2 = x;\n                if (!gotN || y > ny2)\n                    ny2 = y;\n                gotN = true;\n            }\n        }\n        const SEPARATE = 1.0, SEPTEST = 0.9;\n        if ((dx < 0 && dy == 0 && sx2 <= nx1 - SEPTEST) ||\n            (dx > 0 && dy == 0 && sx1 >= nx2 + SEPTEST) ||\n            (dx == 0 && dy < 0 && sy2 <= ny1 - SEPTEST) ||\n            (dx == 0 && dy > 0 && sy1 >= ny2 + SEPTEST)) {\n            return null;\n        }\n        mol = mol.clone();\n        let ox = 0, oy = 0;\n        if (dx < 0)\n            ox = nx1 - sx2 - SEPARATE;\n        if (dx > 0)\n            ox = nx2 - sx1 + SEPARATE;\n        if (dy < 0)\n            oy = ny1 - sy2 - SEPARATE;\n        if (dy > 0)\n            oy = ny2 - sy1 + SEPARATE;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1])\n                mol.setAtomPos(n, mol.atomX(n) + ox, mol.atomY(n) + oy);\n        return mol;\n    }\n    static placeAdditionalHydrogens(mol, atom, numH) {\n        let base = mol.numAtoms;\n        const x0 = mol.atomX(atom), y0 = mol.atomY(atom);\n        let adj = mol.atomAdjList(atom);\n        if (adj.length == 2 && numH == 2) {\n            const th1 = Math.atan2(mol.atomY(adj[0]) - y0, mol.atomX(adj[0]) - x0);\n            const th2 = Math.atan2(mol.atomY(adj[1]) - y0, mol.atomX(adj[1]) - x0);\n            if (Math.abs(angleDiff(th1, th2)) < 170 * DEGRAD) {\n                let theta = 0.5 * (th1 + th2) + Math.PI;\n                let th3 = theta - 30 * DEGRAD, th4 = theta + 30 * DEGRAD;\n                mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th3), y0 + Molecule.IDEALBOND * Math.sin(th3));\n                mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th4), y0 + Molecule.IDEALBOND * Math.sin(th4));\n                mol.addBond(atom, base + 1, 1);\n                mol.addBond(atom, base + 2, 1);\n                return;\n            }\n        }\n        if (adj.length == 1 && numH == 3) {\n            let th1 = Math.atan2(mol.atomY(adj[0]) - y0, mol.atomX(adj[0]) - x0);\n            let th2 = th1 + 90 * DEGRAD, th3 = th1 + 180 * DEGRAD, th4 = th1 + 270 * DEGRAD;\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th2), y0 + Molecule.IDEALBOND * Math.sin(th2));\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th3), y0 + Molecule.IDEALBOND * Math.sin(th3));\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th4), y0 + Molecule.IDEALBOND * Math.sin(th4));\n            mol.addBond(atom, base + 1, 1);\n            mol.addBond(atom, base + 2, 1);\n            mol.addBond(atom, base + 3, 1);\n            return;\n        }\n        let theta = SketchUtil.pickNewAtomDirection(mol, atom, SketchUtil.primeDirections(mol, atom));\n        mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(theta), y0 + Molecule.IDEALBOND * Math.sin(theta));\n        mol.addBond(atom, base + 1, 1);\n        if (numH > 1)\n            SketchUtil.placeAdditionalHydrogens(mol, atom, numH - 1);\n    }\n    static allViableDirections(mol, atom, order) {\n        if (mol.atomAdjCount(atom) == 0) {\n            let angles = [];\n            for (let n = 0; n < 12; n++)\n                angles.push(30 * DEGRAD);\n            return angles;\n        }\n        let adj = mol.atomAdjList(atom);\n        let angles = SketchUtil.exitVectors(mol, atom);\n        let geom = SketchUtil.guessAtomGeometry(mol, atom, order);\n        if (adj.length == 1 && geom.indexOf(Geometry.Linear) < 0)\n            geom.push(Geometry.Linear);\n        let bndang = CoordUtil.atomBondAngles(mol, atom, adj);\n        for (let g of geom) {\n            let map = SketchUtil.mapAngleSubstituent(g, bndang);\n            if (map != null)\n                for (let th of map)\n                    angles.push(th);\n        }\n        return GeomUtil.uniqueAngles(angles, 2 * DEGRAD);\n    }\n    static proposeNewRing(mol, rsz, x, y, dx, dy, snap) {\n        let theta = dy == 0 && dx == 0 ? 0.5 * Math.PI : Math.atan2(dy, dx);\n        if (snap) {\n            const chunk = 30 * DEGRAD;\n            theta = Math.round(theta / chunk) * chunk;\n        }\n        return SketchUtil.positionSimpleRing(mol, rsz, x, y, theta);\n    }\n    static proposeAtomRing(mol, rsz, atom, dx, dy) {\n        let thsnap = [];\n        let cx = mol.atomX(atom), cy = mol.atomY(atom);\n        if (mol.atomAdjCount(atom) == 0) {\n            for (let n = 0; n < 12; n++)\n                thsnap.push(TWOPI * n / 12);\n        }\n        else if (mol.atomAdjCount(atom) == 1) {\n            let nbr = mol.atomAdjList(atom)[0];\n            thsnap.push(angleNorm(Math.atan2(mol.atomY(nbr) - cy, mol.atomX(nbr) - cx) + Math.PI));\n        }\n        else {\n            let angs = [];\n            for (let nbr of mol.atomAdjList(atom))\n                angs.push(Math.atan2(mol.atomY(nbr) - cy, mol.atomX(nbr) - cx));\n            angs = sortAngles(angs);\n            for (let n = 0; n < angs.length; n++) {\n                let th1 = angs[n], th2 = angs[n < angs.length - 1 ? n + 1 : 0];\n                thsnap.push(th1 + 0.5 * angleDiffPos(th2, th1));\n            }\n        }\n        let theta = Math.atan2(dy, dx);\n        let bestTheta = 0, bestDelta = Number.MAX_VALUE;\n        for (let th of thsnap) {\n            let delta = Math.abs(angleDiff(th, theta));\n            if (delta < bestDelta) {\n                bestTheta = th;\n                bestDelta = delta;\n            }\n        }\n        return SketchUtil.positionSimpleRing(mol, rsz, mol.atomX(atom), mol.atomY(atom), bestTheta);\n    }\n    static proposeBondRing(mol, rsz, bond, dx, dy) {\n        let bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        let bx = mol.atomX(bto) - mol.atomX(bfr), by = mol.atomY(bto) - mol.atomY(bfr);\n        let sign = dx * by - dy * bx;\n        let delta = sign > 0 ? -90 * DEGRAD : 90 * DEGRAD;\n        let theta = Math.atan2(by, bx) + delta;\n        let dth = TWOPI / rsz;\n        let rad = Molecule.IDEALBOND / (2.0 * Math.sin(0.5 * dth)), brad = rad * Math.cos(0.5 * dth);\n        let cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto)) + brad * Math.cos(theta);\n        let cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto)) + brad * Math.sin(theta);\n        let rx = [], ry = [];\n        for (let n = 0; n < rsz; n++) {\n            let th = theta - Math.PI + (n - 0.5) * dth;\n            rx.push(cx + Math.cos(th) * rad);\n            ry.push(cy + Math.sin(th) * rad);\n        }\n        let [i1, i2] = sign < 0 ? [bfr, bto] : [bto, bfr];\n        rx[0] = mol.atomX(i1);\n        ry[0] = mol.atomY(i1);\n        rx[1] = mol.atomX(i2);\n        ry[1] = mol.atomY(i2);\n        return [rx, ry];\n    }\n    static positionSimpleRing(mol, rsz, x, y, theta) {\n        let dth = TWOPI / rsz;\n        let rad = Molecule.IDEALBOND / (2 * Math.sin(0.5 * dth));\n        let cx = x + rad * Math.cos(theta), cy = y + rad * Math.sin(theta);\n        let rx = [], ry = [];\n        for (let n = 0; n < rsz; n++) {\n            let th = theta - Math.PI + n * dth;\n            rx.push(cx + Math.cos(th) * rad);\n            ry.push(cy + Math.sin(th) * rad);\n        }\n        return [rx, ry];\n    }\n    static guidelineSprouts(mol, atom) {\n        let sprouts = [];\n        let angs = [], ords = [];\n        for (let n = 0; n < 3; n++) {\n            angs.push(SketchUtil.allViableDirections(mol, atom, n + 1));\n            ords.push([n + 1]);\n            for (let i = 0; i < n; i++)\n                if (angs[i] != null && Vec.equals(angs[n], angs[i])) {\n                    angs[n] = null;\n                    ords[i].push(n + 1);\n                }\n        }\n        const cx = mol.atomX(atom), cy = mol.atomY(atom);\n        for (let n = 0; n < 3; n++)\n            if (angs[n] != null) {\n                let sprout = {\n                    atom: atom,\n                    orders: ords[n],\n                    x: [],\n                    y: [],\n                };\n                for (let i = 0; i < angs[n].length; i++) {\n                    sprout.x[i] = cx + Math.cos(angs[n][i]) * Molecule.IDEALBOND;\n                    sprout.y[i] = cy + Math.sin(angs[n][i]) * Molecule.IDEALBOND;\n                }\n                sprouts.push(sprout);\n            }\n        return sprouts;\n    }\n}\nSketchUtil.GEOM_ANGLES = [\n    [0, 180 * DEGRAD],\n    [0, 120 * DEGRAD],\n    [0, 120 * DEGRAD, 240 * DEGRAD],\n    [0, 90 * DEGRAD, 150 * DEGRAD, 240 * DEGRAD],\n    [0, 120 * DEGRAD, 180 * DEGRAD, 240 * DEGRAD],\n    [0, 90 * DEGRAD, 180 * DEGRAD, 270 * DEGRAD],\n    [0, 90 * DEGRAD, 150 * DEGRAD, 210 * DEGRAD, 270 * DEGRAD],\n    [0, 60 * DEGRAD, 90 * DEGRAD, 180 * DEGRAD, 210 * DEGRAD],\n    [0, 60 * DEGRAD, 120 * DEGRAD, 180 * DEGRAD, 240 * DEGRAD, 300 * DEGRAD],\n    [0, 45 * DEGRAD, 90 * DEGRAD, 180 * DEGRAD, 225 * DEGRAD, 270 * DEGRAD]\n];\n//# sourceMappingURL=SketchUtil.js.map","import { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { CoordUtil } from './CoordUtil';\nimport { Graph } from './Graph';\nimport { Molecule } from './Molecule';\nimport { PolymerBlock } from './PolymerBlock';\nimport { SketchUtil } from './SketchUtil';\nexport class MolUtil {\n    static isBlank(mol) {\n        if (mol == null)\n            return true;\n        return mol.numAtoms == 0;\n    }\n    static notBlank(mol) {\n        if (mol == null)\n            return false;\n        return mol.numAtoms > 0;\n    }\n    static orBlank(mol) { return mol == null ? new Molecule() : mol; }\n    static hasAnyAbbrev(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n))\n                return true;\n        return false;\n    }\n    static hasAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra == null ? 0 : extra.length); n++)\n            if (extra[n].startsWith('a'))\n                return true;\n        return false;\n    }\n    static getAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                return Molecule.fromString(extra[n].substring(1));\n            }\n        return null;\n    }\n    static setAbbrev(mol, atom, frag) {\n        let attidx = 0;\n        for (let n = 1; n <= frag.numAtoms; n++)\n            if (frag.atomElement(n) == MolUtil.ABBREV_ATTACHMENT) {\n                attidx = n;\n                break;\n            }\n        if (attidx == 0)\n            throw 'No attachment points indicated.';\n        if (attidx >= 2) {\n            frag = frag.clone();\n            frag.swapAtoms(attidx, 1);\n        }\n        let adj = mol.atomAdjList(atom);\n        if (adj.length > 1)\n            throw 'Setting abbreviation for non-terminal atom.';\n        if (frag.atomAdjCount(1) == 1 && mol.atomAdjCount(atom) > 0) {\n            let b1 = mol.findBond(atom, mol.atomAdjList(atom)[0]);\n            let b2 = frag.findBond(1, frag.atomAdjList(1)[0]);\n            mol.setBondOrder(b1, frag.bondOrder(b2));\n        }\n        let extra = mol.atomExtra(atom);\n        let idx = -1;\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                idx = n;\n                break;\n            }\n        if (idx < 0)\n            idx = extra.push(null) - 1;\n        extra[idx] = 'a' + frag.toString();\n        mol.setAtomExtra(atom, extra);\n    }\n    static validateAbbrevs(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                if (mol.atomAdjCount(n) > 1)\n                    MolUtil.clearAbbrev(mol, n);\n                if (mol.atomCharge(n) != 0)\n                    mol.setAtomCharge(n, 0);\n                if (mol.atomUnpaired(n) != 0)\n                    mol.setAtomUnpaired(n, 0);\n                if (mol.atomIsotope(n) != 0)\n                    mol.setAtomIsotope(n, Molecule.ISOTOPE_NATURAL);\n                if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN)\n                    mol.setAtomHExplicit(n, Molecule.HEXPLICIT_UNKNOWN);\n            }\n    }\n    static convertToAbbrev(mol, srcmask, abbrevName) {\n        let molidx = this.convertToAbbrevIndex(mol, srcmask, abbrevName);\n        return molidx ? molidx[0] : null;\n    }\n    static convertToAbbrevIndex(mol, srcmask, abbrevName) {\n        let junction = 0;\n        let polymerExtra = null;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let b1 = mol.bondFrom(n), b2 = mol.bondTo(n), atom = 0;\n            if (srcmask[b1 - 1] && !srcmask[b2 - 1]) {\n                atom = b1;\n                polymerExtra = PolymerBlock.getPolymerExtensions(mol, b2);\n            }\n            else if (!srcmask[b1 - 1] && srcmask[b2 - 1]) {\n                atom = b2;\n                polymerExtra = PolymerBlock.getPolymerExtensions(mol, b1);\n            }\n            if (atom == 0)\n                continue;\n            if (junction > 0 && atom != junction)\n                return [null, null];\n            junction = atom;\n        }\n        if (junction == 0)\n            return [null, null];\n        let na = mol.numAtoms, molidx = 0, fragidx = 0;\n        let maskmol = Vec.booleanArray(false, na), maskfrag = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++) {\n            maskmol[n] = srcmask[n];\n            maskfrag[n] = !srcmask[n] || n + 1 == junction;\n            if (maskmol[n] && n + 1 <= junction)\n                molidx++;\n            if (maskfrag[n] && n + 1 <= junction)\n                fragidx++;\n        }\n        let bondType = Molecule.BONDTYPE_NORMAL, nadj = 0;\n        for (let a of mol.atomAdjList(junction))\n            if (!srcmask[a - 1]) {\n                if (nadj != 0) {\n                    bondType = Molecule.BONDTYPE_NORMAL;\n                    break;\n                }\n                let b = mol.findBond(junction, a);\n                if (mol.bondFrom(b) == junction)\n                    bondType = mol.bondType(b);\n                nadj++;\n            }\n        let frag = MolUtil.subgraphMask(mol, maskfrag);\n        frag.setAtomElement(fragidx, MolUtil.ABBREV_ATTACHMENT);\n        frag.setAtomCharge(fragidx, 0);\n        frag.setAtomUnpaired(fragidx, 0);\n        frag.setAtomHExplicit(fragidx, Molecule.HEXPLICIT_UNKNOWN);\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomMapNum(n, 0);\n        frag.setAtomExtra(fragidx, []);\n        frag.setAtomTransient(fragidx, []);\n        let adj = frag.atomAdjList(fragidx);\n        let x = 0, y = 0, inv = 1.0 / adj.length;\n        let bondOrder = 1;\n        for (let n = 0; n < adj.length; n++) {\n            x += frag.atomX(adj[n]);\n            y += frag.atomY(adj[n]);\n            let b = frag.findBond(fragidx, adj[n]);\n            if (n == 0)\n                bondOrder = frag.bondOrder(b);\n            else if (bondOrder != frag.bondOrder(b))\n                bondOrder = 1;\n        }\n        x *= inv;\n        y *= inv;\n        if (fragidx > 1)\n            frag.swapAtoms(fragidx, 1);\n        let newmol = MolUtil.subgraphMask(mol, maskmol);\n        let newatom = newmol.addAtom(abbrevName, x, y);\n        newmol.addBond(molidx, newatom, bondOrder, bondType);\n        MolUtil.setAbbrev(newmol, newatom, frag);\n        if (polymerExtra != null)\n            newmol.setAtomExtra(newatom, Vec.concat(newmol.atomExtra(newatom), polymerExtra));\n        return [newmol, newatom];\n    }\n    static expandAbbrevs(mol, alignCoords) {\n        while (true) {\n            let anything = false;\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (MolUtil.hasAbbrev(mol, n)) {\n                    if (MolUtil.expandOneAbbrev(mol, n, alignCoords))\n                        anything = true;\n                    n--;\n                }\n            if (!anything)\n                break;\n        }\n    }\n    static expandedAbbrevs(mol) {\n        if (!this.hasAnyAbbrev(mol))\n            return mol;\n        mol = mol.clone();\n        this.expandAbbrevs(mol, true);\n        return mol;\n    }\n    static expandOneAbbrev(mol, atom, alignCoords) {\n        let frag = MolUtil.getAbbrev(mol, atom);\n        if (frag == null)\n            return null;\n        if (mol.atomAdjCount(atom) != 1 || frag.numAtoms == 0) {\n            MolUtil.clearAbbrev(mol, atom);\n            return null;\n        }\n        let m = mol.atomMapNum(atom);\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomMapNum(n, 0);\n        if (m > 0)\n            for (let n of frag.atomAdjList(1))\n                frag.setAtomMapNum(n, m);\n        return MolUtil.expandOneAbbrevFrag(mol, atom, frag, alignCoords);\n    }\n    static expandOneAbbrevFrag(mol, atom, frag, alignCoords) {\n        let polymerExtra = PolymerBlock.getPolymerExtensions(mol, atom);\n        let nbr = mol.atomAdjCount(atom) == 1 ? mol.atomAdjList(atom)[0] : 0;\n        let connBond = mol.findBond(atom, nbr), connType = Molecule.BONDTYPE_NORMAL;\n        if (connBond > 0) {\n            connType = mol.bondType(connBond);\n            if (mol.bondFrom(connBond) != nbr && (connType == Molecule.BONDTYPE_INCLINED || connType == Molecule.BONDTYPE_DECLINED))\n                connType = Molecule.BONDTYPE_NORMAL;\n        }\n        if (alignCoords) {\n            let vx1 = mol.atomX(atom) - mol.atomX(nbr), vy1 = mol.atomY(atom) - mol.atomY(nbr);\n            let adj = frag.atomAdjList(1);\n            let vx2 = 0, vy2 = 0, inv = 1.0 / adj.length;\n            for (let n = 0; n < adj.length; n++) {\n                vx2 += frag.atomX(adj[n]) - frag.atomX(1);\n                vy2 += frag.atomY(adj[n]) - frag.atomY(1);\n            }\n            vx2 *= inv;\n            vy2 *= inv;\n            let th1 = Math.atan2(vy1, vx1), th2 = Math.atan2(vy2, vx2);\n            CoordUtil.rotateMolecule(frag, th1 - th2);\n            CoordUtil.translateMolecule(frag, mol.atomX(nbr) - frag.atomX(1), mol.atomY(nbr) - frag.atomY(1));\n        }\n        if (polymerExtra != null) {\n            for (let n = 1; n <= frag.numAtoms; n++) {\n                let extra = frag.atomExtra(n);\n                for (let i = extra.length - 1; i >= 0; i--)\n                    if (polymerExtra.indexOf(extra[i]) >= 0)\n                        extra.splice(i, 1);\n                frag.setAtomExtra(n, Vec.concat(extra, polymerExtra));\n            }\n        }\n        let join = mol.numAtoms + 1;\n        mol.append(frag);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondFrom(n) == join) {\n                mol.setBondFrom(n, nbr);\n                mol.setBondType(n, connType);\n            }\n            else if (mol.bondTo(n) == join) {\n                mol.setBondFromTo(n, nbr, mol.bondFrom(n));\n                mol.setBondType(n, connType);\n            }\n        }\n        let mask = Vec.booleanArray(false, mol.numAtoms);\n        for (let n = mask.length - frag.numAtoms; n < mask.length; n++)\n            mask[n] = true;\n        mol.deleteAtomAndBonds(join);\n        mol.deleteAtomAndBonds(atom);\n        mask.splice(join - 1, 1);\n        mask.splice(atom - 1, 1);\n        return mask;\n    }\n    static clearAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                extra.splice(n, 1);\n                mol.setAtomExtra(atom, extra);\n                mol.setAtomElement(atom, 'C');\n                return;\n            }\n    }\n    static setAtomElement(mol, atom, el) {\n        if (mol.atomElement(atom) == el)\n            return;\n        this.clearAbbrev(mol, atom);\n        mol.setAtomElement(atom, el);\n    }\n    static addBond(mol, bfr, bto, order, type) {\n        if (type == null)\n            type = Molecule.BONDTYPE_NORMAL;\n        if (mol.atomAdjCount(bfr) >= 1)\n            this.clearAbbrev(mol, bfr);\n        if (mol.atomAdjCount(bto) >= 1)\n            this.clearAbbrev(mol, bto);\n        let b = mol.findBond(bfr, bto);\n        if (b > 0)\n            mol.deleteBond(b);\n        return mol.addBond(bfr, bto, order, type);\n    }\n    static subgraphMask(mol, mask) {\n        let invidx = [];\n        let sum = 0;\n        for (let n = 0; n < mol.numAtoms; n++) {\n            if (mask[n])\n                invidx.push(++sum);\n            else\n                invidx.push(0);\n        }\n        if (sum == 0)\n            return new Molecule();\n        if (sum == mol.numAtoms)\n            return mol.clone();\n        let frag = new Molecule();\n        frag.keepTransient = true;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let num = frag.addAtom(mol.atomElement(n), mol.atomX(n), mol.atomY(n), mol.atomCharge(n), mol.atomUnpaired(n));\n                frag.setAtomIsotope(num, mol.atomIsotope(n));\n                frag.setAtomHExplicit(num, mol.atomHExplicit(n));\n                frag.setAtomMapNum(num, mol.atomMapNum(n));\n                frag.setAtomExtra(num, mol.atomExtra(n));\n                frag.setAtomTransient(num, mol.atomTransient(n));\n            }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = invidx[mol.bondFrom(n) - 1], bto = invidx[mol.bondTo(n) - 1];\n            if (bfr > 0 && bto > 0) {\n                let num = frag.addBond(bfr, bto, mol.bondOrder(n), mol.bondType(n));\n                frag.setBondExtra(num, mol.bondExtra(n));\n                frag.setBondTransient(num, mol.bondTransient(n));\n            }\n        }\n        frag.keepTransient = mol.keepTransient;\n        return frag;\n    }\n    static subgraphIndex(mol, idx) {\n        let invidx = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 0; n < invidx.length; n++)\n            invidx[n] = 0;\n        for (let n = 0; n < idx.length; n++)\n            invidx[idx[n] - 1] = n + 1;\n        let frag = new Molecule();\n        frag.keepTransient = true;\n        for (let n = 0; n < idx.length; n++) {\n            let num = frag.addAtom(mol.atomElement(idx[n]), mol.atomX(idx[n]), mol.atomY(idx[n]), mol.atomCharge(idx[n]), mol.atomUnpaired(idx[n]));\n            frag.setAtomIsotope(num, mol.atomIsotope(idx[n]));\n            frag.setAtomHExplicit(num, mol.atomHExplicit(idx[n]));\n            frag.setAtomMapNum(num, mol.atomMapNum(idx[n]));\n            frag.setAtomExtra(num, mol.atomExtra(idx[n]));\n            frag.setAtomTransient(num, mol.atomTransient(idx[n]));\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = invidx[mol.bondFrom(n) - 1], bto = invidx[mol.bondTo(n) - 1];\n            if (bfr > 0 && bto > 0) {\n                let num = frag.addBond(bfr, bto, mol.bondOrder(n), mol.bondType(n));\n                frag.setBondExtra(num, mol.bondExtra(n));\n                frag.setBondTransient(num, mol.bondTransient(n));\n            }\n        }\n        frag.keepTransient = mol.keepTransient;\n        return frag;\n    }\n    static subgraphWithAttachments(mol, mask) {\n        let xmask = mask.slice(0);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (mask[bfr] && !mask[bto])\n                xmask[bto] = true;\n            else if (mask[bto] && !mask[bfr])\n                xmask[bfr] = true;\n        }\n        let xmol = mol.clone();\n        for (let n = 1; n <= xmol.numAtoms; n++)\n            if (xmask[n - 1] && !mask[n - 1]) {\n                xmol.setAtomElement(n, 'X');\n                xmol.setAtomCharge(n, 0);\n                xmol.setAtomUnpaired(n, 0);\n                xmol.setAtomHExplicit(n, Molecule.HEXPLICIT_UNKNOWN);\n                xmol.setAtomExtra(n, []);\n            }\n        return MolUtil.subgraphMask(xmol, xmask);\n    }\n    static append(mol, frag) {\n        let boxm = mol.boundary(), boxf = frag.boundary();\n        let dx = boxm.maxX() + Molecule.IDEALBOND - boxf.minX();\n        let dy = 0.5 * (boxm.minY() + boxm.maxY() - boxf.minY() - boxf.maxY());\n        let top = mol.numAtoms;\n        mol.append(frag);\n        for (let n = top + 1; n <= mol.numAtoms; n++)\n            mol.setAtomPos(n, mol.atomX(n) + dx, mol.atomY(n) + dy);\n    }\n    static deleteAtoms(mol, idx) {\n        let mask = Vec.booleanArray(true, mol.numAtoms);\n        for (let n = 0; n < idx.length; n++)\n            mask[idx[n] - 1] = false;\n        return MolUtil.subgraphMask(mol, mask);\n    }\n    static componentList(mol) {\n        let sz = mol.numAtoms;\n        if (sz == 0)\n            return null;\n        let g = Graph.fromMolecule(mol);\n        let groups = g.calculateComponentGroups();\n        for (let grp of groups)\n            Vec.addTo(grp, 1);\n        return groups;\n    }\n    static getAtomSides(mol, atom) {\n        let g = Graph.fromMolecule(mol);\n        let cc = g.calculateComponents();\n        let mask = [];\n        for (let n = 0; n < cc.length; n++)\n            mask.push(cc[n] == cc[atom - 1]);\n        mask[atom - 1] = false;\n        let oldmap = Vec.maskIdx(mask);\n        g.keepNodesMask(mask);\n        cc = g.calculateComponents();\n        let ccmax = Vec.max(cc);\n        let grps = [];\n        for (let n = 0; n < ccmax; n++)\n            grps.push([atom]);\n        for (let n = 0; n < cc.length; n++)\n            grps[cc[n] - 1].push(oldmap[n] + 1);\n        return grps;\n    }\n    static getBondSides(mol, bond) {\n        let bf = mol.bondFrom(bond), bt = mol.bondTo(bond);\n        let inRing = mol.bondInRing(bond);\n        let g = Graph.fromMolecule(mol);\n        let cc = g.calculateComponents();\n        let mask = [];\n        for (let n = 0; n < cc.length; n++)\n            mask.push(cc[n] == cc[bf - 1]);\n        if (!inRing)\n            g.removeEdge(bf - 1, bt - 1);\n        else {\n            mask[bf - 1] = false;\n            mask[bt - 1] = false;\n        }\n        let oldmap = Vec.maskIdx(mask);\n        g.keepNodesMask(mask);\n        cc = g.calculateComponents();\n        let ccmax = Vec.max(cc);\n        let grps = [];\n        for (let n = 0; n < ccmax; n++) {\n            grps[n] = [];\n            if (inRing) {\n                grps[n].push(bf);\n                grps[n].push(bt);\n            }\n        }\n        for (let n = 0; n < cc.length; n++)\n            grps[cc[n] - 1].push(oldmap[n] + 1);\n        return grps;\n    }\n    static arrayAtomX(mol) {\n        let x = Vec.numberArray(0, mol.numAtoms);\n        for (let n = x.length - 1; n >= 0; n--)\n            x[n] = mol.atomX(n + 1);\n        return x;\n    }\n    static arrayAtomY(mol) {\n        let y = Vec.numberArray(0, mol.numAtoms);\n        for (let n = y.length - 1; n >= 0; n--)\n            y[n] = mol.atomY(n + 1);\n        return y;\n    }\n    static arrayAtomMapNum(mol) {\n        let mapnum = Vec.numberArray(0, mol.numAtoms);\n        for (let n = mapnum.length - 1; n >= 0; n--)\n            mapnum[n] = mol.atomMapNum(n + 1);\n        return mapnum;\n    }\n    static molecularFormula(mol, punctuation) {\n        let puncEnter = '', puncExit = '', puncEnterSuper = '', puncExitSuper = '';\n        if (punctuation == true)\n            [puncEnter, puncExit] = ['{', '}', '{^', '}'];\n        else if (punctuation instanceof Array) {\n            puncEnter = punctuation[0];\n            puncExit = punctuation[1];\n            puncEnterSuper = punctuation[2];\n            puncExitSuper = punctuation[3];\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                mol = mol.clone();\n                MolUtil.expandAbbrevs(mol, false);\n                break;\n            }\n        let countC = 0, countH = 0;\n        let elements = Vec.stringArray('', mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            countH += mol.atomHydrogens(n);\n            let el = mol.atomElement(n);\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL)\n                el = puncEnterSuper + mol.atomIsotope(n) + puncExitSuper + el;\n            if (el == 'C')\n                countC++;\n            else if (el == 'H')\n                countH++;\n            else\n                elements[n - 1] = el;\n        }\n        elements.sort();\n        let formula = '';\n        if (countC > 0)\n            formula += 'C';\n        if (countC > 1) {\n            if (punctuation)\n                formula += puncEnter;\n            formula += countC;\n            if (punctuation)\n                formula += puncExit;\n        }\n        if (countH > 0)\n            formula += 'H';\n        if (countH > 1) {\n            if (punctuation)\n                formula += puncEnter;\n            formula += countH;\n            if (punctuation)\n                formula += puncExit;\n        }\n        for (let n = 0; n < elements.length; n++)\n            if (elements[n].length > 0) {\n                let count = 1;\n                for (; n + 1 < elements.length && elements[n] == elements[n + 1]; n++)\n                    count++;\n                formula += elements[n];\n                if (count > 1) {\n                    if (punctuation)\n                        formula += puncEnter;\n                    formula += count;\n                    if (punctuation)\n                        formula += puncExit;\n                }\n            }\n        return formula.toString();\n    }\n    static molecularWeight(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                mol = mol.clone();\n                MolUtil.expandAbbrevs(mol, false);\n                break;\n            }\n        let mw = 0;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            mw += mol.atomHydrogens(n) * Chemistry.NATURAL_ATOMIC_WEIGHTS[1];\n            let iso = mol.atomIsotope(n);\n            if (iso != Molecule.ISOTOPE_NATURAL) {\n                mw += iso;\n                continue;\n            }\n            let an = Molecule.elementAtomicNumber(mol.atomElement(n));\n            if (an > 0 && an < Chemistry.NATURAL_ATOMIC_WEIGHTS.length)\n                mw += Chemistry.NATURAL_ATOMIC_WEIGHTS[an];\n        }\n        return mw;\n    }\n    static removeDuplicateBonds(mol) {\n        let bpri = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let p = Math.min(mol.bondFrom(n), mol.bondTo(n)) * mol.numAtoms + Math.max(mol.bondFrom(n), mol.bondTo(n));\n            bpri.push(p);\n        }\n        let bidx = Vec.idxSort(bpri);\n        let keepmask = Vec.booleanArray(false, bidx.length);\n        let p = 0;\n        while (p < bidx.length) {\n            let sz = 1;\n            while (p + sz < bidx.length && bpri[bidx[p]] == bpri[bidx[p + sz]])\n                sz++;\n            let best = p;\n            for (let n = p + 1; n < p + sz; n++) {\n                let b1 = bidx[best] + 1, b2 = bidx[n] + 1;\n                let a1 = mol.bondFrom(b1), a2 = mol.bondTo(b1);\n                let el1 = mol.atomElement(a1), el2 = mol.atomElement(a2);\n                let limit1 = 0, limit2 = 0;\n                if (el1 == 'C' || el1 == 'N')\n                    limit1 = 4;\n                else if (el1 == 'O')\n                    limit1 = 3;\n                if (el2 == 'C' || el2 == 'N')\n                    limit2 = 4;\n                else if (el2 == 'O')\n                    limit2 = 3;\n                if (limit1 > 0 || limit2 > 0) {\n                    let boB1A1 = 0, boB1A2 = 0, boB2A1 = 0, boB2A2 = 0;\n                    for (let i = 1; i <= mol.numBonds; i++) {\n                        if (i != b2 && (mol.bondFrom(i) == a1 || mol.bondTo(i) == a1))\n                            boB1A1 += mol.bondOrder(i);\n                        if (i != b2 && (mol.bondFrom(i) == a2 || mol.bondTo(i) == a2))\n                            boB1A2 += mol.bondOrder(i);\n                        if (i != b1 && (mol.bondFrom(i) == a1 || mol.bondTo(i) == a1))\n                            boB2A1 += mol.bondOrder(i);\n                        if (i != b1 && (mol.bondFrom(i) == a2 || mol.bondTo(i) == a2))\n                            boB2A2 += mol.bondOrder(i);\n                    }\n                    let bad1 = 0, bad2 = 0;\n                    if (limit1 > 0 && boB1A1 > limit1)\n                        bad1++;\n                    if (limit2 > 0 && boB1A2 > limit2)\n                        bad1++;\n                    if (limit1 > 0 && boB2A1 > limit1)\n                        bad2++;\n                    if (limit2 > 0 && boB2A2 > limit2)\n                        bad2++;\n                    if (bad1 < bad2)\n                        continue;\n                    if (bad1 > bad2) {\n                        best = n;\n                        continue;\n                    }\n                }\n                let exotic1 = 2 * mol.bondOrder(b1), exotic2 = 2 * mol.bondOrder(b2);\n                exotic1 += (exotic1 == 0 ? 4 : 0) + (mol.bondType(b1) != Molecule.BONDTYPE_NORMAL ? 1 : 0);\n                exotic2 += (exotic2 == 0 ? 4 : 0) + (mol.bondType(b2) != Molecule.BONDTYPE_NORMAL ? 1 : 0);\n                if (exotic2 > exotic1)\n                    best = n;\n            }\n            keepmask[bidx[best]] = true;\n            p += sz;\n        }\n        for (let n = mol.numBonds; n >= 1; n--)\n            if (!keepmask[n - 1] || mol.bondFrom(n) == mol.bondTo(n))\n                mol.deleteBond(n);\n    }\n    static calculateWalkWeight(mol, atom) {\n        let ccsz = 0, cc = Graph.fromMolecule(mol).calculateComponents();\n        for (let n = 0; n < cc.length; n++)\n            if (cc[n] == cc[atom - 1])\n                ccsz++;\n        let w = Vec.numberArray(1, mol.numAtoms), wn = Vec.numberArray(0, mol.numAtoms);\n        w[atom - 1] = 0;\n        for (; ccsz > 0; ccsz--) {\n            for (let n = 0; n < mol.numAtoms; n++)\n                wn[n] = w[n];\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let a1 = mol.bondFrom(n) - 1, a2 = mol.bondTo(n) - 1;\n                w[a1] += wn[a2] * 0.1;\n                w[a2] += wn[a1] * 0.1;\n            }\n            w[atom - 1] = 0;\n        }\n        return w;\n    }\n    static totalHydrogens(mol, atom) {\n        let hc = mol.atomHydrogens(atom);\n        let adj = mol.atomAdjList(atom);\n        for (let n = 0; n < adj.length; n++)\n            if (mol.atomElement(adj[n]) == 'H')\n                hc++;\n        return hc;\n    }\n    static stripHydrogens(mol, force = false) {\n        for (let n = mol.numAtoms; n >= 1; n--)\n            if ((force && mol.atomElement(n) == 'H') || this.boringHydrogen(mol, n))\n                mol.deleteAtomAndBonds(n);\n    }\n    static boringHydrogen(mol, atom) {\n        if (mol.atomElement(atom) != 'H')\n            return false;\n        if (mol.atomCharge(atom) != 0 || mol.atomUnpaired(atom) != 0)\n            return false;\n        if (mol.atomIsotope(atom) != Molecule.ISOTOPE_NATURAL)\n            return false;\n        if (Vec.notBlank(mol.atomExtra(atom)) || Vec.notBlank(mol.atomTransient(atom)))\n            return false;\n        if (mol.atomAdjCount(atom) != 1)\n            return false;\n        let other = mol.atomAdjList(atom)[0];\n        if (mol.atomElement(other) == 'H')\n            return false;\n        let bond = mol.atomAdjBonds(atom)[0];\n        if (mol.bondOrder(bond) != 1 || mol.bondType(bond) != Molecule.BONDTYPE_NORMAL)\n            return false;\n        if (mol.atomHExplicit(other) != Molecule.HEXPLICIT_UNKNOWN)\n            return false;\n        if (Molecule.HYVALENCE_EL.indexOf(mol.atomElement(other)) < 0)\n            return false;\n        return true;\n    }\n    static createHydrogens(mol, position) {\n        if (position == null)\n            position = false;\n        let na = mol.numAtoms;\n        for (let n = 1; n <= na; n++) {\n            let hc = mol.atomHydrogens(n);\n            if (hc == 0)\n                continue;\n            if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN)\n                mol.setAtomHExplicit(n, 0);\n            if (!position) {\n                for (; hc > 0; hc--) {\n                    let a = mol.addAtom('H', mol.atomX(n), mol.atomY(n));\n                    mol.addBond(n, a, 1);\n                }\n            }\n            else\n                SketchUtil.placeAdditionalHydrogens(mol, n, hc);\n        }\n        return mol.numAtoms - na;\n    }\n    static atomVec3(mol, atom) {\n        if (mol.is3D())\n            return [mol.atomX(atom), mol.atomY(atom), mol.atomZ(atom)];\n        else\n            return [mol.atomX(atom), mol.atomY(atom), 0];\n    }\n    static atomOxidationState(mol, atom) {\n        if (mol.atomAdjCount(atom) == 0)\n            return null;\n        if (this.hasAbbrev(mol, atom))\n            return null;\n        let atno = mol.atomicNumber(atom);\n        if (atno == 0)\n            return null;\n        let nonMetal = atno == Chemistry.ELEMENT_H || Chemistry.ELEMENT_BLOCKS[atno] == 2;\n        let oxstate = mol.atomHydrogens(atom) + (nonMetal ? -mol.atomCharge(atom) : mol.atomCharge(atom));\n        for (let b of mol.atomAdjBonds(atom)) {\n            let bo = mol.bondOrder(b), other = mol.bondOther(b, atom);\n            let chalco = ['O', 'S', 'Se', 'Te'].includes(mol.atomElement(other));\n            if (nonMetal || chalco)\n                oxstate += bo;\n            else\n                oxstate += bo % 2;\n        }\n        if (atno == Chemistry.ELEMENT_H && oxstate == 1)\n            return null;\n        if (atno == Chemistry.ELEMENT_B && oxstate == 3)\n            return null;\n        if (atno == Chemistry.ELEMENT_C && oxstate == 4)\n            return null;\n        if (atno == Chemistry.ELEMENT_N && oxstate == 3)\n            return null;\n        if (atno == Chemistry.ELEMENT_O && oxstate == 2)\n            return null;\n        if (atno == Chemistry.ELEMENT_S && (oxstate == 2 || oxstate == 4 || oxstate == 6))\n            return null;\n        if (atno == Chemistry.ELEMENT_P && (oxstate == 3 || oxstate == 5))\n            return null;\n        if ((atno == Chemistry.ELEMENT_F || atno == Chemistry.ELEMENT_Cl ||\n            atno == Chemistry.ELEMENT_Br || atno == Chemistry.ELEMENT_I) && oxstate == 1)\n            return null;\n        return oxstate;\n    }\n    static oxidationStateText(oxstate) {\n        if (oxstate == 0)\n            return '0';\n        let str = oxstate < 0 ? '-' : '';\n        let absox = Math.abs(oxstate);\n        if (absox == 1)\n            str += 'I';\n        else if (absox == 2)\n            str += 'II';\n        else if (absox == 3)\n            str += 'III';\n        else if (absox == 4)\n            str += 'IV';\n        else if (absox == 5)\n            str += 'V';\n        else if (absox == 6)\n            str += 'VI';\n        else if (absox == 7)\n            str += 'VII';\n        else if (absox == 8)\n            str += 'VIII';\n        else if (absox == 9)\n            str += 'IX';\n        else if (absox == 10)\n            str += 'X';\n        else if (absox == 11)\n            str += 'XI';\n        else if (absox == 12)\n            str += 'XII';\n        else\n            str = (oxstate > 0 ? '+' : '') + oxstate;\n        return str;\n    }\n}\nMolUtil.TEMPLATE_ATTACHMENT = 'X';\nMolUtil.ABBREV_ATTACHMENT = '*';\n//# sourceMappingURL=MolUtil.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs\");","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/data/Molecule';\n\nexport interface InChIResult\n{\n\tinchi:string;\n\tinchiKey:string;\n}\n\nexport abstract class InChIDelegate\n{\n\tpublic async generate(mol:Molecule):Promise<InChIResult>\n\t{\n\t\tthrow new Error('InChI not implemented.');\n\t};\n}","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {MolUtil} from 'webmolkit/data/MolUtil';\nimport {MDLMOLWriter} from 'webmolkit/data/MDLWriter';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport {getGlobal} from '@electron/remote';\nimport {InChIDelegate, InChIResult} from '../mixture/InChIDelegate';\n\n/*\n\tInteroperability with InChI technology: the generator program is a native binary, the location of which\n\tneeds to be discovered. Each generation operation involves a trip to the external execution subsystem.\n*/\n\nlet execLocation:string = null;\nlet inchi:InChI = null;\n\nexport class InChI extends InChIDelegate\n{\n\t// optional override: when using the Emscripten-ported version of InChI, set this function to call the\n\t// natively encoded implementation\n\tpublic static nativeMolfileToInChI:(mdlmol:string, options:string) => Promise<string> = null;\n\n\tprivate available = false;\n\tprivate inchiPath = execLocation;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tif (!this.inchiPath)\n\t\t{\n\t\t\tthis.inchiPath = getGlobal('INCHI_EXEC');\n\t\t}\n\n\t\tif (this.inchiPath)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfs.accessSync(this.inchiPath, fs.constants.X_OK);\n\t\t\t\tthis.available = true;\n\t\t\t}\n\t\t\tcatch (ex) {} // not available\n\t\t}\n\t}\n\n\t// specify where the executable file is (overrides the global option)\n\tpublic static hasExecutable():boolean\n\t{\n\t\treturn !!execLocation;\n\t}\n\tpublic static setExecutable(exec:string):void\n\t{\n\t\texecLocation = exec;\n\t}\n\n\t// returns true if we have reason to believe the InChI executable can be run on demand\n\tpublic static isAvailable():boolean\n\t{\n\t\tif (this.nativeMolfileToInChI != null) return true;\n\t\tif (!inchi) inchi = new InChI();\n\t\treturn inchi.available;\n\t}\n\n\t// converts a molecule to an InChI string, if possible; should check the availability first, for graceful\n\t// rejection; failure results in an exception; note that it is executed synchronously: if the executable takes\n\t// a long time to run, this will be a problem for the UI; the return value is [InChI, InChIKey]\n\tpublic async generate(mol:Molecule):Promise<InChIResult>\n\t{\n\t\tmol = mol.clone();\n\t\tMolUtil.expandAbbrevs(mol, true);\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (mol.bondOrder(n) < 1 || mol.bondOrder(n) > 3) mol.setBondOrder(n, 1);\n\n\t\tlet writer = new MDLMOLWriter(mol);\n\t\twriter.enhancedFields = false;\n\t\tlet mdlmol = writer.write();\n\n\t\tif (InChI.nativeMolfileToInChI != null)\n\t\t{\n\t\t\tlet inchi = await InChI.nativeMolfileToInChI(mdlmol, '-AuxNone -NoLabels');\n\t\t\treturn {inchi: inchi, inchiKey: null}; // NOTE: this version doesn't provide a key; address this in the future\n\t\t}\n\n\t\tif (!inchi) inchi = new InChI();\n\t\tif (!inchi.available) throw 'InChI executable is not available.';\n\n\t\tconst proc = require('child_process');\n\n\t\tlet cmd = inchi.inchiPath.replace(/ /g, '\\\\\\ '); // very crude escaping of spaces\n\t\tlet result = proc.spawnSync(cmd, ['-STDIO', '-AuxNone', '-NoLabels', '-Key'], {input: mdlmol});\n\t\tlet raw = result.stdout.toString(), bits = raw.split('\\n');\n\n\t\tif (bits.length < 2 || !bits[0].startsWith('InChI='))\n\t\t{\n\t\t\tconsole.log('InChI command returned result:\\n' + raw);\n\t\t\tconsole.log('Molecule:\\n' + mol);\n\t\t\tconsole.log('MDL Molfile:\\n' + mdlmol);\n\t\t\tthrow 'Invalid returned by InChI generator: ' + raw;\n\t\t}\n\t\treturn {inchi: bits[0], inchiKey: bits[1]};\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {MenuBannerCommand} from '../web/MenuBanner';\nimport {openNewWindow} from './startup';\nimport {InChI} from '../nodejs/InChI';\n\n/*\n\tBase class for \"main windows\": an object that takes up the entire browser window document, responds to resizing, etc.\n*/\n\nexport abstract class MainPanel\n{\n\tprotected inchi = new InChI();\n\n\t// ------------ public methods ------------\n\n\tconstructor(public root:DOM)\n\t{\n\t\tdom('body').css({'overflow': 'hidden'});\n\n\t\troot.css({'width': '100%', 'height': document.documentElement.clientHeight + 'px'});\n\t\twindow.addEventListener('resize', () => this.onResize());\n\t\troot.css({'user-select': 'none'});\n\n\t\t(this.root.el as any).addEventListener('menuAction', (event:any, cmd:string) => this.menuAction(cmd as MenuBannerCommand));\n\t}\n\n\t// stub: may be called early on to provide a source file upon which to work\n\tpublic loadFile(filename:string):void\n\t{\n\t}\n\n\t// minimum required functionality for resizing windows; override to capture\n\tprotected onResize():void\n\t{\n\t\tthis.root.css({'height': document.documentElement.clientHeight + 'px'});\n\t}\n\n\t// optionally override this to pre-empt menu actions\n\tpublic menuAction(cmd:string):void\n\t{\n\t\tif (cmd == MenuBannerCommand.NewMixture) openNewWindow('MixturePanel');\n\t\telse if (cmd == MenuBannerCommand.NewCollection) openNewWindow('CollectionPanel');\n\t\telse if (cmd == MenuBannerCommand.Open) this.actionFileOpen();\n\t\telse if (cmd == MenuBannerCommand.Save) this.actionFileSave();\n\t\telse if (cmd == MenuBannerCommand.SaveAs) this.actionFileSaveAs();\n\t\telse this.customMenuAction(cmd);\n\t}\n\n\t// override this to interpret menu non-default menu actions\n\tpublic customMenuAction(cmd:string):void\n\t{\n\t\tconsole.log('MENU:' + cmd);\n\t}\n\n\t// standard actions that must be implemented\n\tprotected abstract actionFileOpen():void;\n\tprotected abstract actionFileSave():void;\n\tprotected abstract actionFileSaveAs():void;\n\n\t// ------------ private methods ------------\n\n}\n\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Vec } from '../util/Vec';\nexport class ClipboardProxyHandler {\n    copyEvent(andCut, proxy) { return false; }\n    pasteEvent(proxy) { return false; }\n}\nexport class ClipboardProxy {\n    constructor() {\n        this.handlers = [new ClipboardProxyHandler()];\n    }\n    pushHandler(handler) {\n        this.handlers.push(handler);\n    }\n    popHandler() {\n        this.handlers.pop();\n    }\n    currentHandler() {\n        return Vec.last(this.handlers);\n    }\n    triggerCopy(andCut) {\n        if (this.currentHandler().copyEvent(andCut, this))\n            return;\n        document.execCommand(andCut ? 'cut' : 'copy');\n    }\n    triggerPaste() {\n        if (this.currentHandler().pasteEvent(this))\n            return;\n        document.execCommand('paste');\n    }\n    getString() { return null; }\n    setString(str) { }\n    setImage(blob) { }\n    canSetHTML() { return false; }\n    setHTML(html) { }\n    canAlwaysGet() { return false; }\n    downloadString(str, fn) { }\n}\nexport class ClipboardProxyWeb extends ClipboardProxy {\n    constructor() {\n        super();\n        this.lastContent = null;\n        this.fakeTextArea = null;\n        this.busy = false;\n        document.addEventListener('copy', (event) => {\n            var _a;\n            if (this.busy)\n                return null;\n            if ((_a = this.currentHandler()) === null || _a === void 0 ? void 0 : _a.copyEvent(false, this)) {\n                event.preventDefault();\n                return false;\n            }\n        });\n        document.addEventListener('cut', (event) => {\n            var _a;\n            if (this.busy)\n                return null;\n            if ((_a = this.currentHandler()) === null || _a === void 0 ? void 0 : _a.copyEvent(true, this)) {\n                event.preventDefault();\n                return false;\n            }\n        });\n        document.addEventListener('paste', (event) => {\n            var _a;\n            let wnd = window;\n            this.lastContent = null;\n            if (wnd.clipboardData && wnd.clipboardData.getData)\n                this.lastContent = wnd.clipboardData.getData('Text');\n            else if (event.clipboardData && event.clipboardData.getData)\n                this.lastContent = event.clipboardData.getData('text/plain');\n            let consumed = (_a = this.currentHandler()) === null || _a === void 0 ? void 0 : _a.pasteEvent(this);\n            this.lastContent = null;\n            if (consumed) {\n                event.preventDefault();\n                return false;\n            }\n            return true;\n        });\n    }\n    getString() {\n        return this.lastContent;\n    }\n    setString(str) {\n        let fallbackWorkaround = () => {\n            if (this.fakeTextArea == null) {\n                this.fakeTextArea = document.createElement('textarea');\n                this.fakeTextArea.style.fontSize = '12pt';\n                this.fakeTextArea.style.border = '0';\n                this.fakeTextArea.style.padding = '0';\n                this.fakeTextArea.style.margin = '0';\n                this.fakeTextArea.style.position = 'fixed';\n                this.fakeTextArea.style['left'] = '-9999px';\n                this.fakeTextArea.style.top = (window.pageYOffset || document.documentElement.scrollTop) + 'px';\n                this.fakeTextArea.setAttribute('readonly', '');\n                document.body.appendChild(this.fakeTextArea);\n            }\n            this.fakeTextArea.value = str;\n            this.fakeTextArea.select();\n            this.busy = true;\n            document.execCommand('copy');\n            this.busy = false;\n        };\n        if (navigator.clipboard) {\n            navigator.clipboard.writeText(str).then(() => { }, fallbackWorkaround);\n        }\n        else\n            fallbackWorkaround();\n    }\n    setImage(blob) {\n        let item = new ClipboardItem({ 'image/png': blob });\n        this.busy = true;\n        (() => __awaiter(this, void 0, void 0, function* () {\n            yield navigator.clipboard.write([item]);\n            this.busy = false;\n        }))();\n    }\n}\n//# sourceMappingURL=ClipboardProxy.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Vec} from 'webmolkit/util/Vec';\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\n\tUnit definitions and conversions. Units are preferentially stored by URI, displayed by common name, and interconverted\n\tas necessary to other schemes, such as MInChI mnemonics.\n*/\n\nexport enum StandardUnits\n{\n\t// concentration units (these are favoured for most purposes)\n\tpc = 'http://purl.obolibrary.org/obo/UO_0000187', // percent (of arbitrary type)\n\tpcWV = 'http://purl.obolibrary.org/obo/UO_0000164', // percent (weight per volume),\n\tpcWW = 'http://purl.obolibrary.org/obo/UO_0000163', // percent (weight per weight),\n\tpcVV = 'http://purl.obolibrary.org/obo/UO_0000205', // percent (volume per volume),\n\tpcMM = 'http://purl.obolibrary.org/obo/UO_0000076', // percent (mole per mole)\n\tratio = 'http://purl.obolibrary.org/obo/UO_0000190', // ratio (numerator only; nominally by volume)\n\tmol_L = 'http://purl.obolibrary.org/obo/UO_0000062', // moles per litre (mol/L)\n\tmmol_L = 'http://purl.obolibrary.org/obo/UO_0000063', // milli-moles per litre\n\tumol_L = 'http://purl.obolibrary.org/obo/UO_0000064', // micro-moles per litre\n\tnmol_L = 'http://purl.obolibrary.org/obo/UO_0000065', // nano-moles per litre\n\tpmol_L = 'http://purl.obolibrary.org/obo/UO_0000066', // pico-moles per litre\n\t/* could be handy to allow these... maybe\n\tlogM = 'http://www.bioassayontology.org/bao#BAO_0000101', // log10 of mol/L\n\tperM = 'http://www.bioassayontology.org/bao#BAO_0000102', // -log10 of mol/L */\n\tg_L = 'http://purl.obolibrary.org/obo/UO_0000175', // grams per litre (g/L)\n\tmg_L = 'http://purl.obolibrary.org/obo/UO_0000273', // milligrams per litre (aka micrograms per mL)\n\tug_L = 'http://purl.obolibrary.org/obo/UO_0000275', // micrograms per litre (aka nanograms per mL)\n\tmol_kg = 'http://purl.obolibrary.org/obo/UO_0000068', // moles per kilogram\n\n\t// absolute units (these are often converted to concentrations when possible)\n\tkg = 'http://purl.obolibrary.org/obo/UO_0000009', // kilogram\n\tg = 'http://purl.obolibrary.org/obo/UO_0000021', // gram\n\tmg = 'http://purl.obolibrary.org/obo/UO_0000022', // milligram\n\tug = 'http://purl.obolibrary.org/obo/UO_0000023', // microgram\n\tng = 'http://purl.obolibrary.org/obo/UO_0000024', // nanogram\n\tL = 'http://purl.obolibrary.org/obo/UO_0000099', // litre\n\tmL = 'http://purl.obolibrary.org/obo/UO_0000098', // millilitre\n\tuL = 'http://purl.obolibrary.org/obo/UO_0000101', // microlitre\n\tnL = 'http://purl.obolibrary.org/obo/UO_0000102', // nanolitre\n\tmol = 'http://purl.obolibrary.org/obo/UO_0000013', // mole\n\tmmol = 'http://purl.obolibrary.org/obo/UO_0000040', // millimole\n\tumol = 'http://purl.obolibrary.org/obo/UO_0000039', // micromole\n\tnmol = 'http://purl.obolibrary.org/obo/UO_0000041', // nanomole\n\n\t// other\n\tppm = 'placeholder1',\n\tppb = 'placeholder2',\n}\n\nconst PAIR_UNIT_NAMES:any[] =\n[\n\t// form: [reference URI, primary display name, ...optional alternative names]\n\n\t[StandardUnits.pc, '%'],\n\t[StandardUnits.pcWV, 'w/v%'],\n\t[StandardUnits.pcWW, 'w/w%'],\n\t[StandardUnits.pcVV, 'v/v%'],\n\t[StandardUnits.pcMM, 'mol/mol%'],\n\t[StandardUnits.ratio, 'ratio'],\n\t[StandardUnits.mol_L, 'mol/L', 'M'],\n\t[StandardUnits.mmol_L, 'mmol/L', 'mM'],\n\t[StandardUnits.umol_L, '\\u{03BC}mol/L', 'umol/L', 'uM'],\n\t[StandardUnits.nmol_L, 'nmol/L', 'nM'],\n\t[StandardUnits.pmol_L, 'pmol/L', 'pM'],\n\t/*[StandardUnits.logM, ''],\n\t[StandardUnits.perM, ''],*/\n\t[StandardUnits.g_L, 'g/L'],\n\t[StandardUnits.mg_L, 'mg/L'],\n\t[StandardUnits.ug_L, '\\u{03BC}g/L', 'ug/L'],\n\t[StandardUnits.mol_kg, 'mol/kg'],\n\n\t[StandardUnits.kg, 'kg'],\n\t[StandardUnits.g, 'g'],\n\t[StandardUnits.mg, 'mg'],\n\t[StandardUnits.ug, '\\u{03BC}g', 'ug'],\n\t[StandardUnits.ng, 'ng'],\n\t[StandardUnits.L, 'L'],\n\t[StandardUnits.mL, 'mL'],\n\t[StandardUnits.uL, '\\u{03BC}L', 'uL'],\n\t[StandardUnits.nL, 'nL'],\n\t[StandardUnits.mol, 'mol'],\n\t[StandardUnits.mmol, 'mmol'],\n\t[StandardUnits.umol, '\\u{03BC}mol', 'umol'],\n\t[StandardUnits.nmol, 'nmol'],\n\n\t[StandardUnits.ppm, 'ppm'],\n\t[StandardUnits.ppb, 'ppb'],\n];\n\nconst PAIR_UNIT_MINCHI:any[] =\n[\n\t// [enum type, MInChI type, scaling] ... scaling factor is for going from standard to MInChI\n\t[StandardUnits.pc, 'pp', 1],\n\t[StandardUnits.pcWV, 'wv', 0.01],\n\t[StandardUnits.pcWW, 'wf', 0.01],\n\t[StandardUnits.pcVV, 'vf', 0.01],\n\t[StandardUnits.pcMM, 'mf', 0.01],\n\t[StandardUnits.ratio, 'rt', 1],\n\t[StandardUnits.mol_L, 'mr', 1],\n\t[StandardUnits.mmol_L, 'mr', 1E-3],\n\t[StandardUnits.umol_L, 'mr', 1E-6],\n\t[StandardUnits.nmol_L, 'mr', 1E-9],\n\t[StandardUnits.pmol_L, 'mr', 1E-12],\n\t/*[StandardUnits.logM, '', ],\n\t[StandardUnits.perM, '', ],*/\n\t[StandardUnits.g_L, 'wv', 1E-3],\n\t[StandardUnits.mg_L, 'wv', 1E-6],\n\t[StandardUnits.ug_L, 'wv', 1E-9],\n\t[StandardUnits.mol_kg, 'mb', 1],\n\t[StandardUnits.ppm, 'pp', 1E-6],\n\t[StandardUnits.ppb, 'pp', 1E-9],\n];\n\nexport class Units\n{\n\tpublic static STANDARD_LIST:string[] = []; // all of the applicable unit URIs\n\tpublic static COMMON_NAMES:string[] = []; // all of the preferred names (same order as above)\n\tpublic static URI_TO_NAME:Record<string, string> = {}; // each URI has one preferred display name\n\tpublic static NAME_TO_URI:Record<string, string> = {}; // multiple unit forms can point to the same URI\n\tpublic static URI_TO_MINCHI:Record<string, [string, number]> = {}; // URI to MInChI, when applicable\n\n\tpublic static setup():void\n\t{\n\t\tfor (let pair of PAIR_UNIT_NAMES)\n\t\t{\n\t\t\tlet uri:string = pair[0], name:string = pair[1];\n\t\t\tthis.STANDARD_LIST.push(uri);\n\t\t\tthis.COMMON_NAMES.push(name);\n\t\t\tthis.URI_TO_NAME[uri] = name;\n\t\t\t\n\t\t\t//this.NAME_TO_URI[name] = uri; (some of them have alternate names)\n\t\t\tfor (let n = 1; n <= pair.length; n++) this.NAME_TO_URI[pair[n]] = uri;\n\t\t}\n\t\tfor (let pair of PAIR_UNIT_MINCHI)\n\t\t{\n\t\t\tlet uri:string = pair[0], name:string = pair[1], scale:number = pair[2];\n\t\t\tthis.URI_TO_MINCHI[uri] = [name, scale];\n\t\t}\n\t\tthis.setup = () => {}; // calling it again is a nop\n\t}\n\n\tpublic static standardList():string[]\n\t{\n\t\tthis.setup();\n\t\treturn this.STANDARD_LIST;\n\t}\n\tpublic static commonNames():string[]\n\t{\n\t\tthis.setup();\n\t\treturn this.COMMON_NAMES;\n\t}\n\tpublic static uriToName(uri:string):string\n\t{\n\t\tthis.setup();\n\t\treturn this.URI_TO_NAME[uri];\n\t}\n\tpublic static nameToURI(name:string):string\n\t{\n\t\tthis.setup();\n\t\treturn this.NAME_TO_URI[name];\n\t}\n\n\t// converts a uri/value pair into mnemonic/value, ready to be exported to MInChI-style units; if the URI is not in the list of\n\t// things that can be converted, returns nulls\n\tpublic static convertToMInChI(uri:string, values:number[]):[string, number[]]\n\t{\n\t\tlet [mnemonic, scale] = this.URI_TO_MINCHI[uri] || [null, null];\n\t\tif (!mnemonic) return [null, null];\n\t\treturn [mnemonic, Vec.mul(values, scale)];\n\t}\n}\n\n","import { fltEqual } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { ForeignMoleculeTransient } from './ForeignMolecule';\nimport { Graph } from './Graph';\nexport var DotPathBond;\n(function (DotPathBond) {\n    DotPathBond[DotPathBond[\"O0\"] = 0] = \"O0\";\n    DotPathBond[DotPathBond[\"O01\"] = 1] = \"O01\";\n    DotPathBond[DotPathBond[\"O1\"] = 2] = \"O1\";\n    DotPathBond[DotPathBond[\"O12\"] = 3] = \"O12\";\n    DotPathBond[DotPathBond[\"O2\"] = 4] = \"O2\";\n    DotPathBond[DotPathBond[\"O23\"] = 5] = \"O23\";\n    DotPathBond[DotPathBond[\"O3\"] = 6] = \"O3\";\n    DotPathBond[DotPathBond[\"O3X\"] = 7] = \"O3X\";\n})(DotPathBond || (DotPathBond = {}));\nexport var DotPathCharge;\n(function (DotPathCharge) {\n    DotPathCharge[DotPathCharge[\"N1X\"] = -3] = \"N1X\";\n    DotPathCharge[DotPathCharge[\"N1\"] = -2] = \"N1\";\n    DotPathCharge[DotPathCharge[\"N01\"] = -1] = \"N01\";\n    DotPathCharge[DotPathCharge[\"Z0\"] = 0] = \"Z0\";\n    DotPathCharge[DotPathCharge[\"P01\"] = 1] = \"P01\";\n    DotPathCharge[DotPathCharge[\"P1\"] = 2] = \"P1\";\n    DotPathCharge[DotPathCharge[\"P1X\"] = 3] = \"P1X\";\n})(DotPathCharge || (DotPathCharge = {}));\nexport class DotPath {\n    constructor(mol) {\n        this.mol = mol;\n        this.paths = [];\n        if (mol)\n            this.calculate();\n    }\n    clone() {\n        let dup = new DotPath(null);\n        dup.mol = this.mol;\n        dup.maskBlock = this.maskBlock;\n        dup.paths = this.paths.slice(0);\n        return dup;\n    }\n    getBondOrders() {\n        const mol = this.mol;\n        let orders = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            orders.push(mol.bondOrder(n));\n        for (let path of this.paths) {\n            let fract = path.numer / path.denom;\n            for (let n = 1; n <= 5; n++)\n                if (fltEqual(fract, n))\n                    fract = n;\n            for (let b of path.bonds)\n                orders[b - 1] = fract;\n        }\n        return orders;\n    }\n    getBondClasses() {\n        const mol = this.mol;\n        let classes = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bo = mol.bondOrder(n);\n            classes.push(bo == 0 ? 0 :\n                bo == 1 ? 2 :\n                    bo == 2 ? 4 :\n                        bo == 3 ? 6 : 7);\n        }\n        for (let path of this.paths) {\n            let fract = path.numer / path.denom;\n            let bcls = fltEqual(fract, 0) ? 0 :\n                fltEqual(fract, 1) ? 2 :\n                    fltEqual(fract, 2) ? 4 :\n                        fltEqual(fract, 3) ? 6 :\n                            fract < 1 ? 1 :\n                                fract < 2 ? 3 :\n                                    fract < 3 ? 5 : 7;\n            for (let b of path.bonds)\n                classes[b - 1] = bcls;\n        }\n        return classes;\n    }\n    getChargeClasses() {\n        const mol = this.mol;\n        let classes = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let chg = mol.atomCharge(n);\n            classes.push(chg == 0 ? 0 :\n                chg == -1 ? -2 :\n                    chg == 1 ? 2 :\n                        chg < -1 ? -3 : 3);\n        }\n        for (let path of this.paths) {\n            let chg = 0;\n            for (let a of path.atoms)\n                chg += mol.atomCharge(a);\n            chg /= path.atoms.length;\n            let ccls = fltEqual(chg, 0) ? 0 :\n                fltEqual(chg, -1) ? -2 :\n                    fltEqual(chg, 1) ? 2 :\n                        chg > -1 && chg < 0 ? -1 :\n                            chg > 0 && chg < 1 ? 1 :\n                                chg < -1 ? -3 : 3;\n            for (let a of path.atoms)\n                classes[a - 1] = ccls;\n        }\n        return classes;\n    }\n    getAggregateCharges() {\n        const mol = this.mol;\n        let chg = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            chg[n - 1] = mol.atomCharge(n);\n        for (let path of this.paths) {\n            let total = 0;\n            for (let a of path.atoms)\n                total += chg[a - 1];\n            for (let a of path.atoms)\n                chg[a - 1] = total;\n        }\n        return chg;\n    }\n    toString() {\n        let str = 'blocking=' + JSON.stringify(this.maskBlock) + '; paths=' + this.paths.length;\n        for (let p of this.paths)\n            str += ' [' + p.numer + '/' + p.denom + ';a=' + JSON.stringify(p.atoms) + ';b=' + JSON.stringify(p.bonds) + ']';\n        return str;\n    }\n    calculate() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let nonsingle = Vec.booleanArray(false, na), pibonded = Vec.booleanArray(false, na), metalbonded = Vec.booleanArray(false, na);\n        let bondsum = Vec.numberArray(0, na);\n        for (let n = 0; n < na; n++)\n            bondsum[n] = mol.atomHydrogens(n + 1);\n        for (let n = 1; n <= nb; n++) {\n            let bo = mol.bondOrder(n), bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            if (bo != 1) {\n                nonsingle[bfr - 1] = true;\n                nonsingle[bto - 1] = true;\n            }\n            if (bo >= 2) {\n                pibonded[bfr - 1] = true;\n                pibonded[bto - 1] = true;\n            }\n            else {\n                let blk1 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bfr)], blk2 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bto)];\n                if (blk1 >= 3 || blk2 >= 3) {\n                    metalbonded[bfr - 1] = true;\n                    metalbonded[bto - 1] = true;\n                }\n            }\n            bondsum[bfr - 1] += bo;\n            bondsum[bto - 1] += bo;\n            if (mol.bondTransient(n).indexOf(ForeignMoleculeTransient.BondAromatic) >= 0) {\n                pibonded[bfr - 1] = true;\n                pibonded[bto - 1] = true;\n            }\n        }\n        let impliedPi = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++)\n            if (!pibonded[n - 1]) {\n                let adjpi = 0;\n                for (let adj of mol.atomAdjList(n))\n                    if (pibonded[adj - 1] || metalbonded[adj - 1])\n                        adjpi++;\n                if (adjpi >= 2)\n                    impliedPi[n - 1] = true;\n            }\n        for (let n = 0; n < na; n++)\n            if (impliedPi[n])\n                pibonded[n] = true;\n        this.maskBlock = Vec.booleanArray(false, na);\n        let maskMaybe = Vec.booleanArray(false, na);\n        const COULD_BLOCK = [\n            Chemistry.ELEMENT_H,\n            Chemistry.ELEMENT_B, Chemistry.ELEMENT_C, Chemistry.ELEMENT_N, Chemistry.ELEMENT_O, Chemistry.ELEMENT_F,\n            Chemistry.ELEMENT_Al, Chemistry.ELEMENT_Si, Chemistry.ELEMENT_P, Chemistry.ELEMENT_S, Chemistry.ELEMENT_Cl,\n            Chemistry.ELEMENT_Ga, Chemistry.ELEMENT_Ge, Chemistry.ELEMENT_As, Chemistry.ELEMENT_Se, Chemistry.ELEMENT_Br,\n            Chemistry.ELEMENT_In, Chemistry.ELEMENT_Sn, Chemistry.ELEMENT_Sb, Chemistry.ELEMENT_Te, Chemistry.ELEMENT_I,\n            Chemistry.ELEMENT_Tl, Chemistry.ELEMENT_Pb, Chemistry.ELEMENT_Bi, Chemistry.ELEMENT_Po, Chemistry.ELEMENT_At,\n        ];\n        const ACIDS = [\n            Chemistry.ELEMENT_B,\n            Chemistry.ELEMENT_Al, Chemistry.ELEMENT_Si,\n            Chemistry.ELEMENT_Ga, Chemistry.ELEMENT_Ge,\n            Chemistry.ELEMENT_In, Chemistry.ELEMENT_Sn,\n            Chemistry.ELEMENT_Tl, Chemistry.ELEMENT_Pb,\n        ];\n        const BASES = [\n            Chemistry.ELEMENT_N, Chemistry.ELEMENT_O, Chemistry.ELEMENT_F,\n            Chemistry.ELEMENT_P, Chemistry.ELEMENT_S, Chemistry.ELEMENT_Cl,\n            Chemistry.ELEMENT_As, Chemistry.ELEMENT_Se, Chemistry.ELEMENT_Br,\n            Chemistry.ELEMENT_Sb, Chemistry.ELEMENT_Te, Chemistry.ELEMENT_I,\n            Chemistry.ELEMENT_Bi, Chemistry.ELEMENT_Po, Chemistry.ELEMENT_At,\n        ];\n        skip: for (let n = 0; n < na; n++) {\n            const a = n + 1;\n            if (nonsingle[n] || pibonded[n])\n                continue;\n            if (mol.atomCharge(a) != 0 || mol.atomUnpaired(a) != 0)\n                continue;\n            const atno = mol.atomicNumber(a);\n            if (atno == 0) {\n                this.maskBlock[n] = true;\n                continue;\n            }\n            if (COULD_BLOCK.indexOf(atno) < 0)\n                continue;\n            if (bondsum[n] != Chemistry.ELEMENT_BONDING[atno])\n                continue;\n            if (ACIDS.indexOf(atno) >= 0) {\n                for (let adj of mol.atomAdjList(a))\n                    if (BASES.indexOf(mol.atomicNumber(adj)) >= 0)\n                        continue skip;\n            }\n            if (BASES.indexOf(atno) >= 0) {\n                for (let adj of mol.atomAdjList(a))\n                    if (ACIDS.indexOf(mol.atomicNumber(adj)) >= 0)\n                        continue skip;\n            }\n            maskMaybe[n] = true;\n            if (atno == Chemistry.ELEMENT_C) {\n                let hasMetal = false;\n                for (let adj of mol.atomAdjList(a))\n                    if (COULD_BLOCK.indexOf(mol.atomicNumber(adj)) < 0)\n                        hasMetal = true;\n                if (!hasMetal)\n                    this.maskBlock[n] = true;\n            }\n            else if (atno == Chemistry.ELEMENT_H) {\n                this.maskBlock[n] = true;\n            }\n        }\n        skip: for (let n = 0; n < na; n++)\n            if (maskMaybe[n] && !this.maskBlock[n]) {\n                for (let a of mol.atomAdjList(n + 1))\n                    if (!maskMaybe[a - 1])\n                        continue skip;\n                this.maskBlock[n] = true;\n            }\n        let g = Graph.fromMolecule(mol);\n        for (let n = 0; n < na; n++)\n            if (this.maskBlock[n])\n                g.isolateNode(n);\n        for (let cc of g.calculateComponentGroups()) {\n            if (cc.length == 1)\n                continue;\n            let amask = Vec.idxMask(cc, na);\n            Vec.addTo(cc, 1);\n            let p = {\n                atoms: cc,\n                bonds: [],\n                numer: 0,\n                denom: 0\n            };\n            for (let n = 1; n <= nb; n++)\n                if (amask[mol.bondFrom(n) - 1] && amask[mol.bondTo(n) - 1])\n                    p.bonds.push(n);\n            let totalHave = 0, totalWant = 0;\n            for (let a of p.atoms) {\n                let others = mol.atomHydrogens(a);\n                for (let o of mol.atomAdjList(a))\n                    if (!amask[o - 1])\n                        others++;\n                let atno = mol.atomicNumber(a);\n                let have = Chemistry.ELEMENT_VALENCE[atno] - mol.atomCharge(a) - others;\n                let want = Chemistry.ELEMENT_SHELL[atno] - Chemistry.ELEMENT_VALENCE[atno] - others;\n                totalHave += have;\n                totalWant += want;\n            }\n            let electrons = Math.min(totalHave, totalWant);\n            p.numer = electrons;\n            p.denom = 2 * p.bonds.length;\n            this.paths.push(p);\n        }\n    }\n}\n//# sourceMappingURL=DotPath.js.map","import { GeomUtil } from '../util/Geom';\nimport { angleDiff, angleDiffPos, DEGRAD, norm2_xyz, norm_xyz } from '../util/util';\nimport { Permutation, Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nexport class Stereochemistry {\n    constructor(meta) {\n        this.meta = meta;\n        this.mol = meta.mol;\n        this.priority = Vec.numberArray(0, this.mol.numAtoms);\n        this.chiralTetra = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n        this.cistransBond = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numBonds);\n        this.squarePlanar = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n    }\n    calculate() {\n        this.isH = Vec.booleanArray(false, this.mol.numAtoms);\n        for (let n = this.mol.numAtoms; n >= 1; n--)\n            this.isH[n - 1] = this.mol.atomElement(n) == 'H';\n        this.buildPriority();\n        this.buildTetraChirality();\n        this.buildBondCisTrans();\n        this.buildPlanarCisTrans();\n        this.buildOctaChirality();\n    }\n    atomPriority(atom) { return this.priority[atom - 1]; }\n    atomTetraChirality(atom) { return this.chiralTetra[atom - 1]; }\n    bondSideStereo(bond) { return this.cistransBond[bond - 1]; }\n    atomPlanarStereo(atom) { return this.squarePlanar[atom - 1]; }\n    getPriorities() { return this.priority.slice(0); }\n    getAtomTetraChiral() { return this.chiralTetra.slice(0); }\n    getBondSideStereo() { return this.cistransBond.slice(0); }\n    static create(meta) {\n        let stereo = new Stereochemistry(meta);\n        stereo.calculate();\n        return stereo;\n    }\n    static rubricTetrahedral(mol, atom) {\n        if (mol.atomAdjCount(atom) < 3 || mol.atomAdjCount(atom) + mol.atomHydrogens(atom) != 4)\n            return null;\n        let adjBonds = mol.atomAdjBonds(atom);\n        let hasWedge = false;\n        for (let n = 0; n < adjBonds.length; n++) {\n            let bt = mol.bondType(adjBonds[n]);\n            if (bt == Molecule.BONDTYPE_UNKNOWN)\n                return null;\n            if (mol.bondFrom(adjBonds[n]) != atom)\n                continue;\n            if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                hasWedge = true;\n        }\n        if (!hasWedge && !mol.is3D())\n            return null;\n        let adj = mol.atomAdjList(atom);\n        let x = [0, 0, 0, 0];\n        let y = [0, 0, 0, 0];\n        let z = [0, 0, 0, 0];\n        let numShort = 0, numWedges = 0;\n        for (let n = 0; n < adjBonds.length; n++) {\n            const bfr = mol.bondFrom(adjBonds[n]), bt = mol.bondType(adjBonds[n]);\n            x[n] = mol.atomX(adj[n]) - mol.atomX(atom);\n            y[n] = mol.atomY(adj[n]) - mol.atomY(atom);\n            if (mol.is3D()) {\n                z[n] = mol.atomZ(adj[n]) - mol.atomZ(atom);\n            }\n            else if (bfr == atom) {\n                if (bt == Molecule.BONDTYPE_INCLINED) {\n                    z[n] = 1;\n                    numWedges++;\n                }\n                else if (bt == Molecule.BONDTYPE_DECLINED) {\n                    z[n] = -1;\n                    numWedges++;\n                }\n            }\n            let dsq = norm_xyz(x[n], y[n], z[n]);\n            if (dsq < 0.01 * 0.01) {\n                numShort++;\n                if (numShort > 1)\n                    return null;\n            }\n        }\n        if (adjBonds.length == 3) {\n            adj.push(0);\n            if (!mol.is3D() && numWedges == 1) {\n                let th0 = Math.atan2(y[0], x[0]), th1 = Math.atan2(y[1], x[1]), th2 = Math.atan2(y[2], x[2]);\n                let i1 = 1, i2 = 2;\n                if (angleDiffPos(th1, th0) > angleDiffPos(th2, th0)) {\n                    i2 = 1;\n                    i1 = 2;\n                }\n                x[0] = 1.5;\n                y[0] = 0;\n                x[1] = -0.75;\n                y[i1] = 1.3;\n                x[2] = -0.75;\n                y[i2] = -1.3;\n            }\n            else {\n                x[3] = -(x[0] + x[1] + x[2]);\n                y[3] = -(y[0] + y[1] + y[2]);\n                z[3] = -(z[0] + z[1] + z[2]);\n                let dsq = norm2_xyz(x[3], y[3], z[3]);\n                if (dsq < 0.01 * 0.01)\n                    return null;\n                let inv = 1.0 / Math.sqrt(dsq);\n                x[3] *= inv;\n                y[3] *= inv;\n                z[3] *= inv;\n            }\n        }\n        let one = 0, two = 0;\n        for (let i = 1; i <= 6; i++) {\n            let a = 0, b = 0;\n            if (i == 1) {\n                a = 1;\n                b = 2;\n            }\n            else if (i == 2) {\n                a = 2;\n                b = 3;\n            }\n            else if (i == 3) {\n                a = 3;\n                b = 1;\n            }\n            else if (i == 4) {\n                a = 2;\n                b = 1;\n            }\n            else if (i == 5) {\n                a = 3;\n                b = 2;\n            }\n            else if (i == 6) {\n                a = 1;\n                b = 3;\n            }\n            let xx = y[a] * z[b] - y[b] * z[a] - x[0];\n            let yy = z[a] * x[b] - z[b] * x[a] - y[0];\n            let zz = x[a] * y[b] - x[b] * y[a] - z[0];\n            if (i <= 3)\n                one += xx * xx + yy * yy + zz * zz;\n            else\n                two += xx * xx + yy * yy + zz * zz;\n        }\n        if (two > one)\n            Vec.swap(adj, 2, 3);\n        return adj;\n    }\n    static rubricSquarePlanar(mol, atom) {\n        if (mol.atomAdjCount(atom) != 4)\n            return null;\n        if (!mol.is3D()) {\n            let ninc = 0, ndec = 0;\n            for (let b of mol.atomAdjBonds(atom)) {\n                let bt = mol.bondType(b);\n                if (bt == Molecule.BONDTYPE_INCLINED)\n                    ninc++;\n                else if (bt == Molecule.BONDTYPE_DECLINED)\n                    ndec++;\n            }\n            if (ninc == 2 && ndec == 2) { }\n            else if (ninc == 2 && ndec == 0) { }\n            else if (ninc == 0 && ndec == 2) { }\n            else\n                return null;\n        }\n        let adj = mol.atomAdjList(atom);\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v1 = Vec.sub(MolUtil.atomVec3(mol, adj[0]), v0);\n        let v2 = Vec.sub(MolUtil.atomVec3(mol, adj[1]), v0);\n        let v3 = Vec.sub(MolUtil.atomVec3(mol, adj[2]), v0);\n        let v4 = Vec.sub(MolUtil.atomVec3(mol, adj[3]), v0);\n        for (let v of [v1, v2, v3, v4]) {\n            let dsq = norm2_xyz(v[0], v[1], v[2]);\n            if (dsq < 0.01 * 0.01)\n                continue;\n            let inv = 1.0 / Math.sqrt(dsq);\n            v[0] *= inv;\n            v[1] *= inv;\n            v[2] *= inv;\n        }\n        let d2 = GeomUtil.dist2(v1, v2), d3 = GeomUtil.dist2(v1, v3), d4 = GeomUtil.dist2(v1, v4);\n        if (d2 > d3 && d2 >= d4) {\n            Vec.swap(adj, 1, 2);\n            [v2, v3] = [v3, v2];\n        }\n        else if (d4 > d3) {\n            Vec.swap(adj, 3, 2);\n            [v3, v4] = [v4, v3];\n        }\n        const MIN_ANGLE = (mol.is3D() ? 80 : 45) * DEGRAD;\n        const MAX_ANGLE = (mol.is3D() ? 100 : 135) * DEGRAD;\n        const th12 = GeomUtil.acuteAngle(v1, v2);\n        if (th12 < MIN_ANGLE || th12 > MAX_ANGLE)\n            return null;\n        const th23 = GeomUtil.acuteAngle(v2, v3);\n        if (th23 < MIN_ANGLE || th23 > MAX_ANGLE)\n            return null;\n        const th34 = GeomUtil.acuteAngle(v3, v4);\n        if (th34 < MIN_ANGLE || th34 > MAX_ANGLE)\n            return null;\n        const th41 = GeomUtil.acuteAngle(v4, v1);\n        if (th41 < MIN_ANGLE || th41 > MAX_ANGLE)\n            return null;\n        return adj;\n    }\n    static rubricBipyrimidal(mol, atom) {\n        const nadj = mol.atomAdjCount(atom);\n        if (nadj != 4 && nadj != 5)\n            return null;\n        let atom2 = 0, atom3 = 0;\n        let adj = mol.atomAdjList(atom), bonds = mol.atomAdjBonds(atom);\n        if (!mol.is3D()) {\n            for (let n = 0; n < adj.length; n++) {\n                if (mol.bondType(bonds[n]) == Molecule.BONDTYPE_INCLINED) {\n                    if (atom2 > 0)\n                        return null;\n                    atom2 = adj[n];\n                }\n                else if (mol.bondType(bonds[n]) == Molecule.BONDTYPE_DECLINED) {\n                    if (atom3 > 0)\n                        return null;\n                    atom3 = adj[n];\n                }\n            }\n            if (atom2 == 0 || atom3 == 0)\n                return null;\n            let th1 = Math.atan2(mol.atomY(atom2) - mol.atomY(atom), mol.atomX(atom2) - mol.atomX(atom));\n            let th2 = Math.atan2(mol.atomY(atom3) - mol.atomY(atom), mol.atomX(atom3) - mol.atomX(atom));\n            if (Math.abs(angleDiff(th1, th2)) > 160 * DEGRAD)\n                return null;\n        }\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v = [[], [], [], [], []];\n        const THRESH = 0.1;\n        for (let n = 0; n < nadj; n++) {\n            v[n] = Vec.sub(MolUtil.atomVec3(mol, adj[n]), v0);\n            const mag = GeomUtil.magnitude(v[n]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[n], 1.0 / mag);\n            if (adj[n] == atom2)\n                v[n][2] += 1;\n            else if (adj[n] == atom3)\n                v[n][2] -= 1;\n        }\n        let atom4 = 0, atom5 = 0;\n        const ANGLE_OPPOSITE = 175 * DEGRAD;\n        for (let i = 0; i < nadj - 1; i++)\n            if (adj[i] != atom2 && adj[i] != atom3) {\n                for (let j = i + 1; j < nadj; j++)\n                    if (adj[j] != atom2 && adj[j] != atom3) {\n                        let theta = GeomUtil.acuteAngle(v[i], v[j]);\n                        if (theta > ANGLE_OPPOSITE) {\n                            if (atom4 != 0)\n                                return null;\n                            atom4 = adj[i];\n                            atom5 = adj[j];\n                        }\n                    }\n            }\n        if (mol.is3D()) {\n            for (let a of adj)\n                if (a != atom4 && a != atom5) {\n                    if (atom2 == 0)\n                        atom2 = a;\n                    else if (atom3 == 0)\n                        atom3 = a;\n                }\n        }\n        if (!atom4 || !atom5)\n            return null;\n        let v1 = null;\n        let v2 = v[adj.indexOf(atom2)];\n        let v3 = v[adj.indexOf(atom3)];\n        let v4 = v[adj.indexOf(atom4)];\n        let v5 = v[adj.indexOf(atom5)];\n        let atom1 = 0;\n        if (nadj == 5) {\n            for (let n = 0; n < nadj; n++)\n                if (adj[n] != atom2 && adj[n] != atom3 && adj[n] != atom4 && adj[n] != atom5) {\n                    atom1 = adj[n];\n                    v1 = v[n];\n                    break;\n                }\n        }\n        else {\n            v1 = [0, 0, 0];\n            v1 = Vec.sub(v1, v2);\n            v1 = Vec.sub(v1, v3);\n            const mag = GeomUtil.magnitude(v1);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v1, 1.0 / mag);\n        }\n        let v45 = Vec.sub(v5, v4);\n        let cross = GeomUtil.crossProduct(v45, v1);\n        let dsq2 = GeomUtil.dist2(cross, v2), dsq3 = GeomUtil.dist2(cross, v3);\n        if (dsq2 < dsq3)\n            return [atom1, atom2, atom3, atom4, atom5];\n        else\n            return [atom1, atom2, atom3, atom5, atom4];\n    }\n    static rubricOctahedral(mol, atom) {\n        const nadj = mol.atomAdjCount(atom);\n        if (nadj != 5 && nadj != 6)\n            return null;\n        let adj = mol.atomAdjList(atom), bonds = mol.atomAdjBonds(atom);\n        if (nadj == 5) {\n            adj.push(0);\n            bonds.push(0);\n        }\n        if (!mol.is3D()) {\n            let numWedges = 0;\n            for (let b of bonds)\n                if (b > 0) {\n                    const bt = mol.bondType(b);\n                    if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                        numWedges++;\n                }\n            if ((nadj == 5 && numWedges < 1) || (nadj == 6 && numWedges < 2))\n                return null;\n        }\n        const THRESH = 0.1;\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v = [[], [], [], [], [], []];\n        for (let n = 0; n < nadj; n++) {\n            v[n] = MolUtil.atomVec3(mol, adj[n]);\n            Vec.subFromArray(v[n], v0);\n            let mag = GeomUtil.magnitude(v[n]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[n], 1 / mag);\n            let bt = mol.bondType(bonds[n]);\n            if (bt == Molecule.BONDTYPE_INCLINED) {\n                if (mol.bondFrom(bonds[n]) == atom)\n                    v[n][2] += 1;\n                else\n                    v[n][2] -= 1;\n            }\n            else if (bt == Molecule.BONDTYPE_DECLINED) {\n                if (mol.bondFrom(bonds[n]) == atom)\n                    v[n][2] -= 1;\n                else\n                    v[n][2] += 1;\n            }\n        }\n        if (nadj == 5) {\n            v[5] = [0, 0, 0];\n            for (let n = 0; n < 5; n++)\n                Vec.subFromArray(v[5], v[n]);\n            let mag = GeomUtil.magnitude(v[5]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[5], 1 / mag);\n        }\n        let slots = [-1, -1, -1, -1, 0, 1];\n        let bestOpposite = GeomUtil.acuteAngle(v[0], v[1]);\n        for (let i = 0; i < 5; i++)\n            for (let j = (i == 0 ? 2 : i + 1); j < 6; j++) {\n                let theta = GeomUtil.acuteAngle(v[i], v[j]);\n                if (theta > bestOpposite) {\n                    slots[4] = i;\n                    slots[5] = j;\n                    bestOpposite = theta;\n                }\n            }\n        let axial = Vec.sub(v[slots[5]], v[slots[4]]);\n        let bestOrthogonal = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < 6; n++)\n            if (n != slots[4] && n != slots[5]) {\n                let delta = Math.abs((90 * DEGRAD) - GeomUtil.acuteAngle(v[n], axial));\n                if (delta < bestOrthogonal) {\n                    slots[0] = n;\n                    bestOrthogonal = delta;\n                }\n            }\n        for (let s = 1; s <= 2; s++) {\n            let cross = GeomUtil.crossProduct(axial, v[slots[s - 1]]);\n            let bestOrient = Number.POSITIVE_INFINITY;\n            for (let n = 0; n < 6; n++) {\n                if (n == slots[4] || n == slots[5] || n == slots[0] || n == slots[1])\n                    continue;\n                let delta = GeomUtil.acuteAngle(v[n], cross);\n                if (delta < bestOrient) {\n                    slots[s] = n;\n                    bestOrient = delta;\n                }\n            }\n        }\n        for (let n = 0; n < 6; n++)\n            if (slots.indexOf(n) < 0) {\n                slots[3] = n;\n                break;\n            }\n        let rubric = [0, 0, 0, 0, 0, 0];\n        for (let n = 0; n < 6; n++)\n            rubric[n] = slots[n] < 0 ? 0 : adj[slots[n]];\n        return rubric;\n    }\n    static rubricBondSides(mol, bond) {\n        const bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        const nfr = mol.atomAdjCount(bfr), nto = mol.atomAdjCount(bto);\n        if (nfr < 2 || nfr > 3 || nto < 2 || nto > 3)\n            return null;\n        let adj1 = mol.atomAdjList(bfr), adj2 = mol.atomAdjList(bto);\n        let f1 = 0, f2 = 0, t1 = 0, t2 = 0;\n        for (let i = 0; i < adj1.length; i++) {\n            if (adj1[i] != bto) {\n                if (f1 == 0)\n                    f1 = adj1[i];\n                else\n                    f2 = adj1[i];\n            }\n        }\n        for (let i = 0; i < adj2.length; i++) {\n            if (adj2[i] != bfr) {\n                if (t1 == 0)\n                    t1 = adj2[i];\n                else\n                    t2 = adj2[i];\n            }\n        }\n        if (f1 > 0 && f2 > 0 && mol.atomElement(f1) == 'H') {\n            let f = f1;\n            f1 = f2;\n            f2 = f;\n        }\n        if (t1 > 0 && t2 > 0 && mol.atomElement(t1) == 'H') {\n            let t = t1;\n            t1 = t2;\n            t2 = t;\n        }\n        let vfr = MolUtil.atomVec3(mol, bfr), vto = MolUtil.atomVec3(mol, bto);\n        let vbond = Vec.sub(vto, vfr);\n        let vf1 = Vec.sub(MolUtil.atomVec3(mol, f1), vfr), vt1 = Vec.sub(MolUtil.atomVec3(mol, t1), vto);\n        const THRESHSQ = 0.1 * 0.1;\n        let xf1 = GeomUtil.crossProduct(vf1, vbond);\n        if (GeomUtil.magnitude2(xf1) < THRESHSQ)\n            return null;\n        let xt1 = GeomUtil.crossProduct(vt1, vbond);\n        if (GeomUtil.magnitude2(xt1) < THRESHSQ)\n            return null;\n        let xf1N = Vec.neg(xf1);\n        let keepF1T1 = GeomUtil.dist2(xf1, xt1) < GeomUtil.dist2(xf1N, xt1);\n        let keepF2T1 = keepF1T1, keepF1T2 = keepF1T1, keepF2T2 = keepF1T1;\n        let vf2 = null, vt2 = null, xf2 = null, xt2 = null, xf2N = null;\n        if (f2 > 0) {\n            vf2 = Vec.sub(MolUtil.atomVec3(mol, f2), vfr);\n            if (GeomUtil.magnitude2(vf2) < THRESHSQ) {\n                if (mol.atomElement(f2) != 'H')\n                    return null;\n            }\n            else {\n                xf2 = GeomUtil.crossProduct(vf2, vbond);\n                if (GeomUtil.magnitude2(xf2) < THRESHSQ)\n                    return null;\n                xf2N = Vec.neg(xf2);\n                keepF2T1 = GeomUtil.dist2(xf2, xt1) > GeomUtil.dist2(xf2N, xt1);\n            }\n        }\n        if (t2 > 0) {\n            vt2 = Vec.sub(MolUtil.atomVec3(mol, t2), vto);\n            if (GeomUtil.magnitude2(vt2) < THRESHSQ) {\n                if (mol.atomElement(t2) != 'H')\n                    return null;\n            }\n            else {\n                xt2 = GeomUtil.crossProduct(vt2, vbond);\n                if (GeomUtil.magnitude2(xt2) < THRESHSQ)\n                    return null;\n                keepF1T2 = GeomUtil.dist2(xf1, xt2) > GeomUtil.dist2(xf1N, xt2);\n            }\n        }\n        if (xf2 != null && xt2 != null) {\n            keepF2T2 = GeomUtil.dist2(xf2, xt2) < GeomUtil.dist2(xf2N, xt2);\n        }\n        if (keepF1T1 && keepF2T1 && keepF1T2 && keepF2T2)\n            return [f1, f2, t1, t2];\n        if (!keepF1T1 && !keepF2T1 && !keepF1T2 && !keepF2T2)\n            return [f1, f2, t2, t1];\n        return null;\n    }\n    buildTetraChirality() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let haswedge = Vec.booleanArray(false, na);\n        for (let n = 1; n <= nb; n++) {\n            if (mol.bondType(n) == Molecule.BONDTYPE_INCLINED || mol.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                haswedge[mol.bondFrom(n) - 1] = true;\n        }\n        skip_atom: for (let n = 1; n <= na; n++) {\n            this.chiralTetra[n - 1] = Stereochemistry.STEREO_NONE;\n            let adj = mol.atomAdjList(n);\n            if (!(adj.length == 4 || (adj.length == 3 && mol.atomHydrogens(n) == 1)))\n                continue;\n            if (adj.length == 3 && (this.isH[adj[0] - 1] || this.isH[adj[1] - 1] || this.isH[adj[2] - 1]))\n                continue;\n            for (let i = 0; i < adj.length - 1; i++) {\n                for (let j = i + 1; j < adj.length; j++) {\n                    if (this.priority[adj[i] - 1] == this.priority[adj[j] - 1])\n                        continue skip_atom;\n                }\n            }\n            if (!haswedge[n - 1] && !mol.is3D()) {\n                this.chiralTetra[n - 1] = Stereochemistry.STEREO_UNKNOWN;\n                continue;\n            }\n            let rubric = Stereochemistry.rubricTetrahedral(mol, n);\n            if (rubric == null)\n                continue;\n            let pri = [\n                rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1],\n                rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1],\n                rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1],\n                rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1]\n            ];\n            pri = Vec.idxSort(pri);\n            let parity = Permutation.parityIdentity(pri);\n            this.chiralTetra[n - 1] = (parity & 1) == 0 ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildBondCisTrans() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let sf = [0, 0], st = [0, 0];\n        let ringMask = Vec.booleanArray(false, nb);\n        for (let rsz = 3; rsz <= 7; rsz++) {\n            for (let r of mol.findRingsOfSize(rsz)) {\n                for (let n = 0; n < r.length; n++) {\n                    let b = mol.findBond(r[n], r[n < r.length - 1 ? n + 1 : 0]);\n                    ringMask[b - 1] = true;\n                }\n            }\n        }\n        skip_bond: for (let n = 1; n <= nb; n++) {\n            this.cistransBond[n - 1] = Stereochemistry.STEREO_NONE;\n            if (mol.bondOrder(n) != 2 || this.meta.isBondAromatic(n) || ringMask[n - 1])\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let adj1 = mol.atomAdjList(bfr), adj2 = mol.atomAdjList(bto);\n            if (adj1.length <= 1 || adj2.length <= 1 || adj1.length > 3 || adj2.length > 3)\n                continue;\n            if (adj1.length == 2 && (this.isH[adj1[0] - 1] || this.isH[adj1[1] - 1]))\n                continue;\n            if (adj2.length == 2 && (this.isH[adj2[0] - 1] || this.isH[adj2[1] - 1]))\n                continue;\n            for (let i = 0; i < adj1.length - 1; i++)\n                if (adj1[i] != bfr)\n                    for (let j = i + 1; j < adj1.length; j++)\n                        if (adj1[j] != bfr)\n                            if (this.priority[adj1[i] - 1] == this.priority[adj1[j] - 1])\n                                continue skip_bond;\n            for (let i = 0; i < adj2.length - 1; i++)\n                if (adj2[i] != bto)\n                    for (let j = i + 1; j < adj2.length; j++)\n                        if (adj2[j] != bto)\n                            if (this.priority[adj2[i] - 1] == this.priority[adj2[j] - 1])\n                                continue skip_bond;\n            if (mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN) {\n                this.cistransBond[n - 1] = Stereochemistry.STEREO_UNKNOWN;\n                continue;\n            }\n            let rubric = Stereochemistry.rubricBondSides(mol, n);\n            if (rubric == null)\n                continue;\n            let pf1 = rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1];\n            let pf2 = rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1];\n            let pt1 = rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1];\n            let pt2 = rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1];\n            this.cistransBond[n - 1] = ((pf1 < pf2) == (pt1 < pt2)) ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildPlanarCisTrans() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        skip_atom: for (let n = 1; n <= na; n++) {\n            this.squarePlanar[n - 1] = Stereochemistry.STEREO_NONE;\n            if (mol.atomAdjCount(n) != 4)\n                continue;\n            if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(n)] < 3)\n                continue;\n            let adj = mol.atomAdjList(n);\n            for (let i = 0; i < adj.length; i++) {\n                let count = 0;\n                for (let j = 0; j < adj.length; j++) {\n                    if (this.priority[adj[i] - 1] == this.priority[adj[j] - 1])\n                        count++;\n                }\n                if (count >= 3)\n                    continue skip_atom;\n            }\n            let rubric = Stereochemistry.rubricSquarePlanar(mol, n);\n            if (rubric == null)\n                continue;\n            let pri = [\n                rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1],\n                rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1],\n                rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1],\n                rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1]\n            ];\n            let parity = Permutation.parityOrder(pri);\n            this.squarePlanar[n - 1] = (parity & 1) == 0 ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildOctaChirality() {\n    }\n    buildPriority() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let cipgr = [];\n        for (let n = 0; n < na; n++)\n            cipgr.push(Vec.numberArray(-1, mol.atomHydrogens(n + 1)));\n        for (let n = 1; n <= nb; n++) {\n            let bf = mol.bondFrom(n) - 1, bt = mol.bondTo(n) - 1, bo = mol.bondOrder(n);\n            if (this.meta.isBondAromatic(n))\n                bo = 2;\n            if (bf != bt)\n                for (let i = 0; i < bo; i++) {\n                    cipgr[bf].push(bt);\n                    cipgr[bt].push(bf);\n                }\n        }\n        this.priority = Vec.numberArray(0, na);\n        let anyActualH = false;\n        for (let n = 0; n < na; n++) {\n            this.priority[n] = mol.atomicNumber(n + 1);\n            if (this.priority[n] == 1)\n                anyActualH = true;\n        }\n        let prigr = [];\n        for (let n = 0; n < na; n++)\n            prigr.push([]);\n        while (true) {\n            for (let n = 0; n < na; n++) {\n                let cip = cipgr[n], pri = [];\n                for (let i = 0; i < cip.length; i++)\n                    pri.push(cip[i] < 0 ? 1 : this.priority[cip[i]]);\n                Vec.sort(pri);\n                prigr[n] = pri;\n            }\n            let groups = this.sortAndGroup(this.priority);\n            let nextpri = anyActualH ? 0 : 1;\n            let repartitioned = false;\n            for (let n = 0; n < groups.length; n++) {\n                let g = groups[n];\n                for (let p = 0; p < g.length - 1;) {\n                    const i1 = g[p], i2 = g[p + 1];\n                    let cmp = 0, sz = Math.max(prigr[i1].length, prigr[i2].length);\n                    for (let i = 0; i < sz; i++) {\n                        let v1 = i < prigr[i1].length ? prigr[i1][i] : 0, v2 = i < prigr[i2].length ? prigr[i2][i] : 0;\n                        if (v1 < v2) {\n                            cmp = -1;\n                            break;\n                        }\n                        if (v1 > v2) {\n                            cmp = 1;\n                            break;\n                        }\n                    }\n                    if (cmp > 0) {\n                        g[p] = i2;\n                        g[p + 1] = i1;\n                        if (p > 0)\n                            p--;\n                    }\n                    else\n                        p++;\n                }\n                for (let i = 0; i < g.length; i++) {\n                    if (i == 0)\n                        nextpri++;\n                    else if (prigr[g[i]].length != prigr[g[i - 1]].length) {\n                        nextpri++;\n                        repartitioned = true;\n                    }\n                    else {\n                        for (let j = 0; j < prigr[g[i]].length; j++)\n                            if (prigr[g[i]][j] != prigr[g[i - 1]][j]) {\n                                nextpri++;\n                                repartitioned = true;\n                                break;\n                            }\n                    }\n                    this.priority[g[i]] = nextpri;\n                }\n            }\n            if (!repartitioned)\n                break;\n        }\n    }\n    sortAndGroup(val) {\n        let uset = new Set();\n        for (let v of val)\n            uset.add(v);\n        let unique = Array.from(uset);\n        Vec.sort(unique);\n        let ret = [];\n        for (let n = 0; n < unique.length; n++)\n            ret.push([]);\n        for (let n = 0; n < val.length; n++) {\n            let grp = unique.indexOf(val[n]);\n            ret[grp].push(n);\n        }\n        return ret;\n    }\n}\nStereochemistry.STEREO_NONE = 0;\nStereochemistry.STEREO_POS = 1;\nStereochemistry.STEREO_NEG = 2;\nStereochemistry.STEREO_UNKNOWN = 3;\nStereochemistry.STEREO_BROKEN = 4;\nStereochemistry.RUBRIC_EQUIV_TETRA = [\n    [0, 1, 2, 3], [0, 2, 3, 1], [0, 3, 1, 2], [1, 0, 3, 2], [1, 2, 0, 3], [1, 3, 2, 0],\n    [2, 0, 1, 3], [2, 1, 3, 0], [2, 3, 0, 1], [3, 0, 2, 1], [3, 1, 0, 2], [3, 2, 1, 0]\n];\nStereochemistry.RUBRIC_EQUIV_SIDES = [\n    [0, 1, 2, 3], [1, 0, 3, 2], [2, 3, 0, 1], [3, 2, 1, 0]\n];\nStereochemistry.RUBRIC_EQUIV_SQUARE = [\n    [0, 1, 2, 3], [0, 3, 2, 1], [1, 2, 3, 0], [1, 0, 3, 2],\n    [2, 1, 0, 3], [2, 3, 0, 1], [3, 2, 1, 0], [3, 0, 1, 2]\n];\nStereochemistry.RUBRIC_EQUIV_BIPY = [\n    [0, 1, 2, 3, 4], [1, 2, 0, 3, 4], [2, 0, 1, 3, 4],\n    [0, 2, 1, 4, 3], [1, 0, 2, 4, 3], [2, 1, 0, 4, 3],\n];\nStereochemistry.RUBRIC_EQUIV_OCTA = [\n    [0, 1, 2, 3, 4, 5], [0, 3, 2, 1, 5, 4], [0, 4, 2, 5, 3, 1], [0, 5, 2, 4, 1, 3],\n    [1, 0, 3, 2, 5, 4], [1, 2, 3, 0, 4, 5], [1, 4, 3, 5, 0, 2], [1, 5, 3, 4, 2, 0],\n    [2, 1, 0, 3, 5, 4], [2, 3, 0, 1, 4, 5], [2, 4, 0, 5, 1, 3], [2, 5, 0, 4, 3, 1],\n    [3, 0, 1, 2, 4, 5], [3, 2, 1, 0, 5, 4], [3, 4, 1, 5, 2, 0], [3, 5, 1, 4, 0, 2],\n    [4, 0, 5, 2, 1, 3], [4, 1, 5, 3, 2, 0], [4, 2, 5, 0, 3, 1], [4, 3, 5, 1, 0, 2],\n    [5, 0, 4, 2, 3, 1], [5, 1, 4, 3, 0, 2], [5, 2, 4, 0, 1, 3], [5, 3, 4, 1, 2, 0]\n];\n//# sourceMappingURL=Stereochemistry.js.map","import { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { DotPath } from './DotPath';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nimport { Stereochemistry } from './Stereochemistry';\nexport class MetaMolecule {\n    constructor(mol) {\n        this.mol = mol;\n        this.atomArom = null;\n        this.bondArom = null;\n        this.rubricTetra = null;\n        this.rubricSquare = null;\n        this.rubricBipy = null;\n        this.rubricOcta = null;\n        this.rubricSides = null;\n        this.hash = null;\n        this.heavyHash = null;\n        this.uniqueElements = null;\n        this.dots = null;\n        this.piAtom = null;\n    }\n    calculateStrictAromaticity() {\n        let mol = this.mol;\n        this.atomArom = Vec.booleanArray(false, mol.numAtoms);\n        this.bondArom = Vec.booleanArray(false, mol.numBonds);\n        let rings = mol.findRingsOfSize(6);\n        const nr = rings.length;\n        if (nr == 0)\n            return;\n        this.ensurePiAtoms();\n        let mask = Vec.booleanArray(false, nr);\n        for (let n = 0; n < nr; n++) {\n            for (let i = 0; i < rings[n].length; i++) {\n                let a = rings[n][i];\n                if (!this.piAtom[a - 1]) {\n                    mask[n] = true;\n                    break;\n                }\n                let b = mol.findBond(a, rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                let bo = mol.bondOrder(b);\n                if (bo != 1 && bo != 2) {\n                    mask[n] = true;\n                    break;\n                }\n            }\n        }\n        while (true) {\n            let anyChange = false;\n            for (let n = 0; n < nr; n++)\n                if (!mask[n]) {\n                    let phase1 = true, phase2 = true;\n                    for (let i = 0; i < rings[n].length; i++) {\n                        let b = mol.findBond(rings[n][i], rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                        if (this.bondArom[b - 1])\n                            continue;\n                        let bo = mol.bondOrder(b);\n                        phase1 = phase1 && bo == (2 - (i & 1));\n                        phase2 = phase2 && bo == (1 + (i & 1));\n                    }\n                    if (!phase1 && !phase2)\n                        continue;\n                    for (let i = 0; i < rings[n].length; i++) {\n                        let b = mol.findBond(rings[n][i], rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                        this.bondArom[b - 1] = true;\n                    }\n                    mask[n] = true;\n                    anyChange = true;\n                }\n            if (!anyChange)\n                break;\n        }\n        for (let n = 0; n < this.bondArom.length; n++)\n            if (this.bondArom[n]) {\n                this.atomArom[mol.bondFrom(n + 1) - 1] = true;\n                this.atomArom[mol.bondTo(n + 1) - 1] = true;\n            }\n    }\n    calculateRelaxedAromaticity() {\n        let mol = this.mol;\n        this.atomArom = Vec.booleanArray(false, mol.numAtoms);\n        this.bondArom = Vec.booleanArray(false, mol.numBonds);\n        this.ensurePiAtoms();\n        const na = mol.numAtoms, nb = mol.numBonds;\n        let electrons = Vec.numberArray(0, na);\n        let exocyclic = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++) {\n            let atno = mol.atomicNumber(n);\n            electrons[n - 1] = (Chemistry.ELEMENT_BLOCKS[atno] == 2 ? Chemistry.ELEMENT_VALENCE[atno] : 0) - mol.atomCharge(n) - mol.atomHydrogens(n)\n                - mol.atomUnpaired(n);\n        }\n        for (let n = 1; n <= nb; n++) {\n            const bfr = mol.bondFrom(n), bto = mol.bondTo(n), bo = mol.bondOrder(n);\n            electrons[bfr - 1] -= bo;\n            electrons[bto - 1] -= bo;\n            if (bo == 2) {\n                const rblk1 = mol.atomRingBlock(bfr), rblk2 = mol.atomRingBlock(bto);\n                if (rblk1 > 0 && rblk1 != rblk2)\n                    exocyclic[bfr - 1] = true;\n                if (rblk2 > 0 && rblk2 != rblk1)\n                    exocyclic[bto - 1] = true;\n            }\n        }\n        let rings = [];\n        for (let rsz = 3; rsz <= 7; rsz++)\n            for (let rng of mol.findRingsOfSize(rsz)) {\n                let valid = true;\n                for (let n = 0; n < rsz; n++) {\n                    const a = rng[n];\n                    if (!this.piAtom[a - 1] && electrons[a - 1] < 2 && !exocyclic[a - 1]) {\n                        valid = false;\n                        break;\n                    }\n                    let b = mol.findBond(a, rng[n < rsz - 1 ? n + 1 : 0]);\n                    let bo = mol.bondOrder(b);\n                    if (bo != 1 && bo != 2) {\n                        valid = false;\n                        break;\n                    }\n                }\n                if (valid)\n                    rings.push(rng);\n            }\n        while (rings.length > 0) {\n            let anyChange = false;\n            for (let n = 0; n < rings.length; n++) {\n                let r = rings[n];\n                let paths = [0];\n                for (let i = 0; i < r.length; i++) {\n                    const a = r[i];\n                    const b1 = mol.findBond(a, r[i < r.length - 1 ? i + 1 : 0]);\n                    const b2 = mol.findBond(a, r[i > 0 ? i - 1 : r.length - 1]);\n                    if (this.bondArom[b1 - 1]) {\n                        for (let j = paths.length - 1; j >= 0; j--) {\n                            const e = paths[j] + 2;\n                            if (paths.indexOf(e) < 0)\n                                paths = Vec.append(paths, e);\n                        }\n                    }\n                    else if (mol.bondOrder(b1) == 2)\n                        Vec.addTo(paths, 2);\n                    else if (electrons[a - 1] >= 2 && mol.bondOrder(b1) == 1 && mol.bondOrder(b2) == 1)\n                        Vec.addTo(paths, 2);\n                }\n                let arom = false;\n                for (let e of paths) {\n                    if (e == 2 && r.length == 3) {\n                        arom = true;\n                        break;\n                    }\n                    if (e == 6) {\n                        arom = true;\n                        break;\n                    }\n                }\n                if (arom) {\n                    for (let i = 0; i < r.length; i++) {\n                        let a = r[i], b = mol.findBond(a, r[i < r.length - 1 ? i + 1 : 0]);\n                        this.atomArom[a - 1] = true;\n                        this.bondArom[b - 1] = true;\n                    }\n                    rings.splice(n, 1);\n                    n--;\n                    anyChange = true;\n                }\n            }\n            if (!anyChange)\n                break;\n        }\n    }\n    calculateStereoRubric() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        this.rubricTetra = new Array(na);\n        this.rubricSquare = new Array(na);\n        this.rubricBipy = new Array(na);\n        this.rubricOcta = new Array(na);\n        this.rubricSides = new Array(nb);\n        for (let n = 1; n <= na; n++) {\n            let blk = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(n)];\n            let adjc = mol.atomAdjCount(n), hc = mol.atomHydrogens(n);\n            let ninc = 0, ndec = 0;\n            for (let b of mol.atomAdjBonds(n)) {\n                if (mol.bondType(b) == Molecule.BONDTYPE_INCLINED && mol.bondFrom(b) == n)\n                    ninc++;\n                else if (mol.bondType(b) == Molecule.BONDTYPE_DECLINED && mol.bondFrom(b) == n)\n                    ndec++;\n            }\n            if (blk == 2 && ((adjc == 3 && hc == 1) || (adjc == 4 && hc == 0))) {\n                this.rubricTetra[n - 1] = Stereochemistry.rubricTetrahedral(mol, n);\n            }\n            else if (blk >= 3 && adjc == 4 && ninc == 1 && ndec == 1) {\n                this.rubricTetra[n - 1] = Stereochemistry.rubricTetrahedral(mol, n);\n            }\n            if (blk >= 3 && adjc == 4 && hc == 0) {\n                this.rubricSquare[n - 1] = Stereochemistry.rubricSquarePlanar(mol, n);\n            }\n            if (blk >= 3 && (adjc == 4 || adjc == 5) && hc == 0) {\n                this.rubricBipy[n - 1] = Stereochemistry.rubricBipyrimidal(mol, n);\n            }\n            if (blk >= 3 && (adjc == 5 || adjc == 6) && hc == 0) {\n                this.rubricOcta[n - 1] = Stereochemistry.rubricOctahedral(mol, n);\n            }\n            else if (blk == 2 && adjc == 6 && hc == 0) {\n                this.rubricOcta[n - 1] = Stereochemistry.rubricOctahedral(mol, n);\n            }\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondOrder(n) != 2 || mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN || this.isBondAromatic(n))\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let blk1 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bfr)];\n            let blk2 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bto)];\n            let adjc1 = mol.atomAdjCount(bfr), hc1 = mol.atomHydrogens(bfr);\n            let adjc2 = mol.atomAdjCount(bto), hc2 = mol.atomHydrogens(bto);\n            if (blk1 == 2 && blk2 == 2 && (adjc1 + hc1 == 3 && hc1 <= 1) && (adjc2 + hc2 == 3 && hc2 <= 1)) {\n                this.rubricSides[n - 1] = Stereochemistry.rubricBondSides(mol, n);\n            }\n        }\n    }\n    removeHydrogens() {\n        let mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let atomMask = Vec.booleanArray(true, na), bondMask = Vec.booleanArray(true, nb);\n        for (let n = 1; n <= na; n++)\n            if (MolUtil.boringHydrogen(mol, n)) {\n                atomMask[n - 1] = false;\n                bondMask[mol.atomAdjBonds(n)[0] - 1] = false;\n            }\n        if (Vec.allTrue(atomMask))\n            return;\n        mol = MolUtil.subgraphMask(mol, atomMask);\n        if (this.atomArom)\n            this.atomArom = Vec.maskGet(this.atomArom, atomMask);\n        if (this.bondArom)\n            this.bondArom = Vec.maskGet(this.bondArom, bondMask);\n        if (this.rubricTetra || this.rubricSquare || this.rubricBipy || this.rubricOcta || this.rubricSides) {\n            if (this.rubricTetra)\n                this.rubricTetra = Vec.maskGet(this.rubricTetra, atomMask);\n            if (this.rubricSquare)\n                this.rubricSquare = Vec.maskGet(this.rubricSquare, atomMask);\n            if (this.rubricBipy)\n                this.rubricBipy = Vec.maskGet(this.rubricBipy, atomMask);\n            if (this.rubricOcta)\n                this.rubricOcta = Vec.maskGet(this.rubricOcta, atomMask);\n            if (this.rubricSides)\n                this.rubricSides = Vec.maskGet(this.rubricSides, bondMask);\n            let atomMap = Vec.prepend(Vec.add(Vec.maskMap(atomMask), 1), 0);\n            for (let n = 0; n < Vec.len(this.rubricTetra); n++)\n                if (this.rubricTetra[n])\n                    this.rubricTetra[n] = Vec.idxGet(atomMap, this.rubricTetra[n]);\n            for (let n = 0; n < Vec.len(this.rubricSquare); n++)\n                if (this.rubricSquare[n])\n                    this.rubricSquare[n] = Vec.idxGet(atomMap, this.rubricSquare[n]);\n            for (let n = 0; n < Vec.len(this.rubricBipy); n++)\n                if (this.rubricBipy[n])\n                    this.rubricBipy[n] = Vec.idxGet(atomMap, this.rubricBipy[n]);\n            for (let n = 0; n < Vec.len(this.rubricOcta); n++)\n                if (this.rubricOcta[n])\n                    this.rubricOcta[n] = Vec.idxGet(atomMap, this.rubricOcta[n]);\n            for (let n = 0; n < Vec.len(this.rubricSides); n++)\n                if (this.rubricSides[n])\n                    this.rubricSides[n] = Vec.idxGet(atomMap, this.rubricSides[n]);\n        }\n    }\n    calculateSkeletonHash() {\n        if (MetaMolecule.skeletonHash == null)\n            throw 'Skeleton hash not available.';\n        this.hash = MetaMolecule.skeletonHash(this.mol);\n    }\n    calculateHeavyHash() {\n        let anyH = false;\n        for (let n = 1; n <= this.mol.numAtoms; n++)\n            if (this.mol.atomElement(n) == 'H') {\n                anyH = true;\n                break;\n            }\n        if (!anyH) {\n            this.heavyHash = this.getSkeletonHash();\n            return;\n        }\n        let hvy = this.mol.clone();\n        for (let n = hvy.numAtoms; n >= 1; n--)\n            if (hvy.atomElement(n) == 'H')\n                hvy.deleteAtomAndBonds(n);\n        this.heavyHash = MetaMolecule.skeletonHash(hvy);\n    }\n    isAtomAromatic(atom) {\n        return this.atomArom == null ? false : this.atomArom[atom - 1];\n    }\n    isBondAromatic(bond) {\n        return this.bondArom == null ? false : this.bondArom[bond - 1];\n    }\n    bondOrderArom(bond) {\n        return this.bondArom != null && this.bondArom[bond - 1] ? -1 : this.mol.bondOrder(bond);\n    }\n    getAtomAromaticity() {\n        return this.atomArom == null ? null : this.atomArom.slice(0);\n    }\n    getBondAromaticity() {\n        return this.bondArom == null ? null : this.bondArom.slice(0);\n    }\n    getSkeletonHash() {\n        if (this.hash == null)\n            this.calculateSkeletonHash();\n        return this.hash;\n    }\n    getHeavyHash() {\n        if (this.heavyHash == null)\n            this.calculateHeavyHash();\n        return this.heavyHash;\n    }\n    getDotPath() {\n        if (this.dots == null)\n            this.dots = new DotPath(this.mol);\n        return this.dots;\n    }\n    getUniqueElements() {\n        if (this.uniqueElements == null) {\n            this.uniqueElements = [];\n            for (let n = 1; n <= this.mol.numAtoms; n++) {\n                let el = this.mol.atomElement(n);\n                if (this.uniqueElements.indexOf(el) < 0)\n                    this.uniqueElements.push(el);\n            }\n        }\n        return this.uniqueElements;\n    }\n    equivalentTo(other, timeout = 1000) {\n        if (MetaMolecule.isomorphMatch == null)\n            throw 'Isomorph search unavailable.';\n        if (this.mol.numAtoms != other.mol.numAtoms || this.mol.numBonds != other.mol.numBonds)\n            return false;\n        if (this.hash == null)\n            this.calculateSkeletonHash();\n        if (other.hash == null)\n            other.calculateSkeletonHash();\n        if (this.hash != other.hash)\n            return false;\n        if (this.mol.compareTo(other.mol) == 0)\n            return true;\n        let uniq1 = this.getUniqueElements(), uniq2 = other.getUniqueElements();\n        for (let n = 0; n < uniq1.length; n++) {\n            if (!uniq2.includes(uniq1[n]))\n                return false;\n        }\n        return MetaMolecule.isomorphMatch(this, other, timeout);\n    }\n    static createRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    static createStrict(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStrictAromaticity();\n        return meta;\n    }\n    static createStrictRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStrictAromaticity();\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    static createRelaxed(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateRelaxedAromaticity();\n        return meta;\n    }\n    static createRelaxedRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateRelaxedAromaticity();\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    ensurePiAtoms() {\n        if (this.piAtom != null)\n            return;\n        this.piAtom = Vec.booleanArray(false, this.mol.numAtoms);\n        for (let n = 1; n <= this.mol.numBonds; n++)\n            if (this.mol.bondOrder(n) == 2) {\n                {\n                    this.piAtom[this.mol.bondFrom(n) - 1] = true;\n                    this.piAtom[this.mol.bondTo(n) - 1] = true;\n                }\n            }\n    }\n}\nMetaMolecule.skeletonHash = null;\nMetaMolecule.isomorphMatch = null;\n//# sourceMappingURL=MetaMolecule.js.map","import { Chemistry } from '../data/Chemistry';\nimport { MetaMolecule } from '../data/MetaMolecule';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { Permutation, Vec } from '../util/Vec';\nlet crc_table = [];\nfunction make_crc_table() {\n    if (crc_table.length > 0)\n        return;\n    for (let n = 0; n < 256; n++) {\n        let c = n;\n        for (let i = 0; i < 8; i++)\n            if ((c & 1) != 0)\n                c = 0xEDB88320 ^ (c >>> 1);\n            else\n                c = (c >>> 1);\n        crc_table.push(c);\n    }\n}\nconst BOOT_CRC = 0xFFFFFFFF;\nfunction start_crc() { return BOOT_CRC; }\nfunction feed_crc(crc, byte) {\n    let idx = (crc ^ byte) & 0xFF;\n    return crc_table[idx] ^ (crc >>> 8);\n}\nfunction end_crc(crc) { return crc ^ BOOT_CRC; }\nexport class CircularFingerprints {\n    constructor(meta, kind) {\n        this.meta = meta;\n        this.kind = kind;\n        this.hookApplyNewFP = null;\n        this.hookConsiderNewFP = null;\n        this.identity = [];\n        this.resolvedChiral = [];\n        this.atomGroup = [];\n        this.fplist = [];\n        this.amask = [];\n        this.atomAdj = [];\n        this.bondAdj = [];\n        make_crc_table();\n    }\n    calculate() {\n        let mol = this.meta.mol, na = mol.numAtoms;\n        this.identity = Vec.numberArray(0, na);\n        this.resolvedChiral = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++)\n            this.atomGroup.push([]);\n        this.amask = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++) {\n            this.amask[n] = mol.atomicNumber(n + 1) >= 2 && !MolUtil.hasAbbrev(mol, n + 1);\n            this.atomAdj.push([]);\n            this.bondAdj.push([]);\n        }\n        for (let n = 0; n < na; n++) {\n            if (!this.amask[n])\n                continue;\n            this.atomAdj[n] = mol.atomAdjList(n + 1);\n            this.bondAdj[n] = mol.atomAdjBonds(n + 1);\n            for (let i = this.atomAdj[n].length - 1; i >= 0; i--)\n                if (!this.amask[this.atomAdj[n][i] - 1]) {\n                    this.atomAdj[n].splice(i, 1);\n                    this.bondAdj[n].splice(i, 1);\n                }\n        }\n        for (let n = 0; n < na; n++)\n            if (this.amask[n]) {\n                this.identity[n] = this.initialIdentityECFP(n + 1);\n                this.atomGroup[n] = [n + 1];\n                this.applyNewFP({ hashCode: this.identity[n], iteration: 0, atoms: this.atomGroup[n], centralAtom: n + 1 });\n            }\n        let niter = this.kind;\n        for (let iter = 1; iter <= niter; iter++) {\n            let newident = Vec.numberArray(0, na);\n            for (let n = 0; n < na; n++)\n                if (this.amask[n])\n                    newident[n] = this.circularIterate(iter, n + 1);\n            this.identity = newident;\n            for (let n = 0; n < na; n++)\n                if (this.amask[n]) {\n                    this.atomGroup[n] = this.growAtoms(this.atomGroup[n]);\n                    this.considerNewFP({ hashCode: this.identity[n], iteration: iter, atoms: this.atomGroup[n], centralAtom: n + 1 });\n                }\n        }\n    }\n    static create(meta, kind) {\n        if (meta instanceof Molecule)\n            meta = MetaMolecule.createStrictRubric(meta);\n        let circ = new CircularFingerprints(meta, kind);\n        circ.calculate();\n        return circ;\n    }\n    getMolecule() { return this.meta.mol; }\n    get numFP() { return this.fplist.length; }\n    getFP(idx) { return this.fplist[idx]; }\n    getFingerprints() { return this.fplist.slice(0); }\n    getUniqueHashes() {\n        let hashes = new Set();\n        for (let fp of this.fplist)\n            hashes.add(fp.hashCode);\n        return Vec.sorted(Array.from(hashes));\n    }\n    getFoldedHashes(maxBits) {\n        let andBits = maxBits - 1;\n        let hashes = new Set();\n        for (let fp of this.fplist)\n            hashes.add(fp.hashCode & andBits);\n        return Vec.sorted(Array.from(hashes));\n    }\n    static tanimoto(hash1, hash2) {\n        let shared = 0, total = 0;\n        let sz1 = hash1.length, sz2 = hash2.length;\n        if (sz1 == 0 && sz2 == 0)\n            return 0;\n        let i1 = 0, i2 = 0;\n        while (i1 < sz1 || i2 < sz2) {\n            if (i1 == sz1) {\n                total += sz2 - i2;\n                break;\n            }\n            if (i2 == sz2) {\n                total += sz1 - i1;\n                break;\n            }\n            let v1 = hash1[i1], v2 = hash2[i2];\n            if (v1 == v2) {\n                shared += 1;\n                i1 += 1;\n                i2 += 1;\n            }\n            else if (v1 < v2)\n                i1 += 1;\n            else\n                i2 += 1;\n            total += 1;\n        }\n        return shared / total;\n    }\n    initialIdentityECFP(atom) {\n        const mol = this.meta.mol;\n        let adj = mol.atomAdjList(atom);\n        let nheavy = 0, nhydr = mol.atomHydrogens(atom);\n        for (let a of adj)\n            if (mol.atomElement(a) == 'H')\n                nhydr++;\n            else\n                nheavy++;\n        let atno = mol.atomicNumber(atom);\n        let degree = Math.max(0, Chemistry.ELEMENT_BONDING[atno] - nhydr);\n        let chg = mol.atomCharge(atom);\n        let inring = mol.atomRingBlock(atom) > 0 ? 1 : 0;\n        let crc = start_crc();\n        crc = feed_crc(crc, (nheavy << 4) | degree);\n        crc = feed_crc(crc, atno);\n        crc = feed_crc(crc, chg + 0x80);\n        crc = feed_crc(crc, (nhydr << 4) | inring);\n        return end_crc(crc);\n    }\n    circularIterate(iter, atom) {\n        let adj = this.atomAdj[atom - 1], adjb = this.bondAdj[atom - 1];\n        let seq = Vec.numberArray(0, 2 + 2 * adj.length);\n        seq[0] = iter;\n        seq[1] = this.identity[atom - 1];\n        for (let n = 0; n < adj.length; n++) {\n            seq[2 * n + 2] = this.meta.isBondAromatic(adjb[n]) ? 0xF : this.meta.mol.bondOrder(adjb[n]);\n            seq[2 * n + 3] = this.identity[adj[n] - 1];\n        }\n        let p = 0;\n        while (p < adj.length - 1) {\n            let i = 2 + 2 * p;\n            if (seq[i] > seq[i + 2] || (seq[i] == seq[i + 2] && seq[i + 1] > seq[i + 3])) {\n                Vec.swap(seq, i, i + 2);\n                Vec.swap(seq, i + 1, i + 3);\n                if (p > 0)\n                    p--;\n            }\n            else\n                p++;\n        }\n        let crc = start_crc();\n        for (let n = 0; n < seq.length; n += 2) {\n            crc = feed_crc(crc, seq[n]);\n            let v = seq[n + 1];\n            crc = feed_crc(crc, v >> 24);\n            crc = feed_crc(crc, (v >> 16) & 0xFF);\n            crc = feed_crc(crc, (v >> 8) & 0xFF);\n            crc = feed_crc(crc, v & 0xFF);\n        }\n        if (!this.resolvedChiral[atom - 1] && Vec.len(this.meta.rubricTetra) > 0 && this.meta.rubricTetra[atom - 1] != null) {\n            let ru = this.meta.rubricTetra[atom - 1];\n            let par = [\n                ru[0] == 0 ? 0 : this.identity[ru[0] - 1],\n                ru[1] == 0 ? 0 : this.identity[ru[1] - 1],\n                ru[2] == 0 ? 0 : this.identity[ru[2] - 1],\n                ru[3] == 0 ? 0 : this.identity[ru[3] - 1]\n            ];\n            if (par[0] != par[1] && par[0] != par[2] && par[0] != par[3] && par[1] != par[2] && par[1] != par[3] && par[2] != par[3]) {\n                crc = feed_crc(crc, Permutation.parityOrder(par) + 1);\n                this.resolvedChiral[atom - 1] = true;\n            }\n        }\n        return end_crc(crc);\n    }\n    growAtoms(atoms) {\n        let mask = Vec.booleanArray(false, this.meta.mol.numAtoms);\n        for (let n = 0; n < atoms.length; n++) {\n            mask[atoms[n] - 1] = true;\n            for (let a of this.atomAdj[atoms[n] - 1])\n                mask[a - 1] = true;\n        }\n        return Vec.add(Vec.maskIdx(mask), 1);\n    }\n    applyNewFP(newFP) {\n        if (this.hookConsiderNewFP)\n            this.hookConsiderNewFP(newFP);\n        if (this.hookApplyNewFP)\n            this.hookApplyNewFP(newFP);\n        this.fplist.push(newFP);\n    }\n    considerNewFP(newFP) {\n        if (this.hookConsiderNewFP)\n            this.hookConsiderNewFP(newFP);\n        let hit = -1;\n        let fp = null;\n        for (let n = 0; n < this.fplist.length; n++) {\n            let lookFP = this.fplist[n];\n            if (Vec.equals(lookFP.atoms, newFP.atoms)) {\n                fp = lookFP;\n                hit = n;\n                break;\n            }\n        }\n        if (hit < 0) {\n            this.fplist.push(newFP);\n            return;\n        }\n        if (fp.iteration < newFP.iteration || fp.hashCode < newFP.hashCode)\n            return;\n        this.fplist[hit] = newFP;\n        if (this.hookApplyNewFP)\n            this.hookApplyNewFP(newFP);\n    }\n}\nCircularFingerprints.CLASS_ECFP0 = 0;\nCircularFingerprints.CLASS_ECFP2 = 1;\nCircularFingerprints.CLASS_ECFP4 = 2;\nCircularFingerprints.CLASS_ECFP6 = 3;\n//# sourceMappingURL=CircularFingerprints.js.map","import { deepClone, findNode, findNodes, nodeText } from '../util/util';\nimport { XML } from '../util/XML';\nimport { DataSheet } from './DataSheet';\nimport { Molecule } from './Molecule';\nimport { MoleculeStream } from './MoleculeStream';\nexport class DataSheetStream {\n    static readXML(strXML) {\n        let xmlDoc;\n        if (XML.customParser)\n            xmlDoc = new XML.customParser().parseFromString(strXML, 'application/xml');\n        else\n            xmlDoc = new DOMParser().parseFromString(strXML, 'application/xml');\n        if (xmlDoc == null)\n            return null;\n        let root = xmlDoc.documentElement;\n        if (root == null)\n            return null;\n        let ds = new DataSheet();\n        let summary = findNode(root, 'Summary');\n        if (summary == null)\n            return null;\n        ds.title = nodeText(findNode(summary, 'Title'));\n        ds.description = nodeText(findNode(summary, 'Description'));\n        let extRoot = findNode(root, 'Extension');\n        if (extRoot != null) {\n            let extList = findNodes(extRoot, 'Ext');\n            for (let n = 0; n < extList.length; n++) {\n                let ext = extList[n];\n                ds.appendExtension(ext.getAttribute('name'), ext.getAttribute('type'), nodeText(ext));\n            }\n        }\n        let header = findNode(root, 'Header');\n        let numCols = parseInt(header.getAttribute('ncols'));\n        let colList = findNodes(header, 'Column');\n        if (colList.length != numCols)\n            return null;\n        for (let n = 0; n < numCols; n++) {\n            let col = colList[n];\n            let id = parseInt(col.getAttribute('id'));\n            if (id != n + 1)\n                return null;\n            ds.appendColumn(col.getAttribute('name'), col.getAttribute('type'), nodeText(col));\n        }\n        let rowidx = 0;\n        for (let row of findNodes(findNode(root, 'Content'), 'Row')) {\n            if (parseInt(row.getAttribute('id')) != rowidx + 1)\n                return null;\n            ds.appendRow();\n            for (let col of findNodes(row, 'Cell')) {\n                let colidx = parseInt(col.getAttribute('id')) - 1;\n                let ct = ds.colType(colidx), val = nodeText(col);\n                if (val == '') { }\n                else if (ct == \"molecule\")\n                    ds.setObject(rowidx, colidx, val);\n                else if (ct == \"string\")\n                    ds.setString(rowidx, colidx, val);\n                else if (ct == \"real\")\n                    ds.setReal(rowidx, colidx, parseFloat(val));\n                else if (ct == \"integer\")\n                    ds.setInteger(rowidx, colidx, parseInt(val));\n                else if (ct == \"boolean\")\n                    ds.setBoolean(rowidx, colidx, val == 'true' ? true : val == 'false' ? false : null);\n                else if (ct == \"extend\")\n                    ds.setExtend(rowidx, colidx, val);\n                col = col.nextElementSibling;\n                colidx++;\n            }\n            row = row.nextElementSibling;\n            rowidx++;\n        }\n        return ds;\n    }\n    static readJSON(json) {\n        if (!json.colData || !json.rowData)\n            throw 'Not a JSON-formatted datasheet.';\n        return new DataSheet(deepClone(json));\n    }\n    static writeXML(ds) {\n        let xml;\n        if (XML.customParser)\n            xml = new XML.customParser().parseFromString('<DataSheet/>', 'application/xml');\n        else\n            xml = new DOMParser().parseFromString('<DataSheet/>', 'application/xml');\n        let summary = xml.createElement('Summary');\n        xml.documentElement.appendChild(summary);\n        let title = xml.createElement('Title'), descr = xml.createElement('Description');\n        summary.appendChild(title);\n        title.appendChild(xml.createTextNode(ds.title));\n        summary.appendChild(descr);\n        descr.appendChild(xml.createCDATASection(ds.description));\n        let extension = xml.createElement('Extension');\n        xml.documentElement.appendChild(extension);\n        for (let n = 0; n < ds.numExtensions; n++) {\n            let ext = xml.createElement('Ext');\n            extension.appendChild(ext);\n            ext.setAttribute('name', ds.getExtName(n));\n            ext.setAttribute('type', ds.getExtType(n));\n            ext.appendChild(xml.createCDATASection(ds.getExtData(n)));\n        }\n        let header = xml.createElement('Header');\n        xml.documentElement.appendChild(header);\n        header.setAttribute('nrows', ds.numRows.toString());\n        header.setAttribute('ncols', ds.numCols.toString());\n        for (let n = 0; n < ds.numCols; n++) {\n            let column = xml.createElement('Column');\n            header.appendChild(column);\n            column.setAttribute('id', (n + 1).toString());\n            column.setAttribute('name', ds.colName(n));\n            column.setAttribute('type', ds.colType(n));\n            column.appendChild(xml.createTextNode(ds.colDescr(n)));\n        }\n        let content = xml.createElement('Content');\n        xml.documentElement.appendChild(content);\n        for (let r = 0; r < ds.numRows; r++) {\n            let row = xml.createElement('Row');\n            row.setAttribute('id', (r + 1).toString());\n            content.appendChild(row);\n            for (let c = 0; c < ds.numCols; c++) {\n                let cell = xml.createElement('Cell');\n                cell.setAttribute('id', (c + 1).toString());\n                row.appendChild(cell);\n                let ct = ds.colType(c);\n                let txtNode = null;\n                if (ds.isNull(r, c)) { }\n                else if (ct == \"molecule\") {\n                    let obj = ds.getObject(r, c);\n                    if (obj instanceof Molecule)\n                        obj = MoleculeStream.writeNative(obj);\n                    txtNode = xml.createCDATASection(obj);\n                }\n                else if (ct == \"string\")\n                    txtNode = xml.createCDATASection(ds.getString(r, c));\n                else if (ct == \"real\")\n                    txtNode = xml.createTextNode(ds.getReal(r, c).toString());\n                else if (ct == \"integer\")\n                    txtNode = xml.createTextNode(ds.getInteger(r, c).toString());\n                else if (ct == \"boolean\")\n                    txtNode = xml.createTextNode(ds.getBoolean(r, c).toString());\n                else if (ct == \"extend\")\n                    txtNode = xml.createCDATASection(ds.getExtend(r, c));\n                if (txtNode != null)\n                    cell.appendChild(txtNode);\n            }\n        }\n        if (XML.customSerial)\n            return new XML.customSerial().serializeToString(xml.documentElement);\n        else\n            return new XMLSerializer().serializeToString(xml.documentElement);\n    }\n    static writeJSON(ds) {\n        let data = ds.data;\n        let nrow = ds.numRows, ncol = ds.numCols;\n        let rowData = new Array(nrow);\n        for (let n = 0; n < nrow; n++)\n            rowData[n] = new Array(ncol);\n        for (let c = 0; c < ncol; c++) {\n            let doConvert = ds.colType(c) == \"molecule\";\n            for (let r = 0; r < nrow; r++) {\n                let val = data.rowData[r][c];\n                if (val != null && doConvert)\n                    val = val.toString();\n                rowData[r][c] = val;\n            }\n        }\n        let json = {\n            title: data.title,\n            description: data.description,\n            colData: deepClone(data.colData),\n            rowData: rowData,\n            extData: deepClone(data.extData),\n        };\n        return json;\n    }\n}\n//# sourceMappingURL=DataSheetStream.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CircularFingerprints } from '../calc/CircularFingerprints';\nimport { Theme } from '../util/Theme';\nimport { DEGRAD, escapeHTML, norm_xy, readTextURL } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { CoordUtil } from './CoordUtil';\nimport { DataSheetStream } from './DataSheetStream';\nimport { MetaMolecule } from './MetaMolecule';\nimport { MolUtil } from './MolUtil';\nexport const TEMPLATE_FILES = [\n    'rings',\n    'termgrp',\n    'funcgrp',\n    'protgrp',\n    'nonplrings',\n    'largerings',\n    'crownethers',\n    'ligmonodent',\n    'ligbident',\n    'ligtrident',\n    'ligmultident',\n    'cagecmplx',\n    'aminoacids',\n    'biomolecules',\n    'saccharides'\n];\nexport class AbbrevContainer {\n    constructor() {\n        this.abbrevs = [];\n    }\n    static needsSetup() { return !this.main; }\n    static setupData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.main)\n                return;\n            if (!Theme.RESOURCE_URL)\n                throw ('RPC resource URL not defined.');\n            this.main = new AbbrevContainer();\n            for (let tfn of TEMPLATE_FILES) {\n                let url = Theme.RESOURCE_URL + '/data/templates/' + tfn + '.ds';\n                let dsstr = yield readTextURL(url);\n                let ds = DataSheetStream.readXML(dsstr);\n                let colMol = ds.firstColOfType(\"molecule\"), colAbbrev = ds.findColByName('Abbrev', \"string\");\n                if (colMol < 0 || colAbbrev < 0)\n                    continue;\n                for (let n = 0; n < ds.numRows; n++) {\n                    let frag = ds.getMoleculeClone(n, colMol), name = ds.getString(n, colAbbrev);\n                    if (!frag || !name)\n                        continue;\n                    let attcount = 0, firstConn = 0;\n                    for (let i = 1; i <= frag.numAtoms; i++)\n                        if (frag.atomElement(i) == MolUtil.TEMPLATE_ATTACHMENT) {\n                            if (firstConn == 0)\n                                firstConn = i;\n                            frag.setAtomElement(i, MolUtil.ABBREV_ATTACHMENT);\n                            attcount++;\n                        }\n                    if (attcount != 1)\n                        continue;\n                    if (firstConn > 1)\n                        frag.swapAtoms(1, firstConn);\n                    this.main.submitAbbreviation(name, frag);\n                }\n            }\n        });\n    }\n    getAbbrevs() {\n        return this.abbrevs.slice(0);\n    }\n    submitAbbreviation(name, infrag, promote = false) {\n        let frag = infrag.clone();\n        this.submitFragment(name, frag, promote);\n    }\n    submitMolecule(inmol, promote = false) {\n        let mol = inmol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let frag = MolUtil.getAbbrev(mol, n);\n            if (!frag)\n                continue;\n            this.submitFragment(mol.atomElement(n), frag, promote);\n        }\n    }\n    substituteAbbrevName(mol, atom) {\n        let frag = MolUtil.getAbbrev(mol, atom);\n        if (!frag)\n            return false;\n        let fragExp = MolUtil.expandedAbbrevs(frag);\n        let fragMF = MolUtil.molecularFormula(fragExp);\n        let fragFP = CircularFingerprints.create(MetaMolecule.createStrictRubric(fragExp), CircularFingerprints.CLASS_ECFP6).getUniqueHashes();\n        for (let abbrev of this.abbrevs)\n            if (abbrev.frag.numAtoms == frag.numAtoms) {\n                let match = CoordUtil.sketchEquivalent(frag, abbrev.frag);\n                if (!match) {\n                    let afragExp = MolUtil.expandedAbbrevs(abbrev.frag);\n                    if (fragMF == MolUtil.molecularFormula(afragExp)) {\n                        let afragFP = CircularFingerprints.create(MetaMolecule.createStrictRubric(afragExp), CircularFingerprints.CLASS_ECFP6).getUniqueHashes();\n                        if (Vec.equals(fragFP, afragFP))\n                            match = true;\n                    }\n                }\n                if (match) {\n                    mol.setAtomElement(atom, abbrev.name);\n                    return true;\n                }\n            }\n        return false;\n    }\n    submitFragment(name, frag, promote) {\n        if (name == '?')\n            return;\n        let vx = 0, vy = 0;\n        let adj = frag.atomAdjList(1);\n        for (let a of adj) {\n            vx += frag.atomX(a) - frag.atomX(1);\n            vy += frag.atomY(a) - frag.atomY(1);\n        }\n        if (adj.length > 1) {\n            let inv = 1.0 / adj.length;\n            vx *= inv;\n            vy *= inv;\n        }\n        if (norm_xy(vx, vy) > 0.1 * 0.1) {\n            let theta = Math.atan2(vy, vx);\n            if (Math.abs(theta) > 2 * DEGRAD)\n                CoordUtil.rotateMolecule(frag, -theta);\n        }\n        let hit = -1;\n        for (let n = 0; n < this.abbrevs.length; n++) {\n            let a = this.abbrevs[n];\n            if (a.name != name)\n                continue;\n            hit = n;\n            break;\n        }\n        let [html, search] = this.formatAbbrevLabel(name);\n        let abv = { name, frag, nameHTML: html, nameSearch: search };\n        if (hit < 0) {\n            if (promote)\n                this.abbrevs.unshift(abv);\n            else\n                this.abbrevs.push(abv);\n        }\n        else {\n            if (promote && hit > 0) {\n                this.abbrevs.splice(hit, 1);\n                this.abbrevs.unshift(abv);\n            }\n            else\n                this.abbrevs[hit] = abv;\n        }\n    }\n    formatAbbrevLabel(name) {\n        let html = '', search = '';\n        let append = (bit, tag) => {\n            if (tag)\n                html += '<' + tag + '>';\n            html += escapeHTML(bit);\n            search += bit;\n            if (tag)\n                html += '</' + tag + '>';\n        };\n        for (let bit of name.split('|')) {\n            while (true) {\n                let match = bit.match(/^(.*?)\\{(.*?)\\}(.*)$/);\n                if (!match)\n                    break;\n                let pre = match[1], mid = match[2], post = match[3];\n                append(pre, null);\n                if (mid.startsWith('^'))\n                    append(mid.substring(1), 'sup');\n                else\n                    append(mid, 'sub');\n                bit = post;\n            }\n            append(bit, null);\n        }\n        return [html, search.toLowerCase()];\n    }\n}\nAbbrevContainer.main = null;\n//# sourceMappingURL=AbbrevContainer.js.map","import { Graph } from '../data/Graph';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { GeomUtil } from '../util/Geom';\nimport { angleDiffPos, DEGRAD, norm2_xy, norm_xy, signum, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport class MetalLigate {\n    constructor(mol, metalAtom, ligandAttach) {\n        this.metalAtom = metalAtom;\n        this.ligandAttach = ligandAttach;\n        this.ligands = [];\n        this.mol = mol.clone();\n    }\n    generate() {\n        const { mol, metalAtom, ligandAttach, ligands } = this;\n        let g = Graph.fromMolecule(mol);\n        g.isolateNode(metalAtom - 1);\n        for (let cc of g.calculateComponentGroups()) {\n            Vec.addTo(cc, 1);\n            let anything = false;\n            for (let a of ligandAttach)\n                if (cc.indexOf(a) >= 0) {\n                    anything = true;\n                    break;\n                }\n            if (!anything)\n                continue;\n            let lig = { atoms: cc, attach: [] };\n            lig.atoms = cc;\n            let anyAttached = false;\n            for (let a of lig.atoms)\n                if (mol.findBond(a, metalAtom) > 0) {\n                    anyAttached = true;\n                    break;\n                }\n            for (let a of lig.atoms) {\n                let bonded = mol.findBond(a, metalAtom) > 0;\n                if (bonded || (!anyAttached && ligandAttach.includes(a)))\n                    lig.attach.push(a);\n            }\n            ligands.push(lig);\n            for (let a of lig.attach)\n                if (mol.findBond(a, metalAtom) == 0)\n                    this.makeLigandBond(a);\n        }\n        if (ligands.length == 0)\n            throw new Error('No ligand atoms');\n        let otherLigands = mol.atomAdjList(metalAtom);\n        for (let lig of ligands)\n            otherLigands = Vec.exclude(otherLigands, lig.attach);\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let otherTheta = new Array(otherLigands.length);\n        for (let n = 0; n < otherLigands.length; n++)\n            otherTheta[n] = Math.atan2(mol.atomY(otherLigands[n]) - my, mol.atomX(otherLigands[n]) - mx);\n        for (let lig of ligands) {\n            if (lig.attach.length == 1) {\n                let a = lig.attach[0];\n                lig.avgTheta = Math.atan2(mol.atomY(a) - my, mol.atomX(a) - mx);\n                this.orientLigand(lig);\n            }\n            else {\n                let theta = new Array(lig.attach.length);\n                for (let n = 0; n < lig.attach.length; n++) {\n                    let a = lig.attach[n];\n                    theta[n] = Math.atan2(mol.atomY(a) - my, mol.atomX(a) - mx);\n                }\n                theta = GeomUtil.sortAngles(theta);\n                let base = theta[0];\n                for (let n = 0; n < theta.length; n++)\n                    theta[n] = angleDiffPos(theta[n], base);\n                lig.avgTheta = base + Vec.sum(theta) / theta.length;\n                this.orientLigand(lig);\n            }\n        }\n        if (otherLigands.length == 0) {\n            ligands.sort((l1, l2) => signum(l1.avgTheta - l2.avgTheta));\n            this.arrangeLigandsFree(ligands);\n        }\n        else if (otherLigands.length == 1) {\n            ligands.sort((l1, l2) => {\n                let diff1 = angleDiffPos(l1.avgTheta, otherTheta[0]);\n                let diff2 = angleDiffPos(l2.avgTheta, otherTheta[0]);\n                return signum(diff1 - diff2);\n            });\n            this.arrangeLigandsRange(ligands, otherTheta[0], TWOPI, true);\n        }\n        else {\n            let otherOrder = Vec.idxSort(otherTheta);\n            for (let n = 0; n < otherOrder.length; n++) {\n                let nn = (n + 1) % otherOrder.length;\n                let theta = otherTheta[otherOrder[n]];\n                let extent = angleDiffPos(otherTheta[otherOrder[nn]], theta);\n                let batch = [];\n                for (let lig of ligands) {\n                    let diff = angleDiffPos(lig.avgTheta, theta);\n                    if (diff < extent)\n                        batch.push(lig);\n                }\n                if (batch.length == 0)\n                    continue;\n                batch.sort((l1, l2) => {\n                    let diff1 = angleDiffPos(l1.avgTheta, theta);\n                    let diff2 = angleDiffPos(l2.avgTheta, theta);\n                    return signum(diff1 - diff2);\n                });\n                this.arrangeLigandsRange(batch, theta, extent, true);\n            }\n        }\n        this.resolveClashes();\n        return mol;\n    }\n    makeLigandBond(ligAtom) {\n        const { mol, metalAtom } = this;\n        let mchg = mol.atomCharge(metalAtom), lchg = mol.atomCharge(ligAtom);\n        if (mchg > 0 && lchg < 0) {\n            mol.setAtomCharge(metalAtom, mchg - 1);\n            mol.setAtomCharge(ligAtom, lchg + 1);\n            mol.addBond(metalAtom, ligAtom, 1);\n            return;\n        }\n        if (mchg < 0 && lchg > 0) {\n            mol.setAtomCharge(metalAtom, mchg + 1);\n            mol.setAtomCharge(ligAtom, lchg - 1);\n            mol.addBond(metalAtom, ligAtom, 1);\n            return;\n        }\n        let order = 0;\n        if (mol.atomHExplicit(ligAtom) == Molecule.HEXPLICIT_UNKNOWN && mol.atomHydrogens(ligAtom) > 0)\n            order = 1;\n        mol.addBond(metalAtom, ligAtom, order);\n    }\n    orientLigand(lig) {\n        const { mol, metalAtom } = this;\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let lsz = lig.atoms.length, asz = lig.attach.length;\n        let idxAttach = new Array(asz);\n        for (let n = 0; n < asz; n++)\n            idxAttach[n] = lig.atoms.indexOf(lig.attach[n]);\n        let lx = new Array(lsz), ly = new Array(lsz);\n        let ax = MolUtil.arrayAtomX(mol), ay = MolUtil.arrayAtomY(mol);\n        let molExtent = Vec.max(ax) - Vec.min(ax) + Vec.max(ay) - Vec.min(ay);\n        let dx = molExtent * Math.cos(lig.avgTheta), dy = molExtent * Math.sin(lig.avgTheta);\n        for (let n = 0; n < lsz; n++) {\n            lx[n] = mol.atomX(lig.atoms[n]) + dx;\n            ly[n] = mol.atomY(lig.atoms[n]) + dy;\n        }\n        let cx = Vec.sum(lx) / lsz, cy = Vec.sum(ly) / lsz;\n        let weight = [];\n        for (let n = 0; n < lsz; n++) {\n            let closest = Number.POSITIVE_INFINITY;\n            for (let idx of idxAttach)\n                closest = Math.min(closest, norm2_xy(lx[n] - lx[idx], ly[n] - ly[idx]));\n            weight.push(1.0 / (1 + Math.sqrt(closest)));\n        }\n        let bestScore = Number.POSITIVE_INFINITY;\n        let bestLX = null, bestLY = null;\n        for (let theta = 0; theta < 360; theta += 15) {\n            let cosTheta = Math.cos(theta * DEGRAD), sinTheta = Math.sin(theta * DEGRAD);\n            let rx = new Array(lsz), ry = new Array(lsz);\n            let score = 0;\n            for (let n = 0; n < lsz; n++) {\n                let x = lx[n] - cx, y = ly[n] - cy;\n                rx[n] = cx + x * cosTheta - y * sinTheta;\n                ry[n] = cy + x * sinTheta + y * cosTheta;\n                let dist = norm_xy(rx[n] - mx, ry[n] - my);\n                if (lig.attach.indexOf(lig.atoms[n]) >= 0)\n                    score += dist;\n                else\n                    score -= dist * weight[n];\n            }\n            if (score < bestScore) {\n                bestScore = score;\n                bestLX = rx;\n                bestLY = ry;\n            }\n        }\n        lx = bestLX;\n        ly = bestLY;\n        if (asz == 1) {\n            dx = Molecule.IDEALBOND * Math.cos(lig.avgTheta);\n            dy = Molecule.IDEALBOND * Math.sin(lig.avgTheta);\n            Vec.addTo(lx, mx + dx - lx[idxAttach[0]]);\n            Vec.addTo(ly, my + dy - ly[idxAttach[0]]);\n        }\n        else {\n            let attTheta = new Array(asz), attDist = Vec.numberArray(0, asz), attDX = Vec.numberArray(0, asz), attDY = Vec.numberArray(0, asz);\n            for (let n = 0; n < asz; n++) {\n                let ox = lx[idxAttach[n]] - mx, oy = ly[idxAttach[n]] - my;\n                attTheta[n] = Math.atan2(oy, ox);\n                if (asz > 2) {\n                    attDist[n] = norm_xy(ox, oy);\n                    attDX[n] = ox / attDist[n];\n                    attDY[n] = oy / attDist[n];\n                }\n            }\n            Vec.addTo(attDist, -Vec.min(attDist));\n            let orderAttach = GeomUtil.idxSortAngles(attTheta);\n            let srcX = new Array(asz), srcY = new Array(asz);\n            let dstX = new Array(asz), dstY = new Array(asz);\n            let dtheta = 45 * DEGRAD / (asz - 1), theta = lig.avgTheta - 0.5 * dtheta;\n            for (let n = 0; n < asz; n++) {\n                srcX[n] = lx[idxAttach[orderAttach[n]]];\n                srcY[n] = ly[idxAttach[orderAttach[n]]];\n                dstX[n] = mx + Molecule.IDEALBOND * Math.cos(theta) + attDist[n] * attDX[n];\n                dstY[n] = my + Molecule.IDEALBOND * Math.sin(theta) + attDist[n] * attDY[n];\n                theta += dtheta / (asz - 1);\n            }\n            let tfm = GeomUtil.superimpose(srcX, srcY, dstX, dstY);\n            for (let n = 0; n < lsz; n++) {\n                let [x, y] = GeomUtil.applyAffine(lx[n], ly[n], tfm);\n                lx[n] = x;\n                ly[n] = y;\n            }\n        }\n        for (let n = 0; n < lsz; n++)\n            mol.setAtomPos(lig.atoms[n], lx[n], ly[n]);\n    }\n    arrangeLigandsFree(batch) {\n        if (batch.length == 1)\n            return;\n        let refTheta = Vec.last(batch).avgTheta;\n        refTheta += 0.5 * angleDiffPos(Vec.first(batch).avgTheta, refTheta);\n        this.arrangeLigandsRange(batch, refTheta, TWOPI, false);\n    }\n    arrangeLigandsRange(batch, refTheta, refSpan, bounded) {\n        const { mol, metalAtom } = this;\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let bsz = batch.length;\n        let thetaMin = new Array(bsz), thetaSpan = new Array(bsz);\n        let ligandSpan = 0;\n        for (let n = 0; n < bsz; n++) {\n            let [theta1, theta2] = this.determineThetaBounds(batch[n]);\n            thetaMin[n] = theta1;\n            thetaSpan[n] = angleDiffPos(theta2, theta1);\n            ligandSpan += thetaSpan[n];\n        }\n        let residual = (refSpan - ligandSpan) / (bsz + (bounded ? 1 : 0));\n        let theta = refTheta + (bounded ? residual : 0.5 * residual);\n        for (let n = 0; n < bsz; n++) {\n            let rotTheta = theta - thetaMin[n];\n            let cosTheta = Math.cos(rotTheta), sinTheta = Math.sin(rotTheta);\n            for (let a of batch[n].atoms) {\n                let x = mol.atomX(a) - mx, y = mol.atomY(a) - my;\n                mol.setAtomPos(a, mx + x * cosTheta - y * sinTheta, my + x * sinTheta + y * cosTheta);\n            }\n            theta += thetaSpan[n] + residual;\n        }\n    }\n    determineThetaBounds(lig) {\n        const { mol, metalAtom } = this;\n        let theta = [];\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        for (let n = 0; n < lig.attach.length; n++) {\n            let x = mol.atomX(lig.attach[n]) - mx;\n            let y = mol.atomY(lig.attach[n]) - my;\n            theta.push(Math.atan2(y, x));\n        }\n        Vec.sort(theta);\n        let bestScore = Number.POSITIVE_INFINITY, bestMin = 0, bestMax = 0;\n        for (let n = 0; n < theta.length; n++) {\n            let score = 0;\n            for (let i = 0; i < theta.length - 1; i++)\n                score += angleDiffPos(theta[i + 1], theta[i]);\n            if (score < bestScore) {\n                bestScore = score;\n                bestMin = Vec.first(theta);\n                bestMax = Vec.last(theta);\n            }\n            theta.push(theta.shift());\n        }\n        return [bestMin, bestMax];\n    }\n    resolveClashes() {\n        const { mol, metalAtom, ligands } = this;\n        const na = mol.numAtoms, nb = mol.numBonds, lsz = this.ligands.length;\n        let ablk = Vec.numberArray(-1, na), bblk = Vec.numberArray(-1, nb);\n        for (let n = 1; n <= na; n++)\n            if (mol.atomConnComp(n) == mol.atomConnComp(metalAtom))\n                ablk[n - 1] = 0;\n        for (let n = 0; n < lsz; n++)\n            for (let a of ligands[n].atoms)\n                ablk[a - 1] = n + 1;\n        for (let n = 1; n <= nb; n++) {\n            let blk1 = ablk[mol.bondFrom(n) - 1], blk2 = ablk[mol.bondTo(n) - 1];\n            if (blk1 < 0 || blk2 < 0) { }\n            else if (blk1 == blk2)\n                bblk[n - 1] = blk1;\n        }\n        let bumpDX = new Array(lsz), bumpDY = new Array(lsz);\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        for (let n = 0; n < lsz; n++) {\n            let lig = ligands[n];\n            let dx = 0, dy = 0;\n            for (let a of lig.attach) {\n                dx += mol.atomX(a) - mx;\n                dy += mol.atomY(a) - my;\n            }\n            dx /= lig.attach.length;\n            dy /= lig.attach.length;\n            let invDist = 1.0 / norm_xy(dx, dy);\n            bumpDX[n] = dx * 0.5 * invDist;\n            bumpDY[n] = dy * 0.5 * invDist;\n        }\n        const CLOSE_SQ = sqr(0.5);\n        for (let count = 0; count < 12; count++) {\n            let tainted = Vec.booleanArray(false, lsz);\n            outer: for (let i = 0; i < na - 1; i++) {\n                if (ablk[i] < 0)\n                    continue;\n                for (let j = i + 1; j < na; j++)\n                    if (ablk[j] >= 0 && ablk[j] != ablk[i]) {\n                        if (norm2_xy(mol.atomX(i + 1) - mol.atomX(j + 1), mol.atomY(i + 1) - mol.atomY(j + 1)) < CLOSE_SQ) {\n                            if (ablk[i] > 0)\n                                tainted[ablk[i] - 1] = true;\n                            if (ablk[j] > 0)\n                                tainted[ablk[j] - 1] = true;\n                        }\n                        if (Vec.allTrue(tainted))\n                            break outer;\n                    }\n            }\n            if (Vec.anyFalse(tainted))\n                outer: for (let i = 0; i < nb - 1; i++) {\n                    if (bblk[i] < 0)\n                        continue;\n                    let x1 = mol.atomX(mol.bondFrom(i + 1)), y1 = mol.atomY(mol.bondFrom(i + 1));\n                    let x2 = mol.atomX(mol.bondTo(i + 1)), y2 = mol.atomY(mol.bondTo(i + 1));\n                    for (let j = i + 1; j < nb; j++)\n                        if (bblk[j] >= 0 && bblk[j] != bblk[i]) {\n                            let x3 = mol.atomX(mol.bondFrom(j + 1)), y3 = mol.atomY(mol.bondFrom(j + 1));\n                            let x4 = mol.atomX(mol.bondTo(j + 1)), y4 = mol.atomY(mol.bondTo(j + 1));\n                            if (GeomUtil.doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4)) {\n                                if (bblk[i] > 0)\n                                    tainted[bblk[i] - 1] = true;\n                                if (bblk[j] > 0)\n                                    tainted[bblk[j] - 1] = true;\n                            }\n                            if (Vec.allTrue(tainted))\n                                break outer;\n                        }\n                }\n            if (Vec.allFalse(tainted))\n                break;\n            for (let n = 0; n < lsz; n++)\n                if (tainted[n]) {\n                    for (let a of ligands[n].atoms) {\n                        mol.setAtomPos(a, mol.atomX(a) + bumpDX[n], mol.atomY(a) + bumpDY[n]);\n                    }\n                }\n        }\n    }\n}\n//# sourceMappingURL=MetalLigate.js.map","import { BondArtifact } from '../data/BondArtifact';\nimport { CoordUtil } from '../data/CoordUtil';\nimport { Graph } from '../data/Graph';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { PolymerBlock } from '../data/PolymerBlock';\nimport { SketchUtil } from '../data/SketchUtil';\nimport { angleDiff, DEGRAD, norm_xy, RADDEG } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport class FusionPermutation {\n    constructor() {\n        this.attdist = 0;\n        this.guided = false;\n        this.bridged = false;\n        this.scoreModifier = 0;\n        this.chainSelect = 0;\n    }\n}\nexport class TemplateFusion {\n    constructor(mol, templ, abbrev) {\n        this.mol = mol;\n        this.templ = templ;\n        this.abbrev = abbrev;\n        this.perms = [];\n        this.numAttach = 0;\n        this.withGuideOnly = false;\n        this.guidetempl = null;\n        this.guideidx = [];\n        this.guideadj = [];\n        this.timeLimit = 5.0;\n        let artif1 = new BondArtifact(mol), artif2 = new BondArtifact(templ);\n        artif2.harmoniseNumbering(artif1);\n        artif2.rewriteMolecule();\n        let poly1 = new PolymerBlock(mol), poly2 = new PolymerBlock(templ);\n        poly2.harmoniseNumbering(poly1);\n        poly2.rewriteMolecule();\n        this.huntForGuides();\n    }\n    permuteNone() {\n        let numAttach = 0;\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        if (oldmol.numAtoms > 0) {\n            let oldbox = oldmol.boundary(), newbox = newmol.boundary();\n            let dx = oldbox.maxX() + 1 - newbox.minX();\n            let dy = 0.5 * (oldbox.minY() + oldbox.maxY()) - 0.5 * (newbox.minY() + newbox.maxY());\n            CoordUtil.translateMolecule(newmol, dx, dy);\n        }\n        else {\n            let newbox = newmol.boundary();\n            CoordUtil.translateMolecule(newmol, -newbox.midX(), -newbox.midY());\n        }\n        let oldbox = oldmol.boundary(), newbox = newmol.boundary();\n        let cx = newbox.midX(), cy = newbox.midY();\n        let ROTN = [0, 30, 45, 60, 90, 120, 135, 150, 180, 210, 225, 240, 270, 300, 315, 330];\n        duplicate: for (let n = 0; n < ROTN.length; n++) {\n            let rotmol = newmol.clone();\n            CoordUtil.rotateMolecule(rotmol, -ROTN[n] * DEGRAD, cx, cy);\n            for (let i = 0; i < this.perms.length; i++)\n                if (CoordUtil.sketchEquivalent(rotmol, this.perms[i].display))\n                    continue duplicate;\n            let p = new FusionPermutation();\n            p.mol = oldmol.clone();\n            p.mol.append(rotmol);\n            p.display = rotmol;\n            p.srcidx = this.sourceIndex(p.mol, oldmol);\n            p.attdist = 0;\n            p.guided = false;\n            this.perms.push(p);\n        }\n    }\n    permuteAtom(atom) {\n        this.numAttach = 1;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            for (let n = 0; n < this.guideidx.length; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeGuidedOne(newperms, oldmol, this.guidetempl, atom, this.guideidx[n]);\n                this.composeGuidedOne(newperms, oldmol, fliptempl, atom, this.guideidx[n]);\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numAtoms; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeDirectOne(newperms, oldmol, newmol, atom, n);\n                this.composeDirectOne(newperms, oldmol, flipmol, atom, n);\n                this.composeBridge(newperms, oldmol, newmol, atom, n);\n                this.composeBridge(newperms, oldmol, flipmol, atom, n);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    permuteBond(a1, a2) {\n        this.numAttach = 2;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            for (let i = 0; i < this.guideidx.length; i++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                let g1 = this.guideidx[i];\n                let adj = this.guidetempl.atomAdjList(g1);\n                for (let j = 0; j < adj.length; j++) {\n                    let g2 = adj[j];\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a1, a2, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a2, a1, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a1, a2, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a2, a1, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a1, a2, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a2, a1, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a1, a2, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a2, a1, g1, g2, false);\n                }\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numBonds; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                let nfr = newmol.bondFrom(n), nto = newmol.bondTo(n);\n                this.composeDirectTwo(newperms, oldmol, newmol, a1, a2, nfr, nto);\n                this.composeDirectTwo(newperms, oldmol, flipmol, a1, a2, nfr, nto);\n                this.composeDirectTwo(newperms, oldmol, newmol, a1, a2, nto, nfr);\n                this.composeDirectTwo(newperms, oldmol, flipmol, a1, a2, nto, nfr);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    permuteMulti(atoms) {\n        this.numAttach = atoms.length;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            if (this.guideidx.length == atoms.length) {\n                this.composeGuidedMulti(newperms, oldmol, this.guidetempl, atoms, this.guideidx, true);\n                this.composeGuidedMulti(newperms, oldmol, fliptempl, atoms, this.guideidx, true);\n            }\n            if (this.guideadj.length == atoms.length) {\n                this.composeGuidedMulti(newperms, oldmol, this.guidetempl, atoms, this.guideadj, false);\n                this.composeGuidedMulti(newperms, oldmol, fliptempl, atoms, this.guideadj, false);\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numAtoms; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeDirectMulti(newperms, oldmol, newmol, atoms, n);\n                this.composeDirectMulti(newperms, oldmol, flipmol, atoms, n);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    huntForGuides() {\n        this.guideidx = [];\n        this.guideadj = [];\n        for (let n = 1; n <= this.templ.numAtoms; n++)\n            if (this.templ.atomElement(n) == 'X' && this.templ.atomAdjCount(n) > 0) {\n                this.guideidx.push(n);\n                let adj = this.templ.atomAdjList(n);\n                for (let i = 0; i < adj.length; i++)\n                    if (this.guideadj.indexOf(adj[i]) < 0)\n                        this.guideadj.push(adj[i]);\n            }\n        if (this.guideidx.length > 0) {\n            this.guidetempl = this.templ.clone();\n            for (let n = this.guideidx.length - 1; n >= 0; n--)\n                this.templ.deleteAtomAndBonds(this.guideidx[n]);\n        }\n    }\n    composeDirectOne(list, oldmol, newmol, o1, n1) {\n        let otheta = SketchUtil.primeDirections(oldmol, o1);\n        let ntheta = SketchUtil.primeDirections(newmol, n1);\n        let ocurrent = CoordUtil.atomBondAngles(oldmol, o1);\n        let ncurrent = CoordUtil.atomBondAngles(newmol, n1);\n        let theta1 = [], theta2 = [], scoreMod = [];\n        for (let i = 0; i < ocurrent.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                theta1.push(ocurrent[i]);\n                theta2.push(ntheta[j]);\n                scoreMod.push(-51);\n            }\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ncurrent.length; j++) {\n                theta1.push(otheta[i]);\n                theta2.push(ncurrent[j]);\n                scoreMod.push(0);\n            }\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                theta1.push(otheta[i]);\n                theta2.push(ntheta[j]);\n                scoreMod.push(0);\n            }\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1), nx = newmol.atomX(n1), ny = newmol.atomY(n1);\n        for (let n = 0; n < theta1.length; n++) {\n            let dth = angleDiff(theta1[n], theta2[n]);\n            let frag = newmol.clone();\n            CoordUtil.translateMolecule(frag, ox - nx, oy - ny);\n            CoordUtil.rotateMolecule(frag, dth, ox, oy);\n            let pmol = oldmol.clone();\n            let osz = pmol.numAtoms;\n            pmol.append(frag);\n            let srcidx = this.sourceIndex(pmol, oldmol);\n            SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n            if (pmol.numAtoms == osz)\n                continue;\n            let p = new FusionPermutation();\n            p.mol = pmol;\n            p.display = frag;\n            p.srcidx = srcidx;\n            p.molidx = [o1];\n            p.temidx = [n1];\n            p.attdist = bfs[n1 - 1];\n            p.guided = false;\n            p.scoreModifier = scoreMod[n];\n            this.removeExtraGuides(p, oldmol);\n            list.push(p);\n        }\n    }\n    composeDirectTwo(list, oldmol, newmol, o1, o2, n1, n2) {\n        let oth = Math.atan2(oldmol.atomY(o2) - oldmol.atomY(o1), oldmol.atomX(o2) - oldmol.atomX(o1));\n        let nth = Math.atan2(newmol.atomY(n2) - newmol.atomY(n1), newmol.atomX(n2) - newmol.atomX(n1));\n        let cx = 0.5 * (oldmol.atomX(o1) + oldmol.atomX(o2)), cy = 0.5 * (oldmol.atomY(o1) + oldmol.atomY(o2));\n        let frag = newmol.clone();\n        CoordUtil.translateMolecule(frag, cx - 0.5 * (newmol.atomX(n1) + newmol.atomX(n2)), cy - 0.5 * (newmol.atomY(n1) + newmol.atomY(n2)));\n        CoordUtil.rotateMolecule(frag, oth - nth, cx, cy);\n        frag.setAtomPos(n1, oldmol.atomX(o1), oldmol.atomY(o1));\n        frag.setAtomPos(n2, oldmol.atomX(o2), oldmol.atomY(o2));\n        let pmol = oldmol.clone();\n        let osz = pmol.numAtoms;\n        pmol.append(frag);\n        let srcidx = this.sourceIndex(pmol, oldmol);\n        SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n        if (pmol.numAtoms == osz)\n            return;\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        let p = new FusionPermutation();\n        p.mol = pmol;\n        p.display = frag;\n        p.srcidx = srcidx;\n        p.molidx = [o1, o2];\n        p.temidx = [n1, n2];\n        p.attdist = Math.min(bfs[n1 - 1], bfs[n2 - 1]);\n        p.guided = false;\n        this.removeExtraGuides(p, oldmol);\n        list.push(p);\n    }\n    composeDirectMulti(list, oldmol, newmol, oidx, n1) {\n        let frag = newmol.clone();\n        let x0 = oldmol.atomX(oidx[0]), y0 = oldmol.atomY(oidx[0]);\n        CoordUtil.translateMolecule(frag, x0 - frag.atomX(n1), y0 - frag.atomY(n1));\n        let ox = oldmol.atomX(oidx[1]) - x0, oy = oldmol.atomY(oidx[1]) - y0;\n        let otheta = Math.atan2(oy, ox), orad = norm_xy(ox, oy);\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(1);\n        let nidx = [];\n        for (let n2 = 1; n2 <= frag.numAtoms; n2++)\n            if (n1 != n2) {\n                let nx = frag.atomX(n2) - frag.atomX(n1), ny = frag.atomY(n2) - frag.atomY(n1), nrad = norm_xy(nx, ny);\n                if (Math.abs(nrad - orad) > 0.1)\n                    continue;\n                let ntheta = Math.atan2(ny, nx);\n                CoordUtil.rotateMolecule(frag, otheta - ntheta, x0, y0);\n                nidx = [n1, n2];\n                for (let i = 2; i < oidx.length; i++) {\n                    let hit = false;\n                    for (let j = 1; j <= frag.numAtoms; j++)\n                        if (nidx.indexOf(j) < 0)\n                            if (norm_xy(oldmol.atomX(oidx[i]) - frag.atomX(j), oldmol.atomY(oidx[i]) - frag.atomY(j)) < 0.1 * 0.1) {\n                                hit = true;\n                                nidx.push(j);\n                                break;\n                            }\n                    if (!hit)\n                        break;\n                }\n                if (nidx.length < oidx.length)\n                    continue;\n                let lowbfs = bfs.length;\n                for (let n = 0; n < nidx.length; n++)\n                    lowbfs = Math.min(lowbfs, bfs[nidx[n] - 1]);\n                let dx = 0, dy = 0;\n                for (let n = 0; n < oidx.length; n++) {\n                    dx += oldmol.atomX(oidx[n]) - frag.atomX(nidx[n]);\n                    dy += oldmol.atomY(oidx[n]) - frag.atomY(nidx[n]);\n                }\n                let invsz = 1.0 / oidx.length;\n                dx *= invsz;\n                dy *= invsz;\n                CoordUtil.translateMolecule(frag, dx, dy);\n                let pmol = oldmol.clone();\n                let osz = pmol.numAtoms;\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                for (let n = 0; n < nidx.length; n++) {\n                    let x = pmol.atomX(oidx[n]), y = pmol.atomY(oidx[n]);\n                    pmol.setAtomPos(osz + nidx[n], x, y);\n                }\n                SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n                if (pmol.numAtoms == osz)\n                    continue;\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag.clone();\n                p.srcidx = srcidx;\n                p.molidx = oidx.slice(0);\n                p.temidx = nidx.slice(0);\n                p.attdist = Math.min(bfs[n1 - 1], bfs[n2 - 1]);\n                p.guided = false;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    composeBridge(list, oldmol, newmol, o1, n1) {\n        let busy1 = oldmol.atomRingBlock(o1) != 0 || oldmol.atomAdjCount(o1) >= 3;\n        let busy2 = newmol.atomRingBlock(n1) != 0 || newmol.atomAdjCount(n1) >= 3;\n        if (!busy1 || !busy2)\n            return;\n        let otheta = SketchUtil.primeDirections(oldmol, o1);\n        let ntheta = SketchUtil.primeDirections(newmol, n1);\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1), nx = newmol.atomX(n1), ny = newmol.atomY(n1);\n                let dx = Molecule.IDEALBOND * Math.cos(otheta[i]), dy = Molecule.IDEALBOND * Math.sin(otheta[i]);\n                let dth = angleDiff(otheta[i], Math.PI + ntheta[j]);\n                let frag = newmol.clone();\n                CoordUtil.translateMolecule(frag, ox - nx + dx, oy - ny + dy);\n                CoordUtil.rotateMolecule(frag, dth, ox + dx, oy + dy);\n                let pmol = oldmol.clone();\n                let att = pmol.numAtoms + n1, osz = pmol.numAtoms;\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                pmol.addBond(o1, att, 1);\n                att = frag.addAtom('C', ox, oy);\n                frag.addBond(n1, att, 1);\n                SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n                if (pmol.numAtoms == osz)\n                    continue;\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag;\n                p.srcidx = srcidx;\n                p.molidx = [o1];\n                p.temidx = [att];\n                p.attdist = bfs[n1 - 1];\n                p.bridged = true;\n                p.guided = false;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    composeGuidedOne(list, oldmol, newmol, oidx, gidx) {\n        if (newmol.atomAdjCount(gidx) == 0)\n            return;\n        let otheta = SketchUtil.primeDirections(oldmol, oidx);\n        if (newmol.atomAdjCount(gidx) > 1 && oldmol.atomAdjCount(oidx) > 0) {\n            let ox = 0, oy = 0;\n            let adj = oldmol.atomAdjList(oidx);\n            for (let n = 0; n < adj.length; n++) {\n                ox += oldmol.atomX(adj[n]) - oldmol.atomX(oidx);\n                oy += oldmol.atomY(adj[n]) - oldmol.atomY(oidx);\n            }\n            let ang = Math.atan2(oy, ox);\n            let unique = true;\n            for (let n = 0; n < otheta.length; n++)\n                if (Math.abs(angleDiff(ang, otheta[n])) < 3 * RADDEG) {\n                    unique = false;\n                    break;\n                }\n            if (unique)\n                otheta.push(ang);\n        }\n        let gx = newmol.atomX(gidx), gy = newmol.atomY(gidx);\n        let dx = 0, dy = 0;\n        let adj = newmol.atomAdjList(gidx);\n        for (let n = 0; n < adj.length; n++) {\n            dx += newmol.atomX(adj[n]) - gx;\n            dy += newmol.atomY(adj[n]) - gy;\n        }\n        dx /= adj.length;\n        dy /= adj.length;\n        let ntheta = Math.atan2(dy, dx);\n        let homoPenalty = 0;\n        if (adj.length == 1) {\n            let oel = oldmol.atomElement(oidx), nel = newmol.atomElement(adj[0]);\n            if (oel != 'C' && oel == nel)\n                homoPenalty = 1;\n        }\n        for (let n = 0; n < otheta.length; n++) {\n            let frag = newmol.clone();\n            if (this.guideidx.length == 2) {\n                for (let i = 1; i <= frag.numAtoms; i++)\n                    if (i != gidx && frag.atomElement(i) == 'X') {\n                        frag.setAtomElement(i, TemplateFusion.RESERVED_GUIDESYMBOL);\n                        break;\n                    }\n            }\n            CoordUtil.rotateMolecule(frag, otheta[n] - ntheta, gx, gy);\n            CoordUtil.translateMolecule(frag, oldmol.atomX(oidx) - gx, oldmol.atomY(oidx) - gy);\n            let pmol = oldmol.clone();\n            let osz = pmol.numAtoms;\n            pmol.append(frag);\n            let srcidx = this.sourceIndex(pmol, oldmol);\n            SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n            if (pmol.numAtoms == osz)\n                continue;\n            let sel = 0;\n            for (let i = 1; i <= pmol.numAtoms; i++)\n                if (pmol.atomElement(i) == TemplateFusion.RESERVED_GUIDESYMBOL) {\n                    let padj = pmol.atomAdjList(i);\n                    if (padj.length == 1) {\n                        sel = padj[0];\n                        if (sel > i)\n                            sel--;\n                    }\n                    pmol.deleteAtomAndBonds(i);\n                    srcidx.splice(i - 1, 1);\n                    break;\n                }\n            let p = new FusionPermutation();\n            p.mol = pmol;\n            p.display = frag;\n            p.srcidx = srcidx;\n            p.molidx = [oidx];\n            p.temidx = [gidx];\n            p.attdist = 0;\n            p.guided = true;\n            p.scoreModifier = homoPenalty;\n            p.chainSelect = sel;\n            this.removeExtraGuides(p, oldmol);\n            list.push(p);\n        }\n    }\n    composeGuidedTwo(list, oldmol, newmol, o1, o2, gidx, nidx, snapToGuide) {\n        let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1);\n        let gx = newmol.atomX(gidx), gy = newmol.atomY(gidx);\n        let nx = newmol.atomX(nidx), ny = newmol.atomY(nidx);\n        let otheta = Math.atan2(oldmol.atomY(o2) - oy, oldmol.atomX(o2) - ox);\n        let gtheta = Math.atan2(ny - gy, nx - gx);\n        let isGuideOnTerminal = oldmol.atomAdjCount(o1) == 1;\n        let pmol = oldmol.clone(), frag = newmol.clone();\n        CoordUtil.rotateMolecule(frag, otheta - gtheta, gx, gy);\n        if (snapToGuide) {\n            CoordUtil.translateMolecule(frag, ox - gx, oy - gy);\n            pmol.setAtomPos(o2, frag.atomX(nidx), frag.atomY(nidx));\n        }\n        else {\n            CoordUtil.translateMolecule(frag, oldmol.atomX(o2) - frag.atomX(nidx), oldmol.atomY(o2) - frag.atomY(nidx));\n            frag.setAtomPos(gidx, ox, oy);\n        }\n        let osz = pmol.numAtoms;\n        pmol.append(frag);\n        let srcidx = this.sourceIndex(pmol, oldmol);\n        SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n        if (pmol.numAtoms == osz)\n            return;\n        let p = new FusionPermutation();\n        p.mol = pmol;\n        p.display = frag;\n        p.srcidx = srcidx;\n        p.molidx = [o1, o2];\n        p.temidx = [gidx, nidx];\n        p.attdist = isGuideOnTerminal ? 1 : 0;\n        p.guided = true;\n        this.removeExtraGuides(p, oldmol);\n        list.push(p);\n    }\n    composeGuidedMulti(list, oldmol, newmol, oidx, gidx, nudgenew) {\n        let cx1 = 0, cy1 = 0, cx2 = 0, cy2 = 0;\n        for (let n = 0; n < oidx.length; n++) {\n            cx1 += oldmol.atomX(oidx[n]);\n            cy1 += oldmol.atomY(oidx[n]);\n        }\n        for (let n = 0; n < gidx.length; n++) {\n            cx2 += newmol.atomX(gidx[n]);\n            cy2 += newmol.atomY(gidx[n]);\n        }\n        cx1 /= oidx.length;\n        cy1 /= oidx.length;\n        cx2 /= gidx.length;\n        cy2 /= gidx.length;\n        let osz = oldmol.numAtoms;\n        for (let i = 0; i < oidx.length; i++)\n            for (let j = 0; j < gidx.length; j++) {\n                let pmol = oldmol.clone(), frag = newmol.clone();\n                let th1 = Math.atan2(pmol.atomY(oidx[i]) - cy1, pmol.atomX(oidx[i]) - cx1);\n                let th2 = Math.atan2(frag.atomY(gidx[j]) - cy2, frag.atomX(gidx[j]) - cx2);\n                CoordUtil.rotateMolecule(frag, th1 - th2, cx2, cy2);\n                CoordUtil.translateMolecule(frag, cx1 - cx2, cy1 - cy2);\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                let midx = Vec.numberArray(0, gidx.length), tidx = gidx.slice(0);\n                Vec.sort(tidx);\n                let mask = Vec.booleanArray(false, osz);\n                for (let g = tidx.length - 1; g >= 0; g--) {\n                    let gatom = tidx[g] + osz;\n                    let closest = 0, closeDSQ = 0;\n                    for (let n = 0; n < oidx.length; n++)\n                        if (!mask[oidx[n] - 1]) {\n                            let dx = pmol.atomX(oidx[n]) - pmol.atomX(gatom), dy = pmol.atomY(oidx[n]) - pmol.atomY(gatom);\n                            let dsq = norm_xy(dx, dy);\n                            if (closest == 0 || dsq < closeDSQ) {\n                                closest = oidx[n];\n                                closeDSQ = dsq;\n                            }\n                        }\n                    if (!nudgenew) {\n                        let dsq = norm_xy(pmol.atomX(gatom) - pmol.atomX(closest), pmol.atomY(gatom) - pmol.atomY(closest));\n                        if (dsq > 0.1 * 0.1) {\n                            let num = frag.addAtom('C', pmol.atomX(closest), pmol.atomY(closest));\n                            frag.addBond(num, tidx[g], 0);\n                        }\n                        pmol.setAtomPos(closest, pmol.atomX(gatom), pmol.atomY(gatom));\n                    }\n                    midx[g] = closest;\n                    mask[closest - 1] = true;\n                    let adj = pmol.atomAdjList(gatom);\n                    for (let n = 0; n < adj.length; n++) {\n                        let b = pmol.findBond(gatom, adj[n]);\n                        pmol.addBond(closest, adj[n], pmol.bondOrder(b), pmol.bondType(b));\n                    }\n                    pmol.deleteAtomAndBonds(gatom);\n                    srcidx.splice(gatom - 1, 1);\n                    frag.setAtomPos(tidx[g], pmol.atomX(closest), pmol.atomY(closest));\n                }\n                for (let n = pmol.numAtoms; n > osz; n--)\n                    if (pmol.atomElement(n) == 'X') {\n                        pmol.deleteAtomAndBonds(n);\n                        srcidx.splice(n - 1, 1);\n                        for (let k = 0; k < tidx.length; k++)\n                            if (n < tidx[k])\n                                tidx[k]--;\n                    }\n                for (let n = frag.numAtoms; n >= 1; n--)\n                    if (frag.atomElement(n) == 'X') {\n                        frag.setAtomElement(n, 'C');\n                    }\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag;\n                p.srcidx = srcidx;\n                p.molidx = midx;\n                p.temidx = tidx;\n                p.attdist = 0;\n                p.guided = true;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    affixRawPermutations(list) {\n        let npsz = list.length;\n        if (npsz == 0)\n            return;\n        let umask = Vec.booleanArray(true, npsz);\n        for (let i = 0; i < npsz - 1; i++)\n            if (umask[i]) {\n                let p1 = list[i];\n                for (let j = i + 1; j < npsz; j++)\n                    if (umask[j]) {\n                        let p2 = list[j];\n                        if (CoordUtil.sketchEquivalent(p1.mol, p2.mol)) {\n                            if (p1.scoreModifier + p1.attdist > p2.scoreModifier + p2.attdist) {\n                                list[i] = p2;\n                                list[j] = p1;\n                            }\n                            umask[j] = false;\n                        }\n                    }\n            }\n        let score = Vec.numberArray(0, npsz);\n        let numKeep = 0;\n        for (let n = 0; n < npsz; n++) {\n            if (umask[n]) {\n                score[n] = this.scorePermutation(list[n]);\n                if (score[n] < 1000)\n                    numKeep++;\n            }\n            else\n                score[n] = 0;\n        }\n        if (numKeep > 0)\n            for (let n = 0; n < npsz; n++)\n                if (umask[n] && score[n] >= 1000)\n                    umask[n] = false;\n        let uscore = [], uidx = [];\n        for (let n = 0; n < npsz; n++)\n            if (umask[n]) {\n                uscore.push(score[n]);\n                uidx.push(n);\n            }\n        let sidx = Vec.idxSort(uscore);\n        for (let n = 0; n < sidx.length; n++) {\n            let p = list[uidx[sidx[n]]];\n            if (p.guided) {\n                this.perms.push(p);\n            }\n        }\n        for (let n = 0; n < sidx.length; n++) {\n            let p = list[uidx[sidx[n]]];\n            if (!p.guided) {\n                this.perms.push(p);\n            }\n        }\n    }\n    removeExtraGuides(perm, oldmol) {\n        MolUtil.removeDuplicateBonds(perm.mol);\n        for (let n = perm.temidx.length - 1; n >= 0; n--) {\n            let el = perm.display.atomElement(perm.temidx[n]);\n            if (el != 'X' && el != TemplateFusion.RESERVED_GUIDESYMBOL)\n                continue;\n            perm.molidx.splice(n, 1);\n            perm.temidx.splice(n, 1);\n        }\n        for (let n = perm.display.numAtoms; n >= 1; n--) {\n            let el = perm.display.atomElement(n);\n            if (el != 'X' && el != TemplateFusion.RESERVED_GUIDESYMBOL)\n                continue;\n            let a = CoordUtil.atomAtPoint(oldmol, perm.display.atomX(n), perm.display.atomY(n));\n            if (a > 0)\n                perm.display.setAtomElement(n, 'C');\n            else {\n                perm.display.deleteAtomAndBonds(n);\n                for (let i = 0; i < perm.temidx.length; i++)\n                    if (perm.temidx[i] > n)\n                        perm.temidx[i]--;\n            }\n        }\n    }\n    scorePermutation(perm) {\n        let mol = this.mol, tmol = perm.display, tunion = perm.mol;\n        let score = 0.2 * perm.attdist + perm.scoreModifier;\n        score += CoordUtil.congestionMolecule(tunion, 1e-3);\n        score -= tunion.numAtoms;\n        let sz1 = mol.numAtoms, sz2 = tmol.numAtoms;\n        let mx1 = [], my1 = [], mx2 = [], my2 = [];\n        for (let n = 0; n < sz1; n++) {\n            mx1.push(mol.atomX(n + 1));\n            my1.push(mol.atomY(n + 1));\n        }\n        for (let n = 0; n < sz2; n++) {\n            mx2.push(tmol.atomX(n + 1));\n            my2.push(tmol.atomY(n + 1));\n        }\n        for (let i = 0; i < sz1; i++)\n            for (let j = 0; j < sz2; j++) {\n                if (norm_xy(mx1[i] - mx2[j], my1[i] - my2[j]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                    continue;\n                let contained = false;\n                for (let k = 0; k < perm.molidx.length; k++)\n                    if (perm.molidx[k] == i + 1 && perm.temidx[k] == j + 1) {\n                        contained = true;\n                        break;\n                    }\n                if (contained)\n                    continue;\n                score += 100;\n            }\n        if (!perm.guided)\n            for (let n = 0; n < perm.molidx.length; n++) {\n                let el = mol.atomElement(perm.molidx[n]);\n                if (el == 'C' || el == 'O' || el == 'S' || el == 'N' || el == 'P')\n                    continue;\n                let adj1 = mol.atomAdjList(perm.molidx[n]), adj2 = tmol.atomAdjList(perm.temidx[n]);\n                if (adj1.length + adj2.length >= 4)\n                    continue;\n                for (let i = 0; i < adj1.length; i++)\n                    for (let j = 0; j < adj2.length; j++) {\n                        let ai = adj1[i], aj = adj2[j];\n                        let bo1 = mol.bondOrder(mol.findBond(perm.molidx[n], ai));\n                        let bo2 = tmol.bondOrder(tmol.findBond(perm.temidx[n], aj));\n                        let wantTheta = 0;\n                        if ((bo1 == 1 && bo2 == 1) || (bo1 == 1 && bo2 == 2) || (bo1 == 2 && bo2 == 1))\n                            wantTheta = 120;\n                        else if ((bo1 == 2 && bo2 == 2) || (bo1 == 1 && bo2 == 3) || (bo1 == 3 && bo2 == 1))\n                            wantTheta = 180;\n                        else\n                            continue;\n                        let dx1 = mx1[ai - 1] - mx1[perm.molidx[n] - 1];\n                        let dy1 = my1[ai - 1] - my1[perm.molidx[n] - 1];\n                        let dx2 = mx2[aj - 1] - mx2[perm.temidx[n] - 1];\n                        let dy2 = my2[aj - 1] - my2[perm.temidx[n] - 1];\n                        let theta = Math.abs(angleDiff(Math.atan2(dy1, dx1), Math.atan2(dy2, dx2))) * RADDEG;\n                        if (Math.abs(theta - wantTheta) > 5)\n                            score += 50;\n                    }\n            }\n        for (let n = 1; n <= tunion.numAtoms; n++)\n            if (tunion.atomElement(n) == 'C' || tunion.atomElement(n) == 'N') {\n                let adjb = tunion.atomAdjBonds(n);\n                let totalBO = 0;\n                for (let i = 0; i < adjb.length; i++) {\n                    let bo = tunion.bondOrder(adjb[i]);\n                    totalBO += bo;\n                    if (bo == 0) {\n                        totalBO = 0;\n                        break;\n                    }\n                }\n                if (totalBO > 4)\n                    score += 1000;\n            }\n        if (perm.molidx.length >= 2) {\n            let mmask = Vec.booleanArray(false, sz1);\n            for (let n = 0; n < perm.molidx.length; n++)\n                mmask[perm.molidx[n] - 1] = true;\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n                if (!mmask[bfr - 1] || !mmask[bto - 1])\n                    continue;\n                let tfr = perm.molidx.indexOf(bfr), tto = perm.molidx.indexOf(bto);\n                let tn = tmol.findBond(perm.temidx[tfr], perm.temidx[tto]);\n                if (tn == 0)\n                    continue;\n                if (mol.bondOrder(n) != tmol.bondOrder(tn))\n                    score += 1;\n            }\n        }\n        return score;\n    }\n    sourceIndex(xmol, wmol) {\n        let idx = Vec.numberArray(0, xmol.numAtoms);\n        for (let n = wmol.numAtoms; n >= 1; n--)\n            idx[n - 1] = n;\n        return idx;\n    }\n    asMask(imask) {\n        let ret = Vec.booleanArray(false, imask.length);\n        for (let n = 0; n < imask.length; n++)\n            ret[n] = imask[n] != 0;\n        return ret;\n    }\n}\nTemplateFusion.RESERVED_GUIDESYMBOL = 'XXX';\n//# sourceMappingURL=TemplateFusion.js.map","import { AbbrevContainer } from '../data/AbbrevContainer';\nimport { BondArtifact } from '../data/BondArtifact';\nimport { Chemistry } from '../data/Chemistry';\nimport { CoordUtil } from '../data/CoordUtil';\nimport { Graph } from '../data/Graph';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { PolymerBlock } from '../data/PolymerBlock';\nimport { QueryTypeAtom, QueryUtil } from '../data/QueryUtil';\nimport { SketchUtil } from '../data/SketchUtil';\nimport { angleDiff, angleNorm, DEGRAD, norm2_xy, norm_xy, RADDEG, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { MetalLigate } from './MetalLigate';\nimport { TemplateFusion } from './TemplateFusion';\nexport var ActivityType;\n(function (ActivityType) {\n    ActivityType[ActivityType[\"Delete\"] = 1] = \"Delete\";\n    ActivityType[ActivityType[\"Clear\"] = 2] = \"Clear\";\n    ActivityType[ActivityType[\"Copy\"] = 3] = \"Copy\";\n    ActivityType[ActivityType[\"Cut\"] = 4] = \"Cut\";\n    ActivityType[ActivityType[\"SelectAll\"] = 5] = \"SelectAll\";\n    ActivityType[ActivityType[\"SelectNone\"] = 6] = \"SelectNone\";\n    ActivityType[ActivityType[\"SelectPrevComp\"] = 7] = \"SelectPrevComp\";\n    ActivityType[ActivityType[\"SelectNextComp\"] = 8] = \"SelectNextComp\";\n    ActivityType[ActivityType[\"SelectSide\"] = 9] = \"SelectSide\";\n    ActivityType[ActivityType[\"SelectGrow\"] = 10] = \"SelectGrow\";\n    ActivityType[ActivityType[\"SelectShrink\"] = 11] = \"SelectShrink\";\n    ActivityType[ActivityType[\"SelectChain\"] = 12] = \"SelectChain\";\n    ActivityType[ActivityType[\"SelectSmRing\"] = 13] = \"SelectSmRing\";\n    ActivityType[ActivityType[\"SelectRingBlk\"] = 14] = \"SelectRingBlk\";\n    ActivityType[ActivityType[\"SelectCurElement\"] = 15] = \"SelectCurElement\";\n    ActivityType[ActivityType[\"SelectToggle\"] = 16] = \"SelectToggle\";\n    ActivityType[ActivityType[\"SelectUnCurrent\"] = 17] = \"SelectUnCurrent\";\n    ActivityType[ActivityType[\"Element\"] = 18] = \"Element\";\n    ActivityType[ActivityType[\"AtomPos\"] = 19] = \"AtomPos\";\n    ActivityType[ActivityType[\"Charge\"] = 20] = \"Charge\";\n    ActivityType[ActivityType[\"Connect\"] = 21] = \"Connect\";\n    ActivityType[ActivityType[\"Disconnect\"] = 22] = \"Disconnect\";\n    ActivityType[ActivityType[\"MetalLigate\"] = 23] = \"MetalLigate\";\n    ActivityType[ActivityType[\"BondOrder\"] = 24] = \"BondOrder\";\n    ActivityType[ActivityType[\"BondType\"] = 25] = \"BondType\";\n    ActivityType[ActivityType[\"BondGeom\"] = 26] = \"BondGeom\";\n    ActivityType[ActivityType[\"BondAtom\"] = 27] = \"BondAtom\";\n    ActivityType[ActivityType[\"BondSwitch\"] = 28] = \"BondSwitch\";\n    ActivityType[ActivityType[\"BondRotate\"] = 29] = \"BondRotate\";\n    ActivityType[ActivityType[\"BondAddTwo\"] = 30] = \"BondAddTwo\";\n    ActivityType[ActivityType[\"BondInsert\"] = 31] = \"BondInsert\";\n    ActivityType[ActivityType[\"Join\"] = 32] = \"Join\";\n    ActivityType[ActivityType[\"Nudge\"] = 33] = \"Nudge\";\n    ActivityType[ActivityType[\"NudgeLots\"] = 34] = \"NudgeLots\";\n    ActivityType[ActivityType[\"NudgeFar\"] = 35] = \"NudgeFar\";\n    ActivityType[ActivityType[\"Flip\"] = 36] = \"Flip\";\n    ActivityType[ActivityType[\"Scale\"] = 37] = \"Scale\";\n    ActivityType[ActivityType[\"Rotate\"] = 38] = \"Rotate\";\n    ActivityType[ActivityType[\"BondDist\"] = 39] = \"BondDist\";\n    ActivityType[ActivityType[\"AlignAngle\"] = 40] = \"AlignAngle\";\n    ActivityType[ActivityType[\"AlignRegular\"] = 41] = \"AlignRegular\";\n    ActivityType[ActivityType[\"AdjustTorsion\"] = 42] = \"AdjustTorsion\";\n    ActivityType[ActivityType[\"Move\"] = 43] = \"Move\";\n    ActivityType[ActivityType[\"Ring\"] = 44] = \"Ring\";\n    ActivityType[ActivityType[\"TemplateFusion\"] = 45] = \"TemplateFusion\";\n    ActivityType[ActivityType[\"AbbrevTempl\"] = 46] = \"AbbrevTempl\";\n    ActivityType[ActivityType[\"AbbrevGroup\"] = 47] = \"AbbrevGroup\";\n    ActivityType[ActivityType[\"AbbrevFormula\"] = 48] = \"AbbrevFormula\";\n    ActivityType[ActivityType[\"AbbrevClear\"] = 49] = \"AbbrevClear\";\n    ActivityType[ActivityType[\"AbbrevExpand\"] = 50] = \"AbbrevExpand\";\n    ActivityType[ActivityType[\"BondArtifactPath\"] = 51] = \"BondArtifactPath\";\n    ActivityType[ActivityType[\"BondArtifactRing\"] = 52] = \"BondArtifactRing\";\n    ActivityType[ActivityType[\"BondArtifactArene\"] = 53] = \"BondArtifactArene\";\n    ActivityType[ActivityType[\"BondArtifactClear\"] = 54] = \"BondArtifactClear\";\n    ActivityType[ActivityType[\"PolymerBlock\"] = 55] = \"PolymerBlock\";\n    ActivityType[ActivityType[\"AddHydrogens\"] = 56] = \"AddHydrogens\";\n    ActivityType[ActivityType[\"RemoveHydrogens\"] = 57] = \"RemoveHydrogens\";\n    ActivityType[ActivityType[\"QueryClear\"] = 58] = \"QueryClear\";\n    ActivityType[ActivityType[\"QueryCopy\"] = 59] = \"QueryCopy\";\n    ActivityType[ActivityType[\"QueryPaste\"] = 60] = \"QueryPaste\";\n    ActivityType[ActivityType[\"QuerySetAtom\"] = 61] = \"QuerySetAtom\";\n    ActivityType[ActivityType[\"QuerySetBond\"] = 62] = \"QuerySetBond\";\n    ActivityType[ActivityType[\"QueryBondAny\"] = 63] = \"QueryBondAny\";\n    ActivityType[ActivityType[\"SproutDirection\"] = 64] = \"SproutDirection\";\n})(ActivityType || (ActivityType = {}));\nexport class MoleculeActivity {\n    constructor(input, activity, param, owner) {\n        this.input = input;\n        this.activity = activity;\n        this.param = param;\n        this.owner = owner;\n        this.toClipboard = null;\n        this.output =\n            {\n                mol: null,\n                currentAtom: -1,\n                currentBond: -1,\n                selectedMask: null\n            };\n        let na = this.input.mol.numAtoms;\n        if (this.input.selectedMask == null)\n            this.input.selectedMask = Vec.booleanArray(false, na);\n        while (this.input.selectedMask.length < na)\n            this.input.selectedMask.push(false);\n        this.subjectMask = this.input.selectedMask.slice(0);\n        this.subjectLength = Vec.maskCount(this.subjectMask);\n        this.subjectIndex = [];\n        this.hasSelected = this.subjectLength > 0;\n        if (this.subjectLength == 0) {\n            if (this.input.currentAtom > 0) {\n                this.subjectLength = 1;\n                this.subjectMask[this.input.currentAtom - 1] = true;\n                this.subjectIndex = [this.input.currentAtom];\n            }\n            else if (this.input.currentBond > 0) {\n                let bfr = this.input.mol.bondFrom(this.input.currentBond), bto = this.input.mol.bondTo(this.input.currentBond);\n                let b1 = Math.min(bfr, bto), b2 = Math.max(bfr, bto);\n                this.subjectLength = 2;\n                this.subjectMask[b1 - 1] = true;\n                this.subjectMask[b2 - 1] = true;\n                this.subjectIndex = [b1, b2];\n            }\n        }\n        else {\n            this.subjectIndex = Vec.maskIdx(this.subjectMask);\n            Vec.addTo(this.subjectIndex, 1);\n        }\n    }\n    setOwner(owner) {\n        this.owner = owner;\n    }\n    evaluate() {\n        return true;\n    }\n    execute() {\n        let param = this.param;\n        if (this.activity == ActivityType.Delete)\n            this.execDelete();\n        else if (this.activity == ActivityType.Clear)\n            this.execClear();\n        else if (this.activity == ActivityType.Copy)\n            this.execCopy(false);\n        else if (this.activity == ActivityType.Cut)\n            this.execCopy(true);\n        else if (this.activity == ActivityType.SelectAll)\n            this.execSelectAll(true);\n        else if (this.activity == ActivityType.SelectNone)\n            this.execSelectAll(false);\n        else if (this.activity == ActivityType.SelectPrevComp)\n            this.execSelectComp(-1);\n        else if (this.activity == ActivityType.SelectNextComp)\n            this.execSelectComp(1);\n        else if (this.activity == ActivityType.SelectSide)\n            this.execSelectSide();\n        else if (this.activity == ActivityType.SelectGrow)\n            this.execSelectGrow();\n        else if (this.activity == ActivityType.SelectShrink)\n            this.execSelectShrink();\n        else if (this.activity == ActivityType.SelectChain)\n            this.execSelectChain();\n        else if (this.activity == ActivityType.SelectSmRing)\n            this.execSelectSmRing();\n        else if (this.activity == ActivityType.SelectRingBlk)\n            this.execSelectRingBlk();\n        else if (this.activity == ActivityType.SelectCurElement)\n            this.execSelectCurElement();\n        else if (this.activity == ActivityType.SelectToggle)\n            this.execSelectToggle();\n        else if (this.activity == ActivityType.SelectUnCurrent)\n            this.execSelectUnCurrent();\n        else if (this.activity == ActivityType.Element)\n            this.execElement(param.element, param.positionX, param.positionY, param.keepAbbrev);\n        else if (this.activity == ActivityType.Charge)\n            this.execCharge(param.delta);\n        else if (this.activity == ActivityType.Connect)\n            this.execConnect(1, Molecule.BONDTYPE_NORMAL);\n        else if (this.activity == ActivityType.Disconnect)\n            this.execDisconnect();\n        else if (this.activity == ActivityType.MetalLigate)\n            this.execMetalLigate();\n        else if (this.activity == ActivityType.BondOrder)\n            this.execBond(param.order, Molecule.BONDTYPE_NORMAL);\n        else if (this.activity == ActivityType.BondType)\n            this.execBond(1, param.type);\n        else if (this.activity == ActivityType.BondGeom)\n            this.execBondGeom(param.geom);\n        else if (this.activity == ActivityType.BondAtom)\n            this.execBondAtom(param.order, param.type, param.element, param.x1, param.y1, param.x2, param.y2);\n        else if (this.activity == ActivityType.BondSwitch)\n            this.execBondSwitch();\n        else if (this.activity == ActivityType.BondRotate)\n            this.execBondRotate();\n        else if (this.activity == ActivityType.BondAddTwo)\n            this.execBondAddTwo();\n        else if (this.activity == ActivityType.BondInsert)\n            this.execBondInsert();\n        else if (this.activity == ActivityType.Join)\n            this.execJoin();\n        else if (this.activity == ActivityType.Nudge)\n            this.execNudge(param.dir, 0.1);\n        else if (this.activity == ActivityType.NudgeLots)\n            this.execNudge(param.dir, 1);\n        else if (this.activity == ActivityType.NudgeFar)\n            this.execNudgeFar(param.dir);\n        else if (this.activity == ActivityType.Flip)\n            this.execFlip(param.axis);\n        else if (this.activity == ActivityType.Scale)\n            this.execScale(param.mag);\n        else if (this.activity == ActivityType.Rotate)\n            this.execRotate(param.theta, param.centreX, param.centreY);\n        else if (this.activity == ActivityType.BondDist)\n            this.execBondDist(param.dist);\n        else if (this.activity == ActivityType.AlignAngle)\n            this.execAlignAngle(param.angle);\n        else if (this.activity == ActivityType.AlignRegular)\n            this.execAlignRegular();\n        else if (this.activity == ActivityType.AdjustTorsion)\n            this.execAdjustTorsion(param.angle);\n        else if (this.activity == ActivityType.Move)\n            this.execMove(param.refAtom, param.deltaX, param.deltaY);\n        else if (this.activity == ActivityType.Ring)\n            this.execRing(param.ringX, param.ringY, param.aromatic);\n        else if (this.activity == ActivityType.TemplateFusion) {\n            this.execTemplateFusion(Molecule.fromString(param.fragNative));\n            if (this.owner)\n                this.owner.setPermutations(this.output.permutations);\n            return;\n        }\n        else if (this.activity == ActivityType.AbbrevTempl)\n            this.execAbbrevTempl();\n        else if (this.activity == ActivityType.AbbrevGroup)\n            this.execAbbrevGroup();\n        else if (this.activity == ActivityType.AbbrevFormula)\n            this.execAbbrevFormula();\n        else if (this.activity == ActivityType.AbbrevClear)\n            this.execAbbrevClear();\n        else if (this.activity == ActivityType.AbbrevExpand)\n            this.execAbbrevExpand();\n        else if (this.activity == ActivityType.BondArtifactPath || this.activity == ActivityType.BondArtifactRing ||\n            this.activity == ActivityType.BondArtifactArene || this.activity == ActivityType.BondArtifactClear)\n            this.execBondArtifact(this.activity);\n        else if (this.activity == ActivityType.PolymerBlock)\n            this.execPolymerBlock();\n        else if (this.activity == ActivityType.AddHydrogens)\n            this.execAddHydrogens();\n        else if (this.activity == ActivityType.RemoveHydrogens)\n            this.execRemoveHydrogens();\n        else if (this.activity == ActivityType.QueryClear)\n            this.execQueryClear();\n        else if (this.activity == ActivityType.QueryCopy)\n            this.execQueryCopy();\n        else if (this.activity == ActivityType.QueryPaste)\n            this.execQueryPaste();\n        else if (this.activity == ActivityType.QuerySetAtom)\n            this.execQuerySetAtom();\n        else if (this.activity == ActivityType.QuerySetBond)\n            this.execQuerySetBond();\n        else if (this.activity == ActivityType.QueryBondAny)\n            this.execQueryBondAny();\n        else if (this.activity == ActivityType.SproutDirection)\n            this.execSproutDirection(param.deltaX, param.deltaY);\n        this.finish();\n    }\n    finish() {\n        if (!this.owner)\n            return;\n        if (this.output.mol != null || this.output.currentAtom >= 0 || this.output.currentBond >= 0 || this.output.selectedMask != null) {\n            this.owner.setState(this.output, true);\n            if (this.errmsg != null)\n                this.owner.showMessage(this.errmsg, false);\n        }\n        else {\n            if (this.errmsg != null)\n                this.owner.showMessage(this.errmsg, true);\n        }\n    }\n    execDelete() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.mol = mol.clone();\n        this.zapSubject();\n        if (this.input.currentBond > 0 && !this.hasSelected) {\n            this.output.mol.deleteBond(this.input.currentBond);\n            this.output.currentBond = 0;\n            return;\n        }\n        if (this.subjectLength == 1 && this.subjectIndex[0] == this.input.currentAtom) {\n            let adj = mol.atomAdjList(this.input.currentAtom);\n            if (adj.length == 1) {\n                this.output.currentAtom = adj[0];\n                if (this.output.currentAtom > this.input.currentAtom)\n                    this.output.currentAtom--;\n            }\n        }\n        for (let n = this.subjectLength - 1; n >= 0; n--)\n            this.output.mol.deleteAtomAndBonds(this.subjectIndex[n]);\n    }\n    execCopy(withCut) {\n        let mol = this.input.mol;\n        if (this.subjectLength > 0)\n            mol = MolUtil.subgraphWithAttachments(mol, this.subjectMask);\n        if (this.owner)\n            this.owner.performCopy(mol);\n        else\n            this.toClipboard = mol.toString();\n        if (withCut) {\n            this.zapSubject();\n            this.output.mol = MolUtil.subgraphMask(this.input.mol, Vec.notMask(this.subjectMask));\n        }\n    }\n    execClear() {\n        this.output.mol = new Molecule();\n        this.zapSubject();\n    }\n    execSelectAll(all) {\n        let same = true;\n        for (let n = 0; n < this.input.mol.numAtoms; n++)\n            if (this.subjectMask[n] != all) {\n                same = false;\n                break;\n            }\n        if (same) {\n            this.errmsg = all ? 'All atoms already selected.' : 'All atoms already deselected.';\n            return;\n        }\n        this.output.selectedMask = Vec.booleanArray(all, this.input.mol.numAtoms);\n    }\n    execSelectComp(dir) {\n        let cclist = MolUtil.componentList(this.input.mol);\n        if (cclist.length == 1 && this.hasSelected && this.subjectLength == this.input.mol.numAtoms) {\n            this.errmsg = 'All atoms already selected.';\n            return;\n        }\n        let sel = this.pickSelectedGroup(cclist, dir);\n        this.output.selectedMask = Vec.booleanArray(false, this.input.mol.numAtoms);\n        for (let n = 0; n < cclist[sel].length; n++)\n            this.output.selectedMask[cclist[sel][n] - 1] = true;\n    }\n    execSelectSide() {\n        if (!this.requireCurrent())\n            return;\n        let mol = this.input.mol, currentAtom = this.input.currentAtom, currentBond = this.input.currentBond;\n        if (currentAtom > 0 && mol.atomAdjCount(currentAtom) == 0) {\n            this.errmsg = 'Current atom has no neighbours.';\n            return;\n        }\n        if (currentBond > 0 && mol.atomAdjCount(mol.bondFrom(currentBond)) == 1 && mol.atomAdjCount(mol.bondTo(currentBond)) == 1) {\n            this.errmsg = 'Current bond has no neighbours.';\n            return;\n        }\n        let sides = currentAtom > 0 ? MolUtil.getAtomSides(mol, currentAtom) : MolUtil.getBondSides(mol, currentBond);\n        let sel = this.pickSelectedGroup(sides, 1);\n        this.output.selectedMask = Vec.booleanArray(false, mol.numAtoms);\n        for (let n = 0; n < sides[sel].length; n++)\n            this.output.selectedMask[sides[sel][n] - 1] = true;\n    }\n    execSelectGrow() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol, currentAtom = this.input.currentAtom, currentBond = this.input.currentBond;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (!this.hasSelected) {\n            if (currentAtom > 0) {\n                this.output.selectedMask[currentAtom - 1] = true;\n            }\n            else {\n                this.output.selectedMask[mol.bondFrom(currentBond) - 1] = true;\n                this.output.selectedMask[mol.bondTo(currentBond) - 1] = true;\n            }\n        }\n        else {\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n                if (this.input.selectedMask[bfr] && !this.input.selectedMask[bto])\n                    this.output.selectedMask[bto] = true;\n                else if (this.input.selectedMask && !this.input.selectedMask[bfr])\n                    this.output.selectedMask[bfr] = true;\n            }\n        }\n    }\n    execSelectShrink() {\n        if (!this.requireSelected())\n            return;\n        let mol = this.input.mol;\n        let count = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (!this.input.selectedMask[bfr] || !this.input.selectedMask[bto])\n                continue;\n            count[bfr]++;\n            count[bto]++;\n        }\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let n = 0; n < mol.numAtoms; n++)\n            this.output.selectedMask[n] = this.input.selectedMask[n] && count[n] >= 2;\n    }\n    execSelectChain() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (this.input.selectedMask[bfr] && !this.input.selectedMask[bto] && mol.atomRingBlock(bto + 1) == 0)\n                this.output.selectedMask[bto] = true;\n            else if (this.input.selectedMask[bto] && !this.input.selectedMask[bfr] && mol.atomRingBlock(bfr + 1) == 0)\n                this.output.selectedMask[bfr] = true;\n        }\n    }\n    execSelectSmRing() {\n        if (!this.requireSubject())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let r = 3; r <= 8; r++) {\n            let rings = this.input.mol.findRingsOfSize(r);\n            for (let i = 0; i < rings.length; i++) {\n                let any = false;\n                for (let j = 0; j < rings[i].length; j++)\n                    if (this.subjectMask[rings[i][j] - 1]) {\n                        any = true;\n                        break;\n                    }\n                if (any)\n                    for (let j = 0; j < rings[i].length; j++)\n                        this.output.selectedMask[rings[i][j] - 1] = true;\n            }\n        }\n    }\n    execSelectRingBlk() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        let maxRB = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            maxRB = Math.max(maxRB, mol.atomRingBlock(n));\n        if (maxRB == 0)\n            return;\n        let gotRB = Vec.booleanArray(false, maxRB);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let rb = mol.atomRingBlock(n);\n            if (rb > 0 && this.subjectMask[n - 1])\n                gotRB[rb - 1] = true;\n        }\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let rb = mol.atomRingBlock(n);\n            if (rb > 0 && gotRB[rb - 1])\n                this.output.selectedMask[n - 1] = true;\n        }\n    }\n    execSelectCurElement() {\n        if (!this.requireCurrent())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        let el1 = '', el2 = '';\n        if (this.input.currentAtom > 0) {\n            el1 = mol.atomElement(this.input.currentAtom);\n        }\n        else {\n            el1 = mol.atomElement(mol.bondFrom(this.input.currentBond));\n            el2 = mol.atomElement(mol.bondTo(this.input.currentBond));\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomElement(n) == el1 || mol.atomElement(n) == el2)\n                this.output.selectedMask[n - 1] = true;\n    }\n    execSelectToggle() {\n        if (!this.requireCurrent())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (this.input.currentAtom > 0) {\n            this.output.selectedMask[this.input.currentAtom - 1] = !this.output.selectedMask[this.input.currentAtom - 1];\n        }\n        else {\n            let bfr = this.input.mol.bondFrom(this.input.currentBond), bto = this.input.mol.bondTo(this.input.currentBond);\n            let sel = !this.input.selectedMask[bfr - 1] || !this.input.selectedMask[bto - 1];\n            this.output.selectedMask[bfr - 1] = sel;\n            this.output.selectedMask[bto - 1] = sel;\n        }\n    }\n    execSelectUnCurrent() {\n        if (!this.requireCurrent())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (this.input.currentAtom > 0) {\n            this.output.selectedMask[this.input.currentAtom - 1] = false;\n        }\n        else {\n            this.output.selectedMask[this.input.mol.bondFrom(this.input.currentBond) - 1] = false;\n            this.output.selectedMask[this.input.mol.bondTo(this.input.currentBond) - 1] = false;\n        }\n    }\n    execElement(element, positionX, positionY, keepAbbrev) {\n        const QUERY_ELEMENTS = ['A', 'X', 'Y', 'Z', 'Q', 'M', 'T', 'E', 'R'];\n        if (this.subjectLength > 0 && !QUERY_ELEMENTS.includes(element)) {\n            let anyChange = false;\n            for (let n = 0; n < this.subjectLength; n++)\n                if (this.input.mol.atomElement(this.subjectIndex[n]) != element) {\n                    anyChange = true;\n                    break;\n                }\n            if (!anyChange) {\n                this.errmsg = 'Elements not changed.';\n                return;\n            }\n        }\n        let mol = this.output.mol = this.input.mol.clone();\n        let applyQuery = (atom) => {\n            if (element == 'A') {\n                QueryUtil.setQueryAtomElementsNot(mol, atom, ['H']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'X') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['F', 'Cl', 'Br', 'I']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Y') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['O', 'S', 'Se', 'Te']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Z') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['F', 'Cl', 'Br', 'O', 'S']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Q') {\n                QueryUtil.setQueryAtomElementsNot(mol, atom, ['H', 'C']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'M') {\n                const NON_METALS = ['H', 'B', 'C', 'N', 'O', 'F', 'Si', 'P', 'S', 'Cl', 'As', 'Se', 'Br', 'Te', 'I'];\n                QueryUtil.setQueryAtomElementsNot(mol, atom, NON_METALS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'T') {\n                const TRANSITION_METALS = [\n                    'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n                    'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd',\n                    'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg',\n                    'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb', 'Lu',\n                    'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No', 'Lr'\n                ];\n                QueryUtil.setQueryAtomElements(mol, atom, TRANSITION_METALS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'E') {\n                const MAIN_GROUPS = [\n                    'B', 'N', 'O', 'F',\n                    'Al', 'Si', 'P', 'S', 'Cl',\n                    'Zn', 'Ga', 'Se', 'As', 'Se', 'Br',\n                    'Cd', 'In', 'Sn', 'Sb', 'Te', 'I',\n                    'Hg', 'Tl', 'Pb', 'Bi', 'Pb', 'At'\n                ];\n                QueryUtil.setQueryAtomElements(mol, atom, MAIN_GROUPS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'R') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['C', 'N', 'O', 'S', 'P', 'H']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n        };\n        if (mol.numAtoms == 0) {\n            mol.addAtom(element, 0, 0);\n            applyQuery(mol.numAtoms);\n        }\n        else if (this.subjectLength == 0) {\n            if (positionX != null && positionY != null)\n                mol.addAtom(element, positionX, positionY);\n            else\n                SketchUtil.placeNewAtom(mol, element);\n            applyQuery(mol.numAtoms);\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                if (keepAbbrev)\n                    mol.setAtomElement(this.subjectIndex[n], element);\n                else\n                    MolUtil.setAtomElement(mol, this.subjectIndex[n], element);\n                applyQuery(this.subjectIndex[n]);\n            }\n        }\n    }\n    execCharge(delta) {\n        if (!this.requireSubject())\n            return;\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let chg = Math.max(-20, Math.min(20, this.input.mol.atomCharge(this.subjectIndex[n]) + delta));\n            this.output.mol.setAtomCharge(this.subjectIndex[n], chg);\n        }\n    }\n    execConnect(order, type) {\n        if (!this.requireSubject())\n            return;\n        let conn = SketchUtil.pickAtomsToConnect(this.input.mol, this.subjectIndex);\n        if (conn == null) {\n            this.errmsg = 'Subject atoms contain no bonds suitable for connection.';\n            return;\n        }\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < conn.length; n += 2)\n            MolUtil.addBond(this.output.mol, conn[n], conn[n + 1], order, type);\n    }\n    execDisconnect() {\n        let zap = [];\n        let mol = this.input.mol;\n        if (this.hasSelected) {\n            for (let n = 1; n <= mol.numBonds; n++)\n                if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                    zap.push(n);\n        }\n        else if (this.input.currentAtom > 0) {\n            for (let a of mol.atomAdjBonds(this.input.currentAtom))\n                zap.push(a);\n        }\n        else if (this.input.currentBond > 0) {\n            zap.push(this.input.currentBond);\n        }\n        if (zap.length == 0) {\n            this.errmsg = 'Subject atoms contain no bonds suitable for disconnection.';\n            return;\n        }\n        let killmask = Vec.booleanArray(false, mol.numBonds);\n        for (let b of zap)\n            killmask[b - 1] = true;\n        this.output.mol = this.input.mol.clone();\n        for (let n = mol.numBonds; n >= 1; n--)\n            if (killmask[n - 1])\n                this.output.mol.deleteBond(n);\n    }\n    execMetalLigate() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        let ligAtoms = this.subjectIndex.slice(0);\n        let metalAtom = this.input.currentAtom;\n        if (metalAtom == 0) {\n            for (let a of this.subjectIndex) {\n                let atno = mol.atomicNumber(a);\n                if (Chemistry.ELEMENT_BLOCKS[atno] >= 3) {\n                    metalAtom = a;\n                    break;\n                }\n            }\n        }\n        if (metalAtom == 0) {\n            for (let a of this.subjectIndex) {\n                let atno = mol.atomicNumber(a);\n                if (Chemistry.ELEMENT_ROWS[atno] >= 3) {\n                    metalAtom = a;\n                    break;\n                }\n            }\n        }\n        if (metalAtom == 0) {\n            this.errmsg = 'Unsure which is the metal atom: try indicating as current.';\n            return;\n        }\n        let i = ligAtoms.indexOf(metalAtom);\n        if (i >= 0)\n            ligAtoms.splice(i, 1);\n        if (ligAtoms.length == 0)\n            ligAtoms = mol.atomAdjList(metalAtom);\n        if (ligAtoms.length == 0) {\n            this.errmsg = 'Metal centre has no attachments: try selecting atom join-points.';\n            return;\n        }\n        mol = new MetalLigate(mol, metalAtom, ligAtoms).generate();\n        this.output.mol = mol;\n        this.output.currentAtom = metalAtom;\n        this.output.currentBond = -1;\n        this.output.selectedMask = Vec.booleanArray(false, mol.numAtoms);\n        for (let a of ligAtoms)\n            this.output.selectedMask[a - 1] = true;\n    }\n    execBond(order, type) {\n        if (!this.requireSubject())\n            return;\n        if (this.subjectLength == 1) {\n            this.performBondNew(this.subjectIndex[0], order, type);\n            return;\n        }\n        let ccmol = MolUtil.subgraphMask(this.input.mol, this.subjectMask);\n        let oneComp = true;\n        for (let n = ccmol.numAtoms; n >= 1; n--)\n            if (ccmol.atomConnComp(n) != 1) {\n                oneComp = false;\n                break;\n            }\n        if (oneComp)\n            this.performBondChange(order, type);\n        else\n            this.execConnect(order, type);\n    }\n    execBondGeom(geom) {\n        let bond = this.subjectLength == 2 ? this.input.mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) : 0;\n        if (this.subjectLength == 0 || this.subjectLength > 2 || (this.subjectLength == 2 && bond == 0)) {\n            this.errmsg = 'The subject must be a single atom or bond.';\n            return;\n        }\n        if (this.subjectLength == 1)\n            this.performBondGeomAtom(geom, this.subjectIndex[0]);\n        else\n            this.performBondGeomBond(geom, bond);\n    }\n    execBondAtom(order, type, element, x1, y1, x2, y2) {\n        let mol = this.input.mol;\n        let a1 = CoordUtil.atomAtPoint(mol, x1, y1, 0.01), a2 = CoordUtil.atomAtPoint(mol, x2, y2, 0.01);\n        if (a1 > 0 && a1 == a2)\n            return;\n        if (a1 > 0 && a2 > 0 && mol.findBond(a1, a2) > 0)\n            return;\n        this.output.mol = mol.clone();\n        if (a1 == 0)\n            a1 = this.output.mol.addAtom('C', x1, y1);\n        if (a2 == 0)\n            a2 = this.output.mol.addAtom(element, x2, y2);\n        this.output.mol.addBond(a1, a2, order, type);\n    }\n    execBondSwitch() {\n        if (this.input.altmol) {\n            this.output.mol = this.input.altmol;\n            this.output.altmol = this.input.mol;\n            return;\n        }\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        let src = 0, dst = [];\n        if (this.subjectLength == 1) {\n            src = this.subjectIndex[0];\n            let adj = mol.atomAdjList(src);\n            for (let n = 0; n < adj.length; n++)\n                if (mol.atomAdjCount(adj[n]) == 1)\n                    dst.push(adj[n]);\n        }\n        else if (this.subjectLength == 2 && mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) > 0) {\n            let ac1 = mol.atomAdjCount(this.subjectIndex[0]), ac2 = mol.atomAdjCount(this.subjectIndex[1]);\n            if (ac1 > 1 && ac2 == 1) {\n                src = this.subjectIndex[0];\n                dst.push(this.subjectIndex[1]);\n            }\n            else if (ac1 == 1 && ac2 > 1) {\n                src = this.subjectIndex[1];\n                dst.push(this.subjectIndex[0]);\n            }\n        }\n        if (src == 0 || dst.length == 0) {\n            this.errmsg = 'Subject must include a terminal bond.';\n            return;\n        }\n        let geoms = SketchUtil.guessAtomGeometry(mol, src, 1);\n        if (geoms.length == 0) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        this.output.mol = SketchUtil.switchAtomGeometry(mol, src, dst, geoms);\n        if (this.output.mol == null) {\n            this.errmsg = 'No alternative geometries identified.';\n        }\n    }\n    execBondRotate() {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol;\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot rotate a ring-bond.';\n            return;\n        }\n        if (mol.atomAdjCount(mol.bondFrom(bond)) == 1 && mol.atomAdjCount(mol.bondTo(bond)) == 1) {\n            this.errmsg = 'Two-atom components do not rotate.';\n            return;\n        }\n        mol = mol.clone();\n        let [atom1, atom2, side] = this.mobileSide(bond, true);\n        let cx = mol.atomX(atom1), cy = mol.atomY(atom1);\n        let theta = Math.atan2(mol.atomY(atom1) - mol.atomY(atom2), mol.atomX(atom1) - mol.atomX(atom2));\n        for (let a of side)\n            if (a != atom1) {\n                let dx = mol.atomX(a) - cx, dy = mol.atomY(a) - cy, dist = norm_xy(dx, dy);\n                let dtheta = Math.atan2(dy, dx);\n                dtheta = theta - angleDiff(dtheta, theta);\n                mol.setAtomPos(a, cx + dist * Math.cos(dtheta), cy + dist * Math.sin(dtheta));\n            }\n        let mask = Vec.idxMask(Vec.add(side, -1), mol.numAtoms);\n        for (let b = 1; b <= mol.numBonds; b++)\n            if (mask[mol.bondFrom(b) - 1] && mask[mol.bondTo(b) - 1]) {\n                let bt = mol.bondType(b);\n                if (bt == Molecule.BONDTYPE_INCLINED)\n                    mol.setBondType(b, Molecule.BONDTYPE_DECLINED);\n                else if (bt == Molecule.BONDTYPE_DECLINED)\n                    mol.setBondType(b, Molecule.BONDTYPE_INCLINED);\n            }\n        if (CoordUtil.sketchEquivalent(this.input.mol, mol)) {\n            this.errmsg = 'Rotation has no effect.';\n            return;\n        }\n        this.output.mol = mol;\n    }\n    execBondAddTwo() {\n        if (this.subjectLength != 1) {\n            this.errmsg = 'Subject must be a single atom.';\n            return;\n        }\n        let atom = this.subjectIndex[0];\n        if (this.input.mol.atomAdjCount(atom) < 2) {\n            this.errmsg = 'Subject atom must already have at least 2 bonds.';\n            return;\n        }\n        let ang = SketchUtil.calculateNewBondAngles(this.input.mol, atom, 1);\n        if (ang.length == 0)\n            ang = SketchUtil.exitVectors(this.input.mol, atom);\n        if (ang.length == 0) {\n            this.errmsg = 'Could not find a suitable geometry for new substituents.';\n            return;\n        }\n        let baseAng = ang[0];\n        let cx = this.input.mol.atomX(atom), cy = this.input.mol.atomY(atom);\n        if (ang.length > 1) {\n            let best = 0;\n            for (let n = 0; n < ang.length; n++) {\n                let x = cx + Molecule.IDEALBOND * Math.cos(ang[n]);\n                let y = cy + Molecule.IDEALBOND * Math.sin(ang[n]);\n                let score = CoordUtil.congestionPoint(this.input.mol, x, y);\n                if (n == 0 || score < best) {\n                    best = score;\n                    baseAng = ang[n];\n                }\n            }\n        }\n        let ang1 = baseAng - 30.0 * DEGRAD, ang2 = baseAng + 30.0 * DEGRAD;\n        let mol = this.input.mol.clone();\n        let a1 = mol.addAtom('C', cx + Molecule.IDEALBOND * Math.cos(ang1), cy + Molecule.IDEALBOND * Math.sin(ang1));\n        let a2 = mol.addAtom('C', cx + Molecule.IDEALBOND * Math.cos(ang2), cy + Molecule.IDEALBOND * Math.sin(ang2));\n        mol.addBond(atom, a1, 1);\n        mol.addBond(atom, a2, 1);\n        this.output.mol = mol;\n    }\n    execBondInsert() {\n        let mol = this.input.mol, bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot insert into a ring-bond.';\n            return;\n        }\n        let [alink, _, side] = this.mobileSide(bond);\n        mol = mol.clone();\n        mol.setBondOrder(bond, 1);\n        let fragmask = Vec.booleanArray(false, mol.numAtoms);\n        for (let a of side)\n            fragmask[a - 1] = true;\n        let frag = MolUtil.subgraphWithAttachments(mol, fragmask);\n        for (let n = mol.numAtoms; n >= 1; n--)\n            if (fragmask[n - 1] && n != alink) {\n                mol.deleteAtomAndBonds(n);\n                if (n < alink)\n                    alink -= 1;\n            }\n        mol.setAtomElement(alink, 'C');\n        mol.setAtomCharge(alink, 0);\n        mol.setAtomUnpaired(alink, 0);\n        mol.setAtomHExplicit(alink, Molecule.HEXPLICIT_UNKNOWN);\n        mol.setAtomIsotope(alink, Molecule.ISOTOPE_NATURAL);\n        mol.setAtomMapNum(alink, 0);\n        mol.setAtomExtra(alink, []);\n        mol.setAtomTransient(alink, []);\n        let fusion = new TemplateFusion(mol, frag, '');\n        fusion.withGuideOnly = true;\n        fusion.permuteAtom(alink);\n        if (fusion.perms.length == 0) {\n            this.errmsg = 'Unable to insert.';\n            return;\n        }\n        this.output.mol = fusion.perms[0].mol;\n        this.zapSubject();\n        this.output.currentAtom = alink;\n    }\n    execJoin() {\n        if (!this.requireSubject())\n            return;\n        this.output.mol = SketchUtil.joinOverlappingAtoms(this.input.mol, this.subjectMask);\n        if (this.output.mol == null) {\n            this.errmsg = 'Subject contains no overlapping atoms.';\n        }\n        else {\n            this.zapSubject();\n        }\n    }\n    execNudge(dir, extent) {\n        if (!this.requireSubject())\n            return;\n        let dx = extent * (dir == 'left' ? -1 : dir == 'right' ? 1 : 0);\n        let dy = extent * (dir == 'down' ? -1 : dir == 'up' ? 1 : 0);\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let x = this.output.mol.atomX(this.subjectIndex[n]), y = this.output.mol.atomY(this.subjectIndex[n]);\n            this.output.mol.setAtomPos(this.subjectIndex[n], x + dx, y + dy);\n        }\n    }\n    execNudgeFar(dir) {\n        if (!this.requireSubject())\n            return;\n        if (this.subjectLength == this.input.mol.numAtoms) {\n            this.errmsg = 'Cannot apply to entire molecule.';\n            return;\n        }\n        let dx = dir == 'left' ? -1 : dir == 'right' ? 1 : 0;\n        let dy = dir == 'down' ? -1 : dir == 'up' ? 1 : 0;\n        this.output.mol = SketchUtil.moveToEdge(this.input.mol, this.subjectMask, dx, dy);\n        if (this.output.mol == null) {\n            this.execNudge(dir, 1);\n        }\n    }\n    execFlip(axis) {\n        if (this.input.mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        let isVertical = axis == 'ver';\n        let cx = 0, cy = 0;\n        let mask = this.subjectMask, mol = this.input.mol;\n        if (this.input.currentAtom > 0) {\n            cx = mol.atomX(this.input.currentAtom);\n            cy = mol.atomY(this.input.currentAtom);\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(this.input.currentAtom);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.input.currentBond > 0) {\n            let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(bfr);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.subjectLength == 0) {\n            let box = mol.boundary();\n            cx = 0.5 * (box.minX() + box.maxX());\n            cy = 0.5 * (box.minY() + box.maxY());\n            mask = Vec.booleanArray(true, mol.numAtoms);\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                if (!isVertical)\n                    this.output.mol.setAtomX(n, 2 * cx - this.output.mol.atomX(n));\n                else\n                    this.output.mol.setAtomY(n, 2 * cy - this.output.mol.atomY(n));\n            }\n    }\n    execScale(mag) {\n        const { mol, currentAtom, currentBond } = this.input;\n        if (mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        if (currentAtom > 0) {\n            let connAtoms = [];\n            for (let a of this.subjectIndex)\n                if (a != currentAtom && mol.findBond(currentAtom, a) > 0)\n                    connAtoms.push(a);\n            let g = Graph.fromMolecule(mol);\n            g.isolateNode(currentAtom - 1);\n            let anything = false;\n            for (let cc of g.calculateComponentGroups()) {\n                Vec.addTo(cc, 1);\n                let sz = 0, dx = 0, dy = 0;\n                for (let a of cc)\n                    if (connAtoms.includes(a)) {\n                        dx += mol.atomX(a) - mol.atomX(currentAtom);\n                        dy += mol.atomY(a) - mol.atomY(currentAtom);\n                        sz++;\n                    }\n                if (sz == 0)\n                    continue;\n                [dx, dy] = [dx / sz, dy / sz];\n                if (Math.abs(dx) < 0.1 && Math.abs(dy) < 0.1)\n                    continue;\n                [dx, dy] = [dx * (mag - 1), dy * (mag - 1)];\n                if (!this.output.mol)\n                    this.output.mol = mol.clone();\n                for (let a of cc)\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + dx, this.output.mol.atomY(a) + dy);\n                anything = true;\n            }\n            if (anything)\n                return;\n        }\n        let b;\n        if (this.subjectLength == 2 && (b = mol.findBond(this.subjectIndex[0], this.subjectIndex[1])) > 0 && !mol.bondInRing(b)) {\n            let a1 = this.subjectIndex[0], a2 = this.subjectIndex[1];\n            let ccmol = mol.clone();\n            ccmol.deleteBond(b);\n            let idx1 = [], idx2 = [];\n            for (let n = 1; n <= ccmol.numAtoms; n++) {\n                if (ccmol.atomConnComp(n) == ccmol.atomConnComp(a1))\n                    idx1.push(n);\n                else if (ccmol.atomConnComp(n) == ccmol.atomConnComp(a2))\n                    idx2.push(n);\n            }\n            let dx = (mol.atomX(a2) - mol.atomX(a1)) * (mag - 1);\n            let dy = (mol.atomY(a2) - mol.atomY(a1)) * (mag - 1);\n            if (idx1.length == idx2.length) {\n                dx *= 0.5;\n                dy *= 0.5;\n            }\n            this.output.mol = mol.clone();\n            if (idx1.length <= idx2.length)\n                for (let n = 0; n < idx1.length; n++) {\n                    let a = idx1[n];\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) - dx, this.output.mol.atomY(a) - dy);\n                }\n            if (idx2.length <= idx1.length)\n                for (let n = 0; n < idx2.length; n++) {\n                    let a = idx2[n];\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + dx, this.output.mol.atomY(a) + dy);\n                }\n            return;\n        }\n        let cx = 0, cy = 0;\n        if (currentAtom > 0) {\n            cx = mol.atomX(currentAtom);\n            cy = mol.atomY(currentAtom);\n        }\n        else if (currentBond > 0) {\n            let bfr = mol.bondFrom(currentBond), bto = mol.bondTo(currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let x = this.output.mol.atomX(this.subjectIndex[n]);\n            let y = this.output.mol.atomY(this.subjectIndex[n]);\n            this.output.mol.setAtomPos(this.subjectIndex[n], (x - cx) * mag + cx, (y - cy) * mag + cy);\n        }\n    }\n    execRotate(theta, centreX, centreY) {\n        theta *= DEGRAD;\n        let mol = this.input.mol;\n        if (centreX != null && centreY != null) {\n            this.output.mol = mol.clone();\n            let mask = this.subjectLength == 0 ? Vec.booleanArray(true, mol.numAtoms) : this.subjectMask;\n            CoordUtil.rotateAtoms(this.output.mol, mask, centreX, centreY, theta);\n            return;\n        }\n        if (mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        let cx = 0, cy = 0;\n        let mask = this.subjectMask;\n        if (this.input.currentAtom > 0) {\n            cx = mol.atomX(this.input.currentAtom);\n            cy = mol.atomY(this.input.currentAtom);\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(this.input.currentAtom);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n            if (Vec.maskCount(mask) == 1 && mask[this.input.currentAtom - 1]) {\n                this.errmsg = 'Component is isolated.';\n                return;\n            }\n        }\n        else if (this.input.currentBond > 0) {\n            let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(bfr);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.subjectLength == 0) {\n            let box = mol.boundary();\n            cx = 0.5 * (box.minX() + box.maxX());\n            cy = 0.5 * (box.minY() + box.maxY());\n            mask = Vec.booleanArray(true, mol.numAtoms);\n        }\n        else {\n            if (this.subjectLength == 1) {\n                this.errmsg = 'Component is isolated.';\n                return;\n            }\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        CoordUtil.rotateAtoms(this.output.mol, mask, cx, cy, theta);\n    }\n    execBondDist(dist) {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        if (mol.bondInRing(bond)) {\n            let atom1 = mol.bondFrom(bond), atom2 = mol.bondTo(bond);\n            let dx = mol.atomX(atom2) - mol.atomX(atom1), dy = mol.atomY(atom2) - mol.atomY(atom1), curDist = norm_xy(dx, dy), inv = 1.0 / curDist;\n            let sel1 = this.isSelected(atom1), sel2 = this.isSelected(atom2);\n            let ox = dx * (dist - curDist) * inv, oy = dy * (dist - curDist) * inv;\n            if (sel1 && !sel2) {\n                mol.setAtomPos(atom1, mol.atomX(atom1) - ox, mol.atomY(atom1) - oy);\n            }\n            else if (sel2 && !sel1) {\n                mol.setAtomPos(atom2, mol.atomX(atom2) + ox, mol.atomY(atom2) + oy);\n            }\n            else {\n                mol.setAtomPos(atom1, mol.atomX(atom1) - 0.5 * ox, mol.atomY(atom1) - 0.5 * oy);\n                mol.setAtomPos(atom2, mol.atomX(atom2) + 0.5 * ox, mol.atomY(atom2) + 0.5 * oy);\n            }\n        }\n        else {\n            let [atom1, atom2, side] = this.mobileSide(bond);\n            let dx = mol.atomX(atom2) - mol.atomX(atom1), dy = mol.atomY(atom2) - mol.atomY(atom1);\n            let curDist = norm_xy(dx, dy), inv = 1.0 / curDist;\n            let ox = dx * (dist - curDist) * inv, oy = dy * (dist - curDist) * inv;\n            for (let a of side)\n                mol.setAtomPos(a, mol.atomX(a) - ox, mol.atomY(a) - oy);\n        }\n        this.output.mol = mol;\n    }\n    execAlignAngle(angle) {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot align a ring-bond.';\n            return;\n        }\n        let [atom1, atom2, side] = this.mobileSide(bond);\n        let cx = mol.atomX(atom2), cy = mol.atomY(atom2);\n        let delta = angle - Math.atan2(mol.atomY(atom1) - cy, mol.atomX(atom1) - cx);\n        let cosTheta = Math.cos(delta), sinTheta = Math.sin(delta);\n        for (let a of side) {\n            let x = mol.atomX(a) - cx, y = mol.atomY(a) - cy;\n            mol.setAtomPos(a, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n        }\n        this.output.mol = mol;\n    }\n    execAlignRegular() {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n        let theta = Math.atan2(mol.atomY(bto) - mol.atomY(bfr), mol.atomX(bto) - mol.atomX(bfr)) * RADDEG;\n        if (theta < 0)\n            theta += 360;\n        let snap = Math.round(theta / 30) * 30;\n        if (Math.abs(theta - snap) < 0.001)\n            return;\n        let delta = (snap - theta) * DEGRAD;\n        let mask = this.input.selectedMask;\n        if (Vec.allFalse(mask)) {\n            let cc = mol.atomConnComp(bfr);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                mask[n - 1] = cc == mol.atomConnComp(n);\n        }\n        let cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto)), cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let dx = mol.atomX(n) - cx, dy = mol.atomY(n) - cy;\n                let th = Math.atan2(dy, dx) + delta, dist = norm_xy(dx, dy);\n                mol.setAtomPos(n, cx + dist * Math.cos(th), cy + dist * Math.sin(th));\n            }\n        this.output.mol = mol;\n    }\n    execAdjustTorsion(angle) {\n        if (this.input.currentAtom == 0 || Vec.maskCount(this.input.selectedMask) != 3) {\n            this.errmsg = 'Must be 3 selected atoms and a current atom.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        let a1 = this.input.currentAtom;\n        let atoms = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (n != a1 && this.input.selectedMask[n - 1])\n                atoms.push(n);\n        let a2 = mol.findBond(a1, atoms[0]) > 0 ? atoms.shift() :\n            mol.findBond(a1, atoms[1]) > 0 ? atoms.pop() : 0;\n        if (a2 == 0 || mol.findBond(a2, atoms[0]) == 0) {\n            this.errmsg = 'Selected atoms must be consecutive.';\n            return;\n        }\n        let a3 = atoms[0];\n        let cx = mol.atomX(a2), cy = mol.atomY(a2);\n        let theta1 = Math.atan2(mol.atomY(a1) - cy, mol.atomX(a1) - cx);\n        let theta3 = Math.atan2(mol.atomY(a3) - cy, mol.atomX(a3) - cx);\n        let delta = angle - angleDiff(theta3, theta1);\n        let group1 = [], group3 = [];\n        if (mol.atomRingBlock(a1) == 0 || mol.atomRingBlock(a1) != mol.atomRingBlock(a3)) {\n            let g = Graph.fromMolecule(mol);\n            g.removeEdge(a2 - 1, a1 - 1);\n            g.removeEdge(a2 - 1, a3 - 1);\n            let cc = g.calculateComponents();\n            for (let n = 0; n < g.numNodes; n++) {\n                if (cc[n] == cc[a1 - 1])\n                    group1.push(n + 1);\n                else if (cc[n] == cc[a3 - 1])\n                    group3.push(n + 1);\n            }\n        }\n        if (mol.atomRingBlock(a1) > 0 && mol.atomRingBlock(a1) == mol.atomRingBlock(a2))\n            group1 = [a1];\n        if (mol.atomRingBlock(a3) > 0 && mol.atomRingBlock(a3) == mol.atomRingBlock(a2))\n            group3 = [a3];\n        CoordUtil.rotateAtoms(mol, Vec.idxMask(Vec.add(group1, -1), mol.numAtoms), cx, cy, -0.5 * delta);\n        CoordUtil.rotateAtoms(mol, Vec.idxMask(Vec.add(group3, -1), mol.numAtoms), cx, cy, 0.5 * delta);\n        this.output.mol = mol;\n    }\n    execMove(refAtom, deltaX, deltaY) {\n        let subj = this.subjectIndex;\n        if (Vec.len(subj) == 0) {\n            if (refAtom == 0)\n                return;\n            subj = [refAtom];\n        }\n        this.output.mol = this.input.mol.clone();\n        for (let a of subj)\n            this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + deltaX, this.output.mol.atomY(a) + deltaY);\n    }\n    execRing(ringX, ringY, aromatic) {\n        let rsz = ringX.length;\n        let atoms = Vec.numberArray(0, rsz), bonds = Vec.numberArray(0, rsz);\n        let outmol = this.input.mol.clone();\n        for (let n = 0; n < rsz; n++) {\n            atoms[n] = CoordUtil.atomAtPoint(outmol, ringX[n], ringY[n]);\n            if (atoms[n] == 0)\n                atoms[n] = outmol.addAtom('C', ringX[n], ringY[n]);\n        }\n        for (let n = 0; n < rsz; n++) {\n            let nn = n < rsz - 1 ? n + 1 : 0;\n            bonds[n] = outmol.findBond(atoms[n], atoms[nn]);\n            if (bonds[n] == 0)\n                bonds[n] = outmol.addBond(atoms[n], atoms[nn], 1);\n        }\n        if (aromatic) {\n            let valence = Vec.numberArray(0, rsz);\n            let pi = Vec.booleanArray(false, rsz);\n            for (let n = 0; n < rsz; n++) {\n                valence[n] = Chemistry.ELEMENT_BONDING[outmol.atomicNumber(atoms[n])] + outmol.atomCharge(atoms[n]);\n                if (outmol.atomHExplicit(atoms[n]) != Molecule.HEXPLICIT_UNKNOWN)\n                    valence[n] -= outmol.atomHExplicit(atoms[n]);\n                for (let b of outmol.atomAdjBonds(atoms[n]))\n                    valence[n] -= outmol.bondOrder(b);\n                if (outmol.bondOrder(bonds[n]) >= 2) {\n                    pi[n] = true;\n                    if (n < rsz - 1) {\n                        pi[n] = true;\n                        n++;\n                    }\n                    else\n                        pi[0] = true;\n                }\n            }\n            for (let n = 0; n < rsz; n++) {\n                let nn = n < rsz - 1 ? n + 1 : 0;\n                if (pi[n] || pi[nn])\n                    continue;\n                if (valence[n] > 0 && valence[nn] > 0) {\n                    outmol.setBondOrder(bonds[n], 2);\n                    pi[n] = true;\n                    pi[nn] = true;\n                    valence[n]--;\n                    valence[nn]--;\n                }\n            }\n        }\n        this.output.mol = outmol;\n    }\n    execTemplateFusion(frag) {\n        let mol = this.input.mol;\n        let fusion = new TemplateFusion(mol, frag, '');\n        if (this.subjectLength == 0)\n            fusion.permuteNone();\n        else if (this.subjectLength == 1)\n            fusion.permuteAtom(this.subjectIndex[0]);\n        else if (this.subjectLength == 2 && mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) > 0)\n            fusion.permuteBond(this.subjectIndex[0], this.subjectIndex[1]);\n        else\n            fusion.permuteMulti(this.subjectIndex);\n        let permutations = [];\n        for (let perm of fusion.perms) {\n            let obj = {};\n            obj['mol'] = perm.mol.toString();\n            obj['display'] = perm.display.toString();\n            obj['molidx'] = perm.molidx;\n            obj['temidx'] = perm.temidx;\n            obj['srcidx'] = perm.srcidx;\n            permutations.push(obj);\n        }\n        this.output.permutations = permutations;\n    }\n    execAbbrevTempl() {\n    }\n    execAbbrevGroup() {\n        if (!this.requireSubject())\n            return;\n        if (!this.checkAbbreviationReady())\n            return;\n        let mol = MolUtil.convertToAbbrev(this.input.mol, Vec.notMask(this.subjectMask), '?');\n        if (mol == null) {\n            this.errmsg = 'Inline abbreviations must be terminal with exactly one attachment point.';\n            return;\n        }\n        if (AbbrevContainer.main) {\n            AbbrevContainer.main.submitMolecule(mol, true);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomElement(n) == '?' && MolUtil.hasAbbrev(mol, n))\n                    AbbrevContainer.main.substituteAbbrevName(mol, n);\n        }\n        this.output.mol = mol;\n        this.zapSubject();\n        this.output.currentAtom = mol.numAtoms;\n    }\n    execAbbrevFormula() {\n        if (!this.requireSubject())\n            return;\n        if (!this.checkAbbreviationReady())\n            return;\n        let fixed = this.input.mol.clone();\n        for (let n = 1; n <= fixed.numAtoms; n++)\n            fixed.setAtomHExplicit(n, fixed.atomHydrogens(n));\n        let abv = MolUtil.subgraphMask(fixed, this.subjectMask);\n        let formula = MolUtil.molecularFormula(abv, true);\n        let mol = MolUtil.convertToAbbrev(this.input.mol, Vec.notMask(this.subjectMask), formula);\n        if (mol == null) {\n            this.errmsg = 'Inline abbreviations must be terminal with exactly one attachment point.';\n            return;\n        }\n        this.output.mol = mol;\n        this.zapSubject();\n        this.output.currentAtom = mol.numAtoms;\n    }\n    execAbbrevClear() {\n        let idx = [];\n        for (let n of this.subjectIndex)\n            if (MolUtil.hasAbbrev(this.input.mol, n))\n                idx.push(n);\n        if (idx.length == 0) {\n            this.errmsg = 'No abbreviations to clear.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        for (let n of idx)\n            MolUtil.clearAbbrev(mol, n);\n        this.output.mol = mol;\n    }\n    execAbbrevExpand() {\n        let idx = [];\n        for (let n of this.subjectIndex)\n            if (MolUtil.hasAbbrev(this.input.mol, n))\n                idx.push(n);\n        if (idx.length == 0) {\n            this.errmsg = 'No abbreviations to expand.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        for (let n of idx)\n            MolUtil.expandOneAbbrev(mol, n, true);\n        this.output.mol = mol;\n        this.zapSubject();\n    }\n    execBondArtifact(activity) {\n        if (!this.requireAtoms() || !this.requireSubject())\n            return;\n        let artif = new BondArtifact(this.input.mol.clone());\n        let subject = this.subjectIndex.slice(0), curAtom = this.input.currentAtom;\n        if (curAtom > 0 && subject.indexOf(curAtom) < 0)\n            subject.push(curAtom);\n        if (activity == ActivityType.BondArtifactPath) {\n            if (!artif.createPath(subject)) {\n                this.errmsg = 'Path artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactRing) {\n            if (!artif.createRing(subject)) {\n                this.errmsg = 'Ring artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactArene) {\n            if (!artif.createArene(subject)) {\n                this.errmsg = 'Arene artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactClear) {\n            if (!artif.removeArtifact(subject)) {\n                if (this.removePolymerBlock(subject))\n                    return;\n                this.errmsg = 'No artifact removed.';\n                return;\n            }\n        }\n        artif.rewriteMolecule();\n        this.output.mol = artif.mol;\n    }\n    execPolymerBlock() {\n        if (!this.requireAtoms() || !this.requireSubject())\n            return;\n        if (this.owner)\n            this.owner.performPolymerBlock(this.subjectIndex);\n    }\n    execAddHydrogens() {\n        let mol = this.input.mol.clone();\n        if (!this.requireAtoms())\n            return;\n        let atoms = this.subjectIndex;\n        if (atoms.length == 0)\n            atoms = Vec.identity1(mol.numAtoms);\n        for (let a of atoms) {\n            let hc = mol.atomHydrogens(a);\n            if (hc > 0)\n                SketchUtil.placeAdditionalHydrogens(mol, a, hc);\n        }\n        if (mol.numAtoms == this.input.mol.numAtoms) {\n            this.errmsg = 'Nothing needs to be added.';\n            return;\n        }\n        this.output.mol = mol;\n    }\n    execRemoveHydrogens() {\n        if (!this.requireAtoms())\n            return;\n        let mol = this.input.mol;\n        let selmask = this.subjectMask;\n        if (Vec.allFalse(selmask))\n            selmask = Vec.booleanArray(true, mol.numAtoms);\n        let keepmask = Vec.booleanArray(true, mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.boringHydrogen(mol, n)) {\n                let nbr = mol.atomAdjList(n)[0];\n                if (selmask[n - 1] || selmask[nbr - 1])\n                    keepmask[n - 1] = false;\n            }\n        if (Vec.allTrue(keepmask)) {\n            this.errmsg = 'Nothing to be deleted.';\n            return;\n        }\n        this.output.mol = MolUtil.subgraphMask(mol, keepmask);\n    }\n    execQueryClear() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol.clone();\n        const { currentBond } = this.input;\n        if (currentBond > 0 && QueryUtil.hasAnyQueryBond(mol, currentBond)) {\n            QueryUtil.deleteQueryBondAll(mol, currentBond);\n            this.output.mol = mol;\n            return;\n        }\n        let anything = false;\n        for (let a of this.subjectIndex)\n            if (QueryUtil.hasAnyQueryAtom(mol, a)) {\n                QueryUtil.deleteQueryAtomAll(mol, a);\n                anything = true;\n            }\n        for (let b = 1; b <= mol.numBonds; b++)\n            if (this.subjectMask[mol.bondFrom(b) - 1] && this.subjectMask[mol.bondTo(b) - 1] && QueryUtil.hasAnyQueryBond(mol, b)) {\n                QueryUtil.deleteQueryBondAll(mol, b);\n                anything = true;\n            }\n        if (anything)\n            this.output.mol = mol;\n        else\n            this.errmsg = 'No query terms to clear.';\n    }\n    execQueryCopy() {\n        if (!this.requireSubject())\n            return;\n        const { mol, currentBond } = this.input;\n        if (currentBond > 0) {\n            if (!QueryUtil.hasAnyQueryBond(mol, currentBond)) {\n                this.errmsg = 'Bond has no query terms.';\n                return;\n            }\n            let qmol = new Molecule();\n            qmol.addAtom('*', 0, 0);\n            qmol.addAtom('*', Molecule.IDEALBOND, 0);\n            qmol.addBond(1, 2, 1);\n            qmol.setBondExtra(1, mol.bondExtra(currentBond).filter((xtra) => xtra.startsWith('q')));\n            this.toClipboard = qmol.toString();\n        }\n        else if (this.subjectLength == 1) {\n            let atom = this.subjectIndex[0];\n            if (!QueryUtil.hasAnyQueryAtom(mol, atom)) {\n                this.errmsg = 'Atom has no query terms.';\n                return;\n            }\n            let qmol = new Molecule();\n            qmol.addAtom('*', 0, 0);\n            qmol.setAtomExtra(1, mol.atomExtra(atom).filter((xtra) => xtra.startsWith('q')));\n            this.toClipboard = qmol.toString();\n        }\n        else\n            this.errmsg = 'Subject has to be a single atom or bond.';\n    }\n    execQueryPaste() {\n        if (!this.requireSubject())\n            return;\n        let qmol = this.param.qmol;\n        if (!qmol) { }\n        else if (qmol.numAtoms == 1 && qmol.atomElement(1) == '*' && QueryUtil.hasAnyQueryAtom(qmol, 1)) {\n            let mol = this.output.mol = this.input.mol.clone();\n            let qterms = qmol.atomExtra(1).filter((xtra) => xtra.startsWith('q'));\n            for (let a of this.subjectIndex) {\n                let aterms = mol.atomExtra(a).filter((xtra) => xtra.startsWith('q'));\n                mol.setAtomExtra(a, [...aterms, ...qterms]);\n            }\n            return;\n        }\n        else if (qmol.numAtoms == 2 && qmol.atomElement(1) == '*' && qmol.atomElement(2) == '*' &&\n            qmol.numBonds == 1 && QueryUtil.hasAnyQueryBond(qmol, 1)) {\n            let mol = this.output.mol = this.input.mol.clone();\n            let qterms = qmol.bondExtra(1).filter((xtra) => xtra.startsWith('q'));\n            for (let b = 1; b <= mol.numBonds; b++)\n                if (this.subjectMask[mol.bondFrom(b) - 1] && this.subjectMask[mol.bondTo(b) - 1]) {\n                    let bterms = mol.bondExtra(b).filter((xtra) => xtra.startsWith('q'));\n                    mol.setBondExtra(b, [...bterms, ...qterms]);\n                }\n            return;\n        }\n        this.errmsg = 'Unable to paste query terms.';\n    }\n    execQuerySetAtom() {\n    }\n    execQuerySetBond() {\n    }\n    execQueryBondAny() {\n        if (!this.requireSubject())\n            return;\n        const { mol, currentBond } = this.input;\n        let bonds = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                bonds.push(n);\n        if (bonds.length == 0) {\n            this.errmsg = 'Must select at least one bond.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        for (let b of bonds) {\n            this.output.mol.setBondOrder(b, 0);\n            QueryUtil.setQueryBondOrders(this.output.mol, b, [-1, 0, 1, 2, 3, 4]);\n        }\n    }\n    execSproutDirection(deltaX, deltaY) {\n        var _a, _b;\n        if (!this.requireCurrent())\n            return;\n        if (deltaX == 0 && deltaY == 0)\n            return;\n        const { mol, currentAtom } = this.input;\n        let angleOptions;\n        if (mol.atomAdjCount(currentAtom) == 0)\n            angleOptions = Vec.identity0(12).map((n) => n * TWOPI / 12);\n        else\n            angleOptions = (_a = SketchUtil.primeDirections(mol, currentAtom)) !== null && _a !== void 0 ? _a : SketchUtil.exitVectors(mol, currentAtom);\n        if (angleOptions.length == 0)\n            return;\n        let theta = Math.atan2(deltaY, deltaX);\n        let idx = Vec.idxMin(angleOptions.map((look) => Math.abs(angleDiff(theta, look)) + 0.01 * Math.abs(Math.sin(look))));\n        let px = mol.atomX(currentAtom) + Molecule.IDEALBOND * Math.cos(angleOptions[idx]);\n        let py = mol.atomY(currentAtom) + Molecule.IDEALBOND * Math.sin(angleOptions[idx]);\n        this.output.mol = mol.clone();\n        let newAtom = this.output.mol.addAtom('C', px, py);\n        this.output.mol.addBond(currentAtom, newAtom, 1);\n        this.output.mol = (_b = SketchUtil.joinOverlappingAtoms(this.output.mol, Vec.booleanArray(true, this.output.mol.numAtoms))) !== null && _b !== void 0 ? _b : this.output.mol;\n        for (let n = 1; n <= this.output.mol.numAtoms; n++) {\n            let dx = this.output.mol.atomX(n) - px, dy = this.output.mol.atomY(n) - py;\n            if (norm2_xy(dx, dy) < CoordUtil.OVERLAP_THRESHOLD_SQ) {\n                this.output.currentAtom = n;\n                break;\n            }\n        }\n    }\n    requireSubject() {\n        if (this.subjectLength == 0)\n            this.errmsg = 'Subject required: current atom/bond or selected atoms.';\n        return this.subjectLength > 0;\n    }\n    requireAtoms() {\n        if (this.input.mol.numAtoms == 0)\n            this.errmsg = 'There are no atoms.';\n        return this.input.mol.numAtoms > 0;\n    }\n    requireCurrent() {\n        if (this.input.currentAtom == 0 && this.input.currentBond == 0) {\n            this.errmsg = 'There must be a current atom or bond.';\n            return false;\n        }\n        return true;\n    }\n    requireSelected() {\n        if (!this.hasSelected)\n            this.errmsg = 'No atoms are selected.';\n        return this.hasSelected;\n    }\n    pickSelectedGroup(groups, dir) {\n        if (this.subjectLength == 0)\n            return 0;\n        for (let i = 0; i < groups.length; i++) {\n            let g = groups[i];\n            let all = true;\n            for (let j = 0; j < g.length; j++)\n                if (!this.subjectMask[g[j] - 1]) {\n                    all = false;\n                    break;\n                }\n            if (all) {\n                i += dir;\n                return i < 0 ? i + groups.length : i >= groups.length ? i - groups.length : i;\n            }\n        }\n        for (let i = 0; i < groups.length; i++) {\n            let g = groups[i];\n            for (let j = 0; j < g.length; j++)\n                if (this.subjectMask[g[j] - 1])\n                    return i;\n        }\n        return 0;\n    }\n    zapSubject() {\n        this.output.currentAtom = 0;\n        this.output.currentBond = 0;\n        this.output.selectedMask = Vec.booleanArray(false, this.input.mol.numAtoms);\n    }\n    performBondNew(atom, order, type) {\n        let mol = this.input.mol;\n        let ang = SketchUtil.calculateNewBondAngles(mol, atom, order);\n        if (ang.length == 0)\n            ang = SketchUtil.exitVectors(mol, atom);\n        if (ang.length == 0) {\n            this.errmsg = 'Could not find a suitable geometry for a new substituent.';\n            return;\n        }\n        let bx = [], by = [], bscore = [];\n        for (let n = 0; n < ang.length; n++) {\n            let x = mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(ang[n]);\n            let y = mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(ang[n]);\n            let score = CoordUtil.congestionPoint(mol, x, y);\n            if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(atom)] <= 2)\n                score += Math.abs(angleNorm(ang[n])) * 1E-8;\n            else\n                score += Math.abs(angleDiff(0.5 * Math.PI, ang[n])) * 1E-8;\n            bx.push(x);\n            by.push(y);\n            bscore.push(score);\n        }\n        let idx = Vec.idxSort(bscore);\n        this.output.mol = mol.clone();\n        let anum = CoordUtil.atomAtPoint(this.output.mol, bx[idx[0]], by[idx[0]]);\n        if (anum == 0)\n            anum = this.output.mol.addAtom('C', bx[idx[0]], by[idx[0]]);\n        MolUtil.addBond(this.output.mol, atom, anum, order, type);\n        if (idx.length >= 2) {\n            this.output.altmol = mol.clone();\n            anum = CoordUtil.atomAtPoint(this.output.altmol, bx[idx[1]], by[idx[1]]);\n            if (anum == 0)\n                anum = this.output.altmol.addAtom('C', bx[idx[1]], by[idx[1]]);\n            MolUtil.addBond(this.output.altmol, atom, anum, order, type);\n        }\n    }\n    performBondChange(order, type) {\n        let mol = this.input.mol;\n        let bonds = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                bonds.push(n);\n        let switchType = type == Molecule.BONDTYPE_DECLINED || type == Molecule.BONDTYPE_INCLINED;\n        let stereoType = switchType || type == Molecule.BONDTYPE_UNKNOWN;\n        let anyChange = switchType;\n        for (let n = 0; n < bonds.length && !anyChange; n++) {\n            let b = bonds[n];\n            if (mol.bondOrder(b) != order && type == Molecule.BONDTYPE_NORMAL)\n                anyChange = true;\n            else if (mol.bondType(b) != type)\n                anyChange = true;\n        }\n        if (!anyChange) {\n            this.errmsg = 'No bond changes made.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 0; n < bonds.length; n++) {\n            let b = bonds[n], bfr = this.output.mol.bondFrom(b), bto = this.output.mol.bondTo(b);\n            if (switchType && this.output.mol.bondType(b) == type) {\n                this.output.mol.setBondFromTo(b, bto, bfr);\n            }\n            else if (this.output.mol.bondOrder(b) != order || this.output.mol.bondType(b) != type) {\n                if (!stereoType && order != this.output.mol.bondOrder(b))\n                    this.output.mol.setBondOrder(b, order);\n                else\n                    this.output.mol.setBondType(b, type);\n            }\n            else if (switchType) {\n                this.output.mol.setBondFromTo(b, bto, bfr);\n            }\n        }\n    }\n    performBondGeomAtom(geom, atom) {\n        let mol = this.input.mol;\n        let adj = mol.atomAdjList(atom);\n        let asz = adj.length, gsz = SketchUtil.GEOM_ANGLES[geom].length;\n        if (asz > gsz) {\n            this.errmsg = 'The current atom has more bonds than does the selected geometry.';\n            return;\n        }\n        if (asz == 0) {\n            this.performBondNew(atom, 1, Molecule.BONDTYPE_NORMAL);\n            return;\n        }\n        if (asz == gsz) {\n            this.output.mol = SketchUtil.refitAtomGeometry(mol, atom, geom);\n            if (this.output.mol == null)\n                this.errmsg = 'Could not re-fit the atom geometry.';\n            return;\n        }\n        let ang = CoordUtil.atomBondAngles(mol, atom);\n        let newang = SketchUtil.mapAngleSubstituent(geom, ang);\n        if (newang == null) {\n            this.output.mol = SketchUtil.refitAtomGeometry(mol, atom, geom);\n            if (this.output.mol == null)\n                this.errmsg = 'Could not re-fit the atom geometry.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        let theta = SketchUtil.pickNewAtomDirection(mol, atom, newang);\n        let x = this.output.mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(theta);\n        let y = this.output.mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(theta);\n        let anum = CoordUtil.atomAtPoint(this.output.mol, x, y);\n        if (anum == 0)\n            anum = this.output.mol.addAtom('C', x, y);\n        MolUtil.addBond(this.output.mol, atom, anum, 1);\n    }\n    performBondGeomBond(geom, bond) {\n        let mol = this.input.mol;\n        let bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        let ac1 = mol.atomAdjCount(bfr), ac2 = mol.atomAdjCount(bto);\n        if (ac1 > 1 && ac2 == 1) { }\n        else if (ac1 == 1 && ac2 > 1) {\n            let t = ac1;\n            ac1 = ac2;\n            ac2 = t;\n        }\n        else {\n            this.errmsg = 'One end of the bond must be terminal.';\n            return;\n        }\n        let adj = mol.atomAdjList(bfr);\n        let x1 = mol.atomX(bfr), y1 = mol.atomY(bfr);\n        let x2 = mol.atomX(bto), y2 = mol.atomY(bto);\n        let ang = [];\n        for (let n = 0, p = 0; n < adj.length; n++)\n            if (adj[n] != bto) {\n                ang.push(Math.atan2(mol.atomY(adj[n]) - y1, mol.atomX(adj[n]) - x1));\n            }\n        let newang = SketchUtil.mapAngleSubstituent(geom, ang);\n        if (newang == null) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        let bestAng = TWOPI + 1, bestX = 0, bestY = 0;\n        let curth = Math.atan2(y2 - y1, x2 - x1), r = norm_xy(x2 - x1, y2 - y1);\n        for (let n = 0; n < newang.length; n++) {\n            let th = angleDiff(newang[n], curth);\n            if (th < 0)\n                th += TWOPI;\n            if (n > 0 && th > bestAng)\n                continue;\n            let x = x1 + r * Math.cos(th + curth);\n            let y = y1 + r * Math.sin(th + curth);\n            if (CoordUtil.atomAtPoint(mol, x, y) > 0)\n                continue;\n            bestAng = th;\n            bestX = x;\n            bestY = y;\n        }\n        if (bestAng > TWOPI) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        this.output.mol.setAtomPos(bto, bestX, bestY);\n    }\n    checkAbbreviationReady() {\n        let junction = 0;\n        let mol = this.input.mol, subjmask = this.subjectMask;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let b1 = mol.bondFrom(n), b2 = mol.bondTo(n);\n            let atom = 0;\n            if ((subjmask[b1 - 1] && !subjmask[b2 - 1] && MolUtil.hasAbbrev(mol, b1)) ||\n                (subjmask[b2 - 1] && !subjmask[b1 - 1] && MolUtil.hasAbbrev(mol, b2))) {\n                this.errmsg = 'Already an abbreviation.';\n                return false;\n            }\n            if (subjmask[b1 - 1] && !subjmask[b2 - 1])\n                atom = b1;\n            else if (subjmask[b2 - 1] && !subjmask[b1 - 1])\n                atom = b2;\n            if (atom == 0 || atom == junction) { }\n            else if (junction == 0)\n                junction = atom;\n            else {\n                this.errmsg = 'The selected group must be terminal.';\n                return false;\n            }\n        }\n        return true;\n    }\n    mobileSide(bond, disqualTerminal = false) {\n        let { mol } = this.input;\n        let atom1 = mol.bondFrom(bond), atom2 = mol.bondTo(bond);\n        let g = Graph.fromMolecule(mol);\n        g.removeEdge(atom1 - 1, atom2 - 1);\n        let side1 = [], side2 = [];\n        for (let grp of g.calculateComponentGroups()) {\n            if (grp.includes(atom1 - 1))\n                side1 = Vec.add(grp, 1);\n            if (grp.includes(atom2 - 1))\n                side2 = Vec.add(grp, 1);\n        }\n        let weight1 = side1.length * (mol.atomRingBlock(atom1) > 0 ? 2 : 1);\n        let weight2 = side2.length * (mol.atomRingBlock(atom2) > 0 ? 2 : 1);\n        let sel1 = false, sel2 = false;\n        for (let a of side1)\n            if (this.isSelected(a)) {\n                sel1 = true;\n                break;\n            }\n        for (let a of side2)\n            if (this.isSelected(a)) {\n                sel2 = true;\n                break;\n            }\n        if (disqualTerminal && mol.atomAdjCount(atom1) == 1)\n            return [atom2, atom1, side2];\n        else if (disqualTerminal && mol.atomAdjCount(atom2) == 1)\n            return [atom1, atom2, side1];\n        else if (sel1 && !sel2) { }\n        else if ((sel2 && !sel1) || weight2 < weight1)\n            return [atom2, atom1, side2];\n        return [atom1, atom2, side1];\n    }\n    isSelected(atom) {\n        let mask = this.input.selectedMask;\n        return mask ? mask[atom - 1] : false;\n    }\n    removePolymerBlock(atoms) {\n        let polymer = new PolymerBlock(this.input.mol.clone());\n        for (let id of polymer.getIDList()) {\n            let unit = polymer.getUnit(id);\n            for (let atom of atoms)\n                if (unit.atoms.includes(atom)) {\n                    polymer.removeUnit(id);\n                    polymer.rewriteMolecule();\n                    this.output.mol = polymer.mol;\n                    return true;\n                }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=MoleculeActivity.js.map","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Mixture} from './Mixture';\nimport {MoleculeStream} from 'webmolkit/data/MoleculeStream';\nimport {StandardUnits, Units} from './Units';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {ActivityType, MoleculeActivity, SketchState} from 'webmolkit/sketcher/MoleculeActivity';\nimport {MixfileComponent} from './Mixfile';\n\n/*\n\tMixture normalisation options: recommendations for how to make a mixture more conformant. It is up to the caller\n\tto decide what to do with this information.\n*/\n\nexport interface NormMixtureNote\n{\n\torigin:number[];\n\n\tstereoEnum?:string[]; // if defined, contains stereo-enumerated versions of current\n\n\t// units converted into concentration, if both possible & necessary\n\tconcQuantity?:number | number[]; // a concentration numeric which is associated with the units below (two numbers in case of a range)\n\tconcError?:number; // optional standard error (applies to quantity when it's a scalar)\n\tconcUnits?:string; // units for quantity (e.g. %, mol/L, g, etc.)\n\tconcRelation?:string;\n}\n\nenum AbsType\n{\n\tNone,\n\tMass, // reference scale: g\n\tVolume, // reference scale: L\n\tMoles, // reference scale: mol\n}\n\nexport class NormMixture\n{\n\tpublic notes:NormMixtureNote[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor(private mixture:Mixture)\n\t{\n\t}\n\n\tpublic analyse():void\n\t{\n\t\tlet origins = this.mixture.getOrigins();\n\t\tlet compList = origins.map((origin) => this.mixture.getComponent(origin));\n\n\t\tfor (let n = 0; n < origins.length; n++)\n\t\t{\n\t\t\tlet note:NormMixtureNote = {origin: origins[n]};\n\n\t\t\t// stereocentres get expanded out\n\t\t\tlet comp = compList[n];\n\t\t\tif (comp.molfile && Vec.isBlank(comp.contents))\n\t\t\t{\n\t\t\t\tlet mol = MoleculeStream.readUnknown(comp.molfile);\n\t\t\t\tif (!mol) continue;\n\t\t\t\tlet stereo = this.enumerateStereo(mol);\n\t\t\t\tif (Vec.notBlank(stereo)) note.stereoEnum = stereo.map((mol) => MoleculeStream.writeMDLMOL(mol));\n\t\t\t}\n\n\t\t\tthis.notes.push(note);\n\t\t}\n\n\t\tlet childIndexes:number[][] = [];\n\t\tfor (let n = 0; n < origins.length; n++)\n\t\t{\n\t\t\tchildIndexes[n] = [];\n\t\t\tlet o = origins[n];\n\t\t\tfor (let i = n + 1; i < origins.length; i++)\n\t\t\t\tif (origins[i].length == o.length + 1 && Vec.equals(o, origins[i].slice(0, o.length))) childIndexes[n].push(i);\n\t\t}\n\n\t\t// conversion of \"absolute units\" to concentrations, where possible\n\t\tlet sumType = new Array(origins.length).fill(AbsType.None);\n\t\tlet sumAmount1 = Vec.numberArray(null, origins.length);\n\t\tlet sumAmount2 = Vec.numberArray(null, origins.length);\n\t\tlet sumError = Vec.numberArray(null, origins.length);\n\t\twhile (true)\n\t\t{\n\t\t\tlet modified = false;\n\n\t\t\tfor (let n = 0; n < origins.length; n++)\n\t\t\t{\n\t\t\t\tlet comp = compList[n], note = this.notes[n];\n\n\t\t\t\tif (sumType[n] == AbsType.None)\n\t\t\t\t{\n\t\t\t\t\t[sumType[n], sumAmount1[n], sumAmount2[n], sumError[n]] = this.toAbsoluteUnits(comp);\n\t\t\t\t\tif (sumType[n] != AbsType.None) modified = true;\n\t\t\t\t}\n\n\t\t\t\tif (Vec.isBlank(comp.contents)) continue;\n\n\t\t\t\t// if there's no absolute quantity presently available, see if we can add up the sub-components\n\t\t\t\tif (sumType[n] == AbsType.None)\n\t\t\t\t{\n\t\t\t\t\tlet amount = 0, childType = AbsType.None;\n\t\t\t\t\tfor (let i of childIndexes[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (sumType[i] == AbsType.None || sumAmount2[i] != null ||\n\t\t\t\t\t\t\t(childType != AbsType.None && sumType[i] != childType))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tchildType = AbsType.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchildType = sumType[i];\n\t\t\t\t\t\tamount += sumAmount1[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (childType != AbsType.None)\n\t\t\t\t\t{\n\t\t\t\t\t\tsumType[n] = childType;\n\t\t\t\t\t\tsumAmount1[n] = amount;\n\t\t\t\t\t\tmodified = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if current type is an absolute unit, see if all-but-one of the children have that same type\n\t\t\t\tif (sumType[n] != AbsType.None && childIndexes[n].length >= 2)\n\t\t\t\t{\n\t\t\t\t\tlet idxOne = -1, sum = 0;\n\t\t\t\t\tfor (let i of childIndexes[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (sumType[i] == AbsType.None)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (idxOne >= 0) {idxOne = -1; break;} // only one allowed\n\t\t\t\t\t\t\tidxOne = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (sumType[i] != sumType[n]) {idxOne = -1; break;} // can't be defined-but-different\n\t\t\t\t\t\telse if (sumAmount2[i] != null) {idxOne = -1; break;} // ranges disqualify\n\t\t\t\t\t\telse sum += sumAmount1[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (idxOne >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tsumType[idxOne] = sumType[n];\n\t\t\t\t\t\tsumAmount1[idxOne] = sumAmount1[n] - sum;\n\t\t\t\t\t\tmodified = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!modified) break;\n\t\t}\n\n\t\t// now use derived absolute units to infer concentration-types\n\t\tfor (let n = 0; n < origins.length; n++) if (sumType[n] != AbsType.None)\n\t\t{\n\t\t\tfor (let i of childIndexes[n]) if (sumType[i] != AbsType.None)\n\t\t\t{\n\t\t\t\tlet scale = 0, denom = sumAmount1[n], uri:string = null;\n\t\t\t\tif (sumType[i] == AbsType.Mass)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) [scale, uri] = [100 / denom, StandardUnits.pcWW];\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [100 / denom, StandardUnits.pcWV];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) {}\n\t\t\t\t}\n\t\t\t\telse if (sumType[i] == AbsType.Volume)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) {}\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [100 / denom, StandardUnits.pcVV];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) {}\n\t\t\t\t}\n\t\t\t\telse if (sumType[i] == AbsType.Moles)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) {}\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [1.0 / denom, StandardUnits.mol_L];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) [scale, uri] = [100 / denom, StandardUnits.pcMM];\n\t\t\t\t}\n\n\t\t\t\tif (uri != null)\n\t\t\t\t{\n\t\t\t\t\tif (sumAmount2[i] == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.notes[i].concQuantity = sumAmount1[i] * scale;\n\t\t\t\t\t\tthis.notes[i].concError = sumError[i] == null ? null : sumError[i] * scale;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.notes[i].concQuantity = [sumAmount1[i] * scale, sumAmount2[i] * scale];\n\t\t\t\t\t}\n\t\t\t\t\tthis.notes[i].concUnits = Units.uriToName(uri);\n\t\t\t\t\tthis.notes[i].concRelation = compList[n].relation;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic findNote(origin:number[]):NormMixtureNote\n\t{\n\t\tfor (let note of this.notes) if (Vec.equals(origin, note.origin)) return note;\n\t\treturn null;\n\t}\n\n\t// ------------ private methods ------------\n\n\t// if the given molecule has stereogenic centres (i.e. wavy bonds), enumerate them explicitly\n\tprivate enumerateStereo(mol:Molecule):Molecule[]\n\t{\n\t\tlet splitMolecule = (mol:Molecule):Molecule[] =>\n\t\t{\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++) if (mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN)\n\t\t\t{\n\t\t\t\tlet mol1 = mol.clone(), mol2 = mol.clone();\n\t\t\t\tif (mol.bondOrder(n) == 1)\n\t\t\t\t{\n\t\t\t\t\t// make up & down versions of the bond\n\t\t\t\t\tmol1.setBondType(n, Molecule.BONDTYPE_DECLINED);\n\t\t\t\t\tmol2.setBondType(n, Molecule.BONDTYPE_INCLINED);\n\t\t\t\t\treturn [mol1, mol2];\n\t\t\t\t}\n\t\t\t\telse if (mol.bondOrder(n) == 2)\n\t\t\t\t{\n\t\t\t\t\t// for a cis/trans double bond, use the sketcher algorithm to rotate it; if the rotation is rejected,\n\t\t\t\t\t// it'll just return the input molecule, with the stereolabel removed\n\t\t\t\t\tlet mol1 = mol.clone();\n\t\t\t\t\tmol1.setBondType(n, Molecule.BONDTYPE_NORMAL);\n\n\t\t\t\t\tlet mol2:Molecule = null;\n\t\t\t\t\tif (!mol.bondInRing(n))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet state:SketchState = {mol: mol1, currentAtom: 0, currentBond: n, selectedMask: null};\n\t\t\t\t\t\tlet activ = new MoleculeActivity(state, ActivityType.BondRotate, {});\n\t\t\t\t\t\tactiv.execute();\n\t\t\t\t\t\tif (!activ.errmsg && activ.output.mol) mol2 = activ.output.mol;\n\t\t\t\t\t}\n\t\t\t\t\treturn mol2 ? [mol1, mol2] : [mol1];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tlet list:Molecule[] = [mol];\n\t\tfor (let n = 0; n < list.length; n++)\n\t\t{\n\t\t\tlet emols = splitMolecule(list[n]);\n\t\t\tif (!emols) continue;\n\n\t\t\tlist[n] = emols[0];\n\t\t\tfor (let i = emols.length - 1; i >= 1; i--) list.splice(n + 1, 0, emols[i]);\n\t\t\tn--;\n\t\t}\n\n\t\treturn list.length > 1 ? list : null;\n\t}\n\n\t// converts the units within the component to \"absolute\" form, at a singular scale; return is type followed by\n\t// quantity1, quantity2, error (to capture ranges & errors, where applicable)\n\tprivate toAbsoluteUnits(comp:MixfileComponent):[AbsType, number, number, number]\n\t{\n\t\tif (!comp.units || comp.quantity == null /*|| typeof comp.quantity != 'number'*/) return [AbsType.None, null, null, null];\n\t\tlet uri = Units.nameToURI(comp.units);\n\t\tif (!uri) return [AbsType.None, null, null, null];\n\n\t\tlet scale = 0, type = AbsType.None;\n\n\t\tif (uri == StandardUnits.kg) [scale, type] = [1E3, AbsType.Mass];\n\t\telse if (uri == StandardUnits.g) [scale, type] = [1, AbsType.Mass];\n\t\telse if (uri == StandardUnits.mg) [scale, type] = [1E-3, AbsType.Mass];\n\t\telse if (uri == StandardUnits.ug) [scale, type] = [1E-6, AbsType.Mass];\n\t\telse if (uri == StandardUnits.ng) [scale, type] = [1E-9, AbsType.Mass];\n\t\telse if (uri == StandardUnits.L) [scale, type] = [1, AbsType.Volume];\n\t\telse if (uri == StandardUnits.mL) [scale, type] = [1E-3, AbsType.Volume];\n\t\telse if (uri == StandardUnits.uL) [scale, type] = [1E-6, AbsType.Volume];\n\t\telse if (uri == StandardUnits.nL) [scale, type] = [1E-9, AbsType.Volume];\n\t\telse if (uri == StandardUnits.mol) [scale, type] = [1, AbsType.Moles];\n\t\telse if (uri == StandardUnits.mmol) [scale, type] = [1E-3, AbsType.Moles];\n\t\telse if (uri == StandardUnits.umol) [scale, type] = [1E-6, AbsType.Moles];\n\t\telse if (uri == StandardUnits.nmol) [scale, type] = [1E-9, AbsType.Moles];\n\t\telse return [AbsType.None, null, null, null];\n\n\t\tif (typeof comp.quantity == 'number')\n\t\t{\n\t\t\tlet error = comp.error == null ? null : comp.error * scale;\n\t\t\treturn [type, (comp.quantity as number) * scale, null, error];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet [lo, hi] = comp.quantity as number[];\n\t\t\treturn [type, lo * scale, hi * scale, null];\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {deepClone} from 'webmolkit/util/util';\nimport {Mixfile, MIXFILE_VERSION, MixfileComponent} from './Mixfile';\nimport {Vec} from 'webmolkit/util/Vec';\n\n/*\n\tData container for mixtures: basically wraps the Mixfile interface, with additional functionality.\n\n\tNote that functionality should be assumed to be using shallow pointers to the underlying dictionary, unless\n\tspecified otherwise (e.g. clone).\n*/\n\nexport class Mixture\n{\n\t// ------------ public methods ------------\n\n\tconstructor(public mixfile?:Mixfile)\n\t{\n\t\tif (!mixfile) this.mixfile = {mixfileVersion: MIXFILE_VERSION};\n\t\telse if (!this.mixfile.mixfileVersion) this.mixfile.mixfileVersion = MIXFILE_VERSION;\n\t}\n\n\t// instantiates a new mixture object by casting a component into a root mixfile\n\tpublic static fromComponent(comp:MixfileComponent):Mixture\n\t{\n\t\tlet mixfile = deepClone(comp) as Mixfile;\n\t\tmixfile.mixfileVersion = MIXFILE_VERSION;\n\t\treturn new Mixture(mixfile);\n\t}\n\n\t// returns true if the mixture is blank\n\tpublic isEmpty():boolean\n\t{\n\t\treturn Mixture.isComponentEmpty(this.mixfile);\n\t}\n\tpublic static isComponentEmpty(comp:MixfileComponent):boolean\n\t{\n\t\tconst BITS = ['name', 'description', 'synonyms', 'formula', 'molfile', 'inchi', 'inchiKey', 'smiles',\n\t\t\t\t\t  'ratio', 'quantity', 'units', 'relation', 'identifiers', 'links'];\n\t\tfor (let bit of BITS) if ((comp as any)[bit] != null) return false;\n\t\tif (Vec.arrayLength(comp.contents) > 0) return false;\n\t\treturn true;\n\t}\n\n\t// returns true if there's something to put in the quantity section\n\tpublic static hasQuantity(comp:MixfileComponent):boolean\n\t{\n\t\treturn comp.quantity != null || comp.ratio != null;\n\t}\n\n\t// makes a deep copy of self\n\tpublic clone():Mixture\n\t{\n\t\treturn new Mixture(deepClone(this.mixfile));\n\t}\n\n\t// returns true if the two mixtures are identical at all parts of their branch structure\n\tpublic equals(other:Mixture):boolean\n\t{\n\t\tif (other == null) return false;\n\t\treturn this.recursiveEqual(this.mixfile, other.mixfile);\n\t}\n\n\t// unpacks a string into a mixture; throws an exception if anything went wrong\n\tpublic static deserialise(data:string):Mixture\n\t{\n\t\tlet mixfile = JSON.parse(data);\n\t\treturn new Mixture(mixfile);\n\t}\n\n\t// converts the entire underlying JSON mixfile into a prettyprinted string\n\tpublic serialise():string\n\t{\n\t\treturn Mixture.beautify(this.mixfile);\n\t}\n\n\t// likewise, for a sub-component\n\tpublic static serialiseComponent(comp:MixfileComponent):string\n\t{\n\t\treturn Mixture.beautify(comp);\n\t}\n\n\t// uses the \"origin vector\" to fetch a particular component; this is an array of indices, where [] indicates the root; its first\n\t// component is [0], the second child of its first component is [0,1], etc.\n\tpublic getComponent(origin:number[]):MixfileComponent\n\t{\n\t\tif (origin.length == 0) return this.mixfile;\n\t\tlet find:MixfileComponent = null, look = this.mixfile.contents || [];\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tfind = look[o];\n\t\t\tif (!find) return null;\n\t\t\tlook = find.contents || [];\n\t\t}\n\t\treturn find;\n\t}\n\tpublic getParentComponent(origin:number[]):MixfileComponent\n\t{\n\t\tif (origin.length == 0) return null;\n\t\torigin = origin.slice();\n\t\torigin.pop();\n\t\treturn this.getComponent(origin);\n\t}\n\n\t// returns a flat list of all components, i.e. without any hierarchy; these are all pointers to the originals, so\n\t// modifications can be made directly\n\tpublic getComponents():MixfileComponent[]\n\t{\n\t\tlet list:MixfileComponent[] = [], stack:MixfileComponent[] = [this.mixfile];\n\t\twhile (stack.length > 0)\n\t\t{\n\t\t\tlet comp = stack.shift();\n\t\t\tlist.push(comp);\n\t\t\tif (comp.contents) for (let sub of comp.contents) stack.push(sub);\n\t\t}\n\t\treturn list;\n\t}\n\n\t// returns an array that is equal in size to the number of nodes; each entry contains origin of that node\n\tpublic getOrigins():number[][]\n\t{\n\t\tlet origins:number[][] = [];\n\n\t\tlet nodeEnum = (origin:number[], comp:MixfileComponent):void =>\n\t\t{\n\t\t\torigins.push(origin);\n\t\t\tfor (let n = 0; n < Vec.arrayLength(comp.contents); n++) nodeEnum(Vec.append(origin, n), comp.contents[n]);\n\t\t};\n\n\t\tnodeEnum([], this.mixfile);\n\t\treturn origins;\n\t}\n\n\t// replaces a component at a given position; returns true if the new component was different to the old one\n\tpublic setComponent(origin:number[], comp:MixfileComponent):boolean\n\t{\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\n\t\t// copy over the dictionary entries in 'comp', noting if anything changed\n\t\tlet modified = false;\n\t\tfor (let k in comp)\n\t\t{\n\t\t\tlet v = (comp as any)[k];\n\t\t\tif (v != (find as any)[k])\n\t\t\t{\n\t\t\t\t(find as any)[k] = v;\n\t\t\t\tmodified = true;\n\t\t\t}\n\t\t}\n\n\t\t// cleanup by removing explicit nulls\n\t\tObject.keys(find).forEach((key:string) => {if ((find as any)[key] == null) delete (find as any)[key];});\n\n\t\treturn modified;\n\t}\n\n\t// deletes the indicated component, and collapses any child nodes into its own position (as opposed to just deleting\n\t// them too)\n\tpublic deleteComponent(origin:number[]):void\n\t{\n\t\tif (origin.length == 0) return; // can't delete the whole thing\n\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents, parent = look;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tparent = look;\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\t\tlet idx = origin[origin.length - 1];\n\t\tparent.splice(idx, 1);\n\t\tif (look) for (let c of look) parent.splice(idx++, 0, c);\n\t}\n\n\t// insert a new component \"above\" the existing one, and handle the reparenting\n\tpublic prependBefore(origin:number[], comp:MixfileComponent):void\n\t{\n\t\t// slightly different when prepending before the root element\n\t\tif (origin.length == 0)\n\t\t{\n\t\t\tlet mixfile = this.mixfile;\n\t\t\tlet subcomp:MixfileComponent = {};\n\t\t\tconst SKIP = ['mixfileVersion', 'contents'];\n\t\t\tfor (let key in (mixfile as any)) if (!SKIP.includes(key))\n\t\t\t{\n\t\t\t\t(subcomp as any)[key] = (mixfile as any)[key];\n\t\t\t\tdelete (mixfile as any)[key];\n\t\t\t}\n\t\t\tmixfile.contents = [subcomp];\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents, parent = look;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tparent = look;\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\t\tlet idx = origin[origin.length - 1];\n\t\tparent[idx] = comp;\n\t\tcomp.contents = [find];\n\t}\n\n\t// takes an origin vector and splits it into {parent origin} and {child index}; returns null on both counts if this is the root node\n\tpublic static splitOrigin(origin:number[]):[number[], number]\n\t{\n\t\tif (origin.length == 0) return [null, null];\n\t\tlet parent = origin.slice(0);\n\t\tlet idx = parent.splice(origin.length - 1, 1)[0];\n\t\treturn [parent, idx];\n\t}\n\n\t// makes a JSON object into a nicely formatted string for human readability\n\tpublic static beautify(json:any):string\n\t{\n\t\tlet lines = JSON.stringify(json, null, 4).split('\\n');\n\t\tlet regex = /^(\\s*\\\"\\w+\\\": )([\\[\\{].*)$/, regpad = /^(\\s*)/;\n\t\tfor (let n = 0; n < lines.length; n++)\n\t\t{\n\t\t\tlet match = regex.exec(lines[n]);\n\t\t\tif (!match) continue;\n\t\t\tlet padding = regpad.exec(lines[n]);\n\t\t\tlines[n] = match[1] + '\\n' + padding[1] + match[2];\n\t\t}\n\t\treturn lines.join('\\n');\n\t}\n\n\t// ------------ private methods ------------\n\n\t// returns true if this component, and all sub-components, are equal\n\tprivate recursiveEqual(comp1:MixfileComponent, comp2:MixfileComponent):boolean\n\t{\n\t\tlet dict1:any = comp1, dict2:any = comp2;\n\t\t/*let keys1 = Object.keys(dict1), keys2 = Object.keys(dict2);\n\t\tlet i:number;\n\t\tif ((i = keys1.indexOf('contents')) >= 0) keys1.splice(i, 1);\n\t\tif ((i = keys2.indexOf('contents')) >= 0) keys2.splice(i, 1);*/\n\t\tlet keys1:string[] = [], keys2:string[] = [];\n\t\tfor (let k in dict1) if (k != 'contents' && dict1[k] != null) keys1.push(k);\n\t\tfor (let k in dict2) if (k != 'contents' && dict2[k] != null) keys2.push(k);\n\t\tkeys1.sort();\n\t\tkeys2.sort();\n\t\tif (!Vec.equals(keys1, keys2)) return false; // different keys (less contents) is a dealbreaker\n\t\tfor (let k of keys1)\n\t\t{\n\t\t\tlet v1 = dict1[k], v2 = dict2[k];\n\t\t\tif (Array.isArray(v1) && Array.isArray(v2))\n\t\t\t{\n\t\t\t\tif (!Vec.equals(v1, v2)) return false;\n\t\t\t}\n\t\t\telse // assume scalar\n\t\t\t{\n\t\t\t\tif (v1 != v2) return false;\n\t\t\t}\n\t\t}\n\n\t\tlet len = Vec.arrayLength(comp1.contents);\n\t\tif (len != Vec.arrayLength(comp2.contents)) return false;\n\t\tfor (let n = 0; n < len; n++) if (!this.recursiveEqual(comp1.contents[n], comp2.contents[n])) return false;\n\n\t\treturn true;\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\n/*\n\tThe Mixfile is a raw definition of the contents of a mixture, which maps directly to the JSON datastructure\n\tthat holds the serialised content. For keeping an operable mixture instance, see the Mixture class.\n*/\n\nexport const MIXFILE_VERSION = 1.00; // version number to use for newly created instances\n\nexport type MixfileMetadatum = string | (string | number)[];\n\nexport interface Mixfile extends MixfileComponent\n{\n\tmixfileVersion:number;\n}\n\nexport interface MixfileComponent\n{\n\tname?:string;\n\tdescription?:string;\n\tsynonyms?:string[];\n\n\t// molecular specification: none of them are mandatory, but if more than one is specified, they must refer to the same species, \n\t// to the extent that the format allows; InChI strings are expected to be standard, while SMILES are not\n\tformula?:string;\n\tmolfile?:string;\n\tinchi?:string;\n\tinchiKey?:string;\n\tsmiles?:string;\n\n\t// if the concentration is known, then these fields should be filled out as appropriate; if the concentration is a ratio,\n\t// it is relative to all of the components within the same branch\n\tquantity?:number | number[]; // a concentration numeric which is associated with the units below (two numbers in case of a range)\n\terror?:number; // optional standard error (applies to quantity when it's a scalar)\n\tratio?:number[]; // a ratio, specified as [numerator, denominator]\n\tunits?:string; // units for quantity (e.g. %, mol/L, g, etc.)\n\trelation?:string; // optional modifier when applied to quantity (e.g. >, <, ~)\n\n\t// identifiers that map the substance to external databases (e.g. PubChem, ChemSpider, CAS, etc.); identifiers are ID numbers, and\n\t// the meaning is implied by the context; links should be resolvable URLs, which are an alternative way of locating external\n\t// resources; in some cases where there are multiple identifiers, the value should be specified as an array\n\tidentifiers?:Record<string, string | string[]>;\n\tlinks?:Record<string, string | string[]>;\n\n\t// metadata starts with an IRI that defines the core concept, and then may be followed by scalar data and/or other IRIs; this allows\n\t// discrete facts to be asserted about the component, as well as numeric values such as physical properties and their units\n\tmetadata?:MixfileMetadatum[];\n\n\t// subcomponents: if this is a discrete molecular entity, then there will be none; usually there are either 0 or 2-or-more; in cases\n\t// where there are any subcomponents, any of the properties above apply to all of these subcomponents collectively\n\tcontents?:MixfileComponent[];\n}\n\n// useful for cleaning up external JSON content\nexport const MIXFILE_COMPONENT_FIELDS =\n[\n\t'name', 'description', 'synonyms', 'formula', 'molfile', 'inchi', 'inchiKey', 'smiles',\n\t'ratio', 'quantity', 'units', 'relation', 'identifiers', 'links', 'contents'\n];\nexport const MIXFILE_ROOT_FIELDS =\n[\n\t'mixfileVersion', ...MIXFILE_COMPONENT_FIELDS\n];\n\n/* orignal example of what the format might look like (1st draft):\n{\n\t\"mixture\": \"1.0 M lithium diisopropyl amide in THF/hexanes\",\n\t\"contents\":\n\t[\n\t\t{\n\t\t\t\"name\": \"lithium diisopropylamide\",\n\t\t\t\"synonyms\": [\"LDA\", \"(iPr)2N.Li\"],\n\t\t\t\"formula\": \"C6H14LiN\",\n\t\t\t\"pubchem\": \"2724682\",\n\t\t\t\"chemspider\": \"2006804\",\n\t\t\t\"inchi\": \"InChI=1S/C6H14N.Li/c1-5(2)7-6(3)4;/h5-6H,1-4H3;/q-1;+1\",\n\t\t\t\"smiles\": \"[Li+].CC(C)[N-]C(C)C\",\n\t\t\t\"molfile\": \"\\nOpenMolecule\\n\\n  8  7  0  0  0  0  0  0  0  0999 V2000\\n    0.0000    0.0000    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\\n    1.5000    0.0000    0.0000 Li  0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.7500    1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.7500   -1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.0000    2.5981    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -2.2500    1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n    0.0000   -2.5981    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -2.2500   -1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n  1  2  1  0  0  0  0\\n  1  3  1  0  0  0  0\\n  1  4  1  0  0  0  0\\n  3  5  1  0  0  0  0\\n  3  6  1  0  0  0  0\\n  4  7  1  0  0  0  0\\n  4  8  1  0  0  0  0\\nM  END\\n\",\n\t\t\t\"quantity\": 1.0,\n\t\t\t\"units\": \"mol/L\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"solvent\",\n\t\t\t\"contents\":\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"tetrahydrofuran\",\n\t\t\t\t\t\"synonyms\": [\"THF\"],\n\t\t\t\t\t\"formula\": \"C4H8O\",\n\t\t\t\t\t\"pubchem\": \"8028\",\n\t\t\t\t\t\"chemspider\": \"7737\",\n\t\t\t\t\t\"inchi\": \"InChI=1S/C4H8O/c1-2-4-5-3-1/h1-4H2\",\n\t\t\t\t\t\"smiles\": \"C1CCOC1\",\n\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\"fraction\": [1, 8]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"group\": \"hexanes\",\n\t\t\t\t\t\"fraction\": [7, 8],\n\t\t\t\t\t\"contents\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"n-hexane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"8058\",\n\t\t\t\t\t\t\t\"chemspider\": \"7767\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-3-5-6-4-2/h3-6H2,1-2H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCCCCC\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [50, 70]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"methylcyclopentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7296\",\n\t\t\t\t\t\t\t\"chemspider\": \"7024\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H12/c1-6-4-2-3-5-6/h6H,2-5H2,1H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CC1CCCC1\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [10, 20]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"2-methypentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7892\",\n\t\t\t\t\t\t\t\"chemspider\": \"7604\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-4-5-6(2)3/h6H,4-5H2,1-3H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCCC(C)C\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [1, 5]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"3-methylpentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7282\",\n\t\t\t\t\t\t\t\"chemspider\": \"7010\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-4-6(3)5-2/h6H,4-5H2,1-3H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCC(C)CC\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [1, 5]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"other hexanes\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n*/\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {deepClone} from 'webmolkit/util/util';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {MoleculeStream} from 'webmolkit/data/MoleculeStream';\nimport {MolUtil} from 'webmolkit/data/MolUtil';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Mixfile, MixfileComponent} from './Mixfile';\nimport {NormMixture, NormMixtureNote} from './NormMixture';\nimport {Mixture} from './Mixture';\nimport {InChIDelegate} from './InChIDelegate';\nimport {Units} from './Units';\n\n// quick implementation of CRC hash codes\nlet crc_table:number[] = [];\nfunction make_crc_table():void\n{\n\tif (crc_table.length > 0) return;\n\tfor (let n = 0; n < 256; n++)\n\t{\n\t\tlet c = n;\n\t\tfor (let i = 0; i < 8; i++) if ((c & 1) != 0) c = 0xEDB88320 ^ (c >>> 1); else c = (c >>> 1);\n\t\tcrc_table.push(c);\n\t}\n}\nconst BOOT_CRC = 0xFFFFFFFF;\nfunction start_crc():number {return BOOT_CRC;}\nfunction feed_crc(crc:number, byte:number):number\n{\n\tlet idx = (crc ^ byte) & 0xFF;\n\treturn crc_table[idx] ^ (crc >>> 8);\n}\nfunction end_crc(crc:number):number {return crc ^ BOOT_CRC;}\n\n// work-in-progress placeholder for the recursive MInChI assembler\ninterface MInChIBuilder\n{\n\tlayerN:string; // N-layer is the hierarchical form\n\tlayerG:string; // G-layer has the concentrations\n}\n\n// for marking the segments of the outgoing MInChI string according to category\nexport enum MInChISegment\n{\n\tNone = 0,\n\tHeader, // the initial recognition string\n\tComponent, // the components (of which there can be multiple contiguous instances)\n\tHierarchy, // the /n layer\n\tConcentration, // the /g layer\n}\n\n// augmented version of a component used to stash some MInChI-specific derived content\ninterface MInChIComponent extends MixfileComponent\n{\n\tinchiFrag:string;\n\tuseRatio:number;\n\tnote:NormMixtureNote;\n}\n\nconst MINCHI_VERSION = 'MInChI=0.99.1S';\n\n/*\n\tFormulates a MInChI string out of the given mixture.\n*/\n\nexport class ExportMInChI\n{\n\tprivate mixture:Mixture;\n\tprivate norm:NormMixture;\n\tprivate minchi = '?';\n\tprivate segment:MInChISegment[] = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(mixfile:Mixfile, private inchi:InChIDelegate)\n\t{\n\t\tthis.mixture = new Mixture(deepClone(mixfile));\n\t\tthis.norm = new NormMixture(this.mixture);\n\t\tthis.norm.analyse();\n\t}\n\n\t// this should generally be called first: any component that has a structure but not an InChI string gets one calculated,\n\t// which presumes that the external environment has been configured to allow this; returns true if anything was done, i.e.\n\t// the parameter mixture was modified; note that if any components have an InChI that is wrong, this will be believed\n\tpublic async fillInChI():Promise<boolean>\n\t{\n\t\tlet modified = false;\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile || comp.inchi) continue;\n\t\t\tlet mol:Molecule = null;\n\t\t\ttry {mol = MoleculeStream.readUnknown(comp.molfile);}\n\t\t\tcatch (e) {continue;} // silent failure if it's an invalid molecule\n\t\t\tif (MolUtil.isBlank(mol)) continue;\n\t\t\tlet {inchi, inchiKey} = await this.inchi.generate(mol);\n\t\t\tcomp.inchi = inchi;\n\t\t\tcomp.inchiKey = inchiKey;\n\t\t\tmodified = true;\n\t\t}\n\t\treturn modified;\n\t}\n\n\t// assembles the MInChI string: once this has completed, the result is available\n\tpublic formulate():void\n\t{\n\t\tlet modmix = this.mixture.clone();\n\t\t//this.sortContents(sortmix.contents);\n\n\t\tfor (let origin of modmix.getOrigins())\n\t\t{\n\t\t\tlet note = this.norm.findNote(origin);\n\t\t\tif (note) (modmix.getComponent(origin) as MInChIComponent).note = note;\n\t\t}\n\n\t\t// special deal: any component with >2 mixtures that has a consistent ratio definition needs to be marked\n\t\t// at the parent-component level\n\t\tskip: for (let comp of modmix.getComponents()) if (Vec.len(comp.contents) >= 2)\n\t\t{\n\t\t\tif (Vec.len(comp.contents[0].ratio) != 2) continue;\n\t\t\tlet [numer, denom] = comp.contents[0].ratio;\n\t\t\tfor (let n = 1; n < comp.contents.length; n++)\n\t\t\t{\n\t\t\t\tlet ratio = comp.contents[n].ratio;\n\t\t\t\tif (Vec.len(ratio) != 2 || ratio[1] != denom) continue skip;\n\t\t\t\tnumer += ratio[0];\n\t\t\t}\n\t\t\tif (numer != denom) continue;\n\t\t\tfor (let sub of comp.contents) (sub as MInChIComponent).useRatio = sub.ratio[0];\n\t\t}\n\n\t\t// assemble the InChI fragments - which is sorted and unique and devoid of blanks; same for \"placenames\", which are\n\t\t// terminal components that have name and concentration information, but no InChI\n\t\tlet inchiList:string[] = [];\n\t\tconst PFX = 'InChI=1S/'; // if it doesn't start with this, we don't consider it a valid InChI\n\t\tfor (let origin of modmix.getOrigins())\n\t\t{\n\t\t\tlet mcomp = modmix.getComponent(origin) as MInChIComponent;\n\t\t\tif (Vec.len(mcomp.contents) > 0) continue; // leaf nodes only need apply\n\n\t\t\tmcomp.inchiFrag = mcomp.inchi || '';\n\t\t\tif (mcomp.inchiFrag.startsWith(PFX)) mcomp.inchiFrag = mcomp.inchiFrag.substring(PFX.length);\n\t\t\tif (!inchiList.includes(mcomp.inchiFrag)) inchiList.push(mcomp.inchiFrag);\n\t\t}\n\t\tinchiList.sort();\n\n\t\tlet root = modmix.mixfile as any as MInChIComponent;\n\t\tlet builder = this.assembleContents(root, inchiList);\n\n\t\tthis.minchi = '';\n\t\tthis.segment = [];\n\n\t\tlet appendSegment = (str:string, type:MInChISegment):void =>\n\t\t{\n\t\t\tthis.minchi += str;\n\t\t\tfor (let n = 0; n < str.length; n++) this.segment.push(type);\n\t\t};\n\n\t\tappendSegment(MINCHI_VERSION, MInChISegment.Header);\n\t\tappendSegment('/', MInChISegment.None);\n\t\tfor (let n = 0; n < inchiList.length; n++)\n\t\t{\n\t\t\tif (n > 0) appendSegment('&', MInChISegment.None);\n\t\t\tappendSegment(inchiList[n], MInChISegment.Component);\n\t\t}\n\t\tappendSegment('/', MInChISegment.None);\n\t\tappendSegment('n' + builder.layerN, MInChISegment.Hierarchy);\n\t\tappendSegment('/', MInChISegment.None);\n\t\tappendSegment('g' + builder.layerG, MInChISegment.Concentration);\n\t}\n\n\t// returns the MInChI notationstring formulated as above\n\tpublic getResult():string\n\t{\n\t\treturn this.minchi;\n\t}\n\n\t// return the segmentation values that mark the type for each character (corresponding to the notation string)\n\tpublic getSegment():MInChISegment[]\n\t{\n\t\treturn this.segment;\n\t}\n\n\t// prepares a \"hash key\" for the mixture: this is basically a sorted unique list of the InChI keys for the structures; it has no concentration or hierarchy\n\t// information because these things are not canonical\n\tpublic makeLongHashKey():string\n\t{\n\t\tlet bits:string[] = [];\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile) continue;\n\t\t\tif (!comp.inchiKey) throw 'Mixture has InChIKey(s) missing';\n\t\t\tif (!comp.inchiKey.startsWith('InChIKey=')) throw 'Invalid InChI key: ' + comp.inchiKey;\n\t\t\tbits.push(comp.inchiKey.substring(9));\n\t\t}\n\t\tbits = Vec.sortedUnique(bits);\n\t\treturn 'Long-MInChIKey=' + bits.join(';');\n\t}\n\n\t// similar to above except fixed length and quite short\n\tpublic makeShortHashKey():string\n\t{\n\t\tmake_crc_table();\n\t\tconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\t\tconst NCRC = 4;\n\t\tlet crclist:number[] = [], pos = 0;\n\t\tfor (let n = 0; n < NCRC; n++) crclist.push(start_crc());\n\n\t\tlet feedCharacter = (letter:string) =>\n\t\t{\n\t\t\tlet idx = LETTERS.indexOf(letter);\n\t\t\tif (idx < 0) return;\n\t\t\tcrclist[pos] = feed_crc(crclist[pos], idx);\n\t\t\tpos = pos < NCRC - 1 ? pos + 1 : 0;\n\t\t};\n\n\t\tlet bits:string[] = [];\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile) continue;\n\t\t\tif (!comp.inchiKey) throw 'Mixture has InChIKey(s) missing';\n\t\t\tif (!comp.inchiKey.startsWith('InChIKey=')) throw 'Invalid InChI key: ' + comp.inchiKey;\n\t\t\tbits.push(comp.inchiKey.substring(9));\n\t\t}\n\t\tfor (let bit of Vec.sortedUnique(bits)) for (let letter of bit)\n\t\t{\n\t\t\tfeedCharacter(letter);\n\t\t}\n\n\t\tlet key = 'Short-MInChIKey=';\n\n\t\tfor (let crc of crclist)\n\t\t{\n\t\t\tcrc = end_crc(crc) >>> 1; // clear the least significant bit and the sign as well\n\t\t\tfor (let n = 0; n < 7; n++)\n\t\t\t{\n\t\t\t\tlet idx = crc % 26;\n\t\t\t\tkey += LETTERS[idx];\n\t\t\t\tcrc = Math.trunc(crc / 26);\n\t\t\t}\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t// turns a concentration into a suitable precursor string, or null otherwise\n\tpublic static formatConcentration(quantity:number | number[], error:number, useRatio:number, units:string, relation:string):string\n\t{\n\t\tlet mantissa = (value:number, exp:number):string => Math.round(value * Math.pow(10, -exp)).toString();\n\n\t\t// check for special deal: the \"useRatio\" property is defined if everything in this peer group has a ratio with\n\t\t// the same denominator and they add up correctly; when this isn't the case, it will fall through and convert to\n\t\t// a percentage\n\t\tif (useRatio != null)\n\t\t{\n\t\t\tlet exp = this.determineExponent([useRatio], 4);\n\t\t\treturn mantissa(useRatio, exp) + 'rt' + exp;\n\t\t}\n\n\t\t/*if (comp.ratio && comp.ratio.length >= 2)\n\t\t{\n\t\t\tlet numer = comp.ratio[0], denom = comp.ratio[1];\n\t\t\tif (!(denom > 0)) return null;\n\t\t\tlet value = 100 * numer / denom, exp = this.determineExponent([value], 4);\n\t\t\treturn mantissa(value, exp) + 'pp' + exp;\n\t\t}*/\n\n\t\tif (quantity == null || units == null) return null;\n\n\t\t// special deal (maybe temporary): units that are written with common names that map to a URI are converted automatically\n\t\tlet unitURI = units;\n\t\tif (!unitURI.startsWith('http://')) unitURI = Units.nameToURI(unitURI);\n\t\tif (!unitURI) return;\n\n\t\t// TODO: maybe another special deal for absolute weight/volume/mole quantities - convert them into ratios, to the extent that's\n\t\t// possible... maybe approximating where necessary\n\n\t\tlet bits:string[] = [];\n\n\t\tif (relation != null) bits.push(relation);\n\n\t\tlet values:number[] = typeof quantity == 'number' ? [quantity as number] : quantity;\n\t\tif (error != null) values.push(error);\n\n\t\tlet [mnemonic, scaled] = Units.convertToMInChI(unitURI, values);\n\t\tif (!mnemonic) return;\n\n\t\tlet exp = this.determineExponent(scaled, 4);\n\n\t\tbits.push(mantissa(scaled[0], exp));\n\t\tif (scaled.length > 1)\n\t\t{\n\t\t\tif (Array.isArray(quantity)) bits.push(':'); else bits.push('?');\n\t\t\tbits.push(mantissa(scaled[1], exp));\n\t\t}\n\t\tbits.push(mnemonic);\n\t\tbits.push(exp.toString());\n\n\t\treturn bits.join('');\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate assembleContents(mcomp:MInChIComponent, inchiList:string[]):MInChIBuilder\n\t{\n\t\tlet tree:MInChIBuilder = {layerN: '', layerG: ''};\n\t\tlet builder:MInChIBuilder = {layerN: '', layerG: ''};\n\n\t\t// emit sub-contents recursively\n\t\tif (Vec.len(mcomp.contents) > 0)\n\t\t{\n\t\t\tif (mcomp.contents != null) for (let subComp of mcomp.contents)\n\t\t\t{\n\t\t\t\tlet subTree = this.assembleContents(subComp as MInChIComponent, inchiList);\n\t\t\t\t//if (!subTree.layerN && !subTree.layerG) continue;\n\t\t\t\tif (tree.layerN.length > 0 || tree.layerG.length > 0)\n\t\t\t\t{\n\t\t\t\t\ttree.layerN += '&';\n\t\t\t\t\ttree.layerG += '&';\n\t\t\t\t}\n\t\t\t\ttree.layerN += subTree.layerN;\n\t\t\t\ttree.layerG += subTree.layerG;\n\t\t\t}\n\t\t}\n\n\t\t// append the current information\n\t\tlet idx = mcomp.inchiFrag != null ? inchiList.indexOf(mcomp.inchiFrag) + 1 : 0;\n\t\tif (idx > 0) builder.layerN += idx.toString();\n\n\t\tlet conc = ExportMInChI.formatConcentration(mcomp.quantity, mcomp.error, mcomp.useRatio, mcomp.units, mcomp.relation);\n\t\tif (!conc && mcomp.note)\n\t\t{\n\t\t\tlet {concQuantity, concError, concUnits, concRelation} = mcomp.note;\n\t\t\tconc = ExportMInChI.formatConcentration(concQuantity, concError, null, concUnits, concRelation);\n\t\t}\n\t\tif (conc) builder.layerG += conc;\n\n\t\tif (tree.layerN.length > 0 || tree.layerG.length > 0)\n\t\t{\n\t\t\tbuilder.layerN = '{' + tree.layerN + '}' + builder.layerN;\n\t\t\tbuilder.layerG = '{' + tree.layerG + '}' + builder.layerG;\n\t\t\tthis.shaveBeard(builder);\n\t\t}\n\n\t\treturn builder;\n\t}\n\n\t// removes unnecessary nesting stubble\n\tprivate shaveBeard(builder:MInChIBuilder):void\n\t{\n\t\twhile (builder.layerN.startsWith('{{') && builder.layerN.endsWith('}}') &&\n\t\t\t   builder.layerG.startsWith('{{') && builder.layerG.endsWith('}}'))\n\t\t{\n\t\t\tbuilder.layerN = builder.layerN.substring(1, builder.layerN.length - 1);\n\t\t\tbuilder.layerG = builder.layerG.substring(1, builder.layerG.length - 1);\n\t\t}\n\t}\n\n\t// given a positive number, gives out an appropriate exponent to scale it to, such that the mantissa can be an integer that accommodates\n\t// the required number of significant figures\n\tprivate static determineExponent(values:number[], sigfig:number):number\n\t{\n\t\tlet minval = Number.POSITIVE_INFINITY;\n\t\tfor (let v of values) minval = Math.min(minval, Math.abs(v));\n\n\t\tif (!Number.isFinite(minval) || Number.isNaN(minval) || minval <= 0) return 0;\n\n\t\tlet exp = Math.round(Math.log10(minval)) - sigfig;\n\t\t//let man = Math.round(minval * Math.pow(10, -exp));\n\n\t\tlet str:string[] = [];\n\t\tfor (let v of values) str.push(Math.round(v * Math.pow(10, -exp)).toString());\n\n\t\touter: while (true)\n\t\t{\n\t\t\tfor (let n = 0; n < str.length; n++)\n\t\t\t{\n\t\t\t\tif (!str[n].endsWith('0')) break outer;\n\t\t\t\tstr[n] = str[n].substring(0, str[n].length - 1);\n\t\t\t}\n\t\t\texp++;\n\t\t}\n\n\t\treturn exp;\n\t}\n}\n\n","import { clone } from '../util/util';\nexport class RenderPolicy {\n    constructor(data) {\n        if (!data) {\n            data =\n                {\n                    name: 'default',\n                    pointScale: 20,\n                    resolutionDPI: 100,\n                    fontSize: 0.65,\n                    lineSize: 0.075,\n                    bondSep: 0.2,\n                    defaultPadding: 0.2,\n                    foreground: 0x000000,\n                    background: 0xFFFFFF,\n                    atomCols: new Array(112)\n                };\n            for (let n = 0; n <= 111; n++)\n                data.atomCols[n] = 0x000000;\n            this.data = data;\n        }\n        else {\n            this.data = clone(data);\n        }\n    }\n    clone() { return new RenderPolicy(this.data); }\n    static defaultBlackOnWhite(pixPerAng) {\n        let policy = new RenderPolicy();\n        if (pixPerAng)\n            policy.data.pointScale = pixPerAng;\n        return policy;\n    }\n    static defaultWhiteOnBlack(pixPerAng) {\n        let policy = new RenderPolicy();\n        if (pixPerAng)\n            policy.data.pointScale = pixPerAng;\n        policy.data.foreground = 0xFFFFFF;\n        policy.data.background = 0x000000;\n        for (let n = 0; n <= 111; n++)\n            policy.data.atomCols[n] = 0xFFFFFF;\n        return policy;\n    }\n    static defaultColourOnWhite(pixPerAng) {\n        let policy = RenderPolicy.defaultBlackOnWhite(pixPerAng);\n        policy.data.atomCols[0] = 0x404040;\n        policy.data.atomCols[1] = 0x808080;\n        policy.data.atomCols[6] = 0x000000;\n        policy.data.atomCols[7] = 0x0000FF;\n        policy.data.atomCols[8] = 0xFF0000;\n        policy.data.atomCols[9] = 0xFF8080;\n        policy.data.atomCols[15] = 0xFF8000;\n        policy.data.atomCols[16] = 0x808000;\n        policy.data.atomCols[17] = 0x00C000;\n        policy.data.atomCols[35] = 0xC04000;\n        return policy;\n    }\n    static defaultColourOnBlack(pixPerAng) {\n        let policy = RenderPolicy.defaultWhiteOnBlack(pixPerAng);\n        policy.data.atomCols[0] = 0xA0A0A0;\n        policy.data.atomCols[1] = 0x808080;\n        policy.data.atomCols[6] = 0xFFFFFF;\n        policy.data.atomCols[7] = 0x4040FF;\n        policy.data.atomCols[8] = 0xFF4040;\n        policy.data.atomCols[9] = 0xFF8080;\n        policy.data.atomCols[15] = 0xFF8000;\n        policy.data.atomCols[16] = 0xFFFF00;\n        policy.data.atomCols[17] = 0x40FF40;\n        policy.data.atomCols[35] = 0xFF8040;\n        return policy;\n    }\n    static defaultPrintedPublication() {\n        let policy = RenderPolicy.defaultBlackOnWhite(9.6);\n        policy.data.resolutionDPI = 600;\n        policy.data.fontSize = 0.80;\n        policy.data.bondSep = 0.27;\n        policy.data.lineSize = 0.0625;\n        return policy;\n    }\n}\nexport class RenderEffects {\n    constructor() {\n        this.colAtom = {};\n        this.colBond = {};\n        this.dottedRectOutline = {};\n        this.dottedBondCross = {};\n        this.hideAtoms = new Set();\n        this.hideBonds = new Set();\n        this.atomFrameDotSz = [];\n        this.atomFrameCol = [];\n        this.atomCircleSz = [];\n        this.atomCircleCol = [];\n        this.atomDecoText = [];\n        this.atomDecoCol = [];\n        this.atomDecoSize = [];\n        this.bondDecoText = [];\n        this.bondDecoCol = [];\n        this.bondDecoSize = [];\n        this.overlapAtoms = [];\n    }\n}\nexport var RenderMnemonicType;\n(function (RenderMnemonicType) {\n    RenderMnemonicType[\"Atom\"] = \"A\";\n    RenderMnemonicType[\"Bond\"] = \"B\";\n    RenderMnemonicType[\"Artifact\"] = \"R\";\n    RenderMnemonicType[\"Effect\"] = \"E\";\n})(RenderMnemonicType || (RenderMnemonicType = {}));\nexport class RenderMnemonics {\n    constructor(encoded) {\n        this.items = [];\n        let lines = (encoded || '').split('&');\n        for (let line of lines) {\n            let bits = line.split('|');\n            if (bits.length != 3)\n                continue;\n            let item = {\n                type: bits[0],\n                details: bits[1],\n                coords: bits[2].split(',').map((str) => parseFloat(str)),\n            };\n            this.items.push(item);\n        }\n    }\n    append(type, details, coords) {\n        for (let n = details.length - 1; n >= 0; n--)\n            if (details[n] == '|' || details[n] == '&')\n                details = details.substring(0, n) + details.substring(n + 1);\n        this.items.push({ type, details, coords });\n    }\n    serialise() {\n        var _a;\n        let lines = [];\n        for (let item of this.items) {\n            let coords = ((_a = item.coords) !== null && _a !== void 0 ? _a : []).map((coord) => coord.toFixed(1)).join(',');\n            lines.push(`${item.type}|${item.details}|${coords}`);\n        }\n        return lines.join('&');\n    }\n    packWithCoords() { return this.serialise(); }\n    packWithoutCoords() {\n        return this.items.map((item) => `${item.type}|${item.details}`).join('&');\n    }\n}\n//# sourceMappingURL=Rendering.js.map","import { BondArtifact } from '../data/BondArtifact';\nimport { CoordUtil } from '../data/CoordUtil';\nimport { Molecule } from '../data/Molecule';\nimport { PolymerBlock, PolymerBlockConnectivity } from '../data/PolymerBlock';\nimport { QueryUtil } from '../data/QueryUtil';\nimport { FitRotatedEllipse } from '../util/FitRotatedEllipse';\nimport { Box, GeomUtil, Line, Oval, QuickHull } from '../util/Geom';\nimport { angleDiff, clone, DEGRAD, invZ, norm2_xy, norm_xy, RADDEG, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { FontData } from './FontData';\nimport { RenderEffects } from './Rendering';\nexport var BLineType;\n(function (BLineType) {\n    BLineType[BLineType[\"Normal\"] = 1] = \"Normal\";\n    BLineType[BLineType[\"Inclined\"] = 2] = \"Inclined\";\n    BLineType[BLineType[\"Declined\"] = 3] = \"Declined\";\n    BLineType[BLineType[\"Unknown\"] = 4] = \"Unknown\";\n    BLineType[BLineType[\"Dotted\"] = 5] = \"Dotted\";\n    BLineType[BLineType[\"DotDir\"] = 6] = \"DotDir\";\n    BLineType[BLineType[\"IncDouble\"] = 7] = \"IncDouble\";\n    BLineType[BLineType[\"IncTriple\"] = 8] = \"IncTriple\";\n    BLineType[BLineType[\"IncQuadruple\"] = 9] = \"IncQuadruple\";\n})(BLineType || (BLineType = {}));\nconst MINBOND_LINE = 0.25;\nconst MINBOND_EXOTIC = 0.5;\nexport class ArrangeMolecule {\n    static guestimateSize(mol, policy, maxW, maxH) {\n        let box = mol.boundary();\n        let minX = box.minX(), minY = box.minY(), maxX = box.maxX(), maxY = box.maxY();\n        let fontSize = policy.data.fontSize * this.FONT_CORRECT;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomExplicit(n)) {\n                let numsym = 0;\n                for (let ch of mol.atomElement(n))\n                    if (!'|{}^'.includes(ch))\n                        numsym++;\n                let plusH = mol.atomHydrogens(n) > 0 ? 1 : 0;\n                const aw = 0.5 * 0.7 * fontSize * (numsym + plusH);\n                const ah = 0.75 * fontSize * (1 + 0.2 * plusH);\n                const ax = mol.atomX(n), ay = mol.atomY(n);\n                minX = Math.min(minX, ax - aw);\n                maxX = Math.max(maxX, ax + aw);\n                minY = Math.min(minY, ay - ah);\n                maxY = Math.max(maxY, ay + ah);\n            }\n        let w = Math.max(1, (maxX - minX)) * policy.data.pointScale;\n        let h = Math.max(1, (maxY - minY)) * policy.data.pointScale;\n        if (maxW > 0 && w > maxW) {\n            h *= maxW / w;\n            w = maxW;\n        }\n        if (maxH > 0 && h > maxH) {\n            w *= maxH / h;\n            h = maxH;\n        }\n        return [w, h];\n    }\n    constructor(mol, measure, policy, effects = new RenderEffects()) {\n        this.mol = mol;\n        this.measure = measure;\n        this.policy = policy;\n        this.effects = effects;\n        this.points = [];\n        this.lines = [];\n        this.rings = [];\n        this.paths = [];\n        this.space = [];\n        this.wantArtifacts = true;\n        this.artifacts = null;\n        this.bondOrder = [];\n        this.atomCharge = [];\n        this.atomUnpaired = [];\n        this.artifactCharge = new Map();\n        this.artifactUnpaired = new Map();\n        this.artifactFract = new Map();\n    }\n    getMolecule() { return this.mol; }\n    getMeasure() { return this.measure; }\n    getPolicy() { return this.policy; }\n    getEffects() { return this.effects; }\n    getScale() { return this.scale; }\n    setWantArtifacts(want) { this.wantArtifacts = want; }\n    getArtifacts() { return this.artifacts; }\n    setArtifacts(artifacts) { this.artifacts = artifacts; }\n    arrange() {\n        const { mol, measure, policy, effects } = this;\n        this.scale = measure.scale();\n        this.bondSepPix = policy.data.bondSep * measure.scale();\n        this.lineSizePix = policy.data.lineSize * measure.scale();\n        this.fontSizePix = policy.data.fontSize * measure.scale() * ArrangeMolecule.FONT_CORRECT;\n        this.ymul = measure.yIsUp() ? -1 : 1;\n        let artmask = null;\n        if (this.wantArtifacts && this.artifacts == null) {\n            this.artifacts = new BondArtifact(mol);\n            artmask = Vec.booleanArray(false, mol.numAtoms);\n            for (let path of this.artifacts.getResPaths())\n                for (let a of path.atoms)\n                    artmask[a - 1] = true;\n            for (let ring of this.artifacts.getResRings())\n                for (let a of ring.atoms)\n                    artmask[a - 1] = true;\n            for (let arene of this.artifacts.getArenes()) {\n                artmask[arene.centre - 1] = true;\n                for (let a of arene.atoms)\n                    artmask[a - 1] = true;\n            }\n        }\n        this.setupBondOrders();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            if (mol.atomElement(n).length > 2 && mol.atomHydrogens(n) == 0) {\n                this.points.push(null);\n                this.space.push(null);\n                continue;\n            }\n            let a = {\n                anum: n,\n                text: mol.atomExplicit(n) || CoordUtil.atomIsWeirdLinear(mol, n) ? mol.atomElement(n) : null,\n                fsz: this.fontSizePix,\n                col: this.policy.data.atomCols[mol.atomicNumber(n)],\n                oval: new Oval(this.measure.angToX(mol.atomX(n)), this.measure.angToY(mol.atomY(n)), 0, 0)\n            };\n            let overCol = this.effects.colAtom[n];\n            if (overCol)\n                a.col = overCol;\n            if (artmask && artmask[n - 1] && mol.atomElement(n) == 'C')\n                a.text = null;\n            if (a.text != null) {\n                let wad = this.measure.measureText(a.text, a.fsz);\n                const PADDING = 1.1;\n                a.oval.rw = 0.5 * wad[0] * PADDING;\n                a.oval.rh = 0.5 * wad[1] * PADDING;\n            }\n            this.points.push(a);\n            this.space.push(this.computeSpacePoint(a));\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (this.points[n - 1] == null)\n                this.processLabel(n);\n        let bdbl = Vec.booleanArray(false, mol.numBonds);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let bt = mol.bondType(n), bo = this.bondOrder[n - 1];\n            if (bo < 0)\n                continue;\n            let col = this.effects.colBond[n];\n            if (!col)\n                col = this.policy.data.foreground;\n            bdbl[n - 1] = bo == 2 && (bt == Molecule.BONDTYPE_NORMAL || bt == Molecule.BONDTYPE_UNKNOWN);\n            let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n            let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n            if (Math.abs(x2 - x1) <= 1 && Math.abs(y2 - y1) <= 1) {\n                bdbl[n - 1] = false;\n                continue;\n            }\n            if (bdbl[n - 1])\n                continue;\n            let minDist = (bo == 1 && bt == Molecule.BONDTYPE_NORMAL ? MINBOND_LINE : MINBOND_EXOTIC) * measure.scale();\n            let xy1 = this.shrinkBond(x1, y1, x2, y2, this.backOffAtom(bfr, x1, y1, x2, y2, minDist));\n            let xy2 = this.shrinkBond(x2, y2, x1, y1, this.backOffAtom(bto, x2, y2, x1, y1, minDist));\n            this.ensureMinimumBondLength(xy1, xy2, x1, y1, x2, y2, minDist);\n            let sz = this.lineSizePix, head = 0;\n            let qbonds = QueryUtil.queryBondOrders(mol, n);\n            if (Vec.notBlank(qbonds)) {\n                Vec.sort(qbonds);\n                if (qbonds[0] == -1) {\n                    qbonds.splice(0, 1);\n                    qbonds.push(-1);\n                }\n                let qtxt = Vec.equals(qbonds, [0, 1, 2, 3, -1]) ? '?' : qbonds.map((o) => o == -1 ? 'A' : o.toString()).join('');\n                let oxy = this.orthogonalDelta(xy1[0], xy1[1], xy2[0], xy2[1], 1.3 * this.bondSepPix);\n                let v = -0.5;\n                for (let i = 0; i < 2; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    let b = {\n                        bnum: n,\n                        bfr,\n                        bto,\n                        type: BLineType.Dotted,\n                        line: new Line(lx1, ly1, lx2, ly2),\n                        size: 0.5 * sz,\n                        head,\n                        col: (col & 0xFFFFFF) | 0x80000000,\n                    };\n                    this.lines.push(b);\n                    this.space.push(this.computeSpaceLine(b));\n                }\n                let rotation = Math.atan2(xy2[1] - xy1[1], xy2[0] - xy1[0]) * RADDEG;\n                if (rotation < -90 || rotation > 90)\n                    rotation += 180;\n                let a = {\n                    anum: 0,\n                    text: qtxt,\n                    fsz: 0.35 * this.fontSizePix,\n                    col,\n                    oval: new Oval(0.5 * (xy1[0] + xy2[0]), 0.5 * (xy1[1] + xy2[1]), 0, 0),\n                    rotation\n                };\n                this.points.push(a);\n                this.space.push(this.computeSpacePoint(a));\n                continue;\n            }\n            let ltype = BLineType.Normal;\n            if (bo == 1 && bt == Molecule.BONDTYPE_INCLINED) {\n                ltype = BLineType.Inclined;\n                head = 0.15 * measure.scale();\n            }\n            else if (bo == 1 && bt == Molecule.BONDTYPE_DECLINED) {\n                ltype = BLineType.Declined;\n                head = 0.15 * measure.scale();\n            }\n            else if (bt == Molecule.BONDTYPE_UNKNOWN) {\n                ltype = BLineType.Unknown;\n                head = 0.2 * measure.scale();\n            }\n            else if (bo == 0) {\n                if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                    ltype = BLineType.DotDir;\n                else\n                    ltype = BLineType.Dotted;\n            }\n            else if ((bo == 2 || bo == 3 || bo == 4) && (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)) {\n                ltype = bo == 2 ? BLineType.IncDouble : bo == 3 ? BLineType.IncTriple : BLineType.IncQuadruple;\n                head = (bo == 2 ? 0.20 : 0.25) * measure.scale();\n            }\n            if (bo == 0) {\n                let dx = xy2[0] - xy1[0], dy = xy2[1] - xy1[1];\n                let d = norm_xy(dx, dy), invD = 1 / d;\n                let ox = 0.5 * dx * invD * this.bondSepPix, oy = 0.5 * dy * invD * this.bondSepPix;\n                if (mol.atomAdjCount(bfr) > 1) {\n                    xy1[0] += ox;\n                    xy1[1] += oy;\n                }\n                if (mol.atomAdjCount(bto) > 1) {\n                    xy2[0] -= ox;\n                    xy2[1] -= oy;\n                }\n            }\n            if (bo != 1 && bt == Molecule.BONDTYPE_DECLINED)\n                [xy1, xy2] = [xy2, xy1];\n            if (bo > 1 && (bt == Molecule.BONDTYPE_NORMAL || bt == Molecule.BONDTYPE_UNKNOWN)) {\n                let oxy = this.orthogonalDelta(xy1[0], xy1[1], xy2[0], xy2[1], this.bondSepPix);\n                let ext1 = 1, ext2 = 1;\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    ext1 = Math.min(ext1, this.backOffAtom(bfr, lx1, ly1, lx2, ly2, minDist));\n                }\n                xy1 = this.shrinkBond(xy1[0], xy1[1], xy2[0], xy2[1], ext1);\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    ext2 = Math.min(ext2, this.backOffAtom(bto, lx2, ly2, lx1, ly1, minDist));\n                }\n                xy2 = this.shrinkBond(xy2[0], xy2[1], xy1[0], xy1[1], ext2);\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    let b = {\n                        bnum: n,\n                        bfr,\n                        bto,\n                        type: ltype,\n                        line: new Line(lx1, ly1, lx2, ly2),\n                        size: sz,\n                        head,\n                        col\n                    };\n                    this.lines.push(b);\n                    this.space.push(this.computeSpaceLine(b));\n                }\n            }\n            else {\n                let b = {\n                    bnum: n,\n                    bfr,\n                    bto,\n                    type: ltype,\n                    line: new Line(xy1[0], xy1[1], xy2[0], xy2[1]),\n                    size: sz,\n                    head,\n                    col\n                };\n                this.lines.push(b);\n                this.space.push(this.computeSpaceLine(b));\n            }\n        }\n        let rings = this.orderedRingList();\n        for (let i = 0; i < rings.length; i++) {\n            for (let j = 0; j < rings[i].length; j++) {\n                let k = mol.findBond(rings[i][j], rings[i][j < rings[i].length - 1 ? j + 1 : 0]);\n                if (bdbl[k - 1]) {\n                    this.processDoubleBond(k, rings[i]);\n                    bdbl[k - 1] = false;\n                }\n            }\n        }\n        for (let i = 1; i <= mol.numBonds; i++)\n            if (bdbl[i - 1])\n                this.processDoubleBond(i, this.priorityDoubleSubstit(i));\n        let hcount = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            hcount[n - 1] = this.points[n - 1].text == null ? 0 : mol.atomHydrogens(n);\n        for (let n = 0; n < mol.numAtoms; n++)\n            if (hcount[n] > 0 && this.placeHydrogen(n, hcount[n], true))\n                hcount[n] = 0;\n        for (let n = 0; n < mol.numAtoms; n++)\n            if (hcount[n] > 0)\n                this.placeHydrogen(n, hcount[n], false);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) {\n                let isostr = mol.atomIsotope(n).toString();\n                let col = policy.data.atomCols[mol.atomicNumber(n)];\n                this.placeAdjunct(n, isostr, this.fontSizePix * 0.6, col, 150 * DEGRAD);\n            }\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let str = '';\n            let chg = this.atomCharge[n - 1];\n            if (chg == -1)\n                str = '-';\n            else if (chg == 1)\n                str = '+';\n            else if (chg < -1)\n                str = Math.abs(chg) + '-';\n            else if (chg > 1)\n                str = chg + '+';\n            for (let i = this.atomUnpaired[n - 1]; i > 0; i--)\n                str += '.';\n            if (str.length == 0)\n                continue;\n            let col = policy.data.atomCols[mol.atomicNumber(n)];\n            this.placeAdjunct(n, str, str.length == 1 ? 0.8 * this.fontSizePix : 0.6 * this.fontSizePix, col, 30 * DEGRAD);\n        }\n        for (let n = 0; n < effects.atomDecoText.length; n++) {\n            let txt = effects.atomDecoText[n];\n            if (!txt)\n                continue;\n            this.annotateAtom(n + 1, txt, effects.atomDecoCol[n], effects.atomDecoSize[n] * this.scale * ArrangeMolecule.FONT_CORRECT);\n        }\n        for (let n = 0; n < effects.bondDecoText.length; n++) {\n            let txt = effects.bondDecoText[n];\n            if (!txt)\n                continue;\n            this.annotateBond(n + 1, txt, effects.bondDecoCol[n], effects.bondDecoSize[n] * this.scale * ArrangeMolecule.FONT_CORRECT);\n        }\n        for (let n = 0; n < Math.min(effects.atomCircleSz.length, mol.numAtoms); n++)\n            if (effects.atomCircleSz[n] > 0) {\n                let dw = effects.atomCircleSz[n] * this.scale;\n                let a = this.points[n];\n                let box = new Box(a.oval.cx - dw, a.oval.cy - dw, 2 * dw, 2 * dw);\n                let spc = {\n                    anum: 0,\n                    bnum: 0,\n                    box,\n                    px: [box.minX(), box.maxX(), box.maxX(), box.minX()],\n                    py: [box.minY(), box.minY(), box.maxY(), box.maxY()]\n                };\n                this.space.push(spc);\n            }\n        if (this.artifacts != null) {\n            for (let path of this.artifacts.getResPaths()) {\n                this.createCurvedPath(path.atoms, this.artifactFract.get(path), 0);\n                this.delocalisedAnnotation(path.atoms, this.artifactCharge.get(path), this.artifactUnpaired.get(path));\n            }\n            for (let ring of this.artifacts.getResRings()) {\n                this.createCircularRing(ring.atoms);\n                this.delocalisedAnnotation(ring.atoms, this.artifactCharge.get(ring), this.artifactUnpaired.get(ring));\n            }\n            for (let arene of this.artifacts.getArenes()) {\n                let isRing = arene.atoms.length > 2;\n                if (isRing)\n                    for (let n = 0; n < arene.atoms.length; n++) {\n                        let nn = n < arene.atoms.length - 1 ? n + 1 : 0;\n                        if (mol.findBond(arene.atoms[n], arene.atoms[nn]) == 0) {\n                            isRing = false;\n                            break;\n                        }\n                    }\n                let alkeneLike = arene.atoms.length == 2;\n                this.createBondCentroid(arene.centre, arene.atoms);\n                if (!alkeneLike) {\n                    if (isRing)\n                        this.createCircularRing(arene.atoms);\n                    else\n                        this.createCurvedPath(arene.atoms, false, arene.centre);\n                }\n                this.delocalisedAnnotation(arene.atoms, this.artifactCharge.get(arene), this.artifactUnpaired.get(arene));\n            }\n        }\n        let polymers = new PolymerBlock(mol);\n        for (let id of polymers.getIDList())\n            this.processPolymerUnit(polymers.getUnit(id), polymers.getUnits());\n    }\n    numPoints() { return this.points.length; }\n    getPoint(idx) { return this.points[idx]; }\n    getPoints() { return this.points; }\n    numLines() { return this.lines.length; }\n    getLine(idx) { return this.lines[idx]; }\n    getLines() { return this.lines; }\n    numRings() { return this.rings.length; }\n    getRing(idx) { return this.rings[idx]; }\n    getRings() { return this.rings; }\n    numPaths() { return this.paths.length; }\n    getPath(idx) { return this.paths[idx]; }\n    getPaths() { return this.paths; }\n    numSpace() { return this.space.length; }\n    getSpace(idx) { return this.space[idx]; }\n    getSpaces() { return this.space; }\n    offsetEverything(dx, dy) {\n        for (let a of this.points)\n            a.oval.offsetBy(dx, dy);\n        for (let b of this.lines)\n            b.line.offsetBy(dx, dy);\n        for (let r of this.rings) {\n            r.cx += dx;\n            r.cy += dy;\n        }\n        for (let p of this.paths) {\n            Vec.addTo(p.px, dx);\n            Vec.addTo(p.py, dy);\n        }\n        for (let spc of this.space) {\n            spc.box.offsetBy(dx, dy);\n            Vec.addTo(spc.px, dx);\n            Vec.addTo(spc.py, dy);\n        }\n    }\n    offsetOrigin() {\n        let bounds = this.determineBoundary();\n        if (bounds[0] != 0 || bounds[1] != 0)\n            this.offsetEverything(-bounds[0], -bounds[1]);\n    }\n    scaleEverything(scaleBy) {\n        if (scaleBy == 1)\n            return;\n        this.scale *= scaleBy;\n        for (let a of this.points) {\n            a.oval.scaleBy(scaleBy);\n            a.fsz *= scaleBy;\n        }\n        for (let b of this.lines) {\n            b.line.scaleBy(scaleBy);\n            b.size *= scaleBy;\n            b.head *= scaleBy;\n        }\n        for (let r of this.rings) {\n            r.cx *= scaleBy;\n            r.cy *= scaleBy;\n            r.rw *= scaleBy;\n            r.rh *= scaleBy;\n            r.size *= scaleBy;\n        }\n        for (let p of this.paths) {\n            Vec.mulBy(p.px, scaleBy);\n            Vec.mulBy(p.py, scaleBy);\n            p.size *= scaleBy;\n        }\n        for (let spc of this.space) {\n            spc.box.scaleBy(scaleBy);\n            Vec.mulBy(spc.px, scaleBy);\n            Vec.mulBy(spc.py, scaleBy);\n        }\n    }\n    determineBoundary(padding) {\n        if (padding == null)\n            padding = 0;\n        if (this.space.length == 0)\n            return [0, 0, 2 * padding, 2 * padding];\n        let bounds = Vec.numberArray(0, 4);\n        let spc = this.space[0];\n        bounds[0] = spc.box.x;\n        bounds[1] = spc.box.y;\n        bounds[2] = spc.box.x + spc.box.w;\n        bounds[3] = spc.box.y + spc.box.h;\n        for (let n = this.space.length - 1; n > 0; n--) {\n            spc = this.space[n];\n            bounds[0] = Math.min(bounds[0], spc.box.x);\n            bounds[1] = Math.min(bounds[1], spc.box.y);\n            bounds[2] = Math.max(bounds[2], spc.box.x + spc.box.w);\n            bounds[3] = Math.max(bounds[3], spc.box.y + spc.box.h);\n        }\n        return bounds;\n    }\n    determineBoundaryBox() {\n        let [x1, y1, x2, y2] = this.determineBoundary();\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    squeezeInto(x, y, w, h, padding) {\n        if (padding != null && padding > 0) {\n            x += padding;\n            y += padding;\n            w -= 2 * padding;\n            h -= 2 * padding;\n        }\n        let bounds = this.determineBoundary(0);\n        let bw = bounds[2] - bounds[0], bh = bounds[3] - bounds[1];\n        if (bw > w || bh > h) {\n            let downScale = 1;\n            if (bw > w)\n                downScale = w / bw;\n            if (bh > h)\n                downScale = Math.min(downScale, h / bh);\n            this.scaleEverything(downScale);\n            Vec.mulBy(bounds, downScale);\n        }\n        this.offsetEverything(x - bounds[0] + 0.5 * (w - bounds[2] + bounds[0]), y - bounds[1] + 0.5 * (h - bounds[3] + bounds[1]));\n    }\n    limitBounds(w, h) {\n        let bounds = this.determineBoundary(0);\n        if (bounds[0] == bounds[2] && bounds[1] == bounds[3])\n            return;\n        let scale = Math.min(1, Math.min(w / (bounds[2] - bounds[0]), h / (bounds[3] - bounds[1])));\n        this.offsetEverything(-bounds[0], -bounds[1]);\n        this.scaleEverything(scale);\n    }\n    monochromate(col) {\n        for (let a of this.points)\n            a.col = col;\n        for (let b of this.lines)\n            b.col = col;\n    }\n    spatialCongestion(x, y, thresh) {\n        if (thresh == null)\n            thresh = 0.001;\n        let congest = 0;\n        for (let n = 0; n < this.points.length; n++) {\n            let a = this.points[n];\n            if (a == null)\n                continue;\n            let dx = a.oval.cx - x, dy = a.oval.cy - y;\n            congest += 1 / (dx * dx + dy * dy + thresh);\n        }\n        return congest;\n    }\n    clone() {\n        let dup = new ArrangeMolecule(this.mol, this.measure, this.policy, this.effects);\n        dup.scale = this.scale;\n        dup.bondSepPix = this.bondSepPix;\n        dup.lineSizePix = this.lineSizePix;\n        dup.fontSizePix = this.fontSizePix;\n        dup.ymul = this.ymul;\n        for (let a of this.points)\n            dup.points.push(clone(a));\n        for (let b of this.lines)\n            dup.lines.push(clone(b));\n        for (let s of this.space)\n            dup.space.push(clone(s));\n        return dup;\n    }\n    setupBondOrders() {\n        const mol = this.mol;\n        for (let n = 0; n < mol.numBonds; n++)\n            this.bondOrder[n] = mol.bondOrder(n + 1);\n        for (let n = 0; n < mol.numAtoms; n++) {\n            this.atomCharge[n] = mol.atomCharge(n + 1);\n            this.atomUnpaired[n] = mol.atomUnpaired(n + 1);\n        }\n        let delocalise = (obj, atoms) => {\n            let charge = 0, unpaired = 0;\n            for (let a of atoms) {\n                charge += this.atomCharge[a - 1];\n                unpaired += this.atomUnpaired[a - 1];\n                this.atomCharge[a - 1] = this.atomUnpaired[a - 1] = 0;\n            }\n            this.artifactCharge.set(obj, charge);\n            this.artifactUnpaired.set(obj, unpaired);\n            for (let a1 of atoms)\n                for (let a2 of mol.atomAdjList(a1))\n                    if (!atoms.includes(a2)) {\n                        let b = mol.findBond(a1, a2);\n                        if (this.bondOrder[b - 1] >= 0)\n                            this.bondOrder[b - 1] = 1;\n                    }\n        };\n        if (this.artifacts == null)\n            return;\n        for (let path of this.artifacts.getResPaths()) {\n            let charge = 0, unpaired = 0, orders = 0;\n            for (let n = 0; n < path.atoms.length; n++) {\n                charge += mol.atomCharge(path.atoms[n]);\n                unpaired += mol.atomUnpaired(path.atoms[n]);\n                let b = mol.findBond(path.atoms[n], path.atoms[n < path.atoms.length - 1 ? n + 1 : 0]);\n                if (b > 0)\n                    orders += mol.bondOrder(b);\n            }\n            let fractional = (2 * orders - charge + unpaired) / path.atoms.length < 1;\n            this.artifactFract.set(path, fractional);\n            for (let n = 0; n < path.atoms.length - 1; n++) {\n                let b = mol.findBond(path.atoms[n], path.atoms[n + 1]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = fractional ? -1 : 1;\n            }\n            delocalise(path, path.atoms);\n        }\n        for (let ring of this.artifacts.getResRings()) {\n            for (let n = 0; n < ring.atoms.length; n++) {\n                let b = mol.findBond(ring.atoms[n], ring.atoms[n < ring.atoms.length - 1 ? n + 1 : 0]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = 1;\n            }\n            delocalise(ring, ring.atoms);\n        }\n        for (let arene of this.artifacts.getArenes()) {\n            let alkeneLike = arene.atoms.length == 2;\n            for (let n = 0; n < arene.atoms.length; n++) {\n                if (!alkeneLike) {\n                    let b = mol.findBond(arene.atoms[n], arene.atoms[n < arene.atoms.length - 1 ? n + 1 : 0]);\n                    if (b > 0)\n                        this.bondOrder[b - 1] = 1;\n                }\n                let b = mol.findBond(arene.centre, arene.atoms[n]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = -1;\n            }\n            delocalise(arene, arene.atoms);\n        }\n    }\n    placeAdjunct(atom, str, fsz, col, angdir) {\n        let wad = this.measure.measureText(str, fsz);\n        let a = this.points[atom - 1];\n        let cx = a.oval.cx, cy = a.oval.cy, rw = 0.55 * wad[0], rh = 0.55 * wad[1];\n        if (str == '..') {\n            let zeroBonds = this.mol.atomAdjBonds(atom).filter((b) => this.mol.bondOrder(b) == 0);\n            if (zeroBonds.length == 1) {\n                let zpt = this.getPoint(this.mol.bondOther(zeroBonds[0], atom) - 1);\n                let dx = zpt.oval.cx - cx, dy = zpt.oval.cy - cy, inv = 1 / norm_xy(dx, dy);\n                let r = fsz * 0.15;\n                let ox = dy * inv * 2.5 * r, oy = -dx * inv * 2.5 * r;\n                let ext = 1.2 * (rw + rh) * inv;\n                [dx, dy] = [dx * ext, dy * ext];\n                this.points.push({ anum: 0, text: '.', fsz, col, oval: new Oval(cx + dx + ox, cy + dy + oy, r, r) });\n                this.points.push({ anum: 0, text: '.', fsz, col, oval: new Oval(cx + dx - ox, cy + dy - oy, r, r) });\n                return;\n            }\n        }\n        let bestScore = 0, bestDX = 0, bestDY = 0;\n        let px = Vec.numberArray(0, 4), py = Vec.numberArray(0, 4);\n        let angThresh = 10;\n        let shorted = false;\n        for (let ext = 0.5 * (a.oval.rw + a.oval.rh); !shorted && ext < 1.5 * this.measure.scale(); ext += 0.1 * this.measure.scale()) {\n            const DELTA = 5 * DEGRAD;\n            for (let d = 0; !shorted && d < Math.PI - 0.0001; d += DELTA)\n                for (let s = -1; s <= 1; s += 2) {\n                    let dang = d * s + (s > 0 ? DELTA : 0), ang = angdir + dang;\n                    let dx = ext * Math.cos(ang), dy = ext * Math.sin(ang) * -this.ymul;\n                    let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                    px[0] = x1;\n                    py[0] = y1;\n                    px[1] = x2;\n                    py[1] = y1;\n                    px[2] = x2;\n                    py[2] = y2;\n                    px[3] = x1;\n                    py[3] = y2;\n                    let viol = this.countPolyViolations(px, py, null, false);\n                    let score = 10 * viol + Math.abs(dang) + 10 * ext;\n                    let shortCircuit = viol == 0 && Math.abs(dang) < (angThresh + 1) * DEGRAD;\n                    if (bestScore == 0 || shortCircuit || score < bestScore) {\n                        bestScore = score;\n                        bestDX = dx;\n                        bestDY = dy;\n                    }\n                    if (shortCircuit) {\n                        shorted = true;\n                        break;\n                    }\n                }\n            angThresh += 5;\n        }\n        a =\n            {\n                anum: 0,\n                text: str,\n                fsz,\n                col,\n                oval: new Oval(cx + bestDX, cy + bestDY, rw, rh)\n            };\n        this.points.push(a);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(a.oval.cx - rw, a.oval.cy - rh, 2 * rw, 2 * rh),\n            px: [a.oval.cx - rw, a.oval.cx + rw, a.oval.cx + rw, a.oval.cx - rw],\n            py: [a.oval.cy - rh, a.oval.cy - rh, a.oval.cy + rh, a.oval.cy + rh]\n        };\n        this.space.push(spc);\n    }\n    processLabel(anum) {\n        let ax = this.mol.atomX(anum), ay = this.mol.atomY(anum);\n        let left = 0, right = 0;\n        let adj = this.mol.atomAdjList(anum);\n        for (let n = 0; n < adj.length; n++) {\n            let theta = Math.atan2(this.mol.atomY(adj[n]) - ay, this.mol.atomX(adj[n]) - ax) * RADDEG;\n            if (theta >= -15 && theta <= 15)\n                right += 3;\n            else if (theta >= -85 && theta <= 85)\n                right++;\n            else if (theta > 85 && theta < 95) { }\n            else if (theta < -85 && theta > -95) { }\n            else if (theta > 165 || theta < -165)\n                left += 3;\n            else\n                left++;\n        }\n        let label = this.mol.atomElement(anum);\n        let ibar = label.indexOf('|'), ibrace = label.indexOf('{');\n        let side = 0;\n        if (left == 0 && right == 0 && ibar < 0 && ibrace < 0) { }\n        else if (left < right)\n            side = -1;\n        else if (right < left)\n            side = 1;\n        else {\n            let score1 = CoordUtil.congestionPoint(this.mol, ax - 1, ay);\n            let score2 = CoordUtil.congestionPoint(this.mol, ax + 1, ay);\n            if (score1 < 0.5 * score2)\n                side = -1;\n            else\n                side = 1;\n        }\n        let chunks = null;\n        let position = null;\n        let primary = null;\n        let refchunk = 0;\n        if (ibar < 0 && ibrace < 0) {\n            if (side == 0)\n                chunks = [label];\n            else if (side < 0) {\n                chunks = [label.substring(0, label.length - 1), label.substring(label.length - 1)];\n                refchunk = 1;\n            }\n            else\n                chunks = [label.substring(0, 1), label.substring(1)];\n        }\n        else {\n            let bits = [];\n            let bpos = [];\n            let bpri = [];\n            let blocks = label.split('|');\n            if (side < 0)\n                blocks = Vec.reverse(blocks);\n            let buff = '';\n            for (let i = 0; i < blocks.length; i++) {\n                let isPrimary = (side >= 0 && i == 0) || (side < 0 && i == blocks.length - 1);\n                if (side < 0 && refchunk == 0 && i == blocks.length - 1)\n                    refchunk = bits.length;\n                let pos = 0;\n                buff = '';\n                for (let j = 0; j < blocks[i].length; j++) {\n                    let ch = blocks[i].charAt(j);\n                    if (ch == '{' || ch == '}') {\n                        if (buff.length > 0) {\n                            bits.push(buff.toString());\n                            bpos.push(pos);\n                            bpri.push(isPrimary);\n                        }\n                        buff = '';\n                        pos = ch == '{' ? -1 : 0;\n                    }\n                    else if (ch == '^' && pos == -1 && buff.length == 0)\n                        pos = 1;\n                    else\n                        buff += ch;\n                }\n                if (buff.length > 0) {\n                    bits.push(buff.toString());\n                    bpos.push(pos);\n                    bpri.push(isPrimary);\n                }\n            }\n            chunks = bits;\n            position = bpos;\n            primary = bpri;\n            while (refchunk < chunks.length - 1 && position[refchunk] != 0)\n                refchunk++;\n        }\n        let PADDING = 1.1;\n        let SSFRACT = 0.6;\n        let chunkw = Vec.numberArray(0, chunks.length);\n        let tw = 0;\n        for (let n = 0; n < chunks.length; n++) {\n            chunkw[n] = this.measure.measureText(chunks[n], this.fontSizePix)[0];\n            if (position != null && position[n] != 0)\n                chunkw[n] *= SSFRACT;\n            tw += chunkw[n];\n        }\n        let x = this.measure.angToX(ax), y = this.measure.angToY(ay);\n        for (let n = 0; n < refchunk; n++)\n            x -= chunkw[n];\n        x -= 0.5 * chunkw[refchunk];\n        for (let n = 0; n < chunks.length; n++) {\n            let a = {\n                anum: (n == refchunk || (primary != null && primary[n])) ? anum : 0,\n                text: chunks[n],\n                fsz: this.fontSizePix,\n                col: this.policy.data.atomCols[this.mol.atomicNumber(anum)],\n                oval: new Oval(x + 0.5 * chunkw[n], y, 0.5 * chunkw[n] * PADDING, 0.5 * this.fontSizePix * PADDING)\n            };\n            if (position != null && position[n] != 0) {\n                a.fsz *= SSFRACT;\n                if (position[n] < 0)\n                    a.oval.cy += a.fsz * 0.7 * (this.measure.yIsUp() ? -1 : 1);\n                else\n                    a.oval.cy -= a.fsz * 0.3 * (this.measure.yIsUp() ? -1 : 1);\n            }\n            if (n == refchunk) {\n                this.points[anum - 1] = a;\n                this.space[anum - 1] = this.computeSpacePoint(a);\n            }\n            else {\n                this.points.push(a);\n                this.space.push(this.computeSpacePoint(a));\n            }\n            x += chunkw[n];\n        }\n    }\n    backOffAtom(atom, x, y, fx, fy, minDist) {\n        if (x == fx && y == fy)\n            return 1;\n        let dx = x - fx, dy = y - fy, dist = norm_xy(dx, dy), inv = 1.0 / dist;\n        const bump = 0.1 * this.measure.scale();\n        let xbump = x + 2 * bump * dx * inv, ybump = y + 2 * bump * dy * inv;\n        let ext = dist;\n        let active = false;\n        for (let spc of this.space)\n            if (spc.anum == atom) {\n                const sz = spc.px.length;\n                if (sz == 0)\n                    continue;\n                for (let n = 0; n < sz; n++) {\n                    let nn = n < sz - 1 ? n + 1 : 0;\n                    let x1 = spc.px[n], y1 = spc.py[n], x2 = spc.px[nn], y2 = spc.py[nn];\n                    if (!GeomUtil.doLineSegsIntersect(xbump, ybump, fx, fy, x1, y1, x2, y2))\n                        continue;\n                    let xy = GeomUtil.lineIntersect(x, y, fx, fy, x1, y1, x2, y2);\n                    active = true;\n                    ext = Math.min(ext, norm_xy(xy[0] - fx, xy[1] - fy));\n                }\n            }\n        if (active) {\n            ext = Math.max(minDist, ext - bump);\n            return ext / dist;\n        }\n        else\n            return 1;\n    }\n    backOffAtomDelta(atom, x, y, fx, fy, minDist) {\n        let ext = this.backOffAtom(atom, x, y, fx, fy, minDist);\n        if (ext >= 1)\n            return null;\n        ext = 1 - ext;\n        let dx = (fx - x) * ext, dy = (fy - y) * ext;\n        return [norm2_xy(dx, dy), dx, dy];\n    }\n    shrinkBond(x, y, fx, fy, ext) {\n        if (ext == 1)\n            return [x, y];\n        let dx = x - fx, dy = y - fy;\n        return [fx + ext * dx, fy + ext * dy];\n    }\n    ensureMinimumBondLength(xy1, xy2, x1, y1, x2, y2, minDist) {\n        let dx = xy2[0] - xy1[0], dy = xy2[1] - xy1[1];\n        let dsq = norm2_xy(dx, dy);\n        minDist = Math.min(minDist, norm_xy(x2 - x1, y2 - y1));\n        if (dsq >= sqr(minDist - 0.0001))\n            return;\n        let d12 = Math.sqrt(dsq), d1 = norm_xy(xy1[0] - x1, xy1[1] - y1), d2 = norm_xy(x2 - xy2[0], y2 - xy2[1]);\n        let mag = 1 - minDist / d12, invD12 = 1.0 / (d1 + d2), mag1 = d1 * mag * invD12, mag2 = d2 * mag * invD12;\n        xy1[0] -= dx * mag1;\n        xy1[1] -= dy * mag1;\n        xy2[0] += dx * mag2;\n        xy2[1] += dy * mag2;\n    }\n    orderedRingList() {\n        let rings = [];\n        let SIZE_ORDER = [6, 5, 7, 4, 3];\n        for (let i = 0; i < SIZE_ORDER.length; i++) {\n            let nring = this.mol.findRingsOfSize(SIZE_ORDER[i]);\n            for (let j = 0; j < nring.length; j++)\n                rings.push(nring[j]);\n        }\n        let ringsz = rings.length;\n        let ringbusy = Vec.numberArray(0, this.mol.numAtoms);\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[n];\n            for (let i = 0; i < r.length; i++)\n                ringbusy[r[i] - 1]++;\n        }\n        let ringscore = Vec.numberArray(0, ringsz);\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[n];\n            for (let i = 0; i < r.length; i++)\n                ringscore[n] += ringbusy[r[i] - 1];\n        }\n        let ringorder = Vec.idxSort(ringscore);\n        let resbcount = Vec.numberArray(0, ringsz), maxbcount = 0;\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[ringorder[n]];\n            for (let i = 0; i < r.length; i++) {\n                let j = this.mol.findBond(r[i], r[i + 1 < r.length ? i + 1 : 0]);\n                if (this.mol.bondOrder(j) == 2)\n                    resbcount[n]++;\n            }\n            maxbcount = Math.max(maxbcount, resbcount[n]);\n        }\n        let pos = 0, ret = [];\n        for (let sz = maxbcount; sz >= 0; sz--) {\n            for (let n = 0; n < ringsz; n++)\n                if (resbcount[n] == sz)\n                    ret.push(rings[ringorder[n]]);\n        }\n        return ret;\n    }\n    orthogonalDelta(x1, y1, x2, y2, d) {\n        let ox = y1 - y2, oy = x2 - x1, dsq = norm2_xy(ox, oy);\n        let sc = dsq > 0 ? d / Math.sqrt(dsq) : 1;\n        return [ox * sc, oy * sc];\n    }\n    processDoubleBond(idx, priority) {\n        let bfr = this.mol.bondFrom(idx), bto = this.mol.bondTo(idx);\n        let nfr = this.mol.atomAdjList(bfr), nto = this.mol.atomAdjList(bto);\n        let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n        let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n        let oxy = this.orthogonalDelta(x1, y1, x2, y2, this.bondSepPix);\n        const minDist = MINBOND_EXOTIC * this.measure.scale();\n        let dx = x2 - x1, dy = y2 - y1, btheta = Math.atan2(dy, dx);\n        let countFLeft = 0, countFRight = 0, countTLeft = 0, countTRight = 0;\n        let idxFLeft = 0, idxFRight = 0, idxTLeft = 0, idxTRight = 0;\n        let noshift = false;\n        for (let n = 0; n < nfr.length; n++)\n            if (nfr[n] != bto) {\n                let bo = this.mol.bondOrder(this.mol.findBond(bfr, nfr[n]));\n                if (bo == 0)\n                    continue;\n                if (bo > 1) {\n                    noshift = true;\n                    break;\n                }\n                let ispri = false;\n                for (let i = 0; i < (priority == null ? 0 : priority.length); i++)\n                    if (priority[i] == nfr[n])\n                        ispri = true;\n                let theta = angleDiff(Math.atan2(this.points[nfr[n] - 1].oval.cy - y1, this.points[nfr[n] - 1].oval.cx - x1), btheta);\n                if (Math.abs(theta) * RADDEG > 175) {\n                    noshift = true;\n                    break;\n                }\n                if (theta > 0) {\n                    if (ispri)\n                        countFLeft++;\n                    idxFLeft = nfr[n];\n                }\n                else {\n                    if (ispri)\n                        countFRight++;\n                    idxFRight = nfr[n];\n                }\n            }\n        for (let n = 0; n < nto.length; n++)\n            if (nto[n] != bfr) {\n                let bo = this.mol.bondOrder(this.mol.findBond(bto, nto[n]));\n                if (bo == 0)\n                    continue;\n                if (bo > 1) {\n                    noshift = true;\n                    break;\n                }\n                let ispri = false;\n                for (let i = 0; i < (priority == null ? 0 : priority.length); i++)\n                    if (priority[i] == nto[n])\n                        ispri = true;\n                let theta = angleDiff(Math.atan2(this.points[nto[n] - 1].oval.cy - y2, this.points[nto[n] - 1].oval.cx - x2), btheta);\n                if (Math.abs(theta) * RADDEG > 175) {\n                    noshift = true;\n                    break;\n                }\n                if (theta > 0) {\n                    if (ispri)\n                        countTLeft++;\n                    idxTLeft = nto[n];\n                }\n                else {\n                    if (ispri)\n                        countTRight++;\n                    idxTRight = nto[n];\n                }\n            }\n        let side = 0;\n        if (noshift || countFLeft > 1 || countFRight > 1 || countTLeft > 1 || countTRight > 1) { }\n        else if (countFLeft > 0 && countFRight > 0) { }\n        else if (countTLeft > 0 && countTRight > 0) { }\n        else if (countFLeft > 0 || countTLeft > 0)\n            side = 1;\n        else if (countFRight > 0 || countTRight > 0)\n            side = -1;\n        let sz = this.lineSizePix;\n        let ax1 = x1, ay1 = y1, ax2 = x2, ay2 = y2;\n        let bx1 = 0, by1 = 0, bx2 = 0, by2 = 0;\n        if (side == 0) {\n            ax1 = x1 + 0.5 * oxy[0];\n            ay1 = y1 + 0.5 * oxy[1];\n            ax2 = x2 + 0.5 * oxy[0];\n            ay2 = y2 + 0.5 * oxy[1];\n            bx1 = x1 - 0.5 * oxy[0];\n            by1 = y1 - 0.5 * oxy[1];\n            bx2 = x2 - 0.5 * oxy[0];\n            by2 = y2 - 0.5 * oxy[1];\n        }\n        else if (side > 0) {\n            bx1 = x1 + oxy[0];\n            by1 = y1 + oxy[1];\n            bx2 = x2 + oxy[0];\n            by2 = y2 + oxy[1];\n            if (nfr.length > 1 && this.points[bfr - 1].text == null) {\n                bx1 += oxy[1];\n                by1 -= oxy[0];\n            }\n            if (nto.length > 1 && this.points[bto - 1].text == null) {\n                bx2 -= oxy[1];\n                by2 += oxy[0];\n            }\n        }\n        else if (side < 0) {\n            bx1 = x1 - oxy[0];\n            by1 = y1 - oxy[1];\n            bx2 = x2 - oxy[0];\n            by2 = y2 - oxy[1];\n            if (nfr.length > 1 && this.points[bfr - 1].text == null) {\n                bx1 += oxy[1];\n                by1 -= oxy[0];\n            }\n            if (nto.length > 1 && this.points[bto - 1].text == null) {\n                bx2 -= oxy[1];\n                by2 += oxy[0];\n            }\n        }\n        if (side != 0) {\n            if (this.mol.atomElement(bfr).length <= 2 && this.mol.atomAdjCount(bfr) == 1 && this.points[bfr - 1].text != null) {\n                this.bumpAtomPosition(bfr, 0.5 * oxy[0] * side, 0.5 * oxy[1] * side);\n            }\n            if (this.mol.atomElement(bto).length <= 2 && this.mol.atomAdjCount(bto) == 1 && this.points[bto - 1].text != null) {\n                this.bumpAtomPosition(bto, 0.5 * oxy[0] * side, 0.5 * oxy[1] * side);\n            }\n        }\n        let delta1 = this.backOffAtomDelta(bfr, ax1, ay1, ax2, ay2, minDist), delta2 = this.backOffAtomDelta(bfr, bx1, by1, bx2, by2, minDist);\n        if (delta1 != null || delta2 != null) {\n            let delta = (delta1 == null ? 0 : delta1[0]) > (delta2 == null ? 0 : delta2[0]) ? delta1 : delta2;\n            ax1 += delta[1];\n            ay1 += delta[2];\n            bx1 += delta[1];\n            by1 += delta[2];\n        }\n        let delta3 = this.backOffAtomDelta(bto, ax2, ay2, ax1, ay1, minDist), delta4 = this.backOffAtomDelta(bto, bx2, by2, bx1, by1, minDist);\n        if (delta3 != null || delta4 != null) {\n            let delta = (delta3 == null ? 0 : delta3[0]) > (delta4 == null ? 0 : delta4[0]) ? delta3 : delta4;\n            ax2 += delta[1];\n            ay2 += delta[2];\n            bx2 += delta[1];\n            by2 += delta[2];\n        }\n        if (side == 0 && !noshift) {\n            let xy = null;\n            if (this.points[bfr - 1].text == null && !this.mol.bondInRing(idx)) {\n                xy = this.adjustBondPosition(idxFLeft, bfr, ax1, ay1, ax2, ay2);\n                if (xy != null) {\n                    ax1 = xy[0];\n                    ay1 = xy[1];\n                }\n                xy = this.adjustBondPosition(idxFRight, bfr, bx1, by1, bx2, by2);\n                if (xy != null) {\n                    bx1 = xy[0];\n                    by1 = xy[1];\n                }\n            }\n            if (this.points[bto - 1].text == null && !this.mol.bondInRing(idx)) {\n                xy = this.adjustBondPosition(idxTLeft, bto, ax2, ay2, ax1, ay1);\n                if (xy != null) {\n                    ax2 = xy[0];\n                    ay2 = xy[1];\n                }\n                xy = this.adjustBondPosition(idxTRight, bto, bx2, by2, bx1, by1);\n                if (xy != null) {\n                    bx2 = xy[0];\n                    by2 = xy[1];\n                }\n            }\n        }\n        let lt = this.mol.bondType(idx) == Molecule.BONDTYPE_UNKNOWN ? BLineType.Unknown : BLineType.Normal;\n        let head = lt == BLineType.Unknown ? 0.1 * this.scale : 0;\n        let col = this.effects.colBond[idx];\n        if (!col)\n            col = this.policy.data.foreground;\n        let b1 = {\n            bnum: idx,\n            bfr,\n            bto,\n            type: lt,\n            line: new Line(ax1, ay1, ax2, ay2),\n            size: sz,\n            head,\n            col\n        };\n        let b2 = {\n            bnum: idx,\n            bfr,\n            bto,\n            type: lt,\n            line: new Line(bx1, by1, bx2, by2),\n            size: sz,\n            head,\n            col\n        };\n        this.lines.push(b1);\n        this.lines.push(b2);\n        this.space.push(this.computeSpaceLine(b1));\n        this.space.push(this.computeSpaceLine(b2));\n    }\n    placeHydrogen(idx, hcount, fussy) {\n        let font = FontData.main;\n        const SSFRACT = 0.6;\n        const GLYPH_H = font.getIndex('H');\n        let a = this.points[idx];\n        let emscale = a.fsz * font.INV_UNITS_PER_EM;\n        let sub = hcount >= 2 ? hcount.toString() : '';\n        let outlineX = font.getOutlineX(GLYPH_H), outlineY = font.getOutlineY(GLYPH_H);\n        let firstEMW = font.HORIZ_ADV_X[GLYPH_H], emw = firstEMW;\n        for (let n = 0; n < sub.length; n++) {\n            let ch = sub.charAt(n), g = font.getIndex(ch);\n            if (n == 0) {\n                emw += font.getKerning('H', ch);\n            }\n            else {\n                let chp = sub.charAt(n - 1);\n                emw += font.getKerning(chp, ch) * SSFRACT;\n            }\n            let extraX = font.getOutlineX(g), extraY = font.getOutlineY(g);\n            Vec.addTo(extraX, emw / SSFRACT);\n            Vec.addTo(extraY, (SSFRACT - 1) * font.ASCENT * 1.30);\n            Vec.mulBy(extraX, SSFRACT);\n            Vec.mulBy(extraY, SSFRACT);\n            outlineX = outlineX.concat(extraX);\n            outlineY = outlineY.concat(extraY);\n            emw += font.HORIZ_ADV_X[g] * SSFRACT;\n        }\n        if (sub.length > 0) {\n            let qh = new QuickHull(outlineX, outlineY, 0);\n            outlineX = qh.hullX;\n            outlineY = qh.hullY;\n        }\n        let emdx = -0.5 * firstEMW, emdy = 0.5 * font.ASCENT * font.ASCENT_FUDGE;\n        for (let n = 0; n < outlineX.length; n++) {\n            outlineX[n] = a.oval.cx + (emdx + outlineX[n]) * emscale;\n            outlineY[n] = a.oval.cy + (emdy - outlineY[n]) * emscale * this.ymul;\n        }\n        let dx = 0, dy = 0;\n        let srcWAD = this.measure.measureText(a.text, a.fsz);\n        if (fussy) {\n            let RIGHTLEFT = [0, 1, 2, 3];\n            let LEFTRIGHT = [1, 0, 2, 3];\n            let UPDOWN = [2, 3, 0, 1];\n            let DOWNUP = [3, 2, 0, 1];\n            let quad = RIGHTLEFT, adj = this.mol.atomAdjList(a.anum);\n            if (adj.length == 0) {\n                let LEFTIES = ['O', 'S', 'F', 'Cl', 'Br', 'I'];\n                if (this.mol.atomCharge(a.anum) == 0 && this.mol.atomUnpaired(a.anum) == 0 &&\n                    LEFTIES.indexOf(this.mol.atomElement(a.anum)) >= 0)\n                    quad = LEFTRIGHT;\n                else\n                    quad = RIGHTLEFT;\n            }\n            else {\n                let allLeft = true, allRight = true, allUp = true, allDown = true;\n                const ax = this.mol.atomX(a.anum), ay = this.mol.atomY(a.anum);\n                for (let n = 0; n < adj.length; n++) {\n                    const bx = this.mol.atomX(adj[n]), by = this.mol.atomY(adj[n]);\n                    if (bx > ax + 0.01)\n                        allLeft = false;\n                    if (bx < ax - 0.01)\n                        allRight = false;\n                    if (by < ay - 0.01)\n                        allUp = false;\n                    if (by > ay + 0.01)\n                        allDown = false;\n                }\n                if (allLeft) { }\n                else if (allRight)\n                    quad = LEFTRIGHT;\n                else if (allUp)\n                    quad = DOWNUP;\n                else if (allDown)\n                    quad = UPDOWN;\n            }\n            for (let n = 0; n < 4; n++) {\n                let tx = 0, ty = 0;\n                if (quad[n] == 0)\n                    tx = 0.5 * srcWAD[0] + 0.5 * firstEMW * emscale;\n                else if (quad[n] == 1)\n                    tx = -0.5 * srcWAD[0] - (emw - 0.5 * firstEMW) * emscale;\n                else if (quad[n] == 2)\n                    ty = (1.1 * srcWAD[1] + 0.5 * srcWAD[2]) * -this.ymul;\n                else if (quad[n] == 3)\n                    ty = (1.1 * srcWAD[1] + 0.5 * srcWAD[2]) * this.ymul;\n                Vec.addTo(outlineX, tx);\n                Vec.addTo(outlineY, ty);\n                let viol = this.countPolyViolations(outlineX, outlineY, null, true);\n                Vec.addTo(outlineX, -tx);\n                Vec.addTo(outlineY, -ty);\n                if (viol == 0) {\n                    dx = tx;\n                    dy = ty;\n                    break;\n                }\n            }\n            if (dx == 0 && dy == 0)\n                return false;\n        }\n        else {\n            const mx1 = Vec.min(outlineY), mx2 = Vec.max(outlineX), my1 = Vec.min(outlineY), my2 = Vec.max(outlineY), cx = 0.5 * (mx1 + mx2), cy = 0.5 * (my1 + my2);\n            const mag = 1 + this.measure.scale() * this.policy.data.fontSize * ArrangeMolecule.FONT_CORRECT * 0.1 / Math.max(mx2 - cx, my2 - cy);\n            const psz = outlineX.length;\n            let magPX = outlineX.slice(0), magPY = outlineY.slice(0);\n            for (let n = 0; n < psz; n++) {\n                magPX[n] = (magPX[n] - cx) * mag + cx;\n                magPY[n] = (magPY[n] - cy) * mag + cy;\n            }\n            let bestScore = 0, bestExt = 0, bestAng = 0;\n            for (let ext = 0.5 * (a.oval.rw + a.oval.rh); ext < 1.5 * this.measure.scale(); ext += 0.1 * this.measure.scale()) {\n                let anyNoClash = false;\n                for (let ang = 0; ang < 2 * Math.PI; ang += 5 * DEGRAD) {\n                    let tx = ext * Math.cos(ang), ty = ext * Math.sin(ang);\n                    Vec.addTo(magPX, tx);\n                    Vec.addTo(magPY, ty);\n                    let viol = this.countPolyViolations(magPX, magPY, null, false);\n                    Vec.addTo(magPX, -tx);\n                    Vec.addTo(magPY, -ty);\n                    if (viol == 0)\n                        anyNoClash = true;\n                    let score = 10 * viol + this.spatialCongestion(a.oval.cx + tx, a.oval.cy + ty, 0.5) + 2 * ext;\n                    if (bestScore == 0 || score < bestScore) {\n                        bestScore = score;\n                        bestExt = ext;\n                        bestAng = ang;\n                        dx = tx;\n                        dy = ty;\n                    }\n                }\n                if (anyNoClash)\n                    break;\n            }\n        }\n        let wad = this.measure.measureText('H', a.fsz);\n        const PADDING = 1.1;\n        let ah = {\n            anum: 0,\n            text: 'H',\n            fsz: a.fsz,\n            col: a.col,\n            oval: new Oval(a.oval.cx + dx, a.oval.cy + dy, 0.5 * wad[0] * PADDING, 0.5 * wad[1] * PADDING)\n        };\n        this.points.push(ah);\n        if (sub.length > 0) {\n            const subFsz = SSFRACT * a.fsz;\n            wad = this.measure.measureText(sub, subFsz);\n            let an = {\n                anum: 0,\n                text: sub,\n                fsz: subFsz,\n                col: a.col,\n                oval: new Oval(ah.oval.cx + 0.5 * firstEMW * a.fsz * font.INV_UNITS_PER_EM + 0.5 * wad[0], ah.oval.cy + (1 - SSFRACT) * a.fsz, 0.5 * wad[0] * PADDING, 0.5 * wad[1] * PADDING)\n            };\n            this.points.push(an);\n        }\n        Vec.addTo(outlineX, dx);\n        Vec.addTo(outlineY, dy);\n        let minX = Vec.min(outlineX), minY = Vec.min(outlineY);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(minX, minY, Vec.max(outlineX) - minX, Vec.max(outlineY) - minY),\n            px: outlineX,\n            py: outlineY\n        };\n        this.space.push(spc);\n        return true;\n    }\n    computeSpacePoint(a) {\n        let s = {\n            anum: a.anum,\n            bnum: 0,\n            box: new Box(),\n            px: [],\n            py: []\n        };\n        const font = FontData.main;\n        let outlineX = [], outlineY = [];\n        let emw = 0, nglyphs = 0;\n        if (a.text != null) {\n            for (let n = 0; n < a.text.length; n++) {\n                let ch1 = a.text.charAt(n);\n                let i = font.getIndex(ch1);\n                if (i >= 0) {\n                    if (emw == 0) {\n                        outlineX = font.getOutlineX(i);\n                        outlineY = font.getOutlineY(i);\n                        nglyphs = 1;\n                    }\n                    else {\n                        let extraX = font.getOutlineX(i), extraY = font.getOutlineY(i);\n                        if (extraX.length > 0) {\n                            Vec.addTo(extraX, emw);\n                            outlineX = outlineX.concat(extraX);\n                            outlineY = outlineY.concat(extraY);\n                            nglyphs++;\n                        }\n                    }\n                    emw += font.HORIZ_ADV_X[i];\n                }\n                else\n                    emw += font.MISSING_HORZ;\n                if (n < a.text.length - 1) {\n                    let ch2 = a.text.charAt(n + 1);\n                    emw += font.getKerning(ch1, ch2);\n                }\n            }\n        }\n        if (outlineX.length > 0) {\n            if (nglyphs > 1) {\n                let qh = new QuickHull(outlineX, outlineY, 0);\n                outlineX = qh.hullX;\n                outlineY = qh.hullY;\n            }\n            let emdx = -0.5 * emw, emdy = 0.5 * font.ASCENT * font.ASCENT_FUDGE;\n            let emscale = a.fsz * font.INV_UNITS_PER_EM;\n            for (let n = 0; n < outlineX.length; n++) {\n                outlineX[n] = a.oval.cx + (emdx + outlineX[n]) * emscale;\n                outlineY[n] = a.oval.cy + (emdy - outlineY[n]) * emscale * this.ymul;\n            }\n            s.px = outlineX;\n            s.py = outlineY;\n            let minX = Vec.min(outlineX), minY = Vec.min(outlineY);\n            s.box = new Box(minX, minY, Vec.max(outlineX) - minX, Vec.max(outlineY) - minY);\n        }\n        else {\n            s.box = Box.fromOval(a.oval);\n            if (s.box.w > 0 && s.box.h > 0) {\n                s.px = [s.box.minX(), s.box.maxX(), s.box.maxX(), s.box.minX()];\n                s.py = [s.box.minY(), s.box.minY(), s.box.maxY(), s.box.maxY()];\n            }\n        }\n        return s;\n    }\n    computeSpaceLine(b) {\n        let s = {\n            anum: 0,\n            bnum: b.bnum,\n            box: new Box(),\n            px: [],\n            py: []\n        };\n        if (b.type == BLineType.Normal || b.type == BLineType.Dotted || b.type == BLineType.DotDir) {\n            s.px = [b.line.x1, b.line.x2];\n            s.py = [b.line.y1, b.line.y2];\n        }\n        else {\n            const dx = b.line.x2 - b.line.x1, dy = b.line.y2 - b.line.y1;\n            const norm = b.head / Math.sqrt(dx * dx + dy * dy);\n            const ox = norm * dy, oy = -norm * dx;\n            if (b.type == BLineType.Unknown) {\n                s.px = [b.line.x1 + ox, b.line.x1 - ox, b.line.x2 - ox, b.line.x2 + ox];\n                s.py = [b.line.y1 + oy, b.line.y1 - oy, b.line.y2 - oy, b.line.y2 + oy];\n            }\n            else {\n                s.px = [b.line.x1, b.line.x2 - ox, b.line.x2 + ox];\n                s.py = [b.line.y1, b.line.y2 - oy, b.line.y2 + oy];\n            }\n        }\n        s.box.x = Vec.min(s.px) - b.size;\n        s.box.y = Vec.min(s.py) - b.size;\n        s.box.w = Vec.max(s.px) - s.box.x + b.size;\n        s.box.h = Vec.max(s.py) - s.box.y + b.size;\n        return s;\n    }\n    bumpAtomPosition(atom, dx, dy) {\n        let p = this.points[atom - 1];\n        p.oval.cx += dx;\n        p.oval.cy += dy;\n        for (let n = this.space.length - 1; n >= 0; n--) {\n            let s = this.space[n - 1];\n            if (s == null || s.anum != atom)\n                continue;\n            s.box.x += dx;\n            s.box.y += dy;\n            Vec.addTo(s.px, dx);\n            Vec.addTo(s.py, dy);\n        }\n    }\n    spaceSubset(x, y, w, h) {\n        let subset = [];\n        for (let s of this.space)\n            if (GeomUtil.rectsIntersect(x, y, w, h, s.box.x, s.box.y, s.box.w, s.box.h))\n                subset.push(s);\n        return subset;\n    }\n    countPolyViolations(px, py, space, shortCircuit) {\n        if (space == null)\n            space = this.space;\n        let hits = 0;\n        const psz = px.length, nspc = space.length;\n        let pr = new Box(), sr = new Box();\n        for (let i1 = 0; i1 < psz; i1++) {\n            let i2 = i1 < psz - 1 ? i1 + 1 : 0;\n            pr.x = Math.min(px[i1], px[i2]) - 1;\n            pr.y = Math.min(py[i1], py[i2]) - 1;\n            pr.w = Math.max(px[i1], px[i2]) - pr.x + 2;\n            pr.h = Math.max(py[i1], py[i2]) - pr.y + 2;\n            for (let j = 0; j < nspc; j++) {\n                let spc = space[j];\n                if (spc.px == null)\n                    continue;\n                sr.x = spc.box.x - 1;\n                sr.y = spc.box.y - 1;\n                sr.w = spc.box.w + 1;\n                sr.h = spc.box.h + 1;\n                if (!pr.intersects(sr))\n                    continue;\n                let ssz = spc.px.length;\n                for (let j1 = 0; j1 < ssz; j1++) {\n                    let j2 = j1 < ssz - 1 ? j1 + 1 : 0;\n                    sr.x = Math.min(spc.px[j1], spc.px[j2]) - 1;\n                    sr.y = Math.min(spc.py[j1], spc.py[j2]) - 1;\n                    sr.w = Math.max(spc.px[j1], spc.px[j2]) - sr.x + 2;\n                    sr.h = Math.max(spc.py[j1], spc.py[j2]) - sr.y + 2;\n                    if (!pr.intersects(sr))\n                        continue;\n                    if (GeomUtil.doLineSegsIntersect(px[i1], py[i1], px[i2], py[i2], spc.px[j1], spc.py[j1], spc.px[j2], spc.py[j2])) {\n                        if (shortCircuit)\n                            return 1;\n                        hits++;\n                        break;\n                    }\n                    if (ssz == 1)\n                        break;\n                }\n            }\n        }\n        pr.x = Vec.min(px);\n        pr.y = Vec.min(py);\n        pr.w = Vec.max(px) - pr.x;\n        pr.h = Vec.max(py) - pr.y;\n        for (let n = nspc - 1; n >= 0; n--) {\n            let spc = space[n];\n            sr.x = spc.box.x;\n            sr.y = spc.box.y;\n            sr.w = spc.box.w;\n            sr.h = spc.box.h;\n            if (!pr.intersects(sr))\n                continue;\n            for (let i = spc.px.length - 1; i >= 0; i--)\n                if (GeomUtil.pointInPolygon(spc.px[i], spc.py[i], px, py)) {\n                    if (shortCircuit)\n                        return 1;\n                    hits++;\n                    break;\n                }\n            for (let i = 0; i < psz; i++)\n                if (GeomUtil.pointInPolygon(px[i], py[i], spc.px, spc.py)) {\n                    if (shortCircuit)\n                        return 1;\n                    hits++;\n                    break;\n                }\n        }\n        return hits;\n    }\n    adjustBondPosition(bf, bt, x1, y1, x2, y2) {\n        if (bf == 0 || bt == 0)\n            return null;\n        for (let n = 0; n < this.lines.length; n++) {\n            let b = this.lines[n];\n            if (this.mol.bondOrder(b.bnum) != 1 || this.mol.bondType(b.bnum) != Molecule.BONDTYPE_NORMAL)\n                continue;\n            let alt = false;\n            if (this.mol.bondFrom(b.bnum) == bf && this.mol.bondTo(b.bnum) == bt) { }\n            else if (this.mol.bondFrom(b.bnum) == bt && this.mol.bondTo(b.bnum) == bf)\n                alt = true;\n            else\n                continue;\n            let th = angleDiff(Math.atan2(b.line.y2 - b.line.y1, b.line.x2 - b.line.x1), Math.atan2(y2 - y1, x2 - x1)) * RADDEG;\n            if ((th > -5 && th < 5) || th > 175 || th < -175)\n                continue;\n            let xy = GeomUtil.lineIntersect(b.line.x1, b.line.y1, b.line.x2, b.line.y2, x1, y1, x2, y2);\n            if (this.mol.atomRingBlock(bt) == 0) {\n                if (alt) {\n                    b.line.x1 = xy[0];\n                    b.line.y1 = xy[1];\n                }\n                else {\n                    b.line.x2 = xy[0];\n                    b.line.y2 = xy[1];\n                }\n            }\n            return xy;\n        }\n        return null;\n    }\n    priorityDoubleSubstit(idx) {\n        let bf = this.mol.bondFrom(idx), bt = this.mol.bondTo(idx);\n        let nf = this.mol.atomAdjList(bf), nt = this.mol.atomAdjList(bt);\n        let a1 = this.points[bf - 1], a2 = this.points[bt - 1];\n        let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n        let dx = x2 - x1, dy = y2 - y1, btheta = Math.atan2(dy, dx);\n        let idxFLeft = 0, idxFRight = 0, idxTLeft = 0, idxTRight = 0;\n        for (let n = 0; n < nf.length; n++)\n            if (nf[n] != bt) {\n                let theta = angleDiff(Math.atan2(this.points[nf[n] - 1].oval.cy - y1, this.points[nf[n] - 1].oval.cx - x1), btheta);\n                if (theta > 0) {\n                    if (idxFLeft != 0)\n                        return null;\n                    idxFLeft = nf[n];\n                }\n                else {\n                    if (idxFRight != 0)\n                        return null;\n                    idxFRight = nf[n];\n                }\n            }\n        for (let n = 0; n < nt.length; n++)\n            if (nt[n] != bf) {\n                let theta = angleDiff(Math.atan2(this.points[nt[n] - 1].oval.cy - y2, this.points[nt[n] - 1].oval.cx - x2), btheta);\n                if (theta > 0) {\n                    if (idxTLeft != 0)\n                        return null;\n                    idxTLeft = nt[n];\n                }\n                else {\n                    if (idxTRight != 0)\n                        return null;\n                    idxTRight = nt[n];\n                }\n            }\n        let sumFrom = (idxFLeft > 0 ? 1 : 0) + (idxFRight > 0 ? 1 : 0), sumTo = (idxTLeft > 0 ? 1 : 0) + (idxTRight > 0 ? 1 : 0);\n        if (sumFrom == 1 && sumTo == 0)\n            return [idxFLeft > 0 ? idxFLeft : idxFRight];\n        if (sumFrom == 0 && sumTo == 1)\n            return [idxTLeft > 0 ? idxTLeft : idxTRight];\n        if (sumFrom == 1 && sumTo == 1) {\n            if (idxFLeft > 0 && idxTLeft > 0)\n                return [idxFLeft, idxTLeft];\n            if (idxFRight > 0 && idxTRight > 0)\n                return [idxFRight, idxTRight];\n            let oxy = this.orthogonalDelta(x1, y1, x2, y2, this.bondSepPix);\n            let congestLeft = this.spatialCongestion(0.5 * (x1 + x2) + oxy[0], 0.5 * (y1 + y2) + oxy[1]);\n            let congestRight = this.spatialCongestion(0.5 * (x1 + x2) - oxy[0], 0.5 * (y1 + y2) - oxy[1]);\n            if (congestLeft < congestRight)\n                return [idxFLeft > 0 ? idxFLeft : idxTLeft];\n            else\n                return [idxFRight > 0 ? idxFRight : idxTRight];\n        }\n        if (sumFrom == 2 && sumTo == 1) {\n            if (idxTLeft == 0)\n                return [idxFRight, idxTRight];\n            else\n                return [idxFLeft, idxTLeft];\n        }\n        if (sumFrom == 1 && sumTo == 2) {\n            if (idxFLeft == 0)\n                return [idxFRight, idxTRight];\n            else\n                return [idxFLeft, idxTLeft];\n        }\n        return null;\n    }\n    annotateAtom(atom, text, col, fsz) {\n        let [tw, ta] = this.measure.measureText(text, fsz);\n        let a = this.points[atom - 1];\n        let cx = a.oval.cx, cy = a.oval.cy, rw = 0.6 * tw, rh = 0.6 * ta;\n        let otherTheta = [];\n        for (let a of this.mol.atomAdjList(atom)) {\n            let dx = this.points[a - 1].oval.cx - cx, dy = this.points[a - 1].oval.cy - cy;\n            otherTheta.push(Math.atan2(dy, dx));\n        }\n        let minExt = 0.5 * (a.oval.rw + a.oval.rh), stepsz = 0.1 * this.scale, nsteps = 8;\n        let angsteps = 36, angsz = TWOPI / angsteps;\n        let bestScore = Number.POSITIVE_INFINITY, bestDX = 0, bestDY = 0;\n        let px = [0, 0, 0, 0], py = [0, 0, 0, 0];\n        let limX = rw + minExt + nsteps * stepsz, limY = rh + minExt + nsteps * stepsz;\n        let subSpace = this.spaceSubset(cx - limX, cy - limY, 2 * limX, 2 * limY);\n        for (let step = 0; step < nsteps; step++) {\n            let ext = minExt + step * stepsz;\n            for (let ang = 0; ang < angsteps; ang++) {\n                let th = angsz * ang;\n                let dx = ext * Math.cos(th), dy = ext * Math.sin(th);\n                let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                px[0] = x1;\n                py[0] = y1;\n                px[1] = x2;\n                py[1] = y1;\n                px[2] = x2;\n                py[2] = y2;\n                px[3] = x1;\n                py[3] = y2;\n                let viol = this.countPolyViolations(px, py, subSpace, false);\n                let score = viol * 1000;\n                for (let oth of otherTheta)\n                    score -= Math.abs(angleDiff(th, oth));\n                if (score < bestScore) {\n                    bestScore = score;\n                    bestDX = dx;\n                    bestDY = dy;\n                }\n            }\n            if (bestScore < 500)\n                break;\n        }\n        let x = cx + bestDX, y = cy + bestDY;\n        let an = {\n            anum: 0,\n            text,\n            fsz,\n            col,\n            oval: new Oval(x, y, rw, rh),\n        };\n        this.points.push(an);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(x - rw, y - rh, 2 * rw, 2 * rh),\n            px: [x - rw, x + rw, x + rw, x - rw],\n            py: [y - rh, y - rh, y + rh, y + rh],\n        };\n        this.space.push(spc);\n    }\n    annotateBond(bond, text, col, fsz) {\n        let [tw, ta] = this.measure.measureText(text, fsz);\n        let bfr = this.mol.bondFrom(bond), bto = this.mol.bondTo(bond);\n        let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n        let cx = 0.5 * (a1.oval.cx + a2.oval.cx), cy = 0.5 * (a1.oval.cy + a2.oval.cy), rw = 0.6 * tw, rh = 0.6 * ta;\n        let bth = Math.atan2(a2.oval.cy - a1.oval.cy, a2.oval.cx - a1.oval.cx);\n        let otherTheta = [bth, bth + Math.PI];\n        for (let a of this.mol.atomAdjList(bfr))\n            if (a != bto) {\n                let dx = this.points[a - 1].oval.cx - this.points[bfr - 1].oval.cx, dy = this.points[a - 1].oval.cy - this.points[bfr - 1].oval.cy;\n                otherTheta.push(Math.atan2(dy, dx));\n            }\n        for (let a of this.mol.atomAdjList(bto))\n            if (a != bfr) {\n                let dx = this.points[a - 1].oval.cx - this.points[bto - 1].oval.cx, dy = this.points[a - 1].oval.cy - this.points[bto - 1].oval.cy;\n                otherTheta.push(Math.atan2(dy, dx));\n            }\n        let minExt = 0.2 * this.scale * this.bondOrder[bond - 1], stepsz = 0.1 * this.scale, nsteps = 8;\n        let angsteps = 36, angsz = TWOPI / angsteps;\n        let bestScore = Number.POSITIVE_INFINITY, bestDX = 0, bestDY = 0;\n        let px = [0, 0, 0, 0], py = [0, 0, 0, 0];\n        let limX = rw + minExt + nsteps * stepsz, limY = rh + minExt + nsteps * stepsz;\n        let subSpace = this.spaceSubset(cx - limX, cy - limY, 2 * limX, 2 * limY);\n        for (let step = 0; step < nsteps; step++) {\n            let ext = minExt + step * stepsz;\n            for (let ang = 0; ang < angsteps; ang++) {\n                let th = angsz * ang;\n                let dx = ext * Math.cos(th), dy = ext * Math.sin(th);\n                let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                px[0] = x1;\n                py[0] = y1;\n                px[1] = x2;\n                py[1] = y1;\n                px[2] = x2;\n                py[2] = y2;\n                px[3] = x1;\n                py[3] = y2;\n                let viol = this.countPolyViolations(px, py, subSpace, false);\n                let score = viol * 1000;\n                for (let oth of otherTheta)\n                    score -= Math.abs(angleDiff(th, oth));\n                if (score < bestScore) {\n                    bestScore = score;\n                    bestDX = dx;\n                    bestDY = dy;\n                }\n            }\n            if (bestScore < 500)\n                break;\n        }\n        let x = cx + bestDX, y = cy + bestDY;\n        let an = {\n            anum: 0,\n            text,\n            fsz,\n            col,\n            oval: new Oval(x, y, rw, rh),\n        };\n        this.points.push(an);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(x - rw, y - rh, 2 * rw, 2 * rh),\n            px: [x - rw, x + rw, x + rw, x - rw],\n            py: [y - rh, y - rh, y + rh, y + rh],\n        };\n        this.space.push(spc);\n    }\n    boxOverlaps(x, y, w, h, pointmask, linemask) {\n        let vx1 = x, vy1 = y, vx2 = x + w, vy2 = y + h;\n        for (let n = 0; n < this.points.length; n++) {\n            if (pointmask != null && !pointmask[n])\n                continue;\n            let a = this.points[n];\n            let wx1 = a.oval.cx - a.oval.rw, wy1 = a.oval.cy - a.oval.rh, wx2 = a.oval.cx + a.oval.rw, wy2 = a.oval.cy + a.oval.rh;\n            if (vx2 < wx1 || vx1 > wx2 || vy2 < wy1 || vy1 > wy2)\n                continue;\n            return true;\n        }\n        for (let n = 0; n < this.lines.length; n++) {\n            if (linemask != null && !linemask[n])\n                continue;\n            let b = this.lines[n];\n            let wx1 = b.line.x1, wy1 = b.line.y1, wx2 = b.line.x2, wy2 = b.line.y2;\n            if (vx2 < Math.min(wx1, wx2) || vx1 > Math.max(wx1, wx2) || vy2 < Math.min(wy1, wy2) || vy1 > Math.max(wy1, wy2))\n                continue;\n            if (wx1 >= vx1 && wx1 <= vx2 && wy1 >= vy1 && wy1 <= vy2)\n                return true;\n            if (wx2 >= vx1 && wx2 <= vx2 && wy2 >= vy1 && wy2 <= vy2)\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy1, vx2, vy1))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy2, vx2, vy2))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy1, vx1, vy2))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx2, vy1, vx2, vy2))\n                return true;\n        }\n        return false;\n    }\n    resolveLineCrossings(bondHigher, bondLower) {\n        while (true) {\n            let anything = false;\n            for (let i1 = 0; i1 < this.lines.length; i1++) {\n                let b1 = this.lines[i1];\n                if (b1.bnum != bondHigher)\n                    continue;\n                if (b1.type != BLineType.Normal && b1.type != BLineType.Dotted && b1.type != BLineType.DotDir)\n                    continue;\n                for (let i2 = 0; i2 < this.lines.length; i2++) {\n                    let b2 = this.lines[i2];\n                    if (b2.bnum != bondLower)\n                        continue;\n                    if (b2.type == BLineType.DotDir)\n                        b2.type = BLineType.Dotted;\n                    if (b2.type != BLineType.Normal && b2.type != BLineType.Dotted)\n                        continue;\n                    if (b1.bfr == b2.bfr || b1.bfr == b2.bto || b1.bto == b2.bfr || b1.bto == b2.bto)\n                        continue;\n                    if (!GeomUtil.doLineSegsIntersect(b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2))\n                        continue;\n                    let xy = GeomUtil.lineIntersect(b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2);\n                    let dx = b2.line.x2 - b2.line.x1, dy = b2.line.y2 - b2.line.y1;\n                    let ext = Math.abs(dx) > Math.abs(dy) ? (xy[0] - b2.line.x1) / dx : (xy[1] - b2.line.y1) / dy;\n                    let dist = norm_xy(dx, dy);\n                    let delta = b2.size / dist * (b2.type == BLineType.Normal ? 2 : 4);\n                    if (ext > delta && ext < 1 - delta) {\n                        let b3 = {\n                            bnum: b2.bnum,\n                            bfr: b2.bfr,\n                            bto: b2.bto,\n                            type: b2.type,\n                            line: b2.line.clone(),\n                            size: b2.size,\n                            head: b2.head,\n                            col: b2.col\n                        };\n                        this.lines.push(b3);\n                        b2.line.x2 = b2.line.x1 + dx * (ext - delta);\n                        b2.line.y2 = b2.line.y1 + dy * (ext - delta);\n                        b3.line.x1 = b3.line.x1 + dx * (ext + delta);\n                        b3.line.y1 = b3.line.y1 + dy * (ext + delta);\n                        anything = true;\n                    }\n                    else if (ext > delta) {\n                        b2.line.x2 = b2.line.x1 + dx * (ext - delta);\n                        b2.line.y2 = b2.line.y1 + dy * (ext - delta);\n                        anything = true;\n                    }\n                    else if (ext < 1 - delta) {\n                        b2.line.x1 = b2.line.x1 + dx * (ext + delta);\n                        b2.line.y1 = b2.line.y1 + dy * (ext + delta);\n                        anything = true;\n                    }\n                }\n            }\n            if (!anything)\n                break;\n        }\n    }\n    createCircularRing(atoms) {\n        let px = new Array(atoms.length), py = new Array(atoms.length);\n        for (let n = 0; n < atoms.length; n++) {\n            let pt = this.points[atoms[n] - 1];\n            px[n] = pt.oval.cx;\n            py[n] = pt.oval.cy;\n        }\n        let cx = Vec.sum(px) / atoms.length, cy = Vec.sum(py) / atoms.length;\n        let bx = [], by = [];\n        let isRegular = true;\n        let regDist = Number.NaN;\n        const FRACT = 0.7;\n        for (let a of atoms) {\n            let pt = this.points[a - 1];\n            let x0 = pt.oval.cx - cx, y0 = pt.oval.cy - cy, x1 = x0 - pt.oval.rw, x2 = x0 + pt.oval.rw, y1 = y0 - pt.oval.rh, y2 = y0 + pt.oval.rh;\n            bx.push(x1);\n            by.push(y0);\n            bx.push(x1);\n            by.push(y1);\n            bx.push(x1);\n            by.push(y2);\n            bx.push(x0);\n            by.push(y1);\n            bx.push(x0);\n            by.push(y2);\n            bx.push(x2);\n            by.push(y0);\n            bx.push(x2);\n            by.push(y1);\n            bx.push(x2);\n            by.push(y2);\n            let dist = norm_xy(x0, y0), theta = Math.atan2(y0, x0);\n            bx.push(FRACT * dist * Math.cos(theta));\n            by.push(FRACT * dist * Math.sin(theta));\n            for (let b of this.mol.atomAdjList(a))\n                if (atoms.indexOf(b) >= 0) {\n                    let pb = this.points[b - 1];\n                    let mx = 0.5 * (pt.oval.cx + pb.oval.cx) - cx, my = 0.5 * (pt.oval.cy + pb.oval.cy) - cy;\n                    let mdist = norm_xy(mx, my), mtheta = Math.atan2(my, mx);\n                    bx.push(FRACT * mdist * Math.cos(mtheta));\n                    by.push(FRACT * mdist * Math.sin(mtheta));\n                }\n            if (!isRegular) { }\n            else if (Number.isFinite(regDist)) {\n                if (Math.abs(regDist - dist) > 1)\n                    isRegular = false;\n            }\n            else\n                regDist = dist;\n        }\n        let r = { atoms, cx, cy, rw: 0, rh: 0, theta: 0, size: 0 };\n        if (isRegular) {\n            r.rw = r.rh = GeomUtil.fitCircle(bx, by);\n        }\n        else {\n            let mdist = 0;\n            for (let n = 0; n < atoms.length; n++)\n                mdist += norm_xy(px[n] - cx, py[n] - cy);\n            let margin = mdist / atoms.length * (1 - FRACT);\n            var fit = new FitRotatedEllipse(px, py, margin);\n            fit.calculate();\n            r.cx = fit.cx;\n            r.cy = fit.cy;\n            r.rw = fit.rw;\n            r.rh = fit.rh;\n            r.theta = fit.theta;\n        }\n        r.size = this.lineSizePix;\n        this.rings.push(r);\n    }\n    createCurvedPath(atoms, fractional, extAtom) {\n        const sz = atoms.length, szn = sz - 1;\n        let x = [], y = [], symbol = [];\n        for (let n = 0; n < sz; n++) {\n            let pt = this.points[atoms[n] - 1];\n            x.push(pt.oval.cx);\n            y.push(pt.oval.cy);\n            symbol.push(pt.text != null);\n        }\n        let ox = [], oy = [];\n        const EXT = Molecule.IDEALBOND * 0.25 * this.scale;\n        for (let n = 0; n < sz - 1; n++) {\n            let dx = x[n + 1] - x[n], dy = y[n + 1] - y[n], invD = EXT * invZ(norm_xy(dx, dy));\n            ox.push(dy * invD);\n            oy.push(-dx * invD);\n        }\n        const FAR = 1.2, CLOSE = 0.7;\n        let sx1 = Vec.numberArray(0, sz), sy1 = Vec.numberArray(0, sz), sx2 = Vec.numberArray(0, sz), sy2 = Vec.numberArray(0, sz);\n        const capA = symbol[0] ? FAR : CLOSE;\n        if (!fractional) {\n            sx1[0] = x[0] + ox[0] * capA;\n            sy1[0] = y[0] + oy[0] * capA;\n            sx2[0] = x[0] - ox[0] * capA;\n            sy2[0] = y[0] - oy[0] * capA;\n        }\n        else {\n            const dx = -oy[0], dy = ox[0];\n            sx1[0] = x[0] + dx * capA;\n            sy1[0] = y[0] + dy * capA;\n            sx2[0] = x[0] + dx * capA;\n            sy2[0] = y[0] + dy * capA;\n        }\n        let ncross1 = 0, ncross2 = 0;\n        for (let n = 1; n < sz - 1; n++) {\n            const fr1 = symbol[n] ? FAR : CLOSE, fr2 = fr1;\n            sx1[n] = x[n] + fr1 * (ox[n - 1] + ox[n]);\n            sy1[n] = y[n] + fr1 * (oy[n - 1] + oy[n]);\n            sx2[n] = x[n] - fr2 * (ox[n - 1] + ox[n]);\n            sy2[n] = y[n] - fr2 * (oy[n - 1] + oy[n]);\n            for (let a of this.mol.atomAdjList(atoms[n]))\n                if (atoms.indexOf(a) < 0 && a != extAtom) {\n                    let pt = this.points[a - 1];\n                    let dx = pt.oval.cx - x[n], dy = pt.oval.cy - y[n];\n                    let dot1 = dx * (sx1[n] - x[n]) + dy * (sy1[n] - x[n]);\n                    let dot2 = dy * (sx2[n] - x[n]) + dy * (sy2[n] - x[n]);\n                    if (dot1 > dot2)\n                        ncross1++;\n                    else\n                        ncross2++;\n                }\n        }\n        let nn = sz - 1;\n        let capB = symbol[nn] ? FAR : CLOSE;\n        if (!fractional) {\n            sx1[nn] = x[nn] + ox[nn - 1] * capB;\n            sy1[nn] = y[nn] + oy[nn - 1] * capB;\n            sx2[nn] = x[nn] - ox[nn - 1] * capB;\n            sy2[nn] = y[nn] - oy[nn - 1] * capB;\n        }\n        else {\n            let dx = -oy[nn - 1], dy = ox[nn - 1];\n            sx1[nn] = x[nn] - dx * capB;\n            sy1[nn] = y[nn] - dy * capB;\n            sx2[nn] = x[nn] - dx * capB;\n            sy2[nn] = y[nn] - dy * capB;\n        }\n        let score1 = 0, score2 = 0;\n        for (let n = 0; n < sz - 1; n++) {\n            score1 += norm_xy(sx1[n + 1] - sx1[n], sy1[n + 1] - sy1[n]);\n            score2 += norm_xy(sx2[n + 1] - sx2[n], sy2[n + 1] - sy2[n]);\n        }\n        score1 *= ncross1 + 1;\n        score2 *= ncross2 + 1;\n        let sx = score1 < score2 ? sx1 : sx2;\n        let sy = score1 < score2 ? sy1 : sy2;\n        let p = { atoms, px: null, py: null, ctrl: null, size: this.lineSizePix };\n        this.splineInterpolate(p, sx, sy);\n        this.paths.push(p);\n    }\n    createBondCentroid(from, to) {\n        let pt = this.points[from - 1];\n        let x1 = pt.oval.cx, y1 = pt.oval.cy, x2 = 0, y2 = 0;\n        for (let a of to) {\n            pt = this.points[a - 1];\n            x2 += pt.oval.cx;\n            y2 += pt.oval.cy;\n        }\n        x2 /= to.length;\n        y2 /= to.length;\n        if (to.length <= 2) {\n            x2 -= 0.1 * (x2 - x1);\n            y2 -= 0.1 * (y2 - y1);\n        }\n        const minDist = MINBOND_LINE * this.measure.scale();\n        let xy1 = this.shrinkBond(x1, y1, x2, y2, this.backOffAtom(from, x1, y1, x2, y2, minDist));\n        this.ensureMinimumBondLength(xy1, [x2, y2], x1, y1, x2, y2, minDist);\n        let b = {\n            bnum: 0,\n            bfr: from,\n            bto: 0,\n            type: BLineType.Normal,\n            line: new Line(xy1[0], xy1[1], x2, y2),\n            size: this.lineSizePix,\n            head: 0,\n            col: this.policy.data.foreground\n        };\n        this.lines.push(b);\n        this.space.push(this.computeSpaceLine(b));\n    }\n    splineInterpolate(path, x, y) {\n        const sz = x.length;\n        const scale = 0.25;\n        for (let n = 0; n < sz; n++) {\n            if (n == 0) {\n                let dx = x[n + 1] - x[n], dy = y[n + 1] - y[n];\n                let qx = x[n] + scale * dx, qy = y[n] + scale * dy;\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n                path.px = Vec.append(path.px, qx);\n                path.py = Vec.append(path.py, qy);\n                path.ctrl = Vec.append(path.ctrl, true);\n            }\n            else if (n == sz - 1) {\n                let dx = x[n] - x[n - 1], dy = y[n] - y[n - 1];\n                let qx = x[n] - scale * dx, qy = y[n] - scale * dy;\n                path.px = Vec.append(path.px, qx);\n                path.py = Vec.append(path.py, qy);\n                path.ctrl = Vec.append(path.ctrl, true);\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n            }\n            else {\n                let dx = x[n + 1] - x[n - 1], dy = y[n + 1] - y[n - 1];\n                let invD = invZ(norm_xy(dx, dy));\n                dx *= invD;\n                dy *= invD;\n                let d1 = scale * norm_xy(x[n] - x[n - 1], y[n] - y[n - 1]), d2 = scale * norm_xy(x[n + 1] - x[n], y[n + 1] - y[n]);\n                let qx1 = x[n] - dx * d1, qy1 = y[n] - dy * d1;\n                let qx2 = x[n] + dx * d2, qy2 = y[n] + dy * d2;\n                path.px = Vec.append(path.px, qx1);\n                path.py = Vec.append(path.py, qy1);\n                path.ctrl = Vec.append(path.ctrl, true);\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n                path.px = Vec.append(path.px, qx2);\n                path.py = Vec.append(path.py, qy2);\n                path.ctrl = Vec.append(path.ctrl, true);\n            }\n        }\n    }\n    delocalisedAnnotation(atoms, charge, unpaired) {\n        const mol = this.mol;\n        let str = '';\n        if (charge == -1)\n            str = '-';\n        else if (charge == 1)\n            str = '+';\n        else if (charge < -1)\n            str = Math.abs(charge) + '-';\n        else if (charge > 1)\n            str = charge + '+';\n        if (unpaired > 0)\n            for (let n = 0; n < unpaired; n++)\n                str += '.';\n        if (str.length == 0)\n            return;\n        const sz = atoms.length;\n        let bestX = 0, bestY = 0;\n        for (let a of atoms) {\n            bestX += mol.atomX(a);\n            bestY += mol.atomY(a);\n        }\n        bestX /= sz;\n        bestY /= sz;\n        let bestScore = CoordUtil.congestionPoint(mol, bestX, bestY);\n        for (let n = 1; n < sz - 1; n++) {\n            let x = 0.5 * (mol.atomX(atoms[n - 1]) + mol.atomX(atoms[n + 1])), y = 0.5 * (mol.atomY(atoms[n - 1]) + mol.atomY(atoms[n + 1]));\n            let score = CoordUtil.congestionPoint(mol, x, y);\n            if (score < bestScore) {\n                bestScore = score;\n                bestX = x;\n                bestY = y;\n            }\n        }\n        let fsz = 0.8 * this.fontSizePix;\n        let wad = this.measure.measureText(str, fsz);\n        let rw = 0.55 * wad[0], rh = 0.55 * wad[1];\n        let a = {\n            anum: 0,\n            text: str,\n            fsz,\n            col: this.policy.data.foreground,\n            oval: new Oval(this.measure.angToX(bestX), this.measure.angToY(bestY), rw, rh)\n        };\n        this.points.push(a);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(a.oval.cx - rw, a.oval.cy - rh, 2 * rw, 2 * rh),\n            px: [a.oval.cx - rw, a.oval.cx + rw, a.oval.cx + rw, a.oval.cx - rw],\n            py: [a.oval.cy - rh, a.oval.cy - rh, a.oval.cy + rh, a.oval.cy + rh]\n        };\n        this.space.push(spc);\n    }\n    processPolymerUnit(unit, allUnits) {\n        if (Vec.len(unit.bondConn) == 4) {\n            this.processPolymerUnitPair(unit);\n            return;\n        }\n        let brackets = [];\n        const { mol, measure } = this;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let a1 = mol.bondFrom(n), a2 = mol.bondTo(n);\n            let in1 = unit.atoms.indexOf(a1) >= 0, in2 = unit.atoms.indexOf(a2) >= 0;\n            let bracket = null;\n            if (in1 && !in2)\n                bracket = { a1, a2 };\n            else if (in2 && !in1)\n                bracket = { a1: a2, a2: a1 };\n            else\n                continue;\n            bracket.x1 = mol.atomX(bracket.a1);\n            bracket.y1 = mol.atomY(bracket.a1);\n            bracket.x2 = mol.atomX(bracket.a2);\n            bracket.y2 = mol.atomY(bracket.a2);\n            bracket.shared = false;\n            for (let other of allUnits)\n                if (unit !== other && other.atoms.includes(bracket.a2)) {\n                    bracket.shared = true;\n                    break;\n                }\n            let nestings = allUnits.filter((look) => look === unit || (look.atoms.includes(bracket.a1) && !look.atoms.includes(bracket.a2)));\n            if (nestings.length > 1) {\n                nestings.sort((u1, u2) => u1.atoms.length - u2.atoms.length);\n                for (let i = 0; i < nestings.length; i++)\n                    if (nestings[i] === unit)\n                        bracket.nestOrder = i;\n                bracket.nestCount = nestings.length;\n            }\n            brackets.push(bracket);\n        }\n        let tagidx = 0;\n        let atomX = unit.atoms.map((a) => mol.atomX(a)), atomY = unit.atoms.map((a) => mol.atomY(a));\n        let minX = Vec.min(atomX), minY = Vec.min(atomY);\n        let maxX = Vec.max(atomX), maxY = Vec.max(atomY);\n        for (let n = 1; n < brackets.length; n++) {\n            let b1 = brackets[tagidx], b2 = brackets[n];\n            let score1 = b1.x2 - minX - b1.y2 + minY;\n            let score2 = b2.x2 - minX - b2.y2 + minY;\n            if (score2 > score1)\n                tagidx = n;\n        }\n        let isLinear = false, isOuter = false;\n        if (brackets.length == 2) {\n            let left = brackets[tagidx == 0 ? 1 : 0], right = brackets[tagidx];\n            let theta1 = Math.atan2(left.y2 - left.y1, left.x2 - left.x1);\n            let theta2 = Math.atan2(right.y2 - right.y1, right.x2 - right.x1);\n            isLinear = (theta1 > 145 * DEGRAD || theta1 < -145 * DEGRAD) && theta2 < 35 * DEGRAD && theta2 > -35 * DEGRAD;\n        }\n        else if (brackets.length == 0) {\n            let ym = 0.5 * (minY + maxY);\n            brackets.push({ x1: minX, y1: ym, x2: minX - 1, y2: ym });\n            brackets.push({ x1: maxX, y1: ym, x2: maxX + 1, y2: ym });\n            tagidx = 1;\n            isOuter = true;\n        }\n        let bsz1 = (isOuter ? 0.5 * (maxY - minY + 1) : isLinear ? 1.0 : 0.5) * this.scale, bsz2 = 0.2 * this.scale;\n        const BASE_LINE = { bnum: 0, bfr: 0, bto: 0, type: BLineType.Normal, size: this.lineSizePix, head: 0, col: this.policy.data.foreground };\n        const BASE_TEXT = { anum: 0, fsz: 0.7 * this.fontSizePix, bold: false, col: this.policy.data.foreground };\n        for (let n = 0; n < brackets.length; n++) {\n            let bracket = brackets[n];\n            let x1 = measure.angToX(bracket.x1), y1 = measure.angToY(bracket.y1);\n            let x2 = measure.angToX(bracket.x2), y2 = measure.angToY(bracket.y2);\n            if (bracket.shared) {\n                x2 -= (x2 - x1) * 0.1;\n                y2 -= (y2 - y1) * 0.1;\n            }\n            if (bracket.nestCount > 1) {\n                let dx = x2 - x1, dy = y2 - y1, fract = (bracket.nestOrder + 1) / bracket.nestCount;\n                x2 = x1 + dx * fract;\n                y2 = y1 + dy * fract;\n            }\n            let mx = 0.5 * (x1 + x2), my = 0.5 * (y1 + y2);\n            if (isLinear) {\n                x1 = x2 = mx;\n                y1 = y2 = my;\n                if (n == tagidx) {\n                    x1--;\n                    x2++;\n                }\n                else {\n                    x1++;\n                    x2--;\n                }\n            }\n            let invDist = invZ(norm_xy(x2 - x1, y2 - y1));\n            let dx = (x2 - x1) * invDist, dy = (y2 - y1) * invDist;\n            let ox = dy, oy = -dx;\n            let px2 = mx - bsz1 * ox, py2 = my - bsz1 * oy;\n            let px3 = mx + bsz1 * ox, py3 = my + bsz1 * oy;\n            let px1 = px2 - bsz2 * dx, py1 = py2 - bsz2 * dy;\n            let px4 = px3 - bsz2 * dx, py4 = py3 - bsz2 * dy;\n            let line1 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px1, py1, px2, py2) });\n            let line2 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px2, py2, px3, py3) });\n            let line3 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px3, py3, px4, py4) });\n            this.lines.push(line1);\n            this.lines.push(line2);\n            this.lines.push(line3);\n            this.space.push(this.computeSpaceLine(line1));\n            this.space.push(this.computeSpaceLine(line2));\n            this.space.push(this.computeSpaceLine(line3));\n            if (n == tagidx) {\n                let xx, yy;\n                if (bracket.shared)\n                    [xx, yy] = [px2 - 0.5 * this.scale * ox, py2 - 0.5 * this.scale * oy];\n                else\n                    [xx, yy] = [px2 + bsz2 * 2 * dx, py2 + bsz2 * 2 * dy];\n                let pt1 = Object.assign(Object.assign({}, BASE_TEXT), { 'text': 'n', 'oval': new Oval(xx, yy, 0, 0) });\n                this.points.push(pt1);\n                this.space.push(this.computeSpacePoint(pt1));\n                if (unit.connect != null) {\n                    let text = '?';\n                    if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                        text = 'ht';\n                    else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                        text = 'hh';\n                    else if (unit.connect == PolymerBlockConnectivity.Random)\n                        text = 'eu';\n                    if (bracket.shared)\n                        [xx, yy] = [px3 + 0.5 * this.scale * ox, py3 + 0.5 * this.scale * oy];\n                    else\n                        [xx, yy] = [px3 + bsz2 * 2.5 * dx, py3 + bsz2 * 2.5 * dy];\n                    let pt2 = Object.assign(Object.assign({}, BASE_TEXT), { 'text': text, 'oval': new Oval(xx, yy, 0, 0) });\n                    this.points.push(pt2);\n                    this.space.push(this.computeSpacePoint(pt2));\n                }\n            }\n        }\n    }\n    processPolymerUnitPair(unit) {\n        const { mol, measure } = this;\n        let xpos = [], ypos = [];\n        for (let b of unit.bondConn) {\n            let bfr = mol.bondFrom(b), bto = mol.bondTo(b);\n            xpos.push(measure.angToX(0.5 * (mol.atomX(bfr) + mol.atomX(bto))));\n            ypos.push(measure.angToY(0.5 * (mol.atomY(bfr) + mol.atomY(bto))));\n        }\n        let cx = Vec.sum(xpos) * 0.25, cy = Vec.sum(ypos) * 0.25;\n        let bsz = 0.5 * this.scale;\n        let rx = [], ry = [];\n        for (let [i1, i2] of [[0, 1], [2, 3]]) {\n            let dx = xpos[i2] - xpos[i1], dy = ypos[i2] - ypos[i1], inv = bsz * invZ(norm_xy(dx, dy) + 0.001);\n            [dx, dy] = [dx * inv, dy * inv];\n            xpos[i1] -= 2 * dx;\n            ypos[i1] -= 2 * dy;\n            xpos[i2] += 2 * dx;\n            ypos[i2] += 2 * dy;\n            let ox = dy, oy = -dx;\n            let dsq1 = norm2_xy(0.5 * (xpos[i1] + xpos[i2]) + ox - cx, 0.5 * (ypos[i1] + ypos[i2]) + oy - cy);\n            let dsq2 = norm2_xy(0.5 * (xpos[i1] + xpos[i2]) - ox - cx, 0.5 * (ypos[i1] + ypos[i2]) - oy - cy);\n            if (dsq2 < dsq1)\n                [ox, oy] = [-ox, -oy];\n            rx.push(...[ox, ox]);\n            ry.push(...[oy, oy]);\n        }\n        const BASE_LINE = { bnum: 0, bfr: 0, bto: 0, type: BLineType.Normal, size: this.lineSizePix, head: 0, col: this.policy.data.foreground };\n        const BASE_TEXT = { anum: 0, fsz: 0.7 * this.fontSizePix, bold: false, col: this.policy.data.foreground };\n        let drawLine = (x1, y1, x2, y2) => {\n            let line = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(x1, y1, x2, y2) });\n            this.lines.push(line);\n            this.space.push(this.computeSpaceLine(line));\n        };\n        let drawText = (x, y, txt) => {\n            let pt = Object.assign(Object.assign({}, BASE_TEXT), { 'text': txt, 'oval': new Oval(x, y, 0, 0) });\n            this.points.push(pt);\n            this.space.push(this.computeSpacePoint(pt));\n        };\n        drawLine(xpos[0], ypos[0], xpos[1], ypos[1]);\n        drawLine(xpos[0], ypos[0], xpos[0] + rx[0], ypos[0] + ry[0]);\n        drawLine(xpos[1], ypos[1], xpos[1] + rx[1], ypos[1] + ry[1]);\n        drawLine(xpos[2], ypos[2], xpos[3], ypos[3]);\n        drawLine(xpos[2], ypos[2], xpos[2] + rx[2], ypos[2] + ry[2]);\n        drawLine(xpos[3], ypos[3], xpos[3] + rx[3], ypos[3] + ry[3]);\n        let xmin = Vec.min(xpos), ymin = Vec.min(ypos);\n        let dist = [];\n        for (let n = 0; n < 4; n++)\n            dist.push(xpos[n] - xmin + ypos[n] - ymin);\n        let idxN = Vec.idxMax(dist);\n        drawText(xpos[idxN] - rx[idxN], ypos[idxN] - ry[idxN], 'n');\n        let idxD2 = idxN + (idxN % 2 == 1 ? -1 : 1), idxD1 = (idxD2 + 2) % 4;\n        drawText(xpos[idxD1] - 0.5 * rx[idxD1], ypos[idxD1] - 0.5 * ry[idxD1], '*');\n        drawText(xpos[idxD2] - 0.5 * rx[idxD2], ypos[idxD2] - 0.5 * ry[idxD2], '*');\n    }\n}\nArrangeMolecule.FONT_CORRECT = 1.5;\n//# sourceMappingURL=ArrangeMolecule.js.map","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {DataSheet, DataSheetColumn} from 'webmolkit/data/DataSheet';\nimport {MDLSDFWriter} from 'webmolkit/data/MDLWriter';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {MDLMOLReader} from 'webmolkit/data/MDLReader';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {ExportMInChI} from './ExportMInChI';\nimport {Mixfile, MixfileComponent} from './Mixfile';\n\n/*\n\tInteroperability with SDfiles: conversion of the Mixfile hierarchy into a flattened SDfile is useful for presenting to\n\tsoftware that can read this format, and is also a waypoint en route to a MInChI string.\n*/\n\nexport class ExportSDFile\n{\n\tprivate ds = new DataSheet();\n\tprivate colMol:number;\n\tprivate colName:number;\n\tprivate colHier:number;\n\tprivate colConc:number;\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t\tthis.colMol = this.ds.appendColumn('Molecule', DataSheetColumn.Molecule, '');\n\t\tthis.colName = this.ds.appendColumn('Name', DataSheetColumn.String, '');\n\t\tthis.colHier = this.ds.appendColumn('MINCHI$N', DataSheetColumn.String, '');\n\t\tthis.colConc = this.ds.appendColumn('MINCHI$C', DataSheetColumn.String, '');\n\t}\n\n\t// can add any number of mixtures, which will be numbered automatically\n\tpublic append(mixfile:Mixfile):void\n\t{\n\t\t// if the root node is something other than a pure placeholder, then add it explicitly\n\t\tif (mixfile.name || mixfile.molfile || mixfile.inchi)\n\t\t{\n\t\t\tthis.appendComponent(mixfile, [1]);\n\t\t\treturn;\n\t\t}\n\n\t\t// otherwise, add all of contents of the root node as a series with incrementing primary indexes\n\t\tif (!mixfile.contents) return;\n\t\tfor (let n = 0; n < mixfile.contents.length; n++) this.appendComponent(mixfile.contents[n], [n + 1]);\n\t}\n\n\t// return the SDF-serialised representation\n\tpublic write():string\n\t{\n\t\treturn new MDLSDFWriter(this.ds).write();\n\t}\n\n\t// ------------ private methods ------------\n\n\t// recursively add a component, and all of its subcomponents\n\tprivate appendComponent(comp:MixfileComponent, seq:number[]):void\n\t{\n\t\tlet row = this.ds.appendRow();\n\n\t\tlet mol:Molecule = null;\n\t\tif (comp.molfile)\n\t\t{\n\t\t\tmol = Molecule.fromString(comp.molfile);\n\t\t\tif (!mol)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tmol = new MDLMOLReader(comp.molfile).parse();\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\t\t\t}\n\t\t}\n\t\tif (!mol) mol = new Molecule();\n\n\t\tthis.ds.setMolecule(row, this.colMol, mol);\n\t\tif (comp.name) this.ds.setString(row, this.colName, comp.name);\n\t\tthis.ds.setString(row, this.colHier, seq.join('.'));\n\t\tthis.ds.setString(row, this.colConc, this.formatConcentration(comp));\n\n\t\tif (comp.contents) for (let n = 0; n < comp.contents.length; n++)\n\t\t{\n\t\t\tlet subseq = seq.slice(0);\n\t\t\tsubseq.push(n + 1);\n\t\t\tthis.appendComponent(comp.contents[n], subseq);\n\t\t}\n\t}\n\n\t// turns a concentration into a suitable precursor string, or null otherwise\n\tprivate formatConcentration(comp:MixfileComponent):string\n\t{\n\t\t/* ... this is a pseudo-MInChI approach ...\n\t\t// TODO: need special deal for ratio without denominator - can sometimes add them up to form an implicit denominator\n\n\t\tif (comp.ratio && comp.ratio.length >= 2)\n\t\t{\n\t\t\tlet numer = comp.ratio[0], denom = comp.ratio[1];\n\t\t\tif (!(denom > 0)) return null;\n\t\t\treturn (100 * numer / denom) + ' pp';\n\t\t}\n\n\t\tif (comp.quantity == null || comp.units == null) return null;\n\n\t\t// special deal (maybe temporary): units that are written with common names that map to a URI are converted automatically\n\t\tlet unitURI = comp.units;\n\t\tif (!unitURI.startsWith('http://')) unitURI = Units.nameToURI(unitURI);\n\t\tif (!unitURI) return;\n\n\t\t// TODO: maybe another special deal for absolute weight/volume/mole quantities - convert them into ratios, to the extent that's\n\t\t// possible... maybe approximating where necessary\n\n\t\tlet bits:string[] = [];\n\n\t\tif (comp.relation != null) bits.push(comp.relation);\n\n\t\tlet values:number[] = typeof comp.quantity == 'number' ? [comp.quantity as number] : comp.quantity;\n\n\t\tlet [mnemonic, scaled] = Units.convertToMInChI(unitURI, values);\n\t\tif (!mnemonic) return;\n\t\tbits.push(scaled[0].toString());\n\t\tif (scaled.length > 1) {bits.push('..'); bits.push(scaled[1].toString());}\n\t\tbits.push(mnemonic);\n\n\t\treturn bits.join(' ');*/\n\n\t\tlet useRatio:number = null;\n\t\tif (Vec.len(comp.ratio) == 2) useRatio = comp.ratio[0]; // mixfile ratios are stored as [numer, denom] where denom is checksum; could verify that this\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// is consistent before deigning to use it, but we're just passing it through\n\t\treturn ExportMInChI.formatConcentration(comp.quantity, comp.error, useRatio, comp.units, comp.relation);\n\t}\n}\n\n","export class FontData {\n    constructor() {\n        this.UNITS_PER_EM = 2048;\n        this.INV_UNITS_PER_EM = 1.0 / this.UNITS_PER_EM;\n        this.PANOSE_1 = '2 11 6 4 3 5 4 4 2 4';\n        this.ASCENT = 1638;\n        this.DESCENT = -410;\n        this.MISSING_HORZ = 2048;\n        this.MISSING_DATA = 'M256 0v1536h1536v-1536h-1536zM384 128h1280v1280h-1280v-1280z';\n        this.ASCENT_FUDGE = 0.9;\n        this.UNICODE = [\n            ' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<',\n            '=', '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n            '[', '\\\\', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\n            'x', 'y', 'z', '{', '|', '}', '~', '\\u00A0', '\\u00A1', '\\u00A2', '\\u00A3', '\\u00A4', '\\u00A5', '\\u00A6', '\\u00A7', '\\u00A8', '\\u00A9', '\\u00AA',\n            '\\u00AB', '\\u00AC', '\\u00AD', '\\u00AE', '\\u00AF', '\\u00B0', '\\u00B1', '\\u00B2', '\\u00B3', '\\u00B4', '\\u00B5', '\\u00B6', '\\u00B7', '\\u00B8', '\\u00B9',\n            '\\u00BA', '\\u00BB', '\\u00BC', '\\u00BD', '\\u00BE', '\\u00BF', '\\u00C0', '\\u00C1', '\\u00C2', '\\u00C3', '\\u00C4', '\\u00C5', '\\u00C6', '\\u00C7', '\\u00C8',\n            '\\u00C9', '\\u00CA', '\\u00CB', '\\u00CC', '\\u00CD', '\\u00CE', '\\u00CF', '\\u00D0', '\\u00D1', '\\u00D2', '\\u00D3', '\\u00D4', '\\u00D5', '\\u00D6', '\\u00D7',\n            '\\u00D8', '\\u00D9', '\\u00DA', '\\u00DB', '\\u00DC', '\\u00DD', '\\u00DE', '\\u00DF', '\\u00E0', '\\u00E1', '\\u00E2', '\\u00E3', '\\u00E4', '\\u00E5', '\\u00E6',\n            '\\u00E7', '\\u00E8', '\\u00E9', '\\u00EA', '\\u00EB', '\\u00EC', '\\u00ED', '\\u00EE', '\\u00EF', '\\u00F0', '\\u00F1', '\\u00F2', '\\u00F3', '\\u00F4', '\\u00F5',\n            '\\u00F6', '\\u00F7', '\\u00F8', '\\u00F9', '\\u00FA', '\\u00FB', '\\u00FC', '\\u00FD', '\\u00FE', '\\u037E', '\\u0384', '\\u0385', '\\u0386', '\\u0387', '\\u0388',\n            '\\u0389', '\\u038A', '\\u038C', '\\u038E', '\\u038F', '\\u0390', '\\u0391', '\\u0392', '\\u0393', '\\u0394', '\\u0395', '\\u0396', '\\u0397', '\\u0398', '\\u0399',\n            '\\u039A', '\\u039B', '\\u039C', '\\u039D', '\\u039E', '\\u039F', '\\u03A0', '\\u03A1', '\\u03A3', '\\u03A4', '\\u03A5', '\\u03A6', '\\u03A7', '\\u03A8', '\\u03A9',\n            '\\u03AA', '\\u03AB', '\\u03AC', '\\u03AD', '\\u03AE', '\\u03AF', '\\u03B0', '\\u03B1', '\\u03B2', '\\u03B3', '\\u03B4', '\\u03B5', '\\u03B6', '\\u03B7', '\\u03B8',\n            '\\u03B9', '\\u03BA', '\\u03BB', '\\u03BC', '\\u03BD', '\\u03BE', '\\u03BF', '\\u03C0', '\\u03C1', '\\u03C2', '\\u03C3', '\\u03C4', '\\u03C5', '\\u03C6', '\\u03C7',\n            '\\u03C8', '\\u03C9', '\\u03CA', '\\u03CB', '\\u03CC', '\\u03CD', '\\u03CE', '\\u2202', '\\u2206', '\\u220F', '\\u2211', '\\u2212', '\\u2215', '\\u2219', '\\u221A',\n            '\\u221E', '\\u222B', '\\u2248', '\\u2260', '\\u2264', '\\u2265'\n        ];\n        this.HORIZ_ADV_X = [\n            720, 806, 940, 1676, 1302, 2204, 1488, 550, 930, 930, 1302, 1676, 745, 930, 745, 930, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302,\n            930, 930, 1676, 1676, 1676, 1117, 2048, 1400, 1404, 1430, 1578, 1295, 1177, 1588, 1539, 862, 931, 1419, 1140, 1726, 1532, 1612, 1235, 1612, 1424,\n            1400, 1262, 1499, 1400, 2025, 1403, 1260, 1403, 930, 930, 930, 1676, 1302, 1302, 1230, 1276, 1067, 1276, 1220, 720, 1276, 1296, 562, 705, 1212, 562,\n            1992, 1296, 1243, 1276, 1276, 874, 1067, 807, 1296, 1212, 1676, 1212, 1212, 1076, 1300, 930, 1300, 1676, 720, 806, 1302, 1302, 1302, 1302, 930, 1302,\n            1302, 2048, 1117, 1320, 1676, 930, 2048, 1302, 1110, 1676, 1110, 1110, 1302, 1314, 1302, 745, 1302, 1110, 1117, 1320, 2048, 2048, 2048, 1117, 1400,\n            1400, 1400, 1400, 1400, 1400, 2016, 1430, 1295, 1295, 1295, 1295, 862, 862, 862, 862, 1588, 1532, 1612, 1612, 1612, 1612, 1612, 1676, 1612, 1499,\n            1499, 1499, 1499, 1260, 1240, 1270, 1230, 1230, 1230, 1230, 1230, 1230, 1956, 1067, 1220, 1220, 1220, 1220, 562, 562, 562, 562, 1253, 1296, 1243,\n            1243, 1243, 1243, 1243, 1676, 1243, 1296, 1296, 1296, 1296, 1212, 1276, 930, 1302, 1302, 1400, 930, 1538, 1782, 1105, 1804, 1543, 1859, 562, 1400,\n            1404, 1160, 1440, 1295, 1403, 1539, 1612, 862, 1419, 1404, 1726, 1532, 1329, 1612, 1539, 1235, 1377, 1262, 1260, 1677, 1403, 1783, 1676, 862, 1260,\n            1276, 1050, 1296, 562, 1293, 1276, 1270, 1212, 1245, 1050, 937, 1296, 1278, 562, 1212, 1212, 1310, 1212, 1030, 1243, 1305, 1280, 1040, 1291, 1016,\n            1293, 1618, 1208, 1683, 1666, 562, 1293, 1243, 1293, 1666, 1302, 1489, 1676, 1489, 1676, 740, 745, 1676, 2048, 1302, 1676, 1676, 1676, 1676\n        ];\n        this.GLYPH_DATA = [\n            '',\n            'M515 1489l-26 -1079h-170l-28 1079h224zM505 0h-204v211h204v-211z',\n            'M772 1556l-43 -579h-132l-43 579h218zM386 1556l-43 -579h-132l-43 579h218z',\n            'M1481 932h-333l-92 -376h308v-135h-343l-104 -421h-129l104 421h-270l-104 -421h-129l104 421h-298v135h333l92 376h-308v135h343l105 422h129l-105 -422h270l105 422h129l-105 -422h298v-135zM1022 934h-274l-94 -380h274z',\n            'M1160 380q0 -155 -121 -257.5t-317 -121.5v-362h-118v357q-132 1 -248 25.5t-201 63.5v198h16q19 -14 68 -40.5t95 -43.5q52 -19 121.5 -35.5t148.5 -19.5v433q-40 8 -74 15.5t-63 15.5q-163 41 -234 123.5t-71 203.5q0 148 116.5 250t325.5 119v272h118v-270 q101 -2 207 -24t178 -51v-196h-14q-75 46 -156.5 81.5t-214.5 44.5v-431q30 -5 65 -13.5t61 -13.5q149 -32 230.5 -110t81.5 -213zM604 747v413q-107 -8 -180 -58.5t-73 -140.5q0 -91 54 -137t199 -77zM971 354q0 94 -58.5 137.5t-190.5 68.5v-414q120 12 184.5 61t64.5 147 z',\n            'M884 1076q0 -224 -94.5 -333t-272.5 -109q-182 0 -275 109t-93 332q0 224 95 333t273 109q181 0 274 -110t93 -331zM1575 1489l-780 -1489h-165l780 1489h165zM2055 413q0 -224 -95 -333t-273 -109q-181 0 -274 110t-93 331q0 224 94.5 333t272.5 109q182 0 275 -109 t93 -332zM706 1076q0 172 -44.5 240t-144.5 68q-102 0 -146 -68t-44 -241t44 -240.5t146 -67.5q100 0 144.5 67.5t44.5 241.5zM1877 413q0 172 -44.5 240t-144.5 68q-102 0 -146 -68t-44 -241t44 -240.5t146 -67.5q100 0 144.5 67.5t44.5 241.5z',\n            'M792 1191q0 95 -56.5 149.5t-144.5 54.5q-92 0 -150 -61.5t-58 -150.5q0 -75 39.5 -133t170.5 -137q98 35 148.5 102.5t50.5 175.5zM986 315l-478 466q-31 -15 -62 -39.5t-62 -66.5q-28 -39 -46 -94t-18 -124q0 -146 85.5 -235.5t242.5 -89.5q93 0 184.5 45.5 t153.5 137.5zM1287 909v-96q0 -96 -25 -216t-85 -229l378 -368h-246l-229 224q-115 -142 -235 -198.5t-247 -56.5q-208 0 -345.5 121.5t-137.5 318.5q0 92 26 159t61 116q35 47 87 88.5t105 72.5q-110 72 -158.5 145t-48.5 184q0 67 26.5 127.5t79.5 110.5q50 48 130.5 78 t177.5 30q173 0 280 -87.5t107 -221.5q0 -44 -12 -99.5t-41 -99.5q-32 -49 -91 -94t-153 -77l371 -362q14 40 21 88t8 100q2 56 1.5 125t-0.5 117h195z',\n            'M386 1556l-43 -579h-136l-43 579h222z',\n            'M783 -412h-229q-177 203 -275 443t-98 541t98 541t275 443h229v-10q-81 -73 -154.5 -168.5t-136.5 -222.5q-60 -123 -97.5 -271t-37.5 -312q0 -171 36.5 -313t98.5 -270q60 -123 137 -222.5t154 -168.5v-10z',\n            'M749 572q0 -301 -98 -541t-275 -443h-229v10q77 69 154.5 168.5t136.5 222.5q62 128 98.5 270t36.5 313q0 164 -37 312t-98 271q-63 127 -136.5 222.5t-154.5 168.5v10h229q177 -203 275 -443t98 -541z',\n            'M1137 887l-64 -110l-362 213l6 -360h-129l5 360l-361 -214l-65 110l381 207l-381 207l65 110l362 -213l-6 359h129l-7 -359l363 212l64 -110l-380 -205z',\n            'M1466 572h-545v-545h-166v545h-545v160h545v545h166v-545h545v-160z',\n            'M575 285l-282 -655h-146l174 655h254z',\n            'M777 561h-624v181h624v-181z',\n            'M492 0h-239v285h239v-285z',\n            'M860 1556l-717 -1860h-173l714 1860h176z',\n            'M1167 745q0 -401 -125.5 -588.5t-389.5 -187.5q-268 0 -391.5 190t-123.5 584q0 397 125 586.5t390 189.5q268 0 391.5 -192.5t123.5 -581.5zM904 291q35 81 47.5 190.5t12.5 263.5q0 152 -12.5 264t-48.5 190q-35 77 -95.5 116t-155.5 39q-94 0 -155.5 -39t-97.5 -118 q-34 -74 -46.5 -193t-12.5 -261q0 -156 11 -261t47 -188q33 -78 93.5 -119t160.5 -41q94 0 156 39t96 118z',\n            'M1084 0h-806v152h310v998h-310v136q63 0 135 10.5t109 30.5q46 25 72.5 63.5t30.5 103.5h155v-1342h304v-152z',\n            'M1169 0h-1008v209q105 90 210.5 180t196.5 179q192 186 263 295.5t71 236.5q0 116 -76.5 181.5t-213.5 65.5q-91 0 -197 -32t-207 -98h-10v210q71 35 189.5 64t229.5 29q229 0 359 -110.5t130 -299.5q0 -85 -21.5 -158.5t-63.5 -139.5q-39 -62 -91.5 -122t-127.5 -133 q-107 -105 -221 -203.5t-213 -182.5h801v-171z',\n            'M1038 717q48 -43 79 -108t31 -168q0 -102 -37 -187t-104 -148q-75 -70 -176.5 -103.5t-222.5 -33.5q-124 0 -244 29.5t-197 64.5v209h15q85 -56 200 -93t222 -37q63 0 134 21t115 62q46 44 68.5 97t22.5 134q0 80 -25.5 132.5t-70.5 82.5q-45 31 -109 42.5t-138 11.5h-90 v166h70q152 0 242.5 63.5t90.5 185.5q0 54 -23 94.5t-64 66.5q-43 26 -92 36t-111 10q-95 0 -202 -34t-202 -96h-10v209q71 35 189.5 64.5t229.5 29.5q109 0 192 -20t150 -64q72 -48 109 -116t37 -159q0 -124 -87.5 -216.5t-206.5 -116.5v-14q48 -8 110 -33.5t105 -63.5z ',\n            'M1203 419h-221v-419h-192v419h-713v230l721 840h184v-910h221v-160zM790 579v672l-577 -672h577z',\n            'M1157 473q0 -104 -38 -199t-104 -160q-72 -70 -171.5 -107.5t-230.5 -37.5q-122 0 -235 25.5t-191 61.5v211h14q82 -52 192 -88.5t216 -36.5q71 0 137.5 20t118.5 70q44 43 66.5 103t22.5 139q0 77 -26.5 130t-73.5 85q-52 38 -126.5 53.5t-166.5 15.5q-88 0 -169.5 -12 t-140.5 -24v767h896v-175h-703v-396q43 4 88 6t78 2q121 0 212 -20.5t167 -72.5q80 -55 124 -142t44 -218z',\n            'M1191 483q0 -227 -149.5 -370.5t-366.5 -143.5q-110 0 -200 34t-159 101q-86 83 -132.5 220t-46.5 330q0 198 42.5 351t135.5 272q88 113 227 176.5t324 63.5q59 0 99 -5t81 -18v-191h-10q-28 15 -84.5 28.5t-115.5 13.5q-215 0 -343 -134.5t-149 -363.5 q84 51 165.5 77.5t188.5 26.5q95 0 167.5 -17.5t148.5 -70.5q88 -61 132.5 -154t44.5 -226zM988 475q0 93 -27.5 154t-90.5 106q-46 32 -102 42t-117 10q-85 0 -158 -20t-150 -62q-2 -22 -3 -42.5t-1 -51.5q0 -158 32.5 -249.5t89.5 -144.5q46 -44 99.5 -64.5t116.5 -20.5 q145 0 228 88.5t83 254.5z',\n            'M1173 1266l-674 -1266h-214l717 1314h-848v175h1019v-223z',\n            'M1180 415q0 -193 -150.5 -321t-378.5 -128q-242 0 -385.5 125t-143.5 320q0 124 72 224.5t203 159.5v6q-120 64 -177.5 140t-57.5 190q0 168 138 280t351 112q223 0 356 -107t133 -272q0 -101 -63 -198.5t-185 -152.5v-6q140 -60 214 -148t74 -224zM943 1142 q0 107 -82.5 170.5t-210.5 63.5q-126 0 -206.5 -60t-80.5 -162q0 -72 40.5 -124.5t122.5 -93.5q37 -18 106.5 -47t135.5 -48q99 66 137 137t38 164zM974 396q0 92 -40.5 147.5t-158.5 111.5q-47 22 -103 41t-149 53q-90 -49 -144.5 -133t-54.5 -190q0 -135 93 -223t236 -88 q146 0 233.5 75t87.5 206z',\n            'M1167 834q0 -195 -44.5 -354t-134.5 -271q-91 -114 -228 -176t-322 -62q-52 0 -98 5.5t-82 17.5v191h10q29 -15 82 -28.5t118 -13.5q221 0 346.5 132.5t145.5 365.5q-93 -56 -175 -80t-179 -24q-92 0 -166.5 18t-149.5 70q-88 61 -132.5 155t-44.5 225q0 228 150 371 t366 143q108 0 200 -33.5t161 -100.5q85 -83 131 -213.5t46 -337.5zM965 877q0 155 -32 249t-88 146q-47 45 -101 64.5t-117 19.5q-144 0 -227.5 -90t-83.5 -253q0 -95 27 -155t91 -105q45 -31 99 -41.5t120 -10.5q78 0 158 21t150 61q1 21 2.5 41.5t1.5 52.5z',\n            'M585 832h-239v285h239v-285zM585 0h-239v285h239v-285z',\n            'M585 832h-239v285h239v-285zM658 285l-282 -655h-146l174 655h254z',\n            'M1408 77l-1154 513v124l1154 513v-180l-910 -395l910 -395v-180z',\n            'M1431 782h-1186v160h1186v-160zM1431 362h-1186v160h1186v-160z',\n            'M1422 590l-1154 -513v180l910 395l-910 395v180l1154 -513v-124z',\n            'M1005 1139q0 -98 -35 -174.5t-92 -135.5q-56 -57 -129 -107t-155 -97v-225h-179v305q65 37 140.5 81t123.5 89q58 52 90 107.5t32 141.5q0 113 -76.5 168.5t-197.5 55.5q-108 0 -204.5 -34t-152.5 -69h-10v204q70 27 177.5 48.5t203.5 21.5q215 0 339.5 -104.5 t124.5 -275.5zM610 0h-204v211h204v-211z',\n            'M1870 663q0 -139 -40.5 -269t-115.5 -237h-440l-27 116q-74 -60 -142 -92t-156 -32q-168 0 -268.5 127t-100.5 355q0 227 123 362t294 135q73 0 129 -16.5t121 -49.5v48h159v-842h243q42 75 63.5 187.5t21.5 201.5q0 164 -45.5 298t-133.5 230t-218 147.5t-295 51.5 q-160 0 -292.5 -58t-227.5 -156q-96 -98 -150.5 -234.5t-54.5 -290.5q0 -165 52 -301.5t147 -233.5q99 -101 232 -152.5t290 -51.5q86 0 177.5 11t175.5 35v-142q-97 -21 -181 -28.5t-173 -7.5q-186 0 -345 63.5t-273 177.5q-115 115 -179 276t-64 356q0 185 67 344.5 t183 276.5t275 184t340 67q196 0 350 -62t260 -174t162.5 -269.5t56.5 -350.5zM1245 408v518q-63 29 -113 41.5t-107 12.5q-129 0 -202 -90t-73 -256q0 -163 58 -246.5t181 -83.5q67 0 134 31t122 73z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523z',\n            'M1323 458q0 -111 -42 -196t-113 -140q-84 -66 -184.5 -94t-255.5 -28h-528v1489h441q163 0 244 -12t155 -50q82 -43 119 -110.5t37 -161.5q0 -106 -54 -180.5t-144 -119.5v-8q151 -31 238 -132.5t87 -256.5zM990 1129q0 54 -18 91t-58 60q-47 27 -114 33.5t-166 6.5h-236 v-430h256q93 0 148 9.5t102 39.5t66.5 77.5t19.5 112.5zM1117 450q0 90 -27 143t-98 90q-48 25 -116.5 32.5t-166.5 7.5h-311v-554h262q130 0 213 13.5t136 49.5q56 39 82 89t26 129z',\n            'M1350 108q-55 -24 -99.5 -45t-116.5 -44q-61 -19 -132.5 -32.5t-157.5 -13.5q-162 0 -294.5 45.5t-230.5 142.5q-96 95 -150 241.5t-54 340.5q0 184 52 329t150 245q95 97 229.5 148t298.5 51q120 0 239.5 -29t265.5 -102v-235h-15q-123 103 -244 150t-259 47 q-113 0 -203.5 -36.5t-161.5 -113.5q-69 -75 -107.5 -189.5t-38.5 -264.5q0 -157 42.5 -270t109.5 -184q70 -74 163.5 -109.5t197.5 -35.5q143 0 268 49t234 147h14v-232z',\n            'M1458 743q0 -203 -88.5 -368t-235.5 -256q-102 -63 -227.5 -91t-330.5 -28h-376v1489h372q218 0 346.5 -31.5t217.5 -86.5q152 -95 237 -253t85 -375zM1251 746q0 175 -61 295t-182 189q-88 50 -187 69.5t-237 19.5h-186v-1149h186q143 0 249.5 21t195.5 78 q111 71 166.5 187t55.5 290z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176z',\n            'M1151 1313h-753v-420h647v-176h-647v-717h-198v1489h951v-176z',\n            'M1442 110q-122 -56 -266.5 -97.5t-279.5 -41.5q-174 0 -319 48t-247 144q-103 97 -159 242.5t-56 340.5q0 357 208.5 563.5t572.5 206.5q127 0 259.5 -30.5t285.5 -103.5v-235h-18q-31 24 -90 63t-116 65q-69 31 -156.5 51.5t-198.5 20.5q-250 0 -395.5 -160.5 t-145.5 -434.5q0 -289 152 -449.5t414 -160.5q96 0 191.5 19t167.5 49v365h-399v174h595v-639z',\n            'M1339 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152z',\n            'M746 387q0 -196 -119.5 -302t-320.5 -106q-48 0 -128 8.5t-134 20.5v185h11q41 -14 101 -29t123 -15q92 0 146.5 21t80.5 60q27 40 34.5 98t7.5 134v869h-315v158h513v-1102z',\n            'M1397 0h-257l-589 663l-148 -158v-505h-198v1489h198v-777l723 777h240l-665 -700z',\n            'M1142 0h-942v1489h198v-1313h744v-176z',\n            'M1526 0h-198v1283l-414 -873h-118l-411 873v-1283h-185v1489h270l397 -829l384 829h275v-1489z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1174 1039q0 -99 -34.5 -183.5t-96.5 -146.5q-77 -77 -182 -115.5t-265 -38.5h-198v-555h-198v1489h404q134 0 227 -22.5t165 -70.5q85 -57 131.5 -142t46.5 -215zM968 1034q0 77 -27 134t-82 93q-48 31 -109.5 44.5t-155.5 13.5h-196v-595h167q120 0 195 21.5t122 68.5 q47 48 66.5 101t19.5 119z',\n            'M1528 -365q-60 -15 -118.5 -21.5t-119.5 -6.5q-174 0 -279.5 95.5t-114.5 273.5q-24 -4 -46.5 -5.5t-43.5 -1.5q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5 q91 -100 139.5 -245t48.5 -329q0 -273 -111.5 -460t-299.5 -262q4 -114 54 -177t182 -63q41 0 97.5 12.5t80.5 22.5h27v-182zM1292 744q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1432 0h-257l-498 592h-279v-592h-198v1489h417q135 0 225 -17.5t162 -62.5q81 -51 126.5 -128.5t45.5 -196.5q0 -161 -81 -269.5t-223 -163.5zM969 1070q0 64 -22.5 113.5t-74.5 83.5q-43 29 -102 40.5t-139 11.5h-233v-562h200q94 0 164 16.5t119 61.5q45 42 66.5 96.5 t21.5 138.5z',\n            'M1282 425q0 -87 -40.5 -172t-113.5 -144q-80 -64 -186.5 -100t-256.5 -36q-161 0 -289.5 30t-261.5 89v248h14q113 -94 261 -145t278 -51q184 0 286.5 69t102.5 184q0 99 -48.5 146t-147.5 73q-75 20 -162.5 33t-185.5 33q-198 42 -293.5 143.5t-95.5 264.5 q0 187 158 306.5t401 119.5q157 0 288 -30t232 -74v-234h-14q-85 72 -223.5 119.5t-283.5 47.5q-159 0 -255.5 -66t-96.5 -170q0 -93 48 -146t169 -81q64 -14 182 -34t200 -41q166 -44 250 -133t84 -249z',\n            'M1262 1313h-532v-1313h-198v1313h-532v176h1262v-176z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891z',\n            'M1374 1489l-542 -1489h-264l-542 1489h212l467 -1310l467 1310h202z',\n            'M1933 1489l-387 -1489h-223l-313 1236l-306 -1236h-218l-394 1489h203l313 -1238l308 1238h201l311 -1250l311 1250h194z',\n            'M1336 1489l-514 -736l513 -753h-229l-406 613l-416 -613h-216l519 744l-507 745h228l401 -605l410 605h217z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211z',\n            'M1288 0h-1162v184l913 1129h-879v176h1106v-179l-922 -1134h944v-176z',\n            'M759 -392h-520v1948h520v-143h-346v-1662h346v-143z',\n            'M960 -304h-173l-717 1860h176z',\n            'M691 -392h-520v143h346v1662h-346v143h520v-1948z',\n            'M1490 684h-198l-455 627l-454 -629h-197l589 807h126z',\n            'M1306 -300h-1310v120h1310v-120z',\n            'M762 1302h-149l-273 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5z',\n            'M1168 567q0 -140 -39.5 -252t-106.5 -188q-71 -79 -156 -118.5t-187 -39.5q-95 0 -166 22.5t-140 60.5l-12 -52h-176v1556h188v-556q79 65 168 106.5t200 41.5q198 0 312.5 -152t114.5 -429zM974 562q0 200 -66 303.5t-213 103.5q-82 0 -166 -35.5t-156 -91.5v-640 q80 -36 137.5 -50t130.5 -14q156 0 244.5 102.5t88.5 321.5z',\n            'M1011 70q-94 -45 -178.5 -70t-179.5 -25q-121 0 -222 35.5t-173 107.5q-73 72 -113 182t-40 257q0 274 150.5 430t397.5 156q96 0 188.5 -27t169.5 -66v-209h-10q-86 67 -177.5 103t-178.5 36q-160 0 -252.5 -107.5t-92.5 -315.5q0 -202 90.5 -310.5t254.5 -108.5 q57 0 116 15t106 39q41 21 77 44.5t57 40.5h10v-207z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -18.5t143 -57.5v484h188v-1556zM903 275v641q-76 34 -136 47t-131 13q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640z',\n            'M786 1374h-10q-31 9 -81 18.5t-88 9.5q-121 0 -175.5 -53.5t-54.5 -193.5v-38h339v-158h-333v-959h-188v959h-127v158h127v37q0 199 99 305.5t286 106.5q63 0 113.5 -6t92.5 -14v-172z',\n            'M1091 127q0 -284 -129 -417t-397 -133q-89 0 -173.5 12.5t-166.5 35.5v192h10q46 -18 146 -44.5t200 -26.5q96 0 159 23t98 64q35 39 50 94t15 123v102q-85 -68 -162.5 -101.5t-197.5 -33.5q-200 0 -317.5 144.5t-117.5 407.5q0 144 40.5 248.5t110.5 180.5 q65 71 158 110.5t185 39.5q97 0 162.5 -19.5t138.5 -59.5l12 48h176v-990zM903 307v609q-75 34 -139.5 48.5t-128.5 14.5q-155 0 -244 -104t-89 -302q0 -188 66 -285t219 -97q82 0 164.5 31.5t151.5 84.5z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1556h188v-563q88 73 182 114t193 41q181 0 276 -109t95 -314v-725z',\n            'M387 1304h-212v195h212v-195zM375 0h-188v1117h188v-1117z',\n            'M533 1304h-212v195h212v-195zM521 -27q0 -196 -100 -296t-268 -100q-40 0 -105.5 8t-109.5 20v179h10q28 -11 75.5 -25t92.5 -14q72 0 116 20t66 60t28.5 96.5t6.5 137.5v900h-233v158h421v-1144z',\n            'M1199 0h-248l-448 489l-122 -116v-373h-188v1556h188v-998l543 559h237l-519 -516z',\n            'M375 0h-188v1556h188v-1556z',\n            'M1815 0h-188v636q0 72 -6.5 139t-27.5 107q-23 43 -66 65t-124 22q-79 0 -158 -39.5t-158 -100.5q3 -23 5 -53.5t2 -60.5v-715h-188v636q0 74 -6.5 140.5t-27.5 106.5q-23 43 -66 64.5t-124 21.5q-77 0 -154.5 -38t-154.5 -97v-834h-188v1117h188v-124q88 73 175.5 114 t186.5 41q114 0 193.5 -48t118.5 -133q114 96 208 138.5t201 42.5q184 0 271.5 -111.5t87.5 -311.5v-725z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-725z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z',\n            'M1168 572q0 -136 -39 -248.5t-110 -190.5q-66 -74 -155.5 -114.5t-189.5 -40.5q-87 0 -157.5 19t-143.5 59v-468h-188v1529h188v-117q75 63 168.5 105.5t199.5 42.5q202 0 314.5 -152.5t112.5 -423.5zM974 567q0 202 -69 302t-212 100q-81 0 -163 -35t-157 -92v-633 q80 -36 137.5 -49t130.5 -13q157 0 245 106t88 314z',\n            'M1091 -412h-188v538q-87 -75 -173 -111.5t-186 -36.5q-199 0 -317.5 153.5t-118.5 423.5q0 144 41.5 254.5t109.5 185.5q66 73 155 113t188 40q90 0 159.5 -20t141.5 -59l12 48h176v-1529zM903 284v632q-78 35 -138 49t-130 14q-163 0 -248 -110.5t-85 -304.5 q0 -196 68.5 -301.5t215.5 -105.5q82 0 164 35.5t153 91.5z',\n            'M882 912h-10q-42 10 -81.5 14.5t-93.5 4.5q-87 0 -168 -38.5t-156 -99.5v-793h-188v1117h188v-165q112 90 197.5 127.5t174.5 37.5q49 0 71 -2.5t66 -9.5v-193z',\n            'M983 322q0 -153 -126.5 -251t-345.5 -98q-124 0 -227.5 29.5t-173.5 64.5v211h10q89 -67 198 -106.5t209 -39.5q124 0 194 40t70 126q0 66 -38 100t-146 58q-40 9 -104.5 21t-117.5 26q-147 39 -208.5 114.5t-61.5 185.5q0 69 28.5 130t86.5 109q56 47 142.5 74.5 t193.5 27.5q100 0 202.5 -24.5t170.5 -59.5v-201h-10q-72 53 -175 89.5t-202 36.5q-103 0 -174 -39.5t-71 -117.5q0 -69 43 -104q42 -35 136 -57q52 -12 116.5 -24t107.5 -22q131 -30 202 -103q71 -74 71 -196z',\n            'M765 10q-53 -14 -115.5 -23t-111.5 -9q-171 0 -260 92t-89 295v594h-127v158h127v321h188v-321h388v-158h-388v-509q0 -88 4 -137.5t28 -92.5q22 -40 60.5 -58.5t117.5 -18.5q46 0 96 13.5t72 22.5h10v-169z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117z',\n            'M1151 1117l-452 -1117h-189l-449 1117h204l346 -889l343 889h197z',\n            'M1590 1117l-291 -1117h-174l-287 861l-285 -861h-173l-294 1117h196l205 -865l279 865h155l286 -865l194 865h189z',\n            'M1152 0h-237l-317 429l-319 -429h-219l436 557l-432 560h237l315 -422l316 422h220l-439 -550z',\n            'M1151 1117l-652 -1529h-201l208 466l-445 1063h204l343 -828l346 828h197z',\n            'M995 0h-902v139l651 821h-637v157h871v-134l-654 -824h671v-159z',\n            'M1113 -392h-150q-179 0 -290.5 99.5t-111.5 287.5v149q0 169 -83 264.5t-254 95.5h-51v156h51q171 0 254 95.5t83 264.5v149q0 188 111.5 287.5t290.5 99.5h150v-138h-114q-136 0 -197.5 -63t-61.5 -203v-175q0 -139 -77 -233.5t-214 -149.5v-24q137 -55 214 -149.5 t77 -233.5v-175q0 -140 61.5 -203t197.5 -63h114v-138z',\n            'M552 -392h-174v1948h174v-1948z',\n            'M1127 504h-51q-171 0 -254 -95.5t-83 -264.5v-149q0 -188 -111.5 -287.5t-290.5 -99.5h-150v138h114q136 0 197.5 63t61.5 203v175q0 139 77 233.5t214 149.5v24q-137 55 -214 149.5t-77 233.5v175q0 140 -61.5 203t-197.5 63h-114v138h150q179 0 290.5 -99.5 t111.5 -287.5v-149q0 -169 83 -264.5t254 -95.5h51v-156z',\n            'M1489 927q-2 -99 -22.5 -195t-65.5 -171q-46 -77 -111 -121t-165 -44q-94 0 -167 39.5t-157 141.5q-102 125 -148 157t-96 32q-94 0 -144 -87.5t-59 -283.5h-167q2 100 22.5 194.5t64.5 171.5q43 74 112 119.5t165 45.5q93 0 166.5 -38.5t158.5 -142.5q80 -98 131 -143.5 t112 -45.5q103 0 151.5 101t51.5 270h167z',\n            '',\n            'M505 1278h-204v211h204v-211zM515 0h-224l26 1079h170z',\n            'M1120 74q-71 -30 -161 -53.5t-194 -26.5v-355h-118v359q-227 21 -357.5 165t-130.5 394q0 242 133.5 391.5t354.5 171.5v355h118v-351q104 -3 197 -25t158 -53v-203h-11q-55 44 -142 85t-202 50v-839q120 10 206.5 52.5t137.5 83.5h11v-201zM647 142v834 q-135 -20 -216 -125t-81 -294q0 -181 76 -286t221 -129z',\n            'M1163 0h-1026v207q118 32 169.5 126.5t51.5 279.5h-176v138h176v310q0 200 126.5 328.5t331.5 128.5q105 0 181 -17t140 -34v-206h-10q-62 42 -138 66t-162 24q-140 0 -209.5 -82.5t-69.5 -226.5v-291h415v-138h-415v-61q0 -126 -62 -219.5t-160 -150.5v-11h837v-171z ',\n            'M1168 257l-110 -110l-236 234q-44 -26 -81 -37t-89 -11q-46 0 -89.5 12.5t-79.5 35.5l-236 -236l-109 113l233 234q-23 37 -35 81.5t-12 87.5q0 52 11 88.5t37 79.5l-234 237l111 110l235 -235q36 23 79.5 35.5t88.5 12.5q44 0 88 -12t81 -35l234 234l113 -109l-235 -237 q24 -38 36 -79.5t12 -89.5q0 -45 -12.5 -89t-35.5 -80zM832 661q0 73 -52.5 129t-127.5 56q-73 0 -126.5 -55t-53.5 -130q0 -74 52.5 -129.5t127.5 -55.5q73 0 126.5 54.5t53.5 130.5z',\n            'M1191 1489l-448 -831v-94h372v-138h-370v-426h-188v426h-370v138h372v73l-451 852h212l332 -659l336 659h203z',\n            'M552 758h-174v798h174v-798zM552 -392h-174v798h174v-798z',\n            'M1128 601q0 -106 -59 -187t-158 -136v-7q97 -46 141 -118.5t44 -162.5q0 -77 -33 -146t-98 -119q-72 -56 -169 -83t-221 -27q-87 0 -170.5 13.5t-175.5 44.5v194h10q79 -37 169 -62t198 -25q134 0 215 48.5t81 135.5q0 56 -19.5 88.5t-64.5 57.5q-41 23 -113 41.5 t-154 38.5q-214 52 -296 133q-83 81 -83 210q0 98 57 182.5t159 141.5v7q-101 48 -143 121t-42 162q0 81 32 146.5t99 117.5q64 50 163.5 79t227.5 29q87 0 171 -14t175 -43v-194h-10q-58 27 -152.5 57t-215.5 30q-127 0 -211.5 -46t-84.5 -133q0 -57 21.5 -92.5t64.5 -58.5 t109 -41.5t157 -39.5q200 -46 290 -125q89 -79 89 -218zM881 399q28 33 43 65.5t15 90.5q0 51 -16.5 86t-45.5 58q-28 24 -67 39.5t-83 27.5q-39 11 -85.5 21.5t-116.5 30.5q-18 -9 -49 -31.5t-53 -46.5q-24 -26 -43 -69t-19 -92q0 -50 15.5 -85t44.5 -59q27 -23 67.5 -39 t84.5 -27q38 -10 86 -22t115 -31q20 11 53 34.5t54 48.5z',\n            'M958 1304h-199v195h199v-195zM545 1304h-199v195h199v-195z',\n            'M1889 655q0 -358 -253.5 -611.5t-611.5 -253.5t-611.5 253.5t-253.5 611.5t253.5 611.5t611.5 253.5t611.5 -253.5t253.5 -611.5zM1773 655q0 310 -219.5 532t-529.5 222t-529.5 -222t-219.5 -532t219.5 -532t529.5 -222t529.5 222t219.5 532zM1375 258 q-86 -39 -165.5 -58.5t-157.5 -19.5q-227 0 -359 123t-132 357q0 225 134.5 354t356.5 129q89 0 175 -24t148 -52v-181h-16q-54 40 -138.5 75t-173.5 35q-142 0 -221.5 -85.5t-79.5 -250.5q0 -159 76.5 -246t224.5 -87q83 0 161.5 29t150.5 81h16v-179z',\n            'M944 554h-170v94q-28 -20 -52.5 -38.5t-68.5 -37.5q-45 -20 -85.5 -30.5t-113.5 -10.5q-128 0 -215.5 85t-87.5 217q0 106 46.5 173.5t123.5 103.5q78 36 197.5 51.5t255.5 21.5v18q0 53 -18 85t-51 51q-34 18 -77.5 23t-91.5 5q-84 0 -168 -24t-123 -38h-14v172 q45 13 137 29t169 16q217 0 312 -84.5t95 -243.5v-638zM774 796v245q-69 -4 -160.5 -12t-145.5 -23q-64 -18 -103 -56.5t-39 -106.5q0 -76 45.5 -114t139.5 -38q82 0 147.5 33.5t115.5 71.5z',\n            'M1146 191l-528 419v85l528 418v-188l-357 -273l357 -273v-188zM716 162l-550 446v89l550 445v-196l-371 -294l371 -294v-196z',\n            'M1456 57h-171v545h-1075v160h1246v-705z',\n            'M777 561h-624v181h624v-181z',\n            'M1889 655q0 -358 -253.5 -611.5t-611.5 -253.5t-611.5 253.5t-253.5 611.5t253.5 611.5t611.5 253.5t611.5 -253.5t253.5 -611.5zM1773 655q0 310 -219.5 532t-529.5 222t-529.5 -222t-219.5 -532t219.5 -532t529.5 -222t529.5 222t219.5 532zM1581 215h-223l-331 355 h-162v-355h-165v915h312q94 0 155 -8t120 -39q63 -34 92.5 -82.5t29.5 -121.5q0 -97 -56.5 -161.5t-155.5 -102.5zM1229 868q0 36 -14 64t-47 46q-31 17 -66 22t-88 5h-149v-309h127q62 0 107 9.5t74 32.5q31 25 43.5 55t12.5 75z',\n            'M1306 1668h-1305l-5 120h1310v-120z',\n            'M956 1116q0 -168 -116 -284t-285 -116t-285 115.5t-116 284.5q0 168 116 284t285 116q170 0 285.5 -116t115.5 -284zM791 1116q0 102 -67 171.5t-169 69.5t-169 -69.5t-67 -171.5q0 -104 68.5 -172.5t167.5 -68.5q102 0 169 70t67 171z',\n            'M1461 179h-1246v158h540v422h-540v158h540v545h166v-545h540v-158h-540v-422h540v-158z',\n            'M967 566h-760v156q100 62 183.5 117t134.5 96q131 103 168 154.5t37 135.5q0 69 -53.5 107t-143.5 38q-89 0 -175 -30.5t-134 -61.5h-13v180q71 26 158.5 43.5t174.5 17.5q180 0 273.5 -78.5t93.5 -203.5q0 -99 -48.5 -174.5t-163.5 -165.5q-55 -43 -132.5 -94 t-143.5 -92h544v-145z',\n            'M956 817q0 -75 -33 -131.5t-89 -90.5q-57 -35 -131 -51.5t-163 -16.5q-94 0 -176.5 15t-156.5 43v179h14q41 -36 138.5 -65.5t190.5 -29.5q100 0 166.5 35.5t66.5 110.5q0 85 -59 115t-171 30h-143v141h128q112 0 165.5 38.5t53.5 106.5q0 61 -49.5 96.5t-153.5 35.5 q-77 0 -174.5 -31t-141.5 -67h-14v178q74 27 160.5 44.5t176.5 17.5q175 0 271.5 -68t96.5 -174q0 -89 -55 -146t-144 -83v-8q95 -17 160.5 -72.5t65.5 -151.5z',\n            'M963 1676l-273 -374h-149l179 374h243z',\n            'M1124 0h-178l-10 118q-59 -65 -123.5 -102t-155.5 -37q-86 0 -149.5 35t-129.5 99v-525h-188v1529h188v-838q32 -39 109.5 -80t168.5 -41q93 0 159.5 33.5t120.5 93.5v832h188v-1117z',\n            'M1106 -363h-148v1722h-214v-1722h-149v956q-206 5 -332 129t-126 328q0 207 130 323t373 116h466v-1852z',\n            'M492 511h-239v283h239v-283z',\n            'M880 -89q0 -162 -91.5 -248t-237.5 -86q-37 0 -95 7t-103 19v160h9q26 -10 70 -23t94 -13q104 0 153 39t49 127q0 29 -3 65.5t-6 61.5h153q2 -19 5 -45t3 -64z',\n            'M914 566h-615v122h234v568h-242v112q45 0 99 6.5t84 18.5q37 16 59 38t25 62h135v-805h221v-122z',\n            'M996 1025q0 -235 -122 -364.5t-315 -129.5q-201 0 -319.5 132.5t-118.5 361.5t118.5 362t319.5 133q193 0 315 -130t122 -365zM814 1025q0 172 -67.5 258t-187.5 86q-122 0 -189 -87t-67 -257t67 -256.5t189 -86.5q120 0 187.5 85.5t67.5 257.5z',\n            'M1154 608l-550 -446v196l371 294l-371 294v196l550 -445v-89zM702 610l-528 -419v188l357 273l-357 273v188l528 -418v-85z',\n            'M545 565h-165v681h-209v117q102 0 165 22t72 108h137v-928zM1410 1489l-780 -1489h-165l780 1489h165zM1857 220h-163v-220h-150v220h-465v185l466 539h149v-591h163v-133zM1548 353v400l-353 -400h353z',\n            'M545 565h-165v681h-209v117q102 0 165 22t72 108h137v-928zM1410 1489l-780 -1489h-165l780 1489h165zM1955 0h-688v148q91 69 158 121t106 89q109 103 141 157.5t32 136.5q0 70 -44 107t-120 37q-70 0 -141.5 -30t-112.5 -62h-15v179q65 27 140.5 44t152.5 17 q157 0 241.5 -79t84.5 -201q0 -93 -41 -167t-147 -168q-49 -43 -119.5 -96t-125.5 -94h498v-139z',\n            'M793 826q0 -71 -30 -127t-78 -90q-53 -37 -114.5 -53t-140.5 -16q-82 0 -153.5 15t-136.5 43v175h17q37 -35 114 -64.5t156 -29.5q84 0 139 36.5t55 108.5q0 83 -50 112.5t-141 29.5h-140v139h125q87 0 134.5 38t47.5 104q0 60 -41 95.5t-128 35.5q-66 0 -142.5 -31 t-113.5 -66h-17v175q64 27 139 44t154 17q152 0 237 -70t85 -168q0 -87 -48.5 -143.5t-125.5 -82.5v-8q80 -16 138.5 -70.5t58.5 -148.5zM1500 1489l-780 -1489h-165l780 1489h165zM1913 220h-163v-220h-150v220h-465v185l466 539h149v-591h163v-133zM1604 353v400 l-353 -400h353z',\n            'M712 1278h-204v211h204v-211zM958 40q-83 -30 -176 -50t-205 -20q-215 0 -339.5 104.5t-124.5 275.5q0 98 34.5 173t93.5 137q58 62 136.5 112.5t146.5 91.5v225h179v-305q-60 -33 -139 -81.5t-125 -88.5q-54 -47 -88 -109t-34 -140q0 -113 76.5 -168.5t197.5 -55.5 q103 0 201.5 33t155.5 70h10v-204z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM862 1675h-149l-273 374h243z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM955 2049l-273 -374h-149l179 374h243z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1033 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1119 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5 t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1005 1677h-199v195h199v-195zM592 1677h-199v195h199v-195z',\n            'M1374 0h-211l-148 415h-640l-148 -415h-201l519 1407q-89 44 -142.5 123.5t-53.5 181.5q0 143 102 240t248 97q147 0 248.5 -97t101.5 -240q0 -100 -52.5 -181.5t-141.5 -123.5zM899 1710q0 86 -57 143.5t-143 57.5t-143 -58t-57 -143q0 -86 57.5 -143.5t142.5 -57.5 q86 0 143 57.5t57 143.5zM953 585l-258 715l-259 -715h517z',\n            'M1901 0h-944v556h-524l-212 -556h-207l594 1489h1293v-176h-749v-408h749v-176h-749v-553h749v-176zM957 723v601h-219l-239 -601h458z',\n            'M1350 108q-55 -24 -99.5 -45t-116.5 -44q-11 -3 -24 -7.5t-31 -7.5q2 -19 3.5 -44.5t1.5 -48.5q0 -162 -93.5 -248t-240.5 -86q-38 0 -97.5 7t-104.5 19v162h9q26 -10 71.5 -24t95.5 -14q106 0 155 40t49 126q0 19 -1 41.5t-3 42.5q-19 -2 -40.5 -3t-39.5 -1 q-162 0 -294.5 45.5t-230.5 142.5q-96 95 -150 241.5t-54 340.5q0 184 52 329t150 245q95 97 229.5 148t298.5 51q120 0 239.5 -29t265.5 -102v-235h-15q-123 103 -244 150t-259 47q-113 0 -203.5 -36.5t-161.5 -113.5q-69 -75 -107.5 -189.5t-38.5 -264.5q0 -157 42.5 -270 t109.5 -184q70 -74 163.5 -109.5t197.5 -35.5q143 0 268 49t234 147h14v-232z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM822 1675h-149l-273 374h243z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM993 2049l-273 -374h-149l179 374h243z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM1031 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM1038 1677h-199v195h199v-195zM625 1677h-199v195h199v-195z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM568 1675h-149l-273 374h243z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM725 2049l-273 -374h-149l179 374h243z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM776 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM738 1677h-199v195h199v-195zM325 1677h-199v195h199v-195z',\n            'M1468 743q0 -203 -88.5 -368t-235.5 -256q-102 -63 -227.5 -91t-330.5 -28h-376v740h-196v143h196v606h372q218 0 347 -31.5t217 -86.5q152 -95 237 -253t85 -375zM1261 746q0 175 -61 295t-182 189q-88 50 -187 69.5t-237 19.5h-188v-436h361v-143h-361v-570h188 q143 0 249.5 21t195.5 78q111 71 166.5 187t55.5 290z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489zM1208 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5 q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM932 1675h-149l-273 374h243z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1083 2049l-273 -374h-149l179 374h243z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1136 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1207 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228 t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1307 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1289 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1108 1677h-199v195h199v-195zM695 1677h-199v195h199v-195z',\n            'M1385 216l-111 -111l-436 440l-436 -440l-111 111l440 436l-440 436l111 111l436 -440l436 440l111 -111l-440 -436z',\n            'M1498 744q0 -184 -49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-115 0 -215.5 29t-179.5 84l-159 -228h-132l205 294q-101 100 -155.5 250t-54.5 346q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q118 0 215 -27.5t179 -82.5l142 201h132 l-188 -268q101 -100 156.5 -248.5t55.5 -350.5zM1097 1260q-57 46 -129 68.5t-161 22.5q-110 0 -200 -38.5t-156 -116.5q-64 -76 -98.5 -190.5t-34.5 -261.5q0 -140 29.5 -252t87.5 -188zM1295 744q0 139 -30 253t-88 189l-664 -957q60 -45 132.5 -68t161.5 -23 q110 0 201.5 40t153.5 116q67 82 100 194.5t33 255.5z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM932 1675h-149l-273 374h243z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1073 2049l-273 -374h-149l179 374h243z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1084 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1056 1677h-199v195h199v-195zM643 1677h-199v195h199v-195z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM935 2049l-273 -374h-149l179 374h243z',\n            'M1174 787q0 -92 -35 -176.5t-95 -141.5q-78 -75 -187.5 -111t-260.5 -36h-198v-322h-198v1489h198v-270h205q133 0 230 -22.5t164 -66.5q83 -53 130 -138t47 -205zM968 782q0 72 -26 125.5t-82 88.5q-48 30 -112 42.5t-154 12.5h-196v-563h167q119 0 195 20.5t123 65.5 q44 41 64.5 92t20.5 116z',\n            'M1165 481q0 -214 -135.5 -359.5t-354.5 -145.5q-44 0 -101.5 7.5t-93.5 20.5v165h10q42 -24 91.5 -33t105.5 -9q74 0 129 29t88 78q35 52 50.5 115.5t15.5 139.5q0 166 -105.5 250.5t-303.5 84.5v150q157 0 234 59.5t77 188.5q0 35 -11 68t-41 64q-27 29 -71 46.5 t-105 17.5q-57 0 -103 -14.5t-86 -53.5q-37 -36 -59.5 -102t-22.5 -161v-1087h-188v1080q0 124 36 215.5t100 153.5q60 58 149.5 87.5t183.5 29.5q183 0 297.5 -87t114.5 -238q0 -112 -71 -201t-184 -121v-9q164 -37 259 -148.5t95 -280.5z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM738 1302h-149l-273 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM934 1676l-273 -374h-149l179 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM961 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM1038 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5 q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM926 1304h-199v195h199v-195zM513 1304h-199v195h199v-195z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM956 1630q0 -143 -102 -242t-248 -99q-144 0 -247 98.5t-103 242.5 q0 143 102 241t248 98q147 0 248.5 -98t101.5 -241zM811 1630q0 86 -58.5 145.5t-146.5 59.5t-146.5 -59t-58.5 -146t59 -146t146 -59q88 0 146.5 59t58.5 146z',\n            'M1855 559h-819q0 -114 30 -195t85 -133q52 -48 123 -70.5t157 -22.5q111 0 217.5 41.5t172.5 93.5h12v-205q-78 -35 -184.5 -64.5t-215.5 -29.5q-166 0 -284.5 52t-194.5 155q-21 -19 -67 -59t-96 -68q-63 -36 -137 -59.5t-189 -23.5q-150 0 -255.5 97t-105.5 249 q0 124 54 200.5t155 118.5q95 39 241 53t308 17v61q0 65 -23 107.5t-64 65.5q-40 23 -96 31.5t-116 8.5q-79 0 -168.5 -21t-179.5 -57h-13v191q55 15 158 34t204 19q159 0 264.5 -46.5t162.5 -137.5q69 82 170 134t226 52q217 0 342.5 -128t125.5 -379v-82zM1673 703 q-5 68 -23.5 119t-50.5 88q-34 39 -88.5 61t-133.5 22q-133 0 -223 -75t-115 -215h634zM894 298q-20 53 -30.5 119t-10.5 141q-105 -3 -201 -7.5t-178 -25.5q-79 -20 -127.5 -65.5t-48.5 -128.5q0 -95 58 -141t176 -46q99 0 195.5 43t166.5 111z',\n            'M1011 70q-33 -15 -71.5 -30.5t-67.5 -24.5q3 -19 5.5 -47.5t2.5 -56.5q0 -162 -91.5 -248t-237.5 -86q-37 0 -95 7t-103 19v160h9q26 -10 70 -23t94 -13q104 0 153 39t49 127q0 22 -1.5 45t-3.5 43q-16 -2 -30.5 -4t-39.5 -2q-121 0 -222 35.5t-173 107.5 q-73 72 -113 182t-40 257q0 274 150.5 430t397.5 156q96 0 188.5 -27t169.5 -66v-209h-10q-86 67 -177.5 103t-178.5 36q-160 0 -252.5 -107.5t-92.5 -315.5q0 -202 90.5 -310.5t254.5 -108.5q57 0 116 15t106 39q41 21 77 44.5t57 40.5h10v-207z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM759 1302h-149l-273 374h243z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM960 1676l-273 -374h-149l179 374h243z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM986 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM951 1304h-199v195h199v-195zM538 1304h-199v195h199v-195z',\n            'M375 0h-188v1117h188v-1117zM401 1302h-149l-273 374h243z',\n            'M375 0h-188v1117h188v-1117zM582 1676l-273 -374h-149l179 374h243z',\n            'M572 1297h-151l-143 267l-142 -267h-147l178 379h227zM375 0h-188v1117h188v-1117z',\n            'M557 1304h-189v195h189v-195zM194 1304h-189v195h189v-195zM375 0h-188v1117h188v-1117z',\n            'M1137 637q0 -324 -142 -496t-383 -172q-229 0 -367.5 135t-138.5 380q0 226 137 358t339 132q108 0 185.5 -26.5t163.5 -79.5q-32 112 -99.5 219t-154.5 181l-264 -162l-66 97l237 142q-84 67 -156 107.5t-165 87.5v16h295q35 -25 84 -58.5t86 -59.5l210 128l66 -97 l-186 -109q153 -147 236 -325.5t83 -397.5zM847 226q49 59 75 143.5t26 234.5q0 32 -1.5 59.5t-3.5 57.5q-75 45 -157.5 66.5t-168.5 21.5q-147 0 -231.5 -87.5t-84.5 -239.5q0 -180 84.5 -267t227.5 -87q66 0 127.5 22t106.5 76z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-725zM1075 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5 t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M732 1302h-149l-273 374h243z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M933 1676l-273 -374h-149l179 374h243z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M963 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M1038 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M928 1304h-199v195h199v-195zM515 1304h-199v195h199v-195z',\n            'M957 1022h-238v275h238v-275zM1466 572h-1256v160h1256v-160zM957 7h-238v275h238v-275z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-84 0 -155.5 21t-130.5 60l-133 -198h-110l171 256q-75 77 -116.5 190t-41.5 260q0 273 139.5 431.5t376.5 158.5q87 0 158 -22t125 -57l116 172h111l-155 -231q76 -76 118 -188t42 -264zM813 930q-37 29 -86.5 43.5t-104.5 14.5 q-155 0 -240 -110t-85 -320q0 -97 17 -171t52 -128zM946 558q0 97 -17.5 173t-51.5 130l-448 -671q39 -31 86.5 -46t106.5 -15q150 0 237 108.5t87 320.5z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM764 1302h-149l-273 374h243z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM945 1676l-273 -374h-149l179 374h243z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM985 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM955 1304h-199v195h199v-195zM542 1304h-199v195h199v-195z',\n            'M1151 1117l-652 -1529h-201l208 466l-445 1063h204l343 -828l346 828h197zM928 1676l-273 -374h-149l179 374h243z',\n            'M1168 572q0 -136 -39 -248.5t-110 -190.5q-66 -74 -155.5 -114.5t-189.5 -40.5q-87 0 -157.5 19t-143.5 59v-468h-188v1968h188v-556q75 63 168.5 105.5t199.5 42.5q202 0 314.5 -152.5t112.5 -423.5zM974 567q0 202 -69 302t-212 100q-81 0 -163 -35t-157 -92v-633 q80 -36 137.5 -49t130.5 -13q157 0 245 106t88 314z',\n            'M585 832h-239v285h239v-285zM658 285l-282 -655h-146l174 655h254z',\n            'M773 1676l-49 -384h-145l-49 384h243z',\n            'M765 1676l-49 -384h-128l-49 384h226zM1048 1304h-191v195h191v-195zM447 1304h-191v195h191v-195z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM250 1489l-49 -384h-145l-49 384h243z',\n            'M585 832h-239v285h239v-285z',\n            'M1424 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1582 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489zM243 1489l-49 -384h-145l-49 384h243z',\n            'M968 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1501 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1483 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1537 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1751 0h-576v387q60 38 119.5 82t103.5 101q45 59 71 138.5t26 185.5q0 206 -127 330.5t-347 124.5t-347 -124.5t-127 -330.5q0 -106 26 -185.5t71 -138.5q45 -57 104 -101t119 -82v-387h-576v174h410v124q-157 90 -258.5 246t-101.5 350q0 276 187.5 451t492.5 175 t492.5 -175t187.5 -451q0 -194 -101.5 -350t-258.5 -246v-124h410v-174zM243 1489l-49 -384h-145l-49 384h243z',\n            'M375 0h-188v1117h188v-1117zM379 1676l-56 -384h-84l-56 384h196zM615 1304h-171v195h171v-195zM118 1304h-171v195h171v-195z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523z',\n            'M1323 458q0 -111 -42 -196t-113 -140q-84 -66 -184.5 -94t-255.5 -28h-528v1489h441q163 0 244 -12t155 -50q82 -43 119 -110.5t37 -161.5q0 -106 -54 -180.5t-144 -119.5v-8q151 -31 238 -132.5t87 -256.5zM990 1129q0 54 -18 91t-58 60q-47 27 -114 33.5t-166 6.5h-236 v-430h256q93 0 148 9.5t102 39.5t66.5 77.5t19.5 112.5zM1117 450q0 90 -27 143t-98 90q-48 25 -116.5 32.5t-166.5 7.5h-311v-554h262q130 0 213 13.5t136 49.5q56 39 82 89t26 129z',\n            'M1162 1313h-764v-1313h-198v1489h962v-176z',\n            'M1414 0h-1388l562 1489h264zM1147 168l-432 1147l-431 -1147h863z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176z',\n            'M1288 0h-1162v184l913 1129h-879v176h1106v-179l-922 -1134h944v-176z',\n            'M1339 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1120 713h-627v179h627v-179z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152z',\n            'M1397 0h-257l-589 663l-148 -158v-505h-198v1489h198v-777l723 777h240l-665 -700z',\n            'M1378 0h-213l-468 1285l-468 -1285h-203l556 1489h240z',\n            'M1526 0h-198v1283l-414 -873h-118l-411 873v-1283h-185v1489h270l397 -829l384 829h275v-1489z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489z',\n            'M1215 1313h-1101v176h1101v-176zM1163 729h-997v176h997v-176zM1215 0h-1101v176h1101v-176z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1339 0h-198v1313h-743v-1313h-198v1489h1139v-1489z',\n            'M1174 1039q0 -99 -34.5 -183.5t-96.5 -146.5q-77 -77 -182 -115.5t-265 -38.5h-198v-555h-198v1489h404q134 0 227 -22.5t165 -70.5q85 -57 131.5 -142t46.5 -215zM968 1034q0 77 -27 134t-82 93q-48 31 -109.5 44.5t-155.5 13.5h-196v-595h167q120 0 195 21.5t122 68.5 q47 48 66.5 101t19.5 119z',\n            'M1280 0h-1162v184l620 600l-600 526v179h1096v-176h-832l586 -506v-26l-630 -605h922v-176z',\n            'M1262 1313h-532v-1313h-198v1313h-532v176h1262v-176z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211z',\n            'M1572 755q0 -140 -44.5 -248.5t-123.5 -181.5q-85 -79 -207 -125.5t-260 -49.5v-166h-197v166q-134 3 -257 48t-210 127q-79 74 -123.5 182t-44.5 248q0 136 43 238t119 178q81 81 202.5 128t270.5 51v155h197v-155q148 -3 271 -52t202 -127q75 -73 118.5 -177t43.5 -239 zM1366 763q0 99 -32 182t-91 140q-58 56 -129 82t-177 28v-890q94 2 171 30.5t127 75.5q65 60 98 147t33 205zM740 305v890q-106 -1 -177 -28t-129 -82t-90.5 -140t-32.5 -182q0 -112 33.5 -203t97.5 -149q49 -45 126.5 -75t171.5 -31z',\n            'M1336 1489l-514 -736l513 -753h-229l-406 613l-416 -613h-216l519 744l-507 745h228l401 -605l410 605h217z',\n            'M1604 910q0 -157 -40.5 -264.5t-117.5 -174.5q-80 -69 -192.5 -104t-263.5 -45v-322h-197v322q-154 11 -267 47t-188 102q-78 69 -118.5 176t-40.5 263v579h198v-602q0 -109 29.5 -180t81.5 -115q53 -45 130 -68.5t175 -30.5v996h197v-996q97 8 175 30.5t131 68.5 q56 49 83 115.5t27 179.5v602h198v-579z',\n            'M1568 0h-576v387q60 38 119.5 82t103.5 101q45 59 71 138.5t26 185.5q0 206 -127 330.5t-347 124.5t-347 -124.5t-127 -330.5q0 -106 26 -185.5t71 -138.5q45 -57 104 -101t119 -82v-387h-576v174h410v124q-157 90 -258.5 246t-101.5 350q0 276 187.5 451t492.5 175 t492.5 -175t187.5 -451q0 -194 -101.5 -350t-258.5 -246v-124h410v-174z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM738 1677h-199v195h199v-195zM325 1677h-199v195h199v-195z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM939 1677h-199v195h199v-195zM526 1677h-199v195h199v-195z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -22t143 -61v52h188v-1117zM903 275v636q-76 34 -136 49.5t-131 15.5q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5zM743 1676l-49 -384h-145l-49 384h243z',\n            'M1006 64q-107 -48 -210 -69t-218 -21q-79 0 -161 16t-152 56q-69 39 -112.5 102.5t-43.5 157.5q0 96 56.5 168t177.5 110v7q-91 24 -145 90t-54 158q0 89 47.5 147.5t112.5 92.5q64 33 145 49t160 16q98 0 180 -16.5t172 -44.5v-207h-13q-66 51 -163.5 79t-197.5 28 q-45 0 -84 -5.5t-81 -25.5q-35 -15 -60.5 -48.5t-25.5 -77.5q0 -61 28 -95t76 -49q45 -14 97 -15.5t105 -1.5h111v-166h-158q-62 0 -112 -4.5t-92 -21.5q-41 -17 -65.5 -54t-24.5 -96q0 -53 26 -90t67 -58q37 -19 87.5 -29t106.5 -10q102 0 218 36t187 98h13v-206zM721 1676 l-49 -384h-145l-49 384h243z',\n            'M1119 -412h-188v1048q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-1137zM802 1676l-49 -384h-145l-49 384h243z',\n            'M375 0h-188v1117h188v-1117zM403 1676l-49 -384h-145l-49 384h243z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM760 1676l-49 -384h-128l-49 384h226zM1043 1304h-191 v195h191v-195zM442 1304h-191v195h191v-195z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -22t143 -61v52h188v-1117zM903 275v636q-76 34 -136 49.5t-131 15.5q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5z',\n            'M1165 444q0 -202 -134.5 -334t-339.5 -132q-79 0 -167 22t-151 64v-476h-188v1490q0 224 126.5 351t349.5 127q90 0 164.5 -21.5t133.5 -67.5q57 -43 91 -112t34 -160q0 -127 -69.5 -221.5t-196.5 -131.5v-17q159 -26 253 -125.5t94 -255.5zM971 449q0 89 -34.5 144.5 t-92.5 86.5q-59 32 -132 43t-146 11h-36v160h36q66 0 131 14.5t104 44.5q46 34 68.5 83t22.5 134q0 112 -69 170t-178 58q-73 0 -125 -26.5t-85 -70.5q-32 -44 -47 -102.5t-15 -120.5v-862q66 -38 141 -53.5t147 -15.5q149 0 229.5 78.5t80.5 223.5z',\n            'M1151 1117l-457 -1061v-468h-188v468l-445 1061h204l343 -828l346 828h197z',\n            'M1139 551q0 -272 -138.5 -427t-376.5 -155q-241 0 -379.5 151.5t-138.5 413.5q0 141 43 239.5t107 162.5q69 72 159 113t182 58q-76 63 -166 130.5t-192 139.5v179h810v-158h-561v-10q68 -46 179 -124t204 -162q150 -136 209 -261.5t59 -289.5zM945 551q0 135 -55 249 t-165 200q-66 -8 -138.5 -32t-138.5 -77q-63 -50 -105.5 -137t-42.5 -214q0 -201 85 -305t241 -104q153 0 236 105.5t83 314.5z',\n            'M1006 64q-107 -48 -210 -69t-218 -21q-79 0 -161 16t-152 56q-69 39 -112.5 102.5t-43.5 157.5q0 96 56.5 168t177.5 110v7q-91 24 -145 90t-54 158q0 89 47.5 147.5t112.5 92.5q64 33 145 49t160 16q98 0 180 -16.5t172 -44.5v-207h-13q-66 51 -163.5 79t-197.5 28 q-45 0 -84 -5.5t-81 -25.5q-35 -15 -60.5 -48.5t-25.5 -77.5q0 -61 28 -95t76 -49q45 -14 97 -15.5t105 -1.5h111v-166h-158q-62 0 -112 -4.5t-92 -21.5q-41 -17 -65.5 -54t-24.5 -96q0 -53 26 -90t67 -58q37 -19 87.5 -29t106.5 -10q102 0 218 36t187 98h13v-206z',\n            'M922 75q32 -40 46 -85.5t14 -85.5q0 -84 -45 -168.5t-112 -147.5h-179v14q90 79 128 138.5t38 128.5q0 57 -30.5 95t-77.5 38h-145q-229 0 -340 116t-111 345q0 140 46 268t124 247q75 112 173.5 214.5t206.5 196.5v9h-460v158h744v-135q-117 -78 -231.5 -181 t-204.5 -223q-89 -117 -146 -257t-57 -283q0 -34 3 -70t15 -76q10 -38 34.5 -75.5t63.5 -61.5q36 -22 96.5 -24.5t116.5 -2.5h86q71 0 122 -26t82 -66z',\n            'M1119 -412h-188v1048q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-1137z',\n            'M1141 768q0 -190 -23 -316.5t-59 -210.5q-58 -135 -163 -203.5t-257 -68.5t-257 68.5t-163 203.5q-37 84 -59.5 210.5t-22.5 316.5q0 174 22.5 305.5t60.5 214.5q57 130 162.5 199t256.5 69t256.5 -69t162.5 -199q37 -84 60 -215t23 -305zM952 858q-4 143 -28.5 250 t-56.5 161q-41 70 -95 98.5t-133 28.5t-133 -28.5t-95 -98.5q-34 -55 -57.5 -161.5t-27.5 -249.5h626zM952 697h-626q0 -142 23 -258.5t59 -178.5q40 -69 96 -100t135 -31t135 31t96 100q36 62 59 178.5t23 258.5z',\n            'M375 0h-188v1117h188v-1117z',\n            'M1192 0h-248l-451 489l-112 -109v-380h-188v1117h188v-550l384 417q72 79 135.5 107t126.5 28q28 0 58 -1t37 -1v-166h-11q-16 2 -39.5 3t-36.5 1q-47 0 -85.5 -23.5t-67.5 -56.5l-251 -271z',\n            'M1151 0h-205l-328 829l-361 -829h-196l465 1056l-215 500h211z',\n            'M1125 0h-186v118q-74 -78 -141.5 -108.5t-145.5 -30.5q-75 0 -135 27t-144 107v-525h-188v1529h188v-838q32 -39 111 -80t170 -41q93 0 161 33.5t122 93.5v832h188v-1117z',\n            'M1151 1117l-452 -1117h-189l-449 1117h204l346 -889l343 889h197z',\n            'M1041 -96q0 -85 -45.5 -169t-111.5 -147h-180v14q92 79 129.5 139t37.5 128q0 55 -29 94t-75 39h-140q-140 0 -232.5 27t-155.5 84q-66 60 -100.5 135.5t-34.5 163.5q0 78 25 144t73 119q44 49 112.5 83.5t144.5 53.5v11q-125 28 -200 110.5t-75 186.5q0 83 43.5 150.5 t133.5 125.5v6h-228v154h824v-158h-256q-68 0 -122.5 -14.5t-102.5 -48.5q-45 -32 -72 -83t-27 -118q0 -79 32.5 -128t83.5 -75q45 -23 104 -34t139 -11h170v-165h-295q-66 0 -118.5 -20t-99.5 -59q-43 -37 -68.5 -90t-25.5 -112q0 -102 37.5 -159t101.5 -82 q63 -25 139.5 -28.5t166.5 -3.5h28q68 0 119.5 -23.5t84.5 -60.5q31 -35 48 -82.5t17 -96.5z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z',\n            'M1120 0h-188v955h-559v-955h-188v1117h935v-1117z',\n            'M1172 577q0 -258 -138.5 -428.5t-360.5 -170.5q-65 0 -146.5 18t-153.5 61v-469h-188v1058q0 123 35.5 215.5t101.5 158.5q62 62 155.5 95t195.5 33q243 0 371 -147t128 -424zM978 565q0 218 -80 320t-226 102q-158 0 -228.5 -96t-70.5 -278v-403q73 -34 132.5 -48.5 t134.5 -14.5q162 0 250 111t88 307z',\n            'M1018 -96q0 -87 -47 -172t-109 -144h-177v14q86 75 124.5 135.5t38.5 131.5q0 54 -30 93.5t-75 39.5h-92q-117 0 -216 30t-174 97q-73 66 -114.5 170t-41.5 250q0 270 155.5 432t414.5 162q84 0 164 -18.5t147 -45.5v-211h-12q-94 62 -172.5 87t-146.5 25 q-166 0 -260.5 -119t-94.5 -312q0 -112 28.5 -183t78.5 -116q50 -44 114.5 -63.5t139.5 -19.5h100q115 0 186 -76.5t71 -186.5z',\n            'M1137 558q0 -281 -140.5 -435t-373.5 -154q-241 0 -379 158t-138 431q0 275 141 432.5t378 157.5q55 0 108 -11t82 -20h480v-165h-288q62 -73 96 -170t34 -224zM943 558q0 215 -82 322t-236 107q-161 0 -243 -112t-82 -317q0 -209 83.5 -318t239.5 -109q152 0 236 107.5 t84 319.5z',\n            'M1006 952h-404v-952h-188v952h-404v165h996v-165z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710z',\n            'M1514 576q0 -259 -171.5 -417t-440.5 -173v-398h-187v398q-130 6 -240.5 46.5t-191.5 109.5q-85 74 -132 172t-47 232q0 159 59 296t192 275h229v-17q-136 -99 -210 -232t-74 -300q0 -189 112.5 -304t301.5 -121v1000q33 2 70.5 2.5t76.5 0.5q304 0 478.5 -149.5 t174.5 -420.5zM1319 586q0 184 -112 293.5t-305 109.5v-846q206 10 311.5 126t105.5 317z',\n            'M1160 -412h-213l-346 619l-350 -619h-203l444 770l-433 759h213l335 -600l339 600h203l-433 -751z',\n            'M1507 446q0 -114 -48 -198t-127 -137q-82 -55 -182 -82.5t-215 -32.5v-408h-187v408q-115 6 -214.5 32t-182.5 83q-80 54 -127.5 137.5t-47.5 197.5v671h188v-612q0 -113 37.5 -180.5t89.5 -102.5q56 -38 123 -53t134 -19v967h187v-967q67 5 134 19t123 53 q59 40 93 101.5t34 181.5v612h188v-671z',\n            'M1553 503q0 -96 -23.5 -192.5t-74.5 -171.5q-55 -80 -133.5 -124.5t-193.5 -44.5q-96 0 -177 49.5t-118 116.5h-6q-39 -68 -113 -117t-176 -49q-113 0 -194.5 46.5t-132.5 122.5t-74.5 171.5t-23.5 192.5q0 170 57 308.5t201 305.5h228v-17q-135 -108 -214.5 -262 t-79.5 -337q0 -66 8 -122.5t38 -119.5q26 -55 72.5 -91.5t117.5 -36.5q51 0 86.5 12.5t55.5 29.5q22 18 36.5 40t20.5 37v584h186v-584q9 -17 23 -39t35 -39q24 -19 52.5 -30t86.5 -11q70 0 117 35.5t74 92.5q25 55 36 116t11 126q0 182 -78.5 336t-215.5 263v17h228 q144 -167 201 -305.5t57 -308.5z',\n            'M557 1304h-189v195h189v-195zM194 1304h-189v195h189v-195zM375 0h-188v1117h188v-1117z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM953 1304h-199v195h199v-195zM540 1304h-199v195h199 v-195z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M743 1676l-49 -384h-145l-49 384h243z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM768 1676l-49 -384h-145l-49 384h243z',\n            'M1553 503q0 -96 -23.5 -192.5t-74.5 -171.5q-55 -80 -133.5 -124.5t-193.5 -44.5q-96 0 -177 49.5t-118 116.5h-6q-39 -68 -113 -117t-176 -49q-113 0 -194.5 46.5t-132.5 122.5t-74.5 171.5t-23.5 192.5q0 170 57 308.5t201 305.5h228v-17q-135 -108 -214.5 -262 t-79.5 -337q0 -66 8 -122.5t38 -119.5q26 -55 72.5 -91.5t117.5 -36.5q51 0 86.5 12.5t55.5 29.5q22 18 36.5 40t20.5 37v584h186v-584q9 -17 23 -39t35 -39q24 -19 52.5 -30t86.5 -11q70 0 117 35.5t74 92.5q25 55 36 116t11 126q0 182 -78.5 336t-215.5 263v17h228 q144 -167 201 -305.5t57 -308.5zM955 1676l-49 -384h-145l-49 384h243z',\n            'M1145 837q0 -164 -39 -344t-121 -303q-85 -124 -186.5 -173t-214.5 -49q-192 0 -313.5 126.5t-121.5 329.5q0 228 134.5 372.5t336.5 144.5q90 0 169.5 -26t158.5 -91q2 26 3 55.5t1 55.5q0 217 -79 318t-231 101q-78 0 -169.5 -31.5t-169.5 -86.5h-11v194 q81 44 181.5 66.5t196.5 22.5q137 0 239.5 -54.5t164.5 -178.5q42 -86 56.5 -189t14.5 -260zM942 678q-60 47 -136 74t-148 27q-141 0 -225 -91t-84 -261q0 -145 67.5 -221.5t179.5 -76.5q128 0 209.5 97t115.5 287q6 33 11.5 73t9.5 92z',\n            'M1438 0h-1388l562 1489h264zM1171 168l-432 1147l-431 -1147h863z',\n            'M1532 1315h-200v-1508h-198v1508h-592v-1508h-198v1508h-200v174h1388v-174z',\n            'M1369 -189h-1182v191l673 668l-663 631v188h1133v-176h-891l648 -601v-72l-666 -653h948v-176z',\n            'M1456 572h-1236v160h1236v-160z',\n            'M843 1489l-780 -1489h-165l780 1489h165z',\n            'M492 511h-239v283h239v-283z',\n            'M1737 1788l-880 -1939h-102l-384 993h-237v139h393l313 -821l730 1628h167z',\n            'M1887 663q0 -239 -122.5 -372.5t-329.5 -133.5q-133 0 -244 76.5t-180 222.5q-79 -151 -184.5 -225t-248.5 -74q-191 0 -304 135.5t-113 349.5q0 238 125 372t327 134q134 0 245 -77t179 -222q79 150 185.5 224.5t247.5 74.5q191 0 304 -135.5t113 -349.5zM967 729 q-63 117 -155 175.5t-188 58.5q-138 0 -216 -83.5t-78 -237.5q0 -133 63.5 -216t182.5 -83q110 0 172 48.5t119 142.5q34 57 52.5 92.5t47.5 102.5zM1718 663q0 134 -64 216.5t-182 82.5q-88 0 -152.5 -35.5t-138.5 -155.5q-30 -48 -55.5 -99.5t-44.5 -95.5 q60 -115 153.5 -174.5t189.5 -59.5q138 0 216 83t78 238z',\n            'M1168 1367h-10q-32 8 -89.5 18.5t-89.5 10.5q-129 0 -181 -61q-53 -61 -53 -210v-1123q0 -206 -104 -315q-105 -110 -293 -110q-52 0 -106.5 5.5t-103.5 15.5v178h10q33 -8 87 -18.5t88 -10.5q129 0 182 61q52 61 52 210v1123q0 204 104 315q104 110 293 110 q58 0 109 -5.5t105 -15.5v-178z',\n            'M1431 1104q-20 -194 -111 -293t-249 -99q-77 0 -147 37.5t-126 82.5q-65 52 -117 79.5t-96 27.5q-75 0 -117 -48t-70 -172h-155q23 182 112.5 280t248.5 98q72 0 143 -37t130 -83q61 -48 114.5 -77.5t98.5 -29.5q76 0 120.5 54.5t63.5 179.5h157zM1432 588 q-25 -184 -112 -281.5t-250 -97.5q-72 0 -144 37.5t-129 82.5q-39 31 -103 69t-110 38q-78 0 -121 -55t-63 -179h-157q19 192 110.5 292t249.5 100q77 0 146 -37t127 -83q35 -28 97 -67.5t116 -39.5q75 0 117 49.5t69 171.5h157z',\n            'M1431 362h-608l-104 -335h-153l104 335h-425v156h474l84 268h-558v156h606l105 335h153l-105 -335h427v-156h-476l-83 -268h559v-156z',\n            'M1408 303l-1154 483v124l1154 483v-183l-889 -362l889 -362v-183zM1408 0h-1154v160h1154v-160z',\n            'M1422 786l-1154 -483v183l889 362l-889 362v183l1154 -483v-124zM1422 0h-1154v160h1154v-160z'\n        ];\n        this.OUTLINE_X = [\n            [], [291, 301, 505, 515], [168, 211, 729, 772, 554], [195, 389, 917, 1364, 1481, 1481, 1288, 760, 312, 195],\n            [155, 604, 722, 1129.8, 1160, 1107, 722, 604, 278.5, 191.1, 162, 155], [149, 172.3, 242, 630, 1687, 1844.3, 1960, 2031.3, 2055, 2031.8, 1962, 1575, 517, 359.8, 244, 172.8],\n            [115, 149.4, 252.5, 407.6, 598, 1555, 1287, 961.3, 881, 757.5, 601, 423.5, 293, 213.5, 187], [164, 207, 343, 386], [181, 205.5, 279, 554, 783, 783, 554, 279, 205.5],\n            [147, 376, 651, 724.5, 749, 724.5, 651, 376, 147], [167, 232, 588, 717, 1073, 1137, 1137, 1073, 717, 588, 232, 167], [210, 755, 921, 1466, 1466, 921, 755, 210],\n            [147, 293, 575, 321], [153, 777, 777, 153], [253, 492, 492, 253], [-30, 143, 860, 684],\n            [137, 167.9, 260.5, 420.1, 652, 881.4, 1041.5, 1135.6, 1167, 1136.1, 1043.5, 883.9, 652, 422, 262, 168.3], [278, 1084, 1084, 780, 625, 278],\n            [161, 1169, 1169, 1106, 1073.5, 976, 821.3, 617, 387.5, 198, 161], [167, 364, 608, 830.5, 1007, 1111, 1148, 1117, 1080, 971, 821, 629, 399.5, 210, 167],\n            [77, 790, 982, 1203, 1203, 982, 798, 77], [187, 378, 613, 843.5, 1015, 1119, 1157, 1147, 251, 187],\n            [137, 183.5, 316, 475, 675, 875.1, 1041.5, 1153.6, 1191, 1046, 965, 866, 542, 315, 179.5], [154, 285, 499, 1173, 1173, 154],\n            [122, 157.9, 265.5, 433.6, 651, 859.6, 1029.5, 1142.4, 1180, 1140, 1106.8, 1007, 851.5, 651, 456.8, 300, 196.5, 162],\n            [113, 258, 340, 438, 760, 988, 1122.5, 1167, 1121, 990, 829, 629, 429.5, 263, 150.5], [346, 585, 585, 346], [230, 376, 658, 585, 346], [254, 1408, 1408, 254],\n            [245, 1431, 1431, 245], [268, 1422, 1422, 268], [160, 406, 610, 970, 1005, 973.9, 880.5, 733.4, 541, 337.5, 160],\n            [176, 240, 419, 692, 1037, 1210, 1391, 1714, 1829.5, 1870, 1813.5, 1651, 1391, 1041, 701, 426, 243], [26, 1374, 832, 568],\n            [200, 728, 983.5, 1168, 1281, 1323, 1196, 1159, 1040, 885, 641, 200], [115, 169, 319, 549.5, 844, 1001.5, 1134, 1250.5, 1350, 1350, 1084.5, 845, 546.5, 317, 167],\n            [200, 576, 906.5, 1134, 1369.5, 1458, 1373, 1136, 918.5, 572, 200], [200, 1181, 1181, 200], [200, 398, 1045, 1151, 1151, 200],\n            [115, 171, 330, 577, 896, 1175.5, 1442, 1442, 1441, 1155.5, 896, 570.9, 323.5, 167.1], [200, 1339, 1339, 200], [137, 725, 725, 137],\n            [44, 178, 306, 486.6, 626.5, 716.1, 746, 746, 233, 44], [205, 1397, 1366, 205], [200, 1142, 1142, 398, 200], [200, 1526, 1526, 200], [200, 1336, 1336, 200],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 398, 1043, 1139.5, 1174, 1127.5, 996, 831, 604, 200],\n            [115, 163.5, 302, 520.5, 1010.5, 1133.1, 1290, 1409.5, 1528, 1528, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 1432, 1130.5, 1004, 842, 617, 200],\n            [134, 395.5, 685, 941.5, 1128, 1241.5, 1282, 1222, 990, 702, 480.3, 301, 182.5, 143, 134], [0, 532, 730, 1262, 1262, 0],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 178], [26, 568, 832, 1374, 238], [92, 486, 1546, 1933, 295], [68, 1335, 1336, 80], [6, 532, 730, 1254, 225],\n            [126, 1288, 1288, 1266, 160, 126], [239, 759, 759, 239], [70, 787, 960, 246], [171, 691, 691, 171], [186, 383, 1490, 901, 775], [-4, 1306, 1306, -4], [340, 613, 762, 583],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 1020, 924, 772.5, 567, 362, 203], [185, 679, 866, 1022, 1128.5, 1168, 1139.4, 1053.5, 918.1, 373, 185],\n            [105, 145, 258, 431, 653, 832.5, 1011, 1011, 841.5, 653, 430.1, 255.5, 142.6], [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 903, 258, 148.5],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 997.5, 849.1, 649, 428.6, 255.5, 143.4], [68, 195, 383, 716, 786, 786, 693.5, 580, 415, 294, 68],\n            [108, 225, 391.5, 565, 798.3, 962, 1058.8, 1091, 1091, 602, 417, 259, 148.5], [185, 1119, 1119, 1095.3, 1024, 373, 185], [175, 187, 375, 387, 387, 175],\n            [-62, 47.5, 153, 304, 421, 496, 521, 533, 533, 321, 100, -62], [193, 1199, 1161, 381, 193], [187, 375, 375, 187], [185, 1815, 1815, 1793.1, 1727.5, 1615.9, 1456, 735, 185],\n            [185, 1119, 1119, 1095.3, 1024, 907.5, 748, 185], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 833.3, 622, 409.4, 245.5, 140.9],\n            [185, 373, 1019, 1129, 1168, 1139.9, 1055.5, 920.6, 741, 185], [108, 137.6, 226.5, 365.1, 903, 1091, 1091, 602, 414, 259, 149.5], [185, 373, 882, 882, 816, 745, 185],\n            [110, 283.5, 511, 706.9, 856.5, 951.4, 983, 939, 768.5, 566, 372.5, 230, 143.5, 115, 110], [62, 211.3, 278, 387.5, 538, 649.5, 765, 765, 377, 189, 62],\n            [177, 201.5, 275, 392.5, 549, 1111, 1111, 177], [61, 510, 699, 1151, 265], [86, 380, 1299, 1590, 766], [60, 1152, 1152, 64], [61, 298, 499, 1151, 265],\n            [93, 995, 995, 978, 107, 93], [173, 588.9, 672.5, 800.9, 963, 1113, 1113, 963, 800.9, 672.5, 588.9, 173], [378, 552, 552, 378],\n            [187, 337, 499.1, 627.5, 711.1, 1127, 1127, 711.1, 627.5, 499.1, 337, 187], [187, 354, 1125, 1290, 1401, 1466.5, 1489, 1322, 551, 386, 274, 209.5], [], [291, 515, 505, 301],\n            [159, 191.6, 289.5, 647, 765, 1120, 1120, 765, 647, 292.5, 192.4], [137, 1163, 1163, 1137, 997, 816, 630.6, 484.5, 389.6, 182, 137],\n            [138, 247, 1058, 1168, 1168, 1055, 249, 138], [108, 187, 557, 745, 1115, 1191, 320], [378, 552, 552, 378],\n            [172, 229, 404.5, 575, 796, 965, 1063, 1096, 1128, 1071, 896, 725, 497.5, 334, 235, 203], [346, 958, 958, 346],\n            [159, 222.4, 412.5, 692.1, 1024, 1355.9, 1635.5, 1825.6, 1889, 1825.6, 1635.5, 1355.9, 1024, 692.1, 412.5, 222.4],\n            [151, 238.5, 454, 944, 944, 920.3, 849, 723.5, 537, 368, 231], [166, 716, 1146, 1146, 716, 166], [210, 1285, 1456, 1456, 210], [153, 777, 777, 153],\n            [159, 222.4, 412.5, 692.1, 1024, 1355.9, 1635.5, 1825.6, 1889, 1825.6, 1635.5, 1355.9, 1024, 692.1, 412.5, 222.4], [-4, 1, 1306, 1306],\n            [154, 183, 270, 399.3, 555, 710.8, 840, 927, 956, 927.1, 840.5, 711.4, 555, 399.3, 270, 183], [215, 1461, 1461, 921, 755, 215],\n            [207, 967, 967, 911, 887.6, 817.5, 544, 369.5, 211, 207], [207, 363.5, 540, 703, 834, 923, 956, 929, 904.9, 832.5, 561, 384.5, 224, 207], [541, 690, 963, 720],\n            [190, 378, 1124, 1124, 190], [137, 168.5, 595, 1106, 1106, 640, 425.3, 267, 169.5], [253, 492, 492, 253], [353, 456, 551, 788.5, 857.1, 880, 877, 872, 719, 353],\n            [291, 299, 914, 914, 693, 558, 291], [121, 150.6, 239.5, 378.6, 559, 734.3, 874, 965.5, 996, 965.5, 874, 734.3, 559, 378.6, 239.5, 150.6], [174, 604, 1154, 1154, 604, 174],\n            [171, 465, 1694, 1857, 1857, 1694, 1410, 545, 408, 171], [171, 465, 1955, 1955, 1890, 1805.5, 1410, 545, 408, 171], [140, 555, 1750, 1913, 1913, 1750, 1500, 448, 294, 155, 140],\n            [113, 144.1, 237.5, 384.6, 577, 782, 958, 958, 712, 508, 147.5], [26, 1374, 862, 683, 440], [26, 1374, 955, 712, 533], [26, 1374, 1033, 805, 578, 350],\n            [26, 1374, 1119, 990, 541, 367, 288], [26, 1374, 1005, 806, 393], [26, 1374, 1049, 1023.6, 947.5, 834.6, 699, 564, 451, 374.5, 349], [14, 1901, 1901, 608],\n            [115, 169, 548, 652.5, 750, 990.5, 1350, 1350, 1084.5, 845, 546.5, 317, 167], [200, 1181, 1181, 643, 400, 200], [200, 1181, 1181, 993, 750, 200],\n            [200, 1181, 1181, 803, 576, 200], [200, 1181, 1181, 1038, 426, 200], [137, 725, 725, 389, 146, 137], [137, 725, 725, 482, 137], [93, 137, 725, 776, 548, 321],\n            [126, 137, 725, 738, 738, 126], [14, 210, 586, 916.5, 1144, 1379.5, 1468, 1383, 1146, 929, 582, 210, 14], [200, 1336, 1336, 1208, 1079, 630, 456, 200],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 753, 510, 163], [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1083, 840, 303, 163],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1136, 908, 681, 453, 163],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1207, 1078, 629, 455, 163],\n            [112, 160.5, 299, 517.5, 803, 1089.5, 1307, 1445.5, 1495, 1446.5, 1108, 909, 496, 160], [291, 402, 1274, 1385, 1385, 1274, 402, 291],\n            [115, 120, 252, 1092.5, 1310, 1448.5, 1498, 1474, 1342, 806, 521.5, 303, 163], [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 753, 510, 178],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 1073, 830, 178], [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 856, 629, 178],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 1056, 444, 178], [6, 532, 730, 1254, 935, 692], [200, 398, 1044, 1139, 1174, 1127, 997, 398, 200],\n            [185, 675, 873.1, 1029.5, 1131.1, 1165, 1066, 1037.4, 951.5, 819.9, 654, 470.5, 321, 221, 185], [104, 130.3, 209, 325.5, 465, 1053, 1053, 1020, 559, 316, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 934, 691, 203], [104, 130.3, 209, 325.5, 465, 1053, 1053, 961, 733, 506, 278, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 1038, 909, 460, 286, 207], [104, 130.3, 209, 325.5, 465, 1053, 1053, 926, 314, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 956, 930.6, 854.5, 741.6, 606, 471, 358, 281.5, 256],\n            [104, 130.4, 209.5, 326.1, 465, 1433, 1648.5, 1833, 1855, 1855, 1823.6, 1729.5, 1581.1, 1387, 564, 360, 202],\n            [105, 145, 353, 456, 551, 788.5, 857.1, 1011, 1011, 841.5, 653, 430.1, 255.5, 142.6], [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 997.5, 580, 337, 143.4],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 960, 717, 255.5, 143.4], [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 986, 758, 531, 303, 143.4],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 951, 339, 143.4], [-21, 187, 375, 401, 222], [160, 187, 375, 582, 339], [-11, 187, 375, 572, 394, 167],\n            [5, 187, 375, 557, 557, 5], [106, 140.6, 244.5, 405.6, 612, 828.3, 995, 1101.5, 1137, 1004, 938, 263], [185, 1119, 1119, 1075, 946, 497, 323, 244, 185],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 553, 310, 140.9], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 933, 690, 245.5, 140.9],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 963, 735, 508, 280, 140.9], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1038, 909, 460, 286, 207],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 928, 729, 316, 140.9], [210, 719, 957, 1466, 1466, 957, 719, 210],\n            [93, 203, 833.3, 997, 1102, 1137, 1132, 1021, 409.4, 245.5, 140.9, 106], [177, 201.5, 275, 392.5, 549, 1111, 1111, 585, 342, 177],\n            [177, 201.5, 275, 392.5, 549, 1111, 1111, 945, 702, 177], [177, 201.5, 275, 392.5, 549, 1111, 1111, 757, 530, 177], [177, 201.5, 275, 392.5, 549, 1111, 1111, 955, 343, 177],\n            [61, 298, 499, 1151, 928, 685], [185, 373, 1019, 1129, 1168, 1139.9, 1055.5, 920.6, 373, 185], [230, 376, 658, 585, 346], [530, 579, 724, 773],\n            [256, 588, 716, 1048, 1048, 765, 539, 256], [7, 26, 1374, 832], [346, 585, 585, 346], [0, 49, 443, 1424, 1424, 443], [0, 49, 443, 1582, 1582, 443], [0, 49, 380, 968, 968, 380],\n            [0, 49, 354.5, 493, 711.5, 997, 1283.5, 1501, 1639.5, 1689, 1640.5, 1501, 1284.5, 997], [0, 49, 815, 1013, 1537, 289],\n            [0, 49, 291, 1751, 1751, 1701, 1654.1, 1513.5, 1296.6, 1021], [-53, 187, 375, 615, 615, 379, 183, -53], [26, 1374, 832, 568],\n            [200, 728, 983.5, 1168, 1281, 1323, 1196, 1159, 1040, 885, 641, 200], [200, 398, 1162, 1162, 200], [26, 1414, 852, 588], [200, 1181, 1181, 200],\n            [126, 1288, 1288, 1266, 160, 126], [200, 1339, 1339, 200], [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163],\n            [137, 725, 725, 137], [205, 1397, 1366, 205], [26, 1378, 822, 582], [200, 1526, 1526, 200], [200, 1336, 1336, 200], [114, 1215, 1215, 114],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 1339, 1339, 200],\n            [200, 398, 1043, 1139.5, 1174, 1127.5, 996, 831, 604, 200], [118, 1280, 1280, 1234, 138, 118], [0, 532, 730, 1262, 1262, 0], [6, 532, 730, 1254, 225],\n            [105, 149.5, 273, 740, 937, 1404, 1527.5, 1572, 1528.5, 1410, 937, 740, 267, 148], [68, 1335, 1336, 80], [179, 219.5, 338, 793, 990, 1446, 1563.5, 1604, 1604, 179],\n            [108, 1568, 1568, 1518, 1471.1, 1330.5, 1113.6, 838, 562.4, 345.5, 204.9, 158, 108], [126, 137, 725, 738, 738, 126], [6, 532, 730, 1254, 939, 740, 327],\n            [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 743, 500, 148.5], [109, 152.5, 265, 417, 578, 796, 1006, 1006, 961, 721, 478, 191.5, 144],\n            [185, 931, 1119, 1119, 1095.3, 802, 559, 185], [160, 187, 375, 403], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 1043, 760, 534, 251, 177],\n            [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 604, 416.5, 258, 148.5], [185, 373, 1030.5, 1131.4, 1165, 1084, 1050, 959, 825.5, 661, 462.1, 311.5, 216.6, 185],\n            [61, 506, 694, 1151, 265], [106, 140.6, 244.5, 408.6, 624, 837.1, 1000.5, 1104.4, 1139, 1049, 239],\n            [109, 152.5, 265, 417, 578, 796, 1006, 1006, 961, 789, 609, 449, 304, 191.5, 144], [108, 135.8, 219, 646, 825, 937, 982, 942, 198],\n            [185, 931, 1119, 1119, 1095.3, 1024, 907.5, 748, 185], [137, 159.5, 219, 382, 639, 896, 1059, 1118, 1141, 1118, 1058, 895.5, 639, 382.5, 220, 159.5], [187, 375, 375, 187],\n            [193, 1192, 1122, 1085, 1027, 193], [61, 1151, 522, 311], [185, 373, 1125, 1125, 185], [61, 510, 699, 1151, 265], [104, 138.5, 239, 704, 884, 995.5, 1041, 957, 133],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 833.3, 622, 409.4, 245.5, 140.9], [185, 1120, 1120, 185],\n            [185, 373, 1033.5, 1137.4, 1172, 1140, 1044, 887.3, 673, 477.5, 322, 220.5, 185], [105, 146.5, 261, 685, 862, 971, 1018, 986, 839, 675, 441.9, 260.5, 143.9],\n            [106, 140.5, 244, 407.8, 623, 832.9, 996.5, 1101.9, 1295, 1295, 625, 412, 247, 141.3], [10, 414, 602, 1006, 1006, 10],\n            [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 177], [104, 151, 283, 715, 902, 1342.5, 1471.1, 1514, 1470.4, 1339.5, 1132.6, 861, 784.5, 714, 355, 163],\n            [48, 1160, 1149, 59], [176, 223.5, 748, 935, 1459, 1507, 1507, 176], [113, 136.5, 211, 343.5, 538, 1128, 1321.5, 1455, 1529.5, 1553, 1496, 1295, 371, 170],\n            [5, 187, 375, 557, 557, 5], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 953, 341, 177],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 743, 500, 140.9], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 768, 525, 177],\n            [113, 136.5, 211, 343.5, 538, 1128, 1321.5, 1455, 1529.5, 1553, 1496, 955, 712, 170],\n            [149, 179.4, 270.5, 409.6, 584, 798.5, 985, 1106, 1145, 1130.5, 1074, 909.5, 670, 473.5, 292], [50, 1438, 876, 612], [144, 344, 1332, 1532, 1532, 144],\n            [187, 1369, 1369, 1330, 197, 187], [220, 1456, 1456, 220], [-102, 63, 843, 678], [253, 492, 492, 253], [134, 755, 857, 1737, 1570, 134],\n            [161, 189.3, 274, 406.5, 578, 1435, 1620.9, 1764.5, 1856.4, 1887, 1858.8, 1774, 1641.5, 1470, 613, 430.3, 286, 192.3],\n            [138, 241.5, 348, 515.3, 641, 719, 1168, 1168, 1063, 954, 786.3, 661, 583, 138], [243, 400, 1070, 1214, 1320, 1432, 1431, 1274, 604, 462.4, 355.5, 243],\n            [245, 566, 719, 1431, 1431, 1109, 956, 245], [254, 1408, 1408, 254], [268, 1422, 1422, 268]\n        ];\n        this.OUTLINE_Y = [\n            [], [1489, 0, 0, 1489], [1556, 977, 977, 1556, 1556], [421, 0, 0, 421, 932, 1067, 1489, 1489, 1067, 556],\n            [85, -361, -361, 238.1, 380, 1231, 1576, 1576, 1185, 1071.5, 935, 283], [1075, 880.5, 743, 0, -29, -1.8, 80, 217.8, 413, 607.5, 745, 1489, 1517, 1489.8, 1408, 1270.3],\n            [409, 230.9, 90.5, -0.6, -31, 0, 909, 1333.4, 1432.5, 1498.1, 1520, 1490, 1412, 1301.5, 1174], [1556, 977, 977, 1556], [572, 286.3, 31, -412, -412, 1556, 1556, 1113, 857.8],\n            [-412, -412, 31, 286.3, 572, 857.8, 1113, 1556, 1556], [886, 776, 630, 630, 777, 887, 1299, 1409, 1556, 1556, 1410, 1300], [572, 27, 27, 572, 732, 1277, 1277, 732],\n            [-370, -370, 285, 285], [561, 561, 742, 742], [0, 0, 285, 285], [-304, -304, 1556, 1556],\n            [743, 400, 159, 16.5, -31, 15.9, 156.5, 397.4, 745, 1084.9, 1326.5, 1470.9, 1519, 1471.6, 1329.5, 1088.1], [0, 0, 152, 1494, 1494, 1286],\n            [0, 0, 171, 1110, 1279.4, 1409.5, 1492.4, 1520, 1491, 1427, 209], [63, -1.5, -31, 2.5, 106, 254, 441, 1161, 1320, 1436, 1500, 1520, 1490.5, 1426, 272],\n            [419, 0, 0, 419, 579, 1489, 1489, 649], [56, -5.5, -31, 6.5, 114, 274, 473, 1489, 1489, 267],\n            [654, 324, 104, 3, -31, 4.9, 112.5, 276.9, 483, 1494, 1512, 1517, 1453.5, 1277, 1005], [1314, 0, 0, 1266, 1489, 1489],\n            [411, 233.5, 91, -2.8, -34, -2, 94, 238.3, 415, 1144, 1294.5, 1416, 1496.3, 1523, 1495, 1411, 1285, 1131],\n            [1005, -6, -23.5, -29, 33, 209, 480, 834, 1171.5, 1385, 1485.5, 1519, 1483.3, 1376, 1211.8], [0, 0, 1117, 1117], [-370, -370, 285, 1117, 1117], [590, 77, 1227, 714],\n            [362, 362, 942, 942], [77, 590, 714, 1227], [1245, 0, 0, 964.5, 1139, 1293.4, 1414.5, 1492.9, 1519, 1497.5, 1449],\n            [647, 291, 15, -162.5, -226, -218.5, -190, 157, 394, 663, 1013.5, 1283, 1457, 1519, 1452, 1268, 991.5], [0, 0, 1489, 1489],\n            [0, 0, 28, 122, 262, 458, 1155, 1316.5, 1427, 1477, 1489, 1489], [743, 402.5, 161, 18.5, -27, -13.5, 19, 63, 108, 1385, 1487, 1516, 1465, 1317, 1072],\n            [0, 0, 28, 119, 375, 743, 1118, 1371, 1457.5, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 717, 1313, 1489, 1489],\n            [746, 405.5, 163, 19, -29, 12.5, 110, 749, 1382, 1485.5, 1516, 1464.4, 1309.5, 1065.4], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [8, -12.5, -21, 5.5, 85, 213.5, 387, 1489, 1489, 193], [0, 0, 1489, 1489], [0, 0, 176, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 709, 855.5, 1039, 1254, 1396, 1466.5, 1489, 1489],\n            [744, 415, 172, 21, -297.5, -369.1, -393, -386.5, -365, -183, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1280.5, 1409, 1471.5, 1489, 1489],\n            [92, 3, -27, 9, 109, 253, 425, 1412, 1486, 1516, 1486.1, 1396.5, 1260.1, 1090, 340], [1313, 0, 0, 1313, 1489, 1489], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 1489],\n            [1489, 0, 0, 1489, 1489], [1489, 0, 0, 1489, 1489], [0, 0, 1489, 1489], [1489, 0, 0, 1489, 1489], [0, 0, 176, 1489, 1489, 184], [-392, -392, 1556, 1556],\n            [1556, -304, -304, 1556], [-392, -392, 1556, 1556], [682, 682, 684, 1489, 1489], [-300, -300, -180, -180], [1676, 1302, 1302, 1676],\n            [324, 182.8, 69, -6, -31, 0, 758, 939, 1058, 1124.5, 1144, 1126, 1093], [0, -31, 8.5, 127, 315, 567, 812.8, 996, 1110, 1556, 1556],\n            [557, 300, 118, 10.5, -25, 0, 70, 1050, 1116, 1143, 1104, 987, 801.5], [550, 306.8, 123, 7.5, -31, 0, 1556, 1556, 992, 803],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1016, 1115, 1148, 1107.8, 987, 797.8], [959, 0, 0, 959, 1374, 1546, 1560, 1566, 1539.4, 1459.5, 1117],\n            [569, -375, -410.5, -423, -389.8, -290, -119.3, 127, 1117, 1148, 1108.5, 998, 817.5], [0, 0, 725, 906, 1039, 1556, 1556], [1304, 0, 0, 1304, 1499, 1499],\n            [-395, -415, -423, -398, -323, -199, -27, 1304, 1499, 1499, 1117, -216], [0, 0, 1117, 1556, 1556], [0, 0, 1556, 1556], [0, 0, 725, 902.9, 1036.5, 1120.1, 1148, 1148, 1117],\n            [0, 0, 725, 906, 1039, 1120.8, 1148, 1117], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1108.4, 1148, 1108.4, 989.5, 802.4],\n            [-412, -412, 133, 323.5, 572, 813.4, 995.5, 1109.9, 1148, 1117], [555, 314.1, 131.5, 16.4, -412, -412, 1117, 1148, 1108, 995, 809.5], [0, 0, 912, 1105, 1114.5, 1117, 1117],\n            [67, 2.5, -27, -2.5, 71, 182.8, 322, 1060, 1119.5, 1144, 1116.5, 1042, 933, 803, 278], [959, 189.8, 70, 1, -22, -13, 10, 1117, 1438, 1438, 1117],\n            [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [0, 0, 1117, 1117], [1117, -412, -412, 1117, 1117],\n            [0, 0, 159, 1117, 1117, 139], [504, -170.9, -292.5, -367.1, -392, -392, 1556, 1556, 1531.1, 1456.5, 1334.9, 660], [-392, -392, 1556, 1556],\n            [-392, -392, -367.1, -292.5, -170.9, 504, 660, 1334.9, 1456.5, 1531.1, 1556, 1556], [395, 395, 396, 440, 561, 732, 927, 927, 926, 880.5, 761, 589.5], [], [0, 0, 1489, 1489],\n            [557, 333.5, 163, -361, -361, 74, 1046, 1475, 1475, 948.5, 775.9], [0, 0, 171, 1467, 1501, 1518, 1485.9, 1389.5, 1243.1, 751, 207],\n            [258, 145, 147, 257, 1067, 1176, 1176, 1066], [1489, 426, 0, 0, 426, 1489, 1489], [-392, -392, 1556, 1556],\n            [533, -327, -371.5, -385, -358, -275, -156, -10, 601, 1462, 1505, 1519, 1490, 1411, 1293.5, 1147], [1304, 1304, 1499, 1499],\n            [655, 323.1, 43.5, -146.6, -210, -146.6, 43.5, 323.1, 655, 986.9, 1266.5, 1456.6, 1520, 1456.6, 1266.5, 986.9],\n            [833, 616, 531, 554, 1192, 1332.4, 1435.5, 1498.9, 1520, 1504, 1475], [608, 162, 191, 1113, 1142, 697], [602, 57, 57, 762, 762], [561, 561, 742, 742],\n            [655, 323.1, 43.5, -146.6, -210, -146.6, 43.5, 323.1, 655, 986.9, 1266.5, 1456.6, 1520, 1456.6, 1266.5, 986.9], [1788, 1668, 1668, 1788],\n            [1116, 960.4, 831.5, 744.9, 716, 745, 832, 961, 1116, 1271, 1400, 1487, 1516, 1487, 1400, 1271], [179, 179, 917, 1462, 1462, 917],\n            [566, 566, 711, 1237, 1350.4, 1440.5, 1519, 1501.5, 1458, 722], [585, 542, 527, 543.5, 595, 685.5, 817, 1278, 1374.5, 1452, 1520, 1502.5, 1458, 764],\n            [1302, 1302, 1676, 1676], [-412, -412, 0, 1117, 1117], [1050, 866, -363, -363, 1489, 1489, 1460, 1373, 1234.3], [511, 511, 794, 794],\n            [-397, -416, -423, -337, -232, -89, -25, 20, 20, -237], [1256, 566, 566, 688, 1493, 1493, 1368],\n            [1025, 820.1, 663.5, 564.1, 531, 563.4, 660.5, 816.4, 1025, 1233.8, 1390, 1487.5, 1520, 1486.8, 1387, 1230], [191, 162, 608, 697, 1142, 1113],\n            [1246, 0, 0, 220, 353, 944, 1489, 1493, 1493, 1363], [1246, 0, 0, 139, 664, 865, 1489, 1493, 1493, 1363], [598, 0, 0, 220, 353, 944, 1489, 1517, 1500, 1456, 773],\n            [350, 195.6, 74.5, -3.9, -30, -10, 40, 244, 1489, 1489, 523], [0, 0, 1675, 2049, 2049], [0, 0, 2049, 2049, 1675], [0, 0, 1670, 2049, 2049, 1670],\n            [0, 0, 1992, 1992, 1987, 1910, 1682], [0, 0, 1872, 1872, 1872], [0, 0, 1712, 1843.5, 1952, 2024.8, 2049, 2024.8, 1952, 1843.5, 1712], [0, 0, 1489, 1489],\n            [743, 402.5, -397, -416, -423, -337, 108, 1385, 1487, 1516, 1465, 1317, 1072], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 1489, 2049, 2049, 1489],\n            [0, 0, 1489, 1872, 1872, 1489], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 2049, 2049, 1489], [1670, 0, 0, 1670, 2049, 2049], [1677, 0, 0, 1677, 1872, 1872],\n            [740, 0, 0, 28, 119, 375, 743, 1118, 1371, 1457.5, 1489, 1489, 883], [0, 0, 1489, 1992, 1992, 1987, 1910, 1489],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 2049, 2049, 1070.5], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 2049, 2049, 1318, 1070.5],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1670, 2049, 2049, 1670, 1070.5], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1992, 1992, 1987, 1910, 1070.5],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1872, 1872, 1872, 1070.5], [216, 105, 105, 216, 1088, 1199, 1199, 1088],\n            [744, -146, -146, 20, 172, 414.5, 744, 1611, 1611, 1520, 1468, 1318, 1070.5], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489],\n            [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489],\n            [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 1872, 1872, 1489], [1489, 0, 0, 1489, 2049, 2049], [0, 0, 469, 610.5, 787, 992, 1130, 1489, 1489],\n            [0, -24, 12.4, 121.5, 284.1, 481, 1241, 1376, 1479, 1544.3, 1566, 1536.5, 1449, 1295.5, 1080], [324, 182.8, 69, -6, -31, 0, 758, 939, 1676, 1676, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1676, 1676, 1093], [324, 182.8, 69, -6, -31, 0, 758, 1297, 1676, 1676, 1297, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1619, 1619, 1614, 1537, 1309], [324, 182.8, 69, -6, -31, 0, 758, 1499, 1499, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1630, 1761.8, 1871, 1944.5, 1969, 1944.5, 1871, 1761.8, 1630],\n            [317, 178.8, 68, -4.8, -29, -26, 3.5, 68, 559, 641, 861.3, 1020, 1116, 1148, 1146, 1127, 1093], [557, 300, -397, -416, -423, -337, -232, 70, 1050, 1116, 1143, 1104, 987, 801.5],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1016, 1676, 1676, 797.8], [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1676, 1676, 987, 797.8],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1297, 1676, 1676, 1297, 797.8], [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1499, 1499, 797.8],\n            [1676, 0, 0, 1302, 1676], [1302, 0, 0, 1676, 1676], [1297, 0, 0, 1297, 1676, 1676], [1304, 0, 0, 1304, 1499, 1499],\n            [484, 266.5, 104, 2.8, -31, 12, 141, 351, 637, 1469, 1566, 1556], [0, 0, 725, 1619, 1619, 1614, 1537, 1309, 1117],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1676, 1676, 802.4], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1676, 1676, 989.5, 802.4],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1297, 1676, 1676, 1297, 802.4], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 1619, 1619, 1614, 1537, 1309],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1499, 1499, 1499, 802.4], [572, 7, 7, 572, 732, 1297, 1297, 732],\n            [-148, -148, 8.5, 127, 313.8, 558, 1241, 1241, 1108.4, 989.5, 802.4, 558], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117],\n            [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1499, 1499, 1117],\n            [1117, -412, -412, 1117, 1676, 1676], [-412, -412, 133, 323.5, 572, 813.4, 995.5, 1109.9, 1556, 1556], [-370, -370, 285, 1117, 1117], [1676, 1292, 1292, 1676],\n            [1304, 1292, 1292, 1304, 1499, 1676, 1676, 1499], [1489, 0, 0, 1489], [832, 832, 1117, 1117], [1489, 1105, 0, 0, 1489, 1489], [1489, 1105, 0, 0, 1489, 1489],\n            [1489, 1105, 0, 0, 1489, 1489], [1489, 1105, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520], [1489, 1105, 0, 0, 1489, 1489],\n            [1489, 1105, 0, 0, 174, 894, 1144.8, 1345, 1476.3, 1520], [1304, 0, 0, 1304, 1499, 1676, 1676, 1499], [0, 0, 1489, 1489],\n            [0, 0, 28, 122, 262, 458, 1155, 1316.5, 1427, 1477, 1489, 1489], [0, 0, 1313, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 176, 1489, 1489, 184],\n            [0, 0, 1489, 1489], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1489, 1489],\n            [0, 0, 709, 855.5, 1039, 1254, 1396, 1466.5, 1489, 1489], [0, 0, 176, 1489, 1489, 184], [1313, 0, 0, 1313, 1489, 1489], [1489, 0, 0, 1489, 1489],\n            [755, 507, 325, -16, -16, 325, 506.5, 755, 994, 1171, 1505, 1505, 1171, 993], [0, 0, 1489, 1489], [910, 647, 471, 0, 0, 471, 645.5, 910, 1489, 1489],\n            [0, 0, 174, 894, 1144.8, 1345, 1476.3, 1520, 1476.3, 1345, 1144.8, 894, 174], [1677, 0, 0, 1677, 1872, 1872], [1489, 0, 0, 1489, 1872, 1872, 1872],\n            [550, 306.8, 123, 7.5, -31, 0, 1117, 1676, 1676, 803], [306, 148.5, 46, -10, -26, -5, 64, 270, 1083, 1676, 1676, 986.5, 839], [0, -412, -412, 725, 906, 1676, 1676, 1117],\n            [1676, 0, 0, 1676], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1499, 1676, 1676, 1499, 1117], [550, 306.8, 123, 7.5, -31, 0, 1117, 1148, 1108, 992, 803],\n            [-412, -412, 110, 259.5, 444, 1195, 1355, 1467, 1534.5, 1556, 1524.3, 1429, 1277.8, 1078], [1117, -412, -412, 1117, 1117],\n            [534, 299.6, 120.5, 6.9, -31, 7.8, 124, 308.3, 551, 1556, 1556], [306, 148.5, 46, -10, -26, -5, 64, 270, 1083, 1127.5, 1144, 1128, 1079, 986.5, 839],\n            [463, 262.3, 118, -412, -412, -264.5, -96, 1556, 1556], [0, -412, -412, 725, 906, 1039, 1120.8, 1148, 1117],\n            [768, 451.5, 241, 37.5, -31, 37.5, 241, 451.5, 768, 1073, 1288, 1487, 1556, 1487, 1288, 1073.5], [0, 0, 1117, 1117], [0, 0, 1117, 1118, 1119, 1117], [0, 0, 1556, 1556],\n            [-412, -412, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [412, 248.5, 113, -412, -412, -265, -96, 1556, 1556],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1108.4, 1148, 1108.4, 989.5, 802.4], [0, 0, 1117, 1117],\n            [-412, -412, 148.5, 340.9, 577, 821.5, 1001, 1111.3, 1148, 1115, 1020, 861.5, 646], [549, 299, 129, -412, -412, -268, -96, 1079, 1124.5, 1143, 1102.5, 981, 792],\n            [558, 313.8, 127, 8.5, -31, 7.5, 123, 308.8, 952, 1117, 1148, 1108.6, 990.5, 803.6], [952, 0, 0, 952, 1117, 1117],\n            [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1117], [546, 314, 142, -412, -412, 159, 342.3, 576, 816.6, 996.5, 1108.6, 1146, 1145.5, 1143, 1117, 842],\n            [-412, -412, 1117, 1117], [446, 248.5, -412, -412, 248, 446, 1117, 1117], [503, 310.5, 139, 16.5, -30, -30, 14.5, 139, 310.5, 503, 811.5, 1117, 1117, 811.5],\n            [1304, 0, 0, 1304, 1499, 1499], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1499, 1499, 1117],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1676, 1676, 802.4], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1676, 1676, 1117],\n            [503, 310.5, 139, 16.5, -30, -30, 14.5, 139, 310.5, 503, 811.5, 1676, 1676, 811.5], [424, 240.1, 94.5, -0.4, -32, 17, 190, 493, 837, 1097, 1286, 1464.5, 1519, 1496.5, 1430],\n            [0, 0, 1489, 1489], [1315, -193, -193, 1315, 1489, 1489], [-189, -189, -13, 1489, 1489, 2], [572, 572, 732, 732], [0, 0, 1489, 1489], [511, 511, 794, 794],\n            [842, -151, -151, 1788, 1788, 981], [642, 447.6, 292.5, 190.9, 157, 157, 190.4, 290.5, 450.4, 663, 857.4, 1012.5, 1114.1, 1148, 1148, 1114.5, 1014, 854],\n            [-402, -417.5, -423, -395.5, -313, -179.8, 1367, 1545, 1560.5, 1566, 1538.5, 1456, 1321.8, -224], [202, 202, 209, 233.4, 306.5, 588, 1104, 1104, 1097, 1072.5, 999, 719],\n            [362, 27, 27, 362, 942, 1277, 1277, 942], [0, 0, 1393, 910], [0, 0, 910, 1393]\n        ];\n        this.KERN_C1 = [\n            '\\'', '\\'', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '.', '.', 'A', 'A', 'A', 'A', 'A', 'A', 'A',\n            'A', 'A', 'A', 'A', 'A', 'B', 'B', 'B', 'B', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F',\n            'I', 'J', 'J', 'J', 'J', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n            'L', 'O', 'O', 'O', 'O', 'O', 'O', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'Q', 'Q', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'S',\n            'S', 'S', 'S', 'S', 'S', 'S', 'S', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T',\n            'T', 'T', 'T', 'T', 'T', 'T', 'U', 'U', 'U', 'U', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'W', 'W', 'W', 'W', 'W', 'W',\n            'W', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y',\n            'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z',\n            'a', 'a', 'a', 'b', 'b', 'b', 'c', 'c', 'e', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'h', 'h', 'h', 'k', 'k', 'k', 'k', 'm', 'm',\n            'm', 'n', 'n', 'n', 'o', 'o', 'o', 'o', 'o', 'p', 'p', 'p', 'r', 'r', 'r', 'r', 'r', 't', 't', 'v', 'v', 'v', 'v', 'v', 'v', 'v', 'v', 'w', 'w', 'w',\n            'w', 'w', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'z', 'z', 'z', 'z', 'z', 'z', 'z',\n            'z', 'z', '\\u00C7', '\\u00E7', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00F8', '\\u00F8', '\\u00F8', '\\u00F8', '\\u00F8'\n        ];\n        this.KERN_C2 = [\n            '\\u00C6', 'A', '\\u00E6', '\\u00C6', 'z', 'y', 'x', 'w', 'v', 'a', 'Z', 'Y', 'X', 'W', 'V', 'T', 'S', 'J', 'I', 'A', '-', ',', 'y', 'w', 'v', 'u', 't',\n            'Y', 'W', 'V', 'U', 'T', 'S', '-', 'T', '.', '-', ',', '-', 'Z', 'Y', 'X', 'W', 'T', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'o', 'e', 'a', 'T', 'A',\n            '?', ';', ':', '.', ',', '-', '\\u00C6', 'A', '.', ',', '\\u00F8', '\\u00E6', '\\u00D8', 'y', 'w', 'v', 'u', 'o', 'e', 'a', 'O', '-', '\\u00D8', '\\u00C7',\n            'y', 'v', 'Y', 'W', 'V', 'T', 'O', 'J', 'G', 'C', '-', '\\'', 'Z', 'Y', 'X', 'T', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'o', 'e', 'a', 'Y', 'A',\n            '.', ',', '.', ',', '\\u00F8', '\\u00E6', 'y', 'u', 'o', 'e', 'a', 'Y', 'T', '-', '\\u00C6', 'y', 'w', 'v', 'S', 'A', '.', ',', '\\u00F8', '\\u00E6',\n            '\\u00D8', '\\u00C6', '\\u00C7', 'z', 'y', 'w', 'v', 'u', 's', 'r', 'o', 'g', 'e', 'c', 'a', 'T', 'S', 'O', 'G', 'C', 'A', '?', ';', ':', '.', '-', ',',\n            '\\u00C6', 'A', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'y', 'u', 'o', 'e', 'a', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'y', 'u',\n            'r', 'o', 'e', 'a', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6', '\\u00D8', '\\u00C7', 'y', 'u', 'o', 'e', 'a', 'O', 'G', 'C', '-', '\\u00F8',\n            '\\u00E6', '\\u00D8', '\\u00C6', 'v', 'u', 's', 'r', 'q', 'p', 'o', 'n', 'm', 'g', 'e', 'd', 'a', 'O', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6',\n            '\\u00D8', '\\u00C7', 'y', 'w', 'o', 'e', 'a', 'Z', 'O', 'G', 'C', '-', 'y', 'w', 'v', 'y', '.', ',', 'T', '-', 'T', '}', 'y', ']', '\\\\', '?', '.',\n            '-', ',', '*', ')', '\\'', '\"', 'y', 'w', 'v', '\\u00F8', 'o', 'e', '-', 'y', 'w', 'v', 'y', 'w', 'v', 'y', 'x', 'v', '.', ',', 'y', '.', ',',\n            '\\u00E6', 'a', '.', '-', ',', 'y', '-', '\\u00F8', '\\u00E6', 'o', 'e', 'a', '.', '-', ',', '\\u00E6', 'a', '.', '-', ',', '\\u00F8', '\\u00E7', 'o', 'g',\n            'e', 'd', 'c', '-', '\\u00F8', '\\u00E6', '\\u00E7', 'q', 'o', 'g', 'e', 'd', 'c', 'a', '.', '-', ',', '\\u00F8', '\\u00E7', 'q', 'o', 'g', 'e', 'd', 'c',\n            '-', '-', '-', 'Z', 'Y', 'X', 'T', '.', ',', 'y', 'x', 'v', '.', ','\n        ];\n        this.KERN_K = [\n            100, 100, 20, 50, 40, 40, 50, 20, 40, 20, 30, 140, 80, 50, 50, 150, 20, 100, 30, 50, 160, 130, 50, 30, 50, 10, 20, 80, 50, 60, 10, 120, 10, 50, 60,\n            20, -10, 20, 50, 20, 20, 10, 20, 50, 50, 50, 50, 100, 110, 50, 50, 100, -30, 100, -60, 60, 60, 300, 300, 30, 10, 10, 20, 20, 70, 60, 20, 80, 70, 80,\n            50, 70, 70, 60, 20, 110, 20, 20, 110, 110, 160, 100, 110, 170, 20, -100, 20, 20, 160, 120, 20, 20, 10, 50, 30, 30, 50, 50, 70, 50, 50, 50, -20, 50,\n            300, 300, 30, 30, 50, 50, 55, 20, 50, 50, 40, 20, 60, 100, 20, 30, 20, 30, 22, 20, 20, 20, 220, 240, 50, 130, 40, 170, 200, 200, 200, 200, 180, 200,\n            220, 210, 220, 220, 240, 70, 12, 50, 40, 40, 120, -60, 200, 200, 290, 150, 290, 20, 10, 20, 20, 100, 100, 70, 65, 60, 100, 100, 100, 60, 80, 80, 290,\n            50, 290, 100, 100, 60, 65, 60, 60, 100, 100, 100, 50, 80, 80, 220, 50, 290, 60, 50, 10, 10, 80, 30, 60, 60, 50, 10, 10, 10, 80, 130, 140, 20, 80,\n            100, 110, 110, 100, 130, 100, 130, 100, 100, 130, 130, 120, 140, 20, 80, 200, 200, 290, 140, 290, 60, 50, 20, 20, 65, 40, 60, 60, 50, 10, 20, 20, 20,\n            60, 16, 10, 16, 5, 20, 30, 60, 20, 140, -100, 10, -100, -100, -110, 120, 50, 130, -50, -100, -60, -60, 20, 10, 20, 20, 20, 20, 100, 20, 10, 20, 20,\n            10, 20, 15, 20, 15, 20, 30, 5, 20, 30, 40, 36, 290, 20, 290, 10, 40, 18, 40, 18, 18, 40, 180, 40, 180, 20, 20, 70, 20, 70, 24, 20, 24, 10, 24, 10,\n            20, 50, 18, 40, 18, 10, 18, 10, 18, 10, 18, 40, 190, 40, 190, 12, 10, 10, 12, 10, 12, 10, 10, 20, 50, 20, 20, 20, 10, 50, 30, 30, 15, 20, 15, 20, 30\n        ];\n        this.pathCache = [];\n        this.pathMissing = null;\n        this.ctxReference = null;\n        for (let n = this.GLYPH_DATA.length - 1; n >= 0; n--)\n            this.pathCache[n] = null;\n    }\n    getKerning(ch1, ch2) {\n        const sz = this.KERN_K.length;\n        for (let n = 0; n < sz; n++)\n            if (this.KERN_C1[n] == ch1 && this.KERN_C2[n] == ch2)\n                return -this.KERN_K[n];\n        return 0;\n    }\n    static measureText(txt, size) { return this.main.measureText(txt, size); }\n    measureText(txt, size) {\n        let font = FontData.main;\n        let scale = size / font.UNITS_PER_EM;\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = this.getIndex(ch);\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                continue;\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n        }\n        return [dx * scale, font.ASCENT * scale * font.ASCENT_FUDGE, -font.DESCENT * scale];\n    }\n    static measureWidths(txt, size) { return this.main.measureWidths(txt, size); }\n    measureWidths(txt, size) {\n        let font = FontData.main;\n        let scale = size / font.UNITS_PER_EM;\n        let xpos = [0];\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = this.getIndex(ch);\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                xpos.push(dx * scale);\n                continue;\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n            xpos.push(dx * scale);\n        }\n        return xpos;\n    }\n    getIndex(ch) {\n        return this.UNICODE.indexOf(ch);\n    }\n    getRawGlyph(idx) {\n        return this.GLYPH_DATA[idx];\n    }\n    getGlyphPath(idx) {\n        let path = this.pathCache[idx];\n        if (path != null)\n            return path;\n        path = new Path2D(this.GLYPH_DATA[idx]);\n        this.pathCache[idx] = path;\n        return path;\n    }\n    getMissingPath() {\n        if (!this.pathMissing)\n            this.pathMissing = new Path2D(this.MISSING_DATA);\n        return this.pathMissing;\n    }\n    getOutlineX(idx) { return this.OUTLINE_X[idx].slice(0); }\n    getOutlineY(idx) { return this.OUTLINE_Y[idx].slice(0); }\n    initNativeFont(ctx) {\n        if (ctx == null && this.ctxReference)\n            return;\n        if (ctx == null) {\n            let canvas = new OffscreenCanvas(256, 256);\n            this.ctxReference = canvas.getContext('2d');\n        }\n        else\n            this.ctxReference = ctx;\n    }\n    static measureTextNative(txt, family, size, opt = {}) {\n        return this.main.measureTextNative(txt, family, size, opt);\n    }\n    measureTextNative(txt, family, size, opt = {}) {\n        if (!this.ctxReference)\n            throw 'Calling measureTextNative without having called initNativeFont first';\n        this.ctxReference.save();\n        let pfx = '';\n        if (opt.bold)\n            pfx += 'bold ';\n        if (opt.italic)\n            pfx += 'italic ';\n        this.ctxReference.font = pfx + size + 'px ' + family;\n        let metrics = this.ctxReference.measureText(txt);\n        this.ctxReference.restore();\n        const FUDGE = this.ASCENT_FUDGE * this.ASCENT / this.UNITS_PER_EM;\n        return [metrics.width, size * FUDGE, size * (-this.DESCENT / this.ASCENT) * FUDGE];\n    }\n}\nFontData.main = new FontData();\n//# sourceMappingURL=FontData.js.map","import { FontData } from './FontData';\nexport class OutlineMeasurement {\n    constructor(offsetX, offsetY, pointScale) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.pointScale = pointScale;\n        this.invScale = 1 / pointScale;\n    }\n    scale() { return this.pointScale; }\n    angToX(ax) { return ax * this.pointScale + this.offsetX; }\n    angToY(ay) { return ay * -this.pointScale + this.offsetY; }\n    xToAng(px) { return (px - this.offsetX) * this.invScale; }\n    yToAng(py) { return (py - this.offsetY) * -this.invScale; }\n    yIsUp() { return false; }\n    measureText(str, fontSize) { return FontData.main.measureText(str, fontSize); }\n}\n//# sourceMappingURL=ArrangeMeasurement.js.map","import { GeomUtil } from './Geom';\nimport { DEGRAD, fltEqual, norm2_xy, norm_xy, sqr, TWOPI } from './util';\nimport { Vec } from './Vec';\nconst CACHE_SIZE = 1000;\nexport class FitRotatedEllipse {\n    constructor(px, py, margin) {\n        this.px = px;\n        this.py = py;\n        this.margin = margin;\n        this.theta = 0;\n        this.stop = false;\n        this.hashKey = JSON.stringify([this.px, this.py]);\n    }\n    calculate() {\n        if (this.lookupCache())\n            return;\n        this.setupParameters();\n        if (this.stop)\n            return;\n        this.currentScore = this.calculateScore(this.cx, this.cy, this.rw, this.rh);\n        this.coarseDiscovery();\n        this.fineImprovement();\n        this.theta = -this.theta;\n        this.saveCache();\n    }\n    getSpline() {\n        return GeomUtil.createBezierEllipse(this.cx, this.cy, this.rw, this.rh, this.theta);\n    }\n    lookupCache() {\n        let hashKey = this.hashKey;\n        let look = FitRotatedEllipse.cacheMap.get(hashKey);\n        if (look) {\n            this.cx = look.cx;\n            this.cy = look.cy;\n            this.rw = look.rw;\n            this.rh = look.rh;\n            this.theta = look.theta;\n            const { cacheVal } = FitRotatedEllipse;\n            for (let n = cacheVal.length - 1; n >= 0; n--)\n                if (cacheVal[n].hashKey == hashKey) {\n                    if (n < cacheVal.length - 1) {\n                        cacheVal.push(cacheVal[n]);\n                        cacheVal.splice(n, 1);\n                    }\n                    break;\n                }\n            return true;\n        }\n        return false;\n    }\n    saveCache() {\n        let hashKey = this.hashKey;\n        const { cacheVal, cacheMap } = FitRotatedEllipse;\n        cacheVal.push(this);\n        cacheMap.set(hashKey, this);\n        while (cacheVal.length > CACHE_SIZE) {\n            cacheMap.delete(cacheVal[0].hashKey);\n            cacheVal.splice(0);\n        }\n    }\n    setupParameters() {\n        const psz = this.psz = this.px.length;\n        const invpsz = this.invpsz = 1.0 / psz;\n        this.cx = Vec.sum(this.px) * invpsz;\n        this.cy = Vec.sum(this.py) * invpsz;\n        let ptheta = new Array(psz), pdist = new Array(psz);\n        for (let n = 0; n < psz; n++) {\n            ptheta[n] = Math.atan2(this.py[n] - this.cy, this.px[n] - this.cx);\n            pdist[n] = norm_xy(this.px[n] - this.cx, this.py[n] - this.cy);\n        }\n        let order = Vec.idxSort(ptheta);\n        this.px = Vec.idxGet(this.px, order);\n        this.py = Vec.idxGet(this.py, order);\n        ptheta = Vec.idxGet(ptheta, order);\n        pdist = Vec.idxGet(pdist, order);\n        let buffX = new Array(psz), buffY = new Array(psz);\n        const rotatedScore = (ptheta, pdist, rtheta) => {\n            for (let n = 0; n < psz; n++) {\n                buffX[n] = pdist[n] * Math.cos(ptheta[n] + rtheta);\n                buffY[n] = pdist[n] * Math.sin(ptheta[n] + rtheta);\n            }\n            let scx = Vec.sum(buffX) * invpsz, scy = Vec.sum(buffY) * invpsz;\n            let devx = 0, devy = 0;\n            for (let n = 0; n < psz; n++) {\n                devx += sqr(buffX[n] - scx);\n                devy += Math.abs(buffY[n] - scy);\n            }\n            return devy / (1 + devx);\n        };\n        let bestScore = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < 360; n++) {\n            let th = n * DEGRAD;\n            let score = rotatedScore(ptheta, pdist, th);\n            if (score < bestScore) {\n                this.theta = th;\n                bestScore = score;\n            }\n        }\n        for (let dth = -1; dth <= 1; dth += 0.05) {\n            let th = this.theta + dth * DEGRAD;\n            let score = rotatedScore(ptheta, pdist, th);\n            if (score < bestScore) {\n                this.theta = th;\n                bestScore = score;\n            }\n        }\n        for (let n = 0; n < psz; n++) {\n            this.px[n] = this.cx + pdist[n] * Math.cos(ptheta[n] + this.theta);\n            this.py[n] = this.cy + pdist[n] * Math.sin(ptheta[n] + this.theta);\n        }\n        this.cx = Vec.sum(this.px) * invpsz;\n        this.cy = Vec.sum(this.py) * invpsz;\n        this.rw = this.rh = 1;\n    }\n    coarseDiscovery() {\n        const { margin } = this;\n        let deltaD = 0.1 * margin, deltaR = 0.5 * deltaD;\n        const DELTA_OPTIONS = [\n            { dx: -1, dy: 0, dw: 0, dh: 0 },\n            { dx: 1, dy: 0, dw: 0, dh: 0 },\n            { dx: 0, dy: -1, dw: 0, dh: 0 },\n            { dx: 0, dy: 1, dw: 0, dh: 0 },\n            { dx: 0, dy: 0, dw: -1, dh: 0 },\n            { dx: 0, dy: 0, dw: 1, dh: 0 },\n            { dx: 0, dy: 0, dw: 0, dh: -1 },\n            { dx: 0, dy: 0, dw: 0, dh: 1 },\n        ];\n        for (let sanity = 0; sanity < 1000; sanity++) {\n            let anything = false;\n            let bestScore = this.currentScore;\n            let bestCX = this.cx, bestCY = this.cy, bestRW = this.rw, bestRH = this.rh;\n            for (let delta of DELTA_OPTIONS) {\n                let newCX = this.cx + delta.dx * deltaD;\n                let newCY = this.cy + delta.dy * deltaD;\n                let newRW = this.rw + delta.dw * deltaR;\n                let newRH = this.rh + delta.dh * deltaR;\n                let newScore = this.calculateScore(newCX, newCY, newRW, newRH);\n                if (newScore > bestScore && !fltEqual(newScore, bestScore)) {\n                    anything = true;\n                    bestScore = newScore;\n                    bestCX = newCX;\n                    bestCY = newCY;\n                    bestRW = newRW;\n                    bestRH = newRH;\n                }\n            }\n            if (!anything)\n                break;\n            this.currentScore = bestScore;\n            this.cx = bestCX;\n            this.cy = bestCY;\n            this.rw = bestRW;\n            this.rh = bestRH;\n        }\n    }\n    fineImprovement() {\n        const { margin } = this;\n        let deltaD = 0.1 * margin, deltaR = 0.5 * deltaD;\n        const REDUCTION = 2.0 / 3;\n        const MAX_REDUCTIONS = 20;\n        for (let reduc = 0; reduc < MAX_REDUCTIONS; reduc++) {\n            let anything = false;\n            let bestScore = this.currentScore;\n            let bestCX = this.cx, bestCY = this.cy, bestRW = this.rw, bestRH = this.rh;\n            for (let dCX = -1; dCX <= 1; dCX++) {\n                let newCX = this.cx + dCX * deltaD;\n                for (let dCY = -1; dCY <= 1; dCY++) {\n                    let newCY = this.cy + dCY * deltaD;\n                    for (let dRW = -1; dRW <= 1; dRW++) {\n                        let newRW = this.rw + dRW * deltaR;\n                        for (let dRH = -1; dRH <= 1; dRH++) {\n                            let newRH = this.rh + dRH * deltaR;\n                            if (dCX == 0 && dCY == 0 && dRW == 0 && dRH == 0)\n                                continue;\n                            let newScore = this.calculateScore(newCX, newCY, newRW, newRH);\n                            if (newScore > bestScore && !fltEqual(newScore, bestScore)) {\n                                anything = true;\n                                bestScore = newScore;\n                                bestCX = newCX;\n                                bestCY = newCY;\n                                bestRW = newRW;\n                                bestRH = newRH;\n                            }\n                        }\n                    }\n                }\n            }\n            if (anything) {\n                this.currentScore = bestScore;\n                this.cx = bestCX;\n                this.cy = bestCY;\n                this.rw = bestRW;\n                this.rh = bestRH;\n            }\n            else {\n                reduc++;\n                deltaD *= REDUCTION;\n                deltaR *= REDUCTION;\n            }\n        }\n    }\n    calculateScore(cx, cy, rw, rh) {\n        const { px, py, margin } = this, psz = px.length;\n        const nseg = 24;\n        let cosTheta = 1, sinTheta = 0;\n        let incrAlpha = TWOPI / nseg;\n        let closestDSQ = Vec.numberArray(Number.POSITIVE_INFINITY, psz);\n        for (let n = 0; n < nseg; n++) {\n            let alpha = n * incrAlpha;\n            let cosAlpha = Math.cos(alpha), sinAlpha = Math.sin(alpha);\n            let dx = rw * cosAlpha * cosTheta - rh * sinAlpha * sinTheta;\n            let dy = rw * cosAlpha * sinTheta + rh * sinAlpha * cosTheta;\n            let d = norm_xy(dx, dy) + margin, eth = Math.atan2(dy, dx);\n            let x = cx + d * Math.cos(eth);\n            let y = cy + d * Math.sin(eth);\n            for (let i = 0; i < psz; i++) {\n                let ii = i == psz - 1 ? 0 : i + 1;\n                if (GeomUtil.doLineSegsIntersect(cx, cy, x, y, px[i], py[i], px[ii], py[ii]))\n                    return 0;\n            }\n            for (let i = 0; i < psz; i++)\n                closestDSQ[i] = Math.min(closestDSQ[i], norm2_xy(x - px[i], y - py[i]));\n        }\n        let proxSum = 0;\n        for (let dsq of closestDSQ)\n            proxSum += 1.0 / (1 + Math.sqrt(dsq));\n        return rw * rh + proxSum;\n    }\n}\nFitRotatedEllipse.cacheVal = [];\nFitRotatedEllipse.cacheMap = new Map();\n//# sourceMappingURL=FitRotatedEllipse.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Theme } from '../util/Theme';\nimport { readTextURL } from '../util/util';\nimport { Vec } from '../util/Vec';\nlet globalInstance = null;\nconst ONTOLOGY_FILES = [\n    'units'\n];\nexport class OntologyTree {\n    static get main() { return globalInstance; }\n    constructor() {\n        this.roots = [];\n        this.mapTerms = new Map();\n        this.alreadyLoaded = new Set();\n    }\n    static init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (globalInstance)\n                return;\n            globalInstance = new OntologyTree();\n            for (let fn of ONTOLOGY_FILES) {\n                let url = Theme.RESOURCE_URL + '/data/ontology/' + fn + '.onto';\n                globalInstance.loadFromURL(url);\n            }\n        });\n    }\n    getRoots() {\n        return this.roots;\n    }\n    hasTerm(uri) { return this.mapTerms.has(uri); }\n    getBranch(uri) {\n        return this.mapTerms.get(uri);\n    }\n    getBranchList(root) {\n        if (typeof root == 'string') {\n            let look = this.mapTerms.get(root);\n            if (!look)\n                throw `Unknown branch URI: ${root}`;\n            if (look.length > 1)\n                throw `Ambiguous branch URI occurs more than once: ${root}`;\n            root = look[0];\n        }\n        let list = [];\n        let accumulate = (branch) => {\n            list.push(branch);\n            for (let child of Vec.safeArray(branch.children))\n                accumulate(child);\n        };\n        accumulate(root);\n        return list;\n    }\n    loadFromURL(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.alreadyLoaded.has(url))\n                return;\n            this.alreadyLoaded.add(url);\n            let text = yield readTextURL(url);\n            if (!text)\n                throw `Resource not found: ${url}`;\n            this.loadContent(text);\n        });\n    }\n    loadContent(text) {\n        let termList = [];\n        let pos = 0;\n        for (let line of text.split(/\\n/)) {\n            pos++;\n            line = line.trim();\n            if (!line || line.startsWith('#'))\n                continue;\n            let idx = line.indexOf('http');\n            if (idx < 0)\n                throw `Line ${pos} invalid, no URI term: ${line}`;\n            let depth = 0;\n            for (let n = 0; n < idx; n++)\n                if (line.charAt(n) == '-')\n                    depth++;\n            let uri = line.substring(idx);\n            idx = uri.indexOf(' ');\n            if (idx < 0)\n                throw `Line ${pos} invalid, no label: ${line}`;\n            let label = uri.substring(idx + 1);\n            uri = uri.substring(0, idx);\n            let term = null;\n            if (depth == 0)\n                term = this.roots.find((look) => look.uri == uri);\n            if (!term) {\n                term = { uri, label, 'parent': null, 'children': [], depth };\n                if (depth == 0)\n                    this.roots.push(term);\n                else {\n                    for (let n = termList.length - 1; n >= 0; n--)\n                        if (termList[n].depth == depth - 1) {\n                            term.parent = termList[n];\n                            termList[n].children.push(term);\n                            break;\n                        }\n                    if (!term.parent)\n                        throw `Line ${pos} invalid hierarchy, no parent found`;\n                }\n                let list = this.mapTerms.get(uri);\n                if (list)\n                    list.push(term);\n                else\n                    this.mapTerms.set(uri, [term]);\n            }\n            termList.push(term);\n        }\n    }\n    debugString(term) {\n        let lines = [];\n        let emit = (term) => {\n            lines.push('* '.repeat(term.depth) + `<${term.uri}> \"${term.label}\"`);\n            for (let child of term.children)\n                emit(child);\n        };\n        emit(term);\n        return lines.join('\\n');\n    }\n}\n//# sourceMappingURL=OntologyTree.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2021 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {Vec} from 'webmolkit/util/Vec';\n\n/*\n\tTry to arrange a list of boxes into a more rectangular pattern, which has a better ratio than stacking everything vertically.\n*/\n\nenum SquarePackingSpring\n{\n\tStrong = 0,\n\tMedium = 1,\n\tWeak = 2,\n}\n\ninterface SquarePackingCandidate\n{\n\tidxStart:number;\n\tsprings:SquarePackingSpring[];\n\tlayout?:Box[];\n\toutline?:Size;\n\tscore?:number; // lower is better\n\thash?:string;\n}\n\ninterface SquarePackingSegment\n{\n\ty:number;\n\tx1:number;\n\tx2:number;\n}\n\nexport class SquarePacking\n{\n\tpublic outline:Size;\n\tpublic layout:Box[] = null;\n\n\tprivate wantRatio:number;\n\n\t// --------------------- public methods ---------------------\n\n\t// sets up the object with the mandatory information\n\tconstructor(private packSize:Size, private boxes:Box[], private hspace:number, private vspace:number)\n\t{\n\t\tthis.wantRatio = packSize.w / packSize.h;\n\n\t\t/*\n\t\t// !! temporary validation\n\t\tlet segs:SquarePackingSegment[] =\n\t\t[\n\t\t\t{'y': 0, 'x1': 0, 'x2': 1},\n\t\t\t{'y': 2, 'x1': 1, 'x2': 3},\n\t\t\t{'y': 1, 'x1': 3, 'x2': Number.POSITIVE_INFINITY}\n\t\t];\n\t\tthis.mergeSegmentAbove(segs, {'y': 2.5, 'x1': 1.5, 'x2': 2.5});\n\t\t//this.mergeSegmentBelow(segs, {'y': -1.5, 'x1': 2, 'x2': 3.5});\n\t\tfor (let seg of segs) console.log(JSON.stringify(seg));\n\t\tthrow 'blork';*/\n\t}\n\n\t// carries out the arrangement: returns whether it got something good\n\tpublic pack():boolean\n\t{\n\t\tlet candidates:SquarePackingCandidate[] = [];\n\t\tlet num = this.boxes.length;\n\t\tfor (let n = 0; n < num; n++)\n\t\t{\n\t\t\tlet cand:SquarePackingCandidate = {idxStart: n, springs: Vec.anyArray(SquarePackingSpring.Weak, num)};\n\t\t\tcand.hash = cand.idxStart + '/' + cand.springs;\n\t\t\tthis.processCandidate(cand);\n\t\t\tcandidates.push(cand);\n\t\t}\n\n\t\tconst KEEP = 100;\n\t\tcandidates = candidates.sort((c1, c2) => c1.score - c2.score).slice(0, KEEP);\n\n\t\tfor (let sanity = 100; sanity > 0; sanity--)\n\t\t{\n\t\t\tlet hashes = new Set<string>();\n\t\t\tfor (let cand of candidates) hashes.add(cand.hash);\n\n\t\t\tlet batch = candidates.slice(0);\n\t\t\tfor (let cand of candidates) for (let n = 0; n < num; n++) if (n != cand.idxStart)\n\t\t\t{\n\t\t\t\tfor (let sp of [SquarePackingSpring.Strong, SquarePackingSpring.Medium, SquarePackingSpring.Weak]) if (cand.springs[n] != sp)\n\t\t\t\t{\n\t\t\t\t\tlet mod:SquarePackingCandidate = {idxStart: cand.idxStart, springs: cand.springs.slice(0)};\n\t\t\t\t\tmod.springs[n] = sp;\n\t\t\t\t\tmod.hash = mod.idxStart + '/' + mod.springs;\n\t\t\t\t\tif (hashes.has(mod.hash)) continue;\n\t\t\t\t\tthis.processCandidate(mod);\n\t\t\t\t\tbatch.push(mod);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbatch = batch.sort((c1, c2) => c1.score - c2.score).slice(0, KEEP);\n\n\t\t\tlet same = true;\n\t\t\tfor (let n = 0; n < candidates.length && n < batch.length; n++) if (candidates[n].hash != batch[n].hash) {same = false; break;}\n\n\t\t\tif (!same) break;\n\n\t\t\tcandidates = batch;\n\t\t}\n\n\t\tlet best = candidates[0];\n\n\t\tthis.outline = best.outline;\n\t\tthis.layout = best.layout;\n\t\tlet minY = Vec.min(this.layout.map((b) => b.y));\n\t\tfor (let box of this.layout) box.y -= minY;\n\n\t\treturn true;\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\tprivate processCandidate(cand:SquarePackingCandidate):void\n\t{\n\t\tlet len = this.boxes.length;\n\t\tcand.layout = this.boxes.map((box) => new Box(0, 0, box.w, box.h));\n\t\tlet placed = Vec.booleanArray(false, len);\n\t\tplaced[cand.idxStart] = true;\n\n\t\tlet placeAbove = (idx:number, spring:SquarePackingSpring):void =>\n\t\t{\n\t\t\tlet box = cand.layout[idx];\n\t\t\tlet segs:SquarePackingSegment[] = null;\n\t\t\tfor (let n = idx + 1; n < len; n++) if (placed[n])\n\t\t\t{\n\t\t\t\tlet ref = cand.layout[n];\n\t\t\t\tlet newsegs:SquarePackingSegment[] = [];\n\t\t\t\tif (ref.minX() > 0) newsegs.push({y: ref.midY() - this.vspace, x1: 0, x2: ref.minX() - this.hspace});\n\t\t\t\tnewsegs.push({y: ref.minY() - this.vspace, x1: Math.max(0, ref.minX() - this.hspace), x2: ref.maxX() + this.hspace});\n\t\t\t\tnewsegs.push({y: ref.minY() - this.vspace + 0.5 * box.h, x1: ref.maxX() + this.hspace, x2: Number.POSITIVE_INFINITY});\n\t\t\t\tif (segs == null) segs = newsegs;\n\t\t\t\telse for (let nseg of newsegs) this.mergeSegmentAbove(segs, nseg);\n\t\t\t}\n\n\t\t\tlet bestX = 0, bestY = Number.NEGATIVE_INFINITY;\n\t\t\tfor (let n = 0; n < segs.length; n++)\n\t\t\t{\n\t\t\t\tlet x = segs[n].x1, y = Number.POSITIVE_INFINITY;\n\t\t\t\tfor (let i = n; i < segs.length; i++)\n\t\t\t\t{\n\t\t\t\t\ty = Math.min(y, segs[i].y);\n\t\t\t\t\tif (box.w < segs[i].x2 - x) break;\n\t\t\t\t}\n\t\t\t\tif (y > bestY) [bestX, bestY] = [x, y];\n\t\t\t\tif (spring == SquarePackingSpring.Strong) break;\n\t\t\t\tif (spring == SquarePackingSpring.Medium && x > 0.5 * this.packSize.w) break;\n\t\t\t}\n\t\t\tbox.x = bestX;\n\t\t\tbox.y = bestY - box.h;\n\t\t\tplaced[idx] = true;\n\t\t};\n\t\tlet placeBelow = (idx:number, spring:SquarePackingSpring):void =>\n\t\t{\n\t\t\tlet box = cand.layout[idx];\n\t\t\tlet segs:SquarePackingSegment[] = null;\n\t\t\tfor (let n = idx - 1; n >= 0; n--) if (placed[n])\n\t\t\t{\n\t\t\t\tlet ref = cand.layout[n];\n\t\t\t\tlet newsegs:SquarePackingSegment[] = [];\n\t\t\t\tif (ref.minX() > 0) newsegs.push({y: ref.midY() + this.vspace, x1: 0, x2: ref.minX() - this.hspace});\n\t\t\t\tnewsegs.push({y: ref.maxY() + this.vspace, x1: Math.max(0, ref.minX() - this.hspace), x2: ref.maxX() + this.hspace});\n\t\t\t\tnewsegs.push({y: ref.maxY() + this.vspace - 0.5 * box.h, x1: ref.maxX() + this.hspace, x2: Number.POSITIVE_INFINITY});\n\t\t\t\tif (segs == null) segs = newsegs;\n\t\t\t\telse for (let nseg of newsegs) this.mergeSegmentBelow(segs, nseg);\n\t\t\t}\n\n\t\t\tlet bestX = 0, bestY = Number.POSITIVE_INFINITY;\n\t\t\tfor (let n = 0; n < segs.length; n++)\n\t\t\t{\n\t\t\t\tlet x = segs[n].x1, y = Number.NEGATIVE_INFINITY;\n\t\t\t\tfor (let i = n; i < segs.length; i++)\n\t\t\t\t{\n\t\t\t\t\ty = Math.max(y, segs[i].y);\n\t\t\t\t\tif (box.w < segs[i].x2 - x) break;\n\t\t\t\t}\n\t\t\t\tif (y < bestY) [bestX, bestY] = [x, y];\n\t\t\t\tif (spring == SquarePackingSpring.Strong) break;\n\t\t\t\tif (spring == SquarePackingSpring.Medium && x > 0.5 * this.packSize.w) break;\n\t\t\t}\n\t\t\tbox.x = bestX;\n\t\t\tbox.y = bestY;\n\t\t\tplaced[idx] = true;\n\t\t};\n\n\t\tfor (let d = 1; d < len; d++)\n\t\t{\n\t\t\tlet i1 = cand.idxStart - d, i2 = cand.idxStart + d;\n\t\t\tif (i1 >= 0) placeAbove(i1, cand.springs[i1]);\n\t\t\tif (i2 < len) placeBelow(i2, cand.springs[i2]);\n\t\t}\n\n\t\tlet loX = 0, hiX = Vec.max(cand.layout.map((box) => box.maxX()));\n\t\tlet loY = Vec.min(cand.layout.map((box) => box.minY())), hiY = Vec.max(cand.layout.map((box) => box.maxY()));\n\t\tcand.outline = new Size(hiX - loX, hiY - loY);\n\t\tlet ratio = cand.outline.w / cand.outline.h;\n\t\tcand.score = Math.abs(ratio - this.wantRatio) * (cand.outline.w + cand.outline.h);\n\t\tcand.score += Vec.sum((cand.layout.map((box) => box.x)));\n\t\tfor (let n = 0; n < cand.layout.length - 1; n++) cand.score += Math.max(0, cand.layout[n].minY() - cand.layout[n].maxY());\n\t}\n\n\tprivate mergeSegmentAbove(segs:SquarePackingSegment[], merge:SquarePackingSegment):void\n\t{\n\t\tfor (let look of segs)\n\t\t{\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2 && merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) return; // completely buried\n\t\t\t\tsegs.push({y: look.y, x1: merge.x2, x2: look.x2});\n\t\t\t\tlook.x2 = merge.x1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) look.x2 = merge.x1; else merge.x1 = look.x2;\n\t\t\t}\n\t\t\tif (merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) look.x1 = merge.x2; else merge.x2 = look.x1;\n\t\t\t}\n\t\t}\n\t\tfor (let n = segs.length - 1; n >= 0; n--) if (segs[n].x1 >= segs[n].x2) segs.splice(n, 1);\n\t\tif (merge.x1 < merge.x2)\n\t\t{\n\t\t\tsegs.push(merge);\n\t\t\tsegs.sort((seg1, seg2) => seg1.x1 - seg2.x1);\n\t\t}\n\t}\n\tprivate mergeSegmentBelow(segs:SquarePackingSegment[], merge:SquarePackingSegment):void\n\t{\n\t\tfor (let look of segs)\n\t\t{\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2 && merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) return; // completely buried\n\t\t\t\tsegs.push({y: look.y, x1: merge.x2, x2: look.x2});\n\t\t\t\tlook.x2 = merge.x1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) look.x2 = merge.x1; else merge.x1 = look.x2;\n\t\t\t}\n\t\t\tif (merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) look.x1 = merge.x2; else merge.x2 = look.x1;\n\t\t\t}\n\t\t}\n\t\tfor (let n = segs.length - 1; n >= 0; n--) if (segs[n].x1 >= segs[n].x2) segs.splice(n, 1);\n\t\tif (merge.x1 < merge.x2)\n\t\t{\n\t\t\tsegs.push(merge);\n\t\t\tsegs.sort((seg1, seg2) => seg1.x1 - seg2.x1);\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {ArrangeMolecule} from 'webmolkit/gfx/ArrangeMolecule';\nimport {ArrangeMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MoleculeStream} from 'webmolkit/data/MoleculeStream';\nimport {formatDouble} from 'webmolkit/util/util';\nimport {OntologyTree} from 'webmolkit/data/OntologyTree';\nimport {SquarePacking} from './SquarePacking';\nimport {FontData} from 'webmolkit/gfx/FontData';\nimport {MixfileComponent} from './Mixfile';\nimport {NormMixture} from './NormMixture';\nimport {Mixture} from './Mixture';\n\n/*\n\tArranging a Mixfile: will create a tree layout for all of the components, according to parameters.\n*/\n\nexport enum ArrangeMixtureLineSource\n{\n\tName,\n\tQuantity,\n\tIdentifier,\n\tMeta,\n}\n\nexport interface ArrangeMixtureLine\n{\n\ttext:string;\n\tcol:number;\n\tsource:ArrangeMixtureLineSource;\n}\n\nexport interface ArrangeMixtureComponent\n{\n\torigin:number[];\n\tcontent:MixfileComponent;\n\tparentIdx:number;\n\n\tboundary?:Box; // outer boundary (position on canvas)\n\n\tmol?:Molecule;\n\tmolLayout?:ArrangeMolecule;\n\tmolBox?:Box;\n\n\tnameBox?:Box;\n\tnameLines?:ArrangeMixtureLine[];\n\tfontSize?:number;\n\n\toutline?:Box; // inner boundary (surrounds molecule, names, etc.)\n\n\tisCollapsed?:boolean;\n\tcollapseBox?:Box;\n}\n\nconst PADDING = 0.25;\nconst VSPACE = 0.5;\nconst HSPACE = 1;\nconst COLLAPSE_SIZE = 0.3;\nconst COLLAPSE_GAP = 0.05;\n\nexport class ArrangeMixture\n{\n\tpublic norm:NormMixture = null; // optional: contents may be used for additional decoration\n\n\tpublic scale:number;\n\tpublic nameFontSize:number;\n\tpublic width = 0;\n\tpublic height = 0;\n\n\tpublic components:ArrangeMixtureComponent[] = [];\n\n\t// parameters to influence the drawing\n\tpublic limitStructW:number;\n\tpublic limitStructH:number;\n\tpublic minBoxSize:Size = null;\n\tpublic showCollapsors = false; // if true, boxes for [+]/[-] will be created for interactive use\n\tpublic collapsedBranches:number[][] = []; // any origin specified in this list will not display its children\n\tpublic packBranches:Size = null; // if defined, makes an effort to pack branches into the box size\n\tpublic hardwrapName:number; // name width guaranteed not longer than this\n\tpublic softwrapName:number; // name wrapping at selected characters kicks in after this width\n\tpublic includeIdentifiers = true; // if switched off, identifiers won't be included in text\n\n\t// --------------------- public methods ---------------------\n\n\t// sets up the object with the mandatory information\n\tconstructor(public mixture:Mixture, public measure:ArrangeMeasurement, public policy:RenderPolicy)\n\t{\n\t\tthis.scale = policy.data.pointScale;\n\t\tthis.nameFontSize = 0.5 * this.scale;\n\t\tthis.limitStructW = this.limitStructH = this.scale * 10;\n\t\tthis.hardwrapName = 12 * this.scale;\n\t\tthis.softwrapName = 8 * this.scale;\n\t}\n\n\t// carries out the arrangement\n\tpublic arrange():void\n\t{\n\t\tthis.createComponents();\n\t\tthis.layoutSubComponents(0);\n\t\tthis.contractComponents();\n\n\t\t// normalize boundaries\n\t\tlet outline:Box = null;\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tif (outline) outline = outline.union(comp.boundary); else outline = comp.boundary;\n\t\t}\n\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tcomp.boundary.x -= outline.x;\n\t\t\tcomp.boundary.y -= outline.y;\n\n\t\t\tif (comp.molLayout)\n\t\t\t{\n\t\t\t\tlet b1 = comp.boundary, b2 = comp.molBox;\n\t\t\t\tcomp.molLayout.squeezeInto(b1.x + b2.x, b1.y + b2.y, b2.w, b2.h);\n\t\t\t}\n\t\t}\n\t\tthis.width = outline.w;\n\t\tthis.height = outline.h;\n\t}\n\n\t// resize the whole thing\n\tpublic scaleComponents(modScale:number):void\n\t{\n\t\tif (modScale == 1) return;\n\n\t\tthis.scale *= modScale;\n\t\tthis.width *= modScale;\n\t\tthis.height *= modScale;\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tcomp.boundary.scaleBy(modScale);\n\t\t\tcomp.outline.scaleBy(modScale);\n\t\t\tif (comp.molBox)\n\t\t\t{\n\t\t\t\tcomp.molBox.scaleBy(modScale);\n\t\t\t\tif (comp.molLayout)\n\t\t\t\t{\n\t\t\t\t\tlet mx = comp.boundary.x + comp.molBox.x, my = comp.boundary.y + comp.molBox.y;\n\t\t\t\t\tcomp.molLayout.squeezeInto(mx, my, comp.molBox.w, comp.molBox.h);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (comp.nameBox) comp.nameBox.scaleBy(modScale);\n\t\t\tif (comp.collapseBox) comp.collapseBox.scaleBy(modScale);\n\t\t\tcomp.fontSize *= modScale;\n\t\t}\n\t}\n\n\t// returns the index of the indicated origin vector, or -1 if not present\n\tpublic findComponent(origin:number[]):number\n\t{\n\t\tfor (let n = 0; n < this.components.length; n++) if (Vec.equals(this.components[n].origin, origin)) return n;\n\t\treturn -1;\n\t}\n\n\t// turn quantity info into a readable string\n\tpublic static formatQuantity(mixcomp:MixfileComponent):string\n\t{\n\t\tlet prec = (val:number):string =>\n\t\t{\n\t\t\tif (val == null) return '';\n\t\t\tif (val > 10000) return Math.round(val).toString();\n\t\t\tlet str = val.toPrecision(6);\n\t\t\tif (str.indexOf('e') >= 0 || str.indexOf('.') < 0) return str;\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tif (str.endsWith('0')) str = str.substring(0, str.length - 1);\n\t\t\t\telse if (str.endsWith('.')) {str = str.substring(0, str.length - 1); break;}\n\t\t\t\telse break;\n\t\t\t}\n\t\t\treturn str;\n\t\t};\n\n\t\tif (mixcomp.ratio)\n\t\t{\n\t\t\tif (mixcomp.ratio.length == 2) return prec(mixcomp.ratio[0]) + '/' + prec(mixcomp.ratio[1]);\n\t\t\treturn null; // invalid ratio\n\t\t}\n\n\t\tif (mixcomp.quantity == null) return null;\n\n\t\tlet str = '';\n\t\tif (mixcomp.relation && mixcomp.relation != '=')\n\t\t{\n\t\t\tlet rel = mixcomp.relation;\n\t\t\tif (rel == '>=') rel = '\\u{2265}'; else if (rel == '<=') rel = '\\u{2264}';\n\t\t\tstr += rel /*+ ' '*/;\n\t\t}\n\t\tif (mixcomp.quantity instanceof Array)\n\t\t{\n\t\t\tif (mixcomp.quantity.length == 0) return;\n\t\t\tstr += prec(mixcomp.quantity[0]);\n\t\t\tif (mixcomp.quantity.length >= 2) str += ' - ' + prec(mixcomp.quantity[1]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr += prec(mixcomp.quantity); // is presumed to be scalar\n\t\t\tif (mixcomp.error)\n\t\t\t{\n\t\t\t\t// TODO: match the significant figures more carefully\n\t\t\t\tstr += ' \\u{00B1} ' + prec(mixcomp.error);\n\t\t\t}\n\t\t}\n\n\t\tif (mixcomp.units)\n\t\t{\n\t\t\tif (!mixcomp.units.startsWith('%')) str += ' ';\n\t\t\tstr += mixcomp.units;\n\t\t}\n\n\t\treturn str;\n\t}\n\n\t// if the component has a \"standardised\" quantity, format and return\n\tprivate formatNormQuantity(origin:number[]):string\n\t{\n\t\tif (!this.norm) return;\n\t\tlet note = this.norm.findNote(origin);\n\t\tif (!note || !note.concQuantity) return;\n\n\t\tlet comp:MixfileComponent =\n\t\t{\n\t\t\tquantity: note.concQuantity,\n\t\t\terror: note.concError,\n\t\t\tunits: note.concUnits,\n\t\t\trelation: note.concRelation,\n\t\t};\n\t\treturn ArrangeMixture.formatQuantity(comp);\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\t// instantiate each component in the diagram (which includes pluses and arrows)\n\tprivate createComponents():void\n\t{\n\t\t// assemble the components into a flat hierarchy\n\t\tlet examineBranch = (origin:number[], mixcomp:MixfileComponent, idx:number):void =>\n\t\t{\n\t\t\tlet comp:ArrangeMixtureComponent = {origin: origin, content: mixcomp, parentIdx: idx};\n\t\t\tlet parentIdx = this.components.push(comp) - 1;\n\n\t\t\t// see if it's been indicated as collapsed\n\t\t\tcomp.isCollapsed = false;\n\t\t\tfor (let origin of this.collapsedBranches) if (Vec.equals(origin, comp.origin)) comp.isCollapsed = true;\n\n\t\t\tif (mixcomp.contents && !comp.isCollapsed) for (let n = 0; n < mixcomp.contents.length; n++)\n\t\t\t{\n\t\t\t\tlet subOrigin = Vec.append(origin, n);\n\t\t\t\texamineBranch(subOrigin, mixcomp.contents[n], parentIdx);\n\t\t\t}\n\t\t};\n\t\texamineBranch([], this.mixture.mixfile, -1);\n\n\t\tlet padding = PADDING * this.scale;\n\n\t\t// do the sizing for each component\n\t\tfor (let [idx, comp] of this.components.entries())\n\t\t{\n\t\t\tlet mixcomp = comp.content;\n\n\t\t\t// handle molecule, if any\n\t\t\tif (mixcomp.molfile) comp.mol = MoleculeStream.readUnknown(mixcomp.molfile);\n\t\t\tif (comp.mol)\n\t\t\t{\n\t\t\t\tcomp.molLayout = new ArrangeMolecule(comp.mol, this.measure, this.policy);\n\t\t\t\tcomp.molLayout.arrange();\n\t\t\t\tcomp.molLayout.squeezeInto(0, 0, this.limitStructW, this.limitStructH);\n\t\t\t\tlet bounds = comp.molLayout.determineBoundary();\n\t\t\t\tcomp.molBox = new Box(padding, padding, Math.ceil(bounds[2] - bounds[0]), Math.ceil(bounds[3] - bounds[1]));\n\t\t\t}\n\t\t\telse comp.molBox = Box.zero();\n\n\t\t\t// handle name, or other content needing representation\n\t\t\tcomp.nameLines = [];\n\t\t\tif (mixcomp.name) this.wrapSplitName(comp.nameLines, mixcomp.name, 0x000000, ArrangeMixtureLineSource.Name);\n\n\t\t\t// (... synonyms, and linewrapping ...)\n\t\t\tlet qline = ArrangeMixture.formatQuantity(mixcomp);\n\t\t\tif (qline) comp.nameLines.push({text: qline, col: 0x000000, source: ArrangeMixtureLineSource.Quantity});\n\n\t\t\tqline = this.formatNormQuantity(comp.origin);\n\t\t\tif (qline) comp.nameLines.push({text: `(${qline})`, col: 0x808080, source: ArrangeMixtureLineSource.Quantity});\n\n\t\t\tif (this.includeIdentifiers && mixcomp.identifiers) for (let key in mixcomp.identifiers)\n\t\t\t{\n\t\t\t\tlet line = key + ' ';\n\t\t\t\tlet val = mixcomp.identifiers[key];\n\t\t\t\tif (val instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tfor (let n = 0; n < val.length; n++) line += (n == 0 ? '' : ', ') + val[n];\n\t\t\t\t}\n\t\t\t\telse line += val;\n\t\t\t\tcomp.nameLines.push({text: this.truncateEllipsis(line), col: 0x42007E, source: ArrangeMixtureLineSource.Identifier});\n\t\t\t}\n\t\t\tif (mixcomp.metadata) for (let meta of mixcomp.metadata)\n\t\t\t{\n\t\t\t\tlet metaString = (m:string | number):string =>\n\t\t\t\t{\n\t\t\t\t\tif (typeof m == 'number') return formatDouble(m, 4);\n\t\t\t\t\tif (!OntologyTree.main) return m;\n\t\t\t\t\tlet branch = OntologyTree.main.getBranch(m);\n\t\t\t\t\tif (Vec.notBlank(branch)) return branch[0].label;\n\t\t\t\t\treturn m;\n\t\t\t\t};\n\t\t\t\tlet bits:string[] = [];\n\t\t\t\tif (Array.isArray(meta)) bits = meta.map((m) => metaString(m)); else bits = [metaString(meta as string | number)];\n\t\t\t\tcomp.nameLines.push({text: bits.join(' '), col: 0x002B88, source: ArrangeMixtureLineSource.Meta});\n\t\t\t}\n\n\t\t\tcomp.nameBox = new Box(padding, padding);\n\t\t\tcomp.fontSize = this.nameFontSize;\n\t\t\tfor (let n = 0; n < comp.nameLines.length; n++)\n\t\t\t{\n\t\t\t\tlet wad = this.measure.measureText(comp.nameLines[n].text, comp.fontSize);\n\t\t\t\tcomp.nameBox.w = Math.max(comp.nameBox.w, wad[0]);\n\t\t\t\tcomp.nameBox.h += wad[1] + (n > 0 ? wad[2] * 2 : 0);\n\t\t\t}\n\n\t\t\tcomp.outline = Box.zero();\n\t\t\tcomp.outline.w = Math.max(comp.molBox.w, comp.nameBox.w) + 2 * padding;\n\t\t\tcomp.outline.h = comp.molBox.h + comp.nameBox.h + 2 * padding;\n\t\t\tif (comp.molBox.notEmpty() && comp.nameBox.notEmpty())\n\t\t\t{\n\t\t\t\tcomp.outline.h += padding;\n\t\t\t\tcomp.nameBox.y += comp.molBox.h + padding;\n\t\t\t\tcomp.molBox.w = comp.nameBox.w = Math.max(comp.molBox.w, comp.nameBox.w);\n\t\t\t}\n\n\t\t\tif (this.minBoxSize)\n\t\t\t{\n\t\t\t\tlet minsz = this.minBoxSize;\n\t\t\t\tlet dw = minsz.w - comp.outline.w, dh = minsz.h - comp.outline.h;\n\t\t\t\tif (dw > 0)\n\t\t\t\t{\n\t\t\t\t\tcomp.outline.w += dw;\n\t\t\t\t\tcomp.molBox.w += dw;\n\t\t\t\t}\n\t\t\t\tif (dh > 0)\n\t\t\t\t{\n\t\t\t\t\tcomp.outline.h += dh;\n\t\t\t\t\tcomp.molBox.h += dh;\n\t\t\t\t\tcomp.nameBox.y += dh;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcomp.boundary = comp.outline.clone();\n\n\t\t\tif ((this.showCollapsors || comp.isCollapsed) && Vec.notBlank(comp.content.contents))\n\t\t\t{\n\t\t\t\tlet gap = COLLAPSE_GAP * this.scale, wh = COLLAPSE_SIZE * this.scale;\n\t\t\t\tcomp.collapseBox = new Box(comp.boundary.maxX() + gap, comp.boundary.midY() - 0.5 * wh, wh, wh);\n\t\t\t\tcomp.boundary.w += gap + wh;\n\t\t\t}\n\t\t}\n\t}\n\n\t// arranges all of the subcomponents for a given index, positioning them relative to the current position; returns the indices of\n\t// the entire branch, for subsequent touchup\n\tprivate layoutSubComponents(idx:number):number[]\n\t{\n\t\tlet wholeBranch:number[] = [idx];\n\t\tlet branchBlock:number[][] = [];\n\t\tlet branchBox:Box[] = [];\n\n\t\tlet totalWidth = 0, totalHeight = 0;\n\n\t\tfor (let n = idx + 1; n < this.components.length; n++)\n\t\t{\n\t\t\tlet comp = this.components[n];\n\t\t\tif (comp.parentIdx != idx) continue;\n\n\t\t\tlet branch = this.layoutSubComponents(n);\n\t\t\tif (branch.length == 0) continue;\n\n\t\t\tlet box:Box = null;\n\t\t\tfor (let i of branch)\n\t\t\t{\n\t\t\t\twholeBranch.push(i);\n\t\t\t\tlet bound = this.components[i].boundary;\n\t\t\t\tif (box) box = box.union(bound); else box = bound;\n\t\t\t}\n\n\t\t\tbranchBlock.push(branch);\n\t\t\tbranchBox.push(box);\n\n\t\t\ttotalWidth = Math.max(totalWidth, box.w);\n\t\t\ttotalHeight += box.h;\n\t\t}\n\t\tif (branchBlock.length == 0) return wholeBranch;\n\n\t\tlet hspace = HSPACE * this.scale, vspace = VSPACE * this.scale;\n\t\ttotalHeight += vspace * (branchBlock.length - 1);\n\n\t\tlet cbox = this.components[idx].boundary;\n\t\tlet x = cbox.maxX() + hspace;\n\n\t\t// special case: may try to pack the boxes into a smaller area rather than vertically on top of each other\n\t\tif (this.packBranches && branchBlock.length > 2 && totalHeight > this.packBranches.h)\n\t\t{\n\t\t\tlet packSize = this.packBranches.clone();\n\t\t\tfor (let box of branchBox) packSize.h = Math.max(packSize.h, box.h); // if a sub-box is bigger than overall, no need to limit it further\n\n\t\t\tlet sq = new SquarePacking(packSize, branchBox, /*hspace*/ vspace, vspace);\n\t\t\tif (sq.pack())\n\t\t\t{\n\t\t\t\tlet y = cbox.midY() - 0.5 * sq.outline.h;\n\t\t\t\tfor (let n = 0; n < branchBlock.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet box = sq.layout[n];\n\t\t\t\t\tlet dx = x - branchBox[n].x + box.x, dy = y - branchBox[n].y + box.y;\n\t\t\t\t\tfor (let i of branchBlock[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.components[i].boundary.x += dx;\n\t\t\t\t\t\tthis.components[i].boundary.y += dy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn wholeBranch;\n\t\t\t}\n\t\t}\n\n\t\t// !! note: not guaranteed that x is high enough to not interfere with other boxes; will need a post-check of some kind, maybe here,\n\t\t//    maybe further down the line\n\n\t\tlet y = cbox.midY() - 0.5 * totalHeight;\n\t\tfor (let n = 0; n < branchBlock.length; n++)\n\t\t{\n\t\t\tlet dx = x - branchBox[n].x, dy = y - branchBox[n].y;\n\t\t\tfor (let i of branchBlock[n])\n\t\t\t{\n\t\t\t\tthis.components[i].boundary.x += dx;\n\t\t\t\tthis.components[i].boundary.y += dy;\n\t\t\t}\n\t\t\ty += branchBox[n].h + vspace;\n\t\t}\n\n\t\treturn wholeBranch;\n\t}\n\n\t// component layout is done, but may be able to \"reel in\" some of the branches to make it smaller\n\tprivate contractComponents():void\n\t{\n\t\tlet allChildren:number[][] = [];\n\t\tfor (let n = 0; n < this.components.length; n++) \n\t\t{\n\t\t\tallChildren.push([]);\n\t\t\tfor (let idx = this.components[n].parentIdx; idx >= 0; idx = this.components[idx].parentIdx) allChildren[idx].push(n);\n\t\t}\n\n\t\tlet hspace = HSPACE * this.scale, padding = PADDING * this.scale;\n\n\t\twhile (true)\n\t\t{\n\t\t\tlet anything = false;\n\n\t\t\tfor (let n = 1; n < allChildren.length; n++)\n\t\t\t{\n\t\t\t\tlet pidx = this.components[n].parentIdx;\n\t\t\t\tlet boundX = this.components[pidx].boundary.maxX() + hspace;\n\t\t\t\tlet dx = this.components[n].boundary.minX() - boundX; // how far to move to the left\n\t\t\t\tif (dx < 1) continue; // no room to contract\n\n\t\t\t\tlet idxInside = [n, ...allChildren[n]];\n\t\t\t\tlet idxOutside = Vec.identity0(allChildren.length).filter((idx) => !idxInside.includes(idx));\n\n\t\t\t\tfor (let i of idxInside)\n\t\t\t\t{\n\t\t\t\t\tlet box1 = this.components[i].boundary.withGrow(padding, padding);\n\t\t\t\t\tfor (let j of idxOutside)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet box2 = this.components[j].boundary;\n\t\t\t\t\t\tif (box2.minX() > box1.maxX()) continue;\n\t\t\t\t\t\tif (box1.minY() > box2.maxY() || box1.maxY() < box2.minY()) continue;\n\n\t\t\t\t\t\tdx = Math.min(dx, box1.minX() - box2.maxX());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dx > 1)\n\t\t\t\t{\n\t\t\t\t\tfor (let n of idxInside) this.components[n].boundary.x -= dx;\n\t\t\t\t\tanything = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!anything) break;\n\t\t}\n\t}\n\n\t// if the given string is longer than the soft/hard limit, looks to break it up into smaller pieces; each of them is\n\t// appended to the list parameter\n\tprivate wrapSplitName(list:ArrangeMixtureLine[], text:string, col:number, source:ArrangeMixtureLineSource):void\n\t{\n\t\tif (!text) return;\n\t\tlet xpos = FontData.measureWidths(text, this.nameFontSize);\n\t\tif (Vec.last(xpos) <= this.softwrapName)\n\t\t{\n\t\t\tlist.push({text, col, source});\n\t\t\treturn;\n\t\t}\n\n\t\tlet p = 0;\n\t\tfor (; xpos[p] < this.softwrapName; p++) {}\n\t\tfor (; xpos[p] < this.hardwrapName; p++)\n\t\t{\n\t\t\tlet ch = text.charAt(p);\n\t\t\tif (' ,;-/'.includes(ch))\n\t\t\t{\n\t\t\t\tp++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlist.push({text: text.substring(0, p).trim(), col, source});\n\t\tthis.wrapSplitName(list, text.substring(p).trim(), col, source);\n\t}\n\n\t// if the line is longer than the hard wrap limit, just truncate with ellipsis\n\tprivate truncateEllipsis(txt:string):string\n\t{\n\t\tlet xpos = FontData.measureWidths(txt, this.nameFontSize);\n\t\tif (Vec.last(xpos) <= this.hardwrapName) return txt;\n\t\tlet ellipsis = '...', ellw = FontData.measureText(ellipsis, this.nameFontSize)[0];\n\t\tlet keep = 1;\n\t\tfor (; keep < txt.length; keep++) if (xpos[keep] + ellw > this.hardwrapName) break;\n\t\treturn txt.substring(0, keep) + ellipsis;\n\t}\n}\n\n","import { Box } from '../util/Geom';\nimport { colourAlpha, colourCanvas, colourCode, DEGRAD, newElement, pixelDensity } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { FontData } from './FontData';\nexport var TextAlign;\n(function (TextAlign) {\n    TextAlign[TextAlign[\"Centre\"] = 0] = \"Centre\";\n    TextAlign[TextAlign[\"Left\"] = 1] = \"Left\";\n    TextAlign[TextAlign[\"Right\"] = 2] = \"Right\";\n    TextAlign[TextAlign[\"Baseline\"] = 0] = \"Baseline\";\n    TextAlign[TextAlign[\"Middle\"] = 4] = \"Middle\";\n    TextAlign[TextAlign[\"Top\"] = 8] = \"Top\";\n    TextAlign[TextAlign[\"Bottom\"] = 16] = \"Bottom\";\n})(TextAlign || (TextAlign = {}));\nvar PrimClass;\n(function (PrimClass) {\n    PrimClass[PrimClass[\"Line\"] = 1] = \"Line\";\n    PrimClass[PrimClass[\"Rect\"] = 2] = \"Rect\";\n    PrimClass[PrimClass[\"Oval\"] = 3] = \"Oval\";\n    PrimClass[PrimClass[\"Path\"] = 4] = \"Path\";\n    PrimClass[PrimClass[\"Text\"] = 5] = \"Text\";\n    PrimClass[PrimClass[\"TextNative\"] = 6] = \"TextNative\";\n})(PrimClass || (PrimClass = {}));\nclass SpoolSVG {\n    constructor(prettyPrint) {\n        this.prettyPrint = prettyPrint;\n        this.lines = [];\n        this.depth = 0;\n    }\n    spool(str) { if ((str === null || str === void 0 ? void 0 : str.length) > 0)\n        this.lines.push(str); }\n    start(str) {\n        if (this.prettyPrint && this.depth > 0)\n            this.lines.push('  '.repeat(this.depth));\n        this.spool(str);\n    }\n    stop(str) {\n        this.spool(str);\n        if (this.prettyPrint)\n            this.lines.push('\\n');\n    }\n    whole(str) {\n        if (this.prettyPrint && this.depth > 0)\n            this.lines.push('  '.repeat(this.depth));\n        this.spool(str);\n        if (this.prettyPrint)\n            this.lines.push('\\n');\n    }\n    attr(key, val) {\n        var _a;\n        if (typeof val == 'number') {\n            val = val.toFixed(4);\n            let match = (_a = /^(.*\\.\\d*?[1-9]+)0+$/.exec(val)) !== null && _a !== void 0 ? _a : /^(.*)\\.0+$/.exec(val);\n            if (match)\n                val = match[1];\n        }\n        this.spool(` ${key}=\"${val}\"`);\n    }\n    inc() { this.depth++; }\n    dec() { this.depth--; }\n    toString() { return this.lines.join(''); }\n}\nexport class MetaVector {\n    constructor(vec) {\n        this.types = [];\n        this.prims = [];\n        this.width = 0;\n        this.height = 0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.scale = 1;\n        this.density = 1;\n        this.charMissing = false;\n        this.lowX = null;\n        this.lowY = null;\n        this.highX = null;\n        this.highY = null;\n        const font = FontData.main;\n        this.charMask = Vec.booleanArray(false, font.UNICODE.length);\n        if (vec != null) {\n            if (vec.size != null) {\n                this.width = vec.size[0];\n                this.height = vec.size[1];\n            }\n            if (vec.types != null)\n                this.types = vec.types;\n            if (vec.prims != null)\n                this.prims = vec.prims;\n            for (let p of this.prims)\n                if (p.primClass == PrimClass.Text) {\n                    let { txt } = p;\n                    for (let n = 0; n < txt.length; n++) {\n                        let i = font.getIndex(txt.charAt(n));\n                        if (i >= 0)\n                            this.charMask[i] = true;\n                        else\n                            this.charMissing = true;\n                    }\n                }\n        }\n    }\n    drawLine(x1, y1, x2, y2, colour, thickness) {\n        if (thickness == null)\n            thickness = 1;\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Line, thickness, colour });\n        const bump = 0.5 * thickness;\n        this.updateBounds(Math.min(x1, x2) - bump, Math.min(y1, y2) - bump);\n        this.updateBounds(Math.max(x1, x2) + bump, Math.max(y1, y2) + bump);\n        this.prims.push({ primClass: PrimClass.Line, typeidx, x1, y1, x2, y2 });\n    }\n    drawRect(x, y, w, h, edgeCol, thickness, fillCol) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Rect, edgeCol, fillCol, thickness });\n        const bump = 0.5 * thickness;\n        this.updateBounds(x - bump, y - bump);\n        this.updateBounds(x + w + bump, y + h + bump);\n        this.prims.push({ primClass: PrimClass.Rect, typeidx, x, y, w, h });\n    }\n    drawOval(cx, cy, rw, rh, edgeCol, thickness, fillCol) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        const bump = 0.5 * thickness;\n        this.updateBounds(cx - rw - bump, cy - rh - bump);\n        this.updateBounds(cx + rw + bump, cy + rh + bump);\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Oval, edgeCol, fillCol, thickness });\n        this.prims.push({ primClass: PrimClass.Oval, typeidx, cx, cy, rw, rh });\n    }\n    drawPath(xpoints, ypoints, ctrlFlags, isClosed, edgeCol, thickness, fillCol, hardEdge) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        if (hardEdge == null)\n            hardEdge = false;\n        const bump = 0.5 * thickness;\n        for (let n = 0; n < xpoints.length; n++) {\n            this.updateBounds(xpoints[n] - bump, ypoints[n] - bump);\n            if (bump != 0)\n                this.updateBounds(xpoints[n] + bump, ypoints[n] + bump);\n        }\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Path, edgeCol, fillCol, thickness, hardEdge });\n        this.prims.push({ primClass: PrimClass.Path, typeidx, count: xpoints.length,\n            x: Vec.duplicate(xpoints), y: Vec.duplicate(ypoints), ctrl: ctrlFlags && [...ctrlFlags], closed: isClosed });\n    }\n    drawPoly(xpoints, ypoints, edgeCol, thickness, fillCol, hardEdge) {\n        this.drawPath(xpoints, ypoints, null, true, edgeCol, thickness, fillCol, hardEdge);\n    }\n    drawText(x, y, txt, size, colour, align, direction) {\n        if (align == null)\n            align = TextAlign.Left | TextAlign.Baseline;\n        if (direction == null)\n            direction = 0;\n        let cosTheta = 1, sinTheta = 0;\n        if (direction != 0)\n            [cosTheta, sinTheta] = [Math.cos(direction * DEGRAD), Math.sin(direction * DEGRAD)];\n        const font = FontData.main;\n        for (let n = 0; n < txt.length; n++) {\n            let i = font.getIndex(txt.charAt(n));\n            if (i >= 0)\n                this.charMask[i] = true;\n            else\n                this.charMissing = true;\n        }\n        let metrics = font.measureText(txt, size);\n        let bx = 0, by = 0;\n        let dx = 0;\n        if ((align & TextAlign.Left) != 0) { }\n        else if ((align & TextAlign.Right) != 0)\n            dx = -metrics[0];\n        else\n            dx = -0.5 * metrics[0];\n        if (dx != 0) {\n            bx += dx * cosTheta;\n            by += dx * sinTheta;\n        }\n        let dy = 0;\n        if ((align & TextAlign.Middle) != 0)\n            dy = 0.5 * metrics[1];\n        else if ((align & TextAlign.Top) != 0)\n            dy = metrics[1];\n        else if ((align & TextAlign.Bottom) != 0)\n            dy = -metrics[2];\n        if (dy != 0) {\n            bx -= dy * sinTheta;\n            by += dy * cosTheta;\n        }\n        let x1 = 0, y1 = 0, x2 = 0, y2 = 0;\n        let tx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            if (i >= 0) {\n                let outlineX = font.getOutlineX(i), outlineY = font.getOutlineY(i);\n                x1 = Math.min(x1, tx + Vec.min(outlineX));\n                x2 = Math.max(x2, tx + Vec.max(outlineX));\n                y1 = Math.min(y1, -Vec.max(outlineY));\n                y2 = Math.max(y2, -Vec.min(outlineY));\n                tx += font.HORIZ_ADV_X[i];\n                if (n < txt.length - 1)\n                    tx += font.getKerning(ch, txt.charAt(n + 1));\n            }\n            else\n                tx += font.MISSING_HORZ;\n        }\n        const mscale = size * font.INV_UNITS_PER_EM;\n        if (direction == 0) {\n            this.updateBounds(x + bx + x1 * mscale, y + by + y1 * mscale);\n            this.updateBounds(x + bx + x2 * mscale, y + by + y2 * mscale);\n        }\n        else {\n            let rx1 = x1 * mscale, ry1 = y1 * mscale;\n            let rx2 = x2 * mscale, ry2 = y2 * mscale;\n            this.updateBounds(x + bx + rx1 * cosTheta - ry1 * sinTheta, y + by + rx1 * sinTheta + ry1 * cosTheta);\n            this.updateBounds(x + bx + rx2 * cosTheta - ry1 * sinTheta, y + by + rx2 * sinTheta + ry1 * cosTheta);\n            this.updateBounds(x + bx + rx2 * cosTheta - ry2 * sinTheta, y + by + rx2 * sinTheta + ry2 * cosTheta);\n            this.updateBounds(x + bx + rx1 * cosTheta - ry2 * sinTheta, y + by + rx1 * sinTheta + ry2 * cosTheta);\n        }\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Text, size, colour });\n        this.prims.push({ primClass: PrimClass.Text, typeidx, x: x + bx, y: y + by, txt, direction });\n    }\n    drawTextNative(x, y, txt, fontFamily, fontSize, colour, align, opt) {\n        if (!opt)\n            opt = {};\n        if (align == null)\n            align = TextAlign.Left | TextAlign.Baseline;\n        const font = FontData.main;\n        let metrics = font.measureTextNative(txt, fontFamily, fontSize, opt);\n        if ((align & TextAlign.Left) != 0) { }\n        else if ((align & TextAlign.Right) != 0)\n            x -= metrics[0];\n        else\n            x -= 0.5 * metrics[0];\n        if ((align & TextAlign.Middle) != 0)\n            y += 0.5 * metrics[1];\n        else if ((align & TextAlign.Top) != 0)\n            y += metrics[1];\n        else if ((align & TextAlign.Bottom) != 0)\n            y -= metrics[2];\n        this.updateBounds(x, y - metrics[1]);\n        this.updateBounds(x + metrics[0], y + metrics[2]);\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.TextNative, family: fontFamily, size: fontSize, colour, opt });\n        this.prims.push({ primClass: PrimClass.TextNative, typeidx, x, y, txt });\n    }\n    boundLowX() { return this.lowX; }\n    boundLowY() { return this.lowY; }\n    boundHighX() { return this.highX; }\n    boundHighY() { return this.highY; }\n    getBounds() { return new Box(this.lowX, this.lowY, this.highX - this.lowX, this.highY - this.lowY); }\n    measure() {\n        this.width = Math.ceil(this.highX - this.lowX);\n        this.height = Math.ceil(this.highY - this.lowY);\n    }\n    normalise() {\n        if (this.lowX != 0 || this.lowY != 0)\n            this.transformPrimitives(-this.lowX, -this.lowY, 1, 1);\n        this.width = Math.ceil(this.highX - this.lowX);\n        this.height = Math.ceil(this.highY - this.lowY);\n    }\n    setSize(width, height) { this.width = width; this.height = height; }\n    transformIntoBox(box) {\n        this.transformPrimitives(-this.lowX, -this.lowY, 1, 1);\n        let nw = Math.ceil(this.highX - this.lowX), nh = Math.ceil(this.highY - this.lowY);\n        let scale = 1;\n        if (nw > box.w) {\n            let mod = box.w / nw;\n            nw = box.w;\n            nh *= mod;\n            scale *= mod;\n        }\n        if (nh > box.h) {\n            let mod = box.h / nh;\n            nh = box.h;\n            nw *= mod;\n            scale *= mod;\n        }\n        let ox = 0.5 * (box.w - nw), oy = 0.5 * (box.h - nh);\n        this.transformPrimitives(box.x + ox, box.y + oy, scale, scale);\n    }\n    scaleExtent(maxWidth, maxHeight) {\n        let w = this.highX - this.lowX, h = this.highY - this.lowY;\n        if (w <= maxWidth && h <= maxHeight)\n            return;\n        let scale = Math.min(maxWidth / w, maxHeight / h);\n        this.transformPrimitives(0, 0, scale, scale);\n    }\n    transformPrimitives(ox, oy, sw, sh) {\n        if (ox == 0 && oy == 0 && sw == 1 && sh == 1)\n            return;\n        for (let a of this.prims) {\n            const type = a.primClass;\n            if (type == PrimClass.Line) {\n                let line = a;\n                line.x1 = ox + line.x1 * sw;\n                line.y1 = oy + line.y1 * sh;\n                line.x2 = ox + line.x2 * sw;\n                line.y2 = oy + line.y2 * sh;\n            }\n            else if (type == PrimClass.Rect) {\n                let rect = a;\n                rect.x = ox + rect.x * sw;\n                rect.y = oy + rect.y * sh;\n                rect.w = rect.w * sw;\n                rect.h = rect.h * sh;\n            }\n            else if (type == PrimClass.Oval) {\n                let oval = a;\n                oval.cx = ox + oval.cx * sw;\n                oval.cy = oy + oval.cy * sh;\n                oval.rw *= sw;\n                oval.rh *= sh;\n            }\n            else if (type == PrimClass.Path) {\n                let path = a;\n                let sz = path.count, px = path.x, py = path.y;\n                for (let n = 0; n < sz; n++) {\n                    px[n] = ox + px[n] * sw;\n                    py[n] = oy + py[n] * sh;\n                }\n            }\n            else if (type == PrimClass.Text || type == PrimClass.TextNative) {\n                let text = a;\n                text.x = ox + text.x * sw;\n                text.y = oy + text.y * sh;\n            }\n        }\n        let swsh = 0.5 * (sw + sh);\n        if (swsh != 1)\n            for (let t of this.types) {\n                const type = t.primClass;\n                if (type == PrimClass.Line)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Rect)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Oval)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Path)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Text)\n                    t.size *= swsh;\n                else if (type == PrimClass.TextNative)\n                    t.size *= swsh;\n            }\n        this.lowX = ox + this.lowX * sw;\n        this.lowY = oy + this.lowY * sh;\n        this.highX = ox + this.highX * sw;\n        this.highY = oy + this.highY * sh;\n    }\n    renderInto(parent) {\n        let canvas = newElement(parent, 'canvas', { 'width': this.width, 'height': this.height });\n        this.renderCanvas(canvas);\n        return canvas;\n    }\n    renderCanvas(canvas, clearFirst) {\n        let ctx = canvas.getContext('2d');\n        if (clearFirst)\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n        let w = this.width, h = this.height;\n        this.density = pixelDensity();\n        canvas.style.width = w + 'px';\n        canvas.style.height = h + 'px';\n        canvas.width = w * this.density;\n        canvas.height = h * this.density;\n        this.renderContext(ctx);\n    }\n    renderContext(ctx) {\n        ctx.save();\n        ctx.scale(this.density, this.density);\n        this.typeObj = [];\n        for (let n = 0; n < this.types.length; n++) {\n            let t = this.types[n];\n            if (t.primClass == PrimClass.Line)\n                this.typeObj[n] = this.setupTypeLine(t);\n            else if (t.primClass == PrimClass.Rect)\n                this.typeObj[n] = this.setupTypeRect(t);\n            else if (t.primClass == PrimClass.Oval)\n                this.typeObj[n] = this.setupTypeOval(t);\n            else if (t.primClass == PrimClass.Path)\n                this.typeObj[n] = this.setupTypePath(t);\n            else if (t.primClass == PrimClass.Text)\n                this.typeObj[n] = this.setupTypeText(t);\n            else if (t.primClass == PrimClass.TextNative)\n                this.typeObj[n] = this.setupTypeTextNative(t);\n        }\n        for (let n = 0; n < this.prims.length; n++) {\n            let p = this.prims[n];\n            if (p.primClass == PrimClass.Line)\n                this.renderLine(ctx, p);\n            else if (p.primClass == PrimClass.Rect)\n                this.renderRect(ctx, p);\n            else if (p.primClass == PrimClass.Oval)\n                this.renderOval(ctx, p);\n            else if (p.primClass == PrimClass.Path)\n                this.renderPath(ctx, p);\n            else if (p.primClass == PrimClass.Text)\n                this.renderText(ctx, p);\n            else if (p.primClass == PrimClass.TextNative)\n                this.renderTextNative(ctx, p);\n        }\n        ctx.restore();\n    }\n    createSVG(prettyPrint = false, withXlink = false) {\n        let svg = new SpoolSVG(prettyPrint);\n        svg.start('<svg xmlns=\"http://www.w3.org/2000/svg\"');\n        if (withXlink)\n            svg.attr('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n        svg.attr('width', this.width);\n        svg.attr('height', this.height);\n        svg.attr('viewBox', `0 0 ${this.width} ${this.height}`);\n        svg.stop('>');\n        svg.inc();\n        this.renderSVG(svg, withXlink);\n        svg.dec();\n        svg.whole('</svg>');\n        return svg.toString();\n    }\n    renderSVG(svg, withXlink = false) {\n        this.typeObj = [];\n        const font = FontData.main;\n        svg.whole('<defs>');\n        svg.inc();\n        if (this.charMissing) {\n            svg.start('<path');\n            svg.attr('id', 'missing');\n            svg.attr('d', font.MISSING_DATA);\n            svg.attr('edge', 'none');\n            svg.stop('/>');\n        }\n        for (let n = 0; n < font.UNICODE.length; n++)\n            if (this.charMask[n]) {\n                svg.start('<path');\n                svg.attr('id', 'char' + n);\n                svg.attr('d', font.GLYPH_DATA[n]);\n                svg.attr('edge', 'none');\n                svg.stop('/>');\n            }\n        svg.dec();\n        svg.whole('</defs>');\n        for (let n = 0; n < this.types.length; n++) {\n            let t = this.types[n];\n            if (t.primClass == PrimClass.Line)\n                this.typeObj[n] = this.setupTypeLine(t);\n            else if (t.primClass == PrimClass.Rect)\n                this.typeObj[n] = this.setupTypeRect(t);\n            else if (t.primClass == PrimClass.Oval)\n                this.typeObj[n] = this.setupTypeOval(t);\n            else if (t.primClass == PrimClass.Path)\n                this.typeObj[n] = this.setupTypePath(t);\n            else if (t.primClass == PrimClass.Text)\n                this.typeObj[n] = this.setupTypeText(t);\n            else if (t.primClass == PrimClass.TextNative)\n                this.typeObj[n] = this.setupTypeTextNative(t);\n        }\n        for (let n = 0; n < this.prims.length;) {\n            let p = this.prims[n], num = 1;\n            if (p.primClass != PrimClass.Path && p.primClass != PrimClass.Text && p.primClass != PrimClass.TextNative) {\n                for (; n + num < this.prims.length; num++)\n                    if (this.prims[n + num].primClass != p.primClass || this.prims[n + num].typeidx != p.typeidx)\n                        break;\n            }\n            if (p.primClass == PrimClass.Line) {\n                if (num == 1)\n                    this.svgLine1(svg, p);\n                else\n                    this.svgLineN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Rect) {\n                if (num == 1)\n                    this.svgRect1(svg, p);\n                else\n                    this.svgRectN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Oval) {\n                if (num == 1)\n                    this.svgOval1(svg, p);\n                else\n                    this.svgOvalN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Path)\n                this.svgPath(svg, p);\n            else if (p.primClass == PrimClass.Text)\n                this.svgText(svg, p, withXlink);\n            else if (p.primClass == PrimClass.TextNative)\n                this.svgTextNative(svg, p);\n            n += num;\n        }\n    }\n    spool(into) {\n        for (let p of this.prims) {\n            if (p.primClass == PrimClass.Line) {\n                let { typeidx, x1, y1, x2, y2 } = p;\n                let { thickness, colour } = this.types[typeidx];\n                into.drawLine(x1, y1, x2, y2, colour, thickness);\n            }\n            else if (p.primClass == PrimClass.Rect) {\n                let { typeidx, x, y, w, h } = p;\n                let { edgeCol, fillCol, thickness } = this.types[typeidx];\n                into.drawRect(x, y, w, h, edgeCol, thickness, fillCol);\n            }\n            else if (p.primClass == PrimClass.Oval) {\n                let { typeidx, cx, cy, rw, rh } = p;\n                let { edgeCol, fillCol, thickness } = this.types[typeidx];\n                into.drawOval(cx, cy, rw, rh, edgeCol, thickness, fillCol);\n            }\n            else if (p.primClass == PrimClass.Path) {\n                let { typeidx, count, x, y, ctrl, closed } = p;\n                let { edgeCol, fillCol, thickness, hardEdge } = this.types[typeidx];\n                into.drawPath(x, y, ctrl, closed, edgeCol, thickness, fillCol, hardEdge);\n            }\n            else if (p.primClass == PrimClass.Text) {\n                let { typeidx, x, y, txt, direction } = p;\n                let { size, colour } = this.types[typeidx];\n                into.drawText(x, y, txt, size, colour, null, direction);\n            }\n            else if (p.primClass == PrimClass.TextNative) {\n                let { typeidx, x, y, txt } = p;\n                let { family, size, colour } = this.types[typeidx];\n                into.drawTextNative(x, y, txt, family, size, colour);\n            }\n        }\n    }\n    setupTypeLine(t) {\n        let thickness = t.thickness * this.scale;\n        let colour = t.colour;\n        return { primClass: t.primClass, thickness, colour };\n    }\n    setupTypeRect(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness };\n    }\n    setupTypeOval(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness };\n    }\n    setupTypePath(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        let hardEdge = t.hardEdge;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness, hardEdge };\n    }\n    setupTypeText(t) {\n        let size = t.size * this.scale;\n        let colour = t.colour;\n        return { primClass: t.primClass, colour, size };\n    }\n    setupTypeTextNative(t) {\n        let family = t.family;\n        let size = t.size * this.scale;\n        let colour = t.colour;\n        let opt = t.opt;\n        return { primClass: t.primClass, colour, family, size, opt };\n    }\n    renderLine(ctx, line) {\n        let { x1, y1, x2, y2 } = line;\n        let { colour, thickness } = this.typeObj[line.typeidx];\n        x1 = this.offsetX + this.scale * x1;\n        y1 = this.offsetY + this.scale * y1;\n        x2 = this.offsetX + this.scale * x2;\n        y2 = this.offsetY + this.scale * y2;\n        if (colour != null) {\n            ctx.beginPath();\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2);\n            ctx.strokeStyle = colourCanvas(colour);\n            ctx.lineWidth = thickness;\n            ctx.lineCap = 'round';\n            ctx.stroke();\n        }\n    }\n    renderRect(ctx, rect) {\n        let { x, y, w, h } = rect;\n        let { edgeCol, fillCol, thickness } = this.typeObj[rect.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        w *= this.scale;\n        h *= this.scale;\n        if (fillCol != MetaVector.NOCOLOUR) {\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.fillRect(x, y, w, h);\n        }\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            ctx.strokeStyle = colourCanvas(edgeCol);\n            ctx.lineWidth = thickness;\n            ctx.lineCap = 'square';\n            ctx.strokeRect(x, y, w, h);\n        }\n    }\n    renderOval(ctx, oval) {\n        let { cx, cy, rw, rh } = oval;\n        let { edgeCol, fillCol, thickness } = this.typeObj[oval.typeidx];\n        cx = this.offsetX + this.scale * cx;\n        cy = this.offsetY + this.scale * cy;\n        rw *= this.scale;\n        rh *= this.scale;\n        if (fillCol != MetaVector.NOCOLOUR) {\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rw, rh, 0, 0, 2 * Math.PI, true);\n            ctx.fill();\n        }\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            ctx.strokeStyle = colourCanvas(edgeCol);\n            ctx.lineWidth = thickness;\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rw, rh, 0, 0, 2 * Math.PI, true);\n            ctx.stroke();\n        }\n    }\n    renderPath(ctx, path) {\n        let { count, x, y, ctrl, closed } = path;\n        let { edgeCol, fillCol, thickness, hardEdge } = this.typeObj[path.typeidx];\n        x = [...x];\n        y = [...y];\n        for (let n = 0; n < count; n++) {\n            x[n] = this.offsetX + this.scale * x[n];\n            y[n] = this.offsetY + this.scale * y[n];\n        }\n        for (let layer = 1; layer <= 2; layer++) {\n            if (layer == 1 && fillCol == MetaVector.NOCOLOUR)\n                continue;\n            if (layer == 2 && edgeCol == MetaVector.NOCOLOUR)\n                continue;\n            ctx.beginPath();\n            ctx.moveTo(x[0], y[0]);\n            for (let i = 1; i < count; i++) {\n                if (!ctrl || !ctrl[i]) {\n                    ctx.lineTo(x[i], y[i]);\n                }\n                else if (i < count - 1 && !ctrl[i + 1]) {\n                    ctx.quadraticCurveTo(x[i], y[i], x[i + 1], y[i + 1]);\n                    i++;\n                }\n                else if (i < count - 1 && !ctrl[i + 2]) {\n                    ctx.bezierCurveTo(x[i], y[i], x[i + 1], y[i + 1], x[i + 2], y[i + 2]);\n                    i += 2;\n                }\n            }\n            if (closed)\n                ctx.closePath();\n            if (layer == 1) {\n                ctx.fillStyle = colourCanvas(fillCol);\n                ctx.fill();\n            }\n            else {\n                ctx.strokeStyle = colourCanvas(edgeCol);\n                ctx.lineWidth = thickness;\n                ctx.lineCap = hardEdge ? 'square' : 'round';\n                ctx.lineJoin = hardEdge ? 'miter' : 'round';\n                ctx.stroke();\n            }\n        }\n    }\n    renderText(ctx, text) {\n        let { x, y, txt, direction } = text;\n        let { size, colour } = this.typeObj[text.typeidx];\n        let fill = colourCanvas(colour);\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let font = FontData.main;\n        let scale = size * this.scale / font.UNITS_PER_EM;\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            let path = null;\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                path = font.getMissingPath();\n            }\n            else\n                path = font.getGlyphPath(i);\n            if (path) {\n                ctx.save();\n                let theta = direction != 0 ? direction * DEGRAD : 0;\n                if (theta == 0)\n                    ctx.translate(x + dx * scale, y);\n                else\n                    ctx.translate(x + Math.cos(theta) * dx * scale, y + Math.sin(theta) * dx * scale);\n                ctx.scale(scale, -scale);\n                if (theta != 0)\n                    ctx.rotate(-theta);\n                ctx.fillStyle = fill;\n                ctx.fill(path);\n                ctx.restore();\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n        }\n    }\n    renderTextNative(ctx, text) {\n        let { x, y, txt } = text;\n        let { size, colour, family, opt } = this.typeObj[text.typeidx];\n        let fill = colourCanvas(colour);\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        ctx.save();\n        let pfx = '';\n        if (opt.bold)\n            pfx += 'bold ';\n        if (opt.italic)\n            pfx += 'italic ';\n        ctx.font = pfx + (size * this.scale) + 'px ' + family;\n        ctx.fillStyle = fill;\n        ctx.fillText(txt, x, y);\n        ctx.restore();\n    }\n    svgLine1(svg, line) {\n        let { x1, y1, x2, y2 } = line;\n        let { colour, thickness } = this.typeObj[line.typeidx];\n        x1 = this.offsetX + this.scale * x1;\n        y1 = this.offsetY + this.scale * y1;\n        x2 = this.offsetX + this.scale * x2;\n        y2 = this.offsetY + this.scale * y2;\n        if (colour != MetaVector.NOCOLOUR) {\n            svg.start('<line');\n            svg.attr('x1', x1);\n            svg.attr('y1', y1);\n            svg.attr('x2', x2);\n            svg.attr('y2', y2);\n            this.defineSVGStroke(svg, colour);\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'round');\n            svg.stop('/>');\n        }\n    }\n    svgLineN(svg, lines) {\n        let { colour, thickness } = this.typeObj[lines[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, colour);\n        svg.attr('stroke-width', thickness);\n        svg.attr('stroke-linecap', 'round');\n        svg.stop('>');\n        svg.inc();\n        for (let line of lines) {\n            let { x1, y1, x2, y2 } = line;\n            x1 = this.offsetX + this.scale * x1;\n            y1 = this.offsetY + this.scale * y1;\n            x2 = this.offsetX + this.scale * x2;\n            y2 = this.offsetY + this.scale * y2;\n            svg.start('<line');\n            svg.attr('x1', x1);\n            svg.attr('y1', y1);\n            svg.attr('x2', x2);\n            svg.attr('y2', y2);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgRect1(svg, rect) {\n        let { x, y, w, h } = rect;\n        let { edgeCol, fillCol, thickness } = this.typeObj[rect.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        w *= this.scale;\n        h *= this.scale;\n        svg.start('<rect');\n        svg.attr('x', x);\n        svg.attr('y', y);\n        svg.attr('width', w);\n        svg.attr('height', h);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'square');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgRectN(svg, rects) {\n        let { edgeCol, fillCol, thickness } = this.typeObj[rects[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'square');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('>');\n        svg.inc();\n        for (let rect of rects) {\n            let { x, y, w, h } = rect;\n            x = this.offsetX + this.scale * x;\n            y = this.offsetY + this.scale * y;\n            w *= this.scale;\n            h *= this.scale;\n            svg.start('<rect');\n            svg.attr('x', x);\n            svg.attr('y', y);\n            svg.attr('width', w);\n            svg.attr('height', h);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgOval1(svg, oval) {\n        let { cx, cy, rw, rh } = oval;\n        let { edgeCol, fillCol, thickness } = this.typeObj[oval.typeidx];\n        cx = this.offsetX + this.scale * cx;\n        cy = this.offsetY + this.scale * cy;\n        rw *= this.scale;\n        rh *= this.scale;\n        svg.start('<ellipse');\n        svg.attr('cx', cx);\n        svg.attr('cy', cy);\n        svg.attr('rx', rw);\n        svg.attr('ry', rh);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgOvalN(svg, ovals) {\n        let { edgeCol, fillCol, thickness } = this.typeObj[ovals[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('>');\n        svg.inc();\n        for (let oval of ovals) {\n            let { cx, cy, rw, rh } = oval;\n            cx = this.offsetX + this.scale * cx;\n            cy = this.offsetY + this.scale * cy;\n            rw *= this.scale;\n            rh *= this.scale;\n            svg.start('<ellipse');\n            svg.attr('cx', cx);\n            svg.attr('cy', cy);\n            svg.attr('rx', rw);\n            svg.attr('ry', rh);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgPath(svg, path) {\n        let { count, x, y, ctrl, closed } = path;\n        let { edgeCol, fillCol, thickness, hardEdge } = this.typeObj[path.typeidx];\n        x = [...x];\n        y = [...y];\n        for (let n = 0; n < count; n++) {\n            x[n] = this.offsetX + this.scale * x[n];\n            y[n] = this.offsetY + this.scale * y[n];\n        }\n        let shape = 'M ' + x[0] + ' ' + y[0];\n        let n = 1;\n        while (n < count) {\n            if (!ctrl || !ctrl[n]) {\n                shape += ' L ' + x[n] + ' ' + y[n];\n                n++;\n            }\n            else if (ctrl[n] && n < count - 1 && !ctrl[n + 1]) {\n                shape += ' Q ' + x[n] + ' ' + y[n] + ' ' + x[n + 1] + ' ' + y[n + 1];\n                n += 2;\n            }\n            else if (ctrl[n] && n < count - 2 && ctrl[n + 1] && !ctrl[n + 2]) {\n                shape += ' C ' + x[n] + ' ' + y[n] + ' ' + x[n + 1] + ' ' + y[n + 1] + ' ' + x[n + 2] + ' ' + y[n + 2];\n                n += 3;\n            }\n            else\n                n++;\n        }\n        if (closed)\n            shape += ' Z';\n        svg.start('<path');\n        svg.attr('d', shape);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linejoin', hardEdge ? 'miter' : 'round');\n            svg.attr('stroke-linecap', hardEdge ? 'square' : 'round');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgText(svg, text, withXlink = true) {\n        let { x, y, txt, direction } = text;\n        let { size, colour } = this.typeObj[text.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let font = FontData.main;\n        let scale = size * this.scale / font.UNITS_PER_EM;\n        if (direction != 0) {\n            svg.start('<g');\n            svg.attr('transform', `rotate(${direction},${x},${y})`);\n            svg.stop('>');\n            svg.inc();\n        }\n        svg.start('<g');\n        svg.attr('transform', 'translate(' + x + ',' + y + ')');\n        this.defineSVGFill(svg, colour);\n        svg.stop('>');\n        svg.inc();\n        svg.start('<g');\n        svg.attr('transform', 'scale(' + scale + ',' + (-scale) + ')');\n        svg.stop('>');\n        svg.inc();\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            svg.start('<use');\n            let ref = i < 0 ? '#missing' : '#char' + i;\n            if (withXlink)\n                svg.attr('xlink:href', ref);\n            else\n                svg.attr('href', ref);\n            svg.attr('x', dx);\n            svg.stop('/>');\n            if (i >= 0) {\n                dx += font.HORIZ_ADV_X[i];\n                if (n < txt.length - 1)\n                    dx += font.getKerning(ch, txt.charAt(n + 1));\n            }\n            else\n                dx += font.MISSING_HORZ;\n        }\n        svg.dec();\n        svg.whole('</g>');\n        svg.dec();\n        svg.whole('</g>');\n        if (direction != 0) {\n            svg.dec();\n            svg.whole('</g>');\n        }\n    }\n    svgTextNative(svg, text) {\n        let { x, y, txt } = text;\n        let { size, colour, family, opt } = this.typeObj[text.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let fill = colourCanvas(colour);\n        let style = `fill: ${fill}; font-family: ${family}; font-size: ${size * this.scale};`;\n        if (opt.bold)\n            style += ' font-weight: bold;';\n        if (opt.italic)\n            style += ' font-style: italic;';\n        const escapeXML = (str) => {\n            return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\n        };\n        svg.start('<text');\n        svg.attr('xml:space', 'preserve');\n        svg.attr('x', x);\n        svg.attr('y', y);\n        svg.attr('style', style);\n        svg.stop('>' + escapeXML(txt) + '</text>');\n    }\n    defineSVGStroke(svg, col) {\n        if (col == MetaVector.NOCOLOUR) {\n            svg.attr('stroke-opacity', '0');\n            return;\n        }\n        svg.attr('stroke', colourCode(col));\n        let alpha = colourAlpha(col);\n        if (alpha != 1)\n            svg.attr('stroke-opacity', alpha);\n    }\n    defineSVGFill(svg, col) {\n        if (col == MetaVector.NOCOLOUR) {\n            svg.attr('fill-opacity', '0');\n            return;\n        }\n        svg.attr('fill', colourCode(col));\n        let alpha = colourAlpha(col);\n        if (alpha != 1)\n            svg.attr('fill-opacity', alpha);\n    }\n    findOrCreateType(typeDef) {\n        for (let n = 0; n < this.types.length; n++) {\n            if (this.types[n].primClass != typeDef.primClass)\n                continue;\n            let keys = Object.keys(typeDef);\n            let match = keys.every((k) => typeDef[k] == this.types[n][k]);\n            if (match)\n                return n;\n        }\n        this.types.push(typeDef);\n        return this.types.length - 1;\n    }\n    updateBounds(x, y) {\n        if (this.lowX == null) {\n            this.lowX = x;\n            this.lowY = y;\n            this.highX = x;\n            this.highY = y;\n            return;\n        }\n        this.lowX = Math.min(this.lowX, x);\n        this.lowY = Math.min(this.lowY, y);\n        this.highX = Math.max(this.highX, x);\n        this.highY = Math.max(this.highY, y);\n    }\n}\nMetaVector.NOCOLOUR = -1;\n//# sourceMappingURL=MetaVector.js.map","import { Molecule } from '../data/Molecule';\nimport { GeomUtil } from '../util/Geom';\nimport { angleDiff, DEGRAD, invZ, norm2_xy, norm_xy } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { BLineType } from './ArrangeMolecule';\nimport { MetaVector, TextAlign } from './MetaVector';\nimport { RenderMnemonicType } from './Rendering';\nexport class DrawMolecule {\n    constructor(layout, vg) {\n        this.layout = layout;\n        this.vg = vg;\n        this.mnemonics = null;\n        this.mol = layout.getMolecule();\n        this.policy = layout.getPolicy();\n        this.effects = layout.getEffects();\n        this.scale = layout.getScale();\n        this.invScale = 1.0 / this.scale;\n    }\n    getMolecule() { return this.mol; }\n    getMetaVector() { return this.vg; }\n    getLayout() { return this.layout; }\n    getPolicy() { return this.policy; }\n    getEffects() { return this.effects; }\n    draw() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n        let DRAW_SPACE = false;\n        if (DRAW_SPACE) {\n            let bounds = this.layout.determineBoundary();\n            this.vg.drawRect(bounds[0], bounds[1], bounds[2] - bounds[0], bounds[3] - bounds[1], 0xFF0000, 1, MetaVector.NOCOLOUR);\n            for (let n = 0; n < this.layout.numSpace(); n++) {\n                let spc = this.layout.getSpace(n);\n                this.vg.drawRect(spc.box.x, spc.box.y, spc.box.w, spc.box.h, MetaVector.NOCOLOUR, 0, 0xE0E0E0);\n                if (spc.px != null && spc.py != null && spc.px.length > 2)\n                    this.vg.drawPoly(spc.px, spc.py, 0x000000, 1, 0x808080FF, true);\n            }\n        }\n        this.drawUnderEffects();\n        let { mol, layout, effects, policy, vg } = this;\n        let hideBonds = new Set(effects.hideBonds);\n        for (let i = 1; i <= mol.numBonds; i++)\n            if (mol.bondType(i) == Molecule.BONDTYPE_INCLINED && !hideBonds.has(i)) {\n                let atom = mol.bondTo(i);\n                if (layout.getPoint(atom - 1).text)\n                    continue;\n                for (let j of mol.atomAdjBonds(atom))\n                    if (j != i && mol.bondType(j) == Molecule.BONDTYPE_INCLINED && mol.bondTo(j) == atom && !hideBonds.has(j)) {\n                        let b1 = layout.getLines().find((b) => b.bnum == i);\n                        let b2 = layout.getLines().find((b) => b.bnum == j);\n                        let th1 = Math.atan2(b1.line.y1 - b1.line.y2, b1.line.x1 - b1.line.x2);\n                        let th2 = Math.atan2(b2.line.y1 - b2.line.y2, b2.line.x1 - b2.line.x2);\n                        if (Math.abs(angleDiff(th1, th2)) < 170 * DEGRAD) {\n                            this.drawFusedWedge(b1, b2);\n                            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Artifact, 'Fused', [b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2]);\n                            hideBonds.add(i);\n                            hideBonds.add(j);\n                            break;\n                        }\n                    }\n            }\n        for (let n = 0; n < layout.numLines(); n++) {\n            let b = layout.getLine(n);\n            if (hideBonds.has(b.bnum))\n                continue;\n            if (b.type == BLineType.Normal) {\n                vg.drawLine(b.line.x1, b.line.y1, b.line.x2, b.line.y2, b.col, b.size);\n                (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Bond, 'L', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Inclined) {\n                this.drawBondInclined(b);\n                (_c = this.mnemonics) === null || _c === void 0 ? void 0 : _c.append(RenderMnemonicType.Bond, 'I', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Declined) {\n                this.drawBondDeclined(b);\n                (_d = this.mnemonics) === null || _d === void 0 ? void 0 : _d.append(RenderMnemonicType.Bond, 'D', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Unknown) {\n                this.drawBondUnknown(b);\n                (_e = this.mnemonics) === null || _e === void 0 ? void 0 : _e.append(RenderMnemonicType.Bond, 'U', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Dotted || b.type == BLineType.DotDir) {\n                this.drawBondDotted(b);\n                (_f = this.mnemonics) === null || _f === void 0 ? void 0 : _f.append(RenderMnemonicType.Bond, 'O', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.IncDouble || b.type == BLineType.IncTriple || b.type == BLineType.IncQuadruple) {\n                this.drawBondIncMulti(b);\n                (_g = this.mnemonics) === null || _g === void 0 ? void 0 : _g.append(RenderMnemonicType.Bond, 'M', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n        }\n        let fg = policy.data.foreground;\n        for (let r of layout.getRings()) {\n            if (r.theta != 0) {\n                var bez = GeomUtil.createBezierEllipse(r.cx, r.cy, r.rw, r.rh, r.theta);\n                vg.drawPath(bez.px, bez.py, bez.ctrl, true, fg, r.size, MetaVector.NOCOLOUR, false);\n                (_h = this.mnemonics) === null || _h === void 0 ? void 0 : _h.append(RenderMnemonicType.Artifact, 'Ring', [r.cx, r.cy, r.rw, r.rh, r.theta]);\n            }\n            else {\n                vg.drawOval(r.cx, r.cy, r.rw, r.rh, fg, r.size, MetaVector.NOCOLOUR);\n                (_j = this.mnemonics) === null || _j === void 0 ? void 0 : _j.append(RenderMnemonicType.Artifact, 'Ring', [r.cx, r.cy, r.rw, r.rh]);\n            }\n        }\n        for (let p of layout.getPaths()) {\n            vg.drawPath(p.px, p.py, p.ctrl, false, fg, p.size, MetaVector.NOCOLOUR, false);\n            (_k = this.mnemonics) === null || _k === void 0 ? void 0 : _k.append(RenderMnemonicType.Artifact, 'Path', [...p.px, ...p.py]);\n        }\n        for (let n = 0; n < layout.numPoints(); n++) {\n            let p = layout.getPoint(n);\n            if (effects.hideAtoms.has(p.anum))\n                continue;\n            let txt = p.text;\n            let cx = p.oval.cx, cy = p.oval.cy, rw = p.oval.rw;\n            if (txt == null) {\n                (_l = this.mnemonics) === null || _l === void 0 ? void 0 : _l.append(RenderMnemonicType.Atom, '.', [cx, cy]);\n                continue;\n            }\n            let fsz = p.fsz;\n            let col = p.col;\n            while (txt.endsWith('.')) {\n                let dw = rw / txt.length;\n                let r = fsz * 0.15;\n                vg.drawOval(cx + rw - dw, cy, r, r, MetaVector.NOCOLOUR, 0, col);\n                cx -= dw;\n                rw -= dw;\n                txt = txt.substring(0, txt.length - 1);\n            }\n            while (txt.startsWith('+')) {\n                let dw = rw / txt.length;\n                let x = cx - rw + dw, y = cy, r = fsz * 0.18, lsz = fsz * 0.1;\n                vg.drawLine(x - r, y, x + r, y, col, lsz);\n                vg.drawLine(x, y - r, x, y + r, col, lsz);\n                cx += dw;\n                rw -= dw;\n                txt = txt.substring(1, txt.length);\n            }\n            while (txt.startsWith('-')) {\n                let dw = rw / txt.length;\n                let x = cx - rw + dw, y = cy, r = fsz * 0.18, lsz = fsz * 0.1;\n                vg.drawLine(x - r, y, x + r, y, col, lsz);\n                cx += dw;\n                rw -= dw;\n                txt = txt.substring(1, txt.length);\n            }\n            if (txt.length > 0) {\n                vg.drawText(cx, cy, txt, fsz, col, TextAlign.Centre | TextAlign.Middle, p.rotation || 0);\n                (_m = this.mnemonics) === null || _m === void 0 ? void 0 : _m.append(RenderMnemonicType.Atom, txt, [cx, cy]);\n            }\n            else\n                (_o = this.mnemonics) === null || _o === void 0 ? void 0 : _o.append(RenderMnemonicType.Atom, '.', [cx, cy]);\n        }\n        this.drawOverEffects();\n    }\n    drawUnderEffects() {\n        var _a, _b, _c;\n        let mol = this.mol, policy = this.policy, effects = this.effects, layout = this.layout, scale = this.scale, vg = this.vg;\n        for (let n = 0, num = Math.min(effects.atomFrameDotSz.length, mol.numAtoms); n < num; n++) {\n            if (effects.hideAtoms.has(n + 1))\n                continue;\n            let dw = effects.atomFrameDotSz[n] * scale, col = effects.atomFrameCol[n];\n            let a = layout.getPoint(n);\n            let rw = a.oval.rw + 0.1 * scale, rh = a.oval.rh + 0.1 * scale;\n            let wdots = Math.ceil(2 * rw / (3 * dw));\n            let hdots = Math.ceil(2 * rh / (3 * dw));\n            let wspc = 2 * rw / wdots, hspc = 2 * rh / hdots;\n            for (let i = 0; i <= wdots; i++) {\n                let x = a.oval.cx - rw + i * wspc;\n                vg.drawOval(x, a.oval.cy - rh, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(x, a.oval.cy + rh, dw, dw, MetaVector.NOCOLOUR, 0, col);\n            }\n            for (let i = 1; i < hdots; i++) {\n                let y = a.oval.cy - rh + i * hspc;\n                vg.drawOval(a.oval.cx - rw, y, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(a.oval.cx + rw, y, dw, dw, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Effect, 'Dot', [a.oval.cx, a.oval.cy, a.oval.rw, a.oval.rh]);\n        }\n        for (let key in effects.dottedRectOutline) {\n            let atom = parseInt(key), col = effects.dottedRectOutline[key];\n            let a = layout.getPoint(atom - 1);\n            let rw = Math.max(a.oval.rw, 0.2 * scale), rh = Math.max(a.oval.rh, 0.2 * scale);\n            let sz = 0.05 * scale;\n            let xdots = Math.max(1, Math.round(rw / (2 * sz)));\n            let ydots = Math.max(1, Math.round(rh / (2 * sz)));\n            let invX = (2 * rw) / xdots, invY = (2 * rh) / ydots;\n            for (let n = 0; n <= xdots; n++) {\n                let x = a.oval.cx - rw + n * invX;\n                vg.drawOval(x, a.oval.cy - rh, sz, sz, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(x, a.oval.cy + rh, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            for (let n = 1; n < ydots; n++) {\n                let y = a.oval.cy - rh + n * invY;\n                vg.drawOval(a.oval.cx - rw, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(a.oval.cx + rw, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Effect, 'Rect', [a.oval.cx, a.oval.cy, a.oval.rw, a.oval.rh]);\n        }\n        for (let key in effects.dottedBondCross) {\n            let bond = parseInt(key), col = effects.dottedBondCross[key];\n            let x1 = 0, y1 = 0, x2 = 0, y2 = 0, bcount = 0;\n            for (let n = 0; n < layout.numLines(); n++) {\n                let b = layout.getLine(n);\n                if (b.bnum == bond) {\n                    x1 += b.line.x1;\n                    y1 += b.line.y1;\n                    x2 += b.line.x2;\n                    y2 += b.line.y2;\n                    bcount += 1;\n                }\n            }\n            if (bcount > 1) {\n                let inv = 1 / bcount;\n                [x1, y1, x2, y2] = [x1 * inv, y1 * inv, x2 * inv, y2 * inv];\n            }\n            let dx = x2 - x1, dy = y2 - y1;\n            let inv = 0.2 * scale * invZ(norm_xy(dx, dy)), ox = dy * inv, oy = -dx * inv;\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2), sz = 0.05 * scale;\n            for (let p of [-2, -1, 1, 2]) {\n                let x = cx + p * ox, y = cy + p * oy;\n                vg.drawOval(x, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_c = this.mnemonics) === null || _c === void 0 ? void 0 : _c.append(RenderMnemonicType.Effect, 'Crossing', [x1, y1, x2, y2]);\n        }\n    }\n    drawOverEffects() {\n        var _a, _b;\n        let mol = this.mol, policy = this.policy, effects = this.effects, layout = this.layout, scale = this.scale, vg = this.vg;\n        for (let a of effects.overlapAtoms) {\n            let p = layout.getPoint(a - 1);\n            let rad = scale * 0.2;\n            vg.drawLine(p.oval.cx - rad, p.oval.cy - rad, p.oval.cx + rad, p.oval.cy + rad, 0xFF0000, 1);\n            vg.drawLine(p.oval.cx + rad, p.oval.cy - rad, p.oval.cx - rad, p.oval.cy + rad, 0xFF0000, 1);\n            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Effect, 'Overlap', [p.oval.cx, p.oval.cy, p.oval.rw, p.oval.rh]);\n        }\n        for (let n = 0, num = Math.min(effects.atomCircleSz.length, mol.numAtoms); n < num; n++)\n            if (effects.atomCircleSz[n] > 0) {\n                let dw = effects.atomCircleSz[n] * scale, col = effects.atomCircleCol[n];\n                let p = layout.getPoint(n);\n                vg.drawOval(p.oval.cx, p.oval.cy, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Effect, 'Circle', [p.oval.cx, p.oval.cy, p.oval.rw, p.oval.rh]);\n            }\n    }\n    drawBondInclined(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let norm = head / Math.sqrt(dx * dx + dy * dy);\n        let ox = norm * dy, oy = -norm * dx;\n        let px = [x1, x2 - ox, x2 + ox], py = [y1, y2 - oy, y2 + oy];\n        if (this.layout.getPoint(b.bto - 1).text == null && this.mol.atomAdjCount(b.bto) == 2) {\n            let other = null;\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let o = this.layout.getLine(n);\n                if (o.type == BLineType.Normal && (o.bfr == b.bto || o.bto == b.bto)) {\n                    if (other != null) {\n                        other = null;\n                        break;\n                    }\n                    other = o;\n                }\n            }\n            if (other != null) {\n                let th1 = Math.atan2(y1 - y2, x1 - x2);\n                let th2 = Math.atan2(other.line.y1 - other.line.y2, other.line.x1 - other.line.x2);\n                if (b.bto == other.bfr)\n                    th2 += Math.PI;\n                let diff = Math.abs(angleDiff(th1, th2));\n                if (diff > 105 * DEGRAD && diff < 135 * DEGRAD) {\n                    let ixy1 = GeomUtil.lineIntersect(px[0], py[0], px[1], py[1], other.line.x1, other.line.y1, other.line.x2, other.line.y2);\n                    let ixy2 = GeomUtil.lineIntersect(px[0], py[0], px[2], py[2], other.line.x1, other.line.y1, other.line.x2, other.line.y2);\n                    px[1] = ixy1[0];\n                    py[1] = ixy1[1];\n                    px[2] = ixy2[0];\n                    py[2] = ixy2[1];\n                    let dx1 = px[1] - px[0], dy1 = py[1] - py[0], inv1 = 0.5 * other.size / norm_xy(dx1, dy1);\n                    px[1] += dx1 * inv1;\n                    py[1] += dy1 * inv1;\n                    let dx2 = px[2] - px[0], dy2 = py[2] - py[0], inv2 = 0.5 * other.size / norm_xy(dx2, dy2);\n                    px[2] += dx2 * inv1;\n                    py[2] += dy2 * inv1;\n                }\n            }\n        }\n        if (this.layout.getPoint(b.bto - 1).text == null && this.mol.atomAdjCount(b.bto) == 3) {\n            let other1 = null, other2 = null;\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let o = this.layout.getLine(n);\n                if (o.type == BLineType.Normal && (o.bfr == b.bto || o.bto == b.bto)) {\n                    if (other1 == null)\n                        other1 = o;\n                    else if (other2 == null)\n                        other2 = o;\n                    else {\n                        other1 = other2 = null;\n                        break;\n                    }\n                }\n            }\n            if (other1 != null && other2 != null) {\n                let th1 = Math.atan2(y1 - y2, x1 - x2);\n                let th2 = Math.atan2(other1.line.y1 - other1.line.y2, other1.line.x1 - other1.line.x2);\n                let th3 = Math.atan2(other2.line.y1 - other2.line.y2, other2.line.x1 - other2.line.x2);\n                if (b.bto == other1.bfr)\n                    th2 += Math.PI;\n                if (b.bto == other2.bfr)\n                    th3 += Math.PI;\n                let dth1 = angleDiff(th1, th2), diff1 = Math.abs(dth1);\n                let dth2 = angleDiff(th1, th3), diff2 = Math.abs(dth2);\n                let diff3 = Math.abs(angleDiff(th2, th3));\n                if (diff1 > 105 * DEGRAD && diff1 < 135 * DEGRAD ||\n                    diff2 > 105 * DEGRAD && diff2 < 135 * DEGRAD ||\n                    diff3 > 105 * DEGRAD && diff3 < 135 * DEGRAD) {\n                    if (dth1 < 0)\n                        [other1, other2] = [other2, other1];\n                    let ixy1 = GeomUtil.lineIntersect(px[0], py[0], px[1], py[1], other1.line.x1, other1.line.y1, other1.line.x2, other1.line.y2);\n                    let ixy2 = GeomUtil.lineIntersect(px[0], py[0], px[2], py[2], other2.line.x1, other2.line.y1, other2.line.x2, other2.line.y2);\n                    px = [x1, ixy1[0], x2, ixy2[0]];\n                    py = [y1, ixy1[1], y2, ixy2[1]];\n                }\n            }\n        }\n        this.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, col, true);\n    }\n    drawFusedWedge(b1, b2) {\n        const terminalPoints = (b, other) => {\n            let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n            let dx = x2 - x1, dy = y2 - y1;\n            let norm = b.head / Math.sqrt(dx * dx + dy * dy);\n            let ox = norm * dy, oy = -norm * dx;\n            let tx1 = x2 - ox, ty1 = y2 - oy, tx2 = x2 + ox, ty2 = y2 + oy;\n            let dsq1 = norm2_xy(tx1 - other.line.x1, ty1 - other.line.y1);\n            let dsq2 = norm2_xy(tx2 - other.line.x1, ty2 - other.line.y1);\n            if (dsq1 > dsq2)\n                return { outerX: tx1, outerY: ty1, innerX: tx2, innerY: ty2 };\n            else\n                return { outerX: tx2, outerY: ty2, innerX: tx1, innerY: ty1 };\n        };\n        let u = terminalPoints(b1, b2), v = terminalPoints(b2, b1);\n        let [innerX, innerY] = GeomUtil.lineIntersect(b1.line.x1, b1.line.y1, u.innerX, u.innerY, b2.line.x1, b2.line.y1, v.innerX, v.innerY);\n        let px = [b1.line.x1, u.outerX, v.outerX, b2.line.x1, innerX];\n        let py = [b1.line.y1, u.outerY, v.outerY, b2.line.y1, innerY];\n        this.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, b1.col, true);\n    }\n    drawBondDeclined(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let ext = Math.sqrt(dx * dx + dy * dy);\n        let nsteps = Math.ceil(ext * 2.5 * this.invScale);\n        let norm = head / ext;\n        let ox = norm * dy, oy = -norm * dx, invSteps = 1.0 / (nsteps + 1);\n        let holdout = this.mol.atomAdjCount(b.bto) == 1 && this.layout.getPoint(b.bto - 1).text == null ? 1 : 1 - (0.15 * this.scale) / ext;\n        for (let i = 0; i <= nsteps + 1; i++) {\n            let cx = x1 + i * dx * invSteps * holdout, cy = y1 + i * dy * invSteps * holdout;\n            let ix = ox * i * invSteps, iy = oy * i * invSteps;\n            this.vg.drawLine(cx - ix, cy - iy, cx + ix, cy + iy, col, size);\n        }\n    }\n    drawBondUnknown(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let ext = Math.sqrt(dx * dx + dy * dy);\n        let nsteps = Math.ceil(ext * 3.5 * this.invScale);\n        let norm = head / ext;\n        let ox = norm * dy, oy = -norm * dx;\n        let sz = 1 + 3 * (nsteps + 1);\n        let x = Vec.numberArray(0, sz), y = Vec.numberArray(0, sz), ctrl = Vec.booleanArray(false, sz);\n        x[0] = x1;\n        y[0] = y1;\n        ctrl[0] = false;\n        for (let i = 0, j = 1; i <= nsteps; i++, j += 3) {\n            let ax = x1 + i * dx / (nsteps + 1), ay = y1 + i * dy / (nsteps + 1);\n            let cx = x1 + (i + 1) * dx / (nsteps + 1), cy = y1 + (i + 1) * dy / (nsteps + 1);\n            let bx = (ax + cx) / 2, by = (ay + cy) / 2;\n            let sign = i % 2 == 0 ? 1 : -1;\n            x[j] = ax;\n            x[j + 1] = bx + sign * ox;\n            x[j + 2] = cx;\n            y[j] = ay;\n            y[j + 1] = by + sign * oy;\n            y[j + 2] = cy;\n            ctrl[j] = true;\n            ctrl[j + 1] = true;\n            ctrl[j + 2] = false;\n        }\n        this.vg.drawPath(x, y, ctrl, false, col, size, MetaVector.NOCOLOUR, false);\n    }\n    drawBondDotted(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size;\n        let radius = size, dist = norm_xy(dx, dy);\n        if (dist < 0.01)\n            return;\n        let nudge = 0.5 * size / dist;\n        x1 += nudge * dx;\n        y1 += nudge * dy;\n        x2 -= nudge * dx;\n        y2 -= nudge * dy;\n        dx = x2 - x1;\n        dy = y2 - y1;\n        let nsteps = Math.ceil(0.2 * dist / radius);\n        let invSteps = 1.0 / (nsteps + 1);\n        for (let i = 0; i <= nsteps + 1; i++) {\n            let r = radius;\n            if (b.type == BLineType.DotDir)\n                r *= 1 + (i * (1.0 / (nsteps + 2)) - 0.5);\n            let cx = x1 + i * dx * invSteps, cy = y1 + i * dy * invSteps;\n            this.vg.drawOval(cx, cy, r, r, MetaVector.NOCOLOUR, 0, col);\n        }\n    }\n    drawBondIncMulti(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let norm = head / Math.sqrt(dx * dx + dy * dy);\n        let ox = norm * dy, oy = -norm * dx;\n        this.vg.drawPoly([x1, x2 - ox, x2 + ox], [y1, y2 - oy, y2 + oy], col, this.scale * 0.05, MetaVector.NOCOLOUR, true);\n        if (b.type == BLineType.IncDouble) {\n            this.vg.drawLine(x1, y1, x2, y2, col, this.scale * 0.03);\n        }\n        else {\n            this.vg.drawLine(x1, y1, x2 + 0.33 * ox, y2 + 0.33 * oy, col, this.scale * 0.03);\n            this.vg.drawLine(x1, y1, x2 - 0.33 * ox, y2 - 0.33 * oy, col, this.scale * 0.03);\n        }\n    }\n}\n//# sourceMappingURL=DrawMolecule.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {MetaVector, TextAlign} from 'webmolkit/gfx/MetaVector';\nimport {ArrangeMixture, ArrangeMixtureComponent, ArrangeMixtureLine} from './ArrangeMixture';\nimport {Box} from 'webmolkit/util/Geom';\nimport {ArrangeMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {DrawMolecule} from 'webmolkit/gfx/DrawMolecule';\n\n/*\n\tDrawing a Mixfile, which has been rendered.\n*/\n\nexport class DrawMixture\n{\n\tpublic hoverIndex = -1; // component to give a faint tinting to (for hover-over effect)\n\tpublic activeIndex = -1; // component that is actively engaged with UI\n\tpublic selectedIndex = -1; // component that is passively selected\n\n\tpublic callbackDrawNameLine:(comp:ArrangeMixtureComponent, line:ArrangeMixtureLine, gfx:MetaVector, box:Box) => boolean = null;\n\n\tprivate measure:ArrangeMeasurement;\n\tprivate policy:RenderPolicy;\n\n\tprivate scale:number;\n\tprivate invScale:number;\n\n\t// --------------------- public methods ---------------------\n\n\tconstructor(private layout:ArrangeMixture, private vg:MetaVector)\n\t{\n\t\tthis.measure = layout.measure;\n\t\tthis.policy = layout.policy;\n\t\tthis.scale = layout.scale;\n\t\tthis.invScale = 1.0 / this.scale;\n\t}\n\n\t// renders the experiment, one component at a time\n\tpublic draw():void\n\t{\n\t\tfor (let comp of this.layout.components) if (comp.parentIdx >= 0)\n\t\t\tthis.drawConnection(this.layout.components[comp.parentIdx], comp);\n\n\t\tfor (let n = 0; n < this.layout.components.length; n++) this.drawComponent(n);\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\tprivate drawConnection(parent:ArrangeMixtureComponent, child:ArrangeMixtureComponent):void\n\t{\n\t\tlet x1 = parent.boundary.maxX(), x2 = child.boundary.minX();\n\t\tlet y1 = parent.boundary.midY(), y2 = child.boundary.midY();\n\t\t//let xm = 0.5 * (x1 + x2);\n\t\tlet xm = x1 + 0.25 * this.scale;\n\t\tlet ym = 0.5 * (y1 + y2);\n\t\tlet d = 4, xd = d, yd = y1 < y2 - 1 ? -d : y1 > y2 + 1 ? d : 0;\n\n\t\tlet px = [x1, xm - xd, xm, xm, xm, xm, xm + xd, x2];\n\t\tlet py = [y1, y1, y1, y1 - yd, y2 + yd, y2, y2, y2];\n\t\tlet lsz = this.scale * 0.1;\n\t\tthis.vg.drawPath(px, py, [false, false, true, false, false, true, false, false], false, 0x000000, lsz, MetaVector.NOCOLOUR, false);\n\t}\n\n\tprivate drawComponent(idx:number):void\n\t{\n\t\tlet comp = this.layout.components[idx];\n\n\t\tlet box = comp.outline.clone();\n\t\tbox.offsetBy(comp.boundary.x, comp.boundary.y);\n\t\tlet bg = 0xF8F8F8;\n\t\tif (idx == this.activeIndex) bg = 0x8296E4;\n\t\telse if (idx == this.selectedIndex) bg = 0xA9BBFF;\n\t\telse if (idx == this.hoverIndex) bg = 0xE0E0E0;\n\n\t\tthis.vg.drawRect(box.x, box.y, box.w, box.h, 0x808080, 1, bg);\n\n\t\tif (comp.molLayout) new DrawMolecule(comp.molLayout, this.vg).draw();\n\n\t\tif (comp.nameLines.length > 0)\n\t\t{\n\t\t\tlet x = box.x, cx = x + comp.nameBox.midX(), y = box.y + comp.nameBox.y;\n\t\t\tfor (let line of comp.nameLines)\n\t\t\t{\n\t\t\t\tlet wad = this.measure.measureText(line.text, comp.fontSize), h = wad[1] + 2 * wad[2];\n\t\t\t\tlet override = this.callbackDrawNameLine && this.callbackDrawNameLine(comp, line, this.vg, new Box(x, y, box.w, h));\n\t\t\t\tif (!override) this.vg.drawText(cx, y, line.text, comp.fontSize, line.col, TextAlign.Centre | TextAlign.Top);\n\t\t\t\ty += h;\n\t\t\t}\n\t\t}\n\n\t\tif (comp.collapseBox)\n\t\t{\n\t\t\tlet cbox = comp.collapseBox.clone();\n\t\t\tcbox.offsetBy(comp.boundary.x, comp.boundary.y);\n\t\t\tthis.vg.drawRect(cbox.x, cbox.y, cbox.w, cbox.h, 0x808080, 1, 0xF8F8F8);\n\t\t\tlet cx = cbox.midX(), cy = cbox.midY(), d = Math.min(cbox.w, cbox.h) * 0.4, sz = d * 0.2;\n\t\t\tthis.vg.drawLine(cx - d, cy, cx + d, cy, 0x000000, sz);\n\t\t\tif (comp.isCollapsed) this.vg.drawLine(cx, cy - d, cx, cy + d, 0x000000, sz);\n\t\t}\n\t}\n}\n\n","import { clearTooltip } from '../ui/Tooltip';\nimport { dom, domLegacy } from '../util/dom';\nimport { installInlineCSS } from '../util/Theme';\nconst CSS_DIALOG = `\n    *.wmk-dialog\n    {\n        font-family: 'Open Sans', sans-serif;\n\t\tfont-size: 16px;\n\t\tcolor: black;\n\t\tuser-select: none;\n    }\n\t*.wmk-noscroll\n\t{\n\t\toverflow: hidden;\n\t}\n`;\nexport class Dialog {\n    constructor(parent = null) {\n        this.minPortionWidth = 80;\n        this.maxPortionWidth = 80;\n        this.maximumWidth = 0;\n        this.maximumHeight = 0;\n        this.minPortionHeight = 20;\n        this.maxPortionHeight = 0;\n        this.topMargin = 50;\n        this.title = 'Dialog';\n        this.allowScroller = true;\n        this.zindex = null;\n        this.callbackClose = null;\n        this.callbackShown = null;\n        this.parent = domLegacy(parent);\n        installInlineCSS('dialog', CSS_DIALOG);\n    }\n    onClose(callback) {\n        this.callbackClose = callback;\n    }\n    onShown(callback) {\n        this.callbackShown = callback;\n    }\n    open() {\n        clearTooltip();\n        let body = this.parent || dom(document.body);\n        body.addClass('wmk-noscroll');\n        let bg = this.domObscureBackground = dom('<div/>').appendTo(body);\n        bg.css({ 'position': 'fixed' });\n        bg.css({ 'left': '0', 'right': '0', 'top': '0', 'bottom': '0' });\n        bg.css({ 'background-color': 'black', 'opacity': 0.8 });\n        bg.onClick(() => this.close());\n        let fg = this.domObscureForeground = dom('<div/>').appendTo(body);\n        fg.css({ 'position': 'fixed' });\n        fg.css({ 'left': '0', 'right': '0', 'top': '0', 'bottom': '0' });\n        if (this.zindex > 0) {\n            bg.setCSS('z-index', this.zindex);\n            fg.setCSS('z-index', this.zindex + 1);\n        }\n        let pb = this.domPanelBoundary = dom('<div class=\"wmk-dialog\"/>').appendTo(fg);\n        pb.css({ 'min-width': this.minPortionWidth + '%' });\n        if (this.maximumWidth > 0)\n            pb.css({ 'max-width': this.maximumWidth + 'px' });\n        else if (this.maxPortionWidth != null)\n            pb.css({ 'max-width': this.maxPortionWidth + '%' });\n        if (this.maximumHeight > 0)\n            pb.css({ 'max-height': this.maximumHeight + 'px' });\n        else if (this.maxPortionHeight > 0)\n            pb.css({ 'max-height': this.maxPortionHeight + 'vh' });\n        pb.css({ 'background-color': 'white', 'border-radius': '6px', 'border': '1px solid black' });\n        pb.css({ 'position': 'absolute' });\n        pb.css({ 'left': (50 - 0.5 * this.minPortionWidth) + '%' });\n        pb.css({ 'top': this.topMargin + 'px' });\n        pb.css({ 'min-height': this.minPortionHeight + '%' });\n        let divOuter = dom('<div/>').appendTo(pb).css({ 'display': 'flex' });\n        divOuter.css({ 'flex-direction': 'column', 'align-items': 'stretch' });\n        if (this.maximumHeight > 0)\n            divOuter.css({ 'max-height': this.maximumHeight + 'px' });\n        else if (this.maxPortionHeight > 0)\n            divOuter.css({ 'max-height': this.maxPortionHeight + 'vh' });\n        let tdiv = this.domTitle = dom('<div/>').appendTo(divOuter);\n        tdiv.css({ 'flex-shrink': '0', 'flex-grow': '0' });\n        tdiv.css({ 'margin': '0', 'padding': '0' });\n        tdiv.css({ 'background-color': '#F0F0F0' });\n        tdiv.css({ 'background-image': 'linear-gradient(to right bottom, #FFFFFF, #E0E0E0)' });\n        tdiv.css({ 'border-bottom': '1px solid #C0C0C0' });\n        tdiv.css({ 'border-radius': '6px 6px 0 0' });\n        let bdiv = dom('<div/>').appendTo(divOuter).css({ 'width': '100%' });\n        bdiv.css({ 'flex-shrink': '1', 'flex-grow': '0' });\n        if (this.allowScroller)\n            bdiv.css({ 'overflow-y': 'auto' });\n        this.domBody = dom('<div/>').appendTo(bdiv).css({ 'padding': '0.5em' });\n        let ttlTable = dom('<table/>').appendTo(tdiv), tr = dom('<tr/>').appendTo(ttlTable);\n        ttlTable.attr({ 'width': '100%' });\n        let tdTitle = dom('<td valign=\"center\"/>').appendTo(tr).css({ 'padding': '0.5em' });\n        let ttl = dom('<font/>').appendTo(tdTitle).css({ 'font-size': '1.5em', 'font-weight': '600' });\n        ttl.setText(this.title);\n        let tdButtons = this.domTitleButtons = dom('<td align=\"right\" valign=\"center\"/>').appendTo(tr).css({ 'padding': '0.5em' });\n        this.domClose = dom('<button class=\"wmk-button wmk-button-default\">Close</button>').appendTo(tdButtons);\n        this.domClose.onClick(() => this.close());\n        this.populate();\n        this.repositionSize();\n        if (this.callbackShown)\n            this.callbackShown(this);\n    }\n    close() {\n        clearTooltip();\n        this.domObscureBackground.remove();\n        this.domObscureForeground.remove();\n        let body = this.parent || dom(document.body);\n        body.removeClass('wmk-noscroll');\n        if (this.callbackClose)\n            this.callbackClose(this);\n    }\n    bump() {\n        this.repositionSize();\n    }\n    bodyDOM() { return this.domBody; }\n    buttonsDOM() { return this.domTitleButtons; }\n    populate() {\n        this.bodyDOM().setText('Empty dialog box.');\n    }\n    repositionSize() {\n        let docW = window.innerWidth, dlgW = this.domPanelBoundary.width();\n        this.domPanelBoundary.css({ 'left': (0.5 * (docW - dlgW)) + 'px' });\n    }\n}\n//# sourceMappingURL=Dialog.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"path\");","import { dom } from '../util/dom';\nimport { addTooltip } from './Tooltip';\nexport class Widget {\n    get contentDOM() { return this.domContent; }\n    constructor() {\n        this.tagType = 'div';\n        this.domContent = null;\n    }\n    render(parent) {\n        let tag = this.tagType;\n        this.domContent = dom(`<${tag}/>`).appendTo(parent);\n    }\n    remove() {\n        if (this.domContent)\n            this.domContent.remove();\n        this.domContent = null;\n    }\n    addTooltip(bodyHTML, titleHTML) {\n        addTooltip(this.contentDOM, bodyHTML, titleHTML);\n    }\n    grabFocus() {\n        this.domContent.grabFocus();\n    }\n}\n//# sourceMappingURL=Widget.js.map","import { FontData } from '../gfx/FontData';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { dom } from '../util/dom';\nimport { Theme } from '../util/Theme';\nimport { colourCanvas, eventCoords, newElement, pathRoundedRect, pixelDensity, setBoundaryPixels } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { addTooltip } from './Tooltip';\nimport { Widget } from './Widget';\nexport var ButtonViewPosition;\n(function (ButtonViewPosition) {\n    ButtonViewPosition[ButtonViewPosition[\"Left\"] = 0] = \"Left\";\n    ButtonViewPosition[ButtonViewPosition[\"Right\"] = 1] = \"Right\";\n    ButtonViewPosition[ButtonViewPosition[\"Top\"] = 2] = \"Top\";\n    ButtonViewPosition[ButtonViewPosition[\"Bottom\"] = 3] = \"Bottom\";\n    ButtonViewPosition[ButtonViewPosition[\"Centre\"] = 4] = \"Centre\";\n})(ButtonViewPosition || (ButtonViewPosition = {}));\nexport class ButtonView extends Widget {\n    constructor(position, parentX, parentY, parentWidth, parentHeight) {\n        super();\n        this.position = position;\n        this.parentX = parentX;\n        this.parentY = parentY;\n        this.parentWidth = parentWidth;\n        this.parentHeight = parentHeight;\n        this.idealSize = 50;\n        this.width = 0;\n        this.height = 0;\n        this.selectedButton = null;\n        this.highlightButton = null;\n        this.maxButtonColumns = 0;\n        this.maxButtonRows = 0;\n        this.border = 0x808080;\n        this.background = 0xFFFFFF;\n        this.buttonColNorm1 = 0x47D5D2;\n        this.buttonColNorm2 = 0x008FD1;\n        this.buttonColActv1 = 0x30FF69;\n        this.buttonColActv2 = 0x008650;\n        this.buttonColSel1 = 0xFFFFFF;\n        this.buttonColSel2 = 0xE0E0E0;\n        this.canvas = null;\n        this.stack = [];\n        this.display = [];\n        this.hasBigButtons = true;\n        this.prefabImgSize = 44;\n        this.gripHeight = 30;\n        this.gripWidth = 50;\n        this.isRaised = true;\n        this.outPadding = 2;\n        this.inPadding = 2;\n        this.x = 0;\n        this.y = 0;\n        this.isMacLike = false;\n        this.isMacLike = !!navigator.platform.match(/(Mac|iPhone|iPod|iPad)/i);\n    }\n    setParentSize(width, height) {\n        this.parentWidth = width;\n        this.parentHeight = height;\n        if (this.contentDOM) {\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    get topBank() {\n        return this.stack.length > 0 ? this.stack[this.stack.length - 1] : null;\n    }\n    get stackSize() { return this.stack.length; }\n    render(parent) {\n        super.render(parent);\n        this.contentDOM.css({ 'position': 'absolute', 'width': `${this.width}px`, 'height': `${this.height}px` });\n        this.contentDOM.addClass('no_selection');\n        this.layoutButtons();\n        let canvasStyle = 'position: absolute; left: 0; top: 0;';\n        canvasStyle += 'pointer-events: none;';\n        this.canvas = newElement(this.contentDOM.el, 'canvas', { 'width': this.width, 'height': this.height, 'style': canvasStyle });\n        this.canvas.style.width = this.width + 'px';\n        this.canvas.style.height = this.height + 'px';\n        this.applyOffset();\n        this.redraw();\n        this.contentDOM.onClick((event) => this.mouseClick(event));\n        this.contentDOM.onDblClick((event) => this.mouseDoubleClick(event));\n        this.contentDOM.onMouseDown((event) => { event.preventDefault(); this.mouseDown(event); });\n        this.contentDOM.onMouseUp((event) => this.mouseUp(event));\n        this.contentDOM.onMouseOver((event) => this.mouseOver(event));\n        this.contentDOM.onMouseLeave((event) => this.mouseOut(event));\n        this.contentDOM.onMouseMove((event) => this.mouseMove(event));\n    }\n    pushBank(bank) {\n        bank.buttonView = this;\n        bank.isSubLevel = this.stack.length > 0;\n        bank.init();\n        this.stack.push(bank);\n        if (this.canvas != null) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    popBank() {\n        if (this.stack.length == 0)\n            return;\n        Vec.last(this.stack).bankClosed();\n        this.stack.length--;\n        if (this.canvas != null) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    refreshBank() {\n        if (this.canvas != null) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    getSelectedButton() {\n        return this.selectedButton;\n    }\n    setSelectedButton(id) {\n        if (id != this.selectedButton) {\n            this.selectedButton = id;\n            this.redraw();\n        }\n    }\n    cycleSelected(dir) {\n        let sorted = this.display.filter((s) => s.id != '*');\n        sorted.sort((d1, d2) => (d1.y * 10000 + d1.x) - (d2.y * 10000 + d2.x));\n        let idx = 0, sz = sorted.length;\n        for (let n = 0; n < sz; n++)\n            if (sorted[n].id == this.selectedButton) {\n                idx = n;\n                break;\n            }\n        this.selectedButton = sorted[(idx + dir + sz) % sz].id;\n        this.redraw();\n    }\n    raiseBank() {\n        if (this.isRaised)\n            return;\n        this.isRaised = true;\n        if (this.contentDOM) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    lowerBank() {\n        if (!this.isRaised)\n            return;\n        this.isRaised = false;\n        if (this.contentDOM) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    getHasBigButtons() {\n        return this.hasBigButtons;\n    }\n    setHasBigButtons(flag) {\n        this.hasBigButtons = flag;\n        this.prefabImgSize = flag ? 44 : 36;\n        this.idealSize = flag ? 50 : 40;\n    }\n    withinOutline(x, y) {\n        let w = this.width, h = this.height;\n        if (x < 0 || x > w || y < 0 || y > h)\n            return false;\n        if (this.position == ButtonViewPosition.Centre || this.stack.length == 0)\n            return true;\n        if (this.position == ButtonViewPosition.Left) {\n            let my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n            return x < w - gw || (y > my - hg && y < my + hg);\n        }\n        else if (this.position == ButtonViewPosition.Right) {\n            let my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n            return x > gw || (y > my - hg && y < my + hg);\n        }\n        else if (this.position == ButtonViewPosition.Top) {\n            let mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n            return y < h - gh || (x > mx - hg && x < mx + hg);\n        }\n        else if (this.position == ButtonViewPosition.Bottom) {\n            let mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n            return y > gh || (x > mx - hg && x < mx + hg);\n        }\n        return true;\n    }\n    gripSize() {\n        return this.gripHeight;\n    }\n    sizeForButtons(nbtn) {\n        return this.idealSize * nbtn + this.inPadding * (nbtn - 1) + 2 * this.outPadding;\n    }\n    layoutButtons() {\n        if (this.contentDOM == null)\n            return;\n        let outPadding = this.outPadding, inPadding = this.inPadding;\n        this.removeDisplayButtons();\n        if (this.stack.length == 0) {\n            this.width = 10;\n            this.height = 10;\n            if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n                this.height = this.parentHeight;\n            else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n                this.width = this.parentWidth;\n            return;\n        }\n        if (!this.isRaised) {\n            if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) {\n                this.width = this.gripHeight;\n                this.height = this.gripWidth + 2 * outPadding;\n            }\n            else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) {\n                this.width = this.gripWidth + 2 * outPadding;\n                this.height = this.gripHeight;\n            }\n            this.addGripButton();\n            return;\n        }\n        let bank = this.stack[this.stack.length - 1];\n        bank.buttons = [];\n        bank.update();\n        let popWidth = 0, popHeight = 0;\n        if (this.stack.length == 1) { }\n        else if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n            popHeight = this.gripHeight + inPadding;\n        else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n            popWidth = this.gripHeight + inPadding;\n        let bestLayout = null, bestScore = null;\n        if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) {\n            let maxSlotHeight = Math.floor((this.parentHeight - 2 * outPadding - inPadding) / (this.idealSize + inPadding));\n            let minSlotHeight = Math.ceil(0.5 * maxSlotHeight);\n            for (let i = maxSlotHeight; i >= minSlotHeight; i--) {\n                let slotWidth = Math.ceil(bank.buttons.length / i);\n                for (let j = slotWidth; j <= slotWidth + 1; j++) {\n                    let layout = this.layoutMaxHeight(bank, i, j);\n                    let score = this.scoreLayout(layout) + 1 * layout[0].length;\n                    if (bestLayout == null || score < bestScore) {\n                        bestLayout = layout;\n                        bestScore = score;\n                    }\n                }\n            }\n        }\n        else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) {\n            let maxSlotWidth = Math.floor((this.parentWidth - 2 * outPadding - inPadding - popWidth) / (this.idealSize + inPadding));\n            let minSlotWidth = Math.ceil(0.5 * maxSlotWidth);\n            for (let n = maxSlotWidth; n >= minSlotWidth; n--) {\n                let layout = this.layoutMaxWidth(bank, n);\n                let score = this.scoreLayout(layout) + 1 * layout.length;\n                if (bestLayout == null || score < bestScore) {\n                    bestLayout = layout;\n                    bestScore = score;\n                }\n            }\n        }\n        else {\n        }\n        let ncols = bestLayout[0].length, nrows = bestLayout.length;\n        this.width = 2 * outPadding + inPadding + (this.idealSize + inPadding) * ncols + popWidth;\n        this.height = 2 * outPadding + inPadding + (this.idealSize + inPadding) * nrows + popHeight;\n        if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n            this.width += this.gripHeight;\n        else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n            this.height += this.gripHeight;\n        this.addGripButton();\n        if (popWidth > 0 || popHeight > 0) {\n            let d = {\n                id: '!',\n                x: outPadding + inPadding,\n                y: outPadding + inPadding,\n                width: popWidth - inPadding,\n                height: popHeight - inPadding\n            };\n            if (this.position == ButtonViewPosition.Right)\n                d.x += this.gripHeight;\n            else if (this.position == ButtonViewPosition.Bottom)\n                d.y += this.gripHeight;\n            if (popWidth == 0)\n                d.width = ncols * this.idealSize + inPadding * (ncols - 1);\n            if (popHeight == 0)\n                d.height = nrows * this.idealSize + inPadding * (nrows - 1);\n            this.display.push(d);\n        }\n        for (let y = 0; y < nrows; y++)\n            for (let x = 0; x < ncols; x++) {\n                for (let n = 0; n < bank.buttons.length; n++)\n                    if (bestLayout[y][x] == bank.buttons[n].id) {\n                        let b = bank.buttons[n], d = { id: b.id };\n                        d.x = outPadding + inPadding + popWidth + (this.idealSize + inPadding) * x;\n                        d.y = outPadding + inPadding + popHeight + (this.idealSize + inPadding) * y;\n                        if (this.position == ButtonViewPosition.Right)\n                            d.x += this.gripHeight;\n                        else if (this.position == ButtonViewPosition.Bottom)\n                            d.y += this.gripHeight;\n                        d.width = this.idealSize;\n                        d.height = this.idealSize;\n                        this.display.push(d);\n                    }\n            }\n    }\n    addGripButton() {\n        if (this.position == ButtonViewPosition.Centre)\n            return;\n        let d = { id: '*' }, spc = 3;\n        if (this.position == ButtonViewPosition.Left) {\n            d.width = this.gripHeight - spc;\n            d.height = this.gripWidth - 2 * spc;\n            d.x = this.width - d.width - spc - 1;\n            d.y = 0.5 * (this.height - d.height);\n        }\n        else if (this.position == ButtonViewPosition.Right) {\n            d.width = this.gripHeight - spc;\n            d.height = this.gripWidth - 2 * spc;\n            d.x = spc + 1;\n            d.y = 0.5 * (this.height - d.height);\n        }\n        else if (this.position == ButtonViewPosition.Top) {\n            d.width = this.gripWidth - 2 * spc;\n            d.height = this.gripHeight - spc;\n            d.x = 0.5 * (this.width - d.width);\n            d.y = this.height - d.height - spc - 1;\n        }\n        else if (this.position == ButtonViewPosition.Bottom) {\n            d.width = this.gripWidth - 2 * spc;\n            d.height = this.gripHeight - spc;\n            d.x = 0.5 * (this.width - d.width);\n            d.y = spc + 1;\n        }\n        this.display.push(d);\n    }\n    replaceCanvas() {\n        this.contentDOM.empty();\n        for (let n = 0; n < this.display.length; n++) {\n            this.display[n].imgDOM = null;\n            this.display[n].helpSpan = null;\n        }\n        let canvasStyle = 'position: absolute; left: 0; top: 0;';\n        canvasStyle += 'pointer-events: none;';\n        this.canvas = newElement(this.contentDOM.el, 'canvas', { 'width': this.width, 'height': this.height, 'style': canvasStyle });\n    }\n    removeDisplayButtons() {\n        this.contentDOM.empty();\n        this.display = [];\n    }\n    applyOffset() {\n        let x, y;\n        if (this.position == ButtonViewPosition.Left) {\n            x = 0;\n            y = 0.5 * (this.parentHeight - this.height);\n        }\n        else if (this.position == ButtonViewPosition.Right) {\n            x = this.parentWidth - this.width;\n            y = 0.5 * (this.parentHeight - this.height);\n        }\n        else if (this.position == ButtonViewPosition.Top) {\n            x = 0.5 * (this.parentWidth - this.width);\n            y = 0;\n        }\n        else if (this.position == ButtonViewPosition.Bottom) {\n            x = 0.5 * (this.parentWidth - this.width);\n            y = this.parentHeight - this.height;\n        }\n        else {\n            x = 0.5 * (this.parentWidth - this.width);\n            y = 0.5 * (this.parentHeight - this.height);\n        }\n        this.x = this.parentX + x;\n        this.y = this.parentY + y;\n        this.contentDOM.css({ 'position': 'absolute' });\n        setBoundaryPixels(this.contentDOM, this.x, this.y, this.width, this.height);\n    }\n    redraw() {\n        if (!this.contentDOM || !this.canvas)\n            return;\n        let density = pixelDensity();\n        this.canvas.width = this.width * density;\n        this.canvas.height = this.height * density;\n        this.canvas.style.width = this.width + 'px';\n        this.canvas.style.height = this.height + 'px';\n        let ctx = this.canvas.getContext('2d');\n        ctx.save();\n        ctx.scale(density, density);\n        ctx.clearRect(0, 0, this.width, this.height);\n        let path = this.traceOutline();\n        ctx.fillStyle = colourCanvas(this.background);\n        ctx.fill(path);\n        ctx.strokeStyle = colourCanvas(this.border);\n        ctx.lineWidth = 1;\n        ctx.stroke(path);\n        let bank = this.stack.length > 0 ? this.stack[this.stack.length - 1] : null;\n        this.contentDOM.css({ 'width': this.width + 'px', 'height': this.height + 'px' });\n        for (let n = 0; n < this.display.length; n++) {\n            const d = this.display[n], b = this.buttonFromID(d.id);\n            let col1, col2;\n            if (this.highlightButton != null && d.id == this.highlightButton) {\n                col1 = this.buttonColActv1;\n                col2 = this.buttonColActv2;\n            }\n            else if (this.selectedButton != null && d.id == this.selectedButton) {\n                col1 = this.buttonColSel1;\n                col2 = this.buttonColSel2;\n            }\n            else {\n                col1 = this.buttonColNorm1;\n                col2 = this.buttonColNorm2;\n            }\n            ctx.save();\n            path = pathRoundedRect(d.x + 0.5, d.y + 0.5, d.x + d.width - 1, d.y + d.height - 1, 5);\n            if (col2 != null) {\n                let grad = ctx.createLinearGradient(d.x, d.y, d.x + d.width, d.y + d.height);\n                grad.addColorStop(0, colourCanvas(col1));\n                grad.addColorStop(1, colourCanvas(col2));\n                ctx.fillStyle = grad;\n            }\n            else\n                ctx.fillStyle = colourCanvas(col1);\n            ctx.fill(path);\n            ctx.strokeStyle = colourCanvas(this.border);\n            ctx.lineWidth = 0.5;\n            ctx.stroke(path);\n            ctx.restore();\n            if (d.imgDOM != null) {\n                d.imgDOM.remove();\n                d.imgDOM = null;\n            }\n            if (b != null) {\n                if (d.helpSpan == null) {\n                    d.helpSpan = dom('<span style=\"position: absolute;\"/>').appendTo(this.contentDOM);\n                    let txt = b.helpText;\n                    if (b.mnemonic) {\n                        while (txt.endsWith('.'))\n                            txt = txt.substring(0, txt.length - 1);\n                        let keyText = b.mnemonic;\n                        let match = keyText.match(/^(.*)CmdOrCtrl(.*)$/);\n                        if (match)\n                            keyText = match[1] + (this.isMacLike ? 'Cmd' : 'Ctrl') + match[2];\n                        txt += ' [' + keyText + ']';\n                    }\n                    addTooltip(d.helpSpan, txt);\n                }\n                setBoundaryPixels(d.helpSpan, d.x, d.y, d.width, d.height);\n            }\n            if (b == null) { }\n            else if (b.imageFN != null && d.imgDOM == null) {\n                d.imgDOM = dom('<img/>').appendTo(this.contentDOM).css({ 'position': 'absolute', 'pointer-events': 'none' });\n                d.imgDOM.setAttr('src', Theme.RESOURCE_URL + '/img/actions/' + b.imageFN + '.svg');\n                const sz = this.prefabImgSize;\n                const bx = d.x + Math.floor(0.5 * (d.width - sz));\n                const by = d.y + Math.floor(0.5 * (d.height - sz));\n                setBoundaryPixels(d.imgDOM, bx, by, sz, sz);\n            }\n            else if (b.svg != null) {\n                d.imgDOM = dom('<div/>').appendTo(this.contentDOM).css({ 'display': 'block', 'position': 'absolute', 'pointer-events': 'none' });\n                const sz = this.prefabImgSize;\n                const bx = d.x + Math.floor(0.5 * (d.width - sz));\n                const by = d.y + Math.floor(0.5 * (d.height - sz));\n                setBoundaryPixels(d.imgDOM, bx, by, sz, sz);\n                let svg = dom(b.svg.substring(b.svg.indexOf('<svg'))).appendTo(d.imgDOM);\n                let oldWidth = svg.getAttr('width'), oldHeight = svg.getAttr('height');\n                svg.attr({ 'viewBox': `0 0 ${oldWidth} ${oldHeight}`, 'width': `${sz}`, 'height': `${sz}` });\n                svg.css({ 'width': `${sz}px`, 'height': `${sz}px`, 'pointer-events': 'none' });\n                dom(svg).appendTo(d.imgDOM);\n            }\n            else if (b.metavec != null) {\n                let draw = b.metavec instanceof MetaVector ? b.metavec : new MetaVector(b.metavec);\n                draw.offsetX = d.x + Math.floor(0.5 * (d.width - draw.width));\n                draw.offsetY = d.y + Math.floor(0.5 * (d.height - draw.height));\n                draw.renderContext(ctx);\n            }\n            else if (b.text != null) {\n                let sz = this.idealSize;\n                let draw = new MetaVector({ 'size': [sz, sz] });\n                let fsz = sz * 0.6;\n                let wad = FontData.main.measureText(b.text, fsz);\n                if (wad[1] + wad[2] > sz) {\n                    fsz *= sz / (wad[1] + wad[2]);\n                    wad = FontData.main.measureText(b.text, fsz);\n                }\n                if (wad[0] > sz) {\n                    fsz *= sz / wad[0];\n                    wad = FontData.main.measureText(b.text, fsz);\n                }\n                let x = 0.5 * (sz - wad[0]), y = 0.5 * (sz + wad[1]);\n                draw.drawText(x - 1, y, b.text, fsz, 0x000000);\n                draw.drawText(x + 1, y, b.text, fsz, 0x000000);\n                draw.drawText(x, y - 1, b.text, fsz, 0x000000);\n                draw.drawText(x, y + 1, b.text, fsz, 0x000000);\n                draw.drawText(x, y, b.text, fsz, 0xFFFFFF);\n                draw.offsetX = d.x + Math.floor(0.5 * (d.width - draw.width));\n                draw.offsetY = d.y + Math.floor(0.5 * (d.height - draw.height));\n                draw.renderContext(ctx);\n            }\n            if (b != null && b.isSubMenu) {\n                ctx.save();\n                let sx = d.x + d.width - 3, sy = d.y + d.height - 3;\n                ctx.beginPath();\n                ctx.moveTo(sx, sy);\n                ctx.lineTo(sx - 6, sy);\n                ctx.lineTo(sx, sy - 6);\n                ctx.closePath();\n                ctx.fillStyle = 'black';\n                ctx.fill();\n                ctx.restore();\n            }\n            if (d.id == '*') {\n                ctx.save();\n                path = new Path2D();\n                let px, py, flip = this.isRaised;\n                if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) {\n                    px = [0.2, 0.7, 0.7];\n                    py = [0.5, 0.3, 0.7];\n                    if (this.position == ButtonViewPosition.Left)\n                        flip = !flip;\n                }\n                else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) {\n                    px = [0.5, 0.3, 0.7];\n                    py = [0.2, 0.7, 0.7];\n                    if (this.position == ButtonViewPosition.Top)\n                        flip = !flip;\n                }\n                if (flip) {\n                    px = [1 - px[0], 1 - px[1], 1 - px[2]];\n                    py = [1 - py[0], 1 - py[1], 1 - py[2]];\n                }\n                path.moveTo(d.x + d.width * px[0], d.y + d.height * py[0]);\n                path.lineTo(d.x + d.width * px[1], d.y + d.height * py[1]);\n                path.lineTo(d.x + d.width * px[2], d.y + d.height * py[2]);\n                path.closePath();\n                ctx.fillStyle = 'white';\n                ctx.strokeStyle = 'black';\n                ctx.lineWidth = 0;\n                ctx.fill(path);\n                ctx.stroke(path);\n                ctx.restore();\n            }\n            else if (d.id == '!') {\n                ctx.save();\n                let path1 = new Path2D(), path2 = new Path2D();\n                let inset = 5;\n                let w = d.width - inset * 2, h = d.height - inset * 2;\n                for (let z = 5; z < w + h - 1; z += 12) {\n                    let x1 = 0, y1 = z, x2 = z, y2 = 0;\n                    if (y1 > h) {\n                        let delta = y1 - h;\n                        x1 += delta;\n                        y1 -= delta;\n                    }\n                    if (x2 > w) {\n                        let delta = x2 - w;\n                        x2 -= delta;\n                        y2 += delta;\n                    }\n                    path1.moveTo(d.x + inset + x1, d.y + inset + y1);\n                    path1.lineTo(d.x + inset + x2, d.y + inset + y2);\n                    path2.moveTo(d.x + inset + x1 + 1, d.y + inset + y1);\n                    path2.lineTo(d.x + inset + x2 + 1, d.y + inset + y2);\n                }\n                ctx.lineWidth = 1;\n                ctx.strokeStyle = '#404040';\n                ctx.stroke(path1);\n                ctx.strokeStyle = 'white';\n                ctx.stroke(path2);\n                ctx.restore();\n            }\n        }\n        ctx.restore();\n    }\n    delayedRedraw() {\n        window.setTimeout(() => this.redraw(), 100);\n    }\n    buttonFromID(id) {\n        let bank = this.stack[this.stack.length - 1];\n        for (let n = 0; n < bank.buttons.length; n++)\n            if (bank.buttons[n].id == id)\n                return bank.buttons[n];\n        return null;\n    }\n    displayFromID(id) {\n        for (let n = 0; n < this.display.length; n++)\n            if (this.display[n].id == id)\n                return this.display[n];\n        return null;\n    }\n    traceOutline() {\n        let w = this.width, h = this.height, uw = w - 1, uh = h - 1, r = 8;\n        if (this.position == ButtonViewPosition.Centre || this.stack.length == 0)\n            return pathRoundedRect(0.5, 0.5, w - 0.5, h - 0.5, r);\n        let path = new Path2D();\n        if (this.position == ButtonViewPosition.Left) {\n            let my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n            path.moveTo(0.5, 0.5);\n            path.lineTo(0.5 + uw - gw - r, 0.5);\n            path.bezierCurveTo(0.5 + uw - gw, 0.5, 0.5 + uw - gw, 0.5, 0.5 + uw - gw, 0.5 + r);\n            path.lineTo(0.5 + uw - gw, 0.5 + my - hg);\n            path.lineTo(0.5 + uw - r, 0.5 + my - hg);\n            path.bezierCurveTo(0.5 + uw, 0.5 + my - hg, 0.5 + uw, 0.5 + my - hg, 0.5 + uw, 0.5 + my - hg + r);\n            path.lineTo(0.5 + uw, 0.5 + my + hg - r);\n            path.bezierCurveTo(0.5 + uw, 0.5 + my + hg, 0.5 + uw, 0.5 + my + hg, 0.5 + uw - r, 0.5 + my + hg);\n            path.lineTo(0.5 + uw - gw, 0.5 + my + hg);\n            path.lineTo(0.5 + uw - gw, 0.5 + uh - r);\n            path.bezierCurveTo(0.5 + uw - gw, 0.5 + uh, 0.5 + uw - gw, 0.5 + uh, 0.5 + uw - gw - r, 0.5 + uh);\n            path.lineTo(0.5, 0.5 + uh);\n        }\n        else if (this.position == ButtonViewPosition.Right) {\n            let my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n            path.moveTo(w - 0.5, 0.5);\n            path.lineTo(w - (0.5 + uw - gw - r), 0.5);\n            path.bezierCurveTo(w - (0.5 + uw - gw), 0.5, w - (0.5 + uw - gw), 0.5, w - (0.5 + uw - gw), 0.5 + r);\n            path.lineTo(w - (0.5 + uw - gw), 0.5 + my - hg);\n            path.lineTo(w - (0.5 + uw - r), 0.5 + my - hg);\n            path.bezierCurveTo(w - (0.5 + uw), 0.5 + my - hg, w - (0.5 + uw), 0.5 + my - hg, w - (0.5 + uw), 0.5 + my - hg + r);\n            path.lineTo(w - (0.5 + uw), 0.5 + my + hg - r);\n            path.bezierCurveTo(w - (0.5 + uw), 0.5 + my + hg, w - (0.5 + uw), 0.5 + my + hg, w - (0.5 + uw - r), 0.5 + my + hg);\n            path.lineTo(w - (0.5 + uw - gw), 0.5 + my + hg);\n            path.lineTo(w - (0.5 + uw - gw), 0.5 + uh - r);\n            path.bezierCurveTo(w - (0.5 + uw - gw), 0.5 + uh, w - (0.5 + uw - gw), 0.5 + uh, w - (0.5 + uw - gw - r), 0.5 + uh);\n            path.lineTo(w - 0.5, 0.5 + uh);\n        }\n        else if (this.position == ButtonViewPosition.Top) {\n            let mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n            path.moveTo(0.5, h - (0.5 + uh));\n            path.lineTo(0.5, h - (0.5 + gh + r));\n            path.bezierCurveTo(0.5, h - (0.5 + gh), 0.5, h - (0.5 + gh), 0.5 + r, h - (0.5 + gh));\n            path.lineTo(0.5 + mx - hg, h - (0.5 + gh));\n            path.lineTo(0.5 + mx - hg, h - (0.5 + r));\n            path.bezierCurveTo(0.5 + mx - hg, h - 0.5, 0.5 + mx - hg, h - 0.5, 0.5 + mx - hg + r, h - 0.5);\n            path.lineTo(0.5 + mx + hg - r, h - 0.5);\n            path.bezierCurveTo(0.5 + mx + hg, h - 0.5, 0.5 + mx + hg, h - 0.5, 0.5 + mx + hg, h - (0.5 + r));\n            path.lineTo(0.5 + mx + hg, h - (0.5 + gh));\n            path.lineTo(0.5 + uw - r, h - (0.5 + gh));\n            path.bezierCurveTo(0.5 + uw, h - (0.5 + gh), 0.5 + uw, h - (0.5 + gh), 0.5 + uw, h - (0.5 + gh + r));\n            path.lineTo(0.5 + uw, h - (0.5 + uh));\n        }\n        else if (this.position == ButtonViewPosition.Bottom) {\n            let mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n            path.moveTo(0.5, 0.5 + uh);\n            path.lineTo(0.5, 0.5 + gh + r);\n            path.bezierCurveTo(0.5, 0.5 + gh, 0.5, 0.5 + gh, 0.5 + r, 0.5 + gh);\n            path.lineTo(0.5 + mx - hg, 0.5 + gh);\n            path.lineTo(0.5 + mx - hg, 0.5 + r);\n            path.bezierCurveTo(0.5 + mx - hg, 0.5, 0.5 + mx - hg, 0.5, 0.5 + mx - hg + r, 0.5);\n            path.lineTo(0.5 + mx + hg - r, 0.5);\n            path.bezierCurveTo(0.5 + mx + hg, 0.5, 0.5 + mx + hg, 0.5, 0.5 + mx + hg, 0.5 + r);\n            path.lineTo(0.5 + mx + hg, 0.5 + gh);\n            path.lineTo(0.5 + uw - r, 0.5 + gh);\n            path.bezierCurveTo(0.5 + uw, 0.5 + gh, 0.5 + uw, 0.5 + gh, 0.5 + uw, 0.5 + gh + r);\n            path.lineTo(0.5 + uw, 0.5 + uh);\n        }\n        return path;\n    }\n    layoutMaxWidth(bank, slotWidth) {\n        if (bank.buttons.length == 0)\n            return [[null]];\n        let bx = new Array(bank.buttons.length), by = new Array(bank.buttons.length);\n        let x = 0, y = 0, w = 0, h = 0;\n        for (let n = 0; n < bank.buttons.length; n++) {\n            w = Math.max(x + 1, w);\n            h = Math.max(y + 1, h);\n            bx[n] = x;\n            by[n] = y;\n            x++;\n            if (x >= slotWidth) {\n                x = 0;\n                y++;\n            }\n        }\n        let slot = new Array(h);\n        for (let n = 0; n < h; n++)\n            slot[n] = new Array(w);\n        for (let n = 0; n < bank.buttons.length; n++) {\n            slot[by[n]][bx[n]] = bank.buttons[n].id;\n        }\n        return slot;\n    }\n    layoutMaxHeight(bank, slotHeight, slotWidth) {\n        if (bank.buttons.length == 0)\n            return [[null]];\n        let bx = new Array(bank.buttons.length), by = new Array(bank.buttons.length);\n        let x = 0, y = 0, w = 0, h = 0;\n        for (let n = 0; n < bank.buttons.length; n++) {\n            w = Math.max(x + 1, w);\n            h = Math.max(y + 1, h);\n            bx[n] = x;\n            by[n] = y;\n            x++;\n            if (x >= slotWidth) {\n                x = 0;\n                y++;\n            }\n        }\n        let slot = new Array(h);\n        for (let n = 0; n < h; n++)\n            slot[n] = new Array(w);\n        for (let n = 0; n < bank.buttons.length; n++) {\n            slot[by[n]][bx[n]] = bank.buttons[n].id;\n        }\n        return slot;\n    }\n    scoreLayout(slots) {\n        let score = 0;\n        let nrows = slots.length, ncols = slots[0].length;\n        for (let y = 0; y < nrows; y++)\n            for (let x = 0; x < ncols; x++) {\n                if (slots[y][x] == null)\n                    score++;\n            }\n        if (this.maxButtonRows > 0 && nrows > this.maxButtonRows)\n            score += (nrows - this.maxButtonRows) * 100;\n        if (this.maxButtonColumns > 0 && ncols > this.maxButtonColumns)\n            score += (ncols - this.maxButtonColumns) * 100;\n        return score;\n    }\n    pickButtonIndex(x, y) {\n        for (let n = 0; n < this.display.length; n++) {\n            let d = this.display[n];\n            if (x >= d.x && y >= d.y && x < d.x + d.width && y < d.y + d.height)\n                return n;\n        }\n        return -1;\n    }\n    pickButtonID(x, y) {\n        let idx = this.pickButtonIndex(x, y);\n        if (idx < 0)\n            return undefined;\n        return this.display[idx].id;\n    }\n    triggerButton(id) {\n        if (id == '*') {\n            if (this.isRaised)\n                this.lowerBank();\n            else\n                this.raiseBank();\n            return;\n        }\n        else if (id == '!') {\n            this.popBank();\n            return;\n        }\n        let bank = this.stack[this.stack.length - 1];\n        bank.hitButton(id);\n    }\n    mouseClick(event) {\n    }\n    mouseDoubleClick(event) {\n        event.stopImmediatePropagation();\n    }\n    mouseDown(event) {\n        this.contentDOM.parent().grabFocus();\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1]))\n            return;\n        let id = this.pickButtonID(xy[0], xy[1]);\n        if (id != this.highlightButton) {\n            this.highlightButton = id;\n            this.redraw();\n        }\n        event.stopPropagation();\n    }\n    mouseUp(event) {\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1]))\n            return;\n        let id = this.pickButtonID(xy[0], xy[1]);\n        if (id != null && this.highlightButton == id) {\n            this.highlightButton = undefined;\n            this.triggerButton(id);\n            this.delayedRedraw();\n        }\n        else {\n            this.highlightButton = undefined;\n            this.delayedRedraw();\n        }\n        event.stopPropagation();\n    }\n    mouseOver(event) {\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1]))\n            return;\n        event.stopPropagation();\n    }\n    mouseOut(event) {\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1])) {\n            if (this.highlightButton != null) {\n                this.highlightButton = null;\n                this.delayedRedraw();\n            }\n            return;\n        }\n        if (this.highlightButton != null) {\n            let xy = eventCoords(event, this.contentDOM);\n            let id = this.pickButtonID(xy[0], xy[1]);\n            if (id != this.highlightButton) {\n                this.highlightButton = null;\n                this.delayedRedraw();\n            }\n        }\n        event.stopPropagation();\n    }\n    mouseMove(event) {\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1]))\n            return;\n    }\n}\n//# sourceMappingURL=ButtonView.js.map","export class ButtonBank {\n    constructor() {\n        this.isSubLevel = false;\n        this.buttons = [];\n    }\n    init() { }\n    claimKey(event) { return false; }\n    bankClosed() { }\n    static matchKey(event, mnemonic, key) {\n        if (mnemonic == null || mnemonic == '')\n            return false;\n        let mshift = false, mctrl = false, malt = false, mmeta = false, mkey = mnemonic;\n        while (true) {\n            if (mkey.startsWith('Shift+')) {\n                mshift = true;\n                mkey = mkey.substring(6);\n            }\n            else if (mkey.startsWith('Ctrl+')) {\n                mctrl = true;\n                mkey = mkey.substring(5);\n            }\n            else if (mkey.startsWith('Alt+')) {\n                malt = true;\n                mkey = mkey.substring(4);\n            }\n            else if (mkey.startsWith('Cmd+')) {\n                mmeta = true;\n                mkey = mkey.substring(4);\n            }\n            else\n                break;\n        }\n        if (mshift != event.shiftKey)\n            return false;\n        if (mctrl != event.ctrlKey)\n            return false;\n        if (malt != event.altKey)\n            return false;\n        if (mmeta != event.metaKey)\n            return false;\n        if (key)\n            mkey = key;\n        return mkey.toLowerCase() == event.key.toLowerCase();\n    }\n}\n//# sourceMappingURL=ButtonBank.js.map","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainUndo.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainExport.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3604\\\">\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.25098041;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3606\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.1254902;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3608\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective23\\\" />\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(0,0)\\\"\\n       id=\\\"pattern5043\\\">\\n      <rect\\n         id=\\\"rect5041\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <path\\n         id=\\\"path5039\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5037\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5035\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5033\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    </pattern>\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(18.5,-71.5)\\\"\\n       id=\\\"pattern5062\\\">\\n      <path\\n         id=\\\"path5060\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5058\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5056\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5054\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5052\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <rect\\n         id=\\\"rect5050\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n      <path\\n         id=\\\"path5000\\\"\\n         d=\\\"M 1.5,11.5 L 11.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5030\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n    </pattern>\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3604\\\"\\n       id=\\\"radialGradient3610\\\"\\n       cx=\\\"210\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"210\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"152.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(1.0491803,-0.78688524,0.78096126,1.0412817,-119.66246,159.46646)\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.2586836\\\"\\n     inkscape:cx=\\\"163.14968\\\"\\n     inkscape:cy=\\\"164.16609\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1716\\\"\\n     inkscape:window-height=\\\"1116\\\"\\n     inkscape:window-x=\\\"144\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3600\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:url(#radialGradient3610);fill-opacity:1;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       id=\\\"path3602\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"160\\\"\\n       sodipodi:rx=\\\"150\\\"\\n       sodipodi:ry=\\\"150\\\"\\n       d=\\\"m 310,160 a 150,150 0 1 1 -300,0 150,150 0 1 1 300,0 z\\\"\\n       transform=\\\"matrix(0.93333333,0,0,0.93333333,10.666666,10.666666)\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 196.07064,12.690252 -90,50 90,49.999998 0,-12.8125 c 20.29664,12.07637 33.75,34.2109 33.75,59.78125 0,38.68907 -30.81093,69.5 -69.5,69.5 -38.68907,0 -69.531254,-30.81093 -69.531254,-69.5 0.0934,-6.60391 -2.559001,-13.20451 -7.195999,-17.90755 -4.636997,-4.70304 -11.199433,-7.4485 -17.804001,-7.4485 -6.604568,0 -13.167004,2.74546 -17.804001,7.4485 -4.636998,4.70304 -7.289395,11.30364 -7.195999,17.90755 0,65.71107 53.82018,119.5 119.531254,119.5 65.71107,0 119.5,-53.78892 119.5,-119.5 0,-53.27576 -35.34828,-98.733461 -83.75,-114.031248 l 0,-32.9375 z\\\"\\n       id=\\\"path3612\\\"\\n       sodipodi:nodetypes=\\\"ccccsscssscsscc\\\" />\\n  </g>\\n</svg>\\n\";","import { Molecule } from '../data/Molecule';\nimport { Geometry } from '../data/SketchUtil';\nimport { ButtonBank } from '../ui/ButtonBank';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nconst ELEMENTS_NOBLE = [\n    'He', 'Ar', 'Kr', 'Xe', 'Rn'\n];\nconst ELEMENTS_S_BLOCK = [\n    'Li', 'Na', 'K', 'Rb', 'Cs', 'Fr', 'Sc',\n    'Be', 'Mg', 'Ca', 'Sr', 'Ba', 'Ra', 'Y'\n];\nconst ELEMENTS_P_BLOCK = [\n    'B', 'Al', 'Si', 'Ga', 'Ge', 'As', 'Se',\n    'In', 'Sn', 'Sb', 'Te', 'Tl', 'Pb', 'Bi', 'Po', 'At'\n];\nconst ELEMENTS_D_BLOCK = [\n    'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n    'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd',\n    'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg'\n];\nconst ELEMENTS_F_BLOCK = [\n    'La', 'Ce', 'Pr', 'Nd', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy',\n    'Ho', 'Er', 'Tm', 'Yb', 'Lu', 'Ac', 'Th', 'Pa', 'U'\n];\nconst ELEMENTS_ABBREV = [\n    '*', 'A', 'X', 'Y', 'Z', 'Q', 'M', 'T', 'E', 'L', 'R',\n    'R0', 'R1', 'R2', 'R3', 'R4', 'R5', 'R6', 'R7', 'R8'\n];\nvar CommandType;\n(function (CommandType) {\n    CommandType[CommandType[\"Main\"] = 0] = \"Main\";\n    CommandType[CommandType[\"Atom\"] = 1] = \"Atom\";\n    CommandType[CommandType[\"Bond\"] = 2] = \"Bond\";\n    CommandType[CommandType[\"Select\"] = 3] = \"Select\";\n    CommandType[CommandType[\"Move\"] = 4] = \"Move\";\n    CommandType[CommandType[\"Abbrev\"] = 5] = \"Abbrev\";\n    CommandType[CommandType[\"SBlock\"] = 6] = \"SBlock\";\n    CommandType[CommandType[\"PBlock\"] = 7] = \"PBlock\";\n    CommandType[CommandType[\"DBlock\"] = 8] = \"DBlock\";\n    CommandType[CommandType[\"FBlock\"] = 9] = \"FBlock\";\n    CommandType[CommandType[\"Noble\"] = 10] = \"Noble\";\n})(CommandType || (CommandType = {}));\nimport svgMainUndo from '../res/img/actions/MainUndo.svg';\nimport svgMainRedo from '../res/img/actions/MainRedo.svg';\nimport svgMainZoomIn from '../res/img/actions/MainZoomIn.svg';\nimport svgMainZoomOut from '../res/img/actions/MainZoomOut.svg';\nimport svgMainZoomFit from '../res/img/actions/MainZoomFit.svg';\nimport svgMainSelSide from '../res/img/actions/MainSelSide.svg';\nimport svgMainSelAll from '../res/img/actions/MainSelAll.svg';\nimport svgMainSelNone from '../res/img/actions/MainSelNone.svg';\nimport svgMainDelete from '../res/img/actions/MainDelete.svg';\nimport svgMainCut from '../res/img/actions/MainCut.svg';\nimport svgMainCopy from '../res/img/actions/MainCopy.svg';\nimport svgMainPaste from '../res/img/actions/MainPaste.svg';\nimport svgMainAtom from '../res/img/actions/MainAtom.svg';\nimport svgMainBond from '../res/img/actions/MainBond.svg';\nimport svgMainSelect from '../res/img/actions/MainSelect.svg';\nimport svgMainMove from '../res/img/actions/MainMove.svg';\nconst COMMANDS_MAIN = [\n    { id: 'undo', svg: svgMainUndo, helpText: 'Undo last change.', mnemonic: 'CmdOrCtrl+Z' },\n    { id: 'redo', svg: svgMainRedo, helpText: 'Cancel last undo.', mnemonic: 'CmdOrCtrl+Shift+Z' },\n    { id: 'zoomin', svg: svgMainZoomIn, helpText: 'Zoom in.', mnemonic: '=' },\n    { id: 'zoomout', svg: svgMainZoomOut, helpText: 'Zoom out.', mnemonic: '-' },\n    { id: 'zoomfit', svg: svgMainZoomFit, helpText: 'Show whole diagram onscreen.', mnemonic: '' },\n    { id: 'selside', svg: svgMainSelSide, helpText: 'Select alternate side of current atom or bond.', mnemonic: 'E' },\n    { id: 'selall', svg: svgMainSelAll, helpText: 'Select all atoms.', mnemonic: 'Shift+A' },\n    { id: 'selnone', svg: svgMainSelNone, helpText: 'Clear selection.', mnemonic: 'Shift+Q' },\n    { id: 'delete', svg: svgMainDelete, helpText: 'Delete selected atoms and bonds.', mnemonic: 'D' },\n    { id: 'cut', svg: svgMainCut, helpText: 'Copy selection to clipboard, and remove.', mnemonic: 'CmdOrCtrl+X' },\n    { id: 'copy', svg: svgMainCopy, helpText: 'Copy selection to clipboard.', mnemonic: 'CmdOrCtrl+C' },\n    { id: 'paste', svg: svgMainPaste, helpText: 'Paste clipboard contents.' },\n    { id: 'atom', svg: svgMainAtom, helpText: 'Open the Atom submenu.', isSubMenu: true, mnemonic: 'A' },\n    { id: 'bond', svg: svgMainBond, helpText: 'Open the Bond submenu.', isSubMenu: true, mnemonic: 'B' },\n    { id: 'select', svg: svgMainSelect, helpText: 'Open the Selection submenu.', isSubMenu: true, mnemonic: 'S' },\n    { id: 'move', svg: svgMainMove, helpText: 'Open the Move submenu.', isSubMenu: true, mnemonic: 'M' },\n];\nimport svgAtomPlus from '../res/img/actions/AtomPlus.svg';\nimport svgAtomMinus from '../res/img/actions/AtomMinus.svg';\nimport svgAtomAbbrev from '../res/img/actions/AtomAbbrev.svg';\nimport svgAtomSBlock from '../res/img/actions/AtomSBlock.svg';\nimport svgAtomPBlock from '../res/img/actions/AtomPBlock.svg';\nimport svgAtomDBlock from '../res/img/actions/AtomDBlock.svg';\nimport svgAtomFBlock from '../res/img/actions/AtomFBlock.svg';\nimport svgAtomNoble from '../res/img/actions/AtomNoble.svg';\nconst COMMANDS_ATOM = [\n    { id: 'element:C', text: 'C', helpText: 'Change elements to Carbon.', mnemonic: 'Shift+C' },\n    { id: 'element:N', text: 'N', helpText: 'Change elements to Nitrogen.', mnemonic: 'Shift+N' },\n    { id: 'element:O', text: 'O', helpText: 'Change elements to Oxygen.', mnemonic: 'Shift+O' },\n    { id: 'element:S', text: 'S', helpText: 'Change elements to Sulfur.', mnemonic: 'Shift+S' },\n    { id: 'element:P', text: 'P', helpText: 'Change elements to Phosphorus.', mnemonic: 'Shift+P' },\n    { id: 'element:H', text: 'H', helpText: 'Change elements to Hydrogen.', mnemonic: 'Shift+H' },\n    { id: 'element:F', text: 'F', helpText: 'Change elements to Fluorine.', mnemonic: 'Shift+F' },\n    { id: 'element:Cl', text: 'Cl', helpText: 'Change elements to Chlorine.', mnemonic: 'Shift+L' },\n    { id: 'element:Br', text: 'Br', helpText: 'Change elements to Bromine.', mnemonic: 'Shift+B' },\n    { id: 'element:I', text: 'I', helpText: 'Change elements to Iodine.', mnemonic: 'Shift+I' },\n    { id: 'plus', svg: svgAtomPlus, helpText: 'Increase the atom charge.', mnemonic: 'Shift+=', key: '+' },\n    { id: 'minus', svg: svgAtomMinus, helpText: 'Decrease the atom charge.', mnemonic: 'Shift+-', key: '_' },\n    { id: 'abbrev', svg: svgAtomAbbrev, helpText: 'Open list of common labels.', isSubMenu: true, mnemonic: '' },\n    { id: 'sblock', svg: svgAtomSBlock, helpText: 'Open list of s-block elements.', isSubMenu: true, mnemonic: '' },\n    { id: 'pblock', svg: svgAtomPBlock, helpText: 'Open list of p-block elements.', isSubMenu: true, mnemonic: '' },\n    { id: 'dblock', svg: svgAtomDBlock, helpText: 'Open list of d-block elements.', isSubMenu: true, mnemonic: '' },\n    { id: 'fblock', svg: svgAtomFBlock, helpText: 'Open list of f-block elements.', isSubMenu: true, mnemonic: '' },\n    { id: 'noble', svg: svgAtomNoble, helpText: 'Open list of noble elements.', isSubMenu: true, mnemonic: '' },\n];\nimport svgBondOne from '../res/img/actions/BondOne.svg';\nimport svgBondTwo from '../res/img/actions/BondTwo.svg';\nimport svgBondThree from '../res/img/actions/BondThree.svg';\nimport svgBondFour from '../res/img/actions/BondFour.svg';\nimport svgBondZero from '../res/img/actions/BondZero.svg';\nimport svgBondUp from '../res/img/actions/BondUp.svg';\nimport svgBondDown from '../res/img/actions/BondDown.svg';\nimport svgBondSquig from '../res/img/actions/BondSquig.svg';\nimport svgBondQAny from '../res/img/actions/BondQAny.svg';\nimport svgBondAddTwo from '../res/img/actions/BondAddTwo.svg';\nimport svgBondInsert from '../res/img/actions/BondInsert.svg';\nimport svgBondSwitch from '../res/img/actions/BondSwitch.svg';\nimport svgBondRotate from '../res/img/actions/BondRotate.svg';\nimport svgBondLinear from '../res/img/actions/BondLinear.svg';\nimport svgBondTrigonal from '../res/img/actions/BondTrigonal.svg';\nimport svgBondTetra1 from '../res/img/actions/BondTetra1.svg';\nimport svgBondTetra2 from '../res/img/actions/BondTetra2.svg';\nimport svgBondSqPlan from '../res/img/actions/BondSqPlan.svg';\nimport svgBondOcta1 from '../res/img/actions/BondOcta1.svg';\nimport svgBondOcta2 from '../res/img/actions/BondOcta2.svg';\nimport svgBondMetalLigate from '../res/img/actions/BondMetalLigate.svg';\nimport svgBondArtifactPath from '../res/img/actions/BondArtifactPath.svg';\nimport svgBondArtifactRing from '../res/img/actions/BondArtifactRing.svg';\nimport svgBondArtifactArene from '../res/img/actions/BondArtifactArene.svg';\nimport svgBondArtifactClear from '../res/img/actions/BondArtifactClear.svg';\nimport svgBondPolymer from '../res/img/actions/BondPolymer.svg';\nconst COMMANDS_BOND = [\n    { id: 'one', svg: svgBondOne, helpText: 'Create or set bonds to single.', mnemonic: '1' },\n    { id: 'two', svg: svgBondTwo, helpText: 'Create or set bonds to double.', mnemonic: '2' },\n    { id: 'three', svg: svgBondThree, helpText: 'Create or set bonds to triple.', mnemonic: '3' },\n    { id: 'four', svg: svgBondFour, helpText: 'Create or set bonds to quadruple.', mnemonic: '' },\n    { id: 'zero', svg: svgBondZero, helpText: 'Create or set bonds to zero-order.', mnemonic: '0' },\n    { id: 'inclined', svg: svgBondUp, helpText: 'Create or set bonds to inclined.', mnemonic: '5' },\n    { id: 'declined', svg: svgBondDown, helpText: 'Create or set bonds to declined.', mnemonic: '6' },\n    { id: 'squig', svg: svgBondSquig, helpText: 'Create or set bonds to unknown stereochemistry.', mnemonic: '4' },\n    { id: 'bondQAny', svg: svgBondQAny, helpText: 'Query bond that matches anything.' },\n    { id: 'addtwo', svg: svgBondAddTwo, helpText: 'Add two new bonds to the subject atom.', mnemonic: 'Shift+D' },\n    { id: 'insert', svg: svgBondInsert, helpText: 'Insert a methylene into the subject bond.', mnemonic: '' },\n    { id: 'switch', svg: svgBondSwitch, helpText: 'Cycle through likely bond geometries.', mnemonic: '\\'' },\n    { id: 'rotate', svg: svgBondRotate, helpText: 'Rotate bond to invert substituent orientation.', mnemonic: '' },\n    { id: 'linear', svg: svgBondLinear, helpText: 'Apply linear geometry.', mnemonic: 'Shift+V' },\n    { id: 'trigonal', svg: svgBondTrigonal, helpText: 'Apply trigonal geometry.', mnemonic: 'Shift+W' },\n    { id: 'tetra1', svg: svgBondTetra1, helpText: 'Apply tetrahedral geometry #1.', mnemonic: 'Shift+E' },\n    { id: 'tetra2', svg: svgBondTetra2, helpText: 'Apply tetrahedral geometry #2.', mnemonic: 'Shift+R' },\n    { id: 'sqplan', svg: svgBondSqPlan, helpText: 'Apply square planar geometry.', mnemonic: 'Shift+T' },\n    { id: 'octa1', svg: svgBondOcta1, helpText: 'Apply octahedral geometry #1.', mnemonic: 'Shift+Y' },\n    { id: 'octa2', svg: svgBondOcta2, helpText: 'Apply octahedral geometry #2.', mnemonic: 'Shift+U' },\n    { id: 'metalligate', svg: svgBondMetalLigate, helpText: 'Arrange ligands around metal centre.', mnemonic: '' },\n    { id: 'artifactpath', svg: svgBondArtifactPath, helpText: 'Add a path bond artifact.', mnemonic: '' },\n    { id: 'artifactring', svg: svgBondArtifactRing, helpText: 'Add a ring bond artifact.', mnemonic: '' },\n    { id: 'artifactarene', svg: svgBondArtifactArene, helpText: 'Add an arene bond artifact.', mnemonic: '' },\n    { id: 'artifactclear', svg: svgBondArtifactClear, helpText: 'Remove a bond artifact.', mnemonic: '' },\n    { id: 'polymer', svg: svgBondPolymer, helpText: 'Create a polymer block.', mnemonic: '' },\n];\nconst COMMANDS_SELECT = [\n    { id: 'selgrow', imageFN: 'SelectionGrow', helpText: 'Add adjacent atoms to selection.', mnemonic: '' },\n    { id: 'selshrink', imageFN: 'SelectionShrink', helpText: 'Unselect exterior atoms.', mnemonic: '' },\n    { id: 'selchain', imageFN: 'SelectionChain', helpText: 'Extend selection to non-ring atoms.', mnemonic: '' },\n    { id: 'smallring', imageFN: 'SelectionSmRing', helpText: 'Extend selection to small rings.', mnemonic: '' },\n    { id: 'ringblock', imageFN: 'SelectionRingBlk', helpText: 'Extend selection to ring blocks.', mnemonic: '' },\n    { id: 'curelement', imageFN: 'SelectionCurElement', helpText: 'Select all atoms of current element type.', mnemonic: '' },\n    { id: 'selprev', imageFN: 'MainSelPrev', helpText: 'Select previous connected component.', mnemonic: '[' },\n    { id: 'selnext', imageFN: 'MainSelNext', helpText: 'Select next connected component.', mnemonic: ']' },\n    { id: 'toggle', imageFN: 'SelectionToggle', helpText: 'Toggle selection of current.', mnemonic: ',' },\n    { id: 'uncurrent', imageFN: 'SelectionUncurrent', helpText: 'Undefine current object.', mnemonic: '.' },\n    { id: 'join', imageFN: 'MoveJoin', helpText: 'Overlapping atoms will be joined as one.', mnemonic: '' },\n    { id: 'new', imageFN: 'MainNew', helpText: 'Clear the molecular structure.', mnemonic: '' },\n    { id: 'inline', imageFN: 'AtomInline', helpText: 'Make selected atoms into an inline abbreviation.', mnemonic: '/' },\n    { id: 'formula', imageFN: 'AtomFormula', helpText: 'Make selected atoms into their molecule formula.', mnemonic: '\\\\' },\n    { id: 'expandabbrev', imageFN: 'AtomExpandAbbrev', helpText: 'Expand out the inline abbreviation.', mnemonic: 'Shift+/', key: '?' },\n    { id: 'clearabbrev', imageFN: 'AtomClearAbbrev', helpText: 'Remove inline abbreviation.', mnemonic: 'Shift+\\\\', key: '|' },\n];\nconst COMMANDS_MOVE = [\n    { id: 'up', imageFN: 'MoveUp', helpText: 'Move subject atoms up slightly.', mnemonic: 'Shift+Up', key: \"ArrowUp\" },\n    { id: 'down', imageFN: 'MoveDown', helpText: 'Move subject atoms down slightly.', mnemonic: 'Shift+Down', key: \"ArrowDown\" },\n    { id: 'left', imageFN: 'MoveLeft', helpText: 'Move subject atoms slightly to the left.', mnemonic: 'Shift+Left', key: \"ArrowLeft\" },\n    { id: 'right', imageFN: 'MoveRight', helpText: 'Move subject atoms slightly to the right.', mnemonic: 'Shift+Right', key: \"ArrowRight\" },\n    { id: 'uplots', imageFN: 'MoveUpLots', helpText: 'Move subject atoms up somewhat.', mnemonic: '' },\n    { id: 'downlots', imageFN: 'MoveDownLots', helpText: 'Move subject atoms down somewhat.', mnemonic: '' },\n    { id: 'leftlots', imageFN: 'MoveLeftLots', helpText: 'Move subject atoms somewhat to the left.', mnemonic: '' },\n    { id: 'rightlots', imageFN: 'MoveRightLots', helpText: 'Move subject atoms somewhat to the right.', mnemonic: '' },\n    { id: 'upfar', imageFN: 'MoveUpFar', helpText: 'Move subject atoms far up.', mnemonic: '' },\n    { id: 'downfar', imageFN: 'MoveDownFar', helpText: 'Move subject atoms far down.', mnemonic: '' },\n    { id: 'leftfar', imageFN: 'MoveLeftFar', helpText: 'Move subject atoms far to the left.', mnemonic: '' },\n    { id: 'rightfar', imageFN: 'MoveRightFar', helpText: 'Move subject atoms far to the right.', mnemonic: '' },\n    { id: 'rotp01', imageFN: 'MoveRotP01', helpText: 'Rotate 1\\u00B0 counter-clockwise.', mnemonic: '' },\n    { id: 'rotm01', imageFN: 'MoveRotM01', helpText: 'Rotate 1\\u00B0 clockwise.', mnemonic: '' },\n    { id: 'rotp05', imageFN: 'MoveRotP05', helpText: 'Rotate 5\\u00B0 counter-clockwise.', mnemonic: '' },\n    { id: 'rotm05', imageFN: 'MoveRotM05', helpText: 'Rotate 5\\u00B0 clockwise.', mnemonic: '' },\n    { id: 'rotp15', imageFN: 'MoveRotP15', helpText: 'Rotate 15\\u00B0 counter-clockwise.', mnemonic: '' },\n    { id: 'rotm15', imageFN: 'MoveRotM15', helpText: 'Rotate 15\\u00B0 clockwise.', mnemonic: '' },\n    { id: 'rotp30', imageFN: 'MoveRotP30', helpText: 'Rotate 30\\u00B0 counter-clockwise.', mnemonic: 'Shift+[', key: '{' },\n    { id: 'rotm30', imageFN: 'MoveRotM30', helpText: 'Rotate 30\\u00B0 clockwise.', mnemonic: 'Shift+]', key: '}' },\n    { id: 'hflip', imageFN: 'MoveHFlip', helpText: 'Flip subject atoms horizontally.', mnemonic: 'Shift+,', key: '<' },\n    { id: 'vflip', imageFN: 'MoveVFlip', helpText: 'Flip subject atoms vertically.', mnemonic: 'Shift+.', key: '>' },\n    { id: 'shrink', imageFN: 'MoveShrink', helpText: 'Decrease subject bond distances.', mnemonic: 'Shift+Z' },\n    { id: 'grow', imageFN: 'MoveGrow', helpText: 'Increase subject bond distances.', mnemonic: 'Shift+X' },\n];\nexport class CommandBank extends ButtonBank {\n    constructor(owner, cmdType = CommandType.Main) {\n        super();\n        this.owner = owner;\n        this.cmdType = cmdType;\n    }\n    update() {\n        if (this.cmdType == CommandType.Main)\n            for (let btn of COMMANDS_MAIN)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Atom)\n            for (let btn of COMMANDS_ATOM)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Bond)\n            for (let btn of COMMANDS_BOND)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Select)\n            for (let btn of COMMANDS_SELECT)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Move)\n            for (let btn of COMMANDS_MOVE)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Abbrev)\n            this.populateElements(ELEMENTS_ABBREV);\n        else if (this.cmdType == CommandType.SBlock)\n            this.populateElements(ELEMENTS_S_BLOCK);\n        else if (this.cmdType == CommandType.PBlock)\n            this.populateElements(ELEMENTS_P_BLOCK);\n        else if (this.cmdType == CommandType.DBlock)\n            this.populateElements(ELEMENTS_D_BLOCK);\n        else if (this.cmdType == CommandType.FBlock)\n            this.populateElements(ELEMENTS_F_BLOCK);\n        else if (this.cmdType == CommandType.Noble)\n            this.populateElements(ELEMENTS_NOBLE);\n    }\n    populateElements(elements) {\n        for (let el of elements) {\n            this.buttons.push({ id: `element:${el}`, text: el, helpText: `Change elements to ${el}.` });\n        }\n    }\n    hitButton(id) {\n        let actv = 0, param = null;\n        if (id.startsWith('element:')) {\n            let el = id.substring(8);\n            actv = ActivityType.Element;\n            param = { element: el };\n        }\n        else if (id == 'delete')\n            actv = ActivityType.Delete;\n        else if (id == 'undo') {\n            if (this.owner.canUndo())\n                this.owner.performUndo();\n            else\n                this.owner.showMessage('Nothing to undo.');\n        }\n        else if (id == 'redo') {\n            if (this.owner.canRedo())\n                this.owner.performRedo();\n            else\n                this.owner.showMessage('Nothing to redo.');\n        }\n        else if (id == 'cut')\n            actv = ActivityType.Cut;\n        else if (id == 'copy')\n            actv = ActivityType.Copy;\n        else if (id == 'paste')\n            this.owner.performPaste();\n        else if (id == 'new')\n            actv = ActivityType.Clear;\n        else if (id == 'zoomfit')\n            this.owner.autoScale();\n        else if (id == 'zoomout')\n            this.owner.zoom(0.8);\n        else if (id == 'zoomin')\n            this.owner.zoom(1.25);\n        else if (id == 'selall')\n            actv = ActivityType.SelectAll;\n        else if (id == 'selnone')\n            actv = ActivityType.SelectNone;\n        else if (id == 'selprev')\n            actv = ActivityType.SelectPrevComp;\n        else if (id == 'selnext')\n            actv = ActivityType.SelectNextComp;\n        else if (id == 'selside')\n            actv = ActivityType.SelectSide;\n        else if (id == 'plus') {\n            actv = ActivityType.Charge;\n            param = { delta: 1 };\n        }\n        else if (id == 'minus') {\n            actv = ActivityType.Charge;\n            param = { delta: -1 };\n        }\n        else if (id == 'one') {\n            actv = ActivityType.BondOrder;\n            param = { order: 1 };\n        }\n        else if (id == 'two') {\n            actv = ActivityType.BondOrder;\n            param = { order: 2 };\n        }\n        else if (id == 'three') {\n            actv = ActivityType.BondOrder;\n            param = { order: 3 };\n        }\n        else if (id == 'four') {\n            actv = ActivityType.BondOrder;\n            param = { order: 4 };\n        }\n        else if (id == 'zero') {\n            actv = ActivityType.BondOrder;\n            param = { order: 0 };\n        }\n        else if (id == 'inclined') {\n            actv = ActivityType.BondType;\n            param = { type: Molecule.BONDTYPE_INCLINED };\n        }\n        else if (id == 'declined') {\n            actv = ActivityType.BondType;\n            param = { type: Molecule.BONDTYPE_DECLINED };\n        }\n        else if (id == 'squig') {\n            actv = ActivityType.BondType;\n            param = { type: Molecule.BONDTYPE_UNKNOWN };\n        }\n        else if (id == 'linear') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Linear };\n        }\n        else if (id == 'trigonal') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Trigonal };\n        }\n        else if (id == 'tetra1') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Tetra1 };\n        }\n        else if (id == 'tetra2') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Tetra2 };\n        }\n        else if (id == 'sqplan') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.SqPlan };\n        }\n        else if (id == 'octa1') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Octa1 };\n        }\n        else if (id == 'octa2') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Octa2 };\n        }\n        else if (id == 'switch')\n            actv = ActivityType.BondSwitch;\n        else if (id == 'rotate')\n            actv = ActivityType.BondRotate;\n        else if (id == 'connect')\n            actv = ActivityType.Connect;\n        else if (id == 'disconnect')\n            actv = ActivityType.Disconnect;\n        else if (id == 'metalligate')\n            actv = ActivityType.MetalLigate;\n        else if (id == 'artifactpath')\n            actv = ActivityType.BondArtifactPath;\n        else if (id == 'artifactring')\n            actv = ActivityType.BondArtifactRing;\n        else if (id == 'artifactarene')\n            actv = ActivityType.BondArtifactArene;\n        else if (id == 'artifactclear')\n            actv = ActivityType.BondArtifactClear;\n        else if (id == 'polymer')\n            actv = ActivityType.PolymerBlock;\n        else if (id == 'addtwo')\n            actv = ActivityType.BondAddTwo;\n        else if (id == 'insert')\n            actv = ActivityType.BondInsert;\n        else if (id == 'curelement')\n            actv = ActivityType.SelectCurElement;\n        else if (id == 'selgrow')\n            actv = ActivityType.SelectGrow;\n        else if (id == 'selshrink')\n            actv = ActivityType.SelectShrink;\n        else if (id == 'selprev')\n            actv = ActivityType.SelectPrevComp;\n        else if (id == 'selnext')\n            actv = ActivityType.SelectNextComp;\n        else if (id == 'selchain')\n            actv = ActivityType.SelectChain;\n        else if (id == 'smallring')\n            actv = ActivityType.SelectSmRing;\n        else if (id == 'ringblock')\n            actv = ActivityType.SelectRingBlk;\n        else if (id == 'toggle')\n            actv = ActivityType.SelectToggle;\n        else if (id == 'uncurrent')\n            actv = ActivityType.SelectUnCurrent;\n        else if (id == 'join')\n            actv = ActivityType.Join;\n        else if (id == 'inline')\n            actv = ActivityType.AbbrevGroup;\n        else if (id == 'formula')\n            actv = ActivityType.AbbrevFormula;\n        else if (id == 'clearabbrev')\n            actv = ActivityType.AbbrevClear;\n        else if (id == 'expandabbrev')\n            actv = ActivityType.AbbrevExpand;\n        else if (id == 'up') {\n            actv = ActivityType.Nudge;\n            param = { dir: 'up' };\n        }\n        else if (id == 'down') {\n            actv = ActivityType.Nudge;\n            param = { dir: 'down' };\n        }\n        else if (id == 'left') {\n            actv = ActivityType.Nudge;\n            param = { dir: 'left' };\n        }\n        else if (id == 'right') {\n            actv = ActivityType.Nudge;\n            param = { dir: 'right' };\n        }\n        else if (id == 'uplots') {\n            actv = ActivityType.NudgeLots;\n            param = { dir: 'up' };\n        }\n        else if (id == 'downlots') {\n            actv = ActivityType.NudgeLots;\n            param = { dir: 'down' };\n        }\n        else if (id == 'leftlots') {\n            actv = ActivityType.NudgeLots;\n            param = { dir: 'left' };\n        }\n        else if (id == 'rightlots') {\n            actv = ActivityType.NudgeLots;\n            param = { dir: 'right' };\n        }\n        else if (id == 'upfar') {\n            actv = ActivityType.NudgeFar;\n            param = { dir: 'up' };\n        }\n        else if (id == 'downfar') {\n            actv = ActivityType.NudgeFar;\n            param = { dir: 'down' };\n        }\n        else if (id == 'leftfar') {\n            actv = ActivityType.NudgeFar;\n            param = { dir: 'left' };\n        }\n        else if (id == 'rightfar') {\n            actv = ActivityType.NudgeFar;\n            param = { dir: 'right' };\n        }\n        else if (id == 'rotp01') {\n            actv = ActivityType.Rotate;\n            param = { theta: 1 };\n        }\n        else if (id == 'rotm01') {\n            actv = ActivityType.Rotate;\n            param = { theta: -1 };\n        }\n        else if (id == 'rotp05') {\n            actv = ActivityType.Rotate;\n            param = { theta: 5 };\n        }\n        else if (id == 'rotm05') {\n            actv = ActivityType.Rotate;\n            param = { theta: -5 };\n        }\n        else if (id == 'rotp15') {\n            actv = ActivityType.Rotate;\n            param = { theta: 15 };\n        }\n        else if (id == 'rotm15') {\n            actv = ActivityType.Rotate;\n            param = { theta: -15 };\n        }\n        else if (id == 'rotp30') {\n            actv = ActivityType.Rotate;\n            param = { theta: 30 };\n        }\n        else if (id == 'rotm30') {\n            actv = ActivityType.Rotate;\n            param = { theta: -30 };\n        }\n        else if (id == 'hflip') {\n            actv = ActivityType.Flip;\n            param = { axis: 'hor' };\n        }\n        else if (id == 'vflip') {\n            actv = ActivityType.Flip;\n            param = { axis: 'ver' };\n        }\n        else if (id == 'shrink') {\n            actv = ActivityType.Scale;\n            param = { mag: 1 / 1.1 };\n        }\n        else if (id == 'grow') {\n            actv = ActivityType.Scale;\n            param = { mag: 1.1 };\n        }\n        else if (id == 'bondQAny')\n            actv = ActivityType.QueryBondAny;\n        else if (id == 'atom')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Atom));\n        else if (id == 'bond')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Bond));\n        else if (id == 'select')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Select));\n        else if (id == 'move')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Move));\n        else if (id == 'abbrev')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Abbrev));\n        else if (id == 'sblock')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.SBlock));\n        else if (id == 'pblock')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.PBlock));\n        else if (id == 'dblock')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.DBlock));\n        else if (id == 'fblock')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.FBlock));\n        else if (id == 'noble')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Noble));\n        else\n            alert('Unhandled command: \"' + id + '\"');\n        if (actv > 0) {\n            new MoleculeActivity(this.owner.getState(), actv, param, this.owner).execute();\n        }\n    }\n    claimKey(event) {\n        for (let listItems of [COMMANDS_MAIN, COMMANDS_ATOM, COMMANDS_BOND, COMMANDS_SELECT, COMMANDS_MOVE])\n            for (let item of listItems) {\n                if (ButtonBank.matchKey(event, item.mnemonic, item.key)) {\n                    this.hitButton(item.id);\n                    return true;\n                }\n            }\n        return false;\n    }\n}\n//# sourceMappingURL=CommandBank.js.map","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainRedo.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainExport.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3604\\\">\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.25098041;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3606\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.1254902;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3608\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective23\\\" />\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(0,0)\\\"\\n       id=\\\"pattern5043\\\">\\n      <rect\\n         id=\\\"rect5041\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <path\\n         id=\\\"path5039\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5037\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5035\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5033\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    </pattern>\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(18.5,-71.5)\\\"\\n       id=\\\"pattern5062\\\">\\n      <path\\n         id=\\\"path5060\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5058\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5056\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5054\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5052\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <rect\\n         id=\\\"rect5050\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n      <path\\n         id=\\\"path5000\\\"\\n         d=\\\"M 1.5,11.5 L 11.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5030\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n    </pattern>\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3604\\\"\\n       id=\\\"radialGradient3610\\\"\\n       cx=\\\"210\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"210\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"152.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(1.0491803,-0.78688524,0.78096126,1.0412817,-119.66246,159.46646)\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.2586836\\\"\\n     inkscape:cx=\\\"16.170725\\\"\\n     inkscape:cy=\\\"164.16609\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1716\\\"\\n     inkscape:window-height=\\\"1116\\\"\\n     inkscape:window-x=\\\"144\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3600\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:url(#radialGradient3610);fill-opacity:1;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       id=\\\"path3602\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"160\\\"\\n       sodipodi:rx=\\\"150\\\"\\n       sodipodi:ry=\\\"150\\\"\\n       d=\\\"m 310,160 a 150,150 0 1 1 -300,0 150,150 0 1 1 300,0 z\\\"\\n       transform=\\\"matrix(0.93333333,0,0,0.93333333,10.666666,10.666666)\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 124.537,12.690252 90,50 -90,49.999998 0,-12.8125 c -20.29664,12.07637 -33.75,34.2109 -33.75,59.78125 0,38.68907 30.81093,69.5 69.5,69.5 38.68907,0 69.53125,-30.81093 69.53125,-69.5 -0.0934,-6.60391 2.559,-13.20451 7.196,-17.90755 4.637,-4.70304 11.19944,-7.4485 17.804,-7.4485 6.60457,0 13.16701,2.74546 17.804,7.4485 4.637,4.70304 7.2894,11.30364 7.196,17.90755 0,65.71107 -53.82018,119.5 -119.53125,119.5 -65.71107,0 -119.5,-53.78892 -119.5,-119.5 0,-53.27576 35.34828,-98.733461 83.75,-114.031248 l 0,-32.9375 z\\\"\\n       id=\\\"path3612\\\"\\n       sodipodi:nodetypes=\\\"ccccsscssscsscc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainZoomIn.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"C:\\\\work\\\\eclipse\\\\MMDS\\\\scratch\\\\msk\\\\MainZoomIn.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective3766\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"184.61711\\\"\\n     inkscape:cy=\\\"128.35938\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3768\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       transform=\\\"translate(62.703026,241.98783)\\\"\\n       id=\\\"g3444\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3446\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char51\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3448\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(92.31631,241.98783)\\\"\\n       id=\\\"g3450\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3452\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char46\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3454\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,211.98783)\\\"\\n       id=\\\"g3456\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3458\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3460\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,271.98783)\\\"\\n       id=\\\"g3462\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3464\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3466\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(243.63564,271.98783)\\\"\\n       id=\\\"g3468\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3470\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char38\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3472\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n        <use\\n           xlink:href=\\\"#char69\\\"\\n           x=\\\"1227\\\"\\n           id=\\\"use3474\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(208.2958,247.96859)\\\"\\n       id=\\\"g3476\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3478\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3480\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(215.2958,204.00707)\\\"\\n       id=\\\"g3482\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3484\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3486\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(275.2958,204.00707)\\\"\\n       id=\\\"g3488\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3490\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3492\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(283.2958,243.96859)\\\"\\n       id=\\\"g3494\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3496\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3498\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(102.68629,241.50525)\\\"\\n       id=\\\"g3500\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3502\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3504\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(112.65748,242.7117)\\\"\\n       id=\\\"g3506\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(2.9296875e-3,-2.9296875e-3)\\\"\\n         id=\\\"g3508\\\"\\n         style=\\\"stroke-width:1635.328;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char18\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3510\\\"\\n           style=\\\"fill:#000000;stroke-width:1635.328;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:4.791;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 159.9337,7.3957969 c -1.22836,0.017783 -2.44251,0.5361707 -3.31003,1.4132395 L 127.99649,37.675208 c -1.32116,1.336065 -1.7593,3.488685 -1.0437,5.231992 0.71562,1.743309 2.54225,2.973143 4.41336,2.976825 l 23.85599,0 0,32.594718 c -19.03094,1.043649 -36.29578,8.792862 -49.59062,20.927974 L 81.596615,75.50192 98.593999,58.603182 c 1.337912,-1.329214 1.784181,-3.508978 1.073521,-5.262062 -0.710656,-1.753085 -2.535151,-2.973199 -4.413356,-2.976825 l -40.46571,-0.270619 c -0.158907,-0.0079 -0.318211,-0.0079 -0.477119,0 -2.335535,0.221972 -4.319354,2.415492 -4.323896,4.780958 l -0.298201,40.803535 c -0.01994,1.896771 1.188724,3.743885 2.922358,4.480271 1.733635,0.73639 3.886482,0.31711 5.218495,-1.022343 L 74.797659,82.237359 98.922018,106.26244 c -11.630556,13.42652 -19.014244,30.73454 -19.949562,49.73401 l -33.487834,0 0,-24.05515 c 9.54e-4,-2.56989 -2.372929,-4.89108 -4.920297,-4.81103 -1.198278,0.0406 -2.374437,0.55669 -3.220558,1.41324 L 8.7165889,157.40968 c -1.7614043,1.78077 -1.7614043,5.01481 0,6.79558 l 28.6271781,28.86618 c 1.325004,1.33218 3.4598,1.77398 5.188676,1.0524 1.728876,-0.72158 2.948527,-2.56345 2.952179,-4.4502 l 0,-24.05515 33.607114,0 c 1.240981,18.80865 8.766006,35.88989 20.486319,49.10257 L 76.169379,238.65594 59.171991,221.75718 c -1.335156,-1.31903 -3.467046,-1.72624 -5.188676,-0.99227 -1.72163,0.73398 -2.930541,2.56544 -2.922358,4.4502 l 0.26838,40.83362 c 0.01573,2.5291 2.322811,4.81236 4.830836,4.78095 l 40.465711,-0.30069 c 1.873236,-0.0154 3.680176,-1.25616 4.383526,-3.00689 0.70337,-1.75074 0.26095,-3.90631 -1.073508,-5.232 L 82.968334,245.39136 106.3472,221.48657 c 13.35681,11.91347 30.59938,19.44988 49.56079,20.32659 l 0,32.38424 -23.85597,0 c -1.87113,0.004 -3.69775,1.23352 -4.41337,2.97683 -0.71561,1.7433 -0.27746,3.89593 1.0437,5.23198 l 28.62718,28.86618 c 1.76603,1.7761 4.97329,1.7761 6.73932,0 l 28.62718,-28.86618 c 1.32117,-1.33605 1.75932,-3.48868 1.0437,-5.23198 -0.71562,-1.74331 -2.54224,-2.97314 -4.41336,-2.97683 l -23.85599,0 0,-32.50452 c 18.91988,-1.36942 36.01699,-9.38124 49.11351,-21.70975 l 23.67706,25.97954 -16.99739,16.89874 c -1.33789,1.32921 -1.78418,3.50897 -1.07351,5.26207 0.71065,1.75307 2.53515,2.97319 4.41336,2.97682 l 40.4657,0.27062 c 2.49814,0.0155 4.7852,-2.26196 4.80102,-4.78097 l 0.29821,-40.80352 c 0.009,-1.88477 -1.20074,-3.71624 -2.92237,-4.45021 -1.72162,-0.73397 -3.85353,-0.32678 -5.18866,0.99227 l -16.9974,16.89875 -23.8858,-26.19004 c 11.5936,-13.79235 18.76194,-31.49959 19.23388,-50.87663 l 34.11406,0 0,24.05514 c -0.008,1.89176 1.19113,3.72124 2.92236,4.45021 1.73125,0.72896 3.88998,0.31342 5.21849,-1.02234 l 28.62718,-28.86617 c 1.77918,-1.78291 1.77918,-5.04275 0,-6.82565 L 282.6429,125.08559 c -0.90259,-0.91262 -2.1811,-1.43496 -3.45912,-1.41325 -2.46815,0.047 -4.68191,2.32184 -4.68173,4.81103 l 0,24.05515 -34.44207,0 c -1.6396,-17.98221 -9.04936,-34.27895 -20.33723,-46.99774 l 23.40868,-24.536247 16.99739,16.898738 c 1.33515,1.319049 3.46704,1.726245 5.18867,0.992274 1.72162,-0.73397 2.93055,-2.565432 2.92236,-4.4502 L 267.97148,53.61174 c -0.0313,-2.519034 -2.33266,-4.782323 -4.83084,-4.750891 l -40.46571,0.270621 c -1.87323,0.01535 -3.68017,1.256162 -4.38354,3.006893 -0.70337,1.750731 -0.26095,3.906314 1.07352,5.231992 L 236.36229,74.269093 212.95361,98.7452 C 199.918,87.125675 183.17867,79.683488 164.76453,78.508812 l 0,-32.624787 23.85598,0 c 1.87112,-0.0037 3.69774,-1.233516 4.41336,-2.976825 0.71561,-1.743307 0.27747,-3.895927 -1.0437,-5.231992 L 163.36299,8.8090364 C 162.46736,7.9036606 161.20183,7.3821292 159.9337,7.3957969 z m -0.29821,90.1767151 c 37.68702,2.849578 62.29024,31.065418 61.69754,62.543368 -0.66052,35.07958 -25.42255,62.86092 -61.69754,62.54337 -33.68472,-0.29486 -64.464992,-23.49428 -63.576187,-62.54337 0.890095,-39.10566 27.382967,-61.739358 63.576187,-62.543368 z\\\"\\n       id=\\\"path4847\\\"\\n       sodipodi:nodetypes=\\\"cccsccccccscccccsccccccsccccsccccccsccccsccccccsccccsccccccsccccsccccccsccccsccccccsccccsccccccsccccsssc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainZoomOut.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"C:\\\\work\\\\eclipse\\\\MMDS\\\\scratch\\\\msk\\\\MainZoomOut.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective3832\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"154.5481\\\"\\n     inkscape:cy=\\\"146.35603\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3854\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       transform=\\\"translate(62.703026,241.98783)\\\"\\n       id=\\\"g3444\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3446\\\">\\n        <use\\n           xlink:href=\\\"#char51\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3448\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(92.31631,241.98783)\\\"\\n       id=\\\"g3450\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3452\\\">\\n        <use\\n           xlink:href=\\\"#char46\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3454\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,211.98783)\\\"\\n       id=\\\"g3456\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3458\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3460\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,271.98783)\\\"\\n       id=\\\"g3462\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3464\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3466\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(243.63564,271.98783)\\\"\\n       id=\\\"g3468\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3470\\\">\\n        <use\\n           xlink:href=\\\"#char38\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3472\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n        <use\\n           xlink:href=\\\"#char69\\\"\\n           x=\\\"1227\\\"\\n           id=\\\"use3474\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(208.2958,247.96859)\\\"\\n       id=\\\"g3476\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3478\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3480\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(215.2958,204.00707)\\\"\\n       id=\\\"g3482\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3484\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3486\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(275.2958,204.00707)\\\"\\n       id=\\\"g3488\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3490\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3492\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(283.2958,243.96859)\\\"\\n       id=\\\"g3494\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3496\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3498\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(102.68629,241.50525)\\\"\\n       id=\\\"g3500\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3502\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3504\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(112.65748,242.7117)\\\"\\n       id=\\\"g3506\\\">\\n      <g\\n         transform=\\\"scale(2.9296875e-3,-2.9296875e-3)\\\"\\n         id=\\\"g3508\\\">\\n        <use\\n           xlink:href=\\\"#char18\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3510\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:5;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 159.25 10 C 77.278938 10 10.71875 76.943918 10.71875 159.21875 C 10.71875 241.49357 77.278938 308.40625 159.25 308.40625 C 241.22106 308.40625 307.84375 241.49357 307.84375 159.21875 C 307.84375 76.943918 241.22106 10 159.25 10 z M 155.875 27.59375 C 155.91666 27.592693 155.95833 27.594768 156 27.59375 L 156 61.4375 L 131 61.4375 C 129.03915 61.4413 127.12493 62.719466 126.375 64.53125 C 125.62507 66.343035 126.08423 68.580206 127.46875 69.96875 L 157.46875 99.96875 C 159.32168 101.83325 162.70957 101.83325 164.5625 99.96875 L 194.5625 69.96875 C 195.95072 68.576522 196.3826 66.314253 195.625 64.5 C 194.8674 62.685746 192.96606 61.429035 191 61.4375 L 166 61.4375 L 166 27.71875 C 233.43435 31.142779 287.33666 85.620853 290.1875 153.5625 L 258.4375 153.5625 L 258.4375 128.5625 C 258.4385 125.89168 255.95078 123.47931 253.28125 123.5625 C 252.02551 123.6047 250.79295 124.14106 249.90625 125.03125 L 219.90625 155.03125 C 218.06038 156.88197 218.06038 160.24303 219.90625 162.09375 L 249.90625 192.09375 C 251.29479 193.47827 253.53196 193.93743 255.34375 193.1875 C 257.15553 192.43757 258.43367 190.52335 258.4375 188.5625 L 258.4375 163.5625 L 290.25 163.5625 C 288.03607 232.42829 233.36911 287.73364 165.0625 290.71875 L 165.0625 260 L 190.0625 260 C 192.03598 260.009 193.96634 258.73069 194.71875 256.90625 C 195.47117 255.08181 194.99955 252.82257 193.59375 251.4375 L 163.59375 221.4375 C 162.64999 220.50778 161.3246 219.97762 160 220 C 158.71699 220.0103 157.44542 220.53722 156.53125 221.4375 L 126.53125 251.4375 C 125.12545 252.82257 124.65383 255.08181 125.40625 256.90625 C 126.15866 258.73069 128.08902 260.00857 130.0625 260 L 155.0625 260 L 155.0625 290.78125 C 86.483864 288.62253 31.34883 233.7369 28.40625 165 L 62.15625 165 L 62.15625 190 C 62.16005 191.96085 63.438216 193.84382 65.25 194.59375 C 67.061785 195.34368 69.298956 194.91577 70.6875 193.53125 L 100.6875 163.53125 C 102.53337 161.68053 102.53337 158.31947 100.6875 156.46875 L 70.6875 126.46875 C 69.741627 125.52028 68.401813 124.97743 67.0625 125 C 64.475993 125.0488 62.156049 127.41303 62.15625 130 L 62.15625 155 L 28.34375 155 C 30.519811 85.260706 86.399976 29.356768 155.875 27.59375 z \\\"\\n       id=\\\"path4847\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainZoomFit.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"C:\\\\work\\\\eclipse\\\\MMDS\\\\scratch\\\\msk\\\\MainZoomFit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective60\\\" />\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(0,0)\\\"\\n       id=\\\"pattern5043\\\">\\n      <rect\\n         id=\\\"rect5041\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <path\\n         id=\\\"path5039\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5037\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5035\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5033\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    </pattern>\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(18.5,-71.5)\\\"\\n       id=\\\"pattern5062\\\">\\n      <path\\n         id=\\\"path5060\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5058\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5056\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5054\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5052\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <rect\\n         id=\\\"rect5050\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n      <path\\n         id=\\\"path5000\\\"\\n         d=\\\"M 1.5,11.5 L 11.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5030\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n    </pattern>\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"282.47425\\\"\\n     inkscape:cy=\\\"140.55244\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1478\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"166\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       transform=\\\"translate(62.703026,241.98783)\\\"\\n       id=\\\"g3444\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3446\\\">\\n        <use\\n           xlink:href=\\\"#char51\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3448\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(92.31631,241.98783)\\\"\\n       id=\\\"g3450\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3452\\\">\\n        <use\\n           xlink:href=\\\"#char46\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3454\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,211.98783)\\\"\\n       id=\\\"g3456\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3458\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3460\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,271.98783)\\\"\\n       id=\\\"g3462\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3464\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3466\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(243.63564,271.98783)\\\"\\n       id=\\\"g3468\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3470\\\">\\n        <use\\n           xlink:href=\\\"#char38\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3472\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n        <use\\n           xlink:href=\\\"#char69\\\"\\n           x=\\\"1227\\\"\\n           id=\\\"use3474\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(208.2958,247.96859)\\\"\\n       id=\\\"g3476\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3478\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3480\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(215.2958,204.00707)\\\"\\n       id=\\\"g3482\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3484\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3486\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(275.2958,204.00707)\\\"\\n       id=\\\"g3488\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3490\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3492\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(283.2958,243.96859)\\\"\\n       id=\\\"g3494\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3496\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3498\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(102.68629,241.50525)\\\"\\n       id=\\\"g3500\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3502\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3504\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(112.65748,242.7117)\\\"\\n       id=\\\"g3506\\\">\\n      <g\\n         transform=\\\"scale(2.9296875e-3,-2.9296875e-3)\\\"\\n         id=\\\"g3508\\\">\\n        <use\\n           xlink:href=\\\"#char18\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3510\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#dddddd;fill-opacity:0.5;stroke:#000000;stroke-width:10.00008255000000000;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path4971\\\"\\n       sodipodi:cx=\\\"157.5\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"148.21428\\\"\\n       sodipodi:ry=\\\"147.5\\\"\\n       d=\\\"M 305.71428 158.92857 A 148.21428 147.5 0 1 1  9.2857208,158.92857 A 148.21428 147.5 0 1 1  305.71428 158.92857 z\\\"\\n       transform=\\\"matrix(0.8709386,0,0,0.8950109,23.61288,16.185766)\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:10.44176006px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       id=\\\"text4835\\\">\\n      <path\\n         d=\\\"m 70.985713,183.23596 11.216734,0 0,-38.71472 L 70,146.96852 l 0,-6.25418 12.134467,-2.44728 6.866001,0 0,44.9689 11.216732,0 0,5.77832 -29.231487,0 0,-5.77832 z\\\"\\n         style=\\\"font-size:69.61173248px\\\"\\n         id=\\\"path4188\\\" />\\n      <path\\n         d=\\\"m 128.80288,142.78774 q -5.30246,0 -7.98768,5.23448 -2.65123,5.20048 -2.65123,15.66943 0,10.43497 2.65123,15.66944 2.68522,5.20049 7.98768,5.20049 5.33644,0 7.98767,-5.20049 2.68522,-5.23447 2.68522,-15.66944 0,-10.46895 -2.68522,-15.66943 -2.65123,-5.23448 -7.98767,-5.23448 z m 0,-5.43842 q 8.53151,0 13.01821,6.76404 4.52068,6.73004 4.52068,19.57829 0,12.81427 -4.52068,19.5783 Q 137.33439,190 128.80288,190 q -8.53152,0 -13.0522,-6.73005 -4.4867,-6.76403 -4.4867,-19.5783 0,-12.84825 4.4867,-19.57829 4.52068,-6.76404 13.0522,-6.76404 z\\\"\\n         style=\\\"font-size:69.61173248px\\\"\\n         id=\\\"path4190\\\" />\\n      <path\\n         d=\\\"m 173.12597,142.78774 q -5.30246,0 -7.98767,5.23448 -2.65123,5.20048 -2.65123,15.66943 0,10.43497 2.65123,15.66944 2.68521,5.20049 7.98767,5.20049 5.33645,0 7.98768,-5.20049 2.68521,-5.23447 2.68521,-15.66944 0,-10.46895 -2.68521,-15.66943 -2.65123,-5.23448 -7.98768,-5.23448 z m 0,-5.43842 q 8.53152,0 13.01821,6.76404 4.52068,6.73004 4.52068,19.57829 0,12.81427 -4.52068,19.5783 Q 181.65749,190 173.12597,190 q -8.53152,0 -13.0522,-6.73005 -4.48669,-6.76403 -4.48669,-19.5783 0,-12.84825 4.48669,-19.57829 4.52068,-6.76404 13.0522,-6.76404 z\\\"\\n         style=\\\"font-size:69.61173248px\\\"\\n         id=\\\"path4192\\\" />\\n      <path\\n         d=\\\"m 245.93277,166.68278 q -2.95713,0 -4.65664,2.51527 -1.66551,2.51527 -1.66551,7.00196 0,4.41872 1.66551,6.96797 1.69951,2.51527 4.65664,2.51527 2.88916,0 4.55468,-2.51527 1.6995,-2.54925 1.6995,-6.96797 0,-4.4527 -1.6995,-6.96797 -1.66552,-2.54926 -4.55468,-2.54926 z m 0,-4.31674 q 5.37044,0 8.53152,3.73891 3.16108,3.73891 3.16108,10.09506 0,6.35615 -3.19507,10.09506 Q 251.26922,190 245.93277,190 q -5.43841,0 -8.59949,-3.70493 -3.16108,-3.73891 -3.16108,-10.09506 0,-6.39014 3.16108,-10.09506 3.19507,-3.73891 8.59949,-3.73891 z m -35.07778,-20.69997 q -2.92315,0 -4.62266,2.54926 -1.66551,2.51526 -1.66551,6.93398 0,4.48669 1.66551,7.00196 1.66552,2.51527 4.62266,2.51527 2.95714,0 4.62265,-2.51527 1.69951,-2.51527 1.69951,-7.00196 0,-4.38473 -1.69951,-6.93398 -1.6995,-2.54926 -4.62265,-2.54926 z m 30.69306,-4.31675 5.43842,0 L 215.23971,190 l -5.43842,0 31.74676,-52.65068 z m -30.69306,0 q 5.37043,0 8.5655,3.73892 3.19507,3.70492 3.19507,10.06107 0,6.42413 -3.19507,10.12905 -3.16108,3.70492 -8.5655,3.70492 -5.40443,0 -8.56551,-3.70492 -3.12709,-3.73891 -3.12709,-10.12905 0,-6.32216 3.16108,-10.06107 3.16108,-3.73892 8.53152,-3.73892 z\\\"\\n         style=\\\"font-size:69.61173248px\\\"\\n         id=\\\"path4194\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path4967\\\"\\n       sodipodi:cx=\\\"157.5\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"148.21428\\\"\\n       sodipodi:ry=\\\"147.5\\\"\\n       d=\\\"M 305.71428 158.92857 A 148.21428 147.5 0 1 1  9.2857208,158.92857 A 148.21428 147.5 0 1 1  305.71428 158.92857 z\\\"\\n       transform=\\\"matrix(0.981039,0,0,1.0003176,5.8435029,-5.0472616e-2)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"SelectionSide.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"199.96541\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 48.664209,245.16396 L 108.91547,160.16396 L 50.664209,75.163966\\\"\\n       id=\\\"path3273\\\"\\n       sodipodi:nodetypes=\\\"ccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:15;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 108.7868,160.70711 L 226.16295,161.41421\\\"\\n       id=\\\"path2170\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 283.22481,77.213358 L 226.68065,159.21336 L 284.22481,241.21336\\\"\\n       id=\\\"path3271\\\"\\n       sodipodi:nodetypes=\\\"ccc\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,165.10228,132.56626)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3243\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.2656501,-1.2656501,0.9968499,0.9968499,-343.98648,267.653)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,-69.132419,130.55198)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,164.75661,294.92979)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3247\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.2656501,-1.2656501,0.9968499,0.9968499,-341.57497,437.10883)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,-69.803983,299.05197)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3245\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.2656501,-1.2656501,0.9968499,0.9968499,-283.31663,352.18587)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,107.42818,214.60137)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,-10.218211,214.29461)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainSelAll.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"189.90735\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 76.36753,113.52483 L 77.074637,213.93399 L 167.5843,264.84567 L 255.97265,210.39845 L 254.55843,117.06036 L 165.46298,53.420751 L 76.36753,113.52483 z \\\"\\n       id=\\\"path3251\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3241\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-248.04603,-85.05335)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,42.797336,11.621703)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3171\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-337.35469,-26.947524)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-46.092499,68.688162)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3243\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-159.19783,-25.889527)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,132.0984,71.516592)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3249\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-336.95273,70.72442)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-45.385389,166.73337)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3247\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-246.2033,123.92331)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,43.58874,218.47348)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3245\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-158.39386,69.713238)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,132.21973,165.31915)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainSelNone.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective14\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"189.90735\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"m 76.36753,113.52483 0.707107,100.40916 88.509663,50.91168 90.38835,-54.44722 -1.41422,-93.33809 -89.09545,-59.639609 -89.09545,56.104079 z\\\"\\n       id=\\\"path3251\\\"\\n       sodipodi:nodetypes=\\\"ccccccc\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,42.797336,11.621703)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-46.092499,68.688162)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,132.0984,71.516592)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-45.385389,166.73337)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,43.58874,218.47348)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,132.21973,165.31915)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MainDelete.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainQuit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"159.5736\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"21\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"opacity:1;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       d=\\\"M 159.65625 30.71875 C 88.093395 30.71875 30 88.487677 30 159.65625 C 30 230.82482 88.093395 288.56252 159.65625 288.5625 C 231.2191 288.5625 289.28125 230.82482 289.28125 159.65625 C 289.28125 88.487677 231.2191 30.71875 159.65625 30.71875 z M 157.84375 72 C 158.59438 71.985792 159.33922 71.994392 160.09375 72 C 176.61399 72.122789 194.05818 77.018142 211.4375 88.5625 L 86.4375 213.5625 C 60.537368 184.56234 69.685666 120.89857 96.4375 96.4375 C 113.21391 82.331272 134.57422 72.440433 157.84375 72 z M 235.53125 110.625 C 261.43138 139.62516 252.28307 203.32017 225.53125 227.78125 C 196.3648 252.30549 153.31112 264.04188 110.53125 235.625 L 235.53125 110.625 z \\\"\\n       id=\\\"path3281\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainCut.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective13\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"2.8284272\\\"\\n     inkscape:cx=\\\"170.6097\\\"\\n     inkscape:cy=\\\"215.55961\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:4.93447638;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 159.84431,4.0536087 c -0.29508,0.00449 -0.58207,0.030042 -0.87522,0.060857 -0.0514,-0.00404 -0.10482,0.00322 -0.15629,0 -0.26793,-0.016729 -0.54407,-0.036361 -0.8127,-0.030428 -2.52061,0.055258 -5.00989,1.1162381 -6.75172,2.8907158 -1.74182,1.7744777 -2.71473,4.2405775 -2.65692,6.6942895 L 149.90429,134.04453 47.472011,85.328366 45.346471,83.624365 c -1.676342,-1.065683 -3.687289,-1.624994 -5.688946,-1.582287 -0.143902,0.003 -0.294356,0.02089 -0.437611,0.03043 -0.397202,-0.03723 -0.78889,-0.04182 -1.187802,-0.03043 -4.295438,0.112766 -8.28419,3.359535 -9.158577,7.455004 -0.874388,4.09547 1.451553,8.636997 5.345108,10.406581 l 0.562644,0.273857 109.840403,68.03832 c 1.67488,1.03918 3.67355,1.56833 5.6577,1.52143 l 0.46886,43.99973 c 0.005,0.64693 0.10661,1.28576 0.25007,1.91701 -8.81541,5.38078 -15.33495,12.77739 -19.41119,21.75644 -5.08278,11.19622 -6.52603,24.62804 -5.15756,39.98316 0.0144,0.14281 0.0352,0.28499 0.0625,0.426 1.83482,10.3447 4.15972,19.71772 9.34612,26.95973 5.16099,7.20651 13.78411,11.64917 24.97511,11.13687 l 0,0.0304 c 18.09365,-0.39567 30.45126,-6.60038 37.25946,-16.7053 6.80821,-10.10493 8.17398,-23.08912 7.65819,-37.0316 -0.007,-0.1017 -0.0175,-0.20319 -0.0312,-0.30428 -1.7739,-18.11192 -9.59128,-28.87305 -18.53596,-35.54059 -6.03478,-4.49844 -12.34072,-7.3741 -17.56696,-10.01101 0.27934,-0.90435 0.41844,-1.85482 0.40635,-2.79942 l -0.53139,-49.32475 46.69938,22.21288 c 0.083,0.0395 0.16586,0.0847 0.25006,0.1217 -3.31001,17.14209 2.79839,30.23586 11.78424,40.2266 0.34773,0.39526 0.76108,0.73572 1.21906,1.00414 11.30221,6.4521 20.79655,6.99911 28.38221,4.41215 7.58567,-2.58696 13.73725,-4.92629 18.81728,-10.68044 6.76902,-5.94633 9.04203,-16.49269 9.90878,-25.01229 0.11784,-10.04709 -5.59112,-21.3058 -20.88032,-28.75502 -0.45188,-0.22178 -0.93854,-0.37626 -1.43786,-0.45643 -6.30082,-1.02286 -12.65323,-2.0926 -18.97357,-1.94743 -2.10678,0.0484 -4.22421,0.23694 -6.3141,0.60857 -4.21959,0.75035 -8.31043,2.4329 -12.00305,5.17287 -0.69153,-0.62747 -1.46297,-1.14863 -2.3131,-1.55187 l -42.94844,-20.41753 c 1.1306,-1.8011 1.65144,-3.95307 1.43786,-6.05529 L 169.94063,12.999613 c -0.20349,-2.429755 -1.39886,-4.7794669 -3.25082,-6.4204317 -1.85197,-1.6409647 -4.34143,-2.5562438 -6.8455,-2.5255726 z m -9.59618,163.9492313 0,0 z m 111.55959,12.82428 c 8.34066,2.98048 12.80146,8.83371 12.7225,15.56559 -0.52192,14.16651 -10.39975,21.02728 -20.03685,22.62502 -4.93943,1.6845 -12.73755,-0.57732 -17.22364,-5.22544 -4.30437,-5.36245 -8.22528,-12.25024 -4.56467,-27.41058 6.00237,-10.50581 21.04796,-10.76963 29.10266,-5.55459 z m -101.33825,50.22103 c 9.69468,-0.0714 19.13216,5.11216 24.59899,13.04553 8.86571,10.18835 10.08761,40.94213 0.62719,47.7922 -10.21171,9.37645 -27.6858,12.97759 -37.42521,3.78947 -3.54224,-4.94619 -6.12245,-9.52873 -7.86958,-19.28591 -2.56041,-21.47176 7.13036,-43.01402 20.06861,-45.34129 z\\\"\\n       id=\\\"path3256\\\"\\n       sodipodi:nodetypes=\\\"cssssccccssssccccccsccsccsccscccccccscccssscccccsccccccccccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainCopy.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective26\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3630\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1\\\"\\n     inkscape:cx=\\\"103.77793\\\"\\n     inkscape:cy=\\\"88.169551\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2832\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:0.5;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 47.647496,250.03858 46.764383,-103.11546 0,-29.46156 -62.352511,0 0,-29.46156 L 110,88 C 94.411879,88 85.058997,73.26922 85.058997,58.538439 c 0,-14.73078 9.352882,-29.46156 24.941003,-29.46156 l 15.58814,0 c 15.58811,0 24.94098,14.73078 24.94098,29.46156 C 150.52912,73.26922 141.17625,88 125.58814,88 l 77.94063,0 0,29.46156 -62.35252,0 0,29.46156 46.76439,103.11546 -37.41152,0 -31.17624,-73.65389 -34.293883,73.65389 -37.411501,0 z\\\"\\n       id=\\\"path3606-1\\\"\\n       sodipodi:nodetypes=\\\"cccccccccccccccccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 148.05936,290.03859 46.76439,-103.11546 0,-29.46157 -62.35252,0 0,-29.46156 77.94063,0 c -15.58811,0 -24.941,-14.73077 -24.941,-29.46156 0,-14.73078 9.35289,-29.46156 24.941,-29.46156 l 15.58814,0 c 15.58811,0 24.941,14.73078 24.941,29.46156 C 250.941,113.26923 241.58811,128 226,128 l 77.94063,0 0,29.46156 -62.35252,0 0,29.46157 46.76439,103.11546 -37.4115,0 -31.17626,-73.6539 -34.29388,73.6539 -37.4115,0 z\\\"\\n       id=\\\"path3606\\\"\\n       sodipodi:nodetypes=\\\"cccccccccccccccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"SelectionPaste.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"174.19811\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#646169;fill-rule:evenodd;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 49.497473,254.94617 C 47.825874,262.83305 36.201583,261.20579 30.405591,265.55278 C 28.322858,267.11483 31.539377,271.49006 29.698484,273.33095 C 26.809794,276.21964 14.54002,280.60096 21.213203,283.93756 C 25.917942,286.28992 18.777684,290.61571 16.970562,292.42284 C 16.407185,292.98621 11.862619,303.34583 10.606601,305.85786 C 8.8718742,309.32732 0.66378058,311.62811 -1.4142135,312.22183 C -5.3815501,313.35535 -6.7727732,317.67427 -2.1213203,320 C 4.7353319,323.42833 10.071931,322.29954 16.970562,320 C 21.596201,318.45812 26.669572,317.77844 31.112698,320 C 36.578588,322.73295 50.364949,320 56.568541,320 C 62.249059,320 67.612413,321.41421 73.539103,321.41421 C 78.147222,321.41421 83.161272,321.90643 86.974132,320 C 87.233912,319.87011 86.176512,316.99055 84.852811,314.34315 C 84.737012,314.11155 86.869217,308.51143 84.852811,305.15076 C 82.266966,300.84102 73.174191,304.07874 70.003569,300.90812 C 68.147372,299.05192 69.987876,293.16133 71.417783,290.30152 C 71.59232,289.95244 65.401454,280.15842 65.053822,279.69491 C 63.028881,276.99499 57.766096,271.20963 63.639609,271.20963 C 66.398433,271.20963 65.234252,265.89903 66.468036,263.43146 C 68.386098,259.59534 68.589356,257.469 68.589356,252.82486 C 68.589356,252.05846 63.356113,251.15582 62.225395,250.70354 C 60.461018,249.99779 62.861998,252.89536 61.518288,254.23907 C 60.546463,255.2109 50.675985,254.23907 49.497473,254.94617 z \\\"\\n       id=\\\"path3196\\\"\\n       sodipodi:nodetypes=\\\"cssssssssssssssssssssssc\\\" />\\n    <path\\n       style=\\\"fill:#c5c2c2;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 53.8295,185.43081 C 48.117551,230.16693 94.90917,267.3379 133.61555,268.32077 C 162.93137,153.99105 110.3127,171.17033 53.8295,185.43081 z \\\"\\n       id=\\\"path3188\\\"\\n       sodipodi:nodetypes=\\\"ccc\\\" />\\n    <path\\n       style=\\\"fill:#fcfbff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 182.96729,2.557079 L 54.035294,186.04372 C 85.905043,179.15842 144.16417,242.05257 133.15455,268.24096 L 321.426,146.40224 C 302.97323,72.703226 258.08103,23.582864 182.96729,2.557079 z \\\"\\n       id=\\\"path3184\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#fcfbff;fill-opacity:1;fill-rule:evenodd;stroke:#030303;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 86.523375,220.41621 L 50.5,255.09065 C 61.048111,255.62428 64.617354,261.18692 64.369775,269.5 L 100.39315,234.82557 C 100.05192,225.90076 96.35526,220.20575 86.523375,220.41621 z \\\"\\n       id=\\\"path3190\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 141.76067,103.45156 L 152.49269,163.67952 L 212.07438,184.96328 L 259.56663,143.19171 L 249.13583,87.282865 L 189.09687,58.210192 L 141.76067,103.45156 z \\\"\\n       id=\\\"path3251\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3277\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,110.7288,43.297737)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,63.614871,89.09596)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,170.91744,72.502614)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,74.104227,147.90424)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,132.84879,169.84315)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,180.61948,128.82311)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainAtom.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainAtom.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2848\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"48.145029\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"597\\\"\\n     inkscape:window-y=\\\"53\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:0.99991798;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path2173\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(3.9083767,0,0,4.4541355,-191.02317,-104.15694)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3146\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(4.1274211,0,0,4.7037667,-170.63132,-160.28246)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3148\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(3.9083767,0,0,4.4541355,-123.67417,-89.452119)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3150\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(4.1274211,0,0,4.7037667,-189.79433,-79.64646)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.5817451;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3152\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(0.5559432,-0.9629219,0.8671851,0.5006696,-82.679852,232.98137)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.58174519;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3160\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(-0.5559432,-0.962922,0.8671851,-0.5006694,98.56249,410.307)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3166\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,177.55034,-16.166303)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3168\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,147.55034,143.8337)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MainBond.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainAtom.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"159.5736\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"479\\\"\\n     inkscape:window-y=\\\"21\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g3182\\\"\\n       transform=\\\"translate(11.909887,59.760501)\\\">\\n      <path\\n         transform=\\\"matrix(2.0292346,0,0,2.3125933,-112.32262,-38.207236)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path2173\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(2.1429628,0,0,2.4422022,-101.73514,-67.347684)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(2.0292346,0,0,2.3125933,-77.354923,-30.572473)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3148\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(2.1429628,0,0,2.4422022,-111.6846,-25.481361)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3150\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3188\\\"\\n       transform=\\\"translate(-15.161547,-19.009179)\\\">\\n      <path\\n         transform=\\\"matrix(-2.0292346,0,0,2.3125933,428.39405,40.562444)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3174\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(-2.1429628,0,0,2.4422022,417.80657,11.421996)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3176\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(-2.0292346,0,0,2.3125933,393.42635,48.197207)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3178\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(-2.1429628,0,0,2.4422022,427.75603,53.288319)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3180\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.58174515;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3152\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(-1.3630223e-8,-1.1150628,0.8671872,4.2624012e-8,9.4810906,343.88434)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.58174515;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3195\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(0.8308212,-1.0223571e-8,-3.1758687e-8,0.6504479,-60.492046,52.100836)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.58174515;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3197\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(0.8308212,-1.0223571e-8,-3.1758687e-8,0.6504479,107.50794,52.100828)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3168\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,89.896893,-11.387448)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3200\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,-12.449661,159.8337)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3202\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,-74.103107,22.612552)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3204\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,179.55034,179.8337)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MainSelect.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"159.5736\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"21\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:1.89162562, 18.91625616;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       d=\\\"M 30.44335,26.729064 L 30.44335,291.55665 L 295.27094,291.55665 L 295.27094,26.729064 L 30.44335,26.729064 z \\\"\\n       id=\\\"path3343\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;fill-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 89.051436,52.692713 L 80.264142,218.75776 L 136.18329,186.31714 L 190.50474,269.73586 L 246.42389,237.29525 L 192.10243,153.87653 L 248.02157,121.43591 L 89.051436,52.692713 z \\\"\\n       id=\\\"path3345\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MainMove.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainMove.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"198.18854\\\"\\n     inkscape:cy=\\\"129.1885\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"166\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       transform=\\\"translate(62.703026,241.98783)\\\"\\n       id=\\\"g3444\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3446\\\">\\n        <use\\n           xlink:href=\\\"#char51\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3448\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(92.31631,241.98783)\\\"\\n       id=\\\"g3450\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3452\\\">\\n        <use\\n           xlink:href=\\\"#char46\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3454\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,211.98783)\\\"\\n       id=\\\"g3456\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3458\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3460\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,271.98783)\\\"\\n       id=\\\"g3462\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3464\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3466\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(243.63564,271.98783)\\\"\\n       id=\\\"g3468\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3470\\\">\\n        <use\\n           xlink:href=\\\"#char38\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3472\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n        <use\\n           xlink:href=\\\"#char69\\\"\\n           x=\\\"1227\\\"\\n           id=\\\"use3474\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(208.2958,247.96859)\\\"\\n       id=\\\"g3476\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3478\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3480\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(215.2958,204.00707)\\\"\\n       id=\\\"g3482\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3484\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3486\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(275.2958,204.00707)\\\"\\n       id=\\\"g3488\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3490\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3492\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(283.2958,243.96859)\\\"\\n       id=\\\"g3494\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3496\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3498\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(102.68629,241.50525)\\\"\\n       id=\\\"g3500\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3502\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3504\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(112.65748,242.7117)\\\"\\n       id=\\\"g3506\\\">\\n      <g\\n         transform=\\\"scale(2.9296875e-3,-2.9296875e-3)\\\"\\n         id=\\\"g3508\\\">\\n        <use\\n           xlink:href=\\\"#char18\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3510\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;fill-opacity:1\\\"\\n       d=\\\"M 130,130 L 70,130 L 70,100 L 10,160 L 70,220 L 70,190 L 130,190 L 130,250 L 100,250 L 160,310 L 220,250 L 190,250 L 190,190 L 250,190 L 250,220 L 310,160 L 250,100 L 250,130 L 190,130 L 190,70 L 220,70 L 160,10 L 100,70 L 130,70 L 130,130 z \\\"\\n       id=\\\"path4831\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomPlus.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomPlus.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective10\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"-64.472045\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2818\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:8.13591309000000070\\\"\\n       id=\\\"path3758\\\"\\n       sodipodi:cx=\\\"161.07143\\\"\\n       sodipodi:cy=\\\"160.35715\\\"\\n       sodipodi:rx=\\\"149.64285\\\"\\n       sodipodi:ry=\\\"149.64285\\\"\\n       d=\\\"m 310.71428,160.35715 a 149.64285,149.64285 0 1 1 -299.285706,0 149.64285,149.64285 0 1 1 299.285706,0 z\\\"\\n       transform=\\\"matrix(0.60145026,0,0,0.6014321,63.123549,63.556079)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:14.75459385;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 91.367971,160.26223 230.74482,159.73468\\\"\\n       id=\\\"path3754\\\"\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:14.75459385;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"m 160.52478,90.246356 0.53163,138.246984\\\"\\n       id=\\\"path3756\\\"\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomMinus.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomMinus.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective9\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"59.813669\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"467\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2815\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:8.13591309000000070\\\"\\n       id=\\\"path3758\\\"\\n       sodipodi:cx=\\\"161.07143\\\"\\n       sodipodi:cy=\\\"160.35715\\\"\\n       sodipodi:rx=\\\"149.64285\\\"\\n       sodipodi:ry=\\\"149.64285\\\"\\n       d=\\\"m 310.71428,160.35715 a 149.64285,149.64285 0 1 1 -299.285706,0 149.64285,149.64285 0 1 1 299.285706,0 z\\\"\\n       transform=\\\"matrix(0.60591986,0,0,0.60381033,62.403623,63.530598)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:12.95214939;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 96.131868,160.58706 129.596922,-0.4623\\\"\\n       id=\\\"path3754\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomAbbrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 70,181.11523 13.227539,0 16.743164,44.64844 16.831057,-44.64844 13.22754,0 0,65.61036 -8.65723,0 0,-57.61231 -16.91894,45 -8.920903,0 -16.918946,-45 0,57.61231 -8.613281,0 0,-65.61036 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7008\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 109.11328,107.96387 q 2.85645,0.96679 5.53711,4.13086 2.72461,3.16406 5.44922,8.70117 l 9.00879,17.92969 -9.53613,0 -8.39356,-16.83106 q -3.25195,-6.5918 -6.32812,-8.74512 -3.03223,-2.15332 -8.305668,-2.15332 l -9.667969,0 0,27.7295 -8.876953,0 0,-65.610356 20.039062,0 q 11.249998,0 16.787108,4.702149 5.53711,4.702148 5.53711,14.194336 0,6.196289 -2.90039,10.283201 -2.85644,4.08692 -8.34961,5.66895 z m -22.236327,-27.553714 0,23.291014 11.162109,0 q 6.416018,0 9.667968,-2.94433 3.2959,-2.988285 3.2959,-8.745121 0,-5.756836 -3.2959,-8.657227 -3.25195,-2.944336 -9.667968,-2.944336 l -11.162109,0 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7017\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 191.65039,72 9.53613,0 16.30371,24.389648 L 233.88184,72 l 9.53613,0 -21.09375,31.50879 22.5,34.10156 -9.53613,0 -18.45704,-27.90527 -18.58886,27.90527 -9.58008,0 23.42285,-35.02441 L 191.65039,72 Z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7014\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 200,180.38965 8.87695,0 0,58.13965 31.94825,0 0,7.4707 -40.8252,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7011\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomSBlock.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"98.625641\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1447\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 52.876953,215.39258 0,24.03808 14.238281,0 q 7.163086,0 10.590821,-2.94433 3.471679,-2.98828 3.471679,-9.09668 0,-6.15235 -3.471679,-9.05274 -3.427735,-2.94433 -10.590821,-2.94433 l -14.238281,0 z m 0,-26.98242 0,19.77539 13.139649,0 q 6.503906,0 9.667968,-2.417 3.208008,-2.46093 3.208008,-7.4707 0,-4.96582 -3.208008,-7.42676 -3.164062,-2.46093 -9.667968,-2.46093 l -13.139649,0 z M 44,181.11523 l 22.675781,0 q 10.151367,0 15.644531,4.21875 5.493165,4.21875 5.493165,11.99707 0,6.02051 -2.8125,9.58008 -2.8125,3.55957 -8.261719,4.43848 6.547851,1.40625 10.151367,5.88867 3.647461,4.43848 3.647461,11.11817 0,8.78906 -5.976563,13.5791 -5.976562,4.79004 -17.006836,4.79004 l -23.554687,0 0,-65.61036 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6940\\\" />\\n      <path\\n         d=\\\"m 147.44727,220.09473 0,3.95507 -37.17774,0 q 0.52735,8.34961 5.00977,12.74415 4.52636,4.35058 12.56836,4.35058 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42773 l 0,7.64648 q -4.35059,1.84571 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77735,0 -18.67676,-6.85547 -6.85547,-6.85547 -6.85547,-18.54492 0,-12.08496 6.50391,-19.16016 6.54785,-7.11914 17.62207,-7.11914 9.93164,0 15.68847,6.41602 5.80079,6.37207 5.80079,17.3584 z m -8.08594,-2.37305 q -0.0879,-6.63574 -3.73535,-10.59082 -3.60352,-3.95508 -9.58008,-3.95508 -6.76758,0 -10.85449,3.82324 -4.04297,3.82325 -4.65821,10.7666 l 28.82813,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6942\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 64,73.115234 8.876953,0 0,58.139646 31.948247,0 0,7.47071 -40.8252,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6945\\\" />\\n      <path\\n         d=\\\"m 113.74609,89.506836 8.08594,0 0,49.218754 -8.08594,0 0,-49.218754 z m 0,-19.160156 8.08594,0 0,10.239257 -8.08594,0 0,-10.239257 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6947\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 178.81445,72 11.95313,0 29.09179,54.8877 0,-54.8877 8.61329,0 0,65.61035 -11.95313,0 -29.0918,-54.887694 0,54.887694 -8.61328,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6932\\\" />\\n      <path\\n         d=\\\"m 268.15527,112.86914 q -9.7998,0 -13.5791,2.24121 -3.7793,2.24121 -3.7793,7.64649 0,4.30664 2.8125,6.85546 2.85645,2.50489 7.73438,2.50489 6.72363,0 10.7666,-4.7461 4.08692,-4.79004 4.08692,-12.70019 l 0,-1.80176 -8.042,0 z m 16.12793,-3.33984 0,28.08105 -8.08593,0 0,-7.4707 q -2.76856,4.48242 -6.89942,6.63574 -4.13086,2.10938 -10.10742,2.10938 -7.55859,0 -12.04102,-4.21875 -4.43847,-4.2627 -4.43847,-11.38184 0,-8.30566 5.53711,-12.52441 5.58105,-4.21875 16.61132,-4.21875 l 11.3379,0 0,-0.79102 q 0,-5.58105 -3.69141,-8.613281 -3.64746,-3.076172 -10.2832,-3.076172 -4.21875,0 -8.21778,1.010742 -3.99902,1.010742 -7.69043,3.032227 l 0,-7.470704 q 4.43848,-1.713867 8.61328,-2.548828 4.17481,-0.878906 8.12989,-0.878906 10.67871,0 15.95215,5.537109 5.27343,5.53711 5.27343,16.787113 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6934\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 174,184.38965 13.22754,0 16.74316,44.64844 16.83106,-44.64844 13.22754,0 0,65.61035 -8.65723,0 0,-57.6123 -16.91895,45 -8.92089,0 -16.91895,-45 0,57.6123 -8.61328,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6937\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text2248\\\">\\n      <path\\n         d=\\\"m 275.90332,226.09863 q 0,-8.78906 -3.64746,-13.62304 -3.60352,-4.83399 -10.15137,-4.83399 -6.5039,0 -10.15137,4.83399 -3.60351,4.83398 -3.60351,13.62304 0,8.74512 3.60351,13.5791 3.64747,4.83399 10.15137,4.83399 6.54785,0 10.15137,-4.83399 3.64746,-4.83398 3.64746,-13.5791 z m 8.08594,19.07227 q 0,12.56836 -5.58106,18.67676 Q 272.82715,270 261.31348,270 q -4.2627,0 -8.042,-0.65918 -3.77929,-0.61523 -7.33886,-1.93359 l 0,-7.86621 q 3.55957,1.93359 7.03125,2.85644 3.47168,0.92285 7.07519,0.92285 7.9541,0 11.90918,-4.1748 3.95508,-4.13086 3.95508,-12.52442 l 0,-3.99902 q -2.50488,4.35059 -6.41602,6.50391 -3.91113,2.15332 -9.36035,2.15332 -9.05273,0 -14.58984,-6.89942 Q 240,237.48047 240,226.09863 q 0,-11.42578 5.53711,-18.32519 5.53711,-6.89942 14.58984,-6.89942 5.44922,0 9.36035,2.15332 3.91114,2.15332 6.41602,6.50391 l 0,-7.4707 8.08594,0 0,43.11035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6929\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomPBlock.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective18\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 107.33105,183.26855 0,8.65723 q -5.05371,-2.41699 -9.536128,-3.60351 -4.482422,-1.18653 -8.657227,-1.18653 -7.250976,0 -11.206054,2.8125 -3.911133,2.8125 -3.911133,7.99805 0,4.35058 2.592773,6.5918 2.636719,2.19726 9.931641,3.55957 l 5.361328,1.09863 q 9.93164,1.88965 14.63379,6.67969 4.74609,4.74609 4.74609,12.74414 0,9.53613 -6.41601,14.458 Q 98.498047,248 86.149414,248 q -4.658203,0 -9.931641,-1.05469 -5.229492,-1.05469 -10.854492,-3.12011 l 0,-9.14063 q 5.405274,3.03223 10.590821,4.57031 5.185546,1.53809 10.195312,1.53809 7.602539,0 11.733398,-2.98828 4.130858,-2.98828 4.130858,-8.52539 0,-4.83399 -2.988279,-7.5586 -2.944336,-2.72461 -9.711914,-4.08691 l -5.405274,-1.05469 q -9.931641,-1.97754 -14.370117,-6.19629 -4.438477,-4.21875 -4.438477,-11.7334 0,-8.70117 6.108399,-13.71093 6.152344,-5.00977 16.918945,-5.00977 4.614258,0 9.404297,0.83496 4.79004,0.83496 9.7998,2.50488 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6942\\\" />\\n      <path\\n         d=\\\"m 124.77734,197.50684 8.08594,0 0,49.21875 -8.08594,0 0,-49.21875 z m 0,-19.16016 8.08594,0 0,10.23926 -8.08594,0 0,-10.23926 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6944\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 84.876953,107.39258 0,24.03808 14.238281,0 q 7.163086,0 10.590816,-2.94433 3.47168,-2.98828 3.47168,-9.09668 0,-6.15235 -3.47168,-9.05274 -3.42773,-2.94433 -10.590816,-2.94433 l -14.238281,0 z m 0,-26.982424 0,19.775394 13.139649,0 q 6.503908,0 9.667968,-2.416995 3.20801,-2.460938 3.20801,-7.470703 0,-4.965821 -3.20801,-7.426758 -3.16406,-2.460938 -9.667968,-2.460938 l -13.139649,0 z M 76,73.115234 l 22.675781,0 q 10.151369,0 15.644529,4.21875 5.49317,4.21875 5.49317,11.997071 0,6.020507 -2.8125,9.580078 -2.8125,3.559567 -8.26172,4.438477 6.54785,1.40625 10.15137,5.88867 3.64746,4.43848 3.64746,11.11817 0,8.78906 -5.97657,13.5791 -5.97656,4.79004 -17.006833,4.79004 l -23.554687,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6947\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 210.74316,80.745117 -12.04101,32.651363 24.12597,0 -12.08496,-32.651363 z M 205.7334,72 l 10.06347,0 25.00489,65.61035 -9.22852,0 -5.97656,-16.83105 -29.5752,0 -5.97656,16.83105 -9.36035,0 L 205.7334,72 Z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6932\\\" />\\n      <path\\n         d=\\\"m 281.36328,89.841797 0,7.646484 q -3.42773,-1.757812 -7.11914,-2.636719 -3.69141,-0.878906 -7.64648,-0.878906 -6.02051,0 -9.05274,1.845703 -2.98828,1.845703 -2.98828,5.537111 0,2.8125 2.15332,4.43848 2.15332,1.58203 8.65723,3.03222 l 2.76855,0.61524 q 8.61328,1.8457 12.2168,5.22949 3.64746,3.33984 3.64746,9.36035 0,6.85547 -5.44922,10.85449 -5.40527,3.99903 -14.89746,3.99903 -3.95508,0 -8.26172,-0.79102 -4.26269,-0.74707 -9.00879,-2.28516 l 0,-8.34961 q 4.48242,2.32911 8.83301,3.51563 4.35059,1.14258 8.61328,1.14258 5.71289,0 8.78906,-1.9336 3.07618,-1.97754 3.07618,-5.53711 0,-3.29589 -2.24122,-5.05371 -2.19726,-1.75781 -9.71191,-3.38379 l -2.8125,-0.65918 q -7.51465,-1.58203 -10.85449,-4.83398 -3.33985,-3.2959 -3.33985,-9.00879 0,-6.943358 4.92188,-10.722655 4.92187,-3.779297 13.97461,-3.779297 4.48242,0 8.4375,0.65918 3.95508,0.659179 7.29492,1.977539 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6934\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 190.87695,189.68457 0,24.65332 11.16211,0 q 6.19629,0 9.58008,-3.20801 3.38379,-3.20801 3.38379,-9.14062 0,-5.88867 -3.38379,-9.09668 -3.38379,-3.20801 -9.58008,-3.20801 l -11.16211,0 z M 182,182.38965 l 20.03906,0 q 11.03028,0 16.65528,5.00976 5.66894,4.96582 5.66894,14.58985 0,9.71191 -5.66894,14.67773 -5.625,4.96582 -16.65528,4.96582 l -11.16211,0 0,26.36719 -8.87695,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6937\\\" />\\n      <path\\n         d=\\\"m 271.29687,223.43457 q 0,-8.9209 -3.6914,-13.97461 -3.64746,-5.09766 -10.06348,-5.09766 -6.41601,0 -10.10742,5.09766 -3.64746,5.05371 -3.64746,13.97461 0,8.9209 3.64746,14.01855 3.69141,5.05372 10.10742,5.05372 6.41602,0 10.06348,-5.05372 3.6914,-5.09765 3.6914,-14.01855 z m -27.50976,-17.18262 q 2.54883,-4.39453 6.41601,-6.5039 3.91114,-2.15332 9.31641,-2.15332 8.96484,0 14.5459,7.11914 5.625,7.11914 5.625,18.7207 0,11.60156 -5.625,18.7207 -5.58106,7.11914 -14.5459,7.11914 -5.40527,0 -9.31641,-2.10937 -3.86718,-2.15332 -6.41601,-6.54785 l 0,7.38281 -8.12988,0 0,-68.37891 8.12988,0 0,26.63086 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6939\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomDBlock.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 73.413235,217.96387 q 2.856445,0.96679 5.537109,4.13086 2.724609,3.16406 5.449219,8.70117 l 9.008789,17.92969 -9.536133,0 -8.393555,-16.83106 q -3.251953,-6.5918 -6.328125,-8.74512 -3.032226,-2.15332 -8.305664,-2.15332 l -9.667968,0 0,27.7295 -8.876954,0 0,-65.61036 20.039063,0 q 11.25,0 16.787109,4.70215 5.53711,4.70215 5.53711,14.19434 0,6.19629 -2.900391,10.2832 -2.856445,4.08692 -8.349609,5.66895 z m -22.236328,-27.55371 0,23.29101 11.162109,0 q 6.416016,0 9.667969,-2.94433 3.295898,-2.98829 3.295898,-8.74512 0,-5.75684 -3.295898,-8.65723 -3.251953,-2.94433 -9.667969,-2.94433 l -11.162109,0 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6988\\\" />\\n      <path\\n         d=\\\"m 99.648586,229.30176 0,-29.79492 8.085934,0 0,29.4873 q 0,6.98731 2.72461,10.50293 2.72461,3.47168 8.17383,3.47168 6.54785,0 10.32715,-4.1748 3.82324,-4.17481 3.82324,-11.38184 l 0,-27.90527 8.08594,0 0,49.21875 -8.08594,0 0,-7.5586 q -2.94433,4.48242 -6.85547,6.67969 Q 122.0607,250 116.91909,250 q -8.48144,0 -12.87597,-5.27344 -4.394534,-5.27344 -4.394534,-15.4248 z m 20.346684,-30.98145 0,0 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6990\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 48,73.115234 37.705078,0 0,7.470703 -28.828125,0 0,19.335938 26.015625,0 0,7.470705 -26.015625,0 0,31.33301 -8.876953,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7003\\\" />\\n      <path\\n         d=\\\"m 136.68164,112.09473 0,3.95507 -37.177734,0 q 0.527344,8.34961 5.009764,12.74415 4.52637,4.35058 12.56836,4.35058 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42773 l 0,7.64648 q -4.35058,1.84571 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77734,0 -18.676755,-6.85547 -6.855469,-6.85547 -6.855469,-18.54492 0,-12.08496 6.503906,-19.160157 6.547848,-7.119141 17.622068,-7.119141 9.93164,0 15.68848,6.416016 5.80078,6.372072 5.80078,17.358402 z m -8.08594,-2.37305 q -0.0879,-6.63574 -3.73535,-10.590821 -3.60351,-3.955078 -9.58008,-3.955078 -6.76757,0 -10.85449,3.823242 -4.04297,3.823247 -4.658202,10.766607 l 28.828122,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7005\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 229.94531,77.053711 0,9.360351 q -4.48242,-4.174804 -9.58008,-6.240234 -5.05371,-2.06543 -10.7666,-2.06543 -11.25,0 -17.22656,6.899414 -5.97656,6.855469 -5.97656,19.863278 0,12.96387 5.97656,19.86329 5.97656,6.85546 17.22656,6.85546 5.71289,0 10.7666,-2.06543 5.09766,-2.06543 9.58008,-6.24023 l 0,9.27246 q -4.6582,3.16406 -9.88769,4.74609 -5.18555,1.58204 -10.98633,1.58204 -14.89746,0 -23.4668,-9.09668 -8.56933,-9.14063 -8.56933,-24.917 0,-15.820309 8.56933,-24.916988 8.56934,-9.140625 23.4668,-9.140625 5.88867,0 11.07422,1.582031 5.22949,1.538086 9.7998,4.658203 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6998\\\" />\\n      <path\\n         d=\\\"m 262.46484,94.060547 q -6.5039,0 -10.2832,5.097656 -3.7793,5.053707 -3.7793,13.886717 0,8.83301 3.73536,13.93067 3.77929,5.05371 10.32714,5.05371 6.45996,0 10.23926,-5.09766 3.7793,-5.09766 3.7793,-13.88672 0,-8.74512 -3.7793,-13.842772 -3.7793,-5.141601 -10.23926,-5.141601 z m 0,-6.855469 q 10.54688,0 16.56739,6.855469 6.0205,6.855473 6.0205,18.984373 0,12.08496 -6.0205,18.98438 -6.02051,6.85547 -16.56739,6.85547 -10.59082,0 -16.61132,-6.85547 -5.97657,-6.89942 -5.97657,-18.98438 0,-12.1289 5.97657,-18.984373 6.0205,-6.855469 16.61132,-6.855469 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7000\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 211.11328,219.23828 q 2.85645,0.9668 5.53711,4.13086 2.72461,3.16406 5.44922,8.70117 L 231.1084,250 l -9.53613,0 -8.39356,-16.83105 q -3.25195,-6.5918 -6.32812,-8.74512 -3.03223,-2.15332 -8.30567,-2.15332 l -9.66797,0 0,27.72949 -8.87695,0 0,-65.61035 20.03906,0 q 11.25,0 16.78711,4.70215 5.53711,4.70215 5.53711,14.19433 0,6.19629 -2.90039,10.28321 -2.85644,4.08691 -8.34961,5.66894 z m -22.23633,-27.55371 0,23.29102 11.16211,0 q 6.41602,0 9.66797,-2.94434 3.2959,-2.98828 3.2959,-8.74512 0,-5.75683 -3.2959,-8.65722 -3.25195,-2.94434 -9.66797,-2.94434 l -11.16211,0 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6993\\\" />\\n      <path\\n         d=\\\"m 283.13965,220.29297 0,29.70703 -8.08594,0 0,-29.44336 q 0,-6.9873 -2.72461,-10.45898 -2.72461,-3.47168 -8.17383,-3.47168 -6.54785,0 -10.32715,4.1748 -3.77929,4.17481 -3.77929,11.38184 l 0,27.81738 -8.12988,0 0,-68.37891 8.12988,0 0,26.80664 q 2.90039,-4.43847 6.81152,-6.63574 3.95508,-2.19726 9.09668,-2.19726 8.48145,0 12.83203,5.27343 4.35059,5.2295 4.35059,15.42481 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6995\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomFBlock.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective18\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"81.839927\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1680\\\"\\n     inkscape:window-height=\\\"974\\\"\\n     inkscape:window-x=\\\"96\\\"\\n     inkscape:window-y=\\\"14\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 68.82914,189.86035 -12.041016,32.65137 24.125977,0 -12.084961,-32.65137 z m -5.009766,-8.74512 10.063477,0 25.004882,65.61036 -9.228515,0 -5.976563,-16.83106 -29.575195,0 -5.976562,16.83106 -9.360352,0 25.048828,-65.61036 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6970\\\" />\\n      <path\\n         d=\\\"m 141.91019,199.39648 0,7.5586 q -3.42773,-1.88965 -6.89941,-2.8125 -3.42773,-0.9668 -6.94336,-0.9668 -7.86621,0 -12.2168,5.00977 -4.35058,4.96582 -4.35058,13.97461 0,9.00879 4.35058,14.01855 4.35059,4.96582 12.2168,4.96582 3.51563,0 6.94336,-0.92285 3.47168,-0.9668 6.89941,-2.85645 l 0,7.47071 q -3.38378,1.58203 -7.03125,2.37304 Q 131.27543,248 127.18851,248 q -11.11816,0 -17.66601,-6.9873 -6.54785,-6.98731 -6.54785,-18.85254 0,-12.04102 6.59179,-18.94043 6.63575,-6.89942 18.14942,-6.89942 3.73535,0 7.29492,0.79102 3.55957,0.74707 6.89941,2.28515 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6972\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 50,73.115234 8.876953,0 0,58.139646 31.948242,0 0,7.47071 -40.825195,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6983\\\" />\\n      <path\\n         d=\\\"m 122.11426,113.98438 q -9.79981,0 -13.5791,2.24121 -3.7793,2.24121 -3.7793,7.64648 0,4.30664 2.8125,6.85547 2.85644,2.50488 7.73437,2.50488 6.72364,0 10.76661,-4.74609 4.08691,-4.79004 4.08691,-12.7002 l 0,-1.80175 -8.04199,0 z m 16.12793,-3.33985 0,28.08106 -8.08594,0 0,-7.47071 q -2.76855,4.48242 -6.89941,6.63574 Q 119.12598,140 113.14941,140 q -7.55859,0 -12.04101,-4.21875 -4.438478,-4.2627 -4.438478,-11.38184 0,-8.30566 5.537108,-12.52441 5.58106,-4.21875 16.61133,-4.21875 l 11.33789,0 0,-0.79102 q 0,-5.58105 -3.69141,-8.613277 -3.64746,-3.076172 -10.2832,-3.076172 -4.21875,0 -8.21777,1.010742 -3.99903,1.010743 -7.69043,3.032227 l 0,-7.470703 q 4.43847,-1.713867 8.61328,-2.548828 4.1748,-0.878907 8.12988,-0.878907 10.67871,0 15.95215,5.53711 5.27344,5.537109 5.27344,16.787108 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6985\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 233.94531,77.053711 0,9.360351 q -4.48242,-4.174804 -9.58008,-6.240234 -5.05371,-2.06543 -10.7666,-2.06543 -11.25,0 -17.22656,6.899414 -5.97656,6.855469 -5.97656,19.863278 0,12.96387 5.97656,19.86329 5.97656,6.85546 17.22656,6.85546 5.71289,0 10.7666,-2.06543 5.09766,-2.06543 9.58008,-6.24023 l 0,9.27246 q -4.6582,3.16406 -9.88769,4.74609 -5.18555,1.58204 -10.98633,1.58204 -14.89746,0 -23.4668,-9.09668 -8.56933,-9.14063 -8.56933,-24.917 0,-15.820309 8.56933,-24.916988 8.56934,-9.140625 23.4668,-9.140625 5.88867,0 11.07422,1.582031 5.22949,1.538086 9.7998,4.658203 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6978\\\" />\\n      <path\\n         d=\\\"m 289.49219,110.97949 0,3.95508 -37.17774,0 q 0.52735,8.34961 5.00977,12.74414 4.52637,4.35059 12.56836,4.35059 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42774 l 0,7.64649 q -4.35059,1.8457 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77734,0 -18.67676,-6.85547 -6.85547,-6.85547 -6.85547,-18.54492 0,-12.08497 6.50391,-19.160161 6.54785,-7.119141 17.62207,-7.119141 9.93164,0 15.68848,6.416016 5.80078,6.37207 5.80078,17.358396 z m -8.08594,-2.37304 q -0.0879,-6.63575 -3.73535,-10.590825 -3.60352,-3.955078 -9.58008,-3.955078 -6.76758,0 -10.85449,3.823242 -4.04297,3.823241 -4.65821,10.766601 l 28.82813,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6980\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 194.98926,184.38965 8.9209,0 0,39.8584 q 0,10.54687 3.82324,15.20507 3.82324,4.61426 12.39258,4.61426 8.52539,0 12.34863,-4.61426 3.82324,-4.6582 3.82324,-15.20507 l 0,-39.8584 8.9209,0 0,40.95703 q 0,12.83203 -6.37207,19.37988 -6.32813,6.54785 -18.7207,6.54785 -12.43653,0 -18.8086,-6.54785 -6.32812,-6.54785 -6.32812,-19.37988 l 0,-40.95703 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6975\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomNoble.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 71.928711,191.86035 -12.041016,32.65137 24.125977,0 -12.084961,-32.65137 z m -5.009766,-8.74512 10.063477,0 25.004878,65.61036 -9.228511,0 -5.976562,-16.83106 -29.575196,0 -5.976562,16.83106 -9.360352,0 25.048828,-65.61036 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6950\\\" />\\n      <path\\n         d=\\\"m 139.69238,207.06543 q -1.3623,-0.79102 -2.98828,-1.14258 -1.58203,-0.39551 -3.51562,-0.39551 -6.85547,0 -10.54688,4.48243 -3.64746,4.43847 -3.64746,12.78808 l 0,25.92774 -8.12988,0 0,-49.21875 8.12988,0 0,7.64648 q 2.54883,-4.48242 6.63574,-6.63574 4.08692,-2.19727 9.93164,-2.19727 0.83496,0 1.84571,0.13184 1.01074,0.0879 2.24121,0.30762 l 0.0439,8.30566 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6952\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 40,73.115234 8.876953,0 0,26.894536 32.255859,0 0,-26.894536 8.876954,0 0,65.610356 -8.876954,0 0,-31.24512 -32.255859,0 0,31.24512 -8.876953,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6965\\\" />\\n      <path\\n         d=\\\"m 149.42383,112.09473 0,3.95507 -37.17774,0 q 0.52735,8.34961 5.00977,12.74415 4.52637,4.35058 12.56836,4.35058 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42773 l 0,7.64648 q -4.35059,1.84571 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77734,0 -18.67676,-6.85547 -6.85547,-6.85547 -6.85547,-18.54492 0,-12.08496 6.50391,-19.160157 6.54785,-7.119141 17.62207,-7.119141 9.93164,0 15.68848,6.416016 5.80078,6.372072 5.80078,17.358402 z m -8.08594,-2.37305 q -0.0879,-6.63574 -3.73535,-10.590821 -3.60352,-3.955078 -9.58008,-3.955078 -6.76758,0 -10.85449,3.823242 -4.04297,3.823247 -4.6582,10.766607 l 28.82812,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6967\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 184.81445,72 11.95313,0 29.09179,54.8877 0,-54.8877 8.61329,0 0,65.61035 -11.95313,0 -29.0918,-54.887694 0,54.887694 -8.61328,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6960\\\" />\\n      <path\\n         d=\\\"m 293.88672,110.97949 0,3.95508 -37.17774,0 q 0.52735,8.34961 5.00977,12.74414 4.52637,4.35059 12.56836,4.35059 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42774 l 0,7.64649 q -4.35059,1.8457 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77734,0 -18.67676,-6.85547 -6.85547,-6.85547 -6.85547,-18.54492 0,-12.08497 6.50391,-19.160161 6.54785,-7.119141 17.62207,-7.119141 9.93164,0 15.68848,6.416016 5.80078,6.37207 5.80078,17.358396 z m -8.08594,-2.37304 q -0.0879,-6.63575 -3.73535,-10.590825 -3.60352,-3.955078 -9.58008,-3.955078 -6.76758,0 -10.85449,3.823242 -4.04297,3.823241 -4.6582,10.766601 l 28.82812,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6962\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 180,184.38965 8.87695,0 0,27.72949 29.44336,-27.72949 11.42578,0 -32.56347,30.58594 L 232.0752,250 l -11.68946,0 -31.50879,-31.59668 0,31.59668 -8.87695,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6955\\\" />\\n      <path\\n         d=\\\"m 267.23145,208.33984 q -1.36231,-0.79101 -2.98829,-1.14257 -1.58203,-0.39551 -3.51562,-0.39551 -6.85547,0 -10.54688,4.48242 -3.64746,4.43848 -3.64746,12.78809 l 0,25.92773 -8.12988,0 0,-49.21875 8.12988,0 0,7.64648 q 2.54883,-4.48242 6.63575,-6.63574 4.08691,-2.19726 9.93164,-2.19726 0.83496,0 1.8457,0.13183 1.01074,0.0879 2.24121,0.30762 l 0.0439,8.30566 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6957\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondOne.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.0389,160 L 39.961095,160\\\"\\n       id=\\\"path3152\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondTwo.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondOne.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.0389,140 L 39.961095,140\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,179.98053 L 39.941666,179.98053\\\"\\n       id=\\\"path3574\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondThree.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTwo.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.0389,160 L 39.961095,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,199.98053 L 39.941666,199.98053\\\"\\n       id=\\\"path3574\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,119.98053 L 39.941663,119.98053\\\"\\n       id=\\\"path3576\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondFour.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondFour.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.0389,180 L 39.961095,180\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,219.98053 L 39.941666,219.98053\\\"\\n       id=\\\"path3574\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,139.98053 L 39.941663,139.98053\\\"\\n       id=\\\"path3576\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,99.980529 L 39.941665,99.980529\\\"\\n       id=\\\"path3578\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondZero.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2966\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4517786\\\"\\n     inkscape:cx=\\\"160\\\"\\n     inkscape:cy=\\\"160\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1390\\\"\\n     inkscape:window-height=\\\"1119\\\"\\n     inkscape:window-x=\\\"422\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2968\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"path3742\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       transform=\\\"matrix(1.25,0,0,1.25,132.5,-8.75)\\\" />\\n    <path\\n       transform=\\\"matrix(1.25,0,0,1.25,-17.5,-8.75)\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       id=\\\"path3744\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       sodipodi:type=\\\"arc\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"path3746\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       transform=\\\"matrix(1.25,0,0,1.25,32.5,-8.75)\\\" />\\n    <path\\n       transform=\\\"matrix(1.25,0,0,1.25,82.5,-8.75)\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       id=\\\"path3748\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       sodipodi:type=\\\"arc\\\" />\\n    <path\\n       transform=\\\"matrix(1.25,0,0,1.25,232.5,-8.75)\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       id=\\\"path3750\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       sodipodi:type=\\\"arc\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"path3752\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       transform=\\\"matrix(1.25,0,0,1.25,182.5,-8.75)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondUp.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#000000;fill-rule:evenodd;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 10,160 L 300,100 L 300,220.71429 L 10,160 z \\\"\\n       id=\\\"path3610\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondDown.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 40.382649,165.00403 L 40.382649,155.19597\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 100,174.2408 L 100,144.59666\\\"\\n       id=\\\"path3712\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160,184.32705 L 160,134.74379\\\"\\n       id=\\\"path3714\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280,204.78908 L 280,115.08664\\\"\\n       id=\\\"path3716\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 220,195.22384 L 220,125.64966\\\"\\n       id=\\\"path3718\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondSquig.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondSquig.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.70939255;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 13.854696,160 C 23.404427,145.60525 31.644659,120.73451 42.883757,119.8547 C 52.560111,118.19483 66.522178,143.90673 71.912818,160 C 82.300825,178.10026 83.522733,199.152 100.94188,200.1453 C 119.40219,200.81786 121.80479,177.7981 129.97094,160 C 137.74367,142.33593 144.46966,118.67452 159,119.8547 C 175.82856,118.93206 179.97706,143.36954 188.02906,160 C 196.14175,177.45474 205.82635,200.76232 217.05812,200.1453 C 231.09125,199.83385 237.2755,175.9758 246.08718,160 C 254.09821,142.34457 263.95628,119.88399 275.11624,119.8547 C 289.09333,120.33425 295.4277,143.74196 304.1453,160 L 304.1453,160 L 304.1453,160\\\"\\n       id=\\\"path3749\\\"\\n       sodipodi:nodetypes=\\\"ccccccccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"1.0.2 (1.0.2+r75+1)\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondAny.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2966\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.36294465\\\"\\n     inkscape:cx=\\\"-23.567935\\\"\\n     inkscape:cy=\\\"160\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1023\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:document-rotation=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2968\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <circle\\n       id=\\\"path3744\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25\\\"\\n       cx=\\\"20.5\\\"\\n       cy=\\\"160\\\"\\n       r=\\\"12.5\\\" />\\n    <circle\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25\\\"\\n       id=\\\"path3746\\\"\\n       cx=\\\"60.5\\\"\\n       cy=\\\"160\\\"\\n       r=\\\"12.5\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 150,160 H 100\\\"\\n       id=\\\"path838\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 230,140 H 180\\\"\\n       id=\\\"path840\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 230,180 H 180\\\"\\n       id=\\\"path842\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 310,120 H 260\\\"\\n       id=\\\"path844\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 310,160 H 260\\\"\\n       id=\\\"path846\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 310,200 H 260\\\"\\n       id=\\\"path848\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondAddTwo.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2948\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"39.099383\\\"\\n     inkscape:cy=\\\"92.512755\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1421\\\"\\n     inkscape:window-height=\\\"893\\\"\\n     inkscape:window-x=\\\"278\\\"\\n     inkscape:window-y=\\\"110\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:4.1221571;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:2.00970001\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"m 140.71429,135 a 8.9285717,9.2857141 0 1 1 -17.85714,0 8.9285717,9.2857141 0 1 1 17.85714,0 z\\\"\\n       transform=\\\"matrix(0,1.9791656,-1.9030439,0,400.81202,-104.81214)\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 126.24182,130.35436 51.64564,35.560356\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:0.75294118;fill-rule:nonzero;stroke:#000000;stroke-width:8;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 176.5625,165.59375 a 9.6254627,9.6254627 0 0 0 -3.875,18.3125 L 280,237 a 9.6254627,9.6254627 0 1 0 8.53125,-17.25 l -107.3125,-53.09375 a 9.6254627,9.6254627 0 0 0 -4.65625,-1.0625 z\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 126.24182,181.56035 51.64564,276.35436\\\"\\n       id=\\\"path3162\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:0.75294118;fill-rule:nonzero;stroke:#000000;stroke-width:8;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 283.65625,72.625 a 9.6254627,9.6254627 0 0 0 -4.34375,1.0625 l -107.34375,53.125 a 9.6254627,9.6254627 0 1 0 8.53125,17.25 l 107.34375,-53.125 a 9.6254627,9.6254627 0 0 0 -4.1875,-18.3125 z\\\"\\n       id=\\\"path3164\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondInsert.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2958\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"103.22259\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1204\\\"\\n     inkscape:window-height=\\\"925\\\"\\n     inkscape:window-x=\\\"508\\\"\\n     inkscape:window-y=\\\"54\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4800\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 113.39098,158.69004 53.078266,263.15473\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 299.98723,58.483019 240.10753,162.19765\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:0.75294118;stroke:#000000;stroke-width:8;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"M 116.5625 151.3125 A 9.6254923 9.6254923 0 0 0 111.09375 152.90625 A 9.6254923 9.6254923 0 0 0 116.53125 170.53125 L 159.75 170.5625 C 158.10087 167.65453 157.15625 164.30057 157.15625 160.71875 C 157.15625 157.31663 158.0016 154.11729 159.5 151.3125 L 116.5625 151.3125 z M 194.78125 151.3125 C 196.27965 154.11729 197.15625 157.31663 197.15625 160.71875 C 197.15625 164.30057 196.18038 167.65453 194.53125 170.5625 L 236.28125 170.59375 A 9.6321508 9.6321508 0 0 0 236.28125 151.3125 L 194.78125 151.3125 z \\\"\\n       id=\\\"path4284\\\" />\\n    <path\\n       transform=\\\"translate(157.71429,141.42857)\\\"\\n       d=\\\"M 40,20 A 20,20 0 1 1 0,20 20,20 0 1 1 40,20 z\\\"\\n       sodipodi:ry=\\\"20\\\"\\n       sodipodi:rx=\\\"20\\\"\\n       sodipodi:cy=\\\"20\\\"\\n       sodipodi:cx=\\\"20\\\"\\n       id=\\\"path3660\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:9;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       sodipodi:type=\\\"arc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondSwitch.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective4871\\\" />\\n    <marker\\n       inkscape:stockid=\\\"Arrow2Send\\\"\\n       orient=\\\"auto\\\"\\n       refY=\\\"0.0\\\"\\n       refX=\\\"0.0\\\"\\n       id=\\\"Arrow2Send\\\"\\n       style=\\\"overflow:visible;\\\">\\n      <path\\n         id=\\\"path3178\\\"\\n         style=\\\"font-size:12px;fill:#8b8b8b;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\\\"\\n         d=\\\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \\\"\\n         transform=\\\"matrix(-0.3,0,0,-0.3,0.69,0)\\\" />\\n    </marker>\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"39.099383\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1215\\\"\\n     inkscape:window-height=\\\"839\\\"\\n     inkscape:window-x=\\\"145\\\"\\n     inkscape:window-y=\\\"105\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:0.75294119;stroke:#000000;stroke-width:8;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"m 225.375,15.59375 a 9.6254923,9.6254923 0 0 0 -8.125,5.5 l -60.28125,123.0625 a 9.6295647,9.6295647 0 1 0 17.3125,8.4375 l 60.25,-123.03125 A 9.6254923,9.6254923 0 0 0 225.375,15.59375 z\\\"\\n       id=\\\"path3132\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:4.1221571;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-104.82577,-96.910927)\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:15.49904156;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 141.61589,160 L 63.973265,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 225.41813,293.9522 L 165.1533,170.90493\\\"\\n       id=\\\"path3158\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#8b8b8b;stroke-width:6.58357668;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow2Send)\\\"\\n       d=\\\"M 197.79178,142.41668 C 208.33227,154.9762 208.33227,166.6984 197.79178,177.58331\\\"\\n       id=\\\"path3134\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#8b8b8b;stroke-width:6.58357668;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow2Send)\\\"\\n       d=\\\"M 213.88997,98.458413 C 237.84561,141.99804 237.84561,183.02576 213.88997,221.54158\\\"\\n       id=\\\"path3136\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#8b8b8b;stroke-width:6.584;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow2Send);fill-opacity:1\\\"\\n       d=\\\"M 238.03726,63.291789 C 275.40805,126.92663 275.40805,191.39877 238.03726,256.70821\\\"\\n       id=\\\"path3140\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondRotate.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective4871\\\" />\\n    <marker\\n       inkscape:stockid=\\\"Arrow2Send\\\"\\n       orient=\\\"auto\\\"\\n       refY=\\\"0.0\\\"\\n       refX=\\\"0.0\\\"\\n       id=\\\"Arrow2Send\\\"\\n       style=\\\"overflow:visible;\\\">\\n      <path\\n         id=\\\"path3178\\\"\\n         style=\\\"font-size:12px;fill:#8b8b8b;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\\\"\\n         d=\\\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \\\"\\n         transform=\\\"matrix(-0.3,0,0,-0.3,0.69,0)\\\" />\\n    </marker>\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#4a8be0\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"229.81367\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1859\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"61\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4149\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4477\\\"\\n       transform=\\\"translate(-6.9348763,2.361824)\\\">\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3132\\\"\\n         d=\\\"m 285.375,15.59375 a 9.6254923,9.6254923 0 0 0 -8.125,5.5 l -60.28125,123.0625 a 9.6295647,9.6295647 0 1 0 17.3125,8.4375 l 60.25,-123.03125 A 9.6254923,9.6254923 0 0 0 285.375,15.59375 Z\\\"\\n         style=\\\"color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:'Bitstream Vera Sans';-inkscape-font-specification:'Bitstream Vera Sans';text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;display:inline;overflow:visible;visibility:visible;fill:#ffffff;fill-opacity:0.75294118;stroke:#000000;stroke-width:8;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker:none;enable-background:accumulate\\\" />\\n      <circle\\n         r=\\\"17.671122\\\"\\n         cy=\\\"160\\\"\\n         cx=\\\"216\\\"\\n         inkscape:export-ydpi=\\\"9\\\"\\n         inkscape:export-xdpi=\\\"9\\\"\\n         id=\\\"path2160\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970006;stroke-opacity:1\\\" />\\n      <path\\n         sodipodi:nodetypes=\\\"cc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3152\\\"\\n         d=\\\"M 201.61589,160 63.97327,160\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:15.49904156;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         sodipodi:nodetypes=\\\"cc\\\"\\n         id=\\\"path3158\\\"\\n         d=\\\"M 285.41813,293.9522 225.1533,170.90493\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <circle\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970006;stroke-opacity:1\\\"\\n         id=\\\"circle4151\\\"\\n         inkscape:export-xdpi=\\\"9\\\"\\n         inkscape:export-ydpi=\\\"9\\\"\\n         cx=\\\"56\\\"\\n         cy=\\\"160\\\"\\n         r=\\\"17.671122\\\" />\\n      <path\\n         sodipodi:nodetypes=\\\"ccccc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path4155\\\"\\n         d=\\\"m 110,140 c 0,-30 10,-80 36,-80 24,0 34,60 34,100 0,40 -10.12741,99.49035 -34,100 -26,0 -36,-48.6 -36,-78.6\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#ffffff;stroke-width:8;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         sodipodi:nodetypes=\\\"cccc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path4475\\\"\\n         d=\\\"m 110,175 -15,25 30,0 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondLinear.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 130.66986,160 L 10.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 309.02255,160 L 189.26316,160\\\"\\n       id=\\\"path3154\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondTrigonal.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"743\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.1221571;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-82.82577,-96.910927)\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 148.66986,160 L 28.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 248.37547,27.62453 L 195.2535,134.95751\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 247.41813,293.9522 L 194.29616,186.61922\\\"\\n       id=\\\"path3158\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondTetra1.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"148.55302\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"743\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.1221571;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-96.82577,-80.910927)\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 138.34073,193.65927 L 43.546726,268.25545\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 236.37547,43.62453 L 183.2535,150.95751\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 189.54672,193.65927 L 284.34073,268.25545\\\"\\n       id=\\\"path3162\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 90.29616,44.33351 L 143.41813,151.66649\\\"\\n       id=\\\"path3164\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondTetra2.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTetra2.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"146.11708\\\"\\n     inkscape:cy=\\\"127.88711\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 130.66986,160 L 10.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 309.02255,160 L 189.26316,160\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 256.37547,43.62453 L 176.82086,133.14201\\\"\\n       id=\\\"path2233\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 255.17914,276.37547 L 175.62453,186.85799\\\"\\n       id=\\\"path2235\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondSqPlan.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondSqPlan.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 130.66986,160 L 10.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 309.02255,160 L 189.26316,160\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 159.62453,130.37547 L 159.62453,10.616072\\\"\\n       id=\\\"path2271\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160.37547,309.38392 L 160.37547,189.62453\\\"\\n       id=\\\"path2273\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondOcta1.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondOcta2.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 159.62453,130.37547 L 159.62453,10.616072\\\"\\n       id=\\\"path2271\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160.37547,309.38392 L 160.37547,189.62453\\\"\\n       id=\\\"path2273\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 26.905712,230.35583 L 132.37547,173.62453\\\"\\n       id=\\\"path2305\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 188.12226,146.50851 L 293.59202,89.777207\\\"\\n       id=\\\"path2505\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 26.905714,89.62453 L 132.37547,146.35583\\\"\\n       id=\\\"path2507\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 188.55084,173.92006 L 294.02059,230.65136\\\"\\n       id=\\\"path2509\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondOcta2.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondSqPlan.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 130.66986,160 L 10.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 309.02255,160 L 189.26316,160\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 159.62453,130.37547 L 159.62453,10.616072\\\"\\n       id=\\\"path2271\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160.37547,309.38392 L 160.37547,189.62453\\\"\\n       id=\\\"path2273\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 182.07157,136.65434 L 268.37547,53.62453\\\"\\n       id=\\\"path2303\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 52.07157,264.65433 L 138.37547,181.62453\\\"\\n       id=\\\"path2305\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   inkscape:export-ydpi=\\\"9\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   sodipodi:docname=\\\"BondMetalLigate.svg\\\"\\n   version=\\\"1.0\\\"\\n   inkscape:version=\\\"1.0 (4035a4f, 2020-05-01)\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   id=\\\"svg2\\\"\\n   height=\\\"320\\\"\\n   width=\\\"320\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <path\\n       id=\\\"char45\\\"\\n       d=\\\"M1526 0H1328V1283L914 410H796L385 1283V0H200V1489H470L867 660L1251 1489H1526V0Z\\\"\\n       edge=\\\"none\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     inkscape:document-rotation=\\\"0\\\"\\n     inkscape:object-paths=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-y=\\\"23\\\"\\n     inkscape:window-x=\\\"53\\\"\\n     inkscape:window-height=\\\"943\\\"\\n     inkscape:window-width=\\\"1650\\\"\\n     showborder=\\\"true\\\"\\n     height=\\\"320px\\\"\\n     width=\\\"320px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:cy=\\\"146.31871\\\"\\n     inkscape:cx=\\\"74.452978\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     objecttolerance=\\\"10\\\"\\n     guidetolerance=\\\"10\\\"\\n     gridtolerance=\\\"10000\\\"\\n     borderopacity=\\\"1.0\\\"\\n     bordercolor=\\\"#666666\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     id=\\\"base\\\">\\n    <inkscape:grid\\n       id=\\\"grid4135\\\"\\n       type=\\\"xygrid\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     id=\\\"layer1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     inkscape:label=\\\"Layer 1\\\">\\n    <use\\n       transform=\\\"matrix(0.03709198,0,0,-0.03709198,127.98962,187.61498)\\\"\\n       id=\\\"use4287\\\"\\n       x=\\\"0\\\"\\n       xlink:href=\\\"#char45\\\"\\n       style=\\\"fill:#000000;fill-opacity:1\\\"\\n       y=\\\"0\\\"\\n       width=\\\"100%\\\"\\n       height=\\\"100%\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       id=\\\"path850\\\"\\n       d=\\\"M 160,110 V 20\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160,300 V 210\\\"\\n       id=\\\"path852\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 205,135 282.94228,90\\\"\\n       id=\\\"path854\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       id=\\\"path856\\\"\\n       d=\\\"m 205,185 77.94228,45\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 37.05772,90 115,135\\\"\\n       id=\\\"path858\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       id=\\\"path860\\\"\\n       d=\\\"M 37.05772,230 115,185\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondArtifactPath.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"161.66868\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1394\\\"\\n     inkscape:window-height=\\\"855\\\"\\n     inkscape:window-x=\\\"46\\\"\\n     inkscape:window-y=\\\"1\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4206\\\"\\n       transform=\\\"matrix(1.1572994,0,0,1.1572994,-14.188294,6.2718173)\\\"\\n       style=\\\"stroke-width:6.91264508;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <line\\n         x1=\\\"150.51276\\\"\\n         y1=\\\"99.510551\\\"\\n         x2=\\\"35.082012\\\"\\n         y2=\\\"166.15654\\\"\\n         id=\\\"line4180\\\"\\n         style=\\\"stroke:#000000;stroke-width:6.91264508;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"150.51276\\\"\\n         y1=\\\"99.510551\\\"\\n         x2=\\\"265.94345\\\"\\n         y2=\\\"166.15654\\\"\\n         id=\\\"line4182\\\"\\n         style=\\\"stroke:#000000;stroke-width:6.91264508;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n    </g>\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:15;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:15,30;stroke-dashoffset:6\\\"\\n       d=\\\"m 60,210 c 90,-70 110,-70 200,0\\\"\\n       id=\\\"path4210\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondArtifactRing.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"14.186408\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1394\\\"\\n     inkscape:window-height=\\\"855\\\"\\n     inkscape:window-x=\\\"46\\\"\\n     inkscape:window-y=\\\"1\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4271\\\"\\n       style=\\\"stroke-width:8;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       transform=\\\"translate(27.870353,1.568337)\\\">\\n      <line\\n         x1=\\\"132.12965\\\"\\n         y1=\\\"38.988956\\\"\\n         x2=\\\"17.069948\\\"\\n         y2=\\\"122.58849\\\"\\n         id=\\\"line4215\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"17.069948\\\"\\n         y1=\\\"122.58849\\\"\\n         x2=\\\"61.017296\\\"\\n         y2=\\\"257.85382\\\"\\n         id=\\\"line4217\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"61.017296\\\"\\n         y1=\\\"257.85382\\\"\\n         x2=\\\"203.24199\\\"\\n         y2=\\\"257.85382\\\"\\n         id=\\\"line4219\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"247.18935\\\"\\n         y1=\\\"122.58849\\\"\\n         x2=\\\"203.24199\\\"\\n         y2=\\\"257.85382\\\"\\n         id=\\\"line4221\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"247.18935\\\"\\n         y1=\\\"122.58849\\\"\\n         x2=\\\"132.12965\\\"\\n         y2=\\\"38.988956\\\"\\n         id=\\\"line4223\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n    </g>\\n    <circle\\n       style=\\\"fill:none;stroke:#000000;stroke-width:15;stroke-miterlimit:4;stroke-dasharray:15,30;stroke-dashoffset:24;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"ellipse4231\\\"\\n       cy=\\\"160\\\"\\n       cx=\\\"160\\\"\\n       r=\\\"66.571121\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondArtifactArene.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <path\\n       edge=\\\"none\\\"\\n       d=\\\"M1526 0H1328V1283L914 410H796L385 1283V0H200V1489H470L867 660L1251 1489H1526V0Z\\\"\\n       id=\\\"char45\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"-12.077558\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1394\\\"\\n     inkscape:window-height=\\\"855\\\"\\n     inkscape:window-x=\\\"46\\\"\\n     inkscape:window-y=\\\"1\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"false\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4369\\\"\\n       style=\\\"stroke-width:8;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <line\\n         x1=\\\"79.874969\\\"\\n         y1=\\\"53.341728\\\"\\n         x2=\\\"42.383801\\\"\\n         y2=\\\"124.96636\\\"\\n         id=\\\"line4253\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"42.383801\\\"\\n         y1=\\\"124.96636\\\"\\n         x2=\\\"159.32974\\\"\\n         y2=\\\"157.25311\\\"\\n         id=\\\"line4255\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"159.32974\\\"\\n         y1=\\\"157.25311\\\"\\n         x2=\\\"277.61575\\\"\\n         y2=\\\"130.34207\\\"\\n         id=\\\"line4257\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"277.61575\\\"\\n         y1=\\\"130.34207\\\"\\n         x2=\\\"243.44348\\\"\\n         y2=\\\"57.081509\\\"\\n         id=\\\"line4259\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"243.44348\\\"\\n         y1=\\\"57.081509\\\"\\n         x2=\\\"79.874969\\\"\\n         y2=\\\"53.341728\\\"\\n         id=\\\"line4261\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n    </g>\\n    <line\\n       style=\\\"stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       id=\\\"line4275\\\"\\n       y2=\\\"104.59695\\\"\\n       x2=\\\"160.5295\\\"\\n       y1=\\\"208.16769\\\"\\n       x1=\\\"160.5295\\\" />\\n    <ellipse\\n       style=\\\"fill:none;stroke:#000000;stroke-width:15;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:15,30;stroke-dashoffset:39\\\"\\n       id=\\\"ellipse4281\\\"\\n       ry=\\\"28.668024\\\"\\n       rx=\\\"69.736992\\\"\\n       cy=\\\"100.79803\\\"\\n       cx=\\\"160\\\" />\\n    <use\\n       height=\\\"100%\\\"\\n       width=\\\"100%\\\"\\n       y=\\\"0\\\"\\n       style=\\\"fill:#000000;fill-opacity:1\\\"\\n       xlink:href=\\\"#char45\\\"\\n       x=\\\"0\\\"\\n       id=\\\"use4287\\\"\\n       transform=\\\"matrix(0.03709198,0,0,-0.03709198,128.5194,269.61687)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondArtifactClear.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.7\\\"\\n     inkscape:cx=\\\"109.54685\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1394\\\"\\n     inkscape:window-height=\\\"855\\\"\\n     inkscape:window-x=\\\"46\\\"\\n     inkscape:window-y=\\\"1\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <circle\\n       style=\\\"fill:none;stroke:#000000;stroke-width:15;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:15,30;stroke-dashoffset:13.15014392\\\"\\n       id=\\\"ellipse4231\\\"\\n       cy=\\\"160\\\"\\n       cx=\\\"160\\\"\\n       r=\\\"121.49729\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"m 131.71573,131.71573 56.56854,56.56854\\\"\\n       id=\\\"path4142\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"m 188.28427,131.71573 -56.56854,56.56854\\\"\\n       id=\\\"path4144\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   inkscape:export-ydpi=\\\"9\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   sodipodi:docname=\\\"BondPolymer.svg\\\"\\n   version=\\\"1.0\\\"\\n   inkscape:version=\\\"1.0 (4035a4f, 2020-05-01)\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   id=\\\"svg2\\\"\\n   height=\\\"320\\\"\\n   width=\\\"320\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <path\\n       id=\\\"char45\\\"\\n       d=\\\"M1526 0H1328V1283L914 410H796L385 1283V0H200V1489H470L867 660L1251 1489H1526V0Z\\\"\\n       edge=\\\"none\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     inkscape:document-rotation=\\\"0\\\"\\n     inkscape:object-paths=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-global=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-y=\\\"23\\\"\\n     inkscape:window-x=\\\"56\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-width=\\\"1864\\\"\\n     showborder=\\\"true\\\"\\n     height=\\\"320px\\\"\\n     width=\\\"320px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:cy=\\\"163.33901\\\"\\n     inkscape:cx=\\\"23.277781\\\"\\n     inkscape:zoom=\\\"0.35\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     objecttolerance=\\\"10\\\"\\n     guidetolerance=\\\"10\\\"\\n     gridtolerance=\\\"10000\\\"\\n     borderopacity=\\\"1.0\\\"\\n     bordercolor=\\\"#666666\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     id=\\\"base\\\">\\n    <inkscape:grid\\n       id=\\\"grid4135\\\"\\n       type=\\\"xygrid\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     id=\\\"layer1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     inkscape:label=\\\"Layer 1\\\">\\n    <text\\n       id=\\\"text844\\\"\\n       y=\\\"296.98486\\\"\\n       x=\\\"241.67216\\\"\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:97.5637px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#000000;fill-opacity:1;stroke:none;stroke-width:2.43909\\\"\\n       xml:space=\\\"preserve\\\"><tspan\\n         style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:97.5637px;font-family:sans-serif;-inkscape-font-specification:'sans-serif, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;stroke-width:2.43909\\\"\\n         y=\\\"296.98486\\\"\\n         x=\\\"241.67216\\\"\\n         id=\\\"tspan842\\\"\\n         sodipodi:role=\\\"line\\\">n</tspan></text>\\n    <path\\n       sodipodi:nodetypes=\\\"cccc\\\"\\n       id=\\\"path846\\\"\\n       d=\\\"M 110,30 H 50 v 260 h 60\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:12;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cccc\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:12;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"m 164,30 h 60 v 260 h -60\\\"\\n       id=\\\"path848\\\" />\\n  </g>\\n</svg>\\n\";","import { Molecule } from '../data/Molecule';\nimport { PolymerBlock } from '../data/PolymerBlock';\nimport { Vec } from '../util/Vec';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nexport class ContextSketch {\n    constructor(state, sketcher, proxyClip) {\n        this.state = state;\n        this.sketcher = sketcher;\n        this.proxyClip = proxyClip;\n    }\n    populate() {\n        const { state, sketcher } = this;\n        let menu = [];\n        if (sketcher.canUndo() || sketcher.canRedo()) {\n            if (sketcher.canUndo())\n                menu.push({ label: 'Undo', accelerator: 'CmdOrCtrl+Z', click: () => sketcher.performUndo() });\n            if (sketcher.canRedo())\n                menu.push({ label: 'Redo', accelerator: 'CmdOrCtrl+Shift+Z', click: () => sketcher.performRedo() });\n            menu.push(null);\n        }\n        if (state.currentAtom > 0 || state.currentBond > 0)\n            menu.push({ label: 'Edit', 'accelerator': 'Enter', click: () => sketcher.editCurrent() });\n        this.maybeAppend(menu, 'Delete', 'D', ActivityType.Delete);\n        this.maybeAppend(menu, 'Cut', 'CmdOrCtrl+X', ActivityType.Cut);\n        this.maybeAppend(menu, 'Copy', 'CmdOrCtrl+C', ActivityType.Copy);\n        if (this.proxyClip.canAlwaysGet())\n            menu.push({ label: 'Paste', 'accelerator': 'CmdOrCtrl+V', click: () => sketcher.performPaste() });\n        this.maybeAppend(menu, 'Charge +', 'Shift+=', ActivityType.Charge, { delta: 1 });\n        this.maybeAppend(menu, 'Charge -', 'Shift+-', ActivityType.Charge, { delta: -1 });\n        this.maybeAppend(menu, 'Bond Order 0', '0', ActivityType.BondOrder, { order: 0 });\n        this.maybeAppend(menu, 'Bond Order 1', '1', ActivityType.BondOrder, { order: 1 });\n        this.maybeAppend(menu, 'Bond Order 2', '2', ActivityType.BondOrder, { order: 2 });\n        this.maybeAppend(menu, 'Bond Order 3', '3', ActivityType.BondOrder, { order: 3 });\n        this.maybeAppend(menu, 'Bond Order 4', null, ActivityType.BondOrder, { order: 4 });\n        this.maybeAppend(menu, 'Unknown Stereochemistry', '4', ActivityType.BondType, { type: Molecule.BONDTYPE_UNKNOWN });\n        this.maybeAppend(menu, 'Bond Wedge Up', '5', ActivityType.BondType, { type: Molecule.BONDTYPE_INCLINED });\n        this.maybeAppend(menu, 'Bond Wedge Down', '6', ActivityType.BondType, { type: Molecule.BONDTYPE_DECLINED });\n        this.maybeAppend(menu, 'Switch Geometry', null, ActivityType.BondSwitch);\n        this.maybeAppend(menu, 'Add Two Bonds', 'Shift+D', ActivityType.BondAddTwo);\n        this.maybeAppend(menu, 'Insert Atom', null, ActivityType.BondInsert);\n        this.maybeAppend(menu, 'Join Atoms', null, ActivityType.Join);\n        this.maybeAppend(menu, 'Abbreviate Group', '/', ActivityType.AbbrevGroup);\n        this.maybeAppend(menu, 'Abbreviate Formula', '\\\\', ActivityType.AbbrevFormula);\n        this.maybeAppend(menu, 'Clear Abbreviation', 'Shift+\\\\', ActivityType.AbbrevClear);\n        this.maybeAppend(menu, 'Expand Abbreviation', 'Shift+/', ActivityType.AbbrevExpand);\n        let rotateSub = this.rotateSubMenu();\n        if (Vec.notBlank(rotateSub))\n            menu.push({ label: 'Rotate', subMenu: rotateSub });\n        let querySub = this.querySubMenu();\n        if (Vec.notBlank(querySub))\n            menu.push({ label: 'Query', subMenu: querySub });\n        let poly = new PolymerBlock(state.mol);\n        for (let units of poly.getUnits()) {\n            let a1 = state.currentAtom, a2 = 0;\n            if (state.currentBond > 0)\n                [a1, a2] = state.mol.bondFromTo(state.currentBond);\n            if (units.atoms.includes(a1) || units.atoms.includes(a2)) {\n                let label = 'Polymer Block (' + units.atoms.length + ' atom' + (units.atoms.length == 1 ? '' : 's') + ')';\n                menu.push({ label: label, click: () => sketcher.performPolymerBlock(units.atoms) });\n            }\n        }\n        if (menu.length > 0)\n            menu.push(null);\n        menu.push({ label: 'Scale to Fit', click: () => sketcher.autoScale() });\n        menu.push({ label: 'Zoom In', 'accelerator': '=', click: () => sketcher.zoom(1.25) });\n        menu.push({ label: 'Zoom Out', 'accelerator': '-', click: () => sketcher.zoom(0.8) });\n        return menu;\n    }\n    maybeAppend(menu, title, accelerator, activ, param = null) {\n        let molact = new MoleculeActivity(this.state, activ, param);\n        molact.execute();\n        if (!molact.output.mol && !molact.toClipboard)\n            return;\n        menu.push({ label: title, 'accelerator': accelerator, click: () => {\n                this.sketcher.setState(molact.output, true);\n                if (molact.toClipboard)\n                    this.proxyClip.setString(molact.toClipboard);\n            } });\n    }\n    rotateSubMenu() {\n        let menu = [];\n        this.maybeAppend(menu, 'Bond', null, ActivityType.BondRotate);\n        this.maybeAppend(menu, '+1 \\u{00B0}', null, ActivityType.Rotate, { theta: 1 });\n        this.maybeAppend(menu, '-1 \\u{00B0}', null, ActivityType.Rotate, { theta: -1 });\n        this.maybeAppend(menu, '+5 \\u{00B0}', null, ActivityType.Rotate, { theta: 5 });\n        this.maybeAppend(menu, '-5 \\u{00B0}', null, ActivityType.Rotate, { theta: -5 });\n        this.maybeAppend(menu, '+15 \\u{00B0}', null, ActivityType.Rotate, { theta: 15 });\n        this.maybeAppend(menu, '-15 \\u{00B0}', null, ActivityType.Rotate, { theta: -15 });\n        this.maybeAppend(menu, '+30 \\u{00B0}', 'Shift+[', ActivityType.Rotate, { theta: 30 });\n        this.maybeAppend(menu, '-30 \\u{00B0}', 'Shift+]', ActivityType.Rotate, { theta: -30 });\n        this.maybeAppend(menu, 'H-Flip', 'Shift+,', ActivityType.Flip, { axis: 'hor' });\n        this.maybeAppend(menu, 'V-Flip', 'Shift+.', ActivityType.Flip, { axis: 'ver' });\n        this.maybeAppend(menu, 'Align', null, ActivityType.AlignRegular);\n        return menu;\n    }\n    querySubMenu() {\n        let menu = [];\n        this.maybeAppend(menu, 'Clear', null, ActivityType.QueryClear);\n        this.maybeAppend(menu, 'Copy', null, ActivityType.QueryCopy);\n        return menu;\n    }\n}\n//# sourceMappingURL=ContextSketch.js.map","import { Chemistry } from '../data/Chemistry';\nimport { CoordUtil } from '../data/CoordUtil';\nimport { MetaMolecule } from '../data/MetaMolecule';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { PolymerBlock, POLYMERBLOCK_SPECIAL_UNCAPPED, PolymerBlockConnectivity } from '../data/PolymerBlock';\nimport { QueryTypeBond, QueryUtil } from '../data/QueryUtil';\nimport { SketchUtil } from '../data/SketchUtil';\nimport { Stereochemistry } from '../data/Stereochemistry';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { FontData } from '../gfx/FontData';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nimport { GeomUtil } from '../util/Geom';\nimport { Theme } from '../util/Theme';\nimport { colourCanvas, drawLine, fontSansSerif, invZ, norm2_xy, norm_xy, pixelDensity, setBoundaryPixels, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport var DraggingTool;\n(function (DraggingTool) {\n    DraggingTool[DraggingTool[\"None\"] = 0] = \"None\";\n    DraggingTool[DraggingTool[\"Press\"] = 1] = \"Press\";\n    DraggingTool[DraggingTool[\"Lasso\"] = 2] = \"Lasso\";\n    DraggingTool[DraggingTool[\"Pan\"] = 3] = \"Pan\";\n    DraggingTool[DraggingTool[\"Zoom\"] = 4] = \"Zoom\";\n    DraggingTool[DraggingTool[\"Rotate\"] = 5] = \"Rotate\";\n    DraggingTool[DraggingTool[\"Move\"] = 6] = \"Move\";\n    DraggingTool[DraggingTool[\"Erasor\"] = 7] = \"Erasor\";\n    DraggingTool[DraggingTool[\"Atom\"] = 8] = \"Atom\";\n    DraggingTool[DraggingTool[\"Bond\"] = 9] = \"Bond\";\n    DraggingTool[DraggingTool[\"Charge\"] = 10] = \"Charge\";\n    DraggingTool[DraggingTool[\"Ring\"] = 11] = \"Ring\";\n})(DraggingTool || (DraggingTool = {}));\nexport var DrawCanvasDecoration;\n(function (DrawCanvasDecoration) {\n    DrawCanvasDecoration[DrawCanvasDecoration[\"None\"] = 0] = \"None\";\n    DrawCanvasDecoration[DrawCanvasDecoration[\"Stereochemistry\"] = 1] = \"Stereochemistry\";\n    DrawCanvasDecoration[DrawCanvasDecoration[\"MappingNumber\"] = 2] = \"MappingNumber\";\n    DrawCanvasDecoration[DrawCanvasDecoration[\"AtomIndex\"] = 3] = \"AtomIndex\";\n})(DrawCanvasDecoration || (DrawCanvasDecoration = {}));\nexport class DrawCanvas extends Widget {\n    constructor() {\n        super();\n        this.mol = null;\n        this.policy = null;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.pointScale = 1;\n        this.viewOpt = {\n            decoration: DrawCanvasDecoration.Stereochemistry,\n            showOxState: true,\n            showQuery: true,\n            showArtifacts: true,\n        };\n        this.width = 0;\n        this.height = 0;\n        this.border = 0x808080;\n        this.borderRadius = 4;\n        this.background = 0xF8F8F8;\n        this.canvasUnder = null;\n        this.canvasMolecule = null;\n        this.canvasOver = null;\n        this.divMessage = null;\n        this.layout = null;\n        this.metavec = null;\n        this.stereo = null;\n        this.guidelines = null;\n        this.filthy = false;\n        this.dragType = DraggingTool.None;\n        this.currentAtom = 0;\n        this.currentBond = 0;\n        this.hoverAtom = 0;\n        this.hoverBond = 0;\n        this.selectedMask = null;\n        this.opAtom = 0;\n        this.opBond = 0;\n        this.opBudged = false;\n        this.opShift = false;\n        this.opCtrl = false;\n        this.opAlt = false;\n        this.lassoX = null;\n        this.lassoY = null;\n        this.lassoMask = null;\n        this.clickX = 0;\n        this.clickY = 0;\n        this.mouseX = 0;\n        this.mouseY = 0;\n        this.dragGuides = null;\n        this.templatePerms = null;\n        this.currentPerm = 0;\n        this.fusionBank = null;\n        this.cursorWatermark = 0;\n        this.cursorDX = 0;\n        this.cursorDY = 0;\n        this.toolAtomSymbol = '';\n        this.toolBondOrder = 0;\n        this.toolBondType = 0;\n        this.toolChargeDelta = 0;\n        this.toolRingArom = false;\n        this.toolRingFreeform = false;\n        this.toolRotateIncr = 0;\n        this.redrawCacheKey = '';\n        this.abbrevPolicy = RenderPolicy.defaultBlackOnWhite();\n        this.abbrevPolicy.data.foreground = 0xD0D0D0;\n        this.abbrevPolicy.data.atomCols = Vec.numberArray(0xD0D0D0, this.abbrevPolicy.data.atomCols.length);\n    }\n    render(parent) {\n        if (!this.width || !this.height)\n            throw 'Sketcher.render called without width and height';\n        super.render(parent);\n        this.container = dom('<div/>').appendTo(this.contentDOM);\n        this.container.css({ 'position': 'relative', 'width': this.width + 'px', 'height': this.height + 'px' });\n        this.container.css({ 'background-color': colourCanvas(this.background) });\n        if (this.border != MetaVector.NOCOLOUR) {\n            this.container.css({ 'border': '1px solid ' + colourCanvas(this.border) });\n            this.container.css({ 'border-radius': this.borderRadius + 'px' });\n        }\n        this.container.css({ 'outline': 'none' });\n        this.container.attr({ 'tabindex': '0' });\n        let canvasStyle = { 'position': 'absolute', 'left': '0', 'top': '0', 'width': `${this.width}px`, 'height': `${this.height}`, 'pointer-events': 'none' };\n        this.divInfo = dom('<div/>').appendTo(this.container).css({ 'position': 'absolute', 'left': '0', 'top': '0', 'pointer-events': 'none' });\n        this.canvasUnder = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n        this.canvasMolecule = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n        this.canvasOver = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n        this.divMessage = dom('<div/>').appendTo(this.container).css(canvasStyle);\n        this.divMessage.css({ 'text-align': 'center', 'vertical-align': 'middle', 'font-weight': 'bold', 'font-size': '120%' });\n    }\n    getState() {\n        let state = {\n            mol: this.mol.clone(),\n            currentAtom: this.currentAtom,\n            currentBond: this.currentBond,\n            selectedMask: this.selectedMask == null ? null : this.selectedMask.slice(0)\n        };\n        return state;\n    }\n    getSelected(atom) {\n        if (this.selectedMask == null || atom > this.selectedMask.length)\n            return false;\n        return this.selectedMask[atom - 1];\n    }\n    getLassoed(atom) {\n        if (this.lassoMask == null || atom > this.lassoMask.length)\n            return false;\n        return this.lassoMask[atom - 1];\n    }\n    scale() { return this.pointScale; }\n    angToX(ax) {\n        return ax * this.pointScale + this.offsetX;\n    }\n    angToY(ay) {\n        return ay * -this.pointScale + this.offsetY;\n    }\n    xToAng(px) {\n        return (px - this.offsetX) / this.pointScale;\n    }\n    yToAng(py) {\n        return (py - this.offsetY) / -this.pointScale;\n    }\n    scaleToAng(scale) { return scale / this.pointScale; }\n    angToScale(ang) { return ang * this.pointScale; }\n    yIsUp() { return false; }\n    measureText(str, fontSize) { return FontData.main.measureText(str, fontSize); }\n    delayedRedraw() {\n        if (this.canvasMolecule == null)\n            return;\n        this.filthy = true;\n        window.setTimeout(() => { if (this.filthy)\n            this.redraw(); }, 10);\n    }\n    layoutMolecule() {\n        let mol = this.mol;\n        if (this.hoverAtom > 0 && MolUtil.hasAbbrev(mol, this.hoverAtom)) {\n            mol = mol.clone();\n            mol.setAtomElement(this.hoverAtom, '');\n            mol.setAtomCharge(this.hoverAtom, 0);\n            mol.setAtomUnpaired(this.hoverAtom, 0);\n            MolUtil.clearAbbrev(mol, this.hoverAtom);\n        }\n        let effects = this.sketchEffects(mol);\n        this.layout = new ArrangeMolecule(mol, this, this.policy, effects);\n        this.layout.setWantArtifacts(this.viewOpt.showArtifacts);\n        this.layout.arrange();\n    }\n    redrawMetaVector() {\n        this.metavec = new MetaVector();\n        new DrawMolecule(this.layout, this.metavec).draw();\n        if (this.hoverAtom > 0 && MolUtil.hasAbbrev(this.mol, this.hoverAtom)) {\n            let abbrevMol = MolUtil.getAbbrev(this.mol, this.hoverAtom);\n            this.orientAbbreviation(this.hoverAtom, abbrevMol);\n            this.abbrevPolicy.data.pointScale = this.policy.data.pointScale;\n            let layout = new ArrangeMolecule(abbrevMol, this, this.abbrevPolicy, new RenderEffects());\n            layout.arrange();\n            new DrawMolecule(layout, this.metavec).draw();\n        }\n    }\n    redraw() {\n        this.filthy = false;\n        this.redrawInfo();\n        this.redrawUnder();\n        this.redrawMolecule();\n        this.redrawOver();\n    }\n    redrawInfo() {\n        let cacheKey = JSON.stringify([this.width, this.height, this.mol.toString()]);\n        if (cacheKey == this.redrawCacheKey)\n            return;\n        this.redrawCacheKey = cacheKey;\n        this.divInfo.empty();\n        this.divInfo.css({ 'visibility': 'hidden', 'left': '0', 'top': '0' });\n        if (this.mol.numAtoms == 0)\n            return;\n        let divText = dom('<div/>').appendTo(this.divInfo);\n        divText.css({ 'display': 'inline-block', 'text-align': 'right', 'font-family': 'sans-serif', 'font-size': '80%', 'color': '#C0C0C0' });\n        let html = MolUtil.molecularFormula(this.mol, ['<sub>', '</sub>', '<sup>', '</sup>']);\n        let chg = 0;\n        for (let n = 1; n <= this.mol.numAtoms; n++)\n            chg += this.mol.atomCharge(n);\n        if (chg == -1)\n            html += '<sup>-</sup>';\n        else if (chg < -1)\n            html += `<sup>${chg}</sup>`;\n        else if (chg == 1)\n            html += '<sup>+</sup>';\n        else if (chg > 1)\n            html += `<sup>+${chg}</sup>`;\n        html += '<br>' + MolUtil.molecularWeight(this.mol).toFixed(2);\n        divText.setHTML(html);\n        setTimeout(() => {\n            let w = divText.width(), h = divText.height();\n            setBoundaryPixels(this.divInfo, this.width - w - 1, 1, w, h);\n            this.divInfo.css({ 'visibility': 'visible' });\n        }, 1);\n    }\n    redrawUnder() {\n        let HOVER_COL = 0xE0E0E0;\n        let CURRENT_COL = 0xA0A0A0, CURRENT_BORD = 0x808080;\n        let SELECT_COL = 0xC0C0C0;\n        let LASSO_COL = 0xD0D0D0;\n        let density = pixelDensity();\n        this.canvasUnder.elCanvas.width = this.width * density;\n        this.canvasUnder.elCanvas.height = this.height * density;\n        this.canvasUnder.css({ 'width': `${this.width}px`, 'height': `${this.height}px` });\n        let ctx = this.canvasUnder.elCanvas.getContext('2d');\n        ctx.save();\n        ctx.scale(density, density);\n        ctx.clearRect(0, 0, this.width, this.height);\n        if (this.hoverAtom > 0) {\n            let units = new PolymerBlock(this.mol).getUnits();\n            for (let unit of units)\n                if (unit.atoms.includes(this.hoverAtom))\n                    this.drawPolymerUnit(ctx, unit, units);\n            let sz = 0;\n            if (this.hoverAtom == this.currentAtom)\n                sz += 0.1;\n            if (this.getSelected(this.hoverAtom))\n                sz += 0.1;\n            if (this.currentBond > 0 && (this.mol.bondFrom(this.currentBond) == this.hoverAtom || this.mol.bondTo(this.currentBond) == this.hoverAtom))\n                sz += 0.1;\n            this.drawAtomShade(ctx, this.hoverAtom, HOVER_COL, -1, sz);\n        }\n        if (this.hoverBond > 0) {\n            let bfr = this.mol.bondFrom(this.hoverBond), bto = this.mol.bondTo(this.hoverBond);\n            let units = new PolymerBlock(this.mol).getUnits();\n            for (let unit of units)\n                if (unit.atoms.includes(bfr) && unit.atoms.includes(bto))\n                    this.drawPolymerUnit(ctx, unit, units);\n            let sz = 0;\n            if (this.hoverBond == this.currentBond)\n                sz += 0.1;\n            if (this.getSelected(bfr) && this.getSelected(bto))\n                sz += 0.1;\n            this.drawBondShade(ctx, this.hoverBond, HOVER_COL, -1, sz);\n        }\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let sz = n == this.currentBond ? 0.1 : 0;\n            let bfr = this.mol.bondFrom(n), bto = this.mol.bondTo(n);\n            let sfr = this.getSelected(bfr), sto = this.getSelected(bto), lfr = this.getLassoed(bfr), lto = this.getLassoed(bto);\n            if (sfr && sto)\n                this.drawBondShade(ctx, n, SELECT_COL, -1, sz);\n            else if ((sfr || lfr) && (sto || lto))\n                this.drawBondShade(ctx, n, LASSO_COL, -1, sz);\n        }\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let sz = this.currentAtom == n ? 0.1 : 0;\n            if (this.getSelected(n))\n                this.drawAtomShade(ctx, n, SELECT_COL, -1, sz);\n            else if (this.getLassoed(n))\n                this.drawAtomShade(ctx, n, LASSO_COL, -1, sz);\n        }\n        if (this.currentAtom > 0) {\n            this.drawAtomShade(ctx, this.currentAtom, CURRENT_COL, CURRENT_BORD, 0);\n        }\n        if (this.currentBond > 0) {\n            this.drawBondShade(ctx, this.currentBond, CURRENT_COL, CURRENT_BORD, 0);\n        }\n        if (this.dragType == DraggingTool.Move || (this.dragType == DraggingTool.Atom && this.opAtom > 0) || this.dragType == DraggingTool.Bond) {\n            if (this.dragGuides != null && this.dragGuides.length > 0) {\n                for (let g of this.dragGuides)\n                    for (let n = 0; n < g.x.length; n++) {\n                        let lw = this.policy.data.lineSize * this.pointScale;\n                        ctx.strokeStyle = '#C0C0C0';\n                        ctx.lineWidth = lw;\n                        drawLine(ctx, g.sourceX, g.sourceY, g.destX[n], g.destY[n]);\n                        ctx.beginPath();\n                        ctx.ellipse(g.destX[n], g.destY[n], 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n                        ctx.fillStyle = '#C0C0C0';\n                        ctx.fill();\n                    }\n            }\n        }\n        if (this.dragType == DraggingTool.Ring) {\n            let [ringX, ringY] = this.determineFauxRing();\n            let rsz = ringX == null ? 0 : ringX.length;\n            if (rsz > 0) {\n                let scale = this.pointScale;\n                let lw = this.policy.data.lineSize * scale;\n                ctx.strokeStyle = '#C0C0C0';\n                ctx.lineWidth = lw;\n                for (let n = 0; n < rsz; n++) {\n                    let nn = n < rsz - 1 ? n + 1 : 0;\n                    let x1 = this.angToX(ringX[n]), y1 = this.angToY(ringY[n]);\n                    let x2 = this.angToX(ringX[nn]), y2 = this.angToY(ringY[nn]);\n                    drawLine(ctx, x1, y1, x2, y2);\n                }\n                if (this.toolRingArom) {\n                    let cx = 0, cy = 0;\n                    for (let n = 0; n < rsz; n++) {\n                        cx += ringX[n];\n                        cy += ringY[n];\n                    }\n                    cx /= rsz;\n                    cy /= rsz;\n                    let rad = 0;\n                    for (let n = 0; n < rsz; n++)\n                        rad += norm_xy(ringX[n] - cx, ringY[n] - cy);\n                    rad = this.angToScale(rad * 0.5 / rsz);\n                    ctx.beginPath();\n                    ctx.ellipse(this.angToX(cx), this.angToY(cy), rad, rad, 0, 0, TWOPI, false);\n                    ctx.stroke();\n                }\n            }\n        }\n        ctx.restore();\n    }\n    redrawMolecule() {\n        let density = pixelDensity();\n        this.canvasMolecule.elCanvas.width = this.width * density;\n        this.canvasMolecule.elCanvas.height = this.height * density;\n        this.canvasMolecule.css({ 'width': `${this.width}px`, 'height': `${this.height}px` });\n        let ctx = this.canvasMolecule.elCanvas.getContext('2d');\n        ctx.save();\n        ctx.scale(density, density);\n        ctx.clearRect(0, 0, this.width, this.height);\n        if (this.metavec != null)\n            this.metavec.renderContext(ctx);\n        if (this.templatePerms != null) {\n            let perm = this.templatePerms[this.currentPerm];\n            if (perm.metavec != null)\n                perm.metavec.renderContext(ctx);\n        }\n        ctx.restore();\n    }\n    redrawOver() {\n        let density = pixelDensity();\n        this.canvasOver.elCanvas.width = this.width * density;\n        this.canvasOver.elCanvas.height = this.height * density;\n        this.canvasOver.css({ 'width': `${this.width}px`, 'height': `${this.height}px` });\n        let ctx = this.canvasOver.elCanvas.getContext('2d');\n        ctx.save();\n        ctx.scale(density, density);\n        ctx.clearRect(0, 0, this.width, this.height);\n        if ((this.dragType == DraggingTool.Lasso || this.dragType == DraggingTool.Erasor) && this.lassoX.length > 1) {\n            let erasing = this.dragType == DraggingTool.Erasor;\n            let path = new Path2D();\n            path.moveTo(this.lassoX[0], this.lassoY[0]);\n            for (let n = 1; n < this.lassoX.length; n++)\n                path.lineTo(this.lassoX[n], this.lassoY[n]);\n            path.closePath();\n            ctx.fillStyle = colourCanvas(erasing ? 0xD0FF0000 : 0xF0000000);\n            ctx.fill(path);\n            ctx.strokeStyle = erasing ? '#804040' : '#808080';\n            ctx.lineWidth = 0.5;\n            ctx.stroke(path);\n        }\n        if (this.dragType == DraggingTool.Rotate) {\n            let [x0, y0, theta, magnitude] = this.determineDragTheta();\n            let scale = this.pointScale;\n            let lw = this.policy.data.lineSize * scale;\n            ctx.strokeStyle = '#E0E0E0';\n            ctx.lineWidth = 0.5 * lw;\n            drawLine(ctx, x0, y0, x0 + magnitude, y0);\n            ctx.strokeStyle = '#808080';\n            ctx.lineWidth = lw;\n            drawLine(ctx, x0, y0, x0 + magnitude * Math.cos(theta), y0 + magnitude * Math.sin(theta));\n            ctx.beginPath();\n            ctx.ellipse(x0, y0, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n            ctx.fillStyle = '#808080';\n            ctx.fill();\n            for (let atom of this.subjectAtoms(true, false)) {\n                let ax = this.angToX(this.mol.atomX(atom)), ay = this.angToY(this.mol.atomY(atom));\n                let ang = Math.atan2(ay - y0, ax - x0), dist = norm_xy(ax - x0, ay - y0);\n                let nx = x0 + dist * Math.cos(ang + theta), ny = y0 + dist * Math.sin(ang + theta);\n                ctx.beginPath();\n                ctx.ellipse(nx, ny, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n                ctx.strokeStyle = 'black';\n                ctx.lineWidth = 0.5;\n                ctx.stroke();\n            }\n        }\n        if (this.dragType == DraggingTool.Move) {\n            let [dx, dy] = this.determineMoveDelta();\n            let scale = this.pointScale;\n            let lw = this.policy.data.lineSize * scale;\n            for (let atom of this.subjectAtoms(false, true)) {\n                let ax = this.angToX(this.mol.atomX(atom)), ay = this.angToY(this.mol.atomY(atom));\n                ctx.beginPath();\n                ctx.ellipse(ax + dx, ay + dy, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n                ctx.strokeStyle = 'black';\n                ctx.lineWidth = 0.5;\n                ctx.stroke();\n            }\n        }\n        if ((this.dragType == DraggingTool.Atom && this.opAtom > 0) || this.dragType == DraggingTool.Bond) {\n            let element = this.dragType == DraggingTool.Atom ? this.toolAtomSymbol : 'C';\n            let order = this.dragType == DraggingTool.Bond ? this.toolBondOrder : 1;\n            let type = this.dragType == DraggingTool.Bond ? this.toolBondType : Molecule.BONDTYPE_NORMAL;\n            this.drawOriginatingBond(ctx, element, order, type);\n        }\n        if (this.viewOpt.showQuery)\n            this.drawQueryFeatures(ctx);\n        ctx.restore();\n    }\n    subjectAtoms(allIfNone = false, useOpAtom = false) {\n        let atoms = [];\n        if (this.selectedMask != null) {\n            for (let n = 0; n < this.selectedMask.length; n++)\n                if (this.selectedMask[n])\n                    atoms.push(n + 1);\n            if (atoms.length > 0)\n                return atoms;\n        }\n        if (this.currentAtom > 0)\n            atoms.push(this.currentAtom);\n        else if (this.currentBond > 0) {\n            atoms.push(this.mol.bondFrom(this.currentBond));\n            atoms.push(this.mol.bondTo(this.currentBond));\n        }\n        if (useOpAtom && atoms.length == 0 && this.opAtom > 0)\n            atoms.push(this.opAtom);\n        if (allIfNone && atoms.length == 0) {\n            for (let n = 1; n <= this.mol.numAtoms; n++)\n                atoms.push(n);\n        }\n        return atoms;\n    }\n    updateLasso(x, y) {\n        if (this.dragType != DraggingTool.Lasso && this.dragType != DraggingTool.Erasor)\n            return;\n        if (x < 0 || y < 0 || x > this.width || y > this.height) {\n            this.dragType = DraggingTool.None;\n            this.lassoX = null;\n            this.lassoY = null;\n            this.lassoMask = null;\n            this.delayedRedraw();\n        }\n        let len = Vec.len(this.lassoX);\n        if (len > 0 && this.lassoX[len - 1] == x && this.lassoY[len - 1] == y)\n            return;\n        this.lassoX.push(x);\n        this.lassoY.push(y);\n        this.calculateLassoMask();\n        this.delayedRedraw();\n    }\n    calculateLassoMask() {\n        this.lassoMask = new Array(this.mol.numAtoms);\n        for (let n = 0; n < this.mol.numAtoms; n++)\n            this.lassoMask[n] = false;\n        for (let n = 0; n < this.layout.numPoints(); n++) {\n            let p = this.layout.getPoint(n);\n            if (p.anum == 0)\n                continue;\n            this.lassoMask[p.anum - 1] = GeomUtil.pointInPolygon(p.oval.cx, p.oval.cy, this.lassoX, this.lassoY);\n        }\n    }\n    drawAtomShade(ctx, atom, fillCol, borderCol, anghalo) {\n        if (this.layout == null)\n            return;\n        let p = null;\n        for (let n = 0; n < this.layout.numPoints(); n++)\n            if (this.layout.getPoint(n).anum == atom) {\n                p = this.layout.getPoint(n);\n                break;\n            }\n        if (p == null)\n            return;\n        let minRad = 0.2 * this.pointScale, minRadSq = sqr(minRad);\n        let cx = p.oval.cx, cy = p.oval.cy;\n        let rad = Math.max(minRad, Math.max(p.oval.rw, p.oval.rh)) + (0.1 + anghalo) * this.pointScale;\n        if (fillCol != -1) {\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rad, rad, 0, 0, TWOPI, true);\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.fill();\n        }\n        if (borderCol != -1) {\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rad, rad, 0, 0, TWOPI, true);\n            ctx.strokeStyle = colourCanvas(borderCol);\n            ctx.lineWidth = 1;\n            ctx.stroke();\n        }\n    }\n    drawBondShade(ctx, bond, fillCol, borderCol, anghalo) {\n        if (this.layout == null)\n            return;\n        let x1 = 0, y1 = 0, x2 = 0, y2 = 0, nb = 0, sz = 0;\n        for (let n = 0; n < this.layout.numLines(); n++) {\n            let l = this.layout.getLine(n);\n            if (l.bnum != bond)\n                continue;\n            x1 += l.line.x1;\n            y1 += l.line.y1;\n            x2 += l.line.x2;\n            y2 += l.line.y2;\n            nb++;\n            sz += l.size + (0.2 + anghalo) * this.pointScale;\n        }\n        if (nb == 0)\n            return;\n        let invNB = 1 / nb;\n        sz *= invNB;\n        x1 *= invNB;\n        y1 *= invNB;\n        x2 *= invNB;\n        y2 *= invNB;\n        let dx = x2 - x1, dy = y2 - y1, invDist = 1 / norm_xy(dx, dy);\n        dx *= invDist;\n        dy *= invDist;\n        let ox = dy, oy = -dx;\n        let path = new Path2D(), mx, my, CIRC = 0.8;\n        path.moveTo(x1 + ox * sz, y1 + oy * sz);\n        mx = x1 + (ox * sz - dx * sz) * CIRC;\n        my = y1 + (oy * sz - dy * sz) * CIRC;\n        path.quadraticCurveTo(mx, my, x1 - dx * sz, y1 - dy * sz);\n        mx = x1 + (-ox * sz - dx * sz) * CIRC;\n        my = y1 + (-oy * sz - dy * sz) * CIRC;\n        path.quadraticCurveTo(mx, my, x1 - ox * sz, y1 - oy * sz);\n        path.lineTo(x2 - ox * sz, y2 - oy * sz);\n        mx = x2 + (-ox * sz + dx * sz) * CIRC;\n        my = y2 + (-oy * sz + dy * sz) * CIRC;\n        path.quadraticCurveTo(mx, my, x2 + dx * sz, y2 + dy * sz);\n        mx = x2 + (ox * sz + dx * sz) * CIRC;\n        my = y2 + (oy * sz + dy * sz) * CIRC;\n        path.quadraticCurveTo(mx, my, x2 + ox * sz, y2 + oy * sz);\n        path.closePath();\n        if (fillCol != -1) {\n            ctx.beginPath();\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.fill(path);\n        }\n        if (borderCol != -1) {\n            ctx.beginPath();\n            ctx.strokeStyle = colourCanvas(borderCol);\n            ctx.lineWidth = 1;\n            ctx.stroke(path);\n        }\n    }\n    drawOriginatingBond(ctx, element, order, type) {\n        let x1 = this.clickX, y1 = this.clickY;\n        if (this.opAtom > 0) {\n            x1 = this.angToX(this.mol.atomX(this.opAtom));\n            y1 = this.angToY(this.mol.atomY(this.opAtom));\n        }\n        else if (this.opBond > 0) {\n            let [bfr, bto] = this.mol.bondFromTo(this.opBond);\n            x1 = this.angToX(0.5 * (this.mol.atomX(bfr) + this.mol.atomX(bto)));\n            y1 = this.angToY(0.5 * (this.mol.atomY(bfr) + this.mol.atomY(bto)));\n        }\n        let x2 = this.mouseX, y2 = this.mouseY;\n        let snapTo = this.snapToGuide(x2, y2), snapAtom = false;\n        if (snapTo)\n            [x2, y2, snapAtom] = snapTo;\n        let scale = this.pointScale;\n        ctx.strokeStyle = snapAtom ? '#4040FF' : '#808080';\n        ctx.lineWidth = this.policy.data.lineSize * scale * (snapAtom ? 1.5 : 1);\n        drawLine(ctx, x1, y1, x2, y2);\n        if (element != 'C') {\n            let fh = this.policy.data.fontSize * scale;\n            ctx.font = fontSansSerif(fh);\n            let metrics = ctx.measureText(element);\n            ctx.fillStyle = '#808080';\n            ctx.fillText(element, x2 - 0.5 * metrics.width, y2 + 0.5 * fh);\n        }\n    }\n    drawQueryFeatures(ctx) {\n        const { layout, mol } = this;\n        let annots = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (QueryUtil.hasAnyQueryAtom(mol, n)) {\n                let bits = [];\n                for (let xtra of mol.atomExtra(n))\n                    if (xtra.startsWith('q'))\n                        bits.push(xtra);\n                let ap = layout.getPoint(n - 1);\n                annots.push({ txt: bits.join(','), x: ap.oval.cx + ap.oval.rw, y: ap.oval.cy });\n            }\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (QueryUtil.hasAnyQueryBond(mol, n)) {\n                let bits = [];\n                for (let xtra of mol.bondExtra(n))\n                    if (xtra.startsWith('q') && !xtra.startsWith(QueryTypeBond.Orders))\n                        bits.push(xtra);\n                let num = 0, cx = 0, cy = 0;\n                for (let bl of layout.getLines())\n                    if (bl.bnum == n) {\n                        num += 2;\n                        cx += bl.line.x1 + bl.line.x2;\n                        cy += bl.line.y1 + bl.line.y2;\n                    }\n                annots.push({ txt: bits.join(','), x: cx / num, y: cy / num });\n            }\n        let fh = 0.7 * this.policy.data.fontSize * this.pointScale;\n        for (let annot of annots) {\n            ctx.font = fontSansSerif(fh);\n            ctx.fillStyle = '#FF40C0';\n            ctx.fillText(annot.txt, annot.x, annot.y);\n        }\n    }\n    drawPolymerUnit(ctx, unit, allUnits) {\n        const { mol, layout } = this;\n        let x = [], y = [];\n        let scale = this.pointScale;\n        for (let a of unit.atoms) {\n            let pt = layout.getPoint(a - 1);\n            let rad = Math.max(0.5 * scale, Math.max(pt.oval.rw, pt.oval.rh));\n            const NPT = 36, THPT = TWOPI / NPT;\n            for (let n = 0; n < NPT; n++) {\n                let th = n * THPT;\n                x.push(pt.oval.cx + rad * Math.cos(th));\n                y.push(pt.oval.cy + rad * Math.sin(th));\n            }\n        }\n        let extBonds = [], inAtoms = [], outAtoms = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let flag1 = unit.atoms.includes(bfr), flag2 = unit.atoms.includes(bto);\n            if (!flag1 && !flag2)\n                continue;\n            if (!flag2) {\n                extBonds.push(n);\n                inAtoms.push(bfr);\n                outAtoms.push(bto);\n            }\n            else if (!flag1) {\n                extBonds.push(n);\n                inAtoms.push(bto);\n                outAtoms.push(bfr);\n            }\n            let pt1 = layout.getPoint(bfr - 1), pt2 = layout.getPoint(bto - 1);\n            let x1 = pt1.oval.cx, y1 = pt1.oval.cy, x2 = pt2.oval.cx, y2 = pt2.oval.cy;\n            if (!flag1)\n                [x1, y1] = [0.5 * (x1 + x2), 0.5 * (y1 + y2)];\n            else if (!flag2)\n                [x2, y2] = [0.5 * (x1 + x2), 0.5 * (y1 + y2)];\n            let dx = x2 - x1, dy = y2 - y1, d = norm_xy(dx, dy), invD = invZ(d);\n            let ox = dy * invD * 0.3 * scale, oy = -dx * invD * 0.3 * scale;\n            let npWidth = Math.ceil(2 * d / scale) + 1, npHeight = Math.ceil(2 * norm_xy(ox, oy) / scale) + 1;\n            for (let n = 0; n <= npWidth; n++) {\n                x.push(x1 - ox + dx * n / npWidth);\n                y.push(y1 - oy + dy * n / npWidth);\n                x.push(x1 + ox + dx * n / npWidth);\n                y.push(y1 + oy + dy * n / npWidth);\n            }\n            for (let n = 1; n < npHeight; n++) {\n                x.push(x1 - ox + 2 * ox * n / npHeight);\n                y.push(y1 - oy + 2 * oy * n / npHeight);\n                x.push(x2 - ox + 2 * ox * n / npHeight);\n                y.push(y2 - oy + 2 * oy * n / npHeight);\n            }\n        }\n        let [px, py] = GeomUtil.outlinePolygon(x, y, 0.5 * scale);\n        let path = new Path2D();\n        path.moveTo(px[0], py[0]);\n        for (let n = 1; n < px.length; n++)\n            path.lineTo(px[n], py[n]);\n        path.closePath();\n        ctx.save();\n        ctx.fillStyle = '#F9EFFF';\n        ctx.fill(path);\n        ctx.strokeStyle = '#C0C0C0';\n        ctx.lineWidth = 1;\n        ctx.stroke(path);\n        ctx.restore();\n        let selfLinks = [];\n        let innerLinks = [];\n        let outerLinks = [];\n        if (Vec.len(unit.bondConn) == 4) {\n            innerLinks.push([inAtoms[extBonds.indexOf(unit.bondConn[0])], inAtoms[extBonds.indexOf(unit.bondConn[2])]]);\n            innerLinks.push([inAtoms[extBonds.indexOf(unit.bondConn[1])], inAtoms[extBonds.indexOf(unit.bondConn[3])]]);\n        }\n        else if (Vec.len(extBonds) == 2 && unit.connect != null) {\n            if (unit.connect == PolymerBlockConnectivity.HeadToTail || unit.connect == PolymerBlockConnectivity.Random) {\n                innerLinks.push([inAtoms[0], inAtoms[1]]);\n            }\n            if (unit.connect == PolymerBlockConnectivity.HeadToHead || unit.connect == PolymerBlockConnectivity.Random) {\n                selfLinks.push(inAtoms[0]);\n                selfLinks.push(inAtoms[1]);\n            }\n        }\n        else {\n            for (let b of extBonds) {\n                let a1 = mol.bondFrom(b), a2 = mol.bondTo(b);\n                if (unit.atoms.includes(a2))\n                    [a1, a2] = [a2, a1];\n                let incl = unit.bondIncl.get(b), excl = unit.bondExcl.get(b);\n                let isCapped = mol.atomElement(a2) != POLYMERBLOCK_SPECIAL_UNCAPPED;\n                for (let look of (isCapped ? [unit] : allUnits))\n                    for (let a of look.atoms) {\n                        let isExt = false;\n                        for (let adj of mol.atomAdjList(a))\n                            if (!look.atoms.includes(adj)) {\n                                isExt = true;\n                                break;\n                            }\n                        if (!isExt)\n                            continue;\n                        if (Vec.notBlank(incl)) {\n                            let anames = look.atomName.get(a), any = false;\n                            if (anames)\n                                for (let an of anames)\n                                    any = any || incl.includes(an);\n                            if (!any)\n                                continue;\n                        }\n                        if (Vec.notBlank(excl)) {\n                            let anames = look.atomName.get(a), any = false;\n                            if (anames)\n                                for (let an of anames)\n                                    any = any || excl.includes(an);\n                            if (any)\n                                continue;\n                        }\n                        if (a == a1)\n                            selfLinks.push(a1);\n                        else if (unit === look)\n                            innerLinks.push([a1, a]);\n                        else\n                            outerLinks.push([a1, a]);\n                    }\n            }\n        }\n        selfLinks = Vec.uniqueStable(selfLinks);\n        innerLinks = Vec.maskGet(innerLinks, Vec.maskUnique(innerLinks.map((pair) => Vec.min(pair) * mol.numAtoms + Vec.max(pair))));\n        outerLinks = Vec.maskGet(outerLinks, Vec.maskUnique(outerLinks.map((pair) => Vec.min(pair) * mol.numAtoms + Vec.max(pair))));\n        ctx.save();\n        ctx.strokeStyle = '#6329C1';\n        ctx.lineWidth = 2;\n        ctx.setLineDash([1, 1]);\n        ctx.beginPath();\n        for (let a of selfLinks) {\n            let p1 = layout.getPoint(a - 1), x1 = p1.oval.cx, y1 = p1.oval.cy;\n            let x2 = 0, y2 = 0, num = 0;\n            for (let n = 0; n < extBonds.length; n++)\n                if (inAtoms[n] == a) {\n                    let p2 = layout.getPoint(outAtoms[n] - 1);\n                    x2 += p2.oval.cx;\n                    y2 += p2.oval.cy;\n                    num++;\n                }\n            if (num > 1) {\n                x2 /= num;\n                y2 /= num;\n            }\n            x2 = x1 + 0.5 * (x2 - x1);\n            y2 = y1 + 0.5 * (y2 - y1);\n            let dx = x2 - x1, dy = y2 - y1, invD = invZ(norm_xy(dx, dy)), ox = dy * invD, oy = -dx * invD;\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2);\n            const EXT = 2 * scale;\n            ctx.moveTo(x1, y1);\n            ctx.quadraticCurveTo(cx + ox * EXT, cy + oy * EXT, x2, y2);\n            ctx.quadraticCurveTo(cx - ox * EXT, cy - oy * EXT, x1, y1);\n        }\n        for (let [a1, a2] of innerLinks) {\n            let x1 = mol.atomX(a1), y1 = mol.atomY(a1), x2 = mol.atomX(a2), y2 = mol.atomY(a2);\n            let dx = x2 - x1, dy = y2 - y1, invD = invZ(norm_xy(dx, dy)), ox = dy * invD, oy = -dx * invD;\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2);\n            const EXT = 5;\n            let px1 = cx + ox * EXT, py1 = cy + oy * EXT, px2 = cx - ox * EXT, py2 = cy - oy * EXT;\n            let [px, py] = CoordUtil.congestionPoint(mol, px1, py1) < CoordUtil.congestionPoint(mol, px2, py2) ? [px1, py1] : [px2, py2];\n            ctx.moveTo(this.angToX(x1), this.angToY(y1));\n            ctx.quadraticCurveTo(this.angToX(px), this.angToY(py), this.angToX(x2), this.angToY(y2));\n        }\n        for (let [a1, a2] of outerLinks) {\n            let p1 = layout.getPoint(a1 - 1), p2 = layout.getPoint(a2 - 1);\n            ctx.moveTo(p1.oval.cx, p1.oval.cy);\n            ctx.lineTo(p2.oval.cx, p2.oval.cy);\n        }\n        ctx.stroke();\n        ctx.restore();\n    }\n    determineFauxRing() {\n        let atom = this.opAtom, bond = this.opBond, mol = this.mol;\n        let x1 = atom > 0 ? mol.atomX(atom) : bond > 0 ? 0.5 * (mol.atomX(mol.bondFrom(bond)) + mol.atomX(mol.bondTo(bond))) : this.xToAng(this.clickX);\n        let y1 = atom > 0 ? mol.atomY(atom) : bond > 0 ? 0.5 * (mol.atomY(mol.bondFrom(bond)) + mol.atomY(mol.bondTo(bond))) : this.yToAng(this.clickY);\n        let x2 = this.xToAng(this.mouseX), y2 = this.yToAng(this.mouseY), dx = x2 - x1, dy = y2 - y1;\n        let rsz = Math.min(9, Math.round(norm_xy(dx, dy) * 2 / Molecule.IDEALBOND) + 2);\n        if (rsz < 3) { }\n        else if (bond > 0)\n            return SketchUtil.proposeBondRing(mol, rsz, bond, dx, dy);\n        else if (atom > 0 && mol.atomAdjCount(atom) > 0 && !this.toolRingFreeform)\n            return SketchUtil.proposeAtomRing(mol, rsz, atom, dx, dy);\n        else\n            return SketchUtil.proposeNewRing(mol, rsz, x1, y1, dx, dy, !this.toolRingFreeform);\n        return [null, null];\n    }\n    determineDragTheta() {\n        let x0 = this.clickX, y0 = this.clickY;\n        let snap = this.snapToGuide(x0, y0);\n        if (snap != null) {\n            x0 = snap[0];\n            y0 = snap[1];\n        }\n        let theta = Math.atan2(this.mouseY - y0, this.mouseX - x0), magnitude = norm_xy(this.mouseX - x0, this.mouseY - y0);\n        if (this.toolRotateIncr > 0)\n            theta = Math.round(theta / this.toolRotateIncr) * this.toolRotateIncr;\n        return [x0, y0, theta, magnitude];\n    }\n    determineMoveDelta() {\n        let x1 = this.clickX, y1 = this.clickY, x2 = this.mouseX, y2 = this.mouseY;\n        if (this.opAtom > 0) {\n            x1 = this.angToX(this.mol.atomX(this.opAtom));\n            y1 = this.angToY(this.mol.atomY(this.opAtom));\n            let snap = this.snapToGuide(x2, y2);\n            if (snap != null) {\n                x2 = snap[0];\n                y2 = snap[1];\n            }\n        }\n        return [x2 - x1, y2 - y1];\n    }\n    snapToGuide(x, y) {\n        if (this.opBond > 0) {\n            let obj = this.pickObject(x, y);\n            if (obj < 0) {\n                let [bfr, bto] = this.mol.bondFromTo(-obj);\n                let px = this.angToX(0.5 * (this.mol.atomX(bfr) + this.mol.atomX(bto)));\n                let py = this.angToY(0.5 * (this.mol.atomY(bfr) + this.mol.atomY(bto)));\n                return [px, py, false];\n            }\n            return null;\n        }\n        let bestDSQ = Number.POSITIVE_INFINITY, bestX = 0, bestY = 0, bestAtom = false;\n        const APPROACH = sqr(0.5 * this.pointScale);\n        if (this.dragGuides != null)\n            for (let i = 0; i < this.dragGuides.length; i++)\n                for (let j = 0; j < this.dragGuides[i].x.length; j++) {\n                    let px = this.dragGuides[i].destX[j], py = this.dragGuides[i].destY[j];\n                    let dsq = norm2_xy(px - x, py - y);\n                    if (dsq < APPROACH && dsq < bestDSQ)\n                        [bestDSQ, bestX, bestY, bestAtom] = [dsq, px, py, false];\n                }\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let px = this.angToX(this.mol.atomX(n)), py = this.angToY(this.mol.atomY(n));\n            let dsq = norm2_xy(px - x, py - y);\n            if (dsq < APPROACH && dsq < bestDSQ)\n                [bestDSQ, bestX, bestY, bestAtom] = [dsq, px, py, true];\n        }\n        if (isFinite(bestDSQ))\n            return [bestX, bestY, bestAtom];\n        return null;\n    }\n    pickObjectCanvas(x, y, opt = {}) {\n        let limitDist = 0.5 * this.pointScale;\n        let bestItem = 0, bestScore = Number.POSITIVE_INFINITY;\n        if (!opt.noAtoms)\n            for (let n = 0; n < this.layout.numPoints(); n++) {\n                let p = this.layout.getPoint(n);\n                if (p.anum == 0)\n                    continue;\n                let dx = Math.abs(x - p.oval.cx), dy = Math.abs(y - p.oval.cy);\n                let dsq = norm2_xy(dx, dy);\n                let limitDSQ = sqr(Math.max(limitDist, Math.max(p.oval.rw, p.oval.rh)));\n                if (dsq > limitDSQ)\n                    continue;\n                if (dsq < bestScore) {\n                    bestItem = p.anum;\n                    bestScore = dsq;\n                }\n            }\n        if (bestItem != 0)\n            return bestItem;\n        if (!opt.noBonds)\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let l = this.layout.getLine(n);\n                if (l.bnum == 0)\n                    continue;\n                let x1 = l.line.x1, y1 = l.line.y1;\n                let x2 = l.line.x2, y2 = l.line.y2;\n                if (x < Math.min(x1, x2) - limitDist || y < Math.min(y1, y2) - limitDist ||\n                    x > Math.max(x1, x2) + limitDist || y > Math.max(y1, y2) + limitDist)\n                    continue;\n                let dist = GeomUtil.pointLineSegDistance(x, y, x1, y1, x2, y2);\n                if (dist > limitDist)\n                    continue;\n                if (dist < bestScore) {\n                    bestItem = -l.bnum;\n                    bestScore = dist;\n                }\n            }\n        return bestItem;\n    }\n    pickObject(x, y, opt = {}) {\n        return this.pickObjectCanvas(x, y, opt) || 0;\n    }\n    sketchEffects(mol) {\n        let effects = new RenderEffects();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n) && n != this.hoverAtom)\n                effects.dottedRectOutline[n] = 0x808080;\n        effects.overlapAtoms = CoordUtil.overlappingAtomList(mol, 0.2);\n        effects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n        effects.atomDecoCol = Vec.numberArray(Theme.foreground, mol.numAtoms);\n        effects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n        effects.bondDecoText = Vec.stringArray('', mol.numBonds);\n        effects.bondDecoCol = Vec.numberArray(Theme.foreground, mol.numBonds);\n        effects.bondDecoSize = Vec.numberArray(0.3, mol.numBonds);\n        if (this.viewOpt.showOxState) {\n            for (let n = 1; n <= mol.numAtoms; n++) {\n                let ox = MolUtil.atomOxidationState(mol, n);\n                if (ox != null) {\n                    effects.atomDecoText[n - 1] = MolUtil.oxidationStateText(ox);\n                    effects.atomDecoCol[n - 1] = 0xFF8080;\n                }\n            }\n        }\n        if (this.viewOpt.decoration == DrawCanvasDecoration.Stereochemistry) {\n            if (!this.stereo)\n                this.stereo = Stereochemistry.create(MetaMolecule.createStrict(mol));\n            skip: for (let n = 1; n <= mol.numAtoms; n++) {\n                let chi = this.stereo.atomTetraChirality(n);\n                if (chi == Stereochemistry.STEREO_NONE)\n                    continue;\n                for (let adjb of mol.atomAdjBonds(n))\n                    if (mol.bondOrder(adjb) != 1)\n                        continue skip;\n                if (chi == Stereochemistry.STEREO_UNKNOWN) {\n                    for (let adj of mol.atomAdjList(n))\n                        if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(adj)] >= 3)\n                            continue skip;\n                }\n                effects.atomDecoText[n - 1] = chi == Stereochemistry.STEREO_POS ? 'R' :\n                    chi == Stereochemistry.STEREO_NEG ? 'S' :\n                        chi == Stereochemistry.STEREO_UNKNOWN ? 'R/S' : '?';\n                effects.atomDecoCol[n - 1] = 0x00A000;\n            }\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let side = this.stereo.bondSideStereo(n);\n                if (side == Stereochemistry.STEREO_NONE)\n                    continue;\n                effects.bondDecoText[n - 1] = side == Stereochemistry.STEREO_POS ? 'Z' :\n                    side == Stereochemistry.STEREO_NEG ? 'E' :\n                        side == Stereochemistry.STEREO_UNKNOWN ? 'Z/E' : '?';\n                effects.bondDecoCol[n - 1] = 0x00A000;\n            }\n        }\n        else if (this.viewOpt.decoration == DrawCanvasDecoration.MappingNumber) {\n            effects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n            effects.atomDecoCol = Vec.numberArray(0x8000FF, mol.numAtoms);\n            effects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomMapNum(n) > 0)\n                    effects.atomDecoText[n - 1] = mol.atomMapNum(n).toString();\n        }\n        else if (this.viewOpt.decoration == DrawCanvasDecoration.AtomIndex) {\n            effects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n            effects.atomDecoCol = Vec.numberArray(0x8000FF, mol.numAtoms);\n            effects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                effects.atomDecoText[n - 1] = n.toString();\n        }\n        return effects;\n    }\n    orientAbbreviation(abbrevAtom, abbrevMol) {\n        const { mol } = this;\n        if (MolUtil.isBlank(abbrevMol))\n            return;\n        if (this.mol.atomAdjCount(abbrevAtom) != 1)\n            return;\n        let nbr = mol.atomAdjList(abbrevAtom)[0];\n        let vx1 = mol.atomX(abbrevAtom) - mol.atomX(nbr), vy1 = mol.atomY(abbrevAtom) - mol.atomY(nbr);\n        let adj = abbrevMol.atomAdjList(1);\n        let vx2 = 0, vy2 = 0, inv = invZ(adj.length);\n        for (let a of adj) {\n            vx2 += abbrevMol.atomX(a) - abbrevMol.atomX(1);\n            vy2 += abbrevMol.atomY(a) - abbrevMol.atomY(1);\n        }\n        vx2 *= inv;\n        vy2 *= inv;\n        let th1 = Math.atan2(vy1, vx1), th2 = Math.atan2(vy2, vx2);\n        CoordUtil.rotateMolecule(abbrevMol, th1 - th2);\n        if (adj.length == 1) {\n            CoordUtil.translateMolecule(abbrevMol, mol.atomX(abbrevAtom) - abbrevMol.atomX(adj[0]), mol.atomY(abbrevAtom) - abbrevMol.atomY(adj[0]));\n            abbrevMol.setAtomPos(1, mol.atomX(nbr), mol.atomY(nbr));\n        }\n        else {\n            CoordUtil.translateMolecule(abbrevMol, mol.atomX(nbr) - abbrevMol.atomX(1), mol.atomY(nbr) - abbrevMol.atomY(1));\n        }\n        for (let b of abbrevMol.atomAdjBonds(1)) {\n            let a = abbrevMol.bondOther(b, 1);\n            if (abbrevMol.atomHExplicit(a) != Molecule.HEXPLICIT_UNKNOWN)\n                continue;\n            abbrevMol.setAtomHExplicit(a, Math.max(0, abbrevMol.atomHydrogens(a)));\n        }\n        abbrevMol.deleteAtomAndBonds(1);\n    }\n}\n//# sourceMappingURL=DrawCanvas.js.map","import { MetaVector } from '../gfx/MetaVector';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nimport { GeomUtil } from '../util/Geom';\nimport { Theme } from '../util/Theme';\nimport { angleDiff, DEGRAD, eventCoords, norm_xy, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport var GeomWidgetType;\n(function (GeomWidgetType) {\n    GeomWidgetType[GeomWidgetType[\"Atom\"] = 0] = \"Atom\";\n    GeomWidgetType[GeomWidgetType[\"Bond\"] = 1] = \"Bond\";\n})(GeomWidgetType || (GeomWidgetType = {}));\nexport var GeomWidgetSelType;\n(function (GeomWidgetSelType) {\n    GeomWidgetSelType[GeomWidgetSelType[\"Position\"] = 0] = \"Position\";\n    GeomWidgetSelType[GeomWidgetSelType[\"Link\"] = 1] = \"Link\";\n    GeomWidgetSelType[GeomWidgetSelType[\"Torsion\"] = 2] = \"Torsion\";\n})(GeomWidgetSelType || (GeomWidgetSelType = {}));\nexport class GeomWidget extends Widget {\n    constructor(type, mol, idx) {\n        super();\n        this.type = type;\n        this.mol = mol;\n        this.idx = idx;\n        this.posX = [];\n        this.posY = [];\n        this.linkA = [];\n        this.linkB = [];\n        this.torsA = [];\n        this.torsB = [];\n        this.hovered = null;\n        if (type == GeomWidgetType.Atom) {\n            const atom = idx;\n            let adj = mol.atomAdjList(atom);\n            this.atomSubset = [atom, ...adj];\n            for (let b of mol.atomAdjBonds(atom)) {\n                this.linkA.push(0);\n                this.linkB.push(this.atomSubset.indexOf(mol.bondOther(b, atom)));\n            }\n            let theta = [];\n            for (let a of adj)\n                theta.push(Math.atan2(-(mol.atomY(a) - mol.atomY(atom)), mol.atomX(a) - mol.atomX(atom)));\n            let order = Vec.idxSort(theta);\n            for (let n = 0; n < order.length; n++) {\n                this.torsA.push(order[n] + 1);\n                this.torsB.push(order[n < order.length - 1 ? n + 1 : 0] + 1);\n            }\n            this.selected = { type: GeomWidgetSelType.Position, idx: 0 };\n        }\n        else {\n            const bond = idx;\n            let a1 = mol.bondFrom(bond), a2 = mol.bondTo(bond);\n            this.atomSubset = [...mol.atomAdjList(a1), ...mol.atomAdjList(a2)];\n            let link = (a1, a2) => {\n                this.linkA.push(this.atomSubset.indexOf(a1));\n                this.linkB.push(this.atomSubset.indexOf(a2));\n            };\n            link(a1, a2);\n            for (let a of mol.atomAdjList(a1))\n                if (a != a2)\n                    link(a1, a);\n            for (let a of mol.atomAdjList(a2))\n                if (a != a1)\n                    link(a2, a);\n            this.selected = { type: GeomWidgetSelType.Link, idx: 0 };\n        }\n    }\n    render(parent) {\n        super.render(parent);\n        let divOuter = dom('<div/>').appendTo(this.contentDOM).css({ 'text-align': 'center' });\n        this.divDiagram = dom('<div/>').appendTo(divOuter).css({ 'display': 'inline-block' });\n        this.contentDOM.onClick((event) => this.mouseClick(eventCoords(event, this.divDiagram)));\n        this.contentDOM.onMouseMove((event) => this.mouseMove(eventCoords(event, this.divDiagram)));\n        this.redraw();\n    }\n    selectionAtoms(sel) {\n        const atoms = this.atomSubset;\n        if (sel.type == GeomWidgetSelType.Position)\n            return [atoms[sel.idx]];\n        if (sel.type == GeomWidgetSelType.Link)\n            return [atoms[this.linkA[sel.idx]], atoms[this.linkB[sel.idx]]];\n        if (sel.type == GeomWidgetSelType.Torsion)\n            return [atoms[0], atoms[this.torsA[sel.idx]], atoms[this.torsB[sel.idx]]];\n        return null;\n    }\n    redraw() {\n        this.divDiagram.empty();\n        let w = 250, h = 250;\n        this.posX = [];\n        this.posY = [];\n        const ANG_RAD = 0.25;\n        for (let a of this.atomSubset) {\n            this.posX.push(this.mol.atomX(a));\n            this.posY.push(this.mol.atomY(a));\n        }\n        let loX = Vec.min(this.posX) - ANG_RAD, hiX = Vec.max(this.posX) + ANG_RAD;\n        let loY = Vec.min(this.posY) - ANG_RAD, hiY = Vec.max(this.posY) + ANG_RAD;\n        this.scale = Math.min(40, Math.min((w - 4) / (hiX - loX), (h - 4) / (hiY - loY)));\n        let dx = 0.5 * (w - (hiX - loX) * this.scale), dy = 0.5 * (h - (hiY - loY) * this.scale);\n        for (let n = 0; n < this.atomSubset.length; n++) {\n            this.posX[n] = dx + (this.posX[n] - loX) * this.scale;\n            this.posY[n] = h - (dy + (this.posY[n] - loY) * this.scale);\n        }\n        this.posRad = ANG_RAD * this.scale;\n        let gfx = new MetaVector();\n        gfx.setSize(w, h);\n        let fg = Theme.foreground, bg = Theme.background, outerSel = 0x008FD1, innerSel = 0x47D5D2;\n        for (let n = 0; n < this.atomSubset.length; n++) {\n            if (this.hovered && this.hovered.type == GeomWidgetSelType.Position && this.hovered.idx == n)\n                gfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, fg, 1, bg);\n            else if (this.selected && this.selected.type == GeomWidgetSelType.Position && this.selected.idx == n)\n                gfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, outerSel, 1, innerSel);\n            else\n                gfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, MetaVector.NOCOLOUR, 0, fg);\n        }\n        for (let showsel of [1, 2, 3])\n            for (let n = 0; n < this.linkA.length; n++) {\n                let x1 = this.posX[this.linkA[n]], y1 = this.posY[this.linkA[n]];\n                let x2 = this.posX[this.linkB[n]], y2 = this.posY[this.linkB[n]];\n                if (this.hovered && this.hovered.type == GeomWidgetSelType.Link && this.hovered.idx == n) {\n                    if (showsel == 3) {\n                        gfx.drawLine(x1, y1, x2, y2, fg, this.scale * 0.1 + 2);\n                        gfx.drawLine(x1, y1, x2, y2, bg, this.scale * 0.1);\n                    }\n                }\n                else if (this.selected && this.selected.type == GeomWidgetSelType.Link && this.selected.idx == n) {\n                    if (showsel == 2) {\n                        gfx.drawLine(x1, y1, x2, y2, outerSel, this.scale * 0.1 + 2);\n                        gfx.drawLine(x1, y1, x2, y2, innerSel, this.scale * 0.1);\n                    }\n                }\n                else {\n                    if (showsel == 1)\n                        gfx.drawLine(x1, y1, x2, y2, fg, this.scale * 0.1);\n                }\n            }\n        for (let n = 0; n < this.torsA.length; n++) {\n            let cx = this.posX[0], cy = this.posY[0];\n            let dx1 = 0.5 * (this.posX[this.torsA[n]] - cx), dy1 = 0.5 * (this.posY[this.torsA[n]] - cy);\n            let dx2 = 0.5 * (this.posX[this.torsB[n]] - cx), dy2 = 0.5 * (this.posY[this.torsB[n]] - cy);\n            let rad = 0.5 * (norm_xy(dx1, dy1) + norm_xy(dx2, dy2));\n            let theta1 = Math.atan2(dy1, dx1) + 10 * DEGRAD, theta2 = Math.atan2(dy2, dx2) - 10 * DEGRAD, dtheta = angleDiff(theta2, theta1);\n            let ox1 = rad * Math.cos(theta1), oy1 = rad * Math.sin(theta1), ox2 = rad * Math.cos(theta2), oy2 = rad * Math.sin(theta2);\n            let px, py, pf;\n            if (dtheta > 0) {\n                let [ax1, ay1, ax2, ay2] = GeomUtil.arcControlPoints(rad, ox1, oy1, ox2, oy2);\n                px = Vec.add([ox1, ax1, ax2, ox2], cx);\n                py = Vec.add([oy1, ay1, ay2, oy2], cy);\n                pf = [false, true, true, false];\n            }\n            else {\n                let thetaM = theta1 + 0.5 * (dtheta + TWOPI);\n                let oxM = rad * Math.cos(thetaM), oyM = rad * Math.sin(thetaM);\n                let [ax1, ay1, ax2, ay2] = GeomUtil.arcControlPoints(rad, ox1, oy1, oxM, oyM);\n                let [ax3, ay3, ax4, ay4] = GeomUtil.arcControlPoints(rad, oxM, oyM, ox2, oy2);\n                px = Vec.add([ox1, ax1, ax2, oxM, ax3, ax4, ox2], cx);\n                py = Vec.add([oy1, ay1, ay2, oyM, ay3, ay4, oy2], cy);\n                pf = [false, true, true, false, true, true, false];\n            }\n            if (this.hovered && this.hovered.type == GeomWidgetSelType.Torsion && this.hovered.idx == n) {\n                gfx.drawPath(px, py, pf, false, fg, this.scale * 0.1 + 2, MetaVector.NOCOLOUR, false);\n                gfx.drawPath(px, py, pf, false, bg, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n            }\n            else if (this.selected && this.selected.type == GeomWidgetSelType.Torsion && this.selected.idx == n) {\n                gfx.drawPath(px, py, pf, false, outerSel, this.scale * 0.1 + 2, MetaVector.NOCOLOUR, false);\n                gfx.drawPath(px, py, pf, false, innerSel, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n            }\n            else\n                gfx.drawPath(px, py, pf, false, fg, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n        }\n        this.divDiagram.empty();\n        let svg = dom(gfx.createSVG()).appendTo(this.divDiagram).css({ 'pointer-events': 'none' });\n    }\n    mouseClick(xy) {\n        event.stopPropagation();\n        if (this.type == GeomWidgetType.Bond)\n            return;\n        let which = this.whichSelection(xy[0], xy[1]);\n        if (!which)\n            return;\n        if (!this.sameSelection(this.selected, which)) {\n            this.selected = which;\n            this.hovered = null;\n            this.redraw();\n            this.callbackSelect(which);\n        }\n    }\n    mouseMove(xy) {\n        if (this.type == GeomWidgetType.Bond)\n            return;\n        let which = this.whichSelection(xy[0], xy[1]);\n        if (which && this.sameSelection(which, this.selected))\n            which = null;\n        if (!this.sameSelection(this.hovered, which)) {\n            this.hovered = which;\n            this.redraw();\n        }\n    }\n    whichSelection(x, y) {\n        let cx = this.posX[0], cy = this.posY[0];\n        if (norm_xy(x - cx, y - cy) <= this.posRad)\n            return { type: GeomWidgetSelType.Position, idx: 0 };\n        let maxRad = 0;\n        for (let n = 1; n < this.atomSubset.length; n++)\n            maxRad = Math.max(maxRad, norm_xy(this.posX[n] - cx, this.posY[n] - cy) + this.posRad);\n        if (norm_xy(x - cx, y - cy) > maxRad)\n            return null;\n        let theta = Math.atan2(y - cy, x - cx);\n        let closeSel = null, closeDelta = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < this.linkB.length; n++) {\n            let delta = Math.abs(angleDiff(Math.atan2(this.posY[this.linkB[n]] - cy, this.posX[this.linkB[n]] - cx), theta));\n            if (delta < 10 * DEGRAD && delta < closeDelta) {\n                closeSel = { type: GeomWidgetSelType.Link, idx: n };\n                closeDelta = delta;\n            }\n        }\n        for (let n = 0; n < this.torsA.length; n++) {\n            let theta1 = Math.atan2(this.posY[this.torsA[n]] - cy, this.posX[this.torsA[n]] - cx);\n            let theta2 = Math.atan2(this.posY[this.torsB[n]] - cy, this.posX[this.torsB[n]] - cx);\n            let midtheta = theta1 + 0.5 * (angleDiff(theta2, theta1));\n            let delta = Math.abs(angleDiff(midtheta, theta));\n            if (delta < closeDelta) {\n                closeSel = { type: GeomWidgetSelType.Torsion, idx: n };\n                closeDelta = delta;\n            }\n        }\n        return closeSel;\n    }\n    sameSelection(sel1, sel2) {\n        if (sel1 == null && sel2 == null)\n            return true;\n        if (sel1 == null || sel2 == null)\n            return false;\n        return sel1.type == sel2.type && sel1.idx == sel2.idx;\n    }\n}\n//# sourceMappingURL=GeomWidget.js.map","import { dom } from '../util/dom';\nimport { hasInlineCSS, installInlineCSS, Theme } from '../util/Theme';\nimport { colourCode } from '../util/util';\nimport { Widget } from './Widget';\nexport class OptionList extends Widget {\n    constructor(options, isVertical = false) {\n        super();\n        this.options = options;\n        this.isVertical = isVertical;\n        this.padding = 6;\n        this.htmlLabels = false;\n        this.numCols = 0;\n        this.selidx = 0;\n        this.buttonDiv = [];\n        this.auxCell = [];\n        this.callbackSelect = null;\n        if (options.length == 0)\n            throw 'molsync.ui.OptionList: must provide a list of option labels.';\n        if (!hasInlineCSS('option'))\n            installInlineCSS('option', this.composeCSS());\n    }\n    getSelectedIndex() {\n        return this.selidx;\n    }\n    getSelectedValue() {\n        return this.options[this.selidx];\n    }\n    getAuxiliaryCell(idx) {\n        return this.auxCell[idx].el;\n    }\n    onSelect(callback) {\n        this.callbackSelect = callback;\n    }\n    render(parent) {\n        super.render(parent);\n        this.contentDOM.css({ 'display': 'block', 'baseline-shift': '1.5em' });\n        this.buttonDiv = [];\n        this.auxCell = [];\n        let table = dom('<table class=\"wmk-option-table\"/>').appendTo(this.contentDOM);\n        let tr = this.isVertical ? null : dom('<tr/>').appendTo(table);\n        for (let n = 0; n < this.options.length; n++) {\n            if (this.isVertical || (this.numCols > 0 && n > 0 && n % this.numCols == 0))\n                tr = dom('<tr/>').appendTo(table);\n            let td = dom('<td class=\"wmk-option-cell\"/>').appendTo(tr);\n            let div = dom('<div class=\"wmk-option\"/>').appendTo(td);\n            div.css({ 'padding': `${this.padding}px` });\n            div.onClick(() => this.clickButton(n));\n            this.buttonDiv.push(div);\n            if (this.isVertical) {\n                td = dom('<td style=\"vertical-align: middle;\"/>').appendTo(tr);\n                this.auxCell.push(td);\n            }\n        }\n        this.updateButtons();\n    }\n    clickButton(idx) {\n        if (idx == this.selidx)\n            return;\n        this.setSelectedIndex(idx);\n        if (this.callbackSelect)\n            this.callbackSelect(idx, this);\n    }\n    setSelectedIndex(idx) {\n        if (this.selidx == idx)\n            return;\n        this.selidx = idx;\n        this.updateButtons();\n    }\n    setSelectedValue(val) {\n        let idx = this.options.indexOf(val);\n        if (idx >= 0)\n            this.setSelectedIndex(idx);\n    }\n    updateButtons() {\n        for (let n = 0; n < this.options.length && n < this.buttonDiv.length; n++) {\n            let div = this.buttonDiv[n];\n            let txt = this.options[n];\n            if (txt.length == 0 && n == this.selidx)\n                div.setText('\\u00A0\\u2716\\u00A0');\n            else if (txt.length == 0)\n                div.setText('\\u00A0\\u00A0\\u00A0');\n            else if (this.htmlLabels)\n                div.setHTML(txt);\n            else\n                div.setText(txt);\n            div.removeClass('wmk-option-unselected wmk-option-selected');\n            if (n != this.selidx)\n                div.addClass('wmk-option-unselected');\n            else\n                div.addClass('wmk-option-selected');\n        }\n    }\n    composeCSS() {\n        let lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n        let highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n        return `\n\t\t\t.wmk-option\n\t\t\t{\n\t\t\t\tmargin-bottom: 0;\n\t\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tfont-weight: normal;\n\t\t\t\ttext-align: center;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\tline-height: 1.2em;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t.wmk-option-selected\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #008FD2;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\t}\n\t\t\t.wmk-option-unselected\n\t\t\t{\n\t\t\t\tcolor: #333;\n\t\t\t\tbackground-color: white;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\t}\n\t\t\t.wmk-option-unselected:hover\n\t\t\t{\n\t\t\t\tbackground-color: #808080;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #F0F0F0, #D0D0D0);\n\t\t\t}\n\t\t\t.wmk-option-unselected:active\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #00C000;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\t}\n\t\t\t.wmk-option-table\n\t\t\t{\n\t\t\t\tmargin: 1px;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-collapse: collapse;\n\t\t\t}\n\t\t\t.wmk-option-cell\n\t\t\t{\n\t\t\t\tmargin: 0;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-width: 1px;\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-color: #808080;\n\t\t\t}\n\t\t`;\n    }\n}\n//# sourceMappingURL=OptionList.js.map","import { dom } from '../util/dom';\nimport { hasInlineCSS, installInlineCSS, Theme } from '../util/Theme';\nimport { colourCode } from '../util/util';\nimport { Widget } from './Widget';\nexport class TabBar extends Widget {\n    constructor(options) {\n        super();\n        this.options = options;\n        this.unionHeight = false;\n        this.selidx = 0;\n        this.buttonDiv = [];\n        this.panelDiv = [];\n        this.padding = 6;\n        this.callbackSelect = null;\n        if (!hasInlineCSS('tabbar'))\n            installInlineCSS('tabbar', this.composeCSS());\n    }\n    onSelect(callback) {\n        this.callbackSelect = callback;\n    }\n    getSelectedIndex() {\n        return this.selidx;\n    }\n    getSelectedValue() {\n        return this.options[this.selidx];\n    }\n    getPanelDOM(idxOrName) {\n        let idx = typeof idxOrName == 'number' ? idxOrName : this.options.indexOf(idxOrName);\n        if (idx < 0)\n            return null;\n        return this.panelDiv[idx];\n    }\n    render(parent) {\n        super.render(parent);\n        let grid = dom('<div/>').appendTo(this.contentDOM).css({ 'display': 'grid' });\n        grid.css({ 'align-items': 'center', 'justify-content': 'start', 'grid-row-gap': '0.5em' });\n        let columns = '[start] 1fr ';\n        for (let n = 0; n < this.options.length; n++)\n            columns += '[btn' + n + '] auto ';\n        columns += '[btnX] 1fr [end]';\n        grid.css({ 'grid-template-columns': columns });\n        let underline = dom('<div/>').appendTo(grid);\n        underline.css({ 'grid-column': 'start / end', 'grid-row': '1', 'height': '100%' });\n        underline.css({ 'border-bottom': '1px solid #C0C0C0' });\n        for (let n = 0; n < this.options.length; n++) {\n            let outline = dom('<div class=\"wmk-tabbar-cell\"/>').appendTo(grid);\n            outline.css({ 'grid-column': 'btn' + n, 'grid-row': '1' });\n            let btn = dom('<div class=\"wmk-tabbar\"/>').appendTo(outline);\n            btn.css({ 'padding': `${this.padding}px` });\n            btn.onClick(() => this.clickButton(n));\n            this.buttonDiv.push(btn);\n            let panel = dom('<div/>').appendTo(grid);\n            panel.css({ 'grid-column': 'start / end', 'grid-row': '2' });\n            panel.css({ 'align-self': 'start', 'justify-self': 'center', 'width': '100%' });\n            this.panelDiv.push(panel);\n        }\n        this.updateButtons();\n    }\n    clickButton(idx) {\n        if (idx == this.selidx)\n            return;\n        this.setSelectedIndex(idx);\n        if (this.callbackSelect)\n            this.callbackSelect(idx, this);\n    }\n    setSelectedIndex(idx) {\n        if (this.selidx == idx)\n            return;\n        this.selidx = idx;\n        let dom = this.contentDOM;\n        dom.setCSS('min-width', `${dom.width()}px`);\n        this.updateButtons();\n    }\n    setSelectedValue(val) {\n        let idx = this.options.indexOf(val);\n        if (idx >= 0)\n            this.setSelectedIndex(idx);\n    }\n    rotateSelected(dir) {\n        this.setSelectedIndex((this.selidx + dir + this.options.length) % this.options.length);\n    }\n    updateButtons() {\n        for (let n = 0; n < this.options.length && n < this.buttonDiv.length; n++) {\n            let div = this.buttonDiv[n];\n            let txt = this.options[n];\n            if (txt.length == 0 && n == this.selidx)\n                div.setText('\\u00A0\\u2716\\u00A0');\n            else if (txt.length == 0)\n                div.setText('\\u00A0\\u00A0\\u00A0');\n            else\n                div.setText(txt);\n            div.removeClass('wmk-tabbar-unselected wmk-tabbar-selected');\n            if (n != this.selidx)\n                div.addClass('wmk-tabbar-unselected');\n            else\n                div.addClass('wmk-tabbar-selected');\n            if (this.unionHeight)\n                this.panelDiv[n].setCSS('visibility', n == this.selidx ? 'visible' : 'hidden');\n            else\n                this.panelDiv[n].setCSS('display', n == this.selidx ? 'block' : 'none');\n        }\n    }\n    composeCSS() {\n        let lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n        let highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n        return `\n\t\t\t.wmk-tabbar\n\t\t\t{\n\t\t\t\tmargin-bottom: 0;\n\t\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tfont-weight: normal;\n\t\t\t\ttext-align: center;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\tvertical-align: middle;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t.wmk-tabbar-selected\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #008FD2;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected\n\t\t\t{\n\t\t\t\tcolor: #333;\n\t\t\t\tbackground-color: white;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected:hover\n\t\t\t{\n\t\t\t\tbackground-color: #808080;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #F0F0F0, #D0D0D0);\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected:active\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #00C000;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\t}\n\t\t\t.wmk-tabbar-table\n\t\t\t{\n\t\t\t\tmargin: 1px;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-collapse: collapse;\n\t\t\t}\n\t\t\t.wmk-tabbar-cell\n\t\t\t{\n\t\t\t\tmargin: 0 -1px -1px 0;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-width: 1px;\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-color: #808080;\n\t\t\t}\n\t\t`;\n    }\n}\n//# sourceMappingURL=TabBar.js.map","import { Molecule } from '../data/Molecule';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nexport class ExtraFieldsWidget extends Widget {\n    constructor(fields) {\n        super();\n        this.fields = fields;\n    }\n    render(parent) {\n        super.render(parent);\n        this.divFields = dom('<div/>').appendTo(this.contentDOM);\n        this.fillTable();\n        let divButtons = dom('<div/>').appendTo(this.contentDOM).css({ 'text-align': 'center' });\n        let btnExtra = dom('<button class=\"wmk-button wmk-button-default\">Extra</button>').appendTo(divButtons);\n        btnExtra.onClick(() => {\n            this.fields.push(Molecule.PREFIX_EXTRA);\n            this.fillTable();\n        });\n        let btnTransient = dom('<button class=\"wmk-button wmk-button-default\">Transient</button>').appendTo(divButtons).css({ 'margin-left': '0.5em' });\n        btnTransient.onClick(() => {\n            this.fields.push(Molecule.PREFIX_TRANSIENT);\n            this.fillTable();\n        });\n    }\n    getExtraFields() {\n        let extra = [];\n        for (let field of this.fields)\n            if (!field.startsWith(Molecule.PREFIX_TRANSIENT) && field.length > 1)\n                extra.push(field);\n        return extra;\n    }\n    getTransientFields() {\n        let transient = [];\n        for (let field of this.fields)\n            if (field.startsWith(Molecule.PREFIX_TRANSIENT) && field.length > 1)\n                transient.push(field);\n        return transient;\n    }\n    fillTable() {\n        this.divFields.empty();\n        if (this.fields.length == 0)\n            return;\n        let table = dom('<table/>').appendTo(this.divFields).css({ 'width': '100%' });\n        let tr = dom('<tr/>').appendTo(table);\n        dom('<td/>').appendTo(tr).css({ 'text-align': 'right', 'font-weight': 'bold', 'text-decoration': 'underline' }).setText('Type');\n        dom('<td/>').appendTo(tr).css({ 'font-weight': 'bold', 'text-decoration': 'underline' }).setText('Value');\n        for (let n = 0; n < this.fields.length; n++) {\n            let strType = '?', strValue = '';\n            if (this.fields[n].length > 0) {\n                strType = this.fields[n].charAt(0);\n                strValue = this.fields[n].substring(1);\n            }\n            tr = dom('<tr/>').appendTo(table);\n            let tdType = dom('<td/>').appendTo(tr).css({ 'text-align': 'right' }), tdValue = dom('<td/>').appendTo(tr), tdButton = dom('<td/>').appendTo(tr);\n            dom('<span/>').appendTo(tdType).css({ 'padding': '0.2em', 'border': '1px solid black', 'background-color': '#C0C0C0' }).setText(strType);\n            let input = dom('<input size=\"20\"/>').appendTo(tdValue).css({ 'width': '100%', 'font': 'inherit' });\n            input.setValue(strValue);\n            input.onInput(() => { this.fields[n] = strType + input.getValue(); });\n            let btnDelete = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\">\\u{2716}</button>').appendTo(tdButton).css({ 'margin-left': '0.5em' });\n            btnDelete.onClick(() => {\n                this.fields.splice(n, 1);\n                this.fillTable();\n            });\n        }\n    }\n}\n//# sourceMappingURL=ExtraFieldsWidget.js.map","import { Chemistry } from '../data/Chemistry';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nimport { installInlineCSS } from '../util/Theme';\nconst POSITION_TABLE_Y = [\n    1, 1,\n    2, 2, 2, 2, 2, 2, 2, 2,\n    3, 3, 3, 3, 3, 3, 3, 3,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n    6, 6,\n    8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    7, 7,\n    9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7\n];\nconst POSITION_TABLE_X = [\n    1, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nconst CSS_PERIODICTABLE = `\n\t*.wmk-periodictable-element\n\t{\n\t\tborder: 1px solid black;\n\t\tborder-radius: 2px;\n\t\tmargin: 0;\n\t\tmin-width: 2em;\n\t\tpadding: 0.4em 0 0.3em 0;\n\t\ttext-align: center;\n\t\tcolor: #FFFFFF;\n\t\tcursor: pointer;\n\t}\n\t*.wmk-periodictable-block1\n\t{\n\t\tbackground-color: #313062;\n\t}\n\t*.wmk-periodictable-block1:hover\n\t{\n\t\tbackground-color: #414072;\n\t}\n\t*.wmk-periodictable-block2\n\t{\n\t\tbackground-color: #205224;\n\t}\n\t*.wmk-periodictable-block2:hover\n\t{\n\t\tbackground-color: #306234;\n\t}\n\t*.wmk-periodictable-block3\n\t{\n\t\tbackground-color: #522818;\n\t}\n\t*.wmk-periodictable-block3:hover\n\t{\n\t\tbackground-color: #623828;\n\t}\n\t*.wmk-periodictable-block4\n\t{\n\t\tbackground-color: #575212;\n\t}\n\t*.wmk-periodictable-block4:block\n\t{\n\t\tbackground-color: #676222;\n\t}\n\t*.wmk-periodictable-selected\n\t{\n\t\tbackground-color: #FFFFFF !important;\n\t\tcolor: #000000 !important;\n\t\tcursor: default;\n\t}\n`;\nexport class PeriodicTableWidget extends Widget {\n    constructor() {\n        super();\n        this.divList = [];\n        this.selectedAtno = [];\n        installInlineCSS('periodictable', CSS_PERIODICTABLE);\n    }\n    render(parent) {\n        super.render(parent);\n        let grid = dom('<div/>').appendTo(this.contentDOM).css({ 'display': 'grid' });\n        grid.css({ 'align-items': 'center', 'justify-content': 'start', 'gap': '1px' });\n        let row = POSITION_TABLE_Y.map((y) => Math.round(2 * y) + 1);\n        let col = POSITION_TABLE_X.map((x) => Math.round(2 * x) + 1);\n        let num = row.length;\n        for (let n = 0; n < num; n++) {\n            let div = dom('<div/>').appendTo(grid);\n            div.css({ 'grid-row': `${row[n]} / span 2`, 'grid-column': `${col[n]} / span 2` });\n            div.addClass('wmk-periodictable-element');\n            let blk = Chemistry.ELEMENT_BLOCKS[n + 1];\n            if (blk == 1)\n                div.addClass('wmk-periodictable-block1');\n            else if (blk == 2)\n                div.addClass('wmk-periodictable-block2');\n            else if (blk == 3)\n                div.addClass('wmk-periodictable-block3');\n            else if (blk == 4)\n                div.addClass('wmk-periodictable-block4');\n            let el = Chemistry.ELEMENTS[n + 1];\n            div.setText(el);\n            this.divList.push(div);\n            div.onClick(() => {\n                this.changeElement(el);\n                this.callbackSelect(el);\n            });\n            div.onDblClick((event) => {\n                this.callbackDoubleClick();\n                event.preventDefault();\n                event.stopPropagation();\n            });\n        }\n    }\n    onSelect(callback) {\n        this.callbackSelect = callback;\n    }\n    onDoubleClick(callback) {\n        this.callbackDoubleClick = callback;\n    }\n    changeElement(element) {\n        let atno = Chemistry.ELEMENTS.indexOf(element);\n        this.selectedAtno = [atno];\n        this.updateSelected();\n    }\n    setSelectedElements(elementList) {\n        this.selectedAtno = elementList.map((el) => Chemistry.ELEMENTS.indexOf(el)).filter((atno) => atno > 0);\n        this.updateSelected();\n    }\n    updateSelected() {\n        for (let n = 1; n <= this.divList.length; n++) {\n            if (this.selectedAtno.includes(n))\n                this.divList[n - 1].addClass('wmk-periodictable-selected');\n            else\n                this.divList[n - 1].removeClass('wmk-periodictable-selected');\n        }\n    }\n}\n//# sourceMappingURL=PeriodicTableWidget.js.map","import { QueryUtil } from '../data/QueryUtil';\nimport { OptionList } from '../ui/OptionList';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nimport { Vec } from '../util/Vec';\nexport class QueryFieldsWidget extends Widget {\n    constructor(mol, atom, bond) {\n        super();\n        this.mol = mol;\n        this.atom = atom;\n        this.bond = bond;\n    }\n    render(parent) {\n        super.render(parent);\n        let grid = dom('<div/>').appendTo(this.contentDOM);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[title] auto [value] auto [end]' });\n        let row = 0;\n        let makeInput = () => {\n            let input = dom('<input size=\"20\"/>').appendTo(grid).css({ 'grid-area': `${row} / value` });\n            return input;\n        };\n        let makeToggleInput = () => {\n            let div = dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value`, 'dispkay': 'flex' });\n            let lbl = dom('<label/>').appendTo(div).css({ 'margin-right': '0.5em' });\n            let chk = dom('<input type=\"checkbox\"/>').appendTo(lbl);\n            lbl.appendText('Not');\n            let input = dom('<input size=\"20\"/>').appendTo(div).css({ 'flex-grow': '1' });\n            return [chk, input];\n        };\n        if (this.atom > 0) {\n            dom('<div>Charges</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputCharges = makeInput();\n            dom('<div>Aromatic</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.optAromatic = new OptionList(['Maybe', 'Yes', 'No']);\n            this.optAromatic.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value` }));\n            dom('<div>Unsaturated</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.optUnsaturated = new OptionList(['Maybe', 'Yes', 'No']);\n            this.optUnsaturated.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value` }));\n            dom('<div>Elements</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            [this.chkNotElements, this.inputElements] = makeToggleInput();\n            dom('<div>Ring Sizes</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            [this.chkNotRingSizes, this.inputRingSizes] = makeToggleInput();\n            dom('<div>Ring Block</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.optRingBlock = new OptionList(['Maybe', 'Yes', 'No']);\n            this.optRingBlock.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value` }));\n            dom('<div># Small Rings</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputNumRings = makeInput();\n            dom('<div># Ring Bonds</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputRingBonds = makeInput();\n            dom('<div>Adjacency</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputAdjacency = makeInput();\n            dom('<div>Bond Sums</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputBondSums = makeInput();\n            dom('<div>Valences</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputValences = makeInput();\n            dom('<div>Hydrogens</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputHydrogens = makeInput();\n            dom('<div>Isotopes</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputIsotopes = makeInput();\n            this.setupAtom();\n        }\n        else {\n            dom('<div>Ring Sizes</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            [this.chkNotRingSizes, this.inputRingSizes] = makeToggleInput();\n            dom('<div>Ring Block</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.optRingBlock = new OptionList(['Maybe', 'Yes', 'No']);\n            this.optRingBlock.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value` }));\n            dom('<div># Small Rings</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputNumRings = makeInput();\n            dom('<div>Num Rings</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputNumRings = makeInput();\n            dom('<div>Bond Orders</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputOrders = makeInput();\n            this.setupBond();\n        }\n    }\n    updateAtom() {\n        const { mol, atom } = this;\n        QueryUtil.deleteQueryAtomAll(mol, atom);\n        let chg = this.splitNumbers(this.inputCharges.getValue());\n        if (chg)\n            QueryUtil.setQueryAtomCharges(mol, atom, chg);\n        let arom = this.optAromatic.getSelectedIndex();\n        if (arom > 0)\n            QueryUtil.setQueryAtomAromatic(mol, atom, arom == 1);\n        let unsat = this.optUnsaturated.getSelectedIndex();\n        if (unsat > 0)\n            QueryUtil.setQueryAtomUnsaturated(mol, atom, unsat == 1);\n        let elem = this.splitStrings(this.inputElements.getValue());\n        if (elem) {\n            if (!this.chkNotElements.elInput.checked)\n                QueryUtil.setQueryAtomElements(mol, atom, elem);\n            else\n                QueryUtil.setQueryAtomElementsNot(mol, atom, elem);\n        }\n        let ringsz = this.splitNumbers(this.inputRingSizes.getValue());\n        if (ringsz) {\n            if (!this.chkNotRingSizes.elInput.checked)\n                QueryUtil.setQueryAtomRingSizes(mol, atom, ringsz);\n            else\n                QueryUtil.setQueryAtomRingSizesNot(mol, atom, ringsz);\n        }\n        let ringblk = this.optRingBlock.getSelectedIndex();\n        if (ringblk > 0)\n            QueryUtil.setQueryAtomRingBlock(mol, atom, ringblk == 1);\n        let nring = this.splitNumbers(this.inputNumRings.getValue());\n        if (nring)\n            QueryUtil.setQueryAtomNumRings(mol, atom, nring);\n        let rbc = this.splitNumbers(this.inputRingBonds.getValue());\n        if (rbc)\n            QueryUtil.setQueryAtomRingBonds(mol, atom, rbc);\n        let adj = this.splitNumbers(this.inputAdjacency.getValue());\n        if (adj)\n            QueryUtil.setQueryAtomAdjacency(mol, atom, adj);\n        let bond = this.splitNumbers(this.inputBondSums.getValue());\n        if (bond)\n            QueryUtil.setQueryAtomBondSums(mol, atom, bond);\n        let val = this.splitNumbers(this.inputValences.getValue());\n        if (val)\n            QueryUtil.setQueryAtomValences(mol, atom, val);\n        let hyd = this.splitNumbers(this.inputHydrogens.getValue());\n        if (hyd)\n            QueryUtil.setQueryAtomHydrogens(mol, atom, hyd);\n        let iso = this.splitNumbers(this.inputIsotopes.getValue());\n        if (iso)\n            QueryUtil.setQueryAtomIsotope(mol, atom, iso);\n    }\n    updateBond() {\n        const { mol, bond } = this;\n        QueryUtil.deleteQueryBondAll(mol, bond);\n        let ringsz = this.splitNumbers(this.inputRingSizes.getValue());\n        if (ringsz) {\n            if (!this.chkNotRingSizes.elInput.checked)\n                QueryUtil.setQueryBondRingSizes(mol, bond, ringsz);\n            else\n                QueryUtil.setQueryBondRingSizesNot(mol, bond, ringsz);\n        }\n        let ringblk = this.optRingBlock.getSelectedIndex();\n        if (ringblk > 0)\n            QueryUtil.setQueryBondRingBlock(mol, bond, ringblk == 1);\n        let nring = this.splitNumbers(this.inputNumRings.getValue());\n        if (nring)\n            QueryUtil.setQueryBondNumRings(mol, bond, nring);\n        let order = this.splitNumbers(this.inputOrders.getValue());\n        if (order)\n            QueryUtil.setQueryBondOrders(mol, bond, order);\n    }\n    setupAtom() {\n        const { mol, atom } = this;\n        let chg = QueryUtil.queryAtomCharges(mol, atom);\n        let arom = QueryUtil.queryAtomAromatic(mol, atom);\n        let unsat = QueryUtil.queryAtomUnsaturated(mol, atom);\n        let elem = QueryUtil.queryAtomElements(mol, atom);\n        let elemNot = QueryUtil.queryAtomElementsNot(mol, atom);\n        let ringsz = QueryUtil.queryAtomRingSizes(mol, atom);\n        let ringszNot = QueryUtil.queryAtomRingSizesNot(mol, atom);\n        let ringblk = QueryUtil.queryAtomRingBlock(mol, atom);\n        let nring = QueryUtil.queryAtomNumRings(mol, atom);\n        let rbc = QueryUtil.queryAtomRingBonds(mol, atom);\n        let adj = QueryUtil.queryAtomAdjacency(mol, atom);\n        let bond = QueryUtil.queryAtomBondSums(mol, atom);\n        let val = QueryUtil.queryAtomValences(mol, atom);\n        let hyd = QueryUtil.queryAtomHydrogens(mol, atom);\n        let iso = QueryUtil.queryAtomIsotope(mol, atom);\n        let frag = QueryUtil.queryAtomSubFrags(mol, atom);\n        let fragNot = QueryUtil.queryAtomSubFragsNot(mol, atom);\n        this.inputCharges.setValue(Vec.notBlank(chg) ? chg.join(',') : '');\n        this.optAromatic.setSelectedIndex(arom == null ? 0 : arom ? 1 : 2);\n        this.optUnsaturated.setSelectedIndex(unsat == null ? 0 : unsat ? 1 : 2);\n        this.chkNotElements.elInput.checked = Vec.isBlank(elem) && Vec.notBlank(elemNot);\n        this.inputElements.setValue(Vec.notBlank(elem) ? elem.join(',') : Vec.notBlank(elemNot) ? elemNot.join(',') : '');\n        this.chkNotRingSizes.elInput.checked = Vec.isBlank(ringsz) && Vec.notBlank(ringszNot);\n        this.inputRingSizes.setValue(Vec.notBlank(ringsz) ? ringsz.join(',') : Vec.notBlank(ringszNot) ? ringszNot.join(',') : '');\n        this.optRingBlock.setSelectedIndex(ringblk == null ? 0 : ringblk ? 1 : 2);\n        this.inputNumRings.setValue(Vec.notBlank(nring) ? nring.join(',') : '');\n        this.inputRingBonds.setValue(Vec.notBlank(rbc) ? rbc.join(',') : '');\n        this.inputAdjacency.setValue(Vec.notBlank(adj) ? adj.join(',') : '');\n        this.inputBondSums.setValue(Vec.notBlank(bond) ? bond.join(',') : '');\n        this.inputValences.setValue(Vec.notBlank(val) ? val.join(',') : '');\n        this.inputHydrogens.setValue(Vec.notBlank(hyd) ? hyd.join(',') : '');\n        this.inputIsotopes.setValue(Vec.notBlank(iso) ? iso.join(',') : '');\n    }\n    setupBond() {\n        const { mol, bond } = this;\n        let ringsz = QueryUtil.queryBondRingSizes(mol, bond);\n        let ringszNot = QueryUtil.queryBondRingSizesNot(mol, bond);\n        let ringblk = QueryUtil.queryBondRingBlock(mol, bond);\n        let nring = QueryUtil.queryBondNumRings(mol, bond);\n        let order = QueryUtil.queryBondOrders(mol, bond);\n        this.chkNotRingSizes.elInput.checked = Vec.isBlank(ringsz) && Vec.notBlank(ringszNot);\n        this.inputRingSizes.setValue(Vec.notBlank(ringsz) ? ringsz.join(',') : Vec.notBlank(ringszNot) ? ringszNot.join(',') : '');\n        this.optRingBlock.setSelectedIndex(ringblk == null ? 0 : ringblk ? 1 : 2);\n        this.inputNumRings.setValue(Vec.notBlank(nring) ? nring.join(',') : '');\n        this.inputOrders.setValue(Vec.notBlank(order) ? order.join(',') : '');\n    }\n    splitStrings(str) {\n        let list = [];\n        if (str)\n            for (let bit of str.split(/[\\s\\,\\;]+/))\n                if (bit)\n                    list.push(bit);\n        return list.length ? list : null;\n    }\n    splitNumbers(str) {\n        let list = [];\n        if (str)\n            for (let bit of str.split(/[\\s\\,\\;]+/)) {\n                if (bit.startsWith('+'))\n                    bit = bit.substring(1);\n                let num = parseInt(bit);\n                if (!isNaN(num))\n                    list.push(num);\n            }\n        return list.length ? list : null;\n    }\n}\n//# sourceMappingURL=QueryFieldsWidget.js.map","import { AbbrevContainer } from '../data/AbbrevContainer';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { Dialog } from '../dialog/Dialog';\nimport { OutlineMeasurement } from '../gfx/ArrangeMeasurement';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { ClipboardProxyHandler } from '../ui/ClipboardProxy';\nimport { OptionList } from '../ui/OptionList';\nimport { TabBar } from '../ui/TabBar';\nimport { dom } from '../util/dom';\nimport { Theme } from '../util/Theme';\nimport { angleDiffPos, colourCode, DEGRAD, norm_xy, RADDEG } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { ExtraFieldsWidget } from './ExtraFieldsWidget';\nimport { GeomWidget, GeomWidgetSelType, GeomWidgetType } from './GeomWidget';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nimport { PeriodicTableWidget } from './PeriodicTableWidget';\nimport { QueryFieldsWidget } from './QueryFieldsWidget';\nexport class EditAtom extends Dialog {\n    constructor(mol, atom, proxyClip, callbackApply) {\n        super();\n        this.atom = atom;\n        this.proxyClip = proxyClip;\n        this.callbackApply = callbackApply;\n        this.newX = 0;\n        this.newY = 0;\n        this.tabs = null;\n        this.abbrevList = null;\n        this.svgAbbrev = null;\n        this.abbrevIndices = [];\n        this.currentAbbrev = -1;\n        this.initMol = mol;\n        this.mol = mol.clone();\n        this.title = 'Edit Atom';\n        this.minPortionWidth = 20;\n        this.maxPortionWidth = 95;\n    }\n    populate() {\n        this.proxyClip.pushHandler(new ClipboardProxyHandler());\n        let buttons = this.buttonsDOM(), body = this.bodyDOM();\n        this.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnApply.onClick(() => this.applyChanges());\n        if (this.atom > 0) {\n            this.tabs = new TabBar(['Atom', 'Abbreviation', 'Geometry', 'Query', 'Extra']);\n            this.tabs.render(body);\n            this.tabs.onSelect((idx) => this.selectedTab(idx));\n            this.populateAtom(this.tabs.getPanelDOM('Atom'));\n            this.populateAbbreviation(this.tabs.getPanelDOM('Abbreviation'));\n            if (this.atom > 0)\n                this.populateGeometry(this.tabs.getPanelDOM('Geometry'));\n            this.populateQuery(this.tabs.getPanelDOM('Query'));\n            this.populateExtra(this.tabs.getPanelDOM('Extra'));\n        }\n        else {\n            this.populateAtom(body);\n        }\n        let focusable = body.findAll('input,textarea');\n        if (focusable.length > 0)\n            focusable[0].grabFocus(true);\n        for (let dom of focusable) {\n            dom.css({ 'font': 'inherit' });\n            dom.onKeyDown((event) => {\n                if (event.key == \"Enter\")\n                    this.applyChanges();\n                else if (event.key == \"Escape\")\n                    this.close();\n                else if (event.key == \"PageUp\") {\n                    this.tabs.rotateSelected(-1);\n                    this.selectedTab(this.tabs.getSelectedIndex());\n                    event.preventDefault();\n                }\n                else if (event.key == \"PageDown\") {\n                    this.tabs.rotateSelected(1);\n                    this.selectedTab(this.tabs.getSelectedIndex());\n                    event.preventDefault();\n                }\n                event.stopPropagation();\n            });\n        }\n    }\n    close() {\n        this.proxyClip.popHandler();\n        super.close();\n    }\n    applyChanges() {\n        this.mol.keepTransient = true;\n        this.updateMolecule();\n        let selTab = this.tabs ? this.tabs.getSelectedValue() : null;\n        if (selTab == 'Abbreviation')\n            this.updateAbbrev();\n        if (selTab == 'Geometry')\n            this.updateGeometry();\n        if (selTab == 'Query')\n            this.updateQuery();\n        if (selTab == 'Extra')\n            this.updateExtra();\n        this.mol.keepTransient = false;\n        if (this.callbackApply)\n            this.callbackApply(this);\n    }\n    populateAtom(panel) {\n        let grid = dom('<div/>').appendTo(panel);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]' });\n        grid.appendHTML('<div style=\"grid-area: 1 / col0;\">Symbol</div>');\n        this.inputSymbol = dom('<input size=\"20\"/>').appendTo(grid);\n        this.inputSymbol.css({ 'grid-area': '1 / col1 / auto / col4}' });\n        this.inputSymbol.onInput(() => this.periodicWidget.changeElement(this.inputSymbol.getValue()));\n        grid.appendHTML('<div style=\"grid-area: 2 / col0;\">Charge</div>');\n        this.inputCharge = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n        this.inputCharge.css({ 'grid-area': '2 / col1' });\n        grid.appendHTML('<div style=\"grid-area: 2 / col2;\">Unpaired</div>');\n        this.inputUnpaired = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n        this.inputUnpaired.css({ 'grid-area': '2 / col3' });\n        grid.appendHTML('<div style=\"grid-area: 3 / col0;\">Hydrogens</div>');\n        this.optionHydrogen = new OptionList(['Auto', 'None', '1', '2', '3', '4', 'Other']);\n        this.optionHydrogen.render(dom('<div style=\"grid-area: 3 / col1 / auto / col3\"/>').appendTo(grid));\n        this.optionHydrogen.onSelect((idx) => this.inputHydrogen.elInput.disabled = idx != 6);\n        this.inputHydrogen = dom('<input type=\"number\" size=\"4\"/>').appendTo(grid);\n        this.inputHydrogen.css({ 'grid-area': '3 / col3' });\n        this.inputHydrogen.elInput.disabled = true;\n        grid.appendHTML('<div style=\"grid-area: 4 / col0;\">Isotope</div>');\n        this.optionIsotope = new OptionList(['Natural', 'Enriched']);\n        this.optionIsotope.render(dom('<div style=\"grid-area: 4 / col1 / auto / col3\"/>').appendTo(grid));\n        this.optionIsotope.onSelect((idx) => this.inputIsotope.elInput.disabled = idx == 0);\n        this.inputIsotope = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n        this.inputIsotope.css({ 'grid-area': '4 / col3' });\n        this.inputIsotope.elInput.disabled = true;\n        grid.appendHTML('<div style=\"grid-area: 5 / col0;\">Mapping</div>');\n        this.inputMapping = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n        this.inputMapping.css({ 'grid-area': '5 / col1' });\n        grid.appendHTML('<div style=\"grid-area: 5 / col2;\">Index</div>');\n        this.inputIndex = dom('<input type=\"number\" size=\"6\" readonly=\"readonly\"/>').appendTo(grid);\n        this.inputIndex.css({ 'grid-area': '5 / col3' });\n        let divPeriodic = dom('<div/>').appendTo(grid).css({ 'grid-area': '6 / start / 6 / end' });\n        this.periodicWidget = new PeriodicTableWidget();\n        this.periodicWidget.onSelect((element) => this.inputSymbol.setValue(element));\n        this.periodicWidget.onDoubleClick(() => this.applyChanges());\n        this.periodicWidget.render(divPeriodic);\n        const mol = this.mol, atom = this.atom;\n        if (atom > 0) {\n            this.inputSymbol.setValue(mol.atomElement(atom));\n            this.inputCharge.setValue(mol.atomCharge(atom).toString());\n            this.inputUnpaired.setValue(mol.atomUnpaired(atom).toString());\n            let hc = mol.atomHExplicit(atom);\n            if (hc == Molecule.HEXPLICIT_UNKNOWN) {\n                this.optionHydrogen.setSelectedIndex(0);\n                this.inputHydrogen.setValue(mol.atomHydrogens(atom).toString());\n                this.inputHydrogen.elInput.disabled = true;\n            }\n            else if (hc <= 4) {\n                this.optionHydrogen.setSelectedIndex(hc + 1);\n                this.inputHydrogen.setValue(hc.toString());\n                this.inputHydrogen.elInput.disabled = true;\n            }\n            else {\n                this.optionHydrogen.setSelectedIndex(6);\n                this.inputHydrogen.setValue(hc.toString());\n                this.inputHydrogen.elInput.disabled = false;\n            }\n            this.optionIsotope.setSelectedIndex(mol.atomIsotope(atom) == Molecule.ISOTOPE_NATURAL ? 0 : 1);\n            if (mol.atomIsotope(atom) != Molecule.ISOTOPE_NATURAL)\n                this.inputIsotope.setValue(mol.atomIsotope(atom).toString());\n            this.inputIsotope.elInput.disabled = mol.atomIsotope(atom) == Molecule.ISOTOPE_NATURAL;\n            this.inputMapping.setValue(mol.atomMapNum(atom).toString());\n            this.inputIndex.setValue(atom.toString());\n            this.periodicWidget.changeElement(mol.atomElement(atom));\n        }\n    }\n    populateAbbreviation(panel) {\n        let divFlex = dom('<div/>').appendTo(panel).css({ 'display': 'flex', 'align-items': 'flex-start' });\n        divFlex.css({ 'max-width': '60vw', 'max-height': '50vh', 'overflow-y': 'scroll' });\n        let spanSearch = dom('<div/>').appendTo(divFlex).css({ 'margin-right': '0.5em', 'flex': '0 0' });\n        let spanList = dom('<div/>').appendTo(divFlex).css({ 'flex': '1 1 100%' });\n        this.inputAbbrevSearch = dom('<input size=\"10\"/>').appendTo(spanSearch);\n        this.inputAbbrevSearch.setAttr('placeholder', 'Search');\n        let lastSearch = '';\n        this.inputAbbrevSearch.onKeyDown((event) => {\n            if (event.key == \"ArrowUp\")\n                this.cycleAbbreviation(-1);\n            else if (event.key == \"ArrowDown\")\n                this.cycleAbbreviation(1);\n        });\n        this.inputAbbrevSearch.onInput(() => {\n            let search = this.inputAbbrevSearch.getValue();\n            if (search == lastSearch)\n                return;\n            lastSearch = search;\n            this.fillAbbreviations();\n        });\n        let divButtons = dom('<div/>').appendTo(spanSearch).css({ 'margin-top': '0.5em' });\n        let btnClear = dom('<button class=\"wmk-button wmk-button-default\">Clear</button>').appendTo(divButtons);\n        btnClear.onClick(() => {\n            this.selectAbbreviation(-1);\n            if (this.atom > 0 && MolUtil.hasAbbrev(this.mol, this.atom))\n                this.applyChanges();\n        });\n        this.tableAbbrev = dom('<table/>').appendTo(spanList).css({ 'border-collapse': 'collapse', 'width': '100%' });\n        this.fillAbbreviations();\n    }\n    populateGeometry(panel) {\n        const { mol, atom } = this;\n        let divContainer1 = dom('<div/>').appendTo(panel).css({ 'text-align': 'center' });\n        let divContainer2 = dom('<div/>').appendTo(divContainer1).css({ 'display': 'inline-block' });\n        let grid = dom('<div/>').appendTo(divContainer2);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]' });\n        this.geomWidget = new GeomWidget(GeomWidgetType.Atom, mol, atom);\n        this.geomWidget.render(dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col0 / auto / col4', 'text-align': 'center' }));\n        let label1 = dom('<div/>').appendTo(grid).css({ 'grid-area': '2 / col0' });\n        this.inputGeom1 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({ 'grid-area': '2 / col1' });\n        let label2 = dom('<div/>').appendTo(grid).css({ 'grid-area': '2 / col2' });\n        this.inputGeom2 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({ 'grid-area': '2 / col3' });\n        this.geomWidget.callbackSelect = (sel) => {\n            let atoms = this.geomWidget.selectionAtoms(sel);\n            if (sel.type == GeomWidgetSelType.Position) {\n                label1.setText('Position X');\n                label2.setText('Y');\n                this.inputGeom1.setValue(this.refGeom1 = mol.atomX(atoms[0]).toFixed(3));\n                this.inputGeom2.setValue(this.refGeom2 = mol.atomY(atoms[0]).toFixed(3));\n            }\n            else if (sel.type == GeomWidgetSelType.Link) {\n                let dx = mol.atomX(atoms[1]) - mol.atomX(atoms[0]), dy = mol.atomY(atoms[1]) - mol.atomY(atoms[0]);\n                label1.setText('Distance');\n                label2.setText('Angle');\n                this.inputGeom1.setValue(this.refGeom1 = norm_xy(dx, dy).toFixed(3));\n                this.inputGeom2.setValue(this.refGeom2 = (Math.atan2(dy, dx) * RADDEG).toFixed(1));\n            }\n            else if (sel.type == GeomWidgetSelType.Torsion) {\n                let cx = mol.atomX(atoms[0]), cy = mol.atomY(atoms[0]);\n                let th2 = Math.atan2(mol.atomY(atoms[1]) - cy, mol.atomX(atoms[1]) - cx);\n                let th1 = Math.atan2(mol.atomY(atoms[2]) - cy, mol.atomX(atoms[2]) - cx);\n                label1.setText('Angle');\n                label2.setText('');\n                this.inputGeom1.setValue(this.refGeom1 = (angleDiffPos(th2, th1) * RADDEG).toFixed(1));\n                this.inputGeom2.setValue(this.refGeom2 = '');\n            }\n            label2.setCSS('display', sel.type == GeomWidgetSelType.Torsion ? 'none' : 'block');\n            this.inputGeom2.setCSS('display', sel.type == GeomWidgetSelType.Torsion ? 'none' : 'block');\n        };\n        this.geomWidget.callbackSelect(this.geomWidget.selected);\n    }\n    populateQuery(panel) {\n        this.queryWidget = new QueryFieldsWidget(this.mol, this.atom, 0);\n        this.queryWidget.render(panel);\n    }\n    populateExtra(panel) {\n        let fields = [...this.mol.atomExtra(this.atom), ...this.mol.atomTransient(this.atom)];\n        this.fieldsWidget = new ExtraFieldsWidget(fields);\n        this.fieldsWidget.render(panel);\n    }\n    updateMolecule() {\n        let { mol, atom } = this;\n        if (atom == 0)\n            atom = this.atom = mol.addAtom('C', this.newX, this.newY);\n        let sym = this.inputSymbol.getValue();\n        if (sym != '')\n            mol.setAtomElement(atom, sym);\n        let chg = parseInt(this.inputCharge.getValue());\n        if (chg > -20 && chg < 20)\n            mol.setAtomCharge(atom, chg);\n        let unp = parseInt(this.inputUnpaired.getValue());\n        if (unp >= 0 && unp < 20)\n            mol.setAtomUnpaired(atom, unp);\n        let hcidx = this.optionHydrogen.getSelectedIndex();\n        if (hcidx == 0)\n            mol.setAtomHExplicit(atom, Molecule.HEXPLICIT_UNKNOWN);\n        else if (hcidx <= 5)\n            mol.setAtomHExplicit(atom, hcidx - 1);\n        else {\n            let hyd = parseInt(this.inputHydrogen.getValue());\n            if (hyd >= 0 && hyd < 20)\n                mol.setAtomHExplicit(atom, hyd);\n        }\n        if (this.optionIsotope.getSelectedIndex() == 1) {\n            let iso = parseInt(this.inputIsotope.getValue());\n            if (iso >= 0 && iso < 300)\n                mol.setAtomIsotope(atom, iso);\n        }\n        else\n            mol.setAtomIsotope(atom, Molecule.ISOTOPE_NATURAL);\n        let map = parseInt(this.inputMapping.getValue());\n        if (!isNaN(map))\n            mol.setAtomMapNum(atom, map);\n    }\n    updateAbbrev() {\n        const { mol, atom } = this;\n        if (this.currentAbbrev < 0) {\n            let el = mol.atomElement(atom);\n            MolUtil.clearAbbrev(mol, atom);\n            mol.setAtomElement(atom, el);\n        }\n        else {\n            let abbrev = this.abbrevList[this.currentAbbrev];\n            mol.setAtomElement(atom, abbrev.name);\n            MolUtil.setAbbrev(mol, atom, abbrev.frag);\n        }\n    }\n    updateGeometry() {\n        let strval1 = this.inputGeom1.getValue(), strval2 = this.inputGeom2.getValue();\n        if (this.refGeom1 == strval1 && this.refGeom2 == strval2)\n            return;\n        const { mol } = this;\n        let sel = this.geomWidget.selected, atoms = this.geomWidget.selectionAtoms(sel);\n        if (sel.type == GeomWidgetSelType.Position) {\n            let x = parseFloat(strval1), y = parseFloat(strval2);\n            if (isNaN(x) || isNaN(y) || Math.abs(x) > 1E6 || Math.abs(y) > 1E6)\n                return;\n            mol.setAtomPos(atoms[0], x, y);\n        }\n        else if (sel.type == GeomWidgetSelType.Link) {\n            if (this.refGeom1 != strval1) {\n                let dist = parseFloat(strval1);\n                if (isNaN(dist) || Math.abs(dist) > 100)\n                    return;\n                let mask = Vec.booleanArray(false, mol.numAtoms);\n                mask[atoms[1] - 1] = true;\n                let instate = { mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), 'selectedMask': mask };\n                let molact = new MoleculeActivity(instate, ActivityType.BondDist, { dist });\n                molact.execute();\n                if (molact.output.mol)\n                    this.mol = molact.output.mol;\n                return;\n            }\n            else if (this.refGeom2 != strval2) {\n                let angle = parseFloat(strval2);\n                if (isNaN(angle))\n                    return;\n                let mask = Vec.booleanArray(false, mol.numAtoms);\n                mask[atoms[1] - 1] = true;\n                let instate = { mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), selectedMask: mask };\n                let molact = new MoleculeActivity(instate, ActivityType.AlignAngle, { angle: angle * DEGRAD });\n                molact.execute();\n                if (molact.output.mol)\n                    this.mol = molact.output.mol;\n                return;\n            }\n        }\n        else if (sel.type == GeomWidgetSelType.Torsion) {\n            let angle = parseFloat(strval1);\n            if (isNaN(angle))\n                return;\n            let mask = Vec.booleanArray(false, mol.numAtoms);\n            for (let a of atoms)\n                mask[a - 1] = true;\n            let instate = { mol, currentAtom: atoms[2], currentBond: 0, selectedMask: mask };\n            let molact = new MoleculeActivity(instate, ActivityType.AdjustTorsion, { angle: angle * DEGRAD });\n            molact.execute();\n            if (molact.output.mol)\n                this.mol = molact.output.mol;\n            return;\n        }\n    }\n    updateQuery() {\n        this.queryWidget.updateAtom();\n    }\n    updateExtra() {\n        this.mol.setAtomExtra(this.atom, this.fieldsWidget.getExtraFields());\n        this.mol.setAtomTransient(this.atom, this.fieldsWidget.getTransientFields());\n    }\n    fillAbbreviations() {\n        if (AbbrevContainer.needsSetup()) {\n            setTimeout(() => AbbrevContainer.setupData().then(() => this.fillAbbreviations()), 1);\n            return;\n        }\n        this.tableAbbrev.empty();\n        AbbrevContainer.main.submitMolecule(this.mol, true);\n        this.abbrevList = AbbrevContainer.main.getAbbrevs();\n        if (!this.svgAbbrev) {\n            this.svgAbbrev = [];\n            let policy = RenderPolicy.defaultColourOnWhite(10);\n            let measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n            for (let abbrev of this.abbrevList) {\n                let effects = new RenderEffects();\n                let mol = abbrev.frag.clone();\n                effects.atomCircleSz = Vec.numberArray(0, mol.numAtoms);\n                effects.atomCircleCol = Vec.numberArray(0, mol.numAtoms);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    if (mol.atomElement(n) == MolUtil.ABBREV_ATTACHMENT) {\n                        mol.setAtomElement(n, 'C');\n                        effects.atomCircleSz[n - 1] = 0.2;\n                        effects.atomCircleCol[n - 1] = 0x00C000;\n                    }\n                let layout = new ArrangeMolecule(mol, measure, policy, effects);\n                layout.arrange();\n                let gfx = new MetaVector();\n                new DrawMolecule(layout, gfx).draw();\n                gfx.normalise();\n                this.svgAbbrev.push(gfx.createSVG());\n            }\n            const { mol, atom } = this;\n            if (atom > 0 && MolUtil.hasAbbrev(mol, atom)) {\n                let name = mol.atomElement(atom), mf = MolUtil.molecularFormula(MolUtil.getAbbrev(mol, atom));\n                for (let n = 0; n < this.abbrevList.length; n++)\n                    if (name == this.abbrevList[n].name) {\n                        if (mf == MolUtil.molecularFormula(this.abbrevList[n].frag))\n                            this.currentAbbrev = n;\n                        break;\n                    }\n            }\n        }\n        let tr = dom('<tr/>').appendTo(this.tableAbbrev);\n        tr.appendHTML('<td><u>Label</u></td>');\n        tr.appendHTML('<td><u>Structure</u></td>');\n        this.abbrevEntries = [];\n        this.abbrevIndices = [];\n        let search = this.inputAbbrevSearch.getValue().toLowerCase();\n        for (let n = 0; n < this.abbrevList.length; n++) {\n            if (this.currentAbbrev != n && !this.abbrevList[n].nameSearch.includes(search))\n                continue;\n            let entry = {\n                tr: dom('<tr/>').appendTo(this.tableAbbrev),\n                idx: n,\n                bgcol: this.abbrevEntries.length % 2 == 0 ? '#FFFFFF' : '#F8F8F8'\n            };\n            entry.tr.setCSS('background-color', this.currentAbbrev == entry.idx ? colourCode(Theme.lowlight) : entry.bgcol);\n            let tdLabel = dom('<td/>').appendTo(entry.tr), tdStruct = dom('<td/>').appendTo(entry.tr);\n            tdLabel.setHTML(this.abbrevList[n].nameHTML);\n            dom(this.svgAbbrev[n]).appendTo(tdStruct).css({ 'display': 'block', 'pointer-events': 'none' });\n            entry.tr.css({ 'cursor': 'pointer' });\n            entry.tr.onClick(() => this.selectAbbreviation(n));\n            entry.tr.onDblClick((event) => this.applyChanges());\n            this.abbrevEntries.push(entry);\n            this.abbrevIndices.push(n);\n        }\n    }\n    selectAbbreviation(idx) {\n        if (this.currentAbbrev == idx)\n            return;\n        this.currentAbbrev = idx;\n        for (let entry of this.abbrevEntries) {\n            entry.tr.setCSS('background-color', this.currentAbbrev == entry.idx ? colourCode(Theme.lowlight) : entry.bgcol);\n            if (this.currentAbbrev == entry.idx)\n                entry.tr.el.scrollIntoView({ 'block': 'nearest' });\n        }\n    }\n    cycleAbbreviation(dir) {\n        let sz = this.abbrevIndices.length;\n        if (sz == 0)\n            return;\n        let idx = this.abbrevIndices.indexOf(this.currentAbbrev);\n        if (idx < 0) {\n            if (dir < 0)\n                idx = sz - 1;\n            else\n                idx = 0;\n        }\n        else\n            idx = (idx + sz + dir) % sz;\n        this.selectAbbreviation(this.abbrevIndices[idx]);\n    }\n    selectedTab(idx) {\n        if (idx == 0)\n            this.inputSymbol.grabFocus();\n        else if (idx == 1)\n            this.inputAbbrevSearch.grabFocus();\n        else if (idx == 2)\n            this.inputGeom1.grabFocus();\n    }\n}\n//# sourceMappingURL=EditAtom.js.map","import { Dialog } from '../dialog/Dialog';\nimport { ClipboardProxyHandler } from '../ui/ClipboardProxy';\nimport { OptionList } from '../ui/OptionList';\nimport { TabBar } from '../ui/TabBar';\nimport { dom } from '../util/dom';\nimport { norm_xy } from '../util/util';\nimport { ExtraFieldsWidget } from './ExtraFieldsWidget';\nimport { GeomWidget, GeomWidgetSelType, GeomWidgetType } from './GeomWidget';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nimport { QueryFieldsWidget } from './QueryFieldsWidget';\nexport class EditBond extends Dialog {\n    constructor(mol, bond, proxyClip, callbackApply) {\n        super();\n        this.bond = bond;\n        this.proxyClip = proxyClip;\n        this.callbackApply = callbackApply;\n        this.initMol = mol;\n        this.mol = mol.clone();\n        this.title = 'Edit Bond';\n        this.minPortionWidth = 20;\n        this.maxPortionWidth = 95;\n    }\n    populate() {\n        this.proxyClip.pushHandler(new ClipboardProxyHandler());\n        let buttons = this.buttonsDOM(), body = this.bodyDOM();\n        this.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnApply.onClick(() => this.applyChanges());\n        this.tabs = new TabBar(['Bond', 'Geometry', 'Query', 'Extra']);\n        this.tabs.render(body);\n        this.tabs.onSelect((idx) => this.selectedTab(idx));\n        this.populateBond(this.tabs.getPanelDOM('Bond'));\n        this.populateGeometry(this.tabs.getPanelDOM('Geometry'));\n        this.populateQuery(this.tabs.getPanelDOM('Query'));\n        this.populateExtra(this.tabs.getPanelDOM('Extra'));\n        let focusable = body.findAll('input,textarea');\n        if (focusable.length > 0)\n            focusable[0].grabFocus(true);\n        for (let dom of focusable) {\n            dom.css({ 'font': 'inherit' });\n            dom.onKeyDown((event) => {\n                if (event.key == \"Enter\")\n                    this.applyChanges();\n                else if (event.key == \"Escape\")\n                    this.close();\n                else if (event.key == \"PageUp\") {\n                    this.tabs.rotateSelected(-1);\n                    this.selectedTab(this.tabs.getSelectedIndex());\n                    event.preventDefault();\n                }\n                else if (event.key == \"PageDown\") {\n                    this.tabs.rotateSelected(1);\n                    this.selectedTab(this.tabs.getSelectedIndex());\n                    event.preventDefault();\n                }\n                event.stopPropagation();\n            });\n        }\n    }\n    close() {\n        this.proxyClip.popHandler();\n        super.close();\n    }\n    applyChanges() {\n        this.mol.keepTransient = true;\n        this.updateMolecule();\n        if (this.tabs.getSelectedValue() == 'Geometry')\n            this.updateGeometry();\n        if (this.tabs.getSelectedValue() == 'Query')\n            this.updateQuery();\n        if (this.tabs.getSelectedValue() == 'Extra')\n            this.updateExtra();\n        this.mol.keepTransient = false;\n        if (this.callbackApply)\n            this.callbackApply(this);\n    }\n    populateBond(panel) {\n        const { mol, bond } = this;\n        let grid = dom('<div/>').appendTo(panel);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]' });\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col0' }).setText('Order');\n        let ordersHTML = [];\n        for (let o = 0; o <= 4; o++)\n            ordersHTML.push(`&nbsp;&nbsp;${o}&nbsp;&nbsp;`);\n        this.optionOrder = new OptionList(ordersHTML);\n        this.optionOrder.htmlLabels = true;\n        this.optionOrder.setSelectedIndex(mol.bondOrder(bond));\n        this.optionOrder.render(dom('<div/>').appendTo(grid).css({ 'grid-column': 'col1 / col4', 'grid-row': '1' }));\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '2 / col0' }).setText('Stereo');\n        this.optionStereo = new OptionList(['None', 'Up', 'Down', 'Unknown']);\n        this.optionStereo.setSelectedIndex(mol.bondType(bond));\n        this.optionStereo.render(dom('<div/>').appendTo(grid).css({ 'grid-column': 'col1 / col4', 'grid-row': '2' }));\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '3 / col0' }).setText('From');\n        this.inputFrom = dom('<input size=\"6\"/>').appendTo(grid).css({ 'grid-area': '3 / col1', 'font': 'inherit' });\n        this.inputFrom.elInput.readOnly = true;\n        this.inputFrom.setValue(mol.bondFrom(bond).toString());\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '3 / col2' }).setText('To');\n        this.inputTo = dom('<input size=\"6\"/>').appendTo(grid).css({ 'grid-area': '3 / col3', 'font': 'inherit' });\n        this.inputTo.elInput.readOnly = true;\n        this.inputTo.setValue(mol.bondTo(bond).toString());\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '4 / col2' }).setText('Index');\n        this.inputIndex = dom('<input size=\"6\"/>').appendTo(grid).css({ 'grid-area': '4 / col3', 'font': 'inherit' });\n        this.inputIndex.elInput.readOnly = true;\n        this.inputIndex.setValue(bond.toString());\n    }\n    populateGeometry(panel) {\n        const { mol, bond } = this;\n        let divContainer1 = dom('<div/>').appendTo(panel).css({ 'text-align': 'center' });\n        let divContainer2 = dom('<div/>').appendTo(divContainer1).css({ 'display': 'inline-block' });\n        let grid = dom('<div/>').appendTo(divContainer2);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2]' });\n        this.geomWidget = new GeomWidget(GeomWidgetType.Bond, mol, bond);\n        this.geomWidget.render(dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col0 / auto / col2', 'text-align': 'center' }));\n        let label1 = dom('<div/>').appendTo(grid).css({ 'grid-area': '2 / col0' });\n        this.inputGeom1 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({ 'grid-area': '2 / col1' });\n        this.geomWidget.callbackSelect = (sel) => {\n            if (sel.type == GeomWidgetSelType.Link) {\n                let a1 = mol.bondFrom(bond), a2 = mol.bondTo(bond);\n                let dx = mol.atomX(a2) - mol.atomX(a1), dy = mol.atomY(a2) - mol.atomY(a1);\n                label1.setText('Distance');\n                this.inputGeom1.setValue(this.refGeom1 = norm_xy(dx, dy).toFixed(3));\n            }\n        };\n        this.geomWidget.callbackSelect(this.geomWidget.selected);\n    }\n    populateQuery(panel) {\n        this.queryWidget = new QueryFieldsWidget(this.mol, 0, this.bond);\n        this.queryWidget.render(panel);\n    }\n    populateExtra(panel) {\n        let fields = [...this.mol.bondExtra(this.bond), ...this.mol.bondTransient(this.bond)];\n        this.fieldsWidget = new ExtraFieldsWidget(fields);\n        this.fieldsWidget.render(panel);\n    }\n    updateMolecule() {\n        let { mol, bond } = this;\n        mol.setBondOrder(bond, this.optionOrder.getSelectedIndex());\n        mol.setBondType(bond, this.optionStereo.getSelectedIndex());\n    }\n    updateGeometry() {\n        let strval1 = this.inputGeom1.getValue();\n        if (this.refGeom1 == strval1)\n            return;\n        const { mol } = this;\n        let sel = this.geomWidget.selected, atoms = this.geomWidget.selectionAtoms(sel);\n        if (sel.type == GeomWidgetSelType.Link) {\n            if (this.refGeom1 != strval1) {\n                let dist = parseFloat(strval1);\n                if (isNaN(dist) || Math.abs(dist) > 100)\n                    return;\n                let instate = { mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), selectedMask: null };\n                let molact = new MoleculeActivity(instate, ActivityType.BondDist, { dist });\n                molact.execute();\n                this.mol = molact.output.mol;\n                return;\n            }\n        }\n    }\n    updateQuery() {\n        this.queryWidget.updateBond();\n    }\n    updateExtra() {\n        this.mol.setBondExtra(this.bond, this.fieldsWidget.getExtraFields());\n        this.mol.setBondTransient(this.bond, this.fieldsWidget.getTransientFields());\n    }\n    selectedTab(idx) {\n        if (idx == 0)\n            this.inputFrom.grabFocus();\n        else if (idx == 1)\n            this.inputGeom1.grabFocus();\n    }\n}\n//# sourceMappingURL=EditBond.js.map","import { MolUtil } from '../data/MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity, PolymerBlockUnit } from '../data/PolymerBlock';\nimport { Dialog } from '../dialog/Dialog';\nimport { OutlineMeasurement } from '../gfx/ArrangeMeasurement';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { ClipboardProxyHandler } from '../ui/ClipboardProxy';\nimport { OptionList } from '../ui/OptionList';\nimport { dom } from '../util/dom';\nimport { Vec } from '../util/Vec';\nconst CHAR_LOW_A = 'a'.charCodeAt(0), CHAR_UP_A = 'A'.charCodeAt(0);\nfunction indexToAtomLabel(idx) { return String.fromCharCode(CHAR_UP_A + Math.min(26, Math.max(0, idx)) - 1); }\nfunction indexToBondLabel(idx) { return String.fromCharCode(CHAR_LOW_A + Math.min(26, Math.max(0, idx)) - 1); }\nexport class EditPolymer extends Dialog {\n    constructor(mol, atoms, proxyClip, callbackApply) {\n        super();\n        this.atoms = atoms;\n        this.proxyClip = proxyClip;\n        this.callbackApply = callbackApply;\n        this.optionConnect = null;\n        this.optionBondConn = null;\n        this.currentID = 0;\n        this.unit = null;\n        this.borderAtoms = [];\n        this.outBonds = [];\n        this.outAtoms = [];\n        this.initMol = mol;\n        this.mol = mol.clone();\n        this.title = 'Polymer Block';\n        this.minPortionWidth = 20;\n        this.maxPortionWidth = 95;\n        this.polymer = new PolymerBlock(this.mol);\n        atoms = Vec.sorted(atoms);\n        for (let id of this.polymer.getIDList()) {\n            let look = this.polymer.getUnit(id);\n            if (Vec.equals(atoms, look.atoms)) {\n                this.currentID = id;\n                this.unit = look;\n                break;\n            }\n        }\n        if (!this.unit)\n            this.unit = new PolymerBlockUnit(atoms);\n        let umol = this.umol = this.mol.clone();\n        let mask = Vec.booleanArray(false, this.umol.numAtoms);\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let bfr = this.mol.bondFrom(n), bto = this.mol.bondTo(n);\n            let in1 = this.atoms.includes(bfr), in2 = this.atoms.includes(bto);\n            if (in1 || in2)\n                mask[bfr - 1] = mask[bto - 1] = true;\n            if (in1 && !in2) {\n                this.borderAtoms.push(bfr);\n                this.outBonds.push(n);\n                this.outAtoms.push(bto);\n            }\n            if (in2 && !in1) {\n                this.borderAtoms.push(bto);\n                this.outBonds.push(n);\n                this.outAtoms.push(bfr);\n            }\n        }\n        this.borderAtoms = Vec.sortedUnique(this.borderAtoms);\n        this.umap = Vec.maskMap(mask);\n        this.umol = MolUtil.subgraphMask(this.umol, mask);\n        new PolymerBlock(this.umol).removeAll();\n    }\n    populate() {\n        this.proxyClip.pushHandler(new ClipboardProxyHandler());\n        let buttons = this.buttonsDOM(), body = this.bodyDOM();\n        this.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        if (this.currentID == 0)\n            this.btnApply.setText('Create');\n        this.btnApply.onClick(() => this.applyChanges());\n        if (this.currentID > 0) {\n            this.btnRemove = dom('<button class=\"wmk-button wmk-button-default\">Remove</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n            this.btnRemove.onClick(() => this.applyRemove());\n        }\n        let grid = dom('<div/>').appendTo(body);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4] auto [end]' });\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col0' }).setText('# Atoms');\n        let inputNAtoms = dom('<input size=\"5\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col1' }));\n        inputNAtoms.elInput.readOnly = true;\n        inputNAtoms.setValue(this.unit.atoms.length.toString());\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col2' }).setText('Out-bonds');\n        let inputNBond = dom('<input size=\"5\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col3' }));\n        inputNBond.elInput.readOnly = true;\n        inputNBond.setValue(this.outBonds.length.toString());\n        let row = 1;\n        if (this.outBonds.length == 2) {\n            row++;\n            dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0` }).setText('Connectivity');\n            this.optionConnect = new OptionList(['Unknown', 'Head-to-Tail', 'Head-to-Head', 'Random']);\n            this.optionConnect.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col1 / auto / col4` }));\n            if (this.unit.connect == PolymerBlockConnectivity.HeadToTail)\n                this.optionConnect.setSelectedIndex(1);\n            else if (this.unit.connect == PolymerBlockConnectivity.HeadToHead)\n                this.optionConnect.setSelectedIndex(2);\n            else if (this.unit.connect == PolymerBlockConnectivity.Random)\n                this.optionConnect.setSelectedIndex(3);\n        }\n        if (this.outBonds.length == 4 && Vec.uniqueUnstable(this.outAtoms).length == 4) {\n            row++;\n            dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0` }).setText('2x2 Connectivity');\n            this.populate2x2Conn(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col1 / auto / end` }));\n        }\n        let getList = (str) => {\n            if (!str)\n                return null;\n            let list = [];\n            for (let bit of str.split(',')) {\n                let v = parseInt(bit);\n                if (v > 0)\n                    list.push(v);\n                else\n                    return undefined;\n            }\n            return list;\n        };\n        for (let n = 0; n < this.borderAtoms.length; n++) {\n            row++;\n            let domLabel = dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0`, 'text-align': 'right', 'padding-right': '0.5em' });\n            if (n == 0)\n                domLabel.setText('Name ');\n            dom('<span/>').appendTo(domLabel).css({ 'color': '#008000' }).setText(indexToAtomLabel(n + 1));\n            let input = dom('<input size=\"20\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col1 / auto / end`, 'width': '100%' }));\n            let atom = this.borderAtoms[n];\n            let nvals = this.unit.atomName.get(atom);\n            if (nvals)\n                input.setValue(nvals.join(','));\n            input.onInput(() => {\n                let list = getList(input.getValue());\n                if (list !== undefined)\n                    this.unit.atomName.set(atom, list);\n            });\n        }\n        for (let n = 0; n < this.outAtoms.length; n++) {\n            row++;\n            let domLabel = dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0`, 'text-align': 'right', 'padding-right': '0.5em' });\n            if (n == 0)\n                domLabel.setText('Link ');\n            dom('<span/>').appendTo(domLabel).css({ 'color': '#800080' }).setText(indexToBondLabel(n + 1));\n            dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col1` }).setText('Include');\n            let inputIncl = dom('<input size=\"10\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col2`, 'width': '100%' }));\n            dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col3` }).setText('Exclude');\n            let inputExcl = dom('<input size=\"10\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col4`, 'width': '100%' }));\n            let bond = this.outBonds[n];\n            let ivals = this.unit.bondIncl.get(bond), evals = this.unit.bondExcl.get(bond);\n            if (ivals)\n                inputIncl.setValue(ivals.join(','));\n            if (evals)\n                inputExcl.setValue(evals.join(','));\n            inputIncl.onInput(() => {\n                let list = getList(inputIncl.getValue());\n                if (list !== undefined)\n                    this.unit.bondIncl.set(bond, list);\n            });\n            inputExcl.onInput(() => {\n                let list = getList(inputExcl.getValue());\n                if (list !== undefined)\n                    this.unit.bondExcl.set(bond, list);\n            });\n        }\n        row++;\n        this.populateUncap(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0 / auto / col4`, 'text-align': 'center' }));\n        row++;\n        this.divPreview = dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0 / auto / col4`, 'text-align': 'center' });\n        this.renderUnit();\n        let focusable = body.findAll('input,textarea');\n        if (focusable.length > 0)\n            focusable[0].grabFocus(true);\n        for (let dom of focusable) {\n            dom.css({ 'font': 'inherit' });\n            dom.onKeyDown((event) => {\n                let keyCode = event.keyCode || event.which;\n                if (keyCode == 13)\n                    this.applyChanges();\n                if (keyCode == 27)\n                    this.close();\n            });\n        }\n    }\n    close() {\n        this.proxyClip.popHandler();\n        super.close();\n    }\n    populate2x2Conn(div) {\n        const perms = [[0, 1, 2, 3], [0, 1, 3, 2], [0, 2, 1, 3], [0, 2, 3, 1], [0, 3, 1, 2], [0, 3, 2, 1]];\n        let bondConnOptions = [null];\n        let optionList = ['None'];\n        let selidx = 0;\n        for (let perm of perms) {\n            let bonds = Vec.idxGet(this.outBonds, perm);\n            if (Vec.equals(bonds, this.unit.bondConn))\n                selidx = optionList.length;\n            bondConnOptions.push(bonds);\n            optionList.push(`${perm[0] + 1},${perm[1] + 1}:${perm[2] + 1},${perm[3] + 1}`);\n        }\n        this.optionBondConn = new OptionList(optionList);\n        this.optionBondConn.setSelectedIndex(selidx);\n        this.optionBondConn.render(div);\n        this.optionBondConn.onSelect((idx) => {\n            this.unit.bondConn = bondConnOptions[idx];\n            this.renderUnit();\n        });\n    }\n    populateUncap(div) {\n        let uncapAtoms = [];\n        skip: for (let a of this.outAtoms)\n            if (this.mol.atomAdjCount(a) == 1 && this.mol.atomElement(a) != '*') {\n                for (let unit of this.polymer.getUnits())\n                    if (unit.atoms.includes(a))\n                        continue skip;\n                uncapAtoms.push(a);\n            }\n        if (uncapAtoms.length == 0)\n            return;\n        let btnUncap = dom('<button class=\"wmk-button wmk-button-default\">Uncap Exterior</button>').appendTo(div);\n        btnUncap.onClick(() => {\n            btnUncap.elInput.disabled = true;\n            for (let a of uncapAtoms)\n                this.mol.setAtomElement(a, '*');\n        });\n    }\n    applyChanges() {\n        if (this.optionConnect) {\n            let sel = this.optionConnect.getSelectedIndex();\n            if (sel == 0)\n                this.unit.connect = null;\n            else if (sel == 1)\n                this.unit.connect = PolymerBlockConnectivity.HeadToTail;\n            else if (sel == 2)\n                this.unit.connect = PolymerBlockConnectivity.HeadToHead;\n            else if (sel == 3)\n                this.unit.connect = PolymerBlockConnectivity.Random;\n        }\n        if (this.currentID)\n            this.polymer.removeUnit(this.currentID);\n        this.currentID = this.polymer.createUnit(this.unit.clone());\n        this.polymer.rewriteMolecule();\n        this.callbackApply(this);\n    }\n    applyRemove() {\n        if (this.currentID)\n            this.polymer.removeUnit(this.currentID);\n        this.callbackApply(this);\n    }\n    renderUnit() {\n        let umol = this.umol.clone();\n        let policy = RenderPolicy.defaultColourOnWhite(20);\n        let measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n        let effects = new RenderEffects();\n        effects.atomCircleSz = Vec.numberArray(0, umol.numAtoms);\n        effects.atomCircleCol = Vec.numberArray(0, umol.numAtoms);\n        effects.atomDecoText = Vec.stringArray(null, umol.numAtoms);\n        effects.atomDecoCol = Vec.numberArray(null, umol.numAtoms);\n        effects.atomDecoSize = Vec.numberArray(null, umol.numAtoms);\n        let borderAtoms = this.borderAtoms.map((atom) => this.umap[atom - 1] + 1);\n        let outAtoms = this.outAtoms.map((atom) => this.umap[atom - 1] + 1);\n        for (let n = 1; n <= umol.numAtoms; n++) {\n            let bidx = borderAtoms.indexOf(n), oidx = outAtoms.indexOf(n);\n            if (bidx >= 0) {\n                effects.atomDecoText[n - 1] = indexToAtomLabel(bidx + 1);\n                effects.atomDecoCol[n - 1] = 0x008000;\n                effects.atomDecoSize[n - 1] = 0.5;\n            }\n            if (oidx >= 0) {\n                umol.setAtomCharge(n, 0);\n                umol.setAtomUnpaired(n, 0);\n                umol.setAtomIsotope(n, 0);\n                effects.atomCircleSz[n - 1] = 0.1;\n                effects.atomCircleCol[n - 1] = 0xFF00FF;\n                effects.atomDecoText[n - 1] = indexToBondLabel(oidx + 1);\n                effects.atomDecoCol[n - 1] = 0x800080;\n                effects.atomDecoSize[n - 1] = 0.5;\n                umol.setAtomElement(n, 'C');\n            }\n        }\n        let layout = new ArrangeMolecule(umol, measure, policy, effects);\n        layout.arrange();\n        layout.squeezeInto(0, 0, 300, 300);\n        let gfx = new MetaVector();\n        if (this.unit.bondConn) {\n            const LINES = [\n                [0, 1, 0xC86D08, 2, false], [2, 3, 0xC86D08, 2, false],\n                [0, 2, 0xC0C86D08, 1, true], [1, 3, 0xC0C86D08, 1, true]\n            ];\n            for (let [i1, i2, col, sz, circle] of LINES) {\n                let a1 = this.outAtoms[this.outBonds.indexOf(this.unit.bondConn[i1])];\n                let a2 = this.outAtoms[this.outBonds.indexOf(this.unit.bondConn[i2])];\n                let p1 = layout.getPoint(a1 - 1), p2 = layout.getPoint(a2 - 1);\n                gfx.drawLine(p1.oval.cx, p1.oval.cy, p2.oval.cx, p2.oval.cy, col, sz);\n                if (circle) {\n                    for (let f of [0.2, 0.4, 0.6, 0.8]) {\n                        let mx = p1.oval.cx + f * (p2.oval.cx - p1.oval.cx), my = p1.oval.cy + f * (p2.oval.cy - p1.oval.cy);\n                        gfx.drawOval(mx, my, 2, 2, col, sz, null);\n                    }\n                }\n            }\n        }\n        new DrawMolecule(layout, gfx).draw();\n        gfx.normalise();\n        this.divPreview.empty();\n        dom(gfx.createSVG()).appendTo(this.divPreview).css({ 'pointer-events': 'none' });\n    }\n}\n//# sourceMappingURL=EditPolymer.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { TEMPLATE_FILES } from '../data/AbbrevContainer';\nimport { DataSheetStream } from '../data/DataSheetStream';\nimport { MolUtil } from '../data/MolUtil';\nimport { OutlineMeasurement } from '../gfx/ArrangeMeasurement';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { ButtonBank } from '../ui/ButtonBank';\nimport { Theme } from '../util/Theme';\nimport { readTextURL } from '../util/util';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nexport class TemplateBank extends ButtonBank {\n    constructor(owner, group) {\n        super();\n        this.owner = owner;\n        this.group = group;\n        this.subgroups = null;\n        this.templates = null;\n    }\n    init() {\n        let policy = RenderPolicy.defaultBlackOnWhite();\n        policy.data.pointScale = 10;\n        policy.data.lineSize *= 1.5;\n        policy.data.bondSep *= 1.5;\n        (() => __awaiter(this, void 0, void 0, function* () {\n            if (TemplateBank.resourceData.length == 0)\n                yield this.loadResourceData();\n            if (this.group == null)\n                this.prepareSubGroups();\n            else\n                this.prepareTemplates();\n        }))();\n    }\n    update() {\n        if (this.subgroups == null && this.templates == null)\n            return;\n        this.buttons = [];\n        if (this.group == null)\n            this.populateGroups();\n        else\n            this.populateTemplates();\n    }\n    populateGroups() {\n        let groups = this.subgroups.groups, titles = this.subgroups.titles, preview = this.subgroups.preview;\n        for (let n = 0; n < groups.length; n++) {\n            this.buttons.push({ id: groups[n], metavec: preview[n], helpText: titles[n] });\n        }\n    }\n    populateTemplates() {\n        let names = this.templates.names, abbrev = this.templates.abbrev, mnemonic = this.templates.mnemonic, preview = this.templates.preview;\n        for (let n = 0; n < names.length; n++) {\n            this.buttons.push({ id: n.toString(), metavec: preview[n], helpText: names[n] });\n        }\n    }\n    hitButton(id) {\n        if (this.group == null) {\n            this.buttonView.pushBank(new TemplateBank(this.owner, id));\n        }\n        else {\n            let idx = parseInt(id);\n            let param = { fragNative: this.templates.molecules[idx] };\n            new MoleculeActivity(this.owner.getState(), ActivityType.TemplateFusion, param, this.owner).execute();\n        }\n    }\n    loadResourceData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let fn of TEMPLATE_FILES) {\n                let url = Theme.RESOURCE_URL + '/data/templates/' + fn + '.ds';\n                let dsstr = yield readTextURL(url);\n                TemplateBank.resourceList.push(fn);\n                TemplateBank.resourceData.push(DataSheetStream.readXML(dsstr));\n            }\n        });\n    }\n    prepareSubGroups() {\n        this.subgroups = { groups: TemplateBank.resourceList, titles: [], preview: [] };\n        let sz = this.buttonView.idealSize, msz = 0.5 * (sz - 2);\n        let policy = RenderPolicy.defaultBlackOnWhite();\n        policy.data.pointScale = 10;\n        let effects = new RenderEffects();\n        let measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n        for (let ds of TemplateBank.resourceData) {\n            this.subgroups.titles.push(ds.title);\n            let colMol = ds.firstColOfType(\"molecule\");\n            let metavec = new MetaVector();\n            for (let n = 0, idx = 0; idx < 4 && n < ds.numRows; n++) {\n                let mol = ds.getMolecule(n, colMol);\n                if (MolUtil.isBlank(mol))\n                    continue;\n                let layout = new ArrangeMolecule(mol, measure, policy, effects);\n                layout.arrange();\n                let col = (idx % 2), row = Math.floor(idx / 2);\n                layout.squeezeInto(1 + col * msz, 1 + row * msz, msz, msz, 1);\n                new DrawMolecule(layout, metavec).draw();\n                idx++;\n            }\n            metavec.width = sz;\n            metavec.height = sz;\n            this.subgroups.preview.push(metavec);\n        }\n        this.buttonView.refreshBank();\n    }\n    prepareTemplates() {\n        let idx = TemplateBank.resourceList.indexOf(this.group);\n        let ds = TemplateBank.resourceData[idx];\n        this.templates = { molecules: [], names: [], abbrev: [], mnemonic: [], preview: [] };\n        let sz = this.buttonView.idealSize;\n        let policy = RenderPolicy.defaultBlackOnWhite();\n        policy.data.pointScale = 12;\n        let effects = new RenderEffects();\n        let measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n        let colMol = ds.findColByName('Molecule');\n        let colName = ds.findColByName('Name');\n        let colAbbrev = ds.findColByName('Abbrev');\n        let colMnemonic = ds.findColByName('Mnemonic');\n        for (let n = 0; n < ds.numRows; n++) {\n            let mol = ds.getMolecule(n, colMol);\n            this.templates.molecules.push(mol.toString());\n            this.templates.names.push(ds.getString(n, colName));\n            this.templates.abbrev.push(ds.getString(n, colAbbrev));\n            this.templates.mnemonic.push(ds.getString(n, colMnemonic));\n            let layout = new ArrangeMolecule(mol, measure, policy, effects);\n            layout.arrange();\n            layout.squeezeInto(0, 0, sz, sz, 2);\n            let metavec = new MetaVector();\n            new DrawMolecule(layout, metavec).draw();\n            metavec.width = sz;\n            metavec.height = sz;\n            this.templates.preview.push(metavec);\n        }\n        this.buttonView.refreshBank();\n    }\n}\nTemplateBank.resourceList = [];\nTemplateBank.resourceData = [];\nexport class FusionBank extends ButtonBank {\n    constructor(owner) {\n        super();\n        this.owner = owner;\n    }\n    update() {\n        this.buttons = [];\n        this.buttons.push({ id: 'accept', imageFN: 'GenericAccept', helpText: 'Apply this template.' });\n        this.buttons.push({ id: 'prev', imageFN: 'TemplatePrev', helpText: 'Show previous fusion option.' });\n        this.buttons.push({ id: 'next', imageFN: 'TemplateNext', helpText: 'Show next fusion option.' });\n    }\n    hitButton(id) {\n        if (id == 'accept')\n            this.owner.templateAccept();\n        else if (id == 'prev')\n            this.owner.templateRotate(-1);\n        else if (id == 'next')\n            this.owner.templateRotate(1);\n    }\n    bankClosed() {\n        this.owner.clearPermutations();\n    }\n}\n//# sourceMappingURL=TemplateBank.js.map","import { ButtonBank } from '../ui/ButtonBank';\nexport var ToolBankItem;\n(function (ToolBankItem) {\n    ToolBankItem[\"Arrow\"] = \"arrow\";\n    ToolBankItem[\"Rotate\"] = \"rotate\";\n    ToolBankItem[\"Pan\"] = \"pan\";\n    ToolBankItem[\"Drag\"] = \"drag\";\n    ToolBankItem[\"Erasor\"] = \"erasor\";\n    ToolBankItem[\"BondOrder0\"] = \"bond:Order0\";\n    ToolBankItem[\"BondOrder1\"] = \"bond:Order1\";\n    ToolBankItem[\"BondOrder2\"] = \"bond:Order2\";\n    ToolBankItem[\"BondOrder3\"] = \"bond:Order3\";\n    ToolBankItem[\"BondUnknown\"] = \"bond:Unknown\";\n    ToolBankItem[\"BondInclined\"] = \"bond:Inclined\";\n    ToolBankItem[\"BondDeclined\"] = \"bond:Declined\";\n    ToolBankItem[\"RingAliph\"] = \"ringAliph\";\n    ToolBankItem[\"RingArom\"] = \"ringArom\";\n    ToolBankItem[\"AtomPlus\"] = \"atomPlus\";\n    ToolBankItem[\"AtomMinus\"] = \"atomMinus\";\n    ToolBankItem[\"BondPfx\"] = \"bond:\";\n    ToolBankItem[\"ElementPfx\"] = \"element:\";\n})(ToolBankItem || (ToolBankItem = {}));\nconst TOOLS_MAIN = [\n    { id: ToolBankItem.Arrow, imageFN: 'ToolSelect', helpText: 'Selection tool.', mnemonic: 'Escape' },\n    { id: ToolBankItem.Rotate, imageFN: 'ToolRotate', helpText: 'Rotate subject atoms.', mnemonic: '' },\n    { id: ToolBankItem.Pan, imageFN: 'ToolPan', helpText: 'Pan the viewport around the screen.', mnemonic: '' },\n    { id: ToolBankItem.Drag, imageFN: 'ToolDrag', helpText: 'Drag selected atoms to new positions.', mnemonic: '' },\n    { id: ToolBankItem.Erasor, imageFN: 'ToolErasor', helpText: 'Delete atoms or bonds by selecting.', mnemonic: 'Delete' },\n    { id: ToolBankItem.BondOrder0, imageFN: 'BondZero', helpText: 'Create or change a bond to zero order.', mnemonic: 'Shift+0', 'key': ')' },\n    { id: ToolBankItem.BondOrder1, imageFN: 'BondOne', helpText: 'Create or change a bond to single.', mnemonic: 'Shift+1', 'key': '!' },\n    { id: ToolBankItem.BondOrder2, imageFN: 'BondTwo', helpText: 'Create or change a bond to double.', mnemonic: 'Shift+2', 'key': '@' },\n    { id: ToolBankItem.BondOrder3, imageFN: 'BondThree', helpText: 'Create or change a bond to triple.', mnemonic: 'Shift+3', 'key': '#' },\n    { id: ToolBankItem.BondUnknown, imageFN: 'BondSquig', helpText: 'Create or change a bond to unknown stereochemistry.', mnemonic: 'Shift+4', 'key': '$' },\n    { id: ToolBankItem.BondInclined, imageFN: 'BondUp', helpText: 'Create or change a bond to up-wedge.', mnemonic: 'Shift+5', 'key': '%' },\n    { id: ToolBankItem.BondDeclined, imageFN: 'BondDown', helpText: 'Create or change a bond to down-wedge.', mnemonic: 'Shift+6', 'key': '^' },\n    { id: ToolBankItem.RingAliph, imageFN: 'ToolRing', helpText: 'Create plain ring.', mnemonic: 'Shift+7', 'key': '&' },\n    { id: ToolBankItem.RingArom, imageFN: 'ToolArom', helpText: 'Create aromatic ring.', mnemonic: 'Shift+8', 'key': '*' },\n    { id: ToolBankItem.AtomPlus, imageFN: 'AtomPlus', helpText: 'Increase charge on atom.', mnemonic: '' },\n    { id: ToolBankItem.AtomMinus, imageFN: 'AtomMinus', helpText: 'Decrease charge on atom.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'C', 'text': 'C', helpText: 'Change elements to Carbon.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'N', 'text': 'N', helpText: 'Change elements to Nitrogen.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'O', 'text': 'O', helpText: 'Change elements to Oxygen.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'S', 'text': 'S', helpText: 'Change elements to Sulfur.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'P', 'text': 'P', helpText: 'Change elements to Phosphorus.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'H', 'text': 'H', helpText: 'Change elements to Hydrogen.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'F', 'text': 'F', helpText: 'Change elements to Fluorine.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'Cl', 'text': 'Cl', helpText: 'Change elements to Chlorine.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'Br', 'text': 'Br', helpText: 'Change elements to Bromine.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'A', 'text': 'A', helpText: 'Pick other element.', mnemonic: '' }\n];\nexport class ToolBank extends ButtonBank {\n    constructor(owner) {\n        super();\n        this.owner = owner;\n    }\n    update() {\n        for (let btn of TOOLS_MAIN)\n            this.buttons.push(btn);\n        this.buttonView.setSelectedButton('arrow');\n    }\n    hitButton(id) {\n        this.buttonView.setSelectedButton(id);\n    }\n    claimKey(event) {\n        for (let item of TOOLS_MAIN) {\n            if (ButtonBank.matchKey(event, item.mnemonic, item.key)) {\n                this.hitButton(item.id);\n                return true;\n            }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=ToolBank.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CoordUtil } from '../data/CoordUtil';\nimport { DataSheetStream } from '../data/DataSheetStream';\nimport { Molecule } from '../data/Molecule';\nimport { MoleculeStream } from '../data/MoleculeStream';\nimport { MolUtil } from '../data/MolUtil';\nimport { PolymerBlock } from '../data/PolymerBlock';\nimport { SketchUtil } from '../data/SketchUtil';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { ButtonView, ButtonViewPosition } from '../ui/ButtonView';\nimport { angleDiff, clone, DEGRAD, eventCoords, norm2_xy, norm_xy, RADDEG, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { CommandBank } from './CommandBank';\nimport { ContextSketch } from './ContextSketch';\nimport { DraggingTool, DrawCanvas } from './DrawCanvas';\nimport { EditAtom } from './EditAtom';\nimport { EditBond } from './EditBond';\nimport { EditPolymer } from './EditPolymer';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nimport { FusionBank, TemplateBank } from './TemplateBank';\nimport { ToolBank, ToolBankItem } from './ToolBank';\nexport class Sketcher extends DrawCanvas {\n    constructor() {\n        super();\n        this.callbackSpecialPaste = null;\n        this.inDialog = false;\n        this.initialFocus = true;\n        this.useToolBank = true;\n        this.lowerToolBank = false;\n        this.useCommandBank = true;\n        this.lowerCommandBank = false;\n        this.useTemplateBank = true;\n        this.lowerTemplateBank = false;\n        this.debugOutput = undefined;\n        this.beenSetup = false;\n        this.undoStack = [];\n        this.redoStack = [];\n        this.fadeWatermark = 0;\n        this.toolView = null;\n        this.commandView = null;\n        this.templateView = null;\n        this.proxyClip = null;\n        this.proxyMenu = null;\n    }\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    defineMolecule(mol, withAutoScale = true, withStashUndo = false, keepSelect = false) {\n        if (mol.compareTo(this.mol) == 0)\n            return;\n        if (withStashUndo)\n            this.stashUndo();\n        this.stopTemplateFusion();\n        this.mol = mol.clone();\n        if (this.callbackChangeMolecule)\n            this.callbackChangeMolecule(this.mol);\n        this.guidelines = [];\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            for (let sprout of SketchUtil.guidelineSprouts(this.mol, n))\n                this.guidelines.push(sprout);\n        }\n        if (!this.beenSetup)\n            return;\n        if (!keepSelect) {\n            this.currentAtom = this.currentBond = 0;\n            this.selectedMask = null;\n        }\n        this.stereo = null;\n        this.hoverAtom = 0;\n        this.hoverBond = 0;\n        if (!withAutoScale)\n            this.renderMolecule();\n        else\n            this.autoScale();\n    }\n    defineClipboard(proxy) {\n        this.proxyClip = proxy;\n    }\n    defineContext(proxy) {\n        this.proxyMenu = proxy;\n    }\n    defineMoleculeString(molsk, withAutoScale, withStashUndo) {\n        this.defineMolecule(Molecule.fromString(molsk), withAutoScale, withStashUndo);\n    }\n    defineRenderPolicy(policy) {\n        this.policy = policy;\n        this.pointScale = policy.data.pointScale;\n    }\n    defineBackground(borderCol, borderRad, bgCol) {\n        if (borderCol != null)\n            this.border = borderCol;\n        if (borderRad != null)\n            this.borderRadius = borderRad;\n        if (bgCol != null)\n            this.background = bgCol;\n    }\n    clearMolecule() { this.defineMolecule(new Molecule(), true, true); }\n    getMolecule() { return this.mol.clone(); }\n    setup(callback) {\n        this.beenSetup = true;\n        if (this.mol == null)\n            this.mol = new Molecule();\n        if (this.policy == null) {\n            this.policy = RenderPolicy.defaultColourOnWhite();\n            this.pointScale = this.policy.data.pointScale;\n        }\n        this.layoutMolecule();\n        this.centreAndShrink();\n        this.redrawMetaVector();\n        if (callback)\n            callback();\n    }\n    setupAsync() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => this.setup(() => resolve()));\n        });\n    }\n    render(parent) {\n        super.render(parent);\n        this.centreAndShrink();\n        this.redraw();\n        let reserveHeight = 0;\n        if (this.useCommandBank) {\n            this.commandView = new ButtonView(ButtonViewPosition.Bottom, 0, 0, this.width, this.height);\n            if (this.lowerCommandBank)\n                this.commandView.lowerBank();\n            this.commandView.setHasBigButtons(false);\n            this.commandView.pushBank(new CommandBank(this));\n            this.commandView.render(this.container);\n            reserveHeight = this.commandView.height;\n        }\n        if (this.useToolBank) {\n            this.toolView = new ButtonView(ButtonViewPosition.Left, 0, 0, this.width, this.height - reserveHeight);\n            if (this.lowerToolBank)\n                this.toolView.lowerBank();\n            this.toolView.setHasBigButtons(false);\n            this.toolView.pushBank(new ToolBank(this));\n            this.toolView.render(this.container);\n        }\n        if (this.useTemplateBank) {\n            this.templateView = new ButtonView(ButtonViewPosition.Right, 0, 0, this.width, this.height - reserveHeight);\n            if (this.lowerTemplateBank)\n                this.templateView.lowerBank();\n            this.templateView.setHasBigButtons(true);\n            this.templateView.pushBank(new TemplateBank(this, null));\n            this.templateView.render(this.container);\n        }\n        this.container.onClick((event) => this.mouseClick(event));\n        this.container.onDblClick((event) => this.mouseDoubleClick(event));\n        this.container.onMouseDown((event) => this.mouseDown(event));\n        this.container.onMouseUp((event) => this.mouseUp(event));\n        this.container.onMouseOver((event) => this.mouseOver(event));\n        this.container.onMouseLeave((event) => this.mouseOut(event));\n        this.container.onMouseMove((event) => this.mouseMove(event));\n        this.container.onKeyPress((event) => this.keyPressed(event));\n        this.container.onKeyDown((event) => this.keyDown(event));\n        this.container.onKeyUp((event) => this.keyUp(event));\n        this.container.onTouchStart((event) => this.touchStart(event));\n        this.container.onTouchMove((event) => this.touchMove(event));\n        this.container.onTouchCancel((event) => this.touchCancel(event));\n        this.container.onTouchEnd((event) => this.touchEnd(event));\n        this.contentDOM.onContextMenu((event) => this.contextMenu(event));\n        this.container.el.addEventListener('dragover', (event) => {\n            event.stopPropagation();\n            event.preventDefault();\n            event.dataTransfer.dropEffect = 'copy';\n        });\n        this.container.el.addEventListener('drop', (event) => {\n            event.stopPropagation();\n            event.preventDefault();\n            this.dropInto(event.dataTransfer);\n        });\n        if (this.initialFocus)\n            this.grabFocus();\n    }\n    get decoration() { return this.viewOpt.decoration; }\n    set decoration(decoration) { if (this.viewOpt.decoration != decoration) {\n        this.viewOpt.decoration = decoration;\n        this.renderMolecule();\n    } }\n    get showOxState() { return this.viewOpt.showOxState; }\n    set showOxState(showOxState) { if (this.viewOpt.showOxState != showOxState) {\n        this.viewOpt.showOxState = showOxState;\n        this.renderMolecule();\n    } }\n    get showQuery() { return this.viewOpt.showQuery; }\n    set showQuery(showQuery) { if (this.viewOpt.showQuery != showQuery) {\n        this.viewOpt.showQuery = showQuery;\n        this.renderMolecule();\n    } }\n    get showArtifacts() { return this.viewOpt.showArtifacts; }\n    set showArtifacts(showArtifacts) { if (this.viewOpt.showArtifacts != showArtifacts) {\n        this.viewOpt.showArtifacts = showArtifacts;\n        this.renderMolecule();\n    } }\n    changeSize(width, height) {\n        if (width == this.width && height == this.height)\n            return;\n        this.width = width;\n        this.height = height;\n        for (let widget of [this.container, this.canvasUnder, this.canvasMolecule, this.canvasOver]) {\n            widget.css({ 'width': `${width}px`, 'height': `${height}px` });\n        }\n        for (let btnv of [this.commandView, this.toolView, this.templateView])\n            if (btnv) {\n                btnv.setParentSize(width, height);\n                btnv.refreshBank();\n            }\n        this.autoScale();\n    }\n    showMessage(msg, isError = false) {\n        let watermark = ++this.fadeWatermark;\n        this.divMessage.css({ 'color': isError ? '#FF0000' : '#008000' });\n        this.divMessage.setText(msg);\n        let szLeft = (this.toolView == null ? 0 : this.toolView.width) + 2;\n        let szRight = (this.templateView == null ? 0 : this.templateView.width) + 2;\n        let szBottom = (this.commandView == null ? 0 : this.commandView.height) + 2;\n        this.divMessage.css({ 'left': szLeft + 'px' });\n        this.divMessage.css({ 'width': (this.width - szLeft - szRight) + 'px' });\n        this.divMessage.css({ 'height': (this.height - szBottom) + 'px' });\n        window.setTimeout(() => {\n            if (watermark == this.fadeWatermark)\n                this.divMessage.setText('');\n        }, 5000);\n    }\n    clearMessage() {\n        if (this.divMessage.getText() == '')\n            return;\n        this.fadeWatermark++;\n        this.divMessage.setText('');\n    }\n    autoScale() {\n        this.pointScale = this.policy.data.pointScale;\n        this.layoutMolecule();\n        this.centreAndShrink();\n        this.redrawMetaVector();\n        this.layoutTemplatePerm();\n        this.delayedRedraw();\n    }\n    anySelected() {\n        if (this.selectedMask == null)\n            return false;\n        for (let n = 0; n < this.selectedMask.length; n++)\n            if (this.selectedMask[n])\n                return true;\n        return false;\n    }\n    setSelected(atom, sel) {\n        if (this.selectedMask == null) {\n            this.selectedMask = new Array(this.mol.numAtoms);\n            for (let n = this.selectedMask.length - 1; n >= 0; n--)\n                this.selectedMask[n] = false;\n        }\n        while (this.selectedMask.length < this.mol.numAtoms) {\n            this.selectedMask.push(false);\n        }\n        this.selectedMask[atom - 1] = sel;\n        this.delayedRedraw();\n    }\n    changeCurrentAtom(atom) {\n        if (this.currentAtom == atom)\n            return;\n        this.currentAtom = atom;\n        this.currentBond = 0;\n        this.delayedRedraw();\n    }\n    changeCurrentBond(bond) {\n        if (this.currentBond == bond)\n            return;\n        this.currentBond = bond;\n        this.currentAtom = 0;\n        this.delayedRedraw();\n    }\n    clearSubject() {\n        if (this.currentAtom == 0 && this.currentBond == 0 && Vec.allFalse(this.selectedMask))\n            return;\n        this.currentAtom = 0;\n        this.currentBond = 0;\n        this.selectedMask = Vec.booleanArray(false, this.mol.numAtoms);\n        this.delayedRedraw();\n    }\n    setState(state, withStashUndo = true) {\n        this.stopTemplateFusion();\n        if (state.mol != null)\n            this.defineMolecule(state.mol.clone(), false, withStashUndo, true);\n        if (state.currentAtom >= 0)\n            this.currentAtom = state.currentAtom;\n        if (state.currentBond >= 0)\n            this.currentBond = state.currentBond;\n        if (state.selectedMask != null)\n            this.selectedMask = state.selectedMask == null ? null : state.selectedMask.slice(0);\n        this.delayedRedraw();\n    }\n    stashUndo() {\n        let state = this.getState();\n        this.undoStack.push(state);\n        while (this.undoStack.length > Sketcher.UNDO_SIZE) {\n            this.undoStack.splice(0, 1);\n        }\n        this.redoStack = [];\n    }\n    setPermutations(perms) {\n        this.templatePerms = perms;\n        this.pickTemplatePermutation(0);\n        this.fusionBank = new FusionBank(this);\n        this.templateView.pushBank(this.fusionBank);\n        if (this.mol.numAtoms == 0)\n            this.centreAndShrink();\n    }\n    stopTemplateFusion() {\n        if (this.fusionBank != null)\n            this.templateView.popBank();\n    }\n    clearPermutations() {\n        if (this.templatePerms == null)\n            return;\n        this.templatePerms = null;\n        this.delayedRedraw();\n        this.fusionBank = null;\n    }\n    templateAccept() {\n        let mol = Molecule.fromString(this.templatePerms[this.currentPerm].mol);\n        this.templateView.popBank();\n        this.defineMolecule(mol, false, true, false);\n    }\n    templateRotate(dir) {\n        let idx = (this.currentPerm + dir) % this.templatePerms.length;\n        if (idx < 0)\n            idx += this.templatePerms.length;\n        this.pickTemplatePermutation(idx);\n    }\n    canUndo() { return this.undoStack.length > 0; }\n    canRedo() { return this.redoStack.length > 0; }\n    performUndo() {\n        if (this.undoStack.length == 0)\n            return;\n        let state = this.getState();\n        this.redoStack.push(state);\n        this.setState(this.undoStack.pop(), false);\n    }\n    performRedo() {\n        if (this.redoStack.length == 0)\n            return;\n        let state = this.getState();\n        this.undoStack.push(state);\n        this.setState(this.redoStack.pop(), false);\n    }\n    performCopy(mol) {\n        if (!mol)\n            mol = this.getMolecule();\n        if (this.proxyClip)\n            this.proxyClip.setString(mol.toString());\n    }\n    performCopySelection(andCut) {\n        new MoleculeActivity(this.getState(), andCut ? ActivityType.Cut : ActivityType.Copy, {}, this).execute();\n    }\n    performPaste() {\n        if (this.proxyClip && this.proxyClip.canAlwaysGet()) {\n            let txt = this.proxyClip.getString();\n            this.pasteText(txt);\n        }\n    }\n    performActivity(activity, param = {}) {\n        new MoleculeActivity(this.getState(), activity, param, this).execute();\n    }\n    zoom(mag) {\n        let cx = 0.5 * this.width, cy = 0.5 * this.height;\n        let newScale = Math.min(10 * this.policy.data.pointScale, Math.max(0.1 * this.policy.data.pointScale, this.pointScale * mag));\n        if (newScale == this.pointScale)\n            return;\n        this.offsetX = cx - (newScale / this.pointScale) * (cx - this.offsetX);\n        this.offsetY = cy - (newScale / this.pointScale) * (cy - this.offsetY);\n        this.pointScale = newScale;\n        this.layoutMolecule();\n        this.redrawMetaVector();\n        this.layoutTemplatePerm();\n        this.delayedRedraw();\n    }\n    editCurrent() {\n        if (this.currentBond > 0)\n            this.editBond(this.currentBond);\n        else\n            this.editAtom(this.currentAtom);\n    }\n    pasteText(str) {\n        const pasteLocal = () => {\n            let mol = MoleculeStream.readUnknown(str);\n            if (!mol) {\n                let ds = DataSheetStream.readXML(str);\n                if (ds) {\n                    outer: for (let r = 0; r < ds.numRows; r++)\n                        for (let c = 0; c < ds.numCols; c++)\n                            if (ds.colType(c) == \"molecule\" && ds.notNull(r, c)) {\n                                mol = ds.getMolecule(r, c);\n                                break outer;\n                            }\n                }\n            }\n            if (mol != null)\n                this.pasteMolecule(mol);\n            else\n                alert('Text from clipboard is not a valid molecule.');\n        };\n        if (this.callbackSpecialPaste) {\n            (() => __awaiter(this, void 0, void 0, function* () {\n                let mol = yield this.callbackSpecialPaste(str);\n                if (mol)\n                    this.pasteMolecule(mol);\n                else\n                    pasteLocal();\n            }))();\n        }\n        else\n            pasteLocal();\n    }\n    pasteMolecule(mol) {\n        if (this.mol.numAtoms == 0) {\n            this.defineMolecule(mol, true, true, true);\n            return;\n        }\n        let molact = new MoleculeActivity(this.getState(), ActivityType.QueryPaste, { qmol: mol });\n        molact.execute();\n        if (molact.output.mol) {\n            this.defineMolecule(molact.output.mol, false, true, true);\n            return;\n        }\n        let param = { fragNative: mol.toString() };\n        new MoleculeActivity(this.getState(), ActivityType.TemplateFusion, param, this).execute();\n    }\n    pickTemplatePermutation(idx) {\n        let perm = this.templatePerms[idx];\n        this.currentPerm = idx;\n        this.layoutTemplatePerm();\n        this.delayedRedraw();\n    }\n    performPolymerBlock(atoms) {\n        let dlg = new EditPolymer(this.mol, atoms, this.proxyClip, () => {\n            if (this.mol.compareTo(dlg.mol) != 0)\n                this.defineMolecule(dlg.mol, false, true, true);\n            dlg.close();\n        });\n        dlg.callbackClose = () => {\n            this.inDialog = false;\n            this.grabFocus();\n        };\n        this.inDialog = true;\n        dlg.open();\n    }\n    grabFocus() {\n        this.container.grabFocus();\n    }\n    hasFocus() {\n        return this.container.hasFocus();\n    }\n    centreAndShrink() {\n        if (this.mol.numAtoms == 0 || this.layout == null) {\n            this.offsetX = 0.5 * this.width;\n            this.offsetY = 0.5 * this.height;\n            this.pointScale = this.policy.data.pointScale;\n            return;\n        }\n        let bounds = this.layout.determineBoundary(0);\n        let limW = this.width - 6, limH = this.height - 6;\n        let natW = bounds[2] - bounds[0], natH = bounds[3] - bounds[1];\n        let scale = 1;\n        if (natW > limW) {\n            let down = limW / natW;\n            scale *= down;\n            natW *= down;\n            natH *= down;\n        }\n        if (natH > limH) {\n            let down = limH / natH;\n            scale *= down;\n            natW *= down;\n            natH *= down;\n        }\n        if (scale < 1) {\n            this.pointScale *= scale;\n            this.layout.offsetEverything(this.offsetX * scale, this.offsetY * scale);\n            this.layout.scaleEverything(scale);\n            bounds = this.layout.determineBoundary(0);\n        }\n        let dx = 0.5 * (limW - natW) - bounds[0], dy = 0.5 * (limH - natH) - bounds[1];\n        this.offsetX += dx;\n        this.offsetY += dy;\n        this.layout.offsetEverything(dx, dy);\n    }\n    layoutTemplatePerm() {\n        if (this.currentPerm < 0 || this.templatePerms == null)\n            return;\n        let perm = this.templatePerms[this.currentPerm];\n        let tpolicy = new RenderPolicy(this.policy.data);\n        tpolicy.data.foreground = 0x808080;\n        tpolicy.data.atomCols = tpolicy.data.atomCols.slice(0);\n        for (let n in tpolicy.data.atomCols)\n            tpolicy.data.atomCols[n] = 0x808080;\n        let effects = new RenderEffects();\n        let layout = new ArrangeMolecule(Molecule.fromString(perm.display), this, tpolicy, effects);\n        layout.arrange();\n        perm.metavec = new MetaVector();\n        new DrawMolecule(layout, perm.metavec).draw();\n    }\n    renderMolecule() {\n        this.layoutMolecule();\n        this.redrawMetaVector();\n        this.delayedRedraw();\n    }\n    pickObjectCanvas(x, y) {\n        if (this.layout == null)\n            return 0;\n        if (this.toolView != null) {\n            let pos1 = this.container.offset(), pos2 = this.toolView.contentDOM.offset();\n            if (this.toolView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y))\n                return null;\n        }\n        if (this.commandView != null) {\n            let pos1 = this.container.offset(), pos2 = this.commandView.contentDOM.offset();\n            if (this.commandView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y))\n                return null;\n        }\n        if (this.templateView != null) {\n            let pos1 = this.container.offset(), pos2 = this.templateView.contentDOM.offset();\n            if (this.templateView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y))\n                return null;\n        }\n        return super.pickObjectCanvas(x, y);\n    }\n    updateHoverCursor(x, y) {\n        let tool = this.toolView ? this.toolView.selectedButton : '';\n        let toolApplies = tool && tool != ToolBankItem.Pan && tool != ToolBankItem.Rotate;\n        let mouseObj = 0;\n        if (this.dragType == DraggingTool.None && toolApplies) {\n            mouseObj = this.pickObject(x, y);\n        }\n        let mouseAtom = mouseObj > 0 ? mouseObj : 0, mouseBond = mouseObj < 0 ? -mouseObj : 0;\n        let abbrevThen = this.hoverAtom > 0 && MolUtil.hasAbbrev(this.mol, this.hoverAtom) ? this.hoverAtom : 0;\n        let abbrevNow = mouseAtom > 0 && MolUtil.hasAbbrev(this.mol, mouseAtom) ? mouseAtom : 0;\n        if (mouseAtom != this.hoverAtom || mouseBond != this.hoverBond) {\n            this.hoverAtom = mouseAtom;\n            this.hoverBond = mouseBond;\n            if (abbrevThen != abbrevNow) {\n                this.layoutMolecule();\n                this.redrawMetaVector();\n            }\n            this.delayedRedraw();\n        }\n    }\n    determineDragGuide(order) {\n        if (this.opAtom == 0 || this.mol.atomAdjCount(this.opAtom) == 0) {\n            let g = {\n                atom: this.opAtom,\n                orders: [order],\n                x: [],\n                y: [],\n                sourceX: this.opAtom == 0 ? this.clickX : this.angToX(this.mol.atomX(this.opAtom)),\n                sourceY: this.opAtom == 0 ? this.clickY : this.angToY(this.mol.atomY(this.opAtom)),\n                destX: [],\n                destY: []\n            };\n            let mx = this.opAtom == 0 ? this.xToAng(this.clickX) : this.mol.atomX(this.opAtom);\n            let my = this.opAtom == 0 ? this.yToAng(this.clickY) : this.mol.atomY(this.opAtom);\n            for (let n = 0; n < 12; n++) {\n                let theta = TWOPI * n / 12;\n                let dx = Molecule.IDEALBOND * Math.cos(theta), dy = Molecule.IDEALBOND * Math.sin(theta);\n                g.x.push(mx + dx);\n                g.y.push(my + dy);\n                g.destX.push(g.sourceX + dx * this.pointScale);\n                g.destY.push(g.sourceY - dy * this.pointScale);\n            }\n            return [g];\n        }\n        if (this.guidelines == null)\n            return null;\n        let best = null, single = null;\n        for (let n = 0; n < this.guidelines.length; n++) {\n            let g = this.guidelines[n];\n            if (g.atom != this.opAtom)\n                continue;\n            if (g.orders.indexOf(order) >= 0) {\n                best = g;\n                break;\n            }\n            if (g.orders.indexOf(1) >= 0)\n                single = g;\n        }\n        if (best == null)\n            best = single;\n        if (best == null)\n            return [];\n        let g = clone(best);\n        g.sourceX = this.angToX(this.mol.atomX(g.atom));\n        g.sourceY = this.angToY(this.mol.atomY(g.atom));\n        g.destX = [];\n        g.destY = [];\n        for (let n = 0; n < g.x.length; n++) {\n            g.destX.push(this.angToX(g.x[n]));\n            g.destY.push(this.angToY(g.y[n]));\n        }\n        return [g];\n    }\n    determineMoveGuide() {\n        let subj = this.subjectAtoms(false, true);\n        if (subj.length == 0 || subj.length == this.mol.numAtoms)\n            return null;\n        let guides = [];\n        for (let n = 0; n < this.guidelines.length; n++) {\n            let g = this.guidelines[n];\n            if (g.orders.indexOf(1) < 0 || subj.indexOf(g.atom) >= 0)\n                continue;\n            g = clone(g);\n            g.sourceX = this.angToX(this.mol.atomX(g.atom));\n            g.sourceY = this.angToY(this.mol.atomY(g.atom));\n            g.destX = [];\n            g.destY = [];\n            for (let i = 0; i < g.x.length; i++) {\n                g.destX.push(this.angToX(g.x[i]));\n                g.destY.push(this.angToY(g.y[i]));\n            }\n            guides.push(g);\n        }\n        return guides;\n    }\n    editAtom(atom) {\n        let dlg = new EditAtom(this.mol, atom, this.proxyClip, () => {\n            if (this.mol.compareTo(dlg.mol) != 0)\n                this.defineMolecule(dlg.mol, false, true, true);\n            dlg.close();\n        });\n        dlg.callbackClose = () => {\n            this.inDialog = false;\n            this.grabFocus();\n        };\n        if (atom == 0 && this.mol.numAtoms > 0) {\n            let box = this.mol.boundary();\n            dlg.newX = box.maxX() + Molecule.IDEALBOND;\n            dlg.newY = box.midY();\n        }\n        this.inDialog = true;\n        dlg.open();\n    }\n    editBond(bond) {\n        if (bond == 0)\n            return;\n        let dlg = new EditBond(this.mol, bond, this.proxyClip, () => {\n            if (this.mol.compareTo(dlg.mol) != 0)\n                this.defineMolecule(dlg.mol, false, true, true);\n            dlg.close();\n        });\n        dlg.callbackClose = () => {\n            this.inDialog = false;\n            this.grabFocus();\n        };\n        this.inDialog = true;\n        dlg.open();\n    }\n    hitArrowKey(dx, dy) {\n        let watermark = ++this.cursorWatermark;\n        this.cursorDX += dx;\n        this.cursorDY += dy;\n        setTimeout(() => {\n            if (watermark == this.cursorWatermark)\n                this.cursorJumpDirection();\n        }, 100);\n    }\n    cursorJumpDirection() {\n        let theta = Math.atan2(this.cursorDY, this.cursorDX);\n        if (this.currentAtom > 0)\n            this.jumpFromCurrentAtom(theta);\n        else if (this.currentBond > 0)\n            this.jumpFromCurrentBond(theta);\n        else\n            this.jumpFromNowhere(theta);\n        this.cursorDX = 0;\n        this.cursorDY = 0;\n        this.cursorWatermark = 0;\n    }\n    jumpFromCurrentAtom(theta) {\n        let adj = this.mol.atomAdjList(this.currentAtom);\n        let closest = 0, closestDelta = Number.MAX_VALUE;\n        for (let a of adj) {\n            let dx = this.mol.atomX(a) - this.mol.atomX(this.currentAtom), dy = this.mol.atomY(a) - this.mol.atomY(this.currentAtom);\n            let adjTheta = Math.atan2(dy, dx), delta = Math.abs(angleDiff(adjTheta, theta));\n            if (delta < 35.0 * DEGRAD && delta < closestDelta)\n                [closest, closestDelta] = [a, delta];\n        }\n        if (closest > 0) {\n            this.changeCurrentBond(this.mol.findBond(this.currentAtom, closest));\n            return;\n        }\n        let best = 0, bestScore = Number.MIN_VALUE;\n        for (let n = 1; n <= this.mol.numAtoms; n++)\n            if (n != this.currentAtom && adj.indexOf(n) < 0) {\n                let dx = this.mol.atomX(n) - this.mol.atomX(this.currentAtom), dy = this.mol.atomY(n) - this.mol.atomY(this.currentAtom);\n                let adjTheta = Math.atan2(dy, dx), delta = Math.abs(angleDiff(adjTheta, theta));\n                if (delta > 45.0 * DEGRAD)\n                    continue;\n                let cosdelta = Math.cos(delta);\n                let score = Math.pow(cosdelta, 2) / (norm2_xy(dx, dy) + 0.001);\n                if (score > bestScore)\n                    [best, bestScore] = [n, score];\n            }\n        if (best > 0)\n            this.changeCurrentAtom(best);\n    }\n    jumpFromCurrentBond(theta) {\n        let [bfr, bto] = this.mol.bondFromTo(this.currentBond);\n        let bondTheta = Math.atan2(this.mol.atomY(bto) - this.mol.atomY(bfr), this.mol.atomX(bto) - this.mol.atomX(bfr));\n        if (Math.abs(angleDiff(theta, bondTheta)) < 50.0 * DEGRAD)\n            this.changeCurrentAtom(bto);\n        if (Math.abs(angleDiff(theta, bondTheta + Math.PI)) < 50.0 * DEGRAD)\n            this.changeCurrentAtom(bfr);\n    }\n    jumpFromNowhere(theta) {\n        if (this.mol.numAtoms == 0)\n            return;\n        if (this.mol.numAtoms == 1) {\n            this.changeCurrentAtom(1);\n            return;\n        }\n        let cx = 0, cy = 0;\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            cx += this.mol.atomX(n);\n            cy += this.mol.atomY(n);\n        }\n        let inv = 1.0 / this.mol.numAtoms;\n        cx *= inv;\n        cy *= inv;\n        let best = 0, bestScore = Number.MIN_VALUE;\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let dx = this.mol.atomX(n) - cx, dy = this.mol.atomY(n) - cy, atheta = Math.atan2(dy, dx);\n            let cosdelta = Math.cos(Math.abs(angleDiff(theta + Math.PI, atheta)));\n            let score = cosdelta * norm_xy(dx, dy);\n            if (score > bestScore)\n                [best, bestScore] = [n, score];\n        }\n        if (best > 0)\n            this.changeCurrentAtom(best);\n    }\n    createRing(rsz, aromatic) {\n        const { mol } = this;\n        let rx = null, ry = null;\n        if (this.currentAtom > 0) {\n            let dx = 0, dy = 0, adj = mol.atomAdjList(this.currentAtom);\n            let x0 = mol.atomX(this.currentAtom), y0 = mol.atomY(this.currentAtom);\n            for (let a of adj) {\n                dx -= mol.atomX(a) - x0;\n                dy -= mol.atomY(a) - y0;\n            }\n            if (Math.abs(dx) < 0.001 && Math.abs(dy) < 0.001) {\n                if (adj.length >= 2) {\n                    let theta = adj.map((a) => Math.atan2(mol.atomY(a) - x0, mol.atomX(a) - y0));\n                    Vec.sort(theta);\n                    let best = Number.POSITIVE_INFINITY;\n                    for (let n = 0; n < theta.length; n++) {\n                        let th = angleDiff(theta[(n + 1) % theta.length], theta[n]);\n                        let lx = Math.cos(th), ly = Math.sin(th), score = CoordUtil.congestionPoint(mol, x0 + lx, y0 + ly);\n                        if (score < best)\n                            [best, dx, dy] = [score, lx, ly];\n                    }\n                }\n                else\n                    [dx, dy] = [1, 0];\n            }\n            [rx, ry] = SketchUtil.proposeAtomRing(this.mol, rsz, this.currentAtom, dx, dy);\n        }\n        else if (this.currentBond > 0) {\n            let a1 = mol.bondFrom(this.currentBond), a2 = mol.bondTo(this.currentBond);\n            let x1 = mol.atomX(a1), y1 = mol.atomY(a1), x2 = mol.atomX(a2), y2 = mol.atomY(a2);\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2), ox = y1 - y2, oy = x2 - x1;\n            let [dx, dy] = CoordUtil.congestionPoint(mol, cx - ox, cy - oy) < CoordUtil.congestionPoint(mol, cx + ox, cy + oy) ? [-ox, -oy] : [ox, oy];\n            [rx, ry] = SketchUtil.proposeBondRing(this.mol, rsz, this.currentBond, dx, dy);\n        }\n        else {\n            let x = 0, y = 0;\n            if (mol.numAtoms > 0) {\n                let bound = mol.boundary();\n                [x, y] = [bound.maxX() + Molecule.IDEALBOND, bound.midY()];\n            }\n            [rx, ry] = SketchUtil.proposeNewRing(this.mol, rsz, x, y, 0, -1, false);\n        }\n        if (!rx)\n            return;\n        let param = {\n            ringX: rx,\n            ringY: ry,\n            aromatic: aromatic\n        };\n        let molact = new MoleculeActivity(this.getState(), ActivityType.Ring, param, this);\n        molact.execute();\n    }\n    ctrlArrowKey(dx, dy) {\n        let watermark = ++this.cursorWatermark;\n        this.cursorDX += dx;\n        this.cursorDY += dy;\n        setTimeout(() => {\n            if (watermark == this.cursorWatermark) {\n                this.sproutDirection(this.cursorDX, this.cursorDY);\n                this.cursorDX = this.cursorDY = 0;\n            }\n        }, 100);\n    }\n    sproutDirection(deltaX, deltaY) {\n        new MoleculeActivity(this.getState(), ActivityType.SproutDirection, { deltaX, deltaY }, this).execute();\n    }\n    mouseClick(event) {\n        event.stopPropagation();\n        this.grabFocus();\n        return false;\n    }\n    mouseDoubleClick(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        if (this.toolView.selectedButton != ToolBankItem.Arrow)\n            return;\n        let xy = eventCoords(event, this.container);\n        let clickObj = this.pickObject(xy[0], xy[1]);\n        if (clickObj > 0) {\n            let atom = clickObj;\n            this.editAtom(atom);\n        }\n        else {\n            let bond = -clickObj;\n            this.editBond(bond);\n        }\n        return false;\n    }\n    mouseDown(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.clearMessage();\n        if (event.ctrlKey && !event.shiftKey && !event.altKey) {\n            this.contextMenu(event);\n            return;\n        }\n        let [x, y] = eventCoords(event, this.container);\n        this.interactStart(x, y, event.shiftKey, event.ctrlKey, event.altKey);\n        return false;\n    }\n    mouseUp(event) {\n        event.stopPropagation();\n        let [x, y] = eventCoords(event, this.container);\n        this.interactEnd(x, y);\n        return false;\n    }\n    mouseOver(event) {\n        event.stopPropagation();\n        let [x, y] = eventCoords(event, this.container);\n        this.updateHoverCursor(x, y);\n        this.updateLasso(x, y);\n        return false;\n    }\n    mouseOut(event) {\n        event.stopPropagation();\n        let [x, y] = eventCoords(event, this.container);\n        this.updateHoverCursor(x, y);\n        this.updateLasso(x, y);\n        return false;\n    }\n    mouseMove(event) {\n        event.stopPropagation();\n        let [x, y] = eventCoords(event, this.container);\n        this.updateHoverCursor(x, y);\n        if (this.dragType == DraggingTool.None)\n            return;\n        this.interactDrag(x, y);\n        return false;\n    }\n    keyPressed(event) {\n    }\n    keyDown(event) {\n        let key = event.key;\n        if (key == \"Escape\") {\n            for (let view of [this.templateView, this.commandView, this.toolView])\n                if (view != null && view.stackSize > 1) {\n                    view.popBank();\n                    event.preventDefault();\n                    event.stopPropagation();\n                    return;\n                }\n        }\n        let mod = (event.shiftKey ? 'S' : '') + (event.ctrlKey || event.metaKey ? 'C' : '') + (event.altKey ? 'A' : '');\n        let nomod = !event.shiftKey && !event.ctrlKey && !event.altKey && !event.metaKey;\n        if (key == \"Enter\")\n            this.editCurrent();\n        else if (key == \"ArrowLeft\" && nomod)\n            this.hitArrowKey(-1, 0);\n        else if (key == \"ArrowRight\" && nomod)\n            this.hitArrowKey(1, 0);\n        else if (key == \"ArrowUp\" && nomod)\n            this.hitArrowKey(0, 1);\n        else if (key == \"ArrowDown\" && nomod)\n            this.hitArrowKey(0, -1);\n        else if (key == 'z' && mod == 'C')\n            this.performUndo();\n        else if (key == 'Z' && mod == 'SC')\n            this.performRedo();\n        else if (key == 'z' && nomod)\n            this.toolView.cycleSelected(-1);\n        else if (key == 'x' && nomod)\n            this.toolView.cycleSelected(1);\n        else if (this.toolView != null && this.toolView.topBank.claimKey(event)) { }\n        else if (this.commandView != null && this.commandView.topBank.claimKey(event)) { }\n        else if (this.templateView != null && this.templateView.topBank.claimKey(event)) { }\n        else if (key == '#' && mod == 'SC')\n            this.createRing(3, false);\n        else if (key == '$' && mod == 'SC')\n            this.createRing(4, false);\n        else if (key == '%' && mod == 'SC')\n            this.createRing(5, false);\n        else if (key == '^' && mod == 'SC')\n            this.createRing(6, false);\n        else if (key == '&' && mod == 'SC')\n            this.createRing(7, false);\n        else if (key == '3' && mod == 'CA')\n            this.createRing(3, true);\n        else if (key == '4' && mod == 'CA')\n            this.createRing(4, true);\n        else if (key == '5' && mod == 'CA')\n            this.createRing(5, true);\n        else if (key == '6' && mod == 'CA')\n            this.createRing(6, true);\n        else if (key == '7' && mod == 'CA')\n            this.createRing(7, true);\n        else if (key == 'c' && mod == 'C' && this.proxyClip)\n            this.proxyClip.triggerCopy(false);\n        else if (key == 'x' && mod == 'C' && this.proxyClip)\n            this.proxyClip.triggerCopy(true);\n        else if (key == 'v' && mod == 'C' && this.proxyClip && this.proxyClip.canAlwaysGet())\n            this.proxyClip.triggerPaste();\n        else if (key == \"ArrowLeft\" && mod == 'C')\n            this.ctrlArrowKey(-1, 0);\n        else if (key == \"ArrowRight\" && mod == 'C')\n            this.ctrlArrowKey(1, 0);\n        else if (key == \"ArrowUp\" && mod == 'C')\n            this.ctrlArrowKey(0, 1);\n        else if (key == \"ArrowDown\" && mod == 'C')\n            this.ctrlArrowKey(0, -1);\n        else if (key == '1' && mod == 'C')\n            this.sproutDirection(-1, -1);\n        else if (key == '2' && mod == 'C')\n            this.sproutDirection(0, -1);\n        else if (key == '3' && mod == 'C')\n            this.sproutDirection(1, -1);\n        else if (key == '4' && mod == 'C')\n            this.sproutDirection(-1, 0);\n        else if (key == '6' && mod == 'C')\n            this.sproutDirection(1, 0);\n        else if (key == '7' && mod == 'C')\n            this.sproutDirection(-1, 1);\n        else if (key == '8' && mod == 'C')\n            this.sproutDirection(0, 1);\n        else if (key == '9' && mod == 'C')\n            this.sproutDirection(1, 1);\n        else\n            return;\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    keyUp(event) {\n    }\n    touchStart(event) {\n        let [x, y] = eventCoords(event.touches[0], this.container);\n        if (this.pickObjectCanvas(x, y) == null)\n            return;\n        this.interactStart(x, y, event.shiftKey, event.ctrlKey, event.altKey);\n        event.preventDefault();\n    }\n    touchMove(event) {\n        if (this.dragType != DraggingTool.None) {\n            let [x, y] = eventCoords(event.touches[0], this.container);\n            this.interactDrag(x, y);\n        }\n        event.preventDefault();\n    }\n    touchCancel(event) {\n    }\n    touchEnd(event) {\n        if (this.dragType != DraggingTool.None) {\n            let [x, y] = [this.mouseX, this.mouseY];\n            this.interactEnd(x, y);\n            event.preventDefault();\n        }\n    }\n    mouseWheel(event) {\n    }\n    contextMenu(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.dragType = DraggingTool.None;\n        if (!this.proxyMenu)\n            return;\n        let [x, y] = eventCoords(event, this.container);\n        let clickObj = this.pickObject(x, y);\n        if (clickObj > 0)\n            this.changeCurrentAtom(clickObj);\n        else if (clickObj < 0)\n            this.changeCurrentBond(-clickObj);\n        let state = this.getState();\n        let ctx = new ContextSketch(state, this, this.proxyClip);\n        let menu = ctx.populate();\n        this.proxyMenu.openContextMenu(menu, event);\n    }\n    interactStart(x, y, shiftKey, ctrlKey, altKey) {\n        this.dragType = DraggingTool.Press;\n        this.opBudged = false;\n        this.dragGuides = null;\n        this.mouseX = x;\n        this.mouseY = y;\n        this.clickX = x;\n        this.clickY = y;\n        let clickObj = this.pickObject(x, y);\n        this.opAtom = clickObj > 0 ? clickObj : 0;\n        this.opBond = clickObj < 0 ? -clickObj : 0;\n        this.opShift = shiftKey;\n        this.opCtrl = ctrlKey;\n        this.opAlt = altKey;\n        let tool = '';\n        if (this.toolView != null)\n            tool = this.toolView.selectedButton;\n        if (tool == ToolBankItem.Arrow) {\n            if (!this.opShift && !this.opCtrl && !this.opAlt) {\n                this.dragType = DraggingTool.Press;\n            }\n            else if (!this.opShift && !this.opCtrl && this.opAlt) {\n                this.dragType = DraggingTool.Pan;\n            }\n            else if (!this.opShift && this.opCtrl && this.opAlt) {\n                this.dragType = DraggingTool.Zoom;\n            }\n        }\n        else if (tool == ToolBankItem.Rotate) {\n            this.dragType = DraggingTool.Rotate;\n            this.toolRotateIncr = this.opShift ? 0 : 15 * DEGRAD;\n        }\n        else if (tool == ToolBankItem.Pan) {\n            this.dragType = DraggingTool.Pan;\n        }\n        else if (tool == ToolBankItem.Drag) {\n            this.dragType = DraggingTool.Move;\n            if (this.opAtom > 0)\n                this.dragGuides = this.determineMoveGuide();\n            this.delayedRedraw();\n        }\n        else if (tool == ToolBankItem.Erasor) {\n            this.dragType = DraggingTool.Erasor;\n            this.lassoX = [x];\n            this.lassoY = [y];\n            this.lassoMask = [];\n        }\n        else if (tool == ToolBankItem.RingAliph) {\n            this.dragType = DraggingTool.Ring;\n            this.toolRingArom = false;\n            this.toolRingFreeform = this.opShift;\n        }\n        else if (tool == ToolBankItem.RingArom) {\n            this.dragType = DraggingTool.Ring;\n            this.toolRingArom = true;\n            this.toolRingFreeform = this.opShift;\n        }\n        else if (tool == ToolBankItem.AtomPlus) {\n            this.dragType = DraggingTool.Charge;\n            this.toolChargeDelta = 1;\n        }\n        else if (tool == ToolBankItem.AtomMinus) {\n            this.dragType = DraggingTool.Charge;\n            this.toolChargeDelta = -1;\n        }\n        else if (tool.startsWith(ToolBankItem.BondPfx)) {\n            this.dragType = DraggingTool.Bond;\n            this.toolBondOrder = 1;\n            this.toolBondType = Molecule.BONDTYPE_NORMAL;\n            if (tool == ToolBankItem.BondOrder0)\n                this.toolBondOrder = 0;\n            else if (tool == ToolBankItem.BondOrder2)\n                this.toolBondOrder = 2;\n            else if (tool == ToolBankItem.BondOrder3)\n                this.toolBondOrder = 3;\n            else if (tool == ToolBankItem.BondUnknown)\n                this.toolBondType = Molecule.BONDTYPE_UNKNOWN;\n            else if (tool == ToolBankItem.BondInclined)\n                this.toolBondType = Molecule.BONDTYPE_INCLINED;\n            else if (tool == ToolBankItem.BondDeclined)\n                this.toolBondType = Molecule.BONDTYPE_DECLINED;\n            if (this.opBond > 0) {\n                let [bfr, bto] = this.mol.bondFromTo(this.opBond), inPoly = false;\n                for (let poly of new PolymerBlock(this.mol).getUnits()) {\n                    let in1 = poly.atoms.includes(bfr), in2 = poly.atoms.includes(bto);\n                    if ((in1 && !in2) || (in2 && !in1)) {\n                        inPoly = true;\n                        break;\n                    }\n                }\n                if (inPoly) {\n                    this.toolBondOrder = 0;\n                    this.toolBondType = Molecule.BONDTYPE_NORMAL;\n                }\n            }\n            if (this.opBond == 0)\n                this.dragGuides = this.determineDragGuide(this.toolBondOrder);\n        }\n        else if (tool.startsWith(ToolBankItem.ElementPfx)) {\n            this.dragType = DraggingTool.Atom;\n            this.toolAtomSymbol = tool.substring(ToolBankItem.ElementPfx.length);\n            this.dragGuides = this.determineDragGuide(1);\n        }\n    }\n    interactDrag(x, y) {\n        if (!this.opBudged) {\n            let dx = x - this.clickX, dy = y - this.clickY;\n            if (dx * dx + dy * dy > 2 * 2)\n                this.opBudged = true;\n        }\n        if (this.dragType == DraggingTool.Press && this.opAtom == 0 && this.opBond == 0 && this.opBudged) {\n            this.dragType = DraggingTool.Lasso;\n            this.lassoX = [x];\n            this.lassoY = [y];\n            this.lassoMask = [];\n        }\n        if (this.dragType == DraggingTool.Lasso || this.dragType == DraggingTool.Erasor) {\n            this.updateLasso(x, y);\n        }\n        else if (this.dragType == DraggingTool.Pan) {\n            let dx = x - this.mouseX, dy = y - this.mouseY;\n            if (dx != 0 || dy != 0) {\n                this.offsetX += dx;\n                this.offsetY += dy;\n                this.layout.offsetEverything(dx, dy);\n                this.metavec.transformPrimitives(dx, dy, 1, 1);\n                if (this.currentPerm >= 0 && this.templatePerms != null) {\n                    let perm = this.templatePerms[this.currentPerm];\n                    perm.metavec.transformPrimitives(dx, dy, 1, 1);\n                }\n                this.delayedRedraw();\n            }\n            this.mouseX = x;\n            this.mouseY = y;\n        }\n        else if (this.dragType == DraggingTool.Zoom) {\n            let dy = y - this.mouseY;\n            if (dy != 0) {\n                dy = Math.min(50, Math.max(-50, dy));\n                let newScale = this.pointScale * (1 - dy * 0.01);\n                newScale = Math.min(10, Math.max(0.1, newScale));\n                let newOX = this.clickX - (newScale / this.pointScale) * (this.clickX - this.offsetX);\n                let newOY = this.clickY - (newScale / this.pointScale) * (this.clickY - this.offsetY);\n                this.pointScale = newScale;\n                this.offsetX = newOX;\n                this.offsetY = newOY;\n                this.delayedRedraw();\n            }\n            this.mouseX = x;\n            this.mouseY = y;\n        }\n        else if (this.dragType == DraggingTool.Rotate ||\n            this.dragType == DraggingTool.Move ||\n            this.dragType == DraggingTool.Atom ||\n            this.dragType == DraggingTool.Bond ||\n            this.dragType == DraggingTool.Ring) {\n            this.mouseX = x;\n            this.mouseY = y;\n            this.delayedRedraw();\n        }\n    }\n    interactEnd(x, y) {\n        if (this.opBudged)\n            this.interactEndDrag(x, y);\n        else\n            this.interactEndClick(x, y);\n        this.dragType = DraggingTool.None;\n        this.lassoX = null;\n        this.lassoY = null;\n        this.lassoMask = null;\n        this.dragGuides = null;\n        this.delayedRedraw();\n    }\n    interactEndClick(x, y) {\n        let clickObj = this.pickObject(x, y);\n        let clickAtom = clickObj > 0 ? clickObj : 0, clickBond = clickObj < 0 ? -clickObj : 0;\n        if (this.dragType == DraggingTool.Press) {\n            if (!this.opShift && !this.opCtrl && !this.opAlt) {\n                if (clickAtom == 0 && clickBond == 0) {\n                    if (Vec.anyTrue(this.selectedMask))\n                        this.selectedMask = null;\n                    else if (this.currentAtom > 0)\n                        this.currentAtom = 0;\n                    else if (this.currentBond > 0)\n                        this.currentBond = 0;\n                }\n                else if (clickAtom != this.currentAtom || clickBond != this.currentBond) {\n                    this.currentAtom = clickAtom;\n                    this.currentBond = clickBond;\n                }\n                else if (clickAtom == 0 && clickBond == 0 && this.anySelected()) {\n                    this.selectedMask = null;\n                }\n            }\n            else if (this.opShift && !this.opCtrl && !this.opAlt) {\n                if (clickAtom > 0)\n                    this.setSelected(clickAtom, !this.getSelected(clickAtom));\n            }\n        }\n        else if (this.dragType == DraggingTool.Move) {\n            if (clickObj == 0) {\n                if (Vec.anyTrue(this.selectedMask))\n                    this.selectedMask = null;\n                else if (this.currentAtom > 0)\n                    this.currentAtom = 0;\n                else if (this.currentBond > 0)\n                    this.currentBond = 0;\n            }\n        }\n        else if (this.dragType == DraggingTool.Erasor) {\n            if (this.opAtom > 0 || this.opBond > 0) {\n                let state = Object.assign(Object.assign({}, this.getState()), { 'currentAtom': this.opAtom, 'currentBond': this.opBond, 'selectedMask': [] });\n                let molact = new MoleculeActivity(state, ActivityType.Delete, {}, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Atom) {\n            let element = this.toolAtomSymbol;\n            if (element == 'A') {\n                let dlg = new EditAtom(this.mol, this.opAtom, this.proxyClip, () => {\n                    let autoscale = this.mol.numAtoms == 0;\n                    if (this.mol.compareTo(dlg.mol) != 0)\n                        this.defineMolecule(dlg.mol, autoscale, true);\n                    dlg.close();\n                });\n                if (this.opAtom == 0) {\n                    dlg.newX = this.xToAng(this.clickX);\n                    dlg.newY = this.yToAng(this.clickY);\n                }\n                dlg.callbackClose = () => {\n                    this.inDialog = false;\n                    this.grabFocus();\n                };\n                this.inDialog = true;\n                dlg.open();\n            }\n            else if (element) {\n                let param = { element, keepAbbrev: true };\n                if (this.opAtom == 0) {\n                    let x = this.xToAng(this.clickX), y = this.yToAng(this.clickY);\n                    if (this.mol.numAtoms == 0) {\n                        this.offsetX = this.clickX;\n                        this.offsetY = this.clickY;\n                        x = 0;\n                        y = 0;\n                    }\n                    param.positionX = x;\n                    param.positionY = y;\n                }\n                let state = Object.assign(Object.assign({}, this.getState()), { currentAtom: this.opAtom, currentBond: 0, selectedMask: null });\n                let molact = new MoleculeActivity(state, ActivityType.Element, param, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Charge) {\n            if (this.opAtom > 0 || this.opBond > 0) {\n                let state = Object.assign(Object.assign({}, this.getState()), { currentAtom: this.opAtom, currentBond: this.opBond, selectedMask: null });\n                let molact = new MoleculeActivity(state, ActivityType.Charge, { delta: this.toolChargeDelta }, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Bond) {\n            let state = Object.assign(Object.assign({}, this.getState()), { currentAtom: this.opAtom, currentBond: this.opBond, selectedMask: null });\n            let molact;\n            if (this.toolBondType == Molecule.BONDTYPE_NORMAL)\n                molact = new MoleculeActivity(state, ActivityType.BondOrder, { order: this.toolBondOrder }, this);\n            else\n                molact = new MoleculeActivity(state, ActivityType.BondType, { type: this.toolBondType }, this);\n            molact.execute();\n        }\n    }\n    interactEndDrag(x, y) {\n        if (this.dragType == DraggingTool.Lasso) {\n            if (this.lassoX.length >= 2) {\n                this.calculateLassoMask();\n                for (let n = 1; n <= this.mol.numAtoms; n++)\n                    if (this.getLassoed(n) && !this.getSelected(n))\n                        this.setSelected(n, true);\n            }\n            this.lassoX = null;\n            this.lassoY = null;\n            this.lassoMask = null;\n            this.delayedRedraw();\n        }\n        else if (this.dragType == DraggingTool.Erasor) {\n            let any = false;\n            for (let n = 0; n < this.lassoMask.length; n++)\n                if (this.lassoMask[n]) {\n                    any = true;\n                    break;\n                }\n            if (any) {\n                let state = Object.assign(Object.assign({}, this.getState()), { currentAtom: 0, currentBond: 0, selectedMask: this.lassoMask });\n                let molact = new MoleculeActivity(state, ActivityType.Delete, {}, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Rotate) {\n            let [x0, y0, theta, magnitude] = this.determineDragTheta();\n            let degrees = -theta * RADDEG;\n            let mx = this.xToAng(x0), my = this.yToAng(y0);\n            let molact = new MoleculeActivity(this.getState(), ActivityType.Rotate, { theta: degrees, centreX: mx, centreY: my }, this);\n            molact.execute();\n        }\n        else if (this.dragType == DraggingTool.Move) {\n            let [dx, dy] = this.determineMoveDelta();\n            let scale = this.pointScale;\n            let molact = new MoleculeActivity(this.getState(), ActivityType.Move, { refAtom: this.opAtom, deltaX: dx / scale, deltaY: -dy / scale }, this);\n            molact.execute();\n        }\n        else if (this.dragType == DraggingTool.Ring) {\n            let [ringX, ringY] = this.determineFauxRing();\n            if (ringX != null) {\n                let param = {\n                    ringX: ringX,\n                    ringY: ringY,\n                    aromatic: this.toolRingArom\n                };\n                let molact = new MoleculeActivity(this.getState(), ActivityType.Ring, param, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Atom && this.opAtom > 0) {\n            let x2 = this.mouseX, y2 = this.mouseY;\n            let snapTo = this.snapToGuide(x2, y2);\n            if (snapTo != null)\n                [x2, y2] = snapTo;\n            let param = {\n                order: 1,\n                type: Molecule.BONDTYPE_NORMAL,\n                element: this.toolAtomSymbol,\n                x1: this.mol.atomX(this.opAtom),\n                y1: this.mol.atomY(this.opAtom),\n                x2: this.xToAng(x2),\n                y2: this.yToAng(y2)\n            };\n            if (this.toolAtomSymbol == 'A')\n                param.element = window.prompt('Enter element symbol:', '');\n            if (param.element != '') {\n                let molact = new MoleculeActivity(this.getState(), ActivityType.BondAtom, param, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Bond) {\n            let x2 = this.mouseX, y2 = this.mouseY;\n            let snapTo = this.snapToGuide(x2, y2);\n            if (snapTo != null) {\n                [x2, y2] = snapTo;\n                if (this.opBond > 0) {\n                    let toObj = this.pickObject(x2, y2, { noAtoms: true });\n                    if (toObj < 0) {\n                        this.connectPolymerBlock(this.opBond, -toObj);\n                        return;\n                    }\n                }\n            }\n            let param = {\n                order: this.toolBondOrder,\n                type: this.toolBondType,\n                element: 'C',\n                x1: this.opAtom == 0 ? this.xToAng(this.clickX) : this.mol.atomX(this.opAtom),\n                y1: this.opAtom == 0 ? this.yToAng(this.clickY) : this.mol.atomY(this.opAtom),\n                x2: this.xToAng(x2),\n                y2: this.yToAng(y2)\n            };\n            let molact = new MoleculeActivity(this.getState(), ActivityType.BondAtom, param, this);\n            molact.execute();\n        }\n    }\n    dropInto(transfer) {\n        let items = transfer.items, files = transfer.files;\n        const SUFFIXES = ['.el', '.mol'];\n        const MIMES = ['text/plain', 'chemical/x-sketchel', 'x-mdl-molfile'];\n        for (let n = 0; n < items.length; n++) {\n            if (items[n].kind == 'string' && MIMES.indexOf(items[n].type) >= 0) {\n                items[n].getAsString((str) => {\n                    let mol = Molecule.fromString(str);\n                    if (mol != null) {\n                        this.defineMolecule(mol, true, true, true);\n                    }\n                    else\n                        console.log('Dragged data is not a SketchEl molecule: ' + str);\n                });\n                return;\n            }\n        }\n        for (let n = 0; n < files.length; n++) {\n            for (let sfx of SUFFIXES)\n                if (files[n].name.endsWith(sfx)) {\n                    let reader = new FileReader();\n                    reader.onload = (event) => {\n                        let str = reader.result;\n                        let mol = MoleculeStream.readUnknown(str.toString());\n                        if (mol != null) {\n                            this.defineMolecule(mol, true, true);\n                        }\n                        else\n                            console.log('Dragged file is not a recognised molecule: ' + str);\n                    };\n                    reader.readAsText(files[n]);\n                    return;\n                }\n        }\n    }\n    connectPolymerBlock(bond1, bond2) {\n        let [atomIn1, atomOut1] = this.mol.bondFromTo(bond1), [atomIn2, atomOut2] = this.mol.bondFromTo(bond2);\n        let state = this.getState();\n        let polymer = new PolymerBlock(state.mol);\n        let poly1 = null, poly2 = null;\n        let highName = 0;\n        for (let poly of polymer.getUnits()) {\n            if (!poly1 || poly.atoms.length < poly1.atoms.length) {\n                let ina = poly.atoms.includes(atomIn1), inb = poly.atoms.includes(atomOut1);\n                if (ina && !inb)\n                    poly1 = poly;\n                else if (inb && !ina)\n                    [poly1, atomIn1, atomOut1] = [poly, atomOut1, atomIn1];\n            }\n            if (!poly2 || poly.atoms.length < poly2.atoms.length) {\n                let ina = poly.atoms.includes(atomIn2), inb = poly.atoms.includes(atomOut2);\n                if (ina && !inb)\n                    poly2 = poly;\n                else if (inb && !ina)\n                    [poly2, atomIn2, atomOut2] = [poly, atomOut2, atomIn2];\n            }\n            for (let nameList of poly.atomName.values())\n                highName = Math.max(highName, Vec.max(nameList));\n        }\n        if (!poly1 || !poly2)\n            return false;\n        let name1 = Vec.first(poly1.atomName.get(atomIn1));\n        if (!name1) {\n            name1 = ++highName;\n            poly1.atomName.set(atomIn1, [name1]);\n        }\n        let name2 = Vec.first(poly2.atomName.get(atomIn2));\n        if (!name2) {\n            name2 = ++highName;\n            poly2.atomName.set(atomIn2, [name2]);\n        }\n        poly1.bondIncl.set(bond1, Vec.append(poly1.bondIncl.get(bond1), name2));\n        poly2.bondIncl.set(bond2, Vec.append(poly2.bondIncl.get(bond2), name1));\n        polymer.rewriteMolecule();\n        this.setState(state);\n    }\n}\nSketcher.UNDO_SIZE = 20;\n//# sourceMappingURL=Sketcher.js.map","import { Sketcher } from '../sketcher/Sketcher';\nimport { ClipboardProxyHandler } from '../ui/ClipboardProxy';\nimport { dom } from '../util/dom';\nimport { Dialog } from './Dialog';\nexport class EditCompound extends Dialog {\n    constructor(mol, parent = null) {\n        super(parent);\n        this.mol = mol;\n        this.sketcher = new Sketcher();\n        this.proxyClip = null;\n        this.proxyMenu = null;\n        this.callbackSave = null;\n        this.title = 'Edit Compound';\n        this.minPortionWidth = 20;\n        this.maxPortionWidth = 95;\n    }\n    onSave(callback) {\n        this.callbackSave = callback;\n    }\n    getMolecule() { return this.sketcher.getMolecule(); }\n    getSketcher() { return this.sketcher; }\n    defineClipboard(proxy) {\n        this.proxyClip = proxy;\n        let handler = new ClipboardProxyHandler();\n        handler.copyEvent = (andCut, proxy) => {\n            this.sketcher.performCopySelection(andCut);\n            return true;\n        };\n        handler.pasteEvent = (proxy) => {\n            this.sketcher.pasteText(proxy.getString());\n            return true;\n        };\n        proxy.pushHandler(handler);\n        this.sketcher.defineClipboard(proxy);\n    }\n    defineContext(proxy) {\n        this.proxyMenu = proxy;\n        this.sketcher.defineContext(this.proxyMenu);\n    }\n    close() {\n        if (this.proxyClip)\n            this.proxyClip.popHandler();\n        super.close();\n    }\n    populate() {\n        let buttons = this.buttonsDOM(), body = this.bodyDOM();\n        this.btnClear = dom('<button class=\"wmk-button wmk-button-default\">Clear</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnClear.onClick(() => this.sketcher.clearMolecule());\n        this.btnCopy = dom('<button class=\"wmk-button wmk-button-default\">Copy</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnCopy.onClick(() => this.actionCopy());\n        buttons.append(this.domClose);\n        this.domClose.css({ 'margin-left': '0.5em' });\n        this.btnSave = dom('<button class=\"wmk-button wmk-button-primary\">Save</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnSave.onClick(() => { if (this.callbackSave)\n            this.callbackSave(this); });\n        let skw = 800, skh = 650;\n        let skdiv = dom('<div/>').appendTo(body).css({ 'width': `${skw}px`, 'height': `${skh}px` });\n        this.sketcher.setSize(skw, skh);\n        this.sketcher.defineMolecule(this.mol);\n        this.sketcher.setup(() => this.sketcher.render(skdiv));\n    }\n    actionCopy() {\n        this.sketcher.performCopySelection(false);\n    }\n    actionCut() {\n        this.sketcher.performCopySelection(true);\n    }\n    actionPaste() {\n        this.sketcher.performPaste();\n    }\n    actionUndo() {\n        this.sketcher.performUndo();\n    }\n    actionRedo() {\n        this.sketcher.performRedo();\n    }\n}\n//# sourceMappingURL=EditCompound.js.map","import { dom, domLegacy } from '../util/dom';\nimport { installInlineCSS } from '../util/Theme';\nimport { empiricalScrollerSize, setBoundaryPixels } from '../util/util';\nimport { clearTooltip } from './Tooltip';\nconst CSS_POPUP = `\n\t*.wmk-popup\n\t{\n\t\tfont-family: 'Open Sans', sans-serif;\n\t}\n`;\nexport class Popup {\n    constructor(parent) {\n        this.popupBackground = 'white';\n        this.obscureOpacity = 0.2;\n        this.zindex = null;\n        this.callbackClose = null;\n        this.callbackPopulate = null;\n        this.parent = domLegacy(parent);\n        installInlineCSS('popup', CSS_POPUP);\n    }\n    onClose(callback) {\n        this.callbackClose = callback;\n    }\n    open() {\n        clearTooltip();\n        let body = dom(document.body);\n        let bg = this.domObscureBackground = dom('<div/>').appendTo(body);\n        bg.css({ 'position': 'fixed' });\n        bg.css({ 'left': '0', 'right': '0', 'top': '0', 'bottom': '0' });\n        bg.css({ 'background-color': 'black', 'opacity': this.obscureOpacity });\n        let fg = this.domObscureForeground = dom('<div/>').appendTo(body);\n        fg.css({ 'position': 'fixed' });\n        fg.css({ 'left': '0', 'right': '0', 'top': '0', 'bottom': '0' });\n        fg.onClick(() => this.close());\n        if (this.zindex > 0) {\n            bg.setCSS('z-index', this.zindex);\n            fg.setCSS('z-index', this.zindex + 1);\n        }\n        let pb = this.domPanelBoundary = dom('<div class=\"wmk-popup\"/>').appendTo(fg).css({ 'visibility': 'hidden' });\n        pb.onClick((event) => event.stopPropagation());\n        pb.css({ 'background-color': this.popupBackground, 'border': '1px solid black' });\n        pb.css({ 'position': 'absolute', 'overflow': 'auto' });\n        this.domBody = dom('<div/>').appendTo(pb).css({ 'padding': '5px' });\n        this.populate();\n        this.positionAndShow();\n    }\n    close() {\n        clearTooltip();\n        this.domPanelBoundary.remove();\n        this.domObscureBackground.remove();\n        this.domObscureForeground.remove();\n        if (this.callbackClose)\n            this.callbackClose(this);\n        clearTooltip();\n    }\n    bump() {\n        this.positionAndShow();\n    }\n    bodyDOM() { return this.domBody; }\n    populate() {\n        if (this.callbackPopulate)\n            this.callbackPopulate(this);\n        else\n            this.bodyDOM().setText('Empty popup.');\n    }\n    positionAndShow() {\n        clearTooltip();\n        let winW = window.innerWidth, winH = window.innerHeight;\n        const GAP = 2;\n        let client = this.parent.el.getBoundingClientRect();\n        let wx1 = client.left, wy1 = client.top, wx2 = client.right, wy2 = client.bottom;\n        let pb = this.domPanelBoundary;\n        let maxW = Math.max(wx1, winW - wx2) - 4;\n        pb.css({ 'max-width': maxW + 'px' });\n        let scrollSize = empiricalScrollerSize();\n        let setPosition = () => {\n            let popW = this.domBody.width(), popH = this.domBody.height();\n            let posX = 0, posY = 0;\n            if (wy2 + GAP + popH < winH)\n                posY = wy2 + GAP;\n            else if (wy1 - GAP - popH > 0)\n                posY = wy1 - GAP - popH;\n            else if (winH - wy2 > wy1) {\n                posY = wy2 + GAP;\n                popH = winH - posY - GAP;\n            }\n            else {\n                posY = GAP;\n                popH = wy1 - posY - GAP;\n            }\n            if (pb.height() > popH)\n                popW += scrollSize.w + 10;\n            if (wx1 + popW < winW)\n                posX = wx1;\n            else if (popW < wx2)\n                posX = wx2 - popW;\n            setBoundaryPixels(pb, posX, posY, popW, popH);\n            pb.css({ 'visibility': 'visible' });\n        };\n        setTimeout(() => setPosition());\n    }\n}\n//# sourceMappingURL=Popup.js.map","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Widget} from 'webmolkit/ui/Widget';\nimport {dom, DOM} from 'webmolkit/util/dom';\n\n/*\n\tWidget for editing a key/value pattern, whereby key/value pairs can be added and edited individually.\n*/\n\ninterface KeyValueWidgetLine\n{\n\tkey:string;\n\tvalue:string;\n\tinputKey?:DOM;\n\tinputValue?:DOM;\n}\n\nexport class KeyValueWidget extends Widget\n{\n\tprivate lines:KeyValueWidgetLine[] = [];\n\n\tprivate divGrid:DOM;\n\n\t// ------------ public methods ------------\n\n\tconstructor(dict:Record<string, string | string[]>, private callbackChange:(dict:Record<string, string | string[]>) => void)\n\t{\n\t\tsuper();\n\n\t\tfor (let key in dict)\n\t\t{\n\t\t\tlet value = dict[key];\n\t\t\tif (typeof value == 'string') this.lines.push({key, value});\n\t\t\telse if (Array.isArray(value)) for (let v of value) this.lines.push({key, 'value': v});\n\t\t}\n\t}\n\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\t\t\n\t\tthis.divGrid = dom('<div/>').appendTo(this.contentDOM).css({'display': 'grid', 'width': '100%', 'margin': '0'});\n\t\tthis.divGrid.css({'align-items': 'baseline', 'justify-content': 'start'});\n\t\tthis.divGrid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\tthis.divGrid.css({'grid-template-columns': '[start key] 1fr [value] 1fr [button] auto [end]'});\n\n\t\tthis.rebuildGrid();\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate rebuildGrid():void\n\t{\n\t\tthis.divGrid.empty();\n\n\t\tlet row = 0;\n\n\t\tfor (let n = 0; n < this.lines.length; n++)\n\t\t{\n\t\t\tlet line = this.lines[n];\n\n\t\t\trow++;\n\t\t\tlet divKey = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / key`});\n\t\t\tlet divValue = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / value`});\n\t\t\tlet divButton = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / button`});\n\n\t\t\tline.inputKey = dom('<input/>').appendTo(divKey).css({'width': '100%', 'padding': '0', 'font': 'inherit'});\n\t\t\tline.inputKey.setValue(line.key);\n\t\t\tline.inputKey.onInput(() => this.scrapeData());\n\n\t\t\tline.inputValue = dom('<input/>').appendTo(divValue).css({'width': '100%', 'padding': '0', 'font': 'inherit'});\n\t\t\tline.inputValue.setValue(line.value);\n\t\t\tline.inputValue.onInput(() => this.scrapeData());\n\n\t\t\tlet btnDelete = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divButton);\n\t\t\tbtnDelete.setText('\\u{2716}');\n\t\t\tbtnDelete.onClick(() =>\n\t\t\t{\n\t\t\t\tthis.lines.splice(n, 1);\n\t\t\t\tthis.rebuildGrid();\n\t\t\t\tthis.scrapeData();\n\t\t\t});\n\t\t}\n\n\t\trow++;\n\t\tlet divAdd = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / start / ${row} / end`, 'text-align': this.lines.length > 0 ? 'center' : 'left'});\n\t\tlet btnAdd = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divAdd);\n\t\tbtnAdd.setText('\\u{271A}');\n\t\tbtnAdd.onClick(() =>\n\t\t{\n\t\t\tthis.lines.push({key: '', value: ''});\n\t\t\tthis.rebuildGrid();\n\t\t\tthis.scrapeData();\n\t\t});\n\t}\n\n\tprivate scrapeData():void\n\t{\n\t\tlet dict:Record<string, string | string[]> = {};\n\t\tfor (let line of this.lines)\n\t\t{\n\t\t\tline.key = line.inputKey.getValue();\n\t\t\tline.value = line.inputValue.getValue();\n\t\t\tif (!line.key || !line.value) continue;\n\n\t\t\tlet dval = dict[line.key];\n\t\t\tif (!dval) dict[line.key] = line.value;\n\t\t\telse if (typeof dval == 'string') dict[line.key] = [dval, line.value];\n\t\t\telse if (Array.isArray(dval)) dval.push(line.value);\n\t\t}\n\t\t\n\t\tthis.callbackChange(dict);\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Widget} from 'webmolkit/ui/Widget';\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {installInlineCSS} from 'webmolkit/util/Theme';\nimport {OntologyTree, OntologyTreeTerm} from 'webmolkit/data/OntologyTree';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {addTooltip, clearTooltip} from 'webmolkit/ui/Tooltip';\nimport {escapeHTML} from 'webmolkit/util/util';\nimport {Popup} from 'webmolkit/ui/Popup';\nimport {MixfileMetadatum} from '../mixture/Mixfile';\n\n/*\n\tWidget for editing a list of metadata items.\n*/\n\nconst CSS_METADATAWIDGET = `\n\t*.wmk-metadataitem:hover\n\t{\n\t\tbackground-color: #C0C0FF;\n\t\tcursor: pointer;\n\t}\n`;\n\ninterface MetadataWidgetLine\n{\n\tdatum:MixfileMetadatum;\n}\n\nexport class MetadataWidget extends Widget\n{\n\tprivate lines:MetadataWidgetLine[] = [];\n\n\tprivate divGrid:DOM;\n\n\t// ------------ public methods ------------\n\n\tconstructor(metadata:MixfileMetadatum[], private callbackChange:(metadata:MixfileMetadatum[]) => void)\n\t{\n\t\tsuper();\n\n\t\tif (metadata) for (let datum of metadata) this.lines.push({'datum': datum});\n\n\t\tinstallInlineCSS('metadatawidget', CSS_METADATAWIDGET);\n\t}\n\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\n\t\tthis.divGrid = dom('<div/>').appendTo(this.contentDOM).css({'display': 'grid', 'width': '100%', 'margin': '0'});\n\t\tthis.divGrid.css({'align-items': 'baseline', 'justify-content': 'start'});\n\t\tthis.divGrid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\tthis.divGrid.css({'grid-template-columns': '[start content] 1fr [button] auto [end]'});\n\n\t\tthis.rebuildGrid();\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate rebuildGrid():void\n\t{\n\t\tthis.divGrid.empty();\n\n\t\tlet renderTerm = (parent:DOM, item:number | string, line:MetadataWidgetLine, idx:number):void =>\n\t\t{\n\t\t\tlet div = dom('<div/>').appendTo(parent);\n\t\t\tdiv.css({'padding': '0.2em', 'margin-right': '0.5em'});\n\t\t\tif (typeof item == 'string')\n\t\t\t{\n\t\t\t\tdiv.css({'background-color': idx == 0 ? '#D0D0D0' : '#D0D0FF', 'border-radius': '3px'});\n\t\t\t\tlet branch = OntologyTree.main.getBranch(item);\n\t\t\t\tif (Vec.notBlank(branch))\n\t\t\t\t{\n\t\t\t\t\tdiv.setText(branch[0].label);\n\t\t\t\t\taddTooltip(div, escapeHTML(branch[0].uri), null, 1000);\n\t\t\t\t}\n\t\t\t\telse div.setText(item);\n\t\t\t}\n\t\t\telse // number (or null, which is a pre-number)\n\t\t\t{\n\t\t\t\tlet input = dom('<input type=\"number\"/>').appendTo(div).css({'width': '5em', 'padding': '0', 'font': 'inherit'});\n\t\t\t\tif (item != null)\n\t\t\t\t{\n\t\t\t\t\tinput.css({'width': Math.max(5, item.toString().length) + 'em'});\n\t\t\t\t\tinput.setValue(item.toString());\n\t\t\t\t}\n\t\t\t\tinput.onInput(() =>\n\t\t\t\t{\n\t\t\t\t\tlet num = parseFloat(input.getValue());\n\t\t\t\t\tif (!isNaN(num)) (line.datum as number[])[idx] = num;\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tlet row = 0;\n\n\t\tfor (let n = 0; n < this.lines.length; n++)\n\t\t{\n\t\t\tlet line = this.lines[n];\n\n\t\t\trow++;\n\t\t\tlet divContent = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / content`});\n\t\t\tlet divButton = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / button`});\n\n\t\t\tdivContent.css({'display': 'flex', 'flex-wrap': 'wrap', 'justify-content': 'flex-start', 'align-items': 'baseline'});\n\t\t\tif (Array.isArray(line.datum))\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < line.datum.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet item = line.datum[i];\n\t\t\t\t\trenderTerm(divContent, item, line, i);\n\t\t\t\t}\n\n\t\t\t\tif (line.datum.length > 1)\n\t\t\t\t{\n\t\t\t\t\tlet btnBack = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divContent);\n\t\t\t\t\tbtnBack.setText('\\u{21E6}');\n\t\t\t\t\tbtnBack.css({'margin-right': '0.5em'});\n\t\t\t\t\tbtnBack.onClick(() =>\n\t\t\t\t\t{\n\t\t\t\t\t\tlet list = line.datum as any[];\n\t\t\t\t\t\tlist.splice(list.length - 1, 1);\n\t\t\t\t\t\tif (typeof Vec.last(list) != 'string') list.splice(list.length - 1, 1);\n\t\t\t\t\t\tthis.rebuildGrid();\n\t\t\t\t\t\tthis.triggerModified();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse renderTerm(divContent, line.datum, line, 0);\n\n\t\t\tlet btnAssert = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divContent);\n\t\t\tbtnAssert.setText('\\u{21E9}');\n\t\t\tbtnAssert.css({'margin-right': '0.5em'});\n\t\t\tbtnAssert.onClick(() => this.pickExtraTerm(btnAssert, line, false));\n\t\t\tlet btnProp = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divContent);\n\t\t\tbtnProp.setText('\\u{21E8}');\n\t\t\tbtnProp.css({'margin-right': '0.5em'});\n\t\t\tbtnProp.onClick(() => this.pickExtraTerm(btnProp, line, true));\n\n\t\t\tlet btnDelete = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divButton);\n\t\t\tbtnDelete.setText('\\u{2716}');\n\t\t\tbtnDelete.onClick(() =>\n\t\t\t{\n\t\t\t\tthis.lines.splice(n, 1);\n\t\t\t\tthis.rebuildGrid();\n\t\t\t\tthis.triggerModified();\n\t\t\t});\n\t\t}\n\n\t\trow++;\n\t\tlet divAdd = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / start / ${row} / end`, 'text-align': this.lines.length > 0 ? 'center' : 'left'});\n\t\tlet btnAdd = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divAdd);\n\t\tbtnAdd.setText('\\u{271A}');\n\t\tbtnAdd.onClick(() => this.pickNewTerm(btnAdd));\n\t}\n\n\tprivate triggerModified():void\n\t{\n\t\tlet metadata = this.lines.map((line) => line.datum);\n\t\tthis.callbackChange(metadata);\n\t}\n\n\tprivate pickNewTerm(divParent:DOM):void\n\t{\n\t\tlet branchList:OntologyTreeTerm[] = [];\n\t\tconst ROOTS = ['http://mixtures.io/rdf#MixtureMetadata'];\n\t\tfor (let rootURI of ROOTS) branchList.push(...OntologyTree.main.getBranchList(rootURI));\n\t\tlet popup = new Popup(divParent);\n\t\tpopup.callbackPopulate = () =>\n\t\t{\n\t\t\tthis.populateBranch(popup, branchList, (term) =>\n\t\t\t{\n\t\t\t\tthis.lines.push({datum: term.uri});\n\t\t\t\tthis.rebuildGrid();\n\t\t\t\tthis.triggerModified();\n\t\t\t});\n\t\t};\n\t\tpopup.open();\n\t}\n\n\tprivate pickExtraTerm(divParent:DOM, line:MetadataWidgetLine, isProperty:boolean):void\n\t{\n\t\tlet branchList:OntologyTreeTerm[] = [];\n\t\tconst ROOTS_ASSERT = ['http://mixtures.io/rdf#MixtureMetadata'];\n\t\tconst ROOTS_PROP = ['http://purl.obolibrary.org/obo/UO_0000000'];\n\t\tfor (let rootURI of (isProperty ? ROOTS_PROP : ROOTS_ASSERT)) branchList.push(...OntologyTree.main.getBranchList(rootURI));\n\t\tlet popup = new Popup(divParent);\n\t\tpopup.callbackPopulate = () =>\n\t\t{\n\t\t\tthis.populateBranch(popup, branchList, (term) =>\n\t\t\t{\n\t\t\t\tif (typeof line.datum == 'string') line.datum = [line.datum];\n\t\t\t\tif (isProperty) line.datum.push(null);\n\t\t\t\tline.datum.push(term.uri);\n\t\t\t\tthis.rebuildGrid();\n\t\t\t\tthis.triggerModified();\n\t\t\t});\n\t\t};\n\t\tpopup.open();\n\t}\n\n\t// enumerates a list of clickable ontology tree items\n\tprivate populateBranch(popup:Popup, branchList:OntologyTreeTerm[], callbackClicked:(term:OntologyTreeTerm) => void):void\n\t{\n\t\tlet body = popup.bodyDOM();\n\n\t\tfor (let term of branchList)\n\t\t{\n\t\t\tlet div = dom('<div/>').appendTo(body);\n\t\t\tif (term.depth > 0)\n\t\t\t{\n\t\t\t\tdiv.css({'margin-left': (term.depth - 0.5) + 'em'});\n\t\t\t\tdom('<span>\\u{279E}</span>').appendTo(div).css({'color': '#A0A0A0', 'margin-right': '0.5em'});\n\t\t\t}\n\t\t\tlet span = dom('<span/>').appendTo(div).class('wmk-metadataitem');\n\t\t\tspan.setText(term.label);\n\t\t\taddTooltip(span, escapeHTML(term.uri), null, 2000);\n\t\t\tspan.onClick(() =>\n\t\t\t{\n\t\t\t\tclearTooltip();\n\t\t\t\tpopup.close();\n\t\t\t\tcallbackClicked(term);\n\t\t\t});\n\t\t}\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Dialog} from 'webmolkit/dialog/Dialog';\nimport {ClipboardProxy, ClipboardProxyHandler} from 'webmolkit/ui/ClipboardProxy';\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {OptionList} from 'webmolkit/ui/OptionList';\nimport {deepClone} from 'webmolkit/util/util';\nimport {installInlineCSS} from 'webmolkit/util/Theme';\nimport {OntologyTree} from 'webmolkit/data/OntologyTree';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Popup} from 'webmolkit/ui/Popup';\nimport {MoleculeStream} from 'webmolkit/data/MoleculeStream';\nimport {MolUtil} from 'webmolkit/data/MolUtil';\nimport {Chemistry} from 'webmolkit/data/Chemistry';\nimport {MixfileComponent} from '../mixture/Mixfile';\nimport {InChI} from '../nodejs/InChI';\nimport {Mixture} from '../mixture/Mixture';\nimport {Units} from '../mixture/Units';\nimport {InChIDelegate} from '../mixture/InChIDelegate';\nimport {KeyValueWidget} from './KeyValueWidget';\nimport {MetadataWidget} from '../electron/MetadataWidget';\n\n/*\n\tHigh level widget for the editing area for a mixture.\n*/\n\nconst CSS_EDITCOMPONENT = `\n\t*.wmk-editcomponent-input\n\t{\n\t}\n\t*.wmk-editcomponent-input::placeholder\n\t{\n\t\tfont-size: 70%;\n\t\tcolor: #D0D0D0;\n\t}\n\t*.wmk-editcomponent-units\n\t{\n\t\tcursor: pointer;\n\t}\n\t*.wmk-editcomponent-units:hover\n\t{\n\t\tbackground-color: #C0C0FF;\n\t\tcursor: pointer;\n\t}\n`;\n\nenum QuantityType\n{\n\tValue = 'Value',\n\tRange = 'Range',\n\tRatio = 'Ratio'\n}\nconst RELATION_VALUES:string[] = ['=', '~', '<', '<=', '>', '>='];\nconst RELATION_LABELS:string[] = ['=', '~', '&lt;', '&le;', '&gt;', '&ge;'];\n\nexport class EditComponent extends Dialog\n{\n\tpublic proxyClip:ClipboardProxy = null;\n\n\tprivate component:MixfileComponent;\n\n\tprivate btnSketch:DOM;\n\tprivate btnSave:DOM;\n\n\tprivate lineName:DOM;\n\tprivate optQuantType:OptionList;\n\tprivate dropQuantRel:DOM;\n\tprivate lineQuantVal1:DOM;\n\tprivate lineQuantVal2:DOM;\n\tprivate lineQuantUnits:DOM;\n\tprivate btnQuantUnits:DOM;\n\tprivate areaDescr:DOM = null;\n\tprivate areaSyn:DOM = null;\n\tprivate lineFormula:DOM;\n\tprivate divWeight:DOM;\n\tprivate lineInChI:DOM;\n\tprivate lineSMILES:DOM;\n\n\tprivate callbackSave:(source?:EditComponent) => void = null;\n\tprivate callbackSketch:(source?:EditComponent) => void = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(component:MixfileComponent, private inchi:InChIDelegate, private parentSize:[number, number], parent:DOM = null)\n\t{\n\t\tsuper(parent);\n\n\t\tthis.component = deepClone(component);\n\n\t\tthis.title = 'Edit Component';\n\t\tthis.minPortionWidth = 20;\n\t\tthis.maxPortionWidth = 95;\n\t\t//this.maximumWidth = parentSize[0];\n\t\t//this.maximumHeight = parentSize[1];\n\n\t\tinstallInlineCSS('editcomponent', CSS_EDITCOMPONENT);\n\t}\n\n\tpublic onSave(callback:(source?:EditComponent) => void):void\n\t{\n\t\tthis.callbackSave = callback;\n\t}\n\tpublic onSketch(callback:(source?:EditComponent) => void):void\n\t{\n\t\tthis.callbackSketch = callback;\n\t}\n\n\tpublic getComponent():MixfileComponent {return this.component;}\n\n\t// builds the dialog content\n\tprotected populate():void\n\t{\n\t\tif (this.proxyClip) this.proxyClip.pushHandler(new ClipboardProxyHandler());\n\n\t\tlet buttons = this.buttonsDOM(), body = this.bodyDOM();\n\n\t\t// top section\n\n\t\tif (this.callbackSketch)\n\t\t{\n\t\t\tthis.btnSketch = dom('<button class=\"wmk-button wmk-button-default\">Sketch</button>').appendTo(buttons);\n\t\t\tthis.btnSketch.onClick(() => this.invokeSketcher());\n\t\t}\n\n\t\tbuttons.appendText(' ');\n\t\tbuttons.append(this.domClose); // easy way to reorder\n\n\t\tbuttons.appendText(' ');\n\t\tthis.btnSave = dom('<button class=\"wmk-button wmk-button-primary\">Save</button>').appendTo(buttons);\n\t\tthis.btnSave.onClick(() => this.saveAndClose());\n\n\t\t// main section\n\n\t\tbody.css({'padding': '0 0 0 1em'});\n\t\tlet vertical = dom('<div/>').appendTo(body);\n\t\tvertical.css({'overflow-y': 'scroll', 'height': '100%'});\n\t\tvertical.css({'max-height': this.parentSize[1] + 'px'});\n\t\tvertical.css({'padding-right': '18px', 'padding-bottom': '10px'});\n\n\t\t// first batch of fields\n\n\t\tlet grid1 = this.fieldGrid().appendTo(vertical);\n\n\t\tthis.createFieldName(grid1, 1, 'Name', false);\n\t\tthis.lineName = this.createValueLine(grid1, 1);\n\t\tthis.lineName.setValue(this.component.name);\n\n\t\tthis.createFieldName(grid1, 2, 'Quantity', false);\n\t\tlet divQuant = dom('<div/>').appendTo(grid1);\n\t\tdivQuant.css({'grid-column': 'value', 'grid-row': '2'});\n\t\tthis.createQuantity(divQuant);\n\n\t\tthis.createFieldName(grid1, 3, 'Description', true);\n\t\tthis.areaDescr = this.createValueMultiline(grid1, 3);\n\n\t\tthis.createFieldName(grid1, 4, 'Synonyms', true);\n\t\tthis.areaSyn = this.createValueMultiline(grid1, 4);\n\n\t\tthis.areaDescr.setValue(this.component.description);\n\t\tif (this.component.synonyms) this.areaSyn.setValue(this.component.synonyms.join('\\n'));\n\n\t\t// second batch of fields\n\n\t\tlet grid2 = this.fieldGrid().appendTo(vertical);\n\t\tlet row = 0;\n\n\t\t//this.createFieldName(grid2, ++row, 'Formula', false);\n\t\trow++;\n\t\tthis.createFieldName(grid2, ++row, 'Formula', false);\n\t\tlet divFormula = this.createDiv(grid2, row).css({'display': 'flex', 'align-items': 'center'});\n\t\tthis.lineFormula = dom('<input/>').appendTo(divFormula).css({'flex-grow': '1', 'font': 'inherit'});\n\t\tthis.lineFormula.setValue(this.component.formula);\n\t\tthis.lineFormula.elInput.placeholder = this.calculateFormula();\n\t\tthis.lineFormula.onInput(() => this.calculateWeight());\n\t\tthis.divWeight = dom('<div/>').appendTo(divFormula).css({'flex-grow': '0'});\n\t\tthis.calculateWeight();\n\n\t\tthis.createFieldName(grid2, ++row, 'InChI', false);\n\t\tthis.lineInChI = this.createValueLine(grid2, row);\n\t\tthis.lineInChI.setValue(this.component.inchi);\n\n\t\tif (InChI.isAvailable() && this.component.molfile)\n\t\t{\n\t\t\tlet div = this.createDiv(grid2, ++row);\n\t\t\tlet btn = dom('<button class=\"wmk-button wmk-button-default\">Calculate from Structure</button>').appendTo(div);\n\t\t\tbtn.onClick(() => {this.calculateInChI().then();});\n\t\t}\n\n\t\tthis.createFieldName(grid2, ++row, 'SMILES', false);\n\t\tthis.lineSMILES = this.createValueLine(grid2, row);\n\t\tthis.lineSMILES.setValue(this.component.smiles);\n\n\t\tthis.createFieldName(grid2, ++row, 'Identifiers', true);\n\t\tlet editIdentifiers = new KeyValueWidget(this.component.identifiers, (dict) =>\n\t\t{\n\t\t\tthis.component.identifiers = dict;\n\t\t});\n\t\teditIdentifiers.render(dom('<div/>').appendTo(grid2).css({'grid-area': `${row} / value`}));\n\n\t\tthis.createFieldName(grid2, ++row, 'Links', true);\n\t\tlet editLinks = new KeyValueWidget(this.component.links, (dict) =>\n\t\t{\n\t\t\tthis.component.links = dict;\n\t\t});\n\t\teditLinks.render(dom('<div/>').appendTo(grid2).css({'grid-area': `${row} / value`}));\n\n\t\tif (OntologyTree.main && OntologyTree.main.getRoots().length > 0)\n\t\t{\n\t\t\tthis.createFieldName(grid2, ++row, 'Metadata', true);\n\t\t\tlet editMetadata = new MetadataWidget(this.component.metadata, (metadata) =>\n\t\t\t{\n\t\t\t\tthis.component.metadata = Vec.notBlank(metadata) ? metadata : undefined;\n\t\t\t});\n\t\t\teditMetadata.render(dom('<div/>').appendTo(grid2).css({'grid-area': `${row} / value`}));\n\t\t}\n\n\t\tthis.lineName.grabFocus();\n\n\t\tfor (let dom of body.findAll('input')) dom.onKeyDown((event) => this.trapEscape(event, true));\n\t\tfor (let dom of body.findAll('textarea')) dom.onKeyDown((event) => this.trapEscape(event, false));\n\t\tfor (let dom of body.findAll('input,textarea')) dom.elInput.spellcheck = false;\n\t}\n\n\tpublic close():void\n\t{\n\t\tif (this.proxyClip) this.proxyClip.popHandler();\n\t\tsuper.close();\n\t}\n\n\t// ------------ private methods ------------\n\n\t// assuming that something is different, refreshes the current component information and closes\n\tprivate saveAndClose():void\n\t{\n\t\tlet nullifyBlank = (str:string):string => str === '' ? null : str;\n\t\tlet splitLines = (str:string):string[] =>\n\t\t{\n\t\t\tlet lines = str.split('\\n').filter((line) => line.length > 0);\n\t\t\treturn lines.length > 0 ? lines : null;\n\t\t};\n\t\tlet splitKeys = (str:string):Record<string, any> =>\n\t\t{\n\t\t\tlet dict:Record<string, any> = null;\n\t\t\tfor (let line of str.split('\\n'))\n\t\t\t{\n\t\t\t\tlet eq = line.indexOf('=');\n\t\t\t\tif (eq < 0) continue;\n\t\t\t\tif (dict == null) dict = {};\n\t\t\t\tdict[line.substring(0, eq)] = line.substring(eq + 1);\n\t\t\t}\n\t\t\treturn dict;\n\t\t};\n\n\t\tthis.component.name = nullifyBlank(this.lineName.getValue());\n\n\t\tlet qtype = this.optQuantType.getSelectedValue();\n\t\t[this.component.ratio, this.component.quantity, this.component.error] = [null, null, null];\n\t\tlet strQuant1 = this.lineQuantVal1.getValue().trim(), strQuant2 = this.lineQuantVal2.getValue().trim();\n\t\tif (qtype == QuantityType.Value)\n\t\t{\n\t\t\tif (strQuant1) this.component.quantity = parseFloat(strQuant1);\n\t\t\tif (strQuant2) this.component.error = parseFloat(strQuant2);\n\t\t\tthis.component.units = this.lineQuantUnits.getValue().trim();\n\t\t}\n\t\telse if (qtype == QuantityType.Range)\n\t\t{\n\t\t\tthis.component.quantity = [parseFloat(strQuant1), parseFloat(strQuant2)];\n\t\t\tthis.component.relation = null;\n\t\t\tthis.component.units = this.lineQuantUnits.getValue().trim();\n\t\t}\n\t\telse if (qtype == QuantityType.Ratio)\n\t\t{\n\t\t\tthis.component.ratio = [parseFloat(strQuant1), parseFloat(strQuant2)];\n\t\t\tthis.component.relation = null;\n\t\t\tthis.component.units = null;\n\t\t}\n\n\t\tif (!Mixture.hasQuantity(this.component))\n\t\t{\n\t\t\tthis.component.quantity = null;\n\t\t\tthis.component.error = null;\n\t\t\tthis.component.ratio = null;\n\t\t\tthis.component.units = null;\n\t\t\tthis.component.relation = null;\n\t\t}\n\n\t\tif (this.areaDescr) this.component.description = nullifyBlank(this.areaDescr.getValue());\n\n\t\tthis.component.synonyms = splitLines(this.areaSyn.getValue());\n\n\t\tthis.component.formula = nullifyBlank(this.lineFormula.getValue());\n\t\tthis.component.inchi = nullifyBlank(this.lineInChI.getValue());\n\t\tthis.component.smiles = nullifyBlank(this.lineSMILES.getValue());\n\n\t\t// remove explicit nulls, for clarity\n\t\t//Object.keys(this.component).forEach((key:string) => {if ((<any>this.component)[key] == null) delete (<any>this.component)[key];});\n\n\t\t//console.log(JSON.stringify(this.component));\n\t\tthis.callbackSave(this);\n\t}\n\n\t// change to sketch mode: close this dialog, save everything, then tell the parent to sketch instead\n\tprivate invokeSketcher():void\n\t{\n\t\tthis.saveAndClose();\n\t\tthis.callbackSketch(this);\n\t}\n\n\t// creates a 2-column grid for field/value entry\n\tprivate fieldGrid():DOM\n\t{\n\t\tlet div = dom('<div/>').css({'display': 'grid', 'width': '100%', 'margin': '1em 0 1em 0'});\n\t\tdiv.css({'align-items': 'center'}); // would be 'baseline', but breaks with textarea\n\t\tdiv.css({'justify-content': 'start', 'grid-row-gap': '0.5em'});\n\t\tdiv.css({'grid-template-columns': '[start field] max-content [value] 1fr [end]'});\n\t\treturn div;\n\t}\n\n\t// creates a field name for inclusion in the grid\n\tprivate createFieldName(parent:DOM, row:number, text:string, topAlign:boolean):DOM\n\t{\n\t\tlet div = dom('<div/>').appendTo(parent);\n\t\tdiv.css({'grid-column': 'field', 'grid-row': row.toString(), 'align-self': topAlign ? 'baseline' : 'center'});\n\t\tif (topAlign) div.css({'padding-top': '0.2em'}); // baseline fudge\n\t\tdiv.css({'padding-right': '0.5em', 'font-weight': 'bold'});\n\t\tdiv.setText(text);\n\t\treturn div;\n\t}\n\n\t// returns single/multi-line editors\n\tprivate createValueLine(parent:DOM, row:number):DOM\n\t{\n\t\tlet div = dom('<div/>').appendTo(parent).css({'grid-area': `${row} / value`});\n\t\tlet input = dom('<input/>').appendTo(div);\n\t\tinput.css({'width': 'calc(100% - 4px)', 'padding': '0', 'font': 'inherit'});\n\t\treturn input;\n\t}\n\tprivate createValueMultiline(parent:DOM, row:number):DOM\n\t{\n\t\tlet div = dom('<div/>').appendTo(parent).css({'grid-area': `${row} / value`});\n\t\tlet area = dom('<textarea/>').appendTo(div);\n\t\tarea.attr({'rows': '5'});\n\t\tarea.css({'width': 'calc(100% - 4px)', 'padding': '0', 'font': 'inherit'});\n\t\treturn area;\n\t}\n\n\tprivate createDiv(parent:DOM, row:number):DOM\n\t{\n\t\tlet div = dom('<div/>').appendTo(parent);\n\t\tdiv.css({'grid-column': 'value', 'grid-row': row.toString()});\n\t\treturn div;\n\t}\n\n\t// make it so that line/text entry boxes trap the escape key to close the dialog box\n\tprivate trapEscape(event:KeyboardEvent, andEnter:boolean):void\n\t{\n\t\tif (event.keyCode == 27)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.close();\n\t\t}\n\t\telse if (andEnter && event.keyCode == 13)\n\t\t{\n\t\t\tif (this.interpretQuantString()) return;\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.saveAndClose();\n\t\t}\n\t}\n\n\t// creates the quantity data entry objects, which are somewhat fiddly and multistate\n\tprivate createQuantity(parent:DOM):void\n\t{\n\t\tlet flex = dom('<div/>').appendTo(parent);\n\t\tflex.css({'display': 'flex', 'align-items': 'center'});\n\t\tlet box = ():DOM => dom('<div style=\"padding-left: 0.5em;\"/>').appendTo(flex);\n\n\t\tthis.optQuantType = new OptionList([QuantityType.Value, QuantityType.Range, QuantityType.Ratio]);\n\t\tthis.optQuantType.render(flex);\n\n\t\tthis.dropQuantRel = this.makeDropdownGroup(box(), this.component.relation, RELATION_VALUES, RELATION_LABELS,\n\t\t\t\t\t\t\t\t\t(value:string, label:string) => {this.component.relation = value;});\n\n\t\tthis.lineQuantVal1 = dom('<input/>').appendTo(box()).class('wmk-editcomponent-input');\n\t\tthis.lineQuantVal1.attr({'size': '10'});\n\t\tthis.lineQuantVal1.onChange(() => this.interpretQuantString());\n\n\t\tlet spanGap = dom('<span/>').appendTo(flex).css({'padding': '0 0.5em 0 0.5em'});\n\n\t\tthis.lineQuantVal2 = dom('<input/>').appendTo(box()).class('wmk-editcomponent-input');\n\t\tthis.lineQuantVal2.attr({'size': '10'});\n\n\t\tlet qubox = box();\n\t\tthis.lineQuantUnits = dom('<input/>').appendTo(qubox).class('wmk-editcomponent-input');\n\t\tthis.lineQuantUnits.attr({'size': '10', 'placeholder': 'units'});\n\t\tthis.btnQuantUnits = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(qubox).css({'margin-left': '0.2em'});\n\t\tthis.btnQuantUnits.setText('\\u{25BC}');\n\t\tthis.btnQuantUnits.onClick(() => this.selectDropUnits());\n\n\t\tlet changeToValue = ():void =>\n\t\t{\n\t\t\tthis.dropQuantRel.setCSS('display', 'block');\n\t\t\tspanGap.setHTML('&plusmn;');\n\t\t\tthis.lineQuantUnits.setCSS('display', 'inline-block');\n\t\t\tthis.btnQuantUnits.setCSS('display', 'inline-block');\n\t\t};\n\t\tlet changeToRange = ():void =>\n\t\t{\n\t\t\tthis.dropQuantRel.setCSS('display', 'none');\n\t\t\tspanGap.setHTML('to');\n\t\t\tthis.lineQuantUnits.setCSS('display', 'inline-block');\n\t\t\tthis.btnQuantUnits.setCSS('display', 'inline-block');\n\t\t};\n\t\tlet changeToRatio = ():void =>\n\t\t{\n\t\t\tthis.dropQuantRel.setCSS('display', 'none');\n\t\t\tspanGap.setHTML('/');\n\t\t\tthis.lineQuantUnits.setCSS('display', 'none');\n\t\t\tthis.btnQuantUnits.setCSS('display', 'none');\n\t\t};\n\n\t\tif (this.component.ratio != null)\n\t\t{\n\t\t\tthis.optQuantType.setSelectedValue(QuantityType.Ratio);\n\t\t\tif (this.component.ratio)\n\t\t\t{\n\t\t\t\tlet [numer, denom] = this.component.ratio;\n\t\t\t\tthis.lineQuantVal1.setValue(numer.toString());\n\t\t\t\tthis.lineQuantVal2.setValue(denom.toString());\n\t\t\t}\n\t\t\tchangeToRatio();\n\t\t}\n\t\telse if (Array.isArray(this.component.quantity))\n\t\t{\n\t\t\tthis.optQuantType.setSelectedValue(QuantityType.Range);\n\t\t\tlet [low, high] = this.component.quantity;\n\t\t\tif (low != null) this.lineQuantVal1.setValue(low.toString());\n\t\t\tif (high != null) this.lineQuantVal2.setValue(high.toString());\n\t\t\tthis.lineQuantUnits.setValue(this.component.units);\n\t\t\tchangeToRange();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.optQuantType.setSelectedValue(QuantityType.Value);\n\t\t\tif (this.component.quantity != null) this.lineQuantVal1.setValue(this.component.quantity.toString());\n\t\t\tif (this.component.error != null) this.lineQuantVal2.setValue(this.component.error.toString());\n\t\t\tthis.lineQuantUnits.setValue(this.component.units);\n\t\t\tchangeToValue();\n\t\t}\n\n\t\tthis.optQuantType.callbackSelect = (idx:number) =>\n\t\t{\n\t\t\tif (idx == 0) changeToValue();\n\t\t\telse if (idx == 1) changeToRange();\n\t\t\telse if (idx == 2) changeToRatio();\n\t\t};\n\t}\n\n\t// creates a dropdown list with a prescribed list of choices; the first one will be selected if current matches nothing\n\tprivate makeDropdownGroup(parent:DOM, current:string, values:string[], labels:string[], changeFunc:(value:string, label:string) => void):DOM\n\t{\n\t\tlet drop = dom('<select/>').appendTo(parent);\n\t\tdrop.css({'height': '2.3em'});\n\t\tfor (let n = 0; n < values.length; n++)\n\t\t{\n\t\t\tlet opt = dom('<option/>').appendTo(drop);\n\t\t\topt.setAttr('value', n.toString());\n\t\t\topt.setHTML(labels[n]);\n\t\t\tif (current == values[n] || current == labels[n]) opt.setAttr('selected', 'true');\n\t\t}\n\t\tdrop.onChange(() => {let idx = parseInt(drop.getValue()); changeFunc(values[idx], labels[idx]);});\n\t\treturn drop;\n\t}\n\n\tprivate selectDropUnits():void\n\t{\n\t\tlet popup = new Popup(this.btnQuantUnits);\n\t\tpopup.callbackPopulate = () =>\n\t\t{\n\t\t\tlet body = popup.bodyDOM();\n\t\t\tfor (let label of Units.commonNames())\n\t\t\t{\n\t\t\t\tlet div = dom('<div/>').appendTo(body).class('wmk-editcomponent-units');\n\t\t\t\tdiv.setText(label);\n\t\t\t\tdiv.onClick(() =>\n\t\t\t\t{\n\t\t\t\t\tthis.lineQuantUnits.setValue(label);\n\t\t\t\t\tpopup.close();\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\tpopup.open();\n\t}\n\n\t// special deal: when typing in extended content to the regular value entry box, optionally break up strings that contain\n\t// a more complete description, e.g. quantity *and* units; returns true if it did something interesting\n\tprivate interpretQuantString():boolean\n\t{\n\t\tlet qstr = this.lineQuantVal1.getValue().trim();\n\n\t\t// scrape out any \"relation\" properties from the beginning first of all\n\t\tlet rel = '';\n\t\tfor (let pfx of RELATION_VALUES) if (qstr.startsWith(pfx) && pfx.length > rel.length) rel = pfx;\n\t\tif (rel) qstr = qstr.substring(rel.length);\n\t\telse if (qstr.startsWith('\\u{2264}')) [rel, qstr] = ['<=', qstr.substring(1)];\n\t\telse if (qstr.startsWith('\\u{2265}')) [rel, qstr] = ['>=', qstr.substring(1)];\n\n\t\t// scrape off units from the end\n\t\tlet units = '';\n\t\tfor (let [name, uri] of Object.entries(Units.NAME_TO_URI))\n\t\t{\n\t\t\tlet regname = name.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // regexify the unit name\n\t\t\tlet regex = new RegExp(`^(.*[\\\\d\\\\s\\)])(${regname})$`);\n\t\t\tlet match = regex.exec(qstr);\n\t\t\tif (!match) continue;\n\t\t\tqstr = match[1];\n\t\t\tunits = Units.URI_TO_NAME[uri];\n\t\t\tbreak;\n\t\t}\n\n\t\tlet isNum = (str:string):boolean =>\n\t\t{\n\t\t\tif (str.startsWith('.')) str = '0' + str;\n\t\t\tif (!/^-?[0-9]+\\.?[0-9eE]*$/.test(str)) return false;\n\t\t\treturn !isNaN(parseFloat(str));\n\t\t};\n\n\t\tqstr = qstr.trim();\n\t\tlet qtype:QuantityType = null;\n\t\tlet qnum1 = '', qnum2 = '';\n\t\tlet match = /^([0-9\\-\\.eE]+)-([0-9\\-\\.eE]+)$/.exec(qstr); // A-B\n\t\tif (match)\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Range, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2) || !units) return false;\n\t\t}\n\t\telse if (match = /^([0-9\\-\\.eE]+)\\.\\.([0-9\\-\\.eE]+)$/.exec(qstr)) // A..B\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Range, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2) || !units) return false;\n\t\t}\n\t\telse if (match = /^([0-9\\-\\.eE]+)\\(([0-9\\-\\.eE]+)\\)$/.exec(qstr)) // A(B)\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Value, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2) || !units) return false;\n\t\t}\n\t\telse if (match = /^([0-9\\-\\.eE]+)\\:([0-9\\-\\.eE]+)$/.exec(qstr)) // A:B\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Ratio, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2)) return false;\n\t\t}\n\t\telse if (match = /^([0-9\\-\\.eE]+)\\/([0-9\\-\\.eE]+)$/.exec(qstr)) // A/B\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Ratio, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2)) return false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (!isNum(qstr) || !units) return false;\n\t\t\t[qtype, qnum1] = [QuantityType.Value, qstr];\n\t\t}\n\n\t\tthis.optQuantType.setSelectedValue(qtype);\n\t\tthis.dropQuantRel.setValue(Math.max(0, RELATION_VALUES.indexOf(rel)).toString());\n\t\tthis.lineQuantVal1.setValue(qnum1);\n\t\tthis.lineQuantVal2.setValue(qnum2);\n\t\tthis.lineQuantUnits.setValue(units);\n\t\tthis.component.units = units;\n\t\treturn true;\n\t}\n\n\t// uses the structure (if any) to calculate the InChI, and fill in the field value\n\tprivate async calculateInChI():Promise<void>\n\t{\n\t\tif (!InChI.isAvailable()) return;\n\t\t//let mol = this.sketcher.getMolecule();\n\t\tlet mol = MoleculeStream.readUnknown(this.component.molfile);\n\t\tif (MolUtil.isBlank(mol))\n\t\t{\n\t\t\t//alert('Draw a molecule first, then calculate the InChI.');\n\t\t\treturn;\n\t\t}\n\n\t\ttry\n\t\t{\n\t\t\tlet {inchi} = await this.inchi.generate(mol);\n\t\t\tthis.lineInChI.setValue(inchi);\n\t\t}\n\t\tcatch (ex) {alert('InChI generation failed: ' + ex);}\n\t}\n\n\t// if there is a structure, calculate MF\n\tprivate calculateFormula():string\n\t{\n\t\tif (!this.component.molfile) return '';\n\t\tlet mol = MoleculeStream.readUnknown(this.component.molfile);\n\t\tif (MolUtil.isBlank(mol)) return '';\n\t\tfor (let n = mol.numAtoms; n >= 1; n--) if (mol.atomicNumber(n) == 0) mol.deleteAtomAndBonds(n);\n\t\treturn MolUtil.molecularFormula(mol);\n\t}\n\n\t// derive from MF field, if any\n\tprivate calculateWeight():void\n\t{\n\t\tlet mw = 0;\n\n\t\tlet mf = this.lineFormula.getValue();\n\t\tif (!mf) mf = this.lineFormula.elInput.placeholder;\n\n\t\twhile (mf)\n\t\t{\n\t\t\tlet match = mf.match(/^([A-Z][a-z]?)(\\d*)(.*?)$/);\n\t\t\tif (!match) {mw = 0; break;}\n\t\t\tlet atno = Chemistry.ELEMENTS.indexOf(match[1]);\n\t\t\tif (atno <= 0) {mw = 0; break;}\n\t\t\tlet num = 1;\n\t\t\tif (match[2])\n\t\t\t{\n\t\t\t\tnum = parseInt(match[2]);\n\t\t\t\tif (num <= 0) {mw = 0; break;}\n\t\t\t}\n\t\t\tmw += Chemistry.NATURAL_ATOMIC_WEIGHTS[atno] * num;\n\t\t\tmf = match[3];\n\t\t}\n\n\t\tif (mw > 0)\n\t\t{\n\t\t\tthis.divWeight.css({'padding-left': '0.5em'});\n\t\t\tthis.divWeight.setText(mw.toFixed(3) + ' g/mol');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.divWeight.css({'padding-left': '0'});\n\t\t\tthis.divWeight.setText('');\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {DataSheet} from 'webmolkit/data/DataSheet';\nimport {MDLSDFReader} from 'webmolkit/data/MDLReader';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {MolUtil} from 'webmolkit/data/MolUtil';\nimport {CoordUtil} from 'webmolkit/data/CoordUtil';\n\n/*\n\tSearching PubChem via the REST API, using names to track down other information, primarily structure.\n*/\n\nconst BASE_COMPOUND = 'https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound';\n\nexport interface PubChemSearchResult\n{\n\tmol:Molecule;\n\tnames:string[];\n\tformula:string;\n\tinchi:string;\n\tinchiKey:string;\n}\n\nexport class PubChemSearch\n{\n\tprivate stopped = false;\n\tprivate cidList:number[] = [];\n\n\t// ------------ public methods ------------\n\n\tpublic static async find(searchText:string):Promise<PubChemSearchResult[]>\n\t{\n\t\treturn new Promise<PubChemSearchResult[]>((resolve, reject) =>\n\t\t{\n\t\t\tlet results:PubChemSearchResult[] = [];\n\t\t\tlet callbackResult = (result:PubChemSearchResult):void =>\n\t\t\t{\n\t\t\t\tresults.push(result);\n\t\t\t};\n\t\t\tlet callbackFinished = (err?:string):void =>\n\t\t\t{\n\t\t\t\tif (err) reject(err); else resolve(results);\n\t\t\t};\n\t\t\tnew PubChemSearch(searchText, callbackResult, callbackFinished).start();\n\t\t});\n\t}\n\n\tconstructor(private searchText:string, private callbackResult:(result:PubChemSearchResult) => void, private callbackFinished:(err?:string) => void)\n\t{\n\t}\n\n\t// initiates the search: callback results are to be expected afterward\n\tpublic start():void\n\t{\n\t\tlet url = BASE_COMPOUND + '/name/' + encodeURIComponent(this.searchText) + '/cids/JSON';\n\n\t\tconst https = require('https');\n\t\thttps.get(url, (resp:any) =>\n\t\t{\n\t\t\tlet data = '';\n\t\t\tresp.on('data', (chunk:string) => data += chunk);\n\t\t\tresp.on('end', () => this.receivedList(data));\n\t\t}).on('error', (err:any) => {if (!this.stopped) this.callbackFinished(err.toString());});\n\t}\n\n\t// premature cessation: action ceases, no more callbacks\n\tpublic stop():void\n\t{\n\t\tthis.stopped = true;\n\t}\n\n\t// ------------ private methods ------------\n\n\t// obtained the list of compounds, so proceed from there\n\tprivate receivedList(data:string):void\n\t{\n\t\tif (this.stopped) return;\n\n\t\tlet obj = null;\n\t\ttry\n\t\t{\n\t\t\tobj = JSON.parse(data);\n\t\t}\n\t\tcatch (ex)\n\t\t{\n\t\t\tconsole.log('Received unparseable result: ' + data);\n\t\t\tthis.callbackFinished('Unparseable result from name query: ' + ex.toString());\n\t\t}\n\n\t\tif (!obj.IdentifierList)\n\t\t{\n\t\t\t// found nothing\n\t\t\tthis.callbackFinished();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cidList = obj.IdentifierList.CID;\n\t\tthis.fetchNext();\n\t}\n\n\tprivate fetchNext():void\n\t{\n\t\tif (this.stopped) return;\n\t\tif (this.cidList.length == 0)\n\t\t{\n\t\t\tthis.callbackFinished();\n\t\t\treturn;\n\t\t}\n\n\t\tlet cid = this.cidList.shift();\n\t\tlet url = BASE_COMPOUND + '/cid/' + cid + '/SDF';\n\n\t\tconst https = require('https');\n\t\thttps.get(url, (resp:any) =>\n\t\t{\n\t\t\tlet data = '';\n\t\t\tresp.on('data', (chunk:string) => data += chunk);\n\t\t\tresp.on('end', () => this.receivedCompound(data));\n\t\t}).on('error', (err:any) => {if (!this.stopped) this.callbackFinished(err.toString());});\n\t}\n\n\tprivate receivedCompound(data:string):void\n\t{\n\t\tif (this.stopped) return;\n\n\t\tlet ds = new MDLSDFReader(data).parse();\n\t\tfor (let n = 0; n < ds.numRows; n++) this.unpackCompound(ds, n);\n\n\t\tthis.fetchNext();\n\t}\n\n\tprivate unpackCompound(ds:DataSheet, row:number):void\n\t{\n\t\tlet result:PubChemSearchResult =\n\t\t{\n\t\t\t'mol': ds.getMolecule(row, 'Molecule'),\n\t\t\t'names': [],\n\t\t\t'formula': ds.getString(row, 'PUBCHEM_MOLECULAR_FORMULA'),\n\t\t\t'inchi': ds.getString(row, 'PUBCHEM_IUPAC_INCHI'),\n\t\t\t'inchiKey': ds.getString(row, 'PUBCHEM_IUPAC_INCHIKEY'),\n\t\t};\n\n\t\tif (result.mol)\n\t\t{\n\t\t\tMolUtil.stripHydrogens(result.mol);\n\t\t\tCoordUtil.normaliseBondDistances(result.mol);\n\t\t}\n\n\t\tconst NAMECOLS = ['PUBCHEM_IUPAC_TRADITIONAL_NAME', 'PUBCHEM_IUPAC_SYSTEMATIC_NAME',\n\t\t\t\t\t\t  'PUBCHEM_IUPAC_OPENEYE_NAME', 'PUBCHEM_IUPAC_CAS_NAME', 'PUBCHEM_IUPAC_NAME'];\n\t\tfor (let colName of NAMECOLS)\n\t\t{\n\t\t\tlet names = ds.getString(row, colName);\n\t\t\tif (!names || typeof names != 'string') continue;\n\t\t\tfor (let name of names.split('\\n')) if (name && result.names.indexOf(name) < 0) result.names.push(name);\n\t\t}\n\n\t\tthis.callbackResult(result);\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Dialog} from 'webmolkit/dialog/Dialog';\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {hasInlineCSS, installInlineCSS} from 'webmolkit/util/Theme';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {ArrangeMolecule} from 'webmolkit/gfx/ArrangeMolecule';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {DrawMolecule} from 'webmolkit/gfx/DrawMolecule';\nimport {PubChemSearch, PubChemSearchResult} from './PubChemSearch';\n\n/*\n\tDialog for finding a compound by name using remote webservices.\n*/\n\nexport class LookupCompoundDialog extends Dialog\n{\n\tprivate spanStatus:DOM;\n\tprivate btnSearch:DOM;\n\tprivate btnApply:DOM;\n\tprivate vertical:DOM;\n\tprivate searchInput:DOM;\n\tprivate resultArea:DOM;\n\n\tprivate pubchem:PubChemSearch = null;\n\tprivate resultList:PubChemSearchResult[] = [];\n\n\tprivate nameSelected = -1;\n\tprivate nameList:string[] = [];\n\tprivate nameDOM:DOM[] = [];\n\tprivate molSelected = -1;\n\tprivate molList:Molecule[] = [];\n\tprivate molDOM:DOM[] = [];\n\n\tprivate callbackSelect:(source?:LookupCompoundDialog) => void = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(private searchText:string, private parentSize:[number, number])\n\t{\n\t\tsuper();\n\n\t\tif (!hasInlineCSS('mixtures-lookupcompound')) installInlineCSS('mixtures-lookupcompound', this.composeCSS());\n\n\t\tthis.title = 'Lookup Compound';\n\t\tthis.minPortionWidth = 95;\n\t\tthis.maxPortionWidth = 95;\n\t\tthis.maximumHeight = parentSize[1];\n\t}\n\n\tpublic onSelect(callback:(source?:LookupCompoundDialog) => void):void\n\t{\n\t\tthis.callbackSelect = callback;\n\t}\n\n\t// builds the dialog content\n\tprotected populate():void\n\t{\n\t\tlet buttons = this.buttonsDOM(), body = this.bodyDOM();\n\n\t\t// top section\n\n\t\tthis.spanStatus = dom('<span/>').appendTo(buttons);\n\t\tbuttons.appendText(' ');\n\n\t\tbuttons.append(this.domClose);\n\n\t\tbuttons.appendText(' ');\n\n\t\tthis.btnSearch = dom('<button class=\"wmk-button wmk-button-primary\">Search</button>').appendTo(buttons);\n\t\tthis.btnSearch.onClick(() => this.runSearch());\n\n\t\tbuttons.appendText(' ');\n\n\t\tthis.btnApply = dom('<button class=\"wmk-button wmk-button-default\">Apply</button>').appendTo(buttons);\n\t\tthis.btnApply.onClick(() => this.applyResult());\n\t\tthis.btnApply.elInput.disabled = true;\n\n\t\t// main section\n\n\t\tbody.css({'padding': '0 0 0 0.5em'});\n\t\tthis.vertical = dom('<div/>').appendTo(body);\n\t\tthis.vertical.css({'overflow-y': 'scroll', 'height': '100%'});\n\t\tthis.vertical.css({'max-height': (this.parentSize[1] - 200) + 'px'});\n\t\tthis.vertical.css({'padding-right': '18px', 'padding-bottom': '10px'});\n\n\t\tthis.populateSearchEntry();\n\n\t\tthis.resultArea = dom('<div/>').appendTo(this.vertical);\n\n\t\tif (this.searchText) this.runSearch(); // auto-start\n\t}\n\n\tpublic close():void\n\t{\n\t\tif (this.pubchem) this.pubchem.stop();\n\t\tsuper.close();\n\t}\n\n\t// access to selected results: null = nothing selected\n\tpublic getName():string\n\t{\n\t\treturn this.nameSelected < 0 ? null : this.nameList[this.nameSelected];\n\t}\n\tpublic getMolecule():Molecule\n\t{\n\t\treturn this.molSelected < 0 ? null : this.molList[this.molSelected];\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate populateSearchEntry():void\n\t{\n\t\tlet grid = dom('<div/>').appendTo(this.vertical).css({'display': 'grid'});\n\t\tgrid.css({'width': '100%', 'margin': '0.5em 0 0.5em 0'});\n\t\tgrid.css({'align-items': 'center', 'justify-content': 'start', 'grid-row-gap': '0.5em'});\n\t\tgrid.css({'grid-template-columns': '[start field] max-content [value] 1fr [end]'});\n\n\t\tlet divLabel = dom('<div/>').appendTo(grid).css({'grid-column': 'field', 'grid-row': '1', 'padding-right': '0.5em'});\n\t\tdivLabel.setText('Name:');\n\n\t\tlet divInput = dom('<div/>').appendTo(grid).css({'grid-column': 'value', 'grid-row': '1'});\n\t\tthis.searchInput = dom('<input/>').appendTo(divInput).css({'width': '100%', 'font': 'inherit'});\n\t\tthis.searchInput.setValue(this.searchText);\n\t\tthis.searchInput.onKeyDown((event) => this.trapKeys(event));\n\n\t\tthis.searchInput.grabFocus();\n\t}\n\n\tprivate runSearch():void\n\t{\n\t\tif (this.pubchem) this.pubchem.stop();\n\t\tthis.resultArea.empty();\n\t\tthis.resultList = [];\n\n\t\tthis.spanStatus.setText('Searching...');\n\n\t\tlet text = this.searchInput.getValue();\n\t\tif (!text) return;\n\t\tthis.pubchem = new PubChemSearch(text,\n\t\t\t(result:PubChemSearchResult):void => this.gotResult(result),\n\t\t\t(err:string):void => this.finishedSearch(err));\n\t\tthis.pubchem.start();\n\t}\n\n\tprivate applyResult():void\n\t{\n\t\tthis.callbackSelect(this);\n\t\tthis.close();\n\t}\n\n\tprivate gotResult(result:PubChemSearchResult):void\n\t{\n\t\tthis.resultList.push(result);\n\n\t\tlet grid = dom('<div/>').appendTo(this.resultArea).css({'display': 'grid'});\n\t\tgrid.css({'width': '100%', 'margin': '0.5em 0 0.5em 0', 'align-items': 'top', 'justify-content': 'start'});\n\t\tgrid.css({'grid-row-gap': '0.5em'});\n\t\tgrid.css({'grid-template-columns': '[start molecule] max-content [names] 1fr [end]'});\n\n\t\tlet divMol = dom('<div/>').appendTo(grid).css({'grid-column': 'molecule', 'grid-row': '1', 'padding-right': '0.5em'});\n\n\t\tif (result.mol)\n\t\t{\n\t\t\tlet policy = RenderPolicy.defaultColourOnWhite();\n\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\tlet layout = new ArrangeMolecule(result.mol, measure, policy);\n\t\t\tlayout.arrange();\n\t\t\tlayout.squeezeInto(0, 0, 300, 300);\n\t\t\tlet gfx = new MetaVector();\n\t\t\tnew DrawMolecule(layout, gfx).draw();\n\t\t\tgfx.normalise();\n\n\t\t\tlet svg = dom(gfx.createSVG()).appendTo(divMol).css({'display': 'inline-block'});\n\t\t\tsvg.addClass('mixtures-lookupcompound-unselected');\n\n\t\t\tconst idx = this.molList.length;\n\t\t\tsvg.onClick(() => this.selectMolecule(idx));\n\n\t\t\tthis.molList.push(result.mol);\n\t\t\tthis.molDOM.push(svg);\n\t\t}\n\t\telse divMol.setText('(no structure)');\n\n\t\tlet divName = dom('<div/>').appendTo(grid).css({'grid-column': 'names', 'grid-row': '1', 'padding-right': '0.5em'});\n\n\t\tif (result.names.length == 0) divName.setText('(no names)');\n\t\telse for (let name of result.names)\n\t\t{\n\t\t\tlet div = dom('<div/>').appendTo(divName);\n\t\t\tlet span = dom('<span/>').appendTo(div);\n\t\t\tspan.addClass('mixtures-lookupcompound-unselected');\n\t\t\tspan.setText(name);\n\n\t\t\tconst idx = this.nameList.length;\n\t\t\tdiv.onClick(() => this.selectName(idx));\n\n\t\t\tthis.nameList.push(name);\n\t\t\tthis.nameDOM.push(span);\n\t\t}\n\t}\n\n\tprivate finishedSearch(err:string):void\n\t{\n\t\tthis.spanStatus.setText('');\n\n\t\tif (err) alert('Search failed: ' + err);\n\t\telse if (this.resultList.length == 0)\n\t\t{\n\t\t\tthis.resultArea.empty();\n\t\t\tthis.resultArea.setText('Nothing found.');\n\t\t}\n\t}\n\n\tprivate trapKeys(event:KeyboardEvent):void\n\t{\n\t\tif (event.keyCode == 27)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tthis.close();\n\t\t}\n\t\telse if (event.keyCode == 13)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tthis.runSearch();\n\t\t}\n\t}\n\n\tprivate selectName(idx:number):void\n\t{\n\t\tlet prev = this.nameSelected;\n\t\tif (prev == idx) idx = -1;\n\n\t\tif (prev >= 0) this.nameDOM[prev].removeClass('mixtures-lookupcompound-selected');\n\t\tif (idx >= 0) this.nameDOM[idx].addClass('mixtures-lookupcompound-selected');\n\t\tthis.nameSelected = idx;\n\n\t\tthis.btnApply.elInput.disabled = this.nameSelected < 0 && this.molSelected < 0;\n\t}\n\n\tprivate selectMolecule(idx:number):void\n\t{\n\t\tlet prev = this.molSelected;\n\t\tif (prev == idx) idx = -1;\n\n\t\tif (prev >= 0) this.molDOM[prev].removeClass('mixtures-lookupcompound-selected');\n\t\tif (idx >= 0) this.molDOM[idx].addClass('mixtures-lookupcompound-selected');\n\t\tthis.molSelected = idx;\n\n\t\tthis.btnApply.elInput.disabled = this.nameSelected < 0 && this.molSelected < 0;\n\t}\n\n\t// one-time instantiation of necessary styles\n\tprivate composeCSS():string\n\t{\n\t\treturn `\n\t\t\t.mixtures-lookupcompound-unselected\n\t\t\t{\n\t\t\t\tcursor: pointer;\n\t\t\t\tbackground-color: transparent;\n\t\t\t\tborder: 1px solid transparent;\n\t\t\t\tpadding: 3px;\n\t\t\t\tborder-radius: 4px;\n\t\t\t}\n\t\t\t.mixtures-lookupcompound-selected\n\t\t\t{\n\t\t\t\tcursor: default;\n\t\t\t\tbackground-color: #E0E0E0;\n\t\t\t\tborder: 1px solid #808080;\n\t\t\t}\n\t\t`;\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {MDLMOLReader, MDLReaderGroupMixture, MDLReaderLinkNode} from 'webmolkit/data/MDLReader';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MDLMOLWriter} from 'webmolkit/data/MDLWriter';\nimport {MolUtil} from 'webmolkit/data/MolUtil';\nimport {deepClone} from 'webmolkit/util/util';\nimport {MixfileComponent} from './Mixfile';\n\n/*\n\tChecks the supplied string to see if it is a CTAB (V2000/V3000) with features that make enumerable. If so,\n\treturns a list of molecules.\n*/\n\ninterface ProtoMolecule\n{\n\tmol:Molecule;\n\tchildren:ProtoMolecule[];\n\tattachAny:Map<number, number[]>; // bond -> list of atom indices\n\tstereoRacemic:number[][]; // blocks of atoms which are racemic\n\tstereoRelative:number[][]; // blocks of atoms which exist in their drawn configuration OR the opposite\n\tlinkNodes:MDLReaderLinkNode[]; // so-called link nodes, aka repeating atom\n\tmixtures:MDLReaderGroupMixture[]; // mixture collections, which may overlap\n}\n\nexport class ExtractCTABComponent\n{\n\t// ------------ public methods ------------\n\n\tconstructor(private text:string)\n\t{\n\t}\n\n\t// returns a component instance if and only when the underlying CTAB has something mixture-esque; if it's not a molecule,\n\t// or is just a plain ordinary single molecule, returns null\n\tpublic extract():MixfileComponent\n\t{\n\t\tlet ctab = new MDLMOLReader(this.text);\n\t\ttry {ctab.parse();}\n\t\tcatch (ex) {return null;}\n\n\t\tif (!ctab.mol) return null;\n\n\t\tlet seed:Partial<ProtoMolecule> = {mol: ctab.mol};\n\t\tif (ctab.groupAttachAny.size > 0) seed.attachAny = ctab.groupAttachAny;\n\t\tif (ctab.groupStereoRacemic.length > 0) seed.stereoRacemic = ctab.groupStereoRacemic;\n\t\tif (ctab.groupStereoRelative.length > 0) seed.stereoRelative = ctab.groupStereoRelative;\n\t\tif (ctab.groupLinkNodes.length > 0) seed.linkNodes = ctab.groupLinkNodes;\n\t\tif (ctab.groupMixtures.length > 0) seed.mixtures = ctab.groupMixtures;\n\n\t\tif (!seed.attachAny && !seed.stereoRacemic && !seed.stereoRelative &&\n\t\t\t!seed.linkNodes && !seed.mixtures) return null;\n\n\t\tconst SANITY = 100; // stop enumerating after this many\n\n\t\tlet prototypes:ProtoMolecule[] = [seed as ProtoMolecule];\n\t\tfor (let n = 0; n < prototypes.length;)\n\t\t{\n\t\t\tlet proto = prototypes[n];\n\t\t\tlet list:ProtoMolecule[] = this.enumerateAttachAny(proto);\n\t\t\tif (!list) list = this.enumerateStereoRacemic(proto);\n\t\t\tif (!list) list = this.enumerateStereoRelative(proto);\n\t\t\tif (!list) list = this.enumerateLinkNodes(proto);\n\t\t\tif (!list) list = this.enumerateMixtures(proto);\n\n\t\t\tif (list)\n\t\t\t{\n\t\t\t\tprototypes[n] = list[0];\n\t\t\t\tfor (let i = 1; i < list.length; i++) prototypes.splice(n + i, 0, list[i]);\n\t\t\t}\n\t\t\telse n++;\n\n\t\t\tif (prototypes.length > SANITY) break;\n\t\t}\n\n\t\tif (prototypes.length == 0) return null;\n\t\tif (prototypes.length == 1 && Vec.isBlank(prototypes[0].children)) return null;\n\n\t\tlet emit = (comp:MixfileComponent, proto:ProtoMolecule):void =>\n\t\t{\n\t\t\tlet subComp:MixfileComponent = {};\n\t\t\tif (proto.mol) subComp.molfile = new MDLMOLWriter(proto.mol).write();\n\t\t\tcomp.contents.push(subComp);\n\t\t\tif (proto.children)\n\t\t\t{\n\t\t\t\tsubComp.contents = [];\n\t\t\t\tfor (let child of proto.children) emit(subComp, child);\n\t\t\t}\n\t\t};\n\n\t\tlet comp:MixfileComponent = {contents: []};\n\t\tif (ctab.molName) comp.name = ctab.molName;\n\t\tfor (let proto of prototypes) emit(comp, proto);\n\n\t\treturn comp;\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate enumerateAttachAny(proto:ProtoMolecule):ProtoMolecule[]\n\t{\n\t\tif (!proto.attachAny) return null;\n\t\tlet bond:number = null;\n\t\tfor (let look of proto.attachAny.keys()) {bond = look; break;}\n\t\tif (bond == null) return null;\n\t\tlet atoms = proto.attachAny.get(bond);\n\t\tproto.attachAny.delete(bond);\n\t\tif (Vec.isBlank(atoms)) return null;\n\n\t\tlet mol = proto.mol;\n\t\tlet atomKeep = mol.bondFrom(bond), atomChop = mol.bondTo(bond);\n\t\tif (mol.atomElement(atomChop) == '*') {}\n\t\telse if (mol.atomElement(atomKeep) == '*') [atomKeep, atomChop] = [atomChop, atomKeep];\n\t\telse if (mol.atomAdjCount(atomKeep) < mol.atomAdjCount(atomChop)) [atomKeep, atomChop] = [atomChop, atomKeep];\n\n\t\t// update the baseline prototype in lieu of the atom sacrificial atom getting deleted\n\t\tfor (let look of proto.attachAny.keys()) this.removeAtom(proto.attachAny.get(look), atomChop);\n\t\tif (proto.stereoRelative) for (let look of proto.stereoRelative) this.removeAtom(look, atomChop);\n\t\tif (proto.stereoRacemic) for (let look of proto.stereoRacemic) this.removeAtom(look, atomChop);\n\t\tif (proto.linkNodes) for (let n = proto.linkNodes.length - 1; n >= 0; n--)\n\t\t{\n\t\t\tif (proto.linkNodes[n].atom == atomChop) {proto.linkNodes.splice(n, 1); continue;}\n\t\t\tif (proto.linkNodes[n].atom > atomChop) proto.linkNodes[n].atom--;\n\t\t\tthis.removeAtom(proto.linkNodes[n].nbrs, atomChop);\n\t\t}\n\t\tif (proto.mixtures) for (let look of proto.mixtures) this.removeAtom(look.atoms, atomChop);\n\n\t\tlet list:ProtoMolecule[] = [];\n\t\tfor (let connAtom of atoms)\n\t\t{\n\t\t\tlet cmol = mol.clone();\n\t\t\tif (atomChop == cmol.bondFrom(bond)) cmol.setBondFrom(bond, connAtom); else cmol.setBondTo(bond, connAtom);\n\t\t\tcmol.deleteAtomAndBonds(atomChop);\n\t\t\t// TODO: ideally a little redepiction of the connecting bond would be in order, but the connectivity is right, and\n\t\t\t// in most cases it will be possible to see what it is\n\t\t\tlist.push(this.protoClone(proto, cmol));\n\t\t}\n\n\t\treturn list;\n\t}\n\n\t// groups of racemic stereocentres: enumerate all combinations (2^group size)\n\tprivate enumerateStereoRacemic(proto:ProtoMolecule):ProtoMolecule[]\n\t{\n\t\tif (Vec.isBlank(proto.stereoRacemic)) return null;\n\n\t\tlet blk = proto.stereoRacemic.shift();\n\t\tlet mol = proto.mol;\n\n\t\tlet affected = new Set<number>();\n\t\tfor (let atom of blk) affected.add(atom);\n\t\tlet bonds:number[] = [];\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (affected.has(mol.bondFrom(n)) || affected.has(mol.bondTo(n)))\n\t\t{\n\t\t\tlet bt = mol.bondType(n);\n\t\t\tif (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED) bonds.push(n);\n\t\t}\n\n\t\tlet nperm = Math.min(256, 1 << bonds.length);\n\t\tlet list = [this.protoClone(proto, mol)];\n\t\tfor (let n = 1; n < nperm; n++)\n\t\t{\n\t\t\tlet rmol = mol.clone();\n\t\t\tfor (let i = 0, bitand = 1; i < bonds.length; i++)\n\t\t\t{\n\t\t\t\tif (n & bitand)\n\t\t\t\t{\n\t\t\t\t\tlet bt = rmol.bondType(bonds[i]);\n\t\t\t\t\tbt = bt == Molecule.BONDTYPE_INCLINED ? Molecule.BONDTYPE_DECLINED : Molecule.BONDTYPE_INCLINED;\n\t\t\t\t\trmol.setBondType(bonds[i], bt);\n\t\t\t\t}\n\t\t\t\tbitand = bitand << 1;\n\t\t\t}\n\t\t\tlist.push(this.protoClone(proto, rmol));\n\t\t}\n\n\t\treturn list;\n\t}\n\n\t// relative stereocentres: add the original + the inversion for that group\n\tprivate enumerateStereoRelative(proto:ProtoMolecule):ProtoMolecule[]\n\t{\n\t\tif (Vec.isBlank(proto.stereoRelative)) return null;\n\n\t\tlet blk = proto.stereoRelative.shift();\n\t\tlet affected = new Set<number>();\n\t\tfor (let atom of blk) affected.add(atom);\n\n\t\tlet molinv = proto.mol.clone();\n\t\tfor (let n = 1; n <= molinv.numBonds; n++) if (affected.has(molinv.bondFrom(n)) || affected.has(molinv.bondTo(n)))\n\t\t{\n\t\t\tlet bt = molinv.bondType(n);\n\t\t\tif (bt == Molecule.BONDTYPE_INCLINED) molinv.setBondType(n, Molecule.BONDTYPE_DECLINED);\n\t\t\telse if (bt == Molecule.BONDTYPE_DECLINED) molinv.setBondType(n, Molecule.BONDTYPE_INCLINED);\n\t\t}\n\n\t\treturn [proto, this.protoClone(proto, molinv)];\n\t}\n\tprivate enumerateLinkNodes(proto:ProtoMolecule):ProtoMolecule[]\n\t{\n\t\tif (Vec.isBlank(proto.linkNodes)) return null;\n\n\t\tlet link = proto.linkNodes.shift();\n\n\t\tlet mol = proto.mol, a1 = link.atom;\n\t\tlet nbr1 = link.nbrs.length >= 1 ? link.nbrs[0] : 0;\n\n\t\tlet list:ProtoMolecule[] = [];\n\t\tfor (let n = link.minRep; n <= link.maxRep; n++)\n\t\t{\n\t\t\tif (n == 1)\n\t\t\t{\n\t\t\t\tlist.push(this.protoClone(proto, mol));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet rmol = mol.clone();\n\t\t\tlet addedAtoms:number[] = [];\n\t\t\tfor (let i = 2; i <= n; i++)\n\t\t\t{\n\t\t\t\tlet a2 = rmol.addAtom(rmol.atomElement(a1), rmol.atomX(a1), rmol.atomY(a1));\n\t\t\t\trmol.setAtomCharge(a2, rmol.atomCharge(a1));\n\t\t\t\trmol.setAtomUnpaired(a2, rmol.atomUnpaired(a2));\n\t\t\t\trmol.addBond(a1, a2, 1);\n\t\t\t\tif (nbr1 > 0)\n\t\t\t\t{\n\t\t\t\t\tlet a3 = 0;\n\t\t\t\t\tfor (let adj of rmol.atomAdjList(a1)) if (adj != a2 && adj != nbr1) {a3 = adj; break;}\n\t\t\t\t\tif (a3 > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet b = rmol.findBond(a1, a3);\n\t\t\t\t\t\tif (rmol.bondFrom(b) == a1) rmol.setBondFrom(b, a2); else rmol.setBondTo(b, a2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\taddedAtoms.push(a1);\n\t\t\t}\n\t\t\t// TODO: depiction would be nice; the atoms are just overlayed on top of each other\n\n\t\t\tlet rproto = this.protoClone(proto, rmol);\n\t\t\tif (rproto.mixtures) for (let mix of rproto.mixtures)\n\t\t\t{\n\t\t\t\tif (mix.atoms.includes(a1)) mix.atoms.push(...addedAtoms);\n\t\t\t}\n\t\t\tlist.push(rproto);\n\t\t}\n\n\t\treturn list;\n\t}\n\tprivate enumerateMixtures(proto:ProtoMolecule):ProtoMolecule[]\n\t{\n\t\tif (Vec.isBlank(proto.mixtures)) return null;\n\n\t\t// NOTE: currently assuming that this enumeration step happens last, and is done in one fell swoop; the protomolecule hierarchy\n\t\t// that gets returned discards any remaining enumeration materials\n\n\t\tlet mol = proto.mol, mixtures = proto.mixtures;\n\n\t\tlet identity = mixtures.map((mix) => mix.index);\n\t\tlet leafmask = Vec.booleanArray(true, mixtures.length);\n\t\tfor (let mix of mixtures) if (mix.parent > 0)\n\t\t{\n\t\t\tlet i = identity.indexOf(mix.parent);\n\t\t\tif (i >= 0) leafmask[i] = false;\n\t\t}\n\n\t\tlet root = {children: []} as ProtoMolecule;\n\t\tlet mapTree = new Map<number, ProtoMolecule>();\n\t\tmapTree.set(0, root);\n\t\twhile (true)\n\t\t{\n\t\t\tlet anything = false;\n\t\t\tfor (let n = 0; n < mixtures.length; n++) if (!leafmask[n] && !mapTree.has(mixtures[n].index))\n\t\t\t{\n\t\t\t\tlet parent = mapTree.get(mixtures[n].parent);\n\t\t\t\tif (!parent) continue;\n\t\t\t\tlet node = {children: []} as ProtoMolecule;\n\t\t\t\tparent.children.push(node);\n\t\t\t\tmapTree.set(mixtures[n].index, node);\n\t\t\t\tanything = true;\n\t\t\t}\n\t\t\tif (!anything) break;\n\t\t}\n\n\t\tlet nonemask = Vec.booleanArray(true, mol.numAtoms); // atoms not mentioned in any mixture block\n\t\tfor (let mix of mixtures) for (let a of mix.atoms) nonemask[a - 1] = false;\n\n\t\tfor (let n = 0; n < mixtures.length; n++) if (leafmask[n])\n\t\t{\n\t\t\tlet atommask = nonemask.slice(0);\n\t\t\tfor (let a of mixtures[n].atoms) atommask[a - 1] = true;\n\n\t\t\tlet mixmol = MolUtil.subgraphMask(mol, atommask);\n\t\t\tlet node = {mol: mixmol} as ProtoMolecule;\n\t\t\tmapTree.get(mixtures[n].parent).children.push(node);\n\t\t}\n\n\t\tif (root.children.length == 1) root = root.children[0];\n\t\treturn root.children;\n\t}\n\n\t// makes a copy of the prototype's fields, and copies over the replacement molecule\n\tprivate protoClone(proto:ProtoMolecule, mol:Molecule):ProtoMolecule\n\t{\n\t\tlet dup:ProtoMolecule =\n\t\t{\n\t\t\t'mol': mol,\n\t\t\t'children': [],\n\t\t\t'attachAny': proto.attachAny ? new Map(proto.attachAny) : null,\n\t\t\t'stereoRacemic': deepClone(proto.stereoRacemic),\n\t\t\t'stereoRelative': deepClone(proto.stereoRelative),\n\t\t\t'linkNodes': deepClone(proto.linkNodes),\n\t\t\t'mixtures': deepClone(proto.mixtures),\n\t\t};\n\t\treturn dup;\n\t}\n\n\t// updates a list given that a certain atom has been deleted: decrements or removes any atoms that are affected\n\tprivate removeAtom(list:number[], atom:number):void\n\t{\n\t\tfor (let n = list.length - 1; n >= 0; n--)\n\t\t{\n\t\t\tif (list[n] == atom) list.splice(n, 1);\n\t\t\telse if (list[n] > atom) list[n]--;\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Widget} from 'webmolkit/ui/Widget';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {ClipboardProxy} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy} from 'webmolkit/ui/MenuProxy';\nimport {deepClone, eventCoords, newElement, pixelDensity} from 'webmolkit/util/util';\nimport {EditCompound} from 'webmolkit/dialog/EditCompound';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MoleculeStream} from 'webmolkit/data/MoleculeStream';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {EditComponent} from './EditComponent';\nimport {MDLMOLWriter} from 'webmolkit/data/MDLWriter';\nimport {MolUtil} from 'webmolkit/data/MolUtil';\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {CoordUtil} from 'webmolkit/data/CoordUtil';\nimport {Mixture} from '../mixture/Mixture';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {MixfileComponent} from '../mixture/Mixfile';\nimport {LookupCompoundDialog} from '../electron/LookupCompoundDialog';\nimport {InChIDelegate} from '../mixture/InChIDelegate';\nimport {ExtractCTABComponent} from '../mixture/ExtractCTABComponent';\nimport {NormMixture} from '../mixture/NormMixture';\nimport {DrawMixture} from '../mixture/DrawMixture';\n\n/*\n\tHigh level widget for the editing area for a mixture.\n*/\n\nconst DEFAULT_SCALE = 25;\nconst UNDO_SIZE = 10;\n\nenum DragReason\n{\n\tNone,\n\tAny,\n\tPan,\n}\n\nexport class EditMixture extends Widget\n{\n\tpublic callbackUpdateTitle:() => void = null;\n\tpublic callbackInteraction:() => void = null;\n\n\tpublic monochrome = false;\n\n\tprotected mixture = new Mixture();\n\tprotected policy:RenderPolicy = null\n\tprotected canvasMixture:HTMLCanvasElement;\n\tprotected canvasOver:HTMLCanvasElement;\n\n\tprotected undoStack:Mixture[] = [];\n\tprotected redoStack:Mixture[] = [];\n\n\tprotected offsetX = 0;\n\tprotected offsetY = 0;\n\tprotected pointScale = DEFAULT_SCALE;\n\tprotected filthy = true; // filthy: screen is out of date, needs to be redrawn\n\tprotected dirty = false; // dirty: data has changed since last save\n\tprotected layout:ArrangeMixture = null;\n\tprotected collapsedBranches:number[][] = [];\n\tprotected hoverIndex = -1; // component over which the mouse is hovering\n\tprotected activeIndex = -1; // component that is currently being clicked upon\n\tprotected selectedIndex = 0; // selected component (having been previously clicked)\n\tprotected delayedSelect:number[] = null; // if set to an origin vector: to rederive selectedIndex next time the layout is evaluated\n\n\tprotected dragReason = DragReason.None;\n\tprotected dragIndex = -1;\n\tprotected dragX = 0;\n\tprotected dragY = 0;\n\tprotected isEditing = false;\n\tprotected dlgCompound:EditCompound = null;\n\n\tprotected structureIntegrity:Record<string, string> = {}; // metadata key -> name for those which are sensitive to changes to structure\n\n\t// ------------ public methods ------------\n\n\tconstructor(protected inchi:InChIDelegate, protected proxyClip:ClipboardProxy, protected proxyMenu:MenuProxy)\n\t{\n\t\tsuper();\n\t}\n\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\n\t\tlet content = this.contentDOM;\n\n\t\tcontent.css({'width': '100%', 'height': '100%'});\n\t\tcontent.css({'background-color': '#F0F0F0'});\n\t\tcontent.css({'position': 'relative', 'outline-width': '0'});\n\n\t\tlet canvasStyle = 'position: absolute; left: 0; top: 0; pointer-events: none;';\n\t\tthis.canvasMixture = newElement(content, 'canvas', {style: canvasStyle}) as HTMLCanvasElement;\n\t\tthis.canvasOver = newElement(content, 'canvas', {style: canvasStyle}) as HTMLCanvasElement;\n\n\t\t//content.onResize(() => this.redraw());\n\n\t\t// setup all the interactive events\n\t\tcontent.onClick((event) => this.mouseClick(event));\n\t\tcontent.onDblClick((event) => this.mouseDoubleClick(event));\n\t\tcontent.onMouseDown((event) => this.mouseDown(event));\n\t\tcontent.onMouseUp((event) => this.mouseUp(event));\n\t\tcontent.onMouseOver((event) => this.mouseOver(event));\n\t\tcontent.onMouseLeave((event) => this.mouseOut(event));\n\t\tcontent.onMouseMove((event) => this.mouseMove(event));\n\t\t// (maybe have mousewheel as an option: in Electron mode it makes some sense, but embedded\n\t\t// on a web page it' not good...)\n\t\t//content.on('mousewheel', (event:JQueryEventObject) => this.mouseWheel(event));\n\t\tcontent.onKeyPress((event) => this.keyPressed(event));\n\t\tcontent.onKeyDown((event) => this.keyDown(event));\n\t\tcontent.onKeyUp((event) => this.keyUp(event));\n\t\tcontent.onContextMenu((event) => this.contextMenu(event));\n\n\t\tcontent.attr({'id': 'mixtureEditor_main', 'tabindex': '0'});\n\t\tthis.refocus();\n\t\tthis.redraw(true, false);\n\t}\n\n\t// whether or not menu commands are being received; no means that it's in dialog/editing mode\n\tpublic isReceivingCommands():boolean {return !this.isEditing;}\n\tpublic setEditing(isEditing:boolean):void {this.isEditing = isEditing;}\n\tpublic compoundEditor():EditCompound {return this.dlgCompound;}\n\n\t// add a metadata key that can potentially stop being valid when the structure is changed\n\tpublic addStructureIntegrityKey(key:string, description:string):void\n\t{\n\t\tthis.structureIntegrity[key] = description;\n\t}\n\n\t// access to current state\n\tpublic getMixture():Mixture {return this.mixture;}\n\tpublic setMixture(mixture:Mixture, withAutoScale:boolean = false, withStashUndo:boolean = true):void\n\t{\n\t\t// NOTE: the \"withAutoScale\" parameter is currently not very meaningful since the modified mixture gets a re-layout\n\t\twithAutoScale = true;\n\n\t\tif (this.delayedSelect == null && this.selectedIndex >= 0 && this.layout != null) this.delayedSelect = this.layout.components[this.selectedIndex].origin;\n\n\t\tif (withStashUndo) this.stashUndo();\n\t\tthis.mixture = mixture;\n\n\t\tthis.offsetX = 0;\n\t\tthis.offsetY = 0;\n\t\tthis.pointScale = this.policy.data.pointScale;\n\t\tthis.filthy = true;\n\t\tthis.layout = null;\n\t\tthis.hoverIndex = -1;\n\t\tthis.activeIndex = -1;\n\t\tthis.selectedIndex = -1;\n\t\tthis.redraw(withAutoScale);\n\n\t\tthis.dirty = true;\n\t\tif (this.callbackUpdateTitle) this.callbackUpdateTitle();\n\t}\n\n\t// returns the selected origin indices & component, or null if nothing selected\n\tpublic getSelected():[number[], MixfileComponent]\n\t{\n\t\tif (this.selectedIndex < 0 || this.layout == null) return [null, null];\n\t\tlet comp = this.layout.components[this.selectedIndex];\n\t\treturn [comp.origin, comp.content];\n\t}\n\n\tpublic getCollapsedBranches():number[][] {return this.collapsedBranches;}\n\n\t// wipes the undo & redo stacks\n\tpublic clearHistory():void\n\t{\n\t\tthis.undoStack = [];\n\t\tthis.redoStack = [];\n\t}\n\n\t// appends the current state to the undo-stack\n\tpublic stashUndo():void\n\t{\n\t\t//if (this.undoStack.length == 0 && this.mixture.isEmpty()) return; // don't put empty stuff at the beginning\n\t\tthis.undoStack.push(this.mixture.clone());\n\t\twhile (this.undoStack.length > UNDO_SIZE) this.undoStack.splice(0, 1);\n\t\tthis.redoStack = [];\n\t}\n\n\t// reports on the state of the undo/redo buffers\n\tpublic canUndo():boolean {return this.undoStack.length > 0;}\n\tpublic canRedo():boolean {return this.redoStack.length > 0;}\n\n\t// actually does the undo/redo operation\n\tpublic performUndo():void\n\t{\n\t\tif (this.undoStack.length == 0) return;\n\t\tthis.redoStack.push(this.mixture.clone());\n\t\tthis.setMixture(this.undoStack.pop(), false, false);\n\t}\n\tpublic performRedo():void\n\t{\n\t\tif (this.redoStack.length == 0) return;\n\t\tthis.undoStack.push(this.mixture.clone());\n\t\tthis.setMixture(this.redoStack.pop(), false, false);\n\t}\n\n\t// need-save status\n\tpublic isDirty():boolean {return this.dirty;}\n\tpublic setDirty(dirty:boolean):void {this.dirty = dirty;}\n\n\t// returns true if the mixture content is empty\n\tpublic isBlank():boolean {return this.mixture.isEmpty();}\n\n\t// makes sure the content gets redrawn imminently; calling many times is not a performance issue\n\tpublic delayedRedraw():void\n\t{\n\t\tthis.filthy = true;\n\t\twindow.setTimeout(() => {if (this.filthy) this.redraw();}, 10);\n\t}\n\n\t// alter zoom level by a factor\n\tpublic zoom(scale:number):void\n\t{\n\t\tthis.pointScale *= scale;\n\t\tthis.layout = null;\n\t\tthis.redraw();\n\t}\n\n\t// rescale to fit & recentre\n\tpublic zoomFull():void\n\t{\n\t\tthis.layout = null;\n\t\tthis.pointScale = DEFAULT_SCALE;\n\t\tthis.redraw(true, true);\n\t}\n\n\t// rescale to fit & recentre/with a limit to the size\n\tpublic zoomNormal():void\n\t{\n\t\tthis.layout = null;\n\t\tthis.pointScale = DEFAULT_SCALE;\n\t\tthis.redraw(true, false);\n\t}\n\n\t// select the given component index (programmatically)\n\tpublic selectComponent(idx:number):void\n\t{\n\t\tif (this.selectedIndex == idx) return;\n\t\tthis.selectedIndex = idx;\n\t\tthis.activeIndex = -1;\n\t\tthis.delayedRedraw();\n\t}\n\n\t// convenient overload for selecting whichever numbered component matches the origin sequence\n\tpublic selectOrigin(origin:number[]):void\n\t{\n\t\tlet complist = this.layout.components;\n\t\tfor (let n = 0; n < complist.length; n++) if (Vec.equals(complist[n].origin, origin))\n\t\t{\n\t\t\tthis.selectComponent(n);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// bring up the structure-editing panel, which uses the generic sketching dialog\n\tpublic editStructure():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet comp = this.mixture.getComponent(origin);\n\n\t\tlet mol = comp.molfile ? MoleculeStream.readUnknown(comp.molfile) : null;\n\n\t\tthis.dlgCompound = new EditCompound(mol ? mol : new Molecule(), this.contentDOM);\n\t\tthis.dlgCompound.onSave(() =>\n\t\t{\n\t\t\tlet mol = this.dlgCompound.getMolecule();\n\t\t\tcomp = deepClone(comp);\n\t\t\tthis.checkStructureIntegrity(comp, mol);\n\n\t\t\tlet molfile = MoleculeStream.writeMDLMOL(mol);\n\t\t\tif (!molfile) molfile = null;\n\n\t\t\tcomp.molfile = molfile;\n\t\t\tlet modmix = this.mixture.clone();\n\t\t\tif (modmix.setComponent(origin, comp))\n\t\t\t{\n\t\t\t\tthis.setMixture(modmix);\n\t\t\t\tthis.selectOrigin(origin);\n\t\t\t}\n\n\t\t\tthis.dlgCompound.close();\n\t\t});\n\t\tthis.dlgCompound.onClose(() =>\n\t\t{\n\t\t\tthis.isEditing = false;\n\t\t\tthis.dlgCompound = null;\n\t\t\tthis.refocus();\n\t\t});\n\t\tthis.dlgCompound.defineClipboard(this.proxyClip);\n\t\tthis.dlgCompound.defineContext(this.proxyMenu);\n\t\tthis.isEditing = true;\n\t\tthis.dlgCompound.open();\n\t}\n\n\t// invoke the editor dialog for the current component - basically everything except the structure\n\tpublic editDetails():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet comp = this.mixture.getComponent(origin);\n\n\t\tlet w = window.innerWidth * 0.8, h = window.innerHeight * 0.8;\n\n\t\tlet dlg = new EditComponent(deepClone(comp), this.inchi, [w, h], this.contentDOM);\n\t\tdlg.proxyClip = this.proxyClip;\n\t\tdlg.onSave(() =>\n\t\t{\n\t\t\tlet modmix = this.mixture.clone();\n\t\t\tif (modmix.setComponent(origin, dlg.getComponent()))\n\t\t\t{\n\t\t\t\tthis.setMixture(modmix);\n\t\t\t\tthis.selectOrigin(origin);\n\t\t\t}\n\t\t\tdlg.close();\n\t\t});\n\t\tdlg.onSketch(() =>\n\t\t{\n\t\t\tthis.selectOrigin(origin);\n\t\t\tthis.editStructure();\n\t\t});\n\t\tdlg.onClose(() =>\n\t\t{\n\t\t\tthis.isEditing = false;\n\t\t\tthis.refocus();\n\t\t});\n\t\tthis.isEditing = true;\n\t\tdlg.open();\n\t}\n\n\t// lookup: searches for compound information based on name, prespecified or otherwise\n\tpublic lookupCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet comp = this.mixture.getComponent(origin);\n\t\tlet curX = this.contentDOM.width(), curY = this.contentDOM.height();\n\t\tlet dlg = new LookupCompoundDialog(comp.name, [curX, curY]);\n\t\tdlg.onSelect(() =>\n\t\t{\n\t\t\tlet modmix = this.mixture.clone();\n\t\t\tcomp = deepClone(modmix.getComponent(origin));\n\t\t\tlet name = dlg.getName(), mol = dlg.getMolecule();\n\t\t\tif (name != null) comp.name = name;\n\t\t\tif (mol != null) comp.molfile = new MDLMOLWriter(mol).write();\n\t\t\tif (modmix.setComponent(origin, comp))\n\t\t\t{\n\t\t\t\tthis.setMixture(modmix);\n\t\t\t\tthis.selectOrigin(origin);\n\t\t\t}\n\t\t\tdlg.close();\n\t\t});\n\t\tdlg.onClose(() =>\n\t\t{\n\t\t\tthis.isEditing = false;\n\t\t\tthis.refocus();\n\t\t});\n\t\tdlg.open();\n\t}\n\n\t// deletes selected component, if any\n\tpublic deleteCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tif (origin.length == 0) return;\n\n\t\tlet modmix = this.mixture.clone();\n\t\tmodmix.deleteComponent(origin);\n\t\tthis.delayedSelect = null;\n\t\tthis.setMixture(modmix);\n\n\t\torigin = origin.slice(0);\n\t\tif (modmix.getComponent(origin)) {}\n\t\telse if (Vec.last(origin) > 0) origin[origin.length - 1]--;\n\t\telse origin.pop();\n\t\tthis.selectOrigin(origin);\n\t}\n\n\t// append a new sub-item to the end of the current component's list\n\tpublic appendToCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet modmix = this.mixture.clone();\n\t\tlet comp = modmix.getComponent(origin);\n\t\tif (!comp.contents) comp.contents = [];\n\t\tcomp.contents.push({});\n\t\tthis.delayedSelect = Vec.concat(origin, [comp.contents.length - 1]);\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// inserts an empty component before the current one\n\tpublic prependBeforeCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet modmix = this.mixture.clone();\n\t\tmodmix.prependBefore(origin, {});\n\t\tthis.delayedSelect = origin;\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// insert above/below the current component\n\tpublic insertBeforeCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tif (Vec.isBlank(origin)) return;\n\t\tlet modmix = this.mixture.clone();\n\t\tlet pos = origin.pop();\n\t\tlet parent = modmix.getComponent(origin);\n\t\tparent.contents.splice(pos, 0, {});\n\t\torigin.push(pos);\n\t\tthis.delayedSelect = origin;\n\t\tthis.setMixture(modmix);\n\t}\n\tpublic insertAfterCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tif (Vec.isBlank(origin)) return;\n\t\tlet modmix = this.mixture.clone();\n\t\tlet pos = origin.pop();\n\t\tlet parent = modmix.getComponent(origin);\n\t\tparent.contents.splice(pos + 1, 0, {});\n\t\torigin.push(pos + 1);\n\t\tthis.delayedSelect = origin;\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// move the current component up or down the hierarchy\n\tpublic reorderCurrent(dir:number):void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tif (origin.length == 0) return;\n\n\t\tlet modmix = this.mixture.clone();\n\t\tlet [parent, idx] = Mixture.splitOrigin(origin);\n\t\tlet comp = modmix.getComponent(parent);\n\t\tif (idx + dir < 0 || idx + dir >= comp.contents.length) return;\n\t\tVec.swap(comp.contents, idx, idx + dir);\n\t\tthis.delayedSelect = Vec.concat(parent, [idx + dir]);\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// copy current to clipboard, and optionally excise it\n\tpublic clipboardCopy(andCut:boolean, wholeBranch:boolean = false):void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\n\t\tlet comp = deepClone(this.mixture.getComponent(origin));\n\t\tdelete (comp as any).mixfileVersion;\n\t\tif (!wholeBranch) comp.contents = [];\n\t\tlet str = Mixture.serialiseComponent(comp);\n\n\t\t/*let clipboard = require('electron').clipboard;\n\t\tclipboard.writeText(str);*/\n\t\tthis.proxyClip.setString(str);\n\n\t\tif (origin.length > 0 && andCut) this.deleteCurrent();\n\t}\n\n\t// paste from clipboard, if possible\n\tpublic clipboardPaste():void\n\t{\n\t\t/*let clipboard = require('electron').clipboard;\n\t\tlet str = clipboard.readText();*/\n\t\tlet str = this.proxyClip.getString();\n\n\t\tlet json:any = null;\n\t\ttry {json = JSON.parse(str);}\n\t\tcatch (e) {} // silent failure\n\n\t\tlet origin:number[] = [];\n\t\tif (this.selectedIndex >= 0) origin = this.layout.components[this.selectedIndex].origin;\n\n\t\t// see if it's a Molfile CTAB that has enumeration flags set (stays null if nothing component-ish)\n\t\tif (!json) json = new ExtractCTABComponent(str).extract();\n\n\t\t// see if it's just a regular singular molecule\n\t\tif (!json)\n\t\t{\n\t\t\tlet mol = MoleculeStream.readUnknown(str);\n\t\t\tif (MolUtil.notBlank(mol))\n\t\t\t{\n\t\t\t\tlet modmix = this.mixture.clone();\n\t\t\t\tlet comp = modmix.getComponent(origin);\n\t\t\t\tif (comp)\n\t\t\t\t{\n\t\t\t\t\tcomp.molfile = new MDLMOLWriter(mol).write();\n\t\t\t\t\tthis.setMixture(modmix);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse alert('Clipboard does not contain a mixture component.');\n\t\t\treturn;\n\t\t}\n\n\t\tif (!json.name && !json.molfile && !json.quantity && Vec.isBlank(json.contents))\n\t\t{\n\t\t\talert('Clipboard content is either not a component, or has no interesting content.');\n\t\t\treturn;\n\t\t}\n\n\t\t// special deal when pasting into nothing: just replace it\n\t\tif (this.selectedIndex < 0 && this.mixture.isEmpty())\n\t\t{\n\t\t\tlet modmix = new Mixture(json);\n\t\t\tthis.delayedSelect = [];\n\t\t\tthis.setMixture(modmix);\n\t\t\treturn;\n\t\t}\n\n\t\t// append to or replace some piece, preferably selected\n\t\tlet modmix = this.mixture.clone();\n\t\tlet comp = modmix.getComponent(origin);\n\t\tif (Mixture.isComponentEmpty(comp))\n\t\t{\n\t\t\tObject.keys(comp).forEach((key:string) => delete (comp as any)[key]);\n\t\t\tObject.keys(json).forEach((key:string) => (comp as any)[key] = json[key]);\n\t\t\tthis.delayedSelect = origin;\n\t\t}\n\t\telse // append\n\t\t{\n\t\t\tif (!comp.contents) comp.contents = [];\n\t\t\tcomp.contents.push(json);\n\t\t\tthis.delayedSelect = Vec.concat(origin, [comp.contents.length - 1]);\n\t\t}\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// call this anytime the focus could have wandered\n\tpublic refocus():void\n\t{\n\t\tthis.contentDOM.grabFocus();\n\t}\n\n\t// return the layout around onscreen for an indicated component\n\tpublic getComponentPosition(origin:number[]):Box\n\t{\n\t\tfor (let comp of this.layout.components) if (Vec.equals(origin, comp.origin))\n\t\t{\n\t\t\tlet box = comp.boundary.clone();\n\t\t\tbox.x += this.offsetX;\n\t\t\tbox.y += this.offsetY;\n\t\t\treturn box;\n\t\t}\n\t\treturn null;\n\t}\n\n\t// ------------ private methods ------------\n\n\tprotected redraw(rescale = false, fit = false):void\n\t{\n\t\tthis.filthy = false;\n\n\t\tlet width = this.contentDOM.width(), height = this.contentDOM.height();\n\t\tlet density = pixelDensity();\n\n\t\tfor (let canvas of [this.canvasMixture, this.canvasOver])\n\t\t{\n\t\t\tcanvas.width = width * density;\n\t\t\tcanvas.height = height * density;\n\t\t\tcanvas.style.width = width + 'px';\n\t\t\tcanvas.style.height = height + 'px';\n\t\t}\n\n\t\tif (!this.layout)\n\t\t{\n\t\t\tlet measure = new OutlineMeasurement(0, 0, this.pointScale);\n\t\t\tthis.policy = this.monochrome ? RenderPolicy.defaultBlackOnWhite(this.pointScale) : RenderPolicy.defaultColourOnWhite(this.pointScale);\n\t\t\tthis.layout = new ArrangeMixture(this.mixture, measure, this.policy);\n\t\t\tthis.layout.showCollapsors = true;\n\t\t\tthis.layout.collapsedBranches = this.collapsedBranches;\n\t\t\tthis.layout.packBranches = new Size(0.8 * this.contentDOM.width(), 0.8 * this.contentDOM.height());\n\t\t\tthis.layout.norm = new NormMixture(this.mixture);\n\t\t\tthis.layout.norm.analyse();\n\t\t\tthis.layout.arrange();\n\t\t\tif (rescale) this.scaleToFit(fit);\n\t\t}\n\n\t\tif (this.delayedSelect)\n\t\t{\n\t\t\tfor (let n = 0; n < this.layout.components.length; n++) if (Vec.equals(this.delayedSelect, this.layout.components[n].origin))\n\t\t\t{\n\t\t\t\tthis.selectedIndex = n;\n\t\t\t\tthis.ensureComponentVisible(n);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.delayedSelect = null;\n\t\t}\n\n\t\tlet gfx = new MetaVector();\n\t\tlet draw = new DrawMixture(this.layout, gfx);\n\t\tdraw.hoverIndex = this.hoverIndex;\n\t\tdraw.activeIndex = this.activeIndex;\n\t\tdraw.selectedIndex = this.selectedIndex;\n\t\tdraw.draw();\n\n\t\tgfx.offsetX = this.offsetX;\n\t\tgfx.offsetY = this.offsetY;\n\t\tgfx.setSize(width, height);\n\t\tgfx.renderCanvas(this.canvasMixture, true);\n\t}\n\n\t// assuming that layout is already defined, modifies the offset/scale so that\n\tprotected scaleToFit(mustFit:boolean):void\n\t{\n\t\tlet width = this.contentDOM.width(), height = this.contentDOM.height(), pad = 4;\n\t\tif (mustFit)\n\t\t{\n\t\t\tif (this.layout.width > width - pad || this.layout.height > height - pad)\n\t\t\t{\n\t\t\t\tlet scale = Math.min((width - pad) / this.layout.width, (height - pad) / this.layout.height);\n\t\t\t\tthis.pointScale *= scale;\n\t\t\t\tthis.layout.scaleComponents(scale);\n\t\t\t}\n\t\t\tthis.offsetX = 0.5 * (width - this.layout.width);\n\t\t\tthis.offsetY = 0.5 * (height - this.layout.height);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.offsetX = Math.max(pad, 0.5 * (width - this.layout.width));\n\t\t\tthis.offsetY = 0.5 * (height - this.layout.height);\n\t\t}\n\t}\n\n\t// make sure the indicated component is fully visible onscreen\n\tprivate ensureComponentVisible(idx:number):void\n\t{\n\t\tlet width = this.contentDOM.width(), height = this.contentDOM.height(), pad = 4;\n\t\tlet comp = this.layout.components[idx];\n\t\tlet box = comp.boundary.withOffsetBy(this.offsetX, this.offsetY);\n\n\t\tif (box.minX() < pad) this.offsetX -= box.minX() - pad;\n\t\telse if (box.maxX() > width - pad) this.offsetX += width - pad - box.maxX();\n\n\t\tif (box.minY() < pad) this.offsetY -= box.minY() - pad;\n\t\telse if (box.maxY() > height - pad) this.offsetY += height - pad - box.maxY();\n\t}\n\n\t// mouse has moved: see if we need to update the hover\n\tprotected updateHoverCursor(event:MouseEvent):void\n\t{\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet idx = this.activeIndex >= 0 ? -1 : this.pickComponent(x, y);\n\t\tif (idx != this.hoverIndex)\n\t\t{\n\t\t\tthis.hoverIndex = idx;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t}\n\n\t// finds the index of a component at a given position, or -1 if none\n\tprotected pickComponent(x:number, y:number):number\n\t{\n\t\tlet pick = this.pickComponentSection(x, y);\n\t\treturn pick == null || pick[1] ? -1 : pick[0];\n\t}\n\n\t// more detailed pick: nothing = null, something = [compidx, collapsebox]\n\tprotected pickComponentSection(x:number, y:number):[number, boolean]\n\t{\n\t\tif (!this.layout) return null;\n\t\tfor (let n = 0; n < this.layout.components.length; n++)\n\t\t{\n\t\t\tlet comp = this.layout.components[n];\n\t\t\tlet ux = x - this.offsetX - comp.boundary.x, uy = y - this.offsetY - comp.boundary.y;\n\t\t\tif (comp.outline.contains(ux, uy)) return [n, false];\n\t\t\tif (comp.collapseBox && comp.collapseBox.contains(ux, uy)) return [n, true];\n\t\t}\n\t\treturn null;\n\t}\n\n\t// cursor key wandering\n\tprotected navigateDirection(dir:string):void\n\t{\n\t\tlet newIndex = -1;\n\t\tif (this.selectedIndex < 0) newIndex = 0;\n\t\telse\n\t\t{\n\t\t\tlet origin = this.layout.components[this.selectedIndex].origin.slice(0);\n\n\t\t\tif (dir == 'tab')\n\t\t\t{\n\t\t\t\tif (Vec.isBlank(origin))\n\t\t\t\t{\n\t\t\t\t\tlet comp = this.mixture.getComponent(origin);\n\t\t\t\t\tif (Vec.isBlank(comp.contents))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.delayedSelect = [0];\n\t\t\t\t\t\tthis.appendToCurrent();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdir = 'right';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet parent = this.mixture.getComponent(origin.slice(0, origin.length - 1)), pos = Vec.last(origin);\n\t\t\t\t\tif (pos == parent.contents.length - 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.insertAfterCurrent();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdir = 'down';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dir == 'left')\n\t\t\t{\n\t\t\t\tif (origin.length == 0) return;\n\t\t\t\torigin.pop();\n\t\t\t\tnewIndex = this.layout.findComponent(origin);\n\t\t\t}\n\t\t\telse if (dir == 'right')\n\t\t\t{\n\t\t\t\torigin.push(0);\n\t\t\t\tnewIndex = this.layout.findComponent(origin);\n\t\t\t}\n\t\t\telse if (dir == 'up')\n\t\t\t{\n\t\t\t\tif (origin.length == 0 || origin[origin.length - 1] == 0) return;\n\t\t\t\torigin[origin.length - 1]--;\n\t\t\t\tnewIndex = this.layout.findComponent(origin);\n\t\t\t}\n\t\t\telse if (dir == 'down')\n\t\t\t{\n\t\t\t\tif (origin.length == 0) return;\n\t\t\t\torigin[origin.length - 1]++;\n\t\t\t\tnewIndex = this.layout.findComponent(origin);\n\t\t\t}\n\t\t}\n\n\t\tif (newIndex >= 0 && newIndex < this.layout.components.length)\n\t\t{\n\t\t\tthis.delayedSelect = this.layout.components[newIndex].origin;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t}\n\n\t// collapses or un-collapses the indicated position\n\tprotected toggleCollapsed(idx:number):void\n\t{\n\t\tlet origin = this.layout.components[idx].origin;\n\t\tlet got = false;\n\t\tfor (let n = 0; n < this.collapsedBranches.length; n++) if (Vec.equals(origin, this.collapsedBranches[n]))\n\t\t{\n\t\t\tthis.collapsedBranches.splice(n, 1);\n\t\t\tgot = true;\n\t\t\tbreak;\n\t\t}\n\t\tif (!got) this.collapsedBranches.push(origin);\n\t\tthis.layout = null;\n\t\tthis.redraw();\n\t}\n\n\t// interactivity\n\tprotected mouseClick(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tif (event.ctrlKey)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet picked = this.pickComponentSection(x, y);\n\t\tif (picked && picked[1]) this.toggleCollapsed(picked[0]);\n\t}\n\tprotected mouseDoubleClick(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tevent.stopImmediatePropagation();\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet idx = this.pickComponent(x, y);\n\t\tif (idx >= 0)\n\t\t{\n\t\t\tthis.hoverIndex = -1;\n\t\t\tthis.activeIndex = -1;\n\t\t\tthis.selectedIndex = idx;\n\t\t\tthis.delayedRedraw();\n\t\t\tthis.editDetails();\n\t\t}\n\t}\n\tprotected mouseDown(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tif (this.callbackInteraction) this.callbackInteraction();\n\t\t//event.preventDefault();\n\n\t\tif (event.which != 1) return;\n\t\tif (event.ctrlKey)\n\t\t{\n\t\t\t//this.contextMenu(event);\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet idx = this.pickComponent(x, y);\n\n\t\tthis.dragReason = DragReason.Any;\n\t\tthis.dragIndex = idx;\n\t\tthis.dragX = x;\n\t\tthis.dragY = y;\n\n\t\tif (idx != this.activeIndex)\n\t\t{\n\t\t\tthis.activeIndex = idx;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t}\n\tprotected mouseUp(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tif (event.ctrlKey)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.dragReason != DragReason.Pan)\n\t\t{\n\t\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\t\tlet idx = this.pickComponent(x, y);\n\t\t\tif (idx == this.activeIndex) this.selectedIndex = idx;\n\t\t\tthis.activeIndex = -1;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\n\t\tthis.dragReason = DragReason.None;\n\t}\n\tprotected mouseOver(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tthis.updateHoverCursor(event);\n\t}\n\tprotected mouseOut(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tthis.updateHoverCursor(event);\n\t\tthis.dragReason = DragReason.None;\n\t}\n\tprotected mouseMove(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tthis.updateHoverCursor(event);\n\n\t\tif (this.dragReason == DragReason.Any && this.dragIndex < 0)\n\t\t{\n\t\t\tthis.dragReason = DragReason.Pan;\n\t\t}\n\n\t\tif (this.dragReason == DragReason.Pan)\n\t\t{\n\t\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\t\tlet dx = x - this.dragX, dy = y - this.dragY;\n\t\t\tif (dx != 0 && dy != 0)\n\t\t\t{\n\t\t\t\tthis.offsetX += dx;\n\t\t\t\tthis.offsetY += dy;\n\t\t\t\tthis.delayedRedraw();\n\t\t\t\t[this.dragX, this.dragY] = [x, y];\n\t\t\t}\n\t\t}\n\t}\n\tprotected keyPressed(event:KeyboardEvent):void\n\t{\n\t\t//let ch = String.fromCharCode(event.keyCode || event.charCode);\n\t\t//console.log('PRESSED['+ch+'] key='+event.keyCode+' chcode='+event.charCode);\n\t}\n\tprotected keyDown(event:KeyboardEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tif (this.callbackInteraction) this.callbackInteraction();\n\n\t\tif (!this.isReceivingCommands()) return;\n\n\t\tlet key = event.key;\n\t\t//console.log('DOWN: key='+key);\n\n\t\tif (!event.shiftKey && !event.ctrlKey && !event.altKey && !event.metaKey)\n\t\t{\n\t\t\tif (key == 'Enter')\n\t\t\t{\n\t\t\t\tif (this.selectedIndex >= 0) this.editDetails();\n\t\t\t}\n\t\t\telse if (key == 'Escape') {} // escape\n\t\t\telse if (key == 'ArrowLeft') this.navigateDirection('left');\n\t\t\telse if (key == 'ArrowRight') this.navigateDirection('right');\n\t\t\telse if (key == 'ArrowUp') this.navigateDirection('up');\n\t\t\telse if (key == 'ArrowDown') this.navigateDirection('down');\n\t\t\telse if (key == 'Tab') this.navigateDirection('tab');\n\t\t\telse return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t}\n\tprotected keyUp(event:KeyboardEvent):void\n\t{\n\t\t// !!\n\t}\n\tprotected mouseWheel(event:WheelEvent):void\n\t{\n\t\tif (this.callbackInteraction) this.callbackInteraction();\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet delta = Math.abs(event.deltaX) > Math.abs(event.deltaY) ? event.deltaX : event.deltaY;\n\t\tlet scale = 1 + Math.abs(delta) * 0.05;\n\t\tif (delta < 0) scale = 1.0 / scale;\n\n\t\tlet newScale = this.pointScale * scale;\n\t\tthis.offsetX = x - (newScale / this.pointScale) * (x - this.offsetX);\n\t\tthis.offsetY = y - (newScale / this.pointScale) * (y - this.offsetY);\n\t\t//if (this.layout) this.layout.scaleComponents(newScale / this.pointScale);\n\t\tthis.pointScale = newScale;\n\n\t\tthis.layout = null;\n\t\tthis.delayedRedraw();\n\t\tevent.preventDefault();\n\t}\n\tprotected contextMenu(event:MouseEvent):void\n\t{\n\t\t// nop\n\t}\n\n\t// given that the structure may have changed, see if any metadata is potentially invalidated - and ask the user; the component parameter\n\t// may be modified\n\tprotected checkStructureIntegrity(comp:MixfileComponent, newMol:Molecule):void\n\t{\n\t\tlet integKeys = Object.keys(this.structureIntegrity).filter((key) => (comp.identifiers && comp.identifiers[key]) || (comp.links && comp.links[key]));\n\t\tif (integKeys.length == 0) return;\n\n\t\tlet oldMol = comp.molfile ? MoleculeStream.readUnknown(comp.molfile) : null;\n\t\tif (MolUtil.isBlank(oldMol) && MolUtil.isBlank(newMol)) return;\n\t\tif (oldMol && newMol && CoordUtil.sketchMappable(oldMol, newMol)) return;\n\n\t\tlet msg = MolUtil.isBlank(newMol) ? 'Structure has been removed.' : 'Structure has changed.';\n\t\tmsg += `\\nThe following reference${integKeys.length == 1 ? '' : 's'} may have become stale:`;\n\t\tfor (let key of integKeys) msg += '\\n    ' + this.structureIntegrity[key];\n\t\tmsg += integKeys.length == 1 ? '\\nRemove this reference?' : '\\nRemove these references?';\n\t\tif (!confirm(msg)) return;\n\n\t\tfor (let key of integKeys)\n\t\t{\n\t\t\tif (comp.identifiers) delete comp.identifiers[key];\n\t\t\tif (comp.links) delete comp.links[key];\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {ClipboardProxy} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy} from 'webmolkit/ui/MenuProxy';\nimport {eventCoords} from 'webmolkit/util/util';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Menu as ElectronMenu, MenuItem as ElectronMenuItem, getCurrentWindow} from '@electron/remote';\nimport {InChIDelegate} from '../mixture/InChIDelegate';\nimport {EditMixture} from '../web/EditMixture';\n\n/*\n\tSpecialisation of the EditMixture class that tasks advantage of desktop (Electron) capabilities.\n*/\n\nexport class EditMixtureDesktop extends EditMixture\n{\n\tconstructor(inchi:InChIDelegate, proxyClip:ClipboardProxy, proxyMenu:MenuProxy)\n\t{\n\t\tsuper(inchi, proxyClip, proxyMenu);\n\t}\n\n\tprotected contextMenu(event:MouseEvent):void\n\t{\n\t\tif (this.callbackInteraction) this.callbackInteraction();\n\n\t\tevent.preventDefault();\n\t\tif (!this.isReceivingCommands()) return;\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet idx = this.pickComponent(x, y);\n\n\t\tthis.selectedIndex = idx;\n\t\tthis.activeIndex = -1;\n\t\tthis.delayedRedraw();\n\n\t\tlet menu = new ElectronMenu();\n\t\tif (idx >= 0)\n\t\t{\n\t\t\tlet comp = this.layout.components[idx].content, origin = this.layout.components[idx].origin;\n\t\t\tlet sel = ():void => this.selectComponent(idx);\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Edit Structure', click: () => {sel(); this.editStructure();}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Edit Details', click: () => {sel(); this.editDetails();}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Lookup Name', click: () => {sel(); this.lookupCurrent();}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Append', click: () => {sel(); this.appendToCurrent();}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Prepend', click: () => {sel(); this.prependBeforeCurrent();}}));\n\t\t\tif (origin.length > 0)\n\t\t\t{\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Insert Before', click: () => {sel(); this.insertBeforeCurrent();}}));\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Insert After', click: () => {sel(); this.insertAfterCurrent();}}));\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Delete', click: () => {this.selectComponent(idx); this.deleteCurrent();}}));\n\n\t\t\t\tif (origin[origin.length - 1] > 0)\n\t\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Move Up', click: () => {sel(); this.reorderCurrent(-1);}}));\n\t\t\t\tif (origin[origin.length - 1] < Vec.arrayLength(this.mixture.getParentComponent(origin).contents) - 1)\n\t\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Move Down', click: () => {sel(); this.reorderCurrent(1);}}));\n\t\t\t}\n\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Copy', click: () => {sel(); this.clipboardCopy(false);}}));\n\t\t\tif (Vec.arrayLength(comp.contents) > 0)\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Copy Branch', click: () => {sel(); this.clipboardCopy(false, true);}}));\n\t\t\tif (origin.length > 0)\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Cut', click: () => {sel(); this.clipboardCopy(true);}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Paste', click: () => {sel(); this.clipboardPaste();}}));\n\n\t\t\tif (Vec.notBlank(comp.contents))\n\t\t\t{\n\t\t\t\tlet label = this.layout.components[idx].isCollapsed ? 'Expand Branch' : 'Collapse Branch';\n\t\t\t\tmenu.append(new ElectronMenuItem({label: label, click: () => this.toggleCollapsed(idx)}));\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Zoom In', click: () => this.zoom(1.25)}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Zoom Out', click: () => this.zoom(0.8)}));\n\t\t}\n\n\t\tmenu.popup({window: getCurrentWindow()});\n\t}\n\n}\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {MainPanel} from './MainPanel';\nimport {MenuBanner, MenuBannerButton, MenuBannerCommand} from '../web/MenuBanner';\nimport {ClipboardProxy, ClipboardProxyHandler} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy} from 'webmolkit/ui/MenuProxy';\nimport {ExportSDFile} from '../mixture/ExportSDFile';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {Size} from 'webmolkit/util/Geom';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {DrawMixture} from '../mixture/DrawMixture';\nimport {ExportMInChI, MInChISegment} from '../mixture/ExportMInChI';\nimport {Dialog} from 'webmolkit/dialog/Dialog';\nimport {yieldDOM} from 'webmolkit/util/util';\nimport {Dialog as ElectronDialog, OpenDialogOptions, SaveDialogOptions, clipboard as electronClipboard, ipcRenderer} from 'electron';\nimport {dialog as electronDialog, getCurrentWindow} from '@electron/remote';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport {Mixture} from '../mixture/Mixture';\nimport {MIXFILE_VERSION} from '../mixture/Mixfile';\nimport {openNewWindow} from './startup';\nimport {InChI} from '../nodejs/InChI';\nimport {InChIDelegate} from '../mixture/InChIDelegate';\nimport {EditMixtureDesktop} from './EditMixtureDesktop';\n\n/*\n\tViewing/editing window: dedicated entirely to the sketching of a mixture.\n*/\n\nconst BANNER:MenuBannerButton[][] =\n[\n\t[\n\t\t{icon: 'CommandSave.svg', tip: 'Save', cmd: MenuBannerCommand.Save},\n\t],\n\t[\n\t\t{icon: 'CommandEdit.svg', tip: 'Edit component', cmd: MenuBannerCommand.EditDetails},\n\t\t{icon: 'CommandStructure.svg', tip: 'Edit structure', cmd: MenuBannerCommand.EditStructure},\n\t\t{icon: 'CommandLookup.svg', tip: 'Lookup compound', cmd: MenuBannerCommand.Lookup},\n\t\t{icon: 'CommandPicture.svg', tip: 'Export graphics', cmd: MenuBannerCommand.ExportSVG},\n\t],\n\t[\n\t\t{icon: 'CommandAppend.svg', tip: 'Append component to the right', cmd: MenuBannerCommand.Append},\n\t\t{icon: 'CommandPrepend.svg', tip: 'Prepend component to the left', cmd: MenuBannerCommand.Prepend},\n\t\t{icon: 'CommandInsertBefore.svg', tip: 'Insert component above', cmd: MenuBannerCommand.InsertBefore},\n\t\t{icon: 'CommandInsertAfter.svg', tip: 'Append component below', cmd: MenuBannerCommand.InsertAfter},\n\t\t{icon: 'CommandDelete.svg', tip: 'Delete', cmd: MenuBannerCommand.Delete},\n\t\t{icon: 'CommandMoveUp.svg', tip: 'Move Up', cmd: MenuBannerCommand.MoveUp},\n\t\t{icon: 'CommandMoveDown.svg', tip: 'Move Down', cmd: MenuBannerCommand.MoveDown},\n\t],\n\t[\n\t\t{icon: 'CommandUndo.svg', tip: 'Undo', cmd: MenuBannerCommand.Undo},\n\t\t{icon: 'CommandRedo.svg', tip: 'Redo', cmd: MenuBannerCommand.Redo},\n\t],\n\t[\n\t\t{icon: 'CommandCopy.svg', tip: 'Copy', cmd: MenuBannerCommand.Copy},\n\t\t{icon: 'CommandCut.svg', tip: 'Cut', cmd: MenuBannerCommand.Cut},\n\t\t{icon: 'CommandPaste.svg', tip: 'Paste', cmd: MenuBannerCommand.Paste},\n\t],\n\t[\n\t\t{icon: 'CommandZoomNormal.svg', tip: 'Zoom full', cmd: MenuBannerCommand.ZoomFull},\n\t\t{icon: 'CommandZoomIn.svg', tip: 'Zoom in', cmd: MenuBannerCommand.ZoomIn},\n\t\t{icon: 'CommandZoomOut.svg', tip: 'Zoom out', cmd: MenuBannerCommand.ZoomOut},\n\t],\n];\n\nexport class MixturePanel extends MainPanel\n{\n\tprivate filename:string = null;\n\tprivate banner:MenuBanner;\n\tprivate editor:EditMixtureDesktop;\n\n\t// ------------ public methods ------------\n\n\tconstructor(root:DOM, private proxyClip:ClipboardProxy, private proxyMenu:MenuProxy)\n\t{\n\t\tsuper(root);\n\n\t\tthis.banner = new MenuBanner(BANNER, (cmd:MenuBannerCommand) => this.menuAction(cmd));\n\n\t\tthis.editor = new EditMixtureDesktop(this.inchi, this.proxyClip, this.proxyMenu);\n\t\tthis.editor.callbackUpdateTitle = () => this.updateTitle();\n\n\t\tlet divFlex = dom('<div/>').appendTo(root).css({'display': 'flex'});\n\t\tdivFlex.css({'flex-direction': 'column', 'width': '100%', 'height': '100%'});\n\t\tlet divBanner = dom('<div/>').appendTo(divFlex).css({'flex-grow': '0'});\n\t\tlet divEditor = dom('<div/>').appendTo(divFlex).css({'flex-grow': '1'});\n\n\t\tthis.banner.render(divBanner);\n\t\tthis.editor.render(divEditor);\n\n\t\tthis.banner.callbackRefocus = () => this.editor.refocus();\n\t}\n\n\tpublic setMixture(mixture:Mixture):void\n\t{\n\t\tthis.editor.clearHistory();\n\t\tthis.editor.setMixture(mixture, true, false);\n\t\tthis.editor.setDirty(false);\n\t}\n\n\tpublic loadFile(filename:string):void\n\t{\n\t\tif (!filename)\n\t\t{\n\t\t\tthis.editor.clearHistory();\n\t\t\tthis.editor.setMixture(new Mixture(), true, true);\n\t\t\tthis.updateTitle();\n\t\t\tthis.filename = null;\n\t\t\treturn;\n\t\t}\n\n\t\tfs.readFile(filename, 'utf-8', (err:any, data:string):void =>\n\t\t{\n\t\t\tif (err) throw err;\n\n\t\t\tlet mixture:Mixture;\n\t\t\ttry {mixture = Mixture.deserialise(data);}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tconsole.log('Invalid mixture file: ' + e + '\\n' + data);\n\t\t\t\talert('Not a valid mixture file.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmixture.mixfile.mixfileVersion = MIXFILE_VERSION; // as good a time as any to set latest version\n\n\t\t\tthis.editor.clearHistory();\n\t\t\tthis.editor.setMixture(mixture, true, false);\n\t\t\tthis.editor.setDirty(false);\n\t\t\tthis.filename = filename;\n\t\t\tthis.updateTitle();\n\t\t});\n\t}\n\n\tpublic saveFile(filename:string):void\n\t{\n\t\tlet mixture = this.editor.getMixture();\n\t\tlet content = mixture.serialise();\n\n\t\tfs.writeFile(filename, content, (err:any):void =>\n\t\t{\n\t\t\tif (err) alert('Unable to save: ' + err);\n\t\t});\n\t}\n\n\tprotected onResize():void\n\t{\n\t\tsuper.onResize();\n\t\tthis.editor.delayedRedraw();\n\n\t\t//let w = document.documentElement.clientWidth, h = document.documentElement.clientHeight;\n\t\t//this.sketcher.changeSize(w, h); // force a re-layout to match the new size\n\t}\n\n\tpublic menuAction(cmd:MenuBannerCommand):void\n\t{\n\t\tlet dlg = this.editor.compoundEditor();\n\t\tif (dlg)\n\t\t{\n\t\t\tif (cmd == MenuBannerCommand.Cut) dlg.actionCut();\n\t\t\telse if (cmd == MenuBannerCommand.Copy) dlg.actionCopy();\n\t\t\telse if (cmd == MenuBannerCommand.Paste) dlg.actionPaste();\n\t\t\telse if (cmd == MenuBannerCommand.Undo) dlg.actionUndo();\n\t\t\telse if (cmd == MenuBannerCommand.Redo) dlg.actionRedo();\n\t\t\treturn;\n\t\t}\n\t\tif (!this.editor.isReceivingCommands())\n\t\t{\n\t\t\t// certain common menu/shortcut commands are passed through to standard behaviour, the rest are stopped\n\t\t\tif ([MenuBannerCommand.Cut, MenuBannerCommand.Copy, MenuBannerCommand.Paste,\n\t\t\t\t MenuBannerCommand.Undo, MenuBannerCommand.Redo].indexOf(cmd) >= 0) document.execCommand(cmd);\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.menuAction(cmd);\n\t}\n\n\tpublic customMenuAction(cmd:MenuBannerCommand):void\n\t{\n\t\tif (cmd == MenuBannerCommand.ExportSDF) this.actionExportSDF();\n\t\telse if (cmd == MenuBannerCommand.ExportSVG) this.actionFileExportSVG();\n\t\telse if (cmd == MenuBannerCommand.CreateMInChI) this.actionFileCreateMInChI();\n\t\telse if (cmd == MenuBannerCommand.Undo) this.editor.performUndo();\n\t\telse if (cmd == MenuBannerCommand.Redo) this.editor.performRedo();\n\t\telse if (cmd == MenuBannerCommand.Cut) this.editor.clipboardCopy(true);\n\t\telse if (cmd == MenuBannerCommand.Copy) this.editor.clipboardCopy(false);\n\t\telse if (cmd == MenuBannerCommand.CopyBranch) this.editor.clipboardCopy(false, true);\n\t\telse if (cmd == MenuBannerCommand.Paste) this.editor.clipboardPaste();\n\t\telse if (cmd == MenuBannerCommand.EditStructure) this.editor.editStructure();\n\t\telse if (cmd == MenuBannerCommand.EditDetails) this.editor.editDetails();\n\t\telse if (cmd == MenuBannerCommand.Lookup) this.editor.lookupCurrent();\n\t\telse if (cmd == MenuBannerCommand.Delete) this.editor.deleteCurrent();\n\t\telse if (cmd == MenuBannerCommand.Append) this.editor.appendToCurrent();\n\t\telse if (cmd == MenuBannerCommand.Prepend) this.editor.prependBeforeCurrent();\n\t\telse if (cmd == MenuBannerCommand.InsertBefore) this.editor.insertBeforeCurrent();\n\t\telse if (cmd == MenuBannerCommand.InsertAfter) this.editor.insertAfterCurrent();\n\t\telse if (cmd == MenuBannerCommand.MoveUp) this.editor.reorderCurrent(-1);\n\t\telse if (cmd == MenuBannerCommand.MoveDown) this.editor.reorderCurrent(1);\n\t\telse if (cmd == MenuBannerCommand.ZoomFull) this.editor.zoomFull();\n\t\telse if (cmd == MenuBannerCommand.ZoomNormal) this.editor.zoomNormal();\n\t\telse if (cmd == MenuBannerCommand.ZoomIn) this.editor.zoom(1.25);\n\t\telse if (cmd == MenuBannerCommand.ZoomOut) this.editor.zoom(0.8);\n\t\telse super.customMenuAction(cmd);\n\t}\n\n\t// ------------ private methods ------------\n\n\tprotected actionFileOpen():void\n\t{\n\t\tlet filedir = this.filename && this.filename.indexOf(path.sep) ? this.filename.substring(0, this.filename.lastIndexOf(path.sep)) : undefined;\n\t\tlet params:OpenDialogOptions =\n\t\t{\n\t\t\ttitle: 'Open Mixture',\n\t\t\tproperties: ['openFile'],\n\t\t\tdefaultPath: filedir,\n\t\t\tfilters:\n\t\t\t[\n\t\t\t\t{name: 'Mixfile', extensions: ['mixfile']},\n\t\t\t\t{name: 'Mixfile Collection', extensions: ['json']},\n\t\t\t]\n\t\t};\n\t\telectronDialog.showOpenDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tlet inPlace = this.editor.getMixture().isEmpty();\n\t\t\tfor (let fn of value.filePaths)\n\t\t\t{\n\t\t\t\tif (inPlace && fn.endsWith('.mixfile'))\n\t\t\t\t{\n\t\t\t\t\tthis.loadFile(fn);\n\t\t\t\t\tinPlace = false;\n\t\t\t\t}\n\t\t\t\telse if (fn.endsWith('.json'))\n\t\t\t\t\topenNewWindow('CollectionPanel', fn);\n\t\t\t\telse\n\t\t\t\t\topenNewWindow('MixturePanel', fn);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected actionFileSave():void\n\t{\n\t\tif (this.editor.isBlank()) return;\n\t\tif (!this.filename) {this.actionFileSaveAs(); return;}\n\n\t\tthis.saveFile(this.filename);\n\t\tthis.editor.setDirty(false);\n\t\tthis.updateTitle();\n\t}\n\n\tprotected actionFileSaveAs():void\n\t{\n\t\tif (this.editor.isBlank()) return;\n\n\t\tlet params:SaveDialogOptions =\n\t\t{\n\t\t\ttitle: 'Save Mixfile',\n\t\t\t//defaultPath...\n\t\t\tfilters:\n\t\t\t[\n\t\t\t\t{name: 'Mixfile', extensions: ['mixfile']}\n\t\t\t]\n\t\t};\n\t\telectronDialog.showSaveDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tthis.saveFile(value.filePath);\n\t\t\tthis.filename = value.filePath;\n\t\t\tthis.editor.setDirty(false);\n\t\t\tthis.updateTitle();\n\t\t});\n\t}\n\n\tprivate actionExportSDF():void\n\t{\n\t\tlet mixture = this.editor.getMixture();\n\t\tif (mixture.isEmpty()) return;\n\n\t\tlet exportSDF = new ExportSDFile();\n\t\texportSDF.append(mixture.mixfile);\n\t\tlet sdfile = exportSDF.write();\n\n\t\tlet defPath = this.filename;\n\t\tif (defPath)\n\t\t{\n\t\t\tlet lastDot = defPath.lastIndexOf('.');\n\t\t\tif (lastDot > 0 && lastDot > defPath.lastIndexOf('/') && lastDot > defPath.lastIndexOf('\\\\')) defPath = defPath.substring(0, lastDot);\n\t\t\tdefPath += '.sdf';\n\t\t}\n\t\telse defPath = undefined;\n\n\t\tlet params:SaveDialogOptions =\n\t\t{\n\t\t\ttitle: 'Export as SDfile',\n\t\t\tdefaultPath: defPath,\n\t\t\tfilters:\n\t\t\t[\n\t\t\t\t{name: 'SDfile', extensions: ['sdf']}\n\t\t\t]\n\t\t};\n\t\tif (this.filename && this.filename.endsWith('.mixfile'))\n\t\t\tparams.defaultPath = (this.filename.substring(0, this.filename.length - 8) + '.sdf').split(/[\\/\\\\]/).pop();\n\n\t\telectronDialog.showSaveDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tfs.writeFile(value.filePath, sdfile, (err:any):void =>\n\t\t\t{\n\t\t\t\tif (err) alert('Unable to save: ' + err);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate actionFileExportSVG():void\n\t{\n\t\tlet defPath = this.filename;\n\t\tif (defPath)\n\t\t{\n\t\t\tlet lastDot = defPath.lastIndexOf('.');\n\t\t\tif (lastDot > 0 && lastDot > defPath.lastIndexOf('/') && lastDot > defPath.lastIndexOf('\\\\')) defPath = defPath.substring(0, lastDot);\n\t\t\tdefPath += '.svg';\n\t\t}\n\t\telse defPath = undefined;\n\n\t\tlet params:SaveDialogOptions =\n\t\t{\n\t\t\t'title': 'Save SVG Diagram',\n\t\t\t'defaultPath': defPath,\n\t\t\t'filters':\n\t\t\t[\n\t\t\t\t{'name': 'Scalable Vector Graphics', 'extensions': ['svg']}\n\t\t\t]\n\t\t};\n\t\telectronDialog.showSaveDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tlet policy = RenderPolicy.defaultColourOnWhite();\n\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\tlet layout = new ArrangeMixture(this.editor.getMixture(), measure, policy);\n\t\t\tlayout.collapsedBranches = this.editor.getCollapsedBranches();\n\t\t\t// TODO: decide whether to pack the branches...\n\t\t\tlayout.packBranches = new Size(0.8 * this.editor.contentDOM.width(), 0.8 * this.editor.contentDOM.height());\n\t\t\tlayout.arrange();\n\n\t\t\tlet gfx = new MetaVector();\n\t\t\tnew DrawMixture(layout, gfx).draw();\n\t\t\tgfx.normalise();\n\t\t\tlet svg = gfx.createSVG(true, true);\n\n\t\t\tfs.writeFile(value.filePath, svg, (err:any):void =>\n\t\t\t{\n\t\t\t\tif (err) alert('Unable to save: ' + err);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate actionFileCreateMInChI():void\n\t{\n\t\tif (!InChI.isAvailable())\n\t\t{\n\t\t\talert('InChI executable has not been configured. Specify with --inchi parameter.');\n\t\t\treturn;\n\t\t}\n\n\t\tlet maker = new ExportMInChI(this.editor.getMixture().mixfile, this.inchi);\n\t\tlet self = this;\n\t\tclass MInChIDialog extends Dialog\n\t\t{\n\t\t\tconstructor()\n\t\t\t{\n\t\t\t\tsuper();\n\t\t\t\tthis.title = 'MInChI';\n\t\t\t}\n\t\t\tprotected populate():void\n\t\t\t{\n\t\t\t\tself.proxyClip.pushHandler(new ClipboardProxyHandler());\n\t\t\t\tthis.bodyDOM().setText('Calculating...');\n\t\t\t\t(async () => await this.renderResult())();\n\t\t\t}\n\t\t\tpublic close():void\n\t\t\t{\n\t\t\t\tself.proxyClip.popHandler();\n\t\t\t\tsuper.close();\n\t\t\t}\n\t\t\tprivate async renderResult():Promise<void>\n\t\t\t{\n\t\t\t\tawait yieldDOM();\n\t\t\t\tawait maker.fillInChI();\n\t\t\t\tmaker.formulate();\n\n\t\t\t\tlet body = this.bodyDOM();\n\t\t\t\tbody.empty();\n\n\t\t\t\tlet divOuter = dom('<div/>').appendTo(body);\n\t\t\t\tlet pre = dom('<span/>').appendTo(divOuter).css({'font-family': 'monospace', 'padding-top': '0.5em', 'word-break': 'break-all'});\n\t\t\t\tlet minchi = maker.getResult(), segment = maker.getSegment();\n\t\t\t\tfor (let n = 0; n < minchi.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet span = dom('<span/>').appendTo(pre);\n\t\t\t\t\tspan.setText(minchi[n]);\n\t\t\t\t\tif (segment[n] == MInChISegment.Header) span.setCSS('background-color', '#FFC0C0');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Component) span.setCSS('background-color', '#C0C0FF');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Hierarchy) span.setCSS('background-color', '#E0E080');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Concentration) span.setCSS('background-color', '#80E080');\n\t\t\t\t\tpre.appendHTML('<wbr/>');\n\t\t\t\t}\n\n\t\t\t\tlet btnCopy = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\">Copy</button>').appendTo(divOuter).css({'margin-left': '0.5em'});\n\t\t\t\tbtnCopy.onClick(() => self.proxyClip.setString(minchi));\n\t\t\t}\n\t\t}\n\t\tnew MInChIDialog().open();\n\t}\n\n\tprivate updateTitle():void\n\t{\n\t\tif (this.filename == null) {document.title = 'Mixtures'; return;}\n\n\t\tlet slash = Math.max(this.filename.lastIndexOf('/'), this.filename.lastIndexOf('\\\\'));\n\t\tlet title = 'Mixtures - ' + this.filename.substring(slash + 1);\n\t\tif (this.editor.isDirty() && !this.editor.isBlank()) title += '*';\n\t\tdocument.title = title;\n\t}\n}\n\n","import { dom } from '../util/dom';\nimport { eventCoords, setBoundaryPixels } from '../util/util';\nimport { Popup } from './Popup';\nexport class MenuProxy {\n    hasContextMenu() { return false; }\n    openContextMenu(menuItems, event, opt) { }\n}\nexport class MenuProxyWeb extends MenuProxy {\n    hasContextMenu() { return true; }\n    openContextMenu(menuItems, event, opt) {\n        let [x, y] = eventCoords(event, document.body);\n        let divCursor = dom('<div/>').appendTo(document.body).css({ 'position': 'absolute', 'user-select': 'none' });\n        setBoundaryPixels(divCursor, x - 5, y - 5, 10, 10);\n        let currentFocus = dom(document.activeElement);\n        let popup = new Popup(divCursor);\n        if ((opt === null || opt === void 0 ? void 0 : opt.overrideObscureOpacity) != null)\n            popup.obscureOpacity = opt === null || opt === void 0 ? void 0 : opt.overrideObscureOpacity;\n        popup.callbackPopulate = () => {\n            popup.bodyDOM().css({ 'user-select': 'none', 'font-size': '16px' });\n            for (let menuItem of menuItems) {\n                let div = dom('<div/>').appendTo(popup.bodyDOM());\n                if (menuItem == null) {\n                    div.appendHTML('<hr/>');\n                }\n                else if (menuItem.subMenu) {\n                    div.setText(menuItem.label + ' \\u{25B8}');\n                    div.css({ 'cursor': 'pointer' });\n                    let fcn = (event) => {\n                        event.preventDefault();\n                        popup.close();\n                        this.openContextMenu(menuItem.subMenu, event);\n                    };\n                    div.onClick(fcn);\n                    div.onContextMenu(fcn);\n                }\n                else if (menuItem.click) {\n                    div.setText(menuItem.label);\n                    div.onMouseEnter(() => { div.css({ 'background-color': '#D0D0D0' }); });\n                    div.onMouseLeave(() => { div.css({ 'background-color': 'transparent' }); });\n                    div.css({ 'cursor': 'pointer' });\n                    div.onClick(() => {\n                        popup.close();\n                        menuItem.click();\n                    });\n                }\n                else {\n                    div.css({ 'color': '#808080' });\n                    div.setText(menuItem.label);\n                }\n            }\n        };\n        popup.callbackClose = () => {\n            divCursor.remove();\n            currentFocus.grabFocus();\n            if (opt === null || opt === void 0 ? void 0 : opt.callbackClose)\n                opt === null || opt === void 0 ? void 0 : opt.callbackClose();\n        };\n        popup.open();\n    }\n}\n//# sourceMappingURL=MenuProxy.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"process\");","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Mixfile} from './Mixfile';\nimport {Mixture} from './Mixture';\n\n/*\n\tCollection of mixtures: convenience methods for handling an array thereof, including serialisation.\n\n\tMost of the methods that fetch or modify the mixture content one item at a time make deep clones, so it is safe to\n\tassume that there are no dangling pointers. Exceptions include the constructor, bulk modifications, and methods marked\n\tas providing direct access.\n*/\n\nexport class MixtureCollection\n{\n\tprivate mixtures:Mixture[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor(mixtures?:Mixture[])\n\t{\n\t\tif (mixtures) this.mixtures = mixtures.slice(0);\n\t}\n\n\tpublic get count():number\n\t{\n\t\treturn this.mixtures.length;\n\t}\n\tpublic getMixture(idx:number):Mixture\n\t{\n\t\treturn this.mixtures[idx].clone();\n\t}\n\tpublic getMixtureDirect(idx:number):Mixture\n\t{\n\t\treturn this.mixtures[idx];\n\t}\n\tpublic setMixture(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures[idx] = mixture.clone();\n\t}\n\tpublic setMixtureDirect(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures[idx] = mixture;\n\t}\n\tpublic deleteMixture(idx:number):void\n\t{\n\t\tthis.mixtures.splice(idx, 1);\n\t}\n\tpublic appendMixture(mixture:Mixture):number\n\t{\n\t\tthis.mixtures.push(mixture.clone());\n\t\treturn this.mixtures.length - 1;\n\t}\n\tpublic appendMixtureDirect(mixture:Mixture):number\n\t{\n\t\tthis.mixtures.push(mixture);\n\t\treturn this.mixtures.length - 1;\n\t}\n\tpublic appendCollection(collection:MixtureCollection):void\n\t{\n\t\tthis.mixtures = this.mixtures.concat(collection.mixtures);\n\t}\n\tpublic insertMixture(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures.splice(idx, 0, mixture.clone());\n\t}\n\tpublic swapMixtures(idx1:number, idx2:number):void\n\t{\n\t\tlet [m1, m2] = [this.mixtures[idx1], this.mixtures[idx2]];\n\t\tthis.mixtures[idx1] = m2;\n\t\tthis.mixtures[idx2] = m1;\n\t}\n\n\t// unpacks a string into a mixture; throws an exception if anything went wrong\n\tpublic static deserialise(data:string):MixtureCollection\n\t{\n\t\tlet list = JSON.parse(data);\n\t\tif (!Array.isArray(list)) throw 'Input content is not a JSON array.';\n\t\tlet mixtures:Mixture[] = [];\n\t\tfor (let mixfile of list) mixtures.push(new Mixture(mixfile));\n\t\treturn new MixtureCollection(mixtures);\n\t}\n\n\t// converts the entire underlying JSON mixfile into a prettyprinted string; note the optional beautification parameter:\n\t// if not specified, small collections will get nice whitespace, whereas large ones will be densely packed for efficiency\n\tpublic serialise(beautify?:boolean):string\n\t{\n\t\tlet list:Mixfile[] = [];\n\t\tfor (let mixture of this.mixtures) list.push(mixture.mixfile);\n\t\t//return beautify || list.length <= 1000 ? Mixture.beautify(list) : JSON.stringify(list);\n\t\tif (beautify || list.length <= 100) return Mixture.beautify(list);\n\t\t\n\t\tlet lines = list.map((mixfile) => JSON.stringify(mixfile));\n\t\treturn '[\\n    ' + lines.join(',\\n    ') + '\\n]\\n';\n\t}\n\n\t// ------------ private methods ------------\n\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {MenuBanner, MenuBannerButton, MenuBannerCommand} from '../web/MenuBanner';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {ClipboardProxy} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy} from 'webmolkit/ui/MenuProxy';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {MetaVector, TextAlign} from 'webmolkit/gfx/MetaVector';\nimport {DrawMixture} from '../mixture/DrawMixture';\nimport {FontData} from 'webmolkit/gfx/FontData';\nimport * as fs from 'fs';\nimport {OpenDialogOptions, SaveDialogOptions} from 'electron';\nimport {dialog as electronDialog} from '@electron/remote';\nimport {MixtureCollection} from '../mixture/MixtureCollection';\nimport {Mixture} from '../mixture/Mixture';\nimport {MainPanel} from './MainPanel';\nimport {openNewWindow} from './startup';\nimport {EditMixtureDesktop} from './EditMixtureDesktop';\n\n/*\n\tBrowsing/editing a collection of mixtures.\n*/\n\nconst BANNER:MenuBannerButton[][] =\n[\n\t[\n\t\t{icon: 'CommandSave.svg', tip: 'Save', cmd: MenuBannerCommand.Save},\n\t],\n\t[\n\t\t{icon: 'CommandEdit.svg', tip: 'Edit component', cmd: MenuBannerCommand.EditDetails},\n\t\t{icon: 'CommandStructure.svg', tip: 'Edit structure', cmd: MenuBannerCommand.EditStructure},\n\t\t{icon: 'CommandLookup.svg', tip: 'Lookup compound', cmd: MenuBannerCommand.Lookup},\n\t\t{icon: 'CommandPicture.svg', tip: 'Export graphics', cmd: MenuBannerCommand.ExportSVG},\n\t],\n\t[\n\t\t{icon: 'CommandAppend.svg', tip: 'Append component', cmd: MenuBannerCommand.Append},\n\t\t{icon: 'CommandPrepend.svg', tip: 'Prepend component', cmd: MenuBannerCommand.Prepend},\n\t\t{icon: 'CommandDelete.svg', tip: 'Delete', cmd: MenuBannerCommand.Delete},\n\t\t{icon: 'CommandMoveUp.svg', tip: 'Move Up', cmd: MenuBannerCommand.MoveUp},\n\t\t{icon: 'CommandMoveDown.svg', tip: 'Move Down', cmd: MenuBannerCommand.MoveDown},\n\t],\n\t[\n\t\t{icon: 'CommandUndo.svg', tip: 'Undo', cmd: MenuBannerCommand.Undo},\n\t\t{icon: 'CommandRedo.svg', tip: 'Redo', cmd: MenuBannerCommand.Redo},\n\t],\n\t[\n\t\t{icon: 'CommandCopy.svg', tip: 'Copy', cmd: MenuBannerCommand.Copy},\n\t\t{icon: 'CommandCut.svg', tip: 'Cut', cmd: MenuBannerCommand.Cut},\n\t\t{icon: 'CommandPaste.svg', tip: 'Paste', cmd: MenuBannerCommand.Paste},\n\t],\n\t[\n\t\t{icon: 'CommandViewDetail.svg', tip: 'Detail', cmd: MenuBannerCommand.ViewDetail},\n\t\t{icon: 'CommandViewCard.svg', tip: 'Cards', cmd: MenuBannerCommand.ViewCard},\n\t\t{icon: 'CommandZoomNormal.svg', tip: 'Zoom full', cmd: MenuBannerCommand.ZoomFull},\n\t\t{icon: 'CommandZoomIn.svg', tip: 'Zoom in', cmd: MenuBannerCommand.ZoomIn},\n\t\t{icon: 'CommandZoomOut.svg', tip: 'Zoom out', cmd: MenuBannerCommand.ZoomOut},\n\t],\n];\n\nenum CollectionPanelView\n{\n\tDetail,\n\tCard,\n}\n\nconst BG_NORMAL = '#E0E0E0';\nconst BG_SELECTED = '#B9CBFF';\nconst PAGE_SIZE = 100;\n\nexport class CollectionPanel extends MainPanel\n{\n\tprivate filename:string = null;\n\tprivate collection = new MixtureCollection();\n\tprivate curPage = 0;\n\tprivate pageBlock:number[][] = [];\n\tprivate isDirty = false;\n\n\tprivate banner:MenuBanner;\n\tprivate divMain:DOM;\n\tprivate divFooter:DOM;\n\tprivate policy = RenderPolicy.defaultColourOnWhite(20);\n\tprivate viewType = CollectionPanelView.Detail;\n\n\tprivate selected = -1;\n\tprivate mapMixDiv = new Map<number, DOM>(); // index-in-collection to rendered div\n\tprivate editor:EditMixtureDesktop = null; // when defined, refers to collection{selected}\n\n\t// ------------ public methods ------------\n\n\tconstructor(root:DOM, private proxyClip:ClipboardProxy, private proxyMenu:MenuProxy)\n\t{\n\t\tsuper(root);\n\n\t\tthis.banner = new MenuBanner(BANNER, (cmd:MenuBannerCommand) => this.menuAction(cmd));\n\n\t\tlet divFlex = dom('<div/>').appendTo(root).css({'display': 'flex'});\n\t\tdivFlex.css({'flex-direction': 'column', 'width': '100%', 'height': '100%'});\n\t\tlet divBanner = dom('<div/>').appendTo(divFlex).css({'flex-grow': '0'});\n\t\tthis.divMain = dom('<div/>').appendTo(divFlex).css({'flex-grow': '1', 'overflow-y': 'scroll'});\n\t\tthis.divFooter = dom('<div/>').appendTo(divFlex).css({'flex-grow': '0'});\n\n\t\tthis.banner.render(divBanner);\n\t\tthis.dividePages();\n\t\tthis.renderMain();\n\n\t\tthis.updateBanner();\n\t}\n\n\tpublic setCollection(collection:MixtureCollection):void\n\t{\n\t\tthis.collection = collection;\n\t\tthis.dividePages();\n\t\tthis.renderMain();\n\t}\n\n\tpublic loadFile(filename:string):void\n\t{\n\t\tif (!filename)\n\t\t{\n\t\t\tthis.setCollection(new MixtureCollection());\n\t\t\treturn;\n\t\t}\n\t\t/*if (!filename)\n\t\t{\n\t\t\tthis.editor.clearHistory();\n\t\t\tthis.editor.setMixture(new Mixture(), true, true);\n\t\t\tthis.updateTitle();\n\t\t\tthis.filename = null;\n\t\t\tthis.isDirty = false;\n\t\t\treturn;\n\t\t}*/\n\n\t\tfs.readFile(filename, 'utf-8', (err:any, data:string):void =>\n\t\t{\n\t\t\tif (err) throw err;\n\n\t\t\tlet collection:MixtureCollection;\n\t\t\ttry {collection = MixtureCollection.deserialise(data);}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tconsole.log('Invalid mixture collection file: ' + e + '\\n' + data);\n\t\t\t\talert('Not a valid mixture collection file.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.setCollection(collection);\n\t\t\tthis.filename = filename;\n\t\t\tthis.isDirty = false;\n\t\t\tthis.updateTitle();\n\t\t});\n\t}\n\n\tpublic menuAction(cmd:MenuBannerCommand):void\n\t{\n\t\tif (this.editor)\n\t\t{\n\t\t\tlet dlg = this.editor.compoundEditor();\n\t\t\tif (dlg)\n\t\t\t{\n\t\t\t\tif (cmd == MenuBannerCommand.Cut) dlg.actionCut();\n\t\t\t\telse if (cmd == MenuBannerCommand.Copy) dlg.actionCopy();\n\t\t\t\telse if (cmd == MenuBannerCommand.Paste) dlg.actionPaste();\n\t\t\t\telse if (cmd == MenuBannerCommand.Undo) dlg.actionUndo();\n\t\t\t\telse if (cmd == MenuBannerCommand.Redo) dlg.actionRedo();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this.editor.isReceivingCommands())\n\t\t\t{\n\t\t\t\t// certain common menu/shortcut commands are passed through to standard behaviour, the rest are stopped\n\t\t\t\tif ([MenuBannerCommand.Cut, MenuBannerCommand.Copy, MenuBannerCommand.Paste,\n\t\t\t\t\tMenuBannerCommand.Undo, MenuBannerCommand.Redo].indexOf(cmd) >= 0) document.execCommand(cmd);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tsuper.menuAction(cmd);\n\t}\n\n\tpublic customMenuAction(cmd:MenuBannerCommand):void\n\t{\n\t\tif (this.editor)\n\t\t{\n\t\t\t/* !! if (cmd == MenuBannerCommand.ExportSDF) this.actionExportSDF();\n\t\t\telse if (cmd == MenuBannerCommand.ExportSVG) this.actionFileExportSVG();\n\t\t\telse if (cmd == MenuBannerCommand.CreateMInChI) this.actionFileCreateMInChI();\n\t\t\telse*/ if (cmd == MenuBannerCommand.Undo) this.editor.performUndo();\n\t\t\telse if (cmd == MenuBannerCommand.Redo) this.editor.performRedo();\n\t\t\telse if (cmd == MenuBannerCommand.Cut) this.editor.clipboardCopy(true);\n\t\t\telse if (cmd == MenuBannerCommand.Copy) this.editor.clipboardCopy(false);\n\t\t\telse if (cmd == MenuBannerCommand.CopyBranch) this.editor.clipboardCopy(false, true);\n\t\t\telse if (cmd == MenuBannerCommand.Paste) this.editor.clipboardPaste();\n\t\t\telse if (cmd == MenuBannerCommand.EditStructure) this.editor.editStructure();\n\t\t\telse if (cmd == MenuBannerCommand.EditDetails) this.editor.editDetails();\n\t\t\telse if (cmd == MenuBannerCommand.Lookup) this.editor.lookupCurrent();\n\t\t\telse if (cmd == MenuBannerCommand.Delete) this.editor.deleteCurrent();\n\t\t\telse if (cmd == MenuBannerCommand.Append) this.editor.appendToCurrent();\n\t\t\telse if (cmd == MenuBannerCommand.Prepend) this.editor.prependBeforeCurrent();\n\t\t\telse if (cmd == MenuBannerCommand.MoveUp) this.editor.reorderCurrent(-1);\n\t\t\telse if (cmd == MenuBannerCommand.MoveDown) this.editor.reorderCurrent(1);\n\t\t\telse if (cmd == MenuBannerCommand.ZoomFull) this.editor.zoomFull();\n\t\t\telse if (cmd == MenuBannerCommand.ZoomNormal) this.editor.zoomFull(); // (same as full)\n\t\t\telse if (cmd == MenuBannerCommand.ZoomIn) this.editor.zoom(1.25);\n\t\t\telse if (cmd == MenuBannerCommand.ZoomOut) this.editor.zoom(0.8);\n\t\t\telse super.customMenuAction(cmd);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/*if (cmd == MenuBannerCommand.ExportSDF) this.actionExportSDF();\n\t\t\telse if (cmd == MenuBannerCommand.ExportSVG) this.actionFileExportSVG();\n\t\t\telse if (cmd == MenuBannerCommand.CreateMInChI) this.actionFileCreateMInChI();\n\t\t\telse*/ if (cmd == MenuBannerCommand.Cut) this.clipboardCopy(true);\n\t\t\telse if (cmd == MenuBannerCommand.Copy) this.clipboardCopy(false);\n\t\t\telse if (cmd == MenuBannerCommand.Paste) this.clipboardPaste();\n\t\t\telse if (cmd == MenuBannerCommand.EditDetails) this.editMixture();\n\t\t\telse if (cmd == MenuBannerCommand.Delete) this.deleteMixture();\n\t\t\telse if (cmd == MenuBannerCommand.Append) this.appendMixture();\n\t\t\telse if (cmd == MenuBannerCommand.Prepend) this.prependMixture();\n\t\t\telse if (cmd == MenuBannerCommand.MoveUp) this.reorderCurrent(-1);\n\t\t\telse if (cmd == MenuBannerCommand.MoveDown) this.reorderCurrent(1);\n\t\t\telse if (cmd == MenuBannerCommand.ZoomFull) this.zoomScale();\n\t\t\telse if (cmd == MenuBannerCommand.ZoomIn) this.zoomScale(1.25);\n\t\t\telse if (cmd == MenuBannerCommand.ZoomOut) this.zoomScale(0.8);\n\t\t\telse if (cmd == MenuBannerCommand.ViewDetail) this.changeView(cmd);\n\t\t\telse if (cmd == MenuBannerCommand.ViewCard) this.changeView(cmd);\n\t\t\telse super.customMenuAction(cmd);\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate renderMain():void\n\t{\n\t\tthis.divMain.empty();\n\t\tthis.divFooter.empty();\n\n\t\tthis.selected = -1;\n\t\tthis.mapMixDiv.clear();\n\n\t\tlet divContent = dom('<div/>').appendTo(this.divMain);\n\n\t\tif (this.viewType == CollectionPanelView.Card)\n\t\t{\n\t\t\tdivContent.css({'display': 'flex', 'flex-wrap': 'wrap'});\n\t\t\tdivContent.css({'justify-content': 'flex-start', 'align-items': 'flex-start'});\n\t\t}\n\n\t\t//for (let n = 0; n < this.collection.count; n++)\n\t\tfor (let idx of this.pageBlock[this.curPage])\n\t\t{\n\t\t\tlet div = this.createMixture(idx, this.collection.getMixture(idx)).appendTo(divContent);\n\t\t\tdiv.onClick(() => this.changeSelection(idx));\n\t\t\tdiv.onDblClick(() => this.editMixture());\n\t\t\tthis.mapMixDiv.set(idx, div);\n\t\t}\n\n\t\tlet npage = this.pageBlock.length;\n\t\tif (npage > 1)\n\t\t{\n\t\t\tthis.divFooter.css({'text-align': 'center', 'border-top': '1px solid #808080', 'background-color': 'white'});\n\n\t\t\tif (this.curPage > 0)\n\t\t\t{\n\t\t\t\tlet ahref = dom('<a/>').appendTo(this.divFooter).attr({'href': '#'});\n\t\t\t\tahref.setText('Previous');\n\t\t\t\tahref.onClick((event) =>\n\t\t\t\t{\n\t\t\t\t\tthis.curPage--;\n\t\t\t\t\tthis.renderMain();\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet showPages:number[] = [];\n\t\t\tfor (let n = Math.max(0, this.curPage - 5); n <= Math.min(npage - 1, this.curPage + 5); n++) showPages.push(n);\n\t\t\tif (Vec.first(showPages) != 0) showPages.unshift(0);\n\t\t\tif (Vec.last(showPages) != npage - 1) showPages.push(npage - 1);\n\n\t\t\tfor (let n = 0; n < showPages.length; n++)\n\t\t\t{\n\t\t\t\tlet page = showPages[n];\n\t\t\t\tif (n > 0 && page != showPages[n - 1] + 1) this.divFooter.appendText('...');\n\t\t\t\tif (page != this.curPage)\n\t\t\t\t{\n\t\t\t\t\tlet ahref = dom('<a/>').appendTo(this.divFooter).attr({'href': '#'});\n\t\t\t\t\tahref.setText(`${page + 1}`);\n\t\t\t\t\tahref.onClick((event) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.curPage = page;\n\t\t\t\t\t\tthis.renderMain();\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse this.divFooter.appendHTML(`<span>${page + 1}</span>`);\n\t\t\t}\n\n\t\t\tif (this.curPage < npage - 1)\n\t\t\t{\n\t\t\t\tlet ahref = dom('<a/>').appendTo(this.divFooter).attr({'href': '#'});\n\t\t\t\tahref.setText('Next');\n\t\t\t\tahref.onClick((event) =>\n\t\t\t\t{\n\t\t\t\t\tthis.curPage++;\n\t\t\t\t\tthis.renderMain();\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//this.divFooter.find('a,span').css({'margin-left': '0.25em', 'margin-right': '0.25em'});\n\t\t\tfor (let dom of this.divFooter.findAll('a,span')) dom.css({'margin-left': '0.25em', 'margin-right': '0.25em'});\n\n\t\t\tthis.divFooter.appendText(` (${this.collection.count})`);\n\t\t}\n\t}\n\n\tprivate dividePages():void\n\t{\n\t\tlet sz = this.collection.count;\n\t\tif (sz == 0)\n\t\t{\n\t\t\tthis.pageBlock = [[]];\n\t\t\tthis.curPage = 0;\n\t\t\treturn;\n\t\t}\n\n\t\tlet blk:number[] = [];\n\t\tthis.pageBlock = [blk];\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tif (blk.length >= PAGE_SIZE) this.pageBlock.push(blk = []);\n\t\t\tblk.push(n);\n\t\t}\n\n\t\tthis.curPage = Math.min(this.curPage, this.pageBlock.length - 1);\n\t}\n\n\tprivate createMixture(idx:number, mixture:Mixture):DOM\n\t{\n\t\tlet divOuter = dom('<div/>');\n\t\tif (this.viewType == CollectionPanelView.Detail)\n\t\t{\n\t\t\tdivOuter.css({'display': 'block'});\n\t\t}\n\t\telse // == CollectionPanelView.Card\n\t\t{\n\t\t\tdivOuter.css({'display': 'inline-block'});\n\t\t}\n\n\t\tlet divInner = dom('<div/>').appendTo(divOuter).css({'display': 'flex'});\n\t\tdivInner.css({'margin': '2px', 'padding': '2px', 'border-radius': '4px'});\n\t\tdivInner.css({'background-color': BG_NORMAL, 'border': '1px solid #808080'});\n\n\t\tlet measure = new OutlineMeasurement(0, 0, this.policy.data.pointScale);\n\t\tlet layout = new ArrangeMixture(mixture, measure, this.policy);\n\t\tlayout.arrange();\n\n\t\tlet gfx = new MetaVector();\n\t\tlet draw = new DrawMixture(layout, gfx);\n\t\tdraw.draw();\n\n\t\tlet tag = (idx + 1).toString(), fsz = 10, tpad = 2;\n\t\tlet wad = FontData.measureText(tag, fsz);\n\t\tgfx.drawRect(0, 0, wad[0] + 2 * tpad, wad[1] + 2 * tpad, MetaVector.NOCOLOUR, 0, 0x000000);\n\t\tgfx.drawText(0 + tpad, tpad, tag, fsz, 0xFFFFFF, TextAlign.Top | TextAlign.Left);\n\n\t\tgfx.normalise();\n\t\tlet wrapSVG = dom('<div/>').appendTo(divInner).css({'display': 'inline-block'});\n\t\tdom(gfx.createSVG()).appendTo(wrapSVG).css({'display': 'block'});\n\n\t\tif (this.viewType == CollectionPanelView.Detail) this.displayFields(dom('<div/>').appendTo(divInner), mixture);\n\n\t\treturn divInner;\n\t}\n\n\tprivate changeView(cmd:MenuBannerCommand):void\n\t{\n\t\tif (cmd == MenuBannerCommand.ViewDetail) this.viewType = CollectionPanelView.Detail;\n\t\telse if (cmd == MenuBannerCommand.ViewCard) this.viewType = CollectionPanelView.Card;\n\t\tthis.renderMain();\n\t}\n\n\tprivate changeSelection(idx:number):void\n\t{\n\t\tif (this.selected >= 0)\n\t\t{\n\t\t\tlet div = this.mapMixDiv.get(this.selected);\n\t\t\tif (div) div.css({'background-color': BG_NORMAL});\n\t\t}\n\t\tthis.selected = idx;\n\t\tif (idx >= 0)\n\t\t{\n\t\t\tlet div = this.mapMixDiv.get(idx);\n\t\t\tif (div) div.css({'background-color': BG_SELECTED});\n\t\t}\n\t}\n\n\tprotected actionFileOpen():void\n\t{\n\t\tlet params:OpenDialogOptions =\n\t\t{\n\t\t\t'title': 'Open Mixtures',\n\t\t\t'properties': ['openFile'],\n\t\t\t'filters':\n\t\t\t[\n\t\t\t\t{'name': 'Mixfile Collection', 'extensions': ['json']},\n\t\t\t\t{'name': 'Mixfile', 'extensions': ['mixfile']},\n\t\t\t]\n\t\t};\n\t\telectronDialog.showOpenDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tfor (let fn of value.filePaths)\n\t\t\t{\n\t\t\t\tif (fn.endsWith('.mixfile'))\n\t\t\t\t\topenNewWindow('MixturePanel', fn);\n\t\t\t\telse\n\t\t\t\t\topenNewWindow('CollectionPanel', fn);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected actionFileSave():void\n\t{\n\t\tif (this.editor)\n\t\t{\n\t\t\tthis.stopEdit();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.filename) {this.actionFileSaveAs(); return;}\n\n\t\tthis.saveFile(this.filename);\n\t\tthis.isDirty = false;\n\t\tthis.updateTitle();\n\t}\n\n\tprotected actionFileSaveAs():void\n\t{\n\t\tlet params:SaveDialogOptions =\n\t\t{\n\t\t\ttitle: 'Save Mixfile Collection',\n\t\t\t//defaultPath...\n\t\t\tfilters:\n\t\t\t[\n\t\t\t\t{name: 'Mixfile Collection', extensions: ['json']}\n\t\t\t]\n\t\t};\n\t\telectronDialog.showSaveDialog({}).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tthis.saveFile(value.filePath);\n\t\t\tthis.filename = value.filePath;\n\t\t\tthis.isDirty = false;\n\t\t\tthis.updateTitle();\n\t\t});\n\t}\n\n\tpublic saveFile(filename:string):void\n\t{\n\t\tlet content = this.collection.serialise();\n\n\t\tfs.writeFile(filename, content, (err:any):void =>\n\t\t{\n\t\t\tif (err) alert('Unable to save: ' + err);\n\t\t});\n\t}\n\n\tprivate updateTitle():void\n\t{\n\t\tif (this.filename == null) {document.title = 'Mixture Collection'; return;}\n\n\t\tlet slash = Math.max(this.filename.lastIndexOf('/'), this.filename.lastIndexOf('\\\\'));\n\t\tlet title = 'Mixture Collection - ' + this.filename.substring(slash + 1);\n\t\tif (this.isDirty) title += '*';\n\t\tdocument.title = title;\n\t}\n\n\tprivate updateBanner():void\n\t{\n\t\tlet isEditing = this.editor != null;\n\n\t\tthis.banner.activateButtons(\n\t\t{\n\t\t\t[MenuBannerCommand.EditStructure]: isEditing,\n\t\t\t[MenuBannerCommand.Lookup]: isEditing,\n\t\t\t[MenuBannerCommand.ExportSVG]: isEditing,\n\t\t\t[MenuBannerCommand.Undo]: isEditing,\n\t\t\t[MenuBannerCommand.Redo]: isEditing,\n\t\t\t[MenuBannerCommand.ViewDetail]: !isEditing,\n\t\t\t[MenuBannerCommand.ViewCard]: !isEditing,\n\t\t});\n\t}\n\n\tprivate scrollToIndex(idx:number):void\n\t{\n\t\tif (idx < 0) return;\n\t\tlet div = this.mapMixDiv.get(idx);\n\t\tif (div) this.divMain.el.scrollTop = div.offset().y - this.divMain.offset().y + this.divMain.el.scrollTop;\n\t}\n\n\tprivate editMixture():void\n\t{\n\t\tif (this.selected < 0) return;\n\n\t\tthis.editor = new EditMixtureDesktop(this.inchi, this.proxyClip, this.proxyMenu);\n\n\t\tthis.divMain.empty();\n\t\tthis.editor.render(this.divMain);\n\n\t\tthis.editor.setMixture(this.collection.getMixture(this.selected));\n\t\tthis.editor.setDirty(false);\n\t\tthis.updateBanner();\n\t}\n\n\tprivate stopEdit():void\n\t{\n\t\tif (!this.editor) return;\n\n\t\tlet idx = this.selected;\n\t\tif (this.editor.isDirty())\n\t\t{\n\t\t\tthis.collection.setMixture(idx, this.editor.getMixture());\n\t\t\tthis.isDirty = true;\n\t\t}\n\n\t\tthis.editor = null;\n\t\tthis.renderMain();\n\t\tthis.changeSelection(idx);\n\t\tthis.scrollToIndex(idx);\n\t\tthis.updateBanner();\n\t\tthis.updateTitle();\n\t}\n\n\tprivate clipboardCopy(withCut:boolean):void\n\t{\n\t\tlet idx = this.selected;\n\t\tif (idx < 0 || this.editor) return;\n\n\t\tlet str = this.collection.getMixture(idx).serialise();\n\t\tthis.proxyClip.setString(str);\n\n\t\tif (withCut)\n\t\t{\n\t\t\tthis.collection.deleteMixture(idx);\n\t\t\tthis.isDirty = true;\n\n\t\t\tlet top = this.divMain.el.scrollTop;\n\t\t\tthis.renderMain();\n\t\t\tthis.divMain.el.scrollTop = top;\n\t\t\tthis.updateBanner();\n\t\t\tthis.updateTitle();\n\t\t}\n\t}\n\n\tprivate clipboardPaste():void\n\t{\n\t\tlet mixture = Mixture.deserialise(this.proxyClip.getString());\n\t\tif (!mixture)\n\t\t{\n\t\t\talert('No mixture on clipboard.');\n\t\t\treturn;\n\t\t}\n\t\tthis.appendMixture(mixture);\n\t}\n\n\tprivate deleteMixture():void\n\t{\n\t\tlet idx = this.selected;\n\t\tif (idx < 0 || this.editor) return;\n\t\tthis.collection.deleteMixture(idx);\n\t\tthis.renderMain();\n\t\tif (idx < this.collection.count) this.scrollToIndex(idx);\n\n\t\tthis.isDirty = true;\n\t\tthis.updateTitle();\n\t}\n\n\tprivate appendMixture(mixture?:Mixture):void\n\t{\n\t\tif (!mixture) mixture = new Mixture();\n\n\t\tif (this.editor) return;\n\t\tlet idx:number;\n\t\tif (this.selected < 0)\n\t\t{\n\t\t\tidx = this.collection.appendMixture(mixture);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tidx = this.selected + 1;\n\t\t\tthis.collection.insertMixture(idx, mixture);\n\t\t}\n\t\tthis.dividePages();\n\t\tthis.renderMain();\n\t\tthis.changeSelection(idx);\n\t\tthis.scrollToIndex(idx);\n\n\t\tthis.isDirty = true;\n\t\tthis.updateTitle();\n\t}\n\n\tprivate prependMixture():void\n\t{\n\t\tif (this.editor) return;\n\t\tlet idx = Math.max(0, this.selected);\n\t\tthis.collection.insertMixture(idx, new Mixture());\n\t\tlet top = this.divMain.el.scrollTop;\n\t\tthis.renderMain();\n\t\tthis.changeSelection(idx);\n\t\tthis.divMain.el.scrollTop = top;\n\n\t\tthis.isDirty = true;\n\t\tthis.updateTitle();\n\t}\n\n\tprivate reorderCurrent(dir:number):void\n\t{\n\t\tlet idx = this.selected;\n\t\tif (idx < 0 || idx + dir < 0 || idx + dir >= this.collection.count || this.editor) return;\n\t\tthis.collection.swapMixtures(idx, idx + dir);\n\t\tlet top = this.divMain.el.scrollTop;\n\t\tthis.renderMain();\n\t\tthis.changeSelection(idx + dir);\n\t\tthis.divMain.el.scrollTop = top;\n\n\t\tthis.isDirty = true;\n\t\tthis.updateTitle();\n\t}\n\n\t// alter zoom level by a factor, or reset (null)\n\tpublic zoomScale(scale?:number):void\n\t{\n\t\t// TODO\n\t}\n\n\t// render other fields that are encoded into the root branch of the mixture\n\tprivate displayFields(domParent:DOM, mixture:Mixture):void\n\t{\n\t\tlet items:[string, string][] = [];\n\t\tlet root = mixture.mixfile as Record<string, any>;\n\t\tconst SKIP = ['name', 'molfile', 'quantity', 'ratio', 'units', 'relation', 'mixfileVersion'];\n\t\tfor (let key in root) if (!SKIP.includes(key))\n\t\t{\n\t\t\tlet val = root[key];\n\t\t\tif (typeof val != 'string' && typeof val != 'number') continue;\n\t\t\titems.push([key, val.toString()]);\n\t\t}\n\n\t\tif (items.length == 0) return;\n\n\t\titems.sort((i1, i2) => i1[0].localeCompare(i2[0]));\n\n\t\tdomParent.css({'padding-left': '0.5em'});\n\n\t\tlet flex = dom('<div/>').appendTo(domParent).css({'display': 'flex'});\n\t\tflex.css({'flex-direction': 'row', 'flex-wrap': 'wrap', 'justify-content': 'flex-start', 'align-items': 'flex-start'});\n\n\t\tfor (let [title, label] of items)\n\t\t{\n\t\t\tlet div = dom('<div/>').appendTo(flex).css({'white-space': 'nowrap', 'margin': '0 0.2em 0.2em 0'});\n\t\t\tlet divTitle = dom('<div/>').appendTo(div).css({'display': 'inline-block', 'padding': '0.2em', 'background-color': '#C0C0C0', 'border': '1px solid black'});\n\t\t\tlet divLabel = dom('<div/>').appendTo(div).css({'display': 'inline-block', 'padding': '0.2em', 'background-color': '#F8F8F8', 'border': '1px solid black'});\n\n\t\t\tdivTitle.css({'border-right': 'none'});\n\t\t\tdivTitle.css({'border-radius': '0.2em 0 0 0.2em'});\n\t\t\tdivLabel.css({'border-radius': '0 0.2em 0.2em 0'});\n\n\t\t\tdivTitle.setText(title);\n\t\t\tdivLabel.setText(label);\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {MainPanel} from './MainPanel';\nimport {MixturePanel} from './MixturePanel';\nimport {DOM} from 'webmolkit/util/dom';\nimport {initWebMolKit, Theme} from 'webmolkit/util/Theme';\nimport {OntologyTree} from 'webmolkit/data/OntologyTree';\nimport {ClipboardProxy} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy, MenuProxyContext} from 'webmolkit/ui/MenuProxy';\nimport * as path from 'path';\nimport * as process from 'process';\nimport {ipcRenderer} from 'electron';\nimport {Menu as ElectronMenu, MenuItem as ElectronMenuItem, clipboard as electronClipboard, getCurrentWindow} from '@electron/remote';\nimport {CollectionPanel} from './CollectionPanel';\n\nexport let ON_DESKTOP = false; // by default assume it's running in a regular web page; switch to true if it's the locally\n\t\t\t\t\t\t\t   // executed window version\nexport function setOnDesktop(onDesktop:boolean):void {ON_DESKTOP = onDesktop;}\n\n/*\n\tStartup: gets the ball rolling, and provide some high level window handling.\n*/\n\nexport async function runMixfileEditor(resURL:string, rootID:string):Promise<void>\n{\n\tlet root = DOM.find('#' + rootID);\n\n\tON_DESKTOP = true;\n\tinitWebMolKit(resURL);\n\tawait OntologyTree.init();\n\tawait OntologyTree.main.loadFromURL(resURL + '/data/ontology/metacategory.onto');\n\n\tprocess.env['ELECTRON_DISABLE_SECURITY_WARNINGS'] = 'true';\n\n\tlet url = window.location.href.substring(0, window.location.href.lastIndexOf('/'));\n\tTheme.RESOURCE_URL = path.normalize(url + '/res');\n\n\t// unpack web params: if present, they determine where to go from here\n \tlet params = window.location.search.substring(1).split('&');\n\tlet panelClass:string = null; // default is straight to molecule editing\n\tlet filename:string = null;\n\tfor (let p of params)\n\t{\n\t\tlet eq = p.indexOf('=');\n\t\tif (eq < 0) continue;\n\t\tlet key = p.substring(0, eq), val = decodeURIComponent(p.substring(eq + 1));\n\t\tif (key == 'panel') panelClass = val;\n\t\telse if (key == 'fn') filename = val;\n\t}\n\n\tif (!panelClass && filename && filename.endsWith('.json')) panelClass = 'CollectionPanel';\n\n\tlet proxyClip = new ClipboardProxy();\n\tproxyClip.getString = ():string => electronClipboard.readText();\n\tproxyClip.setString = (str:string):void => electronClipboard.writeText(str);\n\tproxyClip.setHTML = (html:string):void => electronClipboard.writeHTML(html);\n\tproxyClip.canSetHTML = ():boolean => true;\n\tproxyClip.canAlwaysGet = ():boolean => true;\n\n\tlet proxyMenu = new MenuProxy();\n\tproxyMenu.hasContextMenu = () => true;\n\tproxyMenu.openContextMenu = (menuItems:MenuProxyContext[], event:MouseEvent) =>\n\t{\n\t\tlet populate = (emenu:Electron.Menu, itemList:MenuProxyContext[]):void =>\n\t\t{\n\t\t\tfor (let item of itemList)\n\t\t\t{\n\t\t\t\tif (!item || !item.label) emenu.append(new ElectronMenuItem({type: 'separator'}));\n\t\t\t\telse if (item.click) emenu.append(new ElectronMenuItem(item));\n\t\t\t\telse if (item.subMenu)\n\t\t\t\t{\n\t\t\t\t\tlet subMenu = new ElectronMenu();\n\t\t\t\t\tpopulate(subMenu, item.subMenu);\n\t\t\t\t\temenu.append(new ElectronMenuItem({label: item.label, submenu: subMenu}));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tlet menu = new ElectronMenu();\n\t\tpopulate(menu, menuItems);\n\n\t\tmenu.popup({window: getCurrentWindow()});\n\t};\n\n\tlet main:MainPanel;\n\tif (!panelClass || panelClass == 'MixturePanel')\n\t{\n\t\tmain = new MixturePanel(root, proxyClip, proxyMenu);\n\t}\n\telse if (panelClass == 'CollectionPanel')\n\t{\n\t\tmain = new CollectionPanel(root, proxyClip, proxyMenu);\n\t}\n\n\tmain.loadFile(filename);\n\n\tipcRenderer.on('menuAction', (event, args) => main.menuAction(args));\t\n}\n\n// high level functionality for opening a window, with a given panel as content\n/*export function openNewWindow(panelClass:string, filename?:string):void\n{\n\tconst WEBPREF = {nodeIntegration: true, contextIsolation: false, enableRemoteModule: true, spellcheck: false};\n\tlet iconFN = __dirname + '/img/icon.png';\n\tlet bw = new BrowserWindow({width: 900, height: 800, icon: iconFN, webPreferences: WEBPREF});\n\tlet baseApp = path.normalize('file:/' + __dirname);\n\tlet url = baseApp + '/index.html?panel=' + panelClass;\n\tif (filename) url += '&fn=' + encodeURIComponent(filename);\n\tbw.loadURL(url);\n}*/\n\n\nexport function openNewWindow(panelClass:string, filename?:string, options:Record<string, string> = {}):void\n{\n\tlet args:Record<string, string> = {...options};\n\tif (panelClass) args['panelClass'] = panelClass;\n\tif (filename) args['filename'] = filename;\n\tipcRenderer.send('openWindow', args);\n}\n"],"names":["Object","defineProperty","exports","value","getElectronBinding","name","process","_linkedBinding","electronBinding","browserModuleNames","commonModuleNames","get_electron_binding_1","concat","features","isDesktopCapturerEnabled","push","isViewApiEnabled","deserialize","serialize","isSerializableObject","isPromise","electron_1","val","then","Function","constructor","reject","resolve","serializableTypes","Boolean","Number","String","Date","Error","RegExp","ArrayBuffer","isView","some","type","objectMap","source","mapper","targetEntries","entries","map","key","fromEntries","image","representations","scaleFactors","getScaleFactors","length","scaleFactor","size","getSize","buffer","toBitmap","dataURL","toDataURL","__ELECTRON_SERIALIZED_NativeImage__","serializeNativeImage","Array","isArray","nativeImage","createEmpty","width","height","addRepresentation","rep","deserializeNativeImage","CallbacksRegistry","this","nextId","callbacks","callbackIds","WeakMap","locationInfo","add","callback","id","get","set","regexp","stackString","stack","filenameAndLine","match","exec","location","includes","ref","getLocation","apply","args","global","remove","delete","__createBinding","create","o","m","k","k2","undefined","enumerable","__exportStar","p","prototype","hasOwnProperty","call","createFunctionWithReturnValue","getGlobal","getCurrentWebContents","getCurrentWindow","getBuiltin","callbacks_registry_1","type_utils_1","module_names_1","Promise","callbacksRegistry","remoteObjectCache","Map","finalizationRegistry","FinalizationRegistry","deref","ipcRenderer","send","contextId","electronIds","isReturnValue","WeakSet","v8Util","getHiddenValue","getContextId","on","IS_REMOTE_PROXY","Symbol","wrapArgs","visited","Set","valueToMeta","has","meta","Buffer","onFulfilled","onRejected","members","prop","setObjectMembers","object","metaId","member","descriptor","remoteMemberFunction","command","metaToValue","sendSync","descriptorFunction","proxyFunctionProperties","configurable","writable","setObjectPrototype","proto","setPrototypeOf","loaded","loadRemoteProperties","Proxy","target","property","bind","ownKeys","getOwnPropertyNames","getOwnPropertyDescriptor","from","byteOffset","byteLength","metaToError","ret","cached","getCachedRemoteObject","remoteFunction","wr","WeakRef","register","setCachedRemoteObject","obj","handleMessage","channel","handler","event","passedContextId","senderId","console","error","enableStacks","argv","getCurrentStack","captureStackTrace","require","module","returnValue","func","forEach","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","r","toStringTag","isBlank","arr","notBlank","safeArray","len","arrayLength","anyTrue","v","allTrue","anyFalse","allFalse","iterAnyTrue","iterAllTrue","iterAnyFalse","iterAllFalse","swap","idx1","idx2","duplicate","slice","append","item","prepend","unshift","arr1","arr2","idx","splice","flatten","mtx","vec","transpose","sz1","sz2","anyArray","j","i","equals","n","equivalent","len1","compareTo","sz","Math","max","booleanArray","fill","numberArray","stringArray","genericArray","genericBlankArrays","funcArray","first","last","min","MAX_VALUE","MIN_VALUE","idxMin","idxMax","range","lo","hi","reverse","identity0","identity1","identityN","start","notMask","mask","idxGet","maskCount","c","maskIdx","idxMask","maskMap","pos","maskGet","maskEqual","sum","t","sub","mul","neg","setTo","addTo","mulBy","addToArray","subFromArray","mulByArray","divByArray","idxSort","sort","a","b","v1","v2","sorted","sortedUnique","unique","uniqueUnstable","uniqueStable","maskUnique","idxUnique","exclude","excl","count","indexOf","Permutation","parityPerms","parityIdentity","parityOrder","src","smallPermutation","PERM1","PERM2","PERM3","PERM4","allPermutations","SMALL_PERMS","PERM_CACHE","MAX_CACHE","nperms","perms","nonunique","Matrix","s","A","fromArray","clone","numRows","numCols","X","C","norm1","f","abs","normInf","uminus","plus","B","plusEquals","minus","minusEquals","arrayTimes","arrayTimesEquals","arrayRightDivide","arrayRightDivideEquals","arrayLeftDivide","arrayLeftDivideEquals","scalarTimes","scalarTimesEquals","times","Bcolj","Arowi","rank","SingularValueDecomposition","cond","trace","identity","toString","lines","row","JSON","stringify","join","nu","U","V","e","work","nct","nrt","hypot","pp","iter","eps","pow","tiny","kase","ks","cs","sn","scale","sp","spm1","epm1","sk","ek","shift","sqrt","g","getU","getV","getSingularValues","getS","S","norm2","tol","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","result","done","safeInt","str","def","startsWith","parseInt","substring","isNaN","newElement","parent","tag","attr","domNew","domLegacy","el","formatDouble","sigfig","toPrecision","endsWith","colourCode","col","hex","colourAlpha","transp","ONE_OVER_255","colourCanvas","nodeText","node","firstChild","nodeType","nodeValue","nextSibling","container","offset","pageX","x","pageY","y","dom","w","h","css","norm_xy","dx","dy","norm2_xyz","dz","signum","sqr","invZ","fltEqual","realEqual","TWOPI","PI","INV_TWOPI","DEGRAD","RADDEG","th","ceil","angleDiff","th1","th2","theta","minArray","maxArray","findNode","nodeName","findNodes","list","pathRoundedRect","x1","y1","x2","y2","rad","path","Path2D","moveTo","quadraticCurveTo","lineTo","closePath","drawLine","ctx","beginPath","stroke","fontSansSerif","ascent","pixelDensity","window","devicePixelRatio","data","deepClone","escapeHTML","text","replace","KeyCode","readTextURL","url","request","XMLHttpRequest","open","responseType","onload","response","onerror","staticScrollerSize","EPSILON","Triangulation2D","px","py","numTriangles","edgeStack","hull","maxTriangles","triangles","halfedges","hashSize","hullPrev","hullNext","hullTri","hullHash","ids","dists","update","trimConcave","threshold","threshSq","tri","edge","uniqueEdges","edgeCount","ntri","c1","c2","c3","i1","i2","i3","repTri","repEdge","traceOutline","e1","e2","e3","edgePairs","entry","floor","isz","idxMap","g1","g2","sequence","minX","minY","maxX","maxY","centreX","centreY","i0","minDist","POSITIVE_INFINITY","i0x","i0y","i1x","i1y","minRadius","circumRadius","i2x","i2y","isFinite","quicksort","d0","NEGATIVE_INFINITY","orient","pickCircumCentre","hullStart","hullSize","hashKey","addTriangle","xp","yp","q","legalise","pseudoAngle","ar","a0","b0","al","bl","p0","pr","pl","p1","inCircle","hbl","link","br","orientIfSure","rx","ry","qx","qy","l","ax","ay","bx","by","cx","cy","ex","ey","fx","fy","bp","cp","cl","left","right","temp","tempDist","median","GeomUtil","pointInPolygon","phase","areLinesParallel","x3","y3","x4","y4","dxa","dya","dxb","dyb","xmajorA","EPS","lineIntersect","u","isPointOnLineSeg","pointLineDistance","pointLineSegDistance","doLineSegsIntersect","x4_x3","y4_y3","x2_x1","y2_y1","x1_x3","y1_y3","nx","ny","dn","rectsIntersect","w1","h1","w2","h2","sortAngles","idxSortAngles","pop","uniqueAngles","ang","thetaObtuse","dth","emergentAngle","bottom","behind","delta","dotProduct","crossProduct","affineTranslate","affineMirror","xaxis","yaxis","affineScale","sx","sy","affineRotate","cos","sin","affineCompose","tfm","Acol","Brow","applyAffine","applyAffineArray","isAffineMirror","magnitude2","magnitude","dist2","dist","normalise","dsq","inv","normalised","acuteAngle","mag1","mag2","cosTheta","acos","arcControlPoints","t1x","t1y","t2x","t2y","tx","ty","D","createBezierEllipse","rw","rh","nseg","sinTheta","incrAlpha","alpha","cosAlpha","sinAlpha","npt","n1","n2","n3","n4","ctrl","fitCircle","fitEllipse","bestW","bestH","bestScore","shrinkToFit","whs","dmin","invW2","invH2","whsX","whsY","anything","superimpose","thetaA","atan2","rot00","rot01","rot10","rot11","acx","acy","invsz","bcx","bcy","mtxA","mtxB","cov","svd","rotate","convexHull","flatness","algo","QuickHull","hullX","hullY","outlinePolygon","diameter","del","concave","hsz","al1","al2","quickHull","furthestPoint","distance","ux","uy","maxDist","maxPos","Pos","zero","other","scaleBy","mag","offsetBy","withScaleBy","withOffsetBy","Size","isZero","fitInto","maxW","maxH","Box","fromBounds","fromSize","fromOval","oval","getPos","setPos","setSize","midX","midY","area","grow","withGrow","intersects","intersection","x5","y5","x6","y6","contains","union","isEmpty","notEmpty","Oval","fromBox","box","setCentre","setRadius","Line","fromPos","pos1","pos2","setPos1","setPos2","XML","parseXML","strXML","xmlDoc","customParser","parseFromString","DOMParser","doc","customSerial","serializeToString","documentElement","XMLSerializer","toPrettyString","xslt","xsltDoc","xsltProc","XSLTProcessor","importStylesheet","resultDoc","transformToDocument","child","childNodes","childText","tagName","findElement","appendElement","ownerDocument","createElement","appendChild","appendElementAfter","presib","postsib","parentNode","insertBefore","appendText","isCDATA","createCDATASection","createTextNode","createTextChild","textContent","setText","removeChild","findChildElements","childElements","DOM","parse","jquery","elHTML","elInput","elCanvas","xhtml","xml","html","outerHTML","template","document","innerHTML","content","find","selector","querySelector","findAll","nodeList","querySelectorAll","domList","parentElement","ancestor","closest","children","firstElementChild","nextElementSibling","toLocaleLowerCase","exists","isVisible","offsetWidth","offsetHeight","getClientRects","appendTo","prependTo","insertAfter","before","empty","getHTML","setHTML","appendHTML","insertAdjacentHTML","getText","getValue","setValue","getCSS","style","getPropertyValue","setCSS","setProperty","dict","getAttr","hasAttribute","getAttribute","setAttr","setAttribute","addClass","clsnames","cls","split","classList","removeClass","hasClass","clsname","setClass","flag","toggleClass","rect","getBoundingClientRect","win","defaultView","pageXOffset","top","pageYOffset","setBoundaryPixels","setSizePixels","hasFocus","activeElement","grabFocus","delay","setTimeout","focus","removeEvent","removeEventListener","onKeyDown","addEventListener","onKeyUp","onKeyPress","onScroll","onWheel","onClick","onContextMenu","onDblClick","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","onMouseMove","onMouseOver","onChange","onInput","onTouchStart","onTouchMove","onTouchCancel","onTouchEnd","Theme","BASE_URL","RESOURCE_URL","foreground","background","lowlight","lowlightEdge1","lowlightEdge2","highlight","highlightEdge1","highlightEdge2","cssTagsInstalled","hasInlineCSS","head","globalTooltip","globalPopWatermark","addTooltip","bodyHTML","titleHTML","widget","tooltip","Tooltip","stop","clearTooltip","domTooltip","watermark","bodyCallback","raise","avoid","class","body","sanity","zindex","zIndex","div","hasTitle","hasBody","winW","innerWidth","winH","innerHeight","boundDiv","wx1","wy1","wx2","wy2","popW","popH","posX","posY","setPosition","checkParent","MenuBannerCommand","MenuBanner","commands","callbackAction","callbackRefocus","mapDiv","mapSVG","mapActive","selected","render","domParent","divFlex","blk","divBlk","btn","svg","createCommand","cmd","activateButtons","active","addSelected","removeSelected","iconPosition","offsetLeft","offsetTop","icon","lastIndexOf","imgURL","tip","Chemistry","ELEMENTS","ELEMENT_GROUPS","ELEMENT_ROWS","ELEMENT_BLOCKS","ELEMENT_VALENCE","ELEMENT_BONDING","ELEMENT_SHELL","NATURAL_ATOMIC_WEIGHTS","ELEMENT_H","ELEMENT_He","ELEMENT_Li","ELEMENT_Be","ELEMENT_B","ELEMENT_C","ELEMENT_N","ELEMENT_O","ELEMENT_F","ELEMENT_Ne","ELEMENT_Na","ELEMENT_Mg","ELEMENT_Al","ELEMENT_Si","ELEMENT_P","ELEMENT_S","ELEMENT_Cl","ELEMENT_Ar","ELEMENT_K","ELEMENT_Ca","ELEMENT_Sc","ELEMENT_Ti","ELEMENT_V","ELEMENT_Cr","ELEMENT_Mn","ELEMENT_Fe","ELEMENT_Co","ELEMENT_Ni","ELEMENT_Cu","ELEMENT_Zn","ELEMENT_Ga","ELEMENT_Ge","ELEMENT_As","ELEMENT_Se","ELEMENT_Br","ELEMENT_Kr","ELEMENT_Rb","ELEMENT_Sr","ELEMENT_Y","ELEMENT_Zr","ELEMENT_Nb","ELEMENT_Mo","ELEMENT_Tc","ELEMENT_Ru","ELEMENT_Rh","ELEMENT_Pd","ELEMENT_Ag","ELEMENT_Cd","ELEMENT_In","ELEMENT_Sn","ELEMENT_Sb","ELEMENT_Te","ELEMENT_I","ELEMENT_Xe","ELEMENT_Cs","ELEMENT_Ba","ELEMENT_La","ELEMENT_Ce","ELEMENT_Pr","ELEMENT_Nd","ELEMENT_Pm","ELEMENT_Sm","ELEMENT_Eu","ELEMENT_Gd","ELEMENT_Tb","ELEMENT_Dy","ELEMENT_Ho","ELEMENT_Er","ELEMENT_Tm","ELEMENT_Yb","ELEMENT_Lu","ELEMENT_Hf","ELEMENT_Ta","ELEMENT_W","ELEMENT_Re","ELEMENT_Os","ELEMENT_Ir","ELEMENT_Pt","ELEMENT_Au","ELEMENT_Hg","ELEMENT_Tl","ELEMENT_Pb","ELEMENT_Bi","ELEMENT_Po","ELEMENT_At","ELEMENT_Rn","ELEMENT_Fr","ELEMENT_Ra","ELEMENT_Ac","ELEMENT_Th","ELEMENT_Pa","ELEMENT_U","ELEMENT_Np","ELEMENT_Pu","ELEMENT_Am","ELEMENT_Cm","ELEMENT_Bk","ELEMENT_Cf","ELEMENT_Es","ELEMENT_Fm","ELEMENT_Md","ELEMENT_No","ELEMENT_Lr","ELEMENT_Rf","ELEMENT_Db","ELEMENT_Sg","ELEMENT_Bh","ELEMENT_Hs","ELEMENT_Mt","ELEMENT_Ds","ELEMENT_Rg","ELEMENT_Cn","Graph","edge1","edge2","nbrs","indices","labels","props","nbr","fromMolecule","mol","numAtoms","numBonds","bfr","bondFrom","bto","bondTo","fromNeighbours","buff","numNodes","numEdges","getEdge","getEdges","getIndex","setIndex","getLabel","setLabel","lbl","getProperty","prp","addNode","hasEdge","node1","node2","addEdge","removeEdge","isolateNode","keepNodesMask","oldsz","newsz","newmap","newnbrs","keepNodesIndex","removeNodesMask","removeNodesIndex","subgraphIndex","nsz","subgraphMask","calculateComponents","cc","high","calculateComponentGroups","grp","calculateRingBlocks","rblk","plen","numVisited","current","back","nextID","calculateRingBlockGroups","cap","findRingsOfSize","num","rings","newRings","findRingsOfSizeMask","recursiveRingFind","calculateBFS","curnum","lsz","calculateGravity","wght","wmod","psize","capacity","adj","fnd","newPath","fp","flip","look","same","ResonanceRemover","resBonds","atomHyd","maxIter","bondOrders","tolerant","bondOrder","perform","atomHExplicit","correctInputMask","processComponent","na","nb","atno","atomicNumber","atomCharge","atomAdjCount","nodes","findBond","optionalH","Molecule","HEXPLICIT_UNKNOWN","atomElement","gravity","bsz","bgrav","bidx","seq","paths","resultCount","definiteMatch","p2","validPath","count1","count2","a1","a2","BONDARTIFACT_EXTRA_RESPATH","BONDARTIFACT_EXTRA_RESRING","BONDARTIFACT_EXTRA_ARENE","BondArtifact","resPaths","resRings","arenes","atomExtra","appendResPath","appendResRing","appendArene","res","atoms","pack","pathify","centre","getPathBlocks","keys","getRingBlocks","getAreneBlocks","getResPaths","getResRings","getArenes","rewriteMolecule","extra","modified","setAtomExtra","ring","arene","atom","harmoniseNumbering","blocks","stashPaths","clear","nextIdentifier","stashRings","stashArenes","createPath","alreadyExists","atomsAsPath","createRing","atomsAsRing","createArene","atomsAsArene","removeArtifact","pick","overlap","removeAll","bits","requireRing","values","areneAtoms","best","bsum","inkeys","DataSheetColumn","ForeignMoleculeTransient","DataSheet","title","description","colData","rowData","numExtens","extData","withRows","inRow","outRow","cloneMask","colMask","rowMask","inclExtn","outCols","outRows","getData","numExtensions","getExtName","getExtType","getExtData","setExtName","setExtType","setExtData","appendExtension","insertExtension","deleteExtension","colName","colType","colDescr","descr","isNull","findColByName","notNull","ct","getMolecule","getString","getExtend","getObject","datum","fromString","getMoleculeClone","getMoleculeBlank","getInteger","getReal","getBoolean","setToNull","setObject","setMolecule","setString","setInteger","setReal","setBoolean","setExtend","isEqualMolecule","isEqualString","isEqualInteger","isEqualReal","isEqualBoolean","appendColumn","insertColumn","deleteColumn","changeColumnName","changeColumnType","newType","oldType","incompatible","parseFloat","toLowerCase","ensureColumn","reorderColumns","order","appendRow","appendRowFrom","srcDS","insertRow","deleteRow","deleteAllRows","moveRowUp","moveRowDown","swapRows","row1","row2","exciseSingleRow","newData","colIsPrimitive","firstColOfType","copyCell","toRow","toCol","fromDS","fromRow","fromCol","convertType","fromType","toType","ft","tt","safeFloat","round","toInt","toReal","ForeignMolecule","noteAromaticAtoms","atomTransient","AtomAromatic","noteAromaticBonds","bondTransient","BondAromatic","noteZeroDativeBonds","BondZeroDative","noteZeroHydrogenBonds","BondZeroHydrogen","markExplicitValence","valence","trans","filter","tr","AtomExplicitValence","setAtomTransient","noteExplicitValence","markSgroupMultiAttach","keyval","idxHigh","AtomSgroupMultiAttach","payload","hasAnySgroupMultiAttach","noteAllSgroupMultiAttach","eq","sgm","markSgroupMultiRepeat","mult","AtomSgroupMultiRepeat","comma","unit","hasAnySgroupMultiRepeat","noteAllSgroupMultiRepeat","mr","markSgroupData","query","_a","AtomSgroupData","hasAnySgroupData","noteAllSgroupData","sd","POLYMERBLOCK_EXTRA_POLYMER","PolymerBlockConnectivity","QueryTypeAtom","QueryTypeBond","PolymerBlockUnit","connect","bondConn","atomName","bondIncl","bondExcl","dup","PolymerBlock","units","blockAtoms","appendBlock","getIDList","getUnit","getUnits","purgeExtraFields","writeUnit","allKeys","removeUnit","pfx","bondExtra","setBondExtra","createUnit","hasPolymerExtensions","getPolymerExtensions","polext","removePolymerExtensions","nattach","HeadToTail","HeadToHead","Random","hasOuter","atomAdjList","subBits","in1","in2","bonds","formatBlockAtom","nbonds","names","formatBlockBond","bond","idxConn","incl","codeAtom","codeBond","QueryUtil","hasAnyQueryAtom","hasAnyQueryBond","hasQueryAtom","hasQueryBond","deleteQueryAtom","deleteQueryBond","deleteQueryAtomAll","xtra","deleteQueryBondAll","queryAtomString","queryAtomStringList","queryBondString","setQueryAtom","setQueryAtomList","setQueryBond","queryAtomCharges","parseIntegers","Charges","queryAtomAromatic","parseBoolean","Aromatic","queryAtomUnsaturated","Unsaturated","queryAtomElements","parseStrings","Elements","queryAtomElementsNot","ElementsNot","queryAtomRingSizes","RingSizes","queryAtomRingSizesNot","RingSizesNot","queryAtomRingBlock","RingBlock","queryAtomNumRings","NumRings","queryAtomRingBonds","RingBonds","queryAtomAdjacency","Adjacency","queryAtomBondSums","BondSums","queryAtomValences","Valences","queryAtomHydrogens","Hydrogens","queryAtomIsotope","Isotopes","queryAtomSubFrags","parseMolecules","SubFrags","queryAtomSubFragsNot","SubFragsNot","queryBondRingSizes","queryBondRingSizesNot","queryBondRingBlock","queryBondNumRings","queryBondOrders","Orders","setQueryAtomCharges","formatIntegers","setQueryAtomAromatic","formatBoolean","setQueryAtomUnsaturated","setQueryAtomElements","formatStrings","setQueryAtomElementsNot","setQueryAtomRingSizes","setQueryAtomRingSizesNot","setQueryAtomRingBlock","setQueryAtomNumRings","setQueryAtomRingBonds","setQueryAtomAdjacency","setQueryAtomBondSums","setQueryAtomValences","setQueryAtomHydrogens","setQueryAtomIsotope","setQueryAtomSubFrags","formatMolecules","setQueryAtomSubFragsNot","setQueryBondRingSizes","setQueryBondRingSizesNot","setQueryBondRingBlock","setQueryBondNumRings","setQueryBondOrders","strlist","intlist","mols","molstr","MolUtil","STEREOGROUP_EXTRA_RACEMIC","STEREOGROUP_EXTRA_RELATIVE","StereoGroup","hasStereoGroups","chiRac","chiRel","atomHasWedge","getRacemicGroups","getRelativeGroups","getRacemicAtoms","getRelativeAtoms","getRacemicGroupAtoms","getRelativeGroupAtoms","groups","stash","createRacemic","createRelative","removeRacemic","removeRelative","is3D","hasWedge","atomAdjBonds","bt","bondType","BONDTYPE_UNKNOWN","BONDTYPE_INCLINED","BONDTYPE_DECLINED","MDLMOL_VALENCE","MDLMOLReader","strData","parseHeader","parseExtended","allowV3000","considerRescale","keepAromatic","keepParity","keepQuery","molName","overallStereoAbsolute","groupAttachAny","groupAttachAll","groupStereoAbsolute","groupStereoRacemic","groupStereoRelative","groupLinkNodes","groupMixtures","scsrTemplates","parseCTAB","nextLine","keepTransient","line","version","parseV3000","trim","z","chg","stereo","hyd","mapnum","addAtom","setAtomZ","setIs3D","setAtomMapNum","AtomChiralMDLOdd","AtomChiralMDLEven","AtomChiralMDLRacemic","BONDTYPE_NORMAL","addBond","appendBondTransient","setBondTransient","superatoms","mixtures","anum","setAtomElement","stype","index","bracketType","mix","sup","connectType","minRep","maxRep","nbr1","nbr2","logic","charAt","elements","setAtomCharge","setAtomUnpaired","setAtomIsotope","setAtomHExplicit","setBondOrder","countRingBonds","countSubstitutions","postFix","artifacts","applyPolymerBlock","applySuperAtom","hasAbbrev","AtomSCSRClass","atomZ","options","hcount","atomHydrogens","usedValence","unp","atomUnpaired","CoordUtil","normaliseBondDistances","derez","Section","inCTAB","inTemplate","section","lineCounts","lineAtom","lineBond","lineColl","lineSgroup","asdrawnRBC","asdrawnSUB","templateBlocks","ERRPFX","fullLine","Atom","Bond","Coll","SGroup","splitWithQuotes","counts","atomBits","bondBits","parseQueryAtomList","spin","appendAtomTransient","AtomSCSRSeqID","attch","unpackStrings","AtomSCSRAttchOrd","rbc","endpts","attach","dir","setBondType","unpackList","stereoGroup","withoutQuotes","templateClass","natReplace","pts","attachPoints","parseV3000Template","label","not","residual","mod","abvAtom","convertToAbbrevIndex","subsumed","poly","b1","b2","b3","b4","header","mdl","segments","seg","depth","quote","ch","bit","bondInRing","MDLSDFReader","ds","upcastColumns","parseStream","upcastStringColumns","rn","str1","str3","cn","allnull","allreal","allint","allbool","lc","int","VPFX","MDLMOLWriter","includeHeader","includeCounts","includeEnd","enhancedFields","chargeSeparate","abbrevSgroups","polymerBlocks","sgroups","write","writeCTAB","writeV3000","writeCTAB3000","writeEither","triggered","getResult","hasAnyAbbrev","partialAbbrevExpansion","expandAbbrevs","prepareSgroups","atomList1","atomList2","intrpad","elementAtomicNumber","pad","chgidx","chgval","radidx","radval","isoidx","isoval","rgpidx","rgpval","hydidx","hydval","zboidx","zboval","rbcidx","rbcval","subidx","subval","unsidx","unsval","atomX","atomY","rpad","toFixed","atomMapNum","qhyd","mdlValence","atomIsotope","ISOTOPE_NATURAL","qrbc","qsub","quns","maskArom","qbond","writeMBlockPair","writeMBlockFlat","inSgroup","sg","sidx","encodePolymerBlocks","token","writeMBlockFlatIdxFirst","zeroVal","marked","chgmod","bondSum","nativeVal","frag","getAbbrev","clearAbbrev","setAbbrev","expandOneAbbrev","ma","dat","bestIdx","bestSize","MAX_SAFE_INTEGER","skip","polymers","fl1","fl2","bcrs","sgroupText","populateV3000Sgroups","qel","isotope","packV3000Strings","maskHBond","collections","racidx","relidx","packV3000List","populateSCSRTemplates","sid","txt","defn","tmdl","molfile","trimEnd","MDLSDFWriter","colMol","wtr","MoleculeStream","readUnknown","jsonStr","readNative","readMDLMOL","hdr","skUnescape","frto","writeNative","charge","unpaired","hy","skEscape","skEncodeExtra","writeMDLMOL","fromCharCode","code","charCodeAt","toUpperCase","hasZCoord","hasTransient","graph","graphBond","ringID","compID","ring3","ring4","ring5","ring6","ring7","base","trashTransient","getAtom","element","hExplicit","mapNum","transient","getBond","to","bondFromTo","trashGraph","setAtomPos","setAtomX","setAtomY","transi","swapAtoms","setBondFrom","setBondTo","setBondFromTo","deleteAtomAndBonds","deleteBond","HYVALENCE_EL","HYVALENCE_VAL","adjBonds","bondOther","atomExplicit","atomRingBlock","buildGraph","buildRingID","r1","r2","atomConnComp","buildConnComp","boundary","tx1","tx2","appendAtomExtra","appendBondExtra","comp","IDEALBOND","PREFIX_EXTRA","PREFIX_TRANSIENT","atomAtPoint","tolerance","OVERLAP_THRESHOLD","tolsq","sketchEquivalent","mol1","mol2","DEFAULT_EQUIV_TOLERANCE","box1","box2","mx1","arrayAtomX","my1","arrayAtomY","mx2","my2","bestdsq","j1","j2","sketchMappable","atomBondAngles","bndang","overlapsAtom","overlappingAtomMask","thresh","omask","threshSQ","d1","overlappingAtomList","congestionPoint","approach","score","congestionMolecule","mx","my","translateMolecule","ox","oy","rotateMolecule","rotateBond","rotateAtoms","angleNeighbours","mergeAtoms","oldN","newN","centreMolecule","meanX","meanY","deltaX","deltaY","mirrorImage","alignOrientFlip","x0","y0","deltaA","deltaB","dthA","dthB","scoreA","scoreB","atomIsWeirdLinear","Geometry","OVERLAP_THRESHOLD_SQ","SketchUtil","placeNewAtom","placeNewFragment","dirX","dirY","mbox","fbox","vx","vy","fragPosScore","iscore","rangeX","rangeY","mergeOverlappingAtoms","mergeFragmentsDiv","chopmask","remap","div1","div2","exotic","removeDuplicateBonds","mergeFragmentsMask","matchAngleGeometry","geom","GEOM_ANGLES","mtheta","hit","gotall","got","primeDirections","angles","calculateNewBondAngles","exits","exitVectors","nn","guessAtomGeometry","mapAngleSubstituent","atblk","elrow","adjBO","adjAN","pri","allSingle","Linear","Octa1","Octa2","Trigonal","SqPlan","Tetra1","Tetra2","gtheta","asz","gsz","vac","gang","mcount","refitAtomGeometry","inRing","allInRing","bestAng","ww","calculateWalkWeight","newAng","bdiff","diff","ringClash","switchAtomGeometry","dst","geoms","bestAtom","bestX","bestY","curth","pickAtomsToConnect","aidx","AUTO_DSQ","bestDSQ","bestA1","bestA2","conn","pickNewAtomDirection","bestTheta","joinOverlappingAtoms","groupX","groupY","adjb","keepmask","moveToEdge","gotS","gotN","sx1","sy1","sx2","sy2","nx1","ny1","nx2","ny2","SEPTEST","placeAdditionalHydrogens","numH","th3","th4","allViableDirections","proposeNewRing","rsz","snap","chunk","positionSimpleRing","proposeAtomRing","thsnap","angs","bestDelta","proposeBondRing","sign","brad","guidelineSprouts","sprouts","ords","sprout","orders","orBlank","attidx","ABBREV_ATTACHMENT","validateAbbrevs","convertToAbbrev","srcmask","abbrevName","molidx","junction","polymerExtra","fragidx","maskmol","maskfrag","nadj","newmol","newatom","alignCoords","expandedAbbrevs","expandOneAbbrevFrag","connBond","connType","vx1","vy1","vx2","vy2","invidx","subgraphWithAttachments","xmask","xmol","boxm","boxf","deleteAtoms","componentList","getAtomSides","oldmap","ccmax","grps","getBondSides","bf","arrayAtomMapNum","molecularFormula","punctuation","puncEnter","puncExit","puncEnterSuper","puncExitSuper","countC","countH","formula","molecularWeight","mw","iso","an","bpri","el1","el2","limit1","limit2","boB1A1","boB1A2","boB2A1","boB2A2","bad1","bad2","exotic1","exotic2","ccsz","wn","totalHydrogens","hc","stripHydrogens","force","boringHydrogen","createHydrogens","position","atomVec3","atomOxidationState","nonMetal","oxstate","bo","chalco","oxidationStateText","absox","TEMPLATE_ATTACHMENT","InChIDelegate","generate","execLocation","inchi","InChI","super","available","inchiPath","X_OK","hasExecutable","setExecutable","isAvailable","nativeMolfileToInChI","writer","mdlmol","inchiKey","proc","raw","spawnSync","input","stdout","log","MainPanel","root","clientHeight","onResize","menuAction","loadFile","filename","NewMixture","openNewWindow","NewCollection","Open","actionFileOpen","Save","actionFileSave","SaveAs","actionFileSaveAs","customMenuAction","StandardUnits","ClipboardProxyHandler","copyEvent","andCut","proxy","pasteEvent","ClipboardProxy","handlers","pushHandler","popHandler","currentHandler","triggerCopy","execCommand","triggerPaste","setImage","blob","canSetHTML","canAlwaysGet","downloadString","fn","PAIR_UNIT_NAMES","pc","pcWV","pcWW","pcVV","pcMM","ratio","mol_L","mmol_L","umol_L","nmol_L","pmol_L","g_L","mg_L","ug_L","mol_kg","kg","mg","ug","ng","L","mL","uL","nL","mmol","umol","nmol","ppm","ppb","PAIR_UNIT_MINCHI","Units","setup","pair","uri","STANDARD_LIST","COMMON_NAMES","URI_TO_NAME","NAME_TO_URI","URI_TO_MINCHI","standardList","commonNames","uriToName","nameToURI","convertToMInChI","mnemonic","DotPathBond","DotPathCharge","DotPath","calculate","maskBlock","getBondOrders","fract","numer","denom","getBondClasses","classes","bcls","getChargeClasses","ccls","getAggregateCharges","total","nonsingle","pibonded","metalbonded","bondsum","blk1","blk2","impliedPi","adjpi","maskMaybe","COULD_BLOCK","ACIDS","BASES","hasMetal","amask","totalHave","totalWant","others","electrons","Stereochemistry","priority","chiralTetra","STEREO_NONE","cistransBond","squarePlanar","isH","buildPriority","buildTetraChirality","buildBondCisTrans","buildPlanarCisTrans","buildOctaChirality","atomPriority","atomTetraChirality","bondSideStereo","atomPlanarStereo","getPriorities","getAtomTetraChiral","getBondSideStereo","rubricTetrahedral","numShort","numWedges","th0","one","two","xx","yy","zz","rubricSquarePlanar","ninc","ndec","v0","v3","v4","d2","d3","d4","MIN_ANGLE","MAX_ANGLE","th12","th23","th34","th41","rubricBipyrimidal","atom2","atom3","atom4","atom5","ANGLE_OPPOSITE","v5","atom1","v45","cross","rubricOctahedral","slots","bestOpposite","axial","bestOrthogonal","bestOrient","rubric","rubricBondSides","nfr","nto","adj1","adj2","f1","f2","t1","t2","vfr","vto","vbond","vf1","vt1","THRESHSQ","xf1","xt1","xf1N","keepF1T1","keepF2T1","keepF1T2","keepF2T2","vf2","vt2","xf2","xt2","xf2N","haswedge","skip_atom","STEREO_UNKNOWN","parity","STEREO_NEG","STEREO_POS","ringMask","skip_bond","isBondAromatic","pf1","pf2","pt1","pt2","cipgr","anyActualH","prigr","cip","sortAndGroup","nextpri","repartitioned","cmp","uset","STEREO_BROKEN","RUBRIC_EQUIV_TETRA","RUBRIC_EQUIV_SIDES","RUBRIC_EQUIV_SQUARE","RUBRIC_EQUIV_BIPY","RUBRIC_EQUIV_OCTA","MetaMolecule","atomArom","bondArom","rubricTetra","rubricSquare","rubricBipy","rubricOcta","rubricSides","hash","heavyHash","uniqueElements","dots","piAtom","calculateStrictAromaticity","nr","ensurePiAtoms","anyChange","phase1","phase2","calculateRelaxedAromaticity","exocyclic","rblk1","rblk2","rng","valid","arom","calculateStereoRubric","adjc","adjc1","hc1","adjc2","hc2","removeHydrogens","atomMask","bondMask","atomMap","calculateSkeletonHash","skeletonHash","calculateHeavyHash","anyH","getSkeletonHash","hvy","isAtomAromatic","bondOrderArom","getAtomAromaticity","getBondAromaticity","getHeavyHash","getDotPath","getUniqueElements","equivalentTo","timeout","isomorphMatch","uniq1","uniq2","createRubric","createStrict","createStrictRubric","createRelaxed","createRelaxedRubric","crc_table","BOOT_CRC","start_crc","feed_crc","crc","byte","end_crc","CircularFingerprints","kind","hookApplyNewFP","hookConsiderNewFP","resolvedChiral","atomGroup","fplist","atomAdj","bondAdj","make_crc_table","initialIdentityECFP","applyNewFP","hashCode","iteration","centralAtom","niter","newident","circularIterate","growAtoms","considerNewFP","circ","numFP","getFP","getFingerprints","getUniqueHashes","hashes","getFoldedHashes","maxBits","andBits","tanimoto","hash1","hash2","shared","nheavy","nhydr","degree","inring","ru","par","newFP","lookFP","CLASS_ECFP0","CLASS_ECFP2","CLASS_ECFP4","CLASS_ECFP6","DataSheetStream","readXML","summary","extRoot","extList","ext","colList","rowidx","colidx","readJSON","json","writeXML","extension","column","cell","txtNode","writeJSON","nrow","ncol","doConvert","TEMPLATE_FILES","AbbrevContainer","abbrevs","needsSetup","main","setupData","tfn","dsstr","colAbbrev","attcount","firstConn","submitAbbreviation","getAbbrevs","infrag","promote","submitFragment","submitMolecule","inmol","substituteAbbrevName","fragExp","fragMF","fragFP","abbrev","afragExp","afragFP","search","formatAbbrevLabel","abv","nameHTML","nameSearch","pre","mid","post","MetalLigate","metalAtom","ligandAttach","ligands","lig","anyAttached","makeLigandBond","otherLigands","otherTheta","avgTheta","orientLigand","l1","l2","arrangeLigandsFree","arrangeLigandsRange","otherOrder","extent","batch","resolveClashes","ligAtom","mchg","lchg","idxAttach","lx","ly","molExtent","weight","bestLX","bestLY","attTheta","attDist","attDX","attDY","orderAttach","srcX","srcY","dstX","dstY","dtheta","refTheta","refSpan","bounded","thetaMin","thetaSpan","ligandSpan","theta1","theta2","determineThetaBounds","rotTheta","bestMin","bestMax","ablk","bblk","bumpDX","bumpDY","invDist","CLOSE_SQ","tainted","outer","FusionPermutation","attdist","guided","bridged","scoreModifier","chainSelect","TemplateFusion","templ","numAttach","withGuideOnly","guidetempl","guideidx","guideadj","timeLimit","artif1","artif2","poly1","poly2","huntForGuides","permuteNone","oldmol","oldbox","newbox","ROTN","rotmol","display","srcidx","sourceIndex","permuteAtom","timeStart","getTime","newperms","fliptempl","composeGuidedOne","flipmol","composeDirectOne","composeBridge","affixRawPermutations","permuteBond","composeGuidedTwo","composeDirectTwo","permuteMulti","composeGuidedMulti","composeDirectMulti","o1","otheta","ntheta","ocurrent","ncurrent","scoreMod","bfs","pmol","osz","asMask","temidx","removeExtraGuides","o2","oth","nth","oidx","orad","nidx","nrad","lowbfs","busy1","busy2","att","gidx","gx","gy","homoPenalty","oel","nel","RESERVED_GUIDESYMBOL","sel","padj","snapToGuide","isGuideOnTerminal","nudgenew","cx1","cy1","cx2","cy2","midx","tidx","gatom","closeDSQ","npsz","umask","numKeep","scorePermutation","uscore","uidx","perm","tmol","tunion","contained","ai","aj","bo1","bo2","wantTheta","dx1","dy1","dx2","dy2","totalBO","mmask","tfr","tto","tn","wmol","imask","ActivityType","AbsType","MoleculeActivity","activity","param","owner","toClipboard","output","currentAtom","currentBond","selectedMask","subjectMask","subjectLength","subjectIndex","hasSelected","setOwner","evaluate","execute","Delete","execDelete","Clear","execClear","Copy","execCopy","Cut","SelectAll","execSelectAll","SelectNone","SelectPrevComp","execSelectComp","SelectNextComp","SelectSide","execSelectSide","SelectGrow","execSelectGrow","SelectShrink","execSelectShrink","SelectChain","execSelectChain","SelectSmRing","execSelectSmRing","SelectRingBlk","execSelectRingBlk","SelectCurElement","execSelectCurElement","SelectToggle","execSelectToggle","SelectUnCurrent","execSelectUnCurrent","Element","execElement","positionX","positionY","keepAbbrev","Charge","execCharge","Connect","execConnect","Disconnect","execDisconnect","execMetalLigate","BondOrder","execBond","BondType","BondGeom","execBondGeom","BondAtom","execBondAtom","BondSwitch","execBondSwitch","BondRotate","execBondRotate","BondAddTwo","execBondAddTwo","BondInsert","execBondInsert","Join","execJoin","Nudge","execNudge","NudgeLots","NudgeFar","execNudgeFar","Flip","execFlip","axis","Scale","execScale","Rotate","execRotate","BondDist","execBondDist","AlignAngle","execAlignAngle","angle","AlignRegular","execAlignRegular","AdjustTorsion","execAdjustTorsion","Move","execMove","refAtom","Ring","execRing","ringX","ringY","aromatic","execTemplateFusion","fragNative","setPermutations","permutations","AbbrevTempl","execAbbrevTempl","AbbrevGroup","execAbbrevGroup","AbbrevFormula","execAbbrevFormula","AbbrevClear","execAbbrevClear","AbbrevExpand","execAbbrevExpand","BondArtifactPath","BondArtifactRing","BondArtifactArene","BondArtifactClear","execBondArtifact","execPolymerBlock","AddHydrogens","execAddHydrogens","RemoveHydrogens","execRemoveHydrogens","QueryClear","execQueryClear","QueryCopy","execQueryCopy","QueryPaste","execQueryPaste","QuerySetAtom","execQuerySetAtom","QuerySetBond","execQuerySetBond","QueryBondAny","execQueryBondAny","SproutDirection","execSproutDirection","finish","setState","errmsg","showMessage","requireSubject","zapSubject","withCut","performCopy","all","cclist","pickSelectedGroup","requireCurrent","sides","requireSelected","any","maxRB","gotRB","rb","applyQuery","NON_METALS","TRANSITION_METALS","MAIN_GROUPS","zap","killmask","ligAtoms","performBondNew","ccmol","oneComp","performBondChange","performBondGeomAtom","performBondGeomBond","altmol","ac1","ac2","side","mobileSide","baseAng","ang1","ang2","alink","_","fragmask","fusion","isVertical","invSz","connAtoms","curDist","sel1","isSelected","sel2","a3","group1","group3","subj","outmol","pi","checkAbbreviationReady","fixed","requireAtoms","artif","subject","curAtom","removePolymerBlock","performPolymerBlock","selmask","qmol","qterms","aterms","bterms","_b","angleOptions","newAtom","bscore","switchType","stereoType","newang","subjmask","disqualTerminal","side1","side2","weight1","weight2","polymer","NormMixture","mixture","notes","analyse","origins","getOrigins","compList","origin","getComponent","note","contents","enumerateStereo","stereoEnum","childIndexes","sumType","None","sumAmount1","sumAmount2","sumError","toAbsoluteUnits","amount","childType","idxOne","Mass","Volume","Moles","concQuantity","concError","concUnits","concRelation","relation","findNote","splitMolecule","activ","emols","quantity","Mixture","mixfile","mixfileVersion","fromComponent","isComponentEmpty","BITS","hasQuantity","recursiveEqual","deserialise","serialise","beautify","serialiseComponent","getParentComponent","getComponents","nodeEnum","setComponent","deleteComponent","prependBefore","subcomp","SKIP","splitOrigin","regex","regpad","padding","comp1","comp2","dict1","dict2","keys1","keys2","MInChISegment","RenderMnemonicType","BLineType","ExportMInChI","minchi","segment","norm","fillInChI","formulate","modmix","useRatio","inchiList","mcomp","inchiFrag","PFX","builder","assembleContents","appendSegment","Header","Component","layerN","Hierarchy","layerG","Concentration","getSegment","makeLongHashKey","makeShortHashKey","LETTERS","crclist","feedCharacter","letter","NCRC","trunc","formatConcentration","mantissa","exp","determineExponent","unitURI","scaled","tree","subComp","subTree","conc","shaveBeard","minval","log10","ExportSDFile","colHier","colConc","appendComponent","subseq","RenderPolicy","pointScale","resolutionDPI","fontSize","lineSize","bondSep","defaultPadding","atomCols","defaultBlackOnWhite","pixPerAng","policy","defaultWhiteOnBlack","defaultColourOnWhite","defaultColourOnBlack","defaultPrintedPublication","RenderEffects","colAtom","colBond","dottedRectOutline","dottedBondCross","hideAtoms","hideBonds","atomFrameDotSz","atomFrameCol","atomCircleSz","atomCircleCol","atomDecoText","atomDecoCol","atomDecoSize","bondDecoText","bondDecoCol","bondDecoSize","overlapAtoms","FontData","UNITS_PER_EM","INV_UNITS_PER_EM","PANOSE_1","ASCENT","DESCENT","MISSING_HORZ","MISSING_DATA","ASCENT_FUDGE","UNICODE","HORIZ_ADV_X","GLYPH_DATA","OUTLINE_X","OUTLINE_Y","KERN_C1","KERN_C2","KERN_K","pathCache","pathMissing","ctxReference","getKerning","ch1","ch2","measureText","font","measureWidths","xpos","getRawGlyph","getGlyphPath","getMissingPath","getOutlineX","getOutlineY","initNativeFont","canvas","OffscreenCanvas","getContext","measureTextNative","family","opt","save","bold","italic","metrics","restore","FUDGE","OutlineMeasurement","offsetX","offsetY","invScale","angToX","angToY","xToAng","yToAng","yIsUp","FitRotatedEllipse","margin","lookupCache","setupParameters","currentScore","calculateScore","coarseDiscovery","fineImprovement","saveCache","getSpline","cacheMap","cacheVal","psz","invpsz","ptheta","pdist","buffX","buffY","rotatedScore","rtheta","scx","scy","devx","devy","deltaD","deltaR","DELTA_OPTIONS","dw","dh","bestCX","bestCY","bestRW","bestRH","newCX","newCY","newRW","newRH","newScore","REDUCTION","reduc","dCX","dCY","dRW","dRH","closestDSQ","eth","ii","proxSum","ArrangeMolecule","guestimateSize","FONT_CORRECT","numsym","plusH","aw","ah","measure","effects","points","space","wantArtifacts","artifactCharge","artifactUnpaired","artifactFract","getMeasure","getPolicy","getEffects","getScale","setWantArtifacts","want","getArtifacts","setArtifacts","arrange","bondSepPix","lineSizePix","fontSizePix","ymul","artmask","setupBondOrders","fsz","overCol","wad","PADDING","computeSpacePoint","processLabel","bdbl","xy1","shrinkBond","backOffAtom","xy2","ensureMinimumBondLength","qbonds","qtxt","oxy","orthogonalDelta","lx1","ly1","lx2","ly2","bnum","Dotted","computeSpaceLine","rotation","ltype","Normal","Inclined","Declined","Unknown","DotDir","IncDouble","IncTriple","IncQuadruple","invD","ext1","ext2","orderedRingList","processDoubleBond","priorityDoubleSubstit","placeHydrogen","isostr","placeAdjunct","annotateAtom","annotateBond","spc","createCurvedPath","delocalisedAnnotation","createCircularRing","isRing","alkeneLike","createBondCentroid","processPolymerUnit","numPoints","getPoint","getPoints","numLines","getLine","getLines","numRings","getRing","getRings","numPaths","getPath","getPaths","numSpace","getSpace","getSpaces","offsetEverything","offsetOrigin","bounds","determineBoundary","scaleEverything","determineBoundaryBox","squeezeInto","bw","bh","downScale","limitBounds","monochromate","spatialCongestion","congest","delocalise","fractional","angdir","zeroBonds","zpt","bestDX","bestDY","angThresh","shorted","DELTA","dang","viol","countPolyViolations","shortCircuit","ibar","ibrace","chunks","primary","refchunk","bpos","isPrimary","chunkw","tw","bump","xbump","ybump","xy","backOffAtomDelta","d12","invD12","SIZE_ORDER","nring","ringsz","ringbusy","ringscore","ringorder","resbcount","maxbcount","sc","btheta","countFLeft","countFRight","countTLeft","countTRight","idxFLeft","idxFRight","idxTLeft","idxTRight","noshift","ispri","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","bumpAtomPosition","delta1","delta2","delta3","delta4","adjustBondPosition","lt","fussy","SSFRACT","GLYPH_H","emscale","outlineX","outlineY","firstEMW","emw","chp","extraX","extraY","qh","emdx","emdy","srcWAD","RIGHTLEFT","LEFTRIGHT","UPDOWN","DOWNUP","quad","LEFTIES","allLeft","allRight","allUp","allDown","magPX","magPY","bestExt","anyNoClash","subFsz","nglyphs","spaceSubset","subset","hits","nspc","sr","ssz","alt","nf","nt","sumFrom","sumTo","ta","minExt","stepsz","angsz","limX","limY","subSpace","bth","boxOverlaps","pointmask","linemask","resolveLineCrossings","bondHigher","bondLower","pt","isRegular","regDist","NaN","FRACT","pb","mdist","fit","extAtom","symbol","EXT","capA","ncross1","ncross2","fr1","fr2","capB","score1","score2","splineInterpolate","qx1","qy1","qx2","qy2","allUnits","processPolymerUnitPair","brackets","bracket","nestings","u1","u2","nestOrder","nestCount","tagidx","isLinear","isOuter","ym","bsz1","bsz2","BASE_LINE","BASE_TEXT","px2","py2","px3","py3","px1","py1","px4","py4","line1","assign","line2","line3","ypos","dsq1","drawText","xmin","ymin","idxN","idxD2","idxD1","globalInstance","ONTOLOGY_FILES","OntologyTree","roots","mapTerms","alreadyLoaded","init","loadFromURL","getRoots","hasTerm","getBranch","getBranchList","accumulate","branch","loadContent","termList","term","debugString","emit","repeat","SquarePackingSpring","ArrangeMixtureLineSource","TextAlign","PrimClass","SquarePacking","packSize","boxes","hspace","vspace","layout","wantRatio","candidates","cand","idxStart","springs","Weak","processCandidate","Strong","Medium","outline","placed","placeAbove","spring","segs","newsegs","mergeSegmentAbove","placeBelow","mergeSegmentBelow","hiX","loY","hiY","merge","seg1","seg2","ArrangeMixture","components","minBoxSize","showCollapsors","collapsedBranches","packBranches","includeIdentifiers","nameFontSize","limitStructW","limitStructH","hardwrapName","softwrapName","createComponents","layoutSubComponents","contractComponents","molLayout","molBox","scaleComponents","modScale","nameBox","collapseBox","findComponent","formatQuantity","mixcomp","prec","rel","formatNormQuantity","examineBranch","parentIdx","isCollapsed","subOrigin","nameLines","wrapSplitName","Name","qline","Quantity","identifiers","truncateEllipsis","Identifier","metadata","metaString","Meta","minsz","gap","wh","wholeBranch","branchBlock","branchBox","totalWidth","totalHeight","bound","cbox","sq","allChildren","pidx","boundX","idxInside","idxOutside","ellw","keep","SpoolSVG","prettyPrint","spool","whole","inc","dec","MetaVector","types","prims","density","charMissing","lowX","lowY","highX","highY","charMask","primClass","Text","colour","thickness","typeidx","findOrCreateType","updateBounds","drawRect","edgeCol","fillCol","NOCOLOUR","Rect","drawOval","drawPath","xpoints","ypoints","ctrlFlags","isClosed","hardEdge","Path","closed","drawPoly","align","direction","Left","Baseline","Right","Middle","Top","Bottom","mscale","rx1","ry1","rx2","ry2","drawTextNative","fontFamily","TextNative","boundLowX","boundLowY","boundHighX","boundHighY","getBounds","transformPrimitives","transformIntoBox","nw","nh","scaleExtent","maxWidth","maxHeight","sw","sh","swsh","renderInto","renderCanvas","clearFirst","clearRect","renderContext","typeObj","setupTypeLine","setupTypeRect","setupTypeOval","setupTypePath","setupTypeText","setupTypeTextNative","renderLine","renderRect","renderOval","renderPath","renderText","renderTextNative","createSVG","withXlink","renderSVG","svgLine1","svgLineN","svgRect1","svgRectN","svgOval1","svgOvalN","svgPath","svgText","svgTextNative","into","strokeStyle","lineWidth","lineCap","fillStyle","fillRect","strokeRect","ellipse","layer","bezierCurveTo","lineJoin","translate","fillText","defineSVGStroke","defineSVGFill","rects","ovals","shape","typeDef","every","DrawMolecule","vg","mnemonics","getMetaVector","getLayout","draw","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","drawUnderEffects","drawFusedWedge","Artifact","drawBondInclined","drawBondDeclined","drawBondUnknown","drawBondDotted","drawBondIncMulti","fg","bez","Centre","drawOverEffects","wdots","hdots","wspc","hspc","Effect","xdots","ydots","invX","invY","bcount","ixy1","ixy2","inv1","other1","other2","dth1","diff1","dth2","diff2","diff3","terminalPoints","ty1","ty2","outerX","outerY","innerX","innerY","nsteps","invSteps","holdout","ix","iy","radius","nudge","DrawMixture","hoverIndex","activeIndex","selectedIndex","callbackDrawNameLine","drawConnection","drawComponent","xm","yd","bg","Dialog","minPortionWidth","maxPortionWidth","maximumWidth","maximumHeight","minPortionHeight","maxPortionHeight","topMargin","allowScroller","callbackClose","callbackShown","onClose","onShown","domObscureBackground","close","domObscureForeground","domPanelBoundary","divOuter","tdiv","domTitle","bdiv","domBody","ttlTable","tdTitle","tdButtons","domTitleButtons","domClose","populate","repositionSize","bodyDOM","buttonsDOM","docW","dlgW","Widget","contentDOM","domContent","tagType","ButtonViewPosition","ButtonView","parentX","parentY","parentWidth","parentHeight","idealSize","selectedButton","highlightButton","maxButtonColumns","maxButtonRows","border","buttonColNorm1","buttonColNorm2","buttonColActv1","buttonColActv2","buttonColSel1","buttonColSel2","hasBigButtons","prefabImgSize","gripHeight","gripWidth","isRaised","outPadding","inPadding","isMacLike","navigator","platform","setParentSize","applyOffset","redraw","topBank","stackSize","layoutButtons","canvasStyle","mouseClick","mouseDoubleClick","preventDefault","mouseDown","mouseUp","mouseOver","mouseOut","mouseMove","pushBank","bank","buttonView","isSubLevel","replaceCanvas","popBank","bankClosed","refreshBank","getSelectedButton","setSelectedButton","cycleSelected","raiseBank","lowerBank","getHasBigButtons","setHasBigButtons","withinOutline","gw","hg","gh","gripSize","sizeForButtons","nbtn","removeDisplayButtons","addGripButton","buttons","popWidth","popHeight","bestLayout","maxSlotHeight","minSlotHeight","slotWidth","layoutMaxHeight","scoreLayout","maxSlotWidth","minSlotWidth","layoutMaxWidth","ncols","nrows","imgDOM","helpSpan","buttonFromID","col1","col2","grad","createLinearGradient","addColorStop","helpText","keyText","imageFN","oldWidth","oldHeight","metavec","isSubMenu","path1","path2","inset","delayedRedraw","displayFromID","uw","uh","slot","slotHeight","pickButtonIndex","pickButtonID","triggerButton","hitButton","stopImmediatePropagation","stopPropagation","ButtonBank","claimKey","matchKey","mshift","mctrl","malt","mmeta","mkey","shiftKey","ctrlKey","altKey","metaKey","ELEMENTS_NOBLE","ELEMENTS_S_BLOCK","ELEMENTS_P_BLOCK","ELEMENTS_D_BLOCK","ELEMENTS_F_BLOCK","ELEMENTS_ABBREV","CommandType","COMMANDS_MAIN","COMMANDS_ATOM","COMMANDS_BOND","COMMANDS_SELECT","COMMANDS_MOVE","CommandBank","cmdType","Main","Select","Abbrev","populateElements","SBlock","PBlock","DBlock","FBlock","Noble","actv","canUndo","performUndo","canRedo","performRedo","performPaste","autoScale","zoom","alert","getState","listItems","ContextSketch","state","sketcher","proxyClip","menu","accelerator","click","editCurrent","maybeAppend","rotateSub","rotateSubMenu","subMenu","querySub","querySubMenu","molact","DraggingTool","DrawCanvasDecoration","GeomWidgetType","GeomWidgetSelType","DrawCanvas","viewOpt","decoration","showOxState","showQuery","showArtifacts","borderRadius","canvasUnder","canvasMolecule","canvasOver","divMessage","guidelines","filthy","dragType","hoverAtom","hoverBond","opAtom","opBond","opBudged","opShift","opCtrl","opAlt","lassoX","lassoY","lassoMask","clickX","clickY","mouseX","mouseY","dragGuides","templatePerms","currentPerm","fusionBank","cursorWatermark","cursorDX","cursorDY","toolAtomSymbol","toolBondOrder","toolBondType","toolChargeDelta","toolRingArom","toolRingFreeform","toolRotateIncr","redrawCacheKey","abbrevPolicy","divInfo","getSelected","getLassoed","scaleToAng","angToScale","layoutMolecule","sketchEffects","redrawMetaVector","abbrevMol","orientAbbreviation","redrawInfo","redrawUnder","redrawMolecule","redrawOver","cacheKey","divText","HOVER_COL","CURRENT_COL","CURRENT_BORD","SELECT_COL","LASSO_COL","drawPolymerUnit","drawAtomShade","drawBondShade","sfr","sto","lfr","lto","lw","sourceX","sourceY","destX","destY","determineFauxRing","Lasso","Erasor","erasing","determineDragTheta","subjectAtoms","determineMoveDelta","drawOriginatingBond","drawQueryFeatures","allIfNone","useOpAtom","updateLasso","calculateLassoMask","borderCol","anghalo","minRad","invNB","CIRC","snapTo","snapAtom","fh","annots","ap","annot","NPT","THPT","extBonds","inAtoms","outAtoms","flag1","flag2","npWidth","npHeight","selfLinks","innerLinks","outerLinks","isCapped","isExt","anames","setLineDash","pickObject","APPROACH","pickObjectCanvas","limitDist","bestItem","noAtoms","noBonds","chi","MappingNumber","AtomIndex","abbrevAtom","OptionList","htmlLabels","selidx","buttonDiv","auxCell","callbackSelect","composeCSS","getSelectedIndex","getSelectedValue","getAuxiliaryCell","onSelect","table","td","clickButton","updateButtons","setSelectedIndex","setSelectedValue","TabBar","unionHeight","panelDiv","getPanelDOM","idxOrName","grid","columns","underline","panel","rotateSelected","ExtraFieldsWidget","fields","divFields","fillTable","divButtons","getExtraFields","field","getTransientFields","strType","strValue","tdType","tdValue","tdButton","GeomWidget","linkA","linkB","torsA","torsB","hovered","atomSubset","Position","Link","divDiagram","selectionAtoms","Torsion","ANG_RAD","loX","posRad","gfx","outerSel","innerSel","showsel","pf","ox1","oy1","ox2","oy2","thetaM","oxM","oyM","ax3","ay3","ax4","ay4","which","whichSelection","sameSelection","maxRad","closeSel","closeDelta","midtheta","POSITION_TABLE_Y","POSITION_TABLE_X","PeriodicTableWidget","divList","selectedAtno","changeElement","callbackDoubleClick","onDoubleClick","updateSelected","setSelectedElements","elementList","QueryFieldsWidget","makeInput","makeToggleInput","chk","inputCharges","optAromatic","optUnsaturated","chkNotElements","inputElements","chkNotRingSizes","inputRingSizes","optRingBlock","inputNumRings","inputRingBonds","inputAdjacency","inputBondSums","inputValences","inputHydrogens","inputIsotopes","setupAtom","inputOrders","setupBond","updateAtom","splitNumbers","unsat","elem","splitStrings","checked","ringblk","updateBond","elemNot","ringszNot","EditAtom","callbackApply","newX","newY","tabs","abbrevList","svgAbbrev","abbrevIndices","currentAbbrev","initMol","btnApply","applyChanges","selectedTab","populateAtom","populateAbbreviation","populateGeometry","populateQuery","populateExtra","focusable","updateMolecule","selTab","updateAbbrev","updateGeometry","updateQuery","updateExtra","inputSymbol","periodicWidget","inputCharge","inputUnpaired","optionHydrogen","inputHydrogen","disabled","optionIsotope","inputIsotope","inputMapping","inputIndex","divPeriodic","spanSearch","spanList","inputAbbrevSearch","lastSearch","cycleAbbreviation","fillAbbreviations","selectAbbreviation","tableAbbrev","divContainer1","divContainer2","geomWidget","label1","inputGeom1","label2","inputGeom2","refGeom1","refGeom2","queryWidget","fieldsWidget","sym","hcidx","strval1","strval2","instate","mf","abbrevEntries","bgcol","tdLabel","tdStruct","scrollIntoView","EditBond","populateBond","ordersHTML","optionOrder","optionStereo","inputFrom","readOnly","inputTo","CHAR_LOW_A","CHAR_UP_A","indexToAtomLabel","indexToBondLabel","EditPolymer","optionConnect","optionBondConn","currentID","borderAtoms","outBonds","umap","btnRemove","applyRemove","inputNAtoms","inputNBond","populate2x2Conn","getList","domLabel","nvals","inputIncl","inputExcl","ivals","evals","populateUncap","divPreview","renderUnit","keyCode","bondConnOptions","optionList","uncapAtoms","btnUncap","LINES","circle","ToolBankItem","TemplateBank","group","subgroups","templates","resourceData","loadResourceData","prepareSubGroups","prepareTemplates","populateGroups","populateTemplates","titles","preview","molecules","resourceList","msz","colMnemonic","FusionBank","templateAccept","templateRotate","clearPermutations","TOOLS_MAIN","Arrow","Pan","Drag","BondOrder0","BondOrder1","BondOrder2","BondOrder3","BondUnknown","BondInclined","BondDeclined","RingAliph","RingArom","AtomPlus","AtomMinus","ElementPfx","ToolBank","Sketcher","callbackSpecialPaste","inDialog","initialFocus","useToolBank","lowerToolBank","useCommandBank","lowerCommandBank","useTemplateBank","lowerTemplateBank","debugOutput","beenSetup","undoStack","redoStack","fadeWatermark","toolView","commandView","templateView","proxyMenu","defineMolecule","withAutoScale","withStashUndo","keepSelect","stashUndo","stopTemplateFusion","callbackChangeMolecule","renderMolecule","defineClipboard","defineContext","defineMoleculeString","molsk","defineRenderPolicy","defineBackground","borderRad","bgCol","clearMolecule","centreAndShrink","setupAsync","reserveHeight","keyPressed","keyDown","keyUp","touchStart","touchMove","touchCancel","touchEnd","contextMenu","dataTransfer","dropEffect","dropInto","changeSize","btnv","msg","isError","szLeft","szRight","szBottom","clearMessage","layoutTemplatePerm","anySelected","setSelected","changeCurrentAtom","changeCurrentBond","clearSubject","UNDO_SIZE","pickTemplatePermutation","performCopySelection","pasteText","performActivity","newScale","editBond","editAtom","pasteLocal","pasteMolecule","dlg","limW","limH","natW","natH","down","tpolicy","updateHoverCursor","tool","toolApplies","mouseObj","mouseAtom","mouseBond","abbrevThen","abbrevNow","determineDragGuide","single","determineMoveGuide","guides","hitArrowKey","cursorJumpDirection","jumpFromCurrentAtom","jumpFromCurrentBond","jumpFromNowhere","closestDelta","adjTheta","cosdelta","bondTheta","atheta","ctrlArrowKey","sproutDirection","clickObj","interactStart","interactEnd","interactDrag","view","nomod","touches","mouseWheel","openContextMenu","Press","Zoom","BondPfx","inPoly","newOX","newOY","interactEndDrag","interactEndClick","clickAtom","clickBond","autoscale","degrees","prompt","toObj","connectPolymerBlock","transfer","items","files","SUFFIXES","MIMES","getAsString","sfx","reader","FileReader","readAsText","bond1","bond2","atomIn1","atomOut1","atomIn2","atomOut2","highName","ina","inb","nameList","name1","name2","EditCompound","callbackSave","onSave","getSketcher","btnClear","btnCopy","actionCopy","btnSave","skdiv","actionCut","actionPaste","actionUndo","actionRedo","popupBackground","obscureOpacity","callbackPopulate","positionAndShow","client","scrollSize","inner","empiricalScrollerSize","KeyValueWidget","callbackChange","divGrid","rebuildGrid","divKey","divValue","divButton","inputKey","scrapeData","inputValue","btnDelete","divAdd","btnAdd","dval","MetadataWidget","renderTerm","divContent","btnBack","triggerModified","btnAssert","pickExtraTerm","btnProp","pickNewTerm","divParent","branchList","ROOTS","rootURI","popup","populateBranch","isProperty","ROOTS_ASSERT","ROOTS_PROP","callbackClicked","span","QuantityType","RELATION_VALUES","RELATION_LABELS","EditComponent","component","parentSize","areaDescr","areaSyn","callbackSketch","onSketch","btnSketch","invokeSketcher","saveAndClose","vertical","grid1","fieldGrid","createFieldName","lineName","createValueLine","divQuant","createQuantity","createValueMultiline","synonyms","grid2","divFormula","createDiv","lineFormula","placeholder","calculateFormula","calculateWeight","divWeight","lineInChI","calculateInChI","lineSMILES","smiles","links","trapEscape","spellcheck","nullifyBlank","qtype","optQuantType","strQuant1","lineQuantVal1","strQuant2","lineQuantVal2","Value","lineQuantUnits","Range","Ratio","splitLines","topAlign","andEnter","interpretQuantString","flex","dropQuantRel","makeDropdownGroup","spanGap","qubox","btnQuantUnits","selectDropUnits","changeToValue","changeToRange","changeToRatio","low","changeFunc","drop","qstr","regname","isNum","test","qnum1","qnum2","BASE_COMPOUND","PubChemSearch","searchText","results","err","callbackResult","callbackFinished","stopped","cidList","encodeURIComponent","resp","receivedList","IdentifierList","CID","fetchNext","cid","receivedCompound","unpackCompound","NAMECOLS","LookupCompoundDialog","pubchem","resultList","nameSelected","nameDOM","molSelected","molList","molDOM","spanStatus","btnSearch","runSearch","applyResult","populateSearchEntry","resultArea","getName","divInput","searchInput","trapKeys","gotResult","finishedSearch","divMol","selectMolecule","divName","selectName","prev","ExtractCTABComponent","extract","ctab","seed","attachAny","stereoRacemic","stereoRelative","linkNodes","prototypes","enumerateAttachAny","enumerateStereoRacemic","enumerateStereoRelative","enumerateLinkNodes","enumerateMixtures","atomKeep","atomChop","removeAtom","connAtom","cmol","protoClone","affected","nperm","rmol","bitand","molinv","addedAtoms","rproto","leafmask","mapTree","nonemask","atommask","DragReason","EditMixture","callbackUpdateTitle","callbackInteraction","monochrome","dirty","delayedSelect","dragReason","dragIndex","dragX","dragY","isEditing","dlgCompound","structureIntegrity","canvasMixture","refocus","isReceivingCommands","setEditing","compoundEditor","addStructureIntegrityKey","getMixture","setMixture","getCollapsedBranches","clearHistory","isDirty","setDirty","zoomFull","zoomNormal","selectComponent","selectOrigin","complist","editStructure","checkStructureIntegrity","editDetails","lookupCurrent","curX","curY","deleteCurrent","appendToCurrent","prependBeforeCurrent","insertBeforeCurrent","insertAfterCurrent","reorderCurrent","clipboardCopy","clipboardPaste","getComponentPosition","rescale","scaleToFit","ensureComponentVisible","mustFit","pickComponent","pickComponentSection","navigateDirection","newIndex","toggleCollapsed","picked","Any","newMol","integKeys","oldMol","confirm","EditMixtureDesktop","BANNER","EditDetails","EditStructure","Lookup","ExportSVG","Append","Prepend","InsertBefore","InsertAfter","MoveUp","MoveDown","Undo","Redo","Paste","ZoomFull","ZoomIn","ZoomOut","MixturePanel","banner","editor","updateTitle","divBanner","divEditor","saveFile","ExportSDF","actionExportSDF","actionFileExportSVG","CreateMInChI","actionFileCreateMInChI","CopyBranch","ZoomNormal","params","properties","defaultPath","filters","extensions","showOpenDialog","canceled","inPlace","filePaths","showSaveDialog","filePath","exportSDF","sdfile","defPath","lastDot","maker","self","renderResult","yieldDOM","slash","MenuProxy","hasContextMenu","menuItems","MixtureCollection","getMixtureDirect","setMixtureDirect","deleteMixture","appendMixture","appendMixtureDirect","appendCollection","collection","insertMixture","swapMixtures","m1","m2","ViewDetail","ViewCard","CollectionPanelView","BG_NORMAL","CollectionPanel","curPage","pageBlock","viewType","Detail","mapMixDiv","divMain","divFooter","dividePages","renderMain","updateBanner","setCollection","editMixture","prependMixture","zoomScale","changeView","Card","createMixture","changeSelection","npage","ahref","showPages","page","divInner","wrapSVG","displayFields","stopEdit","scrollToIndex","scrollTop","localeCompare","divTitle","divLabel","ON_DESKTOP","setOnDesktop","onDesktop","runMixfileEditor","resURL","rootID","resourcePath","composeMainCSS","initWebMolKit","href","panelClass","decodeURIComponent","readText","writeText","writeHTML","emenu","itemList","submenu"],"sourceRoot":""}